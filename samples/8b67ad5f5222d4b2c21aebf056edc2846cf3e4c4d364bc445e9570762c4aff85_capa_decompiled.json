{
    "00401000": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00401000(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint extraout_ECX;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_74h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_ch;\n    \n    uVar5 = *0x443ba0;\n    // [00] -r-x section size 36864 named .text\n    iVar1 = *0x443b48;\n    if (arg_ch == 0xf) {\n        uVar5 = (*_sym.imp.USER32.dll_BeginPaint)(arg_8h, &var_74h);\n        var_24h = 0;\n        (*_sym.imp.USER32.dll_GetClientRect)(arg_8h, &var_34h);\n        iVar3 = var_28h;\n        var_28h = 0;\n        while( true ) {\n            if (iVar3 <= var_30h) break;\n            iVar6 = iVar3 - var_30h;\n            var_20h = (((*(iVar1 + 0x50) >> 8 & 0xff) * iVar6 + (*(iVar1 + 0x54) >> 8 & 0xff) * var_30h) / iVar3 & 0xffU\n                      ) << 8 | (*(iVar1 + 0x50) * iVar6 + *(iVar1 + 0x54) * var_30h) / iVar3 & 0xffU |\n                      (((*(iVar1 + 0x54) >> 0x10 & 0xffU) * var_30h + (*(iVar1 + 0x50) >> 0x10 & 0xffU) * iVar6) / iVar3\n                      & 0xffU) << 0x10;\n            uVar4 = (*_sym.imp.GDI32.dll_CreateBrushIndirect)(&var_24h);\n            var_28h = var_28h + 4;\n            (*_sym.imp.USER32.dll_FillRect)(uVar5, &var_34h, uVar4);\n            (*_sym.imp.GDI32.dll_DeleteObject)(uVar4);\n            var_30h = var_30h + 4;\n        }\n        if (*(iVar1 + 0x58) != -1) {\n            iVar3 = (*_sym.imp.GDI32.dll_CreateFontIndirectA)(*(iVar1 + 0x34));\n            if (iVar3 != 0) {\n                var_34h = 0x10;\n                var_30h = 8;\n                (*_sym.imp.GDI32.dll_SetBkMode)(uVar5, 1);\n                (*_sym.imp.GDI32.dll_SetTextColor)(uVar5, *(iVar1 + 0x58));\n                pcVar2 = _sym.imp.GDI32.dll_SelectObject;\n                uVar4 = (*_sym.imp.GDI32.dll_SelectObject)(uVar5, iVar3);\n                (*_sym.imp.USER32.dll_DrawTextA)(uVar5, 0x443ba8, 0xffffffff, &var_34h, 0x820);\n                (*pcVar2)(uVar5, uVar4);\n                (*_sym.imp.GDI32.dll_DeleteObject)(iVar3, extraout_ECX);\n            }\n        }\n        (*_sym.imp.USER32.dll_EndPaint)(arg_8h, &var_74h);\n        uVar5 = 0;\n    }\n    else {\n        if (arg_ch == 0x46) {\n            *(arg_14h + 0x18) = *(arg_14h + 0x18) | 0x10;\n            *(arg_14h + 4) = uVar5;\n        }\n        uVar5 = (*_sym.imp.USER32.dll_DefWindowProcA)(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return uVar5;\n}\n",
        "token_count": 969
    },
    "0040164f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.0040164f(void)\n\n{\n    uint *in_EAX;\n    uint32_t uVar1;\n    int32_t **ppiVar2;\n    char *pcVar3;\n    char *pcVar4;\n    code *pcVar5;\n    char *pcVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    int32_t iVar10;\n    int32_t *arg_10h;\n    int32_t *piVar11;\n    uint32_t uVar12;\n    uint uVar13;\n    int32_t iVar14;\n    uint32_t extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint extraout_ECX_02;\n    uint extraout_ECX_03;\n    int32_t iVar15;\n    char cVar16;\n    int32_t iVar17;\n    int32_t iVar18;\n    uint32_t uVar19;\n    uint *puVar20;\n    bool bVar21;\n    int64_t iVar22;\n    ulong uVar23;\n    uint in_stack_fffffe1c;\n    uint in_stack_fffffe20;\n    uint var_1a0h;\n    uint var_19ch;\n    uint var_198h;\n    uint lptstrFilename;\n    int32_t lpszLongPath;\n    uint var_18ch;\n    int32_t var_180h;\n    uint var_17ch;\n    int32_t var_178h;\n    int32_t var_174h;\n    uint var_170h;\n    uint var_166h;\n    uint var_154h;\n    int32_t var_40h;\n    uint32_t var_3ch;\n    uint32_t var_38h;\n    uint32_t var_34h;\n    uint32_t lpLastWriteTime;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    char *var_24h;\n    int32_t *hKey;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    var_180h = *0x443ba0;\n    ppiVar2 = *0x418004;\n    puVar20 = &fcn.0040164f::var_40h;\n    for (iVar14 = 7; iVar14 != 0; iVar14 = iVar14 + -1) {\n        *puVar20 = *in_EAX;\n        in_EAX = in_EAX + 1;\n        puVar20 = puVar20 + 1;\n    }\n    iVar14 = var_38h * 0x2000;\n    iVar15 = iVar14 + 0x44e000;\n    *0x40e000 = &fcn.0040164f::var_3ch;\n    iVar17 = var_3ch * 0x2000;\n    pcVar6 = iVar17 + 0x44e000;\n    if (0x41 < var_40h - 2U) {\ncode_r0x004037d3:\n        uVar19 = 0;\n        goto code_r0x004037d9;\n    }\n    // switch table (66 cases) at 0x40b004\n    switch(*((var_40h - 2U) * 4 + 0x40b004)) {\n    case 0x4016ba:\ncode_r0x00401cb1:\n        fcn.00406dae(in_stack_fffffe1c, in_stack_fffffe20);\n        return 0x7fffffff;\n    case 0x4016ca:\n        *0x447ba8 = *0x447ba8 + 1;\n        if (*0x443ba0 != 0) {\n            (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n            return 0x7fffffff;\n        }\n        return 0x7fffffff;\n    case 0x4016f5:\n        iVar14 = fcn.0040160f(var_3ch);\n        uVar19 = fcn.004037eb(iVar14 + -1, 0);\n        return uVar19;\n    case 0x401718:\n        uVar19 = 0;\n        fcn.00406dae(var_3ch, 0);\n        break;\n    case 0x401731:\n        iVar15 = fcn.00401463();\n        iVar14 = 1;\n        if (0 < iVar15) {\n            iVar14 = iVar15;\n        }\n        uVar19 = 0;\n        (*_sym.imp.KERNEL32.dll_Sleep)(iVar14);\n        break;\n    case 0x401753:\n        uVar19 = 0;\n        (*_sym.imp.USER32.dll_SetForegroundWindow)(*0x443ba0);\n        break;\n    case 0x40176a:\n        if (var_34h == 0) {\n            *(var_3ch * 4 + 0x443ad0) = *(var_3ch * 4 + 0x443b08);\n            uVar13 = fcn.00401463();\n            *(var_3ch * 4 + 0x443b08) = uVar13;\n            uVar19 = 0;\n        }\n        else {\n            *(var_3ch * 4 + 0x443b08) = *(var_3ch * 4 + 0x443ad0);\n            uVar19 = 0;\n        }\n        break;\n    case 0x4017ab:\n        uVar19 = *(var_34h * 4 + 0x443b08);\n        uVar12 = (&fcn.0040164f::var_3ch)[uVar19 == 0];\n        *(var_34h * 4 + 0x443b08) = uVar19 & lpLastWriteTime;\n        return uVar12;\n    case 0x4017cf:\n        uVar19 = 0;\n        fcn.00407949(pcVar6, *(var_38h * 4 + 0x443b08));\n        break;\n    case 0x4017eb:\n        if (*0x447bac != 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(*0x447bac, var_38h);\n        }\n        uVar19 = 0;\n        if (*0x447bb0 != 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(*0x447bb0, var_3ch);\n        }\n        break;\n    case 0x40182a:\n        uVar13 = fcn.00401414();\n        iVar14 = (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(uVar13, var_38h);\n        uVar19 = iVar14 == 0;\n        break;\n    case 0x401855:\n        uVar19 = 0;\n        uVar13 = fcn.00401414();\n        pcVar6 = fcn.00407688(uVar13);\n        pcVar5 = _sym.imp.KERNEL32.dll_CreateDirectoryA;\n        if (pcVar6 != NULL) {\n            do {\n                pcVar6 = fcn.004075ec(pcVar6, 0x5c);\n                cVar16 = *pcVar6;\n                *pcVar6 = '\\0';\n                uVar23 = (*pcVar5)(uVar13, 0);\n                uVar9 = uVar23 >> 0x20;\n                if (uVar23 == 0) {\n                    iVar14 = (*_sym.imp.KERNEL32.dll_GetLastError)(uVar9, uVar9);\n                    if (iVar14 == 0xb7) {\n                        uVar12 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(uVar13);\n                        uVar19 = uVar19 + ((uVar12 & 0x10) == 0);\n                    }\n                    else {\n                        uVar19 = uVar19 + 1;\n                    }\n                }\n                *pcVar6 = cVar16;\n                pcVar6 = pcVar6 + 1;\n            } while (cVar16 != '\\0');\n        }\n        if (var_38h == 0) {\n            fcn.00401630(0xfffffff5);\n        }\n        else {\n            fcn.00401630(0xffffffe6);\n            uVar9 = fcn.00407a0d(0x47a000, uVar13);\n            (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryA)(uVar13, uVar9);\n        }\n        break;\n    case 0x40193a:\n        uVar13 = fcn.00401414();\n        iVar14 = fcn.00407e00(uVar13);\n        lpLastWriteTime = var_38h;\n        goto joined_r0x00401f73;\n    case 0x40194e:\n        uVar13 = fcn.00401414();\n        uVar9 = fcn.00401414();\n        fcn.00401414();\n        iVar14 = (*_sym.imp.KERNEL32.dll_MoveFileA)(uVar13, uVar9);\n        if (iVar14 == 0) {\n            uVar19 = 1;\n            if ((var_34h != 0) && (iVar14 = fcn.00407e00(uVar13),  iVar14 != 0)) {\n                uVar19 = 0;\n                fcn.00407f42(uVar13, uVar9);\n                fcn.00401630(0xffffffe4);\n            }\n        }\n        else {\n            uVar19 = 0;\n            fcn.00401630(0xffffffe3);\n        }\n        break;\n    case 0x4019da:\n        pcVar6 = fcn.00401414();\n        iVar17 = (*_sym.imp.KERNEL32.dll_GetFullPathNameA)(pcVar6, 0x2000, iVar15, &fcn.0040164f::var_24h);\n        if (iVar17 == 0) {\n            *(iVar14 + 0x44e000) = 0;\ncode_r0x00401a59:\n            uVar19 = 1;\n        }\n        else {\n            uVar19 = 0;\n            if ((pcVar6 < var_24h) && (*var_24h != '\\0')) {\n                iVar17 = fcn.00407e00(pcVar6);\n                if (iVar17 == 0) {\n                    *(iVar14 + 0x44e000) = 0;\n                    goto code_r0x00401a59;\n                }\n                fcn.00407a0d(var_24h, iVar17 + 0x2c);\n            }\n        }\n        if (var_34h == 0) {\n            (*_sym.imp.KERNEL32.dll_GetShortPathNameA)(iVar15, iVar15, 0x2000);\n        }\n        break;\n    case 0x401a8b:\n        uVar19 = 0;\n        uVar13 = fcn.00401414();\n        iVar14 = (*_sym.imp.KERNEL32.dll_SearchPathA)(0, uVar13, 0, 0x2000, pcVar6, &fcn.0040164f::var_24h);\n        if (iVar14 == 0) {\n            *(iVar17 + 0x44e000) = 0;\n            uVar19 = 1;\n        }\n        break;\n    case 0x401adc:\n        uVar13 = fcn.00401414();\n        iVar14 = fcn.0040782e(pcVar6, uVar13);\n        uVar19 = iVar14 == 0;\n        break;\n    case 0x401b02:\n        uVar13 = fcn.00401414();\n        uVar19 = var_3ch & 7;\n        iVar14 = fcn.0040765a(uVar13);\n        if (iVar14 == 0) {\n            uVar23 = fcn.00407a0d(0x40e004, 0x47a000);\n            uVar8 = uVar23 >> 0x20;\n            uVar9 = fcn.004075a6(uVar23);\n            fcn.00407a40(uVar9, uVar13, uVar8);\n        }\n        else {\n            fcn.00407a0d(0x40e004, uVar13);\n        }\n        uVar9 = fcn.00407a4b(0x40e004);\n        if (2 < uVar19) {\n            iVar14 = fcn.00407e00(0x401b7e);\n            iVar22 = extraout_ECX << 0x20;\n            if (iVar14 != 0) {\n                iVar22 = (*_sym.imp.KERNEL32.dll_CompareFileTime)(iVar14 + 0x14);\n            }\n            uVar9 = iVar22 >> 0x20;\n            uVar19 = (iVar22 & (uVar19 - 3 | 0x80000000)) == 0;\n        }\n        if (uVar19 != 0) {\n            iVar14 = (uVar19 != 1) + 1;\n            goto code_r0x00401bce;\n        }\n        do {\n            uVar9 = 0x40e004;\n            fcn.004077a0(0x40e004);\n            iVar14 = 2;\ncode_r0x00401bce:\n            iVar14 = fcn.004077d2(0x40e004, 0x40000000, iVar14);\n            if (iVar14 != -1) {\n                fcn.00406dae(0xffffffea, uVar13);\n                *0x443b3c = *0x443b3c + 1;\n                iVar15 = fcn.00403cee(var_34h, iVar14, 0, 0);\n                *0x443b3c = *0x443b3c + -1;\n                if ((lpLastWriteTime != 0xffffffff) || (var_2ch != 0xffffffff)) {\n                    (*_sym.imp.KERNEL32.dll_SetFileTime)\n                              (iVar14, &fcn.0040164f::lpLastWriteTime, 0, &fcn.0040164f::lpLastWriteTime);\n                }\n                uVar19 = 0;\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar14);\n                if (-1 < iVar15) goto code_r0x004037d9;\n                if (iVar15 == -2) {\n                    fcn.00407b1f(0x40e004, 0xffffffe9);\n                    fcn.00407a40(uVar9, uVar13, 0x40e004);\n                }\n                else {\n                    fcn.00407b1f(0x40e004, 0xffffffee);\n                }\n                uVar13 = 0x40e004;\n                goto code_r0x00402c26;\n            }\n            if (uVar19 != 0) {\n                fcn.00406dae(0xffffffe2, uVar13);\n                uVar19 = uVar19 == 2;\n                goto code_r0x004037d9;\n            }\n            fcn.00407a0d(0x412004, 0x44e000);\n            fcn.00407a0d(0x44e000, 0x40e004);\n            fcn.00407b1f(0x410004, var_28h);\n            fcn.00407a0d(0x44e000, 0x412004);\n            iVar14 = fcn.00407532(0x410004, var_3ch >> 3);\n        } while (iVar14 == 4);\n        if (iVar14 != 5) {\n            in_stack_fffffe20 = 0x40e004;\n            in_stack_fffffe1c = 0xfffffffa;\n            goto code_r0x00401cb1;\n        }\n        *0x443b10 = *0x443b10 + 1;\n        goto code_r0x004037df;\n    case 0x401d9a:\n        uVar19 = 0;\n        uVar13 = fcn.00401414();\n        fcn.004081e3(uVar13, var_38h);\n        break;\n    case 0x401db9:\n        uVar19 = 1;\n        uVar13 = fcn.00401414();\n        uVar12 = fcn.00407532(uVar13, var_3ch);\n        if (uVar12 != 0) {\n            if (uVar12 == var_34h) {\n                return lpLastWriteTime;\n            }\n            uVar19 = 0;\n            if (uVar12 == var_2ch) {\n                return var_28h;\n            }\n        }\n        break;\n    case 0x401dfd:\n        uVar13 = fcn.00401414();\n        fcn.004081e3(uVar13, var_38h);\n        uVar19 = 0;\n        break;\n    case 0x401e1f:\n        uVar19 = 0;\n        uVar13 = fcn.00401414();\n        uVar13 = fcn.00407a35(uVar13);\n        fcn.00407949(pcVar6, uVar13);\n        break;\n    case 0x401e47:\n        lpszLongPath = fcn.00401463();\n        iVar14 = fcn.00401463();\n        iVar15 = fcn.00401414();\n        *(iVar17 + 0x44e000) = 0;\n        if ((lpszLongPath != 0) || (uVar19 = 0,  var_34h == 0)) {\n            iVar10 = fcn.00407a35(iVar15);\n            if (iVar14 < 0) {\n                uVar19 = 0;\n                iVar14 = iVar14 + iVar10;\n                if (iVar14 < 0) break;\n            }\n            if (iVar10 < iVar14) {\n                iVar14 = iVar10;\n            }\n            uVar19 = 0;\n            uVar13 = fcn.00407a0d(pcVar6, iVar15 + iVar14);\n            if (lpszLongPath != 0) {\n                if (lpszLongPath < 0) {\n                    iVar14 = fcn.00407a35(pcVar6, uVar13);\n                    lpszLongPath = lpszLongPath + iVar14;\n                    if (-1 < lpszLongPath) goto code_r0x00401f0b;\n                    lpszLongPath = 0;\n                }\n                else {\ncode_r0x00401f0b:\n                    uVar19 = 0;\n                    if (0x1fff < lpszLongPath) break;\n                }\n                uVar19 = 0;\n                *(lpszLongPath + 0x44e000 + iVar17) = 0;\n            }\n        }\n        break;\n    case 0x401f3e:\n        uVar13 = fcn.00401414();\n        uVar9 = fcn.00401414();\n        if (var_2ch == 0) {\n            iVar14 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)();\n        }\n        else {\n            iVar14 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(uVar13, uVar9);\n        }\n        goto joined_r0x00401f73;\n    case 0x401f7e:\n        uVar13 = fcn.00401414();\n        iVar14 = (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsA)(uVar13, pcVar6, 0x2000);\n        if ((iVar14 == 0) ||\n           ((uVar19 = 0,  var_34h != 0 && (iVar14 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(uVar13, pcVar6),  iVar14 == 0))))\n        {\n            *(iVar17 + 0x44e000) = 0;\n            uVar19 = 1;\n        }\n        *(iVar17 + 0x44ffff) = 0;\n        break;\n    case 0x401fe3:\n        uVar19 = fcn.00401463();\n        uVar12 = fcn.00401463();\n        if (var_28h != 0) {\n            if (uVar19 < uVar12) {\n                return lpLastWriteTime;\n            }\n            if (uVar19 <= uVar12) {\n                return var_34h;\n            }\n            return var_2ch;\n        }\n        if (uVar19 < uVar12) {\n            return lpLastWriteTime;\n        }\n        if (uVar19 <= uVar12) {\n            return var_34h;\n        }\n        return var_2ch;\n    case 0x402022:\n        uVar19 = 0;\n        uVar12 = fcn.00401463();\n        uVar1 = fcn.00401463();\n        if (0xc < lpLastWriteTime) goto code_r0x004020b3;\n    // switch table (13 cases) at 0x40b10c\n        switch(*(lpLastWriteTime * 4 + 0x40b10c)) {\n        case 0x40204c:\n            uVar12 = uVar12 + uVar1;\n            break;\n        case 0x402050:\n            uVar12 = uVar12 - uVar1;\n            break;\n        case 0x402054:\n            uVar12 = uVar12 * uVar1;\n            break;\n        case 0x402059:\n            if (uVar1 == 0) {\ncode_r0x004020ac:\n                uVar12 = 0;\n                uVar19 = 1;\n                goto code_r0x004020b3;\n            }\n            uVar12 = uVar12 / uVar1;\n            break;\n        case 0x402066:\n            uVar12 = uVar12 | uVar1;\n            break;\n        case 0x40206a:\n            uVar12 = uVar12 & uVar1;\n            break;\n        case 0x40206e:\n            uVar12 = uVar12 ^ uVar1;\n            break;\n        case 0x402072:\n            bVar21 = uVar12 == 0;\n            goto code_r0x0040207e;\n        case 0x402079:\n            bVar21 = (uVar1 | uVar12) != 0;\ncode_r0x0040207e:\n            uVar12 = bVar21;\n            break;\n        case 0x402083:\n            uVar12 = uVar1 != 0 && uVar12 != 0;\n            break;\n        case 0x402095:\n            if (uVar1 == 0) goto code_r0x004020ac;\n            uVar12 = uVar12 % uVar1;\n            break;\n        case 0x4020a2:\n            uVar12 = uVar12 << (uVar1 & 0x1f);\n            break;\n        case 0x4020a6:\n            uVar12 = uVar12 >> (uVar1 & 0x1f);\n        }\n        uVar19 = 0;\ncode_r0x004020b3:\n        fcn.00407949(pcVar6, uVar12);\n        break;\n    case 0x4020c6:\n        uVar19 = 0;\n        uVar13 = fcn.00401414();\n        uVar9 = fcn.00401463();\n        (*_sym.imp.USER32.dll_wsprintfA)(pcVar6, uVar13, uVar9);\n        break;\n    case 0x4020f4:\n        if (var_34h == 0) {\n            if (var_38h == 0) {\n                uVar19 = 0;\n                ppiVar2 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, 0x2004);\n                fcn.00407b1f(ppiVar2 + 1, var_3ch);\n                *ppiVar2 = *0x418004;\n                *0x418004 = ppiVar2;\n            }\n            else {\n                uVar19 = 1;\n                if (*0x418004 != NULL) {\n                    uVar19 = 0;\n                    fcn.00407a0d(pcVar6, *0x418004 + 1);\n                    *0x418004 = *ppiVar2;\n                    (*_sym.imp.KERNEL32.dll_GlobalFree)(ppiVar2, pcVar6);\n                }\n            }\n        }\n        else {\n            do {\n                var_34h = var_34h - 1;\n                if (ppiVar2 == NULL) goto code_r0x00402c05;\n                ppiVar2 = *ppiVar2;\n            } while (var_34h != 0);\n            if (ppiVar2 == NULL) goto code_r0x00402c05;\n            uVar19 = 0;\n            fcn.00407a0d(0x40e004, ppiVar2 + 1);\n            fcn.00407a0d(ppiVar2 + 1, *0x418004 + 1);\n            fcn.00407a0d(*0x418004 + 1, 0x40e004);\n        }\n        break;\n    case 0x4021e5:\n        uVar13 = fcn.00401463();\n        uVar9 = fcn.00401463();\n        if ((var_28h & 1) != 0) {\n            uVar13 = fcn.00401414();\n        }\n        if ((var_28h & 2) != 0) {\n            uVar9 = fcn.00401414();\n        }\n        if (var_40h == 0x21) {\n            uVar8 = fcn.00401463();\n            uVar7 = fcn.00401463();\n            if (var_28h >> 2 == 0) {\n                var_24h = (*_sym.imp.USER32.dll_SendMessageA)(uVar8, uVar7, uVar13, uVar9);\n                goto code_r0x004022ea;\n            }\n            iVar14 = (*_sym.imp.USER32.dll_SendMessageTimeoutA)\n                               (uVar8, uVar7, uVar13, uVar9, 0, var_28h >> 2, &fcn.0040164f::var_24h);\n            uVar19 = iVar14 == 0;\n        }\n        else {\n            pcVar4 = fcn.00401414();\n            pcVar3 = fcn.00401414();\n            if (*pcVar3 == '\\0') {\n                pcVar3 = NULL;\n            }\n            if (*pcVar4 == '\\0') {\n                pcVar4 = NULL;\n            }\n            var_24h = (*_sym.imp.USER32.dll_FindWindowExA)(uVar13, uVar9, pcVar4, pcVar3);\ncode_r0x004022ea:\n            uVar19 = 0;\n        }\n        if (-1 < var_3ch) {\n            fcn.00407949(pcVar6, var_24h);\n        }\n        break;\n    case 0x402312:\n        uVar13 = fcn.00401463();\n        iVar14 = (*_sym.imp.USER32.dll_IsWindow)(uVar13);\n        lpLastWriteTime = var_38h;\njoined_r0x00401f73:\n        if (iVar14 == 0) {\n            return var_34h;\n        }\n        return lpLastWriteTime;\n    case 0x402337:\n        uVar13 = fcn.00401463();\n        uVar9 = fcn.00401463();\n        uVar13 = (*_sym.imp.USER32.dll_GetDlgItem)(uVar9, uVar13);\n        fcn.00407949(pcVar6, uVar13);\n        uVar19 = 0;\n        break;\n    case 0x402371:\n        uVar19 = 0;\n        iVar14 = *0x443b74 + var_38h;\n        uVar13 = fcn.00401463();\n        (*_sym.imp.USER32.dll_SetWindowLongA)(uVar13, 0xffffffeb, iVar14);\n        break;\n    case 0x40239f:\n        uVar13 = (*_sym.imp.USER32.dll_GetDlgItem)(*0x443ba0, var_38h);\n        (*_sym.imp.USER32.dll_GetClientRect)(uVar13, &fcn.0040164f::var_180h);\n        uVar9 = fcn.00401414(extraout_ECX_00, extraout_ECX_00);\n        uVar19 = 0;\n        uVar9 = (*_sym.imp.USER32.dll_LoadImageA)(0, uVar9, 0, var_34h * var_178h, var_174h * var_34h, 0x10);\n        iVar14 = (*_sym.imp.USER32.dll_SendMessageA)(uVar13, 0x172, 0, uVar9);\n        if (iVar14 != 0) {\n            (*_sym.imp.GDI32.dll_DeleteObject)(iVar14);\n        }\n        break;\n    case 0x40244a:\n        uVar13 = (*_sym.imp.USER32.dll_GetDC)(*0x443ba0);\n        uVar13 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar13, 0x5a);\n        uVar9 = fcn.00401463(extraout_ECX_01, extraout_ECX_01);\n        *0x418008 = (*_sym.imp.KERNEL32.dll_MulDiv)(uVar9, uVar13, 0x48);\n        *0x418008 = -*0x418008;\n        *0x418018 = fcn.00401463();\n        *0x41801f = 1;\n        *0x41801c = var_2ch & 1;\n        *0x41801e = var_2ch & 4;\n        *0x41801d = var_2ch & 2;\n        fcn.00407b1f(0x418024, var_38h);\n        uVar13 = (*_sym.imp.GDI32.dll_CreateFontIndirectA)(0x418008, uVar13);\n        uVar19 = 0;\n        fcn.00407949(pcVar6, uVar13);\n        break;\n    case 0x402507:\n        uVar13 = fcn.00401463();\n        uVar9 = fcn.00401463();\n        if (lpLastWriteTime == 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)();\n            uVar19 = 0;\n        }\n        else {\n            (*_sym.imp.USER32.dll_EnableWindow)(uVar13, uVar9);\n            uVar19 = 0;\n        }\n        break;\n    case 0x402545:\n        pcVar6 = fcn.00401414();\n        uVar13 = fcn.00401414();\n        pcVar4 = fcn.00401414();\n        fcn.00401414();\n        fcn.00401630(0xffffffec);\n        if (*pcVar4 == '\\0') {\n            pcVar4 = NULL;\n        }\n        if (*pcVar6 == '\\0') {\n            pcVar6 = NULL;\n        }\n        iVar14 = (*_sym.imp.SHELL32.DLL_ShellExecuteA)(var_180h, pcVar6, uVar13, pcVar4, 0x47a000, lpLastWriteTime);\n        uVar19 = iVar14 < 0x21;\n        break;\n    case 0x4025c7:\n        pcVar4 = fcn.00401414();\n        fcn.00406dae(0xffffffeb, pcVar4);\n        uVar19 = 1;\n        iVar14 = fcn.00407474(pcVar4);\n        pcVar5 = _sym.imp.KERNEL32.dll_WaitForSingleObject;\n        if (iVar14 != 0) {\n            if (var_34h == 0) {\ncode_r0x0040265a:\n                uVar19 = 0;\n                pcVar6 = pcVar4;\n            }\n            else {\n                while( true ) {\n                    uVar23 = (*pcVar5)(iVar14, 100, var_3ch);\n                    var_3ch = uVar23 >> 0x20;\n                    if (uVar23 != 0x102) break;\n                    fcn.00408490(0xf);\n                }\n                (*_sym.imp.KERNEL32.dll_GetExitCodeProcess)(iVar14, &fcn.0040164f::var_24h);\n                if (-1 < var_38h) {\n                    fcn.00407949(iVar15, var_24h);\n                    pcVar4 = var_24h;\n                    goto code_r0x0040265a;\n                }\n                uVar19 = var_24h != NULL;\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar14, pcVar6);\n        }\n        break;\n    case 0x402678:\n        uVar13 = fcn.00401414();\n        iVar10 = fcn.00407e00(uVar13);\n        if (iVar10 == 0) {\n            uVar19 = 1;\n            *(iVar17 + 0x44e000) = 0;\n            *(iVar14 + 0x44e000) = 0;\n        }\n        else {\n            fcn.00407949(iVar15, *(iVar10 + 0x14));\n            fcn.00407949(pcVar6, *(iVar10 + 0x18));\n            uVar19 = 0;\n        }\n        break;\n    case 0x4026de:\n        uVar19 = 1;\n        uVar13 = fcn.00401414();\n        iVar10 = sub.VERSION.dll_GetFileVersionInfoSizeA(uVar13, &fcn.0040164f::hKey);\n        *(iVar17 + 0x44e000) = 0;\n        *(iVar14 + 0x44e000) = 0;\n        if ((iVar10 != 0) && (iVar14 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, iVar10),  iVar14 != 0)) {\n            iVar17 = sub.VERSION.dll_GetFileVersionInfoA(uVar13, 0, iVar10, iVar14);\n            if ((iVar17 != 0) &&\n               (iVar17 = sub.VERSION.dll_VerQueryValueA\n                                   (iVar14, 0x40b000, &fcn.0040164f::var_24h, &fcn.0040164f::var_1ch),  iVar17 != 0)) {\n                uVar19 = 0;\n                fcn.00407949(pcVar6, *(var_24h + 8));\n                fcn.00407949(iVar15, *(var_24h + 0xc));\n            }\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(iVar14);\n        }\n        break;\n    case 0x4027d9:\n        if (*0x443b40 < 0) {\n            fcn.00401630(0xffffffe7);\n            uVar19 = 1;\n        }\n        else {\n            uVar13 = fcn.00401414();\n            uVar9 = fcn.00401414();\n            if (((var_2ch == 0) || (iVar14 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar13),  iVar14 == 0)) &&\n               (iVar14 = (*_sym.imp.KERNEL32.dll_LoadLibraryExA)(uVar13, 0, 8),  iVar14 == 0)) {\n                uVar19 = 1;\n                fcn.00401630(0xfffffff6);\n            }\n            else {\n                pcVar5 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar14, uVar9);\n                if (pcVar5 == NULL) {\n                    uVar19 = 1;\n                    fcn.00406dae(0xfffffff7, uVar9);\n                }\n                else if (var_34h == 0) {\n                    uVar19 = 0;\n                    (*pcVar5)(var_180h, 0x2000, 0x44e000, 0x418004, 0x40a000);\n                }\n                else {\n                    fcn.00401630(var_34h);\n                    iVar15 = (*pcVar5)(uVar9, var_34h, uVar13);\n                    uVar19 = iVar15 != 0;\n                }\n                if ((lpLastWriteTime == 0) && (iVar15 = fcn.0040491f(iVar14),  iVar15 != 0)) {\n                    (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar14);\n                }\n            }\n        }\n        break;\n    case 0x40290a:\n        uVar13 = fcn.00401414();\n        uVar9 = fcn.00401414();\n        uVar8 = fcn.00401414();\n        pcVar6 = fcn.00401414();\n        uVar7 = fcn.00401414();\n        iVar14 = fcn.0040765a(uVar9);\n        if (iVar14 == 0) {\n            fcn.00401414(iVar17);\n        }\n        iVar14 = (*_sym.imp.ole32.dll_CoCreateInstance)(0x40ba3c, 0, 1, 0x40cd1c, &fcn.0040164f::var_1ch);\n        if (-1 < iVar14) {\n            iVar14 = (***var_1ch)(var_1ch, 0x40c7dc, &fcn.0040164f::hKey);\n            if (-1 < iVar14) {\n                iVar14 = (**(*var_1ch + 0x50))(var_1ch, uVar9);\n                (**(*var_1ch + 0x24))(var_1ch, 0x47a000);\n                uVar19 = var_2ch >> 8 & 0xff;\n                if (uVar19 != 0) {\n                    (**(*var_1ch + 0x3c))(var_1ch, uVar19);\n                }\n                (**(*var_1ch + 0x34))(var_1ch, var_2ch >> 0x10);\n                if (*pcVar6 != '\\0') {\n                    (**(*var_1ch + 0x44))(var_1ch, pcVar6, var_2ch & 0xff);\n                }\n                (**(*var_1ch + 0x2c))(var_1ch, uVar8);\n                uVar9 = (**(*var_1ch + 0x1c))(var_1ch, uVar7);\n                if (-1 < iVar14) {\n                    iVar14 = -0x7fffbffb;\n                    uVar9 = 0;\n                    iVar15 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, uVar13, 0xffffffff, 0x418044, 0x400);\n                    if (iVar15 != 0) {\n                        uVar9 = 0x418044;\n                        iVar14 = (**(*hKey + 0x18))(hKey, 0x418044, 1);\n                    }\n                }\n                (**(*hKey + 8))(hKey, uVar9);\n            }\n            (**(*var_1ch + 8))(var_1ch);\n            if (-1 < iVar14) {\n                uVar19 = 0;\n                fcn.00401630(0xfffffff4);\n                break;\n            }\n        }\n        uVar19 = 1;\n        fcn.00401630(0xfffffff0);\n        break;\n    case 0x402b16:\n        iVar14 = fcn.00401414();\n        var_174h = fcn.00401414();\n        var_166h = fcn.00401414();\n        iVar15 = fcn.00407e00(iVar14);\n        if (iVar15 == 0) {\n            uVar19 = 1;\n            fcn.00406dae(0xfffffff9, 0);\n        }\n        else {\n            var_17ch = 2;\n            iVar15 = fcn.00407a35(iVar14);\n            *(iVar14 + 1 + iVar15) = 0;\n            iVar15 = fcn.00407a35(var_174h);\n            *(var_174h + 1 + iVar15) = 0;\n            var_170h._0_2_ = var_34h;\n            var_178h = iVar14;\n            fcn.00406dae(0, var_166h);\n            iVar14 = (*_sym.imp.SHELL32.DLL_SHFileOperationA)(&fcn.0040164f::var_180h, iVar14);\n            uVar19 = 0;\n            if (iVar14 != 0) {\n                uVar19 = 1;\n                fcn.00406dae(0xfffffff9, 0);\n            }\n        }\n        break;\n    case 0x402bfd:\n        if (var_3ch != 0xbadf00d) {\ncode_r0x00402c05:\n            uVar13 = fcn.00407b1f(0, 0xffffffe8);\ncode_r0x00402c26:\n            fcn.00407532(uVar13, 0x200010);\n            return 0x7fffffff;\n        }\n        *0x443b1c = *0x443b1c + 1;\n        uVar19 = 0;\n        break;\n    case 0x402c3d:\n        uVar13 = 0;\n        if (var_3ch != 0) {\n            uVar13 = fcn.00401414();\n        }\n        uVar9 = 0;\n        if (var_38h != 0) {\n            uVar9 = fcn.00401414();\n        }\n        uVar8 = 0;\n        if (var_2ch != 0) {\n            uVar8 = fcn.00401414();\n        }\n        uVar7 = fcn.00401414();\n        iVar14 = (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)(uVar13, uVar9, uVar8, uVar7);\n        uVar19 = iVar14 == 0;\n        break;\n    case 0x402ca4:\n        hKey = 0x7e4e21;\n        uVar13 = fcn.00401414();\n        uVar9 = fcn.00401414();\n        uVar8 = fcn.00401414();\n        uVar19 = 0;\n        (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringA)(uVar13, uVar9, &fcn.0040164f::hKey, pcVar6, 0x1fff, uVar8);\n        if (*(iVar17 + 0x44e000) == hKey) {\n            *(iVar17 + 0x44e000) = 0;\n            uVar19 = 1;\n        }\n        break;\n    case 0x402d21:\n        if (var_2ch == 0) {\n            iVar15 = fcn.0040148f();\n            if (iVar15 != 0) {\n                uVar13 = fcn.00401414();\n                iVar14 = (*_sym.imp.ADVAPI32.dll_RegDeleteValueA)(iVar15, uVar13);\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar15, extraout_ECX_02);\n                goto code_r0x00402d88;\n            }\n        }\n        else {\n            fcn.00401414();\n            iVar14 = fcn.004014f3();\ncode_r0x00402d88:\n            uVar19 = 0;\n            if (iVar14 == 0) break;\n        }\n        uVar19 = 1;\n        break;\n    case 0x402d9c:\n        if (var_3ch == 0) {\n            var_3ch = *0x443b0c + 0x80000001;\n        }\n        uVar13 = fcn.00401414();\n        uVar9 = fcn.00401414();\n        uVar19 = 1;\n        iVar14 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)\n                           (var_3ch, uVar9, 0, 0, 0, *0x443b38 | 2, 0, &fcn.0040164f::hKey, 0);\n        if (iVar14 == 0) {\n            if (var_2ch == 1) {\n                fcn.00401414();\n                iVar14 = fcn.00407a35(0x412004);\n                iVar14 = iVar14 + 1;\n            }\n            else if (var_2ch == 4) {\n                *0x412004 = fcn.00401463();\n                iVar14 = 4;\n            }\n            else {\n                iVar14 = 0;\n                if (var_2ch == 3) {\n                    iVar14 = fcn.00403cee(lpLastWriteTime, 0, 0x412004, 0x6000);\n                }\n            }\n            iVar14 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(hKey, uVar13, 0, var_28h, 0x412004, iVar14);\n            uVar19 = iVar14 != 0;\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        }\n        break;\n    case 0x402ed7:\n        uVar19 = 1;\n        iVar14 = fcn.0040148f();\n        uVar13 = fcn.00401414();\n        *(iVar17 + 0x44e000) = 0;\n        if (iVar14 != 0) {\n            hKey = 0x1fff;\n            iVar15 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)\n                               (iVar14, uVar13, 0, &fcn.0040164f::var_1ch, pcVar6, &fcn.0040164f::hKey);\n            if (iVar15 == 0) {\n                if ((var_1ch == 0x1) || (var_1ch == 0x4)) {\n                    if (var_1ch == 0x4) {\n                        uVar19 = var_2ch == 0;\n                        fcn.00407949(pcVar6, *(iVar17 + 0x44e000));\n                        goto code_r0x00402f99;\n                    }\n                }\n                else if (var_1ch != 0x2) goto code_r0x00402f57;\n                *(iVar17 + 0x44e000 + hKey) = 0;\n                uVar19 = var_2ch;\n            }\n            else {\ncode_r0x00402f57:\n                *(iVar17 + 0x44e000) = 0;\n                uVar19 = 1;\n            }\ncode_r0x00402f99:\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar14);\n        }\n        break;\n    case 0x402fae:\n        uVar19 = 1;\n        iVar14 = fcn.0040148f();\n        uVar13 = fcn.00401463();\n        *(iVar17 + 0x44e000) = 0;\n        if (iVar14 != 0) {\n            var_1ch = 0x1fff;\n            if (var_2ch == 0) {\n                iVar15 = (*_sym.imp.ADVAPI32.dll_RegEnumValueA)\n                                   (iVar14, uVar13, pcVar6, &fcn.0040164f::var_1ch, 0, 0, 0, 0);\n                if (iVar15 != 0) break;\n            }\n            else {\n                (*_sym.imp.ADVAPI32.dll_RegEnumKeyA)(iVar14, uVar13, pcVar6, 0x1fff);\n            }\n            uVar19 = 0;\n            *(iVar17 + 0x44ffff) = 0;\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar14);\n        }\n        break;\n    case 0x403079:\n        uVar19 = 0;\n        if (*(iVar17 + 0x44e000) != '\\0') {\n            uVar13 = fcn.0040796e(pcVar6);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar13);\n        }\n        break;\n    case 0x4030a0:\n        uVar13 = fcn.00401414();\n        iVar14 = fcn.004077d2(uVar13, var_38h, var_34h);\n        if (iVar14 == -1) {\n            *(iVar17 + 0x44e000) = 0;\n            uVar19 = 1;\n        }\n        else {\n            uVar19 = 0;\n            fcn.00407949(pcVar6, iVar14);\n        }\n        break;\n    case 0x4030ee:\n        if (var_34h == 0) {\n            uVar13 = fcn.00401414();\n            uVar13 = fcn.00407a35(uVar13);\n        }\n        else {\n            *0x410004 = fcn.00401463();\n            uVar13 = 1;\n        }\n        uVar19 = 1;\n        if (*(iVar17 + 0x44e000) != '\\0') {\n            uVar9 = fcn.0040796e(pcVar6);\n            iVar14 = (*_sym.imp.KERNEL32.dll_WriteFile)(uVar9, 0x410004, uVar13, &fcn.0040164f::var_1ch, 0);\n            uVar19 = iVar14 == 0;\n        }\n        break;\n    case 0x40317b:\n        iVar10 = fcn.00401463();\n        if (iVar10 < 1) {\n            uVar19 = 0;\n        }\n        else {\n            if (0x1fff < iVar10) {\n                iVar10 = 0x1fff;\n            }\n            iVar18 = 0;\n            if (*(iVar17 + 0x44e000) != '\\0') {\n                uVar13 = fcn.0040796e(pcVar6);\n                cVar16 = '\\0';\n                while( true ) {\n                    iVar17 = (*_sym.imp.KERNEL32.dll_ReadFile)\n                                       (uVar13, &fcn.0040164f::hKey, 1, &fcn.0040164f::var_1ch, 0);\n                    if ((iVar17 == 0) || (var_1ch != 0x1)) goto code_r0x004032a7;\n                    if (lpLastWriteTime != 0) {\n                        fcn.00407949(iVar15, hKey & 0xff);\n                        goto code_r0x004037df;\n                    }\n                    if ((cVar16 == '\\n') || (cVar16 == '\\r')) break;\n                    *(iVar15 + iVar18) = hKey;\n                    iVar18 = iVar18 + 1;\n                    if ((hKey == '\\0') || (cVar16 = hKey,  iVar10 <= iVar18)) goto code_r0x004032a7;\n                }\n                if ((cVar16 == hKey) || ((hKey != '\\n' && (hKey != '\\r')))) {\n                    (*_sym.imp.KERNEL32.dll_SetFilePointer)(uVar13, 0xffffffff, 0, 1);\n                }\n                else {\n                    *(iVar18 + 0x44e000 + iVar14) = hKey;\n                    iVar18 = iVar18 + 1;\n                }\n            }\ncode_r0x004032a7:\n            uVar19 = iVar18 == 0;\n            *(iVar18 + 0x44e000 + iVar14) = 0;\n        }\n        break;\n    case 0x4032c3:\n        uVar19 = 0;\n        if (*(iVar17 + 0x44e000) != '\\0') {\n            uVar13 = fcn.00401463();\n            uVar9 = fcn.0040796e(pcVar6);\n            uVar13 = (*_sym.imp.KERNEL32.dll_SetFilePointer)(uVar9, uVar13, 0, lpLastWriteTime);\n            if (-1 < var_38h) {\n                fcn.00407949(iVar15, uVar13);\n            }\n        }\n        break;\n    case 0x403333:\n        uVar19 = 0;\n        if (*(iVar17 + 0x44e000) != '\\0') {\n            uVar13 = fcn.0040796e(pcVar6);\n            (*_sym.imp.KERNEL32.dll_FindClose)(uVar13);\n        }\n        break;\n    case 0x40335a:\n        if (*(iVar14 + 0x44e000) != '\\0') {\n            uVar13 = fcn.0040796e(iVar15);\n            iVar14 = (*_sym.imp.KERNEL32.dll_FindNextFileA)(uVar13, &fcn.0040164f::var_180h);\n            if (iVar14 != 0) {\n                uVar19 = 0;\n                fcn.00407a0d(pcVar6, &fcn.0040164f::var_154h);\n                break;\n            }\n        }\n        *(iVar17 + 0x44e000) = 0;\n        uVar19 = 1;\n        break;\n    case 0x4033bd:\n        uVar13 = fcn.00401414();\n        iVar10 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(uVar13, &fcn.0040164f::var_180h);\n        if (iVar10 == -1) {\n            uVar19 = 1;\n            *(iVar14 + 0x44e000) = 0;\n            *(iVar17 + 0x44e000) = 0;\n        }\n        else {\n            uVar19 = 0;\n            fcn.00407949(iVar15, iVar10);\n            fcn.00407a0d(pcVar6, &fcn.0040164f::var_154h);\n        }\n        break;\n    case 0x40342e:\n        uVar13 = fcn.00401414();\n        iVar14 = fcn.0040765a(uVar13);\n        if (iVar14 == 0) {\n            fcn.00401414(pcVar6);\n        }\n        fcn.004077a0(uVar13);\n        iVar14 = fcn.004077d2(uVar13, 0x40000000, 2);\n        pcVar5 = _sym.imp.KERNEL32.dll_GlobalAlloc;\n        uVar9 = *0x443b98;\n        if (iVar14 == -1) {\ncode_r0x004035ed:\n            uVar19 = 1;\n            (*_sym.imp.KERNEL32.dll_DeleteFileA)(uVar13);\n            uVar13 = 0xffffffef;\n        }\n        else {\n            iVar15 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, *0x443b98);\n            iVar17 = -0x29a;\n            uVar8 = extraout_ECX_03;\n            if (iVar15 != 0) {\n                fcn.00403acd(0);\n                fcn.00403a81(iVar15, uVar9);\n                arg_10h = (*pcVar5)(0x40, var_34h);\n                if (arg_10h != NULL) {\n                    fcn.00403cee(var_38h, 0, arg_10h, var_34h);\n                    for (piVar11 = arg_10h; *piVar11 != '\\0'; piVar11 = piVar11 + 2 + iVar17) {\n                        iVar17 = *piVar11;\n                        fcn.00407777(piVar11[1] + iVar15, piVar11 + 2, iVar17);\n                    }\n                    (*_sym.imp.KERNEL32.dll_GlobalFree)(arg_10h);\n                }\n                (*_sym.imp.KERNEL32.dll_WriteFile)(iVar14, iVar15, uVar9, &fcn.0040164f::hKey, 0);\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(iVar15);\n                iVar17 = fcn.00403cee(0xffffffff, iVar14, 0, 0);\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar14, uVar8);\n            if (iVar17 < 0) goto code_r0x004035ed;\n            uVar13 = 0xfffffff3;\n            uVar19 = 0;\n        }\n        fcn.00401630(uVar13);\n        break;\n    case 0x403618:\n        uVar19 = 1;\n        uVar12 = fcn.00401463();\n        if (uVar12 < *0x443b58) {\n            iVar14 = uVar12 * 0x2018 + *0x443b54;\n            if (var_34h < 0) {\n                var_34h = ~var_34h;\n                if (var_34h == 0) {\n                    fcn.00407b1f(iVar14 + 0x18, var_2ch);\n                    *(iVar14 + 8) = *(iVar14 + 8) | 0x100;\n                }\n                else {\n                    var_38h = fcn.00401463();\n                }\n                uVar19 = 0;\n                *(iVar14 + var_34h * 4) = var_38h;\n                if (lpLastWriteTime != 0) {\n                    fcn.00401220(uVar12);\n                }\n            }\n            else if (var_34h == 0) {\n                uVar19 = 0;\n                fcn.00407a0d(iVar15, iVar14 + 0x18);\n            }\n            else {\n                uVar19 = 0;\n                fcn.00407949(iVar15, *(iVar14 + var_34h * 4));\n            }\n        }\n        break;\n    case 0x4036db:\n        uVar19 = 1;\n        uVar12 = fcn.00401463();\n        if (uVar12 < 0x20) {\n            if (lpLastWriteTime == 0) {\n                if (var_34h == 0) {\n                    uVar19 = 0;\n                    fcn.00407b1f(iVar15, *(*0x443b48 + 4 + (uVar12 + 0x24) * 4));\n                }\n                else {\n                    uVar19 = 0;\n                    *(*0x443b48 + 4 + (uVar12 + 0x24) * 4) = var_38h;\n                }\n            }\n            else if (var_34h == 0) {\n                uVar19 = 0;\n                uVar13 = fcn.00401388(0);\n                fcn.00407949(iVar15, uVar13);\n            }\n            else {\n                uVar19 = 0;\n                fcn.0040133f(uVar12);\n                fcn.0040128f(0, 0);\n            }\n        }\n        break;\n    case 0x403781:\n        uVar19 = 0;\n        (*_sym.imp.USER32.dll_SendMessageA)(*0x443ba0, 0xb, var_3ch & *0x42e8ec, 0);\n        if (var_3ch != 0) {\n            (*_sym.imp.USER32.dll_InvalidateRect)(var_180h, 0, 0);\n        }\n        break;\n    case 0x4037d3:\n        goto code_r0x004037d3;\n    case 0x4037e1:\n        goto code_r0x004037e1;\n    }\ncode_r0x004037d9:\n    *0x443b10 = *0x443b10 + uVar19;\ncode_r0x004037df:\n    var_3ch = 0;\ncode_r0x004037e1:\n    return var_3ch;\n}\n",
        "token_count": 13395
    },
    "00403ea3": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nchar * __cdecl fcn.00403ea3(uint32_t arg_8h)\n\n{\n    uint32_t arg_ch;\n    uint arg_ch_00;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *arg_10h;\n    char *pcVar3;\n    uint uVar4;\n    uint uVar5;\n    int32_t var_150h;\n    int32_t var_14ch;\n    uint var_13ch;\n    uint32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_ch;\n    \n    pcVar3 = 0x40b178;\n    *0x443b8c = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    *0x443b8c = *0x443b8c + 1000;\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, 0x484000, 0x2000);\n    arg_ch = fcn.004077d2(0x484000, 0x80000000, 3);\n    *0x40a014 = arg_ch;\n    if (arg_ch != 0xffffffff) {\n        fcn.00407a0d(0x47c000, 0x484000);\n        uVar5 = 0x40b178;\n        arg_ch_00 = fcn.0040761c(0x47c000);\n        uVar4 = 0x486000;\n        fcn.00407a0d(0x486000, arg_ch_00);\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetFileSize)(arg_ch, 0, uVar4, arg_ch_00, uVar5);\n        var_150h = 0;\n        var_14ch = 0;\n        *0x418844 = uVar1;\n        for (; 0 < uVar1; uVar1 = uVar1 - arg_ch) {\n            arg_ch = (-(*0x443b98 == 0) & 0xffff8200) + 0x8000;\n            if (uVar1 < arg_ch) {\n                arg_ch = uVar1;\n            }\n            iVar2 = fcn.00403a81(0x418850, arg_ch);\n            if (iVar2 == 0) {\n                fcn.00403996(1);\ncode_r0x0040424c:\n                return \n                \"Installer integrity check has failed. Common causes include\\nincomplete download and damaged media. Contact the\\ninstaller\\'s author to obtain a new copy.\\n\\nMore information at:\\nhttp://nsis.sf.net/NSIS_Error\"\n                ;\n            }\n            if (*0x443b98 == 0) {\n                fcn.00407777(&var_38h, 0x418850, 0x1c);\n                if (((((var_38h & 0xfffffff0) == 0) && (var_34h == -0x21524111)) && (var_28h == 0x74736e49)) &&\n                   ((var_2ch == 0x74666f73 && (var_30h == 0x6c6c754e)))) {\n                    arg_8h = arg_8h | var_38h;\n                    *0x443b28 = *0x443b28 | arg_8h & 2;\n                    *0x443b98 = *0x418848;\n                    if (uVar1 < var_20h) goto code_r0x0040424c;\n                    if (((arg_8h & 8) == 0) && ((arg_8h & 4) != 0)) break;\n                    uVar1 = var_20h - 4;\n                    var_150h = var_150h + 1;\n                    if (uVar1 < arg_ch) {\n                        arg_ch = uVar1;\n                    }\n                }\n            }\n            else if ((arg_8h & 2) == 0) {\n                fcn.00403996(0);\n            }\n            if (uVar1 < *0x418844) {\n                var_14ch = fcn.004084e0(var_14ch, 0x418850, arg_ch);\n            }\n            *0x418848 = *0x418848 + arg_ch;\n        }\n        pcVar3 = \n        \"Installer integrity check has failed. Common causes include\\nincomplete download and damaged media. Contact the\\ninstaller\\'s author to obtain a new copy.\\n\\nMore information at:\\nhttp://nsis.sf.net/NSIS_Error\"\n        ;\n        fcn.00403996(1);\n        if (*0x443b98 != 0) {\n            if (var_150h != 0) {\n                fcn.00403acd(*0x418848);\n                iVar2 = fcn.00403a81(&var_1ch, 4);\n                if (iVar2 == 0) {\n                    return pcVar3;\n                }\n                if (var_14ch != var_1ch) {\n                    return pcVar3;\n                }\n            }\n            arg_10h = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, var_24h);\n            fcn.00408548(arg_ch, arg_ch);\n            fcn.0040782e(&var_13ch, 0x480000);\n            pcVar3 = 0x40b25e;\n            *0x40a010 = (*_sym.imp.KERNEL32.dll_CreateFileA)(&var_13ch, 0xc0000000, 0, 0, 2, 0x4000100, 0);\n            if (*0x40a010 != -1) {\n                *0x4208d8 = fcn.00403acd(*0x443b98 + 0x1c);\n                *0x4208dc = (*0x4208d8 + -0x1c + var_20h) - (-((var_38h & 4) == 0) & 4);\n                pcVar3 = \n                \"Installer integrity check has failed. Common causes include\\nincomplete download and damaged media. Contact the\\ninstaller\\'s author to obtain a new copy.\\n\\nMore information at:\\nhttp://nsis.sf.net/NSIS_Error\"\n                ;\n                iVar2 = fcn.00403cee(0xffffffff, 0, arg_10h, var_24h);\n                if (iVar2 == var_24h) {\n                    *0x443b90 = *arg_10h;\n                    *0x443b94 = (*0x443b94 + 1) - ((var_38h & 1) == 0);\n                    iVar2 = 8;\n                    *0x443b48 = arg_10h;\n                    do {\n                        iVar2 = iVar2 + -1;\n                        arg_10h[iVar2 * 2 + 1] = arg_10h[iVar2 * 2 + 1] + arg_10h;\n                    } while (iVar2 != 0);\n                    pcVar3 = NULL;\n                    arg_10h[0xf] = *0x4208e0;\n                    fcn.00407777(0x443b4c, arg_10h + 1, 0x40);\n                }\n            }\n        }\n    }\n    return pcVar3;\n}\n",
        "token_count": 1685
    },
    "004042c4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004042c4(void)\n\n{\n    if (*0x40a014 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x40a014);\n        *0x40a014 = -1;\n    }\n    if (*0x40a010 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x40a010);\n        *0x40a010 = -1;\n    }\n    fcn.004048c8();\n    fcn.004081e3(0x482000, 7);\n    return;\n}\n",
        "token_count": 130
    },
    "null": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid entry0(void)\n\n{\n    uint uVar1;\n    char *arg_ch;\n    code *pcVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    char *pcVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    char cVar8;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    code *extraout_EDX;\n    code *pcVar9;\n    code *pcVar10;\n    uint uVar11;\n    uint arg_ch_00;\n    uint var_194h;\n    uint var_190h;\n    uint var_18ch;\n    uint var_17ch;\n    uint var_178h;\n    uint var_170h;\n    uint var_1ch;\n    \n    (*_sym.imp.COMCTL32.DLL_InitCommonControls)();\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)(0x8001);\n    *0x443b40 = (*_sym.imp.ole32.dll_OleInitialize)(0);\n    *0x443b9c = fcn.00407eef(8);\n    (*_sym.imp.SHELL32.DLL_SHGetFileInfoA)(0x40b301, 0, &entry0::var_17ch, 0x160, 0);\n    uVar1 = fcn.00407a0d(0x443ba8, \"NSIS Error\");\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCommandLineA)(uVar1, uVar1);\n    uVar1 = fcn.00407a0d(0x476000, uVar1);\n    *0x443ba4 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(0, uVar1);\n    uVar1 = 0x476000;\n    if (*0x476000 == '\\\"') {\n        uVar1 = 0x476001;\n    }\n    uVar1 = fcn.004075ec(uVar1, (*0x476000 == '\\\"') * '\\x02' + ' ');\n    arg_ch = (*_sym.imp.USER32.dll_CharNextA)(uVar1, extraout_ECX);\n    pcVar9 = NULL;\n    pcVar5 = arg_ch;\n    do {\n        if (*pcVar5 == '\\0') {\ncode_r0x004044b0:\n            pcVar2 = (*_sym.imp.KERNEL32.dll_GetTempPathA)(0x2000, 0x480000);\n            iVar3 = fcn.00404260(pcVar2, pcVar2);\n            if (iVar3 == 0) {\n                (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(0x480000, 0x1ffb);\n                pcVar4 = fcn.00407a40(0x480000, \"\\\\Temp\");\n                pcVar2 = pcVar4;\n                iVar3 = fcn.00404260(pcVar4, pcVar4);\n                if (iVar3 == 0) {\n                    pcVar5 = \"Error writing temporary file. Make sure your temp folder is valid.\";\n                    goto code_r0x00404724;\n                }\n            }\n            (*_sym.imp.KERNEL32.dll_DeleteFileA)(0x47e000);\n            pcVar5 = fcn.00403ea3(pcVar9);\n            pcVar10 = NULL;\n            pcVar4 = pcVar9;\n            if (pcVar5 != NULL) goto code_r0x00404726;\n            if (*0x443b94 == 0) goto code_r0x00404705;\n            pcVar4 = 0x476000;\n            piVar6 = fcn.004075ec(0x476000, 0);\n            while( true ) {\n                if (piVar6 < 0x476000) {\n                    fcn.00407a40(0x480000, \"~nsu.tmp\");\n                    iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(0x480000, 0x47c000);\n                    pcVar2 = NULL;\n                    pcVar4 = NULL;\n                    if (iVar3 == 0) goto code_r0x0040471f;\n                    uVar1 = (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(0x480000, 0);\n                    (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryA)(0x480000, uVar1);\n                    if (*0x478000 == '\\0') {\n                        fcn.00407a0d(0x478000, 0x47c000);\n                    }\n                    iVar3 = 0x1a;\n                    pcVar5 = \"Error launching installer\";\n                    uVar1 = 0x44e000;\n                    fcn.00407a0d(0x44e000, arg_ch);\n                    pcVar9 = _sym.imp.KERNEL32.dll_DeleteFileA;\n                    pcVar4 = _sym.imp.KERNEL32.dll_CopyFileA;\n                    *0x450000 = 0x41;\n                    do {\n                        arg_ch_00 = *(*0x443b48 + 0x120);\n                        uVar11 = 0x42c8e8;\n                        fcn.00407b1f(0x42c8e8, arg_ch_00);\n                        (*pcVar9)(0x42c8e8, extraout_ECX_00, uVar11, arg_ch_00, uVar1);\n                        if (pcVar5 != NULL) {\n                            uVar1 = 1;\n                            iVar7 = (*pcVar4)(0x484000, 0x42c8e8);\n                            if (iVar7 != 0) {\n                                fcn.00407f42(0x42c8e8, 0);\n                                uVar1 = fcn.00407b1f(0x42c8e8, *(*0x443b48 + 0x124));\n                                iVar7 = fcn.00407474(0x42c8e8);\n                                if (iVar7 != 0) {\n                                    pcVar5 = NULL;\n                                    (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar7);\n                                }\n                            }\n                        }\n                        *0x450000 = *0x450000 + 1;\n                        *0x450000 = *0x450000 & 0xff00 | *0x450000;\n                        iVar3 = iVar3 + -1;\n                    } while (iVar3 != 0);\n                    fcn.00407f42(0x480000, 0);\n                    pcVar2 = pcVar4;\n                    goto code_r0x00404724;\n                }\n                if (*piVar6 == 0x3d3f5f20) break;\n                piVar6 = piVar6 + -1;\n            }\n            do {\n                *piVar6 = 0;\n                piVar6 = piVar6 + 1;\n                iVar3 = fcn.00407e38(piVar6);\n                if (iVar3 == 0) {\ncode_r0x0040471f:\n                    pcVar5 = \"Error launching installer\";\ncode_r0x00404724:\n                    pcVar10 = NULL;\n                }\n                else {\n                    fcn.00407a0d(0x478000, piVar6);\n                    fcn.00407a0d(0x47a000, piVar6);\n                    pcVar9 = extraout_EDX;\n                    pcVar2 = extraout_EDX;\ncode_r0x00404705:\n                    *0x443b34 = 0xffffffff;\n                    pcVar10 = fcn.00405e95(pcVar9, pcVar2);\n                    pcVar4 = pcVar9;\n                }\ncode_r0x00404726:\n                fcn.004042c4(pcVar4, pcVar2);\n                (*_sym.imp.ole32.dll_OleUninitialize)();\n                if (pcVar5 == NULL) {\n                    if (*0x443b1c != 0) {\n                        pcVar9 = fcn.00407eef(3);\n                        pcVar4 = fcn.00407eef(4);\n                        pcVar5 = fcn.00407eef(5);\n                        if (((pcVar4 != NULL) && (pcVar9 != NULL)) && (pcVar5 != NULL)) {\n                            uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(extraout_ECX_01);\n                            iVar3 = (*pcVar9)(uVar1, 0x28, &entry0::var_1ch);\n                            if (iVar3 != 0) {\n                                (*pcVar4)(0, \"SeShutdownPrivilege\", &entry0::var_178h);\n                                var_17ch = 1;\n                                var_170h = 2;\n                                (*pcVar5)(var_1ch, 0, &entry0::var_17ch, 0, 0, 0);\n                            }\n                        }\n                        iVar3 = (*_sym.imp.USER32.dll_ExitWindowsEx)(2, 0);\n                        if (iVar3 == 0) {\n                            fcn.0040389b(0x40486d);\n                        }\n                    }\n                    pcVar4 = pcVar10;\n                    if (*0x443b34 != 0xffffffff) {\n                        pcVar4 = *0x443b34;\n                    }\n                }\n                else {\n                    pcVar2 = 0x200010;\n                    pcVar4 = pcVar5;\n                    fcn.00407532(pcVar5, 0x200010);\n                }\n                piVar6 = (*_sym.imp.KERNEL32.dll_ExitProcess)();\n            } while( true );\n        }\n        for (; *pcVar5 == ' '; pcVar5 = pcVar5 + 1) {\n        }\n        cVar8 = ' ';\n        if (*pcVar5 == '\\\"') {\n            pcVar5 = pcVar5 + 1;\n            cVar8 = '\\\"';\n        }\n        if (*pcVar5 == '/') {\n            if ((pcVar5[1] == 'S') && ((pcVar5[2] | 0x20U) == 0x20)) {\n                pcVar9 = pcVar9 | 2;\n            }\n            if ((*(pcVar5 + 1) == 0x4352434e) && ((pcVar5[5] | 0x20U) == 0x20)) {\n                pcVar9 = pcVar9 | 4;\n            }\n            if (*(pcVar5 + -1) == 0x3d442f20) {\n                *(pcVar5 + -1) = 0;\n                fcn.00407a0d(0x478000, pcVar5 + 3);\n                goto code_r0x004044b0;\n            }\n            pcVar5 = pcVar5 + 1;\n        }\n        pcVar5 = fcn.004075ec(pcVar5, cVar8);\n        pcVar5 = pcVar5 + (*pcVar5 == '\\\"');\n    } while( true );\n}\n",
        "token_count": 2407
    },
    "004049a0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.004049a0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = 0;\n    iVar2 = *0x443b58;\n    iVar3 = *0x443b54;\n    while (iVar2 = iVar2 + -1,  iVar2 != -1) {\n        if ((*(iVar3 + 8) & 1) != 0) {\n            iVar1 = iVar1 + *(iVar3 + in_EAX * 4);\n        }\n        iVar3 = iVar3 + 0x2018;\n    }\n    return iVar1;\n}\n",
        "token_count": 153
    },
    "00404cf8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.00404cf8(void)\n\n{\n    uint16_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    uint16_t uVar5;\n    int32_t *piVar6;\n    bool bVar7;\n    uint var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    uVar1 = fcn.0040796e(0x47e000);\n    uVar5 = 0xffff;\n    iVar3 = *0x443b70;\ncode_r0x00404d5c:\n    iVar3 = iVar3 + -1;\n    if (iVar3 != -1) goto code_r0x00404d2e;\n    goto code_r0x00404d62;\ncode_r0x00404d2e:\n    puVar4 = *(*0x443b48 + 100) * iVar3 + *0x443b6c;\n    if (((uVar1 ^ *puVar4) & uVar5) == 0) {\n        *0x447bc4 = *(puVar4 + 1);\n        *0x443b30 = *(puVar4 + 3);\n        *0x447bcc = puVar4 + 5;\n        if (*0x447bcc != NULL) {\n            fcn.00407949(0x47e000, *puVar4);\n            uVar2 = fcn.00407b1f(0x443ba8, 0xfffffffe);\n            (*_sym.imp.USER32.dll_SetWindowTextA)(*0x436918, uVar2);\n            piVar6 = *0x443b54;\n            for (iVar3 = *0x443b58; iVar3 != 0; iVar3 = iVar3 + -1) {\n                if (*piVar6 != 0) {\n                    fcn.00407b1f(piVar6 + 6, *piVar6);\n                }\n                piVar6 = piVar6 + 0x806;\n            }\n            return;\n        }\ncode_r0x00404d62:\n        bVar7 = uVar5 == 0xffff;\n        uVar5 = 0;\n        iVar3 = *0x443b70;\n        if (bVar7) {\n            uVar5 = 0x3ff;\n        }\n    }\n    goto code_r0x00404d5c;\n}\n",
        "token_count": 543
    },
    "00405e95": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n\nuint fcn.00405e95(void)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    int32_t iVar8;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_bp_10h;\n    uint var_bp_ch;\n    uint var_bp_8h;\n    \n    iVar8 = *0x443b48;\n    pcVar2 = fcn.00407eef(6);\n    if (pcVar2 == NULL) {\n        *0x47e000 = 0x7830;\n        fcn.004078a0(0x80000001, \"Control Panel\\\\Desktop\\\\ResourceLocale\", 0, 0x42e8f0, 0);\n        if (*0x42e8f0 == '\\0') {\n            fcn.004078a0(0x80000003, \".DEFAULT\\\\Control Panel\\\\International\", \"Locale\", 0x42e8f0, 0);\n        }\n        fcn.00407a40(0x47e000, 0x42e8f0);\n    }\n    else {\n        uVar3 = (*pcVar2)(extraout_ECX);\n        fcn.00407949(0x47e000, uVar3 & 0xffff);\n    }\n    fcn.00404cf8();\n    *0x443b24 = 0x10000;\n    *0x443b08 = *0x443b90 & 0x20;\n    iVar4 = fcn.00407e38(0x478000);\n    if (((iVar4 == 0) && (*(iVar8 + 0x48) != 0)) &&\n       (fcn.004078a0(*(iVar8 + 0x44), *0x443b64 + *(iVar8 + 0x48), *(iVar8 + 0x4c) + *0x443b64, 0x447bd0, 0), \n       *0x447bd0 != '\\0')) {\n        uVar3 = 0x447bd0;\n        if (*0x447bd0 == '\\\"') {\n            uVar3 = 0x447bd1;\n            puVar5 = fcn.004075ec(0x447bd1, 0x22);\n            *puVar5 = 0;\n        }\n        iVar4 = fcn.00407a35(uVar3);\n        uVar6 = (uVar3 - 4) + iVar4;\n        if (((uVar3 < uVar6) && (iVar4 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(uVar6, \".exe\"),  iVar4 == 0)) &&\n           ((uVar6 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(uVar3, extraout_ECX_00),  uVar6 == 0xffffffff ||\n            ((uVar6 & 0x10) == 0)))) {\n            fcn.0040761c(0x40603a);\n        }\n        uVar7 = fcn.004075a6(uVar3);\n        fcn.00407a0d(0x478000, uVar7);\n    }\n    iVar4 = fcn.00407e38(0x478000);\n    if (iVar4 == 0) {\n        fcn.00407b1f(0x478000, *(iVar8 + 0x118));\n    }\n    *0x447bb8 = (*_sym.imp.USER32.dll_LoadImageA)(*0x443ba4, 0x67, 1, 0, 0, 0x8040);\n    if (*(iVar8 + 0x50) != -1) {\n        var_bp_ch = 0x624e5f;\n        *0x4368f4 = fcn.00401000;\n        *0x436900 = *0x443ba4;\n        *0x436904 = *0x447bb8;\n        *0x436914 = &fcn.00405e95::var_bp_ch;\n        iVar1 = (*_sym.imp.USER32.dll_RegisterClassA)(0x4368f0);\n        if (iVar1 == 0) {\n            return 0;\n        }\n        (*_sym.imp.USER32.dll_SystemParametersInfoA)(0x30, 0, &fcn.00405e95::var_1ch, 0);\n        *0x436918 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                              (0x80, &fcn.00405e95::var_bp_ch, 0, 0x80000000, var_1ch, var_18h, var_14h - var_1ch, \n                               var_bp_10h - var_18h, 0, 0, *0x443ba4, 0);\n    }\n    uVar7 = 2;\n    iVar8 = fcn.0040389b(0);\n    if (iVar8 == 0) {\n        fcn.00404cf8(extraout_ECX_01);\n        if (*0x443b28 == 0) {\n            uVar7 = (*_sym.imp.USER32.dll_ShowWindow)(*0x436918, 5);\n            pcVar2 = _sym.imp.KERNEL32.dll_LoadLibraryA;\n            iVar8 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"RichEd20\", uVar7);\n            if (iVar8 == 0) {\n                (*pcVar2)(\"RichEd32\");\n            }\n            pcVar2 = _sym.imp.USER32.dll_GetClassInfoA;\n            iVar8 = (*_sym.imp.USER32.dll_GetClassInfoA)(0, \"RichEdit20A\", 0x4368f0);\n            if (iVar8 == 0) {\n                (*pcVar2)(0, \"RichEdit\", 0x4368f0);\n                *0x436914 = \"RichEdit20A\";\n                (*_sym.imp.USER32.dll_RegisterClassA)(0x4368f0);\n            }\n            uVar7 = (*_sym.imp.USER32.dll_DialogBoxParamA)(*0x443ba4, *0x447bc4 + 0x69U & 0xffff, 0, fcn.00404f66, 0);\n            fcn.0040389b(5);\n            fcn.004048a0(1);\n        }\n        else {\n            iVar8 = fcn.00404b4a(0);\n            if (iVar8 == 0) {\n                fcn.0040389b(1);\n                uVar7 = 0;\n            }\n            else if (*0x447ba8 == 0) {\n                fcn.0040389b(2);\n            }\n        }\n    }\n    return uVar7;\n}\n",
        "token_count": 1574
    },
    "004063ac": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004063ac(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t *puVar1;\n    bool bVar2;\n    code *pcVar3;\n    code *pcVar4;\n    code *arg_8h_00;\n    code *arg_ch_00;\n    uint uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    code *extraout_ECX;\n    uint *puVar10;\n    code *extraout_ECX_00;\n    int32_t iVar11;\n    code *extraout_ECX_01;\n    uint32_t uVar12;\n    int32_t iVar13;\n    bool bVar14;\n    code *pcVar15;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    int32_t var_90h;\n    int32_t var_8ch;\n    uint var_88h;\n    int32_t var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint32_t var_64h;\n    uint var_60h;\n    int32_t var_5ch;\n    uint var_4ch;\n    int32_t var_48h;\n    uint var_40h;\n    int32_t var_3ch;\n    uint32_t var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_ch;\n    \n    pcVar15 = _sym.imp.USER32.dll_GetDlgItem;\n    pcVar4 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3f9);\n    arg_8h_00 = (*pcVar15)(arg_8h, 0x408);\n    iVar9 = *0x443b54;\n    iVar13 = *0x443b48;\n    if (arg_ch == 0x110) {\n        arg_ch_00 = *0x443b58 << 2;\n        *0x443b44 = arg_8h;\n        *0x43a934 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, arg_ch_00);\n        uVar5 = (*_sym.imp.USER32.dll_LoadBitmapA)(*0x443ba4, 0x6e);\n        *0x43a938 = 0xffffffff;\n        *0x43a93c = (*_sym.imp.USER32.dll_SetWindowLongA)(arg_8h_00, 0xfffffffc, fcn.00406cbd);\n        *0x43a940 = (*_sym.imp.COMCTL32.DLL_ImageList_Create)(0x10, 0x10, 0x21, 6, 0);\n        (*_sym.imp.COMCTL32.DLL_ImageList_AddMasked)(*0x43a940, uVar5, 0xff00ff);\n        pcVar15 = _sym.imp.USER32.dll_SendMessageA;\n        (*_sym.imp.USER32.dll_SendMessageA)(arg_8h_00, 0x1109, 2, *0x43a940);\n        iVar6 = (*pcVar15)(arg_8h_00, 0x111c, 0, 0);\n        if (iVar6 < 0x10) {\n            (*pcVar15)(arg_8h_00, 0x111b, 0x10, 0);\n        }\n        iVar6 = 0;\n        (*_sym.imp.GDI32.dll_DeleteObject)(uVar5);\n        bVar14 = true;\n        pcVar15 = extraout_ECX;\n        do {\n            iVar11 = *(iVar13 + 0x94 + iVar6 * 4);\n            if (iVar11 != 0) {\n                bVar2 = false;\n                if (iVar6 == 0x20) {\n                    bVar2 = bVar14;\n                }\n                bVar14 = bVar2;\n                arg_ch_00 = fcn.00407b1f(0, iVar11);\n                pcVar15 = NULL;\n                uVar5 = (*_sym.imp.USER32.dll_SendMessageA)(pcVar4, 0x143, 0, arg_ch_00);\n                (*_sym.imp.USER32.dll_SendMessageA)(pcVar4, 0x151, uVar5, iVar6);\n            }\n            iVar6 = iVar6 + 1;\n        } while (iVar6 != 0x21);\n        uVar5 = 0;\n        fcn.00404b0c(pcVar15);\n        fcn.00404b0c();\n        var_90h = 0;\n        bVar2 = false;\n        iVar6 = iVar9;\n        for (var_8ch = 0; var_8ch < *0x443b58; var_8ch = var_8ch + 1) {\n            if (*(iVar6 + 0x18) != '\\0') {\n                var_5ch = iVar6 + 0x18;\n                var_70h = 0xffff0002;\n                var_6ch = 0xd;\n                var_60h = 0x20;\n                var_48h = var_8ch;\n                var_64h = *(iVar6 + 8) & 0x20;\n                var_74h = uVar5;\n                if ((*(iVar6 + 8) & 2) == 0) {\n                    if ((*(iVar6 + 8) & 4) == 0) {\n                        puVar10 = var_90h + *0x43a934;\n                        arg_ch_00 = 0x1100;\n                        pcVar15 = arg_8h_00;\n                        uVar7 = (*_sym.imp.USER32.dll_SendMessageA)(arg_8h_00, 0x1100, 0, &var_74h);\n                        *puVar10 = uVar7;\n                    }\n                    else {\n                        arg_ch_00 = 0x110a;\n                        pcVar15 = arg_8h_00;\n                        uVar5 = (*_sym.imp.USER32.dll_SendMessageA)(arg_8h_00, 0x110a, 3, uVar5);\n                    }\n                }\n                else {\n                    puVar10 = var_90h + *0x43a934;\n                    var_6ch = 0x4d;\n                    var_4ch = 1;\n                    arg_ch_00 = 0x1100;\n                    pcVar15 = arg_8h_00;\n                    uVar5 = (*_sym.imp.USER32.dll_SendMessageA)(arg_8h_00, 0x1100, 0, &var_74h);\n                    bVar2 = true;\n                    *puVar10 = uVar5;\n                }\n            }\n            iVar6 = iVar6 + 0x2018;\n            var_90h = var_90h + 4;\n        }\n        if (!bVar2) {\n            arg_ch_00 = 0xfffffff0;\n            uVar8 = (*_sym.imp.USER32.dll_GetWindowLongA)(arg_8h_00, 0xfffffff0);\n            pcVar15 = uVar8 & 0xfffffffb;\n            (*_sym.imp.USER32.dll_SetWindowLongA)(arg_8h_00, 0xfffffff0, pcVar15);\n        }\n        if (!bVar14) {\n            (*_sym.imp.USER32.dll_ShowWindow)(pcVar4, 5);\n            pcVar15 = extraout_ECX_00;\n            arg_ch_00 = extraout_ECX_00;\n        }\n        fcn.00404a12(pcVar15, arg_ch_00);\n    }\n    else {\n        arg_ch_00 = pcVar15;\n        if (arg_ch == 0x405) {\n            arg_14h = 1;\n            arg_10h = 0;\n            arg_ch = 0x40f;\n        }\n    }\n    bVar14 = arg_ch == 0x413;\n    uVar8 = arg_14h;\n    if (((bVar14) || (arg_ch == 0x4e)) && ((bVar14 || (*(arg_14h + 4) == 0x408)))) {\n        if (((*0x443b91 & 2) == 0) && ((bVar14 || (*(arg_14h + 8) == -2)))) {\n            arg_ch_00 = arg_ch != 0x413;\n            pcVar15 = arg_8h_00;\n            iVar6 = fcn.004062ee(arg_8h_00, arg_ch_00);\n            if (-1 < iVar6) {\n                iVar11 = iVar6 * 0x2018 + iVar9;\n                uVar12 = *(iVar11 + 8);\n                if ((uVar12 & 0x10) == 0) {\n                    uVar8 = uVar12 ^ 1;\n                    if ((uVar12 & 0x40) != 0) {\n                        uVar12 = uVar12 ^ 0x80;\n                        uVar8 = uVar12 | 1;\n                        if ((uVar12 & 0x80) == 0) {\n                            uVar8 = uVar12 & 0xfffffffe;\n                        }\n                    }\n                    *(iVar11 + 8) = uVar8;\n                    fcn.00401220(iVar6);\n                    arg_10h = 1;\n                    arg_ch = 0x40f;\n                    uVar8 = (*0x443b91 & 1) == 0;\n                }\n            }\n        }\n        if (arg_14h != 0) {\n            if (*(arg_14h + 8) == -0x192) {\n                arg_ch_00 = 0x419;\n                pcVar15 = arg_8h_00;\n                (*_sym.imp.USER32.dll_SendMessageA)(arg_8h_00, 0x419, 0, *(arg_14h + 0x5c));\n            }\n            if (*(arg_14h + 8) == -0x196) {\n                if (*(arg_14h + 0xc) == 2) {\n                    puVar1 = iVar9 + 8 + *(arg_14h + 0x5c) * 0x2018;\n                    *puVar1 = *puVar1 | 0x20;\n                }\n                else {\n                    puVar1 = iVar9 + 8 + *(arg_14h + 0x5c) * 0x2018;\n                    *puVar1 = *puVar1 & 0xffffffdf;\n                }\n            }\n        }\n    }\n    pcVar3 = _sym.imp.USER32.dll_SendMessageA;\n    if (arg_ch == 0x111) {\n        if ((arg_10h != 0x3f9) || (arg_10h >> 0x10 != 1)) goto code_r0x00406ca6;\n        arg_ch_00 = 0x147;\n        pcVar15 = pcVar4;\n        iVar9 = (*_sym.imp.USER32.dll_SendMessageA)(pcVar4, 0x147, 0, 0);\n        if (iVar9 == -1) goto code_r0x00406ca6;\n        iVar9 = (*pcVar3)(pcVar4, 0x150, iVar9, 0);\n        if (iVar9 == -1) {\n            iVar9 = 0x20;\n        }\n        else if (*(iVar13 + 0x94 + iVar9 * 4) == 0) {\n            iVar9 = 0x20;\n        }\n        fcn.0040133f(iVar9);\n        uVar8 = 0;\n        (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0x420, 0, iVar9);\n        arg_10h = 1;\n        arg_ch = 0x40f;\ncode_r0x00406a78:\n        arg_ch_00 = NULL;\n        pcVar15 = NULL;\n        uVar5 = fcn.0040128f(0, 0);\n        if (arg_10h != 0) {\n            fcn.0040389b(8);\n        }\n        if (uVar8 != 0) {\n            uVar8 = fcn.00401388(*0x43a934);\n            fcn.0040133f(uVar8);\n            iVar6 = 0;\n            for (iVar9 = 0; iVar9 < uVar8; iVar9 = iVar9 + 1) {\n                iVar6 = (iVar6 + 1) - (*(iVar13 + 0x94 + iVar9 * 4) == 0);\n            }\n            (*_sym.imp.USER32.dll_SendMessageA)(pcVar4, 0x14e, iVar6, 0, uVar5);\n            arg_ch = 0x420;\n        }\n        fcn.0040128f(0, 0);\n        iVar13 = *0x43a934;\n        var_34h = 0xf030;\n        iVar9 = *0x443b54;\n        for (var_84h = 0; var_84h < *0x443b58; var_84h = var_84h + 1) {\n            iVar6 = *(iVar13 + var_84h * 4);\n            if (iVar6 != 0) {\n                uVar12 = *(iVar9 + 8);\n                var_40h = 8;\n                if ((uVar12 & 0x100) != 0) {\n                    var_30h = iVar9 + 0x18;\n                    var_40h = 9;\n                    *(iVar9 + 8) = *(iVar9 + 8) & 0xfffffeff;\n                }\n                iVar11 = 3;\n                if ((uVar12 & 0x40) == 0) {\n                    iVar11 = (uVar12 & 1) + 1;\n                    if ((uVar12 & 0x10) != 0) {\n                        iVar11 = (uVar12 & 1) + 4;\n                    }\n                }\n                var_38h = (uVar12 & 8) * 2 | uVar12 & 0x20 | iVar11 << 0xc;\n                var_3ch = iVar6;\n                (*_sym.imp.USER32.dll_SendMessageA)(arg_8h_00, 0x1102, ((uVar12 & 0x20) >> 5) + 1, iVar6);\n                (*_sym.imp.USER32.dll_SendMessageA)(arg_8h_00, 0x110d, 0, &var_40h);\n            }\n            iVar9 = iVar9 + 0x2018;\n        }\n        (*_sym.imp.USER32.dll_InvalidateRect)(arg_8h_00, 0, 1);\n        if (*(*0x447bcc + 0x10) != 0) {\n            fcn.004049a0();\n            fcn.00404bd6();\n        }\n    }\n    else {\n        if (arg_ch == 0x200) {\n            arg_ch_00 = 0x200;\n            (*_sym.imp.USER32.dll_SendMessageA)(arg_8h_00, 0x200, 0, 0);\n            pcVar15 = arg_8h_00;\n            goto code_r0x00406ca6;\n        }\n        if (arg_ch == 0x40b) {\n            if (*0x43a940 != 0) {\n                pcVar15 = (*_sym.imp.COMCTL32.DLL_ImageList_Destroy)(*0x43a940, arg_ch_00);\n            }\n            if (*0x43a934 != 0) {\n                pcVar15 = (*_sym.imp.KERNEL32.dll_GlobalFree)(*0x43a934);\n            }\n            *0x43a940 = 0;\n            *0x43a934 = 0;\n            *0x443b44 = 0;\n            goto code_r0x00406ca6;\n        }\n        if (arg_ch == 0x40f) goto code_r0x00406a78;\n    }\n    pcVar4 = _sym.imp.USER32.dll_ShowWindow;\n    if ((arg_ch == 0x420) && ((*0x443b91 & 1) != 0)) {\n        iVar13 = (uVar8 == 0x20) << 3;\n        (*_sym.imp.USER32.dll_ShowWindow)(arg_8h_00, iVar13);\n        uVar5 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3fe);\n        (*pcVar4)(uVar5, iVar13);\n        pcVar15 = extraout_ECX_01;\n        arg_ch_00 = extraout_ECX_01;\n    }\ncode_r0x00406ca6:\n    fcn.00404e8a(pcVar15, arg_ch_00);\n    return;\n}\n",
        "token_count": 3801
    },
    "00406eee": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00406eee(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    ushort *puVar9;\n    int32_t iVar10;\n    uint *puVar11;\n    ulong uVar12;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_60h;\n    int32_t var_58h;\n    ushort *var_4ch;\n    uint var_48h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    uint var_1ch;\n    uint var_ch;\n    \n    pcVar2 = _sym.imp.USER32.dll_ShowWindow;\n    pcVar1 = _sym.imp.USER32.dll_GetDlgItem;\n    iVar10 = *0x447bb0;\n    if (arg_ch == 0x110) {\n        puVar11 = &var_60h;\n        for (iVar10 = 8; iVar10 != 0; iVar10 = iVar10 + -1) {\n            *puVar11 = 0;\n            puVar11 = puVar11 + 1;\n        }\n        var_60h = 2;\n        var_58h = 0xffffffff;\n        var_4ch = 0xffffffff;\n        iVar10 = *(*0x443b48 + 0x5c);\n        iVar7 = *(*0x443b48 + 0x60);\n        *0x447bac = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x403);\n        *0x447bc8 = (*pcVar1)(arg_8h, 0x3ee);\n        iVar3 = (*pcVar1)(arg_8h, 0x3f8);\n        *0x447bb0 = iVar3;\n        fcn.00404a12(pcVar1, pcVar1);\n        *0x447bbc = fcn.004049a0();\n        *0x447bb4 = 0;\n        uVar4 = (*_sym.imp.USER32.dll_GetClientRect)(iVar3, &var_2ch);\n        var_58h = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x15, uVar4);\n        pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n        var_58h = var_24h - var_58h;\n        (*_sym.imp.USER32.dll_SendMessageA)(iVar3, 0x101b, 0, &var_60h);\n        (*pcVar1)(iVar3, 0x1036, 0x4000, 0x4000);\n        if (-1 < iVar10) {\n            (*pcVar1)(iVar3, 0x1001, 0, iVar10);\n            (*pcVar1)(iVar3, 0x1026, 0, iVar10);\n        }\n        if (-1 < iVar7) {\n            (*_sym.imp.USER32.dll_SendMessageA)(iVar3, 0x1024, 0, iVar7);\n        }\n        fcn.00404b0c();\n        pcVar1 = _sym.imp.USER32.dll_ShowWindow;\n        if ((*0x443b90 & 3) != 0) {\n            iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(*0x447bac, 0);\n            if ((*0x443b90 & 2) == 0) {\n                (*pcVar1)(iVar3, 8);\n                iVar5 = iVar3;\n            }\n            else {\n                *0x447bac = 0;\n            }\n            fcn.00404a12(iVar5, iVar5);\n        }\n        uVar6 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3ec);\n        pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n        (*_sym.imp.USER32.dll_SendMessageA)(uVar6, 0x401, 0, 0x75300000);\n        uVar4 = 0;\n        if ((*0x443b90 & 4) != 0) {\n            (*pcVar1)(uVar6, 0x409, 0, iVar7);\n            (*pcVar1)(uVar6, 0x2001, 0, iVar10);\n            uVar4 = 0;\n        }\n    }\n    else {\n        if (arg_ch == 0x405) {\n            uVar4 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3ec);\n            uVar4 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.00404b4a, uVar4, 0, &var_1ch);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar4);\n        }\n        else if (arg_ch == 0x111) {\n            if (arg_10h == 0x403) {\n                (*_sym.imp.USER32.dll_ShowWindow)(*0x447bac, 0);\n                uVar4 = (*pcVar2)(iVar10, 8);\n                fcn.00404a12(uVar4, uVar4);\n            }\n        }\n        else if (arg_ch == 0x404) {\n            if (*0x447ba8 == 0) {\n                (*_sym.imp.USER32.dll_ShowWindow)(*0x443ba0, 8);\n                if (*0x443b14 == 0) {\n                    fcn.00406dae(*(*0x43692c + 0x34), 0);\n                }\n            }\n            else {\n                *0x436928 = 2;\n            }\n            fcn.00404a71();\n        }\n        if ((iVar10 == arg_10h) && (arg_ch == 0x7b)) {\n            iVar7 = (*_sym.imp.USER32.dll_SendMessageA)(iVar10, 0x1004, 0, 0);\n            uVar4 = 0;\n            if (0 < iVar7) {\n                uVar4 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n                uVar6 = fcn.00407b1f(0, 0xffffffe1);\n                (*_sym.imp.USER32.dll_AppendMenuA)(uVar4, 0, 1, uVar6);\n                if (arg_14h == -1) {\n                    (*_sym.imp.USER32.dll_GetWindowRect)(iVar10, &var_2ch);\n                }\n                else {\n                    var_2ch = arg_14h;\n                    var_28h = arg_14h >> 0x10;\n                }\n                iVar3 = (*_sym.imp.USER32.dll_TrackPopupMenu)(uVar4, 0x180, var_2ch, var_28h, 0, arg_8h, 0);\n                pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n                uVar4 = 0;\n                if (iVar3 == 1) {\n                    iVar3 = 1;\n                    var_58h = 0;\n                    var_4ch = 0x42e8f0;\n                    var_48h = 0x7fff;\n                    iVar5 = iVar7;\n                    do {\n                        iVar5 = iVar5 + -1;\n                        iVar8 = (*pcVar1)(iVar10, 0x102d, iVar5, &var_60h);\n                        iVar3 = iVar8 + 2 + iVar3;\n                    } while (iVar5 != 0);\n                    uVar4 = (*_sym.imp.USER32.dll_OpenClipboard)(0);\n                    (*_sym.imp.USER32.dll_EmptyClipboard)(uVar4);\n                    uVar12 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x42, iVar3);\n                    puVar9 = (*_sym.imp.KERNEL32.dll_GlobalLock)(uVar12);\n                    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n                    do {\n                        iVar8 = iVar5 + 1;\n                        var_4ch = puVar9;\n                        iVar3 = (*pcVar1)(iVar10, 0x102d, iVar5, &var_60h);\n                        *(puVar9 + iVar3) = 0xa0d;\n                        puVar9 = puVar9 + iVar3 + 1;\n                        iVar5 = iVar8;\n                    } while (iVar8 != iVar7);\n                    (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar12);\n                    uVar4 = (*_sym.imp.USER32.dll_SetClipboardData)(1, uVar12);\n                    (*_sym.imp.USER32.dll_CloseClipboard)(uVar4, uVar4);\n                    uVar4 = 0;\n                }\n            }\n        }\n        else {\n            uVar4 = fcn.00404e8a();\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 2019
    },
    "004077a0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004077a0(uint lpFileName)\n\n{\n    uint32_t uVar1;\n    uint var_4h;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(lpFileName);\n    if (uVar1 != 0xffffffff) {\n        (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(lpFileName, uVar1 & 0xfffffffe);\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "004077d2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl fcn.004077d2(uint lpFileName, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_bp_4h;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(lpFileName);\n    if (iVar1 == -1) {\n        iVar1 = 0;\n    }\n    (*_sym.imp.KERNEL32.dll_CreateFileA)(lpFileName, arg_ch, 1, 0, arg_10h, iVar1, 0);\n    return;\n}\n",
        "token_count": 138
    },
    "00407e00": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407e00(uint lpFileName)\n\n{\n    uint uVar1;\n    ulong uVar2;\n    \n    uVar2 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(lpFileName, 0x443590);\n    uVar1 = 0;\n    if (uVar2 != -1) {\n        (*_sym.imp.KERNEL32.dll_FindClose)(uVar2);\n        uVar1 = 0x443590;\n    }\n    return uVar1;\n}\n",
        "token_count": 111
    },
    "00407f42": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00407f42(char *arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    char *arg_8h_00;\n    int32_t iVar6;\n    char *pcVar7;\n    char *pcVar8;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    char *lpNumberOfBytesWritten;\n    uint var_ch;\n    \n    pcVar1 = fcn.00407eef(1);\n    if ((pcVar1 == NULL) || (iVar2 = (*pcVar1)(arg_8h, arg_ch, 5),  iVar2 == 0)) {\n        *0x442990 = 0x4c554e;\n        if (arg_ch != 0) {\n            uVar3 = fcn.004077d2(arg_ch, 0, 1);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar3);\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetShortPathNameA)(arg_ch, 0x442990, 0x400);\n            if (0x400 < iVar2) {\n                return;\n            }\n            if (iVar2 == 0) {\n                return;\n            }\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetShortPathNameA)(arg_8h, 0x442d90, 0x400);\n        if (0x400 < iVar2) {\n            return;\n        }\n        if (iVar2 == 0) {\n            return;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_wsprintfA)(0x443190, \"%s=%s\\r\\n\", 0x442990, 0x442d90);\n        fcn.00407b1f(0x442d90, *(*0x443b48 + 0x128));\n        iVar4 = fcn.004077d2(0x442d90, 0xc0000000, 4);\n        if (iVar4 != -1) {\n            pcVar5 = (*_sym.imp.KERNEL32.dll_GetFileSize)(iVar4, 0);\n            arg_8h_00 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, pcVar5 + iVar2 + 10);\n            if (((arg_8h_00 != NULL) &&\n                (arg_8h = arg_8h_00, \n                iVar6 = (*_sym.imp.KERNEL32.dll_ReadFile)(iVar4, arg_8h_00, pcVar5, &lpNumberOfBytesWritten, 0), \n                iVar6 != 0)) && (pcVar5 == lpNumberOfBytesWritten)) {\n                arg_8h = \"[Rename]\\r\\n\";\n                iVar6 = fcn.0040770a(arg_8h_00, \"[Rename]\\r\\n\");\n                if (iVar6 == 0) {\n                    pcVar8 = arg_8h_00 + pcVar5;\n                    pcVar5 = pcVar5 + 10;\n                    fcn.00407a0d(pcVar8, \"[Rename]\\r\\n\");\n                    pcVar8 = pcVar5;\n                }\n                else {\n                    pcVar7 = fcn.0040770a(iVar6 + 10, 0x40b3ef);\n                    pcVar8 = pcVar5;\n                    if (pcVar7 != NULL) {\n                        pcVar8 = pcVar7;\n                        while (pcVar8 = pcVar8 + 1,  pcVar8 < arg_8h_00 + pcVar5) {\n                            pcVar8[iVar2] = *pcVar8;\n                        }\n                        pcVar8 = pcVar7 + (1 - arg_8h_00);\n                    }\n                }\n                fcn.00407777(pcVar8 + arg_8h_00, 0x443190, iVar2);\n                (*_sym.imp.KERNEL32.dll_SetFilePointer)(iVar4, 0, 0, 0);\n                (*_sym.imp.KERNEL32.dll_WriteFile)(iVar4, arg_8h_00, pcVar5 + iVar2, &lpNumberOfBytesWritten, 0);\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(arg_8h_00);\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar4, arg_8h);\n        }\n    }\n    *0x443b18 = *0x443b18 + 1;\n    return;\n}\n",
        "token_count": 1020
    },
    "004081e3": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004081e3(char *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    char *pcVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint *lpString1;\n    uint *arg_ch_00;\n    int32_t iVar6;\n    uint extraout_ECX;\n    char cVar7;\n    ulong uVar8;\n    uint uVar9;\n    uint *puVar10;\n    uint *puVar11;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_12ch;\n    uint var_28h;\n    uint var_ch;\n    \n    iVar1 = fcn.00407e38(arg_8h);\n    iVar5 = *0x443b10;\n    if ((arg_ch & 8) != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(arg_8h);\n        *0x443b10 = iVar5 + (iVar1 == 0);\n        return;\n    }\n    uVar2 = arg_ch & 1;\n    if (uVar2 == 0) {\ncode_r0x00408257:\n        pcVar3 = fcn.00407a0d(0x43e990, arg_8h);\n        if (uVar2 == 0) {\n            pcVar4 = arg_8h;\n            fcn.0040761c(arg_8h);\n        }\n        else {\n            pcVar3 = \"\\\\*.*\";\n            pcVar4 = (*_sym.imp.KERNEL32.dll_lstrcatA)(0x43e990, \"\\\\*.*\");\n        }\n        if ((*arg_8h != '\\0') || (*0x43e990 == '\\\\')) {\n            pcVar4 = (*_sym.imp.KERNEL32.dll_lstrcatA)(arg_8h, 0x40b3dc, pcVar3);\n        }\n        iVar5 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_8h, pcVar4);\n        lpString1 = arg_8h + iVar5;\n        iVar5 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(0x43e990, &var_158h);\n        if (iVar5 != -1) {\n            do {\n                uVar8 = fcn.004075ec(&var_12ch, 0x3f);\n                puVar10 = uVar8 >> 0x20;\n                if ((*uVar8 == '\\0') || (arg_ch_00 = &var_28h,  cVar7 = var_28h,  var_28h == '\\0')) {\n                    arg_ch_00 = &var_12ch;\n                    cVar7 = var_12ch;\n                }\n                if ((cVar7 != '.') ||\n                   ((puVar11 = puVar10,  *(arg_ch_00 + 1) != '\\0' &&\n                    ((*(arg_ch_00 + 1) != '.' || (*(arg_ch_00 + 2) != '\\0')))))) {\n                    puVar10 = lpString1;\n                    fcn.00407a0d(lpString1, arg_ch_00);\n                    if ((var_158h & 0x10) == 0) {\n                        pcVar3 = arg_8h;\n                        uVar9 = extraout_ECX;\n                        fcn.004077a0(arg_8h);\n                        iVar6 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(arg_8h, pcVar3, uVar9);\n                        if (iVar6 == 0) {\n                            if ((arg_ch & 4) == 0) {\n                                *0x443b10 = *0x443b10 + 1;\n                                puVar11 = arg_ch_00;\n                            }\n                            else {\n                                fcn.00406dae(0xfffffff1, arg_8h);\n                                fcn.00407f42(arg_8h, 0);\n                                puVar11 = arg_ch_00;\n                            }\n                        }\n                        else {\n                            fcn.00406dae(0xfffffff2, arg_8h);\n                            puVar11 = arg_ch_00;\n                        }\n                    }\n                    else {\n                        puVar11 = arg_ch_00;\n                        if ((arg_ch & 3) == 3) {\n                            fcn.004081e3(arg_8h, arg_ch);\n                            puVar11 = arg_ch_00;\n                        }\n                    }\n                }\n                uVar8 = (*_sym.imp.KERNEL32.dll_FindNextFileA)(iVar5, &var_158h, puVar10, puVar11);\n            } while (uVar8 != 0);\n            (*_sym.imp.KERNEL32.dll_FindClose)(iVar5, uVar8 >> 0x20);\n        }\n        if (uVar2 == 0) {\n            return;\n        }\n        *(lpString1 + -1) = '\\0';\n        if (iVar1 == 0) goto code_r0x0040846c;\n    }\n    else {\n        if (iVar1 == 0) goto code_r0x0040846c;\n        if ((arg_ch & 2) != 0) goto code_r0x00408257;\n    }\n    iVar5 = fcn.00407e00(arg_8h);\n    if (iVar5 == 0) {\n        return;\n    }\n    fcn.004075a6(arg_8h);\n    fcn.004077a0(arg_8h);\n    iVar5 = (*_sym.imp.KERNEL32.dll_RemoveDirectoryA)(arg_8h);\n    if (iVar5 != 0) {\n        fcn.00406dae(0xffffffe5, arg_8h);\n        return;\n    }\n    if ((arg_ch & 4) != 0) {\n        fcn.00406dae(0xfffffff1, arg_8h);\n        fcn.00407f42(arg_8h, 0);\n        return;\n    }\ncode_r0x0040846c:\n    *0x443b10 = *0x443b10 + 1;\n    return;\n}\n",
        "token_count": 1387
    },
    "0040857e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0040857e(uint32_t *param_1)\n\n{\n    uint16_t uVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar6;\n    uint32_t uVar5;\n    uint8_t uVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t *puVar11;\n    uint32_t *puVar12;\n    bool bVar13;\n    uint var_134h;\n    uint32_t var_130h;\n    uint32_t var_12ch;\n    uint32_t var_128h;\n    uint32_t var_124h;\n    uint32_t var_120h;\n    uint32_t var_11ch;\n    uint32_t var_118h;\n    uint32_t var_114h;\n    uint32_t var_110h;\n    uint32_t var_10ch;\n    uint32_t var_108h;\n    uint32_t var_104h;\n    uint8_t *var_100h;\n    uint32_t var_fch;\n    uint32_t var_f8h;\n    uint8_t var_f2h;\n    uint32_t var_f1h;\n    uint32_t var_ech;\n    uint var_e8h;\n    uint32_t var_e4h;\n    uint32_t var_e0h;\n    uint32_t hMem;\n    uint32_t var_d8h;\n    uint32_t var_d4h;\n    uint32_t var_d0h;\n    uint16_t *var_cch;\n    uint32_t var_c8h;\n    uint32_t var_c4h;\n    uint32_t var_c0h;\n    uint16_t *var_bch;\n    uint8_t *var_b8h;\n    uint32_t var_b4h;\n    uint32_t var_b0h;\n    uint32_t var_ach;\n    uint var_a0h;\n    uint var_ch;\n    \n    puVar11 = param_1;\n    puVar12 = &var_a0h;\n    for (iVar8 = 0x22; iVar8 != 0; iVar8 = iVar8 + -1) {\n        *puVar12 = *puVar11;\n        puVar11 = puVar11 + 1;\n        puVar12 = puVar12 + 1;\n    }\n    var_ech = param_1[1];\n    var_11ch = param_1[2];\n    uVar10 = *param_1;\n    var_114h = param_1[3];\n    var_128h = param_1[4];\n    var_e0h = param_1[5];\n    var_b8h = param_1[6];\n    var_b4h = param_1[7];\n    var_100h = param_1[8];\n    var_104h = param_1[9];\n    var_fch = param_1[10];\n    var_f1h._0_1_ = *(param_1 + 0xb);\n    var_f2h = *(param_1 + 0x2d);\n    var_cch = param_1[0xc];\n    var_d8h = param_1[0xe];\n    var_bch = param_1[0xd];\n    var_c4h = param_1[0x10];\n    var_110h = param_1[0xf];\n    var_b0h = param_1[0x12];\n    var_ach = param_1[0x11];\n    var_118h = param_1[0x13];\n    var_c0h = param_1[0x14];\n    var_120h = param_1[0x15];\n    var_e4h = param_1[0x16];\n    var_c8h = param_1[0x17];\n    var_108h = param_1[0x18];\n    var_10ch = param_1[0x19];\n    var_124h = param_1[0x1a];\n    var_12ch = param_1[0x1b];\n    var_130h = param_1[0x1c];\n    unique0x00007a00 = param_1[0x1d];\n    var_d0h = param_1[0x1e];\n    var_d4h = param_1[0x1f];\n    var_f8h = param_1[0x20];\n    hMem = param_1[0x21];\n    if (var_e4h == 0xffffffff) {\n        return 1;\n    }\ncode_r0x004086ff:\n    uVar4 = var_108h;\n    if (0x1c < uVar10) {\n        return 0xffffffff;\n    }\n    var_d4h._0_1_ = 8 - var_118h;\n    uVar5 = uVar10;\ncode_r0x0040871e:\n    uVar9 = var_c8h;\n    // WARNING: Could not find normalized switch variable to match jumptable\n    // switch table (29 cases) at 0x40b528\n    switch(uVar10) {\n    case 0:\n        goto code_r0x00408730;\n    case 1:\n        goto code_r0x0040885e;\n    case 2:\n        goto code_r0x00408953;\n    case 3:\n        goto code_r0x00408916;\n    case 4:\n        goto code_r0x0040929f;\n    case 5:\n        goto code_r0x00409304;\n    case 6:\n        if (var_b0h == 0) {\n            var_cch = hMem + 0xe6c +\n                      ((var_f1h >> (var_d4h & 0x1f)) + ((var_130h & var_fch) << (var_118h & 0x1f))) * 0x600;\n            if (var_c0h < 4) {\n                var_c0h = 0;\n            }\n            else {\n                uVar5 = var_c0h - 6;\n                bVar13 = 9 < var_c0h;\n                var_c0h = var_c0h - 3;\n                if (bVar13) {\n                    var_c0h = uVar5;\n                }\n            }\n            var_ach = 1;\n            if (var_120h == 0) {\n                do {\n                    var_bch = var_cch + var_ach;\n                    uVar1 = *var_bch;\n                    uVar5 = (var_d0h >> 0xb) * uVar1;\n                    if (var_d4h < uVar5) {\n                        *var_bch = uVar1 + (0x800 - uVar1 >> 5);\n                        var_d0h = uVar5;\n                        var_ach = var_ach * 2;\n                    }\n                    else {\n                        var_d0h = var_d0h - uVar5;\n                        var_d4h = var_d4h - uVar5;\n                        *var_bch = uVar1 - (uVar1 >> 5);\n                        var_ach = var_ach * 2 + 1;\n                    }\n                    if (var_d0h < 0x1000000) {\ncode_r0x00408c71:\n                        if (var_b4h == 0) {\n                            uVar5 = 0xf;\n                            goto code_r0x004096bf;\n                        }\n                        var_b4h = var_b4h - 1;\n                        var_d0h = var_d0h << 8;\n                        uVar7 = *var_b8h;\n                        var_b8h = var_b8h + 1;\n                        var_d4h = uVar7 | var_d4h << 8;\n                    }\n                } while (var_ach < 0x100);\n                var_f1h._0_1_ = var_ach;\n                goto code_r0x00408cba;\n            }\n            uVar5 = stack0xffffff0c - var_c8h;\n            if (var_e0h <= uVar5) {\n                uVar5 = var_e0h + uVar5;\n            }\n            var_f2h = *(var_f8h + uVar5);\n            do {\n                uVar7 = var_f2h << 1;\n                var_c4h = var_f2h >> 7;\n                var_bch = var_cch + (var_c4h + 1) * 0x100 + var_ach;\n                uVar1 = *var_bch;\n                uVar5 = (var_d0h >> 0xb) * uVar1;\n                bVar13 = uVar5 <= var_d4h;\n                if (bVar13) {\n                    var_d0h = var_d0h - uVar5;\n                    var_d4h = var_d4h - uVar5;\n                    var_ach = var_ach * 2 + 1;\n                    *var_bch = uVar1 - (uVar1 >> 5);\n                }\n                else {\n                    var_ach = var_ach << 1;\n                    *var_bch = (0x800 - uVar1 >> 5) + uVar1;\n                    var_d0h = uVar5;\n                }\n                var_b0h = bVar13;\n                var_f2h = uVar7;\n                if (var_d0h < 0x1000000) {\ncode_r0x00408af5:\n                    if (var_b4h == 0) {\n                        uVar5 = 0xd;\n                        goto code_r0x004096bf;\n                    }\n                    var_b4h = var_b4h - 1;\n                    var_d0h = var_d0h << 8;\n                    uVar7 = *var_b8h;\n                    var_b8h = var_b8h + 1;\n                    var_d4h = uVar7 | var_d4h << 8;\n                }\n                if (var_c4h != var_b0h) goto code_r0x00408bc8;\n            } while (var_ach < 0x100);\n            goto code_r0x00408bec;\n        }\n        var_120h = 1;\n        var_ech = 7;\n        var_bch = hMem + 0x180 + var_c0h * 2;\n        goto code_r0x0040929f;\n    case 7:\n        if (var_b0h == 1) {\n            var_ech = 8;\n            var_bch = hMem + 0x198 + var_c0h * 2;\n            goto code_r0x0040929f;\n        }\n        var_11ch = 0x16;\n        var_cch = hMem + 0x664;\n        var_c0h = (6 < var_c0h) * 3 + 7;\n        var_124h = var_10ch;\n        var_108h = var_c8h;\n        var_10ch = uVar4;\n        break;\n    case 8:\n        if (var_b0h == 0) {\n            var_ech = 9;\n            var_bch = hMem + (var_110h + 0xf0 + var_c0h * 0x10) * 2;\n        }\n        else {\n            var_ech = 10;\n            var_bch = hMem + 0x1b0 + var_c0h * 2;\n        }\n        goto code_r0x0040929f;\n    case 9:\n        if (var_b0h == 0) {\n            if (var_fch == 0) {\n                return 0xffffffff;\n            }\n            var_c0h = (6 < var_c0h) * 2 + 9;\n            goto code_r0x00408dcd;\n        }\n        goto code_r0x00408eee;\n    case 10:\n        if (var_b0h == 0) {\n            var_c8h = var_108h;\n            goto code_r0x00408ee8;\n        }\n        var_ech = 0xb;\n        var_bch = hMem + 0x1c8 + var_c0h * 2;\n        goto code_r0x0040929f;\n    case 0xb:\n        if (var_b0h == 0) {\n            var_c8h = var_10ch;\n        }\n        else {\n            var_c8h = var_124h;\n            var_124h = var_10ch;\n        }\n        var_10ch = var_108h;\ncode_r0x00408ee8:\n        var_108h = uVar9;\ncode_r0x00408eee:\n        var_11ch = 0x15;\n        var_cch = hMem + 0xa68;\n        break;\n    case 0xc:\n        while (var_b4h != 0) {\n            var_b4h = var_b4h - 1;\n            var_d0h = var_d0h << 8;\n            uVar7 = *var_b8h;\n            var_b8h = var_b8h + 1;\n            var_d4h = uVar7 | var_d4h << 8;\n            do {\n                var_c4h = var_c4h - 1;\ncode_r0x004090a0:\n                if (var_c4h < 1) {\n                    var_b0h = 4;\n                    var_c8h = var_c8h + var_ach * 0x10;\n                    var_cch = hMem + 0x644;\n                    goto code_r0x004090d3;\n                }\n                var_d0h = var_d0h >> 1;\n                var_ach = var_ach << 1;\n                if (var_d0h <= var_d4h) {\n                    var_ach = var_ach | 1;\n                    var_d4h = var_d4h - var_d0h;\n                }\n            } while (0xffffff < var_d0h);\n        }\n        uVar5 = 0xc;\n        goto code_r0x004096bf;\n    case 0xd:\n        goto code_r0x00408af5;\n    case 0xe:\n        goto code_r0x00408b95;\n    case 0xf:\n        goto code_r0x00408c71;\n    case 0x10:\n        goto code_r0x00409190;\n    case 0x11:\n        break;\n    case 0x12:\n        if (var_b0h == 0) {\n            var_e4h = 0;\n            iVar8 = var_110h * 8 + 2;\ncode_r0x004093b4:\n            var_cch = var_cch + iVar8;\n            var_b0h = 3;\n            goto code_r0x004093de;\n        }\n        var_ech = 0x13;\n        var_bch = var_cch + 1;\n        goto code_r0x0040929f;\n    case 0x13:\n        if (var_b0h == 0) {\n            var_e4h = 8;\n            iVar8 = var_110h * 8 + 0x82;\n            goto code_r0x004093b4;\n        }\n        var_cch = var_cch + 0x102;\n        var_e4h = 0x10;\n        var_b0h = 8;\ncode_r0x004093de:\n        var_114h = 0x14;\n    case 0x17:\ncode_r0x004093e8:\n        var_d8h = 1;\n        var_c4h = var_b0h;\n        goto code_r0x004094a4;\n    case 0x14:\n        var_e4h = var_e4h + var_ach;\n        uVar10 = var_11ch;\n        goto code_r0x004086ff;\n    case 0x15:\n        var_c0h = (6 < var_c0h) * 3 + 8;\n        goto code_r0x004091e8;\n    case 0x16:\n        uVar10 = 3;\n        if (var_e4h < 4) {\n            uVar10 = var_e4h;\n        }\n        var_b0h = 6;\n        var_114h = 0x19;\n        var_cch = hMem + 0x360 + uVar10 * 0x80;\n        goto code_r0x004093e8;\n    case 0x18:\n        goto code_r0x00409471;\n    case 0x19:\n        var_c8h = var_ach;\n        if (3 < var_ach) {\n            iVar8 = var_ach >> 1;\n            uVar9 = iVar8 - 1;\n            var_c8h = (var_ach & 1 | 2) << (uVar9 & 0x1f);\n            if (0xd < var_ach) {\n                var_ach = 0;\n                var_c4h = iVar8 - 5;\n                goto code_r0x004090a0;\n            }\n            var_cch = hMem + 0x55e + (var_c8h - var_ach) * 2;\n            var_b0h = uVar9;\ncode_r0x004090d3:\n            var_ach = 0;\n            var_d8h = 1;\n            for (var_c4h = 0; var_c4h < var_b0h; var_c4h = var_c4h + 1) {\n                var_bch = var_cch + var_d8h;\n                uVar1 = *var_bch;\n                uVar9 = (var_d0h >> 0xb) * uVar1;\n                if (var_d4h < uVar9) {\n                    *var_bch = (0x800 - uVar1 >> 5) + uVar1;\n                    var_d0h = uVar9;\n                    var_d8h = var_d8h * 2;\n                }\n                else {\n                    var_d0h = var_d0h - uVar9;\n                    var_d4h = var_d4h - uVar9;\n                    var_ach = var_ach | 1 << (var_c4h & 0x1f);\n                    *var_bch = uVar1 - (uVar1 >> 5);\n                    var_d8h = var_d8h * 2 + 1;\n                }\n                if (var_d0h < 0x1000000) {\ncode_r0x00409190:\n                    if (var_b4h == 0) {\n                        uVar5 = 0x10;\n                        goto code_r0x004096bf;\n                    }\n                    var_b4h = var_b4h - 1;\n                    var_d0h = var_d0h << 8;\n                    uVar7 = *var_b8h;\n                    var_b8h = var_b8h + 1;\n                    var_d4h = uVar7 | var_d4h << 8;\n                }\n            }\n            var_c8h = var_ach + var_c8h;\n        }\n        var_c8h = var_c8h + 1;\ncode_r0x004091e8:\n        if (var_c8h != 0) {\n            if (var_fch < var_c8h) {\n                return 0xffffffff;\n            }\n            var_e4h = var_e4h + 2;\n            var_fch = var_fch + var_e4h;\ncode_r0x00409222:\n            do {\n                if (var_104h == 0) {\n                    uVar5 = 0x1c;\n                    goto code_r0x004096bf;\n                }\n                uVar5 = *0x8 - var_c8h;\n                if (var_e0h <= uVar5) {\n                    uVar5 = var_e0h + uVar5;\n                }\n                var_e4h = var_e4h - 1;\n                var_104h = var_104h - 1;\n                var_f1h._0_1_ = *(var_f8h + uVar5);\n                *(var_f8h + *0x8) = var_f1h;\n                *0x8 = (*0x8 + 1) % var_e0h;\n                *var_100h = var_f1h;\n                var_100h = var_100h + 1;\n            } while (0 < var_e4h);\n            goto code_r0x00409295;\n        }\n        var_e4h = 0xffffffff;\n        goto code_r0x004096bf;\n    case 0x1a:\n        goto code_r0x00408cba;\n    case 0x1b:\ncode_r0x00408dcd:\n        if (var_104h != 0) {\n            uVar5 = stack0xffffff0c - var_c8h;\n            if (var_e0h <= uVar5) {\n                uVar5 = var_e0h + uVar5;\n            }\n            var_f1h._0_1_ = *(var_f8h + uVar5);\n            var_fch = var_fch + 1;\n            var_104h = var_104h - 1;\n            *(var_f8h + stack0xffffff0c) = var_f1h;\n            *0x8 = (stack0xffffff0c + 1) % var_e0h;\n            *var_100h = var_f1h;\n            var_100h = var_100h + 1;\n            goto code_r0x00409295;\n        }\n        uVar5 = 0x1b;\n        goto code_r0x004096bf;\n    default:\n        goto code_r0x00409222;\n    }\n    var_ech = 0x12;\n    var_bch = var_cch;\n    goto code_r0x0040929f;\ncode_r0x004094a4:\n    if (var_c4h < 1) goto code_r0x004094b1;\n    var_bch = var_cch + var_d8h;\n    uVar1 = *var_bch;\n    uVar10 = (var_d0h >> 0xb) * uVar1;\n    if (var_d4h < uVar10) {\n        *var_bch = (0x800 - uVar1 >> 5) + uVar1;\n        var_d0h = uVar10;\n        var_d8h = var_d8h * 2;\n    }\n    else {\n        var_d0h = var_d0h - uVar10;\n        var_d4h = var_d4h - uVar10;\n        *var_bch = uVar1 - (uVar1 >> 5);\n        var_d8h = var_d8h * 2 + 1;\n    }\n    if (var_d0h < 0x1000000) {\ncode_r0x00409471:\n        if (var_b4h == 0) {\n            uVar5 = 0x18;\n            goto code_r0x004096bf;\n        }\n        var_b4h = var_b4h - 1;\n        var_d0h = var_d0h << 8;\n        uVar7 = *var_b8h;\n        var_b8h = var_b8h + 1;\n        var_d4h = uVar7 | var_d4h << 8;\n    }\n    var_c4h = var_c4h - 1;\n    goto code_r0x004094a4;\ncode_r0x004094b1:\n    var_ach = var_d8h - (1 << (var_b0h & 0x1f));\n    uVar10 = var_114h;\n    goto code_r0x004086ff;\ncode_r0x00408bc8:\n    if (var_ach < 0x100) {\n        uVar5 = var_ach * 2;\n        var_bch = var_cch + var_ach;\n        uVar1 = *var_bch;\n        uVar9 = (var_d0h >> 0xb) * uVar1;\n        if (var_d4h < uVar9) {\n            *var_bch = uVar1 + (0x800 - uVar1 >> 5);\n            var_d0h = uVar9;\n        }\n        else {\n            var_d0h = var_d0h - uVar9;\n            var_d4h = var_d4h - uVar9;\n            uVar5 = uVar5 + 1;\n            *var_bch = uVar1 - (uVar1 >> 5);\n        }\n        var_ach = uVar5;\n        if (var_d0h < 0x1000000) {\ncode_r0x00408b95:\n            if (var_b4h == 0) {\n                uVar5 = 0xe;\n                goto code_r0x004096bf;\n            }\n            var_b4h = var_b4h - 1;\n            var_d0h = var_d0h << 8;\n            uVar7 = *var_b8h;\n            var_b8h = var_b8h + 1;\n            var_d4h = uVar7 | var_d4h << 8;\n        }\n        goto code_r0x00408bc8;\n    }\ncode_r0x00408bec:\n    var_120h = 0;\n    var_f1h._0_1_ = var_ach;\ncode_r0x00408cba:\n    if (var_104h == 0) {\n        uVar5 = 0x1a;\n        goto code_r0x004096bf;\n    }\n    var_fch = var_fch + 1;\n    var_104h = var_104h - 1;\n    *var_100h = var_f1h;\n    var_100h = var_100h + 1;\n    *(var_f8h + stack0xffffff0c) = var_f1h;\n    *0x8 = (stack0xffffff0c + 1) % var_e0h;\ncode_r0x00409295:\n    uVar5 = 2;\n    goto code_r0x0040871e;\ncode_r0x00408730:\n    if (var_b4h != 0) {\n        uVar7 = *var_b8h;\n        if (0xe1 < uVar7) {\n            return 0xffffffff;\n        }\n        uVar3 = (uVar7 % 0x2d << 8) >> 8;\n        uVar6 = uVar3 % 9;\n        var_118h = uVar6;\n        iVar8 = (0x300 << uVar7 / 0x2d + uVar6) + 0x736;\n        uVar10 = iVar8 * 2;\n        if (uVar10 != var_128h) {\n            if (hMem != 0) {\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(hMem);\n            }\n            hMem = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, uVar10);\n            var_128h = uVar10;\n            if (hMem == 0) {\n                return 0xffffffff;\n            }\n        }\n        while (iVar8 != 0) {\n            iVar8 = iVar8 + -1;\n            *(hMem + iVar8 * 2) = 0x400;\n        }\n        var_b4h = var_b4h - 1;\n        var_b8h = var_b8h + 1;\n        var_12ch = (1 << uVar7 / 0x2d) - 1;\n        var_b0h = 0;\n        var_c4h = 0;\n        var_130h = (1 << uVar3 / 9) - 1;\ncode_r0x0040885e:\n        iVar8 = var_c4h * 8;\n        do {\n            if (var_b4h == 0) {\n                uVar5 = 1;\n                goto code_r0x004096bf;\n            }\n            var_c4h = var_c4h + 1;\n            var_b4h = var_b4h - 1;\n            puVar2 = var_b8h + 1;\n            uVar7 = iVar8;\n            iVar8 = iVar8 + 8;\n            var_b0h = var_b0h | *var_b8h << (uVar7 & 0x1f);\n            var_b8h = puVar2;\n        } while (var_c4h < 4);\n        if (var_b0h != var_e0h) {\n            if (var_f8h != 0) {\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(var_f8h);\n            }\n            var_f8h = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, var_b0h);\n            var_e0h = var_b0h;\n            if (var_f8h == 0) {\n                return 0xffffffff;\n            }\n        }\n        *((var_f8h - 1) + var_e0h) = 0;\n        var_c4h = 5;\n        while (uVar10 = var_c4h - 1,  bVar13 = var_c4h != 0,  var_c4h = uVar10,  bVar13) {\ncode_r0x00408916:\n            if (var_b4h == 0) {\n                uVar5 = 3;\n                goto code_r0x004096bf;\n            }\n            var_b4h = var_b4h - 1;\n            var_d4h = *var_b8h | var_d4h << 8;\n            var_b8h = var_b8h + 1;\n        }\ncode_r0x00408953:\n        var_110h = var_12ch & var_fch;\n        var_ech = 6;\n        var_bch = hMem + (var_c0h * 0x10 + var_110h) * 2;\ncode_r0x0040929f:\n        uVar1 = *var_bch;\n        uVar10 = (var_d0h >> 0xb) * uVar1;\n        bVar13 = uVar10 <= var_d4h;\n        if (bVar13) {\n            var_d0h = var_d0h - uVar10;\n            var_d4h = var_d4h - uVar10;\n            *var_bch = uVar1 - (uVar1 >> 5);\n        }\n        else {\n            *var_bch = (0x800 - uVar1 >> 5) + uVar1;\n            var_d0h = uVar10;\n        }\n        var_b0h = bVar13;\n        uVar10 = var_ech;\n        if (0xffffff < var_d0h) goto code_r0x004086ff;\ncode_r0x00409304:\n        if (var_b4h != 0) {\n            var_d0h = var_d0h << 8;\n            var_b4h = var_b4h - 1;\n            uVar7 = *var_b8h;\n            var_b8h = var_b8h + 1;\n            var_d4h = uVar7 | var_d4h << 8;\n            uVar10 = var_ech;\n            goto code_r0x004086ff;\n        }\n        uVar5 = 5;\n    }\ncode_r0x004096bf:\n    puVar11 = &var_a0h;\n    puVar12 = param_1;\n    for (iVar8 = 0x22; iVar8 != 0; iVar8 = iVar8 + -1) {\n        *puVar12 = *puVar11;\n        puVar11 = puVar11 + 1;\n        puVar12 = puVar12 + 1;\n    }\n    *param_1 = uVar5;\n    param_1[1] = var_ech;\n    param_1[2] = var_11ch;\n    param_1[3] = var_114h;\n    param_1[4] = var_128h;\n    param_1[5] = var_e0h;\n    param_1[6] = var_b8h;\n    param_1[7] = var_b4h;\n    param_1[8] = var_100h;\n    param_1[9] = var_104h;\n    param_1[10] = var_fch;\n    *(param_1 + 0xb) = var_f1h;\n    *(param_1 + 0x2d) = var_f2h;\n    param_1[0xc] = var_cch;\n    param_1[0xd] = var_bch;\n    param_1[0xe] = var_d8h;\n    param_1[0xf] = var_110h;\n    param_1[0x10] = var_c4h;\n    param_1[0x11] = var_ach;\n    param_1[0x15] = var_120h;\n    param_1[0x12] = var_b0h;\n    param_1[0x14] = var_c0h;\n    param_1[0x18] = var_108h;\n    param_1[0x13] = var_118h;\n    param_1[0x17] = var_c8h;\n    param_1[0x1b] = var_12ch;\n    param_1[0x16] = var_e4h;\n    param_1[0x1a] = var_124h;\n    param_1[0x1d] = stack0xffffff0c;\n    param_1[0x19] = var_10ch;\n    param_1[0x1e] = var_d0h;\n    param_1[0x1f] = var_d4h;\n    param_1[0x1c] = var_130h;\n    param_1[0x20] = var_f8h;\n    param_1[0x21] = hMem;\n    return 0;\n}\n",
        "token_count": 7585
    },
    "00401220": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401220(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    uVar1 = *(*0x443b54 + 8 + arg_8h * 0x2018);\n    if ((uVar1 & 2) != 0) {\n        iVar4 = 0;\n        iVar3 = 0;\n        iVar5 = arg_8h * 0x2018 + *0x443b54;\n        while (arg_8h = arg_8h + 1,  arg_8h < *0x443b58) {\n            uVar2 = *(iVar5 + 0x2020 + iVar4);\n            if ((uVar2 & 2) == 0) {\n                if ((uVar2 & 4) == 0) {\n                    if ((uVar2 & 0x10) == 0) {\n                        *(iVar5 + 0x2020 + iVar4) = uVar2 & 0xfffffffe | uVar1 & 1;\n                    }\n                }\n                else {\n                    if (iVar3 == 0) {\n                        return;\n                    }\n                    iVar3 = iVar3 + -1;\n                }\n            }\n            else {\n                iVar3 = iVar3 + 1;\n            }\n            iVar4 = iVar4 + 0x2018;\n        }\n    }\n    return;\n}\n",
        "token_count": 332
    },
    "0040128f": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint32_t __cdecl fcn.0040128f(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar1 = *0x443b54;\n    iVar4 = arg_8h * 0x2018 + *0x443b54;\n    if (((*(iVar4 + 8) & 2) != 0) && (arg_ch != 0)) {\n        arg_8h = arg_8h + 1;\n        *(iVar4 + 8) = *(iVar4 + 8) & 0xffffffbe;\n    }\n    iVar6 = 0;\n    iVar5 = 0;\n    while( true ) {\n        if (*0x443b58 <= arg_8h) {\n            return 0;\n        }\n        iVar3 = arg_8h * 0x2018 + iVar1;\n        uVar2 = *(iVar3 + 8);\n        if ((uVar2 & 2) == 0) {\n            arg_8h = arg_8h + 1;\n        }\n        else {\n            arg_8h = fcn.0040128f(arg_8h, 1);\n            uVar2 = *(iVar3 + 8);\n        }\n        if ((uVar2 & 4) != 0) break;\n        iVar5 = (iVar5 + 1) - ((uVar2 & 0x40) == 0);\n        if ((uVar2 & 1) == 0) {\n            iVar6 = iVar6 + 1;\n        }\n        else {\n            iVar5 = iVar5 + 1;\n        }\n    }\n    if (iVar5 == 0) {\n        return arg_8h;\n    }\n    if (iVar6 != 0) {\n        *(iVar4 + 8) = *(iVar4 + 8) | 0x40;\n        return arg_8h;\n    }\n    *(iVar4 + 8) = *(iVar4 + 8) & 0xffffff00 | *(iVar4 + 8) & 0x7f | 1;\n    return arg_8h;\n}\n",
        "token_count": 537
    },
    "00401388": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401388(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    iVar1 = 0;\n    do {\n        if (*(*0x443b48 + 0x94 + iVar1 * 4) != 0) {\n            iVar2 = 0;\n            iVar3 = *0x443b54;\n            while( true ) {\n                if (iVar2 == *0x443b58) {\n                    return iVar1;\n                }\n                if (((*(iVar3 + 8) & 6) == 0) &&\n                   (((arg_8h == 0 || (*(arg_8h + iVar2 * 4) != 0)) &&\n                    ((1 << (iVar1 & 0x1f) & *(iVar3 + 4)) != (*(iVar3 + 8) & 1) << (iVar1 & 0x1f))))) break;\n                iVar2 = iVar2 + 1;\n                iVar3 = iVar3 + 0x2018;\n            }\n        }\n        iVar1 = iVar1 + 1;\n    } while (iVar1 != 0x20);\n    return 0x20;\n}\n",
        "token_count": 303
    },
    "00405adf": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00405adf(uint arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    code *pcVar2;\n    code *pcVar3;\n    char *pcVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    uint extraout_ECX;\n    ulong uVar9;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    char *var_24h;\n    int32_t var_20h;\n    code *var_1ch;\n    uint var_ch;\n    \n    iVar6 = *0x43692c;\n    if (arg_ch == 0x110) {\n        uVar8 = *(arg_14h + 0x30);\n        if (uVar8 < 0) {\n            uVar8 = *(*0x447bcc + ~uVar8 * 4);\n        }\n        cVar1 = *(uVar8 + *0x443b64);\n        pcVar4 = uVar8 + *0x443b64 + 1;\n        uVar8 = *(arg_14h + 0x14);\n        var_20h = 0;\n        var_1ch = fcn.00404aa9;\n        var_24h = pcVar4;\n        fcn.00404b0c();\n        fcn.00404b0c();\n        (*_sym.imp.USER32.dll_CheckDlgButton)(arg_8h, 0x40b - (uVar8 & 1 | (uVar8 & 0x20) == 0), 1);\n        fcn.00404af0();\n        uVar5 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 1000);\n        fcn.00404a12(extraout_ECX, extraout_ECX);\n        (*_sym.imp.USER32.dll_SendMessageA)(uVar5, 0x45b, 1, 0);\n        iVar6 = *(*0x443b48 + 0x68);\n        if (iVar6 < 0) {\n            iVar6 = (*_sym.imp.USER32.dll_GetSysColor)(-iVar6);\n        }\n        pcVar2 = _sym.imp.USER32.dll_SendMessageA;\n        (*_sym.imp.USER32.dll_SendMessageA)(uVar5, 0x443, 0, iVar6);\n        (*pcVar2)(uVar5, 0x445, 0, 0x4010000);\n        *0x43a944 = 0;\n        uVar7 = fcn.00407a35(pcVar4);\n        (*pcVar2)(uVar5, 0x435, 0, uVar7);\n        (*pcVar2)(uVar5, 0x449, cVar1, &var_24h);\n        uVar5 = 0;\n        *0x43a948 = 0;\n    }\n    else {\n        if (arg_ch == 0x111) {\n            if (((arg_10h >> 0x10 == 0) && (*0x43a948 == 0)) && ((*(*0x43692c + 0x14) & 0x20) != 0)) {\n                uVar5 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x40a);\n                uVar8 = (*_sym.imp.USER32.dll_SendMessageA)(uVar5, 0xf0, 0, 0);\n                *(iVar6 + 0x14) = *(iVar6 + 0x14) & 0xfffffffe | uVar8 & 1;\n                fcn.00404af0();\n                fcn.004049d3();\n            }\n        }\n        else if (arg_ch == 0x4e) {\n            uVar5 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 1000);\n            if ((*(arg_14h + 8) == 0x70b) && (*(arg_14h + 0xc) == 0x201)) {\n                var_24h = *(arg_14h + 0x18);\n                var_20h = *(arg_14h + 0x1c);\n                var_1ch = 0x447bd0;\n                if (var_20h - var_24h < 0x4000) {\n                    (*_sym.imp.USER32.dll_SendMessageA)(uVar5, 1099, 0, &var_24h);\n                    pcVar2 = _sym.imp.USER32.dll_LoadCursorA;\n                    uVar9 = (*_sym.imp.USER32.dll_LoadCursorA)(0, 0x7f02);\n                    pcVar3 = _sym.imp.USER32.dll_SetCursor;\n                    (*_sym.imp.USER32.dll_SetCursor)(uVar9);\n                    (*_sym.imp.SHELL32.DLL_ShellExecuteA)(arg_8h, \"open\", var_1ch, 0, 0, 1);\n                    uVar5 = (*pcVar2)(0, 0x7f00);\n                    (*pcVar3)(uVar5, arg_8h);\n                }\n            }\n            if ((*(arg_14h + 8) == 0x700) && (*(arg_14h + 0xc) == 0x100)) {\n                if (*(arg_14h + 0x10) == 0xd) {\n                    (*_sym.imp.USER32.dll_SendMessageA)(*0x443ba0, 0x111, 1, 0);\n                }\n                if (*(arg_14h + 0x10) != 0x1b) {\n                    return 1;\n                }\n                (*_sym.imp.USER32.dll_SendMessageA)(*0x443ba0, 0x10, 0, 0);\n                return 1;\n            }\n        }\n        else if (arg_ch == 0x40b) {\n            *0x43a948 = *0x43a948 + 1;\n        }\n        uVar5 = fcn.00404e8a();\n    }\n    return uVar5;\n}\n",
        "token_count": 1388
    },
    "00406dae": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00406dae(uint arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint var_5ch;\n    uint var_4ch;\n    int32_t var_48h;\n    uint var_44h;\n    uint var_38h;\n    uint var_ch;\n    \n    iVar2 = *0x447bb0;\n    uVar1 = *0x443b3c;\n    if (*0x447bb0 != 0) {\n        uVar6 = *0x443b3c & 1;\n        if (uVar6 == 0) {\n            fcn.00407b1f(0x43a94c, arg_8h);\n        }\n        iVar4 = fcn.00407a35(0x43a94c);\n        if (arg_ch != 0) {\n            iVar5 = fcn.00407a35(arg_ch);\n            if (0x3fff < iVar5 + iVar4) {\n                return;\n            }\n            fcn.00407a40(0x43a94c, arg_ch);\n        }\n        if ((uVar1 & 4) == 0) {\n            (*_sym.imp.USER32.dll_SetWindowTextA)(*0x447bc8, 0x43a94c);\n        }\n        pcVar3 = _sym.imp.USER32.dll_SendMessageA;\n        if ((uVar1 & 2) == 0) {\n            var_4ch = 1;\n            var_38h = 0x43a94c;\n            var_48h = (*_sym.imp.USER32.dll_SendMessageA)(iVar2, 0x1004, 0, 0);\n            var_44h = 0;\n            var_48h = var_48h - uVar6;\n            (*pcVar3)(iVar2, 0x1007 - uVar6, 0, &var_4ch);\n            (*pcVar3)(iVar2, 0x1013, var_48h, 0);\n        }\n        if (uVar6 != 0) {\n            *(iVar4 + 0x43a94c) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 537
    },
    "004084e0": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004084e0(uint32_t arg_8h, uint8_t *arg_ch, int32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    if (*0x4436d4 == 0) {\n        uVar3 = 0;\n        do {\n            iVar4 = 8;\n            uVar2 = uVar3;\n            do {\n                uVar2 = -(uVar2 & 1) & 0xedb88320 ^ uVar2 >> 1;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n            *(uVar3 * 4 + 0x4436d0) = uVar2;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 != 0x100);\n    }\n    arg_8h = ~arg_8h;\n    for (; arg_10h != 0; arg_10h = arg_10h + -1) {\n        uVar1 = *arg_ch;\n        arg_ch = arg_ch + 1;\n        arg_8h = arg_8h >> 8 ^ *(((uVar1 ^ arg_8h) & 0xff) * 4 + 0x4436d0);\n    }\n    return ~arg_8h;\n}\n",
        "token_count": 319
    },
    "00403996": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00403996(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint ARG_0;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        if (*0x41884c == 0) {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n            if (*0x443b8c < uVar1) {\n                if (*0x443ba0 == 0) {\n                    *0x41884c = (*_sym.imp.USER32.dll_CreateDialogParamA)(*0x443ba4, 0x6f, 0, fcn.004038f6, 0);\n                    (*_sym.imp.USER32.dll_ShowWindow)(*0x41884c, 5);\n                }\n                else if ((*0x443b3c & 1) != 0) {\n                    uVar2 = fcn.004038c4();\n                    (*_sym.imp.USER32.dll_wsprintfA)(&ARG_0, \"... %d%%\", uVar2);\n                    fcn.00406dae(0, &ARG_0);\n                }\n            }\n        }\n        else {\n            fcn.00408490(0);\n        }\n    }\n    else {\n        if (*0x41884c != 0) {\n            (*_sym.imp.USER32.dll_DestroyWindow)(*0x41884c);\n        }\n        *0x41884c = 0;\n    }\n    return;\n}\n",
        "token_count": 348
    },
    "00404b4a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.00404b4a(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    uint arg_8h_00;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar4 = *0x443b58;\n    iVar3 = *0x443b54;\n    uVar1 = *0x443b40;\n    uVar5 = (*_sym.imp.ole32.dll_OleInitialize)(0);\n    arg_8h_00 = uVar5 >> 0x20;\n    *0x443b40 = uVar5 | uVar1;\n    fcn.00404a3f(arg_8h_00);\n    do {\n        if (iVar4 == 0) {\ncode_r0x00404bb7:\n            fcn.00404a3f(arg_8h_00);\n            (*_sym.imp.ole32.dll_OleUninitialize)();\n            return *0x443b14;\n        }\n        if ((*(iVar3 + 8) & 1) != 0) {\n            arg_8h_00 = *(iVar3 + 0xc);\n            iVar2 = fcn.004037eb(arg_8h_00, arg_8h);\n            if (iVar2 != 0) {\n                *0x443b14 = *0x443b14 + 1;\n                goto code_r0x00404bb7;\n            }\n        }\n        iVar3 = iVar3 + 0x2018;\n        iVar4 = iVar4 + -1;\n    } while( true );\n}\n",
        "token_count": 387
    },
    "00404e8a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __fastcall fcn.00404e8a(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint extraout_ECX;\n    uint uVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_ch;\n    \n    uVar2 = 0;\n    if (in_EAX - 0x133U < 6) {\n        puVar1 = (*_sym.imp.USER32.dll_GetWindowLongA)(param_1, 0xffffffeb);\n        if (puVar1 != NULL) {\n            uVar2 = *puVar1;\n            if ((*(puVar1 + 5) & 2) != 0) {\n                uVar2 = (*_sym.imp.USER32.dll_GetSysColor)(uVar2, extraout_ECX);\n            }\n            if ((*(puVar1 + 5) & 1) != 0) {\n                (*_sym.imp.GDI32.dll_SetTextColor)(param_2, uVar2);\n            }\n            uVar2 = (*_sym.imp.GDI32.dll_SetBkMode)(param_2, puVar1[4]);\n            var_20h = puVar1[1];\n            if ((*(puVar1 + 5) & 8) != 0) {\n                var_20h = (*_sym.imp.USER32.dll_GetSysColor)(var_20h, uVar2);\n            }\n            if ((*(puVar1 + 5) & 4) != 0) {\n                (*_sym.imp.GDI32.dll_SetBkColor)(param_2, var_20h);\n                uVar2 = param_2;\n            }\n            if ((*(puVar1 + 5) & 0x10) != 0) {\n                var_24h = puVar1[2];\n                if (puVar1[3] != 0) {\n                    (*_sym.imp.GDI32.dll_DeleteObject)(puVar1[3], uVar2);\n                }\n                uVar2 = (*_sym.imp.GDI32.dll_CreateBrushIndirect)(&var_24h);\n                puVar1[3] = uVar2;\n            }\n            uVar2 = puVar1[3];\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 519
    },
    "004014f3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint32_t __fastcall fcn.004014f3(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint var_130h;\n    uint var_12ch;\n    uint var_121h;\n    uint hKey;\n    uint var_bp_ch;\n    \n    uVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)();\n    pcVar3 = _sym.imp.ADVAPI32.dll_RegEnumKeyA;\n    if (uVar1 == 0) {\n        do {\n            iVar2 = (*pcVar3)(hKey, 0, &var_121h, 0x105);\n            if (iVar2 != 0) break;\n            if (param_1 != 0) {\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n                return 1;\n            }\n            iVar2 = fcn.004014f3();\n        } while (iVar2 == 0);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        pcVar3 = fcn.00407eef(2);\n        if (pcVar3 == NULL) {\n            uVar1 = 1;\n            if (*0x443b38 == 0) {\n                iVar2 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)();\n                uVar1 = iVar2 != 0;\n            }\n        }\n        else {\n            uVar1 = (*pcVar3)();\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 357
    },
    "004037eb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.004037eb(int32_t arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uint var_ch;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    while ((-1 < arg_8h && (*(arg_8h * 0x1c + *0x443b5c) != 1))) {\n        iVar2 = fcn.0040164f();\n        if (iVar2 == 0x7fffffff) {\n            return 0x7fffffff;\n        }\n        iVar2 = fcn.0040160f(iVar2);\n        if (iVar2 == 0) {\n            iVar2 = arg_8h + 1;\n            iVar3 = 1;\n        }\n        else {\n            iVar2 = iVar2 + -1;\n            iVar3 = iVar2 - arg_8h;\n        }\n        arg_8h = iVar2;\n        if (arg_ch != 0) {\n            *0x447bb4 = iVar3 + *0x447bb4;\n            iVar2 = *0x447bb4;\n            uVar5 = *0x447bbc;\n            uVar4 = (*_sym.imp.KERNEL32.dll_MulDiv)();\n            (*pcVar1)(arg_ch, 0x402, uVar4, 0, iVar2, uVar5);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 351
    },
    "004038f6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint __cdecl fcn.004038f6(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    char *pcVar2;\n    uint var_48h;\n    uint var_8h;\n    \n    if (arg_ch == 0x110) {\n        (*_sym.imp.USER32.dll_SetTimer)(arg_8h, 1, 0xfa, 0);\n    }\n    else if (arg_ch != 0x113) {\n        return 0;\n    }\n    uVar1 = fcn.004038c4();\n    pcVar2 = \"unpacking data: %d%%\";\n    if (*0x443b48 == 0) {\n        pcVar2 = \"verifying installer: %d%%\";\n    }\n    (*_sym.imp.USER32.dll_wsprintfA)(&var_48h, pcVar2, uVar1);\n    (*_sym.imp.USER32.dll_SetWindowTextA)(arg_8h, &var_48h);\n    fcn.004074f6(arg_8h, 0x406, &var_48h);\n    return 0;\n}\n",
        "token_count": 263
    },
    "00403aff": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint fcn.00403aff(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint var_2ch;\n    int32_t var_1ch;\n    uint var_ch;\n    \n    iVar3 = (*0x4208e0 + in_EAX) - *0x4248e4;\n    *0x443b8c = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    *0x443b8c = *0x443b8c + 500;\n    if (0 < iVar3) {\n        fcn.00403acd(*0x4208d8);\n        (*_sym.imp.KERNEL32.dll_SetFilePointer)(*0x40a010, *0x4248e4, 0, 0);\n        *0x418848 = 0;\n        *0x418844 = iVar3;\n        do {\n            iVar3 = *0x4208dc - *0x4208d8;\n            if (0x4000 < iVar3) {\n                iVar3 = 0x4000;\n            }\n            uVar4 = fcn.00403a81(0x4208e4, iVar3);\n            uVar5 = uVar4 >> 0x20;\n            if (uVar4 == 0) {\n                return 0xffffffff;\n            }\n            *0x4208d8 = *0x4208d8 + iVar3;\n            *0x420868 = 0x4208e4;\n            *0x42086c = iVar3;\n            uVar6 = uVar5;\n            do {\n                if ((*0x443b48 != 0) && (*0x443b28 == 0)) {\n                    uVar5 = 0;\n                    *0x418848 = ((*0x4248e4 - *0x4208e0) - in_EAX) + *0x418844;\n                    fcn.00403996(0);\n                }\n                *0x420870 = 0x4248e8;\n                *0x420874 = 0x8000;\n                iVar1 = fcn.0040857e(uVar5, uVar6);\n                if (iVar1 < 0) {\n                    return 0xfffffffd;\n                }\n                iVar1 = *0x420870 + -0x4248e8;\n                if (iVar1 == 0) {\n                    if (iVar3 == 0) {\n                        return 0xfffffffd;\n                    }\n                    if (*0x42086c != 0) {\n                        return 0xfffffffd;\n                    }\n                    break;\n                }\n                uVar6 = 0x4248e8;\n                uVar5 = *0x40a010;\n                iVar2 = (*_sym.imp.KERNEL32.dll_WriteFile)(*0x40a010, 0x4248e8, iVar1, &var_1ch, 0);\n                if ((iVar2 == 0) || (iVar1 != var_1ch)) {\n                    return 0xfffffffe;\n                }\n                *0x4248e4 = *0x4248e4 + iVar1;\n            } while (*0x42086c != 0);\n        } while (0 < (*0x4208e0 - *0x4248e4) + in_EAX);\n        (*_sym.imp.KERNEL32.dll_SetFilePointer)(*0x40a010, *0x4208e0, 0, 0);\n    }\n    fcn.00403996(1);\n    return 0;\n}\n",
        "token_count": 821
    },
    "00403cee": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.00403cee(int32_t arg_8h, uint hFile, int32_t arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_2ch;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t lpNumberOfBytesWritten;\n    uint var_ch;\n    \n    if (-1 < arg_8h) {\n        *0x4208e0 = arg_8h + *0x443b84;\n        (*_sym.imp.KERNEL32.dll_SetFilePointer)(*0x40a010, *0x4208e0, 0, 0);\n    }\n    iVar2 = fcn.00403aff();\n    pcVar1 = _sym.imp.KERNEL32.dll_ReadFile;\n    if (-1 < iVar2) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_ReadFile)(*0x40a010, &var_20h, 4, &var_24h, 0);\n        iVar2 = -3;\n        if ((iVar3 != 0) && (var_24h == 4)) {\n            *0x4208e0 = *0x4208e0 + 4;\n            iVar2 = fcn.00403aff();\n            if (-1 < iVar2) {\n                if (arg_10h == 0) {\n                    for (; 0 < var_20h; var_20h = var_20h - var_24h) {\n                        iVar3 = 0x4000;\n                        if (var_20h < 0x4001) {\n                            iVar3 = var_20h;\n                        }\n                        iVar4 = (*pcVar1)(*0x40a010, 0x4208e4, iVar3, &var_24h, 0);\n                        if ((iVar4 == 0) || (iVar3 != var_24h)) {\n                            return -3;\n                        }\n                        iVar4 = (*_sym.imp.KERNEL32.dll_WriteFile)(hFile, 0x4208e4, iVar3, &lpNumberOfBytesWritten, 0);\n                        if ((iVar4 == 0) || (lpNumberOfBytesWritten != iVar3)) {\n                            return -2;\n                        }\n                        *0x4208e0 = *0x4208e0 + var_24h;\n                        iVar2 = iVar2 + var_24h;\n                    }\n                }\n                else {\n                    if (arg_14h <= var_20h) {\n                        var_20h = arg_14h;\n                    }\n                    iVar3 = (*pcVar1)(*0x40a010, arg_10h, var_20h, &var_24h, 0);\n                    iVar2 = -3;\n                    if (iVar3 != 0) {\n                        *0x4208e0 = *0x4208e0 + var_24h;\n                        iVar2 = var_24h;\n                    }\n                }\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 699
    },
    "004049d3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004049d3(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = *0x436924;\n    if (*0x443b14 == 0) {\n        uVar1 = *0x436920;\n    }\n    (*_sym.imp.USER32.dll_SendMessageA)(uVar1, 0xf4, 1, 1);\n    return;\n}\n",
        "token_count": 87
    },
    "00404df0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint __cdecl fcn.00404df0(uint arg_8h, int32_t arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint var_8h;\n    \n    if (arg_ch == 1) {\n        fcn.00407501(0x3fb, arg_14h);\n        uVar3 = 1;\n        uVar2 = 0x466;\n    }\n    else {\n        if (arg_ch != 2) {\n            return 0;\n        }\n        iVar1 = (*_sym.imp.SHELL32.DLL_SHGetPathFromIDListA)(arg_10h, arg_14h);\n        arg_14h = 0;\n        if (iVar1 != 0) {\n            iVar1 = fcn.0040389b(0x404e57);\n            arg_14h = iVar1 == 0;\n        }\n        uVar3 = 0;\n        uVar2 = 0x465;\n    }\n    (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, uVar2, uVar3, arg_14h);\n    return 0;\n}\n",
        "token_count": 287
    },
    "00404f66": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint32_t __cdecl fcn.00404f66(uint arg_8h, int32_t arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    ulong uVar8;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_ch;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetDlgItem;\n    if ((arg_ch == 0x408) || (arg_ch == 0x110)) {\n        *0x43691c = arg_10h;\n        if (arg_ch == 0x110) {\n            *0x443ba0 = arg_8h;\n            *0x436920 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 1);\n            *0x436924 = (*pcVar1)(arg_8h, 2);\n            fcn.00404b0c(pcVar1, pcVar1);\n            (*_sym.imp.USER32.dll_SetClassLongA)(arg_8h, 0xfffffff2, *0x447bb8);\n            *0x447ba8 = fcn.0040389b(4);\n            *0x43691c = 1;\n        }\n        piVar6 = *0x40a018 * 0x40 + *0x443b4c;\n        if (-1 < *0x40a018) {\n            if ((*0x43691c == 1) && (iVar2 = fcn.004037eb(piVar6[4], 0),  iVar2 != 0)) {\n                (*_sym.imp.USER32.dll_SendMessageA)(*0x447bc0, 0x40f, 0, 1);\n                return *0x447ba8 == 0;\n            }\n            if (*piVar6 == 0) {\n                return 0;\n            }\n        }\n        fcn.00404a3f();\n        while( true ) {\n            uVar7 = *0x43691c;\n            *0x40a018 = *0x40a018 + *0x43691c;\n            if (*0x40a018 == *0x443b50) {\n                fcn.0040389b(1);\n            }\n            if ((*0x447ba8 != 0) || (*0x443b50 <= *0x40a018)) break;\n            piVar6 = piVar6 + uVar7 * 0x10;\n            uVar7 = piVar6[5];\n            uVar3 = fcn.00407b1f(0x48a000, piVar6[9]);\n            fcn.00404b0c(uVar3, uVar3);\n            fcn.00404b0c();\n            fcn.00404b0c();\n            uVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 3);\n            if (*0x443b14 != 0) {\n                uVar7 = uVar7 & 0xfffffefd | 4;\n            }\n            (*_sym.imp.USER32.dll_ShowWindow)(uVar3, uVar7 & 8);\n            pcVar1 = _sym.imp.USER32.dll_EnableWindow;\n            uVar4 = (*_sym.imp.USER32.dll_EnableWindow)(uVar3, uVar7 & 0x100);\n            uVar7 = uVar7 & 4;\n            fcn.00404af0(uVar4, uVar4);\n            (*pcVar1)(*0x436924, uVar7);\n            if (uVar7 == 0) {\n                uVar4 = (*_sym.imp.USER32.dll_GetSystemMenu)(arg_8h, 0);\n            }\n            else {\n                uVar4 = (*_sym.imp.USER32.dll_GetSystemMenu)(arg_8h, 0);\n            }\n            (*_sym.imp.USER32.dll_EnableMenuItem)(uVar4, 0xf060, uVar7 == 0);\n            pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n            (*_sym.imp.USER32.dll_SendMessageA)(uVar3, 0xf4, 0, 1);\n            if (*0x443b14 != 0) {\n                (*pcVar1)(arg_8h, 0x401, 2, 0);\n            }\n            fcn.00404a12();\n            uVar3 = fcn.00407a0d(0x42e8f0, 0x443ba8);\n            iVar2 = piVar6[6];\n            iVar5 = fcn.00407a35(0x42e8f0, uVar3);\n            fcn.00407b1f(iVar5 + 0x42e8f0, iVar2);\n            (*_sym.imp.USER32.dll_SetWindowTextA)(arg_8h, 0x42e8f0);\n            uVar8 = fcn.004037eb(piVar6[2], 0);\n            if ((uVar8 == 0) && (*piVar6 != 0)) {\n                if (piVar6[1] != 5) {\n                    (*_sym.imp.USER32.dll_DestroyWindow)(*0x447bc0, uVar8 >> 0x20);\n                    *0x43692c = piVar6;\n                    if ((0 < *piVar6) &&\n                       (*0x447bc0 = (*_sym.imp.USER32.dll_CreateDialogParamA)\n                                              (*0x443ba4, *piVar6 + *0x447bc4 & 0xffff, arg_8h, \n                                               *(piVar6[1] * 4 + 0x40b3c8), piVar6),  *0x447bc0 != 0)) {\n                        fcn.00404b0c();\n                        uVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3fa);\n                        (*_sym.imp.USER32.dll_GetWindowRect)(uVar3, &var_28h);\n                        (*_sym.imp.USER32.dll_ScreenToClient)(arg_8h, &var_28h);\n                        (*_sym.imp.USER32.dll_SetWindowPos)(*0x447bc0, 0, var_28h, var_24h, 0, 0, 0x15);\n                        fcn.004037eb(piVar6[3], 0);\n                        if (*0x447ba8 != 0) {\n                            return 0;\n                        }\n                        uVar3 = (*_sym.imp.USER32.dll_ShowWindow)(*0x447bc0, 8);\n                        fcn.00404a3f(uVar3, uVar3);\n                    }\n                    goto code_r0x00405432;\n                }\n                if ((*0x443b14 != 0) || (*0x443b08 == 0)) {\n                    return 0;\n                }\n            }\n        }\n        (*_sym.imp.USER32.dll_DestroyWindow)(*0x447bc0);\n        *0x443ba0 = 0;\n        (*_sym.imp.USER32.dll_EndDialog)(arg_8h, *0x436928);\ncode_r0x00405432:\n        if (*0x42e8ec != 0) {\n            return 0;\n        }\n        if (*0x447bc0 == 0) {\n            return 0;\n        }\n        (*_sym.imp.USER32.dll_ShowWindow)(arg_8h, 10);\n        *0x42e8ec = 1;\n        return 0;\n    }\n    if (arg_ch == 0x47) {\n        (*_sym.imp.USER32.dll_SetWindowPos)(*0x436918, arg_8h, 0, 0, 0, 0, 0x13);\n        goto code_r0x00405625;\n    }\n    if (arg_ch == 5) {\n        (*_sym.imp.USER32.dll_ShowWindow)(*0x436918, (arg_10h != 1) * '\\x05');\n        goto code_r0x00405625;\n    }\n    if (arg_ch == 0x40d) {\n        (*_sym.imp.USER32.dll_DestroyWindow)(*0x447bc0);\n        *0x447bc0 = arg_10h;\n        goto code_r0x00405432;\n    }\n    if (arg_ch == 0x11) {\n        (*_sym.imp.USER32.dll_SetWindowLongA)(arg_8h, 0, 0);\n        return 1;\n    }\n    if (arg_ch != 0x111) goto code_r0x00405625;\n    uVar7 = arg_10h & 0xffff;\n    iVar2 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, uVar7);\n    if (iVar2 != 0) {\n        (*_sym.imp.USER32.dll_SendMessageA)(iVar2, 0xf3, 0, 0);\n        iVar2 = (*_sym.imp.USER32.dll_IsWindowEnabled)(iVar2);\n        if (iVar2 == 0) {\n            return 0;\n        }\n    }\n    if (uVar7 != 1) {\n        if (uVar7 == 3) {\n            if (*0x40a018 < 1) {\ncode_r0x00405601:\n                (*_sym.imp.USER32.dll_SendMessageA)(*0x447bc0, 0x111, arg_10h, arg_14h);\n                goto code_r0x00405625;\n            }\n        }\n        else {\n            if (uVar7 != 2) goto code_r0x00405601;\n            if (*0x443b14 == 0) {\n                iVar2 = fcn.0040389b(3);\n                if (iVar2 != 0) goto code_r0x00405625;\n                *0x436928 = 1;\n            }\n            else {\n                fcn.0040389b(2);\n                *0x436928 = 2;\n            }\n        }\n    }\n    fcn.00404a71();\ncode_r0x00405625:\n    uVar7 = fcn.00404e8a();\n    return uVar7;\n}\n",
        "token_count": 2307
    },
    "004056a5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __cdecl fcn.004056a5(uint *arg_8h, int32_t arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    code *pcVar7;\n    int32_t iVar8;\n    uchar *puVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    uint extraout_ECX;\n    int32_t iVar12;\n    ushort *puVar13;\n    ulong uVar14;\n    int32_t iVar15;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint32_t var_6ch;\n    uint *var_60h;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    code *var_4ch;\n    int32_t var_48h;\n    uint32_t var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    uint var_30h;\n    int32_t var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_bp_ch;\n    \n    iVar2 = *0x43692c;\n    uVar5 = *(*0x43692c + 0x38);\n    iVar12 = *(*0x43692c + 0x3c) * 0x2000 + 0x44e000;\n    iVar6 = arg_ch;\n    if (arg_ch == 0x40b) {\n        fcn.00407501(0x3fb, iVar12);\n        fcn.00407a4b(iVar12);\n    }\n    else if (arg_ch == 0x110) {\n        uVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3fb);\n        iVar15 = iVar12;\n        uVar5 = extraout_ECX;\n        uVar14 = fcn.0040765a(iVar12);\n        iVar8 = uVar14 >> 0x20;\n        if ((uVar14 != 0) && (iVar8 = iVar12,  iVar4 = fcn.00407688(iVar12),  iVar4 == 0)) {\n            fcn.004075a6(iVar12);\n        }\n        *0x447bc0 = arg_8h;\n        uVar5 = (*_sym.imp.USER32.dll_SetWindowTextA)(uVar3, iVar12, iVar8, iVar15, uVar5);\n        fcn.00404b0c(uVar5, uVar5);\n        fcn.00404b0c();\n        fcn.00404a12();\n        pcVar7 = fcn.00407eef(7);\n        if (pcVar7 != NULL) {\n            (*pcVar7)(uVar3, 1);\n        }\n    }\n    else if (arg_ch == 0x111) {\n        if ((arg_10h & 0xffff) == 0x3fb) {\n            iVar6 = 0x40f;\n            if (arg_10h >> 0x10 != 0x300) {\n                iVar6 = arg_ch;\n            }\n        }\n        else if ((arg_10h & 0xffff) == 0x3e9) {\n            puVar10 = &var_60h;\n            for (iVar8 = 8; iVar8 != 0; iVar8 = iVar8 + -1) {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            }\n            var_60h = arg_8h;\n            var_58h = 0x42e8f0;\n            var_4ch = fcn.00404df0;\n            var_48h = iVar12;\n            uVar14 = fcn.00407b1f(0x436930, uVar5);\n            var_54h = uVar14;\n            var_50h = 0x41;\n            iVar8 = (*_sym.imp.SHELL32.DLL_SHBrowseForFolderA)(&var_60h, uVar14 >> 0x20);\n            if (iVar8 == 0) {\n                arg_ch = 0x40f;\n                iVar6 = arg_ch;\n            }\n            else {\n                (*_sym.imp.ole32.dll_CoTaskMemFree)(iVar8);\n                fcn.004075a6(iVar12);\n                if ((*(*0x443b48 + 0x11c) != 0) && (iVar12 == 0x478000)) {\n                    fcn.00407b1f(0, *(*0x443b48 + 0x11c));\n                    iVar8 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(0x447bd0, 0x42e8f0);\n                    if (iVar8 != 0) {\n                        fcn.00407a40();\n                    }\n                }\n                *0x438930 = *0x438930 + 1;\n                fcn.004074f6(arg_8h, 0x3fb, iVar12);\n            }\n        }\n    }\n    arg_ch = iVar6;\n    if ((arg_ch == 0x405) || (arg_ch == 0x40f)) {\n        fcn.00407501(0x3fb, iVar12);\n        iVar6 = fcn.00407e38(iVar12);\n        fcn.00407a0d(0x438934, iVar12);\n        pcVar7 = fcn.00407eef(0);\n        if (pcVar7 != NULL) {\n            puVar13 = NULL;\n            do {\n                puVar10 = &var_40h;\n                iVar8 = (*pcVar7)(0x438934, puVar10, &var_38h, &var_30h);\n                if (iVar8 != 0) {\n                    bVar1 = true;\n                    var_6ch = var_40h >> 10 | var_3ch << 0x16;\n                    goto code_r0x00405a06;\n                }\n                if (puVar13 != NULL) {\n                    *puVar13 = 0;\n                }\n                iVar8 = fcn.0040761c(0x438934);\n                puVar13 = iVar8 + -1;\n                *(iVar8 + -1) = 0x5c;\n            } while (puVar13 != 0x438934);\n        }\n        fcn.00407a0d(0x438934, iVar12);\n        puVar9 = fcn.00407688(0x438934);\n        if (puVar9 != NULL) {\n            *puVar9 = 0;\n        }\n        puVar10 = &var_1ch;\n        bVar1 = false;\n        iVar12 = (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceA)(0x438934, &var_28h, &var_24h, &var_20h, puVar10);\n        if (iVar12 != 0) {\n            bVar1 = true;\n            puVar10 = var_28h * var_24h;\n            var_6ch = (*_sym.imp.KERNEL32.dll_MulDiv)(puVar10, var_20h, 0x400);\n        }\ncode_r0x00405a06:\n        uVar11 = fcn.004049a0();\n        if ((uVar11 <= var_6ch) || (uVar11 = 2,  !bVar1)) {\n            uVar11 = iVar6 == 0;\n        }\n        if (*(*0x447bcc + 0x10) != 0) {\n            fcn.00404bd6();\n            if (bVar1) {\n                fcn.00404bd6();\n            }\n            else {\n                fcn.004074f6(arg_8h, 0x400, 0x40b33a);\n                puVar10 = arg_8h;\n            }\n        }\n        uVar14 = CONCAT44(puVar10, uVar11);\n        *0x443b2c = uVar11;\n        if (uVar11 == 0) {\n            uVar14 = fcn.0040389b(7);\n        }\n        iVar6 = uVar14;\n        if ((*(iVar2 + 0x15) & 4) != 0) {\n            iVar6 = 0;\n        }\n        fcn.00404af0(uVar14 >> 0x20);\n        if ((iVar6 == 0) && (*0x438930 == 0)) {\n            fcn.004049d3();\n        }\n        *0x438930 = 0;\n    }\n    fcn.00404e8a();\n    return;\n}\n",
        "token_count": 1978
    },
    "004062ee": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004062ee(uint arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    uint var_50h;\n    uint var_4ch;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_bp_ch;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    var_4ch = (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0x110a, 9, 0);\n    if (arg_ch != 0) {\n        var_24h = (*_sym.imp.USER32.dll_GetMessagePos)();\n        var_28h = var_24h;\n        var_24h = var_24h >> 0x10;\n        (*_sym.imp.USER32.dll_ScreenToClient)(arg_8h, &var_28h);\n        (*pcVar1)(arg_8h, 0x1111, 0, &var_28h);\n        var_4ch = var_1ch;\n        if ((var_20h & 0x66) == 0) {\n            return 0xffffffff;\n        }\n    }\n    var_50h = 4;\n    (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0x110c, 0, &var_50h);\n    return var_2ch;\n}\n",
        "token_count": 356
    },
    "00407532": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407532(uint arg_8h, uint32_t arg_ch)\n\n{\n    if ((*0x443b28 == 0) || (arg_ch >> 0x15 == 0)) {\n        *0x40a074 = 0x443ba8;\n        *0x40a078 = arg_ch & 0x1fffff;\n        if (*0x443b30 != 0) {\n            *0x40a078 = arg_ch & 0x1fffff ^ 0x180000;\n        }\n        *0x40a068 = *0x443ba0;\n        *0x40a06c = *0x443ba4;\n        *0x40a070 = arg_8h;\n        (*_sym.imp.USER32.dll_MessageBoxIndirectA)(0x40a064);\n    }\n    return;\n}\n",
        "token_count": 191
    },
    "00407688": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nchar * __cdecl fcn.00407688(int16_t *arg_8h)\n\n{\n    code *UNRECOVERED_JUMPTABLE;\n    int16_t *piVar1;\n    uint arg_8h_00;\n    char *pcVar2;\n    char *pcVar3;\n    uint var_ch;\n    \n    UNRECOVERED_JUMPTABLE = _sym.imp.USER32.dll_CharNextA;\n    piVar1 = (*_sym.imp.USER32.dll_CharNextA)(arg_8h);\n    arg_8h_00 = (*UNRECOVERED_JUMPTABLE)(piVar1);\n    if ((*arg_8h != '\\0') && (*piVar1 == 0x5c3a)) {\n    // WARNING: Could not recover jumptable at 0x004076c0. Too many branches\n    // WARNING: Treating indirect jump as call\n        pcVar2 = (*UNRECOVERED_JUMPTABLE)();\n        return pcVar2;\n    }\n    pcVar2 = NULL;\n    if (*arg_8h == 0x5c5c) {\n        pcVar3 = fcn.004075ec(arg_8h_00, 0x5c);\n        if (*pcVar3 != '\\0') {\n            pcVar3 = fcn.004075ec(pcVar3 + 1, 0x5c);\n            if (*pcVar3 != '\\0') {\n                pcVar2 = pcVar3 + 1;\n            }\n        }\n    }\n    return pcVar2;\n}\n",
        "token_count": 350
    },
    "004078a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl fcn.004078a0(uint hKey, uint arg_ch, uint arg_10h, uchar *arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint var_14h;\n    uint var_bp_10h;\n    int32_t var_bp_ch;\n    uint var_bp_4h;\n    \n    *arg_14h = 0;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(hKey, arg_ch, 0, (-(arg_18h == 0) & 0xffffff00) + 0x20119, &var_14h);\n    if (iVar1 == 0) {\n        var_bp_10h = 0x2000;\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(var_14h, arg_10h, 0, &var_bp_ch, arg_14h, &var_bp_10h);\n        if ((iVar1 != 0) || (1 < var_bp_ch - 1U)) {\n            *arg_14h = 0;\n        }\n        arg_14h[0x1fff] = 0;\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_14h);\n    }\n    return;\n}\n",
        "token_count": 310
    },
    "00407a4b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00407a4b(uint8_t *arg_8h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    uint8_t *arg_ch;\n    uint8_t *puVar6;\n    ulong uVar7;\n    uint var_1ch;\n    uint var_ch;\n    \n    if ((((*arg_8h == 0x5c) && (arg_8h[1] == 0x5c)) && (arg_8h[2] == 0x3f)) && (arg_8h[3] == 0x5c)) {\n        arg_8h = arg_8h + 4;\n    }\n    arg_ch = arg_8h;\n    pcVar3 = _sym.imp.USER32.dll_CharNextA;\n    puVar6 = arg_8h;\n    if (*arg_8h != 0) {\n        iVar5 = fcn.0040765a(arg_8h);\n        puVar1 = arg_8h + 2;\n        pcVar3 = _sym.imp.USER32.dll_CharNextA;\n        if (iVar5 != 0) {\n            arg_8h = puVar1;\n            arg_ch = puVar1;\n            puVar6 = puVar1;\n        }\n    }\n    for (; pcVar4 = _sym.imp.USER32.dll_CharPrevA,  uVar2 = *arg_ch,  uVar2 != 0; arg_ch = (*pcVar3)(arg_ch)) {\n        if (0x1f < uVar2) {\n            uVar7 = fcn.004075ec(\"*?|<>/\\\":\", uVar2);\n            if (*uVar7 == '\\0') {\n                iVar5 = (*_sym.imp.USER32.dll_CharNextA)(arg_ch, uVar7 >> 0x20);\n                fcn.00407777(arg_8h, arg_ch, iVar5 - arg_ch);\n                arg_8h = (*_sym.imp.USER32.dll_CharNextA)(arg_8h);\n            }\n        }\n    }\n    *arg_8h = 0;\n    while( true ) {\n        arg_8h = (*pcVar4)(puVar6, arg_8h);\n        if ((*arg_8h != 0x5c) && (*arg_8h != 0x20)) break;\n        *arg_8h = 0;\n        if (arg_8h <= puVar6) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 587
    },
    "00407b1f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00407b1f(uint8_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t *puVar1;\n    bool bVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint8_t *arg_8h_00;\n    uint8_t *puVar8;\n    ulong uVar9;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint pidl;\n    uint var_ch;\n    \n    puVar1 = arg_8h;\n    if (arg_ch < 0) {\n        arg_ch = *(*0x447bcc + ~arg_ch * 4);\n    }\n    puVar8 = arg_ch + *0x443b64;\n    arg_8h_00 = 0x447bd0;\n    if (arg_8h + -0x447bd0 < 0x4000) {\n        arg_8h = NULL;\n        arg_8h_00 = puVar1;\n    }\n    do {\n        while( true ) {\n            uVar3 = *puVar8;\n            if ((uVar3 == 0) || (0x1fff < arg_8h_00 + -0x447bd0)) {\n                *arg_8h_00 = 0;\n                if (arg_8h != NULL) {\n                    fcn.00407a0d(arg_8h, 0x447bd0);\n                }\n                return;\n            }\n            if (0xfc < uVar3) break;\n            if (uVar3 == 0xfc) {\n                puVar1 = puVar8 + 1;\n                puVar8 = puVar8 + 2;\n                *arg_8h_00 = *puVar1;\n                arg_8h_00 = arg_8h_00 + 1;\n            }\n            else {\n                *arg_8h_00 = uVar3;\n                puVar8 = puVar8 + 1;\n                arg_8h_00 = arg_8h_00 + 1;\n            }\n        }\n        uVar7 = puVar8[1];\n        uVar6 = puVar8[2];\n        puVar8 = puVar8 + 3;\n        var_2ch = uVar7 | 0x8000;\n        var_24h = uVar6 | 0x8000;\n        var_28h = uVar7;\n        var_20h = uVar6;\n        if (uVar3 == 0xfe) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_GetVersion)();\n            bVar2 = true;\n            if ((iVar4 < 0) && (iVar4 != 0x5a04)) {\n                bVar2 = uVar6 == 0x2e || uVar6 == 0x23;\n            }\n            iVar4 = (-(*0x443b0c == 0) & 0xfffffffe) + 4;\n            if ((uVar7 & 0x80) == 0) {\n                if (uVar7 == 0x25) {\n                    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(arg_8h_00, 0x2000);\n                }\n                else {\n                    if (uVar7 != 0x24) goto code_r0x00407d09;\n                    (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(arg_8h_00, 0x2000);\n                }\n                iVar4 = 0;\n            }\n            else {\n                iVar4 = 0;\n                fcn.004078a0(0x80000002, \"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\", (uVar7 & 0x3f) + *0x443b64, \n                             arg_8h_00, uVar7 & 0x40);\n                if (*arg_8h_00 == 0) {\n                    fcn.00407b1f(arg_8h_00, uVar6);\n                }\n            }\ncode_r0x00407d09:\n            while (iVar4 != 0) {\n                iVar4 = iVar4 + -1;\n                if ((bVar2) && (*0x443b9c != NULL)) {\n                    iVar5 = (**0x443b9c)(*0x443ba0, (&var_2ch)[iVar4], 0, 0, arg_8h_00);\n                    if (iVar5 == 0) break;\n                }\n                iVar5 = (*_sym.imp.SHELL32.DLL_SHGetSpecialFolderLocation)(*0x443ba0, (&var_2ch)[iVar4], &pidl);\n                if (iVar5 == 0) {\n                    uVar9 = (*_sym.imp.SHELL32.DLL_SHGetPathFromIDListA)(pidl, arg_8h_00);\n                    (*_sym.imp.ole32.dll_CoTaskMemFree)(pidl, uVar9 >> 0x20);\n                    if (uVar9 != 0) break;\n                }\n                *arg_8h_00 = 0;\n            }\n            if ((*arg_8h_00 != 0) && (var_20h == 0x1a)) {\n                (*_sym.imp.KERNEL32.dll_lstrcatA)(arg_8h_00, \"\\\\Microsoft\\\\Internet Explorer\\\\Quick Launch\");\n            }\ncode_r0x00407d7a:\n            fcn.00407a4b(arg_8h_00);\n        }\n        else {\n            uVar6 = (uVar6 & 0x7f) << 7 | uVar7 & 0x7f;\n            if (uVar3 == 0xfd) {\n                if (uVar6 == 0x1d) {\n                    fcn.00407949(arg_8h_00, *0x443ba0);\n                }\n                else {\n                    fcn.00407a0d(arg_8h_00, uVar6 * 0x2000 + 0x44e000);\n                }\n                if (uVar6 - 0x15 < 7) goto code_r0x00407d7a;\n            }\n            else if (uVar3 == 0xff) {\n                fcn.00407b1f(arg_8h_00, ~uVar6);\n            }\n        }\n        iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_8h_00);\n        arg_8h_00 = arg_8h_00 + iVar4;\n    } while( true );\n}\n",
        "token_count": 1520
    },
    "00401414": {
        "rules": [
            "encrypt data using HC-128/01272f7612224ac7bcc403d9d7459f40"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint fcn.00401414(void)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint arg_8h;\n    uint var_ch;\n    uint var_bp_4h;\n    \n    uVar1 = (in_EAX >> 0x1f ^ in_EAX) - (in_EAX >> 0x1f);\n    arg_8h = fcn.00407b1f((uVar1 >> 4) * 0x2000 + 0x40e004, *(*0x40e000 + (uVar1 & 0xf) * 4));\n    if (in_EAX < 0) {\n        fcn.00407a4b(arg_8h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 188
    },
    "0040160f": {
        "rules": [
            "encrypt data using HC-128/01272f7612224ac7bcc403d9d7459f40"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040160f(uint32_t arg_8h)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    char cVar4;\n    char cVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    \n    if (-1 < arg_8h) {\n        return arg_8h;\n    }\n    pcVar1 = ~arg_8h * 0x2000 + 0x44e000;\n    iVar8 = 1;\n    if (*pcVar1 == '-') {\n        pcVar1 = ~arg_8h * 0x2000 + 0x44e001;\n        iVar8 = -1;\n    }\n    if (*pcVar1 == '0') {\n        uVar3 = pcVar1[1] - 0x30;\n        cVar5 = (-(uVar3 < 8) & 0xfeU) + 0x39;\n        cVar4 = (-(uVar3 < 8) & 0xfeU) + 10;\n        if ((pcVar1[1] & 0xdfU) == 0x58) {\n            pcVar1 = pcVar1 + 2;\n            cVar4 = '\\x10';\n        }\n        else {\n            pcVar1 = pcVar1 + 1;\n        }\n    }\n    else {\n        cVar5 = '9';\n        cVar4 = '\\n';\n    }\n    iVar2 = 0;\n    do {\n        uVar6 = *pcVar1;\n        pcVar1 = pcVar1 + 1;\n        if ((uVar6 < 0x30) || (cVar5 < uVar6)) {\n            if ((cVar4 != '\\x10') || (((uVar6 & 0xffffffdf) < 0x41 || (0x46 < (uVar6 & 0xffffffdf))))) {\n                return iVar2 * iVar8;\n            }\n            iVar7 = (uVar6 & 7) + 9;\n        }\n        else {\n            iVar7 = uVar6 - 0x30;\n        }\n        iVar2 = iVar2 * cVar4 + iVar7;\n    } while( true );\n}\n",
        "token_count": 502
    },
    "00405644": {
        "rules": [
            "encrypt data using HC-128/01272f7612224ac7bcc403d9d7459f40"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00405644(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint var_ch;\n    \n    if (arg_ch == 0x110) {\n        fcn.00404b0c();\n        fcn.004074f6(arg_8h, 1000, *(arg_14h + 0x3c) * 0x2000 + 0x44e000);\n    }\n    fcn.00404e8a();\n    return;\n}\n",
        "token_count": 138
    },
    "0040796e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9",
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9",
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472",
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040796e(char *arg_8h)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    char cVar3;\n    char cVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint var_14h;\n    uint var_10h;\n    \n    iVar7 = 1;\n    if (*arg_8h == '-') {\n        arg_8h = arg_8h + 1;\n        iVar7 = -1;\n    }\n    if (*arg_8h == '0') {\n        uVar2 = arg_8h[1] - 0x30;\n        cVar4 = (-(uVar2 < 8) & 0xfeU) + 0x39;\n        cVar3 = (-(uVar2 < 8) & 0xfeU) + 10;\n        if ((arg_8h[1] & 0xdfU) == 0x58) {\n            arg_8h = arg_8h + 2;\n            cVar3 = '\\x10';\n        }\n        else {\n            arg_8h = arg_8h + 1;\n        }\n    }\n    else {\n        cVar4 = '9';\n        cVar3 = '\\n';\n    }\n    iVar1 = 0;\n    do {\n        uVar5 = *arg_8h;\n        arg_8h = arg_8h + 1;\n        if ((uVar5 < 0x30) || (cVar4 < uVar5)) {\n            if ((cVar3 != '\\x10') || (((uVar5 & 0xffffffdf) < 0x41 || (0x46 < (uVar5 & 0xffffffdf))))) {\n                return iVar1 * iVar7;\n            }\n            iVar6 = (uVar5 & 7) + 9;\n        }\n        else {\n            iVar6 = uVar5 - 0x30;\n        }\n        iVar1 = iVar1 * cVar3 + iVar6;\n    } while( true );\n}\n",
        "token_count": 465
    },
    "004038c4": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.004038c4(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *0x418844;\n    if (*0x418848 <= *0x418844) {\n        iVar1 = *0x418848;\n    }\n    (*_sym.imp.KERNEL32.dll_MulDiv)(iVar1, 100, *0x418844);\n    return;\n}\n",
        "token_count": 86
    },
    "00404a71": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00404a71(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX == 0x78) {\n        *0x447ba8 = *0x447ba8 + 1;\n    }\n    (*_sym.imp.USER32.dll_SendMessageA)(*0x443ba0, 0x408);\n    return;\n}\n",
        "token_count": 81
    },
    "00404bd6": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __fastcall fcn.00404bd6(uint32_t param_1, uint param_2)\n\n{\n    uint8_t uVar1;\n    uint in_EAX;\n    uint uVar2;\n    uint uVar3;\n    uint extraout_ECX;\n    int32_t iVar4;\n    uint8_t uVar5;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_38h;\n    uint var_bp_ch;\n    \n    if (param_1 < 0x100000) {\n        iVar4 = ~-(param_1 < 0x400) - 0x22;\n        uVar1 = ~-(param_1 < 0x400) & 10;\n    }\n    else {\n        iVar4 = -0x24;\n        uVar5 = 0x14;\n        uVar1 = 0x14;\n        if (0xffff3332 < param_1) goto code_r0x00404c30;\n    }\n    uVar5 = uVar1;\n    param_1 = param_1 + (1 << uVar5) / 0x14;\ncode_r0x00404c30:\n    fcn.00407b1f(0x42e8f0, param_2);\n    uVar2 = fcn.00407b1f(&var_38h, 0xffffffdf);\n    uVar3 = fcn.00407b1f(&var_58h, iVar4);\n    iVar4 = fcn.00407a35(0x42e8f0, extraout_ECX);\n    (*_sym.imp.USER32.dll_wsprintfA)\n              (iVar4 + 0x42e8f0, \"%u.%u%s%s\", param_1 >> uVar5, ((param_1 & 0xffffff) * 10 >> uVar5) % 10, uVar3, uVar2)\n    ;\n    fcn.004074f6(*0x447bc0, in_EAX, 0x42e8f0);\n    return;\n}\n",
        "token_count": 486
    },
    "00406cbd": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint __cdecl fcn.00406cbd(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_bp_ch;\n    \n    if ((arg_10h == 0x20) && (arg_ch == 0x102)) {\n        fcn.00404a3f();\n        return 0;\n    }\n    if (arg_ch == 0x200) {\n        iVar1 = (*_sym.imp.USER32.dll_IsWindowVisible)(arg_8h);\n        if (iVar1 == 0) goto code_r0x00406d80;\n        arg_14h = fcn.004062ee(arg_8h, 1);\n    }\n    else if (arg_ch != 0x419) goto code_r0x00406d80;\n    arg_ch = 0x419;\n    if (*0x43a938 != arg_14h) {\n        *0x43a938 = arg_14h;\n        fcn.00407a0d(0x42e8f0, 0x44e000);\n        fcn.00407949(0x44e000, arg_14h);\n        fcn.0040389b(6);\n        fcn.00407a0d(0x44e000, 0x42e8f0);\n    }\ncode_r0x00406d80:\n    uVar2 = (*_sym.imp.USER32.dll_CallWindowProcA)(*0x43a93c, arg_8h, arg_ch, arg_10h, arg_14h);\n    return uVar2;\n}\n",
        "token_count": 387
    },
    "004075a6": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nint32_t __cdecl fcn.004075a6(int32_t lpString)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    uint var_bp_4h;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n    pcVar2 = (*_sym.imp.USER32.dll_CharPrevA)(lpString, iVar1 + lpString);\n    if (*pcVar2 != '\\\\') {\n        (*_sym.imp.KERNEL32.dll_lstrcatA)(lpString, 0x40b3dc);\n    }\n    return lpString;\n}\n",
        "token_count": 147
    },
    "0040765a": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0040765a(int16_t *arg_8h)\n\n{\n    bool bVar1;\n    \n    bVar1 = true;\n    if ((*arg_8h != 0x5c5c) && (bVar1 = false,  (*arg_8h | 0x20) + 0x9f < 0x1a)) {\n        bVar1 = *(arg_8h + 1) == 0x3a;\n    }\n    return bVar1;\n}\n",
        "token_count": 115
    },
    "0040133f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040133f(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if (arg_8h < 0x20) {\n        iVar2 = *0x443b54;\n        for (uVar1 = 0; uVar1 < *0x443b58; uVar1 = uVar1 + 1) {\n            uVar3 = *(iVar2 + 8);\n            if ((uVar3 & 6) == 0) {\n                if ((*(iVar2 + 4) & 1 << (arg_8h & 0x1f)) == 0) {\n                    uVar3 = uVar3 & 0xfffffffe;\n                }\n                else {\n                    uVar3 = uVar3 | 1;\n                }\n                *(iVar2 + 8) = uVar3;\n            }\n            iVar2 = iVar2 + 0x2018;\n        }\n    }\n    return;\n}\n",
        "token_count": 229
    },
    "004048a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004048a0(uint arg_8h)\n\n{\n    uint *puVar1;\n    \n    for (puVar1 = *0x42e8e8; puVar1 != NULL; puVar1 = *puVar1) {\n        (*puVar1[1])(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 77
    },
    "00404aa9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl fcn.00404aa9(int32_t arg_8h, uint arg_ch, uint arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_bp_4h;\n    \n    (*_sym.imp.KERNEL32.dll_lstrcpynA)(arg_ch, arg_8h + *0x43a944, arg_10h);\n    iVar1 = fcn.00407a35(arg_ch);\n    *0x43a944 = *0x43a944 + iVar1;\n    *arg_14h = iVar1;\n    return 0;\n}\n",
        "token_count": 155
    },
    "00404b0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n\nvoid __fastcall fcn.00404b0c(uint param_1)\n\n{\n    uint var_bp_8h;\n    \n    fcn.00407b1f(0, param_1);\n    fcn.004074f6();\n    return;\n}\n",
        "token_count": 73
    },
    "0040761c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nchar * __cdecl fcn.0040761c(char *lpString)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    uint var_8h;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n    pcVar1 = _sym.imp.USER32.dll_CharPrevA;\n    pcVar3 = lpString + iVar2;\n    do {\n        if (*pcVar3 == '\\\\') break;\n        pcVar3 = (*pcVar1)(lpString, pcVar3);\n    } while (lpString < pcVar3);\n    *pcVar3 = '\\0';\n    return pcVar3 + 1;\n}\n",
        "token_count": 169
    },
    "0040782e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuchar * __cdecl fcn.0040782e(uchar *arg_8h, uint lpPathName)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_1ch;\n    uint var_bp_ch;\n    \n    iVar3 = 0x65;\n    do {\n        iVar3 = iVar3 + -1;\n        if (iVar3 == 0) {\n            *arg_8h = 0;\n            return NULL;\n        }\n        var_1ch = 0x61736e;\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n        var_30h._0_1_ = uVar1 % 0x1a;\n        var_1ch._0_3_ = CONCAT12(var_30h + 'a', var_1ch);\n        var_1ch = var_1ch & 0xff000000 | var_1ch;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetTempFileNameA)(lpPathName, &var_1ch, 0, arg_8h);\n    } while (iVar2 == 0);\n    return arg_8h;\n}\n",
        "token_count": 302
    },
    "0040148f": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint fcn.0040148f(void)\n\n{\n    uint32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_ch;\n    uint var_bp_4h;\n    \n    uVar3 = *0x443b38 | in_EAX;\n    uVar1 = fcn.00401414();\n    iVar2 = *(*0x40e000 + 4);\n    if (iVar2 == 0) {\n        iVar2 = *0x443b0c + -0x7fffffff;\n    }\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(iVar2, uVar1, 0, uVar3, &var_ch);\n    uVar1 = 0;\n    if (iVar2 == 0) {\n        uVar1 = var_ch;\n    }\n    return uVar1;\n}\n",
        "token_count": 216
    },
    "00407e38": {
        "rules": [
            "get file attributes"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nbool __cdecl fcn.00407e38(uint arg_8h)\n\n{\n    code *pcVar1;\n    char *arg_8h_00;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    bool bVar4;\n    uint var_8h;\n    \n    fcn.00407a0d(0x440990, arg_8h);\n    arg_8h_00 = fcn.00407688(0x440990);\n    bVar4 = false;\n    if (arg_8h_00 != NULL) {\n        fcn.00407a4b(arg_8h_00);\n        pcVar1 = _sym.imp.KERNEL32.dll_lstrlenA;\n        if (((*0x443b90 & 0x80) == 0) || ((*arg_8h_00 != '\\\\' && (*arg_8h_00 != '\\0')))) {\n            while (iVar3 = (*pcVar1)(0x440990),  arg_8h_00 + -0x440990 < iVar3) {\n                puVar2 = fcn.00407e00(0x440990);\n                if ((puVar2 != NULL) && ((*puVar2 & 0x10) == 0)) goto code_r0x00407ee4;\n                fcn.0040761c(0x440990);\n            }\n            fcn.004075a6(0x440990);\n            iVar3 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(0x440990);\n            bVar4 = iVar3 != -1;\n        }\n        else {\ncode_r0x00407ee4:\n            bVar4 = false;\n        }\n    }\n    return bVar4;\n}\n",
        "token_count": 397
    },
    "00407474": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "create process on Windows"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407474(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_18h;\n    uint hObject;\n    \n    *0x43e94c = 0x44;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateProcessA)(0, arg_8h, 0, 0, 0, 0, 0, 0, 0x43e94c, &var_18h);\n    uVar2 = 0;\n    if (iVar1 != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n        uVar2 = var_18h;\n    }\n    return uVar2;\n}\n",
        "token_count": 163
    },
    "004048c8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.004048c8(void)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint *puVar4;\n    uint var_1ch;\n    uint var_ch;\n    \n    puVar4 = *0x42e8e8;\n    fcn.004048a0(0);\n    pcVar3 = _sym.imp.KERNEL32.dll_GlobalFree;\n    pcVar2 = _sym.imp.KERNEL32.dll_FreeLibrary;\n    while (puVar4 != NULL) {\n        puVar1 = *puVar4;\n        (*pcVar2)(puVar4[2]);\n        (*pcVar3)(puVar4);\n        puVar4 = puVar1;\n    }\n    *0x42e8e8 = NULL;\n    return;\n}\n",
        "token_count": 191
    },
    "0040491f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040491f(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    \n    puVar1 = *0x42e8e8;\n    while( true ) {\n        if (puVar1 == NULL) {\n            return 1;\n        }\n        if (puVar1[2] == arg_8h) break;\n        puVar1 = *puVar1;\n    }\n    return 0;\n}\n",
        "token_count": 100
    },
    "004075ec": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004075ec(char *arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    uint var_9h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_CharNextA;\n    while( true ) {\n        if ((*arg_8h == '\\0') || (*arg_8h == arg_ch)) break;\n        arg_8h = (*pcVar1)(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 126
    },
    "0040770a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.0040770a(int32_t arg_8h, uint arg_ch)\n\n{\n    uchar *puVar1;\n    uchar uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    ulong uVar6;\n    uint var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    pcVar3 = _sym.imp.KERNEL32.dll_lstrlenA;\n    iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_ch);\n    while( true ) {\n        iVar5 = (*pcVar3)(arg_8h);\n        if (iVar5 < iVar4) {\n            return 0;\n        }\n        puVar1 = arg_8h + iVar4;\n        uVar2 = *puVar1;\n        *puVar1 = 0;\n        uVar6 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(arg_8h, arg_ch);\n        *puVar1 = uVar2;\n        if (uVar6 == 0) break;\n        arg_8h = (*_sym.imp.USER32.dll_CharNextA)(arg_8h, uVar6 >> 0x20);\n    }\n    return arg_8h;\n}\n",
        "token_count": 293
    },
    "00407777": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407777(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    \n    for (iVar1 = 0; arg_10h != iVar1 && -1 < arg_10h - iVar1; iVar1 = iVar1 + 1) {\n        *(arg_8h + iVar1) = *(arg_ch + iVar1);\n    }\n    return;\n}\n",
        "token_count": 103
    },
    "00408490": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __cdecl fcn.00408490(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_34h;\n    uint var_bp_ch;\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageA;\n    while( true ) {\n        iVar2 = (*pcVar1)(&var_34h, 0, arg_8h, arg_8h, 1);\n        if (iVar2 == 0) break;\n        (*_sym.imp.USER32.dll_DispatchMessageA)(&var_34h);\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "00408548": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408548(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0x80;\n    do {\n        iVar1 = iVar1 + -1;\n        *(param_1 + iVar1) = 0;\n    } while (iVar1 != 0);\n    *(param_1 + 0x68) = 1;\n    *(param_1 + 100) = 1;\n    *(param_1 + 0x60) = 1;\n    *(param_1 + 0x5c) = 1;\n    *(param_1 + 0x78) = 0xffffffff;\n    return;\n}\n",
        "token_count": 150
    },
    "00403a81": {
        "rules": [
            "read file on Windows"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nbool __cdecl fcn.00403a81(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_ReadFile)(*0x40a014, arg_8h, arg_ch, &var_ch, 0);\n    return iVar1 != 0 && var_ch == arg_ch;\n}\n",
        "token_count": 115
    },
    "00407eef": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint __cdecl fcn.00407eef(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_8h;\n    \n    uVar2 = *(arg_8h * 8 + 0x40a01c);\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar2);\n    if ((iVar1 == 0) && (iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(uVar2),  iVar1 == 0)) {\n        return 0;\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, *(arg_8h * 8 + 0x40a020));\n    return uVar2;\n}\n",
        "token_count": 187
    },
    "00404260": {
        "rules": [
            "create directory"
        ],
        "decompiled_code": "\nuint fcn.00404260(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    fcn.00407a4b(0x480000);\n    iVar1 = fcn.0040765a(0x480000);\n    uVar2 = 0;\n    if (iVar1 != 0) {\n        fcn.004075a6(0x480000);\n        (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(0x480000, 0);\n        uVar2 = fcn.0040782e(0x47e000, 0x480000);\n    }\n    return uVar2;\n}\n",
        "token_count": 144
    }
}