{
    "00402720": {
        "rules": [
            "64-bit execution via heavens gate/41888d14e91b4c9e83f5980fa2a0ad87"
        ],
        "decompiled_code": "\nvoid fcn.00402720(void)\n\n{\n    *0x444a78 = 100;\n    *0x444a6e = 0x6d;\n    *0x444a7a = 0x6c;\n    *0x444a76 = 0x2e;\n    *0x444a7c = 0x6c;\n    *0x444a74 = 0x32;\n    *0x444a6c = 0x69;\n    *0x444a68 = 0x6d;\n    *0x444a6a = 0x73;\n    *0x444a72 = 0x33;\n    *0x444a7e = 0;\n    *0x444a70 = 0x67;\n    (*_sym.imp.KERNEL32.dll_LoadLibraryW)(0x444a68);\n    return;\n}\n",
        "token_count": 197
    },
    "004027d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004027d0(uint32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint var_4h;\n    \n    *arg_8h = *arg_8h ^ arg_ch;\n    return;\n}\n",
        "token_count": 55
    },
    "004027f5": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004027f5(uint32_t *arg_8h, int32_t *lpBytesRead)\n\n{\n    uint32_t uVar1;\n    int32_t extraout_EDX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint lpOutBuffer;\n    int32_t var_1ch;\n    int32_t *var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_10h = *lpBytesRead;\n    var_1ch = lpBytesRead[1];\n    uVar2 = arg_8h[1];\n    var_14h = lpBytesRead[2];\n    var_ch = lpBytesRead[3];\n    uVar3 = *arg_8h;\n    var_4h = -0x3910c8e0;\n    var_18h = 0x9e3779b9;\n    if (*0x444a64 == 0x60b) {\n        (*_sym.imp.KERNEL32.dll_CallNamedPipeA)(0x401250, 0, 0, &lpOutBuffer, 0, &lpBytesRead, 0);\n    }\n    do {\n        var_8h = uVar3 * 0x10 + var_14h;\n        uVar1 = (uVar3 >> 5) + var_ch;\n        *0x444614 = 0xffcf03fc;\n        fcn.004027d0(&var_8h, var_4h + uVar3);\n        *0x444614 = 0;\n        *0x44461c = 0xffffffff;\n        uVar2 = uVar2 - (uVar1 ^ var_8h);\n        *0x444618 = 0xff6b3619;\n        uVar3 = uVar3 - (uVar2 * 0x10 + var_10h ^ (uVar2 >> 5) + var_1ch ^ var_4h + uVar2);\n        lpBytesRead = var_18h;\n        var_4h = var_4h - var_18h;\n    } while (extraout_EDX != 1);\n    *arg_8h = uVar3;\n    arg_8h[1] = uVar2;\n    return;\n}\n",
        "token_count": 536
    },
    "004028f2": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004028f2(int32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    for (arg_ch = arg_ch >> 3; arg_ch != 0; arg_ch = arg_ch - 1) {\n        if (*0x444a64 == 0xb7d) {\n            (*_sym.imp.KERNEL32.dll_GetConsoleAliasesLengthW)(0);\n        }\n        if (*0x444a64 == 0x1c) {\n            (*_sym.imp.KERNEL32.dll_OpenMutexW)(0, 0, 0x401260);\n            (*_sym.imp.KERNEL32.dll_EnumDateFormatsW)(0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_EnumSystemCodePagesW)(0, 0);\n        }\n        fcn.004027f5(arg_8h, arg_10h);\n        arg_8h = arg_8h + 8;\n    }\n    return;\n}\n",
        "token_count": 219
    },
    "00402a87": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nvoid fcn.00402a87(void)\n\n{\n    uint var_4h;\n    \n    *0x41f4ce = 0x33;\n    *0x41f4cf = 0x32;\n    *0x41f4d3 = 0x6c;\n    *0x41f4d2 = 0x6c;\n    *0x41f4cb = 0x6e;\n    *0x41f4cd = 0x6c;\n    *0x41f4c8 = 0x6b;\n    *0x41f4cc = 0x65;\n    *0x41f4ca = 0x72;\n    *0x41f4d0 = 0x2e;\n    *0x41f4d1 = 100;\n    *0x41f4c9 = 0x65;\n    *0x41f4d4 = 0;\n    *0x444a60 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(0x41f4c8);\n    *0x41f4d3 = 0x65;\n    *0x41f4c9 = 0x69;\n    *0x41f4cc = 0x75;\n    *0x41f4ce = 0x6c;\n    *0x41f4cd = 0x61;\n    *0x41f4d1 = 0x6f;\n    *0x41f4d5 = 0x74;\n    *0x41f4c8 = 0x56;\n    *0x41f4d4 = 99;\n    *0x41f4cf = 0x50;\n    *0x41f4d6 = 0;\n    *0x41f4cb = 0x74;\n    *0x41f4d2 = 0x74;\n    *0x41f4ca = 0x72;\n    *0x41f4d0 = 0x72;\n    *0x41f4c4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*0x444a60, 0x41f4c8);\n    (**0x41f4c4)(*0x444610, *0x444a64, 0x40, &var_4h);\n    return;\n}\n",
        "token_count": 530
    },
    "004044c2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x004045b5: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x004045ba)\n// WARNING: Removing unreachable block (ram,0x004045e8)\n// WARNING: Removing unreachable block (ram,0x004045c0)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004044c2(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00403fdc(0x40dae8, 0x18);\n    fcn.004064af(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x444ed4 != 1) {\n        *0x444ed0 = 1;\n        *0x444ecc = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.00403ab7(*0x446b48);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.00403ab7(*0x446b44);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.00403aae();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.00403ab7(*piVar2);\n                        iVar3 = fcn.00403aae();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.00403ab7(*0x446b48);\n                        piVar1 = fcn.00403ab7(*0x446b44);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.004043fc(0x401214);\n        }\n        fcn.004043fc(0x40121c);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.004063d5(8);\n    }\n    return;\n}\n",
        "token_count": 791
    },
    "004062e8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004062e8(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.004063d5(0);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "00406324": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406324(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x41e87c) {\n        return;\n    }\n    *0x445700 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x445704 = &arg_8h;\n    *0x445640 = 0x10001;\n    *0x4455e8 = 0xc0000409;\n    *0x4455ec = 1;\n    var_328h = *0x41e87c;\n    var_324h = *0x41e880;\n    *0x4455f4 = unaff_retaddr;\n    *0x4456cc = in_GS;\n    *0x4456d0 = in_FS;\n    *0x4456d4 = in_ES;\n    *0x4456d8 = in_DS;\n    *0x4456dc = unaff_EDI;\n    *0x4456e0 = unaff_ESI;\n    *0x4456e4 = unaff_EBX;\n    *0x4456e8 = in_EDX;\n    *0x4456ec = in_ECX;\n    *0x4456f0 = in_EAX;\n    *0x4456f4 = unaff_EBP;\n    *0x4456f8 = unaff_retaddr;\n    *0x4456fc = in_CS;\n    *0x445708 = in_SS;\n    *0x445638 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.00409165(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x401cac);\n    if (*0x445638 == 0) {\n        fcn.00409165(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 829
    },
    "004093c7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004093c7(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00403aae();\n    var_4h = 0;\n    if (*0x4455d4 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x401ca0);\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x401c94);\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x4455d4 = fcn.00403a3c(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, 0x401c84);\n        *0x4455d8 = fcn.00403a3c(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x401c70);\n        *0x4455dc = fcn.00403a3c(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x401c54);\n        *0x4455e4 = fcn.00403a3c(uVar3);\n        if (*0x4455e4 != 0) {\n            uVar3 = (*pcVar4)(iVar2, 0x401c3c);\n            *0x4455e0 = fcn.00403a3c(uVar3);\n        }\n    }\n    if ((*0x4455e0 != iVar1) && (*0x4455e4 != iVar1)) {\n        pcVar4 = fcn.00403ab7(*0x4455e0);\n        pcVar5 = fcn.00403ab7(*0x4455e4);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x00409509;\n        }\n    }\n    if ((((*0x4455d8 != iVar1) && (pcVar4 = fcn.00403ab7(*0x4455d8),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x4455dc != iVar1 && (pcVar4 = fcn.00403ab7(*0x4455dc),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x00409509:\n    pcVar4 = fcn.00403ab7(*0x4455d4);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 846
    },
    "00408ae9": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00408ae9(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00403fdc(0x40dca8, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.00405661();\n        *puVar2 = 0;\n        puVar2 = fcn.0040564e();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x446a20)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x446a40;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.0040ab5b(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.0040564e();\n                    *puVar2 = 9;\n                    puVar2 = fcn.00405661();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.004083b6(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00408bbb(0x40dca8);\n                goto code_r0x00408bb5;\n            }\n        }\n        puVar2 = fcn.00405661();\n        *puVar2 = 0;\n        puVar2 = fcn.0040564e();\n        *puVar2 = 9;\n        fcn.004055e6(0, 0, 0, 0, 0);\n    }\ncode_r0x00408bb5:\n    fcn.00404021();\n    return;\n}\n",
        "token_count": 629
    },
    "004027b5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004027b5(uint *arg_8h, uint noname_1, uint arg_10h)\n\n{\n    uint var_4h;\n    \n    *arg_8h = arg_10h;\n    return;\n}\n",
        "token_count": 55
    },
    "00402959": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpNumberOfEventsRead\n\nvoid __cdecl fcn.00402959(int32_t latency)\n\n{\n    uchar auStack8280 [2048];\n    uint lpszVolumeMountPoint;\n    uint lpBuffer;\n    uint var_c54h;\n    uint var_854h;\n    uint lpOutBuffer;\n    uint uStack204;\n    uint uStack200;\n    uint uStack196;\n    uint uStack192;\n    uint uStack188;\n    int32_t iStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    uint uStack168;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint *puStack144;\n    uint uStack140;\n    uint *puStack136;\n    uint uStack132;\n    uint *puStack128;\n    uint uStack124;\n    uint *puStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint *puStack96;\n    uint *puStack92;\n    uint var_54h;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint *lpCC;\n    uint var_3ch;\n    uint *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint *puStack20;\n    uint lpFilePart;\n    uint *lpBytesRead;\n    uint lpNumberOfEventsRead;\n    \n    lpNumberOfEventsRead = 0x402966;\n    fcn.00403300();\n    if (*0x444a64 == 0x37) {\n        lpBytesRead = 0x30;\n        puStack20 = &fcn.00402959::var_3ch;\n        lpFilePart = 0;\n        lpCC = NULL;\n        uStack24 = 0x402985;\n        fcn.00403330();\n        lpBytesRead = &fcn.00402959::lpCC;\n        lpFilePart = 0;\n        puStack20 = 0x4012a8;\n        uStack24 = 0x402998;\n        (*_sym.imp.KERNEL32.dll_CommConfigDialogW)();\n        uStack24 = 0;\n        uStack28 = 0;\n        uStack32 = 0;\n        uStack36 = 0;\n        uStack40 = 0x4029a2;\n        (*_sym.imp.KERNEL32.dll_CreateMailslotA)();\n        uStack40 = 0;\n        puStack44 = &fcn.00402959::lpBuffer;\n        puStack48 = 0x4029b0;\n        (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)();\n        puStack48 = &stack0xffffdfa8;\n        uStack52 = 0;\n        uStack56 = 0x4029be;\n        (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)();\n        uStack56 = 0;\n        puStack60 = &fcn.00402959::lpBytesRead;\n        var_3ch = 0;\n        lpCC = &fcn.00402959::lpOutBuffer;\n        uStack72 = 0;\n        uStack76 = 0;\n        uStack80 = 0;\n        uStack84 = 0x4029d4;\n        (*_sym.imp.KERNEL32.dll_CallNamedPipeW)();\n        uStack84 = 0;\n        var_54h = 0;\n        puStack92 = 0x4029dc;\n        (*_sym.imp.KERNEL32.dll_MoveFileW)();\n        puStack92 = &fcn.00402959::lpFilePart;\n        puStack96 = &fcn.00402959::var_c54h;\n        uStack100 = 0;\n        uStack104 = 0;\n        uStack108 = 0;\n        uStack112 = 0;\n        uStack116 = 0x4029f1;\n        (*_sym.imp.KERNEL32.dll_SearchPathA)();\n        uStack116 = 0;\n        puStack120 = &fcn.00402959::lpszVolumeMountPoint;\n        uStack124 = 0;\n        puStack128 = 0x402a00;\n        (*_sym.imp.KERNEL32.dll_FindNextVolumeMountPointA)();\n        puStack128 = &fcn.00402959::lpNumberOfEventsRead;\n        uStack132 = 0;\n        puStack136 = &fcn.00402959::var_54h;\n        uStack140 = 0;\n        puStack144 = 0x402a10;\n        (*_sym.imp.KERNEL32.dll_ReadConsoleInputW)();\n        puStack144 = &fcn.00402959::var_854h;\n        uStack148 = 0;\n        uStack152 = 0x402a1e;\n        (*_sym.imp.KERNEL32.dll_GetLogicalDriveStringsA)();\n        uStack152 = 0;\n        uStack156 = 0;\n        uStack160 = 0;\n        uStack164 = 0x402a27;\n        (*_sym.imp.KERNEL32.dll_CreateDirectoryExW)();\n        uStack164 = 0x4012f0;\n        uStack168 = 0x402a32;\n        (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n        uStack168 = 0;\n        uStack172 = 0;\n        uStack176 = 0;\n        uStack180 = 0;\n        iStack184 = 0x402a3c;\n        (*_sym.imp.KERNEL32.dll_GetConsoleAliasW)();\n        iStack184 = latency;\n        uStack188 = 0x402a45;\n        (*_sym.imp.KERNEL32.dll_RequestWakeupLatency)();\n        uStack188 = 0;\n        uStack192 = 0;\n        uStack196 = 0;\n        uStack200 = 0;\n        uStack204 = 0x402a4f;\n        (*_sym.imp.KERNEL32.dll_EnumCalendarInfoExW)();\n        uStack204 = 0x402a55;\n        (*_sym.imp.KERNEL32.dll_AreFileApisANSI)();\n    }\n    *(*0x444610 + latency) = *(*0x444e78 + 0x38d6 + latency);\n    return;\n}\n",
        "token_count": 1429
    },
    "00402a79": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402a79(void)\n\n{\n    *0x444610 = *0x444610 + 0x3aa2;\n    return;\n}\n",
        "token_count": 36
    },
    "00402b99": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpTotalBytesAvail\n// WARNING: Variable defined which should be unmapped: lpNumberOfBytesWritten\n// WARNING: Variable defined which should be unmapped: lpBytesLeftThisMessage\n// WARNING: Variable defined which should be unmapped: lpContext\n// WARNING: Variable defined which should be unmapped: lpBytesRead\n\nuint fcn.00402b99(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint unaff_EBX;\n    int32_t iVar3;\n    uint32_t latency;\n    uint32_t unaff_EDI;\n    uint lpszVolumeName;\n    uint lpBuffer;\n    uint lpString1;\n    uint lpCPInfoEx;\n    uint uStackY192;\n    uint uStackY188;\n    uint uStackY184;\n    uint uStackY180;\n    uint uStackY176;\n    uint uStackY172;\n    uint uStackY168;\n    uint uStackY164;\n    uint uStackY160;\n    uint *puStackY156;\n    uint uStackY152;\n    uint *puStackY148;\n    uint *puStackY144;\n    uint *puStackY140;\n    uint uStackY136;\n    uint *puStackY132;\n    uint uStackY128;\n    uint uStackY124;\n    uint uStackY120;\n    uint uStackY116;\n    uint uStackY112;\n    uint *puStackY108;\n    uint uStackY104;\n    uint *puStackY100;\n    uint *puStackY96;\n    uint uStackY92;\n    uint uStackY88;\n    uint uStackY84;\n    uint uStackY80;\n    uint uStackY76;\n    uint uStackY72;\n    uint uStackY68;\n    uint uStackY64;\n    uint uStackY60;\n    uint *puStackY56;\n    uint uStackY52;\n    uint uStackY48;\n    uint uStackY44;\n    uint *var_24h;\n    uint uStackY36;\n    uint uStackY32;\n    uint *lpNumberOfBytesWritten;\n    uint *lpBytesLeftThisMessage;\n    uint32_t lpTotalBytesAvail;\n    uint lpBytesRead;\n    uint lpContext;\n    \n    lpContext = 0x402ba6;\n    fcn.00403300();\n    iVar3 = 0;\n    lpTotalBytesAvail = unaff_EDI;\n    lpContext = unaff_EBX;\n    do {\n        if (iVar3 == 0x13e6) {\n            *0x444a64 = *0x444a64 + 0x38d6;\n        }\n        if (*0x444a64 == 0xbd8) {\n            lpBytesLeftThisMessage = NULL;\n            lpNumberOfBytesWritten = 0x402bd3;\n            (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n        }\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x31a652);\n    lpBytesLeftThisMessage = 0x402be1;\n    fcn.00402b85();\n    latency = 0;\n    if (*0x444a64 != 0) {\n        do {\n            lpNumberOfBytesWritten = 0x402bf3;\n            lpTotalBytesAvail = latency;\n            fcn.00402959(latency);\n            if (*0x444a64 == 0x29) {\n                lpNumberOfBytesWritten = 0x402c02;\n                (*_sym.imp.KERNEL32.dll_SetFileApisToANSI)();\n                lpNumberOfBytesWritten = &fcn.00402b99::lpContext;\n                (*_sym.imp.KERNEL32.dll_InterlockedDecrement)();\n            }\n            latency = latency + 1;\n        } while (latency < *0x444a64);\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_CopyFileW;\n    iVar3 = 0;\n    do {\n        if (*0x444a64 == 0x465) {\n            lpBytesLeftThisMessage = 0x402e1b;\n            (*_sym.imp.KERNEL32.dll_GetConsoleAliasExesLengthA)();\n            lpBytesLeftThisMessage = &fcn.00402b99::lpContext;\n            lpNumberOfBytesWritten = 0x402e25;\n            (*_sym.imp.KERNEL32.dll_InterlockedDecrement)();\n            lpNumberOfBytesWritten = &fcn.00402b99::var_24h;\n            (*_sym.imp.KERNEL32.dll_GetConsoleSelectionInfo)();\n            uStackY32 = 0;\n            uStackY36 = 0;\n            var_24h = 0x402e38;\n            (*_sym.imp.KERNEL32.dll_FindResourceA)();\n            var_24h = NULL;\n            uStackY44 = 0x402e3f;\n            (*_sym.imp.KERNEL32.dll_ExitThread)();\n            pcVar1 = swi(3);\n            uVar2 = (*pcVar1)();\n            return uVar2;\n        }\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x919802);\n    if (*0x444a64 == 0x19c) {\n        lpBytesLeftThisMessage = NULL;\n        lpNumberOfBytesWritten = 0x401350;\n        uStackY32 = 0x402c52;\n        (*_sym.imp.KERNEL32.dll_lstrcpynA)();\n        uStackY32 = 0;\n        uStackY36 = 0;\n        var_24h = NULL;\n        uStackY44 = 0x402c57;\n        (*pcVar1)();\n        uStackY44 = 0x4013a0;\n        uStackY48 = 0;\n        uStackY52 = 0;\n        puStackY56 = 0x402c64;\n        (*_sym.imp.KERNEL32.dll_OpenJobObjectA)();\n        puStackY56 = NULL;\n        uStackY60 = 0x402c6b;\n        (*_sym.imp.KERNEL32.dll_GlobalFindAtomA)();\n        uStackY60 = 0;\n        uStackY64 = 0x402c72;\n        (*_sym.imp.KERNEL32.dll_LoadLibraryW)();\n        uStackY64 = 0;\n        uStackY68 = 0;\n        uStackY72 = 0x402c7a;\n        (*_sym.imp.KERNEL32.dll_CreateDirectoryW)();\n        uStackY72 = 0x4013c4;\n        uStackY76 = 0x402c85;\n        (*_sym.imp.KERNEL32.dll_lstrlenW)();\n        uStackY76 = 0;\n        uStackY80 = 0;\n        uStackY84 = 0;\n        uStackY88 = 0x402c8e;\n        (*_sym.imp.KERNEL32.dll_ClearCommError)();\n        uStackY88 = 0;\n        uStackY92 = 0;\n        puStackY96 = 0x402c96;\n        (*_sym.imp.KERNEL32.dll_SetVolumeMountPointA)();\n        puStackY96 = &fcn.00402b99::lpContext;\n        puStackY100 = NULL;\n        uStackY104 = 0;\n        puStackY108 = &fcn.00402b99::lpNumberOfBytesWritten;\n        uStackY112 = 0;\n        uStackY116 = 0;\n        uStackY120 = 0;\n        lpContext = 0;\n        uStackY124 = 0x402cac;\n        (*_sym.imp.KERNEL32.dll_BackupWrite)();\n        uStackY124 = 0;\n        uStackY128 = 0x402cb3;\n        (*_sym.imp.KERNEL32.dll_FreeEnvironmentStringsA)();\n        uStackY128 = 0;\n        puStackY132 = &fcn.00402b99::lpszVolumeName;\n        uStackY136 = 0;\n        puStackY140 = 0x402cc2;\n        (*_sym.imp.KERNEL32.dll_FindNextVolumeW)();\n        puStackY140 = &fcn.00402b99::lpBytesLeftThisMessage;\n        puStackY144 = &fcn.00402b99::lpTotalBytesAvail;\n        puStackY148 = &fcn.00402b99::lpBytesRead;\n        uStackY152 = 0;\n        puStackY156 = &fcn.00402b99::lpBuffer;\n        uStackY160 = 0;\n        uStackY164 = 0x402cdd;\n        (*_sym.imp.KERNEL32.dll_PeekNamedPipe)();\n        uStackY164 = 0;\n        uStackY168 = 0;\n        uStackY172 = 0x402ce5;\n        (*_sym.imp.KERNEL32.dll_MoveFileA)();\n        uStackY172 = 0;\n        uStackY176 = 0;\n        uStackY180 = 0x402ced;\n        (*_sym.imp.KERNEL32.dll_SetConsoleCtrlHandler)();\n        uStackY180 = 0;\n        uStackY184 = 0;\n        uStackY188 = 0x402cf5;\n        (*_sym.imp.KERNEL32.dll_ActivateActCtx)();\n        uStackY188 = 0x4013e4;\n        uStackY192 = 0x402d00;\n        (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n    }\n    iVar3 = 0;\n    do {\n        if (*0x444a64 == 0x15a) {\n            lpBytesLeftThisMessage = &fcn.00402b99::lpBytesRead;\n            lpNumberOfBytesWritten = 0x402d18;\n            (*_sym.imp.KERNEL32.dll_GetNumberOfConsoleMouseButtons)();\n        }\n        if (iVar3 == 0xab9d) {\n            lpBytesLeftThisMessage = 0x41f4c8;\n            lpNumberOfBytesWritten = 0x402d2b;\n            *0x444a60 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n        }\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x2594b);\n    *0x41f4c8 = 0;\n    iVar3 = 0;\n    do {\n        if (iVar3 == 0x148) {\n            lpBytesLeftThisMessage = 0x402d4e;\n            fcn.00402a87();\n        }\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x427fa7);\n    lpBytesLeftThisMessage = 0x40f010;\n    lpNumberOfBytesWritten = *0x444a64;\n    uStackY32 = 0x402d6d;\n    fcn.004028f2(*0x444610, *0x444a64, 0x40f010);\n    iVar3 = 0;\n    do {\n        if (*0x444a64 == 0xba) {\n            uStackY32 = 0;\n            uStackY36 = 0x402d82;\n            (*_sym.imp.KERNEL32.dll_InterlockedDecrement)();\n        }\n        uStackY32 = 0;\n        uStackY36 = 0x402d89;\n        (*_sym.imp.KERNEL32.dll_GlobalFlags)();\n        if (iVar3 == 0x2f7e4) {\n            uStackY32 = 0x402d96;\n            fcn.00402a79();\n        }\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x48122);\n    uStackY32 = 0x402da4;\n    fcn.00402720();\n    if (*0x444a64 == 0x58c) {\n        uStackY32 = 0;\n        uStackY36 = 0x402db7;\n        (*_sym.imp.KERNEL32.dll_LocalFree)();\n        uStackY36 = 0;\n        var_24h = &fcn.00402b99::lpszVolumeName;\n        uStackY44 = 0x402dc5;\n        (*_sym.imp.KERNEL32.dll_FindFirstVolumeW)();\n        uStackY44 = 0;\n        uStackY48 = 0x402dcc;\n        (*_sym.imp.KERNEL32.dll_GetConsoleSelectionInfo)();\n        uStackY48 = 0;\n        uStackY52 = 0;\n        puStackY56 = &fcn.00402b99::lpBytesRead;\n        uStackY60 = 0x402dd8;\n        (*_sym.imp.KERNEL32.dll_InterlockedCompareExchange)();\n        uStackY60 = 0;\n        uStackY64 = 0;\n        uStackY68 = 0;\n        uStackY72 = 0x402de1;\n        (*_sym.imp.KERNEL32.dll_ContinueDebugEvent)();\n        uStackY72 = 0x4013fc;\n        uStackY76 = 0x402dec;\n        (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n        uStackY76 = 0;\n        uStackY80 = 0;\n        uStackY84 = 0;\n        uStackY88 = 0x402df5;\n        (*_sym.imp.KERNEL32.dll_FindResourceW)();\n        uStackY88 = 0;\n        uStackY92 = 0;\n        puStackY96 = NULL;\n        puStackY100 = 0x402dfa;\n        (*pcVar1)();\n        puStackY100 = &fcn.00402b99::lpCPInfoEx;\n        uStackY104 = 0;\n        puStackY108 = NULL;\n        uStackY112 = 0x402e09;\n        (*_sym.imp.KERNEL32.dll_GetCPInfoExA)();\n    }\n    uStackY32 = 0x402e0e;\n    fcn.00402a73();\n    return 0;\n}\n",
        "token_count": 3039
    },
    "null": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint main(void)\n\n{\n    uint32_t uVar1;\n    int32_t var_90h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = 0;\n    do {\n        if (uVar1 < 0x1c865) {\n            (*_sym.imp.KERNEL32.dll_GetTickCount)();\n        }\n    } while (((uVar1 < 0x1e974290) || (var_90h == 0xad642ec)) && (uVar1 = uVar1 + 1,  uVar1 < 0x8e2a75d8));\n    if (*0x444a64 == 0x9e) {\n        fcn.004035b0(0, 0, 0);\n        fcn.0040351b(0);\n        fcn.004033aa();\n    }\n    *0x444a64 = *0x40f2e4;\n    *0x444e78 = *0x40f008;\n    fcn.00402b99();\n    return 0;\n}\n",
        "token_count": 424
    },
    "004045ee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004045ee(uint arg_8h)\n\n{\n    fcn.004044c2(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 40
    },
    "00406000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00406014)\n// WARNING: Removing unreachable block (ram,0x0040601a)\n// WARNING: Removing unreachable block (ram,0x0040601c)\n\nvoid fcn.00406000(void)\n\n{\n    return;\n}\n",
        "token_count": 62
    },
    "0040b4af": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.0040b4af(void)\n\n{\n    *0x41f454 = (*_sym.imp.KERNEL32.dll_CreateFileA)(0x402630, 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 64
    }
}