{
    "0040a04b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040a04b(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t unaff_ESI;\n    uint var_5ch;\n    \n    fcn.004105ba(0x4434a8, 10, 1);\n    uVar2 = (*_fcn.00443050)(&var_5ch);\n    pcVar1 = *0x443258;\n    *(unaff_ESI + 0x410) = uVar2;\n    (*pcVar1)(*(unaff_ESI + 0x10), 0x3ec, 0x30, uVar2, 0);\n    if (*0x451260 != 0) {\n        (*pcVar1)(*(unaff_ESI + 0x10), 0x3ee, 0x30, *(unaff_ESI + 0x410), 0);\n    }\n    return;\n}\n",
        "token_count": 206
    },
    "0040a0ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a0ac(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = _fcn.00443268;\n    if (arg_8h == 0x110) {\n        if (*0x4511e0 == 0) {\n            uVar5 = (*_fcn.00443268)(*(in_ECX + 0x10), 0x3ed, 0);\n            pcVar1 = *0x44322c;\n            (**0x44322c)(uVar5);\n            uVar5 = (*pcVar2)(*(in_ECX + 0x10), 0x3ee, 0);\n            (*pcVar1)(uVar5);\n        }\n        else {\n            (*_fcn.0044323c)(*(in_ECX + 0x10), 0x3ee, 0x4511e0);\n        }\n        (*_fcn.00443230)(*(in_ECX + 0x10), 0x4434c4);\n        pcVar2 = _fcn.0044323c;\n        (*_fcn.0044323c)(*(in_ECX + 0x10), 0x3ea, in_ECX + 0x14);\n        (*pcVar2)(*(in_ECX + 0x10), 0x3ec, in_ECX + 0x212);\n        fcn.0040a04b();\n        fcn.0041089d(*(in_ECX + 0x10));\n        return 0;\n    }\n    if (arg_8h == 0x111) {\n        if ((arg_ch != 1) && (arg_ch != 2)) {\n            return 0;\n        }\n        if (arg_ch >> 0x10 != 0) {\n            return 0;\n        }\n        (**0x443260)(*(in_ECX + 0x10), arg_ch & 0xffff);\n        (**0x44304c)(*(in_ECX + 0x410));\n    }\n    else {\n        if (arg_8h == 0x138) {\n            uVar6 = (*_fcn.00443268)(*(in_ECX + 0x10), 0x3ec);\n            if (arg_10h != uVar6) {\n                if (*0x451260 == 0) {\n                    return 0;\n                }\n                uVar6 = (*pcVar2)(*(in_ECX + 0x10), 0x3ee);\n                if (arg_10h != uVar6) {\n                    return 0;\n                }\n            }\n            (**0x443044)(arg_ch, 1);\n            (**0x443048)(arg_ch, 0xc00000);\n            uVar5 = (**0x443228)(0xf);\n            return uVar5;\n        }\n        if (arg_8h != 0x200) {\n            if (arg_8h != 0x202) {\n                return 0;\n            }\n            iVar3 = (*_fcn.00443268)(*(in_ECX + 0x10), 0x3ec);\n            pcVar1 = *0x44321c;\n            iVar4 = (**0x44321c)(*(in_ECX + 0x10), arg_10h & 0xffff, arg_10h >> 0x10);\n            if (iVar4 == iVar3) {\n                iVar3 = in_ECX + 0x212;\n            }\n            else {\n                if (*0x451260 == 0) {\n                    return 0;\n                }\n                iVar3 = (*pcVar2)(*(in_ECX + 0x10), 0x3ee);\n                iVar4 = (*pcVar1)(*(in_ECX + 0x10), arg_10h & 0xffff, arg_10h >> 0x10);\n                if (iVar4 != iVar3) {\n                    return 0;\n                }\n                iVar3 = 0x451260;\n            }\n            fcn.004109c7(*(in_ECX + 0x10), iVar3);\n            return 1;\n        }\n        iVar3 = (*_fcn.00443268)(*(in_ECX + 0x10), 0x3ec);\n        pcVar1 = *0x44321c;\n        iVar4 = (**0x44321c)(*(in_ECX + 0x10), arg_10h & 0xffff, arg_10h >> 0x10);\n        if (iVar4 != iVar3) {\n            if (*0x451260 == 0) {\n                return 0;\n            }\n            iVar3 = (*pcVar2)(*(in_ECX + 0x10), 0x3ee);\n            iVar4 = (*pcVar1)(*(in_ECX + 0x10), arg_10h & 0xffff, arg_10h >> 0x10);\n            if (iVar4 != iVar3) {\n                return 0;\n            }\n        }\n        uVar5 = (*_fcn.00443144)(0);\n        uVar5 = (*_fcn.00443220)(uVar5, 0x67);\n        (*_fcn.00443224)(uVar5);\n    }\n    return 1;\n}\n",
        "token_count": 1230
    },
    "0040a66a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a66a(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *in_ECX;\n    \n    if (arg_8h == 0) {\n        if (arg_ch == 1) {\n            (**(*in_ECX + 4))(0);\n        }\n        else if (arg_ch != 2) goto code_r0x0040a6a6;\n        (**0x443260)(in_ECX[4], arg_ch);\n    }\n    else if (arg_8h != 0x300) {\n        return 0;\n    }\ncode_r0x0040a6a6:\n    (**(*in_ECX + 0x1c))();\n    return 0;\n}\n",
        "token_count": 162
    },
    "0040a7c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040a7c4(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t *unaff_ESI;\n    uint var_4h;\n    \n    iVar1 = unaff_ESI[1];\n    if (iVar1 == 0) {\n        fcn.0044b531(in_EAX + 0x244, 0, 0x2c);\n    }\n    else if (*(in_EAX + 0x208) != 0) {\n        *(in_EAX + 0x244) = 0x2c;\n        (**0x443270)(*(in_EAX + 0x208), in_EAX + 0x244);\n    }\n    (**(*unaff_ESI + 0xc))(0x448d10, in_EAX + 0x244, 0x2c);\n    if (iVar1 == 0) {\n        fcn.0040a82b();\n    }\n    return;\n}\n",
        "token_count": 219
    },
    "0040a82b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040a82b(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t unaff_EBX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar3 = *0x443248;\n    if (*(unaff_EBX + 0x208) != 0) {\n        iVar5 = *(unaff_EBX + 0x260);\n        iVar2 = *(unaff_EBX + 0x264);\n        if ((((0x14 < *(unaff_EBX + 0x268) - iVar5) && (0x14 < *(unaff_EBX + 0x26c) - iVar2)) &&\n            (5 < *(unaff_EBX + 0x268))) &&\n           (((-0xb < iVar2 && (iVar4 = (**0x443248)(0),  iVar5 + 0x14 < iVar4)) &&\n            (iVar5 = (*pcVar3)(1),  iVar2 + 0x14 < iVar5)))) {\n            piVar1 = unaff_EBX + 0x24c;\n            iVar5 = *piVar1;\n            if (iVar5 != 0) {\n                *(unaff_EBX + 0x244) = 0x2c;\n                *piVar1 = 10;\n                (*_fcn.00443294)(*(unaff_EBX + 0x208), unaff_EBX + 0x244);\n                *piVar1 = iVar5;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 377
    },
    "0040a908": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a908(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    uint16_t uVar2;\n    \n    pcVar1 = *0x44327c;\n    uVar2 = (**0x44327c)(arg_8h, 0x412, arg_ch, 0);\n    if (arg_10h == 0) {\n        uVar2 = uVar2 & 0xfffb;\n    }\n    else {\n        uVar2 = uVar2 | 4;\n    }\n    (*pcVar1)(arg_8h, 0x411, arg_ch, uVar2);\n    return;\n}\n",
        "token_count": 158
    },
    "0040a94a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040a94a(int32_t *param_1, int32_t param_2, uint32_t param_3, int32_t param_4)\n\n{\n    int32_t iVar1;\n    \n    param_1[0x83] = 0;\n    param_1[0x8a] = param_2;\n    param_1[0x8c] = param_4;\n    param_1[0x8b] = param_3;\n    if (param_2 == 1) {\n        fcn.00413381(param_1[0x82], 0);\n        (**(*param_1 + 0x14))();\n        param_1[0x90] = 1;\n        goto code_r0x0040a9d8;\n    }\n    if (param_2 != 2) {\n        if (param_2 == 5) {\n            (**(*param_1 + 0x10))();\n            goto code_r0x0040a9d8;\n        }\n        if (param_2 != 0x11) {\n            if (param_2 == 0x4e) {\n                (**(*param_1 + 8))(param_3, param_4);\n            }\n            else if (param_2 == 0x111) {\n                (**(*param_1 + 4))(param_3 >> 0x10, param_3, param_4);\n            }\n            goto code_r0x0040a9d8;\n        }\n    }\n    (**(*param_1 + 0xc))();\ncode_r0x0040a9d8:\n    if (param_1[0x83] == 0) {\n        iVar1 = fcn.0040a7a9(param_2, param_3, param_4);\n    }\n    else {\n        iVar1 = param_1[0x84];\n    }\n    return iVar1;\n}\n",
        "token_count": 427
    },
    "0040abff": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040abff(uint16_t *arg_8h)\n\n{\n    uint16_t *puVar1;\n    uint16_t *puVar2;\n    uint8_t uVar3;\n    uint16_t uVar4;\n    uint8_t *puVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uchar *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint var_50h;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uchar *var_ch;\n    uint var_5h;\n    \n    puVar2 = arg_8h;\n    puVar5 = fcn.0040ab97();\n    if (puVar5 == NULL) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = *puVar5;\n    }\n    var_5h._0_1_ = uVar3 >> 4;\n    *arg_8h = var_5h;\n    uVar9 = var_5h;\n    uVar3 = uVar3 & 0xf;\n    if (uVar9 < 7) {\n        if (uVar9 == 6) {\n            uVar9 = uVar3;\n            if (uVar9 == 0xf) {\n                fcn.0040aa44();\n                fcn.0040abff(&var_50h);\n                uVar9 = fcn.0040aaa6();\n                fcn.0040aa82();\n            }\n            if (uVar9 < 0x10000) {\n                arg_8h[1] = uVar9;\n                var_ch = fcn.0040ab97();\n                if (var_ch != NULL) {\n                    var_18h = 0;\n                    var_14h = 0;\n                    var_10h = 5000;\n                    fcn.004115f8();\n                    if (uVar9 != 0) {\n                        puVar8 = var_ch;\n                        uVar10 = uVar9;\n                        do {\n                            *(puVar8 + (var_18h - var_ch)) = CONCAT11(*puVar8, puVar8[1]);\n                            puVar8 = puVar8 + 2;\n                            uVar10 = uVar10 - 1;\n                        } while (uVar10 != 0);\n                    }\n                    fcn.004111e3(var_18h, uVar9);\n                    fcn.00411611();\n                }\n            }\n        }\n        else if (uVar9 != 0) {\n            if (uVar9 < 4) {\n                iVar6 = fcn.0040ab97();\n                if (iVar6 != 0) {\n                    arg_8h[1] = 1 << uVar3;\n                    fcn.004115f8();\n                    fcn.0044b575(*(arg_8h + 0xc), iVar6, 1 << uVar3);\n                    if (var_5h == 1) {\n                        uVar7 = fcn.0040abdd();\n                        *(arg_8h + 0x1a) = uVar7;\n                    }\n                }\n            }\n            else if (uVar9 == 4) {\n                uVar9 = uVar3;\n                if (uVar9 == 0xf) {\n                    fcn.0040aa44();\n                    fcn.0040abff(&var_50h);\n                    uVar9 = fcn.0040aaa6();\n                    fcn.0040aa82();\n                }\n                if (uVar9 < 0x10000) {\n                    arg_8h[1] = uVar9;\n                    fcn.004115f8();\n                    iVar6 = fcn.0040ab97();\n                    if (iVar6 != 0) {\n                        fcn.0044b575(*(arg_8h + 0xc), iVar6, uVar9);\n                    }\n                }\n            }\n            else if (uVar9 == 5) {\n                uVar9 = uVar3;\n                if (uVar9 == 0xf) {\n                    fcn.0040aa44();\n                    fcn.0040abff(&var_50h);\n                    uVar9 = fcn.0040aaa6();\n                    fcn.0040aa82();\n                }\n                if (uVar9 < 0x10000) {\n                    arg_8h[1] = uVar9;\n                    iVar6 = fcn.0040ab97();\n                    if (iVar6 != 0) {\n                        fcn.0041118a(iVar6, uVar9, 0);\n                    }\n                }\n            }\n        }\n    }\n    else if (uVar9 == 8) {\n        arg_8h[1] = uVar3 + 1;\n        fcn.0040ab97();\n    }\n    else if ((uVar9 == 10) || (uVar9 - 0xc < 2)) {\n        uVar4 = uVar3;\n        if (uVar3 == 0xf) {\n            fcn.0040aa44();\n            fcn.0040abff(&var_50h);\n            uVar4 = fcn.0040aaa6();\n            fcn.0040aa82();\n        }\n        arg_8h[1] = uVar4;\n        if (var_5h == 0xd) {\n            var_ch = fcn.0040ab97();\n            if ((var_ch != NULL) && (puVar1 = arg_8h + 1,  arg_8h = NULL,  *puVar1 != 0)) {\n                do {\n                    fcn.0040abdd();\n                    fcn.0040b79e();\n                    arg_8h = arg_8h + 1;\n                } while (arg_8h < puVar2[1] * 2);\n            }\n        }\n        else {\n            var_ch = fcn.0040ab97();\n            if ((var_ch != NULL) && (arg_8h = NULL,  puVar2[1] != 0)) {\n                do {\n                    fcn.0040abdd();\n                    fcn.0040b79e();\n                    arg_8h = arg_8h + 1;\n                } while (arg_8h < puVar2[1]);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 1416
    },
    "0040b1e6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040b1e6(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_158h;\n    uint var_13ch;\n    uint uStack316;\n    uint uStack312;\n    uint uStack308;\n    uchar uStack304;\n    uint32_t var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint8_t *var_118h;\n    uint var_114h;\n    uchar var_110h;\n    uchar var_10fh;\n    uchar var_10eh;\n    uchar var_10dh;\n    uchar var_10ch;\n    uchar var_10bh;\n    uchar var_10ah;\n    uchar var_109h;\n    uchar var_108h;\n    uchar var_107h;\n    uchar var_106h;\n    uchar var_105h;\n    uchar var_104h;\n    uchar var_103h;\n    uchar var_102h;\n    uchar var_101h;\n    uchar var_100h;\n    uchar var_ffh;\n    uchar var_feh;\n    uchar var_fdh;\n    uchar var_fch;\n    uchar var_fbh;\n    uchar var_fah;\n    uchar var_f9h;\n    uchar var_f8h;\n    uchar var_f7h;\n    uchar var_f6h;\n    uchar var_f5h;\n    uchar var_f4h;\n    uchar var_f3h;\n    uchar var_f2h;\n    uchar var_f1h;\n    uchar var_f0h;\n    uchar var_efh;\n    uchar var_eeh;\n    uchar var_edh;\n    uchar var_ech;\n    uchar var_ebh;\n    uchar var_eah;\n    uchar var_e9h;\n    uchar var_e8h;\n    uchar var_e7h;\n    uchar var_e6h;\n    uchar var_e5h;\n    uchar var_e4h;\n    uchar var_e3h;\n    uchar var_e2h;\n    uchar var_e1h;\n    uchar var_e0h;\n    uchar var_dfh;\n    uchar var_deh;\n    uchar var_ddh;\n    uchar var_dch;\n    uchar var_dbh;\n    uchar var_dah;\n    uchar var_d9h;\n    uchar var_d8h;\n    uchar var_d7h;\n    uchar var_d6h;\n    uchar var_d5h;\n    uchar var_d4h;\n    uchar var_d3h;\n    uchar var_d2h;\n    uchar var_d1h;\n    uchar var_d0h;\n    uchar var_cfh;\n    uchar var_ceh;\n    uchar var_cdh;\n    uchar var_cch;\n    uchar var_cbh;\n    uchar var_cah;\n    uchar var_c9h;\n    uchar var_c8h;\n    uchar var_c7h;\n    uchar var_c6h;\n    uchar var_c5h;\n    uchar var_c4h;\n    uchar var_c3h;\n    uchar var_c2h;\n    uchar var_c1h;\n    uchar var_c0h;\n    uchar var_bfh;\n    uchar var_beh;\n    uchar var_bdh;\n    uchar var_bch;\n    uchar var_bbh;\n    uchar var_bah;\n    uchar var_b9h;\n    uchar var_b8h;\n    uchar var_b7h;\n    uchar var_b6h;\n    uchar var_b5h;\n    uchar var_b4h;\n    uchar var_b3h;\n    uchar var_b2h;\n    uchar var_b1h;\n    uchar var_b0h;\n    uchar var_afh;\n    uchar var_aeh;\n    uchar var_adh;\n    uchar var_ach;\n    uchar var_abh;\n    uchar var_aah;\n    uchar var_a9h;\n    uchar var_a8h;\n    uchar var_a7h;\n    uchar var_a6h;\n    uchar var_a5h;\n    uchar var_a4h;\n    uchar var_a3h;\n    uchar var_a2h;\n    uchar var_a1h;\n    uchar var_a0h;\n    uchar var_9fh;\n    uchar var_9eh;\n    uchar var_9dh;\n    uchar var_9ch;\n    uchar var_9bh;\n    uchar var_9ah;\n    uchar var_99h;\n    uchar var_98h;\n    uchar var_97h;\n    uchar var_96h;\n    uchar var_95h;\n    uint var_94h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    uVar1 = fcn.0041105d(0x44356c);\n    iVar2 = fcn.0044b581(uVar1);\n    if (iVar2 == 0) {\n        uVar1 = fcn.0041105d();\n        fcn.00411069(uVar1);\n    }\n    uVar1 = fcn.0041105d(0x44357c);\n    iVar2 = fcn.0044b581(uVar1);\n    if (iVar2 == 0) {\n        uVar1 = fcn.0041105d();\n        fcn.00411069(uVar1);\n    }\n    uVar1 = fcn.0041105d(0x443588);\n    iVar2 = fcn.0044b581(uVar1);\n    if (iVar2 == 0) {\n        uVar1 = fcn.0041105d();\n        fcn.00411069(uVar1);\n    }\n    uVar1 = fcn.0041105d(0x443598);\n    var_14h = fcn.0044b581(uVar1);\n    if (var_14h != 0) {\n        return;\n    }\n    var_114h._0_1_ = 0x1d;\n    var_114h._1_1_ = 0xac;\n    var_114h._2_1_ = 0xa8;\n    var_114h._3_1_ = 0xf8;\n    var_110h = 0xd3;\n    var_10fh = 0xb8;\n    var_10eh = 0x48;\n    var_10dh = 0x3e;\n    var_10ch = 0x48;\n    var_10bh = 0x7d;\n    var_10ah = 0x3e;\n    var_109h = 10;\n    var_108h = 0x62;\n    var_107h = 7;\n    var_106h = 0xdd;\n    var_105h = 0x26;\n    var_104h = 0xe6;\n    var_103h = 0x67;\n    var_102h = 0x81;\n    var_101h = 3;\n    var_100h = 0xe7;\n    var_ffh = 0xb2;\n    var_feh = 0x13;\n    var_fdh = 0xa5;\n    var_fch = 0xb0;\n    var_fbh = 0x79;\n    var_fah = 0xee;\n    var_f9h = 0x4f;\n    var_f8h = 0xf;\n    var_f7h = 0x41;\n    var_f6h = 0x15;\n    var_f5h = 0xed;\n    var_f4h = 0x7b;\n    var_f3h = 0x14;\n    var_f2h = 0x8c;\n    var_f1h = 0xe5;\n    var_f0h = 0x4b;\n    var_efh = 0x46;\n    var_eeh = 0xd;\n    var_edh = 0xc1;\n    var_ech = 0x8e;\n    var_ebh = 0xfe;\n    var_eah = 0xd6;\n    var_e9h = 0xe7;\n    var_e8h = 0x27;\n    var_e7h = 0x75;\n    var_e6h = 6;\n    var_e5h = 0x8b;\n    var_e4h = 0x49;\n    var_e3h = 0;\n    var_e2h = 0xdc;\n    var_e1h = 0xf;\n    var_e0h = 0x30;\n    var_dfh = 0xa0;\n    var_deh = 0x9e;\n    var_ddh = 0xfd;\n    var_dch = 9;\n    var_dbh = 0x85;\n    var_dah = 0xf1;\n    var_d9h = 200;\n    var_d8h = 0xaa;\n    var_d7h = 0x75;\n    var_d6h = 0xc1;\n    var_d5h = 8;\n    var_d4h = 5;\n    var_d3h = 0x79;\n    var_d2h = 1;\n    var_d1h = 0xe2;\n    var_d0h = 0x97;\n    var_cfh = 0xd8;\n    var_ceh = 0xaf;\n    var_cdh = 0x80;\n    var_cch = 0x38;\n    var_cbh = 0x60;\n    var_cah = 0xb;\n    var_c9h = 0x71;\n    var_c8h = 0xe;\n    var_c7h = 0x68;\n    var_c6h = 0x53;\n    var_c5h = 0x77;\n    var_c4h = 0x2f;\n    var_c3h = 0xf;\n    var_c2h = 0x61;\n    var_c1h = 0xf6;\n    var_c0h = 0x1d;\n    var_bfh = 0x8e;\n    var_beh = 0x8f;\n    var_bdh = 0x5c;\n    var_bch = 0xb2;\n    var_bbh = 0x3d;\n    var_bah = 0x21;\n    var_b9h = 0x74;\n    var_b8h = 0x40;\n    var_b7h = 0x4b;\n    var_b6h = 0xb5;\n    var_b5h = 6;\n    var_b4h = 0x6e;\n    var_b3h = 0xab;\n    var_b2h = 0x7a;\n    var_b1h = 0xbd;\n    var_b0h = 0x8b;\n    var_afh = 0xa9;\n    var_aeh = 0x7e;\n    var_adh = 0x32;\n    var_ach = 0x8f;\n    var_abh = 0x6e;\n    var_aah = 6;\n    var_a9h = 0x24;\n    var_a8h = 0xd9;\n    var_a7h = 0x29;\n    var_a6h = 0xa4;\n    var_a5h = 0xa5;\n    var_a4h = 0xbe;\n    var_a3h = 0x26;\n    var_a2h = 0x23;\n    var_a1h = 0xfd;\n    var_a0h = 0xee;\n    var_9fh = 0xf1;\n    var_9eh = 0x4c;\n    var_9dh = 0xf;\n    var_9ch = 0x74;\n    var_9bh = 0x5e;\n    var_9ah = 0x58;\n    var_99h = 0xfb;\n    var_98h = 0x91;\n    var_97h = 0x74;\n    var_96h = 0xef;\n    var_95h = 0x91;\n    var_10h = var_14h;\n    var_ch = var_14h;\n    fcn.0044b531(&var_94h, 0, 0x80);\n    var_13ch = *0x4435a4;\n    uStack316 = *0x4435a8;\n    uStack312 = *0x4435ac;\n    uStack308 = *0x4435b0;\n    uStack304 = *0x4435b4;\n    puVar3 = 0x4435b8;\n    puVar4 = &var_158h;\n    for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    fcn.0044b575(&var_94h, &var_13ch, 0x11);\n    var_4h = &var_114h;\n    var_124h = *(arg_ch + 0x18);\n    var_128h = *(arg_ch + 2);\n    var_8h = 0x90;\n    iVar2 = fcn.0040c860(&var_128h, &var_8h, 0, &var_11ch);\n    if (iVar2 == 0) {\n        fcn.0044b575(&var_94h, &var_158h, 0x1c);\n        var_4h = &var_114h;\n        var_8h = 0x9b;\n        iVar2 = fcn.0040c860(&var_128h, &var_8h, 0, &var_11ch);\n        if (iVar2 == 0) goto code_r0x0040b731;\n    }\n    if (var_118h != NULL) {\n        fcn.0041118a(var_118h + 4, *var_118h, 0);\n        (**0x4430d8)(var_118h);\n    }\ncode_r0x0040b731:\n    if (var_14h != 0) {\n        (**0x443100)(var_14h);\n    }\n    return;\n}\n",
        "token_count": 3165
    },
    "0040b853": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x0040b908)\n// WARNING: Removing unreachable block (ram,0x0040b930)\n// WARNING: Removing unreachable block (ram,0x0040ba85)\n// WARNING: Removing unreachable block (ram,0x0040ba8f)\n// WARNING: Removing unreachable block (ram,0x0040ba91)\n// WARNING: Removing unreachable block (ram,0x0040bae5)\n// WARNING: Removing unreachable block (ram,0x0040bafe)\n// WARNING: Removing unreachable block (ram,0x0040b93b)\n// WARNING: Removing unreachable block (ram,0x0040bb08)\n// WARNING: Removing unreachable block (ram,0x0040bb0d)\n// WARNING: Removing unreachable block (ram,0x0040bb20)\n\nvoid __cdecl fcn.0040b853(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_1f4ch;\n    uint var_174ch;\n    uint var_f4ch;\n    uint var_d4ch;\n    uint var_b4ch;\n    uint var_94ch;\n    uint var_74ch;\n    uint var_743h;\n    uint var_342h;\n    uint var_133h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    fcn.0044ba9d();\n    fcn.0044b531();\n    iVar1 = (*_fcn.004430f4)();\n    if (iVar1 == -1) {\n        fcn.004104d3(0x4435d4);\n        (**0x4430f0)();\n    }\n    else {\n        (**0x4430e4)();\n    }\n    fcn.0044b531();\n    fcn.00410dcd();\n    fcn.0044a690();\n    return;\n}\n",
        "token_count": 513
    },
    "0040bba6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040bc72)\n// WARNING: Removing unreachable block (ram,0x0040bc76)\n// WARNING: Removing unreachable block (ram,0x0040bc84)\n// WARNING: Removing unreachable block (ram,0x0040bc7b)\n// WARNING: Removing unreachable block (ram,0x0040bc86)\n// WARNING: Removing unreachable block (ram,0x0040bc8b)\n// WARNING: Removing unreachable block (ram,0x0040bd98)\n// WARNING: Removing unreachable block (ram,0x0040bdaa)\n// WARNING: Removing unreachable block (ram,0x0040bc98)\n// WARNING: Removing unreachable block (ram,0x0040bcb7)\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040bba6(int32_t arg_8h)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    float10 fVar7;\n    float10 fVar8;\n    ulong uVar9;\n    uint uVar10;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    \n    uVar9 = CONCAT44(arg_8h, 0x40bbb7);\n    iVar3 = fcn.0044b58d();\n    _var_2ch = 0.0;\n    iVar6 = 0;\n    var_10h = 0;\n    var_14h = 0;\n    var_18h = 0;\n    var_1ch = 0;\n    var_ch = 0;\n    var_20h = 0;\n    iVar5 = 0;\n    if (0 < iVar3) {\n        do {\n            puVar1 = arg_8h + iVar6 * 2;\n            uVar2 = *puVar1;\n            uVar4 = uVar2;\n            if (uVar2 - 0x41 < 0x1a) {\n                var_10h = var_10h + 1;\n            }\n            if (uVar2 - 0x61 < 0x1a) {\n                var_14h = var_14h + 1;\n            }\n            if (uVar2 - 0x30 < 10) {\n                var_18h = var_18h + 1;\n            }\n            if (uVar2 - 0x20 < 0x10) {\n                var_1ch = var_1ch + 1;\n            }\n            if (uVar2 - 0x3a < 7) {\n                var_ch = var_ch + 1;\n            }\n            if (uVar2 - 0x5b < 6) {\n                var_ch = var_ch + 1;\n            }\n            if (uVar2 < 0x7b) {\ncode_r0x0040bc51:\n                var_20h = iVar5;\n                if (0x7e < uVar2) goto code_r0x0040bc57;\n            }\n            else {\n                if (uVar2 < 0x7f) {\n                    var_ch = var_ch + 1;\n                    goto code_r0x0040bc51;\n                }\ncode_r0x0040bc57:\n                var_20h = iVar5 + 1;\n            }\n            if (iVar6 == 0) {\n                uVar9 = CONCAT44(uVar4, 0x40bc67);\n                fcn.0040c788();\n                goto code_r0x0040bd0f;\n            }\n            uVar10 = uVar9 >> 0x20;\n            fcn.0040c788();\n            uVar9 = CONCAT44(uVar10, *puVar1 - puVar1[-1]);\n            iVar5 = fcn.0044b59f(*puVar1 - puVar1[-1], uVar10, uVar4);\n            if (iVar5 == 1) {\n                _var_2ch = _var_2ch + *0x44ccf0;\n            }\n            else if (iVar5 - 2U < 4) {\n                _var_2ch = _var_2ch + *0x44cce0;\n            }\n            else if (iVar5 < 6) {\n                if (10 < iVar5) {\ncode_r0x0040bd0f:\n                    _var_2ch = _var_2ch + *0x44ccd0;\n                }\n            }\n            else {\n                if (10 < iVar5) goto code_r0x0040bd0f;\n                _var_2ch = _var_2ch + *0x44ccd8;\n            }\n            iVar6 = iVar6 + 1;\n            iVar5 = var_20h;\n        } while (iVar6 < iVar3);\n    }\n    var_8h = 0;\n    if (var_10h != 0) {\n        var_8h = 0x1a;\n    }\n    if (var_14h != 0) {\n        var_8h = var_8h + 0x1a;\n    }\n    if (var_18h != 0) {\n        var_8h = var_8h + 10;\n    }\n    if (var_1ch != 0) {\n        var_8h = var_8h + 0x10;\n    }\n    if (var_ch != 0) {\n        var_8h = var_8h + 0x11;\n    }\n    if (var_20h != 0) {\n        var_8h = var_8h + 0x1e;\n    }\n    if (var_8h == 0) {\n        var_2ch = 0;\n    }\n    else {\n        fVar7 = fcn.0044b599(var_8h);\n        fVar8 = fcn.0044b599(*0x44ccc8);\n        var_2ch = ROUND((fVar7 / fVar8) * _var_2ch);\n    }\n    return var_2ch;\n}\n",
        "token_count": 1438
    },
    "0040c4ff": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c4ff(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint var_24h;\n    \n    if (arg_ch == 5) {\n        fcn.00410183(arg_8h, 0x449a38);\n    }\n    if (*0x45115c != 0) {\n        fcn.00410183(arg_8h, 0x443ad8);\n    }\n    puVar2 = 0x4498f4;\n    puVar3 = &var_24h;\n    for (iVar1 = 8; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = *puVar2;\n    fcn.00410183(arg_8h, &var_24h);\n    return;\n}\n",
        "token_count": 238
    },
    "0040c7d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0040c7d0(void)\n\n{\n    code *pcVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    \n    fcn.0040c84b();\n    iVar2 = (*_fcn.00443104)(0x443bb0);\n    *in_EAX = iVar2;\n    pcVar1 = _fcn.00443108;\n    if (iVar2 != 0) {\n        iVar2 = (*_fcn.00443108)(iVar2, 0x443bcc);\n        in_EAX[2] = iVar2;\n        iVar2 = (*pcVar1)(*in_EAX, 0x443bd8);\n        in_EAX[3] = iVar2;\n        iVar2 = (*pcVar1)(*in_EAX, 0x443be4);\n        in_EAX[4] = iVar2;\n        iVar2 = (*pcVar1)(*in_EAX, 0x443bf0);\n        in_EAX[5] = iVar2;\n        iVar2 = (*pcVar1)(*in_EAX, 0x443c00);\n        in_EAX[6] = iVar2;\n        if ((in_EAX[2] == 0) || (in_EAX[3] == 0)) {\n            fcn.0040c84b();\n        }\n        else {\n            in_EAX[1] = 1;\n        }\n    }\n    return in_EAX[1];\n}\n",
        "token_count": 320
    },
    "0040c8d1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040c8d1(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *unaff_ESI;\n    \n    if (*unaff_ESI == 0) {\n        iVar2 = (*_fcn.00443104)(0x443bb0);\n        pcVar1 = _fcn.00443108;\n        *unaff_ESI = iVar2;\n        iVar2 = (*pcVar1)(iVar2, 0x443c3c);\n        unaff_ESI[1] = iVar2;\n        iVar2 = (*pcVar1)(*unaff_ESI, 0x443c54);\n        unaff_ESI[2] = iVar2;\n        iVar2 = (*pcVar1)(*unaff_ESI, 0x443c68);\n        unaff_ESI[3] = iVar2;\n        iVar2 = (*pcVar1)(*unaff_ESI, 0x443c78);\n        unaff_ESI[4] = iVar2;\n        iVar2 = (*pcVar1)(*unaff_ESI, 0x443c8c);\n        unaff_ESI[5] = iVar2;\n        iVar2 = (*pcVar1)(*unaff_ESI, 0x443c9c);\n        unaff_ESI[6] = iVar2;\n    }\n    return;\n}\n",
        "token_count": 296
    },
    "0040cb94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040cb94(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    ushort uStackY16520;\n    ushort uStackY8324;\n    uint var_7ch;\n    uint var_78h;\n    uint var_6ch;\n    uchar *var_68h;\n    uint var_64h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_4h;\n    \n    fcn.0044ba9d();\n    var_68h = &stack0xffffdf7c;\n    var_64h = 0x2002;\n    iVar2 = fcn.0040cb3e();\n    iVar3 = fcn.0040cb3e();\n    pcVar1 = *0x44327c;\n    if ((iVar2 != 0) && (iVar3 != 0)) {\n        var_6ch = 0xffffffff;\n        var_78h = arg_ch;\n        var_7ch = 0x1f;\n        (**0x44327c)();\n        (*pcVar1)();\n        iVar2 = fcn.0040cb79();\n        iVar3 = 1;\n        if (1 < iVar2) {\n            do {\n                uStackY8324 = 0;\n                uStackY16520 = 0;\n                fcn.0040cf1d(unaff_EBX, arg_8h, &stack0xffffdf7c, 0x1000);\n                fcn.0040cf1d(unaff_EBX, arg_ch, &stack0xffffbf78, 0x1000);\n                fcn.0040ceb4(unaff_EBX, arg_ch, &stack0xffffdf7c);\n                var_64h = 0x40cca2;\n                fcn.0040ceb4(unaff_EBX, arg_8h, &stack0xffffbf78);\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < iVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 582
    },
    "0040cf92": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040cf92(uint32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_ECX;\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar4 = (*arg_8h >> 0x1d) + *arg_8h * 8;\n    var_4h = (arg_8h[1] >> 0x1d) + arg_8h[1] * 8;\n    if (arg_ch == 0) {\n        puVar1 = in_ECX + 0x70;\n        arg_ch = 4;\n        do {\n            uVar2 = puVar1[2] ^ uVar4;\n            uVar3 = (puVar1[3] ^ uVar4) * 0x10000000 + ((puVar1[3] ^ uVar4) >> 4);\n            var_4h = var_4h ^ *((uVar3 >> 0x12 & 0x3f) * 4 + 0x447cf0) ^ *((uVar3 >> 10 & 0x3f) * 4 + 0x447af0) ^\n                              *((uVar3 >> 2 & 0x3f) * 4 + 0x4478f0) ^ *((uVar2 >> 0x12 & 0x3f) * 4 + 0x447bf0) ^\n                              *((uVar2 >> 10 & 0x3f) * 4 + 0x4479f0) ^ *((uVar2 >> 2 & 0x3f) * 4 + 0x4477f0) ^\n                              *((uVar3 >> 0x1a) * 4 + 0x447ef0) ^ *((uVar2 >> 0x1a) * 4 + 0x447df0);\n            uVar2 = *puVar1 ^ var_4h;\n            uVar3 = (puVar1[1] ^ var_4h) * 0x10000000 + ((puVar1[1] ^ var_4h) >> 4);\n            uVar4 = uVar4 ^ *((uVar3 >> 0x12 & 0x3f) * 4 + 0x447cf0) ^ *((uVar3 >> 10 & 0x3f) * 4 + 0x447af0) ^\n                            *((uVar3 >> 2 & 0x3f) * 4 + 0x4478f0) ^ *((uVar2 >> 0x12 & 0x3f) * 4 + 0x447bf0) ^\n                            *((uVar2 >> 10 & 0x3f) * 4 + 0x4479f0) ^ *((uVar2 >> 2 & 0x3f) * 4 + 0x4477f0) ^\n                            *((uVar3 >> 0x1a) * 4 + 0x447ef0) ^ *((uVar2 >> 0x1a) * 4 + 0x447df0);\n            uVar2 = puVar1[-2] ^ uVar4;\n            uVar3 = (puVar1[-1] ^ uVar4) * 0x10000000 + ((puVar1[-1] ^ uVar4) >> 4);\n            var_4h = var_4h ^ *((uVar3 >> 0x12 & 0x3f) * 4 + 0x447cf0) ^ *((uVar3 >> 10 & 0x3f) * 4 + 0x447af0) ^\n                              *((uVar3 >> 2 & 0x3f) * 4 + 0x4478f0) ^ *((uVar2 >> 0x12 & 0x3f) * 4 + 0x447bf0) ^\n                              *((uVar2 >> 10 & 0x3f) * 4 + 0x4479f0) ^ *((uVar2 >> 2 & 0x3f) * 4 + 0x4477f0) ^\n                              *((uVar3 >> 0x1a) * 4 + 0x447ef0) ^ *((uVar2 >> 0x1a) * 4 + 0x447df0);\n            uVar2 = puVar1[-4] ^ var_4h;\n            uVar3 = (puVar1[-3] ^ var_4h) * 0x10000000 + ((puVar1[-3] ^ var_4h) >> 4);\n            puVar1 = puVar1 + -8;\n            uVar4 = uVar4 ^ *((uVar3 >> 0x12 & 0x3f) * 4 + 0x447cf0) ^ *((uVar3 >> 10 & 0x3f) * 4 + 0x447af0) ^\n                            *((uVar3 >> 2 & 0x3f) * 4 + 0x4478f0) ^ *((uVar2 >> 0x12 & 0x3f) * 4 + 0x447bf0) ^\n                            *((uVar2 >> 10 & 0x3f) * 4 + 0x4479f0) ^ *((uVar2 >> 2 & 0x3f) * 4 + 0x4477f0) ^\n                            *((uVar3 >> 0x1a) * 4 + 0x447ef0) ^ *((uVar2 >> 0x1a) * 4 + 0x447df0);\n            arg_ch = arg_ch + -1;\n        } while (arg_ch != 0);\n    }\n    else {\n        puVar1 = in_ECX + 8;\n        arg_ch = 4;\n        do {\n            uVar2 = puVar1[-2] ^ uVar4;\n            uVar3 = (puVar1[-1] ^ uVar4) * 0x10000000 + ((puVar1[-1] ^ uVar4) >> 4);\n            var_4h = var_4h ^ *((uVar3 >> 0x12 & 0x3f) * 4 + 0x447cf0) ^ *((uVar3 >> 10 & 0x3f) * 4 + 0x447af0) ^\n                              *((uVar3 >> 2 & 0x3f) * 4 + 0x4478f0) ^ *((uVar2 >> 0x12 & 0x3f) * 4 + 0x447bf0) ^\n                              *((uVar2 >> 10 & 0x3f) * 4 + 0x4479f0) ^ *((uVar2 >> 2 & 0x3f) * 4 + 0x4477f0) ^\n                              *((uVar3 >> 0x1a) * 4 + 0x447ef0) ^ *((uVar2 >> 0x1a) * 4 + 0x447df0);\n            uVar2 = *puVar1 ^ var_4h;\n            uVar3 = (puVar1[1] ^ var_4h) * 0x10000000 + ((puVar1[1] ^ var_4h) >> 4);\n            uVar4 = uVar4 ^ *((uVar3 >> 0x12 & 0x3f) * 4 + 0x447cf0) ^ *((uVar3 >> 10 & 0x3f) * 4 + 0x447af0) ^\n                            *((uVar3 >> 2 & 0x3f) * 4 + 0x4478f0) ^ *((uVar2 >> 0x12 & 0x3f) * 4 + 0x447bf0) ^\n                            *((uVar2 >> 10 & 0x3f) * 4 + 0x4479f0) ^ *((uVar2 >> 2 & 0x3f) * 4 + 0x4477f0) ^\n                            *((uVar3 >> 0x1a) * 4 + 0x447ef0) ^ *((uVar2 >> 0x1a) * 4 + 0x447df0);\n            uVar2 = puVar1[2] ^ uVar4;\n            uVar3 = (puVar1[3] ^ uVar4) * 0x10000000 + ((puVar1[3] ^ uVar4) >> 4);\n            var_4h = var_4h ^ *((uVar3 >> 0x12 & 0x3f) * 4 + 0x447cf0) ^ *((uVar3 >> 10 & 0x3f) * 4 + 0x447af0) ^\n                              *((uVar3 >> 2 & 0x3f) * 4 + 0x4478f0) ^ *((uVar2 >> 0x12 & 0x3f) * 4 + 0x447bf0) ^\n                              *((uVar2 >> 10 & 0x3f) * 4 + 0x4479f0) ^ *((uVar2 >> 2 & 0x3f) * 4 + 0x4477f0) ^\n                              *((uVar3 >> 0x1a) * 4 + 0x447ef0) ^ *((uVar2 >> 0x1a) * 4 + 0x447df0);\n            uVar2 = puVar1[4] ^ var_4h;\n            uVar3 = (puVar1[5] ^ var_4h) * 0x10000000 + ((puVar1[5] ^ var_4h) >> 4);\n            puVar1 = puVar1 + 8;\n            uVar4 = uVar4 ^ *((uVar3 >> 0x12 & 0x3f) * 4 + 0x447cf0) ^ *((uVar3 >> 10 & 0x3f) * 4 + 0x447af0) ^\n                            *((uVar3 >> 2 & 0x3f) * 4 + 0x4478f0) ^ *((uVar2 >> 0x12 & 0x3f) * 4 + 0x447bf0) ^\n                            *((uVar2 >> 10 & 0x3f) * 4 + 0x4479f0) ^ *((uVar2 >> 2 & 0x3f) * 4 + 0x4477f0) ^\n                            *((uVar3 >> 0x1a) * 4 + 0x447ef0) ^ *((uVar2 >> 0x1a) * 4 + 0x447df0);\n            arg_ch = arg_ch + -1;\n        } while (arg_ch != 0);\n    }\n    *arg_8h = var_4h * 0x20000000 + (var_4h >> 3);\n    arg_8h[1] = uVar4 * 0x20000000 + (uVar4 >> 3);\n    return;\n}\n",
        "token_count": 2564
    },
    "0040db60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040db60(void)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t arg_ch;\n    int32_t unaff_EDI;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = (*_fcn.00443268)(*(unaff_EDI + 0x10), 0x3e9);\n    iVar2 = *(*(unaff_EDI + 0x14) + 4);\n    arg_ch = 0;\n    if (0 < iVar2) {\n        do {\n            iVar3 = fcn.0040c9f0(var_4h, arg_ch, &var_8h);\n            if (iVar3 != 0) {\n                piVar1 = **(unaff_EDI + 0x14) + var_8h * 4;\n                piVar1[1] = arg_ch;\n                iVar3 = fcn.0040ce64(var_4h, arg_ch);\n                if (iVar3 == 0) {\n                    *piVar1 = 0;\n                }\n                else if (*piVar1 == 0) {\n                    *piVar1 = 100;\n                }\n            }\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < iVar2);\n    }\n    return;\n}\n",
        "token_count": 309
    },
    "0040e0c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0040e0c4(uint param_1)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    in_EAX[0x105] = 0;\n    fcn.0040e144();\n    iVar1 = fcn.00410151(param_1);\n    *in_EAX = iVar1;\n    if ((iVar1 == -1) || (iVar1 = fcn.00410ba0(iVar1, in_EAX + 1, 0x400),  iVar1 == 0)) {\n        iVar1 = (*_fcn.0044310c)();\n        in_EAX[0x105] = iVar1;\n    }\n    else {\n        if (*(in_EAX[0x106] + 4) == -0x76543211) {\n            piVar2 = in_EAX[0x106] + 0xec;\n            if (*piVar2 == 0) {\n                *piVar2 = 0x1000;\n            }\n            fcn.0040e627(in_EAX);\n            return 1;\n        }\n        in_EAX[0x105] = 0xfff1;\n    }\n    return 0;\n}\n",
        "token_count": 273
    },
    "0040e1a7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040e1a7(uint *arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (arg_8h[3] == 0) {\n        arg_8h[3] = 1;\n        iVar1 = fcn.0040e156();\n        if (iVar1 == 0) {\n            return 0;\n        }\n        arg_8h[1] = arg_10h == 0;\n    }\n    if (((*(in_EAX + 0x22) <= arg_8h[1]) && (*(in_EAX + 0x14) != 0)) && (iVar1 = fcn.0040e156(),  iVar1 != 0)) {\n        *arg_8h = *(in_EAX + 0x14);\n        arg_8h[1] = arg_10h == 0;\n    }\n    if (arg_8h[1] < *(in_EAX + 0x22)) {\n        var_4h = fcn.0040e239(in_EAX);\n        arg_8h[2] = arg_8h[1];\n        arg_8h[1] = arg_8h[1] + 1;\n    }\n    return var_4h;\n}\n",
        "token_count": 318
    },
    "0040e56f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040e56f(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *unaff_EBX;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t var_4h;\n    \n    if (arg_ch == NULL) {\n        uVar1 = 0;\n    }\n    else {\n        unaff_EBX[0x8c] = 0;\n        puVar3 = arg_ch;\n        puVar4 = unaff_EBX;\n        for (iVar2 = 0x88; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar4 = puVar4 + 1;\n        }\n        fcn.0040b785();\n        var_4h = 0;\n        if (0 < *(arg_8h + 0x410)) {\n            do {\n                iVar2 = fcn.0040f34b();\n                if ((*(iVar2 + 0x204) == 2) && (arg_ch[0x80] == *(iVar2 + 0x200))) {\n                    fcn.0040f360(iVar2);\n                }\n                if ((*(iVar2 + 0x204) == 4) && (arg_ch[0x80] == *(iVar2 + 0x200))) {\n                    unaff_EBX[0x8c] = *(iVar2 + 0x20c);\n                }\n                var_4h = var_4h + 1;\n            } while (var_4h < *(arg_8h + 0x410));\n        }\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 404
    },
    "0040e6f2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040e6f2(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.004115f8();\n    iVar3 = 0;\n    iVar1 = fcn.0040e156(0, arg_8h);\n    if (iVar1 != 0) {\n        if ((*0x24 & 4) == 0) {\n            fcn.0044b575(arg_ch, 0, *(*(in_EAX + 0x418) + 0xec));\n            uVar2 = arg_8h;\n            goto code_r0x0040e755;\n        }\n        arg_8h = 1;\n        if (1 < *0x22) {\n            do {\n                iVar3 = 0;\n                iVar1 = fcn.0040e239(0);\n                uVar2 = *0xfffffffc;\n                if (((iVar1 != 0) && (iVar3 = arg_ch,  iVar1 = fcn.0040e156(),  iVar1 != 0)) && (*(arg_ch + 0x22) != 0))\n                goto code_r0x0040e755;\n                arg_8h = arg_8h + 1;\n            } while (arg_8h < *0x22);\n        }\n    }\n    uVar2 = 0;\ncode_r0x0040e755:\n    fcn.00411611(iVar3);\n    return uVar2;\n}\n",
        "token_count": 406
    },
    "0040e853": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0040e853(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    \n    uVar1 = unaff_ESI[2] + unaff_EDI;\n    if (uVar1 < *unaff_ESI || uVar1 == *unaff_ESI) {\n        if (param_1 != 0) {\n            fcn.0044b575(param_1, unaff_ESI[1] + unaff_ESI[2]);\n        }\n        unaff_ESI[2] = unaff_ESI[2] + unaff_EDI;\n        uVar2 = 1;\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 185
    },
    "0040ed03": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040ed03(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    bool bVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint8_t *puVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    uint8_t *puVar8;\n    uint8_t uVar9;\n    int32_t iVar10;\n    uint *puVar11;\n    uint32_t uVar12;\n    uint *puVar13;\n    uint uVar14;\n    uint var_480h;\n    uint var_260h;\n    uint32_t var_158h;\n    uint var_154h;\n    uint32_t var_150h;\n    int32_t var_14ch;\n    uint32_t var_148h;\n    uint var_44h;\n    uint var_40h;\n    uint var_34h;\n    uint32_t var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uchar var_8h;\n    uint var_7h;\n    uint var_1h;\n    \n    var_34h = 0;\n    *(arg_8h + 0x54c) = 0;\n    var_20h._0_2_ = 0;\n    var_20h._2_2_ = 0;\n    var_30h = 0;\n    var_2ch = 0;\n    var_28h = 0;\n    var_24h._0_2_ = 0;\n    var_24h._2_2_ = 0;\n    iVar3 = fcn.0040e239(*(arg_8h + 4));\n    if (iVar3 != 0) {\n        uVar4 = CONCAT22(var_20h, var_24h._2_2_) + CONCAT22(var_24h._2_2_, var_24h);\n        puVar5 = (uVar4 & 0xffff) + var_2ch;\n        var_1h._0_1_ = *puVar5;\n        var_150h = uVar4 + 4 & 0xffff;\n        _var_8h = CONCAT11(puVar5[1], var_8h);\n        var_18h = *(puVar5 + 2) + var_24h._2_2_ + var_24h;\n        if (var_150h < var_30h) {\n            var_14ch = var_150h + var_2ch;\n            var_150h = var_30h - var_150h;\n            var_148h = 0;\n            var_44h = 0;\n            var_40h = 0;\n            var_34h = 1;\n            fcn.0040b785();\n            var_ch = 0;\n            if (0 < *(arg_8h + 0x240)) {\n                var_1ch = arg_8h + 0x234;\n                do {\n                    puVar6 = fcn.0040f34b();\n                    uVar14 = 0x108;\n                    var_480h._0_2_ = 0;\n                    fcn.0044b531(&var_260h, 0, 0x108);\n                    var_158h = 0;\n                    var_154h._0_1_ = 0;\n                    puVar11 = puVar6;\n                    puVar13 = &var_480h;\n                    for (iVar3 = 0x88; iVar3 != 0; iVar3 = iVar3 + -1) {\n                        *puVar13 = *puVar11;\n                        puVar11 = puVar11 + 1;\n                        puVar13 = puVar13 + 1;\n                    }\n                    uVar4 = puVar6[0x82];\n                    if (uVar4 < 0x80) {\n                        uVar12 = puVar6[0x84];\n                        if (((uVar12 != 0) && (uVar12 < 0x100)) && (uVar4 <= var_1h)) {\n                            var_158h = uVar12;\n                            fcn.0040e853(uVar14, &var_260h);\n                        }\n                    }\n                    else if (((uVar4 < 0x100) && (0x7f < var_7h)) && (uVar4 <= var_7h)) {\n                        if (uVar4 == 0x80) {\n                            var_14ch = (var_18h & 0xffff) + var_2ch;\n                            var_150h = var_30h - (var_18h & 0xffff);\n                            var_148h = 0;\n                            var_44h = 0;\n                            var_40h = 0;\n                            fcn.0040e884();\n                        }\n                        fcn.0040e916(&var_150h, &var_260h);\n                    }\n                    iVar3 = arg_ch[3];\n                    if (-1 < iVar3) {\n                        if (iVar3 == -1) {\n                            fcn.0044b5ed(*arg_ch);\n                        }\n                        else {\n                            fcn.00410482(0x330, arg_ch[2]);\n                        }\n                        if (arg_ch[3] < iVar3 + 1) {\n                            arg_ch[3] = iVar3 + 1;\n                        }\n                        puVar11 = &var_480h;\n                        puVar13 = iVar3 * 0x330 + *arg_ch;\n                        for (iVar10 = 0xcc; iVar10 != 0; iVar10 = iVar10 + -1) {\n                            *puVar13 = *puVar11;\n                            puVar11 = puVar11 + 1;\n                            puVar13 = puVar13 + 1;\n                        }\n                    }\n                    var_ch = var_ch + 1;\n                } while (var_ch < *(arg_8h + 0x240));\n            }\n            uVar12 = var_148h;\n            uVar4 = var_150h;\n            if (8 < *(*(*(arg_8h + 0x248) + 0x418) + 0xe8)) {\n                if (var_148h < var_150h) {\n                    uVar7 = var_150h - var_148h;\n                }\n                else {\n                    uVar7 = 0;\n                }\n                if ((3 < uVar7) &&\n                   ((*(var_148h + var_14ch) < 0x100 || (iVar3 = fcn.0040e098(*(var_148h + var_14ch)),  iVar3 == 0)))) {\n                    iVar3 = 0;\n                    do {\n                        if ((*(uVar12 + var_14ch) & 0xf0) == 0xf0) {\n                            uVar1 = *(uVar12 + var_14ch + 1);\n                            iVar10 = fcn.0040e098(uVar1);\n                            if ((iVar10 != 0) && (0xff < uVar1)) {\n                                fcn.0040e853(0);\n                                uVar4 = var_150h;\n                                uVar12 = var_148h;\n                                break;\n                            }\n                        }\n                        fcn.0040e853();\n                        iVar3 = iVar3 + 1;\n                        uVar4 = var_150h;\n                        uVar12 = var_148h;\n                    } while (iVar3 < 9);\n                }\n                if (uVar12 < uVar4) {\n                    var_ch = uVar4 - uVar12;\n                }\n                else {\n                    var_ch = 0;\n                }\n                iVar3 = uVar12 + var_14ch;\n                if (4 < var_ch) {\n                    var_150h = var_ch;\n                    var_148h = 0;\n                    var_44h = 0;\n                    var_40h = 0;\n                    var_14h = 0;\n                    var_18h = 0;\n                    var_1ch = 0;\n                    var_14ch = iVar3;\n                    iVar10 = fcn.0040e853(&var_8h);\n                    if (iVar10 != 0) {\n                        while (iVar10 = fcn.0040e853(),  iVar10 != 0) {\n                            bVar2 = false;\n                            if (((var_14h != 0) && ((var_14h & 0xffff) < var_148h)) || (_var_8h < 0x100)) break;\n                            var_1h._0_1_ = 0;\n                            if ((0x3fff < *(*(*(arg_8h + 0x248) + 0x418) + 0xec)) || ((var_10h & 0x4000) != 0)) {\n                                bVar2 = true;\n                            }\n                            var_10h = var_10h & 0x3fff;\n                            iVar10 = fcn.0040e098();\n                            if ((iVar10 == 0) || (var_ch <= (var_10h & 0xffff))) break;\n                            if (var_14h == 0) {\n                                var_14h = var_10h & 0xffff;\n                            }\n                            puVar5 = (var_10h & 0xffff) + iVar3;\n                            *(iVar10 + 0x220) = puVar5;\n                            uVar9 = var_1h;\n                            if (bVar2) {\n                                uVar9 = *puVar5;\n                                var_10h = var_10h + 1;\n                                *(iVar10 + 0x220) = (var_10h & 0xffff) + iVar3;\n                            }\n                            *(iVar10 + 0x32c) = uVar9;\n                            if (((var_18h != 0) && (var_1ch != 0)) && (var_18h < var_10h)) {\n                                *(var_1ch + 0x328) = (var_10h & 0xffff) - (var_18h & 0xffff);\n                            }\n                            var_18h = var_10h & 0xffff;\n                            var_1ch = iVar10;\n                            iVar10 = fcn.0040e853(&var_8h);\n                            if (iVar10 == 0) break;\n                        }\n                        if ((var_1ch != 0) && ((var_18h & 0xffff) < var_ch)) {\n                            *(var_1ch + 0x328) = var_ch - (var_18h & 0xffff);\n                        }\n                    }\n                }\n                var_ch = 0;\n                if (0 < arg_ch[3]) {\n                    do {\n                        iVar3 = fcn.0040f3b9();\n                        if (0xff < *(iVar3 + 0x208)) {\n                            if ((((*(iVar3 + 0x32c) & 4) != 0) && (3 < *(iVar3 + 0x328))) && (*(arg_8h + 0x244) != 0)) {\n                                fcn.0040eace(*(arg_8h + 0x244), **(iVar3 + 0x220), iVar3 + 0x220, iVar3 + 0x328);\n                            }\n                            if ((((*(iVar3 + 0x32c) & 2) != 0) && (1 < *(iVar3 + 0x328))) &&\n                               (**(iVar3 + 0x220) != '\\x18')) {\n                                var_18h = (*(iVar3 + 0x328) * 8 - 8) / 7;\n                                var_14h = 8;\n                                puVar8 = fcn.0040ea9c();\n                                puVar5 = puVar8;\n                                do {\n                                    uVar4 = var_14h + 7;\n                                    *puVar5 = *((var_14h >> 3) + *(iVar3 + 0x220)) >> (var_14h & 7) & 0x7f;\n                                    puVar5 = puVar5 + 1;\n                                    var_14h = uVar4;\n                                } while (uVar4 <= *(iVar3 + 0x328) * 8 - 7U);\n                                *(iVar3 + 0x220) = puVar8;\n                                *(iVar3 + 0x328) = var_18h;\n                            }\n                        }\n                        var_ch = var_ch + 1;\n                    } while (var_ch < arg_ch[3]);\n                }\n            }\n        }\n    }\n    return var_34h;\n}\n",
        "token_count": 2853
    },
    "0040f2a2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040f2a2(int32_t param_1)\n\n{\n    uint32_t arg_ch;\n    int32_t arg_8h;\n    int32_t arg_10h;\n    \n    arg_ch = *(param_1 + 0x328);\n    if ((arg_ch == 0) || ((*(param_1 + 0x20c) != 10 && (*(param_1 + 0x20c) != 0xc)))) {\n        return 0;\n    }\n    arg_10h = *(param_1 + 0x218);\n    if (*(param_1 + 0x208) < 0x100) {\n        arg_8h = param_1 + 0x220;\n        if (arg_10h == 0x4b0) goto code_r0x0040f333;\n    }\n    else {\n        if (arg_10h == 0x4b0) {\n            if ((*(param_1 + 0x32c) & 2) == 0) {\n                arg_8h = *(param_1 + 0x220);\ncode_r0x0040f333:\n                fcn.004111e3(arg_8h, arg_ch / 2);\n                return 1;\n            }\n            if ((1 < arg_ch) && (arg_8h = *(param_1 + 0x220),  *(arg_8h + 1) == '\\0')) goto code_r0x0040f333;\n            arg_10h = 0;\n        }\n        arg_8h = *(param_1 + 0x220);\n    }\n    fcn.0041118a(arg_8h, arg_ch, arg_10h);\n    return 1;\n}\n",
        "token_count": 386
    },
    "0040f499": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool fcn.0040f499(void)\n\n{\n    int32_t iVar1;\n    ushort *puVar2;\n    int16_t *unaff_EBX;\n    int16_t *arg_10h;\n    ushort var_e38h;\n    uint var_e36h;\n    int16_t var_638h;\n    uint var_636h;\n    int16_t var_428h;\n    uint var_426h;\n    int16_t var_228h;\n    uint var_226h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_638h = 0;\n    fcn.0044b531(&var_636h, 0, 0x208);\n    var_18h = 0;\n    var_14h = 0;\n    var_10h = 0;\n    var_ch = 0;\n    *unaff_EBX = 0;\n    iVar1 = fcn.0041ab74(0x80000002, 0x448108, &var_4h);\n    if (iVar1 == 0) {\n        var_428h = 0;\n        fcn.0044b531(&var_426h, 0, 0x1fe);\n        arg_10h = &var_428h;\n        var_8h = 0;\n        while (iVar1 = fcn.0041ac0b(var_4h, var_8h, arg_10h),  iVar1 == 0) {\n            arg_10h = 0x7;\n            iVar1 = fcn.0044b5bd(&var_428h, 0x44812c);\n            if (iVar1 == 0) {\n                var_228h = 0;\n                fcn.0044b531(&var_226h, 0, 0x208);\n                var_e38h = 0;\n                fcn.0044b531(&var_e36h, 0, 0x7fe);\n                fcn.0044b51f(&var_e38h, 0x3ff, 0x44813c, &var_428h);\n                fcn.0041abc9(var_4h, &var_e38h, 0x44814c);\n                arg_10h = 0x5c;\n                puVar2 = fcn.0044b5c3(&var_228h);\n                if (puVar2 != NULL) {\n                    *puVar2 = 0;\n                }\n                if (var_228h != 0) {\n                    arg_10h = &var_228h;\n                    iVar1 = fcn.0040f3ce(arg_10h);\n                    if ((iVar1 != 0) && ((iVar1 = (**0x443114)(&var_10h, &var_18h),  0 < iVar1 || (var_638h == 0)))) {\n                        fcn.0044b56f(&var_638h, &var_228h);\n                        var_18h = var_10h;\n                        var_14h = var_ch;\n                    }\n                }\n            }\n            var_8h = var_8h + 1;\n        }\n        (*_fcn.00443010)(var_4h);\n    }\n    fcn.0044b56f();\n    if (*unaff_EBX == 0) {\n        (**0x44311c)(0x448160);\n        iVar1 = fcn.0040f3ce(unaff_EBX);\n        if (iVar1 == 0) {\n            *unaff_EBX = 0;\n        }\n        if (*unaff_EBX == 0) {\n            fcn.00410599();\n            iVar1 = fcn.0040f3ce(unaff_EBX);\n            if (iVar1 == 0) {\n                *unaff_EBX = 0;\n            }\n            if (*unaff_EBX == 0) {\n                (**0x443118)(0x104);\n                iVar1 = fcn.0040f3ce(unaff_EBX);\n                if (iVar1 == 0) {\n                    *unaff_EBX = 0;\n                }\n            }\n        }\n    }\n    return *unaff_EBX != 0;\n}\n",
        "token_count": 960
    },
    "0040f6c5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0040f6c5(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t unaff_EBX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_1h;\n    \n    iVar1 = *arg_ch;\n    cVar2 = *(iVar1 + unaff_EBX);\n    iVar4 = iVar1;\n    if (cVar2 == '\\0') {\n        uVar3 = 0;\n    }\n    else {\n        while (((cVar2 != '\\r' && (cVar2 != '\\n')) && (cVar2 != '\\0'))) {\n            iVar4 = iVar4 + 1;\n            cVar2 = *(iVar4 + unaff_EBX);\n        }\n        iVar5 = iVar4 - iVar1;\n        if (0x3fe < iVar5) {\n            iVar5 = 0x3fe;\n        }\n        if (0 < iVar5) {\n            fcn.0044b575(arg_8h, iVar1 + unaff_EBX, iVar5);\n        }\n        *(iVar5 + arg_8h) = 0;\n        if ((cVar2 == '\\r') && (*(iVar4 + 1 + unaff_EBX) == '\\n')) {\n            iVar4 = iVar4 + 1;\n        }\n        *arg_ch = iVar4 + 1;\n        if (cVar2 == '\\0') {\n            *arg_ch = iVar4;\n        }\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 375
    },
    "0040f744": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f744(char *arg_8h, uchar *arg_ch)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uchar var_418h;\n    uint var_417h;\n    uint var_18h;\n    uchar *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    *arg_ch = 0;\n    if (*in_EAX != '\\0') {\n        if (*in_EAX == '~') {\n            iVar1 = fcn.0040a358(0x3ff);\n            arg_ch[iVar1] = 0;\n        }\n        else {\n            var_418h = 0;\n            fcn.0044b531(&var_417h, 0);\n            uVar2 = fcn.0040a358(0x400);\n            if (*(in_ECX + 0x10) == NULL) {\n                iVar1 = 0;\n            }\n            else {\n                iVar1 = (**(in_ECX + 0x10))();\n            }\n            if (iVar1 != 0) {\n                if ((*arg_8h != '\\0') && (*(in_ECX + 0x18) != NULL)) {\n                    (**(in_ECX + 0x18))(iVar1, arg_8h);\n                }\n                if (*(in_ECX + 0x1c) == NULL) {\n                    iVar3 = -1;\n                }\n                else {\n                    iVar3 = (**(in_ECX + 0x1c))(iVar1, 1, 0);\n                }\n                if (iVar3 == 0) {\n                    var_14h = &var_418h;\n                    var_8h = 0;\n                    var_4h = 0;\n                    var_10h = uVar2;\n                    if (*(in_ECX + 0x20) == NULL) {\n                        iVar3 = -1;\n                    }\n                    else {\n                        iVar3 = (**(in_ECX + 0x20))(&var_18h, &var_ch, 0);\n                    }\n                    if ((iVar3 == 0) && (var_4h < 0x3ff)) {\n                        fcn.0044b575(arg_ch, var_8h, var_4h);\n                        arg_ch[var_4h] = 0;\n                    }\n                }\n                if (*(in_ECX + 0x14) != NULL) {\n                    (**(in_ECX + 0x14))(iVar1);\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 592
    },
    "0041056a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041056a(int16_t param_1, int16_t param_2)\n\n{\n    int16_t *in_EAX;\n    \n    for (; *in_EAX != 0; in_EAX = in_EAX + 1) {\n        if (*in_EAX == param_1) {\n            *in_EAX = param_2;\n        }\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "0041062d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041062d(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    if (arg_8h != 0) {\n        (*_fcn.0044323c)(arg_ch, arg_10h, arg_14h);\n        return;\n    }\n    (*_fcn.00443240)(arg_ch, arg_10h, arg_14h, arg_18h);\n    return;\n}\n",
        "token_count": 113
    },
    "00410681": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00410681(void)\n\n{\n    if (*0x450dac == 0) {\n        *0x450da8 = 0x114;\n        (*_fcn.0044312c)(0x450da8);\n    }\n    return 0x450da8;\n}\n",
        "token_count": 64
    },
    "00410730": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00410730(uint param_1)\n\n{\n    if (*0x451698 == 0) {\n        *0x4518a4 = (**0x443140)(0x451698, 0x104);\n    }\n    fcn.0044b56f(param_1, 0x451698);\n    return *0x4518a4;\n}\n",
        "token_count": 83
    },
    "00410a29": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00410a29(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    ushort *unaff_EDI;\n    uint var_200h;\n    \n    var_200h._0_2_ = 0;\n    fcn.0044b531(&var_200h + 2, 0, 0x1fc);\n    *unaff_EDI = 0;\n    iVar1 = 0;\n    do {\n        fcn.0044b51f(&var_200h, 0xff, 0x44349c, *(iVar1 + arg_8h));\n        if (0 < iVar1) {\n            fcn.0044b519();\n        }\n        if ((0 < arg_ch) && (iVar1 % arg_ch == 0)) {\n            fcn.0044b519();\n        }\n        fcn.0044b519();\n        iVar1 = iVar1 + 1;\n    } while (iVar1 < 0x80);\n    return;\n}\n",
        "token_count": 240
    },
    "00410fba": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00410fba(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EDI;\n    \n    iVar3 = *(unaff_EDI + 0x1c);\n    do {\n        iVar3 = iVar3 + -1;\n        if (iVar3 < 0) {\n            return -1;\n        }\n        uVar1 = fcn.00410ff5();\n        if (param_2 == 0) {\n            iVar2 = fcn.0044b5a5(param_1, uVar1);\n        }\n        else {\n            iVar2 = fcn.0044b581();\n        }\n    } while (iVar2 != 0);\n    return iVar3;\n}\n",
        "token_count": 180
    },
    "00411069": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00411069(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    int32_t *unaff_EDI;\n    \n    if (param_1 != 0) {\n        if (in_EAX == -1) {\n            in_EAX = fcn.0044b58d(param_1);\n        }\n        fcn.0041100e();\n        if (0 < in_EAX) {\n            fcn.0044b575(*unaff_EDI, param_1, in_EAX * 2);\n        }\n        *(*unaff_EDI + in_EAX * 2) = 0;\n        unaff_EDI[2] = in_EAX;\n    }\n    return;\n}\n",
        "token_count": 159
    },
    "004110b1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.004110b1(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX[3] != 0) {\n        return in_EAX[2];\n    }\n    if (*in_EAX != 0) {\n        iVar1 = fcn.0044b58d(*in_EAX);\n        return iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 96
    },
    "0041144e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.0041144e(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    if (*in_EAX == -1) {\n        iVar1 = (**0x443138)(in_EAX + 1, in_EAX + 0xa3);\n        uVar2 = iVar1 != -1;\n        *in_EAX = iVar1;\n    }\n    else {\n        uVar2 = (**0x443178)(*in_EAX, in_EAX + 0xa3);\n        if (uVar2 != 0) goto code_r0x0041149c;\n        fcn.004114e7();\n    }\n    if (uVar2 == 0) {\n        return 0;\n    }\ncode_r0x0041149c:\n    iVar1 = fcn.0044b58d(in_EAX + 0x1d9);\n    iVar3 = fcn.0044b58d(in_EAX + 0xae);\n    if (iVar3 + 1 + iVar1 < 0x143) {\n        fcn.004106b6(in_EAX + 0x1d9, in_EAX + 0xae);\n    }\n    else {\n        *(in_EAX + 0x137) = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 307
    },
    "004114fb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.004114fb(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    int32_t **unaff_ESI;\n    \n    piVar1 = unaff_ESI[1];\n    iVar3 = 0;\n    if (0 < piVar1) {\n        piVar5 = *unaff_ESI;\n        do {\n            if (*piVar5 == 0) {\n                (*unaff_ESI)[iVar3 * 2] = param_1;\n                (*unaff_ESI)[iVar3 * 2 + 1] = param_2;\n                return 1;\n            }\n            iVar3 = iVar3 + 1;\n            piVar5 = piVar5 + 2;\n        } while (iVar3 < piVar1);\n    }\n    piVar5 = *unaff_ESI;\n    unaff_ESI[1] = unaff_ESI[2] + piVar1;\n    iVar2 = ZEXT48(unaff_ESI[2] + piVar1) * 8;\n    piVar4 = fcn.0044b5b1(-(iVar2 >> 0x20 != 0) | iVar2);\n    *unaff_ESI = piVar4;\n    fcn.0044b531(piVar4, 0, unaff_ESI[1] << 3);\n    fcn.0044b575(*unaff_ESI, piVar5, piVar1 * 8);\n    if (piVar5 != NULL) {\n        fcn.0044b5b7(piVar5);\n    }\n    (*unaff_ESI)[piVar1 * 2] = param_1;\n    (*unaff_ESI)[piVar1 * 2 + 1] = param_2;\n    return 1;\n}\n",
        "token_count": 430
    },
    "00411daa": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411daa(uint *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_5bch;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_5ch;\n    uint var_54h;\n    uint var_4ch;\n    int16_t *var_44h;\n    uint var_40h;\n    int16_t *var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    fcn.0040e7d1();\n    iVar1 = fcn.0040ea04(arg_10h, arg_ch);\n    if (iVar1 != 0) {\n        var_ch = 0x20;\n        var_14h = 0;\n        var_8h = 0;\n        var_10h = 0;\n        var_2ch = 0;\n        var_38h = NULL;\n        var_34h = 0;\n        var_28h = 0x100;\n        var_30h = 0;\n        do {\n            iVar1 = fcn.0040ed03(&var_5bch, &var_14h);\n            if (iVar1 != 0) {\n                iVar1 = fcn.0041180e(0x448474);\n                var_1ch = fcn.0041180e(0x44848c);\n                iVar2 = fcn.0041180e(0x4484a8);\n                var_20h = fcn.0041180e(0x4484c0);\n                var_24h = fcn.0041180e(0x4484dc);\n                iVar3 = fcn.0041180e(0x4484f8);\n                var_18h = fcn.0041180e(0x448500);\n                fcn.0044b531(&var_68h, 0, 0x2c);\n                fcn.00411069();\n                if (iVar3 != 0) {\n                    fcn.0040f2a2();\n                    var_44h = 0x4434fc;\n                    if (var_38h != NULL) {\n                        var_44h = var_38h;\n                    }\n                    iVar3 = fcn.0044b57b(var_44h, 0x40);\n                    if (iVar3 != 0) {\n                        var_44h = iVar3 + 2;\n                    }\n                }\n                if (iVar1 != 0) {\n                    var_40h = *(iVar1 + 0x220);\n                }\n                if (iVar2 != 0) {\n                    fcn.0044b575(&var_4ch, iVar2 + 0x220, 8);\n                }\n                if (var_20h != 0) {\n                    fcn.0044b575(&var_54h, var_20h + 0x220, 8);\n                }\n                if (var_1ch != 0) {\n                    fcn.0044b575(&var_64h, var_1ch + 0x220, 8);\n                }\n                if (var_24h != 0) {\n                    fcn.0044b575(&var_5ch, var_24h + 0x220, 8);\n                }\n                if (var_18h != 0) {\n                    var_6ch = *(var_18h + 0x220);\n                    var_68h = *(var_18h + 0x224);\n                }\n                if ((var_44h != NULL) && (*var_44h != 0)) {\n                    (***arg_8h)(&var_6ch);\n                }\n            }\n            iVar1 = fcn.0040e9c7();\n        } while (iVar1 != 0);\n        fcn.00411044();\n        if (var_14h != 0) {\n            fcn.0044b5ed(var_14h);\n        }\n    }\n    fcn.0040e817();\n    return;\n}\n",
        "token_count": 1000
    },
    "00412f60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00412f60(void)\n\n{\n    if (*0x451664 == 0) {\n        *0x451664 = 0x8000;\n        *0x451668 = 0x100;\n        *0x45166c = 0x1000;\n        *0x45164c = fcn.0044b5b1(0x10000);\n        *0x451654 = fcn.0044b5b1(-(*0x451668 * 4 >> 0x20 != 0) | *0x451668 * 4);\n        *0x451658 = fcn.0044b5b1(-(*0x451668 * 4 >> 0x20 != 0) | *0x451668 * 4);\n        *0x451650 = fcn.0044b5b1(-(*0x45166c * 2 >> 0x20 != 0) | *0x45166c * 2);\n    }\n    return;\n}\n",
        "token_count": 226
    },
    "00413002": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00413002(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t unaff_EBX;\n    bool bVar4;\n    \n    if (*0x451664 == 0) {\n        fcn.00412f60();\n    }\n    iVar2 = 0;\n    if (0 < *0x45165c) {\n        do {\n            if (unaff_EBX == *(*0x451654 + iVar2 * 4)) {\n                iVar2 = *0x45164c + *(*0x451658 + iVar2 * 4) * 2;\n                goto code_r0x00413030;\n            }\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < *0x45165c);\n    }\n    iVar2 = 0;\ncode_r0x00413030:\n    if (iVar2 != 0) {\n        return iVar2;\n    }\n    if ((unaff_EBX & 0x10000) == 0) {\n        if (*0x450ec8 == 0) {\n            uVar3 = fcn.00413168();\n        }\n        else {\n            fcn.0044b56f(0x4510d8, 0x448848);\n            iVar2 = fcn.004134f4(unaff_EBX, *0x451650);\n            if (iVar2 != 0) {\n                iVar2 = fcn.0044b58d(*0x451650);\n                bVar4 = iVar2 == 0;\n                if (!bVar4) goto code_r0x004130e4;\n            }\n            uVar3 = (*_fcn.00443144)(0);\n        }\n    }\n    else {\n        uVar3 = (*_fcn.00443144)(0);\n    }\n    iVar2 = (**0x44331c)(uVar3);\n    bVar4 = iVar2 == 0;\ncode_r0x004130e4:\n    if (((!bVar4 && -1 < iVar2) && (*0x451660 + 2 + iVar2 < *0x451664)) && (*0x45165c < *0x451668)) {\n        iVar1 = *0x45164c + *0x451660 * 2;\n        fcn.0044b575(iVar1, *0x451650, iVar2 * 2 + 2);\n        *(*0x451658 + *0x45165c * 4) = *0x451660;\n        *(*0x451654 + *0x45165c * 4) = unaff_EBX;\n        *0x45165c = *0x45165c + 1;\n        *0x451660 = *0x451660 + 1 + iVar2;\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n    }\n    return 0x4434fc;\n}\n",
        "token_count": 647
    },
    "00413381": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413381(uint arg_8h, uint32_t arg_ch)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = *0x443314;\n    if (*0x45115c != 0) {\n        if ((arg_ch & 2) != 0) {\n            (**0x443314)(arg_8h, 0x40a302, 2);\n        }\n        if ((arg_ch & 1) != 0) {\n            (*pcVar1)(arg_8h, 0x40a302, 1);\n        }\n        fcn.00410a04(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "00413421": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413421(uint arg_8h)\n\n{\n    int32_t iVar1;\n    ushort uStackY8200;\n    uint uStackY36;\n    \n    fcn.0044ba9d();\n    if (*0x450ec8 != 0) {\n        uStackY8200 = 0;\n        fcn.0044b531();\n        fcn.004134a4();\n        uStackY36 = 0x41347a;\n        iVar1 = fcn.00413550(0x448814, &stack0xffffdff8);\n        if (iVar1 != 0) {\n            (*_fcn.00443230)();\n        }\n        (**0x443314)();\n    }\n    return;\n}\n",
        "token_count": 161
    },
    "00413550": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00413550(uint arg_8h, uint arg_ch)\n\n{\n    int16_t iStack8200;\n    uchar auStack8198 [8158];\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0x41355d;\n    fcn.0044ba9d();\n    iStack8200 = 0;\n    uStack8 = 0x2000;\n    puStack16 = &stack0xffffdffa;\n    uStack12 = 0;\n    uStack20 = 0x413578;\n    fcn.0044b531();\n    uStack8 = 0x450ec8;\n    uStack12 = 0x1000;\n    puStack16 = &stack0xffffdff8;\n    uStack20 = 0x4434fc;\n    uStack24 = arg_8h;\n    uStack28 = 0x4510d8;\n    puStack32 = 0x41359f;\n    (*_fcn.004431ac)();\n    if (iStack8200 != 0) {\n        puStack32 = &stack0xffffdff8;\n        uStack36 = arg_ch;\n        uStack40 = 0x4135b8;\n        fcn.0044b56f();\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 338
    },
    "004135c3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004135c3(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    int16_t iStack8200;\n    uchar auStack8198 [8142];\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint uStack20;\n    uint uStack16;\n    \n    fcn.0044ba9d();\n    iStack8200 = 0;\n    uStack16 = 0x2000;\n    puStack24 = &stack0xffffdffa;\n    uStack20 = 0;\n    uStack28 = 0x4135ed;\n    fcn.0044b531();\n    uStack16 = 0x450ec8;\n    uStack20 = 0x1000;\n    puStack24 = &stack0xffffdff8;\n    uStack28 = 0x4434fc;\n    uStack32 = arg_8h;\n    uStack36 = 0x4510d8;\n    uStack40 = 0x413616;\n    (*_fcn.004431ac)();\n    if ((iStack8200 == 0) || (arg_10h != 0)) {\n        uStack40 = 0x450ec8;\n        uStack44 = arg_ch;\n        uStack48 = arg_8h;\n        uStack52 = 0x4510d8;\n        uStack56 = 0x413638;\n        uVar1 = (*_fcn.004431a0)();\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 396
    },
    "00413bfa": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00413bfa(int32_t param_1)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    int16_t *piVar3;\n    int32_t arg_10h;\n    int16_t *piVar4;\n    int32_t iVar5;\n    int16_t **unaff_ESI;\n    int32_t iVar6;\n    \n    if (param_1 != 0) {\n        piVar4 = unaff_ESI[1];\n        iVar6 = 0;\n        iVar5 = 0;\n        if (0 < piVar4) {\n            piVar3 = *unaff_ESI + 1;\n            do {\n                if ((*piVar3 == 0) && (iVar6 = iVar6 + 1,  1 < iVar6)) {\n                    return;\n                }\n                iVar5 = iVar5 + 1;\n                piVar3 = piVar3 + 2;\n            } while (iVar5 < piVar4);\n        }\n        iVar5 = 0;\n        if (0 < piVar4) {\n            do {\n                iVar6 = 0;\n                if (0 < piVar4) {\n                    piVar3 = *unaff_ESI;\n                    do {\n                        if (iVar5 == piVar3[1]) {\n                            iVar1 = *piVar3;\n                            if ((iVar1 < 0) || (1999 < iVar1)) {\n                                iVar2 = piVar3[1];\n                                arg_10h = 0;\n                            }\n                            else {\n                                iVar2 = piVar3[1];\n                                arg_10h = iVar1;\n                            }\n                            fcn.0040ca6a(param_1, iVar6, arg_10h, iVar2);\n                            break;\n                        }\n                        iVar6 = iVar6 + 1;\n                        piVar3 = piVar3 + 2;\n                    } while (iVar6 < piVar4);\n                }\n                piVar4 = unaff_ESI[1];\n                iVar5 = iVar5 + 1;\n            } while (iVar5 < piVar4);\n        }\n    }\n    return;\n}\n",
        "token_count": 457
    },
    "00413efb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00413efb(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *unaff_EBX;\n    int32_t unaff_EDI;\n    uint var_4h;\n    \n    iVar1 = unaff_EBX[1];\n    if (iVar1 != 0) {\n        fcn.00413c8f(*(*(unaff_EDI + 0x2b4) + 8));\n    }\n    iVar2 = (**(*unaff_EBX + 0xc))(0x448d2c, **(unaff_EDI + 0x2b4), (*(unaff_EDI + 0x2b4))[1] << 2);\n    (**(*unaff_EBX + 8))(0x448d20, unaff_EDI + 0x2c0, *(unaff_EDI + 0x20));\n    if ((iVar1 == 0) && (iVar2 != 0)) {\n        fcn.00413bfa(*(*(unaff_EDI + 0x2b4) + 8));\n    }\n    return;\n}\n",
        "token_count": 248
    },
    "0041435a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041435a(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t in_EAX;\n    uint uVar2;\n    uint arg_8h_00;\n    int32_t unaff_ESI;\n    int32_t iStack16;\n    \n    if (in_EAX == 0xffff) {\n        in_EAX = *(unaff_ESI + 0x2c0);\n    }\n    if ((arg_8h == 0) && ((*(unaff_ESI + 0x2c0) & 0xfff) == in_EAX)) {\n        in_EAX = *(unaff_ESI + 0x2c0) ^ 0x1000;\n    }\n    *(unaff_ESI + 0x2c0) = in_EAX;\n    if (*(unaff_ESI + 0x298) != 0) {\n        iVar1 = *(unaff_ESI + 0x2c4);\n        uVar2 = fcn.0040cb65(*(unaff_ESI + 0x294));\n        iStack16 = 0;\n        if (0 < iVar1) {\n            do {\n                fcn.0040cd73(uVar2, iStack16, 4, 0x4000, 0);\n                iStack16 = iStack16 + 1;\n            } while (iStack16 < iVar1);\n        }\n        if ((in_EAX & 0x1000) == 0) {\n            uVar2 = *(unaff_ESI + 0x40);\n        }\n        else {\n            uVar2 = *(unaff_ESI + 0x44);\n        }\n        arg_8h_00 = fcn.0040cb65(*(unaff_ESI + 0x294));\n        fcn.0040cd73(arg_8h_00, in_EAX & 0xfff, 0x24, 0x5800, uVar2);\n    }\n    *(unaff_ESI + 0x38) = in_EAX;\n    (**0x44327c)(*(unaff_ESI + 0x294), 0x1030);\n    return;\n}\n",
        "token_count": 483
    },
    "0041473d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041473d(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t iVar4;\n    int32_t *var_4h;\n    \n    iVar4 = 0;\n    var_4h = in_ECX;\n    if (0 < in_ECX[0xc]) {\n        do {\n            iVar2 = fcn.00413cfb();\n            if ((*(iVar2 + 4) & 1) == 0) {\n                iVar3 = (**(*in_ECX + 0x70))(iVar2, iVar4);\n                if (iVar3 == 0) goto code_r0x00414770;\n                *(iVar2 + 6) = 1;\n            }\n            else {\ncode_r0x00414770:\n                *(iVar2 + 6) = 0;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < in_ECX[0xc]);\n    }\n    iVar4 = fcn.00413ec4();\n    while (iVar4 = iVar4 + -1,  -1 < iVar4) {\n        iVar2 = fcn.00414529(&var_4h, iVar4);\n        piVar1 = var_4h;\n        if (iVar2 != 0) {\n            if (*(var_4h + 6) == 0) {\n                (**0x44327c)(in_ECX[0xa5], 0x1008, iVar4, 0);\n            }\n            else {\n                *(var_4h + 6) = 0;\n                if ((*(var_4h + 1) & 2) == 0) {\n                    fcn.00414644(var_4h, iVar4);\n                    fcn.0041459b(iVar4);\n                    if ((in_ECX[0x13] != 0) && (in_ECX[0x12] != 0)) {\n                        *(piVar1 + 1) = *(piVar1 + 1) | 2;\n                    }\n                }\n            }\n        }\n    }\n    iVar4 = 0;\n    if (0 < in_ECX[0xc]) {\n        do {\n            iVar2 = fcn.00413cfb();\n            if (*(iVar2 + 6) == 1) {\n                fcn.004146bf(iVar4);\n                if ((in_ECX[0x13] != 0) && (in_ECX[0x12] != 0)) {\n                    *(iVar2 + 4) = *(iVar2 + 4) | 2;\n                }\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < in_ECX[0xc]);\n    }\n    if (arg_8h != 0) {\n        if (in_ECX[0xae] != 0) {\n            fcn.0041435a(1);\n        }\n        if (in_ECX[0xaf] != 0) {\n            fcn.00413ede(0, 3, 3);\n        }\n    }\n    return;\n}\n",
        "token_count": 701
    },
    "0041489b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0041489b(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint var_200h;\n    \n    if ((param_1[0xb5] != 0) && (param_1[0xc] % param_1[0xb6] == 0)) {\n        var_200h._0_2_ = 0;\n        fcn.0044b531(&var_200h + 2, 0, 0x1fc);\n        iVar1 = (**(*param_1 + 0x3c))();\n        if (iVar1 != 0) {\n            fcn.0044b51f(&var_200h, 0xff, iVar1, param_1[0xc]);\n            (**0x44327c)(param_1[0xb5], 0x40b, 0, &var_200h);\n        }\n    }\n    return;\n}\n",
        "token_count": 218
    },
    "00414d99": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414d99(uint arg_8h, uint *arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t *unaff_EBX;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_9ch;\n    uint var_68h;\n    uint var_40h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    puVar3 = 0x448944;\n    puVar4 = &var_9ch;\n    for (iVar2 = 0xd; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    puVar3 = 0x448978;\n    puVar4 = &var_40h;\n    for (iVar2 = 9; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = *puVar3;\n    fcn.00410183(arg_8h, 0x4489a0);\n    iVar2 = 0;\n    if (0 < unaff_EBX[10]) {\n        do {\n            var_4h = *(unaff_EBX[0xb] + iVar2 * 4);\n            var_8h = &var_9ch;\n            if (*(var_4h * 0x14 + 8 + unaff_EBX[0xf]) == 0) {\n                var_8h = &var_40h;\n            }\n            var_18h = 0xffffffff;\n            var_14h = 0xffffffff;\n            var_10h = 0xffffffff;\n            var_ch = 0;\n            (**(*unaff_EBX + 0x34))(5, iVar2, arg_ch, &var_18h);\n            fcn.0041b49c(var_18h, &var_68h);\n            (***arg_ch)(var_4h, unaff_EBX[0x17]);\n            fcn.0041b4cd();\n            (**(*unaff_EBX + 0x50))(unaff_EBX[0x18], arg_ch, var_4h);\n            iVar1 = *unaff_EBX[0x18];\n            if ((iVar1 == 0) || (iVar1 == 0x20)) {\n                fcn.0044b519(unaff_EBX[0x18], 0x4489ac);\n            }\n            fcn.0041b5c7(unaff_EBX[0x19], unaff_EBX[0x18]);\n            fcn.0044b51f(unaff_EBX[0x17], 0x2000, var_8h, &var_68h, unaff_EBX[0x19]);\n            fcn.00410183(arg_8h, unaff_EBX[0x17]);\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < unaff_EBX[10]);\n    }\n    fcn.00410183(arg_8h, 0x443980);\n    return;\n}\n",
        "token_count": 771
    },
    "004153ef": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.004153ef(uint param_1)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    if (*(in_EAX + 0x2cc) == 0) {\n        iVar2 = fcn.0040c9d8(*(in_EAX + 0x294), param_1, 2);\n        uVar1 = iVar2 != 0;\n    }\n    else {\n        uVar1 = fcn.0040ce64(*(in_EAX + 0x294), param_1);\n    }\n    return uVar1;\n}\n",
        "token_count": 139
    },
    "00415429": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00415429(int16_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *in_EAX;\n    uint *arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *arg_ch_00;\n    int32_t unaff_EDI;\n    uint uVar3;\n    uint *arg_8h_01;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.004141c0();\n    if (*arg_8h == 0) {\n        arg_8h_00 = (**0x4431b0)(0xfffffff5);\n    }\n    else {\n        arg_8h_00 = fcn.0041016a(arg_8h);\n    }\n    if (arg_8h_00 == 0xffffffff) {\n        return 0;\n    }\n    if ((arg_ch == 0) && (unaff_EDI != 4)) {\n        fcn.00410bbf(arg_8h_00, 0x448b84, 2);\n    }\n    var_8h = 1;\n    fcn.004100a5();\n    if ((unaff_EDI == 5) || (unaff_EDI == 6)) {\n        (**(*in_EAX + 0x58))(arg_8h_00);\n    }\n    if (unaff_EDI == 7) {\n        (**(*in_EAX + 0x28))(arg_8h_00);\n    }\n    arg_8h_01 = arg_8h_00;\n    (**(*in_EAX + 0x88))(arg_8h_00);\n    if (unaff_EDI == 2) {\n        if (in_EAX[0xb4] == 0) goto code_r0x004154e9;\n        fcn.00414bfa(arg_8h_00);\n    }\n    if ((unaff_EDI == 4) && (in_EAX[0xb4] != 0)) {\n        arg_8h_01 = arg_8h_00;\n        fcn.00414acb(arg_8h_00, 0);\n    }\ncode_r0x004154e9:\n    iVar1 = fcn.00413ec4();\n    arg_ch_00 = NULL;\n    if (0 < iVar1) {\n        do {\n            arg_8h_01 = &fcn.00415429::arg_ch;\n            uVar3 = 0x415505;\n            iVar2 = fcn.00414529(arg_8h_01, arg_ch_00);\n            if (((iVar2 != 0) &&\n                (((arg_8h_01 = arg_ch_00,  iVar2 = fcn.004153ef(uVar3),  arg_10h == 0 || (iVar2 != 0)) &&\n                 (iVar2 = (**(*in_EAX + 0x74))(arg_ch, arg_ch_00),  iVar2 != 0)))) &&\n               (iVar2 = (**(*in_EAX + 0x80))(arg_8h_00, arg_ch),  iVar2 == 0)) {\n                var_8h = 0;\n                break;\n            }\n            arg_ch_00 = arg_ch_00 + 1;\n        } while (arg_ch_00 < iVar1);\n    }\n    if ((unaff_EDI == 5) || (unaff_EDI == 6)) {\n        (**(*in_EAX + 0x54))(arg_8h_00);\n    }\n    if (unaff_EDI == 7) {\n        (**(*in_EAX + 0x2c))(arg_8h_00, arg_8h_01);\n    }\n    if (*arg_8h != 0) {\n        (**0x4430e4)(arg_8h_00);\n    }\n    fcn.004100bf();\n    return var_8h;\n}\n",
        "token_count": 885
    },
    "004155c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004155c0(int16_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t arg_8h_00;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.004141c0();\n    if (*arg_8h == 0) {\n        arg_8h_00 = (**0x4431b0)(0xfffffff5);\n    }\n    else {\n        arg_8h_00 = fcn.0041016a(arg_8h);\n    }\n    if (arg_8h_00 == -1) {\n        fcn.004101ca(0);\n        return 0;\n    }\n    if (arg_ch != 4) {\n        fcn.00410bbf(arg_8h_00, 0x448b84, 2);\n    }\n    var_8h = 1;\n    fcn.004100a5();\n    if ((arg_ch == 5) || (arg_ch == 6)) {\n        (**(*in_EAX + 0x58))(arg_8h_00, arg_ch);\n    }\n    if (arg_ch == 7) {\n        (**(*in_EAX + 0x28))(arg_8h_00);\n    }\n    (**(*in_EAX + 0x88))(arg_8h_00, arg_ch);\n    if (arg_ch == 2) {\n        if (in_EAX[0xb4] == 0) goto code_r0x0041567d;\n        fcn.00414bfa(arg_8h_00);\n    }\n    if ((arg_ch == 4) && (in_EAX[0xb4] != 0)) {\n        fcn.00414acb(arg_8h_00, 0);\n    }\ncode_r0x0041567d:\n    iVar3 = 0;\n    if (0 < in_EAX[0xc]) {\n        do {\n            uVar1 = fcn.00413cfb(iVar3);\n            iVar2 = (**(*in_EAX + 0x30))(uVar1);\n            if ((iVar2 != 0) && (iVar2 = (**(*in_EAX + 0x80))(arg_8h_00, uVar1, arg_ch),  iVar2 == 0)) {\n                var_8h = 0;\n                fcn.004101ca(0);\n                break;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < in_EAX[0xc]);\n    }\n    if ((arg_ch == 5) || (arg_ch == 6)) {\n        (**(*in_EAX + 0x54))(arg_8h_00, arg_ch);\n    }\n    if (arg_ch == 7) {\n        (**(*in_EAX + 0x2c))(arg_8h_00);\n    }\n    if (*arg_8h != 0) {\n        (**0x4430e4)(arg_8h_00);\n    }\n    fcn.004100bf();\n    return var_8h;\n}\n",
        "token_count": 711
    },
    "0041578b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041578b(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int32_t *in_ECX;\n    bool bVar3;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    if (0 < in_ECX[0xb1]) {\n        do {\n            iVar2 = (**(*in_ECX + 0x6c))(var_4h);\n            if (iVar2 != 0) {\n                arg_8h_00 = (***arg_8h)(var_4h, in_ECX[0x17]);\n                uVar1 = *(arg_ch + 0xc);\n                if ((uVar1 & 2) == 0) {\n                    if ((uVar1 & 4) == 0) {\n                        iVar2 = fcn.00410285(arg_8h_00, *(arg_ch + 0x10));\n                    }\n                    else {\n                        iVar2 = fcn.0041022d(arg_8h_00, *(arg_ch + 0x10));\n                    }\n                    bVar3 = iVar2 != -1;\n                }\n                else {\n                    if ((uVar1 & 4) == 0) {\n                        iVar2 = fcn.0044b581(*(arg_ch + 0x10), arg_8h_00);\n                    }\n                    else {\n                        iVar2 = fcn.0044b5a5();\n                    }\n                    bVar3 = iVar2 == 0;\n                }\n                if (bVar3) {\n                    return 1;\n                }\n            }\n            var_4h = var_4h + 1;\n        } while (var_4h < in_ECX[0xb1]);\n    }\n    return 0;\n}\n",
        "token_count": 410
    },
    "00415abf": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00415abf(uint32_t param_1)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    int32_t unaff_EDI;\n    \n    pcVar2 = *0x44327c;\n    uVar1 = *(in_EAX + 0x294);\n    uVar3 = (**0x44327c)(uVar1, 0x1037, 0, 0);\n    if (unaff_EDI == 0) {\n        uVar3 = uVar3 & ~param_1;\n    }\n    else {\n        uVar3 = uVar3 | param_1;\n    }\n    (*pcVar2)(uVar1, 0x1036, 0, uVar3);\n    return;\n}\n",
        "token_count": 186
    },
    "00415bce": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415bce(int32_t arg_8h, int32_t arg_ch)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.004141c0();\n    var_8h = 0;\n    iVar2 = 0;\n    do {\n        if (9 < *(arg_8h + iVar2 * 2) - 0x30U) goto code_r0x00415c39;\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 1);\n    uVar3 = fcn.0044b58d(arg_8h);\n    if (uVar3 < 3) {\n        iVar2 = fcn.0044b587(arg_8h);\n        if ((-1 < iVar2) && (iVar2 < *(in_EAX + 0x28))) {\n            var_8h = *(*(*(in_EAX + 0x2c) + iVar2 * 4) * 0x14 + *(in_EAX + 0x2c8));\n        }\n    }\n    else {\ncode_r0x00415c39:\n        bVar1 = false;\n        var_4h = 0;\n        if (0 < *(in_EAX + 0x2c4)) {\n            iVar2 = 0;\n            do {\n                iVar4 = fcn.0044b581(*(iVar2 + 0x10 + *(in_EAX + 0x2c8)), arg_8h);\n                iVar5 = fcn.0044b581(*(*(in_EAX + 0x3c) + 0x10 + iVar2), arg_8h);\n                if ((iVar4 == 0) || (iVar5 == 0)) {\n                    var_8h = *(iVar2 + *(in_EAX + 0x2c8));\n                    bVar1 = true;\n                }\n                var_4h = var_4h + 1;\n                iVar2 = iVar2 + 0x14;\n            } while (var_4h < *(in_EAX + 0x2c4));\n            if (bVar1) goto code_r0x00415cf9;\n        }\n        iVar2 = 0;\n        var_4h = 0;\n        if (0 < *(in_EAX + 0x2c4)) {\n            do {\n                iVar4 = fcn.00410285(*(iVar2 + 0x10 + *(in_EAX + 0x2c8)), arg_8h);\n                iVar5 = fcn.00410285(*(*(in_EAX + 0x3c) + 0x10 + iVar2), arg_8h);\n                if ((-1 < iVar4) || (-1 < iVar5)) {\n                    var_8h = *(iVar2 + *(in_EAX + 0x2c8));\n                }\n                var_4h = var_4h + 1;\n                iVar2 = iVar2 + 0x14;\n            } while (var_4h < *(in_EAX + 0x2c4));\n        }\n    }\ncode_r0x00415cf9:\n    iVar2 = *0x451464;\n    if (arg_ch != 0) {\n        var_8h = var_8h | 0x1000;\n    }\n    *0x451464 = *0x451464 + 1;\n    *(iVar2 * 4 + 0x451468) = var_8h;\n    return;\n}\n",
        "token_count": 826
    },
    "00415d23": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00415d23(void)\n\n{\n    int32_t iVar1;\n    uint arg_14h;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint unaff_EBX;\n    int32_t unaff_ESI;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00414483(1);\n    iVar2 = *(unaff_ESI + 0x218);\n    uVar3 = iVar1 == 1;\n    fcn.0040a8c1(unaff_EBX, 0, 0x9c49, uVar3);\n    if (iVar2 != 0) {\n        fcn.0040a908(iVar2, 0x9c49, uVar3);\n    }\n    iVar2 = *(unaff_ESI + 0x218);\n    fcn.0040a8c1(unaff_EBX, 1, 0x9c58, uVar3);\n    if (iVar2 != 0) {\n        fcn.0040a908(iVar2, 0x9c58, uVar3);\n    }\n    iVar1 = fcn.00414483(0);\n    iVar2 = *(unaff_ESI + 0x218);\n    uVar3 = 0 < iVar1;\n    fcn.0040a8c1(unaff_EBX, 0, 0x9c41, uVar3);\n    if (iVar2 != 0) {\n        fcn.0040a908(iVar2, 0x9c41, uVar3);\n    }\n    iVar2 = *(unaff_ESI + 0x218);\n    fcn.0040a8c1(unaff_EBX, 1, 0x9c48, uVar3);\n    if (iVar2 != 0) {\n        fcn.0040a908(iVar2, 0x9c48, uVar3);\n    }\n    fcn.0040a8c1(unaff_EBX, 2, 0x9c4a, uVar3);\n    arg_14h = fcn.00413ec4();\n    fcn.0040a8c1(unaff_EBX, 2, 0x9c4c, arg_14h);\n    fcn.004102dd(*(unaff_ESI + 0x208), 0x9c45, *(*(unaff_ESI + 0x690) + 4));\n    fcn.004102dd(*(unaff_ESI + 0x208), 0x9c56, *(*(unaff_ESI + 0x690) + 8));\n    fcn.004102dd(*(unaff_ESI + 0x208), 0x9c5c, *(*(unaff_ESI + 0x690) + 0x10));\n    iVar2 = fcn.00413ec4();\n    uVar3 = 0 < iVar2;\n    fcn.0040a8c1(unaff_EBX, 2, 0x9c46, uVar3);\n    iVar2 = *(unaff_ESI + 0x218);\n    fcn.0040a8c1(unaff_EBX, 1, 0x9c4e, uVar3);\n    if (iVar2 != 0) {\n        fcn.0040a908(iVar2, 0x9c4e, uVar3);\n    }\n    return;\n}\n",
        "token_count": 774
    },
    "00415edb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00415edb(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t unaff_ESI;\n    uint var_400h;\n    uint var_200h;\n    \n    uVar1 = fcn.00413ec4();\n    uVar1 = fcn.00413002(uVar1);\n    fcn.0044b51f(&var_200h, 0xff, uVar1);\n    iVar2 = fcn.00414483(0);\n    if (0 < iVar2) {\n        uVar1 = fcn.00413002(iVar2);\n        fcn.0044b51f(&var_400h, 0xff, uVar1);\n        fcn.0044b519(&var_200h, &var_400h);\n    }\n    if (*(unaff_ESI + 0x208) != 0) {\n        (**0x44327c)(*(unaff_ESI + 0x214), 0x40b, 0, &var_200h);\n    }\n    return;\n}\n",
        "token_count": 239
    },
    "004160d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004160d0(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t unaff_ESI;\n    int32_t iVar3;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (*(unaff_ESI + 0x240) != 0) {\n        (*_fcn.00443244)(*(unaff_ESI + 0x208), &var_1ch);\n        pcVar1 = *0x443254;\n        (**0x443254)(*(unaff_ESI + 0x214), &var_2ch);\n        iVar3 = (var_20h - var_28h) + 1;\n        (*pcVar1)(*(unaff_ESI + 0x218), &var_2ch);\n        var_8h = var_14h - var_1ch;\n        var_ch = var_10h - var_18h;\n        iVar2 = (var_20h - var_28h) + 1;\n        var_4h = (**0x443200)(3);\n        (*_fcn.0044324c)(var_4h, *(unaff_ESI + 0x218), 0, 0, 0, var_8h, iVar2, 4);\n        (*_fcn.0044324c)(var_4h, *(unaff_ESI + 0x214), 0, 0, (var_10h - iVar3) + 1, var_8h, iVar3, 6);\n        (*_fcn.0044324c)(var_4h, *(*(unaff_ESI + 0x694) + 0x294), 0, 0, iVar2, var_8h, (var_ch - iVar2) - iVar3, 4);\n        (*_fcn.004431f8)(var_4h);\n    }\n    return;\n}\n",
        "token_count": 495
    },
    "00416a47": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416a47(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t *puVar1;\n    int32_t in_ECX;\n    uint uVar2;\n    uint var_438h;\n    uint var_428h;\n    uint var_424h;\n    uint var_226h;\n    uint var_24h;\n    uint var_14h;\n    uint var_8h;\n    \n    if ((arg_8h != 0) && (arg_8h != 1)) {\n        return;\n    }\n    if (arg_ch == -0x63be) {\n        (**0x44327c)(*(in_ECX + 0x208), 0x10, 0, 0);\n    }\n    if (arg_ch == -0x63b7) {\n        fcn.004167b7();\n    }\n    if (arg_ch == -0x63a8) {\n        fcn.00416770();\n    }\n    if (arg_ch == -0x63a4) {\n        puVar1 = *(in_ECX + 0x690) + 0x10;\n        *puVar1 = *puVar1 ^ 1;\n        fcn.00415d23();\n        fcn.00415edb();\n        (**0x44326c)(*(*(in_ECX + 0x694) + 0x294), 0, 0);\n    }\n    if (arg_ch == -0x63aa) {\n        puVar1 = *(in_ECX + 0x690) + 8;\n        *puVar1 = *puVar1 ^ 1;\n        fcn.00415d23();\n        fcn.004161ac();\n    }\n    if (arg_ch == -0x63a9) {\n        fcn.0041694c();\n    }\n    if (arg_ch == -0x63bc) {\n        fcn.0040a9fc(0x415);\n    }\n    if (arg_ch == -0x63bd) {\n        var_428h = 0;\n        var_438h = 0x448e28;\n        fcn.0040a00d();\n        fcn.0040a00d();\n        fcn.0040a561(&var_438h, *(in_ECX + 0x208));\n        fcn.00413ed1();\n        fcn.0040a415();\n    }\n    if (arg_ch == -0x63bf) {\n        fcn.004166fd();\n    }\n    if (arg_ch == -0x63b9) {\n        if (*(*(in_ECX + 0x694) + 0x2cc) == 0) {\n            fcn.00413ede(0xffffffff, 2, 2);\n            goto code_r0x00416bb2;\n        }\n        uVar2 = 0x2000;\ncode_r0x00416bd2:\n        fcn.00413ede(0xffffffff, uVar2, 0xf000);\n    }\n    else {\ncode_r0x00416bb2:\n        if (arg_ch == -0x63b1) {\n            if (*(*(in_ECX + 0x694) + 0x2cc) != 0) {\n                uVar2 = 0x1000;\n                goto code_r0x00416bd2;\n            }\n            fcn.00413ede(0xffffffff, 0, 2);\n        }\n        if (arg_ch == -0x63b8) {\n            fcn.00416681();\n        }\n        if (arg_ch == -0x63bb) {\n            puVar1 = *(in_ECX + 0x690) + 4;\n            *puVar1 = *puVar1 ^ 1;\n            fcn.00415d23();\n            fcn.004161ac();\n        }\n        if (arg_ch == -0x63ba) {\n            fcn.00416917(0);\n        }\n        if (arg_ch == -0x63b6) {\n            fcn.00416917(1);\n        }\n        if (arg_ch == -0x63b5) {\n            var_14h = 0;\n            var_8h = 0;\n            var_24h = 0x44802c;\n            fcn.0040df97(*(in_ECX + 0x208), *(*(in_ECX + 0x694) + 0x294));\n            var_24h = 0x44802c;\n            fcn.0040a415();\n        }\n        if (arg_ch == -0x63b4) {\n            fcn.004144e3();\n        }\n        if (arg_ch == -0x63b2) {\n            fcn.00415716();\n        }\n    }\n    return;\n}\n",
        "token_count": 1058
    },
    "00416cf9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00416cf9(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint var_204h;\n    int32_t var_4h;\n    \n    var_4h = in_ECX;\n    if (((arg_8h == 0x101) && (arg_ch[2] == -2)) && (arg_ch[3] == 1)) {\n        var_204h._0_2_ = 0;\n        fcn.0044b531(&var_204h + 2, 0, 0x1fe);\n        fcn.0040a00d();\n        fcn.004109c7(*(var_4h + 0x208), &var_204h);\n    }\n    iVar3 = var_4h;\n    if ((arg_ch[1] == 0x103) && (arg_ch[2] == -0xc)) {\n        uVar1 = fcn.0041443b();\n        *(iVar3 + 0x20c) = 1;\n        *(iVar3 + 0x210) = uVar1;\n    }\n    if (arg_ch[2] == -0x212) {\n        iVar2 = (**0x44327c)(*(iVar3 + 0x218), 0x423, 0, 0);\n        if (*arg_ch == iVar2) {\n            (**0x4432ac)(*(iVar3 + 0x21c), arg_ch[1], arg_ch + 4, 0x4f, 0);\n            arg_ch[0x2c] = 0;\n        }\n    }\n    if (arg_8h == 0x103) {\n        if (arg_ch[2] == -3) {\n            fcn.004167b7();\n        }\n        if (arg_ch[2] == -0x6c) {\n            fcn.0041435a(0);\n            iVar3 = var_4h;\n        }\n        if (arg_ch[2] == -0x65) {\n            iVar2 = fcn.0040ceda();\n            if ((iVar2 != 0) && (*(iVar3 + 0x278) == 0)) {\n                *(iVar3 + 0x278) = 1;\n                fcn.0040a9fc(0x402);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 562
    },
    "00417234": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00417234(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EDI;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar3 = 0;\n    var_ch = 0;\n    fcn.0040c025(0, 0);\n    *(unaff_EDI + 0x208) = 0;\n    iVar2 = *(*(unaff_EDI + 0x6a4) + 0x30);\n    var_4h = 0;\n    if (iVar2 != 1 && -1 < iVar2 + -1) {\n        do {\n            uVar1 = fcn.00411368();\n            iVar2 = fcn.0044b581(0x448d48, uVar1);\n            if (iVar2 == 0) {\n                iVar2 = 1;\ncode_r0x00417298:\n                var_4h = iVar2;\n            }\n            else {\n                iVar2 = fcn.0041719e();\n                if (iVar2 != 0) goto code_r0x00417298;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < *(*(unaff_EDI + 0x6a4) + 0x30) + -1);\n        if (var_4h != 0) {\n            fcn.00416849(unaff_EDI, 0);\n            fcn.00416819();\n            fcn.00415feb();\n            uVar1 = fcn.00411368();\n            fcn.004155c0(uVar1, var_4h);\n            var_ch = 1;\n            fcn.004169ff();\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 404
    },
    "00417d79": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00417d79(void)\n\n{\n    uint arg_8h;\n    int32_t iVar1;\n    int32_t iVar2;\n    ushort *unaff_EBX;\n    int32_t iVar3;\n    uint var_34h;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar3 = 0;\n    *unaff_EBX = 0;\n    arg_8h = fcn.00410ea3();\n    fcn.00417e07(arg_8h);\n    var_ch = 0;\n    var_8h = 0;\n    var_4h = 0;\n    if (0 < var_18h) {\n        do {\n            iVar1 = fcn.00410ff5();\n            fcn.00410987(iVar1, &var_14h);\n            iVar2 = (**0x443114)(&var_14h, &var_ch);\n            if (iVar2 == 1) {\n                var_ch = var_14h;\n                var_8h = var_10h;\n                var_4h = iVar1;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < var_18h);\n        if (var_4h != 0) {\n            fcn.00410454(var_4h);\n        }\n    }\n    fcn.00410ec5();\n    return;\n}\n",
        "token_count": 336
    },
    "00417e07": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00417e07(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_23ch;\n    uint var_2ch;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    \n    arg_8h_00 = fcn.00410ea3();\n    fcn.00418033(arg_8h_00);\n    var_8h = 0;\n    if (0 < var_10h) {\n        do {\n            var_23ch._0_2_ = 0;\n            fcn.0044b531(&var_23ch + 2, 0, 0x208);\n            var_ch = fcn.00410ff5();\n            iVar1 = fcn.0044b58d(var_ch);\n            iVar2 = fcn.0044b58d(0x448e50);\n            if (iVar1 + 1 + iVar2 < 0x104) {\n                fcn.004106b6(var_ch, 0x448e50);\n            }\n            else {\n                var_23ch._0_2_ = 0;\n            }\n            iVar1 = fcn.00410555(&var_23ch);\n            if (iVar1 != 0) {\n                fcn.00410eeb(&var_23ch, 0xffffffff);\n            }\n            var_ch = fcn.00410ff5();\n            iVar1 = fcn.0044b58d(var_ch);\n            iVar2 = fcn.0044b58d(0x448e68);\n            if (iVar1 + 1 + iVar2 < 0x104) {\n                fcn.004106b6(var_ch, 0x448e68);\n            }\n            else {\n                var_23ch._0_2_ = 0;\n            }\n            iVar1 = fcn.00410555(&var_23ch);\n            if (iVar1 != 0) {\n                fcn.00410eeb(&var_23ch, 0xffffffff);\n            }\n            var_8h = var_8h + 1;\n        } while (var_8h < var_10h);\n    }\n    fcn.00410ec5();\n    return;\n}\n",
        "token_count": 522
    },
    "004180e2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004180e2(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int16_t *arg_8h_00;\n    int16_t *piVar4;\n    int16_t var_c84h;\n    uint var_c82h;\n    ushort var_a74h;\n    uint var_a72h;\n    int16_t var_864h;\n    uint var_862h;\n    ushort var_654h;\n    uint var_652h;\n    ushort var_444h;\n    uint var_442h;\n    ushort var_234h;\n    uint var_232h;\n    uint var_24h;\n    int32_t var_8h;\n    \n    var_234h = 0;\n    fcn.0044b531(&var_232h, 0, 0x208);\n    var_a74h = 0;\n    fcn.0044b531(&var_a72h, 0, 0x208);\n    var_444h = 0;\n    fcn.0044b531(&var_442h, 0, 0x208);\n    var_654h = 0;\n    fcn.0044b531(&var_652h, 0, 0x208);\n    var_864h = 0;\n    fcn.0044b531(&var_862h, 0, 0x208);\n    fcn.0041b27d();\n    fcn.0041b27d();\n    iVar1 = fcn.0044b58d(0x448edc);\n    iVar2 = fcn.0044b58d(&var_234h);\n    if (iVar1 + 1 + iVar2 < 0x104) {\n        fcn.004106b6(&var_234h, 0x448edc);\n    }\n    else {\n        var_444h = 0;\n    }\n    iVar1 = fcn.0044b58d(0x448edc);\n    iVar2 = fcn.0044b58d(&var_a74h);\n    if (iVar1 + 1 + iVar2 < 0x104) {\n        fcn.004106b6(&var_a74h, 0x448edc);\n    }\n    else {\n        var_654h = 0;\n    }\n    iVar1 = fcn.0044b58d(0x448f14);\n    iVar2 = fcn.0044b58d(&var_234h);\n    if (iVar1 + 1 + iVar2 < 0x104) {\n        fcn.004106b6(&var_234h, 0x448f14);\n    }\n    else {\n        var_864h = 0;\n    }\n    fcn.00417f44(&var_444h, arg_8h, 1);\n    fcn.00417f44(&var_654h, arg_8h, 1);\n    uVar3 = fcn.00410ea3();\n    arg_8h_00 = &var_864h;\n    fcn.00418504(arg_8h_00, uVar3);\n    iVar1 = 0;\n    if (0 < var_8h) {\n        do {\n            var_c84h = 0;\n            fcn.0044b531(&var_c82h, 0, 0x208);\n            uVar3 = fcn.00410ff5();\n            piVar4 = &var_c84h;\n            fcn.00410454(uVar3);\n            if (var_c84h != 0) {\n                fcn.00410f95();\n                arg_8h_00 = piVar4;\n            }\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < var_8h);\n    }\n    fcn.00410ec5(arg_8h_00);\n    return;\n}\n",
        "token_count": 869
    },
    "004182f3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004182f3(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int16_t *arg_8h_00;\n    int16_t *piVar4;\n    int16_t var_c84h;\n    uint var_c82h;\n    ushort var_a74h;\n    uint var_a72h;\n    int16_t var_864h;\n    uint var_862h;\n    ushort var_654h;\n    uint var_652h;\n    ushort var_444h;\n    uint var_442h;\n    ushort var_234h;\n    uint var_232h;\n    uint var_24h;\n    int32_t var_8h;\n    \n    var_234h = 0;\n    fcn.0044b531(&var_232h, 0, 0x208);\n    var_a74h = 0;\n    fcn.0044b531(&var_a72h, 0, 0x208);\n    var_444h = 0;\n    fcn.0044b531(&var_442h, 0, 0x208);\n    var_654h = 0;\n    fcn.0044b531(&var_652h, 0, 0x208);\n    var_864h = 0;\n    fcn.0044b531(&var_862h, 0, 0x208);\n    fcn.0041b27d();\n    fcn.0041b27d();\n    iVar1 = fcn.0044b58d(0x448ea8);\n    iVar2 = fcn.0044b58d(&var_234h);\n    if (iVar1 + 1 + iVar2 < 0x104) {\n        fcn.004106b6(&var_234h, 0x448ea8);\n    }\n    else {\n        var_444h = 0;\n    }\n    iVar1 = fcn.0044b58d(0x448ea8);\n    iVar2 = fcn.0044b58d(&var_a74h);\n    if (iVar1 + 1 + iVar2 < 0x104) {\n        fcn.004106b6(&var_a74h, 0x448ea8);\n    }\n    else {\n        var_654h = 0;\n    }\n    iVar1 = fcn.0044b58d(0x448f38);\n    iVar2 = fcn.0044b58d(&var_234h);\n    if (iVar1 + 1 + iVar2 < 0x104) {\n        fcn.004106b6(&var_234h, 0x448f38);\n    }\n    else {\n        var_864h = 0;\n    }\n    fcn.00417f44(&var_444h, arg_8h, 1);\n    fcn.00417f44(&var_654h, arg_8h, 1);\n    uVar3 = fcn.00410ea3();\n    arg_8h_00 = &var_864h;\n    fcn.00418504(arg_8h_00, uVar3);\n    iVar1 = 0;\n    if (0 < var_8h) {\n        do {\n            var_c84h = 0;\n            fcn.0044b531(&var_c82h, 0, 0x208);\n            uVar3 = fcn.00410ff5();\n            piVar4 = &var_c84h;\n            fcn.00410454(uVar3);\n            if (var_c84h != 0) {\n                fcn.00410f95();\n                arg_8h_00 = piVar4;\n            }\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < var_8h);\n    }\n    fcn.00410ec5(arg_8h_00);\n    return;\n}\n",
        "token_count": 869
    },
    "00418c96": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00418c96(void)\n\n{\n    code *pcVar1;\n    \n    if (*0x451690 == 0) {\n        *0x451690 = (*_fcn.00443144)(0x4491e4);\n        pcVar1 = _fcn.00443108;\n        *0x451670 = (*_fcn.00443108)(*0x451690, 0x4491f8);\n        *0x451674 = (*pcVar1)(*0x451690, 0x449214);\n        *0x451678 = (*pcVar1)(*0x451690, 0x449224);\n        *0x45167c = (*pcVar1)(*0x451690, 0x449234);\n        *0x451680 = (*pcVar1)(*0x451690, 0x449250);\n        *0x451684 = (*pcVar1)(*0x451690, 0x44926c);\n        *0x451688 = (*pcVar1)(*0x451690, 0x44927c);\n        *0x45168c = (*pcVar1)(*0x451690, 0x449290);\n    }\n    return;\n}\n",
        "token_count": 265
    },
    "00418f5e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00418f5e(void)\n\n{\n    int32_t unaff_EBX;\n    uint32_t uVar1;\n    int32_t *piVar2;\n    \n    fcn.0044b349();\n    fcn.00418feb();\n    fcn.00411611();\n    uVar1 = -(unaff_EBX != 0) & unaff_EBX + 0xb0U;\n    piVar2 = uVar1 + 4;\n    if (*piVar2 != 0) {\n        (*_fcn.004431c0)(uVar1 + 0x24);\n        *piVar2 = 0;\n    }\n    *(-(unaff_EBX != 0) & unaff_EBX + 0xacU) = 0x4483a8;\n    *(-(unaff_EBX != 0) & unaff_EBX + 0x98U) = 0x449588;\n    fcn.0041a807();\n    fcn.00412218();\n    return;\n}\n",
        "token_count": 226
    },
    "00419175": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.00419175(int32_t arg_8h)\n\n{\n    ushort *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int16_t *arg_10h;\n    int32_t iVar4;\n    int32_t unaff_EDI;\n    uint var_104ch;\n    uint var_1048h;\n    uint var_b70h;\n    uint var_8e8h;\n    ushort var_65ch;\n    uint var_65ah;\n    int16_t var_44ch;\n    uint var_44ah;\n    int16_t var_23ch;\n    uint var_23ah;\n    uint var_28h;\n    int32_t var_ch;\n    int16_t *var_8h;\n    \n    fcn.0044ba9d();\n    iVar4 = 0;\n    if (**(arg_8h + 0x1b98) != 0) {\n        fcn.00412a41();\n        fcn.00411626(arg_8h + 0xac);\n        fcn.00412ec5();\n        fcn.0044b37a(arg_8h + 0x1b70);\n    }\n    var_ch = unaff_EDI;\n    if (*(*(arg_8h + 0x1b98) + 4) != 0) {\n        *(arg_8h + 0x1b94) = 0;\n        var_44ch = 0;\n        fcn.0044b531();\n        fcn.00417d79();\n        puVar1 = fcn.0044b5c3();\n        if (puVar1 != NULL) {\n            *puVar1 = 0;\n        }\n        iVar3 = *(arg_8h + 0x1b98);\n        var_8h = NULL;\n        arg_10h = &stack0xfffffbb0;\n        if ((*(iVar3 + 0x18) != 0) && (*(iVar3 + 0x20) != 0)) {\n            arg_10h = iVar3 + 0x20;\n        }\n        if ((*(iVar3 + 0x1c) != 0) && (*(iVar3 + 0x22a) != 0)) {\n            var_8h = iVar3 + 0x22a;\n        }\n        if ((*(iVar3 + 0x18) == 0) || (*(iVar3 + 0x20) == 0)) {\n            uVar2 = fcn.00410ea3();\n            fcn.004182f3(uVar2);\n            if (0 < unaff_EDI) {\n                do {\n                    var_ch = fcn.00410ff5();\n                    fcn.0040fde6(arg_8h + 0xb0, *(arg_8h + 0x1b98) + 0x434, var_ch, var_8h);\n                    iVar4 = iVar4 + 1;\n                } while (iVar4 < var_ch);\n            }\n            fcn.00410ec5();\n        }\n        else {\n            var_28h = 0x419260;\n            fcn.0040fde6(arg_8h + 0xb0, iVar3 + 0x434, arg_10h, var_8h);\n        }\n    }\n    if (*(*(arg_8h + 0x1b98) + 0x14) == 0) goto code_r0x00419394;\n    *(arg_8h + 0x1b94) = 0xb;\n    uVar2 = fcn.00410ea3();\n    fcn.004180e2(uVar2);\n    var_23ch = 0;\n    var_28h = 0x4192eb;\n    fcn.0044b531();\n    var_28h = 0x419308;\n    fcn.0041abc9(0x80000002, 0x448050, 0x44357c);\n    if ((var_23ch == 0) || (iVar4 = fcn.00410555(),  iVar4 == 0)) {\n        var_28h = 0x419339;\n        (**0x44311c)();\n        iVar4 = fcn.0040f3ce(&stack0xfffffdc0);\n        if (iVar4 != 0) goto code_r0x0041935a;\n        var_23ch = 0;\n    }\n    else {\ncode_r0x0041935a:\n        iVar4 = 0;\n        if (0 < var_ch) {\n            do {\n                iVar3 = fcn.00410ff5();\n                fcn.0040fde6(arg_8h + 0xb0, 0x4434fc, iVar3, &stack0xfffffdc0);\n                iVar4 = iVar4 + 1;\n            } while (iVar4 < iVar3);\n        }\n    }\n    fcn.00410ec5();\ncode_r0x00419394:\n    iVar4 = *(arg_8h + 0x1b98);\n    if (*(iVar4 + 0xc) != 0) {\n        var_23ch = 0;\n        fcn.0044b531();\n        var_65ch = 0;\n        fcn.0044b531();\n        var_44ch = 0;\n        fcn.0044b531();\n        if ((*(iVar4 + 0x634) == 0) || (*(iVar4 + 0x638) == 0)) {\n            fcn.0041b27d();\n            iVar4 = fcn.0044b58d();\n            iVar3 = fcn.0044b58d();\n            if (iVar4 + 1 + iVar3 < 0x104) {\n                fcn.004106b6();\n            }\n            else {\n                var_44ch = 0;\n            }\n            fcn.0041900d(arg_8h, &stack0xfffffbb0);\n            iVar4 = fcn.0044b58d();\n            iVar3 = fcn.0044b58d();\n            if (iVar4 + 1 + iVar3 < 0x104) {\n                var_28h = 0x4194cf;\n                fcn.004106b6();\n            }\n            else {\n                var_44ch = 0;\n            }\n            var_28h = 0x4194e7;\n            fcn.0041900d(arg_8h, &stack0xfffffbb0);\n        }\n        else {\n            fcn.00410454();\n            fcn.00419082(arg_8h, &stack0xfffff9a0);\n        }\n    }\n    if (*(*(arg_8h + 0x1b98) + 0x10) != 0) {\n        var_44ch = 0;\n        fcn.0044b531();\n        fcn.0040ab13();\n        if (var_44ch != 0) {\n            (**(*(arg_8h + 0x1af4) + 0x14))();\n        }\n    }\n    if (*(*(arg_8h + 0x1b98) + 8) != 0) {\n        if (*(*(arg_8h + 0x1b98) + 0x844) == 0) {\n            var_44ch = 0;\n            fcn.0044b531();\n            var_23ch = 0;\n            fcn.0044b531();\n            fcn.0041b27d();\n            iVar4 = fcn.0044b58d();\n            iVar3 = fcn.0044b58d();\n            if (iVar4 + 1 + iVar3 < 0x104) {\n                fcn.004106b6();\n            }\n            else {\n                var_23ch = 0;\n            }\n            iVar4 = fcn.00410555();\n            if (iVar4 == 0) {\n                var_23ch = 0;\n            }\n            if (var_23ch == 0) {\n                iVar4 = fcn.0044b58d();\n                iVar3 = fcn.0044b58d();\n                if (iVar4 + 1 + iVar3 < 0x104) {\n                    fcn.004106b6();\n                }\n                else {\n                    var_23ch = 0;\n                }\n                iVar4 = fcn.00410555();\n                if (iVar4 == 0) {\n                    var_23ch = 0;\n                }\n                if (var_23ch == 0) {\n                    var_65ch = 0;\n                    fcn.0044b531();\n                    iVar4 = fcn.0044b58d();\n                    iVar3 = fcn.0044b58d();\n                    if (iVar4 + 1 + iVar3 < 0x104) {\n                        fcn.004106b6();\n                    }\n                    else {\n                        var_65ch = 0;\n                    }\n                    fcn.004113ee(&stack0xfffff9a0);\n                    while (iVar4 = fcn.0041144e(),  iVar4 != 0) {\n                        iVar4 = fcn.004113aa();\n                        if (iVar4 != 0) {\n                            iVar4 = fcn.0044b58d();\n                            iVar3 = fcn.0044b58d();\n                            if (iVar4 + 1 + iVar3 < 0x104) {\n                                fcn.004106b6();\n                            }\n                            else {\n                                var_23ch = 0;\n                            }\n                            iVar4 = fcn.00410555();\n                            if (iVar4 != 0) {\n                                fcn.0044b1f8();\n                            }\n                        }\n                    }\n                    fcn.004114e7();\n                    return;\n                }\n            }\n        }\n        fcn.0044b1f8();\n    }\n    return;\n}\n",
        "token_count": 2206
    },
    "00419bf8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.00419bf8(int32_t arg_8h)\n\n{\n    uint var_1008h;\n    uint var_e08h;\n    uint var_c08h;\n    uint var_408h;\n    uint var_208h;\n    uint uStack64;\n    int32_t iStack60;\n    uint *puStack56;\n    uint uStack52;\n    int32_t iStack48;\n    uint *puStack44;\n    uint uStack40;\n    int32_t iStack36;\n    uint *puStack32;\n    uint uStack28;\n    int32_t iStack24;\n    uint *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0044ba9d();\n    puStack20 = 0x419c18;\n    fcn.0040bb34();\n    puStack20 = arg_8h + 0xc00;\n    iStack24 = 0x419c7e;\n    fcn.00410454();\n    iStack24 = arg_8h + 0x400;\n    uStack28 = 0x419c92;\n    fcn.00410454();\n    uStack28 = 0xff;\n    puStack32 = &fcn.00419bf8::var_208h;\n    iStack36 = arg_8h + 0x1800;\n    uStack40 = 0x419ca6;\n    fcn.00410e02();\n    uStack40 = 0xff;\n    puStack44 = &fcn.00419bf8::var_408h;\n    iStack48 = arg_8h + 0x1400;\n    uStack52 = 0x419cba;\n    fcn.00410e02();\n    uStack52 = 0x3ff;\n    puStack56 = &fcn.00419bf8::var_c08h;\n    iStack60 = arg_8h;\n    uStack64 = 0x419ccc;\n    fcn.00410e02();\n    iStack24 = 4299999;\n    puStack20 = &fcn.00419bf8::var_1008h;\n    fcn.00419b94();\n    return;\n}\n",
        "token_count": 517
    },
    "00419ce6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00419ce6(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if ((((*0x4514ec == 0) && (iVar2 = (*_fcn.00443144)(0x4482fc),  pcVar1 = _fcn.00443108,  iVar2 != 0)) &&\n        (*0x4509bc = (*_fcn.00443108)(iVar2, 0x449418),  *0x4509bc != 0)) &&\n       (((*0x4509b4 = (*pcVar1)(iVar2, 0x449434),  *0x4509b4 != 0 &&\n         (*0x4509b0 = (*pcVar1)(iVar2, 0x449444),  *0x4509b0 != 0)) &&\n        ((*0x450744 = (*pcVar1)(iVar2, 0x449454),  *0x450744 != 0 &&\n         (*0x4509a8 = (*pcVar1)(iVar2, 0x449464),  *0x4509a8 != 0)))))) {\n        *0x4514ec = 1;\n    }\n    return;\n}\n",
        "token_count": 273
    },
    "00419d6a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00419d6a(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if ((*0x4514f0 == 0) && (iVar2 = (*_fcn.00443104)(0x449474),  pcVar1 = _fcn.00443108,  iVar2 != 0)) {\n        *0x4509c8 = (*_fcn.00443108)(iVar2, 0x449488);\n        if (((*0x4509c8 != 0) &&\n            (((*0x4509c0 = (*pcVar1)(iVar2, 0x44949c),  *0x4509c0 != 0 &&\n              (*0x4509b8 = (*pcVar1)(iVar2, 0x4494b0),  *0x4509b8 != 0)) &&\n             (*0x450bec = (*pcVar1)(iVar2, 0x4494c8),  *0x450bec != 0)))) &&\n           (*0x4509c4 = (*pcVar1)(iVar2, 0x4494d8),  *0x4509c4 != 0)) {\n            *0x4514f0 = 1;\n        }\n        if (*0x4514f0 == 0) {\n            (**0x443100)(iVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 313
    },
    "0041a14d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041a14d(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*0x451abc == 0) {\n        iVar1 = (*_fcn.00443144)(0x4482fc);\n        if (iVar1 != 0) {\n            *0x451abc = 1;\n            *0x451ac0 = (*_fcn.00443108)(iVar1, 0x449524);\n        }\n    }\n    if (*0x451ac0 != NULL) {\n        uVar2 = (**0x451ac0)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 195
    },
    "0041a3ab": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041a3ab(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *unaff_ESI;\n    \n    if (*unaff_ESI == 0) {\n        iVar2 = (*_fcn.00443104)(0x449474);\n        pcVar1 = _fcn.00443108;\n        *unaff_ESI = iVar2;\n        iVar2 = (*pcVar1)(iVar2, 0x449488);\n        unaff_ESI[1] = iVar2;\n        iVar2 = (*pcVar1)(*unaff_ESI, 0x44949c);\n        unaff_ESI[2] = iVar2;\n        iVar2 = (*pcVar1)(*unaff_ESI, 0x4494b0);\n        unaff_ESI[4] = iVar2;\n        iVar2 = (*pcVar1)(*unaff_ESI, 0x4494c8);\n        unaff_ESI[5] = iVar2;\n        iVar2 = (*pcVar1)(*unaff_ESI, 0x4494d8);\n        unaff_ESI[3] = iVar2;\n    }\n    return;\n}\n",
        "token_count": 260
    },
    "0041a401": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041a401(int32_t param_1, uint param_2, int32_t param_3)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint arg_ch;\n    int32_t iVar4;\n    uint *puVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_retaddr;\n    uint in_stack_00000034;\n    uchar *puVar10;\n    uchar *puVar11;\n    int32_t iVar12;\n    uint uVar13;\n    int32_t iVar14;\n    int32_t iStack100;\n    int32_t iStack96;\n    int32_t iStack92;\n    uchar *puStack88;\n    uint32_t uStack84;\n    uint32_t uStack80;\n    int32_t iStack72;\n    uchar *puStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint32_t uStack56;\n    uint uStack52;\n    int32_t iStack48;\n    int32_t iStack44;\n    uint32_t uStack40;\n    int32_t iStack36;\n    int32_t iStack32;\n    int32_t iStack28;\n    int32_t iStack24;\n    uint uStack20;\n    \n    fcn.0044ba9d();\n    pcVar1 = _fcn.00443268;\n    iVar9 = *(unaff_ESI[6] + 0x2c8);\n    uStack20 = 0x3e9;\n    iStack24 = unaff_ESI[4];\n    iStack28 = 0x41a430;\n    uStack56 = (*_fcn.00443268)();\n    iStack28 = 1000;\n    iStack32 = unaff_ESI[4];\n    iStack36 = 0x41a43c;\n    (*pcVar1)();\n    pcVar1 = _fcn.004432a0;\n    iStack36 = -0x10;\n    iStack44 = 0x41a44b;\n    uStack40 = uStack56;\n    iVar3 = (*_fcn.004432a0)();\n    iStack44 = -0x10;\n    iStack48 = iStack24;\n    uStack52 = 0x41a457;\n    arg_ch = (*pcVar1)();\n    uStack52 = 0xffffffec;\n    iStack60 = 0x41a460;\n    in_stack_00000034 = (*pcVar1)();\n    iStack60 = 0xffffffec;\n    uStack64 = uStack40;\n    puStack68 = 0x41a46c;\n    iVar4 = (*pcVar1)();\n    pcVar1 = *0x443254;\n    puStack68 = &stack0x00000030;\n    (**0x443254)();\n    uStack80 = uStack56;\n    uStack84 = 0x41a489;\n    puVar11 = *0x10;\n    (*pcVar1)();\n    pcVar2 = *0x4432d4;\n    uStack84 = 2;\n    puStack88 = &stack0x00000020;\n    iStack92 = unaff_ESI[4];\n    iStack96 = 0;\n    iStack100 = 0x41a49d;\n    (**0x4432d4)();\n    iStack100 = 2;\n    uVar13 = 0;\n    (*pcVar2)(0, unaff_ESI[4], &stack0xffffffe8);\n    iStack72 = iStack32 - uStack40;\n    iVar8 = unaff_ESI[4];\n    iVar9 = iVar9 - unaff_retaddr;\n    iStack96 = 0;\n    iStack24 = param_3 - param_1;\n    iStack60 = iStack28 - iStack36;\n    puStack88 = (**0x4432d8)();\n    if (puStack88 != NULL) {\n        iStack72 = 0;\n        iStack96 = 0;\n        if (0 < *(unaff_ESI[6] + 0x2c4)) {\n            puVar5 = iStack92 + 0x10;\n            do {\n                uVar6 = fcn.0044b58d(*puVar5, &stack0x0000000c);\n                iVar7 = (**0x443058)(puStack88, *puVar5, uVar6);\n                if ((iVar7 != 0) && (iStack96 < param_3 + 10)) {\n                    iStack96 = param_3 + 10;\n                }\n                iStack72 = iStack72 + 1;\n                puVar5 = puVar5 + 5;\n            } while (iStack72 < *(unaff_ESI[6] + 0x2c4));\n        }\n        iVar7 = iStack96 - iVar9;\n        puVar11 = puVar11 + -iVar7;\n        iStack44 = iStack44 + iVar7;\n        iVar9 = iVar9 + iVar7;\n        (**0x4432e8)(unaff_ESI[4], puStack88);\n    }\n    iVar7 = 0;\n    if (0 < *(unaff_ESI[6] + 0x2c4)) {\n        uStack84 = uStack84 | 0x10000000;\n        uStack80 = uStack80 | 0x10000000;\n        iStack96 = iStack92 + 0x10;\n        do {\n            (**(*unaff_ESI + 0x20))(iVar7);\n            iVar12 = iVar3;\n            fcn.0040a583(unaff_ESI, arg_ch, 0x449534, puStack88, iVar3, iVar7 + unaff_EBP, iVar9, iStack32);\n            puVar5 = puVar11 + iVar12;\n            iVar12 = iVar8;\n            uVar6 = uVar13;\n            iVar14 = iVar7;\n            fcn.0040a583(unaff_ESI, iVar7, 0x449544, iVar8, uStack80, puVar5, uVar13, unaff_ESI[7] * iStack100);\n            fcn.0044b51f(&stack0xffffffe0, 0xff, 0x449550, *puVar5);\n            (*_fcn.00443230)(uVar13, &stack0xffffffe0);\n            uVar13 = (***unaff_ESI[5])(iVar7, &stack0x000001d8);\n            (*_fcn.00443230)(iVar12, uVar13);\n            iStack96 = iStack96 + 0x14;\n            iStack100 = iStack100 + unaff_ESI[7] * uStack64 + unaff_ESI[8];\n            iVar7 = iVar14 + 1;\n            uVar13 = uVar6;\n        } while (iVar7 < *(unaff_ESI[6] + 0x2c4));\n    }\n    iVar8 = (*_fcn.00443268)(unaff_ESI[4], 1);\n    (*pcVar1)(iVar8, &stack0xffffffbc);\n    iVar12 = 2;\n    puVar11 = &stack0xffffffb4;\n    iVar9 = unaff_ESI[4];\n    iVar3 = 0;\n    (**0x4432d4)(0, iVar9, puVar11, 2);\n    pcVar2 = _fcn.00443244;\n    puVar10 = &stack0xfffffff4;\n    (*_fcn.00443244)(unaff_ESI[4], puVar10);\n    (*pcVar1)(unaff_ESI[4], &stack0xffffffc0);\n    pcVar1 = *0x443218;\n    (**0x443218)(unaff_ESI[4], 0, 0, 0, (uStack64 - iStack72) + 1, \n                 (((iStack24 - iVar4) - iVar7) - puStack68) + iStack96 + iStack60 + 0x15 + iVar3, 0x206);\n    (*pcVar2)(unaff_ESI[4], &stack0xffffff9c);\n    (*pcVar1)(puVar10, 0, iVar9, puVar11 + iStack96 + (-iVar7 - iVar8) + -5, (iVar12 - iVar9) + 1, (iVar8 - puVar11) + 1\n              , 0x204);\n    return;\n}\n",
        "token_count": 1906
    },
    "0041aa20": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041aa20(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    \n    fcn.0044ba9d();\n    if (arg_8h != 0) {\n        if ((unaff_ESI != 0) && (iVar1 = fcn.0044b57b(),  iVar1 != 0)) {\n            fcn.0044b51f();\n        }\n        (*_fcn.004431a0)();\n        return;\n    }\n    (*_fcn.004431ac)();\n    return;\n}\n",
        "token_count": 160
    },
    "0041ab43": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ab43(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    uint *unaff_ESI;\n    \n    if (arg_8h != 0) {\n        fcn.0041a9d3(arg_ch, arg_10h, *unaff_ESI, arg_18h);\n        return;\n    }\n    uVar1 = (*_fcn.004431a4)(arg_ch, arg_10h, arg_14h);\n    *unaff_ESI = uVar1;\n    return;\n}\n",
        "token_count": 145
    },
    "0041ac3b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ac3b(uint arg_8h, int16_t *arg_ch, uint arg_10h)\n\n{\n    int16_t *piVar1;\n    uint *in_ECX;\n    \n    piVar1 = arg_ch;\n    arg_ch = *arg_ch;\n    (***in_ECX)(arg_8h, &arg_ch, arg_10h);\n    if (in_ECX[1] == 0) {\n        *piVar1 = arg_ch;\n    }\n    return;\n}\n",
        "token_count": 115
    },
    "0041afa6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041afa6(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t *in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    uVar2 = (in_EAX[1] >> 4 ^ *in_EAX) & 0xf0f0f0f;\n    uVar6 = *in_EAX ^ uVar2;\n    uVar4 = in_EAX[1] ^ uVar2 << 4;\n    uVar2 = (uVar6 << 0x12 ^ uVar6) & 0xcccc0000;\n    uVar3 = (uVar4 << 0x12 ^ uVar4) & 0xcccc0000;\n    uVar4 = uVar4 ^ uVar3 >> 0x12 ^ uVar3;\n    uVar6 = uVar6 ^ uVar2 >> 0x12 ^ uVar2;\n    uVar2 = (uVar4 >> 1 ^ uVar6) & 0x55555555;\n    uVar6 = uVar6 ^ uVar2;\n    uVar4 = uVar4 ^ uVar2 * 2;\n    uVar2 = (uVar6 >> 8 ^ uVar4) & 0xff00ff;\n    uVar4 = uVar4 ^ uVar2;\n    uVar6 = uVar6 ^ uVar2 << 8;\n    uVar2 = (uVar4 >> 1 ^ uVar6) & 0x55555555;\n    uVar6 = uVar6 ^ uVar2;\n    uVar4 = uVar4 ^ uVar2 * 2;\n    uVar2 = (uVar4 >> 0xc & 0xff0 | uVar6 & 0xf000000f) >> 4 | (uVar4 & 0xff) << 0x10 | uVar4 & 0xff00;\n    uVar6 = uVar6 & 0xfffffff;\n    var_4h = 0x44f920;\n    var_8h = param_1;\n    do {\n        if (*var_4h == 0) {\n            uVar4 = uVar6 >> 1 | uVar6 << 0x1b;\n            iVar1 = 0x1b;\n            uVar3 = uVar2 >> 1;\n        }\n        else {\n            uVar4 = uVar6 >> 2 | uVar6 << 0x1a;\n            iVar1 = 0x1a;\n            uVar3 = uVar2 >> 2;\n        }\n        uVar5 = uVar3 | uVar2 << iVar1;\n        uVar6 = uVar4 & 0xfffffff;\n        uVar2 = uVar3 | uVar2 << iVar1 & 0xfffffff;\n        uVar3 = uVar6 >> 1;\n        uVar3 = *((((uVar3 & 0x7000000 | uVar4 & 0xc00000) >> 1 | uVar4 & 0x100000) >> 0x14) * 4 + 0x4472f0) |\n                *(((uVar4 & 0x1e000 | uVar3 & 0x60000) >> 0xd) * 4 + 0x4471f0) |\n                *(((uVar3 & 0xf00 | uVar4 & 0xc0) >> 6) * 4 + 0x4470f0) | *((uVar4 & 0x3f) * 4 + 0x446ff0);\n        var_4h = var_4h + 1;\n        uVar4 = *(((uVar2 >> 1 & 0x1e00 | uVar5 & 0x180) >> 7) * 4 + 0x4474f0) |\n                *(((uVar2 >> 1 & 0x6000000 | uVar5 & 0x1e00000) >> 0x15) * 4 + 0x4476f0) |\n                *((uVar2 >> 0xf & 0x3f) * 4 + 0x4475f0) | *((uVar5 & 0x3f) * 4 + 0x4473f0);\n        *var_8h = ((uVar4 << 0x10) >> 0x1e) + (uVar3 & 0xffff | uVar4 << 0x10) * 4;\n        var_8h[1] = (uVar3 >> 0x10 | uVar4 & 0xffff0000) * 0x40 + (uVar4 >> 0x1a);\n        var_8h = var_8h + 2;\n    } while (var_4h < 0x44f960);\n    return;\n}\n",
        "token_count": 1140
    },
    "0041b1d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041b1d0(void)\n\n{\n    if (*0x4514f8 == 0) {\n        *0x4514f8 = (*_fcn.00443104)(0x4495bc);\n        if (*0x4514f8 != 0) {\n            *0x4514f4 = (*_fcn.00443108)(*0x4514f8, 0x4495d4);\n        }\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "0041b4cd": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b4cd(uint16_t *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t *in_EAX;\n    uint uVar2;\n    \n    do {\n        uVar1 = *in_EAX;\n        if (uVar1 == 0x3c) {\n            uVar2 = 0x4497ac;\ncode_r0x0041b549:\n            fcn.0044b575(param_1, uVar2, 8);\n            param_1 = param_1 + 4;\n        }\n        else {\n            if (uVar1 == 0x3e) {\n                uVar2 = 0x4497b8;\n                goto code_r0x0041b549;\n            }\n            if (uVar1 == 0x22) {\n                fcn.0044b575(param_1, 0x4497c4, 0xc);\n                param_1 = param_1 + 6;\n            }\n            else {\n                if (uVar1 == 0xffffffb0) {\n                    uVar2 = 0x4497d4;\n                }\n                else {\n                    if (uVar1 != 0x26) {\n                        if (uVar1 == 10) {\n                            uVar2 = 0x4497ec;\n                            goto code_r0x0041b549;\n                        }\n                        *param_1 = uVar1;\n                        param_1 = param_1 + 1;\n                        goto code_r0x0041b55b;\n                    }\n                    uVar2 = 0x4497e0;\n                }\n                fcn.0044b575(param_1, uVar2, 10);\n                param_1 = param_1 + 5;\n            }\n        }\ncode_r0x0041b55b:\n        if (*in_EAX == 0) {\n            return;\n        }\n        in_EAX = in_EAX + 1;\n    } while( true );\n}\n",
        "token_count": 435
    },
    "0041ba9f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041ba9f(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.00449b20();\n    if (iVar1 == 0) {\n        uVar2 = fcn.0041bc38(2);\n        fcn.0041bc4a(uVar2);\n        iVar1 = *0x4514fc;\n        if (*0x4514fc != 0) {\n            while (arg_8h != 0) {\n                iVar3 = fcn.0044b5cf(arg_8h, *(iVar1 + 0x10));\n                if ((iVar3 == 0) || (iVar1 = *(iVar1 + 0xc),  iVar1 == 0)) break;\n            }\n        }\n        fcn.0041bc58(uVar2);\n    }\n    else {\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 223
    },
    "0041bafd": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041bafd(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (param_2 != 0) {\n        if (*0x4514fc == param_2) {\n            *0x4514fc = *(param_2 + 0xc);\n            return;\n        }\n        iVar1 = *0x4514fc;\n        if (*0x4514fc != 0) {\n            do {\n                iVar2 = iVar1;\n                if (*(iVar2 + 0xc) == 0) break;\n                iVar1 = *(iVar2 + 0xc);\n            } while (iVar1 != param_2);\n            if (*(iVar2 + 0xc) == param_2) {\n                *(iVar2 + 0xc) = *(param_2 + 0xc);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 204
    },
    "0041bbec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041bbec(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x44f048 == 0) {\n        iVar1 = 0x4440ec;\n        if (*0x44f00c == 0) {\n            iVar1 = 0x4440c8;\n        }\n        fcn.0044b575(0x44f040, iVar1, 8);\n        fcn.0044b575(0x44f04c, iVar1 + 0xc, 0x18);\n        *0x44f048 = *(iVar1 + 8);\n    }\n    // WARNING: Could not recover jumptable at 0x0041bc32. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x44f040)();\n    return;\n}\n",
        "token_count": 184
    },
    "0041bc38": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0041bc38(void)\n\n{\n    uint uVar1;\n    \n    if (*0x44f00c == 0) {\n        return 0;\n    }\n    // WARNING: Could not recover jumptable at 0x0041bc44. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar1 = (**0x44f048)();\n    return uVar1;\n}\n",
        "token_count": 93
    },
    "0041bc4a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041bc4a(int32_t param_1)\n\n{\n    if (param_1 != 0) {\n    // WARNING: Could not recover jumptable at 0x0041bc51. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**0x44f050)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 80
    },
    "0041bc58": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041bc58(int32_t param_1)\n\n{\n    if (param_1 != 0) {\n    // WARNING: Could not recover jumptable at 0x0041bc5f. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**0x44f058)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 80
    },
    "0041be90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0041be90(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = (*_fcn.0044f030)(param_1);\n    fcn.0041b90c();\n    if (*0x451610 != 0) {\n        iVar2 = *0x451500 + iVar1 >> 0x1f;\n        if ((iVar2 < *0x45160c) || ((iVar2 <= *0x45160c && (*0x451500 + iVar1 < *0x451608)))) {\n            *0x451624 = 0;\n        }\n        else {\n            *0x451624 = 1;\n            fcn.0041be3b(iVar1);\n        }\n    }\n    iVar2 = (**0x44f020)(iVar1);\n    if (iVar2 != 0) {\n        iVar1 = (*_fcn.0044f02c)(iVar2);\n        fcn.0041b8f2();\n        fcn.0041b8f2();\n    }\n    *param_2 = iVar2;\n    return iVar1;\n}\n",
        "token_count": 261
    },
    "0041bf1f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041bf1f(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = arg_8h;\n    if (arg_8h - 1U < 0x7ffffeff) {\n        if (*0x44f008 == 0) {\n            arg_8h = (**0x44f020)(arg_8h);\n        }\n        else {\n            fcn.0041bc4a(*0x451600);\n            fcn.0041be90(iVar1, &arg_8h);\n            fcn.0041bc58(*0x451600);\n        }\n    }\n    else {\n        arg_8h = 0;\n    }\n    return arg_8h;\n}\n",
        "token_count": 169
    },
    "0041bf86": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0041bf86(uint *param_1)\n\n{\n    uint *puVar1;\n    int32_t unaff_ESI;\n    uint var_4h;\n    \n    fcn.0041bc4a(*0x451600);\n    puVar1 = *0x45161c;\n    if ((*0x451620 == 0) || (*0x44f0a4 < unaff_ESI)) {\n        if (*0x44f008 == 0) {\n            fcn.0041bc58(*0x451600);\n            puVar1 = (**0x44f020)();\n            return puVar1;\n        }\n        fcn.0041b90c();\n        fcn.0041be90();\n        if (param_1 != NULL) {\n            fcn.0041b8f2();\n        }\n    }\n    else {\n        *0x45161c = **0x45161c;\n        *0x451620 = *0x451620 + -1;\n        fcn.0041b8f2();\n        fcn.0041b90c();\n        param_1 = puVar1;\n    }\n    fcn.0041bc58(*0x451600);\n    return param_1;\n}\n",
        "token_count": 275
    },
    "0041c02b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041c02b(void)\n\n{\n    uint *unaff_ESI;\n    \n    if (unaff_ESI != NULL) {\n        if ((*0x44f0a0 <= unaff_ESI) && (unaff_ESI < *0x451618)) {\n            fcn.0041bc4a(*0x451600);\n            *unaff_ESI = *0x45161c;\n            *0x451620 = *0x451620 + 1;\n            *0x45161c = unaff_ESI;\n            fcn.0041b8f2();\n            fcn.0041bc58(*0x451600);\n            return;\n        }\n        if (*0x44f008 != 0) {\n            (*_fcn.0044f02c)();\n            fcn.0041bc4a(*0x451600);\n            fcn.0041b8f2();\n            fcn.0041b8f2();\n            fcn.0041b8f2();\n            (*_fcn.0044f024)();\n            fcn.0041bc58(*0x451600);\n            return;\n        }\n        (*_fcn.0044f024)();\n    }\n    return;\n}\n",
        "token_count": 268
    },
    "0041c110": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041c110(int32_t param_1)\n\n{\n    if (param_1 != 0) {\n        if (*0x44f008 != 0) {\n            fcn.0041bc4a(*0x451600);\n            (*_fcn.0044f02c)(param_1);\n            fcn.0041b8f2();\n            fcn.0041b8f2();\n            (*_fcn.0044f024)(param_1);\n            fcn.0041bc58(*0x451600);\n            return;\n        }\n        (*_fcn.0044f024)(param_1);\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "0041c16b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041c16b(int32_t param_1, uint *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    ulong uVar3;\n    \n    if (param_1 != 0) {\n        if (*(param_1 + 0x1e0) != NULL) {\n            piVar1 = *(param_1 + 0x1e0);\n            iVar2 = fcn.0041c0f1(param_2);\n            *piVar1 = *piVar1 + iVar2;\n            return;\n        }\n        uVar3 = fcn.0041c0d6();\n        param_2 = uVar3 >> 0x20;\n        if (uVar3 != 0) {\n            *param_2 = *(extraout_ECX + 0x100);\n            *(extraout_ECX + 0xec) = *(extraout_ECX + 0xec) + -1;\n            *(extraout_ECX + 0x100) = param_2;\n            return;\n        }\n    }\n    fcn.0041c110(param_2);\n    return;\n}\n",
        "token_count": 261
    },
    "0041c1b7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041c1b7(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t unaff_EBX;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        iVar1 = fcn.0041bf1f(unaff_EBX);\n        return iVar1;\n    }\n    if (unaff_EBX < 1) {\n        fcn.0041c110(arg_8h);\n        return 0;\n    }\n    if (0x7ffffeff < unaff_EBX) {\n        return 0;\n    }\n    iVar1 = (*_fcn.0044f02c)(arg_8h);\n    iVar2 = (*_fcn.0044f030)();\n    if (iVar1 == iVar2) {\n        return arg_8h;\n    }\n    if (*0x44f008 == 0) {\n        iVar1 = (*_fcn.0044f028)(arg_8h, iVar2);\n        return iVar1;\n    }\n    fcn.0041bc4a(*0x451600);\n    fcn.0041b90c();\n    uVar3 = (*0x451500 - iVar1) + iVar2;\n    iVar4 = uVar3 >> 0x1f;\n    if ((*0x45160c <= iVar4) && ((*0x45160c < iVar4 || (*0x451608 <= uVar3)))) {\n        fcn.0041be3b(iVar2 - iVar1);\n    }\n    iVar1 = (*_fcn.0044f028)(arg_8h, iVar2);\n    if (iVar1 == 0) {\n        if (*0x451610 == 0) goto code_r0x0041c2a1;\n        fcn.0041be3b();\n        iVar1 = (*_fcn.0044f028)(arg_8h, iVar2);\n        if (iVar1 == 0) goto code_r0x0041c2a1;\n    }\n    (*_fcn.0044f02c)(iVar1);\n    fcn.0041b8f2();\ncode_r0x0041c2a1:\n    fcn.0041bc58(*0x451600);\n    return iVar1;\n}\n",
        "token_count": 525
    },
    "0041c31d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0041c31d(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t unaff_ESI;\n    \n    if (unaff_ESI != 0) {\n        if (*(unaff_ESI + 0x1e) != '\\0') {\n            return 0;\n        }\n        if (*(unaff_ESI + 0xea) != '\\0') {\n            if (*(unaff_ESI + 0xe8) < param_1) {\n                *(unaff_ESI + 0xf8) = *(unaff_ESI + 0xf8) + 1;\n            }\n            else {\n                piVar2 = *(unaff_ESI + 0x100);\n                if (piVar2 != NULL) {\n                    *(unaff_ESI + 0x100) = *piVar2;\n                    piVar1 = unaff_ESI + 0xec;\n                    *piVar1 = *piVar1 + 1;\n                    *(unaff_ESI + 0xf4) = *(unaff_ESI + 0xf4) + 1;\n                    if (*piVar1 <= *(unaff_ESI + 0xf0)) {\n                        return piVar2;\n                    }\n                    *(unaff_ESI + 0xf0) = *piVar1;\n                    return piVar2;\n                }\n                *(unaff_ESI + 0xfc) = *(unaff_ESI + 0xfc) + 1;\n            }\n        }\n    }\n    iVar3 = fcn.0041bf1f(param_1);\n    if ((iVar3 == 0) && (unaff_ESI != 0)) {\n        *(unaff_ESI + 0x1e) = 1;\n    }\n    return iVar3;\n}\n",
        "token_count": 408
    },
    "0041c392": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c392(int32_t param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    ulong uVar2;\n    \n    if (*(param_1 + 0x1e) == '\\0') {\n        if (in_EAX == 0) {\n            fcn.0041c31d(param_2);\n        }\n        else {\n            uVar2 = fcn.0041c0d6();\n            iVar1 = uVar2 >> 0x20;\n            if (uVar2 == 0) {\n                iVar1 = fcn.0041c2c2();\n                if (iVar1 == 0) {\n                    *(param_1 + 0x1e) = 1;\n                }\n            }\n            else if ((*(param_1 + 0xe8) < iVar1) && (iVar1 = fcn.0041c31d(iVar1),  iVar1 != 0)) {\n                fcn.0044b575(iVar1);\n                fcn.0041c16b(param_1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 254
    },
    "0041c430": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0041c430(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (param_1 == 0) {\n        return 0;\n    }\n    iVar1 = fcn.0041d157();\n    iVar2 = fcn.0041c31d(iVar1 + 1);\n    if (iVar2 != 0) {\n        fcn.0044b575(iVar2, param_1, iVar1 + 1);\n    }\n    return iVar2;\n}\n",
        "token_count": 123
    },
    "0041c46a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0041c46a(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EDI;\n    \n    if (param_1 == 0) {\n        return 0;\n    }\n    iVar1 = fcn.0041c31d(unaff_EDI + 1);\n    if (iVar1 != 0) {\n        fcn.0044b575(iVar1, param_1);\n        *(iVar1 + unaff_EDI) = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 123
    },
    "0041c4c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.0041c4c4(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t unaff_ESI;\n    \n    if (unaff_ESI == 0) {\n        uVar1 = 0xff;\n    }\n    else {\n        if ((*(unaff_ESI + 0x1e) != '\\0') || (param_1 == 0xc0a)) {\n            fcn.0041d171(7, 0);\n            *(unaff_ESI + 0x1e) = 0;\n            param_1 = 7;\n        }\n        uVar1 = *(unaff_ESI + 0x18);\n    }\n    return uVar1 & param_1;\n}\n",
        "token_count": 167
    },
    "0041c545": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nvoid __cdecl fcn.0041c545(uint arg_8h, int32_t arg_ch, char *arg_10h, int32_t *arg_14h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char *pcVar4;\n    uchar uStack404;\n    \n    if (*arg_10h != '\\0') {\n        pcVar3 = arg_10h;\n        if (*arg_10h != '%') {\n            iVar2 = 1;\n            while( true ) {\n                pcVar3 = pcVar3 + 1;\n                cVar1 = *pcVar3;\n                if ((cVar1 == '%') || (cVar1 == '\\0')) break;\n                iVar2 = iVar2 + 1;\n            }\n            fcn.0041cc69(arg_10h, iVar2);\n            if (cVar1 == '\\0') {\n                return;\n            }\n        }\n        pcVar3 = pcVar3 + 1;\n        cVar1 = *pcVar3;\n        if (cVar1 == '\\0') {\n            fcn.0041cc69(0x44a2c4, 1);\n        }\n        else {\n            do {\n                if (((((cVar1 != ' ') && (cVar1 != '!')) && (cVar1 != '#')) && ((cVar1 != '+' && (cVar1 != '-')))) &&\n                   (cVar1 != '0')) break;\n                pcVar3 = pcVar3 + 1;\n                cVar1 = *pcVar3;\n            } while (cVar1 != '\\0');\n            if (cVar1 == '*') {\n                pcVar3 = pcVar3 + 1;\n                cVar1 = *pcVar3;\n            }\n            else {\n                while (('/' < cVar1 && (cVar1 < ':'))) {\n                    pcVar3 = pcVar3 + 1;\n                    cVar1 = *pcVar3;\n                }\n            }\n            if (cVar1 == '.') {\n                pcVar4 = pcVar3 + 1;\n                cVar1 = *pcVar4;\n                if (cVar1 == '*') {\n                    cVar1 = pcVar3[2];\n                    pcVar3 = pcVar3 + 2;\n                }\n                else {\n                    while ((pcVar3 = pcVar4,  '/' < cVar1 && (cVar1 < ':'))) {\n                        pcVar4 = pcVar4 + 1;\n                        cVar1 = *pcVar4;\n                    }\n                }\n            }\n            if ((cVar1 == 'l') && (cVar1 = pcVar3[1],  cVar1 == 'l')) {\n                cVar1 = pcVar3[2];\n            }\n            pcVar3 = 0x444140;\n            uStack404 = 0;\n            iVar2 = 0;\n            do {\n                if (cVar1 == *pcVar3) {\n                    if ((arg_ch == 0) && ((*(iVar2 * 6 + 0x444142) & 2) != 0)) {\n                        return;\n                    }\n                    uStack404 = *(iVar2 * 6 + 0x444143);\n                    break;\n                }\n                pcVar3 = pcVar3 + 6;\n                iVar2 = iVar2 + 1;\n            } while (pcVar3 < 0x4441b2);\n            switch(uStack404) {\n            case 1:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 2:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 3:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 4:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 5:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 6:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 7:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 8:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 9:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 10:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xb:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xc:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xd:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xe:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xf:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x10:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 1163
    },
    "null": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "0041cc69": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041cc69(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    \n    if ((*(in_EAX + 0x18) | *(in_EAX + 0x1a)) == 0) {\n        if (arg_ch < 0) {\n            arg_ch = fcn.0041d157();\n        }\n        if ((arg_ch != 0) && (arg_8h != 0)) {\n            if (*(in_EAX + 0x10) <= *(in_EAX + 0xc) + arg_ch) {\n                if (*(in_EAX + 0x19) == '\\0') {\n                    arg_ch = (*(in_EAX + 0x10) - *(in_EAX + 0xc)) + -1;\n                    *(in_EAX + 0x1a) = 1;\n                    if (arg_ch < 1) {\n                        return;\n                    }\n                }\n                else {\n                    uVar5 = -(*(in_EAX + 8) != *(in_EAX + 4)) & *(in_EAX + 8);\n                    uVar1 = arg_ch + 1;\n                    uVar2 = *(in_EAX + 0xc);\n                    iVar3 = (uVar1 >> 0x1f) + (uVar2 >> 0x1f) + CARRY4(uVar1, uVar2);\n                    iVar4 = *(in_EAX + 0x14) >> 0x1f;\n                    if ((iVar4 <= iVar3) && ((iVar4 < iVar3 || (*(in_EAX + 0x14) < uVar1 + uVar2)))) {\n                        fcn.0041cdb7();\n                        *(in_EAX + 0x1a) = 1;\n                        return;\n                    }\n                    *(in_EAX + 0x10) = uVar1 + uVar2;\n                    if (*(in_EAX + 0x19) == '\\x01') {\n                        iVar3 = fcn.0041c392();\n                    }\n                    else {\n                        iVar3 = fcn.0041c2c2(uVar5);\n                    }\n                    if (iVar3 == 0) {\n                        *(in_EAX + 0x18) = 1;\n                        fcn.0041cdb7();\n                        return;\n                    }\n                    if (uVar5 == 0) {\n                        fcn.0044b575(iVar3, *(in_EAX + 8), *(in_EAX + 0xc));\n                    }\n                    *(in_EAX + 8) = iVar3;\n                }\n            }\n            fcn.0044b575(*(in_EAX + 8) + *(in_EAX + 0xc), arg_8h, arg_ch);\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + arg_ch;\n        }\n    }\n    return;\n}\n",
        "token_count": 677
    },
    "0041cddb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041cddb(uint arg_8h, uint arg_ch)\n\n{\n    int32_t unaff_ESI;\n    uint var_180h;\n    uint var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    char var_4h;\n    uint var_3h;\n    \n    var_10h = 0;\n    var_18h = &var_180h;\n    var_8h = *(unaff_ESI + 0x48);\n    var_ch = 0x15e;\n    var_3h._0_1_ = 1;\n    var_3h._1_1_ = 0;\n    var_4h = '\\0';\n    var_14h = var_18h;\n    fcn.0041c545(&var_1ch, 1, arg_8h, arg_ch);\n    fcn.0041cd5b();\n    if (var_4h != '\\0') {\n        *(unaff_ESI + 0x1e) = 1;\n    }\n    return;\n}\n",
        "token_count": 303
    },
    "0041cf9b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041cf9b(uint param_1, uint param_2)\n\n{\n    if (_fcn.0044f0dc != 0) {\n        fcn.0041cf3c(param_1, param_2, &stack0x0000000c);\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "0041d095": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041d095(int32_t param_1)\n\n{\n    uchar uVar1;\n    uchar *in_EAX;\n    uint uVar2;\n    \n    uVar2 = fcn.0041bc38(5);\n    fcn.0041bc4a(uVar2);\n    while (param_1 != 0) {\n        param_1 = param_1 + -1;\n        uVar1 = fcn.0041cfbc();\n        *in_EAX = uVar1;\n        in_EAX = in_EAX + 1;\n    }\n    fcn.0041bc58(uVar2);\n    return;\n}\n",
        "token_count": 141
    },
    "0041d127": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041d127(uint8_t *param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (param_2 < 0) {\n        puVar2 = 0xffffffff;\n    }\n    else {\n        puVar2 = param_1 + param_2;\n    }\n    while ((*param_1 != 0 && (param_1 < puVar2))) {\n        uVar1 = *param_1;\n        param_1 = param_1 + 1;\n        if (0xbf < uVar1) {\n            for (; (*param_1 & 0xc0) == 0x80; param_1 = param_1 + 1) {\n            }\n        }\n        iVar3 = iVar3 + 1;\n    }\n    return iVar3;\n}\n",
        "token_count": 207
    },
    "0041d157": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nchar * __fastcall fcn.0041d157(char *param_1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    if (param_1 != NULL) {\n        cVar1 = *param_1;\n        pcVar2 = param_1;\n        while (cVar1 != '\\0') {\n            pcVar2 = pcVar2 + 1;\n            cVar1 = *pcVar2;\n        }\n        return pcVar2 - param_1 & 0x3fffffff;\n    }\n    return param_1;\n}\n",
        "token_count": 122
    },
    "0041d171": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041d171(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint arg_8h;\n    \n    if (in_EAX != 0) {\n        if (*(in_EAX + 0xd4) == 0) {\n            iVar1 = fcn.0042980e();\n            *(in_EAX + 0xd4) = iVar1;\n            if (iVar1 == 0) {\n                return;\n            }\n        }\n        *(in_EAX + 0x14) = param_1;\n        if (param_2 == 0) {\n            if (*(in_EAX + 0xd4) != 0) {\n                fcn.0042921c();\n            }\n        }\n        else {\n            arg_8h = fcn.0041cddb(param_2, &stack0x0000000c);\n            if (*(in_EAX + 0xd4) != 0) {\n                fcn.004293c1(arg_8h, 1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 246
    },
    "0041d1e3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041d1e3(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *unaff_EDI;\n    \n    iVar1 = *unaff_EDI;\n    iVar2 = fcn.0041cddb(param_1, &stack0x00000008);\n    if (*(iVar1 + 0x21) == '\\0') {\n        unaff_EDI[0x10] = unaff_EDI[0x10] + 1;\n        fcn.0041c16b(iVar1, unaff_EDI[2]);\n        unaff_EDI[2] = iVar2;\n        unaff_EDI[1] = 1;\n    }\n    else {\n        fcn.0041c16b(iVar1, iVar2);\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "0041d223": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041d223(char *param_1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    \n    if (param_1 == NULL) {\n        return -1;\n    }\n    cVar1 = *param_1;\n    if ((cVar1 != '\\\"') && (cVar1 != '\\'')) {\n        if (cVar1 == '[') {\n            cVar1 = ']';\n        }\n        else if (cVar1 != '`') {\n            return -1;\n        }\n    }\n    pcVar4 = param_1 + 1;\n    iVar3 = 0;\n    if (*pcVar4 != '\\0') {\n        pcVar2 = param_1 + 2;\n        do {\n            if (*pcVar4 == cVar1) {\n                if (*pcVar2 != cVar1) break;\n                param_1[iVar3] = cVar1;\n                pcVar2 = pcVar2 + 1;\n                pcVar4 = pcVar4 + 1;\n            }\n            else {\n                param_1[iVar3] = *pcVar4;\n            }\n            iVar3 = iVar3 + 1;\n            pcVar2 = pcVar2 + 1;\n            pcVar4 = pcVar4 + 1;\n        } while (*pcVar4 != '\\0');\n    }\n    param_1[iVar3] = '\\0';\n    return iVar3;\n}\n",
        "token_count": 322
    },
    "0041d301": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.0041d301(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    uint8_t *puVar1;\n    uchar uVar2;\n    uint8_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t in_EDX;\n    uint8_t *puVar6;\n    int32_t iVar7;\n    uint8_t *puVar8;\n    bool bVar9;\n    int64_t iVar10;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar3 = 0;\n    iVar4 = 0;\n    var_8h = 0;\n    var_ch = 0;\n    iVar7 = (arg_ch != '\\x01') + 1;\n    puVar6 = in_EAX + in_EDX;\n    if (arg_ch == '\\x03') {\n        in_EAX = in_EAX + 1;\n    }\n    puVar8 = in_EAX;\n    if (in_EAX < puVar6) {\n        do {\n            if ((*(*in_EAX + 0x443e90) & 1) == 0) break;\n            in_EAX = in_EAX + iVar7;\n        } while (in_EAX < puVar6);\n        puVar8 = in_EAX;\n        if (in_EAX < puVar6) {\n            if (*in_EAX == 0x2d) {\n                var_8h = 1;\n            }\n            else if (*in_EAX != 0x2b) goto code_r0x0041d36a;\n            in_EAX = in_EAX + iVar7;\n            puVar8 = in_EAX;\n        }\n    }\ncode_r0x0041d36a:\n    for (; (in_EAX < puVar6 && (*in_EAX == 0x30)); in_EAX = in_EAX + iVar7) {\n    }\n    arg_ch = 0;\n    for (puVar1 = in_EAX; (puVar1 < puVar6 && (var_ch = *puVar1,  var_ch - 0x30U < 10)); puVar1 = puVar1 + iVar7) {\n        iVar10 = fcn.0044b8cd();\n        uVar5 = iVar10 + var_ch;\n        iVar4 = uVar5 - 0x30;\n        iVar3 = (iVar10 + var_ch >> 0x20) - (uVar5 < 0x30);\n        arg_ch = arg_ch + iVar7;\n    }\n    if (var_8h != 0) {\n        bVar9 = iVar4 != 0;\n        iVar4 = -iVar4;\n        iVar3 = -(iVar3 + bVar9);\n    }\n    *arg_8h = iVar4;\n    iVar4 = 0;\n    arg_8h[1] = iVar3;\n    if ((((var_ch == 0) || (puVar6 <= in_EAX + arg_ch)) && ((arg_ch != 0 || (puVar8 != in_EAX)))) &&\n       (arg_ch <= iVar7 * 0x13)) {\n        if (arg_ch < iVar7 * 0x13) {\n            uVar2 = 0;\n        }\n        else {\n            iVar3 = 0;\n            puVar6 = in_EAX;\n            do {\n                if (0x11 < iVar4) break;\n                iVar3 = (*puVar6 - *(iVar4 + 0x44a2d8)) * 10;\n                iVar4 = iVar4 + 1;\n                puVar6 = puVar6 + iVar7;\n            } while (iVar3 == 0);\n            if (((iVar3 == 0) && (iVar3 = in_EAX[iVar7 * 0x12] + -0x38,  iVar3 == 0)) && (var_8h == 0)) {\n                uVar2 = 2;\n            }\n            else {\n                uVar2 = var_8h <= iVar3;\n            }\n        }\n    }\n    else {\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 939
    },
    "0041d442": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041d442(uint32_t *arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    char *in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    bool bVar5;\n    int64_t iVar6;\n    uint32_t var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    iVar4 = 0;\n    iVar6 = 0;\n    var_4h = 0;\n    if (*in_EAX == '-') {\n        var_4h = 1;\n    }\n    else if (*in_EAX != '+') goto code_r0x0041d46b;\n    do {\n        in_EAX = in_EAX + 1;\ncode_r0x0041d46b:\n    } while (*in_EAX == '0');\n    do {\n        cVar1 = in_EAX[iVar4];\n        if (9 < cVar1 - 0x30U) break;\n        iVar6 = fcn.0044b8cd();\n        iVar6 = iVar6 + (cVar1 - 0x30U);\n        iVar4 = iVar4 + 1;\n    } while (iVar4 < 0xb);\n    uVar3 = iVar6 >> 0x20;\n    var_18h = iVar6;\n    if (iVar4 < 0xb) {\n        uVar2 = var_18h < var_4h;\n        bVar5 = uVar3 - uVar2 < 0;\n        if ((bVar5) ||\n           ((uVar3 == uVar2 || (SBORROW4(uVar3, uVar2) != false) != bVar5 && (var_18h - var_4h < 0x80000000)))) {\n            if (var_4h != 0) {\n                var_18h = -var_18h;\n            }\n            *arg_8h = var_18h;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 459
    },
    "0041d91f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041d91f(int32_t param_1)\n\n{\n    if (0 < param_1) {\n        do {\n            param_1 = param_1 + -1;\n        } while (0 < param_1);\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "0041dace": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0041dace(uint param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t *unaff_ESI;\n    \n    if (unaff_ESI[3] == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.0041d91f();\n        uVar1 = uVar1 % *unaff_ESI;\n    }\n    iVar2 = fcn.0041da36(param_1, uVar1);\n    if (iVar2 != 0) {\n        return *(iVar2 + 8);\n    }\n    return 0;\n}\n",
        "token_count": 146
    },
    "0041db04": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041db04(uint arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint unaff_EDI;\n    uint32_t var_4h;\n    \n    uVar1 = *in_EAX;\n    if (uVar1 == 0) {\n        var_4h = 0;\n    }\n    else {\n        var_4h = fcn.0041d91f(arg_8h);\n        var_4h = var_4h % uVar1;\n    }\n    iVar2 = fcn.0041da36();\n    if (iVar2 == 0) {\n        if (arg_ch != 0) {\n            iVar2 = fcn.0041bf1f(0x14);\n            if (iVar2 == 0) {\n                return arg_ch;\n            }\n            *(iVar2 + 0x10) = arg_8h;\n            *(iVar2 + 0xc) = unaff_EDI;\n            *(iVar2 + 8) = arg_ch;\n            in_EAX[1] = in_EAX[1] + 1;\n            if (((9 < in_EAX[1]) && (*in_EAX * 2 < in_EAX[1])) && (iVar2 = fcn.0041d99b(),  iVar2 != 0)) {\n                fcn.0041d91f(arg_8h);\n            }\n            fcn.0041d949();\n        }\n        iVar3 = 0;\n    }\n    else {\n        iVar3 = *(iVar2 + 8);\n        if (arg_ch == 0) {\n            fcn.0041da80(var_4h);\n        }\n        else {\n            *(iVar2 + 8) = arg_ch;\n            *(iVar2 + 0xc) = unaff_EDI;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 435
    },
    "0041dbd7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool fcn.0041dbd7(void)\n\n{\n    uint var_114h;\n    int32_t var_104h;\n    \n    if (*0x451628 == 0) {\n        var_114h = 0x114;\n        (*_fcn.0044312c)(&var_114h);\n        *0x451628 = (var_104h == 2) + 1;\n    }\n    return *0x451628 == 2;\n}\n",
        "token_count": 103
    },
    "0041de98": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041de98(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    iVar4 = arg_8h;\n    iVar1 = fcn.0041ddac(arg_14h, arg_18h);\n    if (iVar1 == 0) {\n        iVar1 = arg_10h;\n        iVar5 = arg_ch;\n        if (0 < arg_10h) {\n            do {\n                iVar2 = (*_fcn.004430f8)(*(iVar4 + 8), iVar5, iVar1, &arg_8h, 0);\n                if ((iVar2 == 0) || (arg_8h == 0)) break;\n                iVar1 = iVar1 - arg_8h;\n                iVar5 = iVar5 + arg_8h;\n            } while (0 < iVar1);\n            if (0 < iVar1) {\n                uVar3 = (*_fcn.0044310c)();\n                *(iVar4 + 0x10) = uVar3;\n                goto code_r0x0041deee;\n            }\n        }\n        iVar4 = 0;\n    }\n    else {\ncode_r0x0041deee:\n        iVar4 = ((*(iVar4 + 0x10) != 0x27) - 1 & 0xfffffd03) + 0x30a;\n    }\n    return iVar4;\n}\n",
        "token_count": 361
    },
    "0041e401": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041e401(uint param_1, int32_t param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    ppiVar1 = 0x45162c;\n    piVar2 = *0x45162c;\n    if (*0x45162c != NULL) {\n        do {\n            if (piVar2[0xf] == 0) {\n                if (*piVar2 != 0) {\n                    (**0x44f04c)(*piVar2);\n                }\n                iVar3 = 0;\n                if (0 < piVar2[0xc]) {\n                    do {\n                        (**0x443188)(*(piVar2[0xd] + 4 + iVar3 * 8));\n                        (**0x4430e4)(*(piVar2[0xd] + iVar3 * 8));\n                        iVar3 = iVar3 + 1;\n                    } while (iVar3 < piVar2[0xc]);\n                }\n                if (piVar2[4] != -1) {\n                    fcn.0041ddf3(piVar2 + 2);\n                }\n                if (param_2 != 0) {\n                    fcn.0041ed5a(param_1, piVar2[1], 0);\n                }\n                *ppiVar1 = piVar2[0x11];\n                fcn.0041c110(piVar2[0xd]);\n                fcn.0041c110(piVar2);\n            }\n            else {\n                ppiVar1 = piVar2 + 0x11;\n            }\n            piVar2 = *ppiVar1;\n        } while (*ppiVar1 != NULL);\n    }\n    return;\n}\n",
        "token_count": 382
    },
    "0041e811": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041e811(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t *arg_18h)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t arg_ch_00;\n    int32_t iStack24;\n    uint32_t uStack16;\n    int32_t iStack12;\n    \n    iStack24 = 0;\n    piVar2 = *(arg_8h + 0x18);\n    if (piVar2 == NULL) {\n        iStack24 = fcn.0041e4a1();\n        if (iStack24 != 0) {\n            return iStack24;\n        }\n        piVar2 = *(arg_8h + 0x18);\n    }\n    puVar1 = *piVar2;\n    fcn.0041bc4a(*puVar1);\n    if (puVar1[0xc] == arg_ch || puVar1[0xc] < arg_ch) {\n        arg_ch_00 = (arg_ch + 1) * arg_10h;\n        puVar1[0xb] = arg_10h;\n        iStack24 = fcn.0041dfa7(puVar1 + 2, &uStack16);\n        if (iStack24 == 0) {\n            iVar5 = arg_ch_00 >> 0x1f;\n            if ((iStack12 <= iVar5) && ((iStack12 < iVar5 || (uStack16 < arg_ch_00)))) {\n                if (arg_14h == 0) goto code_r0x0041e962;\n                iStack24 = fcn.0041df0b(puVar1 + 2, arg_ch_00, iVar5);\n                if (iStack24 != 0) goto code_r0x0041e87e;\n            }\n            iVar5 = fcn.0041c2c2(puVar1[0xd]);\n            if (iVar5 == 0) {\n                iStack24 = 0xc0a;\n            }\n            else {\n                puVar1[0xd] = iVar5;\n                while (puVar1[0xc] == arg_ch || puVar1[0xc] < arg_ch) {\n                    iVar5 = (**0x44318c)(puVar1[4], 0, 4, 0, arg_ch_00, 0);\n                    if ((iVar5 == 0) ||\n                       (uVar6 = (puVar1[0xc] * arg_10h) % *0x451cfc, \n                       iVar3 = (**0x443184)(iVar5, 6, 0, puVar1[0xc] * arg_10h - uVar6, arg_10h + uVar6),  iVar3 == 0))\n                    {\n                        uVar4 = (*_fcn.0044310c)();\n                        puVar1[0xe] = uVar4;\n                        iStack24 = 10;\n                        if (iVar5 != 0) {\n                            (**0x4430e4)(iVar5);\n                        }\n                        break;\n                    }\n                    *(puVar1[0xd] + 4 + puVar1[0xc] * 8) = iVar3;\n                    *(puVar1[0xd] + puVar1[0xc] * 8) = iVar5;\n                    puVar1[0xc] = puVar1[0xc] + 1;\n                }\n            }\n        }\n        else {\ncode_r0x0041e87e:\n            iStack24 = 0x130a;\n        }\ncode_r0x0041e962:\n        if (puVar1[0xc] == arg_ch || puVar1[0xc] < arg_ch) {\n            *arg_18h = 0;\n            goto code_r0x0041e989;\n        }\n    }\n    *arg_18h = (arg_ch * arg_10h) % *0x451cfc + *(puVar1[0xd] + 4 + arg_ch * 8);\ncode_r0x0041e989:\n    fcn.0041bc58(*puVar1);\n    return iStack24;\n}\n",
        "token_count": 966
    },
    "0041ebbb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041ebbb(uint arg_8h, uchar *arg_ch, uint *arg_10h, uint32_t arg_14h, int32_t *arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint unaff_EDI;\n    int32_t iVar5;\n    int32_t iStack292;\n    uchar *puStack276;\n    uchar auStack272 [268];\n    \n    arg_10h[2] = 0xffffffff;\n    puStack276 = arg_ch;\n    if (arg_ch == NULL) {\n        puStack276 = auStack272;\n        iVar1 = fcn.0041e9d3();\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n    }\n    iVar1 = fcn.0041e99c(puStack276);\n    if (iVar1 == 0) {\n        iVar1 = 7;\n    }\n    else {\n        iVar5 = (-((arg_14h & 2) != 0) & 0x40000000) + 0x80000000;\n        if ((arg_14h & 0x10) == 0) {\n            iStack292 = ((arg_14h & 4) != 0) + 3;\n        }\n        else {\n            iStack292 = 1;\n        }\n        iVar4 = (-((arg_14h & 8) != 0) & 0x4000082) + 0x80;\n        iVar2 = fcn.0041dbd7();\n        if (iVar2 == 0) {\n            iVar1 = (**0x443084)(iVar1, iVar5, 3, 0, iStack292, iVar4, 0);\n        }\n        else {\n            iVar1 = (*_fcn.004430f4)(iVar1, iVar5, 3, 0, iStack292, iVar4, 0);\n        }\n        if (iVar1 == -1) {\n            uVar3 = (*_fcn.0044310c)();\n            arg_10h[4] = uVar3;\n            fcn.0044b5ed(iStack292);\n            if (iVar4 == 0) {\n                iVar1 = fcn.0044a966(0x7c79);\n            }\n            else {\n                iVar1 = fcn.0041ebbb(arg_8h, arg_ch, arg_10h, arg_14h & 0xfffffff9 | 1, arg_18h);\n            }\n        }\n        else {\n            if (arg_18h != NULL) {\n                *arg_18h = (iVar4 != 0) + 1;\n            }\n            fcn.0044b531(arg_10h, 0, 0x24);\n            *arg_10h = 0x444220;\n            arg_10h[2] = iVar1;\n            arg_10h[4] = 0;\n            arg_10h[1] = arg_8h;\n            arg_10h[6] = 0;\n            arg_10h[7] = arg_ch;\n            uVar3 = fcn.0041ef94(arg_8h, unaff_EDI);\n            arg_10h[5] = uVar3;\n            fcn.0044b5ed(iStack292);\n            iVar1 = 0;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 768
    },
    "0041f22c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0041f22c(uint32_t *param_1)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    if (((param_1 != NULL) && (in_EAX < *param_1 || in_EAX == *param_1)) && (in_EAX != 0)) {\n        uVar1 = in_EAX - 1;\n        do {\n            if (param_1[2] == 0) {\n                if (*param_1 < 0xfa1) {\n                    return (1 << (uVar1 & 7) & *((uVar1 >> 3) + 0xc + param_1)) != 0;\n                }\n                uVar2 = uVar1 + 1;\n                while( true ) {\n                    if (param_1[uVar1 % 0x7d + 3] == 0) {\n                        return false;\n                    }\n                    if (param_1[uVar1 % 0x7d + 3] == uVar2) break;\n                    uVar1 = uVar1 % 0x7d + 1;\n                }\n                return true;\n            }\n            uVar2 = uVar1 / param_1[2];\n            uVar1 = uVar1 % param_1[2];\n            param_1 = param_1[uVar2 + 3];\n        } while (param_1 != NULL);\n    }\n    return false;\n}\n",
        "token_count": 326
    },
    "0041f2a9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041f2a9(uint32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t **ppuVar1;\n    uint8_t *puVar2;\n    int32_t arg_ch_00;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    \n    if (arg_8h == NULL) {\n        return 0;\n    }\n    arg_ch = arg_ch - 1;\n    if (*arg_8h < 0xfa1) {\ncode_r0x0041f2f9:\n        puVar2 = (arg_ch >> 3) + 0xc + arg_8h;\n        *puVar2 = *puVar2 | '\\x01' << (arg_ch & 7);\n        return 0;\n    }\n    do {\n        uVar6 = arg_8h[2];\n        if (uVar6 == 0) break;\n        uVar3 = arg_ch / uVar6;\n        arg_ch = arg_ch % uVar6;\n        ppuVar1 = arg_8h + uVar3 + 3;\n        if (*ppuVar1 == NULL) {\n            puVar4 = fcn.0041f216(uVar6);\n            *ppuVar1 = puVar4;\n            if (puVar4 == NULL) {\n                return 7;\n            }\n        }\n        arg_8h = *ppuVar1;\n    } while (4000 < *arg_8h);\n    if (*arg_8h < 0xfa1) goto code_r0x0041f2f9;\n    uVar3 = arg_ch % 0x7d;\n    arg_ch = arg_ch + 1;\n    uVar6 = arg_8h[uVar3 + 3];\n    if (uVar6 == 0) {\n        uVar6 = arg_8h[1];\n        if (uVar6 < 0x7c) goto code_r0x0041f32d;\n    }\n    else {\n        do {\n            if (uVar6 == arg_ch) {\n                return 0;\n            }\n            uVar3 = uVar3 + 1;\n            if (0x7c < uVar3) {\n                uVar3 = 0;\n            }\n            uVar6 = arg_8h[uVar3 + 3];\n        } while (uVar6 != 0);\n    }\n    uVar6 = arg_8h[1];\n    if (0x3d < uVar6) {\n        iVar5 = fcn.0041bf1f(500);\n        if (iVar5 == 0) {\n            return 7;\n        }\n        fcn.0044b575(iVar5, arg_8h + 3, 500);\n        uVar3 = 0;\n        fcn.0044b531(arg_8h + 3, 0, 500);\n        arg_8h[2] = (*arg_8h + 0x7c) / 0x7d;\n        uVar6 = fcn.0041f2a9(arg_8h, arg_ch);\n        do {\n            arg_ch_00 = *(iVar5 + uVar3 * 4);\n            if (arg_ch_00 != 0) {\n                uVar7 = fcn.0041f2a9(arg_8h, arg_ch_00);\n                uVar6 = uVar6 | uVar7;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < 0x7d);\n        fcn.0041c110(iVar5);\n        return uVar6;\n    }\ncode_r0x0041f32d:\n    arg_8h[1] = uVar6 + 1;\n    arg_8h[uVar3 + 3] = arg_ch;\n    return 0;\n}\n",
        "token_count": 882
    },
    "0041f3d2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041f3d2(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    if (param_1 != 0) {\n        if (*(param_1 + 8) != 0) {\n            puVar2 = param_1 + 0xc;\n            iVar1 = 0x7d;\n            do {\n                fcn.0041f3d2(*puVar2);\n                puVar2 = puVar2 + 1;\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        fcn.0041c110(param_1);\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "0041f63f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041f63f(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    *(param_1 + 0x14) = *(param_1 + 0x14) & 0xffdf;\n    if ((*(param_1 + 0x14) & 2) == 0) {\n        *(param_1 + 0x14) = *(param_1 + 0x14) | 2;\n        piVar1 = *(param_1 + 0x18);\n        iVar2 = *piVar1;\n        *(param_1 + 0x1c) = iVar2;\n        if (iVar2 != 0) {\n            *(iVar2 + 0x20) = param_1;\n        }\n        *piVar1 = param_1;\n        if (piVar1[1] == 0) {\n            piVar1[1] = param_1;\n        }\n        if ((piVar1[2] == 0) && ((*(param_1 + 0x14) & 4) == 0)) {\n            piVar1[2] = param_1;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 275
    },
    "0041f65a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041f65a(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    if ((*(in_EAX + 0x14) & 2) != 0) {\n        iVar2 = fcn.0041f402();\n        *(iVar2 + 0x14) = *(iVar2 + 0x14) & 0xfff9;\n        if (*(iVar2 + 0x16) == 0) {\n            iVar1 = *(iVar2 + 0x18);\n            if (*(iVar1 + 0x1c) != 0) {\n                if (*(iVar2 + 0xc) == 1) {\n                    *(iVar1 + 0x2c) = 0;\n                }\n                (*_fcn.0044f080)(*(iVar1 + 0x28), iVar2, 0);\n            }\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "0041f67a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041f67a(void)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t in_EAX;\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI[10] != 0) {\n        iVar2 = *unaff_ESI;\n        while (iVar2 != 0) {\n            puVar1 = iVar2 + 0xc;\n            iVar2 = *(iVar2 + 0x1c);\n            if (in_EAX <= *puVar1 && *puVar1 != in_EAX) {\n                fcn.0041f65a();\n            }\n        }\n        if ((in_EAX == 0) && (unaff_ESI[0xb] != NULL)) {\n            fcn.0044b531(*unaff_ESI[0xb]);\n            in_EAX = 1;\n        }\n        (**0x44f088)(unaff_ESI[10], in_EAX + 1);\n    }\n    return;\n}\n",
        "token_count": 224
    },
    "0041f79e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041f79e(uint *param_1, uint32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    \n    if (*0x450d7c != 0) {\n        param_2 = param_2 & 0xfffffff8;\n        if (in_EAX < 0x5b) {\n            *0x450d88 = in_EAX / 10 + 1;\n        }\n        else {\n            *0x450d88 = 10;\n        }\n        *0x450da0 = 0;\n        *0x450d9c = NULL;\n        puVar1 = NULL;\n        *0x450d80 = param_2;\n        *0x450d84 = in_EAX;\n        *0x450d8c = param_1;\n        *0x450d90 = param_1;\n        *0x450d98 = in_EAX;\n        if (in_EAX != 0) {\n            do {\n                *0x450d9c = param_1;\n                **0x450d9c = puVar1;\n                in_EAX = in_EAX + -1;\n                *0x450d90 = *0x450d9c + param_2;\n                puVar1 = *0x450d9c;\n                param_1 = *0x450d90;\n            } while (in_EAX != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 327
    },
    "0041f955": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041f955(void)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        if ((*(in_EAX + 8))[2] != 0) {\n            piVar1 = **(in_EAX + 8) + 0x10;\n            *piVar1 = *piVar1 + -1;\n        }\n        fcn.0041f8b9();\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "0041f977": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0041f977(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if ((*0x450d84 == 0) || (uVar1 = *0x450da0,  *0x450d80 < *(in_EAX + 4))) {\n        uVar1 = *0x451624;\n    }\n    return uVar1;\n}\n",
        "token_count": 89
    },
    "0041f996": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0041f996(void)\n\n{\n    uint32_t **ppuVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    uint *unaff_ESI;\n    uint32_t uVar5;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar5 = unaff_ESI[8] * 2;\n    if (uVar5 < 0x100) {\n        uVar5 = 0x100;\n    }\n    fcn.0041bc58(**unaff_ESI);\n    iVar3 = fcn.0041bf75(uVar5 << 2);\n    fcn.0041bc4a(**unaff_ESI);\n    if (iVar3 != 0) {\n        fcn.0044b531(iVar3, 0, uVar5 << 2);\n        var_4h = 0;\n        if (unaff_ESI[8] != 0) {\n            do {\n                puVar4 = *(unaff_ESI[9] + var_4h * 4);\n                while (puVar4 != NULL) {\n                    puVar2 = puVar4[1];\n                    ppuVar1 = iVar3 + (*puVar4 % uVar5) * 4;\n                    puVar4[1] = *ppuVar1;\n                    *ppuVar1 = puVar4;\n                    puVar4 = puVar2;\n                }\n                var_4h = var_4h + 1;\n            } while (var_4h < unaff_ESI[8]);\n        }\n        fcn.0041c110(unaff_ESI[9]);\n        unaff_ESI[9] = iVar3;\n        unaff_ESI[8] = uVar5;\n    }\n    return (-(unaff_ESI[9] != 0) & 0xfffffff9) + 7;\n}\n",
        "token_count": 431
    },
    "0041fae5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041fae5(uint32_t arg_8h)\n\n{\n    uint32_t *puVar1;\n    int32_t unaff_EBX;\n    uint32_t **ppuVar2;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    if (*(unaff_EBX + 0x20) != 0) {\n        do {\n            ppuVar2 = *(unaff_EBX + 0x24) + var_4h * 4;\n            while (puVar1 = *ppuVar2,  puVar1 != NULL) {\n                if (*puVar1 < arg_8h) {\n                    ppuVar2 = puVar1 + 1;\n                }\n                else {\n                    *(unaff_EBX + 0x1c) = *(unaff_EBX + 0x1c) + -1;\n                    *ppuVar2 = puVar1[1];\n                    fcn.0041fa41();\n                    fcn.0041f955();\n                }\n            }\n            var_4h = var_4h + 1;\n        } while (var_4h < *(unaff_EBX + 0x20));\n    }\n    return;\n}\n",
        "token_count": 272
    },
    "0041fcb2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041fcb2(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t extraout_ECX;\n    uint32_t uVar3;\n    uint32_t *extraout_ECX_00;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    uint32_t *puVar6;\n    ulong uVar7;\n    \n    puVar1 = *arg_8h;\n    puVar6 = NULL;\n    fcn.0041bc4a(*puVar1);\n    uVar3 = arg_8h[8];\n    if ((uVar3 == 0) || (puVar6 = *(arg_8h[9] + (arg_ch % uVar3) * 4),  puVar6 == NULL)) {\ncode_r0x0041fcf8:\n        if (arg_10h == 0) goto code_r0x0041fe1a;\n        uVar5 = arg_8h[7];\n        if (arg_10h == 1) {\n            if ((uVar5 - arg_8h[6] < puVar1[3]) && (uVar5 - arg_8h[6] < arg_8h[5])) {\n                uVar7 = fcn.0041f977();\n                uVar5 = uVar7 >> 0x20;\n                uVar3 = extraout_ECX;\n                if (uVar7 == 0) goto code_r0x0041fd31;\n            }\n        }\n        else {\ncode_r0x0041fd31:\n            if (uVar3 <= uVar5) {\n                iVar2 = fcn.0041f996();\n                if (iVar2 != 0) goto code_r0x0041fe21;\n            }\n            if ((arg_8h[2] == 0) || (puVar4 = puVar1[6],  puVar4 == NULL)) {\ncode_r0x0041fda5:\n                if (puVar6 == NULL) goto code_r0x0041fda9;\n            }\n            else {\n                if ((arg_8h[7] + 1U < arg_8h[4]) && (puVar1[4] < puVar1[1])) {\n                    iVar2 = fcn.0041f977();\n                    puVar4 = extraout_ECX_00;\n                    if (iVar2 == 0) goto code_r0x0041fda5;\n                }\n                fcn.0041fa94();\n                fcn.0041fa41();\n                if (*(puVar4[2] + 4) == arg_8h[1]) {\n                    puVar1[4] = puVar1[4] + (arg_8h[2] - *(puVar4[2] + 8));\n                    puVar6 = puVar4;\n                    goto code_r0x0041fda5;\n                }\n                fcn.0041f955();\ncode_r0x0041fda9:\n                fcn.0041bc58(*puVar1);\n                iVar2 = fcn.0041f811();\n                if (iVar2 == 0) {\n                    puVar6 = NULL;\n                }\n                else {\n                    puVar6 = arg_8h[1] + iVar2;\n                    if (arg_8h[2] != 0) {\n                        *(*arg_8h + 0x10) = *(*arg_8h + 0x10) + 1;\n                    }\n                }\n                fcn.0041bc4a(*puVar1);\n                if (puVar6 == NULL) goto code_r0x0041fe30;\n            }\n            uVar3 = arg_8h[8];\n            arg_8h[7] = arg_8h[7] + 1;\n            *puVar6 = arg_ch;\n            iVar2 = (arg_ch % uVar3) * 4;\n            puVar6[1] = *(iVar2 + arg_8h[9]);\n            puVar6[2] = arg_8h;\n            puVar6[4] = 0;\n            puVar6[3] = 0;\n            *(puVar6 - arg_8h[1]) = 0;\n            *(iVar2 + arg_8h[9]) = puVar6;\n        }\n    }\n    else {\n        do {\n            if (*puVar6 == arg_ch) break;\n            puVar6 = puVar6[1];\n        } while (puVar6 != NULL);\n        if (puVar6 == NULL) goto code_r0x0041fcf8;\ncode_r0x0041fe1a:\n        fcn.0041fa41();\n    }\ncode_r0x0041fe21:\n    if ((puVar6 != NULL) && (arg_8h[10] <= arg_ch && arg_ch != arg_8h[10])) {\n        arg_8h[10] = arg_ch;\n    }\ncode_r0x0041fe30:\n    fcn.0041bc58(*puVar1);\n    if (puVar6 == NULL) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = puVar6 - *(puVar6[2] + 4);\n    }\n    return iVar2;\n}\n",
        "token_count": 1191
    },
    "004200b2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004200b2(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t unaff_ESI;\n    int32_t *piVar5;\n    int32_t aiStack164 [40];\n    \n    fcn.0044b531(aiStack164, 0, 0xa0);\n    while (*(unaff_ESI + 8) != 0) {\n        iVar1 = *(unaff_ESI + 8);\n        *(unaff_ESI + 8) = *(iVar1 + 8);\n        *(iVar1 + 8) = 0;\n        iVar3 = 0;\n        if (aiStack164[0] != 0) {\n            piVar5 = aiStack164;\n            do {\n                iVar1 = fcn.00420056();\n                *piVar5 = 0;\n                iVar3 = iVar3 + 1;\n                piVar5 = aiStack164 + iVar3;\n            } while (*piVar5 != 0);\n        }\n        aiStack164[iVar3] = iVar1;\n    }\n    uVar4 = 0;\n    do {\n        uVar2 = fcn.00420056();\n        uVar4 = uVar4 + 1;\n    } while (uVar4 < 0x28);\n    *(unaff_ESI + 0xc) = 0;\n    *(unaff_ESI + 8) = uVar2;\n    *(unaff_ESI + 0x1a) = 1;\n    return;\n}\n",
        "token_count": 348
    },
    "004201c1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004201c1(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    \n    iVar1 = *(arg_8h + 8);\n    *(arg_8h + 8) = 0;\n    *(arg_8h + 0xc) = 0;\n    iVar3 = 1;\n    iVar2 = arg_8h;\n    while (iVar1 != 0) {\n        arg_8h = *(iVar1 + 8);\n        *(iVar1 + 0xc) = iVar2;\n        uVar4 = fcn.0042016e(&arg_8h, iVar3);\n        iVar2 = uVar4 >> 0x20;\n        *(iVar1 + 8) = uVar4;\n        iVar3 = iVar3 + 1;\n        iVar1 = arg_8h;\n    }\n    return iVar2;\n}\n",
        "token_count": 218
    },
    "0042020e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042020e(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x1a) == '\\0') {\n        fcn.004200b2();\n    }\n    if (*(in_EAX + 0x14) != 0) {\n        fcn.00420130(*(in_EAX + 0x14), &var_4h, &var_8h);\n        *(in_EAX + 0x14) = 0;\n        uVar1 = fcn.00420056();\n        *(in_EAX + 8) = uVar1;\n    }\n    return;\n}\n",
        "token_count": 163
    },
    "00420394": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00420394(uchar *arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *unaff_EDI;\n    uint var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_4h;\n    \n    *arg_8h = 0;\n    uVar1 = (**(*unaff_EDI + 0x18))();\n    if (((((uVar1 == 0) && (-1 < var_ch)) && ((0 < var_ch || (0xf < var_10h)))) &&\n        ((((uVar1 = fcn.004202f2(unaff_EDI, var_10h - 0x10, var_ch - (var_10h < 0x10), &var_4h),  uVar3 = var_4h, \n           uVar1 == 0 && (var_4h < arg_ch)) &&\n          (uVar1 = fcn.004202f2(unaff_EDI, var_10h - 0xc, var_ch - (var_10h < 0xc), &var_4h),  uVar1 == 0)) &&\n         ((uVar1 = fcn.0041b9e4(&var_18h, 8, var_10h - 8, var_ch - (var_10h < 8)),  uVar1 == 0 &&\n          (iVar2 = fcn.0044b5ab(&var_18h, 0x4442a0, 8),  iVar2 == 0)))))) &&\n       (uVar1 = fcn.0041b9e4(arg_8h, uVar3, (var_10h - uVar3) - 0x10, \n                             (var_ch - (var_10h < uVar3)) - (var_10h - uVar3 < 0x10)),  uVar1 == 0)) {\n        if (uVar3 != 0) {\n            do {\n                var_4h = var_4h - arg_8h[uVar1];\n                uVar1 = uVar1 + 1;\n            } while (uVar1 < uVar3);\n        }\n        if (var_4h != 0) {\n            uVar3 = 0;\n        }\n        arg_8h[uVar3] = 0;\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 571
    },
    "0042059d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0042059d(void)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    int32_t unaff_ESI;\n    ulong uVar7;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar4 = 0;\n    iVar2 = *(unaff_ESI + 0xa4);\n    var_8h = 0;\n    uVar6 = *(unaff_ESI + 0x80);\n    if (*(unaff_ESI + 0x7c) < *(unaff_ESI + 0x80)) {\n        uVar6 = *(unaff_ESI + 0x7c);\n    }\n    var_4h = 0;\n    if (0 < *(unaff_ESI + 0x60)) {\n        do {\n            puVar1 = *(unaff_ESI + 0x5c) + 8 + iVar4;\n            if ((*puVar1 | puVar1[1]) == 0) {\n                *puVar1 = *(unaff_ESI + 0x48);\n                puVar1[1] = *(unaff_ESI + 0x4c);\n            }\n            var_4h = var_4h + 1;\n            iVar4 = iVar4 + 0x30;\n        } while (var_4h < *(unaff_ESI + 0x60));\n    }\n    uVar7 = fcn.004204ab();\n    uVar5 = uVar7 >> 0x20;\n    *(unaff_ESI + 0x48) = uVar7;\n    *(unaff_ESI + 0x50) = uVar7;\n    *(unaff_ESI + 0x4c) = uVar5;\n    *(unaff_ESI + 0x54) = uVar5;\n    if (((*(unaff_ESI + 8) == '\\0') && (*(unaff_ESI + 5) != '\\x04')) &&\n       (uVar3 = (**(**(unaff_ESI + 0x3c) + 0x30))(*(unaff_ESI + 0x3c)),  (uVar3 & 0x200) == 0)) {\n        fcn.0044b531(iVar2, 0, 0xc);\n    }\n    else {\n        fcn.0044b575(iVar2, 0x4442a0, 8);\n        fcn.0041d7e6();\n    }\n    fcn.0041d095(4);\n    fcn.0041d7e6();\n    fcn.0041d7e6();\n    fcn.0041d7e6();\n    fcn.0041d7e6();\n    fcn.0044b531(iVar2 + 0x1c, 0, uVar6 - 0x1c);\n    var_4h = 0;\n    do {\n        if (*(unaff_ESI + 0x7c) <= var_4h) {\n            return var_8h;\n        }\n        var_8h = fcn.0041b9fe(iVar2, uVar6, *(unaff_ESI + 0x48), *(unaff_ESI + 0x4c));\n        puVar1 = unaff_ESI + 0x48;\n        uVar3 = *puVar1;\n        *puVar1 = *puVar1 + uVar6;\n        *(unaff_ESI + 0x4c) = *(unaff_ESI + 0x4c) + CARRY4(uVar3, uVar6);\n        var_4h = var_4h + uVar6;\n    } while (var_8h == 0);\n    return var_8h;\n}\n",
        "token_count": 871
    },
    "004206cb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004206cb(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    uint var_10h;\n    uint32_t var_8h;\n    \n    iVar5 = fcn.004204ab();\n    iVar4 = iVar5 >> 0x20;\n    *(in_EAX + 0x48) = iVar5;\n    iVar3 = iVar5 + 0x7a00 >> 0x20;\n    *(in_EAX + 0x4c) = iVar4;\n    if ((iVar3 < arg_10h) || ((iVar3 <= arg_10h && (iVar5 + 0x7a00 <= arg_ch)))) {\n        if ((arg_8h != 0) || ((iVar5 != *(in_EAX + 0x50) || (iVar4 != *(in_EAX + 0x54))))) {\n            iVar3 = fcn.0041b9e4(&var_10h, 8, iVar5);\n            if (iVar3 != 0) {\n                return iVar3;\n            }\n            iVar3 = fcn.0044b5ab(&var_10h, 0x4442a0, 8);\n            if (iVar3 != 0) goto code_r0x004206fa;\n        }\n        iVar3 = fcn.004202f2(*(in_EAX + 0x40), iVar5 + 8, iVar5 + 8 >> 0x20, arg_14h);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n        iVar3 = fcn.004202f2(*(in_EAX + 0x40), iVar5 + 0xc, iVar5 + 0xc >> 0x20, in_EAX + 0x30);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n        iVar3 = fcn.004202f2(*(in_EAX + 0x40), iVar5 + 0x10, iVar5 + 0x10 >> 0x20, arg_18h);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n        if ((*(in_EAX + 0x48) | *(in_EAX + 0x4c)) == 0) {\n            iVar3 = fcn.004202f2(*(in_EAX + 0x40), iVar5 + 0x14, iVar5 + 0x14 >> 0x20, &var_8h);\n            if (iVar3 != 0) {\n                return iVar3;\n            }\n            iVar3 = fcn.004202f2(*(in_EAX + 0x40), iVar5 + 0x18, iVar5 + 0x18 >> 0x20, &arg_10h);\n            if (iVar3 != 0) {\n                return iVar3;\n            }\n            if (arg_10h == 0) {\n                arg_10h = *(in_EAX + 0x80);\n            }\n            if ((((arg_10h < 0x200) || (var_8h < 0x20)) || (0x10000 < arg_10h)) ||\n               (((0x10000 < var_8h || ((arg_10h & arg_10h - 1) != 0)) || ((var_8h & var_8h - 1) != 0))))\n            goto code_r0x004206fa;\n            iVar3 = fcn.00421a06(&arg_10h, 0xffffffff);\n            *(in_EAX + 0x7c) = var_8h;\n        }\n        puVar1 = in_EAX + 0x48;\n        uVar2 = *puVar1;\n        *puVar1 = *puVar1 + *(in_EAX + 0x7c);\n        *(in_EAX + 0x4c) = *(in_EAX + 0x4c) + CARRY4(uVar2, *(in_EAX + 0x7c));\n    }\n    else {\ncode_r0x004206fa:\n        iVar3 = 0x65;\n    }\n    return iVar3;\n}\n",
        "token_count": 990
    },
    "00420c8f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00420c8f(void)\n\n{\n    uint8_t uVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t unaff_ESI;\n    \n    uVar1 = *(unaff_ESI + 0xf);\n    if ((uVar1 != 6) && (uVar1 != 0)) {\n        if (uVar1 < 2) {\n            if (*(unaff_ESI + 4) == '\\0') {\n                fcn.00420b59(0);\n            }\n        }\n        else {\n            fcn.00422ddf(unaff_ESI);\n        }\n    }\n    fcn.0041f3d2(*(unaff_ESI + 0x38));\n    *(unaff_ESI + 0x38) = 0;\n    fcn.00420a0d();\n    if (*(unaff_ESI + 0xac) == 0) {\n        if (*(unaff_ESI + 4) == '\\0') {\n            piVar2 = *(unaff_ESI + 0x3c);\n            if (*piVar2 == 0) {\n                uVar3 = 0;\n            }\n            else {\n                uVar3 = (**(*piVar2 + 0x30))(piVar2);\n            }\n            if (((uVar3 & 0x800) == 0) || ((*(unaff_ESI + 5) & 5) != 1)) {\n                fcn.0041b9d3();\n            }\n            iVar4 = fcn.00420348();\n            if ((iVar4 != 0) && (*(unaff_ESI + 0xf) == '\\x06')) {\n                *(unaff_ESI + 0x10) = 5;\n            }\n            *(unaff_ESI + 0x11) = 0;\n            *(unaff_ESI + 0xf) = 0;\n        }\n    }\n    else {\n        fcn.0042442a();\n        *(unaff_ESI + 0xf) = 0;\n    }\n    if (*(unaff_ESI + 0x28) != 0) {\n        fcn.004209ec();\n        *(unaff_ESI + 0x11) = *(unaff_ESI + 0xc);\n        *(unaff_ESI + 0xf) = 0;\n        *(unaff_ESI + 0x28) = 0;\n    }\n    *(unaff_ESI + 0x48) = 0;\n    *(unaff_ESI + 0x4c) = 0;\n    *(unaff_ESI + 0x50) = 0;\n    *(unaff_ESI + 0x54) = 0;\n    *(unaff_ESI + 0x12) = 0;\n    return;\n}\n",
        "token_count": 629
    },
    "00420ce4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00420ce4(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    int32_t in_EAX;\n    int32_t iVar5;\n    uint32_t *unaff_EBX;\n    uint arg_8h_00;\n    ulong uVar6;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t *var_4h;\n    \n    iVar2 = *(in_EAX + 0xa4);\n    if (arg_ch == 0) {\n        arg_8h_00 = *(in_EAX + 0x44);\n    }\n    else {\n        arg_8h_00 = *(in_EAX + 0x40);\n    }\n    iVar5 = fcn.004202f2(arg_8h_00, *unaff_EBX, unaff_EBX[1], &var_8h);\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    var_10h = fcn.0041b9e4(iVar2, *(in_EAX + 0x80), *unaff_EBX + 4, unaff_EBX[1] + (0xfffffffb < *unaff_EBX));\n    if (var_10h != 0) {\n        return var_10h;\n    }\n    uVar1 = *(in_EAX + 0x80) + 4 + arg_ch * 4;\n    uVar3 = *unaff_EBX;\n    *unaff_EBX = *unaff_EBX + uVar1;\n    unaff_EBX[1] = unaff_EBX[1] + (uVar1 >> 0x1f) + CARRY4(uVar3, uVar1);\n    if ((var_8h == 0) || (var_8h == 0x40000000 / *(in_EAX + 0x80) + 1U)) {\n        return 0x65;\n    }\n    if ((*(in_EAX + 0x18) <= var_8h && var_8h != *(in_EAX + 0x18)) || (iVar5 = fcn.0041f22c(),  iVar5 != 0)) {\n        return 0;\n    }\n    if (arg_ch != 0) {\n        var_10h = fcn.004202f2(arg_8h_00, *unaff_EBX - 4, unaff_EBX[1] - (*unaff_EBX < 4), &var_4h);\n        if (var_10h != 0) {\n            return var_10h;\n        }\n        if ((arg_10h == 0) && (iVar5 = fcn.00420cbd(iVar2),  iVar5 != var_4h)) {\n            return 0x65;\n        }\n    }\n    if ((arg_8h != 0) && (var_10h = fcn.0041f2a9(arg_8h, var_8h),  var_10h != 0)) {\n        return var_10h;\n    }\n    bVar4 = true;\n    if ((var_8h == 1) && (*(in_EAX + 0x76) != *(iVar2 + 0x14))) {\n        *(in_EAX + 0x76) = *(iVar2 + 0x14);\n    }\n    if (*(in_EAX + 0xac) == 0) {\n        var_4h = fcn.004209c8(in_EAX, var_8h);\n    }\n    else {\n        var_4h = NULL;\n    }\n    if (arg_ch == 0) {\n        if ((var_4h != NULL) && ((*(var_4h + 5) & 4) != 0)) {\ncode_r0x00420ec5:\n            bVar4 = false;\n        }\n    }\n    else if (*(in_EAX + 8) == '\\0') {\n        if ((*(in_EAX + 0x54) <= unaff_EBX[1]) &&\n           ((*(in_EAX + 0x54) < unaff_EBX[1] || (*(in_EAX + 0x50) <= *unaff_EBX && *unaff_EBX != *(in_EAX + 0x50)))))\n        goto code_r0x00420ec5;\n    }\n    if ((**(in_EAX + 0x3c) == 0) || (((*(in_EAX + 0xf) < 4 && (*(in_EAX + 0xf) != 0)) || (!bVar4)))) {\n        if (arg_ch != 0) goto code_r0x00420f03;\n        if (var_4h == NULL) {\n            *(in_EAX + 0x13) = *(in_EAX + 0x13) + '\\x01';\n            var_10h = fcn.0042268e(in_EAX, var_8h, &var_4h, 1);\n            *(in_EAX + 0x13) = *(in_EAX + 0x13) + -1;\n            if (var_10h != 0) {\n                return var_10h;\n            }\n            *(var_4h + 5) = *(var_4h + 5) & 0xfff7;\n            fcn.0041f63f();\n            goto code_r0x00420f03;\n        }\n    }\n    else {\n        iVar5 = *(in_EAX + 0x80);\n        uVar6 = fcn.0044b8cd(var_8h - 1, 0, iVar5, iVar5 >> 0x1f);\n        var_10h = fcn.0041b9fe(iVar2, iVar5, uVar6);\n        if (*(in_EAX + 0x20) <= var_8h && var_8h != *(in_EAX + 0x20)) {\n            *(in_EAX + 0x20) = var_8h;\n        }\n        if (*(in_EAX + 0x58) != 0) {\n            fcn.00428d43(iVar2);\n        }\ncode_r0x00420f03:\n        if (var_4h == NULL) {\n            return var_10h;\n        }\n    }\n    iVar5 = *var_4h;\n    fcn.0044b575(iVar5, iVar2, *(in_EAX + 0x80));\n    (**(in_EAX + 0xa0))(var_4h);\n    if (arg_ch != 0) {\n        if (arg_10h != 0) {\n            if ((*(in_EAX + 0x54) < unaff_EBX[1]) ||\n               ((*(in_EAX + 0x54) <= unaff_EBX[1] && (*(in_EAX + 0x50) <= *unaff_EBX && *unaff_EBX != *(in_EAX + 0x50)))\n               )) goto code_r0x00420f53;\n        }\n        fcn.0041f65a();\n    }\ncode_r0x00420f53:\n    if (var_8h == 1) {\n        fcn.0044b575(in_EAX + 100, iVar5 + 0x18, 0x10);\n    }\n    fcn.0041f5e7();\n    return var_10h;\n}\n",
        "token_count": 1689
    },
    "00420f83": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00420f83(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    int32_t iVar5;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    char *var_10h;\n    int32_t *var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    iVar1 = *in_EAX;\n    var_ch = fcn.0041c2d3(*(iVar1 + 4) * 2);\n    iVar5 = *(iVar1 + 4) + var_ch;\n    if (var_ch != NULL) {\n        iVar3 = fcn.0041ba2a(arg_8h, var_ch, 0);\n        if (iVar3 != 0) goto code_r0x004210f3;\n        iVar3 = (**(*var_ch + 0x18))(var_ch, &var_20h);\n        if (iVar3 != 0) goto code_r0x004210f3;\n        var_18h = *(iVar1 + 8) + 1;\n        var_8h = fcn.0041bf1f(var_20h + 1 + var_18h);\n        if (var_8h != 0) {\n            var_10h = var_20h + 1 + var_8h;\n            iVar3 = fcn.0041b9e4(var_8h, var_20h, 0, 0);\n            if (iVar3 == 0) {\n                *(var_20h + var_8h) = 0;\n                var_4h = var_8h;\n                if ((-1 < var_1ch) && ((0 < var_1ch || (var_20h != 0)))) {\n                    do {\n                        iVar3 = (**(iVar1 + 0x20))(iVar1, var_4h, 0, &var_14h);\n                        if (iVar3 != 0) goto code_r0x004210f3;\n                        if (var_14h != 0) {\n                            iVar3 = fcn.0041ba2a(var_4h, iVar5, 0);\n                            if (iVar3 != 0) goto code_r0x004210f3;\n                            iVar3 = fcn.00420394(var_10h, var_18h);\n                            fcn.0041b9d3();\n                            if (iVar3 != 0) goto code_r0x004210f3;\n                            if (*var_10h != '\\0') {\n                                iVar4 = fcn.0044b5cf(var_10h, arg_8h);\n                                if (iVar4 == 0) goto code_r0x004210f3;\n                            }\n                        }\n                        var_4h = fcn.0041d157();\n                        var_4h = extraout_ECX + 1 + var_4h;\n                        iVar3 = var_4h - var_8h >> 0x1f;\n                    } while ((iVar3 < var_1ch) || ((iVar3 <= var_1ch && (var_4h - var_8h < var_20h))));\n                }\n                fcn.0041b9d3();\n                iVar3 = (**(iVar1 + 0x1c))(iVar1, arg_8h, 0);\n            }\n            goto code_r0x004210f3;\n        }\n    }\n    iVar3 = 7;\ncode_r0x004210f3:\n    fcn.0041c110(var_8h);\n    piVar2 = var_ch;\n    if (var_ch != NULL) {\n        fcn.0041b9d3();\n        fcn.0041c110(piVar2);\n    }\n    return iVar3;\n}\n",
        "token_count": 905
    },
    "00421116": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00421185)\n\nint32_t __cdecl fcn.00421116(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t unaff_ESI;\n    int64_t iVar3;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    piVar1 = *(unaff_ESI + 0x3c);\n    var_4h = 0;\n    if ((*piVar1 != 0) && ((3 < *(unaff_ESI + 0xf) || (*(unaff_ESI + 0xf) == 0)))) {\n        iVar2 = *(unaff_ESI + 0x80);\n        var_8h = iVar2;\n        var_4h = (**(*piVar1 + 0x18))(piVar1, &var_10h);\n        iVar3 = fcn.0044b8cd(arg_8h, 0, iVar2, iVar2 >> 0x1f);\n        if ((var_4h == 0) && (iVar3 != CONCAT44(var_ch, var_10h))) {\n            if (iVar3 < CONCAT44(var_ch, var_10h)) {\n                var_4h = fcn.0041ba18(iVar3);\n            }\n            else {\n                var_4h = *(unaff_ESI + 0xa4);\n                fcn.0044b531(var_4h, 0, var_8h);\n                var_4h = fcn.0041b9fe(var_4h, var_8h, iVar3 - iVar2);\n            }\n            if (var_4h == 0) {\n                *(unaff_ESI + 0x20) = arg_8h;\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 440
    },
    "004211dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004211dc(void)\n\n{\n    uint32_t *puVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t unaff_ESI;\n    \n    if (*(unaff_ESI + 0xc) == '\\0') {\n        pcVar2 = *(**(unaff_ESI + 0x3c) + 0x2c);\n        if (pcVar2 == NULL) {\n            uVar3 = 0x200;\n        }\n        else {\n            uVar3 = (*pcVar2)(*(unaff_ESI + 0x3c));\n        }\n        *(unaff_ESI + 0x7c) = uVar3;\n    }\n    puVar1 = unaff_ESI + 0x7c;\n    if (*puVar1 < 0x20) {\n        *puVar1 = 0x200;\n    }\n    if (0x10000 < *puVar1) {\n        *puVar1 = 0x10000;\n    }\n    return;\n}\n",
        "token_count": 228
    },
    "00421216": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00421216(char *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    char *arg_8h_00;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    char *var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_8h = 0;\n    iVar1 = *in_EAX;\n    var_10h = 1;\n    iVar3 = (**(*in_EAX[0x10] + 0x18))(in_EAX[0x10], &var_20h);\n    if (iVar3 == 0) {\n        var_14h = in_EAX[0x29];\n        iVar3 = fcn.00420394(var_14h, *(*in_EAX + 8) + 1);\n        if ((iVar3 == 0) &&\n           (((*var_14h == '\\0' || (iVar3 = (**(iVar1 + 0x20))(iVar1, var_14h, 0, &var_10h),  iVar3 == 0)) &&\n            (var_10h != 0)))) {\n            in_EAX[0x12] = 0;\n            in_EAX[0x13] = 0;\n            var_14h = arg_8h;\ncode_r0x004213b6:\n            uVar4 = var_20h;\n            iVar3 = fcn.004206cb(arg_8h, var_20h, var_1ch, &var_4h, &var_8h);\n            if (iVar3 == 0) {\n                if (var_4h == 0xffffffff) {\n                    uVar4 = var_20h - in_EAX[0x1f];\n                    var_4h = fcn.0044b9ed(uVar4, var_1ch - (var_20h < in_EAX[0x1f]), in_EAX[0x20] + 8, \n                                          in_EAX[0x20] + 8 >> 0x1f);\n                }\n                if ((var_4h == 0) && (arg_8h == NULL)) {\n                    uVar2 = in_EAX[0x12];\n                    if ((in_EAX[0x1f] + in_EAX[0x14] == uVar2) &&\n                       (in_EAX[0x15] + CARRY4(in_EAX[0x1f], in_EAX[0x14]) == in_EAX[0x13])) {\n                        var_4h = fcn.0044b9ed(uVar4, (var_1ch - in_EAX[0x13]) - (var_20h < uVar2), in_EAX[0x20] + 8, \n                                              in_EAX[0x20] + 8 >> 0x1f, var_20h - uVar2);\n                    }\n                }\n                if ((in_EAX[0x12] == in_EAX[0x1f]) && (in_EAX[0x13] == 0)) {\n                    iVar3 = fcn.00421116(var_8h);\n                    if (iVar3 != 0) goto code_r0x004213d9;\n                    in_EAX[6] = var_8h;\n                }\n                var_ch = 0;\n                if (var_4h != 0) {\n                    do {\n                        if (var_14h != NULL) {\n                            fcn.004209ec();\n                            var_14h = NULL;\n                        }\n                        iVar3 = fcn.00420ce4(0, 1, 0);\n                        if (iVar3 != 0) {\n                            if (iVar3 != 0x65) {\n                                bVar5 = iVar3 == 0x20a;\n                                goto code_r0x004213d5;\n                            }\n                            in_EAX[0x12] = var_20h;\n                            in_EAX[0x13] = var_1ch;\n                            break;\n                        }\n                        var_ch = var_ch + 1;\n                    } while (var_ch < var_4h);\n                }\n                goto code_r0x004213b6;\n            }\n            bVar5 = iVar3 == 0x65;\ncode_r0x004213d5:\n            if (bVar5) {\n                iVar3 = 0;\n            }\n        }\n    }\ncode_r0x004213d9:\n    *(in_EAX + 0x11) = *(in_EAX + 3);\n    if (iVar3 == 0) {\n        arg_8h_00 = in_EAX[0x29];\n        iVar3 = fcn.00420394(arg_8h_00, *(*in_EAX + 8) + 1);\n        if (iVar3 == 0) {\n            if ((3 < *(in_EAX + 0xf)) || (*(in_EAX + 0xf) == 0)) {\n                iVar3 = fcn.00422c79();\n            }\n            if ((((iVar3 == 0) && (iVar3 = fcn.00420b59(*arg_8h_00 != '\\0'),  iVar3 == 0)) && (*arg_8h_00 != '\\0')) &&\n               (var_10h != 0)) {\n                iVar3 = fcn.00420f83(arg_8h_00);\n            }\n        }\n    }\n    fcn.004211dc();\n    return iVar3;\n}\n",
        "token_count": 1275
    },
    "0042178b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042178b(uint32_t *arg_8h)\n\n{\n    uint32_t arg_10h;\n    uint32_t uVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t *var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = 0;\n    if (arg_8h == NULL) {\n        uVar2 = *(in_EAX + 0x1c);\n    }\n    else {\n        var_8h = fcn.0041f216(arg_8h[5]);\n        if (var_8h == 0) {\n            return 7;\n        }\n        uVar2 = arg_8h[5];\n    }\n    *(in_EAX + 0x18) = uVar2;\n    *(in_EAX + 0x11) = *(in_EAX + 0xc);\n    if ((arg_8h == NULL) && (*(in_EAX + 0xac) != 0)) {\n        iVar3 = fcn.00421582();\n        return iVar3;\n    }\n    puVar4 = in_EAX + 0x48;\n    uVar2 = *puVar4;\n    arg_10h = *(in_EAX + 0x4c);\n    var_14h = puVar4;\n    if ((arg_8h == NULL) || (*(in_EAX + 0xac) != 0)) {\n        *puVar4 = 0;\n        *(in_EAX + 0x4c) = 0;\n    }\n    else {\n        var_20h = uVar2;\n        var_1ch = arg_10h;\n        if ((arg_8h[2] | arg_8h[3]) != 0) {\n            var_20h = arg_8h[2];\n            var_1ch = arg_8h[3];\n        }\n        *puVar4 = *arg_8h;\n        *(in_EAX + 0x4c) = arg_8h[1];\n        while (*(in_EAX + 0x4c) <= var_1ch) {\n            if (((var_1ch <= *(in_EAX + 0x4c)) && (var_20h <= *puVar4)) ||\n               (var_4h = fcn.00420ce4(var_8h, 1, 1),  var_4h != 0)) break;\n        }\n    }\n    do {\n        if (((var_4h != 0) || (arg_10h < puVar4[1])) || ((arg_10h <= puVar4[1] && (uVar2 <= *puVar4)))) {\ncode_r0x00421941:\n            if (arg_8h != NULL) {\n                var_1ch = 0;\n                iVar3 = *(in_EAX + 0xac);\n                if (iVar3 != 0) {\n                    if (arg_8h[10] != *(iVar3 + 0x58)) {\n                        arg_8h[7] = 0;\n                        arg_8h[10] = *(iVar3 + 0x58);\n                    }\n                    if (arg_8h[7] < *(iVar3 + 0x34)) {\n                        *(iVar3 + 0x34) = arg_8h[7];\n                        *(iVar3 + 0x3c) = arg_8h[8];\n                        *(iVar3 + 0x40) = arg_8h[9];\n                        fcn.00423572();\n                    }\n                    var_4h = 0;\n                }\n                for (uVar1 = arg_8h[6]; (var_4h == 0 && (uVar1 < *(in_EAX + 0x34))); uVar1 = uVar1 + 1) {\n                    var_4h = fcn.00420ce4(var_8h, 0, 1);\n                }\n            }\n            fcn.0041f3d2(var_8h);\n            if (var_4h == 0) {\n                *puVar4 = uVar2;\n                puVar4[1] = arg_10h;\n            }\n            return var_4h;\n        }\n        var_ch = 0;\n        var_4h = fcn.004206cb(0, uVar2, arg_10h, &var_ch, &var_1ch);\n        if (var_ch == 0) {\n            uVar1 = *puVar4;\n            if ((*(in_EAX + 0x7c) + *(in_EAX + 0x50) == uVar1) &&\n               (*(in_EAX + 0x54) + CARRY4(*(in_EAX + 0x7c), *(in_EAX + 0x50)) == puVar4[1])) {\n                iVar3 = *(in_EAX + 0x80) + 8;\n                var_ch = fcn.0044b9ed(uVar2 - uVar1, (arg_10h - puVar4[1]) - (uVar2 < uVar1), iVar3, iVar3 >> 0x1f);\n                puVar4 = var_14h;\n            }\n        }\n        var_10h = 0;\n        if (var_4h != 0) goto code_r0x00421941;\n        do {\n            if (((var_ch <= var_10h) || (arg_10h < puVar4[1])) || ((arg_10h <= puVar4[1] && (uVar2 <= *puVar4)))) break;\n            var_4h = fcn.00420ce4(var_8h, 1, 1);\n            var_10h = var_10h + 1;\n        } while (var_4h == 0);\n    } while( true );\n}\n",
        "token_count": 1394
    },
    "00421b32": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00421b32(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(in_EAX + 8) == '\\0') && (iVar1 = (**(**(in_EAX + 0x40) + 0x14))(*(in_EAX + 0x40), 2),  iVar1 != 0)) {\n        return;\n    }\n    (**(**(in_EAX + 0x40) + 0x18))(*(in_EAX + 0x40), in_EAX + 0x50);\n    return;\n}\n",
        "token_count": 134
    },
    "00421b5d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00421b5d(int32_t noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6\n            , uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint arg_3ch\n            , uint arg_40h, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint arg_80h, uint noname_31, uint noname_32\n            , uint noname_33, uint noname_34, uint noname_35, uint noname_36, uint noname_37, uint noname_38, \n            uint arg_a4h, uint arg_a8h, uint arg_ach)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    *(noname_0 + 4) = 0;\n    fcn.00424048(*(noname_0 + 10), *(noname_0 + 0x80), *(noname_0 + 0xa4));\n    *(noname_0 + 0xac) = 0;\n    fcn.004209ec();\n    if (**(noname_0 + 0x40) != 0) {\n        fcn.00421b32();\n        fcn.00420b3f();\n    }\n    fcn.00420c8f();\n    fcn.0041b9d3();\n    fcn.0041b9d3();\n    fcn.0041f8b9();\n    iVar1 = *(*(noname_0 + 0xa8) + 0x28);\n    if (iVar1 != 0) {\n        (**0x44f08c)(iVar1);\n    }\n    fcn.0041c110(noname_0);\n    return 0;\n}\n",
        "token_count": 516
    },
    "00421bec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00421bec(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    ulong uVar3;\n    uint var_28h;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    \n    if ((*(in_EAX + 0xac) == 0) && (iVar2 = fcn.00421b06(4),  iVar2 != 0)) {\n        return iVar2;\n    }\n    if (*(in_EAX + 8) == '\\0') {\n        if ((**(in_EAX + 0x40) == 0) || (*(in_EAX + 5) == '\\x04')) {\n            *(in_EAX + 0x50) = *(in_EAX + 0x48);\n            *(in_EAX + 0x54) = *(in_EAX + 0x4c);\n        }\n        else {\n            var_ch = (**(**(in_EAX + 0x3c) + 0x30))(*(in_EAX + 0x3c));\n            var_8h = var_ch & 0x200;\n            if (var_8h == 0) {\n                fcn.0044b575(&var_28h, 0x4442a0, 8);\n                fcn.0041d7e6();\n                uVar3 = fcn.004204ab();\n                var_18h = uVar3 >> 0x20;\n                iVar2 = fcn.0041b9e4(&var_14h, 8, uVar3);\n                if (((iVar2 != 0) ||\n                    ((iVar2 = fcn.0044b5ab(&var_14h, 0x4442a0, 8),  iVar2 == 0 &&\n                     (iVar2 = fcn.0041b9fe(0x443d87, 1, uVar3, var_18h),  iVar2 != 0)))) && (iVar2 != 0x20a)) {\n                    return iVar2;\n                }\n                if (((*(in_EAX + 9) != '\\0') && ((var_ch & 0x400) == 0)) &&\n                   (iVar2 = (**(**(in_EAX + 0x40) + 0x14))(*(in_EAX + 0x40), *(in_EAX + 0xb)),  iVar2 != 0)) {\n                    return iVar2;\n                }\n                iVar2 = fcn.0041b9fe(&var_28h, 0xc, *(in_EAX + 0x50), *(in_EAX + 0x54));\n                if (iVar2 != 0) {\n                    return iVar2;\n                }\n            }\n            if (((var_ch & 0x400) == 0) &&\n               (iVar2 = (**(**(in_EAX + 0x40) + 0x14))\n                                  (*(in_EAX + 0x40), (-(*(in_EAX + 0xb) != 3) & 0xfffffff0) + 0x10 | *(in_EAX + 0xb)), \n               iVar2 != 0)) {\n                return iVar2;\n            }\n            *(in_EAX + 0x50) = *(in_EAX + 0x48);\n            *(in_EAX + 0x54) = *(in_EAX + 0x4c);\n            if ((arg_8h != 0) && (var_8h == 0)) {\n                *(in_EAX + 0x2c) = 0;\n                iVar2 = fcn.0042059d();\n                if (iVar2 != 0) {\n                    return iVar2;\n                }\n            }\n        }\n    }\n    piVar1 = *(in_EAX + 0xa8);\n    for (iVar2 = *piVar1; iVar2 != 0; iVar2 = *(iVar2 + 0x1c)) {\n        *(iVar2 + 0x14) = *(iVar2 + 0x14) & 0xfffb;\n    }\n    piVar1[2] = piVar1[1];\n    *(in_EAX + 0xf) = 4;\n    return 0;\n}\n",
        "token_count": 969
    },
    "00421d95": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00421d95(void)\n\n{\n    uint32_t uVar1;\n    int32_t *in_EAX;\n    int32_t *unaff_EBX;\n    ulong uVar2;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    if ((*unaff_EBX[0xf] != 0) ||\n       (var_4h = (**(*unaff_EBX + 0x18))(*unaff_EBX, 0, unaff_EBX[0xf], unaff_EBX[0x1e] & 0x87f3fU | 0x1e, 0), \n       var_4h == 0)) {\n        uVar1 = unaff_EBX[6];\n        if (unaff_EBX[9] <= uVar1 && uVar1 != unaff_EBX[9]) {\n            _var_10h = fcn.0044b8cd(unaff_EBX[0x20], unaff_EBX[0x20] >> 0x1f, uVar1, 0);\n            (**(*unaff_EBX[0xf] + 0x28))(unaff_EBX[0xf], 5, &var_10h);\n            unaff_EBX[9] = unaff_EBX[6];\n        }\n        do {\n            if (in_EAX == NULL) {\n                return var_4h;\n            }\n            uVar1 = in_EAX[3];\n            if ((uVar1 < unaff_EBX[6] || uVar1 == unaff_EBX[6]) && ((*(in_EAX + 5) & 0x20) == 0)) {\n                uVar2 = fcn.0044b8cd(uVar1 - 1, 0, unaff_EBX[0x20], unaff_EBX[0x20] >> 0x1f);\n                _var_10h = uVar2;\n                if (uVar1 == 1) {\n                    fcn.004215c9();\n                }\n                var_8h = *in_EAX;\n                var_4h = fcn.0041b9fe(var_8h, unaff_EBX[0x20], _var_10h);\n                if (uVar1 == 1) {\n                    fcn.0044b575(unaff_EBX + 0x19, var_8h + 0x18, 0x10);\n                }\n                if (unaff_EBX[8] <= uVar1 && uVar1 != unaff_EBX[8]) {\n                    unaff_EBX[8] = uVar1;\n                }\n                fcn.00428d43(*in_EAX);\n            }\n            in_EAX = in_EAX[2];\n        } while (var_4h == 0);\n    }\n    return var_4h;\n}\n",
        "token_count": 659
    },
    "00421ea3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421ea3(uint *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t arg_ch;\n    int32_t var_4h;\n    \n    piVar1 = arg_8h[4];\n    if (*(piVar1 + 5) != '\\x02') {\n        var_4h = 0;\n        if (*piVar1[0x11] == 0) {\n            if ((*(piVar1 + 5) == '\\x04') || (*(piVar1 + 0x15) != '\\0')) {\n                fcn.004307c0();\n            }\n            else {\n                var_4h = (**(*piVar1 + 0x18))(*piVar1, 0, piVar1[0x11], 0x201e, 0);\n            }\n        }\n        if (var_4h != 0) {\n            return;\n        }\n        uVar2 = *arg_8h;\n        arg_ch = (piVar1[0x20] + 4) * piVar1[0xd];\n        iVar3 = fcn.00420326(piVar1[0x11], arg_ch, 0);\n        if (iVar3 != 0) {\n            return;\n        }\n        iVar3 = fcn.0041b9fe(uVar2, piVar1[0x20], arg_ch + 4, 0xfffffffb < arg_ch);\n        if (iVar3 != 0) {\n            return;\n        }\n    }\n    piVar1[0xd] = piVar1[0xd] + 1;\n    fcn.00420a5f();\n    return;\n}\n",
        "token_count": 384
    },
    "00422015": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00422015(int32_t **arg_8h, char *arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uchar uVar2;\n    uint8_t uVar3;\n    uint32_t in_EAX;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    char cVar6;\n    int32_t iVar7;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uchar *var_8h;\n    int32_t var_4h;\n    \n    iVar7 = 0;\n    var_4h = 0;\n    var_8h = NULL;\n    var_10h = 0x400;\n    if (*(in_ECX + 4) < 0x29) {\n        var_ch = 0x28;\n    }\n    else {\n        var_ch = *(in_ECX + 4) + 7U & 0xfffffff8;\n    }\n    *arg_8h = NULL;\n    if ((arg_ch != NULL) && (*arg_ch != '\\0')) {\n        var_8h = fcn.0041bf1f((*(in_ECX + 8) + 1) * 2);\n        if (var_8h == NULL) {\n            return 7;\n        }\n        *var_8h = 0;\n        var_4h = (**(in_ECX + 0x24))();\n        iVar7 = fcn.0041d157();\n        iVar5 = var_4h;\n        if (var_4h != 0) goto code_r0x004220cd;\n        if (*(in_ECX + 8) < iVar7 + 8) {\n            var_4h = fcn.0044a966(0x996e);\n        }\n        iVar5 = var_4h;\n        if (var_4h != 0) goto code_r0x004220cd;\n    }\n    piVar4 = fcn.0041c2d3((*(in_ECX + 4) + 7U & 0xfffffff8) + var_ch * 2 + 0xf7 + iVar7 * 3);\n    if (piVar4 == NULL) {\n        iVar5 = 7;\ncode_r0x004220cd:\n        fcn.0041c110(var_8h);\n        return iVar5;\n    }\n    piVar4[0x2a] = piVar4 + 0x2e;\n    piVar4[0xf] = piVar4 + 0x3a;\n    iVar5 = piVar4 + 0x3a + (*(in_ECX + 4) + 7U & 0xfffffff8);\n    piVar4[0x11] = iVar5;\n    iVar5 = iVar5 + var_ch;\n    piVar4[0x10] = iVar5;\n    iVar5 = iVar5 + var_ch;\n    piVar4[0x24] = iVar5;\n    if (var_8h != NULL) {\n        piVar4[0x25] = iVar5 + 1 + iVar7;\n        fcn.0044b575(iVar5, var_8h, iVar7);\n        fcn.0044b575(piVar4[0x25], var_8h, iVar7);\n        fcn.0044b575(piVar4[0x25] + iVar7, 0x44a364, 8);\n        iVar5 = piVar4[0x25] + 9 + iVar7;\n        piVar4[0x2c] = iVar5;\n        fcn.0044b575(iVar5, var_8h, iVar7);\n        fcn.0044b575(piVar4[0x2c] + iVar7, 0x44a370, 4);\n        fcn.0041c110(var_8h);\n    }\n    *piVar4 = in_ECX;\n    piVar4[0x1e] = arg_10h;\n    if ((arg_ch == NULL) || (*arg_ch == '\\0')) {\n        cVar6 = '\\x01';\n        arg_ch = arg_10h & 1;\n        *(piVar4 + 0xf) = 1;\n        *(piVar4 + 4) = 4;\n    }\n    else {\n        var_ch = 0;\n        var_4h = fcn.0041ba2a(piVar4[0x24], piVar4[0xf], &var_ch);\n        arg_ch = var_ch & 1;\n        if (var_4h != 0) goto code_r0x00422257;\n        if (arg_ch == NULL) {\n            fcn.004211dc();\n            uVar1 = piVar4[0x1f];\n            if (0x400 < uVar1) {\n                cVar6 = '\\0';\n                var_10h = uVar1;\n                if (0x2000 < uVar1) {\n                    var_10h = 0x2000;\n                }\n                goto code_r0x0042223d;\n            }\n        }\n        cVar6 = '\\0';\n    }\ncode_r0x0042223d:\n    if ((var_4h == 0) && (var_4h = fcn.00421a06(&var_10h, 0xffffffff),  var_4h == 0)) {\n        iVar7 = piVar4[0x2a];\n        fcn.0044b531(iVar7, 0, 0x30);\n        var_18h._0_1_ = ~in_EAX & 1;\n        *(iVar7 + 0x14) = var_10h;\n        uVar2 = 1;\n        *(iVar7 + 0x18) = 0x50;\n        *(iVar7 + 0x1c) = 1;\n        *(iVar7 + 0x20) = 0x418f44;\n        *(iVar7 + 0x24) = piVar4;\n        *(iVar7 + 0x10) = 100;\n        *(piVar4 + 6) = var_18h;\n        if (((in_EAX >> 1 & 1) == 0) || (arg_ch == NULL)) {\n            uVar2 = 0;\n        }\n        *(piVar4 + 7) = uVar2;\n        *(piVar4 + 0xd) = arg_ch._0_1_;\n        *(piVar4 + 9) = cVar6 == '\\0';\n        piVar4[0x22] = -1;\n        piVar4[0x23] = -1;\n        piVar4[0x21] = 0x3fffffff;\n        *(piVar4 + 3) = cVar6;\n        *(piVar4 + 1) = cVar6;\n        *(piVar4 + 0x11) = cVar6;\n        *(piVar4 + 0xe) = 0;\n        uVar3 = (cVar6 != '\\0') - 1U & 2;\n        *(piVar4 + 2) = cVar6;\n        *(piVar4 + 0xb) = uVar3;\n        *(piVar4 + 10) = uVar3;\n        *(piVar4 + 0x1d) = 0x50;\n        fcn.004211dc();\n        if ((~in_EAX & 1) == 0) {\n            *(piVar4 + 5) = 2;\n        }\n        piVar4[0x28] = 0x41c6aa;\n        *arg_8h = piVar4;\n        return 0;\n    }\ncode_r0x00422257:\n    fcn.0041b9d3();\n    fcn.0041c110(piVar4);\n    return var_4h;\n}\n",
        "token_count": 1786
    },
    "0042232c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0042232c(uint32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_10h = 1;\n    var_ch = *in_EAX[0x10] != 0;\n    iVar1 = *in_EAX;\n    *arg_8h = 0;\n    if (var_ch == 0) {\n        var_8h = (**(iVar1 + 0x20))(iVar1, in_EAX[0x25], 0, &var_10h);\n        if (var_8h != 0) {\n            return var_8h;\n        }\n        if (var_10h == 0) {\n            return 0;\n        }\n    }\n    var_14h = 0;\n    var_8h = (**(*in_EAX[0xf] + 0x24))(in_EAX[0xf], &var_14h);\n    if (((var_8h == 0) && (var_14h == 0)) && (var_8h = fcn.004216a3(&var_18h),  var_8h == 0)) {\n        if (var_18h == 0) {\n            iVar2 = fcn.00420364();\n            if ((iVar2 == 0) && ((**(iVar1 + 0x1c))(iVar1, in_EAX[0x25], 0),  *(in_EAX + 1) == '\\0')) {\n                fcn.00420348();\n            }\n        }\n        else {\n            if (var_ch == 0) {\n                var_18h = 0x801;\n                var_8h = fcn.0041ba2a(in_EAX[0x25], in_EAX[0x10], &var_18h);\n            }\n            if (var_8h == 0) {\n                var_1h._0_1_ = '\\0';\n                var_8h = (**(*in_EAX[0x10] + 8))(in_EAX[0x10], &var_1h, 1, 0, 0);\n                if (var_8h == 0x20a) {\n                    var_8h = 0;\n                }\n                if (var_ch == 0) {\n                    fcn.0041b9d3();\n                }\n                *arg_8h = var_1h != '\\0';\n            }\n            else if (var_8h == 0xe) {\n                *arg_8h = 1;\n                var_8h = 0;\n            }\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 678
    },
    "0042268e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042268e(int32_t arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t var_4h;\n    \n    if (arg_ch == 0) {\n        iVar2 = fcn.0044a92e(0x9bdd);\n        return iVar2;\n    }\n    var_4h = *(arg_8h + 0x28);\n    if (var_4h == 0) {\n        var_4h = fcn.0041f49f(arg_ch, 1, arg_10h);\n    }\n    if (var_4h == 0) {\n        puVar1 = *arg_10h;\n        if ((puVar1[4] != 0) && (arg_14h == 0)) {\n            return 0;\n        }\n        puVar1[4] = arg_8h;\n        if ((arg_ch < 0x80000000) && (arg_ch != 0x40000000 / *(arg_8h + 0x80) + 1U)) {\n            if (((*(arg_8h + 0x18) < arg_ch) || (arg_14h != 0)) || (**(arg_8h + 0x3c) == 0)) {\n                if (arg_ch < *(arg_8h + 0x84) || arg_ch == *(arg_8h + 0x84)) {\n                    if (arg_14h != 0) {\n                        if (arg_ch < *(arg_8h + 0x1c) || arg_ch == *(arg_8h + 0x1c)) {\n                            fcn.0041f2a9(*(arg_8h + 0x38), arg_ch);\n                        }\n                        fcn.00420a5f();\n                    }\n                    fcn.0044b531(*puVar1, 0, *(arg_8h + 0x80));\n                    return 0;\n                }\n                var_4h = 0xd;\n            }\n            else {\n                var_4h = fcn.0042144f();\n                if (var_4h == 0) {\n                    return 0;\n                }\n            }\n        }\n        else {\n            var_4h = fcn.0044a92e(0x9c04);\n        }\n        fcn.0041f614();\n    }\n    if (*(*(arg_8h + 0xa8) + 0xc) == 0) {\n        fcn.00420c8f();\n    }\n    *arg_10h = 0;\n    return var_4h;\n}\n",
        "token_count": 611
    },
    "004227d5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004227d5(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        iVar1 = *(in_EAX + 0x10);\n        fcn.0041f5e7();\n        if (*(*(iVar1 + 0xa8) + 0xc) == 0) {\n            fcn.00420c8f();\n        }\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "004228ab": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.004228ab(int32_t param_1, uchar param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t unaff_EDI;\n    \n    iVar2 = 0;\n    if (*(unaff_EDI + 0x28) != 0) {\n        return *(unaff_EDI + 0x28);\n    }\n    *(unaff_EDI + 0x15) = param_2;\n    if (*(unaff_EDI + 0xf) == '\\x01') {\n        if (*(unaff_EDI + 0xac) == 0) {\n            iVar2 = fcn.00420364();\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            if (param_1 != 0) {\n                iVar2 = fcn.00421b06(4);\n            }\n        }\n        else {\n            if ((*(unaff_EDI + 4) != '\\0') && (*(*(unaff_EDI + 0xac) + 0x1e) == '\\0')) {\n                iVar2 = fcn.00420364();\n                if (iVar2 != 0) {\n                    return iVar2;\n                }\n                fcn.00424ad1(1);\n            }\n            iVar2 = fcn.00424586();\n        }\n        if (iVar2 == 0) {\n            uVar1 = *(unaff_EDI + 0x18);\n            *(unaff_EDI + 0x48) = 0;\n            *(unaff_EDI + 0x4c) = 0;\n            *(unaff_EDI + 0xf) = 2;\n            *(unaff_EDI + 0x24) = uVar1;\n            *(unaff_EDI + 0x20) = uVar1;\n            *(unaff_EDI + 0x1c) = uVar1;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 428
    },
    "00422940": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.00422940(void)\n\n{\n    uint32_t *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_EAX;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    uVar2 = *in_EAX;\n    iVar3 = in_EAX[4];\n    uVar6 = *(iVar3 + 0x28);\n    if (*(iVar3 + 0x28) == 0) {\n        if (*(iVar3 + 0xd) == '\\0') {\n            if ((*(iVar3 + 0xf) != '\\x02') || (var_4h = fcn.004227f5(),  uVar6 = var_4h,  var_4h == 0)) {\n                fcn.0041f63f();\n                uVar6 = in_EAX[3];\n                iVar4 = fcn.0041f22c();\n                if ((iVar4 == 0) || (iVar4 = fcn.004202b3(),  iVar4 != 0)) {\n                    iVar4 = fcn.0041f22c();\n                    if ((iVar4 == 0) && (*(iVar3 + 0xac) == 0)) {\n                        if ((uVar6 < *(iVar3 + 0x1c) || uVar6 == *(iVar3 + 0x1c)) && (**(iVar3 + 0x40) != 0)) {\n                            iVar4 = *(iVar3 + 0x4c);\n                            uVar6 = *(iVar3 + 0x48);\n                            fcn.00420cbd(uVar2);\n                            *(in_EAX + 5) = *(in_EAX + 5) | 4;\n                            uVar5 = fcn.00420326(*(iVar3 + 0x40), uVar6, iVar4);\n                            if (uVar5 != 0) {\n                                return uVar5;\n                            }\n                            uVar5 = fcn.0041b9fe(uVar2, *(iVar3 + 0x80), uVar6 + 4, iVar4 + (0xfffffffb < uVar6));\n                            if (uVar5 != 0) {\n                                return uVar5;\n                            }\n                            uVar5 = *(iVar3 + 0x80);\n                            uVar6 = fcn.00420326(*(iVar3 + 0x40), uVar5 + uVar6 + 4, \n                                                 (uVar5 >> 0x1f) + iVar4 + CARRY4(uVar5, uVar6) +\n                                                 (0xfffffffb < uVar5 + uVar6));\n                            if (uVar6 != 0) {\n                                return uVar6;\n                            }\n                            uVar5 = *(iVar3 + 0x80) + 8;\n                            puVar1 = iVar3 + 0x48;\n                            uVar6 = *puVar1;\n                            *puVar1 = *puVar1 + uVar5;\n                            *(iVar3 + 0x4c) = *(iVar3 + 0x4c) + (uVar5 >> 0x1f) + CARRY4(uVar6, uVar5);\n                            *(iVar3 + 0x2c) = *(iVar3 + 0x2c) + 1;\n                            var_4h = fcn.0041f2a9(*(iVar3 + 0x38), in_EAX[3]);\n                            uVar6 = fcn.00420a5f();\n                            var_4h = var_4h | uVar6;\n                            if (var_4h != 0) {\n                                return var_4h;\n                            }\n                        }\n                        else if (*(iVar3 + 0xf) != '\\x04') {\n                            *(in_EAX + 5) = *(in_EAX + 5) | 4;\n                        }\n                    }\n                    iVar4 = fcn.004202b3();\n                    if (iVar4 != 0) {\n                        var_4h = fcn.00421ea3(in_EAX);\n                    }\n                }\n                uVar6 = var_4h;\n                if (*(iVar3 + 0x18) < in_EAX[3]) {\n                    *(iVar3 + 0x18) = in_EAX[3];\n                }\n            }\n        }\n        else {\n            uVar6 = 3;\n        }\n    }\n    return uVar6;\n}\n",
        "token_count": 1008
    },
    "00422ad1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00422ad1(void)\n\n{\n    int32_t arg_8h;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iStack32;\n    int32_t iStack28;\n    uint32_t uStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    int32_t iStack12;\n    \n    arg_8h = *(in_EAX + 0x10);\n    uStack24 = *(arg_8h + 0x7c) / *(arg_8h + 0x80);\n    iStack28 = 0;\n    if (uStack24 < 2) {\n        iStack28 = fcn.00422940();\n    }\n    else {\n        iStack12 = 0;\n        *(arg_8h + 0x14) = *(arg_8h + 0x14) + '\\x01';\n        uVar1 = *(in_EAX + 0xc);\n        uVar5 = ~(uStack24 - 1) & uVar1 - 1;\n        uVar2 = *(arg_8h + 0x18);\n        iVar6 = uVar5 + 1;\n        if (uVar2 < uVar1) {\n            uStack24 = (uVar1 - iVar6) + 1;\n        }\n        else if (uVar2 < uVar5 + uStack24) {\n            uStack24 = (uVar2 - iVar6) + 1;\n        }\n        iStack16 = 0;\n        iStack32 = iVar6;\n        if (0 < uStack24) {\n            do {\n                if (iStack28 != 0) goto code_r0x00422c14;\n                if ((iStack32 == *(in_EAX + 0xc)) || (iVar3 = fcn.0041f22c(),  iVar3 == 0)) {\n                    if ((iStack32 != 0x40000000 / *(arg_8h + 0x80) + 1) &&\n                       (iStack28 = fcn.0042268e(arg_8h, iStack32, &iStack20, 0),  iStack28 == 0)) {\n                        iStack28 = fcn.00422940();\n                        goto code_r0x00422bbc;\n                    }\n                }\n                else {\n                    iStack20 = fcn.004209c8(arg_8h, iStack32);\n                    if (iStack20 != 0) {\ncode_r0x00422bbc:\n                        if ((*(iStack20 + 0x14) & 4) != 0) {\n                            iStack12 = 1;\n                        }\n                        fcn.004227d5();\n                    }\n                }\n                iStack16 = iStack16 + 1;\n                iStack32 = iStack32 + 1;\n            } while (iStack16 < uStack24);\n            iVar3 = 0;\n            if ((iStack28 == 0) && (iStack12 != 0)) {\n                do {\n                    iVar4 = fcn.004209c8(arg_8h, iVar3 + iVar6);\n                    if (iVar4 != 0) {\n                        *(iVar4 + 0x14) = *(iVar4 + 0x14) | 4;\n                        fcn.004227d5();\n                    }\n                    iVar3 = iVar3 + 1;\n                } while (iVar3 < uStack24);\n            }\n        }\ncode_r0x00422c14:\n        *(arg_8h + 0x14) = *(arg_8h + 0x14) + -1;\n    }\n    return iStack28;\n}\n",
        "token_count": 846
    },
    "00422cb7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00422cb7(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t arg_10h;\n    int32_t iVar4;\n    \n    iVar2 = *(in_EAX + 0x28);\n    iVar4 = 0;\n    if (iVar2 == 0) {\n        if (*(in_EAX + 0xf) < 3) {\n            iVar2 = 0;\n        }\n        else {\n            if (*(in_EAX + 0xac) == 0) {\n                if (*(in_EAX + 0x11) == '\\0') {\n                    iVar4 = fcn.00422c2f();\n                }\n                if (iVar4 != 0) {\n                    return iVar4;\n                }\n                iVar2 = fcn.00420867();\n                if (iVar2 != 0) {\n                    return iVar2;\n                }\n                iVar2 = fcn.00421bec(0);\n                if (iVar2 != 0) {\n                    return iVar2;\n                }\n                fcn.0041f787();\n                iVar2 = fcn.00421d95();\n                if (iVar2 != 0) {\n                    return iVar2;\n                }\n                piVar1 = *(in_EAX + 0xa8);\n                while (*piVar1 != 0) {\n                    fcn.0041f65a();\n                }\n                iVar4 = *(in_EAX + 0x18);\n                if ((iVar4 != *(in_EAX + 0x20)) &&\n                   (iVar2 = fcn.00421116(iVar4 - (iVar4 == 0x40000000 / *(in_EAX + 0x80) + 1)),  iVar2 != 0)) {\n                    return iVar2;\n                }\n                if (param_2 == 0) {\n                    iVar2 = fcn.00422c79();\n                }\n                if (iVar2 != 0) {\n                    return iVar2;\n                }\n            }\n            else {\n                iVar3 = fcn.0041f787();\n                iVar2 = iVar4;\n                if (iVar3 != 0) {\n                    if (*(in_EAX + 9) == '\\0') {\n                        arg_10h = 0;\n                    }\n                    else {\n                        arg_10h = *(in_EAX + 0xb);\n                    }\n                    iVar2 = fcn.004215fa(*(in_EAX + 0x18), 1, arg_10h);\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\n                piVar1 = *(in_EAX + 0xa8);\n                while (*piVar1 != 0) {\n                    fcn.0041f65a();\n                }\n            }\n            if (*(in_EAX + 0xac) == 0) {\n                *(in_EAX + 0xf) = 5;\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 667
    },
    "00422e71": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00422e71(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t unaff_ESI;\n    int32_t iVar3;\n    int32_t var_4h;\n    \n    var_4h = *(unaff_ESI + 0x60);\n    if ((var_4h < arg_8h) && (*(unaff_ESI + 6) != '\\0')) {\n        iVar1 = fcn.0041c1b7(*(unaff_ESI + 0x5c));\n        if (iVar1 == 0) {\n            return 7;\n        }\n        iVar3 = var_4h * 0x30 + iVar1;\n        fcn.0044b531(iVar3, 0, (arg_8h - var_4h) * 0x30);\n        *(unaff_ESI + 0x5c) = iVar1;\n        if (var_4h < arg_8h) {\n            puVar2 = iVar3 + 0x24;\n            do {\n                puVar2[-4] = *(unaff_ESI + 0x18);\n                if (**(unaff_ESI + 0x40) == 0) {\ncode_r0x00422efa:\n                    iVar3 = *(unaff_ESI + 0x7c);\n                    puVar2[-8] = 0;\n                }\n                else {\n                    iVar1 = *(unaff_ESI + 0x4c);\n                    iVar3 = *(unaff_ESI + 0x48);\n                    if ((iVar1 < 0) || ((iVar1 < 1 && (iVar3 == 0)))) goto code_r0x00422efa;\n                    puVar2[-8] = iVar1;\n                }\n                puVar2[-9] = iVar3;\n                puVar2[-3] = *(unaff_ESI + 0x34);\n                iVar1 = fcn.0041f216(*(unaff_ESI + 0x18));\n                puVar2[-5] = iVar1;\n                if (iVar1 == 0) {\n                    return 7;\n                }\n                iVar1 = *(unaff_ESI + 0xac);\n                if (iVar1 != 0) {\n                    puVar2[-2] = *(iVar1 + 0x34);\n                    puVar2[-1] = *(iVar1 + 0x3c);\n                    *puVar2 = *(iVar1 + 0x40);\n                    puVar2[1] = *(iVar1 + 0x58);\n                }\n                var_4h = var_4h + 1;\n                puVar2 = puVar2 + 0xc;\n                *(unaff_ESI + 0x60) = var_4h;\n            } while (var_4h < arg_8h);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 640
    },
    "004230ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.004230ac(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 4) == '\\0') && ((***(in_EAX + 0x3c) < 2 || ((**(in_EAX + 0x3c))[0xd] == 0)))) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 86
    },
    "004230ea": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004230ea(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    \n    if ((*(unaff_ESI + 4) != '\\0') && (iVar1 = fcn.004230c9(),  iVar1 != 0)) {\n        return;\n    }\n    fcn.004239b3(*(unaff_ESI + 0x3c), *(unaff_ESI + 4), unaff_ESI + 0xac);\n    return;\n}\n",
        "token_count": 112
    },
    "004231ea": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004231ea(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (*(unaff_ESI + 0x10) == unaff_EDI || *(unaff_ESI + 0x10) < unaff_EDI) {\n        iVar1 = fcn.0041c2c2(*(unaff_ESI + 0x14));\n        if (iVar1 == 0) {\n            *arg_8h = 0;\n            return 7;\n        }\n        fcn.0044b531(iVar1 + *(unaff_ESI + 0x10) * 4, 0, (unaff_EDI - *(unaff_ESI + 0x10)) * 4 + 4);\n        *(unaff_ESI + 0x14) = iVar1;\n        *(unaff_ESI + 0x10) = unaff_EDI + 1;\n    }\n    iVar1 = unaff_EDI * 4;\n    if (*(*(unaff_ESI + 0x14) + iVar1) == 0) {\n        if (*(unaff_ESI + 0x1e) == '\\x02') {\n            uVar2 = fcn.0041c2d3(0x8000);\n            *(iVar1 + *(unaff_ESI + 0x14)) = uVar2;\n            if (*(iVar1 + *(unaff_ESI + 0x14)) == 0) {\n                var_4h = 7;\n            }\n        }\n        else {\n            var_4h = (**(**(unaff_ESI + 4) + 0x34))(*(unaff_ESI + 4));\n        }\n    }\n    *arg_8h = *(iVar1 + *(unaff_ESI + 0x14));\n    return var_4h;\n}\n",
        "token_count": 447
    },
    "004232a7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004232a7(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *in_EAX;\n    uint32_t *puVar4;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    uint32_t *puVar5;\n    int32_t iVar6;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puVar5 = in_EDX + in_EAX;\n    if (in_ECX == NULL) {\n        var_4h = 0;\n        iVar6 = 0;\n    }\n    else {\n        iVar6 = *in_ECX;\n        var_4h = in_ECX[1];\n    }\n    if (arg_8h == 0) {\n        puVar4 = in_EAX + 1;\n        do {\n            uVar2 = puVar4[-1];\n            uVar3 = *puVar4;\n            iVar6 = iVar6 + *(puVar4 + -1) +\n                            (uVar2 * 0x10000 + (uVar2 & 0xff00)) * 0x100 + var_4h + (uVar2 >> 0x10 & 0xff) * 0x100;\n            var_4h = var_4h + *(puVar4 + 3) +\n                              (uVar3 * 0x10000 + (uVar3 & 0xff00)) * 0x100 + iVar6 + (uVar3 >> 0x10 & 0xff) * 0x100;\n            puVar1 = puVar4 + 1;\n            puVar4 = puVar4 + 2;\n        } while (puVar1 < puVar5);\n    }\n    else {\n        do {\n            iVar6 = iVar6 + *in_EAX + var_4h;\n            var_4h = var_4h + in_EAX[1] + iVar6;\n            in_EAX = in_EAX + 2;\n        } while (in_EAX < puVar5);\n    }\n    *arg_ch = iVar6;\n    arg_ch[1] = var_4h;\n    return;\n}\n",
        "token_count": 507
    },
    "004234ab": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.004234ab(uint param_1)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x1e) != '\\0') {\n        return 0;\n    }\n    uVar1 = (**(**(in_EAX + 4) + 0x38))(*(in_EAX + 4), param_1, 1, 6);\n    return uVar1;\n}\n",
        "token_count": 100
    },
    "004234c9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004234c9(uint param_1)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x1e) == '\\0') {\n        (**(**(in_EAX + 4) + 0x38))(*(in_EAX + 4), param_1, 1, 5);\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "004234e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.004234e4(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x1e) != '\\0') {\n        return 0;\n    }\n    uVar1 = (**(**(in_EAX + 4) + 0x38))(*(in_EAX + 4), param_1, param_2, 10);\n    return uVar1;\n}\n",
        "token_count": 107
    },
    "00423504": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00423504(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x1e) == '\\0') {\n        (**(**(in_EAX + 4) + 0x38))(*(in_EAX + 4), param_1, param_2, 9);\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "004239b3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00423a27)\n\nint32_t __cdecl fcn.004239b3(int32_t arg_8h, int32_t arg_ch, int32_t **arg_10h)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    *arg_10h = NULL;\n    piVar1 = fcn.0041c2d3(*(in_ECX + 4) + 0x5c);\n    if (piVar1 == NULL) {\n        iVar2 = 7;\n    }\n    else {\n        *(piVar1 + 7) = 0xffff;\n        piVar1[2] = piVar1 + 0x17;\n        piVar1[1] = arg_8h;\n        *piVar1 = in_ECX;\n        piVar1[0x15] = in_EAX;\n        *(piVar1 + 0x1e) = (arg_ch == 0) - 1U & 2;\n        iVar2 = fcn.0041ba2a();\n        if (iVar2 == 0) {\n            *arg_10h = piVar1;\n        }\n        else {\n            fcn.00423975(0);\n            fcn.0041b9d3();\n            fcn.0041c110(piVar1);\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 331
    },
    "00423c3a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00423c3a(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t *var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = *(arg_8h + 0x34);\n    var_4h = 0;\n    iVar4 = (var_14h + 0x21U >> 0xc) + 1;\n    iVar2 = iVar4 * 10 + var_14h;\n    iVar1 = fcn.0041bf86();\n    if (iVar1 == 0) {\n        var_4h = 7;\n    }\n    else {\n        fcn.0044b531(iVar1, 0, iVar2 * 2 + 8);\n        *(iVar1 + 4) = iVar4;\n        var_20h = fcn.0041bf86();\n        if (var_20h == 0) {\n            var_4h = 7;\n        }\n        var_10h = 0;\n        if (var_4h == 0) {\n            var_1ch = iVar1 + 0x14;\n            do {\n                if (iVar4 <= var_10h) break;\n                var_4h = fcn.00423521(&var_24h, &var_ch, &var_8h);\n                if (var_4h == 0) {\n                    var_ch = var_ch + 4;\n                    if (var_10h + 1 == iVar4) {\n                        var_18h = var_14h - var_8h;\n                    }\n                    else {\n                        var_18h = var_24h - var_ch >> 2;\n                    }\n                    iVar2 = *(iVar1 + 4) * 10 + var_8h;\n                    var_8h = var_8h + 1;\n                    iVar2 = iVar1 + 8 + iVar2 * 2;\n                    iVar3 = 0;\n                    if (0 < var_18h) {\n                        do {\n                            *(iVar2 + iVar3 * 2) = iVar3;\n                            iVar3 = iVar3 + 1;\n                        } while (iVar3 < var_18h);\n                    }\n                    fcn.00423b6b(var_ch, var_20h, iVar2, &var_18h);\n                    var_1ch[1] = var_8h;\n                    *var_1ch = var_18h;\n                    var_1ch[-2] = iVar2;\n                    var_1ch[-1] = var_ch;\n                }\n                var_10h = var_10h + 1;\n                var_1ch = var_1ch + 5;\n            } while (var_4h == 0);\n        }\n        fcn.0041c02b();\n        if (var_4h != 0) {\n            fcn.0041c02b();\n        }\n        *arg_ch = iVar1;\n    }\n    return var_4h;\n}\n",
        "token_count": 751
    },
    "00424048": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00424048(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_EDI;\n    int32_t var_4h;\n    \n    iVar1 = 0;\n    if (unaff_EDI != NULL) {\n        var_4h = 0;\n        iVar1 = (**(*unaff_EDI[1] + 0x1c))(unaff_EDI[1], 4);\n        if (iVar1 == 0) {\n            if (*(unaff_EDI + 0x1e) == '\\0') {\n                *(unaff_EDI + 0x1e) = 1;\n            }\n            iVar1 = fcn.00424a60(arg_8h, arg_ch, arg_10h);\n            if (iVar1 == 0) {\n                var_4h = 1;\n            }\n        }\n        fcn.00423975(var_4h);\n        fcn.0041b9d3();\n        if (var_4h != 0) {\n            (**(*unaff_EDI + 0x1c))(*unaff_EDI, unaff_EDI[0x15], 0);\n        }\n        fcn.0041c110(unaff_EDI[5]);\n        fcn.0041c110();\n    }\n    return iVar1;\n}\n",
        "token_count": 309
    },
    "004240d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004240d0(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_ESI;\n    uint var_6ch;\n    uint var_3ch;\n    uint var_30h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    \n    iVar1 = **(unaff_ESI + 0x14);\n    fcn.0044b575(&var_3ch, iVar1, 0x30);\n    fcn.00423352();\n    fcn.0044b575(&var_6ch, iVar1 + 0x30, 0x30);\n    iVar1 = fcn.0044b5ab(&var_3ch, &var_6ch, 0x30);\n    if ((iVar1 == 0) && (var_30h != '\\0')) {\n        uVar2 = 1;\n        fcn.004232a7(1, &var_ch);\n        if ((var_ch == var_14h) && (var_8h == var_10h)) {\n            iVar1 = fcn.0044b5ab(unaff_ESI + 0x24, &var_3ch, 0x30);\n            if (iVar1 != 0) {\n                *arg_8h = 1;\n                fcn.0044b575(unaff_ESI + 0x24, &var_3ch, 0x30);\n                *(unaff_ESI + 0x18) = (*(unaff_ESI + 0x32) & 1) * 0x10000 + (*(unaff_ESI + 0x32) & 0xfe00);\n            }\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 444
    },
    "00424191": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00424191(uint *arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iStack16;\n    int32_t aiStack12 [2];\n    \n    iVar1 = fcn.004231ea(aiStack12);\n    if (iVar1 == 0) {\n        if (aiStack12[0] == 0) {\n            iStack16 = 1;\n        }\n        else {\n            iStack16 = fcn.004240d0(arg_8h);\n        }\n        if (iStack16 != 0) {\n            iVar1 = fcn.004234e4(0, 1);\n            if (iVar1 == 0) {\n                *(in_EAX + 0x1f) = 1;\n                iVar1 = fcn.004231ea(aiStack12);\n                if ((iVar1 == 0) && (iStack16 = fcn.004240d0(arg_8h),  iStack16 != 0)) {\n                    iVar1 = fcn.004236a8();\n                    *arg_8h = 1;\n                }\n                *(in_EAX + 0x1f) = 0;\n                fcn.00423504(0, 1);\n            }\n            if (iStack16 != 0) {\n                return iVar1;\n            }\n        }\n        if (*(in_EAX + 0x24) != 0x2de218) {\n            iVar1 = fcn.0044a966(0xaa60);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 350
    },
    "00424254": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00424254(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    int32_t *unaff_ESI;\n    int32_t iVar5;\n    uint32_t var_4h;\n    \n    if (5 < arg_10h) {\n        if (100 < arg_10h) {\n            return 0xf;\n        }\n        (**(*unaff_ESI + 0x3c))(*unaff_ESI, 1);\n    }\n    if (arg_ch == 0) {\n        iVar2 = fcn.00424191(arg_8h);\n        if (iVar2 != 5) {\ncode_r0x004242b9:\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            goto code_r0x004242c1;\n        }\n        if (*unaff_ESI[5] == 0) {\n            return -1;\n        }\n        iVar2 = fcn.004234ab(2);\n        if (iVar2 != 0) {\n            if (iVar2 == 5) {\n                iVar2 = 0x105;\n            }\n            goto code_r0x004242b9;\n        }\n        iVar5 = 2;\ncode_r0x0042441b:\n        fcn.004234c9(iVar5);\n    }\n    else {\ncode_r0x004242c1:\n        iVar2 = *unaff_ESI[5];\n        if ((arg_ch == 0) && (*(iVar2 + 0x60) == unaff_ESI[0xd])) {\n            iVar5 = fcn.004234ab(3);\n            fcn.00423352();\n            if (iVar5 == 0) {\n                iVar2 = fcn.0044b5ab(*unaff_ESI[5], unaff_ESI + 9, 0x30);\n                if (iVar2 == 0) {\n                    *(unaff_ESI + 7) = 0;\n                    return 0;\n                }\n                iVar5 = 3;\n                goto code_r0x0042441b;\n            }\n            if (iVar5 != 5) {\n                return iVar5;\n            }\n        }\n        var_4h = 0;\n        arg_10h = 0;\n        iVar5 = 1;\n        puVar4 = iVar2 + 0x68;\n        do {\n            uVar1 = *puVar4;\n            if ((var_4h <= uVar1) && (uVar1 < unaff_ESI[0xd] || uVar1 == unaff_ESI[0xd])) {\n                arg_10h = iVar5;\n                var_4h = uVar1;\n            }\n            iVar5 = iVar5 + 1;\n            puVar4 = puVar4 + 1;\n        } while (iVar5 < 5);\n        if (arg_10h == 0) {\n            iVar3 = fcn.004234e4(4, 1);\n            if (iVar3 == 0) {\n                *(iVar2 + 0x68) = unaff_ESI[0xd];\n                fcn.00423504(4, 1);\n                return -1;\n            }\n        }\n        else {\n            if (var_4h < unaff_ESI[0xd]) {\n                iVar5 = 1;\n                do {\n                    iVar3 = fcn.004234e4(iVar5 + 3, 1);\n                    if (iVar3 == 0) {\n                        var_4h = unaff_ESI[0xd];\n                        *(iVar2 + 100 + iVar5 * 4) = var_4h;\n                        fcn.00423504(iVar5 + 3, 1);\n                        arg_10h = iVar5;\n                        break;\n                    }\n                    if (iVar3 != 5) {\n                        return iVar3;\n                    }\n                    iVar5 = iVar5 + 1;\n                } while (iVar5 < 5);\n            }\n            iVar5 = arg_10h + 3;\n            iVar3 = fcn.004234ab(iVar5);\n            if (iVar3 == 0) {\n                fcn.00423352();\n                if ((*(iVar2 + 100 + arg_10h * 4) == var_4h) &&\n                   (iVar2 = fcn.0044b5ab(*unaff_ESI[5], unaff_ESI + 9, 0x30),  iVar2 == 0)) {\n                    *(unaff_ESI + 7) = arg_10h;\n                    return 0;\n                }\n                goto code_r0x0042441b;\n            }\n        }\n        if (iVar3 != 5) {\n            return iVar3;\n        }\n    }\n    return -1;\n}\n",
        "token_count": 1079
    },
    "00424451": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00424451(int32_t arg_8h, uint *arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t unaff_ESI;\n    int64_t iVar5;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_18h = *(unaff_ESI + 0x34);\n    var_4h = 0;\n    if ((var_18h == 0) || (*(unaff_ESI + 0x1c) == 0)) {\n        *arg_ch = 0;\n    }\n    else {\n        var_ch = var_18h + 0x21 >> 0xc;\n        do {\n            if (var_4h != 0) goto code_r0x00424529;\n            iVar3 = fcn.00423521(&var_10h, &var_1ch, &var_14h);\n            if (iVar3 != 0) {\n                return iVar3;\n            }\n            uVar4 = arg_8h * 0x17f & 0x1fff;\n            puVar1 = var_10h + uVar4 * 2;\n            uVar2 = *puVar1;\n            var_8h = 0x2000;\n            iVar3 = var_8h;\n            while (uVar2 != 0) {\n                if ((*puVar1 + var_14h <= var_18h) && (*(var_1ch + *puVar1 * 4) == arg_8h)) {\n                    var_4h = *puVar1 + var_14h;\n                }\n                var_8h = iVar3 + -1;\n                if (iVar3 == 0) {\n                    iVar3 = fcn.0044a92e(0xabb1);\n                    return iVar3;\n                }\n                uVar4 = uVar4 + 1 & 0x1fff;\n                puVar1 = var_10h + uVar4 * 2;\n                iVar3 = var_8h;\n                uVar2 = *puVar1;\n            }\n            var_ch = var_ch - 1;\n            var_8h = iVar3;\n        } while (-1 < var_ch);\n        if (var_4h != 0) {\ncode_r0x00424529:\n            iVar5 = fcn.0044b8cd((*(unaff_ESI + 0x32) & 1) * 0x10000 + 0x18 + (*(unaff_ESI + 0x32) & 0xfe00), 0, \n                                 var_4h - 1, 0);\n            *arg_ch = 1;\n            iVar3 = fcn.0041b9e4(arg_14h, arg_10h, iVar5 + 0x38);\n            return iVar3;\n        }\n        *arg_ch = 0;\n    }\n    return 0;\n}\n",
        "token_count": 726
    },
    "00424586": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00424586(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_ESI;\n    \n    if (*(unaff_ESI + 0x21) == '\\0') {\n        iVar1 = fcn.004234e4(0, 1);\n        if (iVar1 == 0) {\n            *(unaff_ESI + 0x1f) = 1;\n            iVar2 = fcn.0044b5ab(unaff_ESI + 0x24, **(unaff_ESI + 0x14), 0x30);\n            if (iVar2 != 0) {\n                fcn.00423504(0, 1);\n                *(unaff_ESI + 0x1f) = 0;\n                iVar1 = 5;\n            }\n        }\n        return iVar1;\n    }\n    return 8;\n}\n",
        "token_count": 202
    },
    "004245d7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.004245d7(void)\n\n{\n    int32_t unaff_ESI;\n    \n    if (*(unaff_ESI + 0x1f) != '\\0') {\n        fcn.00423504(0, 1);\n        *(unaff_ESI + 0x1f) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 79
    },
    "004245f1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004245f1(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint arg_ch;\n    uint32_t uVar2;\n    int32_t unaff_ESI;\n    uint32_t uVar3;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    if (*(unaff_ESI + 0x1f) != '\\0') {\n        uVar1 = *(unaff_ESI + 0x34);\n        fcn.0044b575(unaff_ESI + 0x24, **(unaff_ESI + 0x14), 0x30);\n        uVar3 = *(unaff_ESI + 0x34);\n        uVar2 = uVar3 + 0x22;\n        var_4h = uVar2 * 4;\n        do {\n            uVar3 = uVar3 + 1;\n            if (uVar1 < uVar3) break;\n            if (uVar2 >> 0xc == 0) {\n                arg_ch = *(var_4h + **(unaff_ESI + 0x14));\n            }\n            else {\n                arg_ch = *(*(*(unaff_ESI + 0x14) + (uVar2 >> 0xc) * 4) + (uVar2 & 0xfff) * 4);\n            }\n            var_8h = fcn.00421520(arg_8h, arg_ch);\n            var_4h = var_4h + 4;\n            uVar2 = uVar2 + 1;\n        } while (var_8h == 0);\n        fcn.00423572();\n    }\n    return var_8h;\n}\n",
        "token_count": 396
    },
    "0042472c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00424941)\n// WARNING: Removing unreachable block (ram,0x004249b1)\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0042472c(uint32_t arg_8h, uint *arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint extraout_ECX;\n    uint arg_8h_00;\n    uint32_t uVar5;\n    bool bVar6;\n    int64_t iVar7;\n    ulong uVar8;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint *var_18h;\n    int32_t var_14h;\n    uint *var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    \n    var_18h = NULL;\n    var_14h = 0;\n    iVar3 = fcn.0042467b();\n    if (iVar3 == 0) {\n        var_8h = *(in_EAX + 0x34);\n        if (var_8h == 0) {\n            var_64h._0_1_ = 0x37;\n            var_64h._1_1_ = 0x7f;\n            var_64h._2_1_ = 6;\n            var_64h._3_1_ = 0x82;\n            fcn.0041d7e6();\n            fcn.0041d7e6();\n            fcn.0041d7e6();\n            fcn.0041d095(8);\n            fcn.0044b575(&var_54h, in_EAX + 0x44, 8);\n            fcn.004232a7(1, &var_24h);\n            iVar3 = var_24h;\n            fcn.0041d7e6();\n            fcn.0041d7e6();\n            *(in_EAX + 0x18) = arg_8h;\n            *(in_EAX + 0x31) = 0;\n            *(in_EAX + 0x3c) = iVar3;\n            *(in_EAX + 0x40) = extraout_ECX;\n            iVar3 = (**(**(in_EAX + 8) + 0xc))(*(in_EAX + 8), &var_64h, 0x20, 0, 0);\n            if (iVar3 != 0) {\n                return iVar3;\n            }\n        }\n        var_10h = arg_ch;\n        if (arg_ch != NULL) {\n            var_24h = arg_8h + 0x18;\n            var_20h = var_24h >> 0x1f;\n            do {\n                iVar3 = var_8h;\n                var_8h = var_8h + 1;\n                iVar7 = fcn.0044b8cd(iVar3, 0, var_24h, var_20h);\n                uVar5 = iVar7 + 0x20;\n                var_28h = iVar7 + 0x20 >> 0x20;\n                if ((arg_14h == 0) || (arg_8h_00 = arg_10h,  var_10h[2] != 0)) {\n                    arg_8h_00 = 0;\n                }\n                var_18h = *var_10h;\n                fcn.004233ab(arg_8h_00, var_18h);\n                iVar3 = var_28h;\n                iVar4 = fcn.0041b9fe(&var_44h, 0x18, uVar5, var_28h);\n                if (iVar4 != 0) {\n                    return iVar4;\n                }\n                iVar3 = fcn.0041b9fe(var_18h, arg_8h, iVar7 + 0x38, iVar3 + (0xffffffe7 < uVar5));\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\n                var_18h = var_10h;\n                var_10h = var_10h[2];\n            } while (var_10h != NULL);\n        }\n        if (arg_18h != 0) {\n            pcVar1 = *(**(in_EAX + 8) + 0x2c);\n            if (pcVar1 == NULL) {\n                var_24h = 0x200;\n            }\n            else {\n                var_24h = (*pcVar1)(*(in_EAX + 8));\n            }\n            var_20h = var_24h >> 0x1f;\n            iVar7 = fcn.0044b8cd(arg_8h + 0x18, arg_8h + 0x18 >> 0x1f, var_8h, 0);\n            iVar7 = iVar7 + 0x20;\n            var_ch = iVar7;\n            iVar4 = iVar7 >> 0x20;\n            iVar2 = iVar7 + CONCAT44(var_20h, var_24h);\n            iVar3 = iVar2;\n            uVar8 = fcn.0044b9ed(iVar3 + -1, (iVar2 >> 0x20) - (iVar3 == 0), var_24h, var_20h);\n            _var_24h = fcn.0044b8cd(uVar8, var_24h, var_20h);\n            if (iVar7 < _var_24h) {\n                do {\n                    var_10h = *var_18h;\n                    fcn.004233ab(arg_10h, var_10h);\n                    iVar3 = fcn.0041b9fe(&var_44h, 0x18, var_ch, iVar4);\n                    if (iVar3 != 0) {\n                        return iVar3;\n                    }\n                    bVar6 = 0xffffffe7 < var_ch;\n                    var_ch = var_ch + 0x18;\n                    iVar4 = iVar4 + bVar6;\n                    iVar3 = fcn.0041b9fe(var_10h, arg_8h, var_ch, iVar4);\n                    if (iVar3 != 0) {\n                        return iVar3;\n                    }\n                    var_14h = var_14h + 1;\n                    bVar6 = CARRY4(var_ch, arg_8h);\n                    var_ch = var_ch + arg_8h;\n                    iVar4 = iVar4 + (arg_8h >> 0x1f) + bVar6;\n                } while (CONCAT44(iVar4, var_ch) < _var_24h);\n            }\n            iVar3 = (**(**(in_EAX + 8) + 0x14))(*(in_EAX + 8), arg_18h);\n        }\n        var_8h = *(in_EAX + 0x34);\n        while ((var_10h = arg_ch,  arg_ch != NULL && (iVar3 == 0))) {\n            var_8h = var_8h + 1;\n            iVar3 = fcn.004235f1(in_EAX, arg_ch[3]);\n            arg_ch = var_10h[2];\n        }\n        while (0 < var_14h) {\n            if (iVar3 != 0) {\n                return iVar3;\n            }\n            var_8h = var_8h + 1;\n            var_14h = var_14h + -1;\n            iVar3 = fcn.004235f1(in_EAX, var_18h[3]);\n        }\n        if (iVar3 == 0) {\n            *(in_EAX + 0x32) = arg_8h >> 0x10 | arg_8h & 0xff00;\n            *(in_EAX + 0x34) = var_8h;\n            if (arg_14h != 0) {\n                *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 1;\n                *(in_EAX + 0x38) = arg_10h;\n                fcn.00423363();\n                *(in_EAX + 0xc) = var_8h;\n            }\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 1938
    },
    "00424a60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00424a60(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.004234e4(1, 1);\n    if (iVar1 == 0) {\n        *(unaff_ESI + 0x20) = 1;\n        iVar1 = fcn.00424191(&var_4h);\n        if (iVar1 == 0) {\n            iVar1 = fcn.00423d81(arg_8h, arg_ch, arg_10h);\n        }\n        if (var_4h != 0) {\n            fcn.0044b531(unaff_ESI + 0x24, 0, 0x30);\n        }\n        fcn.00423504(1, 1);\n        *(unaff_ESI + 0x20) = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 237
    },
    "00424c3d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00424c3d(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    int32_t arg_8h_00;\n    uint var_98h;\n    \n    arg_8h_00 = 0;\n    if ((arg_8h == 0) || (arg_8h_00 = fcn.0042b273(arg_ch, arg_8h),  arg_8h_00 != 0)) {\n        uVar1 = fcn.004266a8(arg_8h_00, arg_ch, arg_10h, arg_14h, arg_18h);\n        if (arg_8h != 0) {\n            fcn.0042b388();\n        }\n    }\n    else {\n        uVar1 = 7;\n    }\n    return uVar1;\n}\n",
        "token_count": 208
    },
    "00424cec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00424cec(uint32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    int16_t iVar3;\n    uint32_t *in_EAX;\n    uint32_t in_ECX;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    in_EAX[2] = arg_8h;\n    var_4h = *(in_ECX + 6);\n    var_4h._0_2_ = *(in_ECX + 6);\n    uVar5 = in_ECX;\n    if (*(in_ECX + 2) == '\\0') {\n        in_EAX[3] = 0;\n        if (*(var_4h + arg_8h) < 0x80) {\n            uVar1 = 1;\n            uVar5 = *(var_4h + arg_8h);\n        }\n        else {\n            uVar1 = fcn.0041d746();\n        }\n        iVar3 = var_4h + uVar1;\n        in_EAX[1] = 0;\n        *in_EAX = uVar5;\n    }\n    else {\n        if (*(in_ECX + 4) == '\\0') {\n            uVar5 = 0;\n        }\n        else {\n            if (*(var_4h + arg_8h) < 0x80) {\n                uVar1 = 1;\n                uVar5 = *(var_4h + arg_8h);\n            }\n            else {\n                uVar1 = fcn.0041d746();\n            }\n            var_4h = var_4h + uVar1;\n        }\n        uVar1 = fcn.0041d5ae();\n        iVar3 = var_4h + uVar1;\n        in_EAX[3] = uVar5;\n    }\n    *(in_EAX + 5) = iVar3;\n    in_EAX[4] = uVar5;\n    if (*(in_ECX + 8) < uVar5) {\n        uVar2 = *(in_ECX + 10);\n        iVar4 = (uVar5 - uVar2) % (*(*(in_ECX + 0x3c) + 0x24) - 4U) + uVar2;\n        if (*(in_ECX + 8) < iVar4) {\n            *(in_EAX + 0x16) = uVar2;\n        }\n        else {\n            *(in_EAX + 0x16) = iVar4;\n        }\n        iVar3 = *(in_EAX + 0x16) + iVar3;\n        *(in_EAX + 6) = iVar3;\n        *(in_EAX + 0x1a) = iVar3 + 4;\n    }\n    else {\n        uVar2 = iVar3 + uVar5;\n        *(in_EAX + 0x1a) = uVar2;\n        if (uVar2 < 4) {\n            *(in_EAX + 0x1a) = 4;\n        }\n        *(in_EAX + 6) = 0;\n        *(in_EAX + 0x16) = uVar5;\n    }\n    return;\n}\n",
        "token_count": 732
    },
    "004251a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004251a4(uint arg_8h)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    uint8_t uVar3;\n    uchar uVar4;\n    char cVar5;\n    int32_t in_EAX;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint16_t uVar9;\n    int32_t in_ECX;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    uint uVar13;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar12 = *(in_ECX + 0x40);\n    if (*(*(in_ECX + 0x3c) + 0x12) != '\\0') {\n        fcn.0044b531(iVar12 + in_EAX, 0, arg_8h);\n    }\n    uVar6 = *(in_ECX + 5);\n    uVar9 = CONCAT11(*(uVar6 + 1 + iVar12), *(uVar6 + 2 + iVar12));\n    uVar7 = uVar6 + 1;\n    while ((uVar8 = uVar9,  uVar8 < in_EAX && (uVar9 != 0))) {\n        if (uVar8 < uVar7 + 4) {\n            uVar13 = 0xb6d4;\n            goto code_r0x00425219;\n        }\n        uVar7 = uVar8;\n        uVar9 = CONCAT11(*(uVar8 + iVar12), *(uVar8 + 1 + iVar12));\n    }\n    if (*(*(in_ECX + 0x3c) + 0x24) + -4 < uVar8) {\n        uVar13 = 0xb6d9;\ncode_r0x00425219:\n        uVar13 = fcn.0044a92e(uVar13);\n    }\n    else {\n        (uVar7 + iVar12)[1] = in_EAX;\n        *(uVar7 + iVar12) = in_EAX >> 8;\n        puVar1 = iVar12 + in_EAX;\n        puVar1[1] = uVar9;\n        *puVar1 = uVar8 >> 8;\n        puVar1[3] = arg_8h;\n        puVar1[2] = arg_8h >> 8;\n        *(in_ECX + 0xe) = *(in_ECX + 0xe) + arg_8h;\n        var_ch = uVar6 + 1;\n        uVar9 = CONCAT11(*(var_ch + iVar12), (var_ch + iVar12)[1]);\n        while (uVar7 = uVar9,  uVar9 != 0) {\n            puVar1 = iVar12 + 2 + uVar7;\n            puVar2 = iVar12 + 3 + uVar7;\n            uVar10 = CONCAT11(*puVar1, *puVar2);\n            uVar8 = CONCAT11(*(uVar7 + iVar12), *(iVar12 + 1 + uVar7));\n            if ((uVar8 <= uVar10 + 3 + uVar7) && (uVar8 != 0)) {\n                iVar11 = (uVar8 - uVar10) - uVar7;\n                if ((iVar11 < 0) || (uVar3 = *(uVar6 + 7 + iVar12),  uVar3 < iVar11)) {\n                    uVar13 = 0xb6ec;\n                    goto code_r0x00425219;\n                }\n                var_8h._0_1_ = iVar11;\n                *(uVar6 + 7 + iVar12) = uVar3 - var_8h;\n                uVar4 = *(uVar8 + iVar12);\n                *(iVar12 + 1 + uVar7) = *(iVar12 + 1 + uVar8);\n                *(uVar7 + iVar12) = uVar4;\n                iVar11 = uVar8 + (CONCAT11(*(iVar12 + 2 + uVar8), *(iVar12 + 3 + uVar8)) - uVar7);\n                *puVar1 = iVar11 >> 8;\n                *puVar2 = iVar11;\n                uVar7 = var_ch;\n            }\n            var_ch = uVar7;\n            uVar9 = CONCAT11(*(var_ch + iVar12), *(iVar12 + 1 + var_ch));\n        }\n        iVar11 = uVar6 + iVar12;\n        cVar5 = *(iVar11 + 1);\n        if ((cVar5 == *(iVar11 + 5)) && (*(iVar11 + 2) == *(iVar11 + 6))) {\n            iVar12 = iVar12 + CONCAT11(cVar5, *(iVar11 + 2));\n            fcn.0044b575(iVar11 + 1, iVar12, 2);\n            iVar12 = CONCAT11(*(iVar12 + 2), *(iVar12 + 3)) + CONCAT11(*(iVar11 + 5), *(iVar11 + 6));\n            *(iVar11 + 5) = iVar12 >> 8;\n            *(iVar11 + 6) = iVar12;\n        }\n        uVar13 = 0;\n    }\n    return uVar13;\n}\n",
        "token_count": 1187
    },
    "004253c2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint fcn.004253c2(void)\n\n{\n    uint32_t uVar1;\n    uchar *puVar2;\n    uint8_t uVar3;\n    uchar uVar4;\n    uchar uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint16_t uVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    uint16_t uVar12;\n    uint32_t uVar13;\n    char *unaff_EDI;\n    uint uVar14;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (*unaff_EDI == '\\0') {\n        uVar3 = unaff_EDI[5];\n        iVar6 = *(unaff_EDI + 0x40);\n        iVar7 = *(unaff_EDI + 0x3c);\n        iVar11 = uVar3 + iVar6;\n        iVar10 = fcn.0042535f();\n        if (iVar10 == 0) {\n            *(unaff_EDI + 0x12) = *(iVar7 + 0x20) + -1;\n            unaff_EDI[1] = '\\0';\n            iVar10 = *(iVar7 + 0x24);\n            uVar12 = (3 - unaff_EDI[3]) * 4 + uVar3;\n            *(unaff_EDI + 0xc) = uVar12;\n            uVar4 = *(iVar11 + 5);\n            uVar5 = *(iVar11 + 6);\n            uVar9 = CONCAT11(*(iVar11 + 3), *(iVar11 + 4));\n            *(unaff_EDI + 0x10) = uVar9;\n            if ((*(iVar7 + 0x20) - 8U) / 6 < uVar9) {\n                uVar14 = 0xb754;\n            }\n            else {\n                uVar1 = uVar12 + uVar9 * 2;\n                uVar9 = CONCAT11(*(iVar11 + 1), *(iVar11 + 2));\n                iVar11 = *(iVar11 + 7) + (CONCAT11(uVar4, uVar5) - 1 & 0xffff) + 1;\n                uVar8 = uVar9;\n                while (uVar9 != 0) {\n                    if ((uVar8 < uVar1) || (iVar10 + -4 < uVar8)) {\n                        uVar14 = 0xb77f;\n                        goto code_r0x004253fb;\n                    }\n                    puVar2 = uVar8 + iVar6;\n                    uVar9 = CONCAT11(*puVar2, puVar2[1]);\n                    uVar13 = CONCAT11(puVar2[2], puVar2[3]);\n                    if (((uVar9 != 0) && (uVar9 <= uVar13 + 3 + uVar8)) || (iVar10 < uVar13 + uVar8)) {\n                        uVar14 = 0xb786;\n                        goto code_r0x004253fb;\n                    }\n                    iVar11 = iVar11 + uVar13;\n                    uVar8 = uVar9;\n                }\n                if (iVar11 <= iVar10) {\n                    *unaff_EDI = '\\x01';\n                    *(unaff_EDI + 0xe) = iVar11 - uVar1;\n                    goto code_r0x00425529;\n                }\n                uVar14 = 0xb794;\n            }\n        }\n        else {\n            uVar14 = 0xb74a;\n        }\ncode_r0x004253fb:\n        uVar14 = fcn.0044a92e(uVar14);\n    }\n    else {\ncode_r0x00425529:\n        uVar14 = 0;\n    }\n    return uVar14;\n}\n",
        "token_count": 857
    },
    "0042552f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0042552f(uint32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int16_t iVar4;\n    uchar *unaff_ESI;\n    uchar *puVar5;\n    uint var_8h;\n    uint var_1h;\n    \n    uVar1 = unaff_ESI[5];\n    iVar2 = *(unaff_ESI + 0x3c);\n    iVar3 = *(unaff_ESI + 0x40);\n    if (*(iVar2 + 0x12) != '\\0') {\n        fcn.0044b531(uVar1 + iVar3, 0, *(iVar2 + 0x24) - uVar1);\n    }\n    puVar5 = iVar3 + uVar1;\n    *puVar5 = arg_8h;\n    iVar4 = (~(arg_8h >> 3) & 1) * 4 + 8 + uVar1;\n    fcn.0044b531(puVar5 + 1, 0, 4);\n    puVar5[7] = 0;\n    puVar5[5] = *(iVar2 + 0x24) >> 8;\n    puVar5[6] = *(iVar2 + 0x24);\n    *(unaff_ESI + 0xe) = *(iVar2 + 0x24) - iVar4;\n    fcn.0042535f();\n    unaff_ESI[5] = uVar1;\n    *(unaff_ESI + 0xc) = iVar4;\n    unaff_ESI[1] = 0;\n    iVar4 = *(iVar2 + 0x20);\n    *(unaff_ESI + 0x10) = 0;\n    *(unaff_ESI + 0x12) = iVar4 + -1;\n    *unaff_ESI = 1;\n    return;\n}\n",
        "token_count": 446
    },
    "0042570f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_70h\n// WARNING: Variable defined which should be unmapped: var_5fh\n// WARNING: Variable defined which should be unmapped: var_4h\n\nchar * __cdecl fcn.0042570f(char *arg_8h, int32_t arg_ch, int32_t **arg_10h, uint32_t arg_14h, uint32_t arg_18h)\n\n{\n    uint32_t *arg_8h_00;\n    int32_t iVar1;\n    bool bVar2;\n    int32_t *noname_31;\n    int32_t *arg_8h_01;\n    uint32_t uVar3;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint var_70h;\n    uint in_stack_ffffff90;\n    uint in_stack_ffffff94;\n    uint in_stack_ffffff98;\n    uchar var_60h;\n    int32_t var_5fh;\n    uint in_stack_ffffffa4;\n    uint in_stack_ffffffa8;\n    uint in_stack_ffffffac;\n    uint in_stack_ffffffb0;\n    uint in_stack_ffffffb4;\n    uint in_stack_ffffffb8;\n    uint in_stack_ffffffbc;\n    uint in_stack_ffffffc0;\n    uint in_stack_ffffffc4;\n    uint in_stack_ffffffc8;\n    uint in_stack_ffffffcc;\n    uint in_stack_ffffffd0;\n    uint in_stack_ffffffd4;\n    uint in_stack_ffffffd8;\n    uint in_stack_ffffffdc;\n    uint in_stack_ffffffe0;\n    uint in_stack_ffffffe4;\n    uint in_stack_ffffffe8;\n    uint in_stack_ffffffec;\n    uint in_stack_fffffff0;\n    uint in_stack_fffffff4;\n    uint var_4h;\n    \n    if ((arg_8h == NULL) || (*arg_8h == '\\0')) {\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if ((*(arg_ch + 0xc) & 0x20000) != 0) {\n        arg_14h = arg_14h | 2;\n    }\n    if (((arg_18h & 0x100) != 0) && (bVar2)) {\n        arg_18h = arg_18h & 0xfffffeff | 0x200;\n    }\n    noname_31 = fcn.0041c2d3(0x1c);\n    if (noname_31 == NULL) {\n        arg_8h = 0x7;\n    }\n    else {\n        *(noname_31 + 2) = 0;\n        *noname_31 = arg_ch;\n        arg_8h_01 = fcn.0041c2d3(0x44);\n        if (arg_8h_01 == NULL) {\n            arg_8h = 0x7;\n        }\n        else {\n            arg_8h = fcn.00422015(arg_8h_01, arg_8h, arg_18h);\n            if (arg_8h == NULL) {\n                arg_18h = 0;\n                iVar1 = *arg_8h_01;\n                fcn.0044b531(&var_70h, 0, 100);\n                if ((**(iVar1 + 0x3c) != 0) && (arg_18h = fcn.0041b9e4(&var_70h, 100, 0, 0),  arg_18h == 0x20a)) {\n                    arg_18h = 0;\n                }\n                arg_8h = arg_18h;\n                if (arg_18h == 0) {\n                    *(arg_8h_01 + 5) = arg_14h;\n                    arg_8h_01[1] = arg_ch;\n                    iVar1 = *arg_8h_01;\n                    *(iVar1 + 0x98) = 0x41c6ca;\n                    *(iVar1 + 0x9c) = arg_8h_01;\n                    noname_31[1] = arg_8h_01;\n                    arg_8h_01[2] = 0;\n                    arg_8h_01[3] = 0;\n                    *(arg_8h_01 + 4) = *(*arg_8h_01 + 0xd);\n                    uVar3 = (_var_60h & 0xffff) * 0x100;\n                    arg_8h_00 = arg_8h_01 + 8;\n                    *arg_8h_00 = uVar3;\n                    if (((uVar3 < 0x200) || (0x10000 < uVar3)) || ((uVar3 & uVar3 - 1) != 0)) {\n                        *arg_8h_00 = 0;\n                        arg_18h = 0;\n                    }\n                    else {\n                        arg_18h = stack0xffffffa0 << 0x18;\n                        *(arg_8h_01 + 0x11) = 1;\n                    }\n                    arg_8h = fcn.00421a06(arg_8h_00, arg_18h._3_1_);\n                    if (arg_8h == NULL) {\n                        arg_8h_01[9] = *arg_8h_00 - arg_18h._3_1_;\n                        *arg_10h = noname_31;\n                        if (noname_31[1][0xc] != 0) {\n                            return 0;\n                        }\n                        iVar1 = *(*noname_31[1] + 0xa8);\n                        *(iVar1 + 0x10) = 2000;\n                        iVar1 = *(iVar1 + 0x28);\n                        if (iVar1 == 0) {\n                            return 0;\n                        }\n                        (*_fcn.0044f074)(iVar1, 2000);\n                        return 0;\n                    }\n                }\n            }\n        }\n        if ((arg_8h_01 != NULL) && (*arg_8h_01 != 0)) {\n            fcn.00421b5d(*arg_8h_01, unaff_EDI, unaff_ESI, unaff_EBX, var_70h, in_stack_ffffff90, in_stack_ffffff94, \n                         in_stack_ffffff98, _var_60h, stack0xffffffa0, in_stack_ffffffa4, in_stack_ffffffa8, \n                         in_stack_ffffffac, in_stack_ffffffb0, in_stack_ffffffb4, in_stack_ffffffb8, in_stack_ffffffbc, \n                         in_stack_ffffffc0, in_stack_ffffffc4, in_stack_ffffffc8, in_stack_ffffffcc, in_stack_ffffffd0, \n                         in_stack_ffffffd4, in_stack_ffffffd8, in_stack_ffffffdc, in_stack_ffffffe0, in_stack_ffffffe4, \n                         in_stack_ffffffe8, in_stack_ffffffec, in_stack_fffffff0, in_stack_fffffff4, noname_31, \n                         unaff_EBP, unaff_retaddr, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, in_stack_00000018, \n                         in_stack_0000001c, in_stack_00000020);\n        }\n        fcn.0041c110(arg_8h_01);\n        fcn.0041c110(noname_31);\n        *arg_10h = NULL;\n    }\n    return arg_8h;\n}\n",
        "token_count": 1742
    },
    "00425955": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00425955(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint32_t in_ECX;\n    \n    iVar1 = *(in_EAX + 4);\n    if (*(iVar1 + 0x11) == '\\0') {\n        if (arg_8h < 0) {\n            arg_8h = *(iVar1 + 0x20) - *(iVar1 + 0x24);\n        }\n        if ((in_ECX - 0x200 < 0xfe01) && ((in_ECX & in_ECX - 1) == 0)) {\n            *(iVar1 + 0x20) = in_ECX;\n            fcn.0041f8b9();\n            *(iVar1 + 0x40) = 0;\n        }\n        uVar2 = fcn.00421a06(iVar1 + 0x20, arg_8h);\n        *(iVar1 + 0x24) = *(iVar1 + 0x20) - (arg_8h & 0xffff);\n        if (arg_ch != 0) {\n            *(iVar1 + 0x11) = 1;\n        }\n    }\n    else {\n        uVar2 = 8;\n    }\n    return uVar2;\n}\n",
        "token_count": 304
    },
    "004259c5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuchar fcn.004259c5(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX == 0) {\n        return 0;\n    }\n    if (-1 < param_1) {\n        *(*(in_EAX + 4) + 0x12) = param_1 != 0;\n    }\n    return *(*(in_EAX + 4) + 0x12);\n}\n",
        "token_count": 98
    },
    "004259e2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.004259e2(void)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t *unaff_EBX;\n    uint32_t uVar7;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = fcn.00422477();\n    if (iVar2 != 0) {\n        return iVar2;\n    }\n    iVar3 = fcn.004255ea(&var_4h, 0);\n    iVar2 = var_4h;\n    if (iVar3 != 0) {\n        return iVar3;\n    }\n    iVar4 = fcn.0041d7cc();\n    iVar3 = *(*unaff_EBX + 0x18);\n    if ((iVar4 == 0) ||\n       (iVar5 = *(iVar2 + 0x40),  var_ch = iVar4,  iVar5 = fcn.0044b5ab(iVar5 + 0x18, iVar5 + 0x5c, 4),  iVar5 != 0)) {\n        var_ch = iVar3;\n    }\n    if (var_ch < 1) {\ncode_r0x00425b86:\n        *(unaff_EBX + 6) = ((unaff_EBX[9] + -0xc) * 0x40) / 0xff + -0x17;\n        iVar1 = ((unaff_EBX[9] + -0xc) * 0x20) / 0xff + -0x17;\n        *(unaff_EBX + 0x1a) = iVar1;\n        *(unaff_EBX + 0x1e) = iVar1;\n        unaff_EBX[3] = var_4h;\n        *(unaff_EBX + 7) = *(unaff_EBX + 9) + -0x23;\n        unaff_EBX[0xb] = var_ch;\ncode_r0x00425bcf:\n        var_8h = 0;\n    }\n    else {\n        iVar2 = *(iVar2 + 0x40);\n        var_8h = 0x1a;\n        iVar5 = fcn.0044b5ab(iVar2, fcn.004442c4, 0x10);\n        if (iVar5 == 0) {\n            if (2 < *(iVar2 + 0x12)) {\n                *(unaff_EBX + 4) = 1;\n            }\n            if (*(iVar2 + 0x13) < 3) {\n                if ((*(iVar2 + 0x13) == 2) && (*(unaff_EBX + 0x16) == '\\0')) {\n                    var_10h = 0;\n                    var_8h = fcn.0042311b(&var_10h);\n                    if (var_8h == 0) {\n                        if (var_10h != 0) {\n                            var_8h = 0x1a;\n                            goto code_r0x00425acb;\n                        }\n                        fcn.004256a8();\n                        goto code_r0x00425bcf;\n                    }\n                }\n                else {\ncode_r0x00425acb:\n                    iVar5 = fcn.0044b5ab(iVar2 + 0x15, 0x44a3a0, 3);\n                    if (((iVar5 == 0) && (uVar6 = *(iVar2 + 0x10) * 0x100,  (uVar6 & uVar6 - 1) == 0)) &&\n                       (uVar6 - 0x101 < 0xff00)) {\n                        uVar7 = uVar6 - *(iVar2 + 0x14);\n                        var_10h = uVar7;\n                        if (uVar6 != unaff_EBX[8]) {\n                            fcn.004256a8();\n                            unaff_EBX[9] = uVar7;\n                            unaff_EBX[8] = uVar6;\n                            fcn.0041f8b9();\n                            unaff_EBX[0x10] = 0;\n                            iVar2 = fcn.00421a06(unaff_EBX + 8, uVar6 - var_10h);\n                            return iVar2;\n                        }\n                        if (((*(unaff_EBX[1] + 0xc) & 0x800000) == 0) && (iVar3 < iVar4)) {\n                            var_8h = fcn.0044a92e(0xbb28);\n                        }\n                        else if (0x1df < uVar7) {\n                            unaff_EBX[8] = uVar6;\n                            unaff_EBX[9] = uVar7;\n                            goto code_r0x00425b86;\n                        }\n                    }\n                }\n            }\n        }\n        fcn.004256a8();\n        unaff_EBX[3] = 0;\n    }\n    return var_8h;\n}\n",
        "token_count": 1148
    },
    "00425bd5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425bd5(uint param_1)\n\n{\n    int32_t unaff_ESI;\n    \n    if ((*(unaff_ESI + 0x15) == '\\0') && (*(unaff_ESI + 0xc) != 0)) {\n        fcn.004256a8(param_1);\n        *(unaff_ESI + 0xc) = 0;\n    }\n    return;\n}\n",
        "token_count": 94
    },
    "00425bee": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00425bee(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EBX;\n    \n    if (*(unaff_EBX + 0x2c) == 0) {\n        iVar1 = *(*(unaff_EBX + 0xc) + 0x40);\n        iVar2 = fcn.00422ad1();\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        fcn.0044b575(iVar1, fcn.004442c4, 0x10);\n        *(iVar1 + 0x10) = *(unaff_EBX + 0x21);\n        *(iVar1 + 0x11) = *(unaff_EBX + 0x22);\n        *(iVar1 + 0x12) = 1;\n        *(iVar1 + 0x13) = 1;\n        *(iVar1 + 0x14) = *(unaff_EBX + 0x20) - *(unaff_EBX + 0x24);\n        *(iVar1 + 0x15) = 0x40;\n        *(iVar1 + 0x16) = 0x20;\n        *(iVar1 + 0x17) = 0x20;\n        fcn.0044b531(iVar1 + 0x18, 0, 0x4c);\n        fcn.0042552f(0xd);\n        *(unaff_EBX + 0x11) = 1;\n        *(unaff_EBX + 0x2c) = 1;\n        *(iVar1 + 0x1f) = 1;\n    }\n    return 0;\n}\n",
        "token_count": 379
    },
    "00425c6f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00425c6f(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t var_4h;\n    \n    iVar1 = arg_8h[1];\n    var_4h = 0;\n    if (*(arg_8h + 2) != '\\x02') {\n        if ((*(arg_8h + 2) == '\\x01') && (arg_ch == 0)) {\n            return 0;\n        }\n        if ((*(iVar1 + 0x10) != '\\0') && (arg_ch != 0)) {\n            return 8;\n        }\n        var_4h = 0;\n        *(iVar1 + 0x13) = *(iVar1 + 0x2c) == 0;\ncode_r0x00425cbb:\n        do {\n            if (*(iVar1 + 0xc) == 0) {\n                var_4h = fcn.004259e2();\n                if (var_4h == 0) goto code_r0x00425cbb;\n            }\n            if (var_4h == 0) {\n                if (arg_ch != 0) {\n                    if (*(iVar1 + 0x10) == '\\0') {\n                        var_4h = fcn.004228ab(1 < arg_ch, *(*arg_8h + 0x1d) == '\\x02');\n                        if ((var_4h == 0) && (var_4h = fcn.00425bee(),  var_4h == 0)) goto code_r0x00425d2d;\n                    }\n                    else {\n                        var_4h = 8;\n                    }\n                    goto code_r0x00425d23;\n                }\n            }\n            else {\ncode_r0x00425d23:\n                fcn.00425bd5();\n            }\ncode_r0x00425d2d:\n            if (((var_4h != '\\x05') || (*(iVar1 + 0x15) != '\\0')) || (iVar3 = fcn.004256d7(iVar1),  iVar3 == 0))\n            goto code_r0x00425d48;\n        } while( true );\n    }\ncode_r0x00425d9f:\n    if (arg_ch != 0) {\n        var_4h = fcn.00422e71(*(*arg_8h + 0x1cc));\n    }\n    return var_4h;\ncode_r0x00425d48:\n    if (var_4h != 0) {\n        return var_4h;\n    }\n    if (*(arg_8h + 2) == '\\0') {\n        *(iVar1 + 0x28) = *(iVar1 + 0x28) + 1;\n    }\n    uVar2 = (arg_ch != 0) + 1;\n    *(arg_8h + 2) = uVar2;\n    if (*(iVar1 + 0x15) <= uVar2 && uVar2 != *(iVar1 + 0x15)) {\n        *(iVar1 + 0x15) = uVar2;\n    }\n    if (arg_ch == 0) {\n        return 0;\n    }\n    iVar3 = fcn.0041d7cc();\n    if (*(iVar1 + 0x2c) != iVar3) {\n        var_4h = fcn.00422ad1();\n        if (var_4h != 0) {\n            return var_4h;\n        }\n        fcn.0041d7e6();\n    }\n    goto code_r0x00425d9f;\n}\n",
        "token_count": 835
    },
    "00425fd6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00425fd6(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_EDI;\n    uint var_4h;\n    \n    if (*unaff_EDI != 0) {\n        iVar1 = unaff_EDI[1];\n        fcn.00424c2b();\n        if (unaff_EDI[3] == 0) {\n            *(iVar1 + 8) = unaff_EDI[2];\n        }\n        else {\n            *(unaff_EDI[3] + 8) = unaff_EDI[2];\n        }\n        if (unaff_EDI[2] != 0) {\n            *(unaff_EDI[2] + 0xc) = unaff_EDI[3];\n        }\n        iVar1 = 0;\n        if (-1 < *(unaff_EDI + 0x5a)) {\n            do {\n                fcn.004256a8();\n                iVar1 = iVar1 + 1;\n            } while (iVar1 <= *(unaff_EDI + 0x5a));\n        }\n        fcn.00425bd5();\n        fcn.0041c110(unaff_EDI[0x15]);\n        unaff_EDI[0x15] = 0;\n    }\n    return 0;\n}\n",
        "token_count": 284
    },
    "0042604d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042604d(void)\n\n{\n    int32_t unaff_ESI;\n    \n    if (*(unaff_ESI + 0x3a) == 0) {\n        fcn.00424e0d(unaff_ESI + 0x20);\n        *(unaff_ESI + 0x52) = 1;\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "004260ef": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004260ef(uint32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint uVar9;\n    uint var_18h;\n    int32_t *var_14h;\n    int32_t var_10h;\n    uint *var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_14h = NULL;\n    iVar8 = *(in_EAX + 0x84 + *(in_EAX + 0x5a) * 4);\n    var_ch = *(in_EAX + 4);\n    fcn.0042604d();\n    iVar7 = *(in_EAX + 0x34) + *(in_EAX + 0x28);\n    if (*(iVar8 + 2) == '\\0') {\n        iVar6 = *(in_EAX + 0x20);\n    }\n    else {\n        iVar6 = 0;\n    }\n    if ((*(in_EAX + 0x2c) + iVar6 < arg_ch + arg_8h) ||\n       (uVar1 = *(in_EAX + 0x36),  *(iVar8 + 0x40) + var_ch[9] < uVar1 + iVar7)) {\n        uVar9 = 0xc0d4;\n    }\n    else {\n        if (arg_8h < uVar1) {\n            var_8h = arg_ch;\n            if (uVar1 < arg_ch + arg_8h) {\n                var_8h = *(in_EAX + 0x36) - arg_8h;\n            }\n            iVar7 = iVar7 + arg_8h;\n            iVar8 = arg_10h;\n            if ((arg_14h == 0) || (iVar6 = fcn.00422ad1(),  iVar8 = iVar7,  iVar7 = arg_10h,  iVar6 == 0)) {\n                fcn.0044b575(iVar8, iVar7, var_8h);\n                var_4h = 0;\n                iVar6 = var_4h;\n            }\n            var_4h = iVar6;\n            arg_8h = 0;\n            arg_10h = arg_10h + var_8h;\n            arg_ch = arg_ch - var_8h;\n        }\n        else {\n            arg_8h = arg_8h - uVar1;\n        }\n        if (var_4h != 0) {\n            return var_4h;\n        }\n        if (arg_ch == 0) {\n            return 0;\n        }\n        uVar1 = var_ch[9] - 4;\n        var_8h = fcn.0041d7cc();\n        if ((*(in_EAX + 0x58) != '\\0') && (*(in_EAX + 0x54) == 0)) {\n            uVar2 = ((*(in_EAX + 0x30) - *(in_EAX + 0x36)) + -1 + uVar1) / uVar1;\n            iVar7 = fcn.0041c2d3(uVar2 << 2);\n            *(in_EAX + 0x54) = iVar7;\n            if ((uVar2 != 0) && (iVar7 == 0)) {\n                var_4h = 7;\n            }\n        }\n        iVar7 = *(in_EAX + 0x54);\n        piVar4 = var_14h;\n        if (iVar7 != 0) {\n            piVar3 = arg_8h / uVar1;\n            if (*(iVar7 + piVar3 * 4) != 0) {\n                var_8h = *(iVar7 + piVar3 * 4);\n                piVar4 = piVar3;\n                arg_8h = arg_8h % uVar1;\n            }\n        }\n        if (var_4h != 0) {\n            return var_4h;\n        }\n        iVar7 = piVar4 << 2;\n        do {\n            if ((arg_ch == 0) || (var_8h == 0)) break;\n            if (*(in_EAX + 0x54) != 0) {\n                *(iVar7 + *(in_EAX + 0x54)) = var_8h;\n            }\n            if (arg_8h < uVar1) {\n                var_10h = arg_ch;\n                var_4h = fcn.0042268e(*var_ch, var_8h, &var_14h, 0);\n                if (var_4h == 0) {\n                    iVar8 = *var_14h;\n                    var_8h = fcn.0041d7cc();\n                    if (uVar1 < arg_ch + arg_8h) {\n                        var_10h = uVar1 - arg_8h;\n                    }\n                    iVar8 = iVar8 + 4 + arg_8h;\n                    iVar6 = arg_10h;\n                    if ((arg_14h == 0) || (iVar5 = fcn.00422ad1(),  iVar6 = iVar8,  iVar8 = arg_10h,  iVar5 == 0)) {\n                        fcn.0044b575(iVar6, iVar8, var_10h);\n                        var_4h = 0;\n                        iVar5 = var_4h;\n                    }\n                    var_4h = iVar5;\n                    fcn.004227d5();\n                    arg_8h = 0;\n                    arg_ch = arg_ch - var_10h;\n                    arg_10h = arg_10h + var_10h;\n                }\n            }\n            else {\n                if ((*(in_EAX + 0x54) == 0) || (iVar8 = *(iVar7 + 4 + *(in_EAX + 0x54)),  iVar8 == 0)) {\n                    var_4h = fcn.00426099(0, &var_8h);\n                    iVar8 = var_8h;\n                }\n                var_8h = iVar8;\n                arg_8h = arg_8h - uVar1;\n            }\n            iVar7 = iVar7 + 4;\n        } while (var_4h == 0);\n        if (var_4h != 0) {\n            return var_4h;\n        }\n        if (arg_ch == 0) {\n            return 0;\n        }\n        uVar9 = 0xc138;\n    }\n    iVar7 = fcn.0044a92e(uVar9);\n    return iVar7;\n}\n",
        "token_count": 1538
    },
    "004263c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.004263c0(uint32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t unaff_ESI;\n    \n    iVar3 = *(unaff_ESI + 0x84 + *(unaff_ESI + 0x5a) * 4);\n    if (*(unaff_ESI + 0x3a) == 0) {\n        fcn.00424e0d(unaff_ESI + 0x20);\n    }\n    iVar1 = *(unaff_ESI + 0x34) + *(unaff_ESI + 0x28);\n    if (*(iVar3 + 2) == '\\0') {\n        iVar3 = *(unaff_ESI + 0x20);\n    }\n    else {\n        iVar3 = 0;\n    }\n    uVar2 = *(unaff_ESI + 0x36);\n    if (param_2 != 0) {\n        iVar1 = iVar1 + iVar3;\n        uVar2 = uVar2 - iVar3;\n    }\n    *param_1 = uVar2;\n    return iVar1;\n}\n",
        "token_count": 267
    },
    "0042659b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0042659b(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint arg_8h;\n    \n    iVar1 = 0;\n    do {\n        if (*(*(in_EAX + 0x84 + *(in_EAX + 0x5a) * 4) + 3) != '\\0') {\n            return iVar1;\n        }\n        arg_8h = fcn.0041d7cc();\n        iVar1 = fcn.00426418(arg_8h);\n    } while (iVar1 == 0);\n    return iVar1;\n}\n",
        "token_count": 137
    },
    "004265ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004265ec(void)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint arg_8h;\n    \n    iVar3 = 0;\n    do {\n        iVar1 = *(in_EAX + 0x5a);\n        iVar2 = *(in_EAX + 0x84 + iVar1 * 4);\n        if (*(iVar2 + 3) != '\\0') break;\n        arg_8h = fcn.0041d7cc();\n        *(in_EAX + 0x5c + iVar1 * 2) = *(iVar2 + 0x10);\n        iVar3 = fcn.00426418(arg_8h);\n    } while (iVar3 == 0);\n    if (iVar3 == 0) {\n        *(in_EAX + 0x5c + *(in_EAX + 0x5a) * 2) = *(iVar2 + 0x10) + -1;\n        *(in_EAX + 0x3a) = 0;\n        *(in_EAX + 0x52) = 0;\n    }\n    return;\n}\n",
        "token_count": 264
    },
    "004266a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.004266a8(uint arg_8h, uint32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t *arg_18h)\n\n{\n    uchar *puVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t arg_8h_01;\n    uint8_t *puVar6;\n    int32_t unaff_EBX;\n    int32_t iVar7;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    if (((*(unaff_EBX + 0x53) == '\\x01') && (*(unaff_EBX + 0x52) != '\\0')) && (*(*(unaff_EBX + 0x84) + 2) != '\\0')) {\n        iVar2 = *(unaff_EBX + 0x24);\n        if ((*(unaff_EBX + 0x20) == arg_ch) && (iVar2 == arg_10h)) {\n            *arg_18h = 0;\n            return 0;\n        }\n        if (((*(unaff_EBX + 0x51) != '\\0') && (iVar2 <= arg_10h)) &&\n           ((iVar2 < arg_10h || (*(unaff_EBX + 0x20) < arg_ch)))) goto code_r0x004266f7;\n    }\n    iVar2 = fcn.004264a9();\n    if (iVar2 != 0) {\n        return iVar2;\n    }\n    if (*(unaff_EBX + 0x53) != '\\0') {\n        do {\n            iVar5 = *(unaff_EBX + 0x5a);\n            iVar2 = *(unaff_EBX + 0x84 + iVar5 * 4);\n            var_8h = 0;\n            iVar7 = *(iVar2 + 0x10) - 1;\n            iVar4 = iVar7;\n            var_ch = iVar7;\n            if (arg_14h == 0) goto code_r0x0042673c;\n            *(unaff_EBX + 0x5c + iVar5 * 2) = iVar7;\ncode_r0x00426746:\n            uVar3 = *(unaff_EBX + 0x5c + *(unaff_EBX + 0x5a) * 2);\n            *(unaff_EBX + 0x3a) = 0;\n            puVar1 = *(iVar2 + 0xc) + *(iVar2 + 0x40) + uVar3 * 2;\n            puVar6 = (CONCAT11(*puVar1, puVar1[1]) & *(iVar2 + 0x12)) + *(iVar2 + 6) + *(iVar2 + 0x40);\n            if (*(iVar2 + 2) == '\\0') {\n                arg_8h_01 = *puVar6;\n                if ((*puVar6 < '\\0') || (*(iVar2 + 8) < arg_8h_01)) {\n                    if ((puVar6[1] < '\\0') ||\n                       (arg_8h_01 = (arg_8h_01 & 0x7f) * 0x80 + puVar6[1],  *(iVar2 + 8) < arg_8h_01)) {\n                        fcn.00424cec(puVar6 - *(iVar2 + 6));\n                        arg_8h_00 = *(unaff_EBX + 0x20);\n                        iVar4 = fcn.0041bf1f(arg_8h_00);\n                        if (iVar4 == 0) {\n                            return 7;\n                        }\n                        iVar7 = fcn.004260ef(0, arg_8h_00, iVar4, 0);\n                        if (iVar7 != 0) {\n                            fcn.0041c110(iVar4);\n                            return iVar7;\n                        }\n                        var_4h = fcn.0042b3c3(arg_8h_00, iVar4, arg_8h);\n                        fcn.0041c110(iVar4);\n                        iVar4 = var_ch;\n                        goto code_r0x00426893;\n                    }\n                    puVar6 = puVar6 + 2;\n                }\n                else {\n                    puVar6 = puVar6 + 1;\n                }\n                var_4h = fcn.0042b3c3(arg_8h_01, puVar6, arg_8h);\n            }\n            else {\n                if ((*(iVar2 + 4) != '\\0') && (0x7f < *puVar6)) {\n                    fcn.0041d746();\n                }\n                fcn.0041d5ae();\n                if ((var_20h == arg_ch) && (var_1ch == arg_10h)) {\n                    var_4h = 0;\n                }\n                else if ((arg_10h < var_1ch) || ((arg_10h <= var_1ch && (arg_ch <= var_20h)))) {\n                    var_4h = 1;\n                }\n                else {\n                    var_4h = -1;\n                }\n                *(unaff_EBX + 0x52) = 1;\n                *(unaff_EBX + 0x20) = var_20h;\n                *(unaff_EBX + 0x24) = var_1ch;\n                iVar4 = var_ch;\n            }\ncode_r0x00426893:\n            if (var_4h != 0) {\n                if (var_4h < 0) {\n                    var_8h = uVar3 + 1;\n                }\n                else {\n                    iVar4 = uVar3 - 1;\n                    var_ch = iVar4;\n                }\n                if (iVar4 < var_8h) goto code_r0x004268d7;\n                iVar5 = *(unaff_EBX + 0x5a);\n                iVar7 = var_8h + iVar4;\ncode_r0x0042673c:\n                *(unaff_EBX + 0x5c + iVar5 * 2) = iVar7 / 2;\n                goto code_r0x00426746;\n            }\n            if ((*(iVar2 + 2) == '\\0') || (var_8h = uVar3,  *(iVar2 + 3) != '\\0')) {\n                *arg_18h = 0;\n                return 0;\n            }\ncode_r0x004268d7:\n            if ((*(iVar2 + 3) != '\\0') || (iVar2 = fcn.0041d7cc(),  iVar2 == 0)) {\n                *arg_18h = var_4h;\n                return 0;\n            }\n            *(unaff_EBX + 0x5c + *(unaff_EBX + 0x5a) * 2) = var_8h;\n            *(unaff_EBX + 0x3a) = 0;\n            *(unaff_EBX + 0x52) = 0;\n            iVar2 = fcn.00426418(iVar2);\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        } while( true );\n    }\ncode_r0x004266f7:\n    *arg_18h = -1;\n    return 0;\n}\n",
        "token_count": 1698
    },
    "00426b7b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00426b7b(int32_t *arg_8h, uint32_t *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t *puVar1;\n    bool bVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint uVar9;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_8h = 0;\n    uVar4 = *(in_EAX + 0x2c);\n    iVar6 = *(in_EAX + 0xc);\n    uVar3 = fcn.0041d7cc();\n    if (uVar4 <= uVar3) {\n        uVar9 = 0xc46c;\n        goto code_r0x00426bae;\n    }\n    uVar5 = fcn.00422ad1();\n    if (uVar3 == 0) {\n        if (uVar5 != 0) {\n            return uVar5;\n        }\n        *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 1;\n        if (*(in_EAX + 0x2c) == 0x40000000 / *(in_EAX + 0x20) + 1) {\n            *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 1;\n        }\n        fcn.0041d7e6();\n        *arg_ch = *(in_EAX + 0x2c);\n        uVar4 = fcn.004255ea(arg_8h, 1);\n        if (uVar4 != 0) {\n            return uVar4;\n        }\n        var_4h = fcn.00422ad1();\n        if (var_4h != 0) {\n            fcn.004256a8();\n        }\n    }\n    else {\n        if (uVar5 != 0) {\n            return uVar5;\n        }\n        fcn.0041d7e6();\n        iVar8 = var_8h;\n        uVar3 = fcn.0041d7cc();\n        if (uVar4 < uVar3) {\n            var_4h = fcn.0044a92e(0xc499);\n        }\n        else {\n            var_4h = fcn.004255ea(&var_8h, 0);\n            iVar8 = var_8h;\n        }\n        if (var_4h == 0) {\n            iVar8 = *(iVar8 + 0x40);\n            uVar5 = fcn.0041d7cc();\n            iVar7 = var_8h;\n            if (uVar5 == 0) {\n                var_4h = fcn.00422ad1();\n                if (var_4h == 0) {\n                    *arg_ch = uVar3;\n                    fcn.0044b575(*(iVar6 + 0x40) + 0x20, *(iVar7 + 0x40), 4);\n                    var_8h = 0;\n                    *arg_8h = iVar7;\ncode_r0x00426d9e:\n                    fcn.004256a8();\n                }\n            }\n            else {\n                if (uVar5 <= (*(in_EAX + 0x24) >> 2) - 2) {\n                    if (uVar5 != 0) {\n                        var_ch = fcn.00422ad1();\n                        var_4h = var_ch;\n                        if (var_ch != 0) goto code_r0x00426e31;\n                        if (arg_10h != 0) {\n                            iVar6 = fcn.0041d7cc();\n                            iVar6 = iVar6 - arg_10h;\n                            if (iVar6 < 0) {\n                                iVar6 = -iVar6;\n                            }\n                            var_4h = 1;\n                            if (1 < uVar5) {\n                                do {\n                                    iVar7 = fcn.0041d7cc();\n                                    iVar7 = iVar7 - arg_10h;\n                                    if (iVar7 < 0) {\n                                        iVar7 = -iVar7;\n                                    }\n                                    if (iVar7 < iVar6) {\n                                        var_ch = var_4h;\n                                        iVar6 = iVar7;\n                                    }\n                                    var_4h = var_4h + 1;\n                                } while (var_4h < uVar5);\n                            }\n                        }\n                        uVar3 = fcn.0041d7cc();\n                        if (uVar4 < uVar3) {\n                            uVar9 = 0xc510;\n                            goto code_r0x00426dba;\n                        }\n                        *arg_ch = uVar3;\n                        if (var_ch < uVar5 - 1) {\n                            fcn.0044b575(iVar8 + 8 + var_ch * 4, iVar8 + 4 + uVar5 * 4, 4);\n                        }\n                        fcn.0041d7e6();\n                        puVar1 = *(in_EAX + 0x3c);\n                        if ((puVar1 == NULL) ||\n                           ((*arg_ch < *puVar1 || *arg_ch == *puVar1 && (iVar6 = fcn.0041f22c(),  iVar6 == 0)))) {\n                            bVar2 = false;\n                        }\n                        else {\n                            bVar2 = true;\n                        }\n                        var_4h = fcn.004255ea(arg_8h, !bVar2);\n                        if ((var_4h == 0) && (var_4h = fcn.00422ad1(),  var_4h != 0)) {\n                            fcn.004256a8();\n                        }\n                    }\n                    goto code_r0x00426d9e;\n                }\n                uVar9 = 0xc4b3;\ncode_r0x00426dba:\n                var_4h = fcn.0044a92e(uVar9);\n            }\n        }\n        else {\n            var_8h = 0;\n        }\n    }\ncode_r0x00426e31:\n    fcn.004256a8();\n    fcn.004256a8();\n    if (var_4h != 0) {\n        *arg_8h = 0;\n        return var_4h;\n    }\n    if (*(*(*arg_8h + 0x44) + 0x16) < 2) {\n        **arg_8h = 0;\n        return 0;\n    }\n    fcn.004256a8();\n    uVar9 = 0xc55d;\ncode_r0x00426bae:\n    uVar4 = fcn.0044a92e(uVar9);\n    return uVar4;\n}\n",
        "token_count": 1559
    },
    "00426e75": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00426e75(uint32_t arg_8h)\n\n{\n    uint32_t *arg_8h_00;\n    uchar *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uchar *var_4h;\n    \n    var_8h = 0;\n    if (in_EAX == NULL) {\n        in_EAX = fcn.00425630();\n    }\n    else {\n        *(*(in_EAX + 0x44) + 0x16) = *(*(in_EAX + 0x44) + 0x16) + 1;\n    }\n    var_4h = in_EAX;\n    var_10h = fcn.00422ad1();\n    if (var_10h != 0) goto code_r0x0042708a;\n    iVar1 = fcn.0041d7cc();\n    fcn.0041d7e6();\n    if (*(in_ECX + 0x12) != '\\0') {\n        if (((in_EAX == NULL) && (var_10h = fcn.004255ea(&var_4h, 0),  in_EAX = var_4h,  var_10h != 0)) ||\n           (var_10h = fcn.00422ad1(),  var_10h != 0)) goto code_r0x0042708a;\n        fcn.0044b531(*(in_EAX + 0x40), 0, *(*(in_EAX + 0x3c) + 0x20));\n    }\n    if (iVar1 != 0) {\n        fcn.0041d7cc();\n        var_10h = fcn.004255ea(&var_8h, 0);\n        if (var_10h != 0) goto code_r0x0042708a;\n        uVar2 = fcn.0041d7cc();\n        uVar3 = *(in_ECX + 0x24) >> 2;\n        if (uVar3 - 2 < uVar2) {\n            var_10h = fcn.0044a92e(0xc5b2);\n            goto code_r0x0042708a;\n        }\n        if (uVar2 < uVar3 - 8) {\n            var_10h = fcn.00422ad1();\n            if (var_10h == 0) {\n                fcn.0041d7e6();\n                fcn.0041d7e6();\n                if ((in_EAX != NULL) && (*(in_ECX + 0x12) == '\\0')) {\n                    iVar1 = *(in_EAX + 0x44);\n                    if (((*(iVar1 + 0x14) & 2) != 0) && (*(*(iVar1 + 0x10) + 0x60) == 0)) {\n                        *(iVar1 + 0x14) = *(iVar1 + 0x14) | 0x20;\n                    }\n                }\n                var_10h = 0;\n                if (*(in_ECX + 0x3c) == 0) {\n                    iVar1 = fcn.0041f216(*(in_ECX + 0x2c));\n                    *(in_ECX + 0x3c) = iVar1;\n                    if (iVar1 == 0) {\n                        var_10h = 7;\n                        goto code_r0x0042708a;\n                    }\n                }\n                arg_8h_00 = *(in_ECX + 0x3c);\n                if (arg_8h < *arg_8h_00 || arg_8h == *arg_8h_00) {\n                    var_10h = fcn.0041f2a9(arg_8h_00, arg_8h);\n                }\n            }\n            goto code_r0x0042708a;\n        }\n    }\n    if (((in_EAX != NULL) || (var_10h = fcn.004255ea(&var_4h, 0),  in_EAX = var_4h,  var_10h == 0)) &&\n       (var_10h = fcn.00422ad1(),  var_10h == 0)) {\n        fcn.0041d7e6();\n        fcn.0041d7e6();\n        fcn.0041d7e6();\n    }\ncode_r0x0042708a:\n    if (in_EAX != NULL) {\n        *in_EAX = 0;\n    }\n    fcn.004256a8();\n    fcn.004256a8();\n    return var_10h;\n}\n",
        "token_count": 1078
    },
    "004270a7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004270a7(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    if (*unaff_ESI == 0) {\n        iVar1 = fcn.00426e75(*(in_EAX + 0x48));\n        *unaff_ESI = iVar1;\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "004270bd": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.004270bd(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint32_t arg_8h_00;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint var_34h;\n    int32_t var_24h;\n    uint16_t var_1eh;\n    uint var_1ch;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    \n    iVar4 = *(in_ECX + 0x3c);\n    fcn.00424cec(arg_8h);\n    if (var_1ch == 0) {\ncode_r0x0042718b:\n        iVar3 = 0;\n    }\n    else {\n        arg_8h_00 = fcn.0041d7cc();\n        var_8h = *(iVar4 + 0x24) - 4;\n        var_8h = ((var_24h - var_1eh) + -1 + var_8h) / var_8h;\n        do {\n            if (var_8h == 0) goto code_r0x0042718b;\n            var_8h = var_8h - 1;\n            var_10h = 0;\n            var_ch = 0;\n            if ((arg_8h_00 < 2) || (puVar1 = iVar4 + 0x2c,  *puVar1 <= arg_8h_00 && arg_8h_00 != *puVar1)) {\n                iVar4 = fcn.0044a92e(0xc60e);\n                return iVar4;\n            }\n            if (var_8h == 0) {\ncode_r0x00427144:\n                iVar2 = fcn.00425630();\n                if (iVar2 != 0) goto code_r0x0042714f;\ncode_r0x00427165:\n                iVar3 = fcn.00426e75(arg_8h_00);\n            }\n            else {\n                iVar2 = fcn.00426099(&var_ch, &var_10h);\n                if (iVar2 != 0) {\n                    return iVar2;\n                }\n                iVar2 = var_ch;\n                if (var_ch == 0) goto code_r0x00427144;\ncode_r0x0042714f:\n                if (*(*(iVar2 + 0x44) + 0x16) == 1) goto code_r0x00427165;\n                iVar3 = fcn.0044a92e(0xc622);\n            }\n            if (iVar2 != 0) {\n                fcn.004227d5();\n            }\n            arg_8h_00 = var_10h;\n        } while (iVar3 == 0);\n    }\n    return iVar3;\n}\n",
        "token_count": 651
    },
    "004271a3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.004271a3(uint32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t arg_1ch, \n            uint32_t arg_20h, uint32_t *arg_24h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint var_38h;\n    uint var_22h;\n    uint var_1eh;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar2 = *(in_EAX + 0x3c);\n    iVar4 = 0;\n    var_14h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    if (*(in_EAX + 3) == '\\0') {\n        iVar4 = 4;\n    }\n    if (*(in_EAX + 4) == '\\0') {\n        arg_20h = 0;\n        arg_1ch = 0;\n    }\n    else {\n        iVar1 = fcn.0041d50c(arg_1ch + arg_20h, arg_1ch + arg_20h >> 0x1f);\n        iVar4 = iVar4 + iVar1;\n    }\n    var_4h = arg_1ch;\n    iVar1 = fcn.0041d50c(arg_10h, arg_14h);\n    fcn.00424cec(arg_8h);\n    arg_20h = arg_20h + arg_1ch;\n    if (*(in_EAX + 2) == '\\0') {\n        if ((0 < arg_14h) || (((-1 < arg_14h && (0x7fffffff < arg_10h)) || (arg_ch == 0)))) {\n            iVar2 = fcn.0044a92e(0xc670);\n            return iVar2;\n        }\n        arg_20h = arg_20h + arg_10h;\n        var_8h = arg_ch;\n        var_4h = arg_10h;\n    }\n    else {\n        arg_1ch = 0;\n        var_8h = arg_18h;\n    }\n    uVar3 = var_22h;\n    iVar4 = iVar4 + iVar1 + arg_8h;\n    *arg_24h = var_1eh;\n    do {\n        if (arg_20h < 1) {\n            fcn.004256a8();\n            return 0;\n        }\n        if (uVar3 == 0) {\n            iVar4 = fcn.00426b7b(&var_14h, &var_10h, var_10h);\n            if (iVar4 != 0) {\n                fcn.004256a8();\n                return iVar4;\n            }\n            fcn.0041d7e6();\n            fcn.004256a8();\n            iVar4 = var_14h;\n            var_ch = var_14h;\n            fcn.0041d7e6();\n            iVar4 = *(iVar4 + 0x40) + 4;\n            uVar3 = *(iVar2 + 0x24) - 4;\n        }\n        arg_8h = arg_20h;\n        if (uVar3 < arg_20h) {\n            arg_8h = uVar3;\n        }\n        if (var_4h < 1) {\n            fcn.0044b531(iVar4, 0, arg_8h);\n        }\n        else {\n            if (var_4h < arg_8h) {\n                arg_8h = var_4h;\n            }\n            fcn.0044b575(iVar4, var_8h, arg_8h);\n        }\n        var_4h = var_4h - arg_8h;\n        arg_20h = arg_20h - arg_8h;\n        var_8h = var_8h + arg_8h;\n        iVar4 = iVar4 + arg_8h;\n        uVar3 = uVar3 - arg_8h;\n        if (var_4h == 0) {\n            var_4h = arg_1ch;\n            var_8h = arg_18h;\n        }\n    } while( true );\n}\n",
        "token_count": 1019
    },
    "0042735b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042735b(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t unaff_ESI;\n    uchar *puVar5;\n    \n    if (*arg_10h == 0) {\n        iVar4 = *(unaff_ESI + 5) + *(unaff_ESI + 0x40);\n        puVar5 = *(unaff_ESI + 0xc) + *(unaff_ESI + 0x40) + arg_8h * 2;\n        if ((CONCAT11(*puVar5, puVar5[1]) < CONCAT11(*(iVar4 + 5), *(iVar4 + 6))) ||\n           (uVar3 = arg_ch + CONCAT11(*puVar5, puVar5[1]),  puVar1 = *(unaff_ESI + 0x3c) + 0x24, \n           *puVar1 <= uVar3 && uVar3 != *puVar1)) {\n            iVar2 = fcn.0044a92e(0xc6ef);\n        }\n        else {\n            iVar2 = fcn.004251a4(arg_ch);\n            if (iVar2 == 0) {\n                while (arg_8h = arg_8h + 1,  arg_8h < *(unaff_ESI + 0x10)) {\n                    *puVar5 = puVar5[2];\n                    puVar5[1] = puVar5[3];\n                    puVar5 = puVar5 + 2;\n                }\n                *(unaff_ESI + 0x10) = *(unaff_ESI + 0x10) + -1;\n                *(iVar4 + 3) = *(unaff_ESI + 0x10) >> 8;\n                *(iVar4 + 4) = *(unaff_ESI + 0x10);\n                *(unaff_ESI + 0xe) = *(unaff_ESI + 0xe) + 2;\n                return;\n            }\n        }\n        *arg_10h = iVar2;\n    }\n    return;\n}\n",
        "token_count": 499
    },
    "004273fb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004273fb(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t *arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int32_t in_EAX;\n    int32_t iVar5;\n    uchar *puVar6;\n    int32_t unaff_ESI;\n    uint32_t uVar7;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    uVar7 = -(arg_14h != 0) & 4;\n    if ((*(unaff_ESI + 1) == '\\0') && (arg_10h + 2 <= *(unaff_ESI + 0xe))) {\n        iVar5 = fcn.00422ad1();\n        if (iVar5 == 0) {\n            iVar4 = *(unaff_ESI + 0x40);\n            iVar1 = *(unaff_ESI + 0xc) + *(unaff_ESI + 0x10) * 2;\n            iVar2 = *(unaff_ESI + 0xc) + arg_8h * 2;\n            iVar5 = fcn.00425030(arg_10h, &var_4h);\n            if (iVar5 == 0) {\n                *(unaff_ESI + 0x10) = *(unaff_ESI + 0x10) + 1;\n                *(unaff_ESI + 0xe) = *(unaff_ESI + 0xe) + (-2 - arg_10h);\n                fcn.0044b575(iVar4 + uVar7 + var_4h, arg_ch + uVar7, arg_10h - uVar7);\n                if (arg_14h != 0) {\n                    fcn.0041d7e6();\n                }\n                if (iVar2 < iVar1) {\n                    arg_14h = ((iVar1 - iVar2) - 1U >> 1) + 1;\n                    puVar6 = iVar1 + iVar4;\n                    do {\n                        arg_14h = arg_14h + -1;\n                        *puVar6 = puVar6[-2];\n                        puVar6[1] = puVar6[-1];\n                        puVar6 = puVar6 + -2;\n                    } while (arg_14h != 0);\n                }\n                (iVar2 + iVar4)[1] = var_4h;\n                *(iVar2 + iVar4) = var_4h >> 8;\n                *(*(unaff_ESI + 5) + 3 + iVar4) = *(unaff_ESI + 0x11);\n                *(*(unaff_ESI + 5) + 4 + iVar4) = *(unaff_ESI + 0x10);\n                return;\n            }\n        }\n        *arg_18h = iVar5;\n    }\n    else {\n        if (in_EAX != 0) {\n            fcn.0044b575(uVar7 + in_EAX, arg_ch + uVar7, arg_10h - uVar7);\n            arg_ch = in_EAX;\n        }\n        if (arg_14h != 0) {\n            arg_ch = fcn.0041d7e6();\n        }\n        uVar3 = *(unaff_ESI + 1);\n        *(unaff_ESI + 1) = uVar3 + 1;\n        *(unaff_ESI + 0x14 + uVar3 * 8) = arg_ch;\n        *(unaff_ESI + 0x18 + uVar3 * 8) = arg_8h;\n    }\n    return;\n}\n",
        "token_count": 843
    },
    "004275ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004275ec(uchar *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*arg_ch == 0) {\n        iVar2 = *(arg_8h + 0x48);\n        iVar1 = *(arg_8h + 0x40);\n        iVar4 = *(in_EAX + 5) + *(in_EAX + 0x40);\n        uVar3 = CONCAT11(*(iVar4 + 5), *(iVar4 + 6));\n        fcn.0044b575(uVar3 + iVar1, *(in_EAX + 0x40) + uVar3, *(*(in_EAX + 0x3c) + 0x24) - uVar3);\n        fcn.0044b575((-(iVar2 != 1) & 0xffffff9c) + 100 + iVar1, iVar4, *(in_EAX + 0xc) + *(in_EAX + 0x10) * 2);\n        *arg_8h = 0;\n        iVar2 = fcn.004253c2();\n        if (iVar2 != 0) {\n            *arg_ch = iVar2;\n        }\n    }\n    return;\n}\n",
        "token_count": 320
    },
    "00427679": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00427679(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t **ppiVar1;\n    uchar *puVar2;\n    uint16_t *puVar3;\n    int32_t *piVar4;\n    char cVar5;\n    uint16_t uVar6;\n    ushort uVar7;\n    uint32_t in_EAX;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t **ppiVar11;\n    int32_t *piVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    uint32_t uVar16;\n    bool bVar17;\n    uint uVar18;\n    uint var_bch;\n    uint var_b8h;\n    uint var_a0h;\n    int32_t aiStack160 [2];\n    uint var_94h;\n    uint var_90h;\n    uint var_7ch;\n    int32_t var_74h;\n    int32_t var_70h;\n    int32_t var_5ch;\n    int32_t var_58h;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    int32_t var_40h;\n    int32_t **var_3ch;\n    int32_t var_38h;\n    uint32_t var_34h;\n    int32_t var_30h;\n    int32_t **var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t *var_20h;\n    int32_t var_1ch;\n    int32_t *var_18h;\n    int32_t *var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t var_8h;\n    \n    var_14h = *(arg_8h + 0x3c);\n    var_24h = 0;\n    var_1ch = 0;\n    var_38h = 0;\n    var_48h = 0;\n    var_5ch = 0;\n    var_40h = 0;\n    if (arg_ch == 0) {\n        return 7;\n    }\n    uVar16 = *(arg_8h + 1) + *(arg_8h + 0x10);\n    if (uVar16 < 2) {\n        var_28h = uVar16 + 1;\n        var_30h = 0;\n    }\n    else {\n        var_28h = 3;\n        if (in_EAX == 0) {\n            var_30h = 0;\n        }\n        else if (in_EAX == uVar16) {\n            var_30h = uVar16 - 2;\n        }\n        else {\n            var_30h = in_EAX - 1;\n        }\n        uVar16 = 2;\n    }\n    uVar8 = (var_30h - *(arg_8h + 1)) + uVar16;\n    if (uVar8 == *(arg_8h + 0x10)) {\n        var_74h = *(arg_8h + 5) + 8 + *(arg_8h + 0x40);\n    }\n    else {\n        puVar2 = *(arg_8h + 0xc) + *(arg_8h + 0x40) + uVar8 * 2;\n        var_74h = (CONCAT11(*puVar2, puVar2[1]) & *(arg_8h + 0x12)) + *(arg_8h + 0x40);\n    }\n    var_4ch = fcn.0041d7cc();\n    piVar12 = &var_58h + uVar16;\n    var_10h = fcn.00425663();\n    if (var_10h == 0) {\n        var_ch = var_30h + uVar16;\n        uVar8 = uVar16;\n        while( true ) {\n            var_1ch = *(*piVar12 + 1) + var_1ch + 1 + *(*piVar12 + 0x10);\n            uVar16 = uVar8 - 1;\n            var_ch = var_ch + -1;\n            if (uVar8 == 0) break;\n            if ((var_ch == *(arg_8h + 0x18)) && (*(arg_8h + 1) != '\\0')) {\n                uVar18 = *(arg_8h + 0x14);\n                (&var_7ch)[uVar16] = uVar18;\n                var_4ch = fcn.0041d7cc();\n                uVar8 = fcn.00424e36(uVar18);\n                (&var_70h)[uVar16] = uVar8 & 0xffff;\n                *(arg_8h + 1) = 0;\n            }\n            else {\n                puVar2 = *(arg_8h + 0xc) + *(arg_8h + 0x40) + ((var_30h - *(arg_8h + 1)) + uVar16) * 2;\n                ppiVar11 = &var_7ch + uVar16;\n                var_18h = (CONCAT11(*puVar2, puVar2[1]) & *(arg_8h + 0x12)) + *(arg_8h + 0x40);\n                *ppiVar11 = var_18h;\n                var_4ch = fcn.0041d7cc();\n                var_34h = fcn.00424e36(var_18h);\n                var_34h = var_34h & 0xffff;\n                cVar5 = *(var_14h + 0x12);\n                (&var_70h)[uVar16] = var_34h;\n                if (cVar5 != '\\0') {\n                    var_20h = *ppiVar11;\n                    if (var_14h[9] < var_20h + (var_34h - *(arg_8h + 0x40))) {\n                        var_10h = fcn.0044a92e(0xc909);\n                        goto code_r0x00427e32;\n                    }\n                    fcn.0044b575(var_20h + (arg_ch - *(arg_8h + 0x40)), var_20h, var_34h);\n                    *ppiVar11 = var_20h + (arg_ch - *(arg_8h + 0x40));\n                }\n                fcn.0042735b((var_30h - *(arg_8h + 1)) + uVar16, var_34h, &var_10h);\n            }\n            piVar12 = &var_58h + uVar16;\n            var_10h = fcn.00425663();\n            uVar8 = uVar16;\n            if (var_10h != 0) goto code_r0x00427e32;\n        }\n        var_20h = var_14h[8] + 0x50;\n        uVar16 = var_1ch + 3U & 0xfffffffc;\n        var_40h = fcn.0041bf86();\n        if (var_40h == 0) {\n            var_10h = 7;\n            goto code_r0x00427e48;\n        }\n        var_1ch = var_40h + uVar16 * 4;\n        var_3ch = var_1ch + uVar16 * 2;\n        var_18h = *(var_58h + 3) << 2;\n        var_34h = *(var_58h + 4);\n        var_8h = 0;\n        if (0 < var_28h) {\n            var_44h = 0;\n            do {\n                iVar14 = var_8h;\n                piVar12 = &var_58h + var_8h;\n                iVar15 = var_14h[8] + var_44h + var_3ch;\n                aiStack160[var_8h] = iVar15;\n                fcn.0044b575(iVar15, *piVar12, 0x4c);\n                *(iVar15 + 0x40) = iVar15 + 0x4c;\n                fcn.0044b575(iVar15 + 0x4c, *(*piVar12 + 0x40), var_14h[8]);\n                var_2ch = NULL;\n                iVar13 = *(iVar15 + 0x10) + *(iVar15 + 1);\n                if (iVar13 != 0) {\n                    do {\n                        iVar9 = *(iVar15 + 1) - 1;\n                        ppiVar11 = var_2ch;\n                        if (-1 < iVar9) {\n                            var_ch = iVar15 + 0x14 + iVar9 * 8;\n                            do {\n                                if (*(var_ch + 1) <= ppiVar11) {\n                                    if (*(var_ch + 1) == ppiVar11) {\n                                        iVar9 = *var_ch;\n                                        goto code_r0x00427986;\n                                    }\n                                    ppiVar11 = ppiVar11 + -1;\n                                }\n                                var_ch = var_ch + -2;\n                                iVar9 = iVar9 + -1;\n                            } while (-1 < iVar9);\n                        }\n                        puVar2 = *(iVar15 + 0xc) + *(iVar15 + 0x40) + ppiVar11 * 2;\n                        iVar9 = (CONCAT11(*puVar2, puVar2[1]) & *(iVar15 + 0x12)) + *(iVar15 + 0x40);\ncode_r0x00427986:\n                        *(var_40h + var_24h * 4) = iVar9;\n                        uVar7 = fcn.00424e36(iVar9);\n                        iVar9 = var_24h;\n                        var_24h = var_24h + 1;\n                        var_2ch = var_2ch + 1;\n                        *(var_1ch + iVar9 * 2) = uVar7;\n                    } while (var_2ch < iVar13);\n                }\n                if ((var_8h < var_28h + -1) && (var_34h == 0)) {\n                    uVar6 = *(&var_70h + iVar14);\n                    puVar3 = var_1ch + var_24h * 2;\n                    var_ch = var_3ch + var_48h;\n                    var_48h = var_48h + uVar6;\n                    *puVar3 = uVar6;\n                    fcn.0044b575(var_ch, (&var_7ch)[iVar14], uVar6);\n                    piVar12 = var_40h + var_24h * 4;\n                    *piVar12 = (var_18h & 0xffff) + var_ch;\n                    *puVar3 = *puVar3 - var_18h;\n                    if (*(iVar15 + 3) == '\\0') {\n                        fcn.0044b575(*piVar12, *(iVar15 + 0x40) + 8, 4);\n                    }\n                    else if (*puVar3 < 4) {\n                        *puVar3 = 4;\n                    }\n                    var_24h = var_24h + 1;\n                }\n                var_8h = var_8h + 1;\n                var_44h = var_44h + var_20h;\n            } while (var_8h < var_28h);\n        }\n        iVar9 = var_1ch;\n        iVar13 = var_58h;\n        var_48h = var_18h & 0xffff;\n        var_18h = var_14h[9] + -0xc + (var_18h & 0xffff);\n        iVar15 = 0;\n        iVar10 = 0;\n        iVar14 = 0;\n        if (var_24h < 1) {\ncode_r0x00427ab2:\n            (&var_70h)[iVar14] = iVar15;\n            (&var_90h)[iVar14] = var_24h;\n            var_20h = iVar14 + 1;\n            var_8h = iVar14;\n            piVar12 = var_20h;\n            while (var_20h = piVar12,  0 < iVar14) {\n                var_18h = &var_70h + var_8h;\n                iVar15 = *var_18h;\n                ppiVar11 = &var_74h + var_8h;\n                var_3ch = ppiVar11;\n                var_ch = *ppiVar11;\n                piVar12 = &var_94h + var_8h;\n                while( true ) {\n                    iVar14 = *piVar12 + -1;\n                    iVar13 = (iVar14 - var_34h) + 1;\n                    if ((iVar15 != 0) &&\n                       (var_ch + (-2 - *(var_1ch + iVar14 * 2)) < *(var_1ch + iVar13 * 2) + 2 + iVar15)) break;\n                    iVar15 = iVar15 + 2 + *(var_1ch + iVar13 * 2);\n                    var_ch = var_ch + (-2 - *(var_1ch + iVar14 * 2));\n                    *piVar12 = *piVar12 + -1;\n                }\n                iVar14 = var_8h + -1;\n                var_8h = iVar14;\n                *var_18h = iVar15;\n                *ppiVar11 = var_ch;\n                piVar12 = var_20h;\n                iVar13 = var_58h;\n            }\n            if (1 < *(iVar13 + 0x48)) {\n                iVar15 = 0;\n                var_44h = **(iVar13 + 0x40);\n                if (0 < piVar12) {\n                    do {\n                        if (iVar15 < var_28h) {\n                            var_18h = (&var_58h)[iVar15];\n                            (&var_58h)[iVar15] = 0;\n                            (&var_70h)[iVar15] = var_18h;\n                            var_10h = fcn.00422ad1();\n                            var_38h = var_38h + 1;\n                            if (var_10h != 0) goto code_r0x00427e48;\n                        }\n                        else {\n                            var_10h = fcn.00426b7b(&var_18h, &var_4ch, var_4ch);\n                            if (var_10h != 0) goto code_r0x00427e48;\n                            var_38h = var_38h + 1;\n                            (&var_70h)[iVar15] = var_18h;\n                        }\n                        iVar15 = iVar15 + 1;\n                    } while (iVar15 < piVar12);\n                }\n                for (; iVar15 < var_28h; iVar15 = iVar15 + 1) {\n                    fcn.004270a7();\n                    if (var_10h != 0) goto code_r0x00427e48;\n                    fcn.004256a8();\n                    (&var_58h)[iVar15] = 0;\n                }\n                ppiVar11 = NULL;\n                if (piVar12 != 0x1 && -1 < piVar12 + -1) {\n                    do {\n                        iVar15 = (&var_70h)[ppiVar11];\n                        var_18h = *(iVar15 + 0x48);\n                        ppiVar1 = ppiVar11 + 1;\n                        var_3ch = ppiVar11;\n                        var_2ch = ppiVar1;\n                        if (ppiVar1 < piVar12) {\n                            do {\n                                var_20h = *((&var_70h)[var_2ch] + 0x48);\n                                if (var_20h < var_18h) {\n                                    var_3ch = var_2ch;\n                                    var_18h = var_20h;\n                                }\n                                var_2ch = var_2ch + 1;\n                            } while (var_2ch < piVar12);\n                            if (ppiVar11 < var_3ch) {\n                                piVar4 = &var_70h + var_3ch;\n                                (&var_70h)[ppiVar11] = *piVar4;\n                                *piVar4 = iVar15;\n                            }\n                        }\n                        ppiVar11 = ppiVar1;\n                    } while (ppiVar1 < piVar12 + -1);\n                }\n                iVar14 = var_38h;\n                fcn.0041d7e6();\n                iVar15 = 0;\n                var_8h = 0;\n                if (0 < iVar14) {\n                    do {\n                        iVar14 = (&var_70h)[var_8h];\n                        fcn.0042552f(var_44h);\n                        fcn.00427547((&var_90h)[var_8h] - iVar15, var_40h + iVar15 * 4, var_1ch + iVar15 * 2);\n                        iVar15 = (&var_90h)[var_8h];\n                        if (iVar15 < var_24h) {\n                            var_14h = *(var_40h + iVar15 * 4);\n                            uVar6 = *(var_1ch + iVar15 * 2);\n                            uVar16 = uVar6 + var_48h;\n                            var_20h = var_5ch + arg_ch;\n                            if (*(iVar14 + 3) == '\\0') {\n                                fcn.0044b575(*(iVar14 + 0x40) + 8, var_14h, 4);\n                            }\n                            else if (var_34h == 0) {\n                                var_14h = var_14h + -1;\n                                if (uVar6 == 4) {\n                                    uVar16 = fcn.00424e36(var_14h);\n                                    uVar16 = uVar16 & 0xffff;\n                                }\n                            }\n                            else {\n                                iVar15 = iVar15 + -1;\n                                fcn.00424cec(*(var_40h + iVar15 * 4));\n                                var_14h = var_20h;\n                                iVar13 = fcn.0041d50c(var_bch, var_b8h);\n                                uVar16 = iVar13 + 4;\n                                var_20h = NULL;\n                            }\n                            var_5ch = var_5ch + uVar16;\n                            if ((var_10h != 0) ||\n                               (fcn.004273fb(var_30h, var_14h, uVar16, *(iVar14 + 0x48), &var_10h),  var_10h != 0))\n                            goto code_r0x00427e48;\n                            iVar15 = iVar15 + 1;\n                            var_30h = var_30h + 1;\n                        }\n                        var_8h = var_8h + 1;\n                        iVar14 = var_38h;\n                    } while (var_8h < var_38h);\n                }\n                if ((var_44h & 8) == 0) {\n                    fcn.0044b575(*((&var_74h)[iVar14] + 0x40) + 8, *(aiStack160[var_28h + -1] + 0x40) + 8, 4);\n                }\n                if (((arg_10h != 0) && (*(arg_8h + 0x10) == 0)) &&\n                   (*(arg_8h + 5) < *(var_70h + 0xe) || *(arg_8h + 5) == *(var_70h + 0xe))) {\n                    fcn.004275ec(arg_8h, &var_10h);\n                    fcn.004270a7();\n                }\n                goto code_r0x00427e48;\n            }\n            uVar18 = 0xc9be;\n        }\n        else {\n            while( true ) {\n                uVar16 = *(iVar9 + iVar10 * 2);\n                iVar15 = iVar15 + 2 + uVar16;\n                if (var_18h < iVar15) break;\ncode_r0x00427aac:\n                iVar10 = iVar10 + 1;\n                if (var_24h <= iVar10) goto code_r0x00427ab2;\n            }\n            (&var_70h)[iVar14] = iVar15 - uVar16;\n            iVar15 = 0;\n            bVar17 = var_34h != 0;\n            (&var_90h)[iVar14] = iVar10;\n            if (bVar17) {\n                iVar10 = iVar10 + -1;\n            }\n            iVar14 = iVar14 + 1;\n            if (iVar14 < 5) goto code_r0x00427aac;\n            uVar18 = 0xc988;\n        }\n        var_10h = fcn.0044a92e(uVar18);\n        goto code_r0x00427e48;\n    }\ncode_r0x00427e32:\n    fcn.0044b531(&var_58h, 0, uVar16 * 4 + 4);\ncode_r0x00427e48:\n    fcn.0041c02b();\n    iVar15 = 0;\n    if (0 < var_28h) {\n        do {\n            fcn.004256a8();\n            iVar15 = iVar15 + 1;\n        } while (iVar15 < var_28h);\n    }\n    iVar15 = 0;\n    if (0 < var_38h) {\n        do {\n            fcn.004256a8();\n            iVar15 = iVar15 + 1;\n        } while (iVar15 < var_38h);\n    }\n    return var_10h;\n}\n",
        "token_count": 4858
    },
    "00427e84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00427e84(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_ch = 0;\n    var_4h = fcn.00422ad1();\n    if (var_4h == 0) {\n        var_4h = fcn.00426b7b(&var_8h, &var_ch, *(in_EAX + 0x48));\n        iVar1 = var_8h;\n        fcn.004275ec(var_8h, &var_4h);\n        if (var_4h == 0) {\n            fcn.0044b575(iVar1 + 0x14, in_EAX + 0x14, *(in_EAX + 1) << 3);\n            *(iVar1 + 1) = *(in_EAX + 1);\n            fcn.0042552f(**(iVar1 + 0x40) & 0xfffffff7);\n            fcn.0041d7e6();\n            *arg_8h = iVar1;\n            return 0;\n        }\n    }\n    *arg_8h = 0;\n    fcn.004256a8();\n    return var_4h;\n}\n",
        "token_count": 314
    },
    "00427f37": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00427f37(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    int32_t arg_ch;\n    int32_t iVar3;\n    int32_t unaff_EDI;\n    bool bVar4;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = *(*(unaff_EDI + 4) + 0x24);\n    var_4h = 0;\n    var_8h = 0;\n    do {\n        iVar3 = *(unaff_EDI + 0x5a);\n        iVar2 = *(unaff_EDI + 0x84 + iVar3 * 4);\n        if (iVar3 == 0) {\n            if ((*(iVar2 + 1) == '\\0') || (var_4h = fcn.00427e84(unaff_EDI + 0x88),  var_4h != 0)) break;\n            *(unaff_EDI + 0x5a) = 1;\n            *(unaff_EDI + 0x5c) = 0;\n            *(unaff_EDI + 0x5e) = 0;\n        }\n        else {\n            if ((*(iVar2 + 1) == '\\0') && (*(iVar2 + 0xe) <= (iVar1 * 2) / 3)) break;\n            arg_8h = *(unaff_EDI + 0x80 + iVar3 * 4);\n            var_4h = fcn.00422ad1();\n            if (var_4h == 0) {\n                arg_ch = fcn.0041f811();\n                var_4h = fcn.00427679(arg_8h, arg_ch, iVar3 == 1);\n                bVar4 = var_8h != 0;\n                var_8h = arg_ch;\n                if (bVar4) {\n                    fcn.0041f8b9();\n                }\n            }\n            *(iVar2 + 1) = 0;\n            fcn.004256a8();\n            *(unaff_EDI + 0x5a) = *(unaff_EDI + 0x5a) + -1;\n        }\n    } while (var_4h == 0);\n    if (var_8h != 0) {\n        fcn.0041f8b9();\n    }\n    return var_4h;\n}\n",
        "token_count": 569
    },
    "00428031": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00428031(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint32_t arg_24h)\n\n{\n    uchar *puVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t *unaff_EBX;\n    uint32_t arg_8h_00;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = arg_24h;\n    iVar3 = *(*unaff_EBX + 4);\n    var_8h = 0;\n    if (*(unaff_EBX + 0x53) == '\\x03') {\n        iVar5 = unaff_EBX[0x13];\n    }\n    else {\n        if (unaff_EBX[4] == 0) {\n            fcn.00424b22(arg_ch, arg_10h, 0);\n        }\n        iVar5 = fcn.00424bfa();\n        if ((iVar5 == 0) &&\n           ((arg_24h != 0 || (iVar5 = fcn.00424c3d(arg_8h, arg_ch, arg_10h, arg_20h, &var_4h),  iVar5 == 0)))) {\n            iVar4 = unaff_EBX[*(unaff_EBX + 0x5a) + 0x21];\n            if (*(iVar3 + 0x40) == 0) {\n                uVar6 = fcn.0041f811();\n                *(iVar3 + 0x40) = uVar6;\n            }\n            iVar3 = *(iVar3 + 0x40);\n            if (iVar3 == 0) {\n                iVar5 = 7;\n            }\n            else {\n                arg_24h = fcn.004271a3(iVar3, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, &var_8h);\n                iVar5 = arg_24h;\n                if (arg_24h == 0) {\n                    puVar2 = unaff_EBX + *(unaff_EBX + 0x5a) * 2 + 0x5c;\n                    arg_8h_00 = *puVar2;\n                    if (var_4h == 0) {\n                        iVar5 = fcn.00422ad1();\n                        if (iVar5 != 0) {\n                            return iVar5;\n                        }\n                        puVar1 = *(iVar4 + 0xc) + *(iVar4 + 0x40) + arg_8h_00 * 2;\n                        arg_24h = (CONCAT11(*puVar1, puVar1[1]) & *(iVar4 + 0x12)) + *(iVar4 + 0x40);\n                        if (*(iVar4 + 3) == '\\0') {\n                            fcn.0044b575(iVar3, arg_24h, 4);\n                        }\n                        var_4h = fcn.00424e36(arg_24h);\n                        var_4h = var_4h & 0xffff;\n                        arg_24h = fcn.004270bd(arg_24h);\n                        fcn.0042735b(arg_8h_00, var_4h & 0xffff, &arg_24h);\n                        if (arg_24h != 0) {\n                            return arg_24h;\n                        }\n                    }\n                    else if ((var_4h < 0) && (*(iVar4 + 0x10) != 0)) {\n                        *puVar2 = *puVar2 + 1;\n                        arg_8h_00 = *(unaff_EBX + *(unaff_EBX + 0x5a) * 2 + 0x5c);\n                    }\n                    fcn.004273fb(arg_8h_00, iVar3, var_8h, 0, &arg_24h);\n                    *(unaff_EBX + 0x3a) = 0;\n                    *(unaff_EBX + 0x52) = 0;\n                    iVar5 = arg_24h;\n                    if ((arg_24h == 0) && (*(iVar4 + 1) != '\\0')) {\n                        iVar5 = fcn.00427f37();\n                        *(unaff_EBX[*(unaff_EBX + 0x5a) + 0x21] + 1) = 0;\n                        *(unaff_EBX + 0x53) = 0;\n                    }\n                }\n            }\n        }\n    }\n    return iVar5;\n}\n",
        "token_count": 1064
    },
    "004281f1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.004281f1(void)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t *unaff_EBX;\n    uint *arg_10h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = *(*unaff_EBX + 4);\n    if ((*(unaff_EBX + *(unaff_EBX + 0x5a) * 2 + 0x5c) < *(unaff_EBX[*(unaff_EBX + 0x5a) + 0x21] + 0x10)) &&\n       (*(unaff_EBX + 0x53) == '\\x01')) {\n        if (unaff_EBX[4] == 0) {\n            fcn.00424b22(unaff_EBX[8], unaff_EBX[9], 0);\n        }\n        var_10h = *(unaff_EBX + 0x5a);\n        iVar2 = unaff_EBX[var_10h + 0x21];\n        var_14h = *(unaff_EBX + var_10h * 2 + 0x5c);\n        puVar1 = *(iVar2 + 0xc) + *(iVar2 + 0x40) + var_14h * 2;\n        var_8h = (CONCAT11(*puVar1, puVar1[1]) & *(iVar2 + 0x12)) + *(iVar2 + 0x40);\n        if ((((*(iVar2 + 3) != '\\0') || (iVar3 = fcn.00426a81(unaff_EBX, &var_1ch),  iVar3 == 0)) &&\n            (iVar3 = fcn.00424bfa(),  iVar3 == 0)) && (iVar3 = fcn.00422ad1(),  iVar3 == 0)) {\n            var_4h = fcn.004270bd(var_8h);\n            arg_10h = &var_4h;\n            uVar4 = fcn.00424e36(var_8h);\n            fcn.0042735b(var_14h, uVar4 & 0xffff, arg_10h);\n            iVar3 = var_4h;\n            if (var_4h == 0) {\n                if (*(iVar2 + 3) == '\\0') {\n                    iVar2 = unaff_EBX[*(unaff_EBX + 0x5a) + 0x21];\n                    var_1ch = *(unaff_EBX[var_10h + 0x22] + 0x48);\n                    iVar3 = *(iVar2 + 0xc) + *(iVar2 + 0x40) + *(iVar2 + 0x10) * 2;\n                    var_8h = (CONCAT11(*(iVar3 + -2), *(iVar3 + -1)) & *(iVar2 + 0x12)) + *(iVar2 + 0x40);\n                    var_18h = fcn.00424e36(var_8h);\n                    var_18h = var_18h & 0xffff;\n                    if (*(var_ch + 0x40) == 0) {\n                        uVar5 = fcn.0041f811();\n                        *(var_ch + 0x40) = uVar5;\n                    }\n                    var_ch = *(var_ch + 0x40);\n                    var_4h = fcn.00422ad1();\n                    if (var_4h == 0) {\n                        fcn.004273fb(var_14h, var_8h + -4, var_18h + 4, var_1ch, &var_4h);\n                    }\n                    fcn.0042735b(*(iVar2 + 0x10) - 1, var_18h, &var_4h);\n                    if (var_4h != 0) {\n                        return var_4h;\n                    }\n                }\n                iVar3 = fcn.00427f37();\n                if (iVar3 == 0) {\n                    if (var_10h < *(unaff_EBX + 0x5a)) {\n                        do {\n                            *(unaff_EBX + 0x5a) = *(unaff_EBX + 0x5a) + -1;\n                            fcn.004256a8();\n                        } while (var_10h < *(unaff_EBX + 0x5a));\n                        iVar3 = fcn.00427f37();\n                        if (iVar3 != 0) {\n                            return iVar3;\n                        }\n                    }\n                    fcn.004264a9();\n                }\n            }\n        }\n    }\n    else {\n        iVar3 = 1;\n    }\n    return iVar3;\n}\n",
        "token_count": 1111
    },
    "0042844d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042844d(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    uchar *puVar1;\n    uchar uVar2;\n    uchar uVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    int32_t in_ECX;\n    uint uVar8;\n    int32_t *arg_14h_00;\n    uint var_4h;\n    \n    if (*(arg_8h + 0x2c) <= arg_ch && arg_ch != *(arg_8h + 0x2c)) {\n        iVar6 = fcn.0044a92e(0xcd6a);\n        return iVar6;\n    }\n    arg_ch = fcn.00425663();\n    iVar6 = 0;\n    if (arg_ch != 0) {\n        return arg_ch;\n    }\n    if (*(in_ECX + 0x10) != 0) {\n        do {\n            iVar5 = *(in_ECX + 0x40);\n            puVar1 = *(in_ECX + 0xc) + iVar5 + iVar6 * 2;\n            uVar2 = *puVar1;\n            uVar3 = puVar1[1];\n            uVar4 = *(in_ECX + 0x12);\n            if (*(in_ECX + 3) == '\\0') {\n                uVar8 = 1;\n                arg_14h_00 = arg_14h;\n                uVar7 = fcn.0041d7cc();\n                arg_ch = fcn.0042844d(arg_8h, uVar7, uVar8, arg_14h_00);\n                if (arg_ch != 0) goto code_r0x00428555;\n            }\n            arg_ch = fcn.004270bd((CONCAT11(uVar2, uVar3) & uVar4) + iVar5);\n            if (arg_ch != 0) goto code_r0x00428555;\n            iVar6 = iVar6 + 1;\n        } while (iVar6 < *(in_ECX + 0x10));\n    }\n    if (*(in_ECX + 3) == '\\0') {\n        uVar8 = 1;\n        uVar7 = fcn.0041d7cc();\n        arg_ch = fcn.0042844d(arg_8h, uVar7, uVar8, arg_14h);\n        if (arg_ch != 0) goto code_r0x00428555;\n    }\n    else if (arg_14h != NULL) {\n        *arg_14h = *arg_14h + *(in_ECX + 0x10);\n    }\n    if (arg_10h == 0) {\n        arg_ch = fcn.00422ad1();\n        if (arg_ch == 0) {\n            fcn.0042552f(**(in_ECX + 0x40) | 8);\n        }\n    }\n    else {\n        fcn.004270a7();\n    }\ncode_r0x00428555:\n    fcn.004256a8();\n    return arg_ch;\n}\n",
        "token_count": 714
    },
    "00428669": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00428669(uint32_t *arg_8h)\n\n{\n    int16_t *piVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint arg_8h_00;\n    bool bVar3;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    iVar2 = fcn.004264a9();\n    do {\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(in_EAX + 0x84 + *(in_EAX + 0x5a) * 4);\n        if ((*(iVar2 + 3) != '\\0') || (*(iVar2 + 2) == '\\0')) {\n            bVar3 = CARRY4(var_8h, *(iVar2 + 0x10));\n            var_8h = var_8h + *(iVar2 + 0x10);\n            var_4h = var_4h + bVar3;\n        }\n        if (*(iVar2 + 3) != '\\0') {\n            do {\n                if (*(in_EAX + 0x5a) == 0) {\n                    *arg_8h = var_8h;\n                    arg_8h[1] = var_4h;\n                    return 0;\n                }\n                fcn.00426489();\n            } while (*(*(in_EAX + 0x84 + *(in_EAX + 0x5a) * 4) + 0x10) <= *(in_EAX + 0x5c + *(in_EAX + 0x5a) * 2));\n            piVar1 = in_EAX + 0x5c + *(in_EAX + 0x5a) * 2;\n            *piVar1 = *piVar1 + 1;\n        }\n        arg_8h_00 = fcn.0041d7cc();\n        iVar2 = fcn.00426418(arg_8h_00);\n    } while( true );\n}\n",
        "token_count": 470
    },
    "0042875d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0042875d(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    iVar1 = *(in_EAX + 4);\n    if ((*(iVar1 + 0x30) == 0) && (param_1 != 0)) {\n        uVar2 = fcn.0041c2f7(param_1);\n        *(iVar1 + 0x30) = uVar2;\n        *(iVar1 + 0x34) = param_2;\n    }\n    return *(iVar1 + 0x30);\n}\n",
        "token_count": 144
    },
    "004287e6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042884d)\n\nint32_t __cdecl fcn.004287e6(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int64_t iVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t extraout_ECX;\n    int64_t iVar7;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    puVar1 = *(*(arg_8h + 4) + 4);\n    iVar2 = *(*(*(arg_8h + 0x18) + 4) + 0x20);\n    arg_8h_00 = *puVar1;\n    iVar3 = puVar1[8];\n    var_8h = iVar2;\n    if (iVar3 <= iVar2) {\n        var_8h = iVar3;\n    }\n    iVar7 = fcn.0044b8cd(arg_ch, 0, iVar2, iVar2 >> 0x1f);\n    arg_ch = 0;\n    iVar4 = iVar7 - iVar2;\n    do {\n        if (iVar7 <= iVar4) {\n            return arg_ch;\n        }\n        var_4h = NULL;\n        iVar6 = fcn.0044bbfd(iVar4, iVar3, iVar3 >> 0x1f);\n        if (iVar6 + 1 != 0x40000000 / *(*(*(arg_8h + 4) + 4) + 0x20) + 1) {\n            arg_ch = fcn.0042268e(arg_8h_00, iVar6 + 1, &var_4h, 0);\n            piVar5 = var_4h;\n            if ((arg_ch == 0) && (arg_ch = fcn.00422ad1(),  arg_ch == 0)) {\n                iVar6 = fcn.0044b92d(iVar4, iVar2, iVar2 >> 0x1f, var_8h);\n                fcn.0044b575(*piVar5 + extraout_ECX, iVar6 + arg_10h);\n                *piVar5[1] = 0;\n            }\n            fcn.004227d5();\n        }\n        iVar4 = iVar4 + iVar3;\n    } while (arg_ch == 0);\n    return arg_ch;\n}\n",
        "token_count": 640
    },
    "00428901": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00428b46)\n// WARNING: Removing unreachable block (ram,0x00428c02)\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00428901(void)\n\n{\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *unaff_ESI;\n    bool bVar4;\n    uint32_t uVar5;\n    uint32_t arg_14h;\n    uint32_t var_40h;\n    int32_t var_3ch;\n    uint32_t var_38h;\n    int32_t var_34h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint *var_20h;\n    int32_t *var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_4h;\n    \n    fcn.0041bc4a(*(unaff_ESI[5] + 0x44));\n    if (*unaff_ESI != 0) {\n        fcn.0041bc4a(*(*unaff_ESI + 0x44));\n    }\n    iVar3 = unaff_ESI[7];\n    if (((iVar3 != 0) && (iVar3 != 5)) && (iVar3 != 6)) goto code_r0x00428c74;\n    var_24h = **(unaff_ESI[6] + 4);\n    var_28h = **(unaff_ESI[1] + 4);\n    var_2ch = 0;\n    if ((*unaff_ESI == 0) || (*(*(unaff_ESI[6] + 4) + 0x15) != '\\x02')) {\n        iVar3 = 0;\n        if (unaff_ESI[3] == 0) {\n            iVar3 = fcn.00425c6f(unaff_ESI[1], 2);\n            if (iVar3 != 0) goto code_r0x004289ac;\n            unaff_ESI[3] = 1;\n            fcn.00428612(unaff_ESI + 2);\n        }\n        if (*(unaff_ESI[6] + 8) == '\\0') {\n            iVar3 = fcn.00425c6f(unaff_ESI[6], 0);\n            var_2ch = 1;\n        }\n    }\n    else {\n        iVar3 = 5;\n    }\ncode_r0x004289ac:\n    var_4h = *(*(unaff_ESI[6] + 4) + 0x20);\n    uVar5 = (*(unaff_ESI[1] + 4))[8];\n    if (((iVar3 == 0) && (*(**(unaff_ESI[1] + 4) + 5) == '\\x05')) && (var_4h != uVar5)) {\n        iVar3 = 8;\n    }\n    var_ch = *(*(unaff_ESI[6] + 4) + 0x2c);\n    var_1ch = NULL;\n    while( true ) {\n        if ((0x7ffffffe < var_1ch) || (var_14h = unaff_ESI[4],  var_ch < var_14h)) break;\n        if (iVar3 != 0) goto code_r0x00428a86;\n        if ((var_14h != 0x40000000 / *(*(unaff_ESI[6] + 4) + 0x20) + 1U) &&\n           (iVar3 = fcn.0042268e(var_24h, var_14h, &var_20h, 0),  iVar3 == 0)) {\n            iVar3 = fcn.004287e6(unaff_ESI, var_14h, *var_20h);\n            fcn.004227d5();\n        }\n        unaff_ESI[4] = unaff_ESI[4] + 1;\n        var_1ch = var_1ch + 1;\n    }\n    if (iVar3 == 0) {\n        unaff_ESI[9] = var_ch;\n        unaff_ESI[8] = (var_ch - unaff_ESI[4]) + 1;\n        if (var_ch < unaff_ESI[4]) goto code_r0x00428a8f;\n        if (unaff_ESI[10] == 0) {\n            ppiVar1 = **(unaff_ESI[6] + 4) + 0x58;\n            unaff_ESI[0xb] = *ppiVar1;\n            *ppiVar1 = unaff_ESI;\n            unaff_ESI[10] = 1;\n            goto code_r0x00428a86;\n        }\n    }\n    else {\ncode_r0x00428a86:\n        _var_10h = CONCAT44(var_ch, var_10h);\n        if (iVar3 == 0x65) {\ncode_r0x00428a8f:\n            iVar3 = fcn.0042863a(1, unaff_ESI[2] + 1);\n            if (iVar3 == 0) {\n                if (*unaff_ESI != 0) {\n                    fcn.00436864();\n                }\n                iVar3 = var_28h;\n                if (var_4h < uVar5) {\n                    iVar2 = (uVar5 / var_4h + -1 + var_ch) / (uVar5 / var_4h);\n                    if (iVar2 == 0x40000000 / *(*(unaff_ESI[1] + 4) + 0x20) + 1) {\n                        iVar2 = iVar2 + -1;\n                    }\n                }\n                else {\n                    iVar2 = (var_4h / uVar5) * var_ch;\n                }\n                *(var_28h + 0x18) = iVar2;\n                if (var_4h < uVar5) {\n                    var_34h = var_4h >> 0x1f;\n                    var_38h = var_4h;\n                    _var_10h = fcn.0044b8cd(var_ch, var_ch >> 0x1f, var_4h, var_34h);\n                    var_1ch = *(iVar3 + 0x3c);\n                    iVar3 = fcn.00422cb7(0, 1);\n                    var_40h = uVar5 + 0x40000000;\n                    var_3ch = var_40h >> 0x1f;\n                    if (_var_10h <= var_40h) {\n                        var_3ch = var_ch;\n                        var_40h = var_10h;\n                    }\n                    var_18h = var_4h + 0x40000000;\n                    var_14h = var_18h >> 0x1f;\n                    if (iVar3 == 0) {\n                        do {\n                            if ((var_3ch < var_14h) || ((var_3ch <= var_14h && (var_40h <= var_18h)))) break;\n                            var_20h = NULL;\n                            uVar5 = var_18h;\n                            arg_14h = var_14h;\n                            iVar3 = fcn.0044b9ed(var_18h, var_14h, var_38h, var_34h, &var_20h, 0);\n                            iVar3 = fcn.0042268e(var_24h, iVar3 + 1, uVar5, arg_14h);\n                            if (iVar3 == 0) {\n                                iVar3 = fcn.0041b9fe(*var_20h, var_4h, var_18h, var_14h);\n                            }\n                            fcn.004227d5();\n                            bVar4 = CARRY4(var_18h, var_38h);\n                            var_18h = var_18h + var_38h;\n                            var_14h = var_14h + var_34h + bVar4;\n                        } while (iVar3 == 0);\n                        if (iVar3 == 0) {\n                            iVar3 = (**(*var_1ch + 0x18))(var_1ch, &var_40h);\n                            if ((iVar3 == 0) && (_var_10h < CONCAT44(var_3ch, var_40h))) {\n                                iVar3 = fcn.0041ba18(_var_10h);\n                            }\n                            if (iVar3 == 0) {\n                                iVar3 = fcn.00422c79();\n                                goto code_r0x00428c36;\n                            }\n                        }\n                    }\n                }\n                else {\n                    iVar3 = fcn.00422cb7(0, 0);\ncode_r0x00428c36:\n                    if (iVar3 == 0) {\n                        iVar3 = fcn.00425e1b();\n                        if (iVar3 == 0) {\n                            iVar3 = 0x65;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if (var_2ch != 0) {\n        fcn.00425dc0(0);\n        fcn.00425e1b();\n    }\n    if (iVar3 == 0xc0a) {\n        iVar3 = 7;\n    }\n    unaff_ESI[7] = iVar3;\ncode_r0x00428c74:\n    if (*unaff_ESI != 0) {\n        fcn.0041bc58(*(*unaff_ESI + 0x44));\n    }\n    fcn.0041bc58(*(unaff_ESI[5] + 0x44));\n    return iVar3;\n}\n",
        "token_count": 2183
    },
    "00428c95": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.00428c95(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t **ppiVar3;\n    int32_t *unaff_ESI;\n    uint var_4h;\n    \n    if (unaff_ESI == NULL) {\n        uVar2 = 0;\n    }\n    else {\n        fcn.0041bc4a(*(unaff_ESI[5] + 0x44));\n        uVar1 = *(unaff_ESI[5] + 0x44);\n        if (*unaff_ESI != 0) {\n            fcn.0041bc4a(*(*unaff_ESI + 0x44));\n            if (*unaff_ESI != 0) {\n                *(unaff_ESI[6] + 0x10) = *(unaff_ESI[6] + 0x10) + -1;\n            }\n        }\n        if (unaff_ESI[10] != 0) {\n            for (ppiVar3 = **(unaff_ESI[6] + 4) + 0x58; *ppiVar3 != unaff_ESI; ppiVar3 = *ppiVar3 + 0xb) {\n            }\n            *ppiVar3 = unaff_ESI[0xb];\n        }\n        fcn.00425e8f();\n        uVar2 = -(unaff_ESI[7] != 0x65) & unaff_ESI[7];\n        fcn.0041d171(uVar2, 0);\n        if (*unaff_ESI != 0) {\n            fcn.0041bc58(*(*unaff_ESI + 0x44));\n            if (*unaff_ESI != 0) {\n                fcn.0041c110();\n            }\n        }\n        fcn.0041bc58(uVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 418
    },
    "00428dc3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00428dc3(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint *unaff_EDI;\n    \n    if (in_EAX < 0x20) {\n        in_EAX = 0x20;\n    }\n    iVar2 = fcn.0041c0f1(unaff_EDI[9]);\n    if (iVar2 < in_EAX) {\n        if ((param_1 == 0) || (unaff_EDI[1] != unaff_EDI[9])) {\n            fcn.0041c16b(*unaff_EDI, unaff_EDI[9]);\n            uVar3 = fcn.0041c31d(in_EAX);\n        }\n        else {\n            uVar3 = fcn.0041c409(*unaff_EDI, unaff_EDI[1]);\n            param_1 = 0;\n            unaff_EDI[1] = uVar3;\n        }\n        unaff_EDI[9] = uVar3;\n    }\n    iVar2 = unaff_EDI[1];\n    if ((((iVar2 != 0) && (param_1 != 0)) && (iVar1 = unaff_EDI[9],  iVar1 != 0)) && (iVar2 != iVar1)) {\n        fcn.0044b575(iVar1, iVar2, unaff_EDI[6]);\n    }\n    if (((*(unaff_EDI + 7) & 0x400) != 0) && (unaff_EDI[8] != NULL)) {\n        (*unaff_EDI[8])(unaff_EDI[1]);\n    }\n    iVar2 = unaff_EDI[9];\n    unaff_EDI[1] = iVar2;\n    if (iVar2 == 0) {\n        *(unaff_EDI + 7) = 1;\n    }\n    else {\n        *(unaff_EDI + 7) = *(unaff_EDI + 7) & 0xe7ff;\n    }\n    unaff_EDI[8] = 0;\n    return (-(iVar2 != 0) & 0xfffffff9) + 7;\n}\n",
        "token_count": 496
    },
    "004293c1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004293c1(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t *in_EDX;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        fcn.0042921c();\ncode_r0x004294f5:\n        uVar3 = 0;\n    }\n    else {\n        if (*in_EDX == 0) {\n            var_8h = 1000000000;\n        }\n        else {\n            var_8h = *(*in_EDX + 0x48);\n        }\n        var_4h._0_2_ = (-(arg_ch != '\\0') & 0xfff2) + 0x10;\n        if (in_ECX < 0) {\n            in_ECX = 0;\n            if (arg_ch == '\\x01') {\n                if (-1 < var_8h) {\n                    do {\n                        if (*(in_ECX + arg_8h) == '\\0') break;\n                        in_ECX = in_ECX + 1;\n                    } while (in_ECX <= var_8h);\n                }\n            }\n            else if (-1 < var_8h) {\n                do {\n                    if ((*(in_ECX + 1 + arg_8h) | *(in_ECX + arg_8h)) == 0) break;\n                    in_ECX = in_ECX + 2;\n                } while (in_ECX <= var_8h);\n            }\n            var_4h._0_2_ = var_4h | 0x200;\n        }\n        if (in_EAX == -1) {\n            iVar4 = in_ECX;\n            if ((var_4h & 0x200) != 0) {\n                iVar4 = (arg_ch != '\\x01') + 1 + in_ECX;\n            }\n            if (in_ECX <= var_8h) {\n                iVar2 = fcn.00428dc3(0);\n                if (iVar2 != 0) {\n                    return 7;\n                }\n                fcn.0044b575(in_EDX[1], arg_8h, iVar4);\n                goto code_r0x004294c3;\n            }\n        }\n        else {\n            fcn.0042908c(in_EDX);\n            in_EDX[1] = arg_8h;\n            if (in_EAX == 0x41315e) {\n                in_EDX[8] = 0;\n                in_EDX[9] = arg_8h;\n            }\n            else {\n                in_EDX[8] = in_EAX;\n                var_4h._0_2_ = var_4h | (-(in_EAX != 0) & 0xfc00) + 0x800;\n            }\ncode_r0x004294c3:\n            in_EDX[6] = in_ECX;\n            *(in_EDX + 7) = var_4h;\n            cVar1 = arg_ch;\n            if (arg_ch == '\\0') {\n                cVar1 = '\\x01';\n            }\n            *(in_EDX + 0x1f) = cVar1;\n            *(in_EDX + 0x1e) = (arg_ch == '\\0') + '\\x03';\n            if (in_ECX <= var_8h) goto code_r0x004294f5;\n        }\n        uVar3 = 0x12;\n    }\n    return uVar3;\n}\n",
        "token_count": 824
    },
    "004296c5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004296c5(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t unaff_EBX;\n    uint uVar2;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = 0;\n    var_8h = 0;\n    var_4h = 0;\n    if (arg_ch == 0) {\n        if (*(in_ECX + 0x53) != '\\x01') goto code_r0x004296fa;\n        uVar2 = 1;\n    }\n    else {\n        if (*(in_ECX + 0x53) != '\\x01') goto code_r0x004296fa;\n        uVar2 = 0;\n    }\n    iVar1 = fcn.004263c0(&var_8h, uVar2);\ncode_r0x004296fa:\n    if ((var_8h < arg_8h + unaff_EBX) || ((*(in_EAX + 0x1c) & 0x400) != 0)) {\n        var_4h = fcn.00428dc3(0);\n        if (var_4h == 0) {\n            *(in_EAX + 0x1c) = 0x610;\n            *(in_EAX + 0x1f) = 0;\n            *(in_EAX + 0x1e) = 4;\n            if (arg_ch == 0) {\n                var_4h = fcn.00426385();\n            }\n            else {\n                var_4h = fcn.004260ef(arg_8h, unaff_EBX, *(in_EAX + 4), 0);\n            }\n            *(unaff_EBX + *(in_EAX + 4)) = 0;\n            *(*(in_EAX + 4) + 1 + unaff_EBX) = 0;\n            if (var_4h != 0) {\n                fcn.0042908c(in_EAX);\n            }\n        }\n    }\n    else {\n        fcn.0042908c(in_EAX);\n        *(in_EAX + 4) = iVar1 + arg_8h;\n        *(in_EAX + 0x1c) = 0x1010;\n    }\n    *(in_EAX + 0x18) = unaff_EBX;\n    return var_4h;\n}\n",
        "token_count": 563
    },
    "00429cc5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00429cc5(uint32_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint8_t *puVar4;\n    uint32_t uVar5;\n    uint *unaff_ESI;\n    uint32_t uVar6;\n    uint var_4h;\n    \n    iVar2 = unaff_ESI[7];\n    uVar6 = *arg_8h;\n    iVar3 = unaff_ESI[0xb];\n    puVar4 = unaff_ESI[1];\n    *(unaff_ESI + 0x69) = 1;\n    do {\n        iVar2 = iVar2 + -1;\n        if (iVar2 < 0) {\n            fcn.0041c16b(*unaff_ESI, unaff_ESI[0xb]);\n            unaff_ESI[0xb] = 0;\n            *arg_8h = uVar6;\n            return;\n        }\n        uVar1 = *puVar4;\n        puVar4[2] = *(uVar1 + 0x443fa0);\n        if ((uVar1 == 0x12) || (uVar1 == 0x74)) {\n            uVar5 = puVar4[3];\ncode_r0x00429d29:\n            if (uVar6 < uVar5) {\n                uVar6 = uVar5;\n            }\n        }\n        else {\n            if (((uVar1 != 0x22) || (*(puVar4 + 8) == 0)) && (uVar1 != 0x78)) {\n                if (uVar1 == 0x85) {\n                    uVar5 = *(puVar4 + 8);\n                }\n                else {\n                    if (uVar1 != 0x80) goto code_r0x00429d2f;\n                    uVar5 = *(puVar4 + -0x10);\n                }\n                goto code_r0x00429d29;\n            }\n            *(unaff_ESI + 0x69) = 0;\n        }\ncode_r0x00429d2f:\n        if (((puVar4[2] & 1) != 0) && (*(puVar4 + 8) < 0)) {\n            *(puVar4 + 8) = *(iVar3 - (*(puVar4 + 8) * 4 + 4));\n        }\n        puVar4 = puVar4 + 0x14;\n    } while( true );\n}\n",
        "token_count": 555
    },
    "00429f48": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00429f48(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uchar *puVar1;\n    \n    if (*(in_EAX + 4) != 0) {\n        puVar1 = param_1 * 0x14 + *(in_EAX + 4);\n        do {\n            param_2 = param_2 + -1;\n            fcn.00429e26();\n            fcn.0044b531(puVar1, 0, 0x14);\n            *puVar1 = 0x89;\n            puVar1 = puVar1 + 0x14;\n        } while (param_2 != 0);\n    }\n    return;\n}\n",
        "token_count": 167
    },
    "00429f87": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00429f87(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t extraout_ECX;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint var_4h;\n    \n    if ((arg_8h[1] == 0) || (*(*arg_8h + 0x1e) != '\\0')) {\n        if (arg_10h == -6) {\n            return;\n        }\n        if (arg_10h == -10) {\n            return;\n        }\n        fcn.00429e26();\n        return;\n    }\n    if (in_EAX < 0) {\n        in_EAX = arg_8h[7] + -1;\n    }\n    iVar6 = in_EAX * 0x14 + arg_8h[1];\n    fcn.00429e26();\n    *(iVar6 + 0x10) = 0;\n    if (arg_10h == -0xe) {\n        *(iVar6 + 0x10) = arg_ch;\n        *(iVar6 + 1) = 0xf2;\n        return;\n    }\n    if (arg_ch == 0) {\n        *(iVar6 + 0x10) = 0;\ncode_r0x0042a049:\n        *(iVar6 + 1) = 0;\n    }\n    else {\n        if (arg_10h == -6) {\n            uVar4 = *(arg_ch + 6);\n            iVar5 = uVar4 * 5 + 0xc;\n            iVar2 = fcn.0041c31d(iVar5);\n            *(iVar6 + 0x10) = iVar2;\n            if (iVar2 == 0) {\n                *(*arg_8h + 0x1e) = 1;\n                goto code_r0x0042a049;\n            }\n            fcn.0044b575(iVar2, arg_ch, iVar5 - uVar4);\n            iVar5 = *(iVar2 + 8);\n            if (iVar5 != 0) {\n                iVar1 = iVar2 + 0xc + uVar4 * 4;\n                *(iVar2 + 8) = iVar1;\n                fcn.0044b575(iVar1, iVar5, uVar4);\n            }\n        }\n        else {\n            if (arg_10h != -0x10) {\n                if (arg_10h == -10) {\n                    *(iVar6 + 0x10) = arg_ch;\n                    *(iVar6 + 1) = arg_10h;\n                    *(arg_ch + 0xc) = *(arg_ch + 0xc) + 1;\n                    return;\n                }\n                if (arg_10h < 0) {\n                    *(iVar6 + 0x10) = arg_ch;\n                    *(iVar6 + 1) = arg_10h;\n                    return;\n                }\n                if (arg_10h == 0) {\n                    fcn.0041d157();\n                    arg_ch = extraout_ECX;\n                }\n                uVar3 = fcn.0041c46a(arg_ch);\n                *(iVar6 + 0x10) = uVar3;\n                *(iVar6 + 1) = 0xff;\n                return;\n            }\n            *(iVar6 + 0x10) = arg_ch;\n        }\n        *(iVar6 + 1) = 0xfa;\n    }\n    return;\n}\n",
        "token_count": 801
    },
    "0042a0b7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042a0b7(int32_t *param_1)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX < 0) {\n        if (param_1[7] == 0) {\n            return 0x443d58;\n        }\n        in_EAX = param_1[7] + -1;\n    }\n    if (*(*param_1 + 0x1e) != '\\0') {\n        return 0x443d58;\n    }\n    return in_EAX * 0x14 + param_1[1];\n}\n",
        "token_count": 134
    },
    "0042a0ea": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042a0ea(int32_t *param_1)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    int32_t *piVar3;\n    uint var_4h;\n    \n    if ((param_1 != NULL) && (in_EAX != 0)) {\n        iVar2 = *param_1;\n        uVar1 = *(iVar2 + 0x1e);\n        piVar3 = param_1 + in_EAX * 10;\n        if (*(iVar2 + 0x1e0) == 0) {\n            if (param_1 < piVar3) {\n                do {\n                    if ((*(param_1 + 7) & 0x2460) == 0) {\n                        if (param_1[9] != 0) {\n                            fcn.0041c16b(iVar2, param_1[9]);\n                            param_1[9] = 0;\n                        }\n                    }\n                    else {\n                        fcn.0042908c(param_1);\n                    }\n                    *(param_1 + 7) = 1;\n                    param_1 = param_1 + 10;\n                } while (param_1 < piVar3);\n            }\n            *(iVar2 + 0x1e) = uVar1;\n        }\n        else {\n            for (; param_1 < piVar3; param_1 = param_1 + 10) {\n                fcn.0041c16b(iVar2, param_1[9]);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 351
    },
    "0042a187": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042a2a5)\n// WARNING: Removing unreachable block (ram,0x0042a2c6)\n// WARNING: Removing unreachable block (ram,0x0042a2d0)\n// WARNING: Removing unreachable block (ram,0x0042a239)\n\nvoid __cdecl fcn.0042a187(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_ch = arg_ch + arg_10h;\n    iVar1 = *in_EAX;\n    in_EAX[0xd] = -0x420df25d;\n    if ((-1 < arg_8h) && (*(iVar1 + 0x1e) == '\\0')) {\n        iVar2 = in_EAX[8] * 0x14 + in_EAX[1];\n        iVar3 = in_EAX[7] * 0x14 + in_EAX[1];\n        fcn.00429cc5(&arg_14h);\n        *(in_EAX + 0x1a) = arg_1ch;\n        if ((arg_18h != 0) && (arg_ch < 10)) {\n            arg_ch = 10;\n        }\n        fcn.0044b531(iVar3, 0, iVar2 - iVar3);\n        iVar3 = fcn.0042a167(iVar2);\n        in_EAX[2] = iVar3;\n        iVar3 = fcn.0042a167(iVar2);\n        in_EAX[0x12] = iVar3;\n        iVar3 = fcn.0042a167(iVar2);\n        in_EAX[3] = iVar3;\n        iVar3 = fcn.0042a167(iVar2);\n        in_EAX[0x13] = iVar3;\n        iVar2 = fcn.0042a167(iVar2);\n        in_EAX[0x11] = iVar2;\n        *(in_EAX + 0x32) = arg_10h;\n        if ((in_EAX[0x12] != 0) && (*(in_EAX + 0x14) = arg_8h,  0 < arg_8h)) {\n            iVar2 = 0;\n            do {\n                *(in_EAX[0x12] + 0x1c + iVar2) = 1;\n                *(iVar2 + in_EAX[0x12]) = iVar1;\n                iVar2 = iVar2 + 0x28;\n                arg_8h = arg_8h + -1;\n            } while (arg_8h != 0);\n        }\n        if (in_EAX[2] != 0) {\n            in_EAX[2] = in_EAX[2] + -0x28;\n            in_EAX[6] = arg_ch;\n            if (0 < arg_ch) {\n                iVar2 = 0x28;\n                do {\n                    *(in_EAX[2] + 0x1c + iVar2) = 1;\n                    *(iVar2 + in_EAX[2]) = iVar1;\n                    iVar2 = iVar2 + 0x28;\n                    arg_ch = arg_ch + -1;\n                } while (arg_ch != 0);\n            }\n        }\n    }\n    in_EAX[0x16] = -1;\n    *(in_EAX + 0x62) = *(in_EAX + 0x62) | arg_18h;\n    in_EAX[0x17] = 0;\n    *(in_EAX + 0x18) = 2;\n    in_EAX[0xd] = -0x420df25d;\n    in_EAX[0x1b] = 0;\n    in_EAX[0x15] = 1;\n    *(in_EAX + 0x66) = 0xff;\n    in_EAX[0x1d] = 0;\n    in_EAX[0x2e] = 0;\n    in_EAX[0x2f] = 0;\n    return;\n}\n",
        "token_count": 1009
    },
    "0042a521": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0042a521(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    \n    if (*(*in_EAX + 0x1e) != '\\0') {\n        return 7;\n    }\n    uVar1 = fcn.004293c1(param_3, 1);\n    return uVar1;\n}\n",
        "token_count": 93
    },
    "0042a555": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042a555(int32_t *param_1)\n\n{\n    uint uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    uint extraout_ECX_01;\n    int32_t iVar5;\n    bool bVar6;\n    ulong uVar7;\n    int32_t iStack44;\n    int32_t iStack40;\n    int32_t *piStack36;\n    uint32_t uStack32;\n    int32_t iStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    uint32_t uStack16;\n    int32_t iStack12;\n    \n    iStack40 = 0;\n    iStack28 = 0;\n    iVar2 = fcn.004440f0(in_EAX + 0x38);\n    iVar5 = 0;\n    if (iVar2 != 0) {\n        return iVar2;\n    }\n    piStack36 = NULL;\n    do {\n        if (param_1[1] <= iVar5) break;\n        iVar3 = fcn.0042874c();\n        if (iVar3 != 0) {\n            iStack28 = 1;\n            if (iVar5 != 1) {\n                iStack40 = iStack40 + 1;\n            }\n            iVar2 = 0;\n            if (*(**(extraout_ECX + 4) + 0xac) == 0) {\n                iVar2 = fcn.00421b06(4);\n            }\n        }\n        piStack36 = piStack36 + 4;\n        iVar5 = iVar5 + 1;\n    } while (iVar2 == 0);\n    if (iVar2 != 0) {\n        return iVar2;\n    }\n    if (((iStack28 != 0) && (param_1[0x2b] != NULL)) && (iVar2 = (*param_1[0x2b])(param_1[0x2a]),  iVar2 != 0)) {\n        return 0x13;\n    }\n    uVar7 = fcn.0041d157();\n    if ((uVar7 == 0) || (iStack40 < 2)) {\n        iVar5 = 0;\n        for (iStack44 = 0; (iVar2 == 0 && (iStack44 < param_1[1])); iStack44 = iStack44 + 1) {\n            if (*(param_1[2] + 4 + iVar5) != 0) {\n                iVar2 = fcn.00425dc0(0);\n            }\n            iVar5 = iVar5 + 0x10;\n        }\n        iVar5 = 0;\n        iStack44 = 0;\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        do {\n            if (param_1[1] <= iStack44) break;\n            if (*(param_1[2] + 4 + iVar5) != 0) {\n                iVar2 = fcn.00425e1b();\n            }\n            iStack44 = iStack44 + 1;\n            iVar5 = iVar5 + 0x10;\n        } while (iVar2 == 0);\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x0042a8d6:\n        fcn.0044408e(0x40);\n    }\n    else {\n        uVar1 = *(**(*((uVar7 >> 0x20) + 4) + 4) + 0x90);\n        iVar5 = *param_1;\n        iVar2 = 0;\n        iStack28 = 0;\n        iStack40 = 0;\n        piStack36 = NULL;\n        uStack16 = 0;\n        iStack12 = 0;\n        do {\n            fcn.0041c16b(param_1, iStack40);\n            fcn.0041d095(4);\n            iStack40 = fcn.0041ce3a(0x44a3d0, uVar1, uStack32 & 0x7fffffff);\n            if (iStack40 == iVar2) {\n                return 7;\n            }\n            iVar2 = (**(iVar5 + 0x20))(iVar5, iStack40, iVar2, &iStack24);\n            if (iVar2 != 0) goto code_r0x0042a6d0;\n        } while (iStack24 != 0);\n        iVar2 = fcn.0041ba44(iStack40, &piStack36);\n        if (iVar2 == 0) {\n            iStack44 = 0;\n            if (0 < param_1[1]) {\n                uStack32 = 0;\n                do {\n                    iVar3 = fcn.0042874c();\n                    if (iVar3 != 0) {\n                        iStack20 = *(**(extraout_ECX_00 + 4) + 0x94);\n                        if (iStack20 != 0) {\n                            if ((iStack28 == 0) && (*(**(extraout_ECX_00 + 4) + 8) == '\\0')) {\n                                iStack28 = 1;\n                            }\n                            iVar2 = fcn.0041d157(uStack16, iStack12);\n                            iVar2 = fcn.0041b9fe(extraout_ECX_01, iVar2 + 1);\n                            iVar3 = fcn.0041d157();\n                            uVar4 = iVar3 + 1;\n                            bVar6 = CARRY4(uStack16, uVar4);\n                            uStack16 = uStack16 + uVar4;\n                            iStack12 = iStack12 + (uVar4 >> 0x1f) + bVar6;\n                            if (iVar2 != 0) goto code_r0x0042a854;\n                        }\n                    }\n                    iStack44 = iStack44 + 1;\n                    uStack32 = uStack32 + 0x10;\n                } while (iStack44 < param_1[1]);\n                if (((iStack28 != 0) && (uVar4 = (**(*piStack36 + 0x30))(piStack36),  (uVar4 & 0x400) == 0)) &&\n                   (iVar2 = (**(*piStack36 + 0x14))(piStack36, 2),  iVar2 != 0)) {\ncode_r0x0042a854:\n                    fcn.0041ba88();\n                    (**(iVar5 + 0x1c))(iVar5, iStack40, 0);\n                    goto code_r0x0042a6d0;\n                }\n            }\n            iStack44 = 0;\n            if (iVar2 == 0) {\n                iStack28 = 0;\n                do {\n                    if (param_1[1] <= iStack44) break;\n                    if (*(param_1[2] + 4 + iStack28) != 0) {\n                        iVar2 = fcn.00425dc0(iStack40);\n                    }\n                    iStack44 = iStack44 + 1;\n                    iStack28 = iStack28 + 0x10;\n                } while (iVar2 == 0);\n            }\n            fcn.0041ba88();\n            if (iVar2 == 0) {\n                iVar2 = (**(iVar5 + 0x1c))(iVar5, iStack40, 1);\n                fcn.0041c16b(param_1, iStack40);\n                iVar5 = 0;\n                if (iVar2 != 0) {\n                    return iVar2;\n                }\n                iStack44 = 0;\n                if (0 < param_1[1]) {\n                    do {\n                        if (*(param_1[2] + 4 + iVar5) != 0) {\n                            fcn.00425e1b();\n                        }\n                        iStack44 = iStack44 + 1;\n                        iVar5 = iVar5 + 0x10;\n                    } while (iStack44 < param_1[1]);\n                }\n                goto code_r0x0042a8d6;\n            }\n        }\ncode_r0x0042a6d0:\n        fcn.0041c16b(param_1, iStack40);\n    }\n    return iVar2;\n}\n",
        "token_count": 1847
    },
    "0042a974": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042a974(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *unaff_EBX;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    iVar1 = *unaff_EBX;\n    iStack16 = 0;\n    if ((*(iVar1 + 0x1d0) != 0) && (unaff_EBX[0x1d] != 0)) {\n        iVar2 = unaff_EBX[0x1d] + -1;\n        iStack20 = 0;\n        if (0 < *(iVar1 + 4)) {\n            iStack24 = 0;\n            do {\n                if (*(iStack24 + 4 + *(iVar1 + 8)) != 0) {\n                    if (arg_8h == 2) {\n                        iVar3 = fcn.00425f04(2, iVar2);\n                        if (iVar3 == 0) goto code_r0x0042a9d8;\n                    }\n                    else {\ncode_r0x0042a9d8:\n                        iVar3 = fcn.00425f04(1, iVar2);\n                    }\n                    if (iStack16 == 0) {\n                        iStack16 = iVar3;\n                    }\n                }\n                iStack20 = iStack20 + 1;\n                iStack24 = iStack24 + 0x10;\n            } while (iStack20 < *(iVar1 + 4));\n        }\n        *(iVar1 + 0x1d0) = *(iVar1 + 0x1d0) + -1;\n        unaff_EBX[0x1d] = 0;\n        if (arg_8h == 2) {\n            *(iVar1 + 0x1d8) = unaff_EBX[0x30];\n            *(iVar1 + 0x1dc) = unaff_EBX[0x31];\n        }\n    }\n    return iStack16;\n}\n",
        "token_count": 463
    },
    "0042b388": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042b388(void)\n\n{\n    int32_t iVar1;\n    uint *unaff_ESI;\n    int32_t arg_8h;\n    \n    iVar1 = 0;\n    arg_8h = unaff_ESI[4];\n    if (*(unaff_ESI + 1) != 0) {\n        do {\n            if (*(arg_8h + 0x24) != 0) {\n                fcn.0042908c(arg_8h);\n            }\n            iVar1 = iVar1 + 1;\n            arg_8h = arg_8h + 0x28;\n        } while (iVar1 < *(unaff_ESI + 1));\n    }\n    if ((*(unaff_ESI + 6) & 1) != 0) {\n        fcn.0041c16b(**unaff_ESI);\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "0042b3c3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042b3c3(int32_t arg_8h, uint8_t *arg_ch, int32_t *arg_10h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint var_54h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint var_35h;\n    uint var_2ch;\n    uint var_28h;\n    uint32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    \n    var_ch = 0;\n    var_14h = 0;\n    iVar2 = *arg_10h;\n    if (*arg_ch < 0x80) {\n        var_8h = *arg_ch;\n        var_10h = 1;\n    }\n    else {\n        var_10h = fcn.0041d746();\n        var_10h = var_10h & 0xff;\n    }\n    var_24h = var_8h;\n    if ((*(arg_10h + 6) & 4) != 0) {\n        var_8h = var_8h - 1;\n    }\n    uVar1 = *(iVar2 + 6);\n    if (var_10h < var_8h) {\n        var_20h = 0;\n        do {\n            if (*(arg_10h + 1) <= var_ch) break;\n            if (arg_ch[var_10h] < 0x80) {\n                uVar3 = 1;\n            }\n            else {\n                uVar3 = fcn.0041d746();\n                uVar3 = uVar3 & 0xff;\n            }\n            var_10h = var_10h + uVar3;\n            if ((arg_8h <= var_24h) && (iVar4 = fcn.0042b018(),  iVar4 != 0)) break;\n            iVar4 = fcn.0042b0d3();\n            var_24h = var_24h + iVar4;\n            var_14h = fcn.004294fc(arg_10h[4] + var_20h);\n            if (var_14h != 0) {\n                iVar2 = *(iVar2 + 8);\n                if (((iVar2 != 0) && (var_ch < uVar1)) && (*(iVar2 + var_ch) != '\\0')) {\n                    var_14h = -var_14h;\n                }\n                if ((*(arg_10h + 6) & 0x20) == 0) {\n                    return var_14h;\n                }\n                if (var_ch != *(arg_10h + 1) - 1) {\n                    return var_14h;\n                }\n                *(arg_10h + 6) = *(arg_10h + 6) & 0xffdf;\n                arg_10h[2] = var_44h;\n                arg_10h[3] = var_40h;\n                return var_14h;\n            }\n            var_ch = var_ch + 1;\n            var_20h = var_20h + 0x28;\n        } while (var_10h < var_8h);\n    }\n    if ((*(arg_10h + 6) & 8) == 0) {\n        if (((*(arg_10h + 6) & 0x10) == 0) && (var_10h < var_8h)) {\n            var_14h = 1;\n        }\n    }\n    else {\n        var_14h = -1;\n    }\n    return var_14h;\n}\n",
        "token_count": 865
    },
    "0042b722": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042b722(uint param_1)\n\n{\n    int32_t *in_EAX;\n    \n    if (*in_EAX == 0) {\n        fcn.0041cf9b(0x15, 0x44a3fc, param_1);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 77
    },
    "0042b930": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.0042b930(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    if (in_EAX[0xd] != -0x420df25d) {\n        fcn.0042b7ac();\n    }\n    iVar2 = *in_EAX;\n    if (*(iVar2 + 0x1e) != '\\0') {\n        in_EAX[0x17] = 7;\n        return 7;\n    }\n    if (in_EAX[0x16] < 1) {\n        if (*(in_EAX + 0x19) != '\\0') {\n            in_EAX[0x17] = 0x11;\n            uVar4 = 1;\n            goto code_r0x0042b9d9;\n        }\n        if (in_EAX[0x16] < 0) {\n            piVar1 = iVar2 + 0x8c;\n            if (*piVar1 == 0) {\n                *(iVar2 + 0xe0) = 0;\n            }\n            *piVar1 = *piVar1 + 1;\n            if (*(in_EAX + 0x69) == '\\0') {\n                *(iVar2 + 0x90) = *(iVar2 + 0x90) + 1;\n            }\n            in_EAX[0x16] = 0;\n        }\n    }\n    piVar1 = iVar2 + 0x94;\n    *piVar1 = *piVar1 + 1;\n    uVar4 = fcn.0042be6c(in_EAX);\n    *piVar1 = *piVar1 + -1;\n    if (uVar4 == 0x65) {\n        iVar3 = fcn.0042b8cf();\n        in_EAX[0x17] = iVar3;\n        if (iVar3 != 0) {\n            uVar4 = 1;\n        }\n    }\n    *(iVar2 + 0x14) = uVar4;\n    iVar3 = fcn.0041c4c4(in_EAX[0x17]);\n    if (iVar3 == 7) {\n        in_EAX[0x17] = 7;\n    }\ncode_r0x0042b9d9:\n    if (((*(in_EAX + 0x6a) != '\\0') && (uVar4 != 100)) && (uVar4 != 0x65)) {\n        uVar4 = in_EAX[0x17];\n        *(iVar2 + 0x14) = uVar4;\n    }\n    return *(iVar2 + 0x18) & uVar4;\n}\n",
        "token_count": 612
    },
    "0042b9fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042b9fc(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack16;\n    int32_t iStack12;\n    \n    iStack12 = 0;\n    iStack16 = 0;\n    iVar1 = fcn.0042b73f();\n    if (iVar1 == 0) {\n        iVar1 = *arg_8h;\n        fcn.0041bc4a(*(iVar1 + 0x44));\n        iVar3 = fcn.0042b930();\n        if (iVar3 == 0x11) {\n            do {\n                if (4 < iStack16) break;\n                iStack12 = fcn.0043eb5c();\n                iVar3 = iStack12;\n                if (iStack12 != 0) goto code_r0x0042ba87;\n                fcn.0042b7ac();\n                *(arg_8h + 0x19) = 0;\n                iVar3 = fcn.0042b930();\n                iStack16 = iStack16 + 1;\n            } while (iVar3 == 0x11);\n            if (iStack12 != 0) {\ncode_r0x0042ba87:\n                if ((*(arg_8h + 0x6a) != '\\0') && (*(iVar1 + 0xd4) != 0)) {\n                    uVar2 = fcn.0042b828(*(iVar1 + 0xd4));\n                    fcn.0041c16b(iVar1, arg_8h[0xe]);\n                    if (*(iVar1 + 0x1e) == '\\0') {\n                        iVar4 = fcn.0041c430(uVar2);\n                        arg_8h[0xe] = iVar4;\n                        arg_8h[0x17] = iStack12;\n                    }\n                    else {\n                        arg_8h[0xe] = 0;\n                        iVar3 = 7;\n                        arg_8h[0x17] = 7;\n                    }\n                }\n            }\n        }\n        uVar2 = fcn.0041c4c4(iVar3);\n        fcn.0041bc58(*(iVar1 + 0x44));\n    }\n    else {\n        uVar2 = fcn.0044a94a(0xe6fd);\n    }\n    return uVar2;\n}\n",
        "token_count": 546
    },
    "0042bb73": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0042bb73(void)\n\n{\n    int32_t in_EAX;\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI != NULL) {\n        if (((unaff_ESI[5] != 0) && (in_EAX < *(unaff_ESI + 0xc))) && (-1 < in_EAX)) {\n            fcn.0041bc4a(*(*unaff_ESI + 0x44));\n            return in_EAX * 0x28 + unaff_ESI[5];\n        }\n        if (*unaff_ESI != 0) {\n            fcn.0041bc4a(*(*unaff_ESI + 0x44));\n            fcn.0041d171(0x19, 0);\n        }\n    }\n    return 0x4442e0;\n}\n",
        "token_count": 188
    },
    "0042bc04": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0042bc04(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t *unaff_EBX;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar1 = *unaff_EBX;\n    if ((in_EAX < *(unaff_EBX + 0xc)) && (-1 < in_EAX)) {\n        fcn.0041bc4a(*(iVar1 + 0x44));\n        var_4h = fcn.00429799(in_EAX * 0x28 + unaff_EBX[4], 1);\n        if (*(iVar1 + 0x1e) != '\\0') {\n            var_4h = 0;\n            *(iVar1 + 0x1e) = 0;\n        }\n        fcn.0041bc58(*(iVar1 + 0x44));\n    }\n    return var_4h;\n}\n",
        "token_count": 209
    },
    "0042be6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nuint __cdecl fcn.0042be6c(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t *puVar6;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_e4h;\n    uint var_ddh;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    \n    iVar1 = arg_8h[1];\n    iVar2 = *arg_8h;\n    iVar3 = arg_8h[2];\n    var_10h = 0;\n    if (arg_8h[0x17] != 7) {\n        arg_8h[0x17] = 0;\n        arg_8h[5] = 0;\n        *(iVar2 + 0x1a0) = 0;\n        if (*(iVar2 + 0xe0) != 0) {\n            var_8h = 9;\n            arg_8h[0x17] = 9;\n            uVar5 = fcn.0044a2ae();\n            fcn.0041c49d(iVar2, 0x44a338, uVar5);\n            goto code_r0x0042c88e;\n        }\n        var_10h = arg_8h[0x16];\n        while (*(iVar2 + 0x1e) == '\\0') {\n            puVar6 = var_10h * 0x14 + iVar1;\n            if ((puVar6[2] & 2) != 0) {\n                iVar4 = *(puVar6 + 8);\n                fcn.0042902d();\n                *(iVar4 * 0x28 + iVar3 + 0x1c) = 4;\n            }\n            if (*puVar6 - 1 < 0x90) {\n                switch(*(*(*puVar6 + 0x42754e) * 4 + 0x4273b3)) {\n                case 0x101448d:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0x1578803:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0x30c458b:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0x31240b7:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0x3184c88:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0x4438810:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0x546b60f:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0x5750000:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0x8758b00:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0xb048db8:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0xc458b03:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0xc8d065f:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0xe468366:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0xf015a88:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0x1075ca3b:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0x108a0247:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0x114e8a05:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0x144dff14:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0x2bd92b00:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0x3b411046:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0x3c8d0148:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0x4060e857:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0x46b60f00:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0x46b60f10:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0x4888ff48:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0x4a0c8dd6:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0x4bb60f1b:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0x4d8b5900:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0x50fc458d:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0x558bf84d:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0x575300fc:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0x578a1788:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0x5d89dc5d:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                default:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0x5f018910:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0x66e87cc8:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0x6810eb02:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0x74db8543:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0x778d0b7d:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0x881046b7:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0x89573c48:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0x8a08880f:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0x8afe788d:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0x8b034f88:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0x8b0a3c8d:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0x8b1a048d:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0x8b2a7400:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0x8be44589:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0x8d0feb08:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0x8dca3bf4:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0x90bd4489:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0xb44589ff:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0xb70f0000:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0xb70ff88b:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0xc1fed1b6:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0xc4830002:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0xc72b0e4e:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0xc95b1046:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0xd05d8901:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0xd149ca2b:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0xe8c68b53:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0xebd87589:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0xf4458b02:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0xfb0350c7:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0xfc458b0a:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0xfec78308:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                case 0xffff62bb:\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\n            }\n            var_10h = var_10h + 1;\n        }\n    }\n    *(iVar2 + 0x1e) = 1;\n    fcn.0041c49d(iVar2, 0x44a3a4);\n    var_8h = 7;\ncode_r0x0042c88e:\n    arg_8h[0x17] = var_8h;\n    fcn.0041cf9b(var_8h, 0x44a744, var_10h, arg_8h[0x32], arg_8h[0xe]);\n    fcn.0042aa8b();\n    if (var_8h == 0xc0a) {\n        *(iVar2 + 0x1e) = 1;\n    }\n    return 1;\n}\n",
        "token_count": 2637
    },
    "004306c3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004306c3(uint32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t *puVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    int32_t var_4h;\n    \n    iVar4 = arg_8h;\n    var_4h = arg_ch;\n    if (0 < arg_10h) {\n        do {\n            puVar2 = *(iVar4 + 0x10);\n            iVar5 = fcn.0044b92d();\n            arg_8h = arg_10h;\n            if (0x3fcU - iVar5 <= arg_10h) {\n                arg_8h = 0x3fcU - iVar5;\n            }\n            if (iVar5 == 0) {\n                puVar6 = fcn.0041bf75(0x400);\n                if (puVar6 == NULL) {\n                    return 0xc0a;\n                }\n                *puVar6 = 0;\n                if (puVar2 == NULL) {\n                    *(iVar4 + 4) = puVar6;\n                }\n                else {\n                    *puVar2 = puVar6;\n                }\n                *(iVar4 + 0x10) = puVar6;\n            }\n            fcn.0044b575(*(iVar4 + 0x10) + 4 + iVar5, var_4h, arg_8h);\n            var_4h = var_4h + arg_8h;\n            arg_10h = arg_10h - arg_8h;\n            puVar1 = iVar4 + 8;\n            uVar3 = *puVar1;\n            *puVar1 = *puVar1 + arg_8h;\n            *(iVar4 + 0xc) = *(iVar4 + 0xc) + (arg_8h >> 0x1f) + CARRY4(uVar3, arg_8h);\n        } while (0 < arg_10h);\n    }\n    return 0;\n}\n",
        "token_count": 474
    },
    "004308e6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004308e6(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int16_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    \n    if ((arg_ch == 0) || (*(arg_8h + 4) == 0)) {\n        uVar2 = 0;\n    }\n    else {\n        do {\n            uVar2 = (**(arg_8h + 4))(arg_8h, arg_ch);\n            if (uVar2 != 0) break;\n            iVar3 = fcn.00430879();\n            if (iVar3 != 0) {\n                return 2;\n            }\n            piVar1 = *(arg_ch + 8);\n            if ((piVar1 != NULL) && (iVar3 = *piVar1,  0 < iVar3)) {\n                puVar5 = piVar1 + 0xc;\n                do {\n                    iVar4 = fcn.004308e6(arg_8h, *puVar5);\n                    if (iVar4 != 0) {\n                        return 2;\n                    }\n                    iVar3 = iVar3 + -1;\n                    puVar5 = puVar5 + 0xe;\n                } while (0 < iVar3);\n            }\n            arg_ch = *(arg_ch + 0x1c);\n        } while (arg_ch != 0);\n        uVar2 = uVar2 & 2;\n    }\n    return uVar2;\n}\n",
        "token_count": 342
    },
    "00430a64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00430a64(uint *arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int16_t *piVar3;\n    int32_t *piVar4;\n    bool bVar5;\n    ushort uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint uVar10;\n    int32_t iVar11;\n    char *unaff_EBX;\n    int16_t *piVar12;\n    int16_t *piVar13;\n    int32_t *piVar14;\n    int32_t iVar15;\n    ulong uVar16;\n    uint var_28h;\n    uint var_24h;\n    int16_t *var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar11 = arg_18h;\n    uVar2 = *arg_8h;\n    *(unaff_EBX + 0x18) = 0xffffffff;\n    var_4h = 0;\n    var_10h = 0;\n    var_20h = NULL;\n    bVar5 = false;\n    *(unaff_EBX + 0x28) = 0;\n    if (arg_18h == 0) {\ncode_r0x00430dc1:\n        if ((arg_10h == 0) && ((unaff_EBX[2] & 0x40U) != 0)) {\n            *(unaff_EBX + 0x28) = 0;\n            *unaff_EBX = '^';\n            return 1;\n        }\ncode_r0x00430e33:\n        uVar10 = 0x44a7a4;\n    }\n    else {\n        do {\n            if (var_4h != 0) goto code_r0x00430e27;\n            piVar3 = *(arg_18h + 4);\n            if (piVar3 != NULL) {\n                var_ch = 0;\n                piVar12 = piVar3 + 4;\n                if (0 < *piVar3) {\ncode_r0x00430ac6:\n                    piVar4 = *(piVar12 + 6);\n                    piVar13 = piVar12;\n                    if (arg_10h == 0) {\ncode_r0x00430b29:\n                        iVar7 = var_10h + 1;\n                        if (var_10h == 0) {\n                            *(unaff_EBX + 0x18) = *(piVar12 + 0xc);\n                            *(unaff_EBX + 0x28) = piVar4;\n                            var_20h = piVar12;\n                        }\n                        var_8h = 0;\n                        var_10h = iVar7;\n                        if (0 < piVar4[2]) {\n                            do {\n                                iVar7 = fcn.0041d27e();\n                                if (iVar7 == 0) {\n                                    var_4h = var_4h + 1;\n                                    *(unaff_EBX + 0x18) = *(piVar12 + 0xc);\n                                    *(unaff_EBX + 0x28) = piVar4;\n                                    if (var_8h == piVar4[1]) {\n                                        uVar6 = 0xffff;\n                                    }\n                                    else {\n                                        uVar6 = var_8h;\n                                    }\n                                    *(unaff_EBX + 0x1c) = uVar6;\n                                    var_20h = piVar12;\n                                    if (var_ch < *piVar3 + -1) {\n                                        if ((*(piVar12 + 0x4d) & 4) != 0) goto code_r0x00430bdf;\n                                        if (*(piVar12 + 0x2c) != 0) {\n                                            iVar7 = *(*(piVar12 + 0x2c) + 4);\n                                            var_18h = 0;\n                                            if (0 < iVar7) goto code_r0x00430bc1;\n                                        }\n                                    }\n                                    break;\n                                }\n                                var_8h = var_8h + 1;\n                            } while (var_8h < piVar4[2]);\n                        }\n                    }\n                    else if (*(piVar12 + 4) == 0) {\n                        if ((*piVar4 != 0) && (iVar7 = fcn.0041d27e(),  iVar7 == 0)) {\n                            if (arg_ch == 0) goto code_r0x00430b29;\n                            fcn.0043e8c8();\n                            iVar7 = fcn.0041d27e();\n                            goto code_r0x00430b21;\n                        }\n                    }\n                    else {\n                        iVar7 = fcn.0041d27e();\ncode_r0x00430b21:\n                        if (iVar7 == 0) goto code_r0x00430b29;\n                    }\n                    goto code_r0x00430be5;\n                }\n            }\ncode_r0x00430bfd:\n            if ((arg_ch == 0) && (arg_10h != 0)) {\n                if (var_4h == 0) {\n                    if (arg_8h[0x69] != 0) {\n                        cVar1 = *(arg_8h + 0x6c);\n                        if ((cVar1 == 'j') || (iVar7 = fcn.0041d27e(),  iVar7 != 0)) {\n                            if ((cVar1 == 'i') || (iVar7 = fcn.0041d27e(),  iVar7 != 0)) goto code_r0x00430d3c;\n                            *(unaff_EBX + 0x18) = 0;\n                            iVar7 = arg_8h[0x69];\n                        }\n                        else {\n                            *(unaff_EBX + 0x18) = 1;\n                            iVar7 = arg_8h[0x69];\n                        }\n                        if (iVar7 != 0) {\n                            var_10h = var_10h + 1;\n                            iVar15 = 0;\n                            if (*(iVar7 + 8) < 1) {\ncode_r0x00430ccb:\n                                iVar8 = fcn.004329a1();\n                                if (iVar8 != 0) {\n                                    iVar15 = -1;\n                                }\n                                if (*(iVar7 + 8) <= iVar15) goto code_r0x00430d3c;\n                            }\n                            else {\n                                do {\n                                    iVar8 = fcn.0041d27e();\n                                    if (iVar8 == 0) {\n                                        if (iVar15 == *(iVar7 + 4)) {\n                                            iVar15 = -1;\n                                        }\n                                        break;\n                                    }\n                                    iVar15 = iVar15 + 1;\n                                } while (iVar15 < *(iVar7 + 8));\n                                if (*(iVar7 + 8) <= iVar15) goto code_r0x00430ccb;\n                            }\n                            var_4h = 1;\n                            if (iVar15 < 0) {\n                                unaff_EBX[1] = 'd';\n                            }\n                            else if (*(unaff_EBX + 0x18) == 0) {\n                                if (iVar15 < 0x20) {\n                                    uVar9 = 1 << (iVar15 & 0x1f);\n                                }\n                                else {\n                                    uVar9 = 0xffffffff;\n                                }\n                                arg_8h[0x6a] = arg_8h[0x6a] | uVar9;\n                            }\n                            else {\n                                if (iVar15 < 0x20) {\n                                    uVar9 = 1 << (iVar15 & 0x1f);\n                                }\n                                else {\n                                    uVar9 = 0xffffffff;\n                                }\n                                arg_8h[0x6b] = arg_8h[0x6b] | uVar9;\n                            }\n                            *(unaff_EBX + 0x1c) = iVar15;\n                            *(unaff_EBX + 0x28) = iVar7;\n                            bVar5 = true;\n                            goto code_r0x00430d36;\n                        }\n                    }\n                    goto code_r0x00430d3c;\n                }\n            }\n            else {\ncode_r0x00430d36:\n                if (var_4h == 0) {\ncode_r0x00430d3c:\n                    if ((var_10h == 1) && (iVar7 = fcn.004329a1(),  iVar7 != 0)) {\n                        *(unaff_EBX + 0x1c) = 0xffff;\n                        var_4h = 1;\n                        unaff_EBX[1] = 'd';\n                    }\n                    else {\n                        piVar4 = *(arg_18h + 8);\n                        if ((piVar4 != NULL) && ((arg_10h == 0 && (var_8h = 0,  0 < *piVar4)))) {\n                            piVar14 = piVar4[3] + 4;\n                            do {\n                                iVar7 = *piVar14;\n                                if ((iVar7 != 0) && (iVar15 = fcn.0041d27e(),  iVar15 == 0)) {\n                                    if ((*(arg_18h + 0x14) == '\\0') && ((*(*(piVar4[3] + var_8h * 0x14) + 2) & 2) != 0))\n                                    {\n                                        fcn.0041d1e3(0x44a784, iVar7);\n                                        return 2;\n                                    }\n                                    fcn.0043095a(arg_8h, piVar4, unaff_EBX);\n                                    goto code_r0x00430f01;\n                                }\n                                var_8h = var_8h + 1;\n                                piVar14 = piVar14 + 5;\n                            } while (var_8h < *piVar4);\n                            if (var_4h != 0) goto code_r0x00430db1;\n                        }\n                        arg_18h = *(arg_18h + 0x20);\n                    }\n                }\n            }\ncode_r0x00430db1:\n        } while (arg_18h != 0);\n        if (var_4h == 0) goto code_r0x00430dc1;\ncode_r0x00430e27:\n        if (var_4h == 1) goto code_r0x00430e95;\n        if (var_4h == 0) goto code_r0x00430e33;\n        uVar10 = 0x44a7b4;\n    }\n    if (arg_ch == 0) {\n        if (arg_10h == 0) {\n            fcn.0041d1e3(0x44a7e8, uVar10, arg_14h);\n        }\n        else {\n            fcn.0041d1e3(0x44a7dc, uVar10, arg_10h);\n        }\n    }\n    else {\n        fcn.0041d1e3(0x44a7cc, uVar10, arg_ch, arg_10h);\n    }\n    *(arg_8h + 0x12) = 1;\n    *(iVar11 + 0x10) = *(iVar11 + 0x10) + 1;\ncode_r0x00430e95:\n    if ((-1 < *(unaff_EBX + 0x1c)) && (var_20h != NULL)) {\n        uVar16 = fcn.0044b90d();\n        *(var_20h + 0x14) = *(var_20h + 0x14) | uVar16;\n        *(var_20h + 0x16) = *(var_20h + 0x16) | uVar16 >> 0x20;\n    }\n    fcn.00432063(uVar2, *(unaff_EBX + 8));\n    *(unaff_EBX + 8) = 0;\n    fcn.00432063(uVar2, *(unaff_EBX + 0xc));\n    *(unaff_EBX + 0xc) = 0;\n    *unaff_EBX = (!bVar5 - 1U & 0xa4) + 0x98;\n    if (var_4h != 1) {\n        return 2;\n    }\ncode_r0x00430f01:\n    for (; *(iVar11 + 0xc) = *(iVar11 + 0xc) + 1,  iVar11 != arg_18h; iVar11 = *(iVar11 + 0x20)) {\n    }\n    return 1;\n    while (var_18h = var_18h + 1,  var_18h < iVar7) {\ncode_r0x00430bc1:\n        iVar15 = fcn.0041d27e();\n        if (iVar15 == 0) goto code_r0x00430bdf;\n    }\ncode_r0x00430be5:\n    var_ch = var_ch + 1;\n    piVar12 = piVar13 + 0x1c;\n    if (*piVar3 <= var_ch) goto code_r0x00430bfd;\n    goto code_r0x00430ac6;\ncode_r0x00430bdf:\n    var_ch = var_ch + 1;\n    piVar13 = piVar12 + 0x1c;\n    goto code_r0x00430be5;\n}\n",
        "token_count": 3024
    },
    "00430f7f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00430f7f(int32_t arg_8h, char *arg_ch)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    int32_t **arg_18h;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    uint uVar6;\n    bool bVar7;\n    ulong uVar8;\n    uint arg_10h;\n    uint uVar9;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_18h = *(arg_8h + 0xc);\n    uVar2 = *(arg_ch + 2);\n    arg_8h_00 = *arg_18h;\n    if ((uVar2 & 4) != 0) {\n        return 1;\n    }\n    cVar1 = *arg_ch;\n    *(arg_ch + 2) = uVar2 | 4;\n    if (cVar1 != '\\x14') {\n        if (cVar1 == '\\x1a') {\n            uVar9 = *(arg_ch + 4);\n            arg_10h = 0;\n            uVar6 = 0;\ncode_r0x00431110:\n            uVar6 = fcn.00430a64(arg_8h_00, uVar6, arg_10h, uVar9, arg_18h);\n            return uVar6;\n        }\n        if ((cVar1 != 'H') && (cVar1 != 't')) {\n            if (cVar1 == 'v') {\n                pcVar5 = *(arg_ch + 0xc);\n                iVar4 = *(arg_ch + 8);\n                if (*pcVar5 == '\\x1a') {\n                    uVar6 = 0;\n                }\n                else {\n                    uVar6 = *(iVar4 + 4);\n                    iVar4 = *(pcVar5 + 8);\n                    pcVar5 = *(pcVar5 + 0xc);\n                }\n                uVar9 = *(pcVar5 + 4);\n                arg_10h = *(iVar4 + 4);\n                goto code_r0x00431110;\n            }\n            if ((cVar1 == -0x69) || (cVar1 == -0x65)) {\n                if (*(arg_ch + 0x10) == NULL) {\n                    var_ch = 0;\n                }\n                else {\n                    var_ch = **(arg_ch + 0x10);\n                }\n                uVar6 = *(arg_ch + 4);\n                bVar7 = false;\n                var_10h = var_10h & 0xffffff00 | *(*(*(*arg_8h_00 + 8) + 0xc) + 0x49);\n                uVar8 = fcn.0041d157();\n                uVar9 = uVar8;\n                iVar4 = fcn.004395a9(uVar8 >> 0x20, uVar6, var_ch, var_10h, 0);\n                if (iVar4 == 0) {\n                    iVar4 = fcn.004395a9(*arg_8h_00, uVar6, 0xffffffff, var_10h, 0);\n                    if (iVar4 == 0) {\n                        fcn.0041d1e3(0x44a814, uVar9, uVar6);\n                        arg_18h[4] = arg_18h[4] + 1;\n                        goto code_r0x0043107b;\n                    }\n                    fcn.0041d1e3(0x44a82c, uVar9, uVar6);\n                    arg_18h[4] = arg_18h[4] + 1;\n                }\n                else {\n                    bVar7 = *(iVar4 + 0xc) == 0;\n                    if (!bVar7) goto code_r0x0043107b;\n                    if (*(arg_18h + 5) == '\\0') {\n                        fcn.0041d1e3(0x44a7f0, uVar9, uVar6);\n                        arg_18h[4] = arg_18h[4] + 1;\n                        bVar7 = false;\n                        goto code_r0x0043107b;\n                    }\n                }\n                if (bVar7) {\n                    *arg_ch = -0x67;\n                    *(arg_18h + 0x15) = 1;\n                    *(arg_18h + 5) = 0;\n                }\ncode_r0x0043107b:\n                fcn.00430849(arg_8h);\n                if (bVar7) {\n                    *(arg_18h + 5) = 1;\n                }\n                return 1;\n            }\n            goto code_r0x0043113f;\n        }\n    }\n    if (((uVar2 & 0x800) != 0) && (piVar3 = arg_18h[3],  fcn.004308e6(arg_8h, *(arg_ch + 0x10)),  piVar3 != arg_18h[3]))\n    {\n        *(arg_ch + 2) = *(arg_ch + 2) | 0x20;\n    }\ncode_r0x0043113f:\n    uVar6 = 0;\n    if ((arg_8h_00[0x10] != 0) || (*(*arg_8h_00 + 0x1e) != '\\0')) {\n        uVar6 = 2;\n    }\n    return uVar6;\n}\n",
        "token_count": 1252
    },
    "0043123d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0043123d(int32_t *arg_8h, int32_t **arg_ch)\n\n{\n    uint16_t uVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    bool bVar4;\n    int32_t iVar5;\n    int32_t **ppiVar6;\n    uint uVar7;\n    char *pcVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    char **ppcVar11;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    piVar2 = arg_ch[6];\n    bVar4 = true;\n    if (piVar2 != NULL) {\n        iVar9 = *arg_8h;\n        if (*(iVar9 + 0x50) < *piVar2) {\n            fcn.0041d1e3(0x44a894);\n            return 1;\n        }\n        iVar10 = 0;\n        if (0 < *piVar2) {\n            iVar5 = 0;\n            do {\n                *(piVar2[3] + 0xd + iVar5) = 0;\n                iVar10 = iVar10 + 1;\n                iVar5 = iVar5 + 0x14;\n            } while (iVar10 < *piVar2);\n        }\n        arg_ch[8] = NULL;\n        while (ppiVar6 = arg_ch + 7,  *ppiVar6 != NULL) {\n            (*ppiVar6)[8] = arg_ch;\n            arg_ch = *ppiVar6;\n        }\n        do {\n            if (!bVar4) break;\n            piVar3 = *arg_ch;\n            ppcVar11 = piVar2[3];\n            bVar4 = false;\n            var_10h = 0;\n            if (0 < *piVar2) {\n                do {\n                    var_4h = -1;\n                    if (*(ppcVar11 + 0xd) == '\\0') {\n                        pcVar8 = *ppcVar11;\n                        iVar10 = fcn.004328bb(pcVar8, &var_4h);\n                        if (iVar10 == 0) {\n                            if (*pcVar8 == '\\x1a') {\n                                var_4h = fcn.00431155();\n                            }\n                            else {\n                                var_4h = 0;\n                            }\n                            if (var_4h == 0) {\n                                uVar7 = fcn.0043238b(iVar9, pcVar8, 0);\n                                if (*(iVar9 + 0x1e) == '\\0') {\n                                    var_4h = fcn.00431198(uVar7);\n                                }\n                                fcn.00432063(iVar9, uVar7);\n                            }\n                        }\n                        else if ((var_4h < 1) || (*piVar3 < var_4h)) {\n                            fcn.0041d1e3(0x44a85c, var_10h + 1, 0x44a8b8, *piVar3);\n                            return 1;\n                        }\n                        if (var_4h < 1) {\n                            bVar4 = true;\n                        }\n                        else {\n                            uVar1 = *(pcVar8 + 2);\n                            uVar7 = *(pcVar8 + 0x14);\n                            fcn.00432063(iVar9, pcVar8);\n                            pcVar8 = fcn.00431d84(iVar9, 0x81);\n                            *ppcVar11 = pcVar8;\n                            if (pcVar8 == NULL) {\n                                return 1;\n                            }\n                            *(pcVar8 + 0x14) = uVar7;\n                            *(pcVar8 + 2) = *(pcVar8 + 2) | uVar1 & 0x100 | 0x400;\n                            *(pcVar8 + 4) = var_4h;\n                            *(ppcVar11 + 0xe) = var_4h;\n                            *(ppcVar11 + 0xd) = 1;\n                        }\n                    }\n                    var_10h = var_10h + 1;\n                    ppcVar11 = ppcVar11 + 5;\n                } while (var_10h < *piVar2);\n            }\n            arg_ch = arg_ch[8];\n        } while (arg_ch != NULL);\n        iVar9 = 0;\n        if (0 < *piVar2) {\n            pcVar8 = piVar2[3] + 0xd;\n            do {\n                iVar9 = iVar9 + 1;\n                if (*pcVar8 == '\\0') {\n                    fcn.0041d1e3(0x44a8c0, iVar9);\n                    return 1;\n                }\n                pcVar8 = pcVar8 + 0x14;\n            } while (iVar9 < *piVar2);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1123
    },
    "00431441": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00431441(int32_t *arg_8h, int32_t **arg_ch, uint arg_10h)\n\n{\n    int32_t *arg_ch_00;\n    int32_t *in_EAX;\n    uint *puVar1;\n    int32_t var_4h;\n    \n    if ((in_EAX != NULL) && (*(*arg_8h + 0x1e) == '\\0')) {\n        if (*(*arg_8h + 0x50) < *in_EAX) {\n            fcn.0041d1e3(0x44a900, arg_10h);\n            return 1;\n        }\n        var_4h = 0;\n        arg_ch_00 = *arg_ch;\n        puVar1 = in_EAX[3];\n        if (0 < *in_EAX) {\n            do {\n                if (*(puVar1 + 0xe) != 0) {\n                    if (*arg_ch_00 < *(puVar1 + 0xe)) {\n                        fcn.00431223(arg_10h, var_4h + 1, *arg_ch_00);\n                        return 1;\n                    }\n                    fcn.0043095a(arg_8h, arg_ch_00, *puVar1);\n                }\n                var_4h = var_4h + 1;\n                puVar1 = puVar1 + 5;\n            } while (var_4h < *in_EAX);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 333
    },
    "004314d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004314d4(uint *arg_8h, uint *arg_ch, int32_t *arg_10h, uint arg_14h)\n\n{\n    uint arg_8h_00;\n    char *arg_8h_01;\n    uint uVar1;\n    int32_t iVar2;\n    char **ppcVar3;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_10h == NULL) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = **arg_ch;\n        var_4h = 0;\n        ppcVar3 = arg_10h[3];\n        arg_8h_00 = *arg_8h;\n        if (0 < *arg_10h) {\n            do {\n                arg_8h_01 = *ppcVar3;\n                if (*arg_8h_01 == '\\x1a') {\n                    var_8h = fcn.00431155();\n                }\n                else {\n                    var_8h = 0;\n                }\n                if (var_8h < 1) {\n                    iVar2 = fcn.004328bb(arg_8h_01, &var_8h);\n                    if (iVar2 != 0) {\n                        if (var_8h < 1) {\n                            fcn.00431223(arg_14h, var_4h + 1, uVar1);\n                            return 1;\n                        }\n                        goto code_r0x00431528;\n                    }\n                    *(ppcVar3 + 0xe) = 0;\n                    iVar2 = fcn.00431867();\n                    if (iVar2 != 0) {\n                        return 1;\n                    }\n                }\n                else {\ncode_r0x00431528:\n                    *(ppcVar3 + 0xe) = var_8h;\n                }\n                var_4h = var_4h + 1;\n                ppcVar3 = ppcVar3 + 5;\n            } while (var_4h < *arg_10h);\n        }\n        uVar1 = fcn.00431441(arg_8h_00, arg_ch, arg_14h);\n    }\n    return uVar1;\n}\n",
        "token_count": 515
    },
    "0043159e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043159e(int32_t arg_8h, int32_t **arg_ch)\n\n{\n    int32_t *arg_8h_00;\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    int32_t **arg_ch_00;\n    int32_t iStack92;\n    int32_t iStack84;\n    uint uStack60;\n    uint uStack56;\n    int32_t *piStack52;\n    uint uStack48;\n    int32_t *piStack44;\n    int32_t *piStack40;\n    int32_t *piStack36;\n    uchar uStack24;\n    char cStack23;\n    uint uStack12;\n    \n    if ((*(arg_ch + 6) & 2) == 0) {\n        arg_8h_00 = *(arg_8h + 8);\n        uVar4 = *(arg_8h + 0xc);\n        iVar7 = *arg_8h_00;\n        if ((*(arg_ch + 6) & 0x10) == 0) {\n            fcn.00440d0c(arg_8h_00, arg_ch, uVar4);\n            if ((arg_8h_00[0x10] == 0) && (*(iVar7 + 0x1e) == '\\0')) goto code_r0x00431842;\n        }\n        else {\n            piVar1 = arg_ch[7];\n            arg_ch_00 = arg_ch;\n            do {\n                *(arg_ch_00 + 6) = *(arg_ch_00 + 6) | 2;\n                fcn.0044b531(&piStack44, 0, 0x24);\n                piStack44 = arg_8h_00;\n                iVar5 = fcn.00431867();\n                if ((iVar5 != 0) || (iVar5 = fcn.00431867(),  iVar5 != 0)) goto code_r0x004315f1;\n                uStack24 = 1;\n                piStack40 = arg_ch_00[2];\n                piVar2 = *arg_ch_00;\n                iStack92 = 0;\n                uStack12 = uVar4;\n                if (0 < *piVar2) {\n                    do {\n                        iVar5 = fcn.00431867();\n                        if (iVar5 != 0) goto code_r0x004315f1;\n                        iStack92 = iStack92 + 1;\n                    } while (iStack92 < *piVar2);\n                }\n                iStack92 = 0;\n                if (0 < *arg_ch_00[2]) {\n                    iStack84 = 0;\n                    do {\n                        piVar2 = arg_ch_00[2];\n                        if (*(piVar2 + iStack84 + 0x18) != 0) {\n                            iVar5 = *(piVar2 + iStack84 + 0xc);\n                            iVar3 = arg_8h_00[0x80];\n                            if (iVar5 != 0) {\n                                arg_8h_00[0x80] = iVar5;\n                            }\n                            uStack60 = 0x427f72;\n                            uStack56 = 0x428591;\n                            piStack52 = arg_8h_00;\n                            uStack48 = uVar4;\n                            fcn.004308e6(&uStack60, *(piVar2 + iStack84 + 0x18));\n                            arg_8h_00[0x80] = iVar3;\n                            if ((arg_8h_00[0x10] != 0) || (*(iVar7 + 0x1e) != '\\0')) goto code_r0x004315f1;\n                        }\n                        iStack92 = iStack92 + 1;\n                        iStack84 = iStack84 + 0x38;\n                    } while (iStack92 < *arg_ch_00[2]);\n                }\n                piVar2 = arg_ch_00[4];\n                if ((piVar2 == NULL) && (cStack23 == '\\0')) {\n                    uStack24 = 0;\n                }\n                else {\n                    *(arg_ch_00 + 6) = *(arg_ch_00 + 6) | 4;\n                }\n                if ((arg_ch_00[5] != NULL) && (piVar2 == NULL)) {\n                    uVar4 = 0x44a920;\ncode_r0x00431851:\n                    fcn.0041d1e3(uVar4);\n                    goto code_r0x004315f1;\n                }\n                piStack36 = *arg_ch_00;\n                iVar5 = fcn.00431867();\n                if ((iVar5 != 0) || (iVar5 = fcn.00431867(),  iVar5 != 0)) goto code_r0x004315f1;\n                uStack12 = 0;\n                uStack24 = 1;\n                if (((piVar1 == NULL) &&\n                    (iVar5 = fcn.004314d4(&piStack44, arg_ch_00, arg_ch_00[6], 0x44a8b8),  iVar5 != 0)) ||\n                   (*(iVar7 + 0x1e) != '\\0')) goto code_r0x004315f1;\n                if (piVar2 != NULL) {\n                    iVar5 = fcn.004314d4(&piStack44, arg_ch_00, piVar2, 0x44a94c);\n                    if ((iVar5 != 0) || (*(iVar7 + 0x1e) != '\\0')) goto code_r0x004315f1;\n                    piVar6 = piVar2[3];\n                    iVar5 = 0;\n                    if (0 < *piVar2) {\n                        do {\n                            if ((*(*piVar6 + 2) & 2) != 0) {\n                                uVar4 = 0x44a954;\n                                goto code_r0x00431851;\n                            }\n                            iVar5 = iVar5 + 1;\n                            piVar6 = piVar6 + 5;\n                        } while (iVar5 < *piVar2);\n                    }\n                }\n                arg_ch_00 = arg_ch_00[7];\n            } while (arg_ch_00 != NULL);\n            if ((piVar1 == NULL) || (iVar7 = fcn.0043123d(arg_8h_00, arg_ch),  iVar7 == 0)) goto code_r0x00431842;\n        }\ncode_r0x004315f1:\n        uVar4 = 2;\n    }\n    else {\ncode_r0x00431842:\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 1502
    },
    "00431867": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nbool fcn.00431867(void)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    bool bVar5;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (unaff_EDI == 0) {\n        bVar5 = false;\n    }\n    else {\n        iVar3 = *unaff_ESI;\n        iVar4 = fcn.00431b97(*(iVar3 + 0x218) + *(unaff_EDI + 0x2c));\n        if (iVar4 == 0) {\n            piVar1 = iVar3 + 0x218;\n            *piVar1 = *piVar1 + *(unaff_EDI + 0x2c);\n            var_8h = *unaff_ESI;\n            cVar2 = *(unaff_ESI + 0x15);\n            *(unaff_ESI + 0x15) = 0;\n            var_10h = 0x427f72;\n            var_ch = 0x428591;\n            fcn.004307d4(&var_10h);\n            *(*unaff_ESI + 0x218) = *(*unaff_ESI + 0x218) - *(unaff_EDI + 0x2c);\n            if ((0 < unaff_ESI[4]) || (0 < *(var_8h + 0x40))) {\n                *(unaff_EDI + 2) = *(unaff_EDI + 2) | 8;\n            }\n            if (*(unaff_ESI + 0x15) == '\\0') {\n                if (cVar2 != '\\0') {\n                    *(unaff_ESI + 0x15) = 1;\n                }\n            }\n            else {\n                *(unaff_EDI + 2) = *(unaff_EDI + 2) | 2;\n            }\n            bVar5 = (*(unaff_EDI + 2) & 8) == 8;\n        }\n        else {\n            bVar5 = true;\n        }\n    }\n    return bVar5;\n}\n",
        "token_count": 518
    },
    "00431cbb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00431cbb(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    char **in_EAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    char *pcVar4;\n    uint var_4h;\n    \n    pcVar4 = NULL;\n    var_4h = 0;\n    if (in_EAX != NULL) {\n        if ((arg_ch == 0x81) && (*in_EAX != NULL)) {\n            iVar2 = fcn.0041d442(&var_4h);\n            if (iVar2 != 0) goto code_r0x00431cef;\n        }\n        pcVar4 = in_EAX[1] + 1;\n    }\ncode_r0x00431cef:\n    puVar3 = fcn.0041c2f7(pcVar4 + 0x30);\n    if (puVar3 != NULL) {\n        *(puVar3 + 0x1e) = 0xffff;\n        *puVar3 = arg_ch;\n        if (in_EAX != NULL) {\n            if (pcVar4 == NULL) {\n                *(puVar3 + 2) = *(puVar3 + 2) | 0x400;\n                *(puVar3 + 4) = var_4h;\n            }\n            else {\n                *(puVar3 + 4) = puVar3 + 0x30;\n                fcn.0044b575(puVar3 + 0x30, *in_EAX, in_EAX[1]);\n                in_EAX[1][*(puVar3 + 4)] = '\\0';\n                if (((arg_10h != 0) && (2 < pcVar4)) &&\n                   ((cVar1 = **in_EAX,  cVar1 == '\\'' || (((cVar1 == '\\\"' || (cVar1 == '[')) || (cVar1 == '`')))))) {\n                    fcn.0041d223();\n                    if (cVar1 == '\\\"') {\n                        *(puVar3 + 2) = *(puVar3 + 2) | 0x40;\n                    }\n                }\n            }\n        }\n        *(puVar3 + 0x2c) = 1;\n    }\n    return puVar3;\n}\n",
        "token_count": 512
    },
    "00431e41": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00431e41(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    \n    if ((arg_ch != 0) && (in_EAX != 0)) {\n        fcn.00431cbb(arg_8h, 0x45, 0);\n        fcn.00431db3(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 92
    },
    "00431ebf": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00431ebf(void)\n\n{\n    int32_t *piVar1;\n    char *pcVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t unaff_EBX;\n    ulong uVar5;\n    uint arg_ch;\n    uint var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = *in_EAX;\n    if (unaff_EBX == 0) {\n        return;\n    }\n    pcVar2 = *(unaff_EBX + 4);\n    if (pcVar2[1] == '\\0') {\n        piVar1 = in_EAX + 0x70;\n        *piVar1 = *piVar1 + 1;\n        *(unaff_EBX + 0x1c) = *piVar1;\n        goto code_r0x00432041;\n    }\n    if (*pcVar2 != '?') {\n        uVar5 = fcn.0041d157();\n        var_ch = uVar5;\n        var_4h = 0;\n        if (0 < in_EAX[0x71]) {\n            do {\n                var_ch = uVar5;\n                iVar3 = *(in_EAX[0x73] + var_4h * 4);\n                iVar4 = fcn.0044b5ab(*(iVar3 + 4), uVar5 >> 0x20, var_ch);\n                uVar5 = CONCAT44(pcVar2, var_ch);\n                if ((iVar4 == 0) && (*(var_ch + *(iVar3 + 4)) == '\\0')) {\n                    *(unaff_EBX + 0x1c) = *(iVar3 + 0x1c);\n                    break;\n                }\n                var_4h = var_4h + 1;\n            } while (var_4h < in_EAX[0x71]);\n        }\n        if (in_EAX[0x71] <= var_4h) {\n            piVar1 = in_EAX + 0x70;\n            *piVar1 = *piVar1 + 1;\n            *(unaff_EBX + 0x1c) = *piVar1;\n            iVar3 = in_EAX[0x72];\n            if (iVar3 + -1 <= in_EAX[0x71]) {\n                in_EAX[0x72] = iVar3 * 2 + 10;\n                iVar3 = fcn.0041c409(var_8h, in_EAX[0x73]);\n                in_EAX[0x73] = iVar3;\n            }\n            if (*(var_8h + 0x1e) == '\\0') {\n                *(in_EAX[0x73] + in_EAX[0x71] * 4) = unaff_EBX;\n                in_EAX[0x71] = in_EAX[0x71] + 1;\n            }\n        }\n        goto code_r0x00432041;\n    }\n    arg_ch = 1;\n    fcn.0041d157();\n    iVar3 = fcn.0041d301(&var_10h, arg_ch);\n    *(unaff_EBX + 0x1c) = var_10h;\n    if (((iVar3 == 0) && (-1 < var_ch)) && ((0 < var_ch || (var_10h != 0)))) {\n        iVar3 = *(var_8h + 0x6c) >> 0x1f;\n        if ((iVar3 <= var_ch) && ((iVar3 < var_ch || (*(var_8h + 0x6c) < var_10h)))) goto code_r0x00431f40;\n    }\n    else {\ncode_r0x00431f40:\n        fcn.0041d1e3(0x44a9c0, *(var_8h + 0x6c));\n    }\n    iVar3 = in_EAX[0x70] >> 0x1f;\n    if ((iVar3 <= var_ch) && ((iVar3 < var_ch || (in_EAX[0x70] < var_10h)))) {\n        in_EAX[0x70] = var_10h;\n    }\ncode_r0x00432041:\n    if ((in_EAX[0x10] == 0) && (*(var_8h + 0x6c) < in_EAX[0x70])) {\n        fcn.0041d1e3(0x44a9ec);\n    }\n    return;\n}\n",
        "token_count": 1029
    },
    "0043218a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0043218a(uint arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t *arg_14h)\n\n{\n    uint32_t arg_ch_00;\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    ulong uVar6;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar5 = 0;\n    if (arg_ch != 0) {\n        arg_ch_00 = arg_10h & 1;\n        var_14h._0_2_ = 0;\n        if (arg_14h == NULL) {\n            uVar2 = fcn.00432143(arg_ch, arg_10h);\n            iVar5 = fcn.0041c31d(uVar2);\n        }\n        else {\n            iVar5 = *arg_14h;\n            var_14h._0_2_ = 0x4000;\n        }\n        if (iVar5 != 0) {\n            var_4h = iVar5;\n            if (arg_ch_00 == 0) {\n                uVar4 = 0x30;\n            }\n            else {\n                uVar4 = fcn.004320e6();\n            }\n            uVar3 = *(arg_ch + 2);\n            if (((*(arg_ch + 2) & 0x400) == 0) && (*(arg_ch + 4) != 0)) {\n                uVar6 = fcn.0041d157();\n                uVar3 = uVar6 >> 0x20;\n                var_10h = uVar6 + 1;\n            }\n            else {\n                var_10h = 0;\n            }\n            if (arg_ch_00 == 0) {\n                if ((uVar3 & 0x2000) == 0) {\n                    var_ch = (-((uVar3 & 0x1000) != 0x1000) & 0x18) + 0x18;\n                }\n                else {\n                    var_ch = 8;\n                }\n                fcn.0044b575(var_4h, arg_ch, var_ch);\n                fcn.0044b531(var_ch + var_4h, 0, 0x30 - var_ch);\n            }\n            else {\n                fcn.0044b575(var_4h, arg_ch, uVar4 & 0xfff);\n            }\n            *(iVar5 + 2) = uVar4 & 0x3000 | *(iVar5 + 2) & 0x8fff | var_14h;\n            if (var_10h != 0) {\n                iVar1 = var_4h + (uVar4 & 0xfff);\n                *(iVar5 + 4) = iVar1;\n                fcn.0044b575(iVar1, *(arg_ch + 4), var_10h);\n            }\n            if (((*(iVar5 + 2) | *(arg_ch + 2)) & 0x2000) == 0) {\n                if ((*(arg_ch + 2) & 0x800) == 0) {\n                    uVar2 = fcn.004323a2(arg_8h, arg_ch_00);\n                }\n                else {\n                    uVar2 = fcn.00432619(arg_8h, *(arg_ch + 0x10), arg_ch_00);\n                }\n                *(iVar5 + 0x10) = uVar2;\n            }\n            if ((*(iVar5 + 2) & 0x3000) == 0) {\n                *(iVar5 + 0x22) = 0;\n                if ((*(arg_ch + 2) & 0x2000) == 0) {\n                    uVar2 = fcn.0043218a(arg_8h, *(arg_ch + 8), 0, NULL);\n                    *(iVar5 + 8) = uVar2;\n                    uVar2 = fcn.0043218a(arg_8h, *(arg_ch + 0xc), 0, NULL);\n                    *(iVar5 + 0xc) = uVar2;\n                }\n            }\n            else {\n                iVar1 = fcn.00432107(arg_10h);\n                var_4h = var_4h + iVar1;\n                if ((*(iVar5 + 2) & 0x1000) != 0) {\n                    uVar2 = fcn.0043218a(arg_8h, *(arg_ch + 8), 1, &var_4h);\n                    *(iVar5 + 8) = uVar2;\n                    uVar2 = fcn.0043218a(arg_8h, *(arg_ch + 0xc), 1, &var_4h);\n                    *(iVar5 + 0xc) = uVar2;\n                }\n                if (arg_14h != NULL) {\n                    *arg_14h = var_4h;\n                }\n            }\n        }\n    }\n    return iVar5;\n}\n",
        "token_count": 1162
    },
    "004323a2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.004323a2(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    uint uVar4;\n    int32_t *unaff_EBX;\n    uint *puVar5;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (unaff_EBX != NULL) {\n        piVar2 = fcn.0041c31d(0x10);\n        if (piVar2 != NULL) {\n            piVar2[2] = 0;\n            iVar1 = *unaff_EBX;\n            piVar2[1] = iVar1;\n            *piVar2 = iVar1;\n            puVar3 = fcn.0041c31d(*unaff_EBX * 0x14);\n            piVar2[3] = puVar3;\n            if (puVar3 == NULL) {\n                fcn.0041c16b(arg_8h, piVar2);\n                piVar2 = NULL;\n            }\n            else {\n                var_4h = 0;\n                puVar5 = unaff_EBX[3];\n                if (0 < *unaff_EBX) {\n                    do {\n                        uVar4 = fcn.0043218a(arg_8h, *puVar5, arg_ch, 0);\n                        *puVar3 = uVar4;\n                        uVar4 = fcn.0041c430(puVar5[1]);\n                        puVar3[1] = uVar4;\n                        uVar4 = fcn.0041c430(puVar5[2]);\n                        puVar3[2] = uVar4;\n                        *(puVar3 + 3) = *(puVar5 + 3);\n                        *(puVar3 + 0xd) = 0;\n                        *(puVar3 + 0xe) = *(puVar5 + 0xe);\n                        var_4h = var_4h + 1;\n                        *(puVar3 + 4) = *(puVar5 + 4);\n                        puVar3 = puVar3 + 5;\n                        puVar5 = puVar5 + 5;\n                    } while (var_4h < *unaff_EBX);\n                }\n            }\n        }\n        return piVar2;\n    }\n    return NULL;\n}\n",
        "token_count": 522
    },
    "00432465": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.00432465(uint arg_8h, int16_t *arg_ch, uint arg_10h)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *puVar5;\n    uchar *puVar6;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (arg_ch == NULL) {\n        piVar2 = NULL;\n    }\n    else {\n        if (*arg_ch < 1) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = (*arg_ch + -1) * 0x38;\n        }\n        piVar2 = fcn.0041c31d(iVar3 + 0x40);\n        if (piVar2 != NULL) {\n            iVar1 = *arg_ch;\n            var_8h = 0;\n            piVar2[1] = iVar1;\n            *piVar2 = iVar1;\n            if (0 < *arg_ch) {\n                puVar6 = arg_ch + 0x1d;\n                puVar5 = piVar2 + 6;\n                do {\n                    uVar4 = fcn.0041c430(*(puVar6 + -0x15));\n                    puVar5[-1] = uVar4;\n                    uVar4 = fcn.0041c430(*((arg_ch - piVar2) + puVar5));\n                    *puVar5 = uVar4;\n                    uVar4 = fcn.0041c430(*(puVar6 + -0xd));\n                    puVar5[1] = uVar4;\n                    *(puVar5 + 0x11) = *puVar6;\n                    puVar5[5] = *(puVar6 + 3);\n                    *(puVar5 + 4) = puVar6[-1];\n                    uVar4 = fcn.0041c430(*(puVar6 + 0x1b));\n                    puVar5[0xb] = uVar4;\n                    *(puVar5 + 0x12) = puVar6[1];\n                    puVar5[0xc] = *(puVar6 + 0x1f);\n                    iVar3 = *(puVar6 + -9);\n                    puVar5[2] = iVar3;\n                    if (iVar3 != 0) {\n                        *(iVar3 + 0x20) = *(iVar3 + 0x20) + 1;\n                    }\n                    uVar4 = fcn.00432619(arg_8h, *(puVar6 + -5), arg_10h);\n                    puVar5[3] = uVar4;\n                    uVar4 = fcn.0043218a(arg_8h, *(puVar6 + 7), arg_10h, 0);\n                    puVar5[6] = uVar4;\n                    uVar4 = fcn.0043258e(arg_8h);\n                    puVar5[7] = uVar4;\n                    puVar5[9] = *(puVar6 + 0x13);\n                    puVar5[10] = *(puVar6 + 0x17);\n                    var_8h = var_8h + 1;\n                    puVar5 = puVar5 + 0xe;\n                    puVar6 = puVar6 + 0x38;\n                } while (var_8h < *arg_ch);\n            }\n        }\n    }\n    return piVar2;\n}\n",
        "token_count": 771
    },
    "0043258e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0043258e(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *unaff_EBX;\n    uint *puVar4;\n    uint *puVar5;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (unaff_EBX == NULL) {\n        return NULL;\n    }\n    piVar1 = fcn.0041c31d(0xc);\n    if (piVar1 != NULL) {\n        iVar2 = unaff_EBX[1];\n        piVar1[2] = iVar2;\n        piVar1[1] = iVar2;\n        iVar2 = fcn.0041c31d(unaff_EBX[1] << 3);\n        *piVar1 = iVar2;\n        if (iVar2 != 0) {\n            var_4h = 0;\n            if (unaff_EBX[1] < 1) {\n                return piVar1;\n            }\n            do {\n                puVar4 = *unaff_EBX + var_4h * 8;\n                puVar5 = *piVar1 + var_4h * 8;\n                uVar3 = fcn.0041c430(*puVar4);\n                var_4h = var_4h + 1;\n                *puVar5 = uVar3;\n                puVar5[1] = puVar4[1];\n            } while (var_4h < unaff_EBX[1]);\n            return piVar1;\n        }\n        fcn.0041c16b(arg_8h, piVar1);\n    }\n    return NULL;\n}\n",
        "token_count": 379
    },
    "0043279a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0043279a(uint *param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    char cVar3;\n    char *pcVar4;\n    int32_t *piVar5;\n    char *pcVar6;\n    \n    if (in_EAX != NULL) {\n        iVar1 = *in_EAX;\n        iVar2 = in_EAX[3];\n        in_EAX = fcn.0041c46a(*param_1);\n        *(iVar1 * 0x14 + iVar2 + -0x10) = in_EAX;\n        if ((param_3 != 0) && (in_EAX != NULL)) {\n            if (in_EAX == NULL) {\n                return 0xffffffff;\n            }\n            cVar3 = *in_EAX;\n            if ((cVar3 != '\\\"') && (cVar3 != '\\'')) {\n                if (cVar3 == '[') {\n                    cVar3 = ']';\n                }\n                else if (cVar3 != '`') {\n                    return 0xffffffff;\n                }\n            }\n            pcVar6 = in_EAX + 1;\n            piVar5 = NULL;\n            if (*pcVar6 != '\\0') {\n                pcVar4 = in_EAX + 2;\n                do {\n                    if (*pcVar6 == cVar3) {\n                        if (*pcVar4 != cVar3) break;\n                        *(piVar5 + in_EAX) = cVar3;\n                        pcVar4 = pcVar4 + 1;\n                        pcVar6 = pcVar6 + 1;\n                    }\n                    else {\n                        *(piVar5 + in_EAX) = *pcVar6;\n                    }\n                    piVar5 = piVar5 + 1;\n                    pcVar4 = pcVar4 + 1;\n                    pcVar6 = pcVar6 + 1;\n                } while (*pcVar6 != '\\0');\n            }\n            *(piVar5 + in_EAX) = '\\0';\n            return piVar5;\n        }\n    }\n    return in_EAX;\n}\n",
        "token_count": 474
    },
    "00432a27": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00432a27(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    char cVar3;\n    int32_t *in_EAX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_8h_00;\n    uint arg_18h;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint arg_1ch;\n    int32_t iVar8;\n    int32_t *piVar9;\n    int32_t arg_ch_00;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = in_EAX[0x11];\n    in_EAX[0x11] = iVar1 + 1;\n    var_4h = 0;\n    if ((*(arg_8h + 2) & 0x800) == 0) {\n        piVar9 = NULL;\n    }\n    else {\n        piVar9 = *(arg_8h + 0x10);\n    }\n    if ((in_EAX[0x10] == 0) && (iVar4 = fcn.004329d7(),  iVar4 != 0)) {\n        iVar4 = *in_EAX;\n        iVar5 = *(**(*piVar9 + 0xc) + 0x1c);\n        arg_8h_00 = fcn.0043fe38();\n        iVar8 = *(piVar9[2] + 0x14);\n        arg_18h = fcn.0043e8c8();\n        fcn.00438fc7();\n        if (iVar5 < 0) {\n            in_EAX[0x12] = in_EAX[0x12] + 1;\n            iVar4 = in_EAX[0x12];\n            fcn.00429bd5(0x1a, iVar4);\n            fcn.00429b6c(7, 1, iVar4, 0);\n            fcn.0043c637(iVar1, arg_18h, 0x26);\n            var_4h = 1;\n            fcn.00429e14();\ncode_r0x00432b03:\n            *(arg_8h + 0x18) = iVar1;\n            return var_4h;\n        }\n        iVar6 = fcn.00431b09();\n        cVar3 = fcn.00431aaa();\n        if ((*(iVar5 * 0x18 + 0x16 + *(iVar8 + 0xc)) == cVar3) || (cVar3 == 'b')) {\n            bVar2 = true;\n        }\n        else {\n            bVar2 = false;\n        }\n        arg_ch_00 = *(iVar8 + 0x10);\n        if (arg_ch_00 != 0) {\n            do {\n                if (var_4h != 0) goto code_r0x00432b03;\n                if (!bVar2) goto code_r0x00432c43;\n                if (((**(arg_ch_00 + 8) == iVar5) &&\n                    (iVar7 = fcn.0043949d(*(*(*(iVar4 + 8) + 0xc) + 0x49), **(arg_ch_00 + 0x2c), 0),  iVar7 == iVar6))\n                   && ((arg_ch != NULL || ((*(arg_ch_00 + 4) == 1 && (*(arg_ch_00 + 0x18) != '\\0')))))) {\n                    in_EAX[0x12] = in_EAX[0x12] + 1;\n                    iVar7 = in_EAX[0x12];\n                    arg_1ch = fcn.004392af(in_EAX, arg_ch_00);\n                    fcn.00429bd5(0x1a, iVar7);\n                    fcn.00429b6c(7, 1, iVar7, 0);\n                    fcn.00429c01(arg_8h_00, 0x26, iVar1, *(arg_ch_00 + 0x14), arg_18h, arg_1ch, 0xfffffff0);\n                    var_4h = 3;\n                    fcn.00429e14();\n                    if ((arg_ch != NULL) && (*(iVar5 * 0x18 + 0x14 + *(iVar8 + 0xc)) == '\\0')) {\n                        in_EAX[0x12] = in_EAX[0x12] + 1;\n                        *arg_ch = in_EAX[0x12];\n                    }\n                }\n                arg_ch_00 = *(arg_ch_00 + 0x20);\n            } while (arg_ch_00 != 0);\n            if (var_4h != 0) goto code_r0x00432b03;\n        }\n    }\ncode_r0x00432c43:\n    iVar1 = in_EAX[0x6f];\n    iVar4 = in_EAX[0x6e];\n    iVar8 = 0;\n    var_4h = 2;\n    if (arg_ch == NULL) {\n        in_EAX[0x6e] = 1;\n        in_EAX[0x6f] = 0;\n        if ((*(*(arg_8h + 8) + 0x1c) < 0) && ((*(arg_8h + 2) & 0x800) == 0)) {\n            var_4h = 1;\n        }\n    }\n    else {\n        in_EAX[0x12] = in_EAX[0x12] + 1;\n        iVar8 = in_EAX[0x12];\n        *arg_ch = iVar8;\n    }\n    fcn.00432cb9(arg_8h, iVar8, var_4h == 1);\n    in_EAX[0x6e] = iVar4;\n    in_EAX[0x6f] = iVar1;\n    return var_4h;\n}\n",
        "token_count": 1396
    },
    "00432cb9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00432cb9(char *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint extraout_EDX;\n    uint *unaff_EBX;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint var_4ch;\n    uint var_46h;\n    uint var_40h;\n    uchar var_3ch;\n    char var_3bh;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint *var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_5h;\n    \n    var_14h = 0;\n    var_24h = 0;\n    var_ch = fcn.0043fe38();\n    if (var_ch == 0) {\ncode_r0x00432cd7:\n        var_24h = 0;\n    }\n    else {\n        unaff_EBX[0x15] = unaff_EBX[0x15] + 1;\n        if (((arg_8h[2] & 0x20U) == 0) && (unaff_EBX[0x69] == 0)) {\n            unaff_EBX[0x12] = unaff_EBX[0x12] + 1;\n            var_20h = unaff_EBX[0x12];\n            fcn.00429bd5(0x1a, var_20h);\n            var_14h = fcn.00429b6c(7, 1, var_20h, 0);\n        }\n        if (*arg_8h == 'H') {\n            var_20h = *(arg_8h + 8);\n            if (arg_ch != 0) {\n                fcn.00429b6c(10, 0, arg_ch, 0);\n            }\n            var_5h._0_1_ = fcn.00431939();\n            *(arg_8h + 0x18) = unaff_EBX[0x11];\n            unaff_EBX[0x11] = unaff_EBX[0x11] + 1;\n            var_2ch = fcn.00429bea(0x29, *(arg_8h + 0x18), arg_10h == 0);\n            uVar3 = 0x10;\n            if (arg_ch == 0) {\n                fcn.00429e02();\n                uVar3 = extraout_EDX;\n            }\n            fcn.0044b531(&var_4ch, 0, uVar3);\n            var_46h._0_2_ = 1;\n            if ((*(arg_8h + 2) & 0x800) == 0) {\n                piVar1 = *(arg_8h + 0x10);\n                if (piVar1 != NULL) {\n                    if (var_5h == '\\0') {\n                        var_5h._0_1_ = 'b';\n                    }\n                    var_40h = fcn.004319c1();\n                    var_20h = fcn.004349af();\n                    var_10h = fcn.004349af();\n                    fcn.00429b6c(10, 0, var_10h, 0);\n                    var_18h = piVar1[3];\n                    for (var_1ch = *piVar1; 0 < var_1ch; var_1ch = var_1ch + -1) {\n                        uVar3 = *var_18h;\n                        if ((var_14h != 0) && (iVar2 = fcn.00432891(uVar3),  iVar2 == 0)) {\n                            fcn.00429f48(2);\n                            var_14h = 0;\n                        }\n                        if ((arg_10h == 0) || (iVar2 = fcn.004328bb(uVar3, &var_28h),  iVar2 == 0)) {\n                            uVar3 = fcn.004334bd(unaff_EBX, uVar3, var_20h);\n                            if (arg_10h != 0) {\n                                fcn.00429bea(0x15, uVar3, *(var_ch + 0x1c) + 2);\n                                uVar5 = *(arg_8h + 0x18);\n                                uVar4 = 0x37;\n                                goto code_r0x00432f63;\n                            }\n                            fcn.00429c01(var_ch, 0x1e, uVar3, 1, var_10h, &var_5h, 1);\n                            fcn.0043332d();\n                            fcn.00429bea(0x46, *(arg_8h + 0x18), var_10h);\n                        }\n                        else {\n                            uVar5 = *(arg_8h + 0x18);\n                            uVar4 = 0x38;\n                            uVar3 = var_28h;\ncode_r0x00432f63:\n                            fcn.00429b6c(uVar4, uVar5, var_10h, uVar3);\n                        }\n                        var_18h = var_18h + 5;\n                    }\n                    fcn.004349ca();\n                    fcn.004349ca();\n                }\n            }\n            else {\n                var_38h = *(arg_8h + 0x18);\n                var_3bh = var_5h;\n                var_3ch = 7;\n                var_34h = 0;\n                var_30h = 0;\n                *(*(arg_8h + 0x10) + 0x30) = 0;\n                iVar2 = fcn.00441019();\n                if (iVar2 != 0) goto code_r0x00432cd7;\n                if ((**(arg_8h + 0x10) != NULL) && (0 < ***(arg_8h + 0x10))) {\n                    var_40h = fcn.00431b09();\n                }\n            }\n            if (arg_10h == 0) {\n                fcn.00429f87(var_ch, &var_4ch, 0xfffffffa);\n            }\n        }\n        else {\n            var_1ch = *(arg_8h + 0x10);\n            unaff_EBX[0x12] = unaff_EBX[0x12] + 1;\n            var_38h = unaff_EBX[0x12];\n            var_3bh = '\\0';\n            var_34h = 0;\n            var_30h = 0;\n            if (*arg_8h == 't') {\n                var_3ch = 6;\n                uVar3 = 10;\n            }\n            else {\n                var_3ch = 3;\n                uVar3 = 7;\n            }\n            fcn.00429b6c(uVar3, 0, var_38h, 0);\n            fcn.00432063(*unaff_EBX, *(var_1ch + 0x28));\n            uVar3 = fcn.00431e0d(0x81, 0);\n            *(var_1ch + 0x30) = 0;\n            *(var_1ch + 0x28) = uVar3;\n            iVar2 = fcn.00441019();\n            if (iVar2 != 0) goto code_r0x00432cd7;\n            var_24h = var_38h;\n        }\n        if (var_14h != 0) {\n            fcn.00429e14();\n        }\n        fcn.00433356();\n    }\n    return var_24h;\n}\n",
        "token_count": 1790
    },
    "004331c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004331c4(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    bool bVar4;\n    uint arg_ch_00;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar3 = *(arg_8h + 0xc);\n    if ((*(in_EAX + 2) & 0x400) != 0) {\n        iVar2 = *(in_EAX + 4);\n        if (arg_ch != 0) {\n            iVar2 = -iVar2;\n        }\n        fcn.00429bea(7, iVar2, arg_10h);\n        return;\n    }\n    uVar1 = *(in_EAX + 4);\n    arg_ch_00 = 1;\n    fcn.0041d157();\n    iVar2 = fcn.0041d301(&var_8h, arg_ch_00);\n    if (iVar2 == 0) {\n        if (arg_ch == 0) goto code_r0x0043325c;\n    }\n    else if ((iVar2 != 2) || (arg_ch == 0)) {\n        uVar3 = 0x44a3c4;\n        if (arg_ch == 0) {\n            uVar3 = 0x4435dc;\n        }\n        fcn.0041d1e3(0x44aa30, uVar3, uVar1);\n        return;\n    }\n    bVar4 = var_8h != 0;\n    var_8h = -var_8h;\n    var_4h = -(var_4h + bVar4);\ncode_r0x0043325c:\n    iVar2 = fcn.0041c31d(8);\n    if (iVar2 != 0) {\n        fcn.0044b575(iVar2, &var_8h, 8);\n    }\n    fcn.00429c01(uVar3, 8, 0, arg_10h, 0, iVar2, 0xfffffff3);\n    return;\n}\n",
        "token_count": 492
    },
    "00433293": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00433293(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    \n    if (*(param_1 + 8) != '\\0') {\n        if (*(in_EAX + 0x15) < 8) {\n            *(in_EAX + 0x18 + *(in_EAX + 0x15) * 4) = *(param_1 + 0x10);\n            *(in_EAX + 0x15) = *(in_EAX + 0x15) + '\\x01';\n        }\n        *(param_1 + 8) = 0;\n    }\n    return;\n}\n",
        "token_count": 143
    },
    "00433356": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00433356(void)\n\n{\n    int32_t in_EAX;\n    int32_t extraout_ECX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    *(in_EAX + 0x54) = *(in_EAX + 0x54) + -1;\n    iVar1 = in_EAX + 0x60;\n    iVar2 = 10;\n    do {\n        if ((*(iVar1 + 0x10) != 0) && (*(in_EAX + 0x54) < *(iVar1 + 0xc))) {\n            in_EAX = fcn.00433293();\n            *(extraout_ECX + 0x10) = 0;\n            iVar1 = extraout_ECX;\n        }\n        iVar1 = iVar1 + 0x18;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    return;\n}\n",
        "token_count": 204
    },
    "0043337f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043337f(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_EAX;\n    int32_t unaff_EDI;\n    \n    if ((unaff_EDI < 0) || (unaff_EDI == *(in_EAX + 4))) {\n        fcn.00429bea(0x3d, arg_ch, arg_10h);\n    }\n    else {\n        fcn.00429b6c((-((*(in_EAX + 0x22) & 0x10) != 0) & 0x65U) + 0x1c, arg_ch);\n    }\n    if ((-1 < unaff_EDI) && (*(in_EAX + 0x1c) == 0)) {\n        fcn.00442978();\n    }\n    return;\n}\n",
        "token_count": 192
    },
    "004333de": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004333de(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    piVar1 = in_EAX + 0x60;\n    iVar4 = 0;\n    while (((piVar1[4] < 1 || (*piVar1 != arg_10h)) || (piVar1[1] != arg_ch))) {\n        iVar4 = iVar4 + 1;\n        piVar1 = piVar1 + 6;\n        if (9 < iVar4) {\n            fcn.0043337f(*(in_EAX + 0xc), arg_10h, arg_14h);\n            fcn.004332b5(arg_10h, arg_ch);\n            return arg_14h;\n        }\n    }\n    piVar1[5] = *(in_EAX + 0x58);\n    *(in_EAX + 0x58) = *(in_EAX + 0x58) + 1;\n    iVar4 = piVar1[4];\n    puVar2 = in_EAX + 0x68;\n    iVar3 = 10;\n    do {\n        if (*(puVar2 + 8) == iVar4) {\n            *puVar2 = 0;\n        }\n        puVar2 = puVar2 + 0x18;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    return piVar1[4];\n}\n",
        "token_count": 369
    },
    "00433460": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00433460(void)\n\n{\n    int32_t in_EAX;\n    int32_t extraout_ECX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = in_EAX + 0x60;\n    iVar2 = 10;\n    do {\n        if (*(iVar1 + 0x10) != 0) {\n            fcn.00433293();\n            *(extraout_ECX + 0x10) = 0;\n            iVar1 = extraout_ECX;\n        }\n        iVar1 = iVar1 + 0x18;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    return;\n}\n",
        "token_count": 153
    },
    "004334bd": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Type propagation algorithm not settling\n\nuint __cdecl fcn.004334bd(int32_t arg_8h, uint8_t *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar *puVar3;\n    uint32_t arg_ch_00;\n    uint uVar4;\n    uint arg_18h;\n    uint uVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    uint *puVar8;\n    ulong uVar9;\n    uint uVar10;\n    int32_t iStack148;\n    int32_t *piStack144;\n    uchar *puStack132;\n    uint uStack112;\n    uchar uStack104;\n    uint uStack80;\n    uchar auStack56 [8];\n    uint *puStack48;\n    uchar *puStack44;\n    \n    iVar1 = *(arg_8h + 0xc);\n    uStack112 = arg_10h;\n    if (iVar1 == 0) {\n        return 0;\n    }\n    if (arg_ch == NULL) {\ncode_r0x00433965:\n        fcn.00429b6c(10, 0, arg_10h, 0);\n        goto code_r0x00433c02;\n    }\n    arg_ch_00 = *arg_ch;\n    if (0x62 < arg_ch_00) {\n        if (arg_ch_00 - 0x74 < 0x2a) {\n            switch(*(*(arg_ch_00 + 0x42ae00) * 4 + 0x42ae40)) {\n            case 0x81c46:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x6eb0cc4:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x774cb3b:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x206683ff:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x24e8572c:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x3304754c:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x330574c3:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x3874f685:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x458d086a:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x5056f845:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x5756c884:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x71448dc8:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x75f13bf0:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x775906f8:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x83f84d8b:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xc0330251:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xc10349b6:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xc78b1476:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xe8570000:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xf70673cf:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xffff1303:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xffff130f:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n        }\n        goto code_r0x004335d4;\n    }\n    if (arg_ch_00 == 0x62) goto code_r0x00433965;\n    if (arg_ch_00 < 0x48) {\n        if (arg_ch_00 == 0x47) {\n            uVar4 = *(arg_ch + 8);\n            puVar2 = *(*(arg_ch + 0x10) + 0xc);\n            uVar5 = *puVar2;\n            uVar10 = fcn.00433eab(arg_8h, uVar4);\n            fcn.00433eab(arg_8h, uVar5);\n            arg_18h = fcn.004349af();\n            uVar9 = fcn.004349af();\n            fcn.00431b3d(uVar4, 0x50, uVar10, uVar9 >> 0x20, arg_18h, 0x10);\n            uVar5 = puVar2[5];\n            fcn.004349ca();\n            uVar5 = fcn.00433eab(arg_8h, uVar5);\n            fcn.00431b3d(uVar4, 0x4e, uVar10, uVar5, uVar9, 0x10);\n            fcn.00429b6c(0x45, arg_18h, uVar9, arg_10h);\n            fcn.004349ca();\n            fcn.004349ca();\n            goto code_r0x00433c02;\n        }\n        if (arg_ch_00 < 0x39) {\n            if (arg_ch_00 == 0x38) {\n                if (*(arg_8h + 0x1a4) == 0) {\n                    fcn.0041d1e3(0x44aa80);\n                    return 0;\n                }\n                if (arg_ch[1] == 2) {\n                    fcn.00439076();\n                }\n                if (arg_ch[1] != 4) {\n                    fcn.0043908a(arg_ch[1], *(arg_ch + 4), 0);\n                    goto code_r0x00433c02;\n                }\n                iVar6 = 0;\n                uVar4 = *(arg_ch + 4);\n                arg_10h = 4;\n                uVar5 = 6;\ncode_r0x004338da:\n                fcn.00429c01(iVar1, uVar5, iVar6, arg_10h, iVar6, uVar4, iVar6);\n                goto code_r0x00433c02;\n            }\n            if (arg_ch_00 == 0x13) goto code_r0x004338e8;\n            if (arg_ch_00 == 0x14) {\n                uStack112 = fcn.00432cb9(arg_ch, 0, 0);\n                goto code_r0x00433c02;\n            }\n            if (arg_ch_00 == 0x18) {\n                uStack112 = fcn.004334bd(arg_8h, *(arg_ch + 8), arg_10h);\n                goto code_r0x00433c02;\n            }\n        }\n        else {\n            if (arg_ch_00 == 0x3c) {\n                fcn.00429bea(0x6d, (*(*(arg_ch + 0x28) + 8) + 1) * *(arg_ch + 0x18) + 1 + *(arg_ch + 0x1c), arg_10h);\n                goto code_r0x00433c02;\n            }\n            if (0x43 < arg_ch_00) {\n                if (arg_ch_00 < 0x46) goto code_r0x00433888;\n                if (arg_ch_00 == 0x46) {\n                    uVar4 = fcn.00433eab(arg_8h, *(arg_ch + 8));\n                    uVar5 = fcn.00433eab(arg_8h, *(arg_ch + 0xc));\n                    uVar10 = 0x90;\n                    arg_ch_00 = 0x4c;\ncode_r0x004337ab:\n                    fcn.00431b3d(*(arg_ch + 8), arg_ch_00, uVar4, uVar5, arg_10h, uVar10);\n                    goto code_r0x00433c02;\n                }\n            }\n        }\ncode_r0x004335d4:\n        piStack144 = (*(arg_ch + 0x10))[3];\n        iVar1 = **(arg_ch + 0x10);\n        puStack132 = NULL;\n        uVar4 = fcn.00429c62();\n        puVar2 = *(arg_ch + 8);\n        if (puVar2 != NULL) {\n            puVar7 = puVar2;\n            puVar8 = &uStack104;\n            for (iVar6 = 0xc; iVar6 != 0; iVar6 = iVar6 + -1) {\n                *puVar8 = *puVar7;\n                puVar7 = puVar7 + 1;\n                puVar8 = puVar8 + 1;\n            }\n            uStack80 = fcn.00433eab(arg_8h, puVar2);\n            puStack48 = &uStack104;\n            puStack132 = auStack56;\n            uStack104 = 0x84;\n            auStack56[0] = 0x4c;\n        }\n        if (0 < iVar1) {\n            iStack148 = (iVar1 - 1U >> 1) + 1;\n            do {\n                *(arg_8h + 0x54) = *(arg_8h + 0x54) + 1;\n                puVar3 = *piStack144;\n                if (puVar2 != NULL) {\n                    puVar3 = puStack132;\n                    puStack44 = *piStack144;\n                }\n                puStack132 = puVar3;\n                uVar5 = fcn.00429c62();\n                fcn.00434349(arg_8h, puStack132, uVar5, 8);\n                fcn.00433ee6();\n                fcn.00429b6c(1, 0, uVar4, 0);\n                fcn.00433356();\n                fcn.00429caf();\n                piStack144 = piStack144 + 10;\n                iStack148 = iStack148 + -1;\n            } while (iStack148 != 0);\n        }\n        if (*(arg_ch + 0xc) == 0) {\n            fcn.00429b6c(10, 0, arg_10h, 0);\n        }\n        else {\n            *(arg_8h + 0x54) = *(arg_8h + 0x54) + 1;\n            fcn.00433ee6();\n            fcn.00433356();\n        }\n    }\n    else {\n        if (0x5b < arg_ch_00) {\n            if (arg_ch_00 == 0x5d) {\ncode_r0x004338e8:\n                uVar4 = fcn.00433eab(arg_8h, *(arg_ch + 8));\n                fcn.00429bea(arg_ch_00, uVar4, arg_10h);\n                goto code_r0x00433c02;\n            }\n            iVar6 = arg_ch_00 - 0x5e;\n            if (iVar6 == 0) {\n                uVar4 = *(arg_ch + 4);\n                uVar5 = 0x5e;\n                goto code_r0x004338da;\n            }\n            goto code_r0x004335d4;\n        }\n        if (0x51 < arg_ch_00) {\ncode_r0x00433888:\n            uVar4 = fcn.00433eab(arg_8h, *(arg_ch + 8));\n            uVar5 = fcn.00433eab(arg_8h, *(arg_ch + 0xc));\n            fcn.00429b6c(arg_ch_00, uVar5, uVar4, arg_10h);\n            goto code_r0x00433c02;\n        }\n        if (arg_ch_00 != 0x48) {\n            if (0x48 < arg_ch_00) {\n                if (arg_ch_00 < 0x4b) {\n                    fcn.00429b6c(7, 1, arg_10h, 0);\n                    uVar4 = fcn.00433eab(arg_8h, *(arg_ch + 8));\n                    fcn.00429bd5(arg_ch_00, uVar4);\n                    fcn.00429b6c(0x14, arg_10h, 0xffffffff, 0);\n                    fcn.00429e14();\n                    goto code_r0x00433c02;\n                }\n                if (arg_ch_00 < 0x51) {\n                    uVar4 = fcn.00433eab(arg_8h, *(arg_ch + 8));\n                    uVar5 = fcn.00433eab(arg_8h, *(arg_ch + 0xc));\n                    uVar10 = 0x10;\n                    goto code_r0x004337ab;\n                }\n            }\n            goto code_r0x004335d4;\n        }\n        uVar4 = fcn.00429c62();\n        uVar5 = fcn.00429c62();\n        fcn.00429b6c(10, 0, arg_10h, 0);\n        fcn.00433002(arg_8h, uVar4, uVar5);\n        fcn.00429b6c(7, 1, arg_10h, 0);\n        fcn.00429caf();\n        fcn.00429b6c(0x14, arg_10h, 0, 0);\n    }\n    fcn.00429caf();\ncode_r0x00433c02:\n    fcn.004349ca();\n    fcn.004349ca();\n    return uStack112;\n}\n",
        "token_count": 3236
    },
    "00434052": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00434052(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint unaff_EBX;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_c8h;\n    uint *var_c0h;\n    uint var_bch;\n    uint var_98h;\n    uint *var_90h;\n    uint var_8ch;\n    uint var_68h;\n    uint *var_60h;\n    uint *var_5ch;\n    uint var_38h;\n    uint var_20h;\n    uint var_8h;\n    \n    iVar1 = *(in_EAX + 0x10);\n    var_8h = 0;\n    puVar3 = *(in_EAX + 8);\n    puVar4 = &var_38h;\n    for (iVar2 = 0xc; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    var_60h = &var_98h;\n    var_5ch = &var_c8h;\n    var_68h._0_1_ = 0x45;\n    var_98h._0_1_ = 0x50;\n    var_90h = &var_38h;\n    var_8ch = **(iVar1 + 0xc);\n    var_c0h = &var_38h;\n    var_c8h._0_1_ = 0x4e;\n    var_bch = *(*(iVar1 + 0xc) + 0x14);\n    var_20h = fcn.00433eab();\n    var_38h._0_1_ = 0x84;\n    if (arg_ch == 0) {\n        fcn.00434349(unaff_EBX, &var_68h, arg_8h, arg_10h);\n    }\n    else {\n        fcn.004340ff(unaff_EBX, &var_68h, arg_8h, arg_10h);\n    }\n    fcn.004349ca();\n    return;\n}\n",
        "token_count": 527
    },
    "004340ff": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004340ff(int32_t arg_8h, uint8_t *arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t arg_ch_00;\n    uint uVar1;\n    uint uVar2;\n    \n    if (*(arg_8h + 0xc) == 0) {\n        return;\n    }\n    if (arg_ch == NULL) {\n        return;\n    }\n    arg_ch_00 = *arg_ch;\n    if (arg_ch_00 < 0x48) {\n        if (arg_ch_00 == 0x47) {\n            fcn.00434052(arg_10h, 1, arg_14h);\n            goto code_r0x0043432e;\n        }\n        if (arg_ch_00 == 0x13) {\n            fcn.00434349(arg_8h, *(arg_ch + 8), arg_10h, arg_14h);\n            goto code_r0x0043432e;\n        }\n        if (arg_ch_00 == 0x44) {\n            fcn.004340ff(arg_8h, *(arg_ch + 8), arg_10h, arg_14h);\n            fcn.004340ff(arg_8h, *(arg_ch + 0xc), arg_10h, arg_14h);\n            goto code_r0x0043432e;\n        }\n        if (arg_ch_00 == 0x45) {\n            uVar1 = fcn.00429c62();\n            *(arg_8h + 0x54) = *(arg_8h + 0x54) + 1;\n            fcn.00434349(arg_8h, *(arg_ch + 8), uVar1, arg_14h ^ 8);\n            fcn.004340ff(arg_8h, *(arg_ch + 0xc), arg_10h, arg_14h);\n            fcn.00429caf();\n            fcn.00433356();\n            goto code_r0x0043432e;\n        }\n        if (arg_ch_00 == 0x46) {\ncode_r0x0043424f:\n            uVar1 = fcn.00433eab(arg_8h, *(arg_ch + 8));\n            uVar2 = fcn.00433eab(arg_8h, *(arg_ch + 0xc));\n            arg_14h = 0x80;\n            arg_ch_00 = (arg_ch_00 == 0x46) + 0x4b;\n            goto code_r0x004342b7;\n        }\n    }\n    else {\n        if (arg_ch_00 == 0x48) {\n            uVar2 = fcn.00429c62();\n            uVar1 = uVar2;\n            if (arg_14h != 0) {\n                uVar1 = arg_10h;\n            }\n            fcn.00433002(arg_8h, uVar2, uVar1);\n            fcn.00429b6c(1, 0, arg_10h, 0);\n            fcn.00429caf();\n            goto code_r0x0043432e;\n        }\n        if (0x48 < arg_ch_00) {\n            if (arg_ch_00 < 0x4b) {\n                uVar1 = fcn.00433eab(arg_8h, *(arg_ch + 8));\n                fcn.00429bea(arg_ch_00, uVar1, arg_10h);\n                goto code_r0x0043432e;\n            }\n            if (arg_ch_00 < 0x51) {\n                uVar1 = fcn.00433eab(arg_8h, *(arg_ch + 8));\n                uVar2 = fcn.00433eab(arg_8h, *(arg_ch + 0xc));\ncode_r0x004342b7:\n                fcn.00431b3d(*(arg_ch + 8), arg_ch_00, uVar1, uVar2, arg_10h, arg_14h);\n                goto code_r0x0043432e;\n            }\n            if (arg_ch_00 == 0x92) goto code_r0x0043424f;\n        }\n    }\n    uVar1 = fcn.00433eab(arg_8h, arg_ch);\n    fcn.00429b6c(0x1a, uVar1, arg_10h, arg_14h != 0);\ncode_r0x0043432e:\n    fcn.004349ca();\n    fcn.004349ca();\n    return;\n}\n",
        "token_count": 1024
    },
    "004346f2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004346f2(int32_t arg_8h, char *arg_ch)\n\n{\n    char cVar1;\n    int32_t **ppiVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    char *pcVar6;\n    int32_t *piVar7;\n    int32_t iVar8;\n    uint arg_ch_00;\n    uint *puVar9;\n    uint arg_10h;\n    int32_t iVar10;\n    char **ppcVar11;\n    uint arg_18h;\n    uint *var_8h;\n    uint var_4h;\n    \n    pcVar6 = arg_ch;\n    ppiVar2 = *(arg_8h + 0xc);\n    piVar3 = *ppiVar2;\n    piVar4 = ppiVar2[7];\n    cVar1 = *arg_ch;\n    piVar5 = ppiVar2[1];\n    if (cVar1 != -0x68) {\n        if (cVar1 == -0x67) {\n            if (ppiVar2[6] != NULL) {\n                return 0;\n            }\n            var_8h = piVar4[8];\n            piVar5 = piVar4 + 9;\n            arg_8h = 0;\n            if (0 < *piVar5) {\n                do {\n                    iVar10 = fcn.00434590(*var_8h, pcVar6);\n                    if (iVar10 == 0) break;\n                    arg_8h = arg_8h + 1;\n                    var_8h = var_8h + 4;\n                } while (arg_8h < *piVar5);\n            }\n            if (*piVar5 <= arg_8h) {\n                var_8h = var_8h & 0xffffff00 | *(*(*(*piVar3 + 8) + 0xc) + 0x49);\n                iVar10 = fcn.00438a19(*piVar3, 0x10, &arg_8h);\n                piVar4[8] = iVar10;\n                pcVar6 = arg_ch;\n                if (-1 < arg_8h) {\n                    ppcVar11 = arg_8h * 0x10 + iVar10;\n                    *ppcVar11 = arg_ch;\n                    piVar3[0x12] = piVar3[0x12] + 1;\n                    ppcVar11[2] = piVar3[0x12];\n                    if (*(arg_ch + 0x10) == NULL) {\n                        arg_10h = 0;\n                    }\n                    else {\n                        arg_10h = **(arg_ch + 0x10);\n                    }\n                    arg_18h = 0;\n                    fcn.0041d157();\n                    pcVar6 = fcn.004395a9(*piVar3, arg_ch_00, arg_10h, var_8h, arg_18h);\n                    ppcVar11[1] = pcVar6;\n                    pcVar6 = arg_ch;\n                    if ((arg_ch[2] & 0x10U) == 0) {\n                        ppcVar11[3] = 0xffffffff;\n                    }\n                    else {\n                        ppcVar11[3] = piVar3[0x11];\n                        piVar3[0x11] = piVar3[0x11] + 1;\n                    }\n                }\n            }\n            *(pcVar6 + 0x1e) = arg_8h;\n            goto code_r0x0043492a;\n        }\n        if (cVar1 != -0x66) {\n            return 0;\n        }\n    }\n    if (piVar5 == NULL) {\n        return 1;\n    }\n    iVar10 = 0;\n    if (*piVar5 < 1) {\n        return 1;\n    }\n    piVar7 = piVar5 + 8;\n    while (*(arg_ch + 0x18) != *piVar7) {\n        iVar10 = iVar10 + 1;\n        piVar7 = piVar7 + 0xe;\n        if (*piVar5 <= iVar10) {\n            return 1;\n        }\n    }\n    piVar5 = piVar4 + 5;\n    iVar10 = 0;\n    if (0 < *piVar5) {\n        piVar7 = piVar4[4] + 8;\n        do {\n            if ((piVar7[-1] == *(arg_ch + 0x18)) && (*piVar7 == *(arg_ch + 0x1c))) break;\n            iVar10 = iVar10 + 1;\n            piVar7 = piVar7 + 6;\n        } while (iVar10 < *piVar5);\n    }\n    if (*piVar5 <= iVar10) {\n        iVar8 = fcn.00438a19(*piVar3, 0x18, &arg_8h);\n        iVar10 = arg_8h;\n        piVar4[4] = iVar8;\n        if (-1 < arg_8h) {\n            puVar9 = arg_8h * 0x18 + iVar8;\n            *puVar9 = *(arg_ch + 0x28);\n            puVar9[1] = *(arg_ch + 0x18);\n            puVar9[2] = *(arg_ch + 0x1c);\n            piVar3[0x12] = piVar3[0x12] + 1;\n            iVar8 = piVar3[0x12];\n            puVar9[3] = 0xffffffff;\n            puVar9[4] = iVar8;\n            puVar9[5] = arg_ch;\n            piVar3 = piVar4[2];\n            if (piVar3 != NULL) {\n                ppcVar11 = piVar3[3];\n                arg_8h = 0;\n                if (0 < *piVar3) {\n                    do {\n                        pcVar6 = *ppcVar11;\n                        if (((*pcVar6 == -0x68) && (*(pcVar6 + 0x18) == *(arg_ch + 0x18))) &&\n                           (*(pcVar6 + 0x1c) == *(arg_ch + 0x1c))) {\n                            puVar9[3] = arg_8h;\n                            break;\n                        }\n                        arg_8h = arg_8h + 1;\n                        ppcVar11 = ppcVar11 + 5;\n                    } while (arg_8h < *piVar3);\n                }\n            }\n            if (puVar9[3] < 0) {\n                puVar9[3] = piVar4[3];\n                piVar4[3] = piVar4[3] + 1;\n            }\n        }\n    }\n    *arg_ch = -0x66;\n    *(arg_ch + 0x1e) = iVar10;\n    pcVar6 = arg_ch;\ncode_r0x0043492a:\n    *(pcVar6 + 0x24) = piVar4;\n    return 1;\n}\n",
        "token_count": 1565
    },
    "00434a39": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434a39(uint arg_8h, uint noname_1, uint *arg_10h)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    pcVar2 = fcn.0042b828(*arg_10h);\n    uVar3 = fcn.0042b828(arg_10h[1]);\n    iVar5 = 0;\n    arg_10h = pcVar2;\n    if (pcVar2 != NULL) {\n        do {\n            iVar4 = iVar5;\n            pcVar1 = arg_10h;\n            iVar5 = iVar4;\n            if (*arg_10h == '\\0') {\n                return;\n            }\n            do {\n                arg_10h = arg_10h + iVar5;\n                iVar5 = fcn.004493b3();\n            } while (var_4h == 0x95);\n        } while ((var_4h != 0x16) && (var_4h != 0x79));\n        uVar3 = fcn.0041ce3a(0x44aab4, pcVar1 - pcVar2, pcVar2, uVar3, pcVar1 + iVar4);\n        fcn.0042b87a(uVar3);\n    }\n    return;\n}\n",
        "token_count": 326
    },
    "00434ac8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434ac8(int32_t arg_8h, uint noname_1, uint *arg_10h)\n\n{\n    uint uVar1;\n    char *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    uVar1 = *(arg_8h + 8);\n    var_4h = 0;\n    pcVar2 = fcn.0042b828(*arg_10h);\n    fcn.0042b828(arg_10h[1]);\n    uVar3 = fcn.0042b828(arg_10h[2]);\n    arg_10h = pcVar2;\n    if (*pcVar2 != '\\0') {\n        do {\n            iVar4 = fcn.004493b3();\n            if (var_ch == 0x66) {\n                pcVar2 = pcVar2 + iVar4;\n                iVar4 = fcn.004493b3();\n                iVar5 = fcn.0041c46a(pcVar2);\n                if (iVar5 == 0) break;\n                fcn.0041d223();\n                iVar6 = fcn.0041d27e();\n                if (iVar6 == 0) {\n                    iVar6 = var_4h;\n                    if (var_4h == 0) {\n                        iVar6 = 0x4435dc;\n                    }\n                    iVar6 = fcn.0041ce3a(0x44aac0, iVar6, pcVar2 - arg_10h, arg_10h, uVar3);\n                    fcn.0041c16b(uVar1, var_4h);\n                    arg_10h = pcVar2 + iVar4;\n                    var_4h = iVar6;\n                }\n                fcn.0041c16b(uVar1, iVar5);\n            }\n            pcVar2 = pcVar2 + iVar4;\n        } while (*pcVar2 != '\\0');\n        iVar4 = var_4h;\n        if (var_4h != 0) goto code_r0x00434bc8;\n    }\n    iVar4 = 0x4435dc;\ncode_r0x00434bc8:\n    uVar3 = fcn.0041ce3a(0x44a3c8, iVar4, arg_10h);\n    fcn.0042b87a(uVar3);\n    fcn.0041c16b(uVar1, var_4h);\n    return;\n}\n",
        "token_count": 598
    },
    "00434bfc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434bfc(uint arg_8h, uint noname_1, uint *arg_10h)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    pcVar2 = fcn.0042b828(*arg_10h);\n    uVar3 = fcn.0042b828(arg_10h[1]);\n    var_4h = 3;\n    iVar5 = 0;\n    arg_10h = pcVar2;\n    if (pcVar2 != NULL) {\n        do {\n            iVar4 = iVar5;\n            pcVar1 = arg_10h;\n            iVar5 = iVar4;\n            if (*arg_10h == '\\0') {\n                return;\n            }\n            do {\n                arg_10h = arg_10h + iVar5;\n                iVar5 = fcn.004493b3();\n            } while (var_8h == 0x95);\n            var_4h = var_4h + 1;\n            if ((var_8h == 0x76) || (var_8h == 0x68)) {\n                var_4h = 0;\n            }\n        } while ((var_4h != 2) || (((var_8h != 0x87 && (var_8h != 0x2d)) && (var_8h != 5))));\n        uVar3 = fcn.0041ce3a(0x44aab4, pcVar1 - pcVar2, pcVar2, uVar3, pcVar1 + iVar4);\n        fcn.0042b87a(uVar3);\n    }\n    return;\n}\n",
        "token_count": 415
    },
    "00434cb5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00434cb5(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    \n    if (arg_8h == 0) {\n        uVar1 = fcn.0041ce3a(0x44aacc);\n    }\n    else {\n        uVar1 = fcn.0041ce3a(0x44aad4, arg_8h, arg_ch);\n        fcn.0041c16b();\n    }\n    return uVar1;\n}\n",
        "token_count": 115
    },
    "00434e32": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434e32(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    int32_t *arg_8h_01;\n    int32_t *in_EAX;\n    int32_t *arg_8h_02;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int32_t **ppiVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    int32_t iVar11;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_8h_00 = *in_EAX;\n    uVar1 = *(arg_8h_00 + 0xc);\n    var_4h = 0;\n    var_10h = 0;\n    if ((*(arg_8h_00 + 0x1e) == '\\0') &&\n       (arg_8h_02 = fcn.00436708(0, *(arg_8h + 0xc), *(arg_8h + 8)),  arg_8h_02 != NULL)) {\n        iVar2 = fcn.0043e8c8();\n        uVar10 = *(iVar2 * 0x10 + *(arg_8h_00 + 8));\n        *(arg_8h_00 + 0xc) = *(arg_8h_00 + 0xc) | 0x10000000;\n        var_4h = fcn.00436ac6();\n        if (var_4h != 0) {\n            iVar3 = fcn.0043668f(var_4h, uVar10);\n            if ((iVar3 == 0) && (iVar3 = fcn.00436778(var_4h, uVar10),  iVar3 == 0)) {\n                iVar3 = *arg_8h_02;\n                iVar4 = fcn.0041d157();\n                if ((iVar4 < 7) || (iVar4 = fcn.0041d2b9(),  iVar4 != 0)) {\n                    iVar3 = fcn.00436be4(var_4h);\n                    if (iVar3 != 0) goto code_r0x004350e1;\n                    if (arg_8h_02[7] == 0) {\n                        iVar3 = fcn.00437a3f();\n                        if (iVar3 == 0) {\n                            if (((*(arg_8h_02 + 0x22) & 0x10) != 0) &&\n                               (var_10h = fcn.0044394b(arg_8h_00),  *(**(var_10h + 8) + 0x4c) == 0)) {\n                                var_10h = 0;\n                            }\n                            iVar3 = fcn.0043fe38();\n                            if (iVar3 != 0) {\n                                fcn.00439033(var_10h != 0);\n                                fcn.004372cc(iVar2);\n                                if (var_10h != 0) {\n                                    in_EAX[0x12] = in_EAX[0x12] + 1;\n                                    iVar2 = in_EAX[0x12];\n                                    fcn.00429c01(iVar3, 0x5e, 0, iVar2, 0, var_4h, 0);\n                                    fcn.00429c01(iVar3, 0x84, iVar2, 0, 0, var_10h, 0xfffffff6);\n                                    fcn.00439076();\n                                }\n                                iVar2 = *arg_8h_02;\n                                fcn.0041d127();\n                                if ((*(arg_8h_00 + 0xc) & 0x4000000) != 0) {\n                                    var_10h = 0;\n                                    puVar5 = fcn.0043bbd8();\n                                    if (puVar5 != NULL) {\n                                        do {\n                                            var_10h = fcn.00434cb5(var_10h, **puVar5);\n                                            puVar5 = puVar5[3];\n                                        } while (puVar5 != NULL);\n                                        if (var_10h != 0) {\n                                            uVar9 = 0x44a684;\n                                            uVar7 = 0x44ab88;\n                                            uVar8 = uVar10;\n                                            iVar3 = var_4h;\n                                            iVar4 = var_10h;\n                                            fcn.00436610(0x44ab88, uVar10);\n                                            fcn.0041c16b(arg_8h_00, var_10h, uVar7, uVar8, uVar9, iVar2, iVar3, iVar4);\n                                        }\n                                    }\n                                }\n                                fcn.00436610(0x44abd0, uVar10);\n                                iVar2 = fcn.00434cf6(in_EAX);\n                                if (iVar2 != 0) {\n                                    uVar10 = 0x44ad48;\n                                    iVar3 = var_4h;\n                                    iVar4 = var_4h;\n                                    iVar11 = iVar2;\n                                    fcn.00436610(0x44ad48, var_4h);\n                                    fcn.0041c16b(arg_8h_00, iVar2, uVar10, iVar3, iVar4, iVar11);\n                                }\n                                if ((*(arg_8h_00 + 0xc) & 0x4000000) != 0) {\n                                    for (ppiVar6 = fcn.0043bbd8(); ppiVar6 != NULL; ppiVar6 = ppiVar6[3]) {\n                                        arg_8h_01 = *ppiVar6;\n                                        if (arg_8h_01 != arg_8h_02) {\n                                            fcn.00434d71(arg_8h_01, *arg_8h_01);\n                                        }\n                                    }\n                                }\n                                fcn.00434d71(arg_8h_02, var_4h);\n                            }\n                        }\n                        goto code_r0x004350e1;\n                    }\n                    uVar10 = 0x44ab68;\n                    iVar3 = *arg_8h_02;\n                }\n                else {\n                    uVar10 = 0x44ab4c;\n                }\n            }\n            else {\n                uVar10 = 0x44ab08;\n                iVar3 = var_4h;\n            }\n            fcn.0041d1e3(uVar10, iVar3);\n        }\n    }\ncode_r0x004350e1:\n    fcn.00438d01(arg_8h_00);\n    fcn.0041c16b(arg_8h_00, var_4h);\n    *(arg_8h_00 + 0xc) = uVar1;\n    return;\n}\n",
        "token_count": 1576
    },
    "00435195": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00435195(int32_t *arg_8h, uint *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t arg_8h_00;\n    int32_t arg_8h_01;\n    uint *arg_8h_02;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint uVar9;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint8_t *var_ch;\n    int32_t var_8h;\n    char *var_4h;\n    \n    iVar2 = *arg_8h;\n    if (arg_8h[0x10] != 0) {\n        return;\n    }\n    if (*(iVar2 + 0x1e) != '\\0') {\n        return;\n    }\n    piVar1 = arg_8h[0x7e];\n    var_8h = iVar2;\n    arg_8h_00 = fcn.0043e8c8();\n    uVar9 = *(arg_8h_00 * 0x10 + *(iVar2 + 8));\n    iVar2 = piVar1[2] * 0x18 + -0x18 + piVar1[3];\n    var_4h = *(iVar2 + 4);\n    arg_8h_01 = *piVar1 + 0x10;\n    var_ch = iVar2;\n    arg_8h_02 = fcn.0043668f(arg_8h_01, uVar9);\n    iVar8 = var_8h;\n    if ((var_4h != NULL) && (*var_4h == 'b')) {\n        var_4h = NULL;\n    }\n    if (*(iVar2 + 0x15) == '\\0') {\n        if (piVar1[4] != 0) {\n            uVar9 = 0x44adc4;\n            goto code_r0x00435291;\n        }\n        if ((((*(var_8h + 0xc) & 0x4000000) != 0) && (piVar1[9] != 0)) && (var_4h != NULL)) {\n            uVar9 = 0x44ade0;\n            goto code_r0x00435291;\n        }\n        if (*(var_ch + 0x14) == '\\0') {\n            if (var_4h == NULL) goto code_r0x004352a7;\n        }\n        else if (var_4h == NULL) {\n            uVar9 = 0x44ae1c;\n            goto code_r0x00435291;\n        }\n        iVar2 = fcn.00429829(var_8h, var_4h, 1, 0x62, &var_ch);\n        if (iVar2 != 0) {\n            *(iVar8 + 0x1e) = 1;\n            return;\n        }\n        if (var_ch != NULL) {\n            fcn.00429a4c();\ncode_r0x004352a7:\n            iVar2 = var_8h;\n            puVar3 = fcn.0041c46a(*arg_ch);\n            var_ch = puVar3;\n            if (puVar3 != NULL) {\n                puVar4 = puVar3 + arg_ch[1] + -1;\n                var_8h = *(iVar2 + 0xc);\n                while ((puVar3 < puVar4 && ((*puVar4 == 0x3b || ((*(*puVar4 + 0x443e90) & 1) != 0))))) {\n                    *puVar4 = 0;\n                    puVar4 = puVar4 + -1;\n                }\n                *(iVar2 + 0xc) = *(iVar2 + 0xc) | 0x10000000;\n                iVar7 = piVar1[0xb];\n                iVar8 = iVar7 + 1;\n                uVar6 = 0x44a684;\n                uVar5 = 0x44ae88;\n                fcn.00436610(0x44ae88, uVar9);\n                fcn.0041c16b(iVar2, var_ch, uVar5, uVar9, uVar6, iVar7, puVar3, iVar8, arg_8h_01);\n                *(iVar2 + 0xc) = var_8h;\n            }\n            fcn.00435101(arg_8h_00, (var_4h != NULL) + 2);\n            fcn.00434d71(arg_8h_02, *arg_8h_02);\n            return;\n        }\n        uVar9 = 0x44ae54;\n    }\n    else {\n        uVar9 = 0x44ada4;\n    }\ncode_r0x00435291:\n    fcn.0041d1e3(uVar9);\n    return;\n}\n",
        "token_count": 1125
    },
    "00435352": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00435352(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint uVar6;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = *arg_8h;\n    if ((*(arg_8h_00 + 0x1e) == '\\0') && (puVar1 = fcn.00436708(0, *(arg_ch + 0xc), *(arg_ch + 8)),  puVar1 != NULL)) {\n        if ((*(puVar1 + 0x22) & 0x10) == 0) {\n            if (puVar1[7] == 0) {\n                iVar2 = fcn.0043e8c8();\n                piVar3 = fcn.0041c2f7(0x48);\n                if (piVar3 != NULL) {\n                    arg_8h[0x7e] = piVar3;\n                    *(piVar3 + 8) = 1;\n                    iVar4 = puVar1[2];\n                    piVar3[2] = iVar4;\n                    iVar4 = iVar4 + -1;\n                    iVar4 = fcn.0041c2f7(((iVar4 + (iVar4 >> 0x1f & 7U) >> 3) * 8 + 8) * 0x18);\n                    piVar3[3] = iVar4;\n                    iVar4 = fcn.0041ce3a(0x44af3c, *puVar1);\n                    *piVar3 = iVar4;\n                    if ((piVar3[3] == 0) || (iVar4 == 0)) {\n                        *(arg_8h_00 + 0x1e) = 1;\n                    }\n                    else {\n                        fcn.0044b575(piVar3[3], puVar1[3], piVar3[2] * 0x18);\n                        var_ch = 0;\n                        if (0 < piVar3[2]) {\n                            var_8h = 0;\n                            do {\n                                puVar5 = piVar3[3] + var_8h;\n                                uVar6 = fcn.0041c430(*puVar5);\n                                var_8h = var_8h + 0x18;\n                                *puVar5 = uVar6;\n                                var_ch = var_ch + 1;\n                                puVar5[4] = 0;\n                                puVar5[3] = 0;\n                                puVar5[1] = 0;\n                                puVar5[2] = 0;\n                            } while (var_ch < piVar3[2]);\n                        }\n                        piVar3[0x10] = *(iVar2 * 0x10 + 0xc + *(arg_8h_00 + 8));\n                        piVar3[0xb] = puVar1[0xb];\n                        *(piVar3 + 8) = 1;\n                        fcn.00439033(0);\n                        iVar4 = fcn.0043fe38();\n                        if (iVar4 != 0) {\n                            fcn.004372cc(iVar2);\n                        }\n                    }\n                }\n                goto code_r0x004354c9;\n            }\n            uVar6 = 0x44af1c;\n        }\n        else {\n            uVar6 = 0x44aef8;\n        }\n        fcn.0041d1e3(uVar6);\n    }\ncode_r0x004354c9:\n    fcn.00438d01(arg_8h_00);\n    return;\n}\n",
        "token_count": 858
    },
    "004354d9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004354d9(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint arg_ch_00;\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *arg_8h;\n    arg_8h_00 = fcn.0043fe38();\n    if (arg_8h_00 != 0) {\n        arg_ch_00 = *(arg_ch * 0x10 + *(iVar1 + 8));\n        iVar1 = fcn.0043668f(*0x4443bc, arg_ch_00);\n        if (iVar1 == 0) {\n            fcn.00436610(0x44af50, arg_ch_00);\n            iVar1 = arg_8h[0x65];\n        }\n        else {\n            iVar1 = *(iVar1 + 0x14);\n            if (arg_14h == 0) {\n                fcn.00429bea(0x60, iVar1, arg_ch);\n            }\n            else {\n                fcn.00436610(0x44af68, arg_ch_00);\n            }\n        }\n        fcn.00429b6c(0x27, arg_10h, iVar1, arg_ch);\n        fcn.00429f87(arg_8h_00, 3, 0xfffffff2);\n        fcn.00429e02();\n    }\n    return;\n}\n",
        "token_count": 354
    },
    "004355aa": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004355aa(int32_t *arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *arg_ch_00;\n    int32_t in_EAX;\n    int32_t arg_8h_00;\n    int32_t iVar3;\n    uint arg_18h;\n    uint uVar4;\n    uint uVar5;\n    uint arg_1ch;\n    int32_t iVar6;\n    int32_t arg_18h_00;\n    int32_t arg_14h;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_20h = 0;\n    iVar6 = in_EAX + 2;\n    arg_18h_00 = in_EAX + 4;\n    arg_14h = in_EAX + 5;\n    iVar2 = *arg_8h;\n    iVar7 = in_EAX + 6;\n    iVar8 = in_EAX + 7;\n    arg_8h_00 = fcn.0043fe38();\n    if ((((arg_8h_00 != 0) && (arg_ch != NULL)) && (arg_ch[5] != 0)) &&\n       (iVar3 = fcn.0044b5ab(*arg_ch, 0x44ab44, 7),  iVar3 != 0)) {\n        arg_18h = fcn.0043e8c8();\n        iVar3 = arg_8h[0x11];\n        arg_8h[0x11] = iVar3 + 1;\n        fcn.00429c01(arg_8h_00, 0x5e, 0, in_EAX, 0, *arg_ch, 0);\n        for (arg_ch_00 = arg_ch[4]; arg_ch_00 != NULL; arg_ch_00 = arg_ch_00[8]) {\n            var_34h = arg_ch_00[1];\n            uVar4 = fcn.004392af(arg_8h, arg_ch_00);\n            iVar1 = var_34h * 2 + 1 + iVar8;\n            if (arg_8h[0x12] < iVar1) {\n                arg_8h[0x12] = iVar1;\n            }\n            fcn.00429c01(arg_8h_00, 0x26, iVar3, arg_ch_00[5], arg_18h, uVar4, 0xfffffff0);\n            fcn.00429c01(arg_8h_00, 0x5e, 0, in_EAX + 1, 0, *arg_ch_00, 0);\n            var_4h = 0;\n            if (-1 < var_34h) {\n                do {\n                    fcn.00429b6c(7, 0, var_4h + iVar8, 0);\n                    var_4h = var_4h + 1;\n                } while (var_4h <= var_34h);\n            }\n            var_4h = 0;\n            if (0 < var_34h) {\n                do {\n                    fcn.00429b6c(10, 0, var_34h + 1 + iVar8 + var_4h, 0);\n                    var_4h = var_4h + 1;\n                } while (var_4h < var_34h);\n            }\n            uVar5 = fcn.00429c62();\n            fcn.00429bea(0x41, iVar3, uVar5);\n            uVar4 = *(arg_8h_00 + 0x1c);\n            fcn.00429b6c(0x14, iVar8, 1, 0);\n            var_4h = 0;\n            if (0 < var_34h) {\n                do {\n                    fcn.00429b6c(0x1c, iVar3, var_4h, in_EAX + 3);\n                    if (var_4h == 0) {\n                        fcn.00429bd5(0x1b, in_EAX + 8);\n                    }\n                    arg_1ch = fcn.00437264(*(arg_ch_00[0xb] + var_4h * 4));\n                    fcn.00429c01(arg_8h_00, 0x4b, in_EAX + 3, 0, var_34h + 1 + iVar8 + var_4h, arg_1ch, 0xfffffffc);\n                    fcn.00429e02();\n                    var_4h = var_4h + 1;\n                } while (var_4h < var_34h);\n            }\n            if (*(iVar2 + 0x1e) != '\\0') {\n                return;\n            }\n            fcn.00429b6c(1, 0, uVar5, 0);\n            var_4h = 0;\n            if (0 < var_34h) {\n                do {\n                    if (var_4h == 0) {\n                        fcn.00429e14();\n                    }\n                    fcn.00429e14();\n                    fcn.00429b6c(0x14, in_EAX + 8 + var_4h, 1, 0);\n                    fcn.00429b6c(0x1c, iVar3, var_4h, var_34h + 1 + iVar8 + var_4h);\n                    var_4h = var_4h + 1;\n                } while (var_4h < var_34h);\n            }\n            fcn.00429caf();\n            fcn.00429bea(0x43, iVar3, uVar4);\n            fcn.00429bd5(0x2b, iVar3);\n            fcn.00429bea(0xf, iVar8, iVar6);\n            if (var_20h == 0) {\n                var_20h = fcn.00429bd5(0x1b, iVar8);\n            }\n            if (0 < var_34h) {\n                var_8h = in_EAX + 8;\n                do {\n                    fcn.00429c01(arg_8h_00, 0x5e, 0, arg_14h, 0, 0x44af88, 0);\n                    fcn.00429b6c(0x5b, arg_14h, iVar6, iVar6);\n                    fcn.00429b6c(0x56, iVar8, var_8h, arg_14h);\n                    fcn.00429b6c(0x14, arg_14h, 0xffffffff, 0);\n                    fcn.00429b6c(0x59, var_8h, arg_14h, arg_14h);\n                    fcn.00429bd5(0x90, arg_14h);\n                    fcn.00429b6c(0x5b, arg_14h, iVar6, iVar6);\n                    var_8h = var_8h + 1;\n                    var_34h = var_34h + -1;\n                } while (var_34h != 0);\n            }\n            fcn.00429c01(arg_8h_00, 0x1e, in_EAX, 3, arg_18h_00, 0x44af8c, 0);\n            fcn.00429bea(0x36, arg_10h, iVar7);\n            fcn.00429b6c(0x37, arg_10h, arg_18h_00, iVar7);\n            fcn.00429e02();\n        }\n        if (arg_ch[4] == 0) {\n            fcn.00429b6c(0x26, iVar3, arg_ch[5], arg_18h);\n            fcn.00429bea(0x1f, iVar3, iVar6);\n            fcn.00429bd5(0x2b, iVar3);\n        }\n        else {\n            fcn.00429bbf(arg_8h_00, 1);\n            fcn.00429e14();\n        }\n        fcn.00429b6c(10, 0, in_EAX + 1, 0);\n        fcn.00429c01(arg_8h_00, 0x1e, in_EAX, 3, arg_18h_00, 0x44af8c, 0);\n        fcn.00429bea(0x36, arg_10h, iVar7);\n        fcn.00429b6c(0x37, arg_10h, arg_18h_00, iVar7);\n        fcn.00429e02();\n        if (arg_8h[0x12] < arg_18h_00) {\n            arg_8h[0x12] = arg_18h_00;\n        }\n        if (var_20h != 0) {\n            fcn.00429e14();\n        }\n    }\n    return;\n}\n",
        "token_count": 2167
    },
    "00435d8b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00435d8b(int32_t arg_8h, uint noname_1, uint *arg_10h)\n\n{\n    int32_t arg_ch;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint arg_ch_00;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    arg_ch = *(arg_8h + 8);\n    iVar3 = 0;\n    var_8h = 0;\n    var_4h = 0;\n    var_ch = fcn.0042b828(*arg_10h);\n    arg_10h = fcn.0042b828(arg_10h[1]);\n    if (var_ch == 0) {\n        var_ch = 0x4435dc;\n    }\n    if (arg_10h == NULL) {\n        arg_10h = 0x4435dc;\n    }\n    iVar5 = *(arg_ch + 4);\n    if (iVar5 < *(arg_ch + 100) + 2) {\n        if (*(arg_ch + 0x1c) == '\\0') {\n            var_4h = fcn.0041ce3a(0x44aff8);\n            goto code_r0x00436006;\n        }\n        if (0 < iVar5) {\n            do {\n                iVar1 = fcn.0041d27e();\n                if (iVar1 == 0) {\n                    uVar6 = 0x44b024;\n                    var_ch = arg_10h;\n                    goto code_r0x00435de9;\n                }\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < iVar5);\n        }\n        if (*(arg_ch + 8) == arg_ch + 0x1a8) {\n            iVar3 = fcn.0041c31d(0x30);\n            if (iVar3 == 0) {\n                return;\n            }\n            fcn.0044b575(iVar3, *(arg_ch + 8), 0x20);\n        }\n        else {\n            iVar3 = fcn.0041c392();\n            if (iVar3 == 0) {\n                return;\n            }\n        }\n        *(arg_ch + 8) = iVar3;\n        piVar4 = iVar3 + *(arg_ch + 4) * 0x10;\n        fcn.0044b531(piVar4, 0, 0x10);\n        var_8h = fcn.0042570f(var_ch, arg_ch, piVar4 + 1, 0, *(arg_ch + 0x10) | 0x100);\n        *(arg_ch + 4) = *(arg_ch + 4) + 1;\n        if (var_8h == 0x13) {\n            var_8h = 1;\n            var_4h = fcn.0041ce3a(0x44b044);\n        }\n        else if (var_8h == 0) {\n            iVar3 = fcn.0043977b(arg_ch);\n            piVar4[3] = iVar3;\n            if (iVar3 == 0) {\n                var_8h = 7;\n            }\n            else if ((*(iVar3 + 0x48) != '\\0') && (*(iVar3 + 0x49) != *(*(*(arg_ch + 8) + 0xc) + 0x49))) {\n                var_4h = fcn.0041ce3a(0x44b068);\n                var_8h = 1;\n            }\n            iVar3 = **(piVar4[1] + 4);\n            if ((*(iVar3 + 0xc) == '\\0') && ((*(iVar3 + 0xac) == 0 || (*(*(iVar3 + 0xac) + 0x1e) != '\\x02')))) {\n                *(iVar3 + 4) = *(arg_ch + 0x1f);\n            }\n            uVar2 = *(*(arg_ch + 8) + 4);\n            if (uVar2 != 0) {\n                uVar2 = *(*(uVar2 + 4) + 0x12);\n            }\n            fcn.004259c5(uVar2);\n        }\n        *(piVar4 + 9) = 3;\n        iVar3 = fcn.0041c430(arg_10h);\n        *piVar4 = iVar3;\n        if (var_8h == 0) {\n            if (iVar3 == 0) {\n                var_8h = 7;\n            }\n            else {\n                var_8h = fcn.0043e762(&var_4h);\n                if (var_8h == 0) {\n                    return;\n                }\n            }\n        }\n        iVar5 = *(arg_ch + 4) + -1;\n        iVar3 = iVar5 * 0x10;\n        if (*(*(arg_ch + 8) + 4 + iVar3) != 0) {\n            fcn.004258e9();\n            *(*(arg_ch + 8) + 4 + iVar3) = 0;\n            *(*(arg_ch + 8) + 0xc + iVar3) = 0;\n        }\n        fcn.00436864();\n        *(arg_ch + 4) = iVar5;\n        if ((var_8h == 7) || (var_8h == 0xc0a)) {\n            *(arg_ch + 0x1e) = 1;\n            fcn.0041c16b(arg_ch, var_4h);\n            var_4h = fcn.0041ce3a(0x44a3a4);\n            goto code_r0x00436006;\n        }\n        if (var_4h == 0) {\n            uVar6 = 0x44b0ac;\n            goto code_r0x00435de9;\n        }\n    }\n    else {\n        uVar6 = 0x44afd0;\n        var_ch = *(arg_ch + 100);\ncode_r0x00435de9:\n        var_4h = fcn.0041ce3a(uVar6, var_ch);\ncode_r0x00436006:\n        if (var_4h == 0) goto code_r0x0043602b;\n    }\n    fcn.0042b836(var_4h);\n    fcn.0041c16b(arg_ch, var_4h);\ncode_r0x0043602b:\n    if ((var_8h != 0) && (*(arg_8h + 0x34) = var_8h,  (*(arg_8h + 0x24) & 1) != 0)) {\n        arg_ch_00 = 1;\n        uVar6 = fcn.0044a2ae();\n        fcn.004293c1(uVar6, arg_ch_00);\n    }\n    return;\n}\n",
        "token_count": 1581
    },
    "00436282": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00436282(int32_t arg_8h, int16_t *arg_ch)\n\n{\n    uint uVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint var_4h;\n    \n    piVar2 = arg_ch;\n    if (arg_ch != NULL) {\n        arg_ch = NULL;\n        uVar1 = *(arg_8h + 4);\n        piVar4 = piVar2 + 4;\n        if (0 < *piVar2) {\n            do {\n                if (*piVar4 == 0) {\n                    iVar3 = fcn.0041c430(uVar1);\n                    *piVar4 = iVar3;\n                }\n                else {\n                    iVar3 = fcn.0041d27e();\n                    if (iVar3 != 0) {\n                        fcn.0041d1e3(0x44b140, *(arg_8h + 8), *(arg_8h + 0xc), *piVar4);\n                        return 1;\n                    }\n                }\n                iVar3 = fcn.0043631c(arg_8h, piVar4[4]);\n                if ((iVar3 != 0) || (iVar3 = fcn.00436377(arg_8h, piVar4[7]),  iVar3 != 0)) {\n                    return 1;\n                }\n                arg_ch = arg_ch + 1;\n                piVar4 = piVar4 + 0xe;\n            } while (arg_ch < *piVar2);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 354
    },
    "00436610": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00436610(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint *unaff_EDI;\n    uint var_70h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    uVar2 = *unaff_EDI;\n    if ((unaff_EDI[0x10] == 0) && (var_8h = fcn.0041cddb(arg_8h, &arg_ch),  var_8h != 0)) {\n        *(unaff_EDI + 0x13) = *(unaff_EDI + 0x13) + '\\x01';\n        puVar1 = unaff_EDI + 0x70;\n        fcn.0044b575(&var_70h, puVar1, 0x68);\n        fcn.0044b531(puVar1, 0, 0x68);\n        fcn.0044981f(unaff_EDI, var_8h, &var_4h);\n        fcn.0041c16b(uVar2, var_4h);\n        fcn.0041c16b(uVar2, var_8h);\n        fcn.0044b575(puVar1, &var_70h, 0x68);\n        *(unaff_EDI + 0x13) = *(unaff_EDI + 0x13) + -1;\n    }\n    return;\n}\n",
        "token_count": 341
    },
    "00436708": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00436708(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.0043e7ea();\n    if (iVar1 == 0) {\n        iVar1 = fcn.0043668f(arg_ch, arg_10h);\n        if (iVar1 == 0) {\n            uVar2 = 0x44b170;\n            if (arg_8h == 0) {\n                uVar2 = 0x44b180;\n            }\n            if (arg_10h == 0) {\n                fcn.0041d1e3(0x44a7e8, uVar2, arg_ch);\n            }\n            else {\n                fcn.0041d1e3(0x44a7dc, uVar2, arg_10h);\n            }\n            *(in_EAX + 0x12) = 1;\n        }\n    }\n    else {\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 254
    },
    "00436864": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00436864(void)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    int32_t arg_8h;\n    int32_t in_EAX;\n    int32_t unaff_EBX;\n    int32_t iVar3;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (in_EAX < *(unaff_EBX + 4)) {\n        iVar3 = in_EAX << 4;\n        var_4h = in_EAX;\n        do {\n            arg_8h = *(*(unaff_EBX + 8) + iVar3 + 0xc);\n            if (arg_8h != 0) {\n                fcn.004396db(arg_8h);\n            }\n            if (0 < in_EAX) {\n                return;\n            }\n            var_4h = var_4h + 1;\n            iVar3 = iVar3 + 0x10;\n        } while (var_4h < *(unaff_EBX + 4));\n    }\n    *(unaff_EBX + 0xc) = *(unaff_EBX + 0xc) & 0xfffffdff;\n    fcn.004439bd();\n    var_8h = 2;\n    var_4h = 2;\n    if (2 < *(unaff_EBX + 4)) {\n        var_ch = 0x20;\n        var_10h = 0x20;\n        do {\n            puVar1 = var_10h + *(unaff_EBX + 8);\n            if (puVar1[1] == 0) {\n                fcn.0041c16b();\n                *puVar1 = 0;\n            }\n            else {\n                if (var_8h < var_4h) {\n                    puVar2 = var_ch + *(unaff_EBX + 8);\n                    *puVar2 = *puVar1;\n                    puVar2[1] = puVar1[1];\n                    puVar2[2] = puVar1[2];\n                    puVar2[3] = puVar1[3];\n                }\n                var_8h = var_8h + 1;\n                var_ch = var_ch + 0x10;\n            }\n            var_4h = var_4h + 1;\n            var_10h = var_10h + 0x10;\n        } while (var_4h < *(unaff_EBX + 4));\n    }\n    fcn.0044b531(var_8h * 0x10 + *(unaff_EBX + 8), 0, (*(unaff_EBX + 4) - var_8h) * 0x10);\n    *(unaff_EBX + 4) = var_8h;\n    if (var_8h < 3) {\n        iVar3 = unaff_EBX + 0x1a8;\n        if (*(unaff_EBX + 8) != iVar3) {\n            fcn.0044b575(iVar3, *(unaff_EBX + 8), 0x20);\n            fcn.0041c16b();\n            *(unaff_EBX + 8) = iVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 728
    },
    "004369c9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004369c9(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint arg_ch_00;\n    \n    if ((arg_ch != NULL) &&\n       (((arg_8h != 0 && (*(arg_8h + 0x1e0) != 0)) || (*(arg_ch + 8) = *(arg_ch + 8) + -1,  *(arg_ch + 8) == 0)))) {\n        iVar2 = arg_ch[4];\n        while (iVar2 != 0) {\n            iVar1 = *(iVar2 + 0x20);\n            if ((arg_8h == 0) || (*(arg_8h + 0x1e0) == 0)) {\n                arg_ch_00 = 0;\n                arg_8h_00 = fcn.0041d157();\n                fcn.0041db04(arg_8h_00, arg_ch_00);\n            }\n            fcn.0041c16b(arg_8h, *(iVar2 + 0x1c));\n            fcn.0041c16b(arg_8h, iVar2);\n            iVar2 = iVar1;\n        }\n        fcn.0043c5a2(arg_8h, arg_ch);\n        fcn.00436963(arg_8h);\n        fcn.0041c16b(arg_8h, *arg_ch);\n        fcn.0041c16b(arg_8h, arg_ch[10]);\n        fcn.0043ecfb(arg_8h, arg_ch[7]);\n        iVar2 = 0;\n        if ((arg_8h == 0) || (*(arg_8h + 0x1e0) == 0)) {\n            fcn.00443981(0);\n        }\n        if (arg_ch[0xe] != 0) {\n            if (0 < arg_ch[0xd]) {\n                do {\n                    fcn.0041c16b(arg_8h, *(arg_ch[0xe] + iVar2 * 4));\n                    iVar2 = iVar2 + 1;\n                } while (iVar2 < arg_ch[0xd]);\n            }\n            fcn.0041c16b(arg_8h, arg_ch[0xe]);\n        }\n        fcn.0041c16b(arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 545
    },
    "00436ae5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00436ae5(uint param_1)\n\n{\n    int32_t in_EAX;\n    uint arg_8h;\n    \n    arg_8h = fcn.0043fe38();\n    fcn.00429b6c(0x27, 0, 1, param_1);\n    fcn.00429f87(arg_8h, 5, 0xfffffff2);\n    if (*(in_EAX + 0x44) == 0) {\n        *(in_EAX + 0x44) = 1;\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "00436b98": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00436b98(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    \n    iVar1 = *in_EAX;\n    if ((param_1 != 0) && (*(param_1 + 4) != 0)) {\n        if (*(iVar1 + 0x7c) == '\\0') {\n            *param_2 = param_1;\n            iVar1 = fcn.00436b6d(iVar1);\n            if (-1 < iVar1) {\n                return iVar1;\n            }\n            fcn.0041d1e3(0x44b1a4);\n        }\n        else {\n            fcn.0041d1e3(0x44b190);\n        }\n        in_EAX[0x10] = in_EAX[0x10] + 1;\n        return -1;\n    }\n    iVar1 = *(iVar1 + 0x74);\n    *param_2 = unaff_ESI;\n    return iVar1;\n}\n",
        "token_count": 249
    },
    "00436be4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00436be4(uint param_1)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (((*(*in_EAX + 0x7c) == '\\0') && (*(in_EAX + 0x13) == '\\0')) && ((*(*in_EAX + 0xc) & 0x10000) == 0)) {\n        iVar1 = fcn.0041d2b9();\n        if (iVar1 == 0) {\n            fcn.0041d1e3(0x44b1b8, param_1);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 151
    },
    "00436c2c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00436c2c(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t *arg_8h_00;\n    int32_t iVar4;\n    int32_t **ppiVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint uVar8;\n    uint var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *in_EAX;\n    iVar3 = fcn.00436b98();\n    if (iVar3 < 0) {\n        return;\n    }\n    in_EAX[0x79] = *var_10h;\n    in_EAX[0x7a] = var_10h[1];\n    arg_8h_00 = fcn.00436ac6();\n    if (arg_8h_00 == NULL) {\n        return;\n    }\n    iVar4 = fcn.00436be4(arg_8h_00);\n    if (iVar4 != 0) goto code_r0x00436d11;\n    if (*(in_EAX + 0x83) == '\\0') {\n        uVar8 = *(iVar3 * 0x10 + *(iVar1 + 8));\n        iVar4 = fcn.0043e7ea();\n        if (iVar4 != 0) goto code_r0x00436d11;\n        iVar4 = fcn.0043668f(arg_8h_00, uVar8);\n        if (iVar4 == 0) {\n            iVar4 = fcn.00436778(arg_8h_00, uVar8);\n            if (iVar4 == 0) goto code_r0x00436cf5;\n            uVar8 = 0x44b1fc;\n            var_10h = arg_8h_00;\n        }\n        else {\n            if (arg_14h != 0) goto code_r0x00436d11;\n            uVar8 = 0x44b1e4;\n        }\n        fcn.0041d1e3(uVar8, var_10h);\n    }\n    else {\ncode_r0x00436cf5:\n        ppiVar5 = fcn.0041c2f7(0x48);\n        if (ppiVar5 != NULL) {\n            ppiVar5[1] = 0xffffffff;\n            *ppiVar5 = arg_8h_00;\n            ppiVar5[0x10] = *(iVar3 * 0x10 + 0xc + *(iVar1 + 8));\n            *(ppiVar5 + 8) = 1;\n            ppiVar5[6] = 0xf4240;\n            in_EAX[0x7e] = ppiVar5;\n            if (*(iVar1 + 0x7c) != '\\0') {\n                return;\n            }\n            iVar4 = fcn.0043fe38();\n            if (iVar4 == 0) {\n                return;\n            }\n            fcn.00439033(0);\n            if (arg_10h != 0) {\n                fcn.00429bbf(iVar4, 0x7c);\n            }\n            iVar2 = in_EAX[0x12];\n            iVar6 = iVar2 + 1;\n            in_EAX[0x65] = iVar2 + 2;\n            iVar7 = iVar2 + 3;\n            in_EAX[100] = iVar6;\n            in_EAX[0x12] = iVar7;\n            fcn.00429b6c(0x23, iVar3, iVar7, 2);\n            fcn.0042a0d8();\n            fcn.00429bd5(0x1a, iVar7);\n            fcn.00429bea(7, (-((*(iVar1 + 0xc) & 0x100000) != 0) & 0xfffffffd) + 4, iVar7);\n            fcn.00429b6c(0x24, iVar3, 2, iVar7);\n            fcn.00429bea(7, *(*(*(iVar1 + 8) + 0xc) + 0x49), iVar7);\n            fcn.00429b6c(0x24, iVar3, 5, iVar7);\n            fcn.00429e14();\n            if ((arg_ch == 0) && (arg_10h == 0)) {\n                fcn.00429bea(0x62, iVar3, iVar2 + 2);\n            }\n            else {\n                fcn.00429b6c(7, 0, iVar2 + 2, 0);\n            }\n            fcn.00436ae5(iVar3);\n            fcn.00429b6c(0x36, 0, iVar6, 0);\n            fcn.00429b6c(10, 0, iVar7, 0);\n            fcn.00429b6c(0x37, 0, iVar7, iVar6);\n            fcn.00429e02();\n            fcn.00429bbf(iVar4, 0x2b);\n            return;\n        }\n        *(iVar1 + 0x1e) = 1;\n        in_EAX[0x10] = in_EAX[0x10] + 1;\n        in_EAX[1] = 7;\n    }\ncode_r0x00436d11:\n    fcn.0041c16b(iVar1, arg_8h_00);\n    return;\n}\n",
        "token_count": 1285
    },
    "00436ead": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00436ead(int32_t *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    uint8_t **ppuVar6;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    puVar2 = arg_8h[0x7e];\n    iVar3 = *arg_8h;\n    if (puVar2 != NULL) {\n        if (*(iVar3 + 0x50) < puVar2[2] + 1) {\n            fcn.0041d1e3(0x44b220, *puVar2);\n        }\n        else {\n            puVar4 = fcn.00436ac6();\n            if (puVar4 != NULL) {\n                var_8h = 0;\n                if (0 < puVar2[2]) {\n                    cVar1 = *(*puVar4 + 0x443d90);\n                    ppuVar6 = puVar2[3];\n                    do {\n                        if ((cVar1 == *(**ppuVar6 + 0x443d90)) && (iVar5 = fcn.0041d27e(),  iVar5 == 0)) {\n                            fcn.0041d1e3(0x44b238, puVar4);\n                            fcn.0041c16b(iVar3, puVar4);\n                            return;\n                        }\n                        var_8h = var_8h + 1;\n                        ppuVar6 = ppuVar6 + 6;\n                    } while (var_8h < puVar2[2]);\n                }\n                if ((puVar2[2] & 7) == 0) {\n                    iVar5 = fcn.0041c392();\n                    if (iVar5 == 0) {\n                        fcn.0041c16b(iVar3, puVar4);\n                        return;\n                    }\n                    puVar2[3] = iVar5;\n                }\n                ppuVar6 = puVar2[2] * 0x18 + puVar2[3];\n                fcn.0044b531(ppuVar6, 0, 0x18);\n                *ppuVar6 = puVar4;\n                *(ppuVar6 + 0x16) = 0x62;\n                puVar2[2] = puVar2[2] + 1;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 577
    },
    "00437264": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00437264(uint arg_8h)\n\n{\n    char cVar1;\n    uint32_t arg_8h_00;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint var_4h;\n    \n    cVar1 = *(*in_EAX + 0x7c);\n    arg_8h_00 = *(*(*(*in_EAX + 8) + 0xc) + 0x49);\n    iVar2 = fcn.0043949d(arg_8h_00, arg_8h, cVar1);\n    if ((cVar1 == '\\0') && ((iVar2 == 0 || (*(iVar2 + 0xc) == 0)))) {\n        iVar2 = fcn.00439385(arg_8h_00, arg_8h);\n        if (iVar2 == 0) {\n            fcn.0041d1e3(0x44b2b8, arg_8h);\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 229
    },
    "004373a5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004373a5(int32_t arg_8h)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    uint extraout_ECX;\n    char **ppcVar4;\n    char **unaff_EBX;\n    int32_t iVar5;\n    uint unaff_EDI;\n    int32_t iVar6;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    char *var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    ppcVar4 = unaff_EBX[3];\n    pcVar1 = unaff_EBX[2];\n    var_14h = pcVar1;\n    if (0 < pcVar1) {\n        do {\n            iVar6 = 0;\n            for (pcVar2 = *ppcVar4; *pcVar2 != '\\0'; pcVar2 = pcVar2 + 1) {\n                if (*pcVar2 == '\\\"') {\n                    iVar6 = iVar6 + 1;\n                }\n                iVar6 = iVar6 + 1;\n            }\n            var_4h = var_4h + 7 + iVar6;\n            ppcVar4 = ppcVar4 + 6;\n            var_14h = var_14h + -1;\n        } while (var_14h != NULL);\n    }\n    iVar6 = 0;\n    for (pcVar2 = *unaff_EBX; *pcVar2 != '\\0'; pcVar2 = pcVar2 + 1) {\n        if (*pcVar2 == '\\\"') {\n            iVar6 = iVar6 + 1;\n        }\n        iVar6 = iVar6 + 1;\n    }\n    iVar6 = var_4h + 2 + iVar6;\n    if (iVar6 < 0x32) {\n        var_ch = 0x4435dc;\n        var_18h = 0x44b2d8;\n        var_1ch = 0x44b2dc;\n    }\n    else {\n        var_ch = 0x44b2e0;\n        var_18h = 0x44b2e4;\n        var_1ch = 0x44b2ec;\n    }\n    var_4h = iVar6 + 0x23 + pcVar1 * 6;\n    iVar6 = fcn.0041c31d(var_4h);\n    if (iVar6 == 0) {\n        *(arg_8h + 0x1e) = 1;\n        iVar6 = 0;\n    }\n    else {\n        fcn.0041cef1(0x44b2f0, unaff_EDI);\n        var_8h = fcn.0041d157();\n        fcn.00437316(iVar6, &var_8h);\n        var_14h = NULL;\n        *(var_8h + iVar6) = 0x28;\n        iVar5 = var_8h + 1;\n        if (0 < unaff_EBX[2]) {\n            do {\n                fcn.0041cef1(var_ch, unaff_EDI);\n                var_8h = fcn.0041d157();\n                var_8h = iVar5 + var_8h;\n                var_ch = var_18h;\n                fcn.00437316(iVar6, &var_8h);\n                iVar3 = fcn.0041d157();\n                iVar5 = var_8h;\n                fcn.0044b575(var_8h + iVar6, extraout_ECX, iVar3);\n                iVar5 = iVar5 + iVar3;\n                var_14h = var_14h + 1;\n            } while (var_14h < unaff_EBX[2]);\n        }\n        fcn.0041cef1(0x44a338, var_1ch);\n    }\n    return iVar6;\n}\n",
        "token_count": 893
    },
    "0043751c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0043751c(int32_t *arg_8h, int32_t *arg_ch, int32_t *arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint arg_ch_00;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    int32_t iVar8;\n    uint uVar9;\n    uint uVar10;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = *arg_8h;\n    if ((arg_10h == NULL) && (arg_14h == 0)) {\n        return;\n    }\n    if (*(var_4h + 0x1e) != '\\0') {\n        return;\n    }\n    puVar3 = arg_8h[0x7e];\n    if (puVar3 != NULL) {\n        var_10h = puVar3;\n        var_8h = fcn.0043e8c8();\n        if ((*(var_4h + 0x7c) == '\\0') || (puVar3[5] = *(var_4h + 0x78),  *(var_4h + 0x7c) == '\\0')) {\n            var_ch = fcn.0043fe38();\n            if (var_ch == 0) {\n                return;\n            }\n            fcn.00429b6c(0x2b, 0, 0, 0);\n            puVar3 = var_10h;\n            if (var_10h[7] == 0) {\n                var_14h = 0x44b300;\n                uVar2 = 0x44b308;\n            }\n            else {\n                var_14h = 0x44b310;\n                uVar2 = 0x44b318;\n            }\n            if (arg_14h == 0) {\n                uVar2 = fcn.0041ce3a(0x44b320, uVar2, (*arg_10h - arg_8h[0x79]) + 1, arg_8h[0x79]);\n            }\n            else {\n                fcn.00429b6c(0x27, 1, arg_8h[0x65], var_8h);\n                fcn.00429e02();\n                arg_8h[0x11] = 2;\n                var_24h._0_1_ = 8;\n                var_20h = 1;\n                var_24h._1_1_ = 0;\n                var_1ch = 0;\n                var_18h = 0;\n                fcn.00441019(arg_8h, arg_14h, &var_24h);\n                fcn.00429b6c(0x2b, 1, 0, 0);\n                if (arg_8h[0x10] == 0) {\n                    iVar1 = fcn.0043fd90(arg_8h, arg_14h);\n                    if (iVar1 == 0) {\n                        return;\n                    }\n                    puVar3[2] = *(iVar1 + 8);\n                    puVar3[3] = *(iVar1 + 0xc);\n                    *(iVar1 + 8) = 0;\n                    *(iVar1 + 0xc) = 0;\n                    fcn.004369c9(var_4h, iVar1);\n                }\n                uVar2 = fcn.004373a5(var_4h);\n            }\n            iVar1 = arg_8h[100];\n            uVar10 = *puVar3;\n            iVar8 = arg_8h[0x65];\n            uVar5 = 0x44a684;\n            arg_ch_00 = *(var_8h * 0x10 + *(var_4h + 8));\n            uVar4 = 0x44b330;\n            uVar6 = var_14h;\n            uVar7 = uVar10;\n            uVar9 = uVar2;\n            fcn.00436610(0x44b330, arg_ch_00);\n            fcn.0041c16b(var_4h, uVar2, uVar4, arg_ch_00, uVar5, uVar6, uVar10, uVar7, iVar8, uVar9, iVar1);\n            fcn.004372cc(var_8h);\n            iVar1 = var_4h;\n            uVar10 = 0xffffffff;\n            uVar2 = fcn.0041ce3a(0x44b388, *var_10h);\n            fcn.00429c01(var_ch, 99, var_8h, 0, 0, uVar2, uVar10);\n            puVar3 = var_10h;\n            if (*(iVar1 + 0x7c) == '\\0') {\n                return;\n            }\n        }\n        uVar2 = fcn.0041d157();\n        iVar1 = fcn.0041db04(uVar2, puVar3);\n        puVar3 = var_10h;\n        if (iVar1 == 0) {\n            arg_8h[0x7e] = 0;\n            *(var_4h + 0x28) = *(var_4h + 0x28) + 1;\n            *(var_4h + 0xc) = *(var_4h + 0xc) | 0x200;\n            if (var_10h[7] == 0) {\n                iVar1 = fcn.0041d127();\n                puVar3[0xb] = iVar1 + 0xd;\n            }\n        }\n        else {\n            *(var_4h + 0x1e) = 1;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 1376
    },
    "00437774": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00437774(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    char *pcVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t *in_ECX;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    int32_t iVar10;\n    uint uVar11;\n    uint *puVar12;\n    uint var_34h;\n    int32_t var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t *var_10h;\n    int32_t var_ch;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    var_8h = *in_ECX;\n    if (0 < in_ECX[0x70]) {\n        fcn.0041d1e3(0x44b398);\n        fcn.0043ecfb(var_8h, arg_10h);\n        return;\n    }\n    fcn.00436c2c(in_EAX, 1, 0, arg_14h);\n    iVar5 = in_ECX[0x7e];\n    if ((iVar5 != 0) && (in_ECX[0x10] == 0)) {\n        fcn.00436b98();\n        fcn.0043e8c8();\n        iVar1 = fcn.00436254(0x44b310, var_18h);\n        if ((iVar1 == 0) || (iVar1 = fcn.0043631c(&var_34h, arg_10h),  iVar1 == 0)) {\n            iVar1 = var_8h;\n            uVar2 = fcn.00432619(var_8h, arg_10h, 1);\n            *(iVar5 + 0x1c) = uVar2;\n            fcn.0043ecfb(iVar1, arg_10h);\n            if (*(iVar1 + 0x1e) != '\\0') {\n                return;\n            }\n            if (*(iVar1 + 0x7c) == '\\0') {\n                fcn.00437a3f();\n            }\n            pcVar3 = in_ECX[0x7b];\n            if ((*pcVar3 != '\\0') && (*pcVar3 != ';')) {\n                pcVar3 = pcVar3 + in_ECX[0x7c];\n            }\n            iVar5 = *arg_8h;\n            var_24h = pcVar3 - iVar5;\n            while ((0 < var_24h && ((*(*(iVar5 + -1 + var_24h) + 0x443e90) & 1) != 0))) {\n                var_24h = var_24h + -1;\n            }\n            iVar1 = *in_ECX;\n            var_10h = NULL;\n            var_24h = iVar5 + -1 + var_24h;\n            var_20h = 1;\n            if (*(iVar1 + 0x1e) != '\\0') {\n                return;\n            }\n            var_8h = in_ECX[0x7e];\n            if (var_8h == NULL) {\n                return;\n            }\n            var_4h = iVar1;\n            var_ch = fcn.0043e8c8();\n            if ((*(iVar1 + 0x7c) == '\\0') || (var_8h[5] = *(iVar1 + 0x78),  *(iVar1 + 0x7c) == '\\0')) {\n                var_1ch = fcn.0043fe38();\n                if (var_1ch == 0) {\n                    return;\n                }\n                fcn.00429b6c(0x2b, 0, 0, 0);\n                iVar5 = var_4h;\n                puVar12 = var_8h;\n                if (var_8h[7] == 0) {\n                    var_14h = 0x44b300;\n                    uVar2 = 0x44b308;\n                }\n                else {\n                    var_14h = 0x44b310;\n                    uVar2 = 0x44b318;\n                }\n                uVar4 = fcn.0041ce3a(0x44b320, uVar2, (var_24h - in_ECX[0x79]) + 1, in_ECX[0x79]);\n                iVar1 = in_ECX[100];\n                uVar2 = *puVar12;\n                iVar10 = in_ECX[0x65];\n                uVar7 = 0x44a684;\n                uVar11 = *(var_ch * 0x10 + *(iVar5 + 8));\n                uVar6 = 0x44b330;\n                uVar8 = var_14h;\n                uVar9 = uVar2;\n                var_18h = uVar4;\n                fcn.00436610(0x44b330, uVar11);\n                fcn.0041c16b(iVar5, var_18h, uVar6, uVar11, uVar7, uVar8, uVar2, uVar9, iVar10, uVar4, iVar1);\n                fcn.004372cc(var_ch);\n                iVar5 = var_4h;\n                uVar11 = 0xffffffff;\n                uVar2 = fcn.0041ce3a(0x44b388, *var_8h);\n                fcn.00429c01(var_1ch, 99, var_ch, 0, 0, uVar2, uVar11);\n                if (*(iVar5 + 0x7c) == '\\0') {\n                    return;\n                }\n            }\n            puVar12 = var_8h;\n            uVar2 = fcn.0041d157();\n            iVar5 = fcn.0041db04(uVar2, puVar12);\n            puVar12 = var_8h;\n            if (iVar5 != 0) {\n                *(var_4h + 0x1e) = 1;\n                return;\n            }\n            in_ECX[0x7e] = 0;\n            *(var_4h + 0x28) = *(var_4h + 0x28) + 1;\n            *(var_4h + 0xc) = *(var_4h + 0xc) | 0x200;\n            if (var_8h[7] != 0) {\n                return;\n            }\n            if (*var_10h == 0) {\n                var_10h = &var_24h;\n            }\n            iVar5 = fcn.0041d127();\n            puVar12[0xb] = iVar5 + 0xd;\n            return;\n        }\n    }\n    fcn.0043ecfb(var_8h, arg_10h);\n    return;\n}\n",
        "token_count": 1577
    },
    "00437b2d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00437b2d(int32_t param_1)\n\n{\n    uint16_t *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t in_EAX;\n    \n    iVar2 = *(in_EAX * 0x10 + 0xc + *(param_1 + 8));\n    if ((*(iVar2 + 0x4a) & 2) != 0) {\n        for (puVar3 = *(iVar2 + 0xc); puVar3 != NULL; puVar3 = *puVar3) {\n            iVar2 = puVar3[2];\n            if (*(iVar2 + 0x1c) != 0) {\n                fcn.00436963(param_1);\n                *(iVar2 + 0xc) = 0;\n                *(iVar2 + 8) = 0;\n            }\n        }\n        puVar1 = *(in_EAX * 0x10 + 0xc + *(param_1 + 8)) + 0x4a;\n        *puVar1 = *puVar1 & 0xfffd;\n    }\n    return;\n}\n",
        "token_count": 252
    },
    "00437bf6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00437bf6(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint *arg_ch_00;\n    int32_t arg_10h_00;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint uVar5;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = *arg_8h;\n    if (*(arg_8h_00 + 0x1e) != '\\0') goto code_r0x00437dd1;\n    if (arg_14h != 0) {\n        *(arg_8h_00 + 0x21) = *(arg_8h_00 + 0x21) + '\\x01';\n    }\n    arg_ch_00 = fcn.00436708(arg_10h, *(arg_ch + 0xc), *(arg_ch + 8));\n    if (arg_14h != 0) {\n        *(arg_8h_00 + 0x21) = *(arg_8h_00 + 0x21) + -1;\n    }\n    if ((arg_ch_00 == NULL) ||\n       ((arg_10h_00 = fcn.0043e8c8(),  (*(arg_ch_00 + 0x22) & 0x10) != 0 && (iVar2 = fcn.00437a3f(),  iVar2 != 0))))\n    goto code_r0x00437dd1;\n    uVar1 = *arg_ch_00;\n    iVar2 = fcn.0041d2b9();\n    if (iVar2 == 0) {\n        uVar5 = 0x44b3dc;\n    }\n    else if (arg_10h == 0) {\n        if (arg_ch_00[7] == 0) goto code_r0x00437cb2;\n        uVar5 = 0x44b41c;\n    }\n    else {\n        if (arg_ch_00[7] != 0) {\ncode_r0x00437cb2:\n            iVar2 = fcn.0043fe38();\n            if (iVar2 != 0) {\n                puVar4 = *(arg_8h_00 + 8) + arg_10h_00 * 0x10;\n                fcn.00439033(1);\n                if ((*(arg_ch_00 + 0x22) & 0x10) != 0) {\n                    fcn.00429bbf(iVar2, 0x7c);\n                }\n                fcn.0043bc37(arg_ch, arg_ch_00);\n                for (iVar3 = fcn.00441b4b(); iVar3 != 0; iVar3 = *(iVar3 + 0x20)) {\n                    fcn.004422ac();\n                }\n                fcn.00436610(0x44b43c, *puVar4);\n                iVar3 = fcn.0043668f(0x449f9c, *(arg_10h_00 * 0x10 + *(arg_8h_00 + 8)));\n                if (iVar3 != 0) {\n                    fcn.00436610(0x44b474, *puVar4);\n                }\n                if (arg_10h == 0) {\n                    if ((*(arg_ch_00 + 0x22) & 0x10) == 0) {\n                        fcn.00437bbb();\n                        goto code_r0x00437d86;\n                    }\ncode_r0x00437d8c:\n                    fcn.00429c01(iVar2, 0x7e, arg_10h_00, 0, 0, *arg_ch_00, 0);\n                }\n                else {\ncode_r0x00437d86:\n                    if ((*(arg_ch_00 + 0x22) & 0x10) != 0) goto code_r0x00437d8c;\n                }\n                fcn.00429c01(iVar2, 0x65, arg_10h_00, 0, 0, *arg_ch_00, 0);\n                fcn.004372cc(arg_10h_00);\n            }\n            fcn.00437b2d(arg_8h_00);\n            goto code_r0x00437dd1;\n        }\n        uVar5 = 0x44b3f8;\n    }\n    fcn.0041d1e3(uVar5, uVar1);\ncode_r0x00437dd1:\n    fcn.00438d01(arg_8h_00);\n    return;\n}\n",
        "token_count": 1093
    },
    "00437ddf": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00437ddf(int32_t *arg_8h, int32_t *arg_ch, int32_t *arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h_00;\n    uint *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_8h_01;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    uchar *puVar6;\n    ulong uVar7;\n    uint var_24h;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = arg_8h[0x7e];\n    arg_8h_00 = *arg_8h;\n    piVar5 = NULL;\n    if ((iVar1 == 0) || (*(arg_8h + 0x83) != '\\0')) goto code_r0x0043805d;\n    if (arg_ch == NULL) {\n        iVar2 = *(iVar1 + 8) + -1;\n        if (iVar2 < 0) goto code_r0x0043805d;\n        if ((arg_10h != NULL) && (*arg_10h != 1)) {\n            fcn.0041d1e3(0x44b4a0, *(iVar2 * 0x18 + *(iVar1 + 0xc)));\n            goto code_r0x0043805d;\n        }\n        var_ch = 1;\n    }\n    else {\n        if ((arg_10h != NULL) && (*arg_10h != *arg_ch)) {\n            fcn.0041d1e3(0x44b4e0);\n            goto code_r0x0043805d;\n        }\n        var_ch = *arg_ch;\n    }\n    iVar2 = in_EAX[1] + 0x25 + var_ch * 8;\n    if ((arg_10h != NULL) && (var_1ch = *arg_10h,  0 < var_1ch)) {\n        do {\n            iVar3 = fcn.0041d157();\n            var_1ch = var_1ch + -1;\n            iVar2 = iVar2 + 1 + iVar3;\n        } while (var_1ch != NULL);\n    }\n    piVar5 = fcn.0041c2f7(iVar2);\n    if (piVar5 != NULL) {\n        *piVar5 = iVar1;\n        piVar5[1] = *(iVar1 + 0x24);\n        piVar4 = piVar5 + var_ch * 2 + 9;\n        piVar5[2] = piVar4;\n        fcn.0044b575(piVar4, *in_EAX, in_EAX[1]);\n        *(piVar4 + in_EAX[1]) = 0;\n        fcn.0041d223();\n        puVar6 = piVar4 + in_EAX[1] + 1;\n        piVar5[5] = var_ch;\n        if (arg_ch == NULL) {\n            piVar5[9] = *(iVar1 + 8) + -1;\n        }\n        else {\n            var_10h = 0;\n            if (0 < var_ch) {\n                var_1ch = piVar5 + 9;\n                do {\n                    var_4h = 0;\n                    if (0 < *(iVar1 + 8)) {\n                        do {\n                            iVar2 = fcn.0041d27e();\n                            if (iVar2 == 0) {\n                                *var_1ch = var_4h;\n                                break;\n                            }\n                            var_4h = var_4h + 1;\n                        } while (var_4h < *(iVar1 + 8));\n                    }\n                    if (*(iVar1 + 8) <= var_4h) {\n                        fcn.0041d1e3(0x44b540, *(var_10h * 0x14 + 4 + arg_ch[3]));\n                        goto code_r0x0043805d;\n                    }\n                    var_10h = var_10h + 1;\n                    var_1ch = var_1ch + 2;\n                } while (var_10h < var_ch);\n            }\n        }\n        if ((arg_10h != NULL) && (0 < var_ch)) {\n            arg_8h = piVar5 + 10;\n            iVar2 = 0;\n            var_1ch = var_ch;\n            do {\n                uVar7 = fcn.0041d157();\n                *arg_8h = puVar6;\n                fcn.0044b575(puVar6, *(iVar2 + 4 + *((uVar7 >> 0x20) + 0xc)), uVar7);\n                arg_8h = arg_8h + 2;\n                iVar2 = iVar2 + 0x14;\n                var_1ch = var_1ch + -1;\n                puVar6[uVar7] = 0;\n                puVar6 = puVar6 + uVar7 + 1;\n            } while (var_1ch != NULL);\n        }\n        *(piVar5 + 0x19) = arg_14h;\n        *(piVar5 + 6) = 0;\n        *(piVar5 + 0x1a) = arg_14h >> 8;\n        piVar4 = piVar5;\n        arg_8h_01 = fcn.0041d157();\n        piVar4 = fcn.0041db04(arg_8h_01, piVar4);\n        if (piVar4 == piVar5) {\n            *(arg_8h_00 + 0x1e) = 1;\n        }\n        else {\n            if (piVar4 != NULL) {\n                piVar5[3] = piVar4;\n                piVar4[4] = piVar5;\n            }\n            *(iVar1 + 0x24) = piVar5;\n            piVar5 = NULL;\n        }\n    }\ncode_r0x0043805d:\n    fcn.0041c16b(arg_8h_00, piVar5);\n    fcn.004327f7(arg_8h_00);\n    fcn.004327f7(arg_8h_00);\n    return;\n}\n",
        "token_count": 1450
    },
    "00438084": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00438084(int32_t arg_8h)\n\n{\n    int32_t arg_ch;\n    int32_t in_EAX;\n    int32_t arg_10h;\n    uint uVar1;\n    int32_t arg_8h_00;\n    uint arg_1ch;\n    int32_t iVar2;\n    int32_t arg_1ch_00;\n    int32_t in_ECX;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_ch = *(in_ECX + 0x44);\n    arg_10h = arg_ch + 1;\n    *(in_ECX + 0x44) = arg_ch + 2;\n    uVar1 = fcn.0043e8c8();\n    arg_8h_00 = fcn.0043fe38();\n    if (arg_8h_00 != 0) {\n        iVar2 = arg_8h;\n        if (arg_8h < 0) {\n            iVar2 = *(in_EAX + 0x14);\n            fcn.00429bea(0x60, iVar2, uVar1);\n        }\n        arg_1ch = fcn.004392af(in_ECX, in_EAX);\n        fcn.00429c01(arg_8h_00, 0x27, arg_10h, iVar2, uVar1, arg_1ch, 0xfffffff0);\n        if (-1 < arg_8h) {\n            fcn.00429e02();\n        }\n        fcn.0043c637(arg_ch, uVar1, 0x26);\n        iVar2 = fcn.00429b6c(0x41, arg_ch, 0, 0);\n        uVar1 = fcn.004349af();\n        arg_1ch_00 = fcn.00439ed7(in_ECX, arg_ch, uVar1, 1);\n        if (*(in_EAX + 0x18) != '\\0') {\n            fcn.00429c01(arg_8h_00, 0x33, arg_10h, *(arg_8h_00 + 0x1c) + 2, *(in_EAX + 4) + arg_1ch_00, arg_1ch_00, \n                         0xfffffff2);\n            fcn.0043908a(2, 0x44b570, 0xfffffffe);\n        }\n        fcn.00429bea(0x46, arg_10h, uVar1);\n        fcn.00429e02();\n        fcn.004349ca();\n        fcn.00429bea(0x43, arg_ch, iVar2 + 1);\n        fcn.00429e14();\n        fcn.00429bd5(0x2b, arg_ch);\n        fcn.00429bd5(0x2b, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 673
    },
    "004381dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl\nfcn.004381dc(int32_t *arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t *arg_18h, int32_t arg_1ch, \n            int32_t arg_20h, int32_t *arg_24h, uint arg_28h, int32_t arg_2ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint extraout_ECX;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    ulong uVar8;\n    uint uVar9;\n    uint uVar10;\n    int32_t iVar11;\n    uint uVar12;\n    uint var_48h;\n    uint var_38h;\n    int32_t var_34h;\n    int32_t *var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    uint *var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t *var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    var_4h = *arg_8h;\n    var_30h = NULL;\n    var_ch = 0;\n    var_10h = NULL;\n    var_1ch = 0;\n    if (((*(var_4h + 0x1e) != '\\0') || (*(arg_8h + 0x83) != '\\0')) || (iVar1 = fcn.0043e7ea(),  iVar1 != 0))\n    goto code_r0x00438866;\n    if (arg_14h == 0) {\n        var_8h = arg_8h[0x7e];\n        if (var_8h == NULL) goto code_r0x00438866;\n        var_14h = fcn.0043e8c8();\n    }\n    else {\n        var_14h = fcn.00436b98();\n        if (var_14h < 0) goto code_r0x00438866;\n        iVar1 = fcn.00436254(0x44b590, var_10h);\n        if (iVar1 != 0) {\n            fcn.00436282(&var_48h, arg_14h);\n        }\n        var_8h = fcn.00436708(0, *(arg_14h + 0xc), *(arg_14h + 8));\n        if ((var_8h == NULL) || (*(var_4h + 0x1e) != '\\0')) goto code_r0x00438866;\n    }\n    piVar3 = var_8h;\n    var_2ch = var_14h * 0x10;\n    puVar5 = *(var_4h + 8) + var_2ch;\n    var_20h = puVar5;\n    iVar1 = fcn.0041d2b9();\n    if ((iVar1 == 0) && (iVar1 = fcn.0044b5ab(*piVar3 + 7, 0x44b598, 9),  iVar1 != 0)) {\n        uVar12 = 0x44b5a4;\n        iVar1 = *piVar3;\n        goto code_r0x00438399;\n    }\n    if (piVar3[7] == 0) {\n        if ((*(piVar3 + 0x22) & 0x10) == 0) {\n            if (var_10h != NULL) {\n                var_ch = fcn.00436ac6();\n                if ((var_ch == 0) || (iVar1 = fcn.00436be4(var_ch),  iVar1 != 0)) goto code_r0x00438866;\n                if ((*(var_4h + 0x7c) == '\\0') && (iVar1 = fcn.0043668f(var_ch, 0),  puVar5 = var_20h,  iVar1 != 0)) {\n                    uVar12 = 0x44b600;\n                    iVar1 = var_ch;\n                }\n                else {\n                    iVar1 = fcn.00436778(var_ch, *puVar5);\n                    if (iVar1 == 0) goto code_r0x004383d5;\n                    if (arg_2ch != 0) goto code_r0x00438866;\n                    uVar12 = 0x44b624;\n                    iVar1 = var_ch;\n                }\ncode_r0x00438399:\n                fcn.0041d1e3(uVar12, iVar1);\n                goto code_r0x00438866;\n            }\n            iVar6 = 1;\n            for (iVar1 = piVar3[4]; iVar1 != 0; iVar1 = *(iVar1 + 0x20)) {\n                iVar6 = iVar6 + 1;\n            }\n            var_ch = fcn.0041ce3a(0x44b63c, *piVar3, iVar6);\n            if (var_ch == 0) goto code_r0x00438866;\ncode_r0x004383d5:\n            if (arg_18h == NULL) {\n                var_38h = *(var_8h[2] * 0x18 + -0x18 + var_8h[3]);\n                var_34h = fcn.0041d157();\n                arg_18h = fcn.00432719();\n                if (arg_18h == NULL) goto code_r0x00438866;\n                fcn.0043279a(arg_8h, 0);\n                *(arg_18h[3] + 0xc) = arg_28h;\n            }\n            iVar1 = *arg_18h;\n            if (0 < iVar1) {\n                piVar3 = arg_18h[3];\n                iVar6 = iVar1;\n                do {\n                    if ((*piVar3 != 0) && (*(*piVar3 + 0x14) != 0)) {\n                        uVar8 = fcn.0041d157();\n                        piVar3 = uVar8 >> 0x20;\n                        var_1ch = var_1ch + 1 + uVar8;\n                    }\n                    piVar3 = piVar3 + 5;\n                    iVar6 = iVar6 + -1;\n                } while (iVar6 != 0);\n            }\n            iVar6 = fcn.0041d157();\n            piVar2 = fcn.0041c2f7(iVar1 * 0xd + iVar6 + 0x39 + var_1ch);\n            piVar3 = piVar2;\n            if (*(var_4h + 0x1e) == '\\0') {\n                piVar7 = piVar2 + 0xd;\n                piVar2[0xb] = piVar7;\n                piVar7 = piVar7 + iVar1;\n                piVar2[2] = piVar7;\n                piVar7 = piVar7 + iVar1;\n                piVar2[3] = piVar7;\n                piVar2[10] = piVar7 + iVar1 + 1;\n                iVar1 = piVar7 + iVar1 + 1 + iVar1;\n                var_24h = iVar1 + 1 + iVar6;\n                *piVar2 = iVar1;\n                fcn.0044b575(iVar1, var_ch, iVar6 + 1);\n                piVar2[4] = var_8h;\n                piVar2[1] = *arg_18h;\n                *(piVar2 + 6) = arg_1ch;\n                var_1ch = 0;\n                *(piVar2 + 0x19) = var_10h == NULL;\n                piVar2[9] = *(var_2ch + 0xc + *(var_4h + 8));\n                piVar7 = arg_18h[3];\n                var_34h = (*(var_20h[3] + 0x48) < 4) - 1;\n                if (0 < *arg_18h) {\n                    do {\n                        var_28h = piVar7[1];\n                        var_18h = 0;\n                        var_20h = var_8h[3];\n                        if (0 < var_8h[2]) {\n                            do {\n                                iVar1 = fcn.0041d27e();\n                                if (iVar1 == 0) break;\n                                var_18h = var_18h + 1;\n                                var_20h = var_20h + 6;\n                            } while (var_18h < var_8h[2]);\n                        }\n                        if (var_8h[2] <= var_18h) {\n                            fcn.0041d1e3(0x44b654, *var_8h, var_28h);\n                            *(arg_8h + 0x12) = 1;\n                            goto code_r0x0043884a;\n                        }\n                        *(piVar2[2] + var_1ch * 4) = var_18h;\n                        if ((*piVar7 == 0) || (*(*piVar7 + 0x14) == 0)) {\n                            var_18h = *(var_18h * 0x18 + 0x10 + var_8h[3]);\n                            if (var_18h == 0) {\n                                var_18h = **(var_4h + 0x2c);\n                            }\n                        }\n                        else {\n                            var_28h = fcn.0041d157();\n                            var_28h = var_28h + 1;\n                            fcn.0044b575(var_24h, extraout_ECX, var_28h);\n                            var_18h = var_24h;\n                            var_24h = var_24h + var_28h;\n                        }\n                        if ((*(var_4h + 0x7c) == '\\0') && (iVar1 = fcn.00437264(var_18h),  iVar1 == 0))\n                        goto code_r0x0043884a;\n                        *(piVar2[0xb] + var_1ch * 4) = var_18h;\n                        *(var_1ch + piVar2[10]) = *(piVar7 + 3) & var_34h;\n                        var_1ch = var_1ch + 1;\n                        piVar7 = piVar7 + 5;\n                    } while (var_1ch < *arg_18h);\n                }\n                fcn.004388ad();\n                if (var_8h == arg_8h[0x7e]) {\n                    for (iVar1 = var_8h[4]; iVar1 != 0; iVar1 = *(iVar1 + 0x20)) {\n                        if (*(iVar1 + 4) == piVar2[1]) {\n                            var_18h = 0;\n                            if (0 < *(iVar1 + 4)) {\n                                iVar6 = piVar2[2];\n                                var_34h = *(iVar1 + 8) - iVar6;\n                                while (iVar4 = var_18h * 4,  piVar7 = iVar4 + iVar6,  *(piVar7 + var_34h) == *piVar7) {\n                                    if (((*(iVar4 + *(iVar1 + 0x2c)) != *(iVar4 + piVar2[0xb])) &&\n                                        (iVar4 = fcn.0041d27e(),  iVar4 != 0)) ||\n                                       (var_18h = var_18h + 1,  *(iVar1 + 4) <= var_18h)) break;\n                                }\n                            }\n                            if (var_18h == *(iVar1 + 4)) {\n                                if (*(iVar1 + 0x18) != *(piVar2 + 6)) {\n                                    if ((*(iVar1 + 0x18) != 'c') && (*(piVar2 + 6) != 'c')) {\n                                        fcn.0041d1e3(0x44b674, 0);\n                                    }\n                                    if (*(iVar1 + 0x18) == 'c') {\n                                        *(iVar1 + 0x18) = *(piVar2 + 6);\n                                    }\n                                }\n                                goto code_r0x0043884a;\n                            }\n                        }\n                    }\n                }\n                iVar1 = var_4h;\n                if (*(var_4h + 0x7c) == '\\0') {\n                    arg_8h[0x12] = arg_8h[0x12] + 1;\n                    var_20h = arg_8h[0x12];\n                    var_1ch = fcn.0043fe38();\n                    if (var_1ch != 0) {\n                        fcn.00439033(1);\n                        fcn.00429bea(0x61, var_14h, var_20h);\n                        iVar6 = 0;\n                        if (arg_20h != 0) {\n                            uVar12 = 0x4435dc;\n                            if (arg_1ch != 0) {\n                                uVar12 = 0x44b6a0;\n                            }\n                            iVar6 = fcn.0041ce3a(0x44b6a8, uVar12, (*arg_24h - *var_10h) + 1, *var_10h);\n                        }\n                        iVar4 = *var_8h;\n                        iVar11 = *piVar2;\n                        uVar10 = 0x44a684;\n                        uVar12 = *(var_2ch + *(iVar1 + 8));\n                        uVar9 = 0x44b6bc;\n                        puVar5 = var_20h;\n                        var_24h = iVar6;\n                        fcn.00436610(0x44b6bc, uVar12);\n                        fcn.0041c16b(iVar1, var_24h, uVar9, uVar12, uVar10, iVar11, iVar4, puVar5, iVar6);\n                        if (arg_14h != 0) {\n                            fcn.00438084(var_20h);\n                            fcn.004372cc(var_14h);\n                            uVar9 = 0xffffffff;\n                            uVar12 = fcn.0041ce3a(0x44b6ec, *piVar2);\n                            fcn.00429c01(var_1ch, 99, var_14h, 0, 0, uVar12, uVar9);\n                            fcn.00429b6c(0x7a, 0, 0, 0);\n                            iVar1 = var_4h;\n                        }\n                        goto code_r0x0043881a;\n                    }\n                }\n                else {\n                    piVar7 = piVar2;\n                    uVar12 = fcn.0041d157();\n                    iVar6 = fcn.0041db04(uVar12, piVar7);\n                    if (iVar6 == 0) {\n                        *(iVar1 + 0xc) = *(iVar1 + 0xc) | 0x200;\n                        if (arg_14h != 0) {\n                            piVar2[5] = *(iVar1 + 0x78);\n                        }\ncode_r0x0043881a:\n                        if ((*(iVar1 + 0x7c) != '\\0') || (arg_14h == 0)) {\n                            if ((arg_1ch == 5) && ((iVar1 = var_8h[4],  iVar1 != 0 && (*(iVar1 + 0x18) != '\\x05')))) {\n                                do {\n                                    iVar6 = iVar1;\n                                    if (*(iVar6 + 0x20) == 0) break;\n                                    iVar1 = *(iVar6 + 0x20);\n                                } while (*(*(iVar6 + 0x20) + 0x18) != '\\x05');\n                                piVar2[8] = *(iVar6 + 0x20);\n                                *(iVar6 + 0x20) = piVar2;\n                            }\n                            else {\n                                piVar2[8] = var_8h[4];\n                                var_8h[4] = piVar2;\n                            }\n                            piVar3 = NULL;\n                            var_30h = piVar2;\n                        }\n                    }\n                    else {\n                        *(iVar1 + 0x1e) = 1;\n                    }\n                }\n            }\ncode_r0x0043884a:\n            if (piVar3 != NULL) {\n                fcn.0041c16b(var_4h, piVar3[7]);\n                fcn.0041c16b(var_4h, piVar3);\n            }\n            goto code_r0x00438866;\n        }\n        uVar12 = 0x44b5dc;\n    }\n    else {\n        uVar12 = 0x44b5c0;\n    }\n    fcn.0041d1e3(uVar12);\ncode_r0x00438866:\n    fcn.004327f7(var_4h);\n    fcn.00438d01(var_4h);\n    fcn.0041c16b(var_4h, var_ch);\n    return var_30h;\n}\n",
        "token_count": 3892
    },
    "004388ad": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004388ad(void)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    uVar1 = *(*(in_EAX + 0x10) + 0x18);\n    puVar2 = *(in_EAX + 0xc);\n    uVar4 = 10;\n    *puVar2 = uVar1;\n    if (uVar1 < 10) {\n        *puVar2 = 10;\n    }\n    iVar3 = 1;\n    if (0 < *(in_EAX + 4)) {\n        do {\n            puVar2[iVar3] = uVar4;\n            if (5 < uVar4) {\n                uVar4 = uVar4 - 1;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 <= *(in_EAX + 4));\n    }\n    if (*(in_EAX + 0x18) != '\\0') {\n        puVar2[*(in_EAX + 4)] = 1;\n    }\n    return;\n}\n",
        "token_count": 255
    },
    "004388eb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004388eb(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t arg_8h_00;\n    uint arg_ch_00;\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t arg_8h_01;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = *arg_8h;\n    if ((*(arg_8h_00 + 0x1e) == '\\0') && (iVar1 = fcn.0043e7ea(),  iVar1 == 0)) {\n        puVar2 = fcn.00436778(*(arg_ch + 0xc), *(arg_ch + 8));\n        if (puVar2 == NULL) {\n            if (arg_10h == 0) {\n                fcn.0041d1e3(0x44b708, arg_ch, 0);\n            }\n            *(arg_8h + 0x12) = 1;\n        }\n        else if (*(puVar2 + 0x19) == '\\0') {\n            iVar1 = fcn.0043e8c8();\n            arg_8h_01 = fcn.0043fe38();\n            if (arg_8h_01 != 0) {\n                fcn.00439033(1);\n                fcn.00436610(0x44b76c, *(iVar1 * 0x10 + *(arg_8h_00 + 8)));\n                arg_ch_00 = *(iVar1 * 0x10 + *(arg_8h_00 + 8));\n                iVar3 = fcn.0043668f(0x449f9c, arg_ch_00);\n                if (iVar3 != 0) {\n                    fcn.00436610(0x44b7a0, arg_ch_00);\n                }\n                fcn.004372cc(iVar1);\n                fcn.00437b80(puVar2[5], iVar1);\n                fcn.00429c01(arg_8h_01, 0x66, iVar1, 0, 0, *puVar2, 0);\n            }\n        }\n        else {\n            fcn.0041d1e3(0x44b720, 0);\n        }\n    }\n    fcn.00438d01(arg_8h_00);\n    return;\n}\n",
        "token_count": 558
    },
    "00438c27": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.00438c27(uint arg_8h, int32_t arg_ch)\n\n{\n    int16_t iVar1;\n    int16_t *in_EAX;\n    int16_t *piVar2;\n    uint uVar3;\n    int32_t unaff_EDI;\n    \n    if (in_EAX == NULL) {\n        in_EAX = fcn.0041c2f7(0x40);\n        if (in_EAX == NULL) {\n            return NULL;\n        }\n        in_EAX[1] = 1;\n    }\n    piVar2 = fcn.00438b5f(unaff_EDI, 1, *in_EAX);\n    if (*(unaff_EDI + 0x1e) == '\\0') {\n        iVar1 = *piVar2;\n        uVar3 = fcn.00436ac6();\n        *(piVar2 + iVar1 * 0x1c + -0x18 + 4) = uVar3;\n        uVar3 = fcn.00436ac6();\n        *(piVar2 + iVar1 * 0x1c + -0x18) = uVar3;\n    }\n    else {\n        fcn.00438d01(unaff_EDI);\n        piVar2 = NULL;\n    }\n    return piVar2;\n}\n",
        "token_count": 293
    },
    "00438cb1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00438cb1(int32_t arg_8h, int16_t *arg_ch)\n\n{\n    int16_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar1 = arg_ch;\n    if ((arg_ch != NULL) && (arg_ch = NULL,  0 < *piVar1)) {\n        piVar2 = piVar1 + 0xc;\n        do {\n            if (-1 < piVar2[2]) {\n                return;\n            }\n            piVar2[2] = *(arg_8h + 0x44);\n            *(arg_8h + 0x44) = *(arg_8h + 0x44) + 1;\n            if (*piVar2 != 0) {\n                fcn.00438cb1(arg_8h, *(*piVar2 + 8));\n            }\n            arg_ch = arg_ch + 1;\n            piVar2 = piVar2 + 0xe;\n        } while (arg_ch < *piVar1);\n    }\n    return;\n}\n",
        "token_count": 234
    },
    "00438d01": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00438d01(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int16_t *unaff_EBX;\n    uint *puVar2;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (unaff_EBX != NULL) {\n        var_4h = 0;\n        puVar2 = unaff_EBX + 4;\n        if (0 < *unaff_EBX) {\n            do {\n                fcn.0041c16b(arg_8h, *puVar2);\n                fcn.0041c16b(arg_8h, puVar2[1]);\n                fcn.0041c16b(arg_8h, puVar2[2]);\n                fcn.0041c16b(arg_8h, puVar2[0xc]);\n                fcn.004369c9(arg_8h, puVar2[3]);\n                iVar1 = puVar2[4];\n                if (iVar1 != 0) {\n                    fcn.0043ebc2(arg_8h, iVar1);\n                    fcn.0041c16b(arg_8h, iVar1);\n                }\n                fcn.00432063(arg_8h, puVar2[7]);\n                fcn.00438aeb(arg_8h);\n                var_4h = var_4h + 1;\n                puVar2 = puVar2 + 0xe;\n            } while (var_4h < *unaff_EBX);\n        }\n        fcn.0041c16b(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 357
    },
    "00438d9e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint16_t * __cdecl\nfcn.00438d9e(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *in_ECX;\n    \n    uVar4 = *in_ECX;\n    if (in_EAX == 0) {\n        if (arg_18h == 0) {\n            if (arg_1ch == 0) goto code_r0x00438df4;\n            uVar1 = 0x44b7d0;\n        }\n        else {\n            uVar1 = 0x44b7cc;\n        }\n        fcn.0041d1e3(0x44b7d8, uVar1);\n    }\n    else {\ncode_r0x00438df4:\n        piVar2 = fcn.00438c27(arg_8h, arg_ch);\n        if ((piVar2 != NULL) && (*piVar2 != 0)) {\n            iVar3 = *piVar2;\n            if (*(arg_10h + 4) != 0) {\n                uVar4 = fcn.00436ac6();\n                *(piVar2 + iVar3 * 0x1c + -0x14) = uVar4;\n            }\n            *(piVar2 + iVar3 * 0x1c + -0x10) = arg_14h;\n            *(piVar2 + iVar3 * 0x1c + -10) = arg_18h;\n            *(piVar2 + iVar3 * 0x1c + -8) = arg_1ch;\n            return piVar2;\n        }\n    }\n    fcn.00432063(uVar4, arg_18h);\n    fcn.00438aeb(uVar4);\n    fcn.0043ecfb(uVar4, arg_14h);\n    return NULL;\n}\n",
        "token_count": 463
    },
    "00438fc7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00438fc7(void)\n\n{\n    uint32_t uVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t unaff_ESI;\n    \n    if (in_EAX[0x68] != NULL) {\n        in_EAX = in_EAX[0x68];\n    }\n    if (in_EAX[0x57] == 0) {\n        iVar2 = fcn.0043fe38();\n        if (iVar2 == 0) {\n            return;\n        }\n        iVar2 = fcn.00429b6c(1, 0, 0, 0);\n        in_EAX[0x57] = iVar2 + 1;\n    }\n    if (-1 < unaff_ESI) {\n        uVar3 = 1 << (unaff_ESI & 0x1f);\n        uVar1 = in_EAX[0x55];\n        if ((uVar3 & uVar1) == 0) {\n            in_EAX[0x55] = uVar1 | uVar3;\n            in_EAX[unaff_ESI + 0x58] = **(*(*in_EAX + 8) + 0xc + unaff_ESI * 0x10);\n        }\n    }\n    return;\n}\n",
        "token_count": 296
    },
    "004390c1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004390c1(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t var_4h;\n    \n    iVar1 = *(arg_ch + 0x10);\n    do {\n        if (iVar1 == 0) {\n            return;\n        }\n        if (arg_10h == 0) {\ncode_r0x00439101:\n            fcn.0043e8c8();\n            fcn.00439033(0);\n            fcn.00438084(0xffffffff);\n        }\n        else {\n            iVar2 = *(iVar1 + 4);\n            var_4h = 0;\n            if (0 < iVar2) {\n                do {\n                    iVar3 = fcn.0041d27e();\n                    if (iVar3 == 0) goto code_r0x00439101;\n                    var_4h = var_4h + 1;\n                } while (var_4h < iVar2);\n            }\n        }\n        iVar1 = *(iVar1 + 0x20);\n    } while( true );\n}\n",
        "token_count": 264
    },
    "00439135": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00439135(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    iVar1 = *arg_8h;\n    if (0 < *(iVar1 + 4)) {\n        piVar2 = *(iVar1 + 8) + 0xc;\n        do {\n            for (puVar3 = *(*piVar2 + 0xc); puVar3 != NULL; puVar3 = *puVar3) {\n                fcn.004390c1(arg_8h, puVar3[2], arg_ch);\n            }\n            var_4h = var_4h + 1;\n            piVar2 = piVar2 + 4;\n        } while (var_4h < *(iVar1 + 4));\n    }\n    return;\n}\n",
        "token_count": 213
    },
    "00439182": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00439182(int32_t *arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint arg_ch_00;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *arg_8h;\n    iVar2 = fcn.0043e7ea();\n    if (iVar2 == 0) {\n        if (arg_ch == 0) {\n            fcn.00439135(arg_8h, 0);\n        }\n        else {\n            if ((arg_10h == NULL) || (*arg_10h == 0)) {\n                iVar2 = fcn.00436ac6();\n                if (iVar2 == 0) {\n                    return;\n                }\n                iVar3 = fcn.0043949d(*(*(*(iVar1 + 8) + 0xc) + 0x49), iVar2, 0);\n                if (iVar3 != 0) {\n                    fcn.00439135(arg_8h, iVar2);\n                    fcn.0041c16b(iVar1, iVar2);\n                    return;\n                }\n                fcn.0041c16b(iVar1);\n            }\n            iVar2 = fcn.00436b98();\n            if ((-1 < iVar2) && (iVar3 = fcn.00436ac6(),  iVar3 != 0)) {\n                arg_ch_00 = *(iVar2 * 0x10 + *(iVar1 + 8));\n                iVar2 = fcn.0043668f(iVar3, arg_ch_00);\n                if (iVar2 == 0) {\n                    iVar2 = fcn.00436778(iVar3, arg_ch_00);\n                    fcn.0041c16b(iVar1, iVar3);\n                    if (iVar2 == 0) {\n                        fcn.0041d1e3(0x44b848);\n                    }\n                    else {\n                        fcn.00439033(0);\n                        fcn.00438084(0xffffffff);\n                    }\n                }\n                else {\n                    fcn.004390c1(arg_8h, iVar2, 0);\n                    fcn.0041c16b(iVar1, iVar3);\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 523
    },
    "004392af": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004392af(uint *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint var_8h;\n    uint *var_4h;\n    \n    iVar1 = *(arg_ch + 4);\n    uVar2 = *arg_8h;\n    puVar3 = fcn.0041c2f7(iVar1 * 5 + 0xc);\n    if (puVar3 != NULL) {\n        *puVar3 = *arg_8h;\n        iVar5 = 0;\n        puVar3[2] = puVar3 + iVar1 + 3;\n        if (0 < iVar1) {\n            var_4h = puVar3 + 3;\n            do {\n                uVar4 = fcn.00437264(*(*(arg_ch + 0x2c) + iVar5 * 4));\n                *var_4h = uVar4;\n                *(iVar5 + puVar3[2]) = *(iVar5 + *(arg_ch + 0x28));\n                iVar5 = iVar5 + 1;\n                var_4h = var_4h + 1;\n            } while (iVar5 < iVar1);\n        }\n        *(puVar3 + 6) = iVar1;\n    }\n    if (arg_8h[0x10] != 0) {\n        fcn.0041c16b(uVar2, puVar3);\n        puVar3 = NULL;\n    }\n    return puVar3;\n}\n",
        "token_count": 359
    },
    "00439342": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00439342(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *unaff_EDI;\n    \n    uVar1 = *unaff_EDI;\n    iVar3 = 0;\n    do {\n        iVar2 = fcn.0043949d(*(iVar3 + 0x444400), uVar1, 0);\n        if (*(iVar2 + 0xc) != 0) {\n            fcn.0044b575();\n            unaff_EDI[4] = 0;\n            return 0;\n        }\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 3);\n    return 1;\n}\n",
        "token_count": 158
    },
    "0043949d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0043949d(uint8_t param_1, int32_t param_2, uint param_3)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (param_2 == 0) {\n        iVar1 = *(in_EAX + 0x2c);\n    }\n    else {\n        iVar1 = fcn.00439413(param_2, param_3);\n    }\n    if (iVar1 != 0) {\n        iVar1 = iVar1 + -0x14 + param_1 * 0x14;\n    }\n    return iVar1;\n}\n",
        "token_count": 137
    },
    "004395a9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.004395a9(int32_t arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    int32_t in_EAX;\n    int16_t *piVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    piVar3 = NULL;\n    var_4h = 0;\n    for (piVar1 = fcn.00439528(arg_ch); piVar1 != NULL; piVar1 = *(piVar1 + 4)) {\n        iVar2 = fcn.004394cd(arg_14h);\n        if (var_4h < iVar2) {\n            piVar3 = piVar1;\n            var_4h = iVar2;\n        }\n    }\n    if (arg_18h == 0) {\n        if ((piVar3 == NULL) || ((*(arg_8h + 0xc) & 0x10000000) != 0)) {\n            var_4h = 0;\n            for (piVar1 = fcn.00439528(arg_ch); piVar1 != NULL; piVar1 = *(piVar1 + 4)) {\n                iVar2 = fcn.004394cd(arg_14h);\n                if (var_4h < iVar2) {\n                    piVar3 = piVar1;\n                    var_4h = iVar2;\n                }\n            }\n        }\n    }\n    else if ((var_4h < 6) || (*piVar3 != arg_10h)) {\n        piVar3 = fcn.0041c2f7(in_EAX + 0x25);\n        if (piVar3 == NULL) {\n            return NULL;\n        }\n        *piVar3 = arg_10h;\n        *(piVar3 + 0xc) = piVar3 + 0x12;\n        *(piVar3 + 1) = arg_14h;\n        fcn.0044b575(piVar3 + 0x12, arg_ch);\n        *(in_EAX + *(piVar3 + 0xc)) = 0;\n        fcn.00439558(arg_8h + 300);\n    }\n    if (piVar3 != NULL) {\n        if (*(piVar3 + 8) != 0) {\n            return piVar3;\n        }\n        if (*(piVar3 + 6) != 0) {\n            return piVar3;\n        }\n        if (arg_18h != 0) {\n            return piVar3;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 602
    },
    "00439825": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00439825(uint param_1, uint *param_2, int32_t param_3)\n\n{\n    uint8_t uVar1;\n    int32_t *in_EAX;\n    ulong uVar2;\n    uint uVar3;\n    uint uVar4;\n    \n    uVar1 = *(param_2 + 0x22);\n    if ((uVar1 & 0x10) == 0) {\ncode_r0x00439846:\n        if ((((uVar1 & 1) == 0) || ((*(*in_EAX + 0xc) & 0x10000) != 0)) || (*(in_EAX + 0x13) != '\\0')) {\n            if ((param_3 != 0) || (param_2[7] == 0)) {\n                return 0;\n            }\n            uVar4 = *param_2;\n            uVar3 = 0x44b898;\n            goto code_r0x00439863;\n        }\n    }\n    else {\n        uVar2 = fcn.0044394b(*in_EAX);\n        param_2 = uVar2 >> 0x20;\n        if (*(**(uVar2 + 4) + 0x34) != 0) goto code_r0x00439846;\n    }\n    uVar4 = *param_2;\n    uVar3 = 0x44b878;\ncode_r0x00439863:\n    fcn.0041d1e3(uVar3, uVar4);\n    return 1;\n}\n",
        "token_count": 344
    },
    "00439940": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00439940(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *var_50h;\n    int32_t var_4ch;\n    uint var_2ch;\n    int32_t var_24h;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint *var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = -1;\n    fcn.0044b531(&var_2ch, 0, 8);\n    var_8h = *arg_8h;\n    if (((arg_8h[0x10] != 0) || (*(var_8h + 0x1e) != '\\0')) ||\n       (puVar1 = fcn.004397e4(),  var_ch = puVar1,  puVar1 == NULL)) goto code_r0x00439ccb;\n    var_1ch = fcn.004423f4(0x6a, 0, 0);\n    var_20h = puVar1[7] != 0;\n    iVar2 = fcn.00437a3f();\n    if ((iVar2 != 0) || (iVar2 = fcn.00439825(var_1ch != 0),  iVar2 != 0)) goto code_r0x00439ccb;\n    var_18h = fcn.0043e8c8();\n    iVar2 = arg_8h[0x11];\n    *(arg_ch + 0x20) = iVar2;\n    arg_8h[0x11] = arg_8h[0x11] + 1;\n    iVar5 = arg_8h[0x11];\n    for (iVar4 = puVar1[4]; iVar4 != 0; iVar4 = *(iVar4 + 0x20)) {\n        iVar5 = iVar5 + 1;\n        arg_8h[0x11] = iVar5;\n    }\n    var_10h = iVar2;\n    var_4h = fcn.0043fe38();\n    if (var_4h == 0) goto code_r0x00439ccb;\n    if (*(arg_8h + 0x13) == '\\0') {\n        *(var_4h + 99) = 1;\n    }\n    fcn.00439033(1);\n    if (var_20h != 0) {\n        fcn.0043988a(arg_8h, var_ch, arg_10h, iVar2);\n    }\n    fcn.0044b531(&var_50h, 0, 0x24);\n    var_50h = arg_8h;\n    var_4ch = arg_ch;\n    iVar2 = fcn.00431867();\n    if (iVar2 != 0) goto code_r0x00439ccb;\n    if ((*(var_8h + 0xc) & 0x1000) != 0) {\n        arg_8h[0x12] = arg_8h[0x12] + 1;\n        var_14h = arg_8h[0x12];\n        fcn.00429b6c(7, 0, var_14h, 0);\n    }\n    puVar1 = var_ch;\n    if (((arg_10h == 0) && (var_1ch == 0)) && ((*(var_ch + 0x22) & 0x10) == 0)) {\n        if ((*(*arg_8h + 0xc) & 0x4000000) == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = fcn.0043c017(var_ch, 0, 0);\n        }\n        if (iVar2 != 0) goto code_r0x00439b09;\n        fcn.00429c01(var_4h, 0x60, puVar1[5], var_18h, var_14h, *puVar1, 0xfffffffe);\n        for (iVar2 = puVar1[4]; iVar2 != 0; iVar2 = *(iVar2 + 0x20)) {\n            fcn.00429bea(0x60, *(iVar2 + 0x14), var_18h);\n        }\n    }\n    else {\ncode_r0x00439b09:\n        iVar2 = arg_8h[0x12];\n        iVar5 = iVar2 + 1;\n        arg_8h[0x12] = iVar2 + 2;\n        var_18h = iVar5;\n        fcn.00429b6c(10, 0, iVar5, 0);\n        var_24h = fcn.00446af4(arg_8h, arg_ch, arg_10h, 0, 8);\n        if (var_24h == 0) goto code_r0x00439ccb;\n        uVar3 = fcn.004333de(puVar1, 0xffffffff, var_10h, iVar2 + 2);\n        fcn.00429bea(0x69, iVar5, uVar3);\n        if ((*(var_8h + 0xc) & 0x1000) != 0) {\n            fcn.00429b6c(0x14, var_14h, 1, 0);\n        }\n        fcn.00447218();\n        var_24h = fcn.00429c62();\n        if (var_20h == 0) {\n            fcn.0043d96d(var_10h);\n            puVar1 = var_ch;\n        }\n        iVar2 = var_18h + 1;\n        var_18h = fcn.00429b6c(0x6a, var_18h, var_24h, iVar2);\n        if ((*(puVar1 + 0x22) & 0x10) == 0) {\n            fcn.00439ce8(arg_8h, puVar1, var_10h, iVar2, *(arg_8h + 0x13) == '\\0', var_1ch, 99);\n        }\n        else {\n            uVar3 = fcn.0044394b(var_8h);\n            fcn.004442c4(puVar1);\n            fcn.00429c01(var_4h, 0x85, 0, 1, iVar2, uVar3, 0xfffffff6);\n            fcn.00439076();\n        }\n        fcn.00429b6c(1, 0, var_18h, 0);\n        fcn.00429caf();\n        if ((var_20h == 0) && ((*(puVar1 + 0x22) & 0x10) == 0)) {\n            iVar5 = var_10h;\n            for (iVar2 = puVar1[4]; iVar2 != 0; iVar2 = *(iVar2 + 0x20)) {\n                iVar5 = iVar5 + 1;\n                fcn.00429bea(0x2b, iVar5, *(iVar2 + 0x14));\n            }\n            fcn.00429bd5(0x2b, var_10h);\n        }\n    }\n    if ((((*(var_8h + 0xc) & 0x1000) != 0) && (*(arg_8h + 0x13) == '\\0')) && (arg_8h[0x69] == 0)) {\n        fcn.00429b6c(0x10, var_14h, 1, 0);\n        fcn.0042a4ca();\n        fcn.0042a521(0, 0, 0x44b8c0, 0);\n    }\ncode_r0x00439ccb:\n    fcn.00438d01(var_8h);\n    fcn.00432063(var_8h, arg_10h);\n    return;\n}\n",
        "token_count": 1863
    },
    "00439ce8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00439ce8(int32_t *arg_8h, uint *arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, int32_t arg_1ch, uint arg_20h)\n\n{\n    int32_t arg_8h_00;\n    uint arg_28h;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    arg_8h_00 = arg_8h[3];\n    arg_28h = fcn.00429c62();\n    fcn.00429b6c(0x34, arg_10h, arg_28h, arg_14h);\n    if ((*(*arg_8h + 0xc) & 0x4000000) == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.0043c017(arg_ch, 0, 0);\n    }\n    if ((iVar1 != 0) || (arg_1ch != 0)) {\n        uVar2 = fcn.00442914(arg_8h, 0, 0, 3, arg_ch, arg_20h);\n        uVar3 = fcn.0043bf6b(arg_8h);\n        var_4h = arg_8h[0x12] + 1;\n        arg_8h[0x12] = arg_8h[0x12] + 1 + arg_ch[2];\n        fcn.00429bea(0xe, arg_14h, var_4h);\n        var_ch = 0;\n        if (0 < arg_ch[2]) {\n            do {\n                if (((uVar2 | uVar3) == 0xffffffff) || (((uVar2 | uVar3) & 1 << (var_ch & 0x1f)) != 0)) {\n                    fcn.0043337f(arg_8h_00, arg_10h, var_ch + 1 + var_4h);\n                }\n                var_ch = var_ch + 1;\n            } while (var_ch < arg_ch[2]);\n        }\n        fcn.004428c7(arg_8h, arg_1ch, 0x6a, 0, 1, arg_ch, var_4h, arg_20h, arg_28h);\n        fcn.00429b6c(0x34, arg_10h, arg_28h, arg_14h);\n        fcn.0043bd14(arg_8h, arg_ch, var_4h, 0);\n    }\n    if (arg_ch[7] == 0) {\n        fcn.00439e81(arg_10h, 0);\n        fcn.00429bea(0x39, arg_10h, arg_18h != 0);\n        if (arg_18h != 0) {\n            fcn.00429f87(arg_8h_00, *arg_ch, 0xfffffffe);\n        }\n    }\n    fcn.0043c555(arg_ch, 0, var_4h);\n    fcn.004428c7(arg_8h, arg_1ch, 0x6a, 0, 2, arg_ch, var_4h, arg_20h, arg_28h);\n    fcn.00429caf();\n    return;\n}\n",
        "token_count": 793
    },
    "00439e81": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00439e81(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint unaff_EDI;\n    int32_t *var_4h;\n    \n    iVar2 = *(in_EAX + 0x10);\n    if (iVar2 != 0) {\n        var_4h = arg_ch;\n        iVar3 = arg_8h;\n        do {\n            iVar3 = iVar3 + 1;\n            if ((arg_ch == NULL) || (*var_4h != 0)) {\n                uVar1 = fcn.00439ed7(unaff_EDI, arg_8h, 0, 0);\n                fcn.00429b6c(0x47, iVar3, uVar1, *(iVar2 + 4) + 1);\n            }\n            var_4h = var_4h + 1;\n            iVar2 = *(iVar2 + 0x20);\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 252
    },
    "00439ed7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00439ed7(int32_t arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_ch_00;\n    int32_t unaff_EBX;\n    uint arg_10h_00;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = *(arg_8h + 0xc);\n    iVar1 = *(unaff_EBX + 4);\n    iVar2 = *(unaff_EBX + 0x10);\n    iVar4 = fcn.004349fe();\n    fcn.00429bea(0x3d, arg_ch, iVar4 + iVar1);\n    var_ch = 0;\n    var_8h = iVar4;\n    if (0 < iVar1) {\n        do {\n            iVar3 = *(*(unaff_EBX + 8) + var_ch * 4);\n            if (iVar3 == *(iVar2 + 4)) {\n                fcn.00429bea(0xf, iVar4 + iVar1);\n            }\n            else {\n                fcn.00429b6c(0x1c, arg_ch, iVar3, var_8h);\n                if (*(iVar2 + 0x1c) == 0) {\n                    fcn.00442978();\n                }\n            }\n            var_ch = var_ch + 1;\n            var_8h = var_8h + 1;\n        } while (var_ch < iVar1);\n    }\n    if (arg_14h != 0) {\n        fcn.00429b6c(0x1e, iVar4, iVar1 + 1, arg_10h);\n        arg_10h_00 = 0;\n        arg_ch_00 = fcn.0043c670();\n        fcn.00429f87(arg_8h_00, arg_ch_00, arg_10h_00);\n    }\n    fcn.00434a22();\n    return iVar4;\n}\n",
        "token_count": 521
    },
    "0043a19f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a19f(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    uint32_t uVar6;\n    bool bVar7;\n    bool bVar8;\n    uint32_t uStack36;\n    uint8_t *puStack28;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    \n    bVar7 = false;\n    if (*(arg_10h[1] + 0x1e) == '\\x05') {\n        return;\n    }\n    if ((arg_ch == 3) && (*(arg_10h[2] + 0x1e) == '\\x05')) {\n        return;\n    }\n    cVar2 = *(*arg_10h + 0x1e);\n    uStack16 = fcn.004290ba();\n    uStack12 = uStack16 >> 0x1f;\n    if (cVar2 == '\\x04') {\n        uStack36 = fcn.00429a62();\n        puStack28 = fcn.0042b7f5();\n        if (puStack28 == NULL) {\n            return;\n        }\n    }\n    else {\n        puStack28 = fcn.0042b828(*arg_10h);\n        if (puStack28 == NULL) {\n            return;\n        }\n        uStack36 = 0;\n        if ((uStack12 < 1) && (uStack12 < 0)) {\n            uVar1 = *puStack28;\n            puVar5 = puStack28;\n            while (uVar1 != 0) {\n                uVar1 = *puVar5;\n                puVar5 = puVar5 + 1;\n                if (0xbf < uVar1) {\n                    for (; (*puVar5 & 0xc0) == 0x80; puVar5 = puVar5 + 1) {\n                    }\n                }\n                uStack36 = uStack36 + 1;\n                uVar1 = *puVar5;\n            }\n        }\n    }\n    if (arg_ch == 3) {\n        uVar3 = fcn.004290ba();\n        uVar6 = uVar3 >> 0x1f;\n        if ((-1 < uVar3 || uVar6 < 0) && (uVar6 < 0)) {\n            bVar7 = uVar3 != 0;\n            uVar3 = -uVar3;\n            uVar6 = -(uVar6 + bVar7);\n            bVar7 = true;\n        }\n    }\n    else {\n        uVar3 = *(*(arg_8h + 8) + 0x48);\n        uVar6 = uVar3 >> 0x1f;\n    }\n    if (uStack12 < 1) {\n        if (uStack12 < 0) {\n            bVar8 = CARRY4(uStack16, uStack36);\n            uStack16 = uStack16 + uStack36;\n            uStack12 = uStack12 + (uStack36 >> 0x1f) + bVar8;\n            if ((uStack12 < 1) && (uStack12 < 0)) {\n                bVar8 = CARRY4(uVar3, uStack16);\n                uVar3 = uVar3 + uStack16;\n                uVar6 = uVar6 + uStack12 + bVar8;\n                if ((uVar6 < 1) && (uVar6 < 0)) {\n                    uVar3 = 0;\n                    uVar6 = 0;\n                }\n                uStack16 = 0;\n                uStack12 = 0;\n            }\n            goto code_r0x0043a2f8;\n        }\n        if ((uStack12 < 0) || ((uStack12 < 1 && (uStack16 == 0)))) {\n            if ((-1 < uVar6) && ((0 < uVar6 || (uVar3 != 0)))) {\n                bVar8 = uVar3 != 0;\n                uVar3 = uVar3 - 1;\n                uVar6 = (uVar6 - 1) + bVar8;\n            }\n            goto code_r0x0043a2f8;\n        }\n    }\n    bVar8 = uStack16 != 0;\n    uStack16 = uStack16 - 1;\n    uStack12 = (uStack12 - 1) + bVar8;\ncode_r0x0043a2f8:\n    if (bVar7) {\n        bVar7 = uStack16 < uVar3;\n        uStack16 = uStack16 - uVar3;\n        uStack12 = (uStack12 - uVar6) - bVar7;\n        if ((uStack12 < 1) && (uStack12 < 0)) {\n            bVar7 = CARRY4(uVar3, uStack16);\n            uVar3 = uVar3 + uStack16;\n            uStack16 = 0;\n            uVar6 = uVar6 + uStack12 + bVar7;\n            uStack12 = 0;\n        }\n    }\n    if (cVar2 == '\\x04') {\n        iVar4 = fcn.004293c1(puStack28 + uStack16, 0);\n        if (iVar4 == 0x12) {\n            fcn.0042b897();\n        }\n    }\n    else {\n        for (; (uVar1 = *puStack28,  uVar1 != 0 && ((uStack16 | uStack12) != 0)); uStack16 = uStack16 - 1) {\n            puStack28 = puStack28 + 1;\n            if (0xbf < uVar1) {\n                for (; (*puStack28 & 0xc0) == 0x80; puStack28 = puStack28 + 1) {\n                }\n            }\n            uStack12 = (uStack12 - 1) + (uStack16 != 0);\n        }\n        uVar1 = *puStack28;\n        puVar5 = puStack28;\n        for (; (uVar1 != 0 && ((uVar3 | uVar6) != 0)); uVar3 = uVar3 - 1) {\n            uVar1 = *puVar5;\n            puVar5 = puVar5 + 1;\n            if (0xbf < uVar1) {\n                for (; (*puVar5 & 0xc0) == 0x80; puVar5 = puVar5 + 1) {\n                }\n            }\n            uVar6 = (uVar6 - 1) + (uVar3 != 0);\n            uVar1 = *puVar5;\n        }\n        fcn.0042b87a(puStack28);\n    }\n    return;\n}\n",
        "token_count": 1531
    },
    "0043a477": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a477(uint arg_8h, uint noname_1, uint *arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    \n    iVar2 = fcn.0042b828(*arg_10h);\n    uVar3 = fcn.00429a62();\n    if ((iVar2 != 0) && (puVar4 = fcn.0043a435(uVar3 + 1, (uVar3 >> 0x1f) + (0xfffffffe < uVar3)),  puVar4 != NULL)) {\n        fcn.0044b575(puVar4, iVar2, uVar3 + 1);\n        uVar1 = *puVar4;\n        puVar5 = puVar4;\n        while (uVar1 != 0) {\n            *puVar5 = ~(*(*puVar5 + 0x443e90) & 0x20) & *puVar5;\n            puVar5 = puVar5 + 1;\n            uVar1 = *puVar5;\n        }\n        fcn.0042b87a(puVar4);\n    }\n    return;\n}\n",
        "token_count": 290
    },
    "0043a4fa": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a4fa(uint arg_8h, uint noname_1, uint *arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    \n    iVar2 = fcn.0042b828(*arg_10h);\n    uVar3 = fcn.00429a62();\n    if ((iVar2 != 0) && (puVar4 = fcn.0043a435(uVar3 + 1, (uVar3 >> 0x1f) + (0xfffffffe < uVar3)),  puVar4 != NULL)) {\n        fcn.0044b575(puVar4, iVar2, uVar3 + 1);\n        uVar1 = *puVar4;\n        puVar5 = puVar4;\n        while (uVar1 != 0) {\n            *puVar5 = *(*puVar5 + 0x443d90);\n            puVar5 = puVar5 + 1;\n            uVar1 = *puVar5;\n        }\n        fcn.0042b87a(puVar4);\n    }\n    return;\n}\n",
        "token_count": 277
    },
    "0043a65d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Type propagation algorithm not settling\n\nbool __cdecl fcn.0043a65d(char *arg_8h, uint8_t *arg_ch, uint8_t *arg_10h, uint32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    bool bVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint8_t *arg_10h_00;\n    uint8_t *arg_ch_00;\n    char *arg_8h_00;\n    bool bVar11;\n    bool bVar12;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    uVar1 = arg_10h[1];\n    uVar2 = *arg_10h;\n    uVar3 = arg_10h[2];\n    uVar4 = arg_10h[3];\n    arg_10h_00 = arg_10h;\ncode_r0x0043a7e1:\n    bVar5 = false;\ncode_r0x0043a7e5:\n    while( true ) {\n        uVar10 = fcn.0041d0c9(&arg_8h);\n        if (uVar10 == 0) {\n            return *arg_ch == 0;\n        }\n        if (!bVar5) break;\ncode_r0x0043a6b9:\n        if (uVar10 == uVar3) {\n            iVar6 = 0;\n            iVar7 = fcn.0041d0c9(&arg_ch);\n            if (iVar7 == 0) {\n                return false;\n            }\n            iVar8 = fcn.0041d0c9(&arg_8h);\n            bVar11 = iVar8 == 0x5e;\n            if (bVar11) {\n                iVar8 = fcn.0041d0c9(&arg_8h);\n            }\n            bVar12 = iVar8 == 0x5d;\n            if (bVar12) {\n                iVar8 = fcn.0041d0c9(&arg_8h);\n            }\n            bVar12 = bVar12 && iVar7 == 0x5d;\n            if (iVar8 == 0) {\n                return false;\n            }\n            do {\n                if (iVar8 == 0x5d) break;\n                if ((((iVar8 == 0x2d) && (*arg_8h != ']')) && (*arg_8h != '\\0')) && (0 < iVar6)) {\n                    iVar8 = fcn.0041d0c9(&arg_8h);\n                    if ((iVar6 <= iVar7) && (iVar7 <= iVar8)) {\n                        bVar12 = true;\n                    }\n                    iVar6 = 0;\n                }\n                else {\n                    iVar6 = iVar8;\n                    if (iVar7 == iVar8) {\n                        bVar12 = true;\n                    }\n                }\n                iVar8 = fcn.0041d0c9(&arg_8h);\n            } while (iVar8 != 0);\n            if (iVar8 == 0) {\n                return false;\n            }\n            arg_10h_00 = arg_10h;\n            if (bVar11 == bVar12) {\n                return false;\n            }\n        }\n        else {\n            if ((arg_14h != uVar10) || (bVar5)) goto code_r0x0043a7ab;\n            bVar5 = true;\n        }\n    }\n    if (uVar10 != uVar2) {\n        if (uVar10 != uVar1) goto code_r0x0043a6b9;\n        iVar6 = fcn.0041d0c9(&arg_ch);\n        if (iVar6 == 0) {\n            return false;\n        }\n        goto code_r0x0043a7e5;\n    }\n    while ((uVar10 = fcn.0041d0c9(&arg_8h),  uVar10 == uVar2 || (uVar10 == uVar1))) {\n        if ((uVar10 == uVar1) && (iVar6 = fcn.0041d0c9(&arg_ch),  iVar6 == 0)) {\n            return false;\n        }\n    }\n    if (uVar10 == 0) {\n        return true;\n    }\n    if (uVar10 == arg_14h) {\n        uVar10 = fcn.0041d0c9(&arg_8h);\n        if (uVar10 == 0) {\n            return false;\n        }\n    }\n    else if (uVar10 == uVar3) {\n        arg_ch_00 = arg_ch;\n        if (*arg_ch != 0) {\n            arg_8h_00 = arg_8h + -1;\n            do {\n                iVar6 = fcn.0043a65d(arg_8h_00, arg_ch_00, arg_10h_00, arg_14h);\n                if (iVar6 != 0) break;\n                uVar1 = *arg_ch_00;\n                arg_ch_00 = arg_ch_00 + 1;\n                if (0xbf < uVar1) {\n                    for (; (*arg_ch_00 & 0xc0) == 0x80; arg_ch_00 = arg_ch_00 + 1) {\n                    }\n                }\n            } while (*arg_ch_00 != 0);\n        }\n        return *arg_ch_00 != 0;\n    }\n    uVar9 = fcn.0041d0c9(&arg_ch);\n    do {\n        if (uVar9 == 0) {\n            return false;\n        }\n        if (uVar4 == 0) {\n            if (uVar9 == 0) {\n                return false;\n            }\n            do {\n                if (uVar9 == uVar10) break;\n                uVar9 = fcn.0041d0c9(&arg_ch);\n            } while (uVar9 != 0);\n        }\n        else {\n            if (uVar9 < 0x80) {\n                uVar9 = *(uVar9 + 0x443d90);\n            }\n            if (uVar10 < 0x80) {\n                uVar10 = *(uVar10 + 0x443d90);\n            }\n            if (uVar9 == 0) {\n                return false;\n            }\n            do {\n                if (uVar9 == uVar10) break;\n                uVar9 = fcn.0041d0c9(&arg_ch);\n                if (uVar9 < 0x80) {\n                    uVar9 = *(uVar9 + 0x443d90);\n                }\n            } while (uVar9 != 0);\n        }\n        if (uVar9 == 0) {\n            return false;\n        }\n        iVar6 = fcn.0043a65d(arg_8h, arg_ch, arg_10h_00, arg_14h);\n        if (iVar6 != 0) {\n            return true;\n        }\n        uVar9 = fcn.0041d0c9(&arg_ch);\n    } while( true );\ncode_r0x0043a7ab:\n    uVar9 = fcn.0041d0c9(&arg_ch);\n    if (uVar4 != 0) {\n        if (uVar10 < 0x80) {\n            uVar10 = *(uVar10 + 0x443d90);\n        }\n        if (uVar9 < 0x80) {\n            uVar9 = *(uVar9 + 0x443d90);\n        }\n    }\n    if (uVar10 != uVar9) {\n        return false;\n    }\n    goto code_r0x0043a7e1;\n}\n",
        "token_count": 1758
    },
    "0043a971": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a971(int32_t *arg_8h, int32_t arg_ch, uint *arg_10h)\n\n{\n    int32_t arg_8h_00;\n    int32_t arg_ch_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar2 = arg_8h[2];\n    arg_8h_00 = fcn.0042b828(*arg_10h);\n    arg_ch_00 = fcn.0042b828(arg_10h[1]);\n    iVar1 = fcn.00429a62();\n    if (*(iVar2 + 0x68) < iVar1) {\n        uVar3 = 0x44b8f4;\ncode_r0x0043a9ae:\n        fcn.0042b836(uVar3);\n    }\n    else {\n        if (arg_ch == 3) {\n            iVar2 = fcn.0042b828(arg_10h[2]);\n            if (iVar2 == 0) {\n                return;\n            }\n            iVar2 = fcn.0041d127();\n            if (iVar2 != 1) {\n                uVar3 = 0x44b918;\n                goto code_r0x0043a9ae;\n            }\n            var_4h = fcn.0041d0c9(&var_4h);\n        }\n        if ((arg_ch_00 != 0) && (arg_8h_00 != 0)) {\n            fcn.0043a65d(arg_8h_00, arg_ch_00, *(*arg_8h + 4), var_4h);\n            fcn.0042b851();\n        }\n    }\n    return;\n}\n",
        "token_count": 409
    },
    "0043aacd": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043aacd(uint arg_8h, uint noname_1, int32_t *arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uchar *puVar5;\n    char *pcVar6;\n    char cVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    bool bVar10;\n    ulong uVar11;\n    \n    uVar1 = *(*arg_10h + 0x1e);\n    if (uVar1 != 0) {\n        if (uVar1 < 3) {\n            fcn.00429359();\n            return;\n        }\n        if (uVar1 == 3) {\n            pcVar6 = fcn.0042b828(*arg_10h);\n            if (pcVar6 == NULL) {\n                return;\n            }\n            uVar3 = 0;\n            uVar9 = 0;\n            iVar2 = 0;\n            cVar7 = *pcVar6;\n            while (cVar7 != '\\0') {\n                if (cVar7 == '\\'') {\n                    bVar10 = 0xfffffffe < uVar9;\n                    uVar9 = uVar9 + 1;\n                    iVar2 = iVar2 + bVar10;\n                }\n                uVar3 = uVar3 + 1;\n                cVar7 = pcVar6[uVar3];\n            }\n            puVar4 = fcn.0043a435(uVar3 + uVar9 + 3, \n                                  (uVar3 >> 0x1f) + iVar2 + CARRY4(uVar3, uVar9) + (0xfffffffc < uVar3 + uVar9));\n            if (puVar4 == NULL) {\n                return;\n            }\n            *puVar4 = 0x27;\n            iVar2 = 1;\n            for (; *pcVar6 != '\\0'; pcVar6 = pcVar6 + 1) {\n                puVar4[iVar2] = *pcVar6;\n                iVar8 = iVar2 + 1;\n                if (*pcVar6 == '\\'') {\n                    puVar4[iVar8] = 0x27;\n                    iVar8 = iVar2 + 2;\n                }\n                iVar2 = iVar8;\n            }\n            puVar4[iVar2] = 0x27;\n            puVar4[iVar2 + 1] = 0;\n            goto code_r0x0043ac29;\n        }\n        if (uVar1 == 4) {\n            iVar2 = fcn.0042b7f5();\n            uVar3 = fcn.00429a62();\n            uVar11 = fcn.0044b8cd(uVar3 + 2, (uVar3 >> 0x1f) + (0xfffffffd < uVar3), 2, 0);\n            puVar4 = fcn.0043a435(uVar11);\n            if (puVar4 == NULL) {\n                return;\n            }\n            iVar8 = 0;\n            if (0 < uVar3) {\n                puVar5 = puVar4 + 3;\n                do {\n                    puVar5[-1] = *((*(iVar8 + iVar2) >> 4) + 0x444410);\n                    *puVar5 = *((*(iVar8 + iVar2) & 0xf) + 0x444410);\n                    iVar8 = iVar8 + 1;\n                    puVar5 = puVar5 + 2;\n                } while (iVar8 < uVar3);\n            }\n            puVar4[uVar3 * 2 + 2] = 0x27;\n            puVar4[uVar3 * 2 + 3] = 0;\n            *puVar4 = 0x58;\n            puVar4[1] = 0x27;\n            fcn.0042b87a(puVar4);\n            fcn.0041c110(puVar4);\n            return;\n        }\n    }\n    puVar4 = 0x44a2c8;\ncode_r0x0043ac29:\n    fcn.0042b87a(puVar4);\n    return;\n}\n",
        "token_count": 927
    },
    "0043ad0a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ad0a(int32_t arg_8h, uint noname_1, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    char *pcVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    bool bVar13;\n    int32_t iStack52;\n    uint32_t uStack16;\n    int32_t iStack12;\n    \n    iVar1 = fcn.0042b828(*arg_10h);\n    if (iVar1 != 0) {\n        iVar2 = fcn.00429a62();\n        pcVar3 = fcn.0042b828(arg_10h[1]);\n        if (pcVar3 != NULL) {\n            if (*pcVar3 == '\\0') {\n                fcn.00429359();\n            }\n            else {\n                iVar4 = fcn.00429a62();\n                iVar5 = fcn.0042b828(arg_10h[2]);\n                if (iVar5 != 0) {\n                    iVar6 = fcn.00429a62();\n                    uStack16 = iVar2 + 1;\n                    iStack12 = uStack16 >> 0x1f;\n                    iVar7 = fcn.0043a435(uStack16, iStack12);\n                    if (iVar7 != 0) {\n                        iVar12 = 0;\n                        iStack52 = 0;\n                        if (-1 < iVar2 - iVar4) {\n                            do {\n                                pcVar8 = iStack52 + iVar1;\n                                if ((*pcVar8 == *pcVar3) && (iVar9 = fcn.0044b5ab(pcVar8, pcVar3, iVar4),  iVar9 == 0))\n                                {\n                                    uVar10 = iVar6 - iVar4;\n                                    bVar13 = CARRY4(uStack16, uVar10);\n                                    uStack16 = uStack16 + uVar10;\n                                    iStack12 = iStack12 + (uVar10 >> 0x1f) + bVar13;\n                                    uVar10 = *(*(arg_8h + 8) + 0x48);\n                                    iVar11 = uVar10 >> 0x1f;\n                                    iVar9 = iStack12 - (uStack16 == 0);\n                                    if ((iVar11 < iVar9) || ((iVar11 <= iVar9 && (uVar10 < uStack16 - 1)))) {\n                                        fcn.0042b897();\ncode_r0x0043aedc:\n                                        fcn.0041c110(iVar7);\n                                        return;\n                                    }\n                                    iVar9 = fcn.0041c2c2(iVar7);\n                                    if (iVar9 == 0) {\n                                        fcn.0042b8b7();\n                                        goto code_r0x0043aedc;\n                                    }\n                                    fcn.0044b575(iVar12 + iVar9, iVar5, iVar6);\n                                    iStack52 = iStack52 + -1 + iVar4;\n                                    iVar12 = iVar12 + iVar6;\n                                    iVar7 = iVar9;\n                                }\n                                else {\n                                    *(iVar12 + iVar7) = *pcVar8;\n                                    iVar12 = iVar12 + 1;\n                                }\n                                iStack52 = iStack52 + 1;\n                            } while (iStack52 <= iVar2 - iVar4);\n                        }\n                        fcn.0044b575(iVar12 + iVar7, iStack52 + iVar1, iVar2 - iStack52);\n                        *(iVar12 + (iVar2 - iStack52) + iVar7) = 0;\n                        fcn.0042b87a(iVar7);\n                    }\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 857
    },
    "0043aeee": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043aeee(int32_t *arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t iVar8;\n    int32_t unaff_EDI;\n    int32_t iVar9;\n    ulong uVar10;\n    int32_t iStack36;\n    \n    if (*(*arg_10h + 0x1e) == '\\x05') {\n        return;\n    }\n    iVar2 = fcn.0042b828(*arg_10h);\n    if (iVar2 == 0) {\n        return;\n    }\n    fcn.00429a62();\n    iVar2 = 1;\n    if (arg_ch == 1) {\n        iVar8 = 0x444420;\n    }\n    else {\n        puVar3 = fcn.0042b828(arg_10h[1]);\n        if (puVar3 == NULL) {\n            return;\n        }\n        iVar2 = 0;\n        puVar4 = puVar3;\n        if (*puVar3 == 0) goto code_r0x0043b0b1;\n        do {\n            uVar1 = *puVar4;\n            puVar4 = puVar4 + 1;\n            if (0xbf < uVar1) {\n                for (; (*puVar4 & 0xc0) == 0x80; puVar4 = puVar4 + 1) {\n                }\n            }\n            iVar2 = iVar2 + 1;\n        } while (*puVar4 != 0);\n        if (iVar2 < 1) goto code_r0x0043b0b1;\n        uVar10 = fcn.0044b8cd(iVar2, iVar2 >> 0x1f, 5, 0);\n        iVar8 = fcn.0043a435(uVar10);\n        if (iVar8 == 0) {\n            return;\n        }\n        unaff_EBX = iVar8 + iVar2 * 4;\n        iVar2 = 0;\n        if (*puVar3 == 0) goto code_r0x0043b0b1;\n        do {\n            *(iVar8 + iVar2 * 4) = puVar3;\n            uVar1 = *puVar3;\n            puVar3 = puVar3 + 1;\n            if (0xbf < uVar1) {\n                for (; (*puVar3 & 0xc0) == 0x80; puVar3 = puVar3 + 1) {\n                }\n            }\n            *(iVar2 + unaff_EBX) = puVar3 - *(iVar8 + iVar2 * 4);\n            iVar2 = iVar2 + 1;\n        } while (*puVar3 != 0);\n        if (iVar2 < 1) goto code_r0x0043b0b1;\n    }\n    uVar6 = *(*arg_8h + 4);\n    if ((uVar6 & 1) != 0) {\n        while ((0 < unaff_EDI && (iVar9 = 0,  0 < iVar2))) {\n            do {\n                uVar5 = *(iVar9 + unaff_EBX);\n                if ((uVar5 <= unaff_EDI) && (iVar7 = fcn.0044b5ab(unaff_ESI, *(iVar8 + iVar9 * 4), uVar5),  iVar7 == 0))\n                break;\n                iVar9 = iVar9 + 1;\n            } while (iVar9 < iVar2);\n            if (iVar2 <= iVar9) break;\n            unaff_ESI = unaff_ESI + uVar5;\n            unaff_EDI = unaff_EDI - uVar5;\n        }\n    }\n    if (((uVar6 & 2) != 0) && (0 < unaff_EDI)) {\n        while (iVar9 = 0,  0 < iVar2) {\n            do {\n                uVar6 = *(iVar9 + unaff_EBX);\n                if ((uVar6 <= unaff_EDI) &&\n                   (iVar7 = fcn.0044b5ab((unaff_EDI - uVar6) + unaff_ESI, *(iVar8 + iVar9 * 4), uVar6),  iVar7 == 0))\n                break;\n                iVar9 = iVar9 + 1;\n            } while (iVar9 < iVar2);\n            if ((iVar2 <= iVar9) || (unaff_EDI = unaff_EDI - uVar6,  unaff_EDI < 1)) break;\n        }\n    }\n    if (iStack36 != 0) {\n        fcn.0041c110(iVar8);\n    }\ncode_r0x0043b0b1:\n    fcn.0042b87a(unaff_ESI);\n    return;\n}\n",
        "token_count": 1122
    },
    "0043b29c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043b29c(int32_t *arg_8h, uint noname_1, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *arg_10h;\n    if (*(iVar2 + 0x1e) == '\\x05') {\n        return;\n    }\n    iVar1 = fcn.0042bb1c(0x28);\n    if (iVar1 != 0) {\n        if (*(iVar1 + 0x1c) != 0) {\n            iVar1 = *(*arg_8h + 4);\n            iVar2 = fcn.004294fc(iVar2);\n            if (iVar1 == 0) {\n                if (iVar2 < 1) {\n                    return;\n                }\n            }\n            else if (-1 < iVar2) {\n                return;\n            }\n        }\n        fcn.00429359();\n        return;\n    }\n    return;\n}\n",
        "token_count": 217
    },
    "0043b49c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043b49c(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint uStack4;\n    \n    uStack4 = 0x44440c;\n    if (param_2 == 0) {\n        uStack4 = 0x444408;\n    }\n    fcn.0044a2c9(param_1, 0x44b950, uStack4, 0x431964);\n    fcn.0044a2c9(param_1, 0x44b950, uStack4, 0x431964);\n    fcn.0044a2c9(param_1, 0x44b958, 0x444404, 0x431964);\n    uVar1 = fcn.0043b478(param_1, 3);\n    fcn.0043b478(param_1, (uVar1 & 0xffffff00 | param_2 != 0) * 2 + 1);\n    return;\n}\n",
        "token_count": 228
    },
    "0043b570": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043b570(uint *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    iVar1 = *(arg_10h + 0x14);\n    iVar3 = *(arg_10h + 0x28);\n    if (iVar1 == 1) {\n        if (-1 < *(arg_ch + 4)) {\n            if (iVar3 == 0) {\n                return 0;\n            }\n            iVar2 = fcn.0041d27e();\n            if (iVar2 == 0) {\n                return 0;\n            }\n        }\n    }\n    else if (in_EAX != NULL) {\n        var_8h = fcn.0041c31d(iVar1 << 2);\n        if (var_8h == 0) {\n            return 1;\n        }\n        *in_EAX = var_8h;\n    }\n    iVar2 = *(arg_ch + 0x10);\n    do {\n        if (iVar2 == 0) {\n            if (*(arg_8h + 0x1b2) == '\\0') {\n                fcn.0041d1e3(0x44b968);\n            }\n            fcn.0041c16b(*arg_8h, var_8h);\n            return 1;\n        }\n        if ((*(iVar2 + 4) == iVar1) && (*(iVar2 + 0x18) != '\\0')) {\n            if (iVar3 == 0) {\n                if (*(iVar2 + 0x19) == '\\x02') {\n                    if ((var_8h != 0) && (iVar3 = 0,  0 < iVar1)) {\n                        puVar6 = arg_10h + 0x24;\n                        do {\n                            *(var_8h + iVar3 * 4) = *puVar6;\n                            iVar3 = iVar3 + 1;\n                            puVar6 = puVar6 + 2;\n                        } while (iVar3 < iVar1);\n                    }\ncode_r0x0043b629:\n                    *arg_14h = iVar2;\n                    return 0;\n                }\n            }\n            else {\n                var_4h = 0;\n                if (0 < iVar1) {\n                    while (iVar4 = fcn.0041d27e(),  iVar4 == 0) {\n                        iVar4 = 0;\n                        do {\n                            iVar5 = fcn.0041d27e();\n                            if (iVar5 == 0) {\n                                if (var_8h != 0) {\n                                    *(var_8h + var_4h * 4) = *(arg_10h + 0x24 + iVar4 * 8);\n                                }\n                                break;\n                            }\n                            iVar4 = iVar4 + 1;\n                        } while (iVar4 < iVar1);\n                        if ((iVar4 == iVar1) || (var_4h = var_4h + 1,  iVar1 <= var_4h)) break;\n                    }\n                }\n                if (var_4h == iVar1) goto code_r0x0043b629;\n            }\n        }\n        iVar2 = *(iVar2 + 0x20);\n    } while( true );\n}\n",
        "token_count": 815
    },
    "0043b6f5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0043b6f5(int32_t arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t *arg_18h, int32_t *arg_1ch, \n            int32_t arg_20h, int32_t arg_24h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_10h_00;\n    uint arg_14h_00;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint arg_10h_01;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.0043fe38();\n    arg_10h_00 = *(arg_8h + 0x44) + -1;\n    arg_14h_00 = fcn.00429c62();\n    iVar6 = 0;\n    if (arg_24h < 0) {\n        fcn.00429bea(0x6f, *(arg_18h + 6), arg_14h_00);\n    }\n    if (0 < arg_18h[5]) {\n        do {\n            fcn.00429bea(0x49, arg_1ch[iVar6] + 1 + arg_20h, arg_14h_00);\n            iVar6 = iVar6 + 1;\n        } while (iVar6 < arg_18h[5]);\n    }\n    if (arg_14h == 0) {\n        uVar3 = fcn.004349af();\n        fcn.00429bea(0xf, *arg_1ch + 1 + arg_20h, uVar3);\n        fcn.00429b6c(0x15, uVar3, 0, 0);\n        if ((arg_10h == *arg_18h) && (arg_24h == 1)) {\n            fcn.00429b6c(0x4c, arg_20h, arg_14h_00, uVar3);\n        }\n        fcn.0043c637(arg_10h_00, arg_ch, 0x26);\n        fcn.00429b6c(0x34, arg_10h_00, 0, uVar3);\n        fcn.00429b6c(1, 0, arg_14h_00, 0);\n        fcn.00429e14();\n        fcn.00429e14();\n        iVar2 = fcn.004349ca();\n    }\n    else {\n        iVar6 = arg_18h[5];\n        iVar4 = fcn.004349fe();\n        uVar3 = fcn.004349af();\n        uVar5 = fcn.004392af(arg_8h, arg_14h);\n        fcn.00429b6c(0x26, arg_10h_00, *(arg_14h + 0x14), arg_ch);\n        fcn.00429f87(iVar2, uVar5, 0xfffffff0);\n        var_ch = 0;\n        if (0 < iVar6) {\n            do {\n                fcn.00429bea(0xe, arg_1ch[var_ch] + 1 + arg_20h, iVar4 + var_ch);\n                var_ch = var_ch + 1;\n            } while (var_ch < iVar6);\n        }\n        if ((arg_10h == *arg_18h) && (arg_24h == 1)) {\n            iVar1 = *(iVar2 + 0x1c);\n            iVar7 = 0;\n            if (0 < iVar6) {\n                do {\n                    fcn.00429b6c(0x4b, arg_1ch[iVar7] + 1 + arg_20h, iVar1 + 1 + iVar6, \n                                 *(*(arg_14h + 8) + iVar7 * 4) + 1 + arg_20h);\n                    iVar7 = iVar7 + 1;\n                } while (iVar7 < iVar6);\n            }\n            fcn.00429b6c(1, 0, arg_14h_00, 0);\n        }\n        fcn.00429b6c(0x1e, iVar4, iVar6, uVar3);\n        arg_10h_01 = 0;\n        uVar5 = fcn.0043c670();\n        fcn.00429f87(iVar2, uVar5, arg_10h_01);\n        fcn.00429c31(iVar2, 0x32, arg_10h_00, arg_14h_00, uVar3, 0);\n        fcn.004349ca();\n        iVar2 = fcn.00434a22();\n    }\n    if (((*(arg_18h + 6) == '\\0') && (*(iVar2 + 0x1a0) == 0)) && (*(iVar2 + 0x158) == '\\0')) {\n        fcn.0043908a(2, 0x44a3dc, 0xfffffffe);\n    }\n    else {\n        if ((0 < arg_24h) && (*(arg_18h + 6) == '\\0')) {\n            if (*(iVar2 + 0x1a0) != 0) {\n                iVar2 = *(iVar2 + 0x1a0);\n            }\n            *(iVar2 + 0x159) = 1;\n        }\n        fcn.00429bea(0x6e, *(arg_18h + 6), arg_24h);\n    }\n    fcn.00429caf();\n    fcn.00429bd5(0x2b, arg_10h_00);\n    return;\n}\n",
        "token_count": 1325
    },
    "0043b9c9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0043b9c9(uint *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *unaff_EBX;\n    uint *var_38h;\n    int32_t var_34h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = *arg_8h;\n    var_4h = 0;\n    var_14h = 0;\n    var_10h = fcn.0043fe38();\n    if (arg_20h < 0) {\n        var_14h = fcn.00429b6c(0x6f, *(unaff_EBX + 6), 0, 0);\n    }\n    var_ch = 0;\n    if (0 < unaff_EBX[5]) {\n        do {\n            iVar4 = var_ch;\n            iVar1 = fcn.00431d84(var_8h, 0x84);\n            if (iVar1 != 0) {\n                if (arg_14h == 0) {\n                    *(iVar1 + 0x18) = arg_1ch;\n                    *(iVar1 + 1) = 100;\n                }\n                else {\n                    iVar4 = *(*(arg_14h + 8) + iVar4 * 4);\n                    iVar2 = iVar4 * 0x18 + *(arg_10h + 0xc);\n                    if (*(arg_10h + 4) == iVar4) {\n                        iVar4 = -1;\n                    }\n                    *(iVar1 + 0x18) = iVar4 + 1 + arg_1ch;\n                    *(iVar1 + 1) = *(iVar2 + 0x16);\n                    uVar3 = fcn.00437264(*(iVar2 + 0x10));\n                    *(iVar1 + 0x14) = uVar3;\n                }\n            }\n            fcn.00431d84(var_8h, 0x1a);\n            fcn.00431e0d(0x4c, iVar1);\n            var_4h = fcn.00431e41(var_8h, var_4h);\n            var_ch = var_ch + 1;\n        } while (var_ch < unaff_EBX[5]);\n    }\n    if ((arg_10h == *unaff_EBX) && (0 < arg_20h)) {\n        iVar4 = fcn.00431d84(var_8h, 0x84);\n        iVar1 = fcn.00431d84(var_8h, 0x98);\n        if ((iVar4 != 0) && (iVar1 != 0)) {\n            *(iVar4 + 0x18) = arg_1ch;\n            *(iVar4 + 1) = 100;\n            uVar3 = *(arg_ch + 0x20);\n            *(iVar1 + 0x1c) = 0xffff;\n            *(iVar1 + 0x18) = uVar3;\n        }\n        fcn.00431e0d(0x4b, iVar4);\n        var_4h = fcn.00431e41(var_8h, var_4h);\n    }\n    fcn.0044b531(&var_38h, 0, 0x24);\n    uVar3 = var_4h;\n    var_34h = arg_ch;\n    var_38h = arg_8h;\n    fcn.00431867();\n    iVar4 = fcn.00446af4(arg_8h, arg_ch, uVar3, 0, 0);\n    if ((0 < arg_20h) && (*(unaff_EBX + 6) == '\\0')) {\n        if (arg_8h[0x68] != NULL) {\n            arg_8h = arg_8h[0x68];\n        }\n        *(arg_8h + 0x159) = 1;\n    }\n    fcn.00429bea(0x6e, *(unaff_EBX + 6), arg_20h);\n    if (iVar4 != 0) {\n        fcn.00447218();\n    }\n    fcn.00432063(var_8h, var_4h);\n    if (var_14h != 0) {\n        fcn.00429e14();\n    }\n    return;\n}\n",
        "token_count": 1052
    },
    "0043bd14": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043bd14(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint *var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = *arg_8h;\n    var_1ch = *(arg_8h + 0x1b2);\n    if ((*(var_4h + 0xc) & 0x4000000) != 0) {\n        fcn.0043fe38();\n        var_18h = fcn.0043e8c8();\n        var_14h = *(var_18h * 0x10 + *(var_4h + 8));\n        for (iVar4 = *(arg_ch + 0x24); iVar4 != 0; iVar4 = *(iVar4 + 4)) {\n            var_10h = 0;\n            var_ch = NULL;\n            if (*(arg_8h + 0x1b2) == '\\0') {\n                var_8h = fcn.00436708(0, *(iVar4 + 8), var_14h);\n            }\n            else {\n                var_8h = fcn.0043668f(*(iVar4 + 8), var_14h);\n            }\n            if ((var_8h == 0) || (iVar2 = fcn.0043b570(arg_8h, var_8h, iVar4, &var_10h),  iVar2 != 0)) {\n                if (var_1ch == 0) {\n                    return;\n                }\n                if (*(var_4h + 0x1e) != '\\0') {\n                    return;\n                }\n            }\n            else {\n                puVar3 = var_ch;\n                if (var_ch == NULL) {\n                    var_20h = *(iVar4 + 0x24);\n                    puVar3 = &var_20h;\n                }\n                iVar2 = 0;\n                if (0 < *(iVar4 + 0x14)) {\n                    do {\n                        if (puVar3[iVar2] == *(arg_ch + 4)) {\n                            puVar3[iVar2] = 0xffffffff;\n                        }\n                        iVar2 = iVar2 + 1;\n                    } while (iVar2 < *(iVar4 + 0x14));\n                }\n                arg_8h[0x11] = arg_8h[0x11] + 1;\n                if (arg_10h != 0) {\n                    fcn.0043b6f5(arg_8h, var_18h, var_8h, var_10h, iVar4, puVar3, arg_10h, 0xffffffff);\n                }\n                if (arg_14h != 0) {\n                    fcn.0043b6f5(arg_8h, var_18h, var_8h, var_10h, iVar4, puVar3, arg_14h, 1);\n                }\n                fcn.0041c16b(var_4h, var_ch);\n            }\n        }\n        for (puVar3 = fcn.0043bbd8(); puVar3 != NULL; puVar3 = puVar3[3]) {\n            var_10h = 0;\n            var_ch = NULL;\n            if (((*(puVar3 + 6) != '\\0') || (arg_8h[0x68] != 0)) || (*(arg_8h + 0x56) != '\\0')) {\n                iVar4 = fcn.0043b570(arg_8h, arg_ch, puVar3, &var_10h);\n                if (iVar4 == 0) {\n                    iVar4 = fcn.00438c27(0, 0);\n                    if (iVar4 != 0) {\n                        *(iVar4 + 0x14) = *puVar3;\n                        *(iVar4 + 0xc) = **puVar3;\n                        piVar1 = *(iVar4 + 0x14) + 0x20;\n                        *piVar1 = *piVar1 + 1;\n                        *(iVar4 + 0x20) = arg_8h[0x11];\n                        arg_8h[0x11] = arg_8h[0x11] + 1;\n                        if (arg_14h != 0) {\n                            fcn.0043b9c9(arg_8h, iVar4, arg_ch, var_10h, var_ch, arg_14h, 0xffffffff);\n                        }\n                        if (arg_10h != 0) {\n                            fcn.0043b9c9(arg_8h, iVar4, arg_ch, var_10h, var_ch, arg_10h, 1);\n                        }\n                        *(iVar4 + 0xc) = 0;\n                        fcn.00438d01(var_4h);\n                    }\n                    fcn.0041c16b(var_4h, var_ch);\n                }\n                else {\n                    if (var_1ch == 0) {\n                        return;\n                    }\n                    if (*(var_4h + 0x1e) != '\\0') {\n                        return;\n                    }\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 1237
    },
    "0043c017": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043c017(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    char cVar6;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    if (arg_ch == 0) {\n        iVar1 = fcn.0043bbd8();\n        if ((iVar1 != 0) || (*(arg_8h + 0x24) != 0)) {\n            iVar1 = 1;\n        }\n    }\n    else {\n        for (iVar1 = *(arg_8h + 0x24); iVar1 != 0; iVar1 = *(iVar1 + 4)) {\n            var_4h = 0;\n            if (0 < *(iVar1 + 0x14)) {\n                piVar3 = iVar1 + 0x24;\n                do {\n                    if ((-1 < *(arg_ch + *piVar3 * 4)) || ((*piVar3 == *(arg_8h + 4) && (arg_10h != 0)))) {\n                        return 1;\n                    }\n                    var_4h = var_4h + 1;\n                    piVar3 = piVar3 + 2;\n                } while (var_4h < *(iVar1 + 0x14));\n            }\n        }\n        for (iVar1 = fcn.0043bbd8(); iVar1 != 0; iVar1 = *(iVar1 + 0xc)) {\n            var_4h = 0;\n            if (0 < *(iVar1 + 0x14)) {\n                iVar2 = *(arg_8h + 8);\n                var_8h = iVar1 + 0x28;\n                do {\n                    iVar5 = 0;\n                    if (0 < iVar2) {\n                        iVar4 = *(arg_8h + 0xc);\n                        do {\n                            if (*var_8h == 0) {\n                                cVar6 = *(iVar4 + 0x15);\n                            }\n                            else {\n                                iVar2 = fcn.0041d27e();\n                                cVar6 = iVar2 == 0;\n                            }\n                            if (cVar6 != '\\0') {\n                                if (-1 < *(arg_ch + iVar5 * 4)) {\n                                    return 1;\n                                }\n                                if ((iVar5 == *(arg_8h + 4)) && (arg_10h != 0)) {\n                                    return 1;\n                                }\n                            }\n                            iVar2 = *(arg_8h + 8);\n                            iVar5 = iVar5 + 1;\n                            iVar4 = iVar4 + 0x18;\n                        } while (iVar5 < iVar2);\n                    }\n                    var_4h = var_4h + 1;\n                    var_8h = var_8h + 2;\n                } while (var_4h < *(iVar1 + 0x14));\n            }\n        }\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 693
    },
    "0043c118": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043c118(int32_t *arg_8h, int32_t arg_ch, int32_t *arg_10h, int32_t arg_14h)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint arg_ch_00;\n    uint extraout_ECX;\n    uint arg_14h_00;\n    uint arg_18h;\n    uint arg_1ch;\n    uint arg_20h;\n    uint arg_24h;\n    uint arg_28h;\n    uint var_54h;\n    int32_t var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t *var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uchar *var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar4 = *arg_8h;\n    var_10h = *((arg_14h != 0) + 0x19 + arg_10h);\n    var_34h = arg_10h + (arg_14h != 0) + 7;\n    iVar2 = *var_34h;\n    if ((var_10h != 0) && (iVar2 == 0)) {\n        var_28h = 0;\n        var_20h = 0;\n        var_14h = NULL;\n        var_8h = 0;\n        var_1ch = 0;\n        var_24h = 0;\n        var_ch = 0;\n        var_4h = iVar4;\n        iVar2 = fcn.0043b570(arg_8h, arg_ch, arg_10h, &var_28h);\n        if (iVar2 == 0) {\n            var_18h = 0;\n            if (0 < arg_10h[5]) {\n                var_44h = 0x44a780;\n                var_40h = 3;\n                var_4ch = 0x44a77c;\n                var_48h = 3;\n                do {\n                    if (var_20h == 0) {\n                        iVar4 = arg_10h[9];\n                    }\n                    else {\n                        iVar4 = *(var_20h + var_18h * 4);\n                    }\n                    if (var_28h == 0) {\n                        var_3ch = 0x44b980;\n                    }\n                    else {\n                        var_3ch = *(*(*(var_28h + 8) + var_18h * 4) * 0x18 + *(arg_ch + 0xc));\n                    }\n                    var_54h = *(iVar4 * 0x18 + *(*arg_10h + 0xc));\n                    var_38h = fcn.0041d157();\n                    var_50h = fcn.0041d157();\n                    var_30h = fcn.00431e0d(0x1a, 0);\n                    var_2ch = fcn.00431e0d(0x1a, 0);\n                    uVar3 = fcn.00431e0d(0x1a, 0);\n                    uVar3 = fcn.00431e0d(0x76, uVar3);\n                    fcn.00431e0d(0x4c, uVar3);\n                    var_8h = fcn.00431e41(var_4h, var_8h);\n                    if (arg_14h != 0) {\n                        var_30h = fcn.00431e0d(0x1a, 0);\n                        uVar3 = fcn.00431e0d(0x1a, 0);\n                        var_2ch = fcn.00431e0d(0x76, uVar3);\n                        var_30h = fcn.00431e0d(0x1a, 0);\n                        uVar3 = fcn.00431e0d(0x1a, 0);\n                        uVar3 = fcn.00431e0d(0x76, uVar3);\n                        fcn.00431e0d(0x46, uVar3);\n                        var_ch = fcn.00431e41(var_4h, var_ch);\n                    }\n                    if (var_10h != 6) {\n                        if (var_10h == 9) {\n                            if (arg_14h == 0) goto code_r0x0043c37b;\n                            fcn.00431e0d(0x1a, 0);\n                            uVar3 = fcn.00431e0d(0x1a, 0);\n                            fcn.00431e0d(0x76, uVar3);\n                        }\n                        else if ((var_10h == 8) && (iVar4 = *(*(*arg_10h + 0xc) + 4 + iVar4 * 0x18),  iVar4 != 0)) {\n                            fcn.0043238b(var_4h, iVar4);\n                        }\n                        else {\n                            fcn.00431e0d(0x62, 0);\n                        }\n                        var_1ch = fcn.00432719();\n                        fcn.0043279a(arg_8h, 0);\n                    }\ncode_r0x0043c37b:\n                    var_18h = var_18h + 1;\n                    iVar4 = var_4h;\n                } while (var_18h < arg_10h[5]);\n            }\n            fcn.0041c16b(iVar4, var_20h);\n            var_30h = **arg_10h;\n            var_28h = fcn.0041d157();\n            if (var_10h == 6) {\n                var_54h = extraout_ECX;\n                var_50h = var_28h;\n                iVar4 = fcn.00431d84(iVar4, 0x38);\n                if (iVar4 != 0) {\n                    *(iVar4 + 1) = 2;\n                }\n                arg_28h = 0;\n                arg_24h = 0;\n                arg_20h = 0;\n                arg_1ch = 0;\n                arg_18h = 0;\n                arg_14h_00 = 0;\n                uVar3 = var_8h;\n                arg_ch_00 = fcn.00438c27(&var_54h, 0);\n                fcn.00432719();\n                var_24h = fcn.0043ec3c(arg_8h, arg_ch_00, uVar3, arg_14h_00, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h\n                                      );\n                var_8h = 0;\n                iVar4 = var_4h;\n            }\n            uVar1 = *(iVar4 + 0xea);\n            *(iVar4 + 0xea) = 0;\n            iVar2 = fcn.0041c2f7(var_28h + 0x4d);\n            var_20h = iVar2;\n            if (iVar2 != 0) {\n                var_14h = iVar2 + 0x24;\n                *(iVar2 + 0x1c) = var_14h;\n                *(iVar2 + 0x30) = iVar2 + 0x4c;\n                *(iVar2 + 0x34) = var_28h;\n                fcn.0044b575(iVar2 + 0x4c, var_30h, var_28h);\n                uVar3 = fcn.0043238b(iVar4, var_8h, 1);\n                *(iVar2 + 0x38) = uVar3;\n                uVar3 = fcn.004323a2(iVar4, 1);\n                *(iVar2 + 0x3c) = uVar3;\n                uVar3 = fcn.00432619(var_4h, var_24h, 1);\n                *(iVar2 + 0x2c) = uVar3;\n                iVar4 = var_4h;\n                if (var_ch != 0) {\n                    var_ch = fcn.00431e0d(0x13, var_ch);\n                    uVar3 = fcn.0043238b(var_4h, var_ch, 1);\n                    *(var_20h + 0xc) = uVar3;\n                    iVar4 = var_4h;\n                    iVar2 = var_20h;\n                }\n            }\n            *(iVar4 + 0xea) = uVar1;\n            fcn.00432063(iVar4, var_8h);\n            fcn.00432063(iVar4, var_ch);\n            fcn.004327f7(iVar4);\n            fcn.0043ecfb(iVar4, var_24h);\n            if (*(iVar4 + 0x1e) != '\\x01') {\n                if (var_10h == 6) {\n                    *var_14h = 0x74;\n                }\n                else if ((var_10h == 9) && (arg_14h == 0)) {\n                    *var_14h = 0x6a;\n                }\n                else {\n                    *var_14h = 0x6b;\n                }\n                *(var_14h + 4) = iVar2;\n                *(iVar2 + 0x14) = *(arg_ch + 0x40);\n                *(iVar2 + 0x18) = *(arg_ch + 0x40);\n                *var_34h = iVar2;\n                *(iVar2 + 8) = (arg_14h != 0) + 'j';\n                return var_20h;\n            }\n            fcn.0043bbef(iVar4);\n        }\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 2304
    },
    "0043c5a2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043c5a2(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    uint arg_ch;\n    \n    iVar2 = *(param_2 + 0x24);\n    while (iVar2 != 0) {\n        if ((param_1 == 0) || (*(param_1 + 0x1e0) == 0)) {\n            if (*(iVar2 + 0x10) == 0) {\n                arg_ch = *(iVar2 + 0xc);\n                arg_8h = fcn.0041d157();\n                fcn.0041db04(arg_8h, arg_ch);\n            }\n            else {\n                *(*(iVar2 + 0x10) + 0xc) = *(iVar2 + 0xc);\n            }\n            if (*(iVar2 + 0xc) != 0) {\n                *(*(iVar2 + 0xc) + 0x10) = *(iVar2 + 0x10);\n            }\n        }\n        fcn.0043bbef(param_1);\n        fcn.0043bbef(param_1);\n        iVar1 = *(iVar2 + 4);\n        fcn.0041c16b(param_1, iVar2);\n        iVar2 = iVar1;\n    }\n    return;\n}\n",
        "token_count": 304
    },
    "0043c670": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0043c670(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EDI;\n    uint var_4h;\n    \n    if (*(unaff_EDI + 0x1c) == 0) {\n        iVar3 = *in_EAX;\n        iVar1 = *(unaff_EDI + 0x10);\n        iVar2 = fcn.0041c31d(*(unaff_EDI + 4) + 2);\n        *(unaff_EDI + 0x1c) = iVar2;\n        if (iVar2 == 0) {\n            *(iVar3 + 0x1e) = 1;\n            return 0;\n        }\n        iVar3 = 0;\n        if (0 < *(unaff_EDI + 4)) {\n            do {\n                *(iVar3 + *(unaff_EDI + 0x1c)) = *(*(*(unaff_EDI + 8) + iVar3 * 4) * 0x18 + 0x16 + *(iVar1 + 0xc));\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < *(unaff_EDI + 4));\n        }\n        *(iVar3 + *(unaff_EDI + 0x1c)) = 0x62;\n        *(iVar3 + 1 + *(unaff_EDI + 0x1c)) = 0;\n    }\n    return *(unaff_EDI + 0x1c);\n}\n",
        "token_count": 347
    },
    "0043c6dd": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0043c6dd(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EDI;\n    \n    if (*(unaff_EDI + 0x28) == 0) {\n        iVar2 = *param_1;\n        iVar3 = 0;\n        iVar1 = fcn.0041c31d(*(unaff_EDI + 8) + 1);\n        if (iVar1 == 0) {\n            *(iVar2 + 0x1e) = 1;\n            return;\n        }\n        iVar2 = 0;\n        if (0 < *(unaff_EDI + 8)) {\n            do {\n                *(iVar2 + iVar1) = *(*(unaff_EDI + 0xc) + 0x16 + iVar3);\n                iVar2 = iVar2 + 1;\n                iVar3 = iVar3 + 0x18;\n            } while (iVar2 < *(unaff_EDI + 8));\n        }\n        *(iVar1 + *(unaff_EDI + 8)) = 0;\n        *(unaff_EDI + 0x28) = iVar1;\n    }\n    fcn.00429f87(param_1, *(unaff_EDI + 0x28), 0);\n    return;\n}\n",
        "token_count": 299
    },
    "0043c7bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043c7bc(int32_t *param_1, int32_t param_2, int32_t *param_3, int32_t **param_4, int32_t *param_5, uint param_6\n                 )\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t *apiStack156 [9];\n    uchar uStack120;\n    uchar uStack119;\n    int32_t iStack116;\n    int32_t iStack112;\n    uint uStack108;\n    uint uStack104;\n    int32_t iStack100;\n    uint32_t uStack96;\n    uint uStack92;\n    uint32_t uStack88;\n    uint uStack84;\n    int32_t iStack80;\n    int32_t iStack76;\n    int32_t iStack72;\n    int32_t iStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    int32_t iStack56;\n    int32_t iStack52;\n    int32_t iStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    int32_t iStack36;\n    int32_t iStack32;\n    int32_t iStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    int32_t iStack12;\n    int32_t iStack8;\n    \n    piVar2 = param_1;\n    iStack32 = -1;\n    iVar3 = *param_1;\n    iStack16 = 0;\n    iStack64 = 0;\n    iStack56 = 0;\n    iStack52 = 0;\n    uStack84 = 0;\n    uStack92 = 0;\n    uStack104 = 0;\n    iStack80 = 0;\n    iStack100 = 0;\n    iStack40 = 0;\n    iStack72 = 0;\n    iStack44 = iVar3;\n    fcn.0044b531(&uStack120, 0, 0x10);\n    if ((((param_1[0x10] != 0) || (*(iVar3 + 0x1e) != '\\0')) || (*(param_2 + 0xc) == 0)) ||\n       (iVar3 = fcn.004397e4(),  iStack24 = iVar3,  iVar3 == 0)) goto code_r0x0043d30d;\n    iStack48 = fcn.0043e8c8();\n    iStack76 = fcn.004423f4(0x69, 0, &uStack88);\n    uStack96 = *(iVar3 + 0x1c) != 0;\n    iVar3 = fcn.00437a3f();\n    if (((iVar3 != 0) || (iVar3 = fcn.00439825(uStack88),  iVar3 != 0)) ||\n       (iVar3 = fcn.0043fe38(),  iStack8 = iVar3,  iVar3 == 0)) goto code_r0x0043d30d;\n    if (*(param_1 + 0x13) == '\\0') {\n        *(iVar3 + 99) = 1;\n    }\n    if ((param_4 == NULL) && (iStack76 == 0)) {\n        uVar4 = 0;\n    }\n    else {\n        uVar4 = 1;\n    }\n    fcn.00439033(uVar4);\n    if (param_4 == NULL) {\n        fcn.0044b531(apiStack156, 0, 0x24);\n        iStack52 = -1;\n        apiStack156[0] = param_1;\n        if (param_3 == NULL) {\n            iStack36 = 0;\n        }\n        else {\n            iStack36 = *param_3;\n        }\n        iStack12 = 0;\n        iVar3 = iStack24;\n        if (0 < iStack36) {\n            iStack20 = 0;\n            do {\n                iVar3 = fcn.00431867();\n                if (iVar3 != 0) goto code_r0x0043d30d;\n                iStack12 = iStack12 + 1;\n                iStack20 = iStack20 + 0x14;\n                iVar3 = iStack24;\n            } while (iStack12 < iStack36);\n        }\n    }\n    else {\n        param_1[0x12] = param_1[0x12] + 1;\n        iStack40 = param_1[0x12];\n        fcn.00429b6c(7, 0, iStack40, 0);\n        param_1[0x12] = param_1[0x12] + 1;\n        iStack116 = param_1[0x12];\n        iStack112 = 0;\n        uStack108 = 0;\n        uStack120 = 10;\n        uStack119 = 0;\n        iVar5 = *(iVar3 + 0x1c);\n        fcn.00429bea(7, iVar5 + 1, iStack116);\n        iStack68 = fcn.00429b6c(1, 0, 0, 0);\n        iVar3 = fcn.00441019(param_1, param_4, &uStack120);\n        if (((iVar3 != 0) || (param_1[0x10] != 0)) || (*(iStack44 + 0x1e) != '\\0')) goto code_r0x0043d30d;\n        fcn.00429b6c(7, 1, iStack40, 0);\n        fcn.00429bd5(4, iStack116);\n        fcn.00429b6c(6, 2, 2, 0);\n        fcn.00429e14();\n        iVar3 = iStack24;\n        iStack80 = iStack112;\n        iStack36 = **param_4;\n        if ((iStack76 != 0) || (iVar5 = fcn.0043c73d(iVar5 + 2, iStack48),  iVar5 != 0)) {\n            iVar5 = param_1[0x11];\n            param_1[0x11] = iVar5 + 1;\n            iStack56 = 1;\n            iStack52 = iVar5;\n            iStack20 = fcn.004349af();\n            iStack28 = fcn.004349af();\n            fcn.00429bea(0x29, iVar5, iStack36);\n            iStack68 = fcn.00429bd5(4, iStack116);\n            iStack60 = fcn.00429bd5(0x1a, iStack40);\n            fcn.00429b6c(0x1e, iStack80, iStack36, iStack20);\n            fcn.00429bea(0x36, iVar5, iStack28);\n            fcn.00429b6c(0x37, iVar5, iStack20, iStack28);\n            fcn.00429b6c(1, 0, iStack68, 0);\n            fcn.00429e14();\n            fcn.004349ca();\n            fcn.004349ca();\n        }\n    }\n    if (((*(iVar3 + 0x22) & 0x10) != 0) && (iVar5 = *(iVar3 + 8),  0 < iVar5)) {\n        pcVar6 = *(iVar3 + 0xc) + 0x17;\n        do {\n            cVar1 = *pcVar6;\n            pcVar6 = pcVar6 + 0x18;\n            iStack16 = iStack16 + (cVar1 != '\\0');\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    if (param_5 == NULL) {\n        if (iStack36 != 0) {\n            iVar5 = *(iVar3 + 8) - iStack16;\n            if (iStack36 != iVar5) {\n                fcn.0041d1e3(0x44b984, param_2, 0, iVar5, iStack36);\n                goto code_r0x0043d30d;\n            }\n            if (0 < iStack36) {\n                iStack32 = *(iVar3 + 4);\n            }\n        }\n    }\n    else {\n        iVar5 = param_5[1];\n        if (iStack36 != iVar5) {\n            fcn.0041d1e3(0x44b9b8, iStack36, iVar5);\n            goto code_r0x0043d30d;\n        }\n        iVar7 = 0;\n        if (0 < iVar5) {\n            do {\n                *(*param_5 + 4 + iVar7 * 8) = 0xffffffff;\n                iVar7 = iVar7 + 1;\n            } while (iVar7 < param_5[1]);\n        }\n        iStack12 = 0;\n        if (0 < param_5[1]) {\n            do {\n                iStack16 = 0;\n                if (0 < *(iVar3 + 8)) {\n                    iStack48 = *param_5 + iStack12 * 8;\n                    iStack20 = *(iVar3 + 0xc);\n                    do {\n                        iVar5 = fcn.0041d27e();\n                        if (iVar5 == 0) {\n                            *(iStack48 + 4) = iStack16;\n                            if (iStack16 == *(iVar3 + 4)) {\n                                iStack32 = iStack12;\n                            }\n                            break;\n                        }\n                        iStack16 = iStack16 + 1;\n                        iStack20 = iStack20 + 0x18;\n                    } while (iStack16 < *(iVar3 + 8));\n                }\n                if (*(iVar3 + 8) <= iStack16) {\n                    iVar5 = fcn.004329a1();\n                    if (iVar5 == 0) {\n                        fcn.0041d1e3(0x44b9d4, param_2, 0, *(*param_5 + iStack12 * 8));\n                        *(param_1 + 0x12) = 1;\n                        goto code_r0x0043d30d;\n                    }\n                    iStack32 = iStack12;\n                }\n                iStack12 = iStack12 + 1;\n            } while (iStack12 < param_5[1]);\n        }\n    }\n    if ((*(iStack44 + 0xc) & 0x1000) != 0) {\n        param_1[0x12] = param_1[0x12] + 1;\n        iStack100 = param_1[0x12];\n        fcn.00429b6c(7, 0, iStack100, 0);\n    }\n    if (uStack96 == 0) {\n        iStack64 = param_1[0x11];\n        iVar5 = fcn.0043d96d(iStack64);\n        iStack72 = fcn.0041c31d(iVar5 * 4 + 4);\n        if (iStack72 == 0) goto code_r0x0043d30d;\n        iVar7 = 0;\n        if (0 < iVar5) {\n            do {\n                param_1[0x12] = param_1[0x12] + 1;\n                *(iStack72 + iVar7 * 4) = param_1[0x12];\n                iVar7 = iVar7 + 1;\n            } while (iVar7 < iVar5);\n        }\n    }\n    iVar5 = iStack8;\n    if (iStack56 == 0) {\n        if (param_4 != NULL) {\n            uStack92 = fcn.00429bd5(4, iStack116);\n            uStack84 = fcn.00429bd5(0x1a, iStack40);\n        }\n    }\n    else {\n        uStack84 = fcn.00429bd5(0x41, iStack52);\n        uStack92 = *(iVar5 + 0x1c);\n    }\n    param_1[0x12] = param_1[0x12] + 1;\n    iVar7 = param_1[0x12];\n    iStack40 = iVar7 + 1;\n    iVar5 = *(iVar3 + 8) + 1 + iVar7;\n    param_1[0x12] = iVar5;\n    iVar9 = iStack40;\n    if ((*(iVar3 + 0x22) & 0x10) != 0) {\n        iVar9 = iVar7 + 2;\n        param_1[0x12] = iVar5 + 1;\n    }\n    iStack68 = iVar9 + 1;\n    iStack60 = iVar9;\n    iStack20 = fcn.00429c62();\n    if ((uStack88 & 1) != 0) {\n        iStack16 = fcn.004349fe();\n        if (iStack32 < 0) {\n            fcn.00429b6c(7, 0xffffffff, iStack16, 0);\n        }\n        else {\n            if (iStack56 == 0) {\n                fcn.00433ee6();\n                iVar3 = iStack24;\n            }\n            else {\n                fcn.00429b6c(0x1c, iStack52, iStack32, iStack16);\n            }\n            fcn.00429bd5(0x4a, iStack16);\n            fcn.00429b6c(7, 0xffffffff, iStack16, 0);\n            fcn.00429e14();\n            fcn.00429bd5(0x15, iStack16);\n        }\n        iStack12 = 0;\n        if (0 < *(iVar3 + 8)) {\n            iStack28 = iStack16 + 1;\n            iStack48 = 0;\n            do {\n                iVar7 = 0;\n                iVar5 = iStack12;\n                if ((param_5 != NULL) && (iVar5 = iVar7,  0 < param_5[1])) {\n                    piVar8 = *param_5 + 4;\n                    do {\n                        iVar5 = iVar7;\n                        if (*piVar8 == iStack12) break;\n                        iVar7 = iVar7 + 1;\n                        piVar8 = piVar8 + 2;\n                        iVar5 = iVar7;\n                    } while (iVar7 < param_5[1]);\n                }\n                if (((iStack56 == 0) && (param_3 == NULL)) || ((param_5 != NULL && (param_5[1] <= iVar5)))) {\n                    fcn.00433ee6();\n                    iVar3 = iStack24;\n                }\n                else if (iStack56 == 0) {\n                    pcVar6 = *(iVar5 * 0x14 + param_3[3]);\n                    uStack88 = param_1[3];\n                    uVar4 = fcn.00433ee6();\n                    iVar3 = iStack24;\n                    if (*pcVar6 != -0x7c) {\n                        param_1[0x12] = param_1[0x12] + 1;\n                        iVar3 = param_1[0x12];\n                        fcn.00429bea(0xe, uVar4, iVar3);\n                        *(pcVar6 + 0x18) = iVar3;\n                        pcVar6[0x23] = *pcVar6;\n                        *pcVar6 = -0x7c;\n                        iVar3 = iStack24;\n                    }\n                }\n                else {\n                    fcn.00429b6c(0x1c, iStack52, iVar5, iStack28);\n                }\n                iStack12 = iStack12 + 1;\n                iStack48 = iStack48 + 0x18;\n                iStack28 = iStack28 + 1;\n            } while (iStack12 < *(iVar3 + 8));\n        }\n        if (uStack96 == 0) {\n            fcn.00429bea(0x1d, iStack16 + 1, *(iVar3 + 8));\n            fcn.0043c6dd(iStack8);\n            iVar3 = iStack24;\n        }\n        fcn.004428c7(param_1, iStack76, 0x69, 0, 1, iVar3, (iStack16 - *(iVar3 + 8)) + -1, param_6, iStack20);\n        fcn.00434a22();\n        iVar9 = iStack60;\n        iVar3 = iStack24;\n    }\n    if (uStack96 == 0) {\n        if ((*(iVar3 + 0x22) & 0x10) != 0) {\n            fcn.00429b6c(10, 0, iStack40, 0);\n        }\n        if (iStack32 < 0) {\n            if ((*(iVar3 + 0x22) & 0x10) == 0) {\n                fcn.00429b6c(0x36, iStack64, iVar9, 0);\ncode_r0x0043d04a:\n                uStack104 = 1;\n            }\n            else {\n                fcn.00429b6c(10, 0, iVar9, 0);\n            }\n        }\n        else {\n            if (iStack56 == 0) {\n                if (param_4 == NULL) {\n                    fcn.00433ee6();\n                    pcVar6 = fcn.0042a0b7();\n                    iVar3 = iStack24;\n                    if (((pcVar6 != NULL) && (*pcVar6 == '\\n')) && ((*(iStack24 + 0x22) & 0x10) == 0)) {\n                        *(pcVar6 + 0xc) = 0;\n                        *pcVar6 = '6';\n                        *(pcVar6 + 4) = iStack64;\n                        *(pcVar6 + 8) = iVar9;\n                        goto code_r0x0043d04a;\n                    }\n                }\n                else {\n                    fcn.00429bea(0xf, iStack80 + iStack32, iVar9);\n                }\n            }\n            else {\n                fcn.00429b6c(0x1c, iStack52, iStack32, iVar9);\n            }\n            if ((*(iVar3 + 0x22) & 0x10) == 0) {\n                iStack60 = fcn.00429bd5(0x4a, iVar9);\n                fcn.00429b6c(0x36, iStack64, iVar9, 0);\n                fcn.00429e14();\n            }\n            else {\n                fcn.00429bea(0x49, iVar9, *(iStack8 + 0x1c) + 2);\n            }\n            fcn.00429bd5(0x15, iVar9);\n        }\n        iVar5 = 0;\n        iStack16 = 0;\n        if (0 < *(iVar3 + 8)) {\n            iStack28 = 0;\n            iStack12 = iStack68;\n            do {\n                if (iVar5 == *(iVar3 + 4)) {\n                    uVar4 = 10;\n                    iVar9 = 0;\n                    iVar7 = iStack12;\n                    iVar10 = 0;\ncode_r0x0043d072:\n                    fcn.00429b6c(uVar4, iVar9, iVar7, iVar10);\n                }\n                else {\n                    if (param_5 == NULL) {\n                        if (*(*(iVar3 + 0xc) + 0x17 + iStack28) == '\\0') {\n                            iVar7 = iVar5 - iStack16;\ncode_r0x0043d129:\n                            if (-1 < iVar7) goto code_r0x0043d131;\n                        }\n                        else {\n                            iStack16 = iStack16 + 1;\n                        }\n                    }\n                    else {\n                        iVar7 = 0;\n                        if (0 < param_5[1]) {\n                            piVar8 = *param_5 + 4;\n                            do {\n                                if (*piVar8 == iVar5) break;\n                                iVar7 = iVar7 + 1;\n                                piVar8 = piVar8 + 2;\n                            } while (iVar7 < param_5[1]);\n                            goto code_r0x0043d129;\n                        }\ncode_r0x0043d131:\n                        if ((iStack36 != 0) && ((param_5 == NULL || (iVar7 < param_5[1])))) {\n                            if (iStack56 != 0) {\n                                uVar4 = 0x1c;\n                                iVar9 = iStack52;\n                                iVar10 = iStack12;\n                                goto code_r0x0043d072;\n                            }\n                            if (param_4 != NULL) {\n                                fcn.00429bea(0xf, iVar7 + iStack80, iStack12);\n                                goto code_r0x0043d0b0;\n                            }\n                        }\n                    }\n                    fcn.00433ee6();\n                    iVar3 = iStack24;\n                }\ncode_r0x0043d0b0:\n                iStack28 = iStack28 + 0x18;\n                iVar5 = iVar5 + 1;\n                iStack12 = iStack12 + 1;\n            } while (iVar5 < *(iVar3 + 8));\n        }\n        if ((*(iVar3 + 0x22) & 0x10) == 0) {\n            fcn.0043d34a(param_1, iVar3, iStack64, iStack40, iStack72, -1 < iStack32, 0, param_6, iStack20, &iStack60);\n            fcn.0043bd14(param_1, iVar3, 0, iStack40);\n            fcn.0043d870(param_1, iStack64, iStack40, iStack72, 0, uStack104, iStack60 == 0);\n        }\n        else {\n            uVar4 = fcn.0044394b(iStack44);\n            fcn.004442c4(iVar3);\n            fcn.00429c01(iStack8, 0x85, 1, *(iVar3 + 8) + 2, iStack40, uVar4, 0xfffffff6);\n            fcn.00439076();\n        }\n    }\n    if ((*(iStack44 + 0xc) & 0x1000) != 0) {\n        fcn.00429b6c(0x14, iStack100, 1, 0);\n    }\n    if (iStack76 != 0) {\n        fcn.004428c7(param_1, iStack76, 0x69, 0, 2, iVar3, (iStack68 - *(iVar3 + 8)) + -2, param_6, iStack20);\n    }\n    fcn.00429caf();\n    if (iStack56 == 0) {\n        if (param_4 != NULL) {\n            fcn.00429b6c(1, 0, uStack92, 0);\n            fcn.00429e14();\n        }\n    }\n    else {\n        fcn.00429bea(0x43, iStack52, uStack92);\n        fcn.00429e14();\n        fcn.00429bd5(0x2b, iStack52);\n    }\n    if (((*(iVar3 + 0x22) & 0x10) == 0) && (uStack96 == 0)) {\n        fcn.00429bd5(0x2b, iStack64);\n        param_1 = iStack64;\n        for (iVar3 = *(iVar3 + 0x10); iVar3 != 0; iVar3 = *(iVar3 + 0x20)) {\n            param_1 = param_1 + 1;\n            fcn.00429bd5(0x2b, param_1);\n        }\n    }\n    if ((((*(iStack44 + 0xc) & 0x1000) != 0) && (*(piVar2 + 0x13) == '\\0')) && (piVar2[0x69] == 0)) {\n        fcn.00429b6c(0x10, iStack100, 1, 0);\n        fcn.0042a4ca();\n        fcn.0042a521(0, 0, 0x44b9f4, 0);\n    }\ncode_r0x0043d30d:\n    iVar3 = iStack44;\n    fcn.00438d01(iStack44);\n    fcn.004327f7(iVar3);\n    fcn.0043ecfb(iVar3, param_4);\n    fcn.00438aeb(iVar3);\n    fcn.0041c16b(iStack44, iStack72);\n    return;\n}\n",
        "token_count": 5610
    },
    "0043d34a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0043d34a(int32_t *arg_8h, uint *arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            int32_t arg_20h, uint32_t arg_24h, uint arg_28h, int32_t *arg_2ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint uVar3;\n    int32_t *piVar4;\n    uint arg_8h_01;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t extraout_EDX;\n    uint extraout_EDX_00;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint uVar11;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_10h = 0;\n    if ((arg_1ch == 0) || (iVar2 = arg_1ch,  arg_20h == 0)) {\n        iVar2 = arg_14h;\n    }\n    arg_8h_00 = fcn.0043fe38();\n    iVar9 = arg_ch[2];\n    var_ch = 0;\n    if (0 < iVar9) {\n        var_8h = 0;\n        iVar8 = arg_14h;\n        do {\n            iVar8 = iVar8 + 1;\n            if (var_ch != arg_ch[1]) {\n                uVar5 = *(arg_ch[3] + var_8h + 0x14);\n                if (uVar5 != 0) {\n                    uVar6 = arg_24h;\n                    if ((arg_24h == 99) && (uVar6 = uVar5,  uVar5 == 99)) {\n                        uVar6 = 2;\n                    }\n                    if ((uVar6 == 5) && (*(arg_ch[3] + var_8h + 4) == 0)) {\n                        uVar6 = 2;\n                    }\n                    if (uVar6 != 1) {\n                        if (uVar6 == 2) {\n                            fcn.00439076();\n                            uVar6 = extraout_EDX;\n                        }\n                        else if (uVar6 != 3) {\n                            if (uVar6 == 4) {\n                                fcn.00429bea(0x49, iVar8, arg_28h);\n                            }\n                            else {\n                                fcn.00429bd5(0x4a, iVar8);\n                                fcn.00433ee6();\n                                fcn.00429e14();\n                            }\n                            goto code_r0x0043d464;\n                        }\n                    }\n                    fcn.00429b6c(5, 0x13, uVar6, iVar8);\n                    uVar3 = fcn.0041ce3a(0x44ba04, *arg_ch, *(var_8h + arg_ch[3]));\n                    fcn.00429f87(arg_8h_00, uVar3, 0xffffffff);\n                }\n            }\ncode_r0x0043d464:\n            var_ch = var_ch + 1;\n            var_8h = var_8h + 0x18;\n        } while (var_ch < iVar9);\n    }\n    if (arg_1ch == 0) goto code_r0x0043d5be;\n    uVar5 = arg_24h;\n    if ((arg_24h == 99) && (uVar5 = *(arg_ch + 0x23),  *(arg_ch + 0x23) == 99)) {\n        uVar5 = 2;\n    }\n    if (arg_20h != 0) {\n        fcn.00429b6c(0x4c, arg_14h, 0, arg_1ch);\n    }\n    fcn.00429b6c(0x34, arg_10h, 0, arg_14h);\n    if (uVar5 < 1) {\ncode_r0x0043d58d:\n        uVar5 = 2;\ncode_r0x0043d590:\n        fcn.0043908a(uVar5, 0x44ba1c, 0xfffffffe);\n    }\n    else {\n        if (uVar5 < 4) goto code_r0x0043d590;\n        if (uVar5 == 4) {\n            fcn.00429b6c(1, 0, arg_28h, 0);\n        }\n        else {\n            if (uVar5 != 5) goto code_r0x0043d58d;\n            iVar9 = 0;\n            if (((*(*arg_8h + 0xc) & 0x2000000) == 0) || (iVar9 = fcn.004423f4(0x6a, 0, 0),  iVar9 == 0)) {\n                if ((*(*arg_8h + 0xc) & 0x4000000) == 0) {\n                    iVar8 = 0;\n                }\n                else {\n                    iVar8 = fcn.0043c017(arg_ch, 0, 0);\n                }\n                if (iVar8 != 0) goto code_r0x0043d554;\n                if (arg_ch[4] != 0) {\n                    fcn.00439062();\n                    fcn.00439e81(arg_10h, 0);\n                }\n            }\n            else {\ncode_r0x0043d554:\n                fcn.00439062();\n                fcn.00439ce8(arg_8h_01, arg_ch, arg_10h, arg_14h, 0, iVar9, 5);\n            }\n            var_10h = 1;\n        }\n    }\n    fcn.00429e14();\n    if (arg_20h != 0) {\n        fcn.00429e14();\n    }\ncode_r0x0043d5be:\n    var_8h = 0;\n    iVar9 = arg_ch[4];\n    do {\n        if (iVar9 == 0) {\n            if (arg_2ch != NULL) {\n                *arg_2ch = var_10h;\n            }\n            return;\n        }\n        piVar4 = arg_18h + var_8h * 4;\n        if (*piVar4 != 0) {\n            iVar8 = fcn.004349fe();\n            iVar7 = 0;\n            var_ch = iVar8;\n            if (0 < *(iVar9 + 4)) {\n                do {\n                    iVar1 = *(*(iVar9 + 8) + iVar7 * 4);\n                    iVar10 = arg_14h;\n                    if (iVar1 != arg_ch[1]) {\n                        iVar10 = iVar1 + arg_14h + 1;\n                    }\n                    fcn.00429bea(0xf, iVar10, var_ch);\n                    iVar7 = iVar7 + 1;\n                    var_ch = var_ch + 1;\n                } while (iVar7 < *(iVar9 + 4));\n            }\n            fcn.00429bea(0xf, arg_14h, iVar8 + iVar7);\n            fcn.00429b6c(0x1e, iVar8, *(iVar9 + 4) + 1, *piVar4);\n            uVar11 = 0;\n            uVar3 = fcn.0043c670();\n            fcn.00429f87(arg_8h_00, uVar3, uVar11);\n            fcn.0043332d();\n            uVar5 = *(iVar9 + 0x18);\n            if (uVar5 == 0) {\n                fcn.00434a22();\n            }\n            else {\n                uVar6 = arg_24h;\n                if ((arg_24h == 99) && (uVar6 = uVar5,  uVar5 == 99)) {\n                    uVar6 = 2;\n                }\n                if (var_10h != 0) {\n                    if (uVar6 == 4) {\n                        uVar6 = 5;\n                    }\n                    else if (uVar6 == 3) {\n                        uVar6 = 2;\n                    }\n                }\n                uVar3 = fcn.004349af();\n                fcn.00429bea(0xf, iVar2, uVar3);\n                fcn.00429c01(arg_8h_00, 0x33, var_8h + 1 + arg_10h, 0, uVar3, iVar8, 0xfffffff2);\n                piVar4 = fcn.00434a22();\n                if (uVar6 < 1) {\ncode_r0x0043d7f3:\n                    fcn.00439062();\n                    uVar11 = extraout_EDX_00;\n                    if ((*(*piVar4 + 0xc) & 0x2000000) != 0) {\n                        uVar11 = fcn.004423f4(0x6a, 0, 0);\n                    }\n                    fcn.00439ce8(piVar4, arg_ch, arg_10h, uVar3, 0, uVar11, 5);\n                    var_10h = 1;\n                }\n                else if (uVar6 < 4) {\n                    iVar8 = *piVar4;\n                    iVar7 = 0;\n                    arg_1ch = 0x44ba38;\n                    if (*(iVar9 + 4) < 2) {\n                        arg_1ch = 0x44ba44;\n                    }\n                    if (0 < *(iVar9 + 4)) {\n                        do {\n                            uVar3 = *(*(*(iVar9 + 8) + iVar7 * 4) * 0x18 + arg_ch[3]);\n                            fcn.0041cc69(arg_1ch, 0xffffffff);\n                            arg_1ch = 0x44ba4c;\n                            fcn.0041cc69(uVar3, 0xffffffff);\n                            iVar7 = iVar7 + 1;\n                        } while (iVar7 < *(iVar9 + 4));\n                    }\n                    uVar3 = 0x44ba50;\n                    if (*(iVar9 + 4) < 2) {\n                        uVar3 = 0x44ba60;\n                    }\n                    fcn.0041cc69(uVar3, 0xffffffff);\n                    uVar3 = fcn.0041cd5b();\n                    fcn.0043908a(uVar6, uVar3, 0);\n                    fcn.0041c16b(iVar8, uVar3);\n                }\n                else {\n                    if (uVar6 != 4) goto code_r0x0043d7f3;\n                    fcn.00429b6c(1, 0, arg_28h, 0);\n                }\n                fcn.00429e14();\n                fcn.004349ca();\n            }\n        }\n        iVar9 = *(iVar9 + 0x20);\n        var_8h = var_8h + 1;\n    } while( true );\n}\n",
        "token_count": 2569
    },
    "0043d870": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0043d870(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h, int32_t arg_1ch, \n            int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *unaff_EBX;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.0043fe38();\n    iVar4 = 0;\n    for (iVar2 = unaff_EBX[4]; iVar2 != 0; iVar2 = *(iVar2 + 0x20)) {\n        iVar4 = iVar4 + 1;\n    }\n    while (iVar2 = iVar4,  iVar4 = iVar2 + -1,  -1 < iVar4) {\n        iVar1 = *(arg_14h + iVar4 * 4);\n        if ((iVar1 != 0) && (fcn.00429bea(0x46, iVar2 + arg_ch, iVar1),  arg_20h != 0)) {\n            fcn.00429e02();\n        }\n    }\n    uVar3 = fcn.004349af();\n    fcn.00429b6c(0x1e, arg_10h + 1, unaff_EBX[2], uVar3);\n    fcn.0043c6dd(arg_8h_00);\n    fcn.0043332d();\n    fcn.00429b6c(0x37, arg_ch, uVar3, arg_10h);\n    if (*(arg_8h + 0x13) == '\\0') {\n        fcn.00429f87(arg_8h_00, *unaff_EBX, 0xfffffffe);\n    }\n    fcn.00429e02();\n    return;\n}\n",
        "token_count": 445
    },
    "0043d9fe": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043dac2)\n// WARNING: Removing unreachable block (ram,0x0043dace)\n// WARNING: Removing unreachable block (ram,0x0043dae5)\n// WARNING: Removing unreachable block (ram,0x0043daea)\n// WARNING: Removing unreachable block (ram,0x0043daf3)\n// WARNING: Removing unreachable block (ram,0x0043dafd)\n// WARNING: Removing unreachable block (ram,0x0043db0c)\n// WARNING: Removing unreachable block (ram,0x0043db12)\n// WARNING: Removing unreachable block (ram,0x0043db2f)\n// WARNING: Removing unreachable block (ram,0x0043db35)\n// WARNING: Removing unreachable block (ram,0x0043db4c)\n// WARNING: Removing unreachable block (ram,0x0043db56)\n// WARNING: Removing unreachable block (ram,0x0043db5d)\n// WARNING: Removing unreachable block (ram,0x0043db6c)\n// WARNING: Removing unreachable block (ram,0x0043db84)\n// WARNING: Removing unreachable block (ram,0x0043dc13)\n// WARNING: Removing unreachable block (ram,0x0043db9d)\n// WARNING: Removing unreachable block (ram,0x0043dba1)\n// WARNING: Removing unreachable block (ram,0x0043dba6)\n// WARNING: Removing unreachable block (ram,0x0043dba8)\n// WARNING: Removing unreachable block (ram,0x0043dc1c)\n// WARNING: Removing unreachable block (ram,0x0043dbbe)\n// WARNING: Removing unreachable block (ram,0x0043dbc9)\n// WARNING: Removing unreachable block (ram,0x0043dbdf)\n// WARNING: Removing unreachable block (ram,0x0043dbf2)\n// WARNING: Removing unreachable block (ram,0x0043dbec)\n// WARNING: Removing unreachable block (ram,0x0043dbfe)\n// WARNING: Removing unreachable block (ram,0x0043dc46)\n\nint32_t __cdecl fcn.0043d9fe(int32_t arg_8h, char *arg_ch, uint arg_10h, uint arg_14h, int32_t *arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iStack36;\n    int32_t iStack28;\n    char *apcStack16 [3];\n    \n    iVar1 = fcn.0041d87b();\n    if (iVar1 == 0) {\n        iVar1 = fcn.0044a94a(0x14a35);\n    }\n    else {\n        if (arg_ch == NULL) {\n            arg_ch = 0x4435dc;\n        }\n        fcn.0041bc4a(*(arg_8h + 0x44));\n        fcn.0041d171(0, 0);\n        iStack28 = 0;\n        iStack36 = 0;\n        while (((iStack36 == 0 || ((iStack36 == 0x11 && (iStack28 = iStack28 + 1,  iStack28 < 2)))) && (*arg_ch != '\\0')\n               )) {\n            iStack36 = fcn.0043eae5(arg_ch, 0xffffffff, 0, apcStack16);\n            if (iStack36 == 0) {\n                arg_ch = apcStack16[0];\n            }\n        }\n        fcn.0041c16b(arg_8h, 0);\n        iVar1 = fcn.0041c4c4(iStack36);\n        if ((iVar1 == 0) || (iVar2 = fcn.0044a544(),  iVar1 != iVar2)) {\n            if (arg_18h != NULL) {\n                *arg_18h = 0;\n            }\n        }\n        else if (arg_18h != NULL) {\n            fcn.0044a4e1();\n            iVar3 = fcn.0041d157();\n            iVar3 = iVar3 + 1;\n            iVar2 = iVar3;\n            iVar4 = fcn.0041bf1f(iVar3);\n            *arg_18h = iVar4;\n            if (iVar4 == 0) {\n                iVar1 = 7;\n                fcn.0041d171(7, 0);\n            }\n            else {\n                uVar5 = fcn.0044a4e1(iVar2, iVar3);\n                fcn.0044b575(*arg_18h, uVar5);\n            }\n        }\n        fcn.0041bc58(*(arg_8h + 0x44));\n    }\n    return iVar1;\n}\n",
        "token_count": 1063
    },
    "0043de43": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043de43(uint arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint var_4h;\n    \n    iVar5 = 0;\n    puVar3 = 0x444738;\n    do {\n        iVar2 = fcn.0041d27e();\n        if (iVar2 == 0) {\n            iVar5 = *in_EAX;\n            iVar2 = fcn.0043fe38();\n            if (iVar2 != 0) {\n                if (arg_ch == 0) {\n                    fcn.0043ddc9(*puVar3, (*(iVar5 + 0xc) & puVar3[1]) != 0);\n                }\n                else {\n                    uVar4 = puVar3[1];\n                    if (*(iVar5 + 0x1c) == '\\0') {\n                        uVar4 = uVar4 & 0xfbffffff;\n                    }\n                    cVar1 = fcn.0043dd6c();\n                    if (cVar1 == '\\0') {\n                        *(iVar5 + 0xc) = *(iVar5 + 0xc) & ~uVar4;\n                    }\n                    else {\n                        *(iVar5 + 0xc) = *(iVar5 + 0xc) | uVar4;\n                    }\n                    fcn.00429b6c(0x7a, 0, 0, 0);\n                }\n            }\n            return 1;\n        }\n        iVar5 = iVar5 + 1;\n        puVar3 = puVar3 + 2;\n    } while (iVar5 < 0xe);\n    return 0;\n}\n",
        "token_count": 396
    },
    "0043e344": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043e344(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *unaff_ESI;\n    \n    iVar1 = *unaff_ESI;\n    if ((*(iVar1 + 0x1e) == '\\0') && ((*(iVar1 + 0xc) & 0x800000) == 0)) {\n        if (arg_8h == 0) {\n            arg_8h = 0x44bb7c;\n        }\n        fcn.0041c49d(iVar1, 0x44bb80, arg_8h);\n        if (arg_ch != 0) {\n            uVar2 = fcn.0041ce4b(*unaff_ESI[2], 0x44bba0, *unaff_ESI[2], arg_ch);\n            *unaff_ESI[2] = uVar2;\n        }\n    }\n    unaff_ESI[3] = (*(iVar1 + 0x1e) == '\\0') * 4 + 7;\n    return;\n}\n",
        "token_count": 254
    },
    "0043e3b5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043e3b5(int32_t *arg_8h, uint noname_1, int32_t *arg_10h)\n\n{\n    uint16_t *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint var_4h;\n    \n    iVar4 = arg_8h[1];\n    iVar2 = *arg_8h;\n    iVar3 = iVar4 * 0x10;\n    puVar1 = *(*(iVar2 + 8) + 0xc + iVar3) + 0x4a;\n    *puVar1 = *puVar1 & 0xfffb;\n    if (*(iVar2 + 0x1e) != '\\0') {\n        fcn.0043e344(*arg_10h, 0);\n        return 1;\n    }\n    if (arg_10h == NULL) {\n        return 0;\n    }\n    if (arg_10h[1] == 0) {\n        uVar5 = 0;\n    }\n    else {\n        if ((arg_10h[2] != NULL) && (*arg_10h[2] != '\\0')) {\n            *(iVar2 + 0x74) = iVar4;\n            uVar5 = fcn.0041d4f0();\n            *(iVar2 + 0x78) = uVar5;\n            *(iVar2 + 0x7d) = 0;\n            fcn.0043eae5(arg_10h[2], 0xffffffff, 0, 0);\n            iVar4 = *(iVar2 + 0x14);\n            *(iVar2 + 0x74) = 0;\n            if ((iVar4 != 0) && (*(iVar2 + 0x7d) == '\\0')) {\n                arg_8h[3] = iVar4;\n                if (iVar4 == 7) {\n                    *(iVar2 + 0x1e) = 1;\n                }\n                else if ((iVar4 != 9) && (iVar4 != '\\x06')) {\n                    uVar5 = fcn.0044a4e1();\n                    fcn.0043e344(*arg_10h, uVar5);\n                }\n            }\n            fcn.0042b75e();\n            return 0;\n        }\n        if (*arg_10h == 0) {\n            uVar5 = 0;\n            iVar4 = 0;\n            goto code_r0x0043e4b9;\n        }\n        iVar4 = fcn.00436778(*arg_10h, *(*(iVar2 + 8) + iVar3));\n        if (iVar4 == 0) {\n            return 0;\n        }\n        iVar4 = fcn.0041d442(iVar4 + 0x14);\n        if (iVar4 != 0) {\n            return 0;\n        }\n        uVar5 = 0x44bba8;\n    }\n    iVar4 = *arg_10h;\ncode_r0x0043e4b9:\n    fcn.0043e344(iVar4, uVar5);\n    return 0;\n}\n",
        "token_count": 705
    },
    "0043e4ca": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043e4ca(int32_t arg_8h, uint arg_ch)\n\n{\n    uint16_t *puVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint32_t var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint *var_4h;\n    \n    var_ch = 0;\n    var_24h = 0;\n    var_14h = 0;\n    var_30h = 0x44a684;\n    var_2ch = 0x44a268;\n    var_28h = 0x4447c0;\n    var_1ch = arg_8h;\n    var_18h = arg_ch;\n    fcn.0043e3b5(&var_20h, 3, &var_30h);\n    if (var_14h != 0) {\n        var_4h = var_14h;\n        goto code_r0x0043e74a;\n    }\n    var_8h = arg_8h * 0x10;\n    iVar3 = fcn.0043668f(0x44a684, *(var_8h + *(in_EAX + 8)));\n    if (iVar3 != 0) {\n        *(iVar3 + 0x22) = *(iVar3 + 0x22) | 1;\n    }\n    iVar5 = *(in_EAX + 8) + var_8h;\n    iVar3 = *(iVar5 + 4);\n    if (iVar3 == 0) {\n        return;\n    }\n    var_10h = iVar5;\n    if (*(iVar3 + 8) == '\\0') {\n        var_4h = fcn.00425c6f(iVar3, 0);\n        if (var_4h != NULL) {\n            fcn.0044a2ae();\n            fcn.0041c49d();\n            goto code_r0x0043e74a;\n        }\n        var_ch = 1;\n    }\n    var_4h = &var_34h;\n    iVar3 = 0;\n    do {\n        iVar3 = iVar3 + 1;\n        fcn.00428612(var_4h);\n        var_4h = var_4h + 1;\n    } while (iVar3 < 5);\n    **(iVar5 + 0xc) = var_34h;\n    if (var_24h == 0) {\n        puVar1 = *(var_8h + 0xc + *(in_EAX + 8)) + 0x4a;\n        *puVar1 = *puVar1 | 4;\ncode_r0x0043e62c:\n        *(*(iVar5 + 0xc) + 0x49) = *(*(*(in_EAX + 8) + 0xc) + 0x49);\n        if (*(*(iVar5 + 0xc) + 0x4c) == 0) {\n            iVar3 = var_2ch;\n            if (var_2ch == 0) {\n                iVar3 = 2000;\n            }\n            if (iVar3 < 0) {\n                iVar3 = -iVar3;\n            }\n            *(*(iVar5 + 0xc) + 0x4c) = iVar3;\n            fcn.004219eb();\n        }\n        *(*(iVar5 + 0xc) + 0x48) = var_30h;\n        if (*(*(iVar5 + 0xc) + 0x48) == '\\0') {\n            *(*(iVar5 + 0xc) + 0x48) = 1;\n        }\n        if (4 < *(*(iVar5 + 0xc) + 0x48)) goto code_r0x0043e606;\n        if ((arg_8h == 0) && (3 < var_30h)) {\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) & 0xffefffff;\n        }\n        uVar4 = fcn.0041ce3a(0x44bbd4, *(var_8h + *(in_EAX + 8)), 0x44a684);\n        var_4h = fcn.0043d9fe(in_EAX, uVar4, 0x4353a8, &var_20h, 0);\n        if (var_4h == NULL) {\n            var_4h = var_14h;\n        }\n        fcn.0041c16b();\n        if (var_4h == NULL) {\n            fcn.00435ca5();\n        }\n        if (*(in_EAX + 0x1e) != '\\0') {\n            var_4h = 0x7;\n            fcn.00436864();\n            iVar5 = var_10h;\n        }\n        if ((var_4h == NULL) || ((*(in_EAX + 0xc) & 0x800000) != 0)) {\n            puVar1 = *(var_8h + 0xc + *(in_EAX + 8)) + 0x4a;\n            *puVar1 = *puVar1 | 1;\n            var_4h = NULL;\n        }\n    }\n    else {\n        if (arg_8h == 0) {\n            uVar2 = var_24h & 3;\n            if ((var_24h & 3) == 0) {\n                uVar2 = uVar2 + 1;\n            }\n            *(*(*(in_EAX + 8) + 0xc) + 0x49) = uVar2;\n            uVar4 = fcn.0043949d(1, 0x44b960, 0);\n            *(in_EAX + 0x2c) = uVar4;\n            goto code_r0x0043e62c;\n        }\n        if (var_24h == *(*(*(in_EAX + 8) + 0xc) + 0x49)) goto code_r0x0043e62c;\ncode_r0x0043e606:\n        fcn.0041c49d();\n        var_4h = 0x1;\n    }\n    if (var_ch != 0) {\n        fcn.00425e75(*(iVar5 + 4));\n    }\ncode_r0x0043e74a:\n    if ((var_4h == 0x7) || (var_4h == 0xc0a)) {\n        *(in_EAX + 0x1e) = 1;\n    }\n    return;\n}\n",
        "token_count": 1559
    },
    "0043e80a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043e80a(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h_00;\n    bool bVar2;\n    int32_t iVar3;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t aiStack12 [2];\n    \n    iVar1 = *arg_8h;\n    iStack20 = 0;\n    if (0 < *(iVar1 + 4)) {\n        iStack24 = 0;\n        do {\n            arg_8h_00 = *(*(iVar1 + 8) + 4 + iStack24);\n            bVar2 = false;\n            if (arg_8h_00 != 0) {\n                if (*(arg_8h_00 + 8) == '\\0') {\n                    iVar3 = fcn.00425c6f(arg_8h_00, 0);\n                    if ((iVar3 == 7) || (iVar3 == 0xc0a)) {\n                        *(iVar1 + 0x1e) = 1;\n                    }\n                    if (iVar3 != 0) {\n                        return;\n                    }\n                    bVar2 = true;\n                }\n                fcn.00428612(aiStack12);\n                if (aiStack12[0] != **(*(iVar1 + 8) + 0xc + iStack24)) {\n                    arg_8h[1] = 0x11;\n                }\n                if (bVar2) {\n                    fcn.00425e75(arg_8h_00);\n                }\n            }\n            iStack20 = iStack20 + 1;\n            iStack24 = iStack24 + 0x10;\n        } while (iStack20 < *(iVar1 + 4));\n    }\n    return;\n}\n",
        "token_count": 398
    },
    "0043e8ed": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0043e8ed(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t *arg_18h, int32_t *arg_1ch)\n\n{\n    int32_t in_EAX;\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_8h = 0;\n    arg_8h_00 = fcn.0041c2f7(0x228);\n    if (arg_8h_00 == NULL) {\n        var_4h = 0x7;\n    }\n    else {\n        arg_8h_00[0x74] = arg_14h;\n        var_4h = arg_8h_00;\n        fcn.004439bd();\n        arg_8h_00[0x6f] = 0;\n        *arg_8h_00 = arg_8h;\n        arg_8h_00[0x6e] = 1;\n        if ((in_EAX < 0) || ((in_EAX != 0 && (*(arg_ch + -1 + in_EAX) == '\\0')))) {\n            fcn.0044981f(arg_8h_00, arg_ch, &var_8h);\n        }\n        else {\n            if (*(arg_8h + 0x4c) < in_EAX) {\n                fcn.0041d171(0x12, 0x44bc0c);\n                var_4h = fcn.0041c4c4(0x12);\n                goto code_r0x0043eacc;\n            }\n            iVar1 = fcn.0041c46a(arg_ch);\n            if (iVar1 == 0) {\n                arg_8h_00[0x7d] = arg_ch + in_EAX;\n            }\n            else {\n                fcn.0044981f(arg_8h_00, iVar1, &var_8h);\n                fcn.0041c16b(arg_8h, iVar1);\n                arg_8h_00[0x7d] = arg_8h_00[0x7d] + (arg_ch - iVar1);\n            }\n        }\n        if (*(arg_8h + 0x1e) != '\\0') {\n            arg_8h_00[1] = 7;\n        }\n        if (arg_8h_00[1] == 0x65) {\n            arg_8h_00[1] = 0;\n        }\n        if (*(arg_8h_00 + 0x12) != '\\0') {\n            fcn.0043e80a(arg_8h_00);\n        }\n        if (arg_8h_00[1] == 0x11) {\n            fcn.00436864();\n            arg_8h_00 = var_4h;\n        }\n        if (*(arg_8h + 0x1e) != '\\0') {\n            arg_8h_00[1] = 7;\n        }\n        if (arg_1ch != NULL) {\n            *arg_1ch = arg_8h_00[0x7d];\n        }\n        var_4h = arg_8h_00[1];\n        if (((*(arg_8h + 0x7c) == '\\0') && (iVar1 = arg_8h_00[3],  iVar1 != 0)) && (arg_10h != 0)) {\n            uVar2 = fcn.0041c46a(arg_ch);\n            *(iVar1 + 200) = uVar2;\n            *(iVar1 + 0x6a) = arg_10h;\n        }\n        if ((arg_8h_00[3] == 0) || ((var_4h == NULL && (*(arg_8h + 0x1e) == '\\0')))) {\n            *arg_18h = arg_8h_00[3];\n        }\n        else {\n            fcn.0042ad78();\n        }\n        if (var_8h == 0) {\n            fcn.0041d171(var_4h, 0);\n            goto code_r0x0043eac1;\n        }\n        fcn.0041d171(var_4h, 0x44a338, var_8h);\n        iVar1 = var_8h;\n        while( true ) {\n            fcn.0041c16b(arg_8h, iVar1);\ncode_r0x0043eac1:\n            if (arg_8h_00[0x88] == 0) break;\n            iVar1 = arg_8h_00[0x88];\n            arg_8h_00[0x88] = *(iVar1 + 0x14);\n        }\n    }\ncode_r0x0043eacc:\n    fcn.0041c16b(arg_8h, arg_8h_00);\n    fcn.0041c4c4(var_4h);\n    return;\n}\n",
        "token_count": 1155
    },
    "0043eb5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043eb5c(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint var_4h;\n    \n    if ((in_EAX == NULL) || (*(in_EAX + 0x6a) == '\\0')) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = in_EAX[0x32];\n    }\n    iVar1 = *in_EAX;\n    iVar2 = fcn.0043eae5(iVar2, 0xffffffff, in_EAX, 0);\n    if (iVar2 == 0) {\n        fcn.00429abf();\n        fcn.0042bc58();\n        *(param_1 + 0x5c) = 0;\n        fcn.0042ad78();\n        iVar2 = 0;\n    }\n    else if (iVar2 == 7) {\n        *(iVar1 + 0x1e) = 1;\n    }\n    return iVar2;\n}\n",
        "token_count": 237
    },
    "0043ec3c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t * __cdecl\nfcn.0043ec3c(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            int32_t arg_20h, int32_t arg_24h, int32_t arg_28h)\n\n{\n    int32_t arg_8h_00;\n    int32_t in_EAX;\n    int32_t *piVar1;\n    uint var_50h;\n    \n    arg_8h_00 = *arg_8h;\n    piVar1 = fcn.0041c2f7(0x50);\n    if (piVar1 == NULL) {\n        piVar1 = &var_50h;\n        fcn.0044b531(piVar1, 0, 0x50);\n    }\n    if (in_EAX == 0) {\n        fcn.00431d84(arg_8h_00, 0x71);\n        in_EAX = fcn.00432719();\n    }\n    piVar1[2] = arg_ch;\n    piVar1[3] = arg_10h;\n    piVar1[4] = arg_14h;\n    piVar1[5] = arg_18h;\n    piVar1[6] = arg_1ch;\n    *piVar1 = in_EAX;\n    piVar1[0xe] = -1;\n    piVar1[0xf] = -1;\n    piVar1[0x10] = -1;\n    *(piVar1 + 1) = 0x74;\n    *(piVar1 + 6) = arg_20h != 0;\n    piVar1[10] = arg_24h;\n    piVar1[0xb] = arg_28h;\n    if (*(arg_8h_00 + 0x1e) != '\\0') {\n        fcn.0043ebc2(arg_8h_00, piVar1);\n        if (piVar1 != &var_50h) {\n            fcn.0041c16b(arg_8h_00, piVar1);\n        }\n        piVar1 = NULL;\n    }\n    return piVar1;\n}\n",
        "token_count": 509
    },
    "0043ecfb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ecfb(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    ulong uVar3;\n    \n    if (arg_ch == NULL) {\n        return;\n    }\n    fcn.0043ebc2(arg_8h, arg_ch);\n    if (arg_8h != 0) {\n        if (*(arg_8h + 0x1e0) != NULL) {\n            piVar1 = *(arg_8h + 0x1e0);\n            iVar2 = fcn.0041c0f1(arg_ch);\n            *piVar1 = *piVar1 + iVar2;\n            return;\n        }\n        uVar3 = fcn.0041c0d6();\n        arg_ch = uVar3 >> 0x20;\n        if (uVar3 != 0) {\n            *arg_ch = *(extraout_ECX + 0x100);\n            *(extraout_ECX + 0xec) = *(extraout_ECX + 0xec) + -1;\n            *(extraout_ECX + 0x100) = arg_ch;\n            return;\n        }\n    }\n    fcn.0041c110(arg_ch);\n    return;\n}\n",
        "token_count": 291
    },
    "0043ed19": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043ed19(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    var_ch = 0;\n    var_18h = arg_ch;\n    var_14h = arg_10h;\n    var_10h = arg_14h;\n    do {\n        if ((&var_18h)[var_ch] == 0) break;\n        var_8h = 0;\n        uVar1 = *((&var_18h)[var_ch] + 4);\n        iVar4 = 0x444828;\n        do {\n            if ((uVar1 == *(iVar4 + 1)) && (iVar2 = fcn.0041d2b9(),  iVar2 == 0)) {\n                var_4h = var_4h | *(var_8h * 3 + 0x44482a);\n                break;\n            }\n            var_8h = var_8h + 1;\n            iVar4 = iVar4 + 3;\n        } while (iVar4 < 0x44483d);\n        if (6 < var_8h) {\n            var_4h = var_4h | 0x40;\n            break;\n        }\n        var_ch = var_ch + 1;\n    } while (var_ch < 3);\n    if (((var_4h & 0x21) == 0x21) || ((var_4h & 0x40) != 0)) {\n        uVar3 = 0x44af88;\n        if (arg_14h == 0) {\n            uVar3 = 0x44af89;\n        }\n        fcn.0041d1e3(0x44bc20, arg_ch, arg_10h, uVar3, arg_14h);\n    }\n    else {\n        if ((var_4h & 0x20) == 0) {\n            return var_4h;\n        }\n        if ((var_4h & 0x18) == 8) {\n            return var_4h;\n        }\n        fcn.0041d1e3(0x44bc4c);\n    }\n    return 1;\n}\n",
        "token_count": 576
    },
    "0043ee7a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ee7a(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, uint *arg_18h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar4 = *in_ECX;\n    uVar1 = fcn.00430f0e(uVar4, arg_8h);\n    iVar2 = fcn.00430f0e(uVar4, arg_8h);\n    iVar3 = fcn.00431e0d(0x4c, uVar1);\n    if ((iVar3 != 0) && (arg_14h != 0)) {\n        *(iVar3 + 2) = *(iVar3 + 2) | 1;\n        *(iVar3 + 0x20) = *(iVar2 + 0x18);\n    }\n    uVar4 = fcn.00431e41(uVar4, *arg_18h);\n    *arg_18h = uVar4;\n    return;\n}\n",
        "token_count": 266
    },
    "0043f1fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043f1fc(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t unaff_EDI;\n    \n    if ((*(in_EAX + 0x34) != 0) && (param_1 != 0)) {\n        fcn.00429b6c(0x14, *(in_EAX + 0x34), 0xffffffff, 0);\n        iVar1 = fcn.00429bd5(0x72, *(in_EAX + 0x34));\n        fcn.00429b6c(1, 0, param_1, 0);\n        if (iVar1 < *(unaff_EDI + 0x1c)) {\n            *(iVar1 * 0x14 + 8 + *(unaff_EDI + 4)) = *(unaff_EDI + 0x1c);\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 214
    },
    "0043f29a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0043f29a(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    int32_t arg_8h_00;\n    int32_t arg_10h_00;\n    uchar uVar3;\n    uint8_t *in_EAX;\n    uint arg_14h_00;\n    uint uVar4;\n    ulong uVar5;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *in_EAX;\n    uVar2 = *(in_EAX + 4);\n    arg_8h_00 = *(arg_8h + 0xc);\n    if (arg_8h_00 == 0) {\n        return;\n    }\n    if ((arg_14h == 0) && (-1 >= arg_18h)) {\n        fcn.0043f1fc(arg_1ch);\n    }\n    arg_10h_00 = *arg_10h;\n    if (*(in_EAX + 8) == 0) {\n        *(in_EAX + 8) = *(arg_8h + 0x48) + 1;\n        *(in_EAX + 0xc) = arg_10h_00;\n        *(arg_8h + 0x48) = *(arg_8h + 0x48) + arg_10h_00;\n    }\n    uVar4 = *(in_EAX + 8);\n    if (uVar1 != 3) {\n        fcn.00433460();\n        fcn.00433fff(arg_8h, uVar1 == 5);\n    }\n    if ((-1 < arg_18h) && (fcn.0043f249(arg_18h, arg_1ch, arg_10h_00, uVar4),  arg_14h == 0)) {\n        fcn.0043f1fc(arg_1ch);\n    }\n    if (uVar1 == 3) {\n        fcn.00429b6c(7, 1, uVar2, 0);\n    }\n    else if (uVar1 == 5) {\ncode_r0x0043f396:\n        if (arg_14h != 0) {\n            uVar5 = fcn.004349af();\n            fcn.00429b6c(0x1e, uVar4, uVar5 >> 0x20, uVar5);\n            fcn.0043f0ef(arg_8h, arg_14h, arg_ch, uVar5);\n            goto code_r0x0043f437;\n        }\n        if (uVar1 == 10) {\n            fcn.00429bd5(4, *(in_EAX + 4));\n            goto code_r0x0043f511;\n        }\n        fcn.00429bea(0x10, uVar4, arg_10h_00);\n        fcn.0043332d();\n    }\n    else if (uVar1 == 6) {\n        if (arg_14h == 0) {\n            fcn.0043347e(uVar2);\n        }\n        else {\ncode_r0x0043f461:\n            fcn.0043f0ef(arg_8h, arg_14h, arg_ch, uVar4);\n        }\n    }\n    else if (uVar1 == 7) {\n        uVar3 = fcn.00431a87();\n        *(arg_ch + 5) = uVar3;\n        if (arg_14h != 0) goto code_r0x0043f461;\n        uVar5 = fcn.004349af();\n        fcn.00429c01(arg_8h_00, 0x1e, uVar4, 1, uVar5, uVar5 >> 0x20, 1);\n        fcn.0043332d();\n        fcn.00429bea(0x46, uVar2, uVar5);\ncode_r0x0043f437:\n        fcn.004349ca();\n    }\n    else if (7 < uVar1) {\n        if (uVar1 < 10) {\n            uVar5 = fcn.004349af();\n            arg_14h_00 = uVar5;\n            fcn.00429b6c(0x1e, uVar4, uVar5 >> 0x20, arg_14h_00);\n            if (arg_14h == 0) {\n                uVar4 = fcn.004349af();\n                fcn.00429bea(0x36, uVar2, uVar4);\n                fcn.00429b6c(0x37, uVar2, arg_14h_00, uVar4);\n                fcn.00429e02();\n                fcn.004349ca();\n            }\n            else {\n                fcn.0043f0ef(arg_8h, arg_14h, arg_ch, arg_14h_00);\n            }\n            goto code_r0x0043f437;\n        }\n        if (uVar1 == 10) goto code_r0x0043f396;\n    }\n    if (arg_14h != 0) {\n        return;\n    }\ncode_r0x0043f511:\n    if (*(arg_ch + 0x30) != 0) {\n        fcn.00429b6c(0x73, *(arg_ch + 0x30), arg_20h, 0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 1297
    },
    "0043fb49": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043fb49(int32_t *arg_8h, int32_t *arg_ch, int32_t **arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t *in_EAX;\n    int32_t *piVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    uint uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t *piVar11;\n    uint var_1ch;\n    uint var_18h;\n    int32_t *var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = *in_EAX;\n    iVar2 = *arg_8h;\n    *arg_ch = iVar2;\n    piVar4 = fcn.0041c2f7(iVar2 * 0x18);\n    *arg_10h = piVar4;\n    if (piVar4 != NULL) {\n        var_4h = 0;\n        if (0 < iVar2) {\n            var_10h = 0;\n            var_14h = piVar4;\n            do {\n                pcVar6 = *(arg_8h[3] + var_10h);\n                pcVar3 = (arg_8h[3] + var_10h)[1];\n                if (pcVar3 == NULL) {\n                    for (; *pcVar6 == 'v'; pcVar6 = *(pcVar6 + 0xc)) {\n                    }\n                    if ((*pcVar6 == -0x68) && (iVar5 = *(pcVar6 + 0x28),  iVar5 != 0)) {\n                        iVar7 = *(pcVar6 + 0x1c);\n                        if ((iVar7 < 0) && (iVar7 = *(iVar5 + 4),  iVar7 < 0)) {\n                            uVar8 = 0x44bd78;\n                        }\n                        else {\n                            uVar8 = *(iVar7 * 0x18 + *(iVar5 + 0xc));\n                        }\n                    }\n                    else if (*pcVar6 == '\\x1a') {\n                        uVar8 = *(pcVar6 + 4);\n                    }\n                    else {\n                        uVar8 = *(arg_8h[3] + 8 + var_10h);\n                    }\n                    iVar5 = fcn.0041ce3a(0x44a338, uVar8);\n                }\n                else {\n                    iVar5 = fcn.0041c430(pcVar3);\n                }\n                if (*(iVar1 + 0x1e) != '\\0') {\n                    fcn.0041c16b(iVar1, iVar5);\n                    break;\n                }\n                iVar9 = fcn.0041d157();\n                var_8h = 0;\n                var_ch = 0;\n                iVar7 = iVar5;\n                if (0 < var_4h) {\n                    do {\n                        iVar10 = fcn.0041d27e();\n                        iVar5 = iVar7;\n                        if (iVar10 == 0) {\n                            var_8h = var_8h + 1;\n                            *(iVar9 + iVar7) = 0;\n                            iVar5 = fcn.0041ce3a(0x44bd88, iVar7, var_8h);\n                            fcn.0041c16b(iVar1, iVar7);\n                            var_ch = -1;\n                            if (iVar5 == 0) break;\n                        }\n                        var_ch = var_ch + 1;\n                        iVar7 = iVar5;\n                    } while (var_ch < var_4h);\n                }\n                var_4h = var_4h + 1;\n                var_10h = var_10h + 0x14;\n                *var_14h = iVar5;\n                var_14h = var_14h + 6;\n            } while (var_4h < iVar2);\n        }\n        if (*(iVar1 + 0x1e) == '\\0') {\n            return 0;\n        }\n        piVar11 = piVar4;\n        if (0 < var_4h) {\n            do {\n                fcn.0041c16b(iVar1, *piVar11);\n                var_4h = var_4h + -1;\n                piVar11 = piVar11 + 6;\n            } while (var_4h != 0);\n        }\n        fcn.0041c16b(iVar1, piVar4);\n        *arg_10h = NULL;\n        *arg_ch = 0;\n    }\n    return 7;\n}\n",
        "token_count": 1048
    },
    "0043fceb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043fceb(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    char *pcVar4;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_8h;\n    uint *var_4h;\n    \n    if (*(*arg_8h + 0x1e) == '\\0') {\n        fcn.0044b531(&var_2ch, 0, 0x24);\n        var_28h = in_EAX[2];\n        var_4h = *(*in_EAX + 0xc);\n        if (0 < in_ECX) {\n            pcVar4 = arg_ch + 0x16;\n            var_8h = in_ECX;\n            do {\n                uVar2 = fcn.0043f7e8(&var_2ch, *var_4h, 0, 0, 0);\n                uVar2 = fcn.0041c430(uVar2);\n                *(pcVar4 + -10) = uVar2;\n                cVar1 = fcn.00431939();\n                *pcVar4 = cVar1;\n                if (cVar1 == '\\0') {\n                    *pcVar4 = 'b';\n                }\n                puVar3 = fcn.004319c1();\n                if (puVar3 != NULL) {\n                    uVar2 = fcn.0041c430(*puVar3);\n                    *(pcVar4 + -6) = uVar2;\n                }\n                var_4h = var_4h + 5;\n                pcVar4 = pcVar4 + 0x18;\n                var_8h = var_8h + -1;\n            } while (var_8h != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 436
    },
    "0043fd90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0043fd90(int32_t *arg_8h, uint *arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint32_t uVar1;\n    uint *arg_ch_00;\n    uint *puVar2;\n    uint var_4h;\n    \n    arg_8h_00 = *arg_8h;\n    uVar1 = *(arg_8h_00 + 0xc);\n    *(arg_8h_00 + 0xc) = uVar1 & 0xfffffbff | 0x800;\n    fcn.00440d0c(arg_8h, arg_ch, 0);\n    if (arg_8h[0x10] == 0) {\n        do {\n            puVar2 = arg_ch;\n            arg_ch = puVar2[7];\n        } while (arg_ch != NULL);\n        *(arg_8h_00 + 0xc) = uVar1;\n        arg_ch_00 = fcn.0041c2f7(0x48);\n        if (arg_ch_00 != NULL) {\n            *arg_ch_00 = 0;\n            *(arg_ch_00 + 8) = 1;\n            arg_ch_00[6] = 1000000;\n            fcn.0043fb49(*puVar2, arg_ch_00 + 2, arg_ch_00 + 3);\n            fcn.0043fceb(arg_8h, arg_ch_00[3]);\n            arg_ch_00[1] = 0xffffffff;\n            if (*(arg_8h_00 + 0x1e) == '\\0') {\n                return arg_ch_00;\n            }\n            fcn.004369c9(arg_8h_00, arg_ch_00);\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 404
    },
    "0043fe4c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043fe4c(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x30) == 0) && (fcn.00433460(),  *(in_EAX + 0x28) != 0)) {\n        *(in_ECX + 0x48) = *(in_ECX + 0x48) + 1;\n        var_4h = *(in_ECX + 0x48);\n        *(in_EAX + 0x30) = var_4h;\n        var_8h = fcn.0043fe38();\n        if (var_8h != 0) {\n            iVar2 = fcn.004328bb(*(in_EAX + 0x28), &var_ch);\n            uVar1 = var_4h;\n            if (iVar2 == 0) {\n                fcn.00433ee6();\n                fcn.00429bd5(0x15, uVar1);\n                fcn.00429bea(0x73, uVar1, arg_8h);\n            }\n            else {\n                fcn.00429bea(7, var_ch, var_4h);\n                if (var_ch == 0) {\n                    fcn.00429b6c(1, 0, arg_8h, 0);\n                }\n                else {\n                    iVar2 = var_ch >> 0x1f;\n                    if ((iVar2 <= *(in_EAX + 0x4c)) && ((iVar2 < *(in_EAX + 0x4c) || (var_ch < *(in_EAX + 0x48))))) {\n                        *(in_EAX + 0x48) = var_ch;\n                        *(in_EAX + 0x4c) = iVar2;\n                    }\n                }\n            }\n            if (*(in_EAX + 0x2c) != 0) {\n                *(in_ECX + 0x48) = *(in_ECX + 0x48) + 1;\n                iVar2 = *(in_ECX + 0x48);\n                *(in_EAX + 0x34) = iVar2;\n                *(in_ECX + 0x48) = *(in_ECX + 0x48) + 1;\n                fcn.00433ee6();\n                fcn.00429bd5(0x15, iVar2);\n                fcn.00429bd5(0x71, iVar2);\n                fcn.00429b6c(7, 0, iVar2, 0);\n                fcn.00429e14();\n                fcn.00429b6c(0x56, var_4h, iVar2, iVar2 + 1);\n                fcn.00429bd5(0x71, var_4h);\n                fcn.00429b6c(7, 0xffffffff, iVar2 + 1, 0);\n                fcn.00429e14();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 712
    },
    "004401f6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004401f6(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    uchar uVar2;\n    int32_t arg_8h_00;\n    int32_t arg_10h_00;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint *arg_ch_00;\n    int32_t **in_EAX;\n    int32_t *piVar5;\n    int32_t *piVar6;\n    uint uVar7;\n    int32_t *piVar8;\n    uint16_t uVar9;\n    int16_t *piVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    int32_t *piVar13;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t *var_1ch;\n    int32_t **var_18h;\n    int32_t *var_14h;\n    uint var_10h;\n    uint *var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = *arg_8h;\n    if ((*(arg_8h_00 + 0xc) & 1) != 0) {\n        return 0;\n    }\n    piVar8 = in_EAX[2];\n    piVar1 = piVar8 + arg_ch * 0xe + 2;\n    arg_10h_00 = piVar1[6];\n    iVar11 = piVar1[4];\n    if (arg_10h == 0) {\n        if ((arg_14h != 0) && (1 < *piVar8)) {\n            return 0;\n        }\n    }\n    else if (arg_14h != 0) {\n        return 0;\n    }\n    iVar12 = *(iVar11 + 0x28);\n    if (((((((iVar12 != 0) && (in_EAX[10] != NULL)) || (*(iVar11 + 0x2c) != 0)) ||\n          ((in_EAX[9] != NULL && (iVar12 != 0)))) || ((**(iVar11 + 8) == 0 || ((*(iVar11 + 6) & 1) != 0)))) ||\n        ((iVar12 != 0 && ((1 < *piVar8 || (arg_10h != 0)))))) ||\n       ((((uVar9 = *(in_EAX + 6) & 1,  uVar9 != 0 && (arg_14h != 0)) || ((in_EAX[6] != NULL && (*(iVar11 + 0x18) != 0)))\n         ) || (((arg_10h != 0 && (*(iVar11 + 0x18) != 0)) ||\n               (((iVar12 != 0 && (in_EAX[3] != NULL)) || ((*(piVar1 + 0x15) & 0x20) != 0)))))))) {\n        return 0;\n    }\n    if (*(iVar11 + 0x1c) != 0) {\n        if (*(iVar11 + 0x18) != 0) {\n            return 0;\n        }\n        if (arg_10h != 0) {\n            return 0;\n        }\n        if (uVar9 != 0) {\n            return 0;\n        }\n        iVar12 = iVar11;\n        if (*piVar8 != 1) {\n            return 0;\n        }\n        do {\n            if ((*(iVar12 + 6) & 5) != 0) {\n                return 0;\n            }\n            iVar3 = *(iVar12 + 0x1c);\n            if ((iVar3 != 0) && (*(iVar12 + 4) != 'q')) {\n                return 0;\n            }\n            if (*(iVar12 + 8) == NULL) {\n                return 0;\n            }\n            if (**(iVar12 + 8) != 1) {\n                return 0;\n            }\n            iVar12 = iVar3;\n        } while (iVar3 != 0);\n        piVar13 = in_EAX[6];\n        if ((piVar13 != NULL) && (iVar12 = 0,  0 < *piVar13)) {\n            piVar10 = piVar13[3] + 0xe;\n            do {\n                if (*piVar10 == 0) {\n                    return 0;\n                }\n                piVar10 = piVar10 + 10;\n                iVar12 = iVar12 + 1;\n            } while (iVar12 < *in_EAX[6]);\n        }\n    }\n    arg_8h[0x80] = arg_8h[0x80];\n    while (iVar11 = *(iVar11 + 0x1c),  iVar11 != 0) {\n        piVar13 = in_EAX[6];\n        piVar4 = in_EAX[10];\n        piVar6 = in_EAX[7];\n        in_EAX[6] = NULL;\n        in_EAX[2] = NULL;\n        in_EAX[7] = NULL;\n        in_EAX[10] = NULL;\n        piVar5 = fcn.00432619(arg_8h_00, in_EAX, 0);\n        in_EAX[10] = piVar4;\n        in_EAX[6] = piVar13;\n        in_EAX[2] = piVar8;\n        *(in_EAX + 1) = 0x71;\n        in_EAX[9] = NULL;\n        if (piVar5 != NULL) {\n            piVar5[7] = piVar6;\n            piVar5[9] = 0;\n            piVar6 = piVar5;\n        }\n        in_EAX[7] = piVar6;\n        if (*(arg_8h_00 + 0x1e) != '\\0') {\n            return 1;\n        }\n    }\n    arg_ch_00 = piVar1[4];\n    fcn.0041c16b(arg_8h_00, *piVar1);\n    fcn.0041c16b(arg_8h_00, piVar1[1]);\n    fcn.0041c16b(arg_8h_00, piVar1[2]);\n    iVar11 = piVar1[3];\n    *piVar1 = 0;\n    piVar1[1] = 0;\n    piVar1[2] = 0;\n    piVar1[4] = 0;\n    var_18h = in_EAX;\n    var_ch = arg_ch_00;\n    if (iVar11 != 0) {\n        if (*(iVar11 + 0x20) == 1) {\n            piVar8 = arg_8h[0x68];\n            if (arg_8h[0x68] == NULL) {\n                piVar8 = arg_8h;\n            }\n            *(iVar11 + 0x44) = piVar8[0x87];\n            piVar8[0x87] = iVar11;\n        }\n        else {\n            *(iVar11 + 0x20) = *(iVar11 + 0x20) + -1;\n        }\n        piVar1[3] = 0;\n    }\n    do {\n        piVar10 = var_ch[2];\n        var_20h = *piVar10;\n        var_8h = var_18h[2];\n        uVar2 = 0;\n        if (var_8h == NULL) {\n            var_8h = fcn.00438c27(0, 0);\n            var_18h[2] = var_8h;\n            if (var_8h == NULL) break;\n        }\n        else {\n            uVar2 = *(piVar1 + 0x15);\n        }\n        if (1 < var_20h) {\n            var_8h = fcn.00438b5f(arg_8h_00, var_20h + -1, arg_ch + 1);\n            var_18h[2] = var_8h;\n            if (*(arg_8h_00 + 0x1e) != '\\0') break;\n        }\n        if (0 < var_20h) {\n            var_14h = piVar10 + 4;\n            var_1ch = var_8h + arg_ch * 0xe + 2;\n            do {\n                fcn.00438aeb(arg_8h_00);\n                piVar8 = var_14h;\n                piVar13 = var_1ch;\n                for (iVar11 = 0xe; iVar11 != 0; iVar11 = iVar11 + -1) {\n                    *piVar13 = *piVar8;\n                    piVar8 = piVar8 + 1;\n                    piVar13 = piVar13 + 1;\n                }\n                fcn.0044b531(var_14h, 0, 0x38);\n                var_1ch = var_1ch + 0xe;\n                var_14h = var_14h + 0xe;\n                var_20h = var_20h + -1;\n            } while (var_20h != 0);\n        }\n        *(arg_ch * 0x38 + 0x1d + var_8h) = uVar2;\n        piVar8 = *var_18h;\n        iVar11 = 0;\n        arg_8h = NULL;\n        if (0 < *piVar8) {\n            do {\n                if ((*(piVar8[3] + iVar11 + 4) == 0) && (iVar12 = *(piVar8[3] + iVar11 + 8),  iVar12 != 0)) {\n                    uVar7 = fcn.0041c430(iVar12);\n                    *(piVar8[3] + 4 + iVar11) = uVar7;\n                }\n                arg_8h = arg_8h + 1;\n                iVar11 = iVar11 + 0x14;\n            } while (arg_8h < *piVar8);\n        }\n        fcn.00440097(arg_8h_00, arg_10h_00, *var_ch);\n        if (arg_10h != 0) {\n            fcn.00440097(arg_8h_00, arg_10h_00, *var_ch);\n            piVar8 = fcn.0043ff9e(arg_8h_00, var_18h[5], arg_10h_00, *var_ch);\n            var_18h[5] = piVar8;\n        }\n        if (var_ch[6] == NULL) {\n            if (var_18h[6] != NULL) {\n                fcn.00440097(arg_8h_00, arg_10h_00, *var_ch);\n            }\n        }\n        else {\n            var_18h[6] = var_ch[6];\n            var_ch[6] = 0;\n        }\n        if (var_ch[3] == 0) {\n            arg_8h = NULL;\n        }\n        else {\n            arg_8h = fcn.0043238b(arg_8h_00, var_ch[3], 0);\n        }\n        if (arg_14h == 0) {\n            piVar8 = fcn.0043ff9e(arg_8h_00, var_18h[3], arg_10h_00, *var_ch);\n            var_18h[3] = piVar8;\n            piVar8 = fcn.00431e41(arg_8h_00, piVar8);\n            var_18h[3] = piVar8;\n        }\n        else {\n            var_18h[5] = var_18h[3];\n            var_18h[3] = arg_8h;\n            piVar8 = fcn.0043ff9e(arg_8h_00, var_18h[5], arg_10h_00, *var_ch);\n            var_18h[5] = piVar8;\n            fcn.0043238b(arg_8h_00, var_ch[5], 0);\n            piVar8 = fcn.00431e41(arg_8h_00, var_18h[5]);\n            var_18h[5] = piVar8;\n            piVar8 = fcn.004323a2(arg_8h_00, 0);\n            var_18h[4] = piVar8;\n        }\n        *(var_18h + 6) = *(var_18h + 6) | *(var_ch + 6) & 1;\n        if (var_ch[10] != NULL) {\n            var_18h[10] = var_ch[10];\n            var_ch[10] = 0;\n        }\n        var_18h = var_18h[7];\n        var_ch = var_ch[7];\n    } while (var_18h != NULL);\n    fcn.0043ecfb(arg_8h_00, arg_ch_00);\n    return 1;\n}\n",
        "token_count": 2920
    },
    "004406f9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004406f9(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    char *pcVar2;\n    int32_t **in_EAX;\n    \n    if ((((in_EAX[3] == NULL) && (**in_EAX == 1)) && (piVar1 = in_EAX[2],  *piVar1 == 1)) && (piVar1[6] == 0)) {\n        pcVar2 = *(*in_EAX)[3];\n        if ((((*(piVar1[5] + 0x22) & 0x10) == 0) && (*pcVar2 == -0x67)) &&\n           ((*(*(*(param_2 + 0x20) + 4) + 3) & 0x20) != 0)) {\n            return piVar1[5] & ~-((pcVar2[2] & 0x10U) != 0);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 228
    },
    "00440799": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00440799(int32_t arg_8h, int32_t **arg_ch)\n\n{\n    char cVar1;\n    int32_t *arg_8h_00;\n    int32_t arg_8h_01;\n    int32_t *arg_ch_00;\n    int32_t *piVar2;\n    uint *arg_ch_01;\n    char *pcVar3;\n    int32_t *piVar4;\n    bool bVar5;\n    bool bVar6;\n    uint *puVar7;\n    uint uVar8;\n    uint *puVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    uint uVar12;\n    int16_t *extraout_EDX;\n    uint *puVar13;\n    int32_t *piVar14;\n    char **ppcVar15;\n    int32_t iStack84;\n    int32_t iStack80;\n    int32_t *piStack76;\n    int32_t iStack68;\n    int32_t iStack64;\n    int32_t iStack44;\n    int32_t iStack40;\n    uint uStack28;\n    \n    arg_8h_00 = *(arg_8h + 8);\n    arg_8h_01 = *arg_8h_00;\n    if (*(arg_8h_01 + 0x1e) == '\\0') {\n        arg_ch_00 = arg_ch[2];\n        if ((arg_ch_00 == NULL) || ((*(arg_ch + 6) & 0x10) != 0)) {\n            return 1;\n        }\n        piVar2 = *arg_ch;\n        *(arg_ch + 6) = *(arg_ch + 6) | 0x10;\n        fcn.00438cb1(arg_8h_00, arg_ch_00);\n        iStack84 = 0;\n        puVar13 = extraout_EDX + 4;\n        if (0 < *extraout_EDX) {\n            do {\n                if (puVar13[3] != 0) {\n                    return 1;\n                }\n                if (puVar13[1] == 0) {\n                    arg_ch_01 = puVar13[4];\n                    fcn.004308e6(arg_8h, arg_ch_01);\n                    puVar7 = fcn.0041c2f7(0x48);\n                    puVar13[3] = puVar7;\n                    if (puVar7 == NULL) {\n                        return 2;\n                    }\n                    *(puVar7 + 8) = 1;\n                    uVar8 = fcn.0041ce3a(0x44bda4, puVar7);\n                    *puVar7 = uVar8;\n                    do {\n                        puVar9 = arg_ch_01;\n                        arg_ch_01 = puVar9[7];\n                    } while (arg_ch_01 != NULL);\n                    fcn.0043fb49(*puVar9, puVar7 + 2, puVar7 + 3);\n                    puVar7[1] = 0xffffffff;\n                    *(puVar7 + 0x22) = *(puVar7 + 0x22) | 2;\n                    puVar7[6] = 1000000;\n                }\n                else {\n                    iVar11 = fcn.00436708(0, puVar13[1], *puVar13);\n                    puVar13[3] = iVar11;\n                    if (iVar11 == 0) {\n                        return 2;\n                    }\n                    *(iVar11 + 0x20) = *(iVar11 + 0x20) + 1;\n                    if ((*(iVar11 + 0x1c) != 0) || ((*(iVar11 + 0x22) & 0x10) != 0)) {\n                        iVar10 = fcn.00437a3f();\n                        if (iVar10 != 0) {\n                            return 2;\n                        }\n                        uVar8 = fcn.00432619(arg_8h_01, *(iVar11 + 0x1c), 0);\n                        puVar13[4] = uVar8;\n                        fcn.004308e6(arg_8h, uVar8);\n                    }\n                }\n                iVar11 = fcn.00440746(arg_8h_00);\n                if (iVar11 != 0) {\n                    return 2;\n                }\n                iStack84 = iStack84 + 1;\n                puVar13 = puVar13 + 0xe;\n            } while (iStack84 < *arg_ch_00);\n        }\n        if ((*(arg_8h_01 + 0x1e) == '\\0') && (iVar11 = fcn.0043ef10(arg_8h_00, arg_ch),  iVar11 == 0)) {\n            iVar11 = *piVar2;\n            iStack80 = 0;\n            if (0 < iVar11) {\n                ppcVar15 = piVar2[3];\n                do {\n                    cVar1 = **ppcVar15;\n                    if ((cVar1 == 'q') || ((cVar1 == 'v' && (**(*ppcVar15 + 0xc) == 'q')))) break;\n                    iStack80 = iStack80 + 1;\n                    ppcVar15 = ppcVar15 + 5;\n                } while (iStack80 < iVar11);\n            }\n            if (iStack80 < iVar11) {\n                piStack76 = NULL;\n                if (((*(*arg_8h_00 + 0xc) & 0x400) == 0) || ((*(*arg_8h_00 + 0xc) & 0x800) != 0)) {\n                    bVar5 = false;\n                }\n                else {\n                    bVar5 = true;\n                }\n                iStack80 = 0;\n                if (0 < iVar11) {\n                    puVar13 = piVar2[3] + 8;\n                    do {\n                        pcVar3 = puVar13[-2];\n                        cVar1 = *pcVar3;\n                        if ((cVar1 == 'q') || ((cVar1 == 'v' && (**(pcVar3 + 0xc) == 'q')))) {\n                            bVar6 = false;\n                            if (cVar1 == 'v') {\n                                iStack68 = *(*(pcVar3 + 8) + 4);\n                            }\n                            else {\n                                iStack68 = 0;\n                            }\n                            iStack84 = 0;\n                            if (0 < *arg_ch_00) {\n                                piVar14 = extraout_EDX + 8;\n                                do {\n                                    iStack64 = *piVar14;\n                                    piVar4 = piVar14[1];\n                                    if (iStack64 == 0) {\n                                        iStack64 = *piVar4;\n                                    }\n                                    if (*(arg_8h_01 + 0x1e) != '\\0') break;\n                                    if ((iStack68 == 0) || (iVar11 = fcn.0041d27e(),  iVar11 == 0)) {\n                                        bVar6 = true;\n                                        iStack40 = 0;\n                                        if (0 < piVar4[2]) {\n                                            iStack44 = 0;\n                                            do {\n                                                uVar8 = *(piVar4[3] + iStack44);\n                                                if ((*(piVar4[3] + iStack44 + 0x17) == '\\0') &&\n                                                   (((iStack84 < 1 || (iStack68 != 0)) ||\n                                                    ((((*(piVar14 + 0xd) & 4) == 0 ||\n                                                      (iVar11 = fcn.0043ee3b(iStack84, uVar8, 0),  iVar11 == 0)) &&\n                                                     (iVar11 = fcn.00438b27(uVar8),  iVar11 < 0)))))) {\n                                                    fcn.00431d84(arg_8h_01, 0x1a);\n                                                    uStack28 = 0;\n                                                    if ((bVar5) || (1 < *arg_ch_00)) {\n                                                        uVar12 = fcn.00431d84(arg_8h_01, 0x1a);\n                                                        fcn.00431e0d(0x76, uVar12);\n                                                        if (bVar5) {\n                                                            uStack28 = fcn.0041ce3a(0x44bd80, iStack64, uVar8);\n                                                        }\n                                                    }\n                                                    piStack76 = fcn.00432719();\n                                                    fcn.0041d157();\n                                                    fcn.0043279a(arg_8h_00, 0);\n                                                    fcn.0041c16b(arg_8h_01, uStack28);\n                                                }\n                                                iStack40 = iStack40 + 1;\n                                                iStack44 = iStack44 + 0x18;\n                                            } while (iStack40 < piVar4[2]);\n                                        }\n                                    }\n                                    iStack84 = iStack84 + 1;\n                                    piVar14 = piVar14 + 0xe;\n                                } while (iStack84 < *arg_ch_00);\n                                if (bVar6) goto code_r0x00440c3f;\n                            }\n                            if (iStack68 == 0) {\n                                fcn.0041d1e3(0x44bdcc);\n                            }\n                            else {\n                                fcn.0041d1e3(0x44bdb8, iStack68);\n                            }\n                        }\n                        else {\n                            piStack76 = fcn.00432719();\n                            if (piStack76 != NULL) {\n                                *(*piStack76 * 0x14 + -0x10 + piStack76[3]) = puVar13[-1];\n                                *(*piStack76 * 0x14 + -0xc + piStack76[3]) = *puVar13;\n                                puVar13[-1] = 0;\n                                *puVar13 = 0;\n                            }\n                            puVar13[-2] = 0;\n                        }\ncode_r0x00440c3f:\n                        iStack80 = iStack80 + 1;\n                        puVar13 = puVar13 + 5;\n                    } while (iStack80 < *piVar2);\n                }\n                fcn.004327f7(arg_8h_01);\n                *arg_ch = piStack76;\n            }\n            if ((*arg_ch != NULL) && (*(arg_8h_01 + 0x50) < **arg_ch)) {\n                fcn.0041d1e3(0x44bde0);\n            }\n            return 0;\n        }\n    }\n    return 2;\n}\n",
        "token_count": 2328
    },
    "00440ca1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00440ca1(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint16_t *puVar1;\n    uint arg_8h_00;\n    int16_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    \n    iVar3 = arg_ch;\n    puVar1 = arg_ch + 6;\n    if ((*puVar1 & 0x20) == 0) {\n        arg_ch = 0;\n        *(iVar3 + 6) = *puVar1 | 0x20;\n        arg_8h_00 = *(arg_8h + 8);\n        piVar2 = *(iVar3 + 8);\n        if (0 < *piVar2) {\n            piVar5 = piVar2 + 0xc;\n            do {\n                iVar3 = piVar5[-1];\n                if ((iVar3 != 0) && ((*(iVar3 + 0x22) & 2) != 0)) {\n                    iVar4 = *piVar5;\n                    do {\n                        iVar4 = *(iVar4 + 0x1c);\n                    } while (iVar4 != 0);\n                    fcn.0043fceb(arg_8h_00, *(iVar3 + 0xc));\n                }\n                arg_ch = arg_ch + 1;\n                piVar5 = piVar5 + 0xe;\n            } while (arg_ch < *piVar2);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 339
    },
    "00440d0c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00440d0c(int32_t *arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    \n    if ((arg_ch != 0) && (iVar1 = *arg_8h,  (*(arg_ch + 6) & 0x20) == 0)) {\n        var_ch = 0x43778c;\n        var_10h = 0x412c59;\n        var_8h = arg_8h;\n        fcn.004308e6(&var_10h, arg_ch);\n        if ((arg_8h[0x10] == 0) &&\n           (((*(iVar1 + 0x1e) == '\\0' && (fcn.0043190c(arg_ch, arg_10h),  arg_8h[0x10] == 0)) &&\n            (*(iVar1 + 0x1e) == '\\0')))) {\n            var_ch = 0x437c94;\n            var_10h = 0x412c59;\n            var_8h = arg_8h;\n            fcn.004308e6(&var_10h, arg_ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 296
    },
    "00440e9d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00440e9d(int32_t *arg_8h, uchar *arg_ch)\n\n{\n    int32_t arg_1ch;\n    uint arg_8h_00;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint arg_14h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar2 = arg_8h[3];\n    *arg_ch = 1;\n    fcn.00433460();\n    var_10h = 0;\n    piVar1 = *(arg_ch + 0x20);\n    if (0 < *(arg_ch + 0x24)) {\n        do {\n            var_14h = 0;\n            arg_14h = 0;\n            if (*(*piVar1 + 0x10) == NULL) {\n                var_4h = 0;\n            }\n            else {\n                var_4h = **(*piVar1 + 0x10);\n                arg_14h = fcn.004349fe();\n                fcn.00433fff(arg_8h_00, 1);\n            }\n            if (-1 < piVar1[3]) {\n                var_14h = fcn.00429c62();\n                fcn.0043f249(piVar1[3], var_14h, 1, arg_14h);\n            }\n            if ((*(piVar1[1] + 3) & 8) != 0) {\n                arg_1ch = 0;\n                var_ch = 0;\n                do {\n                    if (var_4h <= var_ch) break;\n                    arg_1ch = fcn.004319c1();\n                    var_ch = var_ch + 1;\n                } while (arg_1ch == 0);\n                if (arg_1ch == 0) {\n                    arg_1ch = *(*arg_8h + 0x2c);\n                }\n                fcn.00429c01(iVar2, 0x11, 0, 0, 0, arg_1ch, 0xfffffffc);\n            }\n            fcn.00429c01(iVar2, 0x74, 0, arg_14h, piVar1[2], piVar1[1], 0xfffffffb);\n            fcn.00429e02();\n            fcn.0043332d();\n            fcn.00434a22();\n            if (var_14h != 0) {\n                fcn.00429caf();\n                fcn.00433460();\n            }\n            var_10h = var_10h + 1;\n            piVar1 = piVar1 + 4;\n        } while (var_10h < *(arg_ch + 0x24));\n    }\n    fcn.00433460();\n    iVar2 = 0;\n    if (0 < *(arg_ch + 0x1c)) {\n        do {\n            fcn.00433ee6();\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < *(arg_ch + 0x1c));\n    }\n    *arg_ch = 0;\n    fcn.00433460();\n    return;\n}\n",
        "token_count": 729
    },
    "00441019": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00441019(int32_t *param_1, int32_t **param_2, uint8_t *param_3)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    ushort *puVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    ushort extraout_var;\n    int32_t *piVar6;\n    int32_t iVar7;\n    int32_t *piStack208;\n    int32_t *piStack204;\n    uchar *puStack180;\n    uchar uStack172;\n    uchar uStack171;\n    int32_t iStack168;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    int32_t iStack152;\n    int32_t iStack148;\n    int32_t iStack144;\n    uchar uStack140;\n    uchar uStack139;\n    int32_t iStack136;\n    int32_t *piStack132;\n    int32_t iStack128;\n    int32_t iStack124;\n    int32_t iStack120;\n    int32_t iStack112;\n    int32_t iStack108;\n    int32_t iStack104;\n    int32_t iStack96;\n    uint uStack92;\n    int32_t *piStack88;\n    int32_t iStack84;\n    int32_t iStack80;\n    int32_t iStack76;\n    int32_t iStack72;\n    int32_t iStack68;\n    int32_t *piStack64;\n    int32_t *piStack60;\n    int32_t *piStack56;\n    int32_t iStack52;\n    int32_t *piStack48;\n    uint uStack44;\n    uint32_t uStack40;\n    int32_t iStack36;\n    int32_t iStack32;\n    int32_t *piStack28;\n    int32_t *piStack24;\n    int32_t iStack20;\n    uint8_t uStack13;\n    int32_t *piStack12;\n    int32_t iStack8;\n    \n    iVar1 = *param_1;\n    iStack20 = 1;\n    if (param_2 == NULL) {\n        return 1;\n    }\n    if (*(iVar1 + 0x1e) != '\\0') {\n        return 1;\n    }\n    if (param_1[0x10] != 0) {\n        return 1;\n    }\n    iStack32 = iVar1;\n    fcn.0044b531(&uStack140, 0, 0x2c);\n    if (*param_3 < 5) {\n        fcn.004327f7(iVar1);\n        param_2[6] = NULL;\n        *(param_2 + 6) = *(param_2 + 6) & 0xfffe;\n    }\n    fcn.00440d0c(param_1, param_2, 0);\n    piStack28 = param_2[6];\n    piStack64 = param_2[2];\n    piStack56 = *param_2;\n    if ((param_1[0x10] != 0) || (*(iStack32 + 0x1e) != '\\0')) goto code_r0x00441ad4;\n    uStack40 = *(param_2 + 6) >> 2 & 1;\n    iStack8 = fcn.0043fe38();\n    if (iStack8 == 0) goto code_r0x00441ad4;\n    if ((1 < *piStack56) && ((*param_3 == 6 || (*param_3 == 7)))) {\n        fcn.0041d1e3(0x44bd30);\n        goto code_r0x00441ad4;\n    }\n    for (iStack36 = 0; (iVar1 = iStack36,  piVar6 = piStack64,  param_2[7] == NULL && (iStack36 < *piStack64));\n        iStack36 = iStack36 + 1) {\n        iVar4 = piStack64[iStack36 * 0xe + 6];\n        if ((iVar4 != 0) && (*(piStack64 + iStack36 * 0xe + 7) == '\\0')) {\n            piStack12 = NULL;\n            fcn.00431be5();\n            param_1[0x86] = param_1[0x86] + piStack12;\n            piStack12 = *(iVar4 + 6) >> 2 & 1;\n            iVar7 = fcn.004401f6(param_1, iStack36, uStack40, piStack12);\n            if (iVar7 == 0) {\n                iStack168 = piVar6[iVar1 * 0xe + 8];\n                uStack164 = 0;\n                uStack160 = 0;\n                uStack172 = 9;\n                uStack171 = 0;\n                fcn.00441019(param_1, iVar4, &uStack172);\n                *(piVar6 + iVar1 * 0xe + 7) = 1;\n                *(piVar6[iVar1 * 0xe + 5] + 0x18) = *(iVar4 + 0x48);\n            }\n            else {\n                if (piStack12 != NULL) {\n                    *(param_2 + 6) = *(param_2 + 6) | 4;\n                    uStack40 = 1;\n                }\n                iStack36 = -1;\n            }\n            if (*(iStack32 + 0x1e) != '\\0') goto code_r0x00441ad4;\n            piStack12 = NULL;\n            fcn.00431be5();\n            param_1[0x86] = param_1[0x86] - piStack12;\n            piStack64 = param_2[2];\n            if (4 < *param_3) {\n                piStack28 = param_2[6];\n            }\n        }\n    }\n    piStack48 = param_2[3];\n    piStack56 = *param_2;\n    piStack24 = param_2[4];\n    piStack88 = param_2[5];\n    if ((*(param_2 + 6) & 5) == 1) {\n        piStack24 = fcn.004323a2(iStack32, 0);\n        *(param_2 + 6) = *(param_2 + 6) & 0xfffe;\n        param_2[4] = piStack24;\n    }\n    iVar1 = fcn.00434690();\n    if ((iVar1 == 0) && ((*(iStack32 + 0xc) & 0x20) == 0)) {\n        piStack28 = NULL;\n    }\n    piVar6 = piStack28;\n    if (piStack28 == NULL) {\n        piStack12 = 0xffffffff;\n    }\n    else {\n        uVar2 = fcn.0043f533(param_1, piStack28);\n        piVar6[2] = param_1[0x11];\n        param_1[0x11] = param_1[0x11] + 1;\n        piStack12 = fcn.00429c01(iStack8, 0x29, piVar6[2], *piVar6 + 2, 0, uVar2, 0xfffffff0);\n        param_2[0x10] = piStack12;\n    }\n    if (*param_3 == 9) {\n        fcn.00429bea(0x29, *(param_3 + 4), *piStack56);\n    }\n    uStack156 = fcn.00429c62();\n    param_2[0x12] = 0xffffffff;\n    param_2[0x13] = 0x7fffffff;\n    fcn.0043fe4c(uStack156);\n    if ((*(param_2 + 6) & 1) == 0) {\n        iStack80 = -1;\n    }\n    else {\n        iVar1 = param_1[0x11];\n        param_1[0x11] = iVar1 + 1;\n        iStack80 = iVar1;\n        uVar2 = fcn.0043f533(param_1, *param_2);\n        fcn.00429c01(iStack8, 0x29, iVar1, 0, 0, uVar2, 0xfffffff0);\n        fcn.00429e02();\n    }\n    piVar6 = piStack24;\n    if (uStack40 == 0) {\n        if (piStack24 != NULL) {\ncode_r0x0044139e:\n            iVar1 = **param_2;\n            if (0 < iVar1) {\n                puVar3 = (*param_2)[3] + 0x10;\n                do {\n                    *puVar3 = 0;\n                    iVar1 = iVar1 + -1;\n                    puVar3 = puVar3 + 10;\n                } while (0 < iVar1);\n            }\n            iVar1 = *piStack24;\n            if (0 < iVar1) {\n                puVar3 = piStack24[3] + 0x10;\n                do {\n                    *puVar3 = 0;\n                    iVar1 = iVar1 + -1;\n                    puVar3 = puVar3 + 10;\n                } while (0 < iVar1);\n            }\n            if ((-1 < param_2[0x13]) && ((0 < param_2[0x13] || (0x64 < param_2[0x12])))) {\n                param_2[0x12] = 0x64;\n                param_2[0x13] = NULL;\n            }\n            goto code_r0x004413f2;\n        }\n        iVar1 = fcn.00446af4(param_1, piStack64, piStack48, &piStack28, 0);\n        if (iVar1 == 0) goto code_r0x00441ad4;\n        piVar6 = *(iVar1 + 0x2c);\n        if ((piVar6 <= param_2[0x13]) && ((piVar6 < param_2[0x13] || (*(iVar1 + 0x28) < param_2[0x12])))) {\n            param_2[0x12] = *(iVar1 + 0x28);\n            param_2[0x13] = piVar6;\n        }\n        if ((-1 < piStack12) && (piStack28 == NULL)) {\n            fcn.00429f48(1);\n            param_2[0x10] = 0xffffffff;\n        }\n        fcn.0043f29a(param_1, param_2, piStack56, piStack28, 0xffffffff, *(iVar1 + 0x10), *(iVar1 + 0x14));\n        fcn.00447218();\n    }\n    else {\n        if (piStack24 != NULL) goto code_r0x0044139e;\n        param_2[0x13] = NULL;\n        param_2[0x12] = 0x1;\ncode_r0x004413f2:\n        uStack44 = fcn.00429c62();\n        fcn.0044b531(&piStack208, 0, 0x24);\n        piStack204 = piStack64;\n        puStack180 = &uStack140;\n        piStack208 = param_1;\n        if (piVar6 == NULL) {\n            iStack128 = 0;\n        }\n        else {\n            iStack128 = *piVar6 + 1;\n        }\n        piStack132 = piVar6;\n        fcn.00434989(&piStack208);\n        fcn.00434989(&piStack208);\n        if (piStack88 != NULL) {\n            fcn.00434962(piStack88);\n        }\n        iVar1 = 0;\n        iStack112 = iStack120;\n        if (0 < iStack104) {\n            do {\n                fcn.00434989(&piStack208);\n                iVar1 = iVar1 + 1;\n            } while (iVar1 < iStack104);\n        }\n        piVar6 = piStack24;\n        if (*(iStack32 + 0x1e) != '\\0') goto code_r0x00441ad4;\n        if (piStack24 == NULL) {\n            piStack60 = NULL;\n            iVar1 = fcn.004406f9();\n            if (iVar1 == 0) {\n                piStack12 = NULL;\n                uStack13 = fcn.00440696();\n                iVar1 = iStack32;\n                if (((uStack13 != 0) &&\n                    (piStack60 = fcn.004323a2(iStack32, 0),  piStack12 = piStack60,  piStack60 != NULL)) &&\n                   (*(iVar1 + 0x1e) == '\\0')) {\n                    *(piStack60[3] + 0xc) = uStack13 != 1;\n                    **piStack60[3] = 0x98;\n                }\n                fcn.00440d91(param_1);\n                iVar1 = fcn.00446af4(param_1, piStack64, piStack48, &piStack12, CONCAT22(extraout_var, uStack13));\n                if (iVar1 == 0) {\n                    fcn.004327f7(iStack32);\n                    goto code_r0x00441ad4;\n                }\n                fcn.00440e9d(param_1, &uStack140);\n                if ((piStack12 == NULL) && (uStack13 != 0)) {\n                    fcn.00429b6c(1, 0, *(iVar1 + 0x14), 0);\n                }\n                fcn.00447218();\n                fcn.00440e53();\n            }\n            else {\n                uVar2 = fcn.0043e8c8();\n                piStack12 = NULL;\n                iStack72 = 0;\n                iStack68 = param_1[0x11];\n                param_1[0x11] = iStack68 + 1;\n                iStack80 = *(iVar1 + 0x14);\n                fcn.00438fc7();\n                iVar4 = *(iVar1 + 0x10);\n                iVar7 = iStack72;\n                if (iVar4 != 0) {\n                    do {\n                        if ((iVar7 == 0) || (*(iVar4 + 4) < *(iVar7 + 4))) {\n                            iVar7 = iVar4;\n                        }\n                        iVar4 = *(iVar4 + 0x20);\n                    } while (iVar4 != 0);\n                    if ((iVar7 != 0) && (*(iVar7 + 4) < *(iVar1 + 8))) {\n                        iStack80 = *(iVar7 + 0x14);\n                        piStack12 = fcn.004392af(param_1, iVar7);\n                    }\n                }\n                iVar1 = iStack8;\n                fcn.00429b6c(0x26, iStack68, iStack80, uVar2);\n                if (piStack12 != NULL) {\n                    fcn.00429f87(iVar1, piStack12, 0xfffffff0);\n                }\n                fcn.00429bea(0x1f, iStack68, *(iStack108 + 8));\n                fcn.00429bd5(0x2b, iStack68);\n            }\n            piStack28 = NULL;\n            fcn.00434349(param_1, piStack88, uStack44, 8);\n            fcn.0043f29a(param_1, param_2, *param_2, 0, 0xffffffff, uStack44, uStack44);\n            fcn.004327f7(iStack32);\n        }\n        else {\n            iStack136 = param_1[0x11];\n            param_1[0x11] = iStack136 + 1;\n            iStack96 = fcn.0043f533(param_1, piStack24);\n            iStack72 = fcn.00429c01(iStack8, 0x29, iStack136, iStack128, 0, iStack96, 0xfffffff0);\n            iVar1 = param_1[0x12];\n            piStack60 = iVar1 + 1;\n            iStack76 = iVar1 + 3;\n            param_1[0x12] = iStack76;\n            iStack148 = iVar1 + 2;\n            uStack92 = fcn.00429c62();\n            param_1[0x12] = param_1[0x12] + 1;\n            piStack12 = param_1[0x12];\n            iStack68 = fcn.00429c62();\n            iStack152 = param_1[0x12] + 1;\n            iVar4 = param_1[0x12] + *piVar6;\n            uStack40 = iVar4 + 1;\n            param_1[0x12] = iVar4;\n            param_1[0x12] = *piVar6 + iVar4;\n            fcn.00429b6c(7, 0, iVar1 + 2, 0);\n            fcn.00429b6c(7, 0, piStack60, 0);\n            fcn.00429bea(2, piStack12, iStack68);\n            iStack144 = fcn.00446af4(param_1, piStack64, piStack48, &piStack24, 0);\n            if (iStack144 == 0) goto code_r0x00441ad4;\n            if (piStack24 == NULL) {\n                piStack24 = param_2[4];\n                piStack48 = NULL;\n            }\n            else {\n                iVar1 = *piStack24;\n                iStack20 = iVar1 + 1;\n                piStack48 = 0x1;\n                iStack52 = iStack20;\n                if (0 < iStack120) {\n                    piVar6 = iStack124 + 0xc;\n                    iVar4 = iStack20;\n                    iVar7 = iStack120;\n                    do {\n                        if (iVar4 <= *piVar6) {\n                            iStack52 = iStack52 + 1;\n                            iVar4 = iVar4 + 1;\n                        }\n                        piVar6 = piVar6 + 6;\n                        iVar7 = iVar7 + -1;\n                    } while (iVar7 != 0);\n                }\n                iVar4 = fcn.004349fe();\n                fcn.00433460();\n                fcn.00433fff(param_1, 0);\n                fcn.00429bea(0x35, iStack136, iVar4 + iVar1);\n                iVar1 = iStack20;\n                iStack36 = 0;\n                if (0 < iStack120) {\n                    iStack20 = 0;\n                    iStack84 = iVar4 + iVar1;\n                    do {\n                        puVar5 = iStack124 + iStack20;\n                        if (iVar1 <= puVar5[3]) {\n                            iVar7 = fcn.004333de(*puVar5, puVar5[2], puVar5[1], iStack84);\n                            if (iStack84 != iVar7) {\n                                fcn.00429bea(0xf, iVar7, iStack84);\n                            }\n                            iVar1 = iVar1 + 1;\n                            iStack84 = iStack84 + 1;\n                        }\n                        iStack36 = iStack36 + 1;\n                        iStack20 = iStack20 + 0x18;\n                    } while (iStack36 < iStack120);\n                }\n                uVar2 = fcn.004349af();\n                fcn.00429b6c(0x1e, iVar4, iStack52, uVar2);\n                fcn.00429bea(0x46, iStack136, uVar2);\n                fcn.004349ca();\n                fcn.00434a22();\n                fcn.00447218();\n                fcn.00429bea(0x40, iStack136, uStack44);\n                uStack139 = 1;\n                fcn.00433460();\n            }\n            iStack52 = *(iStack8 + 0x1c);\n            fcn.00433460();\n            iVar1 = 0;\n            if (0 < *piStack24) {\n                iStack20 = 0;\n                do {\n                    if (piStack48 == NULL) {\n                        uStack140 = 1;\n                        fcn.00433ee6();\n                    }\n                    else {\n                        fcn.00429b6c(0x1c, iStack136, iVar1, uStack40 + iVar1);\n                    }\n                    iStack20 = iStack20 + 0x14;\n                    iVar1 = iVar1 + 1;\n                } while (iVar1 < *piStack24);\n            }\n            iVar1 = iStack8;\n            fcn.00429c01(iStack8, 0x18, iStack152, uStack40, *piStack24, iStack96, 0xfffffffa);\n            iStack96 = *(iVar1 + 0x1c);\n            fcn.00429b6c(0x19, iStack96 + 1, 0, iStack96 + 1);\n            fcn.0043347e(iStack152);\n            iVar1 = iStack8;\n            fcn.00429bea(2, iStack76, uStack92);\n            fcn.00429bea(0x71, iStack148, uStack44);\n            fcn.00429bea(2, piStack12, iStack68);\n            fcn.00429e14();\n            fcn.00440e9d(param_1, &uStack140);\n            fcn.00429b6c(7, 1, piStack60, 0);\n            if (piStack48 == NULL) {\n                fcn.00447218();\n                fcn.00429f48(1);\n            }\n            else {\n                fcn.00429bea(0x43, iStack136, iStack52);\n            }\n            fcn.00429bea(2, iStack76, uStack92);\n            fcn.00429b6c(1, 0, uStack44, 0);\n            iStack72 = *(iVar1 + 0x1c);\n            fcn.00429b6c(7, 1, iStack148, 0);\n            fcn.00429bd5(3, iStack76);\n            fcn.00429caf();\n            iVar1 = *(iVar1 + 0x1c);\n            fcn.00429bea(0x71, piStack60, iVar1 + 2);\n            fcn.00429bd5(3, iStack76);\n            fcn.00440e53();\n            iVar1 = iVar1 + 1;\n            fcn.00434349(param_1, piStack88, iVar1, 8);\n            fcn.0043f29a(param_1, param_2, *param_2, piStack28, iStack80, iVar1, iStack72);\n            fcn.00429bd5(3, iStack76);\n            fcn.00429caf();\n            fcn.00440d91(param_1);\n            fcn.00429bd5(3, piStack12);\n        }\n        fcn.00429caf();\n    }\n    if (piStack28 != NULL) {\n        fcn.0043f5cb(param_1, param_2, iStack8, *piStack56, param_3);\n    }\n    fcn.00429caf();\n    iStack20 = 0;\n    if (*param_3 == 5) {\n        fcn.0043f9dd(param_1, piStack64, piStack56);\n    }\ncode_r0x00441ad4:\n    fcn.0041c16b(iStack32, iStack124);\n    fcn.0041c16b(iStack32, iStack108);\n    return iStack20;\n}\n",
        "token_count": 5323
    },
    "00441af8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00441af8(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if (arg_ch != 0) {\n        do {\n            iVar1 = *(arg_ch + 0x20);\n            fcn.00432063(arg_8h, *(arg_ch + 0x14));\n            fcn.004327f7(arg_8h);\n            fcn.0043ecfb(arg_8h, *(arg_ch + 8));\n            fcn.00438aeb(arg_8h);\n            fcn.0041c16b(arg_8h, arg_ch);\n            arg_ch = iVar1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 165
    },
    "00441b4b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00441b4b(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t unaff_EBX;\n    int32_t *piVar3;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    iVar1 = *(*(*in_EAX + 8) + 0x1c);\n    if (*(in_EAX + 0x1b2) != '\\0') {\n        return 0;\n    }\n    if ((iVar1 != *(unaff_EBX + 0x40)) && (piVar3 = *(iVar1 + 0x2c),  piVar3 != NULL)) {\n        do {\n            iVar1 = piVar3[2];\n            if ((*(iVar1 + 0x18) == *(unaff_EBX + 0x40)) && (iVar2 = fcn.0041d27e(),  iVar2 == 0)) {\n                if (var_4h == 0) {\n                    var_4h = *(unaff_EBX + 0x3c);\n                }\n                *(iVar1 + 0x20) = var_4h;\n                var_4h = iVar1;\n            }\n            piVar3 = *piVar3;\n        } while (piVar3 != NULL);\n        if (var_4h != 0) {\n            return var_4h;\n        }\n    }\n    return *(unaff_EBX + 0x3c);\n}\n",
        "token_count": 338
    },
    "00441bb3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00441bb3(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch, int32_t arg_20h\n            , int32_t arg_24h)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *in_ECX;\n    uint extraout_ECX;\n    uint uVar4;\n    uint var_24h;\n    int32_t var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = *in_ECX;\n    var_10h = NULL;\n    var_8h = 0;\n    if (arg_20h != 0) {\n        if (*(arg_8h + 4) == 0) {\n            arg_20h = 1;\n            var_ch = in_EAX;\n            goto code_r0x00441c0e;\n        }\n        uVar4 = 0x44be34;\ncode_r0x00441bdf:\n        fcn.0041d1e3(uVar4);\n        goto code_r0x00441e30;\n    }\n    arg_20h = fcn.00436b98();\n    if (arg_20h < 0) goto code_r0x00441e30;\ncode_r0x00441c0e:\n    if ((arg_18h == 0) || (*(var_4h + 0x1e) != '\\0')) goto code_r0x00441e30;\n    iVar1 = fcn.004397e4();\n    if ((*(var_4h + 0x7c) == '\\0') &&\n       (((*(arg_8h + 4) == 0 && (iVar1 != 0)) && (*(iVar1 + 0x40) == *(*(var_4h + 8) + 0x1c))))) {\n        arg_20h = 1;\n    }\n    if ((*(var_4h + 0x1e) != '\\0') ||\n       ((iVar1 = fcn.00436254(0x44be64, var_ch),  iVar1 != 0 && (iVar1 = fcn.00436282(&var_24h, arg_18h),  iVar1 != 0)))\n       ) goto code_r0x00441e30;\n    var_14h = fcn.004397e4();\n    if (var_14h == 0) {\n        if (*(var_4h + 0x74) == 1) {\n            *(var_4h + 0x7d) = 1;\n        }\n        goto code_r0x00441e30;\n    }\n    if ((*(var_14h + 0x22) & 0x10) != 0) {\n        uVar4 = 0x44be6c;\n        goto code_r0x00441bdf;\n    }\n    var_8h = fcn.00436ac6();\n    if ((var_8h == 0) || (iVar1 = fcn.00436be4(var_8h),  iVar1 != 0)) goto code_r0x00441e30;\n    fcn.0041d157();\n    iVar2 = fcn.0041dace(extraout_ECX);\n    iVar1 = var_14h;\n    if (iVar2 != 0) {\n        if (arg_24h == 0) {\n            fcn.0041d1e3(0x44be98, var_ch);\n        }\n        goto code_r0x00441e30;\n    }\n    iVar2 = fcn.0041d2b9();\n    if (iVar2 == 0) {\n        fcn.0041d1e3(0x44beb4);\n        in_ECX[0x10] = in_ECX[0x10] + 1;\n        goto code_r0x00441e30;\n    }\n    if (*(iVar1 + 0x1c) == 0) {\ncode_r0x00441d8c:\n        if (arg_ch == 0x30) {\n            fcn.0041d1e3(0x44bf14, arg_18h, 0);\n            goto code_r0x00441e30;\n        }\n    }\n    else {\n        if (arg_ch != 0x30) {\n            uVar4 = 0x44bedc;\n            if (arg_ch != 0x22) {\n                uVar4 = 0x44bee4;\n            }\n            fcn.0041d1e3(0x44beec, uVar4, arg_18h, 0);\n            goto code_r0x00441e30;\n        }\n        if (*(iVar1 + 0x1c) == 0) goto code_r0x00441d8c;\n        arg_ch = 0x22;\n    }\n    piVar3 = fcn.0041c2f7(0x24);\n    iVar1 = var_4h;\n    var_10h = piVar3;\n    if (piVar3 != NULL) {\n        *piVar3 = var_8h;\n        var_8h = 0;\n        iVar2 = fcn.0041c430(*(arg_18h + 0xc));\n        piVar3[1] = iVar2;\n        piVar3[5] = *(*(iVar1 + 8) + 0xc + arg_20h * 0x10);\n        piVar3[6] = *(var_14h + 0x40);\n        *(piVar3 + 2) = arg_10h;\n        *(piVar3 + 9) = (arg_ch != 0x22) + '\\x01';\n        iVar2 = fcn.0043238b(iVar1, arg_1ch, 1);\n        piVar3[3] = iVar2;\n        iVar1 = fcn.0043258e(iVar1);\n        piVar3[4] = iVar1;\n        in_ECX[0x7f] = piVar3;\n    }\ncode_r0x00441e30:\n    fcn.0041c16b(var_4h, var_8h);\n    fcn.00438d01(var_4h);\n    fcn.00438aeb(var_4h);\n    fcn.00432063(var_4h, arg_1ch);\n    if (in_ECX[0x7f] == 0) {\n        fcn.0044218c();\n    }\n    return;\n}\n",
        "token_count": 1506
    },
    "00441e78": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00441e78(int32_t *arg_8h, int32_t arg_ch, uint *arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint extraout_ECX;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint *arg_ch_00;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = *arg_8h;\n    puVar1 = arg_8h[0x7f];\n    arg_8h[0x7f] = 0;\n    if ((arg_8h[0x10] == 0) && (puVar1 != NULL)) {\n        var_ch = *puVar1;\n        var_8h = fcn.0043e8c8();\n        puVar1[7] = arg_ch;\n        if (arg_ch != 0) {\n            do {\n                *(arg_ch + 4) = puVar1;\n                arg_ch = *(arg_ch + 0x20);\n            } while (arg_ch != 0);\n        }\n        var_1ch = *puVar1;\n        var_18h = fcn.0041d157();\n        iVar2 = fcn.00436254(0x44be64, &var_1ch);\n        if ((iVar2 == 0) || (iVar2 = fcn.00436408(&var_2ch),  iVar2 == 0)) {\n            if (*(var_4h + 0x7c) == '\\0') {\n                var_14h = fcn.0043fe38();\n                if (var_14h == 0) goto code_r0x00442022;\n                fcn.00439033(0);\n                iVar2 = var_4h;\n                uVar3 = fcn.0041c46a(*arg_10h);\n                uVar4 = puVar1[1];\n                uVar6 = 0x44a684;\n                uVar8 = *(var_8h * 0x10 + *(iVar2 + 8));\n                uVar5 = 0x44bf48;\n                uVar7 = var_ch;\n                var_10h = uVar3;\n                fcn.00436610(0x44bf48, uVar8);\n                fcn.0041c16b(iVar2, var_10h, uVar5, uVar8, uVar6, uVar7, uVar4, uVar3);\n                fcn.004372cc(var_8h);\n                uVar8 = 0xffffffff;\n                uVar4 = fcn.0041ce3a(0x44bf88, var_ch);\n                fcn.00429c01(var_14h, 99, var_8h, 0, 0, uVar4, uVar8);\n            }\n            if (*(var_4h + 0x7c) != '\\0') {\n                arg_ch_00 = puVar1;\n                uVar4 = fcn.0041d157();\n                iVar2 = fcn.0041db04(uVar4, arg_ch_00);\n                if (iVar2 == 0) {\n                    if (puVar1[5] == puVar1[6]) {\n                        fcn.0041d157();\n                        iVar2 = fcn.0041dace(extraout_ECX);\n                        puVar1[8] = *(iVar2 + 0x3c);\n                        *(iVar2 + 0x3c) = puVar1;\n                    }\n                }\n                else {\n                    *(var_4h + 0x1e) = 1;\n                }\n            }\n        }\n    }\ncode_r0x00442022:\n    iVar2 = var_4h;\n    fcn.0044218c();\n    fcn.00441af8(iVar2, arg_ch);\n    return;\n}\n",
        "token_count": 929
    },
    "004421c9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004421c9(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    arg_8h_00 = *arg_8h;\n    if ((*(arg_8h_00 + 0x1e) == '\\0') && (iVar2 = fcn.0043e7ea(),  iVar2 == 0)) {\n        iVar2 = *(arg_ch + 8);\n        uVar1 = *(arg_ch + 0xc);\n        fcn.0041d157();\n        var_4h = 1;\n        if (1 < *(arg_8h_00 + 4)) {\n            do {\n                if (((iVar2 == 0) || (iVar3 = fcn.0041d27e(),  iVar3 == 0)) &&\n                   (var_8h = fcn.0041dace(uVar1),  var_8h != 0)) goto code_r0x00442292;\n                var_4h = var_4h + 1;\n            } while (var_4h < *(arg_8h_00 + 4));\n            if (var_8h != 0) {\ncode_r0x00442292:\n                fcn.004422ac();\n                goto code_r0x0044229d;\n            }\n        }\n        if (arg_10h == 0) {\n            fcn.0041d1e3(0x44bfa8, arg_ch, 0);\n        }\n        *(arg_8h + 0x12) = 1;\n    }\ncode_r0x0044229d:\n    fcn.00438d01(arg_8h_00);\n    return;\n}\n",
        "token_count": 460
    },
    "004425e7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t ** __cdecl fcn.004425e7(int32_t *arg_8h, int32_t *arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t **ppiVar2;\n    int32_t *piVar3;\n    uint arg_ch_00;\n    int32_t iVar4;\n    int32_t **ppiVar5;\n    int32_t *var_3ch;\n    int32_t *var_18h;\n    int32_t **var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = arg_8h[0x68];\n    if (var_ch == NULL) {\n        var_ch = arg_8h;\n    }\n    piVar3 = var_ch;\n    var_8h = *arg_8h;\n    var_10h = 0;\n    ppiVar2 = fcn.0041c2f7(0x18);\n    if (ppiVar2 != NULL) {\n        ppiVar5 = piVar3 + 0x88;\n        ppiVar2[5] = *ppiVar5;\n        *ppiVar5 = ppiVar2;\n        var_14h = ppiVar2;\n        var_18h = fcn.0041c2f7(0x18);\n        ppiVar2[2] = var_18h;\n        if (var_18h != NULL) {\n            ppiVar5 = piVar3[3] + 0xe0;\n            var_18h[5] = *ppiVar5;\n            *ppiVar5 = var_18h;\n            ppiVar2[3] = 0xffffffff;\n            ppiVar2[4] = 0xffffffff;\n            ppiVar2[1] = arg_14h;\n            *ppiVar2 = arg_ch;\n            piVar3 = fcn.0041c2f7(0x228);\n            if (piVar3 != NULL) {\n                fcn.0044b531(&var_3ch, 0, 0x24);\n                *piVar3 = var_8h;\n                piVar3[0x69] = arg_10h;\n                piVar3[0x68] = var_ch;\n                piVar3[0x80] = *arg_ch;\n                *(piVar3 + 0x6c) = *(arg_ch + 2);\n                piVar3[0x6e] = arg_8h[0x6e];\n                piVar3[0x6f] = arg_8h[0x6f];\n                var_3ch = piVar3;\n                var_4h = fcn.0043fe38();\n                if (var_4h != 0) {\n                    if (arg_ch[3] != 0) {\n                        arg_ch_00 = fcn.0043238b(var_8h, arg_ch[3], 0);\n                        iVar4 = fcn.00431867();\n                        if ((iVar4 == 0) && (*(var_8h + 0x1e) == '\\0')) {\n                            var_10h = fcn.00429c62();\n                            fcn.00434349(piVar3, arg_ch_00, var_10h, 8);\n                        }\n                        fcn.00432063(var_8h, arg_ch_00);\n                        ppiVar2 = var_14h;\n                    }\n                    fcn.004424a3(arg_14h);\n                    if (var_10h != 0) {\n                        fcn.00429caf();\n                    }\n                    iVar4 = var_4h;\n                    fcn.00429bbf(var_4h, 6);\n                    if (arg_8h[0x10] == 0) {\n                        arg_8h[2] = piVar3[2];\n                        arg_8h[0x10] = piVar3[0x10];\n                    }\n                    else {\n                        fcn.0041c16b(*piVar3, piVar3[2]);\n                    }\n                    iVar1 = var_4h;\n                    if (*(var_8h + 0x1e) == '\\0') {\n                        iVar4 = *(iVar4 + 4);\n                        fcn.00429cc5(var_ch + 0x67);\n                        var_18h[1] = *(iVar1 + 0x1c);\n                        *(iVar1 + 4) = 0;\n                        *var_18h = iVar4;\n                        ppiVar2 = var_14h;\n                    }\n                    var_18h[2] = piVar3[0x12];\n                    var_18h[3] = piVar3[0x11];\n                    var_18h[4] = arg_ch;\n                    ppiVar2[3] = piVar3[0x6a];\n                    ppiVar2[4] = piVar3[0x6b];\n                    fcn.0042ae75();\n                }\n                fcn.0041c16b(var_8h, piVar3);\n                return ppiVar2;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 1167
    },
    "00442849": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442849(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.0043fe38();\n    iVar1 = fcn.00442801(arg_8h, arg_ch, arg_10h, arg_18h);\n    if (iVar1 != 0) {\n        *(arg_8h + 0x48) = *(arg_8h + 0x48) + 1;\n        fcn.00429b6c(0x6c, arg_14h, arg_1ch, *(arg_8h + 0x48));\n        fcn.00429f87(arg_8h_00, *(iVar1 + 8), 0xffffffee);\n        fcn.00429e02();\n    }\n    return;\n}\n",
        "token_count": 231
    },
    "00442978": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00442978(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    int32_t var_4h;\n    \n    iVar1 = in_EAX * 0x18 + *(param_1 + 0xc);\n    var_4h = param_1;\n    fcn.00429829(*unaff_ESI, *(iVar1 + 4), *(*(*(*unaff_ESI + 8) + 0xc) + 0x49), *(iVar1 + 0x16), &var_4h);\n    if (var_4h != 0) {\n        fcn.00429f87(unaff_ESI, var_4h, 0xfffffff8);\n    }\n    return;\n}\n",
        "token_count": 184
    },
    "004429be": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004429be(int32_t *arg_8h, int32_t arg_ch, int32_t *arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_1ch;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint var_84h;\n    int32_t *var_7ch;\n    int32_t var_78h;\n    uint var_58h;\n    uint32_t var_54h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    uint32_t var_48h;\n    int32_t var_44h;\n    uint32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t *var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint *var_24h;\n    uint32_t var_20h;\n    int32_t *var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_30h = NULL;\n    var_28h = 0;\n    var_24h = NULL;\n    var_44h = 0;\n    var_4ch = 0;\n    var_50h = 0;\n    var_40h = 0;\n    fcn.0044b531(&var_84h, 0, 8);\n    var_3ch = *arg_8h;\n    if (((arg_8h[0x10] != 0) || (*(var_3ch + 0x1e) != '\\0')) || (iVar2 = fcn.004397e4(),  var_ch = iVar2,  iVar2 == 0))\n    goto code_r0x00443333;\n    var_58h = fcn.0043e8c8();\n    var_38h = fcn.004423f4(0x6b, arg_10h, &var_48h);\n    var_54h = *(iVar2 + 0x1c) != 0;\n    iVar3 = fcn.00437a3f();\n    if (((iVar3 != 0) || (iVar3 = fcn.00439825(var_48h),  iVar3 != 0)) ||\n       (var_28h = fcn.0041c31d(*(iVar2 + 8) << 2),  var_28h == 0)) goto code_r0x00443333;\n    iVar3 = 0;\n    if (0 < *(iVar2 + 8)) {\n        do {\n            *(var_28h + iVar3 * 4) = 0xffffffff;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < *(iVar2 + 8));\n    }\n    var_14h = arg_8h[0x11];\n    *(arg_ch + 0x20) = var_14h;\n    arg_8h[0x11] = arg_8h[0x11] + 1;\n    iVar3 = arg_8h[0x11];\n    for (iVar5 = *(iVar2 + 0x10); iVar5 != 0; iVar5 = *(iVar5 + 0x20)) {\n        iVar3 = iVar3 + 1;\n        arg_8h[0x11] = iVar3;\n    }\n    fcn.0044b531(&var_7ch, 0, 0x24);\n    var_7ch = arg_8h;\n    var_78h = arg_ch;\n    var_2ch = 0;\n    var_8h = 0;\n    if (0 < *arg_10h) {\n        var_10h = 0;\n        do {\n            iVar2 = fcn.00431867();\n            if (iVar2 != 0) goto code_r0x00443333;\n            var_20h = 0;\n            if (0 < *(var_ch + 8)) {\n                var_1ch = *(var_ch + 0xc);\n                puVar1 = var_10h + arg_10h[3];\n                do {\n                    iVar2 = fcn.0041d27e();\n                    if (iVar2 == 0) {\n                        if (var_20h == *(var_ch + 4)) {\n                            var_24h = *puVar1;\n                            var_2ch = 1;\n                        }\n                        *(var_28h + var_20h * 4) = var_8h;\n                        break;\n                    }\n                    var_20h = var_20h + 1;\n                    var_1ch = var_1ch + 6;\n                } while (var_20h < *(var_ch + 8));\n            }\n            if (*(var_ch + 8) <= var_20h) {\n                var_24h = arg_10h[3] + var_10h;\n                iVar2 = fcn.004329a1();\n                if (iVar2 == 0) {\n                    fcn.0041d1e3(0x44bfbc, *(var_8h * 0x14 + 4 + arg_10h[3]));\n                    *(arg_8h + 0x12) = 1;\n                    goto code_r0x00443333;\n                }\n                var_24h = *var_24h;\n                var_2ch = 1;\n            }\n            var_8h = var_8h + 1;\n            var_10h = var_10h + 0x14;\n            iVar2 = var_ch;\n        } while (var_8h < *arg_10h);\n    }\n    if ((*(*arg_8h + 0xc) & 0x4000000) == 0) {\n        var_34h = 0;\n    }\n    else {\n        var_34h = fcn.0043c017(iVar2, var_28h, var_2ch);\n    }\n    iVar3 = *(iVar2 + 0x10);\n    iVar5 = 0;\n    if (iVar3 != 0) {\n        do {\n            iVar3 = *(iVar3 + 0x20);\n            iVar5 = iVar5 + 1;\n        } while (iVar3 != 0);\n        if ((0 < iVar5) && (var_30h = fcn.0041c31d(iVar5 * 4),  var_30h == NULL)) goto code_r0x00443333;\n    }\n    iVar2 = *(iVar2 + 0x10);\n    if (iVar2 != 0) {\n        var_1ch = var_30h;\n        do {\n            iVar3 = 0;\n            if (var_2ch == 0) {\n                var_8h = 0;\n                if (0 < *(iVar2 + 4)) {\n                    piVar6 = *(iVar2 + 8);\n                    do {\n                        if (-1 < *(var_28h + *piVar6 * 4)) goto code_r0x00442c6a;\n                        var_8h = var_8h + 1;\n                        piVar6 = piVar6 + 1;\n                    } while (var_8h < *(iVar2 + 4));\n                }\n            }\n            else {\ncode_r0x00442c6a:\n                arg_8h[0x12] = arg_8h[0x12] + 1;\n                iVar3 = arg_8h[0x12];\n            }\n            piVar6 = var_1ch + 1;\n            *var_1ch = iVar3;\n            iVar2 = *(iVar2 + 0x20);\n            var_1ch = piVar6;\n        } while (iVar2 != 0);\n    }\n    var_4h = fcn.0043fe38();\n    if (var_4h == 0) goto code_r0x00443333;\n    if (*(arg_8h + 0x13) == '\\0') {\n        *(var_4h + 99) = 1;\n    }\n    fcn.00439033(1);\n    if ((*(var_ch + 0x22) & 0x10) != 0) {\n        fcn.0044336b(arg_ch, arg_10h, var_24h, var_28h, arg_14h);\n        arg_14h = 0;\n        goto code_r0x00443333;\n    }\n    arg_8h[0x12] = arg_8h[0x12] + 1;\n    var_18h = arg_8h[0x12];\n    if ((var_38h != 0) || (var_34h != 0)) {\n        var_50h = var_18h + 1;\n        arg_8h[0x12] = *(var_ch + 8) + var_18h;\n    }\n    if (((var_2ch != 0) || (var_38h != 0)) || (var_20h = var_18h,  var_34h != 0)) {\n        arg_8h[0x12] = arg_8h[0x12] + 1;\n        var_20h = arg_8h[0x12];\n    }\n    var_1ch = arg_8h[0x12] + 1;\n    arg_8h[0x12] = arg_8h[0x12] + 1 + *(var_ch + 8);\n    if (var_54h != 0) {\n        fcn.0043988a(arg_8h, var_ch, arg_14h, var_14h);\n    }\n    iVar2 = fcn.00431867();\n    if (iVar2 != 0) goto code_r0x00443333;\n    fcn.00429b6c(10, 0, var_18h, 0);\n    iVar2 = fcn.00446af4(arg_8h, arg_ch, arg_14h, 0, 4);\n    if (iVar2 == 0) goto code_r0x00443333;\n    var_10h = *(iVar2 + 6);\n    fcn.00429bea(0x3d, var_14h, var_18h);\n    if (var_10h == 0) {\n        arg_8h[0x12] = arg_8h[0x12] + 1;\n        var_40h = arg_8h[0x12];\n        fcn.00429bea(0x69, var_40h, var_18h);\n    }\n    fcn.00447218();\n    if (((*(var_3ch + 0xc) & 0x1000) != 0) && (arg_8h[0x69] == 0)) {\n        arg_8h[0x12] = arg_8h[0x12] + 1;\n        var_4ch = arg_8h[0x12];\n        fcn.00429b6c(7, 0, var_4ch, 0);\n    }\n    iVar2 = var_ch;\n    if (var_54h == 0) {\n        if (var_10h == 0) {\n            fcn.0043c637(var_14h, var_58h, 0x27);\n        }\n        iVar2 = var_ch;\n        if (arg_18h == 5) {\ncode_r0x00442e2a:\n            var_44h = 1;\n        }\n        else {\n            var_44h = 0;\n            for (iVar3 = *(var_ch + 0x10); iVar3 != 0; iVar3 = *(iVar3 + 0x20)) {\n                if (*(iVar3 + 0x18) == '\\x05') goto code_r0x00442e2a;\n            }\n        }\n        var_8h = 0;\n        for (iVar3 = *(var_ch + 0x10); iVar3 != 0; iVar3 = *(iVar3 + 0x20)) {\n            if ((var_44h != 0) || (0 < var_30h[var_8h])) {\n                arg_1ch = fcn.004392af(arg_8h, iVar3);\n                fcn.00429c01(var_4h, 0x27, var_14h + 1 + var_8h, *(iVar3 + 0x14), var_58h, arg_1ch, 0xfffffff0);\n            }\n            var_8h = var_8h + 1;\n        }\n    }\n    if (var_10h == 0) {\n        var_10h = fcn.00429b6c(0x6a, var_40h, 0, var_18h);\n    }\n    else {\n        fcn.00429bd5(0x4a);\n        var_10h = fcn.00429bbf(var_4h, 1);\n        fcn.00429e14();\n    }\n    fcn.00429b6c(0x34, var_14h, var_10h, var_18h);\n    uVar4 = var_20h;\n    if (var_2ch != 0) {\n        fcn.00433ee6();\n        fcn.00429bd5(0x15, uVar4);\n    }\n    uVar4 = 0;\n    if (var_34h == 0) {\n        if (var_38h != 0) goto code_r0x00442f1d;\n    }\n    else {\n        uVar4 = fcn.0043bf6b(arg_8h);\n        iVar2 = var_ch;\ncode_r0x00442f1d:\n        iVar3 = 0;\n        var_24h = uVar4;\n        uVar4 = fcn.00442914(arg_8h, arg_10h, 0, 3, iVar2, arg_18h);\n        var_24h = var_24h | uVar4;\n        if (0 < *(iVar2 + 8)) {\n            do {\n                if (((*(var_28h + iVar3 * 4) < 0) || (var_24h == 0xffffffff)) || ((var_24h & 1 << (iVar3 & 0x1f)) != 0))\n                {\n                    fcn.0043337f(var_4h, var_14h, var_50h + iVar3);\n                }\n                else {\n                    fcn.00429b6c(10, 0, var_50h + iVar3, 0);\n                }\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < *(iVar2 + 8));\n        }\n        if (var_2ch == 0) {\n            fcn.00429bea(0xe, var_18h, var_20h);\n        }\n    }\n    var_40h = fcn.00442914(arg_8h, arg_10h, 1, 1, iVar2, arg_18h);\n    var_8h = 0;\n    if (0 < *(iVar2 + 8)) {\n        do {\n            iVar3 = var_8h;\n            if (var_8h == *(iVar2 + 4)) {\n                fcn.00429b6c(10, 0, var_1ch + var_8h, 0);\n            }\n            else if (*(var_28h + var_8h * 4) < 0) {\n                if (((((var_48h & 1) == 0) || (0x1f < var_8h)) || ((var_40h & 1 << (var_8h & 0x1f)) != 0)) &&\n                   (fcn.00429b6c(0x1c, var_14h, var_8h, var_1ch + var_8h),  *(iVar2 + 0x1c) == 0)) {\n                    fcn.00442978();\n                    iVar2 = var_ch;\n                    iVar3 = var_8h;\n                }\n            }\n            else {\n                fcn.00433ee6();\n                iVar3 = var_8h;\n            }\n            var_8h = iVar3 + 1;\n        } while (var_8h < *(iVar2 + 8));\n    }\n    if ((var_48h & 1) != 0) {\n        fcn.00429bea(0x1d, var_1ch, *(iVar2 + 8));\n        fcn.0043c6dd(var_4h);\n        for (iVar3 = var_38h; iVar3 != 0; iVar3 = *(iVar3 + 0x20)) {\n            if (((*(iVar3 + 8) == 'k') && (*(iVar3 + 9) == '\\x01')) &&\n               (iVar5 = fcn.004423b6(*(iVar3 + 0x10)),  iVar5 != 0)) {\n                fcn.00442849(arg_8h, iVar3, iVar2, var_18h, arg_18h, var_10h);\n            }\n        }\n        fcn.00429b6c(0x34, var_14h, var_10h, var_18h);\n        if (0 < *(iVar2 + 8)) {\n            do {\n                if (((*(var_28h + iVar3 * 4) < 0) && (iVar3 != *(iVar2 + 4))) &&\n                   (fcn.00429b6c(0x1c, var_14h, iVar3, var_1ch + iVar3),  *(iVar2 + 0x1c) == 0)) {\n                    fcn.00442978();\n                    iVar2 = var_ch;\n                }\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < *(iVar2 + 8));\n        }\n    }\n    if (var_54h == 0) {\n        fcn.0043d34a(arg_8h, iVar2, var_14h, var_20h, var_30h, -(var_2ch != 0) & var_18h, 1, arg_18h, var_10h, 0);\n        if (var_34h != 0) {\n            fcn.0043bd14(arg_8h, iVar2, var_18h, 0);\n        }\n        var_40h = fcn.00429b6c(0x34, var_14h, 0, var_18h);\n        fcn.00439e81(var_14h, var_30h);\n        if ((var_34h != 0) || (var_2ch != 0)) {\n            fcn.00429b6c(0x39, var_14h, 0, 0);\n        }\n        fcn.00429e14();\n        if (var_34h != 0) {\n            fcn.0043bd14(arg_8h, iVar2, 0, var_20h);\n        }\n        fcn.0043d870(arg_8h, var_14h, var_20h, var_30h, 1, 0, 0);\n        iVar2 = var_ch;\n        if (var_34h != 0) {\n            fcn.0043c555(var_ch, arg_10h, var_18h);\n            iVar2 = var_ch;\n        }\n    }\n    iVar3 = var_38h;\n    if (((*(var_3ch + 0xc) & 0x1000) != 0) && (arg_8h[0x69] == 0)) {\n        fcn.00429b6c(0x14, var_4ch, 1, 0);\n        iVar3 = var_38h;\n    }\n    for (; iVar3 != 0; iVar3 = *(iVar3 + 0x20)) {\n        if (((*(iVar3 + 8) == 'k') && (*(iVar3 + 9) == '\\x02')) && (iVar5 = fcn.004423b6(*(iVar3 + 0x10)),  iVar5 != 0))\n        {\n            fcn.00442849(arg_8h, iVar3, iVar2, var_18h, arg_18h, var_10h);\n        }\n    }\n    fcn.00429b6c(1, 0, var_10h, 0);\n    fcn.00429e14();\n    iVar2 = *(iVar2 + 0x10);\n    var_8h = 0;\n    for (; iVar2 != 0; iVar2 = *(iVar2 + 0x20)) {\n        if ((var_44h != 0) || (0 < var_30h[var_8h])) {\n            fcn.00429b6c(0x2b, var_14h + 1 + var_8h, 0, 0);\n        }\n        var_8h = var_8h + 1;\n    }\n    fcn.00429b6c(0x2b, var_14h, 0, 0);\n    if ((((*(var_3ch + 0xc) & 0x1000) != 0) && (arg_8h[0x69] == 0)) && (*(arg_8h + 0x13) == '\\0')) {\n        fcn.00429b6c(0x10, var_4ch, 1, 0);\n        fcn.0042a4ca();\n        fcn.0042a521(0, 0, 0x44bfd0, 0);\n    }\ncode_r0x00443333:\n    iVar2 = var_3ch;\n    fcn.0041c16b(var_3ch, var_30h);\n    fcn.0041c16b(iVar2, var_28h);\n    fcn.00438d01(iVar2);\n    fcn.004327f7(iVar2);\n    fcn.00432063(iVar2, arg_14h);\n    return;\n}\n",
        "token_count": 5027
    },
    "00443681": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00443681(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    uint uVar7;\n    int32_t iVar8;\n    int32_t unaff_ESI;\n    int32_t iVar9;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    if ((*(unaff_ESI + 0x1c) == '\\0') || (1 < *(unaff_ESI + 0x8c))) {\n        fcn.0041c49d();\n        iVar6 = 1;\n    }\n    else {\n        uVar1 = *(unaff_ESI + 0xc);\n        uVar2 = *(unaff_ESI + 0x3c);\n        iVar9 = *(unaff_ESI + 4);\n        uVar3 = *(unaff_ESI + 0x40);\n        *(unaff_ESI + 0xc) = uVar1 & 0xfaffffff | 0x10050000;\n        uVar4 = *(unaff_ESI + 0x98);\n        *(unaff_ESI + 0x98) = 0;\n        var_4h = *(*(unaff_ESI + 8) + 4);\n        uVar7 = 0x44c03c;\n        if (*(unaff_ESI + 0x1d) != '\\x02') {\n            uVar7 = 0x44c05c;\n        }\n        iVar6 = fcn.004435b9(uVar7);\n        iVar8 = *(unaff_ESI + 4);\n        if (iVar9 < iVar8) {\n            var_ch = iVar8 * 0x10 + -0x10 + *(unaff_ESI + 8);\n        }\n        if (iVar6 == 0) {\n            var_8h = *(iVar8 * 0x10 + -0xc + *(unaff_ESI + 8));\n            fcn.00425e75(var_8h);\n            piVar5 = *(var_4h + 4);\n            iVar9 = piVar5[8] - piVar5[9];\n            if (*(*piVar5 + 5) == '\\x05') {\n                *(unaff_ESI + 0x24) = 0;\n            }\n            iVar8 = fcn.00425955(iVar9, 0);\n            if (((iVar8 == 0) && (iVar8 = fcn.00425955(iVar9, 0),  iVar8 == 0)) && (*(unaff_ESI + 0x1e) == '\\0')) {\n                iVar6 = fcn.004435b9(0x44c074);\n                if (((((iVar6 == 0) && (iVar6 = fcn.004435b9(0x44c098),  iVar6 == 0)) &&\n                     ((iVar6 = fcn.00443614(unaff_ESI, 0x44c0b0),  iVar6 == 0 &&\n                      ((iVar6 = fcn.00443614(unaff_ESI, 0x44c138),  iVar6 == 0 &&\n                       (iVar6 = fcn.00443614(unaff_ESI, 0x44c1a0),  iVar6 == 0)))))) &&\n                    (iVar6 = fcn.00443614(unaff_ESI, 0x44c218),  iVar6 == 0)) &&\n                   (((iVar6 = fcn.00443614(unaff_ESI, 0x44c2d0),  iVar6 == 0 &&\n                     (iVar6 = fcn.00443614(unaff_ESI, 0x44c348),  iVar6 == 0)) &&\n                    (iVar6 = fcn.004435b9(0x44c3e8),  iVar6 == 0)))) {\n                    iVar8 = 0;\n                    do {\n                        fcn.00428612(&var_10h);\n                        iVar6 = fcn.0042863a(*(iVar8 + 0x444864), *(iVar8 + 0x444865) + var_10h);\n                        uVar7 = var_8h;\n                        if (iVar6 != 0) goto code_r0x004438f6;\n                        iVar8 = iVar8 + 2;\n                    } while (iVar8 < 8);\n                    iVar6 = fcn.00428d7e();\n                    if ((iVar6 == 0) && (iVar6 = fcn.00425e75(uVar7),  iVar6 == 0)) {\n                        iVar6 = fcn.00425955(iVar9, 1);\n                    }\n                }\n            }\n            else {\n                iVar6 = 7;\n            }\n        }\ncode_r0x004438f6:\n        *(unaff_ESI + 0xc) = uVar1;\n        *(unaff_ESI + 0x3c) = uVar2;\n        *(unaff_ESI + 0x40) = uVar3;\n        *(unaff_ESI + 0x98) = uVar4;\n        fcn.00425955(0xffffffff, 1);\n        iVar9 = var_ch;\n        *(unaff_ESI + 0x1c) = 1;\n        if (var_ch != 0) {\n            fcn.004258e9();\n            *(iVar9 + 4) = 0;\n            *(iVar9 + 0xc) = 0;\n        }\n        fcn.00436864();\n    }\n    return iVar6;\n}\n",
        "token_count": 1308
    },
    "00443af8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00443af8(void)\n\n{\n    uint arg_8h;\n    uint *in_EAX;\n    uint arg_ch;\n    \n    if ((in_EAX[0x81] != 0) && (in_EAX[0x7e] != 0)) {\n        arg_8h = *in_EAX;\n        arg_ch = fcn.0041c46a(in_EAX[0x81]);\n        fcn.004439e4(arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 116
    },
    "00443b34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00443b34(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uint *arg_ch_00;\n    uint uVar1;\n    int32_t arg_10h;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_ch_00 = arg_8h[0x7e];\n    iVar4 = *arg_8h;\n    if (arg_ch_00 != NULL) {\n        fcn.00443af8();\n        arg_8h[0x81] = 0;\n        if (0 < arg_ch_00[0xd]) {\n            if (*(iVar4 + 0x7c) == '\\0') {\n                if (arg_ch != NULL) {\n                    arg_8h[0x7a] = (arg_ch[1] - arg_8h[0x79]) + *arg_ch;\n                }\n                uVar1 = fcn.0041ce3a(0x44c4a0, arg_8h + 0x79);\n                arg_10h = fcn.0043e8c8();\n                iVar5 = arg_8h[100];\n                uVar3 = *arg_ch_00;\n                uVar7 = 0x44a684;\n                uVar2 = *(arg_10h * 0x10 + *(iVar4 + 8));\n                uVar6 = 0x44c4b8;\n                uVar8 = uVar3;\n                uVar9 = uVar1;\n                fcn.00436610(0x44c4b8, uVar2);\n                fcn.0041c16b(iVar4, uVar1, uVar6, uVar2, uVar7, uVar3, uVar8, uVar9, iVar5);\n                uVar2 = fcn.0043fe38();\n                fcn.004372cc(arg_10h);\n                fcn.00429b6c(0x7a, 0, 0, 0);\n                uVar3 = fcn.0041ce3a(0x44c510, *arg_ch_00);\n                fcn.00429c01(uVar2, 99, arg_10h, 1, 0, uVar3, 0xffffffff);\n                uVar3 = *arg_ch_00;\n                iVar4 = fcn.0041d157();\n                fcn.00429c01(uVar2, 0x7d, arg_10h, 0, 0, uVar3, iVar4 + 1);\n            }\n            else {\n                uVar3 = fcn.0041d157();\n                iVar5 = fcn.0041db04(uVar3, arg_ch_00);\n                if (iVar5 == 0) {\n                    arg_8h[0x7e] = 0;\n                }\n                else {\n                    *(iVar4 + 0x1e) = 1;\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 723
    },
    "00443c7d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00443c7d(int32_t arg_8h, uint *arg_ch, code *arg_10h, uint *arg_14h)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint uVar7;\n    int32_t iVar8;\n    char *pcVar9;\n    int32_t iVar10;\n    uint *unaff_EDI;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar7 = unaff_EDI[0xe];\n    var_8h = 0;\n    uVar3 = unaff_EDI[0xd];\n    iVar5 = fcn.0041ce3a(0x44a338, *unaff_EDI);\n    if (iVar5 != 0) {\n        piVar6 = fcn.0041c2f7(0x14);\n        if (piVar6 != NULL) {\n            *piVar6 = arg_8h;\n            piVar6[1] = arg_ch;\n            *(arg_8h + 0x11c) = unaff_EDI;\n            var_18h = (*arg_10h)(arg_8h, arg_ch[2], uVar3, uVar7, piVar6 + 2, &var_8h);\n            if (var_18h == 7) {\n                *(arg_8h + 0x1e) = 1;\n            }\n            if (var_18h == 0) {\n                if (piVar6[2] != NULL) {\n                    *piVar6[2] = *arg_ch;\n                    piVar6[3] = 1;\n                    if (*(arg_8h + 0x11c) == 0) {\n                        piVar6[4] = unaff_EDI[0xc];\n                        unaff_EDI[0xc] = piVar6;\n                        var_10h = 0;\n                        if (0 < unaff_EDI[2]) {\n                            var_ch = 0;\n                            do {\n                                iVar4 = *(var_ch + 0xc + unaff_EDI[3]);\n                                iVar10 = 0;\n                                if (iVar4 != 0) {\n                                    var_4h = fcn.0041d157();\n                                    iVar8 = fcn.0041d2b9();\n                                    if ((iVar8 != 0) || ((*(iVar4 + 6) != '\\0' && (*(iVar4 + 6) != ' ')))) {\n                                        iVar10 = 0;\n                                        if (var_4h < 1) goto code_r0x00443e68;\n                                        do {\n                                            iVar8 = fcn.0041d2b9();\n                                            if ((iVar8 == 0) &&\n                                               ((cVar2 = *(iVar10 + 7 + iVar4),  cVar2 == '\\0' || (cVar2 == ' ')))) {\n                                                iVar10 = iVar10 + 1;\n                                                break;\n                                            }\n                                            iVar10 = iVar10 + 1;\n                                        } while (iVar10 < var_4h);\n                                    }\n                                    if (iVar10 < var_4h) {\n                                        pcVar1 = iVar10 + iVar4;\n                                        iVar8 = (pcVar1[6] != '\\0') + 6;\n                                        if (iVar8 + iVar10 <= var_4h) {\n                                            pcVar9 = pcVar1;\n                                            do {\n                                                *pcVar9 = pcVar9[iVar8];\n                                                pcVar9 = pcVar9 + 1;\n                                            } while (pcVar9 + (iVar8 - iVar4) <= var_4h);\n                                        }\n                                        if ((*pcVar1 == '\\0') && (0 < iVar10)) {\n                                            pcVar1[-1] = '\\0';\n                                        }\n                                        *(var_ch + 0x17 + unaff_EDI[3]) = 1;\n                                    }\n                                }\ncode_r0x00443e68:\n                                var_10h = var_10h + 1;\n                                var_ch = var_ch + 0x18;\n                            } while (var_10h < unaff_EDI[2]);\n                        }\n                    }\n                    else {\n                        uVar7 = fcn.0041ce3a(0x44c54c, *unaff_EDI);\n                        *arg_14h = uVar7;\n                        fcn.00443960();\n                        var_18h = 1;\n                    }\n                }\n            }\n            else {\n                if (var_8h == 0) {\n                    uVar7 = fcn.0041ce3a(0x44c52c, iVar5);\n                    *arg_14h = uVar7;\n                }\n                else {\n                    uVar7 = fcn.0041ce3a(0x44a338, var_8h);\n                    *arg_14h = uVar7;\n                    fcn.0041c110(var_8h);\n                }\n                fcn.0041c16b(arg_8h, piVar6);\n            }\n            fcn.0041c16b(arg_8h, iVar5);\n            *(arg_8h + 0x11c) = 0;\n            return var_18h;\n        }\n        fcn.0041c16b(arg_8h, iVar5);\n    }\n    return 7;\n}\n",
        "token_count": 1233
    },
    "004440f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004440f0(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t unaff_EDI;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    iVar1 = *(unaff_EDI + 0x120);\n    *(unaff_EDI + 0x120) = 0;\n    var_4h = 0;\n    do {\n        if (*(unaff_EDI + 0x124) <= var_4h) break;\n        piVar2 = *(*(iVar1 + var_4h * 4) + 8);\n        if ((piVar2 != NULL) && (*(*piVar2 + 0x3c) != NULL)) {\n            var_8h = (**(*piVar2 + 0x3c))(piVar2);\n            fcn.0041c16b();\n            uVar3 = fcn.0041c430(piVar2[2]);\n            *arg_8h = uVar3;\n            fcn.0041c110(piVar2[2]);\n        }\n        var_4h = var_4h + 1;\n    } while (var_8h == 0);\n    *(unaff_EDI + 0x120) = iVar1;\n    return var_8h;\n}\n",
        "token_count": 319
    },
    "004441d2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004441d2(uint arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t *piVar2;\n    char *in_EAX;\n    int32_t iVar3;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    uint *puVar6;\n    uint extraout_ECX;\n    uint *puVar7;\n    ulong uVar8;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_8h = 0;\n    if ((((in_EAX != NULL) && (*in_EAX == -0x68)) && (*(in_EAX + 0x28) != 0)) &&\n       ((*(*(in_EAX + 0x28) + 0x22) & 0x10) != 0)) {\n        iVar3 = fcn.0044394b(arg_8h);\n        piVar2 = *(iVar3 + 8);\n        iVar3 = *piVar2;\n        if ((*(iVar3 + 0x48) != 0) && (puVar4 = fcn.0041c430(arg_ch[6]),  puVar4 != NULL)) {\n            uVar1 = *puVar4;\n            puVar5 = puVar4;\n            while (uVar1 != 0) {\n                *puVar5 = *(*puVar5 + 0x443d90);\n                puVar5 = puVar5 + 1;\n                uVar1 = *puVar5;\n            }\n            iVar3 = (**(iVar3 + 0x48))(piVar2, arg_10h, puVar4, &var_4h, &var_8h);\n            fcn.0041c16b(arg_8h, puVar4);\n            if (iVar3 != 0) {\n                iVar3 = fcn.0041d157();\n                puVar6 = fcn.0041c2f7(iVar3 + 0x25);\n                if (puVar6 != NULL) {\n                    puVar7 = puVar6;\n                    for (iVar3 = 9; iVar3 != 0; iVar3 = iVar3 + -1) {\n                        *puVar7 = *arg_ch;\n                        arg_ch = arg_ch + 1;\n                        puVar7 = puVar7 + 1;\n                    }\n                    puVar6[6] = puVar6 + 9;\n                    uVar8 = fcn.0041d157();\n                    fcn.0044b575(uVar8 >> 0x20, extraout_ECX, uVar8 + 1);\n                    puVar6[3] = var_4h;\n                    *(puVar6 + 3) = *(puVar6 + 3) | 4;\n                    puVar6[1] = var_8h;\n                    arg_ch = puVar6;\n                }\n            }\n        }\n    }\n    return arg_ch;\n}\n",
        "token_count": 662
    },
    "00444688": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00444688(uint *arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h, uint32_t arg_18h, uint arg_1ch, \n            int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = arg_8h[7];\n    iVar1 = arg_8h[5];\n    do {\n        if (iVar1 == 0) {\n            return 0;\n        }\n        if ((((*(iVar4 + 8) == arg_ch) && ((*(iVar4 + 0x18) & arg_14h | *(iVar4 + 0x1c) & arg_18h) == 0)) &&\n            (*(iVar4 + 0xc) == arg_10h)) && ((arg_1ch & 0xfff & *(iVar4 + 0x10)) != 0)) {\n            if (arg_20h == 0) {\n                return iVar4;\n            }\n            if (*(iVar4 + 0x10) == 0x80) {\n                return iVar4;\n            }\n            iVar2 = fcn.00431adf(*(*(*(arg_20h + 0x10) + 0xc) + 0x16 + arg_10h * 0x18));\n            if (iVar2 != 0) {\n                iVar2 = fcn.00431b09(*arg_8h);\n                piVar3 = *(arg_20h + 8);\n                iVar5 = 0;\n                if (*piVar3 != arg_10h) {\n                    do {\n                        if (*(arg_20h + 4) <= iVar5) {\n                            return 0;\n                        }\n                        piVar3 = piVar3 + 1;\n                        iVar5 = iVar5 + 1;\n                    } while (*piVar3 != arg_10h);\n                }\n                if (iVar2 == 0) {\n                    return iVar4;\n                }\n                iVar2 = fcn.0041d27e();\n                if (iVar2 == 0) {\n                    return iVar4;\n                }\n            }\n        }\n        iVar1 = iVar1 + -1;\n        iVar4 = iVar4 + 0x28;\n    } while( true );\n}\n",
        "token_count": 544
    },
    "00444779": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool __cdecl fcn.00444779(uint *arg_8h, int32_t *arg_ch, int32_t *arg_10h, uint32_t *arg_14h)\n\n{\n    uint32_t *puVar1;\n    int16_t iVar2;\n    char *arg_ch_00;\n    char cVar3;\n    char cVar4;\n    char *in_EAX;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint arg_ch_01;\n    uint arg_8h_00;\n    char **extraout_EDX;\n    uint arg_10h_00;\n    uint arg_14h_00;\n    uint arg_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    char *var_8h;\n    uint var_4h;\n    \n    uVar7 = *arg_8h;\n    var_8h = NULL;\n    if (((*in_EAX != -0x69) || (*(in_EAX + 0x10) == NULL)) || (**(in_EAX + 0x10) != 2)) {\n        return false;\n    }\n    arg_18h = 0;\n    arg_14h_00 = 1;\n    arg_10h_00 = 2;\n    fcn.0041d157();\n    iVar5 = fcn.004395a9(arg_8h_00, arg_ch_01, arg_10h_00, arg_14h_00, arg_18h);\n    if (iVar5 == 0) {\n        return false;\n    }\n    if ((*(iVar5 + 3) & 1) == 0) {\n        return false;\n    }\n    fcn.0044b575(&var_4h, *(iVar5 + 4), 3);\n    iVar6 = *(*(in_EAX + 0x10) + 0xc);\n    *arg_14h = ~(*(iVar5 + 3) >> 1) & 1;\n    if (**(iVar6 + 0x14) != -0x68) {\n        return false;\n    }\n    cVar3 = fcn.00431939();\n    if (cVar3 != 'a') {\n        return false;\n    }\n    arg_ch_00 = *extraout_EDX;\n    cVar3 = *arg_ch_00;\n    if (cVar3 == -0x7c) {\n        cVar3 = arg_ch_00[0x23];\n    }\n    if (cVar3 == -0x7b) {\n        iVar2 = *(arg_ch_00 + 0x1c);\n        iVar5 = fcn.0042b6e0();\n        if ((iVar5 != 0) && (*(iVar5 + 0x1e) == '\\x03')) {\n            var_8h = fcn.0042b828(iVar5);\n        }\n        if (iVar2 < 0x21) {\n            puVar1 = arg_8h[3] + 0xdc;\n            *puVar1 = *puVar1 | 1 << (iVar2 - 1U & 0x1f);\n        }\n        else {\n            *(arg_8h[3] + 0xdc) = 0xffffffff;\n        }\n    }\n    else {\n        if (cVar3 != '^') goto code_r0x0044499e;\n        var_8h = *(arg_ch_00 + 4);\n    }\n    if (var_8h != NULL) {\n        cVar4 = *var_8h;\n        iVar5 = 0;\n        if (cVar4 != '\\0') {\n            do {\n                if (((cVar4 == var_4h) || (cVar4 == var_4h._1_1_)) || (cVar4 == var_4h._2_1_)) break;\n                iVar5 = iVar5 + 1;\n                cVar4 = var_8h[iVar5];\n            } while (cVar4 != '\\0');\n            if ((iVar5 != 0) && (var_8h[iVar5 + -1] != -1)) {\n                if ((cVar4 == var_4h) && (var_8h[iVar5 + 1] == '\\0')) {\n                    iVar6 = 1;\n                }\n                else {\n                    iVar6 = 0;\n                }\n                *arg_10h = iVar6;\n                iVar6 = fcn.00431d84(uVar7, 0x5e);\n                if (iVar6 != 0) {\n                    *(iVar5 + *(iVar6 + 4)) = 0;\n                }\n                *arg_ch = iVar6;\n                if (cVar3 == -0x7b) {\n                    iVar5 = arg_8h[3];\n                    if (*(arg_ch_00 + 0x1c) < 0x21) {\n                        *(iVar5 + 0xdc) = *(iVar5 + 0xdc) | 1 << (*(arg_ch_00 + 0x1c) - 1U & 0x1f);\n                    }\n                    else {\n                        *(iVar5 + 0xdc) = 0xffffffff;\n                    }\n                    if ((*arg_10h != 0) && (*(*(arg_ch_00 + 4) + 1) != '\\0')) {\n                        uVar7 = fcn.004349af();\n                        fcn.004334bd(arg_8h, arg_ch_00, uVar7);\n                        iVar6 = *(iVar5 + 0x1c) + -1;\n                        if (iVar6 < *(iVar5 + 0x1c)) {\n                            *(iVar6 * 0x14 + 0xc + *(iVar5 + 4)) = 0;\n                        }\n                        fcn.004349ca();\n                    }\n                }\n                goto code_r0x0044499e;\n            }\n        }\n        var_8h = NULL;\n    }\ncode_r0x0044499e:\n    fcn.00429a4c();\n    return var_8h != NULL;\n}\n",
        "token_count": 1348
    },
    "004449b7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004449b7(uint arg_8h, int32_t **arg_ch, uint8_t *arg_10h)\n\n{\n    uint8_t *arg_ch_00;\n    int32_t *piVar1;\n    char *pcVar2;\n    int32_t *piVar3;\n    uint8_t uVar4;\n    ushort uVar5;\n    uint8_t *puVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint uVar9;\n    uint uVar10;\n    int32_t extraout_ECX;\n    char *extraout_EDX;\n    char *pcVar11;\n    int32_t extraout_EDX_00;\n    uint8_t **ppuVar12;\n    uint64_t uVar13;\n    ulong uVar14;\n    uint64_t uVar15;\n    uint64_t uVar16;\n    uint var_38h;\n    uint var_34h;\n    uint32_t var_30h;\n    uint32_t var_2ch;\n    uint8_t *var_28h;\n    uint8_t *var_24h;\n    uint8_t **var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    uVar16 = 0;\n    var_10h = 0;\n    var_14h = 0;\n    var_ch = 0;\n    var_4h = *arg_ch;\n    var_8h = *var_4h;\n    if (*(var_8h + 0x1e) != '\\0') {\n        return;\n    }\n    ppuVar12 = arg_ch[7] + arg_10h * 10;\n    arg_ch_00 = *ppuVar12;\n    piVar1 = arg_ch[1];\n    uVar13 = fcn.004444aa(piVar1, *(arg_ch_00 + 8));\n    uVar4 = *arg_ch_00;\n    if (uVar4 == 0x48) {\n        if ((*(arg_ch_00 + 2) & 0x800) == 0) {\n            uVar14 = fcn.00444520(piVar1, *(arg_ch_00 + 0x10));\n        }\n        else {\n            uVar14 = fcn.00444566(piVar1);\n        }\n    }\n    else {\n        if (uVar4 == 0x49) {\n            ppuVar12[6] = NULL;\n            ppuVar12[7] = NULL;\n            goto code_r0x00444a61;\n        }\n        uVar14 = fcn.004444aa(piVar1, *(arg_ch_00 + 0xc));\n    }\n    ppuVar12[6] = uVar14;\n    ppuVar12[7] = uVar14 >> 0x20;\ncode_r0x00444a61:\n    uVar15 = fcn.004444aa(piVar1, arg_ch_00);\n    if ((arg_ch_00[2] & 1) != 0) {\n        uVar16 = fcn.0044447d(*(arg_ch_00 + 0x20));\n        uVar15 = uVar15 | uVar16;\n        uVar16 = uVar16 - 1;\n    }\n    var_2ch = uVar16 >> 0x20;\n    var_30h = uVar16;\n    var_24h = uVar15 >> 0x20;\n    var_28h = uVar15;\n    ppuVar12[2] = 0xffffffff;\n    ppuVar12[1] = 0xffffffff;\n    *(ppuVar12 + 4) = 0;\n    ppuVar12[8] = var_28h;\n    ppuVar12[9] = var_24h;\n    if (((uVar4 == 0x48) || (((0x4b < uVar4 && (uVar4 < 0x51)) || (uVar4 == 0x49)))) &&\n       ((ppuVar12[6] & uVar13 | ppuVar12[7] & uVar13 >> 0x20) == 0)) {\n        pcVar2 = *(arg_ch_00 + 8);\n        pcVar11 = *(arg_ch_00 + 0xc);\n        if (*pcVar2 == -0x68) {\n            ppuVar12[2] = *(pcVar2 + 0x18);\n            ppuVar12[3] = *(pcVar2 + 0x1c);\n            uVar5 = fcn.0044466a();\n            *(ppuVar12 + 4) = uVar5;\n            pcVar11 = extraout_EDX;\n        }\n        iVar7 = var_8h;\n        if ((pcVar11 != NULL) && (*pcVar11 == -0x68)) {\n            puVar6 = arg_ch_00;\n            var_20h = ppuVar12;\n            if (-1 < ppuVar12[2]) {\n                puVar6 = fcn.0043238b(var_8h, arg_ch_00, 0);\n                if (*(iVar7 + 0x1e) != '\\0') {\n                    fcn.00432063(iVar7, puVar6);\n                    return;\n                }\n                iVar7 = fcn.004443a4(puVar6, 3);\n                if (iVar7 == 0) {\n                    return;\n                }\n                piVar3 = arg_ch[7];\n                (piVar3 + iVar7 * 10)[1] = arg_10h;\n                ppuVar12 = arg_ch[7] + arg_10h * 10;\n                *(ppuVar12 + 0x12) = *(ppuVar12 + 0x12) | 8;\n                *(ppuVar12 + 0x13) = 1;\n                var_20h = piVar3 + iVar7 * 10;\n            }\n            fcn.004445d1(var_4h);\n            iVar7 = *(puVar6 + 8);\n            var_20h[2] = *(iVar7 + 0x18);\n            var_20h[3] = *(iVar7 + 0x1c);\n            var_20h[7] = (uVar16 | uVar13) >> 0x20;\n            var_20h[6] = uVar16 | uVar13;\n            var_20h[8] = var_28h;\n            var_20h[9] = var_24h;\n            uVar5 = fcn.0044466a();\n            *(extraout_EDX_00 + 0x10) = uVar5;\n        }\n    }\n    if ((*(arg_ch + 4) == 'E') &&\n       (iVar8 = fcn.00444779(var_4h, &var_10h, &var_14h, &var_ch),  iVar7 = var_8h,  iVar8 != 0)) {\n        uVar10 = *(*(*(arg_ch_00 + 0x10) + 0xc) + 0x14);\n        fcn.0043238b(var_8h, var_10h, 0);\n        if (*(iVar7 + 0x1e) == '\\0') {\n            iVar8 = fcn.0041d157();\n            puVar6 = iVar8 + -1 + extraout_ECX;\n            uVar4 = *puVar6;\n            if (var_ch != 0) {\n                if (uVar4 == 0x40) {\n                    var_14h = 0;\n                }\n                uVar4 = *(uVar4 + 0x443d90);\n            }\n            *puVar6 = uVar4 + 1;\n        }\n        uVar9 = 0x44c5a0;\n        if (var_ch == 0) {\n            uVar9 = 0x44b960;\n        }\n        iVar8 = fcn.0043949d(1, uVar9, 0);\n        var_ch = iVar8;\n        iVar7 = fcn.0043238b(iVar7, uVar10, 0);\n        if ((iVar7 != 0) && (iVar8 != 0)) {\n            *(iVar7 + 2) = *(iVar7 + 2) | 0x100;\n            *(iVar7 + 0x14) = iVar8;\n        }\n        uVar9 = fcn.00431e0d(0x50, iVar7);\n        var_10h = fcn.004443a4(uVar9, 3);\n        fcn.004449b7(arg_8h, arg_ch, var_10h);\n        iVar7 = fcn.0043238b(var_8h, uVar10, 0);\n        if ((iVar7 != 0) && (var_ch != 0)) {\n            *(iVar7 + 2) = *(iVar7 + 2) | 0x100;\n            *(iVar7 + 0x14) = var_ch;\n        }\n        uVar10 = fcn.00431e0d(0x4f, iVar7);\n        iVar7 = fcn.004443a4(uVar10, 3);\n        fcn.004449b7(arg_8h, arg_ch, iVar7);\n        ppuVar12 = arg_ch[7] + arg_10h * 10;\n        if (var_14h != 0) {\n            arg_ch[7][var_10h * 10 + 1] = arg_10h;\n            arg_ch[7][iVar7 * 10 + 1] = arg_10h;\n            *(ppuVar12 + 0x13) = 2;\n        }\n    }\n    if ((((*arg_ch_00 == 0x97) && (iVar7 = fcn.0041d27e(),  iVar7 == 0)) && (**(arg_ch_00 + 0x10) == 2)) &&\n       (**((*(arg_ch_00 + 0x10))[3] + 0x14) == -0x68)) {\n        uVar10 = **(*(arg_ch_00 + 0x10) + 0xc);\n        iVar7 = (*(*(arg_ch_00 + 0x10) + 0xc))[5];\n        uVar16 = fcn.004444aa(piVar1, uVar10);\n        uVar13 = fcn.004444aa(piVar1, iVar7);\n        if ((uVar16 & uVar13) == 0) {\n            fcn.0043238b(var_8h, uVar10, 0);\n            uVar10 = fcn.00431e0d(0x32, 0);\n            iVar8 = fcn.004443a4(uVar10, 3);\n            piVar1 = arg_ch[7];\n            piVar1[iVar8 * 10 + 6] = uVar16;\n            piVar1[iVar8 * 10 + 7] = uVar16 >> 0x20;\n            piVar1[iVar8 * 10 + 2] = *(iVar7 + 0x18);\n            piVar1[iVar8 * 10 + 3] = *(iVar7 + 0x1c);\n            *(piVar1 + iVar8 * 10 + 4) = 0x40;\n            piVar1[iVar8 * 10 + 1] = arg_10h;\n            ppuVar12 = arg_ch[7] + arg_10h * 10;\n            *(ppuVar12 + 0x12) = *(ppuVar12 + 0x12) | 8;\n            *(ppuVar12 + 0x13) = 1;\n            piVar1[iVar8 * 10 + 8] = ppuVar12[8];\n            piVar1[iVar8 * 10 + 9] = ppuVar12[9];\n        }\n    }\n    ppuVar12[6] = ppuVar12[6] | var_30h;\n    ppuVar12[7] = ppuVar12[7] | var_2ch;\n    return;\n}\n",
        "token_count": 2733
    },
    "00444e59": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00444e59(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h, uint32_t *arg_18h)\n\n{\n    uint8_t uVar1;\n    char *pcVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    int32_t *in_EAX;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t *unaff_EDI;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    char **var_8h;\n    int32_t var_4h;\n    \n    var_8h = in_EAX[3];\n    iVar8 = 0;\n    iVar7 = *in_EAX;\n    uVar4 = 0;\n    var_4h = 0;\n    if (0 < iVar7) {\n        do {\n            if (((unaff_EDI[1] < iVar8) || (pcVar2 = *var_8h,  *pcVar2 != -0x68)) || (*(pcVar2 + 0x18) != arg_10h))\n            break;\n            fcn.004319c1();\n            if ((*unaff_EDI == 0) || (unaff_EDI[1] <= iVar8)) {\n                var_ch = -1;\n                uVar1 = 0;\n            }\n            else {\n                var_ch = *(unaff_EDI[2] + iVar8 * 4);\n                if (var_ch == *(unaff_EDI[4] + 4)) {\n                    var_ch = -1;\n                }\n                uVar1 = *(unaff_EDI[10] + iVar8);\n            }\n            if ((*(pcVar2 + 0x1c) == var_ch) && (iVar5 = fcn.0041d27e(),  iVar5 == 0)) {\n                uVar3 = *(var_8h + 3) ^ uVar1;\n                if ((arg_14h < iVar8) && (uVar3 = uVar4,  (*(var_8h + 3) ^ uVar1) != uVar4)) goto code_r0x00444fb1;\n                var_4h = var_4h + 1;\n                var_8h = var_8h + 5;\n                uVar4 = uVar3;\n                if ((var_ch < 0) && (iVar5 = fcn.00444e02(arg_ch, var_4h, arg_10h),  iVar5 == 0)) {\n                    var_4h = iVar7;\n                }\n            }\n            else if (arg_14h <= iVar8) {\n                if (iVar8 != unaff_EDI[1]) goto code_r0x00444fb1;\n                break;\n            }\n            iVar8 = iVar8 + 1;\n        } while (var_4h < iVar7);\n    }\n    *arg_18h = uVar4 != 0;\n    if ((var_4h < iVar7) &&\n       (((*(unaff_EDI + 6) == '\\0' || (iVar8 != unaff_EDI[1])) ||\n        (iVar7 = fcn.00444e02(arg_ch, var_4h, arg_10h),  iVar7 != 0)))) {\ncode_r0x00444fb1:\n        uVar6 = 0;\n    }\n    else {\n        uVar6 = 1;\n    }\n    return uVar6;\n}\n",
        "token_count": 818
    },
    "0044503b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044503b(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t *unaff_ESI;\n    int64_t iVar6;\n    int64_t iVar7;\n    ulong uVar8;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((((*(*arg_8h + 0xc) & 0x8000000) != 0) && ((*unaff_ESI & 0x100f3000) == 0)) && (*(arg_10h + 0x16) == '\\0')) {\n        uVar1 = *(*(arg_10h + 0xc) + 0x18);\n        iVar6 = fcn.00444fb7(uVar1, 0);\n        iVar7 = fcn.0044b9ed(uVar1, 0, arg_8h[0x6e], arg_8h[0x6f]);\n        uVar8 = fcn.0044b8cd(iVar7 + 1, iVar6);\n        uVar8 = fcn.0044b8cd(uVar8, 2, 0);\n        uVar5 = uVar8 >> 0x20;\n        if ((uVar5 <= unaff_ESI[7]) && ((uVar5 < unaff_ESI[7] || (uVar8 < unaff_ESI[6])))) {\n            uVar2 = *(arg_ch + 0x1c);\n            uVar3 = *(arg_ch + 0x14) * 0x28 + uVar2;\n            for (; uVar2 < uVar3; uVar2 = uVar2 + 0x28) {\n                iVar4 = fcn.00444ff1(arg_14h, arg_18h);\n                if (iVar4 != 0) {\n                    unaff_ESI[6] = uVar8;\n                    unaff_ESI[7] = uVar5;\n                    unaff_ESI[2] = iVar6 + 1;\n                    unaff_ESI[3] = iVar6 + 1 >> 0x20;\n                    *unaff_ESI = 0x20000000;\n                    unaff_ESI[8] = *(uVar2 + 0x18);\n                    unaff_ESI[9] = *(uVar2 + 0x1c);\n                    return;\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 601
    },
    "0044513a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0044513a(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, uint32_t *arg_1ch)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *arg_ch_00;\n    int32_t iVar3;\n    uint *puVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    ulong uVar10;\n    uint32_t var_34h;\n    uint var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    *(arg_8h + 0x48) = *(arg_8h + 0x48) + 1;\n    uVar5 = *(arg_8h + 0x48);\n    arg_8h_00 = *(arg_8h + 0xc);\n    fcn.00429bd5(0x1a, uVar5);\n    fcn.00429b6c(7, 1, uVar5, 0);\n    iVar6 = *(arg_10h + 0xc);\n    var_4h = 0;\n    uVar8 = *(arg_ch + 0x1c);\n    var_20h = 0;\n    uVar9 = *(arg_ch + 0x14) * 0x28 + uVar8;\n    var_24h = 0;\n    for (; uVar8 < uVar9; uVar8 = uVar8 + 0x28) {\n        iVar1 = fcn.00444ff1(arg_14h, arg_18h);\n        if (iVar1 != 0) {\n            if (*(uVar8 + 0xc) < 0x40) {\n                uVar10 = fcn.0044b90d();\n            }\n            else {\n                uVar10 = 0x8000000000000000;\n            }\n            uVar2 = uVar10 >> 0x20;\n            var_34h = uVar10;\n            if ((var_34h & var_24h | uVar2 & var_20h) == 0) {\n                var_4h = var_4h + 1;\n                var_24h = var_24h | var_34h;\n                var_20h = var_20h | uVar2;\n            }\n        }\n    }\n    arg_1ch[1] = var_4h;\n    uVar8 = *(arg_10h + 0x2c);\n    uVar2 = ~var_24h & *(arg_10h + 0x28);\n    iVar1 = *(iVar6 + 8);\n    uVar7 = (~var_20h | 0x80000000) & uVar8;\n    var_ch = 0x3f;\n    if (iVar1 < 0x3f) {\n        var_ch = iVar1;\n    }\n    var_8h = 0;\n    if (0 < var_ch) {\n        do {\n            uVar10 = fcn.0044b90d();\n            if ((uVar10 & uVar2 | uVar10 >> 0x20 & uVar7) != 0) {\n                var_4h = var_4h + 1;\n            }\n            var_8h = var_8h + 1;\n        } while (var_8h < var_ch);\n    }\n    if ((uVar8 & 0x80000000) != 0) {\n        var_4h = (var_4h - 0x3f) + iVar1;\n    }\n    *arg_1ch = *arg_1ch | 0x810002;\n    arg_ch_00 = fcn.0041c2f7(var_4h * 9 + 0x34);\n    if (arg_ch_00 != NULL) {\n        arg_1ch[4] = arg_ch_00;\n        puVar4 = arg_ch_00 + 0xd;\n        arg_ch_00[0xb] = puVar4;\n        arg_ch_00[2] = puVar4 + var_4h;\n        arg_ch_00[10] = puVar4 + var_4h + var_4h;\n        arg_ch_00[4] = iVar6;\n        var_8h = 0;\n        var_24h = 0;\n        var_20h = 0;\n        *arg_ch_00 = 0x44c5a8;\n        arg_ch_00[1] = var_4h;\n        iVar1 = var_8h;\n        for (uVar8 = *(arg_ch + 0x1c); var_8h = iVar1,  uVar8 < uVar9; uVar8 = uVar8 + 0x28) {\n            iVar3 = fcn.00444ff1(arg_14h, arg_18h);\n            if (iVar3 != 0) {\n                iVar3 = *(uVar8 + 0xc);\n                if (iVar3 < 0x40) {\n                    uVar10 = fcn.0044b90d();\n                }\n                else {\n                    uVar10 = 0x8000000000000000;\n                }\n                var_28h = uVar10 >> 0x20;\n                var_2ch = uVar10;\n                if ((var_2ch & var_24h | var_28h & var_20h) == 0) {\n                    var_24h = var_24h | var_2ch;\n                    var_20h = var_20h | var_28h;\n                    *(arg_ch_00[2] + iVar1 * 4) = iVar3;\n                    puVar4 = fcn.00431b09(arg_8h);\n                    var_8h = iVar1 + 1;\n                    *(arg_ch_00[0xb] + iVar1 * 4) = *puVar4;\n                }\n            }\n            iVar1 = var_8h;\n        }\n        iVar1 = 0;\n        if (0 < var_ch) {\n            do {\n                uVar10 = fcn.0044b90d();\n                if ((uVar10 & uVar2 | uVar10 >> 0x20 & uVar7) != 0) {\n                    iVar3 = var_8h * 4;\n                    var_8h = var_8h + 1;\n                    *(iVar3 + arg_ch_00[2]) = iVar1;\n                    *(iVar3 + arg_ch_00[0xb]) = 0x44b960;\n                }\n                iVar1 = iVar1 + 1;\n            } while (iVar1 < var_ch);\n        }\n        if (((*(arg_10h + 0x2c) & 0x80000000) != 0) && (iVar1 = 0x3f,  0x3f < *(iVar6 + 8))) {\n            var_8h = var_8h << 2;\n            do {\n                *(var_8h + arg_ch_00[2]) = iVar1;\n                *(var_8h + arg_ch_00[0xb]) = 0x44b960;\n                var_8h = var_8h + 4;\n                iVar1 = iVar1 + 1;\n            } while (iVar1 < *(iVar6 + 8));\n        }\n        uVar5 = fcn.004392af(arg_8h, arg_ch_00);\n        fcn.00429c01(arg_8h_00, 0x28, arg_1ch[8], var_4h + 1, 0, uVar5, 0xfffffff0);\n        iVar6 = fcn.00429bd5(0x41, arg_1ch[7]);\n        uVar5 = fcn.004349af();\n        fcn.00439ed7(arg_8h, arg_1ch[7], uVar5, 1);\n        fcn.00429bea(0x46, arg_1ch[8], uVar5);\n        fcn.00429e02();\n        fcn.00429bea(0x43, arg_1ch[7], iVar6 + 1);\n        fcn.00429e02();\n        fcn.00429e14();\n        fcn.004349ca();\n        fcn.00429e14();\n    }\n    return;\n}\n",
        "token_count": 1976
    },
    "004454a2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.004454a2(uint arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint8_t *puVar3;\n    char **ppcVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    int32_t iVar8;\n    int32_t *var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar6 = *(in_EAX + 0x14);\n    iVar8 = 0;\n    if (0 < iVar6) {\n        puVar3 = *(in_EAX + 0x1c) + 0x10;\n        do {\n            if ((*(puVar3 + -8) == *(arg_ch + 0x18)) && ((*puVar3 & 0x81) == 0)) {\n                iVar8 = iVar8 + 1;\n            }\n            puVar3 = puVar3 + 0x28;\n            iVar6 = iVar6 + -1;\n        } while (iVar6 != 0);\n    }\n    iVar6 = 0;\n    if (arg_10h != NULL) {\n        iVar1 = *arg_10h;\n        var_4h = 0;\n        if (0 < iVar1) {\n            ppcVar4 = arg_10h[3];\n            do {\n                if ((**ppcVar4 != -0x68) || (*(*ppcVar4 + 0x18) != *(arg_ch + 0x18))) break;\n                var_4h = var_4h + 1;\n                ppcVar4 = ppcVar4 + 5;\n            } while (var_4h < iVar1);\n        }\n        if (var_4h == iVar1) {\n            iVar6 = iVar1;\n        }\n    }\n    piVar5 = fcn.0041c2f7(iVar8 * 0x14 + 0x30 + iVar6 * 8);\n    if (piVar5 == NULL) {\n        fcn.0041d1e3(0x44a3a4);\n        piVar5 = NULL;\n    }\n    else {\n        var_4h = 0;\n        piVar7 = piVar5 + 0xc + iVar8 * 3;\n        *piVar5 = iVar8;\n        piVar5[2] = iVar6;\n        piVar5[1] = piVar5 + 0xc;\n        piVar5[3] = piVar7;\n        piVar5[4] = piVar7 + iVar6 * 2;\n        if (0 < *(in_EAX + 0x14)) {\n            puVar3 = *(in_EAX + 0x1c) + 0x10;\n            var_ch = piVar5 + 0xd;\n            do {\n                if ((*(puVar3 + -8) == *(arg_ch + 0x18)) && ((*puVar3 & 0x81) == 0)) {\n                    var_ch[-1] = *(puVar3 + -4);\n                    var_ch[1] = var_4h;\n                    *var_ch = *puVar3;\n                    var_ch = var_ch + 3;\n                }\n                var_4h = var_4h + 1;\n                puVar3 = puVar3 + 0x28;\n            } while (var_4h < *(in_EAX + 0x14));\n        }\n        iVar8 = 0;\n        var_4h = 0;\n        if (0 < iVar6) {\n            do {\n                iVar2 = var_4h + 1;\n                piVar7[var_4h * 2] = *(*(iVar8 + arg_10h[3]) + 0x1c);\n                iVar1 = iVar8 + 0xc;\n                iVar8 = iVar8 + 0x14;\n                *(piVar7 + var_4h * 2 + 1) = *(iVar1 + arg_10h[3]);\n                var_4h = iVar2;\n            } while (iVar2 < iVar6);\n        }\n    }\n    return piVar5;\n}\n",
        "token_count": 949
    },
    "004455f7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004455f7(uint *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t *unaff_EBX;\n    int32_t var_4h;\n    \n    iVar2 = fcn.0044394b(*in_EAX);\n    piVar1 = *(iVar2 + 8);\n    iVar2 = (**(*piVar1 + 0xc))(piVar1);\n    if (iVar2 != 0) {\n        if (iVar2 == 7) {\n            *(*in_EAX + 0x1e) = 1;\n        }\n        else {\n            iVar2 = piVar1[2];\n            if (iVar2 == 0) {\n                iVar2 = fcn.0044a2ae();\n            }\n            fcn.0041d1e3(0x44a338, iVar2);\n        }\n    }\n    fcn.0041c110(piVar1[2]);\n    piVar1[2] = 0;\n    iVar2 = 0;\n    if (0 < *unaff_EBX) {\n        var_4h = 0;\n        do {\n            if ((*(unaff_EBX[1] + 5 + var_4h) == '\\0') && (0 < *(unaff_EBX[4] + iVar2 * 8))) {\n                fcn.0041d1e3(0x44c5b4, *arg_8h);\n            }\n            var_4h = var_4h + 0xc;\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < *unaff_EBX);\n    }\n    return in_EAX[0x10];\n}\n",
        "token_count": 390
    },
    "00445691": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0044580c)\n\nvoid __cdecl\nfcn.00445691(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h, uint32_t arg_18h, int32_t arg_1ch)\n\n{\n    int64_t *piVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t **in_EAX;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    uint32_t *unaff_ESI;\n    int32_t iVar7;\n    int64_t iVar8;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = *(arg_10h + 0xc);\n    fcn.0044b531();\n    *unaff_ESI = 0x8000000;\n    piVar4 = *in_EAX;\n    if (piVar4 == NULL) {\n        piVar4 = fcn.004454a2(arg_8h, arg_10h, arg_1ch);\n        *in_EAX = piVar4;\n        if (piVar4 == NULL) {\n            return;\n        }\n    }\n    iVar2 = piVar4[4];\n    arg_10h = 0;\n    if (0 < *piVar4) {\n        iVar7 = piVar4[1] + 5;\n        do {\n            iVar6 = *(iVar7 + 3) * 0x28;\n            arg_10h = arg_10h + 1;\n            *iVar7 = (*(iVar6 + 0x18 + *(arg_ch + 0x1c)) & arg_14h | *(iVar6 + 0x1c + *(arg_ch + 0x1c)) & arg_18h) == 0;\n            iVar7 = iVar7 + 0xc;\n        } while (arg_10h < *piVar4);\n    }\n    fcn.0044b531(iVar2, 0, *piVar4 << 3);\n    if (piVar4[7] != 0) {\n        fcn.0041c110(piVar4[6]);\n    }\n    iVar7 = piVar4[2];\n    piVar4[6] = 0;\n    piVar4[5] = 0;\n    piVar4[7] = 0;\n    piVar4[8] = 0;\n    piVar4[10] = 0;\n    piVar4[0xb] = 0x20000;\n    if (arg_1ch == 0) {\n        piVar4[2] = 0;\n    }\n    iVar6 = fcn.004455f7(arg_8h_00);\n    if (iVar6 == 0) {\n        arg_10h = 0;\n        if (0 < *piVar4) {\n            piVar5 = piVar4[1] + 8;\n            do {\n                if (0 < *(iVar2 + arg_10h * 8)) {\n                    iVar6 = *piVar5;\n                    iVar3 = *(arg_ch + 0x1c);\n                    unaff_ESI[8] = unaff_ESI[8] | *(iVar6 * 0x28 + 0x18 + iVar3);\n                    unaff_ESI[9] = unaff_ESI[9] | *(iVar6 * 0x28 + 0x1c + iVar3);\n                }\n                arg_10h = arg_10h + 1;\n                piVar5 = piVar5 + 3;\n            } while (arg_10h < *piVar4);\n        }\n        piVar1 = piVar4 + 10;\n        iVar2 = *piVar1;\n        iVar6 = piVar4[0xb];\n        iVar8 = *piVar1;\n        if ((arg_1ch != 0) && (iVar8 = *piVar1,  piVar4[8] == 0)) {\n            iVar8 = fcn.00444fb7(iVar2, iVar6);\n            iVar8 = fcn.0044b8cd(iVar8 + 1, iVar2, iVar6);\n        }\n        if (iVar8 < 0x2000000000001) {\n            unaff_ESI[6] = iVar8;\n            unaff_ESI[7] = iVar8 >> 0x20;\n        }\n        else {\n            unaff_ESI[6] = 0;\n            unaff_ESI[7] = 0x20000;\n        }\n        unaff_ESI[4] = piVar4;\n        if (piVar4[8] != 0) {\n            *unaff_ESI = *unaff_ESI | 0x1000000;\n        }\n        unaff_ESI[1] = 0;\n        piVar4[2] = iVar7;\n    }\n    return;\n}\n",
        "token_count": 1122
    },
    "00445839": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00445c53)\n// WARNING: Removing unreachable block (ram,0x00445d0f)\n// WARNING: Removing unreachable block (ram,0x00445d1d)\n// WARNING: Removing unreachable block (ram,0x00445d4b)\n// WARNING: Removing unreachable block (ram,0x00445d56)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00445839(int32_t *param_1, int32_t param_2, int32_t param_3, uint param_4, uint param_5, uint32_t param_6, \n                 uint32_t param_7, int32_t param_8)\n\n{\n    uchar *puVar1;\n    int32_t *piVar2;\n    uint32_t *in_EAX;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint16_t *puVar9;\n    bool bVar10;\n    ulong uVar11;\n    int64_t iVar12;\n    int64_t iVar13;\n    uint uStack188;\n    uint uStack184;\n    uchar *puStack180;\n    uchar *puStack176;\n    int32_t iStack172;\n    uint32_t uStack168;\n    uint uStack164;\n    ulong uStack160;\n    ulong uStack152;\n    uint uStack144;\n    uint uStack140;\n    uint32_t uStack136;\n    int32_t iStack132;\n    uint32_t uStack128;\n    uint uStack124;\n    uchar auStack120 [8];\n    uint32_t uStack112;\n    uint32_t uStack108;\n    uint32_t uStack104;\n    int32_t iStack100;\n    uint uStack96;\n    int32_t iStack92;\n    int32_t iStack88;\n    int32_t iStack84;\n    int32_t *piStack80;\n    int32_t iStack76;\n    uint32_t uStack72;\n    uint32_t *puStack68;\n    uint32_t uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint32_t uStack52;\n    uint32_t uStack48;\n    uint32_t uStack44;\n    uint32_t *puStack40;\n    int32_t iStack36;\n    ulong uStack32;\n    uchar *puStack24;\n    uint32_t uStack20;\n    ulong uStack16;\n    uint32_t uStack8;\n    \n    uStack96 = 0xffffffff;\n    uStack56 = *(param_3 + 0x18);\n    fcn.0044b531();\n    iVar12 = CONCAT44(uStack32._4_4_, uStack32);\n    in_EAX[6] = 0;\n    in_EAX[7] = 0x40000;\n    puVar1 = *(param_3 + 0x34);\n    uStack108 = (~*(param_3 + 0x15) & 8) << 4 | 3;\n    if (puVar1 == NULL) {\n        fcn.0044b531(&stack0xffffff44, 0, 0x34);\n        iVar12 = CONCAT44(uStack32._4_4_, uStack32);\n        puStack180 = &stack0xffffffa0;\n        puStack176 = &stack0xffffff78;\n        iStack172 = *(param_3 + 0xc);\n        uStack184 = 1;\n        uStack164 = CONCAT31(uStack164._1_3_, 5);\n        uStack136 = *(iStack172 + 0x18);\n        iStack132 = 1;\n        if (*(param_3 + 0x16) == '\\0') {\n            uStack160._4_4_ = *(iStack172 + 0x10);\n        }\n        puStack24 = NULL;\n        puVar1 = &stack0xffffff44;\n        uStack72 = 0xfff0ffff;\n        uStack64 = 3;\n    }\n    else {\n        uStack72 = 0xffffcfff;\n        uStack64 = uStack108;\n        puStack24 = puVar1;\n    }\n    while (puStack60 = puVar1,  puVar1 != NULL) {\n        puStack40 = *(puVar1 + 0xc);\n        uVar7 = 0;\n        uStack8 = 0;\n        uStack48 = 0;\n        uStack44 = 0;\n        iStack76 = 0;\n        iStack36 = 1;\n        uStack20 = 100;\n        puStack68 = NULL;\n        iStack84 = 0;\n        iStack88 = 0;\n        uStack52 = 0;\n        uStack32 = iVar12;\n        if (*(puVar1 + 4) < 1) {\ncode_r0x00445ac8:\n            if ((puVar1[0x18] != '\\0') && ((uStack8 & 0xc0000) == 0)) {\n                uStack8 = uStack8 | 0x4000000;\n            }\n        }\n        else {\n            do {\n                uVar7 = uStack52;\n                piVar3 = fcn.00444688(param_2, uStack56, *(*(puVar1 + 8) + uStack52 * 4), param_4, param_5, uStack64, \n                                      puStack24);\n                if (piVar3 == NULL) break;\n                if ((*(piVar3 + 4) & 1) == 0) {\n                    uVar8 = uStack8 | 0x11000;\n                    if (*(piVar3 + 4) < '\\0') {\n                        uVar8 = uStack8 | 0x91000;\n                    }\n                }\n                else {\n                    uVar8 = uStack8 | 0x51000;\n                    if ((*(*piVar3 + 2) & 0x800) == 0) {\n                        piVar2 = *(*piVar3 + 0x10);\n                        if (piVar2 != NULL) {\n                            iStack36 = (*piVar2 + 1) * iStack36;\n                        }\n                    }\n                    else {\n                        iStack36 = iStack36 * 0x19;\n                        iStack76 = 1;\n                    }\n                }\n                uStack8 = uVar8;\n                uStack48 = uStack48 | piVar3[6];\n                uStack44 = uStack44 | piVar3[7];\n                uVar7 = uVar7 + 1;\n                uStack52 = uVar7;\n            } while (uVar7 < *(puVar1 + 4));\n            if (*(puVar1 + 4) <= uVar7) goto code_r0x00445ac8;\n            uVar6 = *(*(puVar1 + 8) + uStack52 * 4);\n            iVar4 = fcn.00444688(param_2, uStack56, uVar6, param_4, param_5, 0x3c, puStack24);\n            uVar7 = uStack52;\n            if (iVar4 != 0) {\n                uStack20 = fcn.00444688(param_2, uStack56, uVar6, param_4, param_5, 0x18, puStack24);\n                iVar5 = fcn.00444688(param_2, uStack56, uVar6, param_4, param_5, 0x24, puStack24);\n                iVar4 = uStack20;\n                if (((iVar5 != 0) && (bVar10 = uStack20 != 0,  uStack20 = 0xb,  bVar10)) ||\n                   (uStack20 = 0x21,  iVar4 != 0)) {\n                    uStack8 = uStack8 | 0x100000;\n                    uStack48 = uStack48 | *(iVar4 + 0x18);\n                    uStack44 = uStack44 | *(iVar4 + 0x1c);\n                    puStack68 = 0x1;\n                }\n                if (iVar5 != 0) {\n                    puStack68 = puStack68 + 1;\n                    uStack8 = uStack8 | 0x200000;\n                    uStack48 = uStack48 | *(iVar5 + 0x18);\n                    uStack44 = uStack44 | *(iVar5 + 0x1c);\n                }\n                uStack8 = uStack8 | 0x22000;\n                uVar7 = uStack52;\n            }\n        }\n        if (param_8 != 0) {\n            if ((uStack8 & 0xc0000) == 0) {\n                iVar4 = fcn.00444e59(param_1, *(param_2 + 4), uStack56, uVar7, &stack0xffffff80);\n                if (iVar4 != 0) {\n                    uStack8 = uStack8 | -(uStack128 != 0) & 0x2000000 | 0x1022000;\n                    goto code_r0x00445ae7;\n                }\n            }\n            iStack84 = 1;\n        }\ncode_r0x00445ae7:\n        uStack16._4_4_ = uStack16 >> 0x20;\n        auStack120._4_4_ = auStack120 >> 0x20;\n        if ((puStack24 != NULL) && (uStack8 != 0)) {\n            uVar8 = *(param_3 + 0x28);\n            auStack120._0_4_ = *(param_3 + 0x2c);\n            if (0 < *(puStack24 + 4)) {\n                piStack80 = *(puStack24 + 8);\n                iStack92 = *(puStack24 + 4);\n                do {\n                    if (*piStack80 < 0x3f) {\n                        uVar11 = fcn.0044b90d();\n                        uVar8 = uVar8 & ~uVar11;\n                        auStack120._0_4_ = auStack120._0_4_ & ~(uVar11 >> 0x20);\n                    }\n                    uStack16._4_4_ = uStack16 >> 0x20;\n                    piStack80 = piStack80 + 1;\n                    iStack92 = iStack92 + -1;\n                } while (iStack92 != 0);\n            }\n            if ((uVar8 | auStack120._0_4_) == 0) {\n                uStack8 = uStack8 | 0x800000;\n                auStack120 = CONCAT44(auStack120._4_4_, auStack120._0_4_);\n            }\n            else {\n                iStack88 = 1;\n            }\n        }\n        uStack16._0_4_ = puStack40[uVar7] * iStack36;\n        if (iStack76 != 0) {\n            uVar7 = *puStack40;\n            uStack104 = uStack16;\n            iVar12 = fcn.0044b8cd();\n            if ((-1 < iVar12) && ((0xffffffff < iVar12 || (uVar7 < iVar12)))) {\n                uStack104 = uVar7 >> 1;\n                uStack16._0_4_ = uStack104;\n                iStack36 = fcn.0044b9ed();\n            }\n        }\n        uStack108 = 0;\n        uStack112 = *puStack40;\n        auStack120._4_4_ = 0x445b9d;\n        auStack120 = fcn.00444fb7();\n        uStack108 = iStack36 >> 0x1f;\n        uStack112 = iStack36;\n        uStack124 = 0x445bb0;\n        iVar12 = fcn.0044b8cd();\n        uStack124 = 0;\n        uStack128 = uStack16;\n        iStack132 = uStack20 >> 0x1f;\n        uStack136 = uStack20;\n        uStack104 = uStack20;\n        uStack140 = 0x445bd1;\n        iStack100 = iStack132;\n        uVar11 = fcn.0044b8cd();\n        uStack140 = 0;\n        uStack144 = 100;\n        uStack160._4_4_ = 0x445bdc;\n        uStack152 = uVar11;\n        uStack16 = fcn.0044b9ed();\n        uStack164 = iStack100;\n        uStack168 = uStack104;\n        iStack172 = 0x445bef;\n        uStack160 = iVar12 + -0x10;\n        uVar11 = fcn.0044b8cd();\n        iStack172 = 0;\n        puStack176 = 0x64;\n        uStack188 = 0x445bfa;\n        iVar12 = fcn.0044b9ed();\n        puStack180 = uVar11 >> 0x20;\n        uStack32._4_4_ = iVar12 >> 0x20;\n        if (iStack84 != 0) {\n            iVar13 = fcn.00444fb7(iVar12);\n            uStack188 = iVar12 >> 0x20;\n            uStack32._0_4_ = iVar12;\n            uStack188 = uStack32._4_4_;\n            uVar6 = iVar13 + 1;\n            iVar12 = fcn.0044b8cd(iVar13 + 1, uStack32);\n            uVar11 = CONCAT44(puStack180, uVar6);\n        }\n        uStack32._0_4_ = iVar12;\n        puStack180 = uVar11 >> 0x20;\n        if ((puStack24 != NULL) && (iStack88 == 0)) {\n            uVar6 = uStack32;\n            uStack32 = iVar12;\n            iVar12 = fcn.0044b9ed();\n            uVar11 = CONCAT44(puStack180, uVar6);\n        }\n        uStack32._4_4_ = iVar12 >> 0x20;\n        uStack32._0_4_ = iVar12;\n        puStack180 = uVar11 >> 0x20;\n        if (((2 < uStack16) && (uStack32._4_4_ <= in_EAX[7])) &&\n           ((uStack32._4_4_ < in_EAX[7] || (uStack32 < in_EAX[6] || uStack32 == in_EAX[6])))) {\n            uStack20 = uStack52;\n            puStack40 = puStack68;\n            uStack32 = iVar12;\n            join{0x00000008,0x00000000} = fcn.0044447d(uStack56, uVar11);\n            iVar4 = *(param_2 + 0x14);\n            puVar9 = *(param_2 + 0x1c) + 0x10;\n            iVar13 = uStack16;\n            do {\n                iVar12 = uStack32;\n                uStack16 = iVar13;\n                if (iVar4 == 0) break;\n                if (((*(puVar9 + 1) & 2) == 0) &&\n                   (unique0x100006a6 == CONCAT44(*(puVar9 + 10) & param_7, *(puVar9 + 8) & param_6))) {\n                    if ((*puVar9 & 0x83) == 0) {\n                        if (((*puVar9 & 0x3c) == 0) || (puStack40 == NULL)) goto code_r0x00445cf2;\n                        puStack40 = puStack40 + -1;\n                    }\n                    else if (uStack20 == 0) {\ncode_r0x00445cf2:\n                        iVar13 = fcn.0044b9ed();\n                    }\n                    else {\n                        uStack20 = uStack20 - 1;\n                    }\n                }\n                iVar4 = iVar4 + -1;\n                puVar9 = puVar9 + 0x14;\n                iVar12 = uStack32;\n                uStack16 = iVar13;\n            } while (2 < iVar13);\n            uStack112 = unique0x100006be >> 0x20;\n            auStack120 = CONCAT44(auStack120._4_4_, auStack120._0_4_);\n            if (uStack16 < 2) {\n                uStack16 = 2;\n                auStack120 = CONCAT44(auStack120._4_4_, auStack120._0_4_);\n            }\n        }\n        uStack16._4_4_ = uStack16 >> 0x20;\n        uStack32._4_4_ = iVar12 >> 0x20;\n        uStack32._0_4_ = iVar12;\n        if (((puStack24 == NULL) || (uStack8 != 0)) &&\n           ((iVar12 < *(in_EAX + 6) ||\n            (((iVar12 <= *(in_EAX + 6) && (uStack16._4_4_ <= in_EAX[3])) &&\n             ((uStack16._4_4_ < in_EAX[3] || (uStack16 < in_EAX[2])))))))) {\n            in_EAX[6] = uStack32;\n            in_EAX[8] = uStack48;\n            in_EAX[9] = uStack44;\n            in_EAX[2] = uStack16;\n            *in_EAX = uStack8 & uStack72;\n            in_EAX[7] = uStack32._4_4_;\n            in_EAX[3] = uStack16._4_4_;\n            in_EAX[1] = uStack52;\n            in_EAX[4] = puStack24;\n        }\n        if (*(param_3 + 0x34) != 0) break;\n        puVar1 = *(puStack60 + 0x20);\n        uStack72 = 0xffffcfff;\n        uStack64 = uStack108;\n        puStack24 = puVar1;\n    }\n    if ((param_8 == 0) && ((*(*param_1 + 0xc) & 0x1000000) != 0)) {\n        *in_EAX = *in_EAX | 0x2000000;\n    }\n    uStack32 = iVar12;\n    fcn.0044503b(param_1, param_2, param_3, param_4, param_5);\n    *in_EAX = *in_EAX | uStack64;\n    return;\n}\n",
        "token_count": 4095
    },
    "00445e04": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00445e04(int32_t *param_1, int32_t param_2)\n\n{\n    char *pcVar1;\n    \n    if (param_1 != NULL) {\n        do {\n            if ((*(param_1 + 0x12) & 4) != 0) {\n                return;\n            }\n            if ((*(param_2 + 0x18) != 0) && ((*(*param_1 + 2) & 1) == 0)) {\n                return;\n            }\n            *(param_1 + 0x12) = *(param_1 + 0x12) | 4;\n            if (param_1[1] < 0) {\n                return;\n            }\n            param_1 = param_1[1] * 0x28 + *(param_1[5] + 0x1c);\n            pcVar1 = param_1 + 0x13;\n            *pcVar1 = *pcVar1 + -1;\n        } while (*pcVar1 == '\\0');\n    }\n    return;\n}\n",
        "token_count": 238
    },
    "0044611d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_71h\n\nulong __cdecl fcn.0044611d(uint *arg_8h, uint32_t arg_ch, int32_t **arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    int32_t in_EAX;\n    uint32_t arg_10h_00;\n    int32_t **arg_8h_00;\n    uint uVar6;\n    uint8_t **ppuVar7;\n    int32_t iVar8;\n    uint8_t *puVar9;\n    uint8_t uVar10;\n    int32_t **extraout_ECX;\n    uint32_t uVar11;\n    char *pcVar12;\n    int32_t *piVar13;\n    int32_t iVar14;\n    uint32_t *puVar15;\n    uint *puVar16;\n    ulong uVar17;\n    int32_t **var_71h;\n    uint var_54h;\n    uint var_50h;\n    uint32_t var_4ch;\n    uint var_48h;\n    uint8_t **var_44h;\n    uint var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    int32_t **var_28h;\n    uint32_t var_24h;\n    uint8_t **var_20h;\n    uint8_t **var_1ch;\n    uint8_t **var_18h;\n    uint32_t *var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t *var_8h;\n    int32_t **var_4h;\n    \n    arg_8h_00 = *arg_8h;\n    var_8h = arg_8h_00[3];\n    var_10h = arg_8h[7];\n    puVar15 = arg_8h + in_EAX * 0x14 + 0xc;\n    var_2ch = 0;\n    iVar8 = *(puVar15 + 0xd) * 0x38 + 8 + arg_8h[2];\n    var_ch = *(iVar8 + 0x18);\n    uVar11 = *puVar15 >> 0x19 & 1;\n    if (((*puVar15 & 0x800000) == 0) || ((arg_ch & 0x40) != 0)) {\n        bVar4 = false;\n    }\n    else {\n        bVar4 = true;\n    }\n    var_24h = uVar11;\n    var_14h = puVar15;\n    var_4h = arg_8h_00;\n    var_28h = fcn.00429c62();\n    puVar15[10] = var_28h;\n    puVar15[9] = var_28h;\n    arg_10h_00 = fcn.00429c62();\n    puVar15[0xb] = arg_10h_00;\n    if ((*(puVar15 + 0xd) != '\\0') && ((*(iVar8 + 0x15) & 8) != 0)) {\n        arg_8h_00[0x12] = arg_8h_00[0x12] + 1;\n        puVar15[6] = arg_8h_00[0x12];\n        stack0xffffff8c = 0x7;\n        fcn.00429b6c();\n    }\n    uVar1 = *puVar15;\n    if ((uVar1 & 0x8000000) != 0) {\n        puVar16 = puVar15[4];\n        iVar8 = puVar16[4];\n        var_20h = *puVar16;\n        arg_8h_00[0x15] = arg_8h_00[0x15] + 1;\n        var_18h = fcn.004349fe();\n        iVar14 = 1;\n        if (0 < var_20h) {\n            do {\n                var_1ch = NULL;\n                if (0 < var_20h) {\n                    do {\n                        if (*(iVar8 + var_1ch * 8) == iVar14) {\n                            fcn.00433ee6();\n                            puVar15 = var_14h;\n                            break;\n                        }\n                        var_1ch = var_1ch + 1;\n                    } while (var_1ch < var_20h);\n                }\n            } while ((var_1ch != var_20h) && (iVar14 = iVar14 + 1,  iVar14 <= var_20h));\n        }\n        stack0xffffff8c = 0x446274;\n        fcn.00429bea();\n        *NULL = var_18h + 1;\n        fcn.00429bea(7, iVar14 + -1);\n        fcn.00429c01(var_8h, 0x80, var_ch, var_28h, var_18h, puVar16[6], (-(puVar16[7] != 0) & 0xfffffff7) - 2);\n        puVar16[7] = 0;\n        if (0 < var_20h) {\n            pcVar12 = iVar8 + 4;\n            var_44h = var_20h;\n            do {\n                if (*pcVar12 != '\\0') {\n                    fcn.00445e04();\n                }\n                pcVar12 = pcVar12 + 8;\n                var_44h = var_44h + -1;\n            } while (var_44h != NULL);\n        }\n        puVar15[0xe] = var_ch;\n        *(puVar15 + 0x35) = 0x83;\n        puVar15[0xf] = var_8h[7];\n        fcn.00434a22();\n        arg_8h_00 = fcn.00433356();\n        puVar15 = var_14h;\n        goto code_r0x00446977;\n    }\n    if ((uVar1 & 0x1000) != 0) {\n        var_2ch = fcn.004349af();\n        stack0xffffff8c = arg_10h;\n        uVar6 = fcn.00444688(var_10h, var_ch, 0xffffffff, arg_10h, arg_14h, 3, 0);\n        uVar6 = fcn.00445ea4(arg_8h_00, uVar6, var_2ch);\n        uVar11 = puVar15[10];\n        fcn.00429bea(0x15, uVar6, uVar11);\n        fcn.00429b6c(0x34, var_ch, uVar11, uVar6);\n        fcn.004332b5(var_ch, 0xffffffff);\n        *(puVar15 + 0x35) = 0x89;\n        arg_8h_00 = extraout_ECX;\n        goto code_r0x00446977;\n    }\n    if ((uVar1 & 0x2000) != 0) {\n        var_44h = NULL;\n        var_18h = 0x89;\n        stack0xffffff8c = arg_10h;\n        var_20h = fcn.00444688(var_10h, var_ch, 0xffffffff, arg_10h, arg_14h, 0x24, 0);\n        ppuVar7 = fcn.00444688(var_10h, var_ch, 0xffffffff, arg_10h, arg_14h, 0x18, 0);\n        var_1ch = ppuVar7;\n        if (uVar11 != 0) {\n            var_1ch = var_20h;\n            var_20h = ppuVar7;\n        }\n        if (var_20h == NULL) {\n            stack0xffffff8c = 0x446475;\n            fcn.00429bea();\n        }\n        else {\n            puVar9 = *var_20h;\n            var_24h = 0x2e2c2d2f;\n            fcn.00433eab();\n            stack0xffffff8c = var_28h;\n            fcn.00429b6c(*(&fcn.0044611d::var_71h + *puVar9), var_ch);\n            fcn.0043332d();\n            fcn.004349ca();\n            fcn.00445e04(var_14h);\n            arg_8h_00 = var_4h;\n            puVar15 = var_14h;\n        }\n        if (var_1ch != NULL) {\n            puVar9 = *var_1ch;\n            arg_8h_00[0x12] = arg_8h_00[0x12] + 1;\n            var_44h = arg_8h_00[0x12];\n            fcn.00433ee6();\n            if ((*puVar9 == 0x4f) || (*puVar9 == 0x4d)) {\n                var_18h = (uVar11 == 0) * 2 + 0x4e;\n            }\n            else {\n                var_18h = (uVar11 != 0) * 2 + 0x4d;\n            }\n            fcn.00445e04();\n            arg_8h_00 = var_4h;\n            puVar15 = var_14h;\n        }\n        uVar1 = var_8h[7];\n        *(puVar15 + 0x35) = (uVar11 == 0) + 'B';\n        puVar15[0xe] = var_ch;\n        puVar15[0xf] = uVar1;\n        if ((var_20h == NULL) && (var_1ch == NULL)) {\n            *(puVar15 + 0x36) = 1;\n        }\n        if (var_18h != 0x89) {\n            uVar6 = fcn.004349af();\n            stack0xffffff8c = 0x446528;\n            var_2ch = uVar6;\n            fcn.00429bea();\n            stack0xffffff8c = 0xffffffff;\n            fcn.004332b5(var_ch, 0xffffffff);\n            fcn.00429b6c(var_18h, var_44h, var_28h, uVar6);\n            fcn.00429e02();\n            arg_8h_00 = var_4h;\n        }\n        goto code_r0x00446977;\n    }\n    if ((uVar1 & 0x30000) == 0) {\n        *(puVar15 + 0x35) = *(uVar11 + 0x444878);\n        puVar15[0xe] = var_ch;\n        stack0xffffff8c = 0x44696c;\n        iVar8 = fcn.00429bea();\n        puVar15[0xf] = iVar8 + 1;\n        *(puVar15 + 0x36) = 1;\n        goto code_r0x00446977;\n    }\n    var_28h = puVar15[8];\n    uVar11 = puVar15[4];\n    uVar2 = puVar15[1];\n    var_1ch = *(*(uVar11 + 8) + uVar2 * 4);\n    uVar6 = 0;\n    bVar3 = false;\n    var_20h = NULL;\n    var_18h = NULL;\n    if ((((arg_ch & 1) != 0) && ((uVar1 & 0x1000000) != 0)) && (*(uVar11 + 4) != uVar2 && uVar2 <= *(uVar11 + 4))) {\n        uVar6 = 1;\n        bVar3 = true;\n    }\n    if ((uVar1 & 0x100000) != 0) {\n        stack0xffffff8c = arg_10h;\n        var_18h = fcn.00444688(var_10h, var_ch, var_1ch, arg_10h, arg_14h, 0x18, uVar11);\n        uVar6 = 1;\n    }\n    if ((*puVar15 & 0x200000) != 0) {\n        stack0xffffff8c = arg_10h;\n        var_20h = fcn.00444688(var_10h, var_ch, var_1ch, arg_10h, arg_14h, 0x24, uVar11);\n        uVar6 = 1;\n    }\n    stack0xffffff8c = arg_10h;\n    var_1ch = fcn.00445fa7(var_10h, arg_10h, arg_14h, uVar6, &fcn.0044611d::var_30h);\n    iVar8 = fcn.0041c430(var_30h);\n    ppuVar7 = var_18h;\n    uVar1 = puVar15[10];\n    if ((uVar2 < *(uVar11 + 4)) && (var_24h == (*(uVar2 + *(uVar11 + 0x28)) == '\\0'))) {\n        var_18h = var_20h;\n        var_20h = ppuVar7;\n    }\n    if ((var_20h == NULL) || ((*(var_20h + 4) & 0x28) != 0)) {\n        var_38h = 1;\n    }\n    else {\n        var_38h = 0;\n    }\n    if ((var_20h != NULL) || (var_3ch = 0,  0 < uVar2)) {\n        var_3ch = 1;\n    }\n    if (var_20h == NULL) {\n        uVar11 = uVar2;\n        if (bVar3) {\n            stack0xffffff8c = 0xa;\n            fcn.00429b6c();\n            var_38h = 0;\n            var_3ch = 1;\n            goto code_r0x0044673a;\n        }\n    }\n    else {\n        puVar9 = *(*var_20h + 0xc);\n        fcn.00433ee6();\n        for (; (*puVar9 == 0x9d || (*puVar9 == 0x9c)); puVar9 = *(puVar9 + 8)) {\n        }\n        uVar10 = *puVar9;\n        if (uVar10 == 0x84) {\n            uVar10 = puVar9[0x23];\n        }\n        if ((uVar10 != 0x5e) && ((uVar10 < 0x81 || (0x83 < uVar10)))) {\n            stack0xffffff8c = 0x4466e2;\n            fcn.00429bea();\n        }\n        puVar15 = var_14h;\n        if (var_30h != 0) {\n            cVar5 = fcn.00431a87();\n            if (cVar5 == 'b') {\n                *(var_30h + uVar2) = 0x62;\n            }\n            iVar14 = fcn.00432944();\n            puVar15 = var_14h;\n            if (iVar14 != 0) {\n                *(var_30h + uVar2) = 0x62;\n            }\n        }\ncode_r0x0044673a:\n        uVar11 = uVar2 + 1;\n    }\n    fcn.00445e40(var_4h, var_1ch);\n    stack0xffffff8c = var_1ch;\n    fcn.00429c31(var_8h, *(var_24h + 0x44486c + (var_38h + var_3ch * 2) * 2), var_28h, uVar1, var_1ch, uVar11);\n    var_4ch = uVar2;\n    if (var_18h != NULL) {\n        puVar9 = *(*var_18h + 0xc);\n        fcn.0043332d();\n        fcn.00433ee6();\n        for (; (*puVar9 == 0x9d || (*puVar9 == 0x9c)); puVar9 = *(puVar9 + 8)) {\n        }\n        uVar10 = *puVar9;\n        if (uVar10 == 0x84) {\n            uVar10 = puVar9[0x23];\n        }\n        if ((uVar10 != 0x5e) && ((uVar10 < 0x81 || (0x83 < uVar10)))) {\n            stack0xffffff8c = 0x4467e2;\n            fcn.00429bea();\n        }\n        if (iVar8 != 0) {\n            cVar5 = fcn.00431a87();\n            if (cVar5 == 'b') {\n                *(iVar8 + uVar2) = 0x62;\n            }\n            iVar14 = fcn.00432944();\n            if (iVar14 != 0) {\n                *(iVar8 + uVar2) = 0x62;\n            }\n        }\n        var_4ch = uVar2 + 1;\n        fcn.00445e40(var_4h, var_1ch);\n        puVar15 = var_14h;\n    }\n    piVar13 = var_8h;\n    fcn.0041c16b();\n    unique0x00007a00 = *var_4h;\n    fcn.0041c16b();\n    puVar15[0xf] = piVar13[7];\n    if ((var_18h == NULL) && (uVar2 == 0)) {\n        iVar8 = 0;\n    }\n    else {\n        iVar8 = 1;\n    }\n    uVar11 = *((var_24h + 1) * iVar8 + 0x444874);\n    if (uVar11 != 0x89) {\n        stack0xffffff8c = var_28h;\n        fcn.00429c31(piVar13, uVar11, var_28h, uVar1, var_1ch, var_4ch);\n        fcn.00429e02();\n    }\n    uVar6 = fcn.004349af();\n    if ((*puVar15 & 0x300000) != 0) {\n        stack0xffffff8c = 0x1c;\n        fcn.00429b6c();\n        fcn.00429bea(0x49, uVar6, arg_10h_00);\n    }\n    fcn.004349ca();\n    fcn.00445e04();\n    fcn.00445e04();\n    if (!bVar4) {\n        uVar6 = fcn.004349af();\n        stack0xffffff8c = 0x446914;\n        var_2ch = uVar6;\n        fcn.00429bea();\n        stack0xffffff8c = 0xffffffff;\n        fcn.004332b5(var_ch, 0xffffffff);\n        fcn.00429bea(0x30, var_ch, uVar6);\n    }\n    *(puVar15 + 0x35) = (var_24h == 0) + 'B';\n    puVar15[0xe] = var_28h;\n    arg_8h_00 = var_4h;\ncode_r0x00446977:\n    iVar8 = var_10h;\n    uVar17 = fcn.0044447d();\n    piVar13 = *(iVar8 + 0x1c);\n    uVar11 = arg_10h & ~uVar17;\n    arg_14h = arg_14h & ~(uVar17 >> 0x20);\n    for (var_20h = *(var_10h + 0x14); 0 < var_20h; var_20h = var_20h + -1) {\n        if ((*(piVar13 + 0x12) & 6) == 0) {\n            if ((piVar13[8] & uVar11 | piVar13[9] & arg_14h) == 0) {\n                if ((puVar15[6] == 0) || ((*(*piVar13 + 2) & 1) != 0)) {\n                    unique0x10000a1c = arg_8h_00;\n                    fcn.00434349(arg_8h_00, *piVar13, arg_10h_00, 8);\n                    *(piVar13 + 0x12) = *(piVar13 + 0x12) | 4;\n                }\n            }\n            else {\n                *(arg_8h + 7) = 1;\n            }\n        }\n        piVar13 = piVar13 + 10;\n    }\n    if (puVar15[6] != 0) {\n        puVar15[0xc] = var_8h[7];\n        stack0xffffff8c = 0x7;\n        fcn.00429b6c();\n        fcn.00433460();\n        iVar8 = var_10h;\n        var_20h = NULL;\n        puVar16 = *(var_10h + 0x1c);\n        if (0 < *(var_10h + 0x14)) {\n            do {\n                if (((*(puVar16 + 0x12) & 6) == 0) && ((puVar16[8] & uVar11 | puVar16[9] & arg_14h) == 0)) {\n                    unique0x10000a20 = arg_8h_00;\n                    fcn.00434349(arg_8h_00, *puVar16, arg_10h_00, 8);\n                    *(puVar16 + 0x12) = *(puVar16 + 0x12) | 4;\n                }\n                var_20h = var_20h + 1;\n                puVar16 = puVar16 + 10;\n            } while (var_20h < *(iVar8 + 0x14));\n        }\n    }\n    fcn.004349ca();\n    return CONCAT44(arg_14h, uVar11);\n}\n",
        "token_count": 4991
    },
    "00446a70": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446a70(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t unaff_EBX;\n    uint32_t *puVar2;\n    int32_t var_4h;\n    \n    if (unaff_EBX != 0) {\n        var_4h = 0;\n        if (0 < *(unaff_EBX + 0x18)) {\n            puVar2 = unaff_EBX + 0x30;\n            do {\n                uVar1 = puVar2[0x12];\n                if (uVar1 != 0) {\n                    if (*(uVar1 + 0x1c) != 0) {\n                        fcn.0041c110(*(uVar1 + 0x18));\n                    }\n                    fcn.0041c16b(arg_8h, uVar1);\n                }\n                if (((*puVar2 & 0x20000000) != 0) && (uVar1 = puVar2[4],  uVar1 != 0)) {\n                    fcn.0041c16b(arg_8h, *(uVar1 + 0x1c));\n                    fcn.0041c16b(arg_8h, uVar1);\n                }\n                var_4h = var_4h + 1;\n                puVar2 = puVar2 + 0x14;\n            } while (var_4h < *(unaff_EBX + 0x18));\n        }\n        fcn.00444331(*(unaff_EBX + 0x1c));\n        fcn.0041c16b(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 366
    },
    "00446af4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t ** fcn.00446af4(int32_t *param_1, int32_t *param_2, int32_t param_3, uint *param_4, uint32_t param_5)\n\n{\n    uint32_t uVar1;\n    int32_t **arg_8h;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t *piVar8;\n    int32_t **ppiVar9;\n    int32_t **ppiVar10;\n    ulong uVar11;\n    ulong uVar12;\n    uint arg_20h;\n    int32_t *apiStack184 [2];\n    uint32_t uStack176;\n    int32_t iStack172;\n    uint32_t uStack160;\n    int32_t iStack156;\n    uint32_t uStack152;\n    uint32_t uStack148;\n    int32_t *apiStack144 [2];\n    uint32_t uStack136;\n    int32_t iStack132;\n    uint32_t uStack120;\n    int32_t iStack116;\n    uint uStack104;\n    uint uStack100;\n    int32_t *piStack96;\n    uint32_t uStack92;\n    uint uStack84;\n    int32_t iStack80;\n    int32_t **ppiStack76;\n    uint32_t uStack72;\n    uint32_t uStack68;\n    int32_t *piStack64;\n    int32_t iStack60;\n    int32_t **ppiStack56;\n    int32_t iStack52;\n    int32_t iStack48;\n    int32_t *piStack44;\n    uint32_t uStack40;\n    int32_t iStack36;\n    int32_t iStack32;\n    int32_t iStack28;\n    uint32_t uStack24;\n    uint32_t uStack20;\n    uint32_t uStack16;\n    int32_t **ppiStack12;\n    int32_t *piStack8;\n    \n    iStack60 = param_1[3];\n    if (*param_2 < 0x41) {\n        if ((param_5 & 0x80) == 0) {\n            piVar8 = *param_2;\n        }\n        else {\n            piVar8 = 0x1;\n        }\n        iStack36 = *param_1;\n        piStack8 = piVar8;\n        arg_8h = fcn.0041c2f7(piVar8 * 0x50 + 0x294);\n        if (*(iStack36 + 0x1e) == '\\0') {\n            arg_8h[6] = piStack8;\n            arg_8h[2] = param_2;\n            *arg_8h = param_1;\n            piVar2 = fcn.00429c62();\n            arg_8h[5] = piVar2;\n            ppiVar9 = arg_8h + piVar8 * 0x14 + 0xc;\n            *(arg_8h + 1) = param_5;\n            arg_8h[7] = ppiVar9;\n            arg_8h[8] = param_1[0x6e];\n            arg_8h[9] = param_1[0x6f];\n            ppiStack56 = ppiVar9;\n            fcn.0044b531(ppiVar9 + 0x58, 0, 0x104);\n            ppiVar9[1] = ppiVar9 + 0x58;\n            *ppiVar9 = param_1;\n            ppiVar9[5] = NULL;\n            ppiVar9[6] = 0x8;\n            ppiVar9[7] = ppiVar9 + 8;\n            ppiVar9[2] = NULL;\n            ppiVar9[3] = NULL;\n            if ((param_1[0x57] == 0) && ((*(*param_1 + 0xc) & 0x40) == 0)) {\n                uStack100 = 0;\n                uStack104 = 0x42af18;\n                piStack96 = param_1;\n                fcn.004307d4(&uStack104, param_3);\n            }\n            fcn.0044443e(ppiVar9, param_3, 0x45);\n            if ((param_3 != 0) && ((piStack8 == NULL || (iVar3 = fcn.00432891(param_3),  iVar3 != 0)))) {\n                fcn.00434349(param_1, param_3, arg_8h[5], 8);\n            }\n            iStack28 = 0;\n            if (0 < *param_2) {\n                piVar8 = param_2 + 5;\n                do {\n                    ppiVar10 = ppiVar9 + 0x58;\n                    ppiVar9[*ppiVar10 + 0x59] = piVar8[3];\n                    *ppiVar10 = *ppiVar10 + 1;\n                    if ((*piVar8 != 0) && ((*(*piVar8 + 0x22) & 0x10) != 0)) {\n                        uVar11 = fcn.0044b90d();\n                        ppiVar9[2] = ppiVar9[2] | uVar11;\n                        ppiVar9[3] = ppiVar9[3] | uVar11 >> 0x20;\n                    }\n                    iStack28 = iStack28 + 1;\n                    piVar8 = piVar8 + 0xe;\n                } while (iStack28 < *param_2);\n            }\n            piVar8 = ppiVar9[5];\n            while (piVar8 = piVar8 + -1,  -1 < piVar8) {\n                fcn.004449b7(param_2, ppiVar9, piVar8);\n            }\n            if (*(iStack36 + 0x1e) == '\\0') {\n                uStack24 = 0xffffffff;\n                uStack20 = 0xffffffff;\n                uStack40 = 0xffffffff;\n                ppiStack12 = arg_8h + 0xc;\n                iStack32 = 0;\n                iStack28 = 0;\n                if (0 < piStack8) {\n                    do {\n                        iStack48 = -1;\n                        fcn.0044b531(apiStack144, 0, 0x28);\n                        uStack120 = 0;\n                        iStack116 = 0x40000;\n                        iStack80 = 0;\n                        uStack72 = 0;\n                        uStack68 = 0;\n                        uStack16 = iStack32 < piStack8 + -1;\n                        do {\n                            if (-1 < iStack48) break;\n                            iStack52 = iStack32;\n                            piStack44 = param_2 + iStack32 * 0xe + 2;\n                            if (iStack32 < piStack8) {\n                                ppiStack76 = arg_8h + iStack32 * 0x14 + 0x1e;\n                                do {\n                                    piVar8 = piStack44;\n                                    piStack64 = (*(piStack44 + 0x15) & 10) != 0;\n                                    if ((iStack52 != iStack32) && (piStack64 != NULL)) break;\n                                    uVar12 = fcn.0044447d(piStack44[6]);\n                                    uVar11 = CONCAT44(uStack20, uStack24);\n                                    uStack92 = uVar12 >> 0x20;\n                                    uVar5 = uVar12;\n                                    if ((uVar5 & uStack24 | uStack92 & uStack20) == 0) {\n                                        if (iStack52 == iStack32) {\n                                            iStack32 = iStack32 + 1;\n                                        }\n                                    }\n                                    else {\n                                        if (uStack16 != 0) {\n                                            uVar11 = uVar12;\n                                        }\n                                        uStack84 = uVar11 >> 0x20;\n                                        if ((iStack28 == 0) && (param_4 != NULL)) {\n                                            uVar4 = *param_4;\n                                        }\n                                        else {\n                                            uVar4 = 0;\n                                        }\n                                        if (piVar8[0xd] == 0) {\n                                            iStack80 = iStack80 + 1;\n                                        }\n                                        if ((*(piVar8[3] + 0x22) & 0x10) == 0) {\n                                            fcn.00445839(param_1, ppiStack56, piVar8, uVar11, uStack24, uStack20);\n                                        }\n                                        else {\n                                            fcn.00445691(param_1, ppiStack56, piStack44, uVar11, uStack84, uVar4);\n                                        }\n                                        iVar3 = iStack52;\n                                        if ((uStack16 != 0) && ((apiStack184[0] & 0x100f3000) == 0)) {\n                                            uStack72 = uStack72 | uVar5;\n                                            uStack68 = uStack68 | uStack92;\n                                        }\n                                        if (((((uStack152 & uStack24 | uStack148 & uStack20) == 0) &&\n                                             (((iStack48 < 0 || ((uVar5 & uStack72 | uStack92 & uStack68) != 0)) ||\n                                              ((apiStack184[0] & 0x100f3000) != 0)))) &&\n                                            (((iStack80 == 0 || (piStack44[0xd] == 0)) ||\n                                             ((apiStack184[0] & 0x100f3000) != 0)))) &&\n                                           ((((iStack48 < 0 || (iStack156 < iStack116)) ||\n                                             ((iStack156 <= iStack116 && (uStack160 < uStack120)))) ||\n                                            ((iStack156 <= iStack116 &&\n                                             ((((iStack156 < iStack116 || (uStack160 <= uStack120)) &&\n                                               (iStack172 <= iStack132)) &&\n                                              ((iStack172 < iStack132 || (uStack176 < uStack136)))))))))) {\n                                            ppiVar9 = apiStack184;\n                                            ppiVar10 = apiStack144;\n                                            for (iVar6 = 10; iVar6 != 0; iVar6 = iVar6 + -1) {\n                                                *ppiVar10 = *ppiVar9;\n                                                ppiVar9 = ppiVar9 + 1;\n                                                ppiVar10 = ppiVar10 + 1;\n                                            }\n                                            iStack48 = iVar3;\n                                        }\n                                        if (piStack64 != NULL) break;\n                                    }\n                                    iStack52 = iStack52 + 1;\n                                    ppiStack76 = ppiStack76 + 0x14;\n                                    piStack44 = piStack44 + 0xe;\n                                } while (iStack52 < piStack8);\n                            }\n                            uStack16 = uStack16 - 1;\n                        } while (-1 < uStack16);\n                        iVar3 = iStack48;\n                        if ((apiStack144[0] & 0x1000000) != 0) {\n                            *param_4 = 0;\n                        }\n                        uStack40 = uStack40 & apiStack144[0];\n                        ppiVar9 = apiStack144;\n                        ppiVar10 = ppiStack12;\n                        for (iVar6 = 6; iVar6 != 0; iVar6 = iVar6 + -1) {\n                            *ppiVar10 = *ppiVar9;\n                            ppiVar9 = ppiVar9 + 1;\n                            ppiVar10 = ppiVar10 + 1;\n                        }\n                        if ((apiStack144[0] & 0x200f0000) == 0) {\n                            ppiStack12[8] = 0xffffffff;\n                        }\n                        else {\n                            ppiStack12[8] = param_1[0x11];\n                            param_1[0x11] = param_1[0x11] + 1;\n                        }\n                        uVar11 = fcn.0044447d(param_2[iStack48 * 0xe + 8]);\n                        uStack24 = uStack24 & ~uVar11;\n                        uStack20 = uStack20 & ~(uVar11 >> 0x20);\n                        *(ppiStack12 + 0xd) = iStack48;\n                        if ((-1 < iStack132) && ((0 < iStack132 || (uStack136 != 0)))) {\n                            uVar11 = fcn.0044b8cd();\n                            param_1[0x6e] = uVar11;\n                            param_1[0x6f] = uVar11 >> 0x20;\n                        }\n                        if ((param_2[iVar3 * 0xe + 0xf] != NULL) && ((apiStack144[0] & 0xf0000) == 0)) {\n                            fcn.0041d1e3(0x44c600, *param_2[iVar3 * 0xe + 0xf]);\n                            goto code_r0x004470bb;\n                        }\n                        iStack28 = iStack28 + 1;\n                        ppiStack12 = ppiStack12 + 0x14;\n                    } while (iStack28 < piStack8);\n                }\n                if ((param_1[0x10] == 0) && (*(iStack36 + 0x1e) == '\\0')) {\n                    if (((uStack40 & 0x4000000) != 0) && (param_4 != NULL)) {\n                        *param_4 = 0;\n                    }\n                    if (((param_5 & 4) != 0) && ((uStack40 & 0x4000000) != 0)) {\n                        arg_8h[0xc] = arg_8h[0xc] & 0xff7fffff;\n                        *(arg_8h + 6) = 1;\n                    }\n                    fcn.00438fc7();\n                    arg_8h[0xb] = NULL;\n                    ppiStack12 = arg_8h + 0xc;\n                    uStack24 = 0xffffffff;\n                    uStack20 = 0xffffffff;\n                    arg_8h[10] = 0x1;\n                    if (0 < piStack8) {\n                        piStack64 = piStack8;\n                        do {\n                            piVar8 = param_2 + *(ppiStack12 + 0xd) * 0xe + 2;\n                            uStack16 = piVar8[3];\n                            ppiStack12[7] = piVar8[6];\n                            apiStack184[0] = arg_8h[0xb];\n                            uVar11 = fcn.0044b8cd(ppiStack12[2], ppiStack12[3], arg_8h[10]);\n                            arg_8h[10] = uVar11;\n                            arg_8h[0xb] = uVar11 >> 0x20;\n                            uStack40 = fcn.0043e8c8();\n                            uVar5 = uStack16;\n                            if (((*(uStack16 + 0x22) & 2) == 0) && (*(uStack16 + 0x1c) == 0)) {\n                                if ((*ppiStack12 & 0x8000000) == 0) {\n                                    if (((((*ppiStack12 & 0x800000) == 0) && ((param_5 & 0x10) == 0)) &&\n                                        (fcn.0043c637(piVar8[6], uStack40, (*(arg_8h + 6) != '\\0') + '&'), \n                                        *(arg_8h + 6) == '\\0')) && (*(uVar5 + 8) < 0x40)) {\n                                        uVar7 = piVar8[0xb];\n                                        iVar3 = 0;\n                                        for (uVar5 = piVar8[10]; (uVar5 | uVar7) != 0; uVar5 = uVar5 >> 1 | uVar1) {\n                                            uVar1 = uVar7 << 0x1f;\n                                            uVar7 = uVar7 >> 1;\n                                            iVar3 = iVar3 + 1;\n                                        }\n                                        fcn.00429f87(iStack60, iVar3, 0xfffffff2);\n                                    }\n                                }\n                                else {\n                                    arg_20h = 0xfffffff6;\n                                    uVar4 = fcn.0044394b(iStack36);\n                                    fcn.00429c01(iStack60, 0x7f, piVar8[6], 0, 0, uVar4, arg_20h);\n                                }\n                            }\n                            if ((*ppiStack12 & 0x20000000) == 0) {\n                                if ((*ppiStack12 & 0xf0000) != 0) {\n                                    piVar2 = ppiStack12[4];\n                                    uVar4 = fcn.004392af(param_1, piVar2);\n                                    fcn.00429c01(iStack60, 0x26, ppiStack12[8], piVar2[5], uStack40, uVar4, 0xfffffff0);\n                                }\n                            }\n                            else {\n                                fcn.0044513a(param_1, ppiStack56, piVar8, uStack24, uStack20, ppiStack12);\n                            }\n                            fcn.00438fc7();\n                            uVar11 = fcn.0044447d(piVar8[6]);\n                            ppiStack12 = ppiStack12 + 0x14;\n                            uStack24 = uStack24 & ~uVar11;\n                            uStack20 = uStack20 & ~(uVar11 >> 0x20);\n                            piStack64 = piStack64 + -1;\n                        } while (piStack64 != NULL);\n                    }\n                    arg_8h[3] = *(iStack60 + 0x1c);\n                    if (*(iStack36 + 0x1e) == '\\0') {\n                        iVar3 = 0;\n                        uVar11 = 0xffffffffffffffff;\n                        if (0 < piStack8) {\n                            ppiVar9 = arg_8h + 0x17;\n                            do {\n                                uVar11 = fcn.0044611d(arg_8h, param_5, uVar11, uVar11 >> 0x20);\n                                piVar8 = *ppiVar9;\n                                iVar3 = iVar3 + 1;\n                                ppiVar9 = ppiVar9 + 0x14;\n                                arg_8h[4] = piVar8;\n                            } while (iVar3 < piStack8);\n                            return arg_8h;\n                        }\n                        return arg_8h;\n                    }\n                }\n            }\ncode_r0x004470bb:\n            param_1[0x6e] = arg_8h[8];\n            param_1[0x6f] = arg_8h[9];\n            fcn.00446a70(iStack36);\n        }\n        else {\n            fcn.0041c16b(iStack36, arg_8h);\n        }\n    }\n    else {\n        fcn.0041d1e3(0x44c5e4, 0x40);\n    }\n    return NULL;\n}\n",
        "token_count": 4272
    },
    "00447218": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00447218(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t arg_8h;\n    char *pcVar3;\n    int32_t extraout_ECX;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t **ppiVar7;\n    int32_t **unaff_EDI;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    piVar1 = *unaff_EDI;\n    piVar2 = unaff_EDI[2];\n    arg_8h = *piVar1;\n    fcn.00433460();\n    iVar5 = unaff_EDI[6] + -1;\n    if (-1 < iVar5) {\n        var_10h = piVar2 + iVar5 * 0xe + 8;\n        ppiVar7 = unaff_EDI + iVar5 * 0x14 + 0x1b;\n        do {\n            fcn.00429caf();\n            if (*(ppiVar7 + -7) != -0x77) {\n                fcn.00429bea(*(ppiVar7 + -7), ppiVar7[-1], *ppiVar7);\n                fcn.00429e02();\n            }\n            if (((ppiVar7[-0xf] & 0xf1000) != 0) && (0 < ppiVar7[1])) {\n                fcn.00429caf();\n                piVar4 = ppiVar7[1];\n                piVar6 = ppiVar7[2] + piVar4 * 2 + -2;\n                for (; 0 < piVar4; piVar4 = piVar4 + -1) {\n                    fcn.00429e14();\n                    fcn.00429bea(0x43, *piVar6, piVar6[1]);\n                    fcn.00429e14();\n                    piVar6 = piVar6 + -2;\n                }\n                fcn.0041c16b(arg_8h, ppiVar7[2]);\n            }\n            fcn.00429caf();\n            if (ppiVar7[-9] != NULL) {\n                fcn.00429bd5(0x71, ppiVar7[-9]);\n                if ((ppiVar7[-0xf] & 0x800000) == 0) {\n                    fcn.00429bd5(0x3e, *var_10h);\n                }\n                if (-1 < ppiVar7[-7]) {\n                    fcn.00429bd5(0x3e, ppiVar7[-7]);\n                }\n                if (*(ppiVar7 + -7) == '\\x03') {\n                    fcn.00429bea(2, ppiVar7[-1], ppiVar7[-3]);\n                }\n                else {\n                    fcn.00429b6c(1, 0, ppiVar7[-3], 0);\n                }\n                fcn.00429e14();\n            }\n            var_10h = var_10h + -0xe;\n            iVar5 = iVar5 + -1;\n            ppiVar7 = ppiVar7 + -0x14;\n        } while (-1 < iVar5);\n    }\n    fcn.00429caf();\n    var_8h = 0;\n    ppiVar7 = unaff_EDI + 0xc;\n    if (0 < unaff_EDI[6]) {\n        do {\n            if ((((*(piVar2[*(ppiVar7 + 0xd) * 0xe + 5] + 0x22) & 2) == 0) &&\n                (*(piVar2[*(ppiVar7 + 0xd) * 0xe + 5] + 0x1c) == 0)) && ((*(unaff_EDI + 1) & 0x20) == 0)) {\n                piVar6 = *ppiVar7;\n                if ((*(unaff_EDI + 6) == '\\0') && ((piVar6 & 0x800000) == 0)) {\n                    fcn.00429bd5(0x2b, piVar2[*(ppiVar7 + 0xd) * 0xe + 8]);\n                }\n                if (((piVar6 & 0xf0000) != 0) && ((piVar6 & 0x20000000) == 0)) {\n                    fcn.00429bd5(0x2b, ppiVar7[8]);\n                }\n            }\n            if (((*ppiVar7 & 0xf0000) != 0) && (*(arg_8h + 0x1e) == '\\0')) {\n                piVar6 = ppiVar7[4];\n                var_10h = unaff_EDI[3];\n                pcVar3 = fcn.0042a0b7();\n                if (var_10h < *(extraout_ECX + 0x1c)) {\n                    var_10h = *(extraout_ECX + 0x1c) - var_10h;\n                    do {\n                        if (*(pcVar3 + 4) == ppiVar7[7]) {\n                            if (*pcVar3 == '\\x1c') {\n                                iVar5 = piVar6[1];\n                                var_ch = 0;\n                                if (0 < iVar5) {\n                                    piVar4 = piVar6[2];\n                                    do {\n                                        if (*(pcVar3 + 8) == *piVar4) {\n                                            *(pcVar3 + 8) = var_ch;\n                                            piVar4 = ppiVar7[8];\n                                            goto code_r0x0044749a;\n                                        }\n                                        var_ch = var_ch + 1;\n                                        piVar4 = piVar4 + 1;\n                                    } while (var_ch < iVar5);\n                                }\n                            }\n                            else if (*pcVar3 == '=') {\n                                piVar4 = ppiVar7[8];\n                                *pcVar3 = 'H';\ncode_r0x0044749a:\n                                *(pcVar3 + 4) = piVar4;\n                            }\n                        }\n                        pcVar3 = pcVar3 + 0x14;\n                        var_10h = var_10h + -1;\n                    } while (var_10h != NULL);\n                }\n            }\n            var_8h = var_8h + 1;\n            ppiVar7 = ppiVar7 + 0x14;\n        } while (var_8h < unaff_EDI[6]);\n    }\n    piVar1[0x6e] = unaff_EDI[8];\n    piVar1[0x6f] = unaff_EDI[9];\n    fcn.00446a70(arg_8h);\n    return;\n}\n",
        "token_count": 1553
    },
    "00447739": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00447739(ushort param_1, uchar param_2, int32_t *param_3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    \n    *in_EAX = *in_EAX + 1;\n    iVar3 = *in_EAX;\n    if (iVar3 < 100) {\n        piVar1 = in_EAX + iVar3 * 4 + 3;\n        piVar1[1] = *param_3;\n        piVar1[2] = param_3[1];\n        *piVar1 = param_1;\n        *(piVar1 + 2) = param_2;\n        piVar1[3] = param_3[2];\n    }\n    else {\n        iVar2 = in_EAX[2];\n        iVar3 = iVar3 + -1;\n        *in_EAX = iVar3;\n        while (-1 < iVar3) {\n            fcn.00447699();\n            iVar3 = *in_EAX;\n        }\n        fcn.0041d1e3(0x44c618);\n        *(iVar2 + 0x14) = 1;\n        in_EAX[2] = iVar2;\n    }\n    return;\n}\n",
        "token_count": 287
    },
    "0044778f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nvoid __cdecl fcn.0044778f(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    int32_t var_38h;\n    int32_t iStack56;\n    int32_t iStack52;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    iStack52 = *0x444888;\n    iStack56 = *0x444884;\n    var_38h = *0x444880;\n    var_4h = arg_8h[2];\n    var_8h = arg_8h + *arg_8h * 4 + 3;\n    if (arg_ch - 5U < 0x141) {\n        switch(*(*(arg_ch + 0x440135) * 4 + 0x43fe7a)) {\n        case 0xbe:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x7de8:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xe0e9:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x6ad88b:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x105840f:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x16a5008:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x374c33b:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x808748d:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x84b8b0c:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x875ff10:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x87dc33b:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x107d39ff:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x10c48300:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x10c4830c:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x14468b0a:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x14c3830c:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x1834ff10:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x247b39da:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x28508bee:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x2a1be828:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x2c7e1e39:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x304389fc:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x34ff1424:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x36ff1075:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x39057408:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x3966d175:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x3fb6e8ce:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x453b1846:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x4589fe8b:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x458bffff:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x458d0000:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x4846ff34:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x4b8b077f:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x4d891046:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x4f10c483:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x4f8bffff:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x53ec8b55:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x56144789:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x5638c06b:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x57006aff:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x57f8458b:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x57fffe9c:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x5f8dfffe:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x5ffffe9e:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x6afffe9c:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x73ff50f4:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x74fb3b0c:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x74fb3b10:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x75010640:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x75c0850c:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x75ff0c47:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x7b8314c4:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x7be8d68b:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x7d390c74:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x830c458b:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x831c7eff:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x83ec8b55:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x83fffe9c:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x8538c683:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x85f88bff:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x8b142474:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x8b144d8b:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x8b1475ff:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x8b4846ff:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x8b567557:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x8bdc4589:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x8bfc75ff:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0x9eb4e8d6:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xbf0f0c49:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xc3c95b5e:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xc483f445:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xc68b716a:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xc68bd67c:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xc68bfc75:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xc78b48c4:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xd67c073b:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xd73b0474:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xd9e8736a:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xe80875ff:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xf33bdb33:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xf475ffc7:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xf6cc7439:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xf87d89ff:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xfc7d8b29:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xfe9c15e8:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xff0ce808:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xff1075ff:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xff5318c6:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xffff23a1:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xfffffeea:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xffffff24:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    }\n    uVar6 = *(arg_ch * 2 + 0x4465d9);\n    uVar1 = *(arg_ch * 2 + 0x4465d8);\n    *arg_8h = *arg_8h - uVar6;\n    iVar3 = *arg_8h;\n    piVar5 = var_8h + uVar6 * -4;\n    uVar2 = *((*(*piVar5 * 2 + 0x445e28) + uVar1) * 2 + 0x444898);\n    if (uVar2 < 0x276) {\n        if (uVar6 == 0) {\n            fcn.00447739(uVar2, uVar1, &var_38h);\n        }\n        else {\n            *arg_8h = iVar3 + 1;\n            piVar5[5] = var_38h;\n            piVar5[6] = iStack56;\n            *(piVar5 + 4) = uVar2;\n            *(piVar5 + 0x12) = uVar1;\n            piVar5[7] = iStack52;\n        }\n    }\n    else {\n        iVar4 = arg_8h[2];\n        while (-1 < iVar3) {\n            fcn.00447699();\n            iVar3 = *arg_8h;\n        }\n        arg_8h[2] = iVar4;\n    }\n    return;\n}\n",
        "token_count": 3224
    },
    "00449288": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00449288(int32_t arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_EBX;\n    uint var_18h;\n    uint uStack24;\n    uint uStack20;\n    uint var_ch;\n    uint var_8h;\n    uint uStack8;\n    \n    if (*unaff_EBX < 0) {\n        unaff_EBX[1] = -1;\n        *unaff_EBX = 0;\n        *(unaff_EBX + 3) = 0;\n        *(unaff_EBX + 0xe) = 0;\n    }\n    var_ch = arg_ch;\n    var_8h = arg_10h;\n    unaff_EBX[2] = arg_14h;\n    while( true ) {\n        iVar1 = fcn.004476c2();\n        if (iVar1 < 0x276) {\n            fcn.00447739(iVar1, arg_8h, &var_ch);\n            unaff_EBX[1] = unaff_EBX[1] + -1;\n            return;\n        }\n        if (iVar1 < 0x3bf) {\n            fcn.0044778f(unaff_EBX, iVar1 + -0x276);\n        }\n        else {\n            var_18h = var_ch;\n            uStack24 = var_8h;\n            uStack20 = uStack8;\n            iVar1 = unaff_EBX[2];\n            fcn.0041d1e3(0x44c63c, &var_18h);\n            *(iVar1 + 0x14) = 1;\n            unaff_EBX[2] = iVar1;\n            fcn.004475b5();\n            arg_8h = 0xfd;\n        }\n        if (arg_8h == 0xfd) break;\n        if (*unaff_EBX < 0) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 450
    },
    "0044981f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.0044981f(int32_t *arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    uchar uVar1;\n    int32_t arg_8h_00;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    var_18h = -1;\n    arg_8h_00 = *arg_8h;\n    iVar4 = *(arg_8h_00 + 0x4c);\n    var_10h = 0;\n    if (*(arg_8h_00 + 0x8c) == 0) {\n        *(arg_8h_00 + 0xe0) = 0;\n    }\n    arg_8h[1] = 0;\n    arg_8h[0x7d] = arg_ch;\n    var_14h = 0;\n    piVar2 = fcn.0041bf1f(0x64c);\n    if (piVar2 == NULL) {\n        *(arg_8h_00 + 0x1e) = 1;\n        var_10h = 7;\n    }\n    else {\n        *piVar2 = -1;\n        uVar1 = *(arg_8h_00 + 0xea);\n        if (*(arg_8h_00 + 0x104) != 0) {\n            *(arg_8h_00 + 0xea) = 1;\n        }\n        do {\n            while( true ) {\n                if ((*(arg_8h_00 + 0x1e) != '\\0') || (*(var_14h + arg_ch) == '\\0')) goto code_r0x00449977;\n                arg_8h[0x7b] = var_14h + arg_ch;\n                iVar3 = fcn.004493b3();\n                var_14h = var_14h + iVar3;\n                arg_8h[0x7c] = iVar3;\n                if (iVar4 < var_14h) {\n                    arg_8h[1] = 0x12;\n                    goto code_r0x00449977;\n                }\n                if (var_20h != 1) break;\n                arg_8h[0x7d] = var_14h + arg_ch;\ncode_r0x00449910:\n                fcn.00449288(var_20h, arg_8h[0x7b], arg_8h[0x7c], arg_8h);\n                var_18h = var_20h;\n                if (arg_8h[1] != 0) goto code_r0x00449977;\n            }\n            if (var_20h == 0x94) {\n                fcn.0041c16b(arg_8h_00, *arg_10h);\n                iVar4 = fcn.0041ce3a(0x44c794, arg_8h + 0x7b);\n                *arg_10h = iVar4;\n                var_10h = 1;\n                goto code_r0x00449977;\n            }\n            if (var_20h != 0x95) goto code_r0x00449910;\n        } while (*(arg_8h_00 + 0xe0) == 0);\n        fcn.0041d1e3(0x44c788);\n        arg_8h[1] = 9;\ncode_r0x00449977:\n        if (((*(var_14h + arg_ch) == '\\0') && (var_10h == 0)) && (arg_8h[1] == 0)) {\n            if (var_18h != 1) {\n                fcn.00449288(1, arg_8h[0x7b], arg_8h[0x7c], arg_8h);\n                arg_8h[0x7d] = var_14h + arg_ch;\n            }\n            fcn.00449288(0, arg_8h[0x7b], arg_8h[0x7c], arg_8h);\n        }\n        while (-1 < *piVar2) {\n            fcn.00447699();\n        }\n        fcn.0041c110(piVar2);\n        *(arg_8h_00 + 0xea) = uVar1;\n        if (*(arg_8h_00 + 0x1e) != '\\0') {\n            arg_8h[1] = 7;\n        }\n        if (((arg_8h[1] != 0) && (arg_8h[1] != 0x65)) && (arg_8h[2] == 0)) {\n            uVar5 = fcn.0044a2ae();\n            fcn.0041c49d(arg_8h_00, 0x44a338, uVar5);\n        }\n        iVar4 = arg_8h[2];\n        if (iVar4 != 0) {\n            iVar3 = arg_8h[1];\n            *arg_10h = iVar4;\n            fcn.0041cf9b(iVar3, 0x44a338, iVar4);\n            arg_8h[2] = 0;\n            var_10h = var_10h + 1;\n        }\n        if (((arg_8h[3] != 0) && (0 < arg_8h[0x10])) && (*(arg_8h + 0x13) == '\\0')) {\n            fcn.0042ae75();\n            arg_8h[3] = 0;\n        }\n        fcn.0041c110(arg_8h[0x85]);\n        if (*(arg_8h + 0x83) == '\\0') {\n            fcn.004369c9(arg_8h_00, arg_8h[0x7e]);\n        }\n        fcn.0044218c();\n        fcn.0041c16b(arg_8h_00, arg_8h[0x73]);\n        fcn.0041c16b(arg_8h_00, arg_8h[0x77]);\n        while (arg_8h[0x66] != 0) {\n            piVar2 = arg_8h[0x66];\n            arg_8h[0x66] = *piVar2;\n            fcn.0041c16b(arg_8h_00, piVar2);\n        }\n        while (arg_8h[0x87] != 0) {\n            iVar4 = arg_8h[0x87];\n            arg_8h[0x87] = *(iVar4 + 0x44);\n            fcn.004369c9(arg_8h_00, iVar4);\n        }\n        if ((var_10h != 0) && (arg_8h[1] == 0)) {\n            arg_8h[1] = 1;\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 1646
    },
    "00449ffb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00449ffb(void)\n\n{\n    code *pcVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    code **ppcVar6;\n    int32_t iVar7;\n    uint *puVar8;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    if (in_EAX != 0) {\n        iVar2 = fcn.0041d8b6();\n        if (iVar2 == 0) {\n            uVar3 = fcn.0044a94a(0x19cde);\n            return uVar3;\n        }\n        fcn.0041bc4a(*(in_EAX + 0x44));\n        fcn.00436864();\n        fcn.0044408e(0x44);\n        iVar2 = 0;\n        if (*(in_EAX + 0x88) != 0) {\n            uVar3 = 0x44c7f8;\ncode_r0x0044a050:\n            fcn.0041d171(5, uVar3);\n            fcn.0041bc58(*(in_EAX + 0x44));\n            return 5;\n        }\n        iVar5 = 0;\n        if (0 < *(in_EAX + 4)) {\n            piVar4 = *(in_EAX + 8) + 4;\n            do {\n                if ((*piVar4 != 0) && (*(*piVar4 + 0x10) != 0)) {\n                    uVar3 = 0x44c828;\n                    goto code_r0x0044a050;\n                }\n                iVar5 = iVar5 + 1;\n                piVar4 = piVar4 + 4;\n            } while (iVar5 < *(in_EAX + 4));\n        }\n        fcn.00449fa1();\n        if (0 < *(in_EAX + 4)) {\n            var_4h = NULL;\n            do {\n                iVar5 = *(in_EAX + 8) + var_4h;\n                if (*(iVar5 + 4) != 0) {\n                    fcn.004258e9();\n                    *(iVar5 + 4) = 0;\n                    if (iVar2 != 1) {\n                        *(iVar5 + 0xc) = 0;\n                    }\n                }\n                var_4h = var_4h + 0x10;\n                iVar2 = iVar2 + 1;\n            } while (iVar2 < *(in_EAX + 4));\n        }\n        fcn.00436864();\n        var_4h = in_EAX + 300;\n        var_8h = 0x17;\n        do {\n            iVar2 = *var_4h;\n            while (iVar2 != 0) {\n                iVar5 = *(iVar2 + 0x1c);\n                iVar7 = iVar2;\n                do {\n                    fcn.00449fda();\n                    iVar7 = *(iVar7 + 8);\n                    fcn.0041c16b();\n                    iVar2 = iVar5;\n                } while (iVar7 != 0);\n            }\n            var_4h = var_4h + 1;\n            var_8h = var_8h + -1;\n        } while (var_8h != 0);\n        for (puVar8 = *(in_EAX + 400); puVar8 != NULL; puVar8 = *puVar8) {\n            ppcVar6 = puVar8[2] + 0x10;\n            var_8h = 3;\n            do {\n                if (*ppcVar6 != NULL) {\n                    (**ppcVar6)(ppcVar6[-2]);\n                }\n                ppcVar6 = ppcVar6 + 5;\n                var_8h = var_8h + -1;\n            } while (var_8h != 0);\n            fcn.0041c16b();\n        }\n        fcn.0041d8ec();\n        for (puVar8 = *(in_EAX + 0x114); puVar8 != NULL; puVar8 = *puVar8) {\n            pcVar1 = *(puVar8[2] + 0xc);\n            if (pcVar1 != NULL) {\n                (*pcVar1)(*(puVar8[2] + 8));\n            }\n            fcn.0041c16b();\n        }\n        fcn.0041d8ec();\n        fcn.0041d171(0, 0);\n        if (*(in_EAX + 0xd4) != 0) {\n            fcn.00429a4c();\n        }\n        *(in_EAX + 0x38) = 0xb5357930;\n        fcn.0041c16b();\n        fcn.0041bc58(*(in_EAX + 0x44));\n        *(in_EAX + 0x38) = 0x9f3c2d33;\n        if (*(in_EAX + 0x44) != 0) {\n            (**0x44f04c)(*(in_EAX + 0x44));\n        }\n        if (*(in_EAX + 0xeb) != '\\0') {\n            fcn.0041c110(*(in_EAX + 0x104));\n        }\n        fcn.0041c110();\n    }\n    return 0;\n}\n",
        "token_count": 1204
    },
    "0044a4e1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0044a4e1(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t unaff_ESI;\n    \n    if (unaff_ESI == 0) {\n        uVar2 = 7;\n    }\n    else {\n        iVar1 = fcn.0041d8b6();\n        if (iVar1 != 0) {\n            fcn.0041bc4a(*(unaff_ESI + 0x44));\n            if ((*(unaff_ESI + 0x1e) != '\\0') || (iVar1 = fcn.0042b828(*(unaff_ESI + 0xd4)),  iVar1 == 0)) {\n                iVar1 = fcn.0044a2ae();\n            }\n            fcn.0041bc58(*(unaff_ESI + 0x44));\n            return iVar1;\n        }\n        uVar2 = fcn.0044a94a(0x19ffe);\n    }\n    if ((0x1a < (uVar2 & 0xff)) || (iVar1 = *((uVar2 & 0xff) * 4 + 0x446dc8),  iVar1 == 0)) {\n        iVar1 = 0x44c85c;\n    }\n    return iVar1;\n}\n",
        "token_count": 292
    },
    "0044a544": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0044a544(uint param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t unaff_ESI;\n    \n    if (unaff_ESI != 0) {\n        iVar1 = fcn.0041d8b6(param_1);\n        if (iVar1 == 0) {\n            uVar2 = fcn.0044a94a(0x1a043);\n            return uVar2;\n        }\n        if (*(unaff_ESI + 0x1e) == '\\0') {\n            return *(unaff_ESI + 0x18) & *(unaff_ESI + 0x14);\n        }\n    }\n    return 7;\n}\n",
        "token_count": 165
    },
    "0044a982": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044a982(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *unaff_ESI;\n    ushort var_464h;\n    uint var_462h;\n    int16_t var_234h;\n    uint var_232h;\n    \n    if (unaff_ESI[9] != 0) {\n        return 1;\n    }\n    var_234h = 0;\n    fcn.0044b531(&var_232h, 0, 0x22e);\n    if (arg_8h == 0) {\n        fcn.0040f499();\n    }\n    else {\n        fcn.0044b56f(&var_234h, arg_8h);\n    }\n    pcVar1 = _fcn.00443104;\n    if (var_234h == 0) {\n        iVar2 = (*_fcn.00443104)(0x44912c);\n        unaff_ESI[9] = iVar2;\n        if (iVar2 == 0) {\n            uVar3 = (*pcVar1)(0x449144);\n            unaff_ESI[9] = uVar3;\n        }\n        if (unaff_ESI[9] != 0) goto code_r0x0044aae9;\n        uVar3 = (*pcVar1)(0x44803c);\n    }\n    else {\n        var_464h = 0;\n        fcn.0044b531(&var_462h, 0, 0x22e);\n        fcn.0044b56f(&var_464h, &var_234h);\n        fcn.0044b519(&var_234h, 0x44c9a0);\n        iVar2 = fcn.00410555(&var_234h);\n        if (iVar2 == 0) {\n            fcn.0044b56f(&var_234h, &var_464h);\n            fcn.0044b519(&var_234h, 0x44c9bc);\n        }\n        iVar2 = fcn.00410555(&var_234h);\n        if (iVar2 == 0) {\n            fcn.0044b56f(&var_234h, &var_464h);\n            fcn.0044b519(&var_234h, 0x44c9dc);\n        }\n        iVar2 = (*_fcn.00443144)(&var_234h);\n        unaff_ESI[9] = iVar2;\n        if (iVar2 != 0) goto code_r0x0044aae9;\n        uVar3 = (**0x443170)(&var_234h, 0, 8);\n    }\n    unaff_ESI[9] = uVar3;\ncode_r0x0044aae9:\n    pcVar1 = _fcn.00443108;\n    if (unaff_ESI[9] != 0) {\n        uVar3 = (*_fcn.00443108)(unaff_ESI[9], 0x44c9f0);\n        *unaff_ESI = uVar3;\n        uVar3 = (*pcVar1)(unaff_ESI[9], 0x44ca00);\n        unaff_ESI[1] = uVar3;\n        uVar3 = (*pcVar1)(unaff_ESI[9], 0x44ca10);\n        unaff_ESI[2] = uVar3;\n        uVar3 = (*pcVar1)(unaff_ESI[9], 0x44ca20);\n        unaff_ESI[3] = uVar3;\n        uVar3 = (*pcVar1)(unaff_ESI[9], 0x44ca34);\n        unaff_ESI[4] = uVar3;\n        uVar3 = (*pcVar1)(unaff_ESI[9], 0x44ca48);\n        unaff_ESI[5] = uVar3;\n        uVar3 = (*pcVar1)(unaff_ESI[9], 0x44ca60);\n        unaff_ESI[6] = uVar3;\n        uVar3 = (*pcVar1)(unaff_ESI[9], 0x44ca74);\n        unaff_ESI[7] = uVar3;\n        uVar3 = (*pcVar1)(unaff_ESI[9], 0x44ca84);\n        unaff_ESI[8] = uVar3;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 1013
    },
    "0044adbb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044adbb(void)\n\n{\n    int32_t *unaff_ESI;\n    \n    if ((*(unaff_ESI + 3) != 0) && ((*(unaff_ESI + 0x483) != 0 || (*(unaff_ESI + 0x403) != 0)))) {\n        (**(*unaff_ESI + 4))(unaff_ESI + 3);\n    }\n    fcn.00418d47();\n    unaff_ESI[1] = 0;\n    return;\n}\n",
        "token_count": 118
    },
    "0044b2d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044b2d4(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t unaff_ESI;\n    \n    if (*(unaff_ESI + 4) == 0) {\n        uVar2 = (*_fcn.00443104)(0x44cc3c);\n        pcVar1 = _fcn.00443108;\n        *(unaff_ESI + 4) = uVar2;\n        uVar2 = (*pcVar1)(uVar2, 0x44cc58);\n        *(unaff_ESI + 8) = uVar2;\n        uVar2 = (*pcVar1)(*(unaff_ESI + 4), 0x44cc68);\n        *(unaff_ESI + 0xc) = uVar2;\n        uVar2 = (*pcVar1)(*(unaff_ESI + 4), 0x44cc78);\n        *(unaff_ESI + 0x10) = uVar2;\n        uVar2 = (*pcVar1)(*(unaff_ESI + 4), 0x44cc8c);\n        *(unaff_ESI + 0x14) = uVar2;\n        uVar2 = (*pcVar1)(*(unaff_ESI + 4), 0x44cc98);\n        *(unaff_ESI + 0x18) = uVar2;\n        uVar2 = (*pcVar1)(*(unaff_ESI + 4), 0x44ccac);\n        *(unaff_ESI + 0x1c) = uVar2;\n        uVar2 = (*pcVar1)(*(unaff_ESI + 4), 0x44ccac);\n        *(unaff_ESI + 0x20) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 401
    },
    "0044b37a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044b37a(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint uStack52;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_10h = 0;\n    fcn.0044b2d4();\n    if (arg_8h[2] == NULL) {\n        iVar1 = -1;\n    }\n    else {\n        iVar1 = (*arg_8h[2])(0x443d6c, 0, &var_10h);\n    }\n    iVar2 = var_10h;\n    if (iVar1 == 0) {\n        var_ch = 0;\n        var_8h = 0;\n        fcn.0044b2d4();\n        if (arg_8h[4] == NULL) {\n            iVar1 = -1;\n        }\n        else {\n            iVar1 = (*arg_8h[4])(iVar2, 0x200, &var_8h, &var_ch);\n        }\n        if (iVar1 == 0) {\n            var_2ch = 0x38;\n            var_28h = 5;\n            var_24h = 0x24;\n            if (var_8h != 0) {\n                fcn.0044b268(var_8h);\n            }\n            var_14h = 0;\n            iVar1 = var_ch;\n            if (var_8h != 0) {\n                do {\n                    uStack52 = 0;\n                    var_40h = 5;\n                    var_3ch = 0;\n                    var_38h = 0xc;\n                    var_34h = 0;\n                    var_4h = 0;\n                    var_18h = *(iVar1 + 0x18);\n                    var_1ch = *(iVar1 + 0x14);\n                    var_20h = var_10h;\n                    if ((var_2ch == 0x34) || (var_2ch == 0x48)) {\n                        fcn.0044b2d4();\n                        if (arg_8h[7] == NULL) goto code_r0x0044b4a9;\n                        iVar2 = (*arg_8h[7])(var_20h, iVar1, var_1ch, var_18h, &var_40h, 0, &var_4h);\n                    }\n                    else {\n                        fcn.0044b2d4();\n                        if (arg_8h[8] == NULL) {\ncode_r0x0044b4a9:\n                            iVar2 = -1;\n                        }\n                        else {\n                            iVar2 = (*arg_8h[8])(var_20h, iVar1, var_1ch, var_18h, &var_40h, 0, 0, &var_4h);\n                        }\n                    }\n                    if ((iVar2 == 0) && (var_4h != 0)) {\n                        (***arg_8h)(var_4h);\n                        var_20h = var_4h;\n                        fcn.0044b2d4();\n                        if (arg_8h[5] != NULL) {\n                            (*arg_8h[5])(var_20h);\n                        }\n                    }\n                    iVar1 = iVar1 + var_2ch;\n                    var_14h = var_14h + 1;\n                } while (var_14h < var_8h);\n            }\n            iVar1 = var_ch;\n            fcn.0044b2d4();\n            if (arg_8h[5] != NULL) {\n                (*arg_8h[5])(iVar1);\n            }\n        }\n        iVar1 = var_10h;\n        fcn.0044b2d4();\n        if (arg_8h[3] != NULL) {\n            (*arg_8h[3])(iVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 975
    },
    "0045fef7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045fef7(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t unaff_ESI;\n    uint var_3ch;\n    \n    fcn.00465003(0x4123f4, 10, 1);\n    uVar2 = (*_fcn.0041204c)(&var_3ch);\n    pcVar1 = *0x4121cc;\n    *(unaff_ESI + 0x20c) = uVar2;\n    (*pcVar1)(*(unaff_ESI + 4), 0x3ec, 0x30, uVar2, 0);\n    if (*0x417388 != '\\0') {\n        (*pcVar1)(*(unaff_ESI + 4), 0x3ee, 0x30, *(unaff_ESI + 0x20c), 0);\n    }\n    return;\n}\n",
        "token_count": 205
    },
    "0045ff57": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045ff57(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = _fcn.004121a4;\n    if (arg_8h == 0x110) {\n        if (*0x417348 == '\\0') {\n            uVar5 = (*_fcn.004121a4)(*(in_ECX + 4), 0x3ed, 0);\n            pcVar1 = *0x4121a0;\n            (**0x4121a0)(uVar5);\n            uVar5 = (*pcVar2)(*(in_ECX + 4), 0x3ee, 0);\n            (*pcVar1)(uVar5);\n        }\n        else {\n            (*_fcn.004121c0)(*(in_ECX + 4), 0x3ee, 0x417348);\n        }\n        (*_fcn.004121d0)(*(in_ECX + 4), 0x412458);\n        pcVar2 = _fcn.004121c0;\n        (*_fcn.004121c0)(*(in_ECX + 4), 0x3ea, in_ECX + 0xc);\n        (*pcVar2)(*(in_ECX + 4), 0x3ec, in_ECX + 0x10b);\n        fcn.0045fef7();\n        fcn.00465303(*(in_ECX + 4));\n        return 0;\n    }\n    if (arg_8h == 0x111) {\n        if (arg_ch != 1) {\n            return 0;\n        }\n        if (arg_ch >> 0x10 != 0) {\n            return 0;\n        }\n        (**0x4121e8)(*(in_ECX + 4), 1);\n        (**0x412044)(*(in_ECX + 0x20c));\n    }\n    else {\n        if (arg_8h == 0x138) {\n            uVar6 = (*_fcn.004121a4)(*(in_ECX + 4), 0x3ec);\n            if (arg_10h != uVar6) {\n                if (*0x417388 == '\\0') {\n                    return 0;\n                }\n                uVar6 = (*pcVar2)(*(in_ECX + 4), 0x3ee);\n                if (arg_10h != uVar6) {\n                    return 0;\n                }\n            }\n            (**0x412050)(arg_ch, 1);\n            (**0x412048)(arg_ch, 0xc00000);\n            uVar5 = (**0x41219c)(0xf);\n            return uVar5;\n        }\n        if (arg_8h != 0x200) {\n            if (arg_8h != 0x202) {\n                return 0;\n            }\n            iVar3 = (*_fcn.004121a4)(*(in_ECX + 4), 0x3ec);\n            pcVar1 = *0x412194;\n            iVar4 = (**0x412194)(*(in_ECX + 4), arg_10h & 0xffff, arg_10h >> 0x10);\n            if (iVar4 == iVar3) {\n                iVar3 = in_ECX + 0x10b;\n            }\n            else {\n                if (*0x417388 == '\\0') {\n                    return 0;\n                }\n                iVar3 = (*pcVar2)(*(in_ECX + 4), 0x3ee);\n                iVar4 = (*pcVar1)(*(in_ECX + 4), arg_10h & 0xffff, arg_10h >> 0x10);\n                if (iVar4 != iVar3) {\n                    return 0;\n                }\n                iVar3 = 0x417388;\n            }\n            fcn.00465395(*(in_ECX + 4), iVar3);\n            return 1;\n        }\n        iVar3 = (*_fcn.004121a4)(*(in_ECX + 4), 0x3ec);\n        pcVar1 = *0x412194;\n        iVar4 = (**0x412194)(*(in_ECX + 4), arg_10h & 0xffff, arg_10h >> 0x10);\n        if (iVar4 != iVar3) {\n            if (*0x417388 == '\\0') {\n                return 0;\n            }\n            iVar3 = (*pcVar2)(*(in_ECX + 4), 0x3ee);\n            iVar4 = (*pcVar1)(*(in_ECX + 4), arg_10h & 0xffff, arg_10h >> 0x10);\n            if (iVar4 != iVar3) {\n                return 0;\n            }\n        }\n        uVar5 = (*_fcn.00412198)(*0x416b94, 0x67);\n        (*_fcn.00412190)(uVar5);\n    }\n    return 1;\n}\n",
        "token_count": 1163
    },
    "00460461": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00460461(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *in_ECX;\n    \n    if (arg_8h == 0) {\n        if (arg_ch == 1) {\n            (**(*in_ECX + 4))(0);\n        }\n        else if (arg_ch != 2) goto code_r0x0046049d;\n        (**0x4121e8)(in_ECX[1], arg_ch);\n    }\n    else if (arg_8h != 0x300) {\n        return 0;\n    }\ncode_r0x0046049d:\n    (**(*in_ECX + 0x18))();\n    return 0;\n}\n",
        "token_count": 157
    },
    "00460708": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00460708(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t unaff_EBX;\n    int32_t iVar6;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar3 = *0x4121d8;\n    if (*(unaff_EBX + 0x108) != 0) {\n        iVar1 = *(unaff_EBX + 0x144);\n        iVar2 = *(unaff_EBX + 0x148);\n        iVar4 = *(unaff_EBX + 0x14c) - iVar1;\n        if ((((0x14 < iVar4) && (iVar6 = *(unaff_EBX + 0x150) - iVar2,  0x14 < iVar6)) && (5 < *(unaff_EBX + 0x14c))) &&\n           (((-0xb < iVar2 && (iVar5 = (**0x4121d8)(0),  iVar1 + 0x14 < iVar5)) &&\n            ((iVar5 = (*pcVar3)(1),  iVar2 + 0x14 < iVar5 && (*(unaff_EBX + 0x130) != 0)))))) {\n            (*_fcn.00412200)(*(unaff_EBX + 0x108), 0, iVar1, iVar2, iVar4, iVar6, 0x204);\n        }\n    }\n    return;\n}\n",
        "token_count": 358
    },
    "004607dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004607dc(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    uint16_t uVar2;\n    \n    pcVar1 = _fcn.00412210;\n    uVar2 = (*_fcn.00412210)(arg_8h, 0x412, arg_ch, 0);\n    if (arg_10h == 0) {\n        uVar2 = uVar2 & 0xfffb;\n    }\n    else {\n        uVar2 = uVar2 | 4;\n    }\n    (*pcVar1)(arg_8h, 0x411, arg_ch, uVar2);\n    return;\n}\n",
        "token_count": 158
    },
    "0046081e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0046081e(int32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    in_ECX[0x43] = 0;\n    if (arg_8h == 1) {\n        fcn.00466add(in_ECX[0x42], 0);\n        (**(*in_ECX + 0x14))();\n        in_ECX[0x49] = 1;\n        goto code_r0x0046089a;\n    }\n    if (arg_8h != 2) {\n        if (arg_8h == 5) {\n            (**(*in_ECX + 0x10))();\n            goto code_r0x0046089a;\n        }\n        if (arg_8h != 0x11) {\n            if (arg_8h == 0x4e) {\n                (**(*in_ECX + 8))(arg_ch, arg_10h);\n            }\n            else if (arg_8h == 0x111) {\n                (**(*in_ECX + 4))(arg_ch >> 0x10, arg_ch, arg_10h);\n            }\n            goto code_r0x0046089a;\n        }\n    }\n    (**(*in_ECX + 0xc))();\ncode_r0x0046089a:\n    if (in_ECX[0x43] == 0) {\n        iVar1 = fcn.004606ed(arg_8h, arg_ch, arg_10h);\n    }\n    else {\n        iVar1 = in_ECX[0x44];\n    }\n    return iVar1;\n}\n",
        "token_count": 375
    },
    "00460cfd": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00460cfd(uchar *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    uchar *puVar4;\n    uchar var_928h;\n    uint var_927h;\n    uchar var_528h;\n    uint var_527h;\n    uchar var_420h;\n    uint var_41fh;\n    uint var_318h;\n    uchar var_218h;\n    uint var_217h;\n    char var_110h;\n    uint var_10fh;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_218h = 0;\n    fcn.004703f4(&var_217h, 0, 0x104);\n    fcn.0046dccb();\n    iVar1 = fcn.004703b6(0x412488);\n    iVar2 = fcn.004703b6(&var_218h);\n    if (iVar1 + 1 + iVar2 < 0x104) {\n        fcn.0046511f(&var_218h, 0x412488);\n    }\n    else {\n        *arg_8h = 0;\n    }\n    iVar1 = fcn.00464fbd(arg_8h);\n    if (iVar1 == 0) {\n        *arg_8h = 0;\n    }\n    puVar4 = arg_8h + 0x105;\n    iVar1 = fcn.004703b6(0x41249c);\n    iVar2 = fcn.004703b6(&var_218h);\n    if (iVar1 + 1 + iVar2 < 0x104) {\n        fcn.0046511f(&var_218h, 0x41249c);\n    }\n    else {\n        *puVar4 = 0;\n    }\n    iVar1 = fcn.00464fbd(puVar4);\n    if (iVar1 == 0) {\n        *puVar4 = 0;\n    }\n    iVar1 = fcn.00460b09(0x80000001, 0x4124bc, 0x4124b4);\n    if ((iVar1 == 0) && (iVar1 = fcn.00460b09(0x80000002, 0x4124e4, 0x412466),  iVar1 == 0)) {\n        arg_8h[0x20a] = 0;\n    }\n    var_4h = 0;\n    iVar1 = fcn.0046d9b1(0x80000002, 0x412524, &var_4h);\n    if (iVar1 == 0) {\n        var_318h._0_1_ = 0;\n        fcn.004703f4(&var_318h + 1, 0, 0xff);\n        var_8h = 0;\n        iVar1 = fcn.0046da77(var_4h, 0, &var_318h);\n        while (iVar1 == 0) {\n            iVar1 = fcn.00470430(&var_318h);\n            if (2 < iVar1) {\n                var_928h = 0;\n                fcn.004703f4(&var_927h, 0, 0x3ff);\n                var_110h = '\\0';\n                fcn.004703f4(&var_10fh, 0, 0x104);\n                fcn.004703aa(&var_928h, 0x41254c, &var_318h);\n                fcn.0046da33(var_4h, &var_928h, 0x412554, &var_110h, 0x104);\n                if ((var_110h != '\\0') && (iVar1 = fcn.00464fbd(&var_110h),  iVar1 != 0)) {\n                    var_420h = 0;\n                    fcn.004703f4(&var_41fh, 0, 0x104);\n                    var_528h = 0;\n                    fcn.004703f4(&var_527h, 0, 0x104);\n                    iVar1 = fcn.004703b6(0x412568);\n                    iVar2 = fcn.004703b6(&var_110h);\n                    if (iVar1 + 1 + iVar2 < 0x104) {\n                        fcn.0046511f(&var_110h, 0x412568);\n                    }\n                    else {\n                        var_420h = 0;\n                    }\n                    iVar1 = fcn.004703b6(0x412574);\n                    iVar2 = fcn.004703b6(&var_110h);\n                    if (iVar1 + 1 + iVar2 < 0x104) {\n                        fcn.0046511f(&var_110h, 0x412574);\n                    }\n                    else {\n                        var_528h = 0;\n                    }\n                    iVar1 = fcn.00464fbd(&var_420h);\n                    if ((iVar1 != 0) && (iVar1 = fcn.00464fbd(&var_528h),  iVar1 != 0)) {\n                        fcn.004703fa(arg_8h + 0x30f, &var_110h);\n                        break;\n                    }\n                }\n            }\n            var_8h = var_8h + 1;\n            iVar1 = fcn.0046da77(var_4h, var_8h, &var_318h);\n        }\n        (**0x412008)(var_4h);\n    }\n    pcVar3 = arg_8h + 0x30f;\n    if (*pcVar3 == '\\0') {\n        (**0x4120d8)(0x412580, pcVar3, 0x104);\n        iVar1 = fcn.00464fbd(pcVar3);\n        if (iVar1 == 0) {\n            *pcVar3 = '\\0';\n        }\n    }\n    return;\n}\n",
        "token_count": 1353
    },
    "00461c0c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00461c0c(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EDI;\n    uint var_74ch;\n    uint var_740h;\n    uint var_6c0h;\n    uint var_6bch;\n    uint var_63ch;\n    uint var_53ch;\n    uint var_538h;\n    uint var_4b8h;\n    uint var_438h;\n    uint var_3b8h;\n    uint var_3b4h;\n    uint var_3a8h;\n    uint var_39ch;\n    uint var_31ch;\n    uint var_318h;\n    uint var_298h;\n    uint var_198h;\n    uint var_194h;\n    uint var_114h;\n    uint var_94h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.0046d9b1(arg_8h, arg_ch, &arg_ch);\n    if (iVar1 == 0) {\n        arg_8h = 0x7d;\n        var_4h = 0x7d;\n        fcn.0046104a();\n        fcn.0046104a();\n        var_6c0h = 2;\n        var_31ch = 2;\n        var_53ch = 4;\n        var_198h = 1;\n        fcn.0046d9f2(arg_ch, 0x4128f4, &var_39ch);\n        fcn.0046d9f2(arg_ch, 0x412900, &var_318h);\n        fcn.0046d9f2(arg_ch, 0x412910, &var_194h);\n        fcn.0046d9f2(arg_ch, 0x41291c, &var_298h);\n        fcn.0046d9cb(arg_ch, 0x412928, &var_14h);\n        fcn.0046d9cb(arg_ch, 0x412930, &var_10h);\n        iVar1 = fcn.0046da15(arg_ch, 0x412940, &var_114h, &arg_8h);\n        if (iVar1 != 0) {\n            arg_8h = 0;\n        }\n        fcn.004703fa(&var_740h, &var_39ch);\n        fcn.004703fa(&var_6bch, &var_318h);\n        fcn.0046d9f2(arg_ch, 0x41294c, &var_538h);\n        fcn.0046d9f2(arg_ch, 0x412958, &var_63ch);\n        fcn.0046d9cb(arg_ch, 0x412964, &var_3b8h);\n        fcn.0046d9cb(arg_ch, 0x412970, &var_3b4h);\n        iVar1 = fcn.0046da15(arg_ch, 0x412980, &var_4b8h, &var_4h);\n        if (iVar1 != 0) {\n            var_4h = 0;\n        }\n        fcn.004703fa(&var_94h, unaff_EDI + 0xa9c);\n        fcn.004703fa(&var_438h, unaff_EDI + 0xa9c);\n        if (arg_8h != 0) {\n            fcn.00460b8a();\n        }\n        if (var_194h != '\\0') {\n            fcn.00461279();\n        }\n        if (var_4h != 0) {\n            fcn.00460b8a();\n        }\n        if (var_538h != '\\0') {\n            fcn.00461279();\n        }\n        (**0x412008)(arg_ch);\n    }\n    return;\n}\n",
        "token_count": 898
    },
    "00461f91": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00461f91(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    if (arg_18h == 0) {\n        arg_18h = 0x4129c8;\n    }\n    (*_fcn.004120cc)(arg_18h, arg_ch, 0x412466, arg_10h, arg_14h, arg_8h);\n    return;\n}\n",
        "token_count": 112
    },
    "00461fbf": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00461fbf(uint arg_8h, uint arg_ch)\n\n{\n    char *arg_10h;\n    int32_t in_EAX;\n    uchar *puVar1;\n    uint var_208h;\n    uint var_108h;\n    uint var_b8h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    *(in_EAX + 0x8c) = 3;\n    *(in_EAX + 0x210) = 1;\n    fcn.00461f91(arg_8h, 0x4129d4, &var_208h, 0xff, arg_ch);\n    if (var_208h == '1') {\n        *(in_EAX + 0x210) = 2;\n    }\n    var_8h = in_EAX + 0x110;\n    fcn.00461f91(arg_8h, 0x41291c, var_8h, 0x7f, arg_ch);\n    arg_10h = in_EAX + 0x214;\n    fcn.00461f91(arg_8h, 0x4129e0, arg_10h, 0x7f, arg_ch);\n    fcn.00461f91(arg_8h, 0x4129ec, in_EAX + 0xc, 0x7f, arg_ch);\n    fcn.00461f91(arg_8h, 0x4129f8, in_EAX + 0x90, 0x7f, arg_ch);\n    fcn.00461f91(arg_8h, 0x412a08, &var_108h, 0xff, arg_ch);\n    if (var_108h != '\\0') {\n        var_b8h._0_1_ = 0;\n        fcn.00460bcc();\n        if (*arg_10h == '\\0') {\n            fcn.00461f91(arg_8h, 0x412910, arg_10h, 0x7f, arg_ch);\n            if (*arg_10h != '\\0') {\n                puVar1 = fcn.00470412(arg_10h, 0x40);\n                if (puVar1 != NULL) {\n                    fcn.00464f42(puVar1 + 1);\n                    *puVar1 = 0;\n                }\n            }\n        }\n        var_4h = 1;\n    }\n    if (*arg_10h != '\\0') {\n        var_4h = 1;\n    }\n    return var_4h;\n}\n",
        "token_count": 599
    },
    "00462249": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00462249(uint arg_8h)\n\n{\n    uint var_748h;\n    uint var_6bch;\n    uint var_638h;\n    uint var_538h;\n    uint var_534h;\n    uint var_4b4h;\n    uint var_3a4h;\n    uint var_318h;\n    uint var_294h;\n    uint var_194h;\n    uint var_190h;\n    uint var_110h;\n    \n    fcn.0046104a();\n    fcn.0046104a();\n    fcn.00462209();\n    fcn.00462209();\n    fcn.00462209();\n    fcn.00462209();\n    fcn.00462209();\n    fcn.00462209();\n    if (var_110h != '\\0') {\n        fcn.0046222a();\n        fcn.00461279(arg_8h);\n    }\n    if (var_4b4h != '\\0') {\n        fcn.0046222a();\n        fcn.00461279(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 259
    },
    "0046253e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0046253e(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    int32_t unaff_EDI;\n    uint var_424h;\n    uint var_418h;\n    uint var_398h;\n    uint var_394h;\n    uint var_214h;\n    uint var_210h;\n    uint var_190h;\n    uint var_80h;\n    uint var_1h;\n    \n    if (*(unaff_EDI + 0x888) != 0) {\n        iVar1 = fcn.0046d778(unaff_EDI + 0x87c, arg_8h);\n        if (iVar1 != 0) {\n            var_1h._0_1_ = 0;\n            puVar2 = fcn.00470412(&var_80h, 0x3a);\n            if (puVar2 != NULL) {\n                *puVar2 = 0;\n                fcn.0046104a();\n                fcn.004703fa(&var_190h, puVar2 + 1);\n                fcn.004703fa(&var_210h, &var_80h);\n                var_398h = 7;\n                var_214h = 3;\n                iVar1 = fcn.004703b6(&var_210h);\n                if (iVar1 + 10U < 0x7f) {\n                    fcn.004703aa(&var_394h, 0x412ab0, &var_210h);\n                }\n                fcn.004703fa(&var_418h, &var_210h);\n                fcn.00461279();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 407
    },
    "00462aaf": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00462aaf(int32_t param_1)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t var_4h;\n    \n    *(param_1 + 0x888) = 0;\n    var_4h = param_1;\n    fcn.0046d706();\n    iVar1 = (*_fcn.004120f0)(0x413ac4);\n    *(param_1 + 0x884) = iVar1;\n    if (iVar1 != 0) {\n        pcVar2 = (*_fcn.004120ec)(iVar1, 0x413ad0);\n        *(param_1 + 0x88c) = pcVar2;\n        if (pcVar2 != NULL) {\n            iVar1 = (*pcVar2)(param_1 + 0x880, 0, 0, 0);\n            if (iVar1 == 0) {\n                *(param_1 + 0x888) = 1;\n                goto code_r0x00462b14;\n            }\n        }\n    }\n    fcn.0046d706();\ncode_r0x00462b14:\n    fcn.00463612();\n    fcn.0046253e(0x412b20);\n    fcn.0046253e(0x412b88);\n    fcn.0046253e(0x412bf8);\n    fcn.0046253e(0x412c60);\n    fcn.004663bf(param_1 + 0x858);\n    fcn.0046600e(param_1 + 0x86c);\n    fcn.004664cd(param_1 + 0x878);\n    iVar1 = fcn.0046d9b1(0x80000001, 0x412874, &var_4h);\n    if (iVar1 == 0) {\n        fcn.00461a2a(param_1, 1);\n    }\n    iVar1 = fcn.0046d9b1(0x80000001, 0x4128b4, &var_4h);\n    if (iVar1 == 0) {\n        fcn.00461a2a(param_1, 5);\n    }\n    fcn.00461ab6(param_1);\n    *(param_1 + 0xb1c) = 6;\n    iVar1 = fcn.004650ea();\n    if (*(iVar1 + 0x10) == 1) {\n        uVar3 = 0x412cd0;\n    }\n    else {\n        uVar3 = 0x412d08;\n    }\n    iVar1 = fcn.0046d9b1(0x80000001, uVar3, &var_4h);\n    if (iVar1 == 0) {\n        fcn.0046197b(param_1);\n    }\n    else {\n        *(param_1 + 0xa9c) = 0;\n    }\n    *(param_1 + 0xb1c) = 0xf;\n    iVar1 = fcn.0046d9b1(0x80000001, 0x412d5c, &var_4h);\n    if (iVar1 == 0) {\n        fcn.0046197b(param_1);\n    }\n    else {\n        *(param_1 + 0xa9c) = 0;\n    }\n    fcn.0046d71d();\n    fcn.00463663();\n    fcn.00461e34(0x80000001);\n    fcn.00461e34(0x80000002);\n    fcn.00462110(param_1);\n    fcn.0046233d(param_1);\n    fcn.004627de(param_1);\n    fcn.00462623(param_1);\n    if (*(param_1 + 0xb20) != '\\0') {\n        *(param_1 + 0xf34) = 10;\n        fcn.0046c1ec(param_1 + 0xb20, 0);\n    }\n    if (*(param_1 + 0xc25) != '\\0') {\n        fcn.004703fa(param_1 + 0x52a, param_1 + 0xe2f);\n        *(param_1 + 0xf34) = 0xb;\n        fcn.0046c1ec(param_1 + 0xc25, 0);\n    }\n    fcn.0046c86b(param_1 + 0x640);\n    fcn.0046c6d7(param_1 + 0x640);\n    fcn.0046fb8d(param_1 + 0x870);\n    return;\n}\n",
        "token_count": 1051
    },
    "00462e2d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00462e2d(uint arg_8h, int32_t arg_ch)\n\n{\n    uint var_14h;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uchar uStack8;\n    \n    if (arg_ch == 4) {\n        fcn.00464d6f(arg_8h, 0x413e68);\n    }\n    if (*0x417304 != 0) {\n        fcn.00464d6f(arg_8h, 0x412e3c);\n    }\n    var_14h = *0x413dbc;\n    uStack20 = *0x413dc0;\n    uStack16 = *0x413dc4;\n    uStack12 = _fcn.00413dc8;\n    uStack8 = *0x413dcc;\n    fcn.00464d6f(arg_8h, &var_14h);\n    return;\n}\n",
        "token_count": 210
    },
    "00462fe4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00462fe4(void)\n\n{\n    int32_t unaff_EDI;\n    \n    fcn.004634a0();\n    if (*(unaff_EDI + 0x30) != 0) {\n        (*_fcn.00412064)(unaff_EDI + 0x50);\n        *(unaff_EDI + 0x30) = 0;\n    }\n    fcn.004659cd();\n    fcn.004659cd();\n    return;\n}\n",
        "token_count": 106
    },
    "004634b9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.004634b9(void)\n\n{\n    code *pcVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    \n    fcn.00463534();\n    iVar2 = (*_fcn.004120f0)(0x412f3c);\n    *in_EAX = iVar2;\n    pcVar1 = _fcn.004120ec;\n    if (iVar2 != 0) {\n        iVar2 = (*_fcn.004120ec)(iVar2, 0x412f4c);\n        in_EAX[2] = iVar2;\n        iVar2 = (*pcVar1)(*in_EAX, 0x412f58);\n        in_EAX[3] = iVar2;\n        iVar2 = (*pcVar1)(*in_EAX, 0x412f64);\n        in_EAX[4] = iVar2;\n        iVar2 = (*pcVar1)(*in_EAX, 0x412f70);\n        in_EAX[5] = iVar2;\n        iVar2 = (*pcVar1)(*in_EAX, 0x412f80);\n        in_EAX[6] = iVar2;\n        if ((in_EAX[2] == 0) || (in_EAX[3] == 0)) {\n            fcn.00463534();\n        }\n        else {\n            in_EAX[1] = 1;\n        }\n    }\n    return in_EAX[1];\n}\n",
        "token_count": 318
    },
    "00463612": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00463612(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    \n    fcn.00463663();\n    iVar1 = (*_fcn.004120f0)();\n    *(unaff_ESI + 0x200) = iVar1;\n    if (iVar1 != 0) {\n        iVar1 = (*_fcn.004120ec)(iVar1, unaff_ESI + 0xff);\n        *(unaff_ESI + 0x208) = iVar1;\n        if (iVar1 != 0) {\n            *(unaff_ESI + 0x204) = 1;\n        }\n    }\n    if (*(unaff_ESI + 0x204) == 0) {\n        fcn.00463663();\n    }\n    return *(unaff_ESI + 0x204);\n}\n",
        "token_count": 189
    },
    "00463888": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00463888(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uchar auStackY8300 [4104];\n    uint var_1060h;\n    uint uStackY92;\n    uint var_54h;\n    uint var_50h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uchar *var_2ch;\n    uint var_28h;\n    uint uStack40;\n    uint uStack36;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint uStack20;\n    uint *puStack16;\n    uint var_4h;\n    \n    fcn.00470712();\n    puStack16 = 0xffffffff;\n    uStack20 = arg_8h;\n    var_14h = 0x1001;\n    var_18h = 0x4638c7;\n    iVar2 = fcn.00463832();\n    puStack16 = 0xffffffff;\n    uStack20 = arg_ch;\n    var_18h = 0x4638de;\n    iVar3 = fcn.00463832();\n    pcVar1 = _fcn.00412210;\n    if ((iVar2 != 0) && (iVar3 != 0)) {\n        var_28h = arg_8h;\n        puStack16 = &fcn.00463888::var_54h;\n        var_50h = arg_ch;\n        uStack20 = 0;\n        var_14h = 0x1006;\n        var_54h = 0x1f;\n        var_2ch = 0x1f;\n        var_1ch = 0x46391f;\n        (*_fcn.00412210)();\n        var_1ch = &fcn.00463888::var_2ch;\n        uStack36 = 0;\n        uStack40 = 0x1006;\n        var_2ch = 0x463929;\n        (*pcVar1)();\n        iVar2 = fcn.0046386d();\n        iVar3 = 1;\n        if (1 < iVar2) {\n            do {\n                var_2ch = 0x1000;\n                var_1060h._0_1_ = 0;\n                auStackY8300[0] = 0;\n                fcn.00463bd8(unaff_EBX, arg_8h, &fcn.00463888::var_1060h, 0x1000);\n                fcn.00463bd8(unaff_EBX, arg_ch, &stack0xffffdf94, 0x1000);\n                var_50h = arg_ch;\n                uStackY92 = 0x463985;\n                var_54h = unaff_EBX;\n                fcn.00463b8e(unaff_EBX, arg_ch, &fcn.00463888::var_1060h);\n                var_2ch = &stack0xffffdf94;\n                fcn.00463b8e(unaff_EBX, arg_8h, var_2ch);\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < iVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 907
    },
    "004648d6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004648d6(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uchar var_408h;\n    uint var_407h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        if (arg_ch == 0x3f3) {\n            fcn.00460cfd(in_ECX + 0x28d);\n            (**(*in_ECX + 4))(1);\n        }\n        if (arg_ch == 0x3f0) {\n            (**(*in_ECX + 4))(0);\n            uVar1 = fcn.00466771();\n            iVar2 = fcn.0046de20(in_ECX[1], uVar1);\n            if (iVar2 == 0) goto code_r0x00464a41;\n            (**(*in_ECX + 4))(1);\n        }\n        if (arg_ch == 0x3f5) {\n            (**(*in_ECX + 4))(0);\n            uVar1 = fcn.00466771();\n            iVar2 = fcn.0046de20(in_ECX[1], uVar1);\n            if (iVar2 == 0) goto code_r0x00464a41;\n            (**(*in_ECX + 4))(1);\n        }\n        if (arg_ch == 0x3f1) {\n            (**(*in_ECX + 4))(0);\n            uVar1 = fcn.00466771();\n            iVar2 = fcn.0046de20(in_ECX[1], uVar1);\n            if (iVar2 == 0) goto code_r0x00464a41;\n            (**(*in_ECX + 4))(1);\n        }\n        if (arg_ch == 0x3f2) {\n            var_408h = 0;\n            fcn.004703f4(&var_407h, 0, 0x3ff);\n            var_8h = fcn.00466771();\n            var_4h = 0x413000;\n            fcn.004656bf(&var_8h, 1);\n            (**(*in_ECX + 4))(0);\n            uVar1 = fcn.00466771();\n            iVar2 = fcn.0046548a(&var_408h, uVar1);\n            if (iVar2 != 0) {\n                (**(*in_ECX + 4))(1);\n            }\n        }\n    }\ncode_r0x00464a41:\n    fcn.00460461(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 601
    },
    "00465094": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00465094(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    if (arg_8h != 0) {\n        (*_fcn.004121c0)(arg_ch, arg_10h, arg_14h);\n        return;\n    }\n    (*_fcn.004121c8)(arg_ch, arg_10h, arg_14h, 0x104);\n    return;\n}\n",
        "token_count": 107
    },
    "004650ea": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.004650ea(void)\n\n{\n    if (*0x41711c == 0) {\n        *0x417118 = 0x94;\n        (*_fcn.004120a0)(0x417118);\n    }\n    return 0x417118;\n}\n",
        "token_count": 62
    },
    "00465197": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00465197(uint param_1)\n\n{\n    if (*0x417550 == '\\0') {\n        *0x417658 = (**0x4120c8)(0x417550, 0x104);\n    }\n    fcn.004703fa(param_1, 0x417550);\n    return *0x417658;\n}\n",
        "token_count": 79
    },
    "004653f7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004653f7(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uchar *unaff_EDI;\n    uchar var_100h;\n    uint var_ffh;\n    \n    var_100h = 0;\n    fcn.004703f4(&var_ffh, 0, 0xfe);\n    *unaff_EDI = 0;\n    iVar1 = 0;\n    do {\n        fcn.004703aa(&var_100h, 0x4123ec, *(iVar1 + arg_8h));\n        if (0 < iVar1) {\n            fcn.004703a4();\n        }\n        if ((0 < arg_ch) && (iVar1 % arg_ch == 0)) {\n            fcn.004703a4();\n        }\n        fcn.004703a4();\n        iVar1 = iVar1 + 1;\n    } while (iVar1 < 0x80);\n    return;\n}\n",
        "token_count": 219
    },
    "00465772": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00465772(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t unaff_EBX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_1h;\n    \n    iVar1 = *arg_ch;\n    cVar2 = *(iVar1 + unaff_EBX);\n    iVar4 = iVar1;\n    if (cVar2 == '\\0') {\n        uVar3 = 0;\n    }\n    else {\n        while (((cVar2 != '\\r' && (cVar2 != '\\n')) && (cVar2 != '\\0'))) {\n            iVar4 = iVar4 + 1;\n            cVar2 = *(iVar4 + unaff_EBX);\n        }\n        iVar5 = iVar4 - iVar1;\n        if (0x3fe < iVar5) {\n            iVar5 = 0x3fe;\n        }\n        if (0 < iVar5) {\n            fcn.0047043c(arg_8h, iVar1 + unaff_EBX, iVar5);\n        }\n        *(iVar5 + arg_8h) = 0;\n        if ((cVar2 == '\\r') && (*(iVar4 + 1 + unaff_EBX) == '\\n')) {\n            iVar4 = iVar4 + 1;\n        }\n        *arg_ch = iVar4 + 1;\n        if (cVar2 == '\\0') {\n            *arg_ch = iVar4;\n        }\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 372
    },
    "004659f2": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004659f2(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    int32_t *unaff_EDI;\n    \n    if (param_1 != 0) {\n        if (in_EAX == -1) {\n            in_EAX = fcn.004703b6(param_1);\n        }\n        fcn.00465997();\n        if (0 < in_EAX) {\n            fcn.0047043c(*unaff_EDI, param_1, in_EAX);\n        }\n        *(in_EAX + *unaff_EDI) = 0;\n        unaff_EDI[2] = in_EAX;\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "00465a36": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00465a36(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX[3] != 0) {\n        return in_EAX[2];\n    }\n    if (*in_EAX != 0) {\n        iVar1 = fcn.004703b6(*in_EAX);\n        return iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 95
    },
    "00465d35": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.00465d35(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    if (*in_EAX == -1) {\n        iVar1 = (**0x41210c)(in_EAX + 1, in_EAX + 0x52);\n        uVar2 = iVar1 != -1;\n        *in_EAX = iVar1;\n    }\n    else {\n        uVar2 = (**0x412108)(*in_EAX, in_EAX + 0x52);\n        if (uVar2 != 0) goto code_r0x00465d83;\n        fcn.00465dcd();\n    }\n    if (uVar2 == 0) {\n        return 0;\n    }\ncode_r0x00465d83:\n    iVar1 = fcn.004703b6(in_EAX + 0xf3);\n    iVar3 = fcn.004703b6(in_EAX + 0x5d);\n    if (iVar3 + 1 + iVar1 < 0x143) {\n        fcn.0046511f(in_EAX + 0xf3, in_EAX + 0x5d);\n    }\n    else {\n        *(in_EAX + 0xa2) = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 306
    },
    "00465de1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00465de1(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    int32_t **unaff_ESI;\n    \n    piVar1 = unaff_ESI[1];\n    iVar3 = 0;\n    if (0 < piVar1) {\n        piVar5 = *unaff_ESI;\n        do {\n            if (*piVar5 == 0) {\n                (*unaff_ESI)[iVar3 * 2] = param_1;\n                (*unaff_ESI)[iVar3 * 2 + 1] = param_2;\n                return 1;\n            }\n            iVar3 = iVar3 + 1;\n            piVar5 = piVar5 + 2;\n        } while (iVar3 < piVar1);\n    }\n    piVar5 = *unaff_ESI;\n    unaff_ESI[1] = unaff_ESI[2] + piVar1;\n    iVar2 = ZEXT48(unaff_ESI[2] + piVar1) * 8;\n    piVar4 = fcn.00470442(-(iVar2 >> 0x20 != 0) | iVar2);\n    *unaff_ESI = piVar4;\n    fcn.004703f4(piVar4, 0, unaff_ESI[1] << 3);\n    fcn.0047043c(*unaff_ESI, piVar5, piVar1 * 8);\n    if (piVar5 != NULL) {\n        fcn.00470448(piVar5);\n    }\n    (*unaff_ESI)[piVar1 * 2] = param_1;\n    (*unaff_ESI)[piVar1 * 2 + 1] = param_2;\n    return 1;\n}\n",
        "token_count": 425
    },
    "004666ef": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004666ef(void)\n\n{\n    if (*0x417540 == 0) {\n        *0x417540 = 0x8000;\n        *0x417544 = 0x100;\n        *0x417548 = 0x1000;\n        *0x417528 = fcn.00470442(0x8000);\n        *0x417530 = fcn.00470442(-(*0x417544 * 4 >> 0x20 != 0) | *0x417544 * 4);\n        *0x417534 = fcn.00470442(-(*0x417544 * 4 >> 0x20 != 0) | *0x417544 * 4);\n        *0x41752c = fcn.00470442(*0x417548);\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "00466771": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00466771(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t unaff_EBX;\n    bool bVar4;\n    \n    if (*0x417540 == 0) {\n        fcn.004666ef();\n    }\n    iVar2 = 0;\n    if (0 < *0x417538) {\n        do {\n            if (unaff_EBX == *(*0x417530 + iVar2 * 4)) {\n                iVar2 = *(*0x417534 + iVar2 * 4) + *0x417528;\n                goto code_r0x0046679f;\n            }\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < *0x417538);\n    }\n    iVar2 = 0;\ncode_r0x0046679f:\n    if (iVar2 != 0) {\n        return iVar2;\n    }\n    uVar3 = *0x416b94;\n    if ((unaff_EBX & 0x10000) == 0) {\n        if (*0x4171b8 == '\\0') {\n            uVar3 = fcn.004668c7();\n        }\n        else {\n            fcn.004703fa(0x4172c0, 0x413164);\n            iVar2 = fcn.00466bfb(unaff_EBX, *0x41752c);\n            uVar3 = *0x416b94;\n            if (iVar2 != 0) {\n                iVar2 = fcn.004703b6(*0x41752c);\n                bVar4 = iVar2 == 0;\n                uVar3 = *0x416b94;\n                if (!bVar4) goto code_r0x00466844;\n            }\n        }\n    }\n    iVar2 = (**0x412248)(uVar3);\n    bVar4 = iVar2 == 0;\ncode_r0x00466844:\n    if (((!bVar4 && -1 < iVar2) && (*0x41753c + 2 + iVar2 < *0x417540)) && (*0x417538 < *0x417544)) {\n        iVar1 = *0x41753c + *0x417528;\n        fcn.0047043c(iVar1, *0x41752c, iVar2 + 1);\n        *(*0x417534 + *0x417538 * 4) = *0x41753c;\n        *(*0x417530 + *0x417538 * 4) = unaff_EBX;\n        *0x417538 = *0x417538 + 1;\n        *0x41753c = *0x41753c + 1 + iVar2;\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n    }\n    return 0x412466;\n}\n",
        "token_count": 634
    },
    "00466add": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00466add(uint arg_8h, uint32_t arg_ch)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = _fcn.00412278;\n    if (*0x417304 != 0) {\n        if ((arg_ch & 2) != 0) {\n            (*_fcn.00412278)(arg_8h, 0x407bf9, 2);\n        }\n        if ((arg_ch & 1) != 0) {\n            (*pcVar1)(arg_8h, 0x407bf9, 1);\n        }\n        fcn.004653d2(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "00466b7c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00466b7c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uchar var_1004h;\n    uint var_1003h;\n    uint uStackY40;\n    \n    fcn.00470712();\n    if (*0x4171b8 != '\\0') {\n        var_1004h = 0;\n        fcn.004703f4();\n        fcn.004703aa();\n        uStackY40 = 0x466bd2;\n        iVar1 = fcn.00466c57(0x413148, &stack0xffffeff8);\n        if (iVar1 != 0) {\n            (*_fcn.004121d0)();\n        }\n        (*_fcn.00412278)();\n    }\n    return;\n}\n",
        "token_count": 173
    },
    "00466c57": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00466c57(uint arg_8h, uint arg_ch)\n\n{\n    char var_1004h;\n    uint var_1003h;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uint *puStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    fcn.00470712();\n    uStack12 = 0x1000;\n    puStack20 = &fcn.00466c57::var_1003h;\n    uStack16 = 0;\n    var_1004h = '\\0';\n    uStack24 = 0x466c80;\n    fcn.004703f4();\n    uStack12 = 0x4171b8;\n    uStack16 = 0x1000;\n    puStack20 = &stack0xffffeff8;\n    uStack24 = 0x412466;\n    uStack28 = arg_8h;\n    puStack32 = 0x4172c0;\n    uStack36 = 0x466ca3;\n    (*_fcn.004120cc)();\n    if (var_1004h != '\\0') {\n        puStack32 = &stack0xffffeff8;\n        uStack36 = arg_ch;\n        uStack40 = 0x466cbc;\n        fcn.004703fa();\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 322
    },
    "00466cc7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00466cc7(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    char var_1004h;\n    uint var_1003h;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint *puStack24;\n    uint uStack20;\n    uint uStack16;\n    \n    fcn.00470712();\n    uStack16 = 0x1000;\n    puStack24 = &fcn.00466cc7::var_1003h;\n    uStack20 = 0;\n    var_1004h = '\\0';\n    uStack28 = 0x466cf1;\n    fcn.004703f4();\n    uStack16 = 0x4171b8;\n    uStack20 = 0x1000;\n    puStack24 = &stack0xffffeff8;\n    uStack28 = 0x412466;\n    uStack32 = arg_8h;\n    uStack36 = 0x4172c0;\n    uStack40 = 0x466d16;\n    (*_fcn.004120cc)();\n    if (var_1004h == '\\0') {\n        uStack40 = 0x4171b8;\n        uStack44 = arg_ch;\n        uStack48 = arg_8h;\n        uStack52 = 0x4172c0;\n        uStack56 = 0x466d2d;\n        uVar1 = (**0x412088)();\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 383
    },
    "004674e3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004674e3(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EBX;\n    int32_t *unaff_EDI;\n    uint var_4h;\n    \n    iVar1 = unaff_EDI[1];\n    if (iVar1 != 0) {\n        fcn.004672b3(*(*(unaff_EBX + 0x1a0) + 8));\n    }\n    iVar2 = (**(*unaff_EDI + 0xc))(0x413440, **(unaff_EBX + 0x1a0), (*(unaff_EBX + 0x1a0))[1] << 2);\n    (**(*unaff_EDI + 8))(0x413438, unaff_EBX + 0x1ac, 0);\n    if ((iVar1 == 0) && (iVar2 != 0)) {\n        fcn.00467223(*(*(unaff_EBX + 0x1a0) + 8));\n    }\n    return;\n}\n",
        "token_count": 234
    },
    "0046793d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046793d(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t in_EAX;\n    uint uVar2;\n    uint arg_8h_00;\n    int32_t unaff_ESI;\n    uint var_4h;\n    \n    if (in_EAX == 0xffff) {\n        in_EAX = *(unaff_ESI + 0x1ac);\n    }\n    if ((arg_8h == 0) && ((*(unaff_ESI + 0x1ac) & 0xfff) == in_EAX)) {\n        in_EAX = *(unaff_ESI + 0x1ac) ^ 0x1000;\n    }\n    *(unaff_ESI + 0x1ac) = in_EAX;\n    if (*(unaff_ESI + 0x188) != 0) {\n        iVar1 = *(unaff_ESI + 0x1b0);\n        uVar2 = fcn.00463859(*(unaff_ESI + 0x184));\n        arg_8h = 0;\n        if (0 < iVar1) {\n            do {\n                fcn.00463a72(uVar2, arg_8h, 4, 0x4000, 0);\n                arg_8h = arg_8h + 1;\n            } while (arg_8h < iVar1);\n        }\n        if ((in_EAX & 0x1000) == 0) {\n            uVar2 = *(unaff_ESI + 0x38);\n        }\n        else {\n            uVar2 = *(unaff_ESI + 0x3c);\n        }\n        arg_8h_00 = fcn.00463859(*(unaff_ESI + 0x184));\n        fcn.00463a72(arg_8h_00, in_EAX & 0xfff, 0x24, 0x5800, uVar2);\n    }\n    *(unaff_ESI + 0x30) = in_EAX;\n    (*_fcn.00412210)(*(unaff_ESI + 0x184), 0x1030);\n    return;\n}\n",
        "token_count": 483
    },
    "00467d5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00467d5c(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uchar var_100h;\n    uint var_ffh;\n    \n    if ((param_1[0x70] != 0) && (param_1[10] % param_1[0x71] == 0)) {\n        var_100h = 0;\n        fcn.004703f4(&var_ffh, 0, 0xfe);\n        iVar1 = (**(*param_1 + 0x38))();\n        if (iVar1 != 0) {\n            fcn.004703aa(&var_100h, iVar1, param_1[10]);\n            (*_fcn.00412210)(param_1[0x70], 0x401, 0, &var_100h);\n        }\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "004681db": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004681db(uint arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *unaff_EBX;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_5ch;\n    uint var_40h;\n    uint var_2ch;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    ushort uStack32;\n    uchar uStack30;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    puVar3 = 0x4131dc;\n    puVar4 = &var_5ch;\n    for (iVar2 = 6; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = *puVar3;\n    var_2ch = *0x4131f8;\n    uStack44 = *0x4131fc;\n    uStack40 = *0x413200;\n    uStack36 = *0x413204;\n    uStack32 = *0x413208;\n    uStack30 = *0x41320a;\n    fcn.00464d6f(arg_8h, 0x41320c);\n    iVar2 = 0;\n    if (0 < unaff_EBX[8]) {\n        do {\n            var_4h = *(unaff_EBX[9] + iVar2 * 4);\n            var_8h = &var_5ch;\n            if (*(var_4h * 0x10 + 4 + unaff_EBX[0xd]) == 0) {\n                var_8h = &var_2ch;\n            }\n            var_18h = 0xffffffff;\n            var_14h = 0xffffffff;\n            var_10h = 0xffffffff;\n            var_ch = 0;\n            (**(*unaff_EBX + 0x30))(4, iVar2, arg_ch, &var_18h);\n            fcn.0046dee3(var_18h, &var_40h);\n            (***arg_ch)(var_4h, unaff_EBX[0x13]);\n            fcn.0046df0f();\n            (**(*unaff_EBX + 0x48))(unaff_EBX[0x14], arg_ch, var_4h);\n            cVar1 = *unaff_EBX[0x14];\n            if ((cVar1 == '\\0') || (cVar1 == ' ')) {\n                fcn.004703a4(unaff_EBX[0x14], 0x413214);\n            }\n            fcn.0046df98(unaff_EBX[0x15], unaff_EBX[0x14]);\n            fcn.004703aa(unaff_EBX[0x13], var_8h, &var_40h, unaff_EBX[0x15]);\n            fcn.00464d6f(arg_8h, unaff_EBX[0x13]);\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < unaff_EBX[8]);\n    }\n    fcn.00464d6f(arg_8h, 0x412b1c);\n    return;\n}\n",
        "token_count": 781
    },
    "004687e6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.004687e6(uint param_1)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    if (*(in_EAX + 0x1b8) == 0) {\n        iVar2 = fcn.0046374e(*(in_EAX + 0x184), param_1, 2);\n        uVar1 = iVar2 != 0;\n    }\n    else {\n        uVar1 = fcn.00463b3e(*(in_EAX + 0x184), param_1);\n    }\n    return uVar1;\n}\n",
        "token_count": 140
    },
    "00468820": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00468820(char *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *in_EAX;\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *arg_8h_00;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_8h = 0;\n    fcn.0046779f();\n    if (*arg_8h == '\\0') {\n        puVar1 = (**0x412080)(0xfffffff5);\n    }\n    else {\n        puVar1 = fcn.00464d56(arg_8h);\n    }\n    if (puVar1 == 0xffffffff) {\n        return var_8h;\n    }\n    var_8h = 1;\n    var_4h = puVar1;\n    fcn.00464c9e();\n    if ((arg_ch == 4) || (arg_ch == 5)) {\n        (**(*in_EAX + 0x50))(puVar1, arg_ch);\n    }\n    if (arg_ch == 6) {\n        (**(*in_EAX + 0x24))(puVar1);\n    }\n    arg_8h_00 = puVar1;\n    (**(*in_EAX + 0x80))(puVar1, arg_ch);\n    if (arg_ch == 2) {\n        if (in_EAX[0x6f] == 0) goto code_r0x004688ce;\n        fcn.00467f20(puVar1);\n    }\n    if ((arg_ch == 7) && (in_EAX[0x6f] != 0)) {\n        fcn.0046803d(puVar1, 0);\n        arg_8h_00 = puVar1;\n    }\ncode_r0x004688ce:\n    iVar2 = fcn.004674b9();\n    puVar1 = NULL;\n    if (0 < iVar2) {\n        do {\n            arg_8h_00 = &fcn.00468820::var_ch;\n            uVar4 = 0x4688e7;\n            iVar3 = fcn.00467af6(arg_8h_00, puVar1);\n            if ((iVar3 != 0) &&\n               (((arg_8h_00 = puVar1,  iVar3 = fcn.004687e6(uVar4),  arg_10h == 0 || (iVar3 != 0)) &&\n                (iVar3 = (**(*in_EAX + 0x78))(var_4h, var_ch, arg_ch),  iVar3 == 0)))) {\n                var_8h = 0;\n                break;\n            }\n            puVar1 = puVar1 + 1;\n        } while (puVar1 < iVar2);\n    }\n    if ((arg_ch == 4) || (arg_ch == 5)) {\n        (**(*in_EAX + 0x4c))(var_4h, arg_ch, arg_8h_00);\n    }\n    if (arg_ch == 6) {\n        (**(*in_EAX + 0x28))(var_4h);\n    }\n    if (*arg_8h != '\\0') {\n        (*_fcn.0041209c)(var_4h);\n    }\n    (*_fcn.00412190)(*0x416b98);\n    return var_8h;\n}\n",
        "token_count": 772
    },
    "004689a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004689a4(char *arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t arg_8h_00;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0046779f();\n    if (*arg_8h == '\\0') {\n        arg_8h_00 = (**0x412080)(0xfffffff5);\n    }\n    else {\n        arg_8h_00 = fcn.00464d56(arg_8h);\n    }\n    if (arg_8h_00 == -1) {\n        fcn.00464db3(0);\n        return 0;\n    }\n    var_8h = 1;\n    fcn.00464c9e();\n    if ((arg_ch == 4) || (arg_ch == 5)) {\n        (**(*in_EAX + 0x50))(arg_8h_00, arg_ch);\n    }\n    if (arg_ch == 6) {\n        (**(*in_EAX + 0x24))(arg_8h_00);\n    }\n    (**(*in_EAX + 0x80))(arg_8h_00, arg_ch);\n    if (arg_ch == 2) {\n        if (in_EAX[0x6f] == 0) goto code_r0x00468a4b;\n        fcn.00467f20(arg_8h_00);\n    }\n    if ((arg_ch == 7) && (in_EAX[0x6f] != 0)) {\n        fcn.0046803d(arg_8h_00, 0);\n    }\ncode_r0x00468a4b:\n    iVar3 = 0;\n    if (0 < in_EAX[10]) {\n        do {\n            uVar1 = (**(*in_EAX + 100))(iVar3);\n            iVar2 = (**(*in_EAX + 0x2c))(uVar1);\n            if ((iVar2 != 0) && (iVar2 = (**(*in_EAX + 0x78))(arg_8h_00, uVar1, arg_ch),  iVar2 == 0)) {\n                var_8h = 0;\n                fcn.00464db3(0);\n                break;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < in_EAX[10]);\n    }\n    if ((arg_ch == 4) || (arg_ch == 5)) {\n        (**(*in_EAX + 0x4c))(arg_8h_00, arg_ch);\n    }\n    if (arg_ch == 6) {\n        (**(*in_EAX + 0x28))(arg_8h_00);\n    }\n    if (*arg_8h != '\\0') {\n        (*_fcn.0041209c)(arg_8h_00);\n    }\n    (*_fcn.00412190)(*0x416b98);\n    return var_8h;\n}\n",
        "token_count": 686
    },
    "00468aea": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00468aea(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (*0x4171ac == 0) {\n        *(in_EAX + 0x70) = 0;\n        *(in_EAX + 0x7c) = 0;\n        *(in_EAX + 0x80) = 0;\n        *(in_EAX + 0x60) = param_2;\n        *(in_EAX + 100) = *0x416b94;\n        *(in_EAX + 0x5c) = 0x28;\n        *(in_EAX + 0x68) = 1;\n        *(in_EAX + 0x6c) = in_EAX + 0x84;\n        *(in_EAX + 0x74) = 0xff;\n        *0x4171ac = (*_fcn.00412298)(in_EAX + 0x5c);\n        return *0x4171ac != 0;\n    }\n    return false;\n}\n",
        "token_count": 238
    },
    "00468b52": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00468b52(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    bool bVar4;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    if (0 < in_ECX[0x6c]) {\n        do {\n            iVar2 = (**(*in_ECX + 0x68))(var_4h);\n            if (iVar2 != 0) {\n                uVar3 = (***arg_8h)(var_4h, in_ECX[0x13]);\n                uVar1 = *(arg_ch + 0xc);\n                if ((uVar1 & 2) == 0) {\n                    if ((uVar1 & 4) == 0) {\n                        iVar2 = fcn.00465844(*(arg_ch + 0x10));\n                    }\n                    else {\n                        iVar2 = fcn.004657ef(*(arg_ch + 0x10));\n                    }\n                    bVar4 = iVar2 != -1;\n                }\n                else {\n                    if ((uVar1 & 4) == 0) {\n                        iVar2 = fcn.00470424(*(arg_ch + 0x10), uVar3);\n                    }\n                    else {\n                        iVar2 = fcn.00470466();\n                    }\n                    bVar4 = iVar2 == 0;\n                }\n                if (bVar4) {\n                    return 1;\n                }\n            }\n            var_4h = var_4h + 1;\n        } while (var_4h < in_ECX[0x6c]);\n    }\n    return 0;\n}\n",
        "token_count": 383
    },
    "00468e7d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00468e7d(uint32_t param_1)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    int32_t unaff_EDI;\n    \n    pcVar2 = _fcn.00412210;\n    uVar1 = *(in_EAX + 0x184);\n    uVar3 = (*_fcn.00412210)(uVar1, 0x1037, 0, 0);\n    if (unaff_EDI == 0) {\n        uVar3 = uVar3 & ~param_1;\n    }\n    else {\n        uVar3 = uVar3 | param_1;\n    }\n    (*pcVar2)(uVar1, 0x1036, 0, uVar3);\n    return;\n}\n",
        "token_count": 188
    },
    "00468eba": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00468eba(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *extraout_ECX;\n    uint32_t uVar4;\n    int32_t *unaff_EDI;\n    uchar uStack16388;\n    uchar auStack16387 [8191];\n    uchar uStack8196;\n    uchar auStack8195 [8147];\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uchar *puStack32;\n    uint32_t uStack28;\n    uchar *puStack24;\n    uint32_t uStack20;\n    uint uStack16;\n    \n    fcn.00470712();\n    uStack16 = 0x1fff;\n    puStack24 = &stack0xffffbffd;\n    uStack20 = 0;\n    uStack16388 = 0;\n    uStack28 = 0x468ee6;\n    fcn.004703f4();\n    uStack28 = 0x1fff;\n    puStack36 = &stack0xffffdffd;\n    puStack32 = NULL;\n    uStack8196 = 0;\n    uStack40 = 0x468efc;\n    fcn.004703f4();\n    uVar1 = *(arg_8h * 4 + 0x417490);\n    uVar4 = uVar1 & 0xfff;\n    puStack24 = 0x468f2b;\n    uStack20 = uVar4;\n    iVar2 = (**(*unaff_EDI + 4))();\n    if (iVar2 == 0xff) {\n        puStack24 = &stack0xffffdffc;\n        puStack32 = 0x468f40;\n        uStack28 = uVar4;\n        uVar3 = (***extraout_ECX)();\n        puStack32 = &stack0xffffbffc;\n        uStack40 = 0x468f50;\n        puStack36 = uVar4;\n        uStack44 = (***unaff_EDI)();\n        uStack48 = 0x468f57;\n        uStack40 = uVar3;\n        iVar2 = fcn.00470436();\n    }\n    if ((uVar1 & 0x1000) != 0) {\n        iVar2 = -iVar2;\n    }\n    return iVar2;\n}\n",
        "token_count": 532
    },
    "00468f8b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00468f8b(int32_t arg_8h, int32_t arg_ch)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.0046779f();\n    iVar5 = 0;\n    var_8h = 0;\n    do {\n        if (9 < *(iVar5 + arg_8h) - 0x30U) goto code_r0x00468ff0;\n        iVar5 = iVar5 + 1;\n    } while (iVar5 < 1);\n    uVar2 = fcn.004703b6(arg_8h);\n    if (uVar2 < 3) {\n        iVar5 = fcn.00470430(arg_8h);\n        if ((-1 < iVar5) && (iVar5 < *(in_EAX + 0x20))) {\n            var_8h = *(*(*(in_EAX + 0x24) + iVar5 * 4) * 0x14 + *(in_EAX + 0x1b4));\n        }\n    }\n    else {\ncode_r0x00468ff0:\n        iVar5 = 0;\n        bVar1 = false;\n        var_4h = 0;\n        if (0 < *(in_EAX + 0x1b0)) {\n            iVar6 = 0;\n            do {\n                iVar3 = fcn.00470436(*(*(in_EAX + 0x1b4) + 0x10 + iVar5), arg_8h);\n                iVar4 = fcn.00470436(*(*(in_EAX + 0x34) + 0xc + iVar6), arg_8h);\n                if ((iVar3 == 0) || (iVar4 == 0)) {\n                    var_8h = *(iVar5 + *(in_EAX + 0x1b4));\n                    bVar1 = true;\n                }\n                var_4h = var_4h + 1;\n                iVar6 = iVar6 + 0x10;\n                iVar5 = iVar5 + 0x14;\n            } while (var_4h < *(in_EAX + 0x1b0));\n            if (bVar1) goto code_r0x004690c9;\n        }\n        var_4h = 0;\n        if (0 < *(in_EAX + 0x1b0)) {\n            iVar5 = 0;\n            do {\n                iVar6 = fcn.00465844(arg_8h);\n                iVar3 = fcn.00465844(arg_8h);\n                if ((-1 < iVar6) || (-1 < iVar3)) {\n                    var_8h = *(iVar5 + *(in_EAX + 0x1b4));\n                }\n                var_4h = var_4h + 1;\n                iVar5 = iVar5 + 0x14;\n            } while (var_4h < *(in_EAX + 0x1b0));\n        }\n    }\ncode_r0x004690c9:\n    iVar5 = *0x41748c;\n    if (arg_ch != 0) {\n        var_8h = var_8h | 0x1000;\n    }\n    *0x41748c = *0x41748c + 1;\n    *(iVar5 * 4 + 0x417490) = var_8h;\n    return;\n}\n",
        "token_count": 812
    },
    "004690f1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004690f1(void)\n\n{\n    int32_t iVar1;\n    uint arg_14h;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint unaff_EBX;\n    int32_t unaff_ESI;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00467a50(1);\n    iVar2 = *(unaff_ESI + 0x118);\n    uVar3 = iVar1 == 1;\n    fcn.00460795(unaff_EBX, 0, 0x9c49, uVar3);\n    if (iVar2 != 0) {\n        fcn.004607dc(iVar2, 0x9c49, uVar3);\n    }\n    iVar2 = *(unaff_ESI + 0x118);\n    fcn.00460795(unaff_EBX, 1, 0x9c59, uVar3);\n    if (iVar2 != 0) {\n        fcn.004607dc(iVar2, 0x9c59, uVar3);\n    }\n    iVar1 = fcn.00467a50(0);\n    iVar2 = *(unaff_ESI + 0x118);\n    uVar3 = 0 < iVar1;\n    fcn.00460795(unaff_EBX, 0, 0x9c41, uVar3);\n    if (iVar2 != 0) {\n        fcn.004607dc(iVar2, 0x9c41, uVar3);\n    }\n    iVar2 = *(unaff_ESI + 0x118);\n    fcn.00460795(unaff_EBX, 1, 0x9c48, uVar3);\n    if (iVar2 != 0) {\n        fcn.004607dc(iVar2, 0x9c48, uVar3);\n    }\n    fcn.00460795(unaff_EBX, 2, 0x9c4a, uVar3);\n    arg_14h = fcn.004674b9();\n    fcn.00460795(unaff_EBX, 2, 0x9c4c, arg_14h);\n    fcn.00464e0d(*(unaff_ESI + 0x108), 0x9c45, *(*(unaff_ESI + 0x36c) + 4));\n    fcn.00464e0d(*(unaff_ESI + 0x108), 0x9c58, *(*(unaff_ESI + 0x36c) + 0xc));\n    fcn.00464e0d(*(unaff_ESI + 0x108), 0x9c5c, *(*(unaff_ESI + 0x36c) + 0x10));\n    iVar2 = fcn.004674b9();\n    uVar3 = 0 < iVar2;\n    fcn.00460795(unaff_EBX, 2, 0x9c46, uVar3);\n    iVar2 = *(unaff_ESI + 0x118);\n    fcn.00460795(unaff_EBX, 1, 0x9c4e, uVar3);\n    if (iVar2 != 0) {\n        fcn.004607dc(iVar2, 0x9c4e, uVar3);\n    }\n    return;\n}\n",
        "token_count": 757
    },
    "004692a9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004692a9(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t unaff_ESI;\n    uint var_200h;\n    uint var_100h;\n    \n    uVar1 = fcn.004674b9();\n    uVar1 = fcn.00466771(uVar1);\n    fcn.004703aa(&var_100h, uVar1);\n    iVar2 = fcn.00467a50(0);\n    if (0 < iVar2) {\n        uVar1 = fcn.00466771(iVar2);\n        fcn.004703aa(&var_200h, uVar1);\n        fcn.004703a4(&var_100h, &var_200h);\n    }\n    if (*(unaff_ESI + 0x108) != 0) {\n        (*_fcn.00412210)(*(unaff_ESI + 0x114), 0x401, 0, &var_100h);\n    }\n    return;\n}\n",
        "token_count": 229
    },
    "0046950a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0046950a(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t unaff_ESI;\n    int32_t iVar3;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (*(unaff_ESI + 0x124) != 0) {\n        (*_fcn.004121b8)(*(unaff_ESI + 0x108), &var_1ch);\n        pcVar1 = *0x4121d4;\n        (**0x4121d4)(*(unaff_ESI + 0x114), &var_2ch);\n        iVar3 = (var_20h - var_28h) + 1;\n        (*pcVar1)(*(unaff_ESI + 0x118), &var_2ch);\n        var_8h = var_14h - var_1ch;\n        var_ch = var_10h - var_18h;\n        iVar2 = (var_20h - var_28h) + 1;\n        var_4h = (*_fcn.00412224)(3);\n        (*_fcn.004121e0)(var_4h, *(unaff_ESI + 0x118), 0, 0, 0, var_8h, iVar2, 4);\n        (*_fcn.004121e0)(var_4h, *(unaff_ESI + 0x114), 0, 0, (var_10h - iVar3) + 1, var_8h, iVar3, 6);\n        (*_fcn.004121e0)(var_4h, *(*(unaff_ESI + 0x370) + 0x184), 0, 0, iVar2, var_8h, (var_ch - iVar2) - iVar3, 4);\n        (*_fcn.00412228)(var_4h);\n    }\n    return;\n}\n",
        "token_count": 501
    },
    "0046a81f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046a81f(uint arg_8h, uint noname_1, uint arg_10h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uchar auStack984 [16];\n    uchar auStack968 [16];\n    uint uStack952;\n    uint uStack948;\n    uint uStack944;\n    uint uStack940;\n    uint uStack936;\n    uint uStack916;\n    uint uStack704;\n    uint uStack692;\n    uint uStack668;\n    uint uStack664;\n    uint uStack656;\n    uint uStack652;\n    int32_t iStack616;\n    int32_t iStack316;\n    uint uStack40;\n    int32_t iStack24;\n    uchar *puStack12;\n    \n    *0x416b94 = arg_8h;\n    iVar3 = fcn.004636a9();\n    if (iVar3 == 0) {\n        return 1;\n    }\n    fcn.0046dc1e();\n    fcn.0046589e();\n    uStack944 = 0x20;\n    uStack952 = 0;\n    uStack940 = 0;\n    uStack948 = 0;\n    uStack936 = 0;\n    fcn.0046a5f7();\n    puStack12 = auStack984;\n    fcn.00465af9(puStack12, arg_10h);\n    iVar3 = fcn.00465c6d(0x4134f8);\n    if (iVar3 < 0) {\n        fcn.004670af();\n        iVar3 = fcn.00465c6d(0x413508);\n        if (iVar3 < 0) {\n            *0x417110 = 0x11223344;\n            (**0x4120b0)(*0x416b94, 0x40ed91, 0);\n            if (*0x417110 == 0x1c233487) {\n                if ((1 < *(iStack24 + 0x30)) && (iVar3 = fcn.0046a749(),  iVar3 != 0)) {\n                    uStack916 = 0x41356c;\n                    fcn.00470448(uStack40);\n                    if (iStack316 != 0) {\n                        (**0x412044)(iStack316);\n                        iStack316 = 0;\n                    }\n                    goto code_r0x0046aa8d;\n                }\n                (**0x41238c)(0);\n                fcn.0046a57c();\n                if (iStack616 == 3) {\n                    uVar4 = 3;\n                }\n                else {\n                    uVar4 = 5;\n                }\n                (**0x4121a0)(uStack656, uVar4);\n                (**0x4121f4)(uStack664);\n                uStack652 = (**0x4121fc)(*0x416b94, 0x67);\n                fcn.00469c0f();\n                pcVar2 = *0x412160;\n                iVar3 = (**0x412160)(auStack968, 0, 0, 0);\n                pcVar1 = *0x41215c;\n                while (iVar3 != 0) {\n                    iVar3 = (**0x412208)(uStack692, uStack668, auStack984);\n                    if ((iVar3 == 0) &&\n                       (((*0x4171ac == 0 || (iVar3 = (*pcVar1)(*0x4171ac, &stack0xfffffc1c),  iVar3 == 0)) &&\n                        (iVar3 = (*pcVar1)(uStack704, &stack0xfffffc1c),  iVar3 == 0)))) {\n                        (**0x412164)(&stack0xfffffc1c);\n                        (**0x412154)(&stack0xfffffc18);\n                    }\n                    iVar3 = (*pcVar2)(&stack0xfffffc1c, 0, 0, 0);\n                }\n                (**0x412384)();\n            }\n            else {\n                (*_fcn.0041220c)(0, 0x413518, 0x412fbc, 0x30);\n            }\n        }\n        else {\n            (**0x412014)(0x80000001, 0x413448);\n        }\n    }\n    else {\n        *0x417488 = 0x416b28;\n        fcn.004671e0();\n    }\n    uStack916 = 0x41356c;\n    fcn.00470448(uStack40);\n    if (iStack316 != 0) {\n        (**0x412044)(iStack316);\n        iStack316 = 0;\n    }\ncode_r0x0046aa8d:\n    uStack916 = 0x412474;\n    fcn.004658c0();\n    fcn.004634a0();\n    fcn.004658c0();\n    return 0;\n}\n",
        "token_count": 1098
    },
    "0046b641": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046b641(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar var_10ch;\n    uint var_10bh;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_10ch = 0;\n    fcn.004703f4(&var_10bh, 0, 0xff);\n    uVar1 = fcn.004703b6(0x413594);\n    iVar2 = fcn.004704ae(arg_8h, 0x413594, uVar1);\n    if (iVar2 == 0) {\n        var_4h = fcn.0046b5ba(&var_ch, uVar1);\n    }\n    else {\n        var_4h = 0;\n    }\n    if (var_4h != 0) {\n        fcn.0046b9a6();\n        iVar2 = fcn.00470424(var_4h, 0x4135ac);\n        if (iVar2 == 0) {\n            fcn.00464f42(arg_ch);\n        }\n        iVar2 = fcn.00470424(var_4h, 0x4135b4);\n        if (iVar2 == 0) {\n            fcn.00464f42(arg_ch);\n        }\n    }\n    uVar1 = fcn.004703b6(0x4135c0);\n    iVar2 = fcn.004704ae(arg_8h, 0x4135c0, uVar1);\n    if (iVar2 == 0) {\n        var_4h = fcn.0046b565(&var_10ch);\n    }\n    else {\n        var_4h = 0;\n    }\n    if (var_4h != 0) {\n        iVar2 = fcn.0046b8ef(&var_10ch);\n        iVar3 = fcn.00470424(var_4h, 0x4135cc);\n        if (iVar3 == 0) {\n            fcn.00464f42(arg_ch);\n        }\n        iVar3 = fcn.00470424(var_4h, 0x4135d8);\n        if (iVar3 == 0) {\n            fcn.00464f42(arg_ch);\n        }\n        iVar3 = fcn.00470424(var_4h, 0x4135e0);\n        if (iVar3 == 0) {\n            fcn.00464f42(arg_ch);\n        }\n        iVar3 = fcn.00470424(var_4h, 0x4135ec);\n        if (iVar3 == 0) {\n            uVar1 = fcn.00470430(arg_ch);\n            *(iVar2 + 0x804) = uVar1;\n        }\n        iVar3 = fcn.00470424(var_4h, 0x4135f4);\n        if (iVar3 == 0) {\n            iVar3 = fcn.00470424(arg_ch, 0x413600);\n            if (iVar3 == 0) {\n                *(iVar2 + 0x808) = 1;\n            }\n        }\n    }\n    uVar1 = fcn.004703b6(0x413608);\n    iVar2 = fcn.004704ae(arg_8h, 0x413608, uVar1);\n    if (iVar2 == 0) {\n        var_4h = fcn.0046b565(&var_10ch);\n    }\n    else {\n        var_4h = 0;\n    }\n    if (var_4h != 0) {\n        fcn.0046b8ef(&var_10ch);\n        iVar2 = fcn.00470424(var_4h, 0x413618);\n        if (iVar2 == 0) {\n            fcn.00464f42(arg_ch);\n        }\n        iVar2 = fcn.00470424(var_4h, 0x413624);\n        if (iVar2 == 0) {\n            fcn.00464f42(arg_ch);\n        }\n    }\n    iVar2 = fcn.00470424(arg_8h, 0x413630);\n    if (iVar2 == 0) {\n        iVar2 = fcn.004703b6(var_8h + 0x140);\n        iVar3 = fcn.004703b6(arg_ch);\n        if (iVar2 + 1 + iVar3 < 0x104) {\n            fcn.0046511f(var_8h + 0x140, arg_ch);\n        }\n        else {\n            *(var_8h + 0x245) = 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1062
    },
    "0046c05e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046c05e(uint arg_8h)\n\n{\n    char *pcVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uchar var_108h;\n    uint var_107h;\n    \n    iVar2 = fcn.00465aa1(arg_8h);\n    if (iVar2 == 0) {\n        uVar5 = 0;\n    }\n    else {\n        fcn.004634a0();\n        fcn.00465071(arg_8h);\n        pcVar1 = in_EAX + 0x25d;\n        *pcVar1 = '\\0';\n        fcn.0046b3a2(in_EAX + 6);\n        if (*pcVar1 == '\\0') {\n            iVar2 = fcn.004703b6(in_EAX + 0x56);\n            iVar3 = fcn.004703b6(0x413720);\n            if (iVar2 + 1 + iVar3 < 0x104) {\n                fcn.0046511f(in_EAX + 0x56, 0x413720);\n            }\n            else {\n                *pcVar1 = '\\0';\n            }\n        }\n        var_108h = 0;\n        fcn.004703f4(&var_107h, 0, 0x104);\n        iVar2 = fcn.004703b6(in_EAX + 0x56);\n        iVar3 = fcn.004703b6(0x41372c);\n        if (iVar2 + 1 + iVar3 < 0x104) {\n            fcn.0046511f(in_EAX + 0x56, 0x41372c);\n        }\n        else {\n            var_108h = 0;\n        }\n        if (*pcVar1 != '\\0') {\n            iVar2 = fcn.00465aa1(pcVar1);\n            if (iVar2 != 0) {\n                fcn.0046b2e7();\n            }\n        }\n        iVar2 = fcn.00464fbd(&var_108h);\n        if (iVar2 != 0) {\n            fcn.0046bc9a(in_EAX, &var_108h);\n        }\n        iVar2 = 0;\n        if (0 < in_EAX[0x11d]) {\n            do {\n                iVar3 = fcn.0046c2aa();\n                iVar4 = fcn.00470424(iVar3 + 0x504, 0x41373c);\n                if (iVar4 != 0) {\n                    if (*(iVar3 + 4) == '\\0') {\n                        fcn.004703fa(iVar3 + 4, iVar3 + 0x204);\n                    }\n                    (**(*in_EAX + 4))(iVar3);\n                }\n                iVar2 = iVar2 + 1;\n            } while (iVar2 < in_EAX[0x11d]);\n        }\n        uVar5 = 1;\n    }\n    return uVar5;\n}\n",
        "token_count": 683
    },
    "0046cd60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0046cd60(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *unaff_ESI;\n    uchar var_210h;\n    uint var_20fh;\n    char var_108h;\n    uint var_107h;\n    \n    var_108h = '\\0';\n    fcn.004703f4(&var_107h, 0, 0x104);\n    if (arg_8h != 0) {\n        fcn.00464f42(arg_8h);\n    }\n    if (var_108h != '\\0') {\n        (**0x412068)(0x104, unaff_ESI + 8);\n        (*_fcn.00412064)(&var_108h);\n        var_210h = 0;\n        fcn.004703f4(&var_20fh, 0, 0x104);\n        iVar2 = fcn.004703b6(0x412574);\n        iVar3 = fcn.004703b6(&var_108h);\n        if (iVar2 + 1 + iVar3 < 0x104) {\n            fcn.0046511f(&var_108h, 0x412574);\n        }\n        else {\n            var_210h = 0;\n        }\n        iVar2 = (*_fcn.0041206c)(&var_210h);\n        *unaff_ESI = iVar2;\n        pcVar1 = *0x412110;\n        if (iVar2 == 0) {\n            iVar2 = (**0x412110)(&var_210h, 0, 8);\n            *unaff_ESI = iVar2;\n            if (iVar2 == 0) {\n                fcn.0046cd1b();\n                iVar2 = (*pcVar1)(&var_210h, 0, 8);\n                *unaff_ESI = iVar2;\n                if (iVar2 == 0) goto code_r0x0046cebb;\n            }\n        }\n        pcVar1 = _fcn.004120ec;\n        iVar2 = (*_fcn.004120ec)(*unaff_ESI, 0x413954);\n        unaff_ESI[1] = iVar2;\n        iVar2 = (*pcVar1)(*unaff_ESI, 0x413960);\n        unaff_ESI[2] = iVar2;\n        iVar2 = (*pcVar1)(*unaff_ESI, 0x413970);\n        unaff_ESI[3] = iVar2;\n        iVar2 = (*pcVar1)(*unaff_ESI, 0x413988);\n        unaff_ESI[4] = iVar2;\n        iVar2 = (*pcVar1)(*unaff_ESI, 0x413998);\n        unaff_ESI[5] = iVar2;\n        iVar2 = (*pcVar1)(*unaff_ESI, 0x4139b0);\n        unaff_ESI[6] = iVar2;\n        iVar2 = (*pcVar1)(*unaff_ESI, 0x4139c4);\n        unaff_ESI[7] = iVar2;\n    }\ncode_r0x0046cebb:\n    return *unaff_ESI != 0;\n}\n",
        "token_count": 725
    },
    "0046cec8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0046cec8(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if ((((*0x417514 == 0) && (iVar2 = (*_fcn.0041206c)(0x413060),  pcVar1 = _fcn.004120ec,  iVar2 != 0)) &&\n        (*0x416fe0 = (*_fcn.004120ec)(iVar2, 0x4139d4),  *0x416fe0 != 0)) &&\n       (((*0x416fd8 = (*pcVar1)(iVar2, 0x4139f0),  *0x416fd8 != 0 &&\n         (*0x416fd4 = (*pcVar1)(iVar2, 0x413a00),  *0x416fd4 != 0)) &&\n        ((*0x416e6c = (*pcVar1)(iVar2, 0x413a10),  *0x416e6c != 0 &&\n         (*0x416fcc = (*pcVar1)(iVar2, 0x413a20),  *0x416fcc != 0)))))) {\n        *0x417514 = 1;\n    }\n    return;\n}\n",
        "token_count": 274
    },
    "0046cf4c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0046cf4c(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if ((*0x417518 == 0) && (iVar2 = (*_fcn.004120f0)(0x413a30),  pcVar1 = _fcn.004120ec,  iVar2 != 0)) {\n        *0x416fec = (*_fcn.004120ec)(iVar2, 0x413a3c);\n        if (((*0x416fec != 0) &&\n            (((*0x416fe4 = (*pcVar1)(iVar2, 0x413a50),  *0x416fe4 != 0 &&\n              (*0x416fdc = (*pcVar1)(iVar2, 0x413a64),  *0x416fdc != 0)) &&\n             (*0x41710c = (*pcVar1)(iVar2, 0x413a7c),  *0x41710c != 0)))) &&\n           (*0x416fe8 = (*pcVar1)(iVar2, 0x413a8c),  *0x416fe8 != 0)) {\n            *0x417518 = 1;\n        }\n        if (*0x417518 == 0) {\n            (*_fcn.004120e8)(iVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 303
    },
    "0046d316": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0046d316(int32_t param_1, uint param_2, int32_t param_3)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint arg_14h;\n    uint arg_8h;\n    int32_t iVar3;\n    uint *puVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_retaddr;\n    uint in_stack_00000034;\n    uchar *puVar10;\n    uint *arg_1ch;\n    uchar *puVar11;\n    int32_t iVar12;\n    uint arg_10h;\n    int32_t iStack100;\n    int32_t iStack96;\n    int32_t iStack92;\n    uchar *puStack88;\n    uint32_t uStack84;\n    uint32_t uStack80;\n    int32_t iStack72;\n    uchar *puStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint32_t uStack56;\n    uint uStack52;\n    int32_t iStack48;\n    int32_t iStack44;\n    uint32_t uStack40;\n    int32_t iStack36;\n    int32_t iStack32;\n    int32_t iStack28;\n    int32_t iStack24;\n    uint uStack20;\n    \n    fcn.00470712();\n    pcVar1 = _fcn.004121a4;\n    iVar9 = *(unaff_ESI[4] + 0x1b4);\n    uStack20 = 0x3e9;\n    iStack24 = unaff_ESI[1];\n    iStack28 = 0x46d345;\n    uStack56 = (*_fcn.004121a4)();\n    iStack28 = 1000;\n    iStack32 = unaff_ESI[1];\n    iStack36 = 0x46d351;\n    (*pcVar1)();\n    pcVar1 = _fcn.00412218;\n    iStack36 = -0x10;\n    iStack44 = 0x46d360;\n    uStack40 = uStack56;\n    arg_14h = (*_fcn.00412218)();\n    iStack44 = -0x10;\n    iStack48 = iStack24;\n    uStack52 = 0x46d36c;\n    arg_8h = (*pcVar1)();\n    uStack52 = 0xffffffec;\n    iStack60 = 0x46d375;\n    in_stack_00000034 = (*pcVar1)();\n    iStack60 = 0xffffffec;\n    uStack64 = uStack40;\n    puStack68 = 0x46d381;\n    iVar3 = (*pcVar1)();\n    pcVar1 = *0x4121d4;\n    puStack68 = &stack0x00000030;\n    (**0x4121d4)();\n    uStack80 = uStack56;\n    uStack84 = 0x46d39e;\n    puVar10 = *0x10;\n    (*pcVar1)();\n    pcVar2 = _fcn.00412258;\n    uStack84 = 2;\n    puStack88 = &stack0x00000020;\n    iStack92 = unaff_ESI[1];\n    iStack96 = 0;\n    iStack100 = 0x46d3b2;\n    (*_fcn.00412258)();\n    iStack100 = 2;\n    arg_1ch = unaff_ESI[1];\n    arg_10h = 0;\n    (*pcVar2)(0, arg_1ch, &stack0xffffffe8);\n    iStack72 = iStack32 - uStack40;\n    iVar9 = iVar9 - unaff_retaddr;\n    iStack96 = 0;\n    iStack24 = param_3 - param_1;\n    iStack60 = iStack28 - iStack36;\n    puStack88 = (*_fcn.0041222c)(unaff_ESI[1]);\n    if (puStack88 != NULL) {\n        iStack72 = 0;\n        iStack96 = 0;\n        if (0 < *(unaff_ESI[4] + 0x1b0)) {\n            puVar4 = iStack92 + 0x10;\n            do {\n                uVar5 = fcn.004703b6(*puVar4, &stack0x0000000c);\n                iVar6 = (**0x412054)(puStack88, *puVar4, uVar5);\n                if ((iVar6 != 0) && (iStack96 < param_3 + 10)) {\n                    iStack96 = param_3 + 10;\n                }\n                iStack72 = iStack72 + 1;\n                puVar4 = puVar4 + 5;\n            } while (iStack72 < *(unaff_ESI[4] + 0x1b0));\n        }\n        iVar6 = iStack96 - iVar9;\n        puVar10 = puVar10 + -iVar6;\n        iStack44 = iStack44 + iVar6;\n        iVar9 = iVar9 + iVar6;\n        (*_fcn.00412240)(unaff_ESI[1], puStack88);\n    }\n    iVar6 = 0;\n    if (0 < *(unaff_ESI[4] + 0x1b0)) {\n        uStack84 = uStack84 | 0x10000000;\n        uStack80 = uStack80 | 0x10000000;\n        iStack96 = iStack92 + 0x10;\n        do {\n            (**(*unaff_ESI + 0x1c))(iVar6);\n            iVar8 = iVar6 + unaff_EBP;\n            fcn.004603d4(arg_8h, 0x413ab0, puStack88, arg_14h, iVar8, iVar9, iStack32);\n            iVar7 = unaff_ESI[5] * iStack96;\n            uVar5 = 0x413ab8;\n            puVar4 = arg_1ch;\n            puVar11 = puVar10;\n            fcn.004603d4(iStack100, 0x413ab8, arg_10h, puVar10, iVar8 + iStack72, arg_1ch, iVar7);\n            fcn.004703aa(&stack0xffffffe8, 0x413ac0, *arg_1ch);\n            (*_fcn.004121d0)(iVar7, &stack0xffffffe8);\n            uVar5 = (***unaff_ESI[3])(uVar5, &stack0x000000e0);\n            (*_fcn.004121d0)(puVar10, uVar5);\n            iStack96 = iStack96 + 0x14;\n            iStack100 = iStack100 + unaff_ESI[5] * uStack64 + unaff_ESI[6];\n            iVar6 = iVar6 + 1;\n            arg_1ch = puVar4;\n            puVar10 = puVar11;\n        } while (iVar6 < *(unaff_ESI[4] + 0x1b0));\n    }\n    iVar7 = (*_fcn.004121a4)(unaff_ESI[1], 1);\n    (*pcVar1)(iVar7, &stack0xffffffbc);\n    iVar12 = 2;\n    puVar10 = &stack0xffffffb4;\n    iVar9 = unaff_ESI[1];\n    iVar8 = 0;\n    (*_fcn.00412258)(0, iVar9, puVar10, 2);\n    pcVar2 = _fcn.004121b8;\n    puVar11 = &stack0xfffffff4;\n    (*_fcn.004121b8)(unaff_ESI[1], puVar11);\n    (*pcVar1)(unaff_ESI[1], &stack0xffffffc0);\n    pcVar1 = _fcn.00412200;\n    (*_fcn.00412200)(unaff_ESI[1], 0, 0, 0, (uStack64 - iStack72) + 1, \n                     (((iStack24 - iVar3) - iVar6) - puStack68) + iStack96 + iStack60 + 0x15 + iVar8, 0x206);\n    (*pcVar2)(unaff_ESI[1], &stack0xffffff9c);\n    (*pcVar1)(puVar11, 0, iVar9, puVar10 + iStack96 + (-iVar6 - iVar7) + -5, (iVar12 - iVar9) + 1, (iVar7 - puVar10) + 1\n              , 0x204);\n    return;\n}\n",
        "token_count": 1952
    },
    "0046d7fa": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046d7fa(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBX;\n    uint uVar4;\n    uint var_30h;\n    uint var_20h;\n    uint var_10h;\n    \n    pcVar1 = *0x412130;\n    if (arg_14h == 0) {\n        iVar2 = (**0x412130)(0x413b88, &var_20h);\n        uVar4 = 0x413bb0;\n    }\n    else {\n        iVar2 = (**0x412130)(0x413b38, &var_20h);\n        uVar4 = 0x413b60;\n    }\n    iVar3 = (*pcVar1)(uVar4, &var_10h);\n    if (((iVar2 == 0) && (iVar3 == 0)) &&\n       (iVar2 = fcn.0046d73c(&var_20h, &var_10h, arg_ch, &arg_ch, &arg_14h),  iVar2 == 0)) {\n        iVar2 = arg_ch;\n        if (arg_10h + -1 < arg_ch) {\n            iVar2 = arg_10h + -1;\n        }\n        fcn.0047043c();\n        *(iVar2 + unaff_EBX) = 0;\n        (**0x412388)(arg_14h);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 364
    },
    "0046d980": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046d980(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    uint *unaff_ESI;\n    \n    if (arg_8h != 0) {\n        fcn.0046d898(arg_ch, arg_10h, *unaff_ESI, arg_18h);\n        return;\n    }\n    uVar1 = (*_fcn.0041208c)(arg_ch, arg_10h, arg_14h);\n    *unaff_ESI = uVar1;\n    return;\n}\n",
        "token_count": 143
    },
    "0046dafb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046dafb(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 4) == 0) {\n        (*_fcn.004120cc)(in_ECX + 0x10d, arg_8h, arg_10h, arg_ch, arg_14h, in_ECX + 8);\n    }\n    else {\n        (**0x412088)(in_ECX + 0x10d, arg_8h, arg_ch);\n    }\n    return 1;\n}\n",
        "token_count": 140
    },
    "0046dc1e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0046dc1e(void)\n\n{\n    if (*0x417520 == 0) {\n        *0x417520 = (*_fcn.004120f0)(0x413bf4);\n        if (*0x417520 != 0) {\n            *0x41751c = (*_fcn.004120ec)(*0x417520, 0x413c00);\n        }\n    }\n    return;\n}\n",
        "token_count": 95
    },
    "0046df0f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046df0f(char *param_1)\n\n{\n    char cVar1;\n    char *in_EAX;\n    uint uVar2;\n    \n    do {\n        cVar1 = *in_EAX;\n        if (cVar1 == '<') {\n            uVar2 = 0x413d08;\ncode_r0x0046df7c:\n            fcn.0047043c(param_1, uVar2, 4);\n            param_1 = param_1 + 4;\n        }\n        else {\n            if (cVar1 == '>') {\n                uVar2 = 0x413d10;\n                goto code_r0x0046df7c;\n            }\n            if (cVar1 == '\\\"') {\n                fcn.0047043c(param_1, 0x413d18, 6);\n                param_1 = param_1 + 6;\n            }\n            else {\n                if (cVar1 == -0x50) {\n                    uVar2 = 0x413d20;\n                }\n                else {\n                    if (cVar1 != '&') {\n                        if (cVar1 == '\\n') {\n                            uVar2 = 0x413d30;\n                            goto code_r0x0046df7c;\n                        }\n                        *param_1 = cVar1;\n                        param_1 = param_1 + 1;\n                        goto code_r0x0046df8c;\n                    }\n                    uVar2 = 0x413d28;\n                }\n                fcn.0047043c(param_1, uVar2, 5);\n                param_1 = param_1 + 5;\n            }\n        }\ncode_r0x0046df8c:\n        if (*in_EAX == '\\0') {\n            return;\n        }\n        in_EAX = in_EAX + 1;\n    } while( true );\n}\n",
        "token_count": 412
    },
    "0046e67a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0046e67a(int32_t arg_8h, char *arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    char cVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    char *pcVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint var_1d0h;\n    uint var_1cch;\n    uint var_1c8h;\n    uint var_1c4h;\n    uint var_1c0h;\n    uint var_1bch;\n    uint var_1b8h;\n    uint var_1b4h;\n    uint var_1b0h;\n    uint var_1ach;\n    uint var_1a8h;\n    uint var_1a4h;\n    uint var_1a0h;\n    uint var_19ch;\n    uint var_198h;\n    uint var_194h;\n    uint var_190h;\n    uint var_18ch;\n    uint var_188h;\n    uint var_184h;\n    uint var_180h;\n    uint var_17ch;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    code *var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_48h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint8_t *var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uchar var_10h;\n    uchar var_fh;\n    uint var_9h;\n    int32_t var_4h;\n    \n    var_3ch = 0x413f68;\n    var_38h = 0x413f70;\n    var_34h = 0x413f74;\n    var_30h = 0x413f78;\n    var_2ch = 0x413f80;\n    var_28h = 0x413f88;\n    var_14h._0_1_ = 0x26;\n    var_14h._1_1_ = 0x3c;\n    var_14h._2_1_ = 0x3e;\n    var_14h._3_1_ = 0x22;\n    var_10h = 0x20;\n    var_fh = 0x27;\n    var_1d0h = 0x413f90;\n    var_1cch = 0x413f98;\n    var_1c8h = 0x413fa0;\n    var_1c4h = 0x413fa8;\n    var_1c0h = 0x413fb0;\n    var_1bch = 0x413fb8;\n    var_1b8h = 0x413fc0;\n    var_1b4h = 0x413fc8;\n    var_1b0h = 0x413fd0;\n    var_1ach = 0x413fd8;\n    var_1a8h = 0x413fe0;\n    var_1a4h = 0x413fe8;\n    var_1a0h = 0x413ff0;\n    var_19ch = 0x413ff8;\n    var_198h = 0x414000;\n    var_194h = 0x414008;\n    var_190h = 0x414010;\n    var_18ch = 0x414018;\n    var_188h = 0x414020;\n    var_184h = 0x414028;\n    var_180h = 0x414030;\n    var_17ch = 0x414038;\n    var_178h = 0x414040;\n    var_174h = 0x414048;\n    var_170h = 0x414050;\n    var_16ch = 0x414058;\n    var_168h = 0x414060;\n    var_164h = 0x414068;\n    var_160h = 0x414070;\n    var_15ch = 0x414078;\n    var_158h = 0x414080;\n    var_154h = 0x414088;\n    var_150h = 0x414090;\n    var_14ch = 0x414098;\n    var_148h = 0x4140a0;\n    var_144h = 0x4140a8;\n    var_140h = 0x4140b0;\n    var_13ch = 0x4140b8;\n    var_138h = 0x4140c0;\n    var_134h = 0x4140c8;\n    var_130h = 0x4140d0;\n    var_12ch = 0x4140d8;\n    var_128h = 0x4140e0;\n    var_124h = 0x4140e8;\n    var_120h = 0x4140f0;\n    var_11ch = 0x4140f8;\n    var_118h = 0x414100;\n    var_114h = 0x414108;\n    var_110h = 0x414110;\n    var_10ch = 0x414118;\n    var_108h = 0x414120;\n    var_104h = 0x414128;\n    var_100h = 0x414130;\n    var_fch = 0x414138;\n    var_f8h = 0x414140;\n    var_f4h = 0x414148;\n    var_f0h = 0x414150;\n    var_ech = 0x414158;\n    var_e8h = 0x414160;\n    var_e4h = 0x414168;\n    var_e0h = 0x414170;\n    var_dch = 0x414178;\n    var_d8h = 0x414180;\n    var_d4h = 0x414188;\n    var_d0h = 0x414190;\n    var_cch = 0x414198;\n    var_c8h = 0x4141a0;\n    var_18h = -1;\n    iVar7 = 0;\n    iVar8 = 0;\n    cVar1 = *arg_ch;\n    var_c4h = 0x4141a8;\n    var_c0h = 0x4141b0;\n    var_bch = 0x4141b8;\n    var_b8h = fcn.004141c0;\n    var_b4h = 0x4141c8;\n    var_b0h = 0x4141d0;\n    var_ach = 0x4141d8;\n    var_a8h = 0x4141e0;\n    var_a4h = 0x4141e8;\n    var_a0h = 0x4141f0;\n    var_9ch = 0x4141f8;\n    var_98h = 0x414200;\n    var_94h = 0x414208;\n    var_90h = 0x414210;\n    var_8ch = 0x414218;\n    var_88h = 0x414220;\n    var_84h = 0x414228;\n    var_80h = 0x414230;\n    var_7ch = 0x414238;\n    var_78h = 0x414240;\n    var_74h = 0x414248;\n    var_70h = 0x414250;\n    var_6ch = 0x414258;\n    var_68h = 0x414260;\n    var_64h = 0x414268;\n    var_60h = 0x414270;\n    var_5ch = 0x414278;\n    var_58h = 0x414280;\n    do {\n        if ((cVar1 == '\\0') || ((arg_10h != -1 && (arg_10h <= iVar8)))) {\n            puVar4 = arg_8h + iVar7;\n            *puVar4 = 0;\n            if (((arg_18h != 0) && (0 < iVar7)) && (puVar4[-1] == ' ')) {\n                puVar4[-1] = 0;\n            }\n            return;\n        }\n        var_9h._0_1_ = arg_ch[iVar8];\n        if (var_9h == 0x26) {\n            iVar9 = 0;\n            var_20h = arg_ch + iVar8 + 1;\n            do {\n                var_4h = fcn.004703b6((&var_3ch)[iVar9]);\n                iVar3 = fcn.004704ae(var_20h, (&var_3ch)[iVar9], var_4h);\n                if (iVar3 == 0) {\n                    *(iVar7 + arg_8h) = *(&var_14h + iVar9);\n                    iVar7 = iVar7 + 1;\n                    iVar8 = iVar8 + 1 + var_4h;\n                    goto code_r0x0046ec49;\n                }\n                iVar9 = iVar9 + 1;\n            } while (iVar9 < 6);\n            if (arg_ch[iVar8 + 1] != '#') {\ncode_r0x0046ebce:\n                var_4h = 0;\n                do {\n                    var_24h = (&var_1d0h)[var_4h];\n                    iVar9 = fcn.004703b6(var_24h);\n                    iVar3 = fcn.004704ae(var_20h, var_24h, iVar9);\n                    if (iVar3 == 0) {\n                        *(iVar7 + arg_8h) = var_4h + -0x5f;\n                        iVar7 = iVar7 + 1;\n                        iVar8 = iVar8 + 1 + iVar9;\n                        goto code_r0x0046ec49;\n                    }\n                    var_4h = var_4h + 1;\n                } while (var_4h < 0x5f);\n                goto code_r0x0046ec06;\n            }\n            pcVar6 = arg_ch + iVar8 + 2;\n            if ((*pcVar6 == 'x') || (*pcVar6 == 'X')) {\n                iVar9 = 0;\n                for (pcVar6 = arg_ch + iVar8 + 3; *pcVar6 != '\\0'; pcVar6 = pcVar6 + 1) {\n                    if (*pcVar6 == ';') goto code_r0x0046eba1;\n                    iVar9 = iVar9 + 1;\n                    if (3 < iVar9) break;\n                }\n                iVar9 = -1;\ncode_r0x0046eba1:\n                if (iVar9 < 1) goto code_r0x0046ebce;\n                fcn.0047043c(&var_54h, arg_ch + iVar8 + 3, iVar9);\n                *(&var_54h + iVar9) = 0;\n                uVar2 = fcn.00465384(&var_54h);\n                *(iVar7 + arg_8h) = uVar2;\n                iVar7 = iVar7 + 1;\n                iVar8 = iVar8 + 4 + iVar9;\n            }\n            else {\n                var_4h = 0;\n                for (pcVar5 = pcVar6; *pcVar5 != '\\0'; pcVar5 = pcVar5 + 1) {\n                    if (*pcVar5 == ';') goto code_r0x0046eb13;\n                    var_4h = var_4h + 1;\n                    if (5 < var_4h) break;\n                }\n                var_4h = -1;\ncode_r0x0046eb13:\n                if (var_4h < 1) goto code_r0x0046ebce;\n                fcn.0047043c(&var_48h, pcVar6, var_4h);\n                *(&var_48h + var_4h) = 0;\n                var_1ch._0_2_ = fcn.00470430(&var_48h);\n                var_9h._1_1_ = 0;\n                var_9h._2_1_ = 0;\n                var_1ch._2_2_ = 0;\n                (**0x4120d4)(0, 0, &var_1ch, 0xffffffff, &var_9h + 1, 2, 0, 0);\n                *(iVar7 + arg_8h) = var_9h._1_1_;\n                iVar7 = iVar7 + 1;\n                iVar8 = iVar8 + 3 + var_4h;\n            }\n        }\n        else {\ncode_r0x0046ec06:\n            if ((arg_14h == 0) || (0x20 < var_9h)) {\n                *(iVar7 + arg_8h) = var_9h;\n                iVar7 = iVar7 + 1;\n            }\n            else {\n                if (iVar7 != var_18h) {\n                    *(iVar7 + arg_8h) = 0x20;\n                    iVar7 = iVar7 + 1;\n                    if ((arg_18h != 0) && (iVar7 == 1)) {\n                        iVar7 = 0;\n                    }\n                }\n                var_18h = iVar7;\n            }\n            iVar8 = iVar8 + 1;\n        }\ncode_r0x0046ec49:\n        cVar1 = arg_ch[iVar8];\n    } while( true );\n}\n",
        "token_count": 3605
    },
    "0046eef3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046eef3(int32_t *param_1)\n\n{\n    uint8_t *puVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    int32_t arg_ch;\n    uint arg_8h;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t arg_10h;\n    int32_t arg_14h;\n    uint8_t uStack9;\n    uint32_t uStack8;\n    uint32_t uStack4;\n    \n    uStack4 = 0;\n    param_1[0xe] = 0;\n    param_1[10] = 0;\n    param_1[9] = 1;\n    param_1[0xb] = 0;\n    param_1[0xd] = 0;\n    param_1[5] = 0;\n    fcn.004658c0();\n    fcn.004658c0();\n    cVar2 = *param_1[7];\n    do {\n        if (cVar2 == '\\0') {\n            return;\n        }\n        if (param_1[0xd] == 0) {\n            iVar5 = param_1[7];\n            puVar1 = iVar5 + uStack4;\n            uVar3 = *puVar1;\n            if (((uVar3 == 0x22) || (uVar3 == 0x27)) && (param_1[0xe] != 0)) {\n                if (param_1[10] == 0) {\n                    if ((param_1[9] == 6) || (param_1[9] == 7)) {\n                        param_1[10] = 1;\n                        uStack9 = uVar3;\n                    }\n                }\n                else if (uVar3 == uStack9) {\n                    param_1[10] = param_1[10] ^ 1;\n                }\n            }\n            if ((uVar3 == 0x3c) && (param_1[10] == 0)) {\n                if (((puVar1[1] == 0x21) && (puVar1[2] == 0x2d)) && (puVar1[3] == 0x2d)) {\n                    param_1[0xd] = 1;\n                }\n                if (param_1[0xd] == 0) {\n                    if (uStack4 != 0) {\n                        uVar4 = uStack4 - 1;\n                        param_1[6] = uVar4;\n                        if (param_1[0x11] != 0) {\n                            uVar6 = param_1[5];\n                            while ((uVar6 <= uVar4 && (*(iVar5 + uVar6) < 0x21))) {\n                                uVar6 = uVar6 + 1;\n                                param_1[5] = uVar6;\n                            }\n                            while ((param_1[5] <= uVar4 && (*(iVar5 + uVar4) < 0x21))) {\n                                uVar4 = uVar4 - 1;\n                                param_1[6] = uVar4;\n                            }\n                        }\n                        if (param_1[5] <= param_1[6]) {\n                            param_1[0x119] = (param_1[6] - param_1[5]) + 1;\n                            fcn.00465997();\n                            if (param_1[0x10] == 0) {\n                                iVar5 = fcn.004659e6();\n                                fcn.0047043c(iVar5, param_1[7] + param_1[5], param_1[0x119]);\n                                *(iVar5 + param_1[0x119]) = 0;\n                            }\n                            else {\n                                iVar5 = param_1[0x12];\n                                arg_14h = param_1[0xf];\n                                arg_ch = param_1[7] + param_1[5];\n                                arg_10h = param_1[0x119];\n                                arg_8h = fcn.004659e6();\n                                fcn.0046e67a(arg_8h, arg_ch, arg_10h, arg_14h, iVar5);\n                            }\n                            (**(*param_1 + 8))();\n                        }\n                    }\n                    param_1[9] = 2;\n                    *(param_1 + 0x4d) = 0;\n                    *(param_1[0x114] + 0x1c) = 0;\n                    *(param_1[0x115] + 0x1c) = 0;\n                    uStack8 = 0;\n                    param_1[0xe] = 1;\n                }\n            }\n            else {\n                if ((param_1[9] == 2) && (0x20 < uVar3)) {\n                    param_1[9] = 3;\n                    if (uVar3 != 0x2f) {\n                        param_1[0x11a] = 1;\n                        goto code_r0x0046f21a;\n                    }\n                    param_1[0x11a] = 2;\ncode_r0x0046f10c:\n                    if (param_1[0xc] == 0) {\ncode_r0x0046f139:\n                        if (param_1[9] == 8) goto code_r0x0046f13f;\n                    }\n                    else if (param_1[9] == 8) {\n                        if (uVar3 == *(param_1 + 0x13)) {\n                            param_1[4] = uStack4;\n                            fcn.0046ee14();\n                            param_1[0xc] = 0;\n                            param_1[9] = 9;\n                        }\n                        goto code_r0x0046f139;\n                    }\n                }\n                else {\ncode_r0x0046f21a:\n                    if (param_1[9] == 3) {\n                        if (0x20 < uVar3) {\n                            if (((uVar3 != 0x2f) && (uVar3 != 0x3e)) && (uStack8 < 0x3ff)) {\n                                *(uStack8 + 0x4d + param_1) = uVar3;\n                                *(uStack8 + 0x4e + param_1) = 0;\n                                uStack8 = uStack8 + 1;\n                            }\n                            goto code_r0x0046f264;\n                        }\n                        param_1[9] = 4;\n                        if ((param_1[0x11a] == 2) && (uStack8 == 0)) {\n                            param_1[9] = 3;\n                            goto code_r0x0046f264;\n                        }\ncode_r0x0046f26a:\n                        if (((0x20 < uVar3) && (uVar3 != 0x2f)) && (uVar3 != 0x3e)) {\n                            param_1[9] = 5;\n                            param_1[1] = uStack4;\n                        }\n                    }\n                    else {\ncode_r0x0046f264:\n                        if (param_1[9] == 4) goto code_r0x0046f26a;\n                    }\n                    if ((param_1[9] == 5) &&\n                       ((((uVar3 < 0x21 || (uVar3 == 0x2f)) || (uVar3 == 0x3d)) || (uVar3 == 0x3e)))) {\n                        param_1[9] = 6;\n                        param_1[2] = uStack4 - 1;\n                    }\n                    if (((param_1[9] == 6) && (0x20 < uVar3)) && (uVar3 != 0x2f)) {\n                        if (uVar3 == 0x3d) {\n                            param_1[9] = 7;\n                            goto code_r0x0046f10c;\n                        }\n                        fcn.0046ee14();\n                        param_1[9] = 5;\n                        param_1[1] = uStack4;\n                    }\n                    if (((param_1[9] != 7) || (uVar3 < 0x21)) || ((uVar3 == 0x3e || (uVar3 == 0x3d))))\n                    goto code_r0x0046f10c;\n                    param_1[9] = 8;\n                    param_1[3] = uStack4;\n                    if ((uVar3 == 0x22) || (uVar3 == 0x27)) {\n                        param_1[0xc] = 1;\n                        *(param_1 + 0x13) = uVar3;\n                    }\n                    else {\n                        param_1[0xc] = 0;\n                    }\ncode_r0x0046f13f:\n                    if (((uVar3 < 0x21) || (uVar3 == 0x3e)) && (param_1[0xc] == 0)) {\n                        param_1[4] = uStack4 - 1;\n                        fcn.0046ee14();\n                        param_1[9] = 9;\n                    }\n                }\n                if ((((param_1[9] == 9) && (0x20 < uVar3)) && ((uVar3 != 0x2f && ((uVar3 != 0x3e && (uVar3 != 0x22))))))\n                   && (uVar3 != 0x27)) {\n                    param_1[9] = 5;\n                    param_1[1] = uStack4;\n                }\n                if (((param_1[0xe] != 0) &&\n                    ((((iVar5 = param_1[9],  iVar5 == 9 || (iVar5 == 5)) || (iVar5 == 3)) || (iVar5 == 4)))) &&\n                   (uVar3 == 0x2f)) {\n                    if (uStack8 == 0) goto code_r0x0046f1f0;\n                    param_1[0x11a] = 3;\n                }\n                if (((uVar3 == 0x3e) && (param_1[10] == 0)) && (param_1[9] != 1)) {\n                    iVar5 = (**(*param_1 + 4))();\n                    param_1[5] = uStack4 + 1;\n                    if (iVar5 == 0) {\n                        param_1[0xb] = 1;\n                    }\n                    param_1[9] = 1;\n                    param_1[0xe] = 0;\n                }\n            }\n        }\n        else if (((1 < uStack4) && (*(param_1[7] + uStack4) == '>')) && ((param_1[7] + uStack4)[-1] == '-')) {\n            param_1[0xd] = 0;\n            param_1[5] = uStack4 + 1;\n        }\ncode_r0x0046f1f0:\n        if (param_1[0xb] != 0) {\n            return;\n        }\n        uStack4 = uStack4 + 1;\n        cVar2 = *(param_1[7] + uStack4);\n    } while( true );\n}\n",
        "token_count": 2518
    },
    "0040aaa6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.0040aaa6(void)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    uint32_t in_EAX;\n    \n    iVar1 = *(in_EAX + 2);\n    if (iVar1 == 1) {\n        in_EAX = **(in_EAX + 0x18);\n    }\n    else {\n        if (iVar1 == 2) {\n            return CONCAT11(**(in_EAX + 0x18), (*(in_EAX + 0x18))[1]);\n        }\n        if (iVar1 == 4) {\n            uVar2 = **(in_EAX + 0x18);\n            return (uVar2 & 0xff00 | uVar2 << 0x10) << 8 | (uVar2 & 0xff0000 | uVar2 >> 0x10) >> 8;\n        }\n    }\n    return in_EAX;\n}\n",
        "token_count": 206
    },
    "0040ce30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040ce05)\n// WARNING: Removing unreachable block (ram,0x0040ce1d)\n// WARNING: Removing unreachable block (ram,0x0040ce29)\n\nuint fcn.0040ce30(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar4 = 0x1032;\n    iVar2 = (**0x44327c)(param_1, 0x1032);\n    if (iVar2 != 1) {\n        return 0;\n    }\n    iVar2 = (**0x44327c)(uVar4, 0x1004, 0, 0);\n    iVar3 = 0;\n    if (0 < iVar2) {\n        do {\n            iVar1 = fcn.0040c9d8(uVar4, iVar3, 2);\n            if (iVar1 == 2) {\n                return 1;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < iVar2);\n    }\n    return 0;\n}\n",
        "token_count": 255
    },
    "0040dd49": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040dd49(int32_t arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    ushort *puVar1;\n    ushort *puVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    int32_t in_ECX;\n    int32_t iVar7;\n    int32_t iVar8;\n    int16_t iVar9;\n    \n    if (arg_8h == 0x4e) {\n        if ((arg_10h[2] == -3) && (arg_10h[1] == 0x3e9)) {\n            fcn.0040cef9(*arg_10h, arg_10h[3]);\n        }\n        if ((arg_10h[2] == -0x65) && (arg_10h[1] == 0x3e9)) {\n            if (((((arg_10h[5] & 2) != 0) && ((*(arg_10h + 6) & 2) == 0)) || (((arg_10h[6] ^ arg_10h[5]) & 0xf000) != 0)\n                ) && (uVar6 = fcn.0040c9d8(*arg_10h, arg_10h[3], 0xf002),  (uVar6 & 2) != 0)) {\n                fcn.0040a471(0x3ee, (uVar6 & 0xf000) == 0x1000);\n                fcn.0040a471(0x3ef, (uVar6 & 0xf000) == 0x2000);\n            }\n            if (((*(arg_10h + 5) & 2) != 0) && ((*(arg_10h + 6) & 2) == 0)) {\n                fcn.0040a471(0x3eb, arg_10h[3] != 0);\n                fcn.0040a471(0x3ec, arg_10h[3] != *(*(in_ECX + 0x14) + 4) + -1);\n                iVar9 = *(**(in_ECX + 0x14) + arg_10h[10] * 4);\n                *(in_ECX + 0x1c) = 1;\n                (**0x443234)(*(in_ECX + 0x10), 0x3ed, iVar9, 0);\n                *(in_ECX + 0x1c) = 0;\n                return 1;\n            }\n        }\n    }\n    else if (arg_8h == 0x110) {\n        (**0x443258)(*(in_ECX + 0x10), 0x3ed, 0xc5, 3, 0);\n        fcn.0040dbd4(in_ECX);\n        fcn.0041089d(*(in_ECX + 0x10));\n    }\n    else if (arg_8h == 0x111) {\n        iVar9 = arg_ch >> 0x10;\n        if ((*(in_ECX + 0x1c) == arg_8h + -0x111) && (iVar9 == 0x300)) {\n            if (arg_ch != 0x3ed) {\n                return 0;\n            }\n            fcn.0040db08();\n        }\n        if (iVar9 == 0) {\n            if (arg_ch == 0x3f0) {\n                iVar3 = *(*(in_ECX + 0x14) + 4);\n                iVar7 = 0;\n                if (0 < iVar3) {\n                    iVar8 = 0;\n                    do {\n                        puVar1 = **(in_ECX + 0x14) + iVar7 * 4;\n                        puVar1[1] = iVar7;\n                        puVar2 = *(in_ECX + 0x18) + 0xc + iVar8;\n                        iVar7 = iVar7 + 1;\n                        iVar8 = iVar8 + 0x14;\n                        *puVar1 = *puVar2;\n                    } while (iVar7 < iVar3);\n                }\n                fcn.0040dbd4(in_ECX);\n            }\n            pcVar4 = _fcn.00443268;\n            if (arg_ch == 0x3eb) {\n                (*_fcn.00443268)(*(in_ECX + 0x10), 0x3e9);\n                fcn.0040ccaf();\n            }\n            if (arg_ch == 0x3ec) {\n                (*pcVar4)(*(in_ECX + 0x10), 0x3e9);\n                fcn.0040ccf2();\n            }\n            if (arg_ch == 0x3ee) {\n                uVar5 = (*pcVar4)(*(in_ECX + 0x10), 0x3e9, 1);\n                fcn.0040cd2c(uVar5);\n            }\n            if (arg_ch == 0x3ef) {\n                uVar5 = (*pcVar4)(*(in_ECX + 0x10), 0x3e9, 0);\n                fcn.0040cd2c(uVar5);\n            }\n            pcVar4 = *0x443260;\n            if (arg_ch == 2) {\n                (**0x443260)(*(in_ECX + 0x10), 2);\n            }\n            if (arg_ch == 1) {\n                fcn.0040db60();\n                (*pcVar4)(*(in_ECX + 0x10), 1);\n            }\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1276
    },
    "0040df97": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040df97(uint arg_8h, int32_t arg_ch)\n\n{\n    bool bVar1;\n    uint in_EAX;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t unaff_EDI;\n    uint var_4h;\n    \n    bVar1 = false;\n    *(unaff_EDI + 0x18) = in_EAX;\n    piVar2 = fcn.0044b5b1(0xc);\n    if (piVar2 == NULL) {\n        piVar2 = NULL;\n    }\n    else {\n        *piVar2 = 0;\n    }\n    *(unaff_EDI + 0x14) = piVar2;\n    if (*piVar2 != 0) {\n        fcn.0044b5b7(*piVar2);\n        *piVar2 = 0;\n    }\n    piVar2[2] = arg_ch;\n    uVar3 = fcn.0040cb79(arg_ch);\n    piVar2[1] = uVar3;\n    iVar4 = fcn.0044b5b1(-(uVar3 * 4 >> 0x20 != 0) | uVar3 * 4);\n    *piVar2 = iVar4;\n    fcn.0044b531(iVar4, 0, piVar2[1] << 2);\n    fcn.00413c8f(*(*(unaff_EDI + 0x14) + 8));\n    if (*(unaff_EDI + 0x18) == 0) {\n        uVar3 = *(*(unaff_EDI + 0x14) + 4);\n        uVar5 = fcn.0044b5b1(-(uVar3 * 0x14 >> 0x20 != 0) | uVar3 * 0x14);\n        *(unaff_EDI + 0x18) = uVar5;\n        if (0 < uVar3) {\n            iVar4 = 0;\n            do {\n                *(iVar4 + 0xc + *(unaff_EDI + 0x18)) = 0x78;\n                iVar4 = iVar4 + 0x14;\n                uVar3 = uVar3 - 1;\n            } while (uVar3 != 0);\n        }\n        bVar1 = true;\n    }\n    iVar4 = fcn.0040a561();\n    if (iVar4 == 1) {\n        fcn.00413bfa(*(*(unaff_EDI + 0x14) + 8));\n        (**0x44326c)(*(*(unaff_EDI + 0x14) + 8), 0, 0);\n    }\n    (*_fcn.004432a4)(arg_ch);\n    if (bVar1) {\n        fcn.0044b5b7(*(unaff_EDI + 0x18), arg_8h);\n    }\n    return;\n}\n",
        "token_count": 666
    },
    "0040e31f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040e31f(uint arg_8h)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t *unaff_EBX;\n    uint var_35ch;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uchar var_140h [2];\n    uchar var_13eh [2];\n    int32_t var_13ch;\n    int32_t var_138h;\n    uint var_134h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint8_t var_6h;\n    uint var_5h;\n    \n    uVar3 = *(unaff_EBX + 3) + *(unaff_EBX + 0xe);\n    puVar1 = (uVar3 & 0xffff) + unaff_EBX[1];\n    var_5h._0_1_ = *puVar1;\n    var_6h = puVar1[1];\n    uVar3 = uVar3 + 4 & 0xffff;\n    var_ch = *(puVar1 + 2) + *(unaff_EBX + 3) + *(unaff_EBX + 0xe);\n    if (uVar3 < *unaff_EBX) {\n        var_138h = uVar3 + unaff_EBX[1];\n        var_13ch = *unaff_EBX - uVar3;\n        var_134h = 0;\n        var_30h = 0;\n        var_2ch = 0;\n        var_35ch._0_2_ = 0;\n        if (var_5h != 0) {\n            fcn.0040e853(&var_15ch);\n        }\n        if (1 < var_5h) {\n            fcn.0040e853(&var_158h);\n        }\n        if (2 < var_5h) {\n            fcn.0040e853(&var_154h);\n        }\n        if (3 < var_5h) {\n            fcn.0040e853(&var_150h);\n        }\n        if (4 < var_5h) {\n            fcn.0040e853(&var_14ch);\n        }\n        if (5 < var_5h) {\n            fcn.0040e853(&var_148h);\n        }\n        if (6 < var_5h) {\n            fcn.0040e853(&var_144h);\n        }\n        if (7 < var_5h) {\n            fcn.0040e853(var_140h);\n        }\n        if (8 < var_5h) {\n            fcn.0040e853(var_13eh);\n        }\n        if (9 < var_5h) {\n            fcn.0040e853(0);\n        }\n        if (10 < var_5h) {\n            fcn.0040e853(0);\n        }\n        var_138h = (var_ch & 0xffff) + unaff_EBX[1];\n        var_13ch = *unaff_EBX - (var_ch & 0xffff);\n        var_134h = 0;\n        var_30h = 0;\n        var_2ch = 0;\n        iVar2 = fcn.0040e884();\n        if (iVar2 != 0) {\n            var_14h = 0;\n            var_20h = 0;\n            var_1ch = 0;\n            var_10h = 0x100;\n            var_18h = 0;\n            iVar2 = fcn.0040e95e(&var_13ch, &var_20h);\n            if (iVar2 != 0) {\n                iVar2 = var_20h;\n                if (var_20h == 0) {\n                    iVar2 = 0x4434fc;\n                }\n                fcn.00410454(iVar2);\n            }\n            fcn.00411044();\n        }\n        fcn.0040f360(&var_35ch);\n    }\n    return 0;\n}\n",
        "token_count": 990
    },
    "0040fbac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040fbac(uint arg_8h, uint arg_ch, uint *arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t arg_10h_00;\n    int32_t arg_ch_00;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    uchar uStackY8220;\n    uint var_1c18h;\n    uint var_1818h;\n    uint var_1418h;\n    uint var_1018h;\n    uchar var_818h;\n    uint var_817h;\n    uchar var_418h;\n    uint var_417h;\n    uint uStackY56;\n    uint *puStackY52;\n    uint uStackY48;\n    uchar *puStackY44;\n    uint *puStackY40;\n    uint var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0x40fbb9;\n    fcn.0044ba9d();\n    var_10h = arg_10h;\n    var_ch = unaff_EDI;\n    var_8h = unaff_ESI;\n    var_4h = unaff_EBX;\n    iVar1 = fcn.00410151();\n    if (iVar1 != -1) {\n        var_10h = NULL;\n        arg_10h_00 = (*_fcn.004430dc)();\n        if (arg_10h_00 != 0) {\n            arg_ch_00 = fcn.0044b5b1();\n            puStackY40 = 0x40fbfb;\n            fcn.00410ba0(iVar1, arg_ch_00, arg_10h_00);\n            *(arg_ch_00 + arg_10h_00) = 0;\n            var_10h = NULL;\n            var_418h = '\\0';\n            puStackY40 = 0x40fc1d;\n            fcn.0044b531();\n            var_ch = 0;\n            var_8h = 0;\n            var_4h = 0;\n            uStackY8220 = 0;\n            puStackY40 = 0x40fc3d;\n            fcn.0044b531();\n            puStackY40 = 0x40fc52;\n            fcn.0044b531();\n            while( true ) {\n                iVar1 = fcn.0040f6c5(&stack0xfffffbe4, &fcn.0040fbac::var_10h);\n                if (iVar1 == 0) break;\n                if (0 < var_ch) {\n                    puStackY40 = &stack0xfffffbe4;\n                    puStackY44 = 0x40fc76;\n                    iVar1 = fcn.0044b5cf();\n                    if (iVar1 == 0) {\n                        if (var_8h == 0) {\n                            var_8h = 1;\n                        }\n                        else {\n                            var_1c18h._0_1_ = 0;\n                            var_1818h._0_1_ = 0;\n                            var_1418h._0_1_ = 0;\n                            var_1018h._0_1_ = 0;\n                            uStackY8220 = 0;\n                        }\n                        var_4h = 0;\n                    }\n                    else if (var_8h != 0) {\n                        if (var_4h == 0) {\n                            puStackY40 = &stack0xffffdfe4;\ncode_r0x0040fd09:\n                            puStackY44 = 0x40fd0f;\n                            fcn.0044b5c9();\n                        }\n                        else {\n                            if (var_4h == 1) {\n                                puStackY40 = &fcn.0040fbac::var_1418h;\n                                goto code_r0x0040fd09;\n                            }\n                            if (var_4h == 2) {\n                                puStackY40 = &fcn.0040fbac::var_1c18h;\n                                goto code_r0x0040fd09;\n                            }\n                            if (var_4h == 3) {\n                                puStackY40 = &fcn.0040fbac::var_1018h;\n                                goto code_r0x0040fd09;\n                            }\n                            if (var_4h == 4) {\n                                puStackY40 = &fcn.0040fbac::var_1818h;\n                                puStackY44 = 0x40fd2e;\n                                fcn.0044b5c9();\n                                puStackY44 = 0x3ff;\n                                puStackY52 = &fcn.0040fbac::var_817h;\n                                uStackY48 = 0;\n                                var_818h = 0;\n                                uStackY56 = 0x40fd42;\n                                fcn.0044b531();\n                                puStackY40 = arg_ch;\n                                puStackY44 = 0x40fd54;\n                                fcn.00410dcd();\n                                puStackY44 = &stack0xfffff7e4;\n                                puStackY40 = arg_10h;\n                                puStackY52 = 0x40fd71;\n                                fcn.0040f85c(arg_8h, puStackY44, arg_10h, arg_14h);\n                                var_1c18h._0_1_ = 0;\n                                var_1818h._0_1_ = 0;\n                                var_1418h._0_1_ = 0;\n                                var_1018h._0_1_ = 0;\n                            }\n                            else if (4 < var_4h) {\n                                if (var_418h != '\\0') {\n                                    puStackY40 = &stack0xfffffbe4;\n                                    puStackY44 = 0x40fda6;\n                                    iVar1 = fcn.0044b5cf();\n                                    if (iVar1 != 0) goto code_r0x0040fdaf;\n                                }\n                                var_4h = 0;\n                            }\n                        }\ncode_r0x0040fdaf:\n                        var_4h = var_4h + 1;\n                    }\n                }\n                var_ch = var_ch + 1;\n            }\n            puStackY40 = 0x40fdd5;\n            fcn.0044b5b7();\n        }\n        (**0x4430e4)();\n    }\n    return;\n}\n",
        "token_count": 1542
    },
    "0041078a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.0041078a(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    double dVar2;\n    uchar uVar3;\n    uchar uVar4;\n    uchar uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    \n    if (unaff_EDI == 1) {\n        uVar8 = *unaff_ESI;\n    }\n    else {\n        dVar2 = unaff_EDI + -1;\n        iVar6 = fcn.00410764(dVar2 * (param_1 / param_2));\n        if (unaff_EDI + -2 < iVar6) {\n            iVar6 = unaff_EDI + -2;\n        }\n        uVar8 = unaff_ESI[iVar6];\n        uVar1 = (unaff_ESI + iVar6)[1];\n        dVar2 = (param_1 / param_2 - iVar6 / dVar2) * dVar2;\n        uVar3 = fcn.00410764(((uVar1 & 0xff) - (uVar8 & 0xff)) * dVar2 + (uVar8 & 0xff));\n        uVar7 = uVar8 >> 8 & 0xff;\n        uVar4 = fcn.00410764(((uVar1 >> 8 & 0xff) - uVar7) * dVar2 + uVar7);\n        uVar8 = uVar8 >> 0x10 & 0xff;\n        uVar5 = fcn.00410764(((uVar1 >> 0x10 & 0xff) - uVar8) * dVar2 + uVar8);\n        uVar8 = CONCAT21(CONCAT11(uVar5, uVar4), uVar3);\n    }\n    return uVar8;\n}\n",
        "token_count": 433
    },
    "004151ae": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004151ae(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    \n    if (arg_10h == 2) {\n        uVar1 = fcn.00414bfa(arg_8h);\n    }\n    else if (arg_10h == 4) {\n        uVar1 = fcn.00414acb(arg_8h, arg_ch);\n    }\n    else if (arg_10h == 3) {\n        uVar1 = fcn.00414d1d(arg_8h, arg_ch);\n    }\n    else if (arg_10h == 5) {\n        uVar1 = fcn.00414d99(arg_8h, arg_ch);\n    }\n    else if (arg_10h == 6) {\n        uVar1 = fcn.00414ec1(arg_8h, arg_ch);\n    }\n    else if (arg_10h == 1) {\n        uVar1 = fcn.00414c5a(arg_8h, arg_ch);\n    }\n    else if (arg_10h == 7) {\n        uVar1 = fcn.004150ff(arg_8h, arg_ch);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 297
    },
    "00415828": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00415828(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EBX;\n    int32_t *unaff_ESI;\n    int32_t arg_ch;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    arg_ch = 0;\n    var_10h = 0;\n    var_4h = 0;\n    iVar1 = fcn.00413ec4();\n    iVar2 = fcn.0040cdbe(unaff_ESI[0xa5], &var_8h, 0);\n    if (iVar2 != 0) {\n        if ((*(unaff_EBX + 0xc) & 1) == 0) {\n            arg_ch = var_8h + -1;\n        }\n        else {\n            arg_ch = var_8h + 1;\n        }\n    }\n    do {\n        iVar2 = fcn.00414529(&var_8h, arg_ch);\n        if ((iVar2 != 0) && (var_10h = (**(*unaff_ESI + 0x1c))(var_8h),  var_10h != 0)) {\n            fcn.00413ede(0xffffffff, 0, 2);\n            (**0x44327c)(unaff_ESI[0xa5], 0x1013, arg_ch, 0);\n            fcn.00413ede(arg_ch, 3, 3);\n            return var_10h;\n        }\n        if ((*(unaff_EBX + 0xc) & 1) == 0) {\n            arg_ch = arg_ch + -1;\n            if (arg_ch < 0) {\n                arg_ch = iVar1 + -1;\n                goto code_r0x0041589e;\n            }\n        }\n        else {\n            arg_ch = arg_ch + 1;\n            if (iVar1 <= arg_ch) {\n                arg_ch = 0;\ncode_r0x0041589e:\n                var_4h = var_4h + 1;\n            }\n        }\n        if (1 < var_4h) {\n            return var_10h;\n        }\n    } while( true );\n}\n",
        "token_count": 505
    },
    "00416e42": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00416e42(uint32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    int32_t var_4h;\n    \n    if (arg_8h < 0x7c) {\n        if (arg_8h == 0x7b) {\n            if (arg_ch == *(*(in_ECX + 0x694) + 0x294)) {\n                fcn.00416ca7();\n            }\n        }\n        else if (arg_8h == 6) {\n            if (arg_ch == 1) {\n                (*_fcn.00443280)(*(in_ECX + 0x208), 0x428, 0, 0);\n            }\n        }\n        else if (arg_8h == 0xc) {\n            iVar3 = fcn.00410285(arg_10h, 0x4434c4);\n            if (iVar3 != 0) {\n                return 0;\n            }\n        }\n        else if (arg_8h == 0x20) {\n            if (arg_ch == *(in_ECX + 0x214)) {\n                uVar2 = (*_fcn.00443144)(0);\n                uVar2 = (*_fcn.00443220)(uVar2, 0x67);\n                (*_fcn.00443224)(uVar2);\n                return 1;\n            }\n        }\n        else if ((arg_8h == 0x2b) && (*(arg_10h + 0x14) == *(in_ECX + 0x214))) {\n            var_4h = in_ECX;\n            (**0x443044)(*(arg_10h + 0x18), 1);\n            (**0x443048)(*(arg_10h + 0x18), 0xff0000);\n            pcVar1 = *0x44303c;\n            uVar2 = (**0x44303c)(*(arg_10h + 0x18), *(in_ECX + 0x68c));\n            var_14h = 0;\n            uStack16 = 0;\n            uStack12 = 0;\n            var_18h = 0x14;\n            var_10h = 5;\n            (**0x44320c)(*(arg_10h + 0x18), var_4h + 0x48a, 0xffffffff, arg_10h + 0x1c, 4, &var_18h);\n            (*pcVar1)(*(arg_10h + 0x18), uVar2);\n            in_ECX = var_4h;\n        }\n        goto code_r0x00416fec;\n    }\n    if (arg_8h == 0x402) {\n        *(in_ECX + 0x278) = 0;\ncode_r0x00416fde:\n        fcn.00415edb();\n    }\n    else {\n        if (arg_8h != 0x415) {\n            if (arg_8h != 0x416) {\n                if (arg_8h == 0x428) {\n                    fcn.00413ed1();\n                }\n                goto code_r0x00416fec;\n            }\n            (**(**(in_ECX + 0x694) + 100))();\n            (**(**(in_ECX + 0x694) + 0x7c))(0);\n            goto code_r0x00416fde;\n        }\n        fcn.00415f75();\n    }\n    fcn.00415d23();\ncode_r0x00416fec:\n    if ((*(in_ECX + 0x698) != 0) && (arg_8h == *(in_ECX + 0x698))) {\n        if ((*(arg_10h + 0xc) & 8) == 0) {\n            if ((*(arg_10h + 0xc) & 0x40) != 0) {\n                *0x450ebc = 0;\n                fcn.00413ed1();\n            }\n        }\n        else {\n            fcn.00415828();\n        }\n    }\n    uVar2 = fcn.0040a94a(arg_8h, arg_ch, arg_10h);\n    return uVar2;\n}\n",
        "token_count": 1010
    },
    "004172fe": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004172fe(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uStack1828;\n    uint uStack1824;\n    uint uStack1820;\n    uint uStack1816;\n    uint uStack1812;\n    uchar auStack1732 [456];\n    uint uStack1276;\n    uint uStack1252;\n    uint uStack1244;\n    uint uStack1236;\n    int32_t iStack1168;\n    int32_t iStack76;\n    uint uStack72;\n    int32_t iStack52;\n    uchar *puStack36;\n    \n    uStack1812 = 0x417312;\n    iVar3 = fcn.0040c933();\n    if (iVar3 == 0) {\n        uVar4 = 1;\n    }\n    else {\n        uStack1812 = 0x417321;\n        fcn.0041b1d0();\n        uStack1812 = 0x8001;\n        uStack1816 = 0x41732c;\n        (**0x4431b4)();\n        uStack1816 = 0;\n        uStack1820 = 0x411f7e;\n        uStack1824 = 0;\n        *0x450bf0 = 0x11223344;\n        uStack1828 = 0x417345;\n        uStack1828 = (*_fcn.00443144)();\n        (**0x4431d0)();\n        fcn.00410ea3();\n        fcn.004170b9(&stack0xfffff93c);\n        puStack36 = &stack0xfffff8e8;\n        fcn.004111f7(puStack36, arg_10h);\n        iVar3 = fcn.00411378(0x448dcc);\n        if (iVar3 < 0) {\n            fcn.00413a13();\n            iVar3 = fcn.00411378(0x448de8);\n            if ((iVar3 < 0) && ((*(iStack52 + 0x30) < 2 || (iVar3 = fcn.00417234(),  iVar3 == 0)))) {\n                (**0x443438)(0);\n                fcn.0041703d();\n                if (iStack1168 == 3) {\n                    uVar4 = 3;\n                }\n                else {\n                    uVar4 = 5;\n                }\n                (**0x44322c)(uStack1236, uVar4);\n                (**0x443238)(uStack1244);\n                uVar4 = (*_fcn.00443144)(0);\n                uStack1236 = (**0x443274)(uVar4, 0x67);\n                pcVar2 = *0x443210;\n                iVar3 = (**0x443210)(&stack0xfffff8f0, 0, 0, 0);\n                pcVar1 = *0x443208;\n                while (iVar3 != 0) {\n                    if ((((*0x450ebc == 0) || (iVar3 = (*pcVar1)(*0x450ebc, &stack0xfffff8e0),  iVar3 == 0)) &&\n                        (iVar3 = (**0x44328c)(uStack1276, uStack1252, &stack0xfffff8e0),  iVar3 == 0)) &&\n                       (iVar3 = (*pcVar1)(uStack1276, &stack0xfffff8e0),  iVar3 == 0)) {\n                        (**0x443204)(&stack0xfffff8e0);\n                        (**0x4431fc)(&stack0xfffff8dc);\n                    }\n                    iVar3 = (*pcVar2)(&stack0xfffff8e0, 0, 0, 0);\n                }\n                (**0x443434)();\n            }\n        }\n        else {\n            *0x451460 = 0x450458;\n            fcn.00413bb1();\n        }\n        fcn.0044b5b7(uStack72);\n        if (iStack76 != 0) {\n            (**0x44304c)(iStack76);\n            iStack76 = 0;\n        }\n        fcn.00410ec5();\n        fcn.0040b785();\n        fcn.00410ec5();\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 993
    },
    "00418774": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00418774(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    int16_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    ushort uStackY9772;\n    ushort var_1628h;\n    uint var_1626h;\n    ushort var_e28h;\n    uint var_e26h;\n    uint var_628h;\n    uint var_614h;\n    uint var_41ch;\n    uint var_418h;\n    uint var_414h;\n    uchar var_200h;\n    uint var_1ffh;\n    uchar var_100h;\n    uint var_ffh;\n    uint uStackY128;\n    uchar *puStackY124;\n    uint uStackY120;\n    uint uStackY116;\n    uint uStackY112;\n    uint uStackY108;\n    uint *puStackY104;\n    uint uStackY100;\n    uint uStackY96;\n    uint uStackY92;\n    uint *puStackY88;\n    uint uStackY84;\n    uint uStackY80;\n    uint *puStackY76;\n    uint uStackY72;\n    uint *puStackY68;\n    \n    fcn.0044ba9d();\n    if (arg_ch == 0x110) {\n        fcn.0041089d(arg_8h);\n        uStackY9772 = 0;\n        fcn.0044b531();\n        puVar4 = 0x448fa0;\n        puVar5 = &fcn.00418774::var_628h;\n        for (iVar2 = 5; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar5 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0044b531();\n        var_100h = 0;\n        fcn.0044b531();\n        var_200h = 0;\n        puStackY68 = 0x41887e;\n        fcn.0044b531();\n        puStackY68 = 0x7fe;\n        puStackY76 = &fcn.00418774::var_1626h;\n        uStackY72 = 0;\n        var_1628h = 0;\n        uStackY80 = 0x418898;\n        fcn.0044b531();\n        uStackY80 = 0x7fe;\n        puStackY88 = &fcn.00418774::var_e26h;\n        uStackY84 = 0;\n        var_e28h = 0;\n        uStackY92 = 0x4188ad;\n        fcn.0044b531();\n        (**0x443190)();\n        pcVar1 = *0x4431b8;\n        iVar2 = (**0x4431b8)();\n        if (iVar2 != 0) {\n            fcn.00410a29(&stack0xfffffefc, 4);\n        }\n        iVar2 = (*pcVar1)();\n        if (iVar2 != 0) {\n            puStackY68 = 0x41891e;\n            fcn.00410a29(&stack0xfffffdfc, 0);\n        }\n        iVar2 = fcn.004106a5();\n        if (iVar2 == 0) {\n            fcn.00419ce6();\n        }\n        else {\n            fcn.00419d6a();\n        }\n        if ((*0x4514ec != 0) || (*0x4514f0 != 0)) {\n            puStackY68 = &fcn.00418774::var_418h;\n            var_41ch = 0;\n            uStackY72 = 0x41895d;\n            fcn.0044b531();\n            arg_8h_00 = (**0x44319c)();\n            *0x4509cc = 0;\n            puStackY68 = 0x418979;\n            fcn.00419ee8(arg_8h_00);\n            if (*0x4509cc != 0) {\n                puStackY68 = &fcn.00418774::var_41ch;\n                uStackY72 = 0x418999;\n                fcn.0044b575();\n                if (*0x4509cc != 0) {\n                    fcn.0041060f();\n                    puStackY68 = 0x4189bc;\n                    fcn.0044b56f();\n                }\n            }\n        }\n        puStackY68 = *0x450530;\n        puStackY104 = &fcn.00418774::var_628h;\n        uStackY72 = *0x45053c;\n        puStackY76 = *0x45052c;\n        uStackY80 = *0x450514;\n        uStackY84 = *0x450518;\n        puStackY88 = *0x450520;\n        uStackY92 = *0x450524;\n        uStackY96 = *0x45051c;\n        uStackY100 = *0x450528;\n        uStackY108 = *0x450754;\n        puStackY124 = &stack0xffffd9d4;\n        uStackY112 = *0x450748;\n        uStackY116 = 0x448fb8;\n        uStackY120 = 0x800;\n        uStackY128 = 0x418a2b;\n        fcn.0044b51f();\n        puStackY68 = arg_8h;\n        uStackY72 = 0x418a44;\n        (*_fcn.0044323c)();\n        uStackY72 = 0x3ea;\n        puStackY76 = arg_8h;\n        uStackY80 = 0x418a4e;\n        uStackY80 = (*_fcn.00443268)();\n        uStackY84 = 0x418a55;\n        (*_fcn.004432a4)();\n    }\n    else if ((arg_ch == 0x111) && (arg_10h >> 0x10 == 0)) {\n        iVar3 = arg_10h;\n        if ((iVar3 == 1) || (iVar3 == 2)) {\n            (**0x443260)();\n        }\n        if (iVar3 == 3) {\n            uStackY72 = (*_fcn.00443268)();\n            pcVar1 = *0x44327c;\n            (**0x44327c)();\n            (*pcVar1)();\n            puStackY68 = 0xb1;\n            puStackY76 = 0x418805;\n            (*pcVar1)();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1507
    },
    "0041b27d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.0041b27d(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int16_t *unaff_EBX;\n    uint uVar3;\n    uint var_24ah;\n    uint var_44h;\n    uint var_4h;\n    \n    fcn.0041b1d0();\n    if ((*0x4514f4 != NULL) &&\n       ((iVar1 = fcn.00410681(),  *(iVar1 + 0x10) != 1 || (((in_EAX != 0x19 && (in_EAX != 0x17)) && (in_EAX != 0x16)))))\n       ) {\n        uVar2 = (**0x4514f4)(0);\n        return uVar2;\n    }\n    fcn.0044b531(&var_24ah, 0, 0x206);\n    if (((in_EAX == 0x19) || (in_EAX == 0x17)) || (in_EAX == 0x16)) {\n        uVar3 = 0x80000002;\n    }\n    else {\n        uVar3 = 0x80000001;\n    }\n    iVar1 = fcn.0041ab74(uVar3, 0x4496e0, &var_4h);\n    if (iVar1 == 0) {\n        fcn.0041b1ff();\n        fcn.0041ab8e(var_4h, &var_44h);\n        (*_fcn.00443010)(var_4h);\n    }\n    fcn.0044b56f();\n    return *unaff_EBX != 0;\n}\n",
        "token_count": 378
    },
    "0041bd57": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041bd57(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    \n    if (*0x44f020 == 0) {\n        fcn.00449cb2(4);\n    }\n    fcn.0044b531(0x451600, 0, 0x28);\n    if (*0x44f00c != 0) {\n        *0x451600 = fcn.0041bc38(3);\n    }\n    if (((*0x44f0a0 == NULL) || (*0x44f0a4 < 100)) || (*0x44f0a8 < 1)) {\n        *0x451618 = NULL;\n        *0x44f0a0 = NULL;\n        *0x44f0a4 = 0;\n        *0x44f0a8 = 0;\n    }\n    else {\n        uVar2 = *0x44f0a4 & 0xfffffff8;\n        *0x451620 = *0x44f0a8;\n        iVar1 = *0x44f0a8 + -1;\n        *0x45161c = *0x44f0a0;\n        puVar3 = *0x44f0a0;\n        *0x451618 = *0x44f0a0;\n        *0x44f0a4 = uVar2;\n        if (0 < iVar1) {\n            do {\n                iVar1 = iVar1 + -1;\n                *0x451618 = puVar3 + uVar2;\n                *puVar3 = *0x451618;\n                puVar3 = *0x451618;\n            } while (iVar1 != 0);\n        }\n        **0x451618 = 0;\n        *0x451618 = *0x451618 + 1;\n    }\n    if (((*0x44f0ac == 0) || (*0x44f0b0 < 0x200)) || (*0x44f0b4 < 1)) {\n        *0x44f0ac = 0;\n        *0x44f0b0 = 0;\n        *0x44f0b4 = 0;\n    }\n    (**0x44f034)(*0x44f03c);\n    return;\n}\n",
        "token_count": 524
    },
    "0041cd5b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0041cd5b(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EDI;\n    \n    if (*(unaff_EDI + 8) != 0) {\n        *(*(unaff_EDI + 8) + *(unaff_EDI + 0xc)) = 0;\n        if ((*(unaff_EDI + 0x19) != '\\0') && (*(unaff_EDI + 8) == *(unaff_EDI + 4))) {\n            if (*(unaff_EDI + 0x19) == '\\x01') {\n                iVar1 = fcn.0041c31d(*(unaff_EDI + 0xc) + 1);\n            }\n            else {\n                iVar1 = fcn.0041bf75(*(unaff_EDI + 0xc) + 1);\n            }\n            *(unaff_EDI + 8) = iVar1;\n            if (iVar1 == 0) {\n                *(unaff_EDI + 0x18) = 1;\n            }\n            else {\n                fcn.0044b575(iVar1, *(unaff_EDI + 4), *(unaff_EDI + 0xc) + 1);\n            }\n        }\n    }\n    return *(unaff_EDI + 8);\n}\n",
        "token_count": 286
    },
    "0041cdb7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041cdb7(void)\n\n{\n    uint *unaff_ESI;\n    \n    if (unaff_ESI[2] != unaff_ESI[1]) {\n        if (*(unaff_ESI + 0x19) == '\\x01') {\n            fcn.0041c16b(*unaff_ESI);\n        }\n        else {\n            fcn.0041c110(unaff_ESI[2]);\n        }\n    }\n    unaff_ESI[2] = 0;\n    return;\n}\n",
        "token_count": 114
    },
    "0041e287": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041e287(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    pcVar2 = *0x443094;\n    uVar1 = *(arg_8h + 0xc);\n    var_4h = 0;\n    if (3 < uVar1) {\n        (**0x443094)(*(arg_8h + 8), 0x40000002, 0, 0x1fe, 0);\n        if (arg_ch == 1) {\n            iVar3 = fcn.0041dffb();\n            if (iVar3 == 0) {\n                var_4h = 0x80a;\n            }\n        }\n    }\n    if (1 < uVar1) {\n        (*pcVar2)(*(arg_8h + 8), 0x40000001, 0, 1, 0);\n    }\n    if ((arg_ch == 0) && (uVar1 != 0)) {\n        fcn.0041e07f();\n    }\n    if (2 < uVar1) {\n        (*pcVar2)(*(arg_8h + 8), 0x40000000, 0, 1, 0);\n    }\n    *(arg_8h + 0xc) = arg_ch;\n    return var_4h;\n}\n",
        "token_count": 326
    },
    "0041e39a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041e39a(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_ESI;\n    uint var_14h;\n    uint var_ch;\n    \n    uVar2 = 1;\n    if (arg_8h == 3) {\n        uVar2 = 3;\n    }\n    fcn.0044b531(&var_14h, 0, 0x14);\n    var_ch = arg_ch;\n    if (arg_8h == 1) {\n        iVar1 = (**0x4430d4)(*(unaff_ESI + 0x10));\n    }\n    else {\n        iVar1 = (**0x4430c4)(*(unaff_ESI + 0x10), uVar2, 0, arg_10h, 0, &var_14h);\n    }\n    if (iVar1 == 0) {\n        uVar2 = (*_fcn.0044310c)();\n        *(unaff_ESI + 0x38) = uVar2;\n        uVar2 = 5;\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 282
    },
    "0041f49f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041f49f(int32_t arg_8h, int32_t arg_ch, int32_t **arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    int32_t *piVar2;\n    uint var_4h;\n    \n    piVar2 = NULL;\n    if ((unaff_ESI[10] == 0) && (arg_ch != 0)) {\n        iVar1 = (**0x44f070)(unaff_ESI[6] + 0x24 + unaff_ESI[5], unaff_ESI[7]);\n        if (iVar1 == 0) {\n            return 7;\n        }\n        (*_fcn.0044f074)(iVar1, unaff_ESI[4]);\n        unaff_ESI[10] = iVar1;\n    }\n    if ((unaff_ESI[7] == 0) || (*unaff_ESI == 0)) {\n        iVar1 = 1;\n    }\n    else {\n        iVar1 = 0;\n    }\n    arg_ch = (iVar1 + 1) * arg_ch;\n    if ((unaff_ESI[10] == 0) || (piVar2 = (**0x44f07c)(unaff_ESI[10], arg_8h, arg_ch),  piVar2 == NULL)) {\n        if (arg_ch != 1) goto code_r0x0041f5cf;\n        for (iVar1 = unaff_ESI[2]; (iVar1 != 0 && ((*(iVar1 + 0x16) != 0 || ((*(iVar1 + 0x14) & 4) != 0))));\n            iVar1 = *(iVar1 + 0x20)) {\n        }\n        unaff_ESI[2] = iVar1;\n        if (iVar1 == 0) {\n            iVar1 = unaff_ESI[1];\n            if (iVar1 != 0) {\n                do {\n                    if (*(iVar1 + 0x16) == 0) break;\n                    iVar1 = *(iVar1 + 0x20);\n                } while (iVar1 != 0);\n                if (iVar1 != 0) goto code_r0x0041f560;\n            }\n        }\n        else {\ncode_r0x0041f560:\n            iVar1 = (*unaff_ESI[8])(unaff_ESI[9], iVar1);\n            if ((iVar1 != 0) && (iVar1 != 5)) {\n                return iVar1;\n            }\n        }\n        piVar2 = (**0x44f07c)(unaff_ESI[10], arg_8h, 2);\n        if (piVar2 == NULL) goto code_r0x0041f5cf;\n    }\n    if (*piVar2 == 0) {\n        fcn.0044b531(piVar2, 0, 0x24);\n        *piVar2 = piVar2 + 9;\n        iVar1 = piVar2 + 9 + unaff_ESI[5];\n        piVar2[1] = iVar1;\n        fcn.0044b531(iVar1, 0, unaff_ESI[6]);\n        piVar2[6] = unaff_ESI;\n        piVar2[3] = arg_8h;\n    }\n    if (*(piVar2 + 0x16) == 0) {\n        unaff_ESI[3] = unaff_ESI[3] + 1;\n    }\n    *(piVar2 + 0x16) = *(piVar2 + 0x16) + 1;\n    if (arg_8h == 1) {\n        unaff_ESI[0xb] = piVar2;\n    }\ncode_r0x0041f5cf:\n    *arg_10h = piVar2;\n    if ((piVar2 == NULL) && (arg_ch != 0)) {\n        return 7;\n    }\n    return 0;\n}\n",
        "token_count": 879
    },
    "0041f614": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041f614(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x14) & 2) != 0) {\n        in_EAX = fcn.0041f402();\n    }\n    iVar1 = *(in_EAX + 0x18);\n    *(iVar1 + 0xc) = *(iVar1 + 0xc) + -1;\n    if (*(in_EAX + 0xc) == 1) {\n        *(iVar1 + 0x2c) = 0;\n    }\n    (*_fcn.0044f080)(*(iVar1 + 0x28), in_EAX, 1);\n    return;\n}\n",
        "token_count": 164
    },
    "0042016e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0042016e(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = *param_1;\n    if (iVar1 == 0) {\n        return iVar1;\n    }\n    if (param_2 == 1) {\n        *param_1 = *(iVar1 + 8);\n        *(iVar1 + 8) = 0;\n        *(iVar1 + 0xc) = 0;\n        return iVar1;\n    }\n    iVar2 = fcn.0042016e(param_1, param_2 + -1);\n    iVar1 = *param_1;\n    if (iVar1 != 0) {\n        *(iVar1 + 0xc) = iVar2;\n        *param_1 = *(iVar1 + 8);\n        uVar3 = fcn.0042016e(param_1, param_2 + -1);\n        *(iVar1 + 8) = uVar3;\n        iVar2 = iVar1;\n    }\n    return iVar2;\n}\n",
        "token_count": 248
    },
    "00420a9b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00420a9b(void)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    fcn.0041f3d2(*(in_EAX + 0x38));\n    *(in_EAX + 0x38) = 0;\n    fcn.00420a0d();\n    if (*(in_EAX + 0xac) == 0) {\n        if (*(in_EAX + 4) == '\\0') {\n            piVar1 = *(in_EAX + 0x3c);\n            if (*piVar1 == 0) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = (**(*piVar1 + 0x30))(piVar1);\n            }\n            if (((uVar2 & 0x800) == 0) || ((*(in_EAX + 5) & 5) != 1)) {\n                fcn.0041b9d3();\n            }\n            iVar3 = fcn.00420348();\n            if ((iVar3 != 0) && (*(in_EAX + 0xf) == '\\x06')) {\n                *(in_EAX + 0x10) = 5;\n            }\n            *(in_EAX + 0x11) = 0;\n            *(in_EAX + 0xf) = 0;\n        }\n    }\n    else {\n        fcn.0042442a();\n        *(in_EAX + 0xf) = 0;\n    }\n    if (*(in_EAX + 0x28) != 0) {\n        fcn.004209ec();\n        *(in_EAX + 0x11) = *(in_EAX + 0xc);\n        *(in_EAX + 0xf) = 0;\n        *(in_EAX + 0x28) = 0;\n    }\n    *(in_EAX + 0x48) = 0;\n    *(in_EAX + 0x4c) = 0;\n    *(in_EAX + 0x50) = 0;\n    *(in_EAX + 0x54) = 0;\n    *(in_EAX + 0x12) = 0;\n    return;\n}\n",
        "token_count": 503
    },
    "00420b59": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00420b59(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iStack16;\n    int32_t iStack12;\n    \n    iStack16 = 0;\n    iStack12 = 0;\n    if ((*(in_EAX + 0xf) < 2) && (*(in_EAX + 4) < 2)) {\n        return 0;\n    }\n    fcn.00420a0d();\n    if (*in_EAX[0x10] != 0) {\n        if (*in_EAX[0x10] == 0x444378) {\n            fcn.0041b9d3();\n        }\n        else {\n            cVar1 = *(in_EAX + 5);\n            if (cVar1 == '\\x03') {\n                if ((in_EAX[0x12] | in_EAX[0x13]) == 0) {\n                    iStack16 = 0;\n                }\n                else {\n                    iStack16 = fcn.0041ba18(0, 0);\n                }\n            }\n            else {\n                if ((cVar1 != '\\x01') && ((*(in_EAX + 1) == '\\0' || (cVar1 == '\\x05')))) {\n                    fcn.0041b9d3();\n                    if (*(in_EAX + 3) == '\\0') {\n                        iStack16 = (**(*in_EAX + 0x1c))(*in_EAX, in_EAX[0x25], 0);\n                    }\n                    goto code_r0x00420c04;\n                }\n                iStack16 = fcn.004204e7(arg_8h);\n            }\n            in_EAX[0x13] = 0;\n            in_EAX[0x12] = 0;\n        }\n    }\ncode_r0x00420c04:\n    fcn.0041f3d2(in_EAX[0xe]);\n    piVar2 = in_EAX[0x2a];\n    in_EAX[0xe] = 0;\n    in_EAX[0xb] = 0;\n    while (*piVar2 != 0) {\n        fcn.0041f65a();\n    }\n    fcn.0041f67a();\n    if (in_EAX[0x2b] != 0) {\n        iStack12 = fcn.004245d7();\n    }\n    if ((*(in_EAX + 1) == '\\0') && ((in_EAX[0x2b] == 0 || (iVar3 = fcn.00424ad1(0),  iVar3 != 0)))) {\n        iStack12 = fcn.00420348();\n        *(in_EAX + 0x11) = 0;\n    }\n    *(in_EAX + 0xf) = 1;\n    *(in_EAX + 0x12) = 0;\n    if (iStack16 == 0) {\n        iStack16 = iStack12;\n    }\n    return iStack16;\n}\n",
        "token_count": 698
    },
    "0042144f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0042144f(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *unaff_EBX;\n    int32_t unaff_ESI;\n    uint unaff_EDI;\n    ulong uVar3;\n    int32_t iStack20;\n    uint uStack16;\n    int32_t iStack12;\n    \n    iStack12 = unaff_EBX[3];\n    iVar1 = unaff_EBX[4];\n    uStack16 = *(iVar1 + 0x80);\n    iStack20 = 0;\n    if (**(iVar1 + 0x3c) == 0) {\n        fcn.0044b531(*unaff_EBX, 0, uStack16);\n        iVar2 = 0;\n    }\n    else {\n        if ((*(iVar1 + 0xac) == 0) ||\n           ((iVar2 = fcn.00424451(iStack12, &iStack20, uStack16, *unaff_EBX),  iVar2 == 0 && (iStack20 == 0)))) {\n            uVar3 = fcn.0044b8cd(iStack12 + -1, 0, *(iVar1 + 0x80), *(iVar1 + 0x80) >> 0x1f);\n            iVar2 = fcn.0041b9e4(*unaff_EBX, unaff_EDI, uVar3);\n            if (iVar2 == 0x20a) {\n                iVar2 = 0;\n            }\n        }\n        if (unaff_ESI == 1) {\n            if (iVar2 == 0) {\n                fcn.0044b575(iVar1 + 100, *unaff_EBX + 0x18, 0x10);\n            }\n            else {\n                fcn.0044b531(iVar1 + 100, 0xff);\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 430
    },
    "00421520": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00421520(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.004227ac(arg_8h, arg_ch);\n    if (iVar1 != 0) {\n        if (*(iVar1 + 0x16) == 1) {\n            fcn.0041f614();\n        }\n        else {\n            var_4h = fcn.0042144f();\n            if (var_4h == 0) {\n                (**(arg_8h + 0xa0))(iVar1);\n            }\n            fcn.004227d5();\n        }\n    }\n    for (iVar1 = *(arg_8h + 0x58); iVar1 != 0; iVar1 = *(iVar1 + 0x2c)) {\n        *(iVar1 + 0x10) = 1;\n    }\n    return var_4h;\n}\n",
        "token_count": 227
    },
    "004215fa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004215fa(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    int32_t unaff_EBX;\n    uint var_4h;\n    \n    if (in_EAX[3] == 1) {\n        fcn.004215c9();\n    }\n    iVar2 = fcn.0042472c(*(unaff_EBX + 0x80), in_EAX, arg_8h, arg_ch, arg_10h);\n    if (iVar2 == 0) {\n        puVar1 = *(unaff_EBX + 0x58);\n        while (puVar1 != NULL) {\n            fcn.00428d43(*in_EAX);\n            in_EAX = in_EAX[2];\n            puVar1 = in_EAX;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 210
    },
    "00422477": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00422477(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_EDI;\n    uint var_1ch;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    if (unaff_EDI[0x2b] == 0) {\n        if (*(unaff_EDI + 0xf) != '\\0') {\ncode_r0x0042264a:\n            if (unaff_EDI[0x2b] != 0) goto code_r0x00422652;\n            goto code_r0x0042265c;\n        }\n        var_8h = 1;\n        if ((*(unaff_EDI + 7) == '\\0') && (var_4h = fcn.00421b06(1),  var_4h != 0)) goto code_r0x0042267a;\n        if (*(unaff_EDI + 4) < 2) {\n            var_4h = fcn.0042232c(&var_8h);\n        }\n        if (var_4h != 0) goto code_r0x0042267a;\n        if (var_8h == 0) {\ncode_r0x004225b0:\n            if ((*(unaff_EDI + 3) == '\\0') &&\n               ((unaff_EDI[0x16] != 0 ||\n                ((*(unaff_EDI[0x2a] + 0x28) != 0 && (iVar1 = (**0x44f078)(*(unaff_EDI[0x2a] + 0x28)),  0 < iVar1)))))) {\n                var_8h = 0;\n                var_4h = fcn.004216a3(&var_8h);\n                if (var_4h != 0) goto code_r0x0042267a;\n                if (var_8h == 0) {\n                    fcn.0044b531(&var_1ch, 0, 0x10);\n                }\n                else {\n                    var_4h = (**(*unaff_EDI[0xf] + 8))(unaff_EDI[0xf], &var_1ch, 0x10, 0x18, 0);\n                    if (var_4h != 0) goto code_r0x0042267a;\n                }\n                iVar1 = fcn.0044b5ab(unaff_EDI + 0x19, &var_1ch, 0x10);\n                if (iVar1 != 0) {\n                    fcn.004209ec();\n                }\n            }\n            var_4h = fcn.00421720();\n            goto code_r0x0042264a;\n        }\n        var_4h = fcn.00420364();\n        if (var_4h != 0) goto code_r0x0042267a;\n        if (((*unaff_EDI[0x10] == 0) &&\n            (var_4h = (**(*unaff_EDI + 0x20))(*unaff_EDI, unaff_EDI[0x25], 0, &var_ch),  var_4h == 0)) && (var_ch != 0))\n        {\n            var_8h = 0;\n            var_4h = fcn.0041ba2a(unaff_EDI[0x25], unaff_EDI[0x10], &var_8h);\n            if ((var_4h == 0) && ((var_8h & 1) != 0)) {\n                var_4h = fcn.0044a966(0x9b17);\n                fcn.0041b9d3();\n            }\n        }\n        if (*unaff_EDI[0x10] == 0) {\n            if (*(unaff_EDI + 1) == '\\0') {\n                fcn.00420348();\n            }\ncode_r0x00422598:\n            if (var_4h == 0) goto code_r0x004225b0;\n        }\n        else {\n            var_4h = fcn.00421b32();\n            if (var_4h == 0) {\n                var_4h = fcn.00421216(1);\n                *(unaff_EDI + 0xf) = 0;\n                goto code_r0x00422598;\n            }\n        }\n        fcn.00420b3f();\n    }\n    else {\ncode_r0x00422652:\n        var_4h = fcn.00421653(unaff_EDI);\ncode_r0x0042265c:\n        if (*(unaff_EDI + 0xf) == '\\0') {\n            if (var_4h != 0) goto code_r0x0042267a;\n            var_4h = fcn.004216a3(unaff_EDI + 6);\n        }\n    }\n    if (var_4h == 0) {\n        *(unaff_EDI + 0xf) = 1;\n        return 0;\n    }\ncode_r0x0042267a:\n    fcn.00420a9b();\n    return var_4h;\n}\n",
        "token_count": 1166
    },
    "00422ddf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00422ddf(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    \n    uVar1 = *(arg_8h + 0xf);\n    if (uVar1 == 6) {\n        uVar2 = *(arg_8h + 0x28);\n    }\n    else if (uVar1 < 2) {\n        uVar2 = 0;\n    }\n    else {\n        if (*(arg_8h + 0xac) == 0) {\n            if ((**(arg_8h + 0x40) == 0) || (uVar1 == 2)) {\n                uVar2 = fcn.00420b59(0);\n                if (2 < uVar1) {\n                    *(arg_8h + 0x28) = 4;\n                    *(arg_8h + 0xf) = 6;\n                    return uVar2;\n                }\n            }\n            else {\n                fcn.00421216(0);\n            }\n        }\n        else {\n            fcn.00422f53(2, 0xffffffff);\n            fcn.00420b59(*(arg_8h + 0x12));\n        }\n        uVar2 = fcn.00420b3f();\n    }\n    return uVar2;\n}\n",
        "token_count": 293
    },
    "00422f53": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00422f53(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = *(unaff_ESI + 0x28);\n    if ((var_8h == 0) && (arg_ch < *(unaff_ESI + 0x60))) {\n        arg_ch = (arg_8h != 1) + arg_ch;\n        if (arg_ch < *(unaff_ESI + 0x60)) {\n            iVar1 = arg_ch * 0x30;\n            var_4h = arg_ch;\n            do {\n                fcn.0041f3d2(*(iVar1 + 0x10 + *(unaff_ESI + 0x5c)));\n                var_4h = var_4h + 1;\n                iVar1 = iVar1 + 0x30;\n            } while (var_4h < *(unaff_ESI + 0x60));\n        }\n        *(unaff_ESI + 0x60) = arg_ch;\n        if (arg_8h == 1) {\n            if ((arg_ch == 0) && (**(unaff_ESI + 0x44) != 0)) {\n                if (**(unaff_ESI + 0x44) == 0x444378) {\n                    var_8h = fcn.0041ba18(0, 0);\n                }\n                *(unaff_ESI + 0x34) = 0;\n            }\n        }\n        else {\n            iVar1 = 0;\n            if ((*(unaff_ESI + 0xac) != 0) || (**(unaff_ESI + 0x40) != 0)) {\n                if (arg_ch != 0) {\n                    iVar1 = *(unaff_ESI + 0x5c) + -0x30 + arg_ch * 0x30;\n                }\n                var_8h = fcn.0042178b(iVar1);\n            }\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 482
    },
    "004235f1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004235f1(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_ch = 0;\n    var_4h = 0;\n    iVar2 = fcn.00423521(&var_4h, &var_ch, &var_8h);\n    iVar4 = var_ch;\n    if (iVar2 == 0) {\n        iVar5 = in_EAX - var_8h;\n        if (iVar5 == 1) {\n            fcn.0044b531(var_ch + 4, 0, (var_4h - var_ch) + 0x3ffc);\n        }\n        piVar1 = iVar4 + iVar5 * 4;\n        if (*piVar1 != 0) {\n            fcn.00423572();\n        }\n        uVar3 = arg_ch * 0x17f;\n        iVar4 = iVar5;\n        while (uVar3 = uVar3 & 0x1fff,  *(var_4h + uVar3 * 2) != 0) {\n            if (iVar4 == 0) {\n                iVar4 = fcn.0044a92e(0xa6e7);\n                return iVar4;\n            }\n            uVar3 = uVar3 + 1;\n            iVar4 = iVar4 + -1;\n        }\n        *piVar1 = arg_ch;\n        *(var_4h + uVar3 * 2) = iVar5;\n    }\n    return iVar2;\n}\n",
        "token_count": 418
    },
    "00424bfa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00424bfa(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EDI;\n    \n    iVar2 = *(in_EAX + 8);\n    while( true ) {\n        if (iVar2 == 0) {\n            return 0;\n        }\n        if (((iVar2 != param_1) && (((unaff_EDI == 0 || (*(iVar2 + 0x14) == unaff_EDI)) && (*(iVar2 + 0x53) == '\\x01')))\n            ) && (iVar1 = fcn.00424b51(),  iVar1 != 0)) break;\n        iVar2 = *(iVar2 + 8);\n    }\n    return iVar1;\n}\n",
        "token_count": 179
    },
    "004255ea": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004255ea(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *unaff_ESI;\n    int32_t unaff_EDI;\n    uint *var_4h;\n    \n    iVar2 = fcn.0042268e(*unaff_ESI, unaff_EDI, &var_4h, arg_ch);\n    if (iVar2 == 0) {\n        iVar2 = var_4h[1];\n        uVar1 = *var_4h;\n        *(iVar2 + 0x44) = var_4h;\n        *(iVar2 + 0x40) = uVar1;\n        *(iVar2 + 0x3c) = unaff_ESI;\n        *(iVar2 + 0x48) = unaff_EDI;\n        *(iVar2 + 5) = (unaff_EDI != 1) - 1U & 100;\n        *arg_8h = iVar2;\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 243
    },
    "00425630": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00425630(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint *unaff_ESI;\n    int32_t unaff_EDI;\n    \n    puVar3 = fcn.004227ac(*unaff_ESI, unaff_EDI);\n    if (puVar3 != NULL) {\n        iVar1 = puVar3[1];\n        uVar2 = *puVar3;\n        *(iVar1 + 0x44) = puVar3;\n        *(iVar1 + 0x40) = uVar2;\n        *(iVar1 + 0x3c) = unaff_ESI;\n        *(iVar1 + 0x48) = unaff_EDI;\n        *(iVar1 + 5) = (unaff_EDI != 1) - 1U & 100;\n        return iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 205
    },
    "00425ddb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00425ddb(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *unaff_EDI;\n    \n    iVar2 = unaff_EDI[1];\n    fcn.0041f3d2(*(iVar2 + 0x3c));\n    *(iVar2 + 0x3c) = 0;\n    if ((*(unaff_EDI + 2) != '\\0') && (1 < *(*unaff_EDI + 0x8c))) {\n        *(unaff_EDI + 2) = 1;\n        return;\n    }\n    if (*(unaff_EDI + 2) != '\\0') {\n        piVar1 = iVar2 + 0x28;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            *(iVar2 + 0x15) = 0;\n        }\n    }\n    *(unaff_EDI + 2) = 0;\n    fcn.00425bd5();\n    return;\n}\n",
        "token_count": 235
    },
    "00425e1b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00425e1b(void)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    if (*(in_EAX + 8) != '\\0') {\n        if (*(in_EAX + 8) == '\\x02') {\n            piVar1 = *(in_EAX + 4);\n            iVar2 = *piVar1;\n            if (*(iVar2 + 0x28) != 0) {\n                return *(iVar2 + 0x28);\n            }\n            if (((*(iVar2 + 0xf) == '\\x02') && (*(iVar2 + 4) != '\\0')) && (*(iVar2 + 5) == '\\x01')) {\n                *(iVar2 + 0xf) = 1;\n            }\n            else {\n                fcn.00420b59(*(iVar2 + 0x12));\n                iVar2 = fcn.00420b3f();\n                if (iVar2 != 0) {\n                    return iVar2;\n                }\n            }\n            *(piVar1 + 0x15) = 1;\n        }\n        fcn.00425ddb();\n    }\n    return 0;\n}\n",
        "token_count": 264
    },
    "00426073": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00426073(void)\n\n{\n    int32_t in_EAX;\n    uint *unaff_EDI;\n    \n    if (*(in_EAX + 0x53) == '\\x01') {\n        fcn.0042604d();\n        *unaff_EDI = *(in_EAX + 0x20);\n        unaff_EDI[1] = *(in_EAX + 0x24);\n    }\n    else {\n        *unaff_EDI = 0;\n        unaff_EDI[1] = 0;\n    }\n    return 0;\n}\n",
        "token_count": 126
    },
    "00426418": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00426418(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t unaff_ESI;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    iVar2 = *(unaff_ESI + 0x5a);\n    if (*(unaff_ESI + 0x5a) < 0x13) {\n        iVar1 = fcn.00425663();\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        *(unaff_ESI + 0x88 + iVar2 * 4) = in_ECX;\n        *(unaff_ESI + 0x5e + iVar2 * 2) = 0;\n        *(unaff_ESI + 0x5a) = *(unaff_ESI + 0x5a) + 1;\n        *(unaff_ESI + 0x3a) = 0;\n        *(unaff_ESI + 0x52) = 0;\n        if ((*(in_ECX + 0x10) != 0) && (*(in_ECX + 2) == *(*(unaff_ESI + 0x84 + iVar2 * 4) + 2))) {\n            return 0;\n        }\n        uVar3 = 0xc1e7;\n    }\n    else {\n        uVar3 = 0xc1dc;\n    }\n    iVar2 = fcn.0044a92e(uVar3);\n    return iVar2;\n}\n",
        "token_count": 347
    },
    "004264a9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.004264a9(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    bool bVar3;\n    uint uVar4;\n    \n    iVar2 = 0;\n    if (1 < *(in_EAX + 0x53)) {\n        if (*(in_EAX + 0x53) == 3) {\n            return *(in_EAX + 0x4c);\n        }\n        fcn.00424c2b();\n    }\n    if (*(in_EAX + 0x5a) < 0) {\n        iVar2 = fcn.00425663();\n        bVar3 = false;\n        if (iVar2 != 0) goto code_r0x00426590;\n        *(in_EAX + 0x5a) = 0;\n        if ((*(in_EAX + 0x10) == 0) != *(*(in_EAX + 0x84) + 2)) {\n            uVar4 = 0xc253;\n            goto code_r0x00426563;\n        }\n    }\n    else {\n        iVar1 = 1;\n        if (0 < *(in_EAX + 0x5a)) {\n            do {\n                fcn.004256a8();\n                iVar1 = iVar1 + 1;\n            } while (iVar1 <= *(in_EAX + 0x5a));\n        }\n        *(in_EAX + 0x5a) = 0;\n    }\n    iVar1 = *(in_EAX + 0x84);\n    *(in_EAX + 0x5c) = 0;\n    *(in_EAX + 0x3a) = 0;\n    *(in_EAX + 0x51) = 0;\n    *(in_EAX + 0x52) = 0;\n    if ((*(iVar1 + 0x10) == 0) && (*(iVar1 + 3) == '\\0')) {\n        if (*(iVar1 + 0x48) == 1) {\n            uVar4 = fcn.0041d7cc();\n            *(in_EAX + 0x53) = 1;\n            iVar2 = fcn.00426418(uVar4);\n            return iVar2;\n        }\n        uVar4 = 0xc268;\ncode_r0x00426563:\n        iVar2 = fcn.0044a92e(uVar4);\n        return iVar2;\n    }\n    bVar3 = *(iVar1 + 0x10) != 0;\ncode_r0x00426590:\n    *(in_EAX + 0x53) = bVar3;\n    return iVar2;\n}\n",
        "token_count": 591
    },
    "00428599": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00428599(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (*(*(arg_8h + 4) + 8) == 0) {\n        iVar1 = fcn.004255ea(&var_4h, 0);\n        if (iVar1 == 0) {\n            iVar1 = fcn.00428564(0);\n            if (iVar1 == 0) {\n                *arg_ch = 0;\n                if (in_EAX < 2) {\n                    fcn.0042552f(9);\n                }\n                else {\n                    fcn.004270a7();\n                }\n            }\n            fcn.004256a8();\n        }\n    }\n    else {\n        iVar1 = 0x106;\n    }\n    return iVar1;\n}\n",
        "token_count": 212
    },
    "00429799": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00429799(int32_t param_1, uint8_t param_2)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    \n    if ((param_1 != 0) && (uVar1 = *(param_1 + 0x1c),  (uVar1 & 1) == 0)) {\n        *(param_1 + 0x1c) = uVar1 >> 3 & 2 | uVar1;\n        if ((uVar1 & 0x4000) != 0) {\n            fcn.00428ed0();\n        }\n        if ((*(param_1 + 0x1c) & 2) == 0) {\n            fcn.00428f63();\n        }\n        else {\n            if ((((param_2 & 8) != 0) && ((*(param_1 + 4) & 1) == 1)) && (iVar2 = fcn.00428e7d(),  iVar2 != 0)) {\n                return 0;\n            }\n            fcn.00428f1d();\n        }\n        if (*(param_1 + 0x1f) == (param_2 & 0xf7)) {\n            return *(param_1 + 4);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 291
    },
    "0042aeb6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0042aeb6(void)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *unaff_EDI;\n    int32_t var_4h;\n    \n    if (*(unaff_EDI + 0x1d) == '\\0') {\n        iVar2 = *unaff_EDI;\n        if (iVar2 != 0) {\n            if (*(iVar2 + 0x53) < 2) {\n                iVar3 = 0;\n            }\n            else {\n                iVar3 = fcn.00424ca3();\n            }\n            if (iVar3 == 0) {\n                if ((*(iVar2 + 0x53) == '\\x01') && (*(iVar2 + 0x4c) == 0)) {\n                    bVar1 = false;\n                }\n                else {\n                    bVar1 = true;\n                }\n                iVar3 = 0;\n            }\n            else {\n                bVar1 = true;\n            }\n            if (iVar3 != 0) {\n                return iVar3;\n            }\n            if (bVar1) {\n                unaff_EDI[0x13] = 0;\n                *(unaff_EDI + 7) = 1;\n            }\n        }\n    }\n    else {\n        iVar2 = fcn.004266a8(0, unaff_EDI[0xe], unaff_EDI[0xf], 0, &var_4h);\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        unaff_EDI[0x10] = unaff_EDI[0xe];\n        unaff_EDI[0x11] = unaff_EDI[0xf];\n        if (var_4h != 0) {\n            iVar2 = fcn.0044a92e(0xe23a);\n            return iVar2;\n        }\n        *(unaff_EDI + 0x19) = 1;\n        *(unaff_EDI + 0x1d) = 0;\n        unaff_EDI[0x13] = 0;\n    }\n    return 0;\n}\n",
        "token_count": 469
    },
    "004329d7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nbool fcn.004329d7(void)\n\n{\n    int32_t *piVar1;\n    int32_t **in_EAX;\n    \n    if ((((((in_EAX != NULL) && (in_EAX[7] == NULL)) && ((*(in_EAX + 6) & 5) == 0)) &&\n         ((in_EAX[10] == NULL && (in_EAX[3] == NULL)))) &&\n        ((piVar1 = in_EAX[2],  *piVar1 == 1 && ((piVar1[6] == 0 && (piVar1[5] != 0)))))) &&\n       (((*(piVar1[5] + 0x22) & 0x10) == 0 && (**in_EAX == 1)))) {\n        return **(*in_EAX)[3] == -0x68;\n    }\n    return false;\n}\n",
        "token_count": 195
    },
    "00433002": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00433002(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint arg_8h_00;\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    var_ch = 0;\n    arg_8h_00 = *(arg_8h + 0xc);\n    iVar1 = fcn.00432a27(in_EAX, &var_ch);\n    var_1h._0_1_ = fcn.00431aaa();\n    *(arg_8h + 0x54) = *(arg_8h + 0x54) + 1;\n    var_8h = fcn.004349af();\n    fcn.00433ee6();\n    if (arg_10h == arg_ch) {\n        fcn.00429bea(0x49, var_8h, arg_10h);\n    }\n    else {\n        fcn.00429bd5(0x4a, var_8h);\n        fcn.00429bea(0x41, *(in_EAX + 0x18), arg_ch);\n        fcn.00429b6c(1, 0, arg_10h, 0);\n        fcn.00429e14();\n    }\n    if (iVar1 == 1) {\n        fcn.00429bea(0x15, var_8h, arg_ch);\n        fcn.00429b6c(0x34, *(in_EAX + 0x18), arg_ch, var_8h);\n    }\n    else {\n        fcn.00429c01(arg_8h_00, 0x1d, var_8h, 1, 0, &var_1h, 1);\n        if ((var_ch == 0) || (arg_ch == arg_10h)) {\n            fcn.00429c31(arg_8h_00, 0x31, *(in_EAX + 0x18), arg_ch, var_8h, 1);\n        }\n        else {\n            fcn.00429c31(arg_8h_00, 0x32, *(in_EAX + 0x18), 0, var_8h, 1);\n            fcn.00429bd5(0x4a, var_ch);\n            fcn.00429c31(arg_8h_00, 0x32, *(in_EAX + 0x18), 0, var_ch, 1);\n            fcn.00429b6c(7, 0xffffffff, var_ch, 0);\n            fcn.00429e14();\n            fcn.00429b6c(0x14, var_ch, 1, 0);\n            fcn.00429e14();\n            fcn.00429bea(0x1a, var_ch, arg_10h);\n            fcn.00429b6c(1, 0, arg_ch, 0);\n            fcn.00429e14();\n        }\n    }\n    fcn.004349ca();\n    fcn.00433356();\n    return;\n}\n",
        "token_count": 761
    },
    "00435b09": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00435b09(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint arg_10h_00;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar1 = *arg_8h;\n    iVar2 = fcn.0043e7ea();\n    if (iVar2 == 0) {\n        if (arg_ch == 0) {\n            iVar2 = 0;\n            if (0 < *(iVar1 + 4)) {\n                do {\n                    if (iVar2 != 1) {\n                        fcn.00435a33(iVar2);\n                    }\n                    iVar2 = iVar2 + 1;\n                } while (iVar2 < *(iVar1 + 4));\n            }\n        }\n        else {\n            if (*(arg_10h + 4) == 0) {\n                iVar2 = fcn.00436b6d(iVar1);\n                if (-1 < iVar2) {\n                    fcn.00435a33(iVar2);\n                    return;\n                }\n                iVar2 = fcn.00436ac6();\n                if (iVar2 == 0) {\n                    return;\n                }\n                iVar3 = fcn.00436708(0, iVar2, 0);\n                fcn.0041c16b(iVar1, iVar2);\n            }\n            else {\n                iVar2 = fcn.00436b98();\n                if (iVar2 < 0) {\n                    return;\n                }\n                arg_10h_00 = *(iVar2 * 0x10 + *(iVar1 + 8));\n                iVar2 = fcn.00436ac6();\n                if (iVar2 == 0) {\n                    return;\n                }\n                iVar3 = fcn.00436708(0, iVar2, arg_10h_00);\n                fcn.0041c16b(iVar1, iVar2);\n            }\n            if (iVar3 != 0) {\n                fcn.00435aac();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 466
    },
    "00436254": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00436254(int32_t param_1, int32_t *param_2, int32_t *param_3)\n\n{\n    int32_t iVar1;\n    int32_t **in_EAX;\n    int32_t *unaff_ESI;\n    \n    if ((-1 < param_1) && (param_1 != 1)) {\n        iVar1 = *unaff_ESI;\n        *in_EAX = unaff_ESI;\n        in_EAX[1] = *(param_1 * 0x10 + *(iVar1 + 8));\n        in_EAX[2] = param_2;\n        in_EAX[3] = param_3;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 165
    },
    "00436b1f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00436b1f(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    \n    iVar2 = -1;\n    if (param_1 != 0) {\n        uVar3 = fcn.0041d157();\n        iVar2 = *((uVar3 >> 0x20) + 4);\n        do {\n            iVar2 = iVar2 + -1;\n            if (iVar2 < 0) {\n                return iVar2;\n            }\n        } while (((iVar2 == 1) || (iVar1 = fcn.0041d157(),  uVar3 != iVar1)) || (iVar1 = fcn.0041d27e(),  iVar1 != 0));\n    }\n    return iVar2;\n}\n",
        "token_count": 180
    },
    "004370a6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004370a6(uint *arg_8h, int32_t *arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puVar1 = arg_8h[0x7e];\n    iVar3 = -1;\n    if ((puVar1 != NULL) && (*(arg_8h + 0x83) == '\\0')) {\n        if ((*(puVar1 + 0x22) & 4) == 0) {\n            *(puVar1 + 0x22) = *(puVar1 + 0x22) | 4;\n            if (arg_ch == NULL) {\n                iVar3 = puVar1[2] + -1;\n                *(iVar3 * 0x18 + 0x15 + puVar1[3]) = 1;\n            }\n            else {\n                var_8h = 0;\n                if (0 < *arg_ch) {\n                    do {\n                        iVar3 = 0;\n                        if (0 < puVar1[2]) {\n                            do {\n                                iVar2 = fcn.0041d27e();\n                                if (iVar2 == 0) break;\n                                iVar3 = iVar3 + 1;\n                            } while (iVar3 < puVar1[2]);\n                        }\n                        if (iVar3 < puVar1[2]) {\n                            *(iVar3 * 0x18 + 0x15 + puVar1[3]) = 1;\n                        }\n                        var_8h = var_8h + 1;\n                    } while (var_8h < *arg_ch);\n                }\n                if (1 < *arg_ch) {\n                    iVar3 = -1;\n                }\n            }\n            if ((((iVar3 < 0) || (puVar1[2] <= iVar3)) || (*(iVar3 * 0x18 + 0xc + puVar1[3]) == 0)) ||\n               ((iVar2 = fcn.0041d27e(),  iVar2 != 0 || (arg_18h != 0)))) {\n                if ((arg_14h == 0) &&\n                   (iVar3 = fcn.004381dc(arg_8h, 0, 0, 0, arg_ch, arg_10h, 0, 0, arg_18h, 0),  iVar3 != 0)) {\n                    *(iVar3 + 0x19) = 2;\n                }\n            }\n            else {\n                *(puVar1 + 0x23) = arg_10h;\n                *(puVar1 + 0x22) = *(puVar1 + 0x22) | arg_14h << 3;\n                puVar1[1] = iVar3;\n            }\n        }\n        else {\n            fcn.0041d1e3(0x44b284, *puVar1);\n        }\n    }\n    fcn.004327f7(*arg_8h);\n    return;\n}\n",
        "token_count": 698
    },
    "0043a5bf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a5bf(uint arg_8h, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h_00;\n    \n    iVar1 = fcn.004290ba();\n    if (iVar1 < 1) {\n        iVar1 = 1;\n    }\n    arg_8h_00 = fcn.0043a435(iVar1, iVar1 >> 0x1f);\n    if (arg_8h_00 != 0) {\n        fcn.0041d095(iVar1);\n        iVar1 = fcn.004293c1(arg_8h_00, 0);\n        if (iVar1 == 0x12) {\n            fcn.0042b897();\n        }\n    }\n    return;\n}\n",
        "token_count": 184
    },
    "0043b0cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043b0cc(uint arg_8h, uint noname_1, int32_t *arg_10h)\n\n{\n    uint32_t *puVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int64_t iVar9;\n    ulong uVar10;\n    \n    puVar4 = fcn.0042bb1c(0x20);\n    iVar7 = *arg_10h;\n    if (*(iVar7 + 0x1e) == '\\x03') {\n        fcn.0042bd92();\n        fcn.0042bcab();\n    }\n    cVar2 = *(iVar7 + 0x1e);\n    if ((puVar4 != NULL) && (cVar2 != '\\x05')) {\n        puVar1 = puVar4 + 4;\n        uVar3 = *puVar1;\n        *puVar1 = *puVar1 + 1;\n        puVar4[5] = puVar4[5] + (0xfffffffe < uVar3);\n        if (cVar2 == '\\x01') {\n            iVar9 = fcn.004290ba();\n            iVar7 = iVar9 >> 0x20;\n            uVar3 = *puVar4;\n            *puVar4 = *puVar4 + iVar9;\n            puVar4[1] = puVar4[1] + iVar7 + CARRY4(uVar3, iVar9);\n            if ((*(puVar4 + 0x19) | *(puVar4 + 6)) == 0) {\n                uVar3 = puVar4[3];\n                uVar8 = iVar9 + *(puVar4 + 2) >> 0x20;\n                uVar6 = iVar7 >> 0x1f;\n                uVar5 = uVar8 >> 0x1f;\n                puVar4[3] = uVar8;\n                *(puVar4 + 6) = (~uVar6 & ~(uVar3 >> 0x1f) & uVar5 | ~uVar5 & uVar6 & uVar3 >> 0x1f) != 0;\n                puVar4[2] = iVar9 + *(puVar4 + 2);\n            }\n        }\n        else {\n            uVar10 = fcn.0042910b();\n            uVar3 = *puVar4;\n            *puVar4 = *puVar4 + uVar10;\n            *(puVar4 + 0x19) = 1;\n            puVar4[1] = puVar4[1] + (uVar10 >> 0x20) + CARRY4(uVar3, uVar10);\n        }\n    }\n    return;\n}\n",
        "token_count": 638
    },
    "0043df0d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043df0d(int32_t *arg_8h, uint arg_ch, int32_t *arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t arg_ch_00;\n    int32_t iVar6;\n    uint uVar7;\n    uint arg_1ch;\n    uint uVar8;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *arg_8h;\n    iVar3 = fcn.00429a89();\n    uVar8 = 0;\n    arg_8h[3] = iVar3;\n    if (iVar3 != 0) {\n        *(iVar3 + 0x65) = 1;\n        arg_8h[0x12] = 2;\n        iVar4 = fcn.00436b98();\n        if ((-1 < iVar4) &&\n           (((iVar6 = *(iVar1 + 8),  iVar4 != 1 || (iVar5 = fcn.00438f4e(),  iVar5 == 0)) &&\n            (iVar5 = fcn.00436ac6(),  iVar5 != 0)))) {\n            if (arg_18h == 0) {\n                arg_ch_00 = fcn.00436ac6();\n            }\n            else {\n                arg_ch_00 = fcn.0041ce3a(0x44bad0, arg_14h);\n            }\n            if (arg_10h[1] == 0) {\n                var_14h = 0;\n            }\n            else {\n                var_14h = *(iVar4 * 0x10 + iVar6);\n            }\n            iVar6 = fcn.0043de43(iVar5, arg_ch_00);\n            if (iVar6 == 0) {\n                iVar6 = fcn.0041d27e();\n                if ((iVar6 == 0) && (arg_ch_00 != 0)) {\n                    iVar3 = fcn.0043e7ea();\n                    if ((iVar3 == 0) && (iVar3 = fcn.0043668f(arg_ch_00, var_14h),  iVar3 != 0)) {\n                        uVar8 = fcn.0043fe38();\n                        var_ch = *(iVar3 + 0x24);\n                        if (var_ch != 0) {\n                            var_14h = 0;\n                            fcn.0042a4ca();\n                            arg_8h[0x12] = 8;\n                            fcn.0042a521(0, 0, 0x44bae8, 0);\n                            fcn.0042a521(1, 0, 0x44baec, 0);\n                            fcn.0042a521(2, 0, 0x44b300, 0);\n                            fcn.0042a521(3, 0, 0x44baf0, 0);\n                            fcn.0042a521(4, 0, 0x44baf8, 0);\n                            fcn.0042a521(5, 0, 0x44bafc, 0);\n                            fcn.0042a521(6, 0, 0x44bb08, 0);\n                            fcn.0042a521(7, 0, 0x44bb14, 0);\n                            do {\n                                var_10h = 0;\n                                if (0 < *(var_ch + 0x14)) {\n                                    arg_8h = var_ch + 0x24;\n                                    do {\n                                        iVar4 = arg_8h[1];\n                                        uVar7 = fcn.0043dede();\n                                        arg_1ch = fcn.0043dede();\n                                        fcn.00429b6c(7, var_14h, 1, 0);\n                                        fcn.00429b6c(7, var_10h, 2, 0);\n                                        fcn.00429c01(uVar8, 0x5e, 0, 3, 0, *(var_ch + 8), 0);\n                                        fcn.00429c01(uVar8, 0x5e, 0, 4, 0, *(*arg_8h * 0x18 + *(iVar3 + 0xc)), 0);\n                                        fcn.00429c01(uVar8, (-(iVar4 != 0) & 0x54) + 10, 0, 5, 0, iVar4, 0);\n                                        fcn.00429c01(uVar8, 0x5e, 0, 6, 0, arg_1ch, 0);\n                                        fcn.00429c01(uVar8, 0x5e, 0, 7, 0, uVar7, 0);\n                                        fcn.00429c01(uVar8, 0x5e, 0, 8, 0, 0x44bb1c, 0);\n                                        fcn.00429b6c(0x10, 1, 8, 0);\n                                        arg_8h = arg_8h + 2;\n                                        var_10h = var_10h + 1;\n                                    } while (var_10h < *(var_ch + 0x14));\n                                }\n                                var_ch = *(var_ch + 4);\n                                var_14h = var_14h + 1;\n                            } while (var_ch != 0);\n                        }\n                    }\n                }\n                else {\n                    iVar6 = fcn.0041d27e();\n                    if (iVar6 == 0) {\n                        if (arg_ch_00 != 0) {\n                            uVar2 = fcn.0043dd6c();\n                            fcn.0043b49c(iVar1, uVar2);\n                        }\n                    }\n                    else {\n                        iVar6 = fcn.0041d27e();\n                        if (iVar6 == 0) {\n                            var_ch = 0;\n                            fcn.0042a4ca();\n                            arg_8h[0x12] = 1;\n                            fcn.0042a521(0, 0, 0x44bb48, 0);\n                            while( true ) {\n                                if ((var_ch < 0) || (0x1b < var_ch)) {\n                                    iVar4 = 0;\n                                }\n                                else {\n                                    iVar4 = *(fcn.00444038 + var_ch * 4);\n                                }\n                                var_ch = var_ch + 1;\n                                if (iVar4 == 0) break;\n                                fcn.00429c01(iVar3, 0x5e, 0, 1, 0, iVar4, 0);\n                                fcn.00429b6c(0x10, 1, 1, 0);\n                            }\n                        }\n                        else {\n                            iVar3 = fcn.0041d27e();\n                            if (iVar3 == 0) {\n                                iVar3 = fcn.0043e7ea();\n                                if (iVar3 == 0) {\n                                    if (*arg_10h == 0) {\n                                        iVar4 = 10;\n                                    }\n                                    fcn.00429b6c(0x76, iVar4, 0, 0);\n                                }\n                            }\n                            else {\n                                iVar3 = fcn.0041d27e();\n                                if (iVar3 == 0) {\n                                    if (arg_ch_00 != 0) {\n                                        uVar7 = fcn.0041d4f0();\n                                        fcn.0044a3b0(uVar7);\n                                    }\n                                    if (*(iVar1 + 0xc0) == 0x441389) {\n                                        uVar8 = *(iVar1 + 0xc4);\n                                    }\n                                    fcn.0043ddc9(0x44bb68, uVar8);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            fcn.0041c16b(iVar1, iVar5);\n            fcn.0041c16b(iVar1, arg_ch_00);\n        }\n    }\n    return;\n}\n",
        "token_count": 1881
    },
    "0043e762": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043e762(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    int32_t arg_8h_00;\n    int32_t iStack16;\n    int32_t iStack12;\n    \n    uVar1 = *(in_EAX + 0xc);\n    arg_8h_00 = 0;\n    iStack16 = 0;\n    iStack12 = 0;\n    *(in_EAX + 0x7c) = 1;\n    do {\n        if (*(in_EAX + 4) <= arg_8h_00) break;\n        if (((*(*(*(in_EAX + 8) + 0xc + iStack16) + 0x4a) & 1) == 0) && (arg_8h_00 != 1)) {\n            iStack12 = fcn.0043e4ca(arg_8h_00, arg_8h);\n            if (iStack12 != 0) {\n                fcn.00436864();\n            }\n        }\n        iStack16 = iStack16 + 0x10;\n        arg_8h_00 = arg_8h_00 + 1;\n    } while (iStack12 == 0);\n    *(in_EAX + 0x7c) = 0;\n    if ((iStack12 == 0) && ((~(uVar1 >> 9) & 1) != 0)) {\n        *(in_EAX + 0xc) = *(in_EAX + 0xc) & 0xfffffdff;\n    }\n    return;\n}\n",
        "token_count": 362
    },
    "00440696": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nuint32_t fcn.00440696(void)\n\n{\n    int32_t *piVar1;\n    int32_t **in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    piVar3 = *in_EAX;\n    if ((((*piVar3 == 1) && (piVar3 = *piVar3[3],  *piVar3 == -0x67)) && ((*(piVar3 + 2) & 0x800) == 0)) &&\n       (((piVar1 = piVar3[4],  piVar1 != NULL && (*piVar1 == 1)) && (**piVar1[3] == -0x66)))) {\n        iVar2 = fcn.0041d27e();\n        if (iVar2 == 0) {\n            return 1;\n        }\n        iVar2 = fcn.0041d27e();\n        return (iVar2 != 0) - 1 & 2;\n    }\n    return piVar3 & 0xffffff00;\n}\n",
        "token_count": 229
    },
    "00440d91": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00440d91(int32_t arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t *arg_ch;\n    uint arg_1ch;\n    int32_t unaff_EBX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_8h_00 = *(arg_8h + 0xc);\n    if (*(unaff_EBX + 0x24) + *(unaff_EBX + 0x14) != 0) {\n        iVar1 = 0;\n        if (0 < *(unaff_EBX + 0x14)) {\n            var_4h = 0;\n            do {\n                fcn.00429b6c(10, 0, *(var_4h + 0x10 + *(unaff_EBX + 0x10)), 0);\n                var_4h = var_4h + 0x18;\n                iVar1 = iVar1 + 1;\n            } while (iVar1 < *(unaff_EBX + 0x14));\n        }\n        piVar2 = *(unaff_EBX + 0x20);\n        var_4h = 0;\n        if (0 < *(unaff_EBX + 0x24)) {\n            do {\n                fcn.00429b6c(10, 0, piVar2[2], 0);\n                if (-1 < piVar2[3]) {\n                    arg_ch = *(*piVar2 + 0x10);\n                    if ((arg_ch == NULL) || (*arg_ch != 1)) {\n                        fcn.0041d1e3(0x44be00);\n                        piVar2[3] = -1;\n                    }\n                    else {\n                        arg_1ch = fcn.0043f533(arg_8h, arg_ch);\n                        fcn.00429c01(arg_8h_00, 0x29, piVar2[3], 0, 0, arg_1ch, 0xfffffff0);\n                    }\n                }\n                var_4h = var_4h + 1;\n                piVar2 = piVar2 + 4;\n            } while (var_4h < *(unaff_EBX + 0x24));\n        }\n    }\n    return;\n}\n",
        "token_count": 523
    },
    "00445e40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445e40(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint arg_8h_00;\n    char *in_EAX;\n    int32_t in_ECX;\n    \n    arg_8h_00 = *(arg_8h + 0xc);\n    if (in_EAX != NULL) {\n        for (; (0 < in_ECX && (*in_EAX == 'b')); in_EAX = in_EAX + 1) {\n            in_ECX = in_ECX + -1;\n            arg_ch = arg_ch + 1;\n        }\n        for (; (1 < in_ECX && (in_EAX[in_ECX + -1] == 'b')); in_ECX = in_ECX + -1) {\n        }\n        if (0 < in_ECX) {\n            fcn.00429bea(0x1d, arg_ch, in_ECX);\n            fcn.00429f87(arg_8h_00, in_EAX, in_ECX);\n            fcn.0043332d();\n        }\n    }\n    return;\n}\n",
        "token_count": 243
    },
    "00445ea4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00445ea4(uint *arg_8h, char **arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    char *arg_8h_00;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t unaff_ESI;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = *arg_ch;\n    if (*arg_8h_00 == 'L') {\n        var_8h = fcn.004334bd(arg_8h, *(arg_8h_00 + 0xc), arg_10h);\n    }\n    else if (*arg_8h_00 == 'I') {\n        var_8h = arg_10h;\n        fcn.00429b6c(10, 0, arg_10h, 0);\n    }\n    else {\n        var_8h = arg_10h;\n        iVar2 = fcn.00432a27(arg_8h_00, 0);\n        uVar5 = *(arg_8h_00 + 0x18);\n        fcn.00429b6c(0x41, uVar5, 0, 0);\n        if (*(unaff_ESI + 0x40) == 0) {\n            uVar3 = fcn.00429c62();\n            *(unaff_ESI + 0x28) = uVar3;\n        }\n        *(unaff_ESI + 0x40) = *(unaff_ESI + 0x40) + 1;\n        iVar4 = fcn.0041c409(*arg_8h, *(unaff_ESI + 0x44));\n        *(unaff_ESI + 0x44) = iVar4;\n        if (iVar4 == 0) {\n            *(unaff_ESI + 0x40) = 0;\n        }\n        else {\n            puVar1 = iVar4 + -8 + *(unaff_ESI + 0x40) * 8;\n            *puVar1 = uVar5;\n            if (iVar2 == 1) {\n                uVar5 = fcn.00429bea(0x3d, uVar5);\n            }\n            else {\n                uVar5 = fcn.00429b6c(0x1c, uVar5, 0, arg_10h);\n            }\n            puVar1[1] = uVar5;\n            fcn.00429bd5(0x49, arg_10h);\n        }\n    }\n    fcn.00445e04();\n    return var_8h;\n}\n",
        "token_count": 602
    },
    "00445fa7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00445fa7(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t *arg_18h)\n\n{\n    uint arg_ch_00;\n    int32_t iVar1;\n    int32_t arg_20h;\n    char cVar2;\n    uint *in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *arg_ch_01;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    uint8_t uVar7;\n    int32_t *unaff_EBX;\n    int32_t iVar8;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_ch_00 = in_EAX[7];\n    iVar1 = in_EAX[1];\n    arg_20h = in_EAX[4];\n    var_4h = unaff_EBX[0x12] + 1;\n    unaff_EBX[0x12] = unaff_EBX[0x12] + iVar1 + arg_14h;\n    uVar3 = fcn.0043c670();\n    iVar4 = fcn.0041c430(uVar3);\n    iVar8 = 0;\n    if (iVar4 == 0) {\n        *(*unaff_EBX + 0x1e) = 1;\n    }\n    if (0 < iVar1) {\n        do {\n            arg_ch_01 = fcn.00444688(arg_8h, arg_ch_00, *(*(arg_20h + 8) + iVar8 * 4), arg_ch, arg_10h, *in_EAX, arg_20h\n                                    );\n            if (arg_ch_01 == NULL) break;\n            iVar5 = fcn.00445ea4(unaff_EBX, arg_ch_01, var_4h + iVar8);\n            if (iVar5 != var_4h + iVar8) {\n                if (iVar1 + arg_14h == 1) {\n                    fcn.004349ca();\n                    var_4h = iVar5;\n                }\n                else {\n                    fcn.00429bea(0xf, iVar5, var_4h + iVar8);\n                }\n            }\n            if ((*(arg_ch_01 + 4) & 0x81) == 0) {\n                for (puVar6 = *(*arg_ch_01 + 0xc); (*puVar6 == 0x9d || (*puVar6 == 0x9c)); puVar6 = *(puVar6 + 8)) {\n                }\n                uVar7 = *puVar6;\n                if (uVar7 == 0x84) {\n                    uVar7 = puVar6[0x23];\n                }\n                if ((uVar7 != 0x5e) && ((uVar7 < 0x81 || (0x83 < uVar7)))) {\n                    fcn.00429bea(0x49, var_4h + iVar8, in_EAX[9]);\n                }\n                if (iVar4 != 0) {\n                    cVar2 = fcn.00431a87();\n                    if (cVar2 == 'b') {\n                        *(iVar8 + iVar4) = 0x62;\n                    }\n                    iVar5 = fcn.00432944();\n                    if (iVar5 != 0) {\n                        *(iVar8 + iVar4) = 0x62;\n                    }\n                }\n            }\n            iVar8 = iVar8 + 1;\n        } while (iVar8 < iVar1);\n    }\n    *arg_18h = iVar4;\n    return var_4h;\n}\n",
        "token_count": 850
    },
    "0044a2c9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044a2c9(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int16_t *piVar2;\n    ushort *puVar3;\n    uint arg_ch_00;\n    int32_t unaff_EDI;\n    uint uVar4;\n    uint var_4h;\n    \n    if (((arg_ch == 0) || (0x80 < unaff_EDI + 1U)) || (iVar1 = fcn.0041d157(),  0xff < iVar1)) {\n        uVar4 = fcn.0044a94a(0x19e3b);\n    }\n    else {\n        piVar2 = fcn.004395a9(arg_8h, arg_ch_00, unaff_EDI, 1, 0);\n        if (((piVar2 != NULL) && (*(piVar2 + 1) == '\\x01')) && (*piVar2 == unaff_EDI)) {\n            if (*(arg_8h + 0x8c) != 0) {\n                fcn.0041d171(5, 0x44c86c);\n                return 5;\n            }\n            fcn.0042b6cc();\n        }\n        puVar3 = fcn.004395a9(arg_8h, arg_ch, unaff_EDI, 1, 1);\n        if (puVar3 == NULL) {\n            uVar4 = 7;\n        }\n        else {\n            fcn.00449fda(arg_8h);\n            *(puVar3 + 6) = arg_14h;\n            *(puVar3 + 2) = arg_10h;\n            *(puVar3 + 0x10) = 0;\n            *(puVar3 + 3) = 0;\n            *(puVar3 + 8) = 0;\n            *(puVar3 + 10) = 0;\n            *puVar3 = unaff_EDI;\n            uVar4 = 0;\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 471
    },
    "0044b268": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0044b268(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t unaff_EBX;\n    uint32_t *unaff_ESI;\n    uint32_t uVar3;\n    \n    if (param_1 < 2) {\n        uVar3 = 0;\n        piVar2 = unaff_EBX + 0x10;\n        do {\n            if (*piVar2 != 0) {\n                uVar3 = *piVar2 - unaff_EBX;\n                if (0xcf < uVar3 - 0x30) {\n                    return;\n                }\n                *unaff_ESI = uVar3;\n                goto code_r0x0044b2c0;\n            }\n            uVar3 = uVar3 + 1;\n            piVar2 = piVar2 + 1;\n        } while (uVar3 < 5);\n    }\n    else {\n        uVar3 = 0x10;\n        do {\n            iVar1 = fcn.0044b5ab();\n            if (iVar1 == 0) {\n                *unaff_ESI = uVar3;\ncode_r0x0044b2c0:\n                unaff_ESI[1] = uVar3 - 0x24 >> 2;\n                unaff_ESI[2] = (uVar3 - 0x24 & 0xfffffffc) + 0x10;\n                return;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < 0x80);\n    }\n    return;\n}\n",
        "token_count": 356
    },
    "004608c2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0046099a)\n// WARNING: Removing unreachable block (ram,0x0046099e)\n// WARNING: Removing unreachable block (ram,0x004609ad)\n// WARNING: Removing unreachable block (ram,0x004609a4)\n// WARNING: Removing unreachable block (ram,0x004609af)\n// WARNING: Removing unreachable block (ram,0x004609b3)\n// WARNING: Removing unreachable block (ram,0x00460ae3)\n// WARNING: Removing unreachable block (ram,0x00460af7)\n// WARNING: Removing unreachable block (ram,0x004609c3)\n// WARNING: Removing unreachable block (ram,0x004609e4)\n\nuint fcn.004608c2(void)\n\n{\n    uint8_t uVar1;\n    double dVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t unaff_EDI;\n    float10 fVar6;\n    float10 fVar7;\n    ulong uVar8;\n    uint uVar9;\n    uint32_t uVar10;\n    uint32_t uStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    int32_t iStack56;\n    int32_t iStack52;\n    int32_t iStack48;\n    int32_t iStack44;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    \n    uVar8 = CONCAT44(unaff_EDI, 0x4608d3);\n    iVar3 = fcn.004703b6();\n    uStack32 = 0;\n    uStack28 = 0;\n    iVar5 = 0;\n    iStack60 = 0;\n    iStack56 = 0;\n    iStack52 = 0;\n    iStack48 = 0;\n    iStack64 = 0;\n    iStack44 = 0;\n    if (0 < iVar3) {\n        do {\n            uVar1 = *(iVar5 + unaff_EDI);\n            uStack68 = uStack68 & 0xffffff00 | uVar1;\n            if (uVar1 + 0xbf < 0x1a) {\n                iStack60 = iStack60 + 1;\n            }\n            if (uVar1 + 0x9f < 0x1a) {\n                iStack56 = iStack56 + 1;\n            }\n            if (uVar1 - 0x30 < 10) {\n                iStack52 = iStack52 + 1;\n            }\n            if (uVar1 - 0x20 < 0x10) {\n                iStack48 = iStack48 + 1;\n            }\n            if (uVar1 - 0x3a < 7) {\n                iStack64 = iStack64 + 1;\n            }\n            if (uVar1 + 0xa5 < 6) {\n                iStack64 = iStack64 + 1;\n            }\n            if (uVar1 < '{') {\ncode_r0x00460973:\n                if ('~' < uVar1) goto code_r0x00460978;\n            }\n            else {\n                if (uVar1 != 0x7f) {\n                    iStack64 = iStack64 + 1;\n                    goto code_r0x00460973;\n                }\ncode_r0x00460978:\n                iStack44 = iStack44 + 1;\n            }\n            if (iVar5 == 0) {\n                uVar8 = CONCAT44(uStack68, 0x46098d);\n                fcn.0046345a();\n                goto code_r0x00460a45;\n            }\n            uVar9 = uVar8 >> 0x20;\n            uVar10 = uStack68;\n            fcn.0046345a();\n            iVar4 = *(iVar5 + unaff_EDI) - *(iVar5 + -1 + unaff_EDI);\n            uVar8 = CONCAT44(uVar9, iVar4);\n            iVar4 = fcn.00470406(iVar4, uVar9, uVar10);\n            if (iVar4 == 1) {\n                dVar2 = CONCAT44(uStack32, uStack36) + *0x414528;\ncode_r0x00460a4f:\n                uStack32 = SUB84(dVar2, 0);\n                uStack28 = dVar2 >> 0x20;\n            }\n            else {\n                if (iVar4 - 2U < 4) {\n                    dVar2 = CONCAT44(uStack32, uStack36) + *0x414518;\n                    goto code_r0x00460a4f;\n                }\n                if (5 < iVar4) {\n                    if (10 < iVar4) goto code_r0x00460a45;\n                    dVar2 = CONCAT44(uStack32, uStack36) + *0x414510;\n                    goto code_r0x00460a4f;\n                }\n                if (10 < iVar4) {\ncode_r0x00460a45:\n                    dVar2 = CONCAT44(uStack32, uStack36) + *0x414508;\n                    goto code_r0x00460a4f;\n                }\n            }\n            iVar5 = iVar5 + 1;\n        } while (iVar5 < iVar3);\n    }\n    uStack68 = 0;\n    if (iStack60 != 0) {\n        uStack68 = 0x1a;\n    }\n    if (iStack56 != 0) {\n        uStack68 = uStack68 + 0x1a;\n    }\n    if (iStack52 != 0) {\n        uStack68 = uStack68 + 10;\n    }\n    if (iStack48 != 0) {\n        uStack68 = uStack68 + 0x10;\n    }\n    if (iStack64 != 0) {\n        uStack68 = uStack68 + 0x11;\n    }\n    if (iStack44 != 0) {\n        uStack68 = uStack68 + 0x1e;\n    }\n    if (uStack68 == 0) {\n        uStack32 = 0;\n    }\n    else {\n        fVar6 = fcn.0047042a(uStack68);\n        fVar7 = fcn.0047042a(*0x414500);\n        uStack32 = ROUND((fVar6 / fVar7) * CONCAT44(uStack28, uStack32));\n    }\n    return uStack32;\n}\n",
        "token_count": 1431
    },
    "004612de": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004612de(uint arg_8h, uint arg_ch, char *arg_10h, int32_t arg_14h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t arg_10h_00;\n    uint unaff_EBX;\n    uint uVar2;\n    int32_t *arg_14h_00;\n    uint uStack3120;\n    int32_t iStack3116;\n    char cStack3112;\n    char cStack3111;\n    uint8_t uStack3110;\n    uchar auStack3106 [2];\n    int32_t iStack3104;\n    uchar *puStack3100;\n    char cStack3096;\n    uchar uStack3095;\n    uchar auStack3094 [1018];\n    uchar uStack2076;\n    uchar uStack2075;\n    uchar uStack2074;\n    uchar uStack2073;\n    ushort uStack2064;\n    uchar auStack2062 [2058];\n    \n    *arg_10h = '\\0';\n    arg_14h_00 = &iStack3116;\n    iStack3116 = 0x400;\n    iVar1 = fcn.0046da15(arg_8h, arg_ch, &cStack3096, arg_14h_00);\n    if (iVar1 == 0) {\n        uStack2073 = 0;\n        uStack2074 = 0;\n        uStack2075 = 0;\n        uStack2076 = 0;\n        if (cStack3096 == '\\x01') {\n            if (*(in_EAX + 0x888) != 0) {\n                if (arg_14h == 0) {\n                    arg_14h_00 = NULL;\n                    fcn.0046d7fa(in_EAX + 0x87c, auStack3094, 0x7f, 0);\n                }\n                else {\n                    uStack2064 = 0;\n                    fcn.004703f4(auStack2062, 0, 0x800);\n                    arg_14h_00 = 0x1;\n                    fcn.0046d7fa(in_EAX + 0x87c, &uStack3095, 0x400, 1);\n                    (**0x4120d4)(0, 0, &uStack2064, 0xffffffff, arg_10h, 0x7f, 0, 0);\n                }\n            }\n            if ((((*arg_10h == '\\0') && (0x6 < arg_14h_00)) && (cStack3112 == '\\x01')) &&\n               (((cStack3111 == '\\x01' && (arg_10h_00 = uStack3110,  1 < arg_10h_00)) && (arg_10h_00 + 6 <= arg_14h_00))\n               )) {\n                fcn.00460c6f(arg_10h, auStack3106, arg_10h_00);\n            }\n        }\n        else if ((cStack3096 == '\\x02') && (*(in_EAX + 0xa94) != 0)) {\n            iStack3104 = iStack3116 + -1;\n            puStack3100 = &uStack3095;\n            iVar1 = fcn.00463683(&iStack3104, 0, &cStack3112);\n            if (iVar1 != 0) {\n                uVar2 = 0x7f;\n                (**0x4120d4)(0, 0, uStack3120, unaff_EBX, arg_10h, 0x7f, 0, 0);\n                (*_fcn.004120dc)(uVar2);\n            }\n        }\n    }\n    return *arg_10h != '\\0';\n}\n",
        "token_count": 845
    },
    "004627de": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004627de(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uchar *arg_8h_00;\n    int32_t iStack1068;\n    uchar auStack1064 [4];\n    uchar auStack1060 [4];\n    uchar auStack1056 [256];\n    uchar uStack800;\n    uint uStack544;\n    \n    uStack544 = 0x412e80;\n    fcn.00463549();\n    pcVar1 = _fcn.00412010;\n    auStack1056[0] = 0;\n    uStack800 = 0;\n    iStack1068 = 0;\n    do {\n        if (iStack1068 == 0) {\n            iVar2 = (*pcVar1)(0x80000001, 0x4137a0, 0, 0x20019, auStack1060);\n            if (iVar2 == 0) {\n                arg_8h_00 = auStack1060;\ncode_r0x00462841:\n                iVar2 = fcn.0046c318(arg_8h_00);\n            }\n            else {\ncode_r0x0046284d:\n                iVar2 = 0;\n            }\n        }\n        else {\n            if (iStack1068 == 1) {\n                iVar2 = (*pcVar1)(0x80000001, 0x4137c0, 0, 0x20019, auStack1064);\n                if (iVar2 != 0) goto code_r0x0046284d;\n                arg_8h_00 = auStack1064;\n                goto code_r0x00462841;\n            }\n            iVar2 = fcn.0046c44d();\n        }\n        if (iVar2 != 0) {\n            fcn.00462741(arg_8h, auStack1056);\n        }\n        iStack1068 = iStack1068 + 1;\n        if (2 < iStack1068) {\n            fcn.00463663();\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 462
    },
    "0046322b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046322b(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_3a8h;\n    uint var_39ch;\n    uint var_31ch;\n    uint var_318h;\n    uint var_298h;\n    uint var_218h;\n    uint var_198h;\n    uint var_194h;\n    uint var_114h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0046104a();\n    fcn.00464f42(arg_8h + 0x600);\n    fcn.00464f42(arg_8h + 0x100);\n    fcn.00464f42(arg_8h + 0x200);\n    fcn.00464f42(arg_8h + 0x400);\n    fcn.00464f42(arg_8h + 0x300);\n    fcn.00464f42(arg_8h);\n    fcn.00461279(in_ECX + -0x870);\n    return;\n}\n",
        "token_count": 252
    },
    "00464338": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00464338(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_ESI;\n    int32_t var_4h;\n    \n    var_4h = (*_fcn.004121a4)(*(unaff_ESI + 4), 0x3e9);\n    iVar1 = (**0x4121dc)(*(unaff_ESI + 4), 0x3ed, 0, 0);\n    if (iVar1 - 1U < 999) {\n        iVar2 = (*_fcn.00412210)(var_4h, 0x1032, 0, 0);\n        if (iVar2 == 1) {\n            iVar2 = fcn.00463ab8(var_4h, 0, &var_4h);\n        }\n        else {\n            iVar2 = 0;\n        }\n        if (iVar2 != 0) {\n            *(**(unaff_ESI + 0xc) + var_4h * 4) = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 242
    },
    "00464587": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00464587(int32_t arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    ushort *puVar1;\n    ushort *puVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    int32_t in_ECX;\n    int32_t iVar7;\n    int32_t iVar8;\n    int16_t iVar9;\n    int32_t unaff_ESI;\n    \n    if (arg_8h == 0x4e) {\n        if ((arg_10h[2] == -3) && (arg_10h[1] == 0x3e9)) {\n            fcn.00463bb4(*arg_10h, arg_10h[3]);\n        }\n        if ((arg_10h[2] == -0x65) && (arg_10h[1] == 0x3e9)) {\n            if (((((arg_10h[5] & 2) != 0) && ((*(arg_10h + 6) & 2) == 0)) || (((arg_10h[6] ^ arg_10h[5]) & 0xf000) != 0)\n                ) && (uVar6 = fcn.0046374e(*arg_10h, arg_10h[3], 0xf002),  (uVar6 & 2) != 0)) {\n                fcn.004602db(0x3ee, (uVar6 & 0xf000) == 0x1000);\n                fcn.004602db(0x3ef, unaff_ESI == 0x2000);\n            }\n            if (((*(arg_10h + 5) & 2) != 0) && ((*(arg_10h + 6) & 2) == 0)) {\n                fcn.004602db(0x3eb, arg_10h[3] != 0);\n                fcn.004602db(0x3ec, arg_10h[3] != *(*(in_ECX + 0xc) + 4) + -1);\n                iVar9 = *(**(in_ECX + 0xc) + arg_10h[10] * 4);\n                *(in_ECX + 0x14) = 1;\n                (**0x4121b0)(*(in_ECX + 4), 0x3ed, iVar9, 0);\n                *(in_ECX + 0x14) = 0;\n                return 1;\n            }\n        }\n    }\n    else if (arg_8h == 0x110) {\n        (**0x4121cc)(*(in_ECX + 4), 0x3ed, 0xc5, 3, 0);\n        fcn.00464411(in_ECX);\n    }\n    else if (arg_8h == 0x111) {\n        iVar9 = arg_ch >> 0x10;\n        if ((*(in_ECX + 0x14) == arg_8h + -0x111) && (iVar9 == 0x300)) {\n            if (arg_ch != 0x3ed) {\n                return 0;\n            }\n            fcn.00464338();\n        }\n        if (iVar9 == 0) {\n            if (arg_ch == 0x3f0) {\n                iVar3 = *(*(in_ECX + 0xc) + 4);\n                iVar7 = 0;\n                if (0 < iVar3) {\n                    iVar8 = 0;\n                    do {\n                        puVar1 = **(in_ECX + 0xc) + iVar7 * 4;\n                        puVar1[1] = iVar7;\n                        puVar2 = *(in_ECX + 0x10) + 0xc + iVar8;\n                        iVar7 = iVar7 + 1;\n                        iVar8 = iVar8 + 0x14;\n                        *puVar1 = *puVar2;\n                    } while (iVar7 < iVar3);\n                }\n                fcn.00464411(in_ECX);\n            }\n            pcVar4 = _fcn.004121a4;\n            if (arg_ch == 0x3eb) {\n                (*_fcn.004121a4)(*(in_ECX + 4), 0x3e9);\n                fcn.004639a7();\n            }\n            if (arg_ch == 0x3ec) {\n                (*pcVar4)(*(in_ECX + 4), 0x3e9);\n                fcn.004639ea();\n            }\n            if (arg_ch == 0x3ee) {\n                uVar5 = (*pcVar4)(*(in_ECX + 4), 0x3e9, 1);\n                fcn.00463a26(uVar5);\n            }\n            if (arg_ch == 0x3ef) {\n                uVar5 = (*pcVar4)(*(in_ECX + 4), 0x3e9, 0);\n                fcn.00463a26(uVar5);\n            }\n            pcVar4 = *0x4121e8;\n            if (arg_ch == 2) {\n                (**0x4121e8)(*(in_ECX + 4), 2);\n            }\n            if (arg_ch == 1) {\n                fcn.004643aa();\n                (*pcVar4)(*(in_ECX + 4), 1);\n            }\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1230
    },
    "004647d2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004647d2(uint arg_8h, int32_t arg_ch)\n\n{\n    bool bVar1;\n    uint in_EAX;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t unaff_EDI;\n    uint var_4h;\n    \n    bVar1 = false;\n    *(unaff_EDI + 0x10) = in_EAX;\n    piVar2 = fcn.00470442(0xc);\n    if (piVar2 == NULL) {\n        piVar2 = NULL;\n    }\n    else {\n        *piVar2 = 0;\n    }\n    *(unaff_EDI + 0xc) = piVar2;\n    if (*piVar2 != 0) {\n        fcn.00470448(*piVar2);\n        *piVar2 = 0;\n    }\n    piVar2[2] = arg_ch;\n    uVar3 = fcn.0046386d(arg_ch);\n    piVar2[1] = uVar3;\n    iVar4 = fcn.00470442(-(uVar3 * 4 >> 0x20 != 0) | uVar3 * 4);\n    *piVar2 = iVar4;\n    fcn.004703f4(iVar4, 0, piVar2[1] << 2);\n    fcn.004672b3(*(*(unaff_EDI + 0xc) + 8));\n    if (*(unaff_EDI + 0x10) == 0) {\n        uVar3 = *(*(unaff_EDI + 0xc) + 4);\n        uVar5 = fcn.00470442(-(uVar3 * 0x14 >> 0x20 != 0) | uVar3 * 0x14);\n        *(unaff_EDI + 0x10) = uVar5;\n        if (0 < uVar3) {\n            iVar4 = 0;\n            do {\n                *(iVar4 + 0xc + *(unaff_EDI + 0x10)) = 0x78;\n                iVar4 = iVar4 + 0x14;\n                uVar3 = uVar3 - 1;\n            } while (uVar3 != 0);\n        }\n        bVar1 = true;\n    }\n    iVar4 = fcn.004603b2();\n    if (iVar4 == 1) {\n        fcn.00467223(*(*(unaff_EDI + 0xc) + 8));\n        (**0x4121ac)(*(*(unaff_EDI + 0xc) + 8), 0, 0);\n    }\n    (*_fcn.00412220)(arg_ch);\n    if (bVar1) {\n        fcn.00470448(*(unaff_EDI + 0x10));\n    }\n    return;\n}\n",
        "token_count": 638
    },
    "004651f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.004651f0(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    double dVar2;\n    uchar uVar3;\n    uchar uVar4;\n    uchar uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    \n    if (unaff_EDI == 1) {\n        uVar8 = *unaff_ESI;\n    }\n    else {\n        dVar2 = unaff_EDI + -1;\n        iVar6 = fcn.004651ca(dVar2 * (param_1 / param_2));\n        if (unaff_EDI + -2 < iVar6) {\n            iVar6 = unaff_EDI + -2;\n        }\n        uVar8 = unaff_ESI[iVar6];\n        uVar1 = (unaff_ESI + iVar6)[1];\n        dVar2 = (param_1 / param_2 - iVar6 / dVar2) * dVar2;\n        uVar3 = fcn.004651ca(((uVar1 & 0xff) - (uVar8 & 0xff)) * dVar2 + (uVar8 & 0xff));\n        uVar7 = uVar8 >> 8 & 0xff;\n        uVar4 = fcn.004651ca(((uVar1 >> 8 & 0xff) - uVar7) * dVar2 + uVar7);\n        uVar8 = uVar8 >> 0x10 & 0xff;\n        uVar5 = fcn.004651ca(((uVar1 >> 0x10 & 0xff) - uVar8) * dVar2 + uVar8);\n        uVar8 = CONCAT21(CONCAT11(uVar5, uVar4), uVar3);\n    }\n    return uVar8;\n}\n",
        "token_count": 433
    },
    "00467b2b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00467b2b(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *unaff_EDI;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = unaff_EDI[0x61];\n    iVar1 = (*_fcn.00412210)(iVar2, 0x1032, 0, 0);\n    if (iVar1 == 1) {\n        iVar2 = fcn.00463ab8(iVar2, &var_8h, &var_4h);\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 != 0) {\n        uVar3 = (**(*unaff_EDI + 100))(var_4h);\n        *arg_8h = uVar3;\n    }\n    return iVar2 != 0;\n}\n",
        "token_count": 208
    },
    "00467bf3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00467bf3(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    int32_t iVar5;\n    uint *unaff_ESI;\n    uint *unaff_EDI;\n    uint auStack12 [2];\n    \n    iVar5 = 0;\n    if (0 < in_ECX[10]) {\n        do {\n            iVar1 = (**(*in_ECX + 100))(iVar5);\n            if (((*(iVar1 + 4) & 1) == 0) && (iVar2 = (**(*in_ECX + 0x6c))(iVar1, iVar5),  iVar2 != 0)) {\n                *(iVar1 + 6) = 1;\n            }\n            else {\n                *(iVar1 + 6) = 0;\n            }\n            iVar5 = iVar5 + 1;\n        } while (iVar5 < in_ECX[10]);\n    }\n    iVar5 = fcn.004674b9();\n    while (iVar5 = iVar5 + -1,  -1 < iVar5) {\n        unaff_EDI = auStack12;\n        iVar1 = fcn.00467af6(unaff_EDI, iVar5);\n        if (iVar1 != 0) {\n            if (*(unaff_ESI + 6) == 0) {\n                (*_fcn.00412210)(in_ECX[0x61], 0x1008, iVar5, 0);\n            }\n            else {\n                *(unaff_ESI + 6) = 0;\n                if ((*(unaff_ESI + 1) & 2) == 0) {\n                    puVar3 = unaff_ESI;\n                    fcn.00467b80();\n                    unaff_EDI = unaff_ESI;\n                    unaff_ESI = puVar3;\n                }\n            }\n        }\n    }\n    iVar5 = 0;\n    if (0 < in_ECX[10]) {\n        do {\n            puVar3 = (**(*in_ECX + 100))(iVar5);\n            if (*(puVar3 + 6) == 1) {\n                uVar4 = (**(*in_ECX + 0xc))(puVar3);\n                puVar3[2] = uVar4;\n                (***puVar3)(0, in_ECX[0x13], uVar4, iVar5);\n                unaff_ESI = fcn.004637e0(in_ECX[0x61], unaff_EDI, unaff_ESI);\n                fcn.00467b80();\n                unaff_EDI = puVar3;\n            }\n            iVar5 = iVar5 + 1;\n        } while (iVar5 < in_ECX[10]);\n    }\n    if (arg_8h != 0) {\n        if (in_ECX[0x69] != 0) {\n            fcn.0046793d(1);\n        }\n        if (in_ECX[0x6a] != 0) {\n            fcn.004674c6(0, 3, 3);\n        }\n    }\n    return;\n}\n",
        "token_count": 704
    },
    "004685b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004685b0(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    \n    if (arg_10h == 2) {\n        uVar1 = fcn.00467f20(arg_8h);\n    }\n    else if (arg_10h == 7) {\n        uVar1 = fcn.0046803d(arg_8h, arg_ch);\n    }\n    else if (arg_10h == 3) {\n        uVar1 = fcn.00468166(arg_8h, arg_ch);\n    }\n    else if (arg_10h == 4) {\n        uVar1 = fcn.004681db(arg_8h, arg_ch);\n    }\n    else if (arg_10h == 5) {\n        uVar1 = fcn.004682f4(arg_8h, arg_ch);\n    }\n    else if (arg_10h == 1) {\n        uVar1 = fcn.00467f80(arg_8h, arg_ch);\n    }\n    else if (arg_10h == 6) {\n        uVar1 = fcn.00468507(arg_8h, arg_ch);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 295
    },
    "00468bf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00468bf0(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EBX;\n    int32_t arg_ch;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    arg_ch = 0;\n    var_10h = 0;\n    var_4h = 0;\n    iVar1 = fcn.004674b9();\n    iVar2 = fcn.00463ab8(in_EAX[0x61], &var_8h, 0);\n    if (iVar2 != 0) {\n        if ((*(unaff_EBX + 0xc) & 1) == 0) {\n            arg_ch = var_8h + -1;\n        }\n        else {\n            arg_ch = var_8h + 1;\n        }\n    }\n    do {\n        iVar2 = fcn.00467af6(&var_8h, arg_ch);\n        if ((iVar2 != 0) && (var_10h = (**(*in_EAX + 0x18))(var_8h),  var_10h != 0)) {\n            fcn.004674c6(0xffffffff, 0, 2);\n            (*_fcn.00412210)(in_EAX[0x61], 0x1013, arg_ch, 0);\n            fcn.004674c6(arg_ch, 3, 3);\n            return var_10h;\n        }\n        if ((*(unaff_EBX + 0xc) & 1) == 0) {\n            arg_ch = arg_ch + -1;\n            if (arg_ch < 0) {\n                arg_ch = iVar1 + -1;\n                goto code_r0x00468c65;\n            }\n        }\n        else {\n            arg_ch = arg_ch + 1;\n            if (iVar1 <= arg_ch) {\n                arg_ch = 0;\ncode_r0x00468c65:\n                var_4h = var_4h + 1;\n            }\n        }\n        if (1 < var_4h) {\n            return var_10h;\n        }\n    } while( true );\n}\n",
        "token_count": 505
    },
    "00469f77": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00469f77(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t *puVar1;\n    int32_t in_ECX;\n    uint uVar2;\n    uint auStack536 [133];\n    \n    if ((arg_8h != 0) && (arg_8h != 1)) {\n        return;\n    }\n    if (arg_ch == -0x63be) {\n        (**0x412184)(*(in_ECX + 0x108));\n    }\n    if (arg_ch == -0x63b7) {\n        fcn.00469d1c();\n    }\n    if (arg_ch == -0x63a7) {\n        fcn.00469ce2();\n    }\n    if (arg_ch == -0x63aa) {\n        fcn.00469c25();\n    }\n    if (arg_ch == -0x63a8) {\n        puVar1 = *(in_ECX + 0x36c) + 0xc;\n        *puVar1 = *puVar1 ^ 1;\n        fcn.004690f1();\n    }\n    if (arg_ch == -0x63bc) {\n        fcn.00469c0f();\n    }\n    if (arg_ch == -0x63bd) {\n        auStack536[0] = 0x413560;\n        fcn.0045fe72();\n        fcn.0045fe72();\n        fcn.004603b2(auStack536, *(in_ECX + 0x108));\n        (*_fcn.00412220)(*(*(in_ECX + 0x370) + 0x184));\n        fcn.004602af();\n    }\n    if (arg_ch == -0x63bf) {\n        fcn.00469baa();\n    }\n    if (arg_ch == -0x63b9) {\n        if (*(*(in_ECX + 0x370) + 0x1b8) == 0) {\n            fcn.004674c6(0xffffffff, 2, 2);\n            goto code_r0x0046a0af;\n        }\n        uVar2 = 0x2000;\ncode_r0x0046a098:\n        fcn.004674c6(0xffffffff, uVar2, 0xf000);\n    }\n    else {\ncode_r0x0046a0af:\n        if (arg_ch == -0x63b1) {\n            if (*(*(in_ECX + 0x370) + 0x1b8) != 0) {\n                uVar2 = 0x1000;\n                goto code_r0x0046a098;\n            }\n            fcn.004674c6(0xffffffff, 0, 2);\n        }\n        if (arg_ch == -0x63b8) {\n            fcn.00469afc();\n        }\n        if (arg_ch == -0x63bb) {\n            puVar1 = *(in_ECX + 0x36c) + 4;\n            *puVar1 = *puVar1 ^ 1;\n            fcn.004690f1();\n            fcn.00468e7d(*(*(in_ECX + 0x36c) + 4));\n        }\n        if (arg_ch == -0x63ba) {\n            fcn.00469f07(0);\n        }\n        if (arg_ch == -0x63a4) {\n            puVar1 = *(in_ECX + 0x36c) + 0x10;\n            *puVar1 = *puVar1 ^ 1;\n            fcn.004690f1();\n            fcn.004692a9();\n            (**0x4121ac)(*(*(in_ECX + 0x370) + 0x184), 0, 0);\n        }\n        if (arg_ch == -0x63b6) {\n            fcn.00469f07(1);\n        }\n        if (arg_ch == -0x63b5) {\n            fcn.004647d2(*(in_ECX + 0x108), *(*(in_ECX + 0x370) + 0x184));\n            fcn.004602af();\n        }\n        if (arg_ch == -0x63b4) {\n            fcn.00467ab0();\n        }\n        if (arg_ch == -0x63b2) {\n            fcn.00468aea();\n        }\n    }\n    return;\n}\n",
        "token_count": 986
    },
    "0046a236": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046a236(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    bool bVar3;\n    uchar var_104h;\n    uint var_103h;\n    int32_t var_4h;\n    \n    var_4h = in_ECX;\n    if ((arg_ch[1] == 0x103) && (arg_ch[2] == -0xc)) {\n        uVar1 = fcn.00467a12();\n        *(in_ECX + 0x10c) = 1;\n        *(in_ECX + 0x110) = uVar1;\n    }\n    if (((arg_8h == 0x101) && (arg_ch[2] == -2)) && (arg_ch[3] == 1)) {\n        var_104h = 0;\n        fcn.004703f4(&var_103h, 0, 0xff);\n        fcn.0045fe72();\n        fcn.00465395(*(var_4h + 0x108), &var_104h);\n        in_ECX = var_4h;\n    }\n    if (arg_ch[2] == -0x208) {\n        iVar2 = (*_fcn.00412210)(*(in_ECX + 0x118), 0x423, 0, 0);\n        if (*arg_ch == iVar2) {\n            (**0x41224c)(*(in_ECX + 0x11c), arg_ch[1], arg_ch + 4, 0x4f, 0);\n            arg_ch[0x18] = 0;\n        }\n    }\n    if (arg_8h == 0x103) {\n        if (arg_ch[2] == -3) {\n            fcn.00469d1c();\n        }\n        if (arg_ch[2] == -0x6c) {\n            fcn.0046793d(0);\n        }\n        if (arg_ch[2] == -0x65) {\n            if (*(*(in_ECX + 0x370) + 0x1b8) == 0) {\n                if ((((arg_ch[5] & 2U) == 0) || ((*(arg_ch + 6) & 2) != 0)) &&\n                   (((arg_ch[5] & 2U) == 2 || ((*(arg_ch + 6) & 2) == 0)))) {\n                    bVar3 = false;\n                }\n                else {\n                    bVar3 = true;\n                }\n            }\n            else {\n                bVar3 = ((arg_ch[6] ^ arg_ch[5]) & 0xf002U) != 0;\n            }\n            if ((bVar3) && (*(in_ECX + 0x25c) == 0)) {\n                *(in_ECX + 0x25c) = 1;\n                (*_fcn.00412174)(*(in_ECX + 0x108), 0x402, 0, 0);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 699
    },
    "0046a749": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0046a749(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EDI;\n    \n    fcn.00461246(0, 0);\n    *(unaff_EDI + 0x108) = 0;\n    fcn.00460cfd(*(unaff_EDI + 0x370) + 0xb20);\n    iVar1 = *(unaff_EDI + 0x37c);\n    if (*(iVar1 + 0x30) < 1) {\n        iVar1 = 0x412466;\n    }\n    else if (*(iVar1 + 0x1c) < 1) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = **(iVar1 + 0xc) + *(iVar1 + 0x10);\n    }\n    iVar1 = fcn.00470424(0x4134ac, iVar1);\n    if (iVar1 == 0) {\n        iVar1 = 1;\n    }\n    else {\n        iVar1 = fcn.0046a6b3();\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    fcn.00469d89(0);\n    fcn.0046941e();\n    iVar2 = *(unaff_EDI + 0x37c);\n    if (*(iVar2 + 0x30) < 2) {\n        iVar2 = 0x412466;\n    }\n    else if (*(iVar2 + 0x1c) < 2) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = *(*(iVar2 + 0xc) + 4) + *(iVar2 + 0x10);\n    }\n    *(*(unaff_EDI + 0x370) + 0x1bc) = *(*(unaff_EDI + 0x36c) + 0xc);\n    fcn.004689a4(iVar2, iVar1);\n    fcn.00469f34();\n    return 1;\n}\n",
        "token_count": 456
    },
    "0046b2e7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0046b2e7(void)\n\n{\n    int32_t iVar1;\n    uint *unaff_EDI;\n    uint var_428h;\n    uint var_24h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_428h._0_1_ = 0;\n    fcn.004703f4(&var_428h + 1, 0, 0x3ff);\n    fcn.0046589e();\n    fcn.004659e6();\n    while( true ) {\n        iVar1 = fcn.00465772(&var_428h, &var_4h);\n        if (iVar1 == 0) break;\n        iVar1 = fcn.00470424(&var_428h, 0x413074);\n        if (iVar1 == 0) {\n            if (1 < var_8h) {\n                iVar1 = (***unaff_EDI)(&var_24h);\n                if (iVar1 == 0) break;\n            }\n            fcn.004658c0();\n        }\n        else {\n            fcn.004658e6(&var_428h);\n        }\n    }\n    if (1 < var_8h) {\n        (***unaff_EDI)(&var_24h);\n    }\n    fcn.004658c0();\n    return;\n}\n",
        "token_count": 321
    },
    "0046c1ec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046c1ec(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uchar auStack940 [276];\n    uchar auStack664 [8];\n    uchar uStack656;\n    uchar uStack332;\n    \n    uStack332 = 0;\n    uStack656 = 0;\n    fcn.00465cda(0x413744, arg_8h);\n    while( true ) {\n        iVar1 = fcn.00465d35();\n        if (iVar1 == 0) break;\n        iVar1 = fcn.00465c9f();\n        if (iVar1 == 0) {\n            if (1 < arg_ch) {\n                iVar1 = fcn.00470424(auStack940, 0x413748);\n                if (iVar1 == 0) {\n                    iVar1 = fcn.00464fbd(auStack664);\n                    if (iVar1 != 0) {\n                        fcn.0046c05e(auStack664);\n                    }\n                }\n            }\n        }\n        else {\n            arg_ch = arg_ch + 1;\n            fcn.0046c1ec(auStack664, arg_ch);\n        }\n    }\n    fcn.00465dcd();\n    return 1;\n}\n",
        "token_count": 285
    },
    "0046c6d7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046c6d7(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uStack816;\n    int32_t iStack812;\n    uint32_t uStack808;\n    uint uStack804;\n    uint uStack800;\n    code *pcStack792;\n    int32_t iStack784;\n    code *pcStack780;\n    uchar uStack776;\n    uchar auStack775 [255];\n    uchar auStack520 [256];\n    char acStack264 [260];\n    \n    arg_8h[1] = 0;\n    arg_8h[2] = 0;\n    uVar3 = 0;\n    iVar1 = fcn.004650ea();\n    if (5 < *(iVar1 + 4)) {\n        uVar3 = 0x413808;\n    }\n    uStack804 = 0;\n    uStack800 = 0;\n    iVar1 = fcn.004634b9();\n    if (iVar1 != 0) {\n        iStack812 = 0;\n        uStack816 = 0;\n        if (iStack784 == 0) {\n            iVar1 = 0;\n        }\n        else {\n            iVar1 = (*pcStack780)(uVar3, 0, &uStack816, &iStack812);\n        }\n        if (iVar1 != 0) {\n            uStack808 = 0;\n            if (uStack816 != 0) {\n                do {\n                    iVar1 = *(iStack812 + uStack808 * 4);\n                    if (((*(iVar1 + 4) == 1) && (*(iVar1 + 8) != 0)) && (*(iVar1 + 0x30) != 0)) {\n                        uStack776 = 0;\n                        fcn.004703f4(auStack775, 0, 0xff);\n                        iVar2 = (**0x4120d4)(0, 0, *(iVar1 + 8), 0xffffffff, &uStack776, 0xff, 0, 0);\n                        if ((0 < iVar2) && (iVar2 = fcn.00470484(&uStack776, 0x413830, 0x11),  iVar2 == 0)) {\n                            auStack520[0] = 0;\n                            acStack264[0] = '\\0';\n                            (**0x4120d4)(0, 0, *(iVar1 + 0x30), 0xffffffff, auStack520, 0xff, 0, 0);\n                            if (*(iVar1 + 0x18) != 0) {\n                                (**0x4120d4)(0, 0, *(iVar1 + 0x1c), *(iVar1 + 0x18) >> 1, acStack264, 0xff, 0, 0);\n                                acStack264[*(iVar1 + 0x18) >> 1] = '\\0';\n                            }\n                            if (acStack264[0] == '\\0') {\n                                arg_8h[2] = arg_8h[2] + 1;\n                            }\n                            else {\n                                (**(*arg_8h + 4))(auStack520);\n                                arg_8h[1] = arg_8h[1] + 1;\n                            }\n                        }\n                    }\n                    uStack808 = uStack808 + 1;\n                } while (uStack808 < uStack816);\n            }\n            (*pcStack792)(iStack812);\n        }\n    }\n    fcn.00463534();\n    return;\n}\n",
        "token_count": 795
    },
    "0046c9ab": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046c9ab(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    uint arg_ch_00;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int16_t iVar3;\n    uchar uStack00000104;\n    \n    fcn.00470712();\n    if (arg_ch == 0x110) {\n        fcn.00465303(arg_8h);\n        fcn.004703f4();\n        fcn.004703f4();\n        fcn.004703f4();\n        uStack00000104 = 0;\n        fcn.004703f4();\n        fcn.004703f4();\n        fcn.004703f4();\n        (**0x412078)();\n        pcVar1 = *0x412074;\n        iVar2 = (**0x412074)();\n        if (iVar2 != 0) {\n            fcn.004653f7(&stack0x000001f0, 4);\n        }\n        iVar2 = (*pcVar1)();\n        if (iVar2 != 0) {\n            fcn.004653f7(&stack0x000000dc, 0);\n        }\n        iVar2 = fcn.0046510e();\n        if (iVar2 == 0) {\n            fcn.0046cec8();\n        }\n        else {\n            fcn.0046cf4c();\n        }\n        if ((*0x417514 != 0) || (*0x417518 != 0)) {\n            fcn.004703f4();\n            arg_ch_00 = *0x416e7c;\n            arg_8h_00 = (**0x412070)();\n            *0x417108 = 0;\n            fcn.0046d0c7(arg_8h_00, arg_ch_00);\n            if (*0x417108 != 0) {\n                fcn.0047043c();\n                if (*0x417108 != 0) {\n                    fcn.00465058();\n                    fcn.004703fa();\n                }\n            }\n        }\n        fcn.004703aa();\n        (*_fcn.004121c0)();\n        (*_fcn.004121a4)();\n        (*_fcn.00412220)();\n    }\n    else if ((arg_ch == 0x111) && (arg_10h >> 0x10 == 0)) {\n        iVar3 = arg_10h;\n        if ((iVar3 == 1) || (iVar3 == 2)) {\n            (**0x4121e8)();\n        }\n        if (iVar3 == 3) {\n            (*_fcn.004121a4)();\n            pcVar1 = _fcn.00412210;\n            (*_fcn.00412210)();\n            (*pcVar1)();\n            (*pcVar1)();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 635
    },
    "0046dccb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.0046dccb(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t unaff_ESI;\n    char *unaff_EDI;\n    uint uVar3;\n    uchar var_128h;\n    uint var_127h;\n    uint var_24h;\n    uint var_4h;\n    \n    fcn.0046dc1e();\n    if ((*0x41751c != NULL) &&\n       ((iVar1 = fcn.004650ea(),  *(iVar1 + 0x10) != 1 ||\n        (((unaff_ESI != 0x19 && (unaff_ESI != 0x17)) && (unaff_ESI != 0x16)))))) {\n        uVar2 = (**0x41751c)(0);\n        return uVar2;\n    }\n    var_128h = 0;\n    fcn.004703f4(&var_127h, 0, 0x103);\n    if (((unaff_ESI == 0x19) || (unaff_ESI == 0x17)) || (unaff_ESI == 0x16)) {\n        uVar3 = 0x80000002;\n    }\n    else {\n        uVar3 = 0x80000001;\n    }\n    iVar1 = fcn.0046d9b1(uVar3, 0x413c98, &var_4h);\n    if (iVar1 == 0) {\n        fcn.0046dc4d();\n        fcn.0046d9f2(var_4h, &var_24h, &var_128h);\n        (**0x412008)(var_4h);\n    }\n    fcn.004703fa();\n    return *unaff_EDI != '\\0';\n}\n",
        "token_count": 399
    },
    "0046ee14": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0046ee14(void)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t arg_ch;\n    int32_t unaff_ESI;\n    int32_t arg_10h;\n    uint arg_14h;\n    uint arg_18h;\n    \n    if ((*(unaff_ESI + 0x24) == 6) || (*(unaff_ESI + 0x24) == 8)) {\n        pcVar1 = *(unaff_ESI + 0x1c) + *(unaff_ESI + 4);\n        if (('@' < *pcVar1) || (*(unaff_ESI + 8) != *(unaff_ESI + 4))) {\n            fcn.004659f2(pcVar1);\n            uVar3 = fcn.004659e6();\n            fcn.004658e6(uVar3);\n            if (*(unaff_ESI + 0x24) == 6) {\n                uVar3 = 0x412466;\n            }\n            else {\n                cVar2 = *(*(unaff_ESI + 0xc) + *(unaff_ESI + 0x1c));\n                if ((cVar2 == '\\\"') || (cVar2 == '\\'')) {\n                    cVar2 = *(*(unaff_ESI + 0x10) + *(unaff_ESI + 0x1c));\n                    if ((cVar2 == '\\\"') || (cVar2 == '\\'')) {\n                        *(unaff_ESI + 0xc) = *(unaff_ESI + 0xc) + 1;\n                        *(unaff_ESI + 0x10) = *(unaff_ESI + 0x10) + -1;\n                    }\n                }\n                arg_10h = (*(unaff_ESI + 0x10) - *(unaff_ESI + 0xc)) + 1;\n                fcn.00465997();\n                arg_ch = *(unaff_ESI + 0xc) + *(unaff_ESI + 0x1c);\n                arg_18h = 0;\n                arg_14h = 0;\n                uVar3 = fcn.004659e6();\n                fcn.0046e67a(uVar3, arg_ch, arg_10h, arg_14h, arg_18h);\n                uVar3 = fcn.004659e6();\n            }\n            fcn.004658e6(uVar3);\n        }\n    }\n    return;\n}\n",
        "token_count": 553
    },
    "0046f397": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0046f397(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_434h;\n    uchar var_228h;\n    uint var_227h;\n    uchar var_128h;\n    uint var_127h;\n    int32_t var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00463549();\n    iVar2 = fcn.00463612();\n    if (iVar2 == 0) goto code_r0x0046f51f;\n    var_28h = fcn.004703b6();\n    var_28h = var_28h / 2;\n    var_ch = fcn.00470442(var_28h + 1);\n    iVar2 = 0;\n    if (0 < var_28h) {\n        do {\n            var_4h._0_1_ = *(in_EAX + iVar2 * 2);\n            var_4h._1_1_ = *(in_EAX + 1 + iVar2 * 2);\n            var_4h._2_1_ = 0;\n            uVar1 = fcn.00465384(&var_4h);\n            *(iVar2 + var_ch) = uVar1;\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < var_28h);\n    }\n    var_228h = 0;\n    fcn.004703f4(&var_227h, 0, 0xff);\n    var_8h = 0;\n    var_128h = 0;\n    fcn.004703f4(&var_127h, 0, 0xfe);\n    if (*(arg_8h + 0x86c) == 1) {\n        uVar3 = 0x414294;\ncode_r0x0046f45e:\n        fcn.004703fa(&var_128h, uVar3);\n    }\n    else if (*(arg_8h + 0x86c) == 2) {\n        uVar3 = 0x4142b4;\n        goto code_r0x0046f45e;\n    }\n    iVar2 = fcn.0046d9b1(0x80000001, &var_128h, &var_10h);\n    if (iVar2 == 0) {\n        var_8h = 0xff;\n        fcn.0046da15(var_10h, 0x4142dc, &var_228h, &var_8h);\n        (**0x412008)(var_10h);\n    }\n    var_24h = var_ch;\n    var_20h = var_8h;\n    var_1ch = &var_228h;\n    iVar2 = fcn.00463683(&var_28h, &var_20h, &var_18h);\n    if (iVar2 != 0) {\n        (**0x4120d4)(0, 0, var_14h, var_18h >> 1, arg_ch + 0x400, 0xff, 0, 0);\n        *((var_18h >> 1) + 0x400 + arg_ch) = 0;\n        (*_fcn.004120dc)(var_14h);\n    }\n    fcn.00470448(var_ch);\ncode_r0x0046f51f:\n    fcn.00463663();\n    return;\n}\n",
        "token_count": 856
    },
    "0040cdbe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.0040cdbe(uint param_1, int32_t *param_2, uint *param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_8h;\n    int32_t *var_ch;\n    uint *var_10h;\n    uint var_3ch;\n    uint var_1ch;\n    \n    iVar1 = (**0x44327c)(var_8h, 0x1004, 0, 0);\n    iVar3 = 0;\n    if (0 < iVar1) {\n        do {\n            iVar2 = fcn.0040c9d8(var_8h, iVar3, 2);\n            if (iVar2 == 2) {\n                if (var_10h != NULL) {\n                    iVar1 = fcn.0040cb3e(var_8h, iVar3, 0);\n                    if (iVar1 == 0) {\n                        return 0;\n                    }\n                    *var_10h = var_1ch;\n                }\n                if (var_ch != NULL) {\n                    *var_ch = iVar3;\n                }\n                return 1;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < iVar1);\n    }\n    return 0;\n}\n",
        "token_count": 288
    },
    "004106a5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nbool fcn.004106a5(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00410681();\n    return *(iVar1 + 0x10) == 2;\n}\n",
        "token_count": 47
    },
    "00412b77": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00412b77(uint arg_8h, uint arg_ch, uint arg_10h, ushort *arg_14h, uint32_t arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    ushort *puVar4;\n    uchar *puVar5;\n    uint uVar6;\n    ushort var_d08h;\n    uint var_d06h;\n    ushort auStack3330 [1019];\n    ushort var_508h;\n    uint var_506h;\n    ushort var_308h;\n    uint var_306h;\n    uchar var_108h;\n    uint var_107h;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    iVar2 = fcn.0044b581();\n    if ((((iVar2 == 0) && (iVar2 = fcn.0044b581(),  iVar2 == 0)) &&\n        ((iVar2 = fcn.0044b5bd(arg_10h),  iVar2 == 0 || (iVar2 = fcn.0044b5bd(arg_10h),  iVar2 == 0)))) &&\n       ((((iVar2 = fcn.0044b58d(),  iVar2 - 0x10U < 0x3f0 && (iVar3 = fcn.0044b581(),  iVar3 == 0)) &&\n         ((arg_18h & 1) == 0)) && ((*(arg_14h + (arg_18h - 1)) == '\\0' && (*(arg_14h + (arg_18h - 2)) == '\\0')))))) {\n        var_d08h = 0;\n        fcn.0044b531(&var_d06h);\n        fcn.0044b56f(&var_d08h, arg_10h);\n        auStack3330[iVar2 + -0x10] = 0;\n        iVar2 = 0;\n        if (2 < arg_18h) {\n            do {\n                var_8h = arg_14h + iVar2;\n                iVar3 = fcn.0044b58d();\n                iVar2 = iVar2 + 2 + iVar3 * 2;\n                if (arg_18h < iVar2 + 2U) break;\n                iVar3 = fcn.0044b58d();\n                (**(*var_4h + 4))(1, &var_d08h, arg_10h, var_8h, arg_14h + iVar2);\n                iVar2 = iVar2 + 2 + iVar3 * 2;\n            } while (iVar2 + 2U < arg_18h);\n        }\n    }\n    iVar2 = fcn.0044b581();\n    if (iVar2 != 0) {\n        return 1;\n    }\n    iVar2 = fcn.0044b581();\n    if (iVar2 != 0) {\n        return 1;\n    }\n    iVar2 = fcn.0044b5bd(arg_10h);\n    if (iVar2 == 0) {\n        if ((arg_18h & 1) != 0) {\n            return 1;\n        }\n        if (*(arg_14h + (arg_18h - 1)) != '\\0') {\n            return 1;\n        }\n        if (*(arg_14h + (arg_18h - 2)) != '\\0') {\n            return 1;\n        }\n        var_d08h = 0;\n        fcn.0044b531(&var_d06h);\n        iVar2 = fcn.0044b57b(arg_10h, 0x40);\n        iVar3 = fcn.0044b58d(arg_10h);\n        if ((iVar2 != 0) && (iVar3 < 0x400)) {\n            fcn.0044b56f();\n            puVar4 = fcn.0044b57b(&var_d08h, 0x40);\n            if (puVar4 != NULL) {\n                *puVar4 = 0;\n            }\n        }\n        puVar4 = &var_d08h;\n        uVar6 = 3;\n    }\n    else {\n        iVar2 = fcn.0044b5bd(arg_10h);\n        if (iVar2 == 0) {\n            return 1;\n        }\n        if (*(arg_14h + (arg_18h - 1)) != '\\0') {\n            return 1;\n        }\n        var_108h = 0;\n        fcn.0044b531(&var_107h);\n        iVar2 = fcn.0044b52b(arg_14h);\n        if (0xfe < iVar2) {\n            iVar2 = 0xfe;\n        }\n        fcn.0044b575(&var_108h);\n        (&var_108h)[iVar2] = 0;\n        puVar5 = fcn.0044b5ff(&var_108h, 0x3a);\n        if (puVar5 == NULL) {\n            return 1;\n        }\n        *puVar5 = 0;\n        var_508h = 0;\n        fcn.0044b531(&var_506h);\n        var_308h = 0;\n        fcn.0044b531(&var_306h, 0, 0x1fe);\n        pcVar1 = *0x443120;\n        (**0x443120)(0, 0, &var_108h, 0xffffffff);\n        (*pcVar1)(0, 0, puVar5 + 1, 0xffffffff, &var_508h, 0xff);\n        arg_14h = &var_508h;\n        puVar4 = &var_308h;\n        uVar6 = 2;\n    }\n    (**(*var_4h + 4))(uVar6, arg_10h, arg_10h, puVar4, arg_14h);\n    return 1;\n}\n",
        "token_count": 1333
    },
    "0041ab8e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ab8e(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    ushort *unaff_ESI;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = in_EAX * 2;\n    iVar1 = (*_fcn.00443000)(arg_8h, arg_ch, 0, &var_8h);\n    if (iVar1 == 0) {\n        if (1 < var_4h) {\n            *(unaff_ESI + (var_4h & 0xfffffffe)) = 0;\n            return;\n        }\n        *unaff_ESI = 0;\n    }\n    return;\n}\n",
        "token_count": 169
    },
    "0041b922": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b922(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    uint uVar3;\n    ulong uVar4;\n    uint var_2ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar3 = *(*arg_8h + 4);\n    piVar1 = *arg_8h[2];\n    if ((*piVar1 < 2) || (piVar1[0x12] == NULL)) {\n        (*piVar1[0x10])(piVar1, &var_10h);\n        _var_10h = ROUND(_var_10h * *0x44ccc0);\n        var_8h = var_10h;\n        var_ch = _var_10h >> 0x20;\n        var_4h = var_ch;\n    }\n    else {\n        (*piVar1[0x12])(piVar1, &var_8h);\n    }\n    uVar4 = fcn.0044b9ed(var_8h, var_4h, 1000, 0);\n    var_18h = uVar4 + 0xe75c96c0;\n    var_14h = ((uVar4 >> 0x20) + -0x31) - (uVar4 < 0x18a36940);\n    uVar2 = fcn.0041bc38(2);\n    fcn.0041bc4a(uVar2);\n    uVar2 = fcn.0044b623(&var_18h);\n    fcn.0044b61d(&var_2ch, 0x14, uVar3, uVar2);\n    uVar3 = fcn.0041bc38(2);\n    fcn.0041bc58(uVar3);\n    fcn.0042b87a(&var_2ch);\n    return;\n}\n",
        "token_count": 459
    },
    "0041ddf3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t fcn.0041ddf3(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    pcVar1 = *0x4430e4;\n    iVar3 = 0;\n    while( true ) {\n        iVar2 = (*pcVar1)(*(param_1 + 8));\n        if ((iVar2 != 0) || (iVar3 = iVar3 + 1,  2 < iVar3)) break;\n        (**0x443080)(100);\n    }\n    return (-(iVar2 != 0) & 0xfffffff6) + 10;\n}\n",
        "token_count": 146
    },
    "0041e235": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041e235(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    if (*(arg_8h + 0xc) < 2) {\n        iVar2 = (**0x44309c)(*(arg_8h + 8), 0x40000001, 0, 1, 0);\n        if (iVar2 != 0) {\n            (**0x443094)(*(arg_8h + 8), 0x40000001, 0, 1, 0);\n        }\n        uVar1 = iVar2 == 0;\n    }\n    else {\n        uVar1 = 1;\n    }\n    *arg_ch = uVar1;\n    return 0;\n}\n",
        "token_count": 181
    },
    "0041ed5a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.0041ed5a(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = 0;\n    iVar3 = 0;\n    iVar1 = fcn.0041e99c(param_2);\n    if (iVar1 == 0) {\n        return 7;\n    }\n    iVar2 = fcn.0041dbd7();\n    if (iVar2 == 0) {\n        while( true ) {\n            (**0x443090)(iVar1);\n            iVar2 = (**0x443070)(iVar1);\n            if (((iVar2 == -1) && (iVar3 = (*_fcn.0044310c)(),  iVar3 != 5)) || (iVar4 = iVar4 + 1,  4 < iVar4)) break;\n            (**0x443080)(100);\n        }\n    }\n    else {\n        while( true ) {\n            (**0x4430ec)(iVar1);\n            iVar2 = (*_fcn.0044313c)(iVar1);\n            if (((iVar2 == -1) && (iVar3 = (*_fcn.0044310c)(),  iVar3 != 5)) || (iVar4 = iVar4 + 1,  4 < iVar4)) break;\n            (**0x443080)(100);\n        }\n    }\n    fcn.0044b5ed(iVar1);\n    if ((iVar2 == -1) && (iVar3 == 2)) {\n        return 0;\n    }\n    return 0xa0a;\n}\n",
        "token_count": 360
    },
    "0041ee06": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041ee06(uint noname_0, uint arg_ch, int32_t arg_10h, uint32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t var_24h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar3 = 0;\n    iVar1 = fcn.0041e99c(arg_ch);\n    if (iVar1 == 0) {\n        return 7;\n    }\n    iVar2 = fcn.0041dbd7();\n    if (iVar2 == 0) {\n        var_24h = (**0x443070)(iVar1);\n    }\n    else {\n        fcn.0044b531(&var_24h, 0, 0x24);\n        iVar2 = (**0x443068)(iVar1, 0, &var_24h);\n        if (iVar2 == 0) {\n            iVar2 = (*_fcn.0044310c)();\n            if (iVar2 != 2) {\n                fcn.0044b5ed(iVar1);\n                return 0xd0a;\n            }\n        }\n        else if (((arg_10h != 0) || (var_8h != 0)) || (var_4h != 0)) goto code_r0x0041ee8b;\n        var_24h = 0xffffffff;\n    }\ncode_r0x0041ee8b:\n    fcn.0044b5ed(iVar1);\n    if (arg_10h != 0) {\n        if (arg_10h == 1) {\n            uVar3 = ~var_24h & 1;\n            goto code_r0x0041eea7;\n        }\n        if (arg_10h != 2) goto code_r0x0041eea7;\n    }\n    uVar3 = var_24h != 0xffffffff;\ncode_r0x0041eea7:\n    *arg_14h = uVar3;\n    return 0;\n}\n",
        "token_count": 466
    },
    "00420867": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t fcn.00420867(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    char cVar3;\n    char *in_EAX;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t unaff_ESI;\n    uint32_t uVar6;\n    ulong uVar7;\n    uint32_t var_18h;\n    int32_t var_14h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_8h = 0;\n    if (((in_EAX == NULL) || (*(unaff_ESI + 5) == '\\x04')) || (*(unaff_ESI + 5) == '\\x02')) {\n        iVar4 = 0;\n    }\n    else {\n        var_4h = 0;\n        *(unaff_ESI + 0x12) = 1;\n        cVar3 = *in_EAX;\n        while (cVar3 != '\\0') {\n            var_8h = var_8h + cVar3;\n            var_4h = var_4h + 1;\n            cVar3 = in_EAX[var_4h];\n        }\n        if (*(unaff_ESI + 9) != '\\0') {\n            uVar7 = fcn.004204ab();\n            *(unaff_ESI + 0x48) = uVar7;\n            *(unaff_ESI + 0x4c) = uVar7 >> 0x20;\n        }\n        var_ch = *(unaff_ESI + 0x4c);\n        uVar2 = *(unaff_ESI + 0x48);\n        iVar4 = fcn.00420326(*(unaff_ESI + 0x40), uVar2, var_ch);\n        if (iVar4 == 0) {\n            iVar4 = fcn.0041b9fe();\n            if (iVar4 == 0) {\n                uVar6 = var_4h + uVar2;\n                iVar5 = (var_4h >> 0x1f) + var_ch + CARRY4(var_4h, uVar2);\n                iVar4 = fcn.00420326(*(unaff_ESI + 0x40), uVar6 + 4, iVar5 + (0xfffffffb < uVar6));\n                if (iVar4 == 0) {\n                    iVar4 = fcn.00420326(*(unaff_ESI + 0x40), uVar6 + 8, iVar5 + (0xfffffff7 < uVar6));\n                    if (iVar4 == 0) {\n                        iVar4 = fcn.0041b9fe(0x4442a0, 8, uVar6 + 0xc, iVar5 + (0xfffffff3 < uVar6));\n                        if (iVar4 == 0) {\n                            uVar6 = var_4h + 0x14;\n                            puVar1 = unaff_ESI + 0x48;\n                            uVar2 = *puVar1;\n                            *puVar1 = *puVar1 + uVar6;\n                            *(unaff_ESI + 0x4c) = *(unaff_ESI + 0x4c) + (uVar6 >> 0x1f) + CARRY4(uVar2, uVar6);\n                            iVar4 = (**(**(unaff_ESI + 0x40) + 0x18))(*(unaff_ESI + 0x40), &var_18h);\n                            if (iVar4 == 0) {\n                                iVar5 = *(unaff_ESI + 0x4c);\n                                if ((iVar5 <= var_14h) && ((iVar5 < var_14h || (*(unaff_ESI + 0x48) < var_18h)))) {\n                                    iVar4 = fcn.0041ba18(*(unaff_ESI + 0x48), iVar5);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return iVar4;\n}\n",
        "token_count": 896
    },
    "00421f51": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00421f51(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (((*(arg_8h + 0x28) != 0) || (*(arg_8h + 0x13) != '\\0')) ||\n       ((*(arg_8h + 0x14) != '\\0' && ((*(arg_ch + 0x14) & 4) != 0)))) {\n        return 0;\n    }\n    *(arg_ch + 8) = 0;\n    if (*(arg_8h + 0xac) == 0) {\n        if (((((*(arg_ch + 0x14) & 4) != 0) || (*(arg_8h + 0xf) == '\\x03')) && (iVar3 = fcn.00421bec(1),  iVar3 != 0))\n           || (((*(arg_8h + 0x18) <= *(arg_ch + 0xc) && *(arg_ch + 0xc) != *(arg_8h + 0x18) &&\n                (iVar3 = fcn.004202b3(),  iVar3 != 0)) && (iVar3 = fcn.00421ea3(arg_ch),  iVar3 != 0))))\n        goto code_r0x00422005;\n        iVar3 = fcn.00421d95();\n    }\n    else {\n        iVar1 = fcn.004202b3();\n        if ((iVar1 != 0) && (iVar3 = fcn.00421ea3(arg_ch),  iVar3 != 0)) goto code_r0x00422005;\n        iVar3 = fcn.004215fa(iVar3, iVar3, iVar3);\n    }\n    if (iVar3 == 0) {\n        fcn.0041f65a();\n    }\ncode_r0x00422005:\n    uVar2 = fcn.00420b3f();\n    return uVar2;\n}\n",
        "token_count": 459
    },
    "004227f5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t fcn.004227f5(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EDI;\n    \n    iVar1 = 0;\n    if (*(unaff_EDI + 0x28) != 0) {\n        return *(unaff_EDI + 0x28);\n    }\n    if ((*(unaff_EDI + 0xac) == 0) && (*(unaff_EDI + 5) != '\\x02')) {\n        iVar1 = fcn.0041f216(*(unaff_EDI + 0x18));\n        *(unaff_EDI + 0x38) = iVar1;\n        if (iVar1 == 0) {\n            return 7;\n        }\n        if (**(unaff_EDI + 0x40) == 0) {\n            if (*(unaff_EDI + 5) == '\\x04') {\n                fcn.004307c0();\n                goto code_r0x00422874;\n            }\n            iVar1 = fcn.0041ba2a(*(unaff_EDI + 0x94), *(unaff_EDI + 0x40), 0);\n            if (iVar1 == 0) goto code_r0x00422874;\n        }\n        else {\ncode_r0x00422874:\n            *(unaff_EDI + 0x2c) = 0;\n            *(unaff_EDI + 0x48) = 0;\n            *(unaff_EDI + 0x4c) = 0;\n            *(unaff_EDI + 0x12) = 0;\n            *(unaff_EDI + 0x50) = 0;\n            *(unaff_EDI + 0x54) = 0;\n            iVar1 = fcn.0042059d();\n            if (iVar1 == 0) goto code_r0x004228a1;\n        }\n        fcn.0041f3d2(*(unaff_EDI + 0x38));\n        *(unaff_EDI + 0x38) = 0;\n    }\n    else {\ncode_r0x004228a1:\n        *(unaff_EDI + 0xf) = 3;\n    }\n    return iVar1;\n}\n",
        "token_count": 489
    },
    "00423352": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00423352(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x1e) != '\\x02') {\n        (**(**(in_EAX + 4) + 0x3c))(*(in_EAX + 4));\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "00423975": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00423975(uint param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0x1e) == '\\x02') {\n        iVar1 = 0;\n        if (0 < *(in_EAX + 0x10)) {\n            do {\n                fcn.0041c110(*(*(in_EAX + 0x14) + iVar1 * 4));\n                *(*(in_EAX + 0x14) + iVar1 * 4) = 0;\n                iVar1 = iVar1 + 1;\n            } while (iVar1 < *(in_EAX + 0x10));\n        }\n    }\n    else {\n        (**(**(in_EAX + 4) + 0x40))(*(in_EAX + 4), param_1);\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "00424ca3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t fcn.00424ca3(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    \n    if (*(unaff_ESI + 0x53) == '\\x03') {\n        iVar1 = *(unaff_ESI + 0x4c);\n    }\n    else {\n        *(unaff_ESI + 0x53) = 0;\n        iVar1 = fcn.00424c3d(*(unaff_ESI + 0x48), *(unaff_ESI + 0x40), *(unaff_ESI + 0x44), 0, unaff_ESI + 0x4c);\n        if (iVar1 == 0) {\n            fcn.0041c110(*(unaff_ESI + 0x48));\n            *(unaff_ESI + 0x48) = 0;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 201
    },
    "0042535f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042535f(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    char cVar3;\n    ushort uVar4;\n    \n    cVar3 = param_1 >> 3;\n    *(in_EAX + 3) = cVar3;\n    *(in_EAX + 6) = ('\\x01' - cVar3) * '\\x04';\n    iVar1 = *(in_EAX + 0x3c);\n    if ((param_1 & 0xfffffff7) == 5) {\n        *(in_EAX + 2) = 1;\n        *(in_EAX + 4) = cVar3;\n        *(in_EAX + 8) = *(iVar1 + 0x1c);\n        uVar4 = *(iVar1 + 0x1e);\n    }\n    else {\n        if ((param_1 & 0xfffffff7) != 2) {\n            uVar2 = fcn.0044a92e(0xb724);\n            return uVar2;\n        }\n        *(in_EAX + 2) = 0;\n        *(in_EAX + 4) = 0;\n        *(in_EAX + 8) = *(iVar1 + 0x18);\n        uVar4 = *(iVar1 + 0x1a);\n    }\n    *(in_EAX + 10) = uVar4;\n    return 0;\n}\n",
        "token_count": 329
    },
    "00425dc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00425dc0(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0;\n    if (*(param_1 + 8) == '\\x02') {\n        uVar1 = fcn.00422cb7(param_2, 0);\n    }\n    return uVar1;\n}\n",
        "token_count": 84
    },
    "00425e8f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t fcn.00425e8f(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t unaff_EBX;\n    uint var_8h;\n    int32_t var_4h;\n    \n    piVar1 = *(unaff_EBX + 4);\n    var_4h = fcn.00424bfa(0);\n    if (*(unaff_EBX + 8) == '\\x02') {\n        iVar2 = fcn.00422ddf(*piVar1);\n        if (iVar2 != 0) {\n            var_4h = iVar2;\n        }\n        iVar2 = fcn.004255ea(&var_8h, 0);\n        if (iVar2 == 0) {\n            iVar2 = fcn.0041d7cc();\n            if (iVar2 == 0) {\n                iVar2 = *(*piVar1 + 0x18);\n            }\n            piVar1[0xb] = iVar2;\n            fcn.004256a8();\n        }\n        *(piVar1 + 0x15) = 1;\n    }\n    fcn.00425ddb();\n    return var_4h;\n}\n",
        "token_count": 264
    },
    "00425f04": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t fcn.00425f04(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if ((in_EAX != 0) && (*(in_EAX + 8) == '\\x02')) {\n        iVar1 = *(in_EAX + 4);\n        iVar3 = fcn.00422f53(param_1, param_2);\n        if (iVar3 == 0) {\n            if ((param_2 < 0) && (*(iVar1 + 0x13) != '\\0')) {\n                *(iVar1 + 0x2c) = 0;\n            }\n            iVar3 = fcn.00425bee();\n            uVar2 = fcn.0041d7cc();\n            *(iVar1 + 0x2c) = uVar2;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 219
    },
    "00426385": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t fcn.00426385(int32_t param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    int32_t iVar1;\n    \n    if (*(param_1 + 0x53) == 0) {\n        return 4;\n    }\n    if (*(param_1 + 0x53) < 2) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.00424ca3();\n    }\n    if (iVar1 == 0) {\n        iVar1 = fcn.004260ef(param_2, param_3, param_4, 0);\n    }\n    return iVar1;\n}\n",
        "token_count": 151
    },
    "00426977": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00426977(int32_t arg_8h, uint *arg_ch)\n\n{\n    int16_t *piVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    int16_t iVar4;\n    \n    if (*(arg_8h + 0x53) < 2) {\n        iVar3 = 0;\n    }\n    else {\n        iVar3 = fcn.00424ca3();\n    }\n    if (iVar3 != 0) {\n        return iVar3;\n    }\n    if (*(arg_8h + 0x53) == '\\0') {\n        *arg_ch = 1;\n    }\n    else {\n        iVar3 = *(arg_8h + 0x4c);\n        *(arg_8h + 0x4c) = 0;\n        if (0 < iVar3) {\n            iVar3 = 0;\ncode_r0x004269b9:\n            *arg_ch = 0;\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + 0x84 + *(arg_8h + 0x5a) * 4);\n        piVar1 = arg_8h + 0x5c + *(arg_8h + 0x5a) * 2;\n        *piVar1 = *piVar1 + 1;\n        iVar4 = *(arg_8h + 0x5a);\n        uVar2 = *(arg_8h + 0x5c + iVar4 * 2);\n        *(arg_8h + 0x3a) = 0;\n        *(arg_8h + 0x52) = 0;\n        if (uVar2 < *(iVar3 + 0x10)) {\n            *arg_ch = 0;\n            if (*(iVar3 + 3) == '\\0') {\n                iVar3 = fcn.0042659b();\n                return iVar3;\n            }\n        }\n        else {\n            if (*(iVar3 + 3) == '\\0') {\n                arg_8h_00 = fcn.0041d7cc();\n                iVar3 = fcn.00426418(arg_8h_00);\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\n                iVar3 = fcn.0042659b();\n                goto code_r0x004269b9;\n            }\n            do {\n                if (iVar4 == 0) {\n                    *arg_ch = 1;\n                    *(arg_8h + 0x53) = 0;\n                    return 0;\n                }\n                fcn.00426489();\n                iVar4 = *(arg_8h + 0x5a);\n                iVar3 = *(arg_8h + 0x84 + iVar4 * 4);\n            } while (*(iVar3 + 0x10) <= *(arg_8h + 0x5c + iVar4 * 2));\n            *arg_ch = 0;\n            if (*(iVar3 + 2) != '\\0') {\n                iVar3 = fcn.00426977(arg_8h, arg_ch);\n                return iVar3;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 711
    },
    "00426a81": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00426a81(int32_t arg_8h, uint *arg_ch)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    \n    if (*(arg_8h + 0x53) < 2) {\n        iVar3 = 0;\n    }\n    else {\n        iVar3 = fcn.00424ca3();\n    }\n    if (iVar3 == 0) {\n        *(arg_8h + 0x51) = 0;\n        if (*(arg_8h + 0x53) == '\\0') {\ncode_r0x00426aac:\n            *arg_ch = 1;\n        }\n        else {\n            iVar3 = *(arg_8h + 0x4c);\n            *(arg_8h + 0x4c) = 0;\n            if (-1 < iVar3) {\n                if (*(*(arg_8h + 0x84 + *(arg_8h + 0x5a) * 4) + 3) == '\\0') {\n                    arg_8h_00 = fcn.0041d7cc();\n                    iVar3 = fcn.00426418(arg_8h_00);\n                    if (iVar3 != 0) {\n                        return iVar3;\n                    }\n                    iVar3 = fcn.004265ec();\n                }\n                else {\n                    iVar2 = *(arg_8h + 0x5c + *(arg_8h + 0x5a) * 2);\n                    while (iVar2 == 0) {\n                        if (*(arg_8h + 0x5a) == 0) {\n                            *(arg_8h + 0x53) = 0;\n                            goto code_r0x00426aac;\n                        }\n                        fcn.00426489();\n                        iVar2 = *(arg_8h + 0x5c + *(arg_8h + 0x5a) * 2);\n                    }\n                    piVar1 = arg_8h + 0x5c + *(arg_8h + 0x5a) * 2;\n                    *(arg_8h + 0x3a) = 0;\n                    *(arg_8h + 0x52) = 0;\n                    *piVar1 = *piVar1 + -1;\n                    iVar3 = *(arg_8h + 0x84 + *(arg_8h + 0x5a) * 4);\n                    if ((*(iVar3 + 2) == '\\0') || (*(iVar3 + 3) != '\\0')) {\n                        iVar3 = 0;\n                    }\n                    else {\n                        iVar3 = fcn.00426a81(arg_8h, arg_ch);\n                    }\n                }\n                *arg_ch = 0;\n                return iVar3;\n            }\n            *arg_ch = 0;\n        }\n        iVar3 = 0;\n    }\n    return iVar3;\n}\n",
        "token_count": 660
    },
    "0042874c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.0042874c(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((in_EAX != 0) && (*(in_EAX + 8) == '\\x02')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 59
    },
    "0042aa8b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint fcn.0042aa8b(void)\n\n{\n    int32_t arg_8h;\n    bool bVar1;\n    int32_t *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iStack4;\n    \n    arg_8h = *in_EAX;\n    if (*(arg_8h + 0x1e) != '\\0') {\n        in_EAX[0x17] = 7;\n    }\n    fcn.0042a3f0();\n    if (in_EAX[0xd] != -0x420df25d) {\n        return 0;\n    }\n    if (in_EAX[0x16] < 0) goto code_r0x0042ac91;\n    uVar2 = in_EAX[0x17] & 0xff;\n    iStack4 = 0;\n    if ((((uVar2 == 7) || (uVar2 == 10)) || (uVar2 == 9)) || (uVar2 == 0xd)) {\n        bVar1 = true;\n        if ((*(in_EAX + 0x69) == '\\0') || (uVar2 != 9)) {\n            if (((uVar2 == 7) || (uVar2 == 0xd)) && (*(in_EAX + 0x1a) != '\\0')) {\n                iStack4 = 2;\n            }\n            else {\n                fcn.0042a8e9(arg_8h);\n                fcn.0044a20e();\n                fcn.00449fa1();\n                *(arg_8h + 0x1c) = 1;\n            }\n        }\n    }\n    else {\n        bVar1 = false;\n    }\n    if (in_EAX[0x17] == 0) {\n        fcn.0042aa36(0);\n    }\n    if (((*(arg_8h + 0x124) < 1) || (*(arg_8h + 0x120) != 0)) &&\n       ((*(arg_8h + 0x1c) != '\\0' && (*(arg_8h + 0x90) == (*(in_EAX + 0x69) == '\\0'))))) {\n        if ((in_EAX[0x17] == 0) || ((*(in_EAX + 0x18) == '\\x03' && (!bVar1)))) {\n            iVar3 = fcn.0042aa36(1);\n            if (iVar3 != 0) {\n                return 1;\n            }\n            iVar3 = fcn.0042a555();\n            if (iVar3 == 5) {\n                return 5;\n            }\n            if (iVar3 != 0) {\n                in_EAX[0x17] = iVar3;\n                goto code_r0x0042ab8f;\n            }\n            *(arg_8h + 0xc) = *(arg_8h + 0xc) & 0xfffffdff;\n            *(arg_8h + 0x1d8) = 0;\n            *(arg_8h + 0x1dc) = 0;\n        }\n        else {\ncode_r0x0042ab8f:\n            fcn.0044a20e();\n        }\n        *(arg_8h + 0x1d0) = 0;\ncode_r0x0042abf4:\n        if (iStack4 != 0) {\ncode_r0x0042abfa:\n            iVar3 = fcn.0042a974(iStack4);\n            if (iVar3 != 0) {\n                if ((in_EAX[0x17] == 0) || (in_EAX[0x17] == 0x13)) {\n                    in_EAX[0x17] = iVar3;\n                    fcn.0041c16b(arg_8h, in_EAX[0xe]);\n                    in_EAX[0xe] = 0;\n                }\n                fcn.0042a8e9(arg_8h);\n                fcn.0044a20e();\n                fcn.00449fa1();\n                *(arg_8h + 0x1c) = 1;\n            }\n        }\n    }\n    else {\n        if (iStack4 != 0) goto code_r0x0042abfa;\n        if ((in_EAX[0x17] == 0) || (*(in_EAX + 0x18) == '\\x03')) {\n            iStack4 = 1;\n            goto code_r0x0042abf4;\n        }\n        if (*(in_EAX + 0x18) == '\\x02') {\n            iStack4 = 2;\n            goto code_r0x0042abfa;\n        }\n        fcn.0042a8e9(arg_8h);\n        fcn.0044a20e();\n        fcn.00449fa1();\n        *(arg_8h + 0x1c) = 1;\n    }\n    if (*(in_EAX + 99) != '\\0') {\n        if (iStack4 == 2) {\n            *(arg_8h + 0x3c) = 0;\n        }\n        else {\n            iVar3 = in_EAX[0x1b];\n            *(arg_8h + 0x40) = *(arg_8h + 0x40) + iVar3;\n            *(arg_8h + 0x3c) = iVar3;\n        }\n        in_EAX[0x1b] = 0;\n    }\n    if ((in_EAX[0x17] != 0) && ((*(arg_8h + 0xc) & 0x200) != 0)) {\n        fcn.00436864();\n        *(arg_8h + 0xc) = *(arg_8h + 0xc) | 0x200;\n    }\n    if ((-1 < in_EAX[0x16]) && (*(arg_8h + 0x8c) = *(arg_8h + 0x8c) + -1,  *(in_EAX + 0x69) == '\\0')) {\n        *(arg_8h + 0x90) = *(arg_8h + 0x90) + -1;\n    }\ncode_r0x0042ac91:\n    in_EAX[0xd] = 0x519c2973;\n    if (*(*in_EAX + 0x1e) != '\\0') {\n        in_EAX[0x17] = 7;\n    }\n    return 0;\n}\n",
        "token_count": 1460
    },
    "0042b556": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042b556(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint var_58h;\n    uint var_48h;\n    uint var_44h;\n    uint var_30h;\n    uint8_t *var_2ch;\n    uint32_t var_18h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    fcn.00426073();\n    fcn.0044b531(&var_30h, 0, 0x28);\n    iVar1 = fcn.004296c5(0, 1);\n    if (iVar1 == 0) {\n        if (*var_2ch < 0x80) {\n            uVar3 = *var_2ch;\n        }\n        else {\n            fcn.0041d746();\n            uVar3 = var_4h;\n        }\n        if ((2 < uVar3) && (uVar3 <= var_18h)) {\n            if (var_2ch[uVar3 - 1] < 0x80) {\n                uVar2 = var_2ch[uVar3 - 1];\n            }\n            else {\n                fcn.0041d746();\n                uVar2 = var_4h;\n            }\n            if (((uVar2 - 1 < 9) && (uVar2 != 7)) && (iVar1 = fcn.0042b018(),  uVar3 + iVar1 <= var_18h)) {\n                fcn.0042b0d3();\n                *arg_ch = var_48h;\n                arg_ch[1] = var_44h;\n                fcn.0042908c(&var_30h);\n                return 0;\n            }\n        }\n        fcn.0042908c(&var_30h);\n        iVar1 = fcn.0044a92e(0xe4a6);\n    }\n    return iVar1;\n}\n",
        "token_count": 468
    },
    "00431198": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00431198(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t **in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t iVar4;\n    uint var_2ch;\n    int32_t *var_28h;\n    int32_t *var_24h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t *var_8h;\n    uint var_1h;\n    \n    var_24h = *in_EAX;\n    var_8h = var_24h;\n    fcn.0044b531(&var_2ch, 0, 0x24);\n    var_28h = in_EAX[2];\n    var_1ch = 0;\n    iVar4 = *in_ECX;\n    var_18h._0_1_ = 1;\n    var_1h._0_1_ = *(iVar4 + 0x21);\n    *(iVar4 + 0x21) = 1;\n    iVar2 = fcn.00431867();\n    piVar1 = var_8h;\n    *(iVar4 + 0x21) = var_1h;\n    iVar4 = 0;\n    if ((iVar2 == 0) && (0 < *var_8h)) {\n        iVar2 = 0;\n        do {\n            iVar3 = fcn.00434590(*(piVar1[3] + iVar2), arg_8h);\n            if (iVar3 < 2) {\n                return iVar4 + 1;\n            }\n            iVar4 = iVar4 + 1;\n            iVar2 = iVar2 + 0x14;\n        } while (iVar4 < *piVar1);\n    }\n    return 0;\n}\n",
        "token_count": 436
    },
    "0043668f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043668f(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EDI;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    fcn.0041d157();\n    iVar1 = *(unaff_EDI + 4);\n    var_4h = 1;\n    if (1 < iVar1) {\n        do {\n            if (((arg_ch == 0) || (iVar2 = fcn.0041d27e(),  iVar2 == 0)) &&\n               (var_8h = fcn.0041dace(arg_8h),  var_8h != 0)) {\n                return var_8h;\n            }\n            var_4h = var_4h + 1;\n        } while (var_4h < iVar1);\n    }\n    return var_8h;\n}\n",
        "token_count": 230
    },
    "00436778": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00436778(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t extraout_EDX;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    fcn.0041d157();\n    iVar1 = *(extraout_EDX + 4);\n    var_4h = 1;\n    if (1 < iVar1) {\n        do {\n            if (((arg_ch == 0) || (iVar2 = fcn.0041d27e(),  iVar2 == 0)) &&\n               (var_8h = fcn.0041dace(arg_8h),  var_8h != 0)) {\n                return var_8h;\n            }\n            var_4h = var_4h + 1;\n        } while (var_4h < iVar1);\n    }\n    return var_8h;\n}\n",
        "token_count": 229
    },
    "0043908a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0043908a(int32_t param_1, uint param_2, uint param_3)\n\n{\n    uint arg_8h;\n    uint extraout_EDX;\n    \n    arg_8h = fcn.0043fe38();\n    if (param_1 == 2) {\n        fcn.00439076();\n        arg_8h = extraout_EDX;\n    }\n    fcn.00429c01(arg_8h, 6, 0x13, param_1, 0, param_2, param_3);\n    return;\n}\n",
        "token_count": 128
    },
    "004394cd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004394cd(int16_t *param_1, char param_2)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_ESI;\n    \n    iVar2 = *param_1;\n    iVar3 = 0;\n    if (((iVar2 == -1) || (iVar2 == unaff_ESI)) ||\n       ((unaff_ESI == -1 && ((*(param_1 + 6) != 0 || (*(param_1 + 8) != 0)))))) {\n        iVar3 = 1;\n        if ((iVar2 == unaff_ESI) || (unaff_ESI == -1)) {\n            iVar3 = 4;\n        }\n        cVar1 = *(param_1 + 1);\n        if (param_2 == cVar1) {\n            return iVar3 + 2;\n        }\n        if (((param_2 == '\\x02') && (cVar1 == '\\x03')) || ((param_2 == '\\x03' && (cVar1 == '\\x02')))) {\n            iVar3 = iVar3 + 1;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 266
    },
    "0043a0a1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a0a1(uint arg_8h, uint noname_1, int32_t *arg_10h)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    \n    uVar1 = *(*arg_10h + 0x1e);\n    if (uVar1 == 0) {\ncode_r0x0043a0c5:\n        fcn.0042921c();\n        return;\n    }\n    if (2 < uVar1) {\n        if (uVar1 == 3) {\n            puVar2 = fcn.0042b828(*arg_10h);\n            if (puVar2 == NULL) {\n                return;\n            }\n            while (uVar1 = *puVar2,  uVar1 != 0) {\n                puVar2 = puVar2 + 1;\n                if (0xbf < uVar1) {\n                    for (; (*puVar2 & 0xc0) == 0x80; puVar2 = puVar2 + 1) {\n                    }\n                }\n            }\n            goto code_r0x0043a108;\n        }\n        if (uVar1 != 4) goto code_r0x0043a0c5;\n    }\n    fcn.00429a62();\ncode_r0x0043a108:\n    fcn.0042b851();\n    return;\n}\n",
        "token_count": 309
    },
    "0043b32c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043b32c(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint arg_ch_00;\n    uint uStack12;\n    \n    if (*(*arg_10h + 0x1e) != '\\x05') {\n        iVar3 = fcn.0042bb1c(0x1c);\n        if (iVar3 != 0) {\n            iVar2 = *(arg_8h + 8);\n            cVar1 = *(iVar3 + 0x19);\n            *(iVar3 + 0x19) = 2;\n            *(iVar3 + 0x14) = *(iVar2 + 0x48);\n            if (cVar1 != '\\0') {\n                if (arg_ch == 2) {\n                    uStack12 = fcn.0042b828(arg_10h[1]);\n                    uVar4 = fcn.00429a62();\n                }\n                else {\n                    uStack12 = 0x44b2d8;\n                    uVar4 = 1;\n                }\n                fcn.0041cc69(uStack12, uVar4);\n            }\n            uVar4 = fcn.0042b828(*arg_10h);\n            arg_ch_00 = fcn.00429a62();\n            fcn.0041cc69(uVar4, arg_ch_00);\n        }\n    }\n    return;\n}\n",
        "token_count": 343
    },
    "00442446": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint16_t * fcn.00442446(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int16_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *unaff_EBX;\n    uint var_4h;\n    \n    piVar2 = fcn.00438c27(in_EAX + 0xc, 0);\n    if (piVar2 != NULL) {\n        iVar1 = *unaff_EBX;\n        iVar3 = fcn.0043e8c8();\n        if ((iVar3 == 0) || (1 < iVar3)) {\n            uVar4 = fcn.0041c430(*(*(iVar1 + 8) + iVar3 * 0x10));\n            *(piVar2 + *piVar2 * 0x1c + -0x18) = uVar4;\n        }\n    }\n    return piVar2;\n}\n",
        "token_count": 210
    },
    "00444ff1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nbool __thiscall fcn.00444ff1(int32_t param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (((*(param_1 + 8) == *(in_EAX + 0x18)) && (*(param_1 + 0x10) == 2)) &&\n       ((*(param_1 + 0x18) & param_2 | *(param_1 + 0x1c) & param_3) == 0)) {\n        iVar1 = fcn.00431adf(*(*(param_1 + 0xc) * 0x18 + 0x16 + *(*(in_EAX + 0xc) + 0xc)));\n        return iVar1 != 0;\n    }\n    return false;\n}\n",
        "token_count": 187
    },
    "0044933d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "contain loop"
        ],
        "decompiled_code": "\nuchar fcn.0044933d(void)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t *unaff_EBX;\n    uint32_t uVar3;\n    uint32_t unaff_EDI;\n    \n    if (unaff_EDI < 2) {\n        return 0x1a;\n    }\n    uVar1 = *((*(unaff_EBX[unaff_EDI - 1] + 0x443d90) * 3 ^ *(*unaff_EBX + 0x443d90) << 2 ^ unaff_EDI) % 0x7f + 0x446a90\n             );\n    do {\n        uVar3 = uVar1;\n        if (uVar3 - 1 < 0) {\n            return 0x1a;\n        }\n        if (*(uVar3 + 0x446b8f) == unaff_EDI) {\n            iVar2 = fcn.0041d2b9();\n            if (iVar2 == 0) {\n                return *(uVar3 + 0x446d07);\n            }\n        }\n        uVar1 = *(uVar3 + 0x446b0f);\n    } while( true );\n}\n",
        "token_count": 272
    },
    "00461478": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.00461478(int32_t param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar auStack1132 [128];\n    uint uStack1004;\n    uchar auStack1000 [128];\n    uchar auStack872 [128];\n    uchar auStack744 [128];\n    int32_t iStack616;\n    uchar auStack612 [128];\n    uchar auStack484 [128];\n    uchar auStack356 [128];\n    uchar auStack228 [4];\n    uchar auStack224 [12];\n    uchar uStack212;\n    uchar auStack211 [127];\n    code *apcStack84 [4];\n    uint auStack68 [4];\n    uint auStack52 [4];\n    uint auStack36 [4];\n    uint auStack20 [4];\n    \n    auStack36[0] = 0x4125f8;\n    auStack36[1] = 0x412608;\n    auStack36[2] = 0x412618;\n    auStack36[3] = 0x41262c;\n    apcStack84[0] = 0x41263c;\n    apcStack84[1] = 0x412648;\n    apcStack84[2] = 0x412654;\n    apcStack84[3] = fcn.00412664;\n    auStack52[0] = 0x412670;\n    auStack52[1] = 0x412680;\n    auStack52[2] = 0x412690;\n    auStack52[3] = 0x4126a4;\n    auStack68[0] = 0x4126b4;\n    auStack68[1] = 0x4126c0;\n    auStack68[2] = 0x4126cc;\n    auStack68[3] = 0x4126dc;\n    auStack20[0] = 0x4126e8;\n    auStack20[1] = 0x412700;\n    auStack20[2] = 0x412718;\n    auStack20[3] = 0x412734;\n    iVar2 = 0;\n    do {\n        uStack212 = 0;\n        fcn.004703f4(auStack211, 0, 0x7f);\n        iVar1 = fcn.0046d9f2(param_2, auStack36[iVar2], &uStack212);\n        if (iVar1 == 0) {\n            fcn.0046104a();\n            fcn.004703fa(auStack612, &uStack212);\n            uStack1004 = param_3;\n            iStack616 = iVar2 + 1;\n            fcn.0046d9f2(param_2, apcStack84[iVar2], auStack872);\n            fcn.0046d9f2(param_2, 0x41274c, auStack1132);\n            fcn.0046d9f2(param_2, 0x412760, auStack1000);\n            if (iVar2 != 3) {\n                fcn.0046d9f2(param_2, fcn.00412664, auStack744);\n            }\n            fcn.0046d9cb(param_2, auStack68[iVar2], auStack228);\n            fcn.0046d9cb(param_2, auStack20[iVar2], auStack224);\n            fcn.004612de(param_2, auStack52[iVar2], auStack484, 0);\n            fcn.004703fa(auStack356, param_1 + 0xa9c);\n            fcn.00461279(param_1);\n        }\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 4);\n    return;\n}\n",
        "token_count": 852
    },
    "00461642": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.00461642(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar auStack612 [128];\n    uchar auStack484 [128];\n    uchar auStack356 [128];\n    uchar auStack228 [4];\n    uchar auStack224 [4];\n    uchar auStack220 [8];\n    uchar uStack212;\n    uchar auStack211 [127];\n    code *apcStack84 [4];\n    uint auStack68 [4];\n    uint auStack52 [4];\n    uint auStack36 [4];\n    uint auStack20 [4];\n    \n    auStack52[0] = 0x412774;\n    auStack52[1] = 0x412784;\n    auStack52[2] = 0x412794;\n    auStack52[3] = 0x4127a4;\n    auStack36[0] = 0x4127b4;\n    auStack36[1] = 0x4127c0;\n    auStack36[2] = 0x4127cc;\n    auStack36[3] = 0x4127d8;\n    apcStack84[0] = 0x41263c;\n    apcStack84[1] = 0x412648;\n    apcStack84[2] = 0x4127e4;\n    apcStack84[3] = fcn.00412664;\n    auStack68[0] = 0x4126b4;\n    auStack68[1] = 0x4126c0;\n    auStack68[2] = 0x4127f4;\n    auStack68[3] = 0x4126dc;\n    auStack20[0] = 0x412800;\n    auStack20[1] = 0x412810;\n    auStack20[2] = 0x412820;\n    auStack20[3] = 0x412834;\n    iVar2 = 0;\n    do {\n        uStack212 = 0;\n        fcn.004703f4(auStack211, 0, 0x7f);\n        iVar1 = fcn.00461819(param_2, auStack36[iVar2]);\n        if (iVar1 != 0) {\n            fcn.0046104a();\n            fcn.004703fa(auStack612, &uStack212);\n            fcn.00461819(param_2, apcStack84[iVar2]);\n            fcn.00461819(param_2, 0x412844);\n            fcn.00461819(param_2, 0x412854);\n            if (iVar2 != 3) {\n                fcn.00461819(param_2, fcn.00412664);\n                fcn.0046d9cb(param_2, 0x4126dc, auStack220);\n            }\n            fcn.0046d9cb(param_2, auStack68[iVar2], auStack228);\n            fcn.0046d9cb(param_2, auStack20[iVar2], auStack224);\n            fcn.004612de(param_2, auStack52[iVar2], auStack484, 1);\n            fcn.004703fa(auStack356, param_1 + 0xa9c);\n            fcn.00461279(param_1);\n        }\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 4);\n    return;\n}\n",
        "token_count": 775
    },
    "00463ab8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00463ab8(uint arg_8h, int32_t *arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_28h;\n    uint var_8h;\n    \n    iVar1 = (*_fcn.00412210)(arg_8h, 0x1004, 0, 0);\n    iVar3 = 0;\n    if (0 < iVar1) {\n        do {\n            iVar2 = fcn.0046374e(arg_8h, iVar3, 2);\n            if (iVar2 == 2) {\n                if (arg_10h != NULL) {\n                    iVar1 = fcn.00463832(arg_8h, iVar3, 0);\n                    if (iVar1 == 0) {\n                        return 0;\n                    }\n                    *arg_10h = var_8h;\n                }\n                if (arg_ch != NULL) {\n                    *arg_ch = iVar3;\n                }\n                return 1;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < iVar1);\n    }\n    return 0;\n}\n",
        "token_count": 265
    },
    "00463dc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00463dc0(uint8_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t *in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iStack4;\n    \n    uVar2 = CONCAT31(CONCAT21(CONCAT11(*param_1, param_1[1]), param_1[2]), param_1[3]);\n    uVar4 = CONCAT31(CONCAT21(CONCAT11(param_1[4], param_1[5]), param_1[6]), param_1[7]);\n    uVar3 = (uVar4 >> 4 ^ uVar2) & 0xf0f0f0f;\n    uVar2 = uVar2 ^ uVar3;\n    uVar4 = uVar4 ^ uVar3 << 4;\n    uVar4 = uVar4 ^ (uVar4 ^ uVar2) & 0x10101010;\n    uVar3 = (((((*((uVar2 >> 5 & 0xf) * 4 + 0x416060) & 0x1fffff) << 3 | *((*param_1 >> 5) * 4 + 0x416060) & 0xffffff) *\n               2 | *((uVar2 & 0xf) * 4 + 0x416060) & 0x1ffffff) * 2 | *((uVar2 >> 8 & 0xf) * 4 + 0x416060) & 0x3ffffff)\n             * 2 | *((uVar2 >> 0x10 & 0xf) * 4 + 0x416060) & 0x7ffffff) * 2 |\n            ((*((uVar2 >> 0xd & 0xf) * 4 + 0x416060) * 2 | *((uVar2 >> 0x15 & 0xf) * 4 + 0x416060)) << 5 |\n            *((uVar2 >> 0x18 & 0xf) * 4 + 0x416060)) & 0xfffffff;\n    uVar2 = (((((*((uVar4 >> 4 & 0xf) * 4 + 0x4160a0) & 0x1fffff) * 2 |\n               *((uVar4 >> 0xc & 0xf) * 4 + 0x4160a0) & 0x3fffff) << 2 | *((uVar4 >> 0x1c) * 4 + 0x4160a0) & 0xffffff) *\n              2 | *((uVar4 >> 1 & 0xf) * 4 + 0x4160a0) & 0x1ffffff) * 2 |\n            *((uVar4 >> 9 & 0xf) * 4 + 0x4160a0) & 0x3ffffff) << 2 |\n            ((*((uVar4 >> 0x14 & 0xf) * 4 + 0x4160a0) << 4 | *((uVar4 >> 0x11 & 0xf) * 4 + 0x4160a0)) * 2 |\n            *((uVar4 >> 0x19 & 0xf) * 4 + 0x4160a0)) & 0xfffffff;\n    iStack4 = 0;\n    do {\n        if (((iStack4 < 2) || (iStack4 == 8)) || (iStack4 == 0xf)) {\n            uVar5 = uVar3 >> 0x1b | uVar3 * 2;\n            iVar1 = 0x1b;\n            uVar4 = uVar2 * 2;\n        }\n        else {\n            uVar5 = uVar3 >> 0x1a | uVar3 << 2;\n            iVar1 = 0x1a;\n            uVar4 = uVar2 << 2;\n        }\n        uVar3 = uVar5 & 0xfffffff;\n        uVar6 = uVar2 >> iVar1;\n        uVar4 = uVar6 | uVar4;\n        uVar2 = uVar4 & 0xfffffff;\n        *in_EAX = (((((((((uVar2 >> 2 & 0x2000000 | uVar4 & 0x1000000) >> 6 | uVar4 & 0x100000) >> 4 | uVar4 & 0x800000)\n                        >> 1 | uVar4 & 0x4000000) >> 3 | uVar4 & 0x4000 | uVar5 & 0x4000000) >> 5 | uVar4 & 0x400) >> 1\n                    | uVar4 & 0x10000) >> 1 | uVar4 & 0x40) >> 2 | uVar4 & 0x800 | uVar5 & 0x200000) >> 1 |\n                  ((((((((uVar5 & 1) << 10 | uVar5 & 0x82) << 4 | uVar5 & 0x2000) << 4 | uVar5 & 0x100) * 2 |\n                     uVar5 & 0x1000) << 3 | uVar4 & 0x20 | uVar5 & 0x40000) << 2 | uVar5 & 0x2400000) << 2 |\n                  uVar5 & 0x8000) << 2 | uVar4 & 0x100;\n        in_EAX[1] = (((((((((((uVar5 & 0x10) << 5 | uVar5 & 0x800) * 2 | uVar5 & 0x20) * 2 | uVar5 & 0x4004) << 4 |\n                          uVar5 & 0x200) * 2 | uVar5 & 0x20000) << 2 | uVar4 & 0x10) * 2 | uVar4 & 2) << 4 |\n                      uVar5 & 0x10000) * 2 | uVar6 & 1) * 2 | uVar5 & 0x800000) * 2 |\n                    (((((((uVar2 >> 7 & 0x8000 | uVar4 & 0x2020000) >> 5 | uVar4 & 0x80000) >> 2 | uVar4 & 0x1000) >> 1\n                       | uVar5 & 0x1000000) >> 2 | uVar5 & 0x100000) >> 1 | uVar4 & 0x88) >> 1 | uVar5 & 0x8000000 |\n                    uVar4 & 0x8000) >> 2 | uVar4 & 0x200;\n        in_EAX = in_EAX + 2;\n        iStack4 = iStack4 + 1;\n    } while (iStack4 < 0x10);\n    return 0;\n}\n",
        "token_count": 1608
    },
    "0046510e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nbool fcn.0046510e(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004650ea();\n    return *(iVar1 + 0x10) == 2;\n}\n",
        "token_count": 47
    },
    "00467223": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00467223(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *unaff_ESI;\n    int32_t iVar5;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    \n    if (arg_8h != 0) {\n        iVar3 = unaff_ESI[1];\n        iVar5 = 0;\n        iVar4 = 0;\n        if (0 < iVar3) {\n            piVar2 = *unaff_ESI + 2;\n            do {\n                if ((*piVar2 == 0) && (iVar5 = iVar5 + 1,  1 < iVar5)) {\n                    return;\n                }\n                iVar4 = iVar4 + 1;\n                piVar2 = piVar2 + 2;\n            } while (iVar4 < iVar3);\n        }\n        iVar4 = 0;\n        if (0 < iVar3) {\n            do {\n                piVar2 = *unaff_ESI + iVar4 * 4;\n                iVar1 = *piVar2;\n                if (((-1 < iVar1) && (iVar1 < 2000)) && (var_8h = piVar2[1],  var_8h < iVar3)) {\n                    var_1ch = iVar1;\n                    var_24h = 0x22;\n                    var_20h = 0;\n                    var_18h = 0;\n                    var_10h = 0;\n                    var_ch = 0;\n                    (*_fcn.00412210)(arg_8h, 0x101a, iVar4, &var_24h);\n                }\n                iVar3 = unaff_ESI[1];\n                iVar4 = iVar4 + 1;\n            } while (iVar4 < iVar3);\n        }\n    }\n    return;\n}\n",
        "token_count": 459
    },
    "0046fa39": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046fa39(uint arg_8h, uint arg_ch)\n\n{\n    uchar *puVar1;\n    int32_t arg_8h_00;\n    uint32_t uVar2;\n    int32_t arg_ch_00;\n    \n    arg_8h_00 = fcn.00464d3d(arg_ch);\n    if (arg_8h_00 != -1) {\n        uVar2 = (*_fcn.00412100)(arg_8h_00, 0);\n        if (2 < uVar2) {\n            arg_ch_00 = fcn.00470442(uVar2 + 2);\n            (*_fcn.00412114)(arg_8h_00, 2, 0, 0);\n            fcn.00465568(arg_8h_00, arg_ch_00, uVar2 - 2);\n            puVar1 = arg_ch_00 + uVar2;\n            puVar1[-2] = 0;\n            puVar1[-1] = 0;\n            *puVar1 = 0;\n            fcn.0046f8fc(arg_8h, arg_ch_00);\n            fcn.00470448(arg_ch_00);\n        }\n        (*_fcn.0041209c)(arg_8h_00);\n    }\n    return;\n}\n",
        "token_count": 295
    },
    "0040a629": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a629(int32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t *in_ECX;\n    \n    if (arg_8h == 0x4e) {\n        uVar1 = (**(*in_ECX + 0x18))(arg_ch, arg_10h);\n    }\n    else if (arg_8h == 0x110) {\n        uVar1 = (**(*in_ECX + 0x14))();\n    }\n    else if (arg_8h == 0x111) {\n        uVar1 = (**(*in_ECX + 0x10))(arg_ch >> 0x10, arg_ch, arg_10h);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 192
    },
    "00410e7f": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498",
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00410e7f(uint32_t param_1)\n\n{\n    return (param_1 & 0xff00 | param_1 << 0x10) << 8 | (param_1 & 0xff0000 | param_1 >> 0x10) >> 8;\n}\n",
        "token_count": 72
    },
    "0040d426": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid fcn.0040d426(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *unaff_ESI;\n    \n    uVar1 = (unaff_ESI[1] >> 4 ^ *unaff_ESI) & 0xf0f0f0f;\n    uVar2 = *unaff_ESI ^ uVar1;\n    uVar3 = unaff_ESI[1] ^ uVar1 << 4;\n    uVar1 = (uVar2 >> 0x10 ^ uVar3) & 0xffff;\n    uVar3 = uVar3 ^ uVar1;\n    uVar2 = uVar2 ^ uVar1 << 0x10;\n    uVar1 = (uVar3 >> 2 ^ uVar2) & 0x33333333;\n    uVar2 = uVar2 ^ uVar1;\n    uVar3 = uVar3 ^ uVar1 << 2;\n    uVar1 = (uVar2 >> 8 ^ uVar3) & 0xff00ff;\n    uVar3 = uVar3 ^ uVar1;\n    uVar2 = uVar2 ^ uVar1 << 8;\n    uVar1 = (uVar3 >> 1 ^ uVar2) & 0x55555555;\n    *unaff_ESI = uVar1 ^ uVar2;\n    unaff_ESI[1] = uVar1 * 2 ^ uVar3;\n    fcn.0040cf92(unaff_ESI, 0);\n    fcn.0040cf92(unaff_ESI, 1);\n    fcn.0040cf92(unaff_ESI, 0);\n    uVar1 = (unaff_ESI[1] >> 1 ^ *unaff_ESI) & 0x55555555;\n    uVar2 = *unaff_ESI ^ uVar1;\n    uVar3 = unaff_ESI[1] ^ uVar1 * 2;\n    uVar1 = (uVar2 >> 8 ^ uVar3) & 0xff00ff;\n    uVar3 = uVar3 ^ uVar1;\n    uVar2 = uVar2 ^ uVar1 << 8;\n    uVar1 = (uVar3 >> 2 ^ uVar2) & 0x33333333;\n    uVar2 = uVar2 ^ uVar1;\n    uVar3 = uVar3 ^ uVar1 << 2;\n    uVar1 = (uVar2 >> 0x10 ^ uVar3) & 0xffff;\n    uVar3 = uVar3 ^ uVar1;\n    uVar2 = uVar2 ^ uVar1 << 0x10;\n    uVar1 = (uVar3 >> 4 ^ uVar2) & 0xf0f0f0f;\n    *unaff_ESI = uVar1 ^ uVar2;\n    unaff_ESI[1] = uVar1 << 4 ^ uVar3;\n    return;\n}\n",
        "token_count": 681
    },
    "0040d523": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nvoid __cdecl fcn.0040d523(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t *arg_18h)\n\n{\n    int32_t iVar1;\n    uint32_t *in_EAX;\n    int32_t iVar2;\n    uchar *in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar3 = *arg_18h;\n    uVar4 = arg_18h[1];\n    iVar5 = arg_8h - 8;\n    iVar1 = iVar5;\n    if (-1 < iVar5) {\n        var_14h = arg_8h >> 3;\n        iVar2 = var_14h * -8;\n        var_8h = uVar4;\n        var_4h = uVar3;\n        do {\n            uVar3 = *in_EAX;\n            uVar4 = in_EAX[1];\n            in_EAX = in_EAX + 2;\n            fcn.0040d426(arg_ch, arg_10h, arg_14h);\n            var_4h = var_4h ^ uVar3;\n            var_8h = var_8h ^ uVar4;\n            *in_ECX = var_4h;\n            in_ECX[1] = var_4h >> 8;\n            in_ECX[2] = var_4h >> 0x10;\n            in_ECX[3] = var_4h >> 0x18;\n            in_ECX[4] = var_8h;\n            in_ECX[5] = var_8h >> 8;\n            in_ECX[6] = var_8h >> 0x10;\n            in_ECX[7] = var_8h >> 0x18;\n            in_ECX = in_ECX + 8;\n            var_14h = var_14h - 1;\n            iVar1 = iVar5 + iVar2;\n            var_8h = uVar4;\n            var_4h = uVar3;\n        } while (var_14h != 0);\n    }\n    arg_8h = iVar1;\n    if (arg_8h != -8) {\n        uVar3 = *in_EAX;\n        uVar4 = in_EAX[1];\n        fcn.0040d426(arg_ch, arg_10h, arg_14h);\n        if (arg_8h + 7 < 8) {\n            switch(*((arg_8h + 7) * 4 + 0x40473a)) {\n            case 0xa00:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x8a2806:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x8a2807:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x8b2806:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x72c0911:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x9130a00:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xdc2d0911:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n        }\n    }\n    *arg_18h = uVar3;\n    *(arg_18h + 1) = uVar3 >> 8;\n    *(arg_18h + 2) = uVar3 >> 0x10;\n    *(arg_18h + 3) = uVar3 >> 0x18;\n    *(arg_18h + 1) = uVar4;\n    *(arg_18h + 5) = uVar4 >> 8;\n    *(arg_18h + 6) = uVar4 >> 0x10;\n    *(arg_18h + 7) = uVar4 >> 0x18;\n    return;\n}\n",
        "token_count": 1005
    },
    "0041b49c": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041b49c(uint32_t arg_8h, uint arg_ch)\n\n{\n    fcn.0044b51f(arg_ch, 0xff, 0x44978c, arg_8h & 0xff, arg_8h >> 8 & 0xff, arg_8h >> 0x10 & 0xff);\n    return arg_ch;\n}\n",
        "token_count": 89
    },
    "0041d7e6": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498",
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d7e6(uint param_1)\n\n{\n    uchar *in_EAX;\n    \n    *in_EAX = param_1 >> 0x18;\n    in_EAX[1] = param_1 >> 0x10;\n    in_EAX[2] = param_1 >> 8;\n    in_EAX[3] = param_1;\n    return;\n}\n",
        "token_count": 90
    },
    "00460420": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00460420(int32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t *in_ECX;\n    \n    if (arg_8h == 0x4e) {\n        uVar1 = (**(*in_ECX + 0x14))(arg_ch, arg_10h);\n    }\n    else if (arg_8h == 0x110) {\n        uVar1 = (**(*in_ECX + 0x10))();\n    }\n    else if (arg_8h == 0x111) {\n        uVar1 = (**(*in_ECX + 0xc))(arg_ch >> 0x10, arg_ch, arg_10h);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 190
    },
    "00463d2f": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid fcn.00463d2f(void)\n\n{\n    uint32_t *in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *unaff_ESI;\n    \n    uVar2 = *in_EAX;\n    uVar1 = **0x416b90 ^ uVar2;\n    *unaff_ESI = *unaff_ESI ^\n                 *((uVar1 >> 0x18 & 0x3f) * 4 + 0x4161e0) ^ *((uVar1 >> 0x10 & 0x3f) * 4 + 0x4163e0) ^\n                 *((uVar1 >> 8 & 0x3f) * 4 + 0x4165e0) ^ *((uVar1 & 0x3f) * 4 + 0x4167e0);\n    uVar2 = (uVar2 >> 4 | uVar2 << 0x1c) ^ (*0x416b90)[1];\n    *0x416b90 = *0x416b90 + 2;\n    *unaff_ESI = *unaff_ESI ^\n                 *((uVar2 >> 0x18 & 0x3f) * 4 + 0x4160e0) ^ *((uVar2 >> 0x10 & 0x3f) * 4 + 0x4162e0) ^\n                 *((uVar2 >> 8 & 0x3f) * 4 + 0x4164e0) ^ *((uVar2 & 0x3f) * 4 + 0x4166e0);\n    return;\n}\n",
        "token_count": 376
    },
    "00464248": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00464248(uint arg_8h)\n\n{\n    uchar uVar1;\n    uchar uVar2;\n    uchar uVar3;\n    uchar uVar4;\n    uchar uVar5;\n    uchar uVar6;\n    uchar uVar7;\n    uchar uVar8;\n    uchar *in_EAX;\n    int32_t iVar9;\n    uchar *unaff_EDI;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar5 = in_EAX[2];\n    uVar1 = *in_EAX;\n    uVar2 = in_EAX[1];\n    uVar6 = in_EAX[3];\n    uVar7 = in_EAX[6];\n    uVar3 = in_EAX[4];\n    uVar4 = in_EAX[5];\n    uVar8 = in_EAX[7];\n    fcn.00463c4d();\n    *0x416b90 = arg_8h;\n    iVar9 = 8;\n    do {\n        fcn.00463d2f();\n        fcn.00463d2f();\n        iVar9 = iVar9 + -1;\n    } while (iVar9 != 0);\n    iVar9 = 8;\n    do {\n        fcn.00463d2f();\n        fcn.00463d2f();\n        iVar9 = iVar9 + -1;\n    } while (iVar9 != 0);\n    iVar9 = 8;\n    do {\n        fcn.00463d2f();\n        fcn.00463d2f();\n        iVar9 = iVar9 + -1;\n    } while (iVar9 != 0);\n    fcn.00463cbe();\n    *unaff_EDI = uVar3;\n    unaff_EDI[1] = uVar4;\n    unaff_EDI[2] = uVar7;\n    unaff_EDI[3] = uVar8;\n    unaff_EDI[4] = uVar1;\n    unaff_EDI[5] = uVar2;\n    unaff_EDI[6] = uVar5;\n    unaff_EDI[7] = uVar6;\n    return;\n}\n",
        "token_count": 477
    },
    "0046dee3": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046dee3(uint32_t arg_8h, uint arg_ch)\n\n{\n    fcn.004703aa(arg_ch, 0x413cf8, arg_8h & 0xff, arg_8h >> 8 & 0xff, arg_8h >> 0x10 & 0xff);\n    return arg_ch;\n}\n",
        "token_count": 82
    },
    "0040a31c": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint32_t fcn.0040a31c(void)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    \n    cVar1 = in_EAX;\n    if (cVar1 + 0xbfU < 0x1a) {\n        return in_EAX - 0x41;\n    }\n    if (cVar1 + 0x9fU < 0x1a) {\n        return in_EAX - 0x47;\n    }\n    if (cVar1 - 0x30U < 10) {\n        return in_EAX + 4;\n    }\n    if (cVar1 == '+') {\n        return in_EAX & 0xffffff00 | 0x3e;\n    }\n    return (cVar1 != '/') - 1 & 0x3f;\n}\n",
        "token_count": 181
    },
    "0042b63c": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042b63c(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_30h;\n    uint var_2ch;\n    uint var_18h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    fcn.00426073();\n    if ((var_4h + -1 + (var_8h != 0) == 0) && (var_8h - 1U < 0x7fffffff)) {\n        fcn.0044b531(&var_30h, 0, 0x28);\n        iVar1 = fcn.004296c5(0, 1);\n        if (iVar1 == 0) {\n            uVar2 = fcn.0042b3c3(var_18h, var_2ch, arg_8h);\n            *arg_ch = uVar2;\n            fcn.0042908c(&var_30h);\n            iVar1 = 0;\n        }\n    }\n    else {\n        *arg_ch = 0;\n        iVar1 = fcn.0044a92e(0xe4c5);\n    }\n    return iVar1;\n}\n",
        "token_count": 297
    },
    "004601b6": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint32_t fcn.004601b6(void)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    \n    cVar1 = in_EAX;\n    if (cVar1 + 0xbfU < 0x1a) {\n        return in_EAX - 0x41;\n    }\n    if (cVar1 + 0x9fU < 0x1a) {\n        return in_EAX - 0x47;\n    }\n    if (cVar1 - 0x30U < 10) {\n        return in_EAX + 4;\n    }\n    if (cVar1 == '+') {\n        return in_EAX & 0xffffff00 | 0x3e;\n    }\n    return (cVar1 != '/') - 1 & 0x3f;\n}\n",
        "token_count": 180
    },
    "004629a0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004629a0(uint arg_8h, uint *arg_ch, int32_t arg_10h)\n\n{\n    char *pcVar1;\n    int32_t arg_ch_00;\n    int32_t in_ECX;\n    int32_t iVar2;\n    uint *arg_8h_00;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (arg_10h == 8) {\n        var_24h = 0xffffffff;\n        var_30h = 2;\n        var_2ch = 7;\n        var_28h = 8;\n        var_20h = 0xfffffff6;\n        iVar2 = 0;\n        var_8h = in_ECX;\n        do {\n            pcVar1 = (***arg_ch)((&var_30h)[iVar2], *(var_8h + 0x4c));\n            var_1ch = 0;\n            var_18h = 0;\n            var_14h = 0;\n            arg_8h_00 = &var_4h;\n            var_ch = 0x100;\n            var_10h = 1;\n            var_4h._0_2_ = 0x22;\n            fcn.00465a51(arg_8h_00);\n            for (; *pcVar1 != '\\0'; pcVar1 = pcVar1 + 1) {\n                fcn.00465a51(arg_8h_00);\n            }\n            fcn.00465a51(&var_4h);\n            arg_ch_00 = var_1ch;\n            if (var_1ch == 0) {\n                arg_ch_00 = 0x412466;\n            }\n            fcn.004628ff(arg_8h, arg_ch_00);\n            fcn.004659cd();\n            if (iVar2 < 4) {\n                fcn.004628ff(arg_8h, 0x412b18);\n            }\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < 5);\n        fcn.004628ff(arg_8h, 0x412b1c);\n    }\n    else {\n        fcn.004685b0(arg_8h, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 590
    },
    "004637e0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004637e0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_EAX;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    var_28h = 0xffff;\n    var_24h = 0;\n    var_20h = 0;\n    var_1ch = 0;\n    if (in_EAX != 0) {\n        var_14h = fcn.004703b6();\n    }\n    var_10h = arg_ch;\n    var_ch = arg_10h;\n    var_8h = 0;\n    (*_fcn.00412210)(arg_8h, 0x1007, 0, &var_2ch);\n    return;\n}\n",
        "token_count": 229
    },
    "00465af9": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00465af9(int32_t arg_8h, char *arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    bool bVar3;\n    bool bVar4;\n    char *pcVar5;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    char *var_8h;\n    uint var_4h;\n    \n    pcVar5 = NULL;\n    var_10h = 0;\n    var_ch = 0;\n    var_8h = NULL;\n    bVar4 = true;\n    bVar3 = false;\n    fcn.004658c0();\n    if (*arg_ch != '\\0') {\n        do {\n            cVar1 = arg_ch[var_ch];\n            if ((cVar1 != ' ') || (bVar3)) {\n                if (cVar1 == '\\\"') {\n                    bVar3 = bVar3 ^ 1;\n                }\n                else {\n                    if (pcVar5 == NULL) {\n                        if (cVar1 == ' ') goto code_r0x00465c07;\n                        pcVar5 = var_8h;\n                        if (-1 < var_10h) {\n                            if (var_10h == -1) {\n                                fcn.0047047e(*(arg_8h + 0x20));\n                            }\n                            else {\n                                fcn.00464f6c(4, *(arg_8h + 0x28));\n                            }\n                            if (*(arg_8h + 0x2c) < var_10h + 1) {\n                                *(arg_8h + 0x2c) = var_10h + 1;\n                            }\n                            *(*(arg_8h + 0x20) + var_10h * 4) = var_ch;\n                        }\n                    }\n                    cVar1 = arg_ch[var_ch];\n                    fcn.00465997();\n                    *pcVar5 = cVar1;\n                    pcVar5 = pcVar5 + 1;\n                    var_8h = pcVar5;\n                }\ncode_r0x00465c07:\n                bVar4 = false;\n            }\n            else if (!bVar4) {\n                fcn.00465997();\n                *pcVar5 = '\\0';\n                fcn.004658e6(0x412466);\n                var_10h = var_10h + 1;\n                bVar4 = true;\n                var_8h = NULL;\n                pcVar5 = NULL;\n            }\n            var_ch = var_ch + 1;\n        } while (arg_ch[var_ch] != '\\0');\n        if (0 < pcVar5) {\n            fcn.00465997();\n            *pcVar5 = '\\0';\n            fcn.004658e6(0x412466);\n        }\n    }\n    uVar2 = *(arg_8h + 0x1c);\n    *(arg_8h + 0x30) = uVar2;\n    fcn.004659cd();\n    return uVar2;\n}\n",
        "token_count": 718
    },
    "0046d778": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046d778(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBX;\n    uint var_30h;\n    uint var_20h;\n    uint var_10h;\n    \n    pcVar1 = *0x412130;\n    iVar2 = (**0x412130)(0x413ae8, &var_20h);\n    iVar3 = (*pcVar1)(0x413b10, &var_10h);\n    if (((iVar2 == 0) && (iVar3 == 0)) &&\n       (iVar2 = fcn.0046d73c(&var_20h, &var_10h, arg_ch, &arg_8h, &arg_ch),  iVar2 == 0)) {\n        iVar2 = arg_8h;\n        if (0x7e < arg_8h) {\n            iVar2 = 0x7e;\n        }\n        fcn.0047043c();\n        *(iVar2 + unaff_EBX) = 0;\n        (**0x412388)(arg_ch);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 275
    },
    "0046fcc8": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nchar fcn.0046fcc8(void)\n\n{\n    char in_AL;\n    \n    if (in_AL - 0x30U < 10) {\n        return in_AL + '\\x04';\n    }\n    if (in_AL + 0xbfU < 0x1a) {\n        return in_AL + -0x41;\n    }\n    if (in_AL == '_') {\n        return '?';\n    }\n    if (in_AL + 0x9fU < 0x1a) {\n        return in_AL + -0x47;\n    }\n    return -1;\n}\n",
        "token_count": 128
    },
    "0041d7a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d7a8(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    do {\n        arg_8h = arg_8h >> 7 | arg_ch << 0x19;\n        arg_ch = arg_ch >> 7;\n        iVar1 = iVar1 + 1;\n        if ((arg_8h | arg_ch) == 0) {\n            return;\n        }\n    } while (iVar1 < 9);\n    return;\n}\n",
        "token_count": 123
    },
    "00438eaa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00438eaa(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar1 = *in_EAX;\n    iVar2 = fcn.0043fe38();\n    iVar3 = 0;\n    if (iVar2 != 0) {\n        if ((arg_8h != 7) && (0 < *(iVar1 + 4))) {\n            do {\n                fcn.00429bea(0x22, iVar3, (arg_8h == 9) + '\\x01');\n                fcn.0042a0d8();\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < *(iVar1 + 4));\n        }\n        fcn.00429b6c(0x21, 0, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 218
    },
    "0043f5cb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043f5cb(int32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h, uint8_t *arg_18h)\n\n{\n    uint8_t uVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    uint arg_10h_00;\n    int32_t iVar7;\n    int32_t iVar8;\n    ulong uVar9;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar5 = fcn.00429c62();\n    uVar6 = fcn.00429c62();\n    var_18h = 0;\n    piVar2 = *(arg_ch + 0x18);\n    uVar1 = *arg_18h;\n    uVar3 = *(arg_18h + 4);\n    iVar4 = piVar2[2];\n    uVar9 = fcn.004349af();\n    iVar7 = uVar9 >> 0x20;\n    arg_10h_00 = uVar9;\n    if ((iVar7 == 5) || (iVar7 == 10)) {\n        var_18h = *(arg_8h + 0x44);\n        *(arg_8h + 0x44) = var_18h + 1;\n        fcn.00429b6c(0x2a, var_18h, arg_10h_00, arg_14h);\n        var_4h = 0;\n    }\n    else {\n        var_4h = fcn.004349af();\n    }\n    iVar7 = fcn.00429bea(0x40, iVar4, uVar5);\n    fcn.0043f1fc(uVar6);\n    fcn.00429b6c(0x1c, iVar4, *piVar2 + 1, arg_10h_00);\n    if (uVar1 == 6) {\n        fcn.0043347e(uVar3);\n    }\n    else if (uVar1 == 7) {\n        fcn.00429c01(arg_10h, 0x1e, arg_10h_00, 1, var_4h, arg_ch + 5, 1);\n        fcn.0043332d();\n        fcn.00429bea(0x46, uVar3, var_4h);\n    }\n    else if ((uVar1 < 8) || (9 < uVar1)) {\n        iVar8 = 0;\n        if (0 < arg_14h) {\n            do {\n                fcn.00429b6c(0x1c, var_18h, iVar8, *(arg_18h + 8) + iVar8);\n                if (iVar8 == 0) {\n                    fcn.00429e02();\n                }\n                iVar8 = iVar8 + 1;\n            } while (iVar8 < arg_14h);\n        }\n        if (uVar1 == 5) {\n            fcn.00429bea(0x10, *(arg_18h + 8), arg_14h);\n            fcn.0043332d();\n        }\n        else {\n            fcn.00429bd5(4, *(arg_18h + 4));\n        }\n    }\n    else {\n        fcn.00429bea(0x36, uVar3, var_4h);\n        fcn.00429b6c(0x37, uVar3, arg_10h_00, var_4h);\n        fcn.00429e02();\n    }\n    fcn.004349ca();\n    fcn.004349ca();\n    fcn.00429caf();\n    fcn.00429bea(0x43, iVar4, iVar7 + 1);\n    fcn.00429caf();\n    if ((uVar1 == 5) || (uVar1 == 10)) {\n        fcn.00429b6c(0x2b, var_18h, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 975
    },
    "004493b3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint32_t fcn.004493b3(void)\n\n{\n    uint8_t *in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t *unaff_ESI;\n    bool bVar6;\n    \n    uVar4 = *in_EAX;\n    uVar1 = 1;\n    if (uVar4 < 0x2f) {\n        if (uVar4 == 0x2e) {\n            *unaff_ESI = 0x76;\n            return 1;\n        }\n        if (uVar4 < 0x27) {\n            if (uVar4 == 0x26) {\n                *unaff_ESI = 0x52;\n                return 1;\n            }\n            if (uVar4 < 0x22) {\n                if (uVar4 == 0x21) {\n                    uVar1 = 2;\n                    if (in_EAX[1] == 0x3d) {\n                        *unaff_ESI = 0x4b;\n                        return 2;\n                    }\n                    goto code_r0x00449816;\n                }\n                if ((8 < uVar4) && ((uVar4 < 0xb || ((0xb < uVar4 && ((uVar4 < 0xe || (uVar4 == 0x20)))))))) {\n                    uVar3 = in_EAX[1];\n                    uVar1 = 1;\n                    while ((*(uVar3 + 0x443e90) & 1) != 0) {\n                        uVar1 = uVar1 + 1;\n                        uVar3 = in_EAX[uVar1];\n                    }\n                    *unaff_ESI = 0x95;\n                    return uVar1;\n                }\n            }\n            else {\n                if (uVar4 == 0x22) goto code_r0x004496fd;\n                if (uVar4 == 0x23) {\n                    uVar4 = uVar1;\n                    if ((*(in_EAX[1] + 0x443e90) & 4) != 0) {\n                        do {\n                            uVar4 = uVar4 + 1;\n                        } while ((*(in_EAX[uVar4] + 0x443e90) & 4) != 0);\n                        if (1 < uVar4) {\n                            *unaff_ESI = 0x84;\n                            return uVar4;\n                        }\n                    }\n                    goto code_r0x004497ec;\n                }\n                if (uVar4 == 0x25) {\n                    *unaff_ESI = 0x5a;\n                    return 1;\n                }\n            }\n        }\n        else {\n            if (uVar4 == 0x27) {\ncode_r0x004496fd:\n                uVar1 = 1;\n                uVar3 = in_EAX[1];\n                while (uVar5 = uVar3,  uVar5 != 0) {\n                    if (uVar5 == uVar4) {\n                        if (in_EAX[uVar1 + 1] != uVar4) break;\n                        uVar1 = uVar1 + 1;\n                    }\n                    uVar1 = uVar1 + 1;\n                    uVar3 = in_EAX[uVar1];\n                }\n                if (uVar5 == 0x27) {\n                    *unaff_ESI = 0x5e;\ncode_r0x0044963a:\n                    return uVar1 + 1;\n                }\n                if (uVar5 != 0) {\n                    *unaff_ESI = 0x1a;\n                    goto code_r0x0044963a;\n                }\n                goto code_r0x00449816;\n            }\n            if (uVar4 == 0x28) {\n                *unaff_ESI = 0x16;\n                return 1;\n            }\n            if (uVar4 == 0x29) {\n                *unaff_ESI = 0x17;\n                return 1;\n            }\n            if (uVar4 == 0x2a) {\n                *unaff_ESI = 0x58;\n                return 1;\n            }\n            if (uVar4 == 0x2b) {\n                *unaff_ESI = 0x56;\n                return 1;\n            }\n            if (uVar4 == 0x2c) {\n                *unaff_ESI = 0x19;\n                return 1;\n            }\n            if (uVar4 == 0x2d) {\n                if (in_EAX[1] != 0x2d) {\n                    *unaff_ESI = 0x57;\n                    return 1;\n                }\n                uVar1 = 2;\n                uVar3 = in_EAX[2];\n                while ((uVar3 != 0 && (uVar3 != 10))) {\n                    uVar1 = uVar1 + 1;\n                    uVar3 = in_EAX[uVar1];\n                }\n                goto code_r0x004494dc;\n            }\n        }\n    }\n    else if (uVar4 < 0x40) {\n        if (uVar4 == 0x3f) {\n            uVar3 = in_EAX[1];\n            *unaff_ESI = 0x85;\n            uVar1 = 1;\n            while ((*(uVar3 + 0x443e90) & 4) != 0) {\n                uVar1 = uVar1 + 1;\n                uVar3 = in_EAX[uVar1];\n            }\n            return uVar1;\n        }\n        if (uVar4 < 0x3c) {\n            if (uVar4 == 0x3b) {\n                *unaff_ESI = 1;\n                return 1;\n            }\n            if (uVar4 == 0x2f) {\n                if ((in_EAX[1] != 0x2a) || (uVar3 = in_EAX[2],  uVar3 == 0)) {\n                    *unaff_ESI = 0x59;\n                    return 1;\n                }\n                for (uVar1 = 3; (uVar3 != 0x2a || (in_EAX[uVar1] != 0x2f)); uVar1 = uVar1 + 1) {\n                    uVar3 = in_EAX[uVar1];\n                    if (uVar3 == 0) goto code_r0x004494dc;\n                }\n                uVar1 = uVar1 + 1;\ncode_r0x004494dc:\n                *unaff_ESI = 0x95;\n                return uVar1;\n            }\n            if (0x2f < uVar4) {\n                if (uVar4 < 0x3a) {\n                    *unaff_ESI = 0x81;\n                    uVar1 = 0;\n                    while ((*(uVar4 + 0x443e90) & 4) != 0) {\n                        uVar1 = uVar1 + 1;\n                        uVar4 = in_EAX[uVar1];\n                    }\n                    if ((*(in_EAX[uVar1] + 0x443e90) & 0x46) == 0) {\n                        return uVar1;\n                    }\n                    do {\n                        uVar1 = uVar1 + 1;\n                    } while ((*(in_EAX[uVar1] + 0x443e90) & 0x46) != 0);\n                    goto code_r0x00449816;\n                }\n                if (uVar4 == 0x3a) goto code_r0x004497ec;\n            }\n        }\n        else {\n            if (uVar4 == 0x3c) {\n                uVar3 = in_EAX[1];\n                if (uVar3 == 0x3d) {\n                    *unaff_ESI = 0x4e;\n                }\n                else if (uVar3 == 0x3e) {\n                    *unaff_ESI = 0x4b;\n                }\n                else {\n                    if (uVar3 != 0x3c) {\n                        *unaff_ESI = 0x4f;\n                        return 1;\n                    }\n                    *unaff_ESI = 0x54;\n                }\n                return 2;\n            }\n            if (uVar4 == 0x3d) {\n                uVar3 = in_EAX[1];\n                *unaff_ESI = 0x4c;\n                uVar1 = uVar3 == 0x3d;\n                goto code_r0x0044963a;\n            }\n            if (uVar4 == 0x3e) {\n                if (in_EAX[1] == 0x3d) {\n                    *unaff_ESI = 0x50;\n                    return 2;\n                }\n                if (in_EAX[1] == 0x3e) {\n                    *unaff_ESI = 0x55;\n                    return 2;\n                }\n                *unaff_ESI = 0x4d;\n                return 1;\n            }\n        }\n    }\n    else {\n        if (uVar4 == 0x40) {\ncode_r0x004497ec:\n            uVar4 = in_EAX[1];\n            iVar2 = 0;\n            *unaff_ESI = 0x85;\n            if (uVar4 != 0) {\n                do {\n                    if ((*(uVar4 + 0x443e90) & 0x46) == 0) break;\n                    iVar2 = iVar2 + 1;\n                    uVar1 = uVar1 + 1;\n                    uVar4 = in_EAX[uVar1];\n                } while (uVar4 != 0);\n                if (iVar2 != 0) {\n                    return uVar1;\n                }\n            }\n            goto code_r0x00449816;\n        }\n        if (uVar4 != 0x58) {\n            if (uVar4 == 0x5b) {\n                for (uVar1 = 1; (uVar4 != 0x5d && (uVar4 = in_EAX[uVar1],  uVar4 != 0)); uVar1 = uVar1 + 1) {\n                }\n                *unaff_ESI = ((uVar4 != 0x5d) - 1 & 0xffffff86) + 0x94;\n                return uVar1;\n            }\n            if (uVar4 == 0x60) goto code_r0x004496fd;\n            if (uVar4 != 0x78) {\n                if (uVar4 == 0x7c) {\n                    if (in_EAX[1] != 0x7c) {\n                        *unaff_ESI = 0x53;\n                        return 1;\n                    }\n                    *unaff_ESI = 0x5b;\n                    return 2;\n                }\n                if (uVar4 == 0x7e) {\n                    *unaff_ESI = 0x5d;\n                    return 1;\n                }\n                goto code_r0x00449558;\n            }\n        }\n        if (in_EAX[1] == 0x27) {\n            uVar3 = in_EAX[2];\n            *unaff_ESI = 0x83;\n            uVar1 = 2;\n            while ((uVar4 = uVar3,  uVar4 != 0 && (uVar4 != 0x27))) {\n                if ((*(uVar4 + 0x443e90) & 8) == 0) {\n                    *unaff_ESI = 0x94;\n                }\n                uVar1 = uVar1 + 1;\n                uVar3 = in_EAX[uVar1];\n            }\n            uVar5 = uVar1 & 0x80000001;\n            bVar6 = uVar5 == 0;\n            if (uVar5 < 0) {\n                bVar6 = (uVar5 - 1 | 0xfffffffe) == 0xffffffff;\n            }\n            if (((!bVar6) || (uVar4 == 0)) && (*unaff_ESI = 0x94,  uVar4 == 0)) {\n                return uVar1;\n            }\n            goto code_r0x0044963a;\n        }\n    }\ncode_r0x00449558:\n    if ((*(uVar4 + 0x443e90) & 0x46) != 0) {\n        uVar3 = in_EAX[1];\n        uVar1 = 1;\n        while ((*(uVar3 + 0x443e90) & 0x46) != 0) {\n            uVar1 = uVar1 + 1;\n            uVar3 = in_EAX[uVar1];\n        }\n        iVar2 = fcn.0044933d();\n        *unaff_ESI = iVar2;\n        return uVar1;\n    }\n    uVar1 = 1;\ncode_r0x00449816:\n    *unaff_ESI = 0x94;\n    return uVar1;\n}\n",
        "token_count": 2906
    },
    "00417529": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417529(int32_t arg_8h)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    uVar3 = *(in_ECX + 0x10);\n    uVar1 = uVar3 + in_EAX * 8;\n    *(in_ECX + 0x10) = uVar1;\n    if (uVar1 < uVar3) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 1;\n    }\n    *(in_ECX + 0x14) = *(in_ECX + 0x14) + (in_EAX >> 0x1d);\n    uVar1 = uVar3 >> 3 & 0x3f;\n    if (uVar1 != 0) {\n        uVar3 = 0x40 - uVar1;\n        iVar2 = uVar1 + 0x18 + in_ECX;\n        if (in_EAX < uVar3) goto code_r0x004175ba;\n        fcn.0044b575(iVar2, arg_8h, uVar3);\n        fcn.00417646();\n        arg_8h = arg_8h + uVar3;\n        in_EAX = in_EAX - uVar3;\n    }\n    if (0x3f < in_EAX) {\n        uVar1 = in_EAX >> 6;\n        do {\n            fcn.0044b575(in_ECX + 0x18, arg_8h, 0x40);\n            fcn.00417646();\n            arg_8h = arg_8h + 0x40;\n            uVar1 = uVar1 - 1;\n        } while (uVar1 != 0);\n    }\n    iVar2 = in_ECX + 0x18;\ncode_r0x004175ba:\n    fcn.0044b575(iVar2, arg_8h);\n    return;\n}\n",
        "token_count": 465
    },
    "0041d0c9": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0041d0c9(uint8_t *param_1, uint8_t **param_2)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    \n    uVar2 = *param_1;\n    param_1 = param_1 + 1;\n    if (0xbf < uVar2) {\n        uVar2 = *(uVar2 + 0x444120);\n        uVar1 = *param_1;\n        while ((uVar1 & 0xc0) == 0x80) {\n            uVar2 = uVar2 * 0x40 + (uVar1 & 0x3f);\n            param_1 = param_1 + 1;\n            uVar1 = *param_1;\n        }\n        if (((uVar2 < 0x80) || ((uVar2 & 0xfffff800) == 0xd800)) || ((uVar2 & 0xfffffffe) == 0xfffe)) {\n            uVar2 = 0xfffd;\n        }\n    }\n    *param_2 = param_1;\n    return uVar2;\n}\n",
        "token_count": 256
    },
    "0046aadf": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046aadf(int32_t arg_8h)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    uVar3 = *(in_ECX + 0x10);\n    uVar1 = uVar3 + in_EAX * 8;\n    *(in_ECX + 0x10) = uVar1;\n    if (uVar1 < uVar3) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 1;\n    }\n    *(in_ECX + 0x14) = *(in_ECX + 0x14) + (in_EAX >> 0x1d);\n    uVar1 = uVar3 >> 3 & 0x3f;\n    if (uVar1 != 0) {\n        uVar3 = 0x40 - uVar1;\n        iVar2 = uVar1 + 0x18 + in_ECX;\n        if (in_EAX < uVar3) goto code_r0x0046ab70;\n        fcn.0047043c(iVar2, arg_8h, uVar3);\n        fcn.0046abfc();\n        arg_8h = arg_8h + uVar3;\n        in_EAX = in_EAX - uVar3;\n    }\n    if (0x3f < in_EAX) {\n        uVar1 = in_EAX >> 6;\n        do {\n            fcn.0047043c(in_ECX + 0x18, arg_8h, 0x40);\n            fcn.0046abfc();\n            arg_8h = arg_8h + 0x40;\n            uVar1 = uVar1 - 1;\n        } while (uVar1 != 0);\n    }\n    iVar2 = in_ECX + 0x18;\ncode_r0x0046ab70:\n    fcn.0047043c(iVar2, arg_8h);\n    return;\n}\n",
        "token_count": 470
    },
    "0040a358": {
        "rules": [
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688",
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.0040a358(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    char cVar4;\n    int32_t in_EAX;\n    int32_t iVar5;\n    char *extraout_EDX;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t unaff_EDI;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    iVar6 = 0;\n    iVar5 = fcn.0044b52b();\n    if (-1 < iVar5 + -3) {\n        iVar7 = iVar6;\n        do {\n            uVar1 = fcn.0040a31c();\n            uVar2 = fcn.0040a31c();\n            uVar3 = fcn.0040a31c();\n            cVar4 = fcn.0040a31c();\n            *(unaff_EDI + iVar7) = cVar4 << 2 | uVar1 >> 4;\n            if (*extraout_EDX == '=') {\n                *(iVar7 + 1 + unaff_EDI) = 0;\n                return iVar7 + 1;\n            }\n            *(iVar7 + 1 + unaff_EDI) = uVar2 >> 2 | uVar1 << 4;\n            if (extraout_EDX[1] == '=') {\n                *(iVar7 + 2 + unaff_EDI) = 0;\n                return iVar7 + 2;\n            }\n            iVar6 = iVar7 + 3;\n            *(iVar7 + 2 + unaff_EDI) = uVar2 << 6 | uVar3;\n        } while ((iVar7 + 8 < arg_8h) && (iVar7 = iVar6,  extraout_EDX + (2 - in_EAX) <= iVar5 + -3));\n    }\n    *(iVar6 + unaff_EDI) = 0;\n    return iVar6;\n}\n",
        "token_count": 464
    },
    "004601f2": {
        "rules": [
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688",
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.004601f2(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    char cVar4;\n    int32_t in_EAX;\n    int32_t iVar5;\n    char *extraout_EDX;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t unaff_EDI;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    iVar6 = 0;\n    iVar5 = fcn.004703b6();\n    if (-1 < iVar5 + -3) {\n        iVar7 = iVar6;\n        do {\n            uVar1 = fcn.004601b6();\n            uVar2 = fcn.004601b6();\n            uVar3 = fcn.004601b6();\n            cVar4 = fcn.004601b6();\n            *(unaff_EDI + iVar7) = cVar4 << 2 | uVar1 >> 4;\n            if (*extraout_EDX == '=') {\n                *(iVar7 + 1 + unaff_EDI) = 0;\n                return iVar7 + 1;\n            }\n            *(iVar7 + 1 + unaff_EDI) = uVar2 >> 2 | uVar1 << 4;\n            if (extraout_EDX[1] == '=') {\n                *(iVar7 + 2 + unaff_EDI) = 0;\n                return iVar7 + 2;\n            }\n            iVar6 = iVar7 + 3;\n            *(iVar7 + 2 + unaff_EDI) = uVar2 << 6 | uVar3;\n        } while ((iVar7 + 8 < arg_8h) && (iVar7 = iVar6,  extraout_EDX + (2 - in_EAX) <= iVar5 + -3));\n    }\n    *(iVar6 + unaff_EDI) = 0;\n    return iVar6;\n}\n",
        "token_count": 459
    },
    "00460bcc": {
        "rules": [
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688",
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t fcn.00460bcc(void)\n\n{\n    char cVar1;\n    char cVar2;\n    char cVar3;\n    char cVar4;\n    int32_t in_EAX;\n    int32_t iVar5;\n    char *extraout_EDX;\n    int32_t iVar6;\n    int32_t unaff_EDI;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    iVar6 = 0;\n    iVar5 = fcn.004703b6();\n    if (-1 < iVar5 + -3) {\n        do {\n            cVar1 = fcn.004601b6();\n            cVar2 = fcn.004601b6();\n            cVar3 = fcn.004601b6();\n            cVar4 = fcn.004601b6();\n            *(iVar6 + unaff_EDI) = cVar4 * '\\x04' + (cVar1 >> 4);\n            if (*extraout_EDX == '=') {\n                return iVar6 + 1;\n            }\n            *(iVar6 + 1 + unaff_EDI) = (cVar2 >> 2) + cVar1 * '\\x10';\n            if (extraout_EDX[1] == '=') {\n                return iVar6 + 2;\n            }\n            *(iVar6 + 2 + unaff_EDI) = cVar2 * '@' + cVar3;\n            iVar6 = iVar6 + 3;\n        } while (extraout_EDX + (2 - in_EAX) <= iVar5 + -3);\n    }\n    return iVar6;\n}\n",
        "token_count": 368
    },
    "00419ee8": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00419ee8(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t unaff_ESI;\n    \n    fcn.0044ba9d();\n    arg_8h = 0;\n    uVar1 = arg_8h;\n    iVar2 = fcn.004106a5();\n    arg_8h = uVar1;\n    if ((iVar2 == 0) || (*0x4514f0 == 0)) {\n        if (*0x4514ec == 0) {\n            return 0;\n        }\n        iVar2 = (**0x4509bc)();\n        if (iVar2 == -1) {\n            return 0;\n        }\n        arg_8h = 1;\n        iVar2 = (**0x4509b4)();\n        while (iVar2 != 0) {\n            fcn.0044b531();\n            fcn.0044b56f();\n            iVar2 = fcn.0041a108();\n            arg_8h = uVar1;\n            if (iVar2 == 0) break;\n            iVar2 = (**0x4509b0)();\n        }\n    }\n    else {\n        iVar2 = (**0x443198)();\n        if (iVar2 == 0) {\n            return 0;\n        }\n        iVar2 = (**0x4509c0)();\n        if (iVar2 != 0) {\n            unaff_ESI = unaff_ESI >> 2;\n            uVar3 = 0;\n            if (unaff_ESI != 0) {\n                do {\n                    fcn.0044b531();\n                    fcn.0044b531();\n                    (**0x4509b8)();\n                    fcn.00419e02();\n                    (**0x4509c4)();\n                    iVar2 = fcn.0041a108();\n                    if (iVar2 == 0) break;\n                    uVar3 = uVar3 + 1;\n                } while (uVar3 < unaff_ESI);\n            }\n        }\n    }\n    (**0x4430e4)();\n    return arg_8h;\n}\n",
        "token_count": 474
    },
    "0041af05": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041af05(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    \n    iVar2 = (*_fcn.00443160)(arg_8h, arg_10h, arg_ch);\n    if ((((iVar2 != 0) && (uVar3 = (*_fcn.0044317c)(arg_8h, iVar2),  uVar3 != 0)) &&\n        (iVar2 = (*_fcn.00443164)(arg_8h, iVar2),  iVar2 != 0)) && (iVar2 = (*_fcn.00443154)(iVar2),  iVar2 != 0)) {\n        uVar4 = uVar3 * uVar3;\n        uVar5 = 0;\n        if (uVar3 >> 2 != 0) {\n            do {\n                iVar1 = *(iVar2 + uVar5 * 4);\n                uVar4 = iVar1 * uVar5 * uVar3 * 0x11 ^ iVar1 + uVar4;\n                uVar5 = uVar5 + 1;\n            } while (uVar5 < uVar3 >> 2);\n        }\n        *0x450bf0 = *0x450bf0 + uVar4 ^ uVar3;\n    }\n    return 1;\n}\n",
        "token_count": 326
    },
    "00429c62": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nint32_t fcn.00429c62(void)\n\n{\n    int32_t iVar1;\n    uint *in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    iVar1 = in_EAX[9];\n    in_EAX[9] = iVar1 + 1;\n    if (in_EAX[10] <= iVar1) {\n        uVar2 = fcn.0041c409(*in_EAX, in_EAX[0xb]);\n        in_EAX[0xb] = uVar2;\n        uVar3 = fcn.0041c0f1(uVar2);\n        in_EAX[10] = uVar3 >> 2;\n    }\n    if (in_EAX[0xb] != 0) {\n        *(in_EAX[0xb] + iVar1 * 4) = 0xffffffff;\n    }\n    return -1 - iVar1;\n}\n",
        "token_count": 200
    },
    "00460c6f": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00460c6f(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint var_14h;\n    uchar uStack20;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint8_t *var_4h;\n    \n    var_14h = *0x412480;\n    uStack20 = *0x412484;\n    iVar4 = arg_10h - (arg_10h & 0xfffffffc);\n    uVar5 = 0;\n    var_8h = iVar4;\n    if (arg_10h != 0) {\n        var_ch = arg_ch - arg_8h;\n        do {\n            uVar2 = uVar5 & 3;\n            iVar1 = 0;\n            if ((arg_10h & 0xfffffffc) <= uVar5) {\n                iVar1 = 4 - iVar4;\n            }\n            if (3 < uVar5) {\n                var_4h = &var_14h + iVar1 + uVar2;\n                *var_4h = *var_4h ^ *(iVar1 + uVar5 + -4 + arg_ch);\n                iVar4 = var_8h;\n            }\n            puVar3 = arg_8h + uVar5;\n            uVar5 = uVar5 + 1;\n            *puVar3 = *(&var_14h + iVar1 + uVar2) ^ puVar3[var_ch];\n        } while (uVar5 < arg_10h);\n    }\n    *(arg_8h + -1 + arg_10h) = 0;\n    return;\n}\n",
        "token_count": 409
    },
    "00463c4d": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00463c4d(uint32_t *param_1)\n\n{\n    uint32_t *in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = (*in_EAX >> 4 ^ *param_1) & 0xf0f0f0f;\n    *param_1 = *param_1 ^ uVar1;\n    uVar2 = *param_1;\n    *in_EAX = *in_EAX ^ uVar1 << 4;\n    uVar1 = *(in_EAX + 2) ^ uVar2 & 0xffff;\n    *param_1 = *param_1 ^ uVar1;\n    uVar2 = *param_1;\n    *in_EAX = *in_EAX ^ uVar1 << 0x10;\n    uVar2 = (uVar2 >> 2 ^ *in_EAX) & 0x33333333;\n    *in_EAX = *in_EAX ^ uVar2;\n    *param_1 = *param_1 ^ uVar2 << 2;\n    uVar1 = (*param_1 >> 8 ^ *in_EAX) & 0xff00ff;\n    *in_EAX = *in_EAX ^ uVar1;\n    uVar2 = *in_EAX;\n    uVar1 = uVar1 << 8 ^ *param_1;\n    uVar1 = uVar1 << 1 | uVar1 < 0;\n    *param_1 = uVar1;\n    uVar1 = (uVar1 ^ uVar2) & 0xaaaaaaaa;\n    *param_1 = *param_1 ^ uVar1;\n    uVar2 = uVar2 ^ uVar1;\n    *in_EAX = uVar2 << 1 | uVar2 < 0;\n    return;\n}\n",
        "token_count": 413
    },
    "00463cbe": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00463cbe(uint32_t *param_1)\n\n{\n    uint32_t *in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar1 = *param_1 >> 1 | ((*param_1 & 1) != 0) << 0x1f;\n    uVar3 = (*in_EAX ^ uVar1) & 0xaaaaaaaa;\n    uVar2 = *in_EAX ^ uVar3;\n    uVar1 = uVar1 ^ uVar3;\n    uVar2 = uVar2 >> 1 | ((uVar2 & 1) != 0) << 0x1f;\n    *in_EAX = uVar2;\n    uVar2 = (uVar2 >> 8 ^ uVar1) & 0xff00ff;\n    *param_1 = uVar1;\n    *param_1 = *param_1 ^ uVar2;\n    uVar1 = *param_1;\n    *in_EAX = *in_EAX ^ uVar2 << 8;\n    uVar1 = (*in_EAX >> 2 ^ uVar1) & 0x33333333;\n    *param_1 = *param_1 ^ uVar1;\n    *in_EAX = *in_EAX ^ uVar1 << 2;\n    uVar2 = *(param_1 + 2) ^ *in_EAX & 0xffff;\n    *in_EAX = *in_EAX ^ uVar2;\n    uVar1 = *in_EAX;\n    *param_1 = *param_1 ^ uVar2 << 0x10;\n    uVar1 = (*param_1 >> 4 ^ uVar1) & 0xf0f0f0f;\n    *in_EAX = *in_EAX ^ uVar1;\n    *param_1 = *param_1 ^ uVar1 << 4;\n    return;\n}\n",
        "token_count": 442
    },
    "0046d0c7": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.0046d0c7(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t unaff_ESI;\n    uint32_t unaff_EDI;\n    int32_t aiStack17516 [4096];\n    uint var_468h;\n    uint *var_454h;\n    uint var_450h;\n    uint *var_44ch;\n    uint var_348h;\n    uchar var_240h;\n    uint var_23fh;\n    uint var_138h;\n    uint *var_134h;\n    uint var_130h;\n    uint uStack80;\n    uint *puStack76;\n    uint *puStack72;\n    uint *puStack68;\n    uint *puStack64;\n    uint *puStack60;\n    uint *puStack56;\n    uchar *puStack52;\n    uint *puStack48;\n    uint *var_28h;\n    uint *var_24h;\n    uint uStack36;\n    uint *var_1ch;\n    uint *var_18h;\n    uint uStack24;\n    uint var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint *var_4h;\n    \n    var_4h = 0x46d0d4;\n    fcn.00470712();\n    var_10h = 0x46d0e1;\n    var_ch = unaff_EDI;\n    var_8h = unaff_ESI;\n    iVar1 = fcn.0046510e();\n    if ((iVar1 == 0) || (*0x417518 == 0)) {\n        if (*0x417514 == 0) {\n            return var_10h;\n        }\n        var_10h = arg_8h;\n        uStack24 = 8;\n        var_18h = 0x46d219;\n        var_1ch = (**0x416fe0)();\n        if (var_1ch == 0xffffffff) {\n            return var_10h;\n        }\n        var_18h = &fcn.0046d0c7::var_468h;\n        var_10h = 1;\n        var_468h = 0x224;\n        uStack36 = 0x46d245;\n        var_4h = var_1ch;\n        iVar1 = (**0x416fd8)();\n        while (iVar1 != 0) {\n            puStack48 = 0x118;\n            puStack56 = &fcn.0046d0c7::var_138h;\n            puStack52 = NULL;\n            puStack60 = 0x46d259;\n            fcn.004703f4();\n            var_134h = var_44ch;\n            puStack60 = &fcn.0046d0c7::var_348h;\n            puStack64 = &fcn.0046d0c7::var_130h;\n            var_138h = arg_8h;\n            puStack68 = 0x46d27e;\n            fcn.004703fa();\n            var_24h = var_454h;\n            puStack48 = &fcn.0046d0c7::var_138h;\n            var_28h = arg_ch;\n            var_468h = 0x224;\n            puStack56 = 0x46d2a8;\n            iVar1 = fcn.0046d2d1();\n            if (iVar1 == 0) break;\n            puStack56 = &fcn.0046d0c7::var_468h;\n            puStack60 = var_4h;\n            puStack64 = 0x46d2bc;\n            iVar1 = (**0x416fd4)();\n        }\n    }\n    else {\n        var_10h = arg_8h;\n        uStack24 = 0;\n        var_18h = 0x410;\n        var_1ch = 0x46d104;\n        var_28h = (**0x4120c0)();\n        if (var_28h == NULL) {\n            return var_10h;\n        }\n        var_1ch = &fcn.0046d0c7::var_ch;\n        uStack36 = 0x4000;\n        var_24h = &stack0xffffbb94;\n        puStack48 = 0x46d126;\n        var_4h = var_28h;\n        iVar1 = (**0x416fe4)();\n        if (iVar1 != 0) {\n            var_ch = var_ch >> 2;\n            var_10h = 1;\n            var_8h = 0;\n            if (var_ch != 0) {\n                do {\n                    puStack48 = 0x104;\n                    puStack56 = &fcn.0046d0c7::var_23fh;\n                    puStack52 = NULL;\n                    var_240h = 0;\n                    puStack60 = 0x46d160;\n                    fcn.004703f4();\n                    puStack60 = 0x118;\n                    puStack68 = &fcn.0046d0c7::var_138h;\n                    puStack64 = NULL;\n                    puStack72 = 0x46d172;\n                    fcn.004703f4();\n                    var_134h = *(&stack0xffffbb94 + var_8h * 4);\n                    puStack48 = 0x104;\n                    var_138h = arg_8h;\n                    puStack52 = &stack0xfffffdbc;\n                    puStack60 = var_4h;\n                    puStack64 = 0x46d1a0;\n                    puStack56 = var_134h;\n                    (**0x416fdc)();\n                    puStack64 = 0x46d1b1;\n                    fcn.0046cfe4();\n                    puStack64 = 0xc;\n                    puStack68 = &fcn.0046d0c7::var_1ch;\n                    puStack72 = var_134h;\n                    puStack76 = var_4h;\n                    uStack80 = 0x46d1c6;\n                    (**0x416fe8)();\n                    var_24h = &fcn.0046d0c7::var_138h;\n                    var_28h = arg_ch;\n                    puStack48 = 0x46d1e5;\n                    iVar1 = fcn.0046d2d1();\n                    if (iVar1 == 0) break;\n                    var_8h = var_8h + 1;\n                } while (var_8h < var_ch);\n            }\n        }\n    }\n    puStack48 = var_4h;\n    puStack52 = 0x46d2c9;\n    (*_fcn.0041209c)();\n    return var_10h;\n}\n",
        "token_count": 1538
    },
    "0046db7d": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046db7d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    \n    iVar2 = (*_fcn.004120a8)(arg_8h, arg_10h, arg_ch);\n    if ((((iVar2 != 0) && (uVar3 = (**0x4120b4)(arg_8h, iVar2),  uVar3 != 0)) &&\n        (iVar2 = (*_fcn.004120ac)(arg_8h, iVar2),  iVar2 != 0)) && (iVar2 = (**0x4120b8)(iVar2),  iVar2 != 0)) {\n        uVar4 = uVar3 * uVar3;\n        uVar5 = 0;\n        if (uVar3 >> 2 != 0) {\n            do {\n                iVar1 = *(iVar2 + uVar5 * 4);\n                uVar4 = iVar1 * uVar5 * uVar3 * 0x11 ^ iVar1 + uVar4;\n                uVar5 = uVar5 + 1;\n            } while (uVar5 < uVar3 >> 2);\n        }\n        *0x417110 = *0x417110 + uVar4 ^ uVar3;\n    }\n    return 1;\n}\n",
        "token_count": 325
    },
    "0046fcfc": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0046fcfc(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    char *extraout_EDX;\n    char *extraout_EDX_00;\n    char *extraout_EDX_01;\n    char *extraout_EDX_02;\n    char *pcVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t unaff_EDI;\n    uint var_ch;\n    uint var_8h;\n    uint8_t var_3h;\n    uint var_2h;\n    \n    iVar5 = 0;\n    iVar2 = fcn.004703b6();\n    if (-1 < iVar2 + -3) {\n        pcVar3 = in_EAX + 2;\n        iVar6 = iVar5;\n        do {\n            if (pcVar3[-2] == '.') {\n                var_2h._0_1_ = '>';\n            }\n            else {\n                var_2h._0_1_ = fcn.0046fcc8();\n                pcVar3 = extraout_EDX;\n            }\n            if (pcVar3[-1] == '.') {\n                var_2h._1_1_ = 0x3e;\n            }\n            else {\n                var_2h._1_1_ = fcn.0046fcc8();\n                pcVar3 = extraout_EDX_00;\n            }\n            if (*pcVar3 == '.') {\n                uVar4 = 0x3e;\n            }\n            else {\n                uVar1 = fcn.0046fcc8();\n                uVar4 = uVar1;\n                pcVar3 = extraout_EDX_01;\n            }\n            if (pcVar3[1] == '.') {\n                var_3h = 0x3e;\n            }\n            else {\n                var_3h = fcn.0046fcc8();\n                pcVar3 = extraout_EDX_02;\n            }\n            *(unaff_EDI + iVar6) = var_2h._1_1_ >> 4 | var_2h << 2;\n            if (*pcVar3 == '-') {\n                *(iVar6 + 1 + unaff_EDI) = 0;\n                return iVar6 + 1;\n            }\n            *(iVar6 + 1 + unaff_EDI) = uVar4 >> 2 | var_2h._1_1_ << 4;\n            if (pcVar3[1] == '-') {\n                *(iVar6 + 2 + unaff_EDI) = 0;\n                return iVar6 + 2;\n            }\n            iVar5 = iVar6 + 3;\n            *(iVar6 + 2 + unaff_EDI) = uVar4 << 6 | var_3h;\n            pcVar3 = pcVar3 + 4;\n        } while ((iVar6 + 8 < 0x3ff) && (iVar6 = iVar5,  pcVar3 + (-2 - in_EAX) <= iVar2 + -3));\n    }\n    *(iVar5 + unaff_EDI) = 0;\n    return iVar5;\n}\n",
        "token_count": 721
    },
    "0040c0fd": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c0fd(uint arg_8h, uint *arg_ch, int32_t arg_10h)\n\n{\n    uint16_t *puVar1;\n    int32_t arg_ch_00;\n    int32_t in_ECX;\n    uint *arg_8h_00;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if (arg_10h == 8) {\n        var_34h = 0;\n        var_30h = 2;\n        var_2ch = 3;\n        var_28h = 0;\n        var_24h = 1;\n        arg_10h = 0;\n        var_ch = in_ECX;\n        do {\n            puVar1 = (***arg_ch)((&var_34h)[arg_10h], *(var_ch + 0x5c));\n            arg_8h_00 = &var_8h;\n            var_20h = 0;\n            var_1ch = 0;\n            var_10h = 0x100;\n            var_18h = 0;\n            var_14h = 1;\n            var_8h = 0x22;\n            fcn.004110cc(arg_8h_00);\n            for (; var_4h = *puVar1,  *puVar1 != 0; puVar1 = puVar1 + 1) {\n                fcn.004110cc(arg_8h_00);\n            }\n            fcn.004110cc(&var_8h);\n            arg_ch_00 = var_20h;\n            if (var_20h == 0) {\n                arg_ch_00 = 0x4434fc;\n            }\n            fcn.0040c08e(arg_8h, arg_ch_00);\n            fcn.00411044();\n            if (arg_10h < 4) {\n                fcn.0040c08e(arg_8h, 0x44397c);\n            }\n            arg_10h = arg_10h + 1;\n        } while (arg_10h < 5);\n        fcn.0040c08e(arg_8h, 0x443980);\n    }\n    else {\n        fcn.004151ae(arg_8h, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 598
    },
    "0040c3ec": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c3ec(uint arg_8h, int32_t arg_ch)\n\n{\n    uint arg_ch_00;\n    int32_t *extraout_ECX;\n    ushort var_1800h;\n    uint var_17feh;\n    ushort var_1000h;\n    uint var_ffeh;\n    ushort var_800h;\n    uint var_7feh;\n    uint uStackY64;\n    uint *puStackY60;\n    uint uStackY56;\n    uint uStackY52;\n    uint *puStackY48;\n    uchar *arg_10h;\n    uchar *arg_14h;\n    \n    fcn.0044ba9d();\n    fcn.00410183(arg_8h, 0x4497f8);\n    var_1000h = 0;\n    fcn.0044b531();\n    puStackY48 = &fcn.0040c3ec::var_7feh;\n    var_800h = 0;\n    uStackY52 = 0x40c43c;\n    fcn.0044b531();\n    uStackY52 = 0x7fe;\n    puStackY60 = &fcn.0040c3ec::var_17feh;\n    uStackY56 = 0;\n    var_1800h = 0;\n    uStackY64 = 0x40c451;\n    fcn.0044b531();\n    if (*0x451160 != 0) {\n        fcn.0044b51f();\n    }\n    if (*0x45115c != 0) {\n        fcn.0044b56f();\n    }\n    arg_14h = &stack0xffffeffc;\n    arg_10h = &stack0xfffff7fc;\n    arg_ch_00 = (**(*extraout_ECX + 0x20))();\n    fcn.0041b56c(arg_8h, arg_ch_00, arg_10h, arg_14h);\n    fcn.00413002();\n    fcn.0044b51f();\n    puStackY48 = 0x40c4e7;\n    fcn.00410183(arg_8h, &stack0xffffe7fc);\n    if (arg_ch == 5) {\n        fcn.00415256();\n    }\n    return;\n}\n",
        "token_count": 518
    },
    "004134a4": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.004134a4(uint param_1)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (in_EAX == 4) {\n        uVar1 = 0x448824;\n    }\n    else {\n        if (in_EAX != 5) {\n            if (in_EAX == 6) {\n                uVar1 = 0x448848;\n            }\n            else {\n                if (in_EAX != 0) {\n                    return;\n                }\n                uVar1 = 0x448858;\n            }\n            fcn.0044b56f(0x4510d8, uVar1);\n            return;\n        }\n        uVar1 = 0x448834;\n    }\n    fcn.0044b51f(0x4510d8, 0x40, uVar1, param_1);\n    return;\n}\n",
        "token_count": 197
    },
    "00413825": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00413825(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    int32_t *piVar2;\n    int16_t iStackY8204;\n    uint uStackY64;\n    uint uStackY60;\n    \n    fcn.0044ba9d();\n    if (arg_ch == 4) {\n        fcn.004134a4();\n        uVar1 = (*_fcn.004432f8)();\n        *0x450ec4 = 0;\n        fcn.00413675(arg_10h, uVar1);\n        (**0x443308)();\n    }\n    else if (arg_ch == 5) {\n        piVar2 = *0x451460;\n        if (*0x451460 != NULL) {\n            for (; *piVar2 != 0; piVar2 = piVar2 + 1) {\n                if (*piVar2 == arg_10h) {\n                    return 1;\n                }\n            }\n        }\n        fcn.004134a4();\n        uVar1 = (**0x443310)();\n        iStackY8204 = 0;\n        fcn.0044b531();\n        (*_fcn.004432f4)();\n        if (iStackY8204 != 0) {\n            uStackY60 = 0x41390a;\n            fcn.004135c3(0x448814, &stack0xffffdff4, 0);\n        }\n        uStackY60 = 0x41391a;\n        (**0x443314)();\n        uStackY64 = 0x413921;\n        uStackY60 = uVar1;\n        (**0x443318)();\n    }\n    return 1;\n}\n",
        "token_count": 388
    },
    "00420348": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.00420348(void)\n\n{\n    int32_t *piVar1;\n    uchar unaff_BL;\n    int32_t unaff_ESI;\n    \n    piVar1 = *(unaff_ESI + 0x3c);\n    if (*piVar1 != 0) {\n        (**(*piVar1 + 0x20))(piVar1);\n        if (*(unaff_ESI + 0x10) != '\\x05') {\n            *(unaff_ESI + 0x10) = unaff_BL;\n        }\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "00420364": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nint32_t fcn.00420364(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    \n    iVar1 = 0;\n    if ((*(unaff_ESI + 0x10) < unaff_EBX) || (*(unaff_ESI + 0x10) == 5)) {\n        iVar1 = (**(**(unaff_ESI + 0x3c) + 0x1c))(*(unaff_ESI + 0x3c));\n        if ((iVar1 == 0) && ((*(unaff_ESI + 0x10) != '\\x05' || (unaff_EBX == 4)))) {\n            *(unaff_ESI + 0x10) = unaff_EBX;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 186
    },
    "00421720": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nint32_t fcn.00421720(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = 0;\n    if (*(in_EAX + 3) == '\\0') {\n        iVar1 = fcn.004216a3(&var_8h);\n        if (iVar1 == 0) {\n            iVar1 = *in_EAX;\n            if (var_8h == 0) {\n                iVar1 = (**(iVar1 + 0x1c))(iVar1, in_EAX[0x2c], 0);\n                var_4h = 0;\n            }\n            else {\n                iVar1 = (**(iVar1 + 0x20))(iVar1, in_EAX[0x2c], 0, &var_4h);\n            }\n            if (iVar1 == 0) {\n                if (var_4h == 0) {\n                    if (*(in_EAX + 5) == '\\x05') {\n                        *(in_EAX + 5) = 0;\n                    }\n                }\n                else {\n                    iVar1 = fcn.0042311b(0);\n                }\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 285
    },
    "00421b06": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nint32_t fcn.00421b06(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    do {\n        iVar1 = fcn.00420364();\n        if (iVar1 != 5) {\n            return iVar1;\n        }\n        iVar1 = (**(in_EAX + 0x98))(*(in_EAX + 0x9c));\n    } while (iVar1 != 0);\n    return 5;\n}\n",
        "token_count": 103
    },
    "00423d81": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00423d81(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint32_t *puVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    uint uVar7;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint32_t *puStack56;\n    uint32_t uStack44;\n    ulong uStack40;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    uint32_t uStack24;\n    int32_t iStack20;\n    uint32_t uStack16;\n    int32_t iStack12;\n    \n    uStack40._0_4_ = 0;\n    uStack44 = 0;\n    uStack40._4_4_ = 0;\n    iVar3 = (*(in_EAX + 0x32) & 1) * 0x10000 + (*(in_EAX + 0x32) & 0xfe00);\n    iVar2 = **(in_EAX + 0x14);\n    puVar4 = iVar2 + 0x60;\n    if (*(in_EAX + 0x34) <= *puVar4) {\n        return 0;\n    }\n    iVar1 = fcn.00423c3a(in_EAX, &uStack40);\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    if (iVar3 != arg_ch) {\n        iVar1 = fcn.0044a92e(0xa95c);\n        uStack40 = CONCAT44(uStack40._4_4_, uStack40);\n        goto code_r0x00424036;\n    }\n    uStack64 = *(in_EAX + 0x34);\n    uStack32 = *(in_EAX + 0x38);\n    puStack56 = iVar2 + 0x68;\n    iStack60 = 4;\n    iVar2 = iStack60;\n    do {\n        iStack60 = iVar2;\n        uStack28 = *puStack56;\n        if (uStack28 <= uStack64) {\n            iVar1 = fcn.004234e4(iStack60, 1);\n            if (iVar1 == 0) {\n                *puStack56 = 0xffffffff;\n                fcn.00423504(iStack60, 1);\n            }\n            else {\n                if (iVar1 != 5) goto code_r0x00424036;\n                uStack64 = uStack28;\n            }\n        }\n        puStack56 = puStack56 + 1;\n        iVar2 = iStack60 + 1;\n    } while (iStack60 + -2 < 5);\n    if ((uStack64 <= *puVar4) || (iVar1 = fcn.004234e4(3, 1),  iVar1 != 0)) {\n        uStack40 = CONCAT44(uStack40._4_4_, uStack40);\n        if (iVar1 == 5) {\n            iVar1 = 0;\n            uStack40 = CONCAT44(uStack40._4_4_, uStack40);\n        }\n        goto code_r0x00424036;\n    }\n    uStack28 = *puVar4;\n    if (arg_8h == 0) {\ncode_r0x00423ec5:\n        uStack40 = fcn.0044b8cd(uStack32, 0, iVar3, 0);\n        iVar1 = (**(**(in_EAX + 4) + 0x18))(*(in_EAX + 4), &uStack32);\n        if (iVar1 == 0) {\n            if ((iStack12 <= iStack20) && ((iStack12 < iStack20 || (uStack16 < uStack24)))) {\n                (**(**(in_EAX + 4) + 0x28))(*(in_EAX + 4), 5, &uStack24);\n            }\n            do {\n                iVar2 = fcn.00423a52(uStack40, &uStack44, &uStack40 + 4);\n                if (iVar2 != 0) break;\n                if (((uStack28 < uStack40._4_4_) && (uStack40._4_4_ <= uStack64)) && (uStack44 <= uStack32)) {\n                    iVar5 = fcn.0044b8cd();\n                    uVar7 = arg_10h;\n                    iVar1 = fcn.0041b9e4(arg_10h, iVar3, iVar5 + 0x38);\n                    if (iVar1 != 0) goto code_r0x00424020;\n                    iVar2 = iStack60;\n                    uVar6 = fcn.0044b8cd(uVar7, 0, unaff_EBX, uStack68);\n                    iVar1 = fcn.0041b9fe(arg_10h, iVar2, uVar6);\n                    if (iVar1 != 0) goto code_r0x00424020;\n                }\n            } while (iVar1 == 0);\n            if (iVar1 == 0) {\n                if (uStack64 == *(**(in_EAX + 0x14) + 0x10)) {\n                    uVar6 = fcn.0044b8cd();\n                    iVar1 = fcn.0041ba18(uVar6);\n                    if (iVar1 != 0) goto code_r0x00424020;\n                    if (arg_8h != 0) {\n                        iVar1 = (**(**(in_EAX + 4) + 0x14))(*(in_EAX + 4), arg_8h);\n                        if (iVar1 != 0) goto code_r0x00424020;\n                    }\n                }\n                *puVar4 = uStack64;\n            }\n        }\n    }\n    else {\n        iVar1 = (**(**(in_EAX + 8) + 0x14))(*(in_EAX + 8), arg_8h);\n        if (iVar1 == 0) goto code_r0x00423ec5;\n    }\ncode_r0x00424020:\n    fcn.00423504(3, 1);\ncode_r0x00424036:\n    fcn.0041c02b();\n    return iVar1;\n}\n",
        "token_count": 1429
    },
    "0042467b": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.0042467b(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uchar auStack4 [4];\n    \n    if (*(in_EAX + 0x1c) == 0) {\n        iVar5 = **(in_EAX + 0x14);\n        piVar4 = iVar5 + 0x60;\n        if (*piVar4 != 0) {\n            iVar3 = 4;\n            iVar1 = fcn.004234e4(4, 4);\n            if (iVar1 == 0) {\n                *(in_EAX + 0x34) = 0;\n                *(in_EAX + 0x58) = *(in_EAX + 0x58) + 1;\n                fcn.0041d7cc();\n                fcn.0041d7e6();\n                fcn.0041d095(4);\n                fcn.00423363();\n                *piVar4 = 0;\n                puVar2 = iVar5 + 0x68;\n                do {\n                    *puVar2 = 0xffffffff;\n                    puVar2 = puVar2 + 1;\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n                fcn.00423504(4, 4);\n            }\n            else if (iVar1 != 5) {\n                return;\n            }\n        }\n        fcn.004234c9(3);\n        *(in_EAX + 0x1c) = 0xffff;\n        iVar5 = 0;\n        do {\n            iVar5 = iVar5 + 1;\n            iVar1 = fcn.00424254(auStack4, 1, iVar5);\n        } while (iVar1 == -1);\n    }\n    return;\n}\n",
        "token_count": 423
    },
    "00428d43": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.00428d43(uint param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t unaff_EDI;\n    \n    for (; in_EAX != 0; in_EAX = *(in_EAX + 0x2c)) {\n        iVar1 = *(in_EAX + 0x1c);\n        if ((((iVar1 == 0) || (iVar1 == 5)) || (iVar1 == 6)) && (unaff_EDI < *(in_EAX + 0x10))) {\n            iVar1 = fcn.004287e6(in_EAX, unaff_EDI, param_1);\n            if (iVar1 != 0) {\n                *(in_EAX + 0x1c) = iVar1;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 184
    },
    "00439fc5": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00439fc5(int32_t *arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iStack20;\n    \n    if (*(*arg_10h + 0x1e) != '\\x05') {\n        iStack20 = 1;\n        if (1 < arg_ch) {\n            do {\n                if (*(arg_10h[iStack20] + 0x1e) == '\\x05') {\n                    return;\n                }\n                fcn.004294fc(arg_10h[iStack20]);\n                iStack20 = iStack20 + 1;\n            } while (iStack20 < arg_ch);\n        }\n        fcn.00429359();\n    }\n    return;\n}\n",
        "token_count": 169
    },
    "00464b60": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00464b60(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint arg_8h_00;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == 5) {\n        arg_8h_00 = (*_fcn.00412224)(0xb);\n        fcn.0046050d(arg_8h_00, 0x3ed, 0, 0, 1);\n        fcn.0046050d(arg_8h_00, 0x3ee, 0, 0, 1);\n        fcn.0046050d(arg_8h_00, 0x3f4, 0, 0, 1);\n        fcn.0046050d(arg_8h_00, 0x3ef, 0, 0, 1);\n        fcn.0046050d(arg_8h_00, 0x3f0, 1, 0, 0);\n        fcn.0046050d(arg_8h_00, 0x3f1, 1, 0, 0);\n        fcn.0046050d(arg_8h_00, 0x3f5, 1, 0, 0);\n        fcn.0046050d(arg_8h_00, 0x3f2, 1, 0, 0);\n        fcn.0046050d(arg_8h_00, 0x3f3, 1, 1, 0);\n        fcn.0046050d(arg_8h_00, 1, 1, 1, 0);\n        fcn.0046050d(arg_8h_00, 2, 1, 1, 0);\n        (*_fcn.00412228)(arg_8h_00);\n        (**0x4121ac)(*(in_ECX + 0x1c), in_ECX + 0xc, 1);\n    }\n    else if (arg_8h == 0x24) {\n        *(arg_10h + 0x18) = 400;\n        *(arg_10h + 0x1c) = 0xb4;\n    }\n    else if (arg_8h == 0xf) {\n        fcn.004605ad();\n    }\n    fcn.00460420(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 573
    },
    "00466f15": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00466f15(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    int32_t *piVar2;\n    char var_1004h;\n    uint var_1003h;\n    uint uStackY68;\n    uint uStackY64;\n    uint uStackY60;\n    \n    fcn.00470712();\n    if (arg_ch == 4) {\n        fcn.004703aa();\n        uVar1 = (*_fcn.00412284)();\n        *0x4171b4 = 0;\n        fcn.00466d6d(arg_10h, uVar1, 1);\n        (**0x412178)();\n    }\n    else if (arg_ch == 5) {\n        piVar2 = *0x417488;\n        if (*0x417488 != NULL) {\n            for (; *piVar2 != 0; piVar2 = piVar2 + 1) {\n                if (*piVar2 == arg_10h) {\n                    return 1;\n                }\n            }\n        }\n        fcn.004703aa();\n        uVar1 = (**0x41218c)();\n        var_1004h = '\\0';\n        fcn.004703f4();\n        (*_fcn.00412280)();\n        if (var_1004h != '\\0') {\n            uStackY60 = 0x467007;\n            fcn.00466cc7(0x413148, &stack0xffffeff8);\n        }\n        uStackY64 = 0x467016;\n        uStackY60 = uVar1;\n        (*_fcn.00412278)();\n        uStackY68 = 0x46701d;\n        uStackY64 = uVar1;\n        (**0x412184)();\n    }\n    return 1;\n}\n",
        "token_count": 411
    },
    "0044afe9": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044afe9(uint *arg_8h, uint8_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint8_t *puVar1;\n    char cVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint var_2b4h;\n    uint var_234h;\n    uint var_1b4h;\n    uint var_134h;\n    uint var_129h;\n    uint var_124h;\n    uint var_119h;\n    uint var_30h;\n    uint var_28h;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    uint32_t var_8h;\n    \n    fcn.00418d47();\n    arg_8h[1] = 0;\n    arg_8h[2] = 0;\n    uVar5 = 0;\n    if (arg_10h != 0) {\n        do {\n            iVar4 = fcn.0044b62f(arg_ch + uVar5, 8, arg_10h - uVar5);\n            if (iVar4 == 0) break;\n            iVar6 = iVar4 + 1;\n            var_8h = iVar6 - arg_ch;\n            if ((arg_ch <= iVar4 - 7U) && (iVar4 + 9U <= arg_ch + arg_10h)) {\n                uVar5 = *(iVar4 + 9U) << 0x18 | *(iVar4 + 10) << 0x10 | CONCAT11(*(iVar4 + 0xb), *(iVar4 + 0xc));\n                if (((CONCAT11(*(iVar4 + -5), *(iVar4 + -4)) | *(iVar4 - 7U) << 0x18 | *(iVar4 + -6) << 0x10) ==\n                     uVar5 + 0x10) &&\n                   (((uVar5 <= (arg_10h - var_8h) - 0xc && (7 < uVar5)) && ((*(iVar4 + 0xc) & 7) == 0)))) {\n                    fcn.0044b575(&var_134h, 0x443d7c, 0xb);\n                    fcn.0044b575(&var_129h, iVar6, 8);\n                    fcn.00417d31(&var_134h, &var_20h);\n                    fcn.0044b575(&var_134h, &var_20h, 0x10);\n                    fcn.0044b575(&var_124h, 0x443d7c, 0xb);\n                    fcn.0044b575(&var_119h, iVar6, 8);\n                    fcn.00417d31(&var_134h, &var_30h);\n                    fcn.0041afa6();\n                    fcn.0041afa6();\n                    fcn.0041afa6();\n                    fcn.0044b575(&var_10h, &var_28h, 8);\n                    fcn.0040d523(uVar5, &var_234h, &var_1b4h, &var_2b4h, &var_10h);\n                    cVar2 = *(iVar4 + 0xd);\n                    if ((cVar2 != '\\0') && (cVar2 != '\\b')) {\n                        puVar1 = iVar4 + 0xc + uVar5;\n                        uVar3 = *puVar1;\n                        fcn.0044b531(puVar1 + (1 - uVar3), 0, uVar3);\n                        (***arg_8h)(iVar4 + 0xd);\n                    }\n                    var_8h = var_8h + 0xc + uVar5;\n                }\n            }\n            uVar5 = var_8h;\n        } while (var_8h < arg_10h);\n    }\n    fcn.0044adbb();\n    return;\n}\n",
        "token_count": 898
    },
    "0041459b": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041459b(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *unaff_ESI;\n    uint var_48h;\n    uint var_44h;\n    int32_t var_3ch;\n    int32_t var_2ch;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = (**(*unaff_ESI + 0xc))();\n    *(in_EAX + 8) = uVar1;\n    iVar2 = (**(*unaff_ESI + 0x44))();\n    *(in_EAX + 0xc) = iVar2;\n    var_ch = 0;\n    var_8h = 0;\n    var_4h = 2;\n    if (-1 < iVar2) {\n        var_ch = iVar2 << 8;\n        var_8h = 0x300;\n        var_4h = 10;\n    }\n    fcn.0044b531(&var_44h, 0, 0x38);\n    fcn.0040cb3e(unaff_ESI[0xa5], arg_8h, 0x300);\n    if ((*(in_EAX + 8) != var_2ch) || ((*(in_EAX + 0xc) != -1 && (*(in_EAX + 0xc) << 8 != var_3ch)))) {\n        fcn.0040cafd(unaff_ESI[0xa5], arg_8h, var_8h, *(in_EAX + 8));\n    }\n    return;\n}\n",
        "token_count": 373
    },
    "004146bf": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004146bf(uint arg_8h)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t arg_ch;\n    uint *unaff_EDI;\n    uint arg_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = (**(*in_EAX + 0xc))();\n    unaff_EDI[2] = uVar1;\n    iVar2 = (**(*in_EAX + 0x44))();\n    arg_ch = 0;\n    unaff_EDI[3] = iVar2;\n    var_4h = 0;\n    if (-1 < iVar2) {\n        arg_ch = iVar2 << 8;\n        var_4h = 0x300;\n    }\n    (**(*in_EAX + 0x10))();\n    uVar1 = unaff_EDI[2];\n    iVar2 = in_EAX[0x17];\n    arg_14h = 0;\n    (***unaff_EDI)();\n    fcn.0040caa4(in_EAX[0xa5], arg_ch, var_4h, arg_14h, iVar2, uVar1);\n    fcn.00414644();\n    return;\n}\n",
        "token_count": 283
    },
    "0041d5ae": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint fcn.0041d5ae(void)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t *unaff_ESI;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar4 = *in_EAX;\n    if (-1 < *in_EAX) {\n        unaff_ESI[1] = 0;\n        *unaff_ESI = uVar4;\n        return 1;\n    }\n    uVar3 = in_EAX[1];\n    if (-1 < in_EAX[1]) {\n        unaff_ESI[1] = 0;\n        *unaff_ESI = (uVar4 & 0x7f) << 7 | uVar3;\n        return 2;\n    }\n    uVar4 = uVar4 << 0xe | in_EAX[2];\n    if (in_EAX[2] < '\\0') {\n        uVar4 = uVar4 & 0x1fc07f;\n        uVar3 = uVar3 << 0xe | in_EAX[3];\n        if (in_EAX[3] < '\\0') {\n            uVar3 = uVar3 & 0x1fc07f;\n            uVar5 = uVar4 << 0xe | in_EAX[4];\n            if ((in_EAX[4] & 0x80) == 0) {\n                *unaff_ESI = uVar3 << 7 | uVar5;\n                unaff_ESI[1] = uVar4 >> 0x12;\n                uVar2 = 5;\n            }\n            else {\n                uVar6 = uVar4 << 7 | uVar3;\n                uVar4 = uVar3 << 0xe | in_EAX[5];\n                if (in_EAX[5] < '\\0') {\n                    uVar3 = uVar5 << 0xe | in_EAX[6];\n                    if (in_EAX[6] < '\\0') {\n                        uVar4 = uVar4 << 0xe | in_EAX[7];\n                        if (in_EAX[7] < '\\0') {\n                            uVar1 = in_EAX[8];\n                            unaff_ESI[1] = in_EAX[4] >> 3 & 0xf | uVar6 << 4;\n                            *unaff_ESI = (uVar4 & 0x1fc07f | (uVar3 & 0x1fc07f) << 7) << 8 | uVar1;\n                            uVar2 = 9;\n                        }\n                        else {\n                            unaff_ESI[1] = uVar6 >> 4;\n                            *unaff_ESI = uVar4 & 0xf01fc07f | (uVar3 & 0x1fc07f) << 7;\n                            uVar2 = 8;\n                        }\n                    }\n                    else {\n                        *unaff_ESI = (uVar4 << 7 ^ uVar3) & 0xfe03f80 ^ uVar3;\n                        unaff_ESI[1] = uVar6 >> 0xb;\n                        uVar2 = 7;\n                    }\n                }\n                else {\n                    *unaff_ESI = (uVar5 & 0x1fc07f) << 7 | uVar4;\n                    unaff_ESI[1] = uVar6 >> 0x12;\n                    uVar2 = 6;\n                }\n            }\n        }\n        else {\n            unaff_ESI[1] = 0;\n            *unaff_ESI = uVar3 & 0x1fc07f | uVar4 << 7;\n            uVar2 = 4;\n        }\n    }\n    else {\n        unaff_ESI[1] = 0;\n        *unaff_ESI = (uVar3 & 0x7f) << 7 | uVar4 & 0x1fc07f;\n        uVar2 = 3;\n    }\n    return uVar2;\n}\n",
        "token_count": 923
    },
    "0041d7cc": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint fcn.0041d7cc(void)\n\n{\n    uchar *in_EAX;\n    \n    return CONCAT31(CONCAT21(CONCAT11(*in_EAX, in_EAX[1]), in_EAX[2]), in_EAX[3]);\n}\n",
        "token_count": 55
    },
    "0042b02b": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0042b02b(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t extraout_ECX;\n    uint32_t uVar3;\n    int32_t unaff_EBX;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar1 = fcn.0042af51(arg_ch);\n    if (uVar1 - 1 < 7) {\n        if (uVar1 == 7) {\n            fcn.0044b575(&var_8h, in_EAX + 8, 8);\n        }\n        else {\n            var_4h = *(in_EAX + 0x14);\n        }\n        uVar1 = fcn.0042b018();\n        uVar2 = uVar1;\n        uVar3 = extraout_ECX;\n        while (uVar2 != 0) {\n            uVar2 = uVar2 - 1;\n            *(uVar2 + unaff_EBX) = uVar3;\n            uVar3 = uVar3 >> 8 | var_4h << 0x18;\n            var_4h = var_4h >> 8;\n        }\n    }\n    else if (uVar1 < 0xc) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = *(in_EAX + 0x18);\n        fcn.0044b575();\n        if ((*(in_EAX + 0x1c) & 0x4000) != 0) {\n            uVar1 = uVar1 + *(in_EAX + 0x10);\n            if (arg_8h < uVar1) {\n                uVar1 = arg_8h;\n            }\n            fcn.0044b531(*(in_EAX + 0x18) + unaff_EBX, 0, uVar1 - *(in_EAX + 0x18));\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 464
    },
    "0040af25": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid fcn.0040af25(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *arg_8h;\n    int32_t unaff_EBX;\n    int32_t *unaff_ESI;\n    uint32_t uVar4;\n    uint32_t uStack248;\n    int16_t aiStack236 [2];\n    uchar auStack232 [28];\n    int32_t iStack204;\n    int32_t iStack200;\n    int16_t aiStack196 [2];\n    int32_t iStack192;\n    int32_t iStack188;\n    int32_t iStack148;\n    int32_t iStack144;\n    uchar auStack140 [8];\n    int32_t aiStack132 [14];\n    uchar auStack76 [4];\n    uchar auStack72 [68];\n    \n    iVar1 = unaff_ESI[1];\n    uVar4 = unaff_ESI[4];\n    unaff_ESI[5] = 8;\n    iVar2 = fcn.00410e7f();\n    unaff_ESI[6] = iVar2;\n    iVar2 = fcn.00410e7f();\n    unaff_ESI[7] = iVar2;\n    unaff_ESI[8] = unaff_ESI[6];\n    unaff_ESI[9] = *(iVar1 + uVar4 + -0x19);\n    unaff_ESI[10] = *(iVar1 + uVar4 + -0x1a);\n    if (uVar4 < unaff_ESI[6]) {\n        unaff_ESI[6] = uVar4;\n    }\n    if (8 < unaff_ESI[6]) {\n        do {\n            fcn.0040aa44();\n            fcn.0040abff(auStack232);\n            if (aiStack236[0] == 0xd) {\n                (**(*unaff_ESI + 0xc))();\n                iVar1 = unaff_ESI[5];\n                uVar4 = iStack188 / 2;\n                uStack248 = 0;\n                if (uVar4 != 0) {\n                    do {\n                        fcn.0040aa44();\n                        fcn.0040aa44();\n                        if ((uStack248 < 0) || (iStack188 <= uStack248)) {\n                            uVar3 = 0;\n                        }\n                        else {\n                            uVar3 = *(iStack200 + uStack248 * 4);\n                        }\n                        uVar3 = fcn.0040abb1(uVar3);\n                        if ((uStack248 + uVar4 < 0) || (iStack192 <= uStack248 + uVar4)) {\n                            arg_8h = NULL;\n                        }\n                        else {\n                            arg_8h = *(uStack248 + iStack204);\n                        }\n                        iVar2 = fcn.0040abb1();\n                        if ((arg_8h != NULL) && (iVar2 != 0)) {\n                            unaff_ESI[5] = arg_8h;\n                            fcn.0040abff(aiStack132);\n                            arg_8h = &iStack192;\n                            unaff_ESI[5] = iVar2;\n                            fcn.0040abff(arg_8h);\n                            if (aiStack196[0] == 10) {\n                                iVar2 = 0;\n                                if (0 < iStack148) {\n                                    do {\n                                        if ((iVar2 < 0) || (aiStack132[0] <= iVar2)) {\n                                            arg_8h = NULL;\n                                        }\n                                        else {\n                                            arg_8h = *(iStack144 + iVar2 * 4);\n                                        }\n                                        iVar2 = fcn.0040abb1();\n                                        if (iVar2 != 0) {\n                                            fcn.0040aa44();\n                                            unaff_ESI[5] = iVar2;\n                                            fcn.0040abff(auStack72);\n                                            (**(*unaff_ESI + 8))(aiStack132, auStack76);\n                                            fcn.0040aa82(arg_8h);\n                                        }\n                                        iVar2 = unaff_EBX + 1;\n                                        unaff_EBX = iVar2;\n                                    } while (iVar2 < aiStack132[0]);\n                                }\n                            }\n                            else {\n                                (**(*unaff_ESI + 8))(auStack140, aiStack196);\n                            }\n                        }\n                        fcn.0040aa82(arg_8h, uVar3);\n                        fcn.0040aa82();\n                        uStack248 = uStack248 + 1;\n                    } while (uStack248 < uVar4);\n                }\n                unaff_ESI[5] = iVar1;\n                (**(*unaff_ESI + 0x10))();\n            }\n            (***unaff_ESI)(aiStack236);\n            fcn.0040aa82();\n        } while (unaff_ESI[5] < unaff_ESI[6]);\n    }\n    (**(*unaff_ESI + 4))();\n    return;\n}\n",
        "token_count": 1094
    },
    "00411843": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00411843(uint32_t *arg_8h, uint arg_ch, uint32_t *arg_10h, uint32_t *arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t **ppuVar5;\n    uint32_t *puVar6;\n    uint32_t *puVar7;\n    int32_t iVar8;\n    uchar var_650h;\n    uint var_64fh;\n    uint var_648h;\n    ushort var_268h;\n    uint var_266h;\n    int32_t var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t *var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_10h = 0;\n    var_18h = 0;\n    var_268h = 0;\n    fcn.0044b531(&var_266h, 0, 0x208);\n    fcn.00410587(&var_268h);\n    var_8h = (*_fcn.004430f4)(&var_268h, 0x80000000, 3, 0, 3, 0, 0);\n    var_ch = NULL;\n    iVar8 = 0x1000;\n    var_4h = 0;\n    ppuVar5 = arg_8h + 0x20c;\n    do {\n        fcn.004115f8();\n        arg_8h = *ppuVar5;\n        fcn.00418c96();\n        if (*0x451670 == NULL) {\n            arg_8h = 0xffffffff;\n        }\n        else {\n            arg_8h = (**0x451670)(0x10, arg_8h, iVar8, &var_ch);\n        }\n        if (arg_8h != 0xc0000004) break;\n        iVar8 = var_ch + 0x5000;\n        var_4h = var_4h + 1;\n    } while (var_4h < 0xb);\n    (**0x4430e4)(var_8h);\n    puVar7 = *ppuVar5;\n    var_ch = puVar7;\n    uVar1 = (**0x44319c)();\n    if ((arg_8h == NULL) && (uVar4 = *puVar7,  uVar4 != 0)) {\n        puVar2 = puVar7 + 2;\n        do {\n            if ((*(puVar2 + -1) == uVar1) && (*(puVar2 + 2) == var_8h)) {\n                var_18h = *puVar2;\n            }\n            puVar2 = puVar2 + 4;\n            uVar4 = uVar4 - 1;\n        } while (uVar4 != 0);\n    }\n    var_38h = 0x20;\n    var_28h = 0x20;\n    var_40h = 0;\n    var_34h = 0;\n    var_3ch = 0;\n    var_30h = 0;\n    var_24h = 0;\n    var_2ch = 0;\n    var_58h = 0;\n    var_54h = 0;\n    var_50h = 0;\n    var_4ch = 0;\n    var_48h = 0;\n    var_44h = 0;\n    fcn.0041a1a3(&var_58h);\n    var_4h = 0;\n    if (0 < var_24h) {\n        do {\n            puVar2 = fcn.00412203();\n            arg_8h = fcn.0041060f();\n            iVar8 = fcn.0044b581(arg_8h, 0x4483ac);\n            if (((iVar8 == 0) || (iVar8 = fcn.0044b581(arg_8h, 0x4483c4),  iVar8 == 0)) ||\n               (iVar8 = fcn.0044b581(arg_8h, 0x4483e0),  iVar8 == 0)) {\n                var_14h = (**0x443198)(0x40, 0, *puVar2);\n                if (var_14h != 0) {\n                    var_8h = 0;\n                    if (*puVar7 != 0) {\n                        puVar6 = puVar7 + 1;\n                        do {\n                            if ((*puVar6 == *puVar2) && (*(puVar6 + 1) == var_18h)) {\n                                arg_8h = NULL;\n                                uVar3 = (**0x443190)(&arg_8h, 0x80000000, 0, 2);\n                                (**0x443194)(var_14h, *(puVar6 + 6), uVar3);\n                                if (arg_8h != NULL) {\n                                    var_650h = 0;\n                                    fcn.0044b531(&var_64fh, 0, 999);\n                                    var_20h = 0;\n                                    fcn.00418c96();\n                                    if (*0x451684 != NULL) {\n                                        (**0x451684)(arg_8h, 1, &var_650h, 0x3e4, &var_20h);\n                                    }\n                                    (**0x4430e4)(arg_8h);\n                                    var_1ch = fcn.0041060f();\n                                    uVar3 = fcn.0041060f();\n                                    iVar8 = fcn.0044b581(var_1ch, uVar3);\n                                    if (iVar8 == 0) {\n                                        *arg_10h = *puVar2;\n                                        var_10h = 1;\n                                        *arg_14h = *(puVar6 + 6);\n                                        puVar7 = var_ch;\n                                        break;\n                                    }\n                                }\n                            }\n                            var_8h = var_8h + 1;\n                            puVar6 = puVar6 + 4;\n                            puVar7 = var_ch;\n                        } while (var_8h < *var_ch);\n                    }\n                    (**0x4430e4)(var_14h);\n                }\n                if (var_10h != 0) break;\n            }\n            var_4h = var_4h + 1;\n        } while (var_4h < var_24h);\n    }\n    if (var_58h != 0) {\n        (**0x443100)(var_58h);\n        var_58h = 0;\n    }\n    fcn.0040b785();\n    fcn.0040b785();\n    return var_10h;\n}\n",
        "token_count": 1634
    },
    "00420b3f": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420b3f(uint param_1, int32_t param_2)\n\n{\n    uint32_t in_EAX;\n    \n    if (((in_EAX & 0xff) == 0xd) || ((in_EAX & 0xff) == 10)) {\n        *(param_2 + 0x28) = in_EAX;\n        *(param_2 + 0xf) = 6;\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "004332b5": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004332b5(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t *in_ECX;\n    int32_t unaff_EBX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t var_4h;\n    \n    if ((*(*in_ECX + 0xc) & 2) == 0) {\n        piVar1 = in_ECX + 0x18;\n        iVar3 = 0;\n        iVar2 = 0;\n        do {\n            if (piVar1[4] == 0) goto code_r0x00433308;\n            iVar2 = iVar2 + 1;\n            piVar1 = piVar1 + 6;\n        } while (iVar2 < 10);\n        var_4h = 0x7fffffff;\n        iVar2 = -1;\n        piVar1 = in_ECX + 0x1d;\n        do {\n            if (*piVar1 < var_4h) {\n                iVar2 = iVar3;\n                var_4h = *piVar1;\n            }\n            iVar3 = iVar3 + 1;\n            piVar1 = piVar1 + 6;\n        } while (iVar3 < 10);\n        if (-1 < iVar2) {\n            piVar1 = in_ECX + (iVar2 + 4) * 6;\ncode_r0x00433308:\n            piVar1[3] = in_ECX[0x15];\n            *piVar1 = arg_8h;\n            piVar1[1] = arg_ch;\n            piVar1[4] = unaff_EBX;\n            *(piVar1 + 2) = 0;\n            piVar1[5] = in_ECX[0x16];\n            in_ECX[0x16] = in_ECX[0x16] + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 432
    },
    "004349ca": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2",
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2",
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2",
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004349ca(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((param_2 != 0) && (*(in_EAX + 0x15) < 8)) {\n        iVar2 = 0;\n        iVar1 = in_EAX + 0x60;\n        do {\n            if (*(iVar1 + 0x10) == param_2) {\n                *(iVar1 + 8) = 1;\n                return;\n            }\n            iVar2 = iVar2 + 1;\n            iVar1 = iVar1 + 0x18;\n        } while (iVar2 < 10);\n        *(in_EAX + 0x18 + *(in_EAX + 0x15) * 4) = param_2;\n        *(in_EAX + 0x15) = *(in_EAX + 0x15) + '\\x01';\n    }\n    return;\n}\n",
        "token_count": 224
    },
    "0044a467": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044a467(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t unaff_EDI;\n    int32_t var_4h;\n    \n    iVar4 = 0;\n    iVar3 = 0;\n    var_4h = 0;\n    if (0 < *(unaff_EDI + 4)) {\n        do {\n            if (iVar3 != 0) {\n                return;\n            }\n            if ((var_4h == arg_8h) || (arg_8h == 10)) {\n                iVar1 = *(*(unaff_EDI + 8) + 4 + iVar4);\n                iVar3 = 0;\n                if (iVar1 != 0) {\n                    piVar2 = *(iVar1 + 4);\n                    if (*(piVar2 + 0x15) == '\\0') {\n                        iVar1 = *piVar2;\n                        iVar3 = 0;\n                        if (*(iVar1 + 0xac) != 0) {\n                            iVar3 = fcn.00424a60(*(iVar1 + 10), *(iVar1 + 0x80), *(iVar1 + 0xa4));\n                        }\n                    }\n                    else {\n                        iVar3 = 6;\n                    }\n                }\n            }\n            var_4h = var_4h + 1;\n            iVar4 = iVar4 + 0x10;\n        } while (var_4h < *(unaff_EDI + 4));\n    }\n    return;\n}\n",
        "token_count": 353
    },
    "0040b17b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0040b17b(int32_t param_1, uint param_2)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    \n    arg_8h = fcn.00410151(param_2);\n    if (arg_8h != -1) {\n        iVar1 = (*_fcn.004430dc)(arg_8h, 0);\n        *(param_1 + 0x10) = iVar1;\n        if (iVar1 != 0) {\n            fcn.004115f8();\n            iVar1 = fcn.00410ba0(arg_8h, *(param_1 + 4), *(param_1 + 0x10));\n            if (iVar1 != 0) {\n                fcn.0040af25();\n            }\n        }\n        (**0x4430e4)(arg_8h);\n    }\n    return 0;\n}\n",
        "token_count": 204
    },
    "0040b79e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.0040b79e(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    iVar1 = in_EAX[3];\n    if (-1 < iVar1) {\n        if (iVar1 == -1) {\n            fcn.0044b5ed(*in_EAX);\n        }\n        else {\n            fcn.00410482(4, in_EAX[2]);\n        }\n        if (in_EAX[3] < iVar1 + 1) {\n            in_EAX[3] = iVar1 + 1;\n        }\n        *(*in_EAX + iVar1 * 4) = param_1;\n    }\n    return iVar1;\n}\n",
        "token_count": 159
    },
    "0040c788": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.0040c788(ushort param_1)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    iVar1 = in_EAX[3];\n    if (-1 < iVar1) {\n        if (iVar1 == -1) {\n            fcn.0044b5ed(*in_EAX);\n        }\n        else {\n            fcn.00410482(2, in_EAX[2]);\n        }\n        if (in_EAX[3] < iVar1 + 1) {\n            in_EAX[3] = iVar1 + 1;\n        }\n        *(*in_EAX + iVar1 * 2) = param_1;\n    }\n    return iVar1;\n}\n",
        "token_count": 159
    },
    "0040e144": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0040e144(void)\n\n{\n    int32_t *unaff_ESI;\n    \n    if (*unaff_ESI != -1) {\n        (**0x4430e4)(*unaff_ESI);\n    }\n    *unaff_ESI = -1;\n    return;\n}\n",
        "token_count": 65
    },
    "0040f360": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.0040f360(uint *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    iVar1 = in_EAX[3];\n    if (-1 < iVar1) {\n        if (iVar1 == -1) {\n            fcn.0044b5ed(*in_EAX);\n        }\n        else {\n            fcn.00410482(0x220, in_EAX[2]);\n        }\n        if (in_EAX[3] < iVar1 + 1) {\n            in_EAX[3] = iVar1 + 1;\n        }\n        puVar3 = iVar1 * 0x220 + *in_EAX;\n        for (iVar2 = 0x88; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar3 = *param_1;\n            param_1 = param_1 + 1;\n            puVar3 = puVar3 + 1;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 240
    },
    "00410370": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00410370(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    (*_fcn.004432e0)();\n    var_8h = fcn.00410151(arg_8h);\n    if (var_8h == -1) {\n        var_4h = (*_fcn.0044310c)();\n        goto code_r0x0041040b;\n    }\n    uVar1 = (*_fcn.004430dc)(var_8h, 0);\n    iVar2 = (*_fcn.00443168)(0x2000, uVar1 + 2);\n    if (iVar2 == 0) {\ncode_r0x004103eb:\n        var_4h = (*_fcn.0044310c)();\n    }\n    else {\n        iVar3 = (**0x443124)(iVar2);\n        iVar4 = (*_fcn.0044314c)(var_8h, iVar3, uVar1, &var_ch, 0);\n        if (iVar4 == 0) goto code_r0x004103eb;\n        *(iVar3 + (uVar1 & 0xfffffffe)) = 0;\n        (*_fcn.0044316c)(iVar2);\n        (*_fcn.004432c4)(0xd, iVar2);\n    }\n    (**0x4430e4)(var_8h);\ncode_r0x0041040b:\n    (*_fcn.004432b8)();\n    return var_4h;\n}\n",
        "token_count": 381
    },
    "00410555": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.00410555(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_fcn.0044313c)(param_1);\n    return iVar1 != -1;\n}\n",
        "token_count": 48
    },
    "00410987": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00410987(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    \n    uVar2 = 0;\n    uVar3 = 3;\n    iVar1 = (*_fcn.004430f4)(param_1, 0x80000000, 3, 0, 3, 0x2000000, 0);\n    if (iVar1 != -1) {\n        uVar2 = (*_fcn.00443180)(iVar1, 0, 0, uVar3);\n        (**0x4430e4)(iVar1);\n    }\n    return uVar2;\n}\n",
        "token_count": 150
    },
    "00410e1b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00410e1b(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    uint var_250h;\n    uint var_224h;\n    \n    uVar3 = 0;\n    iVar1 = (**0x443138)(arg_8h, &var_250h);\n    if (iVar1 == -1) {\n        return 0;\n    }\n    while (var_224h == 0x2e) {\n        iVar2 = (**0x443178)(iVar1, &var_250h);\n        if (iVar2 == 0) goto code_r0x00410e71;\n    }\n    puVar4 = &var_250h;\n    for (iVar2 = 0x94; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *arg_ch = *puVar4;\n        puVar4 = puVar4 + 1;\n        arg_ch = arg_ch + 1;\n    }\n    uVar3 = 1;\ncode_r0x00410e71:\n    (**0x443130)(iVar1);\n    return uVar3;\n}\n",
        "token_count": 283
    },
    "00410eeb": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00410eeb(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint var_4h;\n    \n    if (arg_ch == -1) {\n        arg_ch = fcn.0044b58d(arg_8h);\n    }\n    iVar1 = *(in_EAX + 4);\n    iVar2 = iVar1 + arg_ch + 1;\n    *(in_EAX + 4) = iVar2;\n    if (iVar2 == -1) {\n        fcn.0044b5ed(*(in_EAX + 0x10));\n    }\n    else {\n        fcn.00410482(2, *(in_EAX + 0x14));\n    }\n    if (*(in_EAX + 0x1c) == -1) {\n        fcn.0044b5ed(*(in_EAX + 0xc));\n    }\n    else {\n        fcn.00410482(4, *(in_EAX + 0x18));\n    }\n    fcn.0044b575(*(in_EAX + 0x10) + iVar1 * 2, arg_8h, arg_ch * 2);\n    *(*(in_EAX + 0x10) + (iVar1 + arg_ch) * 2) = 0;\n    *(*(in_EAX + 0xc) + *(in_EAX + 0x1c) * 4) = iVar1;\n    *(in_EAX + 0x1c) = *(in_EAX + 0x1c) + 1;\n    return *(in_EAX + 0x1c) + -1;\n}\n",
        "token_count": 383
    },
    "00410f95": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00410f95(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint unaff_EDI;\n    \n    iVar1 = fcn.00410fba(param_1, param_2);\n    if (iVar1 == -1) {\n        fcn.00410eeb(unaff_EDI, 0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "0041100e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041100e(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    \n    iVar1 = *in_EAX;\n    if (param_2 == -1) {\n        fcn.0044b5ed(iVar1);\n        uVar2 = 1;\n    }\n    else {\n        uVar2 = fcn.00410482(2, in_EAX[4]);\n    }\n    if ((iVar1 == 0) && (*in_EAX != NULL)) {\n        **in_EAX = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 151
    },
    "004110cc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004110cc(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *unaff_EDI;\n    uint var_4h;\n    \n    iVar1 = fcn.004110b1();\n    if (in_EAX == -1) {\n        in_EAX = fcn.0044b58d(arg_8h);\n    }\n    fcn.0041100e();\n    fcn.0044b575(*unaff_EDI + iVar1 * 2, arg_8h, in_EAX * 2);\n    *(*unaff_EDI + (iVar1 + in_EAX) * 2) = 0;\n    unaff_EDI[2] = iVar1 + in_EAX;\n    return;\n}\n",
        "token_count": 177
    },
    "004111f7": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004111f7(int32_t arg_8h, int16_t *arg_ch)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    bool bVar3;\n    bool bVar4;\n    int32_t iVar5;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int16_t *var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar5 = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_4h = 0;\n    bVar4 = true;\n    bVar3 = false;\n    fcn.00410ec5();\n    if (*arg_ch != 0) {\n        var_18h = arg_ch;\n        do {\n            iVar1 = *var_18h;\n            if ((iVar1 != 0x20) || (bVar3)) {\n                if (iVar1 == 0x22) {\n                    bVar3 = bVar3 ^ 1;\n                }\n                else {\n                    if (iVar5 == 0) {\n                        if (iVar1 == 0x20) goto code_r0x00411309;\n                        iVar5 = var_4h;\n                        if (-1 < var_8h) {\n                            if (var_8h == -1) {\n                                fcn.0044b5ed(*(arg_8h + 0x20));\n                            }\n                            else {\n                                fcn.00410482(4, *(arg_8h + 0x28));\n                            }\n                            if (*(arg_8h + 0x2c) < var_8h + 1) {\n                                *(arg_8h + 0x2c) = var_8h + 1;\n                            }\n                            *(*(arg_8h + 0x20) + var_8h * 4) = var_ch;\n                        }\n                    }\n                    iVar1 = *var_18h;\n                    fcn.0041100e();\n                    *(iVar5 * 2) = iVar1;\n                    iVar5 = iVar5 + 1;\n                    var_4h = iVar5;\n                }\ncode_r0x00411309:\n                bVar4 = false;\n            }\n            else if (!bVar4) {\n                fcn.0041100e();\n                *(iVar5 * 2) = 0;\n                fcn.00410eeb(0x4434fc, 0xffffffff);\n                var_8h = var_8h + 1;\n                bVar4 = true;\n                var_4h = 0;\n                iVar5 = 0;\n            }\n            var_ch = var_ch + 1;\n            var_18h = arg_ch + var_ch;\n        } while (*var_18h != 0);\n        if (0 < iVar5) {\n            fcn.0041100e();\n            *(iVar5 * 2) = 0;\n            fcn.00410eeb(0x4434fc, 0xffffffff);\n        }\n    }\n    uVar2 = *(arg_8h + 0x1c);\n    *(arg_8h + 0x30) = uVar2;\n    fcn.00411044();\n    return uVar2;\n}\n",
        "token_count": 759
    },
    "004114e7": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.004114e7(void)\n\n{\n    uint uVar1;\n    int32_t *unaff_ESI;\n    \n    uVar1 = 0;\n    if (*unaff_ESI != -1) {\n        uVar1 = (**0x443130)(*unaff_ESI);\n        *unaff_ESI = -1;\n    }\n    return uVar1;\n}\n",
        "token_count": 84
    },
    "0041206c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0041206c(void)\n\n{\n    uint arg_10h;\n    code *unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t unaff_ESI;\n    int16_t unaff_DI;\n    uint var_458h;\n    uint var_24h;\n    uint var_8h;\n    \n    while (unaff_ESI = unaff_ESI + 1,  unaff_ESI < *(unaff_EBP + -8)) {\n        arg_10h = fcn.00410ff5();\n        fcn.00411daa(*(unaff_EBP + 8), unaff_EBP + -0x458, arg_10h);\n    }\n    if (*(unaff_EBP + -0x458) != -1) {\n        (*unaff_EBX)(*(unaff_EBP + -0x458));\n    }\n    *(unaff_EBP + -0x458) = 0xffffffff;\n    fcn.00410ec5();\n    if (*(unaff_EBP + -0x678) != unaff_DI) {\n        (**0x4430ec)(unaff_EBP + -0x678);\n        *(unaff_EBP + -0x678) = unaff_DI;\n    }\n    fcn.00411611();\n    if (*(unaff_EBP + -0x458) != -1) {\n        (*unaff_EBX)(*(unaff_EBP + -0x458));\n    }\n    *(unaff_EBP + -0x458) = 0xffffffff;\n    fcn.0040b785();\n    fcn.0040b785();\n    return *(unaff_EBP + -4);\n}\n",
        "token_count": 368
    },
    "004120a8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.004120a8(void)\n\n{\n    code *unaff_EBX;\n    int32_t unaff_EBP;\n    ushort unaff_DI;\n    uint var_678h;\n    uint var_46ch;\n    uint var_458h;\n    uint var_54h;\n    uint var_3ch;\n    uint var_4h;\n    \n    *(unaff_EBP + -0x678) = unaff_DI;\n    fcn.00411611();\n    if (*(unaff_EBP + -0x458) != -1) {\n        (*unaff_EBX)(*(unaff_EBP + -0x458));\n    }\n    *(unaff_EBP + -0x458) = 0xffffffff;\n    fcn.0040b785();\n    fcn.0040b785();\n    return *(unaff_EBP + -4);\n}\n",
        "token_count": 188
    },
    "0041232a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041232a(uint arg_8h, uint32_t arg_ch)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uchar *puVar2;\n    uint32_t unaff_EBX;\n    uint32_t unaff_EDI;\n    ushort uStackY25492;\n    uchar auStackY25490 [16894];\n    uchar auStackY8596 [52];\n    uchar auStackY8544 [8396];\n    uint var_90h;\n    uint var_78h;\n    uint uStackY88;\n    int32_t iStackY84;\n    uchar *puStackY80;\n    uint uStackY76;\n    uint *puStackY72;\n    uchar *puStackY68;\n    int32_t iStackY64;\n    uint uStackY60;\n    uint var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0x412337;\n    fcn.0044ba9d();\n    var_ch = 0;\n    var_10h = 0;\n    var_8h = unaff_EDI;\n    var_4h = unaff_EBX;\n    arg_8h_00 = (*_fcn.004430f4)();\n    if (arg_8h_00 != -1) {\n        uStackY60 = 0x41236b;\n        fcn.00410bde(arg_8h_00, 0, &fcn.0041232a::var_90h, 0x20);\n        if (var_78h != '4') {\n            var_8h = (*_fcn.004430dc)();\n            arg_ch = 0x5000;\n            if (0x5000 < var_8h) {\n                do {\n                    iStackY64 = 0x4123ac;\n                    iVar1 = fcn.00412299(arg_8h_00, arg_ch, &fcn.0041232a::var_10h, &fcn.0041232a::var_ch);\n                    if (iVar1 == 0) {\n                        arg_ch = arg_ch + 0x80;\n                    }\n                    else {\n                        iStackY64 = 4;\n                        puStackY68 = &stack0xffffdea0;\n                        puStackY72 = &fcn.0041232a::var_4h;\n                        uStackY76 = 0x4123c6;\n                        fcn.0044b575();\n                        if (0x100 < var_4h) {\n                            var_4h = 0x68;\n                        }\n                        puStackY68 = &stack0xffffde6c + var_4h;\n                        iStackY64 = 0x40;\n                        puStackY72 = 0x4123eb;\n                        iVar1 = fcn.0044b5ff();\n                        if (iVar1 != 0) {\n                            iVar1 = iVar1 + 1;\n                            iStackY64 = 0x3f;\n                            puStackY72 = 0x4123fc;\n                            puStackY68 = iVar1;\n                            puVar2 = fcn.0044b5ff();\n                            if (puVar2 != NULL) {\n                                *puVar2 = 0;\n                            }\n                            puStackY68 = 0x41240a;\n                            iStackY64 = iVar1;\n                            fcn.0044b5f9();\n                            iStackY64 = 0x41fe;\n                            puStackY72 = &stack0xffff9c6e;\n                            puStackY68 = NULL;\n                            uStackY25492 = 0;\n                            uStackY76 = 0x412425;\n                            fcn.0044b531();\n                            uStackY76 = 0x2000;\n                            puStackY80 = &stack0xffff9c6c;\n                            uStackY88 = 0x412437;\n                            iStackY84 = iVar1;\n                            fcn.00410e02();\n                            iStackY64 = 0;\n                            puStackY68 = &stack0xffff9c6c;\n                            puStackY72 = 0x41244d;\n                            fcn.00410f95();\n                        }\n                        arg_ch = arg_ch + var_ch * 0x80;\n                    }\n                } while (arg_ch < var_8h);\n            }\n        }\n        (**0x4430e4)();\n    }\n    return;\n}\n",
        "token_count": 1023
    },
    "0041491a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.0041491a(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_EAX;\n    int32_t iVar4;\n    uint *puVar5;\n    int32_t unaff_EBX;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if ((in_EAX[0x12] != 0) && (var_4h = 0,  0 < in_EAX[0xc])) {\n        do {\n            iVar4 = fcn.00413cfb();\n            if ((*(iVar4 + 4) & 1) != 0) {\n                uVar3 = *(iVar4 + 8);\n                fcn.0044b575(iVar4);\n                *(iVar4 + 8) = uVar3;\n                return iVar4;\n            }\n            var_4h = var_4h + 1;\n        } while (var_4h < in_EAX[0xc]);\n    }\n    *(unaff_EBX + 8) = 0xffffffff;\n    *(unaff_EBX + 0xc) = 0xffffffff;\n    iVar4 = in_EAX[9];\n    iVar1 = in_EAX[0xc];\n    iVar2 = in_EAX[1];\n    puVar5 = (***in_EAX)();\n    if (iVar1 == -1) {\n        fcn.0044b5ed(*puVar5);\n    }\n    else {\n        fcn.00410482(iVar2, iVar4);\n    }\n    iVar4 = fcn.00413cfb(in_EAX[0xc]);\n    fcn.0044b575(iVar4);\n    in_EAX[0xc] = in_EAX[0xc] + 1;\n    (**(*in_EAX + 0x38))();\n    return iVar4;\n}\n",
        "token_count": 417
    },
    "00414ec1": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00414ec1(uint arg_8h, uint *arg_ch)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *unaff_EBX;\n    uint *puVar5;\n    uint *puVar6;\n    uint var_3c0h;\n    uint var_1c0h;\n    ushort var_158h;\n    uint var_156h;\n    ushort var_f0h;\n    uint var_eeh;\n    ushort var_88h;\n    uint var_86h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_3c0h._0_2_ = 0;\n    fcn.0044b531(&var_3c0h + 2, 0, 0x1fc);\n    puVar5 = 0x4489c0;\n    puVar6 = &var_1c0h;\n    for (iVar4 = 0x18; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar6 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = *puVar5;\n    var_f0h = 0;\n    fcn.0044b531(&var_eeh, 0, 0x62);\n    var_158h = 0;\n    fcn.0044b531(&var_156h, 0, 0x62);\n    var_88h = 0;\n    fcn.0044b531(&var_86h, 0, 0x62);\n    iVar4 = (**(*unaff_EBX + 0x14))();\n    var_ch = unaff_EBX[0xb2];\n    if (iVar4 != -1) {\n        uVar2 = fcn.0041b49c(iVar4, &var_3c0h);\n        fcn.0044b51f(&var_f0h, 0x32, 0x448a24, uVar2);\n    }\n    fcn.00410183(arg_8h, 0x448a40);\n    var_4h = 0;\n    if (0 < unaff_EBX[10]) {\n        do {\n            var_8h = *(unaff_EBX[0xb] + var_4h * 4);\n            iVar4 = var_8h * 0x14;\n            if (*(iVar4 + 8 + unaff_EBX[0xf]) != 0) {\n                fcn.0044b56f(&var_88h, 0x448a8c);\n            }\n            var_1ch = 0xffffffff;\n            var_18h = 0xffffffff;\n            var_14h = 0xffffffff;\n            var_10h = 0;\n            (**(*unaff_EBX + 0x34))(6, var_4h, arg_ch, &var_1ch);\n            fcn.0041b49c(var_1ch, &var_158h);\n            (***arg_ch)(var_8h, unaff_EBX[0x17]);\n            fcn.0041b4cd();\n            (**(*unaff_EBX + 0x50))(unaff_EBX[0x18], arg_ch, var_8h);\n            arg_8h_00 = (**(*unaff_EBX + 0x18))();\n            if (arg_8h_00 == -1) {\n                fcn.0044b56f(unaff_EBX[0x19], *(iVar4 + 0x10 + var_ch));\n            }\n            else {\n                uVar2 = *(iVar4 + 0x10 + var_ch);\n                uVar3 = fcn.0041b49c(arg_8h_00, &var_3c0h);\n                fcn.0044b51f(unaff_EBX[0x19], 0x2000, 0x448a9c, uVar3, uVar2);\n            }\n            iVar1 = *unaff_EBX[0x18];\n            if ((iVar1 == 0) || (iVar1 == 0x20)) {\n                fcn.0044b519(unaff_EBX[0x18], 0x4489ac);\n            }\n            fcn.0041b5c7(unaff_EBX[0x1a], unaff_EBX[0x18]);\n            fcn.0044b51f(unaff_EBX[0x17], 0x2000, &var_1c0h, &var_f0h, unaff_EBX[0x19], &var_158h, &var_88h, \n                         unaff_EBX[0x1a]);\n            fcn.00410183(arg_8h, unaff_EBX[0x17]);\n            var_4h = var_4h + 1;\n        } while (var_4h < unaff_EBX[10]);\n    }\n    fcn.00410183(arg_8h, 0x448ad4);\n    fcn.00410183(arg_8h, 0x443980);\n    return;\n}\n",
        "token_count": 1232
    },
    "00415feb": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00415feb(void)\n\n{\n    int16_t iVar1;\n    int32_t *piVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    int16_t *arg_8h;\n    int32_t iVar5;\n    \n    iVar5 = 0;\n    if (0 < *(*(in_EAX + 0x6a4) + 0x30)) {\n        do {\n            uVar3 = fcn.00411368();\n            iVar4 = fcn.0044b581(0x448c14, uVar3);\n            if (iVar4 == 0) {\n                arg_8h = fcn.00411368();\n                iVar1 = *arg_8h;\n                if (iVar1 == 0x7e) {\n                    arg_8h = arg_8h + 1;\n                }\n                fcn.00415bce(arg_8h, iVar1 == 0x7e);\n            }\n            iVar5 = iVar5 + 1;\n        } while (iVar5 < *(*(in_EAX + 0x6a4) + 0x30));\n    }\n    fcn.004100a5();\n    *(*(in_EAX + 0x694) + 0x30) = 0;\n    (**(**(in_EAX + 0x694) + 100))();\n    iVar5 = fcn.00411378(0x448c20);\n    if (iVar5 == -1) {\n        piVar2 = *(in_EAX + 0x694);\n        if (*0x451464 == 0) {\n            *0x451468 = piVar2[0xb0];\n            *0x451464 = 1;\n        }\n        iVar5 = piVar2[0xc];\n        uVar3 = (**(*piVar2 + 0x68))(0x40cb9a);\n        uVar3 = fcn.00413cfb(0, iVar5, uVar3);\n        fcn.0044b617(uVar3);\n    }\n    (*_fcn.00443224)(*0x450470);\n    return;\n}\n",
        "token_count": 477
    },
    "00419b94": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00419b94(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    \n    iVar1 = *(in_EAX + 0x1b98);\n    iVar2 = *(iVar1 + 0xa60);\n    if (-1 < iVar2) {\n        if (iVar2 == -1) {\n            fcn.0044b5ed(*(iVar1 + 0xa54));\n        }\n        else {\n            fcn.00410482(0x1002, *(iVar1 + 0xa5c));\n        }\n        if (*(iVar1 + 0xa60) < iVar2 + 1) {\n            *(iVar1 + 0xa60) = iVar2 + 1;\n        }\n        fcn.0044b575(iVar2 * 0x1002 + *(iVar1 + 0xa54), param_1, 0x1002);\n    }\n    return;\n}\n",
        "token_count": 215
    },
    "0041a1a3": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0041a1a3(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    ushort uStack1660;\n    uchar auStack1658 [522];\n    uint uStack1136;\n    uchar auStack1132 [4];\n    uint uStack1128;\n    uint uStack1112;\n    uint uStack580;\n    int16_t iStack576;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    int32_t iStack12;\n    uint uStack8;\n    \n    fcn.0040b785();\n    uStack8 = fcn.0044b8b9(2, 0);\n    fcn.0044b531(auStack1132, 0, 0x228);\n    uStack1136 = 0x22c;\n    fcn.0044b8ad(uStack8, &uStack1136);\n    while (iVar2 = fcn.0044b8b3(uStack8, &uStack1136),  iVar2 != 0) {\n        iStack576 = 0;\n        uStack48 = 0;\n        uStack44 = 0;\n        uStack40 = 0;\n        uStack36 = 0;\n        uStack32 = 0;\n        uStack28 = 0;\n        uStack24 = 0;\n        uStack20 = 0;\n        uStack580 = uStack1128;\n        uStack52 = uStack1112;\n        iVar2 = (**0x443198)(0x410, 0, uStack1128);\n        iStack12 = iVar2;\n        if (iVar2 != 0) {\n            uStack1660 = 0;\n            fcn.0044b531(auStack1658, 0, 0x208);\n            fcn.0041a383(iVar2, &uStack1660);\n            if (iStack576 == 0) {\n                uStack16 = 0x104;\n                if ((*0x451ab4 == 0) && (iVar1 = (*_fcn.00443144)(0x4482fc),  iVar1 != 0)) {\n                    *0x451ab4 = 1;\n                    *0x451ab8 = (*_fcn.00443108)(iVar1, 0x449508);\n                }\n                if (*0x451ab8 != NULL) {\n                    (**0x451ab8)(iVar2, 0, &uStack1660, &uStack16);\n                }\n            }\n            fcn.00419e02();\n            fcn.0041a14d(iStack12, &uStack48, &uStack40, &uStack32, &uStack24);\n            (**0x4430e4)(iStack12);\n        }\n        iVar2 = *(param_1 + 0x34);\n        if (-1 < iVar2) {\n            if (iVar2 == -1) {\n                fcn.0044b5ed(*(param_1 + 0x28));\n            }\n            else {\n                fcn.00410482(0x234, *(param_1 + 0x30));\n            }\n            if (*(param_1 + 0x34) < iVar2 + 1) {\n                *(param_1 + 0x34) = iVar2 + 1;\n            }\n            puVar3 = &uStack580;\n            puVar4 = iVar2 * 0x234 + *(param_1 + 0x28);\n            for (iVar1 = 0x8d; iVar1 != 0; iVar1 = iVar1 + -1) {\n                *puVar4 = *puVar3;\n                puVar3 = puVar3 + 1;\n                puVar4 = puVar4 + 1;\n            }\n        }\n    }\n    (**0x4430e4)(uStack8);\n    return;\n}\n",
        "token_count": 914
    },
    "0041b5c7": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nushort * __cdecl fcn.0041b5c7(ushort *arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t unaff_ESI;\n    ushort var_404h;\n    uint var_402h;\n    ushort var_204h;\n    uint var_202h;\n    int32_t var_4h;\n    \n    var_204h = 0;\n    fcn.0044b531(&var_202h, 0, 0x1fc);\n    var_404h = 0;\n    fcn.0044b531(&var_402h, 0, 0x1fc);\n    var_4h = 1;\n    if ((*(unaff_ESI + 4) == -1) && (*(unaff_ESI + 8) < 1)) {\n        var_4h = 0;\n    }\n    *arg_8h = 0;\n    if (var_4h != 0) {\n        fcn.0044b56f(arg_8h, 0x449918);\n        if (0 < *(unaff_ESI + 8)) {\n            fcn.0044b51f(&var_204h, 0xff, 0x449924, *(unaff_ESI + 8));\n            fcn.0044b519(arg_8h, &var_204h);\n        }\n        if (*(unaff_ESI + 4) != -1) {\n            uVar1 = fcn.0041b49c(*(unaff_ESI + 4), &var_404h);\n            fcn.0044b51f(&var_204h, 0xff, 0x44993c, uVar1);\n            fcn.0044b519(arg_8h, &var_204h);\n        }\n        fcn.0044b519(arg_8h, 0x449958);\n    }\n    if (*(unaff_ESI + 0xc) != 0) {\n        fcn.0044b519(arg_8h, 0x44995c);\n    }\n    fcn.0044b519(arg_8h, arg_ch);\n    if (*(unaff_ESI + 0xc) != 0) {\n        fcn.0044b519(arg_8h, 0x449964);\n    }\n    if (var_4h != 0) {\n        fcn.0044b519(arg_8h, 0x449970);\n    }\n    return arg_8h;\n}\n",
        "token_count": 557
    },
    "0041b6f5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b6f5(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int16_t **ppiVar1;\n    uchar auStackY35332 [32768];\n    uint var_a00h;\n    ushort var_800h;\n    uint var_7feh;\n    ushort var_600h;\n    uint var_5feh;\n    ushort var_400h;\n    uint var_3feh;\n    ushort var_200h;\n    uint var_1feh;\n    uint uStackY56;\n    \n    fcn.0044ba9d();\n    var_800h = 0;\n    fcn.0044b531();\n    var_600h = 0;\n    fcn.0044b531();\n    var_400h = 0;\n    fcn.0044b531();\n    if (arg_14h != -1) {\n        fcn.0041b49c(arg_14h, &fcn.0041b6f5::var_a00h);\n        fcn.0044b51f();\n    }\n    if (arg_18h != -1) {\n        fcn.0041b49c(arg_18h, &fcn.0041b6f5::var_a00h);\n        fcn.0044b51f();\n        fcn.0044b56f();\n    }\n    fcn.0044b51f();\n    fcn.00410183(arg_8h, &stack0xffff75fc);\n    if (0 < arg_10h) {\n        ppiVar1 = arg_ch + 4;\n        arg_14h = arg_10h;\n        do {\n            var_200h = 0;\n            fcn.0044b531();\n            if (**ppiVar1 == 0) {\n                var_200h = 0;\n            }\n            else {\n                fcn.0044b51f();\n            }\n            fcn.0044b51f();\n            uStackY56 = 0x41b87f;\n            fcn.00410183(arg_8h, &stack0xffff75fc);\n            ppiVar1 = ppiVar1 + 2;\n            arg_14h = arg_14h + -1;\n        } while (arg_14h != 0);\n    }\n    return;\n}\n",
        "token_count": 535
    },
    "0041ddac": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041ddac(uint arg_8h, uint32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EDI;\n    uint32_t var_4h;\n    \n    var_4h = arg_ch & 0x7fffffff;\n    iVar2 = (*_fcn.00443148)(*(unaff_EDI + 8), arg_8h, &var_4h, 0);\n    pcVar1 = _fcn.0044310c;\n    if ((iVar2 == -1) && (iVar2 = (*_fcn.0044310c)(),  iVar2 != 0)) {\n        uVar3 = (*pcVar1)();\n        *(unaff_EDI + 0x10) = uVar3;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 198
    },
    "0041dfa7": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041dfa7(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    \n    iVar1 = arg_8h;\n    iVar2 = (*_fcn.004430dc)(*(arg_8h + 8), &arg_8h);\n    if ((iVar2 == -1) && (iVar2 = (*_fcn.0044310c)(),  iVar2 != 0)) {\n        *(iVar1 + 0x10) = iVar2;\n        return 0x70a;\n    }\n    uVar3 = fcn.0044b8cd(arg_8h, 0, 0, 1);\n    *arg_ch = uVar3;\n    arg_ch[1] = uVar3 >> 0x20;\n    return 0;\n}\n",
        "token_count": 196
    },
    "00421653": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00421653(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t arg_10h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    fcn.0042442a();\n    arg_10h = 0;\n    do {\n        arg_10h = arg_10h + 1;\n        iVar1 = fcn.00424254(&var_4h, 0, arg_10h);\n    } while (iVar1 == -1);\n    if ((iVar1 != 0) || (var_4h != 0)) {\n        fcn.004209ec();\n    }\n    return iVar1;\n}\n",
        "token_count": 166
    },
    "00423a52": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00423a52(uint32_t *arg_8h, uint32_t *arg_ch, int32_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar1 = *arg_8h;\n    iVar5 = arg_8h[1] - 1;\n    var_4h = 0xffffffff;\n    uVar4 = 0xffffffff;\n    if (-1 < iVar5) {\n        puVar3 = arg_8h + arg_8h[1] * 5;\n        do {\n            if (puVar3[-3] < *puVar3) {\n                do {\n                    uVar4 = puVar3[-3];\n                    uVar2 = *(puVar3[-1] + *(puVar3[-2] + uVar4 * 2) * 4);\n                    if (uVar1 < uVar2) {\n                        if (uVar2 < var_4h) {\n                            *arg_10h = *(puVar3[-2] + uVar4 * 2) + puVar3[1];\n                            var_4h = uVar2;\n                        }\n                        break;\n                    }\n                    puVar3[-3] = uVar4 + 1;\n                } while (uVar4 + 1 < *puVar3);\n            }\n            iVar5 = iVar5 + -1;\n            puVar3 = puVar3 + -5;\n            uVar4 = var_4h;\n        } while (-1 < iVar5);\n    }\n    *arg_ch = uVar4;\n    *arg_8h = uVar4;\n    return uVar4 == 0xffffffff;\n}\n",
        "token_count": 412
    },
    "0042915c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0042915c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    \n    iVar1 = *(in_EAX + 8);\n    iVar2 = *(in_EAX + 0xc);\n    *(in_EAX + 0x10) = iVar1;\n    *(in_EAX + 0x14) = iVar2;\n    if (((0x7fffffff < iVar2) && (iVar1 != 0)) && ((iVar2 < 0x7fffffff || (iVar1 != -1)))) {\n        *(in_EAX + 0x1c) = *(in_EAX + 0x1c) | 4;\n    }\n    return;\n}\n",
        "token_count": 162
    },
    "0042af51": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042af51(uint param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    bool bVar5;\n    int32_t iStack12;\n    \n    uVar1 = *(param_2 + 0x1c);\n    iStack12 = 1;\n    if ((uVar1 & 1) == 0) {\n        if ((uVar1 & 4) == 0) {\n            if ((uVar1 & 8) == 0) {\n                iVar4 = *(param_2 + 0x18);\n                if ((uVar1 & 0x4000) != 0) {\n                    iVar4 = iVar4 + *(param_2 + 0x10);\n                }\n                iStack12 = (uVar1 >> 1 & 1) + 0xc + iVar4 * 2;\n            }\n            else {\n                iStack12 = 7;\n            }\n        }\n        else {\n            uVar2 = *(param_2 + 0x10);\n            uVar3 = *(param_2 + 0x14);\n            if (((param_3 < 4) || ((uVar2 & 1) != uVar2)) || (uVar3 != 0)) {\n                if ((uVar3 < 1) && (uVar3 < 0)) {\n                    bVar5 = uVar2 != 0;\n                    uVar2 = -uVar2;\n                    uVar3 = -(uVar3 + bVar5);\n                }\n                if ((uVar3 != 0) || (0x7f < uVar2)) {\n                    if (uVar3 == 0) {\n                        if (uVar2 < 0x8000) {\n                            return 2;\n                        }\n                        if (uVar2 < 0x800000) {\n                            return 3;\n                        }\n                        if (uVar2 < 0x80000000) {\n                            return 4;\n                        }\n                    }\n                    if (uVar3 < 0x8000) {\n                        iStack12 = 5;\n                    }\n                    else {\n                        iStack12 = 6;\n                    }\n                }\n            }\n            else {\n                iStack12 = uVar2 + 8;\n            }\n        }\n    }\n    else {\n        iStack12 = 0;\n    }\n    return iStack12;\n}\n",
        "token_count": 549
    },
    "0044b1f8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0044b1f8(uint param_1, uint param_2)\n\n{\n    int32_t arg_8h;\n    uint32_t arg_10h;\n    uint arg_ch;\n    int32_t iVar1;\n    uint unaff_EBX;\n    \n    arg_8h = fcn.00410151(param_2);\n    if (arg_8h != -1) {\n        arg_10h = (*_fcn.004430dc)(arg_8h, 0);\n        if (arg_10h < 990000) {\n            arg_ch = fcn.0044b5b1(arg_10h + 10);\n            fcn.0044b531(arg_ch, 0, arg_10h + 5);\n            iVar1 = fcn.00410ba0(arg_8h, arg_ch, arg_10h);\n            if (iVar1 != 0) {\n                fcn.0044afe9(unaff_EBX, arg_ch, arg_10h);\n            }\n            fcn.0044b5b7(arg_ch);\n        }\n        (**0x4430e4)(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 258
    },
    "0046345a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.0046345a(uchar param_1)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    iVar1 = in_EAX[3];\n    if (-1 < iVar1) {\n        if (iVar1 == -1) {\n            fcn.0047047e(*in_EAX);\n        }\n        else {\n            fcn.00464f6c(1, in_EAX[2]);\n        }\n        if (in_EAX[3] < iVar1 + 1) {\n            in_EAX[3] = iVar1 + 1;\n        }\n        *(iVar1 + *in_EAX) = param_1;\n    }\n    return iVar1;\n}\n",
        "token_count": 158
    },
    "00464e38": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00464e38(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    (*_fcn.00412230)();\n    var_8h = fcn.00464d3d(arg_8h);\n    if (var_8h == -1) {\n        var_4h = (*_fcn.00412118)();\n        goto code_r0x00464ed0;\n    }\n    iVar1 = (*_fcn.00412100)(var_8h, 0);\n    iVar2 = (*_fcn.00412094)(0x2000, iVar1 + 1);\n    if (iVar2 == 0) {\ncode_r0x00464eb0:\n        var_4h = (*_fcn.00412118)();\n    }\n    else {\n        iVar3 = (*_fcn.004120f4)(iVar2);\n        iVar4 = (*_fcn.004120a4)(var_8h, iVar3, iVar1, &var_ch, 0);\n        if (iVar4 == 0) goto code_r0x00464eb0;\n        *(iVar3 + iVar1) = 0;\n        (*_fcn.004120f8)(iVar2);\n        (*_fcn.00412250)(1, iVar2);\n    }\n    (*_fcn.0041209c)(var_8h);\ncode_r0x00464ed0:\n    (*_fcn.0041226c)();\n    return var_4h;\n}\n",
        "token_count": 374
    },
    "00464fbd": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.00464fbd(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (**0x41211c)(param_1);\n    return iVar1 != -1;\n}\n",
        "token_count": 47
    },
    "004658e6": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004658e6(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = fcn.004703b6(arg_8h);\n    iVar2 = *(in_EAX + 4);\n    iVar1 = iVar2 + 1 + iVar3;\n    *(in_EAX + 4) = iVar1;\n    if (iVar1 == -1) {\n        fcn.0047047e(*(in_EAX + 0x10));\n    }\n    else {\n        fcn.00464f6c(1, *(in_EAX + 0x14));\n    }\n    if (*(in_EAX + 0x1c) == -1) {\n        fcn.0047047e(*(in_EAX + 0xc));\n    }\n    else {\n        fcn.00464f6c(4, *(in_EAX + 0x18));\n    }\n    fcn.0047043c(*(in_EAX + 0x10) + iVar2, arg_8h, iVar3);\n    *(*(in_EAX + 0x10) + iVar2 + iVar3) = 0;\n    *(*(in_EAX + 0xc) + *(in_EAX + 0x1c) * 4) = iVar2;\n    *(in_EAX + 0x1c) = *(in_EAX + 0x1c) + 1;\n    return *(in_EAX + 0x1c) + -1;\n}\n",
        "token_count": 362
    },
    "00465997": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00465997(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    \n    iVar1 = *in_EAX;\n    if (param_2 == -1) {\n        fcn.0047047e(iVar1);\n        uVar2 = 1;\n    }\n    else {\n        uVar2 = fcn.00464f6c(1, in_EAX[4]);\n    }\n    if ((iVar1 == 0) && (*in_EAX != NULL)) {\n        **in_EAX = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 151
    },
    "00465a51": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00465a51(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *unaff_EDI;\n    uint var_4h;\n    \n    iVar1 = fcn.00465a36();\n    if (in_EAX == -1) {\n        in_EAX = fcn.004703b6(arg_8h);\n    }\n    fcn.00465997();\n    fcn.0047043c(*unaff_EDI + iVar1, arg_8h, in_EAX);\n    *(iVar1 + in_EAX + *unaff_EDI) = 0;\n    unaff_EDI[2] = iVar1 + in_EAX;\n    return;\n}\n",
        "token_count": 166
    },
    "00465aa1": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.00465aa1(uint param_1)\n\n{\n    int32_t *in_EAX;\n    int32_t arg_8h;\n    int32_t arg_10h;\n    \n    arg_8h = fcn.00464d3d(param_1);\n    if (arg_8h != -1) {\n        arg_10h = (*_fcn.00412100)(arg_8h, 0);\n        fcn.004659cd();\n        fcn.00465997();\n        fcn.00465568(arg_8h, *in_EAX, arg_10h);\n        *(arg_10h + *in_EAX) = 0;\n        in_EAX[2] = arg_10h;\n        (*_fcn.0041209c)(arg_8h);\n    }\n    return arg_8h != -1;\n}\n",
        "token_count": 190
    },
    "00465dcd": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00465dcd(void)\n\n{\n    uint uVar1;\n    int32_t *unaff_ESI;\n    \n    uVar1 = 0;\n    if (*unaff_ESI != -1) {\n        uVar1 = (*_fcn.00412124)(*unaff_ESI);\n        *unaff_ESI = -1;\n    }\n    return uVar1;\n}\n",
        "token_count": 86
    },
    "00467dd5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00467dd5(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t *unaff_ESI;\n    uint var_4h;\n    \n    iVar5 = 0;\n    if ((unaff_ESI[0x10] != 0) && (0 < unaff_ESI[10])) {\n        do {\n            iVar1 = (**(*unaff_ESI + 100))(iVar5);\n            if ((*(iVar1 + 4) & 1) != 0) {\n                uVar2 = *(iVar1 + 8);\n                uVar4 = (**(*unaff_ESI + 0x60))();\n                fcn.0047043c(iVar1, arg_8h, uVar4);\n                *(iVar1 + 8) = uVar2;\n                return iVar1;\n            }\n            iVar5 = iVar5 + 1;\n        } while (iVar5 < unaff_ESI[10]);\n    }\n    *(arg_8h + 8) = 0xffffffff;\n    iVar5 = unaff_ESI[7];\n    uVar2 = (**(*unaff_ESI + 0x60))();\n    iVar1 = unaff_ESI[10];\n    puVar3 = (***unaff_ESI)();\n    if (iVar1 == -1) {\n        fcn.0047047e(*puVar3);\n    }\n    else {\n        fcn.00464f6c(uVar2, iVar5);\n    }\n    iVar5 = (**(*unaff_ESI + 100))(unaff_ESI[10]);\n    uVar2 = (**(*unaff_ESI + 0x60))();\n    fcn.0047043c(iVar5, arg_8h, uVar2);\n    unaff_ESI[10] = unaff_ESI[10] + 1;\n    (**(*unaff_ESI + 0x34))();\n    return iVar5;\n}\n",
        "token_count": 457
    },
    "004682f4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004682f4(uint arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *unaff_EBX;\n    uint *puVar5;\n    uint *puVar6;\n    uchar var_1e8h;\n    uint var_1e7h;\n    uint var_e8h;\n    uchar var_b4h;\n    uint var_b3h;\n    uchar var_80h;\n    uint var_7fh;\n    uchar var_4ch;\n    uint var_4bh;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_1e8h = 0;\n    fcn.004703f4(&var_1e7h, 0, 0xfe);\n    puVar5 = 0x41321c;\n    puVar6 = &var_e8h;\n    for (iVar4 = 0xc; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar6 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = *puVar5;\n    var_80h = 0;\n    fcn.004703f4(&var_7fh, 0, 0x31);\n    var_b4h = 0;\n    fcn.004703f4(&var_b3h, 0, 0x31);\n    var_4ch = 0;\n    fcn.004703f4(&var_4bh, 0, 0x31);\n    iVar4 = (**(*unaff_EBX + 0x10))();\n    var_8h = unaff_EBX[0x6d];\n    if (iVar4 != -1) {\n        uVar2 = fcn.0046dee3(iVar4, &var_1e8h);\n        fcn.004703aa(&var_80h, 0x413250, uVar2);\n    }\n    fcn.00464d6f(arg_8h, 0x413260);\n    var_4h = 0;\n    if (0 < unaff_EBX[8]) {\n        do {\n            iVar4 = *(unaff_EBX[9] + var_4h * 4);\n            if (*(iVar4 * 0x10 + 4 + unaff_EBX[0xd]) != 0) {\n                fcn.004703fa(&var_4ch, 0x413288);\n            }\n            var_18h = 0xffffffff;\n            var_14h = 0xffffffff;\n            var_10h = 0xffffffff;\n            var_ch = 0;\n            (**(*unaff_EBX + 0x30))(5, var_4h, arg_ch, &var_18h);\n            fcn.0046dee3(var_18h, &var_b4h);\n            (***arg_ch)(iVar4, unaff_EBX[0x13]);\n            fcn.0046df0f();\n            (**(*unaff_EBX + 0x48))(unaff_EBX[0x14], arg_ch, iVar4);\n            arg_8h_00 = (**(*unaff_EBX + 0x14))();\n            if (arg_8h_00 == -1) {\n                fcn.004703fa(unaff_EBX[0x15], *(iVar4 * 0x14 + 0x10 + var_8h));\n            }\n            else {\n                uVar2 = *(iVar4 * 0x14 + 0x10 + var_8h);\n                uVar3 = fcn.0046dee3(arg_8h_00, &var_1e8h);\n                fcn.004703aa(unaff_EBX[0x15], 0x413290, uVar3, uVar2);\n            }\n            cVar1 = *unaff_EBX[0x14];\n            if ((cVar1 == '\\0') || (cVar1 == ' ')) {\n                fcn.004703a4(unaff_EBX[0x14], 0x413214);\n            }\n            fcn.0046df98(unaff_EBX[0x16], unaff_EBX[0x14]);\n            fcn.004703aa(unaff_EBX[0x13], &var_e8h, &var_80h, unaff_EBX[0x15], &var_b4h, &var_4ch, unaff_EBX[0x16]);\n            fcn.00464d6f(arg_8h, unaff_EBX[0x13]);\n            var_4h = var_4h + 1;\n        } while (var_4h < unaff_EBX[8]);\n    }\n    fcn.00464d6f(arg_8h, 0x4132ac);\n    fcn.00464d6f(arg_8h, 0x412b1c);\n    return;\n}\n",
        "token_count": 1170
    },
    "0046941e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0046941e(void)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    char *arg_8h;\n    int32_t iVar5;\n    \n    iVar5 = 0;\n    if (0 < *(*(in_EAX + 0x37c) + 0x30)) {\n        do {\n            uVar3 = fcn.00465c5d();\n            iVar4 = fcn.00470436(0x4133a4, uVar3);\n            if (iVar4 == 0) {\n                arg_8h = fcn.00465c5d();\n                cVar1 = *arg_8h;\n                if (cVar1 == '~') {\n                    arg_8h = arg_8h + 1;\n                }\n                fcn.00468f8b(arg_8h, cVar1 == '~');\n            }\n            iVar5 = iVar5 + 1;\n        } while (iVar5 < *(*(in_EAX + 0x37c) + 0x30));\n    }\n    fcn.00464c9e();\n    *(*(in_EAX + 0x370) + 0x28) = 0;\n    (**(**(in_EAX + 0x370) + 0x5c))();\n    iVar5 = fcn.00465c6d(0x4133ac);\n    if (iVar5 == -1) {\n        piVar2 = *(in_EAX + 0x370);\n        if (*0x41748c == 0) {\n            *0x417490 = piVar2[0x6b];\n            *0x41748c = 1;\n        }\n        iVar5 = piVar2[10];\n        uVar3 = (**(*piVar2 + 0x60))(0x40a0f3);\n        uVar3 = (**(*piVar2 + 100))(0, iVar5, uVar3);\n        fcn.004704a8(uVar3);\n    }\n    (*_fcn.00412190)(*0x416b98);\n    return;\n}\n",
        "token_count": 484
    },
    "0046c2bf": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.0046c2bf(uint *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    iVar1 = in_EAX[3];\n    if (-1 < iVar1) {\n        if (iVar1 == -1) {\n            fcn.0047047e(*in_EAX);\n        }\n        else {\n            fcn.00464f6c(0x80c, in_EAX[2]);\n        }\n        if (in_EAX[3] < iVar1 + 1) {\n            in_EAX[3] = iVar1 + 1;\n        }\n        puVar3 = iVar1 * 0x80c + *in_EAX;\n        for (iVar2 = 0x203; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar3 = *param_1;\n            param_1 = param_1 + 1;\n            puVar3 = puVar3 + 1;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 244
    },
    "0046df98": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0046df98(uchar *arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t unaff_EDI;\n    uchar var_204h;\n    uint var_203h;\n    uchar var_104h;\n    uint var_103h;\n    int32_t var_4h;\n    \n    var_104h = 0;\n    fcn.004703f4(&var_103h, 0, 0xfe);\n    var_204h = 0;\n    fcn.004703f4(&var_203h, 0, 0xfe);\n    var_4h = 1;\n    if ((*(unaff_EDI + 4) == -1) && (*(unaff_EDI + 8) < 1)) {\n        var_4h = 0;\n    }\n    *arg_8h = 0;\n    if (var_4h != 0) {\n        fcn.004703fa(arg_8h, 0x413dd0);\n        if (0 < *(unaff_EDI + 8)) {\n            fcn.004703aa(&var_104h, 0x413dd8, *(unaff_EDI + 8));\n            fcn.004703a4(arg_8h, &var_104h);\n        }\n        if (*(unaff_EDI + 4) != -1) {\n            uVar1 = fcn.0046dee3(*(unaff_EDI + 4), &var_204h);\n            fcn.004703aa(&var_104h, 0x413de4, uVar1);\n            fcn.004703a4(arg_8h, &var_104h);\n        }\n        fcn.004703a4(arg_8h, 0x413df4);\n    }\n    if (*(unaff_EDI + 0xc) != 0) {\n        fcn.004703a4(arg_8h, 0x413df8);\n    }\n    fcn.004703a4(arg_8h, arg_ch);\n    if (*(unaff_EDI + 0xc) != 0) {\n        fcn.004703a4(arg_8h, 0x413dfc);\n    }\n    if (var_4h != 0) {\n        fcn.004703a4(arg_8h, 0x413e04);\n    }\n    return arg_8h;\n}\n",
        "token_count": 541
    },
    "0046e0b5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046e0b5(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    uint uVar1;\n    char **ppcVar2;\n    uint var_900h;\n    uint var_500h;\n    uchar var_400h;\n    uint var_3ffh;\n    uchar var_300h;\n    uint var_2ffh;\n    uchar var_200h;\n    uint var_1ffh;\n    uchar var_100h;\n    uint var_ffh;\n    \n    var_400h = 0;\n    fcn.004703f4(&var_3ffh, 0, 0xfe);\n    var_300h = 0;\n    fcn.004703f4(&var_2ffh, 0, 0xfe);\n    var_200h = 0;\n    fcn.004703f4(&var_1ffh, 0, 0xfe);\n    if (arg_14h != -1) {\n        uVar1 = fcn.0046dee3(arg_14h, &var_500h);\n        fcn.004703aa(&var_400h, 0x413250, uVar1);\n    }\n    if (arg_18h != -1) {\n        uVar1 = fcn.0046dee3(arg_18h, &var_500h);\n        fcn.004703aa(&var_300h, 0x413e0c, uVar1);\n        fcn.004703fa(&var_200h, 0x413e04);\n    }\n    fcn.004703aa(&var_900h, 0x413e20, &var_400h);\n    fcn.00464d6f(arg_8h, &var_900h);\n    if (0 < arg_10h) {\n        ppcVar2 = arg_ch + 4;\n        arg_14h = arg_10h;\n        do {\n            var_100h = 0;\n            fcn.004703f4(&var_ffh, 0, 0xfe);\n            if (**ppcVar2 == '\\0') {\n                var_100h = 0;\n            }\n            else {\n                fcn.004703aa(&var_100h, 0x413e4c, *ppcVar2);\n            }\n            fcn.004703aa(&var_900h, 0x413e58, &var_100h, &var_300h, ppcVar2[-1], &var_200h);\n            fcn.00464d6f(arg_8h, &var_900h);\n            ppcVar2 = ppcVar2 + 2;\n            arg_14h = arg_14h + -1;\n        } while (arg_14h != 0);\n    }\n    return;\n}\n",
        "token_count": 650
    },
    "00413675": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413675(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    ushort *puVar5;\n    int32_t iVar6;\n    int32_t in_stack_0000000c;\n    int16_t in_stack_00000028;\n    uint uStack8;\n    \n    fcn.0044ba9d();\n    iVar3 = (**0x4432b0)(arg_ch);\n    iVar6 = 0;\n    if (0 < iVar3) {\n        do {\n            uVar2 = arg_ch;\n            fcn.0044b531(&stack0x0000002a, 0, 0x2000);\n            uStack8 = 0x30;\n            arg_ch = 0;\n            in_stack_00000028 = 0;\n            iVar4 = (**0x443300)(uVar2, iVar6, 1, &uStack8);\n            if (iVar4 != 0) {\n                if (in_stack_00000028 != 0) {\n                    puVar5 = fcn.0044b57b(&stack0x00000028, 9);\n                    if (puVar5 != NULL) {\n                        *puVar5 = 0;\n                    }\n                    iVar1 = *0x450ec4;\n                    iVar4 = 0;\n                    if (in_stack_0000000c != 0) {\n                        if (in_stack_0000000c == 0) {\n                            *0x450ec4 = *0x450ec4 + 1;\n                            iVar4 = iVar1 + 0x11559;\n                        }\n                        else {\n                            iVar4 = iVar6 + 0x11171;\n                        }\n                    }\n                    fcn.0041363c(iVar4, &stack0x00000028);\n                }\n                if (in_stack_0000000c != 0) {\n                    fcn.00413675(arg_8h, in_stack_0000000c);\n                }\n            }\n            iVar6 = iVar6 + 1;\n        } while (iVar6 < iVar3);\n    }\n    return;\n}\n",
        "token_count": 480
    },
    "00424b51": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t fcn.00424b51(void)\n\n{\n    int32_t arg_10h;\n    int32_t unaff_ESI;\n    uint *puVar1;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00426073();\n    if (*(*(unaff_ESI + 0x84) + 2) == '\\0') {\n        arg_10h = fcn.0041bf1f(*(unaff_ESI + 0x40));\n        if (arg_10h == 0) {\n            var_4h = 7;\n            goto code_r0x00424bb2;\n        }\n        var_4h = fcn.004260ef(0, *(unaff_ESI + 0x40), arg_10h, 0);\n        if (var_4h != 0) {\n            fcn.0041c110(arg_10h);\n            goto code_r0x00424bb2;\n        }\n        *(unaff_ESI + 0x48) = arg_10h;\n    }\n    else {\ncode_r0x00424bb2:\n        if (var_4h != 0) goto code_r0x00424be7;\n    }\n    var_8h = 0;\n    if (-1 < *(unaff_ESI + 0x5a)) {\n        puVar1 = unaff_ESI + 0x84;\n        do {\n            fcn.004256a8();\n            var_8h = var_8h + 1;\n            *puVar1 = 0;\n            puVar1 = puVar1 + 1;\n        } while (var_8h <= *(unaff_ESI + 0x5a));\n    }\n    *(unaff_ESI + 0x5a) = 0xffff;\n    *(unaff_ESI + 0x53) = 2;\ncode_r0x00424be7:\n    fcn.0041c110(*(unaff_ESI + 0x54));\n    *(unaff_ESI + 0x54) = 0;\n    return var_4h;\n}\n",
        "token_count": 478
    },
    "0042a3f0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0042a3f0(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t unaff_EDI;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar2 = *(unaff_EDI + 0xd0);\n    if (iVar2 != 0) {\n        do {\n            iVar2 = *(iVar2 + 0x3c);\n        } while (iVar2 != 0);\n        fcn.0042a3ae();\n    }\n    *(unaff_EDI + 0xd0) = 0;\n    *(unaff_EDI + 0xd8) = 0;\n    if ((*(unaff_EDI + 0x44) != 0) && (iVar2 = 0,  *(unaff_EDI + 0x32) != 0)) {\n        do {\n            if (*(*(unaff_EDI + 0x44) + iVar2 * 4) != 0) {\n                fcn.0042a371();\n                *(*(unaff_EDI + 0x44) + iVar2 * 4) = 0;\n            }\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < *(unaff_EDI + 0x32));\n    }\n    if (*(unaff_EDI + 8) != 0) {\n        fcn.0042a0ea();\n    }\n    while (*(unaff_EDI + 0xd4) != 0) {\n        puVar1 = *(unaff_EDI + 0xd4);\n        *(unaff_EDI + 0xd4) = puVar1[0xf];\n        var_4h = 0;\n        if (0 < puVar1[10]) {\n            do {\n                fcn.0042a371();\n                var_4h = var_4h + 1;\n            } while (var_4h < puVar1[10]);\n        }\n        fcn.0042a0ea();\n        fcn.0041c16b(**puVar1, puVar1);\n    }\n    return;\n}\n",
        "token_count": 467
    },
    "00466d6d": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00466e11)\n\nvoid __cdecl fcn.00466d6d(uint noname_0, uint arg_ch, uint arg_bp_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    int32_t iVar5;\n    int32_t in_stack_00000010;\n    char in_stack_0000002c;\n    \n    fcn.00470712();\n    iVar2 = (**0x412254)(arg_ch);\n    iVar5 = 0;\n    if (0 < iVar2) {\n        do {\n            fcn.004703f4(&stack0x0000002d, 0, 0x1000);\n            in_stack_0000002c = '\\0';\n            iVar3 = (**0x41227c)(arg_ch, iVar5, 1, &stack0xfffffffc);\n            if (iVar3 != 0) {\n                if (in_stack_0000002c != '\\0') {\n                    puVar4 = fcn.00470412(&stack0x0000002c, 9);\n                    if (puVar4 != NULL) {\n                        *puVar4 = 0;\n                    }\n                    iVar1 = *0x4171b4;\n                    iVar3 = 0;\n                    if (in_stack_00000010 != 0) {\n                        *0x4171b4 = *0x4171b4 + 1;\n                        iVar3 = iVar1 + 0x11559;\n                    }\n                    fcn.00466d35(iVar3, &stack0x0000002c);\n                }\n                if (in_stack_00000010 != 0) {\n                    fcn.00466d6d(noname_0, in_stack_00000010, 0);\n                }\n            }\n            iVar5 = iVar5 + 1;\n        } while (iVar5 < iVar2);\n    }\n    return;\n}\n",
        "token_count": 435
    },
    "0046c86b": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046c86b(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint arg_14h;\n    uchar *puVar3;\n    uchar *puVar4;\n    uchar *puVar5;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uchar auStack8 [4];\n    \n    fcn.00470712();\n    pcVar1 = _fcn.00412010;\n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x20019;\n    uStack32 = 0;\n    uStack36 = 0x413844;\n    uStack40 = 0x80000001;\n    puStack44 = 0x46c89e;\n    iVar2 = (*_fcn.00412010)();\n    if (iVar2 == 0) {\n        puStack44 = &stack0xffffffec;\n        puStack48 = 0x20019;\n        uStack52 = 0;\n        uStack56 = 0x413864;\n        puVar5 = puStack24;\n        iVar2 = (*pcVar1)(puStack24);\n        if (iVar2 == 0) {\n            puVar4 = &stack0xffffffdc;\n            puVar3 = &stack0xfffffffc;\n            arg_14h = 0x413874;\n            uStack36 = 0x1000;\n            iVar2 = (*_fcn.00412000)(uStack40, 0x413874, 0, &stack0xfffffff8, puVar3, puVar4);\n            if (iVar2 == 0) {\n                iVar2 = fcn.00463612();\n                if (iVar2 != 0) {\n                    puStack44 = &stack0xffffffe4;\n                    uStack40 = 0x40;\n                    uStack36 = 0x416008;\n                    puStack48 = puVar5;\n                    iVar2 = fcn.00463683(&stack0xffffffd0, &stack0xffffffd8, &stack0xffffffc8);\n                    if (iVar2 != 0) {\n                        if (puVar3 < 0x400) {\n                            fcn.0047043c(&stack0xffffffd8, 0x416008, 0x40);\n                            fcn.0047043c(&stack0x00000018, puVar4, puVar3);\n                            fcn.0046c56d(arg_8h, &stack0xffffffd8, puVar3 + 0x40, arg_14h);\n                        }\n                        (*_fcn.004120dc)(arg_14h);\n                    }\n                }\n            }\n            (**0x412008)(puVar4);\n        }\n        (**0x412008)(puStack44);\n    }\n    return;\n}\n",
        "token_count": 657
    },
    "00412664": {
        "rules": [
            "check for PEB NtGlobalFlag flag/02e6ad6983154968a9ea3bb4adc24b9d/10fcbce0171842839e4e3d1dbc7c6301"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412664(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint arg_8h_00;\n    ushort var_21ch;\n    uint var_21ah;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_1ch = arg_8h + 0x28;\n    fcn.00410ec5();\n    iVar2 = fcn.0041ab74(*(arg_8h + 4), 0x448608, &var_ch);\n    if (iVar2 == 0) {\n        var_18h = arg_8h + 0x68;\n        var_8h = 0;\n        fcn.0041100e();\n        var_10h = 0;\n        var_14h = 0xff;\n        var_4h = 0x2000;\n        var_21ch = 0;\n        fcn.0044b531(&var_21ah, 0, 0x1fe);\n        uVar3 = fcn.0041105d(&var_4h);\n        pcVar1 = *0x44300c;\n        iVar2 = (**0x44300c)(var_ch, 0, &var_21ch, &var_14h, 0, &var_10h, uVar3);\n        while (iVar2 == 0) {\n            fcn.0044b60b(&var_21ch);\n            fcn.00410eeb(&var_21ch, 0xffffffff);\n            uVar3 = var_4h;\n            arg_8h_00 = fcn.0041105d();\n            fcn.00410eeb(arg_8h_00, uVar3);\n            var_8h = var_8h + 1;\n            var_10h = 0;\n            var_14h = 0xff;\n            var_4h = 0x2000;\n            var_21ch = 0;\n            fcn.0044b531(&var_21ah, 0, 0x1fe);\n            uVar3 = fcn.0041105d(&var_4h);\n            iVar2 = (*pcVar1)(var_ch, var_8h, &var_21ch, &var_14h, 0, &var_10h, uVar3);\n        }\n        (*_fcn.00443010)(var_ch);\n    }\n    return;\n}\n",
        "token_count": 595
    },
    "00435bf4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9",
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00435bf4(int32_t arg_8h, uint noname_1, int32_t *arg_10h)\n\n{\n    char cVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    \n    if (((arg_10h != NULL) && (*arg_10h != 0)) && (pcVar4 = arg_10h[2],  pcVar4 != NULL)) {\n        arg_ch = *(arg_8h + 4);\n        iVar2 = fcn.0043668f(*arg_10h, arg_ch);\n        if (iVar2 != 0) {\n            if (arg_10h[1] == 0) {\n                iVar3 = 0;\n            }\n            else {\n                iVar3 = fcn.00436778(arg_10h[1], arg_ch);\n            }\n            if (iVar3 == 0) {\n                iVar6 = 0;\n            }\n            else {\n                iVar6 = *(iVar3 + 4);\n            }\n            for (iVar8 = 0; (cVar1 = *pcVar4,  cVar1 != '\\0' && (iVar8 <= iVar6)); iVar8 = iVar8 + 1) {\n                iVar7 = 0;\n                while ((iVar5 = cVar1,  0x2f < iVar5 && (iVar5 < 0x3a))) {\n                    pcVar4 = pcVar4 + 1;\n                    iVar7 = iVar7 * 10 + -0x30 + iVar5;\n                    cVar1 = *pcVar4;\n                }\n                if (iVar8 == 0) {\n                    *(iVar2 + 0x18) = iVar7;\n                }\n                if (iVar3 == 0) {\n                    return 0;\n                }\n                *(*(iVar3 + 0xc) + iVar8 * 4) = iVar7;\n                if (*pcVar4 == ' ') {\n                    pcVar4 = pcVar4 + 1;\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 489
    },
    "0043f9dd": {
        "rules": [
            "encrypt data using HC-128/11bb23636d2a4650a9dbaa6512d69580"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043f9dd(int32_t *arg_8h, int16_t *arg_ch, int32_t *arg_10h)\n\n{\n    char **ppcVar1;\n    uint32_t uVar2;\n    char *pcVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t *piVar9;\n    uint uVar10;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (((*(arg_8h + 4) == '\\0') && (arg_8h[3] != 0)) && (*(*arg_8h + 0x1e) == '\\0')) {\n        *(arg_8h + 4) = 1;\n        uVar2 = *(*arg_8h + 0xc);\n        uVar7 = uVar2 >> 10 & 1;\n        fcn.0042a4ca();\n        var_4h = 0;\n        if (0 < *arg_10h) {\n            var_10h = 0;\n            do {\n                ppcVar1 = var_10h + arg_10h[3];\n                pcVar3 = *ppcVar1;\n                if (pcVar3 != NULL) {\n                    pcVar6 = ppcVar1[1];\n                    if (pcVar6 == NULL) {\n                        if (((*pcVar3 == -0x68) || (*pcVar3 == -0x66)) && (arg_ch != NULL)) {\n                            iVar5 = *(pcVar3 + 0x1c);\n                            iVar8 = 0;\n                            if (0 < *arg_ch) {\n                                piVar9 = arg_ch + 0x10;\n                                do {\n                                    if (*piVar9 == *(pcVar3 + 0x18)) break;\n                                    iVar8 = iVar8 + 1;\n                                    piVar9 = piVar9 + 0xe;\n                                } while (iVar8 < *arg_ch);\n                            }\n                            puVar4 = *(arg_ch + iVar8 * 0x1c + 10);\n                            if ((iVar5 < 0) && (iVar5 = puVar4[1],  iVar5 < 0)) {\n                                pcVar6 = 0x44bd78;\n                            }\n                            else {\n                                pcVar6 = *(iVar5 * 0x18 + puVar4[3]);\n                            }\n                            if ((uVar2 >> 0xb & 1) == 0) {\n                                if (uVar7 == 0) goto code_r0x0043fad2;\n                            }\n                            else if (uVar7 == 0) goto code_r0x0043fa60;\n                            uVar10 = fcn.0041ce3a(0x44bd80, *puVar4, pcVar6);\n                            fcn.0042a521(var_4h, 0, uVar10, 0x41315e);\n                            goto code_r0x0043faf3;\n                        }\ncode_r0x0043fad2:\n                        uVar10 = 0x41315e;\n                        pcVar6 = fcn.0041c430(ppcVar1[2], 0x41315e);\n                    }\n                    else {\ncode_r0x0043fa60:\n                        uVar10 = 0xffffffff;\n                    }\n                    fcn.0042a521(var_4h, 0, pcVar6, uVar10);\n                }\ncode_r0x0043faf3:\n                var_4h = var_4h + 1;\n                var_10h = var_10h + 0x14;\n            } while (var_4h < *arg_10h);\n        }\n        fcn.0043f98c(arg_ch);\n    }\n    return;\n}\n",
        "token_count": 886
    },
    "004175c7": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nvoid fcn.004175c7(uint param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uchar *puVar3;\n    int32_t unaff_ESI;\n    \n    uVar2 = *(unaff_ESI + 0x10) >> 3 & 0x3f;\n    puVar3 = uVar2 + 0x18 + unaff_ESI;\n    *puVar3 = 0x80;\n    iVar1 = -uVar2;\n    uVar2 = iVar1 + 0x3f;\n    puVar3 = puVar3 + 1;\n    if (uVar2 < 8) {\n        fcn.0044b531(puVar3, 0, uVar2);\n        fcn.00417646();\n        fcn.0044b531(unaff_ESI + 0x18, 0, 0x38);\n    }\n    else {\n        fcn.0044b531(puVar3, 0, iVar1 + 0x37);\n    }\n    *(unaff_ESI + 0x50) = *(unaff_ESI + 0x10);\n    *(unaff_ESI + 0x54) = *(unaff_ESI + 0x14);\n    fcn.00417646();\n    fcn.0044b575(param_1);\n    fcn.0044b531();\n    return;\n}\n",
        "token_count": 315
    },
    "0041d99b": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0041d99b(uint32_t *param_1)\n\n{\n    uint *puVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    if (0x400 < in_EAX << 3) {\n        in_EAX = 0x80;\n    }\n    if (in_EAX == *param_1) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.0041bf1f(in_EAX << 3);\n        if (uVar2 != 0) {\n            fcn.0041c110(param_1[3]);\n            param_1[3] = uVar2;\n            uVar3 = (*_fcn.0044f02c)(uVar2);\n            *param_1 = uVar3 >> 3;\n            fcn.0044b531(uVar2, 0, uVar3 & 0xfffffff8);\n            puVar4 = param_1[2];\n            param_1[2] = 0;\n            while (puVar4 != NULL) {\n                puVar1 = *puVar4;\n                fcn.0041d91f(puVar4[4]);\n                fcn.0041d949();\n                puVar4 = puVar1;\n            }\n            uVar2 = 1;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 340
    },
    "0046ab7d": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nvoid fcn.0046ab7d(uint param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uchar *puVar3;\n    int32_t unaff_ESI;\n    \n    uVar2 = *(unaff_ESI + 0x10) >> 3 & 0x3f;\n    puVar3 = uVar2 + 0x18 + unaff_ESI;\n    *puVar3 = 0x80;\n    iVar1 = -uVar2;\n    uVar2 = iVar1 + 0x3f;\n    puVar3 = puVar3 + 1;\n    if (uVar2 < 8) {\n        fcn.004703f4(puVar3, 0, uVar2);\n        fcn.0046abfc();\n        fcn.004703f4(unaff_ESI + 0x18, 0, 0x38);\n    }\n    else {\n        fcn.004703f4(puVar3, 0, iVar1 + 0x37);\n    }\n    *(unaff_ESI + 0x50) = *(unaff_ESI + 0x10);\n    *(unaff_ESI + 0x54) = *(unaff_ESI + 0x14);\n    fcn.0046abfc();\n    fcn.0047043c(param_1);\n    fcn.004703f4();\n    return;\n}\n",
        "token_count": 318
    },
    "0042b018": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint32_t fcn.0042b018(void)\n\n{\n    uint32_t in_EAX;\n    \n    if (0xb < in_EAX) {\n        return in_EAX - 0xc >> 1;\n    }\n    return *(in_EAX + 0x4442d4);\n}\n",
        "token_count": 65
    },
    "0042b0d3": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nvoid __fastcall fcn.0042b0d3(uint param_1)\n\n{\n    uint32_t in_EAX;\n    int32_t unaff_ESI;\n    \n    switch(in_EAX) {\n    case 0:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 1:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 2:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 3:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 4:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 5:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 6:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 7:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 8:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 9:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 10:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xb:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    default:\n        *(unaff_ESI + 0x20) = 0;\n        *(unaff_ESI + 4) = param_1;\n        *(unaff_ESI + 0x18) = in_EAX - 0xc >> 1;\n        *(unaff_ESI + 0x1c) = (-((in_EAX & 1) != 0) & 0xfff2) + 0x1010;\n        return;\n    }\n}\n",
        "token_count": 447
    },
    "00465ede": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00465ede(uint *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uchar var_a2ch;\n    uint var_a2bh;\n    uint var_62ch;\n    uint var_41ch;\n    uint var_31ch;\n    uint var_21ch;\n    uint var_11ch;\n    uint var_18h;\n    uchar *var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    var_a2ch = 0;\n    fcn.004703f4(&var_a2bh, 0, 0x3ff);\n    var_8h = 0x400;\n    var_41ch._0_1_ = 0;\n    var_31ch._0_1_ = 0;\n    var_21ch._0_1_ = 0;\n    var_11ch._0_1_ = 0;\n    iVar1 = fcn.0046da15(arg_ch, 0x413098, &var_a2ch, &var_8h);\n    if (iVar1 == 0) {\n        fcn.00463549();\n        iVar1 = fcn.00463612();\n        if (iVar1 != 0) {\n            var_14h = &var_a2ch;\n            var_18h = var_8h;\n            iVar1 = fcn.00463683(&var_18h, 0, &var_10h);\n            if (iVar1 != 0) {\n                iVar1 = (**0x4120d4)(0, 0, var_ch, var_10h >> 1, &var_21ch, 0xfd, 0, 0);\n                *(&var_21ch + iVar1) = 0;\n                (*_fcn.004120dc)(var_ch);\n                fcn.0046d9f2(arg_ch, 0x4130ac, &var_31ch);\n                fcn.0046d9f2(arg_ch, 0x4130b8, &var_11ch);\n                fcn.00464f42(arg_10h);\n                (***arg_8h)(&var_41ch);\n            }\n        }\n        fcn.00463663();\n    }\n    return;\n}\n",
        "token_count": 528
    },
    "00466278": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00466278(uint *arg_8h, uint arg_ch)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    char cVar3;\n    char cVar4;\n    int32_t in_EAX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    char *pcVar8;\n    bool bVar9;\n    char var_c28h;\n    uint var_c27h;\n    uint var_428h;\n    uint var_218h;\n    uint var_118h;\n    uint var_18h;\n    uint32_t *var_14h;\n    int32_t var_10h;\n    char *var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    uVar5 = fcn.004703b6();\n    uVar6 = uVar5 & 0x80000001;\n    bVar9 = uVar6 == 0;\n    if (uVar6 < 0) {\n        bVar9 = (uVar6 - 1 | 0xfffffffe) == 0xffffffff;\n    }\n    if ((bVar9) && (0x20 < uVar5)) {\n        var_c28h = '\\0';\n        fcn.004703f4(&var_c27h, 0, 0x7ff);\n        var_4h = 0;\n        uVar6 = arg_8h[1] | 1;\n        if (4 < uVar5) {\n            pcVar8 = in_EAX + 5;\n            iVar7 = (uVar5 - 5 >> 1) + 1;\n            do {\n                pcVar1 = pcVar8 + -1;\n                cVar3 = *pcVar8;\n                cVar4 = uVar6;\n                uVar6 = uVar6 * 0x10ff5;\n                pcVar8 = pcVar8 + 2;\n                iVar7 = iVar7 + -1;\n                pcVar2 = &var_c28h + var_4h;\n                var_4h = var_4h + 1;\n                *pcVar2 = ((*pcVar1 + -1) * '\\x10' | cVar3 - 0x21U) - cVar4;\n            } while (iVar7 != 0);\n        }\n        fcn.00463549();\n        iVar7 = fcn.00463612();\n        if (iVar7 != 0) {\n            var_10h = var_4h;\n            var_ch = &var_c28h;\n            var_18h = 0x10;\n            var_14h = arg_8h + 1;\n            iVar7 = fcn.00463683(&var_10h, &var_18h, &var_8h);\n            if (iVar7 != 0) {\n                if (0xff < var_8h) {\n                    var_8h = 0xff;\n                }\n                var_218h._0_1_ = 0;\n                var_118h._0_1_ = 0;\n                fcn.0047043c(&var_118h, var_4h, var_8h);\n                *(&var_118h + var_8h) = 0;\n                fcn.00464f42(arg_ch);\n                (***arg_8h)(&var_218h);\n                (*_fcn.004120dc)(var_4h);\n            }\n        }\n        fcn.00463663();\n    }\n    return;\n}\n",
        "token_count": 793
    },
    "00432107": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint32_t fcn.00432107(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t unaff_ESI;\n    ulong uVar2;\n    \n    if ((param_1 & 1) == 0) {\n        uVar1 = 0x30;\n    }\n    else {\n        uVar1 = fcn.004320e6();\n    }\n    uVar1 = uVar1 & 0xfff;\n    if (((*(unaff_ESI + 2) & 0x400) == 0) && (*(unaff_ESI + 4) != 0)) {\n        uVar2 = fcn.0041d157();\n        uVar1 = (uVar2 >> 0x20) + 1 + uVar2;\n    }\n    return uVar1 + 7 & 0xfffffff8;\n}\n",
        "token_count": 191
    },
    "00435ca5": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00435ca5(int32_t param_1)\n\n{\n    uint arg_ch;\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    for (puVar2 = *(*(param_1 * 0x10 + 0xc + *(in_EAX + 8)) + 0x1c); puVar2 != NULL; puVar2 = *puVar2) {\n        var_4h = puVar2[2];\n        fcn.004388ad();\n        *(var_4h + 0x30) = 0;\n    }\n    arg_ch = *(param_1 * 0x10 + *(in_EAX + 8));\n    var_8h = arg_ch;\n    iVar1 = fcn.0043668f(0x449f9c, arg_ch);\n    if (iVar1 == 0) {\n        iVar1 = 1;\n    }\n    else {\n        iVar1 = fcn.0041ce3a(0x44af90, arg_ch);\n        if (iVar1 == 0) {\n            iVar1 = 7;\n        }\n        else {\n            iVar1 = fcn.0043d9fe(in_EAX, iVar1, 0x42cbe7, &var_ch, 0);\n            fcn.0041c16b();\n            if (iVar1 != 7) {\n                return iVar1;\n            }\n        }\n        *(in_EAX + 0x1e) = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 367
    },
    "00438f4e": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint fcn.00438f4e(void)\n\n{\n    int32_t arg_ch;\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_ch = *in_EAX;\n    if ((*(*(arg_ch + 8) + 0x14) == 0) && (*(in_EAX + 0x78) == '\\0')) {\n        var_4h = fcn.0042570f(0, arg_ch, &var_8h, 0, 0x21e);\n        if (var_4h != 0) {\n            fcn.0041d1e3(0x44b800);\n            in_EAX[1] = var_4h;\n            return 1;\n        }\n        *(*(arg_ch + 8) + 0x14) = var_8h;\n        iVar1 = fcn.00425955(0xffffffff, 0);\n        if (iVar1 == 7) {\n            *(arg_ch + 0x1e) = 1;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 259
    },
    "0043b413": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.0043b413(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    fcn.0041d157();\n    fcn.0041bc4a(*(in_EAX + 0x44));\n    iVar1 = fcn.004395a9(in_EAX, 0x44b948, 2, 1, 0);\n    if (iVar1 == 0) {\n        fcn.0044a2c9(in_EAX, 0x44b948, 0, 0x422ae3);\n    }\n    iVar1 = fcn.0041c4c4(0);\n    fcn.0041bc58(*(in_EAX + 0x44));\n    if (iVar1 == 7) {\n        *(in_EAX + 0x1e) = 1;\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "0043dd6c": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint8_t fcn.0043dd6c(void)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint8_t *unaff_EDI;\n    \n    if ((*(*unaff_EDI + 0x443e90) & 4) == 0) {\n        uVar2 = fcn.0041d157();\n        iVar4 = 0;\n        do {\n            if ((*(iVar4 + 0x444728) == uVar2) && (iVar3 = fcn.0041d2b9(),  iVar3 == 0)) {\n                uVar1 = *(iVar4 + 0x444730);\n                goto code_r0x0043ddbd;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 7);\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = fcn.0041d4f0();\n    }\ncode_r0x0043ddbd:\n    return uVar1 & 1;\n}\n",
        "token_count": 242
    },
    "0044a690": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint32_t fcn.0044a690(uint param_1, int32_t **param_2)\n\n{\n    uint32_t uVar1;\n    int32_t *arg_ch;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uStack4;\n    \n    uStack4 = 6;\n    *param_2 = NULL;\n    uVar1 = fcn.00449b20();\n    if (uVar1 != 0) {\n        return uVar1;\n    }\n    uVar1 = -(*0x44f00c != 0) & *0x44f010;\n    if (*0x44f0bc != 0) {\n        uStack4 = 0x20006;\n    }\n    arg_ch = fcn.0041c2d3(0x1e8);\n    if (arg_ch != NULL) {\n        if (uVar1 != 0) {\n            iVar2 = fcn.0041bc38(1);\n            arg_ch[0x11] = iVar2;\n            if (iVar2 == 0) {\n                fcn.0041c110(arg_ch);\n                arg_ch = NULL;\n                goto code_r0x0044a8f7;\n            }\n        }\n        fcn.0041bc4a(arg_ch[0x11]);\n        arg_ch[2] = arg_ch + 0x6a;\n        arg_ch[6] = 0xff;\n        arg_ch[1] = 2;\n        arg_ch[0xe] = -0xfc486fa;\n        fcn.0044b575(arg_ch + 0x12, 0x446e40, 0x2c);\n        arg_ch[3] = arg_ch[3] | 0x8100800;\n        *(arg_ch + 7) = 1;\n        *(arg_ch + 8) = 0xff;\n        arg_ch[9] = 0;\n        arg_ch[100] = 0;\n        arg_ch[99] = 0;\n        arg_ch[0x62] = 0;\n        arg_ch[0x65] = 0;\n        arg_ch[0x45] = 0;\n        arg_ch[0x44] = 0;\n        arg_ch[0x43] = 0;\n        arg_ch[0x46] = 0;\n        iVar2 = fcn.0041ba9f(0);\n        *arg_ch = iVar2;\n        if (iVar2 == 0) {\n            fcn.0041d171(1, 0x44c90c, 0);\n        }\n        else {\n            fcn.0044a574(0x44b960, 1, 0, 0x440f0c);\n            fcn.0044a574(0x44b960, 1, 0, 0x440f0c);\n            fcn.0044a574(0x44b960, 1, 0, 0x440f0c);\n            fcn.0044a574(0x44c91c, 0, 1, 0x440f0c);\n            if (*(arg_ch + 0x1e) == '\\0') {\n                iVar2 = fcn.0043949d(1, 0x44b960, 0);\n                arg_ch[0xb] = iVar2;\n                fcn.0044a574(0x44c5a0, 2, 0, 0x440f6c);\n                arg_ch[4] = uStack4;\n                iVar2 = fcn.0042570f(param_1, arg_ch, arg_ch[2] + 4, 0, uStack4 | 0x100);\n                if (iVar2 == 0) {\n                    uVar3 = fcn.0043977b(arg_ch);\n                    *(arg_ch[2] + 0xc) = uVar3;\n                    uVar3 = fcn.0043977b(arg_ch);\n                    *(arg_ch[2] + 0x1c) = uVar3;\n                    *arg_ch[2] = 0x44c924;\n                    *(arg_ch[2] + 9) = 3;\n                    *(arg_ch[2] + 0x10) = 0x44c7b0;\n                    *(arg_ch[2] + 0x19) = 1;\n                    arg_ch[0xe] = -0x5fd65969;\n                    if (*(arg_ch + 0x1e) == '\\0') {\n                        fcn.0041d171(0, 0);\n                        fcn.0043b413();\n                        fcn.0043dcdf(arg_ch);\n                        iVar2 = fcn.0044a544();\n                        if (iVar2 == 0) {\n                            fcn.0041d171(0, 0);\n                            fcn.00449e42(*0x44f01c);\n                            fcn.0044a3d3(0x441389, 1000);\n                        }\n                    }\n                }\n                else {\n                    if (iVar2 == 0xc0a) {\n                        iVar2 = 7;\n                    }\n                    fcn.0041d171(iVar2, 0);\n                }\n            }\n        }\n        fcn.0041bc58(arg_ch[0x11]);\n    }\ncode_r0x0044a8f7:\n    uVar1 = fcn.0044a544();\n    if (uVar1 == 7) {\n        fcn.00449ffb();\n        arg_ch = NULL;\n    }\n    else if (uVar1 != 0) {\n        arg_ch[0xe] = 0x4b771290;\n    }\n    *param_2 = arg_ch;\n    return uVar1 & 0xff;\n}\n",
        "token_count": 1281
    },
    "0040e239": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040e239(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint16_t uVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    uint16_t *puVar4;\n    uint uVar5;\n    int32_t unaff_EBX;\n    uint32_t *unaff_EDI;\n    ulong uVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_EAX < *(arg_8h + 0x22)) {\n        uVar1 = *(*(unaff_EBX + 0x418) + 0xec);\n        uVar3 = fcn.0040e18b();\n        puVar4 = (-(uVar1 < 0x4000) & 0xffffffd8) + 0x50 + (uVar3 & 0xffff) + arg_8h;\n        unaff_EDI[1] = puVar4;\n        unaff_EDI[4] = (-(*(*(unaff_EBX + 0x418) + 0xec) < 0x4000) & 0xffffffd8) + 0x50 + (uVar3 & 0xffff);\n        uVar6 = fcn.0040e18b();\n        *unaff_EDI = uVar6 & 0xffff;\n        uVar2 = *((uVar6 >> 0x20) + 2);\n        if (0x3fff < *(*(unaff_EBX + 0x418) + 0xec)) {\n            uVar2 = *puVar4;\n            *puVar4 = uVar2 & 0x1fff;\n        }\n        unaff_EDI[2] = uVar2 >> 0xd;\n        if ((uVar2 >> 0xd & 4) == 0) {\n            uVar2 = *unaff_EDI[1];\n            *(unaff_EDI + 0xe) = 2;\n        }\n        else {\n            uVar2 = *(unaff_EDI[1] + 2);\n            *(unaff_EDI + 0xe) = 4;\n        }\n        *(unaff_EDI + 3) = uVar2;\n        uVar5 = 1;\n    }\n    else {\n        uVar5 = 0;\n    }\n    return uVar5;\n}\n",
        "token_count": 526
    },
    "0041d50c": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041d50c(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uchar *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_ch;\n    \n    if ((arg_ch & 0xff000000) == 0) {\n        iVar4 = 0;\n        do {\n            iVar3 = iVar4;\n            uVar1 = arg_8h;\n            arg_8h = arg_8h >> 7 | arg_ch << 0x19;\n            *(&var_ch + iVar3) = uVar1 | 0x80;\n            arg_ch = arg_ch >> 7;\n            iVar4 = iVar3 + 1;\n        } while ((arg_8h | arg_ch) != 0);\n        var_ch._0_1_ = var_ch & 0x7f;\n        for (; -1 < iVar3; iVar3 = iVar3 + -1) {\n            *in_EAX = *(&var_ch + iVar3);\n            in_EAX = in_EAX + 1;\n        }\n    }\n    else {\n        in_EAX[8] = arg_8h;\n        uVar2 = arg_8h >> 8 | arg_ch << 0x18;\n        arg_ch = arg_ch >> 8;\n        iVar4 = 7;\n        do {\n            uVar1 = uVar2;\n            uVar2 = uVar2 >> 7 | arg_ch << 0x19;\n            in_EAX[iVar4] = uVar1 | 0x80;\n            arg_ch = arg_ch >> 7;\n            iVar4 = iVar4 + -1;\n        } while (-1 < iVar4);\n        iVar4 = 9;\n    }\n    return iVar4;\n}\n",
        "token_count": 407
    },
    "0041d746": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041d746(uint8_t *param_1)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint32_t *unaff_EDI;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = param_1[1];\n    if (uVar1 < '\\0') {\n        if (param_1[2] < '\\0') {\n            uVar3 = fcn.0041d5ae();\n            if (param_1 == NULL) {\n                *unaff_EDI = 0;\n            }\n            else {\n                *unaff_EDI = 0xffffffff;\n            }\n        }\n        else {\n            uVar2 = (*param_1 << 0xe | param_1[2]) & 0x1fc07f;\n            *unaff_EDI = (uVar1 & 0x7f) << 7 | uVar2;\n            uVar3 = CONCAT31(uVar2 >> 8, 3);\n        }\n        return uVar3;\n    }\n    uVar2 = (*param_1 & 0x7f) << 7;\n    *unaff_EDI = uVar2 | uVar1;\n    return CONCAT31(uVar2 >> 8, 2);\n}\n",
        "token_count": 292
    },
    "004109ed": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004109ed(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    \n    fcn.0044b531(param_1 + 4, 0, in_EAX + -4);\n    return;\n}\n",
        "token_count": 54
    },
    "00423521": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00423521(int32_t *arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t var_4h;\n    \n    iVar1 = fcn.004231ea(&var_4h);\n    if (iVar1 == 0) {\n        iVar1 = var_4h + 0x4000;\n        if (in_EAX == 0) {\n            var_4h = var_4h + 0x88;\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = (in_EAX + -1) * 0x1000 + 0xfde;\n        }\n        *arg_ch = var_4h + -4;\n        *arg_8h = iVar1;\n        *arg_10h = iVar2;\n    }\n    return;\n}\n",
        "token_count": 213
    },
    "00424ee5": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint fcn.00424ee5(void)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t arg_8h;\n    uint32_t uVar5;\n    uchar *puVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int32_t unaff_ESI;\n    int32_t iVar10;\n    uint uVar11;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar2 = *(**(unaff_ESI + 0x3c) + 0xa4);\n    uVar1 = *(unaff_ESI + 0xc);\n    iVar3 = (*(unaff_ESI + 0x3c))[9];\n    iVar4 = *(unaff_ESI + 0x40);\n    uVar7 = *(unaff_ESI + 0x10);\n    iVar10 = *(unaff_ESI + 5) + iVar4;\n    uVar8 = CONCAT11(*(iVar10 + 5), *(iVar10 + 6));\n    fcn.0044b575(uVar8 + iVar2, uVar8 + iVar4, iVar3 - uVar8);\n    var_10h = 0;\n    uVar8 = uVar1 + uVar7 * 2;\n    var_4h = iVar3;\n    if (uVar7 != 0) {\n        puVar6 = uVar1 + iVar4;\n        do {\n            uVar9 = CONCAT11(*puVar6, puVar6[1]);\n            if ((uVar9 < uVar8) || (iVar3 + -4 < uVar9)) {\n                uVar11 = 0xb621;\n                goto code_r0x00425022;\n            }\n            arg_8h = uVar9 + iVar2;\n            uVar5 = fcn.00424e36(arg_8h);\n            uVar5 = uVar5 & 0xffff;\n            var_4h = var_4h - uVar5;\n            if ((var_4h < uVar8) || (iVar3 < uVar9 + uVar5)) {\n                uVar11 = 0xb62d;\n                goto code_r0x00425022;\n            }\n            fcn.0044b575(var_4h + iVar4, arg_8h, uVar5);\n            var_10h = var_10h + 1;\n            *puVar6 = var_4h >> 8;\n            puVar6[1] = var_4h;\n            puVar6 = puVar6 + 2;\n        } while (var_10h < uVar7);\n    }\n    *(iVar10 + 6) = var_4h;\n    *(iVar10 + 5) = var_4h >> 8;\n    *(iVar10 + 1) = 0;\n    *(iVar10 + 2) = 0;\n    *(iVar10 + 7) = 0;\n    fcn.0044b531(uVar8 + iVar4, 0, var_4h - uVar8);\n    if (var_4h - uVar8 == *(unaff_ESI + 0xe)) {\n        uVar11 = 0;\n    }\n    else {\n        uVar11 = 0xb63e;\ncode_r0x00425022:\n        uVar11 = fcn.0044a92e(uVar11);\n    }\n    return uVar11;\n}\n",
        "token_count": 830
    },
    "00425030": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00425030(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint16_t uVar4;\n    int32_t in_EAX;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint uVar11;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar7 = *(in_EAX + 5);\n    iVar6 = *(*(in_EAX + 0x3c) + 0x24);\n    iVar3 = *(in_EAX + 0x40);\n    iVar5 = iVar3 + uVar7;\n    uVar2 = *(iVar5 + 7);\n    uVar1 = *(in_EAX + 0xc) + *(in_EAX + 0x10) * 2;\n    uVar8 = (CONCAT11(*(iVar5 + 5), *(iVar5 + 6)) - 1 & 0xffff) + 1;\n    if (uVar8 < uVar1) {\n        uVar11 = 0xb666;\ncode_r0x0042507f:\n        iVar5 = fcn.0044a92e(uVar11);\n    }\n    else {\n        if (uVar2 < 0x3c) {\n            if (uVar1 + 2 <= uVar8) {\n                uVar4 = CONCAT11(*(uVar7 + 1 + iVar3), *(uVar7 + 2 + iVar3));\n                uVar7 = uVar7 + 1;\n                while (uVar10 = uVar4,  uVar4 != 0) {\n                    if ((iVar6 + -4 < uVar10) || (uVar10 < uVar7 + 4)) {\n                        uVar11 = 0xb679;\n                        goto code_r0x0042507f;\n                    }\n                    uVar9 = CONCAT11(*(uVar10 + 2 + iVar3), *(uVar10 + 3 + iVar3));\n                    if (arg_8h <= uVar9) {\n                        arg_8h = uVar9 - arg_8h;\n                        var_8h._0_1_ = arg_8h;\n                        if (arg_8h < 4) {\n                            fcn.0044b575(uVar7 + iVar3, uVar10 + iVar3, 2);\n                            *(iVar5 + 7) = uVar2 + var_8h;\n                        }\n                        else {\n                            if (iVar6 < uVar9 + uVar10) {\n                                uVar11 = 0xb686;\n                                goto code_r0x0042507f;\n                            }\n                            *(iVar3 + uVar10 + 2) = arg_8h >> 8;\n                            *(iVar3 + uVar10 + 3) = var_8h;\n                        }\n                        *arg_ch = arg_8h + uVar10;\n                        goto code_r0x0042513a;\n                    }\n                    uVar7 = uVar10;\n                    uVar4 = CONCAT11(*(uVar10 + iVar3), *(uVar10 + 1 + iVar3));\n                }\n            }\n        }\n        else {\n            iVar6 = fcn.00424ee5();\n            if (iVar6 != 0) {\n                return iVar6;\n            }\n            uVar8 = (CONCAT11(*(iVar5 + 5), *(iVar5 + 6)) - 1 & 0xffff) + 1;\n        }\n        if (uVar8 < uVar1 + 2 + arg_8h) {\n            iVar6 = fcn.00424ee5();\n            if (iVar6 != 0) {\n                return iVar6;\n            }\n            uVar8 = (CONCAT11(*(iVar5 + 5), *(iVar5 + 6)) - 1 & 0xffff) + 1;\n        }\n        arg_8h = uVar8 - arg_8h;\n        *(iVar5 + 5) = arg_8h >> 8;\n        *(iVar5 + 6) = arg_8h;\n        *arg_ch = arg_8h;\ncode_r0x0042513a:\n        iVar5 = 0;\n    }\n    return iVar5;\n}\n",
        "token_count": 1006
    },
    "004653bb": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004653bb(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    \n    fcn.004703f4(param_1 + 4, 0, in_EAX + -4);\n    return;\n}\n",
        "token_count": 54
    },
    "00424e36": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nuint8_t * __cdecl fcn.00424e36(int32_t arg_8h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    uint32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint8_t *puVar5;\n    uint var_4h;\n    \n    puVar5 = *(in_EAX + 6) + arg_8h;\n    if (*(in_EAX + 2) == '\\0') {\n        if (*puVar5 < 0x80) {\n            uVar4 = 1;\n            uVar3 = *puVar5;\n        }\n        else {\n            uVar4 = fcn.0041d746();\n            uVar4 = uVar4 & 0xff;\n            uVar3 = in_ECX;\n        }\n        puVar5 = puVar5 + uVar4;\n    }\n    else {\n        uVar3 = 0;\n        if (*(in_EAX + 4) != '\\0') {\n            if (*puVar5 < 0x80) {\n                in_ECX = *puVar5;\n                uVar3 = 1;\n            }\n            else {\n                uVar3 = fcn.0041d746();\n                uVar3 = uVar3 & 0xff;\n            }\n            puVar5 = puVar5 + uVar3;\n            uVar3 = in_ECX;\n        }\n        puVar1 = puVar5 + 9;\n        do {\n            uVar2 = *puVar5;\n            puVar5 = puVar5 + 1;\n            if ((uVar2 & 0x80) == 0) break;\n        } while (puVar5 < puVar1);\n    }\n    if (*(in_EAX + 8) < uVar3) {\n        uVar4 = *(in_EAX + 10);\n        uVar3 = (uVar3 - uVar4) % (*(*(in_EAX + 0x3c) + 0x24) - 4U) + uVar4;\n        if (*(in_EAX + 8) < uVar3) {\n            uVar3 = uVar4;\n        }\n        uVar3 = uVar3 + 4;\n    }\n    puVar5 = puVar5 + (uVar3 - arg_8h);\n    if (puVar5 < 0x4) {\n        puVar5 = 0x4;\n    }\n    return puVar5;\n}\n",
        "token_count": 558
    },
    "0042b273": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0042b273(int32_t arg_8h, uint8_t *arg_ch)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint16_t uVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint *puVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t in_EDX;\n    uint *unaff_EBX;\n    uint *puVar8;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = *(unaff_EBX + 6) * 0x28 + 0x40;\n    if (in_EDX - (-in_EAX & 7U) < iVar4) {\n        puVar5 = fcn.0041c31d(iVar4);\n        if (puVar5 == NULL) {\n            return NULL;\n        }\n        *(puVar5 + 6) = 3;\n    }\n    else {\n        puVar5 = (-in_EAX & 7U) + in_EAX;\n        *(puVar5 + 6) = 2;\n    }\n    *puVar5 = unaff_EBX;\n    puVar8 = puVar5 + 6;\n    *(puVar5 + 1) = *(unaff_EBX + 6) + 1;\n    puVar5[4] = puVar8;\n    if (*arg_ch < 0x80) {\n        var_14h = *arg_ch;\n        uVar6 = 1;\n    }\n    else {\n        uVar6 = fcn.0041d746();\n        uVar6 = uVar6 & 0xff;\n    }\n    uVar3 = 0;\n    for (uVar2 = var_14h; ((uVar6 < var_14h && (uVar3 < *(puVar5 + 1))) && (uVar2 <= arg_8h)); uVar2 = uVar2 + iVar4) {\n        if (arg_ch[uVar6] < 0x80) {\n            uVar7 = 1;\n        }\n        else {\n            uVar7 = fcn.0041d746();\n            uVar7 = uVar7 & 0xff;\n        }\n        uVar6 = uVar6 + uVar7;\n        *(puVar8 + 0x1f) = *(unaff_EBX + 1);\n        uVar1 = *unaff_EBX;\n        *(puVar8 + 7) = 0;\n        puVar8[9] = 0;\n        *puVar8 = uVar1;\n        iVar4 = fcn.0042b0d3();\n        puVar8 = puVar8 + 10;\n        uVar3 = uVar3 + 1;\n    }\n    *(puVar5 + 1) = uVar3;\n    return puVar5;\n}\n",
        "token_count": 669
    },
    "00433f25": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00433f25(int32_t arg_8h, uint8_t *arg_ch)\n\n{\n    uint16_t *puVar1;\n    uint8_t uVar2;\n    int32_t *piVar3;\n    uint8_t *puVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    \n    iVar7 = *(arg_8h + 8);\n    uVar2 = *arg_ch;\n    if ((uVar2 != 0x48) && (uVar2 != 0x84)) {\n        if (((uVar2 == 0x97) || ((uVar2 == 0x99 || (uVar2 == 0x9b)))) && (piVar3 = *(arg_ch + 0x10),  piVar3 != NULL)) {\n            piVar5 = piVar3[3];\n            for (iVar6 = *piVar3; 0 < iVar6; iVar6 = iVar6 + -1) {\n                if (*piVar5 != 0) {\n                    puVar1 = *piVar5 + 2;\n                    *puVar1 = *puVar1 | 0x200;\n                }\n                piVar5 = piVar5 + 5;\n            }\n        }\n        iVar6 = fcn.00432891(arg_ch);\n        if (iVar6 == 0) {\n            return 0;\n        }\n        if ((*(arg_ch + 2) & 0x200) != 0) {\n            uVar2 = *arg_ch;\n            puVar4 = arg_ch;\n            while (uVar2 == 0x9d) {\n                puVar4 = *(puVar4 + 8);\n                uVar2 = *puVar4;\n            }\n            uVar2 = *puVar4;\n            if (uVar2 == 0x5e) {\n                return 0;\n            }\n            if (uVar2 == 0x62) {\n                return 0;\n            }\n            if (0x80 < uVar2) {\n                if (uVar2 < 0x84) {\n                    return 0;\n                }\n                if (uVar2 == 0x85) {\n                    return 0;\n                }\n                if (uVar2 == 0x9c) {\n                    if (**(puVar4 + 8) == -0x7e) {\n                        return 0;\n                    }\n                    if (**(puVar4 + 8) == -0x7f) {\n                        return 0;\n                    }\n                }\n            }\n        }\n        *(iVar7 + 0x48) = *(iVar7 + 0x48) + 1;\n        iVar6 = *(iVar7 + 0x48);\n        iVar7 = fcn.004334bd(iVar7, arg_ch, iVar6);\n        if (iVar6 != iVar7) {\n            fcn.004349ca();\n        }\n        arg_ch[0x23] = *arg_ch;\n        *arg_ch = 0x84;\n        *(arg_ch + 0x18) = iVar7;\n    }\n    return 1;\n}\n",
        "token_count": 689
    },
    "0043c73d": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043c73d(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    int32_t unaff_ESI;\n    int64_t iVar4;\n    int32_t var_4h;\n    \n    iVar1 = fcn.0043fe38();\n    if ((*(unaff_ESI + 0x22) & 0x10) == 0) {\n        iVar4 = *(iVar1 + 0x1c) << 0x20;\n    }\n    else {\n        iVar4 = fcn.0044394b(*in_EAX);\n    }\n    var_4h = iVar4;\n    if (arg_8h < iVar4 >> 0x20) {\n        do {\n            pcVar2 = fcn.0042a0b7();\n            if ((*pcVar2 == '&') && (*(pcVar2 + 0xc) == arg_ch)) {\n                if (*(pcVar2 + 8) == *(unaff_ESI + 0x14)) {\n                    return 1;\n                }\n                for (iVar3 = *(unaff_ESI + 0x10); iVar3 != 0; iVar3 = *(iVar3 + 0x20)) {\n                    if (*(pcVar2 + 8) == *(iVar3 + 0x14)) {\n                        return 1;\n                    }\n                }\n            }\n            if ((*pcVar2 == '\\x7f') && (*(pcVar2 + 0x10) == var_4h)) {\n                return 1;\n            }\n            arg_8h = arg_8h + 1;\n        } while (arg_8h < *(iVar1 + 0x1c));\n    }\n    return 0;\n}\n",
        "token_count": 405
    },
    "004630fa": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004630fa(int32_t *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint var_3a8h;\n    uint var_39ch;\n    uint var_31ch;\n    uint var_318h;\n    uint var_198h;\n    uint var_194h;\n    uint var_114h;\n    int32_t var_4h;\n    \n    if (((*arg_8h != 0) && (arg_8h[1] != 0)) && (arg_8h[2] != 0)) {\n        iVar2 = fcn.0047041e(*arg_8h, 0x412e48);\n        if (iVar2 != 0) {\n            fcn.0046104a();\n            pcVar1 = *0x4120d4;\n            var_31ch = 7;\n            var_198h = 3;\n            (**0x4120d4)(0, 0, arg_8h[1], 0xffffffff, &var_194h, 0x7f, 0, 0);\n            (*pcVar1)(0, 0, arg_8h[2], 0xffffffff, &var_114h, 0x7f, 0, 0);\n            fcn.004703fa(&var_39ch, &var_194h);\n            fcn.004703fa(&var_318h, &var_194h);\n            iVar2 = fcn.00470412(&var_318h, 0x40);\n            if (iVar2 == 0) {\n                iVar2 = fcn.004703b6(&var_194h);\n                if (iVar2 + 10U < 0x7f) {\n                    fcn.004703aa(&var_318h, 0x412ab0, &var_194h);\n                }\n            }\n            puVar3 = fcn.00470412(&var_39ch, 0x40);\n            if (puVar3 != NULL) {\n                *puVar3 = 0;\n            }\n            fcn.00461279(var_4h + -0x878);\n        }\n    }\n    return 1;\n}\n",
        "token_count": 501
    },
    "00412299": {
        "rules": [
            "hash data using aphash/0253f481fbfe42f6972c4d360912dc99"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00412299(uint arg_8h, uint arg_ch, uint32_t *arg_10h, int32_t *arg_14h)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_ESI;\n    uint32_t arg_14h_00;\n    int32_t var_4h;\n    \n    fcn.00410bde(arg_8h, arg_ch, unaff_ESI, 8);\n    iVar2 = fcn.0044b5e1();\n    if (iVar2 == 0) {\n        fcn.0044b575(&var_4h, unaff_ESI + 4, 4);\n        if (var_4h == 0) {\n            var_4h = 1;\n        }\n        arg_14h_00 = var_4h * 0x80;\n        if (0x2000 < arg_14h_00) {\n            arg_14h_00 = 0x2000;\n        }\n        fcn.00410bde(arg_8h, arg_ch, unaff_ESI, arg_14h_00);\n        puVar1 = arg_14h_00 + unaff_ESI;\n        *puVar1 = 0;\n        puVar1[-1] = 0;\n        puVar1[-2] = 0;\n        if (arg_10h != NULL) {\n            *arg_10h = arg_14h_00;\n        }\n        if (arg_14h != NULL) {\n            *arg_14h = var_4h;\n        }\n        uVar3 = 1;\n    }\n    else {\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 393
    },
    "0041330f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041330f(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t var_20h;\n    int32_t var_18h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    \n    if ((arg_ch & 1) != 0) {\n        uVar1 = (**0x4432c0)(arg_8h);\n        (**0x443254)(arg_8h, &var_10h);\n        (*_fcn.00443244)(uVar1, &var_20h);\n        (**0x4432d4)(0, uVar1, &var_10h, 2);\n        var_10h = (var_18h - var_8h) - var_20h;\n        (**0x443218)(arg_8h, 0, var_10h, var_ch, 0, 0, 5);\n    }\n    if ((arg_ch & 2) != 0) {\n        fcn.00410a04(arg_8h);\n    }\n    return 1;\n}\n",
        "token_count": 257
    },
    "0041d801": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d801(int32_t arg_8h)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t unaff_EDI;\n    uint var_4h;\n    \n    iVar3 = fcn.0041c31d(arg_8h / 2 + 1);\n    iVar5 = 0;\n    if (iVar3 != 0) {\n        if (0 < arg_8h + -1) {\n            do {\n                cVar2 = *(unaff_EDI + 1 + iVar5);\n                pcVar1 = unaff_EDI + iVar5;\n                iVar4 = iVar5 / 2;\n                iVar5 = iVar5 + 2;\n                *(iVar4 + iVar3) = cVar2 + (cVar2 >> 6 & 1U) * -7 & 0xf | (*pcVar1 + (*pcVar1 >> 6 & 1U) * -7) * '\\x10';\n            } while (iVar5 < arg_8h + -1);\n        }\n        *(iVar5 / 2 + iVar3) = 0;\n    }\n    return;\n}\n",
        "token_count": 275
    },
    "0041e6d0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041e6d0(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint16_t uVar6;\n    uint16_t uVar7;\n    \n    piVar1 = *(arg_8h + 0x18);\n    puVar2 = *piVar1;\n    uVar3 = (1 << (arg_ch + arg_10h & 0x1f)) - (1 << (arg_ch & 0x1f));\n    fcn.0041bc4a(*puVar2);\n    piVar5 = puVar2[0x10];\n    if ((arg_14h & 1) == 0) {\n        if ((arg_14h & 4) == 0) {\n            for (; piVar5 != NULL; piVar5 = piVar5[1]) {\n                if (((*(piVar5 + 3) & uVar3) != 0) || ((*(piVar5 + 10) & uVar3) != 0)) goto code_r0x0041e802;\n            }\n            iVar4 = fcn.0041e39a(3, arg_ch + 0x78, arg_10h);\n            if (iVar4 == 0) {\n                *(piVar1 + 3) = *(piVar1 + 3) | uVar3;\n            }\n        }\n        else {\n            uVar7 = 0;\n            for (; piVar5 != NULL; piVar5 = piVar5[1]) {\n                if ((*(piVar5 + 3) & uVar3) != 0) goto code_r0x0041e802;\n                uVar7 = uVar7 | *(piVar5 + 10);\n            }\n            if ((uVar7 & uVar3) == 0) {\n                iVar4 = fcn.0041e39a(2, arg_ch + 0x78, arg_10h);\n            }\n            else {\n                iVar4 = 0;\n            }\n            if (iVar4 == 0) {\n                *(piVar1 + 10) = *(piVar1 + 10) | uVar3;\n            }\n        }\n    }\n    else {\n        uVar6 = 0;\n        uVar7 = 0;\n        for (; piVar5 != NULL; piVar5 = piVar5[1]) {\n            if (piVar5 != piVar1) {\n                uVar7 = uVar7 | *(piVar5 + 10);\n                uVar6 = uVar7;\n            }\n        }\n        if ((uVar6 & uVar3) == 0) {\n            iVar4 = fcn.0041e39a(1, arg_ch + 0x78, arg_10h);\n        }\n        else {\n            iVar4 = 0;\n        }\n        if (iVar4 == 0) {\n            *(piVar1 + 3) = *(piVar1 + 3) & ~uVar3;\n            *(piVar1 + 10) = *(piVar1 + 10) & ~uVar3;\n        }\n    }\ncode_r0x0041e7f3:\n    fcn.0041bc58(*puVar2);\n    return iVar4;\ncode_r0x0041e802:\n    iVar4 = 5;\n    goto code_r0x0041e7f3;\n}\n",
        "token_count": 796
    },
    "004236a8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nint32_t fcn.004236a8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    bool bVar6;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_48h;\n    uint var_44h;\n    uint32_t var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint32_t var_30h;\n    int32_t var_2ch;\n    uint32_t var_28h;\n    int32_t var_24h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_1ch = *(in_EAX + 0x20) + 1;\n    var_18h = 8 - var_1ch;\n    var_38h = 0;\n    var_34h = 0;\n    iVar1 = fcn.004234e4(var_1ch, var_18h);\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    fcn.0044b531(in_EAX + 0x24, 0, 0x30);\n    var_4h = (**(**(in_EAX + 8) + 0x18))(*(in_EAX + 8), &var_30h);\n    if (var_4h == 0) {\n        if ((-1 < var_2ch) && ((0 < var_2ch || (0x20 < var_30h)))) {\n            var_4h = (**(**(in_EAX + 8) + 8))(*(in_EAX + 8), &var_60h, 0x20, 0, 0);\n            if (var_4h != 0) goto code_r0x0042395e;\n            uVar2 = fcn.0041d7cc();\n            var_8h = fcn.0041d7cc();\n            if ((((uVar2 & 0xfffffffe) == 0x377f0682) && ((var_8h & var_8h - 1) == 0)) && (var_8h - 0x200 < 0xfe01)) {\n                *(in_EAX + 0x18) = var_8h;\n                *(in_EAX + 0x31) = uVar2 & 1;\n                uVar3 = fcn.0041d7cc();\n                *(in_EAX + 0x58) = uVar3;\n                fcn.0044b575(in_EAX + 0x44, &var_50h, 8);\n                fcn.004232a7(*(in_EAX + 0x31) == '\\0', in_EAX + 0x3c);\n                iVar1 = fcn.0041d7cc();\n                if ((*(in_EAX + 0x3c) == iVar1) && (iVar1 = fcn.0041d7cc(),  *(in_EAX + 0x40) == iVar1)) {\n                    iVar1 = fcn.0041d7cc();\n                    if (iVar1 == 0x2de218) {\n                        iVar1 = fcn.0041bf75(var_8h + 0x18);\n                        if (iVar1 == 0) {\n                            var_4h = 7;\n                            goto code_r0x0042395e;\n                        }\n                        var_40h = var_8h + 0x18;\n                        var_3ch = var_40h >> 0x1f;\n                        iVar4 = var_3ch + (0xffffffdf < var_40h);\n                        var_ch = 0;\n                        var_28h = 0x20;\n                        var_24h = 0;\n                        if ((iVar4 <= var_2ch) && ((iVar4 < var_2ch || (var_8h + 0x38 <= var_30h)))) {\n                            while ((var_4h = fcn.0041b9e4(iVar1, var_8h + 0x18, var_28h, var_24h),  var_4h == 0 &&\n                                   (iVar4 = fcn.00423419(&var_10h, &var_14h, iVar1 + 0x18),  iVar4 != 0))) {\n                                var_ch = var_ch + 1;\n                                var_4h = fcn.004235f1(in_EAX, var_10h);\n                                if (var_4h != 0) break;\n                                if (var_14h != 0) {\n                                    *(in_EAX + 0x38) = var_14h;\n                                    *(in_EAX + 0x34) = var_ch;\n                                    *(in_EAX + 0x32) = var_8h >> 0x10 | var_8h & 0xff00;\n                                    var_38h = *(in_EAX + 0x3c);\n                                    var_34h = *(in_EAX + 0x40);\n                                }\n                                bVar6 = CARRY4(var_28h, var_40h);\n                                var_28h = var_28h + var_40h;\n                                var_24h = var_24h + var_3ch + bVar6;\n                                iVar4 = var_3ch + var_24h + CARRY4(var_40h, var_28h);\n                                if ((var_2ch <= iVar4) && ((var_2ch < iVar4 || (var_30h < var_40h + var_28h)))) break;\n                            }\n                        }\n                        fcn.0041c110(iVar1);\n                    }\n                    else {\n                        var_4h = fcn.0044a966(0xa769);\n                    }\n                    if (var_4h != 0) goto code_r0x0042395e;\n                }\n            }\n        }\n        *(in_EAX + 0x3c) = var_38h;\n        *(in_EAX + 0x40) = var_34h;\n        fcn.00423363();\n        iVar1 = **(in_EAX + 0x14);\n        *(iVar1 + 0x60) = 0;\n        *(iVar1 + 100) = 0;\n        puVar5 = iVar1 + 0x68;\n        iVar1 = 4;\n        do {\n            *puVar5 = 0xffffffff;\n            puVar5 = puVar5 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n        if (*(in_EAX + 0x38) != 0) {\n            fcn.0041cf9b(0, 0x44a378, *(in_EAX + 0x38), *(in_EAX + 0x54));\n        }\n    }\ncode_r0x0042395e:\n    fcn.00423504(var_1ch, var_18h);\n    return var_4h;\n}\n",
        "token_count": 1645
    },
    "00423b6b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00423b6b(uint arg_8h, uint arg_ch, int32_t arg_10h, uint32_t *arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint var_78h;\n    uint var_74h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar1 = *arg_14h;\n    iVar3 = 0;\n    var_4h = 0;\n    var_8h = 0;\n    var_10h = uVar1;\n    fcn.0044b531(&var_78h, 0, 0x68);\n    uVar2 = 0;\n    if (0 < uVar1) {\n        var_ch = arg_10h;\n        do {\n            iVar3 = 0;\n            var_4h = 1;\n            var_8h = var_ch;\n            uVar1 = uVar2 & 1;\n            while (uVar1 != 0) {\n                fcn.00423ad4((&var_78h)[iVar3 * 2], &var_8h, &var_4h, arg_ch);\n                iVar3 = iVar3 + 1;\n                uVar1 = uVar2 & 1 << (iVar3 & 0x1f);\n            }\n            var_ch = var_ch + 2;\n            (&var_74h)[iVar3 * 2] = var_8h;\n            uVar1 = var_10h;\n            uVar2 = uVar2 + 1;\n            (&var_78h)[iVar3 * 2] = var_4h;\n        } while (uVar2 < uVar1);\n    }\n    while (iVar3 = iVar3 + 1,  iVar3 < 0xd) {\n        if ((var_10h & 1 << (iVar3 & 0x1f)) != 0) {\n            fcn.00423ad4((&var_78h)[iVar3 * 2], &var_8h, &var_4h, arg_ch);\n        }\n    }\n    *arg_14h = var_4h;\n    return;\n}\n",
        "token_count": 513
    },
    "004283fd": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004283fd(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint8_t in_CL;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00426b7b(&var_4h, &var_8h, 1);\n    if (iVar1 == 0) {\n        fcn.0042552f((-((in_CL & 1) != 0) & 3) + 10);\n        fcn.004227d5();\n        *arg_8h = var_8h;\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 150
    },
    "004294fc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004294fc(int32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    int32_t in_EAX;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t unaff_EBX;\n    bool bVar8;\n    bool bVar9;\n    uchar auStack88 [24];\n    uint32_t uStack64;\n    uchar auStack48 [24];\n    uint32_t uStack24;\n    \n    uVar1 = *(arg_8h + 0x1c);\n    uVar2 = *(in_EAX + 0x1c);\n    uVar3 = uVar1 | uVar2;\n    if ((uVar3 & 1) != 0) {\n        return (uVar1 & 1) - (uVar2 & 1);\n    }\n    if ((uVar3 & 0xc) == 0) {\n        if ((uVar3 & 2) != 0) {\n            if ((uVar2 & 2) == 0) {\n                return 1;\n            }\n            if ((uVar1 & 2) == 0) {\n                return -1;\n            }\n            if (unaff_EBX != 0) {\n                if (*(in_EAX + 0x1f) != *(unaff_EBX + 4)) {\n                    fcn.0044b531(auStack88, 0, 0x28);\n                    fcn.0044b531(auStack48, 0, 0x28);\n                    fcn.00429328(0x1000);\n                    fcn.00429328(0x1000);\n                    iVar5 = fcn.00429799(auStack88, *(unaff_EBX + 4));\n                    iVar6 = fcn.00429799(auStack48, *(unaff_EBX + 4));\n                    iVar5 = (**(unaff_EBX + 0xc))\n                                      (*(unaff_EBX + 8), -(iVar5 != 0) & uStack64, iVar5, -(iVar6 != 0) & uStack24, \n                                       iVar6);\n                    fcn.0042908c(auStack88);\n                    fcn.0042908c(auStack48);\n                    return iVar5;\n                }\n                iVar5 = (**(unaff_EBX + 0xc))\n                                  (*(unaff_EBX + 8), *(in_EAX + 0x18), *(in_EAX + 4), *(arg_8h + 0x18), *(arg_8h + 4));\n                return iVar5;\n            }\n        }\n        iVar5 = *(in_EAX + 0x18);\n        if (*(arg_8h + 0x18) < *(in_EAX + 0x18)) {\n            iVar5 = *(arg_8h + 0x18);\n        }\n        iVar5 = fcn.0044b5ab(*(in_EAX + 4), *(arg_8h + 4), iVar5);\n        if (iVar5 == 0) {\n            return *(in_EAX + 0x18) - *(arg_8h + 0x18);\n        }\n        return iVar5;\n    }\n    if ((uVar2 & 0xc) == 0) {\n        return 1;\n    }\n    if ((uVar1 & 0xc) == 0) {\n        return -1;\n    }\n    if ((uVar1 & uVar2 & 4) == 0) {\n        if ((uVar2 & 8) == 0) {\n            uVar7 = *(in_EAX + 0x10);\n            iVar5 = *(in_EAX + 0x14);\n        }\n        else {\n            uVar7 = *(in_EAX + 8);\n            iVar5 = *(in_EAX + 0xc);\n        }\n        if ((uVar1 & 8) == 0) {\n            uVar4 = *(arg_8h + 0x10);\n            iVar6 = *(arg_8h + 0x14);\n        }\n        else {\n            uVar4 = *(arg_8h + 8);\n            iVar6 = *(arg_8h + 0xc);\n        }\n        if (iVar6 < iVar5) {\n            return 1;\n        }\n        if (iVar5 < iVar6) {\n            return -1;\n        }\n        if (uVar7 < uVar4) {\n            return -1;\n        }\n        if (iVar5 < iVar6) {\n            return 0;\n        }\n        if (iVar6 < iVar5) {\n            return 1;\n        }\n        bVar8 = uVar7 < uVar4;\n        bVar9 = uVar7 == uVar4;\n    }\n    else {\n        uVar7 = *(in_EAX + 0x10);\n        uVar4 = *(arg_8h + 0x10);\n        iVar5 = *(in_EAX + 0x14);\n        iVar6 = *(arg_8h + 0x14);\n        if (iVar6 < iVar5) {\n            return 1;\n        }\n        if (iVar5 < iVar6) {\n            return -1;\n        }\n        if (uVar7 < uVar4) {\n            return -1;\n        }\n        if (iVar5 < iVar6) {\n            return 0;\n        }\n        if (iVar6 < iVar5) {\n            return 1;\n        }\n        bVar8 = uVar7 < uVar4;\n        bVar9 = uVar7 == uVar4;\n    }\n    if (!bVar8 && !bVar9) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 1281
    },
    "00429d6e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.00429d6e(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint8_t *puVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if ((*(in_EAX + 0x20) < *(in_EAX + 0x1c) + 9) && (iVar1 = fcn.00429b25(),  iVar1 != 0)) {\n        return 0;\n    }\n    iVar1 = *(in_EAX + 0x1c);\n    iVar5 = iVar1 * 0x14;\n    pcVar3 = 0x444841;\n    var_4h = 9;\n    do {\n        iVar4 = pcVar3[1];\n        puVar2 = *(in_EAX + 4) + iVar5;\n        *puVar2 = pcVar3[-1];\n        *(puVar2 + 4) = *pcVar3;\n        if ((iVar4 < 0) && ((*(*puVar2 + 0x443fa0) & 1) != 0)) {\n            *(puVar2 + 8) = (iVar1 - iVar4) + -1;\n        }\n        else {\n            *(puVar2 + 8) = iVar4;\n        }\n        *(puVar2 + 0xc) = pcVar3[2];\n        iVar5 = iVar5 + 0x14;\n        pcVar3 = pcVar3 + 4;\n        var_4h = var_4h + -1;\n        puVar2[1] = 0;\n        *(puVar2 + 0x10) = 0;\n        puVar2[3] = 0;\n    } while (var_4h != 0);\n    *(in_EAX + 0x1c) = *(in_EAX + 0x1c) + 9;\n    return iVar1;\n}\n",
        "token_count": 454
    },
    "0042b6e0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042b6e0(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((param_1 != 0) && ((*(*(param_1 + 0x48) + in_EAX * 0x28 + -0xc) & 1) == 0)) {\n        iVar1 = fcn.0042980e();\n        if (iVar1 != 0) {\n            fcn.00429359();\n            fcn.0042be00(0x62);\n            fcn.0042bcab();\n        }\n        return iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 151
    },
    "0042bcab": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042bcab(int32_t param_1)\n\n{\n    uint16_t uVar1;\n    \n    uVar1 = *(param_1 + 0x1c);\n    if ((uVar1 & 1) != 0) {\n        *(param_1 + 0x1e) = 5;\n        return;\n    }\n    if ((uVar1 & 4) != 0) {\n        *(param_1 + 0x1e) = 1;\n        return;\n    }\n    if ((uVar1 & 8) != 0) {\n        *(param_1 + 0x1e) = 2;\n        return;\n    }\n    *(param_1 + 0x1e) = '\\x04' - ((uVar1 & 2) != 0);\n    return;\n}\n",
        "token_count": 186
    },
    "00432063": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00432063(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_2 != 0) {\n        if ((*(param_2 + 2) & 0x2000) == 0) {\n            fcn.00432063(param_1, *(param_2 + 8));\n            fcn.00432063(param_1, *(param_2 + 0xc));\n            if (((*(param_2 + 2) & 0x1000) == 0) && ((*(param_2 + 0x22) & 1) != 0)) {\n                fcn.0041c16b(param_1, *(param_2 + 4));\n            }\n            iVar1 = *(param_2 + 0x10);\n            if ((*(param_2 + 2) & 0x800) == 0) {\n                fcn.004327f7(param_1);\n            }\n            else if (iVar1 != 0) {\n                fcn.0043ebc2(param_1, iVar1);\n                fcn.0041c16b(param_1, iVar1);\n            }\n        }\n        if ((*(param_2 + 2) & 0x4000) == 0) {\n            fcn.0041c16b(param_1, param_2);\n        }\n    }\n    return;\n}\n",
        "token_count": 313
    },
    "00432143": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00432143(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if ((arg_8h != 0) && (iVar3 = fcn.00432107(arg_ch),  (arg_ch & 1) != 0)) {\n        iVar1 = fcn.00432143(*(arg_8h + 0xc), arg_ch);\n        iVar2 = fcn.00432143(*(arg_8h + 8), arg_ch);\n        iVar3 = iVar2 + iVar3 + iVar1;\n    }\n    return iVar3;\n}\n",
        "token_count": 160
    },
    "0043ef10": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043ef10(uint *arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int16_t *piVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int16_t *var_8h;\n    int32_t var_4h;\n    \n    piVar4 = *(arg_ch + 8);\n    var_ch = 0;\n    if (*piVar4 != 1 && -1 < *piVar4 + -1) {\n        var_1ch = piVar4 + 10;\n        piVar5 = piVar4 + 0x2e;\n        var_8h = piVar4;\n        do {\n            var_14h = piVar5[-4];\n            if ((*var_1ch != 0) && (var_14h != 0)) {\n                var_18h = *(piVar5 + -7) >> 5 & 1;\n                if ((*(piVar5 + -7) & 4) != 0) {\n                    if ((*piVar5 != 0) || (piVar5[1] != 0)) {\n                        uVar3 = 0;\n                        uVar7 = 0x44bc84;\ncode_r0x0043f0c7:\n                        fcn.0041d1e3(uVar7, uVar3);\n                        return 1;\n                    }\n                    var_4h = 0;\n                    if (0 < *(var_14h + 8)) {\n                        iVar6 = var_ch + 1;\n                        var_10h = 0;\n                        do {\n                            iVar2 = fcn.0043ee3b(iVar6, *(*(var_14h + 0xc) + var_10h), &var_20h);\n                            if (iVar2 != 0) {\n                                fcn.0043ee7a(var_8h, iVar6, var_4h, var_18h, arg_ch + 0xc);\n                            }\n                            var_4h = var_4h + 1;\n                            var_10h = var_10h + 0x18;\n                            piVar4 = var_8h;\n                        } while (var_4h < *(var_14h + 8));\n                    }\n                }\n                if (*piVar5 != 0) {\n                    if (piVar5[1] != 0) {\n                        fcn.0041d1e3(0x44bcb8);\n                        return 1;\n                    }\n                    if (var_18h != 0) {\n                        fcn.0043eee4(*piVar5, piVar5[-1]);\n                    }\n                    uVar3 = fcn.00431e41(*arg_8h, *(arg_ch + 0xc));\n                    *(arg_ch + 0xc) = uVar3;\n                    *piVar5 = 0;\n                }\n                piVar1 = piVar5[1];\n                if ((piVar1 != NULL) && (var_4h = 0,  0 < piVar1[1])) {\n                    do {\n                        uVar3 = *(*piVar1 + var_4h * 8);\n                        var_10h = fcn.0043ee0a(uVar3);\n                        if ((var_10h < 0) || (iVar6 = fcn.0043ee3b(var_ch + 1, uVar3, &var_28h),  iVar6 == 0)) {\n                            uVar7 = 0x44bcf0;\n                            goto code_r0x0043f0c7;\n                        }\n                        fcn.0043ee7a(var_8h, var_ch + 1, var_10h, var_18h, arg_ch + 0xc);\n                        var_4h = var_4h + 1;\n                        piVar4 = var_8h;\n                    } while (var_4h < piVar1[1]);\n                }\n            }\n            var_ch = var_ch + 1;\n            var_1ch = var_1ch + 0xe;\n            piVar5 = piVar5 + 0xe;\n        } while (var_ch < *piVar4 + -1);\n    }\n    return 0;\n}\n",
        "token_count": 1037
    },
    "00443000": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00443000(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t unaff_ESI;\n    int32_t iVar3;\n    \ncode_r0x00443000:\n    fcn.00433ee6();\n    do {\n        iVar3 = *(unaff_EBP + -8);\n        do {\n            while( true ) {\n                iVar3 = iVar3 + 1;\n                iVar1 = *(unaff_ESI + 8);\n                *(unaff_EBP + -8) = iVar3;\n                if (iVar1 <= iVar3) {\n                    if ((*(unaff_EBP + -0x48) & 1) != 0) {\n                        fcn.00429bea(0x1d, *(unaff_EBP + -0x1c), *(unaff_ESI + 8));\n                        fcn.0043c6dd(*(unaff_EBP + -4));\n                        for (iVar3 = *(unaff_EBP + -0x38); iVar3 != 0; iVar3 = *(iVar3 + 0x20)) {\n                            if (((*(iVar3 + 8) == 'k') && (*(iVar3 + 9) == '\\x01')) &&\n                               (iVar1 = fcn.004423b6(*(iVar3 + 0x10)),  iVar1 != 0)) {\n                                fcn.00442849(unaff_EBX, iVar3, unaff_ESI, *(unaff_EBP + -0x18), *(unaff_EBP + 0x18), \n                                             *(unaff_EBP + -0x10));\n                            }\n                        }\n                        fcn.00429b6c(0x34, *(unaff_EBP + -0x14), *(unaff_EBP + -0x10), *(unaff_EBP + -0x18));\n                        if (0 < *(unaff_ESI + 8)) {\n                            do {\n                                if (((*(*(unaff_EBP + -0x28) + iVar3 * 4) < 0) && (iVar3 != *(unaff_ESI + 4))) &&\n                                   (fcn.00429b6c(0x1c, *(unaff_EBP + -0x14), iVar3, *(unaff_EBP + -0x1c) + iVar3), \n                                   *(unaff_ESI + 0x1c) == 0)) {\n                                    fcn.00442978();\n                                    unaff_ESI = *(unaff_EBP + -0xc);\n                                }\n                                iVar3 = iVar3 + 1;\n                            } while (iVar3 < *(unaff_ESI + 8));\n                        }\n                    }\n                    if (*(unaff_EBP + -0x54) == 0) {\n                        fcn.0043d34a(unaff_EBX, unaff_ESI, *(unaff_EBP + -0x14), *(unaff_EBP + -0x20), \n                                     *(unaff_EBP + -0x30), -(*(unaff_EBP + -0x2c) != 0) & *(unaff_EBP + -0x18), 1, \n                                     *(unaff_EBP + 0x18), *(unaff_EBP + -0x10), 0);\n                        if (*(unaff_EBP + -0x34) != 0) {\n                            fcn.0043bd14(unaff_EBX, unaff_ESI, *(unaff_EBP + -0x18), 0);\n                        }\n                        uVar2 = fcn.00429b6c(0x34, *(unaff_EBP + -0x14), 0, *(unaff_EBP + -0x18));\n                        *(unaff_EBP + -0x40) = uVar2;\n                        fcn.00439e81(*(unaff_EBP + -0x14), *(unaff_EBP + -0x30));\n                        if ((*(unaff_EBP + -0x34) != 0) || (*(unaff_EBP + -0x2c) != 0)) {\n                            fcn.00429b6c(0x39, *(unaff_EBP + -0x14), 0, 0);\n                        }\n                        fcn.00429e14();\n                        if (*(unaff_EBP + -0x34) != 0) {\n                            fcn.0043bd14(unaff_EBX, unaff_ESI, 0, *(unaff_EBP + -0x20));\n                        }\n                        fcn.0043d870(unaff_EBX, *(unaff_EBP + -0x14), *(unaff_EBP + -0x20), *(unaff_EBP + -0x30), 1, 0, \n                                     0);\n                        if (*(unaff_EBP + -0x34) == 0) {\n                            unaff_EBX = *(unaff_EBP + 8);\n                        }\n                        else {\n                            unaff_EBX = *(unaff_EBP + 8);\n                            fcn.0043c555(*(unaff_EBP + -0xc), *(unaff_EBP + 0x10), *(unaff_EBP + -0x18));\n                        }\n                        unaff_ESI = *(unaff_EBP + -0xc);\n                    }\n                    if (((*(*(unaff_EBP + -0x3c) + 0xc) & 0x1000) != 0) && (*(unaff_EBX + 0x1a4) == 0)) {\n                        fcn.00429b6c(0x14, *(unaff_EBP + -0x4c), 1, 0);\n                    }\n                    for (iVar3 = *(unaff_EBP + -0x38); *(unaff_EBP + 8) = iVar3,  iVar3 != 0; iVar3 = *(iVar3 + 0x20)) {\n                        if ((*(iVar3 + 8) == 'k') && (*(iVar3 + 9) == '\\x02')) {\n                            iVar3 = fcn.004423b6(*(*(unaff_EBP + 8) + 0x10));\n                            if (iVar3 != 0) {\n                                fcn.00442849(unaff_EBX, *(unaff_EBP + 8), unaff_ESI, *(unaff_EBP + -0x18), \n                                             *(unaff_EBP + 0x18), *(unaff_EBP + -0x10));\n                            }\n                            iVar3 = *(unaff_EBP + 8);\n                        }\n                    }\n                    fcn.00429b6c(1, 0, *(unaff_EBP + -0x10), 0);\n                    fcn.00429e14();\n                    iVar3 = *(unaff_ESI + 0x10);\n                    *(unaff_EBP + -8) = 0;\n                    while (iVar3 != 0) {\n                        if ((*(unaff_EBP + -0x44) != 0) || (0 < *(*(unaff_EBP + -0x30) + *(unaff_EBP + -8) * 4))) {\n                            fcn.00429b6c(0x2b, *(unaff_EBP + -0x14) + 1 + *(unaff_EBP + -8), 0, 0);\n                        }\n                        iVar3 = *(iVar3 + 0x20);\n                        *(unaff_EBP + -8) = *(unaff_EBP + -8) + 1;\n                    }\n                    fcn.00429b6c(0x2b, *(unaff_EBP + -0x14), 0, 0);\n                    if ((((*(*(unaff_EBP + -0x3c) + 0xc) & 0x1000) != 0) && (*(unaff_EBX + 0x1a4) == 0)) &&\n                       (*(unaff_EBX + 0x13) == '\\0')) {\n                        fcn.00429b6c(0x10, *(unaff_EBP + -0x4c), 1, 0);\n                        fcn.0042a4ca();\n                        fcn.0042a521(0, 0, 0x44bfd0, 0);\n                    }\n                    uVar2 = *(unaff_EBP + -0x3c);\n                    fcn.0041c16b(uVar2, *(unaff_EBP + -0x30));\n                    fcn.0041c16b(uVar2, *(unaff_EBP + -0x28));\n                    fcn.00438d01(uVar2);\n                    fcn.004327f7(uVar2);\n                    fcn.00432063(uVar2, *(unaff_EBP + 0x14));\n                    return;\n                }\n                if (iVar3 != *(unaff_ESI + 4)) break;\n                fcn.00429b6c(10, 0, *(unaff_EBP + -0x1c) + iVar3, 0);\n            }\n            if (-1 < *(*(unaff_EBP + -0x28) + iVar3 * 4)) goto code_r0x00443000;\n        } while (((((*(unaff_EBP + -0x48) & 1) != 0) && (iVar3 < 0x20)) &&\n                 ((*(unaff_EBP + -0x40) & 1 << (iVar3 & 0x1f)) == 0)) ||\n                (fcn.00429b6c(0x1c, *(unaff_EBP + -0x14), iVar3, *(unaff_EBP + -0x1c) + iVar3), \n                *(unaff_ESI + 0x1c) != 0));\n        fcn.00442978();\n        unaff_ESI = *(unaff_EBP + -0xc);\n    } while( true );\n}\n",
        "token_count": 2198
    },
    "00444331": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444331(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint arg_8h_00;\n    uint *puVar3;\n    uint var_4h;\n    \n    iVar1 = arg_8h[5];\n    uVar2 = **arg_8h;\n    puVar3 = arg_8h[7];\n    while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n        if ((*(puVar3 + 0x12) & 1) != 0) {\n            fcn.00432063(uVar2, *puVar3);\n        }\n        if (((*(puVar3 + 0x12) & 0x10) != 0) || ((*(puVar3 + 0x12) & 0x20) != 0)) {\n            arg_8h_00 = puVar3[3];\n            fcn.00444331(arg_8h_00);\n            fcn.0041c16b(uVar2, arg_8h_00);\n        }\n        puVar3 = puVar3 + 10;\n    }\n    if (arg_8h[7] != arg_8h + 8) {\n        fcn.0041c16b(uVar2, arg_8h[7]);\n    }\n    return;\n}\n",
        "token_count": 305
    },
    "004443a4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.004443a4(uint param_1, uint8_t param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint *unaff_EDI;\n    \n    if (unaff_EDI[6] <= unaff_EDI[5]) {\n        uVar1 = **unaff_EDI;\n        puVar4 = unaff_EDI[7];\n        iVar2 = fcn.0041c31d(unaff_EDI[6] * 0x50);\n        unaff_EDI[7] = iVar2;\n        if (iVar2 == 0) {\n            if ((param_2 & 1) != 0) {\n                fcn.00432063(uVar1, param_1);\n            }\n            unaff_EDI[7] = puVar4;\n            return 0;\n        }\n        fcn.0044b575(iVar2, puVar4, unaff_EDI[5] * 0x28);\n        if (puVar4 != unaff_EDI + 8) {\n            fcn.0041c16b(uVar1, puVar4);\n        }\n        uVar3 = fcn.0041c0f1(unaff_EDI[7]);\n        unaff_EDI[6] = uVar3 / 0x28;\n    }\n    iVar2 = unaff_EDI[5];\n    puVar4 = iVar2 * 0x28 + unaff_EDI[7];\n    unaff_EDI[5] = iVar2 + 1;\n    puVar4[1] = 0xffffffff;\n    *puVar4 = param_1;\n    *(puVar4 + 0x12) = param_2;\n    puVar4[5] = unaff_EDI;\n    return iVar2;\n}\n",
        "token_count": 410
    },
    "00466a6b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00466a6b(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t var_20h;\n    int32_t var_18h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    \n    if ((arg_ch & 1) != 0) {\n        uVar1 = (**0x412288)(arg_8h);\n        (**0x4121d4)(arg_8h, &var_10h);\n        (*_fcn.004121b8)(uVar1, &var_20h);\n        (*_fcn.00412258)(0, uVar1, &var_10h, 2);\n        var_10h = (var_18h - var_8h) - var_20h;\n        (*_fcn.00412200)(arg_8h, 0, var_10h, var_ch, 0, 0, 5);\n    }\n    if ((arg_ch & 2) != 0) {\n        fcn.004653d2(arg_8h);\n    }\n    return 1;\n}\n",
        "token_count": 261
    },
    "00417646": {
        "rules": [
            "encrypt data using Sosemanuk/d9cb91cf002a4780a153bbbb736437ff"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00417646(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar4 = param_1[2];\n    uVar5 = param_1[1];\n    uVar6 = ((param_1[3] ^ uVar4) & uVar5 ^ param_1[3]) + *in_EAX + -0x28955b88 + *param_1;\n    uVar2 = (uVar6 * 0x80 | uVar6 >> 0x19) + uVar5;\n    uVar6 = ((uVar4 ^ uVar5) & uVar2 ^ uVar4) + in_EAX[1] + -0x173848aa + param_1[3];\n    uVar4 = (uVar6 * 0x1000 | uVar6 >> 0x14) + uVar2;\n    uVar6 = ((uVar5 ^ uVar2) & uVar4 ^ uVar5) + in_EAX[2] + 0x242070db + param_1[2];\n    uVar5 = (uVar6 >> 0xf | uVar6 * 0x20000) + uVar4;\n    uVar6 = ((uVar4 ^ uVar2) & uVar5 ^ uVar2) + in_EAX[3] + -0x3e423112 + param_1[1];\n    uVar6 = (uVar6 >> 10 | uVar6 * 0x400000) + uVar5;\n    uVar2 = ((uVar4 ^ uVar5) & uVar6 ^ uVar4) + in_EAX[4] + -0xa83f051 + uVar2;\n    uVar2 = (uVar2 * 0x80 | uVar2 >> 0x19) + uVar6;\n    uVar4 = ((uVar5 ^ uVar6) & uVar2 ^ uVar5) + in_EAX[5] + 0x4787c62a + uVar4;\n    uVar4 = (uVar4 * 0x1000 | uVar4 >> 0x14) + uVar2;\n    uVar5 = ((uVar6 ^ uVar2) & uVar4 ^ uVar6) + in_EAX[6] + -0x57cfb9ed + uVar5;\n    uVar5 = (uVar5 >> 0xf | uVar5 * 0x20000) + uVar4;\n    uVar6 = ((uVar4 ^ uVar2) & uVar5 ^ uVar2) + in_EAX[7] + -0x2b96aff + uVar6;\n    uVar6 = (uVar6 >> 10 | uVar6 * 0x400000) + uVar5;\n    uVar2 = ((uVar4 ^ uVar5) & uVar6 ^ uVar4) + in_EAX[8] + 0x698098d8 + uVar2;\n    uVar2 = (uVar2 * 0x80 | uVar2 >> 0x19) + uVar6;\n    uVar4 = ((uVar5 ^ uVar6) & uVar2 ^ uVar5) + in_EAX[9] + -0x74bb0851 + uVar4;\n    uVar4 = (uVar4 * 0x1000 | uVar4 >> 0x14) + uVar2;\n    uVar5 = ((uVar6 ^ uVar2) & uVar4 ^ uVar6) + in_EAX[10] + -0xa44f + uVar5;\n    uVar5 = (uVar5 >> 0xf | uVar5 * 0x20000) + uVar4;\n    uVar6 = ((uVar4 ^ uVar2) & uVar5 ^ uVar2) + in_EAX[0xb] + -0x76a32842 + uVar6;\n    uVar6 = (uVar6 >> 10 | uVar6 * 0x400000) + uVar5;\n    uVar2 = ((uVar4 ^ uVar5) & uVar6 ^ uVar4) + in_EAX[0xc] + 0x6b901122 + uVar2;\n    uVar2 = (uVar2 * 0x80 | uVar2 >> 0x19) + uVar6;\n    uVar4 = ((uVar5 ^ uVar6) & uVar2 ^ uVar5) + in_EAX[0xd] + -0x2678e6d + uVar4;\n    uVar4 = (uVar4 * 0x1000 | uVar4 >> 0x14) + uVar2;\n    uVar5 = ((uVar6 ^ uVar2) & uVar4 ^ uVar6) + in_EAX[0xe] + -0x5986bc72 + uVar5;\n    uVar5 = (uVar5 >> 0xf | uVar5 * 0x20000) + uVar4;\n    uVar6 = ((uVar4 ^ uVar2) & uVar5 ^ uVar2) + in_EAX[0xf] + 0x49b40821 + uVar6;\n    uVar6 = (uVar6 >> 10 | uVar6 * 0x400000) + uVar5;\n    uVar2 = ((uVar5 ^ uVar6) & uVar4 ^ uVar5) + in_EAX[1] + -0x9e1da9e + uVar2;\n    uVar2 = (uVar2 * 0x20 | uVar2 >> 0x1b) + uVar6;\n    uVar4 = ((uVar6 ^ uVar2) & uVar5 ^ uVar6) + in_EAX[6] + -0x3fbf4cc0 + uVar4;\n    uVar4 = (uVar4 * 0x200 | uVar4 >> 0x17) + uVar2;\n    uVar5 = ((uVar4 ^ uVar2) & uVar6 ^ uVar2) + in_EAX[0xb] + 0x265e5a51 + uVar5;\n    uVar5 = (uVar5 * 0x4000 | uVar5 >> 0x12) + uVar4;\n    uVar6 = ((uVar4 ^ uVar5) & uVar2 ^ uVar4) + *in_EAX + -0x16493856 + uVar6;\n    uVar6 = (uVar6 >> 0xc | uVar6 * 0x100000) + uVar5;\n    uVar2 = ((uVar5 ^ uVar6) & uVar4 ^ uVar5) + in_EAX[5] + -0x29d0efa3 + uVar2;\n    uVar2 = (uVar2 * 0x20 | uVar2 >> 0x1b) + uVar6;\n    uVar4 = ((uVar6 ^ uVar2) & uVar5 ^ uVar6) + in_EAX[10] + 0x2441453 + uVar4;\n    uVar4 = (uVar4 * 0x200 | uVar4 >> 0x17) + uVar2;\n    uVar5 = ((uVar4 ^ uVar2) & uVar6 ^ uVar2) + in_EAX[0xf] + -0x275e197f + uVar5;\n    uVar5 = (uVar5 * 0x4000 | uVar5 >> 0x12) + uVar4;\n    uVar6 = ((uVar4 ^ uVar5) & uVar2 ^ uVar4) + in_EAX[4] + -0x182c0438 + uVar6;\n    uVar6 = (uVar6 >> 0xc | uVar6 * 0x100000) + uVar5;\n    uVar2 = ((uVar5 ^ uVar6) & uVar4 ^ uVar5) + in_EAX[9] + 0x21e1cde6 + uVar2;\n    uVar2 = (uVar2 * 0x20 | uVar2 >> 0x1b) + uVar6;\n    uVar4 = ((uVar6 ^ uVar2) & uVar5 ^ uVar6) + in_EAX[0xe] + -0x3cc8f82a + uVar4;\n    uVar4 = (uVar4 * 0x200 | uVar4 >> 0x17) + uVar2;\n    uVar5 = ((uVar4 ^ uVar2) & uVar6 ^ uVar2) + in_EAX[3] + -0xb2af279 + uVar5;\n    uVar5 = (uVar5 * 0x4000 | uVar5 >> 0x12) + uVar4;\n    uVar6 = ((uVar4 ^ uVar5) & uVar2 ^ uVar4) + in_EAX[8] + 0x455a14ed + uVar6;\n    uVar6 = (uVar6 >> 0xc | uVar6 * 0x100000) + uVar5;\n    uVar2 = ((uVar5 ^ uVar6) & uVar4 ^ uVar5) + in_EAX[0xd] + -0x561c16fb + uVar2;\n    uVar2 = (uVar2 * 0x20 | uVar2 >> 0x1b) + uVar6;\n    iVar1 = in_EAX[2];\n    uVar4 = ((uVar6 ^ uVar2) & uVar5 ^ uVar6) + iVar1 + -0x3105c08 + uVar4;\n    uVar4 = (uVar4 * 0x200 | uVar4 >> 0x17) + uVar2;\n    uVar5 = ((uVar4 ^ uVar2) & uVar6 ^ uVar2) + in_EAX[7] + 0x676f02d9 + uVar5;\n    uVar5 = (uVar5 * 0x4000 | uVar5 >> 0x12) + uVar4;\n    uVar6 = ((uVar4 ^ uVar5) & uVar2 ^ uVar4) + in_EAX[0xc] + -0x72d5b376 + uVar6;\n    uVar6 = (uVar6 >> 0xc | uVar6 * 0x100000) + uVar5;\n    uVar2 = (uVar4 ^ uVar5 ^ uVar6) + in_EAX[5] + -0x5c6be + uVar2;\n    uVar2 = (uVar2 * 0x10 | uVar2 >> 0x1c) + uVar6;\n    uVar4 = (uVar5 ^ uVar6 ^ uVar2) + in_EAX[8] + -0x788e097f + uVar4;\n    uVar4 = (uVar4 * 0x800 | uVar4 >> 0x15) + uVar2;\n    uVar5 = (uVar4 ^ uVar6 ^ uVar2) + in_EAX[0xb] + 0x6d9d6122 + uVar5;\n    uVar5 = (uVar5 * 0x10000 | uVar5 >> 0x10) + uVar4;\n    uVar6 = (uVar4 ^ uVar5 ^ uVar2) + in_EAX[0xe] + -0x21ac7f4 + uVar6;\n    uVar6 = (uVar6 >> 9 | uVar6 * 0x800000) + uVar5;\n    uVar2 = (uVar4 ^ uVar5 ^ uVar6) + in_EAX[1] + -0x5b4115bc + uVar2;\n    uVar2 = (uVar2 * 0x10 | uVar2 >> 0x1c) + uVar6;\n    uVar4 = (uVar5 ^ uVar6 ^ uVar2) + in_EAX[4] + 0x4bdecfa9 + uVar4;\n    uVar4 = (uVar4 * 0x800 | uVar4 >> 0x15) + uVar2;\n    uVar5 = (uVar4 ^ uVar6 ^ uVar2) + in_EAX[7] + -0x944b4a0 + uVar5;\n    uVar5 = (uVar5 * 0x10000 | uVar5 >> 0x10) + uVar4;\n    uVar6 = (uVar4 ^ uVar5 ^ uVar2) + in_EAX[10] + -0x41404390 + uVar6;\n    uVar6 = (uVar6 >> 9 | uVar6 * 0x800000) + uVar5;\n    uVar2 = (uVar4 ^ uVar5 ^ uVar6) + in_EAX[0xd] + 0x289b7ec6 + uVar2;\n    uVar2 = (uVar2 * 0x10 | uVar2 >> 0x1c) + uVar6;\n    uVar4 = (uVar5 ^ uVar6 ^ uVar2) + *in_EAX + -0x155ed806 + uVar4;\n    uVar4 = (uVar4 * 0x800 | uVar4 >> 0x15) + uVar2;\n    uVar5 = (uVar4 ^ uVar6 ^ uVar2) + in_EAX[3] + -0x2b10cf7b + uVar5;\n    uVar5 = (uVar5 * 0x10000 | uVar5 >> 0x10) + uVar4;\n    uVar6 = (uVar4 ^ uVar5 ^ uVar2) + in_EAX[6] + 0x4881d05 + uVar6;\n    uVar6 = (uVar6 >> 9 | uVar6 * 0x800000) + uVar5;\n    uVar2 = (uVar4 ^ uVar5 ^ uVar6) + in_EAX[9] + -0x262b2fc7 + uVar2;\n    uVar2 = (uVar2 * 0x10 | uVar2 >> 0x1c) + uVar6;\n    uVar4 = (uVar5 ^ uVar6 ^ uVar2) + in_EAX[0xc] + -0x1924661b + uVar4;\n    uVar4 = (uVar4 * 0x800 | uVar4 >> 0x15) + uVar2;\n    uVar5 = (uVar4 ^ uVar6 ^ uVar2) + in_EAX[0xf] + 0x1fa27cf8 + uVar5;\n    uVar5 = (uVar5 * 0x10000 | uVar5 >> 0x10) + uVar4;\n    uVar6 = (uVar4 ^ uVar5 ^ uVar2) + iVar1 + -0x3b53a99b + uVar6;\n    uVar6 = (uVar6 >> 9 | uVar6 * 0x800000) + uVar5;\n    uVar2 = ((~uVar4 | uVar6) ^ uVar5) + *in_EAX + -0xbd6ddbc + uVar2;\n    uVar2 = (uVar2 * 0x40 | uVar2 >> 0x1a) + uVar6;\n    uVar4 = ((~uVar5 | uVar2) ^ uVar6) + in_EAX[7] + 0x432aff97 + uVar4;\n    uVar4 = (uVar4 * 0x400 | uVar4 >> 0x16) + uVar2;\n    uVar5 = ((~uVar6 | uVar4) ^ uVar2) + in_EAX[0xe] + -0x546bdc59 + uVar5;\n    uVar5 = (uVar5 * 0x8000 | uVar5 >> 0x11) + uVar4;\n    uVar6 = ((~uVar2 | uVar5) ^ uVar4) + in_EAX[5] + -0x36c5fc7 + uVar6;\n    uVar6 = (uVar6 >> 0xb | uVar6 * 0x200000) + uVar5;\n    uVar2 = ((~uVar4 | uVar6) ^ uVar5) + in_EAX[0xc] + 0x655b59c3 + uVar2;\n    uVar2 = (uVar2 * 0x40 | uVar2 >> 0x1a) + uVar6;\n    uVar4 = ((~uVar5 | uVar2) ^ uVar6) + in_EAX[3] + -0x70f3336e + uVar4;\n    uVar4 = (uVar4 * 0x400 | uVar4 >> 0x16) + uVar2;\n    uVar5 = ((~uVar6 | uVar4) ^ uVar2) + in_EAX[10] + -0x100b83 + uVar5;\n    uVar5 = (uVar5 * 0x8000 | uVar5 >> 0x11) + uVar4;\n    uVar6 = ((~uVar2 | uVar5) ^ uVar4) + in_EAX[1] + -0x7a7ba22f + uVar6;\n    uVar6 = (uVar6 >> 0xb | uVar6 * 0x200000) + uVar5;\n    uVar2 = ((~uVar4 | uVar6) ^ uVar5) + in_EAX[8] + 0x6fa87e4f + uVar2;\n    uVar2 = (uVar2 * 0x40 | uVar2 >> 0x1a) + uVar6;\n    uVar4 = ((~uVar5 | uVar2) ^ uVar6) + in_EAX[0xf] + -0x1d31920 + uVar4;\n    uVar4 = (uVar4 * 0x400 | uVar4 >> 0x16) + uVar2;\n    uVar5 = ((~uVar6 | uVar4) ^ uVar2) + in_EAX[6] + -0x5cfebcec + uVar5;\n    uVar5 = (uVar5 * 0x8000 | uVar5 >> 0x11) + uVar4;\n    uVar6 = ((~uVar2 | uVar5) ^ uVar4) + in_EAX[0xd] + 0x4e0811a1 + uVar6;\n    uVar6 = (uVar6 >> 0xb | uVar6 * 0x200000) + uVar5;\n    uVar2 = ((~uVar4 | uVar6) ^ uVar5) + in_EAX[4] + -0x8ac817e + uVar2;\n    uVar3 = (uVar2 * 0x40 | uVar2 >> 0x1a) + uVar6;\n    uVar4 = ((~uVar5 | uVar3) ^ uVar6) + in_EAX[0xb] + -0x42c50dcb + uVar4;\n    uVar4 = (uVar4 * 0x400 | uVar4 >> 0x16) + uVar3;\n    uVar5 = ((~uVar6 | uVar4) ^ uVar3) + iVar1 + 0x2ad7d2bb + uVar5;\n    uVar2 = (uVar5 * 0x8000 | uVar5 >> 0x11) + uVar4;\n    uVar6 = ((~uVar3 | uVar2) ^ uVar4) + in_EAX[9] + -0x14792c6f + uVar6;\n    param_1[1] = param_1[1] + (uVar6 >> 0xb | uVar6 * 0x200000) + uVar2;\n    *param_1 = *param_1 + uVar3;\n    param_1[2] = param_1[2] + uVar2;\n    param_1[3] = param_1[3] + uVar4;\n    return;\n}\n",
        "token_count": 4832
    },
    "0046abfc": {
        "rules": [
            "encrypt data using Sosemanuk/d9cb91cf002a4780a153bbbb736437ff"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046abfc(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar4 = param_1[2];\n    uVar5 = param_1[1];\n    uVar6 = ((param_1[3] ^ uVar4) & uVar5 ^ param_1[3]) + *in_EAX + -0x28955b88 + *param_1;\n    uVar2 = (uVar6 * 0x80 | uVar6 >> 0x19) + uVar5;\n    uVar6 = ((uVar4 ^ uVar5) & uVar2 ^ uVar4) + in_EAX[1] + -0x173848aa + param_1[3];\n    uVar4 = (uVar6 * 0x1000 | uVar6 >> 0x14) + uVar2;\n    uVar6 = ((uVar5 ^ uVar2) & uVar4 ^ uVar5) + in_EAX[2] + 0x242070db + param_1[2];\n    uVar5 = (uVar6 >> 0xf | uVar6 * 0x20000) + uVar4;\n    uVar6 = ((uVar4 ^ uVar2) & uVar5 ^ uVar2) + in_EAX[3] + -0x3e423112 + param_1[1];\n    uVar6 = (uVar6 >> 10 | uVar6 * 0x400000) + uVar5;\n    uVar2 = ((uVar4 ^ uVar5) & uVar6 ^ uVar4) + in_EAX[4] + -0xa83f051 + uVar2;\n    uVar2 = (uVar2 * 0x80 | uVar2 >> 0x19) + uVar6;\n    uVar4 = ((uVar5 ^ uVar6) & uVar2 ^ uVar5) + in_EAX[5] + 0x4787c62a + uVar4;\n    uVar4 = (uVar4 * 0x1000 | uVar4 >> 0x14) + uVar2;\n    uVar5 = ((uVar6 ^ uVar2) & uVar4 ^ uVar6) + in_EAX[6] + -0x57cfb9ed + uVar5;\n    uVar5 = (uVar5 >> 0xf | uVar5 * 0x20000) + uVar4;\n    uVar6 = ((uVar4 ^ uVar2) & uVar5 ^ uVar2) + in_EAX[7] + -0x2b96aff + uVar6;\n    uVar6 = (uVar6 >> 10 | uVar6 * 0x400000) + uVar5;\n    uVar2 = ((uVar4 ^ uVar5) & uVar6 ^ uVar4) + in_EAX[8] + 0x698098d8 + uVar2;\n    uVar2 = (uVar2 * 0x80 | uVar2 >> 0x19) + uVar6;\n    uVar4 = ((uVar5 ^ uVar6) & uVar2 ^ uVar5) + in_EAX[9] + -0x74bb0851 + uVar4;\n    uVar4 = (uVar4 * 0x1000 | uVar4 >> 0x14) + uVar2;\n    uVar5 = ((uVar6 ^ uVar2) & uVar4 ^ uVar6) + in_EAX[10] + -0xa44f + uVar5;\n    uVar5 = (uVar5 >> 0xf | uVar5 * 0x20000) + uVar4;\n    uVar6 = ((uVar4 ^ uVar2) & uVar5 ^ uVar2) + in_EAX[0xb] + -0x76a32842 + uVar6;\n    uVar6 = (uVar6 >> 10 | uVar6 * 0x400000) + uVar5;\n    uVar2 = ((uVar4 ^ uVar5) & uVar6 ^ uVar4) + in_EAX[0xc] + 0x6b901122 + uVar2;\n    uVar2 = (uVar2 * 0x80 | uVar2 >> 0x19) + uVar6;\n    uVar4 = ((uVar5 ^ uVar6) & uVar2 ^ uVar5) + in_EAX[0xd] + -0x2678e6d + uVar4;\n    uVar4 = (uVar4 * 0x1000 | uVar4 >> 0x14) + uVar2;\n    uVar5 = ((uVar6 ^ uVar2) & uVar4 ^ uVar6) + in_EAX[0xe] + -0x5986bc72 + uVar5;\n    uVar5 = (uVar5 >> 0xf | uVar5 * 0x20000) + uVar4;\n    uVar6 = ((uVar4 ^ uVar2) & uVar5 ^ uVar2) + in_EAX[0xf] + 0x49b40821 + uVar6;\n    uVar6 = (uVar6 >> 10 | uVar6 * 0x400000) + uVar5;\n    uVar2 = ((uVar5 ^ uVar6) & uVar4 ^ uVar5) + in_EAX[1] + -0x9e1da9e + uVar2;\n    uVar2 = (uVar2 * 0x20 | uVar2 >> 0x1b) + uVar6;\n    uVar4 = ((uVar6 ^ uVar2) & uVar5 ^ uVar6) + in_EAX[6] + -0x3fbf4cc0 + uVar4;\n    uVar4 = (uVar4 * 0x200 | uVar4 >> 0x17) + uVar2;\n    uVar5 = ((uVar4 ^ uVar2) & uVar6 ^ uVar2) + in_EAX[0xb] + 0x265e5a51 + uVar5;\n    uVar5 = (uVar5 * 0x4000 | uVar5 >> 0x12) + uVar4;\n    uVar6 = ((uVar4 ^ uVar5) & uVar2 ^ uVar4) + *in_EAX + -0x16493856 + uVar6;\n    uVar6 = (uVar6 >> 0xc | uVar6 * 0x100000) + uVar5;\n    uVar2 = ((uVar5 ^ uVar6) & uVar4 ^ uVar5) + in_EAX[5] + -0x29d0efa3 + uVar2;\n    uVar2 = (uVar2 * 0x20 | uVar2 >> 0x1b) + uVar6;\n    uVar4 = ((uVar6 ^ uVar2) & uVar5 ^ uVar6) + in_EAX[10] + 0x2441453 + uVar4;\n    uVar4 = (uVar4 * 0x200 | uVar4 >> 0x17) + uVar2;\n    uVar5 = ((uVar4 ^ uVar2) & uVar6 ^ uVar2) + in_EAX[0xf] + -0x275e197f + uVar5;\n    uVar5 = (uVar5 * 0x4000 | uVar5 >> 0x12) + uVar4;\n    uVar6 = ((uVar4 ^ uVar5) & uVar2 ^ uVar4) + in_EAX[4] + -0x182c0438 + uVar6;\n    uVar6 = (uVar6 >> 0xc | uVar6 * 0x100000) + uVar5;\n    uVar2 = ((uVar5 ^ uVar6) & uVar4 ^ uVar5) + in_EAX[9] + 0x21e1cde6 + uVar2;\n    uVar2 = (uVar2 * 0x20 | uVar2 >> 0x1b) + uVar6;\n    uVar4 = ((uVar6 ^ uVar2) & uVar5 ^ uVar6) + in_EAX[0xe] + -0x3cc8f82a + uVar4;\n    uVar4 = (uVar4 * 0x200 | uVar4 >> 0x17) + uVar2;\n    uVar5 = ((uVar4 ^ uVar2) & uVar6 ^ uVar2) + in_EAX[3] + -0xb2af279 + uVar5;\n    uVar5 = (uVar5 * 0x4000 | uVar5 >> 0x12) + uVar4;\n    uVar6 = ((uVar4 ^ uVar5) & uVar2 ^ uVar4) + in_EAX[8] + 0x455a14ed + uVar6;\n    uVar6 = (uVar6 >> 0xc | uVar6 * 0x100000) + uVar5;\n    uVar2 = ((uVar5 ^ uVar6) & uVar4 ^ uVar5) + in_EAX[0xd] + -0x561c16fb + uVar2;\n    uVar2 = (uVar2 * 0x20 | uVar2 >> 0x1b) + uVar6;\n    iVar1 = in_EAX[2];\n    uVar4 = ((uVar6 ^ uVar2) & uVar5 ^ uVar6) + iVar1 + -0x3105c08 + uVar4;\n    uVar4 = (uVar4 * 0x200 | uVar4 >> 0x17) + uVar2;\n    uVar5 = ((uVar4 ^ uVar2) & uVar6 ^ uVar2) + in_EAX[7] + 0x676f02d9 + uVar5;\n    uVar5 = (uVar5 * 0x4000 | uVar5 >> 0x12) + uVar4;\n    uVar6 = ((uVar4 ^ uVar5) & uVar2 ^ uVar4) + in_EAX[0xc] + -0x72d5b376 + uVar6;\n    uVar6 = (uVar6 >> 0xc | uVar6 * 0x100000) + uVar5;\n    uVar2 = (uVar4 ^ uVar5 ^ uVar6) + in_EAX[5] + -0x5c6be + uVar2;\n    uVar2 = (uVar2 * 0x10 | uVar2 >> 0x1c) + uVar6;\n    uVar4 = (uVar5 ^ uVar6 ^ uVar2) + in_EAX[8] + -0x788e097f + uVar4;\n    uVar4 = (uVar4 * 0x800 | uVar4 >> 0x15) + uVar2;\n    uVar5 = (uVar4 ^ uVar6 ^ uVar2) + in_EAX[0xb] + 0x6d9d6122 + uVar5;\n    uVar5 = (uVar5 * 0x10000 | uVar5 >> 0x10) + uVar4;\n    uVar6 = (uVar4 ^ uVar5 ^ uVar2) + in_EAX[0xe] + -0x21ac7f4 + uVar6;\n    uVar6 = (uVar6 >> 9 | uVar6 * 0x800000) + uVar5;\n    uVar2 = (uVar4 ^ uVar5 ^ uVar6) + in_EAX[1] + -0x5b4115bc + uVar2;\n    uVar2 = (uVar2 * 0x10 | uVar2 >> 0x1c) + uVar6;\n    uVar4 = (uVar5 ^ uVar6 ^ uVar2) + in_EAX[4] + 0x4bdecfa9 + uVar4;\n    uVar4 = (uVar4 * 0x800 | uVar4 >> 0x15) + uVar2;\n    uVar5 = (uVar4 ^ uVar6 ^ uVar2) + in_EAX[7] + -0x944b4a0 + uVar5;\n    uVar5 = (uVar5 * 0x10000 | uVar5 >> 0x10) + uVar4;\n    uVar6 = (uVar4 ^ uVar5 ^ uVar2) + in_EAX[10] + -0x41404390 + uVar6;\n    uVar6 = (uVar6 >> 9 | uVar6 * 0x800000) + uVar5;\n    uVar2 = (uVar4 ^ uVar5 ^ uVar6) + in_EAX[0xd] + 0x289b7ec6 + uVar2;\n    uVar2 = (uVar2 * 0x10 | uVar2 >> 0x1c) + uVar6;\n    uVar4 = (uVar5 ^ uVar6 ^ uVar2) + *in_EAX + -0x155ed806 + uVar4;\n    uVar4 = (uVar4 * 0x800 | uVar4 >> 0x15) + uVar2;\n    uVar5 = (uVar4 ^ uVar6 ^ uVar2) + in_EAX[3] + -0x2b10cf7b + uVar5;\n    uVar5 = (uVar5 * 0x10000 | uVar5 >> 0x10) + uVar4;\n    uVar6 = (uVar4 ^ uVar5 ^ uVar2) + in_EAX[6] + 0x4881d05 + uVar6;\n    uVar6 = (uVar6 >> 9 | uVar6 * 0x800000) + uVar5;\n    uVar2 = (uVar4 ^ uVar5 ^ uVar6) + in_EAX[9] + -0x262b2fc7 + uVar2;\n    uVar2 = (uVar2 * 0x10 | uVar2 >> 0x1c) + uVar6;\n    uVar4 = (uVar5 ^ uVar6 ^ uVar2) + in_EAX[0xc] + -0x1924661b + uVar4;\n    uVar4 = (uVar4 * 0x800 | uVar4 >> 0x15) + uVar2;\n    uVar5 = (uVar4 ^ uVar6 ^ uVar2) + in_EAX[0xf] + 0x1fa27cf8 + uVar5;\n    uVar5 = (uVar5 * 0x10000 | uVar5 >> 0x10) + uVar4;\n    uVar6 = (uVar4 ^ uVar5 ^ uVar2) + iVar1 + -0x3b53a99b + uVar6;\n    uVar6 = (uVar6 >> 9 | uVar6 * 0x800000) + uVar5;\n    uVar2 = ((~uVar4 | uVar6) ^ uVar5) + *in_EAX + -0xbd6ddbc + uVar2;\n    uVar2 = (uVar2 * 0x40 | uVar2 >> 0x1a) + uVar6;\n    uVar4 = ((~uVar5 | uVar2) ^ uVar6) + in_EAX[7] + 0x432aff97 + uVar4;\n    uVar4 = (uVar4 * 0x400 | uVar4 >> 0x16) + uVar2;\n    uVar5 = ((~uVar6 | uVar4) ^ uVar2) + in_EAX[0xe] + -0x546bdc59 + uVar5;\n    uVar5 = (uVar5 * 0x8000 | uVar5 >> 0x11) + uVar4;\n    uVar6 = ((~uVar2 | uVar5) ^ uVar4) + in_EAX[5] + -0x36c5fc7 + uVar6;\n    uVar6 = (uVar6 >> 0xb | uVar6 * 0x200000) + uVar5;\n    uVar2 = ((~uVar4 | uVar6) ^ uVar5) + in_EAX[0xc] + 0x655b59c3 + uVar2;\n    uVar2 = (uVar2 * 0x40 | uVar2 >> 0x1a) + uVar6;\n    uVar4 = ((~uVar5 | uVar2) ^ uVar6) + in_EAX[3] + -0x70f3336e + uVar4;\n    uVar4 = (uVar4 * 0x400 | uVar4 >> 0x16) + uVar2;\n    uVar5 = ((~uVar6 | uVar4) ^ uVar2) + in_EAX[10] + -0x100b83 + uVar5;\n    uVar5 = (uVar5 * 0x8000 | uVar5 >> 0x11) + uVar4;\n    uVar6 = ((~uVar2 | uVar5) ^ uVar4) + in_EAX[1] + -0x7a7ba22f + uVar6;\n    uVar6 = (uVar6 >> 0xb | uVar6 * 0x200000) + uVar5;\n    uVar2 = ((~uVar4 | uVar6) ^ uVar5) + in_EAX[8] + 0x6fa87e4f + uVar2;\n    uVar2 = (uVar2 * 0x40 | uVar2 >> 0x1a) + uVar6;\n    uVar4 = ((~uVar5 | uVar2) ^ uVar6) + in_EAX[0xf] + -0x1d31920 + uVar4;\n    uVar4 = (uVar4 * 0x400 | uVar4 >> 0x16) + uVar2;\n    uVar5 = ((~uVar6 | uVar4) ^ uVar2) + in_EAX[6] + -0x5cfebcec + uVar5;\n    uVar5 = (uVar5 * 0x8000 | uVar5 >> 0x11) + uVar4;\n    uVar6 = ((~uVar2 | uVar5) ^ uVar4) + in_EAX[0xd] + 0x4e0811a1 + uVar6;\n    uVar6 = (uVar6 >> 0xb | uVar6 * 0x200000) + uVar5;\n    uVar2 = ((~uVar4 | uVar6) ^ uVar5) + in_EAX[4] + -0x8ac817e + uVar2;\n    uVar3 = (uVar2 * 0x40 | uVar2 >> 0x1a) + uVar6;\n    uVar4 = ((~uVar5 | uVar3) ^ uVar6) + in_EAX[0xb] + -0x42c50dcb + uVar4;\n    uVar4 = (uVar4 * 0x400 | uVar4 >> 0x16) + uVar3;\n    uVar5 = ((~uVar6 | uVar4) ^ uVar3) + iVar1 + 0x2ad7d2bb + uVar5;\n    uVar2 = (uVar5 * 0x8000 | uVar5 >> 0x11) + uVar4;\n    uVar6 = ((~uVar3 | uVar2) ^ uVar4) + in_EAX[9] + -0x14792c6f + uVar6;\n    param_1[1] = param_1[1] + (uVar6 >> 0xb | uVar6 * 0x200000) + uVar2;\n    *param_1 = *param_1 + uVar3;\n    param_1[2] = param_1[2] + uVar2;\n    param_1[3] = param_1[3] + uVar4;\n    return;\n}\n",
        "token_count": 4833
    },
    "0041b1ff": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041b1ff(uint param_1)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (in_EAX < 0x17) {\n        if (in_EAX == 0x16) {\n            uVar1 = 0x44965c;\n        }\n        else if (in_EAX == 2) {\n            uVar1 = 0x449638;\n        }\n        else if (in_EAX == 6) {\n            uVar1 = 0x4495fc;\n        }\n        else if (in_EAX == 7) {\n            uVar1 = 0x44964c;\n        }\n        else if (in_EAX == 0xb) {\n            uVar1 = 0x449620;\n        }\n        else {\n            if (in_EAX != 0x10) {\n                return 0;\n            }\n            uVar1 = 0x449610;\n        }\n    }\n    else if (in_EAX == 0x17) {\n        uVar1 = 0x449680;\n    }\n    else if (in_EAX == 0x18) {\n        uVar1 = 0x4496c0;\n    }\n    else if (in_EAX == 0x19) {\n        uVar1 = 0x4496a0;\n    }\n    else {\n        if (in_EAX != 0x1a) {\n            return 0;\n        }\n        uVar1 = 0x4495ec;\n    }\n    fcn.0044b56f(param_1, uVar1);\n    return 1;\n}\n",
        "token_count": 360
    },
    "00423572": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00423572(void)\n\n{\n    uint16_t *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_ch = 0;\n    var_8h = 0;\n    if (*(in_EAX + 0x34) != 0) {\n        fcn.00423521(&var_4h, &var_ch, &var_8h);\n        iVar2 = *(in_EAX + 0x34) - var_8h;\n        iVar3 = 0;\n        do {\n            puVar1 = var_4h + iVar3 * 2;\n            if (iVar2 < *puVar1) {\n                *puVar1 = 0;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < 0x2000);\n        fcn.0044b531(iVar2 * 4 + 4 + var_ch, 0, ((var_4h + iVar2 * -4) - var_ch) + -4);\n    }\n    return;\n}\n",
        "token_count": 275
    },
    "0043a112": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a112(uint arg_8h, uint noname_1, int32_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    \n    if (*(*arg_10h + 0x1e) == '\\x01') {\n        iVar3 = fcn.004290ba();\n        uVar2 = iVar3 >> 0x20;\n        uVar1 = iVar3;\n        if ((iVar3 < 0x100000000) && (iVar3 < 0)) {\n            if ((uVar1 | uVar2 & 0x7fffffff) == 0) {\n                fcn.0042b836(0x44b8e0);\n                return;\n            }\n            iVar3 = CONCAT44(-(uVar2 + (uVar1 != 0)), -uVar1);\n        }\n        fcn.0042b863(iVar3);\n    }\n    else if (*(*arg_10h + 0x1e) == '\\x05') {\n        fcn.0042921c();\n    }\n    else {\n        iVar3 = fcn.0042910b();\n        if ((iVar3 < 0x100000000) && (iVar3 < 0)) {\n            iVar3 = CONCAT44(-((iVar3 >> 0x20) + (iVar3 != 0)), -iVar3);\n        }\n        fcn.0042b863(iVar3);\n    }\n    return;\n}\n",
        "token_count": 334
    },
    "0046dc4d": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0046dc4d(uint param_1)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (in_EAX < 0x17) {\n        if (in_EAX == 0x16) {\n            uVar1 = 0x413c54;\n        }\n        else if (in_EAX == 2) {\n            uVar1 = 0x413c40;\n        }\n        else if (in_EAX == 6) {\n            uVar1 = 0x413c20;\n        }\n        else if (in_EAX == 7) {\n            uVar1 = 0x413c4c;\n        }\n        else if (in_EAX == 0xb) {\n            uVar1 = 0x413c34;\n        }\n        else {\n            if (in_EAX != 0x10) {\n                return 0;\n            }\n            uVar1 = 0x413c2c;\n        }\n    }\n    else if (in_EAX == 0x17) {\n        uVar1 = 0x413c68;\n    }\n    else if (in_EAX == 0x18) {\n        uVar1 = 0x413c88;\n    }\n    else if (in_EAX == 0x19) {\n        uVar1 = 0x413c78;\n    }\n    else {\n        if (in_EAX != 0x1a) {\n            return 0;\n        }\n        uVar1 = 0x413c18;\n    }\n    fcn.004703fa(param_1, uVar1);\n    return 1;\n}\n",
        "token_count": 362
    },
    "004319c1": {
        "rules": [
            "parse credit card information/3266979fad224c5386fccfb7f2b301b7",
            "parse credit card information/3266979fad224c5386fccfb7f2b301b7"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.004319c1(int32_t *param_1)\n\n{\n    char cVar1;\n    uint arg_ch;\n    char *in_EAX;\n    int32_t iVar2;\n    char *pcVar3;\n    uint *puVar4;\n    uint var_4h;\n    \n    puVar4 = NULL;\n    pcVar3 = in_EAX;\n    if (in_EAX != NULL) {\n        do {\n            puVar4 = *(pcVar3 + 0x14);\n            if (puVar4 != NULL) goto code_r0x00431a4c;\n            cVar1 = *pcVar3;\n            if ((*(pcVar3 + 0x28) != 0) &&\n               ((((cVar1 == -0x66 || (cVar1 == -0x68)) || (cVar1 == -0x7c)) || (cVar1 == '<')))) {\n                if (-1 < *(pcVar3 + 0x1c)) {\n                    puVar4 = fcn.0043949d(*(*(*(*param_1 + 8) + 0xc) + 0x49), \n                                          *(*(*(pcVar3 + 0x28) + 0xc) + 0x10 + *(pcVar3 + 0x1c) * 0x18), 0);\n                    *(in_EAX + 0x14) = puVar4;\n                }\ncode_r0x00431a48:\n                if (puVar4 == NULL) {\n                    return NULL;\n                }\ncode_r0x00431a4c:\n                arg_ch = *puVar4;\n                iVar2 = fcn.00439385(*(*(*(*param_1 + 8) + 0xc) + 0x49), arg_ch);\n                if (iVar2 != 0) {\n                    return puVar4;\n                }\n                fcn.0041d1e3(0x44b2b8, arg_ch);\n                param_1[0x10] = param_1[0x10] + 1;\n                return NULL;\n            }\n            if ((cVar1 != '%') && (cVar1 != -99)) goto code_r0x00431a48;\n            pcVar3 = *(pcVar3 + 8);\n        } while (pcVar3 != NULL);\n    }\n    return puVar4;\n}\n",
        "token_count": 523
    },
    "004307d4": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nuint32_t fcn.004307d4(code **param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    if (param_2 == 0) {\n        return 0;\n    }\n    uVar1 = (**param_1)(param_1, param_2);\n    if ((uVar1 == 0) && ((*(param_2 + 2) & 0x2000) == 0)) {\n        iVar2 = fcn.004307d4(param_1, *(param_2 + 8));\n        if (iVar2 == 0) {\n            iVar2 = fcn.004307d4(param_1, *(param_2 + 0xc));\n            if (iVar2 == 0) {\n                if ((*(param_2 + 2) & 0x800) == 0) {\n                    iVar2 = fcn.00430849(param_1);\n                }\n                else {\n                    iVar2 = fcn.004308e6(param_1, *(param_2 + 0x10));\n                }\n                if (iVar2 == 0) goto code_r0x00430840;\n            }\n        }\n        uVar1 = 2;\n    }\n    else {\ncode_r0x00430840:\n        uVar1 = uVar1 & 2;\n    }\n    return uVar1;\n}\n",
        "token_count": 308
    },
    "00430879": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nuint8_t fcn.00430879(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00430849();\n    if (iVar1 == 0) {\n        iVar1 = fcn.004307d4();\n        if (iVar1 == 0) {\n            iVar1 = fcn.00430849();\n            if (iVar1 == 0) {\n                iVar1 = fcn.004307d4();\n                if (iVar1 == 0) {\n                    iVar1 = fcn.00430849();\n                    if (iVar1 == 0) {\n                        iVar1 = fcn.004307d4();\n                        if (iVar1 == 0) {\n                            iVar1 = fcn.004307d4();\n                            return -(iVar1 != 0) & 2;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return 2;\n}\n",
        "token_count": 193
    },
    "00434590": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nuint8_t fcn.00434590(char *param_1, char *param_2)\n\n{\n    int32_t iVar1;\n    uint16_t uVar2;\n    \n    if ((param_1 == NULL) || (param_2 == NULL)) {\n        return -(param_2 != param_1) & 2;\n    }\n    if (((((((*(param_1 + 2) & 0x800) == 0) && ((*(param_2 + 2) & 0x800) == 0)) &&\n          (((*(param_2 + 2) ^ *(param_1 + 2)) & 0x10) == 0)) &&\n         ((*param_1 == *param_2 && (iVar1 = fcn.00434590(*(param_1 + 8), *(param_2 + 8)),  iVar1 == 0)))) &&\n        ((iVar1 = fcn.00434590(*(param_1 + 0xc), *(param_2 + 0xc)),  iVar1 == 0 &&\n         ((iVar1 = fcn.00434690(),  iVar1 == 0 && (*(param_1 + 0x18) == *(param_2 + 0x18))))))) &&\n       (*(param_1 + 0x1c) == *(param_2 + 0x1c))) {\n        uVar2 = *(param_1 + 2);\n        if ((uVar2 & 0x400) == 0) {\n            if ((*param_1 != -0x68) && (*(param_1 + 4) != 0)) {\n                if ((*(param_2 + 2) & 0x400) != 0) {\n                    return 2;\n                }\n                if (*(param_2 + 4) == 0) {\n                    return 2;\n                }\n                iVar1 = fcn.0041d27e();\n                if (iVar1 != 0) {\n                    return 2;\n                }\n            }\n        }\n        else {\n            if ((*(param_2 + 2) & 0x400) == 0) {\n                return 2;\n            }\n            if (*(param_1 + 4) != *(param_2 + 4)) {\n                return 2;\n            }\n        }\n        uVar2 = uVar2 & 0x100;\n        if (uVar2 != (*(param_2 + 2) & 0x100)) {\n            return 1;\n        }\n        if ((uVar2 == 0) || (*(param_1 + 0x14) == *(param_2 + 0x14))) {\n            return 0;\n        }\n    }\n    return 2;\n}\n",
        "token_count": 588
    },
    "004202b3": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nuint fcn.004202b3(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    uVar1 = *(in_EAX + 0xc);\n    iVar2 = *(*(in_EAX + 0x10) + 0x60);\n    iVar4 = 0;\n    if (0 < iVar2) {\n        iVar5 = *(*(in_EAX + 0x10) + 0x5c) + 0x10;\n        do {\n            if ((uVar1 <= *(iVar5 + 4)) && (iVar3 = fcn.0041f22c(),  iVar3 == 0)) {\n                return 1;\n            }\n            iVar4 = iVar4 + 1;\n            iVar5 = iVar5 + 0x30;\n        } while (iVar4 < iVar2);\n    }\n    return 0;\n}\n",
        "token_count": 222
    },
    "00420a0d": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid fcn.00420a0d(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EDI;\n    \n    iVar2 = 0;\n    if (0 < *(unaff_EDI + 0x60)) {\n        iVar1 = 0;\n        do {\n            fcn.0041f3d2(*(*(unaff_EDI + 0x5c) + 0x10 + iVar1));\n            iVar2 = iVar2 + 1;\n            iVar1 = iVar1 + 0x30;\n        } while (iVar2 < *(unaff_EDI + 0x60));\n    }\n    if ((*(unaff_EDI + 4) == '\\0') || (**(unaff_EDI + 0x44) == 0x444378)) {\n        fcn.0041b9d3();\n    }\n    fcn.0041c110(*(unaff_EDI + 0x5c));\n    *(unaff_EDI + 0x5c) = 0;\n    *(unaff_EDI + 0x60) = 0;\n    *(unaff_EDI + 0x34) = 0;\n    return;\n}\n",
        "token_count": 268
    },
    "00420a5f": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00420a5f(void)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t unaff_ESI;\n    uint32_t unaff_EDI;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    iVar4 = 0;\n    var_8h = 0;\n    if (0 < *(unaff_ESI + 0x60)) {\n        var_4h = 0;\n        do {\n            iVar2 = *(unaff_ESI + 0x5c) + var_4h;\n            puVar1 = iVar2 + 0x14;\n            if (unaff_EDI < *puVar1 || unaff_EDI == *puVar1) {\n                uVar3 = fcn.0041f2a9(*(iVar2 + 0x10), unaff_EDI);\n                var_8h = var_8h | uVar3;\n            }\n            var_4h = var_4h + 0x30;\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < *(unaff_ESI + 0x60));\n    }\n    return var_8h;\n}\n",
        "token_count": 286
    },
    "0044a2ae": {
        "rules": [
            "calculate modulo 256 via x86 assembly",
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nint32_t fcn.0044a2ae(void)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((0x1a < (in_EAX & 0xff)) || (iVar1 = *((in_EAX & 0xff) * 4 + 0x446dc8),  iVar1 == 0)) {\n        iVar1 = 0x44c85c;\n    }\n    return iVar1;\n}\n",
        "token_count": 101
    },
    "004215c9": {
        "rules": [
            "PEB access/35f28d23090149119036cdb16976bf66"
        ],
        "decompiled_code": "\nvoid fcn.004215c9(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    \n    fcn.0041d7cc();\n    fcn.0041d7e6();\n    fcn.0041d7e6();\n    iVar1 = *unaff_ESI;\n    *(iVar1 + 0x60) = 0;\n    *(iVar1 + 0x61) = 0x2d;\n    *(iVar1 + 0x62) = 0xe2;\n    *(iVar1 + 99) = 0x1d;\n    return;\n}\n",
        "token_count": 138
    },
    "0042bcd7": {
        "rules": [
            "PEB access/35f28d23090149119036cdb16976bf66"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0042bcd7(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EDX;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = (*(in_EAX + 0x18) - in_EDX) * 0x28 + *(in_EAX + 8);\n    piVar3 = NULL;\n    iVar1 = in_EDX * 4;\n    if (*(iVar1 + *(in_EAX + 0x44)) != 0) {\n        fcn.0042a371();\n        *(iVar1 + *(in_EAX + 0x44)) = 0;\n    }\n    iVar2 = fcn.00428dc3(0);\n    if (iVar2 == 0) {\n        piVar3 = *(iVar4 + 4);\n        *(iVar1 + *(in_EAX + 0x44)) = piVar3;\n        fcn.0044b531(piVar3, 0, 0x60);\n        piVar3[3] = arg_ch;\n        piVar3[5] = arg_8h;\n        if (arg_8h != 0) {\n            piVar3[0x15] = *(iVar4 + 4) + 0x60;\n        }\n        if (arg_10h != 0) {\n            iVar1 = *(iVar4 + 4) + arg_8h * 8 + 0x60;\n            *piVar3 = iVar1;\n            fcn.0044b531(iVar1, 0, 0x5a);\n        }\n    }\n    return piVar3;\n}\n",
        "token_count": 420
    },
    "00429829": {
        "rules": [
            "search for credit card data/ac143e9ae29c414184a69c9308e24693",
            "parse credit card information/f44d27b3cce043409e5315cf54d1899b"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00429829(int32_t arg_8h, char *arg_ch, uint arg_10h, uint arg_14h, int32_t *arg_18h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    char cVar2;\n    char *pcVar3;\n    uint arg_ch_00;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_10h = 0;\n    var_4h = 0;\n    var_8h = 1;\n    var_ch = 0x4435dc;\n    if (arg_ch == NULL) {\n        *arg_18h = 0;\n        return 0;\n    }\n    cVar2 = *arg_ch;\n    if (cVar2 == -0x7c) {\n        cVar2 = arg_ch[0x23];\n    }\n    pcVar3 = arg_ch;\n    if (cVar2 == -100) {\n        pcVar3 = *(arg_ch + 8);\n        if ((*pcVar3 == -0x7f) || (*pcVar3 == -0x7e)) {\n            var_8h = -1;\n            cVar2 = *pcVar3;\n            var_ch = 0x44a3c4;\n            goto code_r0x00429890;\n        }\ncode_r0x004298b5:\n        iVar1 = fcn.00429829(arg_8h, *(arg_ch + 8), arg_10h, arg_14h, &var_4h);\n        if (iVar1 == 0) {\n            fcn.004291bb();\n            iVar1 = *(var_4h + 0x10);\n            *(var_4h + 0x10) = -iVar1;\n            *(var_4h + 0x14) = -(*(var_4h + 0x14) + (iVar1 != 0));\n            iVar1 = *(var_4h + 8);\n            *(var_4h + 8) = -iVar1;\n            *(var_4h + 0xc) = -(*(var_4h + 0xc) + (iVar1 != 0));\n            fcn.0042be00(arg_14h);\n        }\n    }\n    else {\ncode_r0x00429890:\n        if (((cVar2 == '^') || (cVar2 == -0x7e)) || (cVar2 == -0x7f)) {\n            var_4h = fcn.0042980e();\n            if (var_4h == 0) {\ncode_r0x004299b2:\n                *(arg_8h + 0x1e) = 1;\n                fcn.0041c16b(arg_8h, var_10h);\n                fcn.00429a4c();\n                *arg_18h = 0;\n                return 7;\n            }\n            if ((*(pcVar3 + 2) & 0x400) == 0) {\n                var_10h = fcn.0041ce3a(0x44a3c8, var_ch, *(pcVar3 + 4));\n                if (var_10h == 0) goto code_r0x004299b2;\n                if (var_4h != 0) {\n                    fcn.004293c1(var_10h, 1);\n                }\n                if (cVar2 == -0x7e) {\n                    *(var_4h + 0x1e) = 2;\n                }\n            }\n            else {\n                fcn.00429280(*(pcVar3 + 4) * var_8h, *(pcVar3 + 4) * var_8h >> 0x20);\n            }\n            if (((cVar2 == -0x7f) || (cVar2 == -0x7e)) && (arg_14h == 'b')) {\n                arg_14h = 99;\n            }\n            fcn.0042be00(arg_14h);\n            if ((*(var_4h + 0x1c) & 0xc) != 0) {\n                *(var_4h + 0x1c) = *(var_4h + 0x1c) & 0xfffd;\n            }\n        }\n        else {\n            arg_ch = pcVar3;\n            if (cVar2 == -100) goto code_r0x004298b5;\n            if (cVar2 != -0x7d) goto code_r0x00429a3d;\n            var_4h = fcn.0042980e();\n            if (var_4h == 0) goto code_r0x004299b2;\n            iVar1 = fcn.0041d157();\n            arg_ch_00 = 0;\n            arg_8h_00 = fcn.0041d801(iVar1 + -1);\n            fcn.004293c1(arg_8h_00, arg_ch_00);\n        }\n    }\n    if (var_4h != 0) {\n        fcn.0042bcab();\n    }\ncode_r0x00429a3d:\n    *arg_18h = var_4h;\n    return 0;\n}\n",
        "token_count": 1181
    },
    "00429b25": {
        "rules": [
            "64-bit execution via heavens gate/41888d14e91b4c9e83f5980fa2a0ad87"
        ],
        "decompiled_code": "\nint32_t fcn.00429b25(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t unaff_ESI;\n    \n    iVar1 = fcn.0041c392();\n    if (iVar1 != 0) {\n        uVar2 = fcn.0041c0f1(iVar1);\n        *(unaff_ESI + 4) = iVar1;\n        *(unaff_ESI + 0x20) = uVar2 / 0x14;\n    }\n    return (-(iVar1 != 0) & 0xfffffff9) + 7;\n}\n",
        "token_count": 139
    },
    "0043095a": {
        "rules": [
            "check for trap flag exception/d5d4160e77a5474aa5157e4631e4f1b3"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043095a(uint *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    char *pcVar1;\n    uint uVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    char *in_ECX;\n    int32_t iVar6;\n    uint var_4h;\n    \n    iVar6 = in_EAX * 0x14;\n    pcVar1 = *(iVar6 + *(arg_ch + 0xc));\n    uVar2 = *arg_8h;\n    if ((*pcVar1 == -0x68) || (*in_ECX == 'G')) {\n        if (((*(pcVar1 + 2) & 0x400) == 0) && (iVar6 = *(pcVar1 + 4),  iVar6 != 0)) {\n            *(pcVar1 + 4) = 0;\n            iVar4 = fcn.0043238b(uVar2, pcVar1, 0);\n            *(pcVar1 + 4) = iVar6;\n            if (iVar4 == 0) {\n                return;\n            }\n            *(iVar4 + 0x22) = *(iVar4 + 0x22) | 1;\n            uVar3 = fcn.0041c430(iVar6);\n            *(iVar4 + 4) = uVar3;\n        }\n        else {\n            iVar4 = fcn.0043238b(uVar2, pcVar1, 0);\n            if (iVar4 == 0) {\n                return;\n            }\n        }\n    }\n    else {\n        uVar3 = fcn.0043238b(uVar2, pcVar1, 0);\n        iVar4 = fcn.00431e0d(0x18, uVar3);\n        if (iVar4 == 0) {\n            return;\n        }\n        if (*(iVar6 + 0x10 + *(arg_ch + 0xc)) == 0) {\n            piVar5 = arg_8h + 0x75;\n            *piVar5 = *piVar5 + 1;\n            *(iVar6 + 0x10 + *(arg_ch + 0xc)) = *piVar5;\n        }\n        *(iVar4 + 0x18) = *(iVar6 + 0x10 + *(arg_ch + 0xc));\n    }\n    if ((*(arg_10h + 2) & 0x100) != 0) {\n        uVar3 = *(arg_10h + 0x14);\n        *(iVar4 + 2) = *(iVar4 + 2) | 0x100;\n        *(iVar4 + 0x14) = uVar3;\n    }\n    *(arg_10h + 2) = *(arg_10h + 2) | 0x4000;\n    fcn.00432063(uVar2, arg_10h);\n    fcn.0044b575(arg_10h, iVar4, 0x30);\n    fcn.0041c16b(uVar2, iVar4);\n    return;\n}\n",
        "token_count": 698
    },
    "00431986": {
        "rules": [
            "check for trap flag exception/d5d4160e77a5474aa5157e4631e4f1b3"
        ],
        "decompiled_code": "\nvoid fcn.00431986(void)\n\n{\n    uint uVar1;\n    uint arg_8h;\n    int32_t iVar2;\n    int32_t unaff_EBX;\n    uint *unaff_ESI;\n    uint var_4h;\n    \n    uVar1 = *unaff_ESI;\n    arg_8h = fcn.00436ac6();\n    iVar2 = fcn.00437264(arg_8h);\n    if ((unaff_EBX != 0) && (iVar2 != 0)) {\n        *(unaff_EBX + 2) = *(unaff_EBX + 2) | 0x100;\n        *(unaff_EBX + 0x14) = iVar2;\n    }\n    fcn.0041c16b(uVar1, arg_8h);\n    return;\n}\n",
        "token_count": 182
    },
    "00436454": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00436454(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t arg_8h;\n    uint uVar2;\n    uint arg_20h;\n    int32_t *var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = *in_EAX;\n    if (*(iVar1 + 0x1e) != '\\0') {\n        return;\n    }\n    if (*(in_EAX + 0x13) != '\\0') {\n        return;\n    }\n    if (in_EAX[0x10] != 0) {\n        return;\n    }\n    arg_8h = fcn.0043fe38();\n    if (arg_8h != 0) {\n        fcn.00429bbf(arg_8h, 6);\n        if (0 < in_EAX[0x57]) {\n            fcn.00429e14();\n            var_8h = 0;\n            var_ch = 1;\n            if (0 < *(iVar1 + 4)) {\n                var_10h = in_EAX + 0x58;\n                do {\n                    if ((in_EAX[0x55] & var_ch) != 0) {\n                        fcn.0042a0d8();\n                        fcn.00429bea(0x22, var_8h, (in_EAX[0x54] & var_ch) != 0);\n                        if (*(iVar1 + 0x7c) == '\\0') {\n                            fcn.00429bea(0x25, var_8h, *var_10h);\n                        }\n                    }\n                    var_ch = var_ch << 1;\n                    var_8h = var_8h + 1;\n                    var_10h = var_10h + 1;\n                } while (var_8h < *(iVar1 + 4));\n            }\n            var_ch = 0;\n            if (0 < in_EAX[0x84]) {\n                do {\n                    arg_20h = 0xfffffff6;\n                    uVar2 = fcn.0044394b(iVar1);\n                    fcn.00429c01(arg_8h, 0x7c, 0, 0, 0, uVar2, arg_20h);\n                    var_ch = var_ch + 1;\n                } while (var_ch < in_EAX[0x84]);\n            }\n            in_EAX[0x84] = 0;\n            fcn.00429b6c(1, 0, in_EAX[0x57], 0);\n        }\n        if ((in_EAX[0x10] == 0) && (*(iVar1 + 0x1e) == '\\0')) {\n            if ((in_EAX[0x66] != 0) && (in_EAX[0x11] == 0)) {\n                in_EAX[0x11] = 1;\n            }\n            if ((*(in_EAX + 0x56) == '\\0') || (*(in_EAX + 0x159) == '\\0')) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = 1;\n            }\n            fcn.0042a187(in_EAX[0x70], in_EAX[0x12], in_EAX[0x11], in_EAX[0x67], *(in_EAX + 0x78), uVar2);\n            in_EAX[1] = 0x65;\n            *(in_EAX + 4) = 0;\n            goto code_r0x004365f0;\n        }\n    }\n    in_EAX[1] = 1;\ncode_r0x004365f0:\n    in_EAX[0x11] = 0;\n    in_EAX[0x12] = 0;\n    in_EAX[0x13] = 0;\n    in_EAX[0x70] = 0;\n    in_EAX[0x55] = 0;\n    in_EAX[0x57] = 0;\n    return;\n}\n",
        "token_count": 922
    },
    "0044b90d": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nint64_t __fastcall fcn.0044b90d(uint8_t param_1, int32_t param_2)\n\n{\n    uint32_t in_EAX;\n    \n    if (0x3f < param_1) {\n        return 0;\n    }\n    if (param_1 < 0x20) {\n        return CONCAT44(param_2 << (param_1 & 0x1f) | in_EAX >> 0x20 - (param_1 & 0x1f), in_EAX << (param_1 & 0x1f));\n    }\n    return (in_EAX << (param_1 & 0x1f)) << 0x20;\n}\n",
        "token_count": 153
    },
    "00463549": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nvoid fcn.00463549(void)\n\n{\n    uchar *unaff_ESI;\n    \n    *(unaff_ESI + 0x200) = 0;\n    *(unaff_ESI + 0x208) = 0;\n    *(unaff_ESI + 0x204) = 0;\n    *unaff_ESI = 99;\n    unaff_ESI[1] = 0x72;\n    unaff_ESI[0xb] = 0;\n    unaff_ESI[4] = 0x74;\n    unaff_ESI[3] = 0x70;\n    unaff_ESI[2] = 0x79;\n    unaff_ESI[7] = 0x2e;\n    unaff_ESI[5] = 0x33;\n    unaff_ESI[10] = 0x6c;\n    unaff_ESI[6] = 0x32;\n    unaff_ESI[8] = 100;\n    unaff_ESI[9] = 0x6c;\n    fcn.004703fa(unaff_ESI + 0xff, 0x412f90);\n    unaff_ESI[0x111] = 0;\n    unaff_ESI[0x102] = 0x70;\n    unaff_ESI[0x103] = 0x74;\n    unaff_ESI[0x104] = 0x55;\n    unaff_ESI[0x105] = 0x6e;\n    unaff_ESI[0x106] = 0x70;\n    unaff_ESI[0x107] = 0x72;\n    unaff_ESI[0x108] = 0x6f;\n    unaff_ESI[0x109] = 0x74;\n    unaff_ESI[0x10a] = 0x65;\n    unaff_ESI[0x10b] = 99;\n    unaff_ESI[0x10c] = 0x74;\n    unaff_ESI[0x10d] = 0x44;\n    unaff_ESI[0x10e] = 0x61;\n    unaff_ESI[0x10f] = 0x74;\n    unaff_ESI[0x110] = 0x61;\n    return;\n}\n",
        "token_count": 519
    },
    "0040a00d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a00d(void)\n\n{\n    char cVar1;\n    ushort *unaff_EBX;\n    int32_t iVar2;\n    char *unaff_EDI;\n    uint var_4h;\n    \n    iVar2 = 0;\n    *unaff_EBX = 0;\n    cVar1 = *unaff_EDI;\n    while (cVar1 != '\\0') {\n        fcn.0044b525();\n        iVar2 = iVar2 + 1;\n        cVar1 = unaff_EDI[iVar2];\n    }\n    return;\n}\n",
        "token_count": 126
    },
    "0040ab13": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040ab13(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    ushort *unaff_EDI;\n    uint var_20ch;\n    \n    var_20ch._0_2_ = 0;\n    fcn.0044b531(&var_20ch + 2, 0, 0x208);\n    fcn.0041b27d();\n    iVar1 = fcn.0044b58d(0x443518);\n    iVar2 = fcn.0044b58d(&var_20ch);\n    if (iVar1 + 1 + iVar2 < 0x104) {\n        fcn.004106b6(&var_20ch, 0x443518);\n    }\n    else {\n        *unaff_EDI = 0;\n    }\n    iVar1 = fcn.00410555();\n    if (iVar1 == 0) {\n        *unaff_EDI = 0;\n    }\n    return;\n}\n",
        "token_count": 229
    },
    "0040ab97": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040ab97(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_ESI;\n    \n    iVar1 = *(param_1 + 0x14);\n    if (iVar1 + unaff_ESI < *(param_1 + 0x10)) {\n        iVar2 = *(param_1 + 4) + iVar1;\n    }\n    else {\n        iVar2 = 0;\n    }\n    *(param_1 + 0x14) = iVar1 + unaff_ESI;\n    return iVar2;\n}\n",
        "token_count": 137
    },
    "0040abb1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040abb1(uint param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(param_2 + 0x28) * param_3 + *(param_2 + 0x20);\n    if ((*(param_2 + 0x28) + iVar2 < *(param_2 + 0x10)) && (*(param_2 + 4) + iVar2 != 0)) {\n        uVar1 = fcn.0040abdd();\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 153
    },
    "0040b7e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b7e4(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *unaff_EBX;\n    bool bVar2;\n    ushort var_1ch;\n    uint var_1ah;\n    uint var_16h;\n    uint uStack22;\n    ushort uStack18;\n    uint32_t var_ch;\n    int32_t var_8h;\n    \n    if (arg_8h == 0) {\n        unaff_EBX[1] = 0;\n        *unaff_EBX = 0;\n    }\n    uStack22 = 0;\n    uStack18 = 0;\n    var_1ch = 0x7b2;\n    var_16h = 1;\n    var_1ah = 1;\n    (*_fcn.004430e0)(&var_1ch, &var_ch);\n    uVar1 = arg_8h * 10000000;\n    bVar2 = CARRY4(var_ch, uVar1);\n    var_ch = var_ch + uVar1;\n    var_8h = var_8h + (arg_8h * 10000000 >> 0x20) + bVar2;\n    (*_fcn.004430e8)(&var_ch);\n    return;\n}\n",
        "token_count": 288
    },
    "0040bdba": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.0040bdba(void)\n\n{\n    int32_t in_EAX;\n    int32_t *unaff_ESI;\n    \n    (**(*unaff_ESI + 4))(0x44366c, in_EAX + 4, 0);\n    (**(*unaff_ESI + 8))(0x443688, in_EAX + 0xc, 0);\n    (**(*unaff_ESI + 4))(0x4436a8, in_EAX + 8, 1);\n    (**(*unaff_ESI + 4))(0x4436c0, in_EAX + 0x10, 0);\n    (**(*unaff_ESI + 4))(0x4436e0, in_EAX + 0x14, 1);\n    (**(*unaff_ESI + 4))(0x443700, in_EAX + 0x18, 1);\n    (**(*unaff_ESI + 4))(0x44372c, in_EAX + 0x20, 1);\n    (**(*unaff_ESI + 4))(0x443754, in_EAX + 0x1c, 1);\n    (**(*unaff_ESI + 4))(0x44377c, in_EAX + 0x24, 1);\n    (**(*unaff_ESI + 4))(0x4437a4, in_EAX + 0x28, 1);\n    (**(*unaff_ESI + 4))(0x4437d4, in_EAX + 0x2c, 0);\n    (**(*unaff_ESI + 4))(0x443804, in_EAX + 0x30, 0);\n    (**(*unaff_ESI + 4))(0x443834, in_EAX + 0x648, 0);\n    (**(*unaff_ESI + 4))(0x443864, in_EAX + 0x858, 0);\n    (**(*unaff_ESI + 0x10))(0x443890, in_EAX + 0x34, 0x4434fc, 0x104);\n    (**(*unaff_ESI + 0x10))(0x4438bc, in_EAX + 0x23e, 0x4434fc, 0x104);\n    (**(*unaff_ESI + 0x10))(0x4438e8, in_EAX + 0x64c, 0x4434fc, 0x104);\n    (**(*unaff_ESI + 0x10))(0x443910, in_EAX + 0x85c, 0x4434fc, 0x104);\n    return;\n}\n",
        "token_count": 599
    },
    "0040c053": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c053(uint arg_8h, int32_t arg_ch)\n\n{\n    uint arg_10h;\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint var_40h;\n    \n    if (arg_ch == 8) {\n        puVar2 = 0x443934;\n        puVar3 = &var_40h;\n        for (iVar1 = 0xf; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar3 = *puVar2;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n        *puVar3 = *puVar2;\n        arg_10h = fcn.0044b52b(&var_40h);\n        fcn.00410bbf(arg_8h, &var_40h, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 216
    },
    "0040c08e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040c08e(uint arg_8h, uint arg_ch)\n\n{\n    uchar uStack8200;\n    uchar auStack8199 [8131];\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uchar *puStack56;\n    uint *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uchar *puStack24;\n    uint uStack20;\n    uint uStack16;\n    uint var_4h;\n    \n    var_4h = 0x40c09b;\n    fcn.0044ba9d();\n    uStack16 = 0x1fff;\n    puStack24 = &stack0xffffdff9;\n    uStack20 = 0;\n    uStack8200 = 0;\n    puStack28 = 0x40c0b8;\n    fcn.0044b531();\n    uStack16 = 0;\n    uStack20 = 0;\n    puStack24 = 0x1fff;\n    puStack28 = &stack0xffffdff8;\n    uStack32 = 0xffffffff;\n    uStack36 = arg_ch;\n    uStack40 = 0;\n    uStack44 = 0xfde9;\n    uStack48 = 0x40c0d6;\n    (*_fcn.004430fc)();\n    uStack48 = 0;\n    puStack52 = &fcn.0040c08e::var_4h;\n    puStack56 = &stack0xffffdff8;\n    puStack60 = 0x40c0e7;\n    puStack56 = fcn.0044b52b();\n    puStack60 = &stack0xffffdff8;\n    uStack64 = arg_8h;\n    uStack68 = 0x40c0f9;\n    (*_fcn.004430f8)();\n    return;\n}\n",
        "token_count": 455
    },
    "0040c217": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040c217(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int16_t in_stack_00000a78;\n    int16_t in_stack_00000c78;\n    \n    fcn.0044ba9d();\n    fcn.0040bb5d();\n    iVar5 = 0x20;\n    puVar3 = *0x450da4 + 0x14;\n    puVar4 = &stack0x00000004;\n    for (iVar2 = 0x295; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    fcn.0040b785();\n    fcn.00418d6f();\n    fcn.00419175(&stack0x00000a6c);\n    fcn.00418f5e();\n    iVar2 = 0;\n    if (0 < iVar5) {\n        do {\n            fcn.0040bb34();\n            fcn.0044b531();\n            fcn.0044b575();\n            if ((in_stack_00000c78 != 0) || (in_stack_00000a78 != 0)) {\n                iVar1 = fcn.0044b5a5();\n                if (iVar1 != 0) {\n                    fcn.0040bba6(&stack0x00000c78);\n                    fcn.0044b581();\n                }\n                fcn.0041491a();\n            }\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < iVar5);\n    }\n    fcn.0040b785();\n    return;\n}\n",
        "token_count": 414
    },
    "0040c692": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c692(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_200h;\n    uint var_1fch;\n    \n    var_200h = 0x2f;\n    fcn.0044b531(&var_1fch, 0, 0x1fc);\n    fcn.0044b519(&var_200h, arg_8h);\n    iVar1 = fcn.00411378(&var_200h);\n    if (iVar1 < 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.00411368();\n    }\n    return uVar2;\n}\n",
        "token_count": 162
    },
    "0040c9f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c9f0(uint arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_3ch;\n    uint var_1ch;\n    \n    iVar1 = fcn.0040cb3e(arg_8h, arg_ch, 0);\n    if (iVar1 != 0) {\n        *arg_10h = var_1ch;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 111
    },
    "0040ccaf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040ccaf(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h;\n    \n    iVar1 = (**0x44327c)();\n    arg_8h = 1;\n    if (1 < iVar1) {\n        do {\n            iVar2 = fcn.0040c9d8();\n            if (iVar2 != 0) {\n                fcn.0040cb94(arg_8h, arg_8h + -1);\n            }\n            arg_8h = arg_8h + 1;\n        } while (arg_8h < iVar1);\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "0040ccf2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040ccf2(void)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    int32_t arg_ch;\n    \n    arg_8h = (**0x44327c)();\n    while (arg_ch = arg_8h,  arg_8h = arg_ch + -1,  -1 < arg_8h) {\n        iVar1 = fcn.0040c9d8();\n        if (iVar1 != 0) {\n            fcn.0040cb94(arg_8h, arg_ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "0040cd2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040cd2c(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_ch;\n    uint unaff_EDI;\n    \n    arg_ch = 0;\n    iVar1 = (**0x44327c)(param_1, 0x1004, 0);\n    if (0 < iVar1) {\n        do {\n            iVar2 = fcn.0040c9d8(0, arg_ch, 2);\n            if (iVar2 != 0) {\n                fcn.0040ce81(0, arg_ch, unaff_EDI);\n            }\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < iVar1);\n    }\n    return;\n}\n",
        "token_count": 167
    },
    "0040cd73": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040cd73(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    \n    fcn.0044b531(&var_30h, 0, 0x2c);\n    var_30h = 0;\n    var_2ch = 0;\n    var_14h = 0;\n    var_34h = arg_10h;\n    var_20h = arg_14h;\n    var_18h = arg_18h;\n    (**0x44327c)(arg_8h, 0x120c, arg_ch, &var_34h);\n    return;\n}\n",
        "token_count": 198
    },
    "0040cef9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040cef9(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040ce64(param_1, param_2);\n    fcn.0040ce81(param_1, param_2, iVar1 == 0);\n    return;\n}\n",
        "token_count": 73
    },
    "0040d767": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d767(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    ushort var_818h;\n    uint var_816h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        (**(*in_ECX + 4))(0);\n        fcn.0040d939();\n        if (arg_ch == 0x402) {\n            var_818h = 0;\n            fcn.0044b531(&var_816h, 0, 0x7fe);\n            var_8h = *0x447ff0;\n            var_4h = *0x447ff4;\n            var_18h = fcn.00413002();\n            var_14h = 0x447ff8;\n            var_10h = fcn.00413002();\n            var_ch = 0x443cb0;\n            fcn.00410d0b(&var_18h, 2);\n            uVar1 = fcn.00413002();\n            iVar2 = fcn.00410ac3(&var_818h, uVar1, &var_8h);\n            if (iVar2 == 0) goto code_r0x0040d8be;\n            (**(*in_ECX + 4))(1);\n        }\n        if (arg_ch == 0x3f7) {\n            uVar1 = fcn.00413002();\n            iVar2 = fcn.0041b3d9(in_ECX[4], uVar1);\n            if (iVar2 == 0) goto code_r0x0040d8be;\n            (**(*in_ECX + 4))(1);\n        }\n        if (arg_ch == 0x3fa) {\n            uVar1 = fcn.00413002();\n            iVar2 = fcn.0041b3d9(in_ECX[4], uVar1);\n            if (iVar2 == 0) goto code_r0x0040d8be;\n            (**(*in_ECX + 4))(1);\n        }\n        if (arg_ch == 0x3fe) {\n            uVar1 = fcn.00413002();\n            iVar2 = fcn.0041b3d9(in_ECX[4], uVar1);\n            if (iVar2 != 0) {\n                (**(*in_ECX + 4))(1);\n            }\n        }\n    }\ncode_r0x0040d8be:\n    fcn.0040a66a(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 621
    },
    "0040db08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040db08(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_ESI;\n    int32_t var_4h;\n    \n    var_4h = (*_fcn.00443268)(*(unaff_ESI + 0x10), 0x3e9);\n    iVar1 = (*_fcn.0044325c)(*(unaff_ESI + 0x10), 0x3ed, 0, 0);\n    if (iVar1 - 1U < 999) {\n        iVar2 = fcn.0040ce30(var_4h, 0, &var_4h);\n        if (iVar2 != 0) {\n            *(**(unaff_ESI + 0x14) + var_4h * 4) = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "0040dbd4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040dbd4(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_ch;\n    int32_t iVar4;\n    int16_t *piVar5;\n    ushort var_244h;\n    uint var_242h;\n    uint var_44h;\n    ushort *var_38h;\n    uint var_34h;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = (*_fcn.00443268)(*(arg_8h + 0x10), 0x3e9);\n    pcVar1 = *0x44327c;\n    (**0x44327c)(var_4h, 0x1009, 0, 0);\n    (*pcVar1)(var_4h, 0x1036, 0, 0x26);\n    do {\n        iVar2 = (*pcVar1)(var_4h, 0x101c, 0, 0);\n    } while (iVar2 != 0);\n    fcn.0040ca21(var_4h, 0, 0, 200);\n    var_14h = (*(arg_8h + 0x14))[1];\n    iVar2 = **(arg_8h + 0x14);\n    var_ch = 0;\n    if (0 < var_14h) {\n        do {\n            var_8h = 0;\n            var_10h = 0;\n            do {\n                iVar4 = var_8h * 4;\n                if (*(iVar2 + 2 + iVar4) == var_ch) {\n                    var_244h = 0;\n                    fcn.0044b531(&var_242h, 0, 0x1fe);\n                    var_38h = &var_244h;\n                    var_44h = 4;\n                    var_34h = 0xff;\n                    iVar3 = (**0x44327c)(*(*(arg_8h + 0x14) + 8), 0x105f, var_8h, &var_44h);\n                    if (iVar3 != 0) {\n                        arg_ch = fcn.0040caa4(var_4h, 0, 0, 0, var_8h, 0);\n                        piVar5 = iVar4 + iVar2;\n                        var_18h = *piVar5;\n                        fcn.0040ce81(var_4h, arg_ch, 0 < var_18h);\n                        if (var_18h == 0) {\n                            *piVar5 = *(*(arg_8h + 0x18) + 0xc + var_10h);\n                        }\n                    }\n                }\n                var_8h = var_8h + 1;\n                var_10h = var_10h + 0x14;\n            } while (var_8h < var_14h);\n            var_ch = var_ch + 1;\n        } while (var_ch < var_14h);\n    }\n    fcn.0040c9b2(var_4h, 0, 2);\n    (*_fcn.004432a4)(var_4h);\n    return;\n}\n",
        "token_count": 760
    },
    "0040e156": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040e156(uint param_1, int32_t param_2)\n\n{\n    uint32_t arg_10h;\n    int64_t iVar1;\n    uint arg_ch;\n    uint *unaff_ESI;\n    \n    arg_10h = *(unaff_ESI[0x106] + 0xec);\n    iVar1 = (param_2 + 1) * arg_10h;\n    arg_ch = iVar1 >> 0x20;\n    (*_fcn.00443110)(*unaff_ESI, iVar1, arg_ch, 0, 0);\n    fcn.00410ba0(*unaff_ESI, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 155
    },
    "0040e7d1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040e7d1(void)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    int32_t iVar2;\n    \n    *(in_EAX + 4) = 0;\n    *(in_EAX + 8) = 0;\n    *(in_EAX + 0xc) = 5000;\n    *(in_EAX + 0x14) = 0;\n    *(in_EAX + 0x23c) = 0x20;\n    *(in_EAX + 0x234) = 0;\n    *(in_EAX + 0x240) = 0;\n    *(in_EAX + 0x238) = 0;\n    puVar1 = in_EAX + 0x24c;\n    iVar2 = 0x3f;\n    do {\n        *puVar1 = 0;\n        puVar1[1] = 0;\n        puVar1[2] = 5000;\n        puVar1 = puVar1 + 3;\n        iVar2 = iVar2 + -1;\n    } while (-1 < iVar2);\n    return;\n}\n",
        "token_count": 251
    },
    "0040e838": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040e838(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0x3f;\n    do {\n        fcn.00411611();\n        iVar1 = iVar1 + -1;\n    } while (-1 < iVar1);\n    return;\n}\n",
        "token_count": 64
    },
    "0040e95e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040e987)\n\nbool __cdecl fcn.0040e95e(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.0040e8f4();\n    if (iVar1 != 0) {\n        fcn.00411069(0x4434fc);\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 103
    },
    "0040ea9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040ea9c(void)\n\n{\n    uint uVar1;\n    int32_t unaff_ESI;\n    \n    if (*(unaff_ESI + 0x54c) < 0x40) {\n        fcn.004115f8();\n        uVar1 = *((*(unaff_ESI + 0x54c) + 0x31) * 0xc + unaff_ESI);\n        *(unaff_ESI + 0x54c) = *(unaff_ESI + 0x54c) + 1;\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 137
    },
    "0040eace": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040eace(int32_t arg_8h, uint32_t arg_ch, int32_t *arg_10h, uint32_t *arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    \n    var_ch = 0;\n    var_30h = 0;\n    var_40h = 0;\n    var_3ch = 0;\n    var_38h = 0;\n    var_34h._0_2_ = 0;\n    var_34h._2_2_ = 0;\n    var_1ch = 0;\n    var_18h = 0;\n    var_14h = 5000;\n    fcn.004115f8();\n    var_20h = 0;\n    var_28h = 0;\n    var_24h = 0;\n    var_2ch = arg_8h;\n    var_8h = 0;\n    var_10h = 0;\n    do {\n        while( true ) {\n            do {\n                while( true ) {\n                    iVar2 = fcn.0040e1a7(&var_2ch, &var_40h, 1);\n                    iVar3 = var_3ch;\n                    if ((iVar2 == 0) || ((var_8h = var_8h + 1,  1000 < var_8h && (var_2ch == arg_8h))))\n                    goto code_r0x0040ecf1;\n                    if (var_24h != 0) break;\n                    var_10h = fcn.00410e7f();\n                }\n            } while (var_40h - var_34h._2_2_ < 4);\n            if ((3 < var_34h) || (uVar1 = var_10h,  var_34h != 0)) {\n                uVar1 = fcn.00410e7f();\n            }\n            if ((*(var_1ch + 0x24) & 4) == 0) break;\n            if (arg_ch <= uVar1) {\n                var_ch = fcn.0040eace(*(var_34h._2_2_ + var_34h + iVar3), arg_ch, arg_10h, arg_14h);\ncode_r0x0040ecf1:\n                fcn.00411611();\n                return var_ch;\n            }\n        }\n        if (0xff < arg_ch) {\n            uVar1 = uVar1 | arg_ch & 0xffffff00;\n        }\n    } while (uVar1 != arg_ch);\n    uVar1 = *(var_34h._2_2_ + 4 + var_34h + iVar3);\n    iVar3 = fcn.0040e1a7(&var_2ch, &var_40h, 0);\n    if (iVar3 != 0) {\n        uVar4 = (var_40h - var_34h) - var_34h._2_2_;\n        iVar3 = fcn.0040ea9c();\n        if (iVar3 != 0) {\n            fcn.0044b575(iVar3, var_34h._2_2_ + var_34h + var_3ch, uVar4);\n            while (((uVar4 < uVar1 && (iVar2 = fcn.0040e1a7(&var_2ch, &var_40h, 0),  iVar2 != 0)) &&\n                   (uVar4 = uVar4 + ((var_40h - var_34h) - var_34h._2_2_),  uVar4 <= uVar1))) {\n                fcn.0044b575();\n            }\n            *arg_10h = iVar3;\n            *arg_14h = uVar1;\n            var_ch = 1;\n        }\n    }\n    goto code_r0x0040ecf1;\n}\n",
        "token_count": 1016
    },
    "0040f34b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040f34b(int32_t *param_1)\n\n{\n    int32_t in_EAX;\n    \n    if ((-1 < in_EAX) && (in_EAX < param_1[3])) {\n        return in_EAX * 0x220 + *param_1;\n    }\n    return 0;\n}\n",
        "token_count": 79
    },
    "0040f3b9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040f3b9(int32_t *param_1)\n\n{\n    int32_t in_EAX;\n    \n    if ((-1 < in_EAX) && (in_EAX < param_1[3])) {\n        return in_EAX * 0x330 + *param_1;\n    }\n    return 0;\n}\n",
        "token_count": 80
    },
    "0040f3ce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040f3ce(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *unaff_EDI;\n    uint var_464h;\n    uint var_460h;\n    uint var_450h;\n    uint var_44ch;\n    uint var_214h;\n    \n    var_214h._0_2_ = 0;\n    fcn.0044b531(&var_214h + 2, 0, 0x208);\n    iVar1 = fcn.0044b58d(arg_8h);\n    iVar2 = fcn.0044b58d(0x44803c);\n    if (iVar1 + 1 + iVar2 < 0x104) {\n        fcn.004106b6(arg_8h, 0x44803c);\n    }\n    else {\n        var_214h._0_2_ = 0;\n    }\n    iVar1 = fcn.00410555(&var_214h);\n    if (iVar1 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        if (unaff_EDI != NULL) {\n            var_464h = 0;\n            fcn.0044b531(&var_460h, 0, 0x24c);\n            fcn.00410e1b(&var_214h, &var_464h);\n            *unaff_EDI = var_450h;\n            unaff_EDI[1] = var_44ch;\n        }\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 375
    },
    "0040f85c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f85c(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t extraout_ECX;\n    uchar auStackY10772 [1024];\n    uchar auStackY9748 [2048];\n    uint var_1e10h;\n    uint var_1610h;\n    uint var_1210h;\n    uint var_e10h;\n    uint var_c06h;\n    uint var_804h;\n    uchar var_800h;\n    uint var_7ffh;\n    uchar var_400h;\n    uint var_3ffh;\n    uint uStackY88;\n    uchar *puStackY84;\n    uint uStackY80;\n    uint uStackY76;\n    uchar *puStackY72;\n    uint uStackY68;\n    uint *puStackY64;\n    uint uStackY60;\n    uint *puStackY56;\n    int32_t iStackY52;\n    uint *puStackY48;\n    int32_t iStackY44;\n    uint *puStackY40;\n    int32_t iStackY36;\n    \n    fcn.0044ba9d();\n    var_800h = 0;\n    fcn.0044b531();\n    puStackY40 = &fcn.0040f85c::var_3ffh;\n    iStackY36 = 0;\n    var_400h = 0;\n    iStackY44 = 0x40f89e;\n    fcn.0044b531();\n    cVar1 = *(extraout_ECX + 0x1000);\n    fcn.0044b5c9();\n    fcn.0040f744(arg_ch, &stack0xfffff7fc);\n    iStackY36 = 0x40f8ea;\n    fcn.0040f744(arg_ch, &stack0xfffffbfc);\n    iStackY36 = extraout_ECX + 0xc00;\n    puStackY40 = &fcn.0040f85c::var_1610h;\n    iStackY44 = 0x40f8fd;\n    fcn.0044b5c9();\n    iStackY44 = (cVar1 == '*') + 0x1000 + extraout_ECX;\n    puStackY48 = &fcn.0040f85c::var_1210h;\n    iStackY52 = 0x40f911;\n    fcn.0044b5c9();\n    iStackY52 = extraout_ECX + 0x1400;\n    puStackY56 = &fcn.0040f85c::var_c06h;\n    uStackY60 = 0x40f924;\n    fcn.0044b5c9();\n    uStackY60 = arg_10h;\n    puStackY64 = &fcn.0040f85c::var_e10h;\n    uStackY68 = 0x40f933;\n    fcn.0044b56f();\n    pcVar2 = *0x443120;\n    iStackY36 = 0x3ff;\n    puStackY40 = &stack0xffffd9ec;\n    iStackY44 = 0xffffffff;\n    puStackY48 = &stack0xfffff7fc;\n    iStackY52 = 0;\n    puStackY56 = 0xfde9;\n    uStackY60 = 0x40f957;\n    (**0x443120)();\n    uStackY60 = 0x3ff;\n    puStackY64 = &fcn.0040f85c::var_1e10h;\n    uStackY68 = 0xffffffff;\n    puStackY72 = &stack0xfffffbfc;\n    uStackY76 = 0;\n    uStackY80 = 0xfde9;\n    puStackY84 = 0x40f96d;\n    (*pcVar2)();\n    puStackY84 = &stack0xffffd5ec;\n    var_804h = arg_14h;\n    uStackY88 = 0x40f984;\n    (***arg_8h)();\n    return;\n}\n",
        "token_count": 933
    },
    "0040f98b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040f98b(code *arg_8h, uint arg_ch, uint arg_10h, code *arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    uchar uStackY8268;\n    uchar auStackY8267 [1023];\n    uint var_1c48h;\n    uint var_1848h;\n    uint var_1448h;\n    uint var_1048h;\n    uint var_c48h;\n    uchar var_848h;\n    uint var_847h;\n    uchar var_448h;\n    uint var_447h;\n    uint uStackY88;\n    uint uStackY84;\n    uint *puStackY80;\n    uint *puStackY76;\n    uchar *var_44h;\n    code *var_40h;\n    code *var_3ch;\n    code *var_38h;\n    uint uStackY56;\n    code *pcStackY52;\n    uint uStackY48;\n    code *var_28h;\n    code *var_24h;\n    code *pcStackY36;\n    uint *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    code *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    code *var_4h;\n    \n    var_4h = 0x40f998;\n    fcn.0044ba9d();\n    var_10h = arg_14h;\n    var_1ch = NULL;\n    var_14h = 0x40f9ab;\n    var_ch = unaff_EDI;\n    var_8h = unaff_ESI;\n    iVar1 = fcn.0044a982(arg_14h);\n    if (iVar1 != 0) {\n        var_14h = 0x3ff;\n        var_1ch = &fcn.0040f98b::var_847h;\n        var_18h = NULL;\n        var_4h = NULL;\n        var_848h = 0;\n        pcStackY36 = 0x40f9cf;\n        fcn.0044b531();\n        var_14h = &stack0xfffff7b4;\n        var_18h = arg_10h;\n        var_1ch = 0x40f9e1;\n        fcn.00410dcd();\n        if (var_40h != NULL) {\n            var_14h = &fcn.0040f98b::var_4h;\n            var_18h = &stack0xfffff7b4;\n            var_1ch = 0x40f9f6;\n            (*var_40h)();\n        }\n        if (var_4h != NULL) {\n            if (var_3ch != NULL) {\n                var_14h = &fcn.0040f98b::var_44h;\n                var_18h = &fcn.0040f98b::arg_14h;\n                var_1ch = 0xffffffff;\n                pcStackY36 = 0x4481a0;\n                var_24h = var_4h;\n                var_28h = 0x40fa1b;\n                (*var_3ch)();\n            }\n            while( true ) {\n                if (var_38h == NULL) {\n                    iVar1 = 0xffff;\n                }\n                else {\n                    var_14h = arg_14h;\n                    var_18h = 0x40fa29;\n                    iVar1 = (*var_38h)();\n                }\n                if (iVar1 != 100) break;\n                var_14h = 0x3ff;\n                var_1ch = &stack0xffffdfb5;\n                var_18h = NULL;\n                uStackY8268 = 0;\n                pcStackY36 = 0x40fa4e;\n                fcn.0044b531();\n                var_14h = 0x1400;\n                var_1ch = &fcn.0040f98b::var_1c48h;\n                var_18h = NULL;\n                pcStackY36 = 0x40fa63;\n                fcn.0044b531();\n                var_14h = 0x1;\n                var_18h = arg_14h;\n                var_1ch = 0x40fa73;\n                iVar1 = fcn.0044ab79();\n                var_1ch = 0x6;\n                pcStackY36 = arg_14h;\n                var_24h = 0x40fa82;\n                var_18h = fcn.0044ab79();\n                var_24h = 0x7;\n                var_28h = arg_14h;\n                uStackY48 = 0x40fa92;\n                var_14h = fcn.0044ab79();\n                uStackY48 = 4;\n                pcStackY52 = arg_14h;\n                uStackY56 = 0x40faa2;\n                var_10h = fcn.0044ab79();\n                uStackY56 = 5;\n                var_38h = arg_14h;\n                var_3ch = 0x40fab2;\n                var_ch = fcn.0044ab79();\n                var_3ch = 0x2;\n                var_40h = arg_14h;\n                var_44h = 0x40fac2;\n                var_8h = fcn.0044ab79();\n                if (iVar1 != 0) {\n                    puStackY76 = &stack0xffffdfb4;\n                    puStackY80 = 0x40fad6;\n                    var_44h = iVar1;\n                    fcn.0044b5c9();\n                }\n                if (var_18h != NULL) {\n                    var_44h = var_18h;\n                    puStackY76 = &fcn.0040f98b::var_1c48h;\n                    puStackY80 = 0x40faec;\n                    fcn.0044b5c9();\n                }\n                if (var_14h != NULL) {\n                    var_44h = var_14h;\n                    puStackY76 = &fcn.0040f98b::var_1848h;\n                    puStackY80 = 0x40fb02;\n                    fcn.0044b5c9();\n                }\n                if (var_10h != NULL) {\n                    var_44h = var_10h;\n                    puStackY76 = &fcn.0040f98b::var_1448h;\n                    puStackY80 = 0x40fb18;\n                    fcn.0044b5c9();\n                }\n                if (var_ch != 0) {\n                    var_44h = var_ch;\n                    puStackY76 = &fcn.0040f98b::var_1048h;\n                    puStackY80 = 0x40fb2e;\n                    fcn.0044b5c9();\n                }\n                if (var_8h != 0) {\n                    var_44h = var_8h;\n                    puStackY76 = &fcn.0040f98b::var_c48h;\n                    puStackY80 = 0x40fb44;\n                    fcn.0044b5c9();\n                }\n                var_44h = 0x3ff;\n                puStackY80 = &fcn.0040f98b::var_447h;\n                puStackY76 = NULL;\n                var_448h = 0;\n                uStackY84 = 0x40fb5a;\n                fcn.0044b531();\n                var_44h = &stack0xfffffbb4;\n                puStackY76 = arg_ch;\n                puStackY80 = 0x40fb6c;\n                fcn.00410dcd();\n                var_44h = 0x23;\n                puStackY76 = arg_10h;\n                puStackY80 = &stack0xfffffbb4;\n                var_10h = arg_8h;\n                uStackY88 = 0x40fb88;\n                fcn.0040f85c(arg_8h, puStackY80, arg_10h, 0x23);\n            }\n            if (var_28h != NULL) {\n                var_14h = arg_14h;\n                var_18h = 0x40fb98;\n                (*var_28h)();\n            }\n            if (var_24h != NULL) {\n                var_14h = var_4h;\n                var_18h = 0x40fba4;\n                (*var_24h)();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 2002
    },
    "0040fde6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040fde6(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    ushort var_950h;\n    uint var_94eh;\n    ushort var_740h;\n    uint var_73eh;\n    ushort var_530h;\n    uint var_52eh;\n    ushort var_320h;\n    uint var_31eh;\n    uchar var_110h;\n    uint var_10fh;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_8h = arg_8h + 4;\n    iVar1 = fcn.00418b0c(arg_14h);\n    if (iVar1 == 0) {\n        var_4h = 1;\n    }\n    else {\n        var_110h = 0;\n        fcn.0044b531(&var_10fh, 0, 0x104);\n        (*_fcn.004430fc)(0, 0, arg_10h, 0xffffffff, &var_110h, 0x104, 0, 0);\n        if (*(arg_8h + 8) == NULL) {\n            iVar1 = -1;\n        }\n        else {\n            iVar1 = (**(arg_8h + 8))(&var_110h);\n        }\n        if (iVar1 == 0) {\n            var_740h = 0;\n            fcn.0044b531(&var_73eh, 0, 0x208);\n            var_530h = 0;\n            fcn.0044b531(&var_52eh, 0, 0x208);\n            var_950h = 0;\n            fcn.0044b531(&var_94eh, 0, 0x208);\n            var_320h = 0;\n            fcn.0044b531(&var_31eh, 0, 0x208);\n            iVar1 = fcn.0044b58d(arg_10h);\n            iVar2 = fcn.0044b58d(0x44822c);\n            if (iVar1 + 1 + iVar2 < 0x104) {\n                fcn.004106b6(arg_10h, 0x44822c);\n            }\n            else {\n                var_740h = 0;\n            }\n            iVar1 = fcn.0044b58d(arg_10h);\n            iVar2 = fcn.0044b58d(0x448244);\n            if (iVar1 + 1 + iVar2 < 0x104) {\n                fcn.004106b6(arg_10h, 0x448244);\n            }\n            else {\n                var_530h = 0;\n            }\n            iVar1 = fcn.0044b58d(arg_10h);\n            iVar2 = fcn.0044b58d(0x448260);\n            if (iVar1 + 1 + iVar2 < 0x104) {\n                fcn.004106b6(arg_10h, 0x448260);\n            }\n            else {\n                var_950h = 0;\n            }\n            iVar1 = fcn.0044b58d(arg_10h);\n            iVar2 = fcn.0044b58d(0x44827c);\n            if (iVar1 + 1 + iVar2 < 0x104) {\n                fcn.004106b6(arg_10h, 0x44827c);\n            }\n            else {\n                var_320h = 0;\n            }\n            iVar1 = fcn.00410555(&var_320h);\n            if (iVar1 == 0) {\n                iVar1 = fcn.00410555(&var_740h);\n                if (iVar1 != 0) {\n                    fcn.0040fbac(arg_8h, arg_ch, &var_740h, 10);\n                }\n                iVar2 = fcn.00410555(&var_530h);\n                if (iVar2 != 0) {\n                    fcn.0040fbac(arg_8h, arg_ch, &var_530h, 0x14);\n                }\n                iVar3 = fcn.00410555(&var_950h);\n                if (iVar3 != 0) {\n                    fcn.0040fbac(arg_8h, arg_ch, &var_950h, 0x1e);\n                }\n                if (iVar3 == 0 && (iVar2 == 0 && iVar1 == 0)) {\n                    var_4h = 3;\n                }\n            }\n            else {\n                fcn.0040f98b(arg_8h, arg_ch, &var_320h, arg_14h);\n            }\n            piVar4 = var_8h;\n            if (var_8h[2] != NULL) {\n                (*var_8h[2])();\n                piVar4 = var_8h;\n            }\n        }\n        else {\n            var_4h = 2;\n            piVar4 = arg_8h + 4;\n        }\n        if (*piVar4 != 0) {\n            (*_fcn.004431c0)(piVar4 + 8);\n            *piVar4 = 0;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 1212
    },
    "00410183": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410183(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.0044b58d(arg_ch, &var_4h, 0);\n    (*_fcn.004430f8)(arg_8h, arg_ch, iVar1 * 2);\n    return;\n}\n",
        "token_count": 88
    },
    "004101ca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004101ca(uint arg_8h)\n\n{\n    int32_t extraout_ECX;\n    uint var_1000h;\n    uint var_800h;\n    uint uStackY36;\n    uint *puStackY32;\n    uint uStackY28;\n    uint uStackY24;\n    uint *puStackY20;\n    uint *puStackY16;\n    \n    fcn.0044ba9d();\n    puStackY20 = extraout_ECX;\n    if (extraout_ECX == 0) {\n        puStackY20 = (*_fcn.0044310c)();\n    }\n    puStackY16 = 0x4101f2;\n    fcn.004100cc(&fcn.004101ca::var_800h);\n    puStackY16 = &fcn.004101ca::var_800h;\n    uStackY24 = 0x4482d4;\n    puStackY32 = &fcn.004101ca::var_1000h;\n    uStackY28 = 0x400;\n    uStackY36 = 0x410210;\n    fcn.0044b51f();\n    puStackY16 = 0x443cec;\n    puStackY20 = &fcn.004101ca::var_1000h;\n    uStackY24 = arg_8h;\n    uStackY28 = 0x41022a;\n    (**0x443288)();\n    return;\n}\n",
        "token_count": 320
    },
    "0041022d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041022d(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    iVar2 = fcn.0044b58d(arg_ch);\n    iVar3 = fcn.0044b58d(arg_8h);\n    if (iVar2 <= iVar3) {\n        iVar1 = iVar2 * 2;\n        do {\n            iVar4 = fcn.0044b5ab(arg_8h, arg_ch, iVar1);\n            if (iVar4 == 0) {\n                return var_4h;\n            }\n            var_4h = var_4h + 1;\n            arg_8h = arg_8h + 2;\n            iVar2 = iVar2 + 1;\n        } while (iVar2 <= iVar3);\n    }\n    return -1;\n}\n",
        "token_count": 233
    },
    "00410285": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00410285(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    iVar2 = fcn.0044b58d(arg_ch);\n    iVar3 = fcn.0044b58d(arg_8h);\n    if (iVar2 <= iVar3) {\n        iVar1 = iVar2 * 2;\n        do {\n            iVar4 = fcn.0044b5e1(arg_8h, arg_ch, iVar1);\n            if (iVar4 == 0) {\n                return var_4h;\n            }\n            var_4h = var_4h + 1;\n            arg_8h = arg_8h + 2;\n            iVar2 = iVar2 + 1;\n        } while (iVar2 <= iVar3);\n    }\n    return -1;\n}\n",
        "token_count": 233
    },
    "00410308": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00410308(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    bool bVar4;\n    \n    bVar4 = false;\n    (*_fcn.004432e0)();\n    if (param_1 != 0) {\n        iVar1 = fcn.0044b58d(param_1);\n        iVar1 = iVar1 * 2 + 2;\n        iVar2 = (*_fcn.00443168)(0x2000, iVar1);\n        if (iVar2 != 0) {\n            uVar3 = (**0x443124)(iVar2);\n            fcn.0044b575(uVar3, param_1, iVar1);\n            (*_fcn.0044316c)(iVar2);\n            iVar1 = (*_fcn.004432c4)(0xd, iVar2);\n            bVar4 = iVar1 != 0;\n        }\n    }\n    (*_fcn.004432b8)();\n    return bVar4;\n}\n",
        "token_count": 227
    },
    "00410454": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00410454(uint param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t unaff_EDI;\n    \n    iVar1 = fcn.0044b58d(param_1);\n    if (in_EAX <= iVar1) {\n        iVar1 = in_EAX + -1;\n    }\n    fcn.0044b575();\n    *(iVar1 * 2 + unaff_EDI) = 0;\n    return;\n}\n",
        "token_count": 109
    },
    "00410482": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00410482(uint param_1, int32_t param_2, int32_t param_3, int32_t param_4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t *unaff_EDI;\n    \n    iVar1 = *in_EAX;\n    if (iVar1 <= param_2) {\n        iVar2 = *unaff_EDI;\n        do {\n            *in_EAX = *in_EAX + param_4;\n        } while (*in_EAX <= param_2);\n        iVar3 = fcn.0044b5d5(*in_EAX * param_3);\n        *unaff_EDI = iVar3;\n        if (0 < iVar1) {\n            if (iVar3 != 0) {\n                fcn.0044b575(iVar3, iVar2, iVar1 * param_3);\n            }\n            fcn.0044b5ed(iVar2);\n        }\n        return *unaff_EDI != 0;\n    }\n    return false;\n}\n",
        "token_count": 246
    },
    "004105ba": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.004105ba(uint param_1, uint param_2, uchar param_3)\n\n{\n    uint *in_EAX;\n    \n    fcn.0044b531();\n    *in_EAX = param_2;\n    in_EAX[1] = 0;\n    in_EAX[2] = 0;\n    in_EAX[3] = 0;\n    *(in_EAX + 0x16) = 0;\n    *(in_EAX + 0x17) = 1;\n    *(in_EAX + 6) = 0;\n    *(in_EAX + 0x19) = 0;\n    *(in_EAX + 0x1a) = 0;\n    *(in_EAX + 0x1b) = 0;\n    in_EAX[4] = 700;\n    *(in_EAX + 5) = 0;\n    *(in_EAX + 0x15) = param_3;\n    fcn.0044b56f(in_EAX + 7, param_1);\n    return;\n}\n",
        "token_count": 238
    },
    "0041065b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041065b(void)\n\n{\n    uint var_5ch;\n    \n    fcn.004105ba(0x448d3c, 0xe, 0);\n    (*_fcn.00443050)(&var_5ch);\n    return;\n}\n",
        "token_count": 61
    },
    "004106b6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004106b6(void)\n\n{\n    fcn.0044b56f();\n    fcn.004101a7();\n    fcn.0044b519();\n    return 1;\n}\n",
        "token_count": 46
    },
    "004106da": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool __cdecl fcn.004106da(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_200h;\n    \n    var_200h._0_2_ = 0;\n    fcn.0044b531(&var_200h + 2, 0, 0x1fe);\n    (*_fcn.004432ec)(arg_8h, &var_200h, 0xff);\n    iVar1 = fcn.0044b581(&var_200h, 0x4482f0);\n    return iVar1 == 0;\n}\n",
        "token_count": 140
    },
    "00410764": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00410764(ulong param_1)\n\n{\n    uint var_8h;\n    \n    fcn.0044b5e7(param_1, &var_8h);\n    var_8h = ROUND(_var_8h);\n    return var_8h;\n}\n",
        "token_count": 64
    },
    "0041089d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041089d(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    pcVar1 = *0x443248;\n    var_4h = 0;\n    var_8h = 0;\n    iVar2 = (**0x443248)(0x11);\n    iVar3 = (*pcVar1)(0x10);\n    if ((iVar2 == 0) || (iVar3 == 0)) {\n        uVar4 = (**0x4432d8)(0);\n        pcVar1 = *0x443040;\n        iVar3 = (**0x443040)(uVar4, 8);\n        iVar2 = (*pcVar1)(uVar4, 10);\n        (**0x4432e8)(0, uVar4);\n    }\n    pcVar1 = *0x443254;\n    (**0x443254)(arg_8h, &var_28h);\n    iVar5 = (**0x4432c0)(arg_8h);\n    if (iVar5 != 0) {\n        var_18h = 0;\n        var_14h = 0;\n        var_10h = 0;\n        var_ch = 0;\n        (*pcVar1)(iVar5, &var_18h);\n        iVar3 = (var_10h - var_18h) + 1;\n        iVar2 = (var_ch - var_14h) + 1;\n        var_4h = var_18h;\n        var_8h = var_14h;\n    }\n    iVar3 = ((var_28h - var_20h) + -1 + iVar3) / 2 + var_4h;\n    iVar2 = ((var_24h - var_1ch) + -1 + iVar2) / 2 + var_8h;\n    if (iVar2 < 0) {\n        iVar2 = 0;\n    }\n    if (iVar3 < 0) {\n        iVar3 = 0;\n    }\n    (**0x4432a8)(arg_8h, iVar3, iVar2, (var_20h - var_28h) + 1, (var_1ch - var_24h) + 1, 1);\n    return;\n}\n",
        "token_count": 613
    },
    "00410bde": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410bde(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    (*_fcn.00443148)(arg_8h, arg_ch, 0, 0);\n    fcn.00410ba0(arg_8h, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 84
    },
    "00410c04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00410c04(int32_t arg_8h, uint32_t arg_ch, ushort *arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint var_18h;\n    uint uStack22;\n    uint uStack18;\n    uint uStack14;\n    ushort uStack10;\n    ushort *var_4h;\n    \n    *arg_10h = 0;\n    if (arg_ch == 0) {\n        uVar2 = 0;\n    }\n    else {\n        iVar4 = 0;\n        uVar3 = 0;\n        if (arg_ch != 0) {\n            var_4h = arg_10h;\n            iVar1 = 0;\n            do {\n                iVar4 = iVar1;\n                var_18h._0_2_ = 0;\n                stack0xffffffe6 = 0;\n                uStack22 = 0;\n                uStack18 = 0;\n                uStack14 = 0;\n                uStack10 = 0;\n                fcn.0044b51f(&var_18h, 10, 0x44833c, *(uVar3 + arg_8h));\n                fcn.0044b575(var_4h, &var_18h, 6);\n                if (0x1fff < iVar4 + 3U) break;\n                var_4h = var_4h + 3;\n                uVar3 = uVar3 + 1;\n                iVar1 = iVar4 + 3;\n            } while (uVar3 < arg_ch);\n        }\n        arg_10h[iVar4 + 2] = 0;\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 408
    },
    "00410c8d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00410c8d(uint32_t *arg_8h, int32_t arg_ch)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t unaff_EDI;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_8h = fcn.0044b58d();\n    if (var_8h == 0) {\n        return 0;\n    }\n    var_4h = *arg_8h;\n    iVar2 = 0;\n    uVar3 = 0;\n    if (0 < var_8h) {\n        do {\n            var_10h._0_2_ = *(unaff_EDI + iVar2 * 2);\n            if (var_10h == 0x20) {\n                iVar2 = iVar2 + 1;\n            }\n            else {\n                var_ch._0_2_ = 0;\n                var_10h._2_2_ = *(unaff_EDI + 2 + iVar2 * 2);\n                if (var_4h <= uVar3) break;\n                uVar1 = fcn.0044b5db(&var_10h, 0, 0x10);\n                *(uVar3 + arg_ch) = uVar1;\n                uVar3 = uVar3 + 1;\n                iVar2 = iVar2 + 2;\n            }\n        } while (iVar2 < var_8h);\n        if (uVar3 != 0) {\n            *arg_8h = uVar3;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 392
    },
    "00410d0b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410d0b(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    ushort *unaff_EBX;\n    uint *puVar2;\n    int32_t iVar3;\n    ushort var_804h;\n    uint var_802h;\n    int32_t var_4h;\n    \n    var_804h = 0;\n    fcn.0044b531(&var_802h, 0, 0x7fe);\n    iVar3 = 0;\n    *unaff_EBX = 0;\n    if (0 < arg_ch) {\n        puVar2 = arg_8h + 4;\n        var_4h = arg_ch;\n        do {\n            fcn.0044b51f(&var_804h, 0x400, 0x44834c, puVar2[-1], *puVar2);\n            iVar1 = fcn.0044b58d(&var_804h);\n            fcn.0044b575(unaff_EBX + iVar3, &var_804h, iVar1 * 2 + 2);\n            iVar1 = iVar3 + 1 + iVar1;\n            iVar3 = fcn.0044b58d(*puVar2);\n            fcn.0044b575(unaff_EBX + iVar1, *puVar2, iVar3 * 2 + 2);\n            puVar2 = puVar2 + 2;\n            var_4h = var_4h + -1;\n            iVar3 = iVar1 + 1 + iVar3;\n        } while (var_4h != 0);\n    }\n    unaff_EBX[iVar3] = 0;\n    (unaff_EBX + iVar3)[1] = 0;\n    return;\n}\n",
        "token_count": 395
    },
    "00411123": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00411123(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iStack4;\n    \n    iStack4 = 0;\n    iVar2 = fcn.0044b58d(0x448444);\n    iVar3 = fcn.0041105d();\n    if ((iVar3 != 0) && (iVar4 = fcn.004110b1(),  iVar2 <= iVar4)) {\n        iVar1 = iVar2 * 2;\n        do {\n            iVar5 = fcn.0044b5e1(iVar3, 0x448444, iVar1);\n            if (iVar5 == 0) {\n                return iStack4;\n            }\n            iStack4 = iStack4 + 1;\n            iVar3 = iVar3 + 2;\n            iVar2 = iVar2 + 1;\n        } while (iVar2 <= iVar4);\n    }\n    return -1;\n}\n",
        "token_count": 232
    },
    "004113ee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004113ee(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    fcn.004114e7();\n    fcn.00410454(arg_8h);\n    iVar1 = fcn.0044b58d(in_EAX + 0x764);\n    iVar2 = fcn.0044b58d(0x443cb0);\n    if (iVar1 + 1 + iVar2 < 0x143) {\n        fcn.004106b6(in_EAX + 0x764, 0x443cb0);\n    }\n    else {\n        *(in_EAX + 4) = 0;\n    }\n    return;\n}\n",
        "token_count": 167
    },
    "00411591": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00411591(int32_t **param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = 0;\n    if (0 < param_1[1]) {\n        piVar2 = *param_1;\n        do {\n            if (*piVar2 == param_2) {\n                (*param_1)[iVar1 * 2] = 0;\n                (*param_1)[iVar1 * 2 + 1] = 0;\n                return 1;\n            }\n            iVar1 = iVar1 + 1;\n            piVar2 = piVar2 + 2;\n        } while (iVar1 < param_1[1]);\n    }\n    return 0;\n}\n",
        "token_count": 173
    },
    "004115cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004115cc(int32_t param_1)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (0 < in_EAX[1]) {\n        piVar1 = *in_EAX + 4;\n        do {\n            if (*piVar1 == param_1) {\n                return *(*in_EAX + iVar2 * 8);\n            }\n            iVar2 = iVar2 + 1;\n            piVar1 = piVar1 + 2;\n        } while (iVar2 < in_EAX[1]);\n    }\n    return 0;\n}\n",
        "token_count": 147
    },
    "00411626": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00411626(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    ushort *puVar5;\n    uint *puVar6;\n    uint *puVar7;\n    ushort var_294h;\n    uint var_292h;\n    uint var_96h;\n    uint var_90h;\n    uint var_6ch;\n    uint var_68h;\n    code *var_60h;\n    int32_t var_58h;\n    code *var_54h;\n    int32_t var_50h;\n    ushort *var_4ch;\n    ushort *var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    \n    var_6ch = 0;\n    var_68h = 0;\n    iVar2 = fcn.0040c7d0();\n    if (iVar2 != 0) {\n        var_ch = 0;\n        var_10h = 0;\n        if (var_58h == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = (*var_54h)(0, 0, &var_10h, &var_ch);\n        }\n        if (iVar2 != 0) {\n            puVar6 = 0x44835c;\n            puVar7 = &var_90h;\n            for (iVar2 = 9; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar7 = *puVar6;\n                puVar6 = puVar6 + 1;\n                puVar7 = puVar7 + 1;\n            }\n            var_14h = fcn.0044b58d(&var_90h);\n            iVar2 = 1;\n            var_8h = 0;\n            if (var_10h != 0) {\n                do {\n                    if (iVar2 == 0) break;\n                    iVar1 = *(var_ch + var_8h * 4);\n                    uVar3 = fcn.0044b5f3(*(iVar1 + 8), &var_90h, var_14h);\n                    if (uVar3 == 0) {\n                        do {\n                            *(uVar3 + 0x451ac8) = *(uVar3 + 0x450408) << 2;\n                            uVar3 = uVar3 + 2;\n                        } while (uVar3 < 0x4a);\n                        var_28h = *(iVar1 + 0x1c);\n                        var_2ch = *(iVar1 + 0x18);\n                        var_24h = 0x4a;\n                        var_20h = 0x451ac8;\n                        iVar4 = fcn.0040c860();\n                        if (iVar4 != 0) {\n                            var_294h = 0;\n                            fcn.0044b531(&var_292h, 0, 0x1fe);\n                            uVar3 = var_1ch;\n                            if (0x1fa < var_1ch) {\n                                uVar3 = 0x1fa;\n                            }\n                            fcn.0044b575(&var_294h, var_18h, uVar3);\n                            var_38h = *(iVar1 + 0x20);\n                            var_44h = *(iVar1 + 0xc);\n                            var_3ch = *(iVar1 + 4);\n                            var_34h = *(iVar1 + 0x10);\n                            var_30h = *(iVar1 + 0x14);\n                            var_40h = *(iVar1 + 0x2c);\n                            var_50h = *(iVar1 + 8);\n                            var_96h._0_2_ = 0;\n                            if (var_50h != 0) {\n                                iVar2 = fcn.0044b5bd(var_50h, 0x448380, 0x12);\n                                if (iVar2 == 0) {\n                                    var_50h = *(iVar1 + 8) + 0x24;\n                                }\n                            }\n                            var_4ch = &var_294h;\n                            var_48h = 0x4434fc;\n                            puVar5 = fcn.0044b57b(var_4ch, 0x3a);\n                            if (puVar5 != NULL) {\n                                *puVar5 = 0;\n                                var_48h = puVar5 + 1;\n                            }\n                            iVar2 = (***arg_8h)(&var_50h);\n                            (**0x4430d8)(var_18h);\n                        }\n                    }\n                    var_8h = var_8h + 1;\n                } while (var_8h < var_10h);\n            }\n            (*var_60h)(var_ch);\n        }\n    }\n    fcn.0040c84b();\n    return;\n}\n",
        "token_count": 1206
    },
    "00411c74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411c74(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *arg_8h_00;\n    uint var_778h;\n    uchar var_228h [2];\n    uint var_226h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0040e7d1();\n    iVar3 = fcn.0040ea04(0x448408, arg_8h);\n    if (iVar3 != 0) {\n        var_228h = 0;\n        fcn.0044b531(&var_226h, 0, 0x1fe);\n        var_18h = 0;\n        var_24h = 0;\n        var_20h = 0;\n        var_14h = 0x100;\n        var_1ch = 0;\n        var_8h = 0x20;\n        var_10h = 0;\n        var_4h = 0;\n        var_ch = 0;\n        do {\n            arg_8h_00 = &var_778h;\n            iVar3 = fcn.0040ed03(arg_8h_00, &var_10h);\n            if (iVar3 != 0) {\n                iVar3 = fcn.0041180e(0x448420);\n                arg_8h_00 = 0x448438;\n                iVar4 = fcn.0041180e();\n                if ((iVar3 != 0) && (iVar4 != 0)) {\n                    uVar1 = *(iVar3 + 0x220);\n                    uVar2 = *(iVar3 + 0x224);\n                    iVar3 = fcn.0040f2a2();\n                    if (iVar3 != 0) {\n                        arg_8h_00 = &var_24h;\n                        iVar3 = fcn.00411123();\n                        if (iVar3 == 0) {\n                            fcn.0044b51f(var_228h, 0xff, 0x448454, uVar1, uVar2);\n                            arg_8h_00 = var_228h;\n                            fcn.00410eeb(arg_8h_00, 0xffffffff);\n                        }\n                    }\n                }\n            }\n            iVar3 = fcn.0040e9c7(arg_8h_00);\n        } while (iVar3 != 0);\n        if (var_10h != 0) {\n            fcn.0044b5ed(var_10h);\n        }\n        fcn.00411044();\n    }\n    fcn.0040e817();\n    return;\n}\n",
        "token_count": 655
    },
    "004120ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004120ec(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_420h;\n    uint var_210h;\n    \n    var_420h._0_2_ = 0;\n    fcn.0044b531(&var_420h + 2, 0, 0x208);\n    var_210h._0_2_ = 0;\n    fcn.0044b531(&var_210h + 2, 0, 0x208);\n    fcn.0041b27d();\n    iVar1 = fcn.0044b58d(0x448528);\n    iVar2 = fcn.0044b58d(&var_420h);\n    if (iVar1 + 1 + iVar2 < 0x104) {\n        fcn.004106b6(&var_420h, 0x448528);\n    }\n    else {\n        var_210h._0_2_ = 0;\n    }\n    iVar1 = fcn.00410555(&var_210h);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0044b58d(0x448580);\n        iVar2 = fcn.0044b58d(&var_420h);\n        if (iVar1 + 1 + iVar2 < 0x104) {\n            fcn.004106b6(&var_420h, 0x448580);\n        }\n        else {\n            var_210h._0_2_ = 0;\n        }\n    }\n    iVar1 = fcn.00410555(&var_210h);\n    if (iVar1 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = fcn.00411fb1(arg_8h, &var_210h);\n    }\n    return uVar3;\n}\n",
        "token_count": 439
    },
    "0041220c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041220c(int32_t *param_1)\n\n{\n    int32_t in_EAX;\n    \n    return in_EAX * 0x234 + *param_1;\n}\n",
        "token_count": 48
    },
    "00412298": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00412298(uint arg_8h, uint arg_ch)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    ushort in_DX;\n    int32_t unaff_EBP;\n    int32_t unaff_ESI;\n    uint32_t arg_14h;\n    uint var_75h;\n    \n    *(unaff_EBP + -0x75) = *(unaff_EBP + -0x75) + in_DX;\n    in(in_DX);\n    fcn.00410bde(*(unaff_EBP + 8), *(unaff_EBP + 0xc), unaff_ESI, 8);\n    iVar2 = fcn.0044b5e1();\n    if (iVar2 == 0) {\n        fcn.0044b575(unaff_EBP + -4, unaff_ESI + 4, 4);\n        iVar2 = *(unaff_EBP + -4);\n        if (iVar2 == 0) {\n            iVar2 = 1;\n            *(unaff_EBP + -4) = 1;\n        }\n        arg_14h = iVar2 * 0x80;\n        if (0x2000 < arg_14h) {\n            arg_14h = 0x2000;\n        }\n        fcn.00410bde(*(unaff_EBP + 8), *(unaff_EBP + 0xc), unaff_ESI, arg_14h);\n        puVar1 = arg_14h + unaff_ESI;\n        *puVar1 = 0;\n        puVar1[-1] = 0;\n        puVar1[-2] = 0;\n        if (*(unaff_EBP + 0x10) != NULL) {\n            **(unaff_EBP + 0x10) = arg_14h;\n        }\n        if (*(unaff_EBP + 0x14) != NULL) {\n            **(unaff_EBP + 0x14) = *(unaff_EBP + -4);\n        }\n        uVar3 = 1;\n    }\n    else {\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 481
    },
    "00412515": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00412515(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    ushort *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    ushort var_230h;\n    uint var_22eh;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_230h = 0;\n    fcn.0044b531(&var_22eh, 0, 0x208);\n    fcn.0041b27d();\n    iVar3 = *(in_EAX + 0x24);\n    fcn.00412479(&var_230h);\n    var_1ch = in_EAX + 8;\n    var_20h = 0x44875c;\n    var_ch = var_1ch;\n    fcn.004120ec(&var_20h);\n    if (iVar3 == *(in_EAX + 0x24)) {\n        var_18h = 0;\n        var_14h = 0;\n        var_10h = 5000;\n        iVar4 = 64000;\n        fcn.004115f8();\n        iVar3 = var_18h;\n        var_4h = 64000;\n        var_8h = (**0x44333c)(0x448510, var_18h, &var_4h);\n        if (var_8h != 0) {\n            do {\n                do {\n                    iVar1 = fcn.0044b57b(*(iVar3 + 4), 0x40);\n                    if (iVar1 != 0) {\n                        fcn.00410f95(iVar1 + 2, 0);\n                        puVar2 = fcn.0044b57b(*(iVar3 + 4), 0x3f);\n                        if (puVar2 != NULL) {\n                            *puVar2 = 0;\n                            fcn.00410f95(iVar1 + 2, 0);\n                        }\n                    }\n                    var_4h = iVar4;\n                    iVar1 = (**0x443338)(var_8h, iVar3, &var_4h);\n                } while (iVar1 != 0);\n                iVar3 = (*_fcn.0044310c)();\n                if (iVar3 != 0x7a) break;\n                iVar4 = var_4h + 10000;\n                fcn.004115f8();\n                iVar3 = var_18h;\n                var_4h = iVar4;\n                iVar1 = (**0x443338)(var_8h, var_18h, &var_4h);\n            } while (iVar1 != 0);\n            (**0x443334)(var_8h);\n        }\n        fcn.00411611();\n    }\n    return;\n}\n",
        "token_count": 663
    },
    "004127b3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004127b3(uint *arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    piVar1 = *(in_EAX + 4);\n    iVar4 = piVar1[1] + *piVar1;\n    if (iVar4 + 2U < arg_14h) {\n        *(piVar1 + (arg_14h - 1)) = 0;\n        *(piVar1 + (arg_14h - 2)) = 0;\n        do {\n            iVar2 = fcn.0044b58d(iVar4 + piVar1);\n            iVar2 = iVar4 + 2 + iVar2 * 2;\n            if (arg_14h < iVar2 + 2U) {\n                return;\n            }\n            iVar3 = fcn.0044b58d(iVar2 + piVar1);\n            (***arg_8h)(arg_ch, arg_10h, iVar4 + piVar1, iVar2 + piVar1);\n            iVar4 = iVar2 + 2 + iVar3 * 2;\n        } while (iVar4 + 2U < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 314
    },
    "004128cf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_21eh\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004128cf(int32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t extraout_EDX;\n    ushort var_220h;\n    uint32_t var_21eh;\n    uint var_1d0h;\n    uint var_1cch;\n    uint var_20h;\n    uint uStack31;\n    uint uStack27;\n    uint uStack23;\n    uint uStack19;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    fcn.0040c8d1();\n    if (*(arg_8h + 0x88) == NULL) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = (**(arg_8h + 0x88))(arg_ch, 0x8004, 0, 0, &var_4h);\n    }\n    if (iVar2 != 0) {\n        iVar2 = fcn.0044b58d(arg_10h);\n        arg_ch = var_4h;\n        fcn.0040c8d1();\n        if (*(arg_8h + 0x90) == NULL) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = (**(arg_8h + 0x90))(arg_ch, arg_10h, iVar2 * 2 + 2, 0);\n        }\n        uVar1 = var_4h;\n        if (iVar2 != 0) {\n            var_20h._0_1_ = 0;\n            stack0xffffffdd = 0;\n            uStack31 = 0;\n            uStack27 = 0;\n            uStack23 = 0;\n            uStack19 = 0;\n            var_8h = 0x14;\n            fcn.0040c8d1();\n            if (*(arg_8h + 0x8c) == NULL) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = (**(arg_8h + 0x8c))(uVar1, 2, &var_20h, &var_8h, 0);\n            }\n            if (iVar2 != 0) {\n                var_220h = 0;\n                fcn.0044b531(&var_21eh, 0, 0x1fe);\n                arg_ch = arg_ch & 0xffffff00;\n                iVar2 = 0;\n                do {\n                    arg_ch = arg_ch & 0xffffff00 | arg_ch + *(&var_20h + iVar2);\n                    *NULL = *(&var_20h + iVar2);\n                    fcn.00412253(*NULL);\n                    iVar2 = extraout_EDX + 1;\n                } while (iVar2 < 0x14);\n                fcn.00412253(arg_ch);\n                var_1cch._0_2_ = 0;\n                fcn.00412824(&var_220h, arg_10h);\n            }\n        }\n        fcn.0040c8d1();\n        if (*(arg_8h + 0x94) != NULL) {\n            (**(arg_8h + 0x94))(var_4h);\n        }\n    }\n    return;\n}\n",
        "token_count": 761
    },
    "00412a41": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid fcn.00412a41(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    uint *unaff_EDI;\n    int16_t iStackY4118;\n    uint var_1010h;\n    uint uStackY68;\n    uint uStackY64;\n    uint *puStackY60;\n    uint *puStackY56;\n    uint uStackY52;\n    uint *puStackY48;\n    uint *puStackY44;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0x412a4e;\n    fcn.0044ba9d();\n    *(unaff_EBX + 4) = 0x80000001;\n    var_8h = unaff_EDI;\n    fcn.00410ec5();\n    fcn.00410ec5();\n    fcn.00410ec5();\n    fcn.00411044();\n    fcn.00412515();\n    fcn.00410f95();\n    fcn.00410f95();\n    fcn.00410f95();\n    puStackY44 = 0x412aaf;\n    fcn.00412664(unaff_EBX);\n    puStackY44 = 0x412ab7;\n    fcn.0040c8d1();\n    if (*(unaff_EBX + 0x80) == NULL) {\n        iVar1 = 0;\n    }\n    else {\n        puStackY44 = 0xf0000000;\n        puStackY48 = 0x1;\n        uStackY52 = 0;\n        puStackY56 = NULL;\n        puStackY60 = &fcn.00412a41::var_8h;\n        uStackY64 = 0x412acf;\n        iVar1 = (**(unaff_EBX + 0x80))();\n    }\n    if (iVar1 != 0) {\n        var_4h = 0;\n        if (0 < *(unaff_EBX + 0x24)) {\n            do {\n                puStackY44 = 0x412af2;\n                puStackY44 = fcn.00410ff5();\n                var_1010h._0_2_ = 0;\n                puStackY48 = 0x412b05;\n                fcn.00410ded();\n                puStackY48 = 0x412b0e;\n                puStackY44 = &fcn.00412a41::var_1010h;\n                fcn.0044b605();\n                puStackY48 = var_8h;\n                puStackY56 = 0x412b1b;\n                puStackY44 = &fcn.00412a41::var_1010h;\n                fcn.004128cf(unaff_EBX, var_8h, &fcn.00412a41::var_1010h);\n                puStackY60 = 0x412b23;\n                puStackY56 = &fcn.00412a41::var_1010h;\n                iVar1 = fcn.0044b58d();\n                if ((0 < iVar1) && (iVar1 = iVar1 * 2,  *(&stack0xffffefea + iVar1) != 0x2f)) {\n                    *(&fcn.00412a41::var_1010h + iVar1 + 2) = 0;\n                    *(&fcn.00412a41::var_1010h + iVar1) = 0x2f;\n                    puStackY60 = var_8h;\n                    uStackY68 = 0x412b54;\n                    puStackY56 = &fcn.00412a41::var_1010h;\n                    fcn.004128cf(unaff_EBX, var_8h, &fcn.00412a41::var_1010h);\n                }\n                var_4h = var_4h + 1;\n            } while (var_4h < *(unaff_EBX + 0x24));\n        }\n        puStackY44 = 0x412b67;\n        fcn.0040c8d1();\n        if (*(unaff_EBX + 0x84) != NULL) {\n            puStackY44 = NULL;\n            puStackY48 = var_8h;\n            uStackY52 = 0x412b73;\n            (**(unaff_EBX + 0x84))();\n        }\n    }\n    return;\n}\n",
        "token_count": 1015
    },
    "00413179": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00413207)\n// WARNING: Removing unreachable block (ram,0x0041323b)\n// WARNING: Removing unreachable block (ram,0x0041324c)\n// WARNING: Removing unreachable block (ram,0x00413240)\n// WARNING: Removing unreachable block (ram,0x0041325e)\n// WARNING: Removing unreachable block (ram,0x00413272)\n// WARNING: Removing unreachable block (ram,0x00413278)\n// WARNING: Removing unreachable block (ram,0x0041328b)\n\nvoid __cdecl fcn.00413179(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_stack_00000014;\n    int32_t iVar3;\n    \n    fcn.0044ba9d();\n    iVar1 = (**0x4432b0)();\n    iVar3 = 0;\n    if (0 < iVar1) {\n        do {\n            fcn.0044b531();\n            iVar2 = (**0x443300)();\n            if ((iVar2 != 0) && (in_stack_00000014 != 0)) {\n                fcn.00413179(0x36, in_stack_00000014, 0);\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < iVar1);\n    }\n    return;\n}\n",
        "token_count": 316
    },
    "004133c3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004133c3(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    ushort uStackY8200;\n    uint uStackY20;\n    \n    fcn.0044ba9d();\n    uStackY8200 = 0;\n    uStackY20 = 0x4133eb;\n    fcn.0044b531();\n    arg_8h_00 = (*_fcn.00443304)();\n    uStackY20 = 0x413404;\n    iVar1 = fcn.004134f4(arg_8h_00, &stack0xffffdff8);\n    if (iVar1 != 0) {\n        uStackY20 = 0x41341a;\n        (*_fcn.00443230)();\n    }\n    return 1;\n}\n",
        "token_count": 185
    },
    "004134f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004134f4(uint arg_8h, uint arg_ch)\n\n{\n    uint var_40h;\n    \n    var_40h._0_2_ = 0;\n    fcn.0044b531(&var_40h + 2, 0, 0x3e);\n    fcn.0044b611(arg_8h, &var_40h, 10);\n    fcn.00413550(&var_40h, arg_ch);\n    return;\n}\n",
        "token_count": 122
    },
    "0041363c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041363c(uint arg_8h, uint arg_ch)\n\n{\n    uint var_40h;\n    \n    var_40h._0_2_ = 0;\n    fcn.0044b531(&var_40h + 2, 0, 0x3e);\n    fcn.0044b611(arg_8h, &var_40h, 10);\n    fcn.004135c3(&var_40h, arg_ch, 0);\n    return;\n}\n",
        "token_count": 126
    },
    "00413766": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00413766(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    int16_t iStackY8712;\n    ushort var_200h;\n    uint var_1feh;\n    uint uStackY52;\n    \n    fcn.0044ba9d();\n    iStackY8712 = 0;\n    fcn.0044b531();\n    arg_8h_00 = (*_fcn.00443304)();\n    (*_fcn.004432f4)();\n    if ((0 < arg_8h_00) && (iStackY8712 != 0)) {\n        var_200h = 0;\n        fcn.0044b531();\n        (*_fcn.004432ec)();\n        uStackY52 = 0x413802;\n        iVar1 = fcn.0044b581();\n        if (iVar1 != 0) {\n            uStackY52 = 0x413815;\n            fcn.0041363c(arg_8h_00, &stack0xffffddf8);\n        }\n    }\n    return 1;\n}\n",
        "token_count": 252
    },
    "0041392a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041392a(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h_00;\n    ushort uStackY8200;\n    uchar auStackY8198 [8170];\n    uint uStackY28;\n    uint uStackY24;\n    uchar *puStackY20;\n    \n    fcn.0044ba9d();\n    arg_8h_00 = 0;\n    puStackY20 = &stack0xffffdffa;\n    uStackY8200 = 0;\n    uStackY24 = 0x413953;\n    fcn.0044b531();\n    do {\n        uStackY24 = arg_8h;\n        uStackY28 = 0x41396c;\n        puStackY20 = arg_8h_00;\n        iVar1 = (**0x44331c)();\n        if (0 < iVar1) {\n            puStackY20 = 0x41397d;\n            fcn.0041363c(arg_8h_00, &stack0xffffdff8);\n        }\n        arg_8h_00 = arg_8h_00 + 1;\n    } while (arg_8h_00 < 0x10000);\n    return;\n}\n",
        "token_count": 279
    },
    "0041398b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041398b(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00410555(param_1);\n    if (iVar1 != 0) {\n        fcn.0044b56f(0x450ec8, param_1);\n        fcn.0044b56f(0x4510d8, 0x448858);\n        iVar1 = (*_fcn.004431a4)(0x4510d8, 0x44888c, 0, 0x450ec8);\n        *0x45115c = iVar1 == 1;\n        fcn.0041352b(0x448894, 0x3f);\n        fcn.0041352b(0x4488a4, 0x3f);\n        fcn.0041352b(0x4488c4, 0xff);\n    }\n    return;\n}\n",
        "token_count": 209
    },
    "00413a13": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00413a13(void)\n\n{\n    uint var_20ch;\n    \n    var_20ch._0_2_ = 0;\n    fcn.0044b531(&var_20ch + 2, 0, 0x208);\n    fcn.00413b8a();\n    fcn.0041398b(&var_20ch);\n    return;\n}\n",
        "token_count": 97
    },
    "00413a51": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413a51(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_1428h;\n    uint var_1010h;\n    ushort var_410h;\n    uint var_40eh;\n    ushort var_210h;\n    uint var_20eh;\n    uint uStackY68;\n    \n    fcn.0044ba9d();\n    var_410h = 0;\n    fcn.0044b531();\n    var_210h = 0;\n    fcn.0044b531();\n    fcn.00410587();\n    fcn.00412f28();\n    iVar2 = fcn.0044ac22(&stack0xfffffdec);\n    if (iVar2 != 0) {\n        fcn.0044b56f();\n    }\n    fcn.0044b56f();\n    fcn.0044b56f();\n    fcn.004135c3(0x4488a4, 0x4434fc, 0);\n    fcn.004135c3(0x4488c4, 0x4434fc, 0);\n    fcn.004135c3(0x4488e0, &stack0xfffffbec, 1);\n    fcn.004135c3(0x4488f4, 0x4488f0, 0);\n    pcVar1 = *0x4431a8;\n    (**0x4431a8)();\n    (*pcVar1)();\n    fcn.0044b56f();\n    uStackY68 = 0x413b7a;\n    fcn.0041392a(arg_8h);\n    *0x450ec8 = 0;\n    return;\n}\n",
        "token_count": 396
    },
    "00413b8a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413b8a(void)\n\n{\n    ushort *puVar1;\n    \n    fcn.00410587();\n    puVar1 = fcn.0044b5c3();\n    if (puVar1 != NULL) {\n        *puVar1 = 0;\n    }\n    fcn.0044b519();\n    return;\n}\n",
        "token_count": 78
    },
    "00413bb1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00413bb1(void)\n\n{\n    uint arg_8h;\n    uint arg_ch;\n    uint var_210h;\n    \n    var_210h._0_2_ = 0;\n    fcn.0044b531(&var_210h + 2, 0, 0x208);\n    fcn.00413b8a();\n    arg_ch = 0;\n    arg_8h = (*_fcn.00443144)(0, &var_210h);\n    fcn.00413a51(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 140
    },
    "00413c8f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00413c8f(int32_t arg_8h)\n\n{\n    ushort *puVar1;\n    int32_t iVar2;\n    int32_t *unaff_ESI;\n    int32_t iVar3;\n    uint var_2ch;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    \n    iVar3 = 0;\n    if ((arg_8h != 0) && (fcn.0044b531(*unaff_ESI, 0, unaff_ESI[1] << 2),  0 < unaff_ESI[1])) {\n        do {\n            var_20h = 0;\n            var_1ch = 0;\n            puVar1 = *unaff_ESI + iVar3 * 4;\n            var_2ch = 0x22;\n            iVar2 = (**0x44327c)(arg_8h, 0x105f, iVar3, &var_2ch);\n            if (iVar2 != 0) {\n                *puVar1 = var_24h;\n                puVar1[1] = var_10h;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < unaff_ESI[1]);\n    }\n    return;\n}\n",
        "token_count": 302
    },
    "00413cfb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00413cfb(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    uint *unaff_ESI;\n    \n    piVar1 = (***unaff_ESI)();\n    return unaff_ESI[1] * param_1 + *piVar1;\n}\n",
        "token_count": 69
    },
    "00413ede": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413ede(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    \n    fcn.0040c9b2(*(in_EAX + 0x294), param_1, param_2);\n    return;\n}\n",
        "token_count": 60
    },
    "00413fe7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413fe7(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    iVar2 = (**(*in_EAX + 0x68))();\n    in_EAX[1] = iVar2;\n    fcn.00413dc8();\n    in_EAX[0xd] = 0;\n    in_EAX[0xa5] = arg_8h;\n    in_EAX[0xb1] = 7;\n    iVar2 = fcn.0044b5b1(0x8c);\n    in_EAX[0xb2] = iVar2;\n    iVar2 = fcn.0044b5b1(0x8c);\n    in_EAX[0xf] = iVar2;\n    var_4h = 0x450238;\n    do {\n        iVar2 = *var_4h * 0x14;\n        fcn.0044b575(in_EAX[0xb2] + iVar2, var_4h, 0x14);\n        fcn.0044b575(in_EAX[0xf] + iVar2, var_4h + 5, 0x14);\n        uVar1 = *(iVar2 + 0x10 + in_EAX[0xb2]);\n        *(in_EAX[0xf] + 0x10 + iVar2) = uVar1;\n        if ((uVar1 & 0xffff0000) == 0) {\n            uVar3 = fcn.00413002();\n            *(iVar2 + 0x10 + in_EAX[0xb2]) = uVar3;\n            uVar3 = fcn.00413002();\n            *(in_EAX[0xf] + 0x10 + iVar2) = uVar3;\n        }\n        var_4h = var_4h + 10;\n    } while (var_4h < 0x450350);\n    in_EAX[0x10] = 0;\n    in_EAX[0x11] = arg_ch;\n    in_EAX[10] = 7;\n    in_EAX[9] = 0x20;\n    iVar2 = fcn.0044b5b1(0x1c);\n    in_EAX[0xb] = iVar2;\n    piVar4 = fcn.0044b5b1(0xc);\n    if (piVar4 == NULL) {\n        piVar4 = NULL;\n    }\n    else {\n        arg_ch = in_EAX[0x15];\n        if (arg_ch == 0) {\n            arg_ch = 100;\n        }\n        piVar4[2] = arg_8h;\n        piVar4[1] = 7;\n        iVar2 = fcn.0044b5b1(0x1c);\n        arg_8h = 0;\n        *piVar4 = iVar2;\n        do {\n            iVar2 = arg_8h + 1;\n            *(*piVar4 + 2 + arg_8h * 4) = arg_8h;\n            *(arg_8h * 4 + *piVar4) = arg_ch;\n            arg_8h = iVar2;\n        } while (iVar2 < 7);\n    }\n    in_EAX[0xad] = piVar4;\n    in_EAX[0x12] = 1;\n    in_EAX[0x13] = 0;\n    in_EAX[0xaa] = 1;\n    in_EAX[0xab] = 0;\n    in_EAX[0xac] = 0;\n    in_EAX[0xae] = 1;\n    in_EAX[0xaf] = 1;\n    in_EAX[0xb6] = 0x32;\n    in_EAX[0x16] = 0xffffff;\n    fcn.00413f67();\n    return;\n}\n",
        "token_count": 910
    },
    "00414529": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00414529(uint *arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.0040c9f0(*(in_EAX + 0x294), arg_ch, &arg_ch);\n    if (iVar1 != 0) {\n        uVar2 = fcn.00413cfb(arg_ch);\n        *arg_8h = uVar2;\n    }\n    return iVar1;\n}\n",
        "token_count": 120
    },
    "00414560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00414560(uint *arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.0040ce30(*(in_EAX + 0x294), &var_8h, &var_4h);\n    if (iVar1 != 0) {\n        uVar2 = fcn.00413cfb(var_4h);\n        *arg_8h = uVar2;\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 136
    },
    "00414644": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414644(uint *param_1, uint param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *unaff_ESI;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (0 < unaff_ESI[0xb1]) {\n        do {\n            uVar1 = (**(*unaff_ESI + 0x40))();\n            fcn.0040cf1d(unaff_ESI[0xa5], param_2, unaff_ESI[0x17], uVar1);\n            uVar1 = (***param_1)(iVar3, unaff_ESI[0x18]);\n            iVar2 = fcn.0044b5a5(unaff_ESI[0x17], uVar1);\n            if (iVar2 != 0) {\n                fcn.0040ceb4(unaff_ESI[0xa5], param_2, uVar1);\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < unaff_ESI[0xb1]);\n    }\n    return;\n}\n",
        "token_count": 247
    },
    "004149d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004149d0(void)\n\n{\n    uint extraout_EDX;\n    uint extraout_EDX_00;\n    uint extraout_EDX_01;\n    uint extraout_EDX_02;\n    \n    fcn.0044b56f();\n    fcn.0041056a(0x20, 0x5f);\n    fcn.0041056a(0x5c, extraout_EDX);\n    fcn.0041056a(0x2f, extraout_EDX_00);\n    fcn.0041056a(0x28, extraout_EDX_01);\n    fcn.0041056a(0x29, extraout_EDX_02);\n    fcn.0044b605();\n    return;\n}\n",
        "token_count": 169
    },
    "00414a60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00414a60(uint arg_8h, uint arg_ch)\n\n{\n    uchar uStack8200;\n    uchar auStack8199 [8131];\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uchar *puStack56;\n    uint *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uchar *puStack24;\n    uint uStack20;\n    uint uStack16;\n    uint var_4h;\n    \n    var_4h = 0x414a6d;\n    fcn.0044ba9d();\n    uStack16 = 0x1fff;\n    puStack24 = &stack0xffffdff9;\n    uStack20 = 0;\n    uStack8200 = 0;\n    puStack28 = 0x414a8a;\n    fcn.0044b531();\n    uStack16 = 0;\n    uStack20 = 0;\n    puStack24 = 0x1fff;\n    puStack28 = &stack0xffffdff8;\n    uStack32 = 0xffffffff;\n    uStack36 = arg_ch;\n    uStack40 = 0;\n    uStack44 = 0;\n    uStack48 = 0x414aa4;\n    (*_fcn.004430fc)();\n    uStack48 = 0;\n    puStack52 = &fcn.00414a60::var_4h;\n    puStack56 = &stack0xffffdff8;\n    puStack60 = 0x414ab5;\n    puStack56 = fcn.0044b52b();\n    puStack60 = &stack0xffffdff8;\n    uStack64 = arg_8h;\n    uStack68 = 0x414ac7;\n    (*_fcn.004430f8)();\n    return;\n}\n",
        "token_count": 443
    },
    "00414bfa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414bfa(uint param_1)\n\n{\n    int32_t iVar1;\n    uint arg_ch;\n    uint *unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (0 < *(unaff_ESI + 0x28)) {\n        do {\n            iVar1 = *(*(unaff_ESI + 0x2c) + iVar2 * 4);\n            if (unaff_EBX == NULL) {\n                arg_ch = *(*(unaff_ESI + 0x2c8) + 0x10 + iVar1 * 0x14);\n            }\n            else {\n                arg_ch = (***unaff_EBX)(iVar1, *(unaff_ESI + 0x5c));\n            }\n            fcn.00410183(param_1, arg_ch);\n            fcn.00410183(param_1, 0x448910);\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < *(unaff_ESI + 0x28));\n    }\n    fcn.00410183(param_1, 0x443980);\n    return;\n}\n",
        "token_count": 261
    },
    "00414c5a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00414c5a(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_ESI;\n    uint *puVar4;\n    uint var_204h;\n    uint var_1a0h;\n    int32_t var_4h;\n    \n    var_4h = *(unaff_ESI + 0x2c8);\n    puVar4 = &var_204h;\n    for (iVar3 = 0x19; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0x3d003d;\n        puVar4 = puVar4 + 1;\n    }\n    iVar3 = 0;\n    var_1a0h._0_2_ = 0;\n    fcn.00410183(arg_8h, &var_204h);\n    fcn.00410183(arg_8h, 0x443980);\n    if (0 < *(unaff_ESI + 0x28)) {\n        do {\n            iVar1 = *(*(unaff_ESI + 0x2c) + iVar3 * 4);\n            uVar2 = (***arg_ch)(iVar1, *(unaff_ESI + 0x5c));\n            fcn.0044b51f(*(unaff_ESI + 0x60), 0x2000, 0x448914, *(iVar1 * 0x14 + 0x10 + var_4h), uVar2);\n            fcn.00410183(arg_8h, *(unaff_ESI + 0x60));\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < *(unaff_ESI + 0x28));\n    }\n    fcn.00410183(arg_8h, &var_204h);\n    fcn.00410183(arg_8h, 0x443980);\n    fcn.00410183(arg_8h, 0x443980);\n    return;\n}\n",
        "token_count": 475
    },
    "00414d1d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414d1d(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_ESI;\n    int32_t iVar3;\n    uint var_28h;\n    \n    iVar3 = 0;\n    if (0 < *(unaff_ESI + 0x28)) {\n        do {\n            iVar1 = *(*(unaff_ESI + 0x2c) + iVar3 * 4);\n            uVar2 = *(iVar1 * 0x14 + 0xc + *(unaff_ESI + 0x3c));\n            fcn.0044b51f(&var_28h, 0x14, 0x44892c, uVar2, uVar2);\n            uVar2 = (***arg_ch)(iVar1, *(unaff_ESI + 0x60));\n            fcn.0044b51f(*(unaff_ESI + 0x5c), 0x2000, &var_28h, uVar2);\n            fcn.00410183(arg_8h, *(unaff_ESI + 0x5c));\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < *(unaff_ESI + 0x28));\n    }\n    fcn.00410183(arg_8h, 0x443980);\n    return;\n}\n",
        "token_count": 314
    },
    "004150ff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004150ff(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EDI;\n    uint var_200h;\n    \n    fcn.00410183(arg_8h, 0x448aec);\n    iVar2 = 0;\n    if (0 < *(unaff_EDI + 0x28)) {\n        do {\n            var_200h._0_2_ = 0;\n            fcn.0044b531(&var_200h + 2, 0, 0x1fc);\n            iVar1 = *(*(unaff_EDI + 0x2c) + iVar2 * 4);\n            (***arg_ch)(iVar1, *(unaff_EDI + 0x5c));\n            fcn.0041b4cd();\n            fcn.004149d0(*(iVar1 * 0x14 + 0x10 + *(unaff_EDI + 0x3c)));\n            fcn.0044b51f(*(unaff_EDI + 100), 0x2000, 0x448b00, &var_200h, *(unaff_EDI + 0x60), &var_200h);\n            fcn.00410183(arg_8h, *(unaff_EDI + 100));\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < *(unaff_EDI + 0x28));\n    }\n    fcn.00410183(arg_8h, 0x448b1c);\n    return;\n}\n",
        "token_count": 366
    },
    "00415256": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00415256(uint param_1)\n\n{\n    int32_t arg_ch;\n    int32_t iVar1;\n    uint arg_18h;\n    uint arg_14h;\n    int32_t iVar2;\n    int32_t *unaff_ESI;\n    \n    arg_ch = fcn.0044b5b1(-(unaff_ESI[0xb1] * 8 >> 0x20 != 0) | unaff_ESI[0xb1] * 8);\n    iVar2 = 0;\n    if (0 < unaff_ESI[10]) {\n        do {\n            iVar1 = *(unaff_ESI[0xb] + iVar2 * 4) * 0x14;\n            *(arg_ch + 4 + iVar2 * 8) = unaff_ESI[0xf] + iVar1;\n            *(arg_ch + iVar2 * 8) = *(unaff_ESI[0xb2] + 0x10 + iVar1);\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < unaff_ESI[10]);\n    }\n    arg_18h = (**(*unaff_ESI + 0x18))();\n    arg_14h = (**(*unaff_ESI + 0x14))();\n    fcn.0041b6f5(param_1, arg_ch, unaff_ESI[10], arg_14h, arg_18h);\n    fcn.0044b5b7(arg_ch);\n    return;\n}\n",
        "token_count": 331
    },
    "004152d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004152d4(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t *in_ECX;\n    uint var_400h;\n    uint var_200h;\n    \n    var_200h._0_2_ = 0;\n    fcn.0044b531(&var_200h + 2, 0, 0x1fc);\n    var_400h._0_2_ = 0;\n    fcn.0044b531(&var_400h + 2, 0, 0x1fc);\n    fcn.00410183(arg_8h, 0x448b30);\n    uVar1 = (**(*in_ECX + 0x24))();\n    fcn.004149d0(uVar1);\n    fcn.0044b51f(&var_400h, 0xff, 0x448b64, &var_200h);\n    fcn.00410183(arg_8h, &var_400h);\n    return;\n}\n",
        "token_count": 240
    },
    "00415368": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00415368(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t *in_ECX;\n    uint var_400h;\n    uint var_200h;\n    \n    var_200h._0_2_ = 0;\n    fcn.0044b531(&var_200h + 2, 0, 0x1fc);\n    var_400h._0_2_ = 0;\n    fcn.0044b531(&var_400h + 2, 0, 0x1fc);\n    uVar1 = (**(*in_ECX + 0x24))();\n    fcn.004149d0(uVar1);\n    fcn.0044b51f(&var_400h, 0xff, 0x448b74, &var_200h);\n    fcn.00410183(arg_8h, &var_400h);\n    return;\n}\n",
        "token_count": 220
    },
    "00415aff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00415aff(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *unaff_EDI;\n    ushort uStack32772;\n    uchar auStack32770 [16382];\n    ushort uStack16388;\n    uchar auStack16386 [16338];\n    uint uStack48;\n    uint uStack44;\n    uint32_t uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint32_t uStack28;\n    uchar *puStack24;\n    uint32_t uStack20;\n    uint *puStack16;\n    \n    fcn.0044ba9d();\n    puStack16 = 0x3ffe;\n    puStack24 = &stack0xffff7ffe;\n    uStack20 = 0;\n    uStack32772 = 0;\n    uStack28 = 0x415b2a;\n    fcn.0044b531();\n    uStack28 = 0x3ffe;\n    puStack36 = &stack0xffffbffe;\n    uStack32 = 0;\n    uStack16388 = 0;\n    uStack40 = 0x415b3f;\n    fcn.0044b531();\n    uVar1 = *(arg_ch * 4 + 0x451468);\n    uVar3 = uVar1 & 0xfff;\n    puStack16 = arg_8h;\n    puStack24 = 0x415b6f;\n    uStack20 = uVar3;\n    iVar2 = (**(*unaff_EDI + 4))();\n    if (iVar2 == 0xff) {\n        puStack24 = &stack0xffffbffc;\n        uStack32 = 0x415b85;\n        uStack28 = uVar3;\n        uStack32 = (***arg_8h)();\n        puStack36 = &stack0xffff7ffc;\n        uStack44 = 0x415b94;\n        uStack40 = uVar3;\n        uStack44 = (***unaff_EDI)();\n        uStack48 = 0x415b9a;\n        iVar2 = fcn.0044b581();\n    }\n    if ((uVar1 & 0x1000) != 0) {\n        iVar2 = -iVar2;\n    }\n    return iVar2;\n}\n",
        "token_count": 531
    },
    "0041654b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041654b(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint var_848h;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_848h._0_2_ = 0;\n    fcn.0044b531(&var_848h + 2, 0, 0x7fe);\n    var_8h = *0x448ca4;\n    var_4h = *0x448ca8;\n    var_48h = fcn.00413002();\n    var_44h = 0x448cac;\n    var_40h = fcn.00413002();\n    var_3ch = 0x448cac;\n    var_38h = fcn.00413002();\n    var_34h = 0x448cac;\n    var_30h = fcn.00413002();\n    var_2ch = 0x448cb8;\n    var_28h = fcn.00413002();\n    var_24h = 0x448cc4;\n    var_20h = fcn.00413002();\n    var_1ch = 0x448cc4;\n    var_18h = fcn.00413002();\n    var_14h = 0x448ce0;\n    var_10h = fcn.00413002();\n    var_ch = 0x448cb8;\n    fcn.00410d0b(&var_48h, 8);\n    arg_ch_00 = fcn.00413002();\n    fcn.00410b2a(&var_848h, arg_ch_00, &var_8h);\n    return;\n}\n",
        "token_count": 507
    },
    "004166fd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004166fd(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    uint var_210h;\n    uint var_4h;\n    \n    var_4h = *(*(unaff_ESI + 0x690) + 0xc);\n    var_210h._0_2_ = 0;\n    fcn.0044b531(&var_210h + 2, 0, 0x208);\n    iVar1 = fcn.0041654b(unaff_ESI, &var_210h, &var_4h);\n    if (iVar1 != 0) {\n        *(*(unaff_ESI + 0x690) + 0xc) = var_4h;\n        fcn.00416651();\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "00416770": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00416770(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.00414560(&var_4h);\n    if (iVar1 != 0) {\n        iVar1 = (*_fcn.004432f0)(*(unaff_ESI + 0x208));\n        if (iVar1 != 0) {\n            fcn.00410308(var_4h + 0x210);\n        }\n    }\n    fcn.00413ed1();\n    return;\n}\n",
        "token_count": 140
    },
    "00416849": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416849(int32_t arg_8h, uint arg_ch)\n\n{\n    ushort *puVar1;\n    uint var_628h;\n    uint var_620h;\n    uint var_416h;\n    ushort var_20ch;\n    uint var_20ah;\n    \n    if (*(arg_8h + 0x274) == 0) {\n        var_20ch = 0;\n        fcn.0044b531(&var_20ah, 0, 0x208);\n        fcn.00410587(&var_20ch);\n        puVar1 = fcn.0044b5c3(&var_20ch, 0x2e);\n        if (puVar1 != NULL) {\n            *puVar1 = 0;\n        }\n        fcn.0044b519(&var_20ch, 0x448cf4);\n        fcn.0041adbf(&var_20ch, 0x448d00);\n        fcn.0040bdba();\n        fcn.0040a7c4();\n        fcn.00413efb();\n    }\n    return;\n}\n",
        "token_count": 252
    },
    "0041694c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.0041694c(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    uint *puVar2;\n    uint *puVar3;\n    \n    fcn.0044ba9d();\n    fcn.0044b531();\n    fcn.0040bb5d();\n    puVar2 = *(unaff_EBX + 0x690) + 0x14;\n    puVar3 = &stack0x00000a34;\n    for (iVar1 = 0x295; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    iVar1 = fcn.0040a60d();\n    if (iVar1 != 0) {\n        puVar2 = &stack0x00000a30;\n        puVar3 = *(unaff_EBX + 0x690) + 0x14;\n        for (iVar1 = 0x295; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar3 = *puVar2;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n        fcn.0040a9fc();\n    }\n    fcn.00413ed1();\n    fcn.0040a415();\n    return;\n}\n",
        "token_count": 329
    },
    "0041719e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0041719e(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0044b581(0x448d58);\n    if (iVar1 == 0) {\n        return 5;\n    }\n    iVar1 = fcn.0044b581(0x448d68);\n    if (iVar1 == 0) {\n        return 6;\n    }\n    iVar1 = fcn.0044b581(0x448d7c);\n    if (iVar1 == 0) {\n        return 7;\n    }\n    iVar1 = fcn.0044b581(0x448d88);\n    if (iVar1 == 0) {\n        return 2;\n    }\n    iVar1 = fcn.0044b581(0x448d94);\n    if (iVar1 == 0) {\n        return 3;\n    }\n    iVar1 = fcn.0044b581(0x448da8);\n    if (iVar1 == 0) {\n        return 4;\n    }\n    iVar1 = fcn.0044b581(0x448db8);\n    return (-(iVar1 != 0) & 0xfffffff8) + 8;\n}\n",
        "token_count": 273
    },
    "00418033": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418033(uint arg_8h)\n\n{\n    ushort var_418h;\n    uint var_416h;\n    ushort var_20ch;\n    uint var_20ah;\n    \n    fcn.0044b531(&var_416h, 0, 0x208);\n    var_20ch = 0;\n    fcn.0044b531(&var_20ah, 0, 0x208);\n    var_418h = 0;\n    fcn.0041b27d();\n    fcn.004101a7();\n    fcn.0044b519(&var_418h, 0x448e84);\n    var_20ch = 0;\n    fcn.0041b27d();\n    fcn.004101a7();\n    fcn.0044b519(&var_20ch, 0x448ea8);\n    fcn.00417f44(&var_418h, arg_8h, 0);\n    fcn.00417f44(&var_20ch, arg_8h, 1);\n    return;\n}\n",
        "token_count": 245
    },
    "00418504": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00418504(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    ushort var_c48h;\n    uint var_c46h;\n    ushort var_a3ch;\n    uint var_a3ah;\n    int32_t var_830h;\n    uint var_82ch;\n    uint var_828h;\n    uint var_61eh;\n    ushort var_414h;\n    uint var_412h;\n    int16_t var_214h;\n    uint var_212h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_a3ch = 0;\n    fcn.0044b531(&var_a3ah, 0, 0x208);\n    iVar1 = fcn.0044b58d(arg_8h);\n    iVar2 = fcn.0044b58d(0x448f58);\n    if (iVar1 + 1 + iVar2 < 0x104) {\n        fcn.004106b6(arg_8h, 0x448f58);\n    }\n    else {\n        var_a3ch = 0;\n    }\n    iVar1 = fcn.00410555(&var_a3ch);\n    if (iVar1 != 0) {\n        var_8h = 0;\n        var_830h = 0x449598;\n        var_828h._0_2_ = 0;\n        var_61eh._0_2_ = 0;\n        var_82ch = 0;\n        fcn.0044b56f(&var_828h, &var_a3ch);\n        fcn.0044b56f(&var_61eh, 0x448d00);\n        var_414h = 0;\n        fcn.0044b531(&var_412h, 0, 0x1fe);\n        var_214h = 0;\n        fcn.0044b531(&var_212h, 0, 0x208);\n        var_4h = 0;\n        fcn.0044b51f(&var_414h, 0xff, 0x448f74, 0);\n        fcn.0044b56f(&var_61eh, &var_414h);\n        while( true ) {\n            fcn.0041ae91(0x44357c, &var_214h, 0x4434fc, 0x104);\n            (**(var_830h + 8))(0x448f88, &var_4h, 0);\n            if (var_214h == 0) break;\n            fcn.0041056a(0x2f, 0x5c);\n            var_c48h = 0;\n            fcn.0044b531(&var_c46h, 0, 0x208);\n            if (var_4h == 0) {\n                fcn.0044b56f(&var_c48h, &var_214h);\n            }\n            else {\n                iVar1 = fcn.0044b58d(arg_8h);\n                iVar2 = fcn.0044b58d(&var_214h);\n                if (iVar1 + 1 + iVar2 < 0x104) {\n                    fcn.004106b6(arg_8h, &var_214h);\n                }\n                else {\n                    var_c48h = 0;\n                }\n            }\n            fcn.00410f95(&var_c48h, 1);\n            var_8h = var_8h + 1;\n            var_414h = 0;\n            fcn.0044b531(&var_412h, 0, 0x1fe);\n            var_214h = 0;\n            fcn.0044b531(&var_212h, 0, 0x208);\n            var_4h = 0;\n            fcn.0044b51f(&var_414h, 0xff, 0x448f74, var_8h);\n            fcn.0044b56f(&var_61eh, &var_414h);\n        }\n    }\n    return;\n}\n",
        "token_count": 942
    },
    "00418b0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00418b0c(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *unaff_ESI;\n    ushort var_420h;\n    uint var_41eh;\n    int16_t var_210h;\n    uint var_20eh;\n    \n    var_210h = 0;\n    fcn.0044b531(&var_20eh, 0, 0x208);\n    if (arg_8h == 0) {\n        fcn.0040f499();\n    }\n    else {\n        fcn.00410454(arg_8h);\n    }\n    if (var_210h != 0) {\n        (**0x443118)(0x104, unaff_ESI + 8);\n        (*_fcn.004431c0)(&var_210h);\n        var_420h = 0;\n        fcn.0044b531(&var_41eh, 0, 0x208);\n        iVar2 = fcn.0044b58d(0x44803c);\n        iVar3 = fcn.0044b58d(&var_210h);\n        if (iVar2 + 1 + iVar3 < 0x104) {\n            fcn.004106b6(&var_210h, 0x44803c);\n        }\n        else {\n            var_420h = 0;\n        }\n        iVar2 = (*_fcn.00443144)(&var_420h);\n        *unaff_ESI = iVar2;\n        pcVar1 = *0x443170;\n        if (iVar2 == 0) {\n            iVar2 = (**0x443170)(&var_420h, 0, 8);\n            *unaff_ESI = iVar2;\n            if (iVar2 == 0) {\n                fcn.00418ac7();\n                iVar2 = (*pcVar1)(&var_420h, 0, 8);\n                *unaff_ESI = iVar2;\n                if (iVar2 == 0) goto code_r0x00418c89;\n            }\n        }\n        pcVar1 = _fcn.00443108;\n        iVar2 = (*_fcn.00443108)(*unaff_ESI, 0x449164);\n        unaff_ESI[1] = iVar2;\n        iVar2 = (*pcVar1)(*unaff_ESI, 0x449170);\n        unaff_ESI[2] = iVar2;\n        iVar2 = (*pcVar1)(*unaff_ESI, 0x449180);\n        unaff_ESI[3] = iVar2;\n        iVar2 = (*pcVar1)(*unaff_ESI, 0x449198);\n        unaff_ESI[4] = iVar2;\n        iVar2 = (*pcVar1)(*unaff_ESI, 0x4491a8);\n        unaff_ESI[5] = iVar2;\n        iVar2 = (*pcVar1)(*unaff_ESI, 0x4491c0);\n        unaff_ESI[6] = iVar2;\n        iVar2 = (*pcVar1)(*unaff_ESI, 0x4491d4);\n        unaff_ESI[7] = iVar2;\n    }\ncode_r0x00418c89:\n    return *unaff_ESI != 0;\n}\n",
        "token_count": 746
    },
    "00419082": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419082(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    ushort var_210h;\n    uint var_20eh;\n    \n    var_210h = 0;\n    fcn.0044b531(&var_20eh, 0, 0x208);\n    iVar1 = fcn.0044b58d(arg_ch);\n    iVar2 = fcn.0044b58d(0x4492a0);\n    if (iVar1 + 1 + iVar2 < 0x104) {\n        fcn.004106b6(arg_ch, 0x4492a0);\n    }\n    else {\n        var_210h = 0;\n    }\n    iVar1 = fcn.00410555(&var_210h);\n    if (iVar1 != 0) {\n        fcn.0040b853(arg_8h + 0x2e0);\n    }\n    iVar1 = fcn.0044b58d(arg_ch);\n    iVar2 = fcn.0044b58d(0x4492b4);\n    if (iVar1 + 1 + iVar2 < 0x104) {\n        fcn.004106b6(arg_ch, 0x4492b4);\n    }\n    else {\n        var_210h = 0;\n    }\n    iVar1 = fcn.00410555(&var_210h);\n    if (iVar1 != 0) {\n        fcn.0040b853(arg_8h + 0x2e0);\n    }\n    return;\n}\n",
        "token_count": 359
    },
    "004197b7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004197b7(uint arg_8h)\n\n{\n    uint unaff_EDI;\n    uint var_1008h;\n    uint var_e08h;\n    uint var_c08h;\n    uint uStack20;\n    uint *puStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h._2_2_ = unaff_EDI >> 0x10;\n    var_4h = 0x4197c4;\n    fcn.0044ba9d();\n    puStack16 = 0x4197d4;\n    fcn.0040bb34();\n    var_8h = CONCAT22(var_8h._2_2_, 9);\n    puStack16 = 0x4197e5;\n    puStack16 = fcn.0041105d();\n    uStack20 = 0x4197f6;\n    fcn.00410454();\n    puStack16 = 0x4197ff;\n    puStack16 = fcn.0041105d();\n    uStack20 = 0x419810;\n    fcn.00410454();\n    puStack16 = 0x419818;\n    puStack16 = fcn.0041105d();\n    uStack20 = 0x419829;\n    fcn.00410454();\n    puStack16 = &fcn.004197b7::var_1008h;\n    uStack20 = 0x41983e;\n    fcn.00419b94();\n    return;\n}\n",
        "token_count": 382
    },
    "00419844": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.00419844(int32_t arg_8h)\n\n{\n    uint var_1008h;\n    uint var_e08h;\n    uint var_c08h;\n    uint var_408h;\n    uint var_208h;\n    uint uStack40;\n    int32_t iStack36;\n    int32_t iStack32;\n    int32_t iStack28;\n    int32_t iStack24;\n    uint *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0044ba9d();\n    puStack20 = 0x419862;\n    fcn.0040bb34();\n    puStack20 = arg_8h + 0x1000;\n    iStack24 = 0x419884;\n    fcn.00410454();\n    iStack24 = arg_8h + 0x1200;\n    iStack28 = 0x419898;\n    fcn.00410454();\n    iStack28 = arg_8h + 0x1400;\n    iStack32 = 0x4198ac;\n    fcn.00410454();\n    iStack32 = arg_8h + 0x1600;\n    iStack36 = 0x4198c0;\n    fcn.00410454();\n    iStack36 = arg_8h;\n    uStack40 = 0x4198d1;\n    fcn.00410454();\n    puStack20 = &fcn.00419844::var_1008h;\n    iStack24 = 0x4198e8;\n    fcn.00419b94();\n    return;\n}\n",
        "token_count": 395
    },
    "004198ef": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.004198ef(int32_t arg_8h)\n\n{\n    uint var_1008h;\n    uint var_e08h;\n    uint var_c08h;\n    uint var_408h;\n    uint var_208h;\n    uint uStack40;\n    int32_t iStack36;\n    int32_t iStack32;\n    int32_t iStack28;\n    int32_t iStack24;\n    uint *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0044ba9d();\n    puStack20 = 0x41990d;\n    fcn.0040bb34();\n    puStack20 = arg_8h + 0x1400;\n    iStack24 = 0x41992f;\n    fcn.00410454();\n    iStack24 = arg_8h + 0x1600;\n    iStack28 = 0x419943;\n    fcn.00410454();\n    iStack28 = arg_8h + 0x1000;\n    iStack32 = 0x419957;\n    fcn.00410454();\n    iStack32 = arg_8h + 0x1200;\n    iStack36 = 0x41996b;\n    fcn.00410454();\n    iStack36 = arg_8h;\n    uStack40 = 0x41997c;\n    fcn.00410454();\n    puStack20 = &fcn.004198ef::var_1008h;\n    iStack24 = 0x419993;\n    fcn.00419b94();\n    return;\n}\n",
        "token_count": 392
    },
    "0041999a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041999a(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_1004h;\n    uint var_e04h;\n    uint var_c04h;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint *puStack16;\n    uint var_4h;\n    \n    fcn.0044ba9d();\n    puStack16 = 0x4199b6;\n    fcn.0040bb34();\n    puStack16 = arg_10h;\n    uStack20 = 0x4199cf;\n    fcn.00410454();\n    uStack20 = arg_14h;\n    uStack24 = 0x4199e2;\n    fcn.00410454();\n    uStack24 = arg_ch;\n    uStack28 = 0x4199f5;\n    fcn.00410454();\n    puStack16 = &fcn.0041999a::var_1004h;\n    uStack20 = 0x419a06;\n    fcn.00419b94();\n    return;\n}\n",
        "token_count": 271
    },
    "00419a0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00419a0c(uint noname_0, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h)\n\n{\n    uint var_1004h;\n    uint var_e04h;\n    uint var_c04h;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint *puStack16;\n    uint var_4h;\n    \n    fcn.0044ba9d();\n    puStack16 = 0x419a28;\n    fcn.0040bb34();\n    puStack16 = arg_14h;\n    uStack20 = 0x419a41;\n    fcn.00410454();\n    uStack20 = arg_18h;\n    uStack24 = 0x419a54;\n    fcn.00410454();\n    uStack24 = arg_ch;\n    uStack28 = 0x419a67;\n    fcn.00410454();\n    puStack16 = &fcn.00419a0c::var_1004h;\n    uStack20 = 0x419a7c;\n    fcn.00419b94();\n    return 1;\n}\n",
        "token_count": 279
    },
    "00419a85": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00419a85(int32_t arg_8h)\n\n{\n    uint unaff_EDI;\n    uint var_1008h;\n    uint var_e08h;\n    uint var_c08h;\n    uint uStack20;\n    uint *puStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h._2_2_ = unaff_EDI >> 0x10;\n    var_4h = 0x419a92;\n    fcn.0044ba9d();\n    puStack16 = 0x419aa2;\n    fcn.0040bb34();\n    var_8h = CONCAT22(var_8h._2_2_, 10);\n    if (*(arg_8h + 0x14) != 0) {\n        puStack16 = *(*(arg_8h + 0x14) + 0x10);\n        uStack20 = 0x419ac5;\n        fcn.00410454();\n    }\n    if (*(arg_8h + 0x18) != 0) {\n        puStack16 = *(*(arg_8h + 0x18) + 0x10);\n        uStack20 = 0x419ae0;\n        fcn.00410454();\n    }\n    if (*(arg_8h + 0x1c) != 0) {\n        puStack16 = *(*(arg_8h + 0x1c) + 0x10);\n        uStack20 = 0x419afb;\n        fcn.00410454();\n    }\n    puStack16 = &fcn.00419a85::var_1008h;\n    uStack20 = 0x419b10;\n    fcn.00419b94();\n    return;\n}\n",
        "token_count": 438
    },
    "00419b16": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00419b16(uint *arg_8h)\n\n{\n    uint unaff_EDI;\n    uint var_1008h;\n    uint var_e08h;\n    uint var_c08h;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint *puStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h._2_2_ = unaff_EDI >> 0x10;\n    var_4h = 0x419b23;\n    fcn.0044ba9d();\n    puStack16 = 0x419b33;\n    fcn.0040bb34();\n    puStack16 = arg_8h[1];\n    var_8h = CONCAT22(var_8h._2_2_, 2);\n    uStack20 = 0x419b4f;\n    fcn.00410454();\n    uStack20 = arg_8h[2];\n    uStack24 = 0x419b62;\n    fcn.00410454();\n    uStack24 = *arg_8h;\n    uStack28 = 0x419b74;\n    fcn.00410454();\n    puStack16 = &fcn.00419b16::var_1008h;\n    uStack20 = 0x419b8b;\n    fcn.00419b94();\n    return 1;\n}\n",
        "token_count": 358
    },
    "00419e02": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00419e02(void)\n\n{\n    int32_t iVar1;\n    int16_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_20ch;\n    \n    if ((unaff_ESI[1] == 0x3a) || (iVar1 = fcn.0044b57b(unaff_ESI + 2, 0x3a),  iVar1 != 0)) {\n        fcn.0044b56f();\n    }\n    else {\n        iVar1 = fcn.00410285(unaff_ESI, 0x4494f0);\n        if (iVar1 < 0) {\n            if (*unaff_ESI == 0x5c) {\n                var_20ch._0_2_ = 0;\n                fcn.0044b531(&var_20ch + 2, 0, 0x208);\n                fcn.00410730(&var_20ch);\n                fcn.0044b575();\n                *(unaff_EDI + 4) = 0;\n                fcn.0044b519();\n            }\n            else {\n                fcn.0044b56f();\n            }\n        }\n        else {\n            var_20ch._0_2_ = 0;\n            fcn.0044b531(&var_20ch + 2, 0, 0x208);\n            fcn.00410730(&var_20ch);\n            fcn.0044b56f();\n            fcn.0044b519();\n        }\n    }\n    return;\n}\n",
        "token_count": 356
    },
    "0041a108": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0041a108(uint32_t param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    if ((param_1 < *(param_2 + 0x218)) || (*(param_2 + 0x214) + *(param_2 + 0x218) <= param_1)) {\n        uVar1 = 1;\n    }\n    else {\n        *0x4509cc = 1;\n        fcn.0044b575(0x4509d0, param_2, 0x21c);\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 143
    },
    "0041a9d3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041a9d3(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint var_200h;\n    \n    var_200h._0_2_ = 0;\n    fcn.0044b531(&var_200h + 2, 0, 0x1fc);\n    uVar1 = fcn.0044b611(arg_10h, &var_200h, 10, arg_14h);\n    (*_fcn.004431a0)(arg_8h, arg_ch, uVar1);\n    return;\n}\n",
        "token_count": 157
    },
    "0041aa9d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041aa9d(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *arg_8h_00;\n    ushort uStackY16392;\n    uint uStackY48;\n    \n    fcn.0044ba9d();\n    uStackY16392 = 0;\n    if (arg_8h == 0) {\n        fcn.0044b531();\n        iVar2 = (*_fcn.004431ac)();\n        uVar1 = iVar2 != 0;\n        uStackY48 = 0x41ab3b;\n        fcn.00410c8d(arg_8h_00, arg_14h);\n    }\n    else {\n        fcn.0044b531();\n        fcn.00410c04(arg_14h, *arg_8h_00, &stack0xffffbff8);\n        uVar1 = (*_fcn.004431a0)();\n    }\n    return uVar1;\n}\n",
        "token_count": 250
    },
    "0041abc9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0041abc9(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uint var_4h;\n    \n    bVar2 = false;\n    iVar1 = fcn.0041ab74(arg_8h, arg_ch, &var_4h);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0041ab8e(var_4h, arg_10h);\n        bVar2 = iVar1 == 0;\n        (*_fcn.00443010)(var_4h);\n    }\n    return bVar2;\n}\n",
        "token_count": 147
    },
    "0041ac70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ac70(uint arg_8h, uint arg_ch, ulong *arg_10h)\n\n{\n    int32_t *in_ECX;\n    ulong in_stack_00000010;\n    ushort var_600h;\n    uint var_5feh;\n    ushort var_400h;\n    uint var_3feh;\n    ushort var_200h;\n    uint var_1feh;\n    \n    if (in_ECX[1] == 0) {\n        var_600h = 0;\n        fcn.0044b531(&var_5feh, 0, 0x1fe);\n        var_400h = 0;\n        fcn.0044b531(&var_3feh, 0, 0x1fe);\n        var_200h = 0;\n        fcn.0044b531(&var_1feh, 0, 0x1fe);\n        fcn.0044b51f(&var_200h, 0xff, 0x4434ec, arg_ch);\n        fcn.0044b51f(&var_400h, 0xff, &var_200h, in_stack_00000010);\n        (**(*in_ECX + 0x10))(arg_8h, &var_600h, &var_400h, 0xff);\n    }\n    else {\n        var_200h = 0;\n        fcn.0044b531(&var_1feh, 0, 0x1fe);\n        var_400h = 0;\n        fcn.0044b531(&var_3feh, 0, 0x1fe);\n        fcn.0044b51f(&var_400h, 0xff, 0x4434ec, arg_ch);\n        fcn.0044b51f(&var_200h, 0xff, &var_400h, *arg_10h);\n        (**(*in_ECX + 0x10))(arg_8h, &var_200h, 0x4434fc, 0xff);\n    }\n    return;\n}\n",
        "token_count": 471
    },
    "0041adab": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041adab(uint param_1)\n\n{\n    int32_t in_EAX;\n    \n    fcn.0044b56f(in_EAX + 0x212, param_1);\n    return;\n}\n",
        "token_count": 50
    },
    "0041adbf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0041adbf(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t unaff_EDI;\n    uint unaff_retaddr;\n    \n    *(in_EAX + 4) = unaff_EDI;\n    fcn.0044b56f(in_EAX + 8, param_1);\n    if (param_2 == 0) {\n        fcn.0044b56f(in_EAX + 0x212, 0x448d00);\n    }\n    else {\n        fcn.0041adab(param_2);\n    }\n    if (unaff_EDI != 0) {\n        uVar1 = (*_fcn.004430f4)(unaff_retaddr, 0x40000000, 0, 0, 2, 0, 0);\n        (**0x4430e4)(uVar1);\n    }\n    return 1;\n}\n",
        "token_count": 217
    },
    "0041ae91": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0041ae91(int32_t param_1, uint param_2, uint param_3, uint param_4, uint param_5)\n\n{\n    fcn.0041aa20(*(param_1 + 4), param_1 + 0x212, param_2, param_4, param_5, param_1 + 8);\n    return 1;\n}\n",
        "token_count": 90
    },
    "0041aebf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041aebf(uint arg_8h, ushort *arg_ch, uint32_t arg_10h)\n\n{\n    ushort uVar1;\n    int32_t arg_8h_00;\n    int32_t in_ECX;\n    \n    uVar1 = *arg_ch;\n    arg_8h_00 = *(in_ECX + 4);\n    fcn.0041ab43(arg_8h_00, in_ECX + 0x212, arg_8h, arg_10h & 0xffff, in_ECX + 8);\n    if (arg_8h_00 == 0) {\n        *arg_ch = uVar1;\n    }\n    return 1;\n}\n",
        "token_count": 159
    },
    "0041b35e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0041b35e(uint arg_8h, int32_t arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint var_20ch;\n    \n    var_20ch._0_2_ = 0;\n    fcn.0044b531(&var_20ch + 2, 0, 0x208);\n    if (arg_ch == 1) {\n        if ((*arg_14h == 0x5c) && (*(arg_14h + 2) == 0x5c)) {\n            return 0;\n        }\n        uVar3 = 1;\n        uVar2 = 0x467;\n    }\n    else {\n        if (arg_ch != 2) {\n            return 0;\n        }\n        iVar1 = (*_fcn.004431d8)(arg_10h, &var_20ch);\n        if (iVar1 == 0) {\n            return 0;\n        }\n        arg_14h = &var_20ch;\n        uVar3 = 0;\n        uVar2 = 0x468;\n    }\n    (**0x44327c)(arg_8h, uVar2, uVar3, arg_14h);\n    return 0;\n}\n",
        "token_count": 308
    },
    "0041b56c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b56c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uchar auStackY32904 [32768];\n    uint var_84h;\n    uint uStackY52;\n    \n    fcn.0044ba9d();\n    puVar2 = 0x449870;\n    puVar3 = &fcn.0041b56c::var_84h;\n    for (iVar1 = 0x20; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = *puVar2;\n    fcn.0044b51f();\n    uStackY52 = 0x41b5c0;\n    fcn.00410183(arg_8h, &stack0xffff7f78);\n    return;\n}\n",
        "token_count": 246
    },
    "0041b8f2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b8f2(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar1 = param_1 * 4 + 0x451500;\n    *piVar1 = *piVar1 + param_2;\n    piVar2 = param_1 * 4 + 0x451528;\n    if (*piVar2 < *piVar1) {\n        *piVar2 = *piVar1;\n    }\n    return;\n}\n",
        "token_count": 128
    },
    "0041b9e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041b9e4(void)\n\n{\n    int32_t *in_EAX;\n    \n    (**(*in_EAX + 8))();\n    return;\n}\n",
        "token_count": 39
    },
    "0041b9fe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041b9fe(void)\n\n{\n    int32_t *in_EAX;\n    \n    (**(*in_EAX + 0xc))();\n    return;\n}\n",
        "token_count": 39
    },
    "0041ba18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041ba18(void)\n\n{\n    int32_t *in_EAX;\n    \n    (**(*in_EAX + 0x10))();\n    return;\n}\n",
        "token_count": 39
    },
    "0041ba2a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041ba2a(int32_t param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint32_t in_EAX;\n    \n    (**(param_1 + 0x18))(param_1, param_2, param_3, in_EAX & 0x87f3f, param_4);\n    return;\n}\n",
        "token_count": 89
    },
    "0041ba44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0041ba44(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EDI;\n    \n    iVar2 = 7;\n    iVar1 = fcn.0041bf1f(*(unaff_EDI + 4));\n    if (iVar1 != 0) {\n        iVar2 = fcn.0041ba2a(param_1, iVar1, 0);\n        if (iVar2 == 0) {\n            *param_2 = iVar1;\n        }\n        else {\n            fcn.0041c110(iVar1);\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 155
    },
    "0041be3b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041be3b(uint param_1)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    \n    uVar3 = *0x451614;\n    pcVar2 = *0x451610;\n    iVar1 = *0x451500;\n    if (*0x451610 != NULL) {\n        *0x451610 = NULL;\n        fcn.0041bc58(*0x451600);\n        (*pcVar2)(uVar3, iVar1, iVar1 >> 0x1f, param_1);\n        fcn.0041bc4a(*0x451600);\n    }\n    *0x451610 = pcVar2;\n    *0x451614 = uVar3;\n    return;\n}\n",
        "token_count": 172
    },
    "0041c2d3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0041c2d3(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0041bf1f(param_1);\n    if (iVar1 != 0) {\n        fcn.0044b531(iVar1, 0, param_1);\n    }\n    return iVar1;\n}\n",
        "token_count": 80
    },
    "0041c2f7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0041c2f7(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0041c31d(param_1);\n    if (iVar1 != 0) {\n        fcn.0044b531(iVar1, 0, param_1);\n    }\n    return iVar1;\n}\n",
        "token_count": 80
    },
    "0041c49d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041c49d(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *unaff_EDI;\n    \n    uVar1 = fcn.0041cddb(param_2, &stack0x0000000c);\n    fcn.0041c16b(param_1, *unaff_EDI);\n    *unaff_EDI = uVar1;\n    return;\n}\n",
        "token_count": 95
    },
    "0041c500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041c500(void)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    \n    if (0x1c < in_EAX) {\n        uVar1 = in_EAX / 0x1d;\n        in_EAX = in_EAX % 0x1d;\n        do {\n            fcn.0041cc69(0x4441b4, 0x1d);\n            uVar1 = uVar1 - 1;\n        } while (uVar1 != 0);\n    }\n    if (0 < in_EAX) {\n        fcn.0041cc69(0x4441b4, in_EAX);\n    }\n    return;\n}\n",
        "token_count": 158
    },
    "0041ce4b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0041ce4b(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0041cddb(param_2, &stack0x0000000c);\n    fcn.0041c16b();\n    return uVar1;\n}\n",
        "token_count": 70
    },
    "0041ce73": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0041ce73(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_180h;\n    uint var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uchar var_4h;\n    uchar var_3h;\n    uint var_2h;\n    \n    iVar1 = fcn.00449b20();\n    if (iVar1 == 0) {\n        var_18h = &var_180h;\n        var_1ch = 0;\n        var_10h = 0;\n        var_2h._0_1_ = 0;\n        var_4h = 0;\n        var_ch = 0x15e;\n        var_8h = 1000000000;\n        var_3h = 2;\n        var_14h = var_18h;\n        fcn.0041c545(&var_1ch, 0, arg_8h, arg_ch);\n        uVar2 = fcn.0041cd5b();\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 310
    },
    "0041cef1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041cef1(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EDX;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uchar var_4h;\n    uchar var_3h;\n    uint var_2h;\n    \n    if (0 < in_EDX) {\n        var_1ch = 0;\n        var_10h = 0;\n        var_8h = 0;\n        var_2h._0_1_ = 0;\n        var_4h = 0;\n        var_3h = 0;\n        fcn.0041c545(&var_1ch, 0, arg_8h, &arg_ch);\n        fcn.0041cd5b();\n    }\n    return;\n}\n",
        "token_count": 229
    },
    "0041cf3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041cf3c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint var_440h;\n    uint var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uchar var_4h;\n    uchar var_3h;\n    uint var_2h;\n    \n    var_18h = &var_440h;\n    var_1ch = 0;\n    var_10h = 0;\n    var_8h = 0;\n    var_2h._0_1_ = 0;\n    var_4h = 0;\n    var_3h = 0;\n    var_ch = 0x41a;\n    var_14h = var_18h;\n    fcn.0041c545(&var_1ch, 0, arg_ch, arg_10h);\n    uVar1 = fcn.0041cd5b();\n    (*_fcn.0044f0dc)(*0x44f0e0, arg_8h, uVar1);\n    return;\n}\n",
        "token_count": 295
    },
    "0041cfbc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar fcn.0041cfbc(void)\n\n{\n    uchar uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint var_100h;\n    \n    if (*0x450bf8 == '\\0') {\n        *0x450bfa = 0;\n        *0x450bf9 = '\\0';\n        iVar3 = fcn.0041ba9f(0);\n        (**(iVar3 + 0x38))(iVar3, 0x100, &var_100h);\n        iVar3 = 0;\n        do {\n            *(iVar3 + 0x450bfb) = iVar3;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < 0x100);\n        iVar3 = 0;\n        do {\n            *0x450bfa = *0x450bfa + *(&var_100h + iVar3) + *(iVar3 + 0x450bfb);\n            uVar1 = *(*0x450bfa + 0x450bfb);\n            *(*0x450bfa + 0x450bfb) = *(iVar3 + 0x450bfb);\n            *(iVar3 + 0x450bfb) = uVar1;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < 0x100);\n        *0x450bf8 = '\\x01';\n    }\n    *0x450bf9 = *0x450bf9 + 1;\n    cVar2 = *(*0x450bf9 + 0x450bfb);\n    *0x450bfa = *0x450bfa + cVar2;\n    *(*0x450bf9 + 0x450bfb) = *(*0x450bfa + 0x450bfb);\n    *(*0x450bfa + 0x450bfb) = cVar2;\n    return *((*(*0x450bf9 + 0x450bfb) + cVar2) + 0x450bfb);\n}\n",
        "token_count": 446
    },
    "0041d87b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041d87b(uint param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (in_EAX == 0) {\n        uVar2 = 0x44a2c8;\n    }\n    else {\n        if (*(in_EAX + 0x38) == -0x5fd65969) {\n            return 1;\n        }\n        iVar1 = fcn.0041d8b6(param_1);\n        if (iVar1 == 0) {\n            return 0;\n        }\n        uVar2 = 0x44a31c;\n    }\n    fcn.0041cf9b(0x15, 0x44a2ec, uVar2);\n    return 0;\n}\n",
        "token_count": 180
    },
    "0041d8b6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041d8b6(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    \n    iVar1 = *(in_EAX + 0x38);\n    if (((iVar1 != 0x4b771290) && (iVar1 != -0x5fd65969)) && (iVar1 != -0xfc486fa)) {\n        fcn.0041cf9b(0x15, 0x44a2ec, 0x44a328, param_1);\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 134
    },
    "0041dd31": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041dd31(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint var_4h;\n    \n    iVar2 = (**0x4430b8)();\n    pcVar1 = *0x443120;\n    iVar3 = (**0x443120)(iVar2 == 0, 0, arg_8h, 0xffffffff, 0, 0);\n    iVar4 = fcn.0044b5d5(iVar3 << 2);\n    if (iVar4 != 0) {\n        iVar2 = (*pcVar1)(iVar2 == 0, 0, arg_8h, 0xffffffff, iVar4, iVar3 * 2);\n        if (iVar2 == 0) {\n            fcn.0044b5ed(iVar4);\n            iVar4 = 0;\n        }\n        if (iVar4 != 0) {\n            uVar5 = fcn.0041dc70(iVar4);\n            fcn.0044b5ed(iVar4);\n            return uVar5;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 270
    },
    "0041de29": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041de29(uint32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    \n    uVar1 = arg_8h;\n    iVar4 = fcn.0041ddac(arg_14h, arg_18h);\n    uVar3 = arg_10h;\n    iVar2 = arg_ch;\n    if (iVar4 == 0) {\n        iVar4 = (*_fcn.0044314c)(*(uVar1 + 8), arg_ch, arg_10h, &arg_8h, 0);\n        if (iVar4 == 0) {\n            uVar5 = (*_fcn.0044310c)();\n            *(uVar1 + 0x10) = uVar5;\n            uVar5 = 0x10a;\n        }\n        else if (arg_8h < uVar3) {\n            fcn.0044b531(arg_8h + iVar2, 0, uVar3 - arg_8h);\n            uVar5 = 0x20a;\n        }\n        else {\n            uVar5 = 0;\n        }\n    }\n    else {\n        uVar5 = 0xd;\n    }\n    return uVar5;\n}\n",
        "token_count": 323
    },
    "0041df0b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041df0b(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    uint var_4h;\n    \n    uVar4 = CONCAT44(arg_10h, arg_ch);\n    uVar1 = *(arg_8h + 0x20);\n    if (uVar1 != 0) {\n        iVar3 = uVar1 >> 0x1f;\n        uVar4 = fcn.0044b9ed(uVar1 + arg_ch + -1, (iVar3 + arg_10h + CARRY4(uVar1, arg_ch)) - (uVar1 + arg_ch == 0), \n                             uVar1, iVar3);\n        uVar4 = fcn.0044b8cd(uVar4, uVar1, iVar3);\n    }\n    arg_10h = uVar4 >> 0x20;\n    arg_ch = uVar4;\n    iVar3 = fcn.0041ddac(arg_ch, arg_10h);\n    if (iVar3 == 0) {\n        iVar3 = (**0x443078)(*(arg_8h + 8));\n        if (iVar3 != 0) {\n            return 0;\n        }\n        uVar2 = (*_fcn.0044310c)();\n        *(arg_8h + 0x10) = uVar2;\n    }\n    return 0x60a;\n}\n",
        "token_count": 345
    },
    "0041dffb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0041dffb(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int16_t iVar3;\n    int32_t unaff_ESI;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = fcn.0041dbd7();\n    if (iVar1 == 0) {\n        fcn.0041d095(4);\n        iVar3 = (var_4h & 0x7fffffff) % 0x1fd;\n        *(unaff_ESI + 0xe) = iVar3;\n        iVar1 = (**0x44309c)(*(unaff_ESI + 8), iVar3 + 0x40000002, 0, 1, 0);\n    }\n    else {\n        var_ch = 0;\n        var_8h = 0;\n        var_10h = 0x40000002;\n        iVar1 = (**0x4430c4)(*(unaff_ESI + 8), 1, 0, 0x1fe, 0, &var_18h);\n    }\n    if (iVar1 == 0) {\n        uVar2 = (*_fcn.0044310c)();\n        *(unaff_ESI + 0x10) = uVar2;\n    }\n    return iVar1;\n}\n",
        "token_count": 317
    },
    "0041e07f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0041e07f(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    uint uVar2;\n    \n    iVar1 = fcn.0041dbd7();\n    if (iVar1 == 0) {\n        uVar2 = 1;\n        iVar1 = *(unaff_ESI + 0xe) + 0x40000002;\n    }\n    else {\n        uVar2 = 0x1fe;\n        iVar1 = 0x40000002;\n    }\n    iVar1 = (**0x443094)(*(unaff_ESI + 8), iVar1, 0, uVar2, 0);\n    if (iVar1 == 0) {\n        uVar2 = (*_fcn.0044310c)();\n        *(unaff_ESI + 0x10) = uVar2;\n    }\n    return iVar1;\n}\n",
        "token_count": 201
    },
    "0041e315": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041e315(int32_t arg_8h, int32_t arg_ch, uint32_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    \n    if (arg_ch == 1) {\n        uVar1 = *(arg_8h + 0xc);\n    }\n    else {\n        if (arg_ch != 4) {\n            if (arg_ch == 5) {\n                fcn.0041df0b(arg_8h, *arg_10h, arg_10h[1]);\n                return 0;\n            }\n            if (arg_ch != 6) {\n                if (arg_ch == 8) {\n                    return 0;\n                }\n                return 0xc;\n            }\n            *(arg_8h + 0x20) = *arg_10h;\n            return 0;\n        }\n        uVar1 = *(arg_8h + 0x10);\n    }\n    *arg_10h = uVar1;\n    return 0;\n}\n",
        "token_count": 224
    },
    "0041e4a1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0041e4a1(void)\n\n{\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t unaff_EBX;\n    int32_t *piVar4;\n    int32_t iStack8;\n    \n    ppiVar1 = fcn.0041bf75(0x10);\n    if (ppiVar1 == NULL) {\n        return 7;\n    }\n    fcn.0044b531(ppiVar1, 0, 0x10);\n    iVar2 = fcn.0041d157();\n    piVar3 = fcn.0041bf75(iVar2 + 0x57);\n    if (piVar3 == NULL) {\n        fcn.0041c110(ppiVar1);\n        return 7;\n    }\n    fcn.0044b531(piVar3, 0, 0x48);\n    piVar3[1] = piVar3 + 0x12;\n    fcn.0041cef1(0x44a330, *(unaff_EBX + 0x1c));\n    fcn.0041e37a();\n    piVar4 = *0x45162c;\n    if (*0x45162c != NULL) {\n        do {\n            iVar2 = fcn.0041d27e();\n            if (iVar2 == 0) break;\n            piVar4 = piVar4[0x11];\n        } while (piVar4 != NULL);\n        if (piVar4 != NULL) {\n            fcn.0041c110(piVar3);\n            piVar3 = piVar4;\n            goto code_r0x0041e640;\n        }\n    }\n    piVar3[4] = -1;\n    piVar3[0x11] = *0x45162c;\n    *0x45162c = piVar3;\n    iVar2 = fcn.00449b20();\n    if (iVar2 == 0) {\n        iVar2 = (**0x44f048)(0);\n    }\n    else {\n        iVar2 = 0;\n    }\n    *piVar3 = iVar2;\n    if (iVar2 == 0) {\n        iStack8 = 7;\n    }\n    else {\n        iVar2 = fcn.0041ebbb(*(unaff_EBX + 4), piVar3[1], piVar3 + 2, 0x80006, 0);\n        if (iVar2 == 0) {\n            iVar2 = fcn.0041e39a(3, 0x80, 1);\n            if ((iVar2 == 0) && (iVar2 = fcn.0041df0b(piVar3 + 2, 0, 0),  iVar2 != 0)) {\n                iStack8 = 0x120a;\n            }\n            else {\n                fcn.0041e39a(1, 0x80, 1);\n                iStack8 = fcn.0041e39a(2, 0x80, 1);\n                if (iStack8 == 0) {\ncode_r0x0041e640:\n                    *ppiVar1 = piVar3;\n                    piVar3[0xf] = piVar3[0xf] + 1;\n                    *(unaff_EBX + 0x18) = ppiVar1;\n                    fcn.0041e38a();\n                    fcn.0041bc4a(*piVar3);\n                    ppiVar1[1] = piVar3[0x10];\n                    piVar3[0x10] = ppiVar1;\n                    fcn.0041bc58(*piVar3);\n                    return 0;\n                }\n            }\n        }\n        else {\n            iStack8 = fcn.0044a966(0x79a9);\n        }\n    }\n    fcn.0041e39a(1, 0x80, 1);\n    fcn.0041e401(*(unaff_EBX + 4), 0);\n    fcn.0041c110(ppiVar1);\n    fcn.0041c110(0);\n    fcn.0041e38a();\n    return iStack8;\n}\n",
        "token_count": 932
    },
    "0041e9d3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0041e9d3(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    int32_t iVar3;\n    int32_t unaff_EDI;\n    ulong uVar4;\n    uint var_310h;\n    uint var_210h;\n    uint var_108h;\n    \n    if (*0x451638 == 0) {\n        iVar2 = fcn.0041dbd7();\n        if (iVar2 == 0) {\n            (**0x4430d0)(0xe6, &var_210h);\n            iVar2 = fcn.0041dd31(&var_210h);\n        }\n        else {\n            (*_fcn.00443174)(0xe6, &var_310h);\n            iVar2 = fcn.0041dc70(&var_310h);\n        }\n        if (iVar2 == 0) {\n            return 7;\n        }\n        fcn.0041cef1(0x44a338, iVar2);\n        fcn.0044b5ed(iVar2);\n    }\n    else {\n        fcn.0041cef1(0x44a338, *0x451638);\n    }\n    fcn.0041d157();\n    uVar4 = fcn.0041d157();\n    if ((uVar4 >> 0x20) + 0x11 + uVar4 < 0x105) {\n        iVar2 = fcn.0041d157();\n        if (iVar2 != 0) {\n            do {\n                if (*(extraout_ECX + -1 + iVar2) != '\\\\') break;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        *(&var_108h + iVar2) = 0;\n        fcn.0041cef1(0x44a344, &var_108h);\n        iVar2 = fcn.0041d157();\n        fcn.0041d095(0xf);\n        iVar3 = 0xf;\n        do {\n            *(iVar2 + unaff_EDI) = *(*(iVar2 + unaff_EDI) % 0x3e + 0x44f154);\n            iVar2 = iVar2 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n        *(iVar2 + unaff_EDI) = 0;\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 566
    },
    "0041eb0a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041eb0a(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_ch_00;\n    int32_t iVar1;\n    bool bVar2;\n    uint uVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_ch_00 = (*_fcn.0044310c)();\n    var_4h = 0;\n    iVar1 = fcn.0041dbd7();\n    if (iVar1 == 0) {\n        var_ch = 0;\n        iVar1 = (**0x4430c8)(0x1300, 0, arg_ch_00, 0, &var_ch, 0, 0);\n        bVar2 = iVar1 == 0;\n        if (iVar1 == 0) goto code_r0x0041eb86;\n        var_4h = fcn.0041dd31(var_ch);\n        uVar3 = var_ch;\n    }\n    else {\n        var_8h = 0;\n        iVar1 = (**0x443128)(0x1300, 0, arg_ch_00, 0, &var_8h);\n        bVar2 = iVar1 == 0;\n        if (iVar1 == 0) goto code_r0x0041eb86;\n        var_4h = fcn.0041dc70(var_8h);\n        uVar3 = var_8h;\n    }\n    (**0x4430d8)(uVar3);\n    bVar2 = iVar1 == 0;\ncode_r0x0041eb86:\n    if (bVar2) {\n        fcn.0041cef1(0x44a350, arg_ch_00);\n    }\n    else {\n        fcn.0041cef1(0x44a338, var_4h);\n        fcn.0044b5ed(var_4h);\n    }\n    return 0;\n}\n",
        "token_count": 429
    },
    "0041eebc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041eebc(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t var_8h;\n    uint var_4h;\n    \n    uVar3 = fcn.0041e99c(arg_ch);\n    iVar4 = fcn.0041dbd7();\n    pcVar2 = *0x4430b4;\n    pcVar1 = *0x44308c;\n    if (iVar4 == 0) {\n        iVar4 = (**0x44308c)(uVar3, 0, 0, 0);\n        var_8h = fcn.0044b5d5(iVar4 + 3);\n        if (var_8h == 0) goto code_r0x0041ef00;\n        (*pcVar1)(uVar3, iVar4 + 3, var_8h, 0);\n        fcn.0044b5ed(uVar3);\n        iVar4 = fcn.0041dd31(var_8h);\n    }\n    else {\n        iVar4 = (**0x4430b4)();\n        var_8h = fcn.0044b5d5((iVar4 + 3) * 2);\n        if (var_8h == 0) {\ncode_r0x0041ef00:\n            fcn.0044b5ed(uVar3);\n            return 7;\n        }\n        (*pcVar2)(uVar3, iVar4 + 3, var_8h, 0);\n        fcn.0044b5ed(uVar3);\n        iVar4 = fcn.0041dc70(var_8h);\n    }\n    fcn.0044b5ed(var_8h);\n    if (iVar4 == 0) {\n        return 7;\n    }\n    fcn.0041cef1(0x44a338, iVar4);\n    fcn.0044b5ed(iVar4);\n    return 0;\n}\n",
        "token_count": 469
    },
    "0041ef94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041ef94(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    int16_t *piVar5;\n    uint var_110h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0x200;\n    iVar3 = fcn.0041eebc(arg_8h, arg_ch, 0x104, &var_110h);\n    if (iVar3 == 0) {\n        piVar4 = fcn.0041e99c(&var_110h);\n        if (piVar4 != NULL) {\n            iVar3 = fcn.0041dbd7();\n            if (iVar3 == 0) {\n                cVar1 = *piVar4;\n                piVar5 = piVar4;\n                while (cVar1 != '\\0') {\n                    if (*piVar5 == '\\\\') {\n                        *piVar5 = 0;\n                        break;\n                    }\n                    piVar5 = piVar5 + 1;\n                    cVar1 = *piVar5;\n                }\n                iVar3 = (**0x4430ac)(piVar4, &var_4h, &var_8h, &var_4h, &var_4h);\n            }\n            else {\n                iVar2 = *piVar4;\n                piVar5 = piVar4;\n                while (iVar2 != 0) {\n                    if (*piVar5 == 0x5c) {\n                        *piVar5 = 0;\n                        break;\n                    }\n                    piVar5 = piVar5 + 1;\n                    iVar2 = *piVar5;\n                }\n                iVar3 = (**0x4430b0)(piVar4, &var_4h, &var_8h, &var_4h, &var_4h);\n            }\n            fcn.0044b5ed(piVar4);\n            if (iVar3 != 0) {\n                return var_8h;\n            }\n        }\n        var_8h = 0x200;\n    }\n    return var_8h;\n}\n",
        "token_count": 483
    },
    "0041f058": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041f058(uint noname_0, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_10h;\n    uint var_8h;\n    \n    iVar2 = arg_10h;\n    uVar1 = arg_ch;\n    iVar3 = 0;\n    if (0xf < arg_ch) {\n        (**0x4430c0)(&var_10h);\n        iVar3 = 0x10;\n        fcn.0044b575(iVar2, &var_10h, 0x10);\n    }\n    if (3 < uVar1 - iVar3) {\n        arg_ch = (**0x44319c)();\n        fcn.0044b575(iVar3 + iVar2, &arg_ch, 4);\n        iVar3 = iVar3 + 4;\n    }\n    if (3 < uVar1 - iVar3) {\n        arg_ch = (**0x4430a0)();\n        fcn.0044b575(iVar3 + iVar2, &arg_ch, 4);\n        iVar3 = iVar3 + 4;\n    }\n    if (7 < uVar1 - iVar3) {\n        (**0x44306c)(&var_8h);\n        fcn.0044b575(iVar3 + iVar2, &var_8h, 8);\n        iVar3 = iVar3 + 8;\n    }\n    return iVar3;\n}\n",
        "token_count": 340
    },
    "0041f129": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041f129(uint noname_0, uint *arg_ch)\n\n{\n    int64_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    (*_fcn.004430cc)(&var_8h);\n    iVar1 = fcn.0044b8cd(var_4h, 0, 0, 1);\n    iVar1 = fcn.0044b9ed(iVar1 + -0xc, 10000, 0);\n    *arg_ch = iVar1 + 0xb5310d9cba00;\n    arg_ch[1] = iVar1 + 0xb5310d9cba00 >> 0x20;\n    return 0;\n}\n",
        "token_count": 162
    },
    "0041f1bd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0041f1bd(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint extraout_EDX;\n    \n    fcn.0044b531(0x451ce0, 0, 0x24);\n    (*_fcn.0044307c)(0x451ce0);\n    iVar1 = fcn.00449b20();\n    if (iVar1 == 0) {\n        uVar2 = fcn.0041bc38(2);\n        fcn.0041bc4a(uVar2);\n        fcn.0041bafd();\n        *0x44f1a4 = *0x4514fc;\n        *0x4514fc = extraout_EDX;\n        fcn.0041bc58(uVar2);\n    }\n    return 0;\n}\n",
        "token_count": 182
    },
    "0041f787": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041f787(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_80h;\n    uint var_4h;\n    \n    iVar2 = *param_2;\n    while (iVar2 != 0) {\n        *(iVar2 + 8) = *(iVar2 + 0x1c);\n        iVar2 = *(iVar2 + 0x1c);\n    }\n    iVar2 = *param_2;\n    fcn.0044b531(&var_80h, 0, 0x80);\n    do {\n        if (iVar2 == 0) {\n            iVar2 = 1;\n            do {\n                fcn.0041f6c7();\n                iVar2 = iVar2 + 1;\n            } while (iVar2 < 0x20);\n            return;\n        }\n        iVar1 = *(iVar2 + 8);\n        iVar3 = 0;\n        *(iVar2 + 8) = 0;\n        do {\n            if ((&var_80h)[iVar3] == 0) {\n                (&var_80h)[iVar3] = iVar2;\n                break;\n            }\n            iVar2 = fcn.0041f6c7();\n            (&var_80h)[iVar3] = 0;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < 0x1f);\n        iVar2 = iVar1;\n        if (iVar3 == 0x1f) {\n            var_4h = fcn.0041f6c7();\n        }\n    } while( true );\n}\n",
        "token_count": 372
    },
    "0041f811": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.0041f811(void)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    \n    fcn.0041b90c();\n    if (in_EAX <= *0x450d80) {\n        fcn.0041bc4a(*0x450d94);\n        puVar1 = *0x450d9c;\n        if (*0x450d9c != NULL) {\n            *0x450d9c = **0x450d9c;\n            *0x450d98 = *0x450d98 + -1;\n            *0x450da0 = *0x450d98 < *0x450d88;\n            fcn.0041b8f2();\n        }\n        fcn.0041bc58(*0x450d94);\n        if (puVar1 != NULL) {\n            return puVar1;\n        }\n    }\n    puVar1 = fcn.0041bf1f(in_EAX);\n    if (puVar1 != NULL) {\n        (*_fcn.0044f02c)(puVar1);\n        fcn.0041bc4a(*0x450d94);\n        fcn.0041b8f2();\n        fcn.0041bc58(*0x450d94);\n    }\n    return puVar1;\n}\n",
        "token_count": 294
    },
    "0041f8b9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041f8b9(void)\n\n{\n    uint *unaff_ESI;\n    \n    if (unaff_ESI != NULL) {\n        if ((*0x450d8c <= unaff_ESI) && (unaff_ESI < *0x450d90)) {\n            fcn.0041bc4a(*0x450d94);\n            fcn.0041b8f2();\n            *unaff_ESI = *0x450d9c;\n            *0x450d98 = *0x450d98 + 1;\n            *0x450da0 = *0x450d98 < *0x450d88;\n            *0x450d9c = unaff_ESI;\n            fcn.0041bc58(*0x450d94);\n            return;\n        }\n        (*_fcn.0044f02c)();\n        fcn.0041bc4a(*0x450d94);\n        fcn.0041b8f2();\n        fcn.0041bc58(*0x450d94);\n        fcn.0041c110();\n    }\n    return;\n}\n",
        "token_count": 248
    },
    "0041fbb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0041fbb0(uint arg_8h, int32_t arg_ch)\n\n{\n    bool bVar1;\n    uint *puVar2;\n    char cVar3;\n    uint *puVar4;\n    uint var_4h;\n    \n    bVar1 = 0 < *0x44f00c;\n    cVar3 = bVar1 * '\\x1c' + ',';\n    puVar2 = fcn.0041bf75(cVar3);\n    if (puVar2 != NULL) {\n        fcn.0044b531(puVar2, 0, cVar3);\n        if (bVar1) {\n            puVar4 = puVar2 + 0xb;\n            puVar2[0xe] = 10;\n        }\n        else {\n            puVar4 = 0x450d60;\n        }\n        puVar2[1] = arg_8h;\n        *puVar2 = puVar4;\n        puVar2[2] = arg_ch != 0;\n        if (arg_ch != 0) {\n            puVar2[3] = 10;\n            fcn.0041bc4a(*puVar4);\n            puVar4[2] = puVar4[2] + puVar2[3];\n            puVar4[3] = (puVar4[1] - puVar4[2]) + 10;\n            fcn.0041bc58(*puVar4);\n        }\n    }\n    return puVar2;\n}\n",
        "token_count": 334
    },
    "00420130": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420130(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *arg_ch_00;\n    int32_t iVar2;\n    \n    arg_ch_00 = arg_ch;\n    iVar1 = arg_8h;\n    do {\n        iVar2 = iVar1;\n        if (*(iVar2 + 0xc) == 0) {\n            *arg_ch_00 = iVar2;\n        }\n        else {\n            fcn.00420130(*(iVar2 + 0xc), arg_ch_00, &arg_8h);\n            *(arg_8h + 8) = iVar2;\n        }\n        arg_ch_00 = iVar2 + 8;\n        iVar1 = *arg_ch_00;\n    } while (*arg_ch_00 != 0);\n    *arg_10h = iVar2;\n    return;\n}\n",
        "token_count": 208
    },
    "004202f2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004202f2(uint arg_8h, uint arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    iVar1 = fcn.0041b9e4(&var_4h, 4, arg_ch, arg_10h);\n    if (iVar1 == 0) {\n        uVar2 = fcn.0041d7cc();\n        *arg_14h = uVar2;\n    }\n    return iVar1;\n}\n",
        "token_count": 131
    },
    "00420326": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420326(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.0041d7e6();\n    fcn.0041b9fe(uVar1, 4, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 84
    },
    "004204ab": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004204ab(void)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int64_t iVar3;\n    \n    uVar1 = *(in_EAX + 0x48);\n    uVar2 = 0;\n    if ((uVar1 | *(in_EAX + 0x4c)) != 0) {\n        uVar2 = *(in_EAX + 0x7c);\n        iVar3 = fcn.0044b9ed(uVar1 - 1, *(in_EAX + 0x4c) - (uVar1 == 0), uVar2, 0);\n        uVar2 = fcn.0044b8cd(iVar3 + 1, uVar2, 0);\n    }\n    return uVar2;\n}\n",
        "token_count": 185
    },
    "004204e7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004204e7(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t unaff_ESI;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_4h;\n    \n    iVar2 = 0;\n    if ((*(unaff_ESI + 0x48) | *(unaff_ESI + 0x4c)) != 0) {\n        var_4h = *(unaff_ESI + 0x8c);\n        uVar1 = *(unaff_ESI + 0x88);\n        if ((arg_8h == 0) && ((uVar1 | var_4h) != 0)) {\n            iVar2 = (**(**(unaff_ESI + 0x40) + 0xc))(*(unaff_ESI + 0x40), 0x4442a8, 0x1c, 0, 0);\n        }\n        else {\n            iVar2 = fcn.0041ba18(0, 0);\n        }\n        if (iVar2 == 0) {\n            if ((*(unaff_ESI + 8) == '\\0') &&\n               (iVar2 = (**(**(unaff_ESI + 0x40) + 0x14))(*(unaff_ESI + 0x40), *(unaff_ESI + 0xb) | 0x10),  iVar2 != 0))\n            {\n                return iVar2;\n            }\n            if ((((-1 < var_4h) &&\n                 (((0 < var_4h || (uVar1 != 0)) &&\n                  (iVar2 = (**(**(unaff_ESI + 0x40) + 0x18))(*(unaff_ESI + 0x40), &var_10h),  iVar2 == 0)))) &&\n                (var_4h <= var_ch)) && ((var_4h < var_ch || (uVar1 < var_10h)))) {\n                iVar2 = fcn.0041ba18(uVar1, var_4h);\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 485
    },
    "004209c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004209c8(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0041f49f(arg_ch, 0, &arg_8h);\n    return arg_8h;\n}\n",
        "token_count": 51
    },
    "00420cbd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00420cbd(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(param_1 + 0x30);\n    iVar1 = *(param_1 + 0x80);\n    while (iVar1 = iVar1 + -200,  0 < iVar1) {\n        iVar2 = iVar2 + *(iVar1 + param_2);\n    }\n    return iVar2;\n}\n",
        "token_count": 114
    },
    "004227ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004227ac(uint arg_8h, uint arg_ch)\n\n{\n    uint var_4h;\n    \n    var_4h = 0;\n    fcn.0041f49f(arg_ch, 0, &var_4h);\n    return var_4h;\n}\n",
        "token_count": 67
    },
    "00422c2f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00422c2f(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EDI;\n    uint var_4h;\n    \n    iVar1 = 0;\n    if (*(unaff_EDI + 0x18) != 0) {\n        iVar1 = fcn.0042268e(unaff_EDI, 1, &var_4h, 0);\n        if (iVar1 == 0) {\n            iVar1 = fcn.00422ad1();\n            if (iVar1 == 0) {\n                fcn.004215c9();\n                *(unaff_EDI + 0x11) = 1;\n            }\n        }\n        fcn.004227d5();\n    }\n    return iVar1;\n}\n",
        "token_count": 170
    },
    "00422c79": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00422c79(void)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (*(in_EAX + 8) == '\\0') {\n        var_4h = (**(**(in_EAX + 0x3c) + 0x14))(*(in_EAX + 0x3c), *(in_EAX + 0xb));\n    }\n    else {\n        piVar1 = *(in_EAX + 0x3c);\n        if (*piVar1 != 0) {\n            (**(*piVar1 + 0x28))(piVar1, 8, &var_4h);\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 175
    },
    "00423161": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00423161(int32_t param_1)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t var_4h;\n    \n    var_4h = param_1;\n    if (in_EAX[0x2b] == 0) {\n        var_4h = 0;\n        iVar1 = fcn.00420364();\n        if (iVar1 != 0) {\n            return;\n        }\n        iVar1 = (**(*in_EAX + 0x20))(*in_EAX, in_EAX[0x2c], 0, &var_4h);\n        if (iVar1 != 0) {\n            return;\n        }\n        if (var_4h != 0) {\n            iVar1 = fcn.004230ea();\n        }\n        if (iVar1 != 0) {\n            return;\n        }\n        if (in_EAX[0x2b] == 0) {\n            return;\n        }\n    }\n    iVar1 = fcn.004230c9();\n    if (iVar1 == 0) {\n        fcn.00424048(*(in_EAX + 10), in_EAX[0x20], in_EAX[0x29]);\n        in_EAX[0x2b] = 0;\n    }\n    return;\n}\n",
        "token_count": 296
    },
    "00423363": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00423363(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t unaff_ESI;\n    \n    iVar2 = **(unaff_ESI + 0x14);\n    puVar1 = unaff_ESI + 0x24;\n    *(unaff_ESI + 0x30) = 1;\n    *puVar1 = 0x2de218;\n    fcn.004232a7(1, unaff_ESI + 0x4c);\n    fcn.0044b575(iVar2 + 0x30, puVar1, 0x30);\n    fcn.00423352();\n    fcn.0044b575(iVar2, puVar1, 0x30);\n    return;\n}\n",
        "token_count": 176
    },
    "004233ab": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004233ab(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t arg_8h_00;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    uint var_4h;\n    \n    fcn.0041d7e6();\n    fcn.0041d7e6();\n    fcn.0044b575(unaff_ESI + 8, unaff_EBX + 0x44, 8);\n    arg_8h_00 = *(unaff_EBX + 0x31) == '\\0';\n    fcn.004232a7(arg_8h_00, unaff_EBX + 0x3c);\n    fcn.004232a7(arg_8h_00, unaff_EBX + 0x3c);\n    fcn.0041d7e6();\n    fcn.0041d7e6();\n    return;\n}\n",
        "token_count": 210
    },
    "00423419": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00423419(int32_t *arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    int32_t *arg_ch_00;\n    int32_t iVar1;\n    uint32_t arg_8h_00;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_ch_00 = unaff_ESI + 0x3c;\n    iVar1 = fcn.0044b5ab(unaff_ESI + 0x44, unaff_EBX + 8, 8);\n    if ((iVar1 == 0) && (iVar1 = fcn.0041d7cc(),  iVar1 != 0)) {\n        arg_8h_00 = *(unaff_ESI + 0x31) == '\\0';\n        fcn.004232a7(arg_8h_00, arg_ch_00);\n        fcn.004232a7(arg_8h_00, arg_ch_00);\n        iVar2 = fcn.0041d7cc();\n        if ((*arg_ch_00 == iVar2) && (iVar2 = fcn.0041d7cc(),  *(unaff_ESI + 0x40) == iVar2)) {\n            *arg_8h = iVar1;\n            uVar3 = fcn.0041d7cc();\n            *arg_ch = uVar3;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 352
    },
    "00423ad4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00423ad4(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint16_t uVar4;\n    int32_t unaff_EDI;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar3 = 0;\n    iVar2 = 0;\n    var_4h = 0;\n    while ((var_4h < *arg_10h || (iVar2 < arg_8h))) {\n        if ((iVar2 < arg_8h) &&\n           ((*arg_10h <= var_4h || (*(in_ECX + *(unaff_EDI + iVar2 * 2) * 4) < *(in_ECX + *(*arg_ch + var_4h * 2) * 4)))\n           )) {\n            uVar4 = *(unaff_EDI + iVar2 * 2);\n            iVar2 = iVar2 + 1;\n        }\n        else {\n            uVar4 = *(*arg_ch + var_4h * 2);\n            var_4h = var_4h + 1;\n        }\n        iVar1 = *(in_ECX + uVar4 * 4);\n        *(arg_14h + iVar3 * 2) = uVar4;\n        iVar3 = iVar3 + 1;\n        if ((iVar2 < arg_8h) && (*(in_ECX + *(unaff_EDI + iVar2 * 2) * 4) == iVar1)) {\n            iVar2 = iVar2 + 1;\n        }\n    }\n    *arg_ch = unaff_EDI;\n    *arg_10h = iVar3;\n    fcn.0044b575();\n    return;\n}\n",
        "token_count": 418
    },
    "0042442a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042442a(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.004245d7();\n    if (-1 < *(in_EAX + 0x1c)) {\n        fcn.004234c9(*(in_EAX + 0x1c) + 3);\n        *(in_EAX + 0x1c) = 0xffff;\n    }\n    return;\n}\n",
        "token_count": 93
    },
    "00424ad1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00424ad1(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    \n    if (param_1 == 0) {\n        if (*(unaff_ESI + 0x1e) == '\\0') {\n            return false;\n        }\n        *(unaff_ESI + 0x1e) = 0;\n        iVar1 = fcn.004234ab(*(unaff_ESI + 0x1c) + 3);\n        if (iVar1 != 0) {\n            *(unaff_ESI + 0x1e) = 1;\n        }\n    }\n    else if (0 < param_1) {\n        fcn.004234c9(*(unaff_ESI + 0x1c) + 3);\n        *(unaff_ESI + 0x1e) = 1;\n        return true;\n    }\n    return *(unaff_ESI + 0x1e) == '\\0';\n}\n",
        "token_count": 221
    },
    "00424e0d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00424e0d(int32_t param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    \n    puVar1 = *(param_1 + 0xc) + *(param_1 + 0x40) + param_2 * 2;\n    fcn.00424cec((CONCAT11(*puVar1, puVar1[1]) & *(param_1 + 0x12)) + *(param_1 + 0x40));\n    return;\n}\n",
        "token_count": 116
    },
    "004256d7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004256d7(int32_t param_1)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    \n    iVar1 = *(param_1 + 4);\n    if (((iVar1 + 0x198 != NULL) && (pcVar2 = *(iVar1 + 0x198),  pcVar2 != NULL)) && (-1 < *(iVar1 + 0x1a0))) {\n        iVar3 = (*pcVar2)(*(iVar1 + 0x19c), *(iVar1 + 0x1a0));\n        if (iVar3 == 0) {\n            *(iVar1 + 0x1a0) = 0xffffffff;\n            return 0;\n        }\n        *(iVar1 + 0x1a0) = *(iVar1 + 0x1a0) + 1;\n        return iVar3;\n    }\n    return 0;\n}\n",
        "token_count": 209
    },
    "00427547": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427547(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint16_t *puVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    uchar *puVar6;\n    int32_t iVar7;\n    int32_t unaff_ESI;\n    int32_t iVar8;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = *(unaff_ESI + 5);\n    iVar3 = *(unaff_ESI + 0x40);\n    iVar4 = *(*(unaff_ESI + 0x3c) + 0x24);\n    puVar6 = *(unaff_ESI + 0xc) + iVar3 + arg_8h * 2;\n    iVar7 = iVar4;\n    for (iVar8 = arg_8h + -1; -1 < iVar8; iVar8 = iVar8 + -1) {\n        puVar1 = arg_10h + iVar8 * 2;\n        iVar7 = iVar7 - *puVar1;\n        puVar5 = puVar6 + -1;\n        puVar6 = puVar6 + -2;\n        *puVar6 = iVar7 >> 8;\n        *puVar5 = iVar7;\n        fcn.0044b575(iVar7 + iVar3, *(arg_ch + iVar8 * 4), *puVar1);\n    }\n    iVar3 = uVar2 + iVar3;\n    *(iVar3 + 3) = arg_8h >> 8;\n    *(iVar3 + 5) = iVar7 >> 8;\n    *(iVar3 + 6) = iVar7;\n    *(iVar3 + 4) = arg_8h;\n    *(unaff_ESI + 0xe) = *(unaff_ESI + 0xe) + ((iVar7 + arg_8h * -2) - iVar4);\n    *(unaff_ESI + 0x10) = arg_8h;\n    return;\n}\n",
        "token_count": 486
    },
    "00428564": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00428564(uint param_1, uint param_2)\n\n{\n    uint arg_8h;\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    arg_8h = *(in_EAX + 4);\n    fcn.00424b22(0, 0, 1);\n    iVar1 = fcn.00424bfa(0);\n    if (iVar1 == 0) {\n        fcn.0042844d(arg_8h, param_1, 0, param_2);\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "00428d7e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n\nvoid fcn.00428d7e(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t unaff_EDI;\n    uint var_30h;\n    uint var_2ch;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    \n    fcn.0044b531(&var_30h, 0, 0x30);\n    var_1ch = *in_EAX;\n    var_20h = 1;\n    fcn.00428901();\n    iVar1 = fcn.00428c95();\n    if (iVar1 == 0) {\n        *(*(unaff_EDI + 4) + 0x11) = 0;\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "00428ed0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00428ed0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(in_EAX + 0x1c) & 0x4000) != 0) {\n        iVar1 = fcn.00428dc3(1);\n        if (iVar1 != 0) {\n            return 7;\n        }\n        fcn.0044b531(*(in_EAX + 4) + *(in_EAX + 0x18), 0, *(in_EAX + 0x10));\n        *(in_EAX + 0x18) = *(in_EAX + 0x18) + *(in_EAX + 0x10);\n        *(in_EAX + 0x1c) = *(in_EAX + 0x1c) & 0xbdff;\n    }\n    return 0;\n}\n",
        "token_count": 196
    },
    "00428f63": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00428f63(void)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint arg_8h;\n    \n    uVar1 = *(in_EAX + 0x1c);\n    iVar2 = fcn.00428dc3(0);\n    if (iVar2 == 0) {\n        if ((uVar1 & 4) == 0) {\n            uVar3 = *(in_EAX + 8);\n            arg_8h = 0x44a3bc;\n        }\n        else {\n            uVar3 = *(in_EAX + 0x10);\n            arg_8h = 0x44a3b4;\n        }\n        fcn.0041cef1(arg_8h, uVar3);\n        uVar3 = fcn.0041d157();\n        *(in_EAX + 0x1c) = *(in_EAX + 0x1c) | 0x202;\n        *(in_EAX + 0x18) = uVar3;\n        *(in_EAX + 0x1f) = 1;\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 7;\n    }\n    return uVar3;\n}\n",
        "token_count": 290
    },
    "00428fcd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint fcn.00428fcd(void)\n\n{\n    uint uVar1;\n    uint *unaff_ESI;\n    int32_t unaff_EDI;\n    uint uStack20;\n    \n    uVar1 = 0;\n    if ((unaff_EDI != 0) && (*(unaff_EDI + 0x14) != 0)) {\n        fcn.0044b531(&stack0xffffffb8, 0, 0x40);\n        (**(unaff_EDI + 0x14))(&stack0xffffffb8);\n        fcn.0041c16b(*unaff_ESI, unaff_ESI[9]);\n        fcn.0044b575();\n        uVar1 = uStack20;\n    }\n    return uVar1;\n}\n",
        "token_count": 170
    },
    "0042921c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042921c(void)\n\n{\n    int32_t *piVar1;\n    int32_t unaff_EDI;\n    \n    if ((*(unaff_EDI + 0x1c) & 0x40) != 0) {\n        piVar1 = *(unaff_EDI + 0x10);\n        piVar1[0xf] = *(*piVar1 + 0xd4);\n        *(*piVar1 + 0xd4) = piVar1;\n    }\n    if ((*(unaff_EDI + 0x1c) & 0x20) != 0) {\n        fcn.0041ffb0();\n    }\n    *(unaff_EDI + 0x1c) = *(unaff_EDI + 0x1c) & 0xbf01 | 1;\n    *(unaff_EDI + 0x1e) = 5;\n    return;\n}\n",
        "token_count": 203
    },
    "00429328": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00429328(uint16_t param_1)\n\n{\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    \n    fcn.0042902d();\n    fcn.0044b575();\n    *(unaff_ESI + 0x20) = 0;\n    if ((*(unaff_EDI + 0x1c) & 0x800) == 0) {\n        *(unaff_ESI + 0x1c) = *(unaff_ESI + 0x1c) & 0xe3ff | param_1;\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "00429359": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00429359(void)\n\n{\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    uint uVar1;\n    \n    uVar1 = 0;\n    fcn.0042902d();\n    fcn.0044b575();\n    *(unaff_ESI + 0x1c) = *(unaff_ESI + 0x1c) & 0xfbff;\n    if (((*(unaff_ESI + 0x1c) & 0x12) != 0) && ((*(unaff_EBX + 0x1c) & 0x800) == 0)) {\n        *(unaff_ESI + 0x1c) = *(unaff_ESI + 0x1c) | 0x1000;\n        uVar1 = fcn.00428e7d();\n    }\n    return uVar1;\n}\n",
        "token_count": 200
    },
    "0042939a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042939a(uint param_1)\n\n{\n    int32_t unaff_ESI;\n    \n    fcn.0042908c(param_1);\n    fcn.0044b575(param_1);\n    *(unaff_ESI + 0x20) = 0;\n    *(unaff_ESI + 0x24) = 0;\n    *(unaff_ESI + 0x1c) = 1;\n    return;\n}\n",
        "token_count": 102
    },
    "00429a4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00429a4c(void)\n\n{\n    uint *unaff_ESI;\n    \n    if (unaff_ESI != NULL) {\n        fcn.0042908c(unaff_ESI);\n        fcn.0041c16b(*unaff_ESI);\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "00429a62": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00429a62(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    \n    if ((*(unaff_ESI + 0x1c) & 0x10) == 0) {\n        iVar1 = fcn.00429799();\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    iVar1 = *(unaff_ESI + 0x18);\n    if ((*(unaff_ESI + 0x1c) & 0x4000) != 0) {\n        iVar1 = iVar1 + *(unaff_ESI + 0x10);\n    }\n    return iVar1;\n}\n",
        "token_count": 155
    },
    "00429b6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t fcn.00429b6c(uchar param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    \n    iVar1 = *(in_EAX + 0x1c);\n    if ((*(in_EAX + 0x20) == iVar1 || *(in_EAX + 0x20) < iVar1) && (iVar2 = fcn.00429b25(),  iVar2 != 0)) {\n        return 1;\n    }\n    *(in_EAX + 0x1c) = *(in_EAX + 0x1c) + 1;\n    puVar3 = iVar1 * 0x14 + *(in_EAX + 4);\n    *(puVar3 + 4) = param_2;\n    *puVar3 = param_1;\n    *(puVar3 + 8) = param_3;\n    puVar3[3] = 0;\n    *(puVar3 + 0xc) = param_4;\n    *(puVar3 + 0x10) = 0;\n    puVar3[1] = 0;\n    *(in_EAX + 100) = 0;\n    return iVar1;\n}\n",
        "token_count": 296
    },
    "00429bbf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00429bbf(uint param_1, uint param_2)\n\n{\n    fcn.00429b6c(param_2, 0, 0, 0);\n    return;\n}\n",
        "token_count": 46
    },
    "00429bd5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00429bd5(uint param_1, uint param_2)\n\n{\n    fcn.00429b6c(param_1, param_2, 0, 0);\n    return;\n}\n",
        "token_count": 47
    },
    "00429bea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00429bea(uint param_1, uint param_2, uint param_3)\n\n{\n    fcn.00429b6c(param_1, param_2, param_3, 0);\n    return;\n}\n",
        "token_count": 53
    },
    "00429c01": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00429c01(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00429b6c(arg_ch, arg_10h, arg_14h, arg_18h);\n    fcn.00429f87(arg_8h, arg_1ch, arg_20h);\n    return uVar1;\n}\n",
        "token_count": 120
    },
    "00429c31": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00429c31(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00429b6c(arg_ch, arg_10h, arg_14h, arg_18h);\n    fcn.00429f87(arg_8h, arg_1ch, 0xfffffff2);\n    return uVar1;\n}\n",
        "token_count": 115
    },
    "00429e26": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nvoid __fastcall fcn.00429e26(int32_t param_1)\n\n{\n    uint in_EAX;\n    \n    if (param_1 != 0) {\n        switch(in_EAX) {\n        case 0xfffffff0:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xfffffff1:\n        case 0xfffffff2:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xfffffff3:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xfffffff4:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xfffffff5:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xfffffff6:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xfffffff7:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xfffffff8:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xfffffff9:\n        case 0xffffffff:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xfffffffa:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xfffffffb:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xfffffffc:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xfffffffd:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        case 0xfffffffe:\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    }\n    return;\n}\n",
        "token_count": 449
    },
    "00429efe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00429efe(uint param_1, uint32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    if ((param_2 != 0) && (uVar1 = in_EAX * 0x14 + param_2,  param_2 < uVar1)) {\n        iVar2 = ((uVar1 - param_2) - 1) / 0x14 + 1;\n        do {\n            fcn.00429e26();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.0041c16b(param_1, param_2);\n    return;\n}\n",
        "token_count": 168
    },
    "0042a167": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0042a167(int32_t param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    int32_t *unaff_EBX;\n    uint32_t *unaff_EDI;\n    \n    if (in_EAX == 0) {\n        uVar2 = *unaff_EDI;\n        uVar3 = param_1 + 7U & 0xfffffff8;\n        uVar1 = uVar2 + uVar3;\n        if (uVar1 <= param_2) {\n            *unaff_EDI = uVar1;\n            return uVar2;\n        }\n        *unaff_EBX = *unaff_EBX + uVar3;\n    }\n    return in_EAX;\n}\n",
        "token_count": 193
    },
    "0042a4ca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0042a4ca(void)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_4h;\n    \n    uVar1 = *unaff_ESI;\n    fcn.0042a0ea();\n    fcn.0041c16b(uVar1, unaff_ESI[4]);\n    iVar3 = unaff_EDI * 2;\n    *(unaff_ESI + 0xc) = unaff_EDI;\n    puVar2 = fcn.0041c2f7(unaff_EDI * 0x50);\n    unaff_ESI[4] = puVar2;\n    if (puVar2 != NULL) {\n        for (; 0 < iVar3; iVar3 = iVar3 + -1) {\n            *(puVar2 + 7) = 1;\n            *puVar2 = *unaff_ESI;\n            puVar2 = puVar2 + 10;\n        }\n    }\n    return;\n}\n",
        "token_count": 239
    },
    "0042a8e9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042a8e9(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    if (0 < *(arg_8h + 4)) {\n        var_4h = 0;\n        do {\n            if ((*(var_4h + 4 + *(arg_8h + 8)) != 0) && (iVar1 = fcn.0042874c(),  iVar1 != 0)) {\n                for (iVar1 = *(*(extraout_ECX + 4) + 8); iVar2 = 0,  iVar1 != 0; iVar1 = *(iVar1 + 8)) {\n                    fcn.00424c2b();\n                    *(iVar1 + 0x53) = 3;\n                    *(iVar1 + 0x4c) = 4;\n                    if (-1 < *(iVar1 + 0x5a)) {\n                        puVar3 = iVar1 + 0x84;\n                        do {\n                            fcn.004256a8();\n                            *puVar3 = 0;\n                            iVar2 = iVar2 + 1;\n                            puVar3 = puVar3 + 1;\n                        } while (iVar2 <= *(iVar1 + 0x5a));\n                    }\n                }\n            }\n            var_8h = var_8h + 1;\n            var_4h = var_4h + 0x10;\n        } while (var_8h < *(arg_8h + 4));\n    }\n    return;\n}\n",
        "token_count": 385
    },
    "0042ade2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0042ade2(uint param_1)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    int32_t unaff_ESI;\n    \n    fcn.0042a0ea();\n    fcn.0042a0ea();\n    puVar2 = *(unaff_ESI + 0xe0);\n    while (puVar2 != NULL) {\n        puVar1 = puVar2[5];\n        fcn.00429efe(*puVar2);\n        fcn.0041c16b(param_1, puVar2);\n        puVar2 = puVar1;\n    }\n    fcn.00429efe(*(unaff_ESI + 4));\n    fcn.0041c16b(param_1, *(unaff_ESI + 0x2c));\n    fcn.0041c16b(param_1, *(unaff_ESI + 0x10));\n    fcn.0041c16b(param_1, *(unaff_ESI + 200));\n    fcn.0041c16b(param_1, *(unaff_ESI + 0xcc));\n    fcn.0041c16b(param_1);\n    return;\n}\n",
        "token_count": 263
    },
    "0042b7ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0042b7ac(void)\n\n{\n    uint uVar1;\n    int32_t *unaff_EDI;\n    \n    uVar1 = 0;\n    if (unaff_EDI != NULL) {\n        fcn.0041bc4a(*(*unaff_EDI + 0x44));\n        uVar1 = fcn.0042acae();\n        fcn.0042a187(0xffffffff, 0, 0, 0, 0, 0);\n        uVar1 = fcn.0041c4c4(uVar1);\n        fcn.0041bc58(*(*unaff_EDI + 0x44));\n    }\n    return uVar1;\n}\n",
        "token_count": 157
    },
    "0042b851": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042b851(void)\n\n{\n    fcn.00429280();\n    return;\n}\n",
        "token_count": 24
    },
    "0042b863": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042b863(uint param_1, uint param_2)\n\n{\n    fcn.00429280(param_1, param_2);\n    return;\n}\n",
        "token_count": 39
    },
    "0042b8cf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042b8cf(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t unaff_ESI;\n    int32_t iVar5;\n    \n    iVar5 = 0;\n    iVar2 = 0;\n    iVar4 = 0;\n    if (0 < *(unaff_ESI + 4)) {\n        do {\n            iVar1 = *(*(unaff_ESI + 8) + 4 + iVar5);\n            if (iVar1 != 0) {\n                iVar1 = *(**(iVar1 + 4) + 0xac);\n                iVar3 = 0;\n                if (iVar1 != 0) {\n                    iVar3 = *(iVar1 + 0xc);\n                    *(iVar1 + 0xc) = 0;\n                }\n                if (((*(unaff_ESI + 0xc0) != NULL) && (0 < iVar3)) && (iVar2 == 0)) {\n                    iVar2 = (**(unaff_ESI + 0xc0))(*(unaff_ESI + 0xc4));\n                }\n            }\n            iVar4 = iVar4 + 1;\n            iVar5 = iVar5 + 0x10;\n        } while (iVar4 < *(unaff_ESI + 4));\n    }\n    return;\n}\n",
        "token_count": 297
    },
    "0042bb1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0042bb1c(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *unaff_ESI;\n    \n    iVar1 = unaff_ESI[0xc];\n    if ((*(iVar1 + 0x1c) & 0x2000) == 0) {\n        if (param_1 < 1) {\n            fcn.0042902d();\n            *(iVar1 + 4) = 0;\n            *(iVar1 + 0x1c) = 1;\n        }\n        else {\n            fcn.00428dc3(0);\n            *(iVar1 + 0x1c) = 0x2000;\n            *(iVar1 + 0x10) = *unaff_ESI;\n            if (*(iVar1 + 4) != 0) {\n                fcn.0044b531(*(iVar1 + 4), 0, param_1);\n            }\n        }\n    }\n    return *(iVar1 + 4);\n}\n",
        "token_count": 221
    },
    "0042bc58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0042bc58(void)\n\n{\n    int32_t *unaff_EBX;\n    int32_t unaff_EDI;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.0041bc4a(*(*unaff_EBX + 0x44));\n    var_8h = 0;\n    if (0 < *(unaff_EDI + 0x50)) {\n        var_4h = 0;\n        do {\n            fcn.0042939a(unaff_EBX[0x12] + var_4h);\n            var_8h = var_8h + 1;\n            var_4h = var_4h + 0x28;\n        } while (var_8h < *(unaff_EDI + 0x50));\n    }\n    fcn.0041bc58(*(*unaff_EBX + 0x44));\n    return 0;\n}\n",
        "token_count": 210
    },
    "004305ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004305ec(int32_t arg_8h, uint arg_ch, uint32_t arg_10h, uint32_t arg_14h, uint32_t arg_18h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    uint *puVar4;\n    bool bVar5;\n    int32_t iVar6;\n    \n    if (((*(arg_8h + 0x18) == arg_14h) && (*(arg_8h + 0x1c) == arg_18h)) && ((arg_14h | arg_18h) != 0)) {\n        puVar4 = *(arg_8h + 0x20);\n    }\n    else {\n        uVar1 = 0;\n        iVar2 = 0;\n        for (puVar4 = *(arg_8h + 4); puVar4 != NULL; puVar4 = *puVar4) {\n            bVar5 = 0xfffffc03 < uVar1;\n            uVar1 = uVar1 + 0x3fc;\n            iVar2 = iVar2 + bVar5;\n            if ((arg_18h < iVar2) || ((arg_18h <= iVar2 && (arg_14h < uVar1)))) break;\n        }\n    }\n    iVar2 = fcn.0044b92d(arg_14h, arg_18h, 0x3fc, 0);\n    do {\n        iVar3 = 0x3fc - iVar2;\n        iVar6 = unaff_EBX;\n        if (iVar3 <= unaff_EBX) {\n            iVar6 = iVar3;\n        }\n        fcn.0044b575(unaff_ESI, iVar2 + 4 + puVar4, iVar6);\n        unaff_ESI = unaff_ESI + iVar6;\n        unaff_EBX = unaff_EBX - iVar3;\n        iVar2 = 0;\n    } while (((-1 < unaff_EBX) && (puVar4 = *puVar4,  puVar4 != NULL)) && (0 < unaff_EBX));\n    *(arg_8h + 0x20) = puVar4;\n    *(arg_8h + 0x18) = arg_10h + arg_14h;\n    *(arg_8h + 0x1c) = (arg_10h >> 0x1f) + arg_18h + CARRY4(arg_10h, arg_14h);\n    return 0;\n}\n",
        "token_count": 578
    },
    "004307c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004307c0(void)\n\n{\n    uint *unaff_ESI;\n    \n    fcn.0044b531();\n    *unaff_ESI = 0x444378;\n    return;\n}\n",
        "token_count": 47
    },
    "00430849": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00430849(uint param_1)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    if (in_EAX != NULL) {\n        puVar2 = in_EAX[3];\n        for (iVar3 = *in_EAX; 0 < iVar3; iVar3 = iVar3 + -1) {\n            iVar1 = fcn.004307d4(param_1, *puVar2);\n            if (iVar1 != 0) {\n                return 2;\n            }\n            puVar2 = puVar2 + 5;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 152
    },
    "00430f0e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00430f0e(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    ulong uVar2;\n    \n    iVar1 = fcn.00431cbb(param_1, 0x98, 0);\n    if (iVar1 != 0) {\n        param_2 = in_EAX * 0x38 + 8 + param_2;\n        *(iVar1 + 0x28) = *(param_2 + 0xc);\n        *(iVar1 + 0x18) = *(param_2 + 0x18);\n        if (*(*(iVar1 + 0x28) + 4) == unaff_EBX) {\n            *(iVar1 + 0x1c) = 0xffff;\n        }\n        else {\n            *(iVar1 + 0x1c) = unaff_EBX;\n            uVar2 = fcn.0044b90d();\n            *(param_2 + 0x28) = *(param_2 + 0x28) | uVar2;\n            *(param_2 + 0x2c) = *(param_2 + 0x2c) | uVar2 >> 0x20;\n        }\n        *(iVar1 + 2) = *(iVar1 + 2) | 4;\n    }\n    return iVar1;\n}\n",
        "token_count": 317
    },
    "00431155": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00431155(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    iVar1 = *in_EAX;\n    if (0 < iVar1) {\n        piVar3 = in_EAX[3] + 4;\n        do {\n            if ((*piVar3 != 0) && (iVar2 = fcn.0041d27e(),  iVar2 == 0)) {\n                return var_4h + 1;\n            }\n            var_4h = var_4h + 1;\n            piVar3 = piVar3 + 5;\n        } while (var_4h < iVar1);\n    }\n    return 0;\n}\n",
        "token_count": 190
    },
    "00431223": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00431223(uint param_1, uint param_2, uint param_3)\n\n{\n    fcn.0041d1e3(0x44a85c, param_2, param_1, param_3);\n    return;\n}\n",
        "token_count": 58
    },
    "00431a87": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00431a87(void)\n\n{\n    char cVar1;\n    ulong uVar2;\n    \n    uVar2 = fcn.00431939();\n    cVar1 = uVar2 >> 0x20;\n    if (uVar2 == '\\0') {\n        if (cVar1 != '\\0') goto code_r0x00431aa7;\n    }\n    else {\n        if (cVar1 == '\\0') {\ncode_r0x00431aa7:\n            return uVar2 + (uVar2 >> 0x20);\n        }\n        if (('b' < uVar2) || ('b' < cVar1)) {\n            return 99;\n        }\n    }\n    return 0x62;\n}\n",
        "token_count": 164
    },
    "00431aaa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00431aaa(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t unaff_ESI;\n    ulong uVar3;\n    \n    iVar1 = fcn.00431939();\n    if ((*(unaff_ESI + 0xc) == 0) && ((*(unaff_ESI + 2) & 0x800) == 0)) {\n        if (iVar1 == '\\0') {\n            iVar1 = 0x62;\n        }\n        return iVar1;\n    }\n    uVar3 = fcn.00431939();\n    cVar2 = uVar3 >> 0x20;\n    if (uVar3 == '\\0') {\n        if (cVar2 != '\\0') goto code_r0x00431aa7;\n    }\n    else {\n        if (cVar2 == '\\0') {\ncode_r0x00431aa7:\n            return uVar3 + (uVar3 >> 0x20);\n        }\n        if (('b' < uVar3) || ('b' < cVar2)) {\n            return 99;\n        }\n    }\n    return 0x62;\n}\n",
        "token_count": 257
    },
    "00431b3d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00431b3d(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    int32_t unaff_EDI;\n    uint var_4h;\n    \n    uVar1 = fcn.00431b09();\n    fcn.00431939();\n    fcn.00431a87();\n    uVar1 = fcn.00429c01(*(unaff_EDI + 0xc), arg_ch, arg_14h, arg_18h, arg_10h, uVar1, 0xfffffffc);\n    fcn.00429e02();\n    return uVar1;\n}\n",
        "token_count": 165
    },
    "00431bbb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00431bbb(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *unaff_EDI;\n    \n    if ((in_EAX != NULL) && (iVar3 = 0,  0 < *in_EAX)) {\n        iVar2 = 0;\n        do {\n            if ((*(iVar2 + in_EAX[3]) != 0) && (iVar1 = *(*(iVar2 + in_EAX[3]) + 0x2c),  *unaff_EDI < iVar1)) {\n                *unaff_EDI = iVar1;\n            }\n            iVar3 = iVar3 + 1;\n            iVar2 = iVar2 + 0x14;\n        } while (iVar3 < *in_EAX);\n    }\n    return;\n}\n",
        "token_count": 192
    },
    "00431d84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00431d84(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_ECX != 0) {\n        fcn.0041d157();\n    }\n    fcn.00431cbb(arg_8h, arg_ch, 0);\n    return;\n}\n",
        "token_count": 90
    },
    "00431db3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00431db3(int32_t param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t unaff_EDI;\n    \n    if (param_1 == 0) {\n        fcn.00432063(param_2);\n        fcn.00432063(param_2);\n        return;\n    }\n    if ((unaff_EDI != 0) && (*(param_1 + 0xc) = unaff_EDI,  (*(unaff_EDI + 2) & 0x100) != 0)) {\n        *(param_1 + 2) = *(param_1 + 2) | 0x100;\n        *(param_1 + 0x14) = *(unaff_EDI + 0x14);\n    }\n    if ((in_EAX != 0) && (*(param_1 + 8) = in_EAX,  (*(in_EAX + 2) & 0x100) != 0)) {\n        *(param_1 + 2) = *(param_1 + 2) | 0x100;\n        *(param_1 + 0x14) = *(in_EAX + 0x14);\n    }\n    fcn.00431c4e();\n    return;\n}\n",
        "token_count": 284
    },
    "00431e0d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00431e0d(uint param_1)\n\n{\n    int32_t iVar1;\n    uint *unaff_ESI;\n    \n    iVar1 = fcn.00431cbb(*unaff_ESI, param_1, 1);\n    fcn.00431db3(*unaff_ESI);\n    if (iVar1 != 0) {\n        fcn.00431b97(*(iVar1 + 0x2c));\n    }\n    return iVar1;\n}\n",
        "token_count": 108
    },
    "0043238b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043238b(uint param_1, uint param_2, uint param_3)\n\n{\n    fcn.0043218a(param_1, param_2, param_3, 0);\n    return;\n}\n",
        "token_count": 52
    },
    "00432619": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00432619(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint16_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_ch == 0) {\n        puVar2 = NULL;\n    }\n    else {\n        puVar2 = fcn.0041c31d(0x50);\n        if (puVar2 != NULL) {\n            uVar3 = fcn.004323a2(arg_8h, arg_10h);\n            *puVar2 = uVar3;\n            uVar3 = fcn.00432465(arg_8h, *(arg_ch + 8), arg_10h);\n            puVar2[2] = uVar3;\n            uVar3 = fcn.0043218a(arg_8h, *(arg_ch + 0xc), arg_10h, 0);\n            puVar2[3] = uVar3;\n            uVar3 = fcn.004323a2(arg_8h, arg_10h);\n            puVar2[4] = uVar3;\n            uVar3 = fcn.0043218a(arg_8h, *(arg_ch + 0x14), arg_10h, 0);\n            puVar2[5] = uVar3;\n            uVar3 = fcn.004323a2(arg_8h, arg_10h);\n            puVar2[6] = uVar3;\n            *(puVar2 + 1) = *(arg_ch + 4);\n            uVar3 = fcn.00432619(arg_8h, *(arg_ch + 0x1c), arg_10h);\n            puVar2[7] = uVar3;\n            uVar3 = fcn.0043218a(arg_8h, *(arg_ch + 0x28), arg_10h, 0);\n            puVar2[10] = uVar3;\n            uVar3 = fcn.0043218a(arg_8h, *(arg_ch + 0x2c), arg_10h, 0);\n            puVar2[0xb] = uVar3;\n            puVar2[0xc] = 0;\n            puVar2[0xd] = 0;\n            uVar1 = *(arg_ch + 6);\n            puVar2[0xe] = 0xffffffff;\n            puVar2[0xf] = 0xffffffff;\n            puVar2[0x10] = 0xffffffff;\n            *(puVar2 + 6) = uVar1 & 0xfff7;\n            puVar2[9] = 0;\n        }\n    }\n    return puVar2;\n}\n",
        "token_count": 604
    },
    "00432719": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00432719(int32_t *param_1)\n\n{\n    uint arg_8h;\n    uint *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint unaff_EBX;\n    uint *puVar3;\n    \n    arg_8h = *in_EAX;\n    if (param_1 == NULL) {\n        param_1 = fcn.0041c2f7(0x10);\n        if (param_1 != NULL) goto code_r0x00432733;\ncode_r0x0043274f:\n        fcn.00432063(arg_8h);\n        fcn.004327f7(arg_8h);\n        param_1 = NULL;\n    }\n    else {\ncode_r0x00432733:\n        if (param_1[1] <= *param_1) {\n            iVar1 = fcn.0041c392();\n            if (iVar1 == 0) goto code_r0x0043274f;\n            param_1[3] = iVar1;\n            uVar2 = fcn.0041c0f1(iVar1);\n            param_1[1] = uVar2 / 0x14;\n        }\n        puVar3 = *param_1 * 0x14 + param_1[3];\n        *param_1 = *param_1 + 1;\n        fcn.0044b531(puVar3, 0, 0x14);\n        *puVar3 = unaff_EBX;\n    }\n    return param_1;\n}\n",
        "token_count": 349
    },
    "004327f7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004327f7(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t *unaff_EDI;\n    \n    iVar1 = 0;\n    if (unaff_EDI != NULL) {\n        puVar2 = unaff_EDI[3];\n        if (0 < *unaff_EDI) {\n            do {\n                fcn.00432063(arg_8h, *puVar2);\n                fcn.0041c16b(arg_8h, puVar2[1]);\n                fcn.0041c16b(arg_8h, puVar2[2]);\n                iVar1 = iVar1 + 1;\n                puVar2 = puVar2 + 5;\n            } while (iVar1 < *unaff_EDI);\n        }\n        fcn.0041c16b(arg_8h, unaff_EDI[3]);\n        fcn.0041c16b(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 223
    },
    "0043332d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043332d(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    int32_t extraout_ECX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_ESI;\n    \n    iVar1 = in_EAX + 0x60;\n    iVar2 = 10;\n    do {\n        if ((unaff_ESI <= *(iVar1 + 0x10)) && (*(iVar1 + 0x10) <= unaff_ESI + -1 + param_1)) {\n            fcn.00433293();\n            *(extraout_ECX + 0x10) = 0;\n            iVar1 = extraout_ECX;\n        }\n        iVar1 = iVar1 + 0x18;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    return;\n}\n",
        "token_count": 195
    },
    "0043347e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043347e(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t unaff_EBX;\n    int32_t unaff_EDI;\n    \n    if (unaff_EDI != param_1) {\n        fcn.00429b6c(0xd);\n        piVar2 = in_EAX + 0x70;\n        iVar3 = 10;\n        do {\n            iVar1 = *piVar2;\n            if ((unaff_EDI <= iVar1) && (iVar1 < unaff_EDI + unaff_EBX)) {\n                *piVar2 = (iVar1 - unaff_EDI) + param_1;\n            }\n            piVar2 = piVar2 + 6;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 213
    },
    "00433eab": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00433eab(uint param_1, uint param_2)\n\n{\n    int32_t arg_10h;\n    int32_t iVar1;\n    int32_t *unaff_EDI;\n    \n    arg_10h = fcn.004349af();\n    iVar1 = fcn.004334bd(param_1, param_2, arg_10h);\n    if (iVar1 == arg_10h) {\n        *unaff_EDI = arg_10h;\n    }\n    else {\n        fcn.004349ca();\n        *unaff_EDI = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 140
    },
    "00433ee6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00433ee6(int32_t param_1)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    int32_t unaff_EDI;\n    uint uVar2;\n    \n    if ((in_EAX == NULL) || (*in_EAX != -0x7c)) {\n        iVar1 = fcn.004334bd(param_1, in_EAX, unaff_EDI);\n        if (iVar1 == unaff_EDI) {\n            return;\n        }\n        if (*(param_1 + 0xc) == 0) {\n            return;\n        }\n        uVar2 = 0xf;\n    }\n    else {\n        iVar1 = *(in_EAX + 0x18);\n        uVar2 = 0xe;\n    }\n    fcn.00429bea(uVar2, iVar1);\n    return;\n}\n",
        "token_count": 190
    },
    "00433fff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00433fff(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint *puVar3;\n    int32_t var_4h;\n    \n    iVar1 = *in_EAX;\n    puVar3 = in_EAX[3];\n    var_4h = iVar1;\n    if (0 < iVar1) {\n        do {\n            iVar2 = fcn.004334bd(arg_8h, *puVar3, in_ECX);\n            if (iVar2 != in_ECX) {\n                fcn.00429bea(0xf - (arg_ch != 0), iVar2, in_ECX);\n            }\n            in_ECX = in_ECX + 1;\n            puVar3 = puVar3 + 5;\n            var_4h = var_4h + -1;\n        } while (var_4h != 0);\n    }\n    return iVar1;\n}\n",
        "token_count": 235
    },
    "00434349": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434349(int32_t arg_8h, uint8_t *arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    int32_t arg_ch_00;\n    uint uVar1;\n    uint arg_14h_00;\n    uint32_t uVar2;\n    \n    if (*(arg_8h + 0xc) == 0) {\n        return;\n    }\n    if (arg_ch == NULL) {\n        return;\n    }\n    uVar2 = *arg_ch;\n    arg_ch_00 = (uVar2 + 1 ^ 1) - 1;\n    if (uVar2 < 0x48) {\n        if (uVar2 == 0x47) {\n            fcn.00434052(arg_10h, 0, arg_14h);\n            goto code_r0x00434575;\n        }\n        if (uVar2 == 0x13) {\n            fcn.004340ff(arg_8h, *(arg_ch + 8), arg_10h, arg_14h);\n            goto code_r0x00434575;\n        }\n        if (uVar2 == 0x44) {\n            uVar1 = fcn.00429c62();\n            *(arg_8h + 0x54) = *(arg_8h + 0x54) + 1;\n            fcn.004340ff(arg_8h, *(arg_ch + 8), uVar1, arg_14h ^ 8);\n            fcn.00434349(arg_8h, *(arg_ch + 0xc), arg_10h, arg_14h);\n            fcn.00429caf();\n            fcn.00433356();\n            goto code_r0x00434575;\n        }\n        if (uVar2 == 0x45) {\n            fcn.00434349(arg_8h, *(arg_ch + 8), arg_10h, arg_14h);\n            fcn.00434349(arg_8h, *(arg_ch + 0xc), arg_10h, arg_14h);\n            goto code_r0x00434575;\n        }\n        if (uVar2 == 0x46) {\ncode_r0x0043449d:\n            uVar1 = fcn.00433eab(arg_8h, *(arg_ch + 8));\n            arg_14h_00 = fcn.00433eab(arg_8h, *(arg_ch + 0xc));\n            arg_14h = 0x80;\n            arg_ch_00 = (*arg_ch != 0x46) + 0x4b;\n            goto code_r0x00434503;\n        }\n    }\n    else {\n        if (uVar2 == 0x48) {\n            if (arg_14h == 0) {\n                uVar1 = fcn.00429c62();\n                fcn.00433002(arg_8h, arg_10h, uVar1);\n                fcn.00429caf();\n            }\n            else {\n                fcn.00433002(arg_8h, arg_10h, arg_10h);\n            }\n            goto code_r0x00434575;\n        }\n        if (0x48 < uVar2) {\n            if (uVar2 < 0x4b) {\n                uVar1 = fcn.00433eab(arg_8h, *(arg_ch + 8));\n                fcn.00429bea(arg_ch_00, uVar1, arg_10h);\n                goto code_r0x00434575;\n            }\n            if (uVar2 < 0x51) {\n                uVar1 = fcn.00433eab(arg_8h, *(arg_ch + 8));\n                arg_14h_00 = fcn.00433eab(arg_8h, *(arg_ch + 0xc));\ncode_r0x00434503:\n                fcn.00431b3d(*(arg_ch + 8), arg_ch_00, uVar1, arg_14h_00, arg_10h, arg_14h);\n                goto code_r0x00434575;\n            }\n            if (uVar2 == 0x92) goto code_r0x0043449d;\n        }\n    }\n    uVar1 = fcn.00433eab(arg_8h, arg_ch);\n    fcn.00429b6c(0x1b, uVar1, arg_10h, arg_14h != 0);\ncode_r0x00434575:\n    fcn.004349ca();\n    fcn.004349ca();\n    return;\n}\n",
        "token_count": 1027
    },
    "00434690": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00434690(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_EBX;\n    int32_t iVar2;\n    int32_t *unaff_EDI;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar2 = 0;\n    if (unaff_EDI == NULL) {\n        if (unaff_EBX != NULL) {\n            return 1;\n        }\n    }\n    else {\n        if (unaff_EBX == NULL) {\n            return 1;\n        }\n        if (*unaff_EDI != *unaff_EBX) {\n            return 1;\n        }\n        var_4h = 0;\n        if (0 < *unaff_EDI) {\n            do {\n                if (*(unaff_EDI[3] + iVar2 + 3) != *(unaff_EBX[3] + iVar2 + 3)) {\n                    return 1;\n                }\n                iVar1 = fcn.00434590(*(unaff_EDI[3] + iVar2), *(unaff_EBX[3] + iVar2));\n                if (iVar1 != 0) {\n                    return 1;\n                }\n                var_4h = var_4h + 1;\n                iVar2 = iVar2 + 0x14;\n            } while (var_4h < *unaff_EDI);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 310
    },
    "00434989": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00434989(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    uint *puVar2;\n    \n    iVar1 = 0;\n    if ((unaff_ESI != NULL) && (puVar2 = unaff_ESI[3],  0 < *unaff_ESI)) {\n        do {\n            fcn.00434962(*puVar2);\n            iVar1 = iVar1 + 1;\n            puVar2 = puVar2 + 5;\n        } while (iVar1 < *unaff_ESI);\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "004349fe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004349fe(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    \n    iVar1 = *(param_1 + 0x3c);\n    if (unaff_ESI <= *(param_1 + 0x38)) {\n        *(param_1 + 0x3c) = iVar1 + unaff_ESI;\n        *(param_1 + 0x38) = *(param_1 + 0x38) - unaff_ESI;\n        return iVar1;\n    }\n    iVar1 = *(param_1 + 0x48);\n    *(param_1 + 0x48) = iVar1 + unaff_ESI;\n    return iVar1 + 1;\n}\n",
        "token_count": 170
    },
    "00434cf6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00434cf6(int32_t *arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    int32_t iVar2;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    iVar2 = *(*(*arg_8h + 8) + 0x1c);\n    if ((*(in_EAX + 0x40) != iVar2) && (puVar1 = fcn.00441b4b(),  puVar1 != NULL)) {\n        do {\n            if (puVar1[5] == iVar2) {\n                var_4h = fcn.00434cb5(var_4h, *puVar1);\n            }\n            puVar1 = puVar1[8];\n        } while (puVar1 != NULL);\n        if (var_4h != 0) {\n            iVar2 = fcn.0041ce3a(0x44aae4, var_4h);\n            fcn.0041c16b(*arg_8h, var_4h);\n            var_4h = iVar2;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 273
    },
    "00434d71": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434d71(uint *arg_8h, uint arg_ch)\n\n{\n    uint in_EAX;\n    int32_t arg_8h_00;\n    uint arg_10h;\n    uint *puVar1;\n    uint arg_10h_00;\n    int32_t iVar2;\n    uint arg_14h;\n    uint arg_18h;\n    uint arg_1ch;\n    uint arg_20h;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.0043fe38();\n    if (arg_8h_00 != 0) {\n        arg_10h = fcn.0043e8c8();\n        for (puVar1 = fcn.00441b4b(); arg_20h = 0,  puVar1 != NULL; puVar1 = puVar1[8]) {\n            arg_1ch = *puVar1;\n            arg_18h = 0;\n            arg_14h = 0;\n            arg_10h_00 = fcn.0043e8c8();\n            fcn.00429c01(arg_8h_00, 0x67, arg_10h_00, arg_14h, arg_18h, arg_1ch, arg_20h);\n        }\n        fcn.00429c01(arg_8h_00, 0x65, arg_10h, 0, 0, *arg_8h, 0);\n        iVar2 = fcn.0041ce3a(0x44aafc, arg_ch);\n        if (iVar2 != 0) {\n            fcn.00429c01(arg_8h_00, 99, arg_10h, 0, 0, iVar2, 0xffffffff);\n            iVar2 = fcn.00434cf6(in_EAX);\n            if (iVar2 != 0) {\n                fcn.00429c01(arg_8h_00, 99, 1, 0, 0, iVar2, 0xffffffff);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 474
    },
    "00435101": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00435101(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.0043fe38();\n    if (iVar1 != 0) {\n        uVar2 = fcn.004349af();\n        uVar3 = fcn.004349af();\n        fcn.00429b6c(0x23, arg_8h, uVar2, 2);\n        fcn.0042a0d8();\n        fcn.00429bea(7, arg_ch, uVar3);\n        fcn.00429b6c(0x50, uVar3, 0, uVar2);\n        fcn.00429b6c(0x24, arg_8h, 2, uVar3);\n        fcn.00429e14();\n        fcn.004349ca();\n        fcn.004349ca();\n    }\n    return;\n}\n",
        "token_count": 238
    },
    "00435a33": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00435a33(int32_t arg_8h)\n\n{\n    int32_t arg_10h;\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_4h;\n    \n    iVar1 = *(*(*in_EAX + 8) + 0xc + arg_8h * 0x10);\n    fcn.00439033(0);\n    arg_10h = in_EAX[0x11];\n    in_EAX[0x11] = arg_10h + 2;\n    fcn.004354d9(in_EAX, arg_8h, arg_10h, 0);\n    for (puVar2 = *(iVar1 + 0xc); puVar2 != NULL; puVar2 = *puVar2) {\n        fcn.004355aa(in_EAX, puVar2[2], arg_10h);\n    }\n    iVar1 = fcn.0043fe38();\n    if (iVar1 != 0) {\n        fcn.00429bd5(100, arg_8h);\n    }\n    return;\n}\n",
        "token_count": 254
    },
    "00435aac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435aac(void)\n\n{\n    int32_t in_EAX;\n    uint arg_ch;\n    int32_t iVar1;\n    uint *unaff_EBX;\n    uint var_4h;\n    \n    arg_ch = fcn.0043e8c8();\n    fcn.00439033(0);\n    iVar1 = *(in_EAX + 0x44);\n    *(in_EAX + 0x44) = iVar1 + 2;\n    fcn.004354d9(in_EAX, arg_ch, iVar1, *unaff_EBX);\n    fcn.004355aa(in_EAX, unaff_EBX, iVar1);\n    iVar1 = fcn.0043fe38();\n    if (iVar1 != 0) {\n        fcn.00429bd5(100, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "00436143": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00436143(int32_t arg_8h, int16_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_2ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = *in_EAX;\n    fcn.0044b531(&var_2ch, 0, 0x24);\n    iVar1 = fcn.00435d43();\n    if (iVar1 == 0) {\n        iVar1 = fcn.00435d43();\n        if (iVar1 == 0) {\n            iVar1 = fcn.00435d43();\n            if (iVar1 == 0) {\n                var_8h = fcn.0043fe38();\n                iVar2 = fcn.004349fe();\n                fcn.00433ee6();\n                fcn.00433ee6();\n                fcn.00433ee6();\n                iVar1 = var_8h;\n                if (var_8h != 0) {\n                    fcn.00429b6c(0x12, 0, (iVar2 - *arg_ch) + 3, iVar2 + 3);\n                    fcn.00429e02();\n                    fcn.00429f87(iVar1, arg_ch, 0xfffffffb);\n                    fcn.00429bd5(0x7a, arg_8h == 0x18);\n                }\n                goto code_r0x0043622b;\n            }\n        }\n    }\n    in_EAX[0x10] = in_EAX[0x10] + 1;\ncode_r0x0043622b:\n    fcn.00432063(var_4h, arg_10h);\n    fcn.00432063(var_4h, arg_14h);\n    fcn.00432063(var_4h, arg_18h);\n    return;\n}\n",
        "token_count": 454
    },
    "004363d2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004363d2(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *unaff_ESI;\n    uint *puVar3;\n    \n    iVar2 = 0;\n    if (unaff_ESI == NULL) {\n        return 0;\n    }\n    puVar3 = unaff_ESI[3];\n    if (0 < *unaff_ESI) {\n        do {\n            iVar1 = fcn.00436377(param_1, *puVar3);\n            if (iVar1 != 0) {\n                return 1;\n            }\n            iVar2 = iVar2 + 1;\n            puVar3 = puVar3 + 5;\n        } while (iVar2 < *unaff_ESI);\n    }\n    return 0;\n}\n",
        "token_count": 178
    },
    "00436963": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00436963(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t unaff_EDI;\n    \n    puVar2 = *(unaff_EDI + 0xc);\n    iVar1 = 0;\n    if (puVar2 != NULL) {\n        if (0 < *(unaff_EDI + 8)) {\n            do {\n                fcn.0041c16b(arg_8h, *puVar2);\n                fcn.00432063(arg_8h, puVar2[1]);\n                fcn.0041c16b(arg_8h, puVar2[2]);\n                fcn.0041c16b(arg_8h, puVar2[3]);\n                fcn.0041c16b(arg_8h, puVar2[4]);\n                iVar1 = iVar1 + 1;\n                puVar2 = puVar2 + 6;\n            } while (iVar1 < *(unaff_EDI + 8));\n        }\n        fcn.0041c16b(arg_8h, *(unaff_EDI + 0xc));\n    }\n    return;\n}\n",
        "token_count": 258
    },
    "00436b6d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00436b6d(uint param_1)\n\n{\n    uint uVar1;\n    uint uVar2;\n    \n    uVar1 = fcn.00436ac6();\n    uVar2 = fcn.00436b1f(uVar1);\n    fcn.0041c16b(param_1, uVar1);\n    return uVar2;\n}\n",
        "token_count": 83
    },
    "00437017": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00437017(void)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint *in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    uint *unaff_EBX;\n    uint var_4h;\n    \n    uVar2 = *in_EAX;\n    iVar3 = in_EAX[0x7e];\n    if (iVar3 != 0) {\n        puVar1 = *(iVar3 + 8) * 0x18 + -0x18 + *(iVar3 + 0xc);\n        iVar3 = fcn.00432891(*unaff_EBX);\n        if (iVar3 == 0) {\n            fcn.0041d1e3(0x44b254, *puVar1);\n        }\n        else {\n            fcn.00432063(uVar2, puVar1[1]);\n            uVar4 = fcn.0043238b(uVar2, *unaff_EBX, 1);\n            puVar1[1] = uVar4;\n            fcn.0041c16b(uVar2, puVar1[2]);\n            uVar4 = fcn.0041c46a(unaff_EBX[1]);\n            puVar1[2] = uVar4;\n        }\n    }\n    fcn.00432063(uVar2, *unaff_EBX);\n    return;\n}\n",
        "token_count": 307
    },
    "004372cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004372cc(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *unaff_ESI;\n    \n    iVar1 = fcn.004349af();\n    fcn.00429bea(7, **(*(*unaff_ESI + 8) + 0xc + param_1 * 0x10) + 1, iVar1);\n    fcn.00429b6c(0x24, param_1, 1, iVar1);\n    if ((iVar1 != 0) && (*(unaff_ESI + 0x15) < 8)) {\n        iVar3 = 0;\n        piVar2 = unaff_ESI + 0x18;\n        do {\n            if (piVar2[4] == iVar1) {\n                *(piVar2 + 2) = 1;\n                return;\n            }\n            iVar3 = iVar3 + 1;\n            piVar2 = piVar2 + 6;\n        } while (iVar3 < 10);\n        unaff_ESI[*(unaff_ESI + 0x15) + 6] = iVar1;\n        *(unaff_ESI + 0x15) = *(unaff_ESI + 0x15) + '\\x01';\n    }\n    return;\n}\n",
        "token_count": 303
    },
    "00437a3f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nbool fcn.00437a3f(void)\n\n{\n    uchar uVar1;\n    int32_t arg_8h;\n    int32_t iVar2;\n    uint *in_EAX;\n    int32_t iVar3;\n    int32_t arg_ch;\n    uint arg_ch_00;\n    int32_t *unaff_EBX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    arg_8h = *unaff_EBX;\n    iVar3 = fcn.00443e97(unaff_EBX);\n    if (iVar3 == 0) {\n        if (((*(in_EAX + 0x22) & 0x10) != 0) || (0 < in_EAX[2])) {\n            return false;\n        }\n        if (-1 < in_EAX[2]) {\n            iVar3 = fcn.00432619(arg_8h, in_EAX[7], 0);\n            if (iVar3 != 0) {\n                uVar1 = *(arg_8h + 0xea);\n                iVar2 = unaff_EBX[0x11];\n                fcn.00438cb1(unaff_EBX, *(iVar3 + 8));\n                in_EAX[2] = 0xffffffff;\n                *(arg_8h + 0xea) = 0;\n                arg_ch = fcn.0043fd90(unaff_EBX, arg_ch_00);\n                *(arg_8h + 0xea) = uVar1;\n                unaff_EBX[0x11] = iVar2;\n                if (arg_ch == 0) {\n                    in_EAX[2] = 0;\n                }\n                else {\n                    in_EAX[2] = *(arg_ch + 8);\n                    in_EAX[3] = *(arg_ch + 0xc);\n                    *(arg_ch + 8) = 0;\n                    *(arg_ch + 0xc) = 0;\n                    fcn.004369c9(arg_8h, arg_ch);\n                    *(in_EAX[0x10] + 0x4a) = *(in_EAX[0x10] + 0x4a) | 2;\n                }\n                fcn.0043ecfb(arg_8h, iVar3);\n                return arg_ch == 0;\n            }\n            return true;\n        }\n        fcn.0041d1e3(0x44b3bc, *in_EAX);\n    }\n    return true;\n}\n",
        "token_count": 566
    },
    "00437b80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00437b80(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    fcn.0043fe38();\n    iVar1 = fcn.004349af();\n    fcn.00429b6c(0x5f, param_1, iVar1, param_2);\n    fcn.00439076();\n    if ((iVar1 != 0) && (*(in_EAX + 0x15) < 8)) {\n        iVar3 = 0;\n        iVar2 = in_EAX + 0x60;\n        do {\n            if (*(iVar2 + 0x10) == iVar1) {\n                *(iVar2 + 8) = 1;\n                return;\n            }\n            iVar3 = iVar3 + 1;\n            iVar2 = iVar2 + 0x18;\n        } while (iVar3 < 10);\n        *(in_EAX + 0x18 + *(in_EAX + 0x15) * 4) = iVar1;\n        *(in_EAX + 0x15) = *(in_EAX + 0x15) + '\\x01';\n    }\n    return;\n}\n",
        "token_count": 279
    },
    "00438a19": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00438a19(uint arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *unaff_ESI;\n    int32_t *unaff_EDI;\n    uint var_4h;\n    \n    iVar1 = in_EAX;\n    if (*unaff_EDI <= *unaff_ESI) {\n        iVar1 = fcn.0041c392();\n        if (iVar1 == 0) {\n            *arg_10h = -1;\n            return in_EAX;\n        }\n        iVar2 = fcn.0041c0f1(iVar1);\n        *unaff_EDI = iVar2 / arg_ch;\n    }\n    fcn.0044b531(*unaff_ESI * arg_ch + iVar1, 0, arg_ch);\n    iVar2 = *unaff_ESI;\n    *arg_10h = iVar2;\n    *unaff_ESI = iVar2 + 1;\n    return iVar1;\n}\n",
        "token_count": 245
    },
    "00438a7e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00438a7e(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t var_4h;\n    \n    if (in_EAX == NULL) {\n        in_EAX = fcn.0041c2f7(0xc);\n        if (in_EAX == NULL) {\n            return NULL;\n        }\n        in_EAX[2] = 0;\n    }\n    iVar1 = fcn.00438a19(arg_8h, 8, &var_4h);\n    *in_EAX = iVar1;\n    if (var_4h < 0) {\n        fcn.00438aeb(arg_8h);\n        in_EAX = NULL;\n    }\n    else {\n        uVar2 = fcn.00436ac6();\n        *(*in_EAX + var_4h * 8) = uVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 227
    },
    "00438aeb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00438aeb(uint param_1)\n\n{\n    int32_t *unaff_ESI;\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (unaff_ESI != NULL) {\n        if (0 < unaff_ESI[1]) {\n            do {\n                fcn.0041c16b(param_1, *(*unaff_ESI + iVar1 * 8));\n                iVar1 = iVar1 + 1;\n            } while (iVar1 < unaff_ESI[1]);\n        }\n        fcn.0041c16b(param_1, *unaff_ESI);\n        fcn.0041c16b(param_1);\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "00438b27": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00438b27(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (in_EAX == 0) {\n        return -1;\n    }\n    iVar1 = *(in_EAX + 4);\n    iVar3 = 0;\n    if (0 < iVar1) {\n        do {\n            iVar2 = fcn.0041d27e();\n            if (iVar2 == 0) {\n                return iVar3;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < iVar1);\n    }\n    return -1;\n}\n",
        "token_count": 151
    },
    "00438b5f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.00438b5f(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int16_t *in_EAX;\n    int16_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint *var_4h;\n    \n    piVar1 = in_EAX;\n    if (in_EAX[1] < *in_EAX + arg_ch) {\n        piVar1 = fcn.0041c392();\n        if (piVar1 == NULL) {\n            return in_EAX;\n        }\n        iVar2 = fcn.0041c0f1(piVar1);\n        piVar1[1] = (iVar2 - 0x40U) / 0x38 + 1;\n    }\n    iVar2 = *piVar1 + -1;\n    if (arg_10h <= iVar2) {\n        iVar3 = (iVar2 - arg_10h) + 1;\n        puVar4 = piVar1 + iVar2 * 0x1c + 4;\n        var_4h = piVar1 + (iVar2 + arg_ch) * 0x1c + 4;\n        do {\n            iVar3 = iVar3 + -1;\n            puVar5 = puVar4;\n            puVar6 = var_4h;\n            for (iVar2 = 0xe; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar6 = *puVar5;\n                puVar5 = puVar5 + 1;\n                puVar6 = puVar6 + 1;\n            }\n            puVar4 = puVar4 + -0xe;\n            var_4h = var_4h + -0xe;\n        } while (iVar3 != 0);\n    }\n    *piVar1 = *piVar1 + arg_ch;\n    fcn.0044b531(piVar1 + arg_10h * 0x1c + 4, 0, arg_ch * 0x38);\n    if (arg_10h < arg_ch + arg_10h) {\n        puVar4 = piVar1 + arg_10h * 0x1c + 0x10;\n        arg_10h = (arg_ch + arg_10h) - arg_10h;\n        do {\n            *puVar4 = 0xffffffff;\n            puVar4 = puVar4 + 0xe;\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n    }\n    return piVar1;\n}\n",
        "token_count": 602
    },
    "00439385": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00439385(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    \n    if (in_EAX == 0) {\n        in_EAX = fcn.0043949d(arg_8h, arg_ch, 0);\n        if (in_EAX != 0) goto code_r0x004393a9;\n    }\n    else {\ncode_r0x004393a9:\n        if (*(in_EAX + 0xc) != 0) goto code_r0x004393f7;\n    }\n    if (*(unaff_ESI + 200) != 0) {\n        iVar1 = fcn.0041c430(arg_ch);\n        if (iVar1 != 0) {\n            (**(unaff_ESI + 200))(*(unaff_ESI + 0xd0));\n            fcn.0041c16b();\n        }\n    }\n    in_EAX = fcn.0043949d(arg_8h, arg_ch, 0);\ncode_r0x004393f7:\n    if ((in_EAX != 0) && (*(in_EAX + 0xc) == 0)) {\n        iVar1 = fcn.00439342();\n        if (iVar1 != 0) {\n            in_EAX = 0;\n        }\n    }\n    return in_EAX;\n}\n",
        "token_count": 316
    },
    "00439413": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\nint32_t * fcn.00439413(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *arg_ch;\n    uint extraout_ECX;\n    int32_t unaff_EBX;\n    \n    iVar2 = fcn.0041d157();\n    arg_ch = fcn.0041dace(extraout_ECX);\n    if ((arg_ch == NULL) && (param_2 != 0)) {\n        arg_ch = fcn.0041c2f7(iVar2 + 0x3d);\n        if (arg_ch != NULL) {\n            piVar1 = arg_ch + 0xf;\n            *arg_ch = piVar1;\n            *(arg_ch + 1) = 1;\n            arg_ch[5] = piVar1;\n            *(arg_ch + 6) = 2;\n            arg_ch[10] = piVar1;\n            *(arg_ch + 0xb) = 3;\n            fcn.0044b575(piVar1, param_1, iVar2);\n            *(iVar2 + *arg_ch) = 0;\n            iVar2 = fcn.0041db04(iVar2, arg_ch);\n            if (iVar2 != 0) {\n                *(unaff_EBX + 0x1e) = 1;\n                fcn.0041c16b();\n                arg_ch = NULL;\n            }\n        }\n    }\n    return arg_ch;\n}\n",
        "token_count": 328
    },
    "00439558": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.00439558(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint8_t *extraout_ECX;\n    int32_t unaff_ESI;\n    \n    iVar3 = fcn.0041d157();\n    uVar2 = *(*extraout_ECX + 0x443d90);\n    iVar4 = fcn.00439528(extraout_ECX);\n    if (iVar4 == 0) {\n        *(unaff_ESI + 8) = 0;\n        piVar1 = param_1 + ((uVar2 + iVar3) % 0x17) * 4;\n        *(unaff_ESI + 0x1c) = *piVar1;\n        *piVar1 = unaff_ESI;\n    }\n    else {\n        *(unaff_ESI + 8) = *(iVar4 + 8);\n        *(iVar4 + 8) = unaff_ESI;\n    }\n    return;\n}\n",
        "token_count": 236
    },
    "004397e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004397e4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *unaff_EDI;\n    \n    iVar1 = fcn.00436708(0, *(in_EAX + 0xc), *(in_EAX + 8));\n    fcn.004369c9(*unaff_EDI, *(in_EAX + 0x14));\n    *(in_EAX + 0x14) = iVar1;\n    if (iVar1 != 0) {\n        *(iVar1 + 0x20) = *(iVar1 + 0x20) + 1;\n    }\n    iVar2 = fcn.00440746();\n    if (iVar2 != 0) {\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 186
    },
    "0043988a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0043988a(uint *arg_8h, uint *arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint arg_8h_00;\n    uint arg_10h_00;\n    int32_t arg_ch_00;\n    uint uVar1;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = *arg_8h;\n    var_4h = fcn.00432619(arg_8h_00, arg_ch[7], 0);\n    if (arg_10h != 0) {\n        arg_10h_00 = fcn.0043238b(arg_8h_00, arg_10h, 0);\n        arg_ch_00 = fcn.00438c27(0, 0);\n        if (arg_ch_00 == 0) {\n            fcn.0043ecfb(arg_8h_00, var_4h);\n        }\n        else {\n            uVar1 = fcn.0041c430(*arg_ch);\n            *(arg_ch_00 + 0x10) = uVar1;\n            *(arg_ch_00 + 0x18) = var_4h;\n        }\n        var_4h = fcn.0043ec3c(arg_8h, arg_ch_00, arg_10h_00, 0, 0, 0, 0, 0, 0);\n    }\n    var_10h = arg_14h;\n    var_14h._0_1_ = 9;\n    var_14h._1_1_ = 0;\n    var_ch = 0;\n    var_8h = 0;\n    fcn.00441019(arg_8h, var_4h, &var_14h);\n    fcn.0043ecfb(arg_8h_00, var_4h);\n    return;\n}\n",
        "token_count": 460
    },
    "0043ac39": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ac39(uint arg_8h, uint noname_1, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uchar *puVar5;\n    int64_t iVar6;\n    \n    puVar2 = fcn.0042b7f5();\n    iVar3 = fcn.00429a62();\n    iVar6 = fcn.0044b8cd(iVar3, iVar3 >> 0x1f, 2, 0);\n    puVar4 = fcn.0043a435(iVar6 + 1);\n    if (puVar4 != NULL) {\n        puVar5 = puVar4;\n        if (0 < iVar3) {\n            do {\n                uVar1 = *puVar2;\n                *puVar5 = *((uVar1 >> 4) + 0x444410);\n                puVar5[1] = *((uVar1 & 0xf) + 0x444410);\n                puVar5 = puVar5 + 2;\n                puVar2 = puVar2 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        *puVar5 = 0;\n        fcn.0042b87a(puVar4);\n    }\n    return;\n}\n",
        "token_count": 314
    },
    "0043b478": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043b478(uint param_1, uchar param_2)\n\n{\n    int32_t iVar1;\n    uint arg_ch;\n    uint arg_10h;\n    uint arg_14h;\n    uint arg_18h;\n    \n    arg_18h = 0;\n    arg_14h = 1;\n    arg_10h = 2;\n    fcn.0041d157();\n    iVar1 = fcn.004395a9(param_1, arg_ch, arg_10h, arg_14h, arg_18h);\n    if (iVar1 != 0) {\n        *(iVar1 + 3) = param_2;\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "0043b521": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043b521(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0x44f280;\n    do {\n        fcn.00439558(0x450d00);\n        iVar1 = iVar1 + 0x24;\n    } while (iVar1 < 0x44f91c);\n    iVar1 = 0x44f0e8;\n    do {\n        fcn.00439558(0x450d00);\n        iVar1 = iVar1 + 0x24;\n    } while (iVar1 < 0x44f154);\n    iVar1 = 0x44f210;\n    do {\n        fcn.00439558(0x450d00);\n        iVar1 = iVar1 + 0x24;\n    } while (iVar1 < 0x44f27c);\n    return;\n}\n",
        "token_count": 190
    },
    "0043bbd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043bbd8(void)\n\n{\n    uint extraout_ECX;\n    \n    fcn.0041d157();\n    fcn.0041dace(extraout_ECX);\n    return;\n}\n",
        "token_count": 47
    },
    "0043bbef": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043bbef(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    \n    if (unaff_EBX != 0) {\n        iVar1 = *(unaff_EBX + 0x1c);\n        fcn.00432063(arg_8h, *(iVar1 + 0x14));\n        fcn.004327f7(arg_8h);\n        fcn.0043ecfb(arg_8h, *(iVar1 + 8));\n        fcn.00432063(arg_8h, *(unaff_EBX + 0xc));\n        fcn.0041c16b(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 159
    },
    "0043bc37": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043bc37(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_8h_00;\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint arg_ch_00;\n    uint arg_10h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_8h_00 = *in_EAX;\n    if ((*(arg_8h_00 + 0xc) & 0x4000000) == 0) {\n        return;\n    }\n    if ((*(arg_ch + 0x22) & 0x10) != 0) {\n        return;\n    }\n    if (*(arg_ch + 0x1c) != 0) {\n        return;\n    }\n    var_4h = 0;\n    iVar1 = fcn.0043fe38();\n    iVar2 = fcn.0043bbd8();\n    if (iVar2 == 0) {\n        iVar2 = *(arg_ch + 0x24);\n        if (iVar2 == 0) {\n            return;\n        }\n        do {\n            if (*(iVar2 + 0x18) != '\\0') break;\n            iVar2 = *(iVar2 + 4);\n        } while (iVar2 != 0);\n        if (iVar2 == 0) {\n            return;\n        }\n        var_4h = fcn.00429c62();\n        fcn.00429b6c(0x6f, 1, var_4h, 0);\n    }\n    arg_10h = 0;\n    *(in_EAX + 0x1b2) = 1;\n    arg_ch_00 = fcn.00432465(arg_8h_00, arg_8h, 0);\n    fcn.00439940(in_EAX, arg_ch_00, arg_10h);\n    *(in_EAX + 0x1b2) = 0;\n    fcn.00429b6c(0x6f, 0, *(iVar1 + 0x1c) + 2, 0);\n    fcn.0043908a(2, 0x44a3dc, 0xfffffffe);\n    if (var_4h != 0) {\n        fcn.00429caf();\n    }\n    return;\n}\n",
        "token_count": 531
    },
    "0043bf6b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043bf6b(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t unaff_EBX;\n    int32_t iVar4;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    if ((*(*arg_8h + 0xc) & 0x4000000) != 0) {\n        for (iVar1 = *(unaff_EBX + 0x24); iVar1 != 0; iVar1 = *(iVar1 + 4)) {\n            iVar4 = *(iVar1 + 0x14);\n            if (0 < iVar4) {\n                piVar3 = iVar1 + 0x24;\n                do {\n                    if (*piVar3 < 0x20) {\n                        uVar2 = 1 << (*piVar3 & 0x1f);\n                    }\n                    else {\n                        uVar2 = 0xffffffff;\n                    }\n                    var_4h = var_4h | uVar2;\n                    piVar3 = piVar3 + 2;\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != 0);\n            }\n        }\n        for (iVar1 = fcn.0043bbd8(); iVar1 != 0; iVar1 = *(iVar1 + 0xc)) {\n            var_8h = 0;\n            fcn.0043b570(arg_8h, unaff_EBX, iVar1, &var_8h);\n            if ((var_8h != 0) && (iVar4 = *(var_8h + 4),  0 < iVar4)) {\n                piVar3 = *(var_8h + 8);\n                do {\n                    if (*piVar3 < 0x20) {\n                        uVar2 = 1 << (*piVar3 & 0x1f);\n                    }\n                    else {\n                        uVar2 = 0xffffffff;\n                    }\n                    var_4h = var_4h | uVar2;\n                    piVar3 = piVar3 + 1;\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != 0);\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 517
    },
    "0043c555": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043c555(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_10h_00;\n    int32_t arg_ch_00;\n    int32_t *unaff_EDI;\n    \n    if ((*(*unaff_EDI + 0xc) & 0x4000000) != 0) {\n        for (arg_10h_00 = fcn.0043bbd8(); arg_10h_00 != 0; arg_10h_00 = *(arg_10h_00 + 0xc)) {\n            arg_ch_00 = fcn.0043c118(unaff_EDI, arg_8h, arg_10h_00, arg_ch);\n            if (arg_ch_00 != 0) {\n                fcn.00442849(unaff_EDI, arg_ch_00, arg_8h, arg_10h, 2, 0);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 222
    },
    "0043c637": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043c637(uint param_1, uint param_2, uint param_3)\n\n{\n    uint arg_8h;\n    int32_t unaff_ESI;\n    \n    if ((*(unaff_ESI + 0x22) & 0x10) == 0) {\n        arg_8h = fcn.0043fe38();\n        fcn.00429b6c(param_3, param_1, *(unaff_ESI + 0x14), param_2);\n        fcn.00429f87(arg_8h, *(unaff_ESI + 8), 0xfffffff2);\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "0043d96d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043d96d(int32_t arg_8h)\n\n{\n    int32_t arg_ch;\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint arg_18h;\n    uint arg_8h_00;\n    uint arg_1ch;\n    int32_t unaff_EBX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(unaff_EBX + 0x22) & 0x10) == 0) {\n        arg_18h = fcn.0043e8c8();\n        arg_8h_00 = fcn.0043fe38();\n        fcn.0043c637(arg_8h, arg_18h, 0x27);\n        iVar1 = 1;\n        for (arg_ch = *(unaff_EBX + 0x10); arg_ch != 0; arg_ch = *(arg_ch + 0x20)) {\n            arg_1ch = fcn.004392af(in_EAX, arg_ch);\n            fcn.00429c01(arg_8h_00, 0x27, iVar1 + arg_8h, *(arg_ch + 0x14), arg_18h, arg_1ch, 0xfffffff0);\n            iVar1 = iVar1 + 1;\n        }\n        if (*(in_EAX + 0x44) < arg_8h + iVar1) {\n            *(in_EAX + 0x44) = arg_8h + iVar1;\n        }\n        iVar1 = iVar1 + -1;\n    }\n    else {\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 378
    },
    "0043dcdf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043dcdf(uint arg_8h)\n\n{\n    bool bVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint in_ECX;\n    code *pcVar4;\n    int32_t iVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar5 = 0;\n    bVar1 = true;\n    var_4h = in_ECX;\n    if (*0x451630 != 0) {\n        do {\n            uVar2 = fcn.0041bc38(2);\n            fcn.0041bc4a(uVar2);\n            if (iVar5 < *0x451630) {\n                pcVar4 = *(*0x451634 + iVar5 * 4);\n            }\n            else {\n                pcVar4 = NULL;\n                bVar1 = false;\n            }\n            fcn.0041bc58(uVar2);\n            var_4h = 0;\n            if (pcVar4 != NULL) {\n                iVar3 = (*pcVar4)(arg_8h, &var_4h, 0x444448);\n                if (iVar3 != 0) {\n                    fcn.0041d171(1, 0x44ba70, var_4h);\n                    bVar1 = false;\n                }\n            }\n            fcn.0041c110(var_4h);\n            iVar5 = iVar5 + 1;\n        } while (bVar1);\n    }\n    return;\n}\n",
        "token_count": 328
    },
    "0043ddc9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ddc9(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_14h;\n    int32_t in_EAX;\n    uint arg_8h_00;\n    int32_t arg_1ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.0043fe38();\n    *(in_EAX + 0x48) = *(in_EAX + 0x48) + 1;\n    arg_14h = *(in_EAX + 0x48);\n    arg_1ch = fcn.0041c31d(8);\n    if (arg_1ch != 0) {\n        fcn.0044b575(arg_1ch, &arg_ch, 8);\n    }\n    fcn.00429c01(arg_8h_00, 8, 0, arg_14h, 0, arg_1ch, 0xfffffff3);\n    fcn.0042a4ca();\n    fcn.0042a521(0, 0, arg_8h, 0);\n    fcn.00429b6c(0x10, arg_14h, 1, 0);\n    return;\n}\n",
        "token_count": 281
    },
    "0043e8c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043e8c8(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t unaff_ESI;\n    \n    if (unaff_ESI != 0) {\n        iVar1 = 0;\n        if (0 < *(param_1 + 4)) {\n            piVar2 = *(param_1 + 8) + 0xc;\n            do {\n                if (*piVar2 == unaff_ESI) {\n                    return;\n                }\n                iVar1 = iVar1 + 1;\n                piVar2 = piVar2 + 4;\n            } while (iVar1 < *(param_1 + 4));\n        }\n    }\n    return;\n}\n",
        "token_count": 164
    },
    "0043eae5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043eae5(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    uint *unaff_ESI;\n    \n    *unaff_ESI = 0;\n    iVar1 = fcn.0041d87b();\n    if (iVar1 == 0) {\n        iVar1 = fcn.0044a94a(0x15766);\n    }\n    else {\n        fcn.0041bc4a(*(unaff_EBX + 0x44));\n        iVar1 = fcn.0043e8ed(unaff_EBX, arg_8h, 0, arg_10h, unaff_ESI, arg_14h);\n        if (iVar1 == 0x11) {\n            fcn.0042b75e();\n            iVar1 = fcn.0043e8ed(unaff_EBX, arg_8h, 0, arg_10h, unaff_ESI, arg_14h);\n        }\n        fcn.0041bc58(*(unaff_EBX + 0x44));\n    }\n    return iVar1;\n}\n",
        "token_count": 269
    },
    "0043ebc2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0043ebc2(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    fcn.004327f7(param_1);\n    fcn.00438d01(param_1);\n    fcn.00432063(param_1, *(param_2 + 0xc));\n    fcn.004327f7(param_1);\n    fcn.00432063(param_1, *(param_2 + 0x14));\n    fcn.004327f7(param_1);\n    iVar1 = *(param_2 + 0x1c);\n    if (iVar1 != 0) {\n        fcn.0043ebc2(param_1, iVar1);\n        fcn.0041c16b(param_1, iVar1);\n    }\n    fcn.00432063(param_1, *(param_2 + 0x28));\n    fcn.00432063(param_1, *(param_2 + 0x2c));\n    return;\n}\n",
        "token_count": 226
    },
    "0043ee0a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0043ee0a(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = *(in_EAX + 8);\n    iVar3 = 0;\n    if (0 < iVar1) {\n        do {\n            iVar2 = fcn.0041d27e();\n            if (iVar2 == 0) {\n                return iVar3;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < iVar1);\n    }\n    return -1;\n}\n",
        "token_count": 134
    },
    "0043ee3b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0043ee3b(int32_t param_1, uint param_2, int32_t *param_3)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_EBX;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (0 < param_1) {\n        do {\n            iVar1 = fcn.0043ee0a(param_2);\n            if (-1 < iVar1) {\n                if (unaff_EBX != NULL) {\n                    *unaff_EBX = iVar2;\n                    *param_3 = iVar1;\n                }\n                return 1;\n            }\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < param_1);\n    }\n    return 0;\n}\n",
        "token_count": 169
    },
    "0043f0ef": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043f0ef(int32_t arg_8h, int32_t *arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint arg_8h_00;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *(arg_8h + 0xc);\n    iVar5 = *arg_ch;\n    iVar2 = fcn.004349fe();\n    uVar3 = fcn.004349af();\n    arg_8h_00 = fcn.00433460();\n    fcn.00433fff(arg_8h_00, 0);\n    iVar4 = iVar5 + iVar2;\n    fcn.00429bea(0x35, arg_ch[2], iVar4);\n    fcn.0043347e(iVar4 + 1);\n    fcn.00429b6c(0x1e, iVar2, iVar5 + 2, uVar3);\n    fcn.00429bea(0x46, arg_ch[2], uVar3);\n    fcn.004349ca();\n    fcn.00434a22();\n    if (*(arg_10h + 0x30) != 0) {\n        iVar5 = *(arg_10h + 0x34) + 1;\n        if (*(arg_10h + 0x34) == 0) {\n            iVar5 = *(arg_10h + 0x30);\n        }\n        fcn.00429bd5(0x73, iVar5);\n        fcn.00429b6c(0x14, iVar5, 0xffffffff, 0);\n        fcn.00429bbf(uVar1, 1);\n        fcn.00429e14();\n        fcn.00429bd5(0x3f, arg_ch[2]);\n        fcn.00429bd5(0x39, arg_ch[2]);\n        fcn.00429e14();\n    }\n    return;\n}\n",
        "token_count": 483
    },
    "0043f249": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043f249(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EDI;\n    \n    arg_8h_00 = *(unaff_EDI + 0xc);\n    iVar1 = fcn.004349af();\n    fcn.00429c31(arg_8h_00, 0x32, arg_8h, arg_ch, arg_14h, arg_10h);\n    fcn.00429b6c(0x1e, arg_14h, arg_10h, iVar1);\n    fcn.00429bea(0x46, arg_8h, iVar1);\n    if ((iVar1 != 0) && (*(unaff_EDI + 0x15) < 8)) {\n        iVar3 = 0;\n        iVar2 = unaff_EDI + 0x60;\n        do {\n            if (*(iVar2 + 0x10) == iVar1) {\n                *(iVar2 + 8) = 1;\n                return;\n            }\n            iVar3 = iVar3 + 1;\n            iVar2 = iVar2 + 0x18;\n        } while (iVar3 < 10);\n        *(unaff_EDI + 0x18 + *(unaff_EDI + 0x15) * 4) = iVar1;\n        *(unaff_EDI + 0x15) = *(unaff_EDI + 0x15) + '\\x01';\n    }\n    return;\n}\n",
        "token_count": 371
    },
    "0043f533": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0043f533(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    iVar2 = *arg_8h;\n    iVar3 = *arg_ch;\n    piVar5 = fcn.0041c2f7(iVar3 * 5 + 0x10);\n    if (piVar5 != NULL) {\n        var_4h = 0;\n        piVar5[2] = piVar5 + iVar3 + 3;\n        *(piVar5 + 6) = iVar3;\n        *(piVar5 + 1) = *(*(*(iVar2 + 8) + 0xc) + 0x49);\n        *piVar5 = iVar2;\n        arg_ch = arg_ch[3];\n        if (0 < iVar3) {\n            var_8h = piVar5 + 3;\n            do {\n                iVar6 = fcn.004319c1();\n                if (iVar6 == 0) {\n                    iVar6 = *(iVar2 + 0x2c);\n                }\n                iVar4 = var_4h + 1;\n                *var_8h = iVar6;\n                puVar1 = arg_ch + 0xc;\n                arg_ch = arg_ch + 0x14;\n                *(var_4h + piVar5[2]) = *puVar1;\n                var_8h = var_8h + 1;\n                var_4h = iVar4;\n            } while (iVar4 < iVar3);\n        }\n    }\n    return piVar5;\n}\n",
        "token_count": 408
    },
    "0043f7e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043f7e8(int32_t **arg_8h, char *arg_ch, uint *arg_10h, uint *arg_14h, uint *arg_18h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint arg_ch_00;\n    int32_t *var_40h;\n    int32_t *var_3ch;\n    int32_t **var_20h;\n    int32_t var_1ch;\n    int32_t **var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    var_4h = 0;\n    if ((arg_ch == NULL) || (arg_8h[1] == NULL)) {\n        return 0;\n    }\n    cVar1 = *arg_ch;\n    if (cVar1 == 't') {\n        var_3ch = (*(arg_ch + 0x10))[2];\n        arg_ch_00 = **(**(arg_ch + 0x10) + 0xc);\n        var_40h = *arg_8h;\n        var_20h = arg_8h;\n    }\n    else {\n        if ((cVar1 != -0x68) && (cVar1 != -0x66)) goto code_r0x0043f964;\n        iVar2 = *(arg_ch + 0x1c);\n        puVar4 = NULL;\n        var_18h = NULL;\n        do {\n            if (puVar4 != NULL) goto code_r0x0043f895;\n            var_14h = *arg_8h[1];\n            iVar5 = 0;\n            if (0 < var_14h) {\n                var_1ch = *(arg_ch + 0x18);\n                piVar6 = arg_8h[1] + 8;\n                do {\n                    if (*piVar6 == var_1ch) break;\n                    iVar5 = iVar5 + 1;\n                    piVar6 = piVar6 + 0xe;\n                } while (iVar5 < var_14h);\n            }\n            if (iVar5 < var_14h) {\n                puVar4 = arg_8h[1][iVar5 * 0xe + 5];\n                var_18h = arg_8h[1][iVar5 * 0xe + 6];\n            }\n            else {\n                arg_8h = arg_8h[8];\n            }\n        } while (arg_8h != NULL);\n        if (puVar4 == NULL) goto code_r0x0043f964;\ncode_r0x0043f895:\n        if (var_18h == NULL) {\n            if (puVar4[0x10] != 0) {\n                if ((iVar2 < 0) && (iVar2 = puVar4[1],  iVar2 < 0)) {\n                    var_8h = 0x44b2b0;\n                    var_4h = 0x44bd78;\n                }\n                else {\n                    puVar3 = iVar2 * 0x18 + puVar4[3];\n                    var_8h = puVar3[3];\n                    var_4h = *puVar3;\n                }\n                var_10h = *puVar4;\n                if (*arg_8h != NULL) {\n                    iVar2 = **arg_8h;\n                    iVar5 = fcn.0043e8c8();\n                    var_ch = *(iVar5 * 0x10 + *(iVar2 + 8));\n                }\n            }\n            goto code_r0x0043f964;\n        }\n        if ((iVar2 < 0) || (**var_18h <= iVar2)) goto code_r0x0043f964;\n        arg_ch_00 = *(iVar2 * 0x14 + (*var_18h)[3]);\n        var_3ch = var_18h[2];\n        var_40h = *arg_8h;\n        var_20h = arg_8h;\n    }\n    var_8h = fcn.0043f7e8(&var_40h, arg_ch_00, &var_ch, &var_10h, &var_4h);\ncode_r0x0043f964:\n    if (arg_10h != NULL) {\n        *arg_10h = var_ch;\n        *arg_14h = var_10h;\n        *arg_18h = var_4h;\n    }\n    return var_8h;\n}\n",
        "token_count": 1061
    },
    "0043f98c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043f98c(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *unaff_ESI;\n    int32_t iVar3;\n    uint var_28h;\n    uint var_24h;\n    uint var_4h;\n    \n    var_4h = *(in_EAX + 0xc);\n    iVar2 = 0;\n    iVar3 = 0;\n    var_24h = arg_8h;\n    if (0 < *unaff_ESI) {\n        do {\n            uVar1 = fcn.0043f7e8(&var_28h, *(iVar2 + unaff_ESI[3]), 0, 0, 0);\n            fcn.0042a521(iVar3, 1, uVar1, 0xffffffff);\n            iVar3 = iVar3 + 1;\n            iVar2 = iVar2 + 0x14;\n        } while (iVar3 < *unaff_ESI);\n    }\n    return;\n}\n",
        "token_count": 238
    },
    "0043ff9e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.0043ff9e(uint arg_8h, char *arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    char *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    pcVar2 = arg_ch;\n    iVar4 = 0;\n    if (arg_ch == NULL) {\n        pcVar2 = NULL;\n    }\n    else if ((*arg_ch == -0x68) && (*(arg_ch + 0x18) == arg_10h)) {\n        if (*(arg_ch + 0x1c) < 0) {\n            *arg_ch = 'b';\n        }\n        else {\n            pcVar2 = fcn.0043238b(arg_8h, *(*(arg_ch + 0x1c) * 0x14 + *(arg_14h + 0xc)), 0);\n            if ((pcVar2 != NULL) && (*(arg_ch + 0x14) != 0)) {\n                *(pcVar2 + 0x14) = *(arg_ch + 0x14);\n            }\n            fcn.00432063(arg_8h, arg_ch);\n        }\n    }\n    else {\n        uVar3 = fcn.0043ff9e(arg_8h, *(arg_ch + 8), arg_10h, arg_14h);\n        *(arg_ch + 8) = uVar3;\n        uVar3 = fcn.0043ff9e(arg_8h, *(arg_ch + 0xc), arg_10h, arg_14h);\n        *(arg_ch + 0xc) = uVar3;\n        if ((*(arg_ch + 2) & 0x800) == 0) {\n            piVar1 = *(arg_ch + 0x10);\n            if ((piVar1 != NULL) && (arg_ch = NULL,  0 < *piVar1)) {\n                do {\n                    uVar3 = fcn.0043ff9e(arg_8h, *(piVar1[3] + iVar4), arg_10h, arg_14h);\n                    arg_ch = arg_ch + 1;\n                    *(iVar4 + piVar1[3]) = uVar3;\n                    iVar4 = iVar4 + 0x14;\n                } while (arg_ch < *piVar1);\n            }\n        }\n        else {\n            fcn.004400d0(arg_8h, *(arg_ch + 0x10), arg_10h, arg_14h);\n        }\n    }\n    return pcVar2;\n}\n",
        "token_count": 580
    },
    "00440097": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00440097(uint param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *unaff_ESI;\n    int32_t iVar3;\n    \n    iVar2 = 0;\n    if ((unaff_ESI != NULL) && (0 < *unaff_ESI)) {\n        iVar3 = 0;\n        do {\n            uVar1 = fcn.0043ff9e(param_1, *(unaff_ESI[3] + iVar3), param_2, param_3);\n            *(iVar3 + unaff_ESI[3]) = uVar1;\n            iVar2 = iVar2 + 1;\n            iVar3 = iVar3 + 0x14;\n        } while (iVar2 < *unaff_ESI);\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "004400d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004400d0(uint arg_8h, int32_t **arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t **ppiVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    \n    ppiVar1 = arg_ch;\n    iVar4 = 0;\n    if (arg_ch != NULL) {\n        piVar3 = *arg_ch;\n        if ((piVar3 != NULL) && (arg_ch = NULL,  0 < *piVar3)) {\n            do {\n                uVar2 = fcn.0043ff9e(arg_8h, *(iVar4 + piVar3[3]), arg_10h, arg_14h);\n                arg_ch = arg_ch + 1;\n                *(iVar4 + piVar3[3]) = uVar2;\n                iVar4 = iVar4 + 0x14;\n            } while (arg_ch < *piVar3);\n        }\n        piVar3 = ppiVar1[4];\n        iVar4 = 0;\n        if ((piVar3 != NULL) && (arg_ch = NULL,  0 < *piVar3)) {\n            do {\n                uVar2 = fcn.0043ff9e(arg_8h, *(iVar4 + piVar3[3]), arg_10h, arg_14h);\n                arg_ch = arg_ch + 1;\n                *(iVar4 + piVar3[3]) = uVar2;\n                iVar4 = iVar4 + 0x14;\n            } while (arg_ch < *piVar3);\n        }\n        piVar3 = ppiVar1[6];\n        iVar4 = 0;\n        if ((piVar3 != NULL) && (arg_ch = NULL,  0 < *piVar3)) {\n            do {\n                uVar2 = fcn.0043ff9e(arg_8h, *(iVar4 + piVar3[3]), arg_10h, arg_14h);\n                arg_ch = arg_ch + 1;\n                *(iVar4 + piVar3[3]) = uVar2;\n                iVar4 = iVar4 + 0x14;\n            } while (arg_ch < *piVar3);\n        }\n        piVar3 = fcn.0043ff9e(arg_8h, ppiVar1[5], arg_10h, arg_14h);\n        ppiVar1[5] = piVar3;\n        piVar3 = fcn.0043ff9e(arg_8h, ppiVar1[3], arg_10h, arg_14h);\n        ppiVar1[3] = piVar3;\n        fcn.004400d0(arg_8h, ppiVar1[7], arg_10h, arg_14h);\n        piVar3 = ppiVar1[2];\n        if ((piVar3 != NULL) && (iVar4 = *piVar3,  0 < iVar4)) {\n            piVar3 = piVar3 + 6;\n            do {\n                fcn.004400d0(arg_8h, *piVar3, arg_10h, arg_14h);\n                iVar4 = iVar4 + -1;\n                piVar3 = piVar3 + 0xe;\n            } while (0 < iVar4);\n        }\n    }\n    return;\n}\n",
        "token_count": 746
    },
    "00440746": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00440746(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBX;\n    int32_t iVar4;\n    \n    if ((*(unaff_EBX + 0xc) == 0) || (iVar1 = *(unaff_EBX + 0x30),  iVar1 == 0)) {\ncode_r0x00440794:\n        uVar3 = 0;\n    }\n    else {\n        iVar4 = *(*(unaff_EBX + 0xc) + 0x10);\n        if (iVar4 != 0) {\n            do {\n                iVar2 = fcn.0041d27e();\n                if (iVar2 == 0) break;\n                iVar4 = *(iVar4 + 0x20);\n            } while (iVar4 != 0);\n            if (iVar4 != 0) {\n                *(unaff_EBX + 0x34) = iVar4;\n                goto code_r0x00440794;\n            }\n        }\n        fcn.0041d1e3(0x44bd90, iVar1, 0);\n        uVar3 = 1;\n        *(param_1 + 0x12) = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 291
    },
    "00440e53": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00440e53(void)\n\n{\n    uint arg_8h;\n    int32_t in_EAX;\n    uint arg_14h;\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t unaff_EDI;\n    uint var_4h;\n    \n    arg_8h = *(in_EAX + 0xc);\n    iVar1 = 0;\n    piVar2 = *(unaff_EDI + 0x20);\n    if (0 < *(unaff_EDI + 0x24)) {\n        do {\n            if (*(*piVar2 + 0x10) == NULL) {\n                arg_14h = 0;\n            }\n            else {\n                arg_14h = **(*piVar2 + 0x10);\n            }\n            fcn.00429c01(arg_8h, 0x75, piVar2[2], arg_14h, 0, piVar2[1], 0xfffffffb);\n            iVar1 = iVar1 + 1;\n            piVar2 = piVar2 + 4;\n        } while (iVar1 < *(unaff_EDI + 0x24));\n    }\n    return;\n}\n",
        "token_count": 264
    },
    "0044203b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * fcn.0044203b(uint param_1, uchar param_2)\n\n{\n    uchar *puVar1;\n    uint *unaff_EDI;\n    \n    puVar1 = fcn.0041c2f7(unaff_EDI[1] + 0x28);\n    if (puVar1 != NULL) {\n        fcn.0044b575(puVar1 + 0x28, *unaff_EDI, unaff_EDI[1]);\n        *(puVar1 + 0xc) = puVar1 + 0x28;\n        *(puVar1 + 0x10) = unaff_EDI[1];\n        *puVar1 = param_2;\n    }\n    return puVar1;\n}\n",
        "token_count": 163
    },
    "00442079": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00442079(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    iVar1 = fcn.0044203b(arg_8h, 0x69);\n    if (iVar1 == 0) {\n        fcn.00438aeb(arg_8h);\n    }\n    else {\n        uVar2 = fcn.00432619(arg_8h, arg_10h, 1);\n        *(iVar1 + 8) = uVar2;\n        *(iVar1 + 0x1c) = in_EAX;\n        uVar2 = fcn.004323a2(arg_8h, 1);\n        *(iVar1 + 0x18) = uVar2;\n        *(iVar1 + 1) = arg_14h;\n    }\n    fcn.004327f7(arg_8h);\n    fcn.0043ecfb(arg_8h, arg_10h);\n    return iVar1;\n}\n",
        "token_count": 252
    },
    "004420ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004420ec(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.0044203b(arg_8h, 0x6b);\n    if (iVar1 != 0) {\n        uVar2 = fcn.004323a2(arg_8h, 1);\n        *(iVar1 + 0x18) = uVar2;\n        uVar2 = fcn.0043238b(arg_8h, arg_ch, 1);\n        *(iVar1 + 0x14) = uVar2;\n        *(iVar1 + 1) = arg_10h;\n    }\n    fcn.004327f7(arg_8h);\n    fcn.00432063(arg_8h, arg_ch);\n    return iVar1;\n}\n",
        "token_count": 198
    },
    "0044214d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044214d(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.0044203b(arg_8h, 0x6a);\n    if (iVar1 != 0) {\n        uVar2 = fcn.0043238b(arg_8h, arg_ch, 1);\n        *(iVar1 + 0x14) = uVar2;\n        *(iVar1 + 1) = 99;\n    }\n    fcn.00432063(arg_8h, arg_ch);\n    return iVar1;\n}\n",
        "token_count": 143
    },
    "0044218c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044218c(void)\n\n{\n    uint unaff_EBX;\n    int32_t unaff_EDI;\n    \n    if (unaff_EDI != 0) {\n        fcn.00441af8(unaff_EBX, *(unaff_EDI + 0x1c));\n        fcn.0041c16b();\n        fcn.0041c16b();\n        fcn.00432063();\n        fcn.00438aeb();\n        fcn.0041c16b();\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "004422ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004422ac(void)\n\n{\n    int32_t in_EAX;\n    uint arg_10h;\n    int32_t arg_8h;\n    uint *unaff_EBX;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_10h = fcn.0043e8c8();\n    arg_8h = fcn.0043fe38();\n    if (arg_8h != 0) {\n        fcn.00439033(0);\n        fcn.00436ae5(arg_10h);\n        fcn.00429d6e();\n        fcn.00429f87(arg_8h, *unaff_EBX, 0);\n        fcn.00429f87(arg_8h, 0x44be64, 0xfffffffe);\n        fcn.004372cc(arg_10h);\n        fcn.00429b6c(0x2b, 0, 0, 0);\n        fcn.00429c01(arg_8h, 0x67, arg_10h, 0, 0, *unaff_EBX, 0);\n        if (*(in_EAX + 0x48) < 3) {\n            *(in_EAX + 0x48) = 3;\n        }\n    }\n    return;\n}\n",
        "token_count": 294
    },
    "004423b6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004423b6(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    \n    iVar4 = 0;\n    if ((param_1 == 0) || (in_EAX == NULL)) {\ncode_r0x004423ed:\n        uVar3 = 1;\n    }\n    else {\n        iVar1 = *in_EAX;\n        if (0 < iVar1) {\n            puVar5 = in_EAX[3] + 4;\n            do {\n                iVar2 = fcn.00438b27(*puVar5);\n                if (-1 < iVar2) goto code_r0x004423ed;\n                iVar4 = iVar4 + 1;\n                puVar5 = puVar5 + 5;\n            } while (iVar4 < iVar1);\n        }\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 228
    },
    "004424a3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004424a3(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    uint uVar2;\n    char *in_EAX;\n    uint uVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint *unaff_EDI;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = *unaff_EDI;\n    uVar2 = unaff_EDI[3];\n    if (in_EAX != NULL) {\n        do {\n            if (arg_8h == 99) {\n                arg_8h._0_1_ = in_EAX[1];\n            }\n            else {\n            }\n            *(unaff_EDI + 0x1b1) = arg_8h;\n            cVar1 = *in_EAX;\n            if (cVar1 == 'i') {\n                uVar4 = arg_8h;\n                uVar3 = fcn.0043258e(arg_8h_00);\n                uVar5 = fcn.00432619(arg_8h_00, *(in_EAX + 8), 0);\n                uVar6 = fcn.004323a2(arg_8h_00, 0);\n                fcn.00442446(uVar6, uVar5, uVar3, uVar4);\n                fcn.0043c7bc();\n            }\n            else if (cVar1 == 'j') {\n                uVar3 = fcn.0043238b(arg_8h_00, *(in_EAX + 0x14), 0);\n                uVar5 = fcn.00442446();\n                fcn.00439940(unaff_EDI, uVar5, uVar3);\n            }\n            else if (cVar1 == 'k') {\n                uVar4 = arg_8h;\n                uVar3 = fcn.0043238b(arg_8h_00, *(in_EAX + 0x14), 0);\n                uVar5 = fcn.004323a2(arg_8h_00, 0);\n                uVar6 = fcn.00442446();\n                fcn.004429be(unaff_EDI, uVar6, uVar5, uVar3, uVar4);\n            }\n            else {\n                uVar3 = fcn.00432619(arg_8h_00, *(in_EAX + 8), 0);\n                fcn.00441019();\n                fcn.0043ecfb(arg_8h_00, uVar3);\n            }\n            if (*in_EAX != 't') {\n                fcn.00429bbf(uVar2, 0x3a);\n            }\n            in_EAX = *(in_EAX + 0x20);\n        } while (in_EAX != NULL);\n    }\n    return 0;\n}\n",
        "token_count": 668
    },
    "00442801": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00442801(int32_t param_1, int32_t param_2, uint param_3, int32_t param_4)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = *(param_1 + 0x1a0);\n    if (*(param_1 + 0x1a0) == 0) {\n        iVar1 = param_1;\n    }\n    piVar2 = *(iVar1 + 0x220);\n    if (piVar2 != NULL) {\n        do {\n            if ((*piVar2 == param_2) && (piVar2[1] == param_4)) break;\n            piVar2 = piVar2[5];\n        } while (piVar2 != NULL);\n        if (piVar2 != NULL) {\n            return;\n        }\n    }\n    fcn.004425e7(param_1, param_2, param_3, param_4);\n    return;\n}\n",
        "token_count": 216
    },
    "004428c7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004428c7(uint arg_8h, int32_t arg_ch, uint32_t arg_10h, uint arg_14h, uint32_t arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    int32_t iVar1;\n    \n    for (; arg_ch != 0; arg_ch = *(arg_ch + 0x20)) {\n        if ((*(arg_ch + 8) == arg_10h) && (*(arg_ch + 9) == arg_18h)) {\n            iVar1 = fcn.004423b6(*(arg_ch + 0x10));\n            if (iVar1 != 0) {\n                fcn.00442849(arg_8h, arg_ch, arg_1ch, arg_20h, arg_24h, arg_28h);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 208
    },
    "00442914": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00442914(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (in_EAX != 0) {\n        do {\n            if ((*(in_EAX + 8) == (arg_ch != 0) + 'j') && ((*(in_EAX + 9) & arg_14h) != 0)) {\n                iVar1 = fcn.004423b6(*(in_EAX + 0x10));\n                if (iVar1 != 0) {\n                    iVar1 = fcn.00442801(arg_8h, in_EAX, arg_18h, arg_1ch);\n                    if (iVar1 != 0) {\n                        uVar2 = uVar2 | *(iVar1 + 0xc + arg_10h * 4);\n                    }\n                }\n            }\n            in_EAX = *(in_EAX + 0x20);\n        } while (in_EAX != 0);\n    }\n    return uVar2;\n}\n",
        "token_count": 277
    },
    "004435b9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004435b9(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (arg_8h == 0) {\n        uVar1 = 7;\n    }\n    else {\n        iVar2 = fcn.0043eae5(arg_8h, 0xffffffff, 0, 0);\n        if (iVar2 == 0) {\n            fcn.0042b9fc(arg_8h);\n            uVar1 = fcn.00443595();\n        }\n        else {\n            fcn.0044a4e1();\n            fcn.0041c49d();\n            uVar1 = fcn.0044a544();\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 172
    },
    "00443614": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00443614(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint in_ECX;\n    uint var_4h;\n    \n    iVar1 = fcn.0043eae5(arg_ch, 0xffffffff, 0, 0);\n    if (iVar1 == 0) {\n        do {\n            iVar1 = fcn.0042b9fc(in_ECX);\n            if (iVar1 != 100) {\n                iVar1 = fcn.00443595();\n                return iVar1;\n            }\n            arg_8h_00 = fcn.0042bbe4();\n            iVar1 = fcn.004435b9(arg_8h_00);\n        } while (iVar1 == 0);\n        fcn.00443595();\n    }\n    return iVar1;\n}\n",
        "token_count": 195
    },
    "00443981": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00443981(uint param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t **ppiVar4;\n    \n    piVar1 = *(param_2 + 0x30);\n    *(param_2 + 0x30) = 0;\n    piVar3 = NULL;\n    while (piVar2 = piVar1,  piVar2 != NULL) {\n        piVar1 = piVar2[4];\n        if (*piVar2 == param_3) {\n            *(param_2 + 0x30) = piVar2;\n            piVar2[4] = 0;\n            piVar3 = piVar2;\n        }\n        else {\n            ppiVar4 = *piVar2 + 0x128;\n            piVar2[4] = *ppiVar4;\n            *ppiVar4 = piVar2;\n        }\n    }\n    return piVar3;\n}\n",
        "token_count": 240
    },
    "004439e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004439e4(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_ESI;\n    int32_t var_4h;\n    \n    iVar2 = *(unaff_ESI + 0x34);\n    *(unaff_ESI + 0x34) = iVar2 + 1;\n    iVar3 = fcn.0041c392();\n    if (iVar3 == 0) {\n        var_4h = 0;\n        if (0 < iVar2) {\n            do {\n                fcn.0041c16b(arg_8h, *(*(unaff_ESI + 0x38) + var_4h * 4));\n                var_4h = var_4h + 1;\n            } while (var_4h < iVar2);\n        }\n        fcn.0041c16b(arg_8h, arg_ch);\n        fcn.0041c16b(arg_8h, *(unaff_ESI + 0x38));\n        *(unaff_ESI + 0x34) = 0;\n    }\n    else {\n        puVar1 = iVar3 + iVar2 * 4;\n        puVar1[1] = 0;\n        *puVar1 = arg_ch;\n    }\n    *(unaff_ESI + 0x38) = iVar3;\n    return;\n}\n",
        "token_count": 321
    },
    "00443a5f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00443a5f(int32_t *arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    uint *puVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    fcn.00436c2c(arg_ch, 0, 1, 0);\n    puVar1 = arg_8h[0x7e];\n    if (puVar1 != NULL) {\n        arg_8h_00 = *arg_8h;\n        iVar2 = fcn.0043e8c8();\n        *(puVar1 + 0x22) = *(puVar1 + 0x22) | 0x10;\n        puVar1[0xd] = 0;\n        uVar3 = fcn.00436ac6();\n        fcn.004439e4(arg_8h_00, uVar3);\n        uVar3 = fcn.0041c430(*(iVar2 * 0x10 + *(arg_8h_00 + 8)));\n        fcn.004439e4(arg_8h_00, uVar3);\n        uVar3 = fcn.0041c430(*puVar1);\n        fcn.004439e4(arg_8h_00, uVar3);\n        arg_8h[0x7a] = (arg_10h[1] - *arg_ch) + *arg_10h;\n    }\n    return;\n}\n",
        "token_count": 348
    },
    "00443e97": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00443e97(uint *arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *arg_ch;\n    uint extraout_ECX;\n    uint var_4h;\n    \n    arg_8h_00 = *arg_8h;\n    if (((*(in_EAX + 0x22) & 0x10) == 0) || (iVar1 = fcn.0044394b(arg_8h_00),  iVar1 != 0)) {\n        iVar1 = 0;\n    }\n    else {\n        var_4h = **(in_EAX + 0x38);\n        fcn.0041d157();\n        arg_ch = fcn.0041dace(extraout_ECX);\n        if (arg_ch == NULL) {\n            fcn.0041d1e3(0x44c58c, var_4h);\n            iVar1 = 1;\n        }\n        else {\n            var_4h = 0;\n            iVar1 = fcn.00443c7d(arg_8h_00, arg_ch, *(*arg_ch + 8), &var_4h);\n            if (iVar1 != 0) {\n                fcn.0041d1e3(0x44a338, var_4h);\n            }\n            fcn.0041c16b(arg_8h_00, var_4h);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 339
    },
    "00443f31": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00443f31(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    \n    if (*(unaff_ESI + 0x124) % 5 == 0) {\n        iVar1 = fcn.0041c392();\n        if (iVar1 == 0) {\n            return 7;\n        }\n        fcn.0044b531(iVar1 + *(unaff_ESI + 0x124) * 4, 0, 0x14);\n        *(unaff_ESI + 0x120) = iVar1;\n    }\n    *(*(unaff_ESI + 0x120) + *(unaff_ESI + 0x124) * 4) = unaff_EBX;\n    *(unaff_ESI + 0x124) = *(unaff_ESI + 0x124) + 1;\n    *(unaff_EBX + 0xc) = *(unaff_EBX + 0xc) + 1;\n    return 0;\n}\n",
        "token_count": 236
    },
    "00443f9b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00443f9b(int32_t arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *arg_ch_00;\n    uint uVar2;\n    ulong uVar3;\n    uint var_4h;\n    \n    iVar1 = fcn.0043668f(arg_ch, *(*(arg_8h + 8) + in_EAX * 0x10));\n    uVar2 = **(iVar1 + 0x38);\n    fcn.0041d157();\n    arg_ch_00 = fcn.0041dace(uVar2);\n    if (arg_ch_00 == NULL) {\n        uVar2 = fcn.0041ce3a(0x44c58c, uVar2);\n        *arg_10h = uVar2;\n        iVar1 = 1;\n    }\n    else {\n        iVar1 = fcn.00443c7d(arg_8h, arg_ch_00, *(*arg_ch_00 + 4), arg_10h);\n        if (iVar1 == 0) {\n            uVar3 = fcn.0044394b(arg_8h);\n            iVar1 = uVar3 >> 0x20;\n            if (uVar3 != 0) {\n                fcn.0044394b(arg_8h);\n                iVar1 = fcn.00443f31();\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 337
    },
    "0044416b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044416b(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t var_4h;\n    \n    iVar1 = *(arg_8h + 0x124);\n    iVar3 = 0;\n    if ((iVar1 < 1) || (*(arg_8h + 0x120) != 0)) {\n        if (in_EAX == 0) {\ncode_r0x00444194:\n            iVar3 = 0;\n        }\n        else {\n            pcVar2 = *(**(in_EAX + 8) + 0x38);\n            if (pcVar2 != NULL) {\n                var_4h = 0;\n                if (0 < iVar1) {\n                    piVar4 = *(arg_8h + 0x120);\n                    do {\n                        if (*piVar4 == in_EAX) goto code_r0x00444194;\n                        var_4h = var_4h + 1;\n                        piVar4 = piVar4 + 1;\n                    } while (var_4h < iVar1);\n                }\n                iVar3 = (*pcVar2)(*(in_EAX + 8));\n                if (iVar3 == 0) {\n                    iVar3 = fcn.00443f31();\n                }\n            }\n        }\n    }\n    else {\n        iVar3 = 6;\n    }\n    return iVar3;\n}\n",
        "token_count": 341
    },
    "004442c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004442c4(int32_t param_1)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (in_EAX[0x68] != NULL) {\n        in_EAX = in_EAX[0x68];\n    }\n    iVar2 = 0;\n    if (0 < in_EAX[0x84]) {\n        piVar1 = in_EAX[0x85];\n        do {\n            if (param_1 == *piVar1) {\n                return;\n            }\n            iVar2 = iVar2 + 1;\n            piVar1 = piVar1 + 1;\n        } while (iVar2 < in_EAX[0x84]);\n    }\n    iVar2 = fcn.0041c2c2(in_EAX[0x85]);\n    if (iVar2 == 0) {\n        *(*in_EAX + 0x1e) = 1;\n    }\n    else {\n        in_EAX[0x85] = iVar2;\n        *(iVar2 + in_EAX[0x84] * 4) = param_1;\n        in_EAX[0x84] = in_EAX[0x84] + 1;\n    }\n    return;\n}\n",
        "token_count": 282
    },
    "0044443e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044443e(int32_t param_1, uint8_t *param_2, uint32_t param_3)\n\n{\n    while( true ) {\n        *(param_1 + 0x10) = param_3;\n        if (param_2 == NULL) {\n            return;\n        }\n        if (*param_2 != param_3) break;\n        fcn.0044443e(param_1, *(param_2 + 8), param_3);\n        param_2 = *(param_2 + 0xc);\n    }\n    fcn.004443a4(param_2, 0);\n    return;\n}\n",
        "token_count": 141
    },
    "0044447d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0044447d(int32_t param_1)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (0 < *in_EAX) {\n        piVar1 = in_EAX + 1;\n        do {\n            if (*piVar1 == param_1) {\n                uVar2 = iVar3;\n                if (0x3f < uVar2) {\n                    return 0;\n                }\n                if (uVar2 < 0x20) {\n                    return CONCAT44(0 << (uVar2 & 0x1f) | 1U >> 0x20 - (uVar2 & 0x1f), 1 << (uVar2 & 0x1f));\n                }\n                return (1 << (uVar2 & 0x1f)) << 0x20;\n            }\n            iVar3 = iVar3 + 1;\n            piVar1 = piVar1 + 1;\n        } while (iVar3 < *in_EAX);\n    }\n    return 0;\n}\n",
        "token_count": 260
    },
    "004444aa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004444aa(uint arg_8h, char *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    if (arg_ch == NULL) {\n        uVar1 = 0;\n    }\n    else if (*arg_ch == -0x68) {\n        uVar1 = fcn.0044447d(*(arg_ch + 0x18));\n    }\n    else {\n        uVar2 = fcn.004444aa(arg_8h, *(arg_ch + 0xc));\n        uVar3 = fcn.004444aa(arg_8h, *(arg_ch + 8));\n        if ((*(arg_ch + 2) & 0x800) == 0) {\n            uVar1 = fcn.00444520(arg_8h, *(arg_ch + 0x10));\n        }\n        else {\n            uVar1 = fcn.00444566(arg_8h);\n        }\n        uVar1 = uVar2 | uVar3 | uVar1;\n    }\n    return uVar1;\n}\n",
        "token_count": 249
    },
    "00444520": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00444520(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = 0;\n    var_8h = 0;\n    var_4h = 0;\n    if ((arg_ch != NULL) && (0 < *arg_ch)) {\n        iVar2 = 0;\n        do {\n            uVar3 = fcn.004444aa(arg_8h, *(arg_ch[3] + iVar2));\n            var_8h = var_8h | uVar3;\n            var_4h = var_4h | uVar3 >> 0x20;\n            iVar1 = iVar1 + 1;\n            iVar2 = iVar2 + 0x14;\n        } while (iVar1 < *arg_ch);\n    }\n    return CONCAT44(var_4h, var_8h);\n}\n",
        "token_count": 226
    },
    "00444566": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00444566(uint arg_8h)\n\n{\n    uint *in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    ulong uVar3;\n    ulong uVar4;\n    ulong uVar5;\n    ulong uVar6;\n    ulong uVar7;\n    \n    uVar2 = 0;\n    uVar1 = 0;\n    for (; in_EAX != NULL; in_EAX = in_EAX[7]) {\n        uVar3 = fcn.00444520(arg_8h, *in_EAX);\n        uVar4 = fcn.00444520(arg_8h, in_EAX[4]);\n        uVar5 = fcn.00444520(arg_8h, in_EAX[6]);\n        uVar6 = fcn.004444aa(arg_8h, in_EAX[3]);\n        uVar7 = fcn.004444aa(arg_8h, in_EAX[5]);\n        uVar2 = uVar2 | uVar3 | uVar4 | uVar5 | uVar6 | uVar7;\n        uVar1 = uVar1 | uVar3 >> 0x20 | uVar4 >> 0x20 | uVar5 >> 0x20 | uVar6 >> 0x20 | uVar7 >> 0x20;\n    }\n    return CONCAT44(uVar1, uVar2);\n}\n",
        "token_count": 314
    },
    "004445d1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004445d1(void)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint uVar3;\n    uint8_t *unaff_ESI;\n    \n    uVar1 = *(*(unaff_ESI + 0xc) + 2);\n    uVar2 = *(*(unaff_ESI + 8) + 2);\n    uVar3 = fcn.004319c1();\n    *(*(unaff_ESI + 0xc) + 0x14) = uVar3;\n    uVar3 = fcn.004319c1();\n    *(*(unaff_ESI + 8) + 0x14) = uVar3;\n    uVar3 = *(*(unaff_ESI + 0xc) + 0x14);\n    *(*(unaff_ESI + 0xc) + 0x14) = *(*(unaff_ESI + 8) + 0x14);\n    *(*(unaff_ESI + 8) + 0x14) = uVar3;\n    *(*(unaff_ESI + 0xc) + 2) = *(*(unaff_ESI + 0xc) + 2) & 0xfeff | uVar2 & 0x100;\n    *(*(unaff_ESI + 8) + 2) = *(*(unaff_ESI + 8) + 2) & 0xfeff | uVar1 & 0x100;\n    uVar3 = *(unaff_ESI + 8);\n    *(unaff_ESI + 8) = *(unaff_ESI + 0xc);\n    *(unaff_ESI + 0xc) = uVar3;\n    if (0x4c < *unaff_ESI) {\n        *unaff_ESI = (*unaff_ESI + 0xb3 ^ 2) + 0x4d;\n    }\n    return;\n}\n",
        "token_count": 426
    },
    "0044466a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0044466a(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX == 0x48) {\n        return 1;\n    }\n    if (in_EAX == 0x49) {\n        return 0x80;\n    }\n    return 2 << (in_EAX + 0xb4U & 0x1f) & 0xffff;\n}\n",
        "token_count": 93
    },
    "00444e02": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00444e02(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t *unaff_ESI;\n    int32_t iVar1;\n    ulong uVar2;\n    ulong uVar3;\n    uint var_4h;\n    \n    uVar2 = fcn.0044447d(arg_10h);\n    if (arg_ch < *unaff_ESI) {\n        iVar1 = arg_ch * 0x14;\n        do {\n            uVar3 = fcn.004444aa(arg_8h, *(iVar1 + unaff_ESI[3]));\n            arg_ch = arg_ch + 1;\n            iVar1 = iVar1 + 0x14;\n            if ((uVar3 & ~uVar2 | uVar3 >> 0x20 & ~(uVar2 >> 0x20)) != 0) {\n                return 1;\n            }\n        } while (arg_ch < *unaff_ESI);\n    }\n    return 0;\n}\n",
        "token_count": 225
    },
    "00444fb7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00444fb7(uint32_t param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    bool bVar5;\n    ulong uVar6;\n    uint32_t uVar7;\n    \n    uVar3 = 1;\n    iVar4 = 0;\n    uVar1 = 10;\n    if (-1 < param_2) {\n        if (param_2 < 1) goto code_r0x00444fe4;\n        do {\n            do {\n                bVar5 = 0xfffffffe < uVar3;\n                uVar3 = uVar3 + 1;\n                iVar4 = iVar4 + bVar5;\n                uVar7 = uVar1;\n                uVar6 = fcn.0044b8cd();\n                iVar2 = uVar6 >> 0x20;\n                uVar1 = uVar6;\n            } while (iVar2 < uVar7);\n            if (uVar7 < iVar2) break;\ncode_r0x00444fe4:\n        } while (uVar1 < param_1);\n    }\n    return CONCAT44(iVar4, uVar3);\n}\n",
        "token_count": 275
    },
    "004475b5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nuint __fastcall fcn.004475b5(uint param_1, uchar param_2)\n\n{\n    int32_t in_EAX;\n    \n    // switch table (1 cases) at 0x43e618\n    switch(param_2) {\n    case 0xa0:\n    case 0xdc:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xa1:\n    case 0xc1:\n    case 0xdd:\n    case 0xe9:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xa2:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xa3:\n    case 0xab:\n    case 0xbd:\n    case 0xc3:\n    case 0xc6:\n    case 0xc9:\n    case 0xcc:\n    case 0xcf:\n    case 0xd6:\n    case 0xd9:\n    case 0xdf:\n    case 0xec:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xa4:\n    case 199:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xa5:\n    case 0xbf:\n    case 200:\n    case 0xd8:\n    case 0xe1:\n    case 0xee:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xa6:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xa7:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xa8:\n    case 0xc2:\n    case 0xce:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xa9:\n    case 0xb0:\n    case 0xe6:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xaa:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xac:\n    case 0xda:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xad:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xae:\n    case 0xb7:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xaf:\n    case 0xb8:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xb1:\n    case 0xb4:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xb2:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xb3:\n    case 0xdb:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xb5:\n    case 0xb6:\n    case 0xe5:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xb9:\n    case 0xd2:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xba:\n    case 0xd0:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xbb:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xbc:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xbe:\n    case 0xc4:\n    case 0xd7:\n    case 0xe0:\n    case 0xed:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xc0:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xc5:\n    case 0xcb:\n    case 0xe7:\n    case 0xf2:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xca:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xcd:\n    case 0xde:\n    case 0xe4:\n    case 0xea:\n    case 0xf1:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd1:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd3:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd4:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xd5:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xe2:\n    case 0xef:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xe3:\n    case 0xf0:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xe8:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xeb:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    case 0xf3:\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    default:\n        return *(in_EAX + 8);\n    }\n}\n",
        "token_count": 1337
    },
    "004476c2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nushort __fastcall fcn.004476c2(uint8_t param_1)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    \n    uVar4 = param_1;\n    uVar5 = *(in_EAX + *in_EAX * 4 + 3);\n    do {\n        if ((0x1a2 < uVar5) || (iVar1 = *(uVar5 * 2 + 0x445ae0),  iVar1 == -0x4a)) goto code_r0x00447711;\n        uVar2 = iVar1 + uVar4;\n        uVar3 = uVar4;\n        if ((uVar2 < 0x615) && (*(uVar2 + 0x4454c8) == uVar3)) {\ncode_r0x0044772f:\n            return *(uVar2 * 2 + 0x444898);\n        }\n        if (uVar3 == 0) goto code_r0x00447711;\n        if ((0x42 < uVar3) || (*(uVar4 + 0x446590) == 0)) {\n            iVar1 = uVar2 - uVar4;\n            uVar2 = iVar1 + 0x43;\n            if ((-1 < uVar2) && (*(iVar1 + 0x44550b) == 'C')) goto code_r0x0044772f;\ncode_r0x00447711:\n            return *(uVar5 * 2 + 0x4460a0);\n        }\n        uVar4 = *(uVar4 + 0x446590);\n    } while( true );\n}\n",
        "token_count": 392
    },
    "00449b20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00449b20(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*0x44f0c0 != 0) {\n        return 0;\n    }\n    iVar1 = fcn.0041bbec();\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    uVar2 = fcn.0041bc38(2);\n    fcn.0041bc4a(uVar2);\n    *0x44f0c8 = 1;\n    if ((*0x44f0cc != 0) || (iVar1 = fcn.0041bd57(),  iVar1 == 0)) {\n        *0x44f0cc = 1;\n        if ((*0x44f0d4 == 0) && ((*0x44f0d4 = fcn.0041bc38(1),  *0x44f00c != 0 && (*0x44f0d4 == 0)))) {\n            iVar1 = 7;\n        }\n        else {\n            *0x44f0d8 = *0x44f0d8 + 1;\n        }\n    }\n    fcn.0041bc58(uVar2);\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    fcn.0041bc4a(*0x44f0d4);\n    if ((*0x44f0c0 != 0) || (*0x44f0c4 != 0)) goto code_r0x00449c69;\n    *0x44f0c4 = 1;\n    fcn.0044b531(0x450d00, 0, 0x5c);\n    fcn.0043b521();\n    if (*0x44f0d0 == 0) {\n        if (*0x44f068 == NULL) {\n            fcn.0041ff98();\n        }\n        iVar1 = (**0x44f068)(*0x44f064);\n        if (iVar1 == 0) goto code_r0x00449c1e;\n    }\n    else {\ncode_r0x00449c1e:\n        *0x44f0d0 = 1;\n        iVar1 = fcn.0041bf75(10);\n        if (iVar1 == 0) {\n            iVar1 = 7;\n        }\n        else {\n            fcn.0041c110(iVar1);\n            iVar1 = fcn.0041f1bd();\n            if (iVar1 == 0) {\n                fcn.0041f79e();\n                *0x44f0c0 = 1;\n            }\n        }\n    }\n    *0x44f0c4 = 0;\ncode_r0x00449c69:\n    fcn.0041bc58(*0x44f0d4);\n    fcn.0041bc4a(uVar2);\n    *0x44f0d8 = *0x44f0d8 + -1;\n    if (*0x44f0d8 < 1) {\n        if (*0x44f0d4 != 0) {\n            (**0x44f04c)(*0x44f0d4);\n        }\n        *0x44f0d4 = 0;\n    }\n    fcn.0041bc58(uVar2);\n    return iVar1;\n}\n",
        "token_count": 752
    },
    "00449e42": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00449e42(int32_t arg_8h)\n\n{\n    uint32_t in_EAX;\n    uint uVar1;\n    uint *puVar2;\n    int32_t unaff_ESI;\n    uint32_t uVar3;\n    \n    if (*(unaff_ESI + 0xec) == 0) {\n        if (*(unaff_ESI + 0xeb) != '\\0') {\n            fcn.0041c110(*(unaff_ESI + 0x104));\n        }\n        if (in_EAX < 5) {\n            in_EAX = 0;\n        }\n        if (arg_8h < 0) {\n            arg_8h = 0;\n        }\n        if ((in_EAX == 0) || (arg_8h == 0)) {\n            uVar3 = 0;\n            puVar2 = NULL;\n        }\n        else {\n            uVar3 = in_EAX & 0xfffffff8;\n            puVar2 = fcn.0041bf1f(uVar3 * arg_8h);\n        }\n        *(unaff_ESI + 0x104) = puVar2;\n        *(unaff_ESI + 0x100) = 0;\n        *(unaff_ESI + 0xe8) = uVar3;\n        if (puVar2 == NULL) {\n            *(unaff_ESI + 0x108) = 0;\n            *(unaff_ESI + 0xea) = 0;\n            *(unaff_ESI + 0xeb) = 0;\n        }\n        else {\n            while (arg_8h = arg_8h + -1,  -1 < arg_8h) {\n                *puVar2 = *(unaff_ESI + 0x100);\n                *(unaff_ESI + 0x100) = puVar2;\n                puVar2 = puVar2 + uVar3;\n            }\n            *(unaff_ESI + 0x108) = puVar2;\n            *(unaff_ESI + 0xea) = 1;\n            *(unaff_ESI + 0xeb) = 1;\n        }\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 5;\n    }\n    return uVar1;\n}\n",
        "token_count": 503
    },
    "00449f19": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00449f19(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    \n    iVar2 = arg_14h;\n    if (arg_ch < arg_14h) {\n        iVar2 = arg_ch;\n    }\n    iVar1 = fcn.0044b5ab(arg_10h, arg_18h, iVar2);\n    if (iVar1 == 0) {\n        if ((arg_8h != 0) && (iVar1 = fcn.00449efd(iVar2 + arg_10h),  iVar1 != 0)) {\n            uVar3 = fcn.00449efd(iVar2 + arg_18h);\n            if (uVar3 != 0) {\n                return uVar3 >> 0x20;\n            }\n        }\n        iVar1 = arg_ch - arg_14h;\n    }\n    return iVar1;\n}\n",
        "token_count": 243
    },
    "00449fda": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00449fda(uint param_1)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    \n    piVar1 = *(in_EAX + 0x20);\n    if ((piVar1 != NULL) && (*piVar1 = *piVar1 + -1,  *piVar1 == 0)) {\n        (*piVar1[1])(piVar1[2]);\n        fcn.0041c16b(param_1, piVar1);\n    }\n    return;\n}\n",
        "token_count": 118
    },
    "0044a20e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044a20e(void)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar3 = 0;\n    bVar1 = false;\n    var_4h = 0;\n    if (0 < *(in_EAX + 4)) {\n        do {\n            if (*(*(in_EAX + 8) + 4 + iVar3) != 0) {\n                iVar2 = fcn.0042874c();\n                if (iVar2 != 0) {\n                    bVar1 = true;\n                }\n                fcn.00425e8f();\n                *(*(in_EAX + 8) + 8 + iVar3) = 0;\n            }\n            var_4h = var_4h + 1;\n            iVar3 = iVar3 + 0x10;\n        } while (var_4h < *(in_EAX + 4));\n    }\n    fcn.0044408e(0x44);\n    if ((*(in_EAX + 0xc) & 0x200) != 0) {\n        fcn.0042b6cc();\n        fcn.00436864();\n    }\n    *(in_EAX + 0x1d8) = 0;\n    *(in_EAX + 0x1dc) = 0;\n    if ((*(in_EAX + 0xb4) != NULL) && ((bVar1 || (*(in_EAX + 0x1c) == '\\0')))) {\n        (**(in_EAX + 0xb4))(*(in_EAX + 0xb0));\n    }\n    return;\n}\n",
        "token_count": 386
    },
    "0044a574": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0044a574(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint8_t in_AL;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint extraout_ECX;\n    int32_t extraout_ECX_00;\n    code **ppcVar3;\n    int32_t unaff_EDI;\n    uint uVar4;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = in_AL;\n    fcn.0041d157();\n    if ((var_4h == 4) || (var_4h == 8)) {\n        var_4h = 2;\n    }\n    if (var_4h - 1 < 3) {\n        iVar1 = fcn.0043949d(var_4h, extraout_ECX, 0);\n        if ((iVar1 != 0) && (*(iVar1 + 0xc) != 0)) {\n            if (*(unaff_EDI + 0x8c) != 0) {\n                fcn.0041d171(5, 0x44c8c8);\n                return 5;\n            }\n            fcn.0042b6cc();\n            if ((*(extraout_ECX_00 + 4) & 0xfffffff7) == var_4h) {\n                iVar2 = fcn.0041dace(arg_8h);\n                ppcVar3 = iVar2 + 0x10;\n                var_8h = 3;\n                do {\n                    if (*(ppcVar3 + -3) == *(iVar1 + 4)) {\n                        if (*ppcVar3 != NULL) {\n                            (**ppcVar3)(ppcVar3[-2]);\n                        }\n                        ppcVar3[-1] = NULL;\n                    }\n                    ppcVar3 = ppcVar3 + 5;\n                    var_8h = var_8h + -1;\n                } while (var_8h != 0);\n            }\n        }\n        iVar1 = fcn.0043949d(var_4h, arg_8h, 1);\n        if (iVar1 == 0) {\n            uVar4 = 7;\n        }\n        else {\n            *(iVar1 + 0xc) = arg_14h;\n            *(iVar1 + 8) = arg_10h;\n            *(iVar1 + 0x10) = 0;\n            *(iVar1 + 4) = in_AL & 8 | var_4h;\n            *(iVar1 + 5) = arg_ch;\n            fcn.0041d171(0, 0);\n            uVar4 = 0;\n        }\n    }\n    else {\n        uVar4 = fcn.0044a94a(0x1a072);\n    }\n    return uVar4;\n}\n",
        "token_count": 653
    },
    "0044a92e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0044a92e(uint param_1)\n\n{\n    fcn.0041cf9b(0xb, 0x44c92c, param_1, 0x44c7cc);\n    return 0xb;\n}\n",
        "token_count": 56
    },
    "0044a94a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0044a94a(uint param_1)\n\n{\n    fcn.0041cf9b(0x15, 0x44c958, param_1, 0x44c7cc);\n    return 0x15;\n}\n",
        "token_count": 57
    },
    "0044a966": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0044a966(uint param_1)\n\n{\n    fcn.0041cf9b(0xe, 0x44c978, param_1, 0x44c7cc);\n    return 0xe;\n}\n",
        "token_count": 54
    },
    "0044ab93": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0044ab93(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_408h;\n    uint var_208h;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0044b56f(&var_208h, 0x44ca94);\n    fcn.0044b519(&var_208h, arg_ch);\n    fcn.0044b519(&var_208h, 0x4482d0);\n    fcn.0044b519(&var_208h, arg_10h);\n    iVar1 = fcn.0044b8a1(arg_8h, &var_208h, &var_4h, &var_8h);\n    if (iVar1 != 0) {\n        fcn.00410454(var_4h);\n        fcn.0041051e();\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 222
    },
    "0044ac22": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044ac22(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint *unaff_EDI;\n    uint var_238h;\n    uint var_38h;\n    uint var_10h;\n    ushort *var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_10h = 0;\n    var_4h = fcn.0044b8a7(arg_8h, &var_10h);\n    if (var_4h == 0) {\n        return 0;\n    }\n    fcn.00412f28();\n    arg_8h_00 = fcn.0044b5b1(var_4h);\n    fcn.0044b89b(arg_8h, 0, var_4h, arg_8h_00);\n    iVar1 = fcn.0044b8a1(arg_8h_00, 0x4482d0, &var_8h, &var_4h);\n    if (iVar1 != 0) {\n        unaff_EDI[1] = *(var_8h + 0x30);\n        *unaff_EDI = *(var_8h + 8);\n        unaff_EDI[3] = *(var_8h + 0x14);\n        unaff_EDI[2] = *(var_8h + 0x10);\n        unaff_EDI[4] = *(var_8h + 0x24);\n        unaff_EDI[5] = *(var_8h + 0x28);\n    }\n    iVar1 = fcn.0044b8a1(arg_8h_00, 0x44cab8, &var_ch, &var_4h);\n    if (iVar1 != 0) {\n        fcn.0044b51f(&var_38h, 0x14, 0x44caec, *var_ch, var_ch[1]);\n        iVar1 = fcn.0044ab93(arg_8h_00, &var_38h, 0x4434fc);\n        if (iVar1 != 0) goto code_r0x0044ad04;\n    }\n    fcn.0044b56f(&var_38h, 0x44cb04);\ncode_r0x0044ad04:\n    fcn.0044ab93(arg_8h_00, &var_38h, 0x44cb18);\n    fcn.0044ab93(arg_8h_00, &var_38h, 0x44cb30);\n    fcn.0044ab93(arg_8h_00, &var_38h, 0x44cb50);\n    fcn.0044ab93(arg_8h_00, &var_38h, 0x44cb68);\n    fcn.0044ab93(arg_8h_00, &var_38h, 0x44cb88);\n    fcn.0044ab93(arg_8h_00, &var_38h, 0x44cba0);\n    fcn.0044ab93(arg_8h_00, &var_38h, 0x44cbbc);\n    fcn.0044ab93(arg_8h_00, &var_38h, 0x44cbdc);\n    fcn.0044b5b7(arg_8h_00);\n    return 1;\n}\n",
        "token_count": 783
    },
    "0044ba9d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.0044ba9d(void)\n\n{\n    uint32_t in_EAX;\n    uchar *puVar1;\n    uint unaff_retaddr;\n    \n    if (in_EAX < 0x1000) {\n        *(&stack0x00000000 + -in_EAX) = unaff_retaddr;\n        return;\n    }\n    puVar1 = &stack0x00000004;\n    do {\n        puVar1 = puVar1 + -0x1000;\n        in_EAX = in_EAX - 0x1000;\n    } while (0xfff < in_EAX);\n    *(puVar1 + (-4 - in_EAX)) = unaff_retaddr;\n    return;\n}\n",
        "token_count": 168
    },
    "0045fe72": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.0045fe72(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *unaff_ESI;\n    uchar *unaff_EDI;\n    uint var_1h;\n    \n    iVar2 = 0;\n    *unaff_EDI = 0;\n    cVar1 = *unaff_ESI;\n    while (cVar1 != '\\0') {\n        fcn.004703b0();\n        iVar2 = iVar2 + 1;\n        cVar1 = unaff_ESI[iVar2];\n    }\n    return;\n}\n",
        "token_count": 141
    },
    "0045fea5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0045fea5(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    \n    iVar5 = 0;\n    uVar6 = 1;\n    pcVar4 = 0x412458;\n    cVar1 = 'M';\n    do {\n        iVar3 = cVar1;\n        uVar2 = uVar6 & 0x80000003;\n        if (uVar2 < 0) {\n            uVar2 = (uVar2 - 1 | 0xfffffffc) + 1;\n        }\n        iVar5 = iVar3 * uVar6 + iVar5 + (iVar3 % 0xd + 2) * (uVar2 + 2);\n        uVar6 = uVar6 + iVar3 % 7;\n        pcVar4 = pcVar4 + 1;\n        cVar1 = *pcVar4;\n    } while (cVar1 != '\\0');\n    return iVar5;\n}\n",
        "token_count": 242
    },
    "0046050d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046050d(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = (*_fcn.004121a4)(*(in_EAX + 0x10), arg_ch);\n    (*_fcn.004121b8)(*(in_EAX + 0x10), &var_10h);\n    iVar3 = 0;\n    if (0 < *(in_EAX + 0xa24)) {\n        piVar2 = in_EAX + 0x14;\n        do {\n            iVar3 = iVar3 + 1;\n            if (*piVar2 == iVar1) {\n                iVar3 = iVar3 * 0x14 + in_EAX;\n                goto code_r0x00460552;\n            }\n            piVar2 = piVar2 + 5;\n        } while (iVar3 < *(in_EAX + 0xa24));\n    }\n    iVar3 = 0;\ncode_r0x00460552:\n    if (iVar3 != 0) {\n        var_8h = var_8h - *(in_EAX + 0xa1c);\n        (*_fcn.004121e0)(arg_8h, iVar1, 0, var_8h * arg_10h + *(iVar3 + 4), \n                         (var_4h - *(in_EAX + 0xa20)) * arg_14h + *(iVar3 + 8), \n                         (var_8h * arg_18h + *(iVar3 + 0xc)) - *(iVar3 + 4), *(iVar3 + 0x10) - *(iVar3 + 8), 4);\n    }\n    return;\n}\n",
        "token_count": 446
    },
    "00460b09": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00460b09(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_408h;\n    uint var_4h;\n    \n    uVar2 = 0;\n    iVar1 = fcn.0046d9b1(arg_8h, arg_ch, &var_4h);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0046d9f2(var_4h, arg_10h, &var_408h);\n        if (iVar1 == 0) {\n            iVar1 = fcn.00470412(&var_408h, 0x20);\n            if (iVar1 != 0) {\n                iVar1 = fcn.00470412(iVar1 + 1, 0x20);\n                if (iVar1 != 0) {\n                    fcn.00464f42(iVar1 + 1);\n                    uVar2 = 1;\n                }\n            }\n        }\n        (**0x412008)(var_4h);\n    }\n    return uVar2;\n}\n",
        "token_count": 253
    },
    "00461819": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00461819(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    char *unaff_ESI;\n    uint var_408h;\n    uint var_4h;\n    \n    var_4h = 0x400;\n    *unaff_ESI = '\\0';\n    iVar1 = fcn.0046da15(arg_8h, arg_ch, &var_408h, &var_4h);\n    if (iVar1 == 0) {\n        (**0x4120d4)(0, 0, &var_408h, 0xffffffff);\n    }\n    return *unaff_ESI != '\\0';\n}\n",
        "token_count": 151
    },
    "0046186d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046186d(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t arg_ch;\n    uint *unaff_ESI;\n    uchar var_104h;\n    uint var_103h;\n    uint var_4h;\n    \n    arg_ch = 0;\n    var_104h = 0;\n    fcn.004703f4(&var_103h, 0, 0xff);\n    iVar2 = fcn.0046da77(*unaff_ESI, 0, &var_104h);\n    pcVar1 = *0x412008;\n    while (iVar2 == 0) {\n        iVar2 = fcn.0046d9b1(*unaff_ESI, &var_104h, &var_4h);\n        if (iVar2 == 0) {\n            fcn.00461642(arg_8h, var_4h);\n            (*pcVar1)(var_4h);\n        }\n        arg_ch = arg_ch + 1;\n        iVar2 = fcn.0046da77(*unaff_ESI, arg_ch, &var_104h);\n    }\n    (*pcVar1)(*unaff_ESI);\n    return;\n}\n",
        "token_count": 277
    },
    "004618f6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004618f6(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t arg_ch;\n    uint *unaff_EDI;\n    uchar var_104h;\n    uint var_103h;\n    uint var_4h;\n    \n    arg_ch = 0;\n    var_104h = 0;\n    fcn.004703f4(&var_103h, 0, 0xff);\n    iVar1 = fcn.0046da77(*unaff_EDI, 0, &var_104h);\n    while (iVar1 == 0) {\n        iVar1 = fcn.0046d9b1(*unaff_EDI, &var_104h, &var_4h);\n        if (iVar1 == 0) {\n            fcn.0046186d(arg_8h);\n        }\n        arg_ch = arg_ch + 1;\n        iVar1 = fcn.0046da77(*unaff_EDI, arg_ch, &var_104h);\n    }\n    (**0x412008)(*unaff_EDI);\n    return;\n}\n",
        "token_count": 245
    },
    "0046197b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046197b(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *unaff_ESI;\n    uchar var_108h;\n    uint var_107h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_108h = 0;\n    fcn.004703f4(&var_107h, 0, 0xff);\n    iVar1 = fcn.0046da77(*unaff_ESI, 0, &var_108h);\n    while (iVar1 == 0) {\n        fcn.00464f42(&var_108h);\n        iVar1 = fcn.0046d9b1(*unaff_ESI, &var_108h, &var_8h);\n        if (iVar1 == 0) {\n            fcn.004618f6(arg_8h);\n        }\n        var_4h = var_4h + 1;\n        iVar1 = fcn.0046da77(*unaff_ESI, var_4h, &var_108h);\n    }\n    (**0x412008)(*unaff_ESI);\n    *(arg_8h + 0xa9c) = 0;\n    return;\n}\n",
        "token_count": 288
    },
    "00461a2a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00461a2a(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t arg_ch_00;\n    uint *unaff_ESI;\n    uchar var_104h;\n    uint var_103h;\n    uint var_4h;\n    \n    arg_ch_00 = 0;\n    var_104h = 0;\n    fcn.004703f4(&var_103h, 0, 0xff);\n    iVar2 = fcn.0046da77(*unaff_ESI, 0, &var_104h);\n    pcVar1 = *0x412008;\n    while (iVar2 == 0) {\n        iVar2 = fcn.0046d9b1(*unaff_ESI, &var_104h, &var_4h);\n        if (iVar2 == 0) {\n            fcn.00461478(arg_8h, var_4h, arg_ch);\n            (*pcVar1)(var_4h);\n        }\n        arg_ch_00 = arg_ch_00 + 1;\n        iVar2 = fcn.0046da77(*unaff_ESI, arg_ch_00, &var_104h);\n    }\n    (*pcVar1)(*unaff_ESI);\n    return;\n}\n",
        "token_count": 295
    },
    "00461ab6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00461ab6(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uchar var_510h;\n    uint var_50fh;\n    uchar var_110h;\n    uint var_10fh;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.0046d9b1(0x80000001, 0x41285c, &var_4h);\n    if (iVar1 == 0) {\n        var_8h = 0;\n        var_110h = 0;\n        fcn.004703f4(&var_10fh, 0, 0xff);\n        iVar1 = fcn.0046da77(var_4h, 0, &var_110h);\n        while (iVar1 == 0) {\n            fcn.0046da33(var_4h, &var_110h, 0x412868, arg_8h + 0xa9c, 0x7f);\n            var_510h = 0;\n            fcn.004703f4(&var_50fh, 0, 0x3ff);\n            fcn.004703aa(&var_510h, 0x4128ac, &var_110h, 0x412874);\n            iVar1 = fcn.0046d9b1(var_4h, &var_510h, &var_ch);\n            if (iVar1 == 0) {\n                fcn.00461a2a(arg_8h, 1);\n            }\n            fcn.004703aa(&var_510h, 0x4128ac, &var_110h, 0x4128b4);\n            iVar1 = fcn.0046d9b1(var_4h, &var_510h, &var_10h);\n            if (iVar1 == 0) {\n                fcn.00461a2a(arg_8h, 5);\n            }\n            var_8h = var_8h + 1;\n            iVar1 = fcn.0046da77(var_4h, var_8h, &var_110h);\n        }\n        (**0x412008)(var_4h);\n    }\n    *(arg_8h + 0xa9c) = 0;\n    return;\n}\n",
        "token_count": 535
    },
    "00461e34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00461e34(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uchar var_338h;\n    uint var_337h;\n    uchar var_20ch;\n    uint var_20bh;\n    uchar var_10ch;\n    uint var_10bh;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.0046d9b1(arg_8h, 0x412990, &arg_8h);\n    if (iVar1 == 0) {\n        var_8h = 0;\n        var_10ch = 0;\n        fcn.004703f4(&var_10bh, 0, 0xff);\n        iVar1 = fcn.0046da77(arg_8h, 0, &var_10ch);\n        while (iVar1 == 0) {\n            fcn.0046da33(arg_8h, &var_10ch, 0x4129b0, in_EAX + 0xa9c, 0x7f);\n            var_338h = 0;\n            fcn.004703f4(&var_337h, 0, 299);\n            fcn.004703aa(&var_338h, 0x4129bc, &var_10ch);\n            iVar1 = fcn.0046d9b1(arg_8h, &var_338h, &var_4h);\n            if (iVar1 == 0) {\n                var_ch = 0;\n                var_20ch = 0;\n                fcn.004703f4(&var_20bh, 0, 0xff);\n                iVar1 = fcn.0046da77(var_4h, 0, &var_20ch);\n                while (iVar1 == 0) {\n                    fcn.00461c0c(var_4h, &var_20ch);\n                    var_ch = var_ch + 1;\n                    iVar1 = fcn.0046da77(var_4h, var_ch, &var_20ch);\n                }\n                (**0x412008)(var_4h);\n            }\n            var_8h = var_8h + 1;\n            iVar1 = fcn.0046da77(arg_8h, var_8h, &var_10ch);\n        }\n        (**0x412008)(arg_8h);\n    }\n    *(in_EAX + 0xa9c) = 0;\n    return;\n}\n",
        "token_count": 571
    },
    "00462110": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00462110(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    char *arg_8h_00;\n    uint var_b50h;\n    uint var_7ach;\n    uchar var_408h;\n    uint var_407h;\n    uchar var_bh;\n    uchar var_ah;\n    uchar var_9h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_8h_00 = arg_8h + 0xd2a;\n    if (*arg_8h_00 != '\\0') {\n        fcn.0046104a();\n        iVar1 = fcn.00461fbf(arg_8h_00, 0);\n        if (iVar1 != 0) {\n            fcn.00461279(arg_8h);\n        }\n        var_408h = 0;\n        fcn.004703f4(&var_407h, 0, 0x400);\n        iVar1 = (**0x4120e4)(0x412a1c, &var_408h, 0x3fe, arg_8h_00);\n        if (iVar1 != 0) {\n            var_8h._0_1_ = 0;\n            var_9h = 0;\n            var_ah = 0;\n            var_bh = 0;\n            iVar1 = 0;\n            puVar3 = &var_408h;\n            while (var_4h = fcn.004703b6(puVar3),  0 < var_4h) {\n                fcn.0046104a();\n                iVar2 = fcn.00470412(&var_408h + iVar1, 0x3d);\n                if ((iVar2 != 0) && (iVar2 = fcn.00461fbf(arg_8h + 0xd2a, iVar2 + 1),  iVar2 != 0)) {\n                    fcn.00461279(arg_8h);\n                }\n                iVar1 = iVar1 + 1 + var_4h;\n                if (0x3fe < iVar1) {\n                    return;\n                }\n                puVar3 = &var_407h + iVar1 + -1;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 528
    },
    "0046233d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046233d(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uchar var_210h;\n    uint var_20fh;\n    uchar var_108h;\n    uint var_107h;\n    \n    var_210h = 0;\n    fcn.004703f4(&var_20fh, 0, 0x104);\n    var_108h = 0;\n    fcn.004703f4(&var_107h, 0, 0x104);\n    iVar1 = fcn.0046da33(0x80000002, 0x412a94, 0x412a88, &var_210h, 0xfa);\n    if (iVar1 != 0) {\n        fcn.004703fa(&var_108h, &var_210h);\n        fcn.00464d91();\n        fcn.004703a4(&var_108h, 0x412aa8);\n        fcn.00462249(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 235
    },
    "004623de": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004623de(int32_t arg_8h)\n\n{\n    uchar *puVar1;\n    uint var_3a8h;\n    uint var_39ch;\n    uint var_31ch;\n    uint var_318h;\n    uint var_298h;\n    uint var_198h;\n    uint var_194h;\n    uint var_114h;\n    int32_t var_4h;\n    \n    fcn.0046104a();\n    fcn.00464f42(arg_8h + 0x100);\n    fcn.00464f42(arg_8h + 0x100);\n    fcn.00464f42(arg_8h + 0x200);\n    fcn.00464f42(arg_8h);\n    fcn.00464f42(arg_8h + 0x300);\n    puVar1 = fcn.00470412(&var_194h, 0x40);\n    if (puVar1 != NULL) {\n        *puVar1 = 0;\n    }\n    fcn.00461279(var_4h + -0x86c);\n    return;\n}\n",
        "token_count": 253
    },
    "00462499": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00462499(int32_t arg_8h)\n\n{\n    uchar *puVar1;\n    uint var_3a8h;\n    uint var_39ch;\n    uint var_31ch;\n    uint var_318h;\n    uint var_198h;\n    uint var_194h;\n    uint var_114h;\n    int32_t var_4h;\n    \n    fcn.0046104a();\n    var_31ch = 7;\n    var_198h = 3;\n    fcn.00464f42(arg_8h);\n    fcn.00464f42(arg_8h + 0x100);\n    fcn.00464f42(arg_8h);\n    puVar1 = fcn.00470412(&var_39ch, 0x40);\n    if (puVar1 != NULL) {\n        *puVar1 = 0;\n    }\n    fcn.004703fa(&var_194h, &var_39ch);\n    fcn.00461279(var_4h + -0x858);\n    return 1;\n}\n",
        "token_count": 243
    },
    "00462623": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00462623(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    uchar var_ba4h;\n    uint var_ba3h;\n    uchar var_7a4h;\n    uint var_7a3h;\n    uint var_3a4h;\n    uint var_398h;\n    uint var_318h;\n    uint var_314h;\n    uint var_194h;\n    uint var_190h;\n    uint var_110h;\n    \n    var_7a4h = 0;\n    fcn.004703f4(&var_7a3h, 0, 0x3ff);\n    var_ba4h = 0;\n    fcn.004703f4(&var_ba3h, 0, 0x3ff);\n    iVar1 = fcn.0046fdeb(&var_ba4h, &var_7a4h);\n    if (iVar1 != 0) {\n        fcn.0046104a();\n        fcn.00464f42(&var_7a4h);\n        fcn.00464f42(&var_ba4h);\n        var_318h = 9;\n        var_194h = 3;\n        puVar2 = fcn.00470412(&var_190h, 0x40);\n        if (puVar2 == NULL) {\n            iVar1 = fcn.004703b6(&var_190h);\n            if (iVar1 + 10U < 0x7f) {\n                fcn.004703aa(&var_314h, 0x412ac0, &var_190h);\n            }\n        }\n        else {\n            fcn.004703fa(&var_314h);\n            *puVar2 = 0;\n        }\n        fcn.004703fa(&var_398h, &var_190h);\n        fcn.00461279(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 441
    },
    "004628c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004628c4(uint arg_8h, int32_t arg_ch)\n\n{\n    uint arg_10h;\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint var_40h;\n    \n    if (arg_ch == 8) {\n        puVar2 = 0x412ad0;\n        puVar3 = &var_40h;\n        for (iVar1 = 0xf; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar3 = *puVar2;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n        *puVar3 = *puVar2;\n        arg_10h = fcn.004703b6(&var_40h);\n        fcn.00465587(arg_8h, &var_40h, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 215
    },
    "004628ff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004628ff(uint arg_8h, uint arg_ch)\n\n{\n    ushort uStack24584;\n    uchar auStack24582 [16382];\n    uchar uStack8200;\n    uchar auStack8199 [8107];\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uchar *puStack80;\n    uint *puStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uchar *puStack20;\n    uint uStack16;\n    uint var_4h;\n    \n    var_4h = 0x46290c;\n    fcn.00470712();\n    uStack16 = 0x3ffe;\n    puStack24 = &stack0xffff9ffa;\n    puStack20 = NULL;\n    uStack24584 = 0;\n    uStack28 = 0x462929;\n    fcn.004703f4();\n    uStack28 = 0x1fff;\n    puStack36 = &stack0xffffdff9;\n    uStack32 = 0;\n    uStack8200 = 0;\n    uStack40 = 0x462942;\n    fcn.004703f4();\n    uStack16 = 0x1fff;\n    puStack20 = &stack0xffff9ff8;\n    puStack24 = 0xffffffff;\n    uStack28 = arg_ch;\n    uStack32 = 0;\n    puStack36 = NULL;\n    uStack40 = 0x46295a;\n    (**0x4120d0)();\n    uStack40 = 0;\n    uStack44 = 0;\n    uStack48 = 0x1fff;\n    puStack52 = &stack0xffffdff8;\n    uStack56 = 0xffffffff;\n    puStack60 = &stack0xffff9ff8;\n    uStack64 = 0;\n    uStack68 = 0xfde9;\n    uStack72 = 0x462979;\n    (**0x4120d4)();\n    uStack72 = 0;\n    puStack76 = &fcn.004628ff::var_4h;\n    puStack80 = &stack0xffffdff8;\n    puStack84 = 0x46298a;\n    puStack80 = fcn.004703b6();\n    puStack84 = &stack0xffffdff8;\n    uStack88 = arg_8h;\n    uStack92 = 0x46299c;\n    (**0x4120e0)();\n    return;\n}\n",
        "token_count": 633
    },
    "00462cf9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00462cf9(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t *extraout_ECX;\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint var_1048h;\n    uchar var_c48h;\n    uint var_c47h;\n    uchar var_848h;\n    uint var_847h;\n    uchar var_448h;\n    uint var_447h;\n    uint var_48h;\n    uint uStackY64;\n    uint *puStackY60;\n    uint uStackY56;\n    uint uStackY52;\n    uint var_4h;\n    \n    fcn.00470712();\n    fcn.00464d6f(arg_8h, 0x413d38);\n    var_448h = 0;\n    fcn.004703f4();\n    var_c48h = 0;\n    uStackY52 = 0x462d4a;\n    fcn.004703f4();\n    uStackY52 = 0x3ff;\n    puStackY60 = &fcn.00462cf9::var_847h;\n    uStackY56 = 0;\n    var_848h = 0;\n    uStackY64 = 0x462d5e;\n    fcn.004703f4();\n    if (*0x417308 != '\\0') {\n        fcn.004703aa();\n    }\n    if (*0x417304 != 0) {\n        fcn.004703fa();\n    }\n    (**(*extraout_ECX + 0x1c))();\n    puVar2 = 0x413d78;\n    puVar3 = &fcn.00462cf9::var_48h;\n    for (iVar1 = 0x10; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = *puVar2;\n    fcn.004703aa();\n    uStackY52 = 0x462de1;\n    fcn.00464d6f(arg_8h, &fcn.00462cf9::var_1048h);\n    fcn.00466771();\n    fcn.004703aa();\n    fcn.00464d6f(arg_8h, &stack0xfffff7b4);\n    if (arg_ch == 4) {\n        fcn.00468658();\n    }\n    return;\n}\n",
        "token_count": 592
    },
    "0046334c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046334c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_3a8h;\n    uint var_39ch;\n    uint var_31ch;\n    uint var_318h;\n    uint var_298h;\n    uint var_198h;\n    uint var_194h;\n    uint var_114h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0046104a();\n    fcn.00464f42(arg_8h + 0x404);\n    fcn.00464f42(arg_8h + 0x204);\n    fcn.00464f42(arg_8h + 4);\n    fcn.00464f42(arg_8h + 0x104);\n    fcn.00464f42(arg_8h + 0x304);\n    arg_8h = arg_8h + 0x504;\n    iVar1 = fcn.00470424(arg_8h, 0x412e68);\n    if ((iVar1 != 0) && (iVar1 = fcn.00470424(arg_8h, 0x412e70),  iVar1 != 0)) {\n        fcn.00470424(arg_8h, 0x412e78);\n    }\n    fcn.00461279(in_ECX + -0x1c8);\n    return;\n}\n",
        "token_count": 333
    },
    "00463766": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00463766(uint arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_2ch;\n    uint var_ch;\n    \n    iVar1 = fcn.00463832(arg_8h, arg_ch, 0);\n    if (iVar1 != 0) {\n        *arg_10h = var_ch;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 102
    },
    "004639a7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004639a7(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h;\n    \n    iVar1 = (*_fcn.00412210)();\n    arg_8h = 1;\n    if (1 < iVar1) {\n        do {\n            iVar2 = fcn.0046374e();\n            if (iVar2 != 0) {\n                fcn.00463888(arg_8h, arg_8h + -1);\n            }\n            arg_8h = arg_8h + 1;\n        } while (arg_8h < iVar1);\n    }\n    return;\n}\n",
        "token_count": 145
    },
    "004639ea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004639ea(void)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    int32_t arg_ch;\n    \n    arg_8h = (*_fcn.00412210)();\n    while (arg_ch = arg_8h,  arg_8h = arg_ch + -1,  -1 < arg_8h) {\n        iVar1 = fcn.0046374e();\n        if (iVar1 != 0) {\n            fcn.00463888(arg_8h, arg_ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 127
    },
    "00463a26": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00463a26(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint unaff_ESI;\n    int32_t arg_ch;\n    uint unaff_EDI;\n    \n    iVar1 = (*_fcn.00412210)(param_1, 0x1004, 0, 0);\n    arg_ch = 1;\n    if (1 < iVar1) {\n        do {\n            iVar2 = fcn.0046374e(unaff_EDI, arg_ch, 2);\n            if (iVar2 != 0) {\n                fcn.00463b5b(unaff_EDI, arg_ch, unaff_ESI);\n            }\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < iVar1);\n    }\n    return;\n}\n",
        "token_count": 180
    },
    "00463bb4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00463bb4(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00463b3e(param_1, param_2);\n    fcn.00463b5b(param_1, param_2, iVar1 == 0);\n    return;\n}\n",
        "token_count": 75
    },
    "004641cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004641cc(void)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    fcn.00463dc0();\n    fcn.00463dc0();\n    fcn.00463dc0();\n    puVar1 = in_EAX + 0x184;\n    puVar2 = in_EAX + 0x17c;\n    iVar3 = 0x10;\n    do {\n        puVar1[-1] = puVar2[-1];\n        *puVar1 = *puVar2;\n        puVar1[-0x41] = puVar2[0x3f];\n        puVar1[-0x40] = puVar2[0x40];\n        puVar1[0x3f] = puVar2[-0x41];\n        puVar1[0x40] = puVar2[-0x40];\n        puVar1 = puVar1 + 2;\n        puVar2 = puVar2 + -2;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    return 0;\n}\n",
        "token_count": 258
    },
    "004643aa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004643aa(void)\n\n{\n    ushort *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t arg_ch;\n    int32_t unaff_ESI;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = (*_fcn.004121a4)(*(unaff_ESI + 4), 0x3e9);\n    iVar2 = *(*(unaff_ESI + 0xc) + 4);\n    arg_ch = 0;\n    if (0 < iVar2) {\n        do {\n            iVar3 = fcn.00463766(var_4h, arg_ch, &var_8h);\n            if (iVar3 != 0) {\n                puVar1 = **(unaff_ESI + 0xc) + var_8h * 4;\n                puVar1[1] = arg_ch;\n                iVar3 = fcn.00463b3e(var_4h, arg_ch);\n                if (iVar3 == 0) {\n                    *puVar1 = 0;\n                }\n            }\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < iVar2);\n    }\n    return;\n}\n",
        "token_count": 278
    },
    "00464411": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00464411(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_ch;\n    int16_t *piVar5;\n    uchar var_13ch;\n    uint var_13bh;\n    uint var_3ch;\n    uchar *var_30h;\n    uint var_2ch;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    \n    var_8h = (*_fcn.004121a4)(*(arg_8h + 4), 0x3e9);\n    pcVar2 = _fcn.00412210;\n    (*_fcn.00412210)(var_8h, 0x1009, 0, 0);\n    (*pcVar2)(var_8h, 0x1036, 0, 0x26);\n    do {\n        iVar3 = (*pcVar2)(var_8h, 0x101c, 0, 0);\n    } while (iVar3 != 0);\n    fcn.00463797(var_8h, 0, 0, 200);\n    var_1ch = (*(arg_8h + 0xc))[1];\n    var_18h = **(arg_8h + 0xc);\n    var_10h = 0;\n    if (0 < var_1ch) {\n        do {\n            var_ch = 0;\n            var_14h = 0;\n            do {\n                iVar3 = var_ch * 4;\n                if (*(var_18h + 2 + iVar3) == var_10h) {\n                    var_13ch = 0;\n                    fcn.004703f4(&var_13bh, 0, 0xff);\n                    var_30h = &var_13ch;\n                    var_3ch = 4;\n                    var_2ch = 0xff;\n                    iVar4 = (*_fcn.00412210)(*(*(arg_8h + 0xc) + 8), 0x1019, var_ch, &var_3ch);\n                    if (iVar4 != 0) {\n                        arg_ch = fcn.004637e0(var_8h, 0, var_ch);\n                        piVar5 = iVar3 + var_18h;\n                        iVar1 = *piVar5;\n                        fcn.00463b5b(var_8h, arg_ch, 0 < iVar1);\n                        if (iVar1 == 0) {\n                            *piVar5 = *(*(arg_8h + 0x10) + 0xc + var_14h);\n                        }\n                    }\n                }\n                var_ch = var_ch + 1;\n                var_14h = var_14h + 0x14;\n            } while (var_ch < var_1ch);\n            var_10h = var_10h + 1;\n        } while (var_10h < var_1ch);\n    }\n    fcn.00463728(var_8h, 0, 2);\n    (*_fcn.00412220)(var_8h);\n    return;\n}\n",
        "token_count": 737
    },
    "00464db3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00464db3(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint var_800h;\n    uint var_400h;\n    \n    if (in_EAX == 0) {\n        in_EAX = (*_fcn.00412118)();\n    }\n    fcn.00464cb8(&var_400h);\n    fcn.004703aa(&var_800h, 0x413048, in_EAX, &var_400h);\n    (*_fcn.0041220c)(arg_8h, &var_800h, 0x412fbc, 0x30);\n    return;\n}\n",
        "token_count": 147
    },
    "00464edb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00464edb(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    bool bVar4;\n    \n    bVar4 = false;\n    (*_fcn.00412230)();\n    if (param_1 != 0) {\n        iVar1 = fcn.004703b6(param_1);\n        iVar2 = (*_fcn.00412094)(0x2000, iVar1 + 1);\n        if (iVar2 != 0) {\n            uVar3 = (*_fcn.004120f4)(iVar2);\n            fcn.0047043c(uVar3, param_1, iVar1 + 1);\n            (*_fcn.004120f8)(iVar2);\n            iVar1 = (*_fcn.00412250)(1, iVar2);\n            bVar4 = iVar1 != 0;\n        }\n    }\n    (*_fcn.0041226c)();\n    return bVar4;\n}\n",
        "token_count": 219
    },
    "00464f42": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00464f42(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    int32_t unaff_EDI;\n    \n    iVar1 = fcn.004703b6(param_1);\n    if (unaff_EBX <= iVar1) {\n        iVar1 = unaff_EBX + -1;\n    }\n    fcn.0047043c();\n    *(iVar1 + unaff_EDI) = 0;\n    return;\n}\n",
        "token_count": 109
    },
    "00464f6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00464f6c(uint param_1, int32_t param_2, int32_t param_3, int32_t param_4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t *unaff_EDI;\n    \n    iVar1 = *in_EAX;\n    if (iVar1 <= param_2) {\n        iVar2 = *unaff_EDI;\n        do {\n            *in_EAX = *in_EAX + param_4;\n        } while (*in_EAX <= param_2);\n        iVar3 = fcn.00470460(*in_EAX * param_3);\n        *unaff_EDI = iVar3;\n        if (0 < iVar1) {\n            if (iVar3 != 0) {\n                fcn.0047043c(iVar3, iVar2, iVar1 * param_3);\n            }\n            fcn.0047047e(iVar2);\n        }\n        return *unaff_EDI != 0;\n    }\n    return false;\n}\n",
        "token_count": 244
    },
    "00465003": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00465003(uint param_1, uint param_2, uchar param_3)\n\n{\n    uint *in_EAX;\n    \n    fcn.004703f4();\n    *in_EAX = param_2;\n    in_EAX[1] = 0;\n    in_EAX[2] = 0;\n    in_EAX[3] = 0;\n    *(in_EAX + 0x16) = 0;\n    *(in_EAX + 0x17) = 1;\n    *(in_EAX + 6) = 0;\n    *(in_EAX + 0x19) = 0;\n    *(in_EAX + 0x1a) = 0;\n    *(in_EAX + 0x1b) = 0;\n    in_EAX[4] = 700;\n    *(in_EAX + 5) = 0;\n    *(in_EAX + 0x15) = param_3;\n    fcn.004703fa(in_EAX + 7, param_1);\n    return;\n}\n",
        "token_count": 236
    },
    "00465071": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00465071(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_ESI;\n    \n    fcn.004703fa();\n    puVar1 = fcn.00470454();\n    if (puVar1 == NULL) {\n        *unaff_ESI = 0;\n    }\n    else {\n        *puVar1 = 0;\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "004650c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004650c4(void)\n\n{\n    uint var_3ch;\n    \n    fcn.00465003(0x413478, 0xe, 0);\n    (*_fcn.0041204c)(&var_3ch);\n    return;\n}\n",
        "token_count": 60
    },
    "0046511f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0046511f(void)\n\n{\n    fcn.004703fa();\n    fcn.00464d91();\n    fcn.004703a4();\n    return 1;\n}\n",
        "token_count": 44
    },
    "00465143": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00465143(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uchar var_100h;\n    uint var_ffh;\n    \n    var_100h = 0;\n    fcn.004703f4(&var_ffh, 0, 0xff);\n    (*_fcn.00412268)(arg_8h, &var_100h, 0xff);\n    iVar1 = fcn.00470424(&var_100h, 0x413058);\n    return iVar1 == 0;\n}\n",
        "token_count": 122
    },
    "004651ca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004651ca(ulong param_1)\n\n{\n    uint var_8h;\n    \n    fcn.00470478(param_1, &var_8h);\n    var_8h = ROUND(_var_8h);\n    return var_8h;\n}\n",
        "token_count": 61
    },
    "00465384": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00465384(uint param_1)\n\n{\n    fcn.0047046c(param_1, 0, 0x10);\n    return;\n}\n",
        "token_count": 38
    },
    "004655a6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004655a6(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EDI;\n    \n    iVar1 = fcn.004703b6();\n    iVar2 = fcn.004703b6(param_1);\n    if (iVar2 + iVar1 < 0x104) {\n        fcn.004703a4(iVar1 + unaff_EDI, param_1);\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "004655d5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004655d5(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uchar *unaff_EBX;\n    uint32_t uVar3;\n    uint var_10h;\n    uint uStack15;\n    uchar uStack11;\n    uint32_t var_4h;\n    \n    *unaff_EBX = 0;\n    if (arg_ch == 0) {\n        uVar2 = 0;\n    }\n    else {\n        var_4h = 0;\n        uVar1 = 3;\n        do {\n            uVar3 = uVar1;\n            var_10h._0_1_ = 0;\n            stack0xffffffed = 0;\n            uStack15 = 0;\n            uStack11 = 0;\n            fcn.004703aa(&var_10h, 0x413088, *(var_4h + arg_8h));\n            fcn.0047043c(unaff_EBX + (uVar3 - 3), &var_10h, 3);\n            if (0x1fff < uVar3) break;\n            var_4h = var_4h + 1;\n            uVar1 = uVar3 + 3;\n        } while (var_4h < arg_ch);\n        unaff_EBX[uVar3 - 1] = 0;\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 341
    },
    "004656bf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004656bf(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uchar *unaff_EBX;\n    uint *puVar2;\n    int32_t iVar3;\n    uchar var_404h;\n    uint var_403h;\n    int32_t var_4h;\n    \n    iVar3 = 0;\n    var_404h = 0;\n    fcn.004703f4(&var_403h, 0, 0x3ff);\n    *unaff_EBX = 0;\n    if (0 < arg_ch) {\n        puVar2 = arg_8h + 4;\n        var_4h = arg_ch;\n        do {\n            fcn.004703aa(&var_404h, 0x413090, puVar2[-1], *puVar2);\n            iVar1 = fcn.004703b6(&var_404h);\n            fcn.0047043c(unaff_EBX + iVar3, &var_404h, iVar1 + 1);\n            iVar1 = iVar3 + 1 + iVar1;\n            iVar3 = fcn.004703b6(*puVar2);\n            fcn.0047043c(unaff_EBX + iVar1, *puVar2, iVar3 + 1);\n            puVar2 = puVar2 + 2;\n            var_4h = var_4h + -1;\n            iVar3 = iVar1 + 1 + iVar3;\n        } while (var_4h != 0);\n    }\n    unaff_EBX[iVar3] = 0;\n    (unaff_EBX + iVar3)[1] = 0;\n    return;\n}\n",
        "token_count": 377
    },
    "004657ef": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004657ef(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.004703b6(arg_8h);\n    iVar2 = fcn.004703b6();\n    if (iVar1 <= iVar2) {\n        iVar4 = iVar1;\n        do {\n            iVar3 = fcn.00470472((in_EAX - iVar1) + iVar4, arg_8h, iVar1);\n            if (iVar3 == 0) {\n                return var_4h;\n            }\n            var_4h = var_4h + 1;\n            iVar4 = iVar4 + 1;\n        } while (iVar4 <= iVar2);\n    }\n    return -1;\n}\n",
        "token_count": 220
    },
    "00465844": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00465844(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.004703b6(arg_8h);\n    iVar2 = fcn.004703b6();\n    iVar4 = iVar1 + in_EAX;\n    if (iVar4 <= iVar2) {\n        var_4h = in_EAX;\n        do {\n            iVar3 = fcn.0047045a((in_ECX - iVar1) + iVar4, arg_8h, iVar1);\n            if (iVar3 == 0) {\n                return var_4h;\n            }\n            var_4h = var_4h + 1;\n            iVar4 = iVar4 + 1;\n        } while (iVar4 <= iVar2);\n    }\n    return -1;\n}\n",
        "token_count": 234
    },
    "00465981": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00465981(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    \n    if ((-1 < in_EAX) && (in_EAX < *(param_1 + 0x1c))) {\n        return *(*(param_1 + 0xc) + in_EAX * 4) + *(param_1 + 0x10);\n    }\n    return 0;\n}\n",
        "token_count": 96
    },
    "00465cda": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00465cda(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    fcn.00465dcd();\n    fcn.00464f42(arg_ch);\n    iVar1 = fcn.004703b6(in_EAX + 0x3cc);\n    iVar2 = fcn.004703b6(arg_8h);\n    if (iVar1 + 1 + iVar2 < 0x143) {\n        fcn.0046511f(in_EAX + 0x3cc, arg_8h);\n    }\n    else {\n        *(in_EAX + 4) = 0;\n    }\n    return;\n}\n",
        "token_count": 167
    },
    "00465e77": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00465e77(int32_t **param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = 0;\n    if (0 < param_1[1]) {\n        piVar2 = *param_1;\n        do {\n            if (*piVar2 == param_2) {\n                (*param_1)[iVar1 * 2] = 0;\n                (*param_1)[iVar1 * 2 + 1] = 0;\n                return 1;\n            }\n            iVar1 = iVar1 + 1;\n            piVar2 = piVar2 + 2;\n        } while (iVar1 < param_1[1]);\n    }\n    return 0;\n}\n",
        "token_count": 174
    },
    "00465eb2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00465eb2(int32_t param_1)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (0 < in_EAX[1]) {\n        piVar1 = *in_EAX + 4;\n        do {\n            if (*piVar1 == param_1) {\n                return *(*in_EAX + iVar2 * 8);\n            }\n            iVar2 = iVar2 + 1;\n            piVar1 = piVar1 + 2;\n        } while (iVar2 < in_EAX[1]);\n    }\n    return 0;\n}\n",
        "token_count": 148
    },
    "0046600e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046600e(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint unaff_EDI;\n    int32_t arg_ch;\n    uint uStack272;\n    uint uStack268;\n    uchar uStack264;\n    uchar auStack263 [259];\n    \n    iVar2 = fcn.0046d9b1(0x80000001, 0x4130c4, &uStack272);\n    if (iVar2 == 0) {\n        arg_ch = 0;\n        uStack264 = 0;\n        fcn.004703f4(auStack263, 0, 0xff);\n        iVar2 = fcn.0046da77(uStack272, 0, &uStack264);\n        pcVar1 = *0x412008;\n        while (iVar2 == 0) {\n            iVar2 = fcn.0046d9b1(uStack272, &uStack264, &uStack268);\n            if (iVar2 == 0) {\n                fcn.00465ede(arg_8h, uStack268, &uStack264);\n                (*pcVar1)(unaff_EDI);\n            }\n            arg_ch = arg_ch + 1;\n            iVar2 = fcn.0046da77(uStack272, arg_ch, &uStack264);\n        }\n        (*pcVar1)(uStack272);\n    }\n    return;\n}\n",
        "token_count": 317
    },
    "004660be": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004660be(uint32_t arg_8h)\n\n{\n    uint32_t *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint16_t *puVar8;\n    uint16_t var_620h;\n    uint var_61eh;\n    uint16_t var_420h;\n    uint var_41eh;\n    uchar var_220h;\n    uint var_21fh;\n    uchar var_120h;\n    uint var_11fh;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uchar var_ch;\n    uchar var_bh;\n    uchar var_ah;\n    uchar var_9h;\n    uchar var_8h;\n    uchar var_7h;\n    uchar var_6h;\n    uchar var_5h;\n    uchar var_4h;\n    uchar var_3h;\n    uchar var_2h;\n    uchar var_1h;\n    \n    iVar7 = 0;\n    var_10h._0_1_ = 0xa3;\n    var_10h._1_1_ = 0x1e;\n    var_10h._2_1_ = 0xf3;\n    var_10h._3_1_ = 0x69;\n    var_ch = 7;\n    var_bh = 0x62;\n    var_ah = 0xd9;\n    var_9h = 0x1f;\n    var_8h = 0x1e;\n    var_7h = 0xe9;\n    var_6h = 0x35;\n    var_5h = 0x7d;\n    var_4h = 0x4f;\n    var_3h = 0xd2;\n    var_2h = 0x7d;\n    var_1h = 0x48;\n    var_120h = 0;\n    fcn.004703f4(&var_11fh, 0, 0xff);\n    var_220h = 0;\n    fcn.004703f4(&var_21fh, 0, 0xff);\n    var_620h = 0;\n    fcn.004703f4(&var_61eh, 0, 0x1fe);\n    var_420h = 0;\n    fcn.004703f4(&var_41eh, 0, 0x1fe);\n    var_20h = arg_8h + 4;\n    arg_8h = 0;\n    var_14h = 0xff;\n    (**0x412090)(&var_120h, &var_14h);\n    var_14h = 0xff;\n    (**0x412018)(&var_220h, &var_14h);\n    pcVar2 = *0x4120d0;\n    (**0x4120d0)(0, 0, &var_120h, 0xffffffff, &var_620h, 0xff);\n    (*pcVar2)(0, 0, &var_220h, 0xffffffff, &var_420h, 0xff);\n    var_1ch = fcn.004703b6(&var_120h);\n    var_18h = fcn.004703b6(&var_220h);\n    iVar3 = var_20h;\n    fcn.0047043c(var_20h, &var_10h, 0x10);\n    iVar4 = -0x45f258e3;\n    if (0 < var_18h) {\n        puVar8 = &var_420h;\n        do {\n            uVar6 = arg_8h & 0x80000003;\n            if (uVar6 < 0) {\n                uVar6 = (uVar6 - 1 | 0xfffffffc) + 1;\n            }\n            uVar5 = *puVar8 * iVar4;\n            iVar4 = iVar4 * 0xbc8f;\n            puVar1 = iVar3 + uVar6 * 4;\n            *puVar1 = *puVar1 ^ uVar5;\n            arg_8h = arg_8h + 1;\n            puVar8 = puVar8 + 1;\n        } while (arg_8h < var_18h);\n    }\n    if (0 < var_1ch) {\n        do {\n            uVar6 = arg_8h & 0x80000003;\n            if (uVar6 < 0) {\n                uVar6 = (uVar6 - 1 | 0xfffffffc) + 1;\n            }\n            uVar5 = (&var_620h)[iVar7] * iVar4;\n            iVar4 = iVar4 * 0xbc8f;\n            puVar1 = iVar3 + uVar6 * 4;\n            *puVar1 = *puVar1 ^ uVar5;\n            arg_8h = arg_8h + 1;\n            iVar7 = iVar7 + 1;\n        } while (iVar7 < var_1ch);\n    }\n    return;\n}\n",
        "token_count": 1185
    },
    "004663bf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004663bf(uint32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint unaff_retaddr;\n    uchar in_stack_00000104;\n    uint uStack8;\n    \n    fcn.00470712();\n    fcn.004660be(arg_8h);\n    iVar2 = fcn.0046d9b1(0x80000001, 0x4130f4, &uStack8);\n    if (iVar2 == 0) {\n        iVar2 = 0;\n        arg_8h = arg_8h & 0xffffff00;\n        fcn.004703f4(&arg_8h + 1, 0, 0xff);\n        iVar3 = fcn.0046da77(uStack8, 0, &arg_8h);\n        pcVar1 = *0x412008;\n        while (iVar3 == 0) {\n            iVar3 = fcn.0046d9b1(uStack8, &arg_8h, *0x10);\n            if (iVar3 == 0) {\n                in_stack_00000104 = 0;\n                fcn.004703f4(&stack0x00000105, 0, 0xfff);\n                fcn.0046d9f2(unaff_retaddr, 0x41311c, &stack0x00000104);\n                fcn.00466278(arg_8h, &arg_8h);\n                (*pcVar1)(uStack8);\n            }\n            iVar2 = iVar2 + 1;\n            iVar3 = fcn.0046da77(uStack8, iVar2, &arg_8h);\n        }\n        (*pcVar1)(uStack8);\n    }\n    return;\n}\n",
        "token_count": 402
    },
    "004664cd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004664cd(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    ushort *puVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint uVar7;\n    uint32_t uStack1192;\n    int32_t iStack1188;\n    uint32_t uStack1184;\n    int32_t iStack1180;\n    uint uStack1176;\n    uchar auStack1172 [8];\n    uint uStack1164;\n    uint uStack1160;\n    ushort *puStack1156;\n    ushort *puStack1152;\n    uint uStack1148;\n    uint uStack1144;\n    uint uStack1140;\n    uint uStack1136;\n    uint uStack1132;\n    uint uStack1128;\n    uint uStack1112;\n    uint uStack1108;\n    code *pcStack1100;\n    int32_t iStack1092;\n    code *pcStack1088;\n    uint auStack1084 [6];\n    ushort uStack1060;\n    uchar auStack1058 [508];\n    ushort uStack550;\n    \n    uStack1112 = 0;\n    uStack1108 = 0;\n    iVar1 = fcn.004634b9();\n    if (iVar1 != 0) {\n        iStack1188 = 0;\n        uStack1184 = 0;\n        if (iStack1092 == 0) {\n            iVar1 = 0;\n        }\n        else {\n            iVar1 = (*pcStack1088)(0, 0, &uStack1184, &iStack1188);\n        }\n        if (iVar1 != 0) {\n            puVar5 = 0x413120;\n            puVar6 = auStack1084;\n            for (iVar1 = 9; iVar1 != 0; iVar1 = iVar1 + -1) {\n                *puVar6 = *puVar5;\n                puVar5 = puVar5 + 1;\n                puVar6 = puVar6 + 1;\n            }\n            uStack1176 = fcn.00470496(auStack1084);\n            iStack1180 = 1;\n            uStack1192 = 0;\n            if (uStack1184 != 0) {\n                do {\n                    if (iStack1180 == 0) break;\n                    iVar1 = *(iStack1188 + uStack1192 * 4);\n                    uVar7 = *(iVar1 + 8);\n                    uVar2 = fcn.0047048a(uVar7, auStack1084, uStack1176);\n                    if (uVar2 == 0) {\n                        do {\n                            *(uVar2 + 0x417968) = *(uVar2 + 0x416ad8) << 2;\n                            uVar2 = uVar2 + 2;\n                        } while (uVar2 < 0x4a);\n                        puStack1152 = *(iVar1 + 0x1c);\n                        puStack1156 = *(iVar1 + 0x18);\n                        uStack1164 = 0x4a;\n                        uStack1160 = 0x417968;\n                        fcn.00463549();\n                        iVar3 = fcn.00463612();\n                        if (iVar3 != 0) {\n                            iVar3 = fcn.00463683(uVar7, &uStack1164, auStack1172, &puStack1156);\n                            if (iVar3 != 0) {\n                                uStack1060 = 0;\n                                fcn.004703f4(auStack1058, 0, 0x1fe);\n                                uVar2 = uStack1184;\n                                if (0x1fa < uStack1184) {\n                                    uVar2 = 0x1fa;\n                                }\n                                fcn.0047043c(&uStack1060, iStack1180, uVar2);\n                                uStack1136 = *(iVar1 + 0x20);\n                                uStack1140 = *(iVar1 + 4);\n                                uStack1132 = *(iVar1 + 0x10);\n                                uStack1128 = *(iVar1 + 0x14);\n                                uStack1144 = *(iVar1 + 0x2c);\n                                uStack1160 = *(iVar1 + 8);\n                                uStack1148 = *(iVar1 + 0xc);\n                                puStack1156 = &uStack1060;\n                                uStack550 = 0;\n                                puStack1152 = 0x4125f4;\n                                puVar4 = fcn.00470490(puStack1156, 0x3a);\n                                if (puVar4 != NULL) {\n                                    *puVar4 = 0;\n                                    puStack1152 = puVar4 + 1;\n                                }\n                                (***arg_8h)(&uStack1160);\n                                (*_fcn.004120dc)(uStack1184);\n                            }\n                        }\n                        fcn.00463663();\n                    }\n                    uStack1192 = uStack1192 + 1;\n                } while (uStack1192 < uStack1184);\n            }\n            (*pcStack1100)(iStack1188);\n        }\n    }\n    fcn.00463534();\n    return;\n}\n",
        "token_count": 1164
    },
    "004668d6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0046695e)\n// WARNING: Removing unreachable block (ram,0x00466991)\n// WARNING: Removing unreachable block (ram,0x004669a2)\n// WARNING: Removing unreachable block (ram,0x00466996)\n// WARNING: Removing unreachable block (ram,0x004669b4)\n// WARNING: Removing unreachable block (ram,0x004669c8)\n// WARNING: Removing unreachable block (ram,0x004669ce)\n// WARNING: Removing unreachable block (ram,0x004669e1)\n\nvoid __cdecl fcn.004668d6(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_stack_00000014;\n    int32_t iVar3;\n    \n    fcn.00470712();\n    iVar1 = (**0x412254)();\n    iVar3 = 0;\n    if (0 < iVar1) {\n        do {\n            fcn.004703f4();\n            iVar2 = (**0x41227c)();\n            if ((iVar2 != 0) && (in_stack_00000014 != 0)) {\n                fcn.004668d6(0x36, in_stack_00000014, 0);\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < iVar1);\n    }\n    return;\n}\n",
        "token_count": 316
    },
    "00466b1f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00466b1f(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uchar var_1004h;\n    uint var_1003h;\n    uint uStackY20;\n    \n    fcn.00470712();\n    var_1004h = 0;\n    uStackY20 = 0x466b46;\n    fcn.004703f4();\n    arg_8h_00 = (*_fcn.0041217c)();\n    uStackY20 = 0x466b5f;\n    iVar1 = fcn.00466bfb(arg_8h_00, &stack0xffffeff8);\n    if (iVar1 != 0) {\n        uStackY20 = 0x466b75;\n        (*_fcn.004121d0)();\n    }\n    return 1;\n}\n",
        "token_count": 196
    },
    "00466bfb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00466bfb(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_20h;\n    \n    var_20h._0_1_ = 0;\n    puVar2 = &var_20h + 1;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fcn.0047049c(arg_8h, &var_20h, 10);\n    fcn.00466c57(&var_20h, arg_ch);\n    return;\n}\n",
        "token_count": 195
    },
    "00466d35": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00466d35(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_20h;\n    \n    var_20h._0_1_ = 0;\n    puVar2 = &var_20h + 1;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fcn.0047049c(arg_8h, &var_20h, 10);\n    fcn.00466cc7(&var_20h, arg_ch);\n    return;\n}\n",
        "token_count": 195
    },
    "00466e5d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00466e5d(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    char var_1104h;\n    uint var_1103h;\n    uchar var_100h;\n    uint var_ffh;\n    uint uStackY56;\n    \n    fcn.00470712();\n    var_1104h = '\\0';\n    fcn.004703f4();\n    arg_8h_00 = (*_fcn.0041217c)();\n    (*_fcn.00412280)();\n    if ((0 < arg_8h_00) && (var_1104h != '\\0')) {\n        var_100h = 0;\n        fcn.004703f4();\n        (*_fcn.00412268)();\n        uStackY56 = 0x466ef1;\n        iVar1 = fcn.00470424();\n        if (iVar1 != 0) {\n            uStackY56 = 0x466f04;\n            fcn.00466d35(arg_8h_00, &stack0xffffeef8);\n        }\n    }\n    return 1;\n}\n",
        "token_count": 258
    },
    "00467027": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00467027(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00464fbd(param_1);\n    if (iVar1 != 0) {\n        fcn.004703fa(0x4171b8, param_1);\n        fcn.004703fa(0x4172c0, 0x41316c);\n        iVar1 = (*_fcn.0041208c)(0x4172c0, 0x413188, 0, 0x4171b8);\n        *0x417304 = iVar1 == 1;\n        fcn.00466c33(0x41318c, 0x3f);\n        fcn.00466c33(0x413194, 0x3f);\n        fcn.00466c33(0x4131a4, 0xff);\n    }\n    return;\n}\n",
        "token_count": 205
    },
    "004670af": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004670af(void)\n\n{\n    uchar var_108h;\n    uint var_107h;\n    \n    var_108h = 0;\n    fcn.004703f4(&var_107h, 0, 0x104);\n    fcn.004671ba();\n    fcn.00467027(&var_108h);\n    return;\n}\n",
        "token_count": 82
    },
    "004670ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004670ec(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t arg_8h_00;\n    uchar var_1004h;\n    uint var_1003h;\n    uint uStackY72;\n    uint *puStackY68;\n    uint uStackY64;\n    uint32_t uStackY60;\n    \n    fcn.00470712();\n    fcn.004703fa();\n    fcn.004703fa();\n    fcn.00466cc7(0x413194, 0x412466);\n    fcn.00466cc7(0x4131a4, 0x412466);\n    pcVar1 = *0x412084;\n    (**0x412084)();\n    (*pcVar1)();\n    uStackY60 = 0x467161;\n    fcn.004703fa();\n    uStackY60 = 0x1000;\n    arg_8h_00 = 0;\n    puStackY68 = &fcn.004670ec::var_1003h;\n    uStackY64 = 0;\n    var_1004h = 0;\n    uStackY72 = 0x46717d;\n    fcn.004703f4();\n    do {\n        uStackY64 = arg_8h;\n        puStackY68 = 0x467192;\n        uStackY60 = arg_8h_00;\n        iVar2 = (**0x412248)();\n        if (0 < iVar2) {\n            uStackY60 = 0x4671a3;\n            fcn.00466d35(arg_8h_00, &stack0xffffeff8);\n        }\n        arg_8h_00 = arg_8h_00 + 1;\n    } while (arg_8h_00 < 0x10000);\n    *0x4171b8 = 0;\n    return;\n}\n",
        "token_count": 434
    },
    "004671ba": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004671ba(void)\n\n{\n    uchar *puVar1;\n    \n    fcn.00464fd2();\n    puVar1 = fcn.00470454();\n    if (puVar1 != NULL) {\n        *puVar1 = 0;\n    }\n    fcn.004703a4();\n    return;\n}\n",
        "token_count": 74
    },
    "004671e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004671e0(void)\n\n{\n    uchar var_108h;\n    uint var_107h;\n    \n    var_108h = 0;\n    fcn.004703f4(&var_107h, 0, 0x104);\n    fcn.004671ba();\n    fcn.004670ec(*0x416b94, &var_108h);\n    return;\n}\n",
        "token_count": 90
    },
    "004672b3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004672b3(int32_t arg_8h)\n\n{\n    ushort *puVar1;\n    int32_t iVar2;\n    int32_t *unaff_ESI;\n    int32_t iVar3;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_8h;\n    \n    iVar3 = 0;\n    if (arg_8h != 0) {\n        fcn.004703f4(*unaff_ESI, 0, unaff_ESI[1] << 2);\n        if (0 < unaff_ESI[1]) {\n            do {\n                var_18h = 0;\n                var_14h = 0;\n                puVar1 = *unaff_ESI + iVar3 * 4;\n                var_24h = 0x22;\n                iVar2 = (*_fcn.00412210)(arg_8h, 0x1019, iVar3, &var_24h);\n                if (iVar2 != 0) {\n                    *puVar1 = var_1ch;\n                    puVar1[1] = var_8h;\n                }\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < unaff_ESI[1]);\n        }\n    }\n    return;\n}\n",
        "token_count": 306
    },
    "004674c6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004674c6(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00463728(*(in_EAX + 0x184), param_1, param_2);\n    return;\n}\n",
        "token_count": 58
    },
    "004675ce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004675ce(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    fcn.004673e4();\n    *(in_EAX + 0x2c) = 0;\n    *(in_EAX + 0x184) = arg_8h;\n    *(in_EAX + 0x1b0) = 0xd;\n    uVar2 = fcn.00470442(0x104);\n    *(in_EAX + 0x1b4) = uVar2;\n    uVar2 = fcn.00470442(0xd0);\n    *(in_EAX + 0x34) = uVar2;\n    var_4h = 0x4168e0;\n    do {\n        iVar3 = *var_4h;\n        iVar5 = iVar3 * 0x14;\n        fcn.0047043c(*(in_EAX + 0x1b4) + iVar5, var_4h, 0x14);\n        iVar3 = iVar3 * 0x10;\n        fcn.0047043c(*(in_EAX + 0x34) + iVar3, var_4h + 5, 0x10);\n        uVar1 = *(iVar5 + 0x10 + *(in_EAX + 0x1b4));\n        *(*(in_EAX + 0x34) + 0xc + iVar3) = uVar1;\n        if ((uVar1 & 0xffff0000) == 0) {\n            uVar2 = fcn.00466771();\n            *(iVar5 + 0x10 + *(in_EAX + 0x1b4)) = uVar2;\n            uVar2 = fcn.00466771();\n            *(*(in_EAX + 0x34) + 0xc + iVar3) = uVar2;\n        }\n        var_4h = var_4h + 9;\n    } while (var_4h < 0x416ab4);\n    *(in_EAX + 0x38) = 0;\n    *(in_EAX + 0x3c) = arg_ch;\n    *(in_EAX + 0x20) = 0xd;\n    *(in_EAX + 0x1c) = 0x20;\n    uVar2 = fcn.00470442(0x34);\n    *(in_EAX + 0x24) = uVar2;\n    piVar4 = fcn.00470442(0xc);\n    if (piVar4 == NULL) {\n        piVar4 = NULL;\n    }\n    else {\n        arg_ch = *(in_EAX + 0x48);\n        if (arg_ch == 0) {\n            arg_ch = 100;\n        }\n        piVar4[2] = arg_8h;\n        piVar4[1] = 0xd;\n        iVar3 = fcn.00470442(0x34);\n        arg_8h = 0;\n        *piVar4 = iVar3;\n        do {\n            iVar3 = arg_8h + 1;\n            *(*piVar4 + 2 + arg_8h * 4) = arg_8h;\n            *(arg_8h * 4 + *piVar4) = arg_ch;\n            arg_8h = iVar3;\n        } while (iVar3 < 0xd);\n    }\n    *(in_EAX + 0x19c) = 0;\n    *(in_EAX + 0x1a0) = piVar4;\n    *(in_EAX + 0x40) = 1;\n    *(in_EAX + 0x198) = 1;\n    *(in_EAX + 0x1a4) = 1;\n    *(in_EAX + 0x1a8) = 1;\n    *(in_EAX + 0x1c4) = 0x32;\n    fcn.0046754e();\n    return;\n}\n",
        "token_count": 950
    },
    "00467af6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00467af6(uint *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *unaff_ESI;\n    \n    iVar1 = fcn.00463766(unaff_ESI[0x61], arg_ch, &arg_ch);\n    if (iVar1 != 0) {\n        uVar2 = (**(*unaff_ESI + 100))(arg_ch);\n        *arg_8h = uVar2;\n    }\n    return iVar1;\n}\n",
        "token_count": 122
    },
    "00467b80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid fcn.00467b80(uint *param_1, uint param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *unaff_ESI;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (0 < unaff_ESI[0x6c]) {\n        do {\n            uVar1 = (**(*unaff_ESI + 0x3c))();\n            fcn.00463bd8(unaff_ESI[0x61], param_2, unaff_ESI[0x13], uVar1);\n            uVar1 = (***param_1)(iVar3, unaff_ESI[0x14]);\n            iVar2 = fcn.00470466(unaff_ESI[0x13], uVar1);\n            if (iVar2 != 0) {\n                fcn.00463b8e(unaff_ESI[0x61], param_2, uVar1);\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < unaff_ESI[0x6c]);\n    }\n    return;\n}\n",
        "token_count": 248
    },
    "00467f20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00467f20(uint param_1)\n\n{\n    int32_t iVar1;\n    uint arg_ch;\n    uint *unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (0 < *(unaff_ESI + 0x20)) {\n        do {\n            iVar1 = *(*(unaff_ESI + 0x24) + iVar2 * 4);\n            if (unaff_EBX == NULL) {\n                arg_ch = *(*(unaff_ESI + 0x1b4) + 0x10 + iVar1 * 0x14);\n            }\n            else {\n                arg_ch = (***unaff_EBX)(iVar1, *(unaff_ESI + 0x4c));\n            }\n            fcn.00464d6f(param_1, arg_ch);\n            fcn.00464d6f(param_1, 0x4131c0);\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < *(unaff_ESI + 0x20));\n    }\n    fcn.00464d6f(param_1, 0x412b1c);\n    return;\n}\n",
        "token_count": 270
    },
    "00467f80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00467f80(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_ESI;\n    uint var_104h;\n    uint var_d2h;\n    int32_t var_4h;\n    \n    var_4h = *(unaff_ESI + 0x1b4);\n    fcn.004703f4(&var_104h, 0x3d, 0x32);\n    iVar3 = 0;\n    var_d2h._0_1_ = 0;\n    fcn.00464d6f(arg_8h, &var_104h);\n    fcn.00464d6f(arg_8h, 0x412b1c);\n    if (0 < *(unaff_ESI + 0x20)) {\n        do {\n            iVar1 = *(*(unaff_ESI + 0x24) + iVar3 * 4);\n            uVar2 = (***arg_ch)(iVar1, *(unaff_ESI + 0x4c));\n            fcn.004703aa(*(unaff_ESI + 0x50), 0x4131c4, *(iVar1 * 0x14 + 0x10 + var_4h), uVar2);\n            fcn.00464d6f(arg_8h, *(unaff_ESI + 0x50));\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < *(unaff_ESI + 0x20));\n    }\n    fcn.00464d6f(arg_8h, &var_104h);\n    fcn.00464d6f(arg_8h, 0x412b1c);\n    fcn.00464d6f(arg_8h, 0x412b1c);\n    return;\n}\n",
        "token_count": 433
    },
    "00468166": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00468166(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_ESI;\n    int32_t iVar3;\n    uint var_14h;\n    \n    iVar3 = 0;\n    if (0 < *(unaff_ESI + 0x20)) {\n        do {\n            iVar1 = *(*(unaff_ESI + 0x24) + iVar3 * 4);\n            uVar2 = *(iVar1 * 0x10 + 8 + *(unaff_ESI + 0x34));\n            fcn.004703aa(&var_14h, 0x4131d0, uVar2, uVar2);\n            uVar2 = (***arg_ch)(iVar1, *(unaff_ESI + 0x50));\n            fcn.004703aa(*(unaff_ESI + 0x4c), &var_14h, uVar2);\n            fcn.00464d6f(arg_8h, *(unaff_ESI + 0x4c));\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < *(unaff_ESI + 0x20));\n    }\n    fcn.00464d6f(arg_8h, 0x412b1c);\n    return;\n}\n",
        "token_count": 301
    },
    "00468507": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00468507(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EDI;\n    uchar var_100h;\n    uint var_ffh;\n    \n    fcn.00464d6f(arg_8h, 0x4132b8);\n    iVar2 = 0;\n    if (0 < *(unaff_EDI + 0x20)) {\n        do {\n            var_100h = 0;\n            fcn.004703f4(&var_ffh, 0, 0xfe);\n            iVar1 = *(*(unaff_EDI + 0x24) + iVar2 * 4);\n            (***arg_ch)(iVar1, *(unaff_EDI + 0x4c));\n            fcn.0046df0f();\n            fcn.00467e8a(*(iVar1 * 0x10 + 0xc + *(unaff_EDI + 0x34)));\n            fcn.004703aa(*(unaff_EDI + 0x54), 0x4132c4, &var_100h, *(unaff_EDI + 0x50), &var_100h);\n            fcn.00464d6f(arg_8h, *(unaff_EDI + 0x54));\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < *(unaff_EDI + 0x20));\n    }\n    fcn.00464d6f(arg_8h, 0x4132d4);\n    return;\n}\n",
        "token_count": 354
    },
    "00468658": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00468658(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t arg_ch;\n    uint arg_18h;\n    uint arg_14h;\n    int32_t iVar2;\n    int32_t *unaff_ESI;\n    \n    arg_ch = fcn.00470442(-(unaff_ESI[0x6c] * 8 >> 0x20 != 0) | unaff_ESI[0x6c] * 8);\n    iVar2 = 0;\n    if (0 < unaff_ESI[8]) {\n        do {\n            iVar1 = *(unaff_ESI[9] + iVar2 * 4);\n            *(arg_ch + 4 + iVar2 * 8) = iVar1 * 0x10 + unaff_ESI[0xd];\n            *(arg_ch + iVar2 * 8) = *(iVar1 * 0x14 + 0x10 + unaff_ESI[0x6d]);\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < unaff_ESI[8]);\n    }\n    arg_18h = (**(*unaff_ESI + 0x14))();\n    arg_14h = (**(*unaff_ESI + 0x10))();\n    fcn.0046e0b5(param_1, arg_ch, unaff_ESI[8], arg_14h, arg_18h);\n    fcn.00470448(arg_ch);\n    return;\n}\n",
        "token_count": 329
    },
    "004686d9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004686d9(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t *in_ECX;\n    uchar var_200h;\n    uint var_1ffh;\n    uchar var_100h;\n    uint var_ffh;\n    \n    var_100h = 0;\n    fcn.004703f4(&var_ffh, 0, 0xfe);\n    var_200h = 0;\n    fcn.004703f4(&var_1ffh, 0, 0xfe);\n    fcn.00464d6f(arg_8h, 0x4132e0);\n    uVar1 = (**(*in_ECX + 0x20))();\n    fcn.00467e8a(uVar1);\n    fcn.004703aa(&var_200h, 0x413310, &var_100h);\n    fcn.00464d6f(arg_8h, &var_200h);\n    return;\n}\n",
        "token_count": 223
    },
    "00468766": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00468766(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t *in_ECX;\n    uchar var_200h;\n    uint var_1ffh;\n    uchar var_100h;\n    uint var_ffh;\n    \n    var_100h = 0;\n    fcn.004703f4(&var_ffh, 0, 0xfe);\n    var_200h = 0;\n    fcn.004703f4(&var_1ffh, 0, 0xfe);\n    uVar1 = (**(*in_ECX + 0x20))();\n    fcn.00467e8a(uVar1);\n    fcn.004703aa(&var_200h, 0x413318, &var_100h);\n    fcn.00464d6f(arg_8h, &var_200h);\n    return;\n}\n",
        "token_count": 200
    },
    "004699c6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004699c6(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_ch_00;\n    uchar var_444h;\n    uint var_443h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_444h = 0;\n    fcn.004703f4(&var_443h, 0, 0x3ff);\n    var_4h = 0x747874;\n    var_44h = fcn.00466771();\n    var_40h = 0x4133f4;\n    var_3ch = fcn.00466771();\n    var_38h = 0x4133f4;\n    var_34h = fcn.00466771();\n    var_30h = 0x4133f4;\n    var_2ch = fcn.00466771();\n    var_28h = 0x4133fc;\n    var_24h = fcn.00466771();\n    var_20h = 0x4133fc;\n    var_1ch = fcn.00466771();\n    var_18h = 0x41340c;\n    var_14h = fcn.00466771();\n    var_10h = 0x413414;\n    var_ch = fcn.00466771();\n    var_8h = 0x413414;\n    fcn.004656bf(&var_44h, 8);\n    arg_ch_00 = fcn.00466771();\n    fcn.004654f2(&var_444h, arg_ch_00, &var_4h);\n    return;\n}\n",
        "token_count": 470
    },
    "00469baa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00469baa(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uchar var_10ch;\n    uint var_10bh;\n    uint var_4h;\n    \n    var_4h = *(*(in_EAX + 0x36c) + 8);\n    var_10ch = 0;\n    fcn.004703f4(&var_10bh, 0, 0x104);\n    iVar1 = fcn.004699c6(in_EAX, &var_4h);\n    if (iVar1 != 0) {\n        *(*(in_EAX + 0x36c) + 8) = var_4h;\n        fcn.00469ab9(&var_10ch, var_4h, 1);\n    }\n    return;\n}\n",
        "token_count": 184
    },
    "00469c25": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00469c25(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t unaff_EBX;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_e48h;\n    uint var_e40h;\n    uint var_e3ch;\n    uint var_414h;\n    uint var_30fh;\n    uint var_20ah;\n    uint var_105h;\n    \n    fcn.004703f4(&var_e3ch, 0, 0x10);\n    uVar1 = *(unaff_EBX + 0x108);\n    var_414h._0_1_ = 0;\n    var_30fh._0_1_ = 0;\n    var_20ah._0_1_ = 0;\n    var_105h._0_1_ = 0;\n    puVar3 = *(unaff_EBX + 0x370) + 0xb20;\n    puVar4 = &var_414h;\n    for (iVar2 = 0x105; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    iVar2 = fcn.00460408(uVar1);\n    if (iVar2 != 0) {\n        puVar3 = &var_414h;\n        puVar4 = *(unaff_EBX + 0x370) + 0xb20;\n        for (iVar2 = 0x105; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar4 = puVar4 + 1;\n        }\n        fcn.00469c0f();\n    }\n    (*_fcn.00412220)(*(*(unaff_EBX + 0x370) + 0x184));\n    fcn.004602af();\n    return;\n}\n",
        "token_count": 470
    },
    "00469ce2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00469ce2(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00467b2b(&var_4h);\n    if (iVar1 != 0) {\n        iVar1 = (*_fcn.00412274)(*(unaff_ESI + 0x108));\n        if (iVar1 != 0) {\n            fcn.00464edb(var_4h + 0x294);\n        }\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "00469d89": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00469d89(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uchar *puVar2;\n    uchar var_320h;\n    uint var_31fh;\n    int32_t var_218h;\n    int32_t var_214h;\n    uint var_210h;\n    uint var_10bh;\n    \n    var_320h = 0;\n    fcn.004703f4(&var_31fh, 0, 0x104);\n    (**0x412104)(0, &var_320h, 0x104);\n    puVar2 = fcn.00470454(&var_320h, 0x2e);\n    if (puVar2 != NULL) {\n        *puVar2 = 0;\n    }\n    fcn.004703a4(&var_320h, 0x413420);\n    var_214h = arg_8h;\n    var_218h = 0x413bdc;\n    var_210h._0_1_ = 0;\n    var_10bh._0_1_ = 0;\n    fcn.004703fa(&var_210h, &var_320h);\n    fcn.004703fa(&var_10bh, 0x413428);\n    iVar1 = *(in_EAX + 0x36c);\n    (**(var_218h + 4))(0x4125a4, iVar1 + 4, 0);\n    (**(var_218h + 8))(0x4125b4, iVar1 + 8, 0);\n    (**(var_218h + 4))(0x4125c4, iVar1 + 0xc, 0);\n    (**(var_218h + 4))(0x4125d8, iVar1 + 0x10, 0);\n    iVar1 = var_214h;\n    if ((var_214h != 0) && (*(in_EAX + 0x108) != 0)) {\n        *(in_EAX + 0x128) = 0x2c;\n        (**0x4121ec)(*(in_EAX + 0x108), in_EAX + 0x128);\n    }\n    (**(var_218h + 0xc))(0x413430, in_EAX + 0x128, 0x2c);\n    if (iVar1 == 0) {\n        fcn.00460708();\n    }\n    fcn.004674e3();\n    return;\n}\n",
        "token_count": 578
    },
    "0046a6b3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0046a6b3(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00470424(0x4134b4);\n    if (iVar1 == 0) {\n        return 4;\n    }\n    iVar1 = fcn.00470424(0x4134bc);\n    if (iVar1 == 0) {\n        return 5;\n    }\n    iVar1 = fcn.00470424(0x4134c8);\n    if (iVar1 == 0) {\n        return 6;\n    }\n    iVar1 = fcn.00470424(0x4134d0);\n    if (iVar1 == 0) {\n        return 2;\n    }\n    iVar1 = fcn.00470424(0x4134d8);\n    if (iVar1 == 0) {\n        return 7;\n    }\n    iVar1 = fcn.00470424(0x4134e0);\n    if (iVar1 == 0) {\n        return 3;\n    }\n    iVar1 = fcn.00470436(0x4134ec);\n    return (-(iVar1 != 0) & 0xfffffff8) + 8;\n}\n",
        "token_count": 272
    },
    "0046b3a2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046b3a2(uint *arg_8h)\n\n{\n    code **ppcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uchar var_c0ch;\n    uint var_c0bh;\n    uchar var_80ch;\n    uint var_80bh;\n    uchar var_40ch;\n    uint var_40bh;\n    uint var_401h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_40ch = 0;\n    fcn.004703f4(&var_40bh, 0, 0x3ff);\n    var_c0ch = 0;\n    fcn.004703f4(&var_c0bh, 0, 0x3ff);\n    var_80ch = 0;\n    fcn.004703f4(&var_80bh, 0, 0x3ff);\n    var_ch = fcn.004659e6();\n    var_8h = 0;\n    iVar2 = fcn.00465772(&var_40ch, &var_8h);\n    do {\n        if (iVar2 == 0) {\n            return;\n        }\n        iVar2 = fcn.00465844(0x413584);\n        if (iVar2 == 0) {\n            var_4h = fcn.00465844(0x412b10);\n            var_4h = var_4h + -0xb;\n            if (0 < var_4h) {\n                iVar3 = fcn.00465844(0x412b18);\n                iVar2 = fcn.00465844(0x412b10);\n                if (iVar2 < 1) {\n                    iVar4 = fcn.00465844(0x413590);\n                    iVar2 = var_4h;\n                    iVar4 = iVar4 + (-2 - iVar3);\n                    if (0 < iVar4) {\n                        fcn.0047043c(&var_c0ch, &var_401h, var_4h);\n                        (&var_c0ch)[iVar2] = 0;\n                        iVar2 = &var_40bh + iVar3 + 1;\n                        goto code_r0x0046b50f;\n                    }\n                }\n                else {\n                    iVar4 = fcn.00465844(0x412b10);\n                    iVar3 = var_4h;\n                    iVar4 = (iVar4 - iVar2) + -1;\n                    if (0 < iVar4) {\n                        fcn.0047043c(&var_c0ch, &var_401h, var_4h);\n                        (&var_c0ch)[iVar3] = 0;\n                        iVar2 = &var_40bh + iVar2;\ncode_r0x0046b50f:\n                        fcn.0047043c(&var_80ch, iVar2, iVar4);\n                        ppcVar1 = *arg_8h;\n                        (&var_80ch)[iVar4] = 0;\n                        iVar2 = (**ppcVar1)(&var_c0ch, &var_80ch);\n                        if (iVar2 == 0) {\n                            return;\n                        }\n                    }\n                }\n            }\n        }\n        iVar2 = fcn.00465772(&var_40ch, &var_8h);\n    } while( true );\n}\n",
        "token_count": 746
    },
    "0046b565": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0046b565(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EDI;\n    uint var_4h;\n    \n    iVar1 = fcn.00465844(0x413074);\n    if ((iVar1 < 1) || (iVar2 = (iVar1 - in_EAX) + -1,  0xfc < (iVar1 - in_EAX) - 2U)) {\n        iVar1 = 0;\n    }\n    else {\n        fcn.0047043c(arg_8h, in_EAX + 1 + unaff_EDI, iVar2);\n        *(iVar2 + arg_8h) = 0;\n        iVar1 = iVar1 + 1 + unaff_EDI;\n    }\n    return iVar1;\n}\n",
        "token_count": 199
    },
    "0046b5ba": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0046b5ba(uint *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EDI;\n    uchar var_100h;\n    uint var_ffh;\n    \n    iVar1 = fcn.00465844(0x413074);\n    if (0 < iVar1) {\n        var_100h = 0;\n        fcn.004703f4(&var_ffh, 0, 0xfe);\n        iVar3 = iVar1 - arg_ch;\n        if (iVar3 - 1U < 5) {\n            fcn.0047043c(&var_100h, arg_ch + unaff_EDI, iVar3);\n            (&var_100h)[iVar3] = 0;\n            uVar2 = fcn.00470430(&var_100h);\n            *arg_8h = uVar2;\n            return iVar1 + 1 + unaff_EDI;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 239
    },
    "0046b8ef": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0046b8ef(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_80ch;\n    uint var_208h;\n    uint var_108h;\n    \n    iVar3 = 0;\n    if (0 < *(in_EAX + 0x474)) {\n        do {\n            iVar1 = fcn.0046c2aa();\n            iVar2 = fcn.00470424(iVar1 + 0x704, arg_8h);\n            if (iVar2 == 0) {\n                return iVar1;\n            }\n            iVar2 = fcn.00470424(iVar1 + 0x604, arg_8h);\n            if (iVar2 == 0) {\n                return iVar1;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < *(in_EAX + 0x474));\n    }\n    fcn.004703f4(&var_80ch, 0, 0x80c);\n    fcn.00464f42(arg_8h);\n    fcn.00464f42(arg_8h);\n    fcn.0046c2bf(&var_80ch);\n    iVar3 = fcn.0046c2aa();\n    return iVar3;\n}\n",
        "token_count": 305
    },
    "0046b9a6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_810h\n\nvoid fcn.0046b9a6(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    int32_t unaff_EDI;\n    uint var_810h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    iVar1 = *(in_EAX + 0x474);\n    if (0 < iVar1) {\n        do {\n            piVar2 = fcn.0046c2aa();\n            if (*piVar2 == unaff_EDI) {\n                return;\n            }\n            var_4h = var_4h + 1;\n        } while (var_4h < iVar1);\n    }\n    fcn.004703f4(&var_810h, 0, 0x80c);\n    fcn.0046c2bf(&var_810h);\n    fcn.0046c2aa();\n    return;\n}\n",
        "token_count": 227
    },
    "0046ba19": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046ba19(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t in_ECX;\n    uchar var_4cch;\n    uint var_4cbh;\n    uchar var_268h;\n    uint var_267h;\n    int32_t var_4h;\n    \n    iVar1 = arg_8h;\n    if (*(arg_8h + 0x1c) < 1) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = **(arg_8h + 0xc) + *(arg_8h + 0x10);\n    }\n    var_4h = in_ECX;\n    iVar2 = fcn.00470484(iVar2, 0x413648, 10);\n    if (iVar2 != 0) {\n        if (*(arg_8h + 0x1c) < 1) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = **(arg_8h + 0xc) + *(arg_8h + 0x10);\n        }\n        iVar2 = fcn.00470484(iVar2, 0x413654, 7);\n        if (iVar2 != 0) {\n            return 1;\n        }\n    }\n    arg_8h = 0;\n    if (0 < *(in_ECX + 0x474)) {\n        do {\n            iVar2 = fcn.0046c2aa();\n            var_268h = 0;\n            fcn.004703f4(&var_267h, 0, 0x261);\n            var_4cch = 0;\n            fcn.004703f4(&var_4cbh, 0, 0x261);\n            fcn.004703aa(&var_268h, 0x41365c, iVar2 + 0x204, iVar2 + 0x104);\n            fcn.004703aa(&var_4cch, 0x41366c, iVar2 + 0x204, iVar2 + 0x104);\n            iVar2 = 0;\n            if (0 < *(iVar1 + 0x1c)) {\n                iVar2 = **(iVar1 + 0xc) + *(iVar1 + 0x10);\n            }\n            iVar2 = fcn.00470424(&var_268h, iVar2);\n            if (iVar2 == 0) {\ncode_r0x0046bb56:\n                pcVar3 = fcn.00465981();\n                if (*pcVar3 == '~') {\n                    fcn.004601f2(0xff);\n                    return 1;\n                }\n            }\n            else {\n                iVar2 = 0;\n                if (0 < *(iVar1 + 0x1c)) {\n                    iVar2 = **(iVar1 + 0xc) + *(iVar1 + 0x10);\n                }\n                iVar2 = fcn.00470424(&var_4cch, iVar2);\n                if (iVar2 == 0) goto code_r0x0046bb56;\n            }\n            arg_8h = arg_8h + 1;\n        } while (arg_8h < *(var_4h + 0x474));\n    }\n    return 1;\n}\n",
        "token_count": 744
    },
    "0046bb99": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046bb99(uchar *arg_8h)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uchar var_418h;\n    uint var_417h;\n    uint var_18h;\n    uchar *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    *arg_8h = 0;\n    if (*in_EAX != '\\0') {\n        if (*in_EAX == '~') {\n            iVar1 = fcn.004601f2(0x400);\n            arg_8h[iVar1] = 0;\n        }\n        else {\n            var_418h = 0;\n            fcn.004703f4(&var_417h, 0, 0x3ff);\n            uVar2 = fcn.004601f2(0x400);\n            if (*(in_ECX + 0x3c) == NULL) {\n                iVar1 = 0;\n            }\n            else {\n                iVar1 = (**(in_ECX + 0x3c))();\n            }\n            if (iVar1 != 0) {\n                if (*(in_ECX + 0x48) == NULL) {\n                    iVar3 = -1;\n                }\n                else {\n                    iVar3 = (**(in_ECX + 0x48))(iVar1, 1, 0);\n                }\n                if (iVar3 == 0) {\n                    var_14h = &var_418h;\n                    var_8h = 0;\n                    var_4h = 0;\n                    var_10h = uVar2;\n                    if (*(in_ECX + 0x4c) == NULL) {\n                        iVar3 = -1;\n                    }\n                    else {\n                        iVar3 = (**(in_ECX + 0x4c))(&var_18h, &var_ch, 0);\n                    }\n                    if ((iVar3 == 0) && (var_4h < 0x400)) {\n                        fcn.0047043c(arg_8h, var_8h, var_4h);\n                        arg_8h[var_4h] = 0;\n                    }\n                }\n                if (*(in_ECX + 0x40) != NULL) {\n                    (**(in_ECX + 0x40))(iVar1);\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 554
    },
    "0046bc9a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0046bc9a(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    int32_t *unaff_ESI;\n    int32_t *piVar2;\n    int32_t unaff_EDI;\n    uchar uStackY8756;\n    uchar auStackY8755 [1023];\n    uint var_1e30h;\n    uint var_1a30h;\n    uint var_1630h;\n    uint var_1230h;\n    uint var_e30h;\n    uchar var_a30h;\n    uint var_a2fh;\n    uchar var_7c8h;\n    uint var_7c7h;\n    ushort var_560h;\n    uint var_55eh;\n    uchar var_350h;\n    uint var_34fh;\n    uchar var_248h;\n    uint var_247h;\n    uchar var_148h;\n    uint var_147h;\n    uint uStackY136;\n    uchar *puStackY132;\n    uint *puStackY128;\n    uchar *puStackY124;\n    uint uStackY120;\n    int32_t iStackY116;\n    uchar *puStackY112;\n    uint uStackY108;\n    int32_t iStackY104;\n    uint *puStackY100;\n    uint uStackY96;\n    uint *puStackY92;\n    uint *puStackY88;\n    uchar *puStackY84;\n    uint *puStackY80;\n    uint *var_48h;\n    code *var_44h;\n    int32_t *var_40h;\n    code *var_3ch;\n    int32_t *piStack60;\n    uint uStack56;\n    int32_t *piStack52;\n    uint *var_2ch;\n    int32_t *var_28h;\n    int32_t *piStack40;\n    int32_t *var_20h;\n    uchar *var_1ch;\n    int32_t *var_18h;\n    int32_t *var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0x46bca7;\n    fcn.00470712();\n    var_10h = arg_8h + 0x362;\n    piVar2 = arg_8h + 0x30;\n    var_14h = 0x46bcbf;\n    var_18h = piVar2;\n    var_ch = unaff_EDI;\n    var_8h = unaff_ESI;\n    var_4h = unaff_EBX;\n    iVar1 = fcn.0046cd60(var_10h);\n    if (iVar1 != 0) {\n        if (*(arg_8h + 0x34) == NULL) {\n            iVar1 = -1;\n        }\n        else {\n            var_14h = arg_8h + 0x158;\n            var_18h = 0x46bcd9;\n            iVar1 = (**(arg_8h + 0x34))();\n        }\n        if (iVar1 == 0) {\n            var_14h = arg_8h + 0x362;\n            var_20h = NULL;\n            var_18h = 0x46bcf9;\n            iVar1 = fcn.0046e4bd(var_14h);\n            if (iVar1 != 0) {\n                var_18h = 0x208;\n                var_20h = &fcn.0046bc9a::var_55eh;\n                var_1ch = NULL;\n                var_8h = NULL;\n                var_560h = 0;\n                piStack40 = 0x46bd1d;\n                fcn.004703f4();\n                piStack40 = 0x104;\n                var_2ch = &fcn.0046bc9a::var_34fh;\n                var_28h = NULL;\n                var_350h = 0x0;\n                piStack52 = 0x46bd36;\n                fcn.004703f4();\n                var_18h = 0x104;\n                var_1ch = &stack0xfffffa9c;\n                var_20h = 0xffffffff;\n                piStack40 = arg_ch;\n                var_28h = NULL;\n                var_2ch = NULL;\n                piStack52 = 0x46bd4e;\n                (**0x4120d0)();\n                piStack52 = NULL;\n                uStack56 = 0;\n                piStack60 = 0x104;\n                var_3ch = &stack0xfffffcac;\n                var_40h = 0xffffffff;\n                var_44h = &stack0xfffffa9c;\n                var_48h = NULL;\n                puStackY80 = 0xfde9;\n                puStackY84 = 0x46bd6d;\n                (**0x4120d4)();\n                if (var_44h != NULL) {\n                    var_14h = &fcn.0046bc9a::var_8h;\n                    var_18h = &stack0xfffffcac;\n                    var_1ch = 0x46bd80;\n                    (*var_44h)();\n                }\n                if (var_8h != NULL) {\n                    arg_ch = NULL;\n                    if (var_40h != NULL) {\n                        var_14h = &fcn.0046bc9a::var_48h;\n                        var_18h = &fcn.0046bc9a::arg_ch;\n                        var_1ch = 0xffffffff;\n                        var_20h = 0x413680;\n                        piStack40 = var_8h;\n                        var_28h = 0x46bda8;\n                        (*var_40h)();\n                    }\n                    while( true ) {\n                        if (var_3ch == NULL) {\n                            iVar1 = 0xffff;\n                        }\n                        else {\n                            var_14h = arg_ch;\n                            var_18h = 0x46bdb6;\n                            iVar1 = (*var_3ch)();\n                        }\n                        if (iVar1 != 100) break;\n                        var_14h = 0x3ff;\n                        var_1ch = &stack0xffffddcd;\n                        var_18h = NULL;\n                        uStackY8756 = 0;\n                        var_20h = 0x46bddf;\n                        fcn.004703f4();\n                        var_20h = 0x1400;\n                        var_28h = &fcn.0046bc9a::var_1e30h;\n                        piStack40 = NULL;\n                        var_2ch = 0x46bdf1;\n                        fcn.004703f4();\n                        var_14h = 0x1;\n                        var_18h = arg_ch;\n                        var_1ch = 0x46be01;\n                        iVar1 = fcn.0046e660();\n                        var_1ch = 0x6;\n                        var_20h = arg_ch;\n                        piStack40 = 0x46be10;\n                        var_10h = fcn.0046e660();\n                        piStack40 = 0x7;\n                        var_28h = arg_ch;\n                        var_2ch = 0x46be20;\n                        var_4h = fcn.0046e660();\n                        var_2ch = 0x4;\n                        piStack52 = arg_ch;\n                        uStack56 = 0x46be30;\n                        var_14h = fcn.0046e660();\n                        uStack56 = 5;\n                        piStack60 = arg_ch;\n                        var_3ch = 0x46be40;\n                        var_1ch = fcn.0046e660();\n                        var_3ch = 0x2;\n                        var_40h = arg_ch;\n                        var_44h = 0x46be50;\n                        var_ch = fcn.0046e660();\n                        if (iVar1 != 0) {\n                            var_48h = &stack0xffffddcc;\n                            puStackY80 = 0x46be64;\n                            var_44h = iVar1;\n                            fcn.004703fa();\n                        }\n                        if (var_10h != 0) {\n                            var_44h = var_10h;\n                            var_48h = &fcn.0046bc9a::var_1e30h;\n                            puStackY80 = 0x46be7a;\n                            fcn.004703fa();\n                        }\n                        if (var_4h != 0) {\n                            var_44h = var_4h;\n                            var_48h = &fcn.0046bc9a::var_1a30h;\n                            puStackY80 = 0x46be90;\n                            fcn.004703fa();\n                        }\n                        if (var_14h != NULL) {\n                            var_44h = var_14h;\n                            var_48h = &fcn.0046bc9a::var_1630h;\n                            puStackY80 = 0x46bea6;\n                            fcn.004703fa();\n                        }\n                        if (var_1ch != NULL) {\n                            var_44h = var_1ch;\n                            var_48h = &fcn.0046bc9a::var_1230h;\n                            puStackY80 = 0x46bebc;\n                            fcn.004703fa();\n                        }\n                        if (var_ch != 0) {\n                            var_44h = var_ch;\n                            var_48h = &fcn.0046bc9a::var_e30h;\n                            puStackY80 = 0x46bed2;\n                            fcn.004703fa();\n                        }\n                        var_44h = 0xff;\n                        puStackY80 = &fcn.0046bc9a::var_147h;\n                        var_48h = NULL;\n                        var_148h = 0;\n                        puStackY84 = 0x46beed;\n                        fcn.004703f4();\n                        puStackY84 = 0xff;\n                        puStackY92 = &fcn.0046bc9a::var_247h;\n                        puStackY88 = NULL;\n                        var_248h = 0x0;\n                        uStackY96 = 0x46bf01;\n                        fcn.004703f4();\n                        var_44h = &stack0xfffffdb4;\n                        var_48h = 0x46bf15;\n                        fcn.0046bb99(var_44h);\n                        var_48h = &stack0xfffffeb4;\n                        puStackY80 = 0x46bf26;\n                        fcn.0046bb99(var_48h);\n                        var_4h = 0;\n                        if (0 < *(arg_8h + 0x474)) {\n                            var_ch = arg_8h + 0x468;\n                            do {\n                                puStackY80 = 0x46bf49;\n                                iVar1 = fcn.0046c2aa();\n                                puStackY80 = 0x261;\n                                puStackY88 = &fcn.0046bc9a::var_a2fh;\n                                puStackY84 = NULL;\n                                var_a30h = 0;\n                                puStackY92 = 0x46bf64;\n                                fcn.004703f4();\n                                puStackY92 = 0x261;\n                                puStackY100 = &fcn.0046bc9a::var_7c7h;\n                                uStackY96 = 0;\n                                var_7c8h = 0;\n                                iStackY104 = 0x46bf78;\n                                fcn.004703f4();\n                                puStackY112 = &stack0xfffff5cc;\n                                uStackY108 = 0x413704;\n                                iStackY116 = 0x46bf90;\n                                iStackY104 = iVar1 + 0x104;\n                                fcn.004703aa();\n                                puStackY124 = &stack0xfffff834;\n                                uStackY120 = 0x413714;\n                                puStackY128 = 0x46bfa2;\n                                iStackY116 = iVar1 + 0x104;\n                                fcn.004703aa();\n                                puStackY128 = &fcn.0046bc9a::var_e30h;\n                                puStackY132 = &stack0xfffff5cc;\n                                uStackY136 = 0x46bfb5;\n                                iVar1 = fcn.00470424();\n                                if (iVar1 == 0) {\ncode_r0x0046bfd5:\n                                    puStackY80 = &stack0xfffffdb4;\n                                    puStackY84 = 0x46bfec;\n                                    fcn.00464f42();\n                                    puStackY84 = &stack0xfffffeb4;\n                                    puStackY88 = 0x46bffe;\n                                    fcn.00464f42();\n                                }\n                                else {\n                                    puStackY80 = &fcn.0046bc9a::var_e30h;\n                                    puStackY84 = &stack0xfffff834;\n                                    puStackY88 = 0x46bfcf;\n                                    iVar1 = fcn.00470424();\n                                    if (iVar1 == 0) goto code_r0x0046bfd5;\n                                }\n                                var_4h = var_4h + 1;\n                            } while (var_4h < *(arg_8h + 0x474));\n                        }\n                    }\n                    if ((arg_ch != NULL) && (var_2ch != NULL)) {\n                        var_14h = arg_ch;\n                        var_18h = 0x46c02e;\n                        (*var_2ch)();\n                    }\n                    if (var_28h != NULL) {\n                        var_14h = var_8h;\n                        var_18h = 0x46c03a;\n                        (*var_28h)();\n                    }\n                }\n            }\n            piVar2 = var_18h;\n            if (var_18h[2] != NULL) {\n                var_14h = 0x46c047;\n                (*var_18h[2])();\n            }\n        }\n        if (*piVar2 != 0) {\n            var_14h = piVar2 + 8;\n            var_18h = 0x46c055;\n            (*_fcn.00412064)();\n            *piVar2 = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 3312
    },
    "0046c2aa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0046c2aa(int32_t *param_1)\n\n{\n    int32_t in_EAX;\n    \n    if ((-1 < in_EAX) && (in_EAX < param_1[3])) {\n        return in_EAX * 0x80c + *param_1;\n    }\n    return 0;\n}\n",
        "token_count": 80
    },
    "0046c318": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0046c318(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    uint var_628h;\n    uint var_229h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    var_8h = 0x400;\n    iVar1 = (*_fcn.00412000)(*arg_8h, 0x413764, 0, 0, &var_628h, &var_8h);\n    if ((iVar1 == 0) && (1 < var_8h)) {\n        var_4h = 0;\n        if (var_628h < 0x20) {\n            fcn.00463549();\n            iVar1 = fcn.00463612();\n            if (iVar1 != 0) {\n                var_1ch = var_8h - 2;\n                var_18h = &var_628h + 2;\n                iVar1 = fcn.00463683(&var_1ch, 0, &var_14h);\n                if (iVar1 != 0) {\n                    if (var_14h < 0x400) {\n                        fcn.0047043c(&var_628h, var_10h, var_14h);\n                        var_4h = 1;\n                    }\n                    (*_fcn.004120dc)(var_10h);\n                }\n            }\n            fcn.00463663();\n        }\n        else {\n            var_4h = 1;\n        }\n        if (var_4h != 0) {\n            var_229h._0_1_ = 0;\n            fcn.004601f2(0xff);\n            var_4h = 0xff;\n            iVar1 = (*_fcn.00412000)(*arg_8h, 0x413784, 0, 0);\n            if (iVar1 == 0) {\n                *(unaff_EBX + 0xfe) = 0;\n                *(unaff_EBX + 0x1fe) = 0;\n                var_ch = 1;\n            }\n        }\n    }\n    (**0x412008)(*arg_8h);\n    return var_ch;\n}\n",
        "token_count": 552
    },
    "0046c56d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0046c56d(uint *arg_8h, uint arg_ch, uint *arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *unaff_ESI;\n    uint unaff_EDI;\n    uint var_1328h;\n    uint var_328h;\n    uint var_228h;\n    uint var_128h;\n    uint uStack116;\n    uint *puStack112;\n    uint *puStack108;\n    uint uStack104;\n    uint uStack100;\n    uint *puStack96;\n    uint uStack92;\n    uint *puStack88;\n    uint uStack84;\n    uint uStack80;\n    uint *puStack76;\n    uint *puStack72;\n    uint *puStack68;\n    uint *puStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint *puStack48;\n    uint *var_28h;\n    uint *var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    uint var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0x46c57a;\n    fcn.00470712();\n    pcVar1 = _fcn.00412010;\n    var_10h = &fcn.0046c56d::arg_14h;\n    var_14h = 0x20019;\n    var_18h = NULL;\n    var_1ch = 0x4137f4;\n    var_20h = arg_14h;\n    var_24h = 0x46c599;\n    var_ch = unaff_EDI;\n    var_8h = unaff_ESI;\n    iVar2 = (*_fcn.00412010)();\n    if (iVar2 == 0) {\n        var_24h = 0xff;\n        var_128h._0_1_ = 0;\n        puStack48 = &fcn.0046c56d::var_128h + 1;\n        var_28h = NULL;\n        uStack52 = 0x46c5ba;\n        fcn.004703f4();\n        var_4h = 0;\n        while( true ) {\n            var_28h = &fcn.0046c56d::var_128h;\n            var_24h = 0xff;\n            uStack52 = arg_14h;\n            uStack56 = 0x46c6bf;\n            puStack48 = var_4h;\n            iVar2 = (**0x41200c)();\n            if (iVar2 != 0) break;\n            var_10h = &fcn.0046c56d::var_ch;\n            var_14h = 0x20019;\n            var_18h = NULL;\n            var_1ch = &fcn.0046c56d::var_128h;\n            var_20h = arg_14h;\n            var_24h = 0x46c5e4;\n            iVar2 = (*pcVar1)();\n            if (iVar2 == 0) {\n                var_24h = &fcn.0046c56d::var_8h;\n                var_28h = &fcn.0046c56d::var_1328h;\n                puStack48 = &fcn.0046c56d::var_28h;\n                uStack52 = 0;\n                uStack56 = 0x4137fc;\n                uStack60 = var_ch;\n                var_8h = 0x1000;\n                puStack64 = 0x46c611;\n                iVar2 = (*_fcn.00412000)();\n                if (iVar2 == 0) {\n                    var_1ch = var_8h;\n                    var_18h = &fcn.0046c56d::var_1328h;\n                    var_24h = arg_10h;\n                    var_20h = arg_ch;\n                    puStack64 = &fcn.0046c56d::var_14h;\n                    puStack68 = &fcn.0046c56d::var_24h;\n                    puStack72 = &fcn.0046c56d::var_1ch;\n                    puStack76 = 0x46c64b;\n                    iVar2 = fcn.00463683();\n                    if (iVar2 != 0) {\n                        puStack76 = &fcn.0046c56d::var_128h;\n                        var_328h._0_1_ = 0;\n                        var_228h._0_1_ = 0;\n                        uStack80 = 0x46c66f;\n                        fcn.00464f42();\n                        puStack76 = NULL;\n                        uStack80 = 0;\n                        uStack84 = 0xff;\n                        puStack88 = &fcn.0046c56d::var_228h;\n                        uStack92 = var_14h;\n                        puStack96 = var_10h;\n                        uStack100 = 0;\n                        uStack104 = 0;\n                        puStack108 = 0x46c68a;\n                        (**0x4120d4)();\n                        puStack112 = 0x46c694;\n                        puStack108 = &fcn.0046c56d::var_328h;\n                        (***arg_8h)();\n                        puStack112 = var_10h;\n                        uStack116 = 0x46c69d;\n                        (*_fcn.004120dc)();\n                    }\n                }\n                puStack64 = var_ch;\n                puStack68 = 0x46c6a8;\n                (**0x412008)();\n            }\n            var_4h = var_4h + 1;\n        }\n        var_10h = arg_14h;\n        var_14h = 0x46c6d0;\n        (**0x412008)();\n    }\n    return;\n}\n",
        "token_count": 1386
    },
    "0046cfe4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046cfe4(void)\n\n{\n    int32_t iVar1;\n    char *unaff_ESI;\n    int32_t unaff_EDI;\n    uchar var_108h;\n    uint var_107h;\n    \n    if ((unaff_ESI[1] == ':') || (iVar1 = fcn.00470412(unaff_ESI + 2, 0x3a),  iVar1 != 0)) {\n        fcn.004703fa();\n    }\n    else {\n        iVar1 = fcn.00465844(0x413aa4);\n        if (iVar1 < 0) {\n            if (*unaff_ESI == '\\\\') {\n                var_108h = 0;\n                fcn.004703f4(&var_107h, 0, 0x104);\n                fcn.00465197(&var_108h);\n                fcn.0047043c();\n                *(unaff_EDI + 2) = 0;\n                fcn.004703a4();\n            }\n            else {\n                fcn.004703fa();\n            }\n        }\n        else {\n            var_108h = 0;\n            fcn.004703f4(&var_107h, 0, 0x104);\n            fcn.00465197(&var_108h);\n            fcn.004703fa();\n            fcn.004703a4();\n        }\n    }\n    return;\n}\n",
        "token_count": 314
    },
    "0046d2d1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0046d2d1(uint32_t param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    if ((param_1 < *(param_2 + 0x114)) || (*(param_2 + 0x110) + *(param_2 + 0x114) <= param_1)) {\n        uVar1 = 1;\n    }\n    else {\n        *0x417108 = 1;\n        fcn.0047043c(0x416ff0, param_2, 0x118);\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 142
    },
    "0046d898": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046d898(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uchar var_100h;\n    uint var_ffh;\n    \n    var_100h = 0;\n    fcn.004703f4(&var_ffh, 0, 0xfe);\n    uVar1 = fcn.0047049c(arg_10h, &var_100h, 10, arg_14h);\n    (**0x412088)(arg_8h, arg_ch, uVar1);\n    return;\n}\n",
        "token_count": 137
    },
    "0046d8e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046d8e4(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint *unaff_EDI;\n    \n    fcn.00470712();\n    if (arg_8h == 0) {\n        fcn.004703f4();\n        (*_fcn.004120cc)();\n        fcn.0046564e(unaff_EDI, arg_14h);\n    }\n    else {\n        fcn.004703f4();\n        fcn.004655d5(arg_14h, *unaff_EDI);\n        (**0x412088)();\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "0046da33": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0046da33(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uint var_4h;\n    \n    bVar2 = false;\n    iVar1 = fcn.0046d9b1(arg_8h, arg_ch, &var_4h);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0046d9f2(var_4h, arg_10h, arg_14h);\n        bVar2 = iVar1 == 0;\n        (**0x412008)(var_4h);\n    }\n    return bVar2;\n}\n",
        "token_count": 165
    },
    "0046db37": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046db37(uint arg_8h, ushort *arg_ch, uint32_t arg_10h)\n\n{\n    ushort uVar1;\n    int32_t arg_8h_00;\n    int32_t in_ECX;\n    \n    uVar1 = *arg_ch;\n    arg_8h_00 = *(in_ECX + 4);\n    fcn.0046d980(arg_8h_00, in_ECX + 0x10d, arg_8h, arg_10h & 0xffff, in_ECX + 8);\n    if (arg_8h_00 == 0) {\n        *arg_ch = uVar1;\n    }\n    return 1;\n}\n",
        "token_count": 159
    },
    "0046dda8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046dda8(uint arg_8h, int32_t arg_ch, uint arg_10h, char *arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    char var_108h;\n    uint var_107h;\n    \n    var_108h = '\\0';\n    fcn.004703f4(&var_107h, 0, 0x104);\n    if (arg_ch == 1) {\n        if ((*arg_14h == '\\\\') && (arg_14h[1] == '\\\\')) {\n            return 0;\n        }\n        uVar3 = 1;\n        uVar2 = 0x466;\n    }\n    else {\n        if (arg_ch != 2) {\n            return 0;\n        }\n        iVar1 = (*_fcn.00412138)(arg_10h, &var_108h);\n        if (iVar1 == 0) {\n            return 0;\n        }\n        arg_14h = &var_108h;\n        uVar3 = 0;\n        uVar2 = 0x464;\n    }\n    (*_fcn.00412210)(arg_8h, uVar2, uVar3, arg_14h);\n    return 0;\n}\n",
        "token_count": 287
    },
    "0046e22c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0046e22c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar var_108h;\n    uint var_107h;\n    \n    var_108h = 0;\n    fcn.004703f4(&var_107h, 0, 0x104);\n    iVar1 = fcn.004703b6(arg_8h);\n    iVar2 = fcn.004703b6(0x412568);\n    if (iVar1 + 1 + iVar2 < 0x104) {\n        fcn.0046511f(arg_8h, 0x412568);\n    }\n    else {\n        var_108h = 0;\n    }\n    iVar1 = fcn.00464fbd(&var_108h);\n    return iVar1 != 0;\n}\n",
        "token_count": 191
    },
    "0046e2a7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nbool fcn.0046e2a7(void)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    uchar *puVar2;\n    uchar var_818h;\n    uint var_817h;\n    uchar var_418h;\n    uint var_417h;\n    uchar var_310h;\n    uint var_30fh;\n    char var_210h;\n    uint var_20fh;\n    uchar var_108h;\n    uint var_107h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_418h = 0;\n    fcn.004703f4(&var_417h, 0, 0x104);\n    var_310h = 0;\n    fcn.004703f4(&var_30fh, 0, 0xff);\n    *in_EAX = '\\0';\n    iVar1 = fcn.0046d9b1(0x80000002, 0x413e74, &var_4h);\n    if (iVar1 == 0) {\n        var_108h = 0;\n        fcn.004703f4(&var_107h, 0, 0xff);\n        var_8h = 0;\n        iVar1 = fcn.0046da77(var_4h, 0, &var_108h);\n        while (iVar1 == 0) {\n            iVar1 = fcn.004704b4(&var_108h, 0x413e88, 7);\n            if (iVar1 == 0) {\n                var_210h = '\\0';\n                fcn.004703f4(&var_20fh, 0, 0x104);\n                var_818h = 0;\n                fcn.004703f4(&var_817h, 0, 0x3ff);\n                fcn.004704ba(&var_818h, 0x3ff, 0x413e90, &var_108h);\n                fcn.0046da33(var_4h, &var_818h, 0x413e98, &var_210h, 0x104);\n                puVar2 = fcn.004704c0(&var_210h, 0x5c);\n                if (puVar2 != NULL) {\n                    *puVar2 = 0;\n                }\n                if (var_210h != '\\0') {\n                    iVar1 = fcn.0046e22c(&var_210h);\n                    if (iVar1 != 0) {\n                        iVar1 = fcn.00470436(&var_108h, &var_310h);\n                        if (0 < iVar1) {\n                            fcn.004703fa(&var_418h, &var_210h);\n                            fcn.004703fa(&var_310h, &var_108h);\n                        }\n                    }\n                }\n            }\n            var_8h = var_8h + 1;\n            iVar1 = fcn.0046da77(var_4h, var_8h, &var_108h);\n        }\n        (**0x412008)(var_4h);\n    }\n    fcn.004703fa();\n    if (*in_EAX == '\\0') {\n        (**0x4120d8)(0x412580);\n        iVar1 = fcn.0046e22c(in_EAX);\n        if (iVar1 == 0) {\n            *in_EAX = '\\0';\n        }\n        if (*in_EAX == '\\0') {\n            fcn.00464fe4();\n            iVar1 = fcn.0046e22c(in_EAX);\n            if (iVar1 == 0) {\n                *in_EAX = '\\0';\n            }\n            if (*in_EAX == '\\0') {\n                (**0x412068)(0x104);\n                iVar1 = fcn.0046e22c(in_EAX);\n                if (iVar1 == 0) {\n                    *in_EAX = '\\0';\n                }\n            }\n        }\n    }\n    return *in_EAX != '\\0';\n}\n",
        "token_count": 900
    },
    "0046e4bd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046e4bd(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *unaff_ESI;\n    uchar var_220h;\n    uint var_21fh;\n    char var_118h;\n    uint var_117h;\n    \n    if (unaff_ESI[9] != 0) {\n        return 1;\n    }\n    var_118h = '\\0';\n    fcn.004703f4(&var_117h, 0, 0x117);\n    if (arg_8h == 0) {\n        fcn.0046e2a7();\n    }\n    else {\n        fcn.004703fa(&var_118h, arg_8h);\n    }\n    if (var_118h == '\\0') {\n        iVar2 = (*_fcn.0041206c)(0x412568);\n        unaff_ESI[9] = iVar2;\n        if (iVar2 != 0) goto code_r0x0046e5d0;\n        uVar3 = (*_fcn.004120f0)(0x412568);\n    }\n    else {\n        var_220h = 0;\n        fcn.004703f4(&var_21fh, 0, 0x104);\n        fcn.004703fa(&var_220h, &var_118h);\n        fcn.004703a4(&var_118h, 0x413ea4);\n        iVar2 = fcn.00464fbd(&var_118h);\n        if (iVar2 == 0) {\n            fcn.004703fa(&var_118h, &var_220h);\n            fcn.004703a4(&var_118h, 0x413eb4);\n        }\n        iVar2 = (*_fcn.0041206c)(&var_118h);\n        unaff_ESI[9] = iVar2;\n        if (iVar2 != 0) goto code_r0x0046e5d0;\n        uVar3 = (**0x412110)(&var_118h, 0, 8);\n    }\n    unaff_ESI[9] = uVar3;\ncode_r0x0046e5d0:\n    pcVar1 = _fcn.004120ec;\n    if (unaff_ESI[9] != 0) {\n        uVar3 = (*_fcn.004120ec)(unaff_ESI[9], fcn.00413ec4);\n        *unaff_ESI = uVar3;\n        uVar3 = (*pcVar1)(unaff_ESI[9], 0x413ed4);\n        unaff_ESI[1] = uVar3;\n        uVar3 = (*pcVar1)(unaff_ESI[9], 0x413ee4);\n        unaff_ESI[2] = uVar3;\n        uVar3 = (*pcVar1)(unaff_ESI[9], 0x413ef4);\n        unaff_ESI[3] = uVar3;\n        uVar3 = (*pcVar1)(unaff_ESI[9], 0x413f08);\n        unaff_ESI[4] = uVar3;\n        uVar3 = (*pcVar1)(unaff_ESI[9], 0x413f1c);\n        unaff_ESI[5] = uVar3;\n        uVar3 = (*pcVar1)(unaff_ESI[9], 0x413f34);\n        unaff_ESI[6] = uVar3;\n        uVar3 = (*pcVar1)(unaff_ESI[9], 0x413f48);\n        unaff_ESI[7] = uVar3;\n        uVar3 = (*pcVar1)(unaff_ESI[9], 0x413f58);\n        unaff_ESI[8] = uVar3;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 883
    },
    "0046f8fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0046f8fc(uint *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    uint uVar3;\n    uint var_16a0h;\n    uint var_1684h;\n    uint var_e34h;\n    uint var_e30h;\n    uint var_c30h;\n    uint var_a30h;\n    uint var_830h;\n    int32_t var_730h;\n    uint var_72ch;\n    uint var_720h;\n    uint var_71ch;\n    uint var_61ch;\n    uint var_31ch;\n    uint var_11ch;\n    uint uStack64;\n    uchar *puStack56;\n    uint *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint uStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00470712();\n    uStack20 = arg_ch;\n    var_14h = 0x46f914;\n    iVar1 = fcn.00470496();\n    var_18h = 0x46f91d;\n    var_14h = iVar1 + 1;\n    puVar2 = fcn.00470442();\n    uStack20 = 0;\n    var_14h = 0;\n    uStack36 = 0xffffffff;\n    uStack40 = arg_ch;\n    uStack44 = 0;\n    uStack48 = 0;\n    *puVar2 = 0;\n    puStack52 = 0x46f937;\n    var_1ch = puVar2;\n    var_18h = iVar1 + 1;\n    (**0x4120d4)();\n    puStack52 = 0x46f942;\n    fcn.0046ec77();\n    puStack52 = 0x46f957;\n    fcn.0046f32e();\n    puStack52 = 0x46f962;\n    fcn.0046f32e();\n    puStack56 = 0x46f979;\n    puStack52 = puVar2;\n    uVar3 = fcn.004703b6();\n    puStack52 = 0x46f982;\n    fcn.0046ede8();\n    uStack64 = 0x46f993;\n    puStack56 = puVar2;\n    puStack52 = uVar3;\n    fcn.0047043c();\n    puStack52 = 0x46f99d;\n    fcn.0046eef3();\n    var_72ch = arg_8h[1];\n    var_18h = var_72ch;\n    if (((var_830h != '\\0') || (var_a30h != '\\0')) && (var_730h != 0)) {\n        if (var_61ch != '\\0') {\n            puStack52 = &fcn.0046f8fc::var_61ch;\n            puStack56 = 0x46f9e0;\n            fcn.00464f42();\n            var_720h = var_14h;\n        }\n        puStack52 = &fcn.0046f8fc::var_e30h;\n        puStack56 = 0x46f9fc;\n        (***arg_8h)();\n    }\n    if (((var_11ch != '\\0') || (var_31ch != '\\0')) && (var_1ch != NULL)) {\n        puStack52 = &fcn.0046f8fc::var_71ch;\n        puStack56 = 0x46fa1e;\n        (***arg_8h)();\n    }\n    puStack56 = 0x46fa26;\n    puStack52 = puVar2;\n    fcn.00470448();\n    puStack52 = 0x46fa32;\n    fcn.0046ed5f();\n    return;\n}\n",
        "token_count": 935
    },
    "0046fb8d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046fb8d(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uchar uStack800;\n    uchar auStack799 [242];\n    char acStack557 [13];\n    uchar uStack544;\n    uchar auStack543 [263];\n    uchar uStack280;\n    uchar auStack279 [275];\n    \n    uStack800 = 0;\n    fcn.004703f4(auStack799, 0);\n    *(arg_8h + 4) = 1;\n    fcn.0046dccb();\n    fcn.004655a6();\n    fcn.0046fab5(&uStack800);\n    *(arg_8h + 4) = 2;\n    fcn.0046dccb();\n    fcn.004655a6(0x414480);\n    fcn.0046fab5(&uStack800);\n    uStack280 = 0;\n    fcn.004703f4(auStack279, 0, 0x104);\n    uStack544 = 0;\n    fcn.004703f4(auStack543, 0, 0x104);\n    fcn.0046da33(0x80000001, 0x4142b4, 0x4144a0, &uStack280, 0x104);\n    (**0x4120d8)(&uStack280, &uStack544, 0x104);\n    iVar1 = fcn.004703b6(acStack557 + 1);\n    if ((0 < iVar1) && (acStack557[iVar1] == '\\\\')) {\n        acStack557[iVar1] = '\\0';\n    }\n    iVar1 = fcn.00470424(&stack0xfffffccc, acStack557 + 1);\n    if (iVar1 != 0) {\n        fcn.0046fab5(acStack557 + 1);\n    }\n    return;\n}\n",
        "token_count": 427
    },
    "0046fdeb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046fdeb(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uchar var_404h;\n    uint var_403h;\n    uint var_4h;\n    \n    uVar2 = 0;\n    var_404h = 0;\n    fcn.004703f4(&var_403h, 0, 0x3ff);\n    iVar1 = fcn.0046d9b1(0x80000001, 0x4144b8, &var_4h);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0046d9f2(var_4h, 0x4144d0, arg_8h);\n        if (iVar1 == 0) {\n            iVar1 = fcn.0046d9f2(var_4h, 0x4144e0, &var_404h);\n            if (iVar1 == 0) {\n                uVar2 = fcn.00470113(arg_8h, &var_404h);\n            }\n        }\n        (**0x412008)(var_4h);\n    }\n    return uVar2;\n}\n",
        "token_count": 271
    },
    "0046fe87": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint __cdecl fcn.0046fe87(int32_t arg_8h, uint arg_ch, uint arg_10h, uint32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_ESI;\n    int32_t iVar5;\n    uint var_1be0h;\n    uint var_1bdch;\n    uint var_17e0h;\n    uchar var_14e0h;\n    uint var_14dfh;\n    uint var_14d8h;\n    uint8_t var_10c0h;\n    uint var_10bfh;\n    uint var_10b8h;\n    uint8_t var_cc0h;\n    uint var_cbfh;\n    uchar var_8c0h;\n    uint var_8bfh;\n    uint var_8b0h;\n    uchar var_4a0h;\n    uint var_49fh;\n    uint var_498h;\n    uint var_490h;\n    uint var_480h;\n    uint var_80h;\n    uint uStackY88;\n    uint *puStackY84;\n    uint *puStackY80;\n    uint uStackY76;\n    uchar *puStackY72;\n    uint *var_24h;\n    uint *puStack36;\n    uint *puStack32;\n    uchar *var_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00470712();\n    uVar4 = 0;\n    var_14h = NULL;\n    var_cc0h = 0;\n    puStack32 = 0x46feb1;\n    fcn.004703f4();\n    iVar1 = fcn.0046fcfc();\n    var_14h = 0x46fecd;\n    iVar2 = fcn.004703b6();\n    if ((4 < iVar1) && (0 < iVar2)) {\n        var_14h = NULL;\n        var_8c0h = 0;\n        puStack32 = 0x46ff07;\n        fcn.004703f4();\n        puStack32 = 0x41e;\n        var_24h = &fcn.0046fe87::var_49fh;\n        puStack36 = NULL;\n        var_4a0h = 0;\n        fcn.004703f4();\n        var_14e0h = 0;\n        fcn.004703f4();\n        var_24h = NULL;\n        puStack36 = NULL;\n        puStack32 = NULL;\n        var_10c0h = 0;\n        fcn.004703f4();\n        fcn.0046aabb();\n        puStackY72 = 0x46ff6b;\n        fcn.0046aadf(arg_8h);\n        puStackY72 = &stack0xfffff73c;\n        uStackY76 = 0x46ff7a;\n        fcn.0046ab7d();\n        uStackY76 = 8;\n        puStackY80 = &fcn.0046fe87::var_14h;\n        puStackY84 = &fcn.0046fe87::var_8b0h;\n        uStackY88 = 0x46ff8c;\n        fcn.0047043c();\n        fcn.0046aabb();\n        var_14h = 0x46ffa7;\n        fcn.0046aadf(&stack0xfffff73c);\n        var_14h = &stack0xfffffb5c;\n        fcn.0046ab7d();\n        puStack32 = &stack0xfffff73c;\n        puStack36 = &fcn.0046fe87::var_490h;\n        var_24h = 0x46ffc8;\n        fcn.0047043c();\n        var_24h = 0x8;\n        fcn.0047043c();\n        fcn.0046aabb();\n        fcn.0046aadf(&stack0xfffffb5c);\n        fcn.0046ab7d();\n        fcn.004641cc();\n        puStackY72 = 0x470035;\n        fcn.00464248(&fcn.0046fe87::var_17e0h);\n        iVar5 = iVar1 + (iVar1 >> 0x1f & 7U) >> 3;\n        arg_8h = 0;\n        if (0 < iVar5) {\n            do {\n                var_14h = 0x47006f;\n                fcn.00464248(&fcn.0046fe87::var_17e0h);\n                arg_8h = arg_8h + 1;\n            } while (arg_8h < iVar5);\n        }\n        iVar5 = 0;\n        if (0 < iVar1) {\n            do {\n                iVar3 = iVar5 + 1;\n                *(&fcn.0046fe87::var_1be0h + iVar5) = (&stack0xffffef3c)[iVar5] ^ (&stack0xfffff33c)[iVar5];\n                iVar5 = iVar3;\n            } while (iVar3 < iVar1);\n        }\n        var_14h = arg_10h;\n        *(&fcn.0046fe87::var_1be0h + iVar1) = 0;\n        fcn.004703fa();\n        fcn.0046aabb();\n        puStack32 = 0x4700c7;\n        fcn.0046aadf(arg_10h);\n        puStack32 = &fcn.0046fe87::var_24h;\n        puStack36 = 0x4700d3;\n        fcn.0046ab7d();\n        puStack36 = 0x4;\n        var_24h = &fcn.0046fe87::var_24h;\n        fcn.0047043c();\n        fcn.0047043c();\n        uVar4 = 1;\n        *arg_14h = iVar2 == unaff_ESI;\n    }\n    return uVar4;\n}\n",
        "token_count": 1386
    },
    "00470113": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00470113(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint8_t *unaff_ESI;\n    uchar *puVar4;\n    uint8_t *puVar5;\n    uint uStack1040;\n    uint uStack1036;\n    \n    iVar2 = fcn.0046fcfc();\n    uStack1040 = 0;\n    uStack1036 = 0;\n    if (((0x18 < iVar2) ||\n        (puVar5 = unaff_ESI,  iVar3 = fcn.0046fe87(arg_8h, arg_ch, unaff_ESI, &uStack1040),  iVar3 == 0)) ||\n       (puVar5 == NULL)) {\n        puVar4 = &stack0xfffffbd8;\n        iVar3 = fcn.004701d8(arg_8h, arg_ch, unaff_ESI, &stack0xfffffbe4);\n        if (iVar3 != 0) {\n            uVar1 = *unaff_ESI;\n            while (uVar1 != 0) {\n                if ((uVar1 < 0x20) && (uVar1 != 0)) {\n                    if (iVar2 < 0x19) {\n                        return 1;\n                    }\n                    fcn.004703f4(&stack0xfffffbd9, 0, 0x3ff);\n                    iVar2 = fcn.0046fe87(arg_8h, arg_ch, &stack0xfffffbd8, &stack0xfffffbd0);\n                    if (iVar2 == 0) {\n                        return 1;\n                    }\n                    if (puVar4 == NULL) {\n                        return 1;\n                    }\n                    fcn.004703fa();\n                    return 1;\n                }\n                unaff_ESI = unaff_ESI + 1;\n                uVar1 = *unaff_ESI;\n            }\n        }\n    }\n    return 1;\n}\n",
        "token_count": 446
    },
    "004701d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004701d8(uint arg_8h, uint arg_ch, uint8_t *arg_10h, uint *arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint8_t *puVar5;\n    uint var_fb0h;\n    uchar var_cb0h;\n    uint var_cafh;\n    uchar var_890h;\n    uint var_88fh;\n    uint var_888h;\n    uchar var_490h;\n    uint var_48fh;\n    uint var_488h;\n    uint var_480h;\n    uint var_70h;\n    uint var_14h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    uVar4 = 0;\n    var_890h = 0;\n    fcn.004703f4(&var_88fh, 0, 0x3ff);\n    var_cb0h = 0;\n    fcn.004703f4(&var_cafh, 0, 0x41e);\n    var_490h = 0;\n    fcn.004703f4(&var_48fh, 0, 0x41e);\n    iVar1 = fcn.0046fcfc();\n    iVar2 = fcn.004703b6(arg_8h);\n    if ((8 < iVar1) && (0 < iVar2)) {\n        fcn.0047043c(&var_cb0h, arg_8h, iVar2);\n        fcn.0047043c(&var_cb0h + iVar2, &var_890h, 8);\n        fcn.0046aabb();\n        fcn.0046aadf(&var_cb0h);\n        fcn.0046ab7d(&var_490h);\n        fcn.0047043c(&var_480h, &var_cb0h, iVar2 + 8);\n        fcn.0046aabb();\n        fcn.0046aadf(&var_490h);\n        fcn.0046ab7d(&var_14h);\n        fcn.004641cc(&var_488h, &var_14h);\n        fcn.00464248(&var_fb0h);\n        iVar2 = 0;\n        if (0x17 < iVar1) {\n            iVar2 = (iVar1 + -0x18 + (iVar1 + -0x18 >> 0x1f & 7U) >> 3) + 1;\n        }\n        var_4h = iVar2;\n        if (0 < iVar2) {\n            do {\n                fcn.00464248(&var_fb0h);\n                var_4h = var_4h + -1;\n            } while (var_4h != 0);\n        }\n        iVar3 = iVar2 * 8 + 8;\n        if (iVar1 < iVar2 * 8 + 0x10) {\n            iVar3 = iVar1 + -8;\n        }\n        if (0 < iVar3) {\n            iVar1 = iVar3;\n            puVar5 = arg_10h;\n            do {\n                *puVar5 = *puVar5 ^ puVar5[&var_888h - arg_10h];\n                puVar5 = puVar5 + 1;\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        arg_10h[iVar3] = 0;\n        uVar4 = 1;\n        *arg_14h = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 796
    },
    "00470712": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.00470712(void)\n\n{\n    uint32_t in_EAX;\n    uchar *puVar1;\n    uint unaff_retaddr;\n    \n    if (in_EAX < 0x1000) {\n        *(&stack0x00000000 + -in_EAX) = unaff_retaddr;\n        return;\n    }\n    puVar1 = &stack0x00000004;\n    do {\n        puVar1 = puVar1 + -0x1000;\n        in_EAX = in_EAX - 0x1000;\n    } while (0xfff < in_EAX);\n    *(puVar1 + (-4 - in_EAX)) = unaff_retaddr;\n    return;\n}\n",
        "token_count": 166
    },
    "00472d67": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00472e49) overlaps instruction at (ram,0x00472e48)\n// \n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Type propagation algorithm not settling\n\nvoid __fastcall fcn.00472d67(uint param_1, uint param_2)\n\n{\n    uint16_t *puVar1;\n    uchar uVar2;\n    uint uVar3;\n    bool bVar4;\n    uint32_t *puVar5;\n    char cVar6;\n    uint8_t uVar7;\n    uint8_t uVar8;\n    uint8_t uVar9;\n    uint16_t uVar11;\n    char *in_EAX;\n    uint8_t *puVar12;\n    int32_t *piVar13;\n    char *pcVar14;\n    int32_t extraout_ECX;\n    int32_t iVar16;\n    int32_t extraout_ECX_00;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    int32_t unaff_EBX;\n    int32_t iVar19;\n    uint *unaff_ESI;\n    uint *unaff_EDI;\n    uint *puVar20;\n    ushort uVar21;\n    ushort uVar22;\n    int32_t in_FS_OFFSET;\n    uint8_t in_AF;\n    uint8_t uVar23;\n    bool bVar24;\n    ulong uVar25;\n    ushort uStack12;\n    uchar uStack10;\n    uchar uStack9;\n    uint8_t uVar10;\n    char **ppcVar15;\n    \n    cVar6 = in_EAX;\n    *in_EAX = *in_EAX + cVar6;\n    *in_EAX = *in_EAX + cVar6;\n    *in_EAX = *in_EAX + cVar6;\n    *in_EAX = *in_EAX + cVar6;\n    *in_EAX = *in_EAX + cVar6;\n    *in_EAX = *in_EAX + cVar6;\n    *in_EAX = *in_EAX + cVar6;\n    *in_EAX = *in_EAX + cVar6;\n    *in_EAX = *in_EAX + cVar6;\n    *in_EAX = *in_EAX + cVar6;\n    uVar23 = 9 < (cVar6 + (param_2 >> 8) & 0xfU) | in_AF;\n    uVar21 = 0xe999;\n    uStack10 = 0x89;\n    uStack9 = 0x2d;\n    uVar25 = func_0x99999999();\n    uVar18 = uVar25 >> 0x20;\n    uVar23 = 9 < (uVar25 & 0xf) | uVar23;\n    uVar11 = CONCAT11((uVar25 >> 8) - uVar23, uVar25 + uVar23 * -6) & 0xff0f;\n    puVar12 = uVar25 & 0xffff0000 | uVar11;\n    uVar7 = uVar11;\n    *puVar12 = *puVar12 + uVar7;\n    *puVar12 = *puVar12 + uVar7;\n    uVar9 = *puVar12;\n    uVar10 = *puVar12;\n    *puVar12 = *puVar12 + uVar7;\n    bVar24 = *puVar12 != 0;\n    iVar16 = extraout_ECX + -1;\n    bVar4 = iVar16 != 0;\n    puVar20 = unaff_EDI;\n    if (!bVar4 || !bVar24) {\n        uVar22 = 0xc999;\n        uVar8 = func_0x99999999(uVar21);\n        uVar23 = 9 < (uVar8 & 0xf) | uVar23;\n        uVar25 = func_0x99999999(uVar22);\n        uVar17 = uVar25 >> 0x20;\n        uVar23 = 9 < (uVar25 & 0xf) | uVar23;\n        puVar12 = uVar17 + 0x49;\n        uVar8 = *puVar12;\n        *puVar12 = *puVar12 << 1 | uVar23;\n        uVar18 = *(extraout_ECX_00 + -0x3c8754b3);\n        *(extraout_ECX_00 + -0x3c8754b3) = CONCAT14(uVar8 < '\\0', uVar18) >> 0x19 | uVar18 << 8;\n        piVar13 = (uVar25 >> 8 & 0xffff00) << 8 | ((uVar25 >> 8) - uVar23) * 'm' + 0xbe;\n        puVar12 = piVar13 + *piVar13;\n        *puVar12 = *puVar12 + puVar12;\n        out(*unaff_ESI, uVar25 >> 0x20);\n        puVar1 = unaff_EBX + 0x5c + (unaff_ESI + 1) * 2;\n        *puVar1 = *puVar1 + (unaff_EBX < puVar12[uVar17 * 2 + 0x72]) * ((unaff_ESI + 1 & 3) - (*puVar1 & 3));\n        uStack12 = unaff_EBX;\n        uStack10 = unaff_EBX >> 0x10;\n        uStack9 = unaff_EBX >> 0x18;\n        uVar11 = CONCAT11(uVar25 >> 0x28 ^ *puVar12, uVar25 >> 0x20);\n        uVar18 = uVar17 & 0xffff0000 | uVar11;\n        *0x69616d5c = *0x69616d5c ^ uVar11 >> 8;\n        puVar20 = unaff_EDI + 1;\n        uVar2 = in(uVar11);\n        *unaff_EDI = uVar2;\n        iVar16 = extraout_ECX_00;\n    }\n    if ((bVar4 && bVar24) && SCARRY1(uVar10, uVar7)) {\n        cVar6 = puVar12;\n        *puVar12 = *puVar12 + cVar6;\n        *puVar12 = *puVar12 + cVar6;\n        piVar13 = puVar12 & 0xffffff00 | cVar6 * '\\x02';\n        *piVar13 = *piVar13 + piVar13;\n    }\n    else {\n        puVar5 = CONCAT13(uStack9, CONCAT12(uStack10, uStack12));\n        *puVar5 = uVar18;\n        uVar2 = in(uVar18);\n        *puVar20 = uVar2;\n        puVar20 = *puVar5;\n        unaff_EBX = puVar5[4];\n        iVar16 = puVar5[6];\n        piVar13 = puVar5[7];\n        if ((bVar4 && bVar24) && CARRY1(uVar9, uVar7)) {\n            iVar19 = puVar5[8];\n            uVar3 = in(puVar5[5]);\n            *puVar20 = uVar3;\n            pcVar14 = *(iVar19 + 0x20);\n            *pcVar14 = *pcVar14 + pcVar14;\n            *pcVar14 = *pcVar14 + pcVar14;\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    }\n    *piVar13 = *piVar13 + piVar13;\n    uVar10 = piVar13;\n    uVar9 = uVar10 % 0x46;\n    ppcVar15 = piVar13 & 0xffff0000 | CONCAT11(uVar10 / 0x46, uVar10) & 0xffffff00 | uVar9;\n    *ppcVar15 = *ppcVar15 + ppcVar15;\n    *ppcVar15 = *ppcVar15 + uVar9;\n    *ppcVar15 = *ppcVar15 + uVar9;\n    *ppcVar15 = *ppcVar15 + uVar9;\n    *ppcVar15 = *ppcVar15 + uVar9;\n    *(ppcVar15 + 1) = *(ppcVar15 + 1);\n    *(in_FS_OFFSET + iVar16) = *(in_FS_OFFSET + iVar16) & uVar9;\n    pcVar14 = puVar20 + ppcVar15 * 2 + 1;\n    *pcVar14 = *pcVar14 + (unaff_EBX >> 8);\n    *ppcVar15 = *ppcVar15 + uVar9;\n    *ppcVar15 = *ppcVar15 + uVar9;\n    *ppcVar15 = *ppcVar15 + uVar9;\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 2001
    },
    "0040ce81": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ce81(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint var_3ch;\n    int32_t var_30h;\n    uint var_2ch;\n    \n    var_2ch = 0xf000;\n    var_30h = ((arg_10h != 0) + 1) * 0x1000;\n    (**0x44327c)(arg_8h, 0x102b, arg_ch, &var_3ch);\n    return;\n}\n",
        "token_count": 123
    },
    "00411b1d": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00411b1d(int16_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = arg_10h;\n    *arg_8h = 0;\n    var_10h = fcn.0040e0c4(arg_ch);\n    if ((var_10h == 0) && (*(iVar2 + 0x414) == 0x20)) {\n        var_4h = 0;\n        var_8h = 0;\n        iVar2 = fcn.00411843(arg_8h, arg_ch, &var_4h, &var_8h);\n        if (iVar2 != 0) {\n            fcn.004115f8();\n            var_ch = (**0x443198)(0x40, 0, var_4h);\n            if (var_ch != 0) {\n                arg_ch = 0;\n                uVar3 = (**0x443190)(&arg_ch, 0x80000000, 0, 0);\n                (**0x443194)(var_ch, var_8h, uVar3);\n                pcVar1 = *0x4430e4;\n                if (arg_ch != 0) {\n                    var_8h = (*_fcn.004430dc)(arg_ch, 0);\n                    fcn.004104d3(0x448400);\n                    var_4h = fcn.0041016a(arg_8h);\n                    iVar2 = (**0x44318c)(arg_ch, 0, 2, 0, 0, 0);\n                    if (iVar2 != 0) {\n                        iVar4 = (**0x443184)(iVar2, 4, 0, 0, var_8h);\n                        if (iVar4 != 0) {\n                            var_14h = 0;\n                            (*_fcn.004430f8)(var_4h, iVar4, var_8h, &var_14h, 0);\n                            (**0x443188)(iVar4);\n                        }\n                        (*pcVar1)(iVar2);\n                    }\n                    (*pcVar1)(var_4h);\n                    (*pcVar1)(arg_ch);\n                }\n                (*pcVar1)(var_ch);\n            }\n            if (*arg_8h != 0) {\n                var_10h = fcn.0040e0c4(arg_8h);\n            }\n            fcn.00411611();\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 651
    },
    "004141c0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004141c0(void)\n\n{\n    int16_t *piVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t unaff_EBX;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    iVar2 = *(unaff_EBX + 0x2c4) * 4;\n    iVar3 = fcn.0044b5b1(-(iVar2 >> 0x20 != 0) | iVar2);\n    var_ch = 0;\n    if (0 < *(unaff_EBX + 0x2c4)) {\n        do {\n            if (*(unaff_EBX + 0x294) == 0) {\n                piVar1 = **(unaff_EBX + 0x2b4) + var_ch * 4;\n                var_10h = *piVar1;\n                var_4h = piVar1[1];\ncode_r0x00414234:\n                if (var_10h < 1) {\n                    *(iVar3 + var_ch * 4) = 0xffffffff;\n                }\n                else {\n                    if (var_4h < 0) {\n                        var_4h = 0;\n                    }\n                    if (*(unaff_EBX + 0x2c4) <= var_4h) {\n                        var_4h = *(unaff_EBX + 0x2c4) + -1;\n                    }\n                    *(iVar3 + var_ch * 4) = var_4h;\n                }\n            }\n            else {\n                iVar5 = fcn.0040cf49(*(unaff_EBX + 0x294), var_ch);\n                if (iVar5 != 0) goto code_r0x00414234;\n            }\n            var_ch = var_ch + 1;\n        } while (var_ch < *(unaff_EBX + 0x2c4));\n    }\n    iVar5 = 0;\n    if (0 < *(unaff_EBX + 0x2c4)) {\n        do {\n            iVar4 = 0;\n            if (0 < *(unaff_EBX + 0x2c4)) {\n                do {\n                    if (*(iVar3 + iVar4 * 4) == iVar5) {\n                        *(*(unaff_EBX + 0x2c) + var_8h * 4) = iVar4;\n                        var_8h = var_8h + 1;\n                    }\n                    iVar4 = iVar4 + 1;\n                } while (iVar4 < *(unaff_EBX + 0x2c4));\n            }\n            iVar5 = iVar5 + 1;\n        } while (iVar5 < *(unaff_EBX + 0x2c4));\n    }\n    *(unaff_EBX + 0x28) = var_8h;\n    fcn.0044b5b7(iVar3);\n    return;\n}\n",
        "token_count": 685
    },
    "00414acb": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414acb(uint arg_8h, uint *arg_ch)\n\n{\n    uint16_t *arg_ch_00;\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    uint *arg_8h_00;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    if (0 < *(unaff_EBX + 0x28)) {\n        do {\n            iVar1 = *(*(unaff_EBX + 0x2c) + var_4h * 4);\n            if (arg_ch == NULL) {\n                arg_ch_00 = *(*(unaff_EBX + 0x2c8) + 0x10 + iVar1 * 0x14);\n            }\n            else {\n                arg_ch_00 = (***arg_ch)(iVar1, *(unaff_EBX + 0x5c));\n            }\n            iVar1 = fcn.0044b57b(arg_ch_00, 0x2c);\n            if ((iVar1 == 0) && (iVar1 = fcn.0044b57b(arg_ch_00, 0x22),  iVar1 == 0)) {\n                fcn.00414a60(arg_8h, arg_ch_00);\n            }\n            else {\n                arg_8h_00 = &var_ch;\n                var_ch = 0x22;\n                fcn.004110cc(arg_8h_00);\n                for (; var_8h = *arg_ch_00,  *arg_ch_00 != 0; arg_ch_00 = arg_ch_00 + 1) {\n                    fcn.004110cc(arg_8h_00);\n                }\n                fcn.004110cc(&var_ch);\n                fcn.00414a60(arg_8h, 0x4434fc);\n                fcn.00411044();\n            }\n            if (var_4h < *(unaff_EBX + 0x28) + -1) {\n                fcn.00414a60(arg_8h, 0x44397c);\n            }\n            var_4h = var_4h + 1;\n        } while (var_4h < *(unaff_EBX + 0x28));\n    }\n    fcn.00414a60(arg_8h, 0x443980);\n    return;\n}\n",
        "token_count": 569
    },
    "00421a06": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421a06(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t unaff_EDI;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = *arg_8h;\n    var_4h = 0;\n    if ((((*(unaff_EDI + 0xe) == '\\0') || (*(unaff_EDI + 0x18) == 0)) && (*(*(unaff_EDI + 0xa8) + 0xc) == 0)) &&\n       ((iVar1 != 0 && (iVar1 != *(unaff_EDI + 0x80))))) {\n        var_14h = 0;\n        var_10h = 0;\n        var_ch = iVar1;\n        if ((*(unaff_EDI + 0xf) != '\\0') && (piVar2 = *(unaff_EDI + 0x3c),  *piVar2 != 0)) {\n            var_4h = (**(*piVar2 + 0x18))(piVar2, &var_14h);\n            if (var_4h != 0) goto code_r0x00421adc;\n        }\n        var_8h = fcn.0041f811();\n        if (var_8h == 0) {\n            var_4h = 7;\n        }\n        else {\n            fcn.004209ec();\n            uVar3 = fcn.0044b9ed(var_14h, var_10h, iVar1, 0);\n            *(unaff_EDI + 0x80) = iVar1;\n            *(unaff_EDI + 0x18) = uVar3;\n            fcn.0041f8b9();\n            iVar1 = *(unaff_EDI + 0xa8);\n            *(unaff_EDI + 0xa4) = var_8h;\n            if (*(iVar1 + 0x28) != 0) {\n                (**0x44f08c)(*(iVar1 + 0x28));\n                *(iVar1 + 0x28) = 0;\n                *(iVar1 + 0x2c) = 0;\n            }\n            *(iVar1 + 0x14) = var_ch;\n        }\n    }\ncode_r0x00421adc:\n    *arg_8h = *(unaff_EDI + 0x80);\n    if (var_4h == 0) {\n        if (arg_ch < 0) {\n            arg_ch = *(unaff_EDI + 0x76);\n        }\n        *(unaff_EDI + 0x76) = arg_ch;\n    }\n    return;\n}\n",
        "token_count": 641
    },
    "004396db": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004396db(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint var_28h;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    \n    puVar2 = *(arg_8h + 0xc);\n    puVar1 = *(arg_8h + 0x2c);\n    *(arg_8h + 0x2c) = 0;\n    *(arg_8h + 0x28) = 0;\n    *(arg_8h + 0x24) = 0;\n    *(arg_8h + 0x30) = 0;\n    fcn.0041d8ec();\n    for (; puVar1 != NULL; puVar1 = *puVar1) {\n        fcn.0044218c();\n    }\n    fcn.0041d8ec();\n    *(arg_8h + 0xc) = 0;\n    *(arg_8h + 8) = 0;\n    *(arg_8h + 4) = 0;\n    *(arg_8h + 0x10) = 0;\n    for (; puVar2 != NULL; puVar2 = *puVar2) {\n        fcn.004369c9(0, puVar2[2]);\n    }\n    fcn.0041d8ec();\n    fcn.0041d8ec();\n    *(arg_8h + 0x4a) = *(arg_8h + 0x4a) & 0xfffe;\n    *(arg_8h + 0x44) = 0;\n    return;\n}\n",
        "token_count": 385
    },
    "00463b5b": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00463b5b(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint var_2ch;\n    int32_t var_20h;\n    uint var_1ch;\n    \n    var_1ch = 0xf000;\n    var_20h = ((arg_10h != 0) + 1) * 0x1000;\n    (*_fcn.00412210)(arg_8h, 0x102b, arg_ch, &var_2ch);\n    return;\n}\n",
        "token_count": 125
    },
    "0046779f": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0046779f(void)\n\n{\n    int16_t *piVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t unaff_EBX;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    iVar2 = *(unaff_EBX + 0x1b0) * 4;\n    iVar3 = fcn.00470442(-(iVar2 >> 0x20 != 0) | iVar2);\n    var_ch = 0;\n    if (0 < *(unaff_EBX + 0x1b0)) {\n        do {\n            if (*(unaff_EBX + 0x184) == 0) {\n                piVar1 = **(unaff_EBX + 0x1a0) + var_ch * 4;\n                var_10h = *piVar1;\n                var_4h = piVar1[1];\ncode_r0x00467813:\n                if (var_10h < 1) {\n                    *(iVar3 + var_ch * 4) = 0xffffffff;\n                }\n                else {\n                    if (var_4h < 0) {\n                        var_4h = 0;\n                    }\n                    if (*(unaff_EBX + 0x1b0) <= var_4h) {\n                        var_4h = *(unaff_EBX + 0x1b0) + -1;\n                    }\n                    *(iVar3 + var_ch * 4) = var_4h;\n                }\n            }\n            else {\n                iVar5 = fcn.00463c04(*(unaff_EBX + 0x184), var_ch);\n                if (iVar5 != 0) goto code_r0x00467813;\n            }\n            var_ch = var_ch + 1;\n        } while (var_ch < *(unaff_EBX + 0x1b0));\n    }\n    iVar5 = 0;\n    if (0 < *(unaff_EBX + 0x1b0)) {\n        do {\n            iVar4 = 0;\n            if (0 < *(unaff_EBX + 0x1b0)) {\n                do {\n                    if (*(iVar3 + iVar4 * 4) == iVar5) {\n                        *(*(unaff_EBX + 0x24) + var_8h * 4) = iVar4;\n                        var_8h = var_8h + 1;\n                    }\n                    iVar4 = iVar4 + 1;\n                } while (iVar4 < *(unaff_EBX + 0x1b0));\n            }\n            iVar5 = iVar5 + 1;\n        } while (iVar5 < *(unaff_EBX + 0x1b0));\n    }\n    *(unaff_EBX + 0x20) = var_8h;\n    fcn.00470448(iVar3);\n    return;\n}\n",
        "token_count": 678
    },
    "0046803d": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0046803d(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    char *arg_ch_00;\n    uint *arg_8h_00;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    var_ch = 0;\n    if (0 < *(unaff_EBX + 0x20)) {\n        do {\n            iVar1 = *(*(unaff_EBX + 0x24) + var_ch * 4);\n            if (arg_ch == NULL) {\n                arg_ch_00 = *(*(unaff_EBX + 0x1b4) + 0x10 + iVar1 * 0x14);\n            }\n            else {\n                arg_ch_00 = (***arg_ch)(iVar1, *(unaff_EBX + 0x4c));\n            }\n            iVar1 = fcn.00470412(arg_ch_00, 0x2c);\n            if ((iVar1 == 0) && (iVar1 = fcn.00470412(arg_ch_00, 0x22),  iVar1 == 0)) {\n                fcn.00464d6f(arg_8h, arg_ch_00);\n            }\n            else {\n                arg_8h_00 = &var_8h;\n                var_8h._0_2_ = 0x22;\n                fcn.00465a51(arg_8h_00);\n                for (; var_1h._0_1_ = *arg_ch_00,  var_1h != '\\0'; arg_ch_00 = arg_ch_00 + 1) {\n                    fcn.00465a51(arg_8h_00);\n                }\n                fcn.00465a51(&var_8h);\n                fcn.00464d6f(arg_8h, 0x412466);\n                fcn.004659cd();\n            }\n            if (var_ch < *(unaff_EBX + 0x20) + -1) {\n                fcn.00464d6f(arg_8h, 0x412b18);\n            }\n            var_ch = var_ch + 1;\n        } while (var_ch < *(unaff_EBX + 0x20));\n    }\n    fcn.00464d6f(arg_8h, 0x412b1c);\n    return;\n}\n",
        "token_count": 598
    },
    "0046a3ae": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046a3ae(uint32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    if (arg_8h < 0x403) {\n        if (arg_8h != 0x402) {\n            if (arg_8h == 0x1c) {\n                if (arg_ch == 0) {\n                    uVar2 = (**0x412150)();\n                    *(in_ECX + 0x378) = uVar2;\n                }\n                else {\n                    (*_fcn.00412174)(*(in_ECX + 0x108), 0x41c, 0, 0);\n                }\n            }\n            else if (arg_8h == 0x20) {\n                if (arg_ch == *(in_ECX + 0x114)) {\n                    uVar2 = (*_fcn.00412198)(*0x416b94, 0x67);\n                    (*_fcn.00412190)(uVar2);\n                    return 1;\n                }\n            }\n            else if (arg_8h == 0x2b) {\n                if (*(arg_10h + 0x14) == *(in_ECX + 0x114)) {\n                    (**0x412050)(*(arg_10h + 0x18), 1);\n                    (**0x412048)(*(arg_10h + 0x18), 0xff0000);\n                    pcVar1 = *0x412040;\n                    var_4h = (**0x412040)(*(arg_10h + 0x18), *(in_ECX + 600));\n                    var_14h = 0;\n                    uStack16 = 0;\n                    uStack12 = 0;\n                    var_18h = 0x14;\n                    var_10h = 5;\n                    (**0x412158)(*(arg_10h + 0x18), in_ECX + 0x158, 0xffffffff, arg_10h + 0x1c, 4, &var_18h);\n                    (*pcVar1)(*(arg_10h + 0x18), var_4h);\n                }\n            }\n            else if ((arg_8h == 0x7b) && (arg_ch == *(*(in_ECX + 0x370) + 0x184))) {\n                fcn.0046a1e4();\n            }\n            goto code_r0x0046a52f;\n        }\n        *(in_ECX + 0x25c) = 0;\n        fcn.004692a9();\n    }\n    else if (arg_8h == 0x415) {\n        fcn.0046933a();\n    }\n    else {\n        if (arg_8h != 0x416) {\n            if (arg_8h == 0x41c) {\n                (*_fcn.00412220)(*(in_ECX + 0x378));\n            }\n            goto code_r0x0046a52f;\n        }\n        fcn.004693de();\n    }\n    fcn.004690f1();\ncode_r0x0046a52f:\n    if (arg_8h == *(in_ECX + 0x374)) {\n        if ((*(arg_10h + 0xc) & 8) == 0) {\n            if ((*(arg_10h + 0xc) & 0x40) != 0) {\n                *0x4171ac = 0;\n                (*_fcn.00412220)(*(*(in_ECX + 0x370) + 0x184));\n            }\n        }\n        else {\n            fcn.00468bf0();\n        }\n    }\n    uVar2 = fcn.0046081e(arg_8h, arg_ch, arg_10h);\n    return uVar2;\n}\n",
        "token_count": 912
    },
    "0040aa44": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.0040aa44(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x10) = 0;\n    *(in_EAX + 4) = 0;\n    *(in_EAX + 8) = 0;\n    *(in_EAX + 0x14) = 0x100;\n    *(in_EAX + 0xc) = 0;\n    *(in_EAX + 0x18) = 0;\n    *(in_EAX + 0x1c) = 0;\n    *(in_EAX + 0x20) = 5000;\n    *(in_EAX + 0x2c) = 0x20;\n    *(in_EAX + 0x24) = 0;\n    *(in_EAX + 0x30) = 0;\n    *(in_EAX + 0x28) = 0;\n    fcn.0040aa13();\n    return;\n}\n",
        "token_count": 216
    },
    "0040bb5d": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.0040bb5d(void)\n\n{\n    uint *in_EAX;\n    \n    *in_EAX = 1;\n    in_EAX[1] = 1;\n    in_EAX[2] = 1;\n    in_EAX[3] = 1;\n    in_EAX[4] = 1;\n    in_EAX[5] = 1;\n    in_EAX[6] = 0;\n    in_EAX[7] = 0;\n    *(in_EAX + 8) = 0;\n    *(in_EAX + 0x22a) = 0;\n    *(in_EAX + 0x10d) = 0;\n    in_EAX[0x18d] = 0;\n    *(in_EAX + 0x18e) = 0;\n    in_EAX[0x211] = 0;\n    *(in_EAX + 0x212) = 0;\n    return;\n}\n",
        "token_count": 214
    },
    "00410ea3": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00410ea3(void)\n\n{\n    uint *in_EAX;\n    \n    in_EAX[5] = 0x400;\n    in_EAX[6] = 0x100;\n    *in_EAX = 0;\n    in_EAX[1] = 0;\n    in_EAX[3] = 0;\n    in_EAX[4] = 0;\n    in_EAX[7] = 0;\n    in_EAX[2] = 0;\n    return;\n}\n",
        "token_count": 114
    },
    "00413f67": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid fcn.00413f67(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_EDI;\n    \n    fcn.00411044();\n    fcn.00411044();\n    fcn.00411044();\n    fcn.00411044();\n    (**(*unaff_EDI + 0x40))();\n    fcn.0041100e();\n    fcn.0041100e();\n    fcn.0041100e();\n    fcn.0041100e();\n    iVar1 = fcn.0041105d();\n    unaff_EDI[0x17] = iVar1;\n    iVar1 = fcn.0041105d();\n    unaff_EDI[0x18] = iVar1;\n    iVar1 = fcn.0041105d();\n    unaff_EDI[0x19] = iVar1;\n    iVar1 = fcn.0041105d();\n    unaff_EDI[0x1a] = iVar1;\n    return;\n}\n",
        "token_count": 221
    },
    "00418d6f": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00418d6f(void)\n\n{\n    uint *unaff_ESI;\n    \n    fcn.00410ea3();\n    fcn.00410ea3();\n    fcn.00410ea3();\n    unaff_ESI[0x1d] = 0;\n    unaff_ESI[0x1a] = 0;\n    unaff_ESI[0x1b] = 0;\n    unaff_ESI[0x1c] = 0;\n    unaff_ESI[0x1e] = 0x100;\n    unaff_ESI[0x1f] = 0;\n    unaff_ESI[0x20] = 0;\n    unaff_ESI[0x21] = 0;\n    unaff_ESI[0x22] = 0;\n    unaff_ESI[0x23] = 0;\n    unaff_ESI[0x24] = 0;\n    unaff_ESI[0x25] = 0;\n    unaff_ESI[0x28] = 0;\n    unaff_ESI[0x2a] = 0;\n    unaff_ESI[0x27] = 0;\n    unaff_ESI[0x29] = 0;\n    unaff_ESI[0x26] = 0x4493a8;\n    unaff_ESI[0x2b] = 0x4483a8;\n    unaff_ESI[0x2c] = 0x4493b0;\n    unaff_ESI[0x2e] = 0;\n    unaff_ESI[0x2f] = 0;\n    unaff_ESI[0x30] = 0;\n    unaff_ESI[0x31] = 0;\n    unaff_ESI[0x32] = 0;\n    unaff_ESI[0x33] = 0;\n    unaff_ESI[0x34] = 0;\n    unaff_ESI[0x2d] = 0;\n    unaff_ESI[0xb8] = 0x4493b0;\n    unaff_ESI[0xb9] = 0x4493b4;\n    fcn.00418d47();\n    unaff_ESI[0x6be] = 0;\n    unaff_ESI[0x6bf] = 0;\n    unaff_ESI[0x6c0] = 5000;\n    unaff_ESI[0x6bd] = 0x4493bc;\n    unaff_ESI[0x6cb] = 0;\n    unaff_ESI[0x6c8] = 0;\n    unaff_ESI[0x6c9] = 0;\n    unaff_ESI[0x6cc] = 0x100;\n    unaff_ESI[0x6ca] = 0;\n    unaff_ESI[0x6d0] = 0;\n    unaff_ESI[0x6cd] = 0;\n    unaff_ESI[0x6ce] = 0;\n    unaff_ESI[0x6d1] = 0x100;\n    unaff_ESI[0x6cf] = 0;\n    unaff_ESI[0x6d5] = 0;\n    unaff_ESI[0x6d2] = 0;\n    unaff_ESI[0x6d3] = 0;\n    unaff_ESI[0x6d6] = 0x100;\n    unaff_ESI[0x6d4] = 0;\n    unaff_ESI[0x6da] = 0;\n    unaff_ESI[0x6d7] = 0;\n    unaff_ESI[0x6d8] = 0;\n    unaff_ESI[0x6db] = 0x100;\n    unaff_ESI[0x6d9] = 0;\n    unaff_ESI[0x6dc] = 0x4493b0;\n    unaff_ESI[0x6dd] = 0;\n    unaff_ESI[0x6de] = 0;\n    unaff_ESI[0x6df] = 0;\n    unaff_ESI[0x6e0] = 0;\n    unaff_ESI[0x6e1] = 0;\n    unaff_ESI[0x6e2] = 0;\n    unaff_ESI[0x6e3] = 0;\n    unaff_ESI[0x6e4] = 0;\n    *unaff_ESI = 0x4493d8;\n    unaff_ESI[0x26] = 0x4493dc;\n    unaff_ESI[0x2b] = 0x4493e4;\n    unaff_ESI[0x2c] = 0x4493e8;\n    unaff_ESI[0xb8] = 0x4493ec;\n    unaff_ESI[0xb9] = 0x4493f0;\n    unaff_ESI[0x6bd] = 0x4493f8;\n    unaff_ESI[0x6dc] = 0x449414;\n    return;\n}\n",
        "token_count": 1186
    },
    "00429280": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00429280(uint param_1, uint param_2)\n\n{\n    int32_t unaff_ESI;\n    \n    fcn.0042908c(unaff_ESI);\n    *(unaff_ESI + 0x10) = param_1;\n    *(unaff_ESI + 0x14) = param_2;\n    *(unaff_ESI + 0x1c) = 4;\n    *(unaff_ESI + 0x1e) = 1;\n    return;\n}\n",
        "token_count": 114
    },
    "0042a3ae": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t * fcn.0042a3ae(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **in_EAX;\n    \n    piVar1 = *in_EAX;\n    piVar1[1] = in_EAX[2];\n    piVar1[7] = in_EAX[3];\n    piVar1[2] = in_EAX[4];\n    piVar1[6] = in_EAX[5];\n    piVar1[0x11] = in_EAX[6];\n    *(piVar1 + 0x32) = *(in_EAX + 7);\n    iVar2 = *piVar1;\n    *(iVar2 + 0x30) = in_EAX[0xc];\n    *(iVar2 + 0x34) = in_EAX[0xd];\n    piVar1[0x1b] = in_EAX[0xe];\n    return in_EAX[1];\n}\n",
        "token_count": 216
    },
    "0043977b": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\nvoid fcn.0043977b(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX == 0) {\n        iVar1 = fcn.0041c2f7(0x50);\n    }\n    else {\n        iVar1 = fcn.0042875d(0x50, 0x4306ce);\n    }\n    if (iVar1 == 0) {\n        *(param_1 + 0x1e) = 1;\n        return;\n    }\n    if (*(iVar1 + 0x48) == '\\0') {\n        *(iVar1 + 0xc) = 0;\n        *(iVar1 + 8) = 0;\n        *(iVar1 + 4) = 0;\n        *(iVar1 + 0x10) = 0;\n        *(iVar1 + 0x1c) = 0;\n        *(iVar1 + 0x18) = 0;\n        *(iVar1 + 0x14) = 0;\n        *(iVar1 + 0x20) = 0;\n        *(iVar1 + 0x2c) = 0;\n        *(iVar1 + 0x28) = 0;\n        *(iVar1 + 0x24) = 0;\n        *(iVar1 + 0x30) = 0;\n        *(iVar1 + 0x3c) = 0;\n        *(iVar1 + 0x38) = 0;\n        *(iVar1 + 0x34) = 0;\n        *(iVar1 + 0x40) = 0;\n        *(iVar1 + 0x49) = 1;\n    }\n    return;\n}\n",
        "token_count": 381
    },
    "0044b349": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.0044b349(void)\n\n{\n    uint *unaff_ESI;\n    \n    *unaff_ESI = 0x4493b0;\n    if (unaff_ESI[1] != 0) {\n        (**0x443100)(unaff_ESI[1]);\n        unaff_ESI[1] = 0;\n        unaff_ESI[2] = 0;\n        unaff_ESI[3] = 0;\n        unaff_ESI[4] = 0;\n        unaff_ESI[5] = 0;\n        unaff_ESI[6] = 0;\n        unaff_ESI[7] = 0;\n        unaff_ESI[8] = 0;\n    }\n    return;\n}\n",
        "token_count": 167
    },
    "00462e88": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00462e88(void)\n\n{\n    uint *unaff_EDI;\n    \n    fcn.00467340();\n    unaff_EDI[0x76] = 0;\n    unaff_EDI[0x73] = 0;\n    unaff_EDI[0x74] = 0;\n    unaff_EDI[0x75] = 0;\n    unaff_EDI[0x77] = 0x100;\n    unaff_EDI[0x78] = 0x413754;\n    unaff_EDI[0x7c] = 0;\n    unaff_EDI[0x79] = 0;\n    unaff_EDI[0x7a] = 0;\n    unaff_EDI[0x7d] = 0x100;\n    unaff_EDI[0x7b] = 0;\n    unaff_EDI[0x78] = 0x413760;\n    unaff_EDI[0x72] = 0x413758;\n    unaff_EDI[0x7f] = 0;\n    unaff_EDI[0x80] = 0;\n    unaff_EDI[0x81] = 0;\n    unaff_EDI[0x82] = 0;\n    unaff_EDI[0x83] = 0;\n    unaff_EDI[0x84] = 0;\n    unaff_EDI[0x85] = 0;\n    unaff_EDI[0x7e] = 0;\n    unaff_EDI[0x18e] = 0x20;\n    unaff_EDI[0x18c] = 0;\n    unaff_EDI[399] = 0;\n    unaff_EDI[0x18d] = 0;\n    *(unaff_EDI + 0x52a) = 0;\n    unaff_EDI[400] = 0x412e80;\n    fcn.00463549();\n    unaff_EDI[0x216] = 0x413144;\n    unaff_EDI[0x21b] = 0x4130f0;\n    unaff_EDI[0x21c] = 0x4130f0;\n    unaff_EDI[0x21e] = 0x413144;\n    unaff_EDI[0x21c] = 0x412f34;\n    *unaff_EDI = 0x412e98;\n    unaff_EDI[0x72] = 0x412f1c;\n    unaff_EDI[0x78] = 0x413760;\n    unaff_EDI[400] = 0x412f24;\n    unaff_EDI[0x216] = 0x412f2c;\n    unaff_EDI[0x21b] = 0x412f30;\n    unaff_EDI[0x21e] = 0x412f38;\n    unaff_EDI[0x21f] = 0x413bd8;\n    unaff_EDI[0x221] = 0;\n    unaff_EDI[0x223] = 0;\n    unaff_EDI[0x220] = 0;\n    unaff_EDI[0x222] = 0;\n    fcn.00463549();\n    *(unaff_EDI + 0x2c8) = 0;\n    *(unaff_EDI + 0xc25) = 0;\n    *(unaff_EDI + 0xd2a) = 0;\n    *(unaff_EDI + 0xe2f) = 0;\n    *(unaff_EDI + 0x2a7) = 0;\n    return;\n}\n",
        "token_count": 832
    },
    "0046589e": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.0046589e(void)\n\n{\n    uint *in_EAX;\n    \n    in_EAX[5] = 0x400;\n    in_EAX[6] = 0x100;\n    *in_EAX = 0;\n    in_EAX[1] = 0;\n    in_EAX[3] = 0;\n    in_EAX[4] = 0;\n    in_EAX[7] = 0;\n    in_EAX[2] = 0;\n    return;\n}\n",
        "token_count": 114
    },
    "0046aabb": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "hash data with MD5"
        ],
        "decompiled_code": "\nvoid fcn.0046aabb(void)\n\n{\n    uint *in_EAX;\n    \n    in_EAX[4] = 0;\n    in_EAX[5] = 0;\n    *in_EAX = 0x67452301;\n    in_EAX[1] = 0xefcdab89;\n    in_EAX[2] = 0x98badcfe;\n    in_EAX[3] = 0x10325476;\n    return;\n}\n",
        "token_count": 105
    },
    "004109c7": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nbool fcn.004109c7(uint param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = (*_fcn.004431e8)(param_1, 0x448328, param_2, 0x4434fc, 0x4434fc, 5);\n    return 0x20 < uVar1;\n}\n",
        "token_count": 86
    },
    "00410dcd": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00410dcd(uint param_1, uint param_2)\n\n{\n    (*_fcn.004430fc)(0xfde9, 0, param_1, 0xffffffff, param_2, 0x3ff, 0, 0);\n    return;\n}\n",
        "token_count": 65
    },
    "0041f5e7": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.0041f5e7(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    \n    *(in_EAX + 0x16) = *(in_EAX + 0x16) + -1;\n    if (*(in_EAX + 0x16) != 0) {\n        return;\n    }\n    piVar1 = *(in_EAX + 0x18) + 0xc;\n    *piVar1 = *piVar1 + -1;\n    if ((*(in_EAX + 0x14) & 2) == 0) {\n        iVar2 = *(in_EAX + 0x18);\n        if (*(iVar2 + 0x1c) != 0) {\n            if (*(in_EAX + 0xc) == 1) {\n                *(iVar2 + 0x2c) = 0;\n            }\n            (*_fcn.0044f080)(*(iVar2 + 0x28));\n        }\n        return;\n    }\n    iVar3 = fcn.0041f402();\n    piVar1 = *(iVar3 + 0x18);\n    iVar2 = *piVar1;\n    *(iVar3 + 0x1c) = iVar2;\n    if (iVar2 != 0) {\n        *(iVar2 + 0x20) = iVar3;\n    }\n    *piVar1 = iVar3;\n    if (piVar1[1] == 0) {\n        piVar1[1] = iVar3;\n    }\n    if ((piVar1[2] == 0) && ((*(iVar3 + 0x14) & 4) == 0)) {\n        piVar1[2] = iVar3;\n    }\n    return;\n}\n",
        "token_count": 402
    },
    "0041ffb0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.0041ffb0(void)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint *unaff_ESI;\n    \n    puVar2 = *unaff_ESI;\n    while (puVar2 != NULL) {\n        puVar1 = *puVar2;\n        fcn.0041c16b(unaff_ESI[1], puVar2);\n        puVar2 = puVar1;\n    }\n    *unaff_ESI = 0;\n    *(unaff_ESI + 6) = 0;\n    unaff_ESI[2] = 0;\n    unaff_ESI[3] = 0;\n    unaff_ESI[5] = 0;\n    *(unaff_ESI + 0x1a) = 1;\n    return;\n}\n",
        "token_count": 178
    },
    "0042acae": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint32_t fcn.0042acae(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    int32_t iVar2;\n    \n    iVar1 = *unaff_ESI;\n    fcn.0042aa8b();\n    if (unaff_ESI[0x16] < 0) {\n        if ((unaff_ESI[0x17] != 0) && (*(unaff_ESI + 0x19) != '\\0')) {\n            fcn.0041d171(unaff_ESI[0x17], 0);\n            if (*(iVar1 + 0xd4) != 0) {\n                fcn.004293c1(unaff_ESI[0xe], 1);\n            }\n            fcn.0041c16b(iVar1, unaff_ESI[0xe]);\n            unaff_ESI[0xe] = 0;\n        }\n    }\n    else {\n        if (unaff_ESI[0xe] == 0) {\n            iVar2 = unaff_ESI[0x17];\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            fcn.0041d171(iVar2, 0);\n        }\n        else {\n            if (*(iVar1 + 0xd4) != 0) {\n                fcn.004293c1(unaff_ESI[0xe], 1);\n            }\n            *(iVar1 + 0x14) = unaff_ESI[0x17];\n            fcn.0041c16b(iVar1, unaff_ESI[0xe]);\n            unaff_ESI[0xe] = 0;\n        }\n        if (*(unaff_ESI + 0x65) != '\\0') {\n            *(unaff_ESI + 0x19) = 1;\n        }\n    }\n    fcn.0041c16b(*unaff_ESI, unaff_ESI[0xe]);\n    unaff_ESI[0xe] = 0;\n    unaff_ESI[5] = 0;\n    unaff_ESI[0xd] = 0x26bceaa5;\n    return *(iVar1 + 0x18) & unaff_ESI[0x17];\n}\n",
        "token_count": 495
    },
    "00461246": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00461246(uint param_1, uint param_2)\n\n{\n    int32_t unaff_ESI;\n    \n    fcn.004675ce(param_1, param_2);\n    *(unaff_ESI + 0x1b8) = 0;\n    *(unaff_ESI + 0x14) = 0;\n    *(unaff_ESI + 0x1c) = 0x40;\n    *(unaff_ESI + 0x18) = 8;\n    *(unaff_ESI + 0x40) = 0;\n    return;\n}\n",
        "token_count": 133
    },
    "00462209": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00462209(uint param_1, uint param_2, uint param_3)\n\n{\n    (*_fcn.004120cc)(0x412a2c, param_2, 0x412466, param_3, 0x7f, param_1);\n    return;\n}\n",
        "token_count": 68
    },
    "00465395": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nbool fcn.00465395(uint param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = (*_fcn.00412144)(param_1, 0x41307c, param_2, 0x412466, 0x412466, 5);\n    return 0x20 < uVar1;\n}\n",
        "token_count": 83
    },
    "0040e884": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040e884(int32_t param_1)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int16_t *piVar4;\n    int16_t iVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (in_EAX - 1U < 0x7f) {\n        piVar4 = param_1 + 0xc;\n        iVar3 = fcn.0040e853(piVar4);\n        if (iVar3 != 0) {\n            *(param_1 + 0x110) = 0;\n            *(param_1 + 0x10c) = in_EAX;\n            iVar5 = 0;\n            if (0 < in_EAX) {\n                do {\n                    iVar1 = *piVar4;\n                    iVar2 = iVar1 - iVar5;\n                    if (iVar2 < 0) {\n                        *piVar4 = 0;\n                    }\n                    else {\n                        *piVar4 = iVar2;\n                        iVar5 = iVar1;\n                    }\n                    piVar4 = piVar4 + 1;\n                    in_EAX = in_EAX + -1;\n                } while (in_EAX != 0);\n            }\n            var_4h = 1;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 315
    },
    "00412253": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00412284)\n\nvoid __cdecl fcn.00412253(uint arg_8h)\n\n{\n    int16_t *in_EAX;\n    uint var_14h;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uchar uStack8;\n    \n    var_14h = *0x4485d8;\n    uStack20 = *0x4485dc;\n    uStack16 = *0x4485e0;\n    uStack12 = *0x4485e4;\n    uStack8 = *0x4485e8;\n    *in_EAX = *(&var_14h + (arg_8h >> 4));\n    in_EAX[1] = *(&var_14h + (arg_8h & 0x8000000f));\n    return;\n}\n",
        "token_count": 193
    },
    "004142b2": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004142b2(int32_t arg_8h, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    \n    if (arg_8h == 0x800) {\n        uVar1 = *(arg_10h + 4) & 0x100;\n        if (uVar1 < (*(arg_ch + 1) & 0x100)) {\n            iVar2 = 1;\n        }\n        else {\n            iVar2 = -((*(arg_ch + 1) & 0x100) < uVar1);\n        }\n        iVar2 = -iVar2;\n    }\n    else {\n        iVar2 = (**(*arg_ch + 4))(arg_8h, arg_10h);\n    }\n    return iVar2;\n}\n",
        "token_count": 189
    },
    "0041d27e": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041d27e(uint8_t *param_1, uint8_t *param_2)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = *param_1;\n    while ((uVar1 != 0 && (*(uVar1 + 0x443d90) == *(*param_2 + 0x443d90)))) {\n        param_1 = param_1 + 1;\n        param_2 = param_2 + 1;\n        uVar1 = *param_1;\n    }\n    return *(*param_1 + 0x443d90) - *(*param_2 + 0x443d90);\n}\n",
        "token_count": 150
    },
    "0041d2b9": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041d2b9(uint8_t *param_1, int32_t param_2)\n\n{\n    uint8_t *in_EAX;\n    \n    while (0 < param_2) {\n        if ((*in_EAX == 0) || (*(*in_EAX + 0x443d90) != *(*param_1 + 0x443d90))) break;\n        in_EAX = in_EAX + 1;\n        param_1 = param_1 + 1;\n        param_2 = param_2 + -1;\n    }\n    if (-1 < param_2 + -1) {\n        return *(*in_EAX + 0x443d90) - *(*param_1 + 0x443d90);\n    }\n    return 0;\n}\n",
        "token_count": 176
    },
    "00467891": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00467891(int32_t arg_8h, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    \n    if (arg_8h == 0x800) {\n        uVar1 = *(arg_10h + 4) & 0x100;\n        if (uVar1 < (*(arg_ch + 1) & 0x100)) {\n            iVar2 = 1;\n        }\n        else {\n            iVar2 = -((*(arg_ch + 1) & 0x100) < uVar1);\n        }\n        iVar2 = -iVar2;\n    }\n    else {\n        iVar2 = (**(*arg_ch + 4))(arg_8h, arg_10h);\n    }\n    return iVar2;\n}\n",
        "token_count": 188
    },
    "0046754e": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid fcn.0046754e(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_EDI;\n    \n    fcn.004659cd();\n    fcn.004659cd();\n    fcn.004659cd();\n    fcn.004659cd();\n    (**(*unaff_EDI + 0x3c))();\n    fcn.00465997();\n    fcn.00465997();\n    fcn.00465997();\n    fcn.00465997();\n    iVar1 = fcn.004659e6();\n    unaff_EDI[0x13] = iVar1;\n    iVar1 = fcn.004659e6();\n    unaff_EDI[0x14] = iVar1;\n    iVar1 = fcn.004659e6();\n    unaff_EDI[0x15] = iVar1;\n    iVar1 = fcn.004659e6();\n    unaff_EDI[0x16] = iVar1;\n    return;\n}\n",
        "token_count": 217
    },
    "004678d2": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004678d2(uint arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    \n    puVar1 = (**(*arg_10h + 100))(arg_8h);\n    puVar2 = (**(*arg_10h + 100))(arg_ch);\n    uVar5 = arg_10h[0xc] & 0xfff;\n    iVar3 = (**(*arg_10h + 0x70))(uVar5, puVar1, puVar2);\n    if (iVar3 == 0xff) {\n        uVar4 = (***puVar2)(uVar5, arg_10h[0x14]);\n        uVar4 = (***puVar1)(uVar5, arg_10h[0x13], uVar4);\n        iVar3 = fcn.00470424(uVar4);\n    }\n    if ((*(arg_10h + 0xc) & 0x1000) != 0) {\n        iVar3 = -iVar3;\n    }\n    return iVar3;\n}\n",
        "token_count": 273
    },
    "004142f3": {
        "rules": [
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004142f3(uint arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    \n    puVar1 = fcn.00413cfb(arg_8h);\n    puVar2 = fcn.00413cfb(arg_ch);\n    uVar5 = arg_10h[0xe] & 0xfff;\n    iVar3 = (**(*arg_10h + 0x78))(uVar5, puVar1, puVar2);\n    if (iVar3 == 0xff) {\n        uVar4 = (***puVar2)(uVar5, arg_10h[0x18]);\n        uVar4 = (***puVar1)(uVar5, arg_10h[0x17], uVar4);\n        iVar3 = fcn.0044b581(uVar4);\n    }\n    if ((*(arg_10h + 0xe) & 0x1000) != 0) {\n        iVar3 = -iVar3;\n    }\n    return iVar3;\n}\n",
        "token_count": 268
    },
    "0042a371": {
        "rules": [
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nvoid fcn.0042a371(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    int32_t unaff_EBX;\n    \n    if (in_EAX != NULL) {\n        if (in_EAX[1] == 0) {\n            if (*in_EAX != 0) {\n                fcn.00425fd6();\n            }\n        }\n        else {\n            fcn.004258e9();\n        }\n        iVar1 = in_EAX[9];\n        if (iVar1 != 0) {\n            iVar2 = in_EAX[10];\n            *(unaff_EBX + 0x67) = 1;\n            (**(iVar2 + 0x1c))(iVar1);\n            *(unaff_EBX + 0x67) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 192
    },
    "0046933a": {
        "rules": [
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nvoid fcn.0046933a(void)\n\n{\n    code *pcVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = fcn.0045fea5();\n    pcVar1 = _fcn.00412210;\n    if (iVar2 == 0x5cb8) {\n        (*_fcn.00412210)(*(*(in_EAX + 0x370) + 0x184), 0xb, 0, 0);\n        fcn.00464c9e();\n        *(*(in_EAX + 0x370) + 0x28) = 0;\n        (*pcVar1)(*(*(in_EAX + 0x370) + 0x184), 0x1009, 0, 0);\n        (**(**(in_EAX + 0x370) + 0x5c))();\n        (**(**(in_EAX + 0x370) + 0x74))(1);\n        fcn.004692a9();\n        (*_fcn.00412190)(*0x416b98);\n        (*_fcn.00412220)(*(*(in_EAX + 0x370) + 0x184));\n        (*pcVar1)(*(*(in_EAX + 0x370) + 0x184), 0xb, 1, 0);\n    }\n    return;\n}\n",
        "token_count": 303
    },
    "0040abdd": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0040abdd(void)\n\n{\n    int32_t in_EAX;\n    uchar *puVar1;\n    uint32_t uVar2;\n    uint32_t unaff_ESI;\n    uint var_4h;\n    \n    uVar2 = 0;\n    var_4h = 0;\n    if (unaff_ESI != 0) {\n        puVar1 = in_EAX + -1 + unaff_ESI;\n        do {\n            *(&var_4h + uVar2) = *puVar1;\n            uVar2 = uVar2 + 1;\n            puVar1 = puVar1 + -1;\n        } while (uVar2 < unaff_ESI);\n    }\n    return var_4h;\n}\n",
        "token_count": 166
    },
    "0040e098": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0040e098(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EDI;\n    \n    iVar1 = *(unaff_EDI + 0xc);\n    iVar3 = 0;\n    if (0 < iVar1) {\n        do {\n            iVar2 = fcn.0040f3b9();\n            if (*(iVar2 + 0x208) == param_1) {\n                return iVar2;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < iVar1);\n    }\n    return 0;\n}\n",
        "token_count": 149
    },
    "0040e627": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040e627(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    fcn.0040b785();\n    fcn.0040b785();\n    fcn.004115f8();\n    uVar3 = 4;\n    iVar1 = fcn.0040e6f2(4, 0);\n    while (iVar1 != 0) {\n        uVar2 = 0;\n        var_4h = 1;\n        if (1 < *0x22) {\n            do {\n                uVar3 = uVar2;\n                iVar1 = fcn.0040e239(0);\n                if (iVar1 != 0) {\n                    uVar3 = arg_8h;\n                    fcn.0040e31f(arg_8h);\n                }\n                var_4h = var_4h + 1;\n            } while (var_4h < *0x22);\n        }\n        if (*0x14 == 0) break;\n        iVar1 = fcn.0040e156();\n        uVar3 = uVar2;\n    }\n    fcn.00411611(uVar3);\n    return 0;\n}\n",
        "token_count": 337
    },
    "0040ea04": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ea04(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_ch_00;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *unaff_ESI;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = 0;\n    unaff_ESI[0x92] = arg_ch;\n    var_4h = 0;\n    if (0 < *(arg_ch + 0x428)) {\n        do {\n            arg_ch_00 = fcn.0040f34b();\n            iVar1 = fcn.0044b581(arg_ch_00, arg_8h);\n            if (iVar1 == 0) goto code_r0x0040ea4b;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < *(arg_ch + 0x428));\n    }\n    arg_ch_00 = 0;\ncode_r0x0040ea4b:\n    if ((arg_ch_00 != 0) && (iVar3 = fcn.0040e56f(arg_ch, arg_ch_00),  iVar3 != 0)) {\n        fcn.004115f8();\n        uVar2 = fcn.0040e6f2(unaff_ESI[0x88], unaff_ESI[1]);\n        *unaff_ESI = uVar2;\n        unaff_ESI[4] = 1;\n        var_4h = 1;\n    }\n    return var_4h;\n}\n",
        "token_count": 348
    },
    "0041051e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041051e(void)\n\n{\n    int16_t iVar1;\n    int16_t *in_EAX;\n    int32_t iVar2;\n    int32_t unaff_ESI;\n    \n    iVar2 = 0;\n    iVar1 = *in_EAX;\n    while (iVar1 == 0x20) {\n        iVar2 = iVar2 + 1;\n        iVar1 = in_EAX[iVar2];\n    }\n    (**0x443158)();\n    iVar2 = (**0x44315c)();\n    do {\n        iVar2 = iVar2 + -1;\n        if (iVar2 < 1) break;\n    } while (*(unaff_ESI + iVar2 * 2) == 0x20);\n    *(unaff_ESI + 2 + iVar2 * 2) = 0;\n    return;\n}\n",
        "token_count": 182
    },
    "00410599": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00410599(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    \n    fcn.00410587();\n    iVar1 = fcn.0044b58d();\n    do {\n        iVar1 = iVar1 + -1;\n        if (iVar1 < 0) {\n            return;\n        }\n    } while (*(unaff_ESI + iVar1 * 2) != 0x5c);\n    *(unaff_ESI + iVar1 * 2) = 0;\n    return;\n}\n",
        "token_count": 120
    },
    "0041060f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint16_t * __fastcall fcn.0041060f(int16_t *param_1)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    \n    for (piVar2 = param_1; iVar1 = *piVar2,  iVar1 != 0; piVar2 = piVar2 + 1) {\n        if ((iVar1 == 0x5c) || (iVar1 == 0x2f)) {\n            param_1 = piVar2 + 1;\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 125
    },
    "00411378": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00411378(uint param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t unaff_ESI;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (0 < *(unaff_ESI + 0x30)) {\n        do {\n            uVar1 = fcn.00411368();\n            iVar2 = fcn.0044b581(param_1, uVar1);\n            if (iVar2 == 0) {\n                return iVar3;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < *(unaff_ESI + 0x30));\n    }\n    return -1;\n}\n",
        "token_count": 157
    },
    "0041180e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0041180e(uint param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t unaff_ESI;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (0 < *(unaff_ESI + 0xc)) {\n        do {\n            uVar1 = fcn.0040f3b9();\n            iVar2 = fcn.0044b581(uVar1, param_1);\n            if (iVar2 == 0) {\n                return uVar1;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < *(unaff_ESI + 0xc));\n    }\n    return 0;\n}\n",
        "token_count": 158
    },
    "00411fb1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00411fb1(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_678h;\n    uint var_46ch;\n    uint var_468h;\n    uint var_464h;\n    int32_t var_458h;\n    uint var_454h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint *var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_24h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_458h = -1;\n    var_4ch = 0x20;\n    var_34h = 0x20;\n    var_40h = &var_454h;\n    var_4h = 0;\n    var_54h = 0;\n    var_48h = 0;\n    var_50h = 0;\n    var_3ch = 0;\n    var_30h = 0;\n    var_38h = 0;\n    var_46ch = 0;\n    var_468h = 0;\n    var_464h = 5000;\n    var_678h._0_2_ = 0;\n    iVar2 = fcn.00411b1d(&var_678h, arg_ch, &var_458h);\n    pcVar1 = *0x4430e4;\n    if (iVar2 != 0) {\n        uVar3 = fcn.00410ea3();\n        fcn.00411c74(&var_458h, uVar3);\n        if (0 < var_8h) {\n            iVar2 = 0;\n            var_4h = 1;\n            if (0 < var_8h) {\n                do {\n                    uVar3 = fcn.00410ff5();\n                    fcn.00411daa(arg_8h, &var_458h, uVar3);\n                    iVar2 = iVar2 + 1;\n                } while (iVar2 < var_8h);\n            }\n        }\n        if (var_458h != -1) {\n            (*pcVar1)(var_458h);\n        }\n        var_458h = -1;\n        fcn.00410ec5();\n    }\n    if (var_678h != 0) {\n        (**0x4430ec)(&var_678h);\n        var_678h._0_2_ = 0;\n    }\n    fcn.00411611();\n    if (var_458h != -1) {\n        (*pcVar1)(var_458h);\n    }\n    var_458h = 0xffffffff;\n    fcn.0040b785();\n    fcn.0040b785();\n    return var_4h;\n}\n",
        "token_count": 672
    },
    "00412479": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00412479(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint in_ECX;\n    uint var_9ech;\n    uint var_9e8h;\n    uint var_734h;\n    uint var_510h;\n    uint var_288h;\n    \n    var_288h._0_2_ = 0;\n    var_510h._0_2_ = 0;\n    fcn.004113ee(arg_8h);\n    while( true ) {\n        iVar1 = fcn.0041144e();\n        if (iVar1 == 0) break;\n        iVar1 = fcn.004113aa();\n        if (iVar1 == 0) {\n            iVar1 = fcn.0044b581(&var_734h, 0x4485f4);\n            if (iVar1 == 0) {\n                fcn.0041232a(in_ECX, &var_510h);\n            }\n        }\n        else {\n            fcn.00412479(&var_510h);\n        }\n    }\n    fcn.004114e7();\n    return;\n}\n",
        "token_count": 258
    },
    "00413e2e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00413e2e(void)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    uint *unaff_EDI;\n    int32_t iVar3;\n    \n    *unaff_EDI = 0x448b88;\n    fcn.00413dc8();\n    iVar3 = unaff_EDI[5];\n    if (iVar3 != 0) {\n        fcn.00411044();\n        fcn.0044b5b7(iVar3);\n    }\n    iVar3 = unaff_EDI[4];\n    if (iVar3 != 0) {\n        fcn.00411044();\n        fcn.0044b5b7(iVar3);\n    }\n    iVar3 = unaff_EDI[3];\n    if (iVar3 != 0) {\n        fcn.00411044();\n        fcn.0044b5b7(iVar3);\n    }\n    iVar3 = unaff_EDI[2];\n    if (iVar3 != 0) {\n        fcn.00411044();\n        fcn.0044b5b7(iVar3);\n    }\n    iVar3 = 0;\n    if ((0 < unaff_EDI[1]) && (0 < unaff_EDI[0xc])) {\n        do {\n            piVar1 = fcn.00413cfb(iVar3);\n            (**(*piVar1 + 0xc))();\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < unaff_EDI[0xc]);\n    }\n    puVar2 = (***unaff_EDI)();\n    fcn.0044b5ed(*puVar2);\n    return;\n}\n",
        "token_count": 368
    },
    "00414483": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00414483(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = 0;\n    if ((*(in_EAX + 0x2cc) == 0) || (arg_8h != 0)) {\n        arg_8h = (**0x44327c)(*(in_EAX + 0x294), 0x1032, 0, 0);\n    }\n    else {\n        uVar1 = *(in_EAX + 0x294);\n        arg_8h = 0;\n        iVar2 = fcn.0040ce50(uVar1);\n        if (0 < iVar2) {\n            do {\n                iVar3 = fcn.0040ce64(uVar1, iVar4);\n                if (iVar3 != 0) {\n                    arg_8h = arg_8h + 1;\n                }\n                iVar4 = iVar4 + 1;\n            } while (iVar4 < iVar2);\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 260
    },
    "004144e3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004144e3(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    uVar1 = *(in_EAX + 0x294);\n    iVar3 = fcn.0040cb79(uVar1);\n    pcVar2 = *0x44327c;\n    iVar5 = 0;\n    if (0 < iVar3) {\n        do {\n            iVar4 = (*pcVar2)(uVar1, 0x101d, iVar5, 0);\n            if (0 < iVar4) {\n                (*pcVar2)(uVar1, 0x101e, iVar5, 0xffff);\n            }\n            iVar5 = iVar5 + 1;\n        } while (iVar5 < iVar3);\n    }\n    return;\n}\n",
        "token_count": 201
    },
    "00417f44": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00417f44(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_13d8h;\n    uint var_13d4h;\n    uint var_efch;\n    uint var_c74h;\n    uint var_9ech;\n    uint var_9e8h;\n    uint var_510h;\n    uint var_288h;\n    uint uStackY28;\n    uint uStackY24;\n    \n    fcn.0044ba9d();\n    var_9ech = 0xffffffff;\n    var_9e8h._0_2_ = 0;\n    var_288h._0_2_ = 0;\n    var_510h._0_2_ = 0;\n    fcn.004113ee(arg_8h);\n    while( true ) {\n        iVar1 = fcn.0041144e();\n        if (iVar1 == 0) break;\n        iVar1 = fcn.004113aa();\n        if (iVar1 != 0) {\n            if (arg_10h == 0) {\n                var_c74h._0_2_ = 0;\n                var_efch._0_2_ = 0;\n                uStackY24 = 0x417fd3;\n                fcn.004113ee(&fcn.00417f44::var_510h);\n                while( true ) {\n                    iVar1 = fcn.0041144e();\n                    if (iVar1 == 0) break;\n                    iVar1 = fcn.004113aa();\n                    if (iVar1 != 0) {\n                        uStackY28 = 0x417ff5;\n                        fcn.00410eeb(&fcn.00417f44::var_efch, 0xffffffff);\n                    }\n                }\n                fcn.004114e7();\n            }\n            else {\n                uStackY28 = 0x417fa9;\n                fcn.00410eeb(&fcn.00417f44::var_510h, 0xffffffff);\n            }\n        }\n    }\n    fcn.004114e7();\n    return;\n}\n",
        "token_count": 483
    },
    "0041900d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041900d(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_9f0h;\n    uint var_9ech;\n    uint var_514h;\n    uint var_28ch;\n    \n    var_28ch._0_2_ = 0;\n    var_514h._0_2_ = 0;\n    fcn.004113ee(arg_ch);\n    while( true ) {\n        iVar1 = fcn.0041144e();\n        if (iVar1 == 0) break;\n        iVar1 = fcn.004113aa();\n        if (iVar1 != 0) {\n            fcn.00419082(arg_8h, &var_514h);\n        }\n    }\n    fcn.004114e7();\n    return;\n}\n",
        "token_count": 193
    },
    "0041a85c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0041a85c(void)\n\n{\n    int32_t iVar1;\n    uint *unaff_ESI;\n    uint var_5ch;\n    uint var_4ch;\n    uint var_3ch;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t *var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 1;\n    var_1ch = 0;\n    iVar1 = (**(*unaff_ESI[1] + 0x38))(unaff_ESI[1], 0, 0, &var_18h);\n    if (iVar1 == 0) {\n        do {\n            iVar1 = (**(*var_18h + 0xc))(var_18h, 1, &var_3ch, &var_4h);\n            if (iVar1 != 0) break;\n            iVar1 = (**(*unaff_ESI[1] + 0x3c))(unaff_ESI[1], 0, &var_3ch, 0, &var_14h);\n            if (iVar1 == 0) {\n                do {\n                    iVar1 = (**(*var_14h + 0xc))(var_14h, 1, &var_4ch, &var_4h);\n                    if (iVar1 != 0) break;\n                    iVar1 = (**(*unaff_ESI[1] + 0x54))(unaff_ESI[1], 0, &var_3ch, &var_4ch, 0, &var_10h);\n                    if (iVar1 == 0) {\n                        do {\n                            iVar1 = (**(*var_10h + 0xc))(var_10h, 1, &var_ch, &var_4h);\n                            if (iVar1 != 0) break;\n                            iVar1 = (**(*unaff_ESI[1] + 0x1c))(unaff_ESI[1], 0, &var_3ch, &var_2ch, 0);\n                            if (((iVar1 == 0) &&\n                                (iVar1 = (**(*unaff_ESI[1] + 0x28))(unaff_ESI[1], 0, &var_3ch, &var_4ch, &var_28h, 0), \n                                iVar1 == 0)) &&\n                               (iVar1 = fcn.0041a826(&var_3ch, &var_4ch, var_ch, &var_24h, &var_20h),  iVar1 == 0)) {\n                                var_1ch = var_1ch + 1;\n                                var_8h = (***unaff_ESI)(*(var_2ch + 4), *(var_28h + 4), var_ch, var_20h, var_24h, \n                                                        &var_3ch, &var_4ch);\n                                (**0x44343c)(var_20h);\n                            }\n                        } while (var_8h != 0);\n                        (**(*var_10h + 8))(var_10h);\n                    }\n                } while (var_8h != 0);\n                (**(*var_14h + 8))(var_14h);\n            }\n        } while (var_8h != 0);\n        (**(*var_18h + 8))(var_18h);\n    }\n    return var_1ch;\n}\n",
        "token_count": 817
    },
    "0041d8ec": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041d8ec(void)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint *unaff_ESI;\n    \n    puVar1 = unaff_ESI[2];\n    unaff_ESI[2] = 0;\n    fcn.0041c110(unaff_ESI[3]);\n    unaff_ESI[3] = 0;\n    *unaff_ESI = 0;\n    while (puVar1 != NULL) {\n        puVar2 = *puVar1;\n        fcn.0041c110(puVar1);\n        puVar1 = puVar2;\n    }\n    unaff_ESI[1] = 0;\n    return;\n}\n",
        "token_count": 157
    },
    "0041da36": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0041da36(int32_t param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t unaff_EBX;\n    uint *puVar3;\n    int32_t iVar4;\n    \n    if (*(param_1 + 0xc) == 0) {\n        puVar3 = *(param_1 + 8);\n        iVar4 = *(param_1 + 4);\n    }\n    else {\n        piVar1 = *(param_1 + 0xc) + param_3 * 8;\n        puVar3 = piVar1[1];\n        iVar4 = *piVar1;\n    }\n    while( true ) {\n        if ((iVar4 == 0) || (iVar4 = iVar4 + -1,  puVar3 == NULL)) {\n            return NULL;\n        }\n        if ((puVar3[4] == unaff_EBX) && (iVar2 = fcn.0041d2b9(),  iVar2 == 0)) break;\n        puVar3 = *puVar3;\n    }\n    return puVar3;\n}\n",
        "token_count": 261
    },
    "0041f402": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041f402(void)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    puVar1 = *(in_EAX + 0x18);\n    if (puVar1[2] == in_EAX) {\n        for (iVar2 = *(in_EAX + 0x20); (iVar2 != 0 && ((*(iVar2 + 0x14) & 4) != 0)); iVar2 = *(iVar2 + 0x20)) {\n        }\n        puVar1[2] = iVar2;\n    }\n    if (*(in_EAX + 0x1c) == 0) {\n        puVar1[1] = *(in_EAX + 0x20);\n    }\n    else {\n        *(*(in_EAX + 0x1c) + 0x20) = *(in_EAX + 0x20);\n    }\n    if (*(in_EAX + 0x20) == 0) {\n        *puVar1 = *(in_EAX + 0x1c);\n    }\n    else {\n        *(*(in_EAX + 0x20) + 0x1c) = *(in_EAX + 0x1c);\n    }\n    *(in_EAX + 0x1c) = 0;\n    *(in_EAX + 0x20) = 0;\n    return;\n}\n",
        "token_count": 314
    },
    "0041f6c7": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041f6c7(uint param_1, uint *param_2)\n\n{\n    uint *in_EAX;\n    uint *puVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint var_24h;\n    uint var_1ch;\n    \n    puVar2 = &var_24h;\n    puVar3 = param_2;\n    if (in_EAX != NULL) {\n        do {\n            puVar1 = in_EAX;\n            puVar3 = param_2;\n            if (param_2 == NULL) break;\n            if (in_EAX[3] < param_2[3]) {\n                puVar2[2] = in_EAX;\n                puVar1 = in_EAX[2];\n                puVar2 = in_EAX;\n            }\n            else {\n                puVar2[2] = param_2;\n                puVar3 = param_2[2];\n                puVar2 = param_2;\n            }\n            in_EAX = puVar1;\n            param_2 = puVar3;\n        } while (puVar1 != NULL);\n        if (puVar1 != NULL) {\n            puVar2[2] = puVar1;\n            return var_1ch;\n        }\n    }\n    puVar2[2] = puVar3;\n    return var_1ch;\n}\n",
        "token_count": 299
    },
    "0041fa94": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041fa94(void)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint32_t **ppuVar3;\n    uint32_t *unaff_ESI;\n    \n    uVar1 = unaff_ESI[2];\n    ppuVar3 = *(uVar1 + 0x24) + (*unaff_ESI % *(uVar1 + 0x20)) * 4;\n    while (puVar2 = *ppuVar3,  puVar2 != unaff_ESI) {\n        ppuVar3 = puVar2 + 1;\n    }\n    *ppuVar3 = puVar2[1];\n    *(uVar1 + 0x1c) = *(uVar1 + 0x1c) + -1;\n    return;\n}\n",
        "token_count": 183
    },
    "00420056": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00420056(uint32_t *param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *in_EAX;\n    uint32_t *puVar3;\n    uint var_10h;\n    uint var_8h;\n    \n    puVar3 = &var_10h;\n    if (in_EAX != NULL) {\n        do {\n            if (param_1 == NULL) break;\n            uVar1 = in_EAX[1];\n            if ((param_1[1] < uVar1) || ((param_1[1] <= uVar1 && (*param_1 <= *in_EAX)))) {\n                uVar2 = param_1[1];\n                if ((param_1[1] != uVar1 && uVar1 <= uVar2) || ((uVar1 <= uVar2 && (*in_EAX <= *param_1))))\n                goto code_r0x00420081;\n                puVar3[2] = param_1;\n                param_1 = param_1[2];\n                puVar3 = puVar3[2];\n            }\n            else {\n                puVar3[2] = in_EAX;\n                puVar3 = in_EAX;\ncode_r0x00420081:\n                in_EAX = in_EAX[2];\n            }\n        } while (in_EAX != NULL);\n        if (in_EAX != NULL) {\n            puVar3[2] = in_EAX;\n            return var_8h;\n        }\n    }\n    puVar3[2] = param_1;\n    return var_8h;\n}\n",
        "token_count": 359
    },
    "004209ec": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004209ec(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    for (iVar1 = *(param_1 + 0x58); iVar1 != 0; iVar1 = *(iVar1 + 0x2c)) {\n        *(iVar1 + 0x10) = 1;\n    }\n    fcn.0041f67a();\n    return;\n}\n",
        "token_count": 92
    },
    "00421582": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00421582(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EDI;\n    \n    *(unaff_EDI + 0x18) = *(unaff_EDI + 0x1c);\n    iVar2 = fcn.004245f1(unaff_EDI);\n    iVar3 = fcn.0041f787();\n    while ((iVar3 != 0 && (iVar2 == 0))) {\n        puVar1 = iVar3 + 0xc;\n        iVar3 = *(iVar3 + 8);\n        iVar2 = fcn.00421520(unaff_EDI, *puVar1);\n    }\n    return iVar2;\n}\n",
        "token_count": 165
    },
    "00424b22": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00424b22(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *(in_EAX + 4);\n    while (iVar1 = *(iVar1 + 8),  iVar1 != 0) {\n        if ((*(iVar1 + 0x58) != '\\0') &&\n           ((param_3 != 0 || ((*(iVar1 + 0x20) == param_1 && (*(iVar1 + 0x24) == param_2)))))) {\n            *(iVar1 + 0x53) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 159
    },
    "004258e9": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.004258e9(uint param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7, \n                 uint param_8, uint param_9, uint param_10, uint param_11, uint param_12, uint param_13, uint param_14, \n                 uint param_15, uint param_16, uint param_17, uint param_18, uint param_19, uint param_20, uint param_21\n                 , uint param_22, uint param_23, uint param_24, uint param_25, uint param_26, uint param_27, \n                 uint param_28, uint param_29, uint param_30, uint param_31, uint param_32, uint param_33, uint param_34\n                 , uint param_35)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    int32_t *piVar3;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    uint noname_5;\n    \n    puVar1 = *(in_EAX + 4);\n    piVar3 = puVar1[2];\n    while (piVar3 != NULL) {\n        iVar2 = *piVar3;\n        piVar3 = piVar3[2];\n        if (iVar2 == in_EAX) {\n            fcn.00425fd6();\n        }\n    }\n    fcn.00425e8f();\n    fcn.00421b5d(*puVar1, unaff_EDI, unaff_ESI, unaff_EBP, unaff_EBX, noname_5, unaff_retaddr, param_1, param_2, param_3\n                 , param_4, param_5, param_6, param_7, param_8, param_9, param_10, param_11, param_12, param_13, \n                 param_14, param_15, param_16, param_17, param_18, param_19, param_20, param_21, param_22, param_23, \n                 param_24, param_25, param_26, param_27, param_28, param_29, param_30, param_31, param_32, param_33, \n                 param_34, param_35);\n    if ((puVar1[0xd] != NULL) && (puVar1[0xc] != 0)) {\n        (*puVar1[0xd])(puVar1[0xc]);\n    }\n    fcn.0041c110(puVar1[0xc]);\n    fcn.0041f8b9();\n    puVar1[0x10] = 0;\n    fcn.0041c110(puVar1);\n    fcn.0041c110();\n    return 0;\n}\n",
        "token_count": 662
    },
    "0042b6cc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0042b6cc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    for (iVar1 = *(in_EAX + 0x88); iVar1 != 0; iVar1 = *(iVar1 + 0x40)) {\n        *(iVar1 + 100) = 1;\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "00431939": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t fcn.00431939(void)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    char *in_EAX;\n    uint32_t uVar3;\n    \n    for (; cVar1 = *in_EAX,  cVar1 == 't'; in_EAX = **(**(in_EAX + 0x10) + 0xc)) {\n    }\n    if ((((cVar1 == -0x66) || (cVar1 == -0x68)) || (cVar1 == -0x7c)) && (*(in_EAX + 0x28) != 0)) {\n        iVar2 = *(in_EAX + 0x1c);\n        if (iVar2 < 0) {\n            return CONCAT31(iVar2 >> 8, 100);\n        }\n        uVar3 = iVar2 * 0x18;\n        return uVar3 & 0xffffff00 | *(*(*(in_EAX + 0x28) + 0xc) + 0x16 + uVar3);\n    }\n    return in_EAX & 0xffffff00 | in_EAX[1];\n}\n",
        "token_count": 248
    },
    "00431b09": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * fcn.00431b09(int32_t *param_1)\n\n{\n    char cVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint *puVar3;\n    char *pcVar4;\n    char *unaff_ESI;\n    \n    if ((*(in_EAX + 2) & 0x100) == 0) {\n        if ((unaff_ESI != NULL) && ((*(unaff_ESI + 2) & 0x100) != 0)) {\n            return *(unaff_ESI + 0x14);\n        }\n        puVar3 = fcn.004319c1();\n        if (puVar3 == NULL) {\n            puVar3 = NULL;\n            pcVar4 = unaff_ESI;\n            if (unaff_ESI != NULL) {\n                do {\n                    puVar3 = *(pcVar4 + 0x14);\n                    if (puVar3 != NULL) goto code_r0x00431a4c;\n                    cVar1 = *pcVar4;\n                    if ((*(pcVar4 + 0x28) != 0) &&\n                       ((((cVar1 == -0x66 || (cVar1 == -0x68)) || (cVar1 == -0x7c)) || (cVar1 == '<')))) {\n                        if (-1 < *(pcVar4 + 0x1c)) {\n                            puVar3 = fcn.0043949d(*(*(*(*param_1 + 8) + 0xc) + 0x49), \n                                                  *(*(*(pcVar4 + 0x28) + 0xc) + 0x10 + *(pcVar4 + 0x1c) * 0x18), 0);\n                            *(unaff_ESI + 0x14) = puVar3;\n                        }\ncode_r0x00431a48:\n                        if (puVar3 == NULL) {\n                            return NULL;\n                        }\ncode_r0x00431a4c:\n                        arg_ch = *puVar3;\n                        iVar2 = fcn.00439385(*(*(*(*param_1 + 8) + 0xc) + 0x49), arg_ch);\n                        if (iVar2 != 0) {\n                            return puVar3;\n                        }\n                        fcn.0041d1e3(0x44b2b8, arg_ch);\n                        param_1[0x10] = param_1[0x10] + 1;\n                        return NULL;\n                    }\n                    if ((cVar1 != '%') && (cVar1 != -99)) goto code_r0x00431a48;\n                    pcVar4 = *(pcVar4 + 8);\n                } while (pcVar4 != NULL);\n            }\n            return puVar3;\n        }\n    }\n    else {\n        puVar3 = *(in_EAX + 0x14);\n    }\n    return puVar3;\n}\n",
        "token_count": 648
    },
    "00431be5": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431be5(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    for (; param_1 != 0; param_1 = *(param_1 + 0x1c)) {\n        if ((*(param_1 + 0xc) != 0) && (iVar1 = *(*(param_1 + 0xc) + 0x2c),  *in_EAX < iVar1)) {\n            *in_EAX = iVar1;\n        }\n        if ((*(param_1 + 0x14) != 0) && (iVar1 = *(*(param_1 + 0x14) + 0x2c),  *in_EAX < iVar1)) {\n            *in_EAX = iVar1;\n        }\n        if ((*(param_1 + 0x28) != 0) && (iVar1 = *(*(param_1 + 0x28) + 0x2c),  *in_EAX < iVar1)) {\n            *in_EAX = iVar1;\n        }\n        if ((*(param_1 + 0x2c) != 0) && (iVar1 = *(*(param_1 + 0x2c) + 0x2c),  *in_EAX < iVar1)) {\n            *in_EAX = iVar1;\n        }\n        fcn.00431bbb();\n        fcn.00431bbb();\n        fcn.00431bbb();\n    }\n    return;\n}\n",
        "token_count": 336
    },
    "004328bb": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004328bb(char *arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    \n    pcVar2 = arg_8h;\n    if ((*(arg_8h + 2) & 0x400) != 0) {\n        *arg_ch = *(arg_8h + 4);\n        return 1;\n    }\n    cVar1 = *arg_8h;\n    if (cVar1 == -0x7f) {\n        iVar3 = fcn.0041d442(arg_ch);\n    }\n    else {\n        if (cVar1 == -100) {\n            iVar3 = fcn.004328bb(*(arg_8h + 8), &arg_8h);\n            if (iVar3 == 0) {\n                return 0;\n            }\n            *arg_ch = -arg_8h;\n            iVar3 = 1;\n            goto code_r0x0043292d;\n        }\n        if (cVar1 != -99) {\n            return 0;\n        }\n        iVar3 = fcn.004328bb(*(arg_8h + 8), arg_ch);\n    }\n    if (iVar3 == 0) {\n        return 0;\n    }\ncode_r0x0043292d:\n    *(pcVar2 + 2) = *(pcVar2 + 2) | 0x400;\n    *pcVar2 = -0x7f;\n    *(pcVar2 + 4) = *arg_ch;\n    return iVar3;\n}\n",
        "token_count": 354
    },
    "00432944": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00432944(uint param_1, char param_2)\n\n{\n    char *in_EAX;\n    char cVar1;\n    bool bVar2;\n    \n    if (param_2 == 'b') {\n        return true;\n    }\n    for (; (*in_EAX == -99 || (*in_EAX == -100)); in_EAX = *(in_EAX + 8)) {\n    }\n    cVar1 = *in_EAX;\n    if (cVar1 == -0x7c) {\n        cVar1 = in_EAX[0x23];\n    }\n    if (cVar1 == '^') {\n        return param_2 == 'a';\n    }\n    if (cVar1 != -0x7f) {\n        if (cVar1 == -0x7e) {\n            bVar2 = param_2 == 'e';\n            goto code_r0x00432989;\n        }\n        if (cVar1 == -0x7d) {\n            return true;\n        }\n        if (cVar1 != -0x68) {\n            return false;\n        }\n        if (-1 < *(in_EAX + 0x1c)) {\n            return false;\n        }\n    }\n    bVar2 = param_2 == 'd';\ncode_r0x00432989:\n    if ((!bVar2) && (param_2 != 'c')) {\n        return false;\n    }\n    return true;\n}\n",
        "token_count": 316
    },
    "0043631c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0043631c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_2 != 0) {\n        do {\n            iVar1 = fcn.004363d2(param_1);\n            if ((((iVar1 != 0) || (iVar1 = fcn.00436282(param_1, *(param_2 + 8)),  iVar1 != 0)) ||\n                (iVar1 = fcn.00436377(param_1, *(param_2 + 0xc)),  iVar1 != 0)) ||\n               (iVar1 = fcn.00436377(param_1, *(param_2 + 0x14)),  iVar1 != 0)) {\n                return 1;\n            }\n            param_2 = *(param_2 + 0x1c);\n        } while (param_2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 206
    },
    "00436377": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00436377(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    while( true ) {\n        if ((param_2 == 0) || ((*(param_2 + 2) & 0x2000) != 0)) {\n            return 0;\n        }\n        if ((*(param_2 + 2) & 0x800) == 0) {\n            iVar1 = fcn.004363d2(param_1);\n        }\n        else {\n            iVar1 = fcn.0043631c(param_1, *(param_2 + 0x10));\n        }\n        if ((iVar1 != 0) || (iVar1 = fcn.00436377(param_1, *(param_2 + 0xc)),  iVar1 != 0)) break;\n        param_2 = *(param_2 + 8);\n    }\n    return 1;\n}\n",
        "token_count": 206
    },
    "00436408": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00436408(uint param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    while( true ) {\n        if (in_EAX == 0) {\n            return 0;\n        }\n        iVar1 = fcn.0043631c(param_1, *(in_EAX + 8));\n        if (((iVar1 != 0) || (iVar1 = fcn.00436377(param_1, *(in_EAX + 0x14)),  iVar1 != 0)) ||\n           (iVar1 = fcn.004363d2(param_1),  iVar1 != 0)) break;\n        in_EAX = *(in_EAX + 0x20);\n    }\n    return 1;\n}\n",
        "token_count": 167
    },
    "004371ee": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004371ee(uint *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_4h;\n    \n    iVar1 = arg_8h[0x7e];\n    if (iVar1 != 0) {\n        uVar2 = *arg_8h;\n        iVar5 = *(iVar1 + 8) + -1;\n        iVar3 = fcn.00436ac6();\n        if (iVar3 != 0) {\n            iVar4 = fcn.00437264(iVar3);\n            if (iVar4 == 0) {\n                fcn.0041c16b(uVar2, iVar3);\n            }\n            else {\n                iVar4 = iVar5 * 0x18;\n                *(*(iVar1 + 0xc) + 0x10 + iVar4) = iVar3;\n                for (iVar3 = *(iVar1 + 0x10); iVar3 != 0; iVar3 = *(iVar3 + 0x20)) {\n                    if (**(iVar3 + 8) == iVar5) {\n                        **(iVar3 + 0x2c) = *(*(iVar1 + 0xc) + 0x10 + iVar4);\n                    }\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 310
    },
    "00437316": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00437316(int32_t param_1, int32_t *param_2)\n\n{\n    uint8_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    \n    iVar2 = *param_2;\n    iVar4 = 0;\n    uVar3 = *in_EAX;\n    while ((uVar3 != 0 && (((*(uVar3 + 0x443e90) & 6) != 0 || (uVar3 == 0x5f))))) {\n        iVar4 = iVar4 + 1;\n        uVar3 = in_EAX[iVar4];\n    }\n    if (((*(*in_EAX + 0x443e90) & 4) == 0) && (iVar1 = fcn.0044933d(),  iVar1 == 0x1a)) {\n        uVar3 = in_EAX[iVar4];\n        if (uVar3 == 0) goto code_r0x0043738b;\n    }\n    else {\n        uVar3 = 1;\n    }\n    *(iVar2 + param_1) = 0x22;\n    iVar2 = iVar2 + 1;\ncode_r0x0043738b:\n    for (; *in_EAX != 0; in_EAX = in_EAX + 1) {\n        *(iVar2 + param_1) = *in_EAX;\n        iVar4 = iVar2 + 1;\n        if (*in_EAX == 0x22) {\n            *(iVar4 + param_1) = 0x22;\n            iVar4 = iVar2 + 2;\n        }\n        iVar2 = iVar4;\n    }\n    if (uVar3 != 0) {\n        *(iVar2 + param_1) = 0x22;\n        iVar2 = iVar2 + 1;\n    }\n    *(iVar2 + param_1) = 0;\n    *param_2 = iVar2;\n    return;\n}\n",
        "token_count": 445
    },
    "00437bbb": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00437bbb(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t unaff_EDI;\n    uint var_4h;\n    \n    uVar1 = fcn.0043e8c8();\n    fcn.00437b80(*(unaff_EDI + 0x14), uVar1);\n    for (iVar2 = *(unaff_EDI + 0x10); iVar2 != 0; iVar2 = *(iVar2 + 0x20)) {\n        fcn.00437b80(*(iVar2 + 0x14), uVar1);\n    }\n    return;\n}\n",
        "token_count": 142
    },
    "00439528": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00439528(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t unaff_EBX;\n    int32_t iVar3;\n    \n    iVar3 = *(param_1 + in_EAX * 4);\n    while( true ) {\n        if (iVar3 == 0) {\n            return 0;\n        }\n        iVar1 = *(iVar3 + 0x18);\n        iVar2 = fcn.0041d2b9();\n        if ((iVar2 == 0) && (*(iVar1 + unaff_EBX) == '\\0')) break;\n        iVar3 = *(iVar3 + 0x1c);\n    }\n    return iVar3;\n}\n",
        "token_count": 172
    },
    "0043eee4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0043eee4(int32_t param_1, uint param_2)\n\n{\n    if (param_1 != 0) {\n        do {\n            *(param_1 + 2) = *(param_1 + 2) | 1;\n            *(param_1 + 0x20) = param_2;\n            fcn.0043eee4(*(param_1 + 8), param_2);\n            param_1 = *(param_1 + 0xc);\n        } while (param_1 != 0);\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "004423f4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t fcn.004423f4(uint32_t param_1, uint param_2, uint32_t *param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    uVar4 = 0;\n    uVar2 = fcn.00441b4b();\n    for (uVar1 = uVar2; uVar1 != 0; uVar1 = *(uVar1 + 0x20)) {\n        if ((*(uVar1 + 8) == param_1) && (iVar3 = fcn.004423b6(*(uVar1 + 0x10)),  iVar3 != 0)) {\n            uVar4 = uVar4 | *(uVar1 + 9);\n        }\n    }\n    if (param_3 != NULL) {\n        *param_3 = uVar4;\n    }\n    return -(uVar4 != 0) & uVar2;\n}\n",
        "token_count": 224
    },
    "0044394b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0044394b(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    for (piVar1 = *(in_EAX + 0x30); (piVar1 != NULL && (*piVar1 != param_1)); piVar1 = piVar1[4]) {\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "004439bd": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004439bd(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *(in_EAX + 0x128);\n    *(in_EAX + 0x128) = 0;\n    if (iVar1 != 0) {\n        fcn.0042b6cc();\n        do {\n            iVar1 = *(iVar1 + 0x10);\n            fcn.00443960();\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 116
    },
    "0044408e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0044408e(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t unaff_EDI;\n    \n    iVar2 = 0;\n    if (*(unaff_EDI + 0x120) != 0) {\n        if (0 < *(unaff_EDI + 0x124)) {\n            do {\n                piVar1 = *(*(*(unaff_EDI + 0x120) + iVar2 * 4) + 8);\n                if ((piVar1 != NULL) && (*(param_1 + *piVar1) != NULL)) {\n                    (**(param_1 + *piVar1))(piVar1);\n                }\n                fcn.00443960();\n                iVar2 = iVar2 + 1;\n            } while (iVar2 < *(unaff_EDI + 0x124));\n        }\n        fcn.0041c16b();\n        *(unaff_EDI + 0x124) = 0;\n        *(unaff_EDI + 0x120) = 0;\n    }\n    return;\n}\n",
        "token_count": 244
    },
    "00449efd": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nbool fcn.00449efd(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    \n    for (; (0 < in_EAX && (*(param_1 + -1 + in_EAX) == ' ')); in_EAX = in_EAX + -1) {\n    }\n    return in_EAX == 0;\n}\n",
        "token_count": 75
    },
    "00449fa1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00449fa1(void)\n\n{\n    int32_t unaff_ESI;\n    \n    while (*(unaff_ESI + 0x1c8) != 0) {\n        *(unaff_ESI + 0x1c8) = *(*(unaff_ESI + 0x1c8) + 0x10);\n        fcn.0041c16b();\n    }\n    *(unaff_ESI + 0x1cc) = 0;\n    *(unaff_ESI + 0x1d0) = 0;\n    *(unaff_ESI + 0x1d4) = 0;\n    return;\n}\n",
        "token_count": 146
    },
    "00460b8a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00460b8a(uint32_t param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint var_8h;\n    uint32_t uStack8;\n    \n    var_8h = *0x412478;\n    uVar1 = 0;\n    uStack8 = param_1 & 0xffffff00 | *0x41247c;\n    if (0 < param_2) {\n        do {\n            uVar2 = uVar1 & 0x80000003;\n            if (uVar2 < 0) {\n                uVar2 = (uVar2 - 1 | 0xfffffffc) + 1;\n            }\n            *(uVar1 + param_1) = *(&var_8h + uVar2) ^ *(uVar1 + param_1) ^ 0x30;\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < param_2);\n    }\n    *(param_1 + param_2) = 0;\n    return;\n}\n",
        "token_count": 246
    },
    "0046222a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0046222a(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t unaff_ESI;\n    \n    iVar1 = fcn.004703b6();\n    iVar3 = 0;\n    if (0 < iVar1) {\n        do {\n            cVar2 = *(iVar3 + unaff_ESI);\n            if ('\\0' < cVar2) {\n                cVar2 = cVar2 + -1;\n            }\n            *(iVar3 + unaff_ESI) = cVar2;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < iVar1);\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "00464fe4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00464fe4(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    \n    fcn.00464fd2();\n    iVar1 = fcn.004703b6();\n    do {\n        iVar1 = iVar1 + -1;\n        if (iVar1 < 0) {\n            return;\n        }\n    } while (*(iVar1 + unaff_ESI) != '\\\\');\n    *(iVar1 + unaff_ESI) = 0;\n    return;\n}\n",
        "token_count": 111
    },
    "00465058": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * __fastcall fcn.00465058(char *param_1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    for (pcVar2 = param_1; cVar1 = *pcVar2,  cVar1 != '\\0'; pcVar2 = pcVar2 + 1) {\n        if ((cVar1 == '\\\\') || (cVar1 == '/')) {\n            param_1 = pcVar2 + 1;\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 113
    },
    "0046564e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0046564e(uint32_t *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBX;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = fcn.004703b6();\n    if (iVar3 == 0) {\n        return 0;\n    }\n    uVar1 = *arg_8h;\n    iVar4 = 0;\n    uVar5 = 0;\n    if (0 < iVar3) {\n        do {\n            var_4h._0_1_ = *(iVar4 + unaff_EBX);\n            if (var_4h == ' ') {\n                iVar4 = iVar4 + 1;\n            }\n            else {\n                var_4h._1_1_ = *(iVar4 + 1 + unaff_EBX);\n                var_4h._2_1_ = 0;\n                if (uVar1 <= uVar5) break;\n                uVar2 = fcn.00465384(&var_4h);\n                *(uVar5 + arg_ch) = uVar2;\n                uVar5 = uVar5 + 1;\n                iVar4 = iVar4 + 2;\n            }\n        } while (iVar4 < iVar3);\n        if (uVar5 != 0) {\n            *arg_8h = uVar5;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 367
    },
    "00465c6d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00465c6d(uint param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t unaff_ESI;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (0 < *(unaff_ESI + 0x30)) {\n        do {\n            uVar1 = fcn.00465c5d();\n            iVar2 = fcn.00470424(param_1, uVar1);\n            if (iVar2 == 0) {\n                return iVar3;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < *(unaff_ESI + 0x30));\n    }\n    return -1;\n}\n",
        "token_count": 160
    },
    "00467a50": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00467a50(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = 0;\n    if ((*(in_EAX + 0x1b8) == 0) || (arg_8h != 0)) {\n        arg_8h = (*_fcn.00412210)(*(in_EAX + 0x184), 0x1032, 0, 0);\n    }\n    else {\n        uVar1 = *(in_EAX + 0x184);\n        arg_8h = 0;\n        iVar2 = fcn.00463b2a(uVar1);\n        if (0 < iVar2) {\n            do {\n                iVar3 = fcn.00463b3e(uVar1, iVar4);\n                if (iVar3 != 0) {\n                    arg_8h = arg_8h + 1;\n                }\n                iVar4 = iVar4 + 1;\n            } while (iVar4 < iVar2);\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 265
    },
    "00467ab0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00467ab0(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    uVar1 = *(in_EAX + 0x184);\n    iVar3 = fcn.0046386d(uVar1);\n    pcVar2 = _fcn.00412210;\n    iVar5 = 0;\n    if (0 < iVar3) {\n        do {\n            iVar4 = (*pcVar2)(uVar1, 0x101d, iVar5, 0);\n            if (0 < iVar4) {\n                (*pcVar2)(uVar1, 0x101e, iVar5, 0xffff);\n            }\n            iVar5 = iVar5 + 1;\n        } while (iVar5 < iVar3);\n    }\n    return;\n}\n",
        "token_count": 201
    },
    "00467e8a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00467e8a(void)\n\n{\n    char cVar1;\n    char *pcVar2;\n    char *unaff_ESI;\n    \n    fcn.004703fa();\n    cVar1 = *unaff_ESI;\n    pcVar2 = unaff_ESI;\n    while (cVar1 != '\\0') {\n        if (*pcVar2 == ' ') {\n            *pcVar2 = '_';\n        }\n        pcVar2 = pcVar2 + 1;\n        cVar1 = *pcVar2;\n    }\n    cVar1 = *unaff_ESI;\n    pcVar2 = unaff_ESI;\n    while (cVar1 != '\\0') {\n        if (*pcVar2 == '\\\\') {\n            *pcVar2 = '_';\n        }\n        pcVar2 = pcVar2 + 1;\n        cVar1 = *pcVar2;\n    }\n    cVar1 = *unaff_ESI;\n    while (cVar1 != '\\0') {\n        if (*unaff_ESI == '/') {\n            *unaff_ESI = '_';\n        }\n        unaff_ESI = unaff_ESI + 1;\n        cVar1 = *unaff_ESI;\n    }\n    fcn.004704a2();\n    return;\n}\n",
        "token_count": 278
    },
    "0046c44d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0046c44d(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t unaff_EBX;\n    uint uVar3;\n    uint var_244h;\n    uint var_38h;\n    uint var_34h;\n    code *var_30h;\n    code *var_2ch;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    uVar3 = 0;\n    fcn.00463549();\n    iVar1 = fcn.004634b9();\n    if (((iVar1 != 0) && (iVar1 = fcn.00463612(),  iVar1 != 0)) &&\n       (iVar1 = (*var_30h)(0x4137e4, 4, 0, &var_4h),  iVar1 != 0)) {\n        if ((*(var_4h + 0x30) != 0) && (*(var_4h + 0x18) != 0)) {\n            var_1ch = *(var_4h + 0x18);\n            var_18h = *(var_4h + 0x1c);\n            uVar2 = 0;\n            do {\n                *(uVar2 + 0x417768) = *(uVar2 + 0x416b30) << 2;\n                uVar2 = uVar2 + 2;\n            } while (uVar2 < 0x4a);\n            var_14h = 0x4a;\n            var_10h = 0x417768;\n            iVar1 = fcn.00463683(&var_1ch, &var_14h, &var_ch);\n            if (iVar1 != 0) {\n                iVar1 = (**0x4120d4)(0, 0, var_8h, var_ch, unaff_EBX + 0x100, 0xff, 0, 0);\n                if ((0 < iVar1) && (uVar2 = fcn.004703b6(*(var_4h + 0x30)),  uVar2 < 0xff)) {\n                    fcn.004703fa();\n                    uVar3 = 1;\n                }\n                (*_fcn.004120dc)(var_8h);\n            }\n        }\n        (*var_2ch)(var_4h);\n    }\n    fcn.00463534();\n    fcn.00463663();\n    return uVar3;\n}\n",
        "token_count": 581
    },
    "0046fab5": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0046fab5(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint in_ECX;\n    uint var_a24h;\n    uint var_a20h;\n    uint var_8dch;\n    uint var_79ch;\n    uint var_658h;\n    uint var_514h;\n    uint var_510h;\n    uint var_28ch;\n    uint var_148h;\n    \n    var_658h._0_1_ = 0;\n    var_79ch._0_1_ = 0;\n    fcn.00465cda(0x41445c, arg_8h);\n    while( true ) {\n        iVar1 = fcn.00465d35();\n        if (iVar1 == 0) break;\n        if ((var_8dch & 0x10) == 0) {\n            fcn.0046fa39(in_ECX, &var_79ch);\n        }\n    }\n    var_514h = 0xffffffff;\n    var_510h._0_1_ = 0;\n    var_148h._0_1_ = 0;\n    var_28ch._0_1_ = 0;\n    fcn.00465cda(0x413744, arg_8h);\n    while( true ) {\n        iVar1 = fcn.00465d35();\n        if (iVar1 == 0) break;\n        iVar1 = fcn.00465c9f();\n        if (iVar1 != 0) {\n            fcn.0046fab5(&var_28ch);\n        }\n    }\n    fcn.00465dcd();\n    fcn.00465dcd();\n    return;\n}\n",
        "token_count": 387
    },
    "00417d31": {
        "rules": [
            "hash data with MD5"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00417d31(uint arg_8h, uint arg_ch)\n\n{\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    \n    fcn.00417529(arg_8h);\n    fcn.004175c7(arg_ch);\n    return 0;\n}\n",
        "token_count": 94
    }
}