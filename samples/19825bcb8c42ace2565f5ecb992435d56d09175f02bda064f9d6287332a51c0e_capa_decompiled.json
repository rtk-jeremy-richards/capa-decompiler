{
    "004012a0": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004013d0) overlaps instruction at (ram,0x004013cf)\n// \n// WARNING: Removing unreachable block (ram,0x004013d0)\n\nuint __cdecl fcn.004012a0(int16_t *arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int16_t *piVar5;\n    int16_t *piVar6;\n    int16_t *piVar7;\n    uint *puVar8;\n    int16_t **unaff_EDI;\n    uint *puVar9;\n    ushort in_SS;\n    bool bVar10;\n    uint8_t in_IF;\n    bool bVar11;\n    uint var_4h;\n    \n    bVar11 = false;\n    if (*arg_8h != 0x5a4d) {\n        return 0;\n    }\n    do {\n        puVar1 = *(arg_8h + 0x1e) + arg_8h;\n        bVar10 = (POPCOUNT(*puVar1 - 0x4550 & 0xff) & 1U) == 0;\n        if (*puVar1 - 0x4550 != 0) {\n            return 0;\n        }\n        if ((bVar10) || (!bVar10)) goto code_r0x00401360;\n        puVar2 = segment(in_SS, *0x10 + -0x14);\n        piVar7 = arg_8h;\n        if (*puVar1 < 0x4550) goto code_r0x00401381;\n    } while (bVar10);\n    puVar1 = *puVar2;\ncode_r0x00401360:\n    bVar10 = puVar1[0x16] == 0;\n    if (!bVar10) {\n        return 0;\n    }\n    piVar7 = 0x40;\n    if ((!bVar10) && (bVar10)) {\n        bVar11 = ((in_IF & 1) * 0x200 >> 8 & 4) != 0;\n    }\ncode_r0x00401381:\n    uVar4 = *(arg_8h + 0x1e);\n    if (*(arg_8h + 0x1e) < 0x81) {\n        return 0;\n    }\n    if ((0x7f < uVar4) && (uVar4 < 0x80)) {\n        out(0xc4, arg_8h);\n        bVar11 = false;\n        *unaff_EDI = arg_8h;\n    }\n    if (*(arg_8h + 0x1e) < 0xc0) {\n        piVar7 = *(arg_8h + 0x1e) - 0x80;\n    }\n    puVar2 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(piVar7);\n    if (puVar2 == NULL) {\n        return 0;\n    }\n    piVar5 = NULL;\n    if (piVar7 != NULL) {\n        do {\n            iVar3 = (*_sym.imp.MSVCRT.dll_rand)();\n            piVar6 = piVar5 + 1;\n            *(piVar5 + puVar2) = iVar3 % 0xff;\n            piVar5 = piVar6;\n        } while (piVar6 < piVar7);\n    }\n    puVar8 = puVar2;\n    puVar9 = arg_8h + 0x40;\n    for (uVar4 = piVar7 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar9 = *puVar8;\n        puVar8 = puVar8 + bVar11 * -2 + 1;\n        puVar9 = puVar9 + bVar11 * -2 + 1;\n    }\n    for (uVar4 = piVar7 & 3; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar9 = *puVar8;\n        puVar8 = puVar8 + bVar11 * -2 + 1;\n        puVar9 = puVar9 + bVar11 * -2 + 1;\n    }\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__(puVar2);\n    return 1;\n}\n",
        "token_count": 979
    },
    "004024b0": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004025ce) overlaps instruction at (ram,0x004025cd)\n// \n// WARNING: Control flow encountered bad instruction data\n\nint32_t __thiscall fcn.004024b0(uint8_t param_1, uint *param_2, uint32_t param_3)\n\n{\n    uint8_t *puVar1;\n    uint *puVar2;\n    uint8_t uVar3;\n    uint16_t uVar4;\n    uint32_t in_EAX;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    uint16_t uVar8;\n    int32_t iVar9;\n    int32_t unaff_EBX;\n    uchar *puVar10;\n    uint *unaff_ESI;\n    bool in_ZF;\n    char in_SF;\n    bool bVar11;\n    char in_OF;\n    \n    puVar10 = &stack0xfffffffc;\n    if ((in_ZF || in_OF != in_SF) || (puVar10 = &stack0xfffffffc,  !in_ZF && in_OF == in_SF)) {\ncode_r0x004024ce:\n        uVar5 = fcn.00403940(0, param_2, param_3 + 1 >> 1);\n        uVar5 = uVar5 & 0xffff;\n        unaff_ESI = param_2;\n    }\n    else {\n        unaff_EBX = unaff_EBX + 1;\n        *(in_EAX + 0x8b39da56) = *(in_EAX + 0x8b39da56) ^ param_1;\n        puVar10 = &stack0xfffffffd;\n        uVar3 = in_EAX | 0x8b;\n        param_3 = in_EAX | 0x8b;\n        param_2 = unaff_ESI;\n        if (uVar3 == 0) goto code_r0x004024ce;\n        uVar5 = in_EAX & 0xffffff00 | uVar3;\n        *0xffff = *0xffff + ((in_EAX & 0xffffff00) >> 8);\n    }\n    *(puVar10 + 8) = uVar5;\n    while( true ) {\n        iVar6 = (*_sym.imp.dbghelp.dll_ImageNtHeader)(unaff_ESI);\n        puVar2 = *(iVar6 + 0x58);\n        iVar9 = *(puVar10 + 8);\n        uVar4 = iVar9;\n        uVar8 = puVar2;\n        if (uVar8 <= uVar4) break;\n        if ((uVar4 <= uVar8) || (uVar8 < uVar4)) {\n            iVar9 = (iVar9 - puVar2 & 0xffffU) - 1;\n            *(puVar10 + 8) = iVar9;\n            goto code_r0x00402577;\n        }\n        if (iVar6 != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n    }\n    iVar9 = iVar9 - (puVar2 & 0xffff);\ncode_r0x00402577:\n    uVar5 = puVar2 >> 0x10;\n    uVar4 = puVar2 >> 0x10;\n    uVar8 = iVar9;\n    bVar11 = uVar8 - uVar4 < 0;\n    if (uVar8 < uVar4) {\n        if ((bVar11) || (!bVar11)) {\n            uVar5 = iVar9 - uVar5 & 0xffff;\n            bVar11 = SBORROW4(uVar5, 1);\n            iVar9 = uVar5 - 1;\n            *(puVar10 + 8) = iVar9;\n            goto code_r0x004025c0;\n        }\n        piVar7 = uVar5 + 0x81d02b2f + (uVar8 < uVar4);\n        iVar6 = iVar6 + -1;\n        if (iVar6 != 0) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        *piVar7 = *piVar7 + 1;\n        *(iVar9 + -0x77) = *(iVar9 + -0x77);\n        bVar11 = false;\n        *(piVar7 + 3) = *(piVar7 + 3) | iVar9 >> 8;\ncode_r0x004025c2:\n        if (bVar11) goto code_r0x004025cb;\n    }\n    else {\n        bVar11 = SBORROW4(iVar9, uVar5);\n        iVar9 = iVar9 - uVar5;\ncode_r0x004025c0:\n        if (!bVar11) goto code_r0x004025c2;\n    }\n    **(puVar10 + 0x14) = iVar9 + *(puVar10 + 0xc);\ncode_r0x004025cb:\n    *puVar2 = *unaff_ESI;\n    puVar1 = unaff_EBX + 0x10891445;\n    *puVar1 = *puVar1 >> 1 | *puVar1 << 7;\n    **(puVar10 + 0x10) = *(iVar6 + 0x58);\n    return iVar6;\n}\n",
        "token_count": 1178
    },
    "00402920": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00402920(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    uint hKey;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(arg_8h, arg_ch, 0, 0xf003f, &hKey);\n    if (iVar1 != 0) {\n        return false;\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, arg_10h, 0, arg_14h, arg_18h, arg_1ch);\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n    return iVar1 == 0;\n}\n",
        "token_count": 185
    },
    "004021a0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint fcn.004021a0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char **ppcVar6;\n    uint *puVar7;\n    char *pcVar8;\n    char *pcVar9;\n    char *pcVar10;\n    uint *puVar11;\n    uint uStack2112;\n    uint uStack2088;\n    char cStack2084;\n    uint uStack2083;\n    ushort uStack2079;\n    uchar uStack2077;\n    uchar uStack2064;\n    uint uStack2063;\n    uchar auStack1824 [12];\n    uchar auStack1812 [8];\n    uchar uStack1804;\n    uint uStack1803;\n    uchar auStack1564 [260];\n    char acStack1304 [20];\n    uchar auStack1284 [239];\n    char acStack1045 [21];\n    uchar uStack1024;\n    uint uStack1023;\n    \n    uStack2088 = 0;\n    cStack2084 = '\\0';\n    uStack2083 = 0;\n    uStack2079 = 0;\n    uStack2077 = 0;\n    uStack2064 = 0;\n    puVar7 = &uStack2063;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1804 = 0;\n    puVar7 = &uStack1803;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1024 = 0;\n    puVar7 = &uStack1023;\n    for (iVar2 = 0xff; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    uStack2112 = 0x104;\n    *(puVar7 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(auStack1284);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, auStack1812, 0x104);\n    fcn.00402e30(&uStack2112, 6);\n    (*_sym.imp.MSVCRT.dll_sprintf)(auStack1564, 0x41094c, acStack1304, &uStack2112);\n    uStack2088 = 0x410a04;\n    ppcVar6 = &stack0xfffff7d0;\n    iVar2 = 3;\n    do {\n        uVar3 = 0xffffffff;\n        pcVar9 = &cStack2084;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar9 + 1;\n        } while (cVar1 != '\\0');\n        pcVar9 = *ppcVar6;\n        ppcVar6 = ppcVar6 + 1;\n        *(&uStack2088 + ~uVar3 + 3) = 10;\n        uVar3 = 0xffffffff;\n        do {\n            pcVar8 = pcVar9;\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            pcVar8 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar8;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar3;\n        iVar4 = -1;\n        pcVar9 = &cStack2084;\n        do {\n            pcVar10 = pcVar9;\n            if (iVar4 == 0) break;\n            iVar4 = iVar4 + -1;\n            pcVar10 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar10;\n        } while (cVar1 != '\\0');\n        puVar7 = pcVar8 + -uVar3;\n        puVar11 = pcVar10 + -1;\n        for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        iVar2 = iVar2 + -1;\n        for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n    } while (iVar2 != 0);\n    (*_sym.imp.MSVCRT.dll_sprintf)(acStack1045 + 1, &cStack2084, auStack1824, auStack1824, acStack1304[0]);\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    acStack1045[~uVar3] = '\\n';\n    uVar3 = 0xffffffff;\n    pcVar9 = 0x410a1c;\n    do {\n        pcVar8 = pcVar9;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar8 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar8;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar9 = acStack1045 + 1;\n    do {\n        pcVar10 = pcVar9;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar10 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar10;\n    } while (cVar1 != '\\0');\n    puVar7 = pcVar8 + -uVar3;\n    puVar11 = pcVar10 + -1;\n    for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    iVar2 = fcn.00403c90(auStack1564, 0x410948, acStack1045 + 1, ~uVar3 - 1);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_WinExec)(auStack1564, 0);\n    return 1;\n}\n",
        "token_count": 1849
    },
    "00402ea0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402fe7) overlaps instruction at (ram,0x00402fe6)\n// \n// WARNING: Removing unreachable block (ram,0x00402f91)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00402ea0(uint arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    char *pcVar7;\n    char *pcVar8;\n    uint *puVar9;\n    char lpBuffer;\n    uint var_22fh;\n    uchar var_12ch;\n    uint var_12bh;\n    uint var_28h;\n    uint lpCreationTime;\n    uint var_1ch;\n    uint var_14h;\n    int32_t var_4h;\n    \n    var_4h = arg_ch;\n    lpBuffer = '\\0';\n    puVar5 = &var_22fh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_12ch = '\\0';\n    puVar5 = &var_12bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    uVar3 = 0xffffffff;\n    pcVar7 = &lpBuffer;\n    do {\n        pcVar6 = pcVar7;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar6 = pcVar7 + 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar6;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    puVar5 = pcVar6 + -uVar3;\n    puVar9 = &var_12ch;\n    for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    uVar3 = 0xffffffff;\n    pcVar7 = 0x410550;\n    do {\n        pcVar6 = pcVar7;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar6 = pcVar7 + 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar6;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar7 = &var_12ch;\n    do {\n        pcVar8 = pcVar7;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar8 = pcVar7 + 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar8;\n    } while (cVar1 != '\\0');\n    puVar5 = pcVar6 + -uVar3;\n    puVar9 = pcVar8 + -1;\n    for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_GetFileAttributesExA)();\n    if ((arg_ch == -1) && (iVar2 = fcn.00402090(arg_8h),  iVar2 == -1)) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_SetFileTime)();\n    if (arg_ch == -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)();\n    }\n    return 1;\n}\n",
        "token_count": 1153
    },
    "004014b0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00401a0e) overlaps instruction at (ram,0x00401a0d)\n// \n\nvoid fcn.004014b0(void)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    uint16_t uVar5;\n    ushort extraout_CX;\n    uint16_t extraout_CX_00;\n    uint8_t extraout_CH;\n    uint extraout_ECX;\n    int32_t extraout_ECX_00;\n    uint8_t uVar6;\n    int32_t extraout_ECX_01;\n    int32_t extraout_ECX_02;\n    uint8_t extraout_DH;\n    int32_t extraout_EDX;\n    uint8_t extraout_DH_00;\n    int32_t extraout_EDX_00;\n    int32_t extraout_EDX_01;\n    int32_t extraout_EDX_02;\n    int32_t unaff_EBX;\n    uint *unaff_EBP;\n    uint unaff_ESI;\n    uint *unaff_EDI;\n    uint16_t in_ES;\n    bool bVar7;\n    uint8_t in_AF;\n    bool bVar8;\n    uchar uVar9;\n    char cVar10;\n    char cVar11;\n    char cVar12;\n    bool bVar13;\n    char cVar14;\n    ulong uVar15;\n    uint *puVar16;\n    uint32_t in_stack_ffffffbc;\n    uint32_t in_stack_ffffffc0;\n    uint in_stack_ffffffc4;\n    uint in_stack_ffffffc8;\n    uint uVar17;\n    uint uVar18;\n    uint uVar19;\n    \n    fcn.004041c0(0x410a24, 0xe, 0x41052c, 10);\n    fcn.004041c0(0x410a24, 0xe, 0x410538, 0x12);\n    fcn.004041c0(0x410a24, 0xe, 0x41054c, 4);\n    fcn.004041c0(0x410a24, 0xe, 0x410550, 0xc);\n    bVar7 = (POPCOUNT(extraout_DH & 0x12) & 1U) == 0;\n    puVar16 = unaff_EBP;\n    fcn.004041c0(0x410a24, 0xe, 0x41055c, 7);\n    if ((bVar7) || (uVar17 = extraout_ECX,  !bVar7)) {\n        uVar17 = 0xb;\n        puVar16 = 0x410564;\n        unaff_ESI = 0xe;\n    }\n    *(extraout_EDX + 0xb) = *(extraout_EDX + 0xb) + -0x68;\n    fcn.004041c0(0x410a24, unaff_ESI, puVar16, uVar17);\n    fcn.004041c0(0x410a24, 0xe, 0x410570, 0xc);\n    uVar18 = 0x41057c;\n    uVar17 = 0xe;\n    fcn.004041c0(0x410a24, 0xe, 0x41057c, 8);\n    fcn.004041c0(0x410a24, 0xe, 0x410584, 0xd);\n    fcn.004041c0(0x410a24, 0xe, 0x410594, 0x18);\n    bVar7 = (unaff_EBX + 1U ^ 0x50) < '\\0';\n    uVar19 = 0x401687;\n    fcn.004041c0(0x410a24, 0xe, 0x4105ac, 0x25);\n    if ((bVar7) || (!bVar7)) {\n        uVar19 = 10;\n        uVar18 = 0x4105d4;\n        uVar17 = 0xe;\n    }\n    fcn.004041c0(0x410a24, uVar17, uVar18, uVar19);\n    fcn.004041c0(0x410a24, 0xe, 0x4105e0, 0xc);\n    bVar7 = extraout_DH_00 < 0x36;\n    bVar8 = extraout_DH_00 == 0x36;\n    pcVar3 = fcn.004041c0(0x410a24, 0xe, 0x4105ec, 0xd);\n    if ((!bVar8) && (bVar8)) {\n        unaff_EBX = unaff_EBX + 1;\n        uVar6 = pcVar3;\n        if (bVar7 || unaff_EBX == 0) {\n            *pcVar3 = *pcVar3 + uVar6;\n        }\n        else {\n            in_AF = 9 < (uVar6 & 0xf) | in_AF;\n            piVar1 = (pcVar3 & 0xffff0000 | CONCAT11((pcVar3 >> 8) + in_AF, uVar6 + in_AF * '\\x06') & 0xff0f) + 0x2a;\n            *piVar1 = *piVar1 - unaff_EBX;\n        }\n    }\n    fcn.004041c0(0x410a24, 0xe, 0x4105fc, 6);\n    fcn.004041c0(0x410a24, 0xe, 0x410604, 5);\n    fcn.004041c0(0x410a24, 0xe, 0x41060c, 0xd);\n    fcn.004041c0(0x410a24, 0xe, 0x41061c, 0x19);\n    bVar7 = false;\n    fcn.004041c0(0x410a24, 0xe, 0x410638, 0xf);\n    if ((!bVar7) && (bVar7)) {\n        unaff_EBX = unaff_EBX + *(unaff_EBX + 0x69 + extraout_EDX_00 * 4) + bVar7;\n    }\n    uVar18 = 0x410648;\n    uVar17 = 0xe;\n    fcn.004041c0(0x410a24, 0xe, 0x410648, 0xe);\n    iVar4 = fcn.004041c0(0x410a24, 0xe, 0x410658, 0xd);\n    iVar4 = extraout_ECX_00 - iVar4;\n    uVar5 = iVar4 & 0xff00 | iVar4 ^ iVar4 >> 8 | 0x3d00 | unaff_EBX;\n    cVar11 = uVar5;\n    cVar14 = uVar5 >> 8;\n    cVar12 = SBORROW1(cVar14, cVar11);\n    cVar10 = cVar14 - cVar11 < '\\0';\n    bVar7 = cVar14 == cVar11;\n    uVar19 = 0x401855;\n    uVar15 = fcn.004041c0(0x410a24, 0xe, 0x410668, 0xc);\n    if ((bVar7 || cVar12 != cVar10) || (!bVar7 && cVar12 == cVar10)) {\n        uVar19 = 0xf;\n        uVar18 = 0x410674;\n        uVar17 = 0xe;\n    }\n    puVar2 = uVar15 + 0x6a39da56;\n    *puVar2 = *puVar2 ^ extraout_CX;\n    puVar2 = (uVar15 >> 0x20) + 0xe;\n    uVar6 = extraout_CX >> 8;\n    bVar7 = CARRY1(*puVar2, uVar6);\n    bVar13 = SCARRY1(*puVar2, uVar6);\n    *puVar2 = *puVar2 + uVar6;\n    bVar8 = *puVar2 == 0;\n    fcn.004041c0(0x410a24, uVar17, uVar18, uVar19);\n    if ((bVar13) || (!bVar13)) {\n        in_stack_ffffffc8 = 0xe;\n        puVar16 = unaff_EDI;\ncode_r0x00401893:\n        in_stack_ffffffc4 = 0x56;\n        in_stack_ffffffc0 = in_stack_ffffffc0 & 0xffff0000 | in_ES;\n        *(extraout_EDX_01 + 0xe) = *(extraout_EDX_01 + 0xe) + (extraout_ECX_01 + 1 >> 8);\n        in_stack_ffffffbc = 0x410a24;\n        fcn.004041c0(0x410a24, in_stack_ffffffc0, 0x56, in_stack_ffffffc8);\n        fcn.004041c0(0x410a24, 0xe, 0x410690, 0xb);\n    }\n    else {\n        puVar16 = unaff_EDI + 1;\n        uVar9 = in(extraout_EDX_01);\n        *unaff_EDI = uVar9;\n        if (bVar7 || bVar8) goto code_r0x00401893;\n    }\n    fcn.004041c0(0x410a24, 0xe, 0x41069c, 0xb);\n    fcn.004041c0(0x410a24, 0xe, 0x4106a8, 10);\n    fcn.004041c0(0x410a24, 0xe, 0x4106b4, 0xc);\n    fcn.004041c0(0x410a24, 0xe, 0x4106c0, 0xe);\n    cVar14 = false;\n    cVar11 = (extraout_CX_00 | 0x31fd) < 0;\n    uVar9 = (extraout_CX_00 | 0x31fd) == 0;\n    fcn.004041c0(0x410a24, 0xe, 0x4106d0, 0x11);\n    if ((!cVar14) && (cVar14)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    uVar15 = fcn.004041c0(0x410a24, 0xe, 0x4106e4, 0x13);\n    if ((uVar9 || cVar14 != cVar11) || (!uVar9 && cVar14 == cVar11)) {\n        in_stack_ffffffc4 = 0x4106f8;\n        in_stack_ffffffc0 = 0xe;\n    }\n    puVar2 = uVar15 + 0x6a39da56;\n    *puVar2 = *puVar2 ^ extraout_ECX_02;\n    pcVar3 = (uVar15 >> 0x20) + 0xe;\n    *pcVar3 = *pcVar3 + (extraout_ECX_02 + 1 >> 8);\n    bVar7 = *pcVar3 == '\\0';\n    fcn.004041c0(0x410a24, in_stack_ffffffbc & 0xffff0000 | in_ES, in_stack_ffffffc0, in_stack_ffffffc4);\n    if ((bVar7) || (!bVar7)) {\n        puVar16 = 0x33;\n    }\n    else {\n        uVar17 = in(extraout_EDX_02);\n        *puVar16 = uVar17;\n        if (&stack0xffffffb8 < 1) goto code_r0x00401a89;\n    }\n    *(extraout_EDX_02 + 0x33) = *(extraout_EDX_02 + 0x33) ^ extraout_CH;\n    fcn.004041c0(0x410a24, 0xe, 0x41070c, puVar16);\n    if ((*0x10 != 0x18) && (*0x10 == 0x18)) {\n        puVar16 = 0xfffffffc;\n        cVar11 = '\\x10';\n        do {\n            unaff_EBP = unaff_EBP + -1;\n            puVar16 = puVar16 + -1;\n            *puVar16 = *unaff_EBP;\n            cVar11 = cVar11 + -1;\n        } while ('\\0' < cVar11);\n    }\n    fcn.004041c0(0x410a24, 0xe, 0x410740, 10);\n    fcn.004041c0(0x410a24, 0xe, 0x41074c, 4);\ncode_r0x00401a89:\n    fcn.004041c0(0x410a24, 0xe, 0x410750, 5);\n    fcn.004041c0(0x410a24, 0xe, 0x410758, 6);\n    fcn.004041c0(0x410a24, 0xe, 0x410760, 0xc);\n    fcn.004041c0(0x410a24, 0xe, 0x41076c, 0xc);\n    fcn.004041c0(0x410a24, 0xe, 0x4107a4, 0x2a);\n    fcn.004041c0(0x410a24, 0xe, 0x4107d0, 0xb);\n    fcn.004041c0(0x410a24, 0xe, 0x41082c, 0x41);\n    fcn.004041c0(0x410a24, 0xe, 0x410870, 0x33);\n    fcn.004041c0(0x410a24, 0xe, 0x4108a4, 0x4b);\n    fcn.004041c0(0x410a24, 0xe, 0x4108f0, 0x39);\n    fcn.004041c0(0x410a24, 0xe, 0x41092c, 8);\n    fcn.004041c0(0x410a24, 0xe, 0x410934, 0x14);\n    return;\n}\n",
        "token_count": 3316
    },
    "00401bf0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00401c73) overlaps instruction at (ram,0x00401c70)\n// \n\nvoid __fastcall fcn.00401bf0(uint32_t param_1, char *param_2)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    int16_t iVar6;\n    uint16_t uVar7;\n    uint8_t extraout_AH;\n    uint32_t in_EAX;\n    int32_t iVar8;\n    ushort extraout_CX;\n    uint32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t extraout_ECX_01;\n    int32_t extraout_ECX_02;\n    int32_t extraout_ECX_03;\n    int32_t extraout_ECX_04;\n    char extraout_DL;\n    uint8_t extraout_DH;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t extraout_EDX_01;\n    int32_t extraout_EDX_02;\n    int32_t iVar9;\n    int32_t extraout_EDX_03;\n    uint16_t uVar10;\n    int32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint *unaff_ESI;\n    uint8_t *unaff_EDI;\n    ushort in_SS;\n    bool in_CF;\n    uchar uVar11;\n    bool bVar12;\n    uint8_t in_AF;\n    bool in_ZF;\n    bool bVar13;\n    char cVar14;\n    bool bVar15;\n    char cVar16;\n    char cVar17;\n    float10 fVar18;\n    ulong uVar19;\n    uint uVar20;\n    uint *in_stack_ffffffd8;\n    int32_t in_stack_ffffffdc;\n    uint arg_10h;\n    uint32_t in_stack_ffffffe0;\n    uint32_t uVar21;\n    int32_t arg_14h;\n    \n    if ((!in_ZF) && (in_ZF)) {\n        uVar5 = in_EAX;\n        if (in_CF || unaff_EBX + 1 == 0) {\n            *unaff_EDI = uVar5;\n            goto code_r0x00401c54;\n        }\n        in_AF = 9 < (uVar5 & 0xf) | in_AF;\n        piVar1 = (in_EAX & 0xffff0000 | CONCAT11((in_EAX >> 8) + in_AF, uVar5 + in_AF * '\\x06') & 0xff0f) + 0x2a;\n        *piVar1 = *piVar1 - (unaff_EBX + 1);\n        unaff_ESI = unaff_ESI + 1;\n    }\n    fcn.004041c0(0x410a24, 0xe, 0x410518, 0x11);\n    bVar12 = (POPCOUNT(extraout_DH & 0x12) & 1U) == 0;\n    uVar21 = 0x401c38;\n    in_stack_ffffffd8 = unaff_ESI;\n    in_stack_ffffffdc = unaff_EBP;\n    uVar19 = fcn.004041c0(0x410a24, 0xe, 0x410778, 0x10);\n    param_2 = uVar19 >> 0x20;\n    iVar8 = uVar19;\n    if ((bVar12) || (in_stack_ffffffe0 = uVar21 & 0xffff | unaff_ESI << 0x10,  !bVar12)) {\n        in_stack_ffffffe0 = 0x1a;\n        in_stack_ffffffdc = 0x410788;\n        in_stack_ffffffd8 = 0xe;\n        param_1 = extraout_ECX;\n    }\n    else {\n        out(*unaff_ESI, uVar19 >> 0x20);\n        do {\n            cVar14 = iVar8 >> 8;\n            in_AF = 9 < (iVar8 & 0xf) | in_AF;\n            iVar8 = CONCAT31(CONCAT21(iVar8 >> 0x10, cVar14 - in_AF), -in_AF);\n        } while (in_AF || cVar14 == *param_2);\n        puVar2 = unaff_EDI + param_2 * 2;\n        uVar21 = *puVar2;\n        uVar4 = *puVar2;\n        *puVar2 = (uVar4 + 0x7b) - in_AF;\n        *(extraout_ECX + 0x6a) = iVar8;\n        param_1 = CONCAT11(((extraout_ECX >> 8) - *(iVar8 + -0x78)) - (uVar21 < 0xffffff85 || uVar4 + 0x7b < in_AF), \n                           extraout_ECX);\n        unaff_ESI = unaff_ESI + 1;\n    }\ncode_r0x00401c54:\n    param_2[0xe] = param_2[0xe] + (param_1 + 1 >> 8);\n    uVar20 = 0x410a24;\n    fcn.004041c0(0x410a24, in_stack_ffffffd8, in_stack_ffffffdc, in_stack_ffffffe0);\n    iVar8 = extraout_ECX_00;\n    iVar9 = extraout_EDX;\n    while( true ) {\n        unaff_EDI = unaff_EDI ^ *(unaff_EDI + 0xe58be73);\n        uVar10 = unaff_EBP + 0x6a76;\n        *(iVar9 + 0xe) = *(iVar9 + 0xe) + (iVar8 + 1 >> 8);\n        iVar8 = fcn.004041c0(0x410a24, uVar20, in_stack_ffffffd8, in_stack_ffffffdc);\n        bVar12 = 0xffffffcf < &stack0xffffffd0;\n        bVar15 = SCARRY4(iVar8, 1);\n        bVar13 = iVar8 == -1;\n        uVar20 = 0x410a24;\n        fcn.004041c0(0x410a24, 0xe, 0x4107e8, 0xb);\n        if ((bVar12 || bVar13) || (!bVar12 && !bVar13)) break;\n        iVar8 = extraout_ECX_01;\n        iVar9 = extraout_EDX_00;\n        if (!bVar15) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    }\n    fcn.004041c0(0x410a24, 0xe, 0x4107f4, 8);\n    fcn.004041c0(0x410a24, 0xe, 0x4107fc, 9);\n    fcn.004041c0(0x410a24, 0xe, 0x410808, 9);\n    fcn.004041c0(0x410a24, 0xe, 0x410814, 9);\n    while( true ) {\n        fcn.004041c0(0x410a24, 0xe, 0x410820, 0xc);\n        iVar6 = fcn.004041c0(0x410a24, 0xe, 0x410948, 3);\n        cVar16 = '\\0';\n        uVar7 = iVar6 + uVar10 | 0x11a9;\n        cVar14 = uVar7 < 0;\n        bVar12 = uVar7 == 0;\n        fcn.004041c0(0x410a24, 0xe, 0x41094c, 10);\n        if ((bVar12 || cVar16 != cVar14) || (!bVar12 && cVar16 == cVar14)) break;\n        if (extraout_ECX_02 != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n    }\n    fcn.004041c0(0x410a24, 0xe, 0x410958, 0x1b);\n    bVar12 = extraout_DL + 0x15U < extraout_AH;\n    fcn.004041c0(0x410a24, 0xe, 0x410974, 0x12);\n    if ((!bVar12) && (bVar12)) {\n        uVar10 = uVar10 + *(unaff_EBP + 0x680a6adf + extraout_EDX_01 * 4) + bVar12;\n    }\n    fcn.004041c0(0x410a24, 0xe, 0x410988, 0x40);\n    arg_10h = 0xc;\n    uVar20 = 0x4109c8;\n    fcn.004041c0(0x410a24, 0xe, 0x4109c8, 0xc);\n    uVar11 = 0;\n    bVar12 = false;\n    fVar18 = fcn.004041c0(0x410a24, 0xe, 0x4109d4, 0xb);\n    if ((!bVar12) && (bVar12)) {\n        puVar3 = unaff_ESI + 1;\n        *(unaff_EDI + 0x1c) = fVar18;\n        unaff_ESI = unaff_ESI + 5;\n        uVar11 = *puVar3 < unaff_EDI[4];\n    }\n    fcn.004041c0(0x410a24, 0xe, 0x4109e0, 4);\n    iVar8 = extraout_ECX_03;\n    iVar9 = extraout_EDX_02;\n    if (uVar11) goto code_r0x00401ecd;\n    do {\n        arg_14h = iVar9;\n        if (!uVar11) {\ncode_r0x00401ecd:\n            arg_14h = 4;\n            arg_10h = 0x4109e4;\n            uVar20 = 0xe;\n        }\n        *(unaff_ESI + 0x43d1773a) = *(unaff_ESI + 0x43d1773a) ^ 0x6a27e95e;\n        in(9);\n        *(iVar9 + 0xe) = *(iVar9 + 0xe) + (iVar8 + 1 >> 8);\n        iVar6 = fcn.004041c0(0x410a24, uVar20, arg_10h, arg_14h);\n        uVar5 = (uVar10 ^ 0x70c5) - iVar6 >> 8 | extraout_CX >> 8;\n        uVar11 = uVar5 < extraout_CX;\n        bVar12 = (POPCOUNT(uVar5 - extraout_CX) & 1U) == 0;\n        fcn.004041c0(0x410a24, 0xe, 0x4109e8, 0xc);\n        if ((bVar12) || (!bVar12)) break;\n        segment(in_SS, *0x10 + -0xc);\n        iVar9 = -0x4843615b;\n        if (uVar11) goto code_r0x00401f50;\n        iVar8 = extraout_ECX_04;\n    } while (bVar12);\n    fcn.004041c0(0x410a24, 0xe, 0x4109f4, 4);\n    iVar9 = extraout_EDX_03;\ncode_r0x00401f50:\n    cVar14 = iVar9 >> 8;\n    cVar17 = SBORROW1(cVar14, '6');\n    cVar16 = cVar14 + -0x36 < '\\0';\n    bVar12 = cVar14 == '6';\n    uVar20 = 0x401f67;\n    fcn.004041c0(0x410a24, 0xe, 0x4109f8, 9);\n    if ((bVar12 || cVar17 != cVar16) || (!bVar12 && cVar17 == cVar16)) {\n        uVar20 = 0x16;\n    }\n    fcn.004041c0(0x410a24, 0xe, 0x410a04, uVar20);\n    fcn.004041c0(0x410a24, 0xe, 0x410a1c, 7);\n    return;\n}\n",
        "token_count": 2867
    },
    "004029d0": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004029e5) overlaps instruction at (ram,0x004029e3)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.004029d0(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    char *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint in_ECX;\n    bool in_SF;\n    uint var_4h;\n    \n    if ((in_SF) || (!in_SF)) {\n        pcVar2 = fcn.004044a0(0x410584);\n    }\n    else {\n        uVar1 = in_EAX + 0x41058468U + (in_ECX >> 8);\n        pcVar2 = in_EAX + 0x41058468U & 0xffffff00 | uVar1;\n        *pcVar2 = *pcVar2 + uVar1;\n    }\n    if (pcVar2 == 0xffffffff) {\n        return 0;\n    }\n    iVar3 = (*_sym.imp.KERNEL32.dll_OpenProcess)();\n    if (iVar3 == 0) {\n        return 0;\n    }\n    uVar4 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(arg_8h, iVar3, 0, 0, 0, 2);\n    iVar5 = (*_sym.imp.KERNEL32.dll_DuplicateHandle)(uVar4);\n    if (iVar5 == 0) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n    return 1;\n}\n",
        "token_count": 374
    },
    "00403110": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403133) overlaps instruction at (ram,0x00403132)\n// \n\nvoid __fastcall fcn.00403110(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    bool bVar3;\n    \n    bVar3 = (POPCOUNT(*0x41fa70 & 0xff) & 1U) == 0;\n    if (*0x41fa70 == 0) {\n        if ((bVar3) || (!bVar3)) {\n            pcVar2 = (*_sym.imp.MSVCRT.dll_time)(0);\n        }\n        else {\n            iVar1 = *param_2;\n            *param_2 = *param_2 + 1;\n            pcVar2 = sym.imp.MSVCRT.dll_time + (iVar1 != -1);\n        }\n        (*_sym.imp.MSVCRT.dll_srand)(pcVar2);\n        *0x41fa70 = 1;\n    }\n    return;\n}\n",
        "token_count": 232
    },
    "004020e0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402145) overlaps instruction at (ram,0x00402144)\n// \n// WARNING: Removing unreachable block (ram,0x00402145)\n\nuint fcn.004020e0(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint *unaff_EDI;\n    uint lpVersionInformation;\n    uint var_90h;\n    uint var_8ch;\n    \n    lpVersionInformation = 0x94;\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetVersionExA)(&lpVersionInformation);\n    uVar3 = &stack0xfffffffc & 0xffff0000 | *0x10 - 4;\n    iVar1 = *(uVar3 - 0x90);\n    if (*(uVar3 - 0x90) == 5) {\n        return 1;\n    }\n    if ((4 < iVar1) && (iVar1 < 5)) {\n        out(0xc4, uVar2);\n        *unaff_EDI = uVar2;\n    }\n    if ((*(uVar3 - 0x90) == 6) && (*(uVar3 - 0x8c) == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 289
    },
    "004035a0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint32_t fcn.004035a0(void)\n\n{\n    int32_t iVar1;\n    uint uStack12;\n    uint32_t uStack8;\n    uchar auStack4 [4];\n    \n    uStack12 = 4;\n    iVar1 = fcn.00402920(0x80000002, 0x41070c, 0x410758, auStack4, &uStack8, &uStack12);\n    if ((iVar1 == 0) || (5 < uStack8)) {\n        uStack8 = 0xffffffff;\n    }\n    return uStack8;\n}\n",
        "token_count": 132
    },
    "00403d80": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403d80(char *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    uchar var_264h;\n    uint var_263h;\n    char var_160h;\n    uint var_15fh;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    char *var_20h;\n    char *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = _sym.imp.MSVCRT.dll_sprintf;\n    var_264h = 0;\n    puVar5 = &var_263h;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_160h = '\\0';\n    puVar5 = &var_15fh;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_ch = 1;\n    var_4h = 0;\n    var_8h = 1;\n    (*_sym.imp.MSVCRT.dll_sprintf)(&var_160h, 0x410594, arg_8h);\n    (*pcVar2)(&var_264h, 0x4105ac, arg_8h);\n    pcVar2 = _sym.imp.SHLWAPI.dll_SHSetValueA;\n    var_20h = &var_160h;\n    var_18h = &var_ch;\n    var_14h = &var_4h;\n    var_10h = &var_8h;\n    uVar4 = 0xffffffff;\n    pcVar6 = &var_160h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    var_48h = ~uVar4 - 1;\n    uVar4 = 0xffffffff;\n    pcVar6 = arg_8h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    var_34h = 0x4105d4;\n    var_30h = 0x4105e0;\n    var_2ch = 0x4105ec;\n    var_28h = 0x4105fc;\n    var_24h = 0x410604;\n    var_5ch = 2;\n    var_58h = 1;\n    var_54h = 4;\n    var_50h = 4;\n    var_4ch = 4;\n    var_1ch = arg_8h;\n    var_44h = ~uVar4 - 1;\n    var_40h = 4;\n    var_3ch = 4;\n    var_38h = 4;\n    if ((arg_ch != 0) < 5) {\n        uVar4 = (arg_ch != 0) * 4;\n        do {\n            iVar3 = (*pcVar2)(0x80000002, &var_264h, *(&var_34h + uVar4), *(&var_5ch + uVar4), *(&var_20h + uVar4), \n                              *(&var_48h + uVar4));\n            if (iVar3 != 0) {\n                return 0;\n            }\n            uVar4 = uVar4 + 4;\n        } while (uVar4 < 0x14);\n    }\n    return 1;\n}\n",
        "token_count": 1092
    },
    "004023a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.004023a0(uint param_1)\n\n{\n    uint uStack48;\n    uint uStack44;\n    code *pcStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack48 = 0x30;\n    uStack44 = 3;\n    pcStack40 = fcn.00404250;\n    uStack36 = 0;\n    uStack32 = 0;\n    uStack28 = param_1;\n    uStack24 = 0;\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    uStack8 = 0x406010;\n    uStack4 = 0;\n    (*_sym.imp.USER32.dll_RegisterClassExA)(&uStack48);\n    return;\n}\n",
        "token_count": 217
    },
    "00403160": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498",
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403280) overlaps instruction at (ram,0x0040327c)\n// \n\nuint fcn.00403160(uint32_t param_1)\n\n{\n    ushort uVar1;\n    ushort uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint extraout_ECX;\n    int32_t *piVar6;\n    uchar *puVar7;\n    bool bVar8;\n    unkbyte10 extraout_ST0;\n    ulong uVar9;\n    uint uStack120;\n    uint uStack116;\n    uint32_t uStack112;\n    uint32_t uStack108;\n    uchar *puStack104;\n    uint32_t uStack100;\n    uint uStack96;\n    uint uStack92;\n    uchar *puStack88;\n    uchar *puStack84;\n    uint32_t uStack80;\n    uint uStack76;\n    int32_t iStack72;\n    int32_t iStack68;\n    uint uStack64;\n    uint uStack60;\n    int32_t iStack56;\n    uint32_t uStack52;\n    uchar *puStack48;\n    uint uStack8;\n    \n    puStack48 = &stack0xfffffff8;\n    uStack52 = param_1;\n    uStack8 = 0;\n    iStack56 = 0x40317b;\n    iVar5 = sub.VERSION.dll_GetFileVersionInfoSizeA();\n    if (iVar5 != 0) {\n        uStack60 = 2;\n        uStack64 = 0x403191;\n        iStack56 = iVar5;\n        uVar9 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)();\n        uStack112 = uVar9;\n        bVar8 = false;\n        iStack68 = 0x4031c6;\n        iStack68 = (*_sym.imp.KERNEL32.dll_GlobalLock)();\n        iStack72 = uVar9 >> 0x20;\n        uStack64 = uVar9;\n        uStack76 = uStack8;\n        puVar7 = &stack0xfffffffc;\n        if ((!bVar8) && (puVar7 = &stack0xfffffffc,  bVar8)) {\n            iStack68 = iStack68 + 0x7c8ecb0d + (bVar8 == false);\n            *(iVar5 + 0x43d1773a) = *(iVar5 + 0x43d1773a) ^ 0x8b27e95e;\n            uStack76 = extraout_ECX;\n            puVar7 = &stack0xfffffffb;\n        }\n        uStack80 = param_1;\n        puStack84 = 0x4031ee;\n        iStack72 = iVar5;\n        sub.VERSION.dll_GetFileVersionInfoA();\n        uStack96 = *(puVar7 + -0xc);\n        puStack84 = puVar7 + -8;\n        puStack88 = puVar7 + 8;\n        uStack92 = 0x410514;\n        uStack100 = 0x40320b;\n        uStack108 = iVar5;\n        puStack104 = puVar7;\n        sub.VERSION.dll_VerQueryValueA();\n        iVar3 = *(puVar7 + 8);\n        uVar1 = *(iVar3 + 0x10);\n        *(puVar7 + -0x1c) = *(iVar3 + 0x10) >> 0x10;\n        uVar4 = *(iVar3 + 0x14);\n        uVar2 = *(iVar3 + 0x14);\n        *(puVar7 + -0x1a) = uVar1;\n        *(puVar7 + -0x16) = uVar2;\n        *(puVar7 + -0x18) = uVar4 >> 0x10;\n        uStack100 = *(puVar7 + -0x16) & 0xffff;\n        puStack104 = *(puVar7 + -0x18) & 0xffff;\n        uStack108 = *(puVar7 + -0x1a) & 0xffff;\n        uStack120 = *(puVar7 + 0xc);\n        uStack112 = *(puVar7 + -0x1c) & 0xffff;\n        uStack116 = 0x4109e8;\n        uVar9 = (*_sym.imp.MSVCRT.dll_sprintf)();\n        piVar6 = uVar9 >> 0x20;\n        if ((SCARRY4(&stack0xffffff88, 0x18) == &stack0xffffffa0 < 0) &&\n           (SCARRY4(&stack0xffffff88, 0x18) != &stack0xffffffa0 < 0)) {\n            *(uVar9 + -0x7ce92414) = extraout_ST0;\n            uStack100 = param_1;\n            *piVar6 = *piVar6 + 0x758bdf84;\n            LOCK();\n        }\n        else {\n            iVar5 = *(puVar7 + -0x10);\n        }\n        uStack108 = 0x40328a;\n        puStack104 = iVar5;\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)();\n        uStack112 = 0x40329c;\n        uStack108 = iVar5;\n        (*_sym.imp.KERNEL32.dll_GlobalFree)();\n    }\n    return 1;\n}\n",
        "token_count": 1174
    },
    "00403940": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498",
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004039ab) overlaps instruction at (ram,0x004039aa)\n// \n// WARNING: Removing unreachable block (ram,0x004039ab)\n// WARNING: Removing unreachable block (ram,0x004039ce)\n\nint32_t __cdecl fcn.00403940(uint32_t arg_8h, uint16_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t *unaff_EDI;\n    bool bVar2;\n    \n    bVar2 = false;\n    uVar1 = arg_10h;\n    if (arg_10h != 0) {\n        do {\n            if ((bVar2 == uVar1 < 0) && (bVar2 != uVar1 < 0)) {\n                out(0xc4, arg_10h);\n                arg_ch = arg_ch & 0xffffff00 | arg_ch ^ arg_8h;\n                *unaff_EDI = arg_10h;\n                unaff_EDI = unaff_EDI + 1;\n            }\n            arg_8h = arg_8h + *arg_ch;\n            arg_10h = arg_8h >> 0x10;\n            if (arg_8h >> 0x10 != 0) {\n                arg_10h = arg_10h + (arg_8h & 0xffff);\n                arg_8h = arg_10h;\n            }\n            arg_ch = arg_ch + 1;\n            bVar2 = SBORROW4(uVar1, 1);\n            uVar1 = uVar1 - 1;\n        } while (uVar1 != 0);\n    }\n    return (arg_8h >> 0x10) + arg_8h;\n}\n",
        "token_count": 392
    },
    "00402690": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681",
            "parse credit card information/0fcc6283562247e58776c7b51a92f681",
            "parse credit card information/0fcc6283562247e58776c7b51a92f681",
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00402824) overlaps instruction at (ram,0x00402823)\n// \n// WARNING: Removing unreachable block (ram,0x00402824)\n\nulong __fastcall fcn.00402690(uint32_t *param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    char cVar4;\n    uint8_t uVar5;\n    uint8_t uVar6;\n    uint16_t uVar7;\n    uint uVar8;\n    int32_t in_EAX;\n    char *pcVar9;\n    uint8_t *puVar10;\n    ushort uVar11;\n    uint16_t uVar12;\n    uint8_t unaff_BL;\n    uchar *puVar13;\n    uchar *unaff_ESI;\n    uchar *puVar14;\n    int32_t *unaff_EDI;\n    ushort in_SS;\n    uint8_t in_CF;\n    bool bVar15;\n    uint8_t in_AF;\n    bool bVar16;\n    char in_SF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    char in_OF;\n    uint8_t in_NT;\n    float10 in_ST0;\n    float10 in_ST1;\n    float10 in_ST2;\n    float10 in_ST3;\n    float10 in_ST4;\n    float10 in_ST5;\n    float10 in_ST6;\n    float10 fVar17;\n    float10 in_ST7;\n    char cStack19;\n    \n    puVar13 = &stack0xfffffffc;\n    uVar7 = unaff_EDI;\n    puVar14 = &stack0xfffffffc;\n    fVar17 = in_ST6;\n    if (in_OF != in_SF) goto code_r0x004026ab;\n    do {\n        uVar6 = param_1 >> 8;\n        puVar14 = puVar13;\n        fVar17 = in_ST6;\n        if (in_OF == in_SF) {\ncode_r0x004026ab:\n            in_ST6 = in_ST5;\n            in_ST5 = in_ST4;\n            in_ST4 = in_ST3;\n            in_ST3 = in_ST2;\n            in_ST2 = in_ST1;\n            in_ST1 = in_ST0;\n            param_1 = *(puVar14 + 8);\n            *param_1 = 0xb4;\n            uVar6 = in_EAX;\n            cStack19 = in_EAX >> 8;\n            in_CF = false;\n            puVar10 = CONCAT11((cStack19 - unaff_BL) + 'M', uVar6) & 0x26ae;\n            puVar13 = puVar14;\ncode_r0x004026c6:\n            in_OF = SBORROW2(puVar10, 1);\n            uVar7 = puVar10 - 1;\n            in_SF = uVar7 < 0;\n            bVar16 = uVar7 == 0;\n            bVar15 = (POPCOUNT(uVar7 & 0xff) & 1U) == 0;\n            uVar7 = uVar6;\n            *(param_1 + 1) = 0xbb;\n            puVar14 = unaff_ESI;\n            if ((!bVar15) && (bVar15)) {\n                puVar14 = *unaff_EDI;\n                *unaff_EDI = unaff_ESI;\n                puVar13 = puVar13 + -*(puVar13 + 0x5f9dff63);\n                if (puVar13 < 0) {\n                    uVar8 = fcn.00402400(uVar6, param_2);\n                    puVar3 = *(puVar13 + 0xc);\n                    **(puVar13 + 8) = 0x406014;\n                    *puVar3 = 0xa500;\n                    return CONCAT44(puVar3, uVar8);\n                }\n                in_CF = false;\n                in_OF = false;\n                in_SF = puVar14 < 0;\n                bVar16 = puVar14 == NULL;\n                bVar15 = (POPCOUNT(puVar14 & 0xff) & 1U) == 0;\n                if (!in_SF) goto code_r0x00402743;\n            }\n            *(param_1 + 2) = 0xe4;\n            unaff_ESI = puVar14;\n            if (bVar15) goto code_r0x00402714;\n        }\n        else {\n            *(in_EAX + -0x7ce92414) = in_ST0;\n            uVar5 = in_EAX - 1U;\n            in_AF = 9 < (uVar5 & 0xf) | in_AF;\n            uVar5 = uVar5 + in_AF * '\\x06';\n            uVar5 = uVar5 + (0x90 < (uVar5 & 0xf0) | in_CF | in_AF * (0xf9 < uVar5)) * '`';\n            *param_2 = *param_2 + 0x4d8bdf84;\n            uVar12 = CONCAT11(param_2 >> 8 | uVar5, param_2);\n            param_2 = param_2 & 0xffff0000 | uVar12;\n            piVar1 = (in_EAX - 1U & 0xffffff00 | uVar5) + 0x7cbda9 + param_2 * 2;\n            *piVar1 = unaff_ESI + *piVar1;\n            in_CF = CARRY1(*param_2, uVar6);\n            in_OF = SCARRY1(*param_2, uVar6);\n            *param_2 = *param_2 + uVar6;\n            in_SF = *param_2 < '\\0';\n            bVar16 = *param_2 == 0;\n            bVar15 = (POPCOUNT(*param_2) & 1U) == 0;\n            fVar17 = in_ST7;\n            if (param_1 != NULL) {\n                pcVar9 = in(uVar12);\n                uVar6 = pcVar9 - *pcVar9;\n                puVar10 = pcVar9 & 0xffffff00 | uVar6;\n                puVar10[-0x51dab23c] = puVar10[-0x51dab23c] + uVar6;\n                in_CF = CARRY1(*puVar10, uVar6);\n                *puVar10 = *puVar10 + uVar6;\n                uVar6 = unaff_BL;\n                goto code_r0x004026c6;\n            }\n        }\n        uVar6 = uVar7;\n        puVar14 = unaff_ESI;\n        if (!bVar15) goto code_r0x00402714;\n        puVar3 = segment(in_SS, *0x10 + -0xc);\n        uVar6 = *puVar3;\n        param_2 = 0xb7bc9ea5;\n        if (in_CF) {\n            puVar14 = unaff_ESI + 1;\n            out(*unaff_ESI, 0x9ea5);\n            goto code_r0x0040272d;\n        }\n        if (!bVar15) break;\n        in_EAX = in(0x9ea5);\n        in_ST0 = in_ST1;\n        in_ST1 = in_ST2;\n        in_ST2 = in_ST3;\n        in_ST3 = in_ST4;\n        in_ST4 = in_ST5;\n        in_ST5 = in_ST6;\n        in_ST6 = fVar17;\n    } while( true );\n    bVar16 = *0x10 == 0x8;\ncode_r0x00402714:\n    *(param_1 + 3) = 0x9d;\n    if (!bVar16) {\n        uVar11 = SUB42(param_1, 0);\n        param_1 = (param_1 >> 8 & 0xffff00) << 8 | param_1 & 0xffff;\n        if (bVar16) {\n            unaff_EDI = CONCAT22(uVar11, in_SS);\n            uVar6 = uVar6 + 3;\n            goto code_r0x0040272d;\n        }\n    }\n    *(param_1 + 1) = 3;\ncode_r0x0040272d:\n    param_1 = *(puVar13 + 8);\ncode_r0x00402743:\n    *(param_1 + 5) = 0x90;\n    *(param_1 + 6) = 0x5c;\n    iVar2 = *(puVar13 + 8);\n    *(iVar2 + 7) = 0x95;\n    uVar5 = param_1;\n    bVar15 = param_2 <= uVar5;\n    *(iVar2 + 8) = 0x43;\n    if ((bVar15) && (!bVar15)) {\n        cVar4 = uVar6 - *unaff_EDI;\n        func_0x1018871f((in_NT & 1) * 0x4000 | SBORROW1(uVar6, *unaff_EDI) * 0x800 | (in_IF & 1) * 0x200 |\n                        (in_TF & 1) * 0x100 | (cVar4 < '\\0') * 0x80 | (cVar4 == '\\0') * 0x40 | (in_AF & 1) * 0x10 |\n                        ((POPCOUNT(cVar4) & 1U) == 0) * 4 | uVar6 < *unaff_EDI);\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    *(iVar2 + 9) = 0x9e;\n    *(iVar2 + 10) = 0xc;\n    if ((uVar6 < '\\x02') || ('\\x01' < uVar6)) {\n        *(iVar2 + 0xb) = 0x31;\n    }\n    else {\n        in_ST1 = in_ST1 - *(puVar13 + 0x43c692c9);\n        puVar14 = puVar14 | *param_1;\n    }\n    bVar16 = SBORROW1(uVar5, '\\x01');\n    bVar15 = uVar5 - 1 < '\\0';\n    *(iVar2 + 0xc) = 0xa1;\n    if ((!bVar15) && (bVar15)) {\n        piVar1 = unaff_EDI + 1;\n        *(unaff_EDI + 7) = in_ST1;\n        unaff_EDI = unaff_EDI + 5;\n        bVar16 = SBORROW1(puVar14[4], *piVar1);\n        bVar15 = puVar14[4] - *piVar1 < '\\0';\n    }\n    *(iVar2 + 0xd) = 0x2a;\n    if ((bVar16 == bVar15) && (bVar16 != bVar15)) {\n        *(unaff_EDI | puVar13) = uVar6;\n        param_2 = param_2 & 0xffffff00;\n    }\n    *(iVar2 + 0xe) = 0xb9;\n    *(iVar2 + 0xf) = 0x7c;\n    *(iVar2 + 0x10) = 0xf;\n    *(iVar2 + 0x11) = 0x2b;\n    *(iVar2 + 0x12) = 9;\n    iVar2 = *(puVar13 + 8);\n    *(iVar2 + 0x13) = 0xcd;\n    **(puVar13 + 0xc) = 0x14;\n    return CONCAT44(param_2, iVar2);\n}\n",
        "token_count": 2611
    },
    "00403fb0": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403fce) overlaps instruction at (ram,0x00403fcd)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00403fb0(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char extraout_DL;\n    int32_t unaff_EBX;\n    int32_t unaff_EDI;\n    \n    iVar2 = func_0x10189f40();\n    *(iVar2 + -1) = *(iVar2 + -1) | unaff_EBX + 0x4d8b0c45 >> 8;\n    *(unaff_EDI + 1) = *(unaff_EDI + 1) + unaff_EBX + 0x4d8b0c45;\n    *(iVar2 + 0x51) = *(iVar2 + 0x51) + extraout_DL;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)();\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar3 = (*_sym.imp.ADVAPI32.dll_StartServiceA)(iVar2, 0, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (((iVar3 == 0) && (iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar3 != 0x420)) &&\n       (iVar3 = (*pcVar1)(),  iVar3 != 0x422)) {\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n        return 0;\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n    return 1;\n}\n",
        "token_count": 402
    },
    "004045c0": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040461e) overlaps instruction at (ram,0x0040461c)\n// \n// WARNING: Removing unreachable block (ram,0x00404754)\n\nulong __cdecl fcn.004045c0(uint32_t *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    char **ppcVar3;\n    uchar *puVar4;\n    char cVar8;\n    int32_t iVar5;\n    char *pcVar6;\n    uint32_t *puVar7;\n    uint8_t uVar9;\n    uint32_t in_ECX;\n    uint8_t uVar10;\n    uint32_t *in_EDX;\n    uint unaff_EBX;\n    uchar *puVar11;\n    uint32_t *unaff_ESI;\n    uint32_t *puVar12;\n    ushort *unaff_EDI;\n    ushort in_CS;\n    ushort in_SS;\n    bool bVar13;\n    uint8_t in_AF;\n    uint16_t uStack20;\n    uint16_t uStack18;\n    \n    puVar11 = &stack0xfffffffc;\n    bVar13 = (POPCOUNT(in_ECX - 5U & 0x44) & 1U) == 0;\n    *arg_8h = -0x49;\n    if ((!bVar13) && (bVar13)) {\n        ppcVar3 = segment(in_SS, *0x10 + -0x10);\n        pcVar6 = *ppcVar3;\n        in_EDX = 0xb7bc9ea5;\n        if (bVar13) {\n            *pcVar6 = *pcVar6 + pcVar6;\n            iVar5 = (*_sym.imp.MSVCRT.dll_rand)();\n            return CONCAT44(iVar5 % 5, iVar5 % 5 + 3);\n        }\n        bVar13 = (POPCOUNT(&stack0xfffffff4 & 0xff) & 1U) == 0;\n        arg_8h = pcVar6;\n    }\n    *(arg_8h + 1) = -0xd;\n    puVar7 = arg_8h;\n    puVar4 = &stack0xfffffffc;\n    if (bVar13) goto code_r0x00404630;\n    while( true ) {\n        puVar7 = arg_8h;\n        puVar4 = puVar11;\n        if (bVar13) {\n            unaff_ESI = 0x34a96cf4;\n            puVar11 = *0xc617b43a;\n            pcVar6 = in_EDX + 2;\n            puVar7 = pcVar6 & 0xffff0000 | CONCAT11((pcVar6 >> 8) + (in_ECX >> 8), pcVar6);\n            in_EDX = arg_8h;\n        }\n        else {\ncode_r0x00404630:\n            puVar11 = puVar4;\n            *(puVar7 + 2) = -0x1b;\n        }\n        uVar9 = unaff_EBX >> 8;\n        bVar13 = (in_EDX ^ uVar9 | 0x67) != 0;\n        *(puVar7 + 3) = 'R';\n        if ((bVar13) && (!bVar13)) {\n            puVar7 = puVar7 & 0xffffff00 | *0x4bb148d3;\n            out(*unaff_ESI, in_EDX);\n        }\n        *(puVar7 + 1) = -0x53;\n        unaff_ESI = *(puVar11 + 8);\n        *(unaff_ESI + 5) = 'g';\n        uStack18 = in_ECX >> 0x10;\n        uVar10 = in_EDX ^ uVar9 | 0x67;\n        *(unaff_ESI + 6) = -0x35;\n        uVar9 = puVar7;\n        cVar8 = puVar7 >> 8;\n        if ((uVar10 < '\\x01') || ('\\0' < uVar10)) break;\n        in_AF = 9 < (uVar9 & 0xf) | in_AF;\n        uVar9 = uVar9 + in_AF * '\\x06';\n        if (in_ECX != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        arg_8h = puVar7 & 0xffff0000 | (CONCAT11(cVar8 + in_AF, uVar9) & 0xff0f) & 0xffffff00 | uVar9 & 2;\n        bVar13 = POPCOUNT(uVar9 & 2) == '\\0';\n    }\n    *(unaff_ESI + 7) = '\\x15';\n    if ((uVar10 < '\\x01') || ('\\0' < uVar10)) {\n        *(unaff_ESI + 2) = 'G';\n        if (-1 < uVar10) {\n            uStack18 = in_ECX;\n            goto code_r0x004046b0;\n        }\ncode_r0x004046cd:\n        uStack18 = in_ECX;\n        *(unaff_ESI + 9) = '2';\n    }\n    else {\ncode_r0x004046b0:\n        *(unaff_EDI + 0xfU) = *(unaff_EDI + 0xfU) | uVar9;\n        *unaff_EDI = in_CS;\n        *puVar7 = *puVar7 + uVar9;\n        pcVar6 = unaff_ESI + 0x51;\n        cVar1 = *pcVar6;\n        *pcVar6 = *pcVar6 + cVar8;\n        in_ECX = uStack18;\n        if (SCARRY1(cVar1, cVar8) == *pcVar6 < '\\0') goto code_r0x004046cd;\n        puVar12 = puVar7 + 1;\n        *in_EDX = *in_EDX | puVar12;\n        puVar7 = unaff_ESI;\n        unaff_ESI = puVar12;\n    }\n    uVar9 = uStack18 - 5U & 0x44;\n    bVar13 = (POPCOUNT(uVar9) & 1U) != 0;\n    *(unaff_ESI + 10) = -0x20;\n    if ((uVar9 == 0) || (uVar9 != 0)) {\n        *(unaff_ESI + 0xb) = -0x4a;\n        if (bVar13) {\n            uStack20 = unaff_EDI;\n            unaff_EDI = unaff_EDI & 0xffff;\n            if (!bVar13) {\n                puVar11 = *0xc617b43a;\n                unaff_ESI = 0x34a96cf5;\n                in_EDX = puVar7;\n                goto code_r0x0040472a;\n            }\n        }\n        uStack20 = unaff_EDI;\n        *(unaff_ESI + 3) = -2;\n    }\n    else {\n        unaff_ESI = unaff_ESI | *(unaff_ESI + 0x6657157a);\n        uStack20 = 0xb225;\n        *0x7b5fb224 = in(in_EDX);\n    }\ncode_r0x0040472a:\n    *(unaff_ESI + 0xd) = 'z';\n    bVar13 = (POPCOUNT((uStack18 - 1 & uStack20 | 0x61be) & 0xff) & 1U) == 0;\n    *(unaff_ESI + 0xe) = -1;\n    *(unaff_ESI + 0xf) = -0x46;\n    if ((bVar13) || (!bVar13)) {\n        *(unaff_ESI + 4) = '\\x16';\n    }\n    else {\n        *(unaff_ESI + 0x46) = *(unaff_ESI + 0x46) + in_EDX + (0xffffffb9 < unaff_ESI);\n    }\n    puVar2 = *(puVar11 + 0xc);\n    *puVar2 = 0x11;\n    return CONCAT44(in_EDX, puVar2);\n}\n",
        "token_count": 1832
    },
    "00402a80": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402b5b) overlaps instruction at (ram,0x00402b59)\n// \n\nuint __cdecl fcn.00402a80(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint8_t *puVar1;\n    char cVar2;\n    int32_t arg_8h_00;\n    int32_t iVar3;\n    uint uVar4;\n    uint8_t extraout_CL;\n    uint *puVar5;\n    uint *puVar6;\n    bool bVar7;\n    int32_t iStack60;\n    uint uStack56;\n    uint uStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    \n    puVar5 = &stack0xfffffffc;\n    uStack16 = 0;\n    uStack20 = 0x80;\n    uStack24 = 2;\n    uStack28 = 0;\n    uStack32 = 1;\n    uStack36 = 0x40000000;\n    uStack40 = arg_8h;\n    uStack44 = 0x402aa1;\n    arg_8h_00 = (*_sym.imp.KERNEL32.dll_CreateFileA)();\n    if (arg_8h_00 == -1) {\n        return 0;\n    }\n    puStack48 = &fcn.00402a80::arg_8h;\n    uStack44 = 0;\n    uStack52 = arg_10h;\n    uStack56 = arg_ch;\n    iStack60 = arg_8h_00;\n    iVar3 = (*_sym.imp.KERNEL32.dll_WriteFile)();\n    if (iVar3 == 0) {\n        return 0;\n    }\n    if (*0x41fa74 != 0) {\n        iVar3 = fcn.004029d0(arg_8h_00);\n        *0x41fa74 = iVar3 == 0;\n    }\n    bVar7 = (POPCOUNT(*0x41fa74 & 0xff) & 1U) != 0;\n    if ((bVar7) && (!bVar7)) {\n        puVar6 = &stack0xffffffc0;\n        cVar2 = '\\x1e';\n        do {\n            puVar5 = puVar5 + -1;\n            puVar6 = puVar6 + -1;\n            *puVar6 = *puVar5;\n            cVar2 = cVar2 + -1;\n        } while ('\\0' < cVar2);\n        uVar4 = in(0x78);\n        return uVar4;\n    }\n    iVar3 = fcn.00402ea0(0, arg_8h_00);\n    if ((*0x10 != 0x3c && SCARRY4(&stack0xffffffbc, 8) == &stack0xffffffc4 < 0) &&\n       (*0x10 == 0x3c || SCARRY4(&stack0xffffffbc, 8) != &stack0xffffffc4 < 0)) {\n        puVar1 = iVar3 + -0x5ec625aa;\n        *puVar1 = *puVar1 ^ extraout_CL;\n        if (*puVar1 != 0) goto code_r0x00402b61;\n    }\n    iStack60 = arg_8h_00;\n    if (*0x41fa74 != 0) {\n        return 1;\n    }\ncode_r0x00402b61:\n    (*_sym.imp.KERNEL32.dll_CloseHandle)();\n    return 1;\n}\n",
        "token_count": 816
    },
    "00402b80": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402e18) overlaps instruction at (ram,0x00402e15)\n// \n// WARNING: Removing unreachable block (ram,0x00402c3d)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuchar * __cdecl fcn.00402b80(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    uint uVar3;\n    char *pcVar4;\n    uchar *puVar5;\n    uchar *puVar6;\n    int32_t iVar7;\n    uint *extraout_ECX;\n    uint *puVar8;\n    char extraout_DH;\n    uint8_t *unaff_EBX;\n    uint *arg_8h_00;\n    uint *puVar9;\n    bool bVar10;\n    char cVar11;\n    char cVar12;\n    bool bVar13;\n    int32_t in_stack_4d8df841;\n    int32_t iStack568;\n    uchar *puStack564;\n    uchar uStack560;\n    uchar uStack559;\n    ushort uStack558;\n    ushort uStack556;\n    ushort uStack554;\n    ushort uStack552;\n    ushort uStack550;\n    uchar lpBuffer;\n    uint var_213h;\n    uchar s;\n    uint var_10fh;\n    uchar *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    lpBuffer = 0;\n    puVar9 = &var_213h;\n    for (iVar7 = 0x40; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar9 = 0;\n        puVar9 = puVar9 + 1;\n    }\n    *puVar9 = 0;\n    *(puVar9 + 2) = 0;\n    s = 0;\n    puVar9 = &var_10fh;\n    for (iVar7 = 0x40; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar9 = 0;\n        puVar9 = puVar9 + 1;\n    }\n    *puVar9 = 0;\n    var_ch = 0x1;\n    *(puVar9 + 2) = 0;\n    cVar12 = '\\0';\n    cVar11 = 1;\n    uStack552 = 0x104;\n    uStack550 = 0;\n    uStack556 = SUB42(&lpBuffer, 0);\n    uStack554 = &lpBuffer >> 0x10;\n    uStack560 = 0xe1;\n    uStack559 = 0x2b;\n    uStack558 = 0x40;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    puStack564 = &lpBuffer;\n    uStack560 = SUB41(arg_8h, 0);\n    uStack559 = arg_8h >> 8;\n    uStack558 = arg_8h >> 0x10;\n    iStack568 = 0x410538;\n    iVar7 = (*_sym.imp.MSVCRT.dll_sprintf)();\n    if ((cVar11) || (!cVar11)) {\n        puVar2 = &var_8h;\n        puVar8 = &var_4h;\n        arg_8h_00 = arg_8h;\n    }\n    else {\n        *unaff_EBX = *unaff_EBX & 0xc3;\n        cVar12 = SBORROW4(in_stack_4d8df841, extraout_ECX);\n        cVar11 = in_stack_4d8df841 - extraout_ECX < 0;\n        puVar2 = arg_8h;\n        puVar8 = extraout_ECX;\n        arg_8h_00 = iVar7 + -0x1bf31dd6;\n    }\n    uVar3 = fcn.00402600(puVar8, puVar2);\n    if ((cVar12 == cVar11) && (cVar12 != cVar11)) {\n        out(0xc4, uVar3);\n        *(puVar9 + 3) = uVar3;\n    }\n    iVar7 = fcn.004042d0(arg_8h_00, arg_ch, arg_10h, arg_14h, var_4h, var_8h);\n    if (iVar7 == 0) {\n        return NULL;\n    }\n    *0x41fa74 = fcn.004032b0();\n    iVar7 = fcn.00402a80(&s, var_4h, var_8h);\n    if (iVar7 == 0) {\n        return NULL;\n    }\n    bVar10 = extraout_DH == '6';\n    iVar7 = fcn.004010c0();\n    if ((bVar10) || (!bVar10)) {\n        pcVar4 = fcn.004044a0(0x410570);\n    }\n    else {\n        pcVar4 = iVar7 + -0x4017ffbf;\n        *pcVar4 = *pcVar4 + pcVar4;\n    }\n    if (pcVar4 == 0xffffffff) {\n        iVar7 = fcn.004044a0(0x410564);\n        if (iVar7 == -1) goto code_r0x00402d39;\n        uVar3 = 0xf;\n    }\n    else {\n        uVar3 = 0xe;\n    }\n    iVar7 = fcn.004028e0(arg_8h);\n    if (iVar7 != 0) {\n        fcn.00402170();\n        fcn.00402910(uVar3);\n        return 0x1;\n    }\ncode_r0x00402d39:\n    iVar7 = fcn.004040e0(arg_8h, &s);\n    puVar6 = var_ch;\n    if (iVar7 == 0) {\n        puVar6 = NULL;\n    }\n    if ((puVar6 != NULL) && (puVar5 = fcn.00404430(),  puVar5 == NULL)) {\n        var_ch = NULL;\n        puVar6 = puVar5;\n    }\n    if (puVar6 == NULL) {\n        puVar6 = fcn.00403d80(arg_8h, 0);\n        var_ch = puVar6;\n    }\n    bVar10 = puVar6 == NULL;\n    piVar1 = puVar6;\n    if (!bVar10) {\n        fcn.00402910();\n        piVar1 = &iStack568;\n    }\n    bVar13 = !bVar10 && SCARRY4(&stack0xfffffdc4, 4);\n    if (((bVar10 || *0x10 == 0x238) || bVar13 != piVar1 < 0) || ((!bVar10 && *0x10 != 0x238) && bVar13 == piVar1 < 0)) {\n        (*_sym.imp.KERNEL32.dll_Sleep)();\n    }\n    (*_sym.imp.KERNEL32.dll_WinExec)(0x410584);\n    return puVar6;\n}\n",
        "token_count": 1580
    },
    "00403900": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403922) overlaps instruction at (ram,0x00403920)\n// \n// WARNING: Removing unreachable block (ram,0x00403914)\n\nuint fcn.00403900(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EDI;\n    \n    iVar1 = fcn.00402090(0x410518);\n    if (iVar1 == -1) {\n        return 0;\n    }\n    *(unaff_EDI + 0x50) = *(unaff_EDI + 0x50) - *0x10;\n    (*_sym.imp.KERNEL32.dll_CloseHandle)();\n    return 1;\n}\n",
        "token_count": 152
    },
    "00404170": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004041af) overlaps instruction at (ram,0x004041a6)\n// \n\nint32_t __cdecl fcn.00404170(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    bool bVar3;\n    int32_t iVar4;\n    \n    iVar4 = unaff_EDI;\n    iVar2 = (*_sym.imp.MSVCRT.dll__access)(arg_8h, 0);\n    bVar3 = iVar2 != -1;\n    if (iVar2 != -1) {\n        if ((bVar3) || (!bVar3)) {\n            bVar3 = false;\n            iVar2 = 0;\n            unaff_EDI = iVar4;\n        }\n        *(unaff_ESI + 0x43d1773a) = *(unaff_ESI + 0x43d1773a) ^ 0x3327e95e;\n        uVar1 = *(unaff_EDI + 0x5b);\n        *(unaff_EDI + 0x5b) = uVar1 >> 2 | uVar1 << 7;\n        return iVar2 + 0x7c8ecb0d + !bVar3;\n    }\n    return 1;\n}\n",
        "token_count": 304
    },
    "004044a0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00404531) overlaps instruction at (ram,0x0040452c)\n// \n// WARNING: Removing unreachable block (ram,0x00404560)\n\nuint __cdecl fcn.004044a0(uint arg_8h)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint *puVar5;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_108h;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    iVar3 = (**0x41fa44)(2, 0);\n    if (iVar3 == -1) {\n        return 0xffffffff;\n    }\n    var_12ch = 0x128;\n    puVar5 = &var_128h;\n    for (iVar4 = 0x49; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    iVar4 = (**0x41fa48)(iVar3, &var_12ch);\n    pcVar2 = _sym.imp.MSVCRT.dll__stricmp;\n    uVar1 = extraout_ECX;\n    do {\n        if (iVar4 == 0) {\ncode_r0x00404578:\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n            return var_4h;\n        }\n        if ((0 < iVar4) && (iVar4 < 1)) {\n            *(iVar4 + -0x72c625aa) = *(iVar4 + -0x72c625aa) ^ uVar1;\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        iVar4 = (*pcVar2)(&var_108h, arg_8h);\n        if (iVar4 == 0) {\n    // WARNING: Bad instruction - Truncating control flow here\n            var_4h = var_124h;\n            goto code_r0x00404578;\n        }\n        iVar4 = (**0x41fa4c)(iVar3, &var_12ch);\n        uVar1 = extraout_ECX_00;\n    } while( true );\n}\n",
        "token_count": 542
    },
    "004035f0": {
        "rules": [
            "PEB access/35f28d23090149119036cdb16976bf66"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004036b9) overlaps instruction at (ram,0x004036b6)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t __cdecl\nfcn.004035f0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar var_10ch;\n    uint var_10bh;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00403470(arg_18h, arg_1ch, arg_8h, 0x20, arg_20h + 0x20);\n    fcn.00403470(arg_18h, arg_1ch, arg_ch, 0x20, arg_20h + 0x60);\n    fcn.00403470(arg_18h, arg_1ch, arg_10h, 0x20, arg_20h + 0xa0);\n    fcn.00403470(arg_18h, arg_1ch, arg_14h, 0x20, arg_20h + 0xe0);\n    if ((*0x10 != 0x11c) && (*0x10 == 0x11c)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    iVar1 = fcn.004035a0();\n    if (iVar1 == -1) {\n        iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n        *(arg_20h + 0x120) = iVar1 % 5;\n    }\n    else {\n        *(arg_20h + 0x120) = iVar1;\n    }\n    var_10ch = 0;\n    puVar2 = &var_10bh;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    var_4h = 0x104;\n    *(puVar2 + 2) = 0;\n    iVar1 = fcn.00402920(0x80000001, 0x4107a4, 0x4107d0, &var_8h, &var_10ch, &var_4h);\n    if (iVar1 != 0) {\n        iVar1 = (*_sym.imp.MSVCRT.dll__stricmp)(*0x10 + -0x110, 0x20);\n        if (iVar1 == 0) {\n            iVar1 = 0;\n            *(arg_20h + 0x120) = *(arg_20h + 0x120) | 0x80;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 678
    },
    "004042d0": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040433f) overlaps instruction at (ram,0x0040433e)\n// \n// WARNING: Removing unreachable block (ram,0x0040433c)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.004042d0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    code *pcVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uchar var_24h;\n    uint var_23h;\n    uint *var_4h;\n    \n    var_4h = fcn.004033f0(arg_18h, arg_1ch, 0x41055c, 7);\n    pcVar1 = _sym.imp.MSVCRT.dll_rand;\n    if (var_4h != NULL) {\n        var_24h = 0;\n        puVar5 = &var_23h;\n        for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar5 = 0;\n            puVar5 = puVar5 + 1;\n        }\n        *puVar5 = 0;\n        *(puVar5 + 2) = 0;\n        uVar4 = 0;\n        do {\n            uVar2 = (*pcVar1)();\n            (&var_24h)[uVar4] = uVar2;\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < 0x20);\n        puVar5 = &var_24h;\n        puVar6 = var_4h;\n        for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar6 = *puVar5;\n            puVar5 = puVar5 + 1;\n            puVar6 = puVar6 + 1;\n        }\n        fcn.004035f0(arg_8h, arg_ch, arg_10h, arg_14h, &var_24h, 0x20, var_4h);\n        fcn.00403f20(arg_18h, arg_1ch);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 539
    },
    "null": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "004010c0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "set registry value"
        ],
        "decompiled_code": "\nbool fcn.004010c0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    char *pvData;\n    \n    pvData = NULL;\n    iVar2 = fcn.00403020(&pvData);\n    if (iVar2 == 0) {\n        return false;\n    }\n    if (pvData == NULL) {\n        return false;\n    }\n    uVar3 = 0xffffffff;\n    pcVar4 = pvData;\n    do {\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    iVar2 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x41070c, 0x41074c, 1, pvData, ~uVar3 - 1);\n    return iVar2 == 0;\n}\n",
        "token_count": 235
    },
    "004028e0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004028e0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00403d80(arg_8h, 1);\n    return iVar1 != 0;\n}\n",
        "token_count": 54
    },
    "00402e30": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encode data using XOR"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402e30(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (arg_ch != 0) {\n        do {\n            iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n            *(uVar2 + arg_8h) = iVar1 % 0x1a + 'a';\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < arg_ch);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "00403020": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040308c) overlaps instruction at (ram,0x0040308b)\n// \n// WARNING: Removing unreachable block (ram,0x0040307c)\n\nuint __cdecl fcn.00403020(uint arg_8h)\n\n{\n    uint uVar1;\n    uint in_EAX;\n    int32_t iVar2;\n    ushort in_DX;\n    uint *unaff_EDI;\n    uint var_31ch;\n    uint var_218h;\n    uint var_114h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*0x10 != 0x320) && (*0x10 == 0x320)) {\n        uVar1 = in(in_DX);\n        *unaff_EDI = uVar1;\n        if (&stack0xfffffcd4 < 1) {\n            return in_EAX;\n        }\n    }\n    func_0x51403059();\n    iVar2 = (*_sym.imp.ADVAPI32.dll_GetUserNameA)();\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar2 = (*_sym.imp.ADVAPI32.dll_LookupAccountNameA)();\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar2 = (*_sym.imp.ADVAPI32.dll_ConvertSidToStringSidA)();\n    if (iVar2 != 0) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 334
    },
    "004033f0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040344a) overlaps instruction at (ram,0x00403449)\n// \n\nuint8_t * __cdecl fcn.004033f0(uint8_t *arg_8h, int32_t arg_ch, uint arg_10h, uint8_t *arg_14h)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint8_t *in_ECX;\n    uint8_t *puVar3;\n    uint32_t *unaff_EBX;\n    uint *puVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint8_t *puVar7;\n    bool bVar8;\n    bool bVar9;\n    uchar auStack24179 [24155];\n    uint auStack24 [2];\n    \n    puVar4 = &stack0xfffffffc;\n    puVar3 = arg_8h + (arg_ch - arg_14h);\n    puVar6 = &stack0xfffffffc;\n    if ((puVar3 != NULL) && (puVar6 = &stack0xfffffffc,  puVar3 == NULL)) {\n        puVar5 = auStack24 + 1;\n        puVar6 = auStack24 + 1;\n        cVar1 = '\\x10';\n        do {\n            puVar4 = puVar4 + -1;\n            puVar5 = puVar5 + -1;\n            *puVar5 = *puVar4;\n            cVar1 = cVar1 + -1;\n        } while ('\\0' < cVar1);\n    }\n    if (arg_14h != NULL) {\n        bVar8 = *unaff_EBX < 0xffffffc2;\n        bVar9 = *unaff_EBX == 0xffffffc2;\n        if (*unaff_EBX < 0xffffffc3) {\n            puVar7 = *(puVar6 + 0x10);\n            do {\n                if ((bVar8 || bVar9) || (!bVar8 && !bVar9)) {\n                    in_ECX = in_ECX & 0xffffff00 | *arg_8h;\n                    unaff_EBX = unaff_EBX & 0xffffff00 | *puVar7;\n                    if (*arg_8h == *puVar7) {\n                        in_ECX = arg_14h + -1;\n                        arg_14h = puVar7 + 1;\n                        goto code_r0x00403449;\n                    }\n                }\n                else {\n                    uVar2 = in_ECX;\n                    in_ECX = in_ECX & 0xffff0000 | CONCAT11((in_ECX >> 8) - *unaff_EBX, uVar2);\n                    *(arg_14h + -0x76) = *(arg_14h + -0x76) - auStack24179;\n                    puVar3[0x75cb3a1e] = puVar3[0x75cb3a1e] | uVar2;\n                    bVar8 = SCARRY4(arg_8h, -0x7200b073);\n                    arg_8h = arg_8h + -0x7200b073;\n                    bVar8 = bVar8 != SCARRY4(arg_8h, 0);\n                    if (arg_8h == NULL || bVar8 != arg_8h < 0) {\n                        if (!bVar8) goto code_r0x0040344c;\n                        bVar8 = *puVar7 == *arg_14h;\n                    }\n                    else {\ncode_r0x00403449:\n                        puVar7 = arg_8h + 1;\ncode_r0x0040344c:\n                        unaff_EBX = NULL;\n                        bVar8 = true;\n                        do {\n                            if (in_ECX == NULL) break;\n                            in_ECX = in_ECX + -1;\n                            bVar8 = *puVar7 == *arg_14h;\n                            puVar7 = puVar7 + 1;\n                            arg_14h = arg_14h + 1;\n                        } while (bVar8);\n                    }\n                    if (bVar8) {\n                        return arg_8h;\n                    }\n                    arg_14h = *(puVar6 + 0x14);\n                    puVar7 = *(puVar6 + 0x10);\n                }\n                arg_8h = arg_8h + 1;\n                bVar8 = arg_8h < puVar3;\n                bVar9 = arg_8h == puVar3;\n            } while (arg_8h <= puVar3);\n        }\n        arg_8h = NULL;\n    }\n    return arg_8h;\n}\n",
        "token_count": 1019
    },
    "00403470": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403501) overlaps instruction at (ram,0x004034ff)\n// \n// WARNING: Removing unreachable block (ram,0x0040356c)\n// WARNING: Removing unreachable block (ram,0x004034ef)\n// WARNING: Removing unreachable block (ram,0x004034f3)\n// WARNING: Removing unreachable block (ram,0x004034f6)\n// WARNING: Removing unreachable block (ram,0x004034fa)\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00403470(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    uint8_t uVar1;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_10h._0_1_ = arg_14h * '\\x02';\n    var_8h = 0;\n    if (0 < arg_14h) {\n        var_ch = 1;\n        do {\n            uVar1 = *(var_ch % arg_ch + arg_8h);\n            *(arg_18h + -1 + var_ch) = var_10h ^ *(var_8h + arg_10h) ^ *((var_ch + -1) % arg_ch + arg_8h);\n            *(var_ch + arg_18h) = var_10h ^ uVar1;\n            var_8h = var_8h + 1;\n            var_ch = var_ch + 2;\n        } while (var_8h < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 413
    },
    "00403d10": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00403d10(uint hSCManager, uint lpServiceName)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)();\n    if (iVar1 != 0) {\n        uVar2 = (*_sym.imp.ADVAPI32.dll_DeleteService)();\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar1);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 126
    },
    "004040e0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004040c2) overlaps instruction at (ram,0x004040c1)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.004040e0(code *arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    code *hSCManager;\n    uint uVar3;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    char *extraout_EDX;\n    char *pcVar4;\n    char *extraout_EDX_00;\n    code *unaff_EBX;\n    uint8_t in_AF;\n    bool bVar5;\n    char cVar6;\n    char cVar7;\n    uint64_t uVar8;\n    code *pcVar9;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_4h;\n    \n    uStack24 = 0xf003f;\n    uStack28 = 0;\n    uStack32 = 0;\n    uVar8 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)();\n    hSCManager = uVar8;\n    cVar7 = '\\0';\n    cVar6 = '\\0';\n    bVar5 = (uVar8 & 0x120000000000) == 0;\n    pcVar9 = hSCManager;\n    uVar1 = fcn.00403d10(hSCManager, arg_8h);\n    if ((!bVar5 && cVar7 == cVar6) && (bVar5 || cVar7 != cVar6)) {\n        in_AF = 9 < (uVar1 & 0xf) | in_AF;\n        iVar2 = extraout_ECX_00;\n        pcVar4 = extraout_EDX_00;\n        if (extraout_ECX_00 != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        while( true ) {\n            *(iVar2 + 0x40) = *(iVar2 + 0x40) + pcVar4 + in_AF;\n            *pcVar4 = *pcVar4 + (iVar2 >> 8);\n            iVar2 = (*hSCManager)(&uStack32, 0, 0, pcVar9);\n            in_AF = 0;\n            if (iVar2 == 0) break;\n            (*arg_8h)(&uStack32);\n            (*unaff_EBX)();\n            (*_sym.imp.USER32.dll_DispatchMessageA)(&uStack32);\n            pcVar9 = NULL;\n            iVar2 = extraout_ECX;\n            pcVar4 = extraout_EDX;\n        }\n        return 0;\n    }\n    uVar3 = fcn.00402030(hSCManager, arg_8h, arg_ch);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(hSCManager);\n    return uVar3;\n}\n",
        "token_count": 661
    },
    "00404250": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404291) overlaps instruction at (ram,0x0040428e)\n// \n\nvoid __cdecl fcn.00404250(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint16_t uVar1;\n    uint in_ECX;\n    uint32_t extraout_ECX;\n    uint16_t unaff_BX;\n    bool bVar2;\n    \n    if (arg_ch == 1) {\n        uVar1 = in_ECX & 0xff00 | in_ECX ^ in_ECX >> 8 | 0x3d00 | unaff_BX;\n        bVar2 = uVar1 >> 8 == uVar1;\n        fcn.004014b0();\n        if (!bVar2) {\n            if (bVar2) {\n    // WARNING: Could not recover jumptable at 0x00404295. Too many branches\n    // WARNING: Treating indirect jump as call\n                (**(((extraout_ECX >> 8 & 0xffff00) << 8 | extraout_ECX & 0xffff) + 0x41fa74))();\n                return;\n            }\n        }\n        fcn.00403a00();\n        if (*0x41fa74 == 0) {\n            (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n            fcn.004021a0();\n        }\n    }\n    (*_sym.imp.USER32.dll_DefWindowProcA)(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 353
    },
    "004047a0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004047a0(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar2 = &var_67h;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fcn.004045c0(&var_68h, &var_4h);\n    fcn.00402400(&var_68h, var_4h, 0x410a34, 0xf000);\n    *arg_8h = 0x410a34;\n    *arg_ch = 0xf000;\n    return;\n}\n",
        "token_count": 239
    },
    "00401fd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040201f) overlaps instruction at (ram,0x0040201a)\n// \n\nuint __cdecl fcn.00401fd0(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    char *pcVar2;\n    bool bVar3;\n    ulong uVar4;\n    \n    uVar4 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                      (0, 0x406010, 0x41fa50, 0xcf0000, 0x80000000, 0, 0x80000000, 0, 0, 0, arg_8h, 0);\n    pcVar2 = uVar4 >> 0x20;\n    uVar1 = uVar4;\n    bVar3 = (POPCOUNT(uVar1 & 0xff) & 1U) == 0;\n    if (uVar1 == 0) {\n        return 0;\n    }\n    if ((bVar3) || (!bVar3)) {\n        (*_sym.imp.USER32.dll_ShowWindow)(uVar1, 0);\n    }\n    else {\n        *pcVar2 = *pcVar2 + uVar4;\n    }\n    return 1;\n}\n",
        "token_count": 277
    },
    "00402400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040243d) overlaps instruction at (ram,0x0040243c)\n// \n// WARNING: Removing unreachable block (ram,0x0040243d)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid fcn.00402400(int32_t param_1, uint32_t param_2, int32_t param_3, uint32_t param_4)\n\n{\n    uint32_t uVar1;\n    uint32_t *unaff_EDI;\n    uint32_t *puVar2;\n    bool bVar3;\n    uint32_t uStack12;\n    \n    bVar3 = false;\n    uStack12 = 0;\n    uVar1 = param_4;\n    if (param_4 != 0) {\n        do {\n            puVar2 = unaff_EDI;\n            if (bVar3 == uVar1 < 0) {\n                if (bVar3 != uVar1 < 0) {\n                    out(0xc4, param_4);\n                    puVar2 = unaff_EDI + 1;\n                    *unaff_EDI = param_4;\n                }\n            }\n            *(uStack12 + param_3) = *(uStack12 + param_3) ^ *(uStack12 % param_2 + param_1);\n            uStack12 = uStack12 + 1;\n            bVar3 = SBORROW4(uStack12, param_4);\n            uVar1 = uStack12 - param_4;\n            unaff_EDI = puVar2;\n        } while (uStack12 < param_4);\n    }\n    return;\n}\n",
        "token_count": 361
    },
    "00402600": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402658) overlaps instruction at (ram,0x00402656)\n// \n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x004026ab)\n// WARNING: Removing unreachable block (ram,0x004026d6)\n// WARNING: Removing unreachable block (ram,0x004026dc)\n// WARNING: Removing unreachable block (ram,0x004026e8)\n// WARNING: Removing unreachable block (ram,0x004026ec)\n// WARNING: Removing unreachable block (ram,0x004026f6)\n// WARNING: Removing unreachable block (ram,0x004026f7)\n// WARNING: Removing unreachable block (ram,0x00402702)\n// WARNING: Removing unreachable block (ram,0x00402735)\n// WARNING: Removing unreachable block (ram,0x0040270b)\n// WARNING: Removing unreachable block (ram,0x0040270d)\n// WARNING: Removing unreachable block (ram,0x00402714)\n// WARNING: Removing unreachable block (ram,0x0040271a)\n// WARNING: Removing unreachable block (ram,0x00402722)\n// WARNING: Removing unreachable block (ram,0x00402729)\n// WARNING: Removing unreachable block (ram,0x0040272d)\n// WARNING: Removing unreachable block (ram,0x00402743)\n// WARNING: Removing unreachable block (ram,0x00402797)\n// WARNING: Removing unreachable block (ram,0x0040279d)\n// WARNING: Removing unreachable block (ram,0x004027ad)\n// WARNING: Removing unreachable block (ram,0x004027c1)\n// WARNING: Removing unreachable block (ram,0x004027cd)\n// WARNING: Removing unreachable block (ram,0x004027c9)\n// WARNING: Removing unreachable block (ram,0x004027d1)\n// WARNING: Removing unreachable block (ram,0x004027f1)\n// WARNING: Removing unreachable block (ram,0x004027fa)\n// WARNING: Removing unreachable block (ram,0x00402800)\n// WARNING: Removing unreachable block (ram,0x00402806)\n// WARNING: Removing unreachable block (ram,0x0040280f)\n// WARNING: Removing unreachable block (ram,0x0040269b)\n// WARNING: Removing unreachable block (ram,0x0040269e)\n// WARNING: Removing unreachable block (ram,0x004026ba)\n// WARNING: Removing unreachable block (ram,0x00402824)\n// WARNING: Removing unreachable block (ram,0x0040281f)\n// WARNING: Removing unreachable block (ram,0x00402630)\n// WARNING: Removing unreachable block (ram,0x00402635)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nulong fcn.00402600(uint *param_1, uint *param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint extraout_ECX;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint *puVar3;\n    char cVar4;\n    char cVar5;\n    ulong uVar6;\n    uchar *puStack140;\n    uint uStack136;\n    uint uStack132;\n    uchar uStack108;\n    uint uStack107;\n    uint uStack8;\n    \n    uStack8 = 0;\n    uStack108 = 0;\n    puVar3 = &stack0xffffff95;\n    for (iVar2 = 0x18; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    cVar5 = '\\0';\n    cVar4 = '\\0';\n    uVar6 = fcn.00402690();\n    if ((cVar5 != cVar4) || (cVar5 == cVar4)) {\n        uStack136 = uStack8;\n        uStack132 = 0x406014;\n        puStack140 = &stack0xffffff94;\n        uVar6 = CONCAT44(uStack8, puStack140);\n    }\n    uVar1 = fcn.00402400(puVar3 + 3, unaff_ESI, &stack0xfffffffc, &stack0xffffff74, unaff_EBX, uVar6, extraout_ECX, \n                         uVar6 >> 0x20);\n    *param_1 = 0x406014;\n    *param_2 = 0xa500;\n    return CONCAT44(param_2, uVar1);\n}\n",
        "token_count": 1022
    },
    "004032b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00403333) overlaps instruction at (ram,0x00403331)\n// \n// WARNING: Removing unreachable block (ram,0x004032de)\n// WARNING: Removing unreachable block (ram,0x004032e6)\n// WARNING: Removing unreachable block (ram,0x004033bf)\n// WARNING: Removing unreachable block (ram,0x004033c1)\n// WARNING: Removing unreachable block (ram,0x004033a4)\n\nbool fcn.004032b0(void)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uchar *puVar5;\n    uint *puVar6;\n    bool bVar7;\n    uint var_210h;\n    uchar var_10ch;\n    uint var_10bh;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar4 = &stack0xfffffffc;\n    var_10ch = 0;\n    var_4h = 0x104;\n    puVar6 = &var_10bh;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = 0;\n    *(puVar6 + 2) = 0;\n    iVar3 = fcn.00402920(0x80000002, 0x410988, 0x4109c8, &var_8h, &var_210h, &var_4h);\n    if (iVar3 == 0) {\n        return false;\n    }\n    if ((-1 < iVar3) && (-1 >= iVar3)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    iVar3 = (*_sym.imp.MSVCRT.dll__access)(&var_210h);\n    bVar7 = iVar3 == -1;\n    if (bVar7) {\n        return false;\n    }\n    puVar5 = &stack0xfffffffc;\n    if ((!bVar7) && (puVar5 = &stack0xfffffffc,  bVar7)) {\n        puVar6 = &stack0xfffffdd8;\n        puVar5 = &stack0xfffffdd8;\n        cVar1 = '\\x10';\n        do {\n            puVar4 = puVar4 + -1;\n            puVar6 = puVar6 + -1;\n            *puVar6 = *puVar4;\n            cVar1 = cVar1 + -1;\n        } while ('\\0' < cVar1);\n    }\n    iVar3 = fcn.00403160(puVar5 + -0x210, puVar5 + -0x10c);\n    pcVar2 = _sym.imp.MSVCRT.dll_strstr;\n    if (iVar3 == 0) {\n        return false;\n    }\n    iVar3 = (*_sym.imp.MSVCRT.dll_strstr)(puVar5 + -0x10c, 0x4109e0);\n    if (iVar3 == 0) {\n    // WARNING: Bad instruction - Truncating control flow here\n        iVar3 = (*pcVar2)(puVar5 + -0x10c, 0x4109e4);\n        return iVar3 != 0;\n    }\n    return true;\n}\n",
        "token_count": 771
    },
    "00403ba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "set registry value",
            "delete registry key"
        ],
        "decompiled_code": "\nvoid fcn.00403ba0(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint uStack332;\n    uint uStack328;\n    uint uStack324;\n    uint uStack320;\n    uint uStack316;\n    uint uStack312;\n    uint uStack308;\n    uint uStack304;\n    uchar *puStack300;\n    uchar *puStack296;\n    uchar uStack276;\n    uint uStack275;\n    uint uStack271;\n    uint uStack267;\n    ushort uStack263;\n    uchar uStack261;\n    uchar uStack260;\n    uint uStack259;\n    \n    uStack275 = 0;\n    uStack271 = 0;\n    uStack267 = 0;\n    uStack276 = 0;\n    uStack263 = 0;\n    uStack260 = 0;\n    uStack261 = 0;\n    puVar4 = &stack0xfffffefd;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = 0;\n    *(puVar4 + 2) = 0;\n    fcn.00403110();\n    puStack296 = 0x403bea;\n    fcn.00402e30(&stack0xfffffeec, 5);\n    pcVar1 = _sym.imp.MSVCRT.dll_sprintf;\n    puStack296 = &stack0xfffffefc;\n    puStack300 = 0x403c04;\n    (*_sym.imp.MSVCRT.dll_sprintf)();\n    puStack296 = 0x403c17;\n    (*_sym.imp.SHLWAPI.dll_SHDeleteKeyA)();\n    pcVar2 = _sym.imp.SHLWAPI.dll_SHSetValueA;\n    puStack300 = &stack0xfffffee4;\n    puStack296 = 0x10;\n    uStack304 = 1;\n    uStack308 = 0x41fa50;\n    uStack312 = 0x410870;\n    uStack316 = 0x80000000;\n    uStack320 = 0x403c37;\n    (*_sym.imp.SHLWAPI.dll_SHSetValueA)();\n    uStack320 = 0x4b;\n    uStack324 = 0x4108a4;\n    uStack328 = 1;\n    uStack332 = 0x41fa50;\n    (*pcVar2)(0x80000000, &stack0xfffffedc);\n    (*pcVar1)(&stack0xfffffec4, 0x4108f0, &stack0xfffffeb4);\n    (*pcVar2)(0x80000000, &stack0xfffffec4, 0x41092c, 1, 0x410934, 0x14);\n    return;\n}\n",
        "token_count": 652
    },
    "00403c90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open file",
            "write file on Windows"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403cdc) overlaps instruction at (ram,0x00403cda)\n// \n\nuint __cdecl fcn.00403c90(uint filename, uint mode, uint ptr, uint nitems)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    bool bVar2;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_fopen)(filename, mode);\n    if (iVar1 != 0) {\n        bVar2 = iVar1 - extraout_ECX < 0;\n        (*_sym.imp.MSVCRT.dll_fwrite)(ptr, 1, nitems, iVar1);\n        if ((bVar2) || (!bVar2)) {\n            (*_sym.imp.MSVCRT.dll_fflush)(iVar1);\n        }\n        (*_sym.imp.MSVCRT.dll_fclose)(iVar1);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 208
    },
    "00403f20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403f20(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    uVar1 = arg_ch;\n    iVar2 = fcn.004024b0(arg_8h, arg_ch, &var_4h, &arg_ch);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    *(iVar2 + 0x58) = arg_ch;\n    fcn.004024b0(arg_8h, uVar1, &var_4h, &arg_ch);\n    return 1;\n}\n",
        "token_count": 144
    },
    "004041c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404230)\n\nvoid __cdecl fcn.004041c0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (0 < arg_14h) {\n        do {\n            *(iVar1 + arg_10h) = arg_14h ^ *(iVar1 + arg_10h) ^ *(iVar1 % arg_ch + arg_8h);\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "00404430": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404453) overlaps instruction at (ram,0x00404452)\n// \n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x00404560)\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00404430(int32_t param_1, uint param_2, uint param_3)\n\n{\n    uint8_t *puVar1;\n    uint uVar2;\n    code *pcVar3;\n    int32_t in_EAX;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint uVar6;\n    uint8_t uVar8;\n    int32_t extraout_ECX;\n    int32_t iVar7;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint8_t *puVar9;\n    uint32_t unaff_EBP;\n    uint unaff_ESI;\n    int32_t *unaff_EDI;\n    int32_t *piVar10;\n    uint *puVar11;\n    bool bVar12;\n    bool in_ZF;\n    char cVar13;\n    ulong uVar14;\n    uint32_t in_stack_ffffffff;\n    uint32_t arg_ch;\n    uint uStackY304;\n    int32_t aiStackY300 [8];\n    uchar auStackY268 [235];\n    uint uStackY33;\n    uchar *puStackY29;\n    uchar *puStackY25;\n    uint uStackY21;\n    uchar *puStackY17;\n    uint uStackY13;\n    uint uStackY9;\n    uchar uVar15;\n    \n    arg_ch = in_stack_ffffffff & 0xffffff00 | unaff_EBP >> 0x18;\n    uVar6 = CONCAT31(unaff_EBP, unaff_ESI >> 0x18);\n    uStackY9._0_1_ = unaff_EDI >> 0x18;\n    uStackY9 = CONCAT31(unaff_ESI, uStackY9);\n    piVar10 = unaff_EDI;\n    uVar14 = CONCAT44(param_2, in_EAX);\n    if (in_ZF) goto code_r0x00404453;\n    uStackY13 = CONCAT31(unaff_EDI, uStackY9);\n    uVar14 = CONCAT44(param_2, in_EAX);\n    if (!in_ZF) goto code_r0x00404453;\n    piVar10 = unaff_EDI + 1;\n    iVar7 = in(param_2);\n    *unaff_EDI = iVar7;\n    if (0 < &stack0xfffffff4) {\n        while( true ) {\n            puVar9 = uVar14 >> 0x20;\n            uVar4 = uVar14 ^ 0xdee0ed6d;\n            puVar1 = (uVar4 & 0xffff0000 | uVar4 + (uVar4 >> 8) * -0x31) + 0x3f;\n            uVar8 = param_1 >> 8;\n            *puVar1 = *puVar1 ^ uVar8;\n            *piVar10 = *piVar10 + param_1;\n            bVar12 = CARRY1(*puVar9, uVar8);\n            *puVar9 = *puVar9 + uVar8;\n            cVar13 = *puVar9 == 0;\n            puStackY17 = NULL;\n            uStackY21 = 0x404462;\n            uVar14 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)();\n            puVar5 = uVar14;\n            puVar11 = puVar5;\n            if (((bVar12) || (!bVar12)) ||\n               (param_1 = extraout_ECX + -1,  puVar11 = uStackY13,  param_1 == 0 || cVar13 == '\\0')) break;\ncode_r0x00404453:\n            uStackY9 = 0xf003f;\n            uStackY13 = NULL;\n        }\n        uStackY13 = puVar11;\n        uVar2 = *puVar5;\n        *piVar10 = puVar5 + 1;\n        *(*0x9750e2b5 + 0x56) = *(*0x9750e2b5 + 0x56) | uVar2 >> 0x1f;\n        uStackY9 = 0x404487;\n        uVar6 = fcn.00403fb0(uVar6, arg_ch);\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)();\n        return uVar6;\n    }\n    if (in_EAX == -1) {\n        return 0xffffffff;\n    }\n    uStackY304 = 0x128;\n    puVar11 = &stack0xfffffed4;\n    for (iVar7 = 0x49; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar11 = 0;\n        puVar11 = puVar11 + 1;\n    }\n    puStackY17 = &stack0xfffffed0;\n    puStackY25 = 0x404512;\n    iVar7 = (**0x41fa48)();\n    pcVar3 = _sym.imp.MSVCRT.dll__stricmp;\n    uVar15 = uVar6;\n    uVar2 = extraout_ECX_00;\n    do {\n        if (iVar7 == 0) {\ncode_r0x00404578:\n            puStackY29 = 0x40457f;\n            (*_sym.imp.KERNEL32.dll_CloseHandle)();\n            return CONCAT13(uVar15, uStackY9._1_3_);\n        }\n        if ((0 < iVar7) && (iVar7 < 1)) {\n            *(iVar7 + -0x72c625aa) = *(iVar7 + -0x72c625aa) ^ uVar2;\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        puStackY29 = &stack0xfffffef4;\n        puStackY25 = param_3;\n        uStackY33 = 0x40453b;\n        iVar7 = (*pcVar3)();\n        if (iVar7 == 0) {\n    // WARNING: Bad instruction - Truncating control flow here\n            uStackY9 = uStackY9 & 0xff | aiStackY300[1] << 8;\n            uVar15 = aiStackY300[1] >> 0x18;\n            goto code_r0x00404578;\n        }\n        puStackY25 = &stack0xfffffed0;\n        uStackY33 = 0x404550;\n        iVar7 = (**0x41fa4c)();\n        uVar15 = uVar6;\n        uVar2 = extraout_ECX_01;\n    } while( true );\n}\n",
        "token_count": 1508
    },
    "00402090": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402090(uint arg_8h)\n\n{\n    (*_sym.imp.KERNEL32.dll_CreateFileA)(arg_8h, 0xc0000000, 1, 0, 3, 0x80, 0);\n    return;\n}\n",
        "token_count": 63
    },
    "00402170": {
        "rules": [
            "set registry value"
        ],
        "decompiled_code": "\nbool fcn.00402170(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x41070c, 0x410750, 4, &stack0x00000004, 4);\n    return iVar1 == 0;\n}\n",
        "token_count": 78
    },
    "00402030": {
        "rules": [
            "get service handle",
            "create service"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402030(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_CreateServiceA)(arg_8h, arg_ch, arg_ch, 0xf01ff, 1, 0, 1, arg_10h, 0, 0, 0, 0, 0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar1);\n    return 1;\n}\n",
        "token_count": 138
    }
}