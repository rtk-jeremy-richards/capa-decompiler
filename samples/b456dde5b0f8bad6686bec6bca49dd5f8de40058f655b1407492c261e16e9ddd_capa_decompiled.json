{
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00401180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00401180(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    uint64_t uVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    char *pcVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    ulong uVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    int64_t iVar12;\n    ulong *puVar13;\n    int64_t iVar14;\n    int64_t in_GS_OFFSET;\n    bool bVar15;\n    ulong auStack168 [7];\n    uint8_t uStack108;\n    uint16_t uStack104;\n    \n    puVar13 = auStack168;\n    for (iVar11 = 0xd; iVar11 != 0; iVar11 = iVar11 + -1) {\n        *puVar13 = 0;\n        puVar13 = puVar13 + 1;\n    }\n    if (*0x49e0c0 != 0) {\n        (*_sym.imp.KERNEL32.dll_GetStartupInfoA)(auStack168);\n    }\n    pcVar5 = _sym.imp.KERNEL32.dll_Sleep;\n    uVar10 = *(*(in_GS_OFFSET + 0x30) + 8);\n    while( true ) {\n        LOCK();\n        bVar15 = *0x49f510 == 0;\n        *0x49f510 = *0x49f510 ^ bVar15 * (*0x49f510 ^ uVar10);\n        uVar3 = !bVar15 * *0x49f510;\n        if (uVar3 == 0) break;\n        if (uVar10 == uVar3) {\n            bVar15 = true;\n            goto joined_r0x0040140e;\n        }\n        (*pcVar5)(1000);\n    }\n    bVar15 = false;\njoined_r0x0040140e:\n    if (*0x49f518 == 1) {\n        sub.msvcrt.dll__amsg_exit(0x1f);\n    }\n    else if (*0x49f518 == 0) {\n        *0x49f518 = 1;\n        sub.msvcrt.dll__initterm(0x4a2018);\n    }\n    else {\n        *0x49e004 = 1;\n    }\n    if (*0x49f518 == 1) {\n        sub.msvcrt.dll__initterm(0x4a2000);\n        *0x49f518 = 2;\n    }\n    if (!bVar15) {\n        *0x49f510 = 0;\n    }\n    if (*0x482f60 != NULL) {\n        (**0x482f60)(0);\n    }\n    fcn.0040ba70();\n    *0x49e100 = (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0x40b4b0);\n    fcn.0040b3c0();\n    func_0x0046b0f8();\n    fcn.0040bd90();\n    iVar4 = *0x49e028;\n    *0x49f4f0 = 0x400000;\n    pcVar6 = *_sym.imp.msvcrt.dll__acmdln;\n    if (pcVar6 != NULL) {\n        bVar15 = false;\n        do {\n            cVar2 = *pcVar6;\n            if (cVar2 < '!') {\n                *0x49f4f8 = pcVar6;\n                if (cVar2 == '\\0') break;\n                if (!bVar15) goto code_r0x004012d4;\n                bVar15 = true;\n            }\n            else if (cVar2 == '\\\"') {\n                bVar15 = bVar15 ^ 1;\n            }\n            pcVar6 = pcVar6 + 1;\n        } while( true );\n    }\n    goto code_r0x004012e7;\n    while (*pcVar6 != '\\0') {\ncode_r0x004012d4:\n        pcVar6 = pcVar6 + 1;\n        *0x49f4f8 = pcVar6;\n        if (' ' < *pcVar6) break;\n    }\ncode_r0x004012e7:\n    if ((*0x49e0c0 != 0) && (*0x46b000 = 10,  (uStack108 & 1) != 0)) {\n        *0x46b000 = uStack104;\n    }\n    iVar14 = (*0x49e028 + 1) * 8;\n    iVar7 = sub.msvcrt.dll_malloc(iVar14);\n    iVar11 = *0x49e020;\n    if (iVar4 < 1) {\n        iVar14 = 0;\n    }\n    else {\n        iVar12 = 0;\n        do {\n            iVar8 = sub.msvcrt.dll_strlen(*(iVar11 + iVar12 * 8));\n            uVar9 = sub.msvcrt.dll_malloc(iVar8 + 1);\n            *(iVar7 + iVar12 * 8) = uVar9;\n            iVar1 = iVar12 * 8;\n            iVar12 = iVar12 + 1;\n            sub.msvcrt.dll_memcpy(uVar9, *(iVar11 + iVar1), iVar8 + 1);\n        } while (iVar12 < iVar4);\n        iVar14 = iVar14 + -8;\n    }\n    *(iVar7 + iVar14) = 0;\n    *0x49e020 = iVar7;\n    fcn.0040be40();\n    iVar4 = *0x49e028;\n    *_sym.imp.msvcrt.dll___initenv = *0x49e018;\n    uVar10 = fcn.0046a750(iVar4, *0x49e020);\n    *0x49e00c = uVar10;\n    if (*0x49e008 != 0) {\n        if (*0x49e004 == 0) {\n            sub.msvcrt.dll__cexit();\n            uVar10 = *0x49e00c;\n        }\n        return uVar10;\n    }\n    sub.msvcrt.dll_exit(uVar10 & 0xffffffff);\n    *0x49e0c0 = 1;\n    fcn.0040be60();\n    uVar10 = fcn.00401180();\n    return uVar10;\n}\n",
        "token_count": 1393
    },
    "0040171e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.0040171e(int64_t arg1)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    ulong var_10h;\n    ulong var_b0h;\n    ulong var_a8h;\n    ulong *var_98h;\n    ulong var_90h;\n    ulong var_60h;\n    int32_t var_58h;\n    int32_t var_54h;\n    ulong var_50h;\n    ulong var_40h;\n    ulong var_38h;\n    ulong var_30h;\n    ulong var_28h;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_ch;\n    int32_t var_4h;\n    \n    iVar1 = *(arg1 + 0x18);\n    if (iVar1 == 0x10001) {\n        return 0x20;\n    }\n    if (iVar1 == 0x30001) {\n        if (*(arg1 + 0x58) == 1) {\n            var_a8h._0_4_ = *(arg1 + 0x58);\n            var_98h = &var_50h;\n            var_90h._0_4_ = 0x10;\n            (*_sym.imp.USER32.dll_SendMessageA)(*0x49e080, 0x102d, *(arg1 + 0x38), &var_b0h);\n            iVar1 = (*_sym.imp.msvcrt.dll__stricmp)(\"High\", &var_50h);\n            if (iVar1 == 0) {\n                *(arg1 + 0x50) = 0xbe;\n            }\n            else {\n                iVar1 = (*_sym.imp.msvcrt.dll__stricmp)(\"Done\", &var_50h);\n                if (iVar1 == 0) {\n                    *(arg1 + 0x50) = 0xa000;\n                }\n            }\n            return 0;\n        }\n        if (*(arg1 + 0x58) == 2) {\n            var_ch._0_4_ = *(arg1 + 0x48);\n            var_18h = *(arg1 + 0x20);\n            var_ch._4_4_ = *(arg1 + 0x54);\n            if ((var_ch._4_4_ == -1) || (var_ch._4_4_ == -0x1000000)) {\n                var_ch._4_4_ = 0xffffff;\n            }\n            var_20h = (*_sym.imp.GDI32.dll_CreateSolidBrush)(var_ch._4_4_);\n            var_28h = (*_sym.imp.GDI32.dll_CreateSolidBrush)(0xffbebe);\n            var_30h = (*_sym.imp.GDI32.dll_CreatePen)(0, 0, 0xffbebe);\n            var_38h = (*_sym.imp.GDI32.dll_SelectObject)(var_18h, var_20h);\n            (*_sym.imp.USER32.dll_FillRect)();\n            var_4h = (*(arg1 + 0x30) - *(arg1 + 0x28)) + -6;\n            if (var_4h < 0) {\n                var_4h = 0;\n            }\n            var_60h._0_4_ = *(arg1 + 0x28) + 3;\n            var_60h._4_4_ = *(arg1 + 0x2c) + 2;\n            var_58h = (var_4h * var_ch) / 100 + var_60h;\n            var_54h = *(arg1 + 0x34) + -2;\n            (*_sym.imp.GDI32.dll_SelectObject)(var_18h, var_28h);\n            (*_sym.imp.USER32.dll_FillRect)(var_18h, &var_60h, var_28h);\n            var_58h = *(arg1 + 0x30) + -3;\n            uVar2 = (*_sym.imp.GDI32.dll_GetStockObject)(5);\n            (*_sym.imp.GDI32.dll_SelectObject)(var_18h, uVar2);\n            var_40h = (*_sym.imp.GDI32.dll_SelectObject)(var_18h, var_30h);\n            (*_sym.imp.GDI32.dll_Rectangle)(var_18h, var_60h, var_60h._4_4_, var_58h, var_54h);\n            var_a8h._0_4_ = *(arg1 + 0x58);\n            var_98h = &var_50h;\n            var_90h._0_4_ = 0x10;\n            (*_sym.imp.USER32.dll_SendMessageA)(*0x49e080, 0x102d, *(arg1 + 0x38), &var_b0h);\n            (*_sym.imp.USER32.dll_DrawTextA)(var_18h, &var_50h, 0xffffffff, &var_60h, 0x8825);\n            (*_sym.imp.GDI32.dll_SelectObject)(var_18h, var_38h);\n            (*_sym.imp.GDI32.dll_DeleteObject)(var_28h);\n            (*_sym.imp.GDI32.dll_DeleteObject)(var_20h);\n            (*_sym.imp.GDI32.dll_SelectObject)(var_18h, var_40h);\n            (*_sym.imp.GDI32.dll_DeleteObject)(var_30h);\n            return 4;\n        }\n    }\n    else if (iVar1 == 1) {\n        return 0x20;\n    }\n    return 0;\n}\n",
        "token_count": 1236
    },
    "00401ad7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00401ad7(ulong param_1, uint32_t param_2, int64_t param_3, int64_t param_4)\n\n{\n    ulong uVar1;\n    ulong var_10h;\n    ulong var_18h;\n    ulong var_20h;\n    ulong var_28h;\n    ulong var_8h;\n    \n    if (param_2 == 5) {\n        if (((param_3 != 4) && (param_3 != 3)) && (param_3 != 1)) {\n            (*_sym.imp.USER32.dll_SetWindowPos)\n                      (*0x49e080, 0, 10, 10, (param_4 & 0xffff) - 0x14, (param_4 >> 0x10 & 0xffff) - 0x14, 4);\n        }\n    }\n    else if (param_2 < 6) {\n        if (param_2 == 1) {\n            *0x49e080 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                                  (0, \"SysListView32\", 0, 0x50810001, 0, 0, 0, 0, param_1, 1000, *0x49e070, 0);\n            fcn.004014f0();\n            return 0;\n        }\n    }\n    else {\n        if (param_2 == 0x10) {\n            (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n            return 0;\n        }\n        if (((param_2 == 0x4e) && (*(param_4 + 8) == 1000)) && (*(param_4 + 0x10) == -0xc)) {\n            uVar1 = fcn.0040171e(param_4);\n            return uVar1;\n        }\n    }\n    uVar1 = (*_sym.imp.USER32.dll_DefWindowProcA)(param_1, param_2, param_3, param_4);\n    return uVar1;\n}\n",
        "token_count": 447
    },
    "004029f4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004029f4(void)\n\n{\n    uchar *arg1;\n    ulong uVar1;\n    ulong var_20h;\n    ulong var_18h;\n    uchar *var_10h;\n    uint64_t var_8h;\n    \n    arg1 = fcn.00469670(800000000);\n    if (arg1 == NULL) {\n        uVar1 = 3;\n    }\n    else {\n        var_10h = arg1;\n        for (var_8h = 0; var_8h < 100000000; var_8h = var_8h + 1) {\n            *var_10h = var_8h;\n            var_10h = var_10h + 1;\n        }\n        fcn.00469650(arg1);\n        if (var_8h == 100000000) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = 3;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 221
    },
    "0046a750": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.0046a750(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    ulong var_10h;\n    ulong var_18h;\n    ulong var_28h;\n    ulong var_38h;\n    ulong var_40h;\n    ulong var_50h;\n    ulong var_bp_58h;\n    ulong c;\n    ulong var_68h;\n    ulong var_74h;\n    ulong var_a0h;\n    ulong var_a8h;\n    ulong var_b0h;\n    ulong var_b8h;\n    uchar auStack184 [16];\n    ulong uStack168;\n    uint uStack136;\n    code *pcStack128;\n    ulong uStack112;\n    ulong uStack96;\n    ulong uStack88;\n    char *pcStack72;\n    code *pcStack64;\n    ulong uStack56;\n    int64_t iStack48;\n    ulong var_bp_20h;\n    code *pcStack32;\n    ulong var_10h_2;\n    \n    iStack48 = 0x46a759;\n    fcn.0040be40();\n    puVar3 = &stack0xffffffffffffff78;\n    for (iVar2 = 9; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *0x49e070 = *0x49f4f0;\n    (*_sym.imp.COMCTL32.dll_InitCommonControls)();\n    uStack136 = 3;\n    pcStack128 = fcn.00401ad7;\n    uStack112 = *0x49e070;\n    uStack96 = (*_sym.imp.USER32.dll_LoadCursorA)(0, 0x7f00);\n    uStack88 = 0x10;\n    pcStack72 = \"main_win\";\n    (*_sym.imp.USER32.dll_RegisterClassA)(&stack0xffffffffffffff78);\n    *0x49e078 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                          (0, \"main_win\", \"Custom Draw Demo\", 0xcf0000, 0x80000000, 0x80000000, 500, 0x15e, 0, 0, \n                           *0x49e070, 0);\n    (*_sym.imp.USER32.dll_ShowWindow)(*0x49e078, 0);\n    iStack48 = fcn.00401c71();\n    var_bp_20h._4_4_ = 0;\n    var_bp_20h._0_4_ = 0;\n    uStack56 = 0;\n    pcStack64 = NULL;\n    *0x49e060 = fcn.0040294c;\n    *0x49e068 = fcn.00402981;\n    pcStack32 = fcn.004029bd;\n    iVar1 = fcn.004029f4();\n    if (iVar1 == 3) {\n        uStack168 = 0;\n    }\n    else {\n        if (0x12 < *(*(iStack48 + 0x20) + 0x70)) {\n            var_bp_20h._4_4_ = 0x7b;\n            var_bp_20h._0_4_ = 0x7c;\n            *0x46b010 = 0;\n            *0x46b014 = 0;\n            *0x46b018 = 0;\n            *0x46b020 = 0;\n            *0x46b01c = 0;\n            *0x46b024 = 0;\n            *0x49e068 = fcn.00401e15;\n            *0x49e060 = fcn.00401d90;\n            pcStack32 = 0x4025a6;\n        }\n        (*pcStack32)(var_bp_20h._4_4_, &stack0xffffffffffffffc0);\n        (*pcStack32)(var_bp_20h, &stack0xffffffffffffffc8);\n        sub.msvcrt.dll_memset(0x49e040, 0, 0x20);\n        *0x49e040 = 0;\n        *0x49e048 = 1;\n        *0x49e050 = uStack56;\n        (*pcStack64)(0x49e040);\n        while (iVar1 = (*_sym.imp.USER32.dll_GetMessageA)(&stack0xffffffffffffff48, 0, 0, 0),  iVar1 != 0) {\n            iVar1 = (*_sym.imp.USER32.dll_IsDialogMessageA)(*0x49e078, &stack0xffffffffffffff48);\n            if (iVar1 == 0) {\n                (*_sym.imp.USER32.dll_TranslateMessage)(&stack0xffffffffffffff48);\n                (*_sym.imp.USER32.dll_DispatchMessageA)(&stack0xffffffffffffff48);\n            }\n        }\n    }\n    return uStack168;\n}\n",
        "token_count": 1100
    },
    "00402d9d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00402d9d(ulong arg1, ulong arg2)\n\n{\n    ulong var_10h;\n    ulong var_18h;\n    \n    if ((arg1 == 1) && (arg2 == 0xffff)) {\n        fcn.00461270(0x49e088);\n        fcn.0040b1e0(fcn.00402d82);\n    }\n    return;\n}\n",
        "token_count": 92
    },
    "00402ee0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t ** fcn.00402ee0(int64_t arg1, int32_t **arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    char cVar3;\n    uint64_t arg2_00;\n    int32_t **ppiVar4;\n    \n    cVar3 = **(arg1 + 0x18);\n    ppiVar4 = arg2;\n    do {\n        if ((cVar3 == 'V') || (cVar3 == 'r')) {\n            *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n            if (cVar3 == 'r') {\n                *(arg1 + 0x50) = *(arg1 + 0x50) + 9;\n                arg2_00 = (-(arg3 == 0) & 0xfffffffd) + 0x1c;\n            }\n            else {\n                if (cVar3 != 'V') goto code_r0x00402f12;\n                *(arg1 + 0x50) = *(arg1 + 0x50) + 9;\n                arg2_00 = (-(arg3 == 0) & 0xfffffffd) + 0x1d;\n            }\n        }\n        else {\n            if (cVar3 != 'K') {\n                if (((arg3 == 0) && (cVar3 == 'F')) && (ppiVar4 != arg2)) {\n                    do {\n                        piVar2 = *arg2;\n                        iVar1 = *piVar2;\n                        if (iVar1 == 0x1a) {\n                            *piVar2 = 0x1d;\n                        }\n                        else if (iVar1 == 0x1b) {\n                            *piVar2 = 0x1e;\n                        }\n                        else if (iVar1 == 0x19) {\n                            *piVar2 = 0x1c;\n                        }\n                        arg2 = piVar2 + 2;\n                    } while (ppiVar4 != arg2);\n                }\n                return ppiVar4;\n            }\n            *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\ncode_r0x00402f12:\n            *(arg1 + 0x50) = *(arg1 + 0x50) + 6;\n            arg2_00 = (-(arg3 == 0) & 0xfffffffd) + 0x1e;\n        }\n        piVar2 = fcn.00402e10(arg1, arg2_00, 0, 0);\n        *ppiVar4 = piVar2;\n        if (piVar2 == NULL) {\n            return NULL;\n        }\n        ppiVar4 = piVar2 + 2;\n        cVar3 = **(arg1 + 0x18);\n    } while( true );\n}\n",
        "token_count": 635
    },
    "00403130": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * fcn.00403130(int64_t arg1, ulong arg2)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int64_t iVar3;\n    char cVar4;\n    int64_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    char *pcVar8;\n    uint *puVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    ulong uVar13;\n    \n    pcVar8 = *(arg1 + 0x18);\n    if (*pcVar8 != 'S') {\n        return NULL;\n    }\n    *(arg1 + 0x18) = pcVar8 + 1;\n    if (pcVar8[1] == '\\0') {\n        cVar4 = '\\0';\ncode_r0x00403152:\n        uVar10 = *(arg1 + 0x10) >> 3 & 1;\n        if ((arg2 != 0) && (uVar10 == '\\0')) {\n            uVar10 = **(arg1 + 0x18) + 0xbdU < 2;\n        }\n        pcVar8 = 0x482120;\n        do {\n            if (cVar4 == *pcVar8) {\n                iVar3 = *(pcVar8 + 0x28);\n                if (iVar3 == 0) {\n                    iVar11 = *(arg1 + 0x2c);\n                    iVar12 = *(arg1 + 0x28);\n                }\n                else {\n                    iVar12 = *(arg1 + 0x28);\n                    iVar11 = *(arg1 + 0x2c);\n                    uVar2 = *(pcVar8 + 0x30);\n                    puVar9 = NULL;\n                    if (iVar12 < iVar11) {\n                        iVar5 = iVar12;\n                        iVar12 = iVar12 + 1;\n                        *(arg1 + 0x28) = iVar12;\n                        puVar1 = *(arg1 + 0x20) + iVar5 * 0x18;\n                        if (puVar1 != NULL) {\n                            *puVar1 = 0x18;\n                            *(puVar1 + 2) = iVar3;\n                            puVar1[4] = uVar2;\n                            puVar9 = puVar1;\n                        }\n                    }\n                    *(arg1 + 0x48) = puVar9;\n                }\n                if (uVar10 == 0) {\n                    uVar13 = *(pcVar8 + 8);\n                    iVar7 = *(pcVar8 + 0x10);\n                }\n                else {\n                    uVar13 = *(pcVar8 + 0x18);\n                    iVar7 = *(pcVar8 + 0x20);\n                }\n                *(arg1 + 0x50) = *(arg1 + 0x50) + iVar7;\n                if (iVar11 <= iVar12) {\n                    return NULL;\n                }\n                *(arg1 + 0x28) = iVar12 + 1;\n                puVar9 = *(arg1 + 0x20) + iVar12 * 0x18;\n                if (puVar9 == NULL) {\n                    return NULL;\n                }\n                *puVar9 = 0x18;\n                *(puVar9 + 2) = uVar13;\n                puVar9[4] = iVar7;\n                return puVar9;\n            }\n            pcVar8 = pcVar8 + 0x38;\n        } while (pcVar8 != 0x4822a8);\n    }\n    else {\n        *(arg1 + 0x18) = pcVar8 + 2;\n        cVar4 = pcVar8[1];\n        iVar12 = cVar4;\n        if ((cVar4 - 0x30U < 10) || (cVar4 == '_')) {\n            if (cVar4 != '_') goto code_r0x004031b1;\n            uVar10 = 0;\n        }\n        else {\n            if (0x19 < cVar4 + 0xbfU) goto code_r0x00403152;\ncode_r0x004031b1:\n            uVar6 = 0;\n            do {\n                while( true ) {\n                    if (iVar12 - 0x30U < 10) {\n                        uVar10 = iVar12 + -0x30 + uVar6 * 0x24;\n                    }\n                    else {\n                        if (0x19 < iVar12 + 0xbfU) {\n                            return NULL;\n                        }\n                        uVar10 = iVar12 + -0x37 + uVar6 * 0x24;\n                    }\n                    if (uVar10 < uVar6) {\n                        return NULL;\n                    }\n                    pcVar8 = *(arg1 + 0x18);\n                    uVar6 = uVar10;\n                    if (*pcVar8 != '\\0') break;\n                    iVar12 = 0;\n                }\n                *(arg1 + 0x18) = pcVar8 + 1;\n                iVar12 = *pcVar8;\n            } while (*pcVar8 != '_');\n            uVar10 = uVar10 + 1;\n        }\n        if (uVar10 < *(arg1 + 0x38)) {\n            *(arg1 + 0x40) = *(arg1 + 0x40) + 1;\n            return *(*(arg1 + 0x30) + uVar10 * 8);\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 1194
    },
    "00403630": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00403630(int64_t arg1, ulong arg2)\n\n{\n    char *pcVar1;\n    \n    if (arg2 == 0) {\n        pcVar1 = *(arg1 + 0x18);\n        if (*pcVar1 == '\\0') {\n            return 0;\n        }\n        *(arg1 + 0x18) = pcVar1 + 1;\n        arg2._0_4_ = *pcVar1;\n    }\n    if (arg2 == 0x68) {\n        fcn.00403390(arg1 + 0x18);\ncode_r0x00403699:\n        if (**(arg1 + 0x18) == '_') {\n            *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n            return 1;\n        }\n        return 0;\n    }\n    if (arg2 == 0x76) {\n        fcn.00403390(arg1 + 0x18);\n        if (**(arg1 + 0x18) == '_') {\n            *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n            fcn.00403390(arg1 + 0x18);\n            goto code_r0x00403699;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 294
    },
    "004036b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * fcn.004036b0(int64_t arg1, int32_t *arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = *(arg1 + 0x120);\n    if (piVar1 == NULL) {\n        *(arg1 + 0x130) = 1;\n        return piVar1;\n    }\n    iVar2 = *arg2;\n    piVar1 = *(*(piVar1 + 2) + 0x10);\n    if ((piVar1 == NULL) || (*piVar1 != 0x2f)) {\n        return NULL;\n    }\n    if (iVar2 < 1) {\n        if (iVar2 != 0) {\n            return NULL;\n        }\n    }\n    else {\n        do {\n            piVar1 = *(piVar1 + 4);\n            iVar2 = iVar2 + -1;\n            if (piVar1 == NULL) {\n                return piVar1;\n            }\n            if (*piVar1 != 0x2f) {\n                return NULL;\n            }\n        } while (iVar2 != 0);\n    }\n    return *(piVar1 + 2);\n}\n",
        "token_count": 263
    },
    "004039d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402e80)\n\nulong fcn.004039d0(int64_t arg1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    char *pcVar5;\n    int64_t *piVar6;\n    int64_t iStack32;\n    \n    uVar3 = *(arg1 + 0x48);\n    pcVar2 = *(arg1 + 0x18);\n    if (1 < *pcVar2 + 0xb7U) {\n        return 0;\n    }\n    pcVar5 = pcVar2 + 1;\n    *(arg1 + 0x18) = pcVar5;\n    cVar1 = pcVar2[1];\n    if (cVar1 == 'E') {\n        *(arg1 + 0x18) = pcVar2 + 2;\n    // WARNING: Could not recover jumptable at 0x00402e27. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar3 = (*(*0x48153c + 0x481480))(arg1, 0x2f, 0, 0);\n        return uVar3;\n    }\n    iStack32 = 0;\n    piVar6 = &iStack32;\n    do {\n        if (cVar1 == 'L') {\n            iVar4 = fcn.00403870(arg1);\n        }\n        else if (cVar1 < 'M') {\n            if (1 < cVar1 + 0xb7U) goto code_r0x00403a92;\n            iVar4 = fcn.004039d0(arg1);\n        }\n        else if (cVar1 == 'X') {\n            *(arg1 + 0x18) = pcVar5 + 1;\n            iVar4 = fcn.00405650(arg1);\n            if (**(arg1 + 0x18) != 'E') {\n                return 0;\n            }\n            *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n        }\n        else {\ncode_r0x00403a92:\n            iVar4 = fcn.00403f90(arg1);\n        }\n        if (iVar4 == 0) {\n            return 0;\n        }\n        iVar4 = fcn.00402e10(arg1, 0x2f, iVar4, 0);\n        *piVar6 = iVar4;\n        if (iVar4 == 0) {\n            return 0;\n        }\n        pcVar5 = *(arg1 + 0x18);\n        piVar6 = iVar4 + 0x10;\n        cVar1 = *pcVar5;\n        if (cVar1 == 'E') {\n            *(arg1 + 0x48) = uVar3;\n            *(arg1 + 0x18) = pcVar5 + 1;\n            return iStack32;\n        }\n    } while( true );\n}\n",
        "token_count": 664
    },
    "00403f90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t * fcn.00403f90(int64_t arg1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t *piVar3;\n    bool bVar4;\n    int32_t **ppiVar5;\n    int32_t *piVar6;\n    ulong uVar7;\n    uint16_t uVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    int64_t iVar11;\n    int64_t iVar12;\n    char *arg2;\n    char *pcVar13;\n    int32_t *apiStack48 [2];\n    \n    pcVar2 = *(arg1 + 0x18);\n    cVar1 = *pcVar2;\n    if (((cVar1 == 'r') || (cVar1 == 'V')) || (cVar1 == 'K')) {\n        ppiVar5 = fcn.00402ee0(arg1, apiStack48, 0);\n        if (ppiVar5 == NULL) {\n            return NULL;\n        }\n        piVar6 = fcn.00403f90(arg1);\n        *ppiVar5 = piVar6;\n        if (piVar6 == NULL) {\n            return NULL;\n        }\n        if (*piVar6 - 0x1fU < 2) {\n            piVar3 = *(piVar6 + 2);\n            *(piVar6 + 2) = apiStack48[0];\n            apiStack48[0] = *ppiVar5;\n            *ppiVar5 = piVar3;\n        }\n        if (apiStack48[0] == NULL) {\n            return NULL;\n        }\n        iVar10 = *(arg1 + 0x38);\n        if (*(arg1 + 0x3c) <= iVar10) {\n            return NULL;\n        }\n        *(*(arg1 + 0x30) + iVar10 * 8) = apiStack48[0];\n        *(arg1 + 0x38) = iVar10 + 1;\n        return apiStack48[0];\n    }\n    uVar9 = cVar1 - 0x30;\n    if (0x4a < uVar9) {\n        return NULL;\n    }\n    // switch table (75 cases) at 0x481754\n    switch(*((uVar9 & 0xff) * 4 + 0x481754) + 0x481754) {\n    case 0x404010:\n        goto code_r0x00404010;\n    case 0x4040b0:\n        *(arg1 + 0x18) = pcVar2 + 1;\n        uVar7 = fcn.00403550(arg1);\n        apiStack48[0] = fcn.00402e10(arg1, 0x28, uVar7, 0);\n        break;\n    case 0x404114:\n        apiStack48[0] = fcn.00403af0(arg1);\n        break;\n    case 0x404123:\n        arg2 = pcVar2 + 1;\n        *(arg1 + 0x18) = arg2;\n        if (pcVar2[1] == '_') {\n            iVar11 = 0;\n        }\n        else {\n            pcVar13 = arg2;\n            if (pcVar2[1] - 0x30U < 10) {\n                do {\n                    pcVar13 = pcVar13 + 1;\n                    *(arg1 + 0x18) = pcVar13;\n                } while (*pcVar13 - 0x30U < 10);\n                iVar11 = fcn.00402e90(arg1, arg2, pcVar13 - arg2);\n                if (iVar11 == 0) goto code_r0x00404178;\n            }\n            else {\n                iVar11 = fcn.00405650(arg1);\n                if (iVar11 == 0) {\n                    apiStack48[0] = NULL;\n                    break;\n                }\n            }\n            arg2 = *(arg1 + 0x18);\n            if (*arg2 != '_') goto code_r0x00404178;\n        }\n        *(arg1 + 0x18) = arg2 + 1;\n        uVar7 = fcn.00403f90(arg1);\n        apiStack48[0] = fcn.00402e10(arg1, 0x2a, iVar11, uVar7);\n        break;\n    case 0x404180:\n        *(arg1 + 0x18) = pcVar2 + 1;\n        uVar7 = fcn.00403f90(arg1);\n        apiStack48[0] = fcn.00402e10(arg1, 0x25, uVar7, 0);\n        break;\n    case 0x4041b0:\n        *(arg1 + 0x18) = pcVar2 + 1;\n        if (pcVar2[1] == 'Y') {\n            *(arg1 + 0x18) = pcVar2 + 2;\n        }\n        uVar7 = fcn.004049f0(arg1, 1);\n        piVar6 = fcn.00403000(arg1, uVar7);\n        apiStack48[0] = NULL;\n        if (**(arg1 + 0x18) == 'E') {\n            *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n            apiStack48[0] = piVar6;\n        }\n        break;\n    case 0x404200:\n        *(arg1 + 0x18) = pcVar2 + 1;\n        uVar7 = fcn.00403f90(arg1);\n        apiStack48[0] = fcn.00402e10(arg1, 0x26, uVar7, 0);\n        break;\n    case 0x404230:\n        *(arg1 + 0x18) = pcVar2 + 1;\n        if (pcVar2[1] == '\\0') {\n            return NULL;\n        }\n        *(arg1 + 0x18) = pcVar2 + 2;\n        if (0x30 < pcVar2[1] + 0xbaU) {\n            return NULL;\n        }\n    // switch table (49 cases) at 0x481880\n        switch(*((pcVar2[1] + 0xbaU) * 4 + 0x481880) + 0x481880) {\n        case 0x403fca:\n            uVar7 = fcn.00405650(arg1);\n            apiStack48[0] = fcn.00402e10(arg1, 0x41, uVar7, 0);\n            if (apiStack48[0] == NULL) {\n                return NULL;\n            }\n            pcVar2 = *(arg1 + 0x18);\n            if (*pcVar2 == '\\0') {\n                return NULL;\n            }\n            *(arg1 + 0x18) = pcVar2 + 1;\n            if (*pcVar2 != 'E') {\n                return NULL;\n            }\n            goto code_r0x004040e9;\n        case 0x404010:\n            goto code_r0x00404010;\n        case 0x4044ce:\n            iVar10 = *(arg1 + 0x28);\n            if (iVar10 < *(arg1 + 0x2c)) {\n                *(arg1 + 0x28) = iVar10 + 1;\n                piVar6 = *(arg1 + 0x20) + iVar10 * 0x18;\n                iVar11 = *0x8;\n                if (piVar6 != NULL) {\n                    *piVar6 = 0x27;\n                    *(piVar6 + 2) = 0x482f20;\n                    iVar11 = 0x482f20;\n                }\n                goto code_r0x00404510;\n            }\n            break;\n        case 0x40451b:\n            iVar10 = *(arg1 + 0x28);\n            if (iVar10 < *(arg1 + 0x2c)) {\n                *(arg1 + 0x28) = iVar10 + 1;\n                piVar6 = *(arg1 + 0x20) + iVar10 * 0x18;\n                iVar11 = *0x8;\n                if (piVar6 != NULL) {\n                    *piVar6 = 0x27;\n                    *(piVar6 + 2) = 0x482ee0;\n                    iVar11 = 0x482ee0;\n                }\n                goto code_r0x00404510;\n            }\n            break;\n        case 0x40455b:\n            iVar10 = *(arg1 + 0x28);\n            if (iVar10 < *(arg1 + 0x2c)) {\n                *(arg1 + 0x28) = iVar10 + 1;\n                piVar6 = *(arg1 + 0x20) + iVar10 * 0x18;\n                iVar11 = *0x8;\n                if (piVar6 != NULL) {\n                    *piVar6 = 0x27;\n                    *(piVar6 + 2) = 0x482e80;\n                    iVar11 = 0x482e80;\n                }\n                goto code_r0x00404510;\n            }\n            break;\n        case 0x40459e:\n            iVar10 = *(arg1 + 0x28);\n            if (iVar10 < *(arg1 + 0x2c)) {\n                *(arg1 + 0x28) = iVar10 + 1;\n                piVar6 = *(arg1 + 0x20) + iVar10 * 0x18;\n                iVar11 = *0x8;\n                if (piVar6 != NULL) {\n                    *piVar6 = 0x27;\n                    *(piVar6 + 2) = 0x482ec0;\n                    iVar11 = 0x482ec0;\n                }\n                goto code_r0x00404510;\n            }\n            break;\n        case 0x4045e1:\n            if (pcVar2[2] == '_') {\n                *(arg1 + 0x18) = pcVar2 + 3;\n                iVar11 = fcn.00405650(arg1);\n            }\n            else {\n                iVar11 = fcn.00403400(arg1);\n            }\n            if (iVar11 == 0) goto code_r0x00404178;\n            apiStack48[0] = NULL;\n            if (**(arg1 + 0x18) == '_') {\n                *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n                uVar7 = fcn.00403f90(arg1);\n                apiStack48[0] = fcn.00402e10(arg1, 0x2d, iVar11, uVar7);\n            }\n            goto code_r0x004040e0;\n        case 0x404636:\n            iVar10 = *(arg1 + 0x28);\n            if (iVar10 < *(arg1 + 0x2c)) {\n                *(arg1 + 0x28) = iVar10 + 1;\n                piVar6 = *(arg1 + 0x20) + iVar10 * 0x18;\n                iVar11 = *0x8;\n                if (piVar6 != NULL) {\n                    *piVar6 = 0x27;\n                    *(piVar6 + 2) = 0x482f00;\n                    iVar11 = 0x482f00;\n                }\n                goto code_r0x00404510;\n            }\n            break;\n        case 0x404679:\n            uVar7 = fcn.00403f90(arg1);\n            apiStack48[0] = fcn.00402e10(arg1, 0x49, uVar7, 0);\n            goto code_r0x004040e0;\n        case 0x404699:\n            iVar10 = *(arg1 + 0x28);\n            if (iVar10 < *(arg1 + 0x2c)) {\n                *(arg1 + 0x28) = iVar10 + 1;\n                piVar6 = *(arg1 + 0x20) + iVar10 * 0x18;\n                iVar11 = *0x8;\n                if (piVar6 != NULL) {\n                    *piVar6 = 0x27;\n                    *(piVar6 + 2) = 0x482f40;\n                    iVar11 = 0x482f40;\n                }\n                goto code_r0x00404510;\n            }\n            break;\n        case 0x4046dc:\n            iVar10 = *(arg1 + 0x28);\n            if (iVar10 < *(arg1 + 0x2c)) {\n                *(arg1 + 0x28) = iVar10 + 1;\n                piVar6 = *(arg1 + 0x20) + iVar10 * 0x18;\n                iVar11 = *0x8;\n                if (piVar6 != NULL) {\n                    *piVar6 = 0x27;\n                    *(piVar6 + 2) = 0x482ea0;\n                    iVar11 = 0x482ea0;\n                }\n                goto code_r0x00404510;\n            }\n            break;\n        case 0x40471f:\n            piVar6 = fcn.00402e90(arg1, \"auto\", 4);\n            return piVar6;\n        case 0x404739:\n            iVar10 = *(arg1 + 0x28);\n            apiStack48[0] = NULL;\n            if (iVar10 < *(arg1 + 0x2c)) {\n                *(arg1 + 0x28) = iVar10 + 1;\n                apiStack48[0] = *(arg1 + 0x20) + iVar10 * 0x18;\n            }\n            *apiStack48[0] = 0x2c;\n            bVar4 = pcVar2[2] - 0x30U < 10;\n            *(apiStack48[0] + 4) = bVar4;\n            if (bVar4) {\n                fcn.00403390(arg1 + 0x18);\n            }\n            piVar6 = apiStack48[0];\n            uVar7 = fcn.00403f90(arg1);\n            *(piVar6 + 2) = uVar7;\n            if (*(apiStack48[0] + 2) == 0) {\n                return NULL;\n            }\n            fcn.00403390(arg1 + 0x18);\n            pcVar2 = *(arg1 + 0x18);\n            uVar8 = 0;\n            if (*pcVar2 != '\\0') {\n                *(arg1 + 0x18) = pcVar2 + 1;\n                uVar8 = *pcVar2 == 's';\n            }\n            *(apiStack48[0] + 0x12) = uVar8;\n            return apiStack48[0];\n        }\n        piVar6 = NULL;\n        iVar11 = *0x8;\ncode_r0x00404510:\n        *(arg1 + 0x50) = *(arg1 + 0x50) + *(iVar11 + 8);\n        return piVar6;\n    case 0x404270:\n        *(arg1 + 0x18) = pcVar2 + 1;\n        uVar7 = fcn.00403f90(arg1);\n        ppiVar5 = fcn.00402ee0(arg1, apiStack48, 1);\n        if (ppiVar5 != NULL) {\n            piVar6 = fcn.00403f90(arg1);\n            *ppiVar5 = piVar6;\n            if (piVar6 != NULL) {\n                if (ppiVar5 != apiStack48) {\n                    iVar10 = *piVar6;\n                    if (iVar10 - 0x1fU < 2) {\n                        piVar3 = *(piVar6 + 2);\n                        *(piVar6 + 2) = apiStack48[0];\n                        apiStack48[0] = *ppiVar5;\n                        *ppiVar5 = piVar3;\n                        iVar10 = *piVar3;\n                    }\n                    if (iVar10 != 0x29) {\n                        if ((apiStack48[0] == NULL) || (iVar10 = *(arg1 + 0x38),  *(arg1 + 0x3c) <= iVar10))\n                        goto code_r0x00404178;\n                        *(*(arg1 + 0x30) + iVar10 * 8) = apiStack48[0];\n                        *(arg1 + 0x38) = iVar10 + 1;\n                    }\n                }\n                apiStack48[0] = fcn.00402e10(arg1, 0x2b, uVar7, apiStack48[0]);\n                break;\n            }\n        }\ncode_r0x00404178:\n        apiStack48[0] = NULL;\n        break;\n    case 0x404320:\n        *(arg1 + 0x18) = pcVar2 + 1;\n        uVar7 = fcn.00403f90(arg1);\n        apiStack48[0] = fcn.00402e10(arg1, 0x24, uVar7, 0);\n        break;\n    case 0x404350:\n        *(arg1 + 0x18) = pcVar2 + 1;\n        uVar7 = fcn.00403f90(arg1);\n        apiStack48[0] = fcn.00402e10(arg1, 0x22, uVar7, 0);\n        break;\n    case 0x404380:\n        *(arg1 + 0x18) = pcVar2 + 1;\n        uVar7 = fcn.00403f90(arg1);\n        apiStack48[0] = fcn.00402e10(arg1, 0x23, uVar7, 0);\n        break;\n    case 0x4043b0:\n        cVar1 = pcVar2[1];\n        if (((9 < cVar1 - 0x30U) && (cVar1 != '_')) && (0x19 < cVar1 + 0xbfU)) {\n            apiStack48[0] = fcn.00403af0(arg1);\n            if (apiStack48[0] == NULL) {\n                return NULL;\n            }\n            if (*apiStack48[0] == 0x18) {\n                return apiStack48[0];\n            }\n            goto code_r0x004040e9;\n        }\n        apiStack48[0] = fcn.00403130(arg1, 0);\n        if (**(arg1 + 0x18) != 'I') {\n            return apiStack48[0];\n        }\ncode_r0x004043e7:\n        uVar7 = fcn.004039d0(arg1);\n        apiStack48[0] = fcn.00402e10(arg1, 4, apiStack48[0], uVar7);\n        break;\n    case 0x404410:\n        apiStack48[0] = fcn.004034a0(arg1);\n        if (**(arg1 + 0x18) == 'I') {\n            if (apiStack48[0] == NULL) {\n                return NULL;\n            }\n            iVar10 = *(arg1 + 0x38);\n            if (*(arg1 + 0x3c) <= iVar10) {\n                return NULL;\n            }\n            *(*(arg1 + 0x30) + iVar10 * 8) = apiStack48[0];\n            *(arg1 + 0x38) = iVar10 + 1;\n            goto code_r0x004043e7;\n        }\n        break;\n    case 0x404452:\n        *(arg1 + 0x18) = pcVar2 + 1;\n        piVar6 = fcn.00403550(arg1);\n        apiStack48[0] = piVar6;\n        uVar7 = fcn.00403f90(arg1);\n        apiStack48[0] = fcn.00402e10(arg1, 0x21, uVar7, piVar6);\n        break;\n    case 0x404490:\n        iVar10 = *(arg1 + 0x28);\n        iVar11 = (cVar1 + -0x61) * 0x20 + 0x482b40;\n        if (iVar10 < *(arg1 + 0x2c)) {\n            *(arg1 + 0x28) = iVar10 + 1;\n            piVar6 = *(arg1 + 0x20) + iVar10 * 0x18;\n            iVar12 = *0x8;\n            if (piVar6 != NULL) {\n                *piVar6 = 0x27;\n                *(piVar6 + 2) = iVar11;\n                iVar12 = iVar11;\n            }\n        }\n        else {\n            piVar6 = NULL;\n            iVar12 = *0x8;\n        }\n        *(arg1 + 0x50) = *(arg1 + 0x50) + *(iVar12 + 8);\n        *(arg1 + 0x18) = pcVar2 + 1;\n        return piVar6;\n    }\ncode_r0x004040e0:\n    if (apiStack48[0] != NULL) {\ncode_r0x004040e9:\n        iVar10 = *(arg1 + 0x38);\n        if (iVar10 < *(arg1 + 0x3c)) {\n            *(*(arg1 + 0x30) + iVar10 * 8) = apiStack48[0];\n            *(arg1 + 0x38) = iVar10 + 1;\n            return apiStack48[0];\n        }\n    }\ncode_r0x00404010:\n    return NULL;\n}\n",
        "token_count": 4826
    },
    "00404900": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00404900(int64_t arg1)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    char *pcVar3;\n    int64_t *piVar4;\n    int64_t aiStack32 [2];\n    \n    pcVar3 = *(arg1 + 0x18);\n    aiStack32[0] = 0;\n    cVar1 = *pcVar3;\n    if (((cVar1 == '\\0') || (cVar1 == 'E')) || (cVar1 == '.')) {\n        return 0;\n    }\n    piVar4 = aiStack32;\n    do {\n        if (cVar1 == 'O') {\n            cVar1 = pcVar3[1];\njoined_r0x00404944:\n            if (cVar1 == 'E') {\ncode_r0x004049a0:\n                if (aiStack32[0] == 0) {\n                    return 0;\n                }\n                if (((*(aiStack32[0] + 0x10) == 0) && (**(aiStack32[0] + 8) == 0x27)) &&\n                   (iVar2 = *(*(aiStack32[0] + 8) + 2),  *(iVar2 + 0x1c) == 9)) {\n                    *(arg1 + 0x50) = *(arg1 + 0x50) - *(iVar2 + 8);\n                    *(aiStack32[0] + 8) = 0;\n                }\n                return aiStack32[0];\n            }\n        }\n        else if (cVar1 == 'R') {\n            cVar1 = pcVar3[1];\n            goto joined_r0x00404944;\n        }\n        iVar2 = fcn.00403f90(arg1);\n        if (iVar2 == 0) {\n            return 0;\n        }\n        iVar2 = fcn.00402e10(arg1, 0x2e, iVar2, 0);\n        *piVar4 = iVar2;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        pcVar3 = *(arg1 + 0x18);\n        piVar4 = iVar2 + 0x10;\n        cVar1 = *pcVar3;\n        if (((cVar1 == '\\0') || (cVar1 == 'E')) || (cVar1 == '.')) goto code_r0x004049a0;\n    } while( true );\n}\n",
        "token_count": 544
    },
    "00404a60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nuint32_t * fcn.00404a60(int64_t arg1, ulong arg2)\n\n{\n    uint32_t *puVar1;\n    char cVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    int32_t *piVar5;\n    uint64_t uVar6;\n    int32_t iVar7;\n    uint32_t *puVar8;\n    uint32_t *arg4;\n    uint32_t *puVar9;\n    uint8_t uVar10;\n    ulong arg2_00;\n    int64_t iVar11;\n    char *arg2_01;\n    uint32_t uVar12;\n    \n    pcVar4 = *(arg1 + 0x18);\n    if ((*pcVar4 != 'T') && (*pcVar4 != 'G')) {\n        arg4 = fcn.00403af0(arg1);\n        if ((arg4 != NULL) && ((arg2 != 0 && ((*(arg1 + 0x10) & 1) == 0)))) {\n            uVar12 = *arg4;\n            while (uVar12 - 0x1c < 5) {\n                arg4 = *(arg4 + 2);\n                uVar12 = *arg4;\n            }\n            if (uVar12 == 2) {\n                piVar5 = *(arg4 + 4);\n                iVar7 = *piVar5;\n                while (iVar7 - 0x1cU < 5) {\n                    piVar5 = *(piVar5 + 2);\n                    iVar7 = *piVar5;\n                }\n                *(arg4 + 4) = piVar5;\n                return arg4;\n            }\n            return arg4;\n        }\n        if ((arg4 == NULL) || (**(arg1 + 0x18) == '\\0')) {\n            return arg4;\n        }\n        puVar9 = arg4;\n        if (**(arg1 + 0x18) == 'E') {\n            return arg4;\n        }\n        do {\n            uVar12 = *puVar9;\n            if (uVar12 == 4) {\n                piVar5 = *(puVar9 + 2);\n                if ((piVar5 == NULL) || (0x32 < *piVar5 - 1U)) goto code_r0x00404bfa;\n                uVar10 = *piVar5 - 1U;\n                goto joined_r0x00404bb9;\n            }\n        } while (((3 < uVar12) && (uVar12 - 0x1c < 5)) && (puVar9 = *(puVar9 + 2),  puVar9 != NULL));\ncode_r0x00404ae0:\n        arg2_00 = 0;\n        goto code_r0x00404bff;\n    }\n    iVar7 = *(arg1 + 0x50);\n    *(arg1 + 0x50) = iVar7 + 0x14;\n    if (*pcVar4 == 'T') {\n        *(arg1 + 0x18) = pcVar4 + 1;\n        if (pcVar4[1] == '\\0') {\n            return 0;\n        }\n        *(arg1 + 0x18) = pcVar4 + 2;\n        if (0x33 < pcVar4[1] + 0xbdU) {\n            return 0;\n        }\n    // switch table (52 cases) at 0x481a0c\n        switch(*((pcVar4[1] + 0xbdU) * 4 + 0x481a0c) + 0x481a0c) {\n        case 0x404b6e:\n            goto code_r0x00404b70;\n        case 0x404e26:\n            iVar7 = fcn.00403630(arg1, 0x76);\n            if (iVar7 == 0) {\n                return 0;\n            }\n            arg4 = fcn.00404a60(arg1, 0);\n            puVar9 = NULL;\n            uVar12 = 0x10;\n            break;\n        case 0x404e55:\n            iVar7 = fcn.00403630(arg1, 0);\n            if (iVar7 == 0) {\n                return 0;\n            }\n            iVar7 = fcn.00403630(arg1, 0);\n            if (iVar7 == 0) {\n                return 0;\n            }\n            arg4 = fcn.00404a60(arg1, 0);\n            puVar9 = NULL;\n            uVar12 = 0x11;\n            break;\n        case 0x404e93:\n            arg4 = fcn.00403af0(arg1);\n            puVar9 = NULL;\n            uVar12 = 0x15;\n            break;\n        case 0x404eab:\n            iVar7 = fcn.00403630(arg1, 0x68);\n            if (iVar7 == 0) {\n                return 0;\n            }\n            arg4 = fcn.00404a60(arg1, 0);\n            puVar9 = NULL;\n            uVar12 = 0xf;\n            break;\n        case 0x404eda:\n            *(arg1 + 0x50) = iVar7 + 0xf;\n            arg4 = fcn.00403f90(arg1);\n            puVar9 = NULL;\n            uVar12 = 9;\n            break;\n        case 0x404ef8:\n            *(arg1 + 0x50) = iVar7 + 10;\n            arg4 = fcn.00403f90(arg1);\n            puVar9 = NULL;\n            uVar12 = 10;\n            break;\n        case 0x404f16:\n            arg4 = fcn.00403f90(arg1);\n            puVar9 = NULL;\n            uVar12 = 0xd;\n            break;\n        case 0x404f2e:\n            arg4 = fcn.00403f90(arg1);\n            puVar9 = NULL;\n            uVar12 = 0x12;\n            break;\n        case 0x404f46:\n            arg4 = fcn.00403f90(arg1);\n            puVar9 = NULL;\n            uVar12 = 0xc;\n            break;\n        case 0x404f5e:\n            arg4 = fcn.00403af0(arg1);\n            puVar9 = NULL;\n            uVar12 = 0x14;\n            break;\n        case 0x404f76:\n            arg4 = fcn.00403f90(arg1);\n            puVar9 = NULL;\n            uVar12 = 0xe;\n            break;\n        case 0x404f8e:\n            puVar9 = fcn.00403f90(arg1);\n            iVar7 = fcn.00403390(arg1 + 0x18);\n            if (iVar7 < 0) {\n                return 0;\n            }\n            if (**(arg1 + 0x18) != '_') {\n                return 0;\n            }\n            *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n            arg4 = fcn.00403f90(arg1);\n            *(arg1 + 0x50) = *(arg1 + 0x50) + 5;\n            uVar12 = 0xb;\n        }\n    }\n    else {\n        if ((*pcVar4 != 'G') || (*(arg1 + 0x18) = pcVar4 + 1,  pcVar4[1] == '\\0')) {\ncode_r0x00404b70:\n            return NULL;\n        }\n        *(arg1 + 0x18) = pcVar4 + 2;\n        if (0x31 < pcVar4[1] + 0xbfU) {\n            return 0;\n        }\n    // switch table (50 cases) at 0x481944\n        switch(*((pcVar4[1] + 0xbfU) * 4 + 0x481944) + 0x481944) {\n        case 0x404b6e:\n            goto code_r0x00404b70;\n        case 0x404cb0:\n            iVar7 = fcn.00403390(arg1 + 0x18);\n            if (iVar7 < 2) {\n                return 0;\n            }\n            pcVar4 = *(arg1 + 0x18);\n            if (*pcVar4 == '\\0') {\n                return 0;\n            }\n            arg2_01 = pcVar4 + 1;\n            *(arg1 + 0x18) = arg2_01;\n            if (*pcVar4 != '_') {\n                return 0;\n            }\n            iVar7 = iVar7 + -1;\n            puVar9 = NULL;\n            do {\n                if (*arg2_01 == '\\0') {\n                    return 0;\n                }\n                iVar11 = 0;\n                if (*arg2_01 == '$') {\n                    cVar2 = arg2_01[1];\n                    if (cVar2 == 'S') {\n                        uVar12 = 0x2f;\n                    }\n                    else if (cVar2 == '_') {\n                        uVar12 = 0x2e;\n                    }\n                    else {\n                        if (cVar2 != '$') {\n                            return 0;\n                        }\n                        uVar12 = 0x24;\n                    }\n                    iVar3 = *(arg1 + 0x28);\n                    if (*(arg1 + 0x2c) <= iVar3) {\ncode_r0x00405072:\n                        *(arg1 + 0x18) = *(arg1 + 0x18) + 2;\n                        return 0;\n                    }\n                    *(arg1 + 0x28) = iVar3 + 1;\n                    arg4 = *(arg1 + 0x20) + iVar3 * 0x18;\n                    if (arg4 == NULL) goto code_r0x00405072;\n                    arg4[2] = uVar12;\n                    iVar11 = *(arg1 + 0x18);\n                    iVar7 = iVar7 + -2;\n                    *arg4 = 0x3f;\n                    arg2_01 = iVar11 + 2;\n                    *(arg1 + 0x18) = arg2_01;\n                }\n                else {\n                    do {\n                        uVar12 = iVar11;\n                        if ((arg2_01[iVar11] == '\\0') || (arg2_01[iVar11] == '$')) goto code_r0x00404d2f;\n                        uVar12 = uVar12 + 1;\n                        iVar11 = iVar11 + 1;\n                    } while (iVar11 < iVar7);\n                    iVar11 = uVar12;\ncode_r0x00404d2f:\n                    arg4 = fcn.00402e90(arg1, arg2_01, uVar12);\n                    arg2_01 = iVar11 + *(arg1 + 0x18);\n                    iVar7 = iVar7 - uVar12;\n                    *(arg1 + 0x18) = arg2_01;\n                    if (arg4 == NULL) {\n                        return 0;\n                    }\n                }\n                if ((puVar9 != NULL) && (arg4 = fcn.00402e10(arg1, 0x3e, puVar9, arg4),  arg4 == NULL)) {\n                    return 0;\n                }\n                puVar9 = arg4;\n            } while (0 < iVar7);\n            puVar9 = NULL;\n            uVar12 = 0x3d;\n            break;\n        case 0x404d95:\n            arg4 = fcn.00403af0(arg1);\n            puVar9 = NULL;\n            uVar12 = 0x13;\n            break;\n        case 0x404db0:\n            arg4 = fcn.00403af0(arg1);\n            puVar9 = fcn.00403400(arg1);\n            uVar12 = 0x16;\n            break;\n        case 0x404dd3:\n            arg4 = fcn.00404a60(arg1, 0);\n            puVar9 = NULL;\n            uVar12 = 0x17;\n            break;\n        case 0x404df0:\n            if ((pcVar4[2] == '\\0') || (*(arg1 + 0x18) = pcVar4 + 3,  pcVar4[2] != 'n')) {\n                arg4 = fcn.00404a60(arg1, 0);\n                puVar9 = NULL;\n                uVar12 = 0x47;\n            }\n            else {\n                arg4 = fcn.00404a60(arg1, 0);\n                puVar9 = NULL;\n                uVar12 = 0x48;\n            }\n        }\n    }\ncode_r0x00404c12:\n    puVar8 = puVar9;\n    switch(uVar12) {\n    default:\n        goto code_r0x00402e80;\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 0xb:\n    case 0x21:\n    case 0x2b:\n    case 0x2d:\n    case 0x35:\n    case 0x36:\n    case 0x37:\n    case 0x38:\n    case 0x39:\n    case 0x3b:\n    case 0x3c:\n    case 0x3e:\n    case 0x4a:\n    case 0x4b:\n        if (arg4 == NULL) {\n            return 0;\n        }\n        break;\n    case 9:\n    case 10:\n    case 0xc:\n    case 0xd:\n    case 0xe:\n    case 0xf:\n    case 0x10:\n    case 0x11:\n    case 0x12:\n    case 0x13:\n    case 0x14:\n    case 0x15:\n    case 0x16:\n    case 0x17:\n    case 0x22:\n    case 0x23:\n    case 0x24:\n    case 0x25:\n    case 0x26:\n    case 0x28:\n    case 0x33:\n    case 0x34:\n    case 0x3a:\n    case 0x3d:\n    case 0x41:\n    case 0x42:\n    case 0x43:\n    case 0x47:\n    case 0x48:\n    case 0x49:\n        puVar8 = arg4;\n        break;\n    case 0x19:\n    case 0x1a:\n    case 0x1b:\n    case 0x1c:\n    case 0x1d:\n    case 0x1e:\n    case 0x1f:\n    case 0x20:\n    case 0x29:\n    case 0x2e:\n    case 0x2f:\n        goto code_r0x00402e35;\n    case 0x2a:\n    case 0x30:\n        break;\n    }\n    if (puVar8 != NULL) {\ncode_r0x00402e35:\n        iVar7 = *(arg1 + 0x28);\n        puVar8 = NULL;\n        if (iVar7 < *(arg1 + 0x2c)) {\n            *(arg1 + 0x28) = iVar7 + 1;\n            puVar1 = *(arg1 + 0x20) + iVar7 * 0x18;\n            if (puVar1 != NULL) {\n                *puVar1 = uVar12;\n                *(puVar1 + 2) = arg4;\n                *(puVar1 + 4) = puVar9;\n                puVar8 = puVar1;\n            }\n        }\n        return puVar8;\n    }\ncode_r0x00402e80:\n    return NULL;\njoined_r0x00404bb9:\n    uVar6 = 1 << (uVar10 & 0x3f);\n    if ((uVar6 & 0x40000000000c0) != 0) goto code_r0x00404ae0;\n    if ((((uVar6 & 3) == 0) || (piVar5 = *(piVar5 + 4),  piVar5 == NULL)) || (0x32 < *piVar5 - 1U))\n    goto code_r0x00404bfa;\n    uVar10 = *piVar5 - 1U;\n    goto joined_r0x00404bb9;\ncode_r0x00404bfa:\n    arg2_00 = 1;\ncode_r0x00404bff:\n    puVar9 = fcn.004049f0(arg1, arg2_00);\n    uVar12 = 3;\n    goto code_r0x00404c12;\n}\n",
        "token_count": 3716
    },
    "00405080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402e80)\n\nuint * fcn.00405080(int64_t arg1)\n\n{\n    char **ppcVar1;\n    char cVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    int32_t iVar8;\n    char cVar9;\n    char cVar10;\n    int32_t iVar11;\n    \n    pcVar3 = *(arg1 + 0x18);\n    if (*pcVar3 == '\\0') {\n        cVar10 = '\\0';\n        cVar9 = '\\0';\n    }\n    else {\n        *(arg1 + 0x18) = pcVar3 + 1;\n        cVar10 = *pcVar3;\n        if (pcVar3[1] == '\\0') {\n            cVar9 = '\\0';\n        }\n        else {\n            *(arg1 + 0x18) = pcVar3 + 2;\n            cVar9 = pcVar3[1];\n        }\n        if (cVar10 == 'v') {\n            if (cVar9 - 0x30U < 10) {\n                iVar6 = fcn.00403550(arg1);\n                iVar11 = *(arg1 + 0x28);\n                if (*(arg1 + 0x2c) <= iVar11) {\n                    return NULL;\n                }\n                *(arg1 + 0x28) = iVar11 + 1;\n                puVar5 = *(arg1 + 0x20) + iVar11 * 0x18;\n                if (puVar5 == NULL) {\n                    return NULL;\n                }\n                if (iVar6 == 0) {\n                    return NULL;\n                }\n                *(puVar5 + 4) = iVar6;\n                *puVar5 = 0x32;\n                puVar5[2] = cVar9 + -0x30;\n                return puVar5;\n            }\n        }\n        else if ((cVar9 == 'v') && (cVar10 == 'c')) {\n            uVar7 = fcn.00403f90(arg1);\n    // WARNING: Could not recover jumptable at 0x00402e27. Too many branches\n    // WARNING: Treating indirect jump as call\n            puVar5 = (*(*0x48154c + 0x481480))(arg1, 0x33, uVar7, 0);\n            return puVar5;\n        }\n    }\n    iVar8 = 0;\n    iVar11 = 0x3d;\n    do {\n        while( true ) {\n            iVar4 = (iVar11 - iVar8) / 2 + iVar8;\n            ppcVar1 = iVar4 * 0x18 + 0x482440;\n            pcVar3 = *ppcVar1;\n            cVar2 = *pcVar3;\n            if (cVar10 != cVar2) break;\n            cVar2 = pcVar3[1];\n            if (cVar9 == cVar2) {\n                iVar11 = *(arg1 + 0x28);\n                if (*(arg1 + 0x2c) <= iVar11) {\n                    return NULL;\n                }\n                *(arg1 + 0x28) = iVar11 + 1;\n                puVar5 = *(arg1 + 0x20) + iVar11 * 0x18;\n                if (puVar5 != NULL) {\n                    *puVar5 = 0x31;\n                    *(puVar5 + 2) = ppcVar1;\n                    return puVar5;\n                }\n                return NULL;\n            }\n            if (cVar9 < cVar2) goto code_r0x0040513a;\ncode_r0x00405179:\n            iVar8 = iVar4 + 1;\n            if (iVar8 == iVar11) {\n                return NULL;\n            }\n        }\n        if (cVar2 <= cVar10) goto code_r0x00405179;\ncode_r0x0040513a:\n        iVar11 = iVar4;\n        if (iVar8 == iVar4) {\n            return NULL;\n        }\n    } while( true );\n}\n",
        "token_count": 916
    },
    "00405210": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t * fcn.00405210(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    int32_t *arg3;\n    int64_t iVar5;\n    char *pcVar6;\n    char *pcVar7;\n    char cVar8;\n    bool bVar9;\n    \n    pcVar6 = *(arg1 + 0x18);\n    cVar8 = *pcVar6;\n    if (cVar8 - 0x30U < 10) {\n        arg3 = fcn.00403550(arg1);\n        pcVar7 = *(arg1 + 0x18);\n        cVar8 = *pcVar7;\n        goto joined_r0x004052f7;\n    }\n    if (cVar8 + 0x9fU < 0x1a) {\n        arg3 = fcn.00405080(arg1);\n        if ((arg3 != NULL) && (*arg3 == 0x31)) {\n            iVar5 = 3;\n            pcVar6 = **(arg3 + 2);\n            iVar2 = *(arg1 + 0x50) + *(*(arg3 + 2) + 2) + 7;\n            bVar9 = iVar2 == 0;\n            *(arg1 + 0x50) = iVar2;\n            pcVar7 = 0x481adc;\n            do {\n                if (iVar5 == 0) break;\n                iVar5 = iVar5 + -1;\n                bVar9 = *pcVar6 == *pcVar7;\n                pcVar6 = pcVar6 + 1;\n                pcVar7 = pcVar7 + 1;\n            } while (bVar9);\n            if (bVar9) {\n                uVar4 = fcn.00403550(arg1);\n                arg3 = fcn.00402e10(arg1, 0x35, arg3, uVar4);\n                pcVar7 = *(arg1 + 0x18);\n                cVar8 = *pcVar7;\n                goto joined_r0x004052f7;\n            }\n        }\n    }\n    else {\n        if (cVar8 + 0xbdU < 2) {\n            piVar1 = *(arg1 + 0x48);\n            if ((piVar1 != NULL) && ((*piVar1 == 0 || (*piVar1 == 0x18)))) {\n                *(arg1 + 0x50) = *(arg1 + 0x50) + piVar1[4];\n                cVar8 = *pcVar6;\n            }\n            if (cVar8 == 'C') {\n                cVar8 = pcVar6[1];\n                if (cVar8 == '2') {\n                    iVar2 = 2;\n                }\n                else if (cVar8 < '3') {\n                    iVar2 = 1;\n                    if (cVar8 != '1') {\n                        return NULL;\n                    }\n                }\n                else if (cVar8 == '3') {\n                    iVar2 = 3;\n                }\n                else {\n                    iVar2 = 4;\n                    if (cVar8 != '5') {\n                        return NULL;\n                    }\n                }\n                iVar3 = *(arg1 + 0x28);\n                *(arg1 + 0x18) = pcVar6 + 2;\n                if (*(arg1 + 0x2c) <= iVar3) goto code_r0x004055e3;\n                *(arg1 + 0x28) = iVar3 + 1;\n                arg3 = *(arg1 + 0x20) + iVar3 * 0x18;\n                if ((arg3 == NULL) || (piVar1 == NULL)) goto code_r0x004055e3;\n                *arg3 = 7;\n                arg3[2] = iVar2;\n                *(arg3 + 4) = piVar1;\n            }\n            else {\n                if (cVar8 != 'D') {\n                    arg3 = NULL;\n                    pcVar7 = pcVar6;\n                    goto joined_r0x004052f7;\n                }\n                cVar8 = pcVar6[1];\n                if (cVar8 == '1') {\n                    iVar2 = 2;\n                }\n                else if (cVar8 < '2') {\n                    iVar2 = 1;\n                    if (cVar8 != '0') {\n                        return NULL;\n                    }\n                }\n                else if (cVar8 == '2') {\n                    iVar2 = 3;\n                }\n                else {\n                    iVar2 = 4;\n                    if (cVar8 != '5') {\n                        return NULL;\n                    }\n                }\n                iVar3 = *(arg1 + 0x28);\n                *(arg1 + 0x18) = pcVar6 + 2;\n                if (iVar3 < *(arg1 + 0x2c)) {\n                    *(arg1 + 0x28) = iVar3 + 1;\n                    arg3 = *(arg1 + 0x20) + iVar3 * 0x18;\n                    if ((arg3 != NULL) && (piVar1 != NULL)) {\n                        *arg3 = 8;\n                        arg3[2] = iVar2;\n                        *(arg3 + 4) = piVar1;\n                        goto code_r0x004054c9;\n                    }\n                }\ncode_r0x004055e3:\n                arg3 = NULL;\n            }\ncode_r0x004054c9:\n            cVar8 = pcVar6[2];\n            pcVar7 = pcVar6 + 2;\n            goto joined_r0x004052f7;\n        }\n        if (cVar8 != 'L') {\n            if (cVar8 != 'U') {\n                return NULL;\n            }\n            if (pcVar6[1] == 'l') {\n                *(arg1 + 0x18) = pcVar6 + 1;\n                cVar8 = pcVar6[1];\n                pcVar7 = pcVar6 + 1;\n                arg3 = NULL;\n                if (cVar8 != 'l') goto joined_r0x004052f7;\n                *(arg1 + 0x18) = pcVar6 + 2;\n                iVar5 = fcn.00404900(arg1);\n                pcVar7 = *(arg1 + 0x18);\n                cVar8 = *pcVar7;\n                if ((iVar5 == 0) || (arg3 = NULL,  cVar8 != 'E')) goto joined_r0x004052f7;\n                *(arg1 + 0x18) = pcVar7 + 1;\n                iVar2 = fcn.00403450(arg1);\n                if ((-1 < iVar2) && (iVar3 = *(arg1 + 0x28),  iVar3 < *(arg1 + 0x2c))) {\n                    *(arg1 + 0x28) = iVar3 + 1;\n                    arg3 = *(arg1 + 0x20) + iVar3 * 0x18;\n                    if (arg3 != NULL) {\n                        *(arg3 + 2) = iVar5;\n                        arg3[4] = iVar2;\n                        iVar3 = *(arg1 + 0x38);\n                        iVar2 = *(arg1 + 0x3c);\n                        *arg3 = 0x44;\n                        if (iVar3 < iVar2) goto code_r0x00405406;\n                    }\n                }\n            }\n            else {\n                if (pcVar6[1] != 't') {\n                    return NULL;\n                }\n                arg3 = NULL;\n                *(arg1 + 0x18) = pcVar6 + 1;\n                cVar8 = pcVar6[1];\n                pcVar7 = pcVar6 + 1;\n                if (cVar8 != 't') goto joined_r0x004052f7;\n                *(arg1 + 0x18) = pcVar6 + 2;\n                iVar2 = fcn.00403450(arg1);\n                if (iVar2 < 0) goto code_r0x00405359;\n                iVar3 = *(arg1 + 0x28);\n                if (iVar3 < *(arg1 + 0x2c)) {\n                    *(arg1 + 0x28) = iVar3 + 1;\n                    arg3 = *(arg1 + 0x20) + iVar3 * 0x18;\n                    if (arg3 != NULL) {\n                        arg3[2] = iVar2;\n                        iVar3 = *(arg1 + 0x38);\n                        iVar2 = *(arg1 + 0x3c);\n                        *arg3 = 0x46;\n                        if (iVar3 < iVar2) {\ncode_r0x00405406:\n                            *(*(arg1 + 0x30) + iVar3 * 8) = arg3;\n                            *(arg1 + 0x38) = iVar3 + 1;\n                            goto code_r0x00405359;\n                        }\n                    }\n                }\n            }\n            cVar8 = **(arg1 + 0x18);\n            pcVar7 = *(arg1 + 0x18);\n            arg3 = NULL;\n            goto joined_r0x004052f7;\n        }\n        *(arg1 + 0x18) = pcVar6 + 1;\n        arg3 = fcn.00403550(arg1);\n        if (arg3 == NULL) {\n            return NULL;\n        }\n        iVar2 = fcn.00403510(arg1);\n        if (iVar2 == 0) {\n            return NULL;\n        }\n    }\ncode_r0x00405359:\n    cVar8 = **(arg1 + 0x18);\n    pcVar7 = *(arg1 + 0x18);\njoined_r0x004052f7:\n    while (cVar8 == 'B') {\n        *(arg1 + 0x18) = pcVar7 + 1;\n        uVar4 = fcn.00403550(arg1);\n        arg3 = fcn.00402e10(arg1, 0x4a, arg3, uVar4);\n        pcVar7 = *(arg1 + 0x18);\n        cVar8 = **(arg1 + 0x18);\n    }\n    return arg3;\n}\n",
        "token_count": 2253
    },
    "00409dc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00409dc0(int64_t arg1, ulong arg2, int64_t *arg3, ulong arg4)\n\n{\n    uchar uVar1;\n    char cVar2;\n    ulong uVar3;\n    ulong uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    int32_t *piVar10;\n    uchar *puVar11;\n    char *pcVar12;\n    uint32_t *puVar13;\n    uint32_t *puVar14;\n    uint32_t *puVar15;\n    uint64_t arg2_00;\n    bool bVar16;\n    uint32_t auStack88 [8];\n    \n    arg2_00 = arg2;\n    if (arg3 != NULL) {\n        do {\n            if (*(arg1 + 0x130) != 0) {\n                return;\n            }\n            if (*(arg3 + 2) == 0) {\n                piVar10 = arg3[1];\n                iVar5 = *piVar10;\n                if ((arg4 != 0) || (4 < iVar5 - 0x1cU)) {\n                    *(arg3 + 2) = 1;\n                    uVar3 = *(arg1 + 0x120);\n                    *(arg1 + 0x120) = arg3[3];\n                    if (iVar5 == 0x29) {\n                        fcn.0040a410(arg1, arg2_00, piVar10 + 4, *arg3);\n                        *(arg1 + 0x120) = uVar3;\n                        return;\n                    }\n                    if (iVar5 == 0x2a) {\n                        fcn.0040a190(arg1, arg2_00, piVar10 + 2, *arg3);\n                        *(arg1 + 0x120) = uVar3;\n                        return;\n                    }\n                    if (iVar5 == 2) {\n                        uVar4 = *(arg1 + 0x128);\n                        *(arg1 + 0x128) = 0;\n                        fcn.004095c0(arg1, arg2_00, *(piVar10 + 2));\n                        *(arg1 + 0x128) = uVar4;\n                        iVar8 = *(arg1 + 0x100);\n                        if ((arg2 & 4) == 0) {\n                            puVar11 = 0x481af4;\n                            do {\n                                uVar1 = *puVar11;\n                                if (iVar8 == 0xff) {\n                                    *(arg1 + 0xff) = 0;\n                                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                                    iVar9 = 0;\n                                    iVar8 = 1;\n                                }\n                                else {\n                                    iVar9 = iVar8;\n                                    iVar8 = iVar8 + 1;\n                                }\n                                puVar11 = puVar11 + 1;\n                                *(arg1 + 0x100) = iVar8;\n                                *(arg1 + iVar9) = uVar1;\n                                *(arg1 + 0x108) = uVar1;\n                            } while (puVar11 != 0x481af6);\n                        }\n                        else {\n                            if (iVar8 == 0xff) {\n                                *(arg1 + 0xff) = 0;\n                                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                                iVar9 = 1;\n                                iVar8 = 0;\n                            }\n                            else {\n                                iVar9 = iVar8 + 1;\n                            }\n                            *(arg1 + 0x100) = iVar9;\n                            *(arg1 + iVar8) = 0x2e;\n                            *(arg1 + 0x108) = 0x2e;\n                        }\n                        piVar10 = *(arg3[1] + 0x10);\n                        iVar5 = *piVar10;\n                        if (iVar5 != 0x45) goto code_r0x00409f86;\n                        iVar8 = *(arg1 + 0x100);\n                        pcVar12 = \"{default arg#\";\n                        do {\n                            cVar2 = *pcVar12;\n                            if (iVar8 == 0xff) {\n                                *(arg1 + 0xff) = 0;\n                                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                                iVar9 = 0;\n                                iVar8 = 1;\n                            }\n                            else {\n                                iVar9 = iVar8;\n                                iVar8 = iVar8 + 1;\n                            }\n                            pcVar12 = pcVar12 + 1;\n                            *(arg1 + 0x100) = iVar8;\n                            *(arg1 + iVar9) = cVar2;\n                            *(arg1 + 0x108) = cVar2;\n                        } while (pcVar12 != \"\");\n                        puVar13 = &stack0xffffffffffffffa5 + 3;\n                        sub.msvcrt.dll_sprintf(puVar13, 0x481b05, piVar10[4] + 1);\n                        puVar15 = puVar13;\n                        do {\n                            puVar14 = puVar15;\n                            uVar6 = *puVar14 + 0xfefefeff & ~*puVar14;\n                            uVar7 = uVar6 & 0x80808080;\n                            puVar15 = puVar14 + 1;\n                        } while (uVar7 == 0);\n                        bVar16 = (uVar6 & 0x8080) == 0;\n                        if (bVar16) {\n                            uVar7 = uVar7 >> 0x10;\n                        }\n                        if (bVar16) {\n                            puVar15 = puVar14 + 6;\n                        }\n                        puVar11 = puVar15 + ((-3 - CARRY1(uVar7, uVar7)) - puVar13);\n                        if (puVar11 == NULL) {\n                            iVar8 = *(arg1 + 0x100);\n                        }\n                        else {\n                            puVar15 = puVar13 + puVar11;\n                            iVar9 = *(arg1 + 0x100);\n                            do {\n                                uVar1 = *puVar13;\n                                if (iVar9 == 0xff) {\n                                    *(arg1 + 0xff) = 0;\n                                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                                    iVar8 = 1;\n                                    iVar9 = 0;\n                                }\n                                else {\n                                    iVar8 = iVar9 + 1;\n                                }\n                                puVar13 = puVar13 + 1;\n                                *(arg1 + 0x100) = iVar8;\n                                *(arg1 + iVar9) = uVar1;\n                                *(arg1 + 0x108) = uVar1;\n                                iVar9 = iVar8;\n                            } while (puVar13 != puVar15);\n                        }\n                        puVar11 = 0x481b09;\n                        do {\n                            uVar1 = *puVar11;\n                            if (iVar8 == 0xff) {\n                                *(arg1 + 0xff) = 0;\n                                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                                iVar9 = 0;\n                                iVar8 = 1;\n                            }\n                            else {\n                                iVar9 = iVar8;\n                                iVar8 = iVar8 + 1;\n                            }\n                            puVar11 = puVar11 + 1;\n                            *(arg1 + 0x100) = iVar8;\n                            *(arg1 + iVar9) = uVar1;\n                            *(arg1 + 0x108) = uVar1;\n                        } while (puVar11 != 0x481b0c);\n                        do {\n                            piVar10 = *(piVar10 + 2);\n                            iVar5 = *piVar10;\ncode_r0x00409f86:\n                        } while (iVar5 - 0x1cU < 5);\n                        fcn.004095c0(arg1, arg2_00, piVar10);\n                        *(arg1 + 0x120) = uVar3;\n                        return;\n                    }\n                    fcn.004095f0(arg1, arg2_00, piVar10);\n                    *(arg1 + 0x120) = uVar3;\n                }\n            }\n            arg3 = *arg3;\n        } while (arg3 != NULL);\n    }\n    return;\n}\n",
        "token_count": 1990
    },
    "0040aa50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040aa50(int64_t arg1, ulong arg2, uint32_t *arg3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    bool bVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    uVar1 = *arg3;\n    bVar3 = true;\n    if (((uVar1 < 2) || (uVar1 == 0x30)) || (uVar1 == 6)) {\n        iVar2 = *(arg1 + 0x130);\n    }\n    else {\n        iVar4 = *(arg1 + 0x100);\n        if (iVar4 == 0xff) {\n            *(arg1 + 0xff) = 0;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n            iVar5 = 1;\n            iVar4 = 0;\n        }\n        else {\n            iVar5 = iVar4 + 1;\n        }\n        *(arg1 + 0x100) = iVar5;\n        *(arg1 + iVar4) = 0x28;\n        bVar3 = false;\n        iVar2 = *(arg1 + 0x130);\n        *(arg1 + 0x108) = 0x28;\n    }\n    if (iVar2 == 0) {\n        fcn.00405dc0(arg1, arg2, arg3);\n    }\n    if (!bVar3) {\n        iVar4 = *(arg1 + 0x100);\n        if (iVar4 == 0xff) {\n            *(arg1 + 0xff) = 0;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n            iVar5 = 1;\n            iVar4 = 0;\n        }\n        else {\n            iVar5 = iVar4 + 1;\n        }\n        *(arg1 + 0x100) = iVar5;\n        *(arg1 + iVar4) = 0x29;\n        *(arg1 + 0x108) = 0x29;\n        return;\n    }\n    return;\n}\n",
        "token_count": 522
    },
    "0040ab70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nbool fcn.0040ab70(uint8_t *arg1, code *arg2, ulong arg3)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uint32_t uVar8;\n    uint8_t *puVar9;\n    uint8_t *puVar10;\n    uint8_t uVar11;\n    bool bVar12;\n    bool bVar13;\n    ulong var_10h_2;\n    ulong var_110h;\n    ulong var_118h;\n    ulong var_120h;\n    ulong var_128h;\n    ulong var_130h;\n    ulong var_138h;\n    ulong var_144h;\n    ulong var_150h;\n    ulong auStack528 [5];\n    uchar auStack488 [8];\n    int64_t iStack480;\n    uint8_t *puStack472;\n    uint8_t *puStack464;\n    uint32_t uStack456;\n    uint8_t *puStack448;\n    uchar *puStack440;\n    uint uStack432;\n    int32_t iStack428;\n    uchar *puStack424;\n    uint uStack416;\n    int32_t iStack412;\n    uint uStack408;\n    ulong uStack400;\n    uint uStack392;\n    uchar auStack376 [256];\n    int64_t iStack120;\n    uchar uStack112;\n    code *pcStack104;\n    ulong var_58h;\n    ulong var_50h;\n    ulong var_48h;\n    ulong var_40h;\n    ulong s;\n    ulong var_30h;\n    ulong var_28h;\n    ulong var_14h;\n    ulong var_8h;\n    \n    uVar11 = *arg1;\n    bVar12 = uVar11 < 0x5f;\n    bVar13 = uVar11 == 0x5f;\n    if (bVar13) {\n        bVar12 = arg1[1] < 0x5a;\n        bVar13 = arg1[1] == 0x5a;\n        uVar8 = 1;\n        if (bVar13) goto code_r0x0040abf0;\n    }\n    iVar7 = 8;\n    puVar9 = arg1;\n    puVar10 = \"_GLOBAL_\";\n    do {\n        if (iVar7 == 0) break;\n        iVar7 = iVar7 + -1;\n        bVar12 = *puVar9 < *puVar10;\n        bVar13 = *puVar9 == *puVar10;\n        puVar9 = puVar9 + 1;\n        puVar10 = puVar10 + 1;\n    } while (bVar13);\n    uVar8 = 0;\n    if (((!bVar12 && !bVar13) == bVar12) &&\n       (((uVar1 = arg1[8],  uVar1 == 0x2e || (uVar1 == 0x5f)) || (uVar8 = 0,  uVar1 == 0x24)))) {\n        uVar1 = arg1[9];\n        if (((uVar1 == 0x49) || (uVar8 = 0,  uVar1 == 0x44)) && (uVar8 = 0,  arg1[10] == 0x5f)) {\n            uVar8 = (((uVar1 == 0x49) << 0x1f) >> 0x1f) + 3;\n        }\n    }\ncode_r0x0040abf0:\n    auStack528[0] = 0x40abf8;\n    iVar4 = sub.msvcrt.dll_strlen(arg1);\n    puStack464 = arg1 + iVar4;\n    uStack456 = 0x11;\n    iStack412 = iVar4;\n    iStack428 = iStack412 * 2;\n    uStack432 = 0;\n    uStack416 = 0;\n    uStack408 = 0;\n    uStack400 = 0;\n    uStack392 = 0;\n    auStack528[0] = 0x40ac52;\n    puStack472 = arg1;\n    puStack448 = arg1;\n    iVar7 = fcn.0040ce40(iVar4);\n    iVar7 = -iVar7;\n    puStack440 = &stack0xfffffffffffffe18 + iVar7;\n    *(&stack0xfffffffffffffdf0 + iVar7) = 0x40ac6e;\n    iVar4 = fcn.0040ce40(iVar4);\n    iVar4 = -iVar4;\n    puStack424 = &stack0xfffffffffffffe18 + iVar4 + iVar7;\n    if (uVar8 == 1) {\n        iVar6 = 0;\n        if (uVar11 == 0x5f) {\n            uVar11 = arg1[1];\n            puStack448 = arg1 + 1;\n            iVar6 = 0;\n            if (uVar11 == 0x5a) {\n                puStack448 = arg1 + 2;\n                *(&stack0xfffffffffffffdf0 + iVar4 + iVar7) = 0x40ae50;\n                iVar6 = fcn.00404a60(&stack0xfffffffffffffe28, 1);\n                if ((uStack456 & 1) == 0) {\n                    uVar11 = *puStack448;\n                }\n                else {\n                    while (uVar11 = *puStack448,  uVar11 == 0x2e) {\n                        uVar11 = puStack448[1];\n                        if (((0x19 < uVar11 + 0x9f) && (uVar11 != 0x5f)) && (9 < uVar11 - 0x30)) {\n                            uVar11 = *puStack448;\n                            break;\n                        }\n                        *(&stack0xfffffffffffffdf0 + iVar4 + iVar7) = 0x40ae7b;\n                        iVar6 = fcn.00403060(&stack0xfffffffffffffe28, iVar6);\n                    }\n                }\n            }\n        }\n    }\n    else if ((uVar8 == 0) || (3 < uVar8)) {\n        *(&stack0xfffffffffffffdf0 + iVar4 + iVar7) = 0x40adf9;\n        iVar6 = fcn.00403f90(&stack0xfffffffffffffe28);\n        uVar11 = *puStack448;\n    }\n    else {\n        puVar9 = arg1 + 0xb;\n        puStack448 = puVar9;\n        if ((arg1[0xb] == 0x5f) && (arg1[0xc] == 0x5a)) {\n            puStack448 = arg1 + 0xd;\n            *(&stack0xfffffffffffffdf0 + iVar4 + iVar7) = 0x40aec6;\n            uVar5 = fcn.00404a60(&stack0xfffffffffffffe28, 0);\n        }\n        else {\n            *(&stack0xfffffffffffffdf0 + iVar4 + iVar7) = 0x40acba;\n            uVar3 = sub.msvcrt.dll_strlen(puVar9);\n            *(&stack0xfffffffffffffdf0 + iVar4 + iVar7) = 0x40acc8;\n            uVar5 = fcn.00402e90(&stack0xfffffffffffffe28, puVar9, uVar3);\n        }\n        *(&stack0xfffffffffffffdf0 + iVar4 + iVar7) = 0x40ace1;\n        iStack480 = fcn.00402e10(&stack0xfffffffffffffe28, (uVar8 != 2) + 0x42, uVar5, 0);\n        puVar9 = puStack448;\n        *(&stack0xfffffffffffffdf0 + iVar4 + iVar7) = 0x40acf1;\n        iVar6 = sub.msvcrt.dll_strlen(puVar9);\n        puStack448 = puVar9 + iVar6;\n        uVar11 = *puStack448;\n        iVar6 = iStack480;\n    }\n    bVar12 = false;\n    if ((uVar11 == 0) && (iVar6 != 0)) {\n        iStack120 = 0;\n        uStack112 = 0;\n        var_50h = 0;\n        var_48h = 0;\n        var_40h._4_4_ = 0;\n        s._0_4_ = 0;\n        pcStack104 = arg2;\n        var_58h = arg3;\n        var_40h._0_4_ = 0;\n        *(&stack0xfffffffffffffdf0 + iVar4 + iVar7) = 0x40adab;\n        fcn.00405dc0(&stack0xfffffffffffffe88, 0x11, iVar6);\n        uVar5 = var_58h;\n        iVar6 = iStack120;\n        (&stack0xfffffffffffffe88)[iStack120] = 0;\n        pcVar2 = pcStack104;\n        *(&stack0xfffffffffffffdf0 + iVar4 + iVar7) = 0x40adc7;\n        (*pcVar2)(&stack0xfffffffffffffe88, iVar6, uVar5);\n        bVar12 = var_40h == 0;\n    }\n    return bVar12;\n}\n",
        "token_count": 2143
    },
    "0040aed0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0040aed0(int64_t arg1, int64_t arg2, uint64_t *arg3, uint *arg4)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int64_t iStack72;\n    ulong uStack64;\n    uint64_t uStack56;\n    int32_t iStack48;\n    \n    if ((arg1 == 0) || ((arg2 != 0 && (arg3 == NULL)))) {\n        if (arg4 == NULL) {\n            return 0;\n        }\n        *arg4 = 0xfffffffd;\n        return 0;\n    }\n    iStack72 = 0;\n    uStack64 = 0;\n    uStack56 = 0;\n    iStack48 = 0;\n    iVar1 = fcn.0040ab70(arg1, 0x4037a0, &iStack72);\n    iVar3 = iStack72;\n    if (iVar1 == 0) {\n        fcn.00416d90(iStack72);\n        if (arg4 == NULL) {\n            return 0;\n        }\ncode_r0x0040afbb:\n        *arg4 = 0xfffffffe;\n        return 0;\n    }\n    uVar4 = 1;\n    if (iStack48 == 0) {\n        uVar4 = uStack56;\n    }\n    if (iStack72 == 0) {\n        if (arg4 == NULL) {\n            return 0;\n        }\n        if (uVar4 == 1) {\n            *arg4 = 0xffffffff;\n            return 0;\n        }\n        goto code_r0x0040afbb;\n    }\n    if (arg2 == 0) {\n        if (arg3 == NULL) goto code_r0x0040af94;\n    }\n    else {\n        uVar2 = sub.msvcrt.dll_strlen(iStack72);\n        if (uVar2 < *arg3) {\n            sub.msvcrt.dll_memcpy(arg2, iVar3, uVar2 + 1);\n            fcn.00416d90(iVar3);\n            iVar3 = arg2;\n            goto code_r0x0040af94;\n        }\n        fcn.00416d90(arg2);\n    }\n    *arg3 = uVar4;\ncode_r0x0040af94:\n    if (arg4 == NULL) {\n        return iVar3;\n    }\n    *arg4 = 0;\n    return iVar3;\n}\n",
        "token_count": 555
    },
    "0040ba70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.0040ba70(ulong param_1, ulong param_2, uint64_t param_3, uchar *param_4)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    ulong uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint32_t uVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    uchar *puVar9;\n    char *arg1;\n    uint64_t uVar10;\n    int32_t *piVar11;\n    uint32_t *puVar12;\n    int64_t iVar13;\n    int32_t *piVar14;\n    int32_t iVar15;\n    uint64_t *arg3;\n    ulong auStack160 [5];\n    uchar auStack120 [12];\n    uchar auStack108 [4];\n    uchar *puStack104;\n    ulong uStack80;\n    ulong var_30h;\n    ulong var_18h;\n    \n    if (*0x49e3b0 != 0) {\n        return;\n    }\n    *0x49e3b0 = 1;\n    auStack160[0] = 0x40baaf;\n    fcn.0040c3f0();\n    auStack160[0] = 0x40bac6;\n    iVar7 = fcn.0040ce40(param_1);\n    piVar11 = 0x48ae00;\n    *0x49e3b4 = 0;\n    iVar7 = -iVar7;\n    *0x49e3b8 = &stack0xffffffffffffff88 + iVar7;\n    if ((*0x48ae00 == 0) && (*0x48ae04 == 0)) {\n        param_4 = *0x48ae08;\n        if (*0x48ae08 == 0) {\n            piVar11 = 0x48ae0c;\n            param_3 = *0x48ae0c;\n            if ((*0x48ae0c != 0) || (*0x48ae10 != 0)) goto code_r0x0040bc60;\n        }\n        uVar10 = piVar11[2];\n        if (piVar11[2] != 1) {\ncode_r0x0040bd7d:\n            *(&stack0xffffffffffffff60 + iVar7) = 0x40bd89;\n            fcn.0040b7d0(\"  Unknown pseudo relocation protocol version %d.\\n\", uVar10, param_3, param_4);\n            return;\n        }\n        puVar12 = piVar11 + 3;\n        if (0x48ae23 < puVar12) {\n            *0x49e3b4 = 0;\n            return;\n        }\n        do {\n            uVar1 = *(puVar12 + 2);\n            arg3 = *puVar12 + 0x400000;\n            arg1 = puVar12[1] + 0x400000;\n            uVar10 = *arg3;\n            if (uVar1 == 0x10) {\n                param_4 = *arg1;\n                puVar9 = param_4;\n                if (*arg1 < 0) {\n                    puVar9 = param_4 | 0xffffffffffff0000;\n                }\n                puStack104 = puVar9 + (uVar10 - arg3);\n                *(&stack0xffffffffffffff60 + iVar7) = 0x40bd11;\n                fcn.0040b840(arg1, &stack0xffffffffffffff98, 2);\n            }\n            else {\n                uVar6 = uVar1;\n                if (uVar1 < 0x11) {\n                    if (uVar6 != 8) {\ncode_r0x0040bd16:\n                        arg1 = \"  Unknown pseudo relocation bit size %d.\\n\";\n                        uVar10 = uVar6;\n                        puStack104 = NULL;\n                        *(&stack0xffffffffffffff60 + iVar7) = 0x40bd2c;\n                        fcn.0040b7d0(\"  Unknown pseudo relocation bit size %d.\\n\", uVar10, arg3, param_4);\n                        goto code_r0x0040bd2c;\n                    }\n                    param_4 = *arg1;\n                    puVar9 = param_4;\n                    if (*arg1 < '\\0') {\n                        puVar9 = param_4 | 0xffffffffffffff00;\n                    }\n                    puStack104 = puVar9 + (uVar10 - arg3);\n                    *(&stack0xffffffffffffff60 + iVar7) = 0x40bcd7;\n                    fcn.0040b840(arg1, &stack0xffffffffffffff98, 1);\n                }\n                else if (uVar6 == 0x20) {\ncode_r0x0040bd2c:\n                    param_4 = *arg1;\n                    puVar9 = param_4;\n                    if (*arg1 < 0) {\n                        puVar9 = param_4 | 0xffffffff00000000;\n                    }\n                    puStack104 = puVar9 + (uVar10 - arg3);\n                    *(&stack0xffffffffffffff60 + iVar7) = 0x40bd5a;\n                    fcn.0040b840(arg1, &stack0xffffffffffffff98, 4);\n                }\n                else {\n                    if (uVar6 != 0x40) goto code_r0x0040bd16;\n                    puStack104 = (uVar10 - arg3) + *arg1;\n                    *(&stack0xffffffffffffff60 + iVar7) = 0x40bbc6;\n                    fcn.0040b840(arg1, &stack0xffffffffffffff98, 8);\n                }\n            }\n            puVar12 = puVar12 + 3;\n        } while (puVar12 < 0x48ae24);\n    }\n    else {\ncode_r0x0040bc60:\n        if (0x48ae23 < piVar11) {\n            *0x49e3b4 = 0;\n            return;\n        }\n        do {\n            uVar6 = piVar11[1];\n            piVar14 = piVar11 + 2;\n            puStack104 = puStack104 & 0xffffffff00000000 | *(uVar6 + 0x400000) + *piVar11;\n            *(&stack0xffffffffffffff60 + iVar7) = 0x40bc94;\n            fcn.0040b840(uVar6 + 0x400000, &stack0xffffffffffffff98, 4);\n            piVar11 = piVar14;\n        } while (piVar14 < 0x48ae24);\n    }\n    pcVar5 = _sym.imp.KERNEL32.dll_VirtualQuery;\n    pcVar4 = _sym.imp.KERNEL32.dll_VirtualProtect;\n    iVar13 = 0;\n    iVar15 = 0;\n    if (0 < *0x49e3b4) {\n        do {\n            if (*(*0x49e3b8 + iVar13) != 0) {\n                uVar3 = *(*0x49e3b8 + iVar13 + 8);\n                *(&stack0xffffffffffffff60 + iVar7) = 0x40bc33;\n                iVar8 = (*pcVar5)(uVar3, &stack0xffffffffffffff98, 0x30);\n                uVar3 = uStack80;\n                puVar9 = puStack104;\n                if (iVar8 == 0) {\n                    param_3 = *(*0x49e3b8 + iVar13 + 8);\n                    uVar10 = *(*(*0x49e3b8 + iVar13 + 0x10) + 8);\n                    *(&stack0xffffffffffffff60 + iVar7) = 0x40bd7d;\n                    fcn.0040b7d0(\"  VirtualQuery failed for %d bytes at address %p\", uVar10, param_3, param_4);\n                    goto code_r0x0040bd7d;\n                }\n                uVar2 = *(*0x49e3b8 + iVar13);\n                *(&stack0xffffffffffffff60 + iVar7) = 0x40bc55;\n                param_4 = &stack0xffffffffffffff94;\n                (*pcVar4)(puVar9, uVar3, uVar2);\n            }\n            iVar15 = iVar15 + 1;\n            iVar13 = iVar13 + 0x18;\n        } while (iVar15 < *0x49e3b4);\n    }\n    return;\n}\n",
        "token_count": 1894
    },
    "0040be40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0040be40(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    \n    if (*0x49e3c0 != 0) {\n        return *0x49e3c0;\n    }\n    *0x49e3c0 = 1;\n    uVar4 = *0x46a780 & 0xffffffff;\n    if (*0x46a780 == -1) {\n        uVar1 = 0;\n        do {\n            uVar4 = uVar1;\n            uVar3 = uVar4 + 1;\n            uVar1 = uVar3;\n        } while (*(uVar3 * 8 + 0x46a780) != 0);\n    }\n    uVar3 = uVar4;\n    while (uVar3 != 0) {\n        (**(uVar4 * 8 + 0x46a780))();\n        uVar3 = uVar4 - 1;\n        uVar4 = uVar3;\n    }\n    iVar2 = fcn.0040b130(0x40bda0);\n    return -(iVar2 == 0);\n}\n",
        "token_count": 271
    },
    "0040c1c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0040c1c0(ulong noname_0, ulong arg2)\n\n{\n    if (arg2 != 1) {\n        if (arg2 == 0) {\n            if (*0x49e968 != 0) {\n                fcn.0040c030();\n            }\n            if (*0x49e968 == 1) {\n                *0x49e968 = 0;\n                (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(0x49e980);\n            }\n        }\n        else if ((arg2 == 3) && (*0x49e968 != 0)) {\n            fcn.0040c030();\n        }\n        return 1;\n    }\n    if (*0x49e968 == 0) {\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x49e980);\n    }\n    *0x49e968 = 1;\n    return 1;\n}\n",
        "token_count": 204
    },
    "0040c6b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.0040c6b0(ulong *arg1, ulong arg2, ulong arg3)\n\n{\n    ulong in_RAX;\n    \n    if (arg2 < 3) {\n        arg1[arg2 + 2] = arg3;\n        return in_RAX;\n    }\n    sub.msvcrt.dll_abort();\n    return *arg1;\n}\n",
        "token_count": 79
    },
    "0040cb00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040cb00(int64_t arg1)\n\n{\n    if (*(arg1 + 0x10) != 0) goto code_r0x0040cb15;\n    fcn.0040c990(arg1);\n    do {\n        sub.msvcrt.dll_abort();\ncode_r0x0040cb15:\n        fcn.0040c630(arg1);\n    } while( true );\n}\n",
        "token_count": 90
    },
    "0040ce80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.0040ce80(int64_t *arg1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    \n    iVar4 = arg1[2];\n    if (((*(arg1 + 3) & 3) == 2) && ((*(arg1 + 3) & 0x108) != 0)) {\n        uVar5 = 0;\n        uVar3 = *arg1 - iVar4;\n        if (0 < uVar3) {\n            uVar1 = sub.msvcrt.dll__fileno();\n            iVar2 = sub.msvcrt.dll__write(uVar1, iVar4, uVar3 & 0xffffffff);\n            if (iVar2 == uVar3) {\n                if ((*(arg1 + 3) & 0x80) != 0) {\n                    *(arg1 + 3) = *(arg1 + 3) & 0xfffffffd;\n                }\n                iVar4 = arg1[2];\n            }\n            else {\n                *(arg1 + 3) = *(arg1 + 3) | 0x20;\n                iVar4 = arg1[2];\n                uVar5 = 0xffffffff;\n            }\n        }\n    }\n    else {\n        uVar5 = 0;\n    }\n    *arg1 = iVar4;\n    *(arg1 + 1) = 0;\n    return uVar5;\n}\n",
        "token_count": 325
    },
    "0040cf10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0040cf10(ulong arg1, int64_t arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    ulong uVar3;\n    uint *puVar4;\n    int64_t iStack32;\n    \n    if (arg3 == 1) {\n        iVar1 = sub.msvcrt.dll_fgetpos(arg1, &iStack32);\n        if (iVar1 != 0) {\n            return 0xffffffff;\n        }\n        iStack32 = iStack32 + arg2;\n    }\n    else if (arg3 == 2) {\n        sub.msvcrt.dll_fflush();\n        uVar2 = sub.msvcrt.dll__fileno(arg1);\n        iStack32 = sub.msvcrt.dll__filelengthi64(uVar2);\n        iStack32 = arg2 + iStack32;\n    }\n    else {\n        iStack32 = arg2;\n        if (arg3 != 0) {\n            puVar4 = sub.msvcrt.dll__errno();\n            *puVar4 = 0x16;\n            return 0xffffffff;\n        }\n    }\n    uVar3 = sub.msvcrt.dll_fsetpos(arg1, &iStack32);\n    return uVar3;\n}\n",
        "token_count": 274
    },
    "0040cfb0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040cfb0(char **arg1)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    char *pcVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    char *pcVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    uint64_t uVar11;\n    int32_t iVar12;\n    uint64_t uVar13;\n    \n    puVar5 = sub.msvcrt.dll__errno();\n    *puVar5 = 0;\n    uVar4 = sub.msvcrt.dll__fileno();\n    if (*(arg1 + 1) < 0) {\n        *(arg1 + 1) = 0;\n    }\n    iVar6 = sub.msvcrt.dll__lseeki64(uVar4, 0, 1);\n    if (iVar6 < 0) {\n        return -1;\n    }\n    uVar2 = *(arg1 + 3);\n    if ((uVar2 & 0x108) == 0) {\n        return iVar6 - *(arg1 + 1);\n    }\n    pcVar3 = *arg1;\n    pcVar8 = arg1[2];\n    iVar10 = pcVar3 - pcVar8;\n    iVar12 = uVar4 >> 5;\n    iVar9 = iVar10;\n    if ((uVar2 & 3) == 0) {\n        if ((uVar2 & 0x80) == 0) {\n            puVar5 = sub.msvcrt.dll__errno();\n            *puVar5 = 0x16;\n            return -1;\n        }\n    }\n    else if ((*((uVar4 & 0x1f) * 0x40 + *(_sym.imp.msvcrt.dll___pioinfo + iVar12 * 8) + 8) < '\\0') && (pcVar8 < pcVar3))\n    {\n        do {\n            cVar1 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n            iVar9 = iVar9 + (cVar1 == '\\n');\n        } while (pcVar8 != pcVar3);\n    }\n    if (iVar6 == 0) {\n        return iVar9;\n    }\n    if ((uVar2 & 1) == 0) goto code_r0x0040d078;\n    if (*(arg1 + 1) == 0) {\n        iVar9 = 0;\n        uVar11 = 0;\n    }\n    else {\n        uVar13 = iVar10 + *(arg1 + 1);\n        iVar10 = (uVar4 & 0x1f) * 0x40;\n        if (*(*(_sym.imp.msvcrt.dll___pioinfo + iVar12 * 8) + 8 + iVar10) < '\\0') {\n            iVar7 = sub.msvcrt.dll__lseeki64(uVar4, 0, 2);\n            if (iVar7 == iVar6) {\n                pcVar8 = arg1[2];\n                pcVar3 = pcVar8 + uVar13;\n                if (pcVar8 < pcVar3) {\n                    do {\n                        cVar1 = *pcVar8;\n                        pcVar8 = pcVar8 + 1;\n                        uVar13 = uVar13 + (cVar1 == '\\n');\n                    } while (pcVar8 != pcVar3);\n                }\n                uVar11 = uVar13 + 1;\n                if ((*(arg1 + 0x19) & 0x20) == 0) goto code_r0x0040d072;\n            }\n            else {\n                sub.msvcrt.dll__lseeki64(uVar4, iVar6, 0);\n                if ((0x200 < uVar13) || (uVar11 = 0x200,  (*(arg1 + 3) & 0x408) != 8)) {\n                    uVar11 = *(arg1 + 0x24);\n                }\n                if ((*(*(_sym.imp.msvcrt.dll___pioinfo + iVar12 * 8) + 8 + iVar10) & 4) != 0) {\n                    uVar11 = uVar11 + 1;\n                }\n            }\n        }\n        else {\ncode_r0x0040d072:\n            uVar11 = uVar13;\n        }\n    }\n    iVar6 = iVar6 - uVar11;\ncode_r0x0040d078:\n    return iVar6 + iVar9;\n}\n",
        "token_count": 993
    },
    "0040d570": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0040d570(uint8_t *arg1, float10 *arg2)\n\n{\n    uint8_t *puVar1;\n    float10 fVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint8_t **ppuVar10;\n    uint8_t *puVar11;\n    uint8_t *puVar12;\n    uint *puVar13;\n    uint16_t *puVar14;\n    uint16_t uVar15;\n    uint8_t *puVar16;\n    uint16_t *puVar17;\n    uint64_t arg2_00;\n    uint8_t *puVar18;\n    uint32_t uVar19;\n    uint16_t uVar20;\n    uint32_t uVar21;\n    uint32_t uVar22;\n    int32_t iVar23;\n    int64_t arg1_00;\n    uint32_t uStack208;\n    uint16_t uStack202;\n    uint32_t uStack192;\n    uint32_t uStack188;\n    uint32_t uStack172;\n    ulong uStack168;\n    uint64_t uStack160;\n    uint16_t auStack152 [8];\n    ulong uStack136;\n    ulong uStack128;\n    uint16_t auStack120 [8];\n    uchar auStack104 [2];\n    uint16_t uStack102;\n    \n    ppuVar10 = sub.msvcrt.dll_localeconv();\n    uVar3 = **ppuVar10;\n    iVar6 = sub.msvcrt.dll_strlen(arg1);\n    puVar11 = sub.msvcrt.dll_malloc();\n    puVar12 = arg1;\n    while( true ) {\n        uVar4 = *puVar12;\n        iVar5 = puVar12;\n        iVar7 = sub.msvcrt.dll_isspace();\n        if (iVar7 == 0) break;\n        puVar12 = puVar12 + 1;\n    }\n    puVar18 = puVar11;\n    if (0 < iVar6 + 2) {\n        *puVar11 = uVar4;\n        puVar18 = puVar11 + 1;\n        if (uVar4 != 0) {\n            puVar1 = puVar12 + iVar6 + 1 + 1;\n            puVar16 = puVar11 + 1;\n            do {\n                puVar12 = puVar12 + 1;\n                puVar18 = puVar16;\n                if (puVar12 == puVar1) break;\n                uVar4 = *puVar12;\n                *puVar16 = uVar4;\n                puVar18 = puVar16 + 1;\n                puVar16 = puVar16 + 1;\n            } while (uVar4 != 0);\n        }\n    }\n    *puVar18 = 0;\n    if (*puVar11 == 0x2d) {\n        puVar12 = puVar11 + 1;\n        uStack202 = 0xffff;\n    }\n    else {\n        uStack202 = 0;\n        puVar12 = puVar11;\n        if (*puVar11 == 0x2b) {\n            puVar12 = puVar11 + 1;\n        }\n    }\n    iVar6 = sub.msvcrt.dll__strnicmp(0x4833a0, puVar12, 3);\n    if (iVar6 == 0) {\n        puVar18 = puVar12 + 8;\n        iVar6 = sub.msvcrt.dll__strnicmp(\"INITY\", puVar12 + 3, 5);\n        puVar12 = puVar12 + 3;\n        if (iVar6 == 0) {\n            puVar12 = puVar18;\n        }\n        uStack168 = 0x7fff0000;\n    }\n    else {\n        iVar6 = sub.msvcrt.dll__strnicmp();\n        if (iVar6 != 0) {\n            uVar4 = *puVar12;\n            uStack168 = 0;\n            uStack160 = 0;\n            auStack152[0] = 0;\n            if (uVar4 == 0x30) {\n                do {\n                    puVar12 = puVar12 + 1;\n                    uVar4 = *puVar12;\n                } while (uVar4 == 0x30);\n                uStack172 = 1;\n            }\n            else {\n                uStack172 = 0;\n            }\n            uVar19 = uVar4 - 0x30;\n            uVar22 = 0;\n            uStack208 = 0;\n            uVar21 = 0;\n            uStack188 = 0;\n            uVar8 = uVar22;\n            uVar9 = uStack208;\n            if (9 < uVar19) goto code_r0x0040d925;\n            do {\n                if (uStack168._4_2_ == 0) {\n                    puVar14 = auStack152;\n                    uVar22 = (uVar22 + 1) - (uVar9 == 0);\n                    uVar21 = 0;\n                    do {\n                        if (*puVar14 < 0) {\n                            uVar21 = uVar21 | 1;\n                        }\n                        uVar15 = *puVar14 * 2;\n                        if ((uVar21 & 2) != 0) {\n                            uVar15 = uVar15 | 1;\n                        }\n                        *puVar14 = uVar15;\n                        puVar14 = puVar14 + -1;\n                        uVar21 = uVar21 * 2;\n                    } while (puVar14 != &uStack168 + 2);\n                    puVar14 = auStack120;\n                    uStack136 = uStack168;\n                    uStack128 = uStack160;\n                    auStack120[0] = 0;\n                    uVar15 = 0;\n                    while( true ) {\n                        if (uStack168._4_2_ < 0) {\n                            uVar15 = uVar15 | 1;\n                        }\n                        uStack168._4_2_ = uStack168._4_2_ * 2;\n                        if ((uVar15 & 2) != 0) {\n                            uStack168._4_2_ = uStack168._4_2_ | 1;\n                        }\n                        *puVar14 = uStack168._4_2_;\n                        puVar14 = puVar14 + -1;\n                        uVar15 = uVar15 * 2;\n                        if (puVar14 == &uStack136 + 2) break;\n                        uStack168._4_2_ = *puVar14;\n                    }\n                    puVar14 = auStack120;\n                    uVar15 = 0;\n                    do {\n                        if (*puVar14 < 0) {\n                            uVar15 = uVar15 | 1;\n                        }\n                        uVar20 = *puVar14 * 2;\n                        if ((uVar15 & 2) != 0) {\n                            uVar20 = uVar20 | 1;\n                        }\n                        *puVar14 = uVar20;\n                        puVar14 = puVar14 + -1;\n                        uVar15 = uVar15 * 2;\n                    } while (puVar14 != &uStack136 + 2);\n                    fcn.00412700(&uStack136, &uStack168);\n                    uStack136 = 0;\n                    auStack120[0] = 0;\n                    uStack128 = uVar19 << 0x30;\n                    fcn.00412700(&uStack136, &uStack168);\n                }\n                else {\n                    uStack188 = uStack188 | uVar19;\n                    uVar22 = uVar22 - (uVar9 == 0);\n                }\n                uVar8 = uVar8 | uVar19;\n                uStack208 = uStack208 + 1;\n                uVar21 = uVar9;\n                while( true ) {\n                    puVar12 = puVar12 + 1;\n                    uVar4 = *puVar12;\n                    uVar19 = uVar4 - 0x30;\n                    uVar9 = uVar21;\n                    if (uVar19 < 10) break;\ncode_r0x0040d925:\n                    if (uVar3 != uVar4) {\n                        if (((uVar4 & 0xdf) != 0x45) || ((uStack208 | uStack172) == 0)) {\ncode_r0x0040d974:\n                            iVar23 = 0;\n                            goto code_r0x0040d977;\n                        }\n                        uVar3 = puVar12[1];\n                        if (uVar3 == 0x2d) {\n                            puVar18 = puVar12 + 2;\n                            uVar3 = puVar12[2];\n                            iVar6 = -1;\n                        }\n                        else {\n                            puVar18 = puVar12 + 1;\n                            iVar6 = 1;\n                        }\n                        if (uVar3 == 0x2b) {\n                            uVar3 = puVar18[1];\n                            puVar18 = puVar18 + 1;\n                        }\n                        iVar7 = 0;\n                        iVar23 = 0;\n                        if (uVar3 - 0x30 < 10) goto code_r0x0040dc8d;\n                        goto code_r0x0040d977;\n                    }\n                    if (uVar21 != 0) goto code_r0x0040d974;\n                    uVar21 = 1;\n                }\n            } while( true );\n        }\n        puVar12 = puVar12 + 3;\n        uStack168 = 0xc00000007fff0000;\n    }\ncode_r0x0040d6a5:\n    uStack160 = 0;\n    auStack152[0] = 0;\n    iVar6 = puVar12;\n    uStack168 = uStack168 | uStack202;\n    fcn.00412ac0(&uStack168, arg2);\n    goto code_r0x0040d6bc;\ncode_r0x0040dc8d:\n    do {\n        if (iVar7 < 0x1372) {\n            iVar7 = uVar3 + -0x30 + iVar7 * 10;\n        }\n        puVar12 = puVar18 + 1;\n        uVar3 = *puVar12;\n        puVar18 = puVar12;\n    } while (uVar3 - 0x30 < 10);\n    if (iVar6 == -1) {\n        iVar23 = -iVar7;\ncode_r0x0040dcc6:\n        if (iVar23 < -0x1371) {\ncode_r0x0040da9a:\n            uStack168 = 0;\n            uStack160 = 0;\n            auStack152[0] = 0;\n        }\n        else {\ncode_r0x0040d977:\n            uVar22 = iVar23 - uVar22;\n            if ((0 < uVar22) && (uStack168._4_2_ == 0)) {\n                puVar14 = &uStack136 + 2;\n                do {\n                    uVar15 = 0;\n                    puVar17 = auStack120;\n                    uStack136 = uStack168;\n                    uStack128 = uStack160;\n                    auStack120[0] = 0;\n                    uVar9 = 0;\n                    while( true ) {\n                        if (uVar15 < 0) {\n                            uVar9 = uVar9 | 1;\n                        }\n                        uVar15 = uVar15 * 2;\n                        if ((uVar9 & 2) != 0) {\n                            uVar15 = uVar15 | 1;\n                        }\n                        *puVar17 = uVar15;\n                        puVar17 = puVar17 + -1;\n                        uVar9 = uVar9 * 2;\n                        if (puVar17 == puVar14) break;\n                        uVar15 = *puVar17;\n                    }\n                    puVar17 = auStack120;\n                    uVar9 = 0;\n                    do {\n                        if (*puVar17 < 0) {\n                            uVar9 = uVar9 | 1;\n                        }\n                        uVar15 = *puVar17 * 2;\n                        if ((uVar9 & 2) != 0) {\n                            uVar15 = uVar15 | 1;\n                        }\n                        *puVar17 = uVar15;\n                        puVar17 = puVar17 + -1;\n                        uVar9 = uVar9 * 2;\n                    } while (puVar17 != puVar14);\n                    fcn.00412700(&uStack168, &uStack136);\n                    puVar17 = auStack120;\n                    uVar9 = 0;\n                    do {\n                        if (*puVar17 < 0) {\n                            uVar9 = uVar9 | 1;\n                        }\n                        uVar15 = *puVar17 * 2;\n                        if ((uVar9 & 2) != 0) {\n                            uVar15 = uVar15 | 1;\n                        }\n                        *puVar17 = uVar15;\n                        puVar17 = puVar17 + -1;\n                        uVar9 = uVar9 * 2;\n                    } while (puVar17 != puVar14);\n                    if (uStack136._4_2_ != 0) break;\n                    uStack168 = uStack136;\n                    uVar22 = uVar22 - 1;\n                    uStack160 = uStack128;\n                    auStack152[0] = 0;\n                } while (uVar22 != 0);\n            }\n            iVar6 = fcn.00412f80(&uStack168);\n            if (0x50 < iVar6) goto code_r0x0040da9a;\n            fcn.00413140(&uStack168, uStack188, 0, 0x404e - iVar6);\n            arg2_00 = 0;\n            uStack192 = uStack168._2_2_;\n            if (uVar22 != 0) {\n                uStack188 = 1;\n                uVar9 = uVar22;\n                if (uVar22 < 0) {\n                    uVar9 = -uVar22;\n                    if (uVar9 < 0x1001) {\n                        uStack188 = -1;\n                    }\n                    else {\n                        fcn.00412610(0x4833c0, auStack104);\n                        uVar9 = uStack102;\n                        fcn.00412780(auStack104, &uStack168);\n                        uStack192 = (uStack192 - uVar9) + 0x3fff;\n                        uStack188 = -1;\n                        uVar9 = -uVar22 - 0x1000;\n                    }\n                }\n                uVar21 = 1;\n                arg1_00 = 0x483450;\n                uStack136 = *0x48345c;\n                uStack128 = uStack128 & 0xffffffff00000000 | *0x483464;\n                do {\n                    if ((uVar21 & uVar9) != 0) {\n                        fcn.004134f0(arg1_00, &uStack136, &uStack136);\n                    }\n                    uVar21 = uVar21 * 2;\n                    arg1_00 = arg1_00 + -0xc;\n                } while (uVar21 < 0x1001);\n                fcn.00412610(&uStack136, auStack104);\n                if (uStack188 == -1) {\n                    uVar9 = fcn.00412780(auStack104, &uStack168);\n                    arg2_00 = uVar9;\n                    uStack192 = (uStack192 - uStack102) + 0x3fff;\n                }\n                else {\n                    uVar9 = fcn.004129e0(auStack104, &uStack168);\n                    arg2_00 = uVar9;\n                    uStack192 = (uStack192 + uStack102) - 0x3ffe;\n                }\n            }\n            fcn.00413140(&uStack168, arg2_00, 0, uStack192);\n        }\n        iVar6 = puVar12;\n        uStack168 = uStack168 & 0xffffffffffff0000 | uStack202;\n        fcn.00412ac0(&uStack168, arg2);\n        if (uVar8 != 0) goto code_r0x0040dacf;\n    }\n    else {\n        iVar23 = iVar7;\n        if (iVar7 < 0x1372) goto code_r0x0040dcc6;\n        uStack168 = 0;\n        uStack160 = 0;\n        auStack152[0] = 0;\n        if (uVar8 == 0) goto code_r0x0040d6a5;\n        uStack168 = uStack202 | 0x7fff0000;\n        fcn.00412ac0(&uStack168, arg2);\ncode_r0x0040dacf:\n        iVar6 = puVar12;\n        fVar2 = *arg2;\n        if ((fVar2 == 0) || (((fVar2 != 0) << 10 | (fVar2 == 0) << 0xe) == 0x500)) {\n            puVar13 = sub.msvcrt.dll__errno();\n            *puVar13 = 0x22;\n        }\n    }\n    uStack208 = uStack208 | uStack172;\n    if (uStack208 == 0) {\n        return 0;\n    }\ncode_r0x0040d6bc:\n    return (iVar5 - arg1) + (iVar6 - puVar11);\n}\n",
        "token_count": 3892
    },
    "0040e1c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.0040e1c0(uint16_t *arg1, uint32_t *arg2, uint64_t arg3, uint32_t *arg4)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t in_stack_00000028;\n    uint32_t in_stack_00000030;\n    uint32_t auStack40 [6];\n    \n    if (arg2 == NULL) {\n        return 0;\n    }\n    if (arg3 == 0) {\n        return 0xfffffffe;\n    }\n    uVar1 = *arg2;\n    auStack40[0] = *arg4;\n    *arg4 = 0;\n    if (uVar1 == 0) {\n        *arg1 = 0;\n        return 0;\n    }\n    if (in_stack_00000030 < 2) {\ncode_r0x0040e280:\n        if (in_stack_00000028 == 0) {\n            *arg1 = *arg2;\n            return 1;\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(in_stack_00000028, 8, arg2, 1, arg1, 1);\n        if (iVar2 != 0) {\n            return 1;\n        }\n    }\n    else {\n        if (auStack40[0] == '\\0') {\n            iVar2 = (*_sym.imp.KERNEL32.dll_IsDBCSLeadByteEx)(in_stack_00000028);\n            if (iVar2 == 0) goto code_r0x0040e280;\n            if (arg3 < 2) {\n                *arg4 = *arg2;\n                return 0xfffffffe;\n            }\n        }\n        else {\n            auStack40[0]._0_2_ = CONCAT11(uVar1, auStack40[0]);\n            auStack40[0] = auStack40[0] & 0xffff0000 | auStack40[0];\n            arg2 = auStack40;\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(in_stack_00000028, 8, arg2, 2, arg1, 1);\n        if (iVar2 != 0) {\n            return 2;\n        }\n    }\n    puVar3 = sub.msvcrt.dll__errno();\n    *puVar3 = 0x2a;\n    return 0xffffffff;\n}\n",
        "token_count": 555
    },
    "0040e840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.0040e840(ulong arg1, int64_t arg2, int64_t arg3)\n\n{\n    int64_t iVar1;\n    uint8_t *puVar2;\n    uint32_t uVar3;\n    uint8_t auStack24 [24];\n    \n    *(arg3 + 0x10) = 0xffffffff;\n    if (arg1 == 0) {\n        uVar3 = *(arg3 + 8);\n        if ((uVar3 & 0x100) == 0) {\n            if ((uVar3 & 0x40) == 0) {\n                puVar2 = auStack24;\n            }\n            else {\n                auStack24[0] = 0x20;\n                puVar2 = auStack24 + 1;\n            }\n        }\n        else {\n            auStack24[0] = 0x2b;\n            puVar2 = auStack24 + 1;\n        }\n    }\n    else {\n        uVar3 = *(arg3 + 8);\n        auStack24[0] = 0x2d;\n        puVar2 = auStack24 + 1;\n    }\n    iVar1 = 0;\n    do {\n        puVar2[iVar1] = *(arg2 + iVar1) & 0xdf | uVar3 & 0x20;\n        iVar1 = iVar1 + 1;\n    } while (iVar1 != 3);\n    fcn.0040e780(auStack24, puVar2 + (3 - auStack24), arg3);\n    return;\n}\n",
        "token_count": 342
    },
    "0040e8e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040e8e0(uint64_t arg1, int64_t arg2)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    char *pcVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    char *pcVar8;\n    char *pcVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    ulong auStack80 [5];\n    \n    iVar10 = *(arg2 + 0x10);\n    uVar7 = *(arg2 + 8);\n    auStack80[0] = 0x40e935;\n    uVar6 = arg1;\n    iVar3 = fcn.0040ce40(arg1);\n    iVar3 = -iVar3;\n    pcVar1 = &stack0xffffffffffffffd8 + iVar3;\n    if ((uVar7 & 0x80) != 0) {\n        if (arg1 < 0) {\n            uVar6 = -arg1;\n        }\n        else {\n            *(arg2 + 8) = uVar7 & 0xffffff7f;\n        }\n    }\n    pcVar9 = pcVar1;\n    if (uVar6 != 0) {\n        while( true ) {\n            pcVar8 = pcVar9;\n            pcVar9 = pcVar8 + 1;\n            uVar7 = uVar6 / 10;\n            *pcVar8 = uVar6 + uVar7 * -10 + '0';\n            if (uVar7 == 0) break;\n            uVar6 = uVar7;\n            if ((((pcVar1 != pcVar9) && ((*(arg2 + 9) & 0x10) != 0)) && (*(arg2 + 0x20) != 0)) &&\n               (iVar4 = pcVar9 - pcVar1,  (iVar4 + ((iVar4 >> 0x5f) >> 0x1e) & 3) - ((iVar4 >> 0x3f) >> 0x3e) == 3)) {\n                pcVar8[1] = ',';\n                pcVar9 = pcVar8 + 2;\n            }\n        }\n        iVar10 = *(arg2 + 0x10);\n    }\n    if ((0 < iVar10) && (iVar10 = iVar10 + (pcVar1 - pcVar9),  0 < iVar10)) {\n        uVar11 = iVar10 - 1;\n        pcVar8 = pcVar9;\n        do {\n            pcVar5 = pcVar8 + 1;\n            *pcVar8 = '0';\n            pcVar8 = pcVar5;\n        } while (pcVar5 != pcVar9 + uVar11 + 1);\n        pcVar9 = pcVar9 + uVar11 + 1;\n    }\n    if ((pcVar9 == pcVar1) && (*(arg2 + 0x10) != 0)) {\n        *pcVar9 = '0';\n        pcVar9 = pcVar9 + 1;\n    }\n    if (0 < *(arg2 + 0xc)) {\n        iVar10 = (pcVar1 - pcVar9) + *(arg2 + 0xc);\n        uVar11 = *(arg2 + 8);\n        *(arg2 + 0xc) = iVar10;\n        if (iVar10 < 1) goto code_r0x0040ea6e;\n        if ((uVar11 & 0x1c0) != 0) {\n            *(arg2 + 0xc) = iVar10 + -1;\n        }\n        if ((*(arg2 + 0x10) < 0) && ((uVar11 & 0x600) == 0x200)) {\n            iVar10 = *(arg2 + 0xc);\n            *(arg2 + 0xc) = iVar10 + -1;\n            pcVar8 = pcVar9;\n            if (iVar10 < 1) goto code_r0x0040ea6e;\n            do {\n                pcVar9 = pcVar8 + 1;\n                *pcVar8 = '0';\n                iVar10 = *(arg2 + 0xc);\n                *(arg2 + 0xc) = iVar10 + -1;\n                pcVar8 = pcVar9;\n            } while (0 < iVar10);\n        }\n        else {\n            if (((uVar11 & 0x400) != 0) || (iVar10 = *(arg2 + 0xc),  *(arg2 + 0xc) = iVar10 + -1,  iVar10 < 1))\n            goto code_r0x0040ea6e;\n            do {\n                *(&stack0xffffffffffffffb0 + iVar3) = 0x40ea5e;\n                fcn.0040e610(0x20, arg2);\n                iVar10 = *(arg2 + 0xc);\n                *(arg2 + 0xc) = iVar10 + -1;\n            } while (0 < iVar10);\n        }\n    }\n    uVar11 = *(arg2 + 8);\ncode_r0x0040ea6e:\n    if ((uVar11 & 0x80) == 0) {\n        if ((uVar11 & 0x100) == 0) {\n            pcVar8 = pcVar9;\n            if ((uVar11 & 0x40) != 0) {\n                pcVar8 = pcVar9 + 1;\n                *pcVar9 = ' ';\n            }\n        }\n        else {\n            *pcVar9 = '+';\n            pcVar8 = pcVar9 + 1;\n        }\n    }\n    else {\n        *pcVar9 = '-';\n        pcVar8 = pcVar9 + 1;\n    }\n    if (pcVar8 <= pcVar1) goto code_r0x0040eaae;\n    do {\n        pcVar8 = pcVar8 + -1;\n        cVar2 = *pcVar8;\n        *(&stack0xffffffffffffffb0 + iVar3) = 0x40ea8f;\n        fcn.0040e610(cVar2, arg2);\n    } while (pcVar8 != pcVar1);\n    iVar10 = *(arg2 + 0xc);\n    *(arg2 + 0xc) = iVar10 + -1;\n    while (0 < iVar10) {\n        *(&stack0xffffffffffffffb0 + iVar3) = 0x40eaae;\n        fcn.0040e610(0x20, arg2);\ncode_r0x0040eaae:\n        iVar10 = *(arg2 + 0xc);\n        *(arg2 + 0xc) = iVar10 + -1;\n    }\n    return;\n}\n",
        "token_count": 1484
    },
    "0040eb90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040eb90(ulong arg1, uint64_t arg2, int64_t arg3)\n\n{\n    uint8_t *puVar1;\n    bool bVar2;\n    uint8_t uVar3;\n    int64_t iVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    uint64_t arg1_00;\n    uint8_t uVar7;\n    uint8_t *puVar8;\n    int32_t iVar9;\n    uint8_t uVar10;\n    uint64_t uVar11;\n    int32_t iVar12;\n    uint32_t uVar13;\n    int32_t iVar14;\n    ulong auStack96 [5];\n    \n    iVar12 = *(arg3 + 0x10);\n    uVar13 = *(arg3 + 8);\n    arg1_00 = (arg1 != 0x6f) + 3;\n    uVar10 = (arg1 != 0x6f) * '\\b' + 7;\n    auStack96[0] = 0x40ec10;\n    uVar11 = arg2;\n    iVar4 = fcn.0040ce40(arg1_00);\n    iVar4 = -iVar4;\n    puVar1 = &stack0xffffffffffffffc8 + iVar4;\n    if (arg2 == 0) {\ncode_r0x0040ee71:\n        *(arg3 + 8) = uVar13 & 0xfffff7ff;\n        puVar8 = puVar1;\n    }\n    else {\n        puVar6 = puVar1;\n        do {\n            while( true ) {\n                puVar8 = puVar6 + 1;\n                uVar3 = uVar10 & uVar11;\n                uVar7 = uVar3 + 0x30;\n                if (uVar7 < ':') break;\n                uVar11 = uVar11 >> (arg1_00 & 0x3f);\n                *puVar6 = uVar3 + 0x37 | arg1 & 0x20;\n                puVar6 = puVar8;\n                if (uVar11 == 0) goto code_r0x0040ec5e;\n            }\n            uVar11 = uVar11 >> (arg1_00 & 0x3f);\n            *puVar6 = uVar7;\n            puVar6 = puVar8;\n        } while (uVar11 != 0);\ncode_r0x0040ec5e:\n        if (puVar1 == puVar8) {\n            uVar13 = *(arg3 + 8);\n            iVar12 = *(arg3 + 0x10);\n            goto code_r0x0040ee71;\n        }\n        iVar12 = *(arg3 + 0x10);\n    }\n    if ((iVar12 < 1) || (iVar12 = iVar12 + (puVar1 - puVar8),  iVar12 < 1)) {\n        if ((arg1 == 0x6f) && ((*(arg3 + 9) & 8) != 0)) {\n            *puVar8 = 0x30;\n            puVar8 = puVar8 + 1;\n        }\n    }\n    else {\n        uVar13 = iVar12 - 1;\n        puVar6 = puVar8;\n        do {\n            puVar5 = puVar6 + 1;\n            *puVar6 = 0x30;\n            puVar6 = puVar5;\n        } while (puVar5 != puVar8 + uVar13 + 1);\n        puVar8 = puVar8 + uVar13 + 1;\n    }\n    if ((puVar8 == puVar1) && (*(arg3 + 0x10) != 0)) {\n        *puVar8 = 0x30;\n        puVar8 = puVar8 + 1;\n    }\n    iVar12 = puVar8 - puVar1;\n    if (iVar12 < *(arg3 + 0xc)) {\n        iVar12 = *(arg3 + 0xc) - iVar12;\n        *(arg3 + 0xc) = iVar12;\n        if (iVar12 < 1) {\ncode_r0x0040ecfa:\n            iVar14 = iVar12 + -1;\n            goto code_r0x0040ecfe;\n        }\n        iVar9 = iVar12;\n        if (((arg1 == 0x6f) || ((*(arg3 + 9) & 8) == 0)) || (iVar9 = iVar12 + -2,  0 < iVar9)) {\n            iVar12 = iVar9;\n            if ((*(arg3 + 0x10) < 0) && ((*(arg3 + 8) & 0x600) == 0x200)) {\n                puVar6 = puVar8;\n                do {\n                    puVar5 = puVar6 + 1;\n                    *puVar6 = 0x30;\n                    puVar6 = puVar5;\n                } while (puVar5 != puVar8 + (iVar12 - 1U) + 1);\n                iVar14 = -2;\n                puVar8 = puVar8 + (iVar12 - 1U) + 1;\n                iVar12 = -1;\n                goto code_r0x0040ecfe;\n            }\n            goto code_r0x0040ecfa;\n        }\n        iVar14 = iVar12 + -3;\n        iVar12 = iVar9;\n    }\n    else {\n        *(arg3 + 0xc) = 0xffffffff;\n        iVar14 = -2;\n        iVar12 = -1;\ncode_r0x0040ecfe:\n        if ((arg1 == 0x6f) || ((*(arg3 + 9) & 8) == 0)) goto code_r0x0040ed1b;\n    }\n    *puVar8 = arg1;\n    puVar8[1] = 0x30;\n    puVar8 = puVar8 + 2;\ncode_r0x0040ed1b:\n    if ((0 < iVar12) && (iVar9 = iVar14,  (*(arg3 + 9) & 4) == 0)) {\n        do {\n            *(&stack0xffffffffffffffa0 + iVar4) = 0x40ed40;\n            fcn.0040e610(0x20, arg3);\n            bVar2 = 0 < iVar9;\n            iVar9 = iVar9 + -1;\n        } while (bVar2);\n        iVar12 = 0;\n        if (-1 < iVar14) {\n            iVar12 = iVar14;\n        }\n        iVar12 = (iVar14 + -1) - iVar12;\n        iVar14 = iVar12 + -1;\n    }\n    if (puVar1 < puVar8) {\n        do {\n            puVar8 = puVar8 + -1;\n            uVar10 = *puVar8;\n            *(&stack0xffffffffffffffa0 + iVar4) = 0x40ed6f;\n            fcn.0040e610(uVar10, arg3);\n        } while (puVar8 != puVar1);\n    }\n    while (iVar9 = iVar14,  0 < iVar12) {\n        *(&stack0xffffffffffffffa0 + iVar4) = 0x40ed90;\n        fcn.0040e610(0x20, arg3);\n        iVar14 = iVar9 + -1;\n        iVar12 = iVar9;\n    }\n    return;\n}\n",
        "token_count": 1637
    },
    "0040ef80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040ef80(ulong arg1, char *arg2, ulong arg3, int64_t arg4)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    int32_t iVar5;\n    \n    iVar5 = *(arg4 + 0xc);\n    if (arg3 < 1) {\n        if (iVar5 < 1) goto code_r0x0040efb1;\n        iVar5 = iVar5 + -1;\n        *(arg4 + 0xc) = iVar5;\ncode_r0x0040efba:\n        iVar3 = *(arg4 + 0x10);\n        if (iVar5 <= iVar3) goto code_r0x0040f0b5;\n        iVar5 = iVar5 - iVar3;\n        *(arg4 + 0xc) = iVar5;\n        if ((0 < iVar5) && ((0 < iVar3 || ((*(arg4 + 9) & 8) != 0)))) {\n            iVar5 = iVar5 + -1;\n            *(arg4 + 0xc) = iVar5;\n        }\n    }\n    else {\n        if (arg3 < iVar5) {\n            iVar5 = iVar5 - arg3;\n            *(arg4 + 0xc) = iVar5;\ncode_r0x0040efb1:\n            if (-1 < iVar5) goto code_r0x0040efba;\n        }\ncode_r0x0040f0b5:\n        *(arg4 + 0xc) = 0xffffffff;\n        iVar5 = -1;\n    }\n    if ((((arg3 < 1) || ((*(arg4 + 9) & 0x10) == 0)) || (*(arg4 + 0x20) == 0)) || (iVar3 = (arg3 + 2) / 3,  iVar3 < 2))\n    {\ncode_r0x0040eff0:\n        if (0 < iVar5) {\n            if ((arg1 != 0) || (uVar2 = *(arg4 + 8),  (uVar2 & 0x1c0) != 0)) {\n                *(arg4 + 0xc) = iVar5 + -1;\n                if (iVar5 + -1 == 0) goto joined_r0x0040f14c;\n                uVar2 = *(arg4 + 8);\n            }\n            if ((uVar2 & 0x600) == 0) {\n                while (iVar5 = *(arg4 + 0xc),  *(arg4 + 0xc) = iVar5 + -1,  0 < iVar5) {\n                    fcn.0040e610(0x20, arg4);\n                }\n            }\n        }\n    }\n    else if (0 < iVar5) {\n        iVar3 = iVar5 - iVar3;\n        do {\n            iVar5 = iVar5 + -1;\n            if (iVar5 == iVar3 + 1) {\n                *(arg4 + 0xc) = iVar5;\n                goto code_r0x0040eff0;\n            }\n        } while (iVar5 != 0);\n        *(arg4 + 0xc) = 0;\n    }\njoined_r0x0040f14c:\n    if (arg1 == 0) {\n        if ((*(arg4 + 8) & 0x100) == 0) {\n            if ((*(arg4 + 8) & 0x40) != 0) {\n                fcn.0040e610(0x20, arg4);\n            }\n        }\n        else {\n            fcn.0040e610(0x2b, arg4);\n        }\n    }\n    else {\n        fcn.0040e610(0x2d, arg4);\n    }\n    if ((0 < *(arg4 + 0xc)) && ((*(arg4 + 8) & 0x600) == 0x200)) {\n        *(arg4 + 0xc) = *(arg4 + 0xc) + -1;\n        do {\n            fcn.0040e610(0x30, arg4);\n            iVar5 = *(arg4 + 0xc);\n            *(arg4 + 0xc) = iVar5 + -1;\n        } while (0 < iVar5);\n    }\n    if (arg3 < 1) {\n        fcn.0040e610(0x30, arg4);\n    }\n    else {\n        while( true ) {\n            cVar1 = *arg2;\n            uVar4 = 0x30;\n            if (cVar1 != '\\0') {\n                arg2 = arg2 + 1;\n                uVar4 = cVar1;\n            }\n            fcn.0040e610(uVar4, arg4);\n            arg3._0_4_ = arg3 + -1;\n            if (arg3 == 0) break;\n            if ((((*(arg4 + 9) & 0x10) != 0) && (*(arg4 + 0x20) != 0)) && (arg3 == (arg3 / 3) * 3)) {\n                fcn.0040e670(arg4 + 0x20, 1, arg4);\n            }\n        }\n    }\n    iVar5 = *(arg4 + 0x10);\n    if ((0 < iVar5) || ((*(arg4 + 9) & 8) != 0)) {\n        fcn.0040ee90(arg4);\n        iVar5 = *(arg4 + 0x10);\n    }\n    if (arg3 == 0) goto code_r0x0040f1ae;\n    *(arg4 + 0x10) = iVar5 + arg3;\n    do {\n        fcn.0040e610(0x30, arg4);\n        arg3._0_4_ = arg3 + 1;\n    } while (arg3 < 0);\n    while( true ) {\n        iVar5 = *(arg4 + 0x10);\ncode_r0x0040f1ae:\n        *(arg4 + 0x10) = iVar5 + -1;\n        if (iVar5 < 1) break;\n        cVar1 = *arg2;\n        uVar4 = 0x30;\n        if (cVar1 != '\\0') {\n            arg2 = arg2 + 1;\n            uVar4 = cVar1;\n        }\n        fcn.0040e610(uVar4, arg4);\n    }\n    return;\n}\n",
        "token_count": 1437
    },
    "0040f6b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040f6b0(float10 *noname_0, int64_t arg2)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int16_t iVar4;\n    uint8_t *puVar5;\n    uint8_t uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint8_t *puVar9;\n    uint8_t *puVar10;\n    int16_t iVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    int16_t iStack106;\n    uchar auStack104 [16];\n    uint8_t uStack88;\n    uint8_t auStack87 [39];\n    \n    auStack104._0_10_ = *noname_0;\n    if (((auStack104._0_10_ != 0) << 10 | (auStack104._0_10_ == 0) << 0xe) == 0x100) {\n        fcn.0040e840(0, 0x4835a0, arg2);\n        return;\n    }\n    auStack104._8_2_ = auStack104._0_10_ >> 0x40;\n    if ((auStack104._0_10_ & 0x8000) != 0) {\n        *(arg2 + 8) = *(arg2 + 8) | 0x80;\n    }\n    if (((auStack104._0_10_ != 0) << 10 | (auStack104._0_10_ == 0) << 0xe) == 0x500) {\n        fcn.0040e840(auStack104._8_2_ & 0x8000, 0x4835a4, arg2);\n        return;\n    }\n    if ((auStack104._0_10_ & 0x7fff) == 0) {\n        if (auStack104._0_8_ == 0) {\n            iVar11 = 0;\n            auStack104._0_8_ = 0;\n            goto code_r0x0040f717;\n        }\n        if (auStack104._0_8_ < 0) {\n            iVar11 = -0x3ffe;\n            goto code_r0x0040f717;\n        }\n        iVar4 = -0x3fff;\n        do {\n            iVar11 = iVar4;\n            auStack104._0_8_ = auStack104._0_8_ * 2;\n            iVar4 = iVar11 + -1;\n        } while (-1 < auStack104._0_8_);\n        uVar7 = *(arg2 + 0x10);\n        if (uVar7 < 0xf) goto joined_r0x0040f726;\ncode_r0x0040f856:\n        if (auStack104._0_8_ != 0) goto code_r0x0040f764;\n    }\n    else {\n        iVar11 = (auStack104._8_2_ & 0x7fff) + 0xc001;\ncode_r0x0040f717:\n        uVar7 = *(arg2 + 0x10);\n        if (0xe < uVar7) goto code_r0x0040f856;\njoined_r0x0040f726:\n        for (; -1 < auStack104._0_8_; auStack104._0_8_ = auStack104._0_8_ * 2) {\n        }\n        auStack104._0_8_ = (auStack104._0_8_ >> 1) + (4 << (('\\x0e' - uVar7) * '\\x04' & 0x3fU));\n        if (auStack104._0_8_ < 0) {\n            iVar11 = iVar11 + 1;\n        }\n        else {\n            auStack104._0_8_ = auStack104._0_8_ * 2;\n        }\n        auStack104._0_8_ = auStack104._0_8_ >> (('\\x0f' - uVar7) * '\\x04' & 0x3fU);\ncode_r0x0040f764:\n        puVar10 = &uStack88;\n        do {\n            uVar2 = auStack104._0_8_ & 0xf;\n            uVar3 = auStack104._0_8_ & 0xf;\n            uVar7 = auStack104._0_8_ & 0xf;\n            if (uVar7 == auStack104._0_8_) {\n                if (((&uStack88 < puVar10) || ((*(arg2 + 9) & 8) != 0)) || (0 < *(arg2 + 0x10))) {\n                    *puVar10 = 0x2e;\n                    puVar10 = puVar10 + 1;\n                }\n                for (; 1 < auStack104._0_8_; auStack104._0_8_ = auStack104._0_8_ >> 1) {\n                    iVar11 = iVar11 + -1;\n                }\n                auStack104._0_8_ = 0;\n                puVar5 = puVar10;\n                if (uVar2 != 0) goto code_r0x0040f788;\ncode_r0x0040f7f4:\n                if ((&uStack88 < puVar10) || (-1 < *(arg2 + 0x10))) {\n                    puVar9 = puVar10 + 1;\n                    puVar5 = puVar10;\n                    goto code_r0x0040f809;\n                }\n            }\n            else {\n                if (0 < *(arg2 + 0x10)) {\n                    *(arg2 + 0x10) = *(arg2 + 0x10) + -1;\n                }\n                auStack104._0_8_ = auStack104._0_8_ >> 4;\n                puVar5 = puVar10;\n                if (uVar3 == 0) goto code_r0x0040f7f4;\ncode_r0x0040f788:\n                puVar9 = puVar5 + 1;\n                if (uVar7 < 10) {\ncode_r0x0040f809:\n                    uVar6 = uVar7 + 0x30;\n                    puVar10 = puVar9;\n                }\n                else {\n                    uVar6 = uVar7 + 0x37U | *(arg2 + 8) & 0x20;\n                    puVar10 = puVar9;\n                }\n                *puVar5 = uVar6;\n            }\n        } while (auStack104._0_8_ != 0);\n        if (puVar10 != &uStack88) {\n            iVar13 = *(arg2 + 0xc);\n            uVar1 = *(arg2 + 8);\n            goto joined_r0x0040f97a;\n        }\n        uVar7 = *(arg2 + 0x10);\n    }\n    puVar5 = &uStack88;\n    uVar1 = *(arg2 + 8);\n    if ((0 < uVar7) || ((uVar1 & 0x800) != 0)) {\n        puVar5 = auStack87;\n        uStack88 = 0x2e;\n    }\n    iVar13 = *(arg2 + 0xc);\n    puVar10 = puVar5 + 1;\n    *puVar5 = 0x30;\njoined_r0x0040f97a:\n    iVar14 = 2;\n    if (0 < iVar13) {\n        iVar14 = 2;\n        iVar8 = puVar10 - (*0x20 + -0x58);\n        iVar12 = *(arg2 + 0x10) + iVar8;\n        if (*(arg2 + 0x10) < 1) {\n            iVar12 = iVar8;\n        }\n        iVar12 = (iVar12 + 6) - ((uVar1 & 0x1c0) == 0);\n        iVar8 = iVar11 / 10;\n        if (iVar8 != 0) {\n            do {\n                iVar12 = iVar12 + 1;\n                iVar14 = iVar14 + 1;\n                iVar8 = iVar8 / 10;\n            } while (iVar8 != 0);\n            iVar14 = iVar14;\n        }\n        if (iVar12 < iVar13) {\n            iVar13 = iVar13 - iVar12;\n            if ((uVar1 & 0x600) == 0) {\n                *(arg2 + 0xc) = iVar13 + -1;\n                if (0 < iVar13) {\n                    do {\n                        fcn.0040e610(0x20, arg2);\n                        iVar13 = *(arg2 + 0xc);\n                        *(arg2 + 0xc) = iVar13 + -1;\n                    } while (0 < iVar13);\n                    uVar1 = *(arg2 + 8);\n                }\n            }\n            else {\n                *(arg2 + 0xc) = iVar13;\n            }\n        }\n        else {\n            *(arg2 + 0xc) = 0xffffffff;\n        }\n    }\n    if ((uVar1 & 0x80) == 0) {\n        if ((uVar1 & 0x100) == 0) {\n            if ((uVar1 & 0x40) != 0) {\n                fcn.0040e610(0x20, arg2);\n            }\n        }\n        else {\n            fcn.0040e610(0x2b, arg2);\n        }\n    }\n    else {\n        fcn.0040e610(0x2d, arg2);\n    }\n    fcn.0040e610(0x30, arg2);\n    fcn.0040e610(*(arg2 + 8) & 0x20 | 0x58, arg2);\n    if ((0 < *(arg2 + 0xc)) && ((*(arg2 + 9) & 2) != 0)) {\n        *(arg2 + 0xc) = *(arg2 + 0xc) + -1;\n        do {\n            fcn.0040e610(0x30, arg2);\n            iVar13 = *(arg2 + 0xc);\n            *(arg2 + 0xc) = iVar13 + -1;\n        } while (0 < iVar13);\n    }\n    if (&uStack88 < puVar10) {\n        do {\n            puVar10 = puVar10 + -1;\n            uVar7 = *puVar10;\n            if (uVar7 == 0x2e) {\n                fcn.0040ee90(arg2);\n            }\n            else if (uVar7 == 0x2c) {\n                iStack106 = *(arg2 + 0x20);\n                if (iStack106 != 0) {\n                    fcn.0040e670(&iStack106, 1, arg2);\n                }\n            }\n            else {\n                fcn.0040e610(uVar7, arg2);\n            }\n        } while (puVar10 != &uStack88);\n    }\n    while (iVar13 = *(arg2 + 0x10),  *(arg2 + 0x10) = iVar13 + -1,  0 < iVar13) {\n        fcn.0040e610(0x30, arg2);\n    }\n    fcn.0040e610(*(arg2 + 8) & 0x20 | 0x50, arg2);\n    *(arg2 + 0xc) = *(arg2 + 0xc) + iVar14;\n    *(arg2 + 8) = *(arg2 + 8) | 0x1c0;\n    fcn.0040e8e0(iVar11, arg2);\n    return;\n}\n",
        "token_count": 2623
    },
    "0040fb50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0040fb50(ulong arg1, ulong arg2, ulong arg3, char *arg4)\n\n{\n    char *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    char cVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    char *pcVar7;\n    int64_t iVar8;\n    uint32_t uVar9;\n    uint64_t arg2_00;\n    float10 *pfVar10;\n    int32_t iVar11;\n    int32_t *piVar12;\n    float10 **in_stack_00000028;\n    float10 afStack168 [3];\n    ushort uStack138;\n    float10 *apfStack136 [2];\n    ulong uStack120;\n    uint32_t uStack112;\n    int32_t iStack108;\n    int32_t iStack104;\n    uint uStack100;\n    ushort uStack96;\n    int32_t iStack92;\n    ushort uStack88;\n    int32_t iStack84;\n    uint uStack80;\n    int32_t iStack76;\n    \n    arg1._0_4_ = arg1 & 0x6000;\n    puVar6 = sub.msvcrt.dll__errno();\n    uVar2 = *puVar6;\n    iStack108 = -1;\n    iStack104 = -1;\n    uStack100 = 0xfffffffd;\n    uStack96 = 0;\n    iStack92 = 0;\n    uStack88 = 0;\n    iStack84 = 0;\n    uStack120 = arg2;\n    uStack112 = arg1;\n    uStack80 = arg3;\n    pcVar7 = sub.msvcrt.dll_getenv();\n    if ((pcVar7 == NULL) || (iStack76 = 2,  2 < *pcVar7 - 0x30U)) {\n        uVar5 = func_0x0046b100();\n        iStack76 = 3 - (uVar5 & 1);\n    }\ncode_r0x0040fc60:\n    do {\n        cVar4 = *arg4;\n        while( true ) {\n            uVar5 = cVar4;\n            if (uVar5 == 0) {\n                return iStack84;\n            }\n            pcVar7 = arg4 + 1;\n            if (uVar5 == 0x25) break;\n            fcn.0040e610(uVar5, &uStack120);\n            cVar4 = *pcVar7;\n            arg4 = pcVar7;\n        }\n        iStack104 = -1;\n        iVar11 = 0;\n        iStack108 = -1;\n        cVar4 = arg4[1];\n        uVar5 = 0;\n        piVar12 = &iStack108;\n        uStack112 = arg1;\n        pcVar1 = pcVar7;\njoined_r0x0040fca3:\n        arg4 = pcVar1;\n        if (cVar4 != '\\0') {\n            pcVar1 = arg4 + 1;\n            uVar9 = cVar4;\n    // switch table (91 cases) at 0x4835d4\n            switch(cVar4) {\n            case ' ':\n                if (uVar5 == 0) {\n                    uStack112 = uStack112 | 0x40;\n                    cVar4 = arg4[1];\n                    goto joined_r0x0040fca3;\n                }\n                break;\n            default:\n                goto code_r0x00410189;\n            case '#':\n                if (uVar5 == 0) {\n                    uStack112 = uStack112 | 0x800;\n                    cVar4 = arg4[1];\n                    goto joined_r0x0040fca3;\n                }\n                break;\n            case '%':\n                fcn.0040e610(uVar9, &uStack120);\n                arg4 = pcVar1;\n                goto code_r0x0040fc60;\n            case '\\'':\n                if (uVar5 == 0) {\n                    uStack112 = uStack112 | 0x1000;\n                    apfStack136[0] = apfStack136[0] & 0xffffffff00000000;\n                    iVar8 = sub.msvcrt.dll_localeconv();\n                    iStack92 = fcn.0040e340(&uStack138, *(iVar8 + 8), 0x10, apfStack136);\n                    if (0 < iStack92) {\n                        uStack88 = uStack138;\n                    }\n                    cVar4 = arg4[1];\n                    goto joined_r0x0040fca3;\n                }\n                break;\n            case '*':\n                if (piVar12 == NULL) goto code_r0x004101dd;\n                if ((uVar5 & 0xfffffffd) != 0) {\n                    cVar4 = arg4[1];\n                    piVar12 = NULL;\n                    uVar5 = 4;\n                    goto joined_r0x0040fca3;\n                }\n                iVar3 = *in_stack_00000028;\n                in_stack_00000028 = in_stack_00000028 + 1;\n                *piVar12 = iVar3;\n                if (iVar3 < 0) {\n                    if (uVar5 != 0) {\n                        iStack104 = -1;\n                        cVar4 = arg4[1];\n                        piVar12 = NULL;\n                        goto joined_r0x0040fca3;\n                    }\n                    uStack112 = uStack112 | 0x400;\n                    iStack108 = -iStack108;\n                }\n                cVar4 = arg4[1];\n                piVar12 = NULL;\n                goto joined_r0x0040fca3;\n            case '+':\n                if (uVar5 == 0) {\n                    uStack112 = uStack112 | 0x100;\n                    cVar4 = arg4[1];\n                    goto joined_r0x0040fca3;\n                }\n                break;\n            case '-':\n                if (uVar5 == 0) {\n                    uStack112 = uStack112 | 0x400;\n                    cVar4 = arg4[1];\n                    goto joined_r0x0040fca3;\n                }\n                break;\n            case '.':\n                if (uVar5 < 2) {\n                    iStack104 = 0;\n                    piVar12 = &iStack104;\n                    cVar4 = arg4[1];\n                    uVar5 = 2;\n                }\n                else {\ncode_r0x004101dd:\n                    cVar4 = arg4[1];\n                    uVar5 = 4;\n                }\n                goto joined_r0x0040fca3;\n            case '0':\n                if (uVar5 == 0) {\n                    uStack112 = uStack112 | 0x200;\n                    cVar4 = arg4[1];\n                    goto joined_r0x0040fca3;\n                }\ncode_r0x00410189:\n                if ((uVar5 == 4) || (9 < cVar4 - 0x30U)) {\n                    fcn.0040e610(0x25, &uStack120);\n                    arg4 = pcVar7;\n                    goto code_r0x0040fc60;\n                }\n                if (uVar5 == 0) {\n                    uVar5 = 1;\n                }\n                else if (uVar5 == 2) {\n                    uVar5 = 3;\n                }\n                if (piVar12 != NULL) {\n                    if (*piVar12 < 0) {\n                        *piVar12 = uVar9 - 0x30;\n                        cVar4 = arg4[1];\n                        goto joined_r0x0040fca3;\n                    }\n                    *piVar12 = (uVar9 - 0x30) + *piVar12 * 10;\n                }\n                break;\n            case 'A':\n                if ((uStack112 & 4) != 0) goto code_r0x0040ffcf;\ncode_r0x00410163:\n                afStack168[0] = *in_stack_00000028;\n                fcn.0040f6b0(afStack168, &uStack120);\n                arg4 = pcVar1;\n                in_stack_00000028 = in_stack_00000028 + 1;\n                goto code_r0x0040fc60;\n            case 'C':\n                goto code_r0x00410120;\n            case 'E':\n                if ((uStack112 & 4) != 0) goto code_r0x0040fefd;\ncode_r0x004100f8:\n                afStack168[0] = *in_stack_00000028;\n                fcn.0040f370(afStack168, &uStack120);\n                arg4 = pcVar1;\n                in_stack_00000028 = in_stack_00000028 + 1;\n                goto code_r0x0040fc60;\n            case 'F':\n                if ((uStack112 & 4) != 0) goto code_r0x0040febd;\ncode_r0x004100c8:\n                afStack168[0] = *in_stack_00000028;\n                fcn.0040f420(afStack168, &uStack120);\n                arg4 = pcVar1;\n                in_stack_00000028 = in_stack_00000028 + 1;\n                goto code_r0x0040fc60;\n            case 'G':\n                if ((uStack112 & 4) != 0) goto code_r0x0040fe50;\ncode_r0x00410098:\n                afStack168[0] = *in_stack_00000028;\n                fcn.0040f510(afStack168, &uStack120);\n                arg4 = pcVar1;\n                in_stack_00000028 = in_stack_00000028 + 1;\n                goto code_r0x0040fc60;\n            case 'I':\n                cVar4 = arg4[1];\n                if (cVar4 == '6') {\n                    if (arg4[2] == '4') {\n                        cVar4 = arg4[3];\n                        iVar11 = 3;\n                        uVar5 = 4;\n                        pcVar1 = arg4 + 3;\n                    }\n                    else {\n                        cVar4 = '6';\n                        iVar11 = 3;\n                        uVar5 = 4;\n                    }\n                }\n                else if ((cVar4 == '3') && (cVar4 = '3',  arg4[2] == '2')) {\n                    cVar4 = arg4[3];\n                    iVar11 = 2;\n                    uVar5 = 4;\n                    pcVar1 = arg4 + 3;\n                }\n                else {\n                    iVar11 = 3;\n                    uVar5 = 4;\n                }\n                goto joined_r0x0040fca3;\n            case 'L':\n                uStack112 = uStack112 | 4;\n                uVar5 = 4;\n                cVar4 = arg4[1];\n                goto joined_r0x0040fca3;\n            case 'S':\n                goto code_r0x00410330;\n            case 'X':\n            case 'o':\n            case 'u':\n            case 'x':\n                if (iVar11 == 3) {\n                    apfStack136[0] = *in_stack_00000028;\n                }\n                else if (iVar11 == 2) {\n                    apfStack136[0] = *in_stack_00000028;\n                }\n                else {\n                    apfStack136[0] = *in_stack_00000028;\n                    if (iVar11 == 1) {\n                        apfStack136[0] = apfStack136[0] & 0xffff;\n                    }\n                    else if (iVar11 == 4) {\n                        apfStack136[0] = apfStack136[0] & 0xff;\n                    }\n                }\n                if (uVar9 == 0x75) goto code_r0x00410033;\n                fcn.0040eb90(uVar9, apfStack136[0], &uStack120);\n                arg4 = pcVar1;\n                in_stack_00000028 = in_stack_00000028 + 1;\n                goto code_r0x0040fc60;\n            case 'a':\n                uVar9 = uStack112 | 0x20;\n                uVar5 = uStack112 & 4;\n                uStack112 = uVar9;\n                if (uVar5 == 0) goto code_r0x00410163;\ncode_r0x0040ffcf:\n                afStack168[0] = **in_stack_00000028;\n                fcn.0040f6b0(afStack168, &uStack120);\n                arg4 = pcVar1;\n                in_stack_00000028 = in_stack_00000028 + 1;\n                goto code_r0x0040fc60;\n            case 'c':\n                iStack104 = -1;\n                if (iVar11 - 2U < 2) {\ncode_r0x00410120:\n                    iStack104 = -1;\n                    apfStack136[0] = apfStack136[0] & 0xffffffffffff0000 | *in_stack_00000028;\n                    fcn.0040e670(apfStack136, 1, &uStack120);\n                    arg4 = pcVar1;\n                    in_stack_00000028 = in_stack_00000028 + 1;\n                }\n                else {\n                    apfStack136[0] = apfStack136[0] & 0xffffffffffffff00 | *in_stack_00000028;\n                    fcn.0040e780(apfStack136, 1, &uStack120);\n                    arg4 = pcVar1;\n                    in_stack_00000028 = in_stack_00000028 + 1;\n                }\n                goto code_r0x0040fc60;\n            case 'd':\n            case 'i':\n                uStack112 = uStack112 | 0x80;\n                if (iVar11 == 3) {\n                    apfStack136[0] = *in_stack_00000028;\n                }\n                else if (iVar11 == 2) {\n                    apfStack136[0] = *in_stack_00000028;\n                }\n                else {\n                    iVar3 = *in_stack_00000028;\n                    apfStack136[0] = iVar3;\n                    if (iVar11 == 1) {\n                        apfStack136[0]._0_2_ = iVar3;\n                        apfStack136[0] = apfStack136[0];\n                    }\n                    else if (iVar11 == 4) {\n                        apfStack136[0]._0_1_ = iVar3;\n                        apfStack136[0] = apfStack136[0];\n                    }\n                }\ncode_r0x00410033:\n                fcn.0040e8e0(apfStack136[0], &uStack120);\n                arg4 = pcVar1;\n                in_stack_00000028 = in_stack_00000028 + 1;\n                goto code_r0x0040fc60;\n            case 'e':\n                uVar9 = uStack112 | 0x20;\n                uVar5 = uStack112 & 4;\n                uStack112 = uVar9;\n                if (uVar5 == 0) goto code_r0x004100f8;\ncode_r0x0040fefd:\n                afStack168[0] = **in_stack_00000028;\n                fcn.0040f370(afStack168, &uStack120);\n                arg4 = pcVar1;\n                in_stack_00000028 = in_stack_00000028 + 1;\n                goto code_r0x0040fc60;\n            case 'f':\n                uVar9 = uStack112 | 0x20;\n                uVar5 = uStack112 & 4;\n                uStack112 = uVar9;\n                if (uVar5 == 0) goto code_r0x004100c8;\ncode_r0x0040febd:\n                afStack168[0] = **in_stack_00000028;\n                fcn.0040f420(afStack168, &uStack120);\n                arg4 = pcVar1;\n                in_stack_00000028 = in_stack_00000028 + 1;\n                goto code_r0x0040fc60;\n            case 'g':\n                uVar9 = uStack112 | 0x20;\n                uVar5 = uStack112 & 4;\n                uStack112 = uVar9;\n                if (uVar5 == 0) goto code_r0x00410098;\ncode_r0x0040fe50:\n                afStack168[0] = **in_stack_00000028;\n                fcn.0040f510(afStack168, &uStack120);\n                arg4 = pcVar1;\n                in_stack_00000028 = in_stack_00000028 + 1;\n                goto code_r0x0040fc60;\n            case 'h':\n                cVar4 = arg4[1];\n                iVar11 = 1;\n                uVar5 = 4;\n                if (cVar4 == 'h') {\n                    cVar4 = arg4[2];\n                    iVar11 = 4;\n                    uVar5 = 4;\n                    pcVar1 = arg4 + 2;\n                }\n                goto joined_r0x0040fca3;\n            case 'j':\n            case 't':\n            case 'z':\n                cVar4 = arg4[1];\n                iVar11 = 3;\n                uVar5 = 4;\n                goto joined_r0x0040fca3;\n            case 'l':\n                goto code_r0x0040fde0;\n            case 'm':\n                pcVar7 = sub.msvcrt.dll_strerror(uVar2);\njoined_r0x0040fd20:\n                if (pcVar7 == NULL) {\n                    arg2_00 = 6;\n                    pcVar7 = \"(null)\";\n                }\n                else {\n                    uVar5 = sub.msvcrt.dll_strlen(pcVar7);\n                    arg2_00 = uVar5;\n                }\n                fcn.0040e780(pcVar7, arg2_00, &uStack120);\n                arg4 = pcVar1;\n                goto code_r0x0040fc60;\n            case 'n':\n                pfVar10 = *in_stack_00000028;\n                if (iVar11 == 4) {\n                    *pfVar10 = iStack84;\n                    arg4 = pcVar1;\n                    in_stack_00000028 = in_stack_00000028 + 1;\n                }\n                else if (iVar11 == 1) {\n                    *pfVar10 = iStack84;\n                    arg4 = pcVar1;\n                    in_stack_00000028 = in_stack_00000028 + 1;\n                }\n                else if ((iVar11 == 2) || (iVar11 != 3)) {\n                    *pfVar10 = iStack84;\n                    arg4 = pcVar1;\n                    in_stack_00000028 = in_stack_00000028 + 1;\n                }\n                else {\n                    *pfVar10 = iStack84;\n                    arg4 = pcVar1;\n                    in_stack_00000028 = in_stack_00000028 + 1;\n                }\n                goto code_r0x0040fc60;\n            case 'p':\n                if ((uVar5 == 0) && (uStack112 == arg1)) {\n                    iStack104 = 0x10;\n                    uStack112 = arg1 | 0x200;\n                }\n                apfStack136[0] = *in_stack_00000028;\n                fcn.0040eb90(0x78, apfStack136[0], &uStack120);\n                arg4 = pcVar1;\n                in_stack_00000028 = in_stack_00000028 + 1;\n                goto code_r0x0040fc60;\n            case 's':\n                if (1 < iVar11 - 2U) {\n                    pcVar7 = *in_stack_00000028;\n                    in_stack_00000028 = in_stack_00000028 + 1;\n                    goto joined_r0x0040fd20;\n                }\ncode_r0x00410330:\n                pfVar10 = *in_stack_00000028;\n                if (pfVar10 == NULL) {\n                    pfVar10 = 0x4835a8;\n                }\n                uVar5 = sub.msvcrt.dll_wcslen(pfVar10);\n                fcn.0040e670(pfVar10, uVar5, &uStack120);\n                arg4 = pcVar1;\n                in_stack_00000028 = in_stack_00000028 + 1;\n                goto code_r0x0040fc60;\n            }\n            cVar4 = arg4[1];\n            goto joined_r0x0040fca3;\n        }\n    } while( true );\ncode_r0x0040fde0:\n    cVar4 = arg4[1];\n    iVar11 = 2;\n    uVar5 = 4;\n    if (cVar4 == 'l') {\n        cVar4 = arg4[2];\n        iVar11 = 3;\n        uVar5 = 4;\n        pcVar1 = arg4 + 2;\n    }\n    goto joined_r0x0040fca3;\n}\n",
        "token_count": 4696
    },
    "00410610": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00410610(ulong arg1, uint32_t *arg2, uint32_t *arg3, ulong arg4)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int64_t arg1_00;\n    uint *puVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    bool bVar10;\n    int32_t in_stack_00000028;\n    int32_t in_stack_00000030;\n    uint32_t *in_stack_00000038;\n    uint32_t uStack80;\n    uint32_t auStack76 [3];\n    \n    arg1_00 = fcn.004158d0(arg1, auStack76, &uStack80);\n    uVar2 = *arg2;\n    uStack80 = uStack80 - uVar2;\n    auStack76[0] = auStack76[0] + uStack80;\n    if (uStack80 < 1) {\n        iVar9 = 0;\n        if (in_stack_00000028 == 0) goto code_r0x004107bd;\n        if (uStack80 != 0) {\n            arg1_00 = fcn.00415530(arg1_00, -uStack80);\n        }\n        uVar5 = 0;\n        uVar7 = 0;\n    }\n    else {\n        if (uVar2 == 0x35) {\n            iVar9 = 0;\n            if ((in_stack_00000028 == 0) || (arg2[3] != 1)) goto code_r0x004107bd;\ncode_r0x004106c1:\n            iVar9 = 0;\n        }\n        else {\n            if (in_stack_00000030 == 1) goto code_r0x004106c1;\n            if (in_stack_00000030 == 2) {\ncode_r0x004106a0:\n                iVar9 = 1;\n            }\n            else {\n                uVar5 = uStack80 - 1;\n                if (uVar5 != 0) {\n                    if ((*(arg1_00 + 0x18 + (uVar5 >> 5) * 4) >> (uVar5 & 0x1f) & 1) == 0) goto code_r0x004106c1;\n                    goto code_r0x004106a0;\n                }\n                iVar9 = 0;\n                if (in_stack_00000028 == 0) goto code_r0x004107bd;\n                if ((*(arg1_00 + 0x18) & 2) != 0) goto code_r0x004106a0;\n            }\n        }\n        uVar5 = fcn.00415ca0(arg1_00, uStack80);\n        fcn.00415d20(arg1_00, uStack80);\n        uVar7 = ~-(uVar5 == 0) & 0x10;\n        if (iVar9 != 0) {\n            arg1_00 = fcn.00410560(arg1_00);\n            uVar7 = uVar2 & 0x1f;\n            if (uVar7 != 0) {\n                uVar7 = 0x20 - uVar7;\n            }\n            puVar1 = arg1_00 + 0x18 + (*(arg1_00 + 0x14) + -1) * 4;\n            uVar3 = 0x1f;\n            if (*puVar1 != 0) {\n                for (; *puVar1 >> uVar3 == 0; uVar3 = uVar3 - 1) {\n                }\n            }\n            if (uVar7 == (uVar3 ^ 0x1f)) {\n                uVar7 = 0x20;\n            }\n            else {\n                if (uVar5 == 0) {\n                    uVar5 = *(arg1_00 + 0x18) & 1;\n                }\n                uVar7 = 0x20;\n                fcn.00415d20(arg1_00, 1);\n                auStack76[0] = auStack76[0] + 1;\n            }\n        }\n    }\n    uVar3 = arg2[1];\n    if (auStack76[0] < uVar3) {\n        uVar8 = uVar3 - auStack76[0];\n        auStack76[0] = uVar3;\n        if ((uVar2 < uVar8) || (arg2[4] != 0)) {\n            *(arg1_00 + 0x14) = 0;\n            uVar7 = 0;\n            *in_stack_00000038 = 0x50;\n        }\n        else {\n            uVar3 = uVar8 - 1;\n            bVar10 = uVar5 == 0;\n            if (uVar3 < 1) {\ncode_r0x00410725:\n                if ((bVar10) && (iVar9 = 0,  in_stack_00000028 == 0)) goto code_r0x004107bd;\n            }\n            else if (bVar10) {\n                uVar5 = fcn.00415ca0(arg1_00, uVar3);\n                bVar10 = uVar5 == 0;\n                goto code_r0x00410725;\n            }\n            uVar4 = *(arg1_00 + 0x18 + (uVar3 >> 5) * 4);\n            fcn.00415d20(arg1_00, uVar8);\n            *in_stack_00000038 = 2;\n            if ((1 << (uVar3 & 0x1f) & uVar4) == 0) {\n                if (uVar5 != 0) {\n                    uVar7 = 0x50;\n                }\n            }\n            else {\n                uVar7 = 0x60;\n                arg1_00 = fcn.00410560(arg1_00);\n            }\n        }\n    }\n    else if (arg2[2] < auStack76[0]) {\n        auStack76[0] = arg2[2] + 1;\n        uVar7 = 0;\n        *in_stack_00000038 = 0xa3;\n        puVar6 = sub.msvcrt.dll__errno();\n        *puVar6 = 0x22;\n        *(arg1_00 + 0x14) = 0;\n    }\n    *arg3 = auStack76[0];\n    iVar9 = 1;\n    fcn.00415c30(arg4, uVar2, arg1_00);\n    *in_stack_00000038 = *in_stack_00000038 | uVar7;\ncode_r0x004107bd:\n    fcn.00415120(arg1_00);\n    return iVar9;\n}\n",
        "token_count": 1534
    },
    "00410980": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00410980(int64_t arg1, ulong arg2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint *puVar5;\n    \n    uVar3 = arg2 + 0x1f >> 5;\n    if (*(arg1 + 8) < uVar3) {\n        fcn.00415120(arg1);\n        arg1 = fcn.00415020(uVar3);\n    }\n    uVar3 = arg2 & 0x1f;\n    puVar4 = arg1 + 0x18;\n    iVar2 = ((arg2 >> 5) + 1) - (uVar3 == 0);\n    *(arg1 + 0x14) = iVar2;\n    puVar1 = puVar4 + iVar2;\n    if (puVar4 < puVar1) {\n        do {\n            puVar5 = puVar4 + 1;\n            *puVar4 = 0xffffffff;\n            puVar4 = puVar5;\n        } while (puVar5 < puVar1);\n        puVar4 = arg1 + 0x1c + (puVar1 + (-0x19 - arg1) & 0xfffffffffffffffcU);\n    }\n    if (uVar3 != 0) {\n        puVar4[-1] = puVar4[-1] >> (0x20U - uVar3 & 0x1f);\n    }\n    return;\n}\n",
        "token_count": 334
    },
    "00410a20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.00410a20(uint8_t *arg1, uint8_t **arg2, uint32_t *arg3, uint32_t *arg4)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    char *pcVar7;\n    bool bVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    char **ppcVar12;\n    uint64_t uVar13;\n    uint *puVar14;\n    int64_t iVar15;\n    ulong arg1_00;\n    int64_t arg1_01;\n    int64_t iVar16;\n    ulong arg1_02;\n    int64_t arg1_03;\n    uint *puVar17;\n    uint64_t uVar19;\n    uint32_t *puVar20;\n    ulong *arg1_04;\n    uint8_t uVar21;\n    uint32_t uVar22;\n    int32_t iVar23;\n    double *pdVar24;\n    int64_t iVar25;\n    uint32_t uVar26;\n    uint32_t uVar27;\n    uint32_t uVar28;\n    uint32_t uVar29;\n    uint32_t uVar30;\n    bool bVar31;\n    uint32_t uVar32;\n    int32_t iVar33;\n    uint8_t *arg1_05;\n    bool bVar34;\n    double dVar35;\n    double dVar36;\n    uint uVar37;\n    uint uVar38;\n    uint uVar39;\n    uint uVar40;\n    uint uVar41;\n    uint uVar42;\n    uint uVar43;\n    uint uVar44;\n    uint uVar45;\n    uint uVar46;\n    uint uVar47;\n    uint uVar48;\n    uint *in_stack_00000028;\n    uint32_t uStack288;\n    uint32_t uStack284;\n    uint32_t uStack280;\n    uint32_t uStack252;\n    uint32_t uStack236;\n    uint32_t uStack220;\n    uchar auStack216 [4];\n    uint32_t uStack212;\n    uint32_t uStack208;\n    uint32_t uStack204;\n    ulong uStack200;\n    uint8_t *puStack184;\n    uint64_t auStack176 [14];\n    uint *puVar18;\n    \n    ppcVar12 = sub.msvcrt.dll_localeconv();\n    pcVar7 = *ppcVar12;\n    sub.msvcrt.dll_strlen(pcVar7);\n    uVar5 = *arg3;\n    uStack212 = 0;\n    uStack200 = 0.0;\n    auStack176[0] = 0;\n    uVar22 = *arg1;\n    puStack184 = arg1;\n    if (*arg1 < 0x2e) {\ncode_r0x00410ad9:\n    // WARNING: Could not find normalized switch variable to match jumptable\n    // switch table (46 cases) at 0x48374c\n        switch(uVar22 & 0xff) {\n        case 0:\n            goto code_r0x00410af0;\n        default:\n            goto code_r0x00410c70;\n        case 9:\n        case 10:\n        case 0xb:\n        case 0xc:\n        case 0xd:\n        case 0x20:\n            goto code_r0x00410c50;\n        case 0x2b:\n            uStack288 = 0;\n            break;\n        case 0x2d:\n            uStack288 = 1;\n        }\n        uVar21 = puStack184[1];\n        uVar22 = uVar21;\n        puStack184 = puStack184 + 1;\n        if (uVar21 != 0) goto joined_r0x00410bdc;\ncode_r0x00410af0:\n        uStack212 = 6;\n        uStack288 = 0;\n        puStack184 = arg1;\n        goto code_r0x00410b0e;\n    }\ncode_r0x00410c70:\n    uVar21 = uVar22;\n    uStack288 = 0;\njoined_r0x00410bdc:\n    uVar10 = 0;\n    if (uVar21 == 0x30) {\n        if ((puStack184[1] == 0x58) || (puStack184[1] == 0x78)) {\n            uStack212 = fcn.00415fd0(&puStack184, arg3, arg4, auStack176);\n            if (uStack212 == 6) {\n                uStack288 = 0;\n                puStack184 = arg1;\n            }\n            goto code_r0x00410b0e;\n        }\n        do {\n            puStack184 = puStack184 + 1;\n            uVar21 = *puStack184;\n            uVar22 = uVar21;\n        } while (uVar21 == 0x30);\n        if (uVar21 == 0) goto code_r0x00410b0e;\n        uVar10 = 1;\n    }\n    arg1_05 = puStack184;\n    uVar6 = arg3[4];\n    if (uVar22 - 0x30U < 10) {\n        uVar13 = 0;\n        uVar32 = 0;\n        uVar26 = 0;\n        do {\n            puStack184 = puStack184 + 1;\n            if (uVar26 < 9) {\n                uVar32 = (uVar22 - 0x30) + uVar32 * 10;\n            }\n            else if (uVar26 < 0x10) {\n                uVar13 = (uVar22 - 0x30) + uVar13 * 10;\n            }\n            uVar22 = *puStack184;\n            uVar26 = uVar26 + 1;\n        } while (*puStack184 - 0x30 < 10);\n    }\n    else {\n        uVar13 = 0;\n        uVar32 = 0;\n        uVar26 = 0;\n    }\n    uVar28 = *pcVar7;\n    uVar27 = uVar26;\n    if (uVar28 == uVar22) {\n        if (pcVar7[1] == 0) {\n            iVar15 = 1;\ncode_r0x004112dc:\n            puStack184 = puStack184 + iVar15;\n            uVar28 = *puStack184;\n            if (uVar26 == 0) {\n                if (uVar28 == 0x30) {\n                    uVar22 = 0;\n                    do {\n                        puStack184 = puStack184 + 1;\n                        uVar28 = *puStack184;\n                        uVar22 = uVar22 + 1;\n                    } while (uVar28 == 0x30);\n                }\n                else {\n                    uVar22 = 0;\n                }\n                if (uVar28 - 0x31 < 9) {\n                    uVar27 = 0;\n                    uVar30 = 1;\n                    uVar11 = uVar28 - 0x30;\n                    arg1_05 = puStack184;\n                    goto code_r0x00411318;\n                }\n                uVar29 = 0;\n                bVar31 = true;\n                uVar27 = 0;\n            }\n            else {\n                uVar30 = 0;\n                uVar29 = 0;\n                while( true ) {\n                    uVar11 = uVar28 - 0x30;\n                    bVar31 = true;\n                    uVar22 = uVar30;\n                    if (9 < uVar11) break;\n                    uVar30 = uVar30 + 1;\n                    uVar22 = uVar29;\ncode_r0x00411318:\n                    uVar29 = uVar22;\n                    if (uVar11 != 0) {\n                        uVar29 = uVar22 + uVar30;\n                        if (uVar30 != 1) {\n                            uVar22 = uVar27;\n                            do {\n                                uVar28 = uVar22 + 1;\n                                if (uVar22 < 9) {\n                                    uVar32 = uVar32 * 10;\n                                }\n                                else if (uVar28 < 0x11) {\n                                    uVar13 = uVar13 * 10;\n                                }\n                                uVar22 = uVar28;\n                            } while (uVar28 != (uVar27 + uVar30) - 1);\n                            uVar27 = (uVar27 + uVar30) - 1;\n                        }\n                        uVar22 = uVar27 + 1;\n                        if (uVar27 < 9) {\n                            uVar30 = 0;\n                            uVar32 = uVar11 + uVar32 * 10;\n                            uVar27 = uVar22;\n                        }\n                        else {\n                            uVar30 = 0;\n                            uVar27 = uVar22;\n                            if (uVar22 < 0x11) {\n                                uVar13 = uVar11 + uVar13 * 10;\n                            }\n                        }\n                    }\n                    uVar28 = puStack184[1];\n                    puStack184 = puStack184 + 1;\n                }\n            }\n        }\n        else {\n            if (pcVar7[1] != puStack184[1]) goto code_r0x00410cfe;\n            iVar15 = 2;\n            do {\n                puVar4 = pcVar7 + iVar15;\n                if (*puVar4 == 0) goto code_r0x004112dc;\n                puVar3 = puStack184 + iVar15;\n                iVar15 = iVar15 + 1;\n            } while (*puVar4 == *puVar3);\n            uVar22 = 0;\n            uVar29 = 0;\n            bVar31 = false;\n        }\n    }\n    else {\ncode_r0x00410cfe:\n        uVar29 = 0;\n        bVar31 = false;\n        uVar28 = uVar22;\n        uVar22 = 0;\n    }\n    puVar4 = puStack184;\n    if ((uVar28 & 0xffffffdf) == 0x45) {\n        if ((uVar27 | uVar22 | uVar10) != 0) {\n            uVar21 = puStack184[1];\n            if (uVar21 == 0x2b) {\n                bVar34 = false;\ncode_r0x0041144b:\n                uVar21 = puStack184[2];\n                puStack184 = puStack184 + 2;\n            }\n            else {\n                if (uVar21 == 0x2d) {\n                    bVar34 = true;\n                    goto code_r0x0041144b;\n                }\n                bVar34 = false;\n                puStack184 = puStack184 + 1;\n            }\n            uVar28 = uVar21;\n            puVar3 = puStack184;\n            arg1 = puVar4;\n            if (uVar28 - 0x30 < 10) {\n                while (uVar28 == 0x30) {\n                    uVar28 = puVar3[1];\n                    puVar3 = puVar3 + 1;\n                }\n                iVar9 = 0;\n                puStack184 = puVar3;\n                if (uVar28 - 0x31 < 9) {\n                    iVar33 = uVar28 - 0x30;\n                    puStack184 = puVar3 + 1;\n                    uVar28 = puVar3[1];\n                    if (puVar3[1] - 0x30 < 10) {\n                        puVar4 = puVar3 + 2;\n                        do {\n                            puStack184 = puVar4;\n                            iVar33 = (uVar28 - 0x30) + iVar33 * 10;\n                            uVar28 = *puStack184;\n                            puVar4 = puStack184 + 1;\n                        } while (*puStack184 - 0x30 < 10);\n                    }\n                    iVar9 = 19999;\n                    if ((puStack184 - puVar3 < 9) && (iVar9 = 19999,  iVar33 < 20000)) {\n                        iVar9 = iVar33;\n                    }\n                    if (bVar34) {\n                        iVar9 = -iVar9;\n                    }\n                }\n            }\n            else {\n                iVar9 = 0;\n                puStack184 = puVar4;\n            }\n            goto code_r0x00410d1c;\n        }\n        goto code_r0x00410f55;\n    }\n    iVar9 = 0;\n    puStack184 = puVar4;\ncode_r0x00410d1c:\n    uStack236 = uVar6;\n    if (uVar27 == 0) {\n        if ((uVar22 | uVar10) != 0) goto code_r0x00410b0e;\n        if (bVar31) {\ncode_r0x00410f55:\n            uStack212 = 6;\n            puStack184 = arg1;\n            goto code_r0x00410b0e;\n        }\n        if (uVar28 != 0x4e) {\n            if (uVar28 < 0x4f) {\n                if (uVar28 == 0x49) goto code_r0x00412127;\n            }\n            else if (uVar28 == 0x69) {\ncode_r0x00412127:\n                iVar9 = fcn.00415be0(&puStack184, 0x483740);\n                if (iVar9 != 0) {\n                    puStack184 = puStack184 + -1;\n                    iVar9 = fcn.00415be0(&puStack184, \"inity\");\n                    if (iVar9 == 0) {\n                        puStack184 = puStack184 + 1;\n                    }\n                    uStack212 = 3;\n                    bVar31 = false;\n                    uVar22 = arg3[2] + 1;\n                    goto code_r0x00410db0;\n                }\n            }\n            else if (uVar28 == 0x6e) goto code_r0x00410d58;\n            goto code_r0x00410f55;\n        }\ncode_r0x00410d58:\n        iVar9 = fcn.00415be0(&puStack184, 0x483749);\n        if (iVar9 == 0) goto code_r0x00410f55;\n        uStack212 = 4;\n        bVar31 = false;\n        uVar22 = arg3[2] + 1;\n        *arg4 = uVar22;\n        if (*puStack184 == 0x28) {\n            uStack212 = fcn.004168a0(&puStack184, arg3, in_stack_00000028);\n            uVar22 = arg3[2] + 1;\n        }\n        goto code_r0x00410db0;\n    }\n    arg1_04 = uStack288;\n    uVar29 = iVar9 - uVar29;\n    uStack212 = 1;\n    uVar22 = arg3[3] & 3;\n    uStack280 = uVar22 - uStack288;\n    if ((uVar22 != 2) && (uStack280 = uStack288 + 1,  uVar22 != 3)) {\n        uStack280 = uVar22 == 0;\n    }\n    uStack200 = uVar32;\n    if (uVar26 == 0) {\n        uVar26 = uVar27;\n    }\n    uVar22 = 0x10;\n    if (uVar27 < 0x11) {\n        uVar22 = uVar27;\n    }\n    if (9 < uVar22) {\n        arg1_04 = uVar22 - 9;\n        uStack200 = uStack200 * *(arg1_04 * 8 + 0x483980) + uVar13;\n    }\n    uVar10 = uVar29;\n    if ((uVar27 < 0x10) && (uVar5 < 0x36)) {\n        if (uVar29 != 0) {\n            if (uVar29 < 1) {\n                arg1_04 = uVar29;\n                if (uVar29 < -0x16) goto code_r0x00411055;\n                uStack200 = uStack200 / *(-uVar29 * 8 + 0x483980);\n            }\n            else if (uVar29 < 0x17) {\n                if (uStack200 == 0) {\n                    for (uStack200._4_4_ = uStack200._4_4_ | 0x100000; (uStack200._4_4_ & 1) == 0;\n                        uStack200._4_4_ = uStack200._4_4_ >> 1 | 0x80000000) {\n                    }\n                }\n                else {\n                    for (; (uStack200 & 1) == 0; uStack200._0_4_ = uStack200 >> 1 | 0x80000000) {\n                    }\n                }\n                uStack200 = uStack200 * *(uVar29 * 8 + 0x483980);\n            }\n            else {\n                arg1_04 = uVar29;\n                if (0x25 - uVar27 < uVar29) goto code_r0x00411055;\n                uStack200 = uStack200 * *((0xf - uVar27) * 8 + 0x483980) * *((uVar29 - (0xf - uVar27)) * 8 + 0x483980);\n            }\n        }\n        arg1_04 = &uStack200;\n        iVar9 = fcn.00410610(arg1_04, arg3, arg4, in_stack_00000028);\n        if (iVar9 != 0) goto code_r0x00410b0e;\n        uVar10 = 0;\n    }\ncode_r0x00411055:\n    uVar10 = uVar10 + (uVar27 - uVar22);\n    if (uVar10 < 1) {\n        if (uVar10 != 0) {\n            uVar10 = -uVar10;\n            uVar22 = uVar10 & 0xf;\n            arg1_04 = uVar22;\n            if (uVar22 != 0) {\n                arg1_04 = uVar22;\n                uStack200 = uStack200 / *(arg1_04 * 8 + 0x483980);\n            }\n            if ((uVar10 & 0xfffffff0) != 0) {\n                uVar10 = uVar10 >> 4;\n                if (uVar10 < 0x10) {\n                    iVar9 = 0;\n                }\n                else {\n                    iVar9 = 0;\n                    uVar22 = uVar10;\n                    do {\n                        uVar22 = uVar22 - 0x10;\n                        uStack200 = uStack200 & 0x800fffffffffffff | 0x3ff0000000000000;\n                        iVar9 = iVar9 + -0x3ff + ((uStack200._4_4_ & 0x7ff00000) >> 0x14);\n                        uStack200 = uStack200 * *0x483a60;\n                    } while (0xf < uVar22);\n                    uVar10 = uVar10 & 0xf;\n                }\n                uVar22 = (uStack200._4_4_ & 0x7ff00000) >> 0x14;\n                arg1_04 = uVar22;\n                uStack200 = uStack200 & 0x800fffffffffffff | 0x3ff0000000000000;\n                iVar9 = iVar9 + -0x3ff + uVar22;\n                pdVar24 = 0x483a40;\n                for (; 0 < uVar10; uVar10 = uVar10 >> 1) {\n                    if ((uVar10 & 1) != 0) {\n                        uStack200 = uStack200 * *pdVar24;\n                    }\n                    pdVar24 = pdVar24 + 1;\n                }\n                goto code_r0x004110a0;\n            }\n        }\ncode_r0x00411095:\n        iVar9 = 0;\n    }\n    else {\n        if ((uVar10 & 0xf) != 0) {\n            arg1_04 = 0x483980;\n            uStack200 = uStack200 * *((uVar10 & 0xf) * 8 + 0x483980);\n        }\n        if ((uVar10 & 0xfffffff0) == 0) goto code_r0x00411095;\n        uVar10 = uVar10 >> 4;\n        if (uVar10 < 0x10) {\n            iVar9 = 0;\n        }\n        else {\n            iVar9 = 0;\n            uVar22 = uVar10;\n            do {\n                uVar22 = uVar22 - 0x10;\n                uStack200 = uStack200 & 0x800fffffffffffff | 0x3ff0000000000000;\n                iVar9 = iVar9 + -0x3ff + ((uStack200._4_4_ & 0x7ff00000) >> 0x14);\n                uStack200 = uStack200 * *0x483aa0;\n            } while (0xf < uVar22);\n            uVar10 = uVar10 & 0xf;\n        }\n        uVar22 = (uStack200._4_4_ & 0x7ff00000) >> 0x14;\n        arg1_04 = uVar22;\n        uStack200 = uStack200 & 0x800fffffffffffff | 0x3ff0000000000000;\n        iVar9 = iVar9 + -0x3ff + uVar22;\n        pdVar24 = 0x483a80;\n        for (; uVar10 != 0; uVar10 = uVar10 >> 1) {\n            if ((uVar10 & 1) != 0) {\n                uStack200 = uStack200 * *pdVar24;\n            }\n            pdVar24 = pdVar24 + 1;\n        }\n    }\ncode_r0x004110a0:\n    auStack176[0] = fcn.004158d0(arg1_04, &uStack204, &uStack208);\n    uStack204 = iVar9 + uStack204;\n    uVar22 = uStack208 - uVar5;\n    if (0 < uVar22) {\n        fcn.00415d20(auStack176[0], uVar22);\n        uStack204 = uStack204 + uVar22;\n        uStack208 = uVar5;\n    }\n    uStack252 = (uStack208 + uStack204) - uVar5;\n    if (arg3[2] + 1 < uStack252) {\n        bVar31 = false;\n        goto code_r0x00411e42;\n    }\n    uVar22 = arg3[1];\n    if (uVar22 <= uStack252) {\n        bVar31 = false;\n        goto code_r0x00411593;\n    }\n    uVar10 = uStack204 - uVar22;\n    if (uVar10 < 1) {\n        if (uVar10 == 0) goto code_r0x00411177;\n        uStack208 = uStack208 + uVar10;\n        if (0 < uStack208) {\n            fcn.00415d20(auStack176[0], -uVar10);\n            goto code_r0x00411177;\n        }\n        if (-2 < uStack208) {\n            uStack208 = 1;\n            *(auStack176[0] + 0x14) = 1;\n            *(auStack176[0] + 0x18) = 1;\n            goto code_r0x00411177;\n        }\n    }\n    else {\n        auStack176[0] = fcn.00415530(auStack176[0], uVar10);\n        uStack208 = uStack208 + uVar10;\ncode_r0x00411177:\n        if ((uVar6 == 0) || (uStack204 = uVar22,  uVar22 <= uStack252 + 1)) {\n            bVar31 = true;\n            uStack252 = uVar22;\n            uStack204 = uVar22;\ncode_r0x00411593:\n            iVar15 = fcn.00415a20(arg1_05, uVar26, uVar27, uVar32);\n            uVar41 = SUB84(*0x483880, 0);\n            uVar42 = *0x483880 >> 0x20;\n            uVar43 = *0x483890;\n            uVar44 = *0x483890 >> 0x20;\n            uVar10 = -uVar29;\n            if (-1 < uVar29) {\n                uVar10 = 0;\n            }\n            uVar45 = *0x4838b0;\n            uVar46 = *0x4838b0 >> 0x20;\n            iVar9 = 0;\n            uVar47 = uVar41;\n            uVar48 = uVar42;\n            do {\n                arg1_01 = fcn.00415020(*(iVar15 + 8));\n                sub.msvcrt.dll_memcpy(arg1_01 + 0x10, iVar15 + 0x10, *(iVar15 + 0x14) * 4 + 8);\n                iVar16 = fcn.00415020(*(auStack176[0] + 8));\n                sub.msvcrt.dll_memcpy(iVar16 + 0x10);\n                uVar26 = uStack204;\n                uVar32 = uStack208;\n                arg1_02 = fcn.00415250(1);\n                iVar33 = uVar26 + iVar9;\n                uVar32 = uVar32 - iVar9;\n                uVar26 = 0;\n                if (0 < uVar29) {\n                    uVar26 = uVar29;\n                }\n                if (iVar33 < 0) {\n                    uVar28 = uVar26 - iVar33;\n                    uVar27 = uVar10;\n                }\n                else {\n                    uVar28 = uVar26;\n                    uVar27 = uVar10 + iVar33;\n                }\n                iVar33 = (iVar33 + uVar32) - uVar5;\n                iVar23 = (uVar5 + 1) - uVar32;\n                if (iVar33 < uVar22) {\n                    iVar23 = iVar23 + (iVar33 - uVar22);\n                }\n                uVar30 = uVar27 + iVar23;\n                uVar28 = uVar28 + iVar23;\n                uVar11 = uVar28;\n                if (uVar30 <= uVar28) {\n                    uVar11 = uVar30;\n                }\n                if (uVar27 < uVar11) {\n                    uVar11 = uVar27;\n                }\n                if (0 < uVar11) {\n                    uVar30 = uVar30 - uVar11;\n                    uVar28 = uVar28 - uVar11;\n                    uVar27 = uVar27 - uVar11;\n                }\n                arg1_03 = iVar16;\n                if (uVar10 != 0) {\n                    arg1_02 = fcn.004153b0(arg1_02, uVar10);\n                    arg1_03 = fcn.00415280(arg1_02, iVar16);\n                    fcn.00415120(iVar16);\n                }\n                uVar30 = uVar30 - iVar9;\n                if (uVar30 < 1) {\n                    if (uVar30 != 0) {\n                        fcn.00415d20(arg1_03, -uVar30);\n                    }\n                }\n                else {\n                    arg1_03 = fcn.00415530(arg1_03, uVar30);\n                }\n                if (uVar26 != 0) {\n                    arg1_01 = fcn.004153b0(arg1_01, uVar26);\n                }\n                if (0 < uVar28) {\n                    arg1_01 = fcn.00415530(arg1_01, uVar28);\n                }\n                if (0 < uVar27) {\n                    arg1_02 = fcn.00415530(arg1_02, uVar27);\n                }\n                iVar16 = fcn.00415690(arg1_03, arg1_01);\n                if ((*(iVar16 + 0x14) < 2) && (*(iVar16 + 0x18) == 0)) goto code_r0x004119fe;\n                uVar26 = *(iVar16 + 0x10);\n                *(iVar16 + 0x10) = 0;\n                iVar9 = fcn.00415640(iVar16, arg1_02);\n                if ((0 < iVar9) || (uStack280 == 0)) {\n                    if (iVar9 < 0) {\n                        uStack212 = (-(uVar26 == 0) & 0x10) + 0x11;\n                        if ((((uVar26 != 0) || (1 < uVar32)) || (bVar31)) || (uStack252 == uVar22))\n                        goto code_r0x004119fe;\n                        iVar16 = fcn.00415530(iVar16, 1);\n                        iVar9 = fcn.00415640(iVar16, arg1_02);\n                        if (iVar9 < 1) goto code_r0x00411ee4;\n                        uStack212 = 0x11;\n                        bVar31 = false;\n                    }\n                    else {\n                        if (iVar9 != 0) {\n                            dVar36 = fcn.00415b20(iVar16, arg1_02);\n                            if (dVar36 <= CONCAT44(uVar44, uVar43)) {\n                                if (uVar26 == 0) {\n                                    uVar27 = 0;\n                                    goto code_r0x004119bd;\n                                }\n                                iVar9 = 0;\n                                uStack284 = 0x20;\n                                uVar27 = 0;\n                                bVar34 = false;\n                                uVar37 = uVar47;\n                                uVar38 = uVar48;\n                                uVar39 = uVar47;\n                                uVar40 = uVar48;\n                                goto code_r0x00411662;\n                            }\n                            bVar34 = uVar26 == 0;\n                            dVar36 = dVar36 * *0x483898;\n                            uVar37 = SUB84(dVar36, 0);\n                            uVar38 = dVar36 >> 0x20;\n                            uStack284 = (-bVar34 & 0x10) + 0x10;\n                            if (*0x4838a0 <= dVar36) {\n                                iVar9 = 0;\n                                uVar39 = uVar37;\n                                uVar40 = uVar38;\n                            }\n                            else {\n                                iVar9 = dVar36;\n                                dVar35 = iVar9;\n                                uVar37 = SUB84(dVar35, 0);\n                                uVar38 = dVar35 >> 0x20;\n                                dVar36 = dVar36 - dVar35;\n                                uVar39 = SUB84(dVar36, 0);\n                                uVar40 = dVar36 >> 0x20;\n                                if (uStack280 == 1) {\n                                    if (bVar34) {\ncode_r0x00411d28:\n                                        if (*0x483888 < dVar36) {\ncode_r0x00411d32:\n                                            iVar9 = iVar9 + 1;\n                                            uStack284 = 0x30 - uStack284;\n                                            uVar37 = SUB84(iVar9, 0);\n                                            uVar38 = iVar9 >> 0x20;\n                                        }\n                                    }\n                                }\n                                else if (uStack280 == 2) {\n                                    if (!bVar34) goto code_r0x00411d28;\n                                }\n                                else if (*0x483898 <= dVar36) goto code_r0x00411d32;\n                            }\n                            uVar27 = 0;\n                            goto code_r0x00411662;\n                        }\n                        if (uVar26 != 0) {\n                            if (!bVar31) goto code_r0x00412459;\n                            puVar20 = auStack176[0] + 0x18;\n                            puVar2 = puVar20 + (uStack208 >> 5);\n                            if (puVar2 <= puVar20) goto code_r0x004122d3;\n                            uVar10 = *(auStack176[0] + 0x18);\n                            puVar20 = auStack176[0] + 0x1c;\n                            goto joined_r0x004122b2;\n                        }\n                        if (uVar32 != 1) {\n                            uStack212 = 0x21;\n                            goto code_r0x004123bb;\n                        }\n                        if (uStack252 == uVar22) {\n                            uStack212 = 0x21;\n                            if ((*(auStack176[0] + 0x14) == 1) && (uStack236 = uVar32,  *(auStack176[0] + 0x18) != 1)) {\n                                uStack236 = uVar6;\n                            }\n                            goto code_r0x004119fe;\n                        }\n                        uStack212 = 1;\n                    }\n                    uStack204 = uStack204 - uVar5;\n                    uStack208 = uVar5;\n                    auStack176[0] = fcn.00410980(auStack176[0], uVar5);\n                    goto code_r0x004119fe;\n                }\n                uVar27 = uStack280 & 1 ^ uVar26;\n                if (uVar27 == 0) {\n                    uStack212 = (-(uVar26 == 0) & 0x10) + 0x11;\n                    goto code_r0x004119fe;\n                }\n                if (uVar26 == 0) {\n                    uStack212 = 0x11;\n                    if (uStack252 != uVar22) {\n                        iVar9 = 0;\n                        uVar26 = uVar5;\n                        if (uVar5 < 0x20) {\ncode_r0x00411c5c:\n                            if (1 < uVar26) {\n                                iVar25 = auStack176[0] + iVar9 * 4;\n                                iVar9 = 0;\n                                uVar28 = *(iVar25 + 0x18);\n                                for (uVar11 = uVar28; (uVar11 & 1) == 0; uVar11 = uVar11 >> 1 | 0x80000000) {\n                                    iVar9 = iVar9 + 1;\n                                }\n                                *(iVar25 + 0x18) = uVar28 >> (iVar9 & 0x1f);\n                                if (iVar9 < uVar26 - 1) goto code_r0x004119bd;\n                            }\n                            uStack204 = uStack252 - 1;\n                            uStack208 = uVar5;\n                            auStack176[0] = fcn.00410980(auStack176[0], uVar5);\n                            goto code_r0x004119fe;\n                        }\n                        if (*(auStack176[0] + 0x18) == 0) {\n                            iVar9 = 0;\n                            uVar13 = auStack176[0];\n                            do {\n                                uVar26 = uVar26 - 0x20;\n                                iVar9 = iVar9 + 1;\n                                if (uVar26 < 0x20) goto code_r0x00411c5c;\n                                piVar1 = uVar13 + 0x1c;\n                                uVar13 = uVar13 + 4;\n                            } while (*piVar1 == 0);\n                        }\n                    }\ncode_r0x004119bd:\n                    if ((uVar32 < 2) && (bVar31)) goto code_r0x00412366;\n                    iVar9 = 0;\n                    uStack284 = 0x10;\n                    bVar34 = true;\n                    uVar37 = uVar41;\n                    uVar38 = uVar42;\n                    uVar39 = uVar41;\n                    uVar40 = uVar42;\n                }\n                else {\n                    uVar37 = SUB84(*0x483880, 0);\n                    uVar38 = *0x483880 >> 0x20;\n                    uStack212 = 0x21;\n                    iVar9 = 0;\n                    uStack284 = 0x20;\n                    bVar34 = false;\n                    uVar39 = uVar37;\n                    uVar40 = uVar38;\n                }\ncode_r0x00411662:\n                uVar32 = uStack204 + uStack208;\n                uVar13 = uVar32;\n                if ((!bVar31) && (uStack208 < uVar5)) {\n                    uVar26 = uVar5 - uStack208;\n                    uVar19 = fcn.00415530(auStack176[0], uVar26);\n                    uStack204 = uStack204 - uVar26;\n                    uVar13 = auStack176[0];\n                    uStack208 = uVar5;\n                    auStack176[0] = uVar19;\n                }\n                arg1_00 = fcn.004158d0(uVar13, &uStack220, auStack216);\n                if (uStack220 < 0) {\n                    fcn.00415d20(arg1_00, -uStack220);\n                }\n                else if (uStack220 != 0) {\n                    arg1_00 = fcn.00415530(arg1_00, uStack220);\n                }\n                uVar13 = auStack176[0];\n                bVar8 = bVar31;\n                if (bVar34) {\n                    auStack176[0] = fcn.00415690(auStack176[0], arg1_00);\n                    if (bVar31) goto code_r0x00411740;\n                    iVar33 = *(uVar13 + 0x14) + -1;\n                    if (iVar33 < *(auStack176[0] + 0x14)) {\n                        iVar25 = iVar33 + 4;\n                        puVar20 = auStack176[0] + 8 + iVar25 * 4;\n                        uVar26 = 0x1f;\n                        if (*puVar20 != 0) {\n                            for (; *puVar20 >> uVar26 == 0; uVar26 = uVar26 - 1) {\n                            }\n                        }\n                        puVar20 = uVar13 + 8 + iVar25 * 4;\n                        uVar28 = 0x1f;\n                        if (*puVar20 != 0) {\n                            for (; *puVar20 >> uVar28 == 0; uVar28 = uVar28 - 1) {\n                            }\n                        }\n                        if ((uVar26 ^ 0x1f) <= (uVar28 ^ 0x1f)) goto code_r0x00411740;\n                    }\n                    if (uStack252 == uVar22) {\n                        uStack208 = uStack208 - 1;\n                        bVar8 = true;\n                        goto code_r0x00411740;\n                    }\n                    auStack176[0] = fcn.00415530(auStack176[0], 1);\n                    uStack204 = uStack204 - 1;\n                    uStack252 = uStack252 - 1;\n                    fcn.00415120(arg1_00);\n                    fcn.00415120(uVar13);\ncode_r0x00411bd9:\n                    iVar9 = fcn.00415e30(auStack176[0]);\n                }\n                else {\n                    auStack176[0] = fcn.00415e80(auStack176[0], arg1_00);\n                    iVar33 = *(auStack176[0] + 0x14) + -1;\n                    if (iVar33 < *(uVar13 + 0x14)) {\n                        iVar25 = iVar33 + 4;\n                        puVar20 = auStack176[0] + 8 + iVar25 * 4;\n                        uVar26 = 0x1f;\n                        if (*puVar20 != 0) {\n                            for (; *puVar20 >> uVar26 == 0; uVar26 = uVar26 - 1) {\n                            }\n                        }\n                        puVar20 = uVar13 + 8 + iVar25 * 4;\n                        uVar28 = 0x1f;\n                        if (*puVar20 != 0) {\n                            for (; *puVar20 >> uVar28 == 0; uVar28 = uVar28 - 1) {\n                            }\n                        }\n                        if ((uVar28 ^ 0x1f) <= (uVar26 ^ 0x1f)) goto code_r0x00411740;\n                    }\n                    if (bVar31) {\n                        uStack208 = uStack208 + 1;\n                        bVar8 = false;\n                        if (uVar5 != uStack208) {\n                            bVar8 = bVar31;\n                        }\n                    }\n                    else {\n                        iVar9 = 0;\n                        fcn.00415d20(auStack176[0], 1);\n                        uStack204 = uStack204 + 1;\n                        uStack252 = uStack252 + 1;\n                    }\ncode_r0x00411740:\n                    bVar31 = bVar8;\n                    fcn.00415120(arg1_00);\n                    fcn.00415120(uVar13);\n                    if (uVar27 != 0) goto code_r0x004119fe;\n                    if ((iVar9 != 0) && (uVar32 == uStack204 + uStack208)) {\n                        dVar36 = CONCAT44(uVar38, uVar37) * *0x4838a8;\n                        dVar35 = CONCAT44(uVar40, uVar39) - *0x483898;\n                        if ((dVar36 ^ CONCAT44(uVar46, uVar45)) <= dVar35) {\n                            if ((dVar36 < dVar35) &&\n                               (CONCAT44(uVar40, uVar39) <= *0x483880 - dVar36 &&\n                                *0x483880 - dVar36 != CONCAT44(uVar40, uVar39))) goto code_r0x00411d80;\n                        }\n                        else if (dVar36 <= CONCAT44(uVar40, uVar39) && CONCAT44(uVar40, uVar39) != dVar36)\n                        goto code_r0x00411d80;\n                    }\n                    iVar9 = 0;\n                    if (!bVar31) goto code_r0x00411bd9;\n                }\n                fcn.00415120(arg1_03);\n                fcn.00415120(arg1_01);\n                fcn.00415120(arg1_02);\n                fcn.00415120(iVar16);\n            } while( true );\n        }\n    }\n    uStack212 = 0x50;\n    *(auStack176[0] + 0x14) = 0;\n    *(auStack176[0] + 0x18) = 0;\n    *arg4 = uVar22;\n    goto code_r0x00410dce;\ncode_r0x00410c50:\n    puStack184 = puStack184 + 1;\n    uVar22 = *puStack184;\n    if (0x2d < *puStack184) goto code_r0x00410c70;\n    goto code_r0x00410ad9;\njoined_r0x004122b2:\n    if (uVar10 != 0xffffffff) goto code_r0x00412459;\n    if (puVar2 <= puVar20) goto code_r0x004122d3;\n    uVar10 = *puVar20;\n    puVar20 = puVar20 + 1;\n    goto joined_r0x004122b2;\ncode_r0x00411d80:\n    uStack212 = uStack212 | uStack284;\ncode_r0x004119fe:\n    if (!bVar31) goto code_r0x00411ee4;\n    goto code_r0x00411a13;\ncode_r0x004122d3:\n    if (((uStack208 & 0x1f) == 0) || ((-1 << (uStack208 & 0x1f) | *puVar20) == 0xffffffff)) {\n        *(auStack176[0] + 0x14) = 1;\n        *(auStack176[0] + 0x18) = 1;\n        uStack208 = 1;\n        uStack212 = 0x21;\n        uStack204 = (uVar5 - 1) + uVar22;\n    }\n    else {\ncode_r0x00412459:\n        uStack212 = 0x11;\ncode_r0x004123bb:\n        if ((bVar31) || (uVar5 <= uVar32)) {\n            if ((*(auStack176[0] + 0x18) & 1) != 0) {\n                if (uVar26 == 0) {\n                    if (uVar32 == 1) {\ncode_r0x00412366:\n                        *(auStack176[0] + 0x14) = 0;\n                        uStack212 = 0x50;\n                        uStack204 = uVar22;\n                    }\n                    else {\n                        uStack212 = 0x11;\n                        *(auStack176[0] + 0x18) = *(auStack176[0] + 0x18) - 1;\n                    }\n                }\n                else {\n                    auStack176[0] = fcn.00410560(auStack176[0]);\n                    puVar20 = auStack176[0] + 0x18 + (*(auStack176[0] + 0x14) + -1) * 4;\n                    uVar22 = 0x1f;\n                    if (*puVar20 != 0) {\n                        for (; *puVar20 >> uVar22 == 0; uVar22 = uVar22 - 1) {\n                        }\n                    }\n                    if ((-uStack208 & 0x1f) != (uVar22 ^ 0x1f)) {\n                        uStack208 = uStack208 + 1;\n                    }\n                    uStack212 = 0x21;\n                }\n            }\n            goto code_r0x004119fe;\n        }\n    }\ncode_r0x00411ee4:\n    uVar22 = uVar5 - uStack208;\n    if (uVar22 == 0) {\n        bVar31 = false;\n    }\n    else {\n        if (uVar22 < 1) {\n            fcn.00415d20(auStack176[0], -uVar22);\n        }\n        else {\n            auStack176[0] = fcn.00415530(auStack176[0], uVar22);\n        }\n        bVar31 = false;\n        uStack204 = uStack204 - uVar22;\n    }\ncode_r0x00411a13:\n    *arg4 = uStack204;\n    fcn.00415120(arg1_03);\n    fcn.00415120(arg1_01);\n    fcn.00415120(arg1_02);\n    fcn.00415120(iVar15);\n    fcn.00415120(iVar16);\n    if (arg3[2] < uStack204) {\n        uVar22 = arg3[3] & 3;\n        if (uVar22 == 2) {\n            if (uStack288 == 0) goto code_r0x00411e42;\n        }\n        else if (uVar22 == 3) {\n            if (uStack288 != 0) goto code_r0x00411e42;\n        }\n        else if (uVar22 == 1) {\ncode_r0x00411e42:\n            uStack212 = 0xa3;\n            *(auStack176[0] + 0x14) = 0;\n            puVar14 = sub.msvcrt.dll__errno();\n            *puVar14 = 0x22;\n            uVar22 = arg3[2] + 1;\ncode_r0x00410db0:\n            *arg4 = uVar22;\n            goto code_r0x00410dc2;\n        }\n        fcn.00415120(auStack176[0]);\n        auStack176[0] = 0;\n        uStack212 = 0x11;\n        uVar22 = *arg3;\n        *arg4 = arg3[2];\n        puVar14 = in_stack_00000028 + (uVar22 + 0x1f >> 5);\n        puVar17 = in_stack_00000028;\n        if (in_stack_00000028 < puVar14) {\n            do {\n                puVar18 = puVar17 + 1;\n                *puVar17 = 0xffffffff;\n                puVar17 = puVar18;\n            } while (puVar18 < puVar14);\n        }\n        uVar22 = uVar22 & 0x1f;\n        if (uVar22 != 0) {\n            puVar14[-1] = puVar14[-1] >> (0x20U - uVar22 & 0x1f);\n        }\n    }\ncode_r0x00410dc2:\n    if (bVar31) {\ncode_r0x00410dce:\n        if (uStack236 == 0) {\n            uVar10 = (0 < *(auStack176[0] + 0x14)) * 2 | uStack212 & 0xfffffff8;\n            uVar22 = uStack212 & 0x30;\n            uStack212 = uVar10;\n            if (uVar22 != 0) {\n                uStack212 = uVar10 | 0x40;\n                puVar14 = sub.msvcrt.dll__errno();\n                *puVar14 = 0x22;\n            }\n        }\n        else {\n            *(auStack176[0] + 0x14) = 0;\n            uStack212 = 0x50;\n            puVar14 = sub.msvcrt.dll__errno();\n            *puVar14 = 0x22;\n        }\n    }\ncode_r0x00410b0e:\n    if (arg2 != NULL) {\n        *arg2 = puStack184;\n    }\n    if (uStack288 != 0) {\n        uStack212 = uStack212 | 8;\n    }\n    if (auStack176[0] != 0) {\n        fcn.00415c30(in_stack_00000028, uVar5, auStack176[0]);\n        fcn.00415120(auStack176[0]);\n    }\n    return uStack212;\n}\n",
        "token_count": 11208
    },
    "00412610": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00412610(int16_t *arg1, ushort *arg2)\n\n{\n    uint16_t uVar1;\n    int16_t *piVar2;\n    ushort *puVar3;\n    int16_t *piVar5;\n    int16_t *piVar6;\n    ushort *puVar4;\n    \n    if (arg1[5] < 0) {\n        *arg2 = 0xffff;\n    }\n    else {\n        *arg2 = 0;\n    }\n    uVar1 = arg1[5];\n    arg2[1] = uVar1 & 0x7fff;\n    if ((uVar1 & 0x7fff) == 0x7fff) {\n        if ((arg1[5] & 0x7fffU) == 0x7fff) {\n            piVar5 = arg1;\n            do {\n                piVar6 = piVar5 + 1;\n                if (*piVar5 != 0) {\n                    arg2[2] = 0;\n                    piVar5 = arg1 + 4;\n                    piVar6 = arg2 + 3;\n                    do {\n                        piVar2 = piVar5 + -1;\n                        *piVar6 = *piVar5;\n                        piVar5 = piVar2;\n                        piVar6 = piVar6 + 1;\n                    } while (piVar2 != arg1 + -2);\n                    return;\n                }\n                piVar5 = piVar6;\n            } while (piVar6 != arg1 + 5);\n        }\n        puVar3 = arg2 + 2;\n        do {\n            puVar4 = puVar3 + 1;\n            *puVar3 = 0;\n            puVar3 = puVar4;\n        } while (puVar4 != arg2 + 9);\n        return;\n    }\n    arg2[2] = 0;\n    piVar5 = arg1 + 4;\n    piVar6 = arg2 + 3;\n    do {\n        piVar2 = piVar5 + -1;\n        *piVar6 = *piVar5;\n        piVar5 = piVar2;\n        piVar6 = piVar6 + 1;\n    } while (piVar2 != arg1 + -1);\n    arg2[8] = 0;\n    return;\n}\n",
        "token_count": 507
    },
    "00412ac0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00412ac0(int16_t *arg1, ushort *arg2)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    int16_t *piVar3;\n    int64_t iVar5;\n    uint16_t *puVar6;\n    int16_t *piVar7;\n    uint16_t uVar8;\n    int16_t *piVar4;\n    \n    if ((arg1[1] & 0x7fffU) == 0x7fff) {\n        iVar5 = 0;\n        do {\n            if (*(arg1 + iVar5 + 6) != 0) {\n                *arg2 = 0;\n                arg2[1] = 0;\n                arg2[2] = 0;\n                arg2[3] = 0xc000;\n                arg2[4] = 0x7fff;\n                arg2[5] = 0;\n                return;\n            }\n            iVar5 = iVar5 + 2;\n        } while (iVar5 != 0xc);\n        arg2[5] = 0;\n        iVar1 = *arg1;\n    }\n    else {\n        puVar6 = arg1 + 2;\n        if (arg1[1] == 0) {\n            uVar2 = 0;\n            do {\n                if ((*puVar6 & 1) != 0) {\n                    uVar2 = uVar2 | 1;\n                }\n                uVar8 = *puVar6 >> 1;\n                if ((uVar2 & 2) != 0) {\n                    uVar8 = uVar8 | 0x8000;\n                }\n                *puVar6 = uVar8;\n                puVar6 = puVar6 + 1;\n                uVar2 = uVar2 * 2;\n            } while (puVar6 != arg1 + 9);\n        }\n        arg2[5] = 0;\n        iVar1 = *arg1;\n    }\n    if (iVar1 == 0) {\n        arg2[4] = arg1[1];\n        uVar8 = arg1[1];\n    }\n    else {\n        arg2[4] = arg1[1] | 0x8000;\n        uVar8 = arg1[1];\n    }\n    if ((uVar8 & 0x7fff) == 0x7fff) {\n        iVar5 = 0;\n        while (*(arg1 + iVar5 + 6) == 0) {\n            iVar5 = iVar5 + 2;\n            if (iVar5 == 0xc) {\n                arg2[3] = 0x8000;\n                arg2[2] = 0;\n                arg2[1] = 0;\n                *arg2 = 0;\n                return;\n            }\n        }\n    }\n    piVar3 = arg1 + 3;\n    piVar7 = arg2 + 3;\n    do {\n        piVar4 = piVar3 + 1;\n        *piVar7 = *piVar3;\n        piVar3 = piVar4;\n        piVar7 = piVar7 + -1;\n    } while (piVar4 != arg1 + 7);\n    return;\n}\n",
        "token_count": 702
    },
    "00413140": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00413140(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    bool bVar1;\n    ushort uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint16_t uVar5;\n    uint16_t *puVar6;\n    uint32_t uVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    int32_t in_stack_00000028;\n    int32_t in_stack_00000030;\n    ulong uStack88;\n    uint64_t uStack80;\n    ushort uStack72;\n    \n    uStack72 = 0;\n    uStack88 = 0;\n    uStack80 = 0x1000000000000;\n    iVar3 = fcn.00412f80(arg1);\n    uVar7 = arg4 - iVar3;\n    if ((uVar7 < 0x7fff) && (0x50 < iVar3)) {\ncode_r0x00413279:\n        *(arg1 + 2) = 0;\n        *(arg1 + 10) = 0;\n        return;\n    }\n    if (uVar7 < 0) {\n        if (uVar7 < -0x50) goto code_r0x00413279;\n        iVar3 = fcn.00412d80(arg1, uVar7);\n        if (iVar3 != 0) {\n            arg2._0_4_ = 1;\n        }\n    }\n    if (in_stack_00000028 == 0) goto code_r0x00413216;\n    if (in_stack_00000030 == 0x40) {\n        iVar9 = 0xe;\n        uStack80 = CONCAT24(1, uStack80);\n        iVar8 = 6;\n        iVar3 = 7;\n    }\n    else {\n        iVar9 = 0x10;\n        iVar8 = 7;\n        iVar3 = 8;\n    }\n    bVar1 = uVar7 < 1 && in_stack_00000030 != 0x50;\n    if (bVar1) {\n        puVar6 = arg1 + 4;\n        arg2._0_4_ = arg2 | *(arg1 + 0x10) & 1;\n        uVar4 = 0;\n        do {\n            if ((*puVar6 & 1) != 0) {\n                uVar4 = uVar4 | 1;\n            }\n            uVar5 = *puVar6 >> 1;\n            if ((uVar4 & 2) != 0) {\n                uVar5 = uVar5 | 0x8000;\n            }\n            *puVar6 = uVar5;\n            puVar6 = puVar6 + 1;\n            uVar4 = uVar4 * 2;\n        } while (puVar6 != arg1 + 0x12);\n    }\n    uVar5 = *(arg1 + iVar9);\n    if ((in_stack_00000030 < 0x50) && (iVar3 == 7)) {\n        if (*(arg1 + 0x10) != 0) {\n            uVar5 = uVar5 | 1;\n        }\n        *(arg1 + 0x10) = 0;\n    }\n    *(arg1 + iVar9) = 0;\n    if (-1 < uVar5) goto code_r0x00413200;\n    if (uVar5 == 0x8000) {\n        if (arg2 == 0) {\n            if ((*(arg1 + iVar8 * 2) & 1) != 0) goto code_r0x004133e6;\n        }\n        else if (arg3 == 0) goto code_r0x004133e6;\n    }\n    else {\ncode_r0x004133e6:\n        fcn.00412700(&uStack88, arg1);\n    }\ncode_r0x00413200:\n    if (bVar1) {\n        puVar6 = arg1 + 0x10;\n        uVar4 = 0;\n        do {\n            if (*puVar6 < 0) {\n                uVar4 = uVar4 | 1;\n            }\n            uVar5 = *puVar6 * 2;\n            if ((uVar4 & 2) != 0) {\n                uVar5 = uVar5 | 1;\n            }\n            *puVar6 = uVar5;\n            puVar6 = puVar6 + -1;\n            uVar4 = uVar4 * 2;\n        } while (puVar6 != arg1 + 2);\n    }\n    uVar5 = *(arg1 + 4);\n    if (uVar5 != 0) {\n        puVar6 = arg1 + 4;\n        uVar4 = 0;\n        while( true ) {\n            if ((uVar5 & 1) != 0) {\n                uVar4 = uVar4 | 1;\n            }\n            uVar5 = uVar5 >> 1;\n            if ((uVar4 & 2) != 0) {\n                uVar5 = uVar5 | 0x8000;\n            }\n            *puVar6 = uVar5;\n            puVar6 = puVar6 + 1;\n            uVar4 = uVar4 * 2;\n            if (puVar6 == arg1 + 0x12) break;\n            uVar5 = *puVar6;\n        }\n        uVar7 = uVar7 + 1;\n    }\ncode_r0x00413216:\n    *(arg1 + 0x10) = 0;\n    if (uVar7 < 0x7fff) {\n        uVar2 = 0;\n        if (-1 < uVar7) {\n            uVar2 = uVar7;\n        }\n        *(arg1 + 2) = uVar2;\n        return;\n    }\n    iVar8 = 0;\n    *(arg1 + 2) = 0x7fff;\n    do {\n        *(arg1 + 4 + iVar8) = 0;\n        iVar8 = iVar8 + 2;\n    } while (iVar8 != 0xc);\n    return;\n}\n",
        "token_count": 1369
    },
    "00413430": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00413430(int16_t *arg1, ushort *arg2)\n\n{\n    int16_t *piVar1;\n    int64_t iVar3;\n    ushort *puVar4;\n    int16_t *piVar6;\n    int16_t *piVar2;\n    ushort *puVar5;\n    \n    if (*arg1 == 0) {\n        arg2[5] = arg1[1];\n    }\n    else {\n        arg2[5] = arg1[1] | 0x8000;\n    }\n    piVar1 = arg1 + 3;\n    piVar6 = arg2 + 4;\n    if (arg1[1] != 0x7fff) {\n        do {\n            piVar2 = piVar1 + 1;\n            *piVar6 = *piVar1;\n            piVar1 = piVar2;\n            piVar6 = piVar6 + -1;\n        } while (piVar2 != arg1 + 8);\n        return;\n    }\n    iVar3 = 0;\n    do {\n        if (*(arg1 + iVar3 + 6) != 0) {\n            arg2[3] = 0;\n            arg2[4] = 0xc000;\n            *arg2 = 0;\n            arg2[1] = 0;\n            arg2[2] = 0;\n            arg2[5] = 0x7fff;\n            return;\n        }\n        iVar3 = iVar3 + 2;\n    } while (iVar3 != 0xc);\n    puVar4 = arg2;\n    do {\n        puVar5 = puVar4 + 1;\n        *puVar4 = 0;\n        puVar4 = puVar5;\n    } while (puVar5 != arg2 + 5);\n    arg2[5] = arg2[5] | 0x7fff;\n    return;\n}\n",
        "token_count": 416
    },
    "004134f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004134f0(ulong *arg1, ulong *arg2, ulong *arg3)\n\n{\n    int16_t iVar1;\n    bool bVar2;\n    ushort uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    ulong *puVar6;\n    int64_t iVar8;\n    int16_t *piVar9;\n    uint16_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint16_t uVar13;\n    ulong var_10h;\n    int16_t iStack104;\n    uint16_t uStack102;\n    int16_t aiStack100 [6];\n    int16_t aiStack88 [8];\n    int16_t iStack72;\n    uint16_t uStack70;\n    int16_t aiStack68 [6];\n    int16_t aiStack56 [8];\n    ulong *puVar7;\n    \n    uVar10 = *(arg1 + 10) & 0x7fff;\n    if (uVar10 == 0x7fff) {\n        puVar7 = arg1;\n        do {\n            puVar6 = puVar7 + 2;\n            if (*puVar7 != 0) {\n                *arg3 = *arg1;\n                *(arg3 + 1) = *(arg1 + 1);\n                return;\n            }\n            puVar7 = puVar6;\n        } while (puVar6 != arg1 + 10);\n    }\n    uVar13 = *(arg2 + 10) & 0x7fff;\n    if (uVar13 == 0x7fff) {\n        puVar7 = arg2;\n        do {\n            puVar6 = puVar7 + 2;\n            if (*puVar7 != 0) {\n                *arg3 = *arg2;\n                *(arg3 + 1) = *(arg2 + 1);\n                return;\n            }\n            puVar7 = puVar6;\n        } while (puVar6 != arg2 + 10);\n    }\n    bVar2 = false;\n    if (uVar10 == 0x7fff) {\n        puVar7 = arg1;\n        do {\n            puVar6 = puVar7 + 2;\n            if (*puVar7 != 0) {\n                bVar2 = false;\n                goto code_r0x00413540;\n            }\n            puVar7 = puVar6;\n        } while (puVar6 != arg1 + 10);\n        iVar8 = 0;\n        do {\n            if (*(arg2 + iVar8 + 2) != 0) {\n                bVar2 = true;\n                goto code_r0x00413540;\n            }\n            iVar8 = iVar8 + 2;\n        } while (iVar8 != 0xe);\n    }\n    else {\ncode_r0x00413540:\n        if (uVar13 != 0x7fff) {\ncode_r0x0041354c:\n            if (!bVar2) {\n                fcn.00412610(arg1, &iStack104);\n                fcn.00412610(arg2, &iStack72);\n                uVar11 = uStack70;\n                uVar12 = uStack102;\n                uVar5 = uStack70;\n                if (uStack102 == 0) {\n                    piVar9 = aiStack100;\n                    do {\n                        if (piVar9 == aiStack88) goto code_r0x004135a9;\n                        iVar1 = *piVar9;\n                        piVar9 = piVar9 + 1;\n                    } while (iVar1 == 0);\n                    iVar4 = fcn.00412f80(&iStack104);\n                    uVar12 = -iVar4;\n                }\n                piVar9 = aiStack68;\n                if (uStack70 == 0) {\n                    do {\n                        if (piVar9 == aiStack56) {\ncode_r0x004135a9:\n                            *arg3 = 0;\n                            *(arg3 + 1) = 0;\n                            return;\n                        }\n                        iVar1 = *piVar9;\n                        piVar9 = piVar9 + 1;\n                    } while (iVar1 == 0);\n                    iVar4 = fcn.00412f80(&iStack72);\n                    uVar11 = uVar5 - iVar4;\n                }\n                uVar5 = fcn.004129e0(&iStack104, &iStack72);\n                fcn.00413140(&iStack72, uVar5, 0, (uVar12 - 0x3ffe) + uVar11);\n                iStack72 = (iStack104 == iStack72) - 1;\n                fcn.00413430(&iStack72, arg3);\n                return;\n            }\ncode_r0x004135e0:\n            if (uVar10 == 0x7fff) {\n                puVar7 = arg1;\n                do {\n                    puVar6 = puVar7 + 2;\n                    if (*puVar7 != 0) {\n                        uVar12 = 0;\n                        goto code_r0x004135ef;\n                    }\n                    puVar7 = puVar6;\n                } while (puVar6 != arg1 + 10);\n            }\n            uVar12 = *(arg1 + 10) >> 0x1f;\ncode_r0x004135ef:\n            if (uVar13 == 0x7fff) {\n                puVar7 = arg2;\n                do {\n                    puVar6 = puVar7 + 2;\n                    if (*puVar7 != 0) {\n                        uVar5 = 0;\n                        goto code_r0x004135ff;\n                    }\n                    puVar7 = puVar6;\n                } while (puVar6 != arg2 + 10);\n            }\n            uVar5 = *(arg2 + 10) >> 0x1f;\ncode_r0x004135ff:\n            uVar3 = 0x8000;\n            if (uVar12 == uVar5) {\n                uVar3 = 0;\n            }\n            *(arg3 + 10) = uVar3;\n            puVar7 = arg3;\n            do {\n                puVar6 = puVar7 + 2;\n                *puVar7 = 0;\n                puVar7 = puVar6;\n            } while (puVar6 != arg3 + 10);\n            *(arg3 + 10) = *(arg3 + 10) | 0x7fff;\n            return;\n        }\n        puVar7 = arg2;\n        do {\n            puVar6 = puVar7 + 2;\n            if (*puVar7 != 0) goto code_r0x0041354c;\n            puVar7 = puVar6;\n        } while (puVar6 != arg2 + 10);\n        iVar8 = 0;\n        do {\n            if (*(arg1 + iVar8 + 2) != 0) goto code_r0x004135e0;\n            iVar8 = iVar8 + 2;\n        } while (iVar8 != 0xe);\n    }\n    *arg3 = 0;\n    *(arg3 + 2) = 0;\n    *(arg3 + 4) = 0;\n    *(arg3 + 6) = 0;\n    *(arg3 + 1) = 0xc000;\n    *(arg3 + 10) = 0x7fff;\n    return;\n}\n",
        "token_count": 1618
    },
    "00415120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00415120(ulong *arg1)\n\n{\n    ulong uVar1;\n    bool bVar2;\n    \n    if (arg1 != NULL) {\n        if (9 < *(arg1 + 1)) {\n    // WARNING: Could not recover jumptable at 0x00416d90. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.msvcrt.dll_free)();\n            return;\n        }\n        fcn.00414f10(0);\n        bVar2 = *0x49f350 == 2;\n        uVar1 = *(*(arg1 + 1) * 8 + 0x49f300);\n        *(*(arg1 + 1) * 8 + 0x49f300) = arg1;\n        *arg1 = uVar1;\n        if (bVar2) {\n    // WARNING: Could not recover jumptable at 0x00415183. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x49f360);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 254
    },
    "00414f10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00414fb0)\n// WARNING: Removing unreachable block (ram,0x00414fb5)\n// WARNING: Removing unreachable block (ram,0x00414fc0)\n\nvoid fcn.00414f10(ulong arg1)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_Sleep;\n    pcVar1 = _sym.imp.KERNEL32.dll_InitializeCriticalSection;\n    if (*0x49f350 != 2) {\n        if (*0x49f350 == 0) {\n            *0x49f350 = 1;\n            (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x49f360);\n            (*pcVar1)(0x49f388);\n            fcn.0040b1e0(0x414fd0);\n            *0x49f350 = 2;\n        }\n        else {\n            if (*0x49f350 == 1) {\n                do {\n                    (*pcVar2)(1);\n                } while (*0x49f350 == 1);\n            }\n            if (*0x49f350 != 2) {\n                return;\n            }\n        }\n    }\n    // WARNING: Could not recover jumptable at 0x00414fa9. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(arg1 * 0x28 + 0x49f360);\n    return;\n}\n",
        "token_count": 336
    },
    "00415020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong * fcn.00415020(ulong arg1)\n\n{\n    int32_t iVar1;\n    ulong *puVar2;\n    uint64_t uVar3;\n    int32_t iVar4;\n    \n    fcn.00414f10(0);\n    iVar1 = *0x49f350;\n    if (arg1 < 10) {\n        puVar2 = *(arg1 * 8 + 0x49f300);\n        if (puVar2 != NULL) {\n            *(arg1 * 8 + 0x49f300) = *puVar2;\n            goto joined_r0x004150aa;\n        }\n        iVar4 = 1 << (arg1 & 0x1f);\n        uVar3 = (iVar4 + -1) * 4 + 0x27U >> 3 & 0xffffffff;\n        if (0x120 < (*0x46b0e0 + -0x93d40 >> 3) + uVar3) goto code_r0x0041508c;\n        puVar2 = *0x46b0e0;\n        *0x46b0e0 = *0x46b0e0 + uVar3;\n    }\n    else {\n        iVar4 = 1 << (arg1 & 0x1f);\n        uVar3 = (iVar4 + -1) * 4 + 0x27U >> 3 & 0xffffffff;\ncode_r0x0041508c:\n        puVar2 = sub.msvcrt.dll_malloc(uVar3 << 3);\n        if (puVar2 == NULL) {\n            return NULL;\n        }\n    }\n    iVar1 = *0x49f350;\n    *(puVar2 + 1) = arg1;\n    *(puVar2 + 0xc) = iVar4;\njoined_r0x004150aa:\n    if (iVar1 == 2) {\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x49f360);\n    }\n    *(puVar2 + 0x14) = 0;\n    *(puVar2 + 2) = 0;\n    return puVar2;\n}\n",
        "token_count": 471
    },
    "004153b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint64_t fcn.004153b0(int64_t arg1, ulong arg2)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    ulong *arg2_00;\n    \n    if (((arg2 & 3) != 0) && (arg1 = fcn.00415190(arg1, *(((arg2 & 3) - 1) * 4 + 0x483960), 0),  arg1 == 0)) {\n        return 0;\n    }\n    arg2._0_4_ = arg2 >> 2;\n    if (arg2 != 0) {\n        puVar3 = *0x49e9e0;\n        if (*0x49e9e0 == NULL) {\n            fcn.00414f10(1);\n            puVar3 = *0x49e9e0;\n            if (*0x49e9e0 == NULL) {\n                puVar3 = fcn.00415020(1);\n                if (puVar3 == NULL) {\n                    *0x49e9e0 = NULL;\n                    return 0;\n                }\n                *(puVar3 + 3) = 0x271;\n                *(puVar3 + 0x14) = 1;\n                *0x49e9e0 = puVar3;\n                *puVar3 = 0;\n            }\n            if (*0x49f350 == 2) {\n                (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x49f388);\n            }\n        }\n        while( true ) {\n            arg2_00 = puVar3;\n            uVar1 = arg2 & 1;\n            arg2._0_4_ = arg2 >> 1;\n            if (uVar1 != 0) {\n                iVar2 = fcn.00415280(arg1, arg2_00);\n                if (iVar2 == 0) {\n                    return 0;\n                }\n                fcn.00415120(arg1);\n                arg1 = iVar2;\n            }\n            if (arg2 == 0) break;\n            puVar3 = *arg2_00;\n            if (*arg2_00 == NULL) {\n                fcn.00414f10(1);\n                puVar3 = *arg2_00;\n                if (puVar3 == NULL) {\n                    puVar3 = fcn.00415280(arg2_00, arg2_00);\n                    *arg2_00 = puVar3;\n                    if (puVar3 == NULL) {\n                        return 0;\n                    }\n                    *puVar3 = 0;\n                }\n                if (*0x49f350 == 2) {\n                    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x49f388);\n                }\n            }\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 624
    },
    "004158d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.004158d0(ulong noname_0, int32_t *arg2, int32_t *arg3)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    uint8_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    ulong in_XMM0_Qa;\n    \n    iVar4 = fcn.00415020(1);\n    if (iVar4 == 0) {\n        iVar4 = 0;\n    }\n    else {\n        uVar8 = in_XMM0_Qa >> 0x20;\n        uVar9 = uVar8 & 0x7fffffff;\n        uVar8 = uVar8 & 0xfffff;\n        if (uVar9 >> 0x14 != 0) {\n            uVar8 = uVar8 | 0x100000;\n        }\n        uVar7 = in_XMM0_Qa;\n        if (uVar7 == 0) {\n            iVar6 = 0;\n            for (uVar7 = uVar8; (uVar7 & 1) == 0; uVar7 = uVar7 >> 1 | 0x80000000) {\n                iVar6 = iVar6 + 1;\n            }\n            *(iVar4 + 0x14) = 1;\n            iVar2 = iVar6 + 0x20;\n            *(iVar4 + 0x18) = uVar8 >> (iVar6 & 0x1f);\n            iVar6 = 1;\n        }\n        else {\n            iVar2 = 0;\n            for (uVar3 = uVar7; (uVar3 & 1) == 0; uVar3 = uVar3 >> 1 | 0x80000000) {\n                iVar2 = iVar2 + 1;\n            }\n            uVar5 = iVar2;\n            uVar7 = uVar7 >> (uVar5 & 0x1f);\n            if (iVar2 == 0) {\n                *(iVar4 + 0x18) = uVar7;\n            }\n            else {\n                *(iVar4 + 0x18) = uVar8 << (0x20 - uVar5 & 0x1f) | uVar7;\n                uVar8 = uVar8 >> (uVar5 & 0x1f);\n            }\n            *(iVar4 + 0x1c) = uVar8;\n            iVar6 = 2 - (uVar8 == 0);\n            *(iVar4 + 0x14) = iVar6;\n        }\n        if (uVar9 >> 0x14 == 0) {\n            puVar1 = iVar4 + 0x14 + iVar6 * 4;\n            uVar8 = 0x1f;\n            if (*puVar1 != 0) {\n                for (; *puVar1 >> uVar8 == 0; uVar8 = uVar8 - 1) {\n                }\n            }\n            *arg2 = iVar2 + -0x432;\n            *arg3 = iVar6 * 0x20 - (uVar8 ^ 0x1f);\n            return iVar4;\n        }\n        *arg2 = iVar2 + -0x433 + (uVar9 >> 0x14);\n        *arg3 = 0x35 - iVar2;\n    }\n    return iVar4;\n}\n",
        "token_count": 773
    },
    "00415a20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00415a20(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int64_t arg1_00;\n    uint64_t arg1_01;\n    char *pcVar5;\n    char *pcVar6;\n    char *pcVar7;\n    int32_t in_stack_00000028;\n    \n    iVar3 = (arg3 + 8) / 9;\n    if (iVar3 < 2) {\n        arg1_01 = 0;\n    }\n    else {\n        arg1_01 = 0;\n        iVar4 = 1;\n        do {\n            iVar2 = iVar4 * 2;\n            arg1_01 = arg1_01 + 1;\n            iVar1 = iVar4 * -2;\n            iVar4 = iVar2;\n        } while (iVar3 != iVar2 && SBORROW4(iVar3, iVar2) == iVar3 + iVar1 < 0);\n    }\n    arg1_00 = fcn.00415020(arg1_01);\n    *(arg1_00 + 0x18) = arg4;\n    *(arg1_00 + 0x14) = 1;\n    if (arg2 < 10) {\n        arg2._0_4_ = 9;\n        pcVar6 = arg1 + 9 + in_stack_00000028;\n    }\n    else {\n        pcVar6 = arg1 + 9;\n        do {\n            pcVar5 = pcVar6 + 1;\n            arg1_00 = fcn.00415190(arg1_00, 10, *pcVar6 - 0x30);\n            pcVar6 = pcVar5;\n        } while (pcVar5 != arg1 + 10 + (arg2 - 10));\n        pcVar6 = arg1 + 10 + (arg2 - 10) + in_stack_00000028;\n    }\n    if (arg2 < arg3) {\n        pcVar5 = pcVar6;\n        do {\n            pcVar7 = pcVar5 + 1;\n            arg1_00 = fcn.00415190(arg1_00, 10, *pcVar5 - 0x30);\n            pcVar5 = pcVar7;\n        } while (pcVar7 != pcVar6 + ((arg3 + -1) - arg2) + 1);\n    }\n    return;\n}\n",
        "token_count": 553
    },
    "00415fd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.00415fd0(uint8_t **arg1, uint32_t *arg2, uint32_t *arg3, int64_t *arg4)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint8_t *puVar5;\n    bool bVar6;\n    bool bVar7;\n    int64_t iVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint8_t **ppuVar12;\n    int64_t iVar13;\n    uint *puVar14;\n    uint64_t uVar15;\n    uint8_t uVar16;\n    int64_t iVar17;\n    int32_t iVar18;\n    uint32_t uVar19;\n    uint8_t *puVar20;\n    uint8_t *puVar21;\n    int32_t iVar22;\n    uint8_t *puVar23;\n    uint32_t *puVar24;\n    uint32_t *puVar25;\n    bool bVar26;\n    uint32_t in_stack_00000028;\n    uint32_t uStack84;\n    \n    ppuVar12 = sub.msvcrt.dll_localeconv();\n    puVar5 = *ppuVar12;\n    if (*0x49f570 == '\\0') {\n        fcn.00416c60();\n    }\n    *arg4 = 0;\n    puVar21 = *arg1;\n    uVar2 = puVar21[2];\n    puVar23 = puVar21 + 2;\n    if (uVar2 == 0x30) {\n        iVar9 = 0;\n        puVar21 = puVar21 + 3;\n        do {\n            puVar23 = puVar21;\n            uVar2 = *puVar23;\n            iVar9 = iVar9 + 1;\n            puVar21 = puVar23 + 1;\n        } while (uVar2 == 0x30);\n    }\n    else {\n        iVar9 = 0;\n    }\n    puVar21 = puVar23;\n    if (*(uVar2 + 0x49f540) == '\\0') {\n        uVar2 = *puVar5;\n        if (uVar2 == 0) {\n            iVar13 = 0;\ncode_r0x00416087:\n            puVar20 = puVar23 + iVar13;\n            uVar16 = *puVar20;\n            cVar3 = *(uVar16 + 0x49f540);\n            if (cVar3 != '\\0') {\n                puVar23 = puVar20;\n                if (uVar16 == 0x30) {\n                    do {\n                        puVar23 = puVar23 + 1;\n                        uVar16 = *puVar23;\n                    } while (uVar16 == 0x30);\n                    cVar3 = *(uVar16 + 0x49f540);\n                }\n                bVar26 = cVar3 == '\\0';\n                iVar9 = 1;\n                puVar21 = puVar23;\n                goto joined_r0x004160ed;\n            }\n            uStack84 = 0;\n            bVar26 = true;\n            puVar21 = puVar20;\n        }\n        else {\n            uVar16 = *puVar23;\n            if (uVar2 == *puVar23) {\n                iVar13 = 1;\n                do {\n                    puVar20 = puVar5 + iVar13;\n                    if (*puVar20 == 0) goto code_r0x00416087;\n                    puVar1 = puVar23 + iVar13;\n                    iVar13 = iVar13 + 1;\n                    uVar16 = uVar2;\n                } while (*puVar20 == *puVar1);\n            }\n            uStack84 = 0;\n            bVar26 = true;\n        }\n    }\n    else {\n        uVar16 = *puVar23;\n        uVar2 = *puVar5;\n        iVar9 = iVar9 + 1;\n        bVar26 = false;\n        puVar20 = NULL;\n        cVar3 = *(uVar16 + 0x49f540);\njoined_r0x004160ed:\n        while (cVar3 != '\\0') {\n            uVar16 = puVar21[1];\n            puVar21 = puVar21 + 1;\n            cVar3 = *(uVar16 + 0x49f540);\n        }\n        if (uVar16 == uVar2) {\n            if (puVar20 == NULL) {\n                if (puVar5[1] != 0) {\n                    if (puVar5[1] == puVar21[1]) {\n                        iVar13 = 2;\n                        do {\n                            puVar20 = puVar5 + iVar13;\n                            if (*puVar20 == 0) goto code_r0x00416798;\n                            puVar1 = puVar21 + iVar13;\n                            iVar13 = iVar13 + 1;\n                        } while (*puVar20 == *puVar1);\n                    }\n                    uVar16 = *puVar21;\n                    goto code_r0x00416570;\n                }\n                iVar13 = 1;\ncode_r0x00416798:\n                puVar20 = puVar21 + iVar13;\n                uVar16 = *puVar20;\n                cVar3 = *(uVar16 + 0x49f540);\n                puVar21 = puVar20;\n                while (cVar3 != '\\0') {\n                    puVar21 = puVar21 + 1;\n                    uVar16 = *puVar21;\n                    cVar3 = *(uVar16 + 0x49f540);\n                }\n            }\n            else {\n                uVar16 = *puVar21;\n            }\n        }\n        else {\n            uVar16 = *puVar21;\n            if (puVar20 == NULL) {\ncode_r0x00416570:\n                uStack84 = 0;\n                goto code_r0x00416124;\n            }\n        }\n        uStack84 = (puVar20 - puVar21) * 4;\n    }\ncode_r0x00416124:\n    puVar20 = puVar21;\n    if ((uVar16 == 0x50) || (uVar16 == 0x70)) {\n        uVar2 = puVar21[1];\n        if (uVar2 == 0x2b) {\n            bVar7 = false;\ncode_r0x00416487:\n            puVar1 = puVar21 + 2;\n            uVar2 = *(puVar21[2] + 0x49f540);\n        }\n        else {\n            if (uVar2 == 0x2d) {\n                bVar7 = true;\n                goto code_r0x00416487;\n            }\n            uVar2 = *(uVar2 + 0x49f540);\n            bVar7 = false;\n            puVar1 = puVar21 + 1;\n        }\n        if (uVar2 - 1 < 0x19) {\n            uVar10 = uVar2 - 0x10;\n            puVar20 = puVar1 + 1;\n            bVar6 = false;\n            uVar2 = *(puVar1[1] + 0x49f540);\n            while (uVar2 - 1 < 0x19) {\n                if ((uVar10 & 0xf8000000) != 0) {\n                    bVar6 = true;\n                }\n                puVar20 = puVar20 + 1;\n                uVar10 = (uVar2 - 0x10) + uVar10 * 10;\n                uVar2 = *(*puVar20 + 0x49f540);\n            }\n            if (bVar7) {\n                uVar10 = -uVar10;\n            }\n            uStack84 = uStack84 + uVar10;\n        }\n        else {\n            bVar6 = false;\n        }\n    }\n    else {\n        bVar7 = false;\n        bVar6 = false;\n    }\n    if (iVar9 == 0) {\n        *arg1 = puVar23 + -1;\n    }\n    else {\n        *arg1 = puVar20;\n    }\n    if (bVar26) {\n        return 0;\n    }\n    if (bVar6) {\n        uVar10 = arg2[3];\n        if (bVar7) {\n            if (uVar10 == 2) {\n                if (in_stack_00000028 != 0) goto code_r0x00416401;\n            }\n            else if ((uVar10 != 3) || (in_stack_00000028 == 0)) goto code_r0x00416401;\n            iVar13 = fcn.00415020(0);\n            *(iVar13 + 0x14) = 1;\n            *(iVar13 + 0x18) = 1;\n            uVar10 = arg2[1];\n            goto code_r0x004164f0;\n        }\n        if (uVar10 == 2) {\n            if (in_stack_00000028 != 0) goto code_r0x00416187;\n        }\n        else if (uVar10 == 3) {\n            if (in_stack_00000028 == 0) goto code_r0x00416187;\n        }\n        else if (uVar10 != 1) {\ncode_r0x00416187:\n            uVar10 = *arg2 & 0x1f;\n            iVar18 = *arg2 >> 5;\n            iVar22 = (iVar18 + 1) - (uVar10 == 0);\n            uVar15 = 0;\n            iVar9 = iVar22;\n            while (iVar9 = iVar9 >> 1,  iVar9 != 0) {\n                uVar15 = uVar15 + 1;\n            }\n            iVar13 = fcn.00415020(uVar15);\n            *arg4 = iVar13;\n            *(iVar13 + 0x14) = iVar22;\n            if (iVar18 < 1) {\n                iVar9 = 0;\n            }\n            else {\n                iVar17 = 0;\n                do {\n                    *(iVar13 + 0x18 + iVar17 * 4) = 0xffffffff;\n                    iVar17 = iVar17 + 1;\n                    iVar9 = iVar18;\n                } while (iVar17 < iVar18);\n            }\n            if (iVar18 < iVar22) {\n                *(iVar13 + 0x18 + iVar9 * 4) = 0x20 >> (-uVar10 & 0x1fU);\n            }\n            *arg3 = arg2[1];\n            return 0x11;\n        }\n        goto code_r0x00416518;\n    }\n    uVar15 = 0;\n    for (iVar9 = (puVar21 - puVar23) + -1; 7 < iVar9; iVar9 = iVar9 >> 1) {\n        uVar15 = uVar15 + 1;\n    }\n    iVar13 = fcn.00415020(uVar15);\n    puVar25 = iVar13 + 0x18;\n    if (puVar5[1] == 0) {\n        iVar17 = 0;\n    }\n    else {\n        iVar8 = 1;\n        do {\n            iVar17 = iVar8;\n            iVar8 = iVar17 + 1;\n        } while (puVar5[iVar17 + 1] != 0);\n    }\n    puVar24 = puVar25;\n    if (puVar23 < puVar21) {\n        uVar19 = 0;\n        iVar9 = 0;\n        do {\n            while( true ) {\n                uVar2 = puVar21[-1];\n                puVar20 = puVar21 + -1;\n                if (uVar2 != puVar5[iVar17]) break;\n                puVar21 = puVar20 + -iVar17;\n                if (puVar20 + -iVar17 <= puVar23) goto code_r0x00416375;\n            }\n            if (iVar9 == 0x20) {\n                *puVar24 = uVar19;\n                iVar9 = 4;\n                uVar2 = puVar21[-1];\n                puVar24 = puVar24 + 1;\n                uVar19 = 0;\n                uVar16 = 0;\n            }\n            else {\n                uVar16 = iVar9;\n                iVar9 = iVar9 + 4;\n            }\n            uVar19 = uVar19 | (*(uVar2 + 0x49f540) & 0xf) << (uVar16 & 0x1f);\n            puVar21 = puVar20;\n        } while (puVar23 < puVar20);\ncode_r0x00416375:\n        uVar10 = 0x1f;\n        if (uVar19 != 0) {\n            for (; uVar19 >> uVar10 == 0; uVar10 = uVar10 - 1) {\n            }\n        }\n        uVar10 = uVar10 ^ 0x1f;\n    }\n    else {\n        uVar10 = 0x20;\n        uVar19 = 0;\n    }\n    *puVar24 = uVar19;\n    uVar19 = *arg2;\n    iVar9 = puVar24 + (4 - puVar25) >> 2;\n    *(iVar13 + 0x14) = iVar9;\n    iVar9 = iVar9 * 0x20 - uVar10;\n    if (uVar19 < iVar9) {\n        uVar11 = 0;\n        uVar10 = iVar9 - uVar19;\n        iVar9 = fcn.00415ca0(iVar13, uVar10);\n        if (iVar9 != 0) {\n            uVar4 = uVar10 - 1;\n            uVar11 = 1;\n            if ((puVar25[uVar4 >> 5] & 1 << (uVar4 & 0x1f)) != 0) {\n                if ((uVar4 < 1) || (iVar9 = fcn.00415ca0(iVar13, uVar4),  iVar9 == 0)) {\n                    uVar11 = 2;\n                }\n                else {\n                    uVar11 = 3;\n                }\n            }\n        }\n        fcn.00415d20(iVar13, uVar10);\n        uStack84 = uStack84 + uVar10;\n    }\n    else {\n        uVar11 = 0;\n        if (iVar9 < uVar19) {\n            iVar13 = fcn.00415530(iVar13, uVar19 - iVar9);\n            uStack84 = uStack84 - (uVar19 - iVar9);\n            puVar25 = iVar13 + 0x18;\n        }\n    }\n    if (arg2[2] < uStack84) {\ncode_r0x00416510:\n        fcn.00415120(iVar13);\ncode_r0x00416518:\n        puVar14 = sub.msvcrt.dll__errno();\n        *puVar14 = 0x22;\n        return 0xa3;\n    }\n    uVar10 = arg2[1];\n    if (uStack84 < uVar10) {\n        uStack84 = uVar10 - uStack84;\n        if (uVar19 <= uStack84) {\n            uVar11 = arg2[3];\n            if (uVar11 == 2) {\n                if (in_stack_00000028 == 0) goto code_r0x00416803;\n            }\n            else if (uVar11 == 3) {\n                if (in_stack_00000028 != 0) goto code_r0x00416803;\n            }\n            else if ((uVar11 == 1) && (uStack84 == uVar19)) {\n                if (1 < uVar19) {\n                    iVar9 = fcn.00415ca0(iVar13, uVar19 - 1);\n                    if (iVar9 == 0) goto code_r0x004163f9;\n                    uVar10 = arg2[1];\n                }\ncode_r0x00416803:\n                *(iVar13 + 0x14) = 1;\n                *puVar25 = 1;\ncode_r0x004164f0:\n                *arg4 = iVar13;\n                *arg3 = uVar10;\n                puVar14 = sub.msvcrt.dll__errno();\n                *puVar14 = 0x22;\n                return 0x62;\n            }\ncode_r0x004163f9:\n            fcn.00415120(iVar13);\ncode_r0x00416401:\n            puVar14 = sub.msvcrt.dll__errno();\n            *puVar14 = 0x22;\n            return 0x50;\n        }\n        uVar10 = uStack84 - 1;\n        if (uVar11 == 0) {\n            if (0 < uVar10) {\n                uVar11 = fcn.00415ca0(iVar13, uVar10);\n            }\n        }\n        else {\n            uVar11 = 1;\n        }\n        if ((puVar25[uVar10 >> 5] & 1 << (uVar10 & 0x1f)) != 0) {\n            uVar11 = uVar11 | 2;\n        }\n        uVar19 = uVar19 - uStack84;\n        fcn.00415d20(iVar13, uStack84);\n        uStack84 = arg2[1];\n        uVar10 = 2;\n    }\n    else {\n        uVar10 = 1;\n    }\n    if (uVar11 == 0) goto code_r0x00416612;\n    uVar4 = arg2[3];\n    if (uVar4 == 2) {\n        in_stack_00000028 = 1 - in_stack_00000028;\njoined_r0x004166b8:\n        if (in_stack_00000028 != 0) {\n            iVar9 = *(iVar13 + 0x14);\n            iVar13 = fcn.00410560(iVar13);\n            if (uVar10 == 2) {\n                uVar10 = 0x22;\n                if (*arg2 - 1 == uVar19) {\n                    uVar10 = ~-((1 << (uVar19 & 0x1f) & *(iVar13 + 0x18 + (uVar19 >> 5) * 4)) == 0) + 0x22;\n                }\n                goto code_r0x00416612;\n            }\n            if (iVar9 < *(iVar13 + 0x14)) {\ncode_r0x004166f7:\n                fcn.00415d20(iVar13, 1);\n                uStack84 = uStack84 + 1;\n                if (arg2[2] < uStack84) goto code_r0x00416510;\n            }\n            else if ((uVar19 & 0x1f) != 0) {\n                puVar25 = iVar13 + 0x14 + iVar9 * 4;\n                uVar10 = 0x1f;\n                if (*puVar25 != 0) {\n                    for (; *puVar25 >> uVar10 == 0; uVar10 = uVar10 - 1) {\n                    }\n                }\n                if ((uVar10 ^ 0x1f) < 0x20 - (uVar19 & 0x1f)) goto code_r0x004166f7;\n            }\n            uVar10 = 0x21;\n            goto code_r0x00416612;\n        }\n    }\n    else {\n        if (uVar4 == 3) goto joined_r0x004166b8;\n        if ((uVar4 == 1) && ((uVar11 & 2) != 0)) {\n            in_stack_00000028 = (uVar11 | *puVar25) & 1;\n            goto joined_r0x004166b8;\n        }\n    }\n    uVar10 = uVar10 | 0x10;\ncode_r0x00416612:\n    *arg4 = iVar13;\n    *arg3 = uStack84;\n    return uVar10;\n}\n",
        "token_count": 4419
    },
    "004168a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004168a0(char **arg1, uint32_t *arg2, uint32_t *arg3)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint32_t *puVar5;\n    uint32_t *puVar6;\n    uint32_t *puVar7;\n    char *pcVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    char *pcVar11;\n    int32_t iVar12;\n    uint32_t *puVar13;\n    uint32_t uVar14;\n    uint32_t *puVar15;\n    int32_t iVar16;\n    uint32_t *puVar17;\n    \n    if (*0x49f570 == '\\0') {\n        fcn.00416c60();\n    }\n    uVar3 = *arg2 & 0x1f;\n    pcVar8 = *arg1;\n    puVar17 = arg3 + (*arg2 >> 5);\n    if (uVar3 != 0) {\n        puVar17 = arg3 + (*arg2 >> 5) + 1;\n    }\n    puVar17[-1] = 0;\n    puVar13 = puVar17 + -1;\n    cVar1 = pcVar8[1];\n    while (cVar1 - 1U < 0x20) {\n        cVar1 = pcVar8[2];\n        pcVar8 = pcVar8 + 1;\n    }\n    if (((cVar1 == '0') && ((pcVar8[2] & 0xdfU) == 0x58)) && (uVar2 = pcVar8[3],  0x20 < uVar2)) {\n        pcVar8 = pcVar8 + 2;\n    }\n    else {\n        uVar2 = pcVar8[1];\n    }\n    uVar14 = uVar2;\n    iVar9 = 0;\n    iVar16 = 0;\n    iVar12 = 0;\n    puVar5 = puVar13;\n    puVar15 = puVar13;\n    if (uVar14 != 0) {\n        do {\n            pcVar11 = pcVar8 + 1;\n            uVar2 = *(uVar14 + 0x49f540);\n            if (uVar2 == 0) {\n                if (0x20 < uVar14) {\n                    if (iVar12 == 0) {\n                        if (uVar14 == 0x29) goto code_r0x00416bc7;\n                    }\n                    else if (uVar14 == 0x29) {\n                        *arg1 = pcVar8 + 2;\n                        goto joined_r0x00416c42;\n                    }\n                    pcVar11 = pcVar8 + 2;\n                    cVar1 = pcVar8[2];\n                    while( true ) {\n                        if (cVar1 == '\\0') {\n                            return 4;\n                        }\n                        if (cVar1 == ')') break;\n                        pcVar11 = pcVar11 + 1;\n                        cVar1 = *pcVar11;\n                    }\ncode_r0x00416bc7:\n                    *arg1 = pcVar11 + 1;\n                    return 4;\n                }\n                if (iVar16 < iVar12) {\n                    if ((iVar9 < 8) && (puVar15 < puVar5)) {\n                        uVar14 = *puVar15;\n                        cVar1 = '\\b' - iVar9;\n                        puVar4 = puVar15;\n                        do {\n                            puVar6 = puVar4 + 1;\n                            *puVar4 = puVar4[1] << (cVar1 * -4 + 0x20U & 0x1f) | uVar14;\n                            uVar14 = puVar4[1] >> (cVar1 * '\\x04' & 0x1fU);\n                            *puVar6 = uVar14;\n                            puVar4 = puVar6;\n                        } while (puVar6 < puVar5);\n                    }\n                    if (puVar15 <= arg3) {\n                        iVar9 = 8;\n                        pcVar8 = pcVar11;\n                        goto code_r0x004169e0;\n                    }\n                    puVar5 = puVar15 + -1;\n                    puVar15[-1] = 0;\n                    iVar9 = 0;\n                    puVar15 = puVar5;\n                    iVar16 = iVar12;\n                }\n                uVar2 = pcVar8[2];\n                while (uVar2 < 0x21) {\n                    uVar2 = pcVar11[2];\n                    pcVar11 = pcVar11 + 1;\n                }\n                pcVar8 = pcVar11;\n                if (((uVar2 == 0x30) && ((pcVar11[2] & 0xdfU) == 0x58)) && (0x20 < pcVar11[3])) {\n                    pcVar8 = pcVar11 + 2;\n                }\n            }\n            else {\n                iVar9 = iVar9 + 1;\n                iVar12 = iVar12 + 1;\n                if (iVar9 < 9) {\n                    uVar14 = *puVar15 << 4;\n                }\n                else {\n                    pcVar8 = pcVar11;\n                    if (puVar15 <= arg3) goto code_r0x004169e0;\n                    puVar15[-1] = 0;\n                    uVar14 = 0;\n                    puVar15 = puVar15 + -1;\n                    iVar9 = 1;\n                }\n                *puVar15 = uVar2 & 0xf | uVar14;\n                pcVar8 = pcVar11;\n            }\ncode_r0x004169e0:\n            uVar14 = pcVar8[1];\n        } while (pcVar8[1] != 0);\n    }\n    if (iVar12 == 0) {\n        return 4;\n    }\njoined_r0x00416c42:\n    puVar4 = arg3;\n    if ((iVar9 < 8) && (puVar15 < puVar5)) {\n        uVar14 = *puVar15;\n        cVar1 = '\\b' - iVar9;\n        puVar6 = puVar15;\n        do {\n            puVar7 = puVar6 + 1;\n            uVar10 = puVar6[1] << (cVar1 * -4 + 0x20U & 0x1f) | uVar14;\n            uVar14 = puVar6[1] >> (cVar1 * '\\x04' & 0x1fU);\n            *puVar6 = uVar10;\n            *puVar7 = uVar14;\n            puVar6 = puVar7;\n        } while (puVar7 < puVar5);\n        if (arg3 < puVar15) goto code_r0x00416a10;\ncode_r0x00416b14:\n        if (uVar3 != 0) {\n            uVar3 = 0xffffffffU >> (0x20U - uVar3 & 0x1f) & puVar17[-1];\n            puVar17[-1] = uVar3;\n            goto joined_r0x00416a3a;\n        }\n    }\n    else {\n        if (puVar15 <= arg3) goto code_r0x00416b14;\ncode_r0x00416a10:\n        do {\n            puVar6 = puVar15 + 1;\n            *puVar4 = *puVar15;\n            puVar5 = puVar4 + 1;\n            puVar4 = puVar4 + 1;\n            puVar15 = puVar6;\n        } while (puVar6 <= puVar13);\n        do {\n            puVar15 = puVar5 + 1;\n            *puVar5 = 0;\n            puVar5 = puVar15;\n        } while (puVar15 <= puVar13);\n    }\n    uVar3 = puVar17[-1];\njoined_r0x00416a3a:\n    while( true ) {\n        if (uVar3 != 0) {\n            return 5;\n        }\n        if (arg3 == puVar13) break;\n        puVar13 = puVar13 + -1;\n        uVar3 = *puVar13;\n    }\n    *puVar13 = 1;\n    return 5;\n}\n",
        "token_count": 1839
    },
    "00417080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00417080(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    \n    if (*0x49f408 == NULL) {\n        *0x49f408 = fcn.0041d1b0(\"idListCnt_shmem\", 8, 0);\n    }\n    if (**0x49f408 != 0) {\n        if (*0x49f408 == NULL) {\n            *0x49f408 = fcn.0041d1b0(\"idListCnt_shmem\", 8, 0);\n        }\n        if (**0x49f408 == 1) {\n            if (*0x49f410 == NULL) {\n                *0x49f410 = fcn.0041d1b0(\"idList_shmem\", 8, 0);\n            }\n            if (*(**0x49f410 + 8) == arg1) {\n                if (*0x49f410 == NULL) {\n                    *0x49f410 = fcn.0041d1b0(\"idList_shmem\", 8, 0);\n                }\n                return ***0x49f410;\n            }\n        }\n        else {\n            if (*0x49f408 == NULL) {\n                *0x49f408 = fcn.0041d1b0(\"idListCnt_shmem\", 8, 0);\n            }\n            uVar2 = 0;\n            uVar3 = **0x49f408 - 1;\n            do {\n                uVar1 = uVar2 + uVar3 >> 1;\n                if (*0x49f410 == NULL) {\n                    *0x49f410 = fcn.0041d1b0(\"idList_shmem\", 8, 0);\n                    if (*(**0x49f410 + 8 + uVar1 * 0x10) == arg1) goto code_r0x00417230;\n                    if (*0x49f410 == NULL) {\n                        *0x49f410 = fcn.0041d1b0(\"idList_shmem\", 8, 0);\n                    }\n                }\n                else if (*(**0x49f410 + 8 + uVar1 * 0x10) == arg1) {\ncode_r0x00417230:\n                    if (*0x49f410 == NULL) {\n                        *0x49f410 = fcn.0041d1b0(\"idList_shmem\", 8, 0);\n                    }\n                    return *(**0x49f410 + uVar1 * 0x10);\n                }\n                if (arg1 < *(**0x49f410 + 8 + uVar1 * 0x10)) {\n                    if (uVar1 == uVar2) {\n                        return 0;\n                    }\n                    uVar3 = uVar1 - 1;\n                }\n                else {\n                    uVar2 = uVar1 + 1;\n                }\n            } while (uVar2 <= uVar3);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 680
    },
    "004175e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.004175e0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t *puVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    \n    if (arg1 == 0) {\n        return 0;\n    }\n    if (*0x49f408 == NULL) {\n        *0x49f408 = fcn.0041d1b0(\"idListCnt_shmem\", 8, 0);\n    }\n    uVar6 = **0x49f408;\n    if (*0x49f400 == NULL) {\n        *0x49f400 = fcn.0041d1b0(\"idListMax_shmem\", 8, 0);\n    }\n    puVar4 = *0x49f3f8;\n    if (**0x49f400 <= uVar6) {\n        if (*0x49f408 == NULL) {\n            *0x49f408 = fcn.0041d1b0(\"idListCnt_shmem\", 8, 0);\n        }\n        if (**0x49f408 == 0) {\n            iVar3 = sub.msvcrt.dll_malloc(0x100);\n            if (iVar3 == 0) {\n                return 0;\n            }\n            if (*0x49f400 == NULL) {\n                *0x49f400 = fcn.0041d1b0(\"idListMax_shmem\", 8, 0);\n            }\n            **0x49f400 = 0x10;\n            if (*0x49f410 == NULL) {\n                *0x49f410 = fcn.0041d1b0(\"idList_shmem\", 8, 0);\n            }\n            **0x49f410 = iVar3;\n            puVar4 = *0x49f3f8;\n        }\n        else {\n            if (*0x49f400 == NULL) {\n                *0x49f400 = fcn.0041d1b0(\"idListMax_shmem\", 8, 0);\n            }\n            uVar6 = **0x49f400;\n            if (*0x49f410 == NULL) {\n                *0x49f410 = fcn.0041d1b0(\"idList_shmem\", 8, 0);\n            }\n            iVar3 = sub.msvcrt.dll_realloc(**0x49f410, (uVar6 + 0x10) * 0x10);\n            if (iVar3 == 0) {\n                return 0;\n            }\n            if (*0x49f400 == NULL) {\n                *0x49f400 = fcn.0041d1b0(\"idListMax_shmem\", 8, 0);\n            }\n            piVar5 = *0x49f410;\n            **0x49f400 = **0x49f400 + 0x10;\n            if (piVar5 == NULL) {\n                piVar5 = fcn.0041d1b0(\"idList_shmem\", 8, 0);\n                *0x49f410 = piVar5;\n            }\n            *piVar5 = iVar3;\n            puVar4 = *0x49f3f8;\n        }\n    }\n    do {\n        do {\n            if (puVar4 == NULL) {\n                puVar4 = fcn.0041d1b0(\"idListNextId_shmem\", 8, 0);\n                *0x49f3f8 = puVar4;\n                *puVar4 = *puVar4 + 1;\n                if (puVar4 != NULL) goto code_r0x004176cd;\n                puVar4 = fcn.0041d1b0(\"idListNextId_shmem\", 8, 0);\n                *0x49f3f8 = puVar4;\n                if ((*puVar4 & 0x4000000000000000) != 0) {\n                    if (puVar4 == NULL) {\n                        puVar4 = fcn.0041d1b0(\"idListNextId_shmem\", 8, 0);\n                        *0x49f3f8 = puVar4;\n                    }\n                    goto code_r0x00417810;\n                }\n            }\n            else {\n                *puVar4 = *puVar4 + 1;\ncode_r0x004176cd:\n                if ((*puVar4 & 0x4000000000000000) != 0) {\ncode_r0x00417810:\n                    *puVar4 = 1;\n                }\n            }\n            if (puVar4 == NULL) {\n                puVar4 = fcn.0041d1b0(\"idListNextId_shmem\", 8, 0);\n                *0x49f3f8 = puVar4;\n            }\n        } while (*puVar4 == 0);\n        if (puVar4 == NULL) {\n            puVar4 = fcn.0041d1b0(\"idListNextId_shmem\", 8, 0);\n            *0x49f3f8 = puVar4;\n        }\n        iVar3 = fcn.00417080(*puVar4);\n        puVar4 = *0x49f3f8;\n    } while (iVar3 != 0);\n    if (*0x49f408 == NULL) {\n        *0x49f408 = fcn.0041d1b0(\"idListCnt_shmem\", 8, 0);\n    }\n    uVar6 = **0x49f408;\n    iVar3 = 0;\n    if (uVar6 != 0) {\n        iVar3 = uVar6 << 4;\n        do {\n            if (*0x49f410 == NULL) {\n                *0x49f410 = fcn.0041d1b0(\"idList_shmem\", 8, 0);\n            }\n            uVar2 = *(**0x49f410 + -8 + iVar3);\n            if (*0x49f3f8 == NULL) {\n                *0x49f3f8 = fcn.0041d1b0(\"idListNextId_shmem\", 8, 0);\n            }\n            if (uVar2 < **0x49f3f8 || uVar2 == **0x49f3f8) goto code_r0x004178c2;\n            iVar3 = iVar3 + -0x10;\n            uVar6 = uVar6 - 1;\n        } while (uVar6 != 0);\n        iVar3 = 0;\ncode_r0x004178c2:\n        if (*0x49f408 == NULL) {\n            *0x49f408 = fcn.0041d1b0(\"idListCnt_shmem\", 8, 0);\n        }\n        if (**0x49f408 != uVar6) {\n            if (*0x49f408 == NULL) {\n                *0x49f408 = fcn.0041d1b0(\"idListCnt_shmem\", 8, 0);\n            }\n            if (*0x49f410 == NULL) {\n                *0x49f410 = fcn.0041d1b0(\"idList_shmem\", 8, 0);\n            }\n            sub.msvcrt.dll_memmove(**0x49f410 + (uVar6 + 1) * 0x10, **0x49f410 + iVar3);\n        }\n    }\n    if (*0x49f410 == NULL) {\n        *0x49f410 = fcn.0041d1b0(\"idList_shmem\", 8, 0);\n    }\n    iVar1 = **0x49f410;\n    if (*0x49f3f8 == NULL) {\n        *0x49f3f8 = fcn.0041d1b0(\"idListNextId_shmem\", 8, 0);\n    }\n    *(iVar3 + iVar1 + 8) = **0x49f3f8;\n    if (*0x49f410 == NULL) {\n        *0x49f410 = fcn.0041d1b0(\"idList_shmem\", 8, 0);\n    }\n    *(**0x49f410 + iVar3) = arg1;\n    if (*0x49f408 == NULL) {\n        *0x49f408 = fcn.0041d1b0(\"idListCnt_shmem\", 8, 0);\n    }\n    **0x49f408 = **0x49f408 + 1;\n    if (*0x49f3f8 == NULL) {\n        *0x49f3f8 = fcn.0041d1b0(\"idListNextId_shmem\", 8, 0);\n    }\n    return **0x49f3f8;\n}\n",
        "token_count": 1965
    },
    "00417e00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00417e00(ulong *arg1)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    bool bVar3;\n    int32_t **ppiVar4;\n    uint16_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint64_t *puVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    ulong uVar11;\n    uint64_t uVar12;\n    char *arg1_00;\n    uint64_t uVar13;\n    uint64_t uVar14;\n    uint64_t uVar15;\n    ulong *puVar16;\n    ulong *puVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    bool bVar20;\n    ulong auStack184 [5];\n    ulong uStack144;\n    ulong uStack136;\n    uint64_t auStack128 [4];\n    \n    if (*0x49f418 == NULL) {\n        *0x49f418 = fcn.0041d1b0(\"mtx_pthr_locked_shmem\", 8, 0x417050);\n    }\n    fcn.0041bdb0(*0x49f418);\n    uVar13 = arg1[0x3b];\n    if (uVar13 != 0) {\n        if (*0x49f408 == NULL) {\n            *0x49f408 = fcn.0041d1b0(\"idListCnt_shmem\", 8, 0);\n        }\n        if (**0x49f408 != 0) {\n            if (*0x49f408 == NULL) {\n                *0x49f408 = fcn.0041d1b0(\"idListCnt_shmem\", 8, 0);\n            }\n            uVar15 = 0;\n            uVar12 = **0x49f408 - 1;\n            do {\n                uVar14 = uVar15 + uVar12 >> 1;\n                if (*0x49f410 == NULL) {\n                    *0x49f410 = fcn.0041d1b0(\"idList_shmem\", 8, 0);\n                    if (uVar13 == *(**0x49f410 + 8 + uVar14 * 0x10)) goto code_r0x0041800b;\n                    if (*0x49f410 == NULL) {\n                        *0x49f410 = fcn.0041d1b0(\"idList_shmem\", 8, 0);\n                    }\n                }\n                else if (uVar13 == *(**0x49f410 + 8 + uVar14 * 0x10)) {\ncode_r0x0041800b:\n                    if (*0x49f410 == NULL) {\n                        *0x49f410 = fcn.0041d1b0(\"idList_shmem\", 8, 0);\n                    }\n                    uVar14 = uVar14 + 1;\n                    if (*0x49f408 == NULL) {\n                        *0x49f408 = fcn.0041d1b0(\"idListCnt_shmem\", 8, 0);\n                        if (uVar14 < **0x49f408) {\n                            if (*0x49f408 == NULL) {\n                                *0x49f408 = fcn.0041d1b0(\"idListCnt_shmem\", 8, 0);\n                            }\n                            goto code_r0x004181c4;\n                        }\n                    }\n                    else if (uVar14 < **0x49f408) {\ncode_r0x004181c4:\n                        if (*0x49f410 == NULL) {\n                            *0x49f410 = fcn.0041d1b0(\"idList_shmem\", 8, 0);\n                        }\n                        sub.msvcrt.dll_memmove(**0x49f410 + -0x10 + uVar14 * 0x10, **0x49f410 + uVar14 * 0x10);\n                    }\n                    puVar8 = *0x49f408;\n                    if (*0x49f408 == NULL) {\n                        puVar8 = fcn.0041d1b0(\"idListCnt_shmem\", 8, 0);\n                        *0x49f408 = puVar8;\n                        *puVar8 = *puVar8 - 1;\n                        if (puVar8 == NULL) {\n                            puVar8 = fcn.0041d1b0(\"idListCnt_shmem\", 8, 0);\n                            *0x49f408 = puVar8;\n                        }\n                    }\n                    else {\n                        **0x49f408 = **0x49f408 - 1;\n                    }\n                    if (*puVar8 == 0) {\n                        if (*0x49f410 == NULL) {\n                            *0x49f410 = fcn.0041d1b0(\"idList_shmem\", 8, 0);\n                        }\n                        fcn.00416d90(**0x49f410);\n                        if (*0x49f408 == NULL) {\n                            *0x49f408 = fcn.0041d1b0(\"idListCnt_shmem\", 8, 0);\n                        }\n                        puVar8 = *0x49f408;\n                        if (*0x49f400 == NULL) {\n                            *0x49f400 = fcn.0041d1b0(\"idListMax_shmem\", 8, 0);\n                        }\n                        **0x49f400 = 0;\n                        *puVar8 = 0;\n                    }\n                    break;\n                }\n                if (uVar13 < *(**0x49f410 + 8 + uVar14 * 0x10)) {\n                    if (uVar15 == uVar14) break;\n                    uVar12 = uVar14 - 1;\n                }\n                else {\n                    uVar15 = uVar14 + 1;\n                }\n            } while (uVar15 <= uVar12);\n        }\n    }\n    if (arg1[10] != 0) {\n        fcn.00416d90();\n    }\n    if (arg1[0xb] != 0) {\n        fcn.00416d90();\n    }\n    uVar13 = 0x1e0;\n    bVar3 = false;\n    iVar6 = 0x1e0;\n    bVar20 = false;\n    if ((arg1 & 1) == 0) {\n        puVar16 = arg1;\n        if ((arg1 & 2) != 0) goto code_r0x004180b0;\ncode_r0x00417e6c:\n        uVar19 = uVar13;\n    }\n    else {\n        puVar16 = arg1 + 1;\n        *arg1 = 0;\n        uVar13 = 0x1df;\n        bVar3 = true;\n        iVar6 = 0x1df;\n        bVar20 = true;\n        if ((puVar16 & 2) == 0) goto code_r0x00417e6c;\ncode_r0x004180b0:\n        uVar19 = iVar6 - 2;\n        uVar13 = uVar19;\n        *puVar16 = 0;\n        puVar16 = puVar16 + 2;\n        bVar3 = bVar20;\n    }\n    if ((puVar16 & 4) != 0) {\n        *puVar16 = 0;\n        uVar13 = uVar19 - 4;\n        puVar16 = puVar16 + 4;\n    }\n    for (uVar12 = uVar13 >> 3; uVar12 != 0; uVar12 = uVar12 - 1) {\n        *puVar16 = 0;\n        puVar16 = puVar16 + 1;\n    }\n    if ((uVar13 & 4) != 0) {\n        *puVar16 = 0;\n        puVar16 = puVar16 + 4;\n    }\n    puVar17 = puVar16;\n    if ((uVar13 & 2) != 0) {\n        puVar17 = puVar16 + 2;\n        *puVar16 = 0;\n    }\n    if (bVar3) {\n        *puVar17 = 0;\n    }\n    if (*0x49f420 == NULL) {\n        *0x49f420 = fcn.0041d1b0(\"pthr_last_shmem\", 8, 0);\n    }\n    if (**0x49f420 == 0) {\n        if (*0x49f428 == NULL) {\n            *0x49f428 = fcn.0041d1b0(\"pthr_root_shmem\", 8, 0);\n        }\n        puVar16 = *0x49f428;\n        if (*0x49f420 == NULL) {\n            *0x49f420 = fcn.0041d1b0(\"pthr_last_shmem\", 8, 0);\n        }\n        **0x49f420 = arg1;\n        *puVar16 = arg1;\n    }\n    else {\n        if (*0x49f420 == NULL) {\n            *0x49f420 = fcn.0041d1b0(\"pthr_last_shmem\", 8, 0);\n        }\n        *(**0x49f420 + 0x1d0) = arg1;\n    }\n    if (*0x49f418 == NULL) {\n        *0x49f418 = fcn.0041d1b0(\"mtx_pthr_locked_shmem\", 8, 0x417050);\n    }\n    ppiVar4 = *0x49f418;\n    uVar13 = fcn.0041b230(*0x49f418);\n    if (uVar13 != 0) {\n        return uVar13;\n    }\n    uStack136 = *ppiVar4;\n    if (uStack136[2] == 0) {\n        uVar19 = 1;\n        if (uStack136[5] == 0) goto code_r0x0041b560;\n        goto code_r0x0041b7d0;\n    }\n    iVar6 = uStack136[5];\n    if (iVar6 != 0) {\n        iVar7 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        if (iVar6 == iVar7) {\n            if (uStack136[2] == 2) {\n                LOCK();\n                piVar1 = uStack136 + 3;\n                iVar6 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n                if (iVar6 == 1) goto code_r0x0041b7d0;\ncode_r0x0041b7f2:\n                uVar19 = 0;\n            }\n            else {\ncode_r0x0041b7d0:\n                uStack136[5] = 0;\n                if (*(uStack136 + 6) == 0) goto code_r0x0041b7f2;\n                iVar6 = (*_sym.imp.KERNEL32.dll_ReleaseSemaphore)(*(uStack136 + 6), 1, 0);\n                if (iVar6 != 0) goto code_r0x0041b7f2;\n                iVar6 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n                uVar19 = 1;\n                uStack136[5] = iVar6;\n            }\n            uStack136 = *ppiVar4;\n            goto code_r0x0041b560;\n        }\n        uStack136 = *ppiVar4;\n    }\n    uVar19 = 1;\ncode_r0x0041b560:\n    auStack128[0] = uVar19;\n    if (*0x49f498 == 0) {\n        *0x49f498 = fcn.0041d1b0(\"mutex_global_shmem\", 0x10, 0x41b1d0);\n    }\n    fcn.0041d560(*0x49f498);\n    iVar9 = *0x49f498;\n    if ((*uStack136 == -0x454e0ff3) && (0 < uStack136[1])) {\n        bVar20 = *0x49f498 == 0;\n        uStack136[1] = uStack136[1] + -1;\n        if (bVar20) {\n            *0x49f498 = fcn.0041d1b0(\"mutex_global_shmem\", 0x10, 0x41b1d0);\n            fcn.0041d4c0(*0x49f498);\n            return auStack128[0];\n        }\n        fcn.0041d4c0(iVar9);\n        return auStack128[0];\n    }\n    iVar9 = (*_sym.imp.msvcrt.dll___iob_func)();\n    sub.msvcrt.dll_fprintf(iVar9 + 0x60, 0x483d68, \"(m_->valid == LIFE_MUTEX) && (m_->busy > 0)\");\n    sub.msvcrt.dll_exit(1);\n    arg1_00 = \"mutex_global_shmem\";\n    auStack184[0] = 0x41d1d6;\n    iVar6 = sub.msvcrt.dll_strlen();\n    auStack184[0] = 0x41d1ee;\n    iVar10 = fcn.0040ce40(arg1_00);\n    iVar10 = -iVar10;\n    iVar9 = &uStack144 + iVar10;\n    *(&uStack144 + iVar10) = 0x656d68732d636367;\n    *(&uStack136 + iVar10) = 0x64742d6d;\n    *(&uStack136 + iVar10 + 4) = 0x326d;\n    uVar19 = iVar6 + 0x50;\n    *(&uStack136 + iVar10 + 6) = 0x2d;\n    *(auStack184 + iVar10) = 0x41d236;\n    sub.msvcrt.dll_memcpy(&uStack136 + iVar10 + 7, \"mutex_global_shmem\", iVar6);\n    puVar16 = auStack128 + iVar6 + iVar10;\n    *puVar16 = 0x6161616161616161;\n    puVar16[1] = 0x6161616161616161;\n    puVar16[2] = 0x6161616161616161;\n    puVar16[3] = 0x6161616161616161;\n    puVar16[4] = 0x6161616161616161;\n    puVar16[5] = 0x6161616161616161;\n    puVar16[6] = 0x6161616161616161;\n    puVar16[7] = 0x6161616161616161;\n    *(&uStack144 + uVar19 + iVar10) = 0;\n    *(&uStack144 + (iVar6 + 0xf) + iVar10) = 0;\n    *(auStack184 + iVar10) = 0x41d27e;\n    uVar11 = (*_sym.imp.KERNEL32.dll_CreateMutexA)(0, 0);\n    *(&uStack144 + (iVar6 + 0xf) + iVar10) = 0x2d;\n    *(auStack184 + iVar10) = 0x41d294;\n    iVar7 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(uVar11, 0xffffffff);\n    if (iVar7 != 0) {\n        pcVar2 = swi(3);\n        uVar13 = (*pcVar2)();\n        return uVar13;\n    }\n    *(auStack184 + iVar10) = 0x41d2a2;\n    uVar5 = (*_sym.imp.KERNEL32.dll_FindAtomA)();\n    if (uVar5 == 0) {\n        *(auStack184 + iVar10) = 0x41d2b7;\n        uVar12 = sub.msvcrt.dll_malloc(0x10);\n        uVar13 = 0x40;\n        do {\n            if ((uVar12 >> (uVar13 & 0x3f) & 1) != 0) {\n                *(iVar9 + (uVar19 - uVar13)) = 0x41;\n            }\n            uVar18 = uVar13 - 1;\n            uVar13 = uVar18;\n        } while (uVar18 != 0);\n        *(auStack184 + iVar10) = 0x41d2e3;\n        uVar5 = (*_sym.imp.KERNEL32.dll_AddAtomA)();\n        if (uVar5 == 0) {\n            pcVar2 = swi(3);\n            uVar13 = (*pcVar2)();\n            return uVar13;\n        }\n        *(auStack184 + iVar10) = 0x41d2f9;\n        uVar13 = fcn.0041d130(uVar5, iVar9, uVar19, iVar6 + 0x10);\n        if (uVar13 == uVar12) {\n            *(auStack184 + iVar10) = 0x41d356;\n            sub.msvcrt.dll_memset(uVar12, 0, 0x10);\n            *(auStack184 + iVar10) = 0x41d361;\n            (*0x41b1d0)(uVar12);\n        }\n        else {\n            *(auStack184 + iVar10) = 0x41d309;\n            fcn.00416d90(uVar12);\n        }\n    }\n    else {\n        *(auStack184 + iVar10) = 0x41d344;\n        uVar13 = fcn.0041d130(uVar5, iVar9, uVar19, iVar6 + 0x10);\n    }\n    *(auStack184 + iVar10) = 0x41d312;\n    (*_sym.imp.KERNEL32.dll_ReleaseMutex)(uVar11);\n    *(auStack184 + iVar10) = 0x41d31b;\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar11);\n    return uVar13;\n}\n",
        "token_count": 4009
    },
    "0041b7a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint64_t fcn.0041b7a0(int32_t **arg1)\n\n{\n    int32_t *piVar1;\n    uchar *arg2;\n    ulong *puVar2;\n    code *pcVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    ulong uVar9;\n    uint64_t uVar10;\n    char *arg1_00;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    bool bVar13;\n    ulong auStack184 [5];\n    ulong uStack144;\n    ulong uStack136;\n    uint64_t auStack128 [2];\n    \n    uVar8 = fcn.0041b230(arg1);\n    if (uVar8 != 0) {\n        return uVar8;\n    }\n    uStack136 = *arg1;\n    if (uStack136[2] == 0) {\n        uVar12 = 1;\n        if (uStack136[5] == 0) goto code_r0x0041b560;\n        goto code_r0x0041b7d0;\n    }\n    iVar5 = uStack136[5];\n    if (iVar5 != 0) {\n        iVar6 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        if (iVar5 == iVar6) {\n            if (uStack136[2] == 2) {\n                LOCK();\n                piVar1 = uStack136 + 3;\n                iVar5 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n                if (iVar5 == 1) goto code_r0x0041b7d0;\ncode_r0x0041b7f2:\n                uVar12 = 0;\n            }\n            else {\ncode_r0x0041b7d0:\n                uStack136[5] = 0;\n                if (*(uStack136 + 6) == 0) goto code_r0x0041b7f2;\n                iVar5 = (*_sym.imp.KERNEL32.dll_ReleaseSemaphore)(*(uStack136 + 6), 1, 0);\n                if (iVar5 != 0) goto code_r0x0041b7f2;\n                iVar5 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n                uVar12 = 1;\n                uStack136[5] = iVar5;\n            }\n            uStack136 = *arg1;\n            goto code_r0x0041b560;\n        }\n        uStack136 = *arg1;\n    }\n    uVar12 = 1;\ncode_r0x0041b560:\n    auStack128[0] = uVar12;\n    if (*0x49f498 == 0) {\n        *0x49f498 = fcn.0041d1b0(\"mutex_global_shmem\", 0x10, 0x41b1d0);\n    }\n    fcn.0041d560(*0x49f498);\n    iVar7 = *0x49f498;\n    if ((*uStack136 == -0x454e0ff3) && (0 < uStack136[1])) {\n        bVar13 = *0x49f498 != 0;\n        uStack136[1] = uStack136[1] + -1;\n        if (bVar13) {\n            fcn.0041d4c0(iVar7);\n            return auStack128[0];\n        }\n        *0x49f498 = fcn.0041d1b0(\"mutex_global_shmem\", 0x10, 0x41b1d0);\n        fcn.0041d4c0(*0x49f498);\n        return auStack128[0];\n    }\n    iVar7 = (*_sym.imp.msvcrt.dll___iob_func)();\n    sub.msvcrt.dll_fprintf(iVar7 + 0x60, 0x483d68, \"(m_->valid == LIFE_MUTEX) && (m_->busy > 0)\");\n    sub.msvcrt.dll_exit(1);\n    arg1_00 = \"mutex_global_shmem\";\n    auStack184[0] = 0x41d1d6;\n    iVar5 = sub.msvcrt.dll_strlen();\n    auStack184[0] = 0x41d1ee;\n    iVar7 = fcn.0040ce40(arg1_00);\n    iVar7 = -iVar7;\n    arg2 = &stack0xffffffffffffff70 + iVar7;\n    *(&stack0xffffffffffffff70 + iVar7) = 0x656d68732d636367;\n    *(&stack0xffffffffffffff78 + iVar7) = 0x64742d6d;\n    *(&stack0xffffffffffffff7c + iVar7) = 0x326d;\n    uVar12 = iVar5 + 0x50;\n    (&stack0xffffffffffffff7e)[iVar7] = 0x2d;\n    *(&stack0xffffffffffffff48 + iVar7) = 0x41d236;\n    sub.msvcrt.dll_memcpy(&stack0xffffffffffffff7f + iVar7, \"mutex_global_shmem\", iVar5);\n    puVar2 = &stack0xffffffffffffff80 + iVar5 + iVar7;\n    *puVar2 = 0x6161616161616161;\n    puVar2[1] = 0x6161616161616161;\n    puVar2[2] = 0x6161616161616161;\n    puVar2[3] = 0x6161616161616161;\n    puVar2[4] = 0x6161616161616161;\n    puVar2[5] = 0x6161616161616161;\n    puVar2[6] = 0x6161616161616161;\n    puVar2[7] = 0x6161616161616161;\n    (&stack0xffffffffffffff70)[uVar12 + iVar7] = 0;\n    (&stack0xffffffffffffff70)[(iVar5 + 0xf) + iVar7] = 0;\n    *(&stack0xffffffffffffff48 + iVar7) = 0x41d27e;\n    uVar9 = (*_sym.imp.KERNEL32.dll_CreateMutexA)(0, 0);\n    (&stack0xffffffffffffff70)[(iVar5 + 0xf) + iVar7] = 0x2d;\n    *(&stack0xffffffffffffff48 + iVar7) = 0x41d294;\n    iVar6 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(uVar9, 0xffffffff);\n    if (iVar6 != 0) {\n        pcVar3 = swi(3);\n        uVar8 = (*pcVar3)();\n        return uVar8;\n    }\n    *(&stack0xffffffffffffff48 + iVar7) = 0x41d2a2;\n    uVar4 = (*_sym.imp.KERNEL32.dll_FindAtomA)();\n    if (uVar4 == 0) {\n        *(&stack0xffffffffffffff48 + iVar7) = 0x41d2b7;\n        uVar10 = sub.msvcrt.dll_malloc(0x10);\n        uVar8 = 0x40;\n        do {\n            if ((uVar10 >> (uVar8 & 0x3f) & 1) != 0) {\n                arg2[uVar12 - uVar8] = 0x41;\n            }\n            uVar11 = uVar8 - 1;\n            uVar8 = uVar11;\n        } while (uVar11 != 0);\n        *(&stack0xffffffffffffff48 + iVar7) = 0x41d2e3;\n        uVar4 = (*_sym.imp.KERNEL32.dll_AddAtomA)();\n        if (uVar4 == 0) {\n            pcVar3 = swi(3);\n            uVar8 = (*pcVar3)();\n            return uVar8;\n        }\n        *(&stack0xffffffffffffff48 + iVar7) = 0x41d2f9;\n        uVar8 = fcn.0041d130(uVar4, arg2, uVar12, iVar5 + 0x10);\n        if (uVar8 == uVar10) {\n            *(&stack0xffffffffffffff48 + iVar7) = 0x41d356;\n            sub.msvcrt.dll_memset(uVar10, 0, 0x10);\n            *(&stack0xffffffffffffff48 + iVar7) = 0x41d361;\n            (*0x41b1d0)(uVar10);\n        }\n        else {\n            *(&stack0xffffffffffffff48 + iVar7) = 0x41d309;\n            fcn.00416d90(uVar10);\n        }\n    }\n    else {\n        *(&stack0xffffffffffffff48 + iVar7) = 0x41d344;\n        uVar8 = fcn.0041d130(uVar4, arg2, uVar12, iVar5 + 0x10);\n    }\n    *(&stack0xffffffffffffff48 + iVar7) = 0x41d312;\n    (*_sym.imp.KERNEL32.dll_ReleaseMutex)(uVar9);\n    *(&stack0xffffffffffffff48 + iVar7) = 0x41d31b;\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar9);\n    return uVar8;\n}\n",
        "token_count": 2076
    },
    "00418370": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00418370(int32_t *arg1)\n\n{\n    int32_t iVar1;\n    int64_t arg1_00;\n    int64_t iVar2;\n    \n    arg1_00 = fcn.004172b0(arg1);\n    fcn.0041bdb0(arg1_00 + 8);\n    iVar1 = *arg1;\n    if (iVar1 == 0) {\n        fcn.00417d80();\n        *arg1 = 1;\n    }\n    else if (iVar1 != 1) {\n        iVar2 = (*_sym.imp.msvcrt.dll___iob_func)();\n        sub.msvcrt.dll_fprintf(iVar2 + 0x60, \" once %p is %d\\n\", arg1, iVar1);\n    }\n    fcn.0041b7a0(arg1_00 + 8);\n    fcn.00417430(arg1_00);\n    return 0;\n}\n",
        "token_count": 207
    },
    "004183e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041d35b)\n\nuint64_t fcn.004183e0(void)\n\n{\n    uchar *arg2;\n    ulong *puVar1;\n    code *pcVar2;\n    uint16_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint64_t uVar7;\n    ulong uVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    char *arg1;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    ulong auStack216 [5];\n    ulong uStack176;\n    ulong uStack168;\n    uint64_t auStack160 [2];\n    \n    if (*0x49f450 == NULL) {\n        *0x49f450 = fcn.0041d1b0(\"_pthread_tls_once_shmem\", 4, 0);\n    }\n    if (**0x49f450 != 1) {\n        fcn.00418370(*0x49f450);\n    }\n    if (*0x49f448 == NULL) {\n        *0x49f448 = fcn.0041d1b0(\"_pthread_tls_shmem\", 4, 0x417030);\n    }\n    uVar7 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(**0x49f448);\n    if (((uVar7 != 0) || (auStack160[0] = fcn.00417be0(),  *0x4a2050 == 0)) || (auStack160[0] == 0)) {\n        return uVar7;\n    }\n    *(auStack160[0] + 0x44) = 1;\n    uVar4 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    *(auStack160[0] + 0x70) = uVar4;\n    uVar8 = (*_sym.imp.KERNEL32.dll_CreateEventA)(0, 1, 0, 0);\n    *(auStack160[0] + 0x30) = uVar8;\n    uStack168 = _sym.imp.KERNEL32.dll_GetCurrentProcess;\n    *(auStack160[0] + 0x38) = 0xffffffffffffffff;\n    *(auStack160[0] + 0x60) = 0;\n    *(auStack160[0] + 0x68) = 0x1feedbab1;\n    *(auStack160[0] + 0xb8) = 0;\n    *(auStack160[0] + 0x28) = 0;\n    (*uStack168)();\n    auStack160[1] = (*_sym.imp.KERNEL32.dll_GetCurrentThread)();\n    uVar8 = (*uStack168)();\n    iVar5 = (*_sym.imp.KERNEL32.dll_DuplicateHandle)(uVar8, auStack160[1]);\n    if (iVar5 != 0) {\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetThreadPriority)(*(auStack160[0] + 0x28));\n        *(auStack160[0] + 0xc0) = uVar4;\n        *(auStack160[0] + 0xbc) = 0;\n        *(auStack160[0] + 0x40) = *(auStack160[0] + 0x40) & 0xcf | 0x10;\n        if (*0x49f448 == NULL) {\n            *0x49f448 = fcn.0041d1b0(\"_pthread_tls_shmem\", 4, 0x417030);\n        }\n        iVar5 = (*_sym.imp.KERNEL32.dll_TlsSetValue)(**0x49f448, auStack160[0]);\n        if (iVar5 != 0) {\n            return auStack160[0];\n        }\n    }\n    sub.msvcrt.dll_abort();\n    arg1 = \"_pthread_key_dest_shmem\";\n    auStack216[0] = 0x41d1d6;\n    iVar5 = sub.msvcrt.dll_strlen();\n    auStack216[0] = 0x41d1ee;\n    iVar9 = fcn.0040ce40(arg1);\n    iVar9 = -iVar9;\n    arg2 = &stack0xffffffffffffff50 + iVar9;\n    *(&stack0xffffffffffffff50 + iVar9) = 0x656d68732d636367;\n    *(&stack0xffffffffffffff58 + iVar9) = 0x64742d6d;\n    *(&stack0xffffffffffffff5c + iVar9) = 0x326d;\n    uVar12 = iVar5 + 0x50;\n    (&stack0xffffffffffffff5e)[iVar9] = 0x2d;\n    *(&stack0xffffffffffffff28 + iVar9) = 0x41d236;\n    sub.msvcrt.dll_memcpy(&stack0xffffffffffffff5f + iVar9, \"_pthread_key_dest_shmem\", iVar5);\n    puVar1 = &stack0xffffffffffffff60 + iVar5 + iVar9;\n    *puVar1 = 0x6161616161616161;\n    puVar1[1] = 0x6161616161616161;\n    puVar1[2] = 0x6161616161616161;\n    puVar1[3] = 0x6161616161616161;\n    puVar1[4] = 0x6161616161616161;\n    puVar1[5] = 0x6161616161616161;\n    puVar1[6] = 0x6161616161616161;\n    puVar1[7] = 0x6161616161616161;\n    (&stack0xffffffffffffff50)[uVar12 + iVar9] = 0;\n    (&stack0xffffffffffffff50)[(iVar5 + 0xf) + iVar9] = 0;\n    *(&stack0xffffffffffffff28 + iVar9) = 0x41d27e;\n    uVar8 = (*_sym.imp.KERNEL32.dll_CreateMutexA)(0, 0);\n    (&stack0xffffffffffffff50)[(iVar5 + 0xf) + iVar9] = 0x2d;\n    *(&stack0xffffffffffffff28 + iVar9) = 0x41d294;\n    iVar6 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(uVar8, 0xffffffff);\n    if (iVar6 != 0) {\n        pcVar2 = swi(3);\n        uVar7 = (*pcVar2)();\n        return uVar7;\n    }\n    *(&stack0xffffffffffffff28 + iVar9) = 0x41d2a2;\n    uVar3 = (*_sym.imp.KERNEL32.dll_FindAtomA)();\n    if (uVar3 == 0) {\n        *(&stack0xffffffffffffff28 + iVar9) = 0x41d2b7;\n        uVar10 = sub.msvcrt.dll_malloc(8);\n        uVar7 = 0x40;\n        do {\n            if ((uVar10 >> (uVar7 & 0x3f) & 1) != 0) {\n                arg2[uVar12 - uVar7] = 0x41;\n            }\n            uVar11 = uVar7 - 1;\n            uVar7 = uVar11;\n        } while (uVar11 != 0);\n        *(&stack0xffffffffffffff28 + iVar9) = 0x41d2e3;\n        uVar3 = (*_sym.imp.KERNEL32.dll_AddAtomA)();\n        if (uVar3 == 0) {\n            pcVar2 = swi(3);\n            uVar7 = (*pcVar2)();\n            return uVar7;\n        }\n        *(&stack0xffffffffffffff28 + iVar9) = 0x41d2f9;\n        uVar7 = fcn.0041d130(uVar3, arg2, uVar12, iVar5 + 0x10);\n        if (uVar7 == uVar10) {\n            *(&stack0xffffffffffffff28 + iVar9) = 0x41d356;\n            sub.msvcrt.dll_memset(uVar10, 0, 8);\n        }\n        else {\n            *(&stack0xffffffffffffff28 + iVar9) = 0x41d309;\n            fcn.00416d90(uVar10);\n        }\n    }\n    else {\n        *(&stack0xffffffffffffff28 + iVar9) = 0x41d344;\n        uVar7 = fcn.0041d130(uVar3, arg2, uVar12, iVar5 + 0x10);\n    }\n    *(&stack0xffffffffffffff28 + iVar9) = 0x41d312;\n    (*_sym.imp.KERNEL32.dll_ReleaseMutex)(uVar8);\n    *(&stack0xffffffffffffff28 + iVar9) = 0x41d31b;\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar8);\n    return uVar7;\n}\n",
        "token_count": 1988
    },
    "00418830": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00418830(ulong arg1)\n\n{\n    uint32_t *arg1_00;\n    int32_t *piVar1;\n    int32_t *piVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    bool bVar5;\n    code *pcVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    uint32_t uVar9;\n    uint64_t uVar10;\n    int32_t iVar11;\n    \n    iVar7 = fcn.00418790(arg1);\n    iVar8 = iVar7;\n    if (iVar7 != 0) {\n        arg1_00 = iVar7 + 0x60;\n        iVar11 = 0x100;\n        do {\n            fcn.0041d560(arg1_00);\n            if (*(iVar7 + 0x48) == 0) {\n                iVar8 = 0x16;\n                if (arg1_00 != NULL) {\n                    piVar1 = iVar7 + 0x6c;\n                    LOCK();\n                    piVar2 = iVar7 + 0x6c;\n                    *piVar2 = *piVar2 + -1;\n                    pcVar6 = _sym.imp.KERNEL32.dll_Sleep;\n                    iVar11 = *piVar2;\n                    while (iVar11 != 0) {\n                        LOCK();\n                        *piVar1 = *piVar1 + 1;\n                        (*pcVar6)(0);\n                        LOCK();\n                        *piVar1 = *piVar1 + -1;\n                        iVar11 = *piVar1;\n                    }\n                    if (*(iVar7 + 100) < *arg1_00) {\n                        *(iVar7 + 100) = *(iVar7 + 100) + 1;\n                        if (*(iVar7 + 100) == *arg1_00) goto code_r0x0041d543;\n                    }\n                    else if (*(iVar7 + 100) == *arg1_00) {\ncode_r0x0041d543:\n                        *arg1_00 = 0;\n                        *(iVar7 + 100) = 0;\n                    }\n                    LOCK();\n                    *(iVar7 + 0x6c) = *(iVar7 + 0x6c) + 1;\n                    iVar8 = 0;\n                }\n                return iVar8;\n            }\n            bVar5 = false;\n            uVar10 = 0;\n            do {\n                uVar3 = *(*(iVar7 + 0x50) + uVar10 * 8);\n                if (*(*(iVar7 + 0x58) + uVar10) != '\\0') {\n                    if (*0x49f440 == 0) {\n                        *0x49f440 = fcn.0041d1b0(\"_pthread_key_lock_shmem\", 8, 0x417040);\n                    }\n                    fcn.0041e3a0(*0x49f440);\n                    if (*0x49f468 == NULL) {\n                        *0x49f468 = fcn.0041d1b0(\"_pthread_key_dest_shmem\", 8, 0);\n                    }\n                    uVar4 = *(**0x49f468 + uVar10 * 8);\n                    *(*(iVar7 + 0x50) + uVar10 * 8) = 0;\n                    *(*(iVar7 + 0x58) + uVar10) = 0;\n                    if (1 < uVar4) {\n                        fcn.0041d4c0(arg1_00);\n                        if (*0x49f468 == NULL) {\n                            *0x49f468 = fcn.0041d1b0(\"_pthread_key_dest_shmem\", 8, 0);\n                        }\n                        bVar5 = true;\n                        (**(**0x49f468 + uVar10 * 8))(uVar3);\n                        fcn.0041d560(arg1_00);\n                    }\n                    if (*0x49f440 == 0) {\n                        *0x49f440 = fcn.0041d1b0(\"_pthread_key_lock_shmem\", 8, 0x417040);\n                    }\n                    fcn.0041e650(*0x49f440);\n                }\n                uVar9 = uVar10 + 1;\n                uVar10 = uVar9;\n            } while (uVar9 < *(iVar7 + 0x48));\n            iVar8 = fcn.0041d4c0(arg1_00);\n        } while ((bVar5) && (iVar11 = iVar11 + -1,  iVar11 != 0));\n    }\n    return iVar8;\n}\n",
        "token_count": 1008
    },
    "00419150": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00419150(int32_t *arg1, code *arg2)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    int64_t arg1_00;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int64_t *piVar5;\n    ulong uStack72;\n    int64_t iStack64;\n    int64_t iStack56;\n    \n    uVar2 = 0x16;\n    if ((arg2 != NULL) && (uVar2 = 0,  *arg1 != 1)) {\n        arg1_00 = fcn.004172b0(arg1);\n        fcn.0041bdb0(arg1_00 + 8);\n        iVar1 = *arg1;\n        if (iVar1 == 0) {\n            piVar5 = NULL;\n            uStack72 = 0x4175c0;\n            iStack64 = arg1_00;\n            iVar3 = fcn.004183e0();\n            piVar4 = iVar3 + 0x18;\n            if (iVar3 == 0) {\n                piVar4 = piVar5;\n            }\n            iStack56 = *piVar4;\n            iVar3 = fcn.004183e0();\n            piVar4 = iVar3 + 0x18;\n            if (iVar3 == 0) {\n                piVar4 = piVar5;\n            }\n            *piVar4 = &uStack72;\n            (*arg2)();\n            iVar3 = fcn.004183e0();\n            if (iVar3 != 0) {\n                piVar5 = iVar3 + 0x18;\n            }\n            *piVar5 = iStack56;\n            *arg1 = 1;\n        }\n        else if (iVar1 != 1) {\n            iVar3 = (*_sym.imp.msvcrt.dll___iob_func)();\n            sub.msvcrt.dll_fprintf(iVar3 + 0x60, \" once %p is %d\\n\", arg1, iVar1);\n        }\n        fcn.0041b7a0(arg1_00 + 8);\n        fcn.00417430(arg1_00);\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 491
    },
    "00419250": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00419250(uint32_t *arg1, int64_t arg2)\n\n{\n    uint32_t *puVar1;\n    int64_t iVar2;\n    uint32_t *puVar3;\n    uint64_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    \n    if (arg1 == NULL) {\n        return 0x16;\n    }\n    if (*0x49f440 == 0) {\n        *0x49f440 = fcn.0041d1b0(\"_pthread_key_lock_shmem\", 8, 0x417040);\n    }\n    fcn.0041e6f0(*0x49f440);\n    if (*0x49f430 == NULL) {\n        *0x49f430 = fcn.0041d1b0(\"_pthread_key_sch_shmem\", 4, 0);\n    }\n    uVar5 = **0x49f430;\n    while( true ) {\n        if (*0x49f438 == NULL) {\n            *0x49f438 = fcn.0041d1b0(\"_pthread_key_max_shmem\", 4, 0);\n            uVar6 = **0x49f438;\n        }\n        else {\n            uVar6 = **0x49f438;\n        }\n        if (uVar6 <= uVar5) {\n            uVar5 = 0;\n            goto code_r0x00419323;\n        }\n        if (*0x49f468 == NULL) {\n            *0x49f468 = fcn.0041d1b0(\"_pthread_key_dest_shmem\", 8, 0);\n        }\n        uVar4 = uVar5;\n        if (*(**0x49f468 + uVar4 * 8) == 0) break;\n        uVar5 = uVar5 + 1;\n    }\ncode_r0x00419460:\n    *arg1 = uVar5;\n    if (arg2 == 0) {\n        if (*0x49f468 == NULL) {\n            *0x49f468 = fcn.0041d1b0(\"_pthread_key_dest_shmem\", 8, 0);\n        }\n        *(**0x49f468 + uVar4 * 8) = 1;\n    }\n    else {\n        if (*0x49f468 == NULL) {\n            *0x49f468 = fcn.0041d1b0(\"_pthread_key_dest_shmem\", 8, 0);\n        }\n        *(**0x49f468 + uVar4 * 8) = arg2;\n    }\ncode_r0x0041947e:\n    if (*0x49f440 == 0) {\n        *0x49f440 = fcn.0041d1b0(\"_pthread_key_lock_shmem\", 8, 0x417040);\n    }\n    fcn.0041e650(*0x49f440);\n    return 0;\ncode_r0x00419323:\n    if (*0x49f430 == NULL) {\n        *0x49f430 = fcn.0041d1b0(\"_pthread_key_sch_shmem\", 4, 0);\n        uVar6 = **0x49f430;\n    }\n    else {\n        uVar6 = **0x49f430;\n    }\n    if (uVar6 <= uVar5) {\n        if (*0x49f438 == NULL) {\n            *0x49f438 = fcn.0041d1b0(\"_pthread_key_max_shmem\", 4, 0);\n        }\n        if (**0x49f438 == 0x100000) {\ncode_r0x00419520:\n            if (*0x49f440 == 0) {\n                *0x49f440 = fcn.0041d1b0(\"_pthread_key_lock_shmem\", 8, 0x417040);\n            }\n            fcn.0041e650(*0x49f440);\n            return 0xc;\n        }\n        if (*0x49f438 == NULL) {\n            *0x49f438 = fcn.0041d1b0(\"_pthread_key_max_shmem\", 4, 0);\n        }\n        uVar5 = **0x49f438 * 2;\n        if (uVar5 == 0) {\n            if (*0x49f438 == NULL) {\n                *0x49f438 = fcn.0041d1b0(\"_pthread_key_max_shmem\", 4, 0);\n            }\n            uVar5 = **0x49f438 + 1;\n        }\n        uVar6 = 0x100000;\n        if (uVar5 < 0x100001) {\n            uVar6 = uVar5;\n        }\n        if (*0x49f468 == NULL) {\n            *0x49f468 = fcn.0041d1b0(\"_pthread_key_dest_shmem\", 8, 0);\n        }\n        iVar2 = sub.msvcrt.dll_realloc(**0x49f468);\n        if (iVar2 == 0) goto code_r0x00419520;\n        if (*0x49f438 == NULL) {\n            *0x49f438 = fcn.0041d1b0(\"_pthread_key_max_shmem\", 4, 0);\n        }\n        sub.msvcrt.dll_memset();\n        if (*0x49f468 == NULL) {\n            *0x49f468 = fcn.0041d1b0(\"_pthread_key_dest_shmem\", 8, 0);\n        }\n        **0x49f468 = iVar2;\n        if (*0x49f430 == NULL) {\n            *0x49f430 = fcn.0041d1b0(\"_pthread_key_sch_shmem\", 4, 0);\n        }\n        puVar3 = *0x49f438;\n        puVar1 = *0x49f430;\n        if (*0x49f438 == NULL) {\n            puVar3 = fcn.0041d1b0(\"_pthread_key_max_shmem\", 4, 0);\n            *0x49f438 = puVar3;\n            *puVar1 = *puVar3 + 1;\n            if (puVar3 != NULL) goto code_r0x00419435;\n            puVar3 = fcn.0041d1b0(\"_pthread_key_max_shmem\", 4, 0);\n            *0x49f438 = puVar3;\n            *arg1 = *puVar3;\n            if (puVar3 == NULL) {\n                puVar3 = fcn.0041d1b0(\"_pthread_key_max_shmem\", 4, 0);\n                *0x49f438 = puVar3;\n            }\n        }\n        else {\n            **0x49f430 = **0x49f438 + 1;\ncode_r0x00419435:\n            *arg1 = *puVar3;\n        }\n        *puVar3 = uVar6;\n        if (arg2 == 0) {\n            if (*0x49f468 == NULL) {\n                *0x49f468 = fcn.0041d1b0(\"_pthread_key_dest_shmem\", 8, 0);\n            }\n            *(**0x49f468 + *arg1 * 8) = 1;\n        }\n        else {\n            if (*0x49f468 == NULL) {\n                *0x49f468 = fcn.0041d1b0(\"_pthread_key_dest_shmem\", 8, 0);\n            }\n            *(**0x49f468 + *arg1 * 8) = arg2;\n        }\n        goto code_r0x0041947e;\n    }\n    if (*0x49f468 == NULL) {\n        *0x49f468 = fcn.0041d1b0(\"_pthread_key_dest_shmem\", 8, 0);\n    }\n    uVar4 = uVar5;\n    if (*(**0x49f468 + uVar4 * 8) == 0) goto code_r0x00419460;\n    uVar5 = uVar5 + 1;\n    goto code_r0x00419323;\n}\n",
        "token_count": 1809
    },
    "00419b80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00419b80(uint64_t arg1)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    \n    arg1 = arg1 & 0xffffffff;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    iVar2 = fcn.004183e0();\n    fcn.0041d560(iVar2 + 0x60);\n    if ((*(iVar2 + 0x48) < arg1 || *(iVar2 + 0x48) == arg1) || (*(*(iVar2 + 0x58) + arg1) == '\\0')) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = *(*(iVar2 + 0x50) + arg1 * 8);\n    }\n    fcn.0041d4c0(iVar2 + 0x60);\n    (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n    return uVar3;\n}\n",
        "token_count": 220
    },
    "00419e80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00419e80(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    uint64_t arg1_00;\n    uint *unaff_RBX;\n    \n    iVar1 = fcn.004183e0();\n    arg1_00 = *(iVar1 + 0x1d8);\n    *(iVar1 + 8) = arg1;\n    if (arg1_00 != 0) goto code_r0x00419f01;\n    do {\n        if ((*(iVar1 + 0x40) & 0x30) == 0) {\n            fcn.0041ed56(iVar1 + 0xd0, 1);\ncode_r0x00419f23:\n            *unaff_RBX = 0xdeadbeef;\n            (*_sym.imp.KERNEL32.dll_CloseHandle)();\n            iVar1 = *(unaff_RBX + 0x74);\n            *(unaff_RBX + 10) = 0;\njoined_r0x00419f85:\n            if (iVar1 == 0) {\n                fcn.00417e00(unaff_RBX);\n            }\n            if (*0x49f448 == NULL) {\n                *0x49f448 = fcn.0041d1b0(\"_pthread_tls_shmem\", 4, 0x417030);\n            }\n            (*_sym.imp.KERNEL32.dll_TlsSetValue)(**0x49f448, 0);\n        }\n        else {\n            if (*0x49f448 == NULL) {\n                *0x49f448 = fcn.0041d1b0(\"_pthread_tls_shmem\", 4, 0x417030);\n            }\n            unaff_RBX = (*_sym.imp.KERNEL32.dll_TlsGetValue)();\n            if (unaff_RBX != NULL) {\n                if (*(unaff_RBX + 10) == 0) {\n                    *unaff_RBX = 0xdeadbeef;\n                    if (*(unaff_RBX + 0xc) != 0) {\n                        (*_sym.imp.KERNEL32.dll_CloseHandle)();\n                    }\n                    iVar1 = *(unaff_RBX + 0x74);\n                    *(unaff_RBX + 0xc) = 0;\n                    arg1 = unaff_RBX[2];\n                    goto joined_r0x00419f85;\n                }\n                arg1 = unaff_RBX[2];\n                unaff_RBX[0x2f] = 1;\n                if (*(unaff_RBX + 0xc) != 0) {\n                    (*_sym.imp.KERNEL32.dll_CloseHandle)();\n                }\n                *(unaff_RBX + 0xc) = 0;\n                if ((*(unaff_RBX + 0x11) & 4) != 0) goto code_r0x00419f23;\n            }\n        }\n        arg1_00 = arg1 & 0xffffffff;\n        iVar1 = (*_sym.imp.msvcrt.dll__endthreadex)();\ncode_r0x00419f01:\n        fcn.00418830(arg1_00);\n    } while( true );\n}\n",
        "token_count": 677
    },
    "0041a100": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t * fcn.0041a100(ulong arg1)\n\n{\n    ulong *puVar1;\n    code *pcVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t *piVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    ulong uVar10;\n    int32_t **arg1_00;\n    char *arg1_01;\n    uint64_t uVar11;\n    uint32_t uVar12;\n    uint64_t uVar13;\n    uint32_t uVar14;\n    bool bVar15;\n    ulong auStack224 [5];\n    ulong uStack184;\n    ulong uStack176;\n    int32_t *apiStack168 [2];\n    \n    piVar6 = fcn.00418790(arg1);\n    piVar7 = piVar6;\n    if ((((piVar6 == NULL) || ((*(piVar6 + 0x10) & 0xc) != 0)) || (piVar7 = piVar6[0x2f],  piVar6[0x2f] != 0)) ||\n       ((piVar7 = piVar6[0x11] & 3U,  (piVar6[0x11] & 3U) != 3 ||\n        (piVar7 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*(piVar6 + 0xc)),  piVar7 != 0)))) {\n        return piVar7;\n    }\n    fcn.0041b7a0(piVar6 + 0xe);\n    fcn.0041a080();\n    piVar7 = fcn.004183e0();\n    if ((piVar7 == NULL) || ((*(piVar7 + 0x10) & 0xc) != 0)) {\n        return piVar7;\n    }\n    if (*0x49f460 == NULL) {\n        *0x49f460 = fcn.0041d1b0(\"_pthread_cancelling_shmem\", 4, 0);\n    }\n    if (**0x49f460 == 0) {\n        return *0x49f460;\n    }\n    arg1_00 = piVar7 + 0xe;\n    fcn.0041bdb0(arg1_00);\n    if ((((*(piVar7 + 0x10) & 3) != 0) && ((piVar7[0x11] & 1U) != 0)) && (piVar7[8] < 1)) {\n        piVar7[0x11] = piVar7[0x11] & 0xfffffffe;\n        *(piVar7 + 0x10) = *(piVar7 + 0x10) & 0xf3 | 4;\n        if (*(piVar7 + 0xc) != 0) {\n            (*_sym.imp.KERNEL32.dll_ResetEvent)();\n        }\n        fcn.0041b7a0(arg1_00);\n        fcn.0041a080();\n        if (arg1_00 == NULL) {\n            apiStack168[1] = 0x41a295;\n            fcn.004183e0();\ncode_r0x0041a26e:\n            apiStack168[1] = 0x41a273;\n            fcn.0041a160();\n            apiStack168[1] = 0x41a27b;\n            (*_sym.imp.KERNEL32.dll_Sleep)(0);\n            apiStack168[1] = 0x41a280;\n            fcn.0041a160();\n            return NULL;\n        }\n        apiStack168[1] = 0x41a221;\n        uVar13 = fcn.0041ea30(arg1_00);\n        if (uVar13 < 0xffffffff) {\n            apiStack168[1] = 0x41a265;\n            iVar8 = fcn.004183e0();\n            uVar11 = uVar13 & 0xffffffff;\n            if (uVar13 == 0) goto code_r0x0041a26e;\n        }\n        else {\n            apiStack168[1] = 0x41a233;\n            iVar8 = fcn.004183e0();\n            uVar11 = 0xffffffff;\n        }\n        apiStack168[1] = 0x41a240;\n        fcn.0041a160();\n        if (*(iVar8 + 0x30) == 0) {\n            apiStack168[1] = 0x41a2a8;\n            (*_sym.imp.KERNEL32.dll_Sleep)(uVar11);\n        }\n        else {\n            apiStack168[1] = 0x41a251;\n            (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*(iVar8 + 0x30), uVar11);\n        }\n        apiStack168[1] = 0x41a256;\n        fcn.0041a160();\n        return NULL;\n    }\n    piVar7 = fcn.0041b230(arg1_00);\n    if (piVar7 != 0) {\n        return piVar7;\n    }\n    uStack176 = *arg1_00;\n    if (uStack176[2] == 0) {\n        uVar14 = 1;\n        if (uStack176[5] == 0) goto code_r0x0041b560;\n        goto code_r0x0041b7d0;\n    }\n    iVar4 = uStack176[5];\n    if (iVar4 != 0) {\n        iVar5 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        if (iVar4 == iVar5) {\n            if (uStack176[2] == 2) {\n                LOCK();\n                piVar7 = uStack176 + 3;\n                iVar4 = *piVar7;\n                *piVar7 = *piVar7 + -1;\n                if (iVar4 == 1) goto code_r0x0041b7d0;\ncode_r0x0041b7f2:\n                uVar14 = 0;\n            }\n            else {\ncode_r0x0041b7d0:\n                uStack176[5] = 0;\n                if ((*(uStack176 + 6) == 0) ||\n                   (iVar4 = (*_sym.imp.KERNEL32.dll_ReleaseSemaphore)(*(uStack176 + 6), 1, 0),  iVar4 != 0))\n                goto code_r0x0041b7f2;\n                iVar4 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n                uVar14 = 1;\n                uStack176[5] = iVar4;\n            }\n            uStack176 = *arg1_00;\n            goto code_r0x0041b560;\n        }\n        uStack176 = *arg1_00;\n    }\n    uVar14 = 1;\ncode_r0x0041b560:\n    apiStack168[0] = uVar14;\n    if (*0x49f498 == 0) {\n        *0x49f498 = fcn.0041d1b0(\"mutex_global_shmem\", 0x10, 0x41b1d0);\n    }\n    fcn.0041d560(*0x49f498);\n    iVar8 = *0x49f498;\n    if ((*uStack176 == -0x454e0ff3) && (0 < uStack176[1])) {\n        bVar15 = *0x49f498 == 0;\n        uStack176[1] = uStack176[1] + -1;\n        if (bVar15) {\n            *0x49f498 = fcn.0041d1b0(\"mutex_global_shmem\", 0x10, 0x41b1d0);\n            fcn.0041d4c0(*0x49f498);\n            return apiStack168[0];\n        }\n        fcn.0041d4c0(iVar8);\n        return apiStack168[0];\n    }\n    iVar8 = (*_sym.imp.msvcrt.dll___iob_func)();\n    sub.msvcrt.dll_fprintf(iVar8 + 0x60, 0x483d68, \"(m_->valid == LIFE_MUTEX) && (m_->busy > 0)\");\n    sub.msvcrt.dll_exit(1);\n    arg1_01 = \"mutex_global_shmem\";\n    auStack224[0] = 0x41d1d6;\n    iVar4 = sub.msvcrt.dll_strlen();\n    auStack224[0] = 0x41d1ee;\n    iVar9 = fcn.0040ce40(arg1_01);\n    iVar9 = -iVar9;\n    iVar8 = &uStack184 + iVar9;\n    *(&uStack184 + iVar9) = 0x656d68732d636367;\n    *(&uStack176 + iVar9) = 0x64742d6d;\n    *(&uStack176 + iVar9 + 4) = 0x326d;\n    uVar14 = iVar4 + 0x50;\n    *(&uStack176 + iVar9 + 6) = 0x2d;\n    *(auStack224 + iVar9) = 0x41d236;\n    sub.msvcrt.dll_memcpy(&uStack176 + iVar9 + 7, \"mutex_global_shmem\", iVar4);\n    puVar1 = apiStack168 + iVar4 + iVar9;\n    *puVar1 = 0x6161616161616161;\n    puVar1[1] = 0x6161616161616161;\n    puVar1[2] = 0x6161616161616161;\n    puVar1[3] = 0x6161616161616161;\n    puVar1[4] = 0x6161616161616161;\n    puVar1[5] = 0x6161616161616161;\n    puVar1[6] = 0x6161616161616161;\n    puVar1[7] = 0x6161616161616161;\n    *(&uStack184 + uVar14 + iVar9) = 0;\n    *(&uStack184 + (iVar4 + 0xf) + iVar9) = 0;\n    *(auStack224 + iVar9) = 0x41d27e;\n    uVar10 = (*_sym.imp.KERNEL32.dll_CreateMutexA)(0, 0);\n    *(&uStack184 + (iVar4 + 0xf) + iVar9) = 0x2d;\n    *(auStack224 + iVar9) = 0x41d294;\n    iVar5 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(uVar10, 0xffffffff);\n    if (iVar5 != 0) {\n        pcVar2 = swi(3);\n        piVar7 = (*pcVar2)();\n        return piVar7;\n    }\n    *(auStack224 + iVar9) = 0x41d2a2;\n    uVar3 = (*_sym.imp.KERNEL32.dll_FindAtomA)();\n    if (uVar3 == 0) {\n        *(auStack224 + iVar9) = 0x41d2b7;\n        piVar6 = sub.msvcrt.dll_malloc(0x10);\n        uVar13 = 0x40;\n        do {\n            if ((piVar6 >> (uVar13 & 0x3f) & 1) != 0) {\n                *(iVar8 + (uVar14 - uVar13)) = 0x41;\n            }\n            uVar12 = uVar13 - 1;\n            uVar13 = uVar12;\n        } while (uVar12 != 0);\n        *(auStack224 + iVar9) = 0x41d2e3;\n        uVar3 = (*_sym.imp.KERNEL32.dll_AddAtomA)();\n        if (uVar3 == 0) {\n            pcVar2 = swi(3);\n            piVar7 = (*pcVar2)();\n            return piVar7;\n        }\n        *(auStack224 + iVar9) = 0x41d2f9;\n        piVar7 = fcn.0041d130(uVar3, iVar8, uVar14, iVar4 + 0x10);\n        if (piVar7 == piVar6) {\n            *(auStack224 + iVar9) = 0x41d356;\n            sub.msvcrt.dll_memset(piVar6, 0, 0x10);\n            *(auStack224 + iVar9) = 0x41d361;\n            (*0x41b1d0)(piVar6);\n        }\n        else {\n            *(auStack224 + iVar9) = 0x41d309;\n            fcn.00416d90(piVar6);\n        }\n    }\n    else {\n        *(auStack224 + iVar9) = 0x41d344;\n        piVar7 = fcn.0041d130(uVar3, iVar8, uVar14, iVar4 + 0x10);\n    }\n    *(auStack224 + iVar9) = 0x41d312;\n    (*_sym.imp.KERNEL32.dll_ReleaseMutex)(uVar10);\n    *(auStack224 + iVar9) = 0x41d31b;\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar10);\n    return piVar7;\n}\n",
        "token_count": 2979
    },
    "0041b230": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.0041b230(int32_t **arg1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    ulong uVar3;\n    \n    piVar1 = *arg1;\n    if (*0x49f498 == 0) {\n        *0x49f498 = fcn.0041d1b0(\"mutex_global_shmem\", 0x10, 0x41b1d0);\n    }\n    fcn.0041d560(*0x49f498);\n    piVar2 = *arg1;\n    uVar3 = 0x16;\n    if ((((piVar2 != NULL) && (*piVar2 == -0x454e0ff3)) && (uVar3 = 1,  2 < piVar2 + 3U)) && (piVar1[5] != 0)) {\n        uVar3 = 0;\n        piVar2[1] = piVar2[1] + 1;\n    }\n    if (*0x49f498 != 0) {\n        fcn.0041d4c0(*0x49f498);\n        return uVar3;\n    }\n    *0x49f498 = fcn.0041d1b0(\"mutex_global_shmem\", 0x10, 0x41b1d0);\n    fcn.0041d4c0(*0x49f498);\n    return uVar3;\n}\n",
        "token_count": 322
    },
    "0041b300": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint8_t fcn.0041b300(int64_t arg1)\n\n{\n    uint8_t uVar1;\n    \n    if (*0x49f498 == 0) {\n        *0x49f498 = fcn.0041d1b0(\"mutex_global_shmem\", 0x10, 0x41b1d0);\n    }\n    fcn.0041d560(*0x49f498);\n    uVar1 = -(arg1 == 0) & 0x16;\n    if (*0x49f498 != 0) {\n        fcn.0041d4c0(*0x49f498);\n        return uVar1;\n    }\n    *0x49f498 = fcn.0041d1b0(\"mutex_global_shmem\", 0x10, 0x41b1d0);\n    fcn.0041d4c0(*0x49f498);\n    return uVar1;\n}\n",
        "token_count": 211
    },
    "0041b3a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.0041b3a0(int32_t **arg1, int32_t **arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    *arg2 = NULL;\n    if (*0x49f498 == 0) {\n        *0x49f498 = fcn.0041d1b0(\"mutex_global_shmem\", 0x10, 0x41b1d0);\n    }\n    iVar2 = fcn.0041d420(*0x49f498);\n    if (iVar2 != 0) {\n        return 0x10;\n    }\n    if ((arg1 == NULL) || (piVar1 = *arg1,  piVar1 == NULL)) {\n        uVar3 = 0x16;\n    }\n    else if (piVar1 + 3U < 3) {\n        *arg1 = NULL;\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 0x16;\n        if (((*piVar1 == -0x454e0ff3) && (uVar3 = 0x10,  piVar1[1] == 0)) && (piVar1[5] == 0)) {\n            *arg2 = piVar1;\n            uVar3 = 0;\n            *arg1 = NULL;\n        }\n    }\n    if (*0x49f498 == 0) {\n        *0x49f498 = fcn.0041d1b0(\"mutex_global_shmem\", 0x10, 0x41b1d0);\n    }\n    fcn.0041d4c0(*0x49f498);\n    return uVar3;\n}\n",
        "token_count": 385
    },
    "0041b4e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t fcn.0041b4e0(int64_t arg1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (*(arg1 + 8) == 0) {\n        if (*(arg1 + 0x14) != 0) {\n            return 0x10;\n        }\n    }\n    else {\n        iVar1 = *(arg1 + 0x14);\n        if (iVar1 != 0) {\n            if (*(arg1 + 8) != 2) {\n                return 0x10;\n            }\n            iVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n            if (iVar1 != iVar3) {\n                return 0x10;\n            }\n            LOCK();\n            *(arg1 + 0xc) = *(arg1 + 0xc) + 1;\n            return 0;\n        }\n    }\n    iVar1 = fcn.0041c560(*(arg1 + 0x18), 1, 0);\n    if (iVar1 == 0x8a) {\n        return 0x10;\n    }\n    if (iVar1 == 0) {\n        *(arg1 + 0xc) = 1;\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        *(arg1 + 0x14) = uVar2;\n        return 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 316
    },
    "0041b950": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.0041b950(int64_t *arg1)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    \n    if (*0x49f490 == 0) {\n        *0x49f490 = fcn.0041d1b0(\"mutex_global_static_shmem\", 0x10, 0x41b1f0);\n    }\n    fcn.0041d560(*0x49f490);\n    iVar2 = *arg1;\n    uVar1 = 0;\n    if (2 < iVar2 + 3U) goto joined_r0x0041b9cf;\n    if (iVar2 == -1) {\ncode_r0x0041b998:\n        uVar1 = fcn.0041b880(arg1, 0);\n    }\n    else {\n        if (iVar2 == -3) {\n            iVar2 = *0x49f488;\n            if (*0x49f488 == 0) {\n                iVar2 = fcn.0041d1b0(\"mxattr_recursive_shmem\", 4, 0x41b210);\n                *0x49f488 = iVar2;\n            }\n        }\n        else {\n            if (iVar2 != -2) {\n                if (iVar2 == 0) {\n                    uVar1 = 0x16;\n                    goto joined_r0x0041b9cf;\n                }\n                goto code_r0x0041b998;\n            }\n            iVar2 = *0x49f480;\n            if (*0x49f480 == 0) {\n                iVar2 = fcn.0041d1b0(\"mxattr_errorcheck_shmem\", 4, 0x41b220);\n                *0x49f480 = iVar2;\n            }\n        }\n        uVar1 = fcn.0041b880(arg1, iVar2);\n    }\njoined_r0x0041b9cf:\n    if (*0x49f490 == 0) {\n        *0x49f490 = fcn.0041d1b0(\"mutex_global_static_shmem\", 0x10, 0x41b1f0);\n        fcn.0041d4c0(*0x49f490);\n        return uVar1;\n    }\n    fcn.0041d4c0(*0x49f490);\n    return uVar1;\n}\n",
        "token_count": 519
    },
    "0041bab0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t fcn.0041bab0(int32_t **arg1)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    \n    if (*0x49f498 == 0) {\n        *0x49f498 = fcn.0041d1b0(\"mutex_global_shmem\", 0x10, 0x41b1d0);\n    }\n    fcn.0041d560(*0x49f498);\n    if ((arg1 == NULL) || (piVar2 = *arg1,  piVar2 == NULL)) {\n        if (*0x49f498 == 0) {\n            *0x49f498 = fcn.0041d1b0(\"mutex_global_shmem\", 0x10, 0x41b1d0);\n        }\n        fcn.0041d4c0(*0x49f498);\n        return 0x16;\n    }\n    if (piVar2 + 3U < 3) {\n        if (*0x49f498 == 0) {\n            *0x49f498 = fcn.0041d1b0(\"mutex_global_shmem\", 0x10, 0x41b1d0);\n        }\n        fcn.0041d4c0(*0x49f498);\n        uVar1 = fcn.0041b950(arg1);\n        if (*0x49f498 == 0) {\n            *0x49f498 = fcn.0041d1b0(\"mutex_global_shmem\", 0x10, 0x41b1d0);\n        }\n        fcn.0041d560(*0x49f498);\n        if ((uVar1 & 0xffffffef) != 0) {\n            if (*0x49f498 == 0) {\n                *0x49f498 = fcn.0041d1b0(\"mutex_global_shmem\", 0x10, 0x41b1d0);\n            }\n            fcn.0041d4c0(*0x49f498);\n            return uVar1;\n        }\n        piVar2 = *arg1;\n        if (piVar2 != NULL) goto code_r0x0041baed;\n    }\n    else {\ncode_r0x0041baed:\n        if (*piVar2 == -0x454e0ff3) {\n            uVar1 = 0;\n            piVar2[1] = piVar2[1] + 1;\n            goto code_r0x0041bafe;\n        }\n    }\n    uVar1 = 0x16;\ncode_r0x0041bafe:\n    if (*0x49f498 == 0) {\n        *0x49f498 = fcn.0041d1b0(\"mutex_global_shmem\", 0x10, 0x41b1d0);\n    }\n    fcn.0041d4c0(*0x49f498);\n    return uVar1;\n}\n",
        "token_count": 663
    },
    "0041bce0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint64_t fcn.0041bce0(int32_t **arg1, uint64_t arg2)\n\n{\n    uchar *arg2_00;\n    ulong *puVar1;\n    int32_t *piVar2;\n    code *pcVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    ulong uVar9;\n    uint64_t uVar10;\n    char *arg1_00;\n    int32_t *arg1_01;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    bool bVar13;\n    ulong auStack184 [5];\n    ulong uStack144;\n    ulong uStack136;\n    uint64_t auStack128 [2];\n    \n    uVar8 = fcn.0041bab0(arg1);\n    if (uVar8 != 0) {\n        return uVar8;\n    }\n    piVar2 = *arg1;\n    arg1_01 = piVar2;\n    if ((piVar2[2] == 0) || (iVar5 = piVar2[5],  iVar5 == 0)) {\ncode_r0x0041bd0c:\n        uVar9 = *(piVar2 + 6);\n        fcn.0041b560(arg1_01, 0);\n        uVar8 = fcn.0041c560(uVar9, 1, arg2 & 0xffffffff);\n        if (uVar8 != 0) {\n            return uVar8;\n        }\n        uVar8 = fcn.0041bab0(arg1);\n        if (uVar8 != 0) {\n            return uVar8;\n        }\n        piVar2[3] = 1;\n        iVar5 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        piVar2[5] = iVar5;\n    }\n    else {\n        iVar6 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        if (iVar5 != iVar6) {\n            arg1_01 = *arg1;\n            goto code_r0x0041bd0c;\n        }\n        uVar12 = 0x24;\n        if (piVar2[2] != 2) goto code_r0x0041b560;\n        LOCK();\n        piVar2[3] = piVar2[3] + 1;\n    }\n    uVar12 = 0;\ncode_r0x0041b560:\n    uStack136 = *arg1;\n    auStack128[0] = uVar12;\n    if (*0x49f498 == 0) {\n        *0x49f498 = fcn.0041d1b0(\"mutex_global_shmem\", 0x10, 0x41b1d0);\n    }\n    fcn.0041d560(*0x49f498);\n    iVar7 = *0x49f498;\n    if ((*uStack136 == -0x454e0ff3) && (0 < uStack136[1])) {\n        bVar13 = *0x49f498 == 0;\n        uStack136[1] = uStack136[1] + -1;\n        if (bVar13) {\n            *0x49f498 = fcn.0041d1b0(\"mutex_global_shmem\", 0x10, 0x41b1d0);\n            fcn.0041d4c0(*0x49f498);\n            return auStack128[0];\n        }\n        fcn.0041d4c0(iVar7);\n        return auStack128[0];\n    }\n    iVar7 = (*_sym.imp.msvcrt.dll___iob_func)();\n    sub.msvcrt.dll_fprintf(iVar7 + 0x60, 0x483d68, \"(m_->valid == LIFE_MUTEX) && (m_->busy > 0)\");\n    sub.msvcrt.dll_exit(1);\n    arg1_00 = \"mutex_global_shmem\";\n    auStack184[0] = 0x41d1d6;\n    iVar5 = sub.msvcrt.dll_strlen();\n    auStack184[0] = 0x41d1ee;\n    iVar7 = fcn.0040ce40(arg1_00);\n    iVar7 = -iVar7;\n    arg2_00 = &stack0xffffffffffffff70 + iVar7;\n    *(&stack0xffffffffffffff70 + iVar7) = 0x656d68732d636367;\n    *(&stack0xffffffffffffff78 + iVar7) = 0x64742d6d;\n    *(&stack0xffffffffffffff7c + iVar7) = 0x326d;\n    uVar12 = iVar5 + 0x50;\n    (&stack0xffffffffffffff7e)[iVar7] = 0x2d;\n    *(&stack0xffffffffffffff48 + iVar7) = 0x41d236;\n    sub.msvcrt.dll_memcpy(&stack0xffffffffffffff7f + iVar7, \"mutex_global_shmem\", iVar5);\n    puVar1 = &stack0xffffffffffffff80 + iVar5 + iVar7;\n    *puVar1 = 0x6161616161616161;\n    puVar1[1] = 0x6161616161616161;\n    puVar1[2] = 0x6161616161616161;\n    puVar1[3] = 0x6161616161616161;\n    puVar1[4] = 0x6161616161616161;\n    puVar1[5] = 0x6161616161616161;\n    puVar1[6] = 0x6161616161616161;\n    puVar1[7] = 0x6161616161616161;\n    (&stack0xffffffffffffff70)[uVar12 + iVar7] = 0;\n    (&stack0xffffffffffffff70)[(iVar5 + 0xf) + iVar7] = 0;\n    *(&stack0xffffffffffffff48 + iVar7) = 0x41d27e;\n    uVar9 = (*_sym.imp.KERNEL32.dll_CreateMutexA)(0, 0);\n    (&stack0xffffffffffffff70)[(iVar5 + 0xf) + iVar7] = 0x2d;\n    *(&stack0xffffffffffffff48 + iVar7) = 0x41d294;\n    iVar6 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(uVar9, 0xffffffff);\n    if (iVar6 != 0) {\n        pcVar3 = swi(3);\n        uVar8 = (*pcVar3)();\n        return uVar8;\n    }\n    *(&stack0xffffffffffffff48 + iVar7) = 0x41d2a2;\n    uVar4 = (*_sym.imp.KERNEL32.dll_FindAtomA)();\n    if (uVar4 == 0) {\n        *(&stack0xffffffffffffff48 + iVar7) = 0x41d2b7;\n        uVar10 = sub.msvcrt.dll_malloc(0x10);\n        uVar8 = 0x40;\n        do {\n            if ((uVar10 >> (uVar8 & 0x3f) & 1) != 0) {\n                arg2_00[uVar12 - uVar8] = 0x41;\n            }\n            uVar11 = uVar8 - 1;\n            uVar8 = uVar11;\n        } while (uVar11 != 0);\n        *(&stack0xffffffffffffff48 + iVar7) = 0x41d2e3;\n        uVar4 = (*_sym.imp.KERNEL32.dll_AddAtomA)();\n        if (uVar4 == 0) {\n            pcVar3 = swi(3);\n            uVar8 = (*pcVar3)();\n            return uVar8;\n        }\n        *(&stack0xffffffffffffff48 + iVar7) = 0x41d2f9;\n        uVar8 = fcn.0041d130(uVar4, arg2_00, uVar12, iVar5 + 0x10);\n        if (uVar8 == uVar10) {\n            *(&stack0xffffffffffffff48 + iVar7) = 0x41d356;\n            sub.msvcrt.dll_memset(uVar10, 0, 0x10);\n            *(&stack0xffffffffffffff48 + iVar7) = 0x41d361;\n            (*0x41b1d0)(uVar10);\n        }\n        else {\n            *(&stack0xffffffffffffff48 + iVar7) = 0x41d309;\n            fcn.00416d90(uVar10);\n        }\n    }\n    else {\n        *(&stack0xffffffffffffff48 + iVar7) = 0x41d344;\n        uVar8 = fcn.0041d130(uVar4, arg2_00, uVar12, iVar5 + 0x10);\n    }\n    *(&stack0xffffffffffffff48 + iVar7) = 0x41d312;\n    (*_sym.imp.KERNEL32.dll_ReleaseMutex)(uVar9);\n    *(&stack0xffffffffffffff48 + iVar7) = 0x41d31b;\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar9);\n    return uVar8;\n}\n",
        "token_count": 2048
    },
    "0041c360": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nulong fcn.0041c360(ulong *arg1, int32_t *arg2)\n\n{\n    code *pcVar1;\n    ulong uVar2;\n    uint *puVar3;\n    int64_t iVar4;\n    \n    uVar2 = 0x16;\n    if ((arg1 != NULL) && ((arg2 == NULL || (uVar2 = 0x28,  *arg2 != 1)))) {\n        puVar3 = sub.msvcrt.dll_calloc(1, 0xb0);\n        pcVar1 = _sym.imp.KERNEL32.dll_CreateSemaphoreA;\n        uVar2 = 0xc;\n        if (puVar3 != NULL) {\n            *puVar3 = 0xc0deadbf;\n            puVar3[2] = 0;\n            puVar3[4] = 0;\n            puVar3[3] = 0;\n            uVar2 = (*pcVar1)(0, 0, 0x7fffffff, 0);\n            *(puVar3 + 0x28) = uVar2;\n            iVar4 = (*pcVar1)(0, 0, 0x7fffffff, 0);\n            *(puVar3 + 0x2a) = iVar4;\n            pcVar1 = _sym.imp.KERNEL32.dll_InitializeCriticalSection;\n            if (*(puVar3 + 0x28) != 0) {\n                if (iVar4 != 0) {\n                    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(puVar3 + 6);\n                    (*pcVar1)(puVar3 + 0x1c);\n                    (*pcVar1)(puVar3 + 0x10);\n                    puVar3[0x1a] = 0;\n                    puVar3[0x26] = 1;\n                    *puVar3 = 0xc0bab1fd;\n                    *arg1 = puVar3;\n                    return 0;\n                }\n                (*_sym.imp.KERNEL32.dll_CloseHandle)();\n                iVar4 = *(puVar3 + 0x2a);\n            }\n            if (iVar4 != 0) {\n                (*_sym.imp.KERNEL32.dll_CloseHandle)();\n            }\n            fcn.00416d90(puVar3);\n            *arg1 = 0;\n            uVar2 = 0xb;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 520
    },
    "0041c560": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint8_t fcn.0041c560(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    ulong arg1_00;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    ulong uStack72;\n    int64_t iStack64;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_WaitForSingleObject;\n    if (arg2 == 1) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(arg1, arg3);\n        if (iVar2 == 0x80) {\n            uVar3 = 1;\n        }\n        else {\n            if (iVar2 != 0x102) {\n                return ~-(iVar2 == 0) & 0x16;\n            }\n            uVar3 = 0x8a;\n        }\n        iVar2 = (*pcVar1)(arg1, 0);\njoined_r0x0041c65f:\n        if (iVar2 == 0) {\n            return 0;\n        }\n        return uVar3;\n    }\n    uStack72 = arg1;\n    arg1_00 = fcn.00419d20();\n    iStack64 = fcn.00419d50(arg1_00);\n    pcVar1 = _sym.imp.KERNEL32.dll_WaitForSingleObject;\n    if (iStack64 == 0) {\n        if (arg3 != 0xffffffff) {\n            uVar4 = 0x14;\n            do {\n                if (arg3 < uVar4) {\n                    uVar4 = arg3;\n                }\n                iVar2 = (*pcVar1)(arg1, uVar4);\n                if (iVar2 == 0x80) {\n                    uVar3 = 1;\n                }\n                else if (iVar2 == 0x102) {\n                    uVar3 = 0x8a;\n                }\n                else {\n                    if (iVar2 == 0) {\n                        uVar3 = 0;\n                        goto code_r0x0041c713;\n                    }\n                    uVar3 = 0x16;\n                }\n                arg3._0_4_ = arg3 - uVar4;\n                if (arg3 == 0) break;\n                iVar2 = fcn.00419fe0();\n                if (iVar2 != 0) {\n                    return 0x16;\n                }\n            } while (uVar3 == 0x8a);\n            if (uVar3 == 0x8a) {\n                iVar2 = (*pcVar1)(arg1, 0);\n                if (iVar2 == 0) {\n                    return 0;\n                }\n            }\n            else {\ncode_r0x0041c713:\n                if (uVar3 == 0) {\n                    return 0;\n                }\n            }\n            if (arg2 == 2) {\n                return uVar3;\n            }\n            fcn.0041a160();\n            return uVar3;\n        }\n        do {\n            iVar2 = (*pcVar1)(arg1, 0x28);\n            if (iVar2 == 0x80) {\n                uVar3 = 1;\ncode_r0x0041c7f9:\n                iVar2 = fcn.00419fe0();\n                if (iVar2 == 0) {\n                    if (uVar3 == 0x16) {\n                        return 0x16;\n                    }\n                    iVar2 = (*pcVar1)(arg1, 0);\n                    goto joined_r0x0041c65f;\n                }\n                break;\n            }\n            if (iVar2 != 0x102) {\n                uVar3 = 0x16;\n                if (iVar2 == 0) {\n                    return 0;\n                }\n                goto code_r0x0041c7f9;\n            }\n            iVar2 = fcn.00419fe0();\n        } while (iVar2 == 0);\n        if (arg2 == 2) {\n            return 0x16;\n        }\ncode_r0x0041c7b0:\n        fcn.0041a160();\n        return 0x16;\n    }\n    while( true ) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_WaitForMultipleObjects)(2, &uStack72, 0, arg3);\n        if (iVar2 != 1) break;\n        (*_sym.imp.KERNEL32.dll_ResetEvent)(iStack64);\n        if (arg2 != 2) goto code_r0x0041c7b0;\n        fcn.0041a160();\n    }\n    if (iVar2 == 0) {\n        return 0;\n    }\n    if (iVar2 == 0x80) {\n        uVar3 = 1;\n    }\n    else {\n        if (iVar2 != 0x102) {\n            uVar3 = 0x16;\n            goto code_r0x0041c5fa;\n        }\n        uVar3 = 0x8a;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(uStack72);\n    if (iVar2 == 0) {\n        return 0;\n    }\ncode_r0x0041c5fa:\n    if ((arg2 != 2) && (iVar2 = fcn.00419fe0(),  iVar2 != 0)) {\n        return 0x16;\n    }\n    return uVar3;\n}\n",
        "token_count": 1192
    },
    "0041d3b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0041d3b0(ulong *arg1, ulong arg2)\n\n{\n    uint *puVar1;\n    \n    if (arg1 != NULL) {\n        *arg1 = 0;\n        if (arg2 == 1) {\n            return 0x28;\n        }\n        if (arg2 < 2) {\n            puVar1 = sub.msvcrt.dll_calloc(1, 0x10);\n            if (puVar1 == NULL) {\n                return 0xc;\n            }\n            puVar1[3] = 1;\n            puVar1[2] = 0xfeedbab1;\n            puVar1[1] = 0;\n            *puVar1 = 0;\n            *arg1 = puVar1;\n            return 0;\n        }\n    }\n    return 0x16;\n}\n",
        "token_count": 186
    },
    "0041ee70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.0041ee70(int64_t arg1, int64_t arg2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    ulong auStack16 [2];\n    \n    uVar1 = *(arg1 + 0x28);\n    if (uVar1 == 0xff) {\n        arg2 = 0;\n        goto code_r0x0041eea0;\n    }\n    uVar2 = uVar1 & 7;\n    if (uVar2 == 2) {\n        arg2 = arg2 * -2;\n        goto code_r0x0041eea0;\n    }\n    if (uVar2 < 3) {\n        if (uVar2 != 0) {\ncode_r0x0041eec4:\n            uVar1 = sub.msvcrt.dll_abort();\n            goto code_r0x0041eed0;\n        }\n    }\n    else {\n        if (uVar2 == 3) {\ncode_r0x0041eed0:\n            arg2 = arg2 * -4;\n            goto code_r0x0041eea0;\n        }\n        if (uVar2 != 4) goto code_r0x0041eec4;\n    }\n    arg2 = arg2 * -8;\ncode_r0x0041eea0:\n    fcn.0041f190(uVar1, *(arg1 + 0x10), arg2 + *(arg1 + 0x18), auStack16);\n    return auStack16[0];\n}\n",
        "token_count": 330
    },
    "0041f9b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0041f9b0(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x46b340 == '\\0') {\n        iVar1 = fcn.0046a000(0x46b340);\n        if (iVar1 != 0) {\n            *0x47fd10 = 0xffffffffffffffff;\n            fcn.0046a120(0x46b340);\n            return 0x47fd10;\n        }\n    }\n    return 0x47fd10;\n}\n",
        "token_count": 114
    },
    "00420ed0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuchar fcn.00420ed0(void)\n\n{\n    uint8_t uVar1;\n    uint64_t *arg1;\n    uint64_t uVar2;\n    uint64_t *puVar3;\n    uint64_t uVar4;\n    uchar uStack49;\n    \n    arg1 = fcn.00469800(8);\n    *arg1 = 0x487a90;\n    uVar4 = 0x484f20;\n    fcn.0046a250(arg1, 0x484f20, 0x420e60);\n    uVar2 = arg1[4];\n    if (uVar2 != 0) {\ncode_r0x00420f0d:\n        return *(uVar2 + uVar4);\n    }\n    do {\n        puVar3 = arg1;\n        uVar1 = *(puVar3 + 3);\n        while (uVar1 != 1) {\n            if (uVar1 == 0) {\n                uVar2 = puVar3[6];\n                goto code_r0x00420f0d;\n            }\n            if (uVar1 < 4) {\n                (**(*puVar3[6] + 0x10))();\n                return uStack49;\n            }\n        }\n        uVar2 = *puVar3[6];\n        arg1 = puVar3[6];\n        if (uVar2 <= uVar4) {\n            uVar4 = uVar4 - uVar2;\n            arg1 = puVar3[7];\n        }\n    } while( true );\n}\n",
        "token_count": 340
    },
    "004222b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.004222b0(int64_t *arg1, ushort *arg2, uint64_t arg3, uint64_t arg4)\n\n{\n    ushort *puVar1;\n    uint64_t *puVar2;\n    uint64_t uVar3;\n    \n    uVar3 = *(*arg1 + -0x18);\n    if (uVar3 < arg4) {\n        puVar2 = 0x480511;\n        fcn.004655e0(0x480511);\n        return *puVar2;\n    }\n    uVar3 = uVar3 - arg4;\n    if (arg3 < uVar3) {\n        uVar3 = arg3;\n    }\n    if (uVar3 != 0) {\n        puVar1 = *arg1 + arg4 * 2;\n        if (uVar3 == 1) {\n            *arg2 = *puVar1;\n            return 1;\n        }\n        sub.msvcrt.dll_memcpy(arg2, puVar1, uVar3 * 2);\n    }\n    return uVar3;\n}\n",
        "token_count": 237
    },
    "00423180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00423180(int64_t *arg1, uchar *arg2, uint64_t arg3, uint64_t arg4)\n\n{\n    uchar *puVar1;\n    char *pcVar2;\n    uint64_t uVar3;\n    \n    uVar3 = *(*arg1 + -0x18);\n    if (uVar3 < arg4) {\n        pcVar2 = \"basic_string::copy\";\n        fcn.004655e0(\"basic_string::copy\");\n        return *pcVar2;\n    }\n    uVar3 = uVar3 - arg4;\n    if (arg3 < uVar3) {\n        uVar3 = arg3;\n    }\n    if (uVar3 != 0) {\n        puVar1 = *arg1 + arg4;\n        if (uVar3 == 1) {\n            *arg2 = *puVar1;\n            return 1;\n        }\n        sub.msvcrt.dll_memcpy(arg2, puVar1, uVar3);\n    }\n    return uVar3;\n}\n",
        "token_count": 228
    },
    "00424ed0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool fcn.00424ed0(int64_t *arg1)\n\n{\n    return *arg1 != 0;\n}\n",
        "token_count": 27
    },
    "004258c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nushort fcn.004258c0(ulong param_1, uint16_t param_2)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    int32_t iVar3;\n    ulong *puVar4;\n    \n    if (param_2 == 0x10) {\n        uVar2 = 0x481098;\n    }\n    else if (param_2 < 0x11) {\n        if (param_2 == 4) {\n            uVar2 = 0x481086;\n        }\n        else if (param_2 < 5) {\n            if (param_2 == 1) {\n                uVar2 = 0x48107a;\n            }\n            else {\n                if (param_2 != 2) {\n                    return 0;\n                }\n                uVar2 = 0x481080;\n            }\n        }\n        else if (param_2 == 8) {\n            uVar2 = 0x48108c;\n        }\n        else {\n            if (param_2 != 0xc) {\n                return 0;\n            }\n            uVar2 = 0x48109f;\n        }\n    }\n    else if (param_2 == 0x100) {\n        uVar2 = 0x481074;\n    }\n    else if (param_2 < 0x101) {\n        if (param_2 == 0x20) {\n            uVar2 = 0x481068;\n        }\n        else {\n            if (param_2 != 0x40) {\n                return 0;\n            }\n            uVar2 = 0x48106e;\n        }\n    }\n    else if (param_2 == 0x200) {\n        uVar2 = 0x481092;\n    }\n    else {\n        if (param_2 != 0x20c) {\n            return 0;\n        }\n        uVar2 = 0x4810a5;\n    }\n    iVar3 = 0;\n    puVar4 = 0x4834e0;\n    do {\n        iVar1 = sub.msvcrt.dll_strcmp(uVar2, *puVar4);\n        if (iVar1 == 0) {\n            return *(iVar3 * 0x10 + 0x4834e8);\n        }\n        iVar3 = iVar3 + 1;\n        puVar4 = puVar4 + 2;\n    } while (iVar3 != 0xb);\n    return 0;\n}\n",
        "token_count": 536
    },
    "00425c50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.00425c50(int64_t *arg1, int64_t *arg2)\n\n{\n    int64_t *piVar1;\n    ulong *puVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    ulong uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    \n    iVar4 = fcn.004472c0(0, 0);\n    iVar9 = *arg2;\n    *arg1 = iVar4;\n    piVar1 = *(iVar9 + 0x20);\n    iVar9 = *piVar1;\n    if (iVar9 == 0) {\n        fcn.00447630(arg1, 0, *(iVar4 + -0x18), 1);\n    }\n    else {\n        if (piVar1[1] != 0) {\n            uVar8 = 0;\n            iVar4 = iVar9;\n            do {\n                uVar8 = uVar8 + 1;\n                iVar7 = piVar1[uVar8];\n                iVar3 = sub.msvcrt.dll_strcmp(iVar4, iVar7);\n                if (iVar3 != 0) {\n                    fcn.004488f0(arg1, 0x80);\n                    puVar2 = *0x484390;\n                    uVar6 = **0x484390;\n                    uVar5 = sub.msvcrt.dll_strlen(uVar6);\n                    fcn.00447b80(arg1, uVar6, uVar5);\n                    iVar9 = *arg1;\n                    iVar4 = *(iVar9 + -0x18);\n                    uVar8 = iVar4 + 1;\n                    if ((*(iVar9 + -0x10) <= uVar8 && uVar8 != *(iVar9 + -0x10)) || (0 < *(iVar9 + -8))) {\n                        fcn.004488f0(arg1, uVar8);\n                        iVar9 = *arg1;\n                        iVar4 = *(iVar9 + -0x18);\n                    }\n                    *(iVar9 + iVar4) = 0x3d;\n                    iVar9 = *arg1;\n                    *(iVar9 + -0x18) = uVar8;\n                    *(iVar9 + -8) = 0;\n                    *(iVar9 + uVar8) = 0;\n                    uVar6 = **(*arg2 + 0x20);\n                    uVar5 = sub.msvcrt.dll_strlen(uVar6);\n                    fcn.00447b80(arg1, uVar6, uVar5);\n                    iVar9 = 8;\n                    do {\n                        iVar4 = *arg1;\n                        iVar7 = *(iVar4 + -0x18);\n                        uVar8 = iVar7 + 1;\n                        if ((*(iVar4 + -0x10) <= uVar8 && uVar8 != *(iVar4 + -0x10)) || (0 < *(iVar4 + -8))) {\n                            fcn.004488f0(arg1, uVar8);\n                            iVar4 = *arg1;\n                            iVar7 = *(iVar4 + -0x18);\n                        }\n                        *(iVar4 + iVar7) = 0x3b;\n                        iVar4 = *arg1;\n                        *(iVar4 + -0x18) = uVar8;\n                        *(iVar4 + -8) = 0;\n                        *(iVar4 + uVar8) = 0;\n                        uVar6 = *(puVar2 + iVar9);\n                        uVar5 = sub.msvcrt.dll_strlen(uVar6);\n                        fcn.00447b80(arg1, uVar6, uVar5);\n                        iVar4 = *arg1;\n                        iVar7 = *(iVar4 + -0x18);\n                        uVar8 = iVar7 + 1;\n                        if ((*(iVar4 + -0x10) <= uVar8 && uVar8 != *(iVar4 + -0x10)) || (0 < *(iVar4 + -8))) {\n                            fcn.004488f0(arg1, uVar8);\n                            iVar4 = *arg1;\n                            iVar7 = *(iVar4 + -0x18);\n                        }\n                        *(iVar4 + iVar7) = 0x3d;\n                        iVar4 = *arg1;\n                        *(iVar4 + -0x18) = uVar8;\n                        *(iVar4 + -8) = 0;\n                        *(iVar4 + uVar8) = 0;\n                        uVar6 = *(*(*arg2 + 0x20) + iVar9);\n                        uVar5 = sub.msvcrt.dll_strlen(uVar6);\n                        fcn.00447b80(arg1, uVar6, uVar5);\n                        iVar9 = iVar9 + 8;\n                    } while (iVar9 != 0x30);\n                    return arg1;\n                }\n                iVar4 = iVar7;\n            } while (uVar8 < 5);\n        }\n        uVar6 = sub.msvcrt.dll_strlen(iVar9);\n        fcn.00447f40(arg1, iVar9, uVar6);\n    }\n    return arg1;\n}\n",
        "token_count": 1116
    },
    "00426b20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t ** fcn.00426b20(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t **arg4)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    bool bVar6;\n    bool bVar7;\n    char cVar8;\n    char cVar9;\n    uint32_t uVar10;\n    int64_t iVar11;\n    ulong arg1_00;\n    int64_t iVar12;\n    int64_t *piVar13;\n    char cVar14;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    bool bVar18;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uint32_t *in_stack_00000038;\n    uint32_t uStack140;\n    int32_t iStack120;\n    char cStack116;\n    uchar auStack90 [2];\n    int64_t aiStack88 [3];\n    \n    iVar11 = fcn.004247f0(auStack90, in_stack_00000028 + 0xd0);\n    uStack140 = 8;\n    uVar15 = *(in_stack_00000028 + 0x18) & 0x4a;\n    if ((uVar15 != 0x40) && (uStack140 = 10,  uVar15 == 8)) {\n        uStack140 = 0x10;\n    }\n    cStack116 = fcn.00425240(arg3, arg4);\n    if (cStack116 == '\\0') {\n        uVar10 = fcn.00425320(arg3);\n        cVar8 = uVar10;\n        bVar18 = *(iVar11 + 0x6e) == cVar8;\n        if ((!bVar18) && (*(iVar11 + 0x6f) != cVar8)) {\n            cVar14 = *(iVar11 + 0x20);\ncode_r0x004270a3:\n            iStack120 = 0;\n            bVar6 = false;\n            do {\n                cVar8 = uVar10;\n                if (((cVar14 != '\\0') && (*(iVar11 + 0x49) == cVar8)) || (*(iVar11 + 0x48) == cVar8))\n                goto code_r0x00426bf2;\n                if (*(iVar11 + 0x72) == cVar8) {\n                    if ((uStack140 != 10) && (bVar6)) goto code_r0x004270d9;\n                    if (uVar15 == 0) {\n                        iStack120 = 0;\n                        bVar6 = true;\n                        uStack140 = 8;\n                    }\n                    else {\n                        iVar2 = iStack120 + 1;\n                        iStack120 = 0;\n                        if (uStack140 != 8) {\n                            iStack120 = iVar2;\n                        }\n                        bVar6 = true;\n                    }\n                }\n                else {\n                    if (!bVar6) goto code_r0x00426bf2;\ncode_r0x004270d9:\n                    if ((*(iVar11 + 0x70) != cVar8) && (*(iVar11 + 0x71) != cVar8)) {\n                        bVar6 = true;\n                        goto code_r0x00426bf2;\n                    }\n                    if (uVar15 == 0) {\n                        iStack120 = 0;\n                        bVar6 = false;\n                        uStack140 = 0x10;\n                    }\n                    else {\n                        if (uStack140 != 0x10) {\n                            bVar6 = true;\n                            goto code_r0x00426bff;\n                        }\n                        iStack120 = 0;\n                        bVar6 = false;\n                    }\n                }\n                piVar13 = *arg3;\n                if (piVar13 != NULL) {\n                    if (piVar13[2] < piVar13[3]) {\n                        piVar13[2] = piVar13[2] + 1;\n                    }\n                    else {\n                        (**(*piVar13 + 0x50))(piVar13);\n                    }\n                    *(arg3 + 1) = 0xffffffff;\n                }\n                cVar8 = fcn.00425240(arg3, arg4);\n                if (cVar8 != '\\0') {\n                    cStack116 = '\\x01';\n                    goto code_r0x00426bf2;\n                }\n                uVar10 = fcn.00425320(arg3);\n                if (!bVar6) goto code_r0x00426bf2;\n                cVar14 = *(iVar11 + 0x20);\n            } while( true );\n        }\n        cVar14 = *(iVar11 + 0x20);\n        if ((cVar14 != '\\0') && (*(iVar11 + 0x49) == cVar8)) {\n            cVar14 = '\\x01';\n            goto code_r0x004270a3;\n        }\n        if (*(iVar11 + 0x48) == cVar8) goto code_r0x004270a3;\n        arg1_00 = fcn.0045dd90(arg3);\n        cVar8 = fcn.00425240(arg1_00, arg4);\n        if (cVar8 == '\\0') {\n            uVar10 = fcn.00425320(arg3);\n            cVar14 = *(iVar11 + 0x20);\n            goto code_r0x004270a3;\n        }\n    }\n    else {\n        uVar10 = 0;\n        bVar18 = false;\n    }\n    cStack116 = '\\x01';\n    iStack120 = 0;\n    bVar6 = false;\ncode_r0x00426bf2:\n    uVar15 = 0x16;\n    if (uStack140 != 0x10) {\ncode_r0x00426bff:\n        uVar15 = uStack140;\n    }\n    aiStack88[0] = fcn.004472c0(0, 0);\n    if (*(iVar11 + 0x20) != '\\0') {\n        fcn.004488f0(aiStack88, 0x20);\n    }\n    uVar4 = 0xffffffff / uStack140;\n    cVar8 = *(iVar11 + 0x88);\n    if (cVar8 == '\\0') {\n        uVar16 = 0;\n        bVar7 = false;\n        if (cStack116 == '\\0') {\ncode_r0x00426c65:\n            cVar8 = uVar10;\n            if (uVar15 < 0xb) {\n                if ((cVar8 < '0') || (uVar15 + '0' <= cVar8)) goto code_r0x00426de0;\ncode_r0x00426c81:\n                uVar10 = cVar8 - 0x30;\ncode_r0x00426c87:\n                if (uVar16 <= uVar4) goto code_r0x00426c91;\ncode_r0x00426e80:\n                bVar7 = true;\n            }\n            else {\n                if (cVar8 - 0x30U < 10) goto code_r0x00426c81;\n                if (cVar8 + 0x9fU < 6) {\n                    uVar10 = cVar8 - 0x57;\n                    goto code_r0x00426c87;\n                }\n                if (5 < cVar8 + 0xbfU) goto code_r0x00426de0;\n                uVar10 = cVar8 - 0x37;\n                if (uVar4 < uVar16) goto code_r0x00426e80;\ncode_r0x00426c91:\n                uVar17 = uVar16 * uStack140;\n                iStack120 = iStack120 + 1;\n                uVar16 = uVar17 + uVar10;\n                bVar7 = bVar7 | ~uVar10 < uVar17;\n            }\n            piVar13 = *arg3;\n            if (piVar13 == NULL) {\ncode_r0x00426e46:\n                cVar8 = '\\x01';\n            }\n            else {\n                uVar3 = piVar13[2];\n                if (uVar3 < piVar13[3]) {\n                    *(arg3 + 1) = 0xffffffff;\n                    piVar13[2] = uVar3 + 1;\n                }\n                else {\n                    (**(*piVar13 + 0x50))();\n                    piVar13 = *arg3;\n                    *(arg3 + 1) = 0xffffffff;\n                    if (piVar13 == NULL) goto code_r0x00426e46;\n                }\n                if (piVar13[2] < piVar13[3]) {\n                    uVar10 = *piVar13[2];\n                }\n                else {\n                    uVar10 = (**(*piVar13 + 0x48))();\n                    if (uVar10 == 0xffffffff) {\n                        *arg3 = NULL;\n                        goto code_r0x00426e46;\n                    }\n                }\n                *(arg3 + 1) = uVar10;\n                cVar8 = '\\0';\n            }\n            piVar13 = *arg4;\n            if (piVar13 == NULL) {\n                cVar14 = '\\x01';\ncode_r0x00426d01:\n                if (cVar8 == cVar14) goto code_r0x00426d09;\n            }\n            else {\n                cVar14 = '\\0';\n                if (*(arg4 + 1) != -1) goto code_r0x00426d01;\n                if (piVar13[2] < piVar13[3]) {\n                    uVar10 = *piVar13[2];\n                }\n                else {\n                    uVar10 = (**(*piVar13 + 0x48))();\n                    if (uVar10 == 0xffffffff) {\n                        *arg4 = NULL;\n                        cVar14 = '\\x01';\n                        goto code_r0x00426d01;\n                    }\n                }\n                *(arg4 + 1) = uVar10;\n                if (cVar8 == '\\0') goto code_r0x00426d09;\n            }\n            piVar13 = *arg3;\n            if (piVar13 == NULL) {\n                uVar10 = 0xffffffff;\n            }\n            else {\n                uVar10 = *(arg3 + 1);\n                if (uVar10 == 0xffffffff) {\n                    if (piVar13[2] < piVar13[3]) {\n                        uVar10 = *piVar13[2];\n                    }\n                    else {\n                        uVar10 = (**(*piVar13 + 0x48))();\n                        if (uVar10 == 0xffffffff) {\n                            *arg3 = NULL;\n                            uVar10 = 0xffffffff;\n                            goto code_r0x00426c65;\n                        }\n                    }\n                    *(arg3 + 1) = uVar10;\n                }\n            }\n            goto code_r0x00426c65;\n        }\n    }\n    else {\n        uVar16 = 0;\n        bVar7 = false;\n        if (cStack116 == '\\0') {\n            do {\n                cVar14 = uVar10;\n                if ((*(iVar11 + 0x20) == '\\0') || (cVar14 != *(iVar11 + 0x49))) {\n                    if ((cVar14 == *(iVar11 + 0x48)) ||\n                       (iVar12 = sub.msvcrt.dll_memchr(iVar11 + 0x72, cVar14, uVar15),  iVar12 == 0)) break;\n                    uVar10 = iVar12 - (iVar11 + 0x72);\n                    if (0xf < uVar10) {\n                        uVar10 = uVar10 - 6;\n                    }\n                    if (uVar4 < uVar16) {\n                        bVar7 = true;\n                    }\n                    else {\n                        uVar17 = uVar16 * uStack140;\n                        iStack120 = iStack120 + 1;\n                        uVar16 = uVar17 + uVar10;\n                        bVar7 = bVar7 | ~uVar10 < uVar17;\n                    }\n                }\n                else {\n                    if (iStack120 == 0) {\n                        bVar5 = true;\n                        goto code_r0x00426d10;\n                    }\n                    fcn.00448b10(aiStack88, iStack120);\n                    iStack120 = 0;\n                }\n                piVar13 = *arg3;\n                cVar14 = cVar8;\n                if (piVar13 != NULL) {\n                    uVar3 = piVar13[2];\n                    if (uVar3 < piVar13[3]) {\n                        *(arg3 + 1) = 0xffffffff;\n                        piVar13[2] = uVar3 + 1;\n                    }\n                    else {\n                        (**(*piVar13 + 0x50))();\n                        piVar13 = *arg3;\n                        *(arg3 + 1) = 0xffffffff;\n                        if (piVar13 == NULL) goto code_r0x00426f91;\n                    }\n                    if (piVar13[2] < piVar13[3]) {\n                        uVar10 = *piVar13[2];\n                    }\n                    else {\n                        uVar10 = (**(*piVar13 + 0x48))();\n                        if (uVar10 == 0xffffffff) {\n                            *arg3 = NULL;\n                            goto code_r0x00426f91;\n                        }\n                    }\n                    *(arg3 + 1) = uVar10;\n                    cVar14 = '\\0';\n                }\ncode_r0x00426f91:\n                piVar13 = *arg4;\n                cVar9 = cVar8;\n                if ((piVar13 != NULL) && (cVar9 = '\\0',  *(arg4 + 1) == -1)) {\n                    if (piVar13[2] < piVar13[3]) {\n                        uVar10 = *piVar13[2];\n                    }\n                    else {\n                        uVar10 = (**(*piVar13 + 0x48))();\n                        if (uVar10 == 0xffffffff) {\n                            *arg4 = NULL;\n                            cVar9 = cVar8;\n                            goto code_r0x00426fa6;\n                        }\n                    }\n                    *(arg4 + 1) = uVar10;\n                    cVar9 = '\\0';\n                }\ncode_r0x00426fa6:\n                if (cVar14 == cVar9) goto code_r0x00426d09;\n                uVar10 = fcn.00425320(arg3);\n            } while( true );\n        }\n    }\ncode_r0x00426de0:\n    bVar5 = false;\n    iVar12 = *(aiStack88[0] + -0x18);\n    goto joined_r0x00426dec;\ncode_r0x00426d09:\n    bVar5 = false;\n    cStack116 = '\\x01';\ncode_r0x00426d10:\n    iVar12 = *(aiStack88[0] + -0x18);\njoined_r0x00426dec:\n    if (iVar12 != 0) {\n        fcn.00448b10(aiStack88, iStack120);\n        cVar8 = fcn.00465040(*(iVar11 + 0x10), *(iVar11 + 0x18), aiStack88);\n        if (cVar8 == '\\0') {\n            *in_stack_00000030 = 4;\n        }\n    }\n    if ((((iStack120 == 0) && (!bVar6)) && (*(aiStack88[0] + -0x18) == 0)) || (bVar5)) {\n        *in_stack_00000038 = 0;\n        *in_stack_00000030 = 4;\n    }\n    else if (bVar7) {\n        *in_stack_00000038 = 0xffffffff;\n        *in_stack_00000030 = 4;\n    }\n    else {\n        if (bVar18) {\n            uVar16 = -uVar16;\n        }\n        *in_stack_00000038 = uVar16;\n    }\n    if (cStack116 != '\\0') {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    piVar13 = arg3[1];\n    *arg1 = *arg3;\n    arg1[1] = piVar13;\n    LOCK();\n    piVar1 = aiStack88[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004477a0(aiStack88[0] + -0x18);\n    }\n    return arg1;\n}\n",
        "token_count": 3724
    },
    "00427320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t ** fcn.00427320(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t **arg4)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    bool bVar6;\n    bool bVar7;\n    char cVar8;\n    char cVar9;\n    uint32_t uVar10;\n    int64_t iVar11;\n    ulong arg1_00;\n    int64_t iVar12;\n    int64_t *piVar13;\n    char cVar14;\n    int32_t iVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    bool bVar18;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uint32_t *in_stack_00000038;\n    uint32_t uStack144;\n    int32_t iStack140;\n    char cStack116;\n    uchar auStack90 [2];\n    int64_t aiStack88 [3];\n    \n    iVar11 = fcn.004247f0(auStack90, in_stack_00000028 + 0xd0);\n    uStack144 = 8;\n    uVar16 = *(in_stack_00000028 + 0x18) & 0x4a;\n    if ((uVar16 != 0x40) && (uStack144 = 10,  uVar16 == 8)) {\n        uStack144 = 0x10;\n    }\n    cStack116 = fcn.00425240(arg3, arg4);\n    if (cStack116 == '\\0') {\n        uVar10 = fcn.00425320(arg3);\n        cVar8 = uVar10;\n        bVar18 = *(iVar11 + 0x6e) == cVar8;\n        if ((!bVar18) && (*(iVar11 + 0x6f) != cVar8)) {\n            cVar14 = *(iVar11 + 0x20);\ncode_r0x004278c3:\n            iStack140 = 0;\n            bVar6 = false;\n            do {\n                cVar8 = uVar10;\n                if (((cVar14 != '\\0') && (*(iVar11 + 0x49) == cVar8)) || (*(iVar11 + 0x48) == cVar8))\n                goto code_r0x004273f2;\n                if (*(iVar11 + 0x72) == cVar8) {\n                    if ((uStack144 != 10) && (bVar6)) goto code_r0x004278f9;\n                    if (uVar16 == 0) {\n                        iStack140 = 0;\n                        bVar6 = true;\n                        uStack144 = 8;\n                    }\n                    else {\n                        iVar15 = iStack140 + 1;\n                        iStack140 = 0;\n                        if (uStack144 != 8) {\n                            iStack140 = iVar15;\n                        }\n                        bVar6 = true;\n                    }\n                }\n                else {\n                    if (!bVar6) goto code_r0x004273f2;\ncode_r0x004278f9:\n                    if ((*(iVar11 + 0x70) != cVar8) && (*(iVar11 + 0x71) != cVar8)) {\n                        bVar6 = true;\n                        goto code_r0x004273f2;\n                    }\n                    if (uVar16 == 0) {\n                        iStack140 = 0;\n                        bVar6 = false;\n                        uStack144 = 0x10;\n                    }\n                    else {\n                        if (uStack144 != 0x10) {\n                            bVar6 = true;\n                            goto code_r0x004273ff;\n                        }\n                        iStack140 = 0;\n                        bVar6 = false;\n                    }\n                }\n                piVar13 = *arg3;\n                if (piVar13 != NULL) {\n                    if (piVar13[2] < piVar13[3]) {\n                        piVar13[2] = piVar13[2] + 1;\n                    }\n                    else {\n                        (**(*piVar13 + 0x50))(piVar13);\n                    }\n                    *(arg3 + 1) = 0xffffffff;\n                }\n                cVar8 = fcn.00425240(arg3, arg4);\n                if (cVar8 != '\\0') {\n                    cStack116 = '\\x01';\n                    goto code_r0x004273f2;\n                }\n                uVar10 = fcn.00425320(arg3);\n                if (!bVar6) goto code_r0x004273f2;\n                cVar14 = *(iVar11 + 0x20);\n            } while( true );\n        }\n        cVar14 = *(iVar11 + 0x20);\n        if ((cVar14 != '\\0') && (*(iVar11 + 0x49) == cVar8)) {\n            cVar14 = '\\x01';\n            goto code_r0x004278c3;\n        }\n        if (*(iVar11 + 0x48) == cVar8) goto code_r0x004278c3;\n        arg1_00 = fcn.0045dd90(arg3);\n        cVar8 = fcn.00425240(arg1_00, arg4);\n        if (cVar8 == '\\0') {\n            uVar10 = fcn.00425320(arg3);\n            cVar14 = *(iVar11 + 0x20);\n            goto code_r0x004278c3;\n        }\n    }\n    else {\n        uVar10 = 0;\n        bVar18 = false;\n    }\n    cStack116 = '\\x01';\n    iStack140 = 0;\n    bVar6 = false;\ncode_r0x004273f2:\n    uVar16 = 0x16;\n    if (uStack144 != 0x10) {\ncode_r0x004273ff:\n        uVar16 = uStack144;\n    }\n    aiStack88[0] = fcn.004472c0(0, 0);\n    if (*(iVar11 + 0x20) != '\\0') {\n        fcn.004488f0(aiStack88, 0x20);\n    }\n    uVar2 = 0x80000000 - !bVar18;\n    uVar4 = uVar2 / uStack144;\n    cVar8 = *(iVar11 + 0x88);\n    if (cVar8 == '\\0') {\n        uVar17 = 0;\n        bVar7 = false;\n        if (cStack116 == '\\0') {\ncode_r0x00427477:\n            cVar8 = uVar10;\n            if (uVar16 < 0xb) {\n                if ((cVar8 < '0') || (uVar16 + '0' <= cVar8)) goto code_r0x00427600;\ncode_r0x00427493:\n                iVar15 = cVar8 + -0x30;\ncode_r0x00427499:\n                if (uVar17 <= uVar4) goto code_r0x004274a3;\ncode_r0x004276a0:\n                bVar7 = true;\n            }\n            else {\n                if (cVar8 - 0x30U < 10) goto code_r0x00427493;\n                if (cVar8 + 0x9fU < 6) {\n                    iVar15 = cVar8 + -0x57;\n                    goto code_r0x00427499;\n                }\n                if (5 < cVar8 + 0xbfU) goto code_r0x00427600;\n                iVar15 = cVar8 + -0x37;\n                if (uVar4 < uVar17) goto code_r0x004276a0;\ncode_r0x004274a3:\n                uVar10 = uVar17 * uStack144;\n                iStack140 = iStack140 + 1;\n                uVar17 = uVar10 + iVar15;\n                bVar7 = bVar7 | uVar2 - iVar15 < uVar10;\n            }\n            piVar13 = *arg3;\n            if (piVar13 == NULL) {\ncode_r0x00427666:\n                cVar8 = '\\x01';\n            }\n            else {\n                uVar3 = piVar13[2];\n                if (uVar3 < piVar13[3]) {\n                    *(arg3 + 1) = 0xffffffff;\n                    piVar13[2] = uVar3 + 1;\n                }\n                else {\n                    (**(*piVar13 + 0x50))();\n                    piVar13 = *arg3;\n                    *(arg3 + 1) = 0xffffffff;\n                    if (piVar13 == NULL) goto code_r0x00427666;\n                }\n                if (piVar13[2] < piVar13[3]) {\n                    uVar10 = *piVar13[2];\n                }\n                else {\n                    uVar10 = (**(*piVar13 + 0x48))();\n                    if (uVar10 == 0xffffffff) {\n                        *arg3 = NULL;\n                        goto code_r0x00427666;\n                    }\n                }\n                *(arg3 + 1) = uVar10;\n                cVar8 = '\\0';\n            }\n            piVar13 = *arg4;\n            if (piVar13 == NULL) {\n                cVar14 = '\\x01';\ncode_r0x00427515:\n                if (cVar14 == cVar8) goto code_r0x0042751d;\n            }\n            else {\n                cVar14 = '\\0';\n                if (*(arg4 + 1) != -1) goto code_r0x00427515;\n                if (piVar13[2] < piVar13[3]) {\n                    uVar10 = *piVar13[2];\n                }\n                else {\n                    uVar10 = (**(*piVar13 + 0x48))();\n                    if (uVar10 == 0xffffffff) {\n                        *arg4 = NULL;\n                        cVar14 = '\\x01';\n                        goto code_r0x00427515;\n                    }\n                }\n                *(arg4 + 1) = uVar10;\n                if (cVar8 == '\\0') goto code_r0x0042751d;\n            }\n            piVar13 = *arg3;\n            if (piVar13 == NULL) {\n                uVar10 = 0xffffffff;\n            }\n            else {\n                uVar10 = *(arg3 + 1);\n                if (uVar10 == 0xffffffff) {\n                    if (piVar13[2] < piVar13[3]) {\n                        uVar10 = *piVar13[2];\n                    }\n                    else {\n                        uVar10 = (**(*piVar13 + 0x48))();\n                        if (uVar10 == 0xffffffff) {\n                            *arg3 = NULL;\n                            uVar10 = 0xffffffff;\n                            goto code_r0x00427477;\n                        }\n                    }\n                    *(arg3 + 1) = uVar10;\n                }\n            }\n            goto code_r0x00427477;\n        }\n    }\n    else {\n        uVar17 = 0;\n        bVar7 = false;\n        if (cStack116 == '\\0') {\n            do {\n                cVar14 = uVar10;\n                if ((*(iVar11 + 0x20) == '\\0') || (cVar14 != *(iVar11 + 0x49))) {\n                    if ((cVar14 == *(iVar11 + 0x48)) ||\n                       (iVar12 = sub.msvcrt.dll_memchr(iVar11 + 0x72, cVar14, uVar16),  iVar12 == 0)) break;\n                    iVar15 = iVar12 - (iVar11 + 0x72);\n                    if (0xf < iVar15) {\n                        iVar15 = iVar15 + -6;\n                    }\n                    if (uVar4 < uVar17) {\n                        bVar7 = true;\n                    }\n                    else {\n                        uVar10 = uVar17 * uStack144;\n                        iStack140 = iStack140 + 1;\n                        uVar17 = uVar10 + iVar15;\n                        bVar7 = bVar7 | uVar2 - iVar15 < uVar10;\n                    }\n                }\n                else {\n                    if (iStack140 == 0) {\n                        bVar5 = true;\n                        goto code_r0x00427524;\n                    }\n                    fcn.00448b10(aiStack88, iStack140);\n                    iStack140 = 0;\n                }\n                piVar13 = *arg3;\n                cVar14 = cVar8;\n                if (piVar13 != NULL) {\n                    uVar3 = piVar13[2];\n                    if (uVar3 < piVar13[3]) {\n                        *(arg3 + 1) = 0xffffffff;\n                        piVar13[2] = uVar3 + 1;\n                    }\n                    else {\n                        (**(*piVar13 + 0x50))();\n                        piVar13 = *arg3;\n                        *(arg3 + 1) = 0xffffffff;\n                        if (piVar13 == NULL) goto code_r0x004277b3;\n                    }\n                    if (piVar13[2] < piVar13[3]) {\n                        uVar10 = *piVar13[2];\n                    }\n                    else {\n                        uVar10 = (**(*piVar13 + 0x48))();\n                        if (uVar10 == 0xffffffff) {\n                            *arg3 = NULL;\n                            goto code_r0x004277b3;\n                        }\n                    }\n                    *(arg3 + 1) = uVar10;\n                    cVar14 = '\\0';\n                }\ncode_r0x004277b3:\n                piVar13 = *arg4;\n                cVar9 = cVar8;\n                if ((piVar13 != NULL) && (cVar9 = '\\0',  *(arg4 + 1) == -1)) {\n                    if (piVar13[2] < piVar13[3]) {\n                        uVar10 = *piVar13[2];\n                    }\n                    else {\n                        uVar10 = (**(*piVar13 + 0x48))();\n                        if (uVar10 == 0xffffffff) {\n                            *arg4 = NULL;\n                            cVar9 = cVar8;\n                            goto code_r0x004277c8;\n                        }\n                    }\n                    *(arg4 + 1) = uVar10;\n                    cVar9 = '\\0';\n                }\ncode_r0x004277c8:\n                if (cVar14 == cVar9) goto code_r0x0042751d;\n                uVar10 = fcn.00425320(arg3);\n            } while( true );\n        }\n    }\ncode_r0x00427600:\n    bVar5 = false;\n    iVar12 = *(aiStack88[0] + -0x18);\n    goto joined_r0x0042760c;\ncode_r0x0042751d:\n    bVar5 = false;\n    cStack116 = '\\x01';\ncode_r0x00427524:\n    iVar12 = *(aiStack88[0] + -0x18);\njoined_r0x0042760c:\n    if (iVar12 != 0) {\n        fcn.00448b10(aiStack88, iStack140);\n        cVar8 = fcn.00465040(*(iVar11 + 0x10), *(iVar11 + 0x18), aiStack88);\n        if (cVar8 == '\\0') {\n            *in_stack_00000030 = 4;\n        }\n    }\n    if ((((iStack140 == 0) && (!bVar6)) && (*(aiStack88[0] + -0x18) == 0)) || (bVar5)) {\n        *in_stack_00000038 = 0;\n        *in_stack_00000030 = 4;\n    }\n    else if (bVar7) {\n        *in_stack_00000038 = 0x80000000 - !bVar18;\n        *in_stack_00000030 = 4;\n    }\n    else {\n        if (bVar18) {\n            uVar17 = -uVar17;\n        }\n        *in_stack_00000038 = uVar17;\n    }\n    if (cStack116 != '\\0') {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    piVar13 = arg3[1];\n    *arg1 = *arg3;\n    arg1[1] = piVar13;\n    LOCK();\n    piVar1 = aiStack88[0] + -8;\n    iVar15 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar15 < 1) {\n        fcn.004477a0(aiStack88[0] + -0x18);\n    }\n    return arg1;\n}\n",
        "token_count": 3727
    },
    "00427b40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t ** fcn.00427b40(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t **arg4)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    bool bVar6;\n    bool bVar7;\n    char cVar8;\n    char cVar9;\n    char cVar10;\n    int64_t iVar11;\n    ulong arg1_00;\n    int64_t iVar12;\n    int64_t *piVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    bool bVar19;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uint32_t *in_stack_00000038;\n    uint32_t uStack140;\n    int32_t iStack120;\n    char cStack116;\n    uchar auStack90 [2];\n    int64_t aiStack88 [3];\n    \n    iVar11 = fcn.004247f0(auStack90, in_stack_00000028 + 0xd0);\n    uStack140 = 8;\n    uVar16 = *(in_stack_00000028 + 0x18) & 0x4a;\n    if ((uVar16 != 0x40) && (uStack140 = 10,  uVar16 == 8)) {\n        uStack140 = 0x10;\n    }\n    cStack116 = fcn.00425240(arg3, arg4);\n    if (cStack116 == '\\0') {\n        cVar8 = fcn.00425320(arg3);\n        bVar19 = *(iVar11 + 0x6e) == cVar8;\n        iVar14 = cVar8;\n        if ((!bVar19) && (*(iVar11 + 0x6f) != cVar8)) {\n            cVar9 = *(iVar11 + 0x20);\ncode_r0x004280a4:\n            iStack120 = 0;\n            bVar6 = false;\n            do {\n                cVar8 = iVar14;\n                if (((cVar9 != '\\0') && (*(iVar11 + 0x49) == cVar8)) || (*(iVar11 + 0x48) == cVar8))\n                goto code_r0x00427c13;\n                if (*(iVar11 + 0x72) == cVar8) {\n                    if ((uStack140 != 10) && (bVar6)) goto code_r0x004280da;\n                    if (uVar16 == 0) {\n                        iStack120 = 0;\n                        bVar6 = true;\n                        uStack140 = 8;\n                    }\n                    else {\n                        iVar2 = iStack120 + 1;\n                        iStack120 = 0;\n                        if (uStack140 != 8) {\n                            iStack120 = iVar2;\n                        }\n                        bVar6 = true;\n                    }\n                }\n                else {\n                    if (!bVar6) goto code_r0x00427c13;\ncode_r0x004280da:\n                    if ((*(iVar11 + 0x70) != cVar8) && (*(iVar11 + 0x71) != cVar8)) {\n                        bVar6 = true;\n                        goto code_r0x00427c13;\n                    }\n                    if (uVar16 == 0) {\n                        iStack120 = 0;\n                        bVar6 = false;\n                        uStack140 = 0x10;\n                    }\n                    else {\n                        if (uStack140 != 0x10) {\n                            bVar6 = true;\n                            goto code_r0x00427c20;\n                        }\n                        iStack120 = 0;\n                        bVar6 = false;\n                    }\n                }\n                piVar13 = *arg3;\n                if (piVar13 != NULL) {\n                    if (piVar13[2] < piVar13[3]) {\n                        piVar13[2] = piVar13[2] + 1;\n                    }\n                    else {\n                        (**(*piVar13 + 0x50))(piVar13);\n                    }\n                    *(arg3 + 1) = 0xffffffff;\n                }\n                cVar8 = fcn.00425240(arg3, arg4);\n                if (cVar8 != '\\0') {\n                    cStack116 = '\\x01';\n                    goto code_r0x00427c13;\n                }\n                cVar8 = fcn.00425320(arg3);\n                iVar14 = cVar8;\n                if (!bVar6) goto code_r0x00427c13;\n                cVar9 = *(iVar11 + 0x20);\n            } while( true );\n        }\n        cVar9 = *(iVar11 + 0x20);\n        if ((cVar9 != '\\0') && (*(iVar11 + 0x49) == cVar8)) {\n            cVar9 = '\\x01';\n            goto code_r0x004280a4;\n        }\n        if (*(iVar11 + 0x48) == cVar8) goto code_r0x004280a4;\n        arg1_00 = fcn.0045dd90(arg3);\n        cVar8 = fcn.00425240(arg1_00, arg4);\n        if (cVar8 == '\\0') {\n            cVar8 = fcn.00425320(arg3);\n            iVar14 = cVar8;\n            cVar9 = *(iVar11 + 0x20);\n            goto code_r0x004280a4;\n        }\n    }\n    else {\n        iVar14 = 0;\n        bVar19 = false;\n    }\n    cStack116 = '\\x01';\n    iStack120 = 0;\n    bVar6 = false;\ncode_r0x00427c13:\n    uVar16 = 0x16;\n    if (uStack140 != 0x10) {\ncode_r0x00427c20:\n        uVar16 = uStack140;\n    }\n    aiStack88[0] = fcn.004472c0(0, 0);\n    if (*(iVar11 + 0x20) != '\\0') {\n        fcn.004488f0(aiStack88, 0x20);\n    }\n    uVar4 = 0xffffffff / uStack140;\n    cVar8 = *(iVar11 + 0x88);\n    if (cVar8 == '\\0') {\n        uVar17 = 0;\n        bVar7 = false;\n        if (cStack116 == '\\0') {\n            do {\n                cVar8 = iVar14;\n                if (uVar16 < 0xb) {\n                    if ((cVar8 < '0') || (uVar16 + '0' <= cVar8)) break;\ncode_r0x00427ca2:\n                    uVar15 = iVar14 - 0x30;\ncode_r0x00427ca5:\n                    if (uVar17 <= uVar4) goto code_r0x00427caf;\ncode_r0x00427ea0:\n                    bVar7 = true;\n                }\n                else {\n                    if (cVar8 - 0x30U < 10) goto code_r0x00427ca2;\n                    if (cVar8 + 0x9fU < 6) {\n                        uVar15 = iVar14 - 0x57;\n                        goto code_r0x00427ca5;\n                    }\n                    if (5 < cVar8 + 0xbfU) break;\n                    uVar15 = iVar14 - 0x37;\n                    if (uVar4 < uVar17) goto code_r0x00427ea0;\ncode_r0x00427caf:\n                    uVar18 = uVar17 * uStack140;\n                    iStack120 = iStack120 + 1;\n                    uVar17 = uVar18 + uVar15;\n                    bVar7 = bVar7 | ~uVar15 < uVar18;\n                }\n                piVar13 = *arg3;\n                if (piVar13 == NULL) {\ncode_r0x00427e66:\n                    cVar8 = '\\x01';\n                }\n                else {\n                    uVar3 = piVar13[2];\n                    if (uVar3 < piVar13[3]) {\n                        *(arg3 + 1) = 0xffffffff;\n                        piVar13[2] = uVar3 + 1;\n                    }\n                    else {\n                        (**(*piVar13 + 0x50))();\n                        piVar13 = *arg3;\n                        *(arg3 + 1) = 0xffffffff;\n                        if (piVar13 == NULL) goto code_r0x00427e66;\n                    }\n                    if (piVar13[2] < piVar13[3]) {\n                        uVar15 = *piVar13[2];\n                    }\n                    else {\n                        uVar15 = (**(*piVar13 + 0x48))();\n                        if (uVar15 == 0xffffffff) {\n                            *arg3 = NULL;\n                            goto code_r0x00427e66;\n                        }\n                    }\n                    *(arg3 + 1) = uVar15;\n                    cVar8 = '\\0';\n                }\n                piVar13 = *arg4;\n                if (piVar13 == NULL) {\n                    cVar9 = '\\x01';\ncode_r0x00427d1f:\n                    if (cVar8 == cVar9) goto code_r0x00427d27;\n                }\n                else {\n                    cVar9 = '\\0';\n                    if (*(arg4 + 1) != -1) goto code_r0x00427d1f;\n                    if (piVar13[2] < piVar13[3]) {\n                        uVar15 = *piVar13[2];\n                    }\n                    else {\n                        uVar15 = (**(*piVar13 + 0x48))();\n                        if (uVar15 == 0xffffffff) {\n                            *arg4 = NULL;\n                            cVar9 = '\\x01';\n                            goto code_r0x00427d1f;\n                        }\n                    }\n                    *(arg4 + 1) = uVar15;\n                    if (cVar8 == '\\0') goto code_r0x00427d27;\n                }\n                cVar8 = fcn.00425320(arg3);\n                iVar14 = cVar8;\n            } while( true );\n        }\n    }\n    else {\n        uVar17 = 0;\n        bVar7 = false;\n        if (cStack116 == '\\0') {\n            do {\n                cVar9 = iVar14;\n                if ((*(iVar11 + 0x20) == '\\0') || (cVar9 != *(iVar11 + 0x49))) {\n                    if ((cVar9 == *(iVar11 + 0x48)) ||\n                       (iVar12 = sub.msvcrt.dll_memchr(iVar11 + 0x72, cVar9, uVar16),  iVar12 == 0)) break;\n                    uVar15 = iVar12 - (iVar11 + 0x72);\n                    if (0xf < uVar15) {\n                        uVar15 = uVar15 - 6;\n                    }\n                    if (uVar4 < uVar17) {\n                        bVar7 = true;\n                    }\n                    else {\n                        uVar18 = uVar17 * uStack140;\n                        iStack120 = iStack120 + 1;\n                        uVar17 = uVar18 + uVar15;\n                        bVar7 = bVar7 | ~uVar15 < uVar18;\n                    }\n                }\n                else {\n                    if (iStack120 == 0) {\n                        bVar5 = true;\n                        goto code_r0x00427d2e;\n                    }\n                    fcn.00448b10(aiStack88, iStack120);\n                    iStack120 = 0;\n                }\n                piVar13 = *arg3;\n                cVar9 = cVar8;\n                if (piVar13 != NULL) {\n                    uVar3 = piVar13[2];\n                    if (uVar3 < piVar13[3]) {\n                        *(arg3 + 1) = 0xffffffff;\n                        piVar13[2] = uVar3 + 1;\n                    }\n                    else {\n                        (**(*piVar13 + 0x50))();\n                        piVar13 = *arg3;\n                        *(arg3 + 1) = 0xffffffff;\n                        if (piVar13 == NULL) goto code_r0x00427f91;\n                    }\n                    if (piVar13[2] < piVar13[3]) {\n                        uVar15 = *piVar13[2];\n                    }\n                    else {\n                        uVar15 = (**(*piVar13 + 0x48))();\n                        if (uVar15 == 0xffffffff) {\n                            *arg3 = NULL;\n                            goto code_r0x00427f91;\n                        }\n                    }\n                    *(arg3 + 1) = uVar15;\n                    cVar9 = '\\0';\n                }\ncode_r0x00427f91:\n                piVar13 = *arg4;\n                cVar10 = cVar8;\n                if ((piVar13 != NULL) && (cVar10 = '\\0',  *(arg4 + 1) == -1)) {\n                    if (piVar13[2] < piVar13[3]) {\n                        uVar15 = *piVar13[2];\n                    }\n                    else {\n                        uVar15 = (**(*piVar13 + 0x48))();\n                        if (uVar15 == 0xffffffff) {\n                            *arg4 = NULL;\n                            cVar10 = cVar8;\n                            goto code_r0x00427fa6;\n                        }\n                    }\n                    *(arg4 + 1) = uVar15;\n                    cVar10 = '\\0';\n                }\ncode_r0x00427fa6:\n                if (cVar9 == cVar10) goto code_r0x00427d27;\n                iVar14 = fcn.00425320(arg3);\n            } while( true );\n        }\n    }\n    bVar5 = false;\n    iVar12 = *(aiStack88[0] + -0x18);\n    goto joined_r0x00427e0c;\ncode_r0x00427d27:\n    bVar5 = false;\n    cStack116 = '\\x01';\ncode_r0x00427d2e:\n    iVar12 = *(aiStack88[0] + -0x18);\njoined_r0x00427e0c:\n    if (iVar12 != 0) {\n        fcn.00448b10(aiStack88, iStack120);\n        cVar8 = fcn.00465040(*(iVar11 + 0x10), *(iVar11 + 0x18), aiStack88);\n        if (cVar8 == '\\0') {\n            *in_stack_00000030 = 4;\n        }\n    }\n    if ((((iStack120 == 0) && (!bVar6)) && (*(aiStack88[0] + -0x18) == 0)) || (bVar5)) {\n        *in_stack_00000038 = 0;\n        *in_stack_00000030 = 4;\n    }\n    else if (bVar7) {\n        *in_stack_00000038 = 0xffffffff;\n        *in_stack_00000030 = 4;\n    }\n    else {\n        if (bVar19) {\n            uVar17 = -uVar17;\n        }\n        *in_stack_00000038 = uVar17;\n    }\n    if (cStack116 != '\\0') {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    piVar13 = arg3[1];\n    *arg1 = *arg3;\n    arg1[1] = piVar13;\n    LOCK();\n    piVar1 = aiStack88[0] + -8;\n    iVar14 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar14 < 1) {\n        fcn.004477a0(aiStack88[0] + -0x18);\n    }\n    return arg1;\n}\n",
        "token_count": 3563
    },
    "00428300": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t ** fcn.00428300(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t **arg4)\n\n{\n    int32_t *piVar1;\n    uint64_t uVar2;\n    uint16_t uVar3;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    char cVar7;\n    char cVar8;\n    uint32_t uVar9;\n    int64_t iVar10;\n    ulong arg1_00;\n    int64_t iVar11;\n    int64_t *piVar12;\n    char cVar13;\n    int32_t iVar14;\n    uint16_t uVar15;\n    uint32_t uVar16;\n    int32_t iVar17;\n    bool bVar18;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uint16_t *in_stack_00000038;\n    uint32_t uStack140;\n    int32_t iStack120;\n    char cStack116;\n    uchar auStack90 [2];\n    int64_t aiStack88 [3];\n    \n    iVar10 = fcn.004247f0(auStack90, in_stack_00000028 + 0xd0);\n    uStack140 = 8;\n    uVar16 = *(in_stack_00000028 + 0x18) & 0x4a;\n    if ((uVar16 != 0x40) && (uStack140 = 10,  uVar16 == 8)) {\n        uStack140 = 0x10;\n    }\n    cStack116 = fcn.00425240(arg3, arg4);\n    if (cStack116 == '\\0') {\n        uVar9 = fcn.00425320(arg3);\n        cVar7 = uVar9;\n        bVar18 = *(iVar10 + 0x6e) == cVar7;\n        if ((!bVar18) && (*(iVar10 + 0x6f) != cVar7)) {\n            cVar13 = *(iVar10 + 0x20);\ncode_r0x00428893:\n            iStack120 = 0;\n            bVar5 = false;\n            do {\n                cVar7 = uVar9;\n                if (((cVar13 != '\\0') && (*(iVar10 + 0x49) == cVar7)) || (*(iVar10 + 0x48) == cVar7))\n                goto code_r0x004283d2;\n                if (*(iVar10 + 0x72) == cVar7) {\n                    if ((uStack140 != 10) && (bVar5)) goto code_r0x004288c9;\n                    if (uVar16 == 0) {\n                        iStack120 = 0;\n                        bVar5 = true;\n                        uStack140 = 8;\n                    }\n                    else {\n                        iVar17 = iStack120 + 1;\n                        iStack120 = 0;\n                        if (uStack140 != 8) {\n                            iStack120 = iVar17;\n                        }\n                        bVar5 = true;\n                    }\n                }\n                else {\n                    if (!bVar5) goto code_r0x004283d2;\ncode_r0x004288c9:\n                    if ((*(iVar10 + 0x70) != cVar7) && (*(iVar10 + 0x71) != cVar7)) {\n                        bVar5 = true;\n                        goto code_r0x004283d2;\n                    }\n                    if (uVar16 == 0) {\n                        iStack120 = 0;\n                        bVar5 = false;\n                        uStack140 = 0x10;\n                    }\n                    else {\n                        if (uStack140 != 0x10) {\n                            bVar5 = true;\n                            goto code_r0x004283df;\n                        }\n                        iStack120 = 0;\n                        bVar5 = false;\n                    }\n                }\n                piVar12 = *arg3;\n                if (piVar12 != NULL) {\n                    if (piVar12[2] < piVar12[3]) {\n                        piVar12[2] = piVar12[2] + 1;\n                    }\n                    else {\n                        (**(*piVar12 + 0x50))(piVar12);\n                    }\n                    *(arg3 + 1) = 0xffffffff;\n                }\n                cVar7 = fcn.00425240(arg3, arg4);\n                if (cVar7 != '\\0') {\n                    cStack116 = '\\x01';\n                    goto code_r0x004283d2;\n                }\n                uVar9 = fcn.00425320(arg3);\n                if (!bVar5) goto code_r0x004283d2;\n                cVar13 = *(iVar10 + 0x20);\n            } while( true );\n        }\n        cVar13 = *(iVar10 + 0x20);\n        if ((cVar13 != '\\0') && (*(iVar10 + 0x49) == cVar7)) {\n            cVar13 = '\\x01';\n            goto code_r0x00428893;\n        }\n        if (*(iVar10 + 0x48) == cVar7) goto code_r0x00428893;\n        arg1_00 = fcn.0045dd90(arg3);\n        cVar7 = fcn.00425240(arg1_00, arg4);\n        if (cVar7 == '\\0') {\n            uVar9 = fcn.00425320(arg3);\n            cVar13 = *(iVar10 + 0x20);\n            goto code_r0x00428893;\n        }\n    }\n    else {\n        uVar9 = 0;\n        bVar18 = false;\n    }\n    cStack116 = '\\x01';\n    iStack120 = 0;\n    bVar5 = false;\ncode_r0x004283d2:\n    uVar16 = 0x16;\n    if (uStack140 != 0x10) {\ncode_r0x004283df:\n        uVar16 = uStack140;\n    }\n    aiStack88[0] = fcn.004472c0(0, 0);\n    if (*(iVar10 + 0x20) != '\\0') {\n        fcn.004488f0(aiStack88, 0x20);\n    }\n    uVar3 = 0xffff / uStack140;\n    cVar7 = *(iVar10 + 0x88);\n    if (cVar7 == '\\0') {\n        iVar17 = 0;\n        uVar15 = 0;\n        bVar6 = false;\n        if (cStack116 == '\\0') {\ncode_r0x0042844f:\n            cVar7 = uVar9;\n            uVar15 = iVar17;\n            if (uVar16 < 0xb) {\n                if ((cVar7 < '0') || (uVar16 + '0' <= cVar7)) goto code_r0x004285d2;\ncode_r0x0042846c:\n                iVar14 = cVar7 + -0x30;\ncode_r0x00428472:\n                if (uVar15 <= uVar3) goto code_r0x0042847d;\ncode_r0x00428670:\n                bVar6 = true;\n            }\n            else {\n                if (cVar7 - 0x30U < 10) goto code_r0x0042846c;\n                if (cVar7 + 0x9fU < 6) {\n                    iVar14 = cVar7 + -0x57;\n                    goto code_r0x00428472;\n                }\n                if (5 < cVar7 + 0xbfU) goto code_r0x004285d2;\n                iVar14 = cVar7 + -0x37;\n                if (uVar3 < uVar15) goto code_r0x00428670;\ncode_r0x0042847d:\n                iStack120 = iStack120 + 1;\n                iVar17 = uVar15 * uStack140 + iVar14;\n                bVar6 = bVar6 | 0xffff - iVar14 < uVar15 * uStack140;\n            }\n            uVar15 = iVar17;\n            piVar12 = *arg3;\n            if (piVar12 == NULL) {\ncode_r0x00428638:\n                cVar7 = '\\x01';\n            }\n            else {\n                uVar2 = piVar12[2];\n                if (uVar2 < piVar12[3]) {\n                    *(arg3 + 1) = 0xffffffff;\n                    piVar12[2] = uVar2 + 1;\n                }\n                else {\n                    (**(*piVar12 + 0x50))();\n                    piVar12 = *arg3;\n                    *(arg3 + 1) = 0xffffffff;\n                    if (piVar12 == NULL) goto code_r0x00428638;\n                }\n                if (piVar12[2] < piVar12[3]) {\n                    uVar9 = *piVar12[2];\n                }\n                else {\n                    uVar9 = (**(*piVar12 + 0x48))();\n                    if (uVar9 == 0xffffffff) {\n                        *arg3 = NULL;\n                        goto code_r0x00428638;\n                    }\n                }\n                *(arg3 + 1) = uVar9;\n                cVar7 = '\\0';\n            }\n            piVar12 = *arg4;\n            if (piVar12 == NULL) {\n                cVar13 = '\\x01';\ncode_r0x004284f2:\n                if (cVar7 == cVar13) goto code_r0x004284fa;\n            }\n            else {\n                cVar13 = '\\0';\n                if (*(arg4 + 1) != -1) goto code_r0x004284f2;\n                if (piVar12[2] < piVar12[3]) {\n                    uVar9 = *piVar12[2];\n                }\n                else {\n                    uVar9 = (**(*piVar12 + 0x48))();\n                    if (uVar9 == 0xffffffff) {\n                        *arg4 = NULL;\n                        cVar13 = '\\x01';\n                        goto code_r0x004284f2;\n                    }\n                }\n                *(arg4 + 1) = uVar9;\n                if (cVar7 == '\\0') goto code_r0x004284fa;\n            }\n            piVar12 = *arg3;\n            if (piVar12 == NULL) {\n                uVar9 = 0xffffffff;\n            }\n            else {\n                uVar9 = *(arg3 + 1);\n                if (uVar9 == 0xffffffff) {\n                    if (piVar12[2] < piVar12[3]) {\n                        uVar9 = *piVar12[2];\n                    }\n                    else {\n                        uVar9 = (**(*piVar12 + 0x48))();\n                        if (uVar9 == 0xffffffff) {\n                            *arg3 = NULL;\n                            uVar9 = 0xffffffff;\n                            goto code_r0x0042844f;\n                        }\n                    }\n                    *(arg3 + 1) = uVar9;\n                }\n            }\n            goto code_r0x0042844f;\n        }\n    }\n    else {\n        iVar17 = 0;\n        uVar15 = 0;\n        bVar6 = false;\n        if (cStack116 == '\\0') {\n            do {\n                uVar15 = iVar17;\n                cVar13 = uVar9;\n                if ((*(iVar10 + 0x20) == '\\0') || (cVar13 != *(iVar10 + 0x49))) {\n                    if ((cVar13 == *(iVar10 + 0x48)) ||\n                       (iVar11 = sub.msvcrt.dll_memchr(iVar10 + 0x72, cVar13, uVar16),  iVar11 == 0)) break;\n                    iVar14 = iVar11 - (iVar10 + 0x72);\n                    if (0xf < iVar14) {\n                        iVar14 = iVar14 + -6;\n                    }\n                    if (uVar3 < uVar15) {\n                        bVar6 = true;\n                    }\n                    else {\n                        iStack120 = iStack120 + 1;\n                        iVar17 = uVar15 * uStack140 + iVar14;\n                        bVar6 = bVar6 | 0xffff - iVar14 < uVar15 * uStack140;\n                    }\n                }\n                else {\n                    if (iStack120 == 0) {\n                        bVar4 = true;\n                        goto code_r0x00428501;\n                    }\n                    fcn.00448b10(aiStack88, iStack120);\n                    iStack120 = 0;\n                }\n                uVar15 = iVar17;\n                piVar12 = *arg3;\n                cVar13 = cVar7;\n                if (piVar12 != NULL) {\n                    uVar2 = piVar12[2];\n                    if (uVar2 < piVar12[3]) {\n                        *(arg3 + 1) = 0xffffffff;\n                        piVar12[2] = uVar2 + 1;\n                    }\n                    else {\n                        (**(*piVar12 + 0x50))();\n                        piVar12 = *arg3;\n                        *(arg3 + 1) = 0xffffffff;\n                        if (piVar12 == NULL) goto code_r0x00428789;\n                    }\n                    if (piVar12[2] < piVar12[3]) {\n                        uVar9 = *piVar12[2];\n                    }\n                    else {\n                        uVar9 = (**(*piVar12 + 0x48))();\n                        if (uVar9 == 0xffffffff) {\n                            *arg3 = NULL;\n                            goto code_r0x00428789;\n                        }\n                    }\n                    *(arg3 + 1) = uVar9;\n                    cVar13 = '\\0';\n                }\ncode_r0x00428789:\n                piVar12 = *arg4;\n                cVar8 = cVar7;\n                if ((piVar12 != NULL) && (cVar8 = '\\0',  *(arg4 + 1) == -1)) {\n                    if (piVar12[2] < piVar12[3]) {\n                        uVar9 = *piVar12[2];\n                    }\n                    else {\n                        uVar9 = (**(*piVar12 + 0x48))();\n                        if (uVar9 == 0xffffffff) {\n                            *arg4 = NULL;\n                            cVar8 = cVar7;\n                            goto code_r0x0042879e;\n                        }\n                    }\n                    *(arg4 + 1) = uVar9;\n                    cVar8 = '\\0';\n                }\ncode_r0x0042879e:\n                if (cVar13 == cVar8) goto code_r0x004284fa;\n                uVar9 = fcn.00425320(arg3);\n            } while( true );\n        }\n    }\ncode_r0x004285d2:\n    bVar4 = false;\n    iVar11 = *(aiStack88[0] + -0x18);\n    goto joined_r0x004285de;\ncode_r0x004284fa:\n    bVar4 = false;\n    cStack116 = '\\x01';\ncode_r0x00428501:\n    iVar11 = *(aiStack88[0] + -0x18);\njoined_r0x004285de:\n    if (iVar11 != 0) {\n        fcn.00448b10(aiStack88, iStack120);\n        cVar7 = fcn.00465040(*(iVar10 + 0x10), *(iVar10 + 0x18), aiStack88);\n        if (cVar7 == '\\0') {\n            *in_stack_00000030 = 4;\n        }\n    }\n    if ((((iStack120 == 0) && (!bVar5)) && (*(aiStack88[0] + -0x18) == 0)) || (bVar4)) {\n        *in_stack_00000038 = 0;\n        *in_stack_00000030 = 4;\n    }\n    else if (bVar6) {\n        *in_stack_00000038 = 0xffff;\n        *in_stack_00000030 = 4;\n    }\n    else {\n        if (bVar18) {\n            uVar15 = -uVar15;\n        }\n        *in_stack_00000038 = uVar15;\n    }\n    if (cStack116 != '\\0') {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    piVar12 = arg3[1];\n    *arg1 = *arg3;\n    arg1[1] = piVar12;\n    LOCK();\n    piVar1 = aiStack88[0] + -8;\n    iVar17 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar17 < 1) {\n        fcn.004477a0(aiStack88[0] + -0x18);\n    }\n    return arg1;\n}\n",
        "token_count": 3731
    },
    "00428b10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t ** fcn.00428b10(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t **arg4)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    bool bVar3;\n    bool bVar4;\n    bool bVar5;\n    char cVar6;\n    char cVar7;\n    char cVar8;\n    uint32_t uVar9;\n    int64_t iVar10;\n    ulong arg1_00;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    int64_t iVar13;\n    int64_t *piVar14;\n    uint64_t uVar15;\n    int32_t iVar16;\n    uint64_t uVar17;\n    uint64_t uVar18;\n    uint32_t uVar19;\n    bool bVar20;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uint64_t *in_stack_00000038;\n    int32_t iStack120;\n    char cStack116;\n    uchar auStack90 [2];\n    int64_t aiStack88 [3];\n    \n    uVar9 = 8;\n    iVar10 = fcn.004247f0(auStack90, in_stack_00000028 + 0xd0);\n    uVar19 = *(in_stack_00000028 + 0x18) & 0x4a;\n    if ((uVar19 != 0x40) && (uVar9 = 0x10,  uVar19 != 8)) {\n        uVar9 = 10;\n    }\n    cStack116 = fcn.00425240(arg3, arg4);\n    if (cStack116 == '\\0') {\n        cVar6 = fcn.00425320(arg3);\n        bVar20 = *(iVar10 + 0x6e) == cVar6;\n        iVar16 = cVar6;\n        if ((!bVar20) && (*(iVar10 + 0x6f) != cVar6)) {\n            cVar7 = *(iVar10 + 0x20);\ncode_r0x004290c5:\n            iStack120 = 0;\n            bVar4 = false;\n            do {\n                cVar6 = iVar16;\n                if (((cVar7 != '\\0') && (*(iVar10 + 0x49) == cVar6)) || (*(iVar10 + 0x48) == cVar6))\n                goto code_r0x00428be1;\n                if (*(iVar10 + 0x72) == cVar6) {\n                    if ((uVar9 != 10) && (bVar4)) goto code_r0x004290fb;\n                    if (uVar19 == 0) {\n                        iStack120 = 0;\n                        bVar4 = true;\n                        uVar9 = 8;\n                    }\n                    else {\n                        iVar2 = iStack120 + 1;\n                        iStack120 = 0;\n                        if (uVar9 != 8) {\n                            iStack120 = iVar2;\n                        }\n                        bVar4 = true;\n                    }\n                }\n                else {\n                    if (!bVar4) goto code_r0x00428be1;\ncode_r0x004290fb:\n                    if ((*(iVar10 + 0x70) != cVar6) && (*(iVar10 + 0x71) != cVar6)) {\n                        bVar4 = true;\n                        goto code_r0x00428be1;\n                    }\n                    if (uVar19 == 0) {\n                        iStack120 = 0;\n                        bVar4 = false;\n                        uVar9 = 0x10;\n                    }\n                    else {\n                        if (uVar9 != 0x10) {\n                            bVar4 = true;\n                            goto code_r0x00428bec;\n                        }\n                        iStack120 = 0;\n                        bVar4 = false;\n                    }\n                }\n                piVar14 = *arg3;\n                if (piVar14 != NULL) {\n                    if (piVar14[2] < piVar14[3]) {\n                        piVar14[2] = piVar14[2] + 1;\n                    }\n                    else {\n                        (**(*piVar14 + 0x50))();\n                    }\n                    *(arg3 + 1) = 0xffffffff;\n                }\n                cVar6 = fcn.00425240(arg3, arg4);\n                if (cVar6 != '\\0') {\n                    cStack116 = '\\x01';\n                    goto code_r0x00428be1;\n                }\n                cVar6 = fcn.00425320(arg3);\n                iVar16 = cVar6;\n                if (!bVar4) goto code_r0x00428be1;\n                cVar7 = *(iVar10 + 0x20);\n            } while( true );\n        }\n        cVar7 = *(iVar10 + 0x20);\n        if ((cVar7 != '\\0') && (*(iVar10 + 0x49) == cVar6)) {\n            cVar7 = '\\x01';\n            goto code_r0x004290c5;\n        }\n        if (*(iVar10 + 0x48) == cVar6) goto code_r0x004290c5;\n        arg1_00 = fcn.0045dd90(arg3);\n        cVar6 = fcn.00425240(arg1_00, arg4);\n        if (cVar6 == '\\0') {\n            cVar6 = fcn.00425320(arg3);\n            iVar16 = cVar6;\n            cVar7 = *(iVar10 + 0x20);\n            goto code_r0x004290c5;\n        }\n    }\n    else {\n        iVar16 = 0;\n        bVar20 = false;\n    }\n    cStack116 = '\\x01';\n    iStack120 = 0;\n    bVar4 = false;\ncode_r0x00428be1:\n    uVar19 = 0x16;\n    if (uVar9 != 0x10) {\ncode_r0x00428bec:\n        uVar19 = uVar9;\n    }\n    aiStack88[0] = fcn.004472c0(0, 0);\n    if (*(iVar10 + 0x20) != '\\0') {\n        fcn.004488f0(aiStack88, 0x20);\n    }\n    uVar11 = 0x7fffffffffffffff;\n    if (bVar20) {\n        uVar11 = 0x8000000000000000;\n    }\n    uVar15 = uVar9;\n    uVar12 = uVar11 / uVar15;\n    cVar6 = *(iVar10 + 0x88);\n    if (cVar6 == '\\0') {\n        uVar18 = 0;\n        bVar5 = false;\n        if (cStack116 == '\\0') {\n            do {\n                cVar6 = iVar16;\n                if (uVar19 < 0xb) {\n                    if ((cVar6 < '0') || (uVar19 + '0' <= cVar6)) break;\ncode_r0x00428c97:\n                    iVar16 = iVar16 + -0x30;\ncode_r0x00428c9a:\n                    if (uVar18 <= uVar12) goto code_r0x00428ca5;\ncode_r0x00428ec0:\n                    bVar5 = true;\n                }\n                else {\n                    if (cVar6 - 0x30U < 10) goto code_r0x00428c97;\n                    if (cVar6 + 0x9fU < 6) {\n                        iVar16 = iVar16 + -0x57;\n                        goto code_r0x00428c9a;\n                    }\n                    if (5 < cVar6 + 0xbfU) break;\n                    iVar16 = iVar16 + -0x37;\n                    if (uVar12 < uVar18) goto code_r0x00428ec0;\ncode_r0x00428ca5:\n                    uVar17 = uVar18 * uVar15;\n                    iStack120 = iStack120 + 1;\n                    uVar18 = uVar17 + iVar16;\n                    bVar5 = bVar5 | uVar11 - iVar16 < uVar17;\n                }\n                piVar14 = *arg3;\n                if (piVar14 == NULL) {\ncode_r0x00428e86:\n                    cVar6 = '\\x01';\n                }\n                else {\n                    uVar17 = piVar14[2];\n                    if (uVar17 < piVar14[3]) {\n                        *(arg3 + 1) = 0xffffffff;\n                        piVar14[2] = uVar17 + 1;\n                    }\n                    else {\n                        (**(*piVar14 + 0x50))();\n                        piVar14 = *arg3;\n                        *(arg3 + 1) = 0xffffffff;\n                        if (piVar14 == NULL) goto code_r0x00428e86;\n                    }\n                    if (piVar14[2] < piVar14[3]) {\n                        uVar9 = *piVar14[2];\n                    }\n                    else {\n                        uVar9 = (**(*piVar14 + 0x48))();\n                        if (uVar9 == 0xffffffff) {\n                            *arg3 = NULL;\n                            goto code_r0x00428e86;\n                        }\n                    }\n                    *(arg3 + 1) = uVar9;\n                    cVar6 = '\\0';\n                }\n                piVar14 = *arg4;\n                if (piVar14 == NULL) {\n                    cVar7 = '\\x01';\ncode_r0x00428d1f:\n                    if (cVar6 == cVar7) goto code_r0x00428d27;\n                }\n                else {\n                    cVar7 = '\\0';\n                    if (*(arg4 + 1) != -1) goto code_r0x00428d1f;\n                    if (piVar14[2] < piVar14[3]) {\n                        uVar9 = *piVar14[2];\n                    }\n                    else {\n                        uVar9 = (**(*piVar14 + 0x48))();\n                        if (uVar9 == 0xffffffff) {\n                            *arg4 = NULL;\n                            cVar7 = '\\x01';\n                            goto code_r0x00428d1f;\n                        }\n                    }\n                    *(arg4 + 1) = uVar9;\n                    if (cVar6 == '\\0') goto code_r0x00428d27;\n                }\n                cVar6 = fcn.00425320(arg3);\n                iVar16 = cVar6;\n            } while( true );\n        }\n    }\n    else {\n        uVar18 = 0;\n        bVar5 = false;\n        if (cStack116 == '\\0') {\n            do {\n                cVar7 = iVar16;\n                if ((*(iVar10 + 0x20) == '\\0') || (cVar7 != *(iVar10 + 0x49))) {\n                    if ((cVar7 == *(iVar10 + 0x48)) ||\n                       (iVar13 = sub.msvcrt.dll_memchr(iVar10 + 0x72, cVar7, uVar19),  iVar13 == 0)) break;\n                    iVar16 = iVar13 - (iVar10 + 0x72);\n                    if (0xf < iVar16) {\n                        iVar16 = iVar16 + -6;\n                    }\n                    if (uVar12 < uVar18) {\n                        bVar5 = true;\n                    }\n                    else {\n                        uVar17 = uVar18 * uVar15;\n                        iStack120 = iStack120 + 1;\n                        uVar18 = uVar17 + iVar16;\n                        bVar5 = bVar5 | uVar11 - iVar16 < uVar17;\n                    }\n                }\n                else {\n                    if (iStack120 == 0) {\n                        bVar3 = true;\n                        goto code_r0x00428d2e;\n                    }\n                    fcn.00448b10(aiStack88, iStack120);\n                    iStack120 = 0;\n                }\n                piVar14 = *arg3;\n                cVar7 = cVar6;\n                if (piVar14 != NULL) {\n                    uVar17 = piVar14[2];\n                    if (uVar17 < piVar14[3]) {\n                        *(arg3 + 1) = 0xffffffff;\n                        piVar14[2] = uVar17 + 1;\n                    }\n                    else {\n                        (**(*piVar14 + 0x50))();\n                        piVar14 = *arg3;\n                        *(arg3 + 1) = 0xffffffff;\n                        if (piVar14 == NULL) goto code_r0x00428fbb;\n                    }\n                    if (piVar14[2] < piVar14[3]) {\n                        uVar9 = *piVar14[2];\n                    }\n                    else {\n                        uVar9 = (**(*piVar14 + 0x48))();\n                        if (uVar9 == 0xffffffff) {\n                            *arg3 = NULL;\n                            goto code_r0x00428fbb;\n                        }\n                    }\n                    *(arg3 + 1) = uVar9;\n                    cVar7 = '\\0';\n                }\ncode_r0x00428fbb:\n                piVar14 = *arg4;\n                cVar8 = cVar6;\n                if ((piVar14 != NULL) && (cVar8 = '\\0',  *(arg4 + 1) == -1)) {\n                    if (piVar14[2] < piVar14[3]) {\n                        uVar9 = *piVar14[2];\n                    }\n                    else {\n                        uVar9 = (**(*piVar14 + 0x48))();\n                        if (uVar9 == 0xffffffff) {\n                            *arg4 = NULL;\n                            cVar8 = cVar6;\n                            goto code_r0x00428fd0;\n                        }\n                    }\n                    *(arg4 + 1) = uVar9;\n                    cVar8 = '\\0';\n                }\ncode_r0x00428fd0:\n                if (cVar8 == cVar7) goto code_r0x00428d27;\n                iVar16 = fcn.00425320(arg3);\n            } while( true );\n        }\n    }\n    bVar3 = false;\n    iVar13 = *(aiStack88[0] + -0x18);\n    goto joined_r0x00428e2c;\ncode_r0x00428d27:\n    bVar3 = false;\n    cStack116 = '\\x01';\ncode_r0x00428d2e:\n    iVar13 = *(aiStack88[0] + -0x18);\njoined_r0x00428e2c:\n    if (iVar13 != 0) {\n        fcn.00448b10(aiStack88, iStack120);\n        cVar6 = fcn.00465040(*(iVar10 + 0x10), *(iVar10 + 0x18), aiStack88);\n        if (cVar6 == '\\0') {\n            *in_stack_00000030 = 4;\n        }\n    }\n    if ((((iStack120 == 0) && (!bVar4)) && (*(aiStack88[0] + -0x18) == 0)) || (bVar3)) {\n        *in_stack_00000038 = 0;\n        *in_stack_00000030 = 4;\n    }\n    else if (bVar5) {\n        uVar11 = 0x8000000000000000;\n        if (!bVar20) {\n            uVar11 = 0x7fffffffffffffff;\n        }\n        *in_stack_00000038 = uVar11;\n        *in_stack_00000030 = 4;\n    }\n    else {\n        if (bVar20) {\n            uVar18 = -uVar18;\n        }\n        *in_stack_00000038 = uVar18;\n    }\n    if (cStack116 != '\\0') {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    piVar14 = arg3[1];\n    *arg1 = *arg3;\n    arg1[1] = piVar14;\n    LOCK();\n    piVar1 = aiStack88[0] + -8;\n    iVar16 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar16 < 1) {\n        fcn.004477a0(aiStack88[0] + -0x18);\n    }\n    return arg1;\n}\n",
        "token_count": 3640
    },
    "00429320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t ** fcn.00429320(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t **arg4)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    bool bVar3;\n    bool bVar4;\n    bool bVar5;\n    char cVar6;\n    char cVar7;\n    char cVar8;\n    uint32_t uVar9;\n    int64_t iVar10;\n    ulong arg1_00;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    int64_t iVar13;\n    int64_t *piVar14;\n    int32_t iVar15;\n    uint64_t uVar16;\n    uint64_t uVar17;\n    uint32_t uVar18;\n    bool bVar19;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uint64_t *in_stack_00000038;\n    int32_t iStack120;\n    char cStack116;\n    uchar auStack90 [2];\n    int64_t aiStack88 [3];\n    \n    uVar9 = 8;\n    iVar10 = fcn.004247f0(auStack90, in_stack_00000028 + 0xd0);\n    uVar18 = *(in_stack_00000028 + 0x18) & 0x4a;\n    if ((uVar18 != 0x40) && (uVar9 = 0x10,  uVar18 != 8)) {\n        uVar9 = 10;\n    }\n    cStack116 = fcn.00425240(arg3, arg4);\n    if (cStack116 == '\\0') {\n        cVar6 = fcn.00425320(arg3);\n        bVar19 = *(iVar10 + 0x6e) == cVar6;\n        iVar15 = cVar6;\n        if ((!bVar19) && (*(iVar10 + 0x6f) != cVar6)) {\n            cVar7 = *(iVar10 + 0x20);\ncode_r0x00429895:\n            iStack120 = 0;\n            bVar4 = false;\n            do {\n                cVar6 = iVar15;\n                if (((cVar7 != '\\0') && (*(iVar10 + 0x49) == cVar6)) || (*(iVar10 + 0x48) == cVar6))\n                goto code_r0x004293ee;\n                if (*(iVar10 + 0x72) == cVar6) {\n                    if ((uVar9 != 10) && (bVar4)) goto code_r0x004298cb;\n                    if (uVar18 == 0) {\n                        iStack120 = 0;\n                        bVar4 = true;\n                        uVar9 = 8;\n                    }\n                    else {\n                        iVar2 = iStack120 + 1;\n                        iStack120 = 0;\n                        if (uVar9 != 8) {\n                            iStack120 = iVar2;\n                        }\n                        bVar4 = true;\n                    }\n                }\n                else {\n                    if (!bVar4) goto code_r0x004293ee;\ncode_r0x004298cb:\n                    if ((*(iVar10 + 0x70) != cVar6) && (*(iVar10 + 0x71) != cVar6)) {\n                        bVar4 = true;\n                        goto code_r0x004293ee;\n                    }\n                    if (uVar18 == 0) {\n                        iStack120 = 0;\n                        bVar4 = false;\n                        uVar9 = 0x10;\n                    }\n                    else {\n                        if (uVar9 != 0x10) {\n                            bVar4 = true;\n                            goto code_r0x004293f9;\n                        }\n                        iStack120 = 0;\n                        bVar4 = false;\n                    }\n                }\n                piVar14 = *arg3;\n                if (piVar14 != NULL) {\n                    if (piVar14[2] < piVar14[3]) {\n                        piVar14[2] = piVar14[2] + 1;\n                    }\n                    else {\n                        (**(*piVar14 + 0x50))();\n                    }\n                    *(arg3 + 1) = 0xffffffff;\n                }\n                cVar6 = fcn.00425240(arg3, arg4);\n                if (cVar6 != '\\0') {\n                    cStack116 = '\\x01';\n                    goto code_r0x004293ee;\n                }\n                cVar6 = fcn.00425320(arg3);\n                iVar15 = cVar6;\n                if (!bVar4) goto code_r0x004293ee;\n                cVar7 = *(iVar10 + 0x20);\n            } while( true );\n        }\n        cVar7 = *(iVar10 + 0x20);\n        if ((cVar7 != '\\0') && (*(iVar10 + 0x49) == cVar6)) {\n            cVar7 = '\\x01';\n            goto code_r0x00429895;\n        }\n        if (*(iVar10 + 0x48) == cVar6) goto code_r0x00429895;\n        arg1_00 = fcn.0045dd90(arg3);\n        cVar6 = fcn.00425240(arg1_00, arg4);\n        if (cVar6 == '\\0') {\n            cVar6 = fcn.00425320(arg3);\n            iVar15 = cVar6;\n            cVar7 = *(iVar10 + 0x20);\n            goto code_r0x00429895;\n        }\n    }\n    else {\n        iVar15 = 0;\n        bVar19 = false;\n    }\n    cStack116 = '\\x01';\n    iStack120 = 0;\n    bVar4 = false;\ncode_r0x004293ee:\n    uVar18 = 0x16;\n    if (uVar9 != 0x10) {\ncode_r0x004293f9:\n        uVar18 = uVar9;\n    }\n    aiStack88[0] = fcn.004472c0(0, 0);\n    if (*(iVar10 + 0x20) != '\\0') {\n        fcn.004488f0(aiStack88, 0x20);\n    }\n    uVar11 = uVar9;\n    uVar12 = SUB168((ZEXT816(0) << 0x40 | ZEXT816(0xffffffffffffffff)) / ZEXT816(uVar11), 0);\n    cVar6 = *(iVar10 + 0x88);\n    if (cVar6 == '\\0') {\n        uVar17 = 0;\n        bVar5 = false;\n        if (cStack116 == '\\0') {\n            do {\n                cVar6 = iVar15;\n                if (uVar18 < 0xb) {\n                    if ((cVar6 < '0') || (uVar18 + '0' <= cVar6)) break;\ncode_r0x00429486:\n                    iVar15 = iVar15 + -0x30;\ncode_r0x00429489:\n                    if (uVar17 <= uVar12) goto code_r0x00429494;\ncode_r0x00429690:\n                    bVar5 = true;\n                }\n                else {\n                    if (cVar6 - 0x30U < 10) goto code_r0x00429486;\n                    if (cVar6 + 0x9fU < 6) {\n                        iVar15 = iVar15 + -0x57;\n                        goto code_r0x00429489;\n                    }\n                    if (5 < cVar6 + 0xbfU) break;\n                    iVar15 = iVar15 + -0x37;\n                    if (uVar12 < uVar17) goto code_r0x00429690;\ncode_r0x00429494:\n                    uVar16 = uVar17 * uVar11;\n                    iStack120 = iStack120 + 1;\n                    uVar17 = uVar16 + iVar15;\n                    bVar5 = bVar5 | ~iVar15 < uVar16;\n                }\n                piVar14 = *arg3;\n                if (piVar14 == NULL) {\ncode_r0x00429656:\n                    cVar6 = '\\x01';\n                }\n                else {\n                    uVar16 = piVar14[2];\n                    if (uVar16 < piVar14[3]) {\n                        *(arg3 + 1) = 0xffffffff;\n                        piVar14[2] = uVar16 + 1;\n                    }\n                    else {\n                        (**(*piVar14 + 0x50))();\n                        piVar14 = *arg3;\n                        *(arg3 + 1) = 0xffffffff;\n                        if (piVar14 == NULL) goto code_r0x00429656;\n                    }\n                    if (piVar14[2] < piVar14[3]) {\n                        uVar9 = *piVar14[2];\n                    }\n                    else {\n                        uVar9 = (**(*piVar14 + 0x48))();\n                        if (uVar9 == 0xffffffff) {\n                            *arg3 = NULL;\n                            goto code_r0x00429656;\n                        }\n                    }\n                    *(arg3 + 1) = uVar9;\n                    cVar6 = '\\0';\n                }\n                piVar14 = *arg4;\n                if (piVar14 == NULL) {\n                    cVar7 = '\\x01';\ncode_r0x0042950c:\n                    if (cVar6 == cVar7) goto code_r0x00429514;\n                }\n                else {\n                    cVar7 = '\\0';\n                    if (*(arg4 + 1) != -1) goto code_r0x0042950c;\n                    if (piVar14[2] < piVar14[3]) {\n                        uVar9 = *piVar14[2];\n                    }\n                    else {\n                        uVar9 = (**(*piVar14 + 0x48))();\n                        if (uVar9 == 0xffffffff) {\n                            *arg4 = NULL;\n                            cVar7 = '\\x01';\n                            goto code_r0x0042950c;\n                        }\n                    }\n                    *(arg4 + 1) = uVar9;\n                    if (cVar6 == '\\0') goto code_r0x00429514;\n                }\n                cVar6 = fcn.00425320(arg3);\n                iVar15 = cVar6;\n            } while( true );\n        }\n    }\n    else {\n        uVar17 = 0;\n        bVar5 = false;\n        if (cStack116 == '\\0') {\n            do {\n                cVar7 = iVar15;\n                if ((*(iVar10 + 0x20) == '\\0') || (cVar7 != *(iVar10 + 0x49))) {\n                    if ((cVar7 == *(iVar10 + 0x48)) ||\n                       (iVar13 = sub.msvcrt.dll_memchr(iVar10 + 0x72, cVar7, uVar18),  iVar13 == 0)) break;\n                    iVar15 = iVar13 - (iVar10 + 0x72);\n                    if (0xf < iVar15) {\n                        iVar15 = iVar15 + -6;\n                    }\n                    if (uVar12 < uVar17) {\n                        bVar5 = true;\n                    }\n                    else {\n                        uVar16 = uVar17 * uVar11;\n                        iStack120 = iStack120 + 1;\n                        uVar17 = uVar16 + iVar15;\n                        bVar5 = bVar5 | ~iVar15 < uVar16;\n                    }\n                }\n                else {\n                    if (iStack120 == 0) {\n                        bVar3 = true;\n                        goto code_r0x0042951b;\n                    }\n                    fcn.00448b10(aiStack88, iStack120);\n                    iStack120 = 0;\n                }\n                piVar14 = *arg3;\n                cVar7 = cVar6;\n                if (piVar14 != NULL) {\n                    uVar16 = piVar14[2];\n                    if (uVar16 < piVar14[3]) {\n                        *(arg3 + 1) = 0xffffffff;\n                        piVar14[2] = uVar16 + 1;\n                    }\n                    else {\n                        (**(*piVar14 + 0x50))();\n                        piVar14 = *arg3;\n                        *(arg3 + 1) = 0xffffffff;\n                        if (piVar14 == NULL) goto code_r0x00429789;\n                    }\n                    if (piVar14[2] < piVar14[3]) {\n                        uVar9 = *piVar14[2];\n                    }\n                    else {\n                        uVar9 = (**(*piVar14 + 0x48))();\n                        if (uVar9 == 0xffffffff) {\n                            *arg3 = NULL;\n                            goto code_r0x00429789;\n                        }\n                    }\n                    *(arg3 + 1) = uVar9;\n                    cVar7 = '\\0';\n                }\ncode_r0x00429789:\n                piVar14 = *arg4;\n                cVar8 = cVar6;\n                if ((piVar14 != NULL) && (cVar8 = '\\0',  *(arg4 + 1) == -1)) {\n                    if (piVar14[2] < piVar14[3]) {\n                        uVar9 = *piVar14[2];\n                    }\n                    else {\n                        uVar9 = (**(*piVar14 + 0x48))();\n                        if (uVar9 == 0xffffffff) {\n                            *arg4 = NULL;\n                            cVar8 = cVar6;\n                            goto code_r0x0042979e;\n                        }\n                    }\n                    *(arg4 + 1) = uVar9;\n                    cVar8 = '\\0';\n                }\ncode_r0x0042979e:\n                if (cVar7 == cVar8) goto code_r0x00429514;\n                iVar15 = fcn.00425320(arg3);\n            } while( true );\n        }\n    }\n    bVar3 = false;\n    iVar13 = *(aiStack88[0] + -0x18);\n    goto joined_r0x00429525;\ncode_r0x00429514:\n    bVar3 = false;\n    cStack116 = '\\x01';\ncode_r0x0042951b:\n    iVar13 = *(aiStack88[0] + -0x18);\njoined_r0x00429525:\n    if (iVar13 != 0) {\n        fcn.00448b10(aiStack88, iStack120);\n        cVar6 = fcn.00465040(*(iVar10 + 0x10), *(iVar10 + 0x18), aiStack88);\n        if (cVar6 == '\\0') {\n            *in_stack_00000030 = 4;\n        }\n    }\n    if ((((iStack120 == 0) && (!bVar4)) && (*(aiStack88[0] + -0x18) == 0)) || (bVar3)) {\n        *in_stack_00000038 = 0;\n        *in_stack_00000030 = 4;\n    }\n    else if (bVar5) {\n        *in_stack_00000038 = 0xffffffffffffffff;\n        *in_stack_00000030 = 4;\n    }\n    else {\n        if (bVar19) {\n            uVar17 = -uVar17;\n        }\n        *in_stack_00000038 = uVar17;\n    }\n    if (cStack116 != '\\0') {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    piVar14 = arg3[1];\n    *arg1 = *arg3;\n    arg1[1] = piVar14;\n    LOCK();\n    piVar1 = aiStack88[0] + -8;\n    iVar15 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar15 < 1) {\n        fcn.004477a0(aiStack88[0] + -0x18);\n    }\n    return arg1;\n}\n",
        "token_count": 3541
    },
    "00429af0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t ** fcn.00429af0(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t **arg4)\n\n{\n    uint64_t uVar1;\n    bool bVar2;\n    char cVar3;\n    char cVar4;\n    char cVar5;\n    char cVar6;\n    uint32_t uVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    int64_t *piVar11;\n    ulong uVar12;\n    int64_t iVar13;\n    int32_t iVar14;\n    bool bVar15;\n    int64_t in_stack_00000028;\n    uint *in_stack_00000030;\n    int64_t *in_stack_00000038;\n    uchar auStack90 [2];\n    int64_t aiStack88 [3];\n    \n    cVar4 = '\\0';\n    iVar8 = fcn.004247f0(auStack90, in_stack_00000028 + 0xd0);\n    cVar3 = fcn.00425240(arg3, arg4);\n    if (cVar3 == '\\0') {\n        cVar4 = fcn.00425320(arg3);\n        bVar15 = *(iVar8 + 0x6f) != cVar4;\n        if ((bVar15) && (*(iVar8 + 0x6e) != cVar4)) {\n            cVar6 = *(iVar8 + 0x20);\ncode_r0x0042a175:\n            iVar14 = 0;\n            bVar15 = false;\n            do {\n                if ((((cVar6 != '\\0') && (*(iVar8 + 0x49) == cVar4)) || (*(iVar8 + 0x48) == cVar4)) ||\n                   (cVar6 = *(iVar8 + 0x72),  cVar6 != cVar4)) goto code_r0x00429b53;\n                if (!bVar15) {\n                    fcn.00448b10(in_stack_00000038, 0x30);\n                }\n                piVar11 = *arg3;\n                iVar14 = iVar14 + 1;\n                if (piVar11 == NULL) {\ncode_r0x0042a2d7:\n                    cVar4 = '\\x01';\n                }\n                else {\n                    uVar1 = piVar11[2];\n                    if (uVar1 < piVar11[3]) {\n                        *(arg3 + 1) = 0xffffffff;\n                        piVar11[2] = uVar1 + 1;\n                    }\n                    else {\n                        (**(*piVar11 + 0x50))();\n                        piVar11 = *arg3;\n                        *(arg3 + 1) = 0xffffffff;\n                        if (piVar11 == NULL) goto code_r0x0042a2d7;\n                    }\n                    if (piVar11[2] < piVar11[3]) {\n                        uVar7 = *piVar11[2];\n                    }\n                    else {\n                        uVar7 = (**(*piVar11 + 0x48))();\n                        if (uVar7 == 0xffffffff) {\n                            *arg3 = NULL;\n                            goto code_r0x0042a2d7;\n                        }\n                    }\n                    *(arg3 + 1) = uVar7;\n                    cVar4 = '\\0';\n                }\n                piVar11 = *arg4;\n                if (piVar11 == NULL) {\n                    cVar5 = '\\x01';\ncode_r0x0042a209:\n                    if (cVar4 == cVar5) goto code_r0x0042a212;\n                }\n                else {\n                    cVar5 = '\\0';\n                    if (*(arg4 + 1) != -1) goto code_r0x0042a209;\n                    if (piVar11[2] < piVar11[3]) {\n                        uVar7 = *piVar11[2];\n                    }\n                    else {\n                        uVar7 = (**(*piVar11 + 0x48))();\n                        if (uVar7 == 0xffffffff) {\n                            *arg4 = NULL;\n                            cVar5 = '\\x01';\n                            goto code_r0x0042a209;\n                        }\n                    }\n                    *(arg4 + 1) = uVar7;\n                    if (cVar4 == '\\0') goto code_r0x0042a212;\n                }\n                bVar15 = true;\n                cVar4 = fcn.00425320(arg3);\n                cVar6 = *(iVar8 + 0x20);\n            } while( true );\n        }\n        cVar6 = *(iVar8 + 0x20);\n        if ((cVar6 != '\\0') && (*(iVar8 + 0x49) == cVar4)) {\n            cVar6 = '\\x01';\n            goto code_r0x0042a175;\n        }\n        if (*(iVar8 + 0x48) == cVar4) goto code_r0x0042a175;\n        fcn.00448b10(in_stack_00000038, (-bVar15 & 2) + 0x2b);\n        uVar12 = fcn.0045dd90(arg3);\n        cVar6 = fcn.00425240(uVar12, arg4);\n        if (cVar6 == '\\0') {\n            cVar4 = fcn.00425320(arg3);\n            cVar6 = *(iVar8 + 0x20);\n            goto code_r0x0042a175;\n        }\n    }\n    iVar14 = 0;\n    bVar15 = false;\n    cVar3 = '\\x01';\n    goto code_r0x00429b53;\ncode_r0x0042a340:\n    cVar3 = '\\x01';\n    bVar15 = true;\n    goto code_r0x00429e7c;\ncode_r0x0042a351:\n    cVar3 = '\\x01';\n    goto code_r0x00429c51;\ncode_r0x0042a212:\n    bVar15 = true;\n    cVar3 = '\\x01';\n    cVar4 = cVar6;\ncode_r0x00429b53:\n    aiStack88[0] = fcn.004472c0(0, 0);\n    if (*(iVar8 + 0x20) != '\\0') {\n        fcn.004488f0(aiStack88, 0x20);\n    }\n    cVar6 = *(iVar8 + 0x88);\n    if (cVar6 == '\\0') {\n        if (cVar3 == '\\0') {\n            bVar2 = false;\ncode_r0x00429b99:\n            if (9 < cVar4 - 0x30U) goto code_r0x00429d24;\n            do {\n                iVar9 = *in_stack_00000038;\n                iVar10 = *(iVar9 + -0x18);\n                uVar1 = iVar10 + 1;\n                if ((*(iVar9 + -0x10) <= uVar1 && uVar1 != *(iVar9 + -0x10)) || (0 < *(iVar9 + -8))) {\n                    fcn.004488f0(in_stack_00000038, uVar1);\n                    iVar9 = *in_stack_00000038;\n                    iVar10 = *(iVar9 + -0x18);\n                }\n                *(iVar9 + iVar10) = cVar4;\n                iVar9 = *in_stack_00000038;\n                *(iVar9 + -0x18) = uVar1;\n                *(iVar9 + -8) = 0;\n                *(iVar9 + uVar1) = 0;\n                bVar15 = true;\ncode_r0x00429bf0:\n                piVar11 = *arg3;\n                if (piVar11 == NULL) {\ncode_r0x00429cdd:\n                    cVar4 = '\\x01';\n                }\n                else {\n                    uVar1 = piVar11[2];\n                    if (uVar1 < piVar11[3]) {\n                        *(arg3 + 1) = 0xffffffff;\n                        piVar11[2] = uVar1 + 1;\n                    }\n                    else {\n                        (**(*piVar11 + 0x50))();\n                        piVar11 = *arg3;\n                        *(arg3 + 1) = 0xffffffff;\n                        if (piVar11 == NULL) goto code_r0x00429cdd;\n                    }\n                    if (piVar11[2] < piVar11[3]) {\n                        uVar7 = *piVar11[2];\n                    }\n                    else {\n                        uVar7 = (**(*piVar11 + 0x48))();\n                        if (uVar7 == 0xffffffff) {\n                            *arg3 = NULL;\n                            goto code_r0x00429cdd;\n                        }\n                    }\n                    *(arg3 + 1) = uVar7;\n                    cVar4 = '\\0';\n                }\n                piVar11 = *arg4;\n                if (piVar11 == NULL) {\n                    cVar6 = '\\x01';\ncode_r0x00429c48:\n                    if (cVar6 == cVar4) goto code_r0x00429c51;\n                }\n                else {\n                    cVar6 = '\\0';\n                    if (*(arg4 + 1) != -1) goto code_r0x00429c48;\n                    if (piVar11[2] < piVar11[3]) {\n                        uVar7 = *piVar11[2];\n                    }\n                    else {\n                        uVar7 = (**(*piVar11 + 0x48))();\n                        if (uVar7 == 0xffffffff) {\n                            *arg4 = NULL;\n                            cVar6 = '\\x01';\n                            goto code_r0x00429c48;\n                        }\n                    }\n                    *(arg4 + 1) = uVar7;\n                    if (cVar4 == '\\0') goto code_r0x00429c51;\n                }\n                cVar4 = fcn.00425320(arg3);\n            } while (cVar4 - 0x30U < 10);\ncode_r0x00429d24:\n            if (((*(iVar8 + 0x48) != cVar4) || (bVar2)) || (cVar3 != '\\0')) {\n                if (((*(iVar8 + 0x80) != cVar4) && (*(iVar8 + 0x86) != cVar4)) || ((cVar3 != '\\0' || (!bVar15))))\n                goto code_r0x00429c51;\n                iVar9 = *in_stack_00000038;\n                iVar10 = *(iVar9 + -0x18);\n                uVar1 = iVar10 + 1;\n                if ((*(iVar9 + -0x10) <= uVar1 && uVar1 != *(iVar9 + -0x10)) || (0 < *(iVar9 + -8))) {\n                    fcn.004488f0(in_stack_00000038, uVar1);\n                    iVar9 = *in_stack_00000038;\n                    iVar10 = *(iVar9 + -0x18);\n                }\n                *(iVar9 + iVar10) = 0x65;\n                iVar9 = *in_stack_00000038;\n                *(iVar9 + -8) = 0;\n                *(iVar9 + -0x18) = uVar1;\n                *(iVar9 + uVar1) = 0;\n                piVar11 = *arg3;\n                if (piVar11 != NULL) {\n                    if (piVar11[2] < piVar11[3]) {\n                        piVar11[2] = piVar11[2] + 1;\n                    }\n                    else {\n                        (**(*piVar11 + 0x50))();\n                    }\n                    *(arg3 + 1) = 0xffffffff;\n                }\n                cVar3 = fcn.00425240(arg3, arg4);\n                if (cVar3 != '\\0') goto code_r0x0042a351;\n                cVar4 = fcn.00425320(arg3);\n                if (*(iVar8 + 0x6f) == cVar4) {\n                    uVar12 = 0x2b;\n                }\n                else {\n                    cVar3 = '\\x01';\n                    bVar15 = true;\n                    uVar12 = 0x2d;\n                    if (*(iVar8 + 0x6e) != cVar4) goto code_r0x00429b99;\n                }\n                fcn.00448b10(in_stack_00000038, uVar12);\n                cVar3 = '\\x01';\n                bVar15 = true;\n            }\n            else {\n                fcn.00448b10(in_stack_00000038, 0x2e);\n                cVar3 = '\\0';\n                bVar2 = true;\n            }\n            goto code_r0x00429bf0;\n        }\n    }\n    else if (cVar3 == '\\0') {\n        cVar3 = '\\0';\n        bVar2 = false;\n        cVar5 = *(iVar8 + 0x20);\ncode_r0x00429e78:\n        if (cVar5 == '\\0') goto code_r0x00429e86;\ncode_r0x00429e7c:\n        if (cVar4 == *(iVar8 + 0x49)) goto code_r0x00429f82;\ncode_r0x00429e86:\n        if (cVar4 == *(iVar8 + 0x48)) {\n            if ((cVar3 != '\\0') || (bVar2)) goto code_r0x00429c51;\n            if (*(aiStack88[0] + -0x18) != 0) {\n                fcn.00448b10(aiStack88, iVar14);\n            }\n            fcn.00448b10(in_stack_00000038, 0x2e);\n            cVar3 = '\\0';\n            bVar2 = true;\n        }\n        else {\n            iVar9 = sub.msvcrt.dll_memchr(iVar8 + 0x72, cVar4, 10);\n            if (iVar9 == 0) {\n                if (((cVar4 != *(iVar8 + 0x80)) && (cVar4 != *(iVar8 + 0x86))) || ((cVar3 != '\\0' || (!bVar15))))\n                goto code_r0x00429c51;\n                if ((*(aiStack88[0] + -0x18) != 0) && (!bVar2)) {\n                    fcn.00448b10(aiStack88, iVar14);\n                }\n                fcn.00448b10(in_stack_00000038, 0x65);\n                uVar12 = fcn.0045dd90(arg3);\n                cVar3 = fcn.00425240(uVar12, arg4);\n                if (cVar3 != '\\0') goto code_r0x0042a351;\n                cVar4 = fcn.00425320(arg3);\n                bVar15 = *(iVar8 + 0x6f) != cVar4;\n                if ((bVar15) && (*(iVar8 + 0x6e) != cVar4)) {\n                    cVar5 = *(iVar8 + 0x20);\n                    cVar3 = '\\x01';\n                    bVar15 = true;\n                    goto code_r0x00429e78;\n                }\n                cVar5 = *(iVar8 + 0x20);\n                if ((cVar5 != '\\0') && (*(iVar8 + 0x49) == cVar4)) goto code_r0x0042a340;\n                if (*(iVar8 + 0x48) == cVar4) {\n                    cVar3 = '\\x01';\n                    bVar15 = true;\n                    goto code_r0x00429e78;\n                }\n                fcn.00448b10(in_stack_00000038, (-bVar15 & 2) + 0x2b);\n                cVar3 = '\\x01';\n                bVar15 = true;\n            }\n            else {\n                iVar10 = *in_stack_00000038;\n                iVar13 = *(iVar10 + -0x18);\n                uVar1 = iVar13 + 1;\n                if ((*(iVar10 + -0x10) <= uVar1 && uVar1 != *(iVar10 + -0x10)) || (0 < *(iVar10 + -8))) {\n                    fcn.004488f0(in_stack_00000038, uVar1);\n                    iVar10 = *in_stack_00000038;\n                    iVar13 = *(iVar10 + -0x18);\n                }\n                *(iVar10 + iVar13) = (iVar9 - (iVar8 + 0x72)) + '0';\n                iVar9 = *in_stack_00000038;\n                iVar14 = iVar14 + 1;\n                bVar15 = true;\n                *(iVar9 + -8) = 0;\n                *(iVar9 + -0x18) = uVar1;\n                *(iVar9 + uVar1) = 0;\n            }\n        }\n        piVar11 = *arg3;\n        do {\n            cVar4 = cVar6;\n            if (piVar11 != NULL) {\n                uVar1 = piVar11[2];\n                if (uVar1 < piVar11[3]) {\n                    *(arg3 + 1) = 0xffffffff;\n                    piVar11[2] = uVar1 + 1;\n                }\n                else {\n                    (**(*piVar11 + 0x50))();\n                    piVar11 = *arg3;\n                    *(arg3 + 1) = 0xffffffff;\n                    if (piVar11 == NULL) goto code_r0x00429f44;\n                }\n                if (piVar11[2] < piVar11[3]) {\n                    uVar7 = *piVar11[2];\n                }\n                else {\n                    uVar7 = (**(*piVar11 + 0x48))();\n                    if (uVar7 == 0xffffffff) {\n                        *arg3 = NULL;\n                        goto code_r0x00429f44;\n                    }\n                }\n                *(arg3 + 1) = uVar7;\n                cVar4 = '\\0';\n            }\ncode_r0x00429f44:\n            piVar11 = *arg4;\n            cVar5 = cVar6;\n            if ((piVar11 != NULL) && (cVar5 = '\\0',  *(arg4 + 1) == -1)) {\n                if (piVar11[2] < piVar11[3]) {\n                    uVar7 = *piVar11[2];\n                }\n                else {\n                    uVar7 = (**(*piVar11 + 0x48))();\n                    if (uVar7 == 0xffffffff) {\n                        *arg4 = NULL;\n                        cVar5 = cVar6;\n                        goto code_r0x00429f59;\n                    }\n                }\n                *(arg4 + 1) = uVar7;\n                cVar5 = '\\0';\n            }\ncode_r0x00429f59:\n            if (cVar5 == cVar4) goto code_r0x00429c51;\n            cVar4 = fcn.00425320(arg3);\n            if ((*(iVar8 + 0x20) == '\\0') || (cVar4 != *(iVar8 + 0x49))) goto code_r0x00429e86;\ncode_r0x00429f82:\n            if ((cVar3 != '\\0') || (bVar2)) goto code_r0x00429c51;\n            if (iVar14 == 0) {\n                fcn.004489d0(in_stack_00000038, 0, *(*in_stack_00000038 + -0x18), 0);\n                break;\n            }\n            fcn.00448b10(aiStack88, iVar14);\n            piVar11 = *arg3;\n            cVar3 = '\\0';\n            iVar14 = 0;\n            bVar2 = false;\n        } while( true );\n    }\n    cVar3 = '\\0';\n    bVar2 = false;\ncode_r0x00429c51:\n    iVar9 = aiStack88[0];\n    if (*(aiStack88[0] + -0x18) != 0) {\n        if ((cVar3 == '\\0') && (!bVar2)) {\n            fcn.00448b10(aiStack88, iVar14);\n        }\n        iVar9 = aiStack88[0];\n        cVar3 = fcn.00465040(*(iVar8 + 0x10), *(iVar8 + 0x18), aiStack88);\n        if (cVar3 == '\\0') {\n            *in_stack_00000030 = 4;\n        }\n    }\n    piVar11 = *arg3;\n    arg1[1] = arg3[1];\n    *arg1 = piVar11;\n    fcn.004477b0(iVar9 + -0x18);\n    return arg1;\n}\n",
        "token_count": 4606
    },
    "0042b770": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t ** fcn.0042b770(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t **arg4)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    bool bVar3;\n    bool bVar4;\n    bool bVar5;\n    char cVar6;\n    char cVar7;\n    char cVar8;\n    uint16_t uVar9;\n    int16_t iVar10;\n    int64_t iVar11;\n    ulong arg1_00;\n    int16_t *piVar12;\n    int64_t *piVar13;\n    uint64_t uVar14;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint64_t uVar19;\n    int32_t iVar20;\n    bool bVar21;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uint32_t *in_stack_00000038;\n    uint32_t uStack148;\n    char cStack116;\n    uchar auStack90 [2];\n    int64_t aiStack88 [3];\n    \n    iVar11 = fcn.004248f0(auStack90, in_stack_00000028 + 0xd0);\n    uStack148 = 8;\n    uVar16 = *(in_stack_00000028 + 0x18) & 0x4a;\n    if ((uVar16 != 0x40) && (uStack148 = 10,  uVar16 == 8)) {\n        uStack148 = 0x10;\n    }\n    cStack116 = fcn.00425380(arg3, arg4);\n    if (cStack116 == '\\0') {\n        uVar9 = fcn.00425470(arg3);\n        uVar15 = uVar9;\n        bVar21 = *(iVar11 + 0x94) == uVar9;\n        if ((!bVar21) && (*(iVar11 + 0x96) != uVar9)) {\n            cVar6 = *(iVar11 + 0x20);\ncode_r0x0042bd18:\n            iVar20 = 0;\n            bVar4 = false;\n            do {\n                iVar10 = uVar15;\n                if (((cVar6 != '\\0') && (*(iVar11 + 0x4a) == iVar10)) || (*(iVar11 + 0x48) == iVar10))\n                goto code_r0x0042b843;\n                if (*(iVar11 + 0x9c) == iVar10) {\n                    if ((uStack148 != 10) && (bVar4)) goto code_r0x0042bd4f;\n                    if (uVar16 == 0) {\n                        iVar20 = 0;\n                        bVar4 = true;\n                        uStack148 = 8;\n                    }\n                    else {\n                        iVar20 = iVar20 + 1;\n                        bVar4 = true;\n                        if (uStack148 == 8) {\n                            iVar20 = 0;\n                        }\n                    }\n                }\n                else {\n                    if (!bVar4) goto code_r0x0042b843;\ncode_r0x0042bd4f:\n                    if ((*(iVar11 + 0x98) != iVar10) && (*(iVar11 + 0x9a) != iVar10)) {\n                        bVar4 = true;\n                        goto code_r0x0042b843;\n                    }\n                    if (uVar16 == 0) {\n                        iVar20 = 0;\n                        bVar4 = false;\n                        uStack148 = 0x10;\n                    }\n                    else {\n                        if (uStack148 != 0x10) {\n                            bVar4 = true;\n                            goto code_r0x0042b850;\n                        }\n                        iVar20 = 0;\n                        bVar4 = false;\n                    }\n                }\n                piVar13 = *arg3;\n                if (piVar13 != NULL) {\n                    if (piVar13[2] < piVar13[3]) {\n                        piVar13[2] = piVar13[2] + 2;\n                    }\n                    else {\n                        (**(*piVar13 + 0x50))();\n                    }\n                    *(arg3 + 1) = 0xffff;\n                }\n                cVar6 = fcn.00425380(arg3, arg4);\n                if (cVar6 != '\\0') {\n                    cStack116 = '\\x01';\n                    goto code_r0x0042b843;\n                }\n                uVar9 = fcn.00425470(arg3);\n                uVar15 = uVar9;\n                if (!bVar4) goto code_r0x0042b843;\n                cVar6 = *(iVar11 + 0x20);\n            } while( true );\n        }\n        cVar6 = *(iVar11 + 0x20);\n        if ((cVar6 != '\\0') && (*(iVar11 + 0x4a) == uVar9)) {\n            cVar6 = '\\x01';\n            goto code_r0x0042bd18;\n        }\n        if (*(iVar11 + 0x48) == uVar9) goto code_r0x0042bd18;\n        arg1_00 = fcn.0045ddd0(arg3);\n        cVar6 = fcn.00425380(arg1_00, arg4);\n        if (cVar6 == '\\0') {\n            uVar9 = fcn.00425470(arg3);\n            uVar15 = uVar9;\n            cVar6 = *(iVar11 + 0x20);\n            goto code_r0x0042bd18;\n        }\n    }\n    else {\n        uVar15 = 0;\n        bVar21 = false;\n    }\n    cStack116 = '\\x01';\n    iVar20 = 0;\n    bVar4 = false;\ncode_r0x0042b843:\n    uVar19 = 0x16;\n    if (uStack148 != 0x10) {\ncode_r0x0042b850:\n        uVar19 = uStack148;\n    }\n    aiStack88[0] = fcn.004472c0(0, 0);\n    if (*(iVar11 + 0x20) != '\\0') {\n        fcn.004488f0(aiStack88, 0x20);\n    }\n    uVar16 = 0xffffffff / uStack148;\n    cVar6 = *(iVar11 + 200);\n    if (cVar6 == '\\0') {\n        uVar17 = 0;\n        bVar5 = false;\n        if (cStack116 == '\\0') {\n            if (10 < uVar19) goto code_r0x0042ba94;\ncode_r0x0042b8cd:\n            if ((0x2f < uVar15) && (uVar15 < uVar19 + 0x30U)) {\ncode_r0x0042b8e2:\n                uVar15 = uVar15 - 0x30;\ncode_r0x0042b8e5:\n                if (uVar16 < uVar17) goto code_r0x0042bac4;\ncode_r0x0042b8ef:\n                uVar18 = uVar17 * uStack148;\n                uVar17 = uVar18 + uVar15;\n                iVar20 = iVar20 + 1;\n                bVar5 = bVar5 | ~uVar15 < uVar18;\n                do {\n                    piVar13 = *arg3;\n                    if (piVar13 == NULL) {\ncode_r0x0042ba65:\n                        bVar3 = true;\n                        cVar6 = '\\x01';\n                        piVar13 = *arg4;\n                        if (piVar13 != NULL) goto code_r0x0042b960;\ncode_r0x0042ba72:\n                        if (bVar3) goto code_r0x0042b975;\n                    }\n                    else {\n                        if (piVar13[2] < piVar13[3]) {\n                            piVar13[2] = piVar13[2] + 2;\n                            *(arg3 + 1) = 0xffff;\n                        }\n                        else {\n                            (**(*piVar13 + 0x50))();\n                            piVar13 = *arg3;\n                            *(arg3 + 1) = 0xffff;\n                            if (piVar13 == NULL) goto code_r0x0042ba65;\n                        }\n                        if (piVar13[2] < piVar13[3]) {\n                            iVar10 = *piVar13[2];\n                        }\n                        else {\n                            iVar10 = (**(*piVar13 + 0x48))();\n                        }\n                        if (iVar10 == -1) {\n                            *arg3 = NULL;\n                            goto code_r0x0042ba65;\n                        }\n                        piVar13 = *arg4;\n                        bVar3 = false;\n                        cVar6 = '\\0';\n                        *(arg3 + 1) = iVar10;\n                        if (piVar13 == NULL) goto code_r0x0042ba72;\ncode_r0x0042b960:\n                        cVar7 = '\\0';\n                        if (*(arg4 + 1) == -1) {\n                            if (piVar13[2] < piVar13[3]) {\n                                iVar10 = *piVar13[2];\n                            }\n                            else {\n                                iVar10 = (**(*piVar13 + 0x48))();\n                            }\n                            if (iVar10 == -1) {\n                                *arg4 = NULL;\n                                cVar7 = '\\x01';\n                            }\n                            else {\n                                *(arg4 + 1) = iVar10;\n                                cVar7 = '\\0';\n                            }\n                        }\n                        if (cVar7 == cVar6) goto code_r0x0042b975;\n                    }\n                    uVar9 = fcn.00425470(arg3);\n                    uVar15 = uVar9;\n                    if (uVar19 < 0xb) goto code_r0x0042b8cd;\ncode_r0x0042ba94:\n                    iVar10 = uVar15;\n                    if (iVar10 - 0x30U < 10) goto code_r0x0042b8e2;\n                    if (iVar10 - 0x61U < 6) {\n                        uVar15 = uVar15 - 0x57;\n                        goto code_r0x0042b8e5;\n                    }\n                    if (5 < iVar10 - 0x41U) break;\n                    uVar15 = uVar15 - 0x37;\n                    if (uVar17 <= uVar16) goto code_r0x0042b8ef;\ncode_r0x0042bac4:\n                    bVar5 = true;\n                } while( true );\n            }\n        }\n    }\n    else {\n        uVar17 = 0;\n        bVar5 = false;\n        if (cStack116 == '\\0') {\n            do {\n                iVar10 = uVar15;\n                if ((*(iVar11 + 0x20) == '\\0') || (iVar10 != *(iVar11 + 0x4a))) {\n                    piVar12 = iVar11 + 0x9c;\n                    uVar14 = uVar19;\n                    if (iVar10 == *(iVar11 + 0x48)) break;\n                    while (iVar10 != *piVar12) {\n                        uVar14 = uVar14 - 1;\n                        piVar12 = piVar12 + 1;\n                        if (uVar14 == 0) goto code_r0x0042bb23;\n                    }\n                    uVar15 = piVar12 - (iVar11 + 0x9c) >> 1;\n                    if (0xf < uVar15) {\n                        uVar15 = uVar15 - 6;\n                    }\n                    if (uVar16 < uVar17) {\n                        bVar5 = true;\n                    }\n                    else {\n                        uVar18 = uVar17 * uStack148;\n                        uVar17 = uVar18 + uVar15;\n                        iVar20 = iVar20 + 1;\n                        bVar5 = bVar5 | ~uVar15 < uVar18;\n                    }\n                }\n                else {\n                    if (iVar20 == 0) {\n                        bVar3 = true;\n                        goto code_r0x0042b97c;\n                    }\n                    fcn.00448b10(aiStack88, iVar20);\n                    iVar20 = 0;\n                }\n                piVar13 = *arg3;\n                if (piVar13 == NULL) {\ncode_r0x0042bc75:\n                    piVar13 = *arg4;\n                    cVar7 = cVar6;\n                }\n                else {\n                    if (piVar13[2] < piVar13[3]) {\n                        piVar13[2] = piVar13[2] + 2;\n                        *(arg3 + 1) = 0xffff;\n                    }\n                    else {\n                        (**(*piVar13 + 0x50))();\n                        piVar13 = *arg3;\n                        *(arg3 + 1) = 0xffff;\n                        if (piVar13 == NULL) goto code_r0x0042bc75;\n                    }\n                    if (piVar13[2] < piVar13[3]) {\n                        iVar10 = *piVar13[2];\n                    }\n                    else {\n                        iVar10 = (**(*piVar13 + 0x48))();\n                    }\n                    if (iVar10 == -1) {\n                        *arg3 = NULL;\n                        goto code_r0x0042bc75;\n                    }\n                    piVar13 = *arg4;\n                    cVar7 = '\\0';\n                    *(arg3 + 1) = iVar10;\n                }\n                cVar8 = cVar6;\n                if ((piVar13 != NULL) && (cVar8 = '\\0',  *(arg4 + 1) == -1)) {\n                    if (piVar13[2] < piVar13[3]) {\n                        iVar10 = *piVar13[2];\n                    }\n                    else {\n                        iVar10 = (**(*piVar13 + 0x48))();\n                    }\n                    if (iVar10 == -1) {\n                        *arg4 = NULL;\n                        cVar8 = cVar6;\n                    }\n                    else {\n                        *(arg4 + 1) = iVar10;\n                        cVar8 = '\\0';\n                    }\n                }\n                if (cVar7 == cVar8) goto code_r0x0042b975;\n                uVar15 = fcn.00425470(arg3);\n            } while( true );\n        }\n    }\ncode_r0x0042bb23:\n    bVar3 = false;\n    iVar2 = *(aiStack88[0] + -0x18);\n    goto joined_r0x0042bb2f;\ncode_r0x0042b975:\n    bVar3 = false;\n    cStack116 = '\\x01';\ncode_r0x0042b97c:\n    iVar2 = *(aiStack88[0] + -0x18);\njoined_r0x0042bb2f:\n    if (iVar2 != 0) {\n        fcn.00448b10(aiStack88, iVar20);\n        cVar6 = fcn.00465040(*(iVar11 + 0x10), *(iVar11 + 0x18), aiStack88);\n        if (cVar6 == '\\0') {\n            *in_stack_00000030 = 4;\n        }\n    }\n    if ((((iVar20 == 0) && (!bVar4)) && (*(aiStack88[0] + -0x18) == 0)) || (bVar3)) {\n        *in_stack_00000038 = 0;\n        *in_stack_00000030 = 4;\n    }\n    else if (bVar5) {\n        *in_stack_00000038 = 0xffffffff;\n        *in_stack_00000030 = 4;\n    }\n    else {\n        if (bVar21) {\n            uVar17 = -uVar17;\n        }\n        *in_stack_00000038 = uVar17;\n    }\n    if (cStack116 != '\\0') {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    piVar13 = arg3[1];\n    *arg1 = *arg3;\n    arg1[1] = piVar13;\n    LOCK();\n    piVar1 = aiStack88[0] + -8;\n    iVar20 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar20 < 1) {\n        fcn.004477a0(aiStack88[0] + -0x18);\n    }\n    return arg1;\n}\n",
        "token_count": 3658
    },
    "0042bf50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t ** fcn.0042bf50(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t **arg4)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    char cVar7;\n    char cVar8;\n    char cVar9;\n    uint16_t uVar10;\n    int16_t iVar11;\n    int64_t iVar12;\n    ulong arg1_00;\n    int16_t *piVar13;\n    int64_t *piVar14;\n    uint64_t uVar15;\n    int32_t iVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    uint64_t uVar20;\n    int32_t iVar21;\n    bool bVar22;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uint32_t *in_stack_00000038;\n    uint32_t uStack152;\n    char cStack116;\n    uchar auStack90 [2];\n    int64_t aiStack88 [3];\n    \n    iVar12 = fcn.004248f0(auStack90, in_stack_00000028 + 0xd0);\n    uStack152 = 8;\n    uVar17 = *(in_stack_00000028 + 0x18) & 0x4a;\n    if ((uVar17 != 0x40) && (uStack152 = 10,  uVar17 == 8)) {\n        uStack152 = 0x10;\n    }\n    cStack116 = fcn.00425380(arg3, arg4);\n    if (cStack116 == '\\0') {\n        uVar10 = fcn.00425470(arg3);\n        uVar19 = uVar10;\n        bVar22 = *(iVar12 + 0x94) == uVar10;\n        if ((!bVar22) && (*(iVar12 + 0x96) != uVar10)) {\n            cVar7 = *(iVar12 + 0x20);\ncode_r0x0042c514:\n            iVar21 = 0;\n            bVar5 = false;\n            do {\n                iVar11 = uVar19;\n                if (((cVar7 != '\\0') && (*(iVar12 + 0x4a) == iVar11)) || (*(iVar12 + 0x48) == iVar11))\n                goto code_r0x0042c023;\n                if (*(iVar12 + 0x9c) == iVar11) {\n                    if ((uStack152 != 10) && (bVar5)) goto code_r0x0042c54b;\n                    if (uVar17 == 0) {\n                        iVar21 = 0;\n                        bVar5 = true;\n                        uStack152 = 8;\n                    }\n                    else {\n                        iVar21 = iVar21 + 1;\n                        bVar5 = true;\n                        if (uStack152 == 8) {\n                            iVar21 = 0;\n                        }\n                    }\n                }\n                else {\n                    if (!bVar5) goto code_r0x0042c023;\ncode_r0x0042c54b:\n                    if ((*(iVar12 + 0x98) != iVar11) && (*(iVar12 + 0x9a) != iVar11)) {\n                        bVar5 = true;\n                        goto code_r0x0042c023;\n                    }\n                    if (uVar17 == 0) {\n                        iVar21 = 0;\n                        bVar5 = false;\n                        uStack152 = 0x10;\n                    }\n                    else {\n                        if (uStack152 != 0x10) {\n                            bVar5 = true;\n                            goto code_r0x0042c030;\n                        }\n                        iVar21 = 0;\n                        bVar5 = false;\n                    }\n                }\n                piVar14 = *arg3;\n                if (piVar14 != NULL) {\n                    if (piVar14[2] < piVar14[3]) {\n                        piVar14[2] = piVar14[2] + 2;\n                    }\n                    else {\n                        (**(*piVar14 + 0x50))();\n                    }\n                    *(arg3 + 1) = 0xffff;\n                }\n                cVar7 = fcn.00425380(arg3, arg4);\n                if (cVar7 != '\\0') {\n                    cStack116 = '\\x01';\n                    goto code_r0x0042c023;\n                }\n                uVar10 = fcn.00425470(arg3);\n                uVar19 = uVar10;\n                if (!bVar5) goto code_r0x0042c023;\n                cVar7 = *(iVar12 + 0x20);\n            } while( true );\n        }\n        cVar7 = *(iVar12 + 0x20);\n        if ((cVar7 != '\\0') && (*(iVar12 + 0x4a) == uVar10)) {\n            cVar7 = '\\x01';\n            goto code_r0x0042c514;\n        }\n        if (*(iVar12 + 0x48) == uVar10) goto code_r0x0042c514;\n        arg1_00 = fcn.0045ddd0(arg3);\n        cVar7 = fcn.00425380(arg1_00, arg4);\n        if (cVar7 == '\\0') {\n            uVar10 = fcn.00425470(arg3);\n            uVar19 = uVar10;\n            cVar7 = *(iVar12 + 0x20);\n            goto code_r0x0042c514;\n        }\n    }\n    else {\n        uVar19 = 0;\n        bVar22 = false;\n    }\n    cStack116 = '\\x01';\n    iVar21 = 0;\n    bVar5 = false;\ncode_r0x0042c023:\n    uVar20 = 0x16;\n    if (uStack152 != 0x10) {\ncode_r0x0042c030:\n        uVar20 = uStack152;\n    }\n    aiStack88[0] = fcn.004472c0(0, 0);\n    if (*(iVar12 + 0x20) != '\\0') {\n        fcn.004488f0(aiStack88, 0x20);\n    }\n    uVar17 = 0x80000000 - !bVar22;\n    uVar3 = uVar17 / uStack152;\n    cVar7 = *(iVar12 + 200);\n    if (cVar7 == '\\0') {\n        uVar18 = 0;\n        bVar6 = false;\n        if (cStack116 == '\\0') {\n            if (10 < uVar20) goto code_r0x0042c285;\ncode_r0x0042c0bf:\n            if ((0x2f < uVar19) && (uVar19 < uVar20 + 0x30U)) {\ncode_r0x0042c0d4:\n                iVar16 = uVar19 - 0x30;\ncode_r0x0042c0d7:\n                if (uVar3 < uVar18) goto code_r0x0042c2b5;\ncode_r0x0042c0e1:\n                uVar19 = uVar18 * uStack152;\n                uVar18 = uVar19 + iVar16;\n                iVar21 = iVar21 + 1;\n                bVar6 = bVar6 | uVar17 - iVar16 < uVar19;\n                do {\n                    piVar14 = *arg3;\n                    if (piVar14 == NULL) {\ncode_r0x0042c256:\n                        bVar4 = true;\n                        cVar7 = '\\x01';\n                        piVar14 = *arg4;\n                        if (piVar14 != NULL) goto code_r0x0042c153;\ncode_r0x0042c263:\n                        if (bVar4) goto code_r0x0042c168;\n                    }\n                    else {\n                        if (piVar14[2] < piVar14[3]) {\n                            piVar14[2] = piVar14[2] + 2;\n                            *(arg3 + 1) = 0xffff;\n                        }\n                        else {\n                            (**(*piVar14 + 0x50))();\n                            piVar14 = *arg3;\n                            *(arg3 + 1) = 0xffff;\n                            if (piVar14 == NULL) goto code_r0x0042c256;\n                        }\n                        if (piVar14[2] < piVar14[3]) {\n                            iVar11 = *piVar14[2];\n                        }\n                        else {\n                            iVar11 = (**(*piVar14 + 0x48))();\n                        }\n                        if (iVar11 == -1) {\n                            *arg3 = NULL;\n                            goto code_r0x0042c256;\n                        }\n                        piVar14 = *arg4;\n                        bVar4 = false;\n                        cVar7 = '\\0';\n                        *(arg3 + 1) = iVar11;\n                        if (piVar14 == NULL) goto code_r0x0042c263;\ncode_r0x0042c153:\n                        cVar8 = '\\0';\n                        if (*(arg4 + 1) == -1) {\n                            if (piVar14[2] < piVar14[3]) {\n                                iVar11 = *piVar14[2];\n                            }\n                            else {\n                                iVar11 = (**(*piVar14 + 0x48))();\n                            }\n                            if (iVar11 == -1) {\n                                *arg4 = NULL;\n                                cVar8 = '\\x01';\n                            }\n                            else {\n                                *(arg4 + 1) = iVar11;\n                                cVar8 = '\\0';\n                            }\n                        }\n                        if (cVar8 == cVar7) goto code_r0x0042c168;\n                    }\n                    uVar10 = fcn.00425470(arg3);\n                    uVar19 = uVar10;\n                    if (uVar20 < 0xb) goto code_r0x0042c0bf;\ncode_r0x0042c285:\n                    iVar11 = uVar19;\n                    if (iVar11 - 0x30U < 10) goto code_r0x0042c0d4;\n                    if (iVar11 - 0x61U < 6) {\n                        iVar16 = uVar19 - 0x57;\n                        goto code_r0x0042c0d7;\n                    }\n                    if (5 < iVar11 - 0x41U) break;\n                    iVar16 = uVar19 - 0x37;\n                    if (uVar18 <= uVar3) goto code_r0x0042c0e1;\ncode_r0x0042c2b5:\n                    bVar6 = true;\n                } while( true );\n            }\n        }\n    }\n    else {\n        uVar18 = 0;\n        bVar6 = false;\n        if (cStack116 == '\\0') {\n            do {\n                iVar11 = uVar19;\n                if ((*(iVar12 + 0x20) == '\\0') || (iVar11 != *(iVar12 + 0x4a))) {\n                    piVar13 = iVar12 + 0x9c;\n                    uVar15 = uVar20;\n                    if (iVar11 == *(iVar12 + 0x48)) break;\n                    while (iVar11 != *piVar13) {\n                        uVar15 = uVar15 - 1;\n                        piVar13 = piVar13 + 1;\n                        if (uVar15 == 0) goto code_r0x0042c313;\n                    }\n                    iVar16 = piVar13 - (iVar12 + 0x9c) >> 1;\n                    if (0xf < iVar16) {\n                        iVar16 = iVar16 + -6;\n                    }\n                    if (uVar3 < uVar18) {\n                        bVar6 = true;\n                    }\n                    else {\n                        uVar19 = uVar18 * uStack152;\n                        uVar18 = uVar19 + iVar16;\n                        iVar21 = iVar21 + 1;\n                        bVar6 = bVar6 | uVar17 - iVar16 < uVar19;\n                    }\n                }\n                else {\n                    if (iVar21 == 0) {\n                        bVar4 = true;\n                        goto code_r0x0042c16f;\n                    }\n                    fcn.00448b10(aiStack88, iVar21);\n                    iVar21 = 0;\n                }\n                piVar14 = *arg3;\n                if (piVar14 == NULL) {\ncode_r0x0042c465:\n                    piVar14 = *arg4;\n                    cVar8 = cVar7;\n                }\n                else {\n                    if (piVar14[2] < piVar14[3]) {\n                        piVar14[2] = piVar14[2] + 2;\n                        *(arg3 + 1) = 0xffff;\n                    }\n                    else {\n                        (**(*piVar14 + 0x50))();\n                        piVar14 = *arg3;\n                        *(arg3 + 1) = 0xffff;\n                        if (piVar14 == NULL) goto code_r0x0042c465;\n                    }\n                    if (piVar14[2] < piVar14[3]) {\n                        iVar11 = *piVar14[2];\n                    }\n                    else {\n                        iVar11 = (**(*piVar14 + 0x48))();\n                    }\n                    if (iVar11 == -1) {\n                        *arg3 = NULL;\n                        goto code_r0x0042c465;\n                    }\n                    piVar14 = *arg4;\n                    cVar8 = '\\0';\n                    *(arg3 + 1) = iVar11;\n                }\n                cVar9 = cVar7;\n                if ((piVar14 != NULL) && (cVar9 = '\\0',  *(arg4 + 1) == -1)) {\n                    if (piVar14[2] < piVar14[3]) {\n                        iVar11 = *piVar14[2];\n                    }\n                    else {\n                        iVar11 = (**(*piVar14 + 0x48))();\n                    }\n                    if (iVar11 == -1) {\n                        *arg4 = NULL;\n                        cVar9 = cVar7;\n                    }\n                    else {\n                        *(arg4 + 1) = iVar11;\n                        cVar9 = '\\0';\n                    }\n                }\n                if (cVar8 == cVar9) goto code_r0x0042c168;\n                uVar19 = fcn.00425470(arg3);\n            } while( true );\n        }\n    }\ncode_r0x0042c313:\n    bVar4 = false;\n    iVar2 = *(aiStack88[0] + -0x18);\n    goto joined_r0x0042c31f;\ncode_r0x0042c168:\n    bVar4 = false;\n    cStack116 = '\\x01';\ncode_r0x0042c16f:\n    iVar2 = *(aiStack88[0] + -0x18);\njoined_r0x0042c31f:\n    if (iVar2 != 0) {\n        fcn.00448b10(aiStack88, iVar21);\n        cVar7 = fcn.00465040(*(iVar12 + 0x10), *(iVar12 + 0x18), aiStack88);\n        if (cVar7 == '\\0') {\n            *in_stack_00000030 = 4;\n        }\n    }\n    if ((((iVar21 == 0) && (!bVar5)) && (*(aiStack88[0] + -0x18) == 0)) || (bVar4)) {\n        *in_stack_00000038 = 0;\n        *in_stack_00000030 = 4;\n    }\n    else if (bVar6) {\n        *in_stack_00000038 = 0x80000000 - !bVar22;\n        *in_stack_00000030 = 4;\n    }\n    else {\n        if (bVar22) {\n            uVar18 = -uVar18;\n        }\n        *in_stack_00000038 = uVar18;\n    }\n    if (cStack116 != '\\0') {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    piVar14 = arg3[1];\n    *arg1 = *arg3;\n    arg1[1] = piVar14;\n    LOCK();\n    piVar1 = aiStack88[0] + -8;\n    iVar21 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar21 < 1) {\n        fcn.004477a0(aiStack88[0] + -0x18);\n    }\n    return arg1;\n}\n",
        "token_count": 3691
    },
    "0042c740": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t ** fcn.0042c740(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t **arg4)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    bool bVar3;\n    bool bVar4;\n    bool bVar5;\n    char cVar6;\n    char cVar7;\n    char cVar8;\n    uint16_t uVar9;\n    int16_t iVar10;\n    int64_t iVar11;\n    ulong arg1_00;\n    int16_t *piVar12;\n    int64_t *piVar13;\n    uint64_t uVar14;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint64_t uVar19;\n    int32_t iVar20;\n    bool bVar21;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uint32_t *in_stack_00000038;\n    uint32_t uStack148;\n    char cStack116;\n    uchar auStack90 [2];\n    int64_t aiStack88 [3];\n    \n    iVar11 = fcn.004248f0(auStack90, in_stack_00000028 + 0xd0);\n    uStack148 = 8;\n    uVar16 = *(in_stack_00000028 + 0x18) & 0x4a;\n    if ((uVar16 != 0x40) && (uStack148 = 10,  uVar16 == 8)) {\n        uStack148 = 0x10;\n    }\n    cStack116 = fcn.00425380(arg3, arg4);\n    if (cStack116 == '\\0') {\n        uVar9 = fcn.00425470(arg3);\n        uVar15 = uVar9;\n        bVar21 = *(iVar11 + 0x94) == uVar9;\n        if ((!bVar21) && (*(iVar11 + 0x96) != uVar9)) {\n            cVar6 = *(iVar11 + 0x20);\ncode_r0x0042ccf8:\n            iVar20 = 0;\n            bVar4 = false;\n            do {\n                iVar10 = uVar15;\n                if (((cVar6 != '\\0') && (*(iVar11 + 0x4a) == iVar10)) || (*(iVar11 + 0x48) == iVar10))\n                goto code_r0x0042c813;\n                if (*(iVar11 + 0x9c) == iVar10) {\n                    if ((uStack148 != 10) && (bVar4)) goto code_r0x0042cd2f;\n                    if (uVar16 == 0) {\n                        iVar20 = 0;\n                        bVar4 = true;\n                        uStack148 = 8;\n                    }\n                    else {\n                        iVar20 = iVar20 + 1;\n                        bVar4 = true;\n                        if (uStack148 == 8) {\n                            iVar20 = 0;\n                        }\n                    }\n                }\n                else {\n                    if (!bVar4) goto code_r0x0042c813;\ncode_r0x0042cd2f:\n                    if ((*(iVar11 + 0x98) != iVar10) && (*(iVar11 + 0x9a) != iVar10)) {\n                        bVar4 = true;\n                        goto code_r0x0042c813;\n                    }\n                    if (uVar16 == 0) {\n                        iVar20 = 0;\n                        bVar4 = false;\n                        uStack148 = 0x10;\n                    }\n                    else {\n                        if (uStack148 != 0x10) {\n                            bVar4 = true;\n                            goto code_r0x0042c820;\n                        }\n                        iVar20 = 0;\n                        bVar4 = false;\n                    }\n                }\n                piVar13 = *arg3;\n                if (piVar13 != NULL) {\n                    if (piVar13[2] < piVar13[3]) {\n                        piVar13[2] = piVar13[2] + 2;\n                    }\n                    else {\n                        (**(*piVar13 + 0x50))();\n                    }\n                    *(arg3 + 1) = 0xffff;\n                }\n                cVar6 = fcn.00425380(arg3, arg4);\n                if (cVar6 != '\\0') {\n                    cStack116 = '\\x01';\n                    goto code_r0x0042c813;\n                }\n                uVar9 = fcn.00425470(arg3);\n                uVar15 = uVar9;\n                if (!bVar4) goto code_r0x0042c813;\n                cVar6 = *(iVar11 + 0x20);\n            } while( true );\n        }\n        cVar6 = *(iVar11 + 0x20);\n        if ((cVar6 != '\\0') && (*(iVar11 + 0x4a) == uVar9)) {\n            cVar6 = '\\x01';\n            goto code_r0x0042ccf8;\n        }\n        if (*(iVar11 + 0x48) == uVar9) goto code_r0x0042ccf8;\n        arg1_00 = fcn.0045ddd0(arg3);\n        cVar6 = fcn.00425380(arg1_00, arg4);\n        if (cVar6 == '\\0') {\n            uVar9 = fcn.00425470(arg3);\n            uVar15 = uVar9;\n            cVar6 = *(iVar11 + 0x20);\n            goto code_r0x0042ccf8;\n        }\n    }\n    else {\n        uVar15 = 0;\n        bVar21 = false;\n    }\n    cStack116 = '\\x01';\n    iVar20 = 0;\n    bVar4 = false;\ncode_r0x0042c813:\n    uVar19 = 0x16;\n    if (uStack148 != 0x10) {\ncode_r0x0042c820:\n        uVar19 = uStack148;\n    }\n    aiStack88[0] = fcn.004472c0(0, 0);\n    if (*(iVar11 + 0x20) != '\\0') {\n        fcn.004488f0(aiStack88, 0x20);\n    }\n    uVar16 = 0xffffffff / uStack148;\n    cVar6 = *(iVar11 + 200);\n    if (cVar6 == '\\0') {\n        uVar17 = 0;\n        bVar5 = false;\n        if (cStack116 == '\\0') {\n            if (10 < uVar19) goto code_r0x0042ca64;\ncode_r0x0042c89d:\n            if ((0x2f < uVar15) && (uVar15 < uVar19 + 0x30U)) {\ncode_r0x0042c8b2:\n                uVar15 = uVar15 - 0x30;\ncode_r0x0042c8b5:\n                if (uVar16 < uVar17) goto code_r0x0042ca94;\ncode_r0x0042c8bf:\n                uVar18 = uVar17 * uStack148;\n                uVar17 = uVar18 + uVar15;\n                iVar20 = iVar20 + 1;\n                bVar5 = bVar5 | ~uVar15 < uVar18;\n                do {\n                    piVar13 = *arg3;\n                    if (piVar13 == NULL) {\ncode_r0x0042ca35:\n                        bVar3 = true;\n                        cVar6 = '\\x01';\n                        piVar13 = *arg4;\n                        if (piVar13 != NULL) goto code_r0x0042c931;\ncode_r0x0042ca42:\n                        if (bVar3) goto code_r0x0042c946;\n                    }\n                    else {\n                        if (piVar13[2] < piVar13[3]) {\n                            piVar13[2] = piVar13[2] + 2;\n                            *(arg3 + 1) = 0xffff;\n                        }\n                        else {\n                            (**(*piVar13 + 0x50))();\n                            piVar13 = *arg3;\n                            *(arg3 + 1) = 0xffff;\n                            if (piVar13 == NULL) goto code_r0x0042ca35;\n                        }\n                        if (piVar13[2] < piVar13[3]) {\n                            iVar10 = *piVar13[2];\n                        }\n                        else {\n                            iVar10 = (**(*piVar13 + 0x48))();\n                        }\n                        if (iVar10 == -1) {\n                            *arg3 = NULL;\n                            goto code_r0x0042ca35;\n                        }\n                        piVar13 = *arg4;\n                        bVar3 = false;\n                        cVar6 = '\\0';\n                        *(arg3 + 1) = iVar10;\n                        if (piVar13 == NULL) goto code_r0x0042ca42;\ncode_r0x0042c931:\n                        cVar7 = '\\0';\n                        if (*(arg4 + 1) == -1) {\n                            if (piVar13[2] < piVar13[3]) {\n                                iVar10 = *piVar13[2];\n                            }\n                            else {\n                                iVar10 = (**(*piVar13 + 0x48))();\n                            }\n                            if (iVar10 == -1) {\n                                *arg4 = NULL;\n                                cVar7 = '\\x01';\n                            }\n                            else {\n                                *(arg4 + 1) = iVar10;\n                                cVar7 = '\\0';\n                            }\n                        }\n                        if (cVar7 == cVar6) goto code_r0x0042c946;\n                    }\n                    uVar9 = fcn.00425470(arg3);\n                    uVar15 = uVar9;\n                    if (uVar19 < 0xb) goto code_r0x0042c89d;\ncode_r0x0042ca64:\n                    iVar10 = uVar15;\n                    if (iVar10 - 0x30U < 10) goto code_r0x0042c8b2;\n                    if (iVar10 - 0x61U < 6) {\n                        uVar15 = uVar15 - 0x57;\n                        goto code_r0x0042c8b5;\n                    }\n                    if (5 < iVar10 - 0x41U) break;\n                    uVar15 = uVar15 - 0x37;\n                    if (uVar17 <= uVar16) goto code_r0x0042c8bf;\ncode_r0x0042ca94:\n                    bVar5 = true;\n                } while( true );\n            }\n        }\n    }\n    else {\n        uVar17 = 0;\n        bVar5 = false;\n        if (cStack116 == '\\0') {\n            do {\n                iVar10 = uVar15;\n                if ((*(iVar11 + 0x20) == '\\0') || (iVar10 != *(iVar11 + 0x4a))) {\n                    piVar12 = iVar11 + 0x9c;\n                    uVar14 = uVar19;\n                    if (iVar10 == *(iVar11 + 0x48)) break;\n                    while (iVar10 != *piVar12) {\n                        uVar14 = uVar14 - 1;\n                        piVar12 = piVar12 + 1;\n                        if (uVar14 == 0) goto code_r0x0042caf3;\n                    }\n                    uVar15 = piVar12 - (iVar11 + 0x9c) >> 1;\n                    if (0xf < uVar15) {\n                        uVar15 = uVar15 - 6;\n                    }\n                    if (uVar16 < uVar17) {\n                        bVar5 = true;\n                    }\n                    else {\n                        uVar18 = uVar17 * uStack148;\n                        uVar17 = uVar18 + uVar15;\n                        iVar20 = iVar20 + 1;\n                        bVar5 = bVar5 | ~uVar15 < uVar18;\n                    }\n                }\n                else {\n                    if (iVar20 == 0) {\n                        bVar3 = true;\n                        goto code_r0x0042c94d;\n                    }\n                    fcn.00448b10(aiStack88, iVar20);\n                    iVar20 = 0;\n                }\n                piVar13 = *arg3;\n                if (piVar13 == NULL) {\ncode_r0x0042cc55:\n                    piVar13 = *arg4;\n                    cVar7 = cVar6;\n                }\n                else {\n                    if (piVar13[2] < piVar13[3]) {\n                        piVar13[2] = piVar13[2] + 2;\n                        *(arg3 + 1) = 0xffff;\n                    }\n                    else {\n                        (**(*piVar13 + 0x50))();\n                        piVar13 = *arg3;\n                        *(arg3 + 1) = 0xffff;\n                        if (piVar13 == NULL) goto code_r0x0042cc55;\n                    }\n                    if (piVar13[2] < piVar13[3]) {\n                        iVar10 = *piVar13[2];\n                    }\n                    else {\n                        iVar10 = (**(*piVar13 + 0x48))();\n                    }\n                    if (iVar10 == -1) {\n                        *arg3 = NULL;\n                        goto code_r0x0042cc55;\n                    }\n                    piVar13 = *arg4;\n                    cVar7 = '\\0';\n                    *(arg3 + 1) = iVar10;\n                }\n                cVar8 = cVar6;\n                if ((piVar13 != NULL) && (cVar8 = '\\0',  *(arg4 + 1) == -1)) {\n                    if (piVar13[2] < piVar13[3]) {\n                        iVar10 = *piVar13[2];\n                    }\n                    else {\n                        iVar10 = (**(*piVar13 + 0x48))();\n                    }\n                    if (iVar10 == -1) {\n                        *arg4 = NULL;\n                        cVar8 = cVar6;\n                    }\n                    else {\n                        *(arg4 + 1) = iVar10;\n                        cVar8 = '\\0';\n                    }\n                }\n                if (cVar7 == cVar8) goto code_r0x0042c946;\n                uVar15 = fcn.00425470(arg3);\n            } while( true );\n        }\n    }\ncode_r0x0042caf3:\n    bVar3 = false;\n    iVar2 = *(aiStack88[0] + -0x18);\n    goto joined_r0x0042caff;\ncode_r0x0042c946:\n    bVar3 = false;\n    cStack116 = '\\x01';\ncode_r0x0042c94d:\n    iVar2 = *(aiStack88[0] + -0x18);\njoined_r0x0042caff:\n    if (iVar2 != 0) {\n        fcn.00448b10(aiStack88, iVar20);\n        cVar6 = fcn.00465040(*(iVar11 + 0x10), *(iVar11 + 0x18), aiStack88);\n        if (cVar6 == '\\0') {\n            *in_stack_00000030 = 4;\n        }\n    }\n    if ((((iVar20 == 0) && (!bVar4)) && (*(aiStack88[0] + -0x18) == 0)) || (bVar3)) {\n        *in_stack_00000038 = 0;\n        *in_stack_00000030 = 4;\n    }\n    else if (bVar5) {\n        *in_stack_00000038 = 0xffffffff;\n        *in_stack_00000030 = 4;\n    }\n    else {\n        if (bVar21) {\n            uVar17 = -uVar17;\n        }\n        *in_stack_00000038 = uVar17;\n    }\n    if (cStack116 != '\\0') {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    piVar13 = arg3[1];\n    *arg1 = *arg3;\n    arg1[1] = piVar13;\n    LOCK();\n    piVar1 = aiStack88[0] + -8;\n    iVar20 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar20 < 1) {\n        fcn.004477a0(aiStack88[0] + -0x18);\n    }\n    return arg1;\n}\n",
        "token_count": 3658
    },
    "0042cf30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t ** fcn.0042cf30(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t **arg4)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    bool bVar3;\n    bool bVar4;\n    bool bVar5;\n    char cVar6;\n    char cVar7;\n    char cVar8;\n    uint16_t uVar9;\n    int16_t iVar10;\n    int64_t iVar11;\n    ulong arg1_00;\n    int16_t *piVar12;\n    int64_t *piVar13;\n    uint64_t uVar14;\n    int32_t iVar15;\n    uint32_t uVar16;\n    uint16_t uVar17;\n    uint32_t uVar18;\n    int32_t iVar19;\n    uint64_t uVar20;\n    bool bVar21;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uint16_t *in_stack_00000038;\n    char cStack149;\n    int32_t iStack148;\n    int32_t iStack120;\n    uchar auStack90 [2];\n    int64_t aiStack88 [3];\n    \n    iVar11 = fcn.004248f0(auStack90, in_stack_00000028 + 0xd0);\n    iStack148 = 8;\n    uVar18 = *(in_stack_00000028 + 0x18) & 0x4a;\n    if ((uVar18 != 0x40) && (iStack148 = 10,  uVar18 == 8)) {\n        iStack148 = 0x10;\n    }\n    cStack149 = fcn.00425380(arg3, arg4);\n    if (cStack149 == '\\0') {\n        uVar9 = fcn.00425470(arg3);\n        uVar16 = uVar9;\n        bVar21 = *(iVar11 + 0x94) == uVar9;\n        if ((!bVar21) && (*(iVar11 + 0x96) != uVar9)) {\n            cVar6 = *(iVar11 + 0x20);\ncode_r0x0042d542:\n            iStack120 = 0;\n            bVar4 = false;\n            do {\n                iVar10 = uVar16;\n                if (((cVar6 != '\\0') && (*(iVar11 + 0x4a) == iVar10)) || (*(iVar11 + 0x48) == iVar10))\n                goto code_r0x0042d008;\n                if (*(iVar11 + 0x9c) == iVar10) {\n                    if ((iStack148 != 10) && (bVar4)) goto code_r0x0042d57e;\n                    if (uVar18 == 0) {\n                        iStack120 = 0;\n                        bVar4 = true;\n                        iStack148 = 8;\n                    }\n                    else {\n                        iVar19 = iStack120 + 1;\n                        iStack120 = 0;\n                        if (iStack148 != 8) {\n                            iStack120 = iVar19;\n                        }\n                        bVar4 = true;\n                    }\n                }\n                else {\n                    if (!bVar4) goto code_r0x0042d008;\ncode_r0x0042d57e:\n                    if ((*(iVar11 + 0x98) != iVar10) && (*(iVar11 + 0x9a) != iVar10)) {\n                        bVar4 = true;\n                        goto code_r0x0042d008;\n                    }\n                    if (uVar18 == 0) {\n                        iStack120 = 0;\n                        bVar4 = false;\n                        iStack148 = 0x10;\n                    }\n                    else {\n                        if (iStack148 != 0x10) {\n                            bVar4 = true;\n                            goto code_r0x0042d015;\n                        }\n                        iStack120 = 0;\n                        bVar4 = false;\n                    }\n                }\n                piVar13 = *arg3;\n                if (piVar13 != NULL) {\n                    if (piVar13[2] < piVar13[3]) {\n                        piVar13[2] = piVar13[2] + 2;\n                    }\n                    else {\n                        (**(*piVar13 + 0x50))(piVar13);\n                    }\n                    *(arg3 + 1) = 0xffff;\n                }\n                cVar6 = fcn.00425380(arg3, arg4);\n                if (cVar6 != '\\0') {\n                    cStack149 = '\\x01';\n                    goto code_r0x0042d008;\n                }\n                uVar9 = fcn.00425470(arg3);\n                uVar16 = uVar9;\n                if (!bVar4) goto code_r0x0042d008;\n                cVar6 = *(iVar11 + 0x20);\n            } while( true );\n        }\n        cVar6 = *(iVar11 + 0x20);\n        if ((cVar6 != '\\0') && (*(iVar11 + 0x4a) == uVar9)) {\n            cVar6 = '\\x01';\n            goto code_r0x0042d542;\n        }\n        if (*(iVar11 + 0x48) == uVar9) goto code_r0x0042d542;\n        arg1_00 = fcn.0045ddd0(arg3);\n        cVar6 = fcn.00425380(arg1_00, arg4);\n        if (cVar6 == '\\0') {\n            uVar9 = fcn.00425470(arg3);\n            uVar16 = uVar9;\n            cVar6 = *(iVar11 + 0x20);\n            goto code_r0x0042d542;\n        }\n    }\n    else {\n        uVar16 = 0;\n        bVar21 = false;\n    }\n    cStack149 = '\\x01';\n    iStack120 = 0;\n    bVar4 = false;\ncode_r0x0042d008:\n    uVar20 = 0x16;\n    if (iStack148 != 0x10) {\ncode_r0x0042d015:\n        uVar20 = iStack148;\n    }\n    aiStack88[0] = fcn.004472c0(0, 0);\n    if (*(iVar11 + 0x20) != '\\0') {\n        fcn.004488f0(aiStack88, 0x20);\n    }\n    cVar6 = *(iVar11 + 200);\n    uVar9 = 0xffff / iStack148;\n    if (cVar6 == '\\0') {\n        iVar19 = 0;\n        uVar17 = 0;\n        bVar5 = false;\n        if (cStack149 == '\\0') {\ncode_r0x0042d08b:\n            if (10 < uVar20) goto code_r0x0042d292;\ncode_r0x0042d095:\n            uVar17 = iVar19;\n            if ((0x2f < uVar16) && (uVar16 < uVar20 + 0x30U)) {\ncode_r0x0042d0aa:\n                iVar15 = uVar16 - 0x30;\ncode_r0x0042d0ad:\n                if (uVar9 < iVar19) goto code_r0x0042d2c3;\ncode_r0x0042d0b8:\n                uVar17 = iVar19 * iStack148;\n                iStack120 = iStack120 + 1;\n                iVar19 = uVar17 + iVar15;\n                bVar5 = bVar5 | 0xffff - iVar15 < uVar17;\n                do {\n                    uVar17 = iVar19;\n                    piVar13 = *arg3;\n                    if (piVar13 == NULL) {\ncode_r0x0042d235:\n                        bVar3 = true;\n                        cVar6 = '\\x01';\n                        piVar13 = *arg4;\n                        if (piVar13 != NULL) goto code_r0x0042d130;\ncode_r0x0042d242:\n                        if (bVar3) goto code_r0x0042d145;\n                    }\n                    else {\n                        if (piVar13[2] < piVar13[3]) {\n                            piVar13[2] = piVar13[2] + 2;\n                            *(arg3 + 1) = 0xffff;\n                        }\n                        else {\n                            (**(*piVar13 + 0x50))();\n                            piVar13 = *arg3;\n                            *(arg3 + 1) = 0xffff;\n                            if (piVar13 == NULL) goto code_r0x0042d235;\n                        }\n                        if (piVar13[2] < piVar13[3]) {\n                            iVar10 = *piVar13[2];\n                        }\n                        else {\n                            iVar10 = (**(*piVar13 + 0x48))();\n                        }\n                        if (iVar10 == -1) {\n                            *arg3 = NULL;\n                            goto code_r0x0042d235;\n                        }\n                        piVar13 = *arg4;\n                        bVar3 = false;\n                        cVar6 = '\\0';\n                        *(arg3 + 1) = iVar10;\n                        if (piVar13 == NULL) goto code_r0x0042d242;\ncode_r0x0042d130:\n                        cVar7 = '\\0';\n                        if (*(arg4 + 1) == -1) {\n                            if (piVar13[2] < piVar13[3]) {\n                                iVar10 = *piVar13[2];\n                            }\n                            else {\n                                iVar10 = (**(*piVar13 + 0x48))();\n                            }\n                            if (iVar10 == -1) {\n                                *arg4 = NULL;\n                                cVar7 = '\\x01';\n                            }\n                            else {\n                                *(arg4 + 1) = iVar10;\n                                cVar7 = '\\0';\n                            }\n                        }\n                        if (cVar6 == cVar7) goto code_r0x0042d145;\n                    }\n                    piVar13 = *arg3;\n                    if (piVar13 == NULL) {\n                        uVar16 = 0xffff;\n                        goto code_r0x0042d08b;\n                    }\n                    uVar16 = *(arg3 + 1);\n                    if (*(arg3 + 1) != 0xffff) goto code_r0x0042d08b;\n                    if (piVar13[2] < piVar13[3]) {\n                        uVar17 = *piVar13[2];\n                    }\n                    else {\n                        uVar17 = (**(*piVar13 + 0x48))();\n                    }\n                    uVar16 = uVar17;\n                    if (uVar17 == 0xffff) {\n                        *arg3 = NULL;\n                        goto code_r0x0042d08b;\n                    }\n                    *(arg3 + 1) = uVar17;\n                    if (uVar20 < 0xb) goto code_r0x0042d095;\ncode_r0x0042d292:\n                    uVar17 = iVar19;\n                    iVar10 = uVar16;\n                    if (iVar10 - 0x30U < 10) goto code_r0x0042d0aa;\n                    if (iVar10 - 0x61U < 6) {\n                        iVar15 = uVar16 - 0x57;\n                        goto code_r0x0042d0ad;\n                    }\n                    if (5 < iVar10 - 0x41U) break;\n                    iVar15 = uVar16 - 0x37;\n                    if (uVar17 <= uVar9) goto code_r0x0042d0b8;\ncode_r0x0042d2c3:\n                    bVar5 = true;\n                } while( true );\n            }\n        }\n    }\n    else {\n        iVar19 = 0;\n        uVar17 = 0;\n        bVar5 = false;\n        if (cStack149 == '\\0') {\n            do {\n                uVar17 = iVar19;\n                iVar10 = uVar16;\n                if ((*(iVar11 + 0x20) == '\\0') || (iVar10 != *(iVar11 + 0x4a))) {\n                    piVar12 = iVar11 + 0x9c;\n                    uVar14 = uVar20;\n                    if (iVar10 == *(iVar11 + 0x48)) break;\n                    while (iVar10 != *piVar12) {\n                        uVar14 = uVar14 - 1;\n                        piVar12 = piVar12 + 1;\n                        if (uVar14 == 0) goto code_r0x0042d318;\n                    }\n                    iVar15 = piVar12 - (iVar11 + 0x9c) >> 1;\n                    if (0xf < iVar15) {\n                        iVar15 = iVar15 + -6;\n                    }\n                    if (uVar9 < uVar17) {\n                        bVar5 = true;\n                    }\n                    else {\n                        iVar19 = uVar17 * iStack148 + iVar15;\n                        iStack120 = iStack120 + 1;\n                        bVar5 = bVar5 | 0xffff - iVar15 < uVar17 * iStack148;\n                    }\n                }\n                else {\n                    if (iStack120 == 0) {\n                        bVar3 = true;\n                        goto code_r0x0042d14c;\n                    }\n                    fcn.00448b10(aiStack88, iStack120);\n                    iStack120 = 0;\n                }\n                uVar17 = iVar19;\n                piVar13 = *arg3;\n                if (piVar13 == NULL) {\ncode_r0x0042d483:\n                    piVar13 = *arg4;\n                    cVar7 = cVar6;\n                }\n                else {\n                    if (piVar13[2] < piVar13[3]) {\n                        piVar13[2] = piVar13[2] + 2;\n                        *(arg3 + 1) = 0xffff;\n                    }\n                    else {\n                        (**(*piVar13 + 0x50))();\n                        piVar13 = *arg3;\n                        *(arg3 + 1) = 0xffff;\n                        if (piVar13 == NULL) goto code_r0x0042d483;\n                    }\n                    if (piVar13[2] < piVar13[3]) {\n                        iVar10 = *piVar13[2];\n                    }\n                    else {\n                        iVar10 = (**(*piVar13 + 0x48))();\n                    }\n                    if (iVar10 == -1) {\n                        *arg3 = NULL;\n                        goto code_r0x0042d483;\n                    }\n                    piVar13 = *arg4;\n                    cVar7 = '\\0';\n                    *(arg3 + 1) = iVar10;\n                }\n                cVar8 = cVar6;\n                if ((piVar13 != NULL) && (cVar8 = '\\0',  *(arg4 + 1) == -1)) {\n                    if (piVar13[2] < piVar13[3]) {\n                        iVar10 = *piVar13[2];\n                    }\n                    else {\n                        iVar10 = (**(*piVar13 + 0x48))();\n                    }\n                    if (iVar10 == -1) {\n                        *arg4 = NULL;\n                        cVar8 = cVar6;\n                    }\n                    else {\n                        *(arg4 + 1) = iVar10;\n                        cVar8 = '\\0';\n                    }\n                }\n                if (cVar7 == cVar8) goto code_r0x0042d145;\n                uVar16 = fcn.00425470(arg3);\n            } while( true );\n        }\n    }\ncode_r0x0042d318:\n    bVar3 = false;\n    iVar2 = *(aiStack88[0] + -0x18);\n    goto joined_r0x0042d324;\ncode_r0x0042d145:\n    bVar3 = false;\n    cStack149 = '\\x01';\ncode_r0x0042d14c:\n    iVar2 = *(aiStack88[0] + -0x18);\njoined_r0x0042d324:\n    if (iVar2 != 0) {\n        fcn.00448b10(aiStack88, iStack120);\n        cVar6 = fcn.00465040(*(iVar11 + 0x10), *(iVar11 + 0x18), aiStack88);\n        if (cVar6 == '\\0') {\n            *in_stack_00000030 = 4;\n        }\n    }\n    if ((((iStack120 == 0) && (!bVar4)) && (*(aiStack88[0] + -0x18) == 0)) || (bVar3)) {\n        *in_stack_00000038 = 0;\n        *in_stack_00000030 = 4;\n    }\n    else if (bVar5) {\n        *in_stack_00000038 = 0xffff;\n        *in_stack_00000030 = 4;\n    }\n    else {\n        if (bVar21) {\n            uVar17 = -uVar17;\n        }\n        *in_stack_00000038 = uVar17;\n    }\n    if (cStack149 != '\\0') {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    piVar13 = arg3[1];\n    *arg1 = *arg3;\n    arg1[1] = piVar13;\n    LOCK();\n    piVar1 = aiStack88[0] + -8;\n    iVar19 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar19 < 1) {\n        fcn.004477a0(aiStack88[0] + -0x18);\n    }\n    return arg1;\n}\n",
        "token_count": 3914
    },
    "0042d7b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t ** fcn.0042d7b0(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t **arg4)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    bool bVar3;\n    bool bVar4;\n    bool bVar5;\n    char cVar6;\n    char cVar7;\n    char cVar8;\n    uint16_t uVar9;\n    int16_t iVar10;\n    int64_t iVar11;\n    ulong arg1_00;\n    uint64_t uVar12;\n    uint64_t uVar13;\n    int16_t *piVar14;\n    int64_t *piVar15;\n    int32_t iVar16;\n    uint32_t uVar17;\n    uint64_t uVar18;\n    uint64_t uVar19;\n    uint64_t uVar20;\n    uint32_t uVar21;\n    uint64_t uVar22;\n    int32_t iVar23;\n    bool bVar24;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uint64_t *in_stack_00000038;\n    char cStack116;\n    uchar auStack90 [2];\n    int64_t aiStack88 [3];\n    \n    iVar16 = 8;\n    iVar11 = fcn.004248f0(auStack90, in_stack_00000028 + 0xd0);\n    uVar21 = *(in_stack_00000028 + 0x18) & 0x4a;\n    if ((uVar21 != 0x40) && (iVar16 = 0x10,  uVar21 != 8)) {\n        iVar16 = 10;\n    }\n    cStack116 = fcn.00425380(arg3, arg4);\n    if (cStack116 == '\\0') {\n        uVar9 = fcn.00425470(arg3);\n        uVar17 = uVar9;\n        bVar24 = *(iVar11 + 0x94) == uVar9;\n        if ((!bVar24) && (*(iVar11 + 0x96) != uVar9)) {\n            cVar6 = *(iVar11 + 0x20);\ncode_r0x0042ddc7:\n            iVar23 = 0;\n            bVar4 = false;\n            do {\n                iVar10 = uVar17;\n                if (((cVar6 != '\\0') && (*(iVar11 + 0x4a) == iVar10)) || (*(iVar11 + 0x48) == iVar10))\n                goto code_r0x0042d881;\n                if (*(iVar11 + 0x9c) == iVar10) {\n                    if ((iVar16 != 10) && (bVar4)) goto code_r0x0042ddfe;\n                    if (uVar21 == 0) {\n                        iVar23 = 0;\n                        bVar4 = true;\n                        iVar16 = 8;\n                    }\n                    else {\n                        iVar23 = iVar23 + 1;\n                        bVar4 = true;\n                        if (iVar16 == 8) {\n                            iVar23 = 0;\n                        }\n                    }\n                }\n                else {\n                    if (!bVar4) goto code_r0x0042d881;\ncode_r0x0042ddfe:\n                    if ((*(iVar11 + 0x98) != iVar10) && (*(iVar11 + 0x9a) != iVar10)) {\n                        bVar4 = true;\n                        goto code_r0x0042d881;\n                    }\n                    if (uVar21 == 0) {\n                        iVar23 = 0;\n                        bVar4 = false;\n                        iVar16 = 0x10;\n                    }\n                    else {\n                        if (iVar16 != 0x10) {\n                            bVar4 = true;\n                            goto code_r0x0042d88c;\n                        }\n                        iVar23 = 0;\n                        bVar4 = false;\n                    }\n                }\n                piVar15 = *arg3;\n                if (piVar15 != NULL) {\n                    if (piVar15[2] < piVar15[3]) {\n                        piVar15[2] = piVar15[2] + 2;\n                    }\n                    else {\n                        (**(*piVar15 + 0x50))();\n                    }\n                    *(arg3 + 1) = 0xffff;\n                }\n                cVar6 = fcn.00425380(arg3, arg4);\n                if (cVar6 != '\\0') {\n                    cStack116 = '\\x01';\n                    goto code_r0x0042d881;\n                }\n                uVar9 = fcn.00425470(arg3);\n                uVar17 = uVar9;\n                if (!bVar4) goto code_r0x0042d881;\n                cVar6 = *(iVar11 + 0x20);\n            } while( true );\n        }\n        cVar6 = *(iVar11 + 0x20);\n        if ((cVar6 != '\\0') && (*(iVar11 + 0x4a) == uVar9)) {\n            cVar6 = '\\x01';\n            goto code_r0x0042ddc7;\n        }\n        if (*(iVar11 + 0x48) == uVar9) goto code_r0x0042ddc7;\n        arg1_00 = fcn.0045ddd0(arg3);\n        cVar6 = fcn.00425380(arg1_00, arg4);\n        if (cVar6 == '\\0') {\n            uVar9 = fcn.00425470(arg3);\n            uVar17 = uVar9;\n            cVar6 = *(iVar11 + 0x20);\n            goto code_r0x0042ddc7;\n        }\n    }\n    else {\n        uVar17 = 0;\n        bVar24 = false;\n    }\n    cStack116 = '\\x01';\n    iVar23 = 0;\n    bVar4 = false;\ncode_r0x0042d881:\n    uVar22 = 0x16;\n    if (iVar16 != 0x10) {\ncode_r0x0042d88c:\n        uVar22 = iVar16;\n    }\n    aiStack88[0] = fcn.004472c0(0, 0);\n    if (*(iVar11 + 0x20) != '\\0') {\n        fcn.004488f0(aiStack88, 0x20);\n    }\n    uVar18 = iVar16;\n    uVar12 = 0x7fffffffffffffff;\n    if (bVar24) {\n        uVar12 = 0x8000000000000000;\n    }\n    uVar13 = uVar12 / uVar18;\n    cVar6 = *(iVar11 + 200);\n    if (cVar6 == '\\0') {\n        uVar20 = 0;\n        bVar5 = false;\n        if (cStack116 == '\\0') {\n            if (10 < uVar22) goto code_r0x0042db17;\ncode_r0x0042d92f:\n            if ((0x2f < uVar17) && (uVar17 < uVar22 + 0x30U)) {\ncode_r0x0042d944:\n                iVar16 = uVar17 - 0x30;\ncode_r0x0042d947:\n                if (uVar13 < uVar20) goto code_r0x0042db50;\ncode_r0x0042d952:\n                uVar19 = uVar20 * uVar18;\n                uVar20 = uVar19 + iVar16;\n                iVar23 = iVar23 + 1;\n                bVar5 = bVar5 | uVar12 - iVar16 < uVar19;\n                do {\n                    piVar15 = *arg3;\n                    if (piVar15 == NULL) {\ncode_r0x0042dae8:\n                        cVar6 = '\\x01';\n                        bVar3 = true;\n                        piVar15 = *arg4;\n                        if (piVar15 != NULL) goto code_r0x0042d9d0;\ncode_r0x0042daf5:\n                        if (bVar3) goto code_r0x0042d9e5;\n                    }\n                    else {\n                        if (piVar15[2] < piVar15[3]) {\n                            piVar15[2] = piVar15[2] + 2;\n                            *(arg3 + 1) = 0xffff;\n                        }\n                        else {\n                            (**(*piVar15 + 0x50))();\n                            piVar15 = *arg3;\n                            *(arg3 + 1) = 0xffff;\n                            if (piVar15 == NULL) goto code_r0x0042dae8;\n                        }\n                        if (piVar15[2] < piVar15[3]) {\n                            iVar10 = *piVar15[2];\n                        }\n                        else {\n                            iVar10 = (**(*piVar15 + 0x48))();\n                        }\n                        if (iVar10 == -1) {\n                            *arg3 = NULL;\n                            goto code_r0x0042dae8;\n                        }\n                        piVar15 = *arg4;\n                        cVar6 = '\\0';\n                        bVar3 = false;\n                        *(arg3 + 1) = iVar10;\n                        if (piVar15 == NULL) goto code_r0x0042daf5;\ncode_r0x0042d9d0:\n                        cVar7 = '\\0';\n                        if (*(arg4 + 1) == -1) {\n                            if (piVar15[2] < piVar15[3]) {\n                                iVar10 = *piVar15[2];\n                            }\n                            else {\n                                iVar10 = (**(*piVar15 + 0x48))();\n                            }\n                            if (iVar10 == -1) {\n                                *arg4 = NULL;\n                                cVar7 = '\\x01';\n                            }\n                            else {\n                                *(arg4 + 1) = iVar10;\n                                cVar7 = '\\0';\n                            }\n                        }\n                        if (cVar7 == cVar6) goto code_r0x0042d9e5;\n                    }\n                    uVar9 = fcn.00425470(arg3);\n                    uVar17 = uVar9;\n                    if (uVar22 < 0xb) goto code_r0x0042d92f;\ncode_r0x0042db17:\n                    iVar10 = uVar17;\n                    if (iVar10 - 0x30U < 10) goto code_r0x0042d944;\n                    if (iVar10 - 0x61U < 6) {\n                        iVar16 = uVar17 - 0x57;\n                        goto code_r0x0042d947;\n                    }\n                    if (5 < iVar10 - 0x41U) break;\n                    iVar16 = uVar17 - 0x37;\n                    if (uVar20 <= uVar13) goto code_r0x0042d952;\ncode_r0x0042db50:\n                    bVar5 = true;\n                } while( true );\n            }\n        }\n    }\n    else {\n        uVar20 = 0;\n        bVar5 = false;\n        if (cStack116 == '\\0') {\n            do {\n                iVar10 = uVar17;\n                if ((*(iVar11 + 0x20) == '\\0') || (iVar10 != *(iVar11 + 0x4a))) {\n                    piVar14 = iVar11 + 0x9c;\n                    uVar19 = uVar22;\n                    if (iVar10 == *(iVar11 + 0x48)) break;\n                    while (iVar10 != *piVar14) {\n                        uVar19 = uVar19 - 1;\n                        piVar14 = piVar14 + 1;\n                        if (uVar19 == 0) goto code_r0x0042dba5;\n                    }\n                    iVar16 = piVar14 - (iVar11 + 0x9c) >> 1;\n                    if (0xf < iVar16) {\n                        iVar16 = iVar16 + -6;\n                    }\n                    if (uVar13 < uVar20) {\n                        bVar5 = true;\n                    }\n                    else {\n                        uVar19 = uVar20 * uVar18;\n                        uVar20 = uVar19 + iVar16;\n                        iVar23 = iVar23 + 1;\n                        bVar5 = bVar5 | uVar12 - iVar16 < uVar19;\n                    }\n                }\n                else {\n                    if (iVar23 == 0) {\n                        bVar3 = true;\n                        goto code_r0x0042d9ec;\n                    }\n                    fcn.00448b10(aiStack88, iVar23);\n                    iVar23 = 0;\n                }\n                piVar15 = *arg3;\n                if (piVar15 == NULL) {\ncode_r0x0042dd15:\n                    piVar15 = *arg4;\n                    cVar7 = cVar6;\n                }\n                else {\n                    if (piVar15[2] < piVar15[3]) {\n                        piVar15[2] = piVar15[2] + 2;\n                        *(arg3 + 1) = 0xffff;\n                    }\n                    else {\n                        (**(*piVar15 + 0x50))();\n                        piVar15 = *arg3;\n                        *(arg3 + 1) = 0xffff;\n                        if (piVar15 == NULL) goto code_r0x0042dd15;\n                    }\n                    if (piVar15[2] < piVar15[3]) {\n                        iVar10 = *piVar15[2];\n                    }\n                    else {\n                        iVar10 = (**(*piVar15 + 0x48))();\n                    }\n                    if (iVar10 == -1) {\n                        *arg3 = NULL;\n                        goto code_r0x0042dd15;\n                    }\n                    piVar15 = *arg4;\n                    cVar7 = '\\0';\n                    *(arg3 + 1) = iVar10;\n                }\n                cVar8 = cVar6;\n                if ((piVar15 != NULL) && (cVar8 = '\\0',  *(arg4 + 1) == -1)) {\n                    if (piVar15[2] < piVar15[3]) {\n                        iVar10 = *piVar15[2];\n                    }\n                    else {\n                        iVar10 = (**(*piVar15 + 0x48))();\n                    }\n                    if (iVar10 == -1) {\n                        *arg4 = NULL;\n                        cVar8 = cVar6;\n                    }\n                    else {\n                        *(arg4 + 1) = iVar10;\n                        cVar8 = '\\0';\n                    }\n                }\n                if (cVar7 == cVar8) goto code_r0x0042d9e5;\n                uVar17 = fcn.00425470(arg3);\n            } while( true );\n        }\n    }\ncode_r0x0042dba5:\n    bVar3 = false;\n    iVar2 = *(aiStack88[0] + -0x18);\n    goto joined_r0x0042dbb1;\ncode_r0x0042d9e5:\n    bVar3 = false;\n    cStack116 = '\\x01';\ncode_r0x0042d9ec:\n    iVar2 = *(aiStack88[0] + -0x18);\njoined_r0x0042dbb1:\n    if (iVar2 != 0) {\n        fcn.00448b10(aiStack88, iVar23);\n        cVar6 = fcn.00465040(*(iVar11 + 0x10), *(iVar11 + 0x18), aiStack88);\n        if (cVar6 == '\\0') {\n            *in_stack_00000030 = 4;\n        }\n    }\n    if ((((iVar23 == 0) && (!bVar4)) && (*(aiStack88[0] + -0x18) == 0)) || (bVar3)) {\n        *in_stack_00000038 = 0;\n        *in_stack_00000030 = 4;\n    }\n    else if (bVar5) {\n        uVar22 = 0x8000000000000000;\n        if (!bVar24) {\n            uVar22 = 0x7fffffffffffffff;\n        }\n        *in_stack_00000038 = uVar22;\n        *in_stack_00000030 = 4;\n    }\n    else {\n        if (bVar24) {\n            uVar20 = -uVar20;\n        }\n        *in_stack_00000038 = uVar20;\n    }\n    if (cStack116 != '\\0') {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    piVar15 = arg3[1];\n    *arg1 = *arg3;\n    arg1[1] = piVar15;\n    LOCK();\n    piVar1 = aiStack88[0] + -8;\n    iVar16 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar16 < 1) {\n        fcn.004477a0(aiStack88[0] + -0x18);\n    }\n    return arg1;\n}\n",
        "token_count": 3748
    },
    "0042dff0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t ** fcn.0042dff0(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t **arg4)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    bool bVar3;\n    bool bVar4;\n    bool bVar5;\n    char cVar6;\n    char cVar7;\n    char cVar8;\n    uint16_t uVar9;\n    int16_t iVar10;\n    int64_t iVar11;\n    ulong arg1_00;\n    uint64_t uVar12;\n    uint64_t uVar13;\n    int16_t *piVar14;\n    int64_t *piVar15;\n    int32_t iVar16;\n    uint32_t uVar17;\n    uint64_t uVar18;\n    uint64_t uVar19;\n    uint32_t uVar20;\n    uint64_t uVar21;\n    int32_t iVar22;\n    bool bVar23;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    uint64_t *in_stack_00000038;\n    char cStack116;\n    uchar auStack90 [2];\n    int64_t aiStack88 [3];\n    \n    iVar16 = 8;\n    iVar11 = fcn.004248f0(auStack90, in_stack_00000028 + 0xd0);\n    uVar20 = *(in_stack_00000028 + 0x18) & 0x4a;\n    if ((uVar20 != 0x40) && (iVar16 = 0x10,  uVar20 != 8)) {\n        iVar16 = 10;\n    }\n    cStack116 = fcn.00425380(arg3, arg4);\n    if (cStack116 == '\\0') {\n        uVar9 = fcn.00425470(arg3);\n        uVar17 = uVar9;\n        bVar23 = *(iVar11 + 0x94) == uVar9;\n        if ((!bVar23) && (*(iVar11 + 0x96) != uVar9)) {\n            cVar6 = *(iVar11 + 0x20);\ncode_r0x0042e5c7:\n            iVar22 = 0;\n            bVar4 = false;\n            do {\n                iVar10 = uVar17;\n                if (((cVar6 != '\\0') && (*(iVar11 + 0x4a) == iVar10)) || (*(iVar11 + 0x48) == iVar10))\n                goto code_r0x0042e0c1;\n                if (*(iVar11 + 0x9c) == iVar10) {\n                    if ((iVar16 != 10) && (bVar4)) goto code_r0x0042e5fe;\n                    if (uVar20 == 0) {\n                        iVar22 = 0;\n                        bVar4 = true;\n                        iVar16 = 8;\n                    }\n                    else {\n                        iVar22 = iVar22 + 1;\n                        bVar4 = true;\n                        if (iVar16 == 8) {\n                            iVar22 = 0;\n                        }\n                    }\n                }\n                else {\n                    if (!bVar4) goto code_r0x0042e0c1;\ncode_r0x0042e5fe:\n                    if ((*(iVar11 + 0x98) != iVar10) && (*(iVar11 + 0x9a) != iVar10)) {\n                        bVar4 = true;\n                        goto code_r0x0042e0c1;\n                    }\n                    if (uVar20 == 0) {\n                        iVar22 = 0;\n                        bVar4 = false;\n                        iVar16 = 0x10;\n                    }\n                    else {\n                        if (iVar16 != 0x10) {\n                            bVar4 = true;\n                            goto code_r0x0042e0cc;\n                        }\n                        iVar22 = 0;\n                        bVar4 = false;\n                    }\n                }\n                piVar15 = *arg3;\n                if (piVar15 != NULL) {\n                    if (piVar15[2] < piVar15[3]) {\n                        piVar15[2] = piVar15[2] + 2;\n                    }\n                    else {\n                        (**(*piVar15 + 0x50))();\n                    }\n                    *(arg3 + 1) = 0xffff;\n                }\n                cVar6 = fcn.00425380(arg3, arg4);\n                if (cVar6 != '\\0') {\n                    cStack116 = '\\x01';\n                    goto code_r0x0042e0c1;\n                }\n                uVar9 = fcn.00425470(arg3);\n                uVar17 = uVar9;\n                if (!bVar4) goto code_r0x0042e0c1;\n                cVar6 = *(iVar11 + 0x20);\n            } while( true );\n        }\n        cVar6 = *(iVar11 + 0x20);\n        if ((cVar6 != '\\0') && (*(iVar11 + 0x4a) == uVar9)) {\n            cVar6 = '\\x01';\n            goto code_r0x0042e5c7;\n        }\n        if (*(iVar11 + 0x48) == uVar9) goto code_r0x0042e5c7;\n        arg1_00 = fcn.0045ddd0(arg3);\n        cVar6 = fcn.00425380(arg1_00, arg4);\n        if (cVar6 == '\\0') {\n            uVar9 = fcn.00425470(arg3);\n            uVar17 = uVar9;\n            cVar6 = *(iVar11 + 0x20);\n            goto code_r0x0042e5c7;\n        }\n    }\n    else {\n        uVar17 = 0;\n        bVar23 = false;\n    }\n    cStack116 = '\\x01';\n    iVar22 = 0;\n    bVar4 = false;\ncode_r0x0042e0c1:\n    uVar21 = 0x16;\n    if (iVar16 != 0x10) {\ncode_r0x0042e0cc:\n        uVar21 = iVar16;\n    }\n    aiStack88[0] = fcn.004472c0(0, 0);\n    if (*(iVar11 + 0x20) != '\\0') {\n        fcn.004488f0(aiStack88, 0x20);\n    }\n    uVar12 = iVar16;\n    uVar13 = SUB168((ZEXT816(0) << 0x40 | ZEXT816(0xffffffffffffffff)) / ZEXT816(uVar12), 0);\n    cVar6 = *(iVar11 + 200);\n    if (cVar6 == '\\0') {\n        uVar19 = 0;\n        bVar5 = false;\n        if (cStack116 == '\\0') {\n            if (10 < uVar21) goto code_r0x0042e324;\ncode_r0x0042e154:\n            if ((0x2f < uVar17) && (uVar17 < uVar21 + 0x30U)) {\ncode_r0x0042e169:\n                iVar16 = uVar17 - 0x30;\ncode_r0x0042e16c:\n                if (uVar13 < uVar19) goto code_r0x0042e355;\ncode_r0x0042e177:\n                uVar18 = uVar19 * uVar12;\n                uVar19 = uVar18 + iVar16;\n                iVar22 = iVar22 + 1;\n                bVar5 = bVar5 | ~iVar16 < uVar18;\n                do {\n                    piVar15 = *arg3;\n                    if (piVar15 == NULL) {\ncode_r0x0042e2f5:\n                        cVar6 = '\\x01';\n                        bVar3 = true;\n                        piVar15 = *arg4;\n                        if (piVar15 != NULL) goto code_r0x0042e1f1;\ncode_r0x0042e302:\n                        if (bVar3) goto code_r0x0042e206;\n                    }\n                    else {\n                        if (piVar15[2] < piVar15[3]) {\n                            piVar15[2] = piVar15[2] + 2;\n                            *(arg3 + 1) = 0xffff;\n                        }\n                        else {\n                            (**(*piVar15 + 0x50))();\n                            piVar15 = *arg3;\n                            *(arg3 + 1) = 0xffff;\n                            if (piVar15 == NULL) goto code_r0x0042e2f5;\n                        }\n                        if (piVar15[2] < piVar15[3]) {\n                            iVar10 = *piVar15[2];\n                        }\n                        else {\n                            iVar10 = (**(*piVar15 + 0x48))();\n                        }\n                        if (iVar10 == -1) {\n                            *arg3 = NULL;\n                            goto code_r0x0042e2f5;\n                        }\n                        piVar15 = *arg4;\n                        cVar6 = '\\0';\n                        bVar3 = false;\n                        *(arg3 + 1) = iVar10;\n                        if (piVar15 == NULL) goto code_r0x0042e302;\ncode_r0x0042e1f1:\n                        cVar7 = '\\0';\n                        if (*(arg4 + 1) == -1) {\n                            if (piVar15[2] < piVar15[3]) {\n                                iVar10 = *piVar15[2];\n                            }\n                            else {\n                                iVar10 = (**(*piVar15 + 0x48))();\n                            }\n                            if (iVar10 == -1) {\n                                *arg4 = NULL;\n                                cVar7 = '\\x01';\n                            }\n                            else {\n                                *(arg4 + 1) = iVar10;\n                                cVar7 = '\\0';\n                            }\n                        }\n                        if (cVar7 == cVar6) goto code_r0x0042e206;\n                    }\n                    uVar9 = fcn.00425470(arg3);\n                    uVar17 = uVar9;\n                    if (uVar21 < 0xb) goto code_r0x0042e154;\ncode_r0x0042e324:\n                    iVar10 = uVar17;\n                    if (iVar10 - 0x30U < 10) goto code_r0x0042e169;\n                    if (iVar10 - 0x61U < 6) {\n                        iVar16 = uVar17 - 0x57;\n                        goto code_r0x0042e16c;\n                    }\n                    if (5 < iVar10 - 0x41U) break;\n                    iVar16 = uVar17 - 0x37;\n                    if (uVar19 <= uVar13) goto code_r0x0042e177;\ncode_r0x0042e355:\n                    bVar5 = true;\n                } while( true );\n            }\n        }\n    }\n    else {\n        uVar19 = 0;\n        bVar5 = false;\n        if (cStack116 == '\\0') {\n            do {\n                iVar10 = uVar17;\n                if ((*(iVar11 + 0x20) == '\\0') || (iVar10 != *(iVar11 + 0x4a))) {\n                    piVar14 = iVar11 + 0x9c;\n                    uVar18 = uVar21;\n                    if (iVar10 == *(iVar11 + 0x48)) break;\n                    while (iVar10 != *piVar14) {\n                        uVar18 = uVar18 - 1;\n                        piVar14 = piVar14 + 1;\n                        if (uVar18 == 0) goto code_r0x0042e3b3;\n                    }\n                    iVar16 = piVar14 - (iVar11 + 0x9c) >> 1;\n                    if (0xf < iVar16) {\n                        iVar16 = iVar16 + -6;\n                    }\n                    if (uVar13 < uVar19) {\n                        bVar5 = true;\n                    }\n                    else {\n                        uVar18 = uVar19 * uVar12;\n                        uVar19 = uVar18 + iVar16;\n                        iVar22 = iVar22 + 1;\n                        bVar5 = bVar5 | ~iVar16 < uVar18;\n                    }\n                }\n                else {\n                    if (iVar22 == 0) {\n                        bVar3 = true;\n                        goto code_r0x0042e20d;\n                    }\n                    fcn.00448b10(aiStack88, iVar22);\n                    iVar22 = 0;\n                }\n                piVar15 = *arg3;\n                if (piVar15 == NULL) {\ncode_r0x0042e515:\n                    piVar15 = *arg4;\n                    cVar7 = cVar6;\n                }\n                else {\n                    if (piVar15[2] < piVar15[3]) {\n                        piVar15[2] = piVar15[2] + 2;\n                        *(arg3 + 1) = 0xffff;\n                    }\n                    else {\n                        (**(*piVar15 + 0x50))();\n                        piVar15 = *arg3;\n                        *(arg3 + 1) = 0xffff;\n                        if (piVar15 == NULL) goto code_r0x0042e515;\n                    }\n                    if (piVar15[2] < piVar15[3]) {\n                        iVar10 = *piVar15[2];\n                    }\n                    else {\n                        iVar10 = (**(*piVar15 + 0x48))();\n                    }\n                    if (iVar10 == -1) {\n                        *arg3 = NULL;\n                        goto code_r0x0042e515;\n                    }\n                    piVar15 = *arg4;\n                    cVar7 = '\\0';\n                    *(arg3 + 1) = iVar10;\n                }\n                cVar8 = cVar6;\n                if ((piVar15 != NULL) && (cVar8 = '\\0',  *(arg4 + 1) == -1)) {\n                    if (piVar15[2] < piVar15[3]) {\n                        iVar10 = *piVar15[2];\n                    }\n                    else {\n                        iVar10 = (**(*piVar15 + 0x48))();\n                    }\n                    if (iVar10 == -1) {\n                        *arg4 = NULL;\n                        cVar8 = cVar6;\n                    }\n                    else {\n                        *(arg4 + 1) = iVar10;\n                        cVar8 = '\\0';\n                    }\n                }\n                if (cVar7 == cVar8) goto code_r0x0042e206;\n                uVar17 = fcn.00425470(arg3);\n            } while( true );\n        }\n    }\ncode_r0x0042e3b3:\n    bVar3 = false;\n    iVar2 = *(aiStack88[0] + -0x18);\n    goto joined_r0x0042e3bf;\ncode_r0x0042e206:\n    bVar3 = false;\n    cStack116 = '\\x01';\ncode_r0x0042e20d:\n    iVar2 = *(aiStack88[0] + -0x18);\njoined_r0x0042e3bf:\n    if (iVar2 != 0) {\n        fcn.00448b10(aiStack88, iVar22);\n        cVar6 = fcn.00465040(*(iVar11 + 0x10), *(iVar11 + 0x18), aiStack88);\n        if (cVar6 == '\\0') {\n            *in_stack_00000030 = 4;\n        }\n    }\n    if ((((iVar22 == 0) && (!bVar4)) && (*(aiStack88[0] + -0x18) == 0)) || (bVar3)) {\n        *in_stack_00000038 = 0;\n        *in_stack_00000030 = 4;\n    }\n    else if (bVar5) {\n        *in_stack_00000038 = 0xffffffffffffffff;\n        *in_stack_00000030 = 4;\n    }\n    else {\n        if (bVar23) {\n            uVar19 = -uVar19;\n        }\n        *in_stack_00000038 = uVar19;\n    }\n    if (cStack116 != '\\0') {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    piVar15 = arg3[1];\n    *arg1 = *arg3;\n    arg1[1] = piVar15;\n    LOCK();\n    piVar1 = aiStack88[0] + -8;\n    iVar16 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar16 < 1) {\n        fcn.004477a0(aiStack88[0] + -0x18);\n    }\n    return arg1;\n}\n",
        "token_count": 3705
    },
    "0042e7f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t ** fcn.0042e7f0(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t **arg4)\n\n{\n    uint64_t uVar1;\n    int32_t *piVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint8_t uVar5;\n    char cVar6;\n    char cVar7;\n    char cVar8;\n    int16_t iVar9;\n    int64_t iVar10;\n    int16_t *piVar11;\n    int64_t iVar12;\n    int64_t *piVar13;\n    ulong uVar14;\n    int64_t iVar15;\n    uint8_t uVar16;\n    uint8_t uVar17;\n    bool bVar18;\n    bool bVar19;\n    int64_t in_stack_00000028;\n    uint *in_stack_00000030;\n    int64_t *in_stack_00000038;\n    int32_t iStack144;\n    uchar auStack90 [2];\n    int64_t aiStack88 [3];\n    \n    iVar9 = 0;\n    iVar10 = fcn.004248f0(auStack90, in_stack_00000028 + 0xd0);\n    cVar6 = fcn.00425380(arg3, arg4);\n    if (cVar6 == '\\0') {\n        iVar9 = fcn.00425470(arg3);\n        bVar19 = *(iVar10 + 0x96) != iVar9;\n        if ((bVar19) && (*(iVar10 + 0x94) != iVar9)) {\n            cVar8 = *(iVar10 + 0x20);\ncode_r0x0042eff0:\n            uVar16 = 0;\n            iStack144 = 0;\n            do {\n                if ((((cVar8 != '\\0') && (*(iVar10 + 0x4a) == iVar9)) || (*(iVar10 + 0x48) == iVar9)) ||\n                   (iVar3 = *(iVar10 + 0x9c),  iVar3 != iVar9)) goto code_r0x0042e860;\n                if (uVar16 == 0) {\n                    iVar12 = *in_stack_00000038;\n                    iVar15 = *(iVar12 + -0x18);\n                    uVar1 = iVar15 + 1;\n                    if ((*(iVar12 + -0x10) <= uVar1 && uVar1 != *(iVar12 + -0x10)) || (0 < *(iVar12 + -8))) {\n                        fcn.004488f0(in_stack_00000038, uVar1);\n                        iVar12 = *in_stack_00000038;\n                        iVar15 = *(iVar12 + -0x18);\n                    }\n                    *(iVar12 + iVar15) = 0x30;\n                    iVar12 = *in_stack_00000038;\n                    *(iVar12 + -8) = 0;\n                    *(iVar12 + -0x18) = uVar1;\n                    *(iVar12 + uVar1) = 0;\n                }\n                piVar13 = *arg3;\n                iStack144 = iStack144 + 1;\n                if (piVar13 == NULL) {\ncode_r0x0042f177:\n                    cVar8 = '\\x01';\n                }\n                else {\n                    if (piVar13[2] < piVar13[3]) {\n                        piVar13[2] = piVar13[2] + 2;\n                        *(arg3 + 1) = 0xffff;\n                    }\n                    else {\n                        (**(*piVar13 + 0x50))();\n                        piVar13 = *arg3;\n                        *(arg3 + 1) = 0xffff;\n                        if (piVar13 == NULL) goto code_r0x0042f177;\n                    }\n                    if (piVar13[2] < piVar13[3]) {\n                        iVar9 = *piVar13[2];\n                    }\n                    else {\n                        iVar9 = (**(*piVar13 + 0x48))();\n                    }\n                    if (iVar9 == -1) {\n                        *arg3 = NULL;\n                        goto code_r0x0042f177;\n                    }\n                    *(arg3 + 1) = iVar9;\n                    cVar8 = '\\0';\n                }\n                piVar13 = *arg4;\n                cVar7 = '\\x01';\n                if ((piVar13 != NULL) && (cVar7 = '\\0',  *(arg4 + 1) == -1)) {\n                    if (piVar13[2] < piVar13[3]) {\n                        iVar9 = *piVar13[2];\n                    }\n                    else {\n                        iVar9 = (**(*piVar13 + 0x48))();\n                    }\n                    if (iVar9 == -1) {\n                        *arg4 = NULL;\n                        cVar7 = '\\x01';\n                    }\n                    else {\n                        *(arg4 + 1) = iVar9;\n                        cVar7 = '\\0';\n                    }\n                }\n                if (cVar8 == cVar7) goto code_r0x0042f0aa;\n                uVar16 = 1;\n                iVar9 = fcn.00425470(arg3);\n                cVar8 = *(iVar10 + 0x20);\n            } while( true );\n        }\n        cVar8 = *(iVar10 + 0x20);\n        if ((cVar8 != '\\0') && (*(iVar10 + 0x4a) == iVar9)) {\n            cVar8 = '\\x01';\n            goto code_r0x0042eff0;\n        }\n        if (*(iVar10 + 0x48) == iVar9) goto code_r0x0042eff0;\n        fcn.00448b10(in_stack_00000038, (-bVar19 & 2) + 0x2b);\n        uVar14 = fcn.0045ddd0(arg3);\n        cVar8 = fcn.00425380(uVar14, arg4);\n        if (cVar8 == '\\0') {\n            iVar9 = fcn.00425470(arg3);\n            cVar8 = *(iVar10 + 0x20);\n            goto code_r0x0042eff0;\n        }\n    }\n    iStack144 = 0;\n    uVar16 = 0;\n    cVar6 = '\\x01';\n    goto code_r0x0042e860;\ncode_r0x0042ec59:\n    uVar17 = 1;\n    goto code_r0x0042e977;\ncode_r0x0042f0aa:\n    uVar16 = 1;\n    cVar6 = '\\x01';\n    iVar9 = iVar3;\ncode_r0x0042e860:\n    aiStack88[0] = fcn.004472c0(0, 0);\n    if (*(iVar10 + 0x20) != '\\0') {\n        fcn.004488f0(aiStack88, 0x20);\n    }\n    cVar8 = *(iVar10 + 200);\n    if (cVar8 == '\\0') {\n        uVar17 = 0;\n        bVar19 = false;\n        uVar5 = 0;\n        if (cVar6 == '\\0') {\ncode_r0x0042e8a9:\n            uVar17 = uVar5;\n            if (9 < iVar9 - 0x30U) goto code_r0x0042ea46;\n            do {\n                iVar12 = *in_stack_00000038;\n                iVar15 = *(iVar12 + -0x18);\n                uVar1 = iVar15 + 1;\n                if ((*(iVar12 + -0x10) <= uVar1 && uVar1 != *(iVar12 + -0x10)) || (0 < *(iVar12 + -8))) {\n                    fcn.004488f0(in_stack_00000038, uVar1);\n                    iVar12 = *in_stack_00000038;\n                    iVar15 = *(iVar12 + -0x18);\n                }\n                *(iVar12 + iVar15) = iVar9;\n                iVar12 = *in_stack_00000038;\n                *(iVar12 + -0x18) = uVar1;\n                *(iVar12 + -8) = 0;\n                *(iVar12 + uVar1) = 0;\n                uVar16 = 1;\ncode_r0x0042e8ff:\n                piVar13 = *arg3;\n                if (piVar13 == NULL) {\ncode_r0x0042ea15:\n                    cVar6 = '\\x01';\n                    cVar8 = '\\x01';\n                    piVar13 = *arg4;\n                    if (piVar13 != NULL) goto code_r0x0042e960;\ncode_r0x0042ea22:\n                    if (cVar6 == '\\x01') goto code_r0x0042e977;\n                }\n                else {\n                    if (piVar13[2] < piVar13[3]) {\n                        piVar13[2] = piVar13[2] + 2;\n                        *(arg3 + 1) = 0xffff;\n                    }\n                    else {\n                        (**(*piVar13 + 0x50))();\n                        piVar13 = *arg3;\n                        *(arg3 + 1) = 0xffff;\n                        if (piVar13 == NULL) goto code_r0x0042ea15;\n                    }\n                    if (piVar13[2] < piVar13[3]) {\n                        iVar9 = *piVar13[2];\n                    }\n                    else {\n                        iVar9 = (**(*piVar13 + 0x48))();\n                    }\n                    if (iVar9 == -1) {\n                        *arg3 = NULL;\n                        goto code_r0x0042ea15;\n                    }\n                    piVar13 = *arg4;\n                    cVar8 = '\\0';\n                    *(arg3 + 1) = iVar9;\n                    cVar6 = cVar8;\n                    if (piVar13 == NULL) goto code_r0x0042ea22;\ncode_r0x0042e960:\n                    cVar6 = '\\0';\n                    if (*(arg4 + 1) == -1) {\n                        if (piVar13[2] < piVar13[3]) {\n                            iVar9 = *piVar13[2];\n                        }\n                        else {\n                            iVar9 = (**(*piVar13 + 0x48))();\n                        }\n                        if (iVar9 == -1) {\n                            *arg4 = NULL;\n                            cVar6 = '\\x01';\n                        }\n                        else {\n                            *(arg4 + 1) = iVar9;\n                            cVar6 = '\\0';\n                        }\n                    }\n                    if (cVar6 == cVar8) goto code_r0x0042e977;\n                }\n                iVar9 = fcn.00425470(arg3);\n            } while (iVar9 - 0x30U < 10);\ncode_r0x0042ea46:\n            if (((*(iVar10 + 0x48) != iVar9) || (bVar19)) || (uVar17 != 0)) {\n                if (((*(iVar10 + 0xb8) != iVar9) && (*(iVar10 + 0xc4) != iVar9)) ||\n                   (uVar16 = uVar16 & (uVar17 ^ 1),  uVar16 == 0)) goto code_r0x0042e977;\n                iVar12 = *in_stack_00000038;\n                iVar15 = *(iVar12 + -0x18);\n                uVar1 = iVar15 + 1;\n                if ((*(iVar12 + -0x10) <= uVar1 && uVar1 != *(iVar12 + -0x10)) || (0 < *(iVar12 + -8))) {\n                    fcn.004488f0(in_stack_00000038, uVar1);\n                    iVar12 = *in_stack_00000038;\n                    iVar15 = *(iVar12 + -0x18);\n                }\n                *(iVar12 + iVar15) = 0x65;\n                iVar12 = *in_stack_00000038;\n                *(iVar12 + -8) = 0;\n                *(iVar12 + -0x18) = uVar1;\n                *(iVar12 + uVar1) = 0;\n                piVar13 = *arg3;\n                uVar17 = uVar16;\n                if (piVar13 != NULL) {\n                    if (piVar13[2] < piVar13[3]) {\n                        piVar13[2] = piVar13[2] + 2;\n                        *(arg3 + 1) = 0xffff;\n                    }\n                    else {\n                        (**(*piVar13 + 0x50))();\n                        piVar13 = *arg3;\n                        *(arg3 + 1) = 0xffff;\n                        if (piVar13 == NULL) goto code_r0x0042eb10;\n                    }\n                    if (piVar13[2] < piVar13[3]) {\n                        iVar9 = *piVar13[2];\n                    }\n                    else {\n                        iVar9 = (**(*piVar13 + 0x48))();\n                    }\n                    if (iVar9 == -1) {\n                        *arg3 = NULL;\n                    }\n                    else {\n                        *(arg3 + 1) = iVar9;\n                        uVar17 = 0;\n                    }\n                }\ncode_r0x0042eb10:\n                piVar13 = *arg4;\n                if (piVar13 == NULL) {\ncode_r0x0042eb29:\n                    if (uVar17 == uVar16) goto code_r0x0042ec59;\n                }\n                else {\n                    if (*(arg4 + 1) != -1) {\n                        uVar16 = 0;\n                        goto code_r0x0042eb29;\n                    }\n                    if (piVar13[2] < piVar13[3]) {\n                        iVar9 = *piVar13[2];\n                    }\n                    else {\n                        iVar9 = (**(*piVar13 + 0x48))();\n                    }\n                    if (iVar9 == -1) {\n                        *arg4 = NULL;\n                        goto code_r0x0042eb29;\n                    }\n                    *(arg4 + 1) = iVar9;\n                    if (uVar17 == 0) goto code_r0x0042ec59;\n                }\n                iVar9 = fcn.00425470(arg3);\n                if (*(iVar10 + 0x96) == iVar9) {\n                    uVar14 = 0x2b;\n                }\n                else {\n                    uVar16 = 1;\n                    uVar14 = 0x2d;\n                    uVar5 = 1;\n                    if (*(iVar10 + 0x94) != iVar9) goto code_r0x0042e8a9;\n                }\n                fcn.00448b10(in_stack_00000038, uVar14);\n                uVar17 = 1;\n                uVar16 = 1;\n            }\n            else {\n                fcn.00448b10(in_stack_00000038, 0x2e);\n                uVar17 = 0;\n                bVar19 = true;\n            }\n            goto code_r0x0042e8ff;\n        }\n    }\n    else {\n        if (cVar6 == '\\0') {\n            uVar17 = 0;\n            bVar19 = false;\n            cVar6 = *(iVar10 + 0x20);\ncode_r0x0042ecb2:\n            do {\n                cVar7 = iStack144;\n                if (cVar6 == '\\0') goto code_r0x0042ecc0;\n                while (iVar9 != *(iVar10 + 0x4a)) {\ncode_r0x0042ecc0:\n                    piVar11 = iVar10 + 0x9c;\n                    if (iVar9 == *(iVar10 + 0x48)) {\n                        if ((uVar17 != 0) || (bVar19)) goto code_r0x0042e977;\n                        if (*(aiStack88[0] + -0x18) != 0) {\n                            fcn.00448b10(aiStack88, cVar7);\n                        }\n                        fcn.00448b10(in_stack_00000038, 0x2e);\n                        uVar17 = 0;\n                        bVar19 = true;\n                        goto code_r0x0042edd4;\n                    }\n                    do {\n                        if (iVar9 == *piVar11) {\n                            iVar12 = *in_stack_00000038;\n                            iVar15 = *(iVar12 + -0x18);\n                            uVar1 = iVar15 + 1;\n                            if ((*(iVar12 + -0x10) <= uVar1 && uVar1 != *(iVar12 + -0x10)) || (0 < *(iVar12 + -8))) {\n                                fcn.004488f0(in_stack_00000038, uVar1);\n                                iVar12 = *in_stack_00000038;\n                                iVar15 = *(iVar12 + -0x18);\n                            }\n                            *(iVar12 + iVar15) = (piVar11 - (iVar10 + 0x9c) >> 1) + '0';\n                            iVar12 = *in_stack_00000038;\n                            uVar16 = 1;\n                            iStack144 = iStack144 + 1;\n                            *(iVar12 + -8) = 0;\n                            *(iVar12 + -0x18) = uVar1;\n                            *(iVar12 + uVar1) = 0;\n                            goto code_r0x0042edd4;\n                        }\n                        piVar11 = piVar11 + 1;\n                    } while (piVar11 != iVar10 + 0xb0);\n                    if ((((iVar9 != *(iVar10 + 0xb8)) && (iVar9 != *(iVar10 + 0xc4))) || (uVar17 != 0)) || (uVar16 == 0)\n                       ) goto code_r0x0042e977;\n                    if ((*(aiStack88[0] + -0x18) != 0) && (!bVar19)) {\n                        fcn.00448b10(aiStack88, cVar7);\n                    }\n                    fcn.00448b10(in_stack_00000038, 0x65);\n                    uVar14 = fcn.0045ddd0(arg3);\n                    cVar6 = fcn.00425380(uVar14, arg4);\n                    if (cVar6 != '\\0') goto code_r0x0042ec59;\n                    iVar9 = fcn.00425470(arg3);\n                    bVar18 = *(iVar10 + 0x96) != iVar9;\n                    if ((bVar18) && (*(iVar10 + 0x94) != iVar9)) {\n                        cVar6 = *(iVar10 + 0x20);\n                        uVar17 = 1;\n                        uVar16 = 1;\n                        goto code_r0x0042ecb2;\n                    }\n                    cVar6 = *(iVar10 + 0x20);\n                    if ((cVar6 == '\\0') || (*(iVar10 + 0x4a) != iVar9)) {\n                        if (*(iVar10 + 0x48) == iVar9) {\n                            uVar17 = 1;\n                            uVar16 = 1;\n                            goto code_r0x0042ecb2;\n                        }\n                        fcn.00448b10(in_stack_00000038, (-bVar18 & 2) + 0x2b);\n                        uVar17 = 1;\n                        uVar16 = 1;\n                        goto code_r0x0042edd4;\n                    }\n                    uVar17 = 1;\n                    uVar16 = 1;\n                }\n                if ((uVar17 != 0) || (bVar19)) goto code_r0x0042e977;\n                if (iStack144 == 0) {\n                    fcn.004489d0(in_stack_00000038, 0, *(*in_stack_00000038 + -0x18), 0);\n                    break;\n                }\n                fcn.00448b10(aiStack88, cVar7);\n                uVar17 = 0;\n                bVar19 = false;\n                iStack144 = 0;\ncode_r0x0042edd4:\n                piVar13 = *arg3;\n                if (piVar13 == NULL) {\ncode_r0x0042ee69:\n                    piVar13 = *arg4;\n                    cVar6 = cVar8;\n                }\n                else {\n                    if (piVar13[2] < piVar13[3]) {\n                        piVar13[2] = piVar13[2] + 2;\n                        *(arg3 + 1) = 0xffff;\n                    }\n                    else {\n                        (**(*piVar13 + 0x50))();\n                        piVar13 = *arg3;\n                        *(arg3 + 1) = 0xffff;\n                        if (piVar13 == NULL) goto code_r0x0042ee69;\n                    }\n                    if (piVar13[2] < piVar13[3]) {\n                        iVar9 = *piVar13[2];\n                    }\n                    else {\n                        iVar9 = (**(*piVar13 + 0x48))();\n                    }\n                    if (iVar9 == -1) {\n                        *arg3 = NULL;\n                        goto code_r0x0042ee69;\n                    }\n                    piVar13 = *arg4;\n                    cVar6 = '\\0';\n                    *(arg3 + 1) = iVar9;\n                }\n                cVar7 = cVar8;\n                if ((piVar13 != NULL) && (cVar7 = '\\0',  *(arg4 + 1) == -1)) {\n                    if (piVar13[2] < piVar13[3]) {\n                        iVar9 = *piVar13[2];\n                    }\n                    else {\n                        iVar9 = (**(*piVar13 + 0x48))();\n                    }\n                    if (iVar9 == -1) {\n                        *arg4 = NULL;\n                        cVar7 = cVar8;\n                    }\n                    else {\n                        *(arg4 + 1) = iVar9;\n                        cVar7 = '\\0';\n                    }\n                }\n                if (cVar7 == cVar6) goto code_r0x0042e977;\n                iVar9 = fcn.00425470(arg3);\n                cVar6 = *(iVar10 + 0x20);\n            } while( true );\n        }\n        uVar17 = 0;\n        bVar19 = false;\n    }\ncode_r0x0042e977:\n    iVar12 = aiStack88[0];\n    if (*(aiStack88[0] + -0x18) != 0) {\n        if ((uVar17 == 0) && (!bVar19)) {\n            fcn.00448b10(aiStack88, iStack144);\n        }\n        iVar12 = aiStack88[0];\n        cVar6 = fcn.00465040(*(iVar10 + 0x10), *(iVar10 + 0x18), aiStack88);\n        if (cVar6 == '\\0') {\n            *in_stack_00000030 = 4;\n        }\n    }\n    piVar13 = arg3[1];\n    *arg1 = *arg3;\n    arg1[1] = piVar13;\n    LOCK();\n    piVar2 = iVar12 + -8;\n    iVar4 = *piVar2;\n    *piVar2 = *piVar2 + -1;\n    if (iVar4 < 1) {\n        fcn.004477a0(iVar12 + -0x18);\n    }\n    return arg1;\n}\n",
        "token_count": 5165
    },
    "00430640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_bp_28h\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t **\nfcn.00430640(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t arg4, ulong noname_4, ulong noname_5, ulong arg_40h\n            , ulong arg_48h)\n\n{\n    int64_t *piVar1;\n    uint32_t uVar2;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    code *pcVar5;\n    ulong arg3_00;\n    ulong arg4_00;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    ulong *arg1_00;\n    uint64_t arg1_01;\n    uchar *puVar11;\n    uchar *puVar12;\n    uchar *puVar13;\n    uchar *puVar14;\n    uint32_t uVar15;\n    char cVar16;\n    ulong uStack208;\n    uchar auStack200 [32];\n    uint32_t uStack168;\n    ulong uStack160;\n    uchar auStack152 [2];\n    uchar auStack150 [18];\n    uchar auStack132 [36];\n    uint32_t uStack96;\n    uint uStack92;\n    uchar *puStack88;\n    uchar var_48h [4];\n    ulong var_44h;\n    ulong var_38h;\n    ulong var_bp_28h;\n    \n    puStack88 = &stack0xffffffffffffff68;\n    piVar3 = *arg3;\n    piVar4 = arg3[1];\n    uStack92 = noname_4;\n    uStack160 = 0x430677;\n    iVar8 = fcn.00425c30(0x47f360);\n    piVar1 = *(*(arg4 + 0xd0) + 0x18) + iVar8 * 8;\n    iVar10 = *piVar1;\n    if (iVar10 == 0) {\n        uStack160 = 0x43085d;\n        arg1_00 = fcn.004696a0(0x90);\n        *(arg1_00 + 1) = 0;\n        arg1_00[2] = 0;\n        arg1_00[3] = 0;\n        *arg1_00 = 0x488d30;\n        *(arg1_00 + 4) = 0;\n        arg1_00[5] = 0;\n        arg1_00[6] = 0;\n        arg1_00[7] = 0;\n        arg1_00[8] = 0;\n        *(arg1_00 + 9) = 0;\n        *(arg1_00 + 0x49) = 0;\n        *(arg1_00 + 0x11) = 0;\n        uStack160 = 0x4308c3;\n        fcn.0045a3e0(arg1_00, arg4 + 0xd0);\n        uStack160 = 0x4308d5;\n        fcn.0045e9d0(*(arg4 + 0xd0), arg1_00, iVar8);\n        iVar10 = *piVar1;\n    }\n    uVar2 = *(arg4 + 0x18);\n    _var_48h = iVar10 + 0x4a;\n    puVar11 = &stack0xffffffffffffff38;\n    uStack96 = uVar2 & 0x4a;\n    uVar6 = noname_5;\n    if ((uStack96 != 8 && uStack96 != 0x40) && (noname_5 < 1)) {\n        uVar6 = -noname_5;\n    }\n    uVar15 = uStack96 != 8 && uStack96 != 0x40;\n    uStack208 = 0x4306f7;\n    uStack168 = uVar15;\n    iVar7 = fcn.00463cf0(&stack0xffffffffffffff7c, uVar6, _var_48h, uVar2);\n    arg1_01 = iVar7;\n    puVar13 = puStack88 + (0x14 - iVar7);\n    if (*(iVar10 + 0x20) != '\\0') {\n        uStack208 = 0x4307f6;\n        iVar8 = fcn.0040ce40(arg1_01);\n        cVar16 = *(iVar10 + 0x49);\n        arg3_00 = *(iVar10 + 0x10);\n        iVar8 = -iVar8;\n        puVar11 = &stack0xffffffffffffff38 + iVar8;\n        arg4_00 = *(iVar10 + 0x18);\n        *(&stack0xffffffffffffff60 + iVar8) = puVar13 + arg1_01;\n        *(&stack0xffffffffffffff58 + iVar8) = puVar13;\n        puStack88 = &stack0xffffffffffffff6a + iVar8;\n        *(&stack0xffffffffffffff30 + iVar8) = 0x430826;\n        iVar7 = fcn.00464020(&stack0xffffffffffffff6a + iVar8, cVar16, arg3_00, arg4_00);\n        arg1_01 = iVar7 - puStack88;\n        puVar13 = puStack88;\n    }\n    iVar7 = arg1_01;\n    puVar14 = puVar13;\n    if (uVar15 == 0) {\n        if (((uVar2 & 0x200) != 0) && (noname_5 != 0)) {\n            if (uStack96 == 0x40) {\n                arg1_01 = iVar7 + 1;\n                puVar14 = puVar13 + -1;\n                *puVar14 = *(iVar10 + 0x4e);\n            }\n            else {\n                arg1_01 = iVar7 + 2;\n                puVar14 = puVar13 + -2;\n                puVar13[-1] = *(_var_48h + 2 + ((uVar2 & 0x4000) != 0));\n                *puVar14 = *(iVar10 + 0x4e);\n            }\n        }\n    }\n    else if (noname_5 < 0) {\n        arg1_01 = iVar7 + 1;\n        puVar13[-1] = *(iVar10 + 0x4a);\n        puVar14 = puVar13 + -1;\n    }\n    else if ((uVar2 & 0x800) != 0) {\n        arg1_01 = iVar7 + 1;\n        puVar13[-1] = *(iVar10 + 0x4b);\n        puVar14 = puVar13 + -1;\n    }\n    iVar10 = *(arg4 + 0x10);\n    iVar8 = arg1_01;\n    puVar12 = puVar11;\n    puVar13 = puVar14;\n    if (iVar8 < iVar10) {\n        *(puVar11 + -8) = 0x430751;\n        iVar9 = fcn.0040ce40(arg1_01);\n        iVar9 = -iVar9;\n        puVar12 = puVar11 + iVar9;\n        puVar13 = puVar11 + iVar9 + 0x30;\n        *(puVar11 + iVar9 + 0x28) = iVar8;\n        *(puVar11 + iVar9 + 0x20) = iVar10;\n        iVar8 = iVar10;\n        *(puVar11 + iVar9 + -8) = 0x430775;\n        fcn.0045df30(arg4, uStack92, puVar13, puVar14);\n    }\n    cVar16 = piVar4;\n    *(arg4 + 0x10) = 0;\n    if (cVar16 == '\\0') {\n        pcVar5 = *(*piVar3 + 0x60);\n        *(puVar12 + -8) = 0x430798;\n        iVar10 = (*pcVar5)(piVar3, puVar13, iVar8);\n        if (iVar10 != iVar8) {\n            cVar16 = '\\x01';\n        }\n    }\n    *arg1 = piVar3;\n    *(arg1 + 1) = cVar16;\n    return arg1;\n}\n",
        "token_count": 1867
    },
    "00430970": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_bp_28h\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t **\nfcn.00430970(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t arg4, ulong noname_4, ulong noname_5, ulong arg_40h\n            , ulong arg_48h)\n\n{\n    int64_t *piVar1;\n    uint32_t uVar2;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    code *pcVar5;\n    ulong arg3_00;\n    ulong arg4_00;\n    int32_t iVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    ulong *arg1_00;\n    uint64_t uVar10;\n    uchar *puVar11;\n    uchar *puVar12;\n    uchar *puVar13;\n    uchar *arg4_01;\n    uint32_t uVar14;\n    char cVar15;\n    ulong uStack208;\n    uchar auStack200 [32];\n    uint32_t uStack168;\n    ulong uStack160;\n    uchar auStack152 [2];\n    uchar auStack150 [18];\n    uchar auStack132 [36];\n    uint32_t uStack96;\n    uint uStack92;\n    uchar *puStack88;\n    uchar var_48h [4];\n    ulong var_44h;\n    ulong var_38h;\n    ulong var_bp_28h;\n    \n    puStack88 = &stack0xffffffffffffff68;\n    piVar3 = *arg3;\n    piVar4 = arg3[1];\n    uStack92 = noname_4;\n    uStack160 = 0x4309a7;\n    iVar7 = fcn.00425c30(0x47f360);\n    piVar1 = *(*(arg4 + 0xd0) + 0x18) + iVar7 * 8;\n    iVar9 = *piVar1;\n    if (iVar9 == 0) {\n        uStack160 = 0x430b3e;\n        arg1_00 = fcn.004696a0(0x90);\n        *(arg1_00 + 1) = 0;\n        arg1_00[2] = 0;\n        arg1_00[3] = 0;\n        *arg1_00 = 0x488d30;\n        *(arg1_00 + 4) = 0;\n        arg1_00[5] = 0;\n        arg1_00[6] = 0;\n        arg1_00[7] = 0;\n        arg1_00[8] = 0;\n        *(arg1_00 + 9) = 0;\n        *(arg1_00 + 0x49) = 0;\n        *(arg1_00 + 0x11) = 0;\n        uStack160 = 0x430ba4;\n        fcn.0045a3e0(arg1_00, arg4 + 0xd0);\n        uStack160 = 0x430bb6;\n        fcn.0045e9d0(*(arg4 + 0xd0), arg1_00, iVar7);\n        iVar9 = *piVar1;\n    }\n    uVar2 = *(arg4 + 0x18);\n    _var_48h = iVar9 + 0x4a;\n    puVar11 = &stack0xffffffffffffff38;\n    uStack96 = uVar2 & 0x4a;\n    if ((uStack96 == 8 || uStack96 == 0x40) || (uVar10 = 0,  noname_5 != 0)) {\n        uVar10 = noname_5;\n    }\n    uVar14 = uStack96 != 8 && uStack96 != 0x40;\n    uStack208 = 0x430a24;\n    uStack168 = uVar14;\n    iVar6 = fcn.00463cf0(&stack0xffffffffffffff7c, uVar10, _var_48h, uVar2);\n    uVar10 = iVar6;\n    puVar13 = puStack88 + (0x14 - iVar6);\n    if (*(iVar9 + 0x20) != '\\0') {\n        uStack208 = 0x430af3;\n        iVar7 = fcn.0040ce40(uVar10);\n        cVar15 = *(iVar9 + 0x49);\n        arg3_00 = *(iVar9 + 0x10);\n        iVar7 = -iVar7;\n        puVar11 = &stack0xffffffffffffff38 + iVar7;\n        arg4_00 = *(iVar9 + 0x18);\n        *(&stack0xffffffffffffff60 + iVar7) = puVar13 + uVar10;\n        *(&stack0xffffffffffffff58 + iVar7) = puVar13;\n        puStack88 = &stack0xffffffffffffff6a + iVar7;\n        *(&stack0xffffffffffffff30 + iVar7) = 0x430b23;\n        iVar6 = fcn.00464020(&stack0xffffffffffffff6a + iVar7, cVar15, arg3_00, arg4_00);\n        uVar10 = iVar6 - puStack88;\n        puVar13 = puStack88;\n    }\n    arg4_01 = puVar13;\n    if (((uVar14 == 0) && ((uVar2 & 0x200) != 0)) && (noname_5 != 0)) {\n        if (uStack96 == 0x40) {\n            uVar10 = uVar10 + 1;\n            arg4_01 = puVar13 + -1;\n            *arg4_01 = *(iVar9 + 0x4e);\n        }\n        else {\n            uVar10 = uVar10 + 2;\n            arg4_01 = puVar13 + -2;\n            puVar13[-1] = *(_var_48h + 2 + ((uVar2 & 0x4000) != 0));\n            *arg4_01 = *(iVar9 + 0x4e);\n        }\n    }\n    iVar9 = *(arg4 + 0x10);\n    iVar7 = uVar10;\n    puVar12 = puVar11;\n    puVar13 = arg4_01;\n    if (iVar7 < iVar9) {\n        *(puVar11 + -8) = 0x430a65;\n        iVar8 = fcn.0040ce40(uVar10);\n        iVar8 = -iVar8;\n        puVar12 = puVar11 + iVar8;\n        puVar13 = puVar11 + iVar8 + 0x30;\n        *(puVar11 + iVar8 + 0x28) = iVar7;\n        *(puVar11 + iVar8 + 0x20) = iVar9;\n        iVar7 = iVar9;\n        *(puVar11 + iVar8 + -8) = 0x430a89;\n        fcn.0045df30(arg4, uStack92, puVar13, arg4_01);\n    }\n    cVar15 = piVar4;\n    *(arg4 + 0x10) = 0;\n    if (cVar15 == '\\0') {\n        pcVar5 = *(*piVar3 + 0x60);\n        *(puVar12 + -8) = 0x430aac;\n        iVar9 = (*pcVar5)(piVar3, puVar13, iVar7);\n        if (iVar9 != iVar7) {\n            cVar15 = '\\x01';\n        }\n    }\n    *arg1 = piVar3;\n    *(arg1 + 1) = cVar15;\n    return arg1;\n}\n",
        "token_count": 1727
    },
    "00430c50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_bp_28h\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t **\nfcn.00430c50(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t arg4, ulong noname_4, int64_t noname_5, \n            ulong arg_40h, ulong arg_48h)\n\n{\n    int64_t *piVar1;\n    uint32_t uVar2;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    code *pcVar5;\n    ulong arg3_00;\n    ulong arg4_00;\n    int32_t iVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    ulong *arg1_00;\n    uint64_t arg1_01;\n    uchar *puVar10;\n    uchar *puVar11;\n    uchar *puVar12;\n    uchar *puVar13;\n    uint32_t uVar14;\n    char cVar15;\n    ulong uStack224;\n    uchar auStack216 [32];\n    uint32_t uStack184;\n    ulong uStack176;\n    uchar auStack168 [2];\n    uchar auStack166 [6];\n    ulong uStack160;\n    uchar auStack128 [32];\n    uint32_t uStack96;\n    uint uStack92;\n    uchar *puStack88;\n    uchar var_48h [4];\n    ulong var_44h;\n    ulong var_38h;\n    ulong var_bp_28h;\n    \n    piVar3 = *arg3;\n    piVar4 = arg3[1];\n    uStack92 = noname_4;\n    uStack160 = 0x430c87;\n    iVar7 = fcn.00425c30(0x47f360);\n    piVar1 = *(*(arg4 + 0xd0) + 0x18) + iVar7 * 8;\n    iVar9 = *piVar1;\n    if (iVar9 == 0) {\n        uStack160 = 0x430e6d;\n        arg1_00 = fcn.004696a0(0x90);\n        *(arg1_00 + 1) = 0;\n        arg1_00[2] = 0;\n        arg1_00[3] = 0;\n        *arg1_00 = 0x488d30;\n        *(arg1_00 + 4) = 0;\n        arg1_00[5] = 0;\n        arg1_00[6] = 0;\n        arg1_00[7] = 0;\n        arg1_00[8] = 0;\n        *(arg1_00 + 9) = 0;\n        *(arg1_00 + 0x49) = 0;\n        *(arg1_00 + 0x11) = 0;\n        uStack160 = 0x430ed3;\n        fcn.0045a3e0(arg1_00, arg4 + 0xd0);\n        uStack160 = 0x430ee5;\n        fcn.0045e9d0(*(arg4 + 0xd0), arg1_00, iVar7);\n        iVar9 = *piVar1;\n    }\n    uVar2 = *(arg4 + 0x18);\n    _var_48h = iVar9 + 0x4a;\n    puVar10 = &stack0xffffffffffffff28;\n    puStack88 = &stack0xffffffffffffff58;\n    uStack96 = uVar2 & 0x4a;\n    iVar7 = noname_5;\n    if ((uStack96 != 8 && uStack96 != 0x40) && (noname_5 < 1)) {\n        iVar7 = -noname_5;\n    }\n    uVar14 = uStack96 != 8 && uStack96 != 0x40;\n    uStack224 = 0x430d09;\n    uStack184 = uVar14;\n    iVar6 = fcn.00463da0(&stack0xffffffffffffff80, iVar7, _var_48h, uVar2);\n    arg1_01 = iVar6;\n    puVar12 = puStack88 + (0x28 - iVar6);\n    if (*(iVar9 + 0x20) != '\\0') {\n        uStack224 = 0x430e06;\n        iVar7 = fcn.0040ce40(arg1_01);\n        cVar15 = *(iVar9 + 0x49);\n        arg3_00 = *(iVar9 + 0x10);\n        iVar7 = -iVar7;\n        puVar10 = &stack0xffffffffffffff28 + iVar7;\n        arg4_00 = *(iVar9 + 0x18);\n        *(&stack0xffffffffffffff50 + iVar7) = puVar12 + arg1_01;\n        *(&stack0xffffffffffffff48 + iVar7) = puVar12;\n        puStack88 = &stack0xffffffffffffff5a + iVar7;\n        *(&stack0xffffffffffffff20 + iVar7) = 0x430e36;\n        iVar6 = fcn.00464020(&stack0xffffffffffffff5a + iVar7, cVar15, arg3_00, arg4_00);\n        arg1_01 = iVar6 - puStack88;\n        puVar12 = puStack88;\n    }\n    iVar6 = arg1_01;\n    puVar13 = puVar12;\n    if (uVar14 == 0) {\n        if (((uVar2 & 0x200) != 0) && (noname_5 != 0)) {\n            if (uStack96 == 0x40) {\n                arg1_01 = iVar6 + 1;\n                puVar13 = puVar12 + -1;\n                *puVar13 = *(iVar9 + 0x4e);\n            }\n            else {\n                arg1_01 = iVar6 + 2;\n                puVar13 = puVar12 + -2;\n                puVar12[-1] = *(_var_48h + 2 + ((uVar2 & 0x4000) != 0));\n                *puVar13 = *(iVar9 + 0x4e);\n            }\n        }\n    }\n    else if (noname_5 < 0) {\n        arg1_01 = iVar6 + 1;\n        puVar12[-1] = *(iVar9 + 0x4a);\n        puVar13 = puVar12 + -1;\n    }\n    else if ((uVar2 & 0x800) != 0) {\n        arg1_01 = iVar6 + 1;\n        puVar12[-1] = *(iVar9 + 0x4b);\n        puVar13 = puVar12 + -1;\n    }\n    iVar9 = *(arg4 + 0x10);\n    iVar7 = arg1_01;\n    puVar11 = puVar10;\n    puVar12 = puVar13;\n    if (iVar7 < iVar9) {\n        *(puVar10 + -8) = 0x430d63;\n        iVar8 = fcn.0040ce40(arg1_01);\n        iVar8 = -iVar8;\n        puVar11 = puVar10 + iVar8;\n        puVar12 = puVar10 + iVar8 + 0x30;\n        *(puVar10 + iVar8 + 0x28) = iVar7;\n        *(puVar10 + iVar8 + 0x20) = iVar9;\n        iVar7 = iVar9;\n        *(puVar10 + iVar8 + -8) = 0x430d87;\n        fcn.0045df30(arg4, uStack92, puVar12, puVar13);\n    }\n    cVar15 = piVar4;\n    *(arg4 + 0x10) = 0;\n    if (cVar15 == '\\0') {\n        pcVar5 = *(*piVar3 + 0x60);\n        *(puVar11 + -8) = 0x430daa;\n        iVar9 = (*pcVar5)(piVar3, puVar12, iVar7);\n        if (iVar9 != iVar7) {\n            cVar15 = '\\x01';\n        }\n    }\n    *arg1 = piVar3;\n    *(arg1 + 1) = cVar15;\n    return arg1;\n}\n",
        "token_count": 1866
    },
    "00430f80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_bp_28h\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t **\nfcn.00430f80(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t arg4, ulong noname_4, int64_t noname_5, \n            ulong arg_40h, ulong arg_48h)\n\n{\n    int64_t *piVar1;\n    uint32_t uVar2;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    code *pcVar5;\n    ulong arg3_00;\n    ulong arg4_00;\n    int32_t iVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    ulong *arg1_00;\n    uint64_t arg1_01;\n    uchar *puVar10;\n    uchar *puVar11;\n    uchar *puVar12;\n    uchar *arg4_01;\n    uint32_t uVar13;\n    char cVar14;\n    ulong uStack224;\n    uchar auStack216 [32];\n    uint32_t uStack184;\n    ulong uStack176;\n    uchar auStack168 [2];\n    uchar auStack166 [6];\n    ulong uStack160;\n    uchar auStack128 [32];\n    uint32_t uStack96;\n    uint uStack92;\n    uchar *puStack88;\n    uchar var_48h [4];\n    ulong var_44h;\n    ulong var_38h;\n    ulong var_bp_28h;\n    \n    piVar3 = *arg3;\n    piVar4 = arg3[1];\n    uStack92 = noname_4;\n    uStack160 = 0x430fb7;\n    iVar7 = fcn.00425c30(0x47f360);\n    piVar1 = *(*(arg4 + 0xd0) + 0x18) + iVar7 * 8;\n    iVar9 = *piVar1;\n    if (iVar9 == 0) {\n        uStack160 = 0x43114e;\n        arg1_00 = fcn.004696a0(0x90);\n        *(arg1_00 + 1) = 0;\n        arg1_00[2] = 0;\n        arg1_00[3] = 0;\n        *arg1_00 = 0x488d30;\n        *(arg1_00 + 4) = 0;\n        arg1_00[5] = 0;\n        arg1_00[6] = 0;\n        arg1_00[7] = 0;\n        arg1_00[8] = 0;\n        *(arg1_00 + 9) = 0;\n        *(arg1_00 + 0x49) = 0;\n        *(arg1_00 + 0x11) = 0;\n        uStack160 = 0x4311b4;\n        fcn.0045a3e0(arg1_00, arg4 + 0xd0);\n        uStack160 = 0x4311c6;\n        fcn.0045e9d0(*(arg4 + 0xd0), arg1_00, iVar7);\n        iVar9 = *piVar1;\n    }\n    uVar2 = *(arg4 + 0x18);\n    _var_48h = iVar9 + 0x4a;\n    puVar10 = &stack0xffffffffffffff28;\n    puStack88 = &stack0xffffffffffffff58;\n    uStack96 = uVar2 & 0x4a;\n    if ((uStack96 == 8 || uStack96 == 0x40) || (iVar7 = 0,  noname_5 != 0)) {\n        iVar7 = noname_5;\n    }\n    uVar13 = uStack96 != 8 && uStack96 != 0x40;\n    uStack224 = 0x431034;\n    uStack184 = uVar13;\n    iVar6 = fcn.00463da0(&stack0xffffffffffffff80, iVar7, _var_48h, uVar2);\n    arg1_01 = iVar6;\n    puVar12 = puStack88 + (0x28 - iVar6);\n    if (*(iVar9 + 0x20) != '\\0') {\n        uStack224 = 0x431103;\n        iVar7 = fcn.0040ce40(arg1_01);\n        cVar14 = *(iVar9 + 0x49);\n        arg3_00 = *(iVar9 + 0x10);\n        iVar7 = -iVar7;\n        puVar10 = &stack0xffffffffffffff28 + iVar7;\n        arg4_00 = *(iVar9 + 0x18);\n        *(&stack0xffffffffffffff50 + iVar7) = puVar12 + arg1_01;\n        *(&stack0xffffffffffffff48 + iVar7) = puVar12;\n        puStack88 = &stack0xffffffffffffff5a + iVar7;\n        *(&stack0xffffffffffffff20 + iVar7) = 0x431133;\n        iVar6 = fcn.00464020(&stack0xffffffffffffff5a + iVar7, cVar14, arg3_00, arg4_00);\n        arg1_01 = iVar6 - puStack88;\n        puVar12 = puStack88;\n    }\n    arg4_01 = puVar12;\n    if (((uVar13 == 0) && ((uVar2 & 0x200) != 0)) && (noname_5 != 0)) {\n        if (uStack96 == 0x40) {\n            arg1_01 = arg1_01 + 1;\n            arg4_01 = puVar12 + -1;\n            *arg4_01 = *(iVar9 + 0x4e);\n        }\n        else {\n            arg1_01 = arg1_01 + 2;\n            arg4_01 = puVar12 + -2;\n            puVar12[-1] = *(_var_48h + 2 + ((uVar2 & 0x4000) != 0));\n            *arg4_01 = *(iVar9 + 0x4e);\n        }\n    }\n    iVar9 = *(arg4 + 0x10);\n    iVar7 = arg1_01;\n    puVar11 = puVar10;\n    puVar12 = arg4_01;\n    if (iVar7 < iVar9) {\n        *(puVar10 + -8) = 0x431075;\n        iVar8 = fcn.0040ce40(arg1_01);\n        iVar8 = -iVar8;\n        puVar11 = puVar10 + iVar8;\n        puVar12 = puVar10 + iVar8 + 0x30;\n        *(puVar10 + iVar8 + 0x28) = iVar7;\n        *(puVar10 + iVar8 + 0x20) = iVar9;\n        iVar7 = iVar9;\n        *(puVar10 + iVar8 + -8) = 0x431099;\n        fcn.0045df30(arg4, uStack92, puVar12, arg4_01);\n    }\n    cVar14 = piVar4;\n    *(arg4 + 0x10) = 0;\n    if (cVar14 == '\\0') {\n        pcVar5 = *(*piVar3 + 0x60);\n        *(puVar11 + -8) = 0x4310bc;\n        iVar9 = (*pcVar5)(piVar3, puVar12, iVar7);\n        if (iVar9 != iVar7) {\n            cVar14 = '\\x01';\n        }\n    }\n    *arg1 = piVar3;\n    *(arg1 + 1) = cVar14;\n    return arg1;\n}\n",
        "token_count": 1739
    },
    "00431320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_dh\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t **\nfcn.00431320(int64_t **arg1, uchar *arg2, int64_t **arg3, int64_t arg4, ulong noname_4, ulong noname_5, ulong noname_6, \n            ulong noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, ulong noname_12, \n            ulong noname_13, ulong noname_14, ulong noname_15, ulong arg_90h, ulong arg_98h, ulong arg_a0h)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    ulong arg2_00;\n    char cVar3;\n    int64_t iVar4;\n    int64_t *arg1_00;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    char *pcVar8;\n    int64_t *arg1_01;\n    uchar *arg1_02;\n    int32_t iVar9;\n    char *arg2_01;\n    uchar *puVar10;\n    uchar *puVar11;\n    uchar *puVar12;\n    uint64_t arg3_00;\n    char *pcVar13;\n    uint32_t uVar14;\n    uchar *arg4_00;\n    uchar *puVar15;\n    ulong uVar16;\n    ulong var_10h;\n    ulong uStack304;\n    uchar auStack296 [32];\n    int64_t aiStack264 [4];\n    char acStack232 [72];\n    uchar *puStack160;\n    uint32_t uStack152;\n    uint uStack148;\n    char *pcStack144;\n    int64_t *piStack136;\n    int64_t *piStack128;\n    uchar uStack117;\n    uint32_t uStack116;\n    ulong uStack112;\n    uchar auStack104 [40];\n    ulong var_38h;\n    ulong var_2ch;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_dh;\n    \n    arg2_01 = &stack0xffffffffffffff18;\n    piStack136 = arg3[1];\n    piVar1 = *arg3;\n    uStack148 = noname_4;\n    piStack128 = arg4 + 0xd0;\n    aiStack264[3] = 0x431387;\n    puStack160 = arg2;\n    iVar4 = fcn.004247f0(&stack0xffffffffffffff8b, piStack128);\n    iVar5 = 6;\n    if (-1 < *(arg4 + 8)) {\n        iVar5 = *(arg4 + 8);\n    }\n    aiStack264[3] = 0x4313a4;\n    fcn.004492f0(arg4, &stack0xffffffffffffff98);\n    puVar10 = &stack0xfffffffffffffed8;\n    uStack304 = 0x4313ad;\n    aiStack264[1] = noname_6;\n    uStack112 = fcn.00460180();\n    pcVar8 = &stack0xffffffffffffff90;\n    uStack304 = 0x4313dd;\n    aiStack264[0] = iVar5;\n    pcStack144 = pcVar8;\n    uVar16 = aiStack264[1];\n    uStack116 = fcn.00464730(pcVar8, &stack0xffffffffffffff18, 0x2d, &stack0xffffffffffffff98);\n    if (0x2c < uStack116) {\n        uStack152 = uStack116 + 1;\n        uStack304 = 0x4315dc;\n        iVar6 = fcn.0040ce40(pcVar8);\n        iVar6 = -iVar6;\n        puVar10 = &stack0xfffffffffffffed8 + iVar6;\n        *(&stack0xfffffffffffffed0 + iVar6) = 0x4315e4;\n        uStack112 = fcn.00460180();\n        pcVar8 = pcStack144;\n        arg2_01 = &stack0xffffffffffffff18 + iVar6;\n        arg3_00 = uStack152;\n        *(&stack0xffffffffffffff00 + iVar6) = uVar16;\n        *(&stack0xfffffffffffffef8 + iVar6) = iVar5;\n        *(&stack0xfffffffffffffed0 + iVar6) = 0x43160b;\n        uStack116 = fcn.00464730(pcVar8, arg2_01, arg3_00, &stack0xffffffffffffff98);\n    }\n    arg1_01 = piStack128;\n    *(puVar10 + -8) = 0x4313f2;\n    arg1_00 = fcn.00467260(arg1_01);\n    uVar14 = uStack116;\n    pcVar13 = uStack116;\n    *(puVar10 + -8) = 0x431409;\n    iVar5 = fcn.0040ce40(arg1_01);\n    iVar5 = -iVar5;\n    pcVar8 = arg2_01 + pcVar13;\n    puVar15 = puVar10 + iVar5 + 0x40;\n    if (*(arg1_00 + 7) == '\\x01') {\n        pcStack144 = pcVar13;\n        piStack128 = piStack128 & 0xffffffff00000000 | uVar14;\n        *(puVar10 + iVar5 + -8) = 0x431666;\n        sub.msvcrt.dll_memcpy(puVar15, arg2_01, pcVar8 - arg2_01);\n        pcVar8 = pcStack144;\n    }\n    else {\n        if (*(arg1_00 + 7) == '\\0') {\n            pcStack144 = pcVar8;\n            piStack128 = arg1_00;\n            *(puVar10 + iVar5 + -8) = 0x431623;\n            fcn.00425590(arg1_00);\n            pcVar8 = pcStack144;\n            arg1_00 = piStack128;\n        }\n        pcVar2 = *(*arg1_00 + 0x38);\n        *(puVar10 + iVar5 + -8) = 0x43143c;\n        (*pcVar2)(arg1_00, arg2_01, pcVar8, puVar15);\n        pcVar8 = uStack116;\n        piStack128._0_4_ = uStack116;\n    }\n    pcStack144 = pcStack144 & 0xffffffff00000000 | piStack128;\n    piStack128 = pcVar8;\n    *(puVar10 + iVar5 + -8) = 0x43145b;\n    iVar6 = sub.msvcrt.dll_memchr(arg2_01, 0x2e, pcVar8);\n    if (iVar6 == 0) {\n        arg1_02 = NULL;\n    }\n    else {\n        arg1_02 = puVar15 + (iVar6 - arg2_01);\n        *arg1_02 = *(iVar4 + 0x48);\n    }\n    puVar11 = puVar10 + iVar5;\n    arg4_00 = puVar15;\n    if ((*(iVar4 + 0x20) != '\\0') &&\n       (((arg1_02 != NULL || (pcStack144 < 3)) ||\n        ((puVar11 = puVar10 + iVar5,  arg2_01[1] < ':' &&\n         ((puVar11 = puVar10 + iVar5,  '/' < arg2_01[1] && (puVar11 = puVar10 + iVar5,  arg2_01[2] - 0x30U < 10))))))))\n    {\n        *(puVar10 + iVar5 + -8) = 0x4314c2;\n        iVar6 = fcn.0040ce40(arg1_02);\n        iVar6 = -iVar6;\n        puVar11 = puVar10 + iVar6 + iVar5;\n        arg4_00 = puVar10 + iVar6 + iVar5 + 0x40;\n        if ((*arg2_01 == '+') || (*arg2_01 == '-')) {\n            iVar9 = 1;\n            uStack116 = pcStack144 - 1;\n            *arg4_00 = *puVar15;\n            iVar7 = 1;\n        }\n        else {\n            iVar9 = 0;\n            iVar7 = 0;\n        }\n        uVar16 = *(iVar4 + 0x18);\n        arg2_00 = *(iVar4 + 0x10);\n        *(puVar10 + iVar6 + iVar5 + 0x20) = arg1_02;\n        arg1_02 = puStack160;\n        *(puVar10 + iVar6 + iVar5 + 0x38) = &stack0xffffffffffffff8c;\n        *(puVar10 + iVar6 + iVar5 + 0x30) = puVar15 + iVar7;\n        *(puVar10 + iVar6 + iVar5 + 0x28) = arg4_00 + iVar7;\n        *(puVar10 + iVar6 + iVar5 + -8) = 0x431525;\n        fcn.00431260(arg1_02, arg2_00, uVar16);\n        pcStack144._0_4_ = iVar9 + uStack116;\n        uStack116 = pcStack144;\n    }\n    iVar5 = *(arg4 + 0x10);\n    iVar4 = pcStack144;\n    puVar12 = puVar11;\n    puVar15 = arg4_00;\n    if (iVar4 < iVar5) {\n        *(puVar11 + -8) = 0x431549;\n        iVar6 = fcn.0040ce40(arg1_02);\n        iVar6 = -iVar6;\n        puVar12 = puVar11 + iVar6;\n        puVar15 = puVar11 + iVar6 + 0x40;\n        *(puVar11 + iVar6 + 0x28) = iVar4;\n        *(puVar11 + iVar6 + 0x20) = iVar5;\n        iVar4 = iVar5;\n        *(puVar11 + iVar6 + -8) = 0x431573;\n        fcn.0045df30(arg4, uStack148, puVar15, arg4_00);\n        uStack116 = iVar5;\n    }\n    *(arg4 + 0x10) = 0;\n    cVar3 = piStack136;\n    if (cVar3 == '\\0') {\n        pcVar2 = *(*piVar1 + 0x60);\n        *(puVar12 + -8) = 0x431598;\n        iVar5 = (*pcVar2)(piVar1, puVar15, iVar4);\n        if (iVar5 != iVar4) {\n            cVar3 = '\\x01';\n        }\n    }\n    *arg1 = piVar1;\n    *(arg1 + 1) = cVar3;\n    return arg1;\n}\n",
        "token_count": 2486
    },
    "00431680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_20h_2\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t **\nfcn.00431680(int64_t **arg1, uchar *arg2, int64_t **arg3, int64_t arg4, ulong noname_4, ulong noname_5, \n            unkbyte10 *noname_6, ulong noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, \n            ulong noname_12, ulong noname_13, ulong noname_14, ulong noname_15, ulong noname_16, ulong noname_17, \n            ulong arg_a0h, ulong arg_a8h, ulong arg_b0h)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    ulong arg3_00;\n    ulong arg2_00;\n    char cVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uchar *puVar8;\n    char *pcVar9;\n    uchar *puVar10;\n    int32_t iVar11;\n    char *arg2_01;\n    uchar *puVar12;\n    uchar *puVar13;\n    uchar *puVar14;\n    uint64_t arg3_01;\n    char *pcVar15;\n    uint32_t uVar16;\n    uchar *arg4_00;\n    ulong var_13h;\n    ulong var_20h;\n    ulong var_38h_2;\n    ulong uStack336;\n    uchar auStack328 [32];\n    int64_t iStack296;\n    uchar *apuStack288 [3];\n    char acStack264 [8];\n    ulong uStack256;\n    uchar *puStack184;\n    uchar *puStack176;\n    uchar *puStack168;\n    uint32_t uStack160;\n    uint uStack156;\n    int64_t *piStack152;\n    char *pcStack144;\n    uchar auStack136 [8];\n    ushort uStack128;\n    unkbyte10 Stack120;\n    uchar uStack101;\n    uint32_t uStack100;\n    ulong uStack96;\n    uchar auStack88 [16];\n    ulong var_40h;\n    ulong var_38h;\n    ulong var_30h;\n    ulong var_20h_2;\n    ulong var_18h;\n    ulong var_10h;\n    \n    apuStack288[0] = &stack0xffffffffffffff88;\n    piStack152 = arg3[1];\n    piVar1 = *arg3;\n    uStack156 = noname_4;\n    _auStack136 = *noname_6;\n    pcStack144 = arg4 + 0xd0;\n    uStack256 = 0x4316eb;\n    puStack184 = arg2;\n    iVar4 = fcn.004247f0(&stack0xffffffffffffff9b, pcStack144);\n    iVar5 = 6;\n    if (-1 < *(arg4 + 8)) {\n        iVar5 = *(arg4 + 8);\n    }\n    uStack256 = 0x431708;\n    fcn.004492f0(arg4, &stack0xffffffffffffffa8);\n    puVar12 = &stack0xfffffffffffffeb8;\n    uStack336 = 0x431711;\n    uStack96 = fcn.00460180();\n    arg2_01 = &stack0xfffffffffffffef8;\n    puVar8 = &stack0xffffffffffffffa0;\n    Stack120 = _auStack136;\n    uStack336 = 0x43174a;\n    iStack296 = iVar5;\n    puStack176 = apuStack288[0];\n    puStack168 = puVar8;\n    uStack100 = fcn.00464730(puVar8, arg2_01, 0x36, &stack0xffffffffffffffa8);\n    if (0x35 < uStack100) {\n        uStack160 = uStack100 + 1;\n        uStack336 = 0x431948;\n        iVar6 = fcn.0040ce40(puVar8);\n        iVar6 = -iVar6;\n        puVar12 = &stack0xfffffffffffffeb8 + iVar6;\n        *(&stack0xfffffffffffffeb0 + iVar6) = 0x431950;\n        uStack96 = fcn.00460180();\n        Stack120 = _auStack136;\n        puVar10 = puStack168;\n        puVar8 = puStack176;\n        arg2_01 = &stack0xfffffffffffffef8 + iVar6;\n        arg3_01 = uStack160;\n        *(&stack0xfffffffffffffed8 + iVar6) = iVar5;\n        *(&stack0xfffffffffffffee0 + iVar6) = puVar8;\n        *(&stack0xfffffffffffffeb0 + iVar6) = 0x431980;\n        uStack100 = fcn.00464730(puVar10, arg2_01, arg3_01, &stack0xffffffffffffffa8);\n    }\n    pcVar9 = pcStack144;\n    *(puVar12 + -8) = 0x43175f;\n    auStack136 = fcn.00467260(pcVar9);\n    uVar16 = uStack100;\n    pcVar15 = uStack100;\n    *(puVar12 + -8) = 0x431776;\n    iVar5 = fcn.0040ce40(pcVar9);\n    iVar5 = -iVar5;\n    pcVar9 = arg2_01 + pcVar15;\n    puVar8 = puVar12 + iVar5 + 0x40;\n    if (*(auStack136 + 7) == '\\x01') {\n        pcStack144 = pcVar15;\n        _auStack136 = CONCAT64(stack0xffffffffffffff7c, uVar16);\n        *(puVar12 + iVar5 + -8) = 0x4319e6;\n        sub.msvcrt.dll_memcpy(puVar8, arg2_01, pcVar9 - arg2_01);\n        pcVar9 = pcStack144;\n    }\n    else {\n        if (*(auStack136 + 7) == '\\0') {\n            pcStack144 = pcVar9;\n            *(puVar12 + iVar5 + -8) = 0x4319a0;\n            fcn.00425590(auStack136);\n            pcVar9 = pcStack144;\n        }\n        pcVar2 = *(*auStack136 + 0x38);\n        *(puVar12 + iVar5 + -8) = 0x4317a9;\n        (*pcVar2)(auStack136, arg2_01, pcVar9, puVar8);\n        pcVar9 = uStack100;\n        auStack136._0_4_ = uStack100;\n    }\n    pcStack144 = pcStack144 & 0xffffffff00000000 | auStack136._0_4_;\n    _auStack136 = CONCAT28(uStack128, pcVar9);\n    *(puVar12 + iVar5 + -8) = 0x4317c8;\n    iVar6 = sub.msvcrt.dll_memchr(arg2_01, 0x2e, pcVar9);\n    if (iVar6 == 0) {\n        puVar10 = NULL;\n    }\n    else {\n        puVar10 = puVar8 + (iVar6 - arg2_01);\n        *puVar10 = *(iVar4 + 0x48);\n    }\n    puVar13 = puVar12 + iVar5;\n    arg4_00 = puVar8;\n    if ((*(iVar4 + 0x20) != '\\0') &&\n       (((puVar10 != NULL || (pcStack144 < 3)) ||\n        ((puVar13 = puVar12 + iVar5,  arg2_01[1] < ':' &&\n         ((puVar13 = puVar12 + iVar5,  '/' < arg2_01[1] && (puVar13 = puVar12 + iVar5,  arg2_01[2] - 0x30U < 10))))))))\n    {\n        *(puVar12 + iVar5 + -8) = 0x43182f;\n        iVar6 = fcn.0040ce40(puVar10);\n        iVar6 = -iVar6;\n        puVar13 = puVar12 + iVar6 + iVar5;\n        arg4_00 = puVar12 + iVar6 + iVar5 + 0x40;\n        if ((*arg2_01 == '+') || (*arg2_01 == '-')) {\n            iVar11 = 1;\n            uStack100 = pcStack144 - 1;\n            *arg4_00 = *puVar8;\n            iVar7 = 1;\n        }\n        else {\n            iVar11 = 0;\n            iVar7 = 0;\n        }\n        arg3_00 = *(iVar4 + 0x18);\n        arg2_00 = *(iVar4 + 0x10);\n        *(puVar12 + iVar6 + iVar5 + 0x20) = puVar10;\n        puVar10 = puStack184;\n        *(puVar12 + iVar6 + iVar5 + 0x38) = &stack0xffffffffffffff9c;\n        *(puVar12 + iVar6 + iVar5 + 0x30) = puVar8 + iVar7;\n        *(puVar12 + iVar6 + iVar5 + 0x28) = arg4_00 + iVar7;\n        *(puVar12 + iVar6 + iVar5 + -8) = 0x431892;\n        fcn.00431260(puVar10, arg2_00, arg3_00);\n        pcStack144._0_4_ = iVar11 + uStack100;\n        uStack100 = pcStack144;\n    }\n    iVar5 = *(arg4 + 0x10);\n    iVar4 = pcStack144;\n    puVar14 = puVar13;\n    puVar8 = arg4_00;\n    if (iVar4 < iVar5) {\n        *(puVar13 + -8) = 0x4318b9;\n        iVar6 = fcn.0040ce40(puVar10);\n        iVar6 = -iVar6;\n        puVar14 = puVar13 + iVar6;\n        puVar8 = puVar13 + iVar6 + 0x40;\n        *(puVar13 + iVar6 + 0x28) = iVar4;\n        *(puVar13 + iVar6 + 0x20) = iVar5;\n        iVar4 = iVar5;\n        *(puVar13 + iVar6 + -8) = 0x4318e3;\n        fcn.0045df30(arg4, uStack156, puVar8, arg4_00);\n        uStack100 = iVar5;\n    }\n    *(arg4 + 0x10) = 0;\n    cVar3 = piStack152;\n    if (cVar3 == '\\0') {\n        pcVar2 = *(*piVar1 + 0x60);\n        *(puVar14 + -8) = 0x431908;\n        iVar5 = (*pcVar2)(piVar1, puVar8, iVar4);\n        if (iVar5 != iVar4) {\n            cVar3 = '\\x01';\n        }\n    }\n    *arg1 = piVar1;\n    *(arg1 + 1) = cVar3;\n    return arg1;\n}\n",
        "token_count": 2572
    },
    "004321d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_bp_28h\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t **\nfcn.004321d0(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t arg4, ulong noname_4, ulong noname_5, ulong arg_40h\n            , ulong arg_48h)\n\n{\n    int64_t *piVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int64_t *piVar4;\n    int64_t *piVar5;\n    code *pcVar6;\n    ulong arg3_00;\n    ulong arg4_00;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    int64_t iVar11;\n    ulong *arg1_00;\n    uint64_t arg1_01;\n    uchar *puVar12;\n    uchar *puVar13;\n    ushort *puVar14;\n    ushort *puVar15;\n    uint32_t uVar16;\n    char cVar17;\n    ulong uStack224;\n    uchar auStack216 [32];\n    uint32_t uStack184;\n    int64_t iStack176;\n    ushort auStack168 [2];\n    ushort auStack164 [2];\n    ulong uStack160;\n    uchar auStack128 [32];\n    uint32_t uStack96;\n    uint uStack92;\n    ushort *puStack88;\n    uchar var_48h [4];\n    ulong var_44h;\n    ulong var_38h;\n    ulong var_bp_28h;\n    \n    piVar4 = *arg3;\n    piVar5 = arg3[1];\n    uStack92 = noname_4;\n    uStack160 = 0x432207;\n    iVar9 = fcn.00425c30(0x47f370);\n    piVar1 = *(*(arg4 + 0xd0) + 0x18) + iVar9 * 8;\n    iVar11 = *piVar1;\n    if (iVar11 == 0) {\n        uStack160 = 0x4323ee;\n        arg1_00 = fcn.004696a0(0xd0);\n        *(arg1_00 + 1) = 0;\n        arg1_00[2] = 0;\n        arg1_00[3] = 0;\n        *arg1_00 = 0x488d50;\n        *(arg1_00 + 4) = 0;\n        *(arg1_00 + 9) = 0;\n        arg1_00[5] = 0;\n        arg1_00[6] = 0;\n        arg1_00[7] = 0;\n        arg1_00[8] = 0;\n        *(arg1_00 + 0x4a) = 0;\n        *(arg1_00 + 0x19) = 0;\n        uStack160 = 0x432458;\n        fcn.0045a9b0(arg1_00, arg4 + 0xd0);\n        uStack160 = 0x43246a;\n        fcn.0045e9d0(*(arg4 + 0xd0), arg1_00, iVar9);\n        iVar11 = *piVar1;\n    }\n    uVar3 = *(arg4 + 0x18);\n    _var_48h = iVar11 + 0x4c;\n    puVar12 = &stack0xffffffffffffff28;\n    puStack88 = &stack0xffffffffffffff58;\n    uStack96 = uVar3 & 0x4a;\n    uVar7 = noname_5;\n    if ((uStack96 != 8 && uStack96 != 0x40) && (noname_5 < 1)) {\n        uVar7 = -noname_5;\n    }\n    uVar16 = uStack96 != 8 && uStack96 != 0x40;\n    uStack224 = 0x432287;\n    uStack184 = uVar16;\n    iVar8 = fcn.00463e60(&stack0xffffffffffffff80, uVar7, _var_48h, uVar3);\n    arg1_01 = iVar8;\n    puVar15 = puStack88 + (0x14 - iVar8);\n    if (*(iVar11 + 0x20) != '\\0') {\n        uStack224 = 0x43238a;\n        iVar9 = fcn.0040ce40(arg1_01);\n        uVar2 = *(iVar11 + 0x4a);\n        arg3_00 = *(iVar11 + 0x10);\n        iVar9 = -iVar9;\n        puVar12 = &stack0xffffffffffffff28 + iVar9;\n        arg4_00 = *(iVar11 + 0x18);\n        *(&stack0xffffffffffffff48 + iVar9) = puVar15;\n        *(&stack0xffffffffffffff50 + iVar9) = puVar15 + arg1_01;\n        puStack88 = &stack0xffffffffffffff5c + iVar9;\n        *(&stack0xffffffffffffff20 + iVar9) = 0x4323bb;\n        iVar9 = fcn.00464180(&stack0xffffffffffffff5c + iVar9, uVar2, arg3_00, arg4_00);\n        arg1_01 = iVar9 - puStack88 >> 1;\n        puVar15 = puStack88;\n    }\n    iVar8 = arg1_01;\n    puVar14 = puVar15;\n    if (uVar16 == 0) {\n        if (((uVar3 & 0x200) != 0) && (noname_5 != 0)) {\n            if (uStack96 == 0x40) {\n                arg1_01 = iVar8 + 1;\n                puVar14 = puVar15 + -1;\n                *puVar14 = *(iVar11 + 0x54);\n            }\n            else {\n                arg1_01 = iVar8 + 2;\n                puVar14 = puVar15 + -2;\n                puVar15[-1] = *(_var_48h + (((uVar3 & 0x4000) != 0) + 2) * 2);\n                *puVar14 = *(iVar11 + 0x54);\n            }\n        }\n    }\n    else if (noname_5 < 0) {\n        arg1_01 = iVar8 + 1;\n        puVar15[-1] = *(iVar11 + 0x4c);\n        puVar14 = puVar15 + -1;\n    }\n    else if ((uVar3 & 0x800) != 0) {\n        arg1_01 = iVar8 + 1;\n        puVar15[-1] = *(iVar11 + 0x4e);\n        puVar14 = puVar15 + -1;\n    }\n    iVar11 = *(arg4 + 0x10);\n    iVar9 = arg1_01;\n    puVar13 = puVar12;\n    puVar15 = puVar14;\n    if (iVar9 < iVar11) {\n        *(puVar12 + -8) = 0x4322e2;\n        iVar10 = fcn.0040ce40(arg1_01);\n        iVar10 = -iVar10;\n        puVar13 = puVar12 + iVar10;\n        puVar15 = puVar12 + iVar10 + 0x30;\n        *(puVar12 + iVar10 + 0x28) = iVar9;\n        *(puVar12 + iVar10 + 0x20) = iVar11;\n        iVar9 = iVar11;\n        *(puVar12 + iVar10 + -8) = 0x432306;\n        fcn.0045e110(arg4, uStack92, puVar15, puVar14);\n    }\n    cVar17 = piVar5;\n    *(arg4 + 0x10) = 0;\n    if (cVar17 == '\\0') {\n        pcVar6 = *(*piVar4 + 0x60);\n        *(puVar13 + -8) = 0x432329;\n        iVar11 = (*pcVar6)(piVar4, puVar15, iVar9);\n        if (iVar11 != iVar9) {\n            cVar17 = '\\x01';\n        }\n    }\n    *arg1 = piVar4;\n    *(arg1 + 1) = cVar17;\n    return arg1;\n}\n",
        "token_count": 1888
    },
    "00432510": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_bp_28h\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t **\nfcn.00432510(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t arg4, ulong noname_4, ulong noname_5, ulong arg_40h\n            , ulong arg_48h)\n\n{\n    int64_t *piVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int64_t *piVar4;\n    int64_t *piVar5;\n    code *pcVar6;\n    ulong arg3_00;\n    ulong arg4_00;\n    int32_t iVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    ulong *arg1_00;\n    uint64_t uVar11;\n    uchar *puVar12;\n    uchar *puVar13;\n    ushort *s2;\n    ushort *puVar14;\n    uint32_t uVar15;\n    char cVar16;\n    ulong uStack224;\n    uchar auStack216 [32];\n    uint32_t uStack184;\n    int64_t iStack176;\n    ushort auStack168 [2];\n    ushort auStack164 [2];\n    ulong uStack160;\n    uchar auStack128 [32];\n    uint32_t uStack96;\n    uint uStack92;\n    ushort *puStack88;\n    uchar var_48h [4];\n    ulong var_44h;\n    ulong var_38h;\n    ulong var_bp_28h;\n    \n    piVar4 = *arg3;\n    piVar5 = arg3[1];\n    uStack92 = noname_4;\n    uStack160 = 0x432547;\n    iVar8 = fcn.00425c30(0x47f370);\n    piVar1 = *(*(arg4 + 0xd0) + 0x18) + iVar8 * 8;\n    iVar10 = *piVar1;\n    if (iVar10 == 0) {\n        uStack160 = 0x4326ea;\n        arg1_00 = fcn.004696a0(0xd0);\n        *(arg1_00 + 1) = 0;\n        *arg1_00 = 0x488d50;\n        arg1_00[2] = 0;\n        arg1_00[3] = 0;\n        *(arg1_00 + 4) = 0;\n        arg1_00[5] = 0;\n        arg1_00[6] = 0;\n        arg1_00[7] = 0;\n        arg1_00[8] = 0;\n        *(arg1_00 + 9) = 0;\n        *(arg1_00 + 0x4a) = 0;\n        *(arg1_00 + 0x19) = 0;\n        uStack160 = 0x432758;\n        fcn.0045a9b0(arg1_00, arg4 + 0xd0);\n        uStack160 = 0x43276a;\n        fcn.0045e9d0(*(arg4 + 0xd0), arg1_00, iVar8);\n        iVar10 = *piVar1;\n    }\n    uVar3 = *(arg4 + 0x18);\n    _var_48h = iVar10 + 0x4c;\n    puVar12 = &stack0xffffffffffffff28;\n    puStack88 = &stack0xffffffffffffff58;\n    uStack96 = uVar3 & 0x4a;\n    if ((uStack96 == 8 || uStack96 == 0x40) || (uVar11 = 0,  noname_5 != 0)) {\n        uVar11 = noname_5;\n    }\n    uVar15 = uStack96 != 8 && uStack96 != 0x40;\n    uStack224 = 0x4325c6;\n    uStack184 = uVar15;\n    iVar7 = fcn.00463e60(&stack0xffffffffffffff80, uVar11, _var_48h, uVar3);\n    uVar11 = iVar7;\n    puVar14 = puStack88 + (0x14 - iVar7);\n    if (*(iVar10 + 0x20) != '\\0') {\n        uStack224 = 0x432696;\n        iVar8 = fcn.0040ce40(uVar11);\n        uVar2 = *(iVar10 + 0x4a);\n        arg3_00 = *(iVar10 + 0x10);\n        iVar8 = -iVar8;\n        puVar12 = &stack0xffffffffffffff28 + iVar8;\n        arg4_00 = *(iVar10 + 0x18);\n        *(&stack0xffffffffffffff48 + iVar8) = puVar14;\n        *(&stack0xffffffffffffff50 + iVar8) = puVar14 + uVar11;\n        puStack88 = &stack0xffffffffffffff5c + iVar8;\n        *(&stack0xffffffffffffff20 + iVar8) = 0x4326c7;\n        iVar8 = fcn.00464180(&stack0xffffffffffffff5c + iVar8, uVar2, arg3_00, arg4_00);\n        uVar11 = iVar8 - puStack88 >> 1;\n        puVar14 = puStack88;\n    }\n    s2 = puVar14;\n    if (((uVar15 == 0) && ((uVar3 & 0x200) != 0)) && (noname_5 != 0)) {\n        if (uStack96 == 0x40) {\n            uVar11 = uVar11 + 1;\n            s2 = puVar14 + -1;\n            *s2 = *(iVar10 + 0x54);\n        }\n        else {\n            uVar11 = uVar11 + 2;\n            s2 = puVar14 + -2;\n            puVar14[-1] = *(_var_48h + (((uVar3 & 0x4000) != 0) + 2) * 2);\n            *s2 = *(iVar10 + 0x54);\n        }\n    }\n    iVar10 = *(arg4 + 0x10);\n    iVar8 = uVar11;\n    puVar13 = puVar12;\n    puVar14 = s2;\n    if (iVar8 < iVar10) {\n        *(puVar12 + -8) = 0x432608;\n        iVar9 = fcn.0040ce40(uVar11);\n        iVar9 = -iVar9;\n        puVar13 = puVar12 + iVar9;\n        puVar14 = puVar12 + iVar9 + 0x30;\n        *(puVar12 + iVar9 + 0x28) = iVar8;\n        *(puVar12 + iVar9 + 0x20) = iVar10;\n        iVar8 = iVar10;\n        *(puVar12 + iVar9 + -8) = 0x43262c;\n        fcn.0045e110(arg4, uStack92, puVar14, s2);\n    }\n    cVar16 = piVar5;\n    *(arg4 + 0x10) = 0;\n    if (cVar16 == '\\0') {\n        pcVar6 = *(*piVar4 + 0x60);\n        *(puVar13 + -8) = 0x43264f;\n        iVar10 = (*pcVar6)(piVar4, puVar14, iVar8);\n        if (iVar10 != iVar8) {\n            cVar16 = '\\x01';\n        }\n    }\n    *arg1 = piVar4;\n    *(arg1 + 1) = cVar16;\n    return arg1;\n}\n",
        "token_count": 1731
    },
    "00432810": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_bp_28h\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t **\nfcn.00432810(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t arg4, ulong noname_4, int64_t noname_5, \n            ulong arg_40h, ulong arg_48h)\n\n{\n    int64_t *piVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int64_t *piVar4;\n    int64_t *piVar5;\n    code *pcVar6;\n    ulong arg3_00;\n    ulong arg4_00;\n    int32_t iVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    ulong *arg1_00;\n    uint64_t arg1_01;\n    uchar *puVar11;\n    uchar *puVar12;\n    ushort *puVar13;\n    ushort *puVar14;\n    uint32_t uVar15;\n    char cVar16;\n    ulong uStack256;\n    uchar auStack248 [32];\n    uint32_t uStack216;\n    int64_t iStack208;\n    ushort auStack200 [2];\n    ushort auStack196 [18];\n    ulong uStack160;\n    uchar auStack120 [24];\n    uint32_t uStack96;\n    uint uStack92;\n    ushort *puStack88;\n    uchar var_48h [4];\n    ulong var_44h;\n    ulong var_38h;\n    ulong var_bp_28h;\n    \n    piVar4 = *arg3;\n    piVar5 = arg3[1];\n    uStack92 = noname_4;\n    uStack160 = 0x432847;\n    iVar8 = fcn.00425c30(0x47f370);\n    piVar1 = *(*(arg4 + 0xd0) + 0x18) + iVar8 * 8;\n    iVar10 = *piVar1;\n    if (iVar10 == 0) {\n        uStack160 = 0x432a2e;\n        arg1_00 = fcn.004696a0(0xd0);\n        *(arg1_00 + 1) = 0;\n        arg1_00[2] = 0;\n        *arg1_00 = 0x488d50;\n        arg1_00[3] = 0;\n        *(arg1_00 + 4) = 0;\n        arg1_00[5] = 0;\n        arg1_00[6] = 0;\n        arg1_00[7] = 0;\n        arg1_00[8] = 0;\n        *(arg1_00 + 9) = 0;\n        *(arg1_00 + 0x4a) = 0;\n        *(arg1_00 + 0x19) = 0;\n        uStack160 = 0x432a9a;\n        fcn.0045a9b0(arg1_00, arg4 + 0xd0);\n        uStack160 = 0x432aac;\n        fcn.0045e9d0(*(arg4 + 0xd0), arg1_00, iVar8);\n        iVar10 = *piVar1;\n    }\n    uVar3 = *(arg4 + 0x18);\n    _var_48h = iVar10 + 0x4c;\n    puVar11 = &stack0xffffffffffffff08;\n    puStack88 = &stack0xffffffffffffff38;\n    uStack96 = uVar3 & 0x4a;\n    iVar8 = noname_5;\n    if ((uStack96 != 8 && uStack96 != 0x40) && (noname_5 < 1)) {\n        iVar8 = -noname_5;\n    }\n    uVar15 = uStack96 != 8 && uStack96 != 0x40;\n    uStack256 = 0x4328c9;\n    uStack216 = uVar15;\n    iVar7 = fcn.00463f10(&stack0xffffffffffffff88, iVar8, _var_48h, uVar3);\n    arg1_01 = iVar7;\n    puVar14 = puStack88 + (0x28 - iVar7);\n    if (*(iVar10 + 0x20) != '\\0') {\n        uStack256 = 0x4329ca;\n        iVar8 = fcn.0040ce40(arg1_01);\n        uVar2 = *(iVar10 + 0x4a);\n        arg3_00 = *(iVar10 + 0x10);\n        iVar8 = -iVar8;\n        puVar11 = &stack0xffffffffffffff08 + iVar8;\n        arg4_00 = *(iVar10 + 0x18);\n        *(&stack0xffffffffffffff28 + iVar8) = puVar14;\n        *(&stack0xffffffffffffff30 + iVar8) = puVar14 + arg1_01;\n        puStack88 = &stack0xffffffffffffff3c + iVar8;\n        *(&stack0xffffffffffffff00 + iVar8) = 0x4329fb;\n        iVar8 = fcn.00464180(&stack0xffffffffffffff3c + iVar8, uVar2, arg3_00, arg4_00);\n        arg1_01 = iVar8 - puStack88 >> 1;\n        puVar14 = puStack88;\n    }\n    iVar7 = arg1_01;\n    puVar13 = puVar14;\n    if (uVar15 == 0) {\n        if (((uVar3 & 0x200) != 0) && (noname_5 != 0)) {\n            if (uStack96 == 0x40) {\n                arg1_01 = iVar7 + 1;\n                puVar13 = puVar14 + -1;\n                *puVar13 = *(iVar10 + 0x54);\n            }\n            else {\n                arg1_01 = iVar7 + 2;\n                puVar13 = puVar14 + -2;\n                puVar14[-1] = *(_var_48h + (((uVar3 & 0x4000) != 0) + 2) * 2);\n                *puVar13 = *(iVar10 + 0x54);\n            }\n        }\n    }\n    else if (noname_5 < 0) {\n        arg1_01 = iVar7 + 1;\n        puVar14[-1] = *(iVar10 + 0x4c);\n        puVar13 = puVar14 + -1;\n    }\n    else if ((uVar3 & 0x800) != 0) {\n        arg1_01 = iVar7 + 1;\n        puVar14[-1] = *(iVar10 + 0x4e);\n        puVar13 = puVar14 + -1;\n    }\n    iVar10 = *(arg4 + 0x10);\n    iVar8 = arg1_01;\n    puVar12 = puVar11;\n    puVar14 = puVar13;\n    if (iVar8 < iVar10) {\n        *(puVar11 + -8) = 0x432922;\n        iVar9 = fcn.0040ce40(arg1_01);\n        iVar9 = -iVar9;\n        puVar12 = puVar11 + iVar9;\n        puVar14 = puVar11 + iVar9 + 0x30;\n        *(puVar11 + iVar9 + 0x28) = iVar8;\n        *(puVar11 + iVar9 + 0x20) = iVar10;\n        iVar8 = iVar10;\n        *(puVar11 + iVar9 + -8) = 0x432946;\n        fcn.0045e110(arg4, uStack92, puVar14, puVar13);\n    }\n    cVar16 = piVar5;\n    *(arg4 + 0x10) = 0;\n    if (cVar16 == '\\0') {\n        pcVar6 = *(*piVar4 + 0x60);\n        *(puVar12 + -8) = 0x432969;\n        iVar10 = (*pcVar6)(piVar4, puVar14, iVar8);\n        if (iVar10 != iVar8) {\n            cVar16 = '\\x01';\n        }\n    }\n    *arg1 = piVar4;\n    *(arg1 + 1) = cVar16;\n    return arg1;\n}\n",
        "token_count": 1880
    },
    "00432b50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_bp_28h\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t **\nfcn.00432b50(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t arg4, ulong noname_4, int64_t noname_5, \n            ulong arg_40h, ulong arg_48h)\n\n{\n    int64_t *piVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int64_t *piVar4;\n    int64_t *piVar5;\n    code *pcVar6;\n    ulong arg3_00;\n    ulong arg4_00;\n    int32_t iVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    ulong *arg1_00;\n    uint64_t arg1_01;\n    uchar *puVar11;\n    uchar *puVar12;\n    ushort *s2;\n    ushort *puVar13;\n    uint32_t uVar14;\n    char cVar15;\n    ulong uStack256;\n    uchar auStack248 [32];\n    uint32_t uStack216;\n    int64_t iStack208;\n    ushort auStack200 [2];\n    ushort auStack196 [18];\n    ulong uStack160;\n    uchar auStack120 [24];\n    uint32_t uStack96;\n    uint uStack92;\n    ushort *puStack88;\n    uchar var_48h [4];\n    ulong var_44h;\n    ulong var_38h;\n    ulong var_bp_28h;\n    \n    piVar4 = *arg3;\n    piVar5 = arg3[1];\n    uStack92 = noname_4;\n    uStack160 = 0x432b87;\n    iVar8 = fcn.00425c30(0x47f370);\n    piVar1 = *(*(arg4 + 0xd0) + 0x18) + iVar8 * 8;\n    iVar10 = *piVar1;\n    if (iVar10 == 0) {\n        uStack160 = 0x432d2a;\n        arg1_00 = fcn.004696a0(0xd0);\n        *(arg1_00 + 1) = 0;\n        arg1_00[2] = 0;\n        arg1_00[3] = 0;\n        *arg1_00 = 0x488d50;\n        *(arg1_00 + 4) = 0;\n        *(arg1_00 + 9) = 0;\n        arg1_00[5] = 0;\n        arg1_00[6] = 0;\n        arg1_00[7] = 0;\n        arg1_00[8] = 0;\n        *(arg1_00 + 0x4a) = 0;\n        *(arg1_00 + 0x19) = 0;\n        uStack160 = 0x432d94;\n        fcn.0045a9b0(arg1_00, arg4 + 0xd0);\n        uStack160 = 0x432da6;\n        fcn.0045e9d0(*(arg4 + 0xd0), arg1_00, iVar8);\n        iVar10 = *piVar1;\n    }\n    uVar3 = *(arg4 + 0x18);\n    _var_48h = iVar10 + 0x4c;\n    puVar11 = &stack0xffffffffffffff08;\n    puStack88 = &stack0xffffffffffffff38;\n    uStack96 = uVar3 & 0x4a;\n    if ((uStack96 == 8 || uStack96 == 0x40) || (iVar8 = 0,  noname_5 != 0)) {\n        iVar8 = noname_5;\n    }\n    uVar14 = uStack96 != 8 && uStack96 != 0x40;\n    uStack256 = 0x432c04;\n    uStack216 = uVar14;\n    iVar7 = fcn.00463f10(&stack0xffffffffffffff88, iVar8, _var_48h, uVar3);\n    arg1_01 = iVar7;\n    puVar13 = puStack88 + (0x28 - iVar7);\n    if (*(iVar10 + 0x20) != '\\0') {\n        uStack256 = 0x432cd6;\n        iVar8 = fcn.0040ce40(arg1_01);\n        uVar2 = *(iVar10 + 0x4a);\n        arg3_00 = *(iVar10 + 0x10);\n        iVar8 = -iVar8;\n        puVar11 = &stack0xffffffffffffff08 + iVar8;\n        arg4_00 = *(iVar10 + 0x18);\n        *(&stack0xffffffffffffff28 + iVar8) = puVar13;\n        *(&stack0xffffffffffffff30 + iVar8) = puVar13 + arg1_01;\n        puStack88 = &stack0xffffffffffffff3c + iVar8;\n        *(&stack0xffffffffffffff00 + iVar8) = 0x432d07;\n        iVar8 = fcn.00464180(&stack0xffffffffffffff3c + iVar8, uVar2, arg3_00, arg4_00);\n        arg1_01 = iVar8 - puStack88 >> 1;\n        puVar13 = puStack88;\n    }\n    s2 = puVar13;\n    if (((uVar14 == 0) && ((uVar3 & 0x200) != 0)) && (noname_5 != 0)) {\n        if (uStack96 == 0x40) {\n            arg1_01 = arg1_01 + 1;\n            s2 = puVar13 + -1;\n            *s2 = *(iVar10 + 0x54);\n        }\n        else {\n            arg1_01 = arg1_01 + 2;\n            s2 = puVar13 + -2;\n            puVar13[-1] = *(_var_48h + (((uVar3 & 0x4000) != 0) + 2) * 2);\n            *s2 = *(iVar10 + 0x54);\n        }\n    }\n    iVar10 = *(arg4 + 0x10);\n    iVar8 = arg1_01;\n    puVar12 = puVar11;\n    puVar13 = s2;\n    if (iVar8 < iVar10) {\n        *(puVar11 + -8) = 0x432c46;\n        iVar9 = fcn.0040ce40(arg1_01);\n        iVar9 = -iVar9;\n        puVar12 = puVar11 + iVar9;\n        puVar13 = puVar11 + iVar9 + 0x30;\n        *(puVar11 + iVar9 + 0x28) = iVar8;\n        *(puVar11 + iVar9 + 0x20) = iVar10;\n        iVar8 = iVar10;\n        *(puVar11 + iVar9 + -8) = 0x432c6a;\n        fcn.0045e110(arg4, uStack92, puVar13, s2);\n    }\n    cVar15 = piVar5;\n    *(arg4 + 0x10) = 0;\n    if (cVar15 == '\\0') {\n        pcVar6 = *(*piVar4 + 0x60);\n        *(puVar12 + -8) = 0x432c8d;\n        iVar10 = (*pcVar6)(piVar4, puVar13, iVar8);\n        if (iVar10 != iVar8) {\n            cVar15 = '\\x01';\n        }\n    }\n    *arg1 = piVar4;\n    *(arg1 + 1) = cVar15;\n    return arg1;\n}\n",
        "token_count": 1747
    },
    "00432f20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_dh\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00432f20(int64_t **arg1, ushort *arg2, int64_t **arg3, int64_t arg4, ulong noname_4, ulong noname_5, \n                 ulong noname_6, ulong noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, \n                 ulong noname_12, ulong noname_13, ulong noname_14, ulong noname_15, ulong arg_90h, ulong arg_98h, \n                 ulong arg_a0h)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    ulong arg2_00;\n    char cVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    int64_t *arg1_00;\n    int64_t iVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    uchar *puVar9;\n    ushort *arg1_01;\n    int32_t iVar10;\n    char *arg2_01;\n    uchar *puVar11;\n    uchar *puVar12;\n    uint64_t arg3_00;\n    ushort *s2;\n    ushort *puVar13;\n    ulong uVar14;\n    ulong var_10h;\n    ulong uStack304;\n    uchar auStack296 [32];\n    int64_t aiStack264 [4];\n    char acStack232 [72];\n    ushort *puStack160;\n    uchar *puStack152;\n    uint32_t uStack144;\n    uint uStack140;\n    int64_t *piStack136;\n    int64_t **ppiStack128;\n    uchar uStack117;\n    int32_t iStack116;\n    ulong uStack112;\n    uchar auStack104 [40];\n    ulong var_38h;\n    ulong var_30h;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_dh;\n    \n    arg2_01 = &stack0xffffffffffffff18;\n    piStack136 = arg3[1];\n    piVar1 = *arg3;\n    uStack140 = noname_4;\n    aiStack264[3] = 0x432f84;\n    puStack160 = arg2;\n    ppiStack128 = arg1;\n    iVar5 = fcn.004248f0(&stack0xffffffffffffff8b, arg4 + 0xd0);\n    iVar6 = 6;\n    if (-1 < *(arg4 + 8)) {\n        iVar6 = *(arg4 + 8);\n    }\n    aiStack264[3] = 0x432fa1;\n    fcn.004492f0(arg4, &stack0xffffffffffffff98);\n    puVar11 = &stack0xfffffffffffffed8;\n    uStack304 = 0x432faa;\n    aiStack264[1] = noname_6;\n    uStack112 = fcn.00460180();\n    puVar9 = &stack0xffffffffffffff90;\n    uStack304 = 0x432fda;\n    aiStack264[0] = iVar6;\n    puStack152 = puVar9;\n    uVar14 = aiStack264[1];\n    iStack116 = fcn.00464730(puVar9, &stack0xffffffffffffff18, 0x2d, &stack0xffffffffffffff98);\n    if (0x2c < iStack116) {\n        uStack144 = iStack116 + 1;\n        uStack304 = 0x4331c8;\n        iVar7 = fcn.0040ce40(puVar9);\n        iVar7 = -iVar7;\n        puVar11 = &stack0xfffffffffffffed8 + iVar7;\n        *(&stack0xfffffffffffffed0 + iVar7) = 0x4331d0;\n        uStack112 = fcn.00460180();\n        puVar9 = puStack152;\n        arg2_01 = &stack0xffffffffffffff18 + iVar7;\n        arg3_00 = uStack144;\n        *(&stack0xffffffffffffff00 + iVar7) = uVar14;\n        *(&stack0xfffffffffffffef8 + iVar7) = iVar6;\n        *(&stack0xfffffffffffffed0 + iVar7) = 0x4331f7;\n        iStack116 = fcn.00464730(puVar9, arg2_01, arg3_00, &stack0xffffffffffffff98);\n    }\n    *(puVar11 + -8) = 0x432fee;\n    arg1_00 = fcn.004672c0(arg4 + 0xd0);\n    *(puVar11 + -8) = 0x433003;\n    iVar6 = fcn.0040ce40(arg1_00);\n    iVar6 = -iVar6;\n    puVar13 = puVar11 + iVar6 + 0x40;\n    pcVar2 = *(*arg1_00 + 0x58);\n    *(puVar11 + iVar6 + -8) = 0x43301e;\n    (*pcVar2)();\n    iVar4 = iStack116;\n    puStack152 = iStack116;\n    *(puVar11 + iVar6 + -8) = 0x433038;\n    iVar7 = sub.msvcrt.dll_memchr();\n    if (iVar7 == 0) {\n        arg1_01 = NULL;\n    }\n    else {\n        arg1_01 = puVar13 + (iVar7 - arg2_01);\n        *arg1_01 = *(iVar5 + 0x48);\n    }\n    puVar9 = puVar11 + iVar6;\n    s2 = puVar13;\n    if ((*(iVar5 + 0x20) != '\\0') &&\n       (((arg1_01 != NULL || (iVar4 < 3)) ||\n        ((puVar9 = puVar11 + iVar6,  arg2_01[1] < ':' &&\n         ((puVar9 = puVar11 + iVar6,  '/' < arg2_01[1] && (puVar9 = puVar11 + iVar6,  arg2_01[2] - 0x30U < 10)))))))) {\n        *(puVar11 + iVar6 + -8) = 0x4330a5;\n        iVar7 = fcn.0040ce40(arg1_01);\n        iVar7 = -iVar7;\n        puVar9 = puVar11 + iVar7 + iVar6;\n        s2 = puVar11 + iVar7 + iVar6 + 0x40;\n        if ((*arg2_01 == '+') || (*arg2_01 == '-')) {\n            iVar10 = 1;\n            iStack116 = iVar4 + -1;\n            *s2 = *puVar13;\n            iVar8 = 2;\n        }\n        else {\n            iVar10 = 0;\n            iVar8 = 0;\n        }\n        uVar14 = *(iVar5 + 0x18);\n        arg2_00 = *(iVar5 + 0x10);\n        *(puVar11 + iVar7 + iVar6 + 0x20) = arg1_01;\n        arg1_01 = puStack160;\n        *(puVar11 + iVar7 + iVar6 + 0x38) = &stack0xffffffffffffff8c;\n        *(puVar11 + iVar7 + iVar6 + 0x28) = iVar8 + s2;\n        *(puVar11 + iVar7 + iVar6 + 0x30) = puVar13 + iVar8;\n        *(puVar11 + iVar7 + iVar6 + -8) = 0x43310a;\n        fcn.00432e50(arg1_01, arg2_00, uVar14);\n        iVar4 = iStack116 + iVar10;\n        iStack116 = iVar4;\n    }\n    iVar6 = *(arg4 + 0x10);\n    iVar5 = iVar4;\n    puVar12 = puVar9;\n    puVar13 = s2;\n    if (iVar5 < iVar6) {\n        *(puVar9 + -8) = 0x43312c;\n        iVar7 = fcn.0040ce40(arg1_01);\n        iVar7 = -iVar7;\n        puVar12 = puVar9 + iVar7;\n        puVar13 = puVar9 + iVar7 + 0x40;\n        *(puVar9 + iVar7 + 0x28) = iVar5;\n        *(puVar9 + iVar7 + 0x20) = iVar6;\n        iVar5 = iVar6;\n        *(puVar9 + iVar7 + -8) = 0x433156;\n        fcn.0045e110(arg4, uStack140, puVar13, s2);\n        iStack116 = iVar6;\n    }\n    *(arg4 + 0x10) = 0;\n    cVar3 = piStack136;\n    if (cVar3 == '\\0') {\n        pcVar2 = *(*piVar1 + 0x60);\n        *(puVar12 + -8) = 0x43317b;\n        iVar6 = (*pcVar2)(piVar1, puVar13, iVar5);\n        if (iVar6 != iVar5) {\n            cVar3 = '\\x01';\n        }\n    }\n    *ppiStack128 = piVar1;\n    *(ppiStack128 + 1) = cVar3;\n    return;\n}\n",
        "token_count": 2147
    },
    "00433220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_20h_2\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t **\nfcn.00433220(int64_t **arg1, ushort *arg2, int64_t **arg3, int64_t arg4, ulong noname_4, ulong noname_5, \n            unkbyte10 *noname_6, ulong noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, \n            ulong noname_12, ulong noname_13, ulong noname_14, ulong noname_15, ulong noname_16, ulong noname_17, \n            ulong arg_a0h, ulong arg_a8h, ulong arg_b0h)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    ulong arg3_00;\n    ulong arg2_00;\n    char cVar3;\n    int64_t iVar4;\n    int64_t *arg1_00;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uchar *puVar8;\n    ushort *arg1_01;\n    int32_t iVar9;\n    char *arg2_01;\n    uchar *puVar10;\n    uchar *puVar11;\n    uint64_t arg3_01;\n    ushort *s2;\n    ushort *puVar12;\n    ulong var_13h;\n    ulong var_20h;\n    ulong var_38h_2;\n    ulong uStack336;\n    uchar auStack328 [32];\n    int64_t iStack296;\n    uchar *apuStack288 [3];\n    char acStack264 [8];\n    ulong uStack256;\n    ushort *puStack184;\n    uchar *puStack176;\n    uchar *puStack168;\n    uint32_t uStack160;\n    uint uStack156;\n    int64_t *piStack152;\n    ushort *puStack144;\n    uchar auStack136 [16];\n    unkbyte10 Stack120;\n    uchar uStack101;\n    int32_t iStack100;\n    ulong uStack96;\n    uchar auStack88 [16];\n    ulong var_40h;\n    ulong var_38h;\n    ulong var_30h;\n    ulong var_20h_2;\n    ulong var_18h;\n    ulong var_10h;\n    \n    apuStack288[0] = &stack0xffffffffffffff88;\n    piStack152 = arg3[1];\n    piVar1 = *arg3;\n    uStack156 = noname_4;\n    auStack136._0_10_ = *noname_6;\n    puStack144 = arg4 + 0xd0;\n    uStack256 = 0x43328b;\n    puStack184 = arg2;\n    iVar4 = fcn.004248f0(&stack0xffffffffffffff9b, puStack144);\n    iVar5 = 6;\n    if (-1 < *(arg4 + 8)) {\n        iVar5 = *(arg4 + 8);\n    }\n    uStack256 = 0x4332a8;\n    fcn.004492f0(arg4, &stack0xffffffffffffffa8);\n    puVar10 = &stack0xfffffffffffffeb8;\n    uStack336 = 0x4332b1;\n    uStack96 = fcn.00460180();\n    arg2_01 = &stack0xfffffffffffffef8;\n    puVar8 = &stack0xffffffffffffffa0;\n    Stack120 = auStack136._0_10_;\n    uStack336 = 0x4332ea;\n    iStack296 = iVar5;\n    puStack176 = puVar8;\n    puStack168 = apuStack288[0];\n    iStack100 = fcn.00464730(puVar8, arg2_01, 0x36, &stack0xffffffffffffffa8);\n    if (0x35 < iStack100) {\n        uStack160 = iStack100 + 1;\n        uStack336 = 0x4334d9;\n        iVar6 = fcn.0040ce40(puVar8);\n        iVar6 = -iVar6;\n        puVar10 = &stack0xfffffffffffffeb8 + iVar6;\n        *(&stack0xfffffffffffffeb0 + iVar6) = 0x4334e1;\n        uStack96 = fcn.00460180();\n        Stack120 = auStack136._0_10_;\n        puVar11 = puStack168;\n        puVar8 = puStack176;\n        arg2_01 = &stack0xfffffffffffffef8 + iVar6;\n        arg3_01 = uStack160;\n        *(&stack0xfffffffffffffed8 + iVar6) = iVar5;\n        *(&stack0xfffffffffffffee0 + iVar6) = puVar11;\n        *(&stack0xfffffffffffffeb0 + iVar6) = 0x433511;\n        iStack100 = fcn.00464730(puVar8, arg2_01, arg3_01, &stack0xffffffffffffffa8);\n    }\n    iVar5 = puStack144;\n    *(puVar10 + -8) = 0x4332ff;\n    arg1_00 = fcn.004672c0(iVar5);\n    *(puVar10 + -8) = 0x433314;\n    iVar5 = fcn.0040ce40(arg1_00);\n    iVar5 = -iVar5;\n    puVar12 = puVar10 + iVar5 + 0x40;\n    puStack144 = puVar12;\n    pcVar2 = *(*arg1_00 + 0x58);\n    *(puVar10 + iVar5 + -8) = 0x433330;\n    (*pcVar2)();\n    auStack136._0_10_ = CONCAT64(auStack136._4_6_, iStack100);\n    *(puVar10 + iVar5 + -8) = 0x43334b;\n    iVar6 = sub.msvcrt.dll_memchr();\n    s2 = puStack144;\n    if (iVar6 == 0) {\n        arg1_01 = NULL;\n    }\n    else {\n        arg1_01 = puVar12 + (iVar6 - arg2_01);\n        *arg1_01 = *(iVar4 + 0x48);\n    }\n    puVar8 = puVar10 + iVar5;\n    if ((*(iVar4 + 0x20) != '\\0') &&\n       (((arg1_01 != NULL || (auStack136._0_4_ < 3)) ||\n        ((puVar8 = puVar10 + iVar5,  arg2_01[1] < ':' &&\n         ((puVar8 = puVar10 + iVar5,  '/' < arg2_01[1] && (puVar8 = puVar10 + iVar5,  arg2_01[2] - 0x30U < 10)))))))) {\n        *(puVar10 + iVar5 + -8) = 0x4333c1;\n        iVar6 = fcn.0040ce40(arg1_01);\n        iVar6 = -iVar6;\n        puVar8 = puVar10 + iVar6 + iVar5;\n        s2 = puVar10 + iVar6 + iVar5 + 0x40;\n        if ((*arg2_01 == '+') || (*arg2_01 == '-')) {\n            iVar9 = 1;\n            iStack100 = auStack136._0_4_ + -1;\n            *s2 = *puVar12;\n            iVar7 = 2;\n        }\n        else {\n            iVar9 = 0;\n            iVar7 = 0;\n        }\n        arg3_00 = *(iVar4 + 0x18);\n        arg2_00 = *(iVar4 + 0x10);\n        *(puVar10 + iVar6 + iVar5 + 0x20) = arg1_01;\n        arg1_01 = puStack184;\n        *(puVar10 + iVar6 + iVar5 + 0x38) = &stack0xffffffffffffff9c;\n        *(puVar10 + iVar6 + iVar5 + 0x28) = iVar7 + s2;\n        *(puVar10 + iVar6 + iVar5 + 0x30) = puVar12 + iVar7;\n        *(puVar10 + iVar6 + iVar5 + -8) = 0x433425;\n        fcn.00432e50(arg1_01, arg2_00, arg3_00);\n        auStack136._0_4_ = iStack100 + iVar9;\n        iStack100 = auStack136._0_4_;\n    }\n    iVar5 = *(arg4 + 0x10);\n    iVar4 = auStack136._0_4_;\n    puVar11 = puVar8;\n    puVar12 = s2;\n    if (iVar4 < iVar5) {\n        *(puVar8 + -8) = 0x43344a;\n        iVar6 = fcn.0040ce40(arg1_01);\n        iVar6 = -iVar6;\n        puVar11 = puVar8 + iVar6;\n        puVar12 = puVar8 + iVar6 + 0x40;\n        *(puVar8 + iVar6 + 0x28) = iVar4;\n        *(puVar8 + iVar6 + 0x20) = iVar5;\n        iVar4 = iVar5;\n        *(puVar8 + iVar6 + -8) = 0x433471;\n        fcn.0045e110(arg4, uStack156, puVar12, s2);\n        iStack100 = iVar5;\n    }\n    *(arg4 + 0x10) = 0;\n    cVar3 = piStack152;\n    if (cVar3 == '\\0') {\n        pcVar2 = *(*piVar1 + 0x60);\n        *(puVar11 + -8) = 0x433499;\n        iVar5 = (*pcVar2)(piVar1, puVar12, iVar4);\n        if (iVar5 != iVar4) {\n            cVar3 = '\\x01';\n        }\n    }\n    *arg1 = piVar1;\n    *(arg1 + 1) = cVar3;\n    return arg1;\n}\n",
        "token_count": 2314
    },
    "004346f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint64_t ** fcn.004346f0(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t **arg4)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int64_t *piVar6;\n    int32_t iVar7;\n    int64_t *piVar8;\n    int32_t iVar9;\n    uint64_t uVar10;\n    uint32_t uVar11;\n    int64_t iVar12;\n    uint64_t uVar13;\n    int64_t *piVar14;\n    int32_t *in_stack_00000028;\n    int32_t in_stack_00000030;\n    int32_t in_stack_00000038;\n    int64_t in_stack_00000040;\n    int64_t in_stack_00000048;\n    uint32_t *in_stack_00000050;\n    \n    piVar1 = arg3[1];\n    uVar11 = 10;\n    piVar14 = *arg4;\n    uVar4 = *(arg4 + 1);\n    piVar8 = *arg3;\n    uVar10 = piVar1 & 0xffffffff;\n    piVar6 = fcn.00467260(in_stack_00000048 + 0xd0);\n    if ((in_stack_00000040 != 2) && (uVar11 = 1000,  in_stack_00000040 != 4)) {\n        uVar11 = 1;\n    }\n    iVar9 = 0;\n    iVar12 = 0;\n    do {\n        if (piVar8 == NULL) {\n            cVar3 = '\\x01';\n        }\n        else {\n            cVar3 = '\\0';\n            if (uVar10 == -1) {\n                if (piVar8[2] < piVar8[3]) {\n                    uVar10 = *piVar8[2];\n                }\n                else {\n                    uVar10 = (**(*piVar8 + 0x48))(piVar8);\n                    uVar10 = uVar10 & 0xffffffff;\n                    if (uVar10 == -1) {\n                        cVar3 = '\\x01';\n                        piVar8 = NULL;\n                        goto code_r0x00434788;\n                    }\n                }\n                cVar3 = '\\0';\n            }\n        }\ncode_r0x00434788:\n        if (piVar14 == NULL) {\n            cVar2 = '\\x01';\n        }\n        else {\n            cVar2 = '\\0';\n            if (uVar4 == 0xffffffff) {\n                if (piVar14[2] < piVar14[3]) {\n                    uVar4 = *piVar14[2];\n                }\n                else {\n                    uVar4 = (**(*piVar14 + 0x48))(piVar14);\n                    if (uVar4 == 0xffffffff) {\n                        cVar2 = '\\x01';\n                        piVar14 = NULL;\n                        goto code_r0x0043479d;\n                    }\n                }\n                cVar2 = '\\0';\n            }\n        }\ncode_r0x0043479d:\n        if (cVar3 == cVar2) {\n            if (iVar12 == in_stack_00000040) goto code_r0x004347ab;\ncode_r0x00434930:\n            if ((iVar12 == 2) && (in_stack_00000040 == 4)) {\n                iVar9 = iVar9 + -100;\ncode_r0x004347ab:\n                *in_stack_00000028 = iVar9;\n            }\n            else {\n                *in_stack_00000050 = *in_stack_00000050 | 4;\n            }\n            *arg1 = piVar8;\n            arg1[1] = piVar1 & 0xffffffff00000000 | uVar10;\n            return arg1;\n        }\n        if (iVar12 == in_stack_00000040) goto code_r0x004347ab;\n        if (piVar8 == NULL) {\n            uVar13 = 0xff;\n            iVar7 = -1;\n        }\n        else {\n            if (uVar10 == -1) {\n                if (piVar8[2] < piVar8[3]) {\n                    uVar10 = *piVar8[2];\n                }\n                else {\n                    uVar5 = (**(*piVar8 + 0x48))(piVar8);\n                    uVar10 = uVar5;\n                    if (uVar5 == 0xffffffff) {\n                        uVar13 = 0xff;\n                        iVar7 = -1;\n                        piVar8 = NULL;\n                        goto code_r0x0043480f;\n                    }\n                }\n            }\n            iVar7 = uVar10;\n            uVar13 = uVar10 & 0xff;\n        }\ncode_r0x0043480f:\n        cVar3 = *(piVar6 + uVar13 + 0x139);\n        if (cVar3 == '\\0') {\n            cVar3 = (**(*piVar6 + 0x40))(piVar6, iVar7, 0x2a);\n            if (cVar3 == '*') goto code_r0x00434930;\n            *(piVar6 + uVar13 + 0x139) = cVar3;\n        }\n        if (9 < cVar3 - 0x30U) goto code_r0x00434930;\n        iVar9 = cVar3 + -0x30 + iVar9 * 10;\n        if ((in_stack_00000038 < iVar9 * uVar11) || (iVar9 * uVar11 + uVar11 <= in_stack_00000030))\n        goto code_r0x00434930;\n        uVar11 = uVar11 / 10;\n        if (piVar8 != NULL) {\n            if (piVar8[2] < piVar8[3]) {\n                piVar8[2] = piVar8[2] + 1;\n            }\n            else {\n                (**(*piVar8 + 0x50))(piVar8);\n            }\n            uVar10 = 0xffffffff;\n        }\n        iVar12 = iVar12 + 1;\n    } while( true );\n}\n",
        "token_count": 1364
    },
    "00434d40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nint64_t **\nfcn.00434d40(int64_t **arg1, ulong noname_1, int64_t **arg3, ulong arg4, int32_t *arg_30h, int64_t arg_38h, \n            int64_t arg_40h, int64_t arg_48h, uint32_t *arg_50h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    code *pcVar5;\n    char cVar6;\n    char cVar7;\n    uint32_t uVar8;\n    int64_t *piVar9;\n    int64_t iVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    int64_t iVar13;\n    uint64_t uVar14;\n    uint64_t uVar15;\n    uint64_t uVar16;\n    ulong auStack144 [5];\n    int32_t aiStack104 [2];\n    uint64_t var_58h;\n    int64_t **var_50h;\n    ulong var_48h;\n    ulong var_38h;\n    \n    arg_48h = arg_48h + 0xd0;\n    auStack144[0] = 0x434d7e;\n    var_50h = arg1;\n    var_48h = arg4;\n    piVar9 = fcn.00467260(arg_48h);\n    auStack144[0] = 0x434d92;\n    iVar10 = fcn.0040ce40(arg_48h);\n    iVar10 = -iVar10;\n    *(&stack0xffffffffffffff70 + iVar10) = 0x434da0;\n    cVar6 = fcn.00425240(arg3, arg4);\n    piVar2 = &stack0xffffffffffffff98 + iVar10;\n    if (cVar6 == '\\0') {\n        *(&stack0xffffffffffffff70 + iVar10) = 0x434de5;\n        var_58h._0_4_ = fcn.00425320(arg3);\n        if (arg_40h != 0) {\n            iVar13 = 0;\n            uVar15 = 0;\ncode_r0x00434e14:\n            do {\n                if (**(arg_38h + iVar13 * 8) != var_58h) {\n                    var_58h = var_58h & 0xffffffff00000000 | var_58h;\n                    pcVar5 = *(*piVar9 + 0x10);\n                    *(&stack0xffffffffffffff70 + iVar10) = 0x434e02;\n                    cVar6 = (*pcVar5)(piVar9);\n                    if (var_58h != cVar6) {\n                        iVar13 = iVar13 + 1;\n                        if (iVar13 == arg_40h) break;\n                        goto code_r0x00434e14;\n                    }\n                }\n                piVar2[uVar15] = iVar13;\n                iVar13 = iVar13 + 1;\n                uVar15 = uVar15 + 1;\n            } while (iVar13 != arg_40h);\n            uVar14 = 0;\njoined_r0x00434e38:\n            if (1 < uVar15) {\n                uVar16 = 1;\n                uVar4 = *(arg_38h + *piVar2 * 8);\n                *(&stack0xffffffffffffff70 + iVar10) = 0x434e52;\n                uVar11 = sub.msvcrt.dll_strlen(uVar4);\n                do {\n                    uVar4 = *(arg_38h + piVar2[uVar16] * 8);\n                    *(&stack0xffffffffffffff70 + iVar10) = 0x434e62;\n                    uVar12 = sub.msvcrt.dll_strlen(uVar4);\n                    if (uVar12 < uVar11) {\n                        uVar11 = uVar12;\n                    }\n                    uVar16 = uVar16 + 1;\n                } while (uVar16 < uVar15);\n                piVar9 = *arg3;\n                if (piVar9 != NULL) {\n                    if (piVar9[2] < piVar9[3]) {\n                        piVar9[2] = piVar9[2] + 1;\n                    }\n                    else {\n                        pcVar5 = *(*piVar9 + 0x50);\n                        *(&stack0xffffffffffffff70 + iVar10) = 0x434fd8;\n                        (*pcVar5)();\n                    }\n                    *(arg3 + 1) = 0xffffffff;\n                }\n                uVar4 = var_48h;\n                uVar14 = uVar14 + 1;\n                if (uVar11 <= uVar14) goto code_r0x00434db0;\n                *(&stack0xffffffffffffff70 + iVar10) = 0x434eb0;\n                cVar6 = fcn.00425240(arg3, uVar4);\n                if (cVar6 != '\\0') goto code_r0x00434db0;\n                uVar11 = 0;\n                do {\n                    while( true ) {\n                        piVar1 = piVar2 + uVar11;\n                        piVar9 = *arg3;\n                        cVar6 = *(*(arg_38h + *piVar1 * 8) + uVar14);\n                        if (piVar9 == NULL) break;\n                        uVar8 = *(arg3 + 1);\n                        if (uVar8 != 0xffffffff) goto code_r0x00434ec0;\n                        if (piVar9[2] < piVar9[3]) {\n                            uVar8 = *piVar9[2];\n                        }\n                        else {\n                            var_58h = uVar11;\n                            pcVar5 = *(*piVar9 + 0x48);\n                            *(&stack0xffffffffffffff70 + iVar10) = 0x434fb9;\n                            uVar8 = (*pcVar5)();\n                            uVar11 = var_58h;\n                            if (uVar8 == 0xffffffff) {\n                                *arg3 = NULL;\n                                goto code_r0x00434ec0;\n                            }\n                        }\n                        *(arg3 + 1) = uVar8;\n                        if (cVar6 != uVar8) goto code_r0x00434ec4;\ncode_r0x00434f10:\n                        uVar11 = uVar11 + 1;\n                        if (uVar15 <= uVar11) goto joined_r0x00434e38;\n                    }\n                    uVar8 = 0xffffffff;\ncode_r0x00434ec0:\n                    if (cVar6 == uVar8) goto code_r0x00434f10;\ncode_r0x00434ec4:\n                    uVar15 = uVar15 - 1;\n                    *piVar1 = piVar2[uVar15];\n                } while (uVar11 < uVar15);\n                goto joined_r0x00434e38;\n            }\n            if (uVar15 == 1) {\n                *(&stack0xffffffffffffff70 + iVar10) = 0x434f39;\n                fcn.0045dd90(arg3);\n                iVar3 = *piVar2;\n                iVar13 = *(arg_38h + iVar3 * 8);\n                *(&stack0xffffffffffffff70 + iVar10) = 0x434f4a;\n                uVar15 = sub.msvcrt.dll_strlen(iVar13);\n                uVar4 = var_48h;\n                while (uVar14 = uVar14 + 1,  uVar14 < uVar15) {\n                    var_48h = uVar4;\n                    *(&stack0xffffffffffffff70 + iVar10) = 0x434f5e;\n                    cVar6 = fcn.00425240(arg3, uVar4);\n                    if (cVar6 != '\\0') break;\n                    cVar6 = *(iVar13 + uVar14);\n                    *(&stack0xffffffffffffff70 + iVar10) = 0x434f97;\n                    cVar7 = fcn.00425320(arg3);\n                    if (cVar6 != cVar7) break;\n                    *(&stack0xffffffffffffff70 + iVar10) = 0x434fa8;\n                    fcn.0045dd90(arg3);\n                    uVar4 = var_48h;\n                }\n                if (uVar14 == uVar15) {\n                    *arg_30h = iVar3;\n                    goto code_r0x00434db7;\n                }\n            }\n        }\n    }\ncode_r0x00434db0:\n    *arg_50h = *arg_50h | 4;\ncode_r0x00434db7:\n    piVar9 = arg3[1];\n    *var_50h = *arg3;\n    var_50h[1] = piVar9;\n    return var_50h;\n}\n",
        "token_count": 1956
    },
    "00436560": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t **\nfcn.00436560(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t **arg4, int32_t *arg_30h, int64_t arg_38h, \n            uint64_t arg_40h, int64_t arg_48h, uint32_t *arg_50h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    code *pcVar4;\n    char cVar5;\n    char cVar6;\n    uint32_t uVar7;\n    int64_t *piVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    int64_t *piVar12;\n    int64_t **ppiVar13;\n    uint64_t uVar14;\n    uchar *puVar15;\n    uint64_t uVar16;\n    int64_t iVar17;\n    int64_t **ppiVar18;\n    ulong uStack144;\n    uchar auStack136 [32];\n    int64_t *piStack104;\n    int64_t **var_58h;\n    int64_t **var_50h;\n    int64_t **var_48h;\n    ulong var_38h;\n    \n    arg_48h = arg_48h + 0xd0;\n    uStack144 = 0x436597;\n    var_50h = arg4;\n    var_48h = arg1;\n    piVar8 = fcn.00467260(arg_48h);\n    uStack144 = 0x4365af;\n    iVar9 = fcn.0040ce40(arg_48h);\n    ppiVar13 = var_50h;\n    iVar9 = -iVar9;\n    puVar15 = &stack0xffffffffffffff78 + iVar9;\n    piVar1 = &stack0xffffffffffffff98 + iVar9;\n    *(&stack0xffffffffffffff70 + iVar9) = 0x4365c6;\n    cVar5 = fcn.00425240(arg3, ppiVar13);\n    if (cVar5 == '\\0') {\n        *(&stack0xffffffffffffff70 + iVar9) = 0x43678a;\n        cVar5 = fcn.00425320(arg3);\n        ppiVar13 = var_50h;\n        iVar11 = arg_40h * 2;\n        if (iVar11 != 0) {\n            var_50h = arg3;\n            iVar17 = 0;\n            uVar14 = 0;\n            var_58h = ppiVar13;\n            do {\n                while (**(arg_38h + iVar17 * 8) == cVar5) {\ncode_r0x004367e3:\n                    piVar1[uVar14] = iVar17;\n                    iVar17 = iVar17 + 1;\n                    uVar14 = uVar14 + 1;\n                    if (iVar17 == iVar11) goto code_r0x004367f4;\n                }\n                pcVar4 = *(*piVar8 + 0x10);\n                *(&stack0xffffffffffffff70 + iVar9) = 0x4367c9;\n                cVar6 = (*pcVar4)(piVar8);\n                if (cVar5 == cVar6) goto code_r0x004367e3;\n                iVar17 = iVar17 + 1;\n            } while (iVar17 != iVar11);\ncode_r0x004367f4:\n            arg3 = var_50h;\n            if (uVar14 == 0) {\n                piVar8 = NULL;\n                ppiVar18 = NULL;\n                ppiVar13 = var_58h;\n            }\n            else {\n                *(&stack0xffffffffffffff70 + iVar9) = 0x436810;\n                ppiVar13 = arg3;\n                fcn.0045dd90(arg3);\n                *(&stack0xffffffffffffff70 + iVar9) = 0x436821;\n                iVar11 = fcn.0040ce40(ppiVar13);\n                ppiVar13 = var_58h;\n                uVar10 = 0;\n                iVar11 = -iVar11;\n                puVar15 = &stack0xffffffffffffff78 + iVar11 + iVar9;\n                var_50h = &stack0xffffffffffffff98 + iVar11 + iVar9;\n                do {\n                    uVar3 = *(arg_38h + piVar1[uVar10] * 8);\n                    *(&stack0xffffffffffffff70 + iVar11 + iVar9) = 0x43684d;\n                    piVar8 = sub.msvcrt.dll_strlen(uVar3);\n                    *(&stack0xffffffffffffff98 + iVar11 + iVar9 + uVar10 * 8) = piVar8;\n                    uVar10 = uVar10 + 1;\n                } while (uVar10 != uVar14);\n                piVar8 = 0x1;\n                ppiVar18 = var_50h;\n            }\n            goto code_r0x004365da;\n        }\n    }\n    uVar14 = 0;\n    piVar8 = NULL;\n    puVar15 = &stack0xffffffffffffff78 + iVar9;\n    ppiVar13 = var_50h;\n    ppiVar18 = NULL;\ncode_r0x004365da:\n    piVar12 = *arg3;\n    do {\n        if (piVar12 == NULL) {\n            var_50h._0_4_ = 1;\n        }\n        else {\n            var_50h._0_4_ = 0;\n            if (*(arg3 + 1) == -1) {\n                if (piVar12[2] < piVar12[3]) {\n                    uVar7 = *piVar12[2];\n                }\n                else {\n                    pcVar4 = *(*piVar12 + 0x48);\n                    *(puVar15 + -8) = 0x4368db;\n                    uVar7 = (*pcVar4)();\n                    if (uVar7 == 0xffffffff) {\n                        *arg3 = NULL;\n                        var_50h._0_4_ = 1;\n                        goto code_r0x004365f6;\n                    }\n                }\n                *(arg3 + 1) = uVar7;\n                var_50h._0_4_ = 0;\n            }\n        }\ncode_r0x004365f6:\n        piVar12 = *ppiVar13;\n        if (piVar12 == NULL) {\n            cVar5 = '\\x01';\ncode_r0x0043660e:\n            if (var_50h == cVar5) break;\n        }\n        else {\n            cVar5 = '\\0';\n            if (*(ppiVar13 + 1) != -1) goto code_r0x0043660e;\n            if (piVar12[2] < piVar12[3]) {\n                uVar7 = *piVar12[2];\n            }\n            else {\n                var_50h = var_50h & 0xffffffff00000000 | var_50h;\n                pcVar4 = *(*piVar12 + 0x48);\n                *(puVar15 + -8) = 0x436894;\n                uVar7 = (*pcVar4)();\n                if (uVar7 == 0xffffffff) {\n                    *ppiVar13 = NULL;\n                    cVar5 = '\\x01';\n                    goto code_r0x0043660e;\n                }\n            }\n            *(ppiVar13 + 1) = uVar7;\n            if (var_50h == '\\0') break;\n        }\n        piVar12 = *arg3;\n        if (piVar12 == NULL) {\n            uVar7 = 0xffffffff;\n        }\n        else {\n            uVar7 = *(arg3 + 1);\n            if (uVar7 == 0xffffffff) {\n                if (piVar12[2] < piVar12[3]) {\n                    uVar7 = *piVar12[2];\n                }\n                else {\n                    pcVar4 = *(*piVar12 + 0x48);\n                    *(puVar15 + -8) = 0x436916;\n                    uVar7 = (*pcVar4)();\n                    if (uVar7 == 0xffffffff) {\n                        *arg3 = NULL;\n                        goto joined_r0x0043674b;\n                    }\n                }\n                *(arg3 + 1) = uVar7;\n            }\n        }\njoined_r0x0043674b:\n        if (uVar14 == 0) goto code_r0x00436751;\n        uVar10 = 0;\n        uVar16 = 0;\n        do {\n            while( true ) {\n                if (piVar8 < ppiVar18[uVar10]) break;\n                uVar16 = uVar16 + 1;\ncode_r0x00436648:\n                uVar10 = uVar10 + 1;\n                if (uVar14 <= uVar10) goto code_r0x00436680;\n            }\n            if (*(*(arg_38h + piVar1[uVar10] * 8) + piVar8) == uVar7) goto code_r0x00436648;\n            uVar14 = uVar14 - 1;\n            piVar1[uVar10] = piVar1[uVar14];\n            ppiVar18[uVar10] = ppiVar18[uVar14];\n        } while (uVar10 < uVar14);\ncode_r0x00436680:\n        if (uVar16 == uVar14) break;\n        piVar12 = *arg3;\n        if (piVar12 != NULL) {\n            if (piVar12[2] < piVar12[3]) {\n                piVar12[2] = piVar12[2] + 1;\n            }\n            else {\n                pcVar4 = *(*piVar12 + 0x50);\n                *(puVar15 + -8) = 0x4368fd;\n                (*pcVar4)();\n                piVar12 = *arg3;\n            }\n            *(arg3 + 1) = 0xffffffff;\n        }\n        piVar8 = piVar8 + 1;\n    } while( true );\n    if (uVar14 == 1) {\n        piVar12 = *ppiVar18;\njoined_r0x004368c9:\n        if (piVar8 == piVar12) {\ncode_r0x0043670e:\n            iVar2 = *piVar1;\n            if (arg_40h <= iVar2) {\n                iVar2 = iVar2 - arg_40h;\n            }\n            *arg_30h = iVar2;\n            goto code_r0x00436758;\n        }\n    }\n    else if (uVar14 == 2) {\n        if (piVar8 != *ppiVar18) {\n            piVar12 = ppiVar18[1];\n            goto joined_r0x004368c9;\n        }\n        goto code_r0x0043670e;\n    }\ncode_r0x00436751:\n    *arg_50h = *arg_50h | 4;\ncode_r0x00436758:\n    piVar8 = arg3[1];\n    *var_48h = *arg3;\n    var_48h[1] = piVar8;\n    return var_48h;\n}\n",
        "token_count": 2487
    },
    "00437030": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00437030(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t **arg4)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    int16_t iVar3;\n    uint32_t uVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    int64_t *piVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint16_t uVar10;\n    uint64_t uVar11;\n    int64_t *piVar12;\n    int64_t iVar13;\n    bool bVar14;\n    bool bVar15;\n    int32_t *in_stack_00000028;\n    int32_t in_stack_00000030;\n    int32_t in_stack_00000038;\n    int64_t in_stack_00000040;\n    int64_t in_stack_00000048;\n    uint32_t *in_stack_00000050;\n    int64_t *piStack88;\n    \n    piVar1 = arg3[1];\n    piVar7 = *arg3;\n    iVar9 = 10;\n    piVar12 = *arg4;\n    iVar3 = *(arg4 + 1);\n    uVar11 = piVar1 & 0xffffffff;\n    piVar5 = fcn.004672c0(in_stack_00000048 + 0xd0);\n    if ((in_stack_00000040 != 2) && (iVar9 = 1000,  in_stack_00000040 != 4)) {\n        iVar9 = 1;\n    }\n    iVar8 = 0;\n    iVar13 = 0;\n    while( true ) {\n        bVar14 = true;\n        if ((piVar7 != NULL) && (bVar14 = false,  uVar11 == -1)) {\n            if (piVar7[2] < piVar7[3]) {\n                uVar11 = *piVar7[2];\n            }\n            else {\n                uVar4 = (**(*piVar7 + 0x48))(piVar7);\n                uVar11 = uVar4;\n            }\n            bVar14 = uVar11 == -1;\n            if (bVar14) {\n                piVar7 = NULL;\n            }\n        }\n        uVar10 = uVar11;\n        bVar15 = true;\n        if ((piVar12 != NULL) && (bVar15 = false,  iVar3 == -1)) {\n            if (piVar12[2] < piVar12[3]) {\n                iVar3 = *piVar12[2];\n            }\n            else {\n                iVar3 = (**(*piVar12 + 0x48))(piVar12);\n            }\n            bVar15 = iVar3 == -1;\n            if (bVar15) {\n                piVar12 = NULL;\n            }\n        }\n        if (bVar14 == bVar15) break;\n        if (iVar13 == in_stack_00000040) goto code_r0x004370fe;\n        uVar6 = 0xffff;\n        if (piVar7 != NULL) {\n            if (uVar10 == 0xffff) {\n                if (piVar7[2] < piVar7[3]) {\n                    uVar11 = *piVar7[2];\n                }\n                else {\n                    uVar4 = (**(*piVar7 + 0x48))(piVar7);\n                    uVar11 = uVar4;\n                }\n                if (uVar11 == -1) {\n                    uVar6 = 0xffff;\n                    piVar7 = NULL;\n                    goto code_r0x004371a7;\n                }\n            }\n            uVar6 = uVar11 & 0xffff;\n        }\ncode_r0x004371a7:\n        uVar10 = uVar11;\n        cVar2 = (**(*piVar5 + 0x60))(piVar5, uVar6, 0x2a);\n        if (9 < cVar2 - 0x30U) goto code_r0x004370d7;\n        iVar8 = cVar2 + -0x30 + iVar8 * 10;\n        if ((in_stack_00000038 < iVar8 * iVar9) || (iVar8 * iVar9 + iVar9 <= in_stack_00000030)) goto code_r0x004370d7;\n        iVar9 = iVar9 / 10;\n        if (piVar7 != NULL) {\n            if (piVar7[2] < piVar7[3]) {\n                piVar7[2] = piVar7[2] + 2;\n            }\n            else {\n                (**(*piVar7 + 0x50))(piVar7);\n            }\n            uVar11 = 0xffffffff;\n        }\n        iVar13 = iVar13 + 1;\n    }\n    if (iVar13 == in_stack_00000040) goto code_r0x004370fe;\ncode_r0x004370d7:\n    if ((iVar13 == 2) && (in_stack_00000040 == 4)) {\n        iVar8 = iVar8 + -100;\ncode_r0x004370fe:\n        *in_stack_00000028 = iVar8;\n    }\n    else {\n        *in_stack_00000050 = *in_stack_00000050 | 4;\n    }\n    piStack88 = piVar1 & 0xffffffffffff0000 | uVar10;\n    *arg1 = piVar7;\n    arg1[1] = piStack88;\n    return;\n}\n",
        "token_count": 1207
    },
    "00437570": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t **\nfcn.00437570(int64_t **arg1, ulong noname_1, int64_t **arg3, ulong arg4, int32_t *arg_30h, int64_t arg_38h, \n            int64_t arg_40h, int64_t arg_48h, uint32_t *arg_50h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    code *pcVar5;\n    char cVar6;\n    int16_t iVar7;\n    int16_t iVar8;\n    int64_t *piVar9;\n    int64_t iVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    uint64_t uVar13;\n    int64_t iVar14;\n    uint64_t uVar15;\n    uint64_t uVar16;\n    ulong auStack144 [5];\n    uint64_t uStack104;\n    uint64_t var_58h;\n    int64_t **var_50h;\n    ulong var_48h;\n    ulong var_38h;\n    \n    arg_48h = arg_48h + 0xd0;\n    auStack144[0] = 0x4375ae;\n    var_50h = arg1;\n    var_48h = arg4;\n    piVar9 = fcn.004672c0(arg_48h);\n    auStack144[0] = 0x4375c2;\n    iVar10 = fcn.0040ce40(arg_48h);\n    iVar10 = -iVar10;\n    *(&stack0xffffffffffffff70 + iVar10) = 0x4375d0;\n    cVar6 = fcn.00425380(arg3, arg4);\n    piVar2 = &stack0xffffffffffffff98 + iVar10;\n    if (cVar6 == '\\0') {\n        *(&stack0xffffffffffffff70 + iVar10) = 0x437615;\n        var_58h._0_4_ = fcn.00425470(arg3);\n        if (arg_40h != 0) {\n            iVar14 = 0;\n            uVar13 = 0;\ncode_r0x00437644:\n            do {\n                if (**(arg_38h + iVar14 * 8) != var_58h) {\n                    var_58h = var_58h & 0xffffffff00000000 | var_58h;\n                    pcVar5 = *(*piVar9 + 0x30);\n                    *(&stack0xffffffffffffff70 + iVar10) = 0x437631;\n                    iVar7 = (*pcVar5)(piVar9);\n                    if (var_58h != iVar7) {\n                        iVar14 = iVar14 + 1;\n                        if (iVar14 == arg_40h) break;\n                        goto code_r0x00437644;\n                    }\n                }\n                piVar2[uVar13] = iVar14;\n                iVar14 = iVar14 + 1;\n                uVar13 = uVar13 + 1;\n            } while (iVar14 != arg_40h);\n            uVar15 = 0;\njoined_r0x00437669:\n            if (1 < uVar13) {\n                uVar16 = 1;\n                uVar4 = *(arg_38h + *piVar2 * 8);\n                *(&stack0xffffffffffffff70 + iVar10) = 0x437683;\n                uVar11 = sub.msvcrt.dll_wcslen(uVar4);\n                do {\n                    uVar4 = *(arg_38h + piVar2[uVar16] * 8);\n                    *(&stack0xffffffffffffff70 + iVar10) = 0x43769d;\n                    uVar12 = sub.msvcrt.dll_wcslen(uVar4);\n                    if (uVar12 < uVar11) {\n                        uVar11 = uVar12;\n                    }\n                    uVar16 = uVar16 + 1;\n                } while (uVar16 < uVar13);\n                piVar9 = *arg3;\n                if (piVar9 != NULL) {\n                    if (piVar9[2] < piVar9[3]) {\n                        piVar9[2] = piVar9[2] + 2;\n                    }\n                    else {\n                        pcVar5 = *(*piVar9 + 0x50);\n                        *(&stack0xffffffffffffff70 + iVar10) = 0x437820;\n                        (*pcVar5)();\n                    }\n                    *(arg3 + 1) = 0xffff;\n                }\n                uVar4 = var_48h;\n                uVar15 = uVar15 + 1;\n                if (uVar11 <= uVar15) goto code_r0x004375e0;\n                *(&stack0xffffffffffffff70 + iVar10) = 0x4376ef;\n                cVar6 = fcn.00425380(arg3, uVar4);\n                if (cVar6 != '\\0') goto code_r0x004375e0;\n                uVar11 = uVar15 * 2;\n                uVar16 = 0;\n                do {\n                    while( true ) {\n                        piVar1 = piVar2 + uVar16;\n                        piVar9 = *arg3;\n                        iVar7 = *(*(arg_38h + *piVar1 * 8) + uVar11);\n                        iVar8 = -1;\n                        if ((piVar9 != NULL) && (iVar8 = *(arg3 + 1),  iVar8 == -1)) {\n                            if (piVar9[2] < piVar9[3]) {\n                                iVar8 = *piVar9[2];\n                            }\n                            else {\n                                uStack104 = uVar16;\n                                var_58h = uVar11;\n                                pcVar5 = *(*piVar9 + 0x48);\n                                *(&stack0xffffffffffffff70 + iVar10) = 0x437810;\n                                iVar8 = (*pcVar5)();\n                                uVar16 = uStack104;\n                                uVar11 = var_58h;\n                            }\n                            if (iVar8 == -1) {\n                                *arg3 = NULL;\n                            }\n                            else {\n                                *(arg3 + 1) = iVar8;\n                            }\n                        }\n                        if (iVar7 != iVar8) break;\n                        uVar16 = uVar16 + 1;\n                        if (uVar13 <= uVar16) goto joined_r0x00437669;\n                    }\n                    uVar13 = uVar13 - 1;\n                    *piVar1 = piVar2[uVar13];\n                } while (uVar16 < uVar13);\n                goto joined_r0x00437669;\n            }\n            if (uVar13 == 1) {\n                *(&stack0xffffffffffffff70 + iVar10) = 0x437765;\n                fcn.0045ddd0(arg3);\n                iVar3 = *piVar2;\n                iVar14 = *(arg_38h + iVar3 * 8);\n                *(&stack0xffffffffffffff70 + iVar10) = 0x43777a;\n                uVar13 = sub.msvcrt.dll_wcslen(iVar14);\n                uVar4 = var_48h;\n                while (uVar15 = uVar15 + 1,  uVar15 < uVar13) {\n                    var_48h = uVar4;\n                    *(&stack0xffffffffffffff70 + iVar10) = 0x43778e;\n                    cVar6 = fcn.00425380(arg3, uVar4);\n                    if (cVar6 != '\\0') break;\n                    iVar7 = *(iVar14 + uVar15 * 2);\n                    *(&stack0xffffffffffffff70 + iVar10) = 0x4377e9;\n                    iVar8 = fcn.00425470(arg3);\n                    if (iVar7 != iVar8) break;\n                    *(&stack0xffffffffffffff70 + iVar10) = 0x4377fb;\n                    fcn.0045ddd0(arg3);\n                    uVar4 = var_48h;\n                }\n                if (uVar15 == uVar13) {\n                    *arg_30h = iVar3;\n                    goto code_r0x004375e7;\n                }\n            }\n        }\n    }\ncode_r0x004375e0:\n    *arg_50h = *arg_50h | 4;\ncode_r0x004375e7:\n    piVar9 = arg3[1];\n    *var_50h = *arg3;\n    var_50h[1] = piVar9;\n    return var_50h;\n}\n",
        "token_count": 1901
    },
    "00438c80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t **\nfcn.00438c80(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t **arg4, int32_t *arg_30h, int64_t arg_38h, \n            uint64_t arg_40h, int64_t arg_48h, uint32_t *arg_50h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    code *pcVar4;\n    char cVar5;\n    int16_t iVar6;\n    int16_t iVar7;\n    int64_t *piVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    int64_t *piVar11;\n    uint64_t uVar12;\n    int64_t **ppiVar13;\n    uint64_t uVar14;\n    uint64_t uVar15;\n    uchar *puVar16;\n    int64_t **ppiVar17;\n    int64_t iVar18;\n    ulong uStack144;\n    uchar auStack136 [32];\n    int64_t *piStack104;\n    int64_t **var_58h;\n    int64_t **var_50h;\n    int64_t **var_48h;\n    ulong var_38h;\n    \n    arg_48h = arg_48h + 0xd0;\n    uStack144 = 0x438cb7;\n    var_50h = arg4;\n    var_48h = arg1;\n    piVar8 = fcn.004672c0(arg_48h);\n    uStack144 = 0x438ccf;\n    iVar9 = fcn.0040ce40(arg_48h);\n    ppiVar13 = var_50h;\n    iVar9 = -iVar9;\n    puVar16 = &stack0xffffffffffffff78 + iVar9;\n    piVar1 = &stack0xffffffffffffff98 + iVar9;\n    *(&stack0xffffffffffffff70 + iVar9) = 0x438ce6;\n    cVar5 = fcn.00425380(arg3, ppiVar13);\n    if (cVar5 == '\\0') {\n        *(&stack0xffffffffffffff70 + iVar9) = 0x438f1a;\n        iVar7 = fcn.00425470(arg3);\n        ppiVar13 = var_50h;\n        iVar10 = arg_40h * 2;\n        if (iVar10 != 0) {\n            var_50h = arg3;\n            iVar18 = 0;\n            uVar15 = 0;\n            var_58h = ppiVar13;\ncode_r0x00438f69:\n            do {\n                if (**(arg_38h + iVar18 * 8) != iVar7) {\n                    pcVar4 = *(*piVar8 + 0x30);\n                    *(&stack0xffffffffffffff70 + iVar9) = 0x438f5a;\n                    iVar6 = (*pcVar4)(piVar8);\n                    if (iVar7 != iVar6) {\n                        iVar18 = iVar18 + 1;\n                        if (iVar18 == iVar10) break;\n                        goto code_r0x00438f69;\n                    }\n                }\n                piVar1[uVar15] = iVar18;\n                iVar18 = iVar18 + 1;\n                uVar15 = uVar15 + 1;\n            } while (iVar18 != iVar10);\n            arg3 = var_50h;\n            if (uVar15 == 0) {\n                piVar8 = NULL;\n                ppiVar17 = NULL;\n                ppiVar13 = var_58h;\n            }\n            else {\n                *(&stack0xffffffffffffff70 + iVar9) = 0x438fa3;\n                ppiVar13 = arg3;\n                fcn.0045ddd0(arg3);\n                *(&stack0xffffffffffffff70 + iVar9) = 0x438fb4;\n                iVar10 = fcn.0040ce40(ppiVar13);\n                ppiVar13 = var_58h;\n                uVar12 = 0;\n                iVar10 = -iVar10;\n                puVar16 = &stack0xffffffffffffff78 + iVar10 + iVar9;\n                var_50h = &stack0xffffffffffffff98 + iVar10 + iVar9;\n                do {\n                    uVar3 = *(arg_38h + piVar1[uVar12] * 8);\n                    *(&stack0xffffffffffffff70 + iVar10 + iVar9) = 0x438fdd;\n                    piVar8 = sub.msvcrt.dll_wcslen(uVar3);\n                    *(&stack0xffffffffffffff98 + iVar10 + iVar9 + uVar12 * 8) = piVar8;\n                    uVar12 = uVar12 + 1;\n                } while (uVar12 != uVar15);\n                piVar8 = 0x1;\n                ppiVar17 = var_50h;\n            }\n            goto code_r0x00438cfa;\n        }\n    }\n    uVar15 = 0;\n    piVar8 = NULL;\n    puVar16 = &stack0xffffffffffffff78 + iVar9;\n    ppiVar13 = var_50h;\n    ppiVar17 = NULL;\ncode_r0x00438cfa:\n    iVar9 = piVar8 * 2;\n    piVar11 = *arg3;\n    do {\n        var_50h._0_4_ = 1;\n        if ((piVar11 != NULL) && (var_50h._0_4_ = 0,  *(arg3 + 1) == -1)) {\n            if (piVar11[2] < piVar11[3]) {\n                iVar7 = *piVar11[2];\n            }\n            else {\n                var_50h = ppiVar13;\n                pcVar4 = *(*piVar11 + 0x48);\n                *(puVar16 + -8) = 0x43906e;\n                iVar7 = (*pcVar4)();\n                ppiVar13 = var_50h;\n            }\n            if (iVar7 == -1) {\n                *arg3 = NULL;\n                var_50h._0_4_ = 1;\n            }\n            else {\n                *(arg3 + 1) = iVar7;\n                var_50h._0_4_ = 0;\n            }\n        }\n        piVar11 = *ppiVar13;\n        cVar5 = '\\x01';\n        if ((piVar11 == NULL) || (cVar5 = '\\0',  *(ppiVar13 + 1) != -1)) {\ncode_r0x00438d38:\n            if (cVar5 == var_50h) break;\n        }\n        else {\n            if (piVar11[2] < piVar11[3]) {\n                iVar7 = *piVar11[2];\n            }\n            else {\n                var_58h = ppiVar13;\n                var_50h = var_50h & 0xffffffff00000000 | var_50h;\n                pcVar4 = *(*piVar11 + 0x48);\n                *(puVar16 + -8) = 0x439058;\n                iVar7 = (*pcVar4)();\n                ppiVar13 = var_58h;\n            }\n            if (iVar7 == -1) {\n                *ppiVar13 = NULL;\n                cVar5 = '\\x01';\n                goto code_r0x00438d38;\n            }\n            *(ppiVar13 + 1) = iVar7;\n            if (var_50h == '\\0') break;\n        }\n        piVar11 = *arg3;\n        iVar7 = -1;\n        if ((piVar11 != NULL) && (iVar7 = *(arg3 + 1),  iVar7 == -1)) {\n            if (piVar11[2] < piVar11[3]) {\n                iVar7 = *piVar11[2];\n            }\n            else {\n                var_50h = ppiVar13;\n                pcVar4 = *(*piVar11 + 0x48);\n                *(puVar16 + -8) = 0x439006;\n                iVar7 = (*pcVar4)();\n                ppiVar13 = var_50h;\n            }\n            if (iVar7 == -1) {\n                *arg3 = NULL;\n            }\n            else {\n                *(arg3 + 1) = iVar7;\n            }\n        }\n        if (uVar15 == 0) goto code_r0x00438eb0;\n        uVar12 = 0;\n        uVar14 = 0;\n        do {\n            while( true ) {\n                if (piVar8 < ppiVar17[uVar12]) break;\n                uVar14 = uVar14 + 1;\ncode_r0x00438d78:\n                uVar12 = uVar12 + 1;\n                if (uVar15 <= uVar12) goto code_r0x00438daf;\n            }\n            if (*(*(arg_38h + piVar1[uVar12] * 8) + iVar9) == iVar7) goto code_r0x00438d78;\n            uVar15 = uVar15 - 1;\n            piVar1[uVar12] = piVar1[uVar15];\n            ppiVar17[uVar12] = ppiVar17[uVar15];\n        } while (uVar12 < uVar15);\ncode_r0x00438daf:\n        if (uVar14 == uVar15) break;\n        piVar11 = *arg3;\n        if (piVar11 != NULL) {\n            if (piVar11[2] < piVar11[3]) {\n                piVar11[2] = piVar11[2] + 2;\n            }\n            else {\n                var_50h = ppiVar13;\n                pcVar4 = *(*piVar11 + 0x50);\n                *(puVar16 + -8) = 0x43903f;\n                (*pcVar4)();\n                piVar11 = *arg3;\n                ppiVar13 = var_50h;\n            }\n            *(arg3 + 1) = 0xffff;\n        }\n        piVar8 = piVar8 + 1;\n        iVar9 = iVar9 + 2;\n    } while( true );\n    if (uVar15 == 1) {\n        piVar11 = *ppiVar17;\njoined_r0x00439028:\n        if (piVar8 == piVar11) {\ncode_r0x00438e6a:\n            iVar2 = *piVar1;\n            if (arg_40h <= iVar2) {\n                iVar2 = iVar2 - arg_40h;\n            }\n            *arg_30h = iVar2;\n            goto code_r0x00438eb7;\n        }\n    }\n    else if (uVar15 == 2) {\n        if (piVar8 != *ppiVar17) {\n            piVar11 = ppiVar17[1];\n            goto joined_r0x00439028;\n        }\n        goto code_r0x00438e6a;\n    }\ncode_r0x00438eb0:\n    *arg_50h = *arg_50h | 4;\ncode_r0x00438eb7:\n    piVar8 = arg3[1];\n    *var_48h = *arg3;\n    var_48h[1] = piVar8;\n    return var_48h;\n}\n",
        "token_count": 2514
    },
    "00439cb0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043a6d2)\n// WARNING: Removing unreachable block (ram,0x0043a23a)\n// WARNING: Removing unreachable block (ram,0x0043a6e0)\n// WARNING: Removing unreachable block (ram,0x0043a6f2)\n// WARNING: Removing unreachable block (ram,0x0043a128)\n// WARNING: Removing unreachable block (ram,0x0043a133)\n// WARNING: Removing unreachable block (ram,0x0043a6d7)\n// WARNING: Removing unreachable block (ram,0x0043a137)\n// WARNING: Removing unreachable block (ram,0x0043a140)\n// WARNING: Removing unreachable block (ram,0x0043a14f)\n// WARNING: Removing unreachable block (ram,0x0043a15a)\n// WARNING: Removing unreachable block (ram,0x0043a1ab)\n// WARNING: Removing unreachable block (ram,0x0043a1bc)\n// WARNING: Removing unreachable block (ram,0x0043a1ce)\n// WARNING: Removing unreachable block (ram,0x0043a1d3)\n// WARNING: Removing unreachable block (ram,0x0043a1dc)\n// WARNING: Removing unreachable block (ram,0x0043a1e6)\n// WARNING: Removing unreachable block (ram,0x0043a268)\n// WARNING: Removing unreachable block (ram,0x0043a4e0)\n\nulong * fcn.00439cb0(ulong *arg1, ulong noname_1, ulong *arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    char cVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    int64_t iVar5;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    ulong in_stack_00000038;\n    uchar auStack123 [3];\n    uint uStack120;\n    int64_t aiStack104 [2];\n    int64_t aiStack88 [3];\n    \n    fcn.00467260(in_stack_00000028 + 0xd0);\n    iVar3 = fcn.00424a00(auStack123, in_stack_00000028 + 0xd0);\n    aiStack104[0] = fcn.004472c0(0, 0);\n    if (*(iVar3 + 0x20) != '\\0') {\n        fcn.004488f0(aiStack104, 0x20);\n    }\n    aiStack88[0] = fcn.004472c0(0, 0);\n    fcn.004488f0(aiStack88, 0x20);\n    iVar5 = 0;\n    uStack120 = *(iVar3 + 0x60);\n    while( true ) {\n        if (*(&uStack120 + iVar5) < 5) {\n    // WARNING: Could not recover jumptable at 0x00439e03. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x480978\n            puVar4 = (*(*(*(&uStack120 + iVar5) * 4 + 0x480978) + 0x480978))();\n            return puVar4;\n        }\n        if (3 < iVar5 + 1) break;\n        iVar5 = iVar5 + 1;\n    }\n    if ((1 < *(aiStack88[0] + -0x18)) && (iVar5 = fcn.004230b0(aiStack88, 0x30, 0),  iVar5 != 0)) {\n        if (iVar5 == -1) {\n            fcn.00447ac0(aiStack88, 0, *(aiStack88[0] + -0x18) + -1);\n        }\n        else {\n            fcn.00447ac0(aiStack88, 0, iVar5);\n        }\n    }\n    if (*(aiStack104[0] + -0x18) != 0) {\n        fcn.00448b10(aiStack104, 0);\n        cVar2 = fcn.00465040(*(iVar3 + 0x10), *(iVar3 + 0x18), aiStack104);\n        if (cVar2 == '\\0') {\n            *in_stack_00000030 = *in_stack_00000030 | 4;\n        }\n    }\n    fcn.004479a0(in_stack_00000038, aiStack88);\n    cVar2 = fcn.00425240(arg3, arg4);\n    if (cVar2 != '\\0') {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    uVar1 = arg3[1];\n    *arg1 = *arg3;\n    arg1[1] = uVar1;\n    fcn.004477b0(aiStack88[0] + -0x18);\n    fcn.004477b0(aiStack104[0] + -0x18);\n    return arg1;\n}\n",
        "token_count": 1124
    },
    "0043a8c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043b2d2)\n// WARNING: Removing unreachable block (ram,0x0043ae46)\n// WARNING: Removing unreachable block (ram,0x0043b2e0)\n// WARNING: Removing unreachable block (ram,0x0043b2f2)\n// WARNING: Removing unreachable block (ram,0x0043ad38)\n// WARNING: Removing unreachable block (ram,0x0043ad43)\n// WARNING: Removing unreachable block (ram,0x0043b2d7)\n// WARNING: Removing unreachable block (ram,0x0043ad47)\n// WARNING: Removing unreachable block (ram,0x0043ad50)\n// WARNING: Removing unreachable block (ram,0x0043ad5f)\n// WARNING: Removing unreachable block (ram,0x0043ad6a)\n// WARNING: Removing unreachable block (ram,0x0043adbb)\n// WARNING: Removing unreachable block (ram,0x0043adca)\n// WARNING: Removing unreachable block (ram,0x0043addc)\n// WARNING: Removing unreachable block (ram,0x0043ade1)\n// WARNING: Removing unreachable block (ram,0x0043ade8)\n// WARNING: Removing unreachable block (ram,0x0043adf2)\n// WARNING: Removing unreachable block (ram,0x0043ae74)\n// WARNING: Removing unreachable block (ram,0x0043b0e0)\n\nulong * fcn.0043a8c0(ulong *arg1, ulong noname_1, ulong *arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    char cVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    int64_t iVar5;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    ulong in_stack_00000038;\n    uchar auStack123 [3];\n    uint uStack120;\n    int64_t aiStack104 [2];\n    int64_t aiStack88 [3];\n    \n    fcn.00467260(in_stack_00000028 + 0xd0);\n    iVar3 = fcn.00424b30(auStack123, in_stack_00000028 + 0xd0);\n    aiStack104[0] = fcn.004472c0(0, 0);\n    if (*(iVar3 + 0x20) != '\\0') {\n        fcn.004488f0(aiStack104, 0x20);\n    }\n    aiStack88[0] = fcn.004472c0(0, 0);\n    fcn.004488f0(aiStack88, 0x20);\n    iVar5 = 0;\n    uStack120 = *(iVar3 + 0x60);\n    while( true ) {\n        if (*(&uStack120 + iVar5) < 5) {\n    // WARNING: Could not recover jumptable at 0x0043aa13. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x480964\n            puVar4 = (*(*(*(&uStack120 + iVar5) * 4 + 0x480964) + 0x480964))();\n            return puVar4;\n        }\n        if (3 < iVar5 + 1) break;\n        iVar5 = iVar5 + 1;\n    }\n    if ((1 < *(aiStack88[0] + -0x18)) && (iVar5 = fcn.004230b0(aiStack88, 0x30, 0),  iVar5 != 0)) {\n        if (iVar5 == -1) {\n            fcn.00447ac0(aiStack88, 0, *(aiStack88[0] + -0x18) + -1);\n        }\n        else {\n            fcn.00447ac0(aiStack88, 0, iVar5);\n        }\n    }\n    if (*(aiStack104[0] + -0x18) != 0) {\n        fcn.00448b10(aiStack104, 0);\n        cVar2 = fcn.00465040(*(iVar3 + 0x10), *(iVar3 + 0x18), aiStack104);\n        if (cVar2 == '\\0') {\n            *in_stack_00000030 = *in_stack_00000030 | 4;\n        }\n    }\n    fcn.004479a0(in_stack_00000038, aiStack88);\n    cVar2 = fcn.00425240(arg3, arg4);\n    if (cVar2 != '\\0') {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    uVar1 = arg3[1];\n    *arg1 = *arg3;\n    arg1[1] = uVar1;\n    fcn.004477b0(aiStack88[0] + -0x18);\n    fcn.004477b0(aiStack104[0] + -0x18);\n    return arg1;\n}\n",
        "token_count": 1117
    },
    "0043b920": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043c400)\n// WARNING: Removing unreachable block (ram,0x0043bda6)\n// WARNING: Removing unreachable block (ram,0x0043c440)\n// WARNING: Removing unreachable block (ram,0x0043c453)\n// WARNING: Removing unreachable block (ram,0x0043c45b)\n// WARNING: Removing unreachable block (ram,0x0043c580)\n// WARNING: Removing unreachable block (ram,0x0043c469)\n// WARNING: Removing unreachable block (ram,0x0043c471)\n// WARNING: Removing unreachable block (ram,0x0043c47a)\n// WARNING: Removing unreachable block (ram,0x0043bc97)\n// WARNING: Removing unreachable block (ram,0x0043bca2)\n// WARNING: Removing unreachable block (ram,0x0043c431)\n// WARNING: Removing unreachable block (ram,0x0043bca6)\n// WARNING: Removing unreachable block (ram,0x0043bcb0)\n// WARNING: Removing unreachable block (ram,0x0043bcbf)\n// WARNING: Removing unreachable block (ram,0x0043bcca)\n// WARNING: Removing unreachable block (ram,0x0043bd1b)\n// WARNING: Removing unreachable block (ram,0x0043bd2a)\n// WARNING: Removing unreachable block (ram,0x0043bd3c)\n// WARNING: Removing unreachable block (ram,0x0043bd41)\n// WARNING: Removing unreachable block (ram,0x0043bd48)\n// WARNING: Removing unreachable block (ram,0x0043bd52)\n// WARNING: Removing unreachable block (ram,0x0043bdd4)\n// WARNING: Removing unreachable block (ram,0x0043c1c0)\n// WARNING: Could not reconcile some variable overlaps\n\nulong * fcn.0043b920(ulong *arg1, ulong noname_1, ulong *arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    char cVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    int64_t arg3_00;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    ulong in_stack_00000038;\n    int64_t iStack200;\n    uchar auStack123 [3];\n    uint uStack120;\n    int64_t aiStack104 [2];\n    int64_t aiStack88 [3];\n    \n    fcn.004672c0(in_stack_00000028 + 0xd0);\n    iVar3 = fcn.00424c60(auStack123, in_stack_00000028 + 0xd0);\n    aiStack104[0] = fcn.004472c0(0, 0);\n    if (*(iVar3 + 0x20) != '\\0') {\n        fcn.004488f0(aiStack104, 0x20);\n    }\n    aiStack88[0] = fcn.004472c0(0, 0);\n    fcn.004488f0(aiStack88, 0x20);\n    iStack200 = 0;\n    uStack120 = *(iVar3 + 0x60);\n    while( true ) {\n        if (*(&uStack120 + iStack200) < 5) {\n    // WARNING: Could not recover jumptable at 0x0043ba77. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x4807c4\n            puVar4 = (*(*(*(&uStack120 + iStack200) * 4 + 0x4807c4) + 0x4807c4))();\n            return puVar4;\n        }\n        if (3 < iStack200 + 1) break;\n        iStack200 = iStack200 + 1;\n    }\n    if ((1 < *(aiStack88[0] + -0x18)) && (arg3_00 = fcn.004230b0(aiStack88, 0x30, 0),  arg3_00 != 0)) {\n        if (arg3_00 == -1) {\n            arg3_00 = *(aiStack88[0] + -0x18) + -1;\n        }\n        fcn.00447ac0(aiStack88, 0, arg3_00);\n    }\n    if (*(aiStack104[0] + -0x18) != 0) {\n        fcn.00448b10(aiStack104, 0);\n        cVar2 = fcn.00465040(*(iVar3 + 0x10), *(iVar3 + 0x18), aiStack104);\n        if (cVar2 == '\\0') {\n            *in_stack_00000030 = *in_stack_00000030 | 4;\n        }\n    }\n    fcn.004479a0(in_stack_00000038, aiStack88);\n    cVar2 = fcn.00425380(arg3, arg4);\n    if (cVar2 != '\\0') {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    uVar1 = arg3[1];\n    *arg1 = *arg3;\n    arg1[1] = uVar1;\n    fcn.004477b0(aiStack88[0] + -0x18);\n    fcn.004477b0(aiStack104[0] + -0x18);\n    return arg1;\n}\n",
        "token_count": 1222
    },
    "0043c590": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043d090)\n// WARNING: Removing unreachable block (ram,0x0043ca33)\n// WARNING: Removing unreachable block (ram,0x0043d0d0)\n// WARNING: Removing unreachable block (ram,0x0043d0e3)\n// WARNING: Removing unreachable block (ram,0x0043d0eb)\n// WARNING: Removing unreachable block (ram,0x0043d210)\n// WARNING: Removing unreachable block (ram,0x0043d0f9)\n// WARNING: Removing unreachable block (ram,0x0043d101)\n// WARNING: Removing unreachable block (ram,0x0043d10c)\n// WARNING: Removing unreachable block (ram,0x0043c907)\n// WARNING: Removing unreachable block (ram,0x0043c912)\n// WARNING: Removing unreachable block (ram,0x0043d0c1)\n// WARNING: Removing unreachable block (ram,0x0043c916)\n// WARNING: Removing unreachable block (ram,0x0043c920)\n// WARNING: Removing unreachable block (ram,0x0043c92f)\n// WARNING: Removing unreachable block (ram,0x0043c93a)\n// WARNING: Removing unreachable block (ram,0x0043c9a4)\n// WARNING: Removing unreachable block (ram,0x0043c9b5)\n// WARNING: Removing unreachable block (ram,0x0043c9c7)\n// WARNING: Removing unreachable block (ram,0x0043c9cc)\n// WARNING: Removing unreachable block (ram,0x0043c9d5)\n// WARNING: Removing unreachable block (ram,0x0043c9df)\n// WARNING: Removing unreachable block (ram,0x0043ca61)\n// WARNING: Removing unreachable block (ram,0x0043ce50)\n// WARNING: Could not reconcile some variable overlaps\n\nulong * fcn.0043c590(ulong *arg1, ulong noname_1, ulong *arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    char cVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    uint64_t arg3_00;\n    uint64_t uVar5;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    ulong in_stack_00000038;\n    int64_t iStack200;\n    uchar auStack123 [3];\n    uint uStack120;\n    int64_t aiStack104 [2];\n    int64_t aiStack88 [3];\n    \n    fcn.004672c0(in_stack_00000028 + 0xd0);\n    iVar3 = fcn.00424d90(auStack123, in_stack_00000028 + 0xd0);\n    aiStack104[0] = fcn.004472c0(0, 0);\n    if (*(iVar3 + 0x20) != '\\0') {\n        fcn.004488f0(aiStack104, 0x20);\n    }\n    aiStack88[0] = fcn.004472c0(0, 0);\n    fcn.004488f0(aiStack88, 0x20);\n    iStack200 = 0;\n    uStack120 = *(iVar3 + 0x60);\n    while( true ) {\n        if (*(&uStack120 + iStack200) < 5) {\n    // WARNING: Could not recover jumptable at 0x0043c6e7. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x4807d8\n            puVar4 = (*(*(*(&uStack120 + iStack200) * 4 + 0x4807d8) + 0x4807d8))();\n            return puVar4;\n        }\n        if (3 < iStack200 + 1) break;\n        iStack200 = iStack200 + 1;\n    }\n    if ((1 < *(aiStack88[0] + -0x18)) && (arg3_00 = fcn.004230b0(aiStack88, 0x30, 0),  arg3_00 != 0)) {\n        if (arg3_00 == 0xffffffffffffffff) {\n            uVar5 = *(aiStack88[0] + -0x18);\n            arg3_00 = uVar5 - 1;\n        }\n        else {\n            uVar5 = *(aiStack88[0] + -0x18);\n        }\n        if (uVar5 <= arg3_00) {\n            arg3_00 = uVar5;\n        }\n        fcn.004489d0(aiStack88, 0, arg3_00, 0);\n    }\n    if (*(aiStack104[0] + -0x18) != 0) {\n        fcn.00448b10(aiStack104, 0);\n        cVar2 = fcn.00465040(*(iVar3 + 0x10), *(iVar3 + 0x18), aiStack104);\n        if (cVar2 == '\\0') {\n            *in_stack_00000030 = *in_stack_00000030 | 4;\n        }\n    }\n    fcn.004479a0(in_stack_00000038, aiStack88);\n    cVar2 = fcn.00425380(arg3, arg4);\n    if (cVar2 != '\\0') {\n        *in_stack_00000030 = *in_stack_00000030 | 2;\n    }\n    uVar1 = arg3[1];\n    *arg1 = *arg3;\n    arg1[1] = uVar1;\n    fcn.004477b0(aiStack88[0] + -0x18);\n    fcn.004477b0(aiStack104[0] + -0x18);\n    return arg1;\n}\n",
        "token_count": 1303
    },
    "0043d980": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t ** fcn.0043d980(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t arg4)\n\n{\n    int32_t *piVar1;\n    int64_t *piVar2;\n    char cVar3;\n    int64_t *piVar4;\n    int64_t *piVar5;\n    ulong arg3_00;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    bool bVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    int64_t iVar11;\n    ulong *arg1_00;\n    ulong uVar12;\n    uint64_t uVar13;\n    uint8_t *puVar14;\n    uint *puVar15;\n    int32_t iVar16;\n    uint8_t *arg2;\n    int32_t iVar17;\n    char in_stack_00000028;\n    uint8_t **in_stack_00000030;\n    uint64_t uStack216;\n    uint64_t uStack200;\n    char *pcStack160;\n    uint auStack120 [4];\n    int64_t aiStack104 [2];\n    int64_t aiStack88 [3];\n    \n    piVar4 = *arg3;\n    piVar5 = arg3[1];\n    uStack216 = piVar5 & 0xff;\n    iVar9 = fcn.00467260(arg4 + 0xd0);\n    iVar10 = fcn.00425c30(0x47f0b0);\n    piVar2 = *(*(arg4 + 0xd0) + 0x18) + iVar10 * 8;\n    iVar11 = *piVar2;\n    if (iVar11 == 0) {\n        arg1_00 = fcn.004696a0(0x70);\n        *(arg1_00 + 1) = 0;\n        arg1_00[2] = 0;\n        arg1_00[3] = 0;\n        *arg1_00 = 0x489030;\n        *(arg1_00 + 4) = 0;\n        *(arg1_00 + 0x21) = 0;\n        *(arg1_00 + 0x22) = 0;\n        arg1_00[5] = 0;\n        arg1_00[6] = 0;\n        arg1_00[7] = 0;\n        arg1_00[8] = 0;\n        arg1_00[9] = 0;\n        arg1_00[10] = 0;\n        *(arg1_00 + 0xb) = 0;\n        *(arg1_00 + 0x5c) = 0;\n        *(arg1_00 + 0x5d) = 0;\n        *(arg1_00 + 0x5e) = 0;\n        *(arg1_00 + 0x5f) = 0;\n        *(arg1_00 + 0xc) = 0;\n        *(arg1_00 + 0x61) = 0;\n        *(arg1_00 + 0x62) = 0;\n        *(arg1_00 + 99) = 0;\n        *(arg1_00 + 0x6f) = 0;\n        fcn.0045c050(arg1_00, arg4 + 0xd0);\n        fcn.0045e9d0(*(arg4 + 0xd0), arg1_00, iVar10);\n        iVar11 = *piVar2;\n    }\n    arg2 = *in_stack_00000030;\n    if (*arg2 == *(iVar11 + 100)) {\n        auStack120[0] = *(iVar11 + 0x60);\n        iVar10 = *(arg2 + -0x18);\n        pcStack160 = *(iVar11 + 0x48);\n        uStack200 = *(iVar11 + 0x50);\n        if (iVar10 == 0) goto code_r0x0043dd60;\n        arg2 = arg2 + 1;\n    }\n    else {\n        auStack120[0] = *(iVar11 + 0x5c);\n        iVar10 = *(arg2 + -0x18);\n        pcStack160 = *(iVar11 + 0x38);\n        uStack200 = *(iVar11 + 0x40);\n    }\n    if ((arg2 < arg2 + iVar10) && (puVar14 = arg2,  (*(*(iVar9 + 0x30) + *arg2 * 2) & 8) != 0)) {\n        do {\n            puVar14 = puVar14 + 1;\n            if (puVar14 == arg2 + iVar10) break;\n        } while ((*(*(iVar9 + 0x30) + *puVar14 * 2) & 8) != 0);\n        iVar9 = puVar14 - arg2;\n        if (iVar9 != 0) {\n            aiStack104[0] = fcn.004472c0(0, 0);\n            fcn.004488f0(aiStack104, iVar9 * 2);\n            iVar16 = *(iVar11 + 0x58);\n            iVar17 = iVar9 - iVar16;\n            if (0 < iVar17) {\n                if (iVar16 < 0) {\n                    iVar17 = iVar9;\n                }\n                if (*(iVar11 + 0x18) == 0) {\n                    fcn.00447f40(aiStack104, arg2, iVar17);\n                    iVar16 = *(iVar11 + 0x58);\n                }\n                else {\n                    fcn.00447630(aiStack104, 0, *(aiStack104[0] + -0x18), iVar17 * 2);\n                    cVar3 = *(iVar11 + 0x22);\n                    uVar12 = *(iVar11 + 0x18);\n                    arg3_00 = *(iVar11 + 0x10);\n                    if (-1 < *(aiStack104[0] + -8)) {\n                        fcn.00447290(aiStack104);\n                    }\n                    iVar10 = fcn.00464020(aiStack104[0], cVar3, arg3_00, uVar12);\n                    if (-1 < *(aiStack104[0] + -8)) {\n                        fcn.00447290(aiStack104);\n                    }\n                    uVar13 = iVar10 - aiStack104[0];\n                    if (*(aiStack104[0] + -0x18) < uVar13) {\n                        uVar12 = fcn.004655e0(0x480822);\n                        do {\n                            fcn.004477b0(aiStack104[0] + -0x18);\n                            uVar12 = fcn.0040ca50(uVar12);\n                        } while( true );\n                    }\n                    fcn.004489d0(aiStack104, uVar13, *(aiStack104[0] + -0x18) - uVar13, 0);\n                    iVar16 = *(iVar11 + 0x58);\n                }\n            }\n            if (0 < iVar16) {\n                fcn.00448b10(aiStack104, *(iVar11 + 0x21));\n                if (iVar17 < 0) {\n                    fcn.00447e00(aiStack104, -iVar17);\n                    fcn.00447b80(aiStack104, arg2, iVar9);\n                }\n                else {\n                    fcn.00447b80(aiStack104, arg2 + iVar17, *(iVar11 + 0x58));\n                }\n            }\n            iVar9 = 0;\n            uVar7 = *(arg4 + 0x18) & 0xb0;\n            if ((*(arg4 + 0x18) & 0x200) != 0) {\n                iVar9 = *(iVar11 + 0x30);\n            }\n            uVar13 = uStack200 + *(aiStack104[0] + -0x18) + iVar9;\n            aiStack88[0] = fcn.004472c0(0, 0);\n            fcn.004488f0(aiStack88, uVar13 * 2);\n            uVar6 = *(arg4 + 0x10);\n            iVar16 = 1;\n            puVar15 = auStack120;\n            bVar8 = uVar13 < uVar6 && uVar7 == 0x10;\n            do {\n                if (4 < *puVar15) goto code_r0x0043de20;\n    // switch table (5 cases) at 0x48084c\n                switch(*puVar15) {\n                case 0:\n                    if (bVar8) {\ncode_r0x0043ddeb:\n                        fcn.00447e00(aiStack88, uVar6 - uVar13);\n                    }\n                    break;\n                case 1:\n                    if (bVar8) goto code_r0x0043ddeb;\n                    fcn.00448b10(aiStack88, in_stack_00000028);\n                    break;\n                case 2:\n                    if ((*(arg4 + 0x19) & 2) != 0) {\n                        fcn.00447b80(aiStack88, *(iVar11 + 0x28), *(iVar11 + 0x30));\n                    }\n                    break;\n                case 3:\n                    if (uStack200 != 0) {\n                        fcn.00448b10(aiStack88, *pcStack160);\n                        break;\n                    }\n                    if (iVar16 != 4) goto code_r0x0043de2a;\n                    goto code_r0x0043dcb4;\n                case 4:\n                    fcn.00447c80(aiStack88, aiStack104);\n                }\ncode_r0x0043de20:\n                if (iVar16 == 4) goto code_r0x0043dc90;\ncode_r0x0043de2a:\n                puVar15 = puVar15 + 1;\n                iVar16 = iVar16 + 1;\n            } while( true );\n        }\n    }\n    goto code_r0x0043dd60;\ncode_r0x0043dc90:\n    if (1 < uStack200) {\n        fcn.00447b80(aiStack88, pcStack160 + 1, uStack200 - 1);\n    }\ncode_r0x0043dcb4:\n    uVar13 = *(aiStack88[0] + -0x18);\n    if (uVar13 < uVar6) {\n        if (uVar7 == 0x20) {\n            fcn.00447e00(aiStack88, uVar6 - uVar13);\n            uVar13 = uVar6;\n        }\n        else {\n            fcn.00447630(aiStack88, 0, 0, uVar6 - uVar13);\n            uVar13 = uVar6;\n        }\n    }\n    if ((uStack216 == '\\0') && (iVar11 = (**(*piVar4 + 0x60))(piVar4, aiStack88[0], uVar13),  uVar13 != iVar11)) {\n        uStack216 = 1;\n    }\n    LOCK();\n    piVar1 = aiStack88[0] + -8;\n    iVar16 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar16 < 1) {\n        fcn.004477a0(aiStack88[0] + -0x18);\n    }\n    LOCK();\n    piVar1 = aiStack104[0] + -8;\n    iVar16 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar16 < 1) {\n        fcn.004477a0(aiStack104[0] + -0x18);\n    }\ncode_r0x0043dd60:\n    *(arg4 + 0x10) = 0;\n    *arg1 = piVar4;\n    arg1[1] = piVar5 & 0xffffffffffffff00 | uStack216;\n    return arg1;\n}\n",
        "token_count": 2670
    },
    "0043e0e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t ** fcn.0043e0e0(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t arg4)\n\n{\n    int32_t *piVar1;\n    int64_t *piVar2;\n    char cVar3;\n    int64_t *piVar4;\n    int64_t *piVar5;\n    ulong arg3_00;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    bool bVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    int64_t iVar11;\n    ulong *arg1_00;\n    ulong uVar12;\n    uint64_t uVar13;\n    uint8_t *puVar14;\n    uint *puVar15;\n    int32_t iVar16;\n    uint8_t *arg2;\n    int32_t iVar17;\n    char in_stack_00000028;\n    uint8_t **in_stack_00000030;\n    uint64_t uStack216;\n    uint64_t uStack200;\n    char *pcStack160;\n    uint auStack120 [4];\n    int64_t aiStack104 [2];\n    int64_t aiStack88 [3];\n    \n    piVar4 = *arg3;\n    piVar5 = arg3[1];\n    uStack216 = piVar5 & 0xff;\n    iVar9 = fcn.00467260(arg4 + 0xd0);\n    iVar10 = fcn.00425c30(0x47f0c0);\n    piVar2 = *(*(arg4 + 0xd0) + 0x18) + iVar10 * 8;\n    iVar11 = *piVar2;\n    if (iVar11 == 0) {\n        arg1_00 = fcn.004696a0(0x70);\n        *(arg1_00 + 1) = 0;\n        arg1_00[2] = 0;\n        arg1_00[3] = 0;\n        *arg1_00 = 0x489050;\n        *(arg1_00 + 4) = 0;\n        *(arg1_00 + 0x21) = 0;\n        *(arg1_00 + 0x22) = 0;\n        arg1_00[5] = 0;\n        arg1_00[6] = 0;\n        arg1_00[7] = 0;\n        arg1_00[8] = 0;\n        arg1_00[9] = 0;\n        arg1_00[10] = 0;\n        *(arg1_00 + 0xb) = 0;\n        *(arg1_00 + 0x5c) = 0;\n        *(arg1_00 + 0x5d) = 0;\n        *(arg1_00 + 0x5e) = 0;\n        *(arg1_00 + 0x5f) = 0;\n        *(arg1_00 + 0xc) = 0;\n        *(arg1_00 + 0x61) = 0;\n        *(arg1_00 + 0x62) = 0;\n        *(arg1_00 + 99) = 0;\n        *(arg1_00 + 0x6f) = 0;\n        fcn.0045c770(arg1_00, arg4 + 0xd0);\n        fcn.0045e9d0(*(arg4 + 0xd0), arg1_00, iVar10);\n        iVar11 = *piVar2;\n    }\n    arg2 = *in_stack_00000030;\n    if (*arg2 == *(iVar11 + 100)) {\n        auStack120[0] = *(iVar11 + 0x60);\n        iVar10 = *(arg2 + -0x18);\n        pcStack160 = *(iVar11 + 0x48);\n        uStack200 = *(iVar11 + 0x50);\n        if (iVar10 == 0) goto code_r0x0043e4c0;\n        arg2 = arg2 + 1;\n    }\n    else {\n        auStack120[0] = *(iVar11 + 0x5c);\n        iVar10 = *(arg2 + -0x18);\n        pcStack160 = *(iVar11 + 0x38);\n        uStack200 = *(iVar11 + 0x40);\n    }\n    if ((arg2 < arg2 + iVar10) && (puVar14 = arg2,  (*(*(iVar9 + 0x30) + *arg2 * 2) & 8) != 0)) {\n        do {\n            puVar14 = puVar14 + 1;\n            if (puVar14 == arg2 + iVar10) break;\n        } while ((*(*(iVar9 + 0x30) + *puVar14 * 2) & 8) != 0);\n        iVar9 = puVar14 - arg2;\n        if (iVar9 != 0) {\n            aiStack104[0] = fcn.004472c0(0, 0);\n            fcn.004488f0(aiStack104, iVar9 * 2);\n            iVar16 = *(iVar11 + 0x58);\n            iVar17 = iVar9 - iVar16;\n            if (0 < iVar17) {\n                if (iVar16 < 0) {\n                    iVar17 = iVar9;\n                }\n                if (*(iVar11 + 0x18) == 0) {\n                    fcn.00447f40(aiStack104, arg2, iVar17);\n                    iVar16 = *(iVar11 + 0x58);\n                }\n                else {\n                    fcn.00447630(aiStack104, 0, *(aiStack104[0] + -0x18), iVar17 * 2);\n                    cVar3 = *(iVar11 + 0x22);\n                    uVar12 = *(iVar11 + 0x18);\n                    arg3_00 = *(iVar11 + 0x10);\n                    if (-1 < *(aiStack104[0] + -8)) {\n                        fcn.00447290(aiStack104);\n                    }\n                    iVar10 = fcn.00464020(aiStack104[0], cVar3, arg3_00, uVar12);\n                    if (-1 < *(aiStack104[0] + -8)) {\n                        fcn.00447290(aiStack104);\n                    }\n                    uVar13 = iVar10 - aiStack104[0];\n                    if (*(aiStack104[0] + -0x18) < uVar13) {\n                        uVar12 = fcn.004655e0(0x480822);\n                        do {\n                            fcn.004477b0(aiStack104[0] + -0x18);\n                            uVar12 = fcn.0040ca50(uVar12);\n                        } while( true );\n                    }\n                    fcn.004489d0(aiStack104, uVar13, *(aiStack104[0] + -0x18) - uVar13, 0);\n                    iVar16 = *(iVar11 + 0x58);\n                }\n            }\n            if (0 < iVar16) {\n                fcn.00448b10(aiStack104, *(iVar11 + 0x21));\n                if (iVar17 < 0) {\n                    fcn.00447e00(aiStack104, -iVar17);\n                    fcn.00447b80(aiStack104, arg2, iVar9);\n                }\n                else {\n                    fcn.00447b80(aiStack104, arg2 + iVar17, *(iVar11 + 0x58));\n                }\n            }\n            iVar9 = 0;\n            uVar7 = *(arg4 + 0x18) & 0xb0;\n            if ((*(arg4 + 0x18) & 0x200) != 0) {\n                iVar9 = *(iVar11 + 0x30);\n            }\n            uVar13 = uStack200 + *(aiStack104[0] + -0x18) + iVar9;\n            aiStack88[0] = fcn.004472c0(0, 0);\n            fcn.004488f0(aiStack88, uVar13 * 2);\n            uVar6 = *(arg4 + 0x10);\n            iVar16 = 1;\n            puVar15 = auStack120;\n            bVar8 = uVar13 < uVar6 && uVar7 == 0x10;\n            do {\n                if (4 < *puVar15) goto code_r0x0043e580;\n    // switch table (5 cases) at 0x480838\n                switch(*puVar15) {\n                case 0:\n                    if (bVar8) {\ncode_r0x0043e54b:\n                        fcn.00447e00(aiStack88, uVar6 - uVar13);\n                    }\n                    break;\n                case 1:\n                    if (bVar8) goto code_r0x0043e54b;\n                    fcn.00448b10(aiStack88, in_stack_00000028);\n                    break;\n                case 2:\n                    if ((*(arg4 + 0x19) & 2) != 0) {\n                        fcn.00447b80(aiStack88, *(iVar11 + 0x28), *(iVar11 + 0x30));\n                    }\n                    break;\n                case 3:\n                    if (uStack200 != 0) {\n                        fcn.00448b10(aiStack88, *pcStack160);\n                        break;\n                    }\n                    if (iVar16 != 4) goto code_r0x0043e58a;\n                    goto code_r0x0043e414;\n                case 4:\n                    fcn.00447c80(aiStack88, aiStack104);\n                }\ncode_r0x0043e580:\n                if (iVar16 == 4) goto code_r0x0043e3f0;\ncode_r0x0043e58a:\n                puVar15 = puVar15 + 1;\n                iVar16 = iVar16 + 1;\n            } while( true );\n        }\n    }\n    goto code_r0x0043e4c0;\ncode_r0x0043e3f0:\n    if (1 < uStack200) {\n        fcn.00447b80(aiStack88, pcStack160 + 1, uStack200 - 1);\n    }\ncode_r0x0043e414:\n    uVar13 = *(aiStack88[0] + -0x18);\n    if (uVar13 < uVar6) {\n        if (uVar7 == 0x20) {\n            fcn.00447e00(aiStack88, uVar6 - uVar13);\n            uVar13 = uVar6;\n        }\n        else {\n            fcn.00447630(aiStack88, 0, 0, uVar6 - uVar13);\n            uVar13 = uVar6;\n        }\n    }\n    if ((uStack216 == '\\0') && (iVar11 = (**(*piVar4 + 0x60))(piVar4, aiStack88[0], uVar13),  uVar13 != iVar11)) {\n        uStack216 = 1;\n    }\n    LOCK();\n    piVar1 = aiStack88[0] + -8;\n    iVar16 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar16 < 1) {\n        fcn.004477a0(aiStack88[0] + -0x18);\n    }\n    LOCK();\n    piVar1 = aiStack104[0] + -8;\n    iVar16 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar16 < 1) {\n        fcn.004477a0(aiStack104[0] + -0x18);\n    }\ncode_r0x0043e4c0:\n    *(arg4 + 0x10) = 0;\n    *arg1 = piVar4;\n    arg1[1] = piVar5 & 0xffffffffffffff00 | uStack216;\n    return arg1;\n}\n",
        "token_count": 2681
    },
    "0043eb60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t ** fcn.0043eb60(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t arg4)\n\n{\n    int32_t *piVar1;\n    uint64_t uVar2;\n    int64_t *piVar3;\n    uint16_t uVar4;\n    ushort uVar5;\n    int64_t *piVar6;\n    int64_t *piVar7;\n    ulong arg3_00;\n    uint32_t uVar8;\n    bool bVar9;\n    int64_t *piVar10;\n    int64_t iVar11;\n    int64_t iVar12;\n    int64_t iVar13;\n    ulong *arg1_00;\n    ulong uVar14;\n    uint64_t uVar15;\n    int16_t *arg2;\n    uint *puVar16;\n    int32_t iVar17;\n    int32_t iVar18;\n    uint64_t uVar19;\n    ushort in_stack_00000028;\n    int16_t **in_stack_00000030;\n    uint64_t uStack216;\n    uint64_t uStack192;\n    ushort *puStack176;\n    uint8_t uStack167;\n    uint auStack120 [4];\n    int64_t aiStack104 [2];\n    int64_t aiStack88 [3];\n    \n    piVar6 = *arg3;\n    piVar7 = arg3[1];\n    uStack167 = piVar7;\n    piVar10 = fcn.004672c0(arg4 + 0xd0);\n    iVar11 = fcn.00425c30(0x47f0d0);\n    piVar3 = *(*(arg4 + 0xd0) + 0x18) + iVar11 * 8;\n    iVar13 = *piVar3;\n    if (iVar13 == 0) {\n        arg1_00 = fcn.004696a0(0x80);\n        *(arg1_00 + 1) = 0;\n        arg1_00[2] = 0;\n        *arg1_00 = 0x489070;\n        arg1_00[3] = 0;\n        *(arg1_00 + 4) = 0;\n        *(arg1_00 + 0x22) = 0;\n        *(arg1_00 + 0x24) = 0;\n        arg1_00[5] = 0;\n        arg1_00[6] = 0;\n        arg1_00[7] = 0;\n        arg1_00[8] = 0;\n        arg1_00[9] = 0;\n        arg1_00[10] = 0;\n        *(arg1_00 + 0xb) = 0;\n        *(arg1_00 + 0x5c) = 0;\n        *(arg1_00 + 0x5d) = 0;\n        *(arg1_00 + 0x5e) = 0;\n        *(arg1_00 + 0x5f) = 0;\n        *(arg1_00 + 0xc) = 0;\n        *(arg1_00 + 0x61) = 0;\n        *(arg1_00 + 0x62) = 0;\n        *(arg1_00 + 99) = 0;\n        *(arg1_00 + 0x7a) = 0;\n        fcn.0045ce90(arg1_00, arg4 + 0xd0);\n        fcn.0045e9d0(*(arg4 + 0xd0), arg1_00, iVar11);\n        iVar13 = *piVar3;\n    }\n    arg2 = *in_stack_00000030;\n    if (*arg2 == *(iVar13 + 100)) {\n        auStack120[0] = *(iVar13 + 0x60);\n        puStack176 = *(iVar13 + 0x48);\n        uStack216 = *(iVar13 + 0x50);\n        if (*(arg2 + -0xc) != 0) {\n            arg2 = arg2 + 1;\n        }\n    }\n    else {\n        auStack120[0] = *(iVar13 + 0x5c);\n        puStack176 = *(iVar13 + 0x38);\n        uStack216 = *(iVar13 + 0x40);\n    }\n    iVar11 = (**(*piVar10 + 0x28))(piVar10, 8, arg2);\n    iVar11 = iVar11 - arg2 >> 1;\n    if (iVar11 != 0) {\n        aiStack104[0] = fcn.0043fcb0(0, 0);\n        fcn.00441420(aiStack104, iVar11 * 2);\n        iVar17 = *(iVar13 + 0x58);\n        iVar18 = iVar11 - iVar17;\n        if (0 < iVar18) {\n            if (iVar17 < 0) {\n                iVar18 = iVar11;\n            }\n            if (*(iVar13 + 0x18) == 0) {\n                fcn.004409b0(aiStack104, arg2, iVar18);\n                iVar17 = *(iVar13 + 0x58);\n            }\n            else {\n                fcn.00440040(aiStack104, 0, *(aiStack104[0] + -0x18), iVar18 * 2);\n                uVar4 = *(iVar13 + 0x24);\n                uVar14 = *(iVar13 + 0x18);\n                arg3_00 = *(iVar13 + 0x10);\n                if (-1 < *(aiStack104[0] + -8)) {\n                    fcn.0043fc70(aiStack104);\n                }\n                iVar12 = fcn.00464180(aiStack104[0], uVar4, arg3_00, uVar14);\n                if (-1 < *(aiStack104[0] + -8)) {\n                    fcn.0043fc70(aiStack104);\n                }\n                uVar15 = iVar12 - aiStack104[0] >> 1;\n                if (*(aiStack104[0] + -0x18) < uVar15) {\n                    uVar14 = fcn.004655e0(0x480682);\n                    do {\n                        fcn.004401d0(aiStack104[0] + -0x18);\n                        uVar14 = fcn.0040ca50(uVar14);\n                        fcn.004401d0(aiStack88[0] + -0x18);\n                    } while( true );\n                }\n                fcn.00441510(aiStack104, uVar15, *(aiStack104[0] + -0x18) - uVar15, 0);\n                iVar17 = *(iVar13 + 0x58);\n            }\n        }\n        if (0 < iVar17) {\n            uVar5 = *(iVar13 + 0x22);\n            iVar12 = *(aiStack104[0] + -0x18);\n            uVar15 = iVar12 + 1;\n            if ((*(aiStack104[0] + -0x10) <= uVar15 && uVar15 != *(aiStack104[0] + -0x10)) ||\n               (0 < *(aiStack104[0] + -8))) {\n                fcn.00441420(aiStack104, uVar15);\n                iVar12 = *(aiStack104[0] + -0x18);\n            }\n            *(aiStack104[0] + iVar12 * 2) = uVar5;\n            *(aiStack104[0] + -8) = 0;\n            *(aiStack104[0] + -0x18) = uVar15;\n            *(aiStack104[0] + uVar15 * 2) = 0;\n            if (iVar18 < 0) {\n                fcn.00440870(aiStack104, -iVar18);\n                fcn.004405d0(aiStack104, arg2, iVar11);\n            }\n            else {\n                fcn.004405d0(aiStack104, arg2 + iVar18, *(iVar13 + 0x58));\n            }\n        }\n        iVar11 = 0;\n        uVar8 = *(arg4 + 0x18) & 0xb0;\n        if ((*(arg4 + 0x18) & 0x200) != 0) {\n            iVar11 = *(iVar13 + 0x30);\n        }\n        uVar19 = iVar11 + uStack216 + *(aiStack104[0] + -0x18);\n        aiStack88[0] = fcn.0043fcb0(0, 0);\n        fcn.00441420(aiStack88, uVar19 * 2);\n        uVar15 = *(arg4 + 0x10);\n        puVar16 = auStack120;\n        iVar17 = 1;\n        bVar9 = uVar19 < uVar15 && uVar8 == 0x10;\ncode_r0x0043eebe:\n        if (4 < *puVar16) goto code_r0x0043f092;\n    // switch table (5 cases) at 0x4806ac\n        switch(*puVar16) {\n        case 0:\n            if (bVar9) {\ncode_r0x0043f067:\n                fcn.00440870(aiStack88, uVar15 - uVar19);\n            }\n            break;\n        case 1:\n            if (bVar9) goto code_r0x0043f067;\n            iVar11 = *(aiStack88[0] + -0x18);\n            uVar2 = iVar11 + 1;\n            if ((*(aiStack88[0] + -0x10) <= uVar2 && uVar2 != *(aiStack88[0] + -0x10)) || (0 < *(aiStack88[0] + -8))) {\n                fcn.00441420(aiStack88, uVar2);\n                iVar11 = *(aiStack88[0] + -0x18);\n            }\n            *(aiStack88[0] + iVar11 * 2) = in_stack_00000028;\n            *(aiStack88[0] + -8) = 0;\n            *(aiStack88[0] + -0x18) = uVar2;\n            *(aiStack88[0] + uVar2 * 2) = 0;\n            if (iVar17 != 4) goto code_r0x0043f09c;\ncode_r0x0043ef80:\n            if (1 < uStack216) {\n                fcn.004405d0(aiStack88, puStack176 + 1, uStack216 - 1);\n            }\ncode_r0x0043efa4:\n            uStack192 = *(aiStack88[0] + -0x18);\n            if (uStack192 < uVar15) {\n                if (uVar8 == 0x20) {\n                    fcn.00440870(aiStack88, uVar15 - uStack192);\n                    uStack192 = uVar15;\n                }\n                else {\n                    fcn.00440040(aiStack88, 0, 0, uVar15 - uStack192);\n                    uStack192 = uVar15;\n                }\n            }\n            if ((uStack167 == 0) &&\n               (iVar13 = (**(*piVar6 + 0x60))(piVar6, aiStack88[0], uStack192),  uStack192 != iVar13)) {\n                uStack167 = 1;\n            }\n            LOCK();\n            piVar1 = aiStack88[0] + -8;\n            iVar17 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar17 < 1) {\n                fcn.004401c0(aiStack88[0] + -0x18);\n            }\n            LOCK();\n            piVar1 = aiStack104[0] + -8;\n            iVar17 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar17 < 1) {\n                fcn.004401c0(aiStack104[0] + -0x18);\n            }\n            goto code_r0x0043ec30;\n        case 2:\n            if ((*(arg4 + 0x19) & 2) != 0) {\n                fcn.004405d0(aiStack88, *(iVar13 + 0x28), *(iVar13 + 0x30));\n            }\n            break;\n        case 3:\n            if (uStack216 != 0) {\n                uVar5 = *puStack176;\n                iVar11 = *(aiStack88[0] + -0x18);\n                uVar2 = iVar11 + 1;\n                if ((*(aiStack88[0] + -0x10) <= uVar2 && uVar2 != *(aiStack88[0] + -0x10)) || (0 < *(aiStack88[0] + -8))\n                   ) {\n                    fcn.00441420(aiStack88, uVar2);\n                    iVar11 = *(aiStack88[0] + -0x18);\n                }\n                *(aiStack88[0] + iVar11 * 2) = uVar5;\n                *(aiStack88[0] + -8) = 0;\n                *(aiStack88[0] + -0x18) = uVar2;\n                *(aiStack88[0] + uVar2 * 2) = 0;\n                break;\n            }\n            if (iVar17 != 4) goto code_r0x0043f09c;\n            goto code_r0x0043efa4;\n        case 4:\n            fcn.004406e0(aiStack88, aiStack104);\n        }\ncode_r0x0043f092:\n        if (iVar17 == 4) goto code_r0x0043ef80;\ncode_r0x0043f09c:\n        puVar16 = puVar16 + 1;\n        iVar17 = iVar17 + 1;\n        goto code_r0x0043eebe;\n    }\ncode_r0x0043ec30:\n    *(arg4 + 0x10) = 0;\n    *arg1 = piVar6;\n    arg1[1] = piVar7 & 0xffffffffffffff00 | uStack167;\n    return arg1;\n}\n",
        "token_count": 3174
    },
    "0043f380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t ** fcn.0043f380(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t arg4)\n\n{\n    int32_t *piVar1;\n    uint64_t uVar2;\n    int64_t *piVar3;\n    uint16_t uVar4;\n    ushort uVar5;\n    int64_t *piVar6;\n    int64_t *piVar7;\n    ulong arg3_00;\n    uint32_t uVar8;\n    bool bVar9;\n    int64_t *piVar10;\n    int64_t iVar11;\n    int64_t iVar12;\n    int64_t iVar13;\n    ulong *arg1_00;\n    ulong uVar14;\n    uint64_t uVar15;\n    int16_t *arg2;\n    uint *puVar16;\n    int32_t iVar17;\n    int32_t iVar18;\n    uint64_t uVar19;\n    ushort in_stack_00000028;\n    int16_t **in_stack_00000030;\n    uint64_t uStack216;\n    uint64_t uStack192;\n    ushort *puStack176;\n    uint8_t uStack167;\n    uint auStack120 [4];\n    int64_t aiStack104 [2];\n    int64_t aiStack88 [3];\n    \n    piVar6 = *arg3;\n    piVar7 = arg3[1];\n    uStack167 = piVar7;\n    piVar10 = fcn.004672c0(arg4 + 0xd0);\n    iVar11 = fcn.00425c30(0x47f0e0);\n    piVar3 = *(*(arg4 + 0xd0) + 0x18) + iVar11 * 8;\n    iVar13 = *piVar3;\n    if (iVar13 == 0) {\n        arg1_00 = fcn.004696a0(0x80);\n        *(arg1_00 + 1) = 0;\n        arg1_00[2] = 0;\n        *arg1_00 = 0x489090;\n        arg1_00[3] = 0;\n        *(arg1_00 + 4) = 0;\n        *(arg1_00 + 0x22) = 0;\n        *(arg1_00 + 0x24) = 0;\n        arg1_00[5] = 0;\n        arg1_00[6] = 0;\n        arg1_00[7] = 0;\n        arg1_00[8] = 0;\n        arg1_00[9] = 0;\n        arg1_00[10] = 0;\n        *(arg1_00 + 0xb) = 0;\n        *(arg1_00 + 0x5c) = 0;\n        *(arg1_00 + 0x5d) = 0;\n        *(arg1_00 + 0x5e) = 0;\n        *(arg1_00 + 0x5f) = 0;\n        *(arg1_00 + 0xc) = 0;\n        *(arg1_00 + 0x61) = 0;\n        *(arg1_00 + 0x62) = 0;\n        *(arg1_00 + 99) = 0;\n        *(arg1_00 + 0x7a) = 0;\n        fcn.0045d5d0(arg1_00, arg4 + 0xd0);\n        fcn.0045e9d0(*(arg4 + 0xd0), arg1_00, iVar11);\n        iVar13 = *piVar3;\n    }\n    arg2 = *in_stack_00000030;\n    if (*arg2 == *(iVar13 + 100)) {\n        auStack120[0] = *(iVar13 + 0x60);\n        puStack176 = *(iVar13 + 0x48);\n        uStack216 = *(iVar13 + 0x50);\n        if (*(arg2 + -0xc) != 0) {\n            arg2 = arg2 + 1;\n        }\n    }\n    else {\n        auStack120[0] = *(iVar13 + 0x5c);\n        puStack176 = *(iVar13 + 0x38);\n        uStack216 = *(iVar13 + 0x40);\n    }\n    iVar11 = (**(*piVar10 + 0x28))(piVar10, 8, arg2);\n    iVar11 = iVar11 - arg2 >> 1;\n    if (iVar11 != 0) {\n        aiStack104[0] = fcn.0043fcb0(0, 0);\n        fcn.00441420(aiStack104, iVar11 * 2);\n        iVar17 = *(iVar13 + 0x58);\n        iVar18 = iVar11 - iVar17;\n        if (0 < iVar18) {\n            if (iVar17 < 0) {\n                iVar18 = iVar11;\n            }\n            if (*(iVar13 + 0x18) == 0) {\n                fcn.004409b0(aiStack104, arg2, iVar18);\n                iVar17 = *(iVar13 + 0x58);\n            }\n            else {\n                fcn.00440040(aiStack104, 0, *(aiStack104[0] + -0x18), iVar18 * 2);\n                uVar4 = *(iVar13 + 0x24);\n                uVar14 = *(iVar13 + 0x18);\n                arg3_00 = *(iVar13 + 0x10);\n                if (-1 < *(aiStack104[0] + -8)) {\n                    fcn.0043fc70(aiStack104);\n                }\n                iVar12 = fcn.00464180(aiStack104[0], uVar4, arg3_00, uVar14);\n                if (-1 < *(aiStack104[0] + -8)) {\n                    fcn.0043fc70(aiStack104);\n                }\n                uVar15 = iVar12 - aiStack104[0] >> 1;\n                if (*(aiStack104[0] + -0x18) < uVar15) {\n                    uVar14 = fcn.004655e0(0x480682);\n                    do {\n                        fcn.004401d0(aiStack104[0] + -0x18);\n                        uVar14 = fcn.0040ca50(uVar14);\n                        fcn.004401d0(aiStack88[0] + -0x18);\n                    } while( true );\n                }\n                fcn.00441510(aiStack104, uVar15, *(aiStack104[0] + -0x18) - uVar15, 0);\n                iVar17 = *(iVar13 + 0x58);\n            }\n        }\n        if (0 < iVar17) {\n            uVar5 = *(iVar13 + 0x22);\n            iVar12 = *(aiStack104[0] + -0x18);\n            uVar15 = iVar12 + 1;\n            if ((*(aiStack104[0] + -0x10) <= uVar15 && uVar15 != *(aiStack104[0] + -0x10)) ||\n               (0 < *(aiStack104[0] + -8))) {\n                fcn.00441420(aiStack104, uVar15);\n                iVar12 = *(aiStack104[0] + -0x18);\n            }\n            *(aiStack104[0] + iVar12 * 2) = uVar5;\n            *(aiStack104[0] + -8) = 0;\n            *(aiStack104[0] + -0x18) = uVar15;\n            *(aiStack104[0] + uVar15 * 2) = 0;\n            if (iVar18 < 0) {\n                fcn.00440870(aiStack104, -iVar18);\n                fcn.004405d0(aiStack104, arg2, iVar11);\n            }\n            else {\n                fcn.004405d0(aiStack104, arg2 + iVar18, *(iVar13 + 0x58));\n            }\n        }\n        iVar11 = 0;\n        uVar8 = *(arg4 + 0x18) & 0xb0;\n        if ((*(arg4 + 0x18) & 0x200) != 0) {\n            iVar11 = *(iVar13 + 0x30);\n        }\n        uVar19 = iVar11 + uStack216 + *(aiStack104[0] + -0x18);\n        aiStack88[0] = fcn.0043fcb0(0, 0);\n        fcn.00441420(aiStack88, uVar19 * 2);\n        uVar15 = *(arg4 + 0x10);\n        puVar16 = auStack120;\n        iVar17 = 1;\n        bVar9 = uVar19 < uVar15 && uVar8 == 0x10;\ncode_r0x0043f6de:\n        if (4 < *puVar16) goto code_r0x0043f8b2;\n    // switch table (5 cases) at 0x480698\n        switch(*puVar16) {\n        case 0:\n            if (bVar9) {\ncode_r0x0043f887:\n                fcn.00440870(aiStack88, uVar15 - uVar19);\n            }\n            break;\n        case 1:\n            if (bVar9) goto code_r0x0043f887;\n            iVar11 = *(aiStack88[0] + -0x18);\n            uVar2 = iVar11 + 1;\n            if ((*(aiStack88[0] + -0x10) <= uVar2 && uVar2 != *(aiStack88[0] + -0x10)) || (0 < *(aiStack88[0] + -8))) {\n                fcn.00441420(aiStack88, uVar2);\n                iVar11 = *(aiStack88[0] + -0x18);\n            }\n            *(aiStack88[0] + iVar11 * 2) = in_stack_00000028;\n            *(aiStack88[0] + -8) = 0;\n            *(aiStack88[0] + -0x18) = uVar2;\n            *(aiStack88[0] + uVar2 * 2) = 0;\n            if (iVar17 != 4) goto code_r0x0043f8bc;\ncode_r0x0043f7a0:\n            if (1 < uStack216) {\n                fcn.004405d0(aiStack88, puStack176 + 1, uStack216 - 1);\n            }\ncode_r0x0043f7c4:\n            uStack192 = *(aiStack88[0] + -0x18);\n            if (uStack192 < uVar15) {\n                if (uVar8 == 0x20) {\n                    fcn.00440870(aiStack88, uVar15 - uStack192);\n                    uStack192 = uVar15;\n                }\n                else {\n                    fcn.00440040(aiStack88, 0, 0, uVar15 - uStack192);\n                    uStack192 = uVar15;\n                }\n            }\n            if ((uStack167 == 0) &&\n               (iVar13 = (**(*piVar6 + 0x60))(piVar6, aiStack88[0], uStack192),  uStack192 != iVar13)) {\n                uStack167 = 1;\n            }\n            LOCK();\n            piVar1 = aiStack88[0] + -8;\n            iVar17 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar17 < 1) {\n                fcn.004401c0(aiStack88[0] + -0x18);\n            }\n            LOCK();\n            piVar1 = aiStack104[0] + -8;\n            iVar17 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar17 < 1) {\n                fcn.004401c0(aiStack104[0] + -0x18);\n            }\n            goto code_r0x0043f450;\n        case 2:\n            if ((*(arg4 + 0x19) & 2) != 0) {\n                fcn.004405d0(aiStack88, *(iVar13 + 0x28), *(iVar13 + 0x30));\n            }\n            break;\n        case 3:\n            if (uStack216 != 0) {\n                uVar5 = *puStack176;\n                iVar11 = *(aiStack88[0] + -0x18);\n                uVar2 = iVar11 + 1;\n                if ((*(aiStack88[0] + -0x10) <= uVar2 && uVar2 != *(aiStack88[0] + -0x10)) || (0 < *(aiStack88[0] + -8))\n                   ) {\n                    fcn.00441420(aiStack88, uVar2);\n                    iVar11 = *(aiStack88[0] + -0x18);\n                }\n                *(aiStack88[0] + iVar11 * 2) = uVar5;\n                *(aiStack88[0] + -8) = 0;\n                *(aiStack88[0] + -0x18) = uVar2;\n                *(aiStack88[0] + uVar2 * 2) = 0;\n                break;\n            }\n            if (iVar17 != 4) goto code_r0x0043f8bc;\n            goto code_r0x0043f7c4;\n        case 4:\n            fcn.004406e0(aiStack88, aiStack104);\n        }\ncode_r0x0043f8b2:\n        if (iVar17 == 4) goto code_r0x0043f7a0;\ncode_r0x0043f8bc:\n        puVar16 = puVar16 + 1;\n        iVar17 = iVar17 + 1;\n        goto code_r0x0043f6de;\n    }\ncode_r0x0043f450:\n    *(arg4 + 0x10) = 0;\n    *arg1 = piVar6;\n    arg1[1] = piVar7 & 0xffffffffffffff00 | uStack167;\n    return arg1;\n}\n",
        "token_count": 3189
    },
    "0043fcb0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043fcb0(int64_t arg1, ulong arg2)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    \n    piVar1 = fcn.00440300(arg1, 0);\n    if (arg1 != 0) {\n        piVar2 = piVar1 + 3;\n        iVar3 = arg1;\n        if (arg1 == 1) {\n            *(piVar1 + 3) = arg2;\n        }\n        else {\n            do {\n                *piVar2 = arg2;\n                piVar2 = piVar2 + 2;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    *(piVar1 + 2) = 0;\n    *piVar1 = arg1;\n    *(piVar1 + 3 + arg1 * 2) = 0;\n    return;\n}\n",
        "token_count": 214
    },
    "0043fd20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t * fcn.0043fd20(ushort *arg1, int64_t arg2)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    int64_t arg1_00;\n    int64_t iVar3;\n    \n    arg1_00 = arg2 - arg1 >> 1;\n    piVar1 = fcn.00440300(arg1_00, 0);\n    piVar2 = piVar1 + 3;\n    if (arg1_00 == 1) {\n        iVar3 = 2;\n        *(piVar1 + 3) = *arg1;\n    }\n    else {\n        iVar3 = arg1_00 * 2;\n        piVar2 = sub.msvcrt.dll_memcpy(piVar2, arg1, iVar3);\n    }\n    *(piVar1 + 2) = 0;\n    *piVar1 = arg1_00;\n    *(piVar1 + iVar3 + 0x18) = 0;\n    return piVar2;\n}\n",
        "token_count": 228
    },
    "0043fd90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t * fcn.0043fd90(ushort *arg1, int64_t arg2)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    int64_t arg1_00;\n    int64_t iVar3;\n    \n    if (arg1 == NULL) {\n        if (arg2 != 0) {\n            fcn.00465290(0x4805f0);\n        }\n        arg1_00 = 0;\n        piVar1 = fcn.00440300(0, 0);\n        piVar2 = piVar1 + 3;\n    }\n    else {\n        arg1_00 = arg2 - arg1 >> 1;\n        piVar1 = fcn.00440300(arg1_00, 0);\n        piVar2 = piVar1 + 3;\n        if (arg1_00 == 1) {\n            iVar3 = 2;\n            *(piVar1 + 3) = *arg1;\n            goto code_r0x0043fdd5;\n        }\n    }\n    iVar3 = arg1_00 * 2;\n    piVar2 = sub.msvcrt.dll_memcpy(piVar2, arg1, iVar3);\ncode_r0x0043fdd5:\n    *piVar1 = arg1_00;\n    *(piVar1 + 2) = 0;\n    *(piVar2 + iVar3) = 0;\n    return piVar2;\n}\n",
        "token_count": 321
    },
    "0043fe30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t * fcn.0043fe30(ushort *arg1, int64_t arg2)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    int64_t arg1_00;\n    int64_t iVar3;\n    \n    if (arg1 == NULL) {\n        if (arg2 != 0) {\n            fcn.00465290(0x480650);\n        }\n        arg1_00 = 0;\n        piVar1 = fcn.00440300(0, 0);\n        piVar2 = piVar1 + 3;\n    }\n    else {\n        arg1_00 = arg2 - arg1 >> 1;\n        piVar1 = fcn.00440300(arg1_00, 0);\n        piVar2 = piVar1 + 3;\n        if (arg1_00 == 1) {\n            iVar3 = 2;\n            *(piVar1 + 3) = *arg1;\n            goto code_r0x0043fe75;\n        }\n    }\n    iVar3 = arg1_00 * 2;\n    piVar2 = sub.msvcrt.dll_memcpy(piVar2, arg1, iVar3);\ncode_r0x0043fe75:\n    *(piVar1 + 2) = 0;\n    *piVar1 = arg1_00;\n    *(piVar2 + iVar3) = 0;\n    return piVar2;\n}\n",
        "token_count": 317
    },
    "0043fed0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t * fcn.0043fed0(ushort *arg1, int64_t arg2)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    int64_t arg1_00;\n    int64_t iVar3;\n    \n    if (arg1 == NULL) {\n        if (arg2 != 0) {\n            fcn.00465290(0x4805f0);\n        }\n        arg1_00 = 0;\n        piVar1 = fcn.00440300(0, 0);\n        piVar2 = piVar1 + 3;\n    }\n    else {\n        arg1_00 = arg2 - arg1 >> 1;\n        piVar1 = fcn.00440300(arg1_00, 0);\n        piVar2 = piVar1 + 3;\n        if (arg1_00 == 1) {\n            iVar3 = 2;\n            *(piVar1 + 3) = *arg1;\n            goto code_r0x0043ff15;\n        }\n    }\n    iVar3 = arg1_00 * 2;\n    piVar2 = sub.msvcrt.dll_memcpy(piVar2, arg1, iVar3);\ncode_r0x0043ff15:\n    *(piVar1 + 2) = 0;\n    *piVar1 = arg1_00;\n    *(piVar2 + iVar3) = 0;\n    return piVar2;\n}\n",
        "token_count": 319
    },
    "00440040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t * fcn.00440040(int64_t *arg1, int64_t arg2, int64_t arg3, ushort *arg4)\n\n{\n    int64_t *arg1_00;\n    ushort *puVar1;\n    int64_t arg2_00;\n    int64_t unaff_RSI;\n    ushort in_stack_00000028;\n    \n    arg2_00 = *arg1;\n    if ((0x1ffffffffffffffc - *(arg2_00 + -0x18)) + arg3 < arg4) {\n        arg1_00 = 0x480566;\n        fcn.00465550(0x480566);\n        fcn.00441510(arg1_00, arg2_00, arg3, unaff_RSI);\n        if (unaff_RSI != 0) {\n            puVar1 = *arg1_00 + arg2_00 * 2;\n            if (unaff_RSI == 1) {\n                *puVar1 = *arg4;\n                return arg1_00;\n            }\n            sub.msvcrt.dll_memcpy(puVar1, arg4, unaff_RSI * 2);\n        }\n        return arg1_00;\n    }\n    fcn.00441510(arg1, arg2, arg3, arg4);\n    if (arg4 != NULL) {\n        puVar1 = *arg1 + arg2 * 2;\n        if (arg4 == 0x1) {\n            *puVar1 = in_stack_00000028;\n            return arg1;\n        }\n        do {\n            *puVar1 = in_stack_00000028;\n            puVar1 = puVar1 + 1;\n            arg4 = arg4 + -1;\n        } while (arg4 != NULL);\n    }\n    return arg1;\n}\n",
        "token_count": 396
    },
    "004400d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t * fcn.004400d0(int64_t *arg1, int64_t arg2, ulong arg3, ushort *arg4)\n\n{\n    ushort *puVar1;\n    int64_t in_stack_00000028;\n    \n    fcn.00441510(arg1, arg2, arg3, in_stack_00000028);\n    if (in_stack_00000028 != 0) {\n        puVar1 = *arg1 + arg2 * 2;\n        if (in_stack_00000028 == 1) {\n            *puVar1 = *arg4;\n            return arg1;\n        }\n        sub.msvcrt.dll_memcpy(puVar1, arg4, in_stack_00000028 * 2);\n    }\n    return arg1;\n}\n",
        "token_count": 170
    },
    "00440280": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00440280(int64_t *arg1, ulong arg2, int64_t arg3)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    \n    piVar2 = fcn.00440300(arg3 + *arg1, arg1[1]);\n    iVar1 = *arg1;\n    iVar4 = 0;\n    piVar3 = piVar2 + 3;\n    if (iVar1 != 0) {\n        piVar3 = piVar2 + 3;\n        if (iVar1 == 1) {\n            iVar4 = 1;\n            *(piVar2 + 3) = *(arg1 + 3);\n        }\n        else {\n            piVar3 = sub.msvcrt.dll_memcpy(piVar3, arg1 + 3, iVar1 * 2);\n            iVar4 = *arg1;\n        }\n    }\n    *(piVar2 + 2) = 0;\n    *piVar2 = iVar4;\n    *(piVar3 + iVar4 * 2) = 0;\n    return;\n}\n",
        "token_count": 251
    },
    "00441510": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00441510(int64_t *arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n\n{\n    int32_t *piVar1;\n    ushort *puVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint64_t arg1_00;\n    int64_t iVar5;\n    ushort *puVar6;\n    \n    iVar4 = *arg1;\n    arg1_00 = (arg4 - arg3) + *(iVar4 + -0x18);\n    iVar5 = (*(iVar4 + -0x18) - arg2) - arg3;\n    if ((*(iVar4 + -0x10) < arg1_00) || (0 < *(iVar4 + -8))) {\n        iVar4 = fcn.00440300(arg1_00, *(iVar4 + -0x10));\n        if (arg2 == 0) {\n            puVar6 = *arg1;\n        }\n        else {\n            puVar6 = *arg1;\n            if (arg2 == 1) {\n                *(iVar4 + 0x18) = *puVar6;\n            }\n            else {\n                sub.msvcrt.dll_memcpy(iVar4 + 0x18, puVar6, arg2 * 2);\n                puVar6 = *arg1;\n            }\n        }\n        iVar4 = iVar4 + 0x18;\n        if (iVar5 != 0) {\n            puVar2 = iVar4 + (arg2 + arg4) * 2;\n            if (iVar5 == 1) {\n                *puVar2 = puVar6[arg3 + arg2];\n            }\n            else {\n                sub.msvcrt.dll_memcpy(puVar2, puVar6 + arg3 + arg2, iVar5 * 2);\n                puVar6 = *arg1;\n            }\n        }\n        LOCK();\n        piVar1 = puVar6 + -4;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar3 < 1) {\n            fcn.00469650(puVar6 + -0xc);\n        }\n        *arg1 = iVar4;\n    }\n    else if ((arg3 != arg4) && (iVar5 != 0)) {\n        puVar6 = iVar4 + (arg3 + arg2) * 2;\n        puVar2 = iVar4 + (arg2 + arg4) * 2;\n        if (iVar5 == 1) {\n            *puVar2 = *puVar6;\n        }\n        else {\n            sub.msvcrt.dll_memmove(puVar2, puVar6, iVar5 * 2);\n            iVar4 = *arg1;\n        }\n    }\n    *(iVar4 + -8) = 0;\n    *(iVar4 + -0x18) = arg1_00;\n    *(iVar4 + arg1_00 * 2) = 0;\n    return;\n}\n",
        "token_count": 652
    },
    "004405f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t * fcn.004405f0(ulong *arg1, ulong *arg2, uint64_t n)\n\n{\n    uint64_t uVar1;\n    ushort *puVar2;\n    ulong *puVar3;\n    ushort *puVar4;\n    int64_t *arg1_00;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    \n    puVar3 = *arg1;\n    iVar6 = puVar3[-3];\n    if (0x1ffffffffffffffcU - iVar6 < n) {\n        arg1_00 = 0x4805c3;\n        fcn.00465550(0x4805c3);\n        puVar4 = *arg2;\n        iVar6 = *(puVar4 + -0xc);\n        if (iVar6 != 0) {\n            iVar7 = *arg1_00;\n            iVar5 = *(iVar7 + -0x18);\n            uVar1 = iVar5 + iVar6;\n            if ((*(iVar7 + -0x10) <= uVar1 && uVar1 != *(iVar7 + -0x10)) || (0 < *(iVar7 + -8))) {\n                fcn.00441420(arg1_00, uVar1);\n                iVar7 = *arg1_00;\n                puVar4 = *arg2;\n                iVar5 = *(iVar7 + -0x18);\n            }\n            puVar2 = iVar7 + iVar5 * 2;\n            if (iVar6 == 1) {\n                *puVar2 = *puVar4;\n            }\n            else {\n                sub.msvcrt.dll_memcpy(puVar2, puVar4, iVar6 * 2);\n                iVar7 = *arg1_00;\n            }\n            *(iVar7 + -8) = 0;\n            *(iVar7 + -0x18) = uVar1;\n            *(iVar7 + uVar1 * 2) = 0;\n        }\n        return arg1_00;\n    }\n    uVar1 = n + iVar6;\n    if ((puVar3[-2] <= uVar1 && uVar1 != puVar3[-2]) || (0 < *(puVar3 + -1))) {\n        if ((puVar3 <= arg2) && (arg2 <= puVar3 + iVar6 * 2)) {\n            iVar6 = arg2 - puVar3;\n            fcn.00441420(arg1, uVar1);\n            puVar3 = *arg1;\n            arg2 = puVar3 + (iVar6 >> 1) * 2;\n            puVar4 = puVar3 + puVar3[-3] * 2;\n            goto joined_r0x0044064d;\n        }\n        fcn.00441420(arg1, uVar1);\n        puVar3 = *arg1;\n        iVar6 = puVar3[-3];\n    }\n    puVar4 = puVar3 + iVar6 * 2;\njoined_r0x0044064d:\n    if (n == 1) {\n        *puVar4 = *arg2;\n    }\n    else {\n        sub.msvcrt.dll_memcpy(puVar4, arg2, n * 2);\n        puVar3 = *arg1;\n    }\n    *(puVar3 + -1) = 0;\n    puVar3[-3] = uVar1;\n    *(puVar3 + uVar1 * 2) = 0;\n    return NULL;\n}\n",
        "token_count": 760
    },
    "004406e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t * fcn.004406e0(int64_t *arg1, ulong *arg2)\n\n{\n    uint64_t arg2_00;\n    ushort *puVar1;\n    int64_t iVar2;\n    ushort *puVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    puVar3 = *arg2;\n    iVar2 = *(puVar3 + -0xc);\n    if (iVar2 != 0) {\n        iVar5 = *arg1;\n        iVar4 = *(iVar5 + -0x18);\n        arg2_00 = iVar4 + iVar2;\n        if ((*(iVar5 + -0x10) <= arg2_00 && arg2_00 != *(iVar5 + -0x10)) || (0 < *(iVar5 + -8))) {\n            fcn.00441420(arg1, arg2_00);\n            iVar5 = *arg1;\n            puVar3 = *arg2;\n            iVar4 = *(iVar5 + -0x18);\n        }\n        puVar1 = iVar5 + iVar4 * 2;\n        if (iVar2 == 1) {\n            *puVar1 = *puVar3;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(puVar1, puVar3, iVar2 * 2);\n            iVar5 = *arg1;\n        }\n        *(iVar5 + -8) = 0;\n        *(iVar5 + -0x18) = arg2_00;\n        *(iVar5 + arg2_00 * 2) = 0;\n    }\n    return arg1;\n}\n",
        "token_count": 351
    },
    "00440890": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t * fcn.00440890(int64_t *arg1, int64_t *arg2, ulong arg3)\n\n{\n    uint64_t arg2_00;\n    int64_t iVar1;\n    ushort *puVar2;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    \n    iVar5 = *arg1;\n    iVar1 = *(iVar5 + -0x18);\n    piVar4 = 0x1ffffffffffffffc - iVar1;\n    if (arg2 <= piVar4) {\n        arg2_00 = arg2 + iVar1;\n        if ((*(iVar5 + -0x10) <= arg2_00 && arg2_00 != *(iVar5 + -0x10)) || (0 < *(iVar5 + -8))) {\n            fcn.00441420(arg1, arg2_00);\n            iVar5 = *arg1;\n            iVar1 = *(iVar5 + -0x18);\n        }\n        puVar2 = iVar5 + iVar1 * 2;\n        if (arg2 == 0x1) {\n            *puVar2 = arg3;\n        }\n        else if (arg2 != NULL) {\n            do {\n                *puVar2 = arg3;\n                puVar2 = puVar2 + 1;\n                arg2 = arg2 + -1;\n            } while (arg2 != NULL);\n        }\n        *(iVar5 + -8) = 0;\n        *(iVar5 + -0x18) = arg2_00;\n        *(iVar5 + arg2_00 * 2) = 0;\n        return NULL;\n    }\n    piVar3 = 0x4805c3;\n    fcn.00465550(0x4805c3);\n    iVar5 = *piVar3;\n    if (*(iVar5 + -8) < 0) {\n        *(iVar5 + -8) = 0;\n    }\n    iVar1 = *piVar4;\n    if (*(iVar1 + -8) < 0) {\n        *(iVar1 + -8) = 0;\n    }\n    *piVar3 = iVar1;\n    *piVar4 = iVar5;\n    return piVar3;\n}\n",
        "token_count": 491
    },
    "004409b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t ** fcn.004409b0(int64_t **arg1, int64_t **arg2, int64_t *arg3)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    int64_t **ppiVar4;\n    int64_t *piVar5;\n    int64_t iVar6;\n    uchar auStack97 [9];\n    int64_t *piStack88;\n    int64_t **ppiStack80;\n    int64_t *piStack40;\n    \n    ppiVar4 = *arg1;\n    if (0x1ffffffffffffffc < arg3) {\n        ppiVar4 = 0x4805ae;\n        ppiStack80 = 0x440a96;\n        fcn.00465550(0x4805ae);\n        piVar5 = *arg2;\n        if (piVar5 + -3 != *ppiVar4 + -3) {\n            piStack88 = arg3;\n            ppiStack80 = arg1;\n            if (*(piVar5 + -1) < 0) {\n                piVar5 = fcn.00440280(piVar5 + -3, &stack0xffffffffffffff9f, 0);\n            }\n            else {\n                LOCK();\n                *(piVar5 + -1) = *(piVar5 + -1) + 1;\n            }\n            piVar3 = *ppiVar4;\n            LOCK();\n            piVar1 = piVar3 + -1;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar2 < 1) {\n                fcn.00469650(piVar3 + -3);\n            }\n            *ppiVar4 = piVar5;\n        }\n        return ppiVar4;\n    }\n    if (((arg2 < ppiVar4) || (ppiVar4 + ppiVar4[-3] * 2 < arg2)) || (0 < *(ppiVar4 + -1))) {\n        ppiStack80 = 0x4409ee;\n        piStack40 = arg3;\n        ppiVar4 = fcn.004400d0(arg1, 0, ppiVar4[-3], arg2);\n        return ppiVar4;\n    }\n    piVar5 = arg2 - ppiVar4 >> 1;\n    if (piVar5 < arg3) {\n        if (piVar5 == NULL) {\n            iVar6 = arg3 * 2;\n            goto code_r0x00440a36;\n        }\n        if (arg3 != 0x1) {\n            iVar6 = arg3 * 2;\n            ppiStack80 = 0x440a85;\n            sub.msvcrt.dll_memmove(ppiVar4, arg2, iVar6);\n            ppiVar4 = *arg1;\n            goto code_r0x00440a36;\n        }\n    }\n    else if (arg3 != 0x1) {\n        iVar6 = arg3 * 2;\n        ppiStack80 = 0x440a33;\n        sub.msvcrt.dll_memcpy(ppiVar4, arg2, iVar6);\n        ppiVar4 = *arg1;\n        goto code_r0x00440a36;\n    }\n    iVar6 = 2;\n    *ppiVar4 = *arg2;\ncode_r0x00440a36:\n    *(ppiVar4 + -1) = 0;\n    ppiVar4[-3] = arg3;\n    *(ppiVar4 + iVar6) = 0;\n    return arg1;\n}\n",
        "token_count": 788
    },
    "00440ee0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t * fcn.00440ee0(int64_t **arg1, int64_t *arg2)\n\n{\n    int64_t *piVar1;\n    ushort *puVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    ushort *puVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    int64_t *piVar8;\n    uint16_t *puVar9;\n    int64_t *piVar10;\n    uint64_t uVar11;\n    int64_t iVar12;\n    int64_t in_R8;\n    \n    piVar8 = (*arg1)[-3];\n    if (0x1ffffffffffffffc < arg2) {\n        puVar9 = 0x4805d8;\n        fcn.00465550(0x4805d8);\n        if (in_R8 != 1) {\n    // WARNING: Could not recover jumptable at 0x00416d40. Too many branches\n    // WARNING: Treating indirect jump as call\n            piVar8 = (*_sym.imp.msvcrt.dll_memcpy)();\n            return piVar8;\n        }\n        uVar3 = *arg2;\n        *puVar9 = uVar3;\n        return uVar3;\n    }\n    if (piVar8 < arg2) {\n        arg2 = arg2 - piVar8;\n        if (arg2 != NULL) {\n            piVar8 = *arg1;\n            iVar6 = piVar8[-3];\n            piVar10 = 0x1ffffffffffffffc - iVar6;\n            if (arg2 <= piVar10) {\n                uVar11 = arg2 + iVar6;\n                if ((piVar8[-2] <= uVar11 && uVar11 != piVar8[-2]) || (0 < *(piVar8 + -1))) {\n                    fcn.00441420(arg1, uVar11);\n                    piVar8 = *arg1;\n                    iVar6 = piVar8[-3];\n                }\n                puVar5 = piVar8 + iVar6 * 2;\n                if (arg2 == 0x1) {\n                    *puVar5 = in_R8;\n                }\n                else {\n                    for (; arg2 != NULL; arg2 = arg2 + -1) {\n                        *puVar5 = in_R8;\n                        puVar5 = puVar5 + 1;\n                    }\n                }\n                *(piVar8 + -1) = 0;\n                piVar8[-3] = uVar11;\n                *(piVar8 + uVar11 * 2) = 0;\n                return NULL;\n            }\n            piVar8 = 0x4805c3;\n            fcn.00465550(0x4805c3);\n            iVar6 = *piVar8;\n            if (*(iVar6 + -8) < 0) {\n                *(iVar6 + -8) = 0;\n            }\n            iVar12 = *piVar10;\n            if (*(iVar12 + -8) < 0) {\n                *(iVar12 + -8) = 0;\n            }\n            *piVar8 = iVar12;\n            *piVar10 = iVar6;\n            return piVar8;\n        }\n    }\n    else if (arg2 < piVar8) {\n        iVar6 = piVar8 - arg2;\n        piVar8 = *arg1;\n        uVar11 = piVar8[-3] - iVar6;\n        iVar12 = (piVar8[-3] - arg2) - iVar6;\n        if ((piVar8[-2] < uVar11) || (0 < *(piVar8 + -1))) {\n            iVar7 = fcn.00440300(uVar11, piVar8[-2]);\n            if (arg2 == NULL) {\n                piVar10 = *arg1;\n            }\n            else {\n                piVar10 = *arg1;\n                if (arg2 == 0x1) {\n                    *(iVar7 + 0x18) = *piVar10;\n                }\n                else {\n                    sub.msvcrt.dll_memcpy(iVar7 + 0x18, piVar10, arg2 * 2);\n                    piVar10 = *arg1;\n                }\n            }\n            piVar8 = iVar7 + 0x18;\n            if (iVar12 != 0) {\n                puVar5 = piVar10 + (iVar6 + arg2) * 2;\n                puVar2 = piVar8 + arg2 * 2;\n                if (iVar12 == 1) {\n                    *puVar2 = *puVar5;\n                }\n                else {\n                    sub.msvcrt.dll_memcpy(puVar2, puVar5, iVar12 * 2);\n                    piVar10 = *arg1;\n                }\n            }\n            LOCK();\n            piVar1 = piVar10 + -1;\n            iVar4 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar4 < 1) {\n                fcn.00469650(piVar10 + -3);\n            }\n            *arg1 = piVar8;\n        }\n        else if ((iVar6 != 0) && (iVar12 != 0)) {\n            puVar5 = piVar8 + (iVar6 + arg2) * 2;\n            puVar2 = piVar8 + arg2 * 2;\n            if (iVar12 == 1) {\n                *puVar2 = *puVar5;\n            }\n            else {\n                sub.msvcrt.dll_memmove(puVar2, puVar5, iVar12 * 2);\n                piVar8 = *arg1;\n            }\n        }\n        *(piVar8 + -1) = 0;\n        piVar8[-3] = uVar11;\n        *(piVar8 + uVar11 * 2) = 0;\n        return piVar8;\n    }\n    return piVar8;\n}\n",
        "token_count": 1286
    },
    "004411b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t * fcn.004411b0(uint64_t *arg1, uint64_t arg2, uint64_t arg3, ulong *arg4)\n\n{\n    ushort *puVar1;\n    ushort *puVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    ulong *puVar5;\n    uint64_t uVar6;\n    uint64_t *puVar7;\n    ulong arg1_00;\n    uint64_t arg3_00;\n    int64_t unaff_R12;\n    ulong unaff_R13;\n    int64_t iVar8;\n    uint64_t in_stack_00000028;\n    \n    puVar5 = *arg1;\n    uVar6 = puVar5[-3];\n    if (arg2 <= uVar6) {\n        arg3_00 = uVar6 - arg2;\n        if (arg3 < uVar6 - arg2) {\n            arg3_00 = arg3;\n        }\n        arg3 = (0x1ffffffffffffffc - uVar6) + arg3_00;\n        if (in_stack_00000028 <= arg3) {\n            if (((arg4 < puVar5) || (puVar5 + uVar6 * 2 < arg4)) || (0 < *(puVar5 + -1))) {\n                puVar7 = fcn.004400d0(arg1, arg2, arg3_00, arg4);\n                return puVar7;\n            }\n            uVar6 = arg4 + in_stack_00000028 * 2;\n            if (puVar5 + arg2 * 2 < uVar6) {\n                if (arg4 < puVar5 + (arg3_00 + arg2) * 2) {\n                    iVar8 = fcn.0043fd90(arg4, uVar6);\n                    puVar7 = fcn.004400d0(arg1, arg2, arg3_00, iVar8);\n                    LOCK();\n                    piVar3 = iVar8 + -8;\n                    iVar4 = *piVar3;\n                    *piVar3 = *piVar3 + -1;\n                    if (0 < iVar4) {\n                        return puVar7;\n                    }\n                    fcn.00469650(iVar8 + -0x18);\n                    return puVar7;\n                }\n                iVar8 = ((arg4 - puVar5 >> 1) + in_stack_00000028) - arg3_00;\n            }\n            else {\n                iVar8 = arg4 - puVar5 >> 1;\n            }\n            fcn.00441510(arg1, arg2, arg3_00, in_stack_00000028);\n            puVar1 = *arg1 + iVar8 * 2;\n            puVar2 = *arg1 + arg2 * 2;\n            if (in_stack_00000028 != 1) {\n                sub.msvcrt.dll_memcpy(puVar2, puVar1, in_stack_00000028 * 2);\n                return arg1;\n            }\n            *puVar2 = *puVar1;\n            return arg1;\n        }\n        fcn.00465550(0x480598);\n    }\n    arg1_00 = fcn.004655e0(0x480598);\n    fcn.004401d0(unaff_R12 + -0x18);\n    fcn.0040ca50(arg1_00);\n    puVar7 = fcn.004411b0(arg1_00, unaff_R13, arg3, *arg4);\n    return puVar7;\n}\n",
        "token_count": 773
    },
    "00443ec0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.00443ec0(int64_t *arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    char cStack9;\n    \n    arg1[1] = 0;\n    fcn.004444a0(&cStack9, arg1, 1);\n    if (cStack9 == '\\0') {\n        return arg1;\n    }\n    iVar2 = *(arg1 + *(*arg1 + -0x18) + 0xe8);\n    if (*(iVar2 + 0x10) < *(iVar2 + 0x18)) {\n        *(iVar2 + 0x10) = *(iVar2 + 0x10) + 1;\n    }\n    else {\n        iVar1 = fcn.0046a4f0(iVar2);\n        if (iVar1 == -1) {\n            iVar2 = arg1 + *(*arg1 + -0x18);\n            fcn.00462d30(iVar2, *(iVar2 + 0x20) | 2);\n            return arg1;\n        }\n    }\n    arg1[1] = 1;\n    return arg1;\n}\n",
        "token_count": 255
    },
    "00443fc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t * fcn.00443fc0(int64_t *arg1, int64_t arg2)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    uint8_t *puVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    uint8_t *puVar6;\n    int64_t iVar7;\n    char cStack41;\n    \n    if (arg2 == 1) {\n        piVar4 = fcn.00443ec0(arg1);\n        return piVar4;\n    }\n    arg1[1] = 0;\n    fcn.004444a0(&cStack41, arg1, 1);\n    if ((arg2 < 1) || (cStack41 == '\\0')) {\n        return arg1;\n    }\n    piVar4 = *(arg1 + *(*arg1 + -0x18) + 0xe8);\n    if (piVar4[2] < piVar4[3]) {\n        uVar2 = *piVar4[2];\n    }\n    else {\n        uVar2 = (**(*piVar4 + 0x48))(piVar4);\n    }\n    iVar5 = arg1[1];\n    bVar1 = false;\njoined_r0x00444043:\n    while (arg2 <= iVar5) {\n        if ((arg2 != 0x7fffffffffffffff) || (uVar2 == 0xffffffff)) goto code_r0x00444090;\n        bVar1 = true;\n        arg1[1] = -0x8000000000000000;\n        iVar5 = -0x8000000000000000;\n    }\n    if (uVar2 == 0xffffffff) {\ncode_r0x00444090:\n        if (bVar1) {\n            arg1[1] = 0x7fffffffffffffff;\n        }\n        if (uVar2 != 0xffffffff) {\n            return arg1;\n        }\n        iVar5 = arg1 + *(*arg1 + -0x18);\n        fcn.00462d30(iVar5, *(iVar5 + 0x20) | 2);\n        return arg1;\n    }\n    puVar3 = piVar4[3];\n    puVar6 = piVar4[2];\n    iVar7 = arg2 - iVar5;\n    if (puVar3 - puVar6 < arg2 - iVar5) {\n        iVar7 = puVar3 - puVar6;\n    }\n    if (iVar7 < 2) {\n        arg1[1] = iVar5 + 1;\n        if (puVar6 < puVar3) {\n            puVar6 = puVar6 + 1;\n            piVar4[2] = puVar6;\ncode_r0x004440f5:\n            if (puVar3 <= puVar6) goto code_r0x0044413a;\n            uVar2 = *puVar6;\n        }\n        else {\n            uVar2 = (**(*piVar4 + 0x50))(piVar4);\n            if (uVar2 != 0xffffffff) {\n                puVar6 = piVar4[2];\n                puVar3 = piVar4[3];\n                goto code_r0x004440f5;\n            }\n        }\n    }\n    else {\n        puVar6 = puVar6 + iVar7;\n        iVar5 = iVar5 + iVar7;\n        piVar4[2] = puVar6;\n        arg1[1] = iVar5;\n        if (puVar6 < puVar3) {\n            uVar2 = *puVar6;\n            goto joined_r0x00444043;\n        }\ncode_r0x0044413a:\n        uVar2 = (**(*piVar4 + 0x48))(piVar4);\n    }\n    iVar5 = arg1[1];\n    goto joined_r0x00444043;\n}\n",
        "token_count": 844
    },
    "00462d30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar * fcn.00462d30(int64_t arg1, uint64_t arg2)\n\n{\n    int64_t *piVar1;\n    char *in_RAX;\n    char *arg1_00;\n    ulong in_R8;\n    uchar auStack96 [16];\n    \n    if (*(arg1 + 0xe8) == 0) {\n        arg2 = arg2 | 1;\n    }\n    *(arg1 + 0x20) = arg2;\n    if ((*(arg1 + 0x1c) & arg2) == 0) {\n        return in_RAX;\n    }\n    arg1_00 = \"basic_ios::clear\";\n    fcn.00465210(\"basic_ios::clear\");\n    fcn.004603c0(arg1_00, arg2 + 0xd0);\n    fcn.00461bd0(auStack96, arg2, in_R8);\n    fcn.00460470(auStack96);\n    fcn.00462bb0(arg2, in_R8);\n    piVar1 = *(arg2 + 0xe8);\n    if (piVar1 != NULL) {\n        fcn.004603c0(auStack96, piVar1 + 7);\n        (**(*piVar1 + 0x10))(piVar1, in_R8);\n        fcn.004604a0(piVar1 + 7, in_R8);\n        fcn.00460470(auStack96);\n    }\n    return arg1_00;\n}\n",
        "token_count": 332
    },
    "004454a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.004454a0(int64_t *arg1, ulong arg2)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    char acStack40 [8];\n    int64_t *piStack32;\n    \n    fcn.00445a90(acStack40, arg1);\n    if (acStack40[0] != '\\0') {\n        iVar4 = *(arg1 + *(*arg1 + -0x18) + 0xe8);\n        if (*(iVar4 + 0x28) < *(iVar4 + 0x30)) {\n            **(iVar4 + 0x28) = arg2;\n            *(iVar4 + 0x28) = *(iVar4 + 0x28) + 1;\n        }\n        else {\n            iVar3 = fcn.0046a4d0(iVar4);\n            if (iVar3 == -1) {\n                iVar4 = arg1 + *(*arg1 + -0x18);\n                fcn.00462d30(iVar4, *(iVar4 + 0x20) | 1);\n            }\n        }\n    }\n    piVar1 = piStack32;\n    iVar4 = *(*piStack32 + -0x18);\n    if ((*(piStack32 + iVar4 + 0x19) & 0x20) != 0) {\n        cVar2 = fcn.004651f0();\n        if ((cVar2 == '\\0') && (piVar1 = *(piVar1 + iVar4 + 0xe8),  piVar1 != NULL)) {\n            iVar3 = (**(*piVar1 + 0x30))();\n            if (iVar3 == -1) {\n                iVar4 = piStack32 + *(*piStack32 + -0x18);\n                fcn.00462d30(iVar4, *(iVar4 + 0x20) | 1);\n                return arg1;\n            }\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 449
    },
    "004462d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.004462d0(int64_t *arg1)\n\n{\n    uint32_t *puVar1;\n    unkbyte10 Var2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    char cVar5;\n    int32_t iVar6;\n    ulong uVar7;\n    unkbyte10 *in_RDX;\n    int64_t *piVar8;\n    int64_t iVar9;\n    unkbyte10 Stack104;\n    int64_t iStack88;\n    uint64_t uStack80;\n    uchar auStack72 [8];\n    char cStack64;\n    char acStack56 [8];\n    int64_t *piStack48;\n    \n    Var2 = *in_RDX;\n    piVar8 = arg1;\n    fcn.00445a90(acStack56, arg1);\n    if (acStack56[0] == '\\0') goto code_r0x004463bf;\n    iVar9 = arg1 + *(*arg1 + -0x18);\n    piVar3 = *(iVar9 + 0xf8);\n    if (piVar3 == NULL) {\n        uVar7 = fcn.00464f90();\n        if (piVar8 == 0x1) {\n            fcn.00469950(uVar7);\n            arg1 = arg1 + *(*arg1 + -0x18);\n            *(arg1 + 4) = *(arg1 + 4) | 1;\n            if ((*(arg1 + 0x1c) & 1) != 0) {\n                fcn.0046a200();\n                goto code_r0x00446485;\n            }\n            fcn.0046a200();\n        }\n        fcn.00469950(uVar7);\n        iVar9 = *(*arg1 + -0x18);\n        puVar1 = arg1 + iVar9 + 0x20;\n        *puVar1 = *puVar1 | 1;\n        if ((*(arg1 + iVar9 + 0x1c) & 1) != 0) {\n            uVar7 = fcn.0046a200();\n            fcn.00469b80();\ncode_r0x0044648d:\n            do {\n                fcn.00445b70(acStack56);\n                uVar7 = fcn.0040ca50(uVar7);\n                fcn.00469b80();\n            } while( true );\n        }\n        fcn.00469b80();\n    }\n    else {\n        if (*(iVar9 + 0xe1) == '\\0') {\n            piVar8 = *(iVar9 + 0xf0);\n            if (piVar8 == NULL) {\ncode_r0x00446485:\n                uVar7 = fcn.00464f90();\n                goto code_r0x0044648d;\n            }\n            if (*(piVar8 + 7) == '\\0') {\n                fcn.00425590(piVar8);\n                cVar5 = (**(*piVar8 + 0x30))(piVar8, 0x20);\n            }\n            else {\n                cVar5 = *(piVar8 + 0x59);\n            }\n            *(iVar9 + 0xe0) = cVar5;\n            iVar4 = *arg1;\n            *(iVar9 + 0xe1) = 1;\n            iVar9 = arg1 + *(iVar4 + -0x18);\n        }\n        else {\n            cVar5 = *(iVar9 + 0xe0);\n        }\n        iStack88 = *(iVar9 + 0xe8);\n        uStack80 = iStack88 == 0;\n        Stack104 = Var2;\n        (**(*piVar3 + 0x40))(auStack72, piVar3, &iStack88, iVar9, cVar5, &Stack104);\n        if (cStack64 != '\\0') {\n            iVar9 = arg1 + *(*arg1 + -0x18);\n            fcn.00462d30(iVar9, *(iVar9 + 0x20) | 1);\n        }\n    }\ncode_r0x004463bf:\n    piVar8 = piStack48;\n    iVar9 = *(*piStack48 + -0x18);\n    if ((*(piStack48 + iVar9 + 0x19) & 0x20) != 0) {\n        cVar5 = fcn.004651f0();\n        if ((cVar5 == '\\0') && (piVar8 = *(piVar8 + iVar9 + 0xe8),  piVar8 != NULL)) {\n            iVar6 = (**(*piVar8 + 0x30))();\n            if (iVar6 == -1) {\n                iVar9 = piStack48 + *(*piStack48 + -0x18);\n                fcn.00462d30(iVar9, *(iVar9 + 0x20) | 1);\n                return arg1;\n            }\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 1084
    },
    "004472c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004472c0(int64_t arg1, ulong arg2)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    \n    piVar1 = fcn.004478c0(arg1, 0);\n    piVar2 = piVar1 + 3;\n    if (arg1 != 0) {\n        piVar2 = piVar1 + 3;\n        if (arg1 == 1) {\n            *(piVar1 + 3) = arg2;\n        }\n        else {\n            piVar2 = sub.msvcrt.dll_memset(piVar2, arg2, arg1);\n        }\n    }\n    *(piVar1 + 2) = 0;\n    *piVar1 = arg1;\n    *(piVar2 + arg1) = 0;\n    return;\n}\n",
        "token_count": 184
    },
    "00447320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t * fcn.00447320(uchar *arg1, int64_t arg2)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    \n    arg2 = arg2 - arg1;\n    piVar1 = fcn.004478c0(arg2, 0);\n    piVar2 = piVar1 + 3;\n    if (arg2 == 1) {\n        *(piVar1 + 3) = *arg1;\n    }\n    else {\n        piVar2 = sub.msvcrt.dll_memcpy(piVar2, arg1, arg2);\n    }\n    *(piVar1 + 2) = 0;\n    *piVar1 = arg2;\n    *(piVar1 + arg2 + 0x18) = 0;\n    return piVar2;\n}\n",
        "token_count": 182
    },
    "00447380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t * fcn.00447380(uchar *arg1, int64_t arg2)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    \n    if (arg1 == NULL) {\n        if (arg2 != 0) {\n            fcn.00465290(\"basic_string::_S_construct null not valid\");\n        }\n        arg2 = 0;\n        piVar1 = fcn.004478c0(0, 0);\n        piVar2 = piVar1 + 3;\n    }\n    else {\n        arg2 = arg2 - arg1;\n        piVar1 = fcn.004478c0(arg2, 0);\n        piVar2 = piVar1 + 3;\n        if (arg2 == 1) {\n            *(piVar1 + 3) = *arg1;\n            goto code_r0x004473bd;\n        }\n    }\n    piVar2 = sub.msvcrt.dll_memcpy(piVar2, arg1, arg2);\ncode_r0x004473bd:\n    *(piVar1 + 2) = 0;\n    *piVar1 = arg2;\n    *(piVar2 + arg2) = 0;\n    return piVar2;\n}\n",
        "token_count": 272
    },
    "00447420": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t * fcn.00447420(uchar *arg1, int64_t arg2)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    \n    if (arg1 == NULL) {\n        if (arg2 != 0) {\n            fcn.00465290(0x4807f0);\n        }\n        arg2 = 0;\n        piVar1 = fcn.004478c0(0, 0);\n        piVar2 = piVar1 + 3;\n    }\n    else {\n        arg2 = arg2 - arg1;\n        piVar1 = fcn.004478c0(arg2, 0);\n        piVar2 = piVar1 + 3;\n        if (arg2 == 1) {\n            *(piVar1 + 3) = *arg1;\n            goto code_r0x0044745d;\n        }\n    }\n    piVar2 = sub.msvcrt.dll_memcpy(piVar2, arg1, arg2);\ncode_r0x0044745d:\n    *(piVar1 + 2) = 0;\n    *piVar1 = arg2;\n    *(piVar2 + arg2) = 0;\n    return piVar2;\n}\n",
        "token_count": 272
    },
    "004474c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t * fcn.004474c0(uchar *arg1, int64_t arg2)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    \n    if (arg1 == NULL) {\n        if (arg2 != 0) {\n            fcn.00465290(\"basic_string::_S_construct null not valid\");\n        }\n        arg2 = 0;\n        piVar1 = fcn.004478c0(0, 0);\n        piVar2 = piVar1 + 3;\n    }\n    else {\n        arg2 = arg2 - arg1;\n        piVar1 = fcn.004478c0(arg2, 0);\n        piVar2 = piVar1 + 3;\n        if (arg2 == 1) {\n            *(piVar1 + 3) = *arg1;\n            goto code_r0x004474fd;\n        }\n    }\n    piVar2 = sub.msvcrt.dll_memcpy(piVar2, arg1, arg2);\ncode_r0x004474fd:\n    *(piVar1 + 2) = 0;\n    *piVar1 = arg2;\n    *(piVar2 + arg2) = 0;\n    return piVar2;\n}\n",
        "token_count": 273
    },
    "00447630": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t * fcn.00447630(int64_t *arg1, int64_t arg2, int64_t arg3, uchar *arg4)\n\n{\n    char *arg1_00;\n    int64_t unaff_RBX;\n    char in_stack_00000028;\n    \n    if ((0x3ffffffffffffff9 - *(*arg1 + -0x18)) + arg3 < arg4) {\n        arg1_00 = \"basic_string::_M_replace_aux\";\n        fcn.00465550(\"basic_string::_M_replace_aux\");\n        fcn.004489d0(arg1_00, arg2, arg3, unaff_RBX);\n        if (unaff_RBX != 0) {\n            if (unaff_RBX == 1) {\n                *(arg2 + *arg1_00) = *arg4;\n                return arg1_00;\n            }\n            sub.msvcrt.dll_memcpy(arg2 + *arg1_00, arg4, unaff_RBX);\n        }\n        return arg1_00;\n    }\n    fcn.004489d0(arg1, arg2, arg3, arg4);\n    if (arg4 != NULL) {\n        if (arg4 == 0x1) {\n            *(arg2 + *arg1) = in_stack_00000028;\n            return arg1;\n        }\n        sub.msvcrt.dll_memset(arg2 + *arg1, in_stack_00000028, arg4);\n    }\n    return arg1;\n}\n",
        "token_count": 325
    },
    "004476b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t * fcn.004476b0(int64_t *arg1, int64_t arg2, ulong arg3, uchar *arg4)\n\n{\n    int64_t in_stack_00000028;\n    \n    fcn.004489d0(arg1, arg2, arg3, in_stack_00000028);\n    if (in_stack_00000028 != 0) {\n        if (in_stack_00000028 == 1) {\n            *(arg2 + *arg1) = *arg4;\n            return arg1;\n        }\n        sub.msvcrt.dll_memcpy(arg2 + *arg1, arg4, in_stack_00000028);\n    }\n    return arg1;\n}\n",
        "token_count": 152
    },
    "00447850": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00447850(int64_t *arg1, ulong arg2, int64_t arg3)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    \n    piVar1 = fcn.004478c0(arg3 + *arg1, arg1[1]);\n    iVar3 = 0;\n    piVar2 = piVar1 + 3;\n    if (*arg1 != 0) {\n        piVar2 = piVar1 + 3;\n        if (*arg1 == 1) {\n            *(piVar1 + 3) = *(arg1 + 3);\n            iVar3 = *arg1;\n        }\n        else {\n            piVar2 = sub.msvcrt.dll_memcpy(piVar2, arg1 + 3);\n            iVar3 = *arg1;\n        }\n    }\n    *(piVar1 + 2) = 0;\n    *piVar1 = iVar3;\n    *(piVar2 + iVar3) = 0;\n    return;\n}\n",
        "token_count": 229
    },
    "004489d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004489d0(int64_t *arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n\n{\n    int32_t *piVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uint64_t arg1_00;\n    int64_t iVar6;\n    \n    iVar4 = *arg1;\n    arg1_00 = (arg4 - arg3) + *(iVar4 + -0x18);\n    iVar6 = (*(iVar4 + -0x18) - arg2) - arg3;\n    if ((*(iVar4 + -0x10) < arg1_00) || (0 < *(iVar4 + -8))) {\n        iVar4 = fcn.004478c0(arg1_00, *(iVar4 + -0x10));\n        if (arg2 != 0) {\n            if (arg2 == 1) {\n                *(iVar4 + 0x18) = **arg1;\n            }\n            else {\n                sub.msvcrt.dll_memcpy(iVar4 + 0x18, *arg1, arg2);\n            }\n        }\n        iVar4 = iVar4 + 0x18;\n        if (iVar6 != 0) {\n            puVar5 = arg3 + arg2 + *arg1;\n            puVar2 = iVar4 + arg2 + arg4;\n            if (iVar6 == 1) {\n                *puVar2 = *puVar5;\n            }\n            else {\n                sub.msvcrt.dll_memcpy(puVar2, puVar5, iVar6);\n            }\n        }\n        iVar6 = *arg1;\n        LOCK();\n        piVar1 = iVar6 + -8;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar3 < 1) {\n            fcn.00469650(iVar6 + -0x18);\n        }\n        *arg1 = iVar4;\n    }\n    else if ((arg3 != arg4) && (iVar6 != 0)) {\n        puVar2 = iVar4 + arg3 + arg2;\n        puVar5 = iVar4 + arg2 + arg4;\n        if (iVar6 == 1) {\n            *puVar5 = *puVar2;\n            iVar4 = *arg1;\n        }\n        else {\n            sub.msvcrt.dll_memmove(puVar5, puVar2, iVar6);\n            iVar4 = *arg1;\n        }\n    }\n    *(iVar4 + -8) = 0;\n    *(iVar4 + -0x18) = arg1_00;\n    *(iVar4 + arg1_00) = 0;\n    return;\n}\n",
        "token_count": 605
    },
    "00447ba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t * fcn.00447ba0(int64_t *arg1, ulong *arg2, uint64_t arg3)\n\n{\n    uint64_t uVar1;\n    ulong *puVar2;\n    int64_t iVar3;\n    char *arg1_00;\n    int64_t iVar4;\n    uchar *puVar5;\n    int64_t iVar6;\n    \n    puVar2 = *arg1;\n    iVar6 = puVar2[-3];\n    if (0x3ffffffffffffff9U - iVar6 < arg3) {\n        arg1_00 = \"basic_string::append\";\n        fcn.00465550(\"basic_string::append\");\n        puVar5 = *arg2;\n        iVar6 = *(puVar5 + -0x18);\n        if (iVar6 != 0) {\n            iVar3 = *arg1_00;\n            iVar4 = *(iVar3 + -0x18);\n            uVar1 = iVar4 + iVar6;\n            if ((*(iVar3 + -0x10) <= uVar1 && uVar1 != *(iVar3 + -0x10)) || (0 < *(iVar3 + -8))) {\n                fcn.004488f0(arg1_00, uVar1);\n                iVar3 = *arg1_00;\n                puVar5 = *arg2;\n                iVar4 = *(iVar3 + -0x18);\n            }\n            if (iVar6 == 1) {\n                *(iVar4 + iVar3) = *puVar5;\n            }\n            else {\n                sub.msvcrt.dll_memcpy(iVar4 + iVar3, puVar5, iVar6);\n            }\n            iVar6 = *arg1_00;\n            *(iVar6 + -8) = 0;\n            *(iVar6 + -0x18) = uVar1;\n            *(iVar6 + uVar1) = 0;\n        }\n        return arg1_00;\n    }\n    uVar1 = arg3 + iVar6;\n    if ((puVar2[-2] <= uVar1 && uVar1 != puVar2[-2]) || (0 < *(puVar2 + -1))) {\n        if ((puVar2 <= arg2) && (arg2 <= iVar6 + puVar2)) {\n            fcn.004488f0(arg1, uVar1);\n            iVar6 = *arg1;\n            arg2 = arg2 + (iVar6 - puVar2);\n            puVar5 = iVar6 + *(iVar6 + -0x18);\n            goto joined_r0x00447c60;\n        }\n        fcn.004488f0(arg1, uVar1);\n        puVar2 = *arg1;\n        iVar6 = puVar2[-3];\n    }\n    puVar5 = puVar2 + iVar6;\njoined_r0x00447c60:\n    if (arg3 == 1) {\n        *puVar5 = *arg2;\n    }\n    else {\n        sub.msvcrt.dll_memcpy(puVar5, arg2);\n    }\n    iVar6 = *arg1;\n    *(iVar6 + -8) = 0;\n    *(iVar6 + -0x18) = uVar1;\n    *(iVar6 + uVar1) = 0;\n    return NULL;\n}\n",
        "token_count": 709
    },
    "00447c80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t * fcn.00447c80(int64_t *arg1, ulong *arg2)\n\n{\n    uint64_t arg2_00;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    \n    puVar4 = *arg2;\n    iVar1 = *(puVar4 + -0x18);\n    if (iVar1 != 0) {\n        iVar2 = *arg1;\n        iVar3 = *(iVar2 + -0x18);\n        arg2_00 = iVar3 + iVar1;\n        if ((*(iVar2 + -0x10) <= arg2_00 && arg2_00 != *(iVar2 + -0x10)) || (0 < *(iVar2 + -8))) {\n            fcn.004488f0(arg1, arg2_00);\n            iVar2 = *arg1;\n            puVar4 = *arg2;\n            iVar3 = *(iVar2 + -0x18);\n        }\n        if (iVar1 == 1) {\n            *(iVar3 + iVar2) = *puVar4;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(iVar3 + iVar2, puVar4, iVar1);\n        }\n        iVar1 = *arg1;\n        *(iVar1 + -8) = 0;\n        *(iVar1 + -0x18) = arg2_00;\n        *(iVar1 + arg2_00) = 0;\n    }\n    return arg1;\n}\n",
        "token_count": 331
    },
    "00447e20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t * fcn.00447e20(int64_t *arg1, int64_t *arg2, ulong arg3)\n\n{\n    uint64_t arg2_00;\n    int64_t iVar1;\n    int64_t iVar2;\n    char *pcVar3;\n    \n    iVar1 = *arg1;\n    iVar2 = *(iVar1 + -0x18);\n    if (arg2 <= 0x3ffffffffffffff9 - iVar2) {\n        arg2_00 = arg2 + iVar2;\n        if ((arg2_00 < *(iVar1 + -0x10) || arg2_00 == *(iVar1 + -0x10)) && (*(iVar1 + -8) < 1)) {\n            pcVar3 = iVar1 + iVar2;\n        }\n        else {\n            fcn.004488f0(arg1, arg2_00);\n            pcVar3 = *arg1 + *(*arg1 + -0x18);\n        }\n        if (arg2 == 0x1) {\n            *pcVar3 = arg3;\n        }\n        else {\n            sub.msvcrt.dll_memset(pcVar3, arg3, arg2);\n        }\n        iVar1 = *arg1;\n        *(iVar1 + -8) = 0;\n        *(iVar1 + -0x18) = arg2_00;\n        *(iVar1 + arg2_00) = 0;\n        return NULL;\n    }\n    pcVar3 = \"basic_string::append\";\n    fcn.00465550(\"basic_string::append\");\n    iVar1 = *pcVar3;\n    if (*(iVar1 + -8) < 0) {\n        *(iVar1 + -8) = 0;\n    }\n    iVar2 = *arg2;\n    if (*(iVar2 + -8) < 0) {\n        *(iVar2 + -8) = 0;\n    }\n    *pcVar3 = iVar2;\n    *arg2 = iVar1;\n    return pcVar3;\n}\n",
        "token_count": 433
    },
    "00447f40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t ** fcn.00447f40(int64_t **arg1, int64_t **arg2, int64_t *arg3)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    int64_t **ppiVar4;\n    int64_t *piVar5;\n    char *pcVar6;\n    uchar auStack97 [9];\n    int64_t *piStack88;\n    int64_t **ppiStack80;\n    int64_t *piStack40;\n    \n    ppiVar4 = *arg1;\n    if (0x3ffffffffffffff9 < arg3) {\n        pcVar6 = \"basic_string::assign\";\n        ppiStack80 = 0x448007;\n        fcn.00465550(\"basic_string::assign\");\n        piVar5 = *arg2;\n        if (piVar5 + -3 != *pcVar6 + -3) {\n            piStack88 = arg3;\n            ppiStack80 = arg1;\n            if (*(piVar5 + -1) < 0) {\n                piVar5 = fcn.00447850(piVar5 + -3, &stack0xffffffffffffff9f, 0);\n            }\n            else {\n                LOCK();\n                *(piVar5 + -1) = *(piVar5 + -1) + 1;\n            }\n            piVar3 = *pcVar6;\n            LOCK();\n            piVar1 = piVar3 + -1;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar2 < 1) {\n                fcn.00469650(piVar3 + -3);\n            }\n            *pcVar6 = piVar5;\n        }\n        return pcVar6;\n    }\n    if (((arg2 < ppiVar4) || (ppiVar4 + ppiVar4[-3] < arg2)) || (0 < *(ppiVar4 + -1))) {\n        ppiStack80 = 0x447f7d;\n        piStack40 = arg3;\n        ppiVar4 = fcn.004476b0(arg1, 0, ppiVar4[-3], arg2);\n        return ppiVar4;\n    }\n    if (arg2 - ppiVar4 < arg3) {\n        if (arg2 == ppiVar4) goto code_r0x00447fb5;\n        if (arg3 != 0x1) {\n            ppiStack80 = 0x447fe6;\n            sub.msvcrt.dll_memmove(ppiVar4, arg2, arg3);\n            ppiVar4 = *arg1;\n            goto code_r0x00447fb5;\n        }\n    }\n    else if (arg3 != 0x1) {\n        ppiStack80 = 0x447fb2;\n        sub.msvcrt.dll_memcpy(ppiVar4, arg2, arg3);\n        ppiVar4 = *arg1;\n        goto code_r0x00447fb5;\n    }\n    *ppiVar4 = *arg2;\n    ppiVar4 = *arg1;\ncode_r0x00447fb5:\n    *(ppiVar4 + -1) = 0;\n    ppiVar4[-3] = arg3;\n    *(ppiVar4 + arg3) = 0;\n    return arg1;\n}\n",
        "token_count": 740
    },
    "00448410": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t * fcn.00448410(int64_t **arg1, int64_t *arg2)\n\n{\n    int64_t *piVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int64_t *piVar5;\n    int64_t *piVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    char *pcVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    int64_t in_R8;\n    \n    piVar6 = (*arg1)[-3];\n    if (0x3ffffffffffffff9 < arg2) {\n        pcVar9 = \"basic_string::resize\";\n        fcn.00465550(\"basic_string::resize\");\n        if (in_R8 == 1) {\n            uVar3 = *arg2;\n            *pcVar9 = uVar3;\n            return uVar3;\n        }\n    // WARNING: Could not recover jumptable at 0x00416d40. Too many branches\n    // WARNING: Treating indirect jump as call\n        piVar6 = (*_sym.imp.msvcrt.dll_memcpy)();\n        return piVar6;\n    }\n    if (piVar6 < arg2) {\n        arg2 = arg2 - piVar6;\n        if (arg2 != NULL) {\n            piVar6 = *arg1;\n            iVar7 = piVar6[-3];\n            if (arg2 <= 0x3ffffffffffffff9 - iVar7) {\n                uVar10 = arg2 + iVar7;\n                if ((uVar10 < piVar6[-2] || uVar10 == piVar6[-2]) && (*(piVar6 + -1) < 1)) {\n                    pcVar9 = piVar6 + iVar7;\n                }\n                else {\n                    fcn.004488f0(arg1, uVar10);\n                    pcVar9 = *arg1 + (*arg1)[-3];\n                }\n                if (arg2 == 0x1) {\n                    *pcVar9 = in_R8;\n                }\n                else {\n                    sub.msvcrt.dll_memset(pcVar9, in_R8, arg2);\n                }\n                piVar6 = *arg1;\n                *(piVar6 + -1) = 0;\n                piVar6[-3] = uVar10;\n                *(piVar6 + uVar10) = 0;\n                return NULL;\n            }\n            pcVar9 = \"basic_string::append\";\n            fcn.00465550(\"basic_string::append\");\n            iVar7 = *pcVar9;\n            if (*(iVar7 + -8) < 0) {\n                *(iVar7 + -8) = 0;\n            }\n            iVar11 = *arg2;\n            if (*(iVar11 + -8) < 0) {\n                *(iVar11 + -8) = 0;\n            }\n            *pcVar9 = iVar11;\n            *arg2 = iVar7;\n            return pcVar9;\n        }\n    }\n    else if (arg2 < piVar6) {\n        iVar7 = piVar6 - arg2;\n        piVar6 = *arg1;\n        uVar10 = piVar6[-3] - iVar7;\n        iVar11 = (piVar6[-3] - arg2) - iVar7;\n        if ((piVar6[-2] < uVar10) || (0 < *(piVar6 + -1))) {\n            iVar8 = fcn.004478c0(uVar10, piVar6[-2]);\n            if (arg2 != NULL) {\n                if (arg2 == 0x1) {\n                    *(iVar8 + 0x18) = **arg1;\n                }\n                else {\n                    sub.msvcrt.dll_memcpy(iVar8 + 0x18, *arg1, arg2);\n                }\n            }\n            piVar6 = iVar8 + 0x18;\n            if (iVar11 != 0) {\n                if (iVar11 == 1) {\n                    *(piVar6 + arg2) = (iVar7 + arg2)[*arg1];\n                }\n                else {\n                    sub.msvcrt.dll_memcpy(piVar6 + arg2, iVar7 + arg2 + *arg1, iVar11);\n                }\n            }\n            piVar5 = *arg1;\n            LOCK();\n            piVar1 = piVar5 + -1;\n            iVar4 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar4 < 1) {\n                fcn.00469650(piVar5 + -3);\n            }\n            *arg1 = piVar6;\n        }\n        else if ((iVar7 != 0) && (iVar11 != 0)) {\n            puVar2 = piVar6 + iVar7 + arg2;\n            if (iVar11 == 1) {\n                *(piVar6 + arg2) = *puVar2;\n                piVar6 = *arg1;\n            }\n            else {\n                sub.msvcrt.dll_memmove(piVar6 + arg2, puVar2, iVar11);\n                piVar6 = *arg1;\n            }\n        }\n        *(piVar6 + -1) = 0;\n        piVar6[-3] = uVar10;\n        *(piVar6 + uVar10) = 0;\n        return piVar6;\n    }\n    return piVar6;\n}\n",
        "token_count": 1176
    },
    "00448690": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t * fcn.00448690(uint64_t *arg1, uint64_t arg2, uint64_t arg3, ulong *arg4)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    ulong *puVar5;\n    uint64_t uVar6;\n    uint64_t *puVar7;\n    int64_t iVar8;\n    ulong arg1_00;\n    uint64_t arg3_00;\n    int64_t unaff_R12;\n    ulong unaff_R13;\n    uint64_t in_stack_00000028;\n    \n    puVar5 = *arg1;\n    uVar6 = puVar5[-3];\n    if (arg2 <= uVar6) {\n        arg3_00 = uVar6 - arg2;\n        if (arg3 < uVar6 - arg2) {\n            arg3_00 = arg3;\n        }\n        arg3 = (0x3ffffffffffffff9 - uVar6) + arg3_00;\n        if (in_stack_00000028 <= arg3) {\n            if (((arg4 < puVar5) || (uVar6 + puVar5 < arg4)) || (0 < *(puVar5 + -1))) {\n                puVar7 = fcn.004476b0(arg1, arg2, arg3_00, arg4);\n                return puVar7;\n            }\n            if (puVar5 + arg2 < arg4 + in_stack_00000028) {\n                if (arg4 < arg3_00 + arg2 + puVar5) {\n                    iVar8 = fcn.00447380(arg4, arg4 + in_stack_00000028);\n                    puVar7 = fcn.004476b0(arg1, arg2, arg3_00, iVar8);\n                    LOCK();\n                    piVar3 = iVar8 + -8;\n                    iVar4 = *piVar3;\n                    *piVar3 = *piVar3 + -1;\n                    if (0 < iVar4) {\n                        return puVar7;\n                    }\n                    fcn.00469650(iVar8 + -0x18);\n                    return puVar7;\n                }\n                iVar8 = (in_stack_00000028 - puVar5) - arg3_00;\n            }\n            else {\n                iVar8 = -puVar5;\n            }\n            fcn.004489d0(arg1, arg2, arg3_00, in_stack_00000028);\n            puVar1 = arg4 + *arg1 + iVar8;\n            puVar2 = *arg1 + arg2;\n            if (in_stack_00000028 != 1) {\n                sub.msvcrt.dll_memcpy(puVar2, puVar1, in_stack_00000028);\n                return arg1;\n            }\n            *puVar2 = *puVar1;\n            return arg1;\n        }\n        fcn.00465550(\"basic_string::replace\");\n    }\n    arg1_00 = fcn.004655e0(\"basic_string::replace\");\n    fcn.004477b0(unaff_R12 + -0x18);\n    fcn.0040ca50(arg1_00);\n    puVar7 = fcn.00448690(arg1_00, unaff_R13, arg3, *arg4);\n    return puVar7;\n}\n",
        "token_count": 736
    },
    "004492f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004492f0(int64_t arg1, uchar *arg2)\n\n{\n    char *pcVar1;\n    uint32_t uVar2;\n    uchar *puVar3;\n    char *pcVar4;\n    char in_R8B;\n    \n    uVar2 = *(arg1 + 0x18);\n    puVar3 = arg2 + 1;\n    *arg2 = 0x25;\n    if ((uVar2 & 0x800) != 0) {\n        puVar3 = arg2 + 2;\n        arg2[1] = 0x2b;\n    }\n    if ((uVar2 & 0x400) != 0) {\n        *puVar3 = 0x23;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0x2e;\n    puVar3[1] = 0x2a;\n    pcVar4 = puVar3 + 2;\n    if (in_R8B != '\\0') {\n        pcVar4 = puVar3 + 3;\n        puVar3[2] = in_R8B;\n    }\n    pcVar1 = pcVar4 + 1;\n    if ((uVar2 & 0x104) != 4) {\n        if ((uVar2 & 0x104) != 0x100) {\n            *pcVar4 = (-((uVar2 & 0x4000) == 0) & 0x20U) + 0x47;\n            *pcVar1 = '\\0';\n            return;\n        }\n        *pcVar4 = (-((uVar2 & 0x4000) == 0) & 0x20U) + 0x45;\n        *pcVar1 = '\\0';\n        return;\n    }\n    *pcVar4 = 'f';\n    *pcVar1 = '\\0';\n    return;\n}\n",
        "token_count": 423
    },
    "0044b590": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.0044b590(int64_t *arg1, ulong arg2, ulong arg3)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.0041fa90(arg3);\n    if ((iVar1 != 0) && (*arg1 == 0)) {\n        iVar1 = fcn.0040de50(arg2, iVar1);\n        *arg1 = iVar1;\n        if (iVar1 != 0) {\n            *(arg1 + 1) = 1;\n            return arg1;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 129
    },
    "0044b600": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.0044b600(int64_t *arg1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    \n    pcVar1 = _sym.imp.msvcrt.dll__errno;\n    if (*arg1 != 0) {\n        if (*(arg1 + 1) == '\\0') {\ncode_r0x0044b615:\n            *arg1 = 0;\n            return arg1;\n        }\n        puVar3 = (*_sym.imp.msvcrt.dll__errno)();\n        *puVar3 = 0;\n        do {\n            iVar2 = sub.msvcrt.dll_fclose(*arg1);\n            if (iVar2 == 0) goto code_r0x0044b615;\n            piVar4 = (*pcVar1)();\n        } while (*piVar4 == 4);\n        *arg1 = 0;\n    }\n    return NULL;\n}\n",
        "token_count": 212
    },
    "0044b750": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.0044b750(int64_t *arg1, int64_t arg2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    \n    pcVar1 = _sym.imp.msvcrt.dll__errno;\n    if ((*arg1 == 0) && (arg2 != 0)) {\n        puVar3 = (*_sym.imp.msvcrt.dll__errno)();\n        *puVar3 = 0;\n        do {\n            iVar2 = sub.msvcrt.dll_fflush(*arg1);\n            if (iVar2 == 0) {\n                *arg1 = arg2;\n                *(arg1 + 1) = 0;\n                return arg1;\n            }\n            piVar4 = (*pcVar1)();\n        } while (*piVar4 == 4);\n    }\n    return NULL;\n}\n",
        "token_count": 198
    },
    "0044b7b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.0044b7b0(int64_t *arg1, ulong arg2, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.0041fa90(arg3 & 0xffffffff);\n    if ((iVar1 != 0) && (*arg1 == 0)) {\n        iVar1 = sub.msvcrt.dll__fdopen(arg2, iVar1);\n        *arg1 = iVar1;\n        if (iVar1 != 0) {\n            *(arg1 + 1) = 1;\n            if (arg2 != 0) {\n                return arg1;\n            }\n            sub.msvcrt.dll_setvbuf(iVar1, 0, 4, 0);\n            return arg1;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 177
    },
    "0045e670": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045e670(ulong *arg1)\n\n{\n    *arg1 = 0x489270;\n    fcn.00460220(arg1 + 2);\n    if ((*(arg1 + 3) != '\\0') && (arg1[6] != 0)) {\n        fcn.00469640(arg1[6]);\n    }\n    *arg1 = 0x487b50;\n    return;\n}\n",
        "token_count": 96
    },
    "0044bf00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nuint64_t fcn.0044bf00(int64_t *arg1)\n\n{\n    uchar *arg2;\n    code *pcVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t *piVar7;\n    int64_t *piVar8;\n    char *pcVar9;\n    ulong in_RDX;\n    uchar *puVar10;\n    uchar *puVar11;\n    int64_t iVar12;\n    uint64_t in_R8;\n    int64_t iVar13;\n    ulong uStack424;\n    uchar auStack416 [32];\n    int64_t aiStack384 [3];\n    int64_t *piStack360;\n    uchar auStack352 [12];\n    uint32_t uStack340;\n    int64_t iStack336;\n    ulong auStack328 [2];\n    uint64_t uStack312;\n    int64_t iStack192;\n    uchar auStack184 [128];\n    \n    uStack312 = 1;\n    if (arg1[4] < arg1[5]) {\n        in_RDX = 0xffffffff;\n        iVar4 = (**(*arg1 + 0x68))();\n        uStack312 = iVar4 != -1;\n    }\n    if (*(arg1 + 0x7a) == '\\0') {\n        return uStack312;\n    }\n    piVar7 = arg1[0x13];\n    if (piVar7 != NULL) {\n        cVar2 = (**(*piVar7 + 0x30))();\n        if (cVar2 != '\\0') {\n            return uStack312;\n        }\n        if (uStack312 == '\\0') {\n            return uStack312;\n        }\n        iVar12 = 0;\n        do {\n            uVar3 = (**(*arg1[0x13] + 0x18))(arg1[0x13], arg1 + 0xc, auStack184, &stack0xffffffffffffffc8);\n            uVar6 = uVar3;\n            if (uVar3 == 2) {\n                return 0;\n            }\n            if (uVar3 < 2) {\n                iVar12 = iStack192 - auStack184;\n                if (iVar12 < 1) {\ncode_r0x0044bfb1:\n                    iVar4 = (**(*arg1 + 0x68))(arg1, 0xffffffff);\n                    return uVar6 & 0xffffffffffffff00 | iVar4 != -1;\n                }\n                iVar5 = fcn.0044b6e0(arg1 + 9, auStack184, iVar12);\n                if (iVar12 != iVar5) {\n                    return 0;\n                }\n            }\n            if ((iVar12 < 1) || (uVar6 = uVar3 - 1,  uVar3 - 1 != 0)) goto code_r0x0044bfb1;\n        } while( true );\n    }\n    fcn.00464f90();\n    puVar11 = auStack416;\n    puVar10 = auStack416;\n    pcVar9 = piVar7[0x13];\n    if (pcVar9 == NULL) goto code_r0x0044c177;\n    uStack424 = 0x44c057;\n    cVar2 = (**(*pcVar9 + 0x30))();\n    if (cVar2 != '\\0') {\ncode_r0x0044c0cc:\n        *(puVar10 + -8) = 0x44c0db;\n        uVar6 = fcn.0044b6e0(piVar7 + 9, in_RDX, in_R8);\ncode_r0x0044c0db:\n        return uVar6 & 0xffffffffffffff00 | uVar6 == in_R8;\n    }\n    piVar8 = piVar7[0x13];\n    uStack424 = 0x44c068;\n    iVar4 = (**(*piVar8 + 0x40))();\n    iVar13 = iVar4 * in_R8;\n    uStack424 = 0x44c07c;\n    iVar5 = fcn.0040ce40(piVar8);\n    piVar8 = piVar7[0x13];\n    iVar5 = -iVar5;\n    puVar11 = auStack416 + iVar5;\n    puVar10 = auStack416 + iVar5;\n    arg2 = auStack352 + iVar5;\n    iVar12 = *piVar8;\n    *(aiStack384 + iVar5 + 0x18) = &iStack336;\n    *(aiStack384 + iVar5 + 8) = arg2;\n    *(aiStack384 + iVar5) = auStack328;\n    *(aiStack384 + iVar5 + 0x10) = arg2 + iVar13;\n    pcVar1 = *(iVar12 + 0x10);\n    *(auStack416 + iVar5 + -8) = 0x44c0be;\n    uVar3 = (*pcVar1)(piVar8, piVar7 + 0xc, in_RDX);\n    if (uVar3 < 2) {\n        uStack340 = uVar3;\n        in_R8 = iStack336 - arg2;\n        *(auStack416 + iVar5 + -8) = 0x44c10e;\n        uVar6 = fcn.0044b6e0(piVar7 + 9, arg2, in_R8);\n        if ((in_R8 != uVar6) || ((uStack340 & 1) == 0)) goto code_r0x0044c0db;\n        piVar8 = piVar7[0x13];\n        in_R8 = in_R8 + arg2;\n        iVar12 = piVar7[5];\n        iVar13 = *piVar8;\n        *(aiStack384 + iVar5 + 0x18) = &iStack336;\n        *(aiStack384 + iVar5 + 0x10) = in_R8;\n        *(aiStack384 + iVar5 + 8) = arg2;\n        *(aiStack384 + iVar5) = auStack328;\n        pcVar1 = *(iVar13 + 0x10);\n        *(auStack416 + iVar5 + -8) = 0x44c14c;\n        iVar4 = (*pcVar1)(piVar8, piVar7 + 0xc, auStack328[0], iVar12);\n        if (iVar4 != 2) {\n            in_R8 = iStack336 - arg2;\n            *(auStack416 + iVar5 + -8) = 0x44c166;\n            uVar6 = fcn.0044b6e0(piVar7 + 9, arg2, in_R8);\n            goto code_r0x0044c0db;\n        }\n    }\n    else if (uVar3 == 3) goto code_r0x0044c0cc;\n    pcVar9 = \"basic_filebuf::_M_convert_to_external conversion error\";\n    *(auStack416 + iVar5 + -8) = 0x44c177;\n    fcn.00465210(\"basic_filebuf::_M_convert_to_external conversion error\");\ncode_r0x0044c177:\n    *(puVar11 + -8) = 0x44c17c;\n    uVar6 = fcn.00464f90();\n    *(puVar11 + -8) = in_R8;\n    if (*(pcVar9 + 0x78) != '\\0') {\n        iVar12 = *(pcVar9 + 0x68);\n        if (iVar12 != 0) {\n            *(puVar11 + -0x30) = 0x44c19c;\n            uVar6 = fcn.00469640(iVar12);\n        }\n        *(pcVar9 + 0x68) = 0;\n        *(pcVar9 + 0x78) = 0;\n    }\n    iVar12 = *(pcVar9 + 0xa0);\n    if (iVar12 != 0) {\n        *(puVar11 + -0x30) = 0x44c1b9;\n        uVar6 = fcn.00469640(iVar12);\n    }\n    *(pcVar9 + 0xa0) = 0;\n    *(pcVar9 + 0xa8) = 0;\n    *(pcVar9 + 0xb0) = 0;\n    *(pcVar9 + 0xb8) = 0;\n    return uVar6;\n}\n",
        "token_count": 1876
    },
    "0044c020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nuint64_t fcn.0044c020(int64_t arg1, ulong arg2, uint64_t arg3)\n\n{\n    uchar *arg2_00;\n    int64_t iVar1;\n    code *pcVar2;\n    ulong uVar3;\n    char cVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t *piVar9;\n    char *pcVar10;\n    uchar *puVar11;\n    uchar *puVar12;\n    int64_t iVar13;\n    ulong uStack176;\n    uchar auStack168 [16];\n    ulong var_30h;\n    ulong var_28h;\n    int64_t iStack136;\n    ulong var_18h;\n    uint64_t auStack120 [2];\n    uchar auStack104 [12];\n    uint32_t uStack92;\n    int64_t iStack88;\n    ulong uStack80;\n    \n    puVar12 = &stack0xffffffffffffff58;\n    puVar11 = &stack0xffffffffffffff58;\n    pcVar10 = *(arg1 + 0x98);\n    if (pcVar10 == NULL) goto code_r0x0044c177;\n    uStack176 = 0x44c057;\n    cVar4 = (**(*pcVar10 + 0x30))();\n    if (cVar4 == '\\0') {\n        piVar9 = *(arg1 + 0x98);\n        uStack176 = 0x44c068;\n        iVar5 = (**(*piVar9 + 0x40))();\n        iVar13 = iVar5 * arg3;\n        uStack176 = 0x44c07c;\n        iVar7 = fcn.0040ce40(piVar9);\n        piVar9 = *(arg1 + 0x98);\n        iVar7 = -iVar7;\n        puVar12 = &stack0xffffffffffffff58 + iVar7;\n        puVar11 = &stack0xffffffffffffff58 + iVar7;\n        arg2_00 = &stack0xffffffffffffff98 + iVar7;\n        iVar1 = *piVar9;\n        *(&stack0xffffffffffffff90 + iVar7) = &stack0xffffffffffffffa8;\n        *(&fcn.0044c020::var_18h + iVar7) = arg2_00;\n        *(&stack0xffffffffffffff78 + iVar7) = &stack0xffffffffffffffb0;\n        *(&stack0xffffffffffffff88 + iVar7) = arg2_00 + iVar13;\n        pcVar2 = *(iVar1 + 0x10);\n        *(&stack0xffffffffffffff50 + iVar7) = 0x44c0be;\n        uVar6 = (*pcVar2)(piVar9, arg1 + 0x60, arg2);\n        if (uVar6 < 2) {\n            uStack92 = uVar6;\n            arg3 = iStack88 - arg2_00;\n            *(&stack0xffffffffffffff50 + iVar7) = 0x44c10e;\n            uVar8 = fcn.0044b6e0(arg1 + 0x48, arg2_00, arg3);\n            if ((arg3 != uVar8) || ((uStack92 & 1) == 0)) goto code_r0x0044c0db;\n            piVar9 = *(arg1 + 0x98);\n            arg3 = arg3 + arg2_00;\n            uVar3 = *(arg1 + 0x28);\n            iVar1 = *piVar9;\n            *(&stack0xffffffffffffff90 + iVar7) = &stack0xffffffffffffffa8;\n            *(&stack0xffffffffffffff88 + iVar7) = arg3;\n            *(&fcn.0044c020::var_18h + iVar7) = arg2_00;\n            *(&stack0xffffffffffffff78 + iVar7) = &stack0xffffffffffffffb0;\n            pcVar2 = *(iVar1 + 0x10);\n            *(&stack0xffffffffffffff50 + iVar7) = 0x44c14c;\n            iVar5 = (*pcVar2)(piVar9, arg1 + 0x60, uStack80, uVar3);\n            if (iVar5 != 2) {\n                arg3 = iStack88 - arg2_00;\n                *(&stack0xffffffffffffff50 + iVar7) = 0x44c166;\n                uVar8 = fcn.0044b6e0(arg1 + 0x48, arg2_00, arg3);\n                goto code_r0x0044c0db;\n            }\n        }\n        else if (uVar6 == 3) goto code_r0x0044c0cc;\n        pcVar10 = \"basic_filebuf::_M_convert_to_external conversion error\";\n        *(&stack0xffffffffffffff50 + iVar7) = 0x44c177;\n        fcn.00465210(\"basic_filebuf::_M_convert_to_external conversion error\");\ncode_r0x0044c177:\n        *(puVar12 + -8) = 0x44c17c;\n        uVar8 = fcn.00464f90();\n        *(puVar12 + -8) = arg3;\n        if (*(pcVar10 + 0x78) != '\\0') {\n            iVar1 = *(pcVar10 + 0x68);\n            if (iVar1 != 0) {\n                *(puVar12 + -0x30) = 0x44c19c;\n                uVar8 = fcn.00469640(iVar1);\n            }\n            *(pcVar10 + 0x68) = 0;\n            *(pcVar10 + 0x78) = 0;\n        }\n        iVar1 = *(pcVar10 + 0xa0);\n        if (iVar1 != 0) {\n            *(puVar12 + -0x30) = 0x44c1b9;\n            uVar8 = fcn.00469640(iVar1);\n        }\n        *(pcVar10 + 0xa0) = 0;\n        *(pcVar10 + 0xa8) = 0;\n        *(pcVar10 + 0xb0) = 0;\n        *(pcVar10 + 0xb8) = 0;\n        return uVar8;\n    }\ncode_r0x0044c0cc:\n    *(puVar11 + -8) = 0x44c0db;\n    uVar8 = fcn.0044b6e0(arg1 + 0x48, arg2, arg3);\ncode_r0x0044c0db:\n    return uVar8 & 0xffffffffffffff00 | uVar8 == arg3;\n}\n",
        "token_count": 1482
    },
    "0044c180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044c180(int64_t arg1)\n\n{\n    if (*(arg1 + 0x78) != '\\0') {\n        if (*(arg1 + 0x68) != 0) {\n            fcn.00469640(*(arg1 + 0x68));\n        }\n        *(arg1 + 0x68) = 0;\n        *(arg1 + 0x78) = 0;\n    }\n    if (*(arg1 + 0xa0) != 0) {\n        fcn.00469640(*(arg1 + 0xa0));\n    }\n    *(arg1 + 0xa0) = 0;\n    *(arg1 + 0xa8) = 0;\n    *(arg1 + 0xb0) = 0;\n    *(arg1 + 0xb8) = 0;\n    return;\n}\n",
        "token_count": 190
    },
    "0044c1f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044c1f0(int64_t arg1)\n\n{\n    ulong uVar1;\n    \n    if ((*(arg1 + 0x78) == '\\0') && (*(arg1 + 0x68) == 0)) {\n        uVar1 = fcn.00469670(*(arg1 + 0x70));\n        *(arg1 + 0x78) = 1;\n        *(arg1 + 0x68) = uVar1;\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "0044db60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nuint64_t fcn.0044db60(int64_t *arg1)\n\n{\n    uchar *arg2;\n    code *pcVar1;\n    char cVar2;\n    int16_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t *piVar8;\n    int64_t *piVar9;\n    char *pcVar10;\n    ulong in_RDX;\n    uchar *puVar11;\n    uchar *puVar12;\n    int64_t iVar13;\n    uint64_t in_R8;\n    int64_t iVar14;\n    ulong uStack424;\n    uchar auStack416 [32];\n    int64_t *piStack384;\n    int64_t aiStack376 [2];\n    int64_t *piStack360;\n    uchar auStack352 [12];\n    uint32_t uStack340;\n    int64_t iStack336;\n    int64_t aiStack328 [2];\n    uint64_t uStack312;\n    int64_t iStack192;\n    uchar auStack184 [128];\n    \n    uStack312 = 1;\n    if (arg1[4] < arg1[5]) {\n        in_RDX = 0xffff;\n        iVar3 = (**(*arg1 + 0x68))();\n        uStack312 = iVar3 != -1;\n    }\n    if (*(arg1 + 0x7a) == '\\0') {\n        return uStack312;\n    }\n    piVar8 = arg1[0x13];\n    if (piVar8 != NULL) {\n        cVar2 = (**(*piVar8 + 0x30))();\n        if (cVar2 != '\\0') {\n            return uStack312;\n        }\n        if (uStack312 == '\\0') {\n            return uStack312;\n        }\n        iVar13 = 0;\n        do {\n            uVar4 = (**(*arg1[0x13] + 0x18))(arg1[0x13], arg1 + 0xc, auStack184, &stack0xffffffffffffffc8);\n            uVar7 = uVar4;\n            if (uVar4 == 2) {\n                return 0;\n            }\n            if (uVar4 < 2) {\n                iVar13 = iStack192 - auStack184;\n                if (iVar13 < 1) {\ncode_r0x0044dc11:\n                    iVar3 = (**(*arg1 + 0x68))(arg1, 0xffff);\n                    return uVar7 & 0xffffffffffffff00 | iVar3 != -1;\n                }\n                iVar6 = fcn.0044b6e0(arg1 + 9, auStack184, iVar13);\n                if (iVar13 != iVar6) {\n                    return 0;\n                }\n            }\n            if ((iVar13 < 1) || (uVar7 = uVar4 - 1,  uVar4 - 1 != 0)) goto code_r0x0044dc11;\n        } while( true );\n    }\n    fcn.00464f90();\n    puVar12 = auStack416;\n    puVar11 = auStack416;\n    pcVar10 = piVar8[0x13];\n    if (pcVar10 == NULL) goto code_r0x0044dde3;\n    uStack424 = 0x44dcb7;\n    cVar2 = (**(*pcVar10 + 0x30))();\n    if (cVar2 != '\\0') {\ncode_r0x0044dd2c:\n        *(puVar11 + -8) = 0x44dd3b;\n        uVar7 = fcn.0044b6e0(piVar8 + 9, in_RDX, in_R8);\ncode_r0x0044dd3b:\n        return uVar7 & 0xffffffffffffff00 | uVar7 == in_R8;\n    }\n    piVar9 = piVar8[0x13];\n    uStack424 = 0x44dcc8;\n    iVar5 = (**(*piVar9 + 0x40))();\n    iVar14 = iVar5 * in_R8;\n    uStack424 = 0x44dcdc;\n    iVar6 = fcn.0040ce40(piVar9);\n    piVar9 = piVar8[0x13];\n    iVar6 = -iVar6;\n    puVar12 = auStack416 + iVar6;\n    puVar11 = auStack416 + iVar6;\n    arg2 = auStack352 + iVar6;\n    iVar13 = *piVar9;\n    *(&piStack384 + iVar6 + 0x18) = &iStack336;\n    *(&piStack384 + iVar6 + 8) = arg2;\n    *(&piStack384 + iVar6) = aiStack328;\n    *(&piStack384 + iVar6 + 0x10) = arg2 + iVar14;\n    pcVar1 = *(iVar13 + 0x10);\n    *(auStack416 + iVar6 + -8) = 0x44dd1e;\n    uVar4 = (*pcVar1)(piVar9, piVar8 + 0xc, in_RDX);\n    if (uVar4 < 2) {\n        uStack340 = uVar4;\n        in_R8 = iStack336 - arg2;\n        *(auStack416 + iVar6 + -8) = 0x44dd6e;\n        uVar7 = fcn.0044b6e0(piVar8 + 9, arg2, in_R8);\n        if ((in_R8 != uVar7) || ((uStack340 & 1) == 0)) goto code_r0x0044dd3b;\n        piVar9 = piVar8[0x13];\n        in_R8 = in_R8 + arg2;\n        iVar13 = piVar8[5];\n        iVar14 = *piVar9;\n        *(&piStack384 + iVar6 + 0x18) = &iStack336;\n        *(&piStack384 + iVar6 + 0x10) = in_R8;\n        *(&piStack384 + iVar6 + 8) = arg2;\n        *(&piStack384 + iVar6) = aiStack328;\n        pcVar1 = *(iVar14 + 0x10);\n        *(auStack416 + iVar6 + -8) = 0x44ddb8;\n        iVar5 = (*pcVar1)(piVar9, piVar8 + 0xc, aiStack328[0], \n                          aiStack328[0] + (iVar13 - aiStack328[0] & 0xfffffffffffffffeU));\n        if (iVar5 != 2) {\n            in_R8 = iStack336 - arg2;\n            *(auStack416 + iVar6 + -8) = 0x44ddd2;\n            uVar7 = fcn.0044b6e0(piVar8 + 9, arg2, in_R8);\n            goto code_r0x0044dd3b;\n        }\n    }\n    else if (uVar4 == 3) goto code_r0x0044dd2c;\n    pcVar10 = \"basic_filebuf::_M_convert_to_external conversion error\";\n    *(auStack416 + iVar6 + -8) = 0x44dde3;\n    fcn.00465210(\"basic_filebuf::_M_convert_to_external conversion error\");\ncode_r0x0044dde3:\n    *(puVar12 + -8) = 0x44dde8;\n    uVar7 = fcn.00464f90();\n    *(puVar12 + -8) = in_R8;\n    if (*(pcVar10 + 0x78) != '\\0') {\n        iVar13 = *(pcVar10 + 0x68);\n        if (iVar13 != 0) {\n            *(puVar12 + -0x30) = 0x44de0c;\n            uVar7 = fcn.00469640(iVar13);\n        }\n        *(pcVar10 + 0x68) = 0;\n        *(pcVar10 + 0x78) = 0;\n    }\n    iVar13 = *(pcVar10 + 0xa0);\n    if (iVar13 != 0) {\n        *(puVar12 + -0x30) = 0x44de29;\n        uVar7 = fcn.00469640(iVar13);\n    }\n    *(pcVar10 + 0xa0) = 0;\n    *(pcVar10 + 0xa8) = 0;\n    *(pcVar10 + 0xb0) = 0;\n    *(pcVar10 + 0xb8) = 0;\n    return uVar7;\n}\n",
        "token_count": 1920
    },
    "0044dc80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nuint64_t fcn.0044dc80(int64_t arg1, ulong arg2, uint64_t arg3)\n\n{\n    uchar *arg2_00;\n    int64_t iVar1;\n    code *pcVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t *piVar8;\n    char *pcVar9;\n    uchar *puVar10;\n    uchar *puVar11;\n    int64_t iVar12;\n    ulong uStack176;\n    uchar auStack168 [16];\n    ulong var_30h;\n    ulong var_28h;\n    int64_t iStack136;\n    ulong var_18h;\n    uint64_t auStack120 [2];\n    uchar auStack104 [12];\n    uint32_t uStack92;\n    int64_t iStack88;\n    int64_t iStack80;\n    \n    puVar11 = &stack0xffffffffffffff58;\n    puVar10 = &stack0xffffffffffffff58;\n    pcVar9 = *(arg1 + 0x98);\n    if (pcVar9 == NULL) goto code_r0x0044dde3;\n    uStack176 = 0x44dcb7;\n    cVar3 = (**(*pcVar9 + 0x30))();\n    if (cVar3 == '\\0') {\n        piVar8 = *(arg1 + 0x98);\n        uStack176 = 0x44dcc8;\n        iVar4 = (**(*piVar8 + 0x40))();\n        iVar12 = iVar4 * arg3;\n        uStack176 = 0x44dcdc;\n        iVar6 = fcn.0040ce40(piVar8);\n        piVar8 = *(arg1 + 0x98);\n        iVar6 = -iVar6;\n        puVar11 = &stack0xffffffffffffff58 + iVar6;\n        puVar10 = &stack0xffffffffffffff58 + iVar6;\n        arg2_00 = &stack0xffffffffffffff98 + iVar6;\n        iVar1 = *piVar8;\n        *(&stack0xffffffffffffff90 + iVar6) = &stack0xffffffffffffffa8;\n        *(&fcn.0044dc80::var_18h + iVar6) = arg2_00;\n        *(&stack0xffffffffffffff78 + iVar6) = &stack0xffffffffffffffb0;\n        *(&stack0xffffffffffffff88 + iVar6) = arg2_00 + iVar12;\n        pcVar2 = *(iVar1 + 0x10);\n        *(&stack0xffffffffffffff50 + iVar6) = 0x44dd1e;\n        uVar5 = (*pcVar2)(piVar8, arg1 + 0x60, arg2);\n        if (uVar5 < 2) {\n            uStack92 = uVar5;\n            arg3 = iStack88 - arg2_00;\n            *(&stack0xffffffffffffff50 + iVar6) = 0x44dd6e;\n            uVar7 = fcn.0044b6e0(arg1 + 0x48, arg2_00, arg3);\n            if ((arg3 != uVar7) || ((uStack92 & 1) == 0)) goto code_r0x0044dd3b;\n            piVar8 = *(arg1 + 0x98);\n            arg3 = arg3 + arg2_00;\n            iVar1 = *(arg1 + 0x28);\n            iVar12 = *piVar8;\n            *(&stack0xffffffffffffff90 + iVar6) = &stack0xffffffffffffffa8;\n            *(&stack0xffffffffffffff88 + iVar6) = arg3;\n            *(&fcn.0044dc80::var_18h + iVar6) = arg2_00;\n            *(&stack0xffffffffffffff78 + iVar6) = &stack0xffffffffffffffb0;\n            pcVar2 = *(iVar12 + 0x10);\n            *(&stack0xffffffffffffff50 + iVar6) = 0x44ddb8;\n            iVar4 = (*pcVar2)(piVar8, arg1 + 0x60, iStack80, iStack80 + (iVar1 - iStack80 & 0xfffffffffffffffeU));\n            if (iVar4 != 2) {\n                arg3 = iStack88 - arg2_00;\n                *(&stack0xffffffffffffff50 + iVar6) = 0x44ddd2;\n                uVar7 = fcn.0044b6e0(arg1 + 0x48, arg2_00, arg3);\n                goto code_r0x0044dd3b;\n            }\n        }\n        else if (uVar5 == 3) goto code_r0x0044dd2c;\n        pcVar9 = \"basic_filebuf::_M_convert_to_external conversion error\";\n        *(&stack0xffffffffffffff50 + iVar6) = 0x44dde3;\n        fcn.00465210(\"basic_filebuf::_M_convert_to_external conversion error\");\ncode_r0x0044dde3:\n        *(puVar11 + -8) = 0x44dde8;\n        uVar7 = fcn.00464f90();\n        *(puVar11 + -8) = arg3;\n        if (*(pcVar9 + 0x78) != '\\0') {\n            iVar1 = *(pcVar9 + 0x68);\n            if (iVar1 != 0) {\n                *(puVar11 + -0x30) = 0x44de0c;\n                uVar7 = fcn.00469640(iVar1);\n            }\n            *(pcVar9 + 0x68) = 0;\n            *(pcVar9 + 0x78) = 0;\n        }\n        iVar1 = *(pcVar9 + 0xa0);\n        if (iVar1 != 0) {\n            *(puVar11 + -0x30) = 0x44de29;\n            uVar7 = fcn.00469640(iVar1);\n        }\n        *(pcVar9 + 0xa0) = 0;\n        *(pcVar9 + 0xa8) = 0;\n        *(pcVar9 + 0xb0) = 0;\n        *(pcVar9 + 0xb8) = 0;\n        return uVar7;\n    }\ncode_r0x0044dd2c:\n    *(puVar10 + -8) = 0x44dd3b;\n    uVar7 = fcn.0044b6e0(arg1 + 0x48, arg2, arg3);\ncode_r0x0044dd3b:\n    return uVar7 & 0xffffffffffffff00 | uVar7 == arg3;\n}\n",
        "token_count": 1488
    },
    "0044ddf0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044ddf0(int64_t arg1)\n\n{\n    if (*(arg1 + 0x78) != '\\0') {\n        if (*(arg1 + 0x68) != 0) {\n            fcn.00469640(*(arg1 + 0x68));\n        }\n        *(arg1 + 0x68) = 0;\n        *(arg1 + 0x78) = 0;\n    }\n    if (*(arg1 + 0xa0) != 0) {\n        fcn.00469640(*(arg1 + 0xa0));\n    }\n    *(arg1 + 0xa0) = 0;\n    *(arg1 + 0xa8) = 0;\n    *(arg1 + 0xb0) = 0;\n    *(arg1 + 0xb8) = 0;\n    return;\n}\n",
        "token_count": 190
    },
    "0044de60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044de60(int64_t arg1)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    \n    if ((*(arg1 + 0x78) == '\\0') && (*(arg1 + 0x68) == 0)) {\n        iVar2 = -1;\n        if (*(arg1 + 0x70) < 0x3f80000000000001) {\n            iVar2 = *(arg1 + 0x70) * 2;\n        }\n        uVar1 = fcn.00469670(iVar2);\n        *(arg1 + 0x78) = 1;\n        *(arg1 + 0x68) = uVar1;\n        return;\n    }\n    return;\n}\n",
        "token_count": 164
    },
    "004634a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar * fcn.004634a0(int64_t arg1, uint64_t arg2)\n\n{\n    int64_t *piVar1;\n    char *in_RAX;\n    char *arg1_00;\n    ulong in_R8;\n    uchar auStack96 [16];\n    \n    if (*(arg1 + 0xe8) == 0) {\n        arg2 = arg2 | 1;\n    }\n    *(arg1 + 0x20) = arg2;\n    if ((*(arg1 + 0x1c) & arg2) == 0) {\n        return in_RAX;\n    }\n    arg1_00 = \"basic_ios::clear\";\n    fcn.00465210(\"basic_ios::clear\");\n    fcn.004603c0(arg1_00, arg2 + 0xd0);\n    fcn.00461bd0(auStack96, arg2, in_R8);\n    fcn.00460470(auStack96);\n    fcn.00463330(arg2, in_R8);\n    piVar1 = *(arg2 + 0xe8);\n    if (piVar1 != NULL) {\n        fcn.004603c0(auStack96, piVar1 + 7);\n        (**(*piVar1 + 0x10))(piVar1, in_R8);\n        fcn.004604a0(piVar1 + 7, in_R8);\n        fcn.00460470(auStack96);\n    }\n    return arg1_00;\n}\n",
        "token_count": 331
    },
    "00452980": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.00452980(int64_t *arg1)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    int64_t iVar3;\n    char cStack9;\n    \n    arg1[1] = 0;\n    fcn.00452fb0(&cStack9, arg1, 1);\n    if (cStack9 == '\\0') {\n        return arg1;\n    }\n    iVar3 = *(arg1 + *(*arg1 + -0x18) + 0xe8);\n    piVar1 = *(iVar3 + 0x10);\n    if (piVar1 < *(iVar3 + 0x18)) {\n        iVar2 = *piVar1;\n        *(iVar3 + 0x10) = piVar1 + 1;\n    }\n    else {\n        iVar2 = fcn.0046a510(iVar3);\n    }\n    if (iVar2 != -1) {\n        arg1[1] = 1;\n        return arg1;\n    }\n    iVar3 = arg1 + *(*arg1 + -0x18);\n    fcn.004634a0(iVar3, *(iVar3 + 0x20) | 2);\n    return arg1;\n}\n",
        "token_count": 273
    },
    "00452a90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t * fcn.00452a90(int64_t *arg1, int64_t arg2)\n\n{\n    int16_t *piVar1;\n    int16_t *piVar2;\n    bool bVar3;\n    int16_t iVar4;\n    int64_t *piVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    char cStack41;\n    \n    if (arg2 == 1) {\n        piVar5 = fcn.00452980(arg1);\n        return piVar5;\n    }\n    arg1[1] = 0;\n    fcn.00452fb0(&cStack41, arg1, 1);\n    if ((arg2 < 1) || (cStack41 == '\\0')) {\n        return arg1;\n    }\n    piVar5 = *(arg1 + *(*arg1 + -0x18) + 0xe8);\n    if (piVar5[2] < piVar5[3]) {\n        iVar4 = *piVar5[2];\n    }\n    else {\n        iVar4 = (**(*piVar5 + 0x48))(piVar5);\n    }\n    iVar6 = arg1[1];\n    bVar3 = false;\njoined_r0x00452b13:\n    while (arg2 <= iVar6) {\n        if ((arg2 != 0x7fffffffffffffff) || (iVar4 == -1)) goto code_r0x00452b65;\n        bVar3 = true;\n        arg1[1] = -0x8000000000000000;\n        iVar6 = -0x8000000000000000;\n    }\n    if (iVar4 == -1) {\ncode_r0x00452b65:\n        if (bVar3) {\n            arg1[1] = 0x7fffffffffffffff;\n        }\n        if (iVar4 != -1) {\n            return arg1;\n        }\n        iVar6 = arg1 + *(*arg1 + -0x18);\n        fcn.004634a0(iVar6, *(iVar6 + 0x20) | 2);\n        return arg1;\n    }\n    piVar1 = piVar5[3];\n    piVar2 = piVar5[2];\n    iVar7 = piVar1 - piVar2 >> 1;\n    if (arg2 - iVar6 <= iVar7) {\n        iVar7 = arg2 - iVar6;\n    }\n    if (iVar7 < 2) {\n        arg1[1] = iVar6 + 1;\n        if (piVar2 < piVar1) {\n            iVar4 = *piVar2;\n            piVar5[2] = piVar2 + 1;\n        }\n        else {\n            iVar4 = (**(*piVar5 + 0x50))(piVar5);\n        }\n        if (iVar4 != -1) {\n            if (piVar5[3] <= piVar5[2]) goto code_r0x00452c1a;\n            iVar4 = *piVar5[2];\n        }\n    }\n    else {\n        piVar2 = piVar2 + iVar7;\n        iVar6 = iVar6 + iVar7;\n        piVar5[2] = piVar2;\n        arg1[1] = iVar6;\n        if (piVar2 < piVar1) {\n            iVar4 = *piVar2;\n            goto joined_r0x00452b13;\n        }\ncode_r0x00452c1a:\n        iVar4 = (**(*piVar5 + 0x48))(piVar5);\n    }\n    iVar6 = arg1[1];\n    goto joined_r0x00452b13;\n}\n",
        "token_count": 798
    },
    "00453ff0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.00453ff0(int64_t *arg1, ulong arg2)\n\n{\n    int16_t *piVar1;\n    int64_t *piVar2;\n    char cVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    char acStack56 [8];\n    int64_t *piStack48;\n    \n    fcn.004545f0(acStack56, arg1);\n    if (acStack56[0] != '\\0') {\n        iVar5 = *(arg1 + *(*arg1 + -0x18) + 0xe8);\n        piVar1 = *(iVar5 + 0x28);\n        if (piVar1 < *(iVar5 + 0x30)) {\n            *piVar1 = arg2;\n            *(iVar5 + 0x28) = piVar1 + 1;\n        }\n        else {\n            arg2._0_2_ = fcn.0046a4e0(iVar5);\n        }\n        if (arg2 == -1) {\n            iVar5 = arg1 + *(*arg1 + -0x18);\n            fcn.004634a0(iVar5, *(iVar5 + 0x20) | 1);\n        }\n    }\n    piVar2 = piStack48;\n    iVar5 = *(*piStack48 + -0x18);\n    if ((*(piStack48 + iVar5 + 0x19) & 0x20) != 0) {\n        cVar3 = fcn.004651f0();\n        if ((cVar3 == '\\0') && (piVar2 = *(piVar2 + iVar5 + 0xe8),  piVar2 != NULL)) {\n            iVar4 = (**(*piVar2 + 0x30))();\n            if (iVar4 == -1) {\n                iVar5 = piStack48 + *(*piStack48 + -0x18);\n                fcn.004634a0(iVar5, *(iVar5 + 0x20) | 1);\n                return arg1;\n            }\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 460
    },
    "00454da0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.00454da0(int64_t *arg1)\n\n{\n    uint32_t *puVar1;\n    unkbyte10 Var2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    char cVar5;\n    ushort uVar6;\n    int32_t iVar7;\n    ulong uVar8;\n    unkbyte10 *in_RDX;\n    int64_t *piVar9;\n    int64_t iVar10;\n    unkbyte10 Stack104;\n    int64_t iStack88;\n    uint64_t uStack80;\n    uchar auStack72 [8];\n    char cStack64;\n    char acStack56 [8];\n    int64_t *piStack48;\n    \n    Var2 = *in_RDX;\n    piVar9 = arg1;\n    fcn.004545f0(acStack56, arg1);\n    if (acStack56[0] == '\\0') goto code_r0x00454e65;\n    iVar10 = arg1 + *(*arg1 + -0x18);\n    piVar3 = *(iVar10 + 0xf8);\n    if (piVar3 == NULL) {\n        uVar8 = fcn.00464f90();\n        if (piVar9 == 0x1) {\n            fcn.00469950(uVar8);\n            arg1 = arg1 + *(*arg1 + -0x18);\n            *(arg1 + 4) = *(arg1 + 4) | 1;\n            if ((*(arg1 + 0x1c) & 1) != 0) {\n                fcn.0046a200();\n                goto code_r0x00454f33;\n            }\n            fcn.0046a200();\n        }\n        fcn.00469950(uVar8);\n        iVar10 = *(*arg1 + -0x18);\n        puVar1 = arg1 + iVar10 + 0x20;\n        *puVar1 = *puVar1 | 1;\n        if ((*(arg1 + iVar10 + 0x1c) & 1) != 0) {\n            uVar8 = fcn.0046a200();\n            fcn.00469b80();\ncode_r0x00454f3b:\n            do {\n                fcn.004546d0(acStack56);\n                uVar8 = fcn.0040ca50(uVar8);\n                fcn.00469b80();\n            } while( true );\n        }\n        fcn.00469b80();\n    }\n    else {\n        if (*(iVar10 + 0xe2) == '\\0') {\n            piVar9 = *(iVar10 + 0xf0);\n            if (piVar9 == NULL) {\ncode_r0x00454f33:\n                uVar8 = fcn.00464f90();\n                goto code_r0x00454f3b;\n            }\n            uVar6 = (**(*piVar9 + 0x50))(piVar9, 0x20);\n            iVar4 = *arg1;\n            *(iVar10 + 0xe0) = uVar6;\n            *(iVar10 + 0xe2) = 1;\n            iVar10 = arg1 + *(iVar4 + -0x18);\n        }\n        else {\n            uVar6 = *(iVar10 + 0xe0);\n        }\n        iStack88 = *(iVar10 + 0xe8);\n        uStack80 = iStack88 == 0;\n        Stack104 = Var2;\n        (**(*piVar3 + 0x40))(auStack72, piVar3, &iStack88, iVar10, uVar6, &Stack104);\n        if (cStack64 != '\\0') {\n            iVar10 = arg1 + *(*arg1 + -0x18);\n            fcn.004634a0(iVar10, *(iVar10 + 0x20) | 1);\n        }\n    }\ncode_r0x00454e65:\n    piVar9 = piStack48;\n    iVar10 = *(*piStack48 + -0x18);\n    if ((*(piStack48 + iVar10 + 0x19) & 0x20) != 0) {\n        cVar5 = fcn.004651f0();\n        if ((cVar5 == '\\0') && (piVar9 = *(piVar9 + iVar10 + 0xe8),  piVar9 != NULL)) {\n            iVar7 = (**(*piVar9 + 0x30))();\n            if (iVar7 == -1) {\n                iVar10 = piStack48 + *(*piStack48 + -0x18);\n                fcn.004634a0(iVar10, *(iVar10 + 0x20) | 1);\n                return arg1;\n            }\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 1048
    },
    "0045a3e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045a3e0(int64_t arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    bool bVar6;\n    uchar uVar7;\n    int64_t *piVar8;\n    char *arg2_00;\n    ulong uVar9;\n    int64_t aiStack168 [2];\n    int64_t aiStack152 [2];\n    int64_t aiStack136 [2];\n    int64_t aiStack120 [2];\n    int64_t aiStack104 [2];\n    int64_t aiStack88 [3];\n    \n    *(arg1 + 0x88) = 1;\n    piVar8 = fcn.004676e0(arg2);\n    (**(*piVar8 + 0x20))(aiStack168, piVar8);\n    *(arg1 + 0x18) = *(aiStack168[0] + -0x18);\n    LOCK();\n    piVar1 = aiStack168[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004477a0(aiStack168[0] + -0x18);\n    }\n    arg2_00 = fcn.00469670(*(arg1 + 0x18));\n    uVar3 = *(arg1 + 0x18);\n    (**(*piVar8 + 0x20))(aiStack152, piVar8);\n    fcn.00423180(aiStack152, arg2_00, uVar3, 0);\n    LOCK();\n    piVar1 = aiStack152[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004477a0(aiStack152[0] + -0x18);\n    }\n    bVar6 = false;\n    *(arg1 + 0x10) = arg2_00;\n    if (*(arg1 + 0x18) != 0) {\n        bVar6 = *arg2_00 - 1U < 0x7e;\n    }\n    *(arg1 + 0x20) = bVar6;\n    (**(*piVar8 + 0x28))(aiStack136, piVar8);\n    *(arg1 + 0x30) = *(aiStack136[0] + -0x18);\n    LOCK();\n    piVar1 = aiStack136[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004477a0(aiStack136[0] + -0x18);\n    }\n    uVar9 = fcn.00469670(*(arg1 + 0x30));\n    uVar3 = *(arg1 + 0x30);\n    (**(*piVar8 + 0x28))(aiStack120, piVar8);\n    fcn.00423180(aiStack120, uVar9, uVar3, 0);\n    LOCK();\n    piVar1 = aiStack120[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004477a0(aiStack120[0] + -0x18);\n    }\n    iVar4 = *piVar8;\n    *(arg1 + 0x28) = uVar9;\n    (**(iVar4 + 0x30))(aiStack104, piVar8);\n    *(arg1 + 0x40) = *(aiStack104[0] + -0x18);\n    LOCK();\n    piVar1 = aiStack104[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004477a0(aiStack104[0] + -0x18);\n    }\n    uVar9 = fcn.00469670(*(arg1 + 0x40));\n    uVar3 = *(arg1 + 0x40);\n    (**(*piVar8 + 0x30))(aiStack88, piVar8);\n    fcn.00423180(aiStack88, uVar9, uVar3, 0);\n    LOCK();\n    piVar1 = aiStack88[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004477a0(aiStack88[0] + -0x18);\n    }\n    iVar4 = *piVar8;\n    *(arg1 + 0x38) = uVar9;\n    uVar7 = (**(iVar4 + 0x10))(piVar8);\n    *(arg1 + 0x48) = uVar7;\n    uVar7 = (**(*piVar8 + 0x18))(piVar8);\n    *(arg1 + 0x49) = uVar7;\n    piVar8 = fcn.00467260(arg2);\n    iVar5 = *0x47f090;\n    iVar4 = *0x47f090 + 0x24;\n    if (*(piVar8 + 7) == '\\x01') {\n        sub.msvcrt.dll_memcpy(arg1 + 0x4a, *0x47f090, 0x24);\n    }\n    else {\n        if (*(piVar8 + 7) == '\\0') {\n            fcn.00425590(piVar8);\n        }\n        (**(*piVar8 + 0x38))(piVar8, iVar5, iVar4, arg1 + 0x4a);\n    }\n    iVar5 = *0x47f080;\n    iVar4 = *0x47f080 + 0x1a;\n    if (*(piVar8 + 7) == '\\x01') {\n        sub.msvcrt.dll_memcpy(arg1 + 0x6e, *0x47f080, 0x1a);\n    }\n    else {\n        if (*(piVar8 + 7) == '\\0') {\n            fcn.00425590(piVar8);\n        }\n        (**(*piVar8 + 0x38))(piVar8, iVar5, iVar4, arg1 + 0x6e);\n    }\n    return;\n}\n",
        "token_count": 1470
    },
    "0045a8f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045a8f0(ulong *arg1)\n\n{\n    *arg1 = 0x488d30;\n    if (*(arg1 + 0x11) != '\\0') {\n        if (arg1[2] != 0) {\n            fcn.00469640(arg1[2]);\n        }\n        if (arg1[5] != 0) {\n            fcn.00469640(arg1[5]);\n        }\n        if (arg1[7] != 0) {\n            fcn.00469640(arg1[7]);\n        }\n    }\n    *arg1 = 0x487b50;\n    return;\n}\n",
        "token_count": 145
    },
    "0045a9b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045a9b0(int64_t arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    bool bVar4;\n    ushort uVar5;\n    int64_t *piVar6;\n    char *arg2_00;\n    ulong uVar7;\n    int64_t iVar8;\n    int64_t aiStack168 [2];\n    int64_t aiStack152 [2];\n    int64_t aiStack136 [2];\n    int64_t aiStack120 [2];\n    int64_t aiStack104 [2];\n    int64_t aiStack88 [3];\n    \n    *(arg1 + 200) = 1;\n    piVar6 = fcn.00467740(arg2);\n    (**(*piVar6 + 0x20))(aiStack168, piVar6);\n    *(arg1 + 0x18) = *(aiStack168[0] + -0x18);\n    LOCK();\n    piVar1 = aiStack168[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004477a0(aiStack168[0] + -0x18);\n    }\n    arg2_00 = fcn.00469670(*(arg1 + 0x18));\n    uVar3 = *(arg1 + 0x18);\n    (**(*piVar6 + 0x20))(aiStack152, piVar6);\n    fcn.00423180(aiStack152, arg2_00, uVar3, 0);\n    LOCK();\n    piVar1 = aiStack152[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004477a0(aiStack152[0] + -0x18);\n    }\n    bVar4 = false;\n    *(arg1 + 0x10) = arg2_00;\n    if (*(arg1 + 0x18) != 0) {\n        bVar4 = *arg2_00 - 1U < 0x7e;\n    }\n    *(arg1 + 0x20) = bVar4;\n    (**(*piVar6 + 0x28))(aiStack136, piVar6);\n    *(arg1 + 0x30) = *(aiStack136[0] + -0x18);\n    LOCK();\n    piVar1 = aiStack136[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004401c0(aiStack136[0] + -0x18);\n    }\n    iVar8 = -1;\n    if (*(arg1 + 0x30) < 0x3f80000000000001) {\n        iVar8 = *(arg1 + 0x30) * 2;\n    }\n    uVar7 = fcn.00469670(iVar8);\n    uVar3 = *(arg1 + 0x30);\n    (**(*piVar6 + 0x28))(aiStack120, piVar6);\n    fcn.004222b0(aiStack120, uVar7, uVar3, 0);\n    LOCK();\n    piVar1 = aiStack120[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004401c0(aiStack120[0] + -0x18);\n    }\n    iVar8 = *piVar6;\n    *(arg1 + 0x28) = uVar7;\n    (**(iVar8 + 0x30))(aiStack104, piVar6);\n    *(arg1 + 0x40) = *(aiStack104[0] + -0x18);\n    LOCK();\n    piVar1 = aiStack104[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004401c0(aiStack104[0] + -0x18);\n    }\n    iVar8 = -1;\n    if (*(arg1 + 0x40) < 0x3f80000000000001) {\n        iVar8 = *(arg1 + 0x40) * 2;\n    }\n    uVar7 = fcn.00469670(iVar8);\n    uVar3 = *(arg1 + 0x40);\n    (**(*piVar6 + 0x30))(aiStack88, piVar6);\n    fcn.004222b0(aiStack88, uVar7, uVar3, 0);\n    LOCK();\n    piVar1 = aiStack88[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004401c0(aiStack88[0] + -0x18);\n    }\n    iVar8 = *piVar6;\n    *(arg1 + 0x38) = uVar7;\n    uVar5 = (**(iVar8 + 0x10))(piVar6);\n    *(arg1 + 0x48) = uVar5;\n    uVar5 = (**(*piVar6 + 0x18))(piVar6);\n    *(arg1 + 0x4a) = uVar5;\n    piVar6 = fcn.004672c0(arg2);\n    (**(*piVar6 + 0x58))(piVar6, *0x47f090, *0x47f090 + 0x24, arg1 + 0x4c);\n    (**(*piVar6 + 0x58))(piVar6, *0x47f080, *0x47f080 + 0x1a, arg1 + 0x94);\n    return;\n}\n",
        "token_count": 1366
    },
    "0045ae90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045ae90(ulong *arg1)\n\n{\n    *arg1 = 0x488d50;\n    if (*(arg1 + 0x19) != '\\0') {\n        if (arg1[2] != 0) {\n            fcn.00469640(arg1[2]);\n        }\n        if (arg1[5] != 0) {\n            fcn.00469640(arg1[5]);\n        }\n        if (arg1[7] != 0) {\n            fcn.00469640(arg1[7]);\n        }\n    }\n    *arg1 = 0x487b50;\n    return;\n}\n",
        "token_count": 143
    },
    "0045c050": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045c050(int64_t arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uchar uVar6;\n    bool bVar7;\n    uint uVar8;\n    int64_t *piVar9;\n    char *arg2_00;\n    ulong uVar10;\n    int64_t aiStack200 [2];\n    int64_t aiStack184 [2];\n    int64_t aiStack168 [2];\n    int64_t aiStack152 [2];\n    int64_t aiStack136 [2];\n    int64_t aiStack120 [2];\n    int64_t aiStack104 [2];\n    int64_t aiStack88 [3];\n    \n    *(arg1 + 0x6f) = 1;\n    piVar9 = fcn.00467020(arg2);\n    uVar6 = (**(*piVar9 + 0x10))(piVar9);\n    *(arg1 + 0x21) = uVar6;\n    uVar6 = (**(*piVar9 + 0x18))(piVar9);\n    *(arg1 + 0x22) = uVar6;\n    uVar8 = (**(*piVar9 + 0x40))(piVar9);\n    *(arg1 + 0x58) = uVar8;\n    (**(*piVar9 + 0x20))(aiStack200, piVar9);\n    *(arg1 + 0x18) = *(aiStack200[0] + -0x18);\n    LOCK();\n    piVar1 = aiStack200[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004477a0(aiStack200[0] + -0x18);\n    }\n    arg2_00 = fcn.00469670(*(arg1 + 0x18));\n    uVar3 = *(arg1 + 0x18);\n    (**(*piVar9 + 0x20))(aiStack184, piVar9);\n    fcn.00423180(aiStack184, arg2_00, uVar3, 0);\n    LOCK();\n    piVar1 = aiStack184[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004477a0(aiStack184[0] + -0x18);\n    }\n    bVar7 = false;\n    *(arg1 + 0x10) = arg2_00;\n    if (*(arg1 + 0x18) != 0) {\n        bVar7 = *arg2_00 - 1U < 0x7e;\n    }\n    *(arg1 + 0x20) = bVar7;\n    (**(*piVar9 + 0x28))(aiStack168, piVar9);\n    *(arg1 + 0x30) = *(aiStack168[0] + -0x18);\n    LOCK();\n    piVar1 = aiStack168[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004477a0(aiStack168[0] + -0x18);\n    }\n    uVar10 = fcn.00469670(*(arg1 + 0x30));\n    uVar3 = *(arg1 + 0x30);\n    (**(*piVar9 + 0x28))(aiStack152, piVar9);\n    fcn.00423180(aiStack152, uVar10, uVar3, 0);\n    LOCK();\n    piVar1 = aiStack152[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004477a0(aiStack152[0] + -0x18);\n    }\n    iVar4 = *piVar9;\n    *(arg1 + 0x28) = uVar10;\n    (**(iVar4 + 0x30))(aiStack136, piVar9);\n    *(arg1 + 0x40) = *(aiStack136[0] + -0x18);\n    LOCK();\n    piVar1 = aiStack136[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004477a0(aiStack136[0] + -0x18);\n    }\n    uVar10 = fcn.00469670(*(arg1 + 0x40));\n    uVar3 = *(arg1 + 0x40);\n    (**(*piVar9 + 0x30))(aiStack120, piVar9);\n    fcn.00423180(aiStack120, uVar10, uVar3, 0);\n    LOCK();\n    piVar1 = aiStack120[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004477a0(aiStack120[0] + -0x18);\n    }\n    *(arg1 + 0x38) = uVar10;\n    (**(*piVar9 + 0x38))(aiStack104, piVar9);\n    *(arg1 + 0x50) = *(aiStack104[0] + -0x18);\n    LOCK();\n    piVar1 = aiStack104[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004477a0(aiStack104[0] + -0x18);\n    }\n    uVar10 = fcn.00469670(*(arg1 + 0x50));\n    uVar3 = *(arg1 + 0x50);\n    (**(*piVar9 + 0x38))(aiStack88, piVar9);\n    fcn.00423180(aiStack88, uVar10, uVar3, 0);\n    LOCK();\n    piVar1 = aiStack88[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004477a0(aiStack88[0] + -0x18);\n    }\n    iVar4 = *piVar9;\n    *(arg1 + 0x48) = uVar10;\n    uVar8 = (**(iVar4 + 0x48))(piVar9);\n    *(arg1 + 0x5c) = uVar8;\n    uVar8 = (**(*piVar9 + 0x50))(piVar9);\n    *(arg1 + 0x60) = uVar8;\n    piVar9 = fcn.00467260(arg2);\n    iVar5 = *0x47f0a0;\n    iVar4 = *0x47f0a0 + 0xb;\n    if (*(piVar9 + 7) == '\\x01') {\n        sub.msvcrt.dll_memcpy(arg1 + 100, *0x47f0a0, 0xb);\n    }\n    else {\n        if (*(piVar9 + 7) == '\\0') {\n            fcn.00425590(piVar9);\n        }\n        (**(*piVar9 + 0x38))(piVar9, iVar5, iVar4, arg1 + 100);\n    }\n    return;\n}\n",
        "token_count": 1740
    },
    "0045c6b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045c6b0(ulong *arg1)\n\n{\n    *arg1 = 0x489030;\n    if (*(arg1 + 0x6f) != '\\0') {\n        if (arg1[2] != 0) {\n            fcn.00469640(arg1[2]);\n        }\n        if (arg1[5] != 0) {\n            fcn.00469640(arg1[5]);\n        }\n        if (arg1[7] != 0) {\n            fcn.00469640(arg1[7]);\n        }\n        if (arg1[9] != 0) {\n            fcn.00469640(arg1[9]);\n        }\n    }\n    *arg1 = 0x487b50;\n    return;\n}\n",
        "token_count": 172
    },
    "0045c770": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045c770(int64_t arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uchar uVar6;\n    bool bVar7;\n    uint uVar8;\n    int64_t *piVar9;\n    char *arg2_00;\n    ulong uVar10;\n    int64_t aiStack200 [2];\n    int64_t aiStack184 [2];\n    int64_t aiStack168 [2];\n    int64_t aiStack152 [2];\n    int64_t aiStack136 [2];\n    int64_t aiStack120 [2];\n    int64_t aiStack104 [2];\n    int64_t aiStack88 [3];\n    \n    *(arg1 + 0x6f) = 1;\n    piVar9 = fcn.00467080(arg2);\n    uVar6 = (**(*piVar9 + 0x10))(piVar9);\n    *(arg1 + 0x21) = uVar6;\n    uVar6 = (**(*piVar9 + 0x18))(piVar9);\n    *(arg1 + 0x22) = uVar6;\n    uVar8 = (**(*piVar9 + 0x40))(piVar9);\n    *(arg1 + 0x58) = uVar8;\n    (**(*piVar9 + 0x20))(aiStack200, piVar9);\n    *(arg1 + 0x18) = *(aiStack200[0] + -0x18);\n    LOCK();\n    piVar1 = aiStack200[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004477a0(aiStack200[0] + -0x18);\n    }\n    arg2_00 = fcn.00469670(*(arg1 + 0x18));\n    uVar3 = *(arg1 + 0x18);\n    (**(*piVar9 + 0x20))(aiStack184, piVar9);\n    fcn.00423180(aiStack184, arg2_00, uVar3, 0);\n    LOCK();\n    piVar1 = aiStack184[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004477a0(aiStack184[0] + -0x18);\n    }\n    bVar7 = false;\n    *(arg1 + 0x10) = arg2_00;\n    if (*(arg1 + 0x18) != 0) {\n        bVar7 = *arg2_00 - 1U < 0x7e;\n    }\n    *(arg1 + 0x20) = bVar7;\n    (**(*piVar9 + 0x28))(aiStack168, piVar9);\n    *(arg1 + 0x30) = *(aiStack168[0] + -0x18);\n    LOCK();\n    piVar1 = aiStack168[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004477a0(aiStack168[0] + -0x18);\n    }\n    uVar10 = fcn.00469670(*(arg1 + 0x30));\n    uVar3 = *(arg1 + 0x30);\n    (**(*piVar9 + 0x28))(aiStack152, piVar9);\n    fcn.00423180(aiStack152, uVar10, uVar3, 0);\n    LOCK();\n    piVar1 = aiStack152[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004477a0(aiStack152[0] + -0x18);\n    }\n    iVar4 = *piVar9;\n    *(arg1 + 0x28) = uVar10;\n    (**(iVar4 + 0x30))(aiStack136, piVar9);\n    *(arg1 + 0x40) = *(aiStack136[0] + -0x18);\n    LOCK();\n    piVar1 = aiStack136[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004477a0(aiStack136[0] + -0x18);\n    }\n    uVar10 = fcn.00469670(*(arg1 + 0x40));\n    uVar3 = *(arg1 + 0x40);\n    (**(*piVar9 + 0x30))(aiStack120, piVar9);\n    fcn.00423180(aiStack120, uVar10, uVar3, 0);\n    LOCK();\n    piVar1 = aiStack120[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004477a0(aiStack120[0] + -0x18);\n    }\n    *(arg1 + 0x38) = uVar10;\n    (**(*piVar9 + 0x38))(aiStack104, piVar9);\n    *(arg1 + 0x50) = *(aiStack104[0] + -0x18);\n    LOCK();\n    piVar1 = aiStack104[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004477a0(aiStack104[0] + -0x18);\n    }\n    uVar10 = fcn.00469670(*(arg1 + 0x50));\n    uVar3 = *(arg1 + 0x50);\n    (**(*piVar9 + 0x38))(aiStack88, piVar9);\n    fcn.00423180(aiStack88, uVar10, uVar3, 0);\n    LOCK();\n    piVar1 = aiStack88[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004477a0(aiStack88[0] + -0x18);\n    }\n    iVar4 = *piVar9;\n    *(arg1 + 0x48) = uVar10;\n    uVar8 = (**(iVar4 + 0x48))(piVar9);\n    *(arg1 + 0x5c) = uVar8;\n    uVar8 = (**(*piVar9 + 0x50))(piVar9);\n    *(arg1 + 0x60) = uVar8;\n    piVar9 = fcn.00467260(arg2);\n    iVar5 = *0x47f0a0;\n    iVar4 = *0x47f0a0 + 0xb;\n    if (*(piVar9 + 7) == '\\x01') {\n        sub.msvcrt.dll_memcpy(arg1 + 100, *0x47f0a0, 0xb);\n    }\n    else {\n        if (*(piVar9 + 7) == '\\0') {\n            fcn.00425590(piVar9);\n        }\n        (**(*piVar9 + 0x38))(piVar9, iVar5, iVar4, arg1 + 100);\n    }\n    return;\n}\n",
        "token_count": 1740
    },
    "0045cdd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045cdd0(ulong *arg1)\n\n{\n    *arg1 = 0x489050;\n    if (*(arg1 + 0x6f) != '\\0') {\n        if (arg1[2] != 0) {\n            fcn.00469640(arg1[2]);\n        }\n        if (arg1[5] != 0) {\n            fcn.00469640(arg1[5]);\n        }\n        if (arg1[7] != 0) {\n            fcn.00469640(arg1[7]);\n        }\n        if (arg1[9] != 0) {\n            fcn.00469640(arg1[9]);\n        }\n    }\n    *arg1 = 0x487b50;\n    return;\n}\n",
        "token_count": 171
    },
    "0045ce90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045ce90(int64_t arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    bool bVar4;\n    ushort uVar5;\n    uint uVar6;\n    int64_t *piVar7;\n    char *arg2_00;\n    ulong uVar8;\n    int64_t iVar9;\n    int64_t aiStack200 [2];\n    int64_t aiStack184 [2];\n    int64_t aiStack168 [2];\n    int64_t aiStack152 [2];\n    int64_t aiStack136 [2];\n    int64_t aiStack120 [2];\n    int64_t aiStack104 [2];\n    int64_t aiStack88 [3];\n    \n    *(arg1 + 0x7a) = 1;\n    piVar7 = fcn.004670e0(arg2);\n    uVar5 = (**(*piVar7 + 0x10))(piVar7);\n    *(arg1 + 0x22) = uVar5;\n    uVar5 = (**(*piVar7 + 0x18))(piVar7);\n    *(arg1 + 0x24) = uVar5;\n    uVar6 = (**(*piVar7 + 0x40))(piVar7);\n    *(arg1 + 0x58) = uVar6;\n    (**(*piVar7 + 0x20))(aiStack200, piVar7);\n    *(arg1 + 0x18) = *(aiStack200[0] + -0x18);\n    LOCK();\n    piVar1 = aiStack200[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004477a0(aiStack200[0] + -0x18);\n    }\n    arg2_00 = fcn.00469670(*(arg1 + 0x18));\n    uVar3 = *(arg1 + 0x18);\n    (**(*piVar7 + 0x20))(aiStack184, piVar7);\n    fcn.00423180(aiStack184, arg2_00, uVar3, 0);\n    LOCK();\n    piVar1 = aiStack184[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004477a0(aiStack184[0] + -0x18);\n    }\n    bVar4 = false;\n    *(arg1 + 0x10) = arg2_00;\n    if (*(arg1 + 0x18) != 0) {\n        bVar4 = *arg2_00 - 1U < 0x7e;\n    }\n    *(arg1 + 0x20) = bVar4;\n    (**(*piVar7 + 0x28))(aiStack168, piVar7);\n    *(arg1 + 0x30) = *(aiStack168[0] + -0x18);\n    LOCK();\n    piVar1 = aiStack168[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004401c0(aiStack168[0] + -0x18);\n    }\n    iVar9 = -1;\n    if (*(arg1 + 0x30) < 0x3f80000000000001) {\n        iVar9 = *(arg1 + 0x30) * 2;\n    }\n    uVar8 = fcn.00469670(iVar9);\n    uVar3 = *(arg1 + 0x30);\n    (**(*piVar7 + 0x28))(aiStack152, piVar7);\n    fcn.004222b0(aiStack152, uVar8, uVar3, 0);\n    LOCK();\n    piVar1 = aiStack152[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004401c0(aiStack152[0] + -0x18);\n    }\n    iVar9 = *piVar7;\n    *(arg1 + 0x28) = uVar8;\n    (**(iVar9 + 0x30))(aiStack136, piVar7);\n    *(arg1 + 0x40) = *(aiStack136[0] + -0x18);\n    LOCK();\n    piVar1 = aiStack136[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004401c0(aiStack136[0] + -0x18);\n    }\n    iVar9 = -1;\n    if (*(arg1 + 0x40) < 0x3f80000000000001) {\n        iVar9 = *(arg1 + 0x40) * 2;\n    }\n    uVar8 = fcn.00469670(iVar9);\n    uVar3 = *(arg1 + 0x40);\n    (**(*piVar7 + 0x30))(aiStack120, piVar7);\n    fcn.004222b0(aiStack120, uVar8, uVar3, 0);\n    LOCK();\n    piVar1 = aiStack120[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004401c0(aiStack120[0] + -0x18);\n    }\n    *(arg1 + 0x38) = uVar8;\n    (**(*piVar7 + 0x38))(aiStack104, piVar7);\n    *(arg1 + 0x50) = *(aiStack104[0] + -0x18);\n    LOCK();\n    piVar1 = aiStack104[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004401c0(aiStack104[0] + -0x18);\n    }\n    iVar9 = -1;\n    if (*(arg1 + 0x50) < 0x3f80000000000001) {\n        iVar9 = *(arg1 + 0x50) * 2;\n    }\n    uVar8 = fcn.00469670(iVar9);\n    uVar3 = *(arg1 + 0x50);\n    (**(*piVar7 + 0x38))(aiStack88, piVar7);\n    fcn.004222b0(aiStack88, uVar8, uVar3, 0);\n    LOCK();\n    piVar1 = aiStack88[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004401c0(aiStack88[0] + -0x18);\n    }\n    iVar9 = *piVar7;\n    *(arg1 + 0x48) = uVar8;\n    uVar6 = (**(iVar9 + 0x48))(piVar7);\n    *(arg1 + 0x5c) = uVar6;\n    uVar6 = (**(*piVar7 + 0x50))(piVar7);\n    *(arg1 + 0x60) = uVar6;\n    piVar7 = fcn.004672c0(arg2);\n    (**(*piVar7 + 0x58))(piVar7, *0x47f0a0, *0x47f0a0 + 0xb, arg1 + 100);\n    return;\n}\n",
        "token_count": 1782
    },
    "0045d510": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045d510(ulong *arg1)\n\n{\n    *arg1 = 0x489070;\n    if (*(arg1 + 0x7a) != '\\0') {\n        if (arg1[2] != 0) {\n            fcn.00469640(arg1[2]);\n        }\n        if (arg1[5] != 0) {\n            fcn.00469640(arg1[5]);\n        }\n        if (arg1[7] != 0) {\n            fcn.00469640(arg1[7]);\n        }\n        if (arg1[9] != 0) {\n            fcn.00469640(arg1[9]);\n        }\n    }\n    *arg1 = 0x487b50;\n    return;\n}\n",
        "token_count": 170
    },
    "0045d5d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045d5d0(int64_t arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    bool bVar4;\n    ushort uVar5;\n    uint uVar6;\n    int64_t *piVar7;\n    char *arg2_00;\n    ulong uVar8;\n    int64_t iVar9;\n    int64_t aiStack200 [2];\n    int64_t aiStack184 [2];\n    int64_t aiStack168 [2];\n    int64_t aiStack152 [2];\n    int64_t aiStack136 [2];\n    int64_t aiStack120 [2];\n    int64_t aiStack104 [2];\n    int64_t aiStack88 [3];\n    \n    *(arg1 + 0x7a) = 1;\n    piVar7 = fcn.00467140(arg2);\n    uVar5 = (**(*piVar7 + 0x10))(piVar7);\n    *(arg1 + 0x22) = uVar5;\n    uVar5 = (**(*piVar7 + 0x18))(piVar7);\n    *(arg1 + 0x24) = uVar5;\n    uVar6 = (**(*piVar7 + 0x40))(piVar7);\n    *(arg1 + 0x58) = uVar6;\n    (**(*piVar7 + 0x20))(aiStack200, piVar7);\n    *(arg1 + 0x18) = *(aiStack200[0] + -0x18);\n    LOCK();\n    piVar1 = aiStack200[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004477a0(aiStack200[0] + -0x18);\n    }\n    arg2_00 = fcn.00469670(*(arg1 + 0x18));\n    uVar3 = *(arg1 + 0x18);\n    (**(*piVar7 + 0x20))(aiStack184, piVar7);\n    fcn.00423180(aiStack184, arg2_00, uVar3, 0);\n    LOCK();\n    piVar1 = aiStack184[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004477a0(aiStack184[0] + -0x18);\n    }\n    bVar4 = false;\n    *(arg1 + 0x10) = arg2_00;\n    if (*(arg1 + 0x18) != 0) {\n        bVar4 = *arg2_00 - 1U < 0x7e;\n    }\n    *(arg1 + 0x20) = bVar4;\n    (**(*piVar7 + 0x28))(aiStack168, piVar7);\n    *(arg1 + 0x30) = *(aiStack168[0] + -0x18);\n    LOCK();\n    piVar1 = aiStack168[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004401c0(aiStack168[0] + -0x18);\n    }\n    iVar9 = -1;\n    if (*(arg1 + 0x30) < 0x3f80000000000001) {\n        iVar9 = *(arg1 + 0x30) * 2;\n    }\n    uVar8 = fcn.00469670(iVar9);\n    uVar3 = *(arg1 + 0x30);\n    (**(*piVar7 + 0x28))(aiStack152, piVar7);\n    fcn.004222b0(aiStack152, uVar8, uVar3, 0);\n    LOCK();\n    piVar1 = aiStack152[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004401c0(aiStack152[0] + -0x18);\n    }\n    iVar9 = *piVar7;\n    *(arg1 + 0x28) = uVar8;\n    (**(iVar9 + 0x30))(aiStack136, piVar7);\n    *(arg1 + 0x40) = *(aiStack136[0] + -0x18);\n    LOCK();\n    piVar1 = aiStack136[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004401c0(aiStack136[0] + -0x18);\n    }\n    iVar9 = -1;\n    if (*(arg1 + 0x40) < 0x3f80000000000001) {\n        iVar9 = *(arg1 + 0x40) * 2;\n    }\n    uVar8 = fcn.00469670(iVar9);\n    uVar3 = *(arg1 + 0x40);\n    (**(*piVar7 + 0x30))(aiStack120, piVar7);\n    fcn.004222b0(aiStack120, uVar8, uVar3, 0);\n    LOCK();\n    piVar1 = aiStack120[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004401c0(aiStack120[0] + -0x18);\n    }\n    *(arg1 + 0x38) = uVar8;\n    (**(*piVar7 + 0x38))(aiStack104, piVar7);\n    *(arg1 + 0x50) = *(aiStack104[0] + -0x18);\n    LOCK();\n    piVar1 = aiStack104[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004401c0(aiStack104[0] + -0x18);\n    }\n    iVar9 = -1;\n    if (*(arg1 + 0x50) < 0x3f80000000000001) {\n        iVar9 = *(arg1 + 0x50) * 2;\n    }\n    uVar8 = fcn.00469670(iVar9);\n    uVar3 = *(arg1 + 0x50);\n    (**(*piVar7 + 0x38))(aiStack88, piVar7);\n    fcn.004222b0(aiStack88, uVar8, uVar3, 0);\n    LOCK();\n    piVar1 = aiStack88[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004401c0(aiStack88[0] + -0x18);\n    }\n    iVar9 = *piVar7;\n    *(arg1 + 0x48) = uVar8;\n    uVar6 = (**(iVar9 + 0x48))(piVar7);\n    *(arg1 + 0x5c) = uVar6;\n    uVar6 = (**(*piVar7 + 0x50))(piVar7);\n    *(arg1 + 0x60) = uVar6;\n    piVar7 = fcn.004672c0(arg2);\n    (**(*piVar7 + 0x58))(piVar7, *0x47f0a0, *0x47f0a0 + 0xb, arg1 + 100);\n    return;\n}\n",
        "token_count": 1783
    },
    "0045dc50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045dc50(ulong *arg1)\n\n{\n    *arg1 = 0x489090;\n    if (*(arg1 + 0x7a) != '\\0') {\n        if (arg1[2] != 0) {\n            fcn.00469640(arg1[2]);\n        }\n        if (arg1[5] != 0) {\n            fcn.00469640(arg1[5]);\n        }\n        if (arg1[7] != 0) {\n            fcn.00469640(arg1[7]);\n        }\n        if (arg1[9] != 0) {\n            fcn.00469640(arg1[9]);\n        }\n    }\n    *arg1 = 0x487b50;\n    return;\n}\n",
        "token_count": 170
    },
    "0045df30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045df30(int64_t arg1, ulong arg2, char *arg3, char *arg4)\n\n{\n    char cVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int64_t *arg1_00;\n    int64_t iVar4;\n    int64_t iVar5;\n    char *pcVar6;\n    int64_t in_stack_00000028;\n    int64_t in_stack_00000030;\n    \n    uVar3 = *(arg1 + 0x18) & 0xb0;\n    iVar4 = in_stack_00000028 - in_stack_00000030;\n    if (uVar3 == 0x20) {\n        sub.msvcrt.dll_memcpy(arg3, arg4, in_stack_00000030);\n    // WARNING: Could not recover jumptable at 0x00416d80. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.msvcrt.dll_memset)(arg3 + in_stack_00000030, arg2, iVar4);\n        return;\n    }\n    iVar5 = 0;\n    pcVar6 = arg3;\n    if (uVar3 != 0x10) goto code_r0x00416d40;\n    arg1_00 = fcn.00467260(arg1 + 0xd0);\n    if (*(arg1_00 + 7) == '\\0') {\n        cVar2 = fcn.004256b0(arg1_00, 0x2d);\n    }\n    else {\n        cVar2 = *(arg1_00 + 0x66);\n    }\n    if (*arg4 != cVar2) {\n        if (*(arg1_00 + 7) == '\\0') {\n            fcn.00425590(arg1_00);\n            cVar1 = (**(*arg1_00 + 0x30))(arg1_00);\n            cVar2 = *arg4;\n        }\n        else {\n            cVar1 = *(arg1_00 + 100);\n            cVar2 = *arg4;\n        }\n        if (cVar1 != cVar2) {\n            if (*(arg1_00 + 7) == '\\0') {\n                fcn.00425590(arg1_00);\n                cVar1 = (**(*arg1_00 + 0x30))(arg1_00);\n                cVar2 = *arg4;\n            }\n            else {\n                cVar1 = *(arg1_00 + 0x69);\n            }\n            if ((cVar1 == cVar2) && (1 < in_stack_00000030)) {\n                if (*(arg1_00 + 7) == '\\0') {\n                    fcn.00425590(arg1_00);\n                    cVar2 = (**(*arg1_00 + 0x30))(arg1_00);\n                }\n                else {\n                    cVar2 = *(arg1_00 + 0xb1);\n                }\n                cVar1 = arg4[1];\n                if (cVar1 != cVar2) {\n                    if (*(arg1_00 + 7) == '\\0') {\n                        cVar2 = fcn.004256b0(arg1_00, 0x58);\n                        cVar1 = arg4[1];\n                    }\n                    else {\n                        cVar2 = *(arg1_00 + 0x91);\n                    }\n                    if (cVar1 != cVar2) goto code_r0x0045dfe6;\n                }\n                pcVar6 = arg3 + 2;\n                iVar5 = 2;\n                *arg3 = *arg4;\n                arg3[1] = arg4[1];\n            }\n            else {\ncode_r0x0045dfe6:\n                iVar5 = 0;\n            }\n            goto code_r0x00416d40;\n        }\n    }\n    *arg3 = cVar2;\n    iVar5 = 1;\n    pcVar6 = arg3 + 1;\ncode_r0x00416d40:\n    sub.msvcrt.dll_memset(pcVar6, arg2, iVar4);\n    // WARNING: Could not recover jumptable at 0x00416d40. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.msvcrt.dll_memcpy)(pcVar6 + iVar4, arg4 + iVar5, in_stack_00000030 - iVar5);\n    return;\n}\n",
        "token_count": 972
    },
    "0045e110": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045e110(int64_t arg1, ulong arg2, int16_t *arg3, int16_t *s2)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    int16_t *piVar8;\n    int64_t iVar9;\n    int64_t in_stack_00000028;\n    int64_t in_stack_00000030;\n    \n    uVar3 = *(arg1 + 0x18) & 0xb0;\n    iVar7 = in_stack_00000028 - in_stack_00000030;\n    if (uVar3 == 0x20) {\n        sub.msvcrt.dll_memcpy(arg3, s2, in_stack_00000030 * 2);\n        iVar6 = 0;\n        if (iVar7 != 0) {\n            do {\n                arg3[in_stack_00000030 + iVar6] = arg2;\n                iVar6 = iVar6 + 1;\n            } while (iVar7 != iVar6);\n        }\n        return;\n    }\n    iVar6 = 0;\n    iVar9 = 0;\n    piVar8 = arg3;\n    if (uVar3 == 0x10) {\n        piVar5 = fcn.004672c0(arg1 + 0xd0);\n        iVar1 = (**(*piVar5 + 0x50))(piVar5);\n        iVar2 = *s2;\n        if (iVar2 != iVar1) {\n            iVar1 = (**(*piVar5 + 0x50))(piVar5);\n            iVar2 = *s2;\n            if (iVar2 != iVar1) {\n                iVar2 = (**(*piVar5 + 0x50))(piVar5, 0x30);\n                if (((*s2 == iVar2) && (1 < in_stack_00000030)) &&\n                   ((iVar2 = (**(*piVar5 + 0x50))(piVar5, 0x78),  s2[1] == iVar2 ||\n                    (iVar2 = (**(*piVar5 + 0x50))(piVar5, 0x58),  s2[1] == iVar2)))) {\n                    piVar8 = arg3 + 2;\n                    iVar6 = 4;\n                    iVar9 = 2;\n                    *arg3 = *s2;\n                    arg3[1] = s2[1];\n                }\n                else {\n                    iVar6 = 0;\n                    iVar9 = 0;\n                }\n                goto code_r0x0045e149;\n            }\n        }\n        *arg3 = iVar2;\n        iVar9 = 1;\n        piVar8 = arg3 + 1;\n        iVar6 = 2;\n    }\ncode_r0x0045e149:\n    iVar4 = 0;\n    if (iVar7 != 0) {\n        do {\n            piVar8[iVar4] = arg2;\n            iVar4 = iVar4 + 1;\n        } while (iVar4 != iVar7);\n    }\n    // WARNING: Could not recover jumptable at 0x00416d40. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.msvcrt.dll_memcpy)(piVar8 + iVar7, iVar6 + s2, (in_stack_00000030 - iVar9) * 2);\n    return;\n}\n",
        "token_count": 765
    },
    "0045e8a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045e8a0(void)\n\n{\n    fcn.00419150(0x47f280, 0x45e900);\n    if (*0x47f240 != 0) {\n        return;\n    }\n    fcn.0045ef80(0x47d960, 2);\n    *0x47f240 = 0x47d960;\n    *0x47f290 = 0x47d960;\n    return;\n}\n",
        "token_count": 105
    },
    "0045e9d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045e9d0(int64_t arg1, int64_t *arg2, int64_t arg3)\n\n{\n    int32_t iVar1;\n    ulong arg1_00;\n    ulong *arg1_01;\n    int64_t *piVar2;\n    \n    piVar2 = arg2;\n    if (*0x46b350 == '\\0') {\n        iVar1 = fcn.0046a000(0x46b350);\n        if (iVar1 != 0) {\n            *0x47fd30 = 0xffffffffffffffff;\n            fcn.0046a120(0x46b350);\n        }\n    }\n    iVar1 = fcn.0041bdb0(0x47fd30);\n    if (iVar1 != 0) goto code_r0x0045ea82;\n    if (*(*(arg1 + 0x18) + arg3 * 8) == 0) {\n        LOCK();\n        *(arg2 + 1) = *(arg2 + 1) + 1;\n        *(*(arg1 + 0x18) + arg3 * 8) = arg2;\n    }\n    else if (arg2 != NULL) {\n        (**(*arg2 + 8))(arg2);\n    }\n    iVar1 = fcn.0041b7a0(0x47fd30);\n    if (iVar1 == 0) {\n        return;\n    }\n    arg1_00 = fcn.00420ea0();\n    do {\n        piVar2 = piVar2 + 1;\n        if (piVar2 != NULL) {\n            do {\n                fcn.0040ca50(arg1_00);\ncode_r0x0045ea82:\n                arg1_01 = fcn.00469800(8);\n                *arg1_01 = 0x4879d0;\n                piVar2 = 0x484ec0;\n                arg1_00 = fcn.0046a250(arg1_01, 0x484ec0, 0x420bf0);\n                iVar1 = fcn.0041b7a0(0x47fd30);\n            } while (iVar1 == 0);\n            fcn.00420ea0();\n        }\n        arg1_00 = fcn.00469a20(arg1_00);\n    } while( true );\n}\n",
        "token_count": 515
    },
    "0045eae0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045eae0(int64_t arg1, ulong arg2, int64_t *arg3)\n\n{\n    int64_t *piVar1;\n    int64_t **ppiVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    int64_t iVar11;\n    \n    if (arg3 != NULL) {\n        uVar6 = fcn.00425c30(arg2);\n        if (*(arg1 + 0x10) - 1U < uVar6) {\n            uVar3 = uVar6 + 4;\n            iVar4 = *(arg1 + 8);\n            iVar7 = -1;\n            if (uVar3 < 0xfe0000000000001) {\n                iVar7 = uVar3 * 8;\n            }\n            iVar7 = fcn.00469670(iVar7);\n            uVar8 = *(arg1 + 0x10);\n            iVar10 = 0;\n            if (uVar8 != 0) {\n                do {\n                    *(iVar7 + iVar10) = *(*(arg1 + 8) + iVar10);\n                    iVar10 = iVar10 + 8;\n                } while (iVar10 != uVar8 * 8);\n            }\n            if (uVar8 < uVar3) {\n                do {\n                    *(iVar7 + uVar8 * 8) = 0;\n                    uVar8 = uVar8 + 1;\n                } while (uVar3 != uVar8);\n            }\n            iVar10 = *(arg1 + 0x18);\n            iVar9 = -1;\n            if (uVar3 < 0xfe0000000000001) {\n                iVar9 = uVar3 * 8;\n            }\n            iVar9 = fcn.00469670(iVar9);\n            uVar8 = *(arg1 + 0x10);\n            iVar11 = 0;\n            if (uVar8 != 0) {\n                do {\n                    *(iVar9 + iVar11) = *(*(arg1 + 0x18) + iVar11);\n                    iVar11 = iVar11 + 8;\n                } while (iVar11 != uVar8 * 8);\n            }\n            if (uVar8 < uVar3) {\n                do {\n                    *(iVar9 + uVar8 * 8) = 0;\n                    uVar8 = uVar8 + 1;\n                } while (uVar3 != uVar8);\n            }\n            *(arg1 + 0x10) = uVar3;\n            *(arg1 + 8) = iVar7;\n            *(arg1 + 0x18) = iVar9;\n            if (iVar4 != 0) {\n                fcn.00469640(iVar4);\n            }\n            if (iVar10 != 0) {\n                fcn.00469640(iVar10);\n            }\n        }\n        LOCK();\n        *(arg3 + 1) = *(arg3 + 1) + 1;\n        ppiVar2 = *(arg1 + 8) + uVar6 * 8;\n        piVar5 = *ppiVar2;\n        if (piVar5 != NULL) {\n            LOCK();\n            piVar1 = piVar5 + 1;\n            *piVar1 = *piVar1 + -1;\n            if (*piVar1 == 0) {\n                (**(*piVar5 + 8))();\n            }\n        }\n        iVar4 = *(arg1 + 0x10);\n        *ppiVar2 = arg3;\n        if (iVar4 != 0) {\n            uVar6 = 0;\n            do {\n                piVar5 = *(*(arg1 + 0x18) + uVar6 * 8);\n                if (piVar5 != NULL) {\n                    LOCK();\n                    piVar1 = piVar5 + 1;\n                    *piVar1 = *piVar1 + -1;\n                    if (*piVar1 == 0) {\n                        (**(*piVar5 + 8))();\n                    }\n                    *(*(arg1 + 0x18) + uVar6 * 8) = 0;\n                }\n                uVar6 = uVar6 + 1;\n            } while (uVar6 <= *(arg1 + 0x10) && *(arg1 + 0x10) != uVar6);\n        }\n    }\n    return;\n}\n",
        "token_count": 992
    },
    "00460040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00460040(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    \n    iVar3 = *(arg1 + 8);\n    if (iVar3 != 0) {\n        if (*(arg1 + 0x10) != 0) {\n            uVar4 = 0;\n            do {\n                piVar2 = *(iVar3 + uVar4 * 8);\n                if (piVar2 != NULL) {\n                    LOCK();\n                    piVar1 = piVar2 + 1;\n                    *piVar1 = *piVar1 + -1;\n                    if (*piVar1 == 0) {\n                        (**(*piVar2 + 8))(piVar2);\n                    }\n                    iVar3 = *(arg1 + 8);\n                }\n                uVar4 = uVar4 + 1;\n            } while (uVar4 <= *(arg1 + 0x10) && *(arg1 + 0x10) != uVar4);\n            if (iVar3 == 0) goto code_r0x0046009a;\n        }\n        fcn.00469640(iVar3);\n    }\ncode_r0x0046009a:\n    iVar3 = *(arg1 + 0x18);\n    if (iVar3 != 0) {\n        if (*(arg1 + 0x10) != 0) {\n            uVar4 = 0;\n            do {\n                piVar2 = *(iVar3 + uVar4 * 8);\n                if (piVar2 != NULL) {\n                    LOCK();\n                    piVar1 = piVar2 + 1;\n                    *piVar1 = *piVar1 + -1;\n                    if (*piVar1 == 0) {\n                        (**(*piVar2 + 8))(piVar2);\n                    }\n                    iVar3 = *(arg1 + 0x18);\n                }\n                uVar4 = uVar4 + 1;\n            } while (uVar4 <= *(arg1 + 0x10) && *(arg1 + 0x10) != uVar4);\n            if (iVar3 == 0) goto code_r0x004600ea;\n        }\n        fcn.00469640(iVar3);\n    }\ncode_r0x004600ea:\n    iVar3 = *(arg1 + 0x20);\n    iVar5 = 0;\n    if (iVar3 != 0) {\n        do {\n            if (*(iVar3 + iVar5) != 0) {\n                fcn.00469640(*(iVar3 + iVar5));\n                iVar3 = *(arg1 + 0x20);\n            }\n            iVar5 = iVar5 + 8;\n        } while (iVar5 != 0x30);\n        if (iVar3 != 0) {\n            if (iVar3 != 0) {\n    // WARNING: Could not recover jumptable at 0x00416d90. Too many branches\n    // WARNING: Treating indirect jump as call\n                (*_sym.imp.msvcrt.dll_free)();\n                return;\n            }\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 697
    },
    "00461b50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00461b50(void)\n\n{\n    LOCK();\n    if (*0x47f320 != 2) {\n        *0x47f320 = *0x47f320 + -1;\n        return;\n    }\n    *0x47f320 = *0x47f320 + -1;\n    fcn.004455f0(0x47f760);\n    fcn.004455f0(0x47f520);\n    fcn.004455f0(0x47f640);\n    fcn.00454150(0x47fbe0);\n    fcn.00454150(0x47f9a0);\n    fcn.00454150(0x47fac0);\n    return;\n}\n",
        "token_count": 162
    },
    "00463cf0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00463cf0(uchar *arg1, ulong arg2, int64_t arg3, ulong arg4)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    char in_stack_00000028;\n    \n    uVar5 = arg2;\n    puVar1 = arg1;\n    if (in_stack_00000028 == '\\0') {\n        if ((arg4 & 0x4a) == 0x40) {\n            do {\n                uVar3 = uVar5;\n                uVar4 = uVar3 >> 3;\n                uVar5 = uVar4;\n                puVar1 = puVar1 + -1;\n                *puVar1 = *(arg3 + 4 + (uVar3 & 7));\n            } while (uVar4 != 0);\n        }\n        else {\n            do {\n                uVar3 = uVar5;\n                uVar4 = uVar3 >> 4;\n                uVar5 = uVar4;\n                puVar1 = puVar1 + -1;\n                *puVar1 = *(arg3 + (uVar3 & 0xf) + (-((arg4 & 0x4000) == 0) & 0xfffffff0) + 0x14);\n            } while (uVar4 != 0);\n        }\n    }\n    else {\n        do {\n            iVar2 = uVar5;\n            puVar1 = puVar1 + -1;\n            uVar5 = uVar5 / 10;\n            *puVar1 = *(arg3 + iVar2 + uVar5 * -10 + 4);\n        } while (uVar5 != 0);\n    }\n    return arg1 - puVar1;\n}\n",
        "token_count": 403
    },
    "00463da0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00463da0(uchar *arg1, uint64_t arg2, int64_t arg3, ulong arg4)\n\n{\n    uint64_t uVar1;\n    uchar *puVar2;\n    char in_stack_00000028;\n    \n    puVar2 = arg1;\n    if (in_stack_00000028 == '\\0') {\n        if ((arg4 & 0x4a) == 0x40) {\n            do {\n                uVar1 = arg2 >> 3;\n                puVar2 = puVar2 + -1;\n                *puVar2 = *(arg3 + 4 + (arg2 & 7));\n                arg2 = uVar1;\n            } while (uVar1 != 0);\n        }\n        else {\n            do {\n                uVar1 = arg2 >> 4;\n                puVar2 = puVar2 + -1;\n                *puVar2 = *(arg3 + 0x14 + (-((arg4 & 0x4000) == 0) & 0xfffffffffffffff0) + (arg2 & 0xf));\n                arg2 = uVar1;\n            } while (uVar1 != 0);\n        }\n    }\n    else {\n        do {\n            puVar2 = puVar2 + -1;\n            uVar1 = arg2 / 10;\n            *puVar2 = *(arg3 + 4 + arg2 % 10);\n            arg2 = uVar1;\n        } while (uVar1 != 0);\n    }\n    return arg1 - puVar2;\n}\n",
        "token_count": 344
    },
    "00463e60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00463e60(ushort *arg1, ulong arg2, int64_t arg3, ulong arg4)\n\n{\n    ushort *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    char in_stack_00000028;\n    \n    uVar5 = arg2;\n    puVar1 = arg1;\n    if (in_stack_00000028 == '\\0') {\n        if ((arg4 & 0x4a) == 0x40) {\n            do {\n                uVar3 = uVar5;\n                uVar4 = uVar3 >> 3;\n                uVar5 = uVar4;\n                puVar1 = puVar1 + -1;\n                *puVar1 = *(arg3 + 8 + (uVar3 & 7) * 2);\n            } while (uVar4 != 0);\n        }\n        else {\n            do {\n                uVar3 = uVar5;\n                uVar4 = uVar3 >> 4;\n                uVar5 = uVar4;\n                puVar1 = puVar1 + -1;\n                *puVar1 = *(arg3 + ((uVar3 & 0xf) + (-((arg4 & 0x4000) == 0) & 0xfffffff0) + 0x14) * 2);\n            } while (uVar4 != 0);\n        }\n    }\n    else {\n        do {\n            iVar2 = uVar5;\n            puVar1 = puVar1 + -1;\n            uVar5 = uVar5 / 10;\n            *puVar1 = *(arg3 + (iVar2 + uVar5 * -10 + 4) * 2);\n        } while (uVar5 != 0);\n    }\n    return arg1 - puVar1 >> 1;\n}\n",
        "token_count": 419
    },
    "00463f10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00463f10(ushort *arg1, uint64_t arg2, int64_t arg3, ulong arg4)\n\n{\n    uint64_t uVar1;\n    ushort *puVar2;\n    char in_stack_00000028;\n    \n    puVar2 = arg1;\n    if (in_stack_00000028 == '\\0') {\n        if ((arg4 & 0x4a) == 0x40) {\n            do {\n                uVar1 = arg2 >> 3;\n                puVar2 = puVar2 + -1;\n                *puVar2 = *(arg3 + 8 + (arg2 & 7) * 2);\n                arg2 = uVar1;\n            } while (uVar1 != 0);\n        }\n        else {\n            do {\n                uVar1 = arg2 >> 4;\n                puVar2 = puVar2 + -1;\n                *puVar2 = *(arg3 + ((arg2 & 0xf) + (-((arg4 & 0x4000) == 0) & 0xfffffffffffffff0) + 0x14) * 2);\n                arg2 = uVar1;\n            } while (uVar1 != 0);\n        }\n    }\n    else {\n        do {\n            puVar2 = puVar2 + -1;\n            uVar1 = arg2 / 10;\n            *puVar2 = *(arg3 + 8 + (arg2 % 10) * 2);\n            arg2 = uVar1;\n        } while (uVar1 != 0);\n    }\n    return arg1 - puVar2 >> 1;\n}\n",
        "token_count": 361
    },
    "004642f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004642f0(char *arg1, double *arg2, uint *arg3)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t arg1_00;\n    double dVar3;\n    char *apcStack64 [2];\n    \n    uVar1 = sub.msvcrt.dll_setlocale(0, 0);\n    iVar2 = sub.msvcrt.dll_strlen(uVar1);\n    arg1_00 = fcn.00469670(iVar2 + 1);\n    sub.msvcrt.dll_memcpy(arg1_00, uVar1, iVar2 + 1);\n    sub.msvcrt.dll_setlocale(0, 0x480bd0);\n    dVar3 = fcn.0040d490(arg1, apcStack64);\n    *arg2 = dVar3;\n    if ((apcStack64[0] == arg1) || (*apcStack64[0] != '\\0')) {\n        *arg2 = 0.0;\n        *arg3 = 4;\n    }\n    else if ((*0x480c50 < dVar3) || (dVar3 < *0x480c58)) {\n        *arg2 = ~-(0.0 < dVar3) & *0x480c58 | *0x480c50 & -(0.0 < dVar3);\n        *arg3 = 4;\n    }\n    sub.msvcrt.dll_setlocale(0, arg1_00);\n    if (arg1_00 != 0) {\n        fcn.00469640(arg1_00);\n    }\n    return;\n}\n",
        "token_count": 355
    },
    "00464410": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00464410(char *arg1, float10 *arg2, uint *arg3)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t arg1_00;\n    float10 afStack88 [2];\n    char *apcStack64 [2];\n    \n    uVar1 = sub.msvcrt.dll_setlocale(0, 0);\n    iVar2 = sub.msvcrt.dll_strlen(uVar1);\n    arg1_00 = fcn.00469670(iVar2 + 1);\n    sub.msvcrt.dll_memcpy(arg1_00, uVar1, iVar2 + 1);\n    sub.msvcrt.dll_setlocale(0, 0x480bd0);\n    fcn.0040de00(afStack88, arg1, apcStack64);\n    *arg2 = afStack88[0];\n    if ((apcStack64[0] == arg1) || (*apcStack64[0] != '\\0')) {\n        *arg2 = 0;\n        *arg3 = 4;\n    }\n    else if ((*0x480c60 < afStack88[0]) || (afStack88[0] < *0x480c70)) {\n        if (afStack88[0] <= 0) {\n            *arg2 = *0x480c70;\n        }\n        else {\n            *arg2 = *0x480c60;\n        }\n        *arg3 = 4;\n    }\n    sub.msvcrt.dll_setlocale(0, arg1_00);\n    if (arg1_00 != 0) {\n        fcn.00469640(arg1_00);\n    }\n    return;\n}\n",
        "token_count": 370
    },
    "00464530": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00464530(char *arg1, float *arg2, uint *arg3)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t arg1_00;\n    float fVar3;\n    char *apcStack64 [2];\n    \n    uVar1 = sub.msvcrt.dll_setlocale(0, 0);\n    iVar2 = sub.msvcrt.dll_strlen(uVar1);\n    arg1_00 = fcn.00469670(iVar2 + 1);\n    sub.msvcrt.dll_memcpy(arg1_00, uVar1, iVar2 + 1);\n    sub.msvcrt.dll_setlocale(0, 0x480bd0);\n    fVar3 = fcn.0040d3e0(arg1, apcStack64);\n    *arg2 = fVar3;\n    if ((apcStack64[0] == arg1) || (*apcStack64[0] != '\\0')) {\n        *arg2 = 0.0;\n        *arg3 = 4;\n    }\n    else if ((*0x480c48 < fVar3) || (fVar3 < *0x480c4c)) {\n        *arg2 = ~-(0.0 < fVar3) & *0x480c4c | *0x480c48 & -(0.0 < fVar3);\n        *arg3 = 4;\n    }\n    sub.msvcrt.dll_setlocale(0, arg1_00);\n    if (arg1_00 != 0) {\n        fcn.00469640(arg1_00);\n    }\n    return;\n}\n",
        "token_count": 358
    },
    "00464690": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00464690(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x46b360 == '\\0') {\n        iVar1 = fcn.0046a000(0x46b360);\n        if (iVar1 != 0) {\n            *0x47fd40 = 0;\n            fcn.00458b60(0x47fd40);\n            *0x47fd40 = 0x4876b0;\n            fcn.0046a120(0x46b360);\n            fcn.0040b1e0(0x46a490);\n            return 0x47fd40;\n        }\n    }\n    return 0x47fd40;\n}\n",
        "token_count": 157
    },
    "00464810": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.00464810(int64_t *arg1, int64_t *arg2, int64_t arg3)\n\n{\n    uint32_t *puVar1;\n    int64_t *piVar2;\n    char cVar3;\n    uchar uVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    int64_t iVar8;\n    int64_t *piVar9;\n    int64_t iVar10;\n    int64_t iVar11;\n    bool bVar12;\n    char acStack88 [8];\n    int64_t *piStack80;\n    \n    piVar9 = arg1;\n    fcn.00445a90(acStack88, arg1);\n    if (acStack88[0] == '\\0') goto code_r0x0046488d;\n    iVar6 = *(*arg1 + -0x18);\n    iVar8 = arg1 + iVar6;\n    iVar11 = *(iVar8 + 0x10);\n    if (arg3 < iVar11) {\n        bVar12 = (*(iVar8 + 0x18) & 0xb0) == 0x20;\n        if (!bVar12) {\n            iVar10 = iVar11 - arg3;\n            if (*(iVar8 + 0xe1) != '\\0') {\n                uVar4 = *(iVar8 + 0xe0);\ncode_r0x00464a5b:\n                if (0 < iVar10) {\n                    do {\n                        iVar8 = *(arg1 + iVar6 + 0xe8);\n                        if (*(iVar8 + 0x28) < *(iVar8 + 0x30)) {\n                            **(iVar8 + 0x28) = uVar4;\n                            *(iVar8 + 0x28) = *(iVar8 + 0x28) + 1;\n                        }\n                        else {\n                            iVar5 = fcn.0046a4d0(iVar8);\n                            if (iVar5 == -1) {\n                                iVar8 = arg1 + *(*arg1 + -0x18);\n                                fcn.00462d30(iVar8, *(iVar8 + 0x20) | 1);\n                                iVar6 = *(*arg1 + -0x18);\n                                iVar8 = arg1 + iVar6;\n                                goto code_r0x00464875;\n                            }\n                        }\n                        iVar10 = iVar10 + -1;\n                        iVar6 = *(*arg1 + -0x18);\n                    } while (iVar10 != 0);\n                    iVar8 = arg1 + iVar6;\n                }\n                goto code_r0x00464875;\n            }\n            piVar2 = *(iVar8 + 0xf0);\n            if (piVar2 != NULL) {\n                if (*(piVar2 + 7) == '\\0') {\n                    fcn.00425590(piVar2);\n                    uVar4 = (**(*piVar2 + 0x30))(piVar2, 0x20);\n                }\n                else {\n                    uVar4 = *(piVar2 + 0x59);\n                }\n                *(iVar8 + 0xe0) = uVar4;\n                iVar6 = *arg1;\n                *(iVar8 + 0xe1) = 1;\n                iVar6 = *(iVar6 + -0x18);\n                iVar8 = arg1 + iVar6;\n                goto code_r0x00464a5b;\n            }\ncode_r0x00464b55:\n            uVar7 = fcn.00464f90();\n            if (piVar9 == 0x1) {\n                fcn.00469950(uVar7);\n                arg1 = arg1 + *(*arg1 + -0x18);\n                *(arg1 + 4) = *(arg1 + 4) | 1;\n                if ((*(arg1 + 0x1c) & 1) == 0) goto code_r0x00464bb9;\n                fcn.0046a200();\n            }\n            fcn.00469950(uVar7);\n            iVar8 = *(*arg1 + -0x18);\n            puVar1 = arg1 + iVar8 + 0x20;\n            *puVar1 = *puVar1 | 1;\n            if ((*(arg1 + iVar8 + 0x1c) & 1) != 0) {\n                uVar7 = fcn.0046a200();\n                fcn.00469b80();\n                do {\n                    fcn.00445b70(acStack88);\n                    fcn.0040ca50(uVar7);\ncode_r0x00464bb9:\n                    uVar7 = fcn.0046a200();\n                } while( true );\n            }\n            fcn.00469b80();\n            goto code_r0x0046488d;\n        }\ncode_r0x00464875:\n        piVar9 = *(iVar8 + 0x20);\n        if (*(iVar8 + 0x20) == 0) {\n            iVar6 = (**(**(iVar8 + 0xe8) + 0x60))(*(iVar8 + 0xe8), arg2, arg3);\n            iVar8 = *arg1;\n            if (arg3 != iVar6) {\n                iVar8 = arg1 + *(iVar8 + -0x18);\n                arg2 = *(iVar8 + 0x20) | 1;\n                fcn.00462d30(iVar8, arg2);\n                iVar8 = *arg1;\n            }\n            iVar6 = *(iVar8 + -0x18);\n            iVar8 = arg1 + iVar6;\n            piVar9 = arg2;\n        }\n        if ((bVar12) && (*(iVar8 + 0x20) == 0)) {\n            iVar11 = iVar11 - arg3;\n            if (*(iVar8 + 0xe1) == '\\0') {\n                piVar2 = *(iVar8 + 0xf0);\n                if (piVar2 == NULL) {\n                    fcn.00464f90();\n                    goto code_r0x00464b55;\n                }\n                if (*(piVar2 + 7) == '\\0') {\n                    fcn.00425590(piVar2);\n                    uVar4 = (**(*piVar2 + 0x30))(piVar2, 0x20);\n                }\n                else {\n                    uVar4 = *(piVar2 + 0x59);\n                }\n                *(iVar8 + 0xe0) = uVar4;\n                iVar6 = *arg1;\n                *(iVar8 + 0xe1) = 1;\n                iVar6 = *(iVar6 + -0x18);\n                iVar8 = arg1 + iVar6;\n            }\n            else {\n                uVar4 = *(iVar8 + 0xe0);\n            }\n            if (0 < iVar11) {\n                while( true ) {\n                    iVar8 = *(arg1 + iVar6 + 0xe8);\n                    if (*(iVar8 + 0x28) < *(iVar8 + 0x30)) {\n                        **(iVar8 + 0x28) = uVar4;\n                        *(iVar8 + 0x28) = *(iVar8 + 0x28) + 1;\n                    }\n                    else {\n                        iVar5 = fcn.0046a4d0(iVar8);\n                        if (iVar5 == -1) {\n                            iVar8 = *arg1;\n                            goto code_r0x00464976;\n                        }\n                    }\n                    iVar11 = iVar11 + -1;\n                    iVar8 = *arg1;\n                    if (iVar11 == 0) break;\n                    iVar6 = *(iVar8 + -0x18);\n                }\n                goto code_r0x0046498b;\n            }\n        }\n    }\n    else {\n        iVar11 = (**(**(iVar8 + 0xe8) + 0x60))(*(iVar8 + 0xe8), arg2, arg3);\n        iVar8 = *arg1;\n        if (arg3 != iVar11) {\ncode_r0x00464976:\n            iVar8 = arg1 + *(iVar8 + -0x18);\n            fcn.00462d30(iVar8, *(iVar8 + 0x20) | 1);\n            iVar8 = *arg1;\n        }\ncode_r0x0046498b:\n        iVar8 = arg1 + *(iVar8 + -0x18);\n    }\n    *(iVar8 + 0x10) = 0;\ncode_r0x0046488d:\n    piVar9 = piStack80;\n    iVar8 = *(*piStack80 + -0x18);\n    if (((((*(piStack80 + iVar8 + 0x19) & 0x20) != 0) && (cVar3 = fcn.004651f0(),  cVar3 == '\\0')) &&\n        (piVar9 = *(piVar9 + iVar8 + 0xe8),  piVar9 != NULL)) && (iVar5 = (**(*piVar9 + 0x30))(),  iVar5 == -1)) {\n        iVar8 = piStack80 + *(*piStack80 + -0x18);\n        fcn.00462d30(iVar8, *(iVar8 + 0x20) | 1);\n    }\n    return arg1;\n}\n",
        "token_count": 2024
    },
    "00464be0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t ** fcn.00464be0(int64_t **arg1, int64_t **arg2, int64_t arg3)\n\n{\n    uint32_t *puVar1;\n    int16_t *piVar2;\n    uint16_t *puVar3;\n    char cVar4;\n    int16_t iVar5;\n    uint16_t uVar6;\n    uint16_t uVar7;\n    int16_t iVar8;\n    int32_t iVar9;\n    int64_t *piVar10;\n    int64_t **arg1_00;\n    int64_t iVar11;\n    int64_t **arg2_00;\n    int64_t iVar12;\n    int64_t iVar13;\n    bool bVar14;\n    char acStack88 [8];\n    int64_t *piStack80;\n    \n    arg2_00 = arg1;\n    fcn.004545f0(acStack88, arg1);\n    if (acStack88[0] == '\\0') goto code_r0x00464c5f;\n    piVar10 = (*arg1)[-3];\n    iVar11 = arg1 + piVar10;\n    iVar13 = *(iVar11 + 0x10);\n    if (arg3 < iVar13) {\n        bVar14 = (*(iVar11 + 0x18) & 0xb0) == 0x20;\n        if (!bVar14) {\n            iVar12 = iVar13 - arg3;\n            if (*(iVar11 + 0xe2) != '\\0') {\n                uVar6 = *(iVar11 + 0xe0);\ncode_r0x00464dca:\n                if (0 < iVar12) {\n                    do {\n                        iVar11 = *(arg1 + 0x1d + piVar10);\n                        puVar3 = *(iVar11 + 0x28);\n                        if (puVar3 < *(iVar11 + 0x30)) {\n                            *puVar3 = uVar6;\n                            *(iVar11 + 0x28) = puVar3 + 1;\n                            uVar7 = uVar6;\n                        }\n                        else {\n                            arg2_00 = uVar6;\n                            uVar7 = fcn.0046a4e0(iVar11);\n                        }\n                        if (uVar7 == 0xffff) {\n                            iVar11 = arg1 + (*arg1)[-3];\n                            arg2_00 = *(iVar11 + 0x20) | 1;\n                            fcn.004634a0(iVar11, arg2_00);\n                            piVar10 = (*arg1)[-3];\n                            iVar11 = arg1 + piVar10;\n                            goto code_r0x00464c45;\n                        }\n                        iVar12 = iVar12 + -1;\n                        piVar10 = (*arg1)[-3];\n                    } while (iVar12 != 0);\n                    iVar11 = arg1 + piVar10;\n                }\n                goto code_r0x00464c45;\n            }\n            piVar10 = *(iVar11 + 0xf0);\n            if (piVar10 != NULL) {\n                uVar6 = (**(*piVar10 + 0x50))(piVar10, 0x20);\n                arg2_00 = *arg1;\n                *(iVar11 + 0xe0) = uVar6;\n                *(iVar11 + 0xe2) = 1;\n                piVar10 = arg2_00[-3];\n                iVar11 = arg1 + piVar10;\n                goto code_r0x00464dca;\n            }\ncode_r0x00464f2e:\n            arg1 = fcn.00464f90();\n            fcn.00469b80();\n            while( true ) {\n                fcn.004546d0(acStack88);\n                arg1_00 = arg1;\n                fcn.0040ca50(arg1);\ncode_r0x00464f4b:\n                fcn.0046a200();\ncode_r0x00464f50:\n                fcn.00469950(arg1_00);\n                iVar11 = (*arg1)[-3];\n                puVar1 = arg1 + iVar11 + 0x20;\n                *puVar1 = *puVar1 | 1;\n                if ((*(arg1 + iVar11 + 0x1c) & 1) == 0) break;\n                arg1 = fcn.0046a200();\n            }\n            fcn.00469b80();\n            goto code_r0x00464c5f;\n        }\ncode_r0x00464c45:\n        if (*(iVar11 + 0x20) == 0) {\n            iVar11 = (**(**(iVar11 + 0xe8) + 0x60))(*(iVar11 + 0xe8), arg2, arg3);\n            piVar10 = *arg1;\n            if (arg3 != iVar11) {\n                arg2 = *(arg1 + piVar10[-3] + 0x20) | 1;\n                fcn.004634a0(arg1 + piVar10[-3], arg2);\n                piVar10 = *arg1;\n            }\n            piVar10 = piVar10[-3];\n            iVar11 = arg1 + piVar10;\n            arg2_00 = arg2;\n        }\n        if ((bVar14) && (*(iVar11 + 0x20) == 0)) {\n            iVar13 = iVar13 - arg3;\n            if (*(iVar11 + 0xe2) == '\\0') {\n                piVar10 = *(iVar11 + 0xf0);\n                if (piVar10 == NULL) {\n                    arg1_00 = fcn.00464f90();\n                    if (arg2_00 != 0x1) goto code_r0x00464f50;\n                    fcn.00469950(arg1_00);\n                    arg1 = arg1 + (*arg1)[-3];\n                    *(arg1 + 4) = *(arg1 + 4) | 1;\n                    if ((*(arg1 + 0x1c) & 1) == 0) goto code_r0x00464f4b;\n                    fcn.0046a200();\n                    goto code_r0x00464f2e;\n                }\n                iVar5 = (**(*piVar10 + 0x50))(piVar10, 0x20);\n                piVar10 = *arg1;\n                *(iVar11 + 0xe0) = iVar5;\n                *(iVar11 + 0xe2) = 1;\n                piVar10 = piVar10[-3];\n                iVar11 = arg1 + piVar10;\n            }\n            else {\n                iVar5 = *(iVar11 + 0xe0);\n            }\n            if (0 < iVar13) {\n                while( true ) {\n                    iVar11 = *(arg1 + 0x1d + piVar10);\n                    piVar2 = *(iVar11 + 0x28);\n                    if (piVar2 < *(iVar11 + 0x30)) {\n                        *piVar2 = iVar5;\n                        *(iVar11 + 0x28) = piVar2 + 1;\n                        iVar8 = iVar5;\n                    }\n                    else {\n                        iVar8 = fcn.0046a4e0(iVar11);\n                    }\n                    piVar10 = *arg1;\n                    if (iVar8 == -1) goto code_r0x00464d17;\n                    iVar13 = iVar13 + -1;\n                    if (iVar13 == 0) break;\n                    piVar10 = piVar10[-3];\n                }\n                goto code_r0x00464d2c;\n            }\n        }\n    }\n    else {\n        iVar11 = (**(**(iVar11 + 0xe8) + 0x60))(*(iVar11 + 0xe8), arg2, arg3);\n        piVar10 = *arg1;\n        if (arg3 != iVar11) {\ncode_r0x00464d17:\n            fcn.004634a0(arg1 + piVar10[-3], *(arg1 + piVar10[-3] + 0x20) | 1);\n            piVar10 = *arg1;\n        }\ncode_r0x00464d2c:\n        iVar11 = arg1 + piVar10[-3];\n    }\n    *(iVar11 + 0x10) = 0;\ncode_r0x00464c5f:\n    piVar10 = piStack80;\n    iVar11 = *(*piStack80 + -0x18);\n    if (((((*(piStack80 + iVar11 + 0x19) & 0x20) != 0) && (cVar4 = fcn.004651f0(),  cVar4 == '\\0')) &&\n        (piVar10 = *(piVar10 + iVar11 + 0xe8),  piVar10 != NULL)) && (iVar9 = (**(*piVar10 + 0x30))(),  iVar9 == -1)) {\n        iVar11 = piStack80 + *(*piStack80 + -0x18);\n        fcn.004634a0(iVar11, *(iVar11 + 0x20) | 1);\n    }\n    return arg1;\n}\n",
        "token_count": 1996
    },
    "00465730": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00465730(int64_t *arg1, int64_t *arg2, uchar *arg3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    \n    puVar5 = arg1[2];\n    puVar4 = arg1[3];\n    *arg3 = 1;\n    if (puVar5 < puVar4) {\n        uVar1 = *puVar5;\n    }\n    else {\n        uVar1 = (**(*arg1 + 0x48))();\n        if (uVar1 == 0xffffffff) {\n            return 0;\n        }\n        puVar5 = arg1[2];\n    }\n    iVar6 = 0;\n    do {\n        iVar7 = arg1[3] - puVar5;\n        if (iVar7 < 2) {\n            if (arg2[5] < arg2[6]) {\n                *arg2[5] = uVar1;\n                arg2[5] = arg2[5] + 1;\n            }\n            else {\n                iVar2 = (**(*arg2 + 0x68))(arg2, uVar1 & 0xff);\n                if (iVar2 == -1) goto code_r0x004657f0;\n            }\n            puVar4 = arg1[3];\n            iVar6 = iVar6 + 1;\n            if (arg1[2] < puVar4) {\n                puVar5 = arg1[2] + 1;\n                arg1[2] = puVar5;\n            }\n            else {\n                iVar2 = (**(*arg1 + 0x50))();\n                if (iVar2 == -1) {\n                    return iVar6;\n                }\n                puVar5 = arg1[2];\n                puVar4 = arg1[3];\n            }\n            if (puVar4 <= puVar5) goto code_r0x00465778;\n            uVar1 = *puVar5;\n        }\n        else {\n            iVar3 = (**(*arg2 + 0x60))(arg2, puVar5, iVar7);\n            arg1[2] = arg1[2] + iVar3;\n            iVar6 = iVar6 + iVar3;\n            if (iVar3 < iVar7) {\ncode_r0x004657f0:\n                *arg3 = 0;\n                return iVar6;\n            }\ncode_r0x00465778:\n            uVar1 = (**(*arg1 + 0x48))();\n        }\n        if (uVar1 == 0xffffffff) {\n            return iVar6;\n        }\n        puVar5 = arg1[2];\n    } while( true );\n}\n",
        "token_count": 614
    },
    "00465840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00465840(int64_t *arg1, int64_t *arg2, uchar *arg3)\n\n{\n    int16_t *piVar1;\n    int16_t *piVar2;\n    int16_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    \n    piVar1 = arg1[2];\n    piVar2 = arg1[3];\n    *arg3 = 1;\n    if (piVar1 < piVar2) {\n        iVar3 = *piVar1;\n    }\n    else {\n        iVar3 = (**(*arg1 + 0x48))();\n    }\n    iVar6 = 0;\n    do {\n        while( true ) {\n            if (iVar3 == -1) {\n                return iVar6;\n            }\n            iVar5 = arg1[3] - arg1[2] >> 1;\n            if (iVar5 < 2) break;\n            iVar4 = (**(*arg2 + 0x60))(arg2, arg1[2], iVar5);\n            arg1[2] = arg1[2] + iVar4 * 2;\n            iVar6 = iVar6 + iVar4;\n            if (iVar4 < iVar5) {\ncode_r0x00465935:\n                *arg3 = 0;\n                return iVar6;\n            }\ncode_r0x004658a3:\n            iVar3 = (**(*arg1 + 0x48))(arg1);\n        }\n        piVar1 = arg2[5];\n        if (piVar1 < arg2[6]) {\n            *piVar1 = iVar3;\n            arg2[5] = piVar1 + 1;\n        }\n        else {\n            iVar3 = (**(*arg2 + 0x68))(arg2, iVar3);\n            if (iVar3 == -1) goto code_r0x00465935;\n        }\n        iVar6 = iVar6 + 1;\n        piVar1 = arg1[2];\n        if (piVar1 < arg1[3]) {\n            iVar3 = *piVar1;\n            arg1[2] = piVar1 + 1;\n        }\n        else {\n            iVar3 = (**(*arg1 + 0x50))(arg1);\n        }\n        if (iVar3 == -1) {\n            return iVar6;\n        }\n        if (arg1[3] <= arg1[2]) goto code_r0x004658a3;\n        iVar3 = *arg1[2];\n    } while( true );\n}\n",
        "token_count": 555
    },
    "00469950": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00469950(int64_t *arg1)\n\n{\n    int32_t iVar1;\n    ulong arg2;\n    ulong uVar2;\n    ulong *puVar3;\n    char cVar4;\n    int64_t **ppiVar5;\n    ulong arg1_00;\n    int64_t *piVar6;\n    uchar *arg3;\n    ulong *puVar7;\n    int64_t iVar8;\n    uchar auStack168 [16];\n    ulong uStack152;\n    int64_t *piStack120;\n    \n    ppiVar5 = fcn.00469d60();\n    piStack120 = *ppiVar5;\n    piVar6 = arg1 + -10;\n    if (*arg1 + 0xb8b1aabcbcd4d500U < 2) {\n        iVar1 = *(arg1 + -5);\n        if (iVar1 < 0) {\n            iVar1 = -iVar1;\n        }\n        *(arg1 + -5) = iVar1 + 1;\n        *(ppiVar5 + 1) = *(ppiVar5 + 1) + -1;\n        if (piVar6 != piStack120) {\n            arg1[-6] = piStack120;\n            *ppiVar5 = piVar6;\n        }\n        return arg1[-1];\n    }\n    if (piStack120 == NULL) {\n        *ppiVar5 = piVar6;\n        return 0;\n    }\n    fcn.00466fe0();\n    if (piStack120 != NULL) {\n        fcn.00469950(piStack120);\n        if (*piStack120 + 0xb8b1aabcbcd4d500U < 2) goto code_r0x00469a0a;\n    }\n    fcn.00466fe0();\ncode_r0x00469a0a:\n    iVar8 = piStack120[-7];\n    fcn.0041f310();\n    fcn.00469950(iVar8);\n    uStack152 = *(iVar8 + -0x10);\n    arg2 = *(iVar8 + -0x18);\n    iVar1 = *(iVar8 + -0x24);\n    uVar2 = *(iVar8 + -0x38);\n    arg1_00 = fcn.0041f350(*(iVar8 + -0x40));\n    fcn.00469950(arg1_00);\n    piVar6 = fcn.00469e90();\n    puVar3 = *piVar6;\n    puVar7 = puVar3 + 0x12;\n    if ((*(puVar3 + 10) & 1) != 0) {\n        puVar7 = *puVar3;\n    }\n    arg3 = auStack168;\n    fcn.0041ef60(0, arg2, arg3);\n    cVar4 = fcn.0041f050(arg3, puVar7[-0x12], puVar7, iVar1);\n    if (cVar4 != '\\0') {\n        arg3 = fcn.0046a200();\n        fcn.00469b80();\n        fcn.00469b80();\n        fcn.0040ca50(arg3);\n    }\n    cVar4 = fcn.0041f050(arg3, 0x485330, 0, iVar1);\n    if (cVar4 != '\\0') {\n        puVar7 = fcn.00469800(8);\n        *puVar7 = 0x488250;\n        fcn.0046a250(puVar7, 0x485330, 0x44bd70);\n    }\n    fcn.0041f310(uVar2);\n    ppiVar5 = fcn.00469d60();\n    piVar6 = *ppiVar5;\n    if (piVar6 == NULL) {\n        iVar8 = 0;\n    }\n    else {\n        if ((*(piVar6 + 10) & 1) != 0) {\n            piVar6 = *piVar6 + -0x90;\n        }\n        iVar8 = *piVar6;\n    }\n    return iVar8;\n}\n",
        "token_count": 902
    },
    "004699e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.004699e0(int64_t *arg1)\n\n{\n    int32_t iVar1;\n    ulong arg2;\n    ulong uVar2;\n    ulong *puVar3;\n    char cVar4;\n    ulong arg1_00;\n    int64_t *piVar5;\n    uchar *arg3;\n    ulong *puVar6;\n    int64_t **ppiVar7;\n    int64_t iVar8;\n    uchar auStack128 [16];\n    ulong uStack112;\n    int64_t *piStack80;\n    \n    if (arg1 != NULL) {\n        fcn.00469950(arg1);\n        if (*arg1 + 0xb8b1aabcbcd4d500U < 2) goto code_r0x00469a0a;\n    }\n    fcn.00466fe0();\ncode_r0x00469a0a:\n    iVar8 = arg1[-7];\n    fcn.0041f310();\n    piStack80 = arg1;\n    fcn.00469950(iVar8);\n    uStack112 = *(iVar8 + -0x10);\n    arg2 = *(iVar8 + -0x18);\n    iVar1 = *(iVar8 + -0x24);\n    uVar2 = *(iVar8 + -0x38);\n    arg1_00 = fcn.0041f350(*(iVar8 + -0x40));\n    fcn.00469950(arg1_00);\n    piVar5 = fcn.00469e90();\n    puVar3 = *piVar5;\n    puVar6 = puVar3 + 0x12;\n    if ((*(puVar3 + 10) & 1) != 0) {\n        puVar6 = *puVar3;\n    }\n    arg3 = auStack128;\n    fcn.0041ef60(0, arg2, arg3);\n    cVar4 = fcn.0041f050(arg3, puVar6[-0x12], puVar6, iVar1);\n    if (cVar4 != '\\0') {\n        arg3 = fcn.0046a200();\n        fcn.00469b80();\n        fcn.00469b80();\n        fcn.0040ca50(arg3);\n    }\n    cVar4 = fcn.0041f050(arg3, 0x485330, 0, iVar1);\n    if (cVar4 != '\\0') {\n        puVar6 = fcn.00469800(8);\n        *puVar6 = 0x488250;\n        fcn.0046a250(puVar6, 0x485330, 0x44bd70);\n    }\n    fcn.0041f310(uVar2);\n    ppiVar7 = fcn.00469d60();\n    piVar5 = *ppiVar7;\n    if (piVar5 == NULL) {\n        iVar8 = 0;\n    }\n    else {\n        if ((*(piVar5 + 10) & 1) != 0) {\n            piVar5 = *piVar5 + -0x90;\n        }\n        iVar8 = *piVar5;\n    }\n    return iVar8;\n}\n",
        "token_count": 700
    },
    "00469b80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t * fcn.00469b80(void)\n\n{\n    uint8_t uVar1;\n    uint64_t *UNRECOVERED_JUMPTABLE;\n    uint64_t uVar2;\n    int64_t arg1;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    \n    UNRECOVERED_JUMPTABLE = fcn.00469e90();\n    uVar2 = *UNRECOVERED_JUMPTABLE;\n    if (uVar2 != 0) {\n        if (1 < *(uVar2 + 0x50) + 0xb8b1aabcbcd4d500U) {\n            *UNRECOVERED_JUMPTABLE = 0;\ncode_r0x0040cbd0:\n            UNRECOVERED_JUMPTABLE = *(uVar2 + 0x58);\n            if (UNRECOVERED_JUMPTABLE == NULL) {\n                return UNRECOVERED_JUMPTABLE;\n            }\n    // WARNING: Could not recover jumptable at 0x0040cbe1. Too many branches\n    // WARNING: Treating indirect jump as call\n            UNRECOVERED_JUMPTABLE = (*UNRECOVERED_JUMPTABLE)(1, uVar2 + 0x50);\n            return UNRECOVERED_JUMPTABLE;\n        }\n        iVar4 = *(uVar2 + 0x28);\n        if (iVar4 < 0) {\n            iVar4 = iVar4 + 1;\n            if (iVar4 == 0) {\n                *UNRECOVERED_JUMPTABLE = *(uVar2 + 0x20);\n            }\n        }\n        else {\n            iVar4 = iVar4 + -1;\n            if (iVar4 == 0) {\n                *UNRECOVERED_JUMPTABLE = *(uVar2 + 0x20);\n                goto code_r0x0040cbd0;\n            }\n            if (iVar4 == -1) {\n                fcn.00466fe0();\n                if ((0x47b39f < uVar2) && (uVar2 < 0x47d7a0)) {\n                    uVar3 = uVar2 - 0x47b3a0;\n                    iVar5 = SUB168(ZEXT416(uVar3) * ZEXT816(0xe38e38e38e38e38f) >> 0x40, 0);\n                    iVar4 = fcn.0041bdb0(0x47da20);\n                    if (iVar4 != 0) {\n                        uVar2 = fcn.00420e70();\n                        goto code_r0x00469c87;\n                    }\n                    uVar1 = uVar3 / 0x90 & 0x3f;\n                    *0x46b380 = *0x46b380 & (-2 << uVar1 | 0xfffffffffffffffeU >> 0x40 - uVar1);\n                    UNRECOVERED_JUMPTABLE = fcn.0041b7a0(0x47da20);\n                    if (UNRECOVERED_JUMPTABLE == 0) {\n                        return UNRECOVERED_JUMPTABLE;\n                    }\n                    while( true ) {\n                        uVar2 = fcn.00420ea0();\ncode_r0x00469c87:\n                        iVar5 = iVar5 + 1;\n                        if (iVar5 == 0) break;\n                        fcn.0040ca50(uVar2);\n                    }\n                    fcn.00469a20(uVar2);\n                    if ((0x46b39f < uVar2) && (iVar5 = 0x47b3a0,  uVar2 < 0x47b3a0)) {\n                        iVar4 = fcn.0041bdb0(0x47da20);\n                        if (iVar4 != 0) {\n                            arg1 = fcn.00420e70();\n                            goto code_r0x00469d26;\n                        }\n                        uVar1 = uVar2 - 0x46b3a0U >> 10 & 0x3f;\n                        *0x46b370 = *0x46b370 & (-2 << uVar1 | 0xfffffffffffffffeU >> 0x40 - uVar1);\n                        UNRECOVERED_JUMPTABLE = fcn.0041b7a0(0x47da20);\n                        if (UNRECOVERED_JUMPTABLE != 0) {\n                            while( true ) {\n                                arg1 = fcn.00420ea0();\ncode_r0x00469d26:\n                                iVar5 = iVar5 + 1;\n                                if (iVar5 == 0) break;\n                                fcn.0040ca50(arg1);\n                            }\n                            fcn.00469a20(arg1);\n                            return *(arg1 + -8);\n                        }\n                        return UNRECOVERED_JUMPTABLE;\n                    }\n                }\n    // WARNING: Could not recover jumptable at 0x00416d90. Too many branches\n    // WARNING: Treating indirect jump as call\n                UNRECOVERED_JUMPTABLE = (*_sym.imp.msvcrt.dll_free)();\n                return UNRECOVERED_JUMPTABLE;\n            }\n        }\n        *(uVar2 + 0x28) = iVar4;\n    }\n    return UNRECOVERED_JUMPTABLE;\n}\n",
        "token_count": 1175
    },
    "00469d60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.00469d60(void)\n\n{\n    int32_t iVar1;\n    ulong *arg2;\n    \n    if (*0x47fdb0 == NULL) {\n        *0x47fdb0 = fcn.0040cc80(\"init\", 8, 0x46a450);\n    }\n    if (*(*0x47fdb0 + 1) == '\\0') {\n        arg2 = *0x47fda0;\n        if (*0x47fda0 == NULL) {\n            arg2 = fcn.0040cc80(\"eh_globals\", 0x10, 0);\n            *0x47fda0 = arg2;\n        }\n    }\n    else {\n        if (*0x47fdb0 == NULL) {\n            *0x47fdb0 = fcn.0040cc80(\"init\", 8, 0x46a450);\n        }\n        arg2 = fcn.00419b80(**0x47fdb0);\n        if (arg2 == NULL) {\n            arg2 = sub.msvcrt.dll_malloc();\n            if (arg2 == NULL) goto code_r0x00469e54;\n            if (*0x47fdb0 == NULL) goto code_r0x00469e59;\n            while( true ) {\n                iVar1 = fcn.00419bf0(**0x47fdb0, arg2);\n                if (iVar1 == 0) break;\ncode_r0x00469e54:\n                fcn.00466fe0();\ncode_r0x00469e59:\n                *0x47fdb0 = fcn.0040cc80(\"init\", 8, 0x46a450);\n            }\n            *arg2 = 0;\n            *(arg2 + 1) = 0;\n        }\n    }\n    return arg2;\n}\n",
        "token_count": 398
    },
    "00469e90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00469e90(void)\n\n{\n    if (*0x47fdb0 == NULL) {\n        *0x47fdb0 = fcn.0040cc80(\"init\", 8, 0x46a450);\n    }\n    if (*(*0x47fdb0 + 1) == '\\0') {\n        if (*0x47fda0 == 0) {\n            *0x47fda0 = fcn.0040cc80(\"eh_globals\", 0x10, 0);\n        }\n    }\n    else {\n        if (*0x47fdb0 == NULL) {\n            *0x47fdb0 = fcn.0040cc80(\"init\", 8, 0x46a450);\n        }\n        fcn.00419b80(**0x47fdb0);\n    }\n    return;\n}\n",
        "token_count": 184
    },
    "0046a000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0046a000(char *arg1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    ulong *arg1_00;\n    uint64_t uVar3;\n    uchar *puVar4;\n    int64_t *piVar5;\n    int64_t iVar6;\n    ulong in_R9;\n    ulong uVar7;\n    \n    if (*arg1 != '\\0') {\n        return 0;\n    }\n    fcn.00419150(0x47fd20, 0x41fba0);\n    puVar4 = *0x47e940;\n    uVar1 = fcn.0041bdb0(*0x47e940);\n    if (uVar1 == 0) {\n        do {\n            if (*arg1 != '\\0') {\n                iVar2 = fcn.0041b7a0(*0x47e940);\n                if (iVar2 != 0) goto code_r0x0046a0af;\n                return uVar1;\n            }\n            if (arg1[1] == '\\0') {\n                while( true ) {\n                    puVar4 = *0x47e940;\n                    arg1[1] = '\\x01';\n                    iVar2 = fcn.0041b7a0(puVar4);\n                    if (iVar2 == 0) break;\ncode_r0x0046a0af:\n                    fcn.00420ea0();\n                }\n                return 1;\n            }\n            fcn.00419150(0x47fd20, 0x41fba0);\n            puVar4 = *0x47e940;\n            fcn.00419150(0x47fd00, 0x41fb80);\n            iVar2 = fcn.0041cd10(*0x47e930, puVar4);\n        } while (iVar2 == 0);\n        arg1_00 = fcn.00469800(8);\n        *arg1_00 = 0x487a10;\n        puVar4 = fcn.0046a250(arg1_00, 0x484ee0, 0x420c30);\n        fcn.00420500(*0x47e940);\n        fcn.0040ca50(puVar4);\n    }\n    fcn.00420e70();\n    iVar6 = 0x41fba0;\n    fcn.00419150(0x47fd20, 0x41fba0);\n    iVar2 = fcn.0041bdb0(*0x47e940);\n    if (iVar2 != 0) {\n        puVar4 = fcn.00420e70();\n        goto code_r0x0046a195;\n    }\n    puVar4[1] = 0;\n    iVar6 = 0x41fb80;\n    *puVar4 = 1;\n    fcn.00419150(0x47fd00, 0x41fb80);\n    iVar2 = fcn.0041cbf0(*0x47e930);\n    if (iVar2 == 0) {\n        puVar4 = *0x47e940;\n        uVar3 = fcn.0041b7a0(*0x47e940);\n        if (uVar3 == 0) {\n            return uVar3;\n        }\n        fcn.00420ea0();\n    }\n    else {\n        while( true ) {\n            puVar4 = fcn.00420ed0();\n            fcn.00420500(*0x47e940);\ncode_r0x0046a195:\n            iVar6 = iVar6 + 1;\n            if (iVar6 == 0) break;\n            fcn.0040ca50(puVar4);\n        }\n    }\n    uVar7 = 0x46a1c9;\n    fcn.00469a20(puVar4);\n    sub.msvcrt.dll__write_1(2, \"pure virtual method called\\n\", 0x1b, in_R9, uVar7);\n    fcn.00466fe0();\n    piVar5 = fcn.00469d60();\n    iVar6 = *piVar5;\n    *(piVar5 + 1) = *(piVar5 + 1) + 1;\n    if (iVar6 == 0) goto code_r0x0046a245;\n    if (*(iVar6 + 0x50) + 0xb8b1aabcbcd4d500U < 2) goto code_r0x0046a24a;\n    *piVar5 = 0;\n    do {\n        iVar6 = iVar6 + 0x50;\n        fcn.0040cb00(iVar6);\n        fcn.00469950(iVar6);\ncode_r0x0046a245:\n        fcn.00466fe0();\ncode_r0x0046a24a:\n        *(iVar6 + 0x28) = -*(iVar6 + 0x28);\n    } while( true );\n}\n",
        "token_count": 1101
    },
    "0046a200": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0046a200(void)\n\n{\n    int64_t *piVar1;\n    int64_t arg1;\n    \n    piVar1 = fcn.00469d60();\n    arg1 = *piVar1;\n    *(piVar1 + 1) = *(piVar1 + 1) + 1;\n    if (arg1 == 0) goto code_r0x0046a245;\n    if (*(arg1 + 0x50) + 0xb8b1aabcbcd4d500U < 2) goto code_r0x0046a24a;\n    *piVar1 = 0;\n    do {\n        arg1 = arg1 + 0x50;\n        fcn.0040cb00(arg1);\n        fcn.00469950(arg1);\ncode_r0x0046a245:\n        fcn.00466fe0();\ncode_r0x0046a24a:\n        *(arg1 + 0x28) = -*(arg1 + 0x28);\n    } while( true );\n}\n",
        "token_count": 233
    },
    "0040c990": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong fcn.0040c990(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    ulong *puVar5;\n    ulong *puVar6;\n    bool bVar7;\n    int64_t aiStackX8 [4];\n    uint64_t uVar4;\n    \n    uVar4 = 0x30;\n    iVar2 = 0x30;\n    puVar5 = arg1 + 0x10;\n    bVar7 = (puVar5 & 1) != 0;\n    if (bVar7) {\n        puVar5 = arg1 + 0x11;\n        *(arg1 + 0x10) = 0;\n        uVar4 = 0x2f;\n        iVar2 = 0x2f;\n    }\n    if ((puVar5 & 2) == 0) {\n        uVar3 = uVar4;\n    }\n    else {\n        uVar3 = iVar2 - 2;\n        uVar4 = uVar3;\n        *puVar5 = 0;\n        puVar5 = puVar5 + 2;\n    }\n    if ((puVar5 & 4) != 0) {\n        *puVar5 = 0;\n        uVar4 = uVar3 - 4;\n        puVar5 = puVar5 + 4;\n    }\n    for (uVar1 = uVar4 >> 3; uVar1 != 0; uVar1 = uVar1 - 1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    if ((uVar4 & 4) != 0) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 4;\n    }\n    puVar6 = puVar5;\n    if ((uVar4 & 2) != 0) {\n        puVar6 = puVar5 + 2;\n        *puVar5 = 0;\n    }\n    if (bVar7) {\n        *puVar6 = 0;\n    }\n    aiStackX8[0] = arg1;\n    (*_sym.imp.KERNEL32.dll_RaiseException)(0x20474343, 0, 1, aiStackX8);\n    return 5;\n}\n",
        "token_count": 516
    },
    "0040e540": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040e555)\n// WARNING: Removing unreachable block (ram,0x0040e5e0)\n// WARNING: Removing unreachable block (ram,0x0040e55e)\n\nvoid fcn.0040e540(ulong arg1, float10 *arg2, ulong arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    uint64_t arg2_00;\n    uint32_t *in_stack_00000028;\n    uint auStack20 [5];\n    \n    if (*arg2 == 0) {\n        uVar1 = *(arg2 + 8);\n        auStack20[0] = 0;\n        arg2_00 = 0;\n    }\n    else if (*arg2 == 0) {\n        uVar1 = *(arg2 + 8);\n        auStack20[0] = 2;\n        arg2_00 = 0xffffbfc3;\n    }\n    else {\n        auStack20[0] = 1;\n        uVar1 = *(arg2 + 8);\n        arg2_00 = (uVar1 & 0x7fff) - 0x403e;\n    }\n    *in_stack_00000028 = uVar1 & 0x8000;\n    fcn.00413830(0x46b0c0, arg2_00, arg2, auStack20);\n    return;\n}\n",
        "token_count": 314
    },
    "00412700": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid fcn.00412700(int64_t arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = 0;\n    uVar2 = 0;\n    do {\n        uVar2 = *(arg1 + 0x10 + iVar1) + *(arg2 + 0x10 + iVar1) + uVar2;\n        *(arg2 + 0x10 + iVar1) = uVar2;\n        iVar1 = iVar1 + -2;\n        uVar2 = uVar2 >> 0x10 & 1;\n    } while (iVar1 != -0xe);\n    return;\n}\n",
        "token_count": 150
    },
    "00412740": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid fcn.00412740(int64_t arg1, int64_t arg2)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    \n    iVar2 = 0;\n    uVar1 = 0;\n    do {\n        uVar1 = (*(arg2 + 0x10 + iVar2) - *(arg1 + 0x10 + iVar2)) - uVar1;\n        *(arg2 + 0x10 + iVar2) = uVar1;\n        iVar2 = iVar2 + -2;\n        uVar1 = uVar1 >> 0x10 & 1;\n    } while (iVar2 != -0xe);\n    return;\n}\n",
        "token_count": 150
    },
    "00412780": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nbool fcn.00412780(int64_t arg1, int16_t *arg2)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    uint16_t *puVar4;\n    uint16_t uVar6;\n    uint64_t uVar7;\n    int16_t *piVar8;\n    int16_t iVar9;\n    int16_t iVar10;\n    uint16_t *puVar11;\n    int16_t aiStack136 [6];\n    ushort uStack124;\n    ushort uStack122;\n    ushort uStack120;\n    int16_t aiStack118 [7];\n    uchar auStack104 [4];\n    uint16_t auStack100 [18];\n    uint16_t *puVar5;\n    \n    aiStack136[0] = *arg2;\n    uStack122 = 0;\n    puVar11 = arg2 + 2;\n    aiStack136[2] = 0;\n    aiStack136[1] = arg2[1];\n    aiStack136[3] = 0;\n    aiStack136[4] = 0;\n    aiStack136[5] = 0;\n    uStack124 = 0;\n    uStack120 = 0;\n    uVar2 = 0;\n    puVar4 = puVar11;\n    do {\n        if ((*puVar4 & 1) != 0) {\n            uVar2 = uVar2 | 1;\n        }\n        uVar6 = *puVar4 >> 1;\n        if ((uVar2 & 2) != 0) {\n            uVar6 = uVar6 | 0x8000;\n        }\n        *puVar4 = uVar6;\n        puVar4 = puVar4 + 1;\n        uVar2 = uVar2 * 2;\n    } while (puVar4 != arg2 + 9);\n    uVar6 = *(arg1 + 6);\n    piVar8 = aiStack136 + 2;\ncode_r0x00412872:\n    uVar7 = 0xffff;\n    iVar9 = -1;\n    uVar2 = arg2[2] * 0x10000 + arg2[3];\n    if (uVar2 <= uVar6 * 0x10000 - uVar6) {\n        uVar7 = uVar2 / uVar6;\n        iVar9 = uVar7;\n        uVar7 = uVar7 & 0xffff;\n    }\n    fcn.00412550(uVar7, arg1, auStack104);\n    iVar3 = 0;\n    do {\n        uVar1 = *(arg2 + iVar3 + 4);\n        iVar10 = iVar9;\n        if (*(auStack100 + iVar3) != uVar1) {\n            if (uVar1 < *(auStack100 + iVar3)) {\n                iVar10 = iVar9 + -1;\n                fcn.00412740(arg1, auStack104);\n                iVar3 = 0;\n                goto code_r0x00412994;\n            }\n            break;\n        }\n        iVar3 = iVar3 + 2;\n    } while (iVar3 != 0xe);\n    goto code_r0x004128ce;\n    while (iVar3 = iVar3 + 2,  iVar3 != 0xe) {\ncode_r0x00412994:\n        uVar1 = *(arg2 + iVar3 + 4);\n        if (*(auStack100 + iVar3) != uVar1) {\n            if (uVar1 < *(auStack100 + iVar3)) {\n                iVar10 = iVar9 + -2;\n                fcn.00412740(arg1, auStack104);\n            }\n            break;\n        }\n    }\ncode_r0x004128ce:\n    fcn.00412740(auStack104, arg2);\n    *piVar8 = iVar10;\n    puVar4 = puVar11;\n    do {\n        puVar5 = puVar4 + 1;\n        *puVar4 = *puVar5;\n        puVar4 = puVar5;\n    } while (puVar5 != arg2 + 8);\n    piVar8 = piVar8 + 1;\n    arg2[8] = 0;\n    if (piVar8 == aiStack118) {\n        uVar6 = 0;\n        do {\n            puVar4 = puVar11 + 1;\n            uVar6 = uVar6 | *puVar11;\n            puVar11 = puVar4;\n        } while (puVar4 != arg2 + 9);\n        iVar3 = 0;\n        do {\n            *(arg2 + iVar3) = *(aiStack136 + iVar3);\n            iVar3 = iVar3 + 2;\n        } while (iVar3 != 0x12);\n        return uVar6 != 0;\n    }\n    goto code_r0x00412872;\n}\n",
        "token_count": 1067
    },
    "00412d80": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nulong fcn.00412d80(int64_t arg1, ulong arg2)\n\n{\n    ushort *puVar1;\n    uint16_t *puVar3;\n    int64_t iVar4;\n    uint16_t *puVar5;\n    uint16_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint16_t uVar9;\n    ushort *puVar2;\n    \n    if (arg2 != 0) {\n        if (arg2 < 0) {\n            arg2._0_4_ = -arg2;\n            if (arg2 < 0x10) {\n                uVar9 = 0;\n            }\n            else {\n                uVar9 = 0;\n                uVar8 = arg2;\n                do {\n                    uVar9 = uVar9 | *(arg1 + 0x10);\n                    iVar4 = 0;\n                    do {\n                        *(arg1 + 0x10 + iVar4) = *(arg1 + 0xe + iVar4);\n                        iVar4 = iVar4 + -2;\n                    } while (iVar4 != -0xc);\n                    uVar8 = uVar8 - 0x10;\n                    *(arg1 + 4) = 0;\n                } while (0xf < uVar8);\n                arg2._0_4_ = arg2 & 0xf;\n            }\n            if (7 < arg2) {\n                uVar8 = arg2;\n                do {\n                    iVar7 = 0;\n                    uVar9 = uVar9 | *(arg1 + 0x10);\n                    puVar5 = arg1 + 4;\n                    do {\n                        puVar3 = puVar5 + 1;\n                        uVar6 = iVar7;\n                        iVar7 = *puVar5 << 8;\n                        *puVar5 = *puVar5 >> 8 | uVar6;\n                        puVar5 = puVar3;\n                    } while (puVar3 != arg1 + 0x12);\n                    uVar8 = uVar8 - 8;\n                } while (7 < uVar8);\n                arg2._0_4_ = arg2 & 7;\n            }\n            if (arg2 != 0) {\n                do {\n                    uVar9 = uVar9 | *(arg1 + 0x10) & 1;\n                    uVar8 = 0;\n                    puVar5 = arg1 + 4;\n                    do {\n                        if ((*puVar5 & 1) != 0) {\n                            uVar8 = uVar8 | 1;\n                        }\n                        uVar6 = *puVar5 >> 1;\n                        if ((uVar8 & 2) != 0) {\n                            uVar6 = uVar6 | 0x8000;\n                        }\n                        *puVar5 = uVar6;\n                        puVar5 = puVar5 + 1;\n                        uVar8 = uVar8 * 2;\n                    } while (puVar5 != arg1 + 0x12);\n                    arg2._0_4_ = arg2 - 1;\n                } while (arg2 != 0);\n            }\n            if (uVar9 != 0) {\n                return 1;\n            }\n        }\n        else {\n            puVar1 = arg1 + 4;\n            uVar8 = arg2;\n            if (0xf < arg2) {\n                do {\n                    do {\n                        puVar2 = puVar1 + 1;\n                        *puVar1 = *puVar2;\n                        puVar1 = puVar2;\n                    } while (puVar2 != arg1 + 0x10);\n                    uVar8 = uVar8 - 0x10;\n                    *(arg1 + 0x10) = 0;\n                    puVar1 = arg1 + 4;\n                } while (0xf < uVar8);\n                arg2._0_4_ = arg2 & 0xf;\n            }\n            if (7 < arg2) {\n                uVar8 = arg2;\n                do {\n                    uVar9 = 0;\n                    puVar5 = arg1 + 0x10;\n                    do {\n                        puVar3 = puVar5 + -1;\n                        uVar6 = *puVar5 << 8 | uVar9;\n                        uVar9 = *puVar5 >> 8;\n                        *puVar5 = uVar6;\n                        puVar5 = puVar3;\n                    } while (puVar3 != arg1 + 2);\n                    uVar8 = uVar8 - 8;\n                } while (7 < uVar8);\n                arg2._0_4_ = arg2 & 7;\n            }\n            for (; arg2 != 0; arg2._0_4_ = arg2 - 1) {\n                uVar8 = 0;\n                puVar5 = arg1 + 0x10;\n                do {\n                    if (*puVar5 < 0) {\n                        uVar8 = uVar8 | 1;\n                    }\n                    uVar9 = *puVar5 * 2;\n                    if ((uVar8 & 2) != 0) {\n                        uVar9 = uVar9 | 1;\n                    }\n                    *puVar5 = uVar9;\n                    puVar5 = puVar5 + -1;\n                    uVar8 = uVar8 * 2;\n                } while (puVar5 != arg1 + 2);\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1185
    },
    "00412f80": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00412f80(int64_t arg1)\n\n{\n    int32_t iVar1;\n    uint16_t *puVar2;\n    uint16_t *puVar3;\n    uint32_t uVar4;\n    uint16_t uVar5;\n    uint64_t uVar6;\n    uint16_t uVar7;\n    \n    uVar7 = *(arg1 + 4);\n    uVar6 = uVar7;\n    if (uVar7 == 0) {\n        uVar7 = *(arg1 + 6);\n        iVar1 = 0;\n        if (-1 < uVar7) {\n            while (uVar7 == 0) {\n                puVar2 = arg1 + 4;\n                while( true ) {\n                    *puVar2 = uVar7;\n                    if (puVar2 + 1 == arg1 + 0x10) break;\n                    uVar7 = puVar2[2];\n                    puVar2 = puVar2 + 1;\n                }\n                iVar1 = iVar1 + 0x10;\n                *(arg1 + 0x10) = 0;\n                if (iVar1 == 0x60) {\n                    return;\n                }\n                uVar7 = *(arg1 + 6);\n            }\n            if ((uVar7 & 0xff00) == 0) {\n                do {\n                    uVar7 = 0;\n                    puVar2 = arg1 + 0x10;\n                    do {\n                        puVar3 = puVar2 + -1;\n                        uVar5 = *puVar2 << 8 | uVar7;\n                        uVar7 = *puVar2 >> 8;\n                        *puVar2 = uVar5;\n                        puVar2 = puVar3;\n                    } while (puVar3 != arg1 + 2);\n                    uVar7 = *(arg1 + 6);\n                    iVar1 = iVar1 + 8;\n                } while ((uVar7 & 0xff00) == 0);\n            }\n            while (-1 < uVar7) {\n                puVar2 = arg1 + 0x10;\n                uVar4 = 0;\n                do {\n                    if (*puVar2 < 0) {\n                        uVar4 = uVar4 | 1;\n                    }\n                    uVar7 = *puVar2 * 2;\n                    if ((uVar4 & 2) != 0) {\n                        uVar7 = uVar7 | 1;\n                    }\n                    *puVar2 = uVar7;\n                    puVar2 = puVar2 + -1;\n                    uVar4 = uVar4 * 2;\n                } while (puVar2 != arg1 + 2);\n                iVar1 = iVar1 + 1;\n                if (0x60 < iVar1) {\n                    return;\n                }\n                uVar7 = *(arg1 + 6);\n            }\n        }\n    }\n    else {\n        iVar1 = 0;\n        if ((uVar7 & 0xff00) != 0) {\n            iVar1 = 0;\n            puVar2 = arg1 + 4;\n            while( true ) {\n                puVar3 = puVar2 + 1;\n                uVar7 = iVar1;\n                iVar1 = uVar6 << 8;\n                *puVar2 = uVar6 >> 8 | uVar7;\n                if (puVar3 == arg1 + 0x12) break;\n                uVar6 = *puVar3;\n                puVar2 = puVar3;\n            }\n            uVar6 = *(arg1 + 4);\n            iVar1 = -8;\n        }\n        while (uVar6 != 0) {\n            puVar2 = arg1 + 4;\n            uVar4 = 0;\n            while( true ) {\n                if ((uVar6 & 1) != 0) {\n                    uVar4 = uVar4 | 1;\n                }\n                uVar7 = uVar6 >> 1;\n                if ((uVar4 & 2) != 0) {\n                    uVar7 = uVar7 | 0x8000;\n                }\n                *puVar2 = uVar7;\n                puVar2 = puVar2 + 1;\n                uVar4 = uVar4 * 2;\n                if (puVar2 == arg1 + 0x12) break;\n                uVar6 = *puVar2;\n            }\n            iVar1 = iVar1 + -1;\n            if (iVar1 < -0x50) {\n                return;\n            }\n            uVar6 = *(arg1 + 4);\n        }\n    }\n    return;\n}\n",
        "token_count": 1005
    },
    "00414d90": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nint32_t fcn.00414d90(int64_t arg1, int64_t arg2)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint64_t uVar5;\n    uint32_t *puVar6;\n    uint32_t *puVar7;\n    uint64_t uVar8;\n    uint32_t *puVar9;\n    uint64_t uVar10;\n    int32_t iVar11;\n    int64_t iVar12;\n    uint64_t uVar13;\n    uint32_t *puVar14;\n    uint32_t *puVar15;\n    uint32_t *puVar16;\n    \n    iVar4 = 0;\n    if (*(arg2 + 0x14) <= *(arg1 + 0x14)) {\n        iVar11 = *(arg2 + 0x14) + -1;\n        puVar9 = arg2 + 0x18;\n        puVar1 = arg1 + 0x18;\n        puVar6 = puVar9 + iVar11;\n        puVar7 = puVar1 + iVar11;\n        uVar8 = *puVar7 / (*puVar6 + 1);\n        iVar4 = uVar8;\n        if (iVar4 != 0) {\n            uVar5 = 0;\n            uVar13 = 0;\n            puVar14 = puVar1;\n            puVar15 = puVar9;\n            do {\n                puVar16 = puVar15 + 1;\n                uVar10 = *puVar15 * uVar8 + uVar5;\n                uVar5 = uVar10 >> 0x20;\n                iVar12 = (*puVar14 - (uVar10 & 0xffffffff)) - uVar13;\n                *puVar14 = iVar12;\n                uVar13 = iVar12 >> 0x20 & 1;\n                puVar14 = puVar14 + 1;\n                puVar15 = puVar16;\n            } while (puVar16 <= puVar6);\n            if (*puVar7 == 0) {\n                puVar14 = puVar7 + -1;\n                if (puVar1 < puVar14) {\n                    uVar2 = puVar7[-1];\n                    while (uVar2 == 0) {\n                        puVar14 = puVar14 + -1;\n                        iVar11 = iVar11 + -1;\n                        if (puVar14 <= puVar1) break;\n                        uVar2 = *puVar14;\n                    }\n                }\n                *(arg1 + 0x14) = iVar11;\n            }\n        }\n        iVar3 = fcn.00415640(arg1, arg2);\n        if (-1 < iVar3) {\n            iVar4 = iVar4 + 1;\n            uVar8 = 0;\n            puVar7 = puVar1;\n            do {\n                puVar14 = puVar9 + 1;\n                iVar12 = (*puVar7 - *puVar9) - uVar8;\n                *puVar7 = iVar12;\n                uVar8 = iVar12 >> 0x20 & 1;\n                puVar7 = puVar7 + 1;\n                puVar9 = puVar14;\n            } while (puVar14 <= puVar6);\n            puVar9 = puVar1 + iVar11;\n            if (*puVar9 == 0) {\n                puVar6 = puVar9 + -1;\n                if (puVar1 < puVar6) {\n                    uVar2 = puVar9[-1];\n                    while (uVar2 == 0) {\n                        puVar6 = puVar6 + -1;\n                        iVar11 = iVar11 + -1;\n                        if (puVar6 <= puVar1) break;\n                        uVar2 = *puVar6;\n                    }\n                }\n                *(arg1 + 0x14) = iVar11;\n            }\n        }\n    }\n    return iVar4;\n}\n",
        "token_count": 862
    },
    "00415690": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nint64_t fcn.00415690(int64_t arg1, int64_t arg2)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint32_t *puVar4;\n    uint32_t *puVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint *puVar8;\n    uint *puVar9;\n    uint32_t *puVar11;\n    uint32_t *puVar12;\n    int32_t iVar13;\n    int32_t *piVar10;\n    \n    iVar2 = fcn.00415640(arg1, arg2);\n    if (iVar2 == 0) {\n        iVar7 = fcn.00415020(0);\n        if (iVar7 != 0) {\n            *(iVar7 + 0x14) = 1;\n            *(iVar7 + 0x18) = 0;\n            return iVar7;\n        }\n    }\n    else {\n        iVar7 = arg2;\n        if (iVar2 >= 0) {\n            iVar7 = arg1;\n            arg1 = arg2;\n        }\n        iVar3 = fcn.00415020(*(iVar7 + 8));\n        if (iVar3 != 0) {\n            iVar13 = *(iVar7 + 0x14);\n            *(iVar3 + 0x10) = iVar2 < 0;\n            puVar1 = iVar7 + 0x18 + iVar13;\n            iVar2 = *(arg1 + 0x14);\n            uVar6 = 0;\n            puVar5 = iVar7 + 0x18;\n            puVar9 = iVar3 + 0x18;\n            puVar11 = arg1 + 0x18;\n            do {\n                puVar8 = puVar9;\n                puVar4 = puVar5 + 1;\n                puVar12 = puVar11 + 1;\n                puVar9 = puVar8 + 1;\n                iVar7 = (*puVar5 - *puVar11) - uVar6;\n                *puVar8 = iVar7;\n                uVar6 = iVar7 >> 0x20 & 1;\n                puVar5 = puVar4;\n                puVar11 = puVar12;\n            } while (puVar12 < arg1 + 0x18 + iVar2);\n            if (puVar4 < puVar1) {\n                do {\n                    puVar11 = puVar5 + 1;\n                    iVar7 = *puVar5 - uVar6;\n                    *puVar9 = iVar7;\n                    uVar6 = iVar7 >> 0x20 & 1;\n                    puVar5 = puVar11;\n                    puVar9 = puVar9 + 1;\n                } while (puVar11 < puVar1);\n                puVar9 = puVar8 + (~puVar4 + puVar1 & 0xfffffffffffffffc) + 8;\n            }\n            piVar10 = puVar9 + -1;\n            iVar2 = iVar7;\n            while (iVar2 == 0) {\n                piVar10 = piVar10 + -1;\n                iVar13 = iVar13 + -1;\n                iVar2 = *piVar10;\n            }\n            *(iVar3 + 0x14) = iVar13;\n            return iVar3;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 731
    },
    "00419fe0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t fcn.00419fe0(void)\n\n{\n    int64_t iVar1;\n    \n    if (*0x49f460 == NULL) {\n        *0x49f460 = fcn.0041d1b0(\"_pthread_cancelling_shmem\", 4, 0);\n    }\n    if ((**0x49f460 == 0) || (iVar1 = fcn.004183e0(),  iVar1 == 0)) {\n        return 0;\n    }\n    if (0 < *(iVar1 + 0x20)) {\n        return 0;\n    }\n    if ((*(iVar1 + 0x40) & 3) == 0) {\n        return 0;\n    }\n    return *(iVar1 + 0x44) & 1;\n}\n",
        "token_count": 174
    },
    "0041a160": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t * fcn.0041a160(void)\n\n{\n    uchar *arg2;\n    ulong *puVar1;\n    code *pcVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int64_t iVar7;\n    ulong uVar8;\n    int32_t *piVar9;\n    int32_t **arg1;\n    char *arg1_00;\n    uint64_t uVar10;\n    uint32_t uVar11;\n    uint64_t uVar12;\n    uint32_t uVar13;\n    bool bVar14;\n    ulong auStack184 [5];\n    ulong uStack144;\n    ulong uStack136;\n    int32_t *apiStack128 [2];\n    \n    piVar6 = fcn.004183e0();\n    if ((piVar6 == NULL) || ((*(piVar6 + 0x10) & 0xc) != 0)) {\n        return piVar6;\n    }\n    if (*0x49f460 == NULL) {\n        *0x49f460 = fcn.0041d1b0(\"_pthread_cancelling_shmem\", 4, 0);\n    }\n    if (**0x49f460 == 0) {\n        return *0x49f460;\n    }\n    arg1 = piVar6 + 0xe;\n    fcn.0041bdb0(arg1);\n    if ((((*(piVar6 + 0x10) & 3) != 0) && ((piVar6[0x11] & 1U) != 0)) && (piVar6[8] < 1)) {\n        piVar6[0x11] = piVar6[0x11] & 0xfffffffe;\n        *(piVar6 + 0x10) = *(piVar6 + 0x10) & 0xf3 | 4;\n        if (*(piVar6 + 0xc) != 0) {\n            (*_sym.imp.KERNEL32.dll_ResetEvent)();\n        }\n        fcn.0041b7a0(arg1);\n        fcn.0041a080();\n        if (arg1 == NULL) {\n            apiStack128[1] = 0x41a295;\n            fcn.004183e0();\ncode_r0x0041a26e:\n            apiStack128[1] = 0x41a273;\n            fcn.0041a160();\n            apiStack128[1] = 0x41a27b;\n            (*_sym.imp.KERNEL32.dll_Sleep)(0);\n            apiStack128[1] = 0x41a280;\n            fcn.0041a160();\n            return NULL;\n        }\n        apiStack128[1] = 0x41a221;\n        uVar12 = fcn.0041ea30(arg1);\n        if (uVar12 < 0xffffffff) {\n            apiStack128[1] = 0x41a265;\n            iVar7 = fcn.004183e0();\n            uVar10 = uVar12 & 0xffffffff;\n            if (uVar12 == 0) goto code_r0x0041a26e;\n        }\n        else {\n            apiStack128[1] = 0x41a233;\n            iVar7 = fcn.004183e0();\n            uVar10 = 0xffffffff;\n        }\n        apiStack128[1] = 0x41a240;\n        fcn.0041a160();\n        if (*(iVar7 + 0x30) == 0) {\n            apiStack128[1] = 0x41a2a8;\n            (*_sym.imp.KERNEL32.dll_Sleep)(uVar10);\n        }\n        else {\n            apiStack128[1] = 0x41a251;\n            (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*(iVar7 + 0x30), uVar10);\n        }\n        apiStack128[1] = 0x41a256;\n        fcn.0041a160();\n        return NULL;\n    }\n    piVar6 = fcn.0041b230(arg1);\n    if (piVar6 != 0) {\n        return piVar6;\n    }\n    uStack136 = *arg1;\n    if (uStack136[2] == 0) {\n        uVar13 = 1;\n        if (uStack136[5] == 0) goto code_r0x0041b560;\n        goto code_r0x0041b7d0;\n    }\n    iVar4 = uStack136[5];\n    if (iVar4 != 0) {\n        iVar5 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        if (iVar4 == iVar5) {\n            if (uStack136[2] == 2) {\n                LOCK();\n                piVar6 = uStack136 + 3;\n                iVar4 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar4 == 1) goto code_r0x0041b7d0;\ncode_r0x0041b7f2:\n                uVar13 = 0;\n            }\n            else {\ncode_r0x0041b7d0:\n                uStack136[5] = 0;\n                if ((*(uStack136 + 6) == 0) ||\n                   (iVar4 = (*_sym.imp.KERNEL32.dll_ReleaseSemaphore)(*(uStack136 + 6), 1, 0),  iVar4 != 0))\n                goto code_r0x0041b7f2;\n                iVar4 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n                uVar13 = 1;\n                uStack136[5] = iVar4;\n            }\n            uStack136 = *arg1;\n            goto code_r0x0041b560;\n        }\n        uStack136 = *arg1;\n    }\n    uVar13 = 1;\ncode_r0x0041b560:\n    apiStack128[0] = uVar13;\n    if (*0x49f498 == 0) {\n        *0x49f498 = fcn.0041d1b0(\"mutex_global_shmem\", 0x10, 0x41b1d0);\n    }\n    fcn.0041d560(*0x49f498);\n    iVar7 = *0x49f498;\n    if ((*uStack136 == -0x454e0ff3) && (0 < uStack136[1])) {\n        bVar14 = *0x49f498 == 0;\n        uStack136[1] = uStack136[1] + -1;\n        if (bVar14) {\n            *0x49f498 = fcn.0041d1b0(\"mutex_global_shmem\", 0x10, 0x41b1d0);\n            fcn.0041d4c0(*0x49f498);\n            return apiStack128[0];\n        }\n        fcn.0041d4c0(iVar7);\n        return apiStack128[0];\n    }\n    iVar7 = (*_sym.imp.msvcrt.dll___iob_func)();\n    sub.msvcrt.dll_fprintf(iVar7 + 0x60, 0x483d68, \"(m_->valid == LIFE_MUTEX) && (m_->busy > 0)\");\n    sub.msvcrt.dll_exit(1);\n    arg1_00 = \"mutex_global_shmem\";\n    auStack184[0] = 0x41d1d6;\n    iVar4 = sub.msvcrt.dll_strlen();\n    auStack184[0] = 0x41d1ee;\n    iVar7 = fcn.0040ce40(arg1_00);\n    iVar7 = -iVar7;\n    arg2 = &stack0xffffffffffffff70 + iVar7;\n    *(&stack0xffffffffffffff70 + iVar7) = 0x656d68732d636367;\n    *(&stack0xffffffffffffff78 + iVar7) = 0x64742d6d;\n    *(&stack0xffffffffffffff7c + iVar7) = 0x326d;\n    uVar13 = iVar4 + 0x50;\n    (&stack0xffffffffffffff7e)[iVar7] = 0x2d;\n    *(&stack0xffffffffffffff48 + iVar7) = 0x41d236;\n    sub.msvcrt.dll_memcpy(&stack0xffffffffffffff7f + iVar7, \"mutex_global_shmem\", iVar4);\n    puVar1 = &stack0xffffffffffffff80 + iVar4 + iVar7;\n    *puVar1 = 0x6161616161616161;\n    puVar1[1] = 0x6161616161616161;\n    puVar1[2] = 0x6161616161616161;\n    puVar1[3] = 0x6161616161616161;\n    puVar1[4] = 0x6161616161616161;\n    puVar1[5] = 0x6161616161616161;\n    puVar1[6] = 0x6161616161616161;\n    puVar1[7] = 0x6161616161616161;\n    (&stack0xffffffffffffff70)[uVar13 + iVar7] = 0;\n    (&stack0xffffffffffffff70)[(iVar4 + 0xf) + iVar7] = 0;\n    *(&stack0xffffffffffffff48 + iVar7) = 0x41d27e;\n    uVar8 = (*_sym.imp.KERNEL32.dll_CreateMutexA)(0, 0);\n    (&stack0xffffffffffffff70)[(iVar4 + 0xf) + iVar7] = 0x2d;\n    *(&stack0xffffffffffffff48 + iVar7) = 0x41d294;\n    iVar5 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(uVar8, 0xffffffff);\n    if (iVar5 != 0) {\n        pcVar2 = swi(3);\n        piVar6 = (*pcVar2)();\n        return piVar6;\n    }\n    *(&stack0xffffffffffffff48 + iVar7) = 0x41d2a2;\n    uVar3 = (*_sym.imp.KERNEL32.dll_FindAtomA)();\n    if (uVar3 == 0) {\n        *(&stack0xffffffffffffff48 + iVar7) = 0x41d2b7;\n        piVar9 = sub.msvcrt.dll_malloc(0x10);\n        uVar12 = 0x40;\n        do {\n            if ((piVar9 >> (uVar12 & 0x3f) & 1) != 0) {\n                arg2[uVar13 - uVar12] = 0x41;\n            }\n            uVar11 = uVar12 - 1;\n            uVar12 = uVar11;\n        } while (uVar11 != 0);\n        *(&stack0xffffffffffffff48 + iVar7) = 0x41d2e3;\n        uVar3 = (*_sym.imp.KERNEL32.dll_AddAtomA)();\n        if (uVar3 == 0) {\n            pcVar2 = swi(3);\n            piVar6 = (*pcVar2)();\n            return piVar6;\n        }\n        *(&stack0xffffffffffffff48 + iVar7) = 0x41d2f9;\n        piVar6 = fcn.0041d130(uVar3, arg2, uVar13, iVar4 + 0x10);\n        if (piVar6 == piVar9) {\n            *(&stack0xffffffffffffff48 + iVar7) = 0x41d356;\n            sub.msvcrt.dll_memset(piVar9, 0, 0x10);\n            *(&stack0xffffffffffffff48 + iVar7) = 0x41d361;\n            (*0x41b1d0)(piVar9);\n        }\n        else {\n            *(&stack0xffffffffffffff48 + iVar7) = 0x41d309;\n            fcn.00416d90(piVar9);\n        }\n    }\n    else {\n        *(&stack0xffffffffffffff48 + iVar7) = 0x41d344;\n        piVar6 = fcn.0041d130(uVar3, arg2, uVar13, iVar4 + 0x10);\n    }\n    *(&stack0xffffffffffffff48 + iVar7) = 0x41d312;\n    (*_sym.imp.KERNEL32.dll_ReleaseMutex)(uVar8);\n    *(&stack0xffffffffffffff48 + iVar7) = 0x41d31b;\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar8);\n    return piVar6;\n}\n",
        "token_count": 2808
    },
    "0045e2d0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nvoid fcn.0045e2d0(ulong *arg1, int64_t arg2, ulong arg3, int64_t arg4)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    ulong *puVar6;\n    ulong *puVar7;\n    bool bVar8;\n    uint64_t uVar5;\n    \n    puVar7 = arg1 + 0x39;\n    arg1[4] = 0;\n    *(arg1 + 1) = arg4 != 0;\n    arg1[5] = 0;\n    *arg1 = 0x489270;\n    *(arg1 + 3) = arg2 != 0 & arg3;\n    iVar1 = 0x489b20;\n    if (arg2 != 0) {\n        iVar1 = arg2;\n    }\n    bVar8 = (puVar7 & 1) != 0;\n    uVar5 = 0x100;\n    iVar3 = 0x100;\n    arg1[6] = iVar1;\n    if (bVar8) {\n        puVar7 = arg1 + 0x3a;\n        *(arg1 + 0x39) = 0;\n        uVar5 = 0xff;\n        iVar3 = 0xff;\n    }\n    if ((puVar7 & 2) == 0) {\n        uVar4 = uVar5;\n        puVar6 = puVar7;\n    }\n    else {\n        puVar6 = puVar7 + 2;\n        uVar4 = iVar3 - 2;\n        uVar5 = uVar4;\n        *puVar7 = 0;\n    }\n    if ((puVar6 & 4) != 0) {\n        *puVar6 = 0;\n        uVar5 = uVar4 - 4;\n        puVar6 = puVar6 + 4;\n    }\n    for (uVar2 = uVar5 >> 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    if ((uVar5 & 4) != 0) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 4;\n    }\n    puVar7 = puVar6;\n    if ((uVar5 & 2) != 0) {\n        puVar7 = puVar6 + 2;\n        *puVar6 = 0;\n    }\n    if (bVar8) {\n        *puVar7 = 0;\n    }\n    puVar7 = arg1 + 0x139;\n    *(arg1 + 7) = 0;\n    uVar5 = 0x100;\n    iVar3 = 0x100;\n    bVar8 = (puVar7 & 1) != 0;\n    if (bVar8) {\n        puVar7 = arg1 + 0x13a;\n        *(arg1 + 0x139) = 0;\n        uVar5 = 0xff;\n        iVar3 = 0xff;\n    }\n    if ((puVar7 & 2) == 0) {\n        uVar4 = uVar5;\n    }\n    else {\n        uVar4 = iVar3 - 2;\n        uVar5 = uVar4;\n        *puVar7 = 0;\n        puVar7 = puVar7 + 2;\n    }\n    if ((puVar7 & 4) != 0) {\n        *puVar7 = 0;\n        uVar5 = uVar4 - 4;\n        puVar7 = puVar7 + 4;\n    }\n    for (uVar2 = uVar5 >> 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    if ((uVar5 & 4) != 0) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 4;\n    }\n    puVar6 = puVar7;\n    if ((uVar5 & 2) != 0) {\n        puVar6 = puVar7 + 2;\n        *puVar7 = 0;\n    }\n    if (bVar8) {\n        *puVar6 = 0;\n    }\n    *(arg1 + 0x239) = 0;\n    return;\n}\n",
        "token_count": 1017
    },
    "00469720": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong * fcn.00469720(void)\n\n{\n    ulong uVar1;\n    char cVar2;\n    int32_t iVar3;\n    ulong *puVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    ulong uVar7;\n    int64_t *arg1;\n    int64_t **ppiVar8;\n    ulong arg1_00;\n    int64_t *piVar9;\n    uchar *arg3;\n    uint32_t uVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    ulong *puVar13;\n    uchar auStack360 [16];\n    ulong uStack344;\n    int64_t *piStack312;\n    uint64_t uStack304;\n    \n    puVar4 = sub.msvcrt.dll_malloc(0x90);\n    if (puVar4 != NULL) {\ncode_r0x00469738:\n        iVar5 = fcn.00469d60();\n        *(iVar5 + 8) = *(iVar5 + 8) + 1;\n        puVar13 = puVar4;\n        for (iVar5 = 0x12; iVar5 != 0; iVar5 = iVar5 + -1) {\n            *puVar13 = 0;\n            puVar13 = puVar13 + 1;\n        }\n        return puVar4;\n    }\n    iVar5 = 0x47da20;\n    iVar3 = fcn.0041bdb0(0x47da20);\n    if (iVar3 == 0) {\n        uVar6 = 0;\n        uVar12 = *0x46b380;\n        do {\n            uVar11 = *0x46b380;\n            if ((uVar12 & 1) == 0) {\n                puVar4 = uVar6 * 0x90 + 0x47b3a0;\n                *0x46b380 = 1 << (uVar6 & 0x3f) | *0x46b380;\n                iVar3 = fcn.0041b7a0(0x47da20);\n                if (iVar3 == 0) goto code_r0x00469738;\n                fcn.00420ea0();\n                break;\n            }\n            uVar10 = uVar6 + 1;\n            uVar6 = uVar10;\n            uVar12 = uVar12 >> 1;\n        } while (uVar10 != 0x40);\n        iVar5 = fcn.00466fe0();\n        while (uVar11 = uVar11 + 1,  uVar11 != 0) {\n            iVar5 = fcn.0040ca50(iVar5);\n        }\n        fcn.00469a20(iVar5);\n    }\n    fcn.00420e70();\n    uStack304 = iVar5 + 0xa0;\n    puVar4 = sub.msvcrt.dll_malloc(uStack304);\n    if (puVar4 != NULL) {\ncode_r0x0046981e:\n        iVar5 = fcn.00469d60();\n        *(iVar5 + 8) = *(iVar5 + 8) + 1;\n        puVar13 = puVar4;\n        for (iVar5 = 0x14; iVar5 != 0; iVar5 = iVar5 + -1) {\n            *puVar13 = 0;\n            puVar13 = puVar13 + 1;\n        }\n        return puVar4 + 0x14;\n    }\n    iVar3 = fcn.0041bdb0(0x47da20);\n    if (iVar3 == 0) {\n        uVar12 = *0x46b370;\n        if (uStack304 < 0x401) {\n            uVar11 = 0;\n            uVar6 = *0x46b370;\n            do {\n                if ((uVar6 & 1) == 0) {\n                    puVar4 = uVar11 * 0x400 + 0x46b3a0;\n                    *0x46b370 = 1 << (uVar11 & 0x3f) | *0x46b370;\n                    iVar3 = fcn.0041b7a0(0x47da20);\n                    if (iVar3 == 0) goto code_r0x0046981e;\n                    fcn.00420ea0();\n                    break;\n                }\n                uVar10 = uVar11 + 1;\n                uVar11 = uVar10;\n                uVar6 = uVar6 >> 1;\n            } while (uVar10 != 0x40);\n        }\n        uVar7 = fcn.00466fe0();\n        while (uVar12 = uVar12 + 1,  uVar12 != 0) {\n            uVar7 = fcn.0040ca50(uVar7);\n        }\n        fcn.00469a20(uVar7);\n    }\n    fcn.00420e70();\n    puVar4 = fcn.00469800(8);\n    *puVar4 = 0x489650;\n    fcn.0046a250(puVar4, 0x485b80, 0x460d70);\n    arg1 = fcn.00469800(8);\n    *arg1 = 0x487cf0;\n    fcn.0046a250(arg1, 0x485060, 0x4493b0);\n    ppiVar8 = fcn.00469d60();\n    piStack312 = *ppiVar8;\n    piVar9 = arg1 + -10;\n    if (*arg1 + 0xb8b1aabcbcd4d500U < 2) {\n        iVar3 = *(arg1 + -5);\n        if (iVar3 < 0) {\n            iVar3 = -iVar3;\n        }\n        *(arg1 + -5) = iVar3 + 1;\n        *(ppiVar8 + 1) = *(ppiVar8 + 1) + -1;\n        if (piVar9 != piStack312) {\n            arg1[-6] = piStack312;\n            *ppiVar8 = piVar9;\n        }\n        return arg1[-1];\n    }\n    if (piStack312 == NULL) {\n        *ppiVar8 = piVar9;\n        return NULL;\n    }\n    fcn.00466fe0();\n    if (piStack312 != NULL) {\n        fcn.00469950(piStack312);\n        if (*piStack312 + 0xb8b1aabcbcd4d500U < 2) goto code_r0x00469a0a;\n    }\n    fcn.00466fe0();\ncode_r0x00469a0a:\n    iVar5 = piStack312[-7];\n    fcn.0041f310();\n    fcn.00469950(iVar5);\n    uStack344 = *(iVar5 + -0x10);\n    uVar7 = *(iVar5 + -0x18);\n    iVar3 = *(iVar5 + -0x24);\n    uVar1 = *(iVar5 + -0x38);\n    arg1_00 = fcn.0041f350(*(iVar5 + -0x40));\n    fcn.00469950(arg1_00);\n    piVar9 = fcn.00469e90();\n    puVar13 = *piVar9;\n    puVar4 = puVar13 + 0x12;\n    if ((*(puVar13 + 10) & 1) != 0) {\n        puVar4 = *puVar13;\n    }\n    arg3 = auStack360;\n    fcn.0041ef60(0, uVar7, arg3);\n    cVar2 = fcn.0041f050(arg3, puVar4[-0x12], puVar4, iVar3);\n    if (cVar2 != '\\0') {\n        arg3 = fcn.0046a200();\n        fcn.00469b80();\n        fcn.00469b80();\n        fcn.0040ca50(arg3);\n    }\n    cVar2 = fcn.0041f050(arg3, 0x485330, 0, iVar3);\n    if (cVar2 != '\\0') {\n        puVar4 = fcn.00469800(8);\n        *puVar4 = 0x488250;\n        fcn.0046a250(puVar4, 0x485330, 0x44bd70);\n    }\n    fcn.0041f310(uVar1);\n    ppiVar8 = fcn.00469d60();\n    piVar9 = *ppiVar8;\n    if (piVar9 == NULL) {\n        puVar4 = NULL;\n    }\n    else {\n        if ((*(piVar9 + 10) & 1) != 0) {\n            piVar9 = *piVar9 + -0x90;\n        }\n        puVar4 = *piVar9;\n    }\n    return puVar4;\n}\n",
        "token_count": 1972
    },
    "00469800": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong * fcn.00469800(int64_t size)\n\n{\n    ulong uVar1;\n    char cVar2;\n    int32_t iVar3;\n    ulong *puVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    ulong uVar7;\n    int64_t *arg1;\n    int64_t **ppiVar8;\n    ulong arg1_00;\n    int64_t *piVar9;\n    uchar *arg3;\n    uint32_t uVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    ulong *puVar13;\n    uchar auStack304 [16];\n    ulong uStack288;\n    int64_t *piStack256;\n    uint64_t uStack248;\n    \n    uStack248 = size + 0xa0;\n    puVar4 = sub.msvcrt.dll_malloc(uStack248);\n    if (puVar4 != NULL) {\ncode_r0x0046981e:\n        iVar5 = fcn.00469d60();\n        *(iVar5 + 8) = *(iVar5 + 8) + 1;\n        puVar13 = puVar4;\n        for (iVar5 = 0x14; iVar5 != 0; iVar5 = iVar5 + -1) {\n            *puVar13 = 0;\n            puVar13 = puVar13 + 1;\n        }\n        return puVar4 + 0x14;\n    }\n    iVar3 = fcn.0041bdb0(0x47da20);\n    if (iVar3 == 0) {\n        uVar12 = *0x46b370;\n        if (uStack248 < 0x401) {\n            uVar11 = 0;\n            uVar6 = *0x46b370;\n            do {\n                if ((uVar6 & 1) == 0) {\n                    puVar4 = uVar11 * 0x400 + 0x46b3a0;\n                    *0x46b370 = 1 << (uVar11 & 0x3f) | *0x46b370;\n                    iVar3 = fcn.0041b7a0(0x47da20);\n                    if (iVar3 == 0) goto code_r0x0046981e;\n                    fcn.00420ea0();\n                    break;\n                }\n                uVar10 = uVar11 + 1;\n                uVar11 = uVar10;\n                uVar6 = uVar6 >> 1;\n            } while (uVar10 != 0x40);\n        }\n        uVar7 = fcn.00466fe0();\n        while (uVar12 = uVar12 + 1,  uVar12 != 0) {\n            uVar7 = fcn.0040ca50(uVar7);\n        }\n        fcn.00469a20(uVar7);\n    }\n    fcn.00420e70();\n    puVar4 = fcn.00469800(8);\n    *puVar4 = 0x489650;\n    fcn.0046a250(puVar4, 0x485b80, 0x460d70);\n    arg1 = fcn.00469800(8);\n    *arg1 = 0x487cf0;\n    fcn.0046a250(arg1, 0x485060, 0x4493b0);\n    ppiVar8 = fcn.00469d60();\n    piStack256 = *ppiVar8;\n    piVar9 = arg1 + -10;\n    if (*arg1 + 0xb8b1aabcbcd4d500U < 2) {\n        iVar3 = *(arg1 + -5);\n        if (iVar3 < 0) {\n            iVar3 = -iVar3;\n        }\n        *(arg1 + -5) = iVar3 + 1;\n        *(ppiVar8 + 1) = *(ppiVar8 + 1) + -1;\n        if (piVar9 != piStack256) {\n            arg1[-6] = piStack256;\n            *ppiVar8 = piVar9;\n        }\n        return arg1[-1];\n    }\n    if (piStack256 == NULL) {\n        *ppiVar8 = piVar9;\n        return NULL;\n    }\n    fcn.00466fe0();\n    if (piStack256 != NULL) {\n        fcn.00469950(piStack256);\n        if (*piStack256 + 0xb8b1aabcbcd4d500U < 2) goto code_r0x00469a0a;\n    }\n    fcn.00466fe0();\ncode_r0x00469a0a:\n    iVar5 = piStack256[-7];\n    fcn.0041f310();\n    fcn.00469950(iVar5);\n    uStack288 = *(iVar5 + -0x10);\n    uVar7 = *(iVar5 + -0x18);\n    iVar3 = *(iVar5 + -0x24);\n    uVar1 = *(iVar5 + -0x38);\n    arg1_00 = fcn.0041f350(*(iVar5 + -0x40));\n    fcn.00469950(arg1_00);\n    piVar9 = fcn.00469e90();\n    puVar13 = *piVar9;\n    puVar4 = puVar13 + 0x12;\n    if ((*(puVar13 + 10) & 1) != 0) {\n        puVar4 = *puVar13;\n    }\n    arg3 = auStack304;\n    fcn.0041ef60(0, uVar7, arg3);\n    cVar2 = fcn.0041f050(arg3, puVar4[-0x12], puVar4, iVar3);\n    if (cVar2 != '\\0') {\n        arg3 = fcn.0046a200();\n        fcn.00469b80();\n        fcn.00469b80();\n        fcn.0040ca50(arg3);\n    }\n    cVar2 = fcn.0041f050(arg3, 0x485330, 0, iVar3);\n    if (cVar2 != '\\0') {\n        puVar4 = fcn.00469800(8);\n        *puVar4 = 0x488250;\n        fcn.0046a250(puVar4, 0x485330, 0x44bd70);\n    }\n    fcn.0041f310(uVar1);\n    ppiVar8 = fcn.00469d60();\n    piVar9 = *ppiVar8;\n    if (piVar9 == NULL) {\n        puVar4 = NULL;\n    }\n    else {\n        if ((*(piVar9 + 10) & 1) != 0) {\n            piVar9 = *piVar9 + -0x90;\n        }\n        puVar4 = *piVar9;\n    }\n    return puVar4;\n}\n",
        "token_count": 1526
    },
    "00469b10": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint64_t fcn.00469b10(void)\n\n{\n    int64_t **ppiVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    \n    ppiVar1 = fcn.00469d60();\n    piVar2 = *ppiVar1;\n    if (piVar2 == NULL) {\n        iVar3 = 0;\n    }\n    else {\n        if ((*(piVar2 + 10) & 1) != 0) {\n            piVar2 = *piVar2 + -0x90;\n        }\n        iVar3 = *piVar2;\n    }\n    return iVar3;\n}\n",
        "token_count": 140
    },
    "0040df60": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint64_t fcn.0040df60(ulong arg1)\n\n{\n    uint uVar1;\n    uint64_t uVar2;\n    uchar uStack11;\n    uint16_t auStack10 [5];\n    \n    uVar2 = 0xffffffff;\n    if (arg1 != -1) {\n        uStack11 = arg1;\n        auStack10[0] = 0xffff;\n        uVar1 = sub.msvcrt.dll____lc_codepage_func();\n        (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(uVar1, 8, &uStack11, 1, auStack10, 1);\n        uVar2 = auStack10[0];\n    }\n    return uVar2;\n}\n",
        "token_count": 161
    },
    "00410560": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint64_t fcn.00410560(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    \n    iVar3 = *(arg1 + 0x14);\n    iVar1 = iVar3;\n    piVar5 = arg1 + 0x18;\n    do {\n        if (*piVar5 != -1) {\n            *piVar5 = *piVar5 + 1;\n            return arg1;\n        }\n        piVar4 = piVar5 + 1;\n        *piVar5 = 0;\n        piVar5 = piVar4;\n    } while (piVar4 < arg1 + 0x18 + iVar1);\n    iVar2 = arg1;\n    if (*(arg1 + 0xc) <= iVar3) {\n        iVar2 = fcn.00415020(*(arg1 + 8) + 1);\n        sub.msvcrt.dll_memcpy(iVar2 + 0x10, arg1 + 0x10, *(arg1 + 0x14) * 4 + 8);\n        fcn.00415120(arg1);\n        iVar3 = *(iVar2 + 0x14);\n        iVar1 = iVar3;\n    }\n    *(iVar2 + 0x14) = iVar3 + 1;\n    *(iVar2 + 0x18 + iVar1 * 4) = 1;\n    return iVar2;\n}\n",
        "token_count": 332
    },
    "00417d80": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * fcn.00417d80(char *param_1)\n\n{\n    code *pcVar1;\n    bool bVar2;\n    int32_t **ppiVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint64_t *puVar7;\n    int64_t iVar8;\n    int32_t *piVar9;\n    int64_t iVar10;\n    ulong uVar11;\n    int32_t *piVar12;\n    uint64_t uVar13;\n    char *arg1;\n    uint64_t uVar14;\n    uint64_t uVar15;\n    uint64_t uVar16;\n    ulong *puVar17;\n    ulong *puVar18;\n    uint32_t uVar19;\n    uint32_t uVar20;\n    bool bVar21;\n    ulong auStack224 [5];\n    ulong uStack184;\n    ulong uStack176;\n    int32_t *apiStack168 [4];\n    \n    if (*0x49f448 == NULL) {\n        param_1 = \"_pthread_tls_shmem\";\n        *0x49f448 = fcn.0041d1b0(\"_pthread_tls_shmem\", 4, 0x417030);\n    }\n    piVar9 = *0x49f448;\n    iVar5 = (*_sym.imp.KERNEL32.dll_TlsAlloc)();\n    *piVar9 = iVar5;\n    if (*0x49f448 == NULL) {\n        param_1 = \"_pthread_tls_shmem\";\n        *0x49f448 = fcn.0041d1b0(\"_pthread_tls_shmem\", 4, 0x417030);\n    }\n    if (**0x49f448 != -1) {\n        return *0x49f448;\n    }\n    sub.msvcrt.dll_abort();\n    if (*0x49f418 == NULL) {\n        *0x49f418 = fcn.0041d1b0(\"mtx_pthr_locked_shmem\", 8, 0x417050);\n    }\n    fcn.0041bdb0(*0x49f418);\n    uVar14 = *(param_1 + 0x1d8);\n    if (uVar14 != 0) {\n        if (*0x49f408 == NULL) {\n            *0x49f408 = fcn.0041d1b0(\"idListCnt_shmem\", 8, 0);\n        }\n        if (**0x49f408 != 0) {\n            if (*0x49f408 == NULL) {\n                *0x49f408 = fcn.0041d1b0(\"idListCnt_shmem\", 8, 0);\n            }\n            uVar16 = 0;\n            uVar13 = **0x49f408 - 1;\n            do {\n                uVar15 = uVar16 + uVar13 >> 1;\n                if (*0x49f410 == NULL) {\n                    *0x49f410 = fcn.0041d1b0(\"idList_shmem\", 8, 0);\n                    if (uVar14 == *(**0x49f410 + 8 + uVar15 * 0x10)) goto code_r0x0041800b;\n                    if (*0x49f410 == NULL) {\n                        *0x49f410 = fcn.0041d1b0(\"idList_shmem\", 8, 0);\n                    }\n                }\n                else if (uVar14 == *(**0x49f410 + 8 + uVar15 * 0x10)) {\ncode_r0x0041800b:\n                    if (*0x49f410 == NULL) {\n                        *0x49f410 = fcn.0041d1b0(\"idList_shmem\", 8, 0);\n                    }\n                    uVar15 = uVar15 + 1;\n                    if (*0x49f408 == NULL) {\n                        *0x49f408 = fcn.0041d1b0(\"idListCnt_shmem\", 8, 0);\n                        if (uVar15 < **0x49f408) {\n                            if (*0x49f408 == NULL) {\n                                *0x49f408 = fcn.0041d1b0(\"idListCnt_shmem\", 8, 0);\n                            }\n                            goto code_r0x004181c4;\n                        }\n                    }\n                    else if (uVar15 < **0x49f408) {\ncode_r0x004181c4:\n                        if (*0x49f410 == NULL) {\n                            *0x49f410 = fcn.0041d1b0(\"idList_shmem\", 8, 0);\n                        }\n                        sub.msvcrt.dll_memmove(**0x49f410 + -0x10 + uVar15 * 0x10, **0x49f410 + uVar15 * 0x10);\n                    }\n                    puVar7 = *0x49f408;\n                    if (*0x49f408 == NULL) {\n                        puVar7 = fcn.0041d1b0(\"idListCnt_shmem\", 8, 0);\n                        *0x49f408 = puVar7;\n                        *puVar7 = *puVar7 - 1;\n                        if (puVar7 == NULL) {\n                            puVar7 = fcn.0041d1b0(\"idListCnt_shmem\", 8, 0);\n                            *0x49f408 = puVar7;\n                        }\n                    }\n                    else {\n                        **0x49f408 = **0x49f408 - 1;\n                    }\n                    if (*puVar7 == 0) {\n                        if (*0x49f410 == NULL) {\n                            *0x49f410 = fcn.0041d1b0(\"idList_shmem\", 8, 0);\n                        }\n                        fcn.00416d90(**0x49f410);\n                        if (*0x49f408 == NULL) {\n                            *0x49f408 = fcn.0041d1b0(\"idListCnt_shmem\", 8, 0);\n                        }\n                        puVar7 = *0x49f408;\n                        if (*0x49f400 == NULL) {\n                            *0x49f400 = fcn.0041d1b0(\"idListMax_shmem\", 8, 0);\n                        }\n                        **0x49f400 = 0;\n                        *puVar7 = 0;\n                    }\n                    break;\n                }\n                if (uVar14 < *(**0x49f410 + 8 + uVar15 * 0x10)) {\n                    if (uVar16 == uVar15) break;\n                    uVar13 = uVar15 - 1;\n                }\n                else {\n                    uVar16 = uVar15 + 1;\n                }\n            } while (uVar16 <= uVar13);\n        }\n    }\n    if (*(param_1 + 0x50) != 0) {\n        fcn.00416d90();\n    }\n    if (*(param_1 + 0x58) != 0) {\n        fcn.00416d90();\n    }\n    uVar14 = 0x1e0;\n    bVar2 = false;\n    iVar5 = 0x1e0;\n    bVar21 = false;\n    if ((param_1 & 1) == 0) {\n        puVar17 = param_1;\n        if ((param_1 & 2) != 0) goto code_r0x004180b0;\ncode_r0x00417e6c:\n        uVar20 = uVar14;\n    }\n    else {\n        puVar17 = param_1 + 1;\n        *param_1 = 0;\n        uVar14 = 0x1df;\n        bVar2 = true;\n        iVar5 = 0x1df;\n        bVar21 = true;\n        if ((puVar17 & 2) == 0) goto code_r0x00417e6c;\ncode_r0x004180b0:\n        uVar20 = iVar5 - 2;\n        uVar14 = uVar20;\n        *puVar17 = 0;\n        puVar17 = puVar17 + 2;\n        bVar2 = bVar21;\n    }\n    if ((puVar17 & 4) != 0) {\n        *puVar17 = 0;\n        uVar14 = uVar20 - 4;\n        puVar17 = puVar17 + 4;\n    }\n    for (uVar13 = uVar14 >> 3; uVar13 != 0; uVar13 = uVar13 - 1) {\n        *puVar17 = 0;\n        puVar17 = puVar17 + 1;\n    }\n    if ((uVar14 & 4) != 0) {\n        *puVar17 = 0;\n        puVar17 = puVar17 + 4;\n    }\n    puVar18 = puVar17;\n    if ((uVar14 & 2) != 0) {\n        puVar18 = puVar17 + 2;\n        *puVar17 = 0;\n    }\n    if (bVar2) {\n        *puVar18 = 0;\n    }\n    if (*0x49f420 == NULL) {\n        *0x49f420 = fcn.0041d1b0(\"pthr_last_shmem\", 8, 0);\n    }\n    if (**0x49f420 == 0) {\n        if (*0x49f428 == NULL) {\n            *0x49f428 = fcn.0041d1b0(\"pthr_root_shmem\", 8, 0);\n        }\n        puVar17 = *0x49f428;\n        if (*0x49f420 == NULL) {\n            *0x49f420 = fcn.0041d1b0(\"pthr_last_shmem\", 8, 0);\n        }\n        **0x49f420 = param_1;\n        *puVar17 = param_1;\n    }\n    else {\n        if (*0x49f420 == NULL) {\n            *0x49f420 = fcn.0041d1b0(\"pthr_last_shmem\", 8, 0);\n        }\n        *(**0x49f420 + 0x1d0) = param_1;\n    }\n    if (*0x49f418 == NULL) {\n        *0x49f418 = fcn.0041d1b0(\"mtx_pthr_locked_shmem\", 8, 0x417050);\n    }\n    ppiVar3 = *0x49f418;\n    piVar9 = fcn.0041b230(*0x49f418);\n    if (piVar9 != 0) {\n        return piVar9;\n    }\n    uStack176 = *ppiVar3;\n    if (uStack176[2] == 0) {\n        uVar20 = 1;\n        if (uStack176[5] == 0) goto code_r0x0041b560;\n        goto code_r0x0041b7d0;\n    }\n    iVar5 = uStack176[5];\n    if (iVar5 != 0) {\n        iVar6 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        if (iVar5 == iVar6) {\n            if (uStack176[2] == 2) {\n                LOCK();\n                piVar9 = uStack176 + 3;\n                iVar5 = *piVar9;\n                *piVar9 = *piVar9 + -1;\n                if (iVar5 == 1) goto code_r0x0041b7d0;\ncode_r0x0041b7f2:\n                uVar20 = 0;\n            }\n            else {\ncode_r0x0041b7d0:\n                uStack176[5] = 0;\n                if (*(uStack176 + 6) == 0) goto code_r0x0041b7f2;\n                iVar5 = (*_sym.imp.KERNEL32.dll_ReleaseSemaphore)(*(uStack176 + 6), 1, 0);\n                if (iVar5 != 0) goto code_r0x0041b7f2;\n                iVar5 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n                uVar20 = 1;\n                uStack176[5] = iVar5;\n            }\n            uStack176 = *ppiVar3;\n            goto code_r0x0041b560;\n        }\n        uStack176 = *ppiVar3;\n    }\n    uVar20 = 1;\ncode_r0x0041b560:\n    apiStack168[0] = uVar20;\n    if (*0x49f498 == 0) {\n        *0x49f498 = fcn.0041d1b0(\"mutex_global_shmem\", 0x10, 0x41b1d0);\n    }\n    fcn.0041d560(*0x49f498);\n    iVar8 = *0x49f498;\n    if ((*uStack176 == -0x454e0ff3) && (0 < uStack176[1])) {\n        bVar21 = *0x49f498 == 0;\n        uStack176[1] = uStack176[1] + -1;\n        if (bVar21) {\n            *0x49f498 = fcn.0041d1b0(\"mutex_global_shmem\", 0x10, 0x41b1d0);\n            fcn.0041d4c0(*0x49f498);\n            return apiStack168[0];\n        }\n        fcn.0041d4c0(iVar8);\n        return apiStack168[0];\n    }\n    iVar8 = (*_sym.imp.msvcrt.dll___iob_func)();\n    sub.msvcrt.dll_fprintf(iVar8 + 0x60, 0x483d68, \"(m_->valid == LIFE_MUTEX) && (m_->busy > 0)\");\n    sub.msvcrt.dll_exit(1);\n    arg1 = \"mutex_global_shmem\";\n    auStack224[0] = 0x41d1d6;\n    iVar5 = sub.msvcrt.dll_strlen();\n    auStack224[0] = 0x41d1ee;\n    iVar10 = fcn.0040ce40(arg1);\n    iVar10 = -iVar10;\n    iVar8 = &uStack184 + iVar10;\n    *(&uStack184 + iVar10) = 0x656d68732d636367;\n    *(&uStack176 + iVar10) = 0x64742d6d;\n    *(&uStack176 + iVar10 + 4) = 0x326d;\n    uVar20 = iVar5 + 0x50;\n    *(&uStack176 + iVar10 + 6) = 0x2d;\n    *(auStack224 + iVar10) = 0x41d236;\n    sub.msvcrt.dll_memcpy(&uStack176 + iVar10 + 7, \"mutex_global_shmem\", iVar5);\n    puVar17 = apiStack168 + iVar5 + iVar10;\n    *puVar17 = 0x6161616161616161;\n    puVar17[1] = 0x6161616161616161;\n    puVar17[2] = 0x6161616161616161;\n    puVar17[3] = 0x6161616161616161;\n    puVar17[4] = 0x6161616161616161;\n    puVar17[5] = 0x6161616161616161;\n    puVar17[6] = 0x6161616161616161;\n    puVar17[7] = 0x6161616161616161;\n    *(&uStack184 + uVar20 + iVar10) = 0;\n    *(&uStack184 + (iVar5 + 0xf) + iVar10) = 0;\n    *(auStack224 + iVar10) = 0x41d27e;\n    uVar11 = (*_sym.imp.KERNEL32.dll_CreateMutexA)(0, 0);\n    *(&uStack184 + (iVar5 + 0xf) + iVar10) = 0x2d;\n    *(auStack224 + iVar10) = 0x41d294;\n    iVar6 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(uVar11, 0xffffffff);\n    if (iVar6 != 0) {\n        pcVar1 = swi(3);\n        piVar9 = (*pcVar1)();\n        return piVar9;\n    }\n    *(auStack224 + iVar10) = 0x41d2a2;\n    uVar4 = (*_sym.imp.KERNEL32.dll_FindAtomA)();\n    if (uVar4 == 0) {\n        *(auStack224 + iVar10) = 0x41d2b7;\n        piVar12 = sub.msvcrt.dll_malloc(0x10);\n        uVar14 = 0x40;\n        do {\n            if ((piVar12 >> (uVar14 & 0x3f) & 1) != 0) {\n                *(iVar8 + (uVar20 - uVar14)) = 0x41;\n            }\n            uVar19 = uVar14 - 1;\n            uVar14 = uVar19;\n        } while (uVar19 != 0);\n        *(auStack224 + iVar10) = 0x41d2e3;\n        uVar4 = (*_sym.imp.KERNEL32.dll_AddAtomA)();\n        if (uVar4 == 0) {\n            pcVar1 = swi(3);\n            piVar9 = (*pcVar1)();\n            return piVar9;\n        }\n        *(auStack224 + iVar10) = 0x41d2f9;\n        piVar9 = fcn.0041d130(uVar4, iVar8, uVar20, iVar5 + 0x10);\n        if (piVar9 == piVar12) {\n            *(auStack224 + iVar10) = 0x41d356;\n            sub.msvcrt.dll_memset(piVar12, 0, 0x10);\n            *(auStack224 + iVar10) = 0x41d361;\n            (*0x41b1d0)(piVar12);\n        }\n        else {\n            *(auStack224 + iVar10) = 0x41d309;\n            fcn.00416d90(piVar12);\n        }\n    }\n    else {\n        *(auStack224 + iVar10) = 0x41d344;\n        piVar9 = fcn.0041d130(uVar4, iVar8, uVar20, iVar5 + 0x10);\n    }\n    *(auStack224 + iVar10) = 0x41d312;\n    (*_sym.imp.KERNEL32.dll_ReleaseMutex)(uVar11);\n    *(auStack224 + iVar10) = 0x41d31b;\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar11);\n    return piVar9;\n}\n",
        "token_count": 4216
    },
    "00425240": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.00425240(int64_t **arg1, int64_t **arg2)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    uint32_t uVar3;\n    char cVar4;\n    \n    piVar1 = *arg1;\n    if (piVar1 == NULL) {\n        cVar4 = '\\x01';\n    }\n    else {\n        cVar4 = '\\0';\n        if (*(arg1 + 1) == -1) {\n            if (piVar1[2] < piVar1[3]) {\n                uVar3 = *piVar1[2];\n            }\n            else {\n                uVar3 = (**(*piVar1 + 0x48))();\n                if (uVar3 == 0xffffffff) {\n                    *arg1 = NULL;\n                    cVar4 = '\\x01';\n                    goto code_r0x00425259;\n                }\n            }\n            *(arg1 + 1) = uVar3;\n            cVar4 = '\\0';\n        }\n    }\ncode_r0x00425259:\n    piVar1 = *arg2;\n    if (piVar1 == NULL) {\n        cVar2 = '\\x01';\n    }\n    else {\n        cVar2 = '\\0';\n        if (*(arg2 + 1) == -1) {\n            if (piVar1[2] < piVar1[3]) {\n                uVar3 = *piVar1[2];\n            }\n            else {\n                uVar3 = (**(*piVar1 + 0x48))();\n                if (uVar3 == 0xffffffff) {\n                    *arg2 = NULL;\n                    return cVar4 == '\\x01';\n                }\n            }\n            *(arg2 + 1) = uVar3;\n            return cVar4 == '\\0';\n        }\n    }\n    return cVar2 == cVar4;\n}\n",
        "token_count": 410
    },
    "00425320": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint64_t fcn.00425320(int64_t **arg1)\n\n{\n    int64_t *piVar1;\n    uint64_t uVar2;\n    \n    piVar1 = *arg1;\n    if (piVar1 == NULL) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        uVar2 = *(arg1 + 1);\n        if (*(arg1 + 1) == 0xffffffff) {\n            if (piVar1[2] < piVar1[3]) {\n                uVar2 = *piVar1[2];\n            }\n            else {\n                uVar2 = (**(*piVar1 + 0x48))();\n                if (uVar2 == -1) {\n                    *arg1 = NULL;\n                    return uVar2;\n                }\n            }\n            *(arg1 + 1) = uVar2;\n            return uVar2;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 205
    },
    "00435380": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t ** fcn.00435380(int64_t **arg1, ulong arg2, int64_t **arg3, int64_t **arg4)\n\n{\n    int64_t *piVar1;\n    uint8_t uVar2;\n    char cVar3;\n    uint8_t uVar4;\n    char cVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int64_t iVar8;\n    int64_t *piVar9;\n    uint64_t uVar10;\n    int64_t **ppiVar11;\n    int64_t iVar12;\n    uint64_t uVar13;\n    uint64_t uVar14;\n    uint64_t uVar15;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    int64_t in_stack_00000038;\n    int64_t in_stack_00000040;\n    ulong arg_40h;\n    int64_t *piStack232;\n    int64_t *piStack224;\n    int64_t *piStack216;\n    int64_t *piStack208;\n    int64_t *piStack200;\n    uint uStack192;\n    uint32_t uStack176;\n    int32_t iStack172;\n    ulong uStack168;\n    ulong uStack160;\n    ulong uStack152;\n    ulong uStack144;\n    ulong uStack136;\n    ulong uStack128;\n    ulong uStack120;\n    ulong uStack112;\n    ulong uStack104;\n    ulong uStack96;\n    ulong uStack88;\n    ulong uStack80;\n    \n    iVar8 = fcn.004671a0(in_stack_00000028 + 0xd0);\n    uVar14 = 0;\n    piVar9 = fcn.00467260(in_stack_00000028 + 0xd0);\n    uVar10 = sub.msvcrt.dll_strlen(in_stack_00000040);\n    uStack176 = 0;\n    do {\n        piVar1 = *arg3;\n        if (piVar1 == NULL) {\n            cVar3 = '\\x01';\n        }\n        else {\n            cVar3 = '\\0';\n            if (*(arg3 + 1) == -1) {\n                if (piVar1[2] < piVar1[3]) {\n                    uVar7 = *piVar1[2];\n                }\n                else {\n                    uVar7 = (**(*piVar1 + 0x48))();\n                    if (uVar7 == 0xffffffff) {\n                        *arg3 = NULL;\n                        cVar3 = '\\x01';\n                        goto code_r0x0043545d;\n                    }\n                }\n                *(arg3 + 1) = uVar7;\n                cVar3 = '\\0';\n            }\n        }\ncode_r0x0043545d:\n        piVar1 = *arg4;\n        if (piVar1 == NULL) {\n            cVar5 = '\\x01';\n        }\n        else {\n            cVar5 = '\\0';\n            if (*(arg4 + 1) == -1) {\n                if (piVar1[2] < piVar1[3]) {\n                    uVar7 = *piVar1[2];\n                }\n                else {\n                    uVar7 = (**(*piVar1 + 0x48))();\n                    if (uVar7 == 0xffffffff) {\n                        *arg4 = NULL;\n                        cVar5 = '\\x01';\n                        goto code_r0x00435475;\n                    }\n                }\n                *(arg4 + 1) = uVar7;\n                cVar5 = '\\0';\n            }\n        }\ncode_r0x00435475:\n        if (((cVar3 == cVar5) || (uVar10 <= uVar14)) || (uStack176 != 0)) {\n            if ((uStack176 != 0) || (uVar14 != uVar10)) {\n                *in_stack_00000030 = *in_stack_00000030 | 4;\n            }\n            piVar9 = arg3[1];\n            *arg1 = *arg3;\n            arg1[1] = piVar9;\n            return arg1;\n        }\n        uVar4 = *(in_stack_00000040 + uVar14);\n        cVar3 = *(piVar9 + uVar4 + 0x139);\n        if (cVar3 == '\\0') {\n            cVar3 = (**(*piVar9 + 0x40))(piVar9, uVar4, 0);\n            if (cVar3 != '\\0') {\n                *(piVar9 + uVar4 + 0x139) = cVar3;\n                goto code_r0x004354b7;\n            }\ncode_r0x00435580:\n            piVar1 = *arg3;\n            uVar4 = *(in_stack_00000040 + uVar14);\n            if (piVar1 == NULL) {\n                uVar7 = 0xffffffff;\ncode_r0x00435599:\n                uVar2 = uVar7;\n            }\n            else {\n                uVar7 = *(arg3 + 1);\n                if (uVar7 != 0xffffffff) goto code_r0x00435599;\n                if (piVar1[2] < piVar1[3]) {\n                    uVar7 = *piVar1[2];\n                }\n                else {\n                    uVar7 = (**(*piVar1 + 0x48))();\n                    if (uVar7 == 0xffffffff) {\n                        *arg3 = NULL;\n                        goto code_r0x00435599;\n                    }\n                }\n                uVar2 = uVar7;\n                *(arg3 + 1) = uVar7;\n            }\n            uVar13 = uVar14;\n            if (uVar2 == uVar4) {\ncode_r0x0043562d:\n                fcn.0045dd90(arg3);\n            }\n            else {\ncode_r0x004355a2:\n                uStack176 = uStack176 | 4;\n            }\n            goto code_r0x004355aa;\n        }\ncode_r0x004354b7:\n        if (cVar3 != '%') goto code_r0x00435580;\n        uVar13 = uVar14 + 1;\n        uVar15 = *(in_stack_00000040 + 1 + uVar14);\n        cVar3 = *(piVar9 + uVar15 + 0x139);\n        if (cVar3 == '\\0') {\n            cVar3 = (**(*piVar9 + 0x40))(piVar9);\n            if (cVar3 != '\\0') {\n                *(piVar9 + uVar15 + 0x139) = cVar3;\n                goto code_r0x004354dd;\n            }\ncode_r0x00435665:\n            uStack176 = uStack176 | 4;\n            goto code_r0x004355aa;\n        }\ncode_r0x004354dd:\n        iStack172 = 0;\n        if ((cVar3 == 'O') || (cVar3 == 'E')) {\n            uVar13 = uVar14 + 2;\n            uVar4 = *(in_stack_00000040 + uVar13);\n            cVar3 = *(piVar9 + uVar4 + 0x139);\n            if (cVar3 == '\\0') {\n                cVar3 = (**(*piVar9 + 0x40))(piVar9);\n                if (cVar3 == '\\0') goto code_r0x00435665;\n                *(piVar9 + uVar4 + 0x139) = cVar3;\n            }\n        }\n    // switch table (57 cases) at 0x480880\n        switch(cVar3) {\n        case 'A':\n            iVar12 = *(iVar8 + 0x10);\n            uStack168 = *(iVar12 + 0x58);\n            uStack160 = *(iVar12 + 0x60);\n            uStack152 = *(iVar12 + 0x68);\n            uStack144 = *(*(iVar8 + 0x10) + 0x70);\n            uStack136 = *(*(iVar8 + 0x10) + 0x78);\n            uStack128 = *(*(iVar8 + 0x10) + 0x80);\n            uStack120 = *(*(iVar8 + 0x10) + 0x88);\n            goto code_r0x00435bae;\n        case 'B':\n            iVar12 = *(iVar8 + 0x10);\n            uStack168 = *(iVar12 + 200);\n            uStack160 = *(iVar12 + 0xd0);\n            uStack152 = *(iVar12 + 0xd8);\n            uStack144 = *(*(iVar8 + 0x10) + 0xe0);\n            uStack136 = *(*(iVar8 + 0x10) + 0xe8);\n            uStack128 = *(*(iVar8 + 0x10) + 0xf0);\n            uStack120 = *(*(iVar8 + 0x10) + 0xf8);\n            uStack112 = *(*(iVar8 + 0x10) + 0x100);\n            uStack104 = *(*(iVar8 + 0x10) + 0x108);\n            uStack96 = *(*(iVar8 + 0x10) + 0x110);\n            uStack88 = *(*(iVar8 + 0x10) + 0x118);\n            uStack80 = *(*(iVar8 + 0x10) + 0x120);\n            goto code_r0x00435a9f;\n        case 'C':\n        case 'Y':\n        case 'y':\n            piStack216 = *arg3;\n            piStack208 = arg3[1];\n            piStack232 = *arg4;\n            piStack224 = arg4[1];\n            fcn.004346f0(&piStack200, arg2, &piStack216, &piStack232);\n            *arg3 = piStack200;\n            *(arg3 + 1) = uStack192;\n            if (uStack176 == 0) {\n                iVar6 = iStack172 + 100;\n                if (-1 < iStack172) {\n                    iVar6 = iStack172 + -0x76c;\n                }\n                *(in_stack_00000038 + 0x14) = iVar6;\n            }\n            goto code_r0x004355aa;\n        case 'D':\n            if (*(piVar9 + 7) == '\\x01') {\n                uStack168 = 0x79252f64252f6d25;\n    // WARNING: Ignoring partial resolution of indirect\n                uStack160._0_1_ = 0;\n            }\n            else {\n                if (*(piVar9 + 7) == '\\0') {\n                    fcn.00425590(piVar9);\n                }\n                (**(*piVar9 + 0x38))(piVar9, 0x480866, \"%H:%M\", &uStack168);\n            }\n            goto code_r0x00436026;\n        default:\n            goto code_r0x00435665;\n        case 'H':\n            piStack216 = *arg3;\n            piStack208 = arg3[1];\n            piStack232 = *arg4;\n            piStack224 = arg4[1];\n            break;\n        case 'I':\n            piStack216 = *arg3;\n            piStack208 = arg3[1];\n            piStack232 = *arg4;\n            piStack224 = arg4[1];\n            break;\n        case 'M':\n            piStack216 = *arg3;\n            piStack208 = arg3[1];\n            piStack232 = *arg4;\n            piStack224 = arg4[1];\n            break;\n        case 'R':\n            if (*(piVar9 + 7) == '\\x01') {\n    // WARNING: Ignoring partial resolution of indirect\n                uStack168._0_4_ = 0x253a4825;\n            }\n            else {\n                if (*(piVar9 + 7) == '\\0') {\n                    fcn.00425590(piVar9);\n                }\n                (**(*piVar9 + 0x38))(piVar9, \"%H:%M\", 0x480875, &uStack168);\n            }\n            goto code_r0x00436026;\n        case 'S':\n            piStack216 = *arg3;\n            piStack208 = arg3[1];\n            piStack232 = *arg4;\n            piStack224 = arg4[1];\n            break;\n        case 'T':\n            if (*(piVar9 + 7) == '\\x01') {\n                uStack168 = 0x53253a4d253a4825;\n    // WARNING: Ignoring partial resolution of indirect\n                uStack160._0_1_ = 0;\n            }\n            else {\n                if (*(piVar9 + 7) == '\\0') {\n                    fcn.00425590(piVar9);\n                }\n                (**(*piVar9 + 0x38))(piVar9, 0x480875, 0x48087e, &uStack168);\n            }\ncode_r0x00436026:\n            piStack216 = *arg3;\n            piStack208 = arg3[1];\n            piStack232 = *arg4;\n            piStack224 = arg4[1];\n            goto code_r0x004356e0;\n        case 'X':\n            piStack216 = *arg3;\n            piStack208 = arg3[1];\n            piStack232 = *arg4;\n            piStack224 = arg4[1];\n            goto code_r0x004356e0;\n        case 'Z':\n            uVar4 = fcn.00425320(arg3);\n            if ((*(piVar9[6] + uVar4 * 2) & 1) == 0) goto code_r0x004355a2;\n            piStack216 = *arg3;\n            piStack208 = arg3[1];\n            piStack232 = *arg4;\n            piStack224 = arg4[1];\n            fcn.00434d40(&piStack200, arg2, &piStack216, &piStack232, &uStack168, 0x47f120, 0xe, in_stack_00000028, \n                         &uStack176);\n            *arg3 = piStack200;\n            *(arg3 + 1) = uStack192;\n            cVar3 = fcn.00425240(arg3, arg4);\n            if (((cVar3 == '\\0') && (uStack176 == 0)) && (uStack168 == 0)) {\n                cVar3 = fcn.00425320(arg3);\n                if (*(piVar9 + 7) == '\\0') {\n                    cVar5 = fcn.004256b0(piVar9, 0x2d);\n                }\n                else {\n                    cVar5 = *(piVar9 + 0x66);\n                }\n                if (cVar3 != cVar5) {\n                    cVar3 = fcn.00425320(arg3);\n                    if (*(piVar9 + 7) == '\\0') {\n                        cVar5 = fcn.004256b0(piVar9, 0x2b);\n                    }\n                    else {\n                        cVar5 = *(piVar9 + 100);\n                    }\n                    if (cVar3 != cVar5) goto code_r0x004355aa;\n                }\n                piStack216 = *arg3;\n                piStack208 = arg3[1];\n                piStack232 = *arg4;\n                piStack224 = arg4[1];\n                fcn.004346f0(&piStack200, arg2, &piStack216, &piStack232);\n                *arg3 = piStack200;\n                *(arg3 + 1) = uStack192;\n                piStack216 = *arg3;\n                piStack208 = arg3[1];\n                piStack232 = *arg4;\n                piStack224 = arg4[1];\n                break;\n            }\n            goto code_r0x004355aa;\n        case 'a':\n            iVar12 = *(iVar8 + 0x10);\n            uStack168 = *(iVar12 + 0x90);\n            uStack160 = *(iVar12 + 0x98);\n            uStack152 = *(iVar12 + 0xa0);\n            uStack144 = *(*(iVar8 + 0x10) + 0xa8);\n            uStack136 = *(*(iVar8 + 0x10) + 0xb0);\n            uStack128 = *(*(iVar8 + 0x10) + 0xb8);\n            uStack120 = *(*(iVar8 + 0x10) + 0xc0);\ncode_r0x00435bae:\n            piStack208 = arg3[1];\n            piStack216 = *arg3;\n            piStack232 = *arg4;\n            piStack224 = arg4[1];\n            arg_40h = 7;\n            iVar12 = in_stack_00000038 + 0x18;\ncode_r0x00435b11:\n            fcn.00434d40(&piStack200, arg2, &piStack216, &piStack232, iVar12, &uStack168, arg_40h, in_stack_00000028, \n                         &uStack176);\n            goto code_r0x00435725;\n        case 'b':\n        case 'h':\n            iVar12 = *(iVar8 + 0x10);\n            uStack168 = *(iVar12 + 0x128);\n            uStack160 = *(iVar12 + 0x130);\n            uStack152 = *(iVar12 + 0x138);\n            uStack144 = *(*(iVar8 + 0x10) + 0x140);\n            uStack136 = *(*(iVar8 + 0x10) + 0x148);\n            uStack128 = *(*(iVar8 + 0x10) + 0x150);\n            uStack120 = *(*(iVar8 + 0x10) + 0x158);\n            uStack112 = *(*(iVar8 + 0x10) + 0x160);\n            uStack104 = *(*(iVar8 + 0x10) + 0x168);\n            uStack96 = *(*(iVar8 + 0x10) + 0x170);\n            uStack88 = *(*(iVar8 + 0x10) + 0x178);\n            uStack80 = *(*(iVar8 + 0x10) + 0x180);\ncode_r0x00435a9f:\n            piStack208 = arg3[1];\n            piStack216 = *arg3;\n            piStack232 = *arg4;\n            piStack224 = arg4[1];\n            arg_40h = 0xc;\n            iVar12 = in_stack_00000038 + 0x10;\n            goto code_r0x00435b11;\n        case 'c':\n            piStack216 = *arg3;\n            piStack208 = arg3[1];\n            piStack232 = *arg4;\n            piStack224 = arg4[1];\n            goto code_r0x004356e0;\n        case 'd':\n            piStack216 = *arg3;\n            piStack208 = arg3[1];\n            piStack232 = *arg4;\n            piStack224 = arg4[1];\n            break;\n        case 'e':\n            uVar4 = fcn.00425320(arg3);\n            if ((*(piVar9[6] + uVar4 * 2) & 0x20) == 0) {\n                piStack216 = *arg3;\n                piStack208 = arg3[1];\n                piStack232 = *arg4;\n                piStack224 = arg4[1];\n            }\n            else {\n                ppiVar11 = fcn.0045dd90(arg3);\n                piStack208 = ppiVar11[1];\n                piStack216 = *ppiVar11;\n                piStack232 = *arg4;\n                piStack224 = arg4[1];\n            }\n            break;\n        case 'm':\n            piStack216 = *arg3;\n            piStack208 = arg3[1];\n            piStack232 = *arg4;\n            piStack224 = arg4[1];\n            fcn.004346f0(&piStack200, arg2, &piStack216, &piStack232);\n            *arg3 = piStack200;\n            *(arg3 + 1) = uStack192;\n            if (uStack176 == 0) {\n                *(in_stack_00000038 + 0x10) = iStack172 + -1;\n            }\n            goto code_r0x004355aa;\n        case 'n':\n            uVar14 = fcn.00425320(arg3);\n            cVar3 = *(piVar9 + (uVar14 & 0xff) + 0x139);\n            if (cVar3 == '\\0') {\n                cVar3 = (**(*piVar9 + 0x40))(piVar9);\n                if (cVar3 == '\\0') goto code_r0x004355a2;\n                *(piVar9 + (uVar14 & 0xff) + 0x139) = cVar3;\n            }\n            if (cVar3 != '\\n') goto code_r0x004355a2;\n            goto code_r0x0043562d;\n        case 't':\n            uVar14 = fcn.00425320(arg3);\n            cVar3 = *(piVar9 + (uVar14 & 0xff) + 0x139);\n            if (cVar3 == '\\0') {\n                cVar3 = (**(*piVar9 + 0x40))(piVar9);\n                if (cVar3 == '\\0') goto code_r0x004355a2;\n                *(piVar9 + (uVar14 & 0xff) + 0x139) = cVar3;\n            }\n            if (cVar3 == '\\t') goto code_r0x0043562d;\n            goto code_r0x004355a2;\n        case 'x':\n            piStack216 = *arg3;\n            piStack208 = arg3[1];\n            piStack232 = *arg4;\n            piStack224 = arg4[1];\ncode_r0x004356e0:\n            fcn.00435380(&piStack200, arg2, &piStack216, &piStack232);\n            goto code_r0x00435725;\n        }\n        fcn.004346f0(&piStack200, arg2, &piStack216, &piStack232);\ncode_r0x00435725:\n        *arg3 = piStack200;\n        *(arg3 + 1) = uStack192;\ncode_r0x004355aa:\n        uVar14 = uVar13 + 1;\n    } while( true );\n}\n",
        "token_count": 5021
    },
    "004444a0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nchar * fcn.004444a0(uchar *arg1, int64_t *arg2, uint8_t *arg3)\n\n{\n    int64_t arg1_00;\n    int64_t iVar1;\n    int64_t *piVar2;\n    int32_t iVar3;\n    uint8_t *puVar4;\n    uint64_t uVar5;\n    char *pcVar6;\n    uint32_t uVar7;\n    int64_t iVar8;\n    uchar auStack96 [16];\n    ulong uStack80;\n    \n    iVar8 = *arg2;\n    *arg1 = 0;\n    iVar8 = arg2 + *(iVar8 + -0x18);\n    pcVar6 = *(iVar8 + 0x20);\n    if (*(iVar8 + 0x20) == 0) {\n        if (*(iVar8 + 0xd8) != 0) {\n            uStack80 = 0x4444de;\n            fcn.004455f0(*(iVar8 + 0xd8));\n            arg3 = arg3 & 0xffffffff;\n            iVar8 = arg2 + *(*arg2 + -0x18);\n        }\n        if ((arg3 == '\\0') && ((*(iVar8 + 0x19) & 0x10) != 0)) {\n            arg1_00 = *(iVar8 + 0xe8);\n            if (*(arg1_00 + 0x18) <= *(arg1_00 + 0x10)) goto code_r0x004445fa;\n            uVar5 = **(arg1_00 + 0x10);\n            while (iVar1 = *(iVar8 + 0xf0),  iVar1 == 0) {\n                uStack80 = 0x4445fa;\n                fcn.00464f90();\ncode_r0x004445fa:\n                uStack80 = 0x444607;\n                uVar5 = fcn.0046a500(arg1_00);\n                iVar8 = arg2 + *(*arg2 + -0x18);\n            }\n            if (uVar5 == -1) {\ncode_r0x004445c7:\n                pcVar6 = *(iVar8 + 0x20);\n                uVar7 = 2;\n                goto code_r0x00444552;\n            }\n            if ((*(*(iVar1 + 0x30) + (uVar5 & 0xff) * 2) & 0x20) != 0) {\n                do {\n                    arg3 = *(arg1_00 + 0x18);\n                    if (arg3 <= *(arg1_00 + 0x10)) {\n                        uStack80 = 0x4445b3;\n                        iVar3 = fcn.0046a4f0(arg1_00);\n                        if (iVar3 != -1) {\n                            puVar4 = *(arg1_00 + 0x10);\n                            arg3 = *(arg1_00 + 0x18);\n                            goto code_r0x00444585;\n                        }\ncode_r0x004445bd:\n                        iVar8 = arg2 + *(*arg2 + -0x18);\n                        goto code_r0x004445c7;\n                    }\n                    puVar4 = *(arg1_00 + 0x10) + 1;\n                    *(arg1_00 + 0x10) = puVar4;\ncode_r0x00444585:\n                    if (puVar4 < arg3) {\n                        uVar5 = *puVar4;\n                    }\n                    else {\n                        uStack80 = 0x4445df;\n                        uVar5 = fcn.0046a500(arg1_00);\n                        if (uVar5 == -1) goto code_r0x004445bd;\n                    }\n                } while ((*(*(iVar1 + 0x30) + (uVar5 & 0xff) * 2) & 0x20) != 0);\n                iVar8 = arg2 + *(*arg2 + -0x18);\n            }\n        }\n        pcVar6 = *(iVar8 + 0x20);\n        if (*(iVar8 + 0x20) == 0) {\n            *arg1 = 1;\n            return pcVar6;\n        }\n    }\n    uVar7 = 0;\ncode_r0x00444552:\n    uVar7 = uVar7 | 4 | pcVar6;\n    if (*(iVar8 + 0xe8) == 0) {\n        uVar7 = uVar7 | 1;\n    }\n    uVar5 = uVar7;\n    *(iVar8 + 0x20) = uVar7;\n    if ((*(iVar8 + 0x1c) & uVar7) != 0) {\n        pcVar6 = \"basic_ios::clear\";\n        fcn.00465210(\"basic_ios::clear\");\n        fcn.004603c0(pcVar6, uVar5 + 0xd0);\n        fcn.00461bd0(&stack0xffffffffffffffa0, uVar5, arg3);\n        fcn.00460470(&stack0xffffffffffffffa0);\n        fcn.00462bb0(uVar5, arg3);\n        piVar2 = *(uVar5 + 0xe8);\n        if (piVar2 != NULL) {\n            fcn.004603c0(&stack0xffffffffffffffa0, piVar2 + 7);\n            (**(*piVar2 + 0x10))(piVar2, arg3);\n            fcn.004604a0(piVar2 + 7, arg3);\n            fcn.00460470(&stack0xffffffffffffffa0);\n        }\n        return pcVar6;\n    }\n    return pcVar6;\n}\n",
        "token_count": 1246
    },
    "004455f0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint64_t * fcn.004455f0(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    int64_t arg1_00;\n    \n    piVar1 = *(arg1 + *(*arg1 + -0x18) + 0xe8);\n    if (piVar1 != NULL) {\n        iVar2 = (**(*piVar1 + 0x30))();\n        if (iVar2 == -1) {\n            arg1_00 = arg1 + *(*arg1 + -0x18);\n            fcn.00462d30(arg1_00, *(arg1_00 + 0x20) | 1);\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 162
    },
    "00445b70": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nchar * fcn.00445b70(int64_t arg1)\n\n{\n    char **ppcVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    char *pcVar4;\n    char *pcVar5;\n    uint32_t uVar6;\n    ulong in_R8;\n    uchar auStack96 [32];\n    uint64_t arg2;\n    \n    pcVar4 = *(arg1 + 8) + *(**(arg1 + 8) + -0x18);\n    pcVar5 = pcVar4;\n    if (((((pcVar4[0x19] & 0x20U) != 0) && (pcVar5 = fcn.004651f0(),  pcVar5 == '\\0')) && (*(pcVar4 + 0xe8) != NULL)) &&\n       (pcVar5 = (**(**(pcVar4 + 0xe8) + 0x30))(),  pcVar5 == -1)) {\n        ppcVar1 = *(arg1 + 8);\n        pcVar5 = *ppcVar1;\n        iVar2 = *(pcVar5 + -0x18);\n        uVar6 = *(ppcVar1 + iVar2 + 0x20) | 1;\n        arg2 = uVar6;\n        *(ppcVar1 + iVar2 + 0x20) = uVar6;\n        if ((*(ppcVar1 + iVar2 + 0x1c) & uVar6) == 0) {\n            return pcVar5;\n        }\n        pcVar5 = \"basic_ios::clear\";\n        fcn.00465210(\"basic_ios::clear\");\n        fcn.004603c0(pcVar5, arg2 + 0xd0);\n        fcn.00461bd0(auStack96, arg2, in_R8);\n        fcn.00460470(auStack96);\n        fcn.00462bb0(arg2, in_R8);\n        piVar3 = *(arg2 + 0xe8);\n        if (piVar3 != NULL) {\n            fcn.004603c0(auStack96, piVar3 + 7);\n            (**(*piVar3 + 0x10))(piVar3, in_R8);\n            fcn.004604a0(piVar3 + 7, in_R8);\n            fcn.00460470(auStack96);\n        }\n        return pcVar5;\n    }\n    return pcVar5;\n}\n",
        "token_count": 543
    },
    "0045e6d0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0045e6d0(int64_t arg1)\n\n{\n    uchar extraout_AL;\n    uchar uVar1;\n    uchar extraout_AH;\n    uchar extraout_AH_00;\n    uchar extraout_AH_01;\n    ushort extraout_var;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    iVar3 = 0;\n    do {\n        fcn.0040dee0();\n        if (CONCAT22(extraout_var, CONCAT11(extraout_AH, extraout_AL)) == -1) {\n            *(arg1 + 0x18) = 0;\n            goto code_r0x0045e701;\n        }\n        *(arg1 + 0x19 + iVar3) = extraout_AL;\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0x80);\n    *(arg1 + 0x18) = 1;\ncode_r0x0045e701:\n    uVar2 = 0;\n    do {\n        uVar1 = fcn.0040df60(uVar2 & 0xffffffff);\n        *(arg1 + 0x9a + uVar2 * 2) = CONCAT11(extraout_AH_00, uVar1);\n        uVar2 = uVar2 + 1;\n    } while (uVar2 != 0x100);\n    iVar3 = 0;\n    do {\n        *(arg1 + 0x29a + iVar3 * 2) = 1 << (iVar3 & 0x1f);\n        uVar1 = fcn.004258c0();\n        *(arg1 + 0x2ba + iVar3 * 2) = CONCAT11(extraout_AH_01, uVar1);\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0x10);\n    return;\n}\n",
        "token_count": 411
    },
    "00454150": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint64_t * fcn.00454150(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    int64_t arg1_00;\n    \n    piVar1 = *(arg1 + *(*arg1 + -0x18) + 0xe8);\n    if (piVar1 != NULL) {\n        iVar2 = (**(*piVar1 + 0x30))();\n        if (iVar2 == -1) {\n            arg1_00 = arg1 + *(*arg1 + -0x18);\n            fcn.004634a0(arg1_00, *(arg1_00 + 0x20) | 1);\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 161
    },
    "004546d0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nchar * fcn.004546d0(int64_t arg1)\n\n{\n    char **ppcVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    char *pcVar4;\n    char *pcVar5;\n    uint32_t uVar6;\n    ulong in_R8;\n    uchar auStack96 [32];\n    uint64_t arg2;\n    \n    pcVar4 = *(arg1 + 8) + *(**(arg1 + 8) + -0x18);\n    pcVar5 = pcVar4;\n    if (((((pcVar4[0x19] & 0x20U) != 0) && (pcVar5 = fcn.004651f0(),  pcVar5 == '\\0')) && (*(pcVar4 + 0xe8) != NULL)) &&\n       (pcVar5 = (**(**(pcVar4 + 0xe8) + 0x30))(),  pcVar5 == -1)) {\n        ppcVar1 = *(arg1 + 8);\n        pcVar5 = *ppcVar1;\n        iVar2 = *(pcVar5 + -0x18);\n        uVar6 = *(ppcVar1 + iVar2 + 0x20) | 1;\n        arg2 = uVar6;\n        *(ppcVar1 + iVar2 + 0x20) = uVar6;\n        if ((*(ppcVar1 + iVar2 + 0x1c) & uVar6) == 0) {\n            return pcVar5;\n        }\n        pcVar5 = \"basic_ios::clear\";\n        fcn.00465210(\"basic_ios::clear\");\n        fcn.004603c0(pcVar5, arg2 + 0xd0);\n        fcn.00461bd0(auStack96, arg2, in_R8);\n        fcn.00460470(auStack96);\n        fcn.00463330(arg2, in_R8);\n        piVar3 = *(arg2 + 0xe8);\n        if (piVar3 != NULL) {\n            fcn.004603c0(auStack96, piVar3 + 7);\n            (**(*piVar3 + 0x10))(piVar3, in_R8);\n            fcn.004604a0(piVar3 + 7, in_R8);\n            fcn.00460470(auStack96);\n        }\n        return pcVar5;\n    }\n    return pcVar5;\n}\n",
        "token_count": 542
    },
    "00458f80": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint64_t fcn.00458f80(int64_t *arg1, uchar *arg2, int64_t arg3)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    iVar4 = 0;\n    if (arg3 < 1) {\n        return 0;\n    }\n    iVar1 = arg1[2];\n    iVar3 = arg1[3] - iVar1;\n    while( true ) {\n        if (iVar3 != 0) {\n            iVar5 = arg3 - iVar4;\n            if (iVar3 < arg3 - iVar4) {\n                iVar5 = iVar3;\n            }\n            iVar4 = iVar4 + iVar5;\n            sub.msvcrt.dll_memcpy(arg2, iVar1, iVar5);\n            arg1[2] = arg1[2] + iVar5;\n            if (arg3 <= iVar4) {\n                return iVar4;\n            }\n            arg2 = arg2 + iVar5;\n        }\n        iVar2 = (**(*arg1 + 0x50))(arg1);\n        if (iVar2 == -1) {\n            return iVar4;\n        }\n        iVar4 = iVar4 + 1;\n        *arg2 = iVar2;\n        if (arg3 <= iVar4) break;\n        iVar1 = arg1[2];\n        iVar3 = arg1[3] - iVar1;\n        arg2 = arg2 + 1;\n    }\n    return iVar4;\n}\n",
        "token_count": 334
    },
    "0040d3e0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint32_t fcn.0040d3e0(ulong arg1, ulong arg2)\n\n{\n    uint32_t uVar1;\n    uint32_t uStack24;\n    int32_t aiStack12 [3];\n    \n    uVar1 = fcn.00410a20(arg1, arg2, 0x46b080, aiStack12);\n    // switch table (6 cases) at 0x483360\n    switch(uVar1 & 7) {\n    default:\n        uStack24 = 0;\n        break;\n    case 1:\n    case 5:\n        uStack24 = (aiStack12[0] + 0x96) * 0x800000 | uStack24 & 0x7fffff;\n        break;\n    case 2:\n        break;\n    case 3:\n        uStack24 = 0x7f800000;\n        break;\n    case 4:\n        uStack24 = 0x7fc00000;\n    }\n    if ((uVar1 & 8) != 0) {\n        uStack24 = uStack24 | 0x80000000;\n    }\n    return uStack24;\n}\n",
        "token_count": 256
    },
    "0041b880": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nulong fcn.0041b880(ulong *arg1, uint32_t *arg2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    uint *puVar4;\n    int64_t iVar5;\n    \n    uVar3 = fcn.0041b300(arg1);\n    if (uVar3 == 0) {\n        puVar4 = sub.msvcrt.dll_calloc(1);\n        uVar3 = 0xc;\n        if (puVar4 != NULL) {\n            puVar4[2] = 0;\n            puVar4[3] = 0;\n            if ((arg2 == NULL) || (uVar1 = *arg2,  puVar4[2] = uVar1 & 3,  (uVar1 & 4) == 0)) {\n                iVar5 = (*_sym.imp.KERNEL32.dll_CreateSemaphoreA)(0, 1, 0x7fffffff, 0);\n                *(puVar4 + 6) = iVar5;\n                if (iVar5 != 0) {\n                    *puVar4 = 0xbab1f00d;\n                    *arg1 = puVar4;\n                    return 0;\n                }\n                iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                uVar3 = 0xc;\n                if (iVar2 == 5) {\n                    uVar3 = 1;\n                }\n            }\n            else {\n                uVar3 = 0x28;\n            }\n            *puVar4 = 0xdeadbeef;\n            fcn.00416d90(puVar4);\n            *arg1 = 0;\n            return uVar3;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 384
    },
    "00412550": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid fcn.00412550(ulong noname_0, int64_t arg2, int64_t arg3)\n\n{\n    uint16_t *puVar1;\n    uint16_t *puVar2;\n    uint16_t *puVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint16_t uStack54;\n    uint16_t auStack52 [18];\n    \n    auStack52[6] = 0;\n    auStack52[5] = 0;\n    arg2 = arg2 + 0xe;\n    puVar2 = auStack52 + 5;\n    do {\n        while (puVar1 = arg2 + 2,  *puVar1 != 0) {\n            puVar3 = puVar2 + -1;\n            arg2 = arg2 + -2;\n            uVar5 = *puVar1 * noname_0;\n            uVar7 = puVar2[1] + (uVar5 & 0xffff);\n            puVar2[1] = uVar7;\n            iVar6 = (uVar5 >> 0x10) + *puVar2 + (uVar7 >> 0x10);\n            *puVar2 = iVar6;\n            *puVar3 = iVar6 >> 0x10;\n            puVar2 = puVar3;\n            if (puVar3 == &uStack54) goto code_r0x004125e0;\n        }\n        puVar2 = puVar2 + -1;\n        arg2 = arg2 + -2;\n        *puVar2 = 0;\n    } while (puVar2 != &uStack54);\ncode_r0x004125e0:\n    iVar4 = 0;\n    do {\n        *(arg3 + 4 + iVar4) = *(auStack52 + iVar4);\n        iVar4 = iVar4 + 2;\n    } while (iVar4 != 0xe);\n    return;\n}\n",
        "token_count": 439
    },
    "00415e80": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nint64_t fcn.00415e80(int64_t arg1, int64_t arg2)\n\n{\n    ushort *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int64_t arg1_00;\n    int64_t iVar7;\n    ushort *puVar8;\n    ushort *puVar9;\n    uint32_t *puVar10;\n    uint32_t *puVar11;\n    uint32_t uVar12;\n    \n    iVar7 = arg2;\n    if (*(arg1 + 0x14) < *(arg2 + 0x14)) {\n        iVar7 = arg1;\n        arg1 = arg2;\n    }\n    arg1_00 = fcn.00415020(*(arg1 + 8));\n    iVar2 = *(arg1 + 0x14);\n    puVar10 = arg1 + 0x18;\n    puVar11 = iVar7 + 0x18;\n    uVar12 = 0;\n    *(arg1_00 + 0x14) = iVar2;\n    iVar3 = *(iVar7 + 0x14);\n    puVar1 = arg1_00 + 0x18 + iVar3 * 2;\n    puVar8 = arg1_00 + 0x18;\n    do {\n        uVar4 = *puVar10;\n        uVar5 = *puVar11;\n        puVar9 = puVar8 + 2;\n        puVar10 = puVar10 + 1;\n        puVar11 = puVar11 + 1;\n        uVar12 = (uVar4 & 0xffff) + (uVar5 & 0xffff) + uVar12;\n        *puVar8 = uVar12;\n        uVar12 = (uVar5 >> 0x10) + (uVar4 >> 0x10) + ((uVar12 & 0x10000) >> 0x10);\n        puVar8[1] = uVar12;\n        uVar12 = (uVar12 & 0x10000) >> 0x10;\n        puVar8 = puVar9;\n    } while (puVar9 < puVar1);\n    iVar6 = *(arg1 + 0x14);\n    for (; puVar9 < puVar1 + (iVar6 - iVar3) * 2; puVar9 = puVar9 + 2) {\n        uVar4 = *puVar10;\n        puVar10 = puVar10 + 1;\n        uVar12 = (uVar4 & 0xffff) + uVar12;\n        *puVar9 = uVar12;\n        uVar12 = (uVar4 >> 0x10) + (uVar12 >> 0x10);\n        puVar9[1] = uVar12;\n        uVar12 = uVar12 >> 0x10;\n    }\n    iVar7 = arg1_00;\n    if (uVar12 != 0) {\n        if (iVar2 == *(arg1_00 + 0xc)) {\n            iVar7 = fcn.00415020(*(arg1_00 + 8) + 1);\n            sub.msvcrt.dll_memcpy(iVar7 + 0x10, arg1_00 + 0x10, *(arg1_00 + 0x14) * 4 + 8);\n            fcn.00415120(arg1_00);\n            iVar2 = *(iVar7 + 0x14);\n        }\n        *(iVar7 + 0x14) = iVar2 + 1;\n        *(iVar7 + 0x18 + iVar2 * 4) = 1;\n    }\n    return iVar7;\n}\n",
        "token_count": 826
    },
    "00403060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9",
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402e80)\n\nulong fcn.00403060(int64_t arg1, ulong arg2)\n\n{\n    char *arg2_00;\n    char *pcVar1;\n    ulong uVar2;\n    char cVar3;\n    \n    arg2_00 = *(arg1 + 0x18);\n    cVar3 = *arg2_00;\n    pcVar1 = arg2_00;\n    if ((cVar3 == '.') && ((arg2_00[1] + 0x9fU < 0x1a || (arg2_00[1] == '_')))) {\n        cVar3 = arg2_00[2];\n        pcVar1 = arg2_00 + 2;\n        if (0x19 < cVar3 + 0x9fU) goto code_r0x00403121;\n        do {\n            do {\n                pcVar1 = pcVar1 + 1;\n                cVar3 = *pcVar1;\n            } while (cVar3 + 0x9fU < 0x1a);\ncode_r0x00403121:\n        } while (cVar3 == '_');\n    }\n    while (cVar3 == '.') {\n        while( true ) {\n            if (9 < pcVar1[1] - 0x30U) goto code_r0x004030bd;\n            cVar3 = pcVar1[2];\n            pcVar1 = pcVar1 + 2;\n            if (9 < cVar3 - 0x30U) break;\n            do {\n                pcVar1 = pcVar1 + 1;\n            } while (*pcVar1 - 0x30U < 10);\n            if (*pcVar1 != '.') goto code_r0x004030bd;\n        }\n    }\ncode_r0x004030bd:\n    *(arg1 + 0x18) = pcVar1;\n    uVar2 = fcn.00402e90(arg1, arg2_00, pcVar1 - arg2_00);\n    // WARNING: Could not recover jumptable at 0x00402e27. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar2 = (*(*0x4815ac + 0x481480))(arg1, 0x4b, arg2, uVar2);\n    return uVar2;\n}\n",
        "token_count": 527
    },
    "00403390": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9",
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472"
        ],
        "decompiled_code": "\nint32_t fcn.00403390(char **arg1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    bool bVar4;\n    \n    pcVar3 = *arg1;\n    cVar1 = *pcVar3;\n    bVar4 = cVar1 == 'n';\n    if (bVar4) {\n        *arg1 = pcVar3 + 1;\n        cVar1 = pcVar3[1];\n    }\n    if (cVar1 - 0x30U < 10) {\n        pcVar3 = *arg1;\n        iVar2 = 0;\n        do {\n            pcVar3 = pcVar3 + 1;\n            *arg1 = pcVar3;\n            iVar2 = cVar1 + -0x30 + iVar2 * 10;\n            cVar1 = *pcVar3;\n        } while (cVar1 - 0x30U < 10);\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (bVar4) {\n        iVar2 = -iVar2;\n    }\n    return iVar2;\n}\n",
        "token_count": 248
    },
    "00403550": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nulong fcn.00403550(int64_t arg1)\n\n{\n    char cVar1;\n    int64_t arg2;\n    uint32_t uVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    char *pcVar5;\n    \n    uVar2 = fcn.00403390(arg1 + 0x18);\n    if (0 < uVar2) {\n        arg2 = *(arg1 + 0x18);\n        if (*(arg1 + 8) - arg2 < uVar2) {\n            uVar4 = 0;\n        }\n        else {\n            pcVar5 = uVar2 + arg2;\n            *(arg1 + 0x18) = pcVar5;\n            if (((*(arg1 + 0x10) & 4) != 0) && (*pcVar5 == '$')) {\n                *(arg1 + 0x18) = pcVar5 + 1;\n            }\n            if ((((uVar2 < 10) || (iVar3 = sub.msvcrt.dll_memcmp(arg2, \"_GLOBAL_\"),  iVar3 != 0)) ||\n                ((cVar1 = *(arg2 + 8),  cVar1 != '.' && ((cVar1 != '_' && (cVar1 != '$')))))) || (*(arg2 + 9) != 'N')) {\n                uVar4 = fcn.00402e90(arg1, arg2, uVar2);\n            }\n            else {\n                *(arg1 + 0x50) = (*(arg1 + 0x50) + 0x16) - uVar2;\n                uVar4 = fcn.00402e90(arg1, \"(anonymous namespace)\", 0x15);\n            }\n        }\n        *(arg1 + 0x48) = uVar4;\n        return uVar4;\n    }\n    return 0;\n}\n",
        "token_count": 406
    },
    "00403450": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\nint32_t fcn.00403450(int64_t arg1)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    \n    pcVar2 = *(arg1 + 0x18);\n    if (*pcVar2 == '_') {\n        iVar1 = 0;\ncode_r0x00403486:\n        *(arg1 + 0x18) = pcVar2 + 1;\n        return iVar1;\n    }\n    if (*pcVar2 != 'n') {\n        iVar1 = fcn.00403390(arg1 + 0x18);\n        pcVar2 = *(arg1 + 0x18);\n        if (*pcVar2 == '_') {\n            iVar1 = iVar1 + 1;\n            goto code_r0x00403486;\n        }\n    }\n    return -1;\n}\n",
        "token_count": 179
    },
    "00403870": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\nulong fcn.00403870(int64_t arg1)\n\n{\n    ulong uVar1;\n    int32_t *arg3;\n    ulong arg4;\n    char *pcVar2;\n    uint64_t arg3_00;\n    char cVar3;\n    char *pcVar4;\n    \n    pcVar2 = *(arg1 + 0x18);\n    if (*pcVar2 != 'L') {\n        return 0;\n    }\n    pcVar4 = pcVar2 + 1;\n    *(arg1 + 0x18) = pcVar4;\n    cVar3 = pcVar2[1];\n    if (cVar3 == 'Z') {\n        if (cVar3 == '_') goto code_r0x004038d5;\n    }\n    else {\n        if (cVar3 != '_') {\n            arg3 = fcn.00403f90(arg1);\n            if (arg3 == NULL) {\n                return 0;\n            }\n            if ((*arg3 == 0x27) && (*(*(arg3 + 2) + 0x1c) != 0)) {\n                *(arg1 + 0x50) = *(arg1 + 0x50) - *(*(arg3 + 2) + 8);\n            }\n            pcVar4 = *(arg1 + 0x18);\n            uVar1 = 0x3b;\n            cVar3 = *pcVar4;\n            pcVar2 = pcVar4;\n            if (cVar3 == 'n') {\n                pcVar2 = pcVar4 + 1;\n                uVar1 = 0x3c;\n                *(arg1 + 0x18) = pcVar2;\n                cVar3 = pcVar4[1];\n            }\n            pcVar4 = pcVar2;\n            if (cVar3 == 'E') {\n                arg3_00 = 0;\n            }\n            else {\n                do {\n                    if (cVar3 == '\\0') {\n                        return 0;\n                    }\n                    pcVar4 = pcVar4 + 1;\n                    *(arg1 + 0x18) = pcVar4;\n                    cVar3 = *pcVar4;\n                } while (cVar3 != 'E');\n                arg3_00 = pcVar4 - pcVar2;\n            }\n            arg4 = fcn.00402e90(arg1, pcVar2, arg3_00);\n            uVar1 = fcn.00402e10(arg1, uVar1, arg3, arg4);\n            pcVar4 = *(arg1 + 0x18);\n            cVar3 = *pcVar4;\n            goto code_r0x004038b4;\n        }\ncode_r0x004038d5:\n        pcVar4 = pcVar2 + 2;\n        *(arg1 + 0x18) = pcVar4;\n        cVar3 = pcVar2[2];\n        uVar1 = 0;\n        if (cVar3 != 'Z') goto code_r0x004038b4;\n    }\n    *(arg1 + 0x18) = pcVar4 + 1;\n    uVar1 = fcn.00404a60(arg1, 0);\n    pcVar4 = *(arg1 + 0x18);\n    cVar3 = *pcVar4;\ncode_r0x004038b4:\n    if (cVar3 != 'E') {\n        return 0;\n    }\n    *(arg1 + 0x18) = pcVar4 + 1;\n    return uVar1;\n}\n",
        "token_count": 775
    },
    "00403af0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t fcn.00403af0(int64_t arg1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    ulong arg3;\n    int64_t arg4;\n    int32_t *piVar7;\n    int32_t *arg4_00;\n    char *pcVar8;\n    char cVar9;\n    int64_t iStack48;\n    \n    pcVar8 = *(arg1 + 0x18);\n    if (*pcVar8 + 0xb4U < 0xf) {\n    // switch table (15 cases) at 0x481710\n        switch(*((*pcVar8 + 0xb4U) * 4 + 0x481710) + 0x481710) {\n        case 0x403b22:\n            *(arg1 + 0x18) = pcVar8 + 1;\n            uVar6 = fcn.00404a60(arg1, 0);\n            pcVar8 = *(arg1 + 0x18);\n            if (*pcVar8 == 'E') {\n                *(arg1 + 0x18) = pcVar8 + 1;\n                if (pcVar8[1] == 's') {\n                    *(arg1 + 0x18) = pcVar8 + 2;\n                    iVar1 = fcn.00403510(arg1);\n                    if (iVar1 != 0) {\n                        arg4_00 = fcn.00402e90(arg1, \"string literal\", 0xe);\ncode_r0x00403eb9:\n                        iVar5 = fcn.00402e10(arg1, 2, uVar6, arg4_00);\n                        return iVar5;\n                    }\n                }\n                else {\n                    iVar1 = -1;\n                    if (pcVar8[1] == 'd') {\n                        *(arg1 + 0x18) = pcVar8 + 2;\n                        iVar1 = fcn.00403450(arg1);\n                        if (iVar1 < 0) {\n                            return 0;\n                        }\n                    }\n                    piVar7 = fcn.00403af0(arg1);\n                    if ((((piVar7 == NULL) || (*piVar7 == 0x44)) || (*piVar7 == 0x46)) ||\n                       (iVar2 = fcn.00403510(arg1),  iVar2 != 0)) {\n                        arg4_00 = piVar7;\n                        if (iVar1 != -1) {\n                            iVar2 = *(arg1 + 0x28);\n                            arg4_00 = NULL;\n                            if (iVar2 < *(arg1 + 0x2c)) {\n                                *(arg1 + 0x28) = iVar2 + 1;\n                                arg4_00 = *(arg1 + 0x20) + iVar2 * 0x18;\n                                if (arg4_00 != NULL) {\n                                    *arg4_00 = 0x45;\n                                    arg4_00[4] = iVar1;\n                                    *(arg4_00 + 2) = piVar7;\n                                }\n                            }\n                        }\n                        goto code_r0x00403eb9;\n                    }\n                }\n            }\n            return 0;\n        case 0x403b54:\n            if (pcVar8[1] == 't') {\n                *(arg1 + 0x18) = pcVar8 + 2;\n                uVar6 = fcn.00405210(arg1);\n                arg3 = fcn.00402e90(arg1, 0x48170b, 3);\n                iVar5 = fcn.00402e10(arg1, 1, arg3, uVar6);\n                *(arg1 + 0x50) = *(arg1 + 0x50) + 3;\n                if (**(arg1 + 0x18) != 'I') {\n                    return iVar5;\n                }\n                if (iVar5 == 0) {\n                    return 0;\n                }\n                iVar1 = *(arg1 + 0x38);\n                if (*(arg1 + 0x3c) <= iVar1) {\n                    return 0;\n                }\n                *(*(arg1 + 0x30) + iVar1 * 8) = iVar5;\n                *(arg1 + 0x38) = iVar1 + 1;\n            }\n            else {\n                iVar5 = fcn.00403130(arg1, 0);\n                if (**(arg1 + 0x18) != 'I') {\n                    return iVar5;\n                }\n            }\n            uVar6 = fcn.004039d0(arg1);\n            iVar5 = fcn.00402e10(arg1, 4, iVar5, uVar6);\n            break;\n        case 0x403ba0:\n            iVar5 = fcn.00405210(arg1);\n            break;\n        case 0x403bc0:\n            *(arg1 + 0x18) = pcVar8 + 1;\n            piVar3 = fcn.00402ee0(arg1, &iStack48, 1);\n            if (piVar3 == NULL) {\n                return 0;\n            }\n            iVar4 = fcn.00403000(arg1, 0);\n            pcVar8 = *(arg1 + 0x18);\n            cVar9 = *pcVar8;\n            iVar5 = 0;\njoined_r0x00403c02:\n            if (cVar9 != '\\0') {\n                if (cVar9 == 'D') {\n                    if ((pcVar8[1] & 0xdfU) != 0x54) goto code_r0x00403d70;\n                    arg4 = fcn.00403f90(arg1);\n                    goto joined_r0x00403de9;\n                }\n                do {\n                    if (((cVar9 - 0x30U < 10) || (cVar9 + 0x9fU < 0x1a)) ||\n                       ((cVar9 == 'C' || ((cVar9 == 'U' || (cVar9 == 'L')))))) {\ncode_r0x00403d70:\n                        arg4 = fcn.00405210(arg1);\njoined_r0x00403de9:\n                        if (iVar5 != 0) {\n                            uVar6 = 1;\n                            goto code_r0x00403d82;\n                        }\n                    }\n                    else {\n                        if (cVar9 == 'S') {\n                            arg4 = fcn.00403130(arg1, 1);\n                            goto joined_r0x00403de9;\n                        }\n                        if (cVar9 != 'I') {\n                            if (cVar9 == 'T') {\n                                arg4 = fcn.004034a0(arg1);\n                                goto joined_r0x00403de9;\n                            }\n                            if (cVar9 == 'E') {\n                                *piVar3 = iVar5;\n                                if (iVar5 == 0) {\n                                    return 0;\n                                }\n                                if (iVar4 != 0) {\n                                    *(iVar4 + 8) = iStack48;\n                                    iStack48 = iVar4;\n                                }\n                                if (**(arg1 + 0x18) == 'E') {\n                                    *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n                                    return iStack48;\n                                }\n                                return 0;\n                            }\n                            if ((cVar9 != 'M') || (iVar5 == 0)) break;\n                            *(arg1 + 0x18) = pcVar8 + 1;\n                            cVar9 = pcVar8[1];\n                            pcVar8 = pcVar8 + 1;\n                            goto joined_r0x00403c02;\n                        }\n                        if (iVar5 == 0) break;\n                        arg4 = fcn.004039d0(arg1);\n                        uVar6 = 4;\ncode_r0x00403d82:\n                        arg4 = fcn.00402e10(arg1, uVar6, iVar5, arg4);\n                    }\n                    iVar5 = arg4;\n                    if (cVar9 == 'S') goto code_r0x00403dc7;\n                    pcVar8 = *(arg1 + 0x18);\n                    if (*pcVar8 != 'E') goto code_r0x00403da1;\n                    cVar9 = 'E';\n                } while( true );\n            }\n            goto code_r0x00403c80;\n        case 0x403c90:\n            goto code_r0x00403c90;\n        }\n        return iVar5;\n    }\ncode_r0x00403c90:\n    iVar5 = fcn.00405210(arg1);\n    if (**(arg1 + 0x18) != 'I') {\n        return iVar5;\n    }\n    if (iVar5 != 0) {\n        iVar1 = *(arg1 + 0x38);\n        if (iVar1 < *(arg1 + 0x3c)) {\n            *(*(arg1 + 0x30) + iVar1 * 8) = iVar5;\n            *(arg1 + 0x38) = iVar1 + 1;\n            uVar6 = fcn.004039d0(arg1);\n            iVar5 = fcn.00402e10(arg1, 4, iVar5, uVar6);\n            return iVar5;\n        }\n        return 0;\n    }\n    return 0;\ncode_r0x00403da1:\n    if ((arg4 == 0) || (iVar1 = *(arg1 + 0x38),  *(arg1 + 0x3c) <= iVar1)) {\ncode_r0x00403c80:\n        *piVar3 = 0;\n        return 0;\n    }\n    *(*(arg1 + 0x30) + iVar1 * 8) = arg4;\n    *(arg1 + 0x38) = iVar1 + 1;\ncode_r0x00403dc7:\n    pcVar8 = *(arg1 + 0x18);\n    cVar9 = *pcVar8;\n    goto joined_r0x00403c02;\n}\n",
        "token_count": 2234
    },
    "00405c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402e80)\n\nulong fcn.00405c80(int64_t arg1, ulong arg2)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t iStack32;\n    \n    iStack32 = 0;\n    piVar3 = &iStack32;\n    if (**(arg1 + 0x18) == arg2) {\n        *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n    // WARNING: Could not recover jumptable at 0x00402e27. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar1 = (*(*0x481538 + 0x481480))(arg1, 0x2e, 0, 0);\n        return uVar1;\n    }\n    while( true ) {\n        iVar2 = fcn.00405650(arg1);\n        if (iVar2 == 0) {\n            return 0;\n        }\n        iVar2 = fcn.00402e10(arg1, 0x2e, iVar2, 0);\n        *piVar3 = iVar2;\n        if (iVar2 == 0) break;\n        piVar3 = iVar2 + 0x10;\n        if (**(arg1 + 0x18) == arg2) {\n            *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n            return iStack32;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 353
    },
    "0040b130": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong fcn.0040b130(ulong arg1)\n\n{\n    ulong uVar1;\n    int64_t iStack24;\n    ulong uStack16;\n    \n    iStack24 = fcn.0040b110(*0x49f500);\n    if (iStack24 != -1) {\n        sub.msvcrt.dll__lock(8);\n        iStack24 = fcn.0040b110(*0x49f500);\n        uStack16 = fcn.0040b110(*0x49f508);\n        uVar1 = sub.msvcrt.dll___dllonexit(arg1, &iStack24, &uStack16);\n        *0x49f500 = fcn.0040b120(iStack24);\n        *0x49f508 = fcn.0040b120(uStack16);\n        sub.msvcrt.dll__unlock(8);\n        return uVar1;\n    }\n    uVar1 = (*_sym.imp.msvcrt.dll__onexit)(arg1);\n    return uVar1;\n}\n",
        "token_count": 226
    },
    "0040de00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nunkbyte10 * fcn.0040de00(unkbyte10 *arg1, int64_t arg2, int64_t *arg3)\n\n{\n    int32_t iVar1;\n    ulong uStack40;\n    ushort uStack32;\n    unkbyte6 Stack30;\n    \n    uStack40 = 0;\n    uStack32 = 0;\n    Stack30 = 0;\n    iVar1 = fcn.0040d570(arg2, &uStack40);\n    if (arg3 != NULL) {\n        *arg3 = arg2 + iVar1;\n    }\n    *arg1 = CONCAT28(uStack32, uStack40);\n    return arg1;\n}\n",
        "token_count": 146
    },
    "0040e030": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t fcn.0040e030(uchar *arg1, uint64_t arg2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uchar auStack40 [16];\n    \n    if (arg1 == NULL) {\n        arg1 = auStack40;\n    }\n    uVar1 = *_sym.imp.msvcrt.dll___mb_cur_max;\n    uVar2 = sub.msvcrt.dll____lc_codepage_func();\n    iVar3 = fcn.0040dfb0(arg1, arg2 & 0xffff, uVar2, uVar1);\n    return iVar3;\n}\n",
        "token_count": 144
    },
    "0040ee90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0040ee90(uchar *arg1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    uchar *arg1_00;\n    uint64_t arg2;\n    char *pcVar5;\n    ulong auStack96 [5];\n    char acStack56 [10];\n    uint16_t uStack46;\n    uint uStack44;\n    ulong var_4h;\n    char *pcVar6;\n    \n    if (*(arg1 + 0x14) == -3) {\n        uStack44 = 0;\n        auStack96[0] = 0x40ef4c;\n        puVar4 = sub.msvcrt.dll_localeconv();\n        arg1_00 = &stack0xffffffffffffffd2;\n        auStack96[0] = 0x40ef62;\n        iVar2 = fcn.0040e340(arg1_00, *puVar4, 0x10, &stack0xffffffffffffffd4);\n        if (iVar2 < 1) {\n            uStack46 = *(arg1 + 0x18);\n        }\n        else {\n            *(arg1 + 0x18) = uStack46;\n        }\n        *(arg1 + 0x14) = iVar2;\n    }\n    else {\n        uStack46 = *(arg1 + 0x18);\n        arg1_00 = arg1;\n    }\n    arg2 = uStack46;\n    if (uStack46 != 0) {\n        auStack96[0] = 0x40eec7;\n        iVar3 = fcn.0040ce40(arg1_00);\n        iVar3 = -iVar3;\n        uStack44 = 0;\n        *(&stack0xffffffffffffffa0 + iVar3) = 0x40eee2;\n        iVar2 = fcn.0040e030(&stack0xffffffffffffffc8 + iVar3, arg2);\n        if (iVar2 < 1) {\n            *(&stack0xffffffffffffffa0 + iVar3) = 0x40ef3d;\n            fcn.0040e610(0x2e, arg1);\n        }\n        else {\n            pcVar6 = &stack0xffffffffffffffc8 + iVar3;\n            do {\n                pcVar5 = pcVar6 + 1;\n                cVar1 = *pcVar6;\n                *(&stack0xffffffffffffffa0 + iVar3) = 0x40ef00;\n                fcn.0040e610(cVar1, arg1);\n                pcVar6 = pcVar5;\n            } while (pcVar5 != &stack0xffffffffffffffc9 + (iVar2 - 1) + iVar3);\n        }\n        return;\n    }\n    auStack96[0] = 0x40ef1f;\n    fcn.0040e610(0x2e, arg1);\n    return;\n}\n",
        "token_count": 655
    },
    "0041e650": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint64_t fcn.0041e650(int32_t **arg1)\n\n{\n    int32_t *arg1_00;\n    ulong *puVar1;\n    int32_t *arg1_01;\n    code *pcVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int64_t iVar7;\n    ulong uVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    uint64_t uVar11;\n    char *arg1_02;\n    uint32_t uVar12;\n    ulong auStack184 [5];\n    ulong uStack144;\n    ulong uStack136;\n    uint64_t auStack128 [2];\n    \n    uVar11 = fcn.0041db10(arg1);\n    if (uVar11 != 0) {\n        return uVar11;\n    }\n    arg1_01 = *arg1;\n    if (arg1_01[2] == 0) {\n        arg1_00 = arg1_01 + 8;\n        uVar6 = fcn.0041bdb0(arg1_00);\n        if (uVar6 == 0) {\n            LOCK();\n            arg1_01[4] = arg1_01[4] + 1;\n            if (arg1_01[4] == 0) {\n                uVar6 = fcn.0041cad0(arg1_01 + 10);\n                uVar12 = fcn.0041b7a0(arg1_00);\n                if (uVar6 == 0) {\n                    uVar6 = uVar12;\n                }\n            }\n            else {\n                uVar6 = fcn.0041b7a0(arg1_00);\n            }\n        }\n    }\n    else {\n        LOCK();\n        arg1_01[2] = arg1_01[2] + -1;\n        uVar6 = fcn.0041dd70(arg1_01, 0);\n    }\n    auStack128[0] = uVar6;\n    if (*0x49f4d8 == 0) {\n        *0x49f4d8 = fcn.0041d1b0(\"rwl_global_shmem\", 0x10, 0x41dad0);\n    }\n    fcn.0041d560(*0x49f4d8);\n    if ((**arg1 == -0x454e0f13) && (0 < (*arg1)[1])) {\n        (*arg1)[1] = (*arg1)[1] + -1;\n        if (*0x49f4d8 != 0) {\n            fcn.0041d4c0(*0x49f4d8);\n            return auStack128[0];\n        }\n        *0x49f4d8 = fcn.0041d1b0(\"rwl_global_shmem\", 0x10, 0x41dad0);\n        fcn.0041d4c0(*0x49f4d8);\n        return auStack128[0];\n    }\n    iVar10 = (*_sym.imp.msvcrt.dll___iob_func)();\n    sub.msvcrt.dll_fprintf\n              (iVar10 + 0x60, \"Assertion failed: (%s), file %s, line %d\\n\", \n               \"(((rwlock_t *)*rwl)->valid == LIFE_RWLOCK) && (((rwlock_t *)*rwl)->busy > 0)\");\n    sub.msvcrt.dll_exit(1);\n    arg1_02 = \"rwl_global_shmem\";\n    auStack184[0] = 0x41d1d6;\n    uStack136 = arg1;\n    iVar4 = sub.msvcrt.dll_strlen();\n    auStack184[0] = 0x41d1ee;\n    iVar7 = fcn.0040ce40(arg1_02);\n    iVar7 = -iVar7;\n    iVar10 = &uStack144 + iVar7;\n    *(&uStack144 + iVar7) = 0x656d68732d636367;\n    *(&uStack136 + iVar7) = 0x64742d6d;\n    *(&uStack136 + iVar7 + 4) = 0x326d;\n    uVar6 = iVar4 + 0x50;\n    *(&uStack136 + iVar7 + 6) = 0x2d;\n    *(auStack184 + iVar7) = 0x41d236;\n    sub.msvcrt.dll_memcpy(&uStack136 + iVar7 + 7, \"rwl_global_shmem\", iVar4);\n    puVar1 = auStack128 + iVar4 + iVar7;\n    *puVar1 = 0x6161616161616161;\n    puVar1[1] = 0x6161616161616161;\n    puVar1[2] = 0x6161616161616161;\n    puVar1[3] = 0x6161616161616161;\n    puVar1[4] = 0x6161616161616161;\n    puVar1[5] = 0x6161616161616161;\n    puVar1[6] = 0x6161616161616161;\n    puVar1[7] = 0x6161616161616161;\n    *(&uStack144 + uVar6 + iVar7) = 0;\n    *(&uStack144 + (iVar4 + 0xf) + iVar7) = 0;\n    *(auStack184 + iVar7) = 0x41d27e;\n    uVar8 = (*_sym.imp.KERNEL32.dll_CreateMutexA)(0, 0);\n    *(&uStack144 + (iVar4 + 0xf) + iVar7) = 0x2d;\n    *(auStack184 + iVar7) = 0x41d294;\n    iVar5 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(uVar8, 0xffffffff);\n    if (iVar5 != 0) {\n        pcVar2 = swi(3);\n        uVar11 = (*pcVar2)();\n        return uVar11;\n    }\n    *(auStack184 + iVar7) = 0x41d2a2;\n    uVar3 = (*_sym.imp.KERNEL32.dll_FindAtomA)();\n    if (uVar3 == 0) {\n        *(auStack184 + iVar7) = 0x41d2b7;\n        uVar9 = sub.msvcrt.dll_malloc(0x10);\n        uVar11 = 0x40;\n        do {\n            if ((uVar9 >> (uVar11 & 0x3f) & 1) != 0) {\n                *(iVar10 + (uVar6 - uVar11)) = 0x41;\n            }\n            uVar12 = uVar11 - 1;\n            uVar11 = uVar12;\n        } while (uVar12 != 0);\n        *(auStack184 + iVar7) = 0x41d2e3;\n        uVar3 = (*_sym.imp.KERNEL32.dll_AddAtomA)();\n        if (uVar3 == 0) {\n            pcVar2 = swi(3);\n            uVar11 = (*pcVar2)();\n            return uVar11;\n        }\n        *(auStack184 + iVar7) = 0x41d2f9;\n        uVar11 = fcn.0041d130(uVar3, iVar10, uVar6, iVar4 + 0x10);\n        if (uVar11 == uVar9) {\n            *(auStack184 + iVar7) = 0x41d356;\n            sub.msvcrt.dll_memset(uVar9, 0, 0x10);\n            *(auStack184 + iVar7) = 0x41d361;\n            (*0x41dad0)(uVar9);\n        }\n        else {\n            *(auStack184 + iVar7) = 0x41d309;\n            fcn.00416d90(uVar9);\n        }\n    }\n    else {\n        *(auStack184 + iVar7) = 0x41d344;\n        uVar11 = fcn.0041d130(uVar3, iVar10, uVar6, iVar4 + 0x10);\n    }\n    *(auStack184 + iVar7) = 0x41d312;\n    (*_sym.imp.KERNEL32.dll_ReleaseMutex)(uVar8);\n    *(auStack184 + iVar7) = 0x41d31b;\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar8);\n    return uVar11;\n}\n",
        "token_count": 1909
    },
    "0041ea60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t fcn.0041ea60(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t iStack24;\n    uint16_t uStack16;\n    \n    uVar1 = *(arg1 + 1) / 1000000 + *arg1 * 1000;\n    (*_sym.imp.msvcrt.dll__ftime)(&iStack24);\n    uVar3 = iStack24 * 1000 + uStack16;\n    iVar2 = 0;\n    if (uVar3 <= uVar1) {\n        iVar2 = uVar1 - uVar3;\n    }\n    return iVar2;\n}\n",
        "token_count": 158
    },
    "0041ef00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.0041ef00(int64_t *arg1, int64_t *arg2, ulong *arg3)\n\n{\n    char cVar1;\n    ulong *puStack32;\n    \n    puStack32 = *arg3;\n    cVar1 = (**(*arg2 + 0x10))(arg2);\n    if (cVar1 != '\\0') {\n        puStack32 = *puStack32;\n    }\n    cVar1 = (**(*arg1 + 0x20))(arg1, arg2, &puStack32, 1);\n    if (cVar1 != '\\0') {\n        *arg3 = puStack32;\n    }\n    return;\n}\n",
        "token_count": 148
    },
    "00432e50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.00432e50(ulong noname_0, ulong arg2, ulong arg3)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    uint16_t in_R9W;\n    int64_t in_stack_00000028;\n    int64_t in_stack_00000030;\n    int64_t in_stack_00000038;\n    int32_t *in_stack_00000040;\n    \n    if (in_stack_00000028 != 0) {\n        iVar2 = in_stack_00000028 - in_stack_00000038 >> 1;\n        iVar1 = fcn.00464180(in_stack_00000030, in_R9W, arg2, arg3);\n        sub.msvcrt.dll_memcpy(iVar1, in_stack_00000028, (*in_stack_00000040 - iVar2) * 2);\n        *in_stack_00000040 = (*in_stack_00000040 - iVar2) + (iVar1 - in_stack_00000030 >> 1);\n        return;\n    }\n    iVar1 = fcn.00464180(in_stack_00000030, in_R9W, arg2, arg3);\n    *in_stack_00000040 = iVar1 - in_stack_00000030 >> 1;\n    return;\n}\n",
        "token_count": 284
    },
    "00441790": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.00441790(int64_t *arg1, int64_t *arg2)\n\n{\n    int64_t iVar1;\n    uchar uStack9;\n    \n    iVar1 = *arg2;\n    if (-1 < *(iVar1 + -8)) {\n        LOCK();\n        *(iVar1 + -8) = *(iVar1 + -8) + 1;\n        *arg1 = iVar1;\n        return;\n    }\n    iVar1 = fcn.00440280(iVar1 + -0x18, &uStack9, 0);\n    *arg1 = iVar1;\n    return;\n}\n",
        "token_count": 133
    },
    "004417d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.004417d0(ulong *arg1, int64_t *arg2, uint64_t arg3, uint64_t arg4)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    ulong *puVar3;\n    uint64_t uVar4;\n    int64_t *piVar5;\n    \n    iVar1 = *arg2;\n    uVar4 = *(iVar1 + -0x18) - arg3;\n    if (arg4 < uVar4) {\n        uVar4 = arg4;\n    }\n    piVar5 = iVar1 + (uVar4 + arg3) * 2;\n    if (arg3 <= *(iVar1 + -0x18)) {\n        uVar2 = fcn.0043fed0(iVar1 + arg3 * 2, piVar5);\n        *arg1 = uVar2;\n        return;\n    }\n    puVar3 = 0x48061a;\n    fcn.004655e0(0x48061a);\n    iVar1 = *piVar5;\n    uVar4 = *(iVar1 + -0x18) - arg3;\n    if (arg4 < uVar4) {\n        uVar4 = arg4;\n    }\n    piVar5 = iVar1 + (uVar4 + arg3) * 2;\n    if (arg3 <= *(iVar1 + -0x18)) {\n        uVar2 = fcn.0043fed0(iVar1 + arg3 * 2, piVar5);\n        *puVar3 = uVar2;\n        return;\n    }\n    puVar3 = 0x48061a;\n    fcn.004655e0(0x48061a);\n    uVar2 = fcn.0043fd90(*piVar5, *piVar5 + piVar5[1] * 2);\n    *puVar3 = uVar2;\n    return;\n}\n",
        "token_count": 421
    },
    "00448c40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.00448c40(int64_t *arg1, int64_t *arg2)\n\n{\n    int64_t iVar1;\n    uchar uStack9;\n    \n    iVar1 = *arg2;\n    if (-1 < *(iVar1 + -8)) {\n        LOCK();\n        *(iVar1 + -8) = *(iVar1 + -8) + 1;\n        *arg1 = iVar1;\n        return;\n    }\n    iVar1 = fcn.00447850(iVar1 + -0x18, &uStack9, 0);\n    *arg1 = iVar1;\n    return;\n}\n",
        "token_count": 134
    },
    "00448c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.00448c80(ulong *arg1, int64_t *arg2, uint64_t arg3, uint64_t arg4)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    char *pcVar3;\n    uint64_t uVar4;\n    int64_t *piVar5;\n    \n    iVar1 = *arg2;\n    uVar4 = *(iVar1 + -0x18) - arg3;\n    if (arg4 < uVar4) {\n        uVar4 = arg4;\n    }\n    piVar5 = uVar4 + arg3 + iVar1;\n    if (arg3 <= *(iVar1 + -0x18)) {\n        uVar2 = fcn.004474c0(iVar1 + arg3, piVar5);\n        *arg1 = uVar2;\n        return;\n    }\n    pcVar3 = \"basic_string::basic_string\";\n    fcn.004655e0(\"basic_string::basic_string\");\n    iVar1 = *piVar5;\n    uVar4 = *(iVar1 + -0x18) - arg3;\n    if (arg4 < uVar4) {\n        uVar4 = arg4;\n    }\n    piVar5 = uVar4 + arg3 + iVar1;\n    if (arg3 <= *(iVar1 + -0x18)) {\n        uVar2 = fcn.004474c0(iVar1 + arg3, piVar5);\n        *pcVar3 = uVar2;\n        return;\n    }\n    pcVar3 = \"basic_string::basic_string\";\n    fcn.004655e0(\"basic_string::basic_string\");\n    uVar2 = fcn.00447380(*piVar5, *piVar5 + piVar5[1]);\n    *pcVar3 = uVar2;\n    return;\n}\n",
        "token_count": 400
    },
    "0044b3d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.0044b3d0(ulong *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    \n    *arg1 = 0x487f70;\n    iVar3 = arg1[1];\n    LOCK();\n    piVar1 = iVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (0 < iVar2) {\n        fcn.00463a50(arg1);\n        return;\n    }\n    fcn.004477a0(iVar3 + -0x18);\n    fcn.00463a50(arg1);\n    return;\n}\n",
        "token_count": 157
    },
    "00455c90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.00455c90(ulong *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    \n    *arg1 = 0x488550;\n    iVar3 = arg1[1];\n    LOCK();\n    piVar1 = iVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (0 < iVar2) {\n        fcn.00463a50(arg1);\n        return;\n    }\n    fcn.004477a0(iVar3 + -0x18);\n    fcn.00463a50(arg1);\n    return;\n}\n",
        "token_count": 154
    },
    "0044b6e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t fcn.0044b6e0(ulong arg1, int64_t arg2, uint64_t arg3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int64_t iVar4;\n    int32_t *piVar5;\n    uint64_t uVar6;\n    ulong unaff_RBX;\n    ulong in_R9;\n    \n    uVar3 = fcn.0044b550(arg1);\n    pcVar1 = _sym.imp.msvcrt.dll__errno;\n    uVar6 = arg3;\n    do {\n        while( true ) {\n            iVar2 = sub.msvcrt.dll__write_1(uVar3, arg2, uVar6 & 0xffffffff, in_R9, unaff_RBX);\n            iVar4 = iVar2;\n            if (iVar4 == -1) break;\n            uVar6 = uVar6 - iVar4;\n            if (uVar6 == 0) goto code_r0x0041fc07;\n            arg2 = arg2 + iVar4;\n        }\n        piVar5 = (*pcVar1)();\n    } while (*piVar5 == 4);\ncode_r0x0041fc07:\n    return arg3 - uVar6;\n}\n",
        "token_count": 275
    },
    "0044b710": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.0044b710(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0044b550(arg1);\n    fcn.0040de60(uVar1, arg2, arg3);\n    return;\n}\n",
        "token_count": 67
    },
    "0044b830": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t fcn.0044b830(ulong arg1, ulong arg2, int64_t arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong in_stack_00000028;\n    \n    iVar3 = 0;\n    if (arg3 != 0) {\n        uVar1 = fcn.0044b550(arg1);\n        iVar3 = fcn.0041fbc0(uVar1, arg2, arg3);\n        if (arg3 != iVar3) {\n            return iVar3;\n        }\n    }\n    uVar1 = fcn.0044b550(arg1);\n    iVar2 = fcn.0041fbc0(uVar1, arg4, in_stack_00000028);\n    return iVar3 + iVar2;\n}\n",
        "token_count": 186
    },
    "0044c350": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t fcn.0044c350(int64_t arg1)\n\n{\n    ulong uVar1;\n    char cVar2;\n    int64_t iVar3;\n    \n    cVar2 = fcn.00424ed0(arg1 + 0x48);\n    if (cVar2 != '\\0') {\n        cVar2 = fcn.0044bf00(arg1);\n        *(arg1 + 0x58) = 0;\n        *(arg1 + 0x90) = 0;\n        fcn.0044c180(arg1);\n        uVar1 = *(arg1 + 0x68);\n        *(arg1 + 0x79) = 0;\n        *(arg1 + 0x7a) = 0;\n        *(arg1 + 0x28) = 0;\n        *(arg1 + 0x20) = 0;\n        *(arg1 + 8) = uVar1;\n        *(arg1 + 0x10) = uVar1;\n        *(arg1 + 0x18) = uVar1;\n        *(arg1 + 0x30) = 0;\n        *(arg1 + 0x60) = *(arg1 + 0x5c);\n        *(arg1 + 100) = *(arg1 + 0x5c);\n        iVar3 = fcn.0044b600(arg1 + 0x48);\n        if ((iVar3 != 0) && (cVar2 == '\\x01')) {\n            return arg1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 345
    },
    "0044dfe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t fcn.0044dfe0(int64_t arg1)\n\n{\n    ulong uVar1;\n    char cVar2;\n    int64_t iVar3;\n    \n    cVar2 = fcn.00424ed0(arg1 + 0x48);\n    if (cVar2 != '\\0') {\n        cVar2 = fcn.0044db60(arg1);\n        *(arg1 + 0x58) = 0;\n        *(arg1 + 0x90) = 0;\n        fcn.0044ddf0(arg1);\n        uVar1 = *(arg1 + 0x68);\n        *(arg1 + 0x79) = 0;\n        *(arg1 + 0x7a) = 0;\n        *(arg1 + 0x28) = 0;\n        *(arg1 + 0x20) = 0;\n        *(arg1 + 8) = uVar1;\n        *(arg1 + 0x10) = uVar1;\n        *(arg1 + 0x18) = uVar1;\n        *(arg1 + 0x30) = 0;\n        *(arg1 + 0x60) = *(arg1 + 0x5c);\n        *(arg1 + 100) = *(arg1 + 0x5c);\n        iVar3 = fcn.0044b600(arg1 + 0x48);\n        if ((iVar3 != 0) && (cVar2 == '\\x01')) {\n            return arg1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 346
    },
    "00452fb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nchar * fcn.00452fb0(uchar *arg1, char **arg2, uint64_t arg3)\n\n{\n    int64_t arg1_00;\n    int64_t *piVar1;\n    int16_t *piVar2;\n    char cVar3;\n    uint16_t uVar4;\n    int16_t iVar5;\n    char *pcVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    char *pcVar9;\n    ulong uStack96;\n    uint64_t uStack48;\n    uint64_t arg2_00;\n    \n    pcVar9 = *arg2;\n    *arg1 = 0;\n    pcVar6 = arg2 + *(pcVar9 + -0x18);\n    uVar8 = *(pcVar6 + 0x20);\n    if (uVar8 == 0) {\n        pcVar9 = pcVar6;\n        if (*(pcVar6 + 0xd8) != 0) {\n            uStack48 = uStack48 & 0xffffffff | arg3 << 0x20;\n            uStack96 = 0x452ff5;\n            fcn.00454150(*(pcVar6 + 0xd8));\n            arg3 = uStack48 >> 0x20;\n            pcVar9 = arg2 + *(*arg2 + -0x18);\n        }\n        if ((arg3 == '\\0') && ((pcVar9[0x19] & 0x10U) != 0)) {\n            arg1_00 = *(pcVar9 + 0xe8);\n            if (*(arg1_00 + 0x18) <= *(arg1_00 + 0x10)) goto code_r0x00453115;\n            uVar4 = **(arg1_00 + 0x10);\n            while (piVar1 = *(pcVar9 + 0xf0),  piVar1 == NULL) {\n                uStack96 = 0x453115;\n                fcn.00464f90();\ncode_r0x00453115:\n                uStack96 = 0x45311d;\n                uVar4 = fcn.0046a520(arg1_00);\n                pcVar9 = arg2 + *(*arg2 + -0x18);\n            }\n            if (uVar4 != 0xffff) {\n                do {\n                    arg3 = uVar4;\n                    uStack96 = 0x453083;\n                    cVar3 = (**(*piVar1 + 0x10))(piVar1);\n                    if (cVar3 == '\\0') {\n                        pcVar9 = arg2 + *(*arg2 + -0x18);\n                        if (uVar4 != 0xffff) goto code_r0x004530d5;\n                        goto code_r0x00453045;\n                    }\n                    piVar2 = *(arg1_00 + 0x10);\n                    if (piVar2 < *(arg1_00 + 0x18)) {\n                        iVar5 = *piVar2;\n                        *(arg1_00 + 0x10) = piVar2 + 1;\n                    }\n                    else {\n                        uStack96 = 0x453101;\n                        iVar5 = fcn.0046a510(arg1_00);\n                    }\n                    if (iVar5 == -1) break;\n                    if (*(arg1_00 + 0x10) < *(arg1_00 + 0x18)) {\n                        uVar4 = **(arg1_00 + 0x10);\n                    }\n                    else {\n                        uStack96 = 0x4530f5;\n                        uVar4 = fcn.0046a520(arg1_00);\n                    }\n                } while (uVar4 != 0xffff);\n                pcVar9 = arg2 + *(*arg2 + -0x18);\n            }\ncode_r0x00453045:\n            uVar8 = *(pcVar9 + 0x20);\n            uVar7 = 2;\n            pcVar6 = pcVar9;\n        }\n        else {\ncode_r0x004530d5:\n            uVar8 = *(pcVar9 + 0x20);\n            if (uVar8 == 0) {\n                *arg1 = 1;\n                return pcVar9;\n            }\n            uVar7 = 0;\n            pcVar6 = pcVar9;\n        }\n    }\n    else {\n        uVar7 = 0;\n    }\n    uVar8 = uVar7 | 4 | uVar8;\n    if (*(pcVar6 + 0xe8) == 0) {\n        uVar8 = uVar8 | 1;\n    }\n    arg2_00 = uVar8;\n    *(pcVar6 + 0x20) = uVar8;\n    if ((*(pcVar6 + 0x1c) & uVar8) == 0) {\n        return pcVar9;\n    }\n    pcVar9 = \"basic_ios::clear\";\n    uStack48 = 0x4634d1;\n    fcn.00465210(\"basic_ios::clear\");\n    fcn.004603c0(pcVar9, arg2_00 + 0xd0);\n    fcn.00461bd0(&stack0xffffffffffffffa0, arg2_00, arg3);\n    fcn.00460470(&stack0xffffffffffffffa0);\n    fcn.00463330(arg2_00, arg3);\n    piVar1 = *(arg2_00 + 0xe8);\n    if (piVar1 != NULL) {\n        fcn.004603c0(&stack0xffffffffffffffa0, piVar1 + 7);\n        (**(*piVar1 + 0x10))(piVar1, arg3);\n        fcn.004604a0(piVar1 + 7, arg3);\n        fcn.00460470(&stack0xffffffffffffffa0);\n    }\n    return pcVar9;\n}\n",
        "token_count": 1291
    },
    "004604a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.004604a0(int32_t **arg1, int32_t **arg2)\n\n{\n    int32_t *arg1_00;\n    \n    LOCK();\n    **arg2 = **arg2 + 1;\n    arg1_00 = *arg1;\n    LOCK();\n    *arg1_00 = *arg1_00 + -1;\n    if ((*arg1_00 == 0) && (arg1_00 != NULL)) {\n        fcn.00460040(arg1_00);\n        fcn.00469650(arg1_00);\n        *arg1 = *arg2;\n        return;\n    }\n    *arg1 = *arg2;\n    return;\n}\n",
        "token_count": 151
    },
    "00461d00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.00461d00(ulong *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    \n    *arg1 = 0x487b70;\n    iVar3 = arg1[1];\n    LOCK();\n    piVar1 = iVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (0 < iVar2) {\n        fcn.00463a50(arg1);\n        return;\n    }\n    fcn.004477a0(iVar3 + -0x18);\n    fcn.00463a50(arg1);\n    return;\n}\n",
        "token_count": 155
    },
    "00464730": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint fcn.00464730(ulong noname_0, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint uVar1;\n    char *pcVar2;\n    int64_t arg1;\n    int64_t iVar3;\n    char *pcVar4;\n    char *pcVar5;\n    uchar uVar6;\n    \n    uVar6 = 1;\n    pcVar2 = sub.msvcrt.dll_setlocale(4);\n    iVar3 = 2;\n    pcVar4 = pcVar2;\n    pcVar5 = 0x48067a;\n    do {\n        if (iVar3 == 0) break;\n        iVar3 = iVar3 + -1;\n        uVar6 = *pcVar4 == *pcVar5;\n        pcVar4 = pcVar4 + 1;\n        pcVar5 = pcVar5 + 1;\n    } while (uVar6);\n    if (uVar6) {\n        uVar1 = fcn.0040d380(arg2, arg3, arg4, &stack0x00000028);\n    }\n    else {\n        iVar3 = sub.msvcrt.dll_strlen(pcVar2);\n        arg1 = fcn.00469670(iVar3 + 1);\n        sub.msvcrt.dll_memcpy(arg1, pcVar2, iVar3 + 1);\n        sub.msvcrt.dll_setlocale(4, 0x48067a);\n        uVar1 = fcn.0040d380(arg2, arg3, arg4, &stack0x00000028);\n        if (arg1 != 0) {\n            sub.msvcrt.dll_setlocale(4, arg1);\n            fcn.00469640(arg1);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 383
    },
    "0046a250": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.0046a250(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    ulong *puVar1;\n    int64_t iVar2;\n    \n    puVar1 = *0x47d7b0;\n    *(arg1 + -0xa0) = 1;\n    *(arg1 + -0x90) = arg2;\n    *(arg1 + -0x88) = arg3;\n    iVar2 = arg1;\n    if (puVar1 == NULL) goto code_r0x0046a2c5;\n    do {\n        *(iVar2 + -0x80) = *puVar1;\n        if (*0x47d7a0 == NULL) {\n            *0x47d7a0 = fcn.0041f460();\n        }\n        arg1 = iVar2 + -0x40;\n        *(iVar2 + -0x78) = **0x47d7a0;\n        *(iVar2 + -0x40) = 0x474e5543432b2b00;\n        *(iVar2 + -0x38) = 0x41f140;\n        fcn.0040c990(arg1);\n        fcn.00469950(arg1);\n        fcn.00466fe0();\ncode_r0x0046a2c5:\n        puVar1 = fcn.0041f480();\n        iVar2 = arg1;\n        *0x47d7b0 = puVar1;\n    } while( true );\n}\n",
        "token_count": 332
    },
    "0040c780": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nulong fcn.0040c780(int32_t *arg1, int64_t arg2, ulong arg3, ulong *arg4)\n\n{\n    ulong *puVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    uint32_t uVar4;\n    code *in_stack_00000028;\n    ulong uStack104;\n    ulong uStack96;\n    ulong uStack88;\n    ulong uStack80;\n    ulong *puStack72;\n    \n    uVar4 = arg1[1];\n    iVar2 = *arg1;\n    puVar1 = *(arg1 + 8);\n    if ((uVar4 & 0x20) == 0) {\n        if (iVar2 == 0x21474343) {\n            if (arg2 != *(arg1 + 10)) {\n                return 1;\n            }\n            (*_sym.imp.KERNEL32.dll_RtlUnwindEx)(arg2, *(arg1 + 0xc), arg1, puVar1, arg3, arg4[8]);\n            sub.msvcrt.dll_abort();\n        }\n        else {\n            uStack88 = 0xdeadbeef;\n            uStack80 = 0xdeadbeef;\n            uStack104 = *(arg4[5] + 0x98);\n            uStack96 = *arg4;\n            puStack72 = arg4;\n            if (iVar2 == 0x22474343) goto code_r0x0040c880;\n            if (iVar2 != 0x20474343) {\n                return 1;\n            }\n        }\n        if ((uVar4 & 6) == 0) {\n            iVar2 = (*in_stack_00000028)(1, 1, *puVar1, puVar1, &uStack104);\n            if (iVar2 != 8) {\n                if (iVar2 != 6) goto code_r0x0040c875;\n                iVar2 = (*in_stack_00000028)(1, 6, *puVar1, puVar1, &uStack104);\n                if (iVar2 != 7) goto code_r0x0040c875;\n                puVar1[3] = arg2;\n                puVar1[5] = uStack80;\n                puVar1[4] = uStack96;\n                *(arg1 + 0xe) = uStack80;\n                uVar3 = arg4[8];\n                arg1[6] = 4;\n                *(arg1 + 10) = arg2;\n                *(arg1 + 0xc) = uStack96;\n                (*_sym.imp.KERNEL32.dll_RtlUnwindEx)(arg2, uStack96, arg1, puVar1, arg3, uVar3);\n                goto code_r0x0040c875;\n            }\n        }\n        else {\n            uVar3 = 2;\n            while (iVar2 = (*in_stack_00000028)(1, uVar3, *puVar1, puVar1, &uStack104),  iVar2 != 8) {\n                if (iVar2 == 7) {\n                    *(arg1 + 10) = arg2;\n                    *(arg1 + 0xc) = uStack96;\n                    *(arg1 + 0xe) = uStack80;\n                    (*_sym.imp.KERNEL32.dll_RaiseException)(0x21474343, 1, 4, arg1 + 8);\n                }\ncode_r0x0040c875:\n                sub.msvcrt.dll_abort();\ncode_r0x0040c880:\n                (*puVar1[2])(1, 10, *puVar1, puVar1, &uStack104, puVar1[6]);\n                uVar3 = 10;\n            }\n        }\n    }\n    else {\n        *(arg4[5] + 0x88) = *(arg1 + 0xe);\n    }\n    return 1;\n}\n",
        "token_count": 855
    },
    "0040d490": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint64_t fcn.0040d490(ulong arg1, ulong arg2)\n\n{\n    uint32_t uVar1;\n    uint64_t unaff_RBX;\n    int32_t iStack28;\n    uint uStack24;\n    uint32_t uStack20;\n    \n    uVar1 = fcn.00410a20(arg1, arg2, 0x46b0a0, &iStack28);\n    // switch table (7 cases) at 0x483380\n    switch(uVar1 & 7) {\n    case 0:\n    case 6:\n        unaff_RBX = 0;\n        break;\n    case 1:\n        unaff_RBX = CONCAT44(uStack20 & 0xffefffff | (iStack28 + 0x433) * 0x100000, uStack24);\n        break;\n    case 2:\n        unaff_RBX = CONCAT44(uStack20, uStack24);\n        break;\n    case 3:\n        unaff_RBX = 0x7ff0000000000000;\n        break;\n    case 4:\n        unaff_RBX = 0x7ff8000000000000;\n        break;\n    case 5:\n        unaff_RBX = CONCAT44(uStack20, uStack24) | 0x7ff0000000000000;\n    }\n    if ((uVar1 & 8) != 0) {\n        unaff_RBX = unaff_RBX & 0xffffffff | (unaff_RBX >> 0x20 | 0x80000000) << 0x20;\n    }\n    return unaff_RBX;\n}\n",
        "token_count": 360
    },
    "0046a300": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nint64_t fcn.0046a300(int64_t *arg1, ulong arg2, int64_t *arg3, int64_t arg4)\n\n{\n    int64_t *piVar1;\n    uint32_t uVar2;\n    int64_t iStack72;\n    uint32_t uStack64;\n    uint32_t uStack60;\n    uint32_t uStack56;\n    uint uStack52;\n    \n    piVar1 = *(*arg1 + -8);\n    iStack72 = 0;\n    uStack64 = 0;\n    uStack60 = 0;\n    uStack56 = 0;\n    uStack52 = 0x10;\n    (**(*piVar1 + 0x38))(piVar1, arg4, 6, arg3, arg1 + *(*arg1 + -0x10), arg2, arg1, &iStack72);\n    if (iStack72 != 0) {\n        if ((uStack56 & 6) == 6) {\n            return iStack72;\n        }\n        if ((uStack64 & uStack60 & 6) == 6) {\n            return iStack72;\n        }\n        if (((uStack60 & 5) != 4) && (uStack56 == 0)) {\n            if (arg4 < 0) {\n                if ((arg4 != -2) && (uVar2 = (**(*arg3 + 0x40))(arg3, arg4, iStack72, arg2, arg1),  (uVar2 & 6) == 6)) {\n                    return iStack72;\n                }\n            }\n            else if (arg1 == arg4 + iStack72) {\n                return iStack72;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 387
    },
    "0041f190": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint8_t ** fcn.0041f190(ulong arg1, uint8_t **arg2, uint8_t **arg3, uint8_t **arg4)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t **ppuVar3;\n    uint8_t **ppuVar4;\n    uint8_t uVar5;\n    uint8_t **ppuStack32;\n    \n    if (arg1 == 0x50) goto code_r0x0041f295;\n    if (0xc < (arg1 & 0xf)) {\ncode_r0x0041f290:\n        sub.msvcrt.dll_abort();\ncode_r0x0041f295:\n        ppuVar4 = arg3 + 7U & 0xfffffffffffffff8;\n        *arg4 = *ppuVar4;\n        return ppuVar4 + 1;\n    }\n    // switch table (13 cases) at 0x4801e0\n    switch(*((arg1 & 0xf) * 4 + 0x4801e0) + 0x4801e0) {\n    case 0x41f1c5:\n        ppuStack32 = *arg3;\n        ppuVar4 = arg3 + 1;\n        break;\n    case 0x41f1f2:\n        ppuStack32 = *arg3;\n        ppuVar4 = arg3 + 2;\n        break;\n    case 0x41f200:\n        ppuStack32 = NULL;\n        uVar5 = 0;\n        ppuVar3 = arg3;\n        do {\n            ppuVar4 = ppuVar3 + 1;\n            uVar1 = *ppuVar3;\n            uVar2 = uVar5 & 0x3f;\n            uVar5 = uVar5 + 7;\n            ppuStack32 = ppuStack32 | (uVar1 & 0x7f) << uVar2;\n            ppuVar3 = ppuVar4;\n        } while (uVar1 < '\\0');\n        break;\n    case 0x41f230:\n        ppuStack32 = *arg3;\n        ppuVar4 = arg3 + 2;\n        break;\n    case 0x41f240:\n        ppuStack32 = *arg3;\n        ppuVar4 = arg3 + 4;\n        break;\n    case 0x41f250:\n        ppuStack32 = *arg3;\n        ppuVar4 = arg3 + 4;\n        break;\n    case 0x41f260:\n        ppuVar4 = fcn.0041edd0(arg3, &ppuStack32);\n        break;\n    case 0x41f290:\n        goto code_r0x0041f290;\n    }\n    if (ppuStack32 != NULL) {\n        if ((arg1 & 0x70) != 0x10) {\n            arg3 = arg2;\n        }\n        ppuStack32 = ppuStack32 + arg3;\n        if (arg1 < '\\0') {\n            ppuStack32 = *ppuStack32;\n        }\n    }\n    *arg4 = ppuStack32;\n    return ppuVar4;\n}\n",
        "token_count": 715
    },
    "0040c630": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0040c630(ulong *arg1)\n\n{\n    ulong *apuStackX8 [4];\n    \n    apuStackX8[0] = arg1;\n    (*_sym.imp.KERNEL32.dll_RaiseException)(0x22474343, 0, 1, apuStackX8);\n    (*apuStackX8[0][2])(1, 0x1a, *apuStackX8[0], apuStackX8[0], 0, apuStackX8[0][6]);\n    return 0x10;\n}\n",
        "token_count": 130
    },
    "0040f510": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0040f510(unkbyte10 *noname_0, int64_t arg2)\n\n{\n    unkbyte10 Var1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    ulong arg2_00;\n    uint64_t arg3;\n    ulong uStack72;\n    ulong uStack64;\n    uint32_t uStack48;\n    uint32_t uStack44;\n    ulong uStack40;\n    ushort uStack32;\n    unkbyte6 Stack30;\n    \n    uVar2 = *(arg2 + 0x10);\n    arg3 = uVar2;\n    Var1 = *noname_0;\n    if (uVar2 < 0) {\n        *(arg2 + 0x10) = 6;\n        arg3 = 6;\n    }\n    else if (uVar2 == 0) {\n        *(arg2 + 0x10) = 1;\n        arg3 = 1;\n    }\n    uStack40 = Var1;\n    uStack32 = Var1 >> 0x40;\n    uStack72 = uStack40;\n    uStack64 = CONCAT62(Stack30, uStack32);\n    arg2_00 = fcn.0040e540(2, &uStack72, arg3, &uStack44);\n    if (uStack44 == 0xffff8000) {\n        fcn.0040e840(uStack48, arg2_00, arg2);\n    }\n    else if ((uStack44 < -3) || (*(arg2 + 0x10) < uStack44)) {\n        if ((*(arg2 + 9) & 8) == 0) {\n            iVar3 = sub.msvcrt.dll_strlen();\n            *(arg2 + 0x10) = iVar3 + -1;\n        }\n        else {\n            *(arg2 + 0x10) = *(arg2 + 0x10) + -1;\n        }\n        fcn.0040f2a0(uStack48, arg2_00, uStack44, arg2);\n    }\n    else {\n        if ((*(arg2 + 9) & 8) == 0) {\n            iVar3 = sub.msvcrt.dll_strlen();\n            iVar3 = iVar3 - uStack44;\n            *(arg2 + 0x10) = iVar3;\n            if ((iVar3 < 0) && (0 < *(arg2 + 0xc))) {\n                *(arg2 + 0xc) = iVar3 + *(arg2 + 0xc);\n            }\n        }\n        else {\n            *(arg2 + 0x10) = *(arg2 + 0x10) - uStack44;\n        }\n        fcn.0040ef80(uStack48, arg2_00, uStack44, arg2);\n        iVar3 = *(arg2 + 0xc);\n        *(arg2 + 0xc) = iVar3 + -1;\n        if (0 < iVar3) {\n            do {\n                fcn.0040e610(0x20, arg2);\n                iVar3 = *(arg2 + 0xc);\n                *(arg2 + 0xc) = iVar3 + -1;\n            } while (0 < iVar3);\n            fcn.00414d70(arg2_00);\n            return;\n        }\n    }\n    fcn.00414d70(arg2_00);\n    return;\n}\n",
        "token_count": 742
    },
    "004129e0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint16_t fcn.004129e0(int64_t arg1, uint16_t *arg2)\n\n{\n    uint16_t *puVar1;\n    uint16_t *puVar2;\n    uint16_t uVar3;\n    int64_t iVar4;\n    uchar auStack120 [32];\n    uint16_t auStack88 [16];\n    \n    auStack88[0] = *arg2;\n    auStack88[1] = arg2[1];\n    puVar1 = auStack88 + 2;\n    do {\n        puVar2 = puVar1 + 1;\n        *puVar1 = 0;\n        puVar1 = puVar2;\n    } while (puVar2 != auStack88 + 9);\n    iVar4 = arg1 + 0xe;\n    uVar3 = 0;\n    do {\n        if (*(iVar4 + 2) != 0) {\n            fcn.00412550(*(iVar4 + 2), arg2, auStack120);\n            fcn.00412700(auStack120, auStack88);\n        }\n        uVar3 = uVar3 | auStack88[8];\n        puVar1 = auStack88 + 8;\n        do {\n            puVar2 = puVar1 + -1;\n            *puVar1 = *puVar2;\n            puVar1 = puVar2;\n        } while (puVar2 != auStack88 + 2);\n        iVar4 = iVar4 + -2;\n        auStack88[2] = 0;\n    } while (iVar4 != arg1 + 2);\n    iVar4 = 0;\n    do {\n        *(arg2 + iVar4) = *(auStack88 + iVar4);\n        iVar4 = iVar4 + 2;\n    } while (iVar4 != 0x12);\n    return uVar3;\n}\n",
        "token_count": 404
    },
    "0041c8d0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t fcn.0041c8d0(int64_t *arg1)\n\n{\n    uint *arg4;\n    uint *puVar1;\n    uint *arg4_00;\n    uint *puVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    \n    iVar4 = 0x16;\n    if ((arg1 != NULL) && (puVar2 = *arg1,  puVar2 != NULL)) {\n        if (puVar2 == 0xffffffffffffffff) {\n            if (*0x49f4a0 == 0) {\n                *0x49f4a0 = fcn.0041d1b0(\"cond_locked_shmem_cond\", 0x10, 0x41c020);\n            }\n            fcn.0041d560(*0x49f4a0);\n            iVar4 = 0x10;\n            if (*arg1 == -1) {\n                *arg1 = 0;\n                iVar4 = 0;\n            }\n            if (*0x49f4a0 == 0) {\n                *0x49f4a0 = fcn.0041d1b0(\"cond_locked_shmem_cond\", 0x10, 0x41c020);\n            }\n            fcn.0041d4c0(*0x49f4a0);\n            return iVar4;\n        }\n        arg4_00 = puVar2 + 0x26;\n        arg4 = puVar2 + 0x1c;\n        iVar4 = fcn.0041c840(*(puVar2 + 0x2a), 0, 0xffffffff, arg4);\n        if (iVar4 == 0) {\n            puVar1 = puVar2 + 6;\n            iVar4 = (*_sym.imp.KERNEL32.dll_TryEnterCriticalSection)(puVar1);\n            if (iVar4 == 0) {\n                iVar4 = 0x10;\n                fcn.0041c040(*(puVar2 + 0x2a), 1, arg4, arg4_00);\n            }\n            else if ((puVar2[2] == puVar2[4] || puVar2[2] < puVar2[4]) && (iVar4 = puVar2[1],  iVar4 == 0)) {\n                *arg1 = 0;\n                fcn.0041c040(*(puVar2 + 0x2a), 1, arg4, arg4_00);\n                pcVar3 = _sym.imp.KERNEL32.dll_CloseHandle;\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(*(puVar2 + 0x28));\n                (*pcVar3)(*(puVar2 + 0x2a));\n                (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar1);\n                pcVar3 = _sym.imp.KERNEL32.dll_DeleteCriticalSection;\n                (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(puVar1);\n                (*pcVar3)(arg4);\n                (*pcVar3)(puVar2 + 0x10);\n                *puVar2 = 0xc0deadbf;\n                fcn.00416d90(puVar2);\n            }\n            else {\n                iVar4 = fcn.0041c040(*(puVar2 + 0x2a), 1, arg4, arg4_00);\n                if (iVar4 == 0) {\n                    iVar4 = 0x10;\n                }\n                (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar1);\n            }\n        }\n    }\n    return iVar4;\n}\n",
        "token_count": 784
    },
    "0041cad0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t fcn.0041cad0(int32_t **arg1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    if (arg1 == NULL) {\n        return 0x16;\n    }\n    piVar2 = *arg1;\n    if (piVar2 == NULL) {\n        return 0x16;\n    }\n    if (piVar2 == 0xffffffffffffffff) {\n        return 0;\n    }\n    if (*piVar2 != -0x3f454e03) {\n        return 0x16;\n    }\n    piVar1 = piVar2 + 6;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(piVar1);\n    if (piVar2[3] == 0) {\n        if (piVar2[2] == piVar2[4] || piVar2[2] < piVar2[4]) goto code_r0x0041cbc0;\n        iVar3 = fcn.0041c840(*(piVar2 + 0x2a), 1, 0xffffffff, piVar2 + 0x1c);\n        if (iVar3 != 0) {\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(piVar1);\n            fcn.0041a160();\n            return iVar3;\n        }\n        iVar3 = piVar2[4];\n        iVar4 = piVar2[2];\n        if (iVar3 != 0) {\n            piVar2[4] = 0;\n            iVar4 = iVar4 - iVar3;\n        }\n        piVar2[3] = 1;\n        piVar2[2] = iVar4 + -1;\n    }\n    else {\n        if (piVar2[2] == 0) {\ncode_r0x0041cbc0:\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(piVar1);\n            fcn.0041a160();\n            return 0;\n        }\n        piVar2[2] = piVar2[2] + -1;\n        piVar2[3] = piVar2[3] + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(piVar1);\n    iVar3 = fcn.0041c040(*(piVar2 + 0x28), 1, piVar2 + 0x10, piVar2 + 0x1a);\n    fcn.0041a160();\n    return iVar3;\n}\n",
        "token_count": 560
    },
    "0041cbf0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t fcn.0041cbf0(int32_t **arg1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    if (arg1 == NULL) {\n        return 0x16;\n    }\n    piVar2 = *arg1;\n    if (piVar2 == NULL) {\n        return 0x16;\n    }\n    if (piVar2 == 0xffffffffffffffff) {\n        return 0;\n    }\n    if (*piVar2 != -0x3f454e03) {\n        return 0x16;\n    }\n    piVar1 = piVar2 + 6;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(piVar1);\n    if (piVar2[3] == 0) {\n        if (piVar2[2] == piVar2[4] || piVar2[2] < piVar2[4]) goto code_r0x0041ccd5;\n        iVar3 = fcn.0041c840(*(piVar2 + 0x2a), 1, 0xffffffff, piVar2 + 0x1c);\n        if (iVar3 != 0) {\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(piVar1);\n            fcn.0041a160();\n            return iVar3;\n        }\n        iVar3 = piVar2[4];\n        uVar4 = piVar2[2];\n        if (iVar3 != 0) {\n            piVar2[4] = 0;\n            uVar4 = uVar4 - iVar3;\n        }\n        piVar2[2] = 0;\n        piVar2[3] = uVar4;\n    }\n    else {\n        uVar4 = piVar2[2];\n        if (uVar4 == 0) {\ncode_r0x0041ccd5:\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(piVar1);\n            fcn.0041a160();\n            return 0;\n        }\n        piVar2[2] = 0;\n        piVar2[3] = piVar2[3] + uVar4;\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(piVar1);\n    iVar3 = fcn.0041c040(*(piVar2 + 0x28), uVar4, piVar2 + 0x10, piVar2 + 0x1a);\n    fcn.0041a160();\n    return iVar3;\n}\n",
        "token_count": 566
    },
    "0041cd10": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.0041cd10(int32_t **arg1, ulong arg2)\n\n{\n    uint64_t uVar1;\n    ulong *puVar2;\n    int64_t *piVar3;\n    int32_t *piVar4;\n    uint32_t uStack108;\n    int32_t *piStack104;\n    ulong uStack96;\n    uint32_t *puStack88;\n    code *pcStack72;\n    int32_t **ppiStack64;\n    ulong uStack56;\n    \n    fcn.0041a160();\n    uVar1 = 0x16;\n    if ((arg1 != NULL) && (piVar4 = *arg1,  piVar4 != NULL)) {\n        if (piVar4 == 0xffffffffffffffff) {\n            uVar1 = fcn.0041c490(arg1);\n            uStack108 = uVar1;\n            if ((uVar1 & 0xffffffef) != 0) {\n                return uVar1;\n            }\n            piVar4 = *arg1;\n        }\n        else if (*piVar4 != -0x3f454e03) {\n            return 0x16;\n        }\n        uVar1 = fcn.0041c840(*(piVar4 + 0x2a), 0, 0xffffffff, piVar4 + 0x1c);\n        uStack108 = uVar1;\n        if (uStack108 == 0) {\n            (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(piVar4 + 6);\n            piVar4[2] = piVar4[2] + 1;\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(piVar4 + 6);\n            uVar1 = fcn.0041c040(*(piVar4 + 0x2a), 1, piVar4 + 0x1c, piVar4 + 0x26);\n            uStack108 = uVar1;\n            if (uStack108 == 0) {\n                puStack88 = &uStack108;\n                pcStack72 = 0x41ce80;\n                ppiStack64 = &piStack104;\n                piStack104 = piVar4;\n                uStack96 = arg2;\n                puVar2 = fcn.00419db0();\n                uStack56 = *puVar2;\n                piVar3 = fcn.00419db0();\n                *piVar3 = &pcStack72;\n                uStack108 = fcn.0041b7a0(arg2);\n                if (uStack108 == 0) {\n                    uStack108 = fcn.0041c840(*(piVar4 + 0x28), 0, 0xffffffff, piVar4 + 0x10);\n                }\n                puVar2 = fcn.00419db0();\n                *puVar2 = uStack56;\n                (*pcStack72)(ppiStack64);\n                uVar1 = uStack108;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 660
    },
    "0041cfc0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.0041cfc0(int32_t **arg1, ulong arg2, ulong arg3)\n\n{\n    uint64_t uVar1;\n    ulong *puVar2;\n    int64_t *piVar3;\n    int32_t *piVar4;\n    uint64_t arg3_00;\n    uint32_t uStack108;\n    int32_t *piStack104;\n    ulong uStack96;\n    uint32_t *puStack88;\n    code *pcStack72;\n    int32_t **ppiStack64;\n    ulong uStack56;\n    \n    fcn.0041a160();\n    uVar1 = 0x16;\n    if ((arg1 != NULL) && (piVar4 = *arg1,  piVar4 != NULL)) {\n        if (piVar4 == 0xffffffffffffffff) {\n            uVar1 = fcn.0041c490(arg1);\n            uStack108 = uVar1;\n            if ((uVar1 & 0xffffffef) != 0) {\n                return uVar1;\n            }\n            piVar4 = *arg1;\n        }\n        else if (*piVar4 != -0x3f454e03) {\n            return 0x16;\n        }\n        uVar1 = fcn.0041ea60(arg3);\n        arg3_00 = uVar1 & 0xffffffff;\n        if (0xfffffffe < uVar1) {\n            arg3_00 = 0xffffffff;\n        }\n        uVar1 = fcn.0041c840(*(piVar4 + 0x2a), 0, 0xffffffff, piVar4 + 0x1c);\n        uStack108 = uVar1;\n        if (uStack108 == 0) {\n            piVar4[2] = piVar4[2] + 1;\n            uVar1 = fcn.0041c040(*(piVar4 + 0x2a), 1, piVar4 + 0x1c, piVar4 + 0x26);\n            uStack108 = uVar1;\n            if (uStack108 == 0) {\n                puStack88 = &uStack108;\n                pcStack72 = 0x41ce80;\n                ppiStack64 = &piStack104;\n                piStack104 = piVar4;\n                uStack96 = arg2;\n                puVar2 = fcn.00419db0();\n                uStack56 = *puVar2;\n                piVar3 = fcn.00419db0();\n                *piVar3 = &pcStack72;\n                uStack108 = fcn.0041b7a0(arg2);\n                if (uStack108 == 0) {\n                    uStack108 = fcn.0041c840(*(piVar4 + 0x28), 0, arg3_00, piVar4 + 0x10);\n                }\n                puVar2 = fcn.00419db0();\n                *puVar2 = uStack56;\n                (*pcStack72)(ppiStack64);\n                uVar1 = uStack108;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 689
    },
    "00461e00": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00461e00(ulong *arg1)\n\n{\n    int32_t *arg1_00;\n    ulong *arg1_01;\n    \n    *arg1 = 0x489690;\n    fcn.00461180(arg1, 0);\n    fcn.00461220(arg1);\n    arg1_01 = arg1[0x19];\n    if (arg1_01 != arg1 + 8) {\n        if (arg1_01 != NULL) {\n            fcn.00469640(arg1_01);\n        }\n        arg1[0x19] = 0;\n    }\n    arg1_00 = arg1[0x1a];\n    LOCK();\n    *arg1_00 = *arg1_00 + -1;\n    if ((*arg1_00 == 0) && (arg1_00 != NULL)) {\n        fcn.00460040(arg1_00);\n        if (arg1_00 != NULL) {\n    // WARNING: Could not recover jumptable at 0x00416d90. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.msvcrt.dll_free)();\n            return;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 272
    },
    "0044d650": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0044d650(ulong *arg1)\n\n{\n    ulong *arg1_00;\n    char cVar1;\n    ulong uVar2;\n    \n    arg1_00 = arg1 + 7;\n    arg1[1] = 0;\n    *arg1 = 0x488970;\n    arg1[2] = 0;\n    arg1[3] = 0;\n    arg1[4] = 0;\n    arg1[5] = 0;\n    arg1[6] = 0;\n    fcn.004603d0(arg1_00);\n    arg1[8] = 0;\n    *arg1 = 0x488290;\n    fcn.0044b920(arg1 + 9);\n    *(arg1 + 0xb) = 0;\n    *(arg1 + 0x5c) = 0;\n    *(arg1 + 0xc) = 0;\n    *(arg1 + 100) = 0;\n    arg1[0xd] = 0;\n    arg1[0xe] = 0x200;\n    *(arg1 + 0xf) = 0;\n    *(arg1 + 0x79) = 0;\n    *(arg1 + 0x7a) = 0;\n    *(arg1 + 0x7b) = 0;\n    arg1[0x10] = 0;\n    arg1[0x11] = 0;\n    *(arg1 + 0x12) = 0;\n    arg1[0x13] = 0;\n    arg1[0x14] = 0;\n    arg1[0x15] = 0;\n    arg1[0x16] = 0;\n    arg1[0x17] = 0;\n    cVar1 = fcn.00466860(arg1_00);\n    if (cVar1 == '\\0') {\n        return;\n    }\n    uVar2 = fcn.00467320(arg1_00);\n    arg1[0x13] = uVar2;\n    return;\n}\n",
        "token_count": 465
    },
    "0044d7b0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0044d7b0(ulong *arg1)\n\n{\n    ulong *arg1_00;\n    char cVar1;\n    ulong uVar2;\n    \n    arg1_00 = arg1 + 7;\n    arg1[1] = 0;\n    *arg1 = 0x488970;\n    arg1[2] = 0;\n    arg1[3] = 0;\n    arg1[4] = 0;\n    arg1[5] = 0;\n    arg1[6] = 0;\n    fcn.004603d0(arg1_00);\n    arg1[8] = 0;\n    *arg1 = 0x488290;\n    fcn.0044b920(arg1 + 9);\n    *(arg1 + 0xb) = 0;\n    *(arg1 + 0x5c) = 0;\n    *(arg1 + 0xc) = 0;\n    *(arg1 + 100) = 0;\n    arg1[0xd] = 0;\n    arg1[0xe] = 0x200;\n    *(arg1 + 0xf) = 0;\n    *(arg1 + 0x79) = 0;\n    *(arg1 + 0x7a) = 0;\n    *(arg1 + 0x7b) = 0;\n    arg1[0x10] = 0;\n    arg1[0x11] = 0;\n    *(arg1 + 0x12) = 0;\n    arg1[0x13] = 0;\n    arg1[0x14] = 0;\n    arg1[0x15] = 0;\n    arg1[0x16] = 0;\n    arg1[0x17] = 0;\n    cVar1 = fcn.00466860(arg1_00);\n    if (cVar1 == '\\0') {\n        return;\n    }\n    uVar2 = fcn.00467320(arg1_00);\n    arg1[0x13] = uVar2;\n    return;\n}\n",
        "token_count": 467
    },
    "0044f370": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0044f370(ulong *arg1)\n\n{\n    ulong *arg1_00;\n    char cVar1;\n    ulong uVar2;\n    \n    arg1_00 = arg1 + 7;\n    arg1[1] = 0;\n    *arg1 = 0x4889f0;\n    arg1[2] = 0;\n    arg1[3] = 0;\n    arg1[4] = 0;\n    arg1[5] = 0;\n    arg1[6] = 0;\n    fcn.004603d0(arg1_00);\n    arg1[8] = 0;\n    *arg1 = 0x488310;\n    fcn.0044b920(arg1 + 9);\n    *(arg1 + 0xb) = 0;\n    *(arg1 + 0x5c) = 0;\n    *(arg1 + 0xc) = 0;\n    *(arg1 + 100) = 0;\n    arg1[0xd] = 0;\n    arg1[0xe] = 0x200;\n    *(arg1 + 0xf) = 0;\n    *(arg1 + 0x79) = 0;\n    *(arg1 + 0x7a) = 0;\n    *(arg1 + 0x7c) = 0;\n    arg1[0x10] = 0;\n    arg1[0x11] = 0;\n    *(arg1 + 0x12) = 0;\n    arg1[0x13] = 0;\n    arg1[0x14] = 0;\n    arg1[0x15] = 0;\n    arg1[0x16] = 0;\n    arg1[0x17] = 0;\n    cVar1 = fcn.004668c0(arg1_00);\n    if (cVar1 == '\\0') {\n        return;\n    }\n    uVar2 = fcn.00467380(arg1_00);\n    arg1[0x13] = uVar2;\n    return;\n}\n",
        "token_count": 468
    },
    "0044f4d0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0044f4d0(ulong *arg1)\n\n{\n    ulong *arg1_00;\n    char cVar1;\n    ulong uVar2;\n    \n    arg1_00 = arg1 + 7;\n    arg1[1] = 0;\n    *arg1 = 0x4889f0;\n    arg1[2] = 0;\n    arg1[3] = 0;\n    arg1[4] = 0;\n    arg1[5] = 0;\n    arg1[6] = 0;\n    fcn.004603d0(arg1_00);\n    arg1[8] = 0;\n    *arg1 = 0x488310;\n    fcn.0044b920(arg1 + 9);\n    *(arg1 + 0xb) = 0;\n    *(arg1 + 0x5c) = 0;\n    *(arg1 + 0xc) = 0;\n    *(arg1 + 100) = 0;\n    arg1[0xd] = 0;\n    arg1[0xe] = 0x200;\n    *(arg1 + 0xf) = 0;\n    *(arg1 + 0x79) = 0;\n    *(arg1 + 0x7a) = 0;\n    *(arg1 + 0x7c) = 0;\n    arg1[0x10] = 0;\n    arg1[0x11] = 0;\n    *(arg1 + 0x12) = 0;\n    arg1[0x13] = 0;\n    arg1[0x14] = 0;\n    arg1[0x15] = 0;\n    arg1[0x16] = 0;\n    arg1[0x17] = 0;\n    cVar1 = fcn.004668c0(arg1_00);\n    if (cVar1 == '\\0') {\n        return;\n    }\n    uVar2 = fcn.00467380(arg1_00);\n    arg1[0x13] = uVar2;\n    return;\n}\n",
        "token_count": 470
    },
    "00461d50": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00461d50(ulong *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong arg1_00;\n    int32_t **ppiVar3;\n    ulong *puVar4;\n    ulong *puVar5;\n    \n    puVar5 = arg1 + 0x18;\n    arg1[1] = 0;\n    *arg1 = 0x489690;\n    arg1[2] = 0;\n    *(arg1 + 3) = 0;\n    *(arg1 + 0x1c) = 0;\n    *(arg1 + 4) = 0;\n    arg1[5] = 0;\n    arg1[6] = 0;\n    *(arg1 + 7) = 0;\n    puVar4 = arg1 + 8;\n    do {\n        *puVar4 = 0;\n        *(puVar4 + 1) = 0;\n        puVar4 = puVar4 + 2;\n    } while (puVar4 != puVar5);\n    *(arg1 + 0x18) = 8;\n    arg1[0x19] = arg1 + 8;\n    ppiVar3 = arg1 + 0x1a;\n    *ppiVar3 = NULL;\n    fcn.0045e8a0();\n    piVar1 = *0x47f290;\n    *ppiVar3 = *0x47f290;\n    if (piVar1 == *0x47f240) {\n        LOCK();\n        *piVar1 = *piVar1 + 1;\n        return;\n    }\n    arg1_00 = fcn.0041f9b0();\n    iVar2 = fcn.0041bdb0(arg1_00);\n    if (iVar2 != 0) {\n        ppiVar3 = fcn.00420e70();\n        goto code_r0x00460444;\n    }\n    LOCK();\n    **0x47f290 = **0x47f290 + 1;\n    *ppiVar3 = *0x47f290;\n    iVar2 = fcn.0041b7a0(arg1_00);\n    if (iVar2 == 0) {\n        return;\n    }\n    while( true ) {\n        ppiVar3 = fcn.00420ea0();\ncode_r0x00460444:\n        puVar5 = puVar5 + 1;\n        if (puVar5 == NULL) break;\n        fcn.0040ca50(ppiVar3);\n    }\n    fcn.00469a20(ppiVar3);\n    piVar1 = *ppiVar3;\n    LOCK();\n    *piVar1 = *piVar1 + -1;\n    if ((*piVar1 == 0) && (piVar1 != NULL)) {\n        fcn.00460040(piVar1);\n        if (piVar1 != NULL) {\n    // WARNING: Could not recover jumptable at 0x00416d90. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.msvcrt.dll_free)();\n            return;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 701
    },
    "00415280": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint64_t fcn.00415280(int64_t arg1, int64_t arg2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    int64_t iVar5;\n    uint32_t *puVar6;\n    uint32_t *puVar7;\n    uint32_t *puVar9;\n    uint32_t *puVar10;\n    int64_t iVar11;\n    int32_t iVar12;\n    uint32_t *puVar13;\n    uint64_t uVar14;\n    uint64_t uVar15;\n    uint32_t *puVar8;\n    \n    iVar1 = *(arg1 + 0x14);\n    iVar12 = *(arg2 + 0x14);\n    iVar11 = arg2;\n    iVar3 = iVar12;\n    if (iVar1 < iVar12) {\n        iVar11 = arg1;\n        arg1 = arg2;\n        iVar3 = iVar1;\n        iVar1 = iVar12;\n    }\n    iVar12 = iVar1 + iVar3;\n    iVar5 = fcn.00415020((*(arg1 + 0xc) < iVar12) + *(arg1 + 8));\n    if (iVar5 == 0) {\n        iVar5 = 0;\n    }\n    else {\n        puVar10 = iVar5 + 0x18;\n        puVar9 = puVar10 + iVar12;\n        for (puVar13 = puVar10; puVar13 < puVar9; puVar13 = puVar13 + 1) {\n            *puVar13 = 0;\n        }\n        puVar13 = iVar11 + 0x18;\n        while (puVar13 < iVar11 + 0x18 + iVar3) {\n            uVar2 = *puVar13;\n            if (uVar2 != 0) {\n                uVar15 = 0;\n                puVar4 = puVar10;\n                puVar7 = arg1 + 0x18;\n                do {\n                    puVar6 = puVar4;\n                    puVar8 = puVar7 + 1;\n                    uVar14 = *puVar7 * uVar2 + *puVar6 + uVar15;\n                    *puVar6 = uVar14;\n                    uVar15 = uVar14 >> 0x20;\n                    puVar4 = puVar6 + 1;\n                    puVar7 = puVar8;\n                } while (puVar8 < arg1 + 0x18 + iVar1);\n                puVar6[1] = uVar14 >> 0x20;\n            }\n            puVar10 = puVar10 + 1;\n            puVar13 = puVar13 + 1;\n        }\n        if (0 < iVar12) {\n            uVar2 = puVar9[-1];\n            puVar9 = puVar9 + -1;\n            while ((uVar2 == 0 && (iVar12 = iVar12 + -1,  iVar12 != 0))) {\n                puVar9 = puVar9 + -1;\n                uVar2 = *puVar9;\n            }\n        }\n        *(iVar5 + 0x14) = iVar12;\n    }\n    return iVar5;\n}\n",
        "token_count": 703
    },
    "00415640": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t fcn.00415640(int64_t arg1, int64_t arg2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t *puVar4;\n    \n    iVar1 = *(arg2 + 0x14);\n    uVar2 = *(arg1 + 0x14) - iVar1;\n    if (uVar2 == 0) {\n        puVar3 = arg1 + 0x18 + iVar1;\n        puVar4 = arg2 + 0x18 + iVar1 * 4;\n        do {\n            puVar4 = puVar4 + -1;\n            puVar3 = puVar3 + -1;\n            if (*puVar3 != *puVar4) {\n                return -(*puVar3 < *puVar4) | 1;\n            }\n        } while (arg1 + 0x18 < puVar3);\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 226
    },
    "00415ca0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong fcn.00415ca0(int64_t arg1, ulong arg2)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int8_t iVar4;\n    int32_t iVar5;\n    uint32_t *puVar6;\n    \n    iVar2 = *(arg1 + 0x14);\n    puVar1 = arg1 + 0x18;\n    iVar5 = arg2 >> 5;\n    if (iVar2 < iVar5) {\n        puVar6 = puVar1 + iVar2;\n    }\n    else {\n        puVar6 = puVar1 + iVar5;\n        if (((iVar5 < iVar2) && ((arg2 & 0x1f) != 0)) && (iVar4 = arg2 & 0x1f,  (*puVar6 >> iVar4) << iVar4 != *puVar6))\n        {\n            return 1;\n        }\n    }\n    if (puVar1 < puVar6) {\n        uVar3 = puVar6[-1];\n        puVar6 = puVar6 + -1;\n        while( true ) {\n            if (uVar3 != 0) {\n                return 1;\n            }\n            if (puVar6 <= puVar1) break;\n            puVar6 = puVar6 + -1;\n            uVar3 = *puVar6;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 314
    },
    "00415530": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nint64_t fcn.00415530(int64_t arg1, ulong arg2)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int8_t iVar6;\n    int32_t iVar7;\n    int64_t iVar8;\n    uint64_t arg1_00;\n    int32_t iVar9;\n    int32_t iVar10;\n    int64_t iVar11;\n    uint32_t *puVar12;\n    uint32_t *puVar13;\n    uint32_t *puVar14;\n    uint32_t *puVar15;\n    uint32_t uVar16;\n    int32_t iVar17;\n    \n    iVar9 = arg2 >> 5;\n    arg1_00 = *(arg1 + 8);\n    iVar17 = *(arg1 + 0x14) + iVar9;\n    iVar10 = iVar17 + 1;\n    iVar7 = *(arg1 + 0xc);\n    if (*(arg1 + 0xc) < iVar10) {\n        do {\n            iVar5 = iVar7 * 2;\n            arg1_00 = arg1_00 + 1;\n            iVar4 = iVar7 * -2;\n            iVar7 = iVar5;\n        } while (iVar10 != iVar5 && SBORROW4(iVar10, iVar5) == iVar10 + iVar4 < 0);\n    }\n    iVar8 = fcn.00415020(arg1_00);\n    if (iVar8 == 0) {\n        iVar8 = 0;\n    }\n    else {\n        puVar14 = iVar8 + 0x18;\n        if (0 < iVar9) {\n            iVar11 = 0;\n            do {\n                puVar14[iVar11] = 0;\n                iVar11 = iVar11 + 1;\n            } while (iVar11 < iVar9);\n            puVar14 = iVar8 + 0x1c + (iVar9 - 1) * 4;\n        }\n        iVar7 = *(arg1 + 0x14);\n        puVar1 = arg1 + 0x18;\n        puVar12 = puVar1;\n        if ((arg2 & 0x1f) == 0) {\n            do {\n                puVar13 = puVar12 + 1;\n                *puVar14 = *puVar12;\n                puVar12 = puVar13;\n                puVar14 = puVar14 + 1;\n            } while (puVar13 < puVar1 + iVar7);\n        }\n        else {\n            uVar16 = 0;\n            iVar6 = arg2 & 0x1f;\n            do {\n                puVar15 = puVar14;\n                puVar13 = puVar12 + 1;\n                *puVar15 = *puVar12 << iVar6 | uVar16;\n                uVar2 = *puVar12;\n                uVar3 = 0x20U - iVar6 & 0x1f;\n                uVar16 = uVar2 >> uVar3;\n                puVar12 = puVar13;\n                puVar14 = puVar15 + 1;\n            } while (puVar13 < puVar1 + iVar7);\n            puVar15[1] = uVar16;\n            if (uVar2 >> uVar3 != 0) {\n                iVar10 = iVar17 + 2;\n            }\n        }\n        *(iVar8 + 0x14) = iVar10 + -1;\n        fcn.00415120(arg1);\n    }\n    return iVar8;\n}\n",
        "token_count": 781
    },
    "00415d20": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.00415d20(int64_t arg1, ulong arg2)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    int8_t iVar3;\n    int32_t iVar4;\n    uint32_t *puVar5;\n    uint32_t *puVar6;\n    uint32_t *puVar7;\n    uint32_t *puVar8;\n    uint32_t uVar9;\n    \n    puVar7 = arg1 + 0x18;\n    if (arg2 >> 5 < *(arg1 + 0x14)) {\n        puVar1 = puVar7 + *(arg1 + 0x14);\n        puVar2 = puVar7 + (arg2 >> 5);\n        if ((arg2 & 0x1f) == 0) {\n            puVar6 = puVar2;\n            if (puVar1 <= puVar2) goto code_r0x00415dd0;\n            do {\n                puVar5 = puVar6 + 1;\n                *puVar7 = *puVar6;\n                puVar6 = puVar5;\n                puVar7 = puVar7 + 1;\n            } while (puVar5 < puVar1);\n            iVar4 = (~puVar2 + puVar1 & 0xfffffffffffffffc) + 4 >> 2;\n        }\n        else {\n            puVar6 = puVar2 + 1;\n            iVar3 = arg2 & 0x1f;\n            uVar9 = *puVar2 >> iVar3;\n            puVar5 = puVar7;\n            if (puVar6 < puVar1) {\n                do {\n                    puVar8 = puVar6 + 1;\n                    *puVar5 = *puVar6 << (0x20U - iVar3 & 0x1f) | uVar9;\n                    uVar9 = *puVar6 >> iVar3;\n                    puVar6 = puVar8;\n                    puVar5 = puVar5 + 1;\n                } while (puVar8 < puVar1);\n                puVar5 = arg1 + 0x1c + (puVar1 + (-5 - puVar2) & 0xfffffffffffffffcU);\n            }\n            *puVar5 = uVar9;\n            if (uVar9 != 0) {\n                puVar5 = puVar5 + 1;\n            }\n            iVar4 = puVar5 - puVar7 >> 2;\n        }\n        *(arg1 + 0x14) = iVar4;\n        if (iVar4 != 0) {\n            return;\n        }\n    }\n    else {\ncode_r0x00415dd0:\n        *(arg1 + 0x14) = 0;\n    }\n    *(arg1 + 0x18) = 0;\n    return;\n}\n",
        "token_count": 616
    },
    "004157d0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint64_t fcn.004157d0(int64_t arg1, int32_t *arg2)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    char cVar5;\n    uint32_t uVar6;\n    uint8_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    \n    uVar1 = arg1 + 0x18;\n    iVar2 = uVar1 + *(arg1 + 0x14) * 4;\n    uVar3 = *(iVar2 + -4);\n    uVar9 = iVar2 - 4;\n    uVar6 = 0x1f;\n    if (uVar3 != 0) {\n        for (; uVar3 >> uVar6 == 0; uVar6 = uVar6 - 1) {\n        }\n    }\n    uVar6 = uVar6 ^ 0x1f;\n    *arg2 = 0x20 - uVar6;\n    cVar5 = uVar6;\n    if (uVar6 < 0xb) {\n        uVar6 = 0;\n        if (uVar1 < uVar9) {\n            uVar6 = *(iVar2 + -8) >> (0xbU - cVar5 & 0x1f);\n        }\n        return CONCAT44(uVar3 >> (0xbU - cVar5 & 0x1f), uVar3 << (cVar5 + 0x15U & 0x1f) | uVar6) | 0x3ff0000000000000;\n    }\n    uVar8 = 0;\n    if (uVar1 < uVar9) {\n        uVar8 = *(iVar2 + -8);\n        uVar9 = iVar2 - 8;\n    }\n    if (uVar6 - 0xb != 0) {\n        uVar7 = uVar6 - 0xb;\n        uVar4 = 0x2bU - cVar5 & 0x1f;\n        uVar6 = 0 >> uVar4;\n        if (uVar1 < uVar9) {\n            uVar6 = *(uVar9 - 4) >> (0x2bU - cVar5 & 0x1f);\n        }\n        return CONCAT44(uVar3 << (uVar7 & 0x1f) | 0x3ff00000 | uVar8 >> uVar4, uVar6 | uVar8 << (uVar7 & 0x1f));\n    }\n    return (uVar3 | 0x3ff00000) << 0x20 | uVar8;\n}\n",
        "token_count": 602
    },
    "0041edd0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.0041edd0(uint8_t *arg1, uint64_t *arg2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    \n    uVar4 = 0;\n    uVar3 = 0;\n    do {\n        uVar1 = *arg1;\n        uVar2 = uVar3;\n        uVar3 = uVar3 + 7;\n        uVar4 = uVar4 | (uVar1 & 0x7f) << (uVar2 & 0x3f);\n        arg1 = arg1 + 1;\n    } while (uVar1 < '\\0');\n    if ((uVar3 < 0x40) && ((uVar1 & 0x40) != 0)) {\n        uVar4 = uVar4 | -1 << (uVar3 & 0x3f);\n    }\n    *arg2 = uVar4;\n    return;\n}\n",
        "token_count": 225
    },
    "0041ef60": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.0041ef60(int64_t arg1, uint8_t *arg2, ulong *arg3)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    ulong uVar3;\n    uint8_t *puVar4;\n    uint8_t uVar6;\n    uint64_t uVar7;\n    uint8_t *puVar5;\n    \n    uVar3 = 0;\n    if (arg1 != 0) {\n        uVar3 = fcn.0040c720(arg1);\n    }\n    *arg3 = uVar3;\n    uVar6 = *arg2;\n    if (uVar6 == 0xff) {\n        arg3[1] = uVar3;\n        uVar6 = arg2[1];\n        arg2 = arg2 + 2;\n        *(arg3 + 5) = uVar6;\n    }\n    else {\n        uVar3 = fcn.0041f0d0(uVar6, arg1);\n        arg2 = fcn.0041f190(uVar6, uVar3, arg2 + 1, arg3 + 1);\n        uVar6 = *arg2;\n        arg2 = arg2 + 1;\n        *(arg3 + 5) = uVar6;\n    }\n    if (uVar6 == 0xff) {\n        arg3[3] = 0;\n    }\n    else {\n        uVar7 = 0;\n        uVar6 = 0;\n        puVar5 = arg2;\n        do {\n            arg2 = puVar5 + 1;\n            uVar1 = *puVar5;\n            uVar2 = uVar6 & 0x3f;\n            uVar6 = uVar6 + 7;\n            uVar7 = uVar7 | (uVar1 & 0x7f) << uVar2;\n            puVar5 = arg2;\n        } while (uVar1 < '\\0');\n        arg3[3] = arg2 + uVar7;\n    }\n    uVar7 = 0;\n    uVar6 = 0;\n    *(arg3 + 0x29) = *arg2;\n    puVar5 = arg2 + 1;\n    do {\n        puVar4 = puVar5 + 1;\n        uVar1 = *puVar5;\n        uVar2 = uVar6 & 0x3f;\n        uVar6 = uVar6 + 7;\n        uVar7 = uVar7 | (uVar1 & 0x7f) << uVar2;\n        puVar5 = puVar4;\n    } while (uVar1 < '\\0');\n    arg3[4] = puVar4 + uVar7;\n    return;\n}\n",
        "token_count": 605
    },
    "0041f050": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nulong fcn.0041f050(int64_t arg1, ulong arg2, ulong arg3, uint64_t arg4)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    ulong uVar3;\n    uint8_t uVar4;\n    uint64_t arg2_00;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    ulong auStackX24 [2];\n    \n    puVar5 = ~arg4 + *(arg1 + 0x18);\n    auStackX24[0] = arg3;\n    while( true ) {\n        arg2_00 = 0;\n        uVar4 = 0;\n        puVar6 = puVar5;\n        do {\n            puVar5 = puVar6 + 1;\n            uVar1 = *puVar6;\n            uVar2 = uVar4 & 0x3f;\n            uVar4 = uVar4 + 7;\n            arg2_00 = arg2_00 | (uVar1 & 0x7f) << uVar2;\n            puVar6 = puVar5;\n        } while (uVar1 < '\\0');\n        if (arg2_00 == 0) break;\n        uVar3 = fcn.0041ee70(arg1, arg2_00);\n        uVar3 = fcn.0041ef00(uVar3, arg2, auStackX24);\n        if (uVar3 != '\\0') {\n            return uVar3;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 342
    },
    "00461270": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid fcn.00461270(void)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    \n    pcVar1 = _sym.imp.msvcrt.dll___iob_func;\n    LOCK();\n    if (*0x47f320 != 0) {\n        *0x47f320 = *0x47f320 + 1;\n        return;\n    }\n    *0x47f330 = 1;\n    *0x47f320 = *0x47f320 + 1;\n    iVar2 = (*_sym.imp.msvcrt.dll___iob_func)();\n    *0x47ea48 = 0;\n    *0x47ea50 = 0;\n    *0x47ea40 = 0x488970;\n    *0x47ea58 = 0;\n    *0x47ea60 = 0;\n    *0x47ea68 = 0;\n    *0x47ea70 = 0;\n    fcn.004603d0(0x47ea78);\n    *0x47ea88 = 0xffffffff;\n    *0x47ea40 = 0x4878d0;\n    *0x47ea80 = iVar2 + 0x30;\n    uVar3 = (*pcVar1)();\n    *0x47e988 = 0;\n    *0x47e990 = 0;\n    *0x47e980 = 0x488970;\n    *0x47e998 = 0;\n    *0x47e9a0 = 0;\n    *0x47e9a8 = 0;\n    *0x47e9b0 = 0;\n    fcn.004603d0(0x47e9b8);\n    *0x47e9c8 = 0xffffffff;\n    *0x47e980 = 0x4878d0;\n    *0x47e9c0 = uVar3;\n    iVar2 = (*pcVar1)();\n    *0x47e9e8 = 0;\n    *0x47e9f0 = 0;\n    *0x47e9e0 = 0x488970;\n    *0x47e9f8 = 0;\n    *0x47ea00 = 0;\n    *0x47ea08 = 0;\n    *0x47ea10 = 0;\n    fcn.004603d0(0x47ea18);\n    *0x47ea28 = 0xffffffff;\n    *0x47e9e0 = 0x4878d0;\n    *0x47ea20 = iVar2 + 0x60;\n    fcn.00461d50(0x47f768);\n    *0x47f840 = 0;\n    *0x47f848 = 0;\n    *0x47f760 = 0x487c98;\n    *0x47f849 = 0;\n    *0x47f850 = 0;\n    *0x47f858 = 0;\n    *0x47f860 = 0;\n    *0x47f868 = 0;\n    *0x47f768 = 0x487cc0;\n    fcn.00462cd0(0x47f768, 0x47ea40);\n    fcn.00461d50(0x47f410);\n    *0x47f4e8 = 0;\n    *0x47f4f0 = 0;\n    *0x47f400 = 0x487c38;\n    *0x47f4f1 = 0;\n    *0x47f4f8 = 0;\n    *0x47f500 = 0;\n    *0x47f508 = 0;\n    *0x47f510 = 0;\n    *0x47f410 = 0x487c60;\n    *0x47f408 = 0;\n    fcn.00462cd0(0x47f410, 0x47e980);\n    fcn.00461d50(0x47f528);\n    *0x47f600 = 0;\n    *0x47f608 = 0;\n    *0x47f520 = 0x487c98;\n    *0x47f609 = 0;\n    *0x47f610 = 0;\n    *0x47f618 = 0;\n    *0x47f620 = 0;\n    *0x47f628 = 0;\n    *0x47f528 = 0x487cc0;\n    fcn.00462cd0(0x47f528, 0x47e9e0);\n    fcn.00461d50(0x47f648);\n    *0x47f720 = 0;\n    *0x47f728 = 0;\n    *0x47f640 = 0x487c98;\n    *0x47f729 = 0;\n    *0x47f730 = 0;\n    *0x47f738 = 0;\n    *0x47f740 = 0;\n    *0x47f748 = 0;\n    *0x47f648 = 0x487cc0;\n    fcn.00462cd0(0x47f648, 0x47e9e0);\n    *0x47f540 = *0x47f540 | 0x2000;\n    *0x47f4e8 = 0x47f760;\n    *0x47f600 = 0x47f760;\n    iVar2 = (*pcVar1)();\n    *0x47eb68 = 0;\n    *0x47eb70 = 0;\n    *0x47eb60 = 0x4889f0;\n    *0x47eb78 = 0;\n    *0x47eb80 = 0;\n    *0x47eb88 = 0;\n    *0x47eb90 = 0;\n    fcn.004603d0(0x47eb98);\n    *0x47eba8 = 0xffff;\n    *0x47eb60 = 0x487950;\n    *0x47eba0 = iVar2 + 0x30;\n    uVar3 = (*pcVar1)();\n    *0x47eaa8 = 0;\n    *0x47eab0 = 0;\n    *0x47eaa0 = 0x4889f0;\n    *0x47eab8 = 0;\n    *0x47eac0 = 0;\n    *0x47eac8 = 0;\n    *0x47ead0 = 0;\n    fcn.004603d0(0x47ead8);\n    *0x47eae8 = 0xffff;\n    *0x47eaa0 = 0x487950;\n    *0x47eae0 = uVar3;\n    iVar2 = (*pcVar1)();\n    *0x47eb08 = 0;\n    *0x47eb10 = 0;\n    *0x47eb00 = 0x4889f0;\n    *0x47eb18 = 0;\n    *0x47eb20 = 0;\n    *0x47eb28 = 0;\n    *0x47eb30 = 0;\n    fcn.004603d0(0x47eb38);\n    *0x47eb48 = 0xffff;\n    *0x47eb00 = 0x487950;\n    *0x47eb40 = iVar2 + 0x60;\n    fcn.00461d50(0x47fbe8);\n    *0x47fcc0 = 0;\n    *0x47fcca = 0;\n    *0x47fbe0 = 0x4884f8;\n    *0x47fcc8 = 0;\n    *0x47fcd0 = 0;\n    *0x47fcd8 = 0;\n    *0x47fce0 = 0;\n    *0x47fce8 = 0;\n    *0x47fbe8 = 0x488520;\n    fcn.00463440(0x47fbe8, 0x47eb60);\n    fcn.00461d50(0x47f890);\n    *0x47f970 = 0;\n    *0x47f968 = 0;\n    *0x47f880 = 0x488498;\n    *0x47f972 = 0;\n    *0x47f978 = 0;\n    *0x47f980 = 0;\n    *0x47f988 = 0;\n    *0x47f990 = 0;\n    *0x47f890 = 0x4884c0;\n    *0x47f888 = 0;\n    fcn.00463440(0x47f890, 0x47eaa0);\n    fcn.00461d50(0x47f9a8);\n    *0x47fa88 = 0;\n    *0x47fa80 = 0;\n    *0x47f9a0 = 0x4884f8;\n    *0x47fa8a = 0;\n    *0x47fa90 = 0;\n    *0x47fa98 = 0;\n    *0x47faa0 = 0;\n    *0x47faa8 = 0;\n    *0x47f9a8 = 0x488520;\n    fcn.00463440(0x47f9a8, 0x47eb00);\n    fcn.00461d50(0x47fac8);\n    *0x47fba8 = 0;\n    *0x47fba0 = 0;\n    *0x47fbaa = 0;\n    *0x47fbb0 = 0;\n    *0x47fac0 = 0x4884f8;\n    *0x47fbb8 = 0;\n    *0x47fbc0 = 0;\n    *0x47fbc8 = 0;\n    *0x47fac8 = 0x488520;\n    fcn.00463440(0x47fac8, 0x47eb00);\n    *0x47f9c0 = *0x47f9c0 | 0x2000;\n    LOCK();\n    *0x47f320 = *0x47f320 + 1;\n    *0x47f968 = 0x47fbe0;\n    *0x47fa80 = 0x47fbe0;\n    return;\n}\n",
        "token_count": 2374
    },
    "00440300": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.00440300(uint64_t arg1, uint64_t arg2)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    \n    if (arg1 < 0x1ffffffffffffffd) {\n        iVar2 = arg1 * 2 + 0x1a;\n        if (arg1 <= arg2) goto code_r0x00440364;\n        if (arg1 < arg2 * 2) {\n            arg1 = arg2 * 2;\n        }\n        iVar2 = arg1 * 2 + 2;\n        uVar1 = arg1 * 2 + 0x3a;\n        if ((0x1000 < uVar1) && (arg2 < arg1)) {\n            arg1 = arg1 + (0x1000 - (uVar1 & 0xfff) >> 1);\n            if (0x1ffffffffffffffc < arg1) {\n                arg1 = 0x1ffffffffffffffc;\n            }\n            iVar2 = arg1 * 2 + 0x1a;\n            goto code_r0x00440364;\n        }\n    }\n    else {\n        iVar2 = 0x48053a;\n        fcn.00465550(0x48053a);\n    }\n    iVar2 = iVar2 + 0x18;\ncode_r0x00440364:\n    iVar2 = fcn.004696a0(iVar2);\n    *(iVar2 + 8) = arg1;\n    *(iVar2 + 0x10) = 0;\n    return;\n}\n",
        "token_count": 341
    },
    "0044da50": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint64_t fcn.0044da50(int64_t arg1, ulong arg2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    cVar1 = (**(**(arg1 + 0x98) + 0x30))();\n    if (cVar1 != '\\0') {\n        return *(arg1 + 0x10) - *(arg1 + 0x18) >> 1;\n    }\n    iVar2 = (**(**(arg1 + 0x98) + 0x38))\n                      (*(arg1 + 0x98), arg2, *(arg1 + 0xa0), *(arg1 + 0xb0), *(arg1 + 0x10) - *(arg1 + 8) >> 1);\n    return (iVar2 + *(arg1 + 0xa0)) - *(arg1 + 0xb8);\n}\n",
        "token_count": 196
    },
    "00464180": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.00464180(ushort *arg1, ulong arg2, char *arg3, int64_t arg4)\n\n{\n    uint8_t uVar1;\n    ushort *puVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    char cVar5;\n    int64_t iVar6;\n    ushort *puVar7;\n    ushort *puVar8;\n    ushort *in_stack_00000028;\n    ushort *in_stack_00000030;\n    ulong var_1h;\n    \n    cVar5 = *arg3;\n    iVar4 = 0;\n    uVar3 = 0;\n    iVar6 = cVar5;\n    while (iVar6 < in_stack_00000030 - in_stack_00000028 >> 1) {\n        while( true ) {\n            if (0x7d < cVar5 - 1U) goto code_r0x004641e6;\n            in_stack_00000030 = in_stack_00000030 + -iVar6;\n            if (arg4 - 1U <= uVar3) break;\n            uVar3 = uVar3 + 1;\n            cVar5 = arg3[uVar3];\n            iVar6 = cVar5;\n            if (in_stack_00000030 - in_stack_00000028 >> 1 <= iVar6) goto code_r0x004641e6;\n        }\n        iVar4 = iVar4 + 1;\n    }\ncode_r0x004641e6:\n    puVar2 = in_stack_00000028;\n    puVar8 = arg1;\n    if (in_stack_00000030 != in_stack_00000028) {\n        do {\n            puVar7 = puVar2 + 1;\n            *puVar8 = *puVar2;\n            puVar2 = puVar7;\n            puVar8 = puVar8 + 1;\n        } while (in_stack_00000030 != puVar7);\n        iVar6 = (in_stack_00000030 - (in_stack_00000028 + 1) & 0xfffffffffffffffeU) + 2;\n        in_stack_00000028 = in_stack_00000028 + iVar6;\n        arg1 = arg1 + iVar6;\n    }\n    while (puVar2 = arg1,  iVar4 = iVar4 + -1,  iVar4 != -1) {\n        while( true ) {\n            *puVar2 = arg2;\n            uVar1 = arg3[uVar3];\n            arg1 = puVar2 + 1;\n            if (uVar1 < '\\x01') break;\n            iVar6 = 0;\n            do {\n                *(puVar2 + iVar6 + 2) = *(in_stack_00000028 + iVar6);\n                iVar6 = iVar6 + 2;\n            } while (iVar6 != (uVar1 - 1 & 0xff) * 2 + 2);\n            iVar4 = iVar4 + -1;\n            in_stack_00000028 = in_stack_00000028 + iVar6;\n            puVar2 = puVar2 + 1 + iVar6;\n            if (iVar4 == -1) goto joined_r0x00464282;\n        }\n    }\njoined_r0x00464282:\n    while (puVar8 = puVar2,  uVar3 = uVar3 - 1,  uVar3 != 0xffffffffffffffff) {\n        *puVar8 = arg2;\n        uVar1 = arg3[uVar3];\n        puVar2 = puVar8 + 1;\n        if ('\\0' < uVar1) {\n            iVar4 = 0;\n            do {\n                *(puVar8 + iVar4 + 2) = *(in_stack_00000028 + iVar4);\n                iVar4 = iVar4 + 2;\n            } while (iVar4 != (uVar1 - 1 & 0xff) * 2 + 2);\n            in_stack_00000028 = in_stack_00000028 + iVar4;\n            puVar2 = puVar8 + 1 + iVar4;\n        }\n    }\n    return;\n}\n",
        "token_count": 915
    },
    "00437bc0": {
        "rules": [
            "parse credit card information/3266979fad224c5386fccfb7f2b301b7"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t ** fcn.00437bc0(int64_t **arg1, ulong arg2, int64_t **arg3, int64_t **arg4)\n\n{\n    int16_t *piVar1;\n    uint64_t uVar2;\n    char cVar3;\n    char cVar4;\n    ushort uVar5;\n    int16_t iVar6;\n    int16_t iVar7;\n    int32_t iVar8;\n    int64_t iVar9;\n    int64_t *piVar10;\n    uint64_t uVar11;\n    int64_t iVar12;\n    int64_t **ppiVar13;\n    int64_t *piVar14;\n    uint64_t uVar15;\n    ulong uVar16;\n    int64_t in_stack_00000028;\n    uint32_t *in_stack_00000030;\n    int64_t in_stack_00000038;\n    int64_t in_stack_00000040;\n    ulong uVar17;\n    int64_t *piStack232;\n    int64_t *piStack224;\n    int64_t *piStack216;\n    int64_t *piStack208;\n    int64_t *piStack200;\n    ushort uStack192;\n    uint32_t uStack176;\n    int32_t iStack172;\n    ulong uStack168;\n    ulong uStack160;\n    ulong uStack152;\n    ulong uStack144;\n    ulong uStack136;\n    ulong uStack128;\n    ulong uStack120;\n    ulong uStack112;\n    ulong uStack104;\n    ulong uStack96;\n    ulong uStack88;\n    ulong uStack80;\n    \n    uVar15 = 0;\n    iVar9 = fcn.00467200(in_stack_00000028 + 0xd0);\n    piVar10 = fcn.004672c0(in_stack_00000028 + 0xd0);\n    uVar11 = sub.msvcrt.dll_wcslen(in_stack_00000040);\n    piVar14 = *arg3;\n    uStack176 = 0;\n    do {\n        cVar4 = '\\x01';\n        if ((piVar14 != NULL) && (cVar4 = '\\0',  *(arg3 + 1) == -1)) {\n            if (piVar14[2] < piVar14[3]) {\n                iVar7 = *piVar14[2];\n            }\n            else {\n                iVar7 = (**(*piVar14 + 0x48))();\n            }\n            if (iVar7 == -1) {\n                *arg3 = NULL;\n                cVar4 = '\\x01';\n            }\n            else {\n                *(arg3 + 1) = iVar7;\n                cVar4 = '\\0';\n            }\n        }\n        piVar14 = *arg4;\n        cVar3 = '\\x01';\n        if ((piVar14 != NULL) && (cVar3 = '\\0',  *(arg4 + 1) == -1)) {\n            if (piVar14[2] < piVar14[3]) {\n                iVar7 = *piVar14[2];\n            }\n            else {\n                iVar7 = (**(*piVar14 + 0x48))();\n            }\n            if (iVar7 == -1) {\n                *arg4 = NULL;\n                cVar3 = '\\x01';\n            }\n            else {\n                *(arg4 + 1) = iVar7;\n                cVar3 = '\\0';\n            }\n        }\n        if (((cVar3 == cVar4) || (uVar11 <= uVar15)) || (uStack176 != 0)) {\n            if ((uStack176 != 0) || (uVar15 != uVar11)) {\n                *in_stack_00000030 = *in_stack_00000030 | 4;\n            }\n            piVar14 = arg3[1];\n            *arg1 = *arg3;\n            arg1[1] = piVar14;\n            return arg1;\n        }\n        piVar1 = in_stack_00000040 + uVar15 * 2;\n        cVar4 = (**(*piVar10 + 0x60))(piVar10, *piVar1, 0);\n        if (cVar4 != '%') {\n            piVar14 = *arg3;\n            iVar7 = *piVar1;\n            if (piVar14 == NULL) {\ncode_r0x00437ed7:\n                piVar14 = NULL;\n                if (iVar7 != -1) {\ncode_r0x00437dd3:\n                    uStack176 = uStack176 | 4;\n                }\n            }\n            else if (*(arg3 + 1) == -1) {\n                if (piVar14[2] < piVar14[3]) {\n                    iVar6 = *piVar14[2];\n                }\n                else {\n                    iVar6 = (**(*piVar14 + 0x48))();\n                }\n                if (iVar6 == -1) {\n                    *arg3 = NULL;\n                    goto code_r0x00437ed7;\n                }\n                *(arg3 + 1) = iVar6;\n                piVar14 = *arg3;\n                if (iVar7 != iVar6) goto code_r0x00437dd3;\n                if (piVar14 != NULL) goto code_r0x00437e68;\n            }\n            else {\n                if (iVar7 != *(arg3 + 1)) goto code_r0x00437dd3;\ncode_r0x00437e68:\n                if (piVar14[2] < piVar14[3]) {\n                    piVar14[2] = piVar14[2] + 2;\n                }\n                else {\n                    (**(*piVar14 + 0x50))();\n                    piVar14 = *arg3;\n                }\n                *(arg3 + 1) = 0xffff;\n            }\n            goto code_r0x00437ddb;\n        }\n        cVar4 = (**(*piVar10 + 0x60))(piVar10);\n        iStack172 = 0;\n        if ((cVar4 == 'O') || (uVar2 = uVar15 + 1,  cVar4 == 'E')) {\n            cVar4 = (**(*piVar10 + 0x60))(piVar10);\n            uVar2 = uVar15 + 2;\n        }\n        uVar15 = uVar2;\n    // switch table (57 cases) at 0x4806e0\n        switch(cVar4 + -0x41) {\n        case '\\0':\n            iVar12 = *(iVar9 + 0x10);\n            uStack168 = *(iVar12 + 0x58);\n            uStack160 = *(iVar12 + 0x60);\n            uStack152 = *(iVar12 + 0x68);\n            uStack144 = *(*(iVar9 + 0x10) + 0x70);\n            uStack136 = *(*(iVar9 + 0x10) + 0x78);\n            uStack128 = *(*(iVar9 + 0x10) + 0x80);\n            uStack120 = *(*(iVar9 + 0x10) + 0x88);\n            goto code_r0x0043803b;\n        case '\\x01':\n            iVar12 = *(iVar9 + 0x10);\n            uStack168 = *(iVar12 + 200);\n            uStack160 = *(iVar12 + 0xd0);\n            uStack152 = *(iVar12 + 0xd8);\n            uStack144 = *(*(iVar9 + 0x10) + 0xe0);\n            uStack136 = *(*(iVar9 + 0x10) + 0xe8);\n            uStack128 = *(*(iVar9 + 0x10) + 0xf0);\n            uStack120 = *(*(iVar9 + 0x10) + 0xf8);\n            uStack112 = *(*(iVar9 + 0x10) + 0x100);\n            uStack104 = *(*(iVar9 + 0x10) + 0x108);\n            uStack96 = *(*(iVar9 + 0x10) + 0x110);\n            uStack88 = *(*(iVar9 + 0x10) + 0x118);\n            uStack80 = *(*(iVar9 + 0x10) + 0x120);\n            goto code_r0x004381a7;\n        case '\\x02':\n        case '\\x18':\n        case '8':\n            piStack216 = *arg3;\n            piStack208 = arg3[1];\n            piStack232 = *arg4;\n            piStack224 = arg4[1];\n            fcn.00437030(&piStack200, arg2, &piStack216, &piStack232);\n            *arg3 = piStack200;\n            *(arg3 + 1) = uStack192;\n            if (uStack176 == 0) {\n                iVar8 = iStack172 + 100;\n                if (-1 < iStack172) {\n                    iVar8 = iStack172 + -0x76c;\n                }\n                *(in_stack_00000038 + 0x14) = iVar8;\n            }\n            goto code_r0x00437f20;\n        case '\\x03':\n            iVar12 = *piVar10;\n            uVar16 = 0x4806cf;\n            uVar17 = 0x4806c6;\n            goto code_r0x0043831d;\n        default:\n            goto code_r0x00437f11;\n        case '\\a':\n            piStack216 = *arg3;\n            piStack208 = arg3[1];\n            piStack232 = *arg4;\n            piStack224 = arg4[1];\n            break;\n        case '\\b':\n            piStack216 = *arg3;\n            piStack208 = arg3[1];\n            piStack232 = *arg4;\n            piStack224 = arg4[1];\n            break;\n        case '\\f':\n            piStack216 = *arg3;\n            piStack208 = arg3[1];\n            piStack232 = *arg4;\n            piStack224 = arg4[1];\n            break;\n        case '\\x11':\n            iVar12 = *piVar10;\n            uVar16 = 0x4806d5;\n            uVar17 = 0x4806cf;\n            goto code_r0x0043831d;\n        case '\\x12':\n            piStack216 = *arg3;\n            piStack208 = arg3[1];\n            piStack232 = *arg4;\n            piStack224 = arg4[1];\n            break;\n        case '\\x13':\n            iVar12 = *piVar10;\n            uVar16 = 0x4806de;\n            uVar17 = 0x4806d5;\ncode_r0x0043831d:\n            (**(iVar12 + 0x58))(piVar10, uVar17, uVar16, &uStack168);\n            piStack216 = *arg3;\n            piStack208 = arg3[1];\n            piStack232 = *arg4;\n            piStack224 = arg4[1];\n            goto code_r0x00437f70;\n        case '\\x17':\n            piStack216 = *arg3;\n            piStack208 = arg3[1];\n            piStack232 = *arg4;\n            piStack224 = arg4[1];\n            goto code_r0x00437f70;\n        case '\\x19':\n            fcn.00425470(arg3);\n            cVar4 = (**(*piVar10 + 0x10))(piVar10);\n            if (cVar4 == '\\0') goto code_r0x00437f11;\n            piStack216 = *arg3;\n            piStack208 = arg3[1];\n            piStack232 = *arg4;\n            piStack224 = arg4[1];\n            fcn.00437570(&piStack200, arg2, &piStack216, &piStack232, &uStack168, 0x47f1a0, 0xe, in_stack_00000028, \n                         &uStack176);\n            *arg3 = piStack200;\n            *(arg3 + 1) = uStack192;\n            cVar4 = fcn.00425380(arg3, arg4);\n            if (((cVar4 == '\\0') && (uStack176 == 0)) && (uStack168 == 0)) {\n                iVar7 = fcn.00425470(arg3);\n                iVar6 = (**(*piVar10 + 0x50))(piVar10, 0x2d);\n                if (iVar7 != iVar6) {\n                    iVar7 = fcn.00425470(arg3);\n                    iVar6 = (**(*piVar10 + 0x50))(piVar10);\n                    if (iVar7 != iVar6) goto code_r0x00437f20;\n                }\n                piStack216 = *arg3;\n                piStack208 = arg3[1];\n                piStack232 = *arg4;\n                piStack224 = arg4[1];\n                fcn.00437030(&piStack200, arg2, &piStack216, &piStack232);\n                *arg3 = piStack200;\n                *(arg3 + 1) = uStack192;\n                piStack216 = *arg3;\n                piStack208 = arg3[1];\n                piStack232 = *arg4;\n                piStack224 = arg4[1];\n                break;\n            }\n            goto code_r0x00437f20;\n        case ' ':\n            iVar12 = *(iVar9 + 0x10);\n            uStack168 = *(iVar12 + 0x90);\n            uStack160 = *(iVar12 + 0x98);\n            uStack152 = *(iVar12 + 0xa0);\n            uStack144 = *(*(iVar9 + 0x10) + 0xa8);\n            uStack136 = *(*(iVar9 + 0x10) + 0xb0);\n            uStack128 = *(*(iVar9 + 0x10) + 0xb8);\n            uStack120 = *(*(iVar9 + 0x10) + 0xc0);\ncode_r0x0043803b:\n            piStack208 = arg3[1];\n            piStack216 = *arg3;\n            piStack232 = *arg4;\n            piStack224 = arg4[1];\n            uVar17 = 7;\n            iVar12 = in_stack_00000038 + 0x18;\ncode_r0x004380ad:\n            fcn.00437570(&piStack200, arg2, &piStack216, &piStack232, iVar12, &uStack168, uVar17, in_stack_00000028, \n                         &uStack176);\n            goto code_r0x00437fb8;\n        case '!':\n        case '\\'':\n            iVar12 = *(iVar9 + 0x10);\n            uStack168 = *(iVar12 + 0x128);\n            uStack160 = *(iVar12 + 0x130);\n            uStack152 = *(iVar12 + 0x138);\n            uStack144 = *(*(iVar9 + 0x10) + 0x140);\n            uStack136 = *(*(iVar9 + 0x10) + 0x148);\n            uStack128 = *(*(iVar9 + 0x10) + 0x150);\n            uStack120 = *(*(iVar9 + 0x10) + 0x158);\n            uStack112 = *(*(iVar9 + 0x10) + 0x160);\n            uStack104 = *(*(iVar9 + 0x10) + 0x168);\n            uStack96 = *(*(iVar9 + 0x10) + 0x170);\n            uStack88 = *(*(iVar9 + 0x10) + 0x178);\n            uStack80 = *(*(iVar9 + 0x10) + 0x180);\ncode_r0x004381a7:\n            piStack208 = arg3[1];\n            piStack216 = *arg3;\n            piStack232 = *arg4;\n            piStack224 = arg4[1];\n            uVar17 = 0xc;\n            iVar12 = in_stack_00000038 + 0x10;\n            goto code_r0x004380ad;\n        case '\\\"':\n            piStack216 = *arg3;\n            piStack208 = arg3[1];\n            piStack232 = *arg4;\n            piStack224 = arg4[1];\n            goto code_r0x00437f70;\n        case '#':\n            piStack216 = *arg3;\n            piStack208 = arg3[1];\n            piStack232 = *arg4;\n            piStack224 = arg4[1];\n            break;\n        case '$':\n            uVar5 = fcn.00425470(arg3);\n            cVar4 = (**(*piVar10 + 0x10))(piVar10, 0x20, uVar5);\n            if (cVar4 == '\\0') {\n                piStack216 = *arg3;\n                piStack208 = arg3[1];\n                piStack232 = *arg4;\n                piStack224 = arg4[1];\n            }\n            else {\n                ppiVar13 = fcn.0045ddd0(arg3);\n                piStack208 = ppiVar13[1];\n                piStack216 = *ppiVar13;\n                piStack232 = *arg4;\n                piStack224 = arg4[1];\n            }\n            break;\n        case ',':\n            piStack216 = *arg3;\n            piStack208 = arg3[1];\n            piStack232 = *arg4;\n            piStack224 = arg4[1];\n            fcn.00437030(&piStack200, arg2, &piStack216, &piStack232);\n            *arg3 = piStack200;\n            *(arg3 + 1) = uStack192;\n            if (uStack176 == 0) {\n                *(in_stack_00000038 + 0x10) = iStack172 + -1;\n            }\n            goto code_r0x00437f20;\n        case '-':\n            fcn.00425470(arg3);\n            cVar4 = (**(*piVar10 + 0x60))(piVar10);\n            if (cVar4 != '\\n') goto code_r0x00437f11;\ncode_r0x00438bc1:\n            fcn.0045ddd0(arg3);\n            goto code_r0x00437f20;\n        case '3':\n            fcn.00425470(arg3);\n            cVar4 = (**(*piVar10 + 0x60))(piVar10);\n            if (cVar4 == '\\t') goto code_r0x00438bc1;\n            goto code_r0x00437f11;\n        case '7':\n            piStack216 = *arg3;\n            piStack208 = arg3[1];\n            piStack232 = *arg4;\n            piStack224 = arg4[1];\ncode_r0x00437f70:\n            fcn.00437bc0(&piStack200, arg2, &piStack216, &piStack232);\n            goto code_r0x00437fb8;\n        }\n        fcn.00437030(&piStack200, arg2, &piStack216, &piStack232);\ncode_r0x00437fb8:\n        *arg3 = piStack200;\n        *(arg3 + 1) = uStack192;\ncode_r0x00437f20:\n        piVar14 = *arg3;\ncode_r0x00437ddb:\n        uVar15 = uVar15 + 1;\n    } while( true );\ncode_r0x00437f11:\n    uStack176 = uStack176 | 4;\n    goto code_r0x00437f20;\n}\n",
        "token_count": 4341
    },
    "00415c30": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid fcn.00415c30(uint *arg1, ulong arg2, int64_t arg3)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint *puVar5;\n    uint *puVar4;\n    \n    puVar3 = arg3 + 0x18;\n    puVar2 = arg1 + (arg2 + -1 >> 5) + 1;\n    puVar1 = puVar3 + *(arg3 + 0x14);\n    puVar5 = arg1;\n    if (puVar3 < puVar1) {\n        do {\n            puVar4 = puVar3 + 1;\n            *puVar5 = *puVar3;\n            puVar3 = puVar4;\n            puVar5 = puVar5 + 1;\n        } while (puVar4 < puVar1);\n        arg1 = arg1 + (puVar1 + (-0x19 - arg3) & 0xfffffffffffffffcU) + 4;\n    }\n    for (; arg1 < puVar2; arg1 = arg1 + 1) {\n        *arg1 = 0;\n    }\n    return;\n}\n",
        "token_count": 261
    },
    "00415b20": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\ndouble fcn.00415b20(int64_t arg1, int64_t arg2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    double dVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iStack48;\n    int32_t aiStack44 [5];\n    \n    uVar3 = fcn.004157d0(arg1, &iStack48);\n    iVar6 = uVar3 >> 0x20;\n    uVar5 = uVar3;\n    iVar2 = iVar6;\n    dVar4 = fcn.004157d0(arg2, aiStack44);\n    iVar1 = (*(arg1 + 0x14) - *(arg2 + 0x14)) * 0x20 + (iStack48 - aiStack44[0]);\n    if (iVar1 < 1) {\n        dVar4 = dVar4 & 0xffffffff | (dVar4 >> 0x20) + iVar1 * -0x100000 << 0x20;\n    }\n    else {\n        iVar2 = iVar1 * 0x100000 + iVar6;\n        uVar5 = uVar3;\n    }\n    return CONCAT44(iVar2, uVar5) / dVar4;\n}\n",
        "token_count": 286
    },
    "0041d130": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nuint64_t fcn.0041d130(ulong noname_0, int64_t arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    \n    if (arg3 - arg4 < 0x40) {\n        pcVar1 = swi(3);\n        uVar4 = (*pcVar1)();\n        return uVar4;\n    }\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetAtomNameA)(noname_0, arg2);\n    if (iVar3 != 0) {\n        iVar5 = 0;\n        uVar4 = 0;\n        do {\n            while (*(arg4 + arg2 + iVar5) == 'A') {\n                cVar2 = iVar5;\n                iVar5 = iVar5 + 1;\n                uVar4 = uVar4 | 1 << (-cVar2 & 0x1fU);\n                if (iVar5 == 0x40) {\n                    return uVar4;\n                }\n            }\n            iVar5 = iVar5 + 1;\n        } while (iVar5 != 0x40);\n        return uVar4;\n    }\n    pcVar1 = swi(3);\n    uVar4 = (*pcVar1)();\n    return uVar4;\n}\n",
        "token_count": 303
    },
    "00469cb0": {
        "rules": [
            "encrypt data using HC-128/11bb23636d2a4650a9dbaa6512d69580",
            "encrypt data using HC-128/11bb23636d2a4650a9dbaa6512d69580",
            "encrypt data using HC-128/11bb23636d2a4650a9dbaa6512d69580"
        ],
        "decompiled_code": "\nulong fcn.00469cb0(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    int64_t arg1_00;\n    int64_t iVar4;\n    \n    if ((arg1 < 0x46b3a0) || (iVar4 = 0x47b3a0,  0x47b39f < arg1)) {\n    // WARNING: Could not recover jumptable at 0x00416d90. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar3 = (*_sym.imp.msvcrt.dll_free)(arg1 - 0xa0);\n        return uVar3;\n    }\n    iVar2 = fcn.0041bdb0(0x47da20);\n    if (iVar2 != 0) {\n        arg1_00 = fcn.00420e70();\n        goto code_r0x00469d26;\n    }\n    uVar1 = arg1 - 0x46b3a0U >> 10 & 0x3f;\n    *0x46b370 = *0x46b370 & (-2 << uVar1 | 0xfffffffffffffffeU >> 0x40 - uVar1);\n    uVar3 = fcn.0041b7a0(0x47da20);\n    if (uVar3 == 0) {\n        return uVar3;\n    }\n    while( true ) {\n        arg1_00 = fcn.00420ea0();\ncode_r0x00469d26:\n        iVar4 = iVar4 + 1;\n        if (iVar4 == 0) break;\n        fcn.0040ca50(arg1_00);\n    }\n    fcn.00469a20(arg1_00);\n    return *(arg1_00 + -8);\n}\n",
        "token_count": 411
    },
    "00469c00": {
        "rules": [
            "encrypt data using HC-128/f6b71aea27f34766a10ff27131cf0227"
        ],
        "decompiled_code": "\nulong fcn.00469c00(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    int64_t arg1_00;\n    uint32_t uVar4;\n    int64_t iVar5;\n    \n    if ((0x47b39f < arg1) && (arg1 < 0x47d7a0)) {\n        uVar4 = arg1 - 0x47b3a0;\n        iVar5 = SUB168(ZEXT416(uVar4) * ZEXT816(0xe38e38e38e38e38f) >> 0x40, 0);\n        iVar2 = fcn.0041bdb0(0x47da20);\n        if (iVar2 != 0) {\n            arg1 = fcn.00420e70();\n            goto code_r0x00469c87;\n        }\n        uVar1 = uVar4 / 0x90 & 0x3f;\n        *0x46b380 = *0x46b380 & (-2 << uVar1 | 0xfffffffffffffffeU >> 0x40 - uVar1);\n        uVar3 = fcn.0041b7a0(0x47da20);\n        if (uVar3 == 0) {\n            return uVar3;\n        }\n        while( true ) {\n            arg1 = fcn.00420ea0();\ncode_r0x00469c87:\n            iVar5 = iVar5 + 1;\n            if (iVar5 == 0) break;\n            fcn.0040ca50(arg1);\n        }\n        fcn.00469a20(arg1);\n        if ((0x46b39f < arg1) && (iVar5 = 0x47b3a0,  arg1 < 0x47b3a0)) {\n            iVar2 = fcn.0041bdb0(0x47da20);\n            if (iVar2 != 0) {\n                arg1_00 = fcn.00420e70();\n                goto code_r0x00469d26;\n            }\n            uVar1 = arg1 - 0x46b3a0U >> 10 & 0x3f;\n            *0x46b370 = *0x46b370 & (-2 << uVar1 | 0xfffffffffffffffeU >> 0x40 - uVar1);\n            uVar3 = fcn.0041b7a0(0x47da20);\n            if (uVar3 != 0) {\n                while( true ) {\n                    arg1_00 = fcn.00420ea0();\ncode_r0x00469d26:\n                    iVar5 = iVar5 + 1;\n                    if (iVar5 == 0) break;\n                    fcn.0040ca50(arg1_00);\n                }\n                fcn.00469a20(arg1_00);\n                return *(arg1_00 + -8);\n            }\n            return uVar3;\n        }\n        arg1 = arg1 - 0xa0;\n    }\n    // WARNING: Could not recover jumptable at 0x00416d90. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar3 = (*_sym.imp.msvcrt.dll_free)(arg1);\n    return uVar3;\n}\n",
        "token_count": 735
    },
    "00401cd0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.00401cd0(uint16_t *arg1, uint16_t *arg2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    ulong uVar4;\n    uint16_t *puStackX8;\n    uint16_t *puStackX16;\n    ulong var_58h;\n    ulong var_30h;\n    ulong var_28h;\n    uint32_t uStack32;\n    uint16_t uStack28;\n    uint16_t uStack26;\n    \n    iVar1 = fcn.00401c9d(arg1);\n    iVar2 = fcn.00401c9d(arg2);\n    if (iVar1 == iVar2) {\n        puStackX8 = arg1;\n        puStackX16 = arg2;\n        for (uStack32 = 0; uVar3 = fcn.00401c9d(puStackX8),  uStack32 < uVar3; uStack32 = uStack32 + 1) {\n            uStack26 = *puStackX8;\n            uStack28 = *puStackX16;\n            if ((0x40 < uStack26) && (uStack26 < 0x5b)) {\n                uStack26 = uStack26 + 0x20;\n            }\n            if ((0x40 < uStack28) && (uStack28 < 0x5b)) {\n                uStack28 = uStack28 + 0x20;\n            }\n            if (uStack26 != uStack28) {\n                return 1;\n            }\n            puStackX8 = puStackX8 + 1;\n            puStackX16 = puStackX16 + 1;\n        }\n        uVar4 = 0;\n    }\n    else {\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 406
    },
    "00403320": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00403320(int64_t arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    iVar1 = *(arg1 + 0x100);\n    if (iVar1 == 0xff) {\n        *(arg1 + 0xff) = 0;\n        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n        *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n        iVar2 = 1;\n        iVar1 = 0;\n    }\n    else {\n        iVar2 = iVar1 + 1;\n    }\n    *(arg1 + 0x100) = iVar2;\n    *(arg1 + iVar1) = arg2;\n    *(arg1 + 0x108) = arg2;\n    return;\n}\n",
        "token_count": 197
    },
    "00403400": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint * fcn.00403400(int64_t arg1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = *(arg1 + 0x28);\n    if (iVar2 < *(arg1 + 0x2c)) {\n        *(arg1 + 0x28) = iVar2 + 1;\n        puVar1 = *(arg1 + 0x20) + iVar2 * 0x18;\n        if (puVar1 != NULL) {\n            *puVar1 = 0x40;\n            uVar3 = fcn.00403390(arg1 + 0x18);\n            puVar1[2] = uVar3;\n            return puVar1;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 174
    },
    "004034a0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint * fcn.004034a0(int64_t arg1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (**(arg1 + 0x18) == 'T') {\n        *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n        iVar3 = fcn.00403450(arg1);\n        if (-1 < iVar3) {\n            *(arg1 + 0x40) = *(arg1 + 0x40) + 1;\n            iVar2 = *(arg1 + 0x28);\n            if (iVar2 < *(arg1 + 0x2c)) {\n                *(arg1 + 0x28) = iVar2 + 1;\n                puVar1 = *(arg1 + 0x20) + iVar2 * 0x18;\n                if (puVar1 != NULL) {\n                    puVar1[2] = iVar3;\n                    *puVar1 = 5;\n                    return puVar1;\n                }\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 245
    },
    "00403510": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t fcn.00403510(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    \n    if (**(arg1 + 0x18) != '_') {\n        return 1;\n    }\n    *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n    uVar1 = fcn.00403390(arg1 + 0x18);\n    return ~uVar1 >> 0x1f;\n}\n",
        "token_count": 106
    },
    "004049f0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402e80)\n\nulong fcn.004049f0(int64_t arg1, ulong arg2)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    \n    if (**(arg1 + 0x18) == 'J') {\n        *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n    }\n    else {\n        iVar3 = 0;\n        if (arg2 == 0) goto code_r0x00404a08;\n    }\n    iVar3 = fcn.00403f90(arg1);\n    if (iVar3 == 0) {\n        return 0;\n    }\ncode_r0x00404a08:\n    iVar2 = fcn.00404900(arg1);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    // WARNING: Could not recover jumptable at 0x00402e27. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar1 = (*(*0x481524 + 0x481480))(arg1, 0x29, iVar3, iVar2);\n    return uVar1;\n}\n",
        "token_count": 274
    },
    "00405dc0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nchar ******** fcn.00405dc0(uchar *arg1, ulong arg2, char ********arg3)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    ulong *puVar3;\n    ulong uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    char ********ppppppppcVar8;\n    char ********ppppppppcVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    int64_t iVar12;\n    uint64_t arg2_00;\n    char ********ppppppppcVar13;\n    char ******ppppppcVar14;\n    char ********ppppppppcVar15;\n    char *******pppppppcVar16;\n    char *pcVar17;\n    uchar *puVar18;\n    char ******ppppppcVar19;\n    char *****pppppcVar20;\n    char *****pppppcVar21;\n    char *******pppppppcVar22;\n    char cVar23;\n    int32_t iVar24;\n    uint8_t *puVar25;\n    int32_t iVar26;\n    char *******pppppppcVar27;\n    uchar uVar28;\n    bool bVar29;\n    uchar uVar30;\n    char ********ppppppppcStack216;\n    char *******pppppppcStack208;\n    char ********appppppppcStack200 [2];\n    int32_t *piStack184;\n    char *******apppppppcStack176 [3];\n    int32_t *apiStack152 [11];\n    \n    uVar6 = *arg3;\n    ppppppppcVar9 = uVar6;\n    arg2_00 = arg2;\n    if (0x4b < uVar6) {\ncode_r0x00407aa3:\n        *(arg1 + 0x130) = 1;\n        return ppppppppcVar9;\n    }\n    // switch table (76 cases) at 0x481d54\n    switch(*(uVar6 * 4 + 0x481d54) + 0x481d54) {\n    case 0x405e00:\ncode_r0x00405e00:\n        appppppppcStack200[0] = *(arg1 + 0x128);\ncode_r0x00405e07:\n        *(arg1 + 0x128) = appppppppcStack200;\n        apppppppcStack176[0] = *(arg1 + 0x120);\n        appppppppcStack200[1] = arg3;\ncode_r0x00405e31:\n        pppppppcVar22 = appppppppcStack200[1][1];\ncode_r0x00405e35:\n        ppppppppcVar9 = appppppppcStack200[1];\n        piStack184._0_4_ = 0;\n        fcn.004095c0(arg1, arg2_00, pppppppcVar22);\n        if (piStack184 == 0) {\n            fcn.004095f0(arg1, arg2, ppppppppcVar9);\n        }\n        *(arg1 + 0x128) = appppppppcStack200[0];\n        ppppppppcVar9 = appppppppcStack200[0];\n        break;\n    case 0x405e74:\n        appppppppcStack200[0] = *(arg1 + 0x128);\n        ppppppppcVar9 = appppppppcStack200[0];\n        if (appppppppcStack200[0] == NULL) {\n            appppppppcStack200[0] = NULL;\n        }\n        else {\n            do {\n                if (*(ppppppppcVar9 + 2) == 0) {\n                    if (2 < *ppppppppcVar9[1] - 0x19) break;\n                    if (uVar6 == *ppppppppcVar9[1]) {\n                        ppppppppcVar9 = fcn.004095c0(arg1, arg2_00, arg3[1]);\n                        return ppppppppcVar9;\n                    }\n                }\n                ppppppppcVar9 = *ppppppppcVar9;\n            } while (ppppppppcVar9 != NULL);\n        }\n        goto code_r0x00405e07;\n    case 0x405ec0:\n        uVar6 = *(arg3 + 2);\n        pppppppcVar22 = arg3[1];\n        if (uVar6 != 0) {\n            ppppppppcVar15 = *(arg1 + 0x100);\n            iVar11 = 1;\n            do {\n                uVar28 = *(pppppppcVar22 + iVar11 + -1);\n                if (ppppppppcVar15 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    ppppppppcVar9 = NULL;\n                    ppppppppcVar15 = 0x1;\n                }\n                else {\n                    ppppppppcVar9 = ppppppppcVar15;\n                    ppppppppcVar15 = ppppppppcVar15 + 1;\n                }\n                iVar11 = iVar11 + 1;\n                *(arg1 + 0x100) = ppppppppcVar15;\n                arg1[ppppppppcVar9] = uVar28;\n                arg1[0x108] = uVar28;\n            } while (iVar11 != uVar6 + 1);\n        }\n        break;\n    case 0x405f40:\n        iVar11 = *(arg1 + 0x100);\n        pcVar17 = \"hidden alias for \";\n        do {\n            cVar23 = *pcVar17;\n            if (iVar11 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar12 = 0;\n                iVar11 = 1;\n            }\n            else {\n                iVar12 = iVar11;\n                iVar11 = iVar11 + 1;\n            }\n            pcVar17 = pcVar17 + 1;\n            *(arg1 + 0x100) = iVar11;\n            arg1[iVar12] = cVar23;\n            arg1[0x108] = cVar23;\n        } while (pcVar17 != \"\");\n        ppppppppcVar9 = fcn.004095c0(arg1, arg2_00, arg3[1]);\n        break;\n    case 0x405fc0:\n        iVar11 = *(arg1 + 0x100);\n        pcVar17 = \"TLS wrapper function for \";\n        do {\n            cVar23 = *pcVar17;\n            if (iVar11 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar12 = 0;\n                iVar11 = 1;\n            }\n            else {\n                iVar12 = iVar11;\n                iVar11 = iVar11 + 1;\n            }\n            pcVar17 = pcVar17 + 1;\n            *(arg1 + 0x100) = iVar11;\n            arg1[iVar12] = cVar23;\n            arg1[0x108] = cVar23;\n        } while (pcVar17 != \"\");\n        ppppppppcVar9 = fcn.004095c0(arg1, arg2_00, arg3[1]);\n        break;\n    case 0x406040:\n        iVar11 = *(arg1 + 0x100);\n        pcVar17 = \"reference temporary #\";\n        do {\n            cVar23 = *pcVar17;\n            if (iVar11 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar12 = 0;\n                iVar11 = 1;\n            }\n            else {\n                iVar12 = iVar11;\n                iVar11 = iVar11 + 1;\n            }\n            pcVar17 = pcVar17 + 1;\n            *(arg1 + 0x100) = iVar11;\n            arg1[iVar12] = cVar23;\n            arg1[0x108] = cVar23;\n        } while (pcVar17 != \"\");\n        pcVar17 = \" for \";\n        fcn.004095c0(arg1, arg2_00, arg3[2]);\n        iVar11 = *(arg1 + 0x100);\n        do {\n            cVar23 = *pcVar17;\n            if (iVar11 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar12 = 0;\n                iVar11 = 1;\n            }\n            else {\n                iVar12 = iVar11;\n                iVar11 = iVar11 + 1;\n            }\n            pcVar17 = pcVar17 + 1;\n            *(arg1 + 0x100) = iVar11;\n            arg1[iVar12] = cVar23;\n            arg1[0x108] = cVar23;\n        } while (pcVar17 != \"\");\n        ppppppppcVar9 = fcn.004095c0(arg1, arg2_00, arg3[1]);\n        break;\n    case 0x4060c0:\n        iVar11 = *(arg1 + 0x100);\n        pcVar17 = \"TLS init function for \";\n        do {\n            cVar23 = *pcVar17;\n            if (iVar11 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar12 = 0;\n                iVar11 = 1;\n            }\n            else {\n                iVar12 = iVar11;\n                iVar11 = iVar11 + 1;\n            }\n            pcVar17 = pcVar17 + 1;\n            *(arg1 + 0x100) = iVar11;\n            arg1[iVar12] = cVar23;\n            arg1[0x108] = cVar23;\n        } while (pcVar17 != \"\");\n        ppppppppcVar9 = fcn.004095c0(arg1, arg2_00, arg3[1]);\n        break;\n    case 0x406140:\n        iVar11 = *(arg1 + 0x100);\n        pcVar17 = \"guard variable for \";\n        do {\n            cVar23 = *pcVar17;\n            if (iVar11 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar12 = 0;\n                iVar11 = 1;\n            }\n            else {\n                iVar12 = iVar11;\n                iVar11 = iVar11 + 1;\n            }\n            pcVar17 = pcVar17 + 1;\n            *(arg1 + 0x100) = iVar11;\n            arg1[iVar12] = cVar23;\n            arg1[0x108] = cVar23;\n        } while (pcVar17 != \"\");\n        ppppppppcVar9 = fcn.004095c0(arg1, arg2_00, arg3[1]);\n        break;\n    case 0x4061c0:\n        iVar11 = *(arg1 + 0x100);\n        pcVar17 = \"covariant return thunk to \";\n        do {\n            cVar23 = *pcVar17;\n            if (iVar11 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar12 = 0;\n                iVar11 = 1;\n            }\n            else {\n                iVar12 = iVar11;\n                iVar11 = iVar11 + 1;\n            }\n            pcVar17 = pcVar17 + 1;\n            *(arg1 + 0x100) = iVar11;\n            arg1[iVar12] = cVar23;\n            arg1[0x108] = cVar23;\n        } while (pcVar17 != \"\");\n        ppppppppcVar9 = fcn.004095c0(arg1, arg2_00, arg3[1]);\n        break;\n    case 0x406240:\n        iVar11 = *(arg1 + 0x100);\n        pcVar17 = \"java Class for \";\n        do {\n            cVar23 = *pcVar17;\n            if (iVar11 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar12 = 0;\n                iVar11 = 1;\n            }\n            else {\n                iVar12 = iVar11;\n                iVar11 = iVar11 + 1;\n            }\n            pcVar17 = pcVar17 + 1;\n            *(arg1 + 0x100) = iVar11;\n            arg1[iVar12] = cVar23;\n            arg1[0x108] = cVar23;\n        } while (pcVar17 != \"\");\n        ppppppppcVar9 = fcn.004095c0(arg1, arg2_00, arg3[1]);\n        break;\n    case 0x4062c0:\n        iVar11 = *(arg1 + 0x100);\n        pcVar17 = \"virtual thunk to \";\n        do {\n            cVar23 = *pcVar17;\n            if (iVar11 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar12 = 0;\n                iVar11 = 1;\n            }\n            else {\n                iVar12 = iVar11;\n                iVar11 = iVar11 + 1;\n            }\n            pcVar17 = pcVar17 + 1;\n            *(arg1 + 0x100) = iVar11;\n            arg1[iVar12] = cVar23;\n            arg1[0x108] = cVar23;\n        } while (pcVar17 != \"\");\n        ppppppppcVar9 = fcn.004095c0(arg1, arg2_00, arg3[1]);\n        break;\n    case 0x406340:\n        iVar11 = *(arg1 + 0x100);\n        pcVar17 = \"non-virtual thunk to \";\n        do {\n            cVar23 = *pcVar17;\n            if (iVar11 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar12 = 0;\n                iVar11 = 1;\n            }\n            else {\n                iVar12 = iVar11;\n                iVar11 = iVar11 + 1;\n            }\n            pcVar17 = pcVar17 + 1;\n            *(arg1 + 0x100) = iVar11;\n            arg1[iVar12] = cVar23;\n            arg1[0x108] = cVar23;\n        } while (pcVar17 != \"\");\n        ppppppppcVar9 = fcn.004095c0(arg1, arg2_00, arg3[1]);\n        break;\n    case 0x4063c0:\n        iVar11 = *(arg1 + 0x100);\n        pcVar17 = \"typeinfo name for \";\n        do {\n            cVar23 = *pcVar17;\n            if (iVar11 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar12 = 0;\n                iVar11 = 1;\n            }\n            else {\n                iVar12 = iVar11;\n                iVar11 = iVar11 + 1;\n            }\n            pcVar17 = pcVar17 + 1;\n            *(arg1 + 0x100) = iVar11;\n            arg1[iVar12] = cVar23;\n            arg1[0x108] = cVar23;\n        } while (pcVar17 != \"\");\n        ppppppppcVar9 = fcn.004095c0(arg1, arg2_00, arg3[1]);\n        break;\n    case 0x406440:\n        iVar11 = *(arg1 + 0x100);\n        pcVar17 = \"typeinfo fn for \";\n        do {\n            cVar23 = *pcVar17;\n            if (iVar11 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar12 = 0;\n                iVar11 = 1;\n            }\n            else {\n                iVar12 = iVar11;\n                iVar11 = iVar11 + 1;\n            }\n            pcVar17 = pcVar17 + 1;\n            *(arg1 + 0x100) = iVar11;\n            arg1[iVar12] = cVar23;\n            arg1[0x108] = cVar23;\n        } while (pcVar17 != \"\");\n        ppppppppcVar9 = fcn.004095c0(arg1, arg2_00, arg3[1]);\n        break;\n    case 0x4064c0:\n        iVar11 = *(arg1 + 0x100);\n        pcVar17 = \"typeinfo for \";\n        do {\n            cVar23 = *pcVar17;\n            if (iVar11 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar12 = 0;\n                iVar11 = 1;\n            }\n            else {\n                iVar12 = iVar11;\n                iVar11 = iVar11 + 1;\n            }\n            pcVar17 = pcVar17 + 1;\n            *(arg1 + 0x100) = iVar11;\n            arg1[iVar12] = cVar23;\n            arg1[0x108] = cVar23;\n        } while (pcVar17 != \"\");\n        ppppppppcVar9 = fcn.004095c0(arg1, arg2_00, arg3[1]);\n        break;\n    case 0x406540:\n        iVar11 = *(arg1 + 0x100);\n        pcVar17 = \"construction vtable for \";\n        do {\n            cVar23 = *pcVar17;\n            if (iVar11 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar12 = 0;\n                iVar11 = 1;\n            }\n            else {\n                iVar12 = iVar11;\n                iVar11 = iVar11 + 1;\n            }\n            pcVar17 = pcVar17 + 1;\n            *(arg1 + 0x100) = iVar11;\n            arg1[iVar12] = cVar23;\n            arg1[0x108] = cVar23;\n        } while (pcVar17 != \"\");\n        pcVar17 = \"-in-\";\n        fcn.004095c0(arg1, arg2_00, arg3[1]);\n        iVar11 = *(arg1 + 0x100);\n        do {\n            cVar23 = *pcVar17;\n            if (iVar11 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar12 = 0;\n                iVar11 = 1;\n            }\n            else {\n                iVar12 = iVar11;\n                iVar11 = iVar11 + 1;\n            }\n            pcVar17 = pcVar17 + 1;\n            *(arg1 + 0x100) = iVar11;\n            arg1[iVar12] = cVar23;\n            arg1[0x108] = cVar23;\n        } while (pcVar17 != \"\");\n        ppppppppcVar9 = fcn.004095c0(arg1, arg2_00, arg3[2]);\n        break;\n    case 0x4065c0:\n        iVar11 = *(arg1 + 0x100);\n        pcVar17 = \"vtable for \";\n        do {\n            cVar23 = *pcVar17;\n            if (iVar11 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar12 = 0;\n                iVar11 = 1;\n            }\n            else {\n                iVar12 = iVar11;\n                iVar11 = iVar11 + 1;\n            }\n            pcVar17 = pcVar17 + 1;\n            *(arg1 + 0x100) = iVar11;\n            arg1[iVar12] = cVar23;\n            arg1[0x108] = cVar23;\n        } while (pcVar17 != \"\");\n        ppppppppcVar9 = fcn.004095c0(arg1, arg2_00, arg3[1]);\n        break;\n    case 0x406640:\n        iVar11 = *(arg1 + 0x100);\n        pcVar17 = \"VTT for \";\n        do {\n            cVar23 = *pcVar17;\n            if (iVar11 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar12 = 0;\n                iVar11 = 1;\n            }\n            else {\n                iVar12 = iVar11;\n                iVar11 = iVar11 + 1;\n            }\n            pcVar17 = pcVar17 + 1;\n            *(arg1 + 0x100) = iVar11;\n            arg1[iVar12] = cVar23;\n            arg1[0x108] = cVar23;\n        } while (pcVar17 != \"\");\n        ppppppppcVar9 = fcn.004095c0(arg1, arg2_00, arg3[1]);\n        break;\n    case 0x4066c0:\n        iVar11 = *(arg1 + 0x100);\n        if (iVar11 == 0xff) {\n            arg1[0xff] = 0;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n            iVar12 = 1;\n            iVar11 = 0;\n        }\n        else {\n            iVar12 = iVar11 + 1;\n        }\n        *(arg1 + 0x100) = iVar12;\n        arg1[iVar11] = 0x7e;\n        arg1[0x108] = 0x7e;\n        ppppppppcVar9 = fcn.004095c0(arg1, arg2_00, arg3[2]);\n        break;\n    case 0x406700:\n        ppppppppcVar9 = fcn.004095c0(arg1, arg2_00, arg3[2]);\n        break;\n    case 0x406713:\n        uVar4 = *(arg1 + 0x128);\n        *(arg1 + 0x128) = 0;\n        pppppppcVar22 = arg3[1];\n        if (pppppppcVar22 == NULL) {\ncode_r0x00408f7e:\n            *(arg1 + 0x130) = 1;\n        }\n        else {\n            ppppppppcVar15 = *(arg1 + 0x120);\n            uVar6 = 0;\n            ppppppppcVar9 = appppppppcStack200;\n            ppppppppcVar8 = NULL;\n            do {\n                ppppppppcVar13 = ppppppppcVar9;\n                *ppppppppcVar13 = ppppppppcVar8;\n                iVar26 = *pppppppcVar22;\n                uVar6 = uVar6 + 1;\n                *(arg1 + 0x128) = ppppppppcVar13;\n                ppppppppcVar13[1] = pppppppcVar22;\n                *(ppppppppcVar13 + 2) = 0;\n                ppppppppcVar13[3] = ppppppppcVar15;\n                if (4 < iVar26 - 0x1cU) {\n                    if (iVar26 == 4) {\n                        *(arg1 + 0x120) = &ppppppppcStack216;\n                        ppppppppcStack216 = ppppppppcVar15;\n                        pppppppcStack208 = pppppppcVar22;\n                    }\n                    else if (iVar26 == 2) {\n                        pppppppcVar16 = pppppppcVar22[2];\n                        iVar26 = *pppppppcVar16;\n                        if (iVar26 != 0x45) goto code_r0x00406804;\n                        while( true ) {\n                            pppppppcVar16 = pppppppcVar16[1];\n                            iVar26 = *pppppppcVar16;\ncode_r0x00406804:\n                            if (4 < iVar26 - 0x1cU) break;\n                            if (uVar6 == 4) {\n                                *(arg1 + 0x130) = 1;\n                                return iVar26 - 0x1cU;\n                            }\n                            uVar7 = uVar6 - 1;\n                            uVar10 = uVar6;\n                            uVar6 = uVar6 + 1;\n                            appppppppcStack200[uVar10 * 4] = appppppppcStack200[uVar7 * 4];\n                            appppppppcStack200[uVar10 * 4 + 1] = appppppppcStack200[uVar7 * 4 + 1];\n                            (&piStack184)[uVar10 * 4] = (&piStack184)[uVar7 * 4];\n                            (&piStack184)[uVar10 * 4 + 1] = (&piStack184)[uVar7 * 4 + 1];\n                            appppppppcStack200[uVar10 * 4] = appppppppcStack200 + uVar7 * 4;\n                            appppppppcStack200[uVar7 * 4 + 1] = pppppppcVar16;\n                            *(arg1 + 0x128) = appppppppcStack200 + uVar10 * 4;\n                            *(&piStack184 + uVar7 * 4) = 0;\n                            (&piStack184)[uVar7 * 4 + 1] = ppppppppcVar15;\n                        }\n                    }\n                    ppppppppcVar9 = fcn.004095c0(arg1, arg2_00, arg3[2]);\n                    if (*pppppppcVar22 == 4) {\n                        *(arg1 + 0x120) = ppppppppcStack216;\n                        ppppppppcVar9 = ppppppppcStack216;\n                    }\n                    while (uVar6 != 0) {\n                        uVar6 = uVar6 - 1;\n                        uVar7 = uVar6;\n                        ppppppppcVar9 = uVar7 * 0x20;\n                        if (*(&piStack184 + uVar7 * 4) == 0) {\n                            iVar11 = *(arg1 + 0x100);\n                            if (iVar11 == 0xff) {\n                                arg1[0xff] = 0;\n                                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                                iVar11 = 0;\n                            }\n                            pppppppcVar22 = appppppppcStack200[uVar7 * 4 + 1];\n                            *(arg1 + 0x100) = iVar11 + 1;\n                            arg1[iVar11] = 0x20;\n                            arg1[0x108] = 0x20;\n                            ppppppppcVar9 = fcn.004095f0(arg1, arg2_00, pppppppcVar22);\n                        }\n                    }\n                    *(arg1 + 0x128) = uVar4;\n                    return ppppppppcVar9;\n                }\n                pppppppcVar22 = pppppppcVar22[1];\n                ppppppppcVar9 = ppppppppcVar13;\n                if (pppppppcVar22 == NULL) goto code_r0x00408f7e;\n                ppppppppcVar9 = ppppppppcVar13 + 4;\n                ppppppppcVar8 = ppppppppcVar13;\n            } while (uVar6 != 4);\n            *(arg1 + 0x130) = 1;\n        }\n        break;\n    case 0x406882:\n        fcn.004095c0(arg1, arg2_00, arg3[1]);\n        iVar11 = *(arg1 + 0x100);\n        if ((arg2 & 4) == 0) {\n            puVar18 = 0x481af4;\n            do {\n                uVar28 = *puVar18;\n                if (iVar11 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar12 = 0;\n                    iVar11 = 1;\n                }\n                else {\n                    iVar12 = iVar11;\n                    iVar11 = iVar11 + 1;\n                }\n                puVar18 = puVar18 + 1;\n                *(arg1 + 0x100) = iVar11;\n                arg1[iVar12] = uVar28;\n                arg1[0x108] = uVar28;\n            } while (puVar18 != 0x481af6);\n        }\n        else {\n            if (iVar11 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar12 = 1;\n                iVar11 = 0;\n            }\n            else {\n                iVar12 = iVar11 + 1;\n            }\n            *(arg1 + 0x100) = iVar12;\n            arg1[iVar11] = 0x2e;\n            arg1[0x108] = 0x2e;\n        }\n        pppppppcVar22 = arg3[2];\n        if (*pppppppcVar22 == 0x45) {\n            iVar11 = *(arg1 + 0x100);\n            pcVar17 = \"{default arg#\";\n            do {\n                cVar23 = *pcVar17;\n                if (iVar11 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar12 = 0;\n                    iVar11 = 1;\n                }\n                else {\n                    iVar12 = iVar11;\n                    iVar11 = iVar11 + 1;\n                }\n                pcVar17 = pcVar17 + 1;\n                *(arg1 + 0x100) = iVar11;\n                arg1[iVar12] = cVar23;\n                arg1[0x108] = cVar23;\n            } while (pcVar17 != \"\");\n            ppppppppcVar9 = appppppppcStack200;\n            sub.msvcrt.dll_sprintf(ppppppppcVar9, 0x481b05, *(pppppppcVar22 + 2) + 1);\n            ppppppppcVar15 = ppppppppcVar9;\n            do {\n                ppppppppcVar8 = ppppppppcVar15;\n                uVar5 = *ppppppppcVar8 + 0xfefefeff & ~*ppppppppcVar8;\n                uVar6 = uVar5 & 0x80808080;\n                ppppppppcVar15 = ppppppppcVar8 + 4;\n            } while (uVar6 == 0);\n            bVar29 = (uVar5 & 0x8080) == 0;\n            if (bVar29) {\n                uVar6 = uVar6 >> 0x10;\n            }\n            if (bVar29) {\n                ppppppppcVar15 = ppppppppcVar8 + 6;\n            }\n            puVar18 = ppppppppcVar15 + ((-3 - CARRY1(uVar6, uVar6)) - ppppppppcVar9);\n            if (puVar18 == NULL) {\n                iVar11 = *(arg1 + 0x100);\n            }\n            else {\n                ppppppppcVar15 = puVar18 + ppppppppcVar9;\n                iVar12 = *(arg1 + 0x100);\n                do {\n                    uVar28 = *ppppppppcVar9;\n                    if (iVar12 == 0xff) {\n                        arg1[0xff] = 0;\n                        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                        *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                        iVar11 = 1;\n                        iVar12 = 0;\n                    }\n                    else {\n                        iVar11 = iVar12 + 1;\n                    }\n                    ppppppppcVar9 = ppppppppcVar9 + 1;\n                    *(arg1 + 0x100) = iVar11;\n                    arg1[iVar12] = uVar28;\n                    arg1[0x108] = uVar28;\n                    iVar12 = iVar11;\n                } while (ppppppppcVar9 != ppppppppcVar15);\n            }\n            puVar18 = 0x481b09;\n            do {\n                uVar28 = *puVar18;\n                if (iVar11 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar12 = 0;\n                    iVar11 = 1;\n                }\n                else {\n                    iVar12 = iVar11;\n                    iVar11 = iVar11 + 1;\n                }\n                puVar18 = puVar18 + 1;\n                *(arg1 + 0x100) = iVar11;\n                arg1[iVar12] = uVar28;\n                arg1[0x108] = uVar28;\n            } while (puVar18 != 0x481b0c);\n            pppppppcVar22 = pppppppcVar22[1];\n        }\n        ppppppppcVar9 = fcn.004095c0(arg1, arg2_00, pppppppcVar22);\n        break;\n    case 0x406910:\n        if ((arg2 & 4) == 0) {\n            uVar6 = *(arg3 + 2);\n            pppppppcVar22 = arg3[1];\n            if (uVar6 != 0) {\n                ppppppppcVar15 = *(arg1 + 0x100);\n                iVar11 = 1;\n                do {\n                    uVar28 = *(pppppppcVar22 + iVar11 + -1);\n                    if (ppppppppcVar15 == 0xff) {\n                        arg1[0xff] = 0;\n                        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                        *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                        ppppppppcVar9 = NULL;\n                        ppppppppcVar15 = 0x1;\n                    }\n                    else {\n                        ppppppppcVar9 = ppppppppcVar15;\n                        ppppppppcVar15 = ppppppppcVar15 + 1;\n                    }\n                    iVar11 = iVar11 + 1;\n                    *(arg1 + 0x100) = ppppppppcVar15;\n                    arg1[ppppppppcVar9] = uVar28;\n                    arg1[0x108] = uVar28;\n                } while (iVar11 != uVar6 + 1);\n            }\n        }\n        else {\n            pppppppcVar22 = arg3[1];\n            pppppppcVar16 = pppppppcVar22 + *(arg3 + 2);\n            while (pppppppcVar22 < pppppppcVar16) {\n                cVar23 = *pppppppcVar22;\n                if (((3 < pppppppcVar16 - pppppppcVar22) && (cVar23 == '_')) &&\n                   ((*(pppppppcVar22 + 1) == '_' &&\n                    ((*(pppppppcVar22 + 2) == 'U' && (pppppppcVar27 = pppppppcVar22 + 3,  pppppppcVar27 < pppppppcVar16)\n                     ))))) {\n                    uVar6 = 0;\n                    do {\n                        cVar2 = *pppppppcVar27;\n                        iVar26 = cVar2;\n                        if (cVar2 - 0x30U < 10) {\n                            iVar26 = iVar26 + -0x30;\n                        }\n                        else if (cVar2 + 0xbfU < 6) {\n                            iVar26 = iVar26 + -0x37;\n                        }\n                        else {\n                            if (5 < cVar2 + 0x9fU) {\n                                cVar23 = '_';\n                                if (((pppppppcVar16 <= pppppppcVar27) || (cVar2 != '_')) ||\n                                   (cVar23 = cVar2,  0xff < uVar6)) goto code_r0x00408830;\n                                if (*(arg1 + 0x100) == 0xff) {\n                                    arg1[0xff] = 0;\n                                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                                    *(arg1 + 0x100) = 0;\n                                }\n                                ppppppppcVar9 = *(arg1 + 0x100);\n                                *(arg1 + 0x100) = ppppppppcVar9 + 1;\n                                arg1[ppppppppcVar9] = uVar6;\n                                arg1[0x108] = uVar6;\n                                goto code_r0x00408859;\n                            }\n                            iVar26 = iVar26 + -0x57;\n                        }\n                        pppppppcVar27 = pppppppcVar27 + 1;\n                        uVar6 = uVar6 * 0x10 + iVar26;\n                    } while (pppppppcVar27 != pppppppcVar16);\n                    cVar23 = '_';\n                }\ncode_r0x00408830:\n                ppppppppcVar9 = *(arg1 + 0x100);\n                if (ppppppppcVar9 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar11 = 1;\n                    ppppppppcVar9 = NULL;\n                }\n                else {\n                    iVar11 = ppppppppcVar9 + 1;\n                }\n                *(arg1 + 0x100) = iVar11;\n                arg1[ppppppppcVar9] = cVar23;\n                arg1[0x108] = cVar23;\n                pppppppcVar27 = pppppppcVar22;\ncode_r0x00408859:\n                pppppppcVar22 = pppppppcVar27 + 1;\n            }\n        }\n        break;\n    case 0x4069a0:\n        pcVar17 = \" [clone \";\n        fcn.004095c0(arg1, arg2_00, arg3[1]);\n        iVar11 = *(arg1 + 0x100);\n        do {\n            cVar23 = *pcVar17;\n            if (iVar11 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar12 = 0;\n                iVar11 = 1;\n            }\n            else {\n                iVar12 = iVar11;\n                iVar11 = iVar11 + 1;\n            }\n            pcVar17 = pcVar17 + 1;\n            *(arg1 + 0x100) = iVar11;\n            arg1[iVar12] = cVar23;\n            arg1[0x108] = cVar23;\n        } while (pcVar17 != \"\");\n        fcn.004095c0(arg1, arg2_00, arg3[2]);\n        ppppppppcVar9 = *(arg1 + 0x100);\n        if (ppppppppcVar9 == 0xff) {\n            arg1[0xff] = 0;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n            iVar11 = 1;\n            ppppppppcVar9 = NULL;\n        }\n        else {\n            iVar11 = ppppppppcVar9 + 1;\n        }\n        *(arg1 + 0x100) = iVar11;\n        arg1[ppppppppcVar9] = 0x5d;\n        arg1[0x108] = 0x5d;\n        break;\n    case 0x406a22:\n        pcVar17 = \"[abi:\";\n        fcn.004095c0(arg1, arg2_00, arg3[1]);\n        iVar11 = *(arg1 + 0x100);\n        do {\n            cVar23 = *pcVar17;\n            if (iVar11 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar12 = 0;\n                iVar11 = 1;\n            }\n            else {\n                iVar12 = iVar11;\n                iVar11 = iVar11 + 1;\n            }\n            pcVar17 = pcVar17 + 1;\n            *(arg1 + 0x100) = iVar11;\n            arg1[iVar12] = cVar23;\n            arg1[0x108] = cVar23;\n        } while (pcVar17 != \"\");\n        fcn.004095c0(arg1, arg2_00, arg3[2]);\n        ppppppppcVar9 = *(arg1 + 0x100);\n        if (ppppppppcVar9 == 0xff) {\n            arg1[0xff] = 0;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n            iVar11 = 1;\n            ppppppppcVar9 = NULL;\n        }\n        else {\n            iVar11 = ppppppppcVar9 + 1;\n        }\n        *(arg1 + 0x100) = iVar11;\n        arg1[ppppppppcVar9] = 0x5d;\n        arg1[0x108] = 0x5d;\n        break;\n    case 0x406ab0:\n        ppppppppcVar9 = fcn.004036b0(arg1, arg3 + 1);\n        if (ppppppppcVar9 != NULL) {\n            if (*ppppppppcVar9 != 0x2f) {\ncode_r0x00406ace:\n                puVar3 = *(arg1 + 0x120);\n                *(arg1 + 0x120) = *puVar3;\n                ppppppppcVar9 = fcn.004095c0(arg1, arg2_00, ppppppppcVar9);\n                *(arg1 + 0x120) = puVar3;\n                return ppppppppcVar9;\n            }\n            iVar26 = *(arg1 + 0x134);\n            while (0 < iVar26) {\n                ppppppppcVar9 = ppppppppcVar9[2];\n                iVar26 = iVar26 + -1;\n                if ((ppppppppcVar9 == NULL) || (*ppppppppcVar9 != 0x2f)) goto code_r0x0040859a;\n            }\n            if ((iVar26 == 0) && (ppppppppcVar9 = ppppppppcVar9[1],  ppppppppcVar9 != NULL)) goto code_r0x00406ace;\n        }\ncode_r0x0040859a:\n        *(arg1 + 0x130) = 1;\n        break;\n    case 0x406b00:\n        uVar4 = *(arg1 + 0x128);\n        *(arg1 + 0x128) = 0;\n        pppppppcVar22 = arg3[1];\n        if ((((arg2 & 4) == 0) || (*pppppppcVar22 != 0)) || (bVar29 = *(pppppppcVar22 + 2) == 6,  !bVar29)) {\ncode_r0x00406b2f:\n            fcn.004095c0(arg1, arg2_00, pppppppcVar22);\n            if (arg1[0x108] == '<') {\n                iVar11 = *(arg1 + 0x100);\n                if (iVar11 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar11 = 0;\n                }\n                iVar12 = iVar11 + 1;\n                *(arg1 + 0x100) = iVar12;\n                arg1[iVar11] = 0x20;\n                arg1[0x108] = 0x20;\n            }\n            else {\n                iVar12 = *(arg1 + 0x100);\n            }\n            if (iVar12 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar11 = 1;\n                iVar12 = 0;\n            }\n            else {\n                iVar11 = iVar12 + 1;\n            }\n            *(arg1 + 0x100) = iVar11;\n            arg1[iVar12] = 0x3c;\n            arg1[0x108] = 0x3c;\n            fcn.004095c0(arg1, arg2_00, arg3[2]);\n            if (arg1[0x108] == '>') {\n                iVar11 = *(arg1 + 0x100);\n                if (iVar11 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar11 = 0;\n                }\n                ppppppppcVar9 = iVar11 + 1;\n                *(arg1 + 0x100) = ppppppppcVar9;\n                arg1[iVar11] = 0x20;\n                arg1[0x108] = 0x20;\n            }\n            else {\n                ppppppppcVar9 = *(arg1 + 0x100);\n            }\n            if (ppppppppcVar9 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar11 = 1;\n                ppppppppcVar9 = NULL;\n            }\n            else {\n                iVar11 = ppppppppcVar9 + 1;\n            }\n            *(arg1 + 0x100) = iVar11;\n            arg1[ppppppppcVar9] = 0x3e;\n            arg1[0x108] = 0x3e;\n        }\n        else {\n            iVar11 = 6;\n            ppppppcVar19 = pppppppcVar22[1];\n            pcVar17 = \"JArray\";\n            do {\n                if (iVar11 == 0) break;\n                iVar11 = iVar11 + -1;\n                bVar29 = *ppppppcVar19 == *pcVar17;\n                ppppppcVar19 = ppppppcVar19 + 1;\n                pcVar17 = pcVar17 + 1;\n            } while (bVar29);\n            if (!bVar29) goto code_r0x00406b2f;\n            fcn.004095c0(arg1, arg2_00, arg3[2]);\n            ppppppppcVar9 = fcn.00405d20(arg1, 0x481b14);\n        }\n        *(arg1 + 0x128) = uVar4;\n        break;\n    case 0x406bc0:\n        uVar6 = *(arg3 + 1);\n        ppppppppcVar15 = *(arg1 + 0x100);\n        if (uVar6 == 0) {\n            pcVar17 = \"this\";\n            do {\n                cVar23 = *pcVar17;\n                if (ppppppppcVar15 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    ppppppppcVar9 = NULL;\n                    ppppppppcVar15 = 0x1;\n                }\n                else {\n                    ppppppppcVar9 = ppppppppcVar15;\n                    ppppppppcVar15 = ppppppppcVar15 + 1;\n                }\n                pcVar17 = pcVar17 + 1;\n                *(arg1 + 0x100) = ppppppppcVar15;\n                arg1[ppppppppcVar9] = cVar23;\n                arg1[0x108] = cVar23;\n            } while (pcVar17 != \"\");\n        }\n        else {\n            pcVar17 = \"{parm#\";\n            do {\n                cVar23 = *pcVar17;\n                if (ppppppppcVar15 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    ppppppppcVar9 = NULL;\n                    ppppppppcVar15 = 0x1;\n                }\n                else {\n                    ppppppppcVar9 = ppppppppcVar15;\n                    ppppppppcVar15 = ppppppppcVar15 + 1;\n                }\n                pcVar17 = pcVar17 + 1;\n                *(arg1 + 0x100) = ppppppppcVar15;\n                arg1[ppppppppcVar9] = cVar23;\n                arg1[0x108] = cVar23;\n            } while (pcVar17 != \"\");\n            ppppppppcVar9 = appppppppcStack200;\n            sub.msvcrt.dll_sprintf(ppppppppcVar9, 0x481b05, uVar6);\n            ppppppppcVar15 = ppppppppcVar9;\n            do {\n                ppppppppcVar8 = ppppppppcVar15;\n                uVar5 = *ppppppppcVar8 + 0xfefefeff & ~*ppppppppcVar8;\n                uVar6 = uVar5 & 0x80808080;\n                ppppppppcVar15 = ppppppppcVar8 + 4;\n            } while (uVar6 == 0);\n            bVar29 = (uVar5 & 0x8080) == 0;\n            if (bVar29) {\n                uVar6 = uVar6 >> 0x10;\n            }\n            if (bVar29) {\n                ppppppppcVar15 = ppppppppcVar8 + 6;\n            }\n            puVar18 = ppppppppcVar15 + ((-3 - CARRY1(uVar6, uVar6)) - ppppppppcVar9);\n            if (puVar18 == NULL) {\n                iVar11 = *(arg1 + 0x100);\n            }\n            else {\n                iVar11 = *(arg1 + 0x100);\n                ppppppppcVar15 = puVar18 + ppppppppcVar9;\n                do {\n                    uVar28 = *ppppppppcVar9;\n                    if (iVar11 == 0xff) {\n                        arg1[0xff] = 0;\n                        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                        *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                        iVar12 = 0;\n                        iVar11 = 1;\n                    }\n                    else {\n                        iVar12 = iVar11;\n                        iVar11 = iVar11 + 1;\n                    }\n                    ppppppppcVar9 = ppppppppcVar9 + 1;\n                    *(arg1 + 0x100) = iVar11;\n                    arg1[iVar12] = uVar28;\n                    arg1[0x108] = uVar28;\n                } while (ppppppppcVar9 != ppppppppcVar15);\n            }\n            if (iVar11 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                ppppppppcVar9 = 0x1;\n                iVar11 = 0;\n            }\n            else {\n                ppppppppcVar9 = iVar11 + 1;\n            }\n            *(arg1 + 0x100) = ppppppppcVar9;\n            arg1[iVar11] = 0x7d;\n            arg1[0x108] = 0x7d;\n        }\n        break;\n    case 0x406c41:\n        *(arg1 + 0x130) = 1;\n        break;\n    case 0x406c50:\n        ppppppppcVar9 = arg3[2];\n        if (*ppppppppcVar9 == 0x37) {\n            pppppppcVar22 = arg3[1];\n            ppppppcVar19 = pppppppcVar22[1];\n            pppppcVar21 = *ppppppcVar19;\n            if ((*(pppppcVar21 + 1) == 99) && ((*pppppcVar21 + 0x9d < 2 || (*pppppcVar21 + 0x8e < 2)))) {\n                fcn.0040a990(arg1, arg2_00, pppppppcVar22);\n                fcn.00403320(arg1, 0x3c);\n                fcn.004095c0(arg1, arg2_00, arg3[2][1]);\n                fcn.00405d20(arg1, 0x481d4e);\n                fcn.004095c0(arg1, arg2_00, arg3[2][2]);\n                ppppppppcVar9 = fcn.00403320(arg1, 0x29);\n                return ppppppppcVar9;\n            }\n            uVar28 = *pppppppcVar22 < 0x31;\n            uVar30 = *pppppppcVar22 == 0x31;\n            if (uVar30) {\n                uVar28 = *(ppppppcVar19 + 2) == 0;\n                uVar30 = *(ppppppcVar19 + 2) == 1;\n                if (uVar30) {\n                    uVar28 = *ppppppcVar19[1] < 0x3e;\n                    uVar30 = *ppppppcVar19[1] == 0x3e;\n                    if (uVar30) {\n                        fcn.00403320(arg1, 0x28);\n                        pppppcVar21 = *arg3[1][1];\n                        ppppppppcVar9 = arg3[2];\n                    }\n                }\n            }\n            iVar11 = 3;\n            pppppppcVar22 = ppppppppcVar9[1];\n            puVar25 = 0x481ae2;\n            do {\n                if (iVar11 == 0) break;\n                iVar11 = iVar11 + -1;\n                uVar28 = *pppppcVar21 < *puVar25;\n                uVar30 = *pppppcVar21 == *puVar25;\n                pppppcVar21 = pppppcVar21 + 1;\n                puVar25 = puVar25 + 1;\n            } while (uVar30);\n            uVar28 = (!uVar28 && !uVar30) == uVar28;\n            if ((uVar28) && (uVar28 = *pppppppcVar22 == 3,  uVar28)) {\n                uVar28 = *pppppppcVar22[2] == 0x29;\n                if (!uVar28) {\n                    *(arg1 + 0x130) = 1;\n                }\n                fcn.0040aa50(arg1, arg2_00, pppppppcVar22[1]);\n            }\n            else {\n                fcn.0040aa50(arg1, arg2_00, pppppppcVar22);\n            }\n            iVar11 = 3;\n            pppppcVar21 = *arg3[1][1];\n            pppppcVar20 = pppppcVar21;\n            pcVar17 = 0x481ca4;\n            do {\n                if (iVar11 == 0) break;\n                iVar11 = iVar11 + -1;\n                uVar28 = *pppppcVar20 == *pcVar17;\n                pppppcVar20 = pppppcVar20 + 1;\n                pcVar17 = pcVar17 + 1;\n            } while (uVar28);\n            if (uVar28) {\n                fcn.00403320(arg1, 0x5b);\n                fcn.004095c0(arg1, arg2_00, arg3[2][2]);\n                fcn.00403320(arg1, 0x5d);\n            }\n            else {\n                iVar11 = 3;\n                pcVar17 = 0x481ae2;\n                do {\n                    if (iVar11 == 0) break;\n                    iVar11 = iVar11 + -1;\n                    uVar28 = *pppppcVar21 == *pcVar17;\n                    pppppcVar21 = pppppcVar21 + 1;\n                    pcVar17 = pcVar17 + 1;\n                } while (uVar28);\n                if (!uVar28) {\n                    fcn.0040a990(arg1, arg2_00, arg3[1]);\n                }\n                fcn.0040aa50(arg1, arg2_00, arg3[2][2]);\n            }\n            ppppppppcVar9 = arg3[1];\n            if (*ppppppppcVar9 != 0x31) {\n                return ppppppppcVar9;\n            }\n            ppppppppcVar9 = ppppppppcVar9[1];\n            if (*(ppppppppcVar9 + 2) != 1) {\n                return ppppppppcVar9;\n            }\n            if (*ppppppppcVar9[1] != '>') {\n                return ppppppppcVar9[1];\n            }\n            ppppppppcVar9 = fcn.00403320(arg1, 0x29);\n            return ppppppppcVar9;\n        }\n        goto code_r0x00406c5d;\n    case 0x406c70:\n        pppppppcVar22 = arg3[1];\n        pppppppcVar16 = arg3[2];\n        bVar29 = *pppppppcVar22 == 0x31;\n        if (bVar29) {\n            iVar11 = 3;\n            pppppcVar21 = *pppppppcVar22[1];\n            pppppcVar20 = pppppcVar21;\n            pcVar17 = 0x481c9e;\n            do {\n                if (iVar11 == 0) break;\n                iVar11 = iVar11 + -1;\n                bVar29 = *pppppcVar20 == *pcVar17;\n                pppppcVar20 = pppppcVar20 + 1;\n                pcVar17 = pcVar17 + 1;\n            } while (bVar29);\n            if ((bVar29) && (*pppppppcVar16 == 3)) {\n                if ((*pppppppcVar16[1] == 1) && (*pppppppcVar16[2] == 0x29)) {\n                    pppppppcVar16 = pppppppcVar16[1];\n                }\n            }\n            else if (*pppppppcVar16 == 0x37) {\n                fcn.0040aa50(arg1, arg2_00, pppppppcVar16[1]);\n                ppppppppcVar9 = fcn.0040a990(arg1, arg2_00, pppppppcVar22);\n                return ppppppppcVar9;\n            }\n            fcn.0040a990(arg1, arg2_00, pppppppcVar22);\n            bVar29 = pppppcVar21 == NULL;\n            if (!bVar29) {\n                iVar11 = 3;\n                pppppcVar20 = pppppcVar21;\n                pcVar17 = 0x481ca1;\n                do {\n                    if (iVar11 == 0) break;\n                    iVar11 = iVar11 + -1;\n                    bVar29 = *pppppcVar20 == *pcVar17;\n                    pppppcVar20 = pppppcVar20 + 1;\n                    pcVar17 = pcVar17 + 1;\n                } while (bVar29);\n                if (bVar29) {\n                    ppppppppcVar9 = fcn.004095c0(arg1, arg2_00, pppppppcVar16);\n                    return ppppppppcVar9;\n                }\n                iVar11 = 3;\n                pcVar17 = 0x481adf;\n                do {\n                    if (iVar11 == 0) break;\n                    iVar11 = iVar11 + -1;\n                    bVar29 = *pppppcVar21 == *pcVar17;\n                    pppppcVar21 = pppppcVar21 + 1;\n                    pcVar17 = pcVar17 + 1;\n                } while (bVar29);\n                if (bVar29) {\n                    iVar11 = *(arg1 + 0x100);\n                    if (iVar11 == 0xff) {\n                        arg1[0xff] = 0;\n                        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                        *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                        iVar11 = 0;\n                    }\n                    *(arg1 + 0x100) = iVar11 + 1;\n                    arg1[iVar11] = 0x28;\n                    arg1[0x108] = 0x28;\n                    fcn.004095c0(arg1, arg2_00, pppppppcVar16);\n                    ppppppppcVar9 = *(arg1 + 0x100);\n                    if (ppppppppcVar9 == 0xff) {\n                        arg1[0xff] = 0;\n                        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                        *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                        ppppppppcVar9 = NULL;\n                    }\n                    *(arg1 + 0x100) = ppppppppcVar9 + 1;\n                    arg1[ppppppppcVar9] = 0x29;\n                    arg1[0x108] = 0x29;\n                    return ppppppppcVar9;\n                }\n            }\n        }\n        else if (*pppppppcVar22 == 0x33) {\n            iVar11 = *(arg1 + 0x100);\n            if (iVar11 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar12 = 1;\n                iVar11 = 0;\n            }\n            else {\n                iVar12 = iVar11 + 1;\n            }\n            *(arg1 + 0x100) = iVar12;\n            arg1[iVar11] = 0x28;\n            arg1[0x108] = 0x28;\n            fcn.0040a710(arg1, arg2_00, pppppppcVar22 + 1);\n            iVar11 = *(arg1 + 0x100);\n            if (iVar11 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar12 = 1;\n                iVar11 = 0;\n            }\n            else {\n                iVar12 = iVar11 + 1;\n            }\n            *(arg1 + 0x100) = iVar12;\n            arg1[iVar11] = 0x29;\n            arg1[0x108] = 0x29;\n        }\n        else {\n            fcn.0040a990(arg1, arg2_00, pppppppcVar22);\n        }\n        ppppppppcVar9 = fcn.0040aa50(arg1, arg2_00, pppppppcVar16);\n        break;\n    case 0x406cb0:\n        ppppppppcVar9 = fcn.0040a990(arg1, arg2_00, arg3[1]);\n        break;\n    case 0x406cc3:\n        iVar11 = *(arg1 + 0x100);\n        pcVar17 = \"operator \";\n        do {\n            cVar23 = *pcVar17;\n            if (iVar11 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar12 = 0;\n                iVar11 = 1;\n            }\n            else {\n                iVar12 = iVar11;\n                iVar11 = iVar11 + 1;\n            }\n            pcVar17 = pcVar17 + 1;\n            *(arg1 + 0x100) = iVar11;\n            arg1[iVar12] = cVar23;\n            arg1[0x108] = cVar23;\n        } while (pcVar17 != \"\");\n        ppppppppcVar9 = fcn.0040a710(arg1, arg2_00, arg3 + 1);\n        break;\n    case 0x406d40:\n        pppppppcVar22 = arg3[1];\n        iVar11 = *(arg1 + 0x100);\n        pcVar17 = \"operator\";\n        iVar26 = *(pppppppcVar22 + 2);\n        do {\n            cVar23 = *pcVar17;\n            if (iVar11 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar12 = 0;\n                iVar11 = 1;\n            }\n            else {\n                iVar12 = iVar11;\n                iVar11 = iVar11 + 1;\n            }\n            pcVar17 = pcVar17 + 1;\n            *(arg1 + 0x100) = iVar11;\n            arg1[iVar12] = cVar23;\n            arg1[0x108] = cVar23;\n        } while (pcVar17 != \"\");\n        ppppppcVar19 = pppppppcVar22[1];\n        ppppppppcVar9 = *ppppppcVar19 - 0x61;\n        if (*ppppppcVar19 - 0x61 < 0x1a) {\n            if (iVar11 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                ppppppppcVar9 = 0x1;\n                iVar11 = 0;\n            }\n            else {\n                ppppppppcVar9 = iVar11 + 1;\n            }\n            *(arg1 + 0x100) = ppppppppcVar9;\n            arg1[iVar11] = 0x20;\n            arg1[0x108] = 0x20;\n            ppppppcVar19 = pppppppcVar22[1];\n        }\n        iVar11 = iVar26;\n        if (*(ppppppcVar19 + iVar11 + -1) == 0x20) {\n            iVar11 = iVar26 + -1;\n        }\n        if (iVar11 != 0) {\n            ppppppppcVar15 = *(arg1 + 0x100);\n            ppppppcVar14 = ppppppcVar19 + iVar11;\n            do {\n                uVar1 = *ppppppcVar19;\n                if (ppppppppcVar15 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    ppppppppcVar9 = NULL;\n                    ppppppppcVar15 = 0x1;\n                }\n                else {\n                    ppppppppcVar9 = ppppppppcVar15;\n                    ppppppppcVar15 = ppppppppcVar15 + 1;\n                }\n                ppppppcVar19 = ppppppcVar19 + 1;\n                *(arg1 + 0x100) = ppppppppcVar15;\n                arg1[ppppppppcVar9] = uVar1;\n                arg1[0x108] = uVar1;\n            } while (ppppppcVar19 != ppppppcVar14);\n        }\n        break;\n    case 0x406dc0:\n        iVar11 = *(arg1 + 0x100);\n        pcVar17 = \"operator \";\n        do {\n            cVar23 = *pcVar17;\n            if (iVar11 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar12 = 0;\n                iVar11 = 1;\n            }\n            else {\n                iVar12 = iVar11;\n                iVar11 = iVar11 + 1;\n            }\n            pcVar17 = pcVar17 + 1;\n            *(arg1 + 0x100) = iVar11;\n            arg1[iVar12] = cVar23;\n            arg1[0x108] = cVar23;\n        } while (pcVar17 != \"\");\n        ppppppppcVar9 = fcn.004095c0(arg1, arg2_00, arg3[2]);\n        break;\n    case 0x406e40:\n        pppppppcVar22 = arg3[2];\n        if (arg3[1] != NULL) {\n            fcn.004095c0(arg1, arg2_00, arg3[1]);\n        }\n        iVar11 = *(arg1 + 0x100);\n        if (iVar11 == 0xff) {\n            arg1[0xff] = 0;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n            iVar12 = 1;\n            iVar11 = 0;\n        }\n        else {\n            iVar12 = iVar11 + 1;\n        }\n        *(arg1 + 0x100) = iVar12;\n        arg1[iVar11] = 0x7b;\n        arg1[0x108] = 0x7b;\n        fcn.004095c0(arg1, arg2_00, pppppppcVar22);\n        ppppppppcVar9 = *(arg1 + 0x100);\n        if (ppppppppcVar9 == 0xff) {\n            arg1[0xff] = 0;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n            iVar11 = 1;\n            ppppppppcVar9 = NULL;\n        }\n        else {\n            iVar11 = ppppppppcVar9 + 1;\n        }\n        *(arg1 + 0x100) = iVar11;\n        arg1[ppppppppcVar9] = 0x7d;\n        arg1[0x108] = 0x7d;\n        break;\n    case 0x406ec0:\n        if (arg3[1] != NULL) {\n            ppppppppcVar9 = fcn.004095c0(arg1, arg2_00, arg3[1]);\n        }\n        if (arg3[2] != NULL) {\n            uVar7 = *(arg1 + 0x100);\n            if (0xfd < uVar7) {\n                arg1[uVar7] = 0;\n                (**(arg1 + 0x110))(arg1, uVar7, *(arg1 + 0x118));\n                *(arg1 + 0x100) = 0;\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                uVar7 = 0;\n            }\n            puVar18 = 0x481c88;\n            do {\n                uVar28 = *puVar18;\n                if (uVar7 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    uVar10 = 0;\n                    uVar7 = 1;\n                }\n                else {\n                    uVar10 = uVar7;\n                    uVar7 = uVar7 + 1;\n                }\n                puVar18 = puVar18 + 1;\n                *(arg1 + 0x100) = uVar7;\n                arg1[uVar10] = uVar28;\n                arg1[0x108] = uVar28;\n            } while (puVar18 != 0x481c8a);\n            iVar26 = *(arg1 + 0x138);\n            ppppppppcVar9 = fcn.004095c0(arg1, arg2_00, arg3[2]);\n            if ((iVar26 == *(arg1 + 0x138)) && (*(arg1 + 0x100) == uVar7)) {\n                *(arg1 + 0x100) = uVar7 - 2;\n            }\n        }\n        break;\n    case 0x406f61:\n        if (*(arg3 + 0x12) != 0) {\n            iVar11 = *(arg1 + 0x100);\n            pcVar17 = \"_Sat \";\n            do {\n                cVar23 = *pcVar17;\n                if (iVar11 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar12 = 0;\n                    iVar11 = 1;\n                }\n                else {\n                    iVar12 = iVar11;\n                    iVar11 = iVar11 + 1;\n                }\n                pcVar17 = pcVar17 + 1;\n                *(arg1 + 0x100) = iVar11;\n                arg1[iVar12] = cVar23;\n                arg1[0x108] = cVar23;\n            } while (pcVar17 != \"\");\n        }\n        if (arg3[1][1] == 0x482c40) {\n            ppppppppcVar15 = *(arg1 + 0x100);\n        }\n        else {\n            fcn.004095c0(arg1, arg2_00, arg3[1]);\n            iVar11 = *(arg1 + 0x100);\n            if (iVar11 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                ppppppppcVar15 = 0x1;\n                iVar11 = 0;\n            }\n            else {\n                ppppppppcVar15 = iVar11 + 1;\n            }\n            *(arg1 + 0x100) = ppppppppcVar15;\n            arg1[iVar11] = 0x20;\n            arg1[0x108] = 0x20;\n        }\n        if (*(arg3 + 2) == 0) {\n            pcVar17 = \"_Fract\";\n            do {\n                cVar23 = *pcVar17;\n                if (ppppppppcVar15 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    ppppppppcVar9 = NULL;\n                    ppppppppcVar15 = 0x1;\n                }\n                else {\n                    ppppppppcVar9 = ppppppppcVar15;\n                    ppppppppcVar15 = ppppppppcVar15 + 1;\n                }\n                pcVar17 = pcVar17 + 1;\n                *(arg1 + 0x100) = ppppppppcVar15;\n                arg1[ppppppppcVar9] = cVar23;\n                arg1[0x108] = cVar23;\n            } while (pcVar17 != \"\");\n        }\n        else {\n            pcVar17 = \"_Accum\";\n            do {\n                cVar23 = *pcVar17;\n                if (ppppppppcVar15 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    ppppppppcVar9 = NULL;\n                    ppppppppcVar15 = 0x1;\n                }\n                else {\n                    ppppppppcVar9 = ppppppppcVar15;\n                    ppppppppcVar15 = ppppppppcVar15 + 1;\n                }\n                pcVar17 = pcVar17 + 1;\n                *(arg1 + 0x100) = ppppppppcVar15;\n                arg1[ppppppppcVar9] = cVar23;\n                arg1[0x108] = cVar23;\n            } while (pcVar17 != \"\");\n        }\n        break;\n    case 0x407030:\n        iVar11 = *(arg1 + 0x100);\n        pcVar17 = \"decltype (\";\n        do {\n            cVar23 = *pcVar17;\n            if (iVar11 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar12 = 0;\n                iVar11 = 1;\n            }\n            else {\n                iVar12 = iVar11;\n                iVar11 = iVar11 + 1;\n            }\n            pcVar17 = pcVar17 + 1;\n            *(arg1 + 0x100) = iVar11;\n            arg1[iVar12] = cVar23;\n            arg1[0x108] = cVar23;\n        } while (pcVar17 != \"\");\n        fcn.004095c0(arg1, arg2_00, arg3[1]);\n        ppppppppcVar9 = *(arg1 + 0x100);\n        if (ppppppppcVar9 == 0xff) {\n            arg1[0xff] = 0;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n            iVar11 = 1;\n            ppppppppcVar9 = NULL;\n        }\n        else {\n            iVar11 = ppppppppcVar9 + 1;\n        }\n        *(arg1 + 0x100) = iVar11;\n        arg1[ppppppppcVar9] = 0x29;\n        arg1[0x108] = 0x29;\n        break;\n    case 0x4070b0:\n        ppppppppcVar15 = appppppppcStack200;\n        sub.msvcrt.dll_sprintf(ppppppppcVar15, 0x481b05, *(arg3 + 1));\n        ppppppppcVar9 = ppppppppcVar15;\n        do {\n            ppppppppcVar8 = ppppppppcVar9;\n            uVar5 = *ppppppppcVar8 + 0xfefefeff & ~*ppppppppcVar8;\n            uVar6 = uVar5 & 0x80808080;\n            ppppppppcVar9 = ppppppppcVar8 + 4;\n        } while (uVar6 == 0);\n        bVar29 = (uVar5 & 0x8080) == 0;\n        if (bVar29) {\n            uVar6 = uVar6 >> 0x10;\n        }\n        if (bVar29) {\n            ppppppppcVar9 = ppppppppcVar8 + 6;\n        }\n        puVar18 = ppppppppcVar9 + ((-3 - CARRY1(uVar6, uVar6)) - ppppppppcVar15);\n        ppppppppcVar9 = uVar6 & 0xffffff00;\n        if (puVar18 != NULL) {\n            ppppppppcVar8 = *(arg1 + 0x100);\n            ppppppppcVar13 = puVar18 + ppppppppcVar15;\n            do {\n                uVar28 = *ppppppppcVar15;\n                if (ppppppppcVar8 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    ppppppppcVar9 = NULL;\n                    ppppppppcVar8 = 0x1;\n                }\n                else {\n                    ppppppppcVar9 = ppppppppcVar8;\n                    ppppppppcVar8 = ppppppppcVar8 + 1;\n                }\n                ppppppppcVar15 = ppppppppcVar15 + 1;\n                *(arg1 + 0x100) = ppppppppcVar8;\n                arg1[ppppppppcVar9] = uVar28;\n                arg1[0x108] = uVar28;\n            } while (ppppppppcVar15 != ppppppppcVar13);\n        }\n        break;\n    case 0x407170:\n        ppppppppcVar9 = *(arg1 + 0x100);\n        uVar6 = *(arg3 + 1);\n        if (ppppppppcVar9 == 0xff) {\n            arg1[0xff] = 0;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n            iVar11 = 1;\n            ppppppppcVar9 = NULL;\n        }\n        else {\n            iVar11 = ppppppppcVar9 + 1;\n        }\n        *(arg1 + 0x100) = iVar11;\n        arg1[ppppppppcVar9] = uVar6;\n        arg1[0x108] = uVar6;\n        break;\n    case 0x4071a2:\n        fcn.004095c0(arg1, arg2_00, arg3[1]);\n        ppppppppcVar9 = fcn.004095c0(arg1, arg2_00, arg3[2]);\n        break;\n    case 0x4071c3:\n        iVar11 = *(arg1 + 0x100);\n        pcVar17 = \"java resource \";\n        do {\n            cVar23 = *pcVar17;\n            if (iVar11 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar12 = 0;\n                iVar11 = 1;\n            }\n            else {\n                iVar12 = iVar11;\n                iVar11 = iVar11 + 1;\n            }\n            pcVar17 = pcVar17 + 1;\n            *(arg1 + 0x100) = iVar11;\n            arg1[iVar12] = cVar23;\n            arg1[0x108] = cVar23;\n        } while (pcVar17 != \"\");\n        ppppppppcVar9 = fcn.004095c0(arg1, arg2_00, arg3[1]);\n        break;\n    case 0x407240:\n        uVar5 = 0;\n        if (*arg3[1] == 0x27) {\n            uVar5 = *(arg3[1][1] + 0x1c);\n            if (uVar5 != 0) {\n                if (uVar5 < 7) {\n                    pppppppcVar22 = arg3[2];\n                    if (*pppppppcVar22 == 0) {\n                        if (uVar6 == 0x3c) {\n                            fcn.00403320(arg1, 0x2d);\n                            pppppppcVar22 = arg3[2];\n                        }\n                        ppppppppcVar9 = fcn.004095c0(arg1, arg2_00, pppppppcVar22);\n                        if (6 < uVar5) {\n                            return ppppppppcVar9;\n                        }\n                        ppppppppcVar9 = *(uVar5 * 4 + 0x481e84) + 0x481e84;\n    // switch table (7 cases) at 0x481e84\n                        switch(ppppppppcVar9) {\n                        case 0x405e60:\n                            return ppppppppcVar9;\n                        case 0x408e0c:\n                            ppppppppcVar9 = fcn.00405d20(arg1, 0x481cb6);\n                            return ppppppppcVar9;\n                        case 0x408e20:\n                            ppppppppcVar9 = fcn.00405d20(arg1, 0x481cb3);\n                            return ppppppppcVar9;\n                        case 0x408e34:\n                            ppppppppcVar9 = fcn.00405d20(arg1, 0x481cb0);\n                            return ppppppppcVar9;\n                        case 0x408e48:\n                            ppppppppcVar9 = fcn.00403320(arg1, 0x6c);\n                            return ppppppppcVar9;\n                        case 0x408e5a:\n                            ppppppppcVar9 = fcn.00403320(arg1, 0x75);\n                            return ppppppppcVar9;\n                        }\n                    }\n                }\n                else if ((((uVar5 == 7) && (pppppppcVar22 = arg3[2],  *pppppppcVar22 == 0)) &&\n                         (*(pppppppcVar22 + 2) == 1)) && (uVar6 == 0x3b)) {\n                    if (*pppppppcVar22[1] == '0') {\n                        ppppppppcVar9 = fcn.00405d20(arg1, \"false\");\n                        return ppppppppcVar9;\n                    }\n                    if (*pppppppcVar22[1] == '1') {\n                        ppppppppcVar9 = fcn.00405d20(arg1, \"true\");\n                        return ppppppppcVar9;\n                    }\n                }\n            }\n        }\n        iVar11 = *(arg1 + 0x100);\n        if (iVar11 == 0xff) {\n            arg1[0xff] = 0;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n            iVar12 = 1;\n            iVar11 = 0;\n        }\n        else {\n            iVar12 = iVar11 + 1;\n        }\n        *(arg1 + 0x100) = iVar12;\n        arg1[iVar11] = 0x28;\n        arg1[0x108] = 0x28;\n        fcn.004095c0(arg1, arg2_00, arg3[1]);\n        iVar11 = *(arg1 + 0x100);\n        if (iVar11 == 0xff) {\n            arg1[0xff] = 0;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n            *arg1 = 0x29;\n            arg1[0x108] = 0x29;\n            uVar6 = *arg3;\n            *(arg1 + 0x100) = 1;\n            if (uVar6 == 0x3c) {\n                iVar12 = 1;\n                goto code_r0x00408d06;\n            }\n        }\n        else {\n            iVar12 = iVar11 + 1;\n            *(arg1 + 0x100) = iVar12;\n            arg1[iVar11] = 0x29;\n            arg1[0x108] = 0x29;\n            if (*arg3 == 0x3c) {\n                if (iVar12 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar12 = 0;\n                }\ncode_r0x00408d06:\n                *(arg1 + 0x100) = iVar12 + 1;\n                arg1[iVar12] = 0x2d;\n                arg1[0x108] = 0x2d;\n            }\n        }\n        if (uVar5 == 8) {\n            iVar11 = *(arg1 + 0x100);\n            if (iVar11 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar11 = 0;\n            }\n            *(arg1 + 0x100) = iVar11 + 1;\n            arg1[iVar11] = 0x5b;\n            arg1[0x108] = 0x5b;\n            fcn.004095c0(arg1, arg2_00, arg3[2]);\n            ppppppppcVar9 = *(arg1 + 0x100);\n            if (ppppppppcVar9 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                ppppppppcVar9 = NULL;\n            }\n            *(arg1 + 0x100) = ppppppppcVar9 + 1;\n            arg1[ppppppppcVar9] = 0x5d;\n            arg1[0x108] = 0x5d;\n        }\n        else {\n            ppppppppcVar9 = fcn.004095c0(arg1, arg2_00, arg3[2]);\n        }\n        break;\n    case 0x407302:\n        *(arg1 + 0x130) = 1;\n        break;\n    case 0x407311:\n        ppppppppcVar9 = arg3[2];\n        if (*ppppppppcVar9 == 0x39) {\n            pppppppcVar22 = ppppppppcVar9[2];\n            bVar29 = *pppppppcVar22 == 0x3a;\n            if (bVar29) {\n                pppppppcVar16 = arg3[1];\n                pppppppcVar27 = ppppppppcVar9[1];\n                iVar11 = 3;\n                ppppppcVar19 = pppppppcVar22[1];\n                ppppppcVar14 = pppppppcVar22[2];\n                pppppcVar21 = *pppppppcVar16[1];\n                pcVar17 = 0x481aeb;\n                do {\n                    if (iVar11 == 0) break;\n                    iVar11 = iVar11 + -1;\n                    bVar29 = *pppppcVar21 == *pcVar17;\n                    pppppcVar21 = pppppcVar21 + 1;\n                    pcVar17 = pcVar17 + 1;\n                } while (bVar29);\n                if (bVar29) {\n                    fcn.0040aa50(arg1, arg2_00, pppppppcVar27);\n                    fcn.0040a990(arg1, arg2_00, pppppppcVar16);\n                    fcn.0040aa50(arg1, arg2_00, ppppppcVar19);\n                    fcn.00405d20(arg1, 0x481ca7);\n                    ppppppppcVar9 = fcn.0040aa50(arg1, arg2_00, ppppppcVar14);\n                    return ppppppppcVar9;\n                }\n                fcn.00405d20(arg1, \"new \");\n                if (pppppppcVar27[1] != NULL) {\n                    fcn.0040aa50(arg1, arg2_00, pppppppcVar27);\n                    fcn.00403320(arg1, 0x20);\n                }\n                ppppppppcVar9 = fcn.004095c0(arg1, arg2_00, ppppppcVar19);\n                if (ppppppcVar14 == NULL) {\n                    return ppppppppcVar9;\n                }\n                ppppppppcVar9 = fcn.0040aa50(arg1, arg2_00, ppppppcVar14);\n                return ppppppppcVar9;\n            }\n        }\ncode_r0x00406c5d:\n        *(arg1 + 0x130) = 1;\n        break;\n    case 0x4073b0:\n        iVar11 = *(arg1 + 0x100);\n        pcVar17 = \"{unnamed type#\";\n        do {\n            cVar23 = *pcVar17;\n            if (iVar11 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar12 = 0;\n                iVar11 = 1;\n            }\n            else {\n                iVar12 = iVar11;\n                iVar11 = iVar11 + 1;\n            }\n            pcVar17 = pcVar17 + 1;\n            *(arg1 + 0x100) = iVar11;\n            arg1[iVar12] = cVar23;\n            arg1[0x108] = cVar23;\n        } while (pcVar17 != \"\");\n        ppppppppcVar9 = appppppppcStack200;\n        sub.msvcrt.dll_sprintf(ppppppppcVar9, 0x481b05, *(arg3 + 1) + 1);\n        ppppppppcVar15 = ppppppppcVar9;\n        do {\n            ppppppppcVar8 = ppppppppcVar15;\n            uVar5 = *ppppppppcVar8 + 0xfefefeff & ~*ppppppppcVar8;\n            uVar6 = uVar5 & 0x80808080;\n            ppppppppcVar15 = ppppppppcVar8 + 4;\n        } while (uVar6 == 0);\n        bVar29 = (uVar5 & 0x8080) == 0;\n        if (bVar29) {\n            uVar6 = uVar6 >> 0x10;\n        }\n        if (bVar29) {\n            ppppppppcVar15 = ppppppppcVar8 + 6;\n        }\n        puVar18 = ppppppppcVar15 + ((-3 - CARRY1(uVar6, uVar6)) - ppppppppcVar9);\n        if (puVar18 == NULL) {\n            iVar11 = *(arg1 + 0x100);\n        }\n        else {\n            iVar11 = *(arg1 + 0x100);\n            ppppppppcVar15 = puVar18 + ppppppppcVar9;\n            do {\n                uVar28 = *ppppppppcVar9;\n                if (iVar11 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar12 = 0;\n                    iVar11 = 1;\n                }\n                else {\n                    iVar12 = iVar11;\n                    iVar11 = iVar11 + 1;\n                }\n                ppppppppcVar9 = ppppppppcVar9 + 1;\n                *(arg1 + 0x100) = iVar11;\n                arg1[iVar12] = uVar28;\n                arg1[0x108] = uVar28;\n            } while (ppppppppcVar9 != ppppppppcVar15);\n        }\n        if (iVar11 == 0xff) {\n            arg1[0xff] = 0;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n            ppppppppcVar9 = 0x1;\n            iVar11 = 0;\n        }\n        else {\n            ppppppppcVar9 = iVar11 + 1;\n        }\n        *(arg1 + 0x100) = ppppppppcVar9;\n        arg1[iVar11] = 0x7d;\n        arg1[0x108] = 0x7d;\n        break;\n    case 0x407430:\n        iVar11 = *(arg1 + 0x100);\n        pcVar17 = \"{lambda(\";\n        do {\n            cVar23 = *pcVar17;\n            if (iVar11 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar12 = 0;\n                iVar11 = 1;\n            }\n            else {\n                iVar12 = iVar11;\n                iVar11 = iVar11 + 1;\n            }\n            pcVar17 = pcVar17 + 1;\n            *(arg1 + 0x100) = iVar11;\n            arg1[iVar12] = cVar23;\n            arg1[0x108] = cVar23;\n        } while (pcVar17 != \"\");\n        puVar18 = 0x481d33;\n        fcn.004095c0(arg1, arg2_00, arg3[1]);\n        iVar11 = *(arg1 + 0x100);\n        do {\n            uVar28 = *puVar18;\n            if (iVar11 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar12 = 0;\n                iVar11 = 1;\n            }\n            else {\n                iVar12 = iVar11;\n                iVar11 = iVar11 + 1;\n            }\n            puVar18 = puVar18 + 1;\n            *(arg1 + 0x100) = iVar11;\n            arg1[iVar12] = uVar28;\n            arg1[0x108] = uVar28;\n        } while (puVar18 != 0x481d35);\n        ppppppppcVar9 = appppppppcStack200;\n        sub.msvcrt.dll_sprintf(ppppppppcVar9, 0x481b05, *(arg3 + 2) + 1);\n        ppppppppcVar15 = ppppppppcVar9;\n        do {\n            ppppppppcVar8 = ppppppppcVar15;\n            uVar5 = *ppppppppcVar8 + 0xfefefeff & ~*ppppppppcVar8;\n            uVar6 = uVar5 & 0x80808080;\n            ppppppppcVar15 = ppppppppcVar8 + 4;\n        } while (uVar6 == 0);\n        bVar29 = (uVar5 & 0x8080) == 0;\n        if (bVar29) {\n            uVar6 = uVar6 >> 0x10;\n        }\n        if (bVar29) {\n            ppppppppcVar15 = ppppppppcVar8 + 6;\n        }\n        puVar18 = ppppppppcVar15 + ((-3 - CARRY1(uVar6, uVar6)) - ppppppppcVar9);\n        if (puVar18 == NULL) {\n            iVar11 = *(arg1 + 0x100);\n        }\n        else {\n            iVar11 = *(arg1 + 0x100);\n            ppppppppcVar15 = puVar18 + ppppppppcVar9;\n            do {\n                uVar28 = *ppppppppcVar9;\n                if (iVar11 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar12 = 0;\n                    iVar11 = 1;\n                }\n                else {\n                    iVar12 = iVar11;\n                    iVar11 = iVar11 + 1;\n                }\n                ppppppppcVar9 = ppppppppcVar9 + 1;\n                *(arg1 + 0x100) = iVar11;\n                arg1[iVar12] = uVar28;\n                arg1[0x108] = uVar28;\n            } while (ppppppppcVar9 != ppppppppcVar15);\n        }\n        if (iVar11 == 0xff) {\n            arg1[0xff] = 0;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n            ppppppppcVar9 = 0x1;\n            iVar11 = 0;\n        }\n        else {\n            ppppppppcVar9 = iVar11 + 1;\n        }\n        *(arg1 + 0x100) = ppppppppcVar9;\n        arg1[iVar11] = 0x7d;\n        arg1[0x108] = 0x7d;\n        break;\n    case 0x4074b0:\n        iVar11 = *(arg1 + 0x100);\n        pcVar17 = \"global destructors keyed to \";\n        do {\n            cVar23 = *pcVar17;\n            if (iVar11 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar12 = 0;\n                iVar11 = 1;\n            }\n            else {\n                iVar12 = iVar11;\n                iVar11 = iVar11 + 1;\n            }\n            pcVar17 = pcVar17 + 1;\n            *(arg1 + 0x100) = iVar11;\n            arg1[iVar12] = cVar23;\n            arg1[0x108] = cVar23;\n        } while (pcVar17 != \"\");\n        ppppppppcVar9 = fcn.004095c0(arg1, arg2_00, arg3[1]);\n        break;\n    case 0x407530:\n        iVar11 = *(arg1 + 0x100);\n        pcVar17 = \"global constructors keyed to \";\n        do {\n            cVar23 = *pcVar17;\n            if (iVar11 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar12 = 0;\n                iVar11 = 1;\n            }\n            else {\n                iVar12 = iVar11;\n                iVar11 = iVar11 + 1;\n            }\n            pcVar17 = pcVar17 + 1;\n            *(arg1 + 0x100) = iVar11;\n            arg1[iVar12] = cVar23;\n            arg1[0x108] = cVar23;\n        } while (pcVar17 != \"\");\n        ppppppppcVar9 = fcn.004095c0(arg1, arg2_00, arg3[1]);\n        break;\n    case 0x4075b0:\n        iVar11 = *(arg1 + 0x100);\n        pcVar17 = \"non-transaction clone for \";\n        do {\n            cVar23 = *pcVar17;\n            if (iVar11 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar12 = 0;\n                iVar11 = 1;\n            }\n            else {\n                iVar12 = iVar11;\n                iVar11 = iVar11 + 1;\n            }\n            pcVar17 = pcVar17 + 1;\n            *(arg1 + 0x100) = iVar11;\n            arg1[iVar12] = cVar23;\n            arg1[0x108] = cVar23;\n        } while (pcVar17 != \"\");\n        ppppppppcVar9 = fcn.004095c0(arg1, arg2_00, arg3[1]);\n        break;\n    case 0x407630:\n        iVar11 = *(arg1 + 0x100);\n        pcVar17 = \"transaction clone for \";\n        do {\n            cVar23 = *pcVar17;\n            if (iVar11 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar12 = 0;\n                iVar11 = 1;\n            }\n            else {\n                iVar12 = iVar11;\n                iVar11 = iVar11 + 1;\n            }\n            pcVar17 = pcVar17 + 1;\n            *(arg1 + 0x100) = iVar11;\n            arg1[iVar12] = cVar23;\n            arg1[0x108] = cVar23;\n        } while (pcVar17 != \"\");\n        ppppppppcVar9 = fcn.004095c0(arg1, arg2_00, arg3[1]);\n        break;\n    case 0x4076b0:\n        ppppppppcVar9 = fcn.00403720(arg1, arg3[1]);\n        if (ppppppppcVar9 == NULL) {\n            fcn.0040aa50(arg1, arg2_00, arg3[1]);\n            ppppppppcVar9 = fcn.00405d20(arg1, 0x481cdf);\n        }\n        else {\n            iVar26 = 0;\n            do {\n                if ((*ppppppppcVar9 != 0x2f) || (ppppppppcVar9[1] == NULL)) {\n                    pppppppcVar22 = arg3[1];\n                    if (iVar26 == 0) {\n                        return ppppppppcVar9;\n                    }\n                    goto code_r0x004076f5;\n                }\n                ppppppppcVar9 = ppppppppcVar9[2];\n                iVar26 = iVar26 + 1;\n            } while (ppppppppcVar9 != NULL);\n            pppppppcVar22 = arg3[1];\ncode_r0x004076f5:\n            iVar24 = 0;\n            do {\n                *(arg1 + 0x134) = iVar24;\n                ppppppppcVar9 = fcn.004095c0(arg1, arg2_00, pppppppcVar22);\n                if (iVar24 < iVar26 + -1) {\n                    ppppppppcVar15 = *(arg1 + 0x100);\n                    puVar18 = 0x481c88;\n                    do {\n                        uVar28 = *puVar18;\n                        if (ppppppppcVar15 == 0xff) {\n                            arg1[0xff] = 0;\n                            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                            *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                            ppppppppcVar9 = NULL;\n                            ppppppppcVar15 = 0x1;\n                        }\n                        else {\n                            ppppppppcVar9 = ppppppppcVar15;\n                            ppppppppcVar15 = ppppppppcVar15 + 1;\n                        }\n                        puVar18 = puVar18 + 1;\n                        *(arg1 + 0x100) = ppppppppcVar15;\n                        arg1[ppppppppcVar9] = uVar28;\n                        arg1[0x108] = uVar28;\n                    } while (puVar18 != 0x481c8a);\n                }\n                iVar24 = iVar24 + 1;\n            } while (iVar24 != iVar26);\n        }\n        break;\n    case 0x4077a0:\n        if ((arg2 & 0x20) == 0) {\n            if ((arg3[1] != NULL) && ((arg2 & 0x40) == 0)) {\n                appppppppcStack200[0] = *(arg1 + 0x128);\n                piStack184._0_4_ = 0;\n                *(arg1 + 0x128) = appppppppcStack200;\n                apppppppcStack176[0] = *(arg1 + 0x120);\n                appppppppcStack200[1] = arg3;\n                fcn.004095c0(arg1, arg2 & 0xffffff9f, arg3[1]);\n                *(arg1 + 0x128) = appppppppcStack200[0];\n                if (piStack184 != 0) {\n                    return appppppppcStack200[0];\n                }\n                fcn.00403320(arg1, 0x20);\n            }\n            ppppppppcVar9 = fcn.0040a410(arg1, arg2 & 0xffffff9f, arg3 + 2, *(arg1 + 0x128));\n        }\n        else {\n            ppppppppcVar9 = fcn.0040a410(arg1, arg2 & 0xffffff9f, arg3 + 2, *(arg1 + 0x128));\n            if (arg3[1] != NULL) {\n                ppppppppcVar9 = fcn.004095c0(arg1, arg2 & 0xffffff9f, arg3[1]);\n            }\n        }\n        break;\n    case 0x4077e0:\n        ppppppppcVar9 = arg3[1];\n        if ((arg2 & 4) == 0) {\n            iVar26 = *(ppppppppcVar9 + 1);\n            pppppppcVar22 = *ppppppppcVar9;\n            if (iVar26 != 0) {\n                ppppppppcVar15 = *(arg1 + 0x100);\n                iVar11 = 1;\n                do {\n                    uVar28 = *(pppppppcVar22 + iVar11 + -1);\n                    if (ppppppppcVar15 == 0xff) {\n                        arg1[0xff] = 0;\n                        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                        *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                        ppppppppcVar9 = NULL;\n                        ppppppppcVar15 = 0x1;\n                    }\n                    else {\n                        ppppppppcVar9 = ppppppppcVar15;\n                        ppppppppcVar15 = ppppppppcVar15 + 1;\n                    }\n                    iVar11 = iVar11 + 1;\n                    *(arg1 + 0x100) = ppppppppcVar15;\n                    arg1[ppppppppcVar9] = uVar28;\n                    arg1[0x108] = uVar28;\n                } while (iVar11 != iVar26 + 1);\n            }\n        }\n        else {\n            iVar26 = *(ppppppppcVar9 + 3);\n            pppppppcVar22 = ppppppppcVar9[2];\n            if (iVar26 != 0) {\n                ppppppppcVar15 = *(arg1 + 0x100);\n                iVar11 = 1;\n                do {\n                    uVar28 = *(pppppppcVar22 + iVar11 + -1);\n                    if (ppppppppcVar15 == 0xff) {\n                        arg1[0xff] = 0;\n                        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                        *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                        ppppppppcVar9 = NULL;\n                        ppppppppcVar15 = 0x1;\n                    }\n                    else {\n                        ppppppppcVar9 = ppppppppcVar15;\n                        ppppppppcVar15 = ppppppppcVar15 + 1;\n                    }\n                    iVar11 = iVar11 + 1;\n                    *(arg1 + 0x100) = ppppppppcVar15;\n                    arg1[ppppppppcVar9] = uVar28;\n                    arg1[0x108] = uVar28;\n                } while (iVar11 != iVar26 + 1);\n            }\n        }\n        break;\n    case 0x407870:\n        ppppppppcVar9 = arg3[1];\n        uVar6 = *ppppppppcVar9;\n        if (uVar6 == 5) {\n            ppppppppcVar9 = fcn.004036b0(arg1, ppppppppcVar9 + 1);\n            if (ppppppppcVar9 == NULL) {\ncode_r0x004094f5:\n                *(arg1 + 0x130) = 1;\n                return ppppppppcVar9;\n            }\n            uVar6 = *ppppppppcVar9;\n            if (uVar6 == 0x2f) {\n                iVar26 = *(arg1 + 0x134);\n                while (0 < iVar26) {\n                    ppppppppcVar9 = ppppppppcVar9[2];\n                    iVar26 = iVar26 + -1;\n                    if ((ppppppppcVar9 == NULL) || (*ppppppppcVar9 != 0x2f)) goto code_r0x004094f5;\n                }\n                if ((iVar26 == 0) && (ppppppppcVar9 = ppppppppcVar9[1],  ppppppppcVar9 != NULL)) {\n                    uVar6 = *ppppppppcVar9;\n                    goto code_r0x0040787f;\n                }\n                goto code_r0x004094f5;\n            }\n        }\ncode_r0x0040787f:\n        if ((uVar6 == 0x23) || (*arg3 == uVar6)) {\n            appppppppcStack200[0] = *(arg1 + 0x128);\n            arg3 = ppppppppcVar9;\n            goto code_r0x00405e07;\n        }\n        if (uVar6 != 0x24) goto code_r0x00405e00;\n        pppppppcVar22 = ppppppppcVar9[1];\n        appppppppcStack200[0] = *(arg1 + 0x128);\n        *(arg1 + 0x128) = appppppppcStack200;\n        apppppppcStack176[0] = *(arg1 + 0x120);\n        appppppppcStack200[1] = arg3;\n        if (pppppppcVar22 == NULL) goto code_r0x00405e31;\n        goto code_r0x00405e35;\n    case 0x4078e0:\n        appppppppcStack200[0] = *(arg1 + 0x128);\n        piStack184._0_4_ = 0;\n        *(arg1 + 0x128) = appppppppcStack200;\n        apppppppcStack176[0] = *(arg1 + 0x120);\n        appppppppcStack200[1] = arg3;\n        fcn.004095c0(arg1, arg2_00, arg3[2]);\n        if (piStack184 == 0) {\n            fcn.004095f0(arg1, arg2_00, arg3);\n        }\n        *(arg1 + 0x128) = appppppppcStack200[0];\n        ppppppppcVar9 = appppppppcStack200[0];\n        break;\n    case 0x407950:\n        ppppppppcVar9 = *(arg1 + 0x128);\n        apppppppcStack176[0] = *(arg1 + 0x120);\n        piStack184._0_4_ = 0;\n        *(arg1 + 0x128) = appppppppcStack200;\n        appppppppcStack200[0] = ppppppppcVar9;\n        if ((ppppppppcVar9 == NULL) || (2 < *ppppppppcVar9[1] - 0x19U)) {\n            appppppppcStack200[1] = arg3;\n            ppppppppcVar15 = fcn.004095c0(arg1, arg2_00, arg3[2]);\n            *(arg1 + 0x128) = ppppppppcVar9;\n            if (piStack184 != 0) {\n                return ppppppppcVar15;\n            }\n        }\n        else {\n            uVar6 = 1;\n            ppppppppcVar8 = ppppppppcVar9;\n            ppppppppcVar15 = appppppppcStack200;\n            do {\n                if (*(ppppppppcVar8 + 2) == 0) {\n                    if (3 < uVar6) {\n                        *(arg1 + 0x130) = 1;\n                        return ppppppppcVar8;\n                    }\n                    uVar7 = uVar6;\n                    uVar6 = uVar6 + 1;\n                    appppppppcStack200[uVar7 * 4] = *ppppppppcVar8;\n                    appppppppcStack200[uVar7 * 4 + 1] = ppppppppcVar8[1];\n                    (&piStack184)[uVar7 * 4] = ppppppppcVar8[2];\n                    pppppppcVar22 = ppppppppcVar8[3];\n                    appppppppcStack200[uVar7 * 4] = ppppppppcVar15;\n                    ppppppppcVar15 = appppppppcStack200 + uVar7 * 4;\n                    (&piStack184)[uVar7 * 4 + 1] = pppppppcVar22;\n                    *(arg1 + 0x128) = ppppppppcVar15;\n                    *(ppppppppcVar8 + 2) = 1;\n                }\n                ppppppppcVar8 = *ppppppppcVar8;\n            } while ((ppppppppcVar8 != NULL) && (*ppppppppcVar8[1] - 0x19U < 3));\n            appppppppcStack200[1] = arg3;\n            ppppppppcVar15 = fcn.004095c0(arg1, arg2_00, arg3[2]);\n            *(arg1 + 0x128) = ppppppppcVar9;\n            if (piStack184 != 0) {\n                return ppppppppcVar15;\n            }\n            if (uVar6 != 1) {\n                do {\n                    uVar6 = uVar6 - 1;\n                    fcn.004095f0(arg1, arg2_00, appppppppcStack200[uVar6 * 4 + 1]);\n                } while (uVar6 != 1);\n                ppppppppcVar9 = *(arg1 + 0x128);\n            }\n        }\n        ppppppppcVar9 = fcn.0040a190(arg1, arg2_00, arg3 + 1, ppppppppcVar9);\n        break;\n    case 0x407a90:\n        ppppppppcVar9 = fcn.004095c0(arg1, arg2_00, arg3[1]);\n        break;\n    case 0x407aa3:\n        goto code_r0x00407aa3;\n    }\n    return ppppppppcVar9;\n}\n",
        "token_count": 29355
    },
    "004095f0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t ** fcn.004095f0(uchar *arg1, ulong arg2, int32_t **arg3)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    ulong arg3_00;\n    ulong *puVar3;\n    ulong uVar4;\n    uint8_t **ppuVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t **ppiVar8;\n    int32_t **ppiVar9;\n    int32_t **ppiVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    int64_t iVar13;\n    int64_t iVar14;\n    ulong unaff_RBX;\n    uint8_t *puVar15;\n    uint32_t *puVar16;\n    uint32_t *puVar17;\n    int32_t *piVar18;\n    char *pcVar19;\n    uchar *puVar20;\n    uint8_t *puVar21;\n    uint32_t *puVar22;\n    char *pcVar23;\n    int32_t *piVar24;\n    ulong unaff_RSI;\n    char cVar25;\n    int32_t iVar26;\n    char *pcVar27;\n    int32_t iVar28;\n    int32_t *piVar29;\n    uint64_t arg2_00;\n    uchar uVar30;\n    bool bVar31;\n    uchar uVar32;\n    int32_t **ppiStack216;\n    int32_t *piStack208;\n    int32_t **appiStack200 [2];\n    int32_t *apiStack184 [17];\n    \n    arg2_00 = arg2;\n    ppiVar10 = *arg3 - 3;\n    if (0x2a < *arg3 - 3) {\ncode_r0x00409bc0:\n        iVar28 = *(arg1 + 0x130);\n        ppiVar9 = appiStack200[0];\n        goto joined_r0x00409bc8;\n    }\n    ppiVar10 = *(ppiVar10 * 4 + 0x481ee4);\n    // switch table (43 cases) at 0x481ee4\n    switch(ppiVar10 + 0x481ee4) {\n    case 0x409624:\n        iVar13 = *(arg1 + 0x100);\n        pcVar19 = \" __vector(\";\n        do {\n            cVar25 = *pcVar19;\n            if (iVar13 == 0xff) {\n                arg1[0xff] = 0;\n                apiStack184[11] = 0x40968d;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar14 = 0;\n                iVar13 = 1;\n            }\n            else {\n                iVar14 = iVar13;\n                iVar13 = iVar13 + 1;\n            }\n            pcVar19 = pcVar19 + 1;\n            *(arg1 + 0x100) = iVar13;\n            arg1[iVar14] = cVar25;\n            arg1[0x108] = cVar25;\n        } while (pcVar19 != \"\");\n        if (arg3[1] == NULL) {\n            *(arg1 + 0x130) = 1;\n        }\n        else if (*(arg1 + 0x130) == 0) {\n            apiStack184[11] = 0x409c3b;\n            fcn.00405dc0(arg1, arg2_00, arg3[1]);\n            iVar13 = *(arg1 + 0x100);\n        }\n        if (iVar13 == 0xff) {\n            arg1[0xff] = 0;\n            apiStack184[11] = 0x409d2c;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n            ppiVar10 = 0x1;\n            iVar13 = 0;\n        }\n        else {\n            ppiVar10 = iVar13 + 1;\n        }\n        *(arg1 + 0x100) = ppiVar10;\n        arg1[iVar13] = 0x29;\n        arg1[0x108] = 0x29;\n        break;\n    case 0x4096a0:\n        arg3 = arg3[1];\n        goto joined_r0x00409980;\n    case 0x4096d0:\n        ppiVar9 = *(arg1 + 0x100);\n        pcVar19 = \" restrict\";\n        do {\n            cVar25 = *pcVar19;\n            if (ppiVar9 == 0xff) {\n                arg1[0xff] = 0;\n                apiStack184[11] = 0x409739;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                ppiVar10 = NULL;\n                ppiVar9 = 0x1;\n            }\n            else {\n                ppiVar10 = ppiVar9;\n                ppiVar9 = ppiVar9 + 1;\n            }\n            pcVar19 = pcVar19 + 1;\n            *(arg1 + 0x100) = ppiVar9;\n            arg1[ppiVar10] = cVar25;\n            arg1[0x108] = cVar25;\n        } while (pcVar19 != \"\");\n        break;\n    case 0x409750:\n        ppiVar9 = *(arg1 + 0x100);\n        pcVar19 = \" const\";\n        do {\n            cVar25 = *pcVar19;\n            if (ppiVar9 == 0xff) {\n                arg1[0xff] = 0;\n                apiStack184[11] = 0x4097bd;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                ppiVar10 = NULL;\n                ppiVar9 = 0x1;\n            }\n            else {\n                ppiVar10 = ppiVar9;\n                ppiVar9 = ppiVar9 + 1;\n            }\n            pcVar19 = pcVar19 + 1;\n            *(arg1 + 0x100) = ppiVar9;\n            arg1[ppiVar10] = cVar25;\n            arg1[0x108] = cVar25;\n        } while (pcVar19 != \"\");\n        break;\n    case 0x4097d0:\n        iVar13 = *(arg1 + 0x100);\n        if (iVar13 == 0xff) {\n            arg1[0xff] = 0;\n            apiStack184[11] = 0x409cfd;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n            ppiVar10 = 0x1;\n            iVar13 = 0;\n        }\n        else {\n            ppiVar10 = iVar13 + 1;\n        }\n        *(arg1 + 0x100) = ppiVar10;\n        arg1[iVar13] = 0x20;\n        arg1[0x108] = 0x20;\n        goto code_r0x004097fa;\n    case 0x409830:\n        ppiVar9 = *(arg1 + 0x100);\n        pcVar19 = \" volatile\";\n        do {\n            cVar25 = *pcVar19;\n            if (ppiVar9 == 0xff) {\n                arg1[0xff] = 0;\n                apiStack184[11] = 0x40989d;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                ppiVar10 = NULL;\n                ppiVar9 = 0x1;\n            }\n            else {\n                ppiVar10 = ppiVar9;\n                ppiVar9 = ppiVar9 + 1;\n            }\n            pcVar19 = pcVar19 + 1;\n            *(arg1 + 0x100) = ppiVar9;\n            arg1[ppiVar10] = cVar25;\n            arg1[0x108] = cVar25;\n        } while (pcVar19 != \"\");\n        break;\n    case 0x4098b0:\n        iVar13 = *(arg1 + 0x100);\n        if (iVar13 == 0xff) {\n            arg1[0xff] = 0;\n            apiStack184[11] = 0x409cce;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n            ppiVar9 = 0x1;\n            iVar13 = 0;\n        }\n        else {\n            ppiVar9 = iVar13 + 1;\n        }\n        *(arg1 + 0x100) = ppiVar9;\n        arg1[iVar13] = 0x20;\n        arg1[0x108] = 0x20;\n        goto code_r0x004098da;\n    case 0x409950:\n        ppiVar10 = *(arg1 + 0x100);\n        if (ppiVar10 == 0xff) {\n            arg1[0xff] = 0;\n            apiStack184[11] = 0x409c9f;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n            iVar13 = 1;\n            ppiVar10 = NULL;\n        }\n        else {\n            iVar13 = ppiVar10 + 1;\n        }\n        *(arg1 + 0x100) = iVar13;\n        arg1[ppiVar10] = 0x20;\n        arg1[0x108] = 0x20;\n        arg3 = arg3[2];\njoined_r0x00409980:\n        if (arg3 == NULL) {\n            *(arg1 + 0x130) = 1;\n            return ppiVar10;\n        }\n        iVar28 = *(arg1 + 0x130);\n        ppiVar9 = appiStack200[0];\njoined_r0x00409bc8:\n        if (iVar28 != 0) {\n            return ppiVar10;\n        }\n        apiStack184[16] = unaff_RSI;\n        apiStack184[15] = unaff_RBX;\n        uVar7 = *arg3;\n        appiStack200[0] = uVar7;\n        switch(uVar7) {\n        case 0:\n            if ((arg2 & 4) == 0) {\n                uVar7 = *(arg3 + 2);\n                piVar24 = arg3[1];\n                if (uVar7 != 0) {\n                    ppiVar10 = *(arg1 + 0x100);\n                    iVar13 = 1;\n                    do {\n                        uVar30 = *(piVar24 + iVar13 + -1);\n                        if (ppiVar10 == 0xff) {\n                            arg1[0xff] = 0;\n                            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                            *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                            appiStack200[0] = NULL;\n                            ppiVar10 = 0x1;\n                        }\n                        else {\n                            appiStack200[0] = ppiVar10;\n                            ppiVar10 = ppiVar10 + 1;\n                        }\n                        iVar13 = iVar13 + 1;\n                        *(arg1 + 0x100) = ppiVar10;\n                        arg1[appiStack200[0]] = uVar30;\n                        arg1[0x108] = uVar30;\n                    } while (iVar13 != uVar7 + 1);\n                }\n            }\n            else {\n                piVar24 = arg3[1];\n                piVar18 = piVar24 + *(arg3 + 2);\n                while (piVar24 < piVar18) {\n                    cVar25 = *piVar24;\n                    if (((3 < piVar18 - piVar24) && (cVar25 == '_')) &&\n                       ((*(piVar24 + 1) == '_' &&\n                        ((*(piVar24 + 2) == 'U' && (piVar29 = piVar24 + 3,  piVar29 < piVar18)))))) {\n                        uVar7 = 0;\n                        do {\n                            cVar2 = *piVar29;\n                            iVar28 = cVar2;\n                            if (cVar2 - 0x30U < 10) {\n                                iVar28 = iVar28 + -0x30;\n                            }\n                            else if (cVar2 + 0xbfU < 6) {\n                                iVar28 = iVar28 + -0x37;\n                            }\n                            else {\n                                if (5 < cVar2 + 0x9fU) {\n                                    cVar25 = '_';\n                                    if (((piVar18 <= piVar29) || (cVar2 != '_')) || (cVar25 = cVar2,  0xff < uVar7))\n                                    goto code_r0x00408830;\n                                    if (*(arg1 + 0x100) == 0xff) {\n                                        arg1[0xff] = 0;\n                                        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                                        *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                                        *(arg1 + 0x100) = 0;\n                                    }\n                                    appiStack200[0] = *(arg1 + 0x100);\n                                    *(arg1 + 0x100) = appiStack200[0] + 1;\n                                    arg1[appiStack200[0]] = uVar7;\n                                    arg1[0x108] = uVar7;\n                                    goto code_r0x00408859;\n                                }\n                                iVar28 = iVar28 + -0x57;\n                            }\n                            piVar29 = piVar29 + 1;\n                            uVar7 = uVar7 * 0x10 + iVar28;\n                        } while (piVar29 != piVar18);\n                        cVar25 = '_';\n                    }\ncode_r0x00408830:\n                    appiStack200[0] = *(arg1 + 0x100);\n                    if (appiStack200[0] == 0xff) {\n                        arg1[0xff] = 0;\n                        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                        *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                        iVar13 = 1;\n                        appiStack200[0] = NULL;\n                    }\n                    else {\n                        iVar13 = appiStack200[0] + 1;\n                    }\n                    *(arg1 + 0x100) = iVar13;\n                    arg1[appiStack200[0]] = cVar25;\n                    arg1[0x108] = cVar25;\n                    piVar29 = piVar24;\ncode_r0x00408859:\n                    piVar24 = piVar29 + 1;\n                }\n            }\n            break;\n        case 1:\n        case 2:\n            fcn.004095c0(arg1, arg2_00, arg3[1]);\n            iVar13 = *(arg1 + 0x100);\n            if ((arg2 & 4) == 0) {\n                puVar20 = 0x481af4;\n                do {\n                    uVar30 = *puVar20;\n                    if (iVar13 == 0xff) {\n                        arg1[0xff] = 0;\n                        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                        *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                        iVar14 = 0;\n                        iVar13 = 1;\n                    }\n                    else {\n                        iVar14 = iVar13;\n                        iVar13 = iVar13 + 1;\n                    }\n                    puVar20 = puVar20 + 1;\n                    *(arg1 + 0x100) = iVar13;\n                    arg1[iVar14] = uVar30;\n                    arg1[0x108] = uVar30;\n                } while (puVar20 != 0x481af6);\n            }\n            else {\n                if (iVar13 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar14 = 1;\n                    iVar13 = 0;\n                }\n                else {\n                    iVar14 = iVar13 + 1;\n                }\n                *(arg1 + 0x100) = iVar14;\n                arg1[iVar13] = 0x2e;\n                arg1[0x108] = 0x2e;\n            }\n            piVar24 = arg3[2];\n            if (*piVar24 == 0x45) {\n                iVar13 = *(arg1 + 0x100);\n                pcVar19 = \"{default arg#\";\n                do {\n                    cVar25 = *pcVar19;\n                    if (iVar13 == 0xff) {\n                        arg1[0xff] = 0;\n                        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                        *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                        iVar14 = 0;\n                        iVar13 = 1;\n                    }\n                    else {\n                        iVar14 = iVar13;\n                        iVar13 = iVar13 + 1;\n                    }\n                    pcVar19 = pcVar19 + 1;\n                    *(arg1 + 0x100) = iVar13;\n                    arg1[iVar14] = cVar25;\n                    arg1[0x108] = cVar25;\n                } while (pcVar19 != \"\");\n                puVar22 = &stack0xffffffffffffff38;\n                sub.msvcrt.dll_sprintf(puVar22, 0x481b05, piVar24[4] + 1);\n                puVar17 = puVar22;\n                do {\n                    puVar16 = puVar17;\n                    uVar6 = *puVar16 + 0xfefefeff & ~*puVar16;\n                    uVar7 = uVar6 & 0x80808080;\n                    puVar17 = puVar16 + 1;\n                } while (uVar7 == 0);\n                bVar31 = (uVar6 & 0x8080) == 0;\n                if (bVar31) {\n                    uVar7 = uVar7 >> 0x10;\n                }\n                if (bVar31) {\n                    puVar17 = puVar16 + 6;\n                }\n                puVar20 = puVar17 + ((-3 - CARRY1(uVar7, uVar7)) - puVar22);\n                if (puVar20 == NULL) {\n                    iVar13 = *(arg1 + 0x100);\n                }\n                else {\n                    puVar17 = puVar20 + puVar22;\n                    iVar14 = *(arg1 + 0x100);\n                    do {\n                        uVar30 = *puVar22;\n                        if (iVar14 == 0xff) {\n                            arg1[0xff] = 0;\n                            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                            *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                            iVar13 = 1;\n                            iVar14 = 0;\n                        }\n                        else {\n                            iVar13 = iVar14 + 1;\n                        }\n                        puVar22 = puVar22 + 1;\n                        *(arg1 + 0x100) = iVar13;\n                        arg1[iVar14] = uVar30;\n                        arg1[0x108] = uVar30;\n                        iVar14 = iVar13;\n                    } while (puVar22 != puVar17);\n                }\n                puVar20 = 0x481b09;\n                do {\n                    uVar30 = *puVar20;\n                    if (iVar13 == 0xff) {\n                        arg1[0xff] = 0;\n                        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                        *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                        iVar14 = 0;\n                        iVar13 = 1;\n                    }\n                    else {\n                        iVar14 = iVar13;\n                        iVar13 = iVar13 + 1;\n                    }\n                    puVar20 = puVar20 + 1;\n                    *(arg1 + 0x100) = iVar13;\n                    arg1[iVar14] = uVar30;\n                    arg1[0x108] = uVar30;\n                } while (puVar20 != 0x481b0c);\n                piVar24 = *(piVar24 + 2);\n            }\n            appiStack200[0] = fcn.004095c0(arg1, arg2_00, piVar24);\n            break;\n        case 3:\n            uVar4 = *(arg1 + 0x128);\n            *(arg1 + 0x128) = 0;\n            piVar24 = arg3[1];\n            if (piVar24 == NULL) {\ncode_r0x00408f7e:\n                *(arg1 + 0x130) = 1;\n            }\n            else {\n                ppiVar10 = *(arg1 + 0x120);\n                uVar7 = 0;\n                appiStack200[0] = &stack0xffffffffffffff38;\n                ppiVar9 = NULL;\n                do {\n                    ppiVar8 = appiStack200[0];\n                    *ppiVar8 = ppiVar9;\n                    iVar28 = *piVar24;\n                    uVar7 = uVar7 + 1;\n                    *(arg1 + 0x128) = ppiVar8;\n                    ppiVar8[1] = piVar24;\n                    *(ppiVar8 + 2) = 0;\n                    ppiVar8[3] = ppiVar10;\n                    if (4 < iVar28 - 0x1cU) {\n                        if (iVar28 == 4) {\n                            *(arg1 + 0x120) = &stack0xffffffffffffff28;\n                            ppiStack216 = ppiVar10;\n                            piStack208 = piVar24;\n                        }\n                        else if (iVar28 == 2) {\n                            piVar18 = *(piVar24 + 4);\n                            iVar28 = *piVar18;\n                            if (iVar28 != 0x45) goto code_r0x00406804;\n                            while( true ) {\n                                piVar18 = *(piVar18 + 2);\n                                iVar28 = *piVar18;\ncode_r0x00406804:\n                                if (4 < iVar28 - 0x1cU) break;\n                                if (uVar7 == 4) {\n                                    *(arg1 + 0x130) = 1;\n                                    return iVar28 - 0x1cU;\n                                }\n                                uVar6 = uVar7 - 1;\n                                uVar11 = uVar7;\n                                uVar7 = uVar7 + 1;\n                                iVar14 = uVar11 * 0x20;\n                                iVar13 = uVar6 * 0x20;\n                                *(&stack0xffffffffffffff38 + iVar14) = *(&stack0xffffffffffffff38 + iVar13);\n                                *(&stack0xffffffffffffff40 + iVar14) = *(&stack0xffffffffffffff40 + iVar13);\n                                *(&stack0xffffffffffffff48 + iVar14) = *(&stack0xffffffffffffff48 + iVar13);\n                                *(&stack0xffffffffffffff50 + iVar14) = *(&stack0xffffffffffffff50 + iVar13);\n                                *(&stack0xffffffffffffff38 + iVar14) = &stack0xffffffffffffff38 + uVar6 * 4 * 8;\n                                *(&stack0xffffffffffffff40 + iVar13) = piVar18;\n                                *(arg1 + 0x128) = &stack0xffffffffffffff38 + uVar11 * 4 * 8;\n                                *(&stack0xffffffffffffff48 + iVar13) = 0;\n                                *(&stack0xffffffffffffff50 + iVar13) = ppiVar10;\n                            }\n                        }\n                        ppiVar10 = fcn.004095c0(arg1, arg2_00, arg3[2]);\n                        if (*piVar24 == 4) {\n                            *(arg1 + 0x120) = ppiStack216;\n                            ppiVar10 = ppiStack216;\n                        }\n                        while (uVar7 != 0) {\n                            uVar7 = uVar7 - 1;\n                            uVar11 = uVar7;\n                            ppiVar10 = uVar11 * 0x20;\n                            if (*(&stack0xffffffffffffff48 + uVar11 * 0x20) == 0) {\n                                iVar13 = *(arg1 + 0x100);\n                                if (iVar13 == 0xff) {\n                                    arg1[0xff] = 0;\n                                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                                    iVar13 = 0;\n                                }\n                                arg3_00 = *(&stack0xffffffffffffff40 + uVar11 * 0x20);\n                                *(arg1 + 0x100) = iVar13 + 1;\n                                arg1[iVar13] = 0x20;\n                                arg1[0x108] = 0x20;\n                                ppiVar10 = fcn.004095f0(arg1, arg2_00, arg3_00);\n                            }\n                        }\n                        *(arg1 + 0x128) = uVar4;\n                        return ppiVar10;\n                    }\n                    piVar24 = *(piVar24 + 2);\n                    appiStack200[0] = ppiVar8;\n                    if (piVar24 == NULL) goto code_r0x00408f7e;\n                    appiStack200[0] = ppiVar8 + 4;\n                    ppiVar9 = ppiVar8;\n                } while (uVar7 != 4);\n                *(arg1 + 0x130) = 1;\n            }\n            break;\n        case 4:\n            uVar4 = *(arg1 + 0x128);\n            *(arg1 + 0x128) = 0;\n            piVar24 = arg3[1];\n            if ((((arg2 & 4) == 0) || (*piVar24 != 0)) || (bVar31 = piVar24[4] == 6,  !bVar31)) {\ncode_r0x00406b2f:\n                fcn.004095c0(arg1, arg2_00, piVar24);\n                if (arg1[0x108] == '<') {\n                    iVar13 = *(arg1 + 0x100);\n                    if (iVar13 == 0xff) {\n                        arg1[0xff] = 0;\n                        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                        *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                        iVar13 = 0;\n                    }\n                    iVar14 = iVar13 + 1;\n                    *(arg1 + 0x100) = iVar14;\n                    arg1[iVar13] = 0x20;\n                    arg1[0x108] = 0x20;\n                }\n                else {\n                    iVar14 = *(arg1 + 0x100);\n                }\n                if (iVar14 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar13 = 1;\n                    iVar14 = 0;\n                }\n                else {\n                    iVar13 = iVar14 + 1;\n                }\n                *(arg1 + 0x100) = iVar13;\n                arg1[iVar14] = 0x3c;\n                arg1[0x108] = 0x3c;\n                fcn.004095c0(arg1, arg2_00, arg3[2]);\n                if (arg1[0x108] == '>') {\n                    iVar13 = *(arg1 + 0x100);\n                    if (iVar13 == 0xff) {\n                        arg1[0xff] = 0;\n                        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                        *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                        iVar13 = 0;\n                    }\n                    appiStack200[0] = iVar13 + 1;\n                    *(arg1 + 0x100) = appiStack200[0];\n                    arg1[iVar13] = 0x20;\n                    arg1[0x108] = 0x20;\n                }\n                else {\n                    appiStack200[0] = *(arg1 + 0x100);\n                }\n                if (appiStack200[0] == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar13 = 1;\n                    appiStack200[0] = NULL;\n                }\n                else {\n                    iVar13 = appiStack200[0] + 1;\n                }\n                *(arg1 + 0x100) = iVar13;\n                arg1[appiStack200[0]] = 0x3e;\n                arg1[0x108] = 0x3e;\n            }\n            else {\n                iVar13 = 6;\n                pcVar19 = *(piVar24 + 2);\n                pcVar23 = \"JArray\";\n                do {\n                    if (iVar13 == 0) break;\n                    iVar13 = iVar13 + -1;\n                    bVar31 = *pcVar19 == *pcVar23;\n                    pcVar19 = pcVar19 + 1;\n                    pcVar23 = pcVar23 + 1;\n                } while (bVar31);\n                if (!bVar31) goto code_r0x00406b2f;\n                fcn.004095c0(arg1, arg2_00, arg3[2]);\n                appiStack200[0] = fcn.00405d20(arg1, 0x481b14);\n            }\n            *(arg1 + 0x128) = uVar4;\n            break;\n        case 5:\n            appiStack200[0] = fcn.004036b0(arg1, arg3 + 1);\n            if (appiStack200[0] != NULL) {\n                if (*appiStack200[0] != 0x2f) {\ncode_r0x00406ace:\n                    puVar3 = *(arg1 + 0x120);\n                    *(arg1 + 0x120) = *puVar3;\n                    ppiVar10 = fcn.004095c0(arg1, arg2_00, appiStack200[0]);\n                    *(arg1 + 0x120) = puVar3;\n                    return ppiVar10;\n                }\n                iVar28 = *(arg1 + 0x134);\n                while (0 < iVar28) {\n                    appiStack200[0] = appiStack200[0][2];\n                    iVar28 = iVar28 + -1;\n                    if ((appiStack200[0] == NULL) || (*appiStack200[0] != 0x2f)) goto code_r0x0040859a;\n                }\n                if ((iVar28 == 0) && (appiStack200[0] = appiStack200[0][1],  appiStack200[0] != NULL))\n                goto code_r0x00406ace;\n            }\ncode_r0x0040859a:\n            *(arg1 + 0x130) = 1;\n            break;\n        case 6:\n            uVar7 = *(arg3 + 1);\n            ppiVar10 = *(arg1 + 0x100);\n            if (uVar7 == 0) {\n                pcVar19 = \"this\";\n                do {\n                    cVar25 = *pcVar19;\n                    if (ppiVar10 == 0xff) {\n                        arg1[0xff] = 0;\n                        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                        *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                        appiStack200[0] = NULL;\n                        ppiVar10 = 0x1;\n                    }\n                    else {\n                        appiStack200[0] = ppiVar10;\n                        ppiVar10 = ppiVar10 + 1;\n                    }\n                    pcVar19 = pcVar19 + 1;\n                    *(arg1 + 0x100) = ppiVar10;\n                    arg1[appiStack200[0]] = cVar25;\n                    arg1[0x108] = cVar25;\n                } while (pcVar19 != \"\");\n            }\n            else {\n                pcVar19 = \"{parm#\";\n                do {\n                    cVar25 = *pcVar19;\n                    if (ppiVar10 == 0xff) {\n                        arg1[0xff] = 0;\n                        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                        *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                        ppiVar9 = NULL;\n                        ppiVar10 = 0x1;\n                    }\n                    else {\n                        ppiVar9 = ppiVar10;\n                        ppiVar10 = ppiVar10 + 1;\n                    }\n                    pcVar19 = pcVar19 + 1;\n                    *(arg1 + 0x100) = ppiVar10;\n                    arg1[ppiVar9] = cVar25;\n                    arg1[0x108] = cVar25;\n                } while (pcVar19 != \"\");\n                puVar22 = &stack0xffffffffffffff38;\n                sub.msvcrt.dll_sprintf(puVar22, 0x481b05, uVar7);\n                puVar17 = puVar22;\n                do {\n                    puVar16 = puVar17;\n                    uVar6 = *puVar16 + 0xfefefeff & ~*puVar16;\n                    uVar7 = uVar6 & 0x80808080;\n                    puVar17 = puVar16 + 1;\n                } while (uVar7 == 0);\n                bVar31 = (uVar6 & 0x8080) == 0;\n                if (bVar31) {\n                    uVar7 = uVar7 >> 0x10;\n                }\n                if (bVar31) {\n                    puVar17 = puVar16 + 6;\n                }\n                puVar20 = puVar17 + ((-3 - CARRY1(uVar7, uVar7)) - puVar22);\n                if (puVar20 == NULL) {\n                    iVar13 = *(arg1 + 0x100);\n                }\n                else {\n                    iVar13 = *(arg1 + 0x100);\n                    puVar17 = puVar20 + puVar22;\n                    do {\n                        uVar30 = *puVar22;\n                        if (iVar13 == 0xff) {\n                            arg1[0xff] = 0;\n                            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                            *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                            iVar14 = 0;\n                            iVar13 = 1;\n                        }\n                        else {\n                            iVar14 = iVar13;\n                            iVar13 = iVar13 + 1;\n                        }\n                        puVar22 = puVar22 + 1;\n                        *(arg1 + 0x100) = iVar13;\n                        arg1[iVar14] = uVar30;\n                        arg1[0x108] = uVar30;\n                    } while (puVar22 != puVar17);\n                }\n                if (iVar13 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    appiStack200[0] = 0x1;\n                    iVar13 = 0;\n                }\n                else {\n                    appiStack200[0] = iVar13 + 1;\n                }\n                *(arg1 + 0x100) = appiStack200[0];\n                arg1[iVar13] = 0x7d;\n                arg1[0x108] = 0x7d;\n            }\n            break;\n        case 7:\n            appiStack200[0] = fcn.004095c0(arg1, arg2_00, arg3[2]);\n            break;\n        case 8:\n            iVar13 = *(arg1 + 0x100);\n            if (iVar13 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar14 = 1;\n                iVar13 = 0;\n            }\n            else {\n                iVar14 = iVar13 + 1;\n            }\n            *(arg1 + 0x100) = iVar14;\n            arg1[iVar13] = 0x7e;\n            arg1[0x108] = 0x7e;\n            appiStack200[0] = fcn.004095c0(arg1, arg2_00, arg3[2]);\n            break;\n        case 9:\n            iVar13 = *(arg1 + 0x100);\n            pcVar19 = \"vtable for \";\n            do {\n                cVar25 = *pcVar19;\n                if (iVar13 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar14 = 0;\n                    iVar13 = 1;\n                }\n                else {\n                    iVar14 = iVar13;\n                    iVar13 = iVar13 + 1;\n                }\n                pcVar19 = pcVar19 + 1;\n                *(arg1 + 0x100) = iVar13;\n                arg1[iVar14] = cVar25;\n                arg1[0x108] = cVar25;\n            } while (pcVar19 != \"\");\n            appiStack200[0] = fcn.004095c0(arg1, arg2_00, arg3[1]);\n            break;\n        case 10:\n            iVar13 = *(arg1 + 0x100);\n            pcVar19 = \"VTT for \";\n            do {\n                cVar25 = *pcVar19;\n                if (iVar13 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar14 = 0;\n                    iVar13 = 1;\n                }\n                else {\n                    iVar14 = iVar13;\n                    iVar13 = iVar13 + 1;\n                }\n                pcVar19 = pcVar19 + 1;\n                *(arg1 + 0x100) = iVar13;\n                arg1[iVar14] = cVar25;\n                arg1[0x108] = cVar25;\n            } while (pcVar19 != \"\");\n            appiStack200[0] = fcn.004095c0(arg1, arg2_00, arg3[1]);\n            break;\n        case 0xb:\n            iVar13 = *(arg1 + 0x100);\n            pcVar19 = \"construction vtable for \";\n            do {\n                cVar25 = *pcVar19;\n                if (iVar13 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar14 = 0;\n                    iVar13 = 1;\n                }\n                else {\n                    iVar14 = iVar13;\n                    iVar13 = iVar13 + 1;\n                }\n                pcVar19 = pcVar19 + 1;\n                *(arg1 + 0x100) = iVar13;\n                arg1[iVar14] = cVar25;\n                arg1[0x108] = cVar25;\n            } while (pcVar19 != \"\");\n            pcVar19 = \"-in-\";\n            fcn.004095c0(arg1, arg2_00, arg3[1]);\n            iVar13 = *(arg1 + 0x100);\n            do {\n                cVar25 = *pcVar19;\n                if (iVar13 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar14 = 0;\n                    iVar13 = 1;\n                }\n                else {\n                    iVar14 = iVar13;\n                    iVar13 = iVar13 + 1;\n                }\n                pcVar19 = pcVar19 + 1;\n                *(arg1 + 0x100) = iVar13;\n                arg1[iVar14] = cVar25;\n                arg1[0x108] = cVar25;\n            } while (pcVar19 != \"\");\n            appiStack200[0] = fcn.004095c0(arg1, arg2_00, arg3[2]);\n            break;\n        case 0xc:\n            iVar13 = *(arg1 + 0x100);\n            pcVar19 = \"typeinfo for \";\n            do {\n                cVar25 = *pcVar19;\n                if (iVar13 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar14 = 0;\n                    iVar13 = 1;\n                }\n                else {\n                    iVar14 = iVar13;\n                    iVar13 = iVar13 + 1;\n                }\n                pcVar19 = pcVar19 + 1;\n                *(arg1 + 0x100) = iVar13;\n                arg1[iVar14] = cVar25;\n                arg1[0x108] = cVar25;\n            } while (pcVar19 != \"\");\n            appiStack200[0] = fcn.004095c0(arg1, arg2_00, arg3[1]);\n            break;\n        case 0xd:\n            iVar13 = *(arg1 + 0x100);\n            pcVar19 = \"typeinfo name for \";\n            do {\n                cVar25 = *pcVar19;\n                if (iVar13 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar14 = 0;\n                    iVar13 = 1;\n                }\n                else {\n                    iVar14 = iVar13;\n                    iVar13 = iVar13 + 1;\n                }\n                pcVar19 = pcVar19 + 1;\n                *(arg1 + 0x100) = iVar13;\n                arg1[iVar14] = cVar25;\n                arg1[0x108] = cVar25;\n            } while (pcVar19 != \"\");\n            appiStack200[0] = fcn.004095c0(arg1, arg2_00, arg3[1]);\n            break;\n        case 0xe:\n            iVar13 = *(arg1 + 0x100);\n            pcVar19 = \"typeinfo fn for \";\n            do {\n                cVar25 = *pcVar19;\n                if (iVar13 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar14 = 0;\n                    iVar13 = 1;\n                }\n                else {\n                    iVar14 = iVar13;\n                    iVar13 = iVar13 + 1;\n                }\n                pcVar19 = pcVar19 + 1;\n                *(arg1 + 0x100) = iVar13;\n                arg1[iVar14] = cVar25;\n                arg1[0x108] = cVar25;\n            } while (pcVar19 != \"\");\n            appiStack200[0] = fcn.004095c0(arg1, arg2_00, arg3[1]);\n            break;\n        case 0xf:\n            iVar13 = *(arg1 + 0x100);\n            pcVar19 = \"non-virtual thunk to \";\n            do {\n                cVar25 = *pcVar19;\n                if (iVar13 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar14 = 0;\n                    iVar13 = 1;\n                }\n                else {\n                    iVar14 = iVar13;\n                    iVar13 = iVar13 + 1;\n                }\n                pcVar19 = pcVar19 + 1;\n                *(arg1 + 0x100) = iVar13;\n                arg1[iVar14] = cVar25;\n                arg1[0x108] = cVar25;\n            } while (pcVar19 != \"\");\n            appiStack200[0] = fcn.004095c0(arg1, arg2_00, arg3[1]);\n            break;\n        case 0x10:\n            iVar13 = *(arg1 + 0x100);\n            pcVar19 = \"virtual thunk to \";\n            do {\n                cVar25 = *pcVar19;\n                if (iVar13 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar14 = 0;\n                    iVar13 = 1;\n                }\n                else {\n                    iVar14 = iVar13;\n                    iVar13 = iVar13 + 1;\n                }\n                pcVar19 = pcVar19 + 1;\n                *(arg1 + 0x100) = iVar13;\n                arg1[iVar14] = cVar25;\n                arg1[0x108] = cVar25;\n            } while (pcVar19 != \"\");\n            appiStack200[0] = fcn.004095c0(arg1, arg2_00, arg3[1]);\n            break;\n        case 0x11:\n            iVar13 = *(arg1 + 0x100);\n            pcVar19 = \"covariant return thunk to \";\n            do {\n                cVar25 = *pcVar19;\n                if (iVar13 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar14 = 0;\n                    iVar13 = 1;\n                }\n                else {\n                    iVar14 = iVar13;\n                    iVar13 = iVar13 + 1;\n                }\n                pcVar19 = pcVar19 + 1;\n                *(arg1 + 0x100) = iVar13;\n                arg1[iVar14] = cVar25;\n                arg1[0x108] = cVar25;\n            } while (pcVar19 != \"\");\n            appiStack200[0] = fcn.004095c0(arg1, arg2_00, arg3[1]);\n            break;\n        case 0x12:\n            iVar13 = *(arg1 + 0x100);\n            pcVar19 = \"java Class for \";\n            do {\n                cVar25 = *pcVar19;\n                if (iVar13 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar14 = 0;\n                    iVar13 = 1;\n                }\n                else {\n                    iVar14 = iVar13;\n                    iVar13 = iVar13 + 1;\n                }\n                pcVar19 = pcVar19 + 1;\n                *(arg1 + 0x100) = iVar13;\n                arg1[iVar14] = cVar25;\n                arg1[0x108] = cVar25;\n            } while (pcVar19 != \"\");\n            appiStack200[0] = fcn.004095c0(arg1, arg2_00, arg3[1]);\n            break;\n        case 0x13:\n            iVar13 = *(arg1 + 0x100);\n            pcVar19 = \"guard variable for \";\n            do {\n                cVar25 = *pcVar19;\n                if (iVar13 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar14 = 0;\n                    iVar13 = 1;\n                }\n                else {\n                    iVar14 = iVar13;\n                    iVar13 = iVar13 + 1;\n                }\n                pcVar19 = pcVar19 + 1;\n                *(arg1 + 0x100) = iVar13;\n                arg1[iVar14] = cVar25;\n                arg1[0x108] = cVar25;\n            } while (pcVar19 != \"\");\n            appiStack200[0] = fcn.004095c0(arg1, arg2_00, arg3[1]);\n            break;\n        case 0x14:\n            iVar13 = *(arg1 + 0x100);\n            pcVar19 = \"TLS init function for \";\n            do {\n                cVar25 = *pcVar19;\n                if (iVar13 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar14 = 0;\n                    iVar13 = 1;\n                }\n                else {\n                    iVar14 = iVar13;\n                    iVar13 = iVar13 + 1;\n                }\n                pcVar19 = pcVar19 + 1;\n                *(arg1 + 0x100) = iVar13;\n                arg1[iVar14] = cVar25;\n                arg1[0x108] = cVar25;\n            } while (pcVar19 != \"\");\n            appiStack200[0] = fcn.004095c0(arg1, arg2_00, arg3[1]);\n            break;\n        case 0x15:\n            iVar13 = *(arg1 + 0x100);\n            pcVar19 = \"TLS wrapper function for \";\n            do {\n                cVar25 = *pcVar19;\n                if (iVar13 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar14 = 0;\n                    iVar13 = 1;\n                }\n                else {\n                    iVar14 = iVar13;\n                    iVar13 = iVar13 + 1;\n                }\n                pcVar19 = pcVar19 + 1;\n                *(arg1 + 0x100) = iVar13;\n                arg1[iVar14] = cVar25;\n                arg1[0x108] = cVar25;\n            } while (pcVar19 != \"\");\n            appiStack200[0] = fcn.004095c0(arg1, arg2_00, arg3[1]);\n            break;\n        case 0x16:\n            iVar13 = *(arg1 + 0x100);\n            pcVar19 = \"reference temporary #\";\n            do {\n                cVar25 = *pcVar19;\n                if (iVar13 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar14 = 0;\n                    iVar13 = 1;\n                }\n                else {\n                    iVar14 = iVar13;\n                    iVar13 = iVar13 + 1;\n                }\n                pcVar19 = pcVar19 + 1;\n                *(arg1 + 0x100) = iVar13;\n                arg1[iVar14] = cVar25;\n                arg1[0x108] = cVar25;\n            } while (pcVar19 != \"\");\n            pcVar19 = \" for \";\n            fcn.004095c0(arg1, arg2_00, arg3[2]);\n            iVar13 = *(arg1 + 0x100);\n            do {\n                cVar25 = *pcVar19;\n                if (iVar13 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar14 = 0;\n                    iVar13 = 1;\n                }\n                else {\n                    iVar14 = iVar13;\n                    iVar13 = iVar13 + 1;\n                }\n                pcVar19 = pcVar19 + 1;\n                *(arg1 + 0x100) = iVar13;\n                arg1[iVar14] = cVar25;\n                arg1[0x108] = cVar25;\n            } while (pcVar19 != \"\");\n            appiStack200[0] = fcn.004095c0(arg1, arg2_00, arg3[1]);\n            break;\n        case 0x17:\n            iVar13 = *(arg1 + 0x100);\n            pcVar19 = \"hidden alias for \";\n            do {\n                cVar25 = *pcVar19;\n                if (iVar13 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar14 = 0;\n                    iVar13 = 1;\n                }\n                else {\n                    iVar14 = iVar13;\n                    iVar13 = iVar13 + 1;\n                }\n                pcVar19 = pcVar19 + 1;\n                *(arg1 + 0x100) = iVar13;\n                arg1[iVar14] = cVar25;\n                arg1[0x108] = cVar25;\n            } while (pcVar19 != \"\");\n            appiStack200[0] = fcn.004095c0(arg1, arg2_00, arg3[1]);\n            break;\n        case 0x18:\n            uVar7 = *(arg3 + 2);\n            piVar24 = arg3[1];\n            if (uVar7 != 0) {\n                ppiVar10 = *(arg1 + 0x100);\n                iVar13 = 1;\n                do {\n                    uVar30 = *(piVar24 + iVar13 + -1);\n                    if (ppiVar10 == 0xff) {\n                        arg1[0xff] = 0;\n                        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                        *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                        appiStack200[0] = NULL;\n                        ppiVar10 = 0x1;\n                    }\n                    else {\n                        appiStack200[0] = ppiVar10;\n                        ppiVar10 = ppiVar10 + 1;\n                    }\n                    iVar13 = iVar13 + 1;\n                    *(arg1 + 0x100) = ppiVar10;\n                    arg1[appiStack200[0]] = uVar30;\n                    arg1[0x108] = uVar30;\n                } while (iVar13 != uVar7 + 1);\n            }\n            break;\n        case 0x19:\n        case 0x1a:\n        case 0x1b:\n            appiStack200[0] = *(arg1 + 0x128);\n            ppiVar10 = appiStack200[0];\n            if (appiStack200[0] == NULL) {\n                appiStack200[0] = NULL;\n            }\n            else {\n                do {\n                    if (*(ppiVar10 + 2) == 0) {\n                        if (2 < *ppiVar10[1] - 0x19U) break;\n                        if (uVar7 == *ppiVar10[1]) {\n                            ppiVar10 = fcn.004095c0(arg1, arg2_00, arg3[1]);\n                            return ppiVar10;\n                        }\n                    }\n                    ppiVar10 = *ppiVar10;\n                } while (ppiVar10 != NULL);\n            }\n            goto code_r0x00405e07;\n        case 0x1c:\n        case 0x1d:\n        case 0x1e:\n        case 0x1f:\n        case 0x20:\n        case 0x21:\n        case 0x22:\n        case 0x25:\n        case 0x26:\ncode_r0x00405e00:\n            appiStack200[0] = *(arg1 + 0x128);\ncode_r0x00405e07:\n            *(arg1 + 0x128) = &stack0xffffffffffffff38;\n            apiStack184[1] = *(arg1 + 0x120);\ncode_r0x00405e31:\n            piVar24 = arg3[1];\n            appiStack200[1] = arg3;\ncode_r0x00405e35:\n            ppiVar10 = appiStack200[1];\n            apiStack184[0]._0_4_ = 0;\n            fcn.004095c0(arg1, arg2_00, piVar24);\n            if (apiStack184[0] == 0) {\n                fcn.004095f0(arg1, arg2_00, ppiVar10);\n            }\n            *(arg1 + 0x128) = appiStack200[0];\n            break;\n        case 0x23:\n        case 0x24:\n            ppiVar10 = arg3[1];\n            uVar7 = *ppiVar10;\n            if (uVar7 == 5) {\n                ppiVar10 = fcn.004036b0(arg1, ppiVar10 + 1);\n                if (ppiVar10 == NULL) {\ncode_r0x004094f5:\n                    *(arg1 + 0x130) = 1;\n                    return ppiVar10;\n                }\n                uVar7 = *ppiVar10;\n                if (uVar7 == 0x2f) {\n                    iVar28 = *(arg1 + 0x134);\n                    while (0 < iVar28) {\n                        ppiVar10 = ppiVar10[2];\n                        iVar28 = iVar28 + -1;\n                        if ((ppiVar10 == NULL) || (*ppiVar10 != 0x2f)) goto code_r0x004094f5;\n                    }\n                    if ((iVar28 == 0) && (ppiVar10 = ppiVar10[1],  ppiVar10 != NULL)) {\n                        uVar7 = *ppiVar10;\n                        goto code_r0x0040787f;\n                    }\n                    goto code_r0x004094f5;\n                }\n            }\ncode_r0x0040787f:\n            if ((uVar7 == 0x23) || (*arg3 == uVar7)) {\n                appiStack200[0] = *(arg1 + 0x128);\n                arg3 = ppiVar10;\n                goto code_r0x00405e07;\n            }\n            if (uVar7 != 0x24) goto code_r0x00405e00;\n            piVar24 = ppiVar10[1];\n            appiStack200[0] = *(arg1 + 0x128);\n            *(arg1 + 0x128) = &stack0xffffffffffffff38;\n            apiStack184[1] = *(arg1 + 0x120);\n            appiStack200[1] = arg3;\n            if (piVar24 == NULL) goto code_r0x00405e31;\n            goto code_r0x00405e35;\n        case 0x27:\n            appiStack200[0] = arg3[1];\n            if ((arg2 & 4) == 0) {\n                iVar28 = *(appiStack200[0] + 1);\n                piVar24 = *appiStack200[0];\n                if (iVar28 != 0) {\n                    ppiVar10 = *(arg1 + 0x100);\n                    iVar13 = 1;\n                    do {\n                        uVar30 = *(piVar24 + iVar13 + -1);\n                        if (ppiVar10 == 0xff) {\n                            arg1[0xff] = 0;\n                            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                            *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                            appiStack200[0] = NULL;\n                            ppiVar10 = 0x1;\n                        }\n                        else {\n                            appiStack200[0] = ppiVar10;\n                            ppiVar10 = ppiVar10 + 1;\n                        }\n                        iVar13 = iVar13 + 1;\n                        *(arg1 + 0x100) = ppiVar10;\n                        arg1[appiStack200[0]] = uVar30;\n                        arg1[0x108] = uVar30;\n                    } while (iVar13 != iVar28 + 1);\n                }\n            }\n            else {\n                iVar28 = *(appiStack200[0] + 3);\n                piVar24 = appiStack200[0][2];\n                if (iVar28 != 0) {\n                    ppiVar10 = *(arg1 + 0x100);\n                    iVar13 = 1;\n                    do {\n                        uVar30 = *(piVar24 + iVar13 + -1);\n                        if (ppiVar10 == 0xff) {\n                            arg1[0xff] = 0;\n                            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                            *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                            appiStack200[0] = NULL;\n                            ppiVar10 = 0x1;\n                        }\n                        else {\n                            appiStack200[0] = ppiVar10;\n                            ppiVar10 = ppiVar10 + 1;\n                        }\n                        iVar13 = iVar13 + 1;\n                        *(arg1 + 0x100) = ppiVar10;\n                        arg1[appiStack200[0]] = uVar30;\n                        arg1[0x108] = uVar30;\n                    } while (iVar13 != iVar28 + 1);\n                }\n            }\n            break;\n        case 0x28:\n            appiStack200[0] = fcn.004095c0(arg1, arg2_00, arg3[1]);\n            break;\n        case 0x29:\n            if ((arg2 & 0x20) == 0) {\n                appiStack200[0] = ppiVar9;\n                if ((arg3[1] != NULL) && ((arg2 & 0x40) == 0)) {\n                    appiStack200[0] = *(arg1 + 0x128);\n                    apiStack184[0]._0_4_ = 0;\n                    *(arg1 + 0x128) = &stack0xffffffffffffff38;\n                    apiStack184[1] = *(arg1 + 0x120);\n                    appiStack200[1] = arg3;\n                    fcn.004095c0(arg1, arg2 & 0xffffff9f, arg3[1]);\n                    *(arg1 + 0x128) = appiStack200[0];\n                    if (apiStack184[0] != 0) {\n                        return appiStack200[0];\n                    }\n                    fcn.00403320(arg1, 0x20);\n                }\n                appiStack200[0] = fcn.0040a410(arg1, arg2 & 0xffffff9f, arg3 + 2, *(arg1 + 0x128));\n            }\n            else {\n                appiStack200[0] = fcn.0040a410(arg1, arg2 & 0xffffff9f, arg3 + 2, *(arg1 + 0x128));\n                if (arg3[1] != NULL) {\n                    appiStack200[0] = fcn.004095c0(arg1, arg2 & 0xffffff9f, arg3[1]);\n                }\n            }\n            break;\n        case 0x2a:\n            ppiVar10 = *(arg1 + 0x128);\n            apiStack184[1] = *(arg1 + 0x120);\n            apiStack184[0]._0_4_ = 0;\n            *(arg1 + 0x128) = &stack0xffffffffffffff38;\n            appiStack200[0] = ppiVar10;\n            if ((ppiVar10 == NULL) || (2 < *ppiVar10[1] - 0x19U)) {\n                appiStack200[1] = arg3;\n                ppiVar9 = fcn.004095c0(arg1, arg2_00, arg3[2]);\n                *(arg1 + 0x128) = ppiVar10;\n                if (apiStack184[0] != 0) {\n                    return ppiVar9;\n                }\n            }\n            else {\n                uVar7 = 1;\n                ppiVar9 = ppiVar10;\n                puVar20 = &stack0xffffffffffffff38;\n                do {\n                    if (*(ppiVar9 + 2) == 0) {\n                        if (3 < uVar7) {\n                            *(arg1 + 0x130) = 1;\n                            return ppiVar9;\n                        }\n                        uVar11 = uVar7;\n                        uVar7 = uVar7 + 1;\n                        iVar13 = uVar11 * 0x20;\n                        *(&stack0xffffffffffffff38 + iVar13) = *ppiVar9;\n                        *(&stack0xffffffffffffff40 + iVar13) = ppiVar9[1];\n                        *(&stack0xffffffffffffff48 + iVar13) = ppiVar9[2];\n                        piVar24 = ppiVar9[3];\n                        *(&stack0xffffffffffffff38 + iVar13) = puVar20;\n                        puVar20 = &stack0xffffffffffffff38 + uVar11 * 0x20;\n                        *(&stack0xffffffffffffff50 + iVar13) = piVar24;\n                        *(arg1 + 0x128) = puVar20;\n                        *(ppiVar9 + 2) = 1;\n                    }\n                    ppiVar9 = *ppiVar9;\n                } while ((ppiVar9 != NULL) && (*ppiVar9[1] - 0x19U < 3));\n                appiStack200[1] = arg3;\n                ppiVar9 = fcn.004095c0(arg1, arg2_00, arg3[2]);\n                *(arg1 + 0x128) = ppiVar10;\n                if (apiStack184[0] != 0) {\n                    return ppiVar9;\n                }\n                if (uVar7 != 1) {\n                    do {\n                        uVar7 = uVar7 - 1;\n                        fcn.004095f0(arg1, arg2_00, *(&stack0xffffffffffffff40 + uVar7 * 0x20));\n                    } while (uVar7 != 1);\n                    ppiVar10 = *(arg1 + 0x128);\n                }\n            }\n            appiStack200[0] = fcn.0040a190(arg1, arg2_00, arg3 + 1, ppiVar10);\n            break;\n        case 0x2b:\n        case 0x2d:\n            appiStack200[0] = *(arg1 + 0x128);\n            apiStack184[0]._0_4_ = 0;\n            *(arg1 + 0x128) = &stack0xffffffffffffff38;\n            apiStack184[1] = *(arg1 + 0x120);\n            appiStack200[1] = arg3;\n            fcn.004095c0(arg1, arg2_00, arg3[2]);\n            if (apiStack184[0] == 0) {\n                fcn.004095f0(arg1, arg2_00, arg3);\n            }\n            *(arg1 + 0x128) = appiStack200[0];\n            break;\n        case 0x2c:\n            if (*(arg3 + 0x12) != 0) {\n                iVar13 = *(arg1 + 0x100);\n                pcVar19 = \"_Sat \";\n                do {\n                    cVar25 = *pcVar19;\n                    if (iVar13 == 0xff) {\n                        arg1[0xff] = 0;\n                        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                        *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                        iVar14 = 0;\n                        iVar13 = 1;\n                    }\n                    else {\n                        iVar14 = iVar13;\n                        iVar13 = iVar13 + 1;\n                    }\n                    pcVar19 = pcVar19 + 1;\n                    *(arg1 + 0x100) = iVar13;\n                    arg1[iVar14] = cVar25;\n                    arg1[0x108] = cVar25;\n                } while (pcVar19 != \"\");\n            }\n            if (*(arg3[1] + 2) == 0x482c40) {\n                ppiVar10 = *(arg1 + 0x100);\n            }\n            else {\n                fcn.004095c0(arg1, arg2_00, arg3[1]);\n                iVar13 = *(arg1 + 0x100);\n                if (iVar13 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    ppiVar10 = 0x1;\n                    iVar13 = 0;\n                }\n                else {\n                    ppiVar10 = iVar13 + 1;\n                }\n                *(arg1 + 0x100) = ppiVar10;\n                arg1[iVar13] = 0x20;\n                arg1[0x108] = 0x20;\n            }\n            if (*(arg3 + 2) == 0) {\n                pcVar19 = \"_Fract\";\n                do {\n                    cVar25 = *pcVar19;\n                    if (ppiVar10 == 0xff) {\n                        arg1[0xff] = 0;\n                        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                        *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                        appiStack200[0] = NULL;\n                        ppiVar10 = 0x1;\n                    }\n                    else {\n                        appiStack200[0] = ppiVar10;\n                        ppiVar10 = ppiVar10 + 1;\n                    }\n                    pcVar19 = pcVar19 + 1;\n                    *(arg1 + 0x100) = ppiVar10;\n                    arg1[appiStack200[0]] = cVar25;\n                    arg1[0x108] = cVar25;\n                } while (pcVar19 != \"\");\n            }\n            else {\n                pcVar19 = \"_Accum\";\n                do {\n                    cVar25 = *pcVar19;\n                    if (ppiVar10 == 0xff) {\n                        arg1[0xff] = 0;\n                        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                        *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                        appiStack200[0] = NULL;\n                        ppiVar10 = 0x1;\n                    }\n                    else {\n                        appiStack200[0] = ppiVar10;\n                        ppiVar10 = ppiVar10 + 1;\n                    }\n                    pcVar19 = pcVar19 + 1;\n                    *(arg1 + 0x100) = ppiVar10;\n                    arg1[appiStack200[0]] = cVar25;\n                    arg1[0x108] = cVar25;\n                } while (pcVar19 != \"\");\n            }\n            break;\n        case 0x2e:\n        case 0x2f:\n            if (arg3[1] != NULL) {\n                appiStack200[0] = fcn.004095c0(arg1, arg2_00, arg3[1]);\n            }\n            if (arg3[2] != NULL) {\n                uVar11 = *(arg1 + 0x100);\n                if (0xfd < uVar11) {\n                    arg1[uVar11] = 0;\n                    (**(arg1 + 0x110))(arg1, uVar11, *(arg1 + 0x118));\n                    *(arg1 + 0x100) = 0;\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    uVar11 = 0;\n                }\n                puVar20 = 0x481c88;\n                do {\n                    uVar30 = *puVar20;\n                    if (uVar11 == 0xff) {\n                        arg1[0xff] = 0;\n                        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                        *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                        uVar12 = 0;\n                        uVar11 = 1;\n                    }\n                    else {\n                        uVar12 = uVar11;\n                        uVar11 = uVar11 + 1;\n                    }\n                    puVar20 = puVar20 + 1;\n                    *(arg1 + 0x100) = uVar11;\n                    arg1[uVar12] = uVar30;\n                    arg1[0x108] = uVar30;\n                } while (puVar20 != 0x481c8a);\n                iVar28 = *(arg1 + 0x138);\n                appiStack200[0] = fcn.004095c0(arg1, arg2_00, arg3[2]);\n                if ((iVar28 == *(arg1 + 0x138)) && (*(arg1 + 0x100) == uVar11)) {\n                    *(arg1 + 0x100) = uVar11 - 2;\n                }\n            }\n            break;\n        case 0x30:\n            piVar24 = arg3[2];\n            if (arg3[1] != NULL) {\n                fcn.004095c0(arg1, arg2_00, arg3[1]);\n            }\n            iVar13 = *(arg1 + 0x100);\n            if (iVar13 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar14 = 1;\n                iVar13 = 0;\n            }\n            else {\n                iVar14 = iVar13 + 1;\n            }\n            *(arg1 + 0x100) = iVar14;\n            arg1[iVar13] = 0x7b;\n            arg1[0x108] = 0x7b;\n            fcn.004095c0(arg1, arg2_00, piVar24);\n            appiStack200[0] = *(arg1 + 0x100);\n            if (appiStack200[0] == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar13 = 1;\n                appiStack200[0] = NULL;\n            }\n            else {\n                iVar13 = appiStack200[0] + 1;\n            }\n            *(arg1 + 0x100) = iVar13;\n            arg1[appiStack200[0]] = 0x7d;\n            arg1[0x108] = 0x7d;\n            break;\n        case 0x31:\n            piVar24 = arg3[1];\n            iVar13 = *(arg1 + 0x100);\n            pcVar19 = \"operator\";\n            iVar28 = piVar24[4];\n            do {\n                cVar25 = *pcVar19;\n                if (iVar13 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar14 = 0;\n                    iVar13 = 1;\n                }\n                else {\n                    iVar14 = iVar13;\n                    iVar13 = iVar13 + 1;\n                }\n                pcVar19 = pcVar19 + 1;\n                *(arg1 + 0x100) = iVar13;\n                arg1[iVar14] = cVar25;\n                arg1[0x108] = cVar25;\n            } while (pcVar19 != \"\");\n            puVar21 = *(piVar24 + 2);\n            appiStack200[0] = *puVar21 - 0x61;\n            if (*puVar21 - 0x61 < 0x1a) {\n                if (iVar13 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    appiStack200[0] = 0x1;\n                    iVar13 = 0;\n                }\n                else {\n                    appiStack200[0] = iVar13 + 1;\n                }\n                *(arg1 + 0x100) = appiStack200[0];\n                arg1[iVar13] = 0x20;\n                arg1[0x108] = 0x20;\n                puVar21 = *(piVar24 + 2);\n            }\n            iVar13 = iVar28;\n            if (puVar21[iVar13 + -1] == 0x20) {\n                iVar13 = iVar28 + -1;\n            }\n            if (iVar13 != 0) {\n                ppiVar10 = *(arg1 + 0x100);\n                puVar15 = puVar21 + iVar13;\n                do {\n                    uVar1 = *puVar21;\n                    if (ppiVar10 == 0xff) {\n                        arg1[0xff] = 0;\n                        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                        *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                        appiStack200[0] = NULL;\n                        ppiVar10 = 0x1;\n                    }\n                    else {\n                        appiStack200[0] = ppiVar10;\n                        ppiVar10 = ppiVar10 + 1;\n                    }\n                    puVar21 = puVar21 + 1;\n                    *(arg1 + 0x100) = ppiVar10;\n                    arg1[appiStack200[0]] = uVar1;\n                    arg1[0x108] = uVar1;\n                } while (puVar21 != puVar15);\n            }\n            break;\n        case 0x32:\n            iVar13 = *(arg1 + 0x100);\n            pcVar19 = \"operator \";\n            do {\n                cVar25 = *pcVar19;\n                if (iVar13 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar14 = 0;\n                    iVar13 = 1;\n                }\n                else {\n                    iVar14 = iVar13;\n                    iVar13 = iVar13 + 1;\n                }\n                pcVar19 = pcVar19 + 1;\n                *(arg1 + 0x100) = iVar13;\n                arg1[iVar14] = cVar25;\n                arg1[0x108] = cVar25;\n            } while (pcVar19 != \"\");\n            appiStack200[0] = fcn.004095c0(arg1, arg2_00, arg3[2]);\n            break;\n        case 0x33:\n            iVar13 = *(arg1 + 0x100);\n            pcVar19 = \"operator \";\n            do {\n                cVar25 = *pcVar19;\n                if (iVar13 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar14 = 0;\n                    iVar13 = 1;\n                }\n                else {\n                    iVar14 = iVar13;\n                    iVar13 = iVar13 + 1;\n                }\n                pcVar19 = pcVar19 + 1;\n                *(arg1 + 0x100) = iVar13;\n                arg1[iVar14] = cVar25;\n                arg1[0x108] = cVar25;\n            } while (pcVar19 != \"\");\n            appiStack200[0] = fcn.0040a710(arg1, arg2_00, arg3 + 1);\n            break;\n        case 0x34:\n            appiStack200[0] = fcn.0040a990(arg1, arg2_00, arg3[1]);\n            break;\n        case 0x35:\n            piVar24 = arg3[1];\n            piVar18 = arg3[2];\n            bVar31 = *piVar24 == 0x31;\n            if (bVar31) {\n                iVar13 = 3;\n                pcVar19 = **(piVar24 + 2);\n                pcVar23 = pcVar19;\n                pcVar27 = 0x481c9e;\n                do {\n                    if (iVar13 == 0) break;\n                    iVar13 = iVar13 + -1;\n                    bVar31 = *pcVar23 == *pcVar27;\n                    pcVar23 = pcVar23 + 1;\n                    pcVar27 = pcVar27 + 1;\n                } while (bVar31);\n                if ((bVar31) && (*piVar18 == 3)) {\n                    if ((**(piVar18 + 2) == 1) && (**(piVar18 + 4) == 0x29)) {\n                        piVar18 = *(piVar18 + 2);\n                    }\n                }\n                else if (*piVar18 == 0x37) {\n                    fcn.0040aa50(arg1, arg2_00, *(piVar18 + 2));\n                    ppiVar10 = fcn.0040a990(arg1, arg2_00, piVar24);\n                    return ppiVar10;\n                }\n                fcn.0040a990(arg1, arg2_00, piVar24);\n                bVar31 = pcVar19 == NULL;\n                if (!bVar31) {\n                    iVar13 = 3;\n                    pcVar23 = pcVar19;\n                    pcVar27 = 0x481ca1;\n                    do {\n                        if (iVar13 == 0) break;\n                        iVar13 = iVar13 + -1;\n                        bVar31 = *pcVar23 == *pcVar27;\n                        pcVar23 = pcVar23 + 1;\n                        pcVar27 = pcVar27 + 1;\n                    } while (bVar31);\n                    if (bVar31) {\n                        ppiVar10 = fcn.004095c0(arg1, arg2_00, piVar18);\n                        return ppiVar10;\n                    }\n                    iVar13 = 3;\n                    pcVar23 = 0x481adf;\n                    do {\n                        if (iVar13 == 0) break;\n                        iVar13 = iVar13 + -1;\n                        bVar31 = *pcVar19 == *pcVar23;\n                        pcVar19 = pcVar19 + 1;\n                        pcVar23 = pcVar23 + 1;\n                    } while (bVar31);\n                    if (bVar31) {\n                        iVar13 = *(arg1 + 0x100);\n                        if (iVar13 == 0xff) {\n                            arg1[0xff] = 0;\n                            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                            *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                            iVar13 = 0;\n                        }\n                        *(arg1 + 0x100) = iVar13 + 1;\n                        arg1[iVar13] = 0x28;\n                        arg1[0x108] = 0x28;\n                        fcn.004095c0(arg1, arg2_00, piVar18);\n                        ppiVar10 = *(arg1 + 0x100);\n                        if (ppiVar10 == 0xff) {\n                            arg1[0xff] = 0;\n                            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                            *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                            ppiVar10 = NULL;\n                        }\n                        *(arg1 + 0x100) = ppiVar10 + 1;\n                        arg1[ppiVar10] = 0x29;\n                        arg1[0x108] = 0x29;\n                        return ppiVar10;\n                    }\n                }\n            }\n            else if (*piVar24 == 0x33) {\n                iVar13 = *(arg1 + 0x100);\n                if (iVar13 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar14 = 1;\n                    iVar13 = 0;\n                }\n                else {\n                    iVar14 = iVar13 + 1;\n                }\n                *(arg1 + 0x100) = iVar14;\n                arg1[iVar13] = 0x28;\n                arg1[0x108] = 0x28;\n                fcn.0040a710(arg1, arg2_00, piVar24 + 2);\n                iVar13 = *(arg1 + 0x100);\n                if (iVar13 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar14 = 1;\n                    iVar13 = 0;\n                }\n                else {\n                    iVar14 = iVar13 + 1;\n                }\n                *(arg1 + 0x100) = iVar14;\n                arg1[iVar13] = 0x29;\n                arg1[0x108] = 0x29;\n            }\n            else {\n                fcn.0040a990(arg1, arg2_00, piVar24);\n            }\n            appiStack200[0] = fcn.0040aa50(arg1, arg2_00, piVar18);\n            break;\n        case 0x36:\n            appiStack200[0] = arg3[2];\n            if (*appiStack200[0] == 0x37) {\n                puVar22 = arg3[1];\n                ppuVar5 = *(puVar22 + 2);\n                puVar21 = *ppuVar5;\n                if ((puVar21[1] == 99) && ((*puVar21 + 0x9d < 2 || (*puVar21 + 0x8e < 2)))) {\n                    fcn.0040a990(arg1, arg2_00, puVar22);\n                    fcn.00403320(arg1, 0x3c);\n                    fcn.004095c0(arg1, arg2_00, *(arg3[2] + 2));\n                    fcn.00405d20(arg1, 0x481d4e);\n                    fcn.004095c0(arg1, arg2_00, *(arg3[2] + 4));\n                    ppiVar10 = fcn.00403320(arg1, 0x29);\n                    return ppiVar10;\n                }\n                uVar30 = *puVar22 < 0x31;\n                uVar32 = *puVar22 == 0x31;\n                if (uVar32) {\n                    uVar30 = *(ppuVar5 + 2) == 0;\n                    uVar32 = *(ppuVar5 + 2) == 1;\n                    if (uVar32) {\n                        uVar30 = *ppuVar5[1] < 0x3e;\n                        uVar32 = *ppuVar5[1] == 0x3e;\n                        if (uVar32) {\n                            fcn.00403320(arg1, 0x28);\n                            puVar21 = **(arg3[1] + 2);\n                            appiStack200[0] = arg3[2];\n                        }\n                    }\n                }\n                iVar13 = 3;\n                piVar24 = appiStack200[0][1];\n                puVar15 = 0x481ae2;\n                do {\n                    if (iVar13 == 0) break;\n                    iVar13 = iVar13 + -1;\n                    uVar30 = *puVar21 < *puVar15;\n                    uVar32 = *puVar21 == *puVar15;\n                    puVar21 = puVar21 + 1;\n                    puVar15 = puVar15 + 1;\n                } while (uVar32);\n                uVar30 = (!uVar30 && !uVar32) == uVar30;\n                if ((uVar30) && (uVar30 = *piVar24 == 3,  uVar30)) {\n                    uVar30 = **(piVar24 + 4) == 0x29;\n                    if (!uVar30) {\n                        *(arg1 + 0x130) = 1;\n                    }\n                    fcn.0040aa50(arg1, arg2_00, *(piVar24 + 2));\n                }\n                else {\n                    fcn.0040aa50(arg1, arg2_00, piVar24);\n                }\n                iVar13 = 3;\n                pcVar19 = **(arg3[1] + 2);\n                pcVar23 = pcVar19;\n                pcVar27 = 0x481ca4;\n                do {\n                    if (iVar13 == 0) break;\n                    iVar13 = iVar13 + -1;\n                    uVar30 = *pcVar23 == *pcVar27;\n                    pcVar23 = pcVar23 + 1;\n                    pcVar27 = pcVar27 + 1;\n                } while (uVar30);\n                if (uVar30) {\n                    fcn.00403320(arg1, 0x5b);\n                    fcn.004095c0(arg1, arg2_00, *(arg3[2] + 4));\n                    fcn.00403320(arg1, 0x5d);\n                }\n                else {\n                    iVar13 = 3;\n                    pcVar23 = 0x481ae2;\n                    do {\n                        if (iVar13 == 0) break;\n                        iVar13 = iVar13 + -1;\n                        uVar30 = *pcVar19 == *pcVar23;\n                        pcVar19 = pcVar19 + 1;\n                        pcVar23 = pcVar23 + 1;\n                    } while (uVar30);\n                    if (!uVar30) {\n                        fcn.0040a990(arg1, arg2_00, arg3[1]);\n                    }\n                    fcn.0040aa50(arg1, arg2_00, *(arg3[2] + 4));\n                }\n                ppiVar10 = arg3[1];\n                if (*ppiVar10 != 0x31) {\n                    return ppiVar10;\n                }\n                ppiVar10 = ppiVar10[1];\n                if (*(ppiVar10 + 2) != 1) {\n                    return ppiVar10;\n                }\n                if (*ppiVar10[1] != '>') {\n                    return ppiVar10[1];\n                }\n                ppiVar10 = fcn.00403320(arg1, 0x29);\n                return ppiVar10;\n            }\n            goto code_r0x00406c5d;\n        case 0x37:\n            *(arg1 + 0x130) = 1;\n            break;\n        case 0x38:\n            appiStack200[0] = arg3[2];\n            if (*appiStack200[0] == 0x39) {\n                piVar24 = appiStack200[0][2];\n                bVar31 = *piVar24 == 0x3a;\n                if (bVar31) {\n                    piVar18 = arg3[1];\n                    piVar29 = appiStack200[0][1];\n                    iVar14 = 3;\n                    uVar4 = *(piVar24 + 2);\n                    iVar13 = *(piVar24 + 4);\n                    pcVar19 = **(piVar18 + 2);\n                    pcVar23 = 0x481aeb;\n                    do {\n                        if (iVar14 == 0) break;\n                        iVar14 = iVar14 + -1;\n                        bVar31 = *pcVar19 == *pcVar23;\n                        pcVar19 = pcVar19 + 1;\n                        pcVar23 = pcVar23 + 1;\n                    } while (bVar31);\n                    if (bVar31) {\n                        fcn.0040aa50(arg1, arg2_00, piVar29);\n                        fcn.0040a990(arg1, arg2_00, piVar18);\n                        fcn.0040aa50(arg1, arg2_00, uVar4);\n                        fcn.00405d20(arg1, 0x481ca7);\n                        ppiVar10 = fcn.0040aa50(arg1, arg2_00, iVar13);\n                        return ppiVar10;\n                    }\n                    fcn.00405d20(arg1, \"new \");\n                    if (*(piVar29 + 2) != 0) {\n                        fcn.0040aa50(arg1, arg2_00, piVar29);\n                        fcn.00403320(arg1, 0x20);\n                    }\n                    ppiVar10 = fcn.004095c0(arg1, arg2_00, uVar4);\n                    if (iVar13 == 0) {\n                        return ppiVar10;\n                    }\n                    ppiVar10 = fcn.0040aa50(arg1, arg2_00, iVar13);\n                    return ppiVar10;\n                }\n            }\ncode_r0x00406c5d:\n            *(arg1 + 0x130) = 1;\n            break;\n        case 0x39:\n        case 0x3a:\n            *(arg1 + 0x130) = 1;\n            break;\n        case 0x3b:\n        case 0x3c:\n            uVar6 = 0;\n            if (*arg3[1] == 0x27) {\n                uVar6 = *(*(arg3[1] + 2) + 0x1c);\n                if (uVar6 != 0) {\n                    if (uVar6 < 7) {\n                        piVar24 = arg3[2];\n                        if (*piVar24 == 0) {\n                            if (uVar7 == 0x3c) {\n                                fcn.00403320(arg1, 0x2d);\n                                piVar24 = arg3[2];\n                            }\n                            fcn.004095c0(arg1, arg2_00, piVar24);\n                            switch(uVar6) {\n                            default:\n                                return *(uVar6 * 4 + 0x481e84) + 0x481e84;\n                            case 2:\n                                ppiVar10 = fcn.00403320(arg1, 0x75);\n                                return ppiVar10;\n                            case 3:\n                                ppiVar10 = fcn.00403320(arg1, 0x6c);\n                                return ppiVar10;\n                            case 4:\n                                ppiVar10 = fcn.00405d20(arg1, 0x481cb0);\n                                return ppiVar10;\n                            case 5:\n                                ppiVar10 = fcn.00405d20(arg1, 0x481cb3);\n                                return ppiVar10;\n                            case 6:\n                                ppiVar10 = fcn.00405d20(arg1, 0x481cb6);\n                                return ppiVar10;\n                            }\n                        }\n                    }\n                    else if ((((uVar6 == 7) && (piVar24 = arg3[2],  *piVar24 == 0)) && (piVar24[4] == 1)) &&\n                            (uVar7 == 0x3b)) {\n                        if (**(piVar24 + 2) == '0') {\n                            ppiVar10 = fcn.00405d20(arg1, \"false\");\n                            return ppiVar10;\n                        }\n                        if (**(piVar24 + 2) == '1') {\n                            ppiVar10 = fcn.00405d20(arg1, \"true\");\n                            return ppiVar10;\n                        }\n                    }\n                }\n            }\n            iVar13 = *(arg1 + 0x100);\n            if (iVar13 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar14 = 1;\n                iVar13 = 0;\n            }\n            else {\n                iVar14 = iVar13 + 1;\n            }\n            *(arg1 + 0x100) = iVar14;\n            arg1[iVar13] = 0x28;\n            arg1[0x108] = 0x28;\n            fcn.004095c0(arg1, arg2_00, arg3[1]);\n            iVar13 = *(arg1 + 0x100);\n            if (iVar13 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                *arg1 = 0x29;\n                arg1[0x108] = 0x29;\n                uVar7 = *arg3;\n                *(arg1 + 0x100) = 1;\n                if (uVar7 == 0x3c) {\n                    iVar14 = 1;\n                    goto code_r0x00408d06;\n                }\n            }\n            else {\n                iVar14 = iVar13 + 1;\n                *(arg1 + 0x100) = iVar14;\n                arg1[iVar13] = 0x29;\n                arg1[0x108] = 0x29;\n                if (*arg3 == 0x3c) {\n                    if (iVar14 == 0xff) {\n                        arg1[0xff] = 0;\n                        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                        *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                        iVar14 = 0;\n                    }\ncode_r0x00408d06:\n                    *(arg1 + 0x100) = iVar14 + 1;\n                    arg1[iVar14] = 0x2d;\n                    arg1[0x108] = 0x2d;\n                }\n            }\n            if (uVar6 == 8) {\n                iVar13 = *(arg1 + 0x100);\n                if (iVar13 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar13 = 0;\n                }\n                *(arg1 + 0x100) = iVar13 + 1;\n                arg1[iVar13] = 0x5b;\n                arg1[0x108] = 0x5b;\n                fcn.004095c0(arg1, arg2_00, arg3[2]);\n                appiStack200[0] = *(arg1 + 0x100);\n                if (appiStack200[0] == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    appiStack200[0] = NULL;\n                }\n                *(arg1 + 0x100) = appiStack200[0] + 1;\n                arg1[appiStack200[0]] = 0x5d;\n                arg1[0x108] = 0x5d;\n            }\n            else {\n                appiStack200[0] = fcn.004095c0(arg1, arg2_00, arg3[2]);\n            }\n            break;\n        case 0x3d:\n            iVar13 = *(arg1 + 0x100);\n            pcVar19 = \"java resource \";\n            do {\n                cVar25 = *pcVar19;\n                if (iVar13 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar14 = 0;\n                    iVar13 = 1;\n                }\n                else {\n                    iVar14 = iVar13;\n                    iVar13 = iVar13 + 1;\n                }\n                pcVar19 = pcVar19 + 1;\n                *(arg1 + 0x100) = iVar13;\n                arg1[iVar14] = cVar25;\n                arg1[0x108] = cVar25;\n            } while (pcVar19 != \"\");\n            appiStack200[0] = fcn.004095c0(arg1, arg2_00, arg3[1]);\n            break;\n        case 0x3e:\n            fcn.004095c0(arg1, arg2_00, arg3[1]);\n            appiStack200[0] = fcn.004095c0(arg1, arg2_00, arg3[2]);\n            break;\n        case 0x3f:\n            appiStack200[0] = *(arg1 + 0x100);\n            uVar7 = *(arg3 + 1);\n            if (appiStack200[0] == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar13 = 1;\n                appiStack200[0] = NULL;\n            }\n            else {\n                iVar13 = appiStack200[0] + 1;\n            }\n            *(arg1 + 0x100) = iVar13;\n            arg1[appiStack200[0]] = uVar7;\n            arg1[0x108] = uVar7;\n            break;\n        case 0x40:\n            puVar22 = &stack0xffffffffffffff38;\n            sub.msvcrt.dll_sprintf(puVar22, 0x481b05, *(arg3 + 1));\n            puVar17 = puVar22;\n            do {\n                puVar16 = puVar17;\n                uVar6 = *puVar16 + 0xfefefeff & ~*puVar16;\n                uVar7 = uVar6 & 0x80808080;\n                puVar17 = puVar16 + 1;\n            } while (uVar7 == 0);\n            bVar31 = (uVar6 & 0x8080) == 0;\n            if (bVar31) {\n                uVar7 = uVar7 >> 0x10;\n            }\n            if (bVar31) {\n                puVar17 = puVar16 + 6;\n            }\n            appiStack200[0] = uVar7 & 0xffffff00;\n            puVar20 = puVar17 + ((-3 - CARRY1(uVar7, uVar7)) - puVar22);\n            if (puVar20 != NULL) {\n                ppiVar10 = *(arg1 + 0x100);\n                puVar17 = puVar20 + puVar22;\n                do {\n                    uVar30 = *puVar22;\n                    if (ppiVar10 == 0xff) {\n                        arg1[0xff] = 0;\n                        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                        *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                        appiStack200[0] = NULL;\n                        ppiVar10 = 0x1;\n                    }\n                    else {\n                        appiStack200[0] = ppiVar10;\n                        ppiVar10 = ppiVar10 + 1;\n                    }\n                    puVar22 = puVar22 + 1;\n                    *(arg1 + 0x100) = ppiVar10;\n                    arg1[appiStack200[0]] = uVar30;\n                    arg1[0x108] = uVar30;\n                } while (puVar22 != puVar17);\n            }\n            break;\n        case 0x41:\n            iVar13 = *(arg1 + 0x100);\n            pcVar19 = \"decltype (\";\n            do {\n                cVar25 = *pcVar19;\n                if (iVar13 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar14 = 0;\n                    iVar13 = 1;\n                }\n                else {\n                    iVar14 = iVar13;\n                    iVar13 = iVar13 + 1;\n                }\n                pcVar19 = pcVar19 + 1;\n                *(arg1 + 0x100) = iVar13;\n                arg1[iVar14] = cVar25;\n                arg1[0x108] = cVar25;\n            } while (pcVar19 != \"\");\n            fcn.004095c0(arg1, arg2_00, arg3[1]);\n            appiStack200[0] = *(arg1 + 0x100);\n            if (appiStack200[0] == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar13 = 1;\n                appiStack200[0] = NULL;\n            }\n            else {\n                iVar13 = appiStack200[0] + 1;\n            }\n            *(arg1 + 0x100) = iVar13;\n            arg1[appiStack200[0]] = 0x29;\n            arg1[0x108] = 0x29;\n            break;\n        case 0x42:\n            iVar13 = *(arg1 + 0x100);\n            pcVar19 = \"global constructors keyed to \";\n            do {\n                cVar25 = *pcVar19;\n                if (iVar13 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar14 = 0;\n                    iVar13 = 1;\n                }\n                else {\n                    iVar14 = iVar13;\n                    iVar13 = iVar13 + 1;\n                }\n                pcVar19 = pcVar19 + 1;\n                *(arg1 + 0x100) = iVar13;\n                arg1[iVar14] = cVar25;\n                arg1[0x108] = cVar25;\n            } while (pcVar19 != \"\");\n            appiStack200[0] = fcn.004095c0(arg1, arg2_00, arg3[1]);\n            break;\n        case 0x43:\n            iVar13 = *(arg1 + 0x100);\n            pcVar19 = \"global destructors keyed to \";\n            do {\n                cVar25 = *pcVar19;\n                if (iVar13 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar14 = 0;\n                    iVar13 = 1;\n                }\n                else {\n                    iVar14 = iVar13;\n                    iVar13 = iVar13 + 1;\n                }\n                pcVar19 = pcVar19 + 1;\n                *(arg1 + 0x100) = iVar13;\n                arg1[iVar14] = cVar25;\n                arg1[0x108] = cVar25;\n            } while (pcVar19 != \"\");\n            appiStack200[0] = fcn.004095c0(arg1, arg2_00, arg3[1]);\n            break;\n        case 0x44:\n            iVar13 = *(arg1 + 0x100);\n            pcVar19 = \"{lambda(\";\n            do {\n                cVar25 = *pcVar19;\n                if (iVar13 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar14 = 0;\n                    iVar13 = 1;\n                }\n                else {\n                    iVar14 = iVar13;\n                    iVar13 = iVar13 + 1;\n                }\n                pcVar19 = pcVar19 + 1;\n                *(arg1 + 0x100) = iVar13;\n                arg1[iVar14] = cVar25;\n                arg1[0x108] = cVar25;\n            } while (pcVar19 != \"\");\n            puVar20 = 0x481d33;\n            fcn.004095c0(arg1, arg2_00, arg3[1]);\n            iVar13 = *(arg1 + 0x100);\n            do {\n                uVar30 = *puVar20;\n                if (iVar13 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar14 = 0;\n                    iVar13 = 1;\n                }\n                else {\n                    iVar14 = iVar13;\n                    iVar13 = iVar13 + 1;\n                }\n                puVar20 = puVar20 + 1;\n                *(arg1 + 0x100) = iVar13;\n                arg1[iVar14] = uVar30;\n                arg1[0x108] = uVar30;\n            } while (puVar20 != 0x481d35);\n            puVar22 = &stack0xffffffffffffff38;\n            sub.msvcrt.dll_sprintf(puVar22, 0x481b05, *(arg3 + 2) + 1);\n            puVar17 = puVar22;\n            do {\n                puVar16 = puVar17;\n                uVar6 = *puVar16 + 0xfefefeff & ~*puVar16;\n                uVar7 = uVar6 & 0x80808080;\n                puVar17 = puVar16 + 1;\n            } while (uVar7 == 0);\n            bVar31 = (uVar6 & 0x8080) == 0;\n            if (bVar31) {\n                uVar7 = uVar7 >> 0x10;\n            }\n            if (bVar31) {\n                puVar17 = puVar16 + 6;\n            }\n            puVar20 = puVar17 + ((-3 - CARRY1(uVar7, uVar7)) - puVar22);\n            if (puVar20 == NULL) {\n                iVar13 = *(arg1 + 0x100);\n            }\n            else {\n                iVar13 = *(arg1 + 0x100);\n                puVar17 = puVar20 + puVar22;\n                do {\n                    uVar30 = *puVar22;\n                    if (iVar13 == 0xff) {\n                        arg1[0xff] = 0;\n                        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                        *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                        iVar14 = 0;\n                        iVar13 = 1;\n                    }\n                    else {\n                        iVar14 = iVar13;\n                        iVar13 = iVar13 + 1;\n                    }\n                    puVar22 = puVar22 + 1;\n                    *(arg1 + 0x100) = iVar13;\n                    arg1[iVar14] = uVar30;\n                    arg1[0x108] = uVar30;\n                } while (puVar22 != puVar17);\n            }\n            if (iVar13 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                appiStack200[0] = 0x1;\n                iVar13 = 0;\n            }\n            else {\n                appiStack200[0] = iVar13 + 1;\n            }\n            *(arg1 + 0x100) = appiStack200[0];\n            arg1[iVar13] = 0x7d;\n            arg1[0x108] = 0x7d;\n            break;\n        default:\n            *(arg1 + 0x130) = 1;\n            break;\n        case 0x46:\n            iVar13 = *(arg1 + 0x100);\n            pcVar19 = \"{unnamed type#\";\n            do {\n                cVar25 = *pcVar19;\n                if (iVar13 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar14 = 0;\n                    iVar13 = 1;\n                }\n                else {\n                    iVar14 = iVar13;\n                    iVar13 = iVar13 + 1;\n                }\n                pcVar19 = pcVar19 + 1;\n                *(arg1 + 0x100) = iVar13;\n                arg1[iVar14] = cVar25;\n                arg1[0x108] = cVar25;\n            } while (pcVar19 != \"\");\n            puVar22 = &stack0xffffffffffffff38;\n            sub.msvcrt.dll_sprintf(puVar22, 0x481b05, *(arg3 + 1) + 1);\n            puVar17 = puVar22;\n            do {\n                puVar16 = puVar17;\n                uVar6 = *puVar16 + 0xfefefeff & ~*puVar16;\n                uVar7 = uVar6 & 0x80808080;\n                puVar17 = puVar16 + 1;\n            } while (uVar7 == 0);\n            bVar31 = (uVar6 & 0x8080) == 0;\n            if (bVar31) {\n                uVar7 = uVar7 >> 0x10;\n            }\n            if (bVar31) {\n                puVar17 = puVar16 + 6;\n            }\n            puVar20 = puVar17 + ((-3 - CARRY1(uVar7, uVar7)) - puVar22);\n            if (puVar20 == NULL) {\n                iVar13 = *(arg1 + 0x100);\n            }\n            else {\n                iVar13 = *(arg1 + 0x100);\n                puVar17 = puVar20 + puVar22;\n                do {\n                    uVar30 = *puVar22;\n                    if (iVar13 == 0xff) {\n                        arg1[0xff] = 0;\n                        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                        *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                        iVar14 = 0;\n                        iVar13 = 1;\n                    }\n                    else {\n                        iVar14 = iVar13;\n                        iVar13 = iVar13 + 1;\n                    }\n                    puVar22 = puVar22 + 1;\n                    *(arg1 + 0x100) = iVar13;\n                    arg1[iVar14] = uVar30;\n                    arg1[0x108] = uVar30;\n                } while (puVar22 != puVar17);\n            }\n            if (iVar13 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                appiStack200[0] = 0x1;\n                iVar13 = 0;\n            }\n            else {\n                appiStack200[0] = iVar13 + 1;\n            }\n            *(arg1 + 0x100) = appiStack200[0];\n            arg1[iVar13] = 0x7d;\n            arg1[0x108] = 0x7d;\n            break;\n        case 0x47:\n            iVar13 = *(arg1 + 0x100);\n            pcVar19 = \"transaction clone for \";\n            do {\n                cVar25 = *pcVar19;\n                if (iVar13 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar14 = 0;\n                    iVar13 = 1;\n                }\n                else {\n                    iVar14 = iVar13;\n                    iVar13 = iVar13 + 1;\n                }\n                pcVar19 = pcVar19 + 1;\n                *(arg1 + 0x100) = iVar13;\n                arg1[iVar14] = cVar25;\n                arg1[0x108] = cVar25;\n            } while (pcVar19 != \"\");\n            appiStack200[0] = fcn.004095c0(arg1, arg2_00, arg3[1]);\n            break;\n        case 0x48:\n            iVar13 = *(arg1 + 0x100);\n            pcVar19 = \"non-transaction clone for \";\n            do {\n                cVar25 = *pcVar19;\n                if (iVar13 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar14 = 0;\n                    iVar13 = 1;\n                }\n                else {\n                    iVar14 = iVar13;\n                    iVar13 = iVar13 + 1;\n                }\n                pcVar19 = pcVar19 + 1;\n                *(arg1 + 0x100) = iVar13;\n                arg1[iVar14] = cVar25;\n                arg1[0x108] = cVar25;\n            } while (pcVar19 != \"\");\n            appiStack200[0] = fcn.004095c0(arg1, arg2_00, arg3[1]);\n            break;\n        case 0x49:\n            ppiVar10 = fcn.00403720(arg1, arg3[1]);\n            if (ppiVar10 == NULL) {\n                fcn.0040aa50(arg1, arg2_00, arg3[1]);\n                appiStack200[0] = fcn.00405d20(arg1, 0x481cdf);\n            }\n            else {\n                iVar28 = 0;\n                do {\n                    if ((*ppiVar10 != 0x2f) || (ppiVar10[1] == NULL)) {\n                        piVar24 = arg3[1];\n                        if (iVar28 == 0) {\n                            return ppiVar10;\n                        }\n                        goto code_r0x004076f5;\n                    }\n                    ppiVar10 = ppiVar10[2];\n                    iVar28 = iVar28 + 1;\n                } while (ppiVar10 != NULL);\n                piVar24 = arg3[1];\ncode_r0x004076f5:\n                iVar26 = 0;\n                do {\n                    *(arg1 + 0x134) = iVar26;\n                    appiStack200[0] = fcn.004095c0(arg1, arg2_00, piVar24);\n                    if (iVar26 < iVar28 + -1) {\n                        ppiVar10 = *(arg1 + 0x100);\n                        puVar20 = 0x481c88;\n                        do {\n                            uVar30 = *puVar20;\n                            if (ppiVar10 == 0xff) {\n                                arg1[0xff] = 0;\n                                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                                appiStack200[0] = NULL;\n                                ppiVar10 = 0x1;\n                            }\n                            else {\n                                appiStack200[0] = ppiVar10;\n                                ppiVar10 = ppiVar10 + 1;\n                            }\n                            puVar20 = puVar20 + 1;\n                            *(arg1 + 0x100) = ppiVar10;\n                            arg1[appiStack200[0]] = uVar30;\n                            arg1[0x108] = uVar30;\n                        } while (puVar20 != 0x481c8a);\n                    }\n                    iVar26 = iVar26 + 1;\n                } while (iVar26 != iVar28);\n            }\n            break;\n        case 0x4a:\n            pcVar19 = \"[abi:\";\n            fcn.004095c0(arg1, arg2_00, arg3[1]);\n            iVar13 = *(arg1 + 0x100);\n            do {\n                cVar25 = *pcVar19;\n                if (iVar13 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar14 = 0;\n                    iVar13 = 1;\n                }\n                else {\n                    iVar14 = iVar13;\n                    iVar13 = iVar13 + 1;\n                }\n                pcVar19 = pcVar19 + 1;\n                *(arg1 + 0x100) = iVar13;\n                arg1[iVar14] = cVar25;\n                arg1[0x108] = cVar25;\n            } while (pcVar19 != \"\");\n            fcn.004095c0(arg1, arg2_00, arg3[2]);\n            appiStack200[0] = *(arg1 + 0x100);\n            if (appiStack200[0] == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar13 = 1;\n                appiStack200[0] = NULL;\n            }\n            else {\n                iVar13 = appiStack200[0] + 1;\n            }\n            *(arg1 + 0x100) = iVar13;\n            arg1[appiStack200[0]] = 0x5d;\n            arg1[0x108] = 0x5d;\n            break;\n        case 0x4b:\n            pcVar19 = \" [clone \";\n            fcn.004095c0(arg1, arg2_00, arg3[1]);\n            iVar13 = *(arg1 + 0x100);\n            do {\n                cVar25 = *pcVar19;\n                if (iVar13 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar14 = 0;\n                    iVar13 = 1;\n                }\n                else {\n                    iVar14 = iVar13;\n                    iVar13 = iVar13 + 1;\n                }\n                pcVar19 = pcVar19 + 1;\n                *(arg1 + 0x100) = iVar13;\n                arg1[iVar14] = cVar25;\n                arg1[0x108] = cVar25;\n            } while (pcVar19 != \"\");\n            fcn.004095c0(arg1, arg2_00, arg3[2]);\n            appiStack200[0] = *(arg1 + 0x100);\n            if (appiStack200[0] == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar13 = 1;\n                appiStack200[0] = NULL;\n            }\n            else {\n                iVar13 = appiStack200[0] + 1;\n            }\n            *(arg1 + 0x100) = iVar13;\n            arg1[appiStack200[0]] = 0x5d;\n            arg1[0x108] = 0x5d;\n        }\n        return appiStack200[0];\n    case 0x409995:\n        if ((arg2 & 4) == 0) {\n            ppiVar10 = *(arg1 + 0x100);\n            if (ppiVar10 == 0xff) {\n                arg1[0xff] = 0;\n                apiStack184[11] = 0x409da8;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar13 = 1;\n                ppiVar10 = NULL;\n            }\n            else {\n                iVar13 = ppiVar10 + 1;\n            }\n            *(arg1 + 0x100) = iVar13;\n            arg1[ppiVar10] = 0x2a;\n            arg1[0x108] = 0x2a;\n        }\n        break;\n    case 0x4099d0:\n        ppiVar10 = *(arg1 + 0x100);\ncode_r0x004097fa:\n        if (ppiVar10 == 0xff) {\n            arg1[0xff] = 0;\n            apiStack184[11] = 0x409c70;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n            iVar13 = 1;\n            ppiVar10 = NULL;\n        }\n        else {\n            iVar13 = ppiVar10 + 1;\n        }\n        *(arg1 + 0x100) = iVar13;\n        arg1[ppiVar10] = 0x26;\n        arg1[0x108] = 0x26;\n        return ppiVar10;\n    case 0x4099e0:\n        ppiVar9 = *(arg1 + 0x100);\ncode_r0x004098da:\n        puVar20 = 0x481ebb;\n        do {\n            uVar30 = *puVar20;\n            if (ppiVar9 == 0xff) {\n                arg1[0xff] = 0;\n                apiStack184[11] = 0x40993d;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                ppiVar10 = NULL;\n                ppiVar9 = 0x1;\n            }\n            else {\n                ppiVar10 = ppiVar9;\n                ppiVar9 = ppiVar9 + 1;\n            }\n            puVar20 = puVar20 + 1;\n            *(arg1 + 0x100) = ppiVar9;\n            arg1[ppiVar10] = uVar30;\n            arg1[0x108] = uVar30;\n        } while (puVar20 != 0x481ebd);\n        break;\n    case 0x4099f0:\n        ppiVar9 = *(arg1 + 0x100);\n        pcVar19 = \"complex \";\n        do {\n            cVar25 = *pcVar19;\n            if (ppiVar9 == 0xff) {\n                arg1[0xff] = 0;\n                apiStack184[11] = 0x409a5d;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                ppiVar10 = NULL;\n                ppiVar9 = 0x1;\n            }\n            else {\n                ppiVar10 = ppiVar9;\n                ppiVar9 = ppiVar9 + 1;\n            }\n            pcVar19 = pcVar19 + 1;\n            *(arg1 + 0x100) = ppiVar9;\n            arg1[ppiVar10] = cVar25;\n            arg1[0x108] = cVar25;\n        } while (pcVar19 != \"\");\n        break;\n    case 0x409a70:\n        ppiVar9 = *(arg1 + 0x100);\n        pcVar19 = \"imaginary \";\n        do {\n            cVar25 = *pcVar19;\n            if (ppiVar9 == 0xff) {\n                arg1[0xff] = 0;\n                apiStack184[11] = 0x409add;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                ppiVar10 = NULL;\n                ppiVar9 = 0x1;\n            }\n            else {\n                ppiVar10 = ppiVar9;\n                ppiVar9 = ppiVar9 + 1;\n            }\n            pcVar19 = pcVar19 + 1;\n            *(arg1 + 0x100) = ppiVar9;\n            arg1[ppiVar10] = cVar25;\n            arg1[0x108] = cVar25;\n        } while (pcVar19 != \"\");\n        break;\n    case 0x409af0:\n        if (arg1[0x108] != '(') {\n            iVar13 = *(arg1 + 0x100);\n            if (iVar13 == 0xff) {\n                arg1[0xff] = 0;\n                apiStack184[11] = 0x409d79;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar14 = 1;\n                iVar13 = 0;\n            }\n            else {\n                iVar14 = iVar13 + 1;\n            }\n            *(arg1 + 0x100) = iVar14;\n            arg1[iVar13] = 0x20;\n            arg1[0x108] = 0x20;\n        }\n        if (arg3[1] == NULL) {\n            *(arg1 + 0x130) = 1;\n        }\n        else if (*(arg1 + 0x130) == 0) {\n            apiStack184[11] = 0x409c4f;\n            fcn.00405dc0(arg1, arg2_00, arg3[1]);\n        }\n        ppiVar9 = *(arg1 + 0x100);\n        puVar20 = 0x481ed2;\n        do {\n            uVar30 = *puVar20;\n            if (ppiVar9 == 0xff) {\n                arg1[0xff] = 0;\n                apiStack184[11] = 0x409bad;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                ppiVar10 = NULL;\n                ppiVar9 = 0x1;\n            }\n            else {\n                ppiVar10 = ppiVar9;\n                ppiVar9 = ppiVar9 + 1;\n            }\n            puVar20 = puVar20 + 1;\n            *(arg1 + 0x100) = ppiVar9;\n            arg1[ppiVar10] = uVar30;\n            arg1[0x108] = uVar30;\n        } while (puVar20 != 0x481ed5);\n        break;\n    case 0x409bc0:\n        goto code_r0x00409bc0;\n    }\n    return ppiVar10;\n}\n",
        "token_count": 31178
    },
    "0040a710": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0040a710(int64_t arg1, uint64_t arg2, int32_t **arg3)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong uStack56;\n    int32_t *piStack48;\n    \n    if (**arg3 == 4) {\n        uStack56 = *(arg1 + 0x120);\n        uVar1 = *(arg1 + 0x128);\n        *(arg1 + 0x128) = 0;\n        *(arg1 + 0x120) = &uStack56;\n        piStack48 = *arg3;\n        if (*(piStack48 + 2) == 0) {\n            *(arg1 + 0x130) = 1;\n        }\n        else if (*(arg1 + 0x130) == 0) {\n            fcn.00405dc0(arg1, arg2 & 0xffffffff, *(piStack48 + 2));\n        }\n        *(arg1 + 0x120) = uStack56;\n        if (*(arg1 + 0x108) == '<') {\n            iVar3 = *(arg1 + 0x100);\n            if (iVar3 == 0xff) {\n                *(arg1 + 0xff) = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar2 = 1;\n                iVar3 = 0;\n            }\n            else {\n                iVar2 = iVar3 + 1;\n            }\n            *(arg1 + 0x100) = iVar2;\n            *(arg1 + iVar3) = 0x20;\n            *(arg1 + 0x108) = 0x20;\n        }\n        else {\n            iVar2 = *(arg1 + 0x100);\n        }\n        if (iVar2 == 0xff) {\n            *(arg1 + 0xff) = 0;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n            iVar3 = 1;\n            iVar2 = 0;\n        }\n        else {\n            iVar3 = iVar2 + 1;\n        }\n        *(arg1 + 0x100) = iVar3;\n        *(arg1 + iVar2) = 0x3c;\n        *(arg1 + 0x108) = 0x3c;\n        if (*(*arg3 + 4) == 0) {\n            *(arg1 + 0x130) = 1;\n        }\n        else if (*(arg1 + 0x130) == 0) {\n            fcn.00405dc0(arg1, arg2 & 0xffffffff, *(*arg3 + 4));\n            iVar3 = *(arg1 + 0x100);\n            if (*(arg1 + 0x108) == '>') {\n                if (iVar3 == 0xff) {\n                    *(arg1 + 0xff) = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar3 = 1;\n                    iVar2 = 0;\n                }\n                else {\n                    iVar2 = iVar3;\n                    iVar3 = iVar3 + 1;\n                }\n                *(arg1 + 0x100) = iVar3;\n                *(arg1 + iVar2) = 0x20;\n                *(arg1 + 0x108) = 0x20;\n            }\n        }\n        if (iVar3 == 0xff) {\n            *(arg1 + 0xff) = 0;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n            iVar2 = 1;\n            iVar3 = 0;\n        }\n        else {\n            iVar2 = iVar3 + 1;\n        }\n        *(arg1 + 0x100) = iVar2;\n        *(arg1 + iVar3) = 0x3e;\n        *(arg1 + 0x108) = 0x3e;\n        *(arg1 + 0x128) = uVar1;\n        return;\n    }\n    if (*(arg1 + 0x130) != 0) {\n        return;\n    }\n    fcn.00405dc0(arg1, arg2, *arg3);\n    return;\n}\n",
        "token_count": 1060
    },
    "0040a990": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t ** fcn.0040a990(uchar *arg1, ulong arg2, int32_t **arg3)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    ulong arg3_00;\n    ulong *puVar3;\n    ulong uVar4;\n    uint8_t **ppuVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t **ppiVar8;\n    int32_t **ppiVar9;\n    int32_t **ppiVar10;\n    int32_t **in_RAX;\n    int32_t **ppiVar11;\n    uint64_t uVar12;\n    uint64_t uVar13;\n    int64_t iVar14;\n    uint64_t arg2_00;\n    uint8_t *puVar15;\n    uint32_t *puVar16;\n    uint32_t *puVar17;\n    int32_t *piVar18;\n    char *pcVar19;\n    uchar *puVar20;\n    uint8_t *puVar21;\n    uint32_t *puVar22;\n    char *pcVar23;\n    int32_t *piVar24;\n    int64_t iVar25;\n    char cVar26;\n    int32_t iVar27;\n    char *pcVar28;\n    int32_t iVar29;\n    int32_t *piVar30;\n    uchar uVar31;\n    bool bVar32;\n    uchar uVar33;\n    int32_t **ppiStack216;\n    int32_t *piStack208;\n    int32_t **appiStack200 [2];\n    int32_t *apiStack184 [18];\n    \n    if (*arg3 == 0x31) {\n        ppiVar9 = arg3[1];\n        iVar29 = *(ppiVar9 + 2);\n        piVar24 = ppiVar9[1];\n        if (iVar29 != 0) {\n            ppiVar10 = *(arg1 + 0x100);\n            iVar25 = 1;\n            do {\n                uVar31 = *(piVar24 + iVar25 + -1);\n                if (ppiVar10 == 0xff) {\n                    arg1[0xff] = 0;\n                    apiStack184[13] = 0x40aa3e;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    ppiVar9 = NULL;\n                    ppiVar10 = 0x1;\n                }\n                else {\n                    ppiVar9 = ppiVar10;\n                    ppiVar10 = ppiVar10 + 1;\n                }\n                iVar25 = iVar25 + 1;\n                *(arg1 + 0x100) = ppiVar10;\n                arg1[ppiVar9] = uVar31;\n                arg1[0x108] = uVar31;\n            } while (iVar25 != iVar29 + 1);\n        }\n        return ppiVar9;\n    }\n    if (*(arg1 + 0x130) != 0) {\n        return in_RAX;\n    }\n    uVar7 = *arg3;\n    ppiVar9 = uVar7;\n    arg2_00 = arg2;\n    if (0x4b < uVar7) {\ncode_r0x00407aa3:\n        *(arg1 + 0x130) = 1;\n        return ppiVar9;\n    }\n    switch(*(uVar7 * 4 + 0x481d54) + 0x481d54) {\n    case 0x405e00:\ncode_r0x00405e00:\n        appiStack200[0] = *(arg1 + 0x128);\ncode_r0x00405e07:\n        *(arg1 + 0x128) = &stack0xffffffffffffff38;\n        apiStack184[1] = *(arg1 + 0x120);\n        appiStack200[1] = arg3;\ncode_r0x00405e31:\n        piVar24 = appiStack200[1][1];\ncode_r0x00405e35:\n        ppiVar9 = appiStack200[1];\n        apiStack184[0]._0_4_ = 0;\n        fcn.004095c0(arg1, arg2_00, piVar24);\n        if (apiStack184[0] == 0) {\n            fcn.004095f0(arg1, arg2, ppiVar9);\n        }\n        *(arg1 + 0x128) = appiStack200[0];\n        ppiVar9 = appiStack200[0];\n        break;\n    case 0x405e74:\n        appiStack200[0] = *(arg1 + 0x128);\n        ppiVar9 = appiStack200[0];\n        if (appiStack200[0] == NULL) {\n            appiStack200[0] = NULL;\n        }\n        else {\n            do {\n                if (*(ppiVar9 + 2) == 0) {\n                    if (2 < *ppiVar9[1] - 0x19U) break;\n                    if (uVar7 == *ppiVar9[1]) {\n                        ppiVar9 = fcn.004095c0(arg1, arg2_00, arg3[1]);\n                        return ppiVar9;\n                    }\n                }\n                ppiVar9 = *ppiVar9;\n            } while (ppiVar9 != NULL);\n        }\n        goto code_r0x00405e07;\n    case 0x405ec0:\n        uVar7 = *(arg3 + 2);\n        piVar24 = arg3[1];\n        if (uVar7 != 0) {\n            ppiVar10 = *(arg1 + 0x100);\n            iVar25 = 1;\n            do {\n                uVar31 = *(piVar24 + iVar25 + -1);\n                if (ppiVar10 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    ppiVar9 = NULL;\n                    ppiVar10 = 0x1;\n                }\n                else {\n                    ppiVar9 = ppiVar10;\n                    ppiVar10 = ppiVar10 + 1;\n                }\n                iVar25 = iVar25 + 1;\n                *(arg1 + 0x100) = ppiVar10;\n                arg1[ppiVar9] = uVar31;\n                arg1[0x108] = uVar31;\n            } while (iVar25 != uVar7 + 1);\n        }\n        break;\n    case 0x405f40:\n        iVar25 = *(arg1 + 0x100);\n        pcVar19 = \"hidden alias for \";\n        do {\n            cVar26 = *pcVar19;\n            if (iVar25 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar14 = 0;\n                iVar25 = 1;\n            }\n            else {\n                iVar14 = iVar25;\n                iVar25 = iVar25 + 1;\n            }\n            pcVar19 = pcVar19 + 1;\n            *(arg1 + 0x100) = iVar25;\n            arg1[iVar14] = cVar26;\n            arg1[0x108] = cVar26;\n        } while (pcVar19 != \"\");\n        ppiVar9 = fcn.004095c0(arg1, arg2_00, arg3[1]);\n        break;\n    case 0x405fc0:\n        iVar25 = *(arg1 + 0x100);\n        pcVar19 = \"TLS wrapper function for \";\n        do {\n            cVar26 = *pcVar19;\n            if (iVar25 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar14 = 0;\n                iVar25 = 1;\n            }\n            else {\n                iVar14 = iVar25;\n                iVar25 = iVar25 + 1;\n            }\n            pcVar19 = pcVar19 + 1;\n            *(arg1 + 0x100) = iVar25;\n            arg1[iVar14] = cVar26;\n            arg1[0x108] = cVar26;\n        } while (pcVar19 != \"\");\n        ppiVar9 = fcn.004095c0(arg1, arg2_00, arg3[1]);\n        break;\n    case 0x406040:\n        iVar25 = *(arg1 + 0x100);\n        pcVar19 = \"reference temporary #\";\n        do {\n            cVar26 = *pcVar19;\n            if (iVar25 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar14 = 0;\n                iVar25 = 1;\n            }\n            else {\n                iVar14 = iVar25;\n                iVar25 = iVar25 + 1;\n            }\n            pcVar19 = pcVar19 + 1;\n            *(arg1 + 0x100) = iVar25;\n            arg1[iVar14] = cVar26;\n            arg1[0x108] = cVar26;\n        } while (pcVar19 != \"\");\n        pcVar19 = \" for \";\n        fcn.004095c0(arg1, arg2_00, arg3[2]);\n        iVar25 = *(arg1 + 0x100);\n        do {\n            cVar26 = *pcVar19;\n            if (iVar25 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar14 = 0;\n                iVar25 = 1;\n            }\n            else {\n                iVar14 = iVar25;\n                iVar25 = iVar25 + 1;\n            }\n            pcVar19 = pcVar19 + 1;\n            *(arg1 + 0x100) = iVar25;\n            arg1[iVar14] = cVar26;\n            arg1[0x108] = cVar26;\n        } while (pcVar19 != \"\");\n        ppiVar9 = fcn.004095c0(arg1, arg2_00, arg3[1]);\n        break;\n    case 0x4060c0:\n        iVar25 = *(arg1 + 0x100);\n        pcVar19 = \"TLS init function for \";\n        do {\n            cVar26 = *pcVar19;\n            if (iVar25 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar14 = 0;\n                iVar25 = 1;\n            }\n            else {\n                iVar14 = iVar25;\n                iVar25 = iVar25 + 1;\n            }\n            pcVar19 = pcVar19 + 1;\n            *(arg1 + 0x100) = iVar25;\n            arg1[iVar14] = cVar26;\n            arg1[0x108] = cVar26;\n        } while (pcVar19 != \"\");\n        ppiVar9 = fcn.004095c0(arg1, arg2_00, arg3[1]);\n        break;\n    case 0x406140:\n        iVar25 = *(arg1 + 0x100);\n        pcVar19 = \"guard variable for \";\n        do {\n            cVar26 = *pcVar19;\n            if (iVar25 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar14 = 0;\n                iVar25 = 1;\n            }\n            else {\n                iVar14 = iVar25;\n                iVar25 = iVar25 + 1;\n            }\n            pcVar19 = pcVar19 + 1;\n            *(arg1 + 0x100) = iVar25;\n            arg1[iVar14] = cVar26;\n            arg1[0x108] = cVar26;\n        } while (pcVar19 != \"\");\n        ppiVar9 = fcn.004095c0(arg1, arg2_00, arg3[1]);\n        break;\n    case 0x4061c0:\n        iVar25 = *(arg1 + 0x100);\n        pcVar19 = \"covariant return thunk to \";\n        do {\n            cVar26 = *pcVar19;\n            if (iVar25 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar14 = 0;\n                iVar25 = 1;\n            }\n            else {\n                iVar14 = iVar25;\n                iVar25 = iVar25 + 1;\n            }\n            pcVar19 = pcVar19 + 1;\n            *(arg1 + 0x100) = iVar25;\n            arg1[iVar14] = cVar26;\n            arg1[0x108] = cVar26;\n        } while (pcVar19 != \"\");\n        ppiVar9 = fcn.004095c0(arg1, arg2_00, arg3[1]);\n        break;\n    case 0x406240:\n        iVar25 = *(arg1 + 0x100);\n        pcVar19 = \"java Class for \";\n        do {\n            cVar26 = *pcVar19;\n            if (iVar25 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar14 = 0;\n                iVar25 = 1;\n            }\n            else {\n                iVar14 = iVar25;\n                iVar25 = iVar25 + 1;\n            }\n            pcVar19 = pcVar19 + 1;\n            *(arg1 + 0x100) = iVar25;\n            arg1[iVar14] = cVar26;\n            arg1[0x108] = cVar26;\n        } while (pcVar19 != \"\");\n        ppiVar9 = fcn.004095c0(arg1, arg2_00, arg3[1]);\n        break;\n    case 0x4062c0:\n        iVar25 = *(arg1 + 0x100);\n        pcVar19 = \"virtual thunk to \";\n        do {\n            cVar26 = *pcVar19;\n            if (iVar25 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar14 = 0;\n                iVar25 = 1;\n            }\n            else {\n                iVar14 = iVar25;\n                iVar25 = iVar25 + 1;\n            }\n            pcVar19 = pcVar19 + 1;\n            *(arg1 + 0x100) = iVar25;\n            arg1[iVar14] = cVar26;\n            arg1[0x108] = cVar26;\n        } while (pcVar19 != \"\");\n        ppiVar9 = fcn.004095c0(arg1, arg2_00, arg3[1]);\n        break;\n    case 0x406340:\n        iVar25 = *(arg1 + 0x100);\n        pcVar19 = \"non-virtual thunk to \";\n        do {\n            cVar26 = *pcVar19;\n            if (iVar25 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar14 = 0;\n                iVar25 = 1;\n            }\n            else {\n                iVar14 = iVar25;\n                iVar25 = iVar25 + 1;\n            }\n            pcVar19 = pcVar19 + 1;\n            *(arg1 + 0x100) = iVar25;\n            arg1[iVar14] = cVar26;\n            arg1[0x108] = cVar26;\n        } while (pcVar19 != \"\");\n        ppiVar9 = fcn.004095c0(arg1, arg2_00, arg3[1]);\n        break;\n    case 0x4063c0:\n        iVar25 = *(arg1 + 0x100);\n        pcVar19 = \"typeinfo name for \";\n        do {\n            cVar26 = *pcVar19;\n            if (iVar25 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar14 = 0;\n                iVar25 = 1;\n            }\n            else {\n                iVar14 = iVar25;\n                iVar25 = iVar25 + 1;\n            }\n            pcVar19 = pcVar19 + 1;\n            *(arg1 + 0x100) = iVar25;\n            arg1[iVar14] = cVar26;\n            arg1[0x108] = cVar26;\n        } while (pcVar19 != \"\");\n        ppiVar9 = fcn.004095c0(arg1, arg2_00, arg3[1]);\n        break;\n    case 0x406440:\n        iVar25 = *(arg1 + 0x100);\n        pcVar19 = \"typeinfo fn for \";\n        do {\n            cVar26 = *pcVar19;\n            if (iVar25 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar14 = 0;\n                iVar25 = 1;\n            }\n            else {\n                iVar14 = iVar25;\n                iVar25 = iVar25 + 1;\n            }\n            pcVar19 = pcVar19 + 1;\n            *(arg1 + 0x100) = iVar25;\n            arg1[iVar14] = cVar26;\n            arg1[0x108] = cVar26;\n        } while (pcVar19 != \"\");\n        ppiVar9 = fcn.004095c0(arg1, arg2_00, arg3[1]);\n        break;\n    case 0x4064c0:\n        iVar25 = *(arg1 + 0x100);\n        pcVar19 = \"typeinfo for \";\n        do {\n            cVar26 = *pcVar19;\n            if (iVar25 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar14 = 0;\n                iVar25 = 1;\n            }\n            else {\n                iVar14 = iVar25;\n                iVar25 = iVar25 + 1;\n            }\n            pcVar19 = pcVar19 + 1;\n            *(arg1 + 0x100) = iVar25;\n            arg1[iVar14] = cVar26;\n            arg1[0x108] = cVar26;\n        } while (pcVar19 != \"\");\n        ppiVar9 = fcn.004095c0(arg1, arg2_00, arg3[1]);\n        break;\n    case 0x406540:\n        iVar25 = *(arg1 + 0x100);\n        pcVar19 = \"construction vtable for \";\n        do {\n            cVar26 = *pcVar19;\n            if (iVar25 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar14 = 0;\n                iVar25 = 1;\n            }\n            else {\n                iVar14 = iVar25;\n                iVar25 = iVar25 + 1;\n            }\n            pcVar19 = pcVar19 + 1;\n            *(arg1 + 0x100) = iVar25;\n            arg1[iVar14] = cVar26;\n            arg1[0x108] = cVar26;\n        } while (pcVar19 != \"\");\n        pcVar19 = \"-in-\";\n        fcn.004095c0(arg1, arg2_00, arg3[1]);\n        iVar25 = *(arg1 + 0x100);\n        do {\n            cVar26 = *pcVar19;\n            if (iVar25 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar14 = 0;\n                iVar25 = 1;\n            }\n            else {\n                iVar14 = iVar25;\n                iVar25 = iVar25 + 1;\n            }\n            pcVar19 = pcVar19 + 1;\n            *(arg1 + 0x100) = iVar25;\n            arg1[iVar14] = cVar26;\n            arg1[0x108] = cVar26;\n        } while (pcVar19 != \"\");\n        ppiVar9 = fcn.004095c0(arg1, arg2_00, arg3[2]);\n        break;\n    case 0x4065c0:\n        iVar25 = *(arg1 + 0x100);\n        pcVar19 = \"vtable for \";\n        do {\n            cVar26 = *pcVar19;\n            if (iVar25 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar14 = 0;\n                iVar25 = 1;\n            }\n            else {\n                iVar14 = iVar25;\n                iVar25 = iVar25 + 1;\n            }\n            pcVar19 = pcVar19 + 1;\n            *(arg1 + 0x100) = iVar25;\n            arg1[iVar14] = cVar26;\n            arg1[0x108] = cVar26;\n        } while (pcVar19 != \"\");\n        ppiVar9 = fcn.004095c0(arg1, arg2_00, arg3[1]);\n        break;\n    case 0x406640:\n        iVar25 = *(arg1 + 0x100);\n        pcVar19 = \"VTT for \";\n        do {\n            cVar26 = *pcVar19;\n            if (iVar25 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar14 = 0;\n                iVar25 = 1;\n            }\n            else {\n                iVar14 = iVar25;\n                iVar25 = iVar25 + 1;\n            }\n            pcVar19 = pcVar19 + 1;\n            *(arg1 + 0x100) = iVar25;\n            arg1[iVar14] = cVar26;\n            arg1[0x108] = cVar26;\n        } while (pcVar19 != \"\");\n        ppiVar9 = fcn.004095c0(arg1, arg2_00, arg3[1]);\n        break;\n    case 0x4066c0:\n        iVar25 = *(arg1 + 0x100);\n        if (iVar25 == 0xff) {\n            arg1[0xff] = 0;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n            iVar14 = 1;\n            iVar25 = 0;\n        }\n        else {\n            iVar14 = iVar25 + 1;\n        }\n        *(arg1 + 0x100) = iVar14;\n        arg1[iVar25] = 0x7e;\n        arg1[0x108] = 0x7e;\n        ppiVar9 = fcn.004095c0(arg1, arg2_00, arg3[2]);\n        break;\n    case 0x406700:\n        ppiVar9 = fcn.004095c0(arg1, arg2_00, arg3[2]);\n        break;\n    case 0x406713:\n        uVar4 = *(arg1 + 0x128);\n        *(arg1 + 0x128) = 0;\n        piVar24 = arg3[1];\n        if (piVar24 == NULL) {\ncode_r0x00408f7e:\n            *(arg1 + 0x130) = 1;\n        }\n        else {\n            ppiVar10 = *(arg1 + 0x120);\n            uVar7 = 0;\n            ppiVar9 = &stack0xffffffffffffff38;\n            ppiVar11 = NULL;\n            do {\n                ppiVar8 = ppiVar9;\n                *ppiVar8 = ppiVar11;\n                iVar29 = *piVar24;\n                uVar7 = uVar7 + 1;\n                *(arg1 + 0x128) = ppiVar8;\n                ppiVar8[1] = piVar24;\n                *(ppiVar8 + 2) = 0;\n                ppiVar8[3] = ppiVar10;\n                if (4 < iVar29 - 0x1cU) {\n                    if (iVar29 == 4) {\n                        *(arg1 + 0x120) = &stack0xffffffffffffff28;\n                        ppiStack216 = ppiVar10;\n                        piStack208 = piVar24;\n                    }\n                    else if (iVar29 == 2) {\n                        piVar18 = *(piVar24 + 4);\n                        iVar29 = *piVar18;\n                        if (iVar29 != 0x45) goto code_r0x00406804;\n                        while( true ) {\n                            piVar18 = *(piVar18 + 2);\n                            iVar29 = *piVar18;\ncode_r0x00406804:\n                            if (4 < iVar29 - 0x1cU) break;\n                            if (uVar7 == 4) {\n                                *(arg1 + 0x130) = 1;\n                                return iVar29 - 0x1cU;\n                            }\n                            uVar6 = uVar7 - 1;\n                            uVar12 = uVar7;\n                            uVar7 = uVar7 + 1;\n                            iVar14 = uVar12 * 0x20;\n                            iVar25 = uVar6 * 0x20;\n                            *(&stack0xffffffffffffff38 + iVar14) = *(&stack0xffffffffffffff38 + iVar25);\n                            *(&stack0xffffffffffffff40 + iVar14) = *(&stack0xffffffffffffff40 + iVar25);\n                            *(&stack0xffffffffffffff48 + iVar14) = *(&stack0xffffffffffffff48 + iVar25);\n                            *(&stack0xffffffffffffff50 + iVar14) = *(&stack0xffffffffffffff50 + iVar25);\n                            *(&stack0xffffffffffffff38 + iVar14) = &stack0xffffffffffffff38 + uVar6 * 4 * 8;\n                            *(&stack0xffffffffffffff40 + iVar25) = piVar18;\n                            *(arg1 + 0x128) = &stack0xffffffffffffff38 + uVar12 * 4 * 8;\n                            *(&stack0xffffffffffffff48 + iVar25) = 0;\n                            *(&stack0xffffffffffffff50 + iVar25) = ppiVar10;\n                        }\n                    }\n                    ppiVar9 = fcn.004095c0(arg1, arg2_00, arg3[2]);\n                    if (*piVar24 == 4) {\n                        *(arg1 + 0x120) = ppiStack216;\n                        ppiVar9 = ppiStack216;\n                    }\n                    while (uVar7 != 0) {\n                        uVar7 = uVar7 - 1;\n                        uVar12 = uVar7;\n                        ppiVar9 = uVar12 * 0x20;\n                        if (*(&stack0xffffffffffffff48 + uVar12 * 0x20) == 0) {\n                            iVar25 = *(arg1 + 0x100);\n                            if (iVar25 == 0xff) {\n                                arg1[0xff] = 0;\n                                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                                iVar25 = 0;\n                            }\n                            arg3_00 = *(&stack0xffffffffffffff40 + uVar12 * 0x20);\n                            *(arg1 + 0x100) = iVar25 + 1;\n                            arg1[iVar25] = 0x20;\n                            arg1[0x108] = 0x20;\n                            ppiVar9 = fcn.004095f0(arg1, arg2_00, arg3_00);\n                        }\n                    }\n                    *(arg1 + 0x128) = uVar4;\n                    return ppiVar9;\n                }\n                piVar24 = *(piVar24 + 2);\n                ppiVar9 = ppiVar8;\n                if (piVar24 == NULL) goto code_r0x00408f7e;\n                ppiVar9 = ppiVar8 + 4;\n                ppiVar11 = ppiVar8;\n            } while (uVar7 != 4);\n            *(arg1 + 0x130) = 1;\n        }\n        break;\n    case 0x406882:\n        fcn.004095c0(arg1, arg2_00, arg3[1]);\n        iVar25 = *(arg1 + 0x100);\n        if ((arg2 & 4) == 0) {\n            puVar20 = 0x481af4;\n            do {\n                uVar31 = *puVar20;\n                if (iVar25 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar14 = 0;\n                    iVar25 = 1;\n                }\n                else {\n                    iVar14 = iVar25;\n                    iVar25 = iVar25 + 1;\n                }\n                puVar20 = puVar20 + 1;\n                *(arg1 + 0x100) = iVar25;\n                arg1[iVar14] = uVar31;\n                arg1[0x108] = uVar31;\n            } while (puVar20 != 0x481af6);\n        }\n        else {\n            if (iVar25 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar14 = 1;\n                iVar25 = 0;\n            }\n            else {\n                iVar14 = iVar25 + 1;\n            }\n            *(arg1 + 0x100) = iVar14;\n            arg1[iVar25] = 0x2e;\n            arg1[0x108] = 0x2e;\n        }\n        piVar24 = arg3[2];\n        if (*piVar24 == 0x45) {\n            iVar25 = *(arg1 + 0x100);\n            pcVar19 = \"{default arg#\";\n            do {\n                cVar26 = *pcVar19;\n                if (iVar25 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar14 = 0;\n                    iVar25 = 1;\n                }\n                else {\n                    iVar14 = iVar25;\n                    iVar25 = iVar25 + 1;\n                }\n                pcVar19 = pcVar19 + 1;\n                *(arg1 + 0x100) = iVar25;\n                arg1[iVar14] = cVar26;\n                arg1[0x108] = cVar26;\n            } while (pcVar19 != \"\");\n            puVar22 = &stack0xffffffffffffff38;\n            sub.msvcrt.dll_sprintf(puVar22, 0x481b05, piVar24[4] + 1);\n            puVar17 = puVar22;\n            do {\n                puVar16 = puVar17;\n                uVar6 = *puVar16 + 0xfefefeff & ~*puVar16;\n                uVar7 = uVar6 & 0x80808080;\n                puVar17 = puVar16 + 1;\n            } while (uVar7 == 0);\n            bVar32 = (uVar6 & 0x8080) == 0;\n            if (bVar32) {\n                uVar7 = uVar7 >> 0x10;\n            }\n            if (bVar32) {\n                puVar17 = puVar16 + 6;\n            }\n            puVar20 = puVar17 + ((-3 - CARRY1(uVar7, uVar7)) - puVar22);\n            if (puVar20 == NULL) {\n                iVar25 = *(arg1 + 0x100);\n            }\n            else {\n                puVar17 = puVar20 + puVar22;\n                iVar14 = *(arg1 + 0x100);\n                do {\n                    uVar31 = *puVar22;\n                    if (iVar14 == 0xff) {\n                        arg1[0xff] = 0;\n                        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                        *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                        iVar25 = 1;\n                        iVar14 = 0;\n                    }\n                    else {\n                        iVar25 = iVar14 + 1;\n                    }\n                    puVar22 = puVar22 + 1;\n                    *(arg1 + 0x100) = iVar25;\n                    arg1[iVar14] = uVar31;\n                    arg1[0x108] = uVar31;\n                    iVar14 = iVar25;\n                } while (puVar22 != puVar17);\n            }\n            puVar20 = 0x481b09;\n            do {\n                uVar31 = *puVar20;\n                if (iVar25 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar14 = 0;\n                    iVar25 = 1;\n                }\n                else {\n                    iVar14 = iVar25;\n                    iVar25 = iVar25 + 1;\n                }\n                puVar20 = puVar20 + 1;\n                *(arg1 + 0x100) = iVar25;\n                arg1[iVar14] = uVar31;\n                arg1[0x108] = uVar31;\n            } while (puVar20 != 0x481b0c);\n            piVar24 = *(piVar24 + 2);\n        }\n        ppiVar9 = fcn.004095c0(arg1, arg2_00, piVar24);\n        break;\n    case 0x406910:\n        if ((arg2 & 4) == 0) {\n            uVar7 = *(arg3 + 2);\n            piVar24 = arg3[1];\n            if (uVar7 != 0) {\n                ppiVar10 = *(arg1 + 0x100);\n                iVar25 = 1;\n                do {\n                    uVar31 = *(piVar24 + iVar25 + -1);\n                    if (ppiVar10 == 0xff) {\n                        arg1[0xff] = 0;\n                        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                        *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                        ppiVar9 = NULL;\n                        ppiVar10 = 0x1;\n                    }\n                    else {\n                        ppiVar9 = ppiVar10;\n                        ppiVar10 = ppiVar10 + 1;\n                    }\n                    iVar25 = iVar25 + 1;\n                    *(arg1 + 0x100) = ppiVar10;\n                    arg1[ppiVar9] = uVar31;\n                    arg1[0x108] = uVar31;\n                } while (iVar25 != uVar7 + 1);\n            }\n        }\n        else {\n            piVar24 = arg3[1];\n            piVar18 = piVar24 + *(arg3 + 2);\n            while (piVar24 < piVar18) {\n                cVar26 = *piVar24;\n                if (((3 < piVar18 - piVar24) && (cVar26 == '_')) &&\n                   ((*(piVar24 + 1) == '_' && ((*(piVar24 + 2) == 'U' && (piVar30 = piVar24 + 3,  piVar30 < piVar18)))))\n                   ) {\n                    uVar7 = 0;\n                    do {\n                        cVar2 = *piVar30;\n                        iVar29 = cVar2;\n                        if (cVar2 - 0x30U < 10) {\n                            iVar29 = iVar29 + -0x30;\n                        }\n                        else if (cVar2 + 0xbfU < 6) {\n                            iVar29 = iVar29 + -0x37;\n                        }\n                        else {\n                            if (5 < cVar2 + 0x9fU) {\n                                cVar26 = '_';\n                                if (((piVar18 <= piVar30) || (cVar2 != '_')) || (cVar26 = cVar2,  0xff < uVar7))\n                                goto code_r0x00408830;\n                                if (*(arg1 + 0x100) == 0xff) {\n                                    arg1[0xff] = 0;\n                                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                                    *(arg1 + 0x100) = 0;\n                                }\n                                ppiVar9 = *(arg1 + 0x100);\n                                *(arg1 + 0x100) = ppiVar9 + 1;\n                                arg1[ppiVar9] = uVar7;\n                                arg1[0x108] = uVar7;\n                                goto code_r0x00408859;\n                            }\n                            iVar29 = iVar29 + -0x57;\n                        }\n                        piVar30 = piVar30 + 1;\n                        uVar7 = uVar7 * 0x10 + iVar29;\n                    } while (piVar30 != piVar18);\n                    cVar26 = '_';\n                }\ncode_r0x00408830:\n                ppiVar9 = *(arg1 + 0x100);\n                if (ppiVar9 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar25 = 1;\n                    ppiVar9 = NULL;\n                }\n                else {\n                    iVar25 = ppiVar9 + 1;\n                }\n                *(arg1 + 0x100) = iVar25;\n                arg1[ppiVar9] = cVar26;\n                arg1[0x108] = cVar26;\n                piVar30 = piVar24;\ncode_r0x00408859:\n                piVar24 = piVar30 + 1;\n            }\n        }\n        break;\n    case 0x4069a0:\n        pcVar19 = \" [clone \";\n        fcn.004095c0(arg1, arg2_00, arg3[1]);\n        iVar25 = *(arg1 + 0x100);\n        do {\n            cVar26 = *pcVar19;\n            if (iVar25 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar14 = 0;\n                iVar25 = 1;\n            }\n            else {\n                iVar14 = iVar25;\n                iVar25 = iVar25 + 1;\n            }\n            pcVar19 = pcVar19 + 1;\n            *(arg1 + 0x100) = iVar25;\n            arg1[iVar14] = cVar26;\n            arg1[0x108] = cVar26;\n        } while (pcVar19 != \"\");\n        fcn.004095c0(arg1, arg2_00, arg3[2]);\n        ppiVar9 = *(arg1 + 0x100);\n        if (ppiVar9 == 0xff) {\n            arg1[0xff] = 0;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n            iVar25 = 1;\n            ppiVar9 = NULL;\n        }\n        else {\n            iVar25 = ppiVar9 + 1;\n        }\n        *(arg1 + 0x100) = iVar25;\n        arg1[ppiVar9] = 0x5d;\n        arg1[0x108] = 0x5d;\n        break;\n    case 0x406a22:\n        pcVar19 = \"[abi:\";\n        fcn.004095c0(arg1, arg2_00, arg3[1]);\n        iVar25 = *(arg1 + 0x100);\n        do {\n            cVar26 = *pcVar19;\n            if (iVar25 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar14 = 0;\n                iVar25 = 1;\n            }\n            else {\n                iVar14 = iVar25;\n                iVar25 = iVar25 + 1;\n            }\n            pcVar19 = pcVar19 + 1;\n            *(arg1 + 0x100) = iVar25;\n            arg1[iVar14] = cVar26;\n            arg1[0x108] = cVar26;\n        } while (pcVar19 != \"\");\n        fcn.004095c0(arg1, arg2_00, arg3[2]);\n        ppiVar9 = *(arg1 + 0x100);\n        if (ppiVar9 == 0xff) {\n            arg1[0xff] = 0;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n            iVar25 = 1;\n            ppiVar9 = NULL;\n        }\n        else {\n            iVar25 = ppiVar9 + 1;\n        }\n        *(arg1 + 0x100) = iVar25;\n        arg1[ppiVar9] = 0x5d;\n        arg1[0x108] = 0x5d;\n        break;\n    case 0x406ab0:\n        ppiVar9 = fcn.004036b0(arg1, arg3 + 1);\n        if (ppiVar9 != NULL) {\n            if (*ppiVar9 != 0x2f) {\ncode_r0x00406ace:\n                puVar3 = *(arg1 + 0x120);\n                *(arg1 + 0x120) = *puVar3;\n                ppiVar9 = fcn.004095c0(arg1, arg2_00, ppiVar9);\n                *(arg1 + 0x120) = puVar3;\n                return ppiVar9;\n            }\n            iVar29 = *(arg1 + 0x134);\n            while (0 < iVar29) {\n                ppiVar9 = ppiVar9[2];\n                iVar29 = iVar29 + -1;\n                if ((ppiVar9 == NULL) || (*ppiVar9 != 0x2f)) goto code_r0x0040859a;\n            }\n            if ((iVar29 == 0) && (ppiVar9 = ppiVar9[1],  ppiVar9 != NULL)) goto code_r0x00406ace;\n        }\ncode_r0x0040859a:\n        *(arg1 + 0x130) = 1;\n        break;\n    case 0x406b00:\n        uVar4 = *(arg1 + 0x128);\n        *(arg1 + 0x128) = 0;\n        piVar24 = arg3[1];\n        if ((((arg2 & 4) == 0) || (*piVar24 != 0)) || (bVar32 = piVar24[4] == 6,  !bVar32)) {\ncode_r0x00406b2f:\n            fcn.004095c0(arg1, arg2_00, piVar24);\n            if (arg1[0x108] == '<') {\n                iVar25 = *(arg1 + 0x100);\n                if (iVar25 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar25 = 0;\n                }\n                iVar14 = iVar25 + 1;\n                *(arg1 + 0x100) = iVar14;\n                arg1[iVar25] = 0x20;\n                arg1[0x108] = 0x20;\n            }\n            else {\n                iVar14 = *(arg1 + 0x100);\n            }\n            if (iVar14 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar25 = 1;\n                iVar14 = 0;\n            }\n            else {\n                iVar25 = iVar14 + 1;\n            }\n            *(arg1 + 0x100) = iVar25;\n            arg1[iVar14] = 0x3c;\n            arg1[0x108] = 0x3c;\n            fcn.004095c0(arg1, arg2_00, arg3[2]);\n            if (arg1[0x108] == '>') {\n                iVar25 = *(arg1 + 0x100);\n                if (iVar25 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar25 = 0;\n                }\n                ppiVar9 = iVar25 + 1;\n                *(arg1 + 0x100) = ppiVar9;\n                arg1[iVar25] = 0x20;\n                arg1[0x108] = 0x20;\n            }\n            else {\n                ppiVar9 = *(arg1 + 0x100);\n            }\n            if (ppiVar9 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar25 = 1;\n                ppiVar9 = NULL;\n            }\n            else {\n                iVar25 = ppiVar9 + 1;\n            }\n            *(arg1 + 0x100) = iVar25;\n            arg1[ppiVar9] = 0x3e;\n            arg1[0x108] = 0x3e;\n        }\n        else {\n            iVar25 = 6;\n            pcVar19 = *(piVar24 + 2);\n            pcVar23 = \"JArray\";\n            do {\n                if (iVar25 == 0) break;\n                iVar25 = iVar25 + -1;\n                bVar32 = *pcVar19 == *pcVar23;\n                pcVar19 = pcVar19 + 1;\n                pcVar23 = pcVar23 + 1;\n            } while (bVar32);\n            if (!bVar32) goto code_r0x00406b2f;\n            fcn.004095c0(arg1, arg2_00, arg3[2]);\n            ppiVar9 = fcn.00405d20(arg1, 0x481b14);\n        }\n        *(arg1 + 0x128) = uVar4;\n        break;\n    case 0x406bc0:\n        uVar7 = *(arg3 + 1);\n        ppiVar10 = *(arg1 + 0x100);\n        if (uVar7 == 0) {\n            pcVar19 = \"this\";\n            do {\n                cVar26 = *pcVar19;\n                if (ppiVar10 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    ppiVar9 = NULL;\n                    ppiVar10 = 0x1;\n                }\n                else {\n                    ppiVar9 = ppiVar10;\n                    ppiVar10 = ppiVar10 + 1;\n                }\n                pcVar19 = pcVar19 + 1;\n                *(arg1 + 0x100) = ppiVar10;\n                arg1[ppiVar9] = cVar26;\n                arg1[0x108] = cVar26;\n            } while (pcVar19 != \"\");\n        }\n        else {\n            pcVar19 = \"{parm#\";\n            do {\n                cVar26 = *pcVar19;\n                if (ppiVar10 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    ppiVar9 = NULL;\n                    ppiVar10 = 0x1;\n                }\n                else {\n                    ppiVar9 = ppiVar10;\n                    ppiVar10 = ppiVar10 + 1;\n                }\n                pcVar19 = pcVar19 + 1;\n                *(arg1 + 0x100) = ppiVar10;\n                arg1[ppiVar9] = cVar26;\n                arg1[0x108] = cVar26;\n            } while (pcVar19 != \"\");\n            puVar22 = &stack0xffffffffffffff38;\n            sub.msvcrt.dll_sprintf(puVar22, 0x481b05, uVar7);\n            puVar17 = puVar22;\n            do {\n                puVar16 = puVar17;\n                uVar6 = *puVar16 + 0xfefefeff & ~*puVar16;\n                uVar7 = uVar6 & 0x80808080;\n                puVar17 = puVar16 + 1;\n            } while (uVar7 == 0);\n            bVar32 = (uVar6 & 0x8080) == 0;\n            if (bVar32) {\n                uVar7 = uVar7 >> 0x10;\n            }\n            if (bVar32) {\n                puVar17 = puVar16 + 6;\n            }\n            puVar20 = puVar17 + ((-3 - CARRY1(uVar7, uVar7)) - puVar22);\n            if (puVar20 == NULL) {\n                iVar25 = *(arg1 + 0x100);\n            }\n            else {\n                iVar25 = *(arg1 + 0x100);\n                puVar17 = puVar20 + puVar22;\n                do {\n                    uVar31 = *puVar22;\n                    if (iVar25 == 0xff) {\n                        arg1[0xff] = 0;\n                        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                        *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                        iVar14 = 0;\n                        iVar25 = 1;\n                    }\n                    else {\n                        iVar14 = iVar25;\n                        iVar25 = iVar25 + 1;\n                    }\n                    puVar22 = puVar22 + 1;\n                    *(arg1 + 0x100) = iVar25;\n                    arg1[iVar14] = uVar31;\n                    arg1[0x108] = uVar31;\n                } while (puVar22 != puVar17);\n            }\n            if (iVar25 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                ppiVar9 = 0x1;\n                iVar25 = 0;\n            }\n            else {\n                ppiVar9 = iVar25 + 1;\n            }\n            *(arg1 + 0x100) = ppiVar9;\n            arg1[iVar25] = 0x7d;\n            arg1[0x108] = 0x7d;\n        }\n        break;\n    case 0x406c41:\n        *(arg1 + 0x130) = 1;\n        break;\n    case 0x406c50:\n        ppiVar9 = arg3[2];\n        if (*ppiVar9 == 0x37) {\n            puVar22 = arg3[1];\n            ppuVar5 = *(puVar22 + 2);\n            puVar21 = *ppuVar5;\n            if ((puVar21[1] == 99) && ((*puVar21 + 0x9d < 2 || (*puVar21 + 0x8e < 2)))) {\n                fcn.0040a990(arg1, arg2_00, puVar22);\n                fcn.00403320(arg1, 0x3c);\n                fcn.004095c0(arg1, arg2_00, *(arg3[2] + 2));\n                fcn.00405d20(arg1, 0x481d4e);\n                fcn.004095c0(arg1, arg2_00, *(arg3[2] + 4));\n                ppiVar9 = fcn.00403320(arg1, 0x29);\n                return ppiVar9;\n            }\n            uVar31 = *puVar22 < 0x31;\n            uVar33 = *puVar22 == 0x31;\n            if (uVar33) {\n                uVar31 = *(ppuVar5 + 2) == 0;\n                uVar33 = *(ppuVar5 + 2) == 1;\n                if (uVar33) {\n                    uVar31 = *ppuVar5[1] < 0x3e;\n                    uVar33 = *ppuVar5[1] == 0x3e;\n                    if (uVar33) {\n                        fcn.00403320(arg1, 0x28);\n                        puVar21 = **(arg3[1] + 2);\n                        ppiVar9 = arg3[2];\n                    }\n                }\n            }\n            iVar25 = 3;\n            piVar24 = ppiVar9[1];\n            puVar15 = 0x481ae2;\n            do {\n                if (iVar25 == 0) break;\n                iVar25 = iVar25 + -1;\n                uVar31 = *puVar21 < *puVar15;\n                uVar33 = *puVar21 == *puVar15;\n                puVar21 = puVar21 + 1;\n                puVar15 = puVar15 + 1;\n            } while (uVar33);\n            uVar31 = (!uVar31 && !uVar33) == uVar31;\n            if ((uVar31) && (uVar31 = *piVar24 == 3,  uVar31)) {\n                uVar31 = **(piVar24 + 4) == 0x29;\n                if (!uVar31) {\n                    *(arg1 + 0x130) = 1;\n                }\n                fcn.0040aa50(arg1, arg2_00, *(piVar24 + 2));\n            }\n            else {\n                fcn.0040aa50(arg1, arg2_00, piVar24);\n            }\n            iVar25 = 3;\n            pcVar19 = **(arg3[1] + 2);\n            pcVar23 = pcVar19;\n            pcVar28 = 0x481ca4;\n            do {\n                if (iVar25 == 0) break;\n                iVar25 = iVar25 + -1;\n                uVar31 = *pcVar23 == *pcVar28;\n                pcVar23 = pcVar23 + 1;\n                pcVar28 = pcVar28 + 1;\n            } while (uVar31);\n            if (uVar31) {\n                fcn.00403320(arg1, 0x5b);\n                fcn.004095c0(arg1, arg2_00, *(arg3[2] + 4));\n                fcn.00403320(arg1, 0x5d);\n            }\n            else {\n                iVar25 = 3;\n                pcVar23 = 0x481ae2;\n                do {\n                    if (iVar25 == 0) break;\n                    iVar25 = iVar25 + -1;\n                    uVar31 = *pcVar19 == *pcVar23;\n                    pcVar19 = pcVar19 + 1;\n                    pcVar23 = pcVar23 + 1;\n                } while (uVar31);\n                if (!uVar31) {\n                    fcn.0040a990(arg1, arg2_00, arg3[1]);\n                }\n                fcn.0040aa50(arg1, arg2_00, *(arg3[2] + 4));\n            }\n            ppiVar9 = arg3[1];\n            if (*ppiVar9 != 0x31) {\n                return ppiVar9;\n            }\n            ppiVar9 = ppiVar9[1];\n            if (*(ppiVar9 + 2) != 1) {\n                return ppiVar9;\n            }\n            if (*ppiVar9[1] != '>') {\n                return ppiVar9[1];\n            }\n            ppiVar9 = fcn.00403320(arg1, 0x29);\n            return ppiVar9;\n        }\n        goto code_r0x00406c5d;\n    case 0x406c70:\n        piVar24 = arg3[1];\n        piVar18 = arg3[2];\n        bVar32 = *piVar24 == 0x31;\n        if (bVar32) {\n            iVar25 = 3;\n            pcVar19 = **(piVar24 + 2);\n            pcVar23 = pcVar19;\n            pcVar28 = 0x481c9e;\n            do {\n                if (iVar25 == 0) break;\n                iVar25 = iVar25 + -1;\n                bVar32 = *pcVar23 == *pcVar28;\n                pcVar23 = pcVar23 + 1;\n                pcVar28 = pcVar28 + 1;\n            } while (bVar32);\n            if ((bVar32) && (*piVar18 == 3)) {\n                if ((**(piVar18 + 2) == 1) && (**(piVar18 + 4) == 0x29)) {\n                    piVar18 = *(piVar18 + 2);\n                }\n            }\n            else if (*piVar18 == 0x37) {\n                fcn.0040aa50(arg1, arg2_00, *(piVar18 + 2));\n                ppiVar9 = fcn.0040a990(arg1, arg2_00, piVar24);\n                return ppiVar9;\n            }\n            fcn.0040a990(arg1, arg2_00, piVar24);\n            bVar32 = pcVar19 == NULL;\n            if (!bVar32) {\n                iVar25 = 3;\n                pcVar23 = pcVar19;\n                pcVar28 = 0x481ca1;\n                do {\n                    if (iVar25 == 0) break;\n                    iVar25 = iVar25 + -1;\n                    bVar32 = *pcVar23 == *pcVar28;\n                    pcVar23 = pcVar23 + 1;\n                    pcVar28 = pcVar28 + 1;\n                } while (bVar32);\n                if (bVar32) {\n                    ppiVar9 = fcn.004095c0(arg1, arg2_00, piVar18);\n                    return ppiVar9;\n                }\n                iVar25 = 3;\n                pcVar23 = 0x481adf;\n                do {\n                    if (iVar25 == 0) break;\n                    iVar25 = iVar25 + -1;\n                    bVar32 = *pcVar19 == *pcVar23;\n                    pcVar19 = pcVar19 + 1;\n                    pcVar23 = pcVar23 + 1;\n                } while (bVar32);\n                if (bVar32) {\n                    iVar25 = *(arg1 + 0x100);\n                    if (iVar25 == 0xff) {\n                        arg1[0xff] = 0;\n                        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                        *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                        iVar25 = 0;\n                    }\n                    *(arg1 + 0x100) = iVar25 + 1;\n                    arg1[iVar25] = 0x28;\n                    arg1[0x108] = 0x28;\n                    fcn.004095c0(arg1, arg2_00, piVar18);\n                    ppiVar9 = *(arg1 + 0x100);\n                    if (ppiVar9 == 0xff) {\n                        arg1[0xff] = 0;\n                        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                        *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                        ppiVar9 = NULL;\n                    }\n                    *(arg1 + 0x100) = ppiVar9 + 1;\n                    arg1[ppiVar9] = 0x29;\n                    arg1[0x108] = 0x29;\n                    return ppiVar9;\n                }\n            }\n        }\n        else if (*piVar24 == 0x33) {\n            iVar25 = *(arg1 + 0x100);\n            if (iVar25 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar14 = 1;\n                iVar25 = 0;\n            }\n            else {\n                iVar14 = iVar25 + 1;\n            }\n            *(arg1 + 0x100) = iVar14;\n            arg1[iVar25] = 0x28;\n            arg1[0x108] = 0x28;\n            fcn.0040a710(arg1, arg2_00, piVar24 + 2);\n            iVar25 = *(arg1 + 0x100);\n            if (iVar25 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar14 = 1;\n                iVar25 = 0;\n            }\n            else {\n                iVar14 = iVar25 + 1;\n            }\n            *(arg1 + 0x100) = iVar14;\n            arg1[iVar25] = 0x29;\n            arg1[0x108] = 0x29;\n        }\n        else {\n            fcn.0040a990(arg1, arg2_00, piVar24);\n        }\n        ppiVar9 = fcn.0040aa50(arg1, arg2_00, piVar18);\n        break;\n    case 0x406cb0:\n        ppiVar9 = fcn.0040a990(arg1, arg2_00, arg3[1]);\n        break;\n    case 0x406cc3:\n        iVar25 = *(arg1 + 0x100);\n        pcVar19 = \"operator \";\n        do {\n            cVar26 = *pcVar19;\n            if (iVar25 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar14 = 0;\n                iVar25 = 1;\n            }\n            else {\n                iVar14 = iVar25;\n                iVar25 = iVar25 + 1;\n            }\n            pcVar19 = pcVar19 + 1;\n            *(arg1 + 0x100) = iVar25;\n            arg1[iVar14] = cVar26;\n            arg1[0x108] = cVar26;\n        } while (pcVar19 != \"\");\n        ppiVar9 = fcn.0040a710(arg1, arg2_00, arg3 + 1);\n        break;\n    case 0x406d40:\n        piVar24 = arg3[1];\n        iVar25 = *(arg1 + 0x100);\n        pcVar19 = \"operator\";\n        iVar29 = piVar24[4];\n        do {\n            cVar26 = *pcVar19;\n            if (iVar25 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar14 = 0;\n                iVar25 = 1;\n            }\n            else {\n                iVar14 = iVar25;\n                iVar25 = iVar25 + 1;\n            }\n            pcVar19 = pcVar19 + 1;\n            *(arg1 + 0x100) = iVar25;\n            arg1[iVar14] = cVar26;\n            arg1[0x108] = cVar26;\n        } while (pcVar19 != \"\");\n        puVar21 = *(piVar24 + 2);\n        ppiVar9 = *puVar21 - 0x61;\n        if (*puVar21 - 0x61 < 0x1a) {\n            if (iVar25 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                ppiVar9 = 0x1;\n                iVar25 = 0;\n            }\n            else {\n                ppiVar9 = iVar25 + 1;\n            }\n            *(arg1 + 0x100) = ppiVar9;\n            arg1[iVar25] = 0x20;\n            arg1[0x108] = 0x20;\n            puVar21 = *(piVar24 + 2);\n        }\n        iVar25 = iVar29;\n        if (puVar21[iVar25 + -1] == 0x20) {\n            iVar25 = iVar29 + -1;\n        }\n        if (iVar25 != 0) {\n            ppiVar10 = *(arg1 + 0x100);\n            puVar15 = puVar21 + iVar25;\n            do {\n                uVar1 = *puVar21;\n                if (ppiVar10 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    ppiVar9 = NULL;\n                    ppiVar10 = 0x1;\n                }\n                else {\n                    ppiVar9 = ppiVar10;\n                    ppiVar10 = ppiVar10 + 1;\n                }\n                puVar21 = puVar21 + 1;\n                *(arg1 + 0x100) = ppiVar10;\n                arg1[ppiVar9] = uVar1;\n                arg1[0x108] = uVar1;\n            } while (puVar21 != puVar15);\n        }\n        break;\n    case 0x406dc0:\n        iVar25 = *(arg1 + 0x100);\n        pcVar19 = \"operator \";\n        do {\n            cVar26 = *pcVar19;\n            if (iVar25 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar14 = 0;\n                iVar25 = 1;\n            }\n            else {\n                iVar14 = iVar25;\n                iVar25 = iVar25 + 1;\n            }\n            pcVar19 = pcVar19 + 1;\n            *(arg1 + 0x100) = iVar25;\n            arg1[iVar14] = cVar26;\n            arg1[0x108] = cVar26;\n        } while (pcVar19 != \"\");\n        ppiVar9 = fcn.004095c0(arg1, arg2_00, arg3[2]);\n        break;\n    case 0x406e40:\n        piVar24 = arg3[2];\n        if (arg3[1] != NULL) {\n            fcn.004095c0(arg1, arg2_00, arg3[1]);\n        }\n        iVar25 = *(arg1 + 0x100);\n        if (iVar25 == 0xff) {\n            arg1[0xff] = 0;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n            iVar14 = 1;\n            iVar25 = 0;\n        }\n        else {\n            iVar14 = iVar25 + 1;\n        }\n        *(arg1 + 0x100) = iVar14;\n        arg1[iVar25] = 0x7b;\n        arg1[0x108] = 0x7b;\n        fcn.004095c0(arg1, arg2_00, piVar24);\n        ppiVar9 = *(arg1 + 0x100);\n        if (ppiVar9 == 0xff) {\n            arg1[0xff] = 0;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n            iVar25 = 1;\n            ppiVar9 = NULL;\n        }\n        else {\n            iVar25 = ppiVar9 + 1;\n        }\n        *(arg1 + 0x100) = iVar25;\n        arg1[ppiVar9] = 0x7d;\n        arg1[0x108] = 0x7d;\n        break;\n    case 0x406ec0:\n        if (arg3[1] != NULL) {\n            ppiVar9 = fcn.004095c0(arg1, arg2_00, arg3[1]);\n        }\n        if (arg3[2] != NULL) {\n            uVar12 = *(arg1 + 0x100);\n            if (0xfd < uVar12) {\n                arg1[uVar12] = 0;\n                (**(arg1 + 0x110))(arg1, uVar12, *(arg1 + 0x118));\n                *(arg1 + 0x100) = 0;\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                uVar12 = 0;\n            }\n            puVar20 = 0x481c88;\n            do {\n                uVar31 = *puVar20;\n                if (uVar12 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    uVar13 = 0;\n                    uVar12 = 1;\n                }\n                else {\n                    uVar13 = uVar12;\n                    uVar12 = uVar12 + 1;\n                }\n                puVar20 = puVar20 + 1;\n                *(arg1 + 0x100) = uVar12;\n                arg1[uVar13] = uVar31;\n                arg1[0x108] = uVar31;\n            } while (puVar20 != 0x481c8a);\n            iVar29 = *(arg1 + 0x138);\n            ppiVar9 = fcn.004095c0(arg1, arg2_00, arg3[2]);\n            if ((iVar29 == *(arg1 + 0x138)) && (*(arg1 + 0x100) == uVar12)) {\n                *(arg1 + 0x100) = uVar12 - 2;\n            }\n        }\n        break;\n    case 0x406f61:\n        if (*(arg3 + 0x12) != 0) {\n            iVar25 = *(arg1 + 0x100);\n            pcVar19 = \"_Sat \";\n            do {\n                cVar26 = *pcVar19;\n                if (iVar25 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar14 = 0;\n                    iVar25 = 1;\n                }\n                else {\n                    iVar14 = iVar25;\n                    iVar25 = iVar25 + 1;\n                }\n                pcVar19 = pcVar19 + 1;\n                *(arg1 + 0x100) = iVar25;\n                arg1[iVar14] = cVar26;\n                arg1[0x108] = cVar26;\n            } while (pcVar19 != \"\");\n        }\n        if (*(arg3[1] + 2) == 0x482c40) {\n            ppiVar10 = *(arg1 + 0x100);\n        }\n        else {\n            fcn.004095c0(arg1, arg2_00, arg3[1]);\n            iVar25 = *(arg1 + 0x100);\n            if (iVar25 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                ppiVar10 = 0x1;\n                iVar25 = 0;\n            }\n            else {\n                ppiVar10 = iVar25 + 1;\n            }\n            *(arg1 + 0x100) = ppiVar10;\n            arg1[iVar25] = 0x20;\n            arg1[0x108] = 0x20;\n        }\n        if (*(arg3 + 2) == 0) {\n            pcVar19 = \"_Fract\";\n            do {\n                cVar26 = *pcVar19;\n                if (ppiVar10 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    ppiVar9 = NULL;\n                    ppiVar10 = 0x1;\n                }\n                else {\n                    ppiVar9 = ppiVar10;\n                    ppiVar10 = ppiVar10 + 1;\n                }\n                pcVar19 = pcVar19 + 1;\n                *(arg1 + 0x100) = ppiVar10;\n                arg1[ppiVar9] = cVar26;\n                arg1[0x108] = cVar26;\n            } while (pcVar19 != \"\");\n        }\n        else {\n            pcVar19 = \"_Accum\";\n            do {\n                cVar26 = *pcVar19;\n                if (ppiVar10 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    ppiVar9 = NULL;\n                    ppiVar10 = 0x1;\n                }\n                else {\n                    ppiVar9 = ppiVar10;\n                    ppiVar10 = ppiVar10 + 1;\n                }\n                pcVar19 = pcVar19 + 1;\n                *(arg1 + 0x100) = ppiVar10;\n                arg1[ppiVar9] = cVar26;\n                arg1[0x108] = cVar26;\n            } while (pcVar19 != \"\");\n        }\n        break;\n    case 0x407030:\n        iVar25 = *(arg1 + 0x100);\n        pcVar19 = \"decltype (\";\n        do {\n            cVar26 = *pcVar19;\n            if (iVar25 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar14 = 0;\n                iVar25 = 1;\n            }\n            else {\n                iVar14 = iVar25;\n                iVar25 = iVar25 + 1;\n            }\n            pcVar19 = pcVar19 + 1;\n            *(arg1 + 0x100) = iVar25;\n            arg1[iVar14] = cVar26;\n            arg1[0x108] = cVar26;\n        } while (pcVar19 != \"\");\n        fcn.004095c0(arg1, arg2_00, arg3[1]);\n        ppiVar9 = *(arg1 + 0x100);\n        if (ppiVar9 == 0xff) {\n            arg1[0xff] = 0;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n            iVar25 = 1;\n            ppiVar9 = NULL;\n        }\n        else {\n            iVar25 = ppiVar9 + 1;\n        }\n        *(arg1 + 0x100) = iVar25;\n        arg1[ppiVar9] = 0x29;\n        arg1[0x108] = 0x29;\n        break;\n    case 0x4070b0:\n        puVar22 = &stack0xffffffffffffff38;\n        sub.msvcrt.dll_sprintf(puVar22, 0x481b05, *(arg3 + 1));\n        puVar17 = puVar22;\n        do {\n            puVar16 = puVar17;\n            uVar6 = *puVar16 + 0xfefefeff & ~*puVar16;\n            uVar7 = uVar6 & 0x80808080;\n            puVar17 = puVar16 + 1;\n        } while (uVar7 == 0);\n        bVar32 = (uVar6 & 0x8080) == 0;\n        if (bVar32) {\n            uVar7 = uVar7 >> 0x10;\n        }\n        if (bVar32) {\n            puVar17 = puVar16 + 6;\n        }\n        puVar20 = puVar17 + ((-3 - CARRY1(uVar7, uVar7)) - puVar22);\n        ppiVar9 = uVar7 & 0xffffff00;\n        if (puVar20 != NULL) {\n            ppiVar10 = *(arg1 + 0x100);\n            puVar17 = puVar20 + puVar22;\n            do {\n                uVar31 = *puVar22;\n                if (ppiVar10 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    ppiVar9 = NULL;\n                    ppiVar10 = 0x1;\n                }\n                else {\n                    ppiVar9 = ppiVar10;\n                    ppiVar10 = ppiVar10 + 1;\n                }\n                puVar22 = puVar22 + 1;\n                *(arg1 + 0x100) = ppiVar10;\n                arg1[ppiVar9] = uVar31;\n                arg1[0x108] = uVar31;\n            } while (puVar22 != puVar17);\n        }\n        break;\n    case 0x407170:\n        ppiVar9 = *(arg1 + 0x100);\n        uVar7 = *(arg3 + 1);\n        if (ppiVar9 == 0xff) {\n            arg1[0xff] = 0;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n            iVar25 = 1;\n            ppiVar9 = NULL;\n        }\n        else {\n            iVar25 = ppiVar9 + 1;\n        }\n        *(arg1 + 0x100) = iVar25;\n        arg1[ppiVar9] = uVar7;\n        arg1[0x108] = uVar7;\n        break;\n    case 0x4071a2:\n        fcn.004095c0(arg1, arg2_00, arg3[1]);\n        ppiVar9 = fcn.004095c0(arg1, arg2_00, arg3[2]);\n        break;\n    case 0x4071c3:\n        iVar25 = *(arg1 + 0x100);\n        pcVar19 = \"java resource \";\n        do {\n            cVar26 = *pcVar19;\n            if (iVar25 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar14 = 0;\n                iVar25 = 1;\n            }\n            else {\n                iVar14 = iVar25;\n                iVar25 = iVar25 + 1;\n            }\n            pcVar19 = pcVar19 + 1;\n            *(arg1 + 0x100) = iVar25;\n            arg1[iVar14] = cVar26;\n            arg1[0x108] = cVar26;\n        } while (pcVar19 != \"\");\n        ppiVar9 = fcn.004095c0(arg1, arg2_00, arg3[1]);\n        break;\n    case 0x407240:\n        uVar6 = 0;\n        if (*arg3[1] == 0x27) {\n            uVar6 = *(*(arg3[1] + 2) + 0x1c);\n            if (uVar6 != 0) {\n                if (uVar6 < 7) {\n                    piVar24 = arg3[2];\n                    if (*piVar24 == 0) {\n                        if (uVar7 == 0x3c) {\n                            fcn.00403320(arg1, 0x2d);\n                            piVar24 = arg3[2];\n                        }\n                        ppiVar9 = fcn.004095c0(arg1, arg2_00, piVar24);\n                        if (6 < uVar6) {\n                            return ppiVar9;\n                        }\n                        ppiVar9 = *(uVar6 * 4 + 0x481e84) + 0x481e84;\n                        switch(ppiVar9) {\n                        case 0x405e60:\n                            return ppiVar9;\n                        case 0x408e0c:\n                            ppiVar9 = fcn.00405d20(arg1, 0x481cb6);\n                            return ppiVar9;\n                        case 0x408e20:\n                            ppiVar9 = fcn.00405d20(arg1, 0x481cb3);\n                            return ppiVar9;\n                        case 0x408e34:\n                            ppiVar9 = fcn.00405d20(arg1, 0x481cb0);\n                            return ppiVar9;\n                        case 0x408e48:\n                            ppiVar9 = fcn.00403320(arg1, 0x6c);\n                            return ppiVar9;\n                        case 0x408e5a:\n                            ppiVar9 = fcn.00403320(arg1, 0x75);\n                            return ppiVar9;\n                        }\n                    }\n                }\n                else if ((((uVar6 == 7) && (piVar24 = arg3[2],  *piVar24 == 0)) && (piVar24[4] == 1)) && (uVar7 == 0x3b)\n                        ) {\n                    if (**(piVar24 + 2) == '0') {\n                        ppiVar9 = fcn.00405d20(arg1, \"false\");\n                        return ppiVar9;\n                    }\n                    if (**(piVar24 + 2) == '1') {\n                        ppiVar9 = fcn.00405d20(arg1, \"true\");\n                        return ppiVar9;\n                    }\n                }\n            }\n        }\n        iVar25 = *(arg1 + 0x100);\n        if (iVar25 == 0xff) {\n            arg1[0xff] = 0;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n            iVar14 = 1;\n            iVar25 = 0;\n        }\n        else {\n            iVar14 = iVar25 + 1;\n        }\n        *(arg1 + 0x100) = iVar14;\n        arg1[iVar25] = 0x28;\n        arg1[0x108] = 0x28;\n        fcn.004095c0(arg1, arg2_00, arg3[1]);\n        iVar25 = *(arg1 + 0x100);\n        if (iVar25 == 0xff) {\n            arg1[0xff] = 0;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n            *arg1 = 0x29;\n            arg1[0x108] = 0x29;\n            uVar7 = *arg3;\n            *(arg1 + 0x100) = 1;\n            if (uVar7 == 0x3c) {\n                iVar14 = 1;\n                goto code_r0x00408d06;\n            }\n        }\n        else {\n            iVar14 = iVar25 + 1;\n            *(arg1 + 0x100) = iVar14;\n            arg1[iVar25] = 0x29;\n            arg1[0x108] = 0x29;\n            if (*arg3 == 0x3c) {\n                if (iVar14 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar14 = 0;\n                }\ncode_r0x00408d06:\n                *(arg1 + 0x100) = iVar14 + 1;\n                arg1[iVar14] = 0x2d;\n                arg1[0x108] = 0x2d;\n            }\n        }\n        if (uVar6 == 8) {\n            iVar25 = *(arg1 + 0x100);\n            if (iVar25 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar25 = 0;\n            }\n            *(arg1 + 0x100) = iVar25 + 1;\n            arg1[iVar25] = 0x5b;\n            arg1[0x108] = 0x5b;\n            fcn.004095c0(arg1, arg2_00, arg3[2]);\n            ppiVar9 = *(arg1 + 0x100);\n            if (ppiVar9 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                ppiVar9 = NULL;\n            }\n            *(arg1 + 0x100) = ppiVar9 + 1;\n            arg1[ppiVar9] = 0x5d;\n            arg1[0x108] = 0x5d;\n        }\n        else {\n            ppiVar9 = fcn.004095c0(arg1, arg2_00, arg3[2]);\n        }\n        break;\n    case 0x407302:\n        *(arg1 + 0x130) = 1;\n        break;\n    case 0x407311:\n        ppiVar9 = arg3[2];\n        if (*ppiVar9 == 0x39) {\n            piVar24 = ppiVar9[2];\n            bVar32 = *piVar24 == 0x3a;\n            if (bVar32) {\n                piVar18 = arg3[1];\n                piVar30 = ppiVar9[1];\n                iVar14 = 3;\n                uVar4 = *(piVar24 + 2);\n                iVar25 = *(piVar24 + 4);\n                pcVar19 = **(piVar18 + 2);\n                pcVar23 = 0x481aeb;\n                do {\n                    if (iVar14 == 0) break;\n                    iVar14 = iVar14 + -1;\n                    bVar32 = *pcVar19 == *pcVar23;\n                    pcVar19 = pcVar19 + 1;\n                    pcVar23 = pcVar23 + 1;\n                } while (bVar32);\n                if (bVar32) {\n                    fcn.0040aa50(arg1, arg2_00, piVar30);\n                    fcn.0040a990(arg1, arg2_00, piVar18);\n                    fcn.0040aa50(arg1, arg2_00, uVar4);\n                    fcn.00405d20(arg1, 0x481ca7);\n                    ppiVar9 = fcn.0040aa50(arg1, arg2_00, iVar25);\n                    return ppiVar9;\n                }\n                fcn.00405d20(arg1, \"new \");\n                if (*(piVar30 + 2) != 0) {\n                    fcn.0040aa50(arg1, arg2_00, piVar30);\n                    fcn.00403320(arg1, 0x20);\n                }\n                ppiVar9 = fcn.004095c0(arg1, arg2_00, uVar4);\n                if (iVar25 == 0) {\n                    return ppiVar9;\n                }\n                ppiVar9 = fcn.0040aa50(arg1, arg2_00, iVar25);\n                return ppiVar9;\n            }\n        }\ncode_r0x00406c5d:\n        *(arg1 + 0x130) = 1;\n        break;\n    case 0x4073b0:\n        iVar25 = *(arg1 + 0x100);\n        pcVar19 = \"{unnamed type#\";\n        do {\n            cVar26 = *pcVar19;\n            if (iVar25 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar14 = 0;\n                iVar25 = 1;\n            }\n            else {\n                iVar14 = iVar25;\n                iVar25 = iVar25 + 1;\n            }\n            pcVar19 = pcVar19 + 1;\n            *(arg1 + 0x100) = iVar25;\n            arg1[iVar14] = cVar26;\n            arg1[0x108] = cVar26;\n        } while (pcVar19 != \"\");\n        puVar22 = &stack0xffffffffffffff38;\n        sub.msvcrt.dll_sprintf(puVar22, 0x481b05, *(arg3 + 1) + 1);\n        puVar17 = puVar22;\n        do {\n            puVar16 = puVar17;\n            uVar6 = *puVar16 + 0xfefefeff & ~*puVar16;\n            uVar7 = uVar6 & 0x80808080;\n            puVar17 = puVar16 + 1;\n        } while (uVar7 == 0);\n        bVar32 = (uVar6 & 0x8080) == 0;\n        if (bVar32) {\n            uVar7 = uVar7 >> 0x10;\n        }\n        if (bVar32) {\n            puVar17 = puVar16 + 6;\n        }\n        puVar20 = puVar17 + ((-3 - CARRY1(uVar7, uVar7)) - puVar22);\n        if (puVar20 == NULL) {\n            iVar25 = *(arg1 + 0x100);\n        }\n        else {\n            iVar25 = *(arg1 + 0x100);\n            puVar17 = puVar20 + puVar22;\n            do {\n                uVar31 = *puVar22;\n                if (iVar25 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar14 = 0;\n                    iVar25 = 1;\n                }\n                else {\n                    iVar14 = iVar25;\n                    iVar25 = iVar25 + 1;\n                }\n                puVar22 = puVar22 + 1;\n                *(arg1 + 0x100) = iVar25;\n                arg1[iVar14] = uVar31;\n                arg1[0x108] = uVar31;\n            } while (puVar22 != puVar17);\n        }\n        if (iVar25 == 0xff) {\n            arg1[0xff] = 0;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n            ppiVar9 = 0x1;\n            iVar25 = 0;\n        }\n        else {\n            ppiVar9 = iVar25 + 1;\n        }\n        *(arg1 + 0x100) = ppiVar9;\n        arg1[iVar25] = 0x7d;\n        arg1[0x108] = 0x7d;\n        break;\n    case 0x407430:\n        iVar25 = *(arg1 + 0x100);\n        pcVar19 = \"{lambda(\";\n        do {\n            cVar26 = *pcVar19;\n            if (iVar25 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar14 = 0;\n                iVar25 = 1;\n            }\n            else {\n                iVar14 = iVar25;\n                iVar25 = iVar25 + 1;\n            }\n            pcVar19 = pcVar19 + 1;\n            *(arg1 + 0x100) = iVar25;\n            arg1[iVar14] = cVar26;\n            arg1[0x108] = cVar26;\n        } while (pcVar19 != \"\");\n        puVar20 = 0x481d33;\n        fcn.004095c0(arg1, arg2_00, arg3[1]);\n        iVar25 = *(arg1 + 0x100);\n        do {\n            uVar31 = *puVar20;\n            if (iVar25 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar14 = 0;\n                iVar25 = 1;\n            }\n            else {\n                iVar14 = iVar25;\n                iVar25 = iVar25 + 1;\n            }\n            puVar20 = puVar20 + 1;\n            *(arg1 + 0x100) = iVar25;\n            arg1[iVar14] = uVar31;\n            arg1[0x108] = uVar31;\n        } while (puVar20 != 0x481d35);\n        puVar22 = &stack0xffffffffffffff38;\n        sub.msvcrt.dll_sprintf(puVar22, 0x481b05, *(arg3 + 2) + 1);\n        puVar17 = puVar22;\n        do {\n            puVar16 = puVar17;\n            uVar6 = *puVar16 + 0xfefefeff & ~*puVar16;\n            uVar7 = uVar6 & 0x80808080;\n            puVar17 = puVar16 + 1;\n        } while (uVar7 == 0);\n        bVar32 = (uVar6 & 0x8080) == 0;\n        if (bVar32) {\n            uVar7 = uVar7 >> 0x10;\n        }\n        if (bVar32) {\n            puVar17 = puVar16 + 6;\n        }\n        puVar20 = puVar17 + ((-3 - CARRY1(uVar7, uVar7)) - puVar22);\n        if (puVar20 == NULL) {\n            iVar25 = *(arg1 + 0x100);\n        }\n        else {\n            iVar25 = *(arg1 + 0x100);\n            puVar17 = puVar20 + puVar22;\n            do {\n                uVar31 = *puVar22;\n                if (iVar25 == 0xff) {\n                    arg1[0xff] = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar14 = 0;\n                    iVar25 = 1;\n                }\n                else {\n                    iVar14 = iVar25;\n                    iVar25 = iVar25 + 1;\n                }\n                puVar22 = puVar22 + 1;\n                *(arg1 + 0x100) = iVar25;\n                arg1[iVar14] = uVar31;\n                arg1[0x108] = uVar31;\n            } while (puVar22 != puVar17);\n        }\n        if (iVar25 == 0xff) {\n            arg1[0xff] = 0;\n            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n            *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n            ppiVar9 = 0x1;\n            iVar25 = 0;\n        }\n        else {\n            ppiVar9 = iVar25 + 1;\n        }\n        *(arg1 + 0x100) = ppiVar9;\n        arg1[iVar25] = 0x7d;\n        arg1[0x108] = 0x7d;\n        break;\n    case 0x4074b0:\n        iVar25 = *(arg1 + 0x100);\n        pcVar19 = \"global destructors keyed to \";\n        do {\n            cVar26 = *pcVar19;\n            if (iVar25 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar14 = 0;\n                iVar25 = 1;\n            }\n            else {\n                iVar14 = iVar25;\n                iVar25 = iVar25 + 1;\n            }\n            pcVar19 = pcVar19 + 1;\n            *(arg1 + 0x100) = iVar25;\n            arg1[iVar14] = cVar26;\n            arg1[0x108] = cVar26;\n        } while (pcVar19 != \"\");\n        ppiVar9 = fcn.004095c0(arg1, arg2_00, arg3[1]);\n        break;\n    case 0x407530:\n        iVar25 = *(arg1 + 0x100);\n        pcVar19 = \"global constructors keyed to \";\n        do {\n            cVar26 = *pcVar19;\n            if (iVar25 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar14 = 0;\n                iVar25 = 1;\n            }\n            else {\n                iVar14 = iVar25;\n                iVar25 = iVar25 + 1;\n            }\n            pcVar19 = pcVar19 + 1;\n            *(arg1 + 0x100) = iVar25;\n            arg1[iVar14] = cVar26;\n            arg1[0x108] = cVar26;\n        } while (pcVar19 != \"\");\n        ppiVar9 = fcn.004095c0(arg1, arg2_00, arg3[1]);\n        break;\n    case 0x4075b0:\n        iVar25 = *(arg1 + 0x100);\n        pcVar19 = \"non-transaction clone for \";\n        do {\n            cVar26 = *pcVar19;\n            if (iVar25 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar14 = 0;\n                iVar25 = 1;\n            }\n            else {\n                iVar14 = iVar25;\n                iVar25 = iVar25 + 1;\n            }\n            pcVar19 = pcVar19 + 1;\n            *(arg1 + 0x100) = iVar25;\n            arg1[iVar14] = cVar26;\n            arg1[0x108] = cVar26;\n        } while (pcVar19 != \"\");\n        ppiVar9 = fcn.004095c0(arg1, arg2_00, arg3[1]);\n        break;\n    case 0x407630:\n        iVar25 = *(arg1 + 0x100);\n        pcVar19 = \"transaction clone for \";\n        do {\n            cVar26 = *pcVar19;\n            if (iVar25 == 0xff) {\n                arg1[0xff] = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar14 = 0;\n                iVar25 = 1;\n            }\n            else {\n                iVar14 = iVar25;\n                iVar25 = iVar25 + 1;\n            }\n            pcVar19 = pcVar19 + 1;\n            *(arg1 + 0x100) = iVar25;\n            arg1[iVar14] = cVar26;\n            arg1[0x108] = cVar26;\n        } while (pcVar19 != \"\");\n        ppiVar9 = fcn.004095c0(arg1, arg2_00, arg3[1]);\n        break;\n    case 0x4076b0:\n        ppiVar9 = fcn.00403720(arg1, arg3[1]);\n        if (ppiVar9 == NULL) {\n            fcn.0040aa50(arg1, arg2_00, arg3[1]);\n            ppiVar9 = fcn.00405d20(arg1, 0x481cdf);\n        }\n        else {\n            iVar29 = 0;\n            do {\n                if ((*ppiVar9 != 0x2f) || (ppiVar9[1] == NULL)) {\n                    piVar24 = arg3[1];\n                    if (iVar29 == 0) {\n                        return ppiVar9;\n                    }\n                    goto code_r0x004076f5;\n                }\n                ppiVar9 = ppiVar9[2];\n                iVar29 = iVar29 + 1;\n            } while (ppiVar9 != NULL);\n            piVar24 = arg3[1];\ncode_r0x004076f5:\n            iVar27 = 0;\n            do {\n                *(arg1 + 0x134) = iVar27;\n                ppiVar9 = fcn.004095c0(arg1, arg2_00, piVar24);\n                if (iVar27 < iVar29 + -1) {\n                    ppiVar10 = *(arg1 + 0x100);\n                    puVar20 = 0x481c88;\n                    do {\n                        uVar31 = *puVar20;\n                        if (ppiVar10 == 0xff) {\n                            arg1[0xff] = 0;\n                            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                            *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                            ppiVar9 = NULL;\n                            ppiVar10 = 0x1;\n                        }\n                        else {\n                            ppiVar9 = ppiVar10;\n                            ppiVar10 = ppiVar10 + 1;\n                        }\n                        puVar20 = puVar20 + 1;\n                        *(arg1 + 0x100) = ppiVar10;\n                        arg1[ppiVar9] = uVar31;\n                        arg1[0x108] = uVar31;\n                    } while (puVar20 != 0x481c8a);\n                }\n                iVar27 = iVar27 + 1;\n            } while (iVar27 != iVar29);\n        }\n        break;\n    case 0x4077a0:\n        if ((arg2 & 0x20) == 0) {\n            if ((arg3[1] != NULL) && ((arg2 & 0x40) == 0)) {\n                appiStack200[0] = *(arg1 + 0x128);\n                apiStack184[0]._0_4_ = 0;\n                *(arg1 + 0x128) = &stack0xffffffffffffff38;\n                apiStack184[1] = *(arg1 + 0x120);\n                appiStack200[1] = arg3;\n                fcn.004095c0(arg1, arg2 & 0xffffff9f, arg3[1]);\n                *(arg1 + 0x128) = appiStack200[0];\n                if (apiStack184[0] != 0) {\n                    return appiStack200[0];\n                }\n                fcn.00403320(arg1, 0x20);\n            }\n            ppiVar9 = fcn.0040a410(arg1, arg2 & 0xffffff9f, arg3 + 2, *(arg1 + 0x128));\n        }\n        else {\n            ppiVar9 = fcn.0040a410(arg1, arg2 & 0xffffff9f, arg3 + 2, *(arg1 + 0x128));\n            if (arg3[1] != NULL) {\n                ppiVar9 = fcn.004095c0(arg1, arg2 & 0xffffff9f, arg3[1]);\n            }\n        }\n        break;\n    case 0x4077e0:\n        ppiVar9 = arg3[1];\n        if ((arg2 & 4) == 0) {\n            iVar29 = *(ppiVar9 + 1);\n            piVar24 = *ppiVar9;\n            if (iVar29 != 0) {\n                ppiVar10 = *(arg1 + 0x100);\n                iVar25 = 1;\n                do {\n                    uVar31 = *(piVar24 + iVar25 + -1);\n                    if (ppiVar10 == 0xff) {\n                        arg1[0xff] = 0;\n                        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                        *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                        ppiVar9 = NULL;\n                        ppiVar10 = 0x1;\n                    }\n                    else {\n                        ppiVar9 = ppiVar10;\n                        ppiVar10 = ppiVar10 + 1;\n                    }\n                    iVar25 = iVar25 + 1;\n                    *(arg1 + 0x100) = ppiVar10;\n                    arg1[ppiVar9] = uVar31;\n                    arg1[0x108] = uVar31;\n                } while (iVar25 != iVar29 + 1);\n            }\n        }\n        else {\n            iVar29 = *(ppiVar9 + 3);\n            piVar24 = ppiVar9[2];\n            if (iVar29 != 0) {\n                ppiVar10 = *(arg1 + 0x100);\n                iVar25 = 1;\n                do {\n                    uVar31 = *(piVar24 + iVar25 + -1);\n                    if (ppiVar10 == 0xff) {\n                        arg1[0xff] = 0;\n                        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                        *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                        ppiVar9 = NULL;\n                        ppiVar10 = 0x1;\n                    }\n                    else {\n                        ppiVar9 = ppiVar10;\n                        ppiVar10 = ppiVar10 + 1;\n                    }\n                    iVar25 = iVar25 + 1;\n                    *(arg1 + 0x100) = ppiVar10;\n                    arg1[ppiVar9] = uVar31;\n                    arg1[0x108] = uVar31;\n                } while (iVar25 != iVar29 + 1);\n            }\n        }\n        break;\n    case 0x407870:\n        ppiVar9 = arg3[1];\n        uVar7 = *ppiVar9;\n        if (uVar7 == 5) {\n            ppiVar9 = fcn.004036b0(arg1, ppiVar9 + 1);\n            if (ppiVar9 == NULL) {\ncode_r0x004094f5:\n                *(arg1 + 0x130) = 1;\n                return ppiVar9;\n            }\n            uVar7 = *ppiVar9;\n            if (uVar7 == 0x2f) {\n                iVar29 = *(arg1 + 0x134);\n                while (0 < iVar29) {\n                    ppiVar9 = ppiVar9[2];\n                    iVar29 = iVar29 + -1;\n                    if ((ppiVar9 == NULL) || (*ppiVar9 != 0x2f)) goto code_r0x004094f5;\n                }\n                if ((iVar29 == 0) && (ppiVar9 = ppiVar9[1],  ppiVar9 != NULL)) {\n                    uVar7 = *ppiVar9;\n                    goto code_r0x0040787f;\n                }\n                goto code_r0x004094f5;\n            }\n        }\ncode_r0x0040787f:\n        if ((uVar7 == 0x23) || (*arg3 == uVar7)) {\n            appiStack200[0] = *(arg1 + 0x128);\n            arg3 = ppiVar9;\n            goto code_r0x00405e07;\n        }\n        if (uVar7 != 0x24) goto code_r0x00405e00;\n        piVar24 = ppiVar9[1];\n        appiStack200[0] = *(arg1 + 0x128);\n        *(arg1 + 0x128) = &stack0xffffffffffffff38;\n        apiStack184[1] = *(arg1 + 0x120);\n        appiStack200[1] = arg3;\n        if (piVar24 == NULL) goto code_r0x00405e31;\n        goto code_r0x00405e35;\n    case 0x4078e0:\n        appiStack200[0] = *(arg1 + 0x128);\n        apiStack184[0]._0_4_ = 0;\n        *(arg1 + 0x128) = &stack0xffffffffffffff38;\n        apiStack184[1] = *(arg1 + 0x120);\n        appiStack200[1] = arg3;\n        fcn.004095c0(arg1, arg2_00, arg3[2]);\n        if (apiStack184[0] == 0) {\n            fcn.004095f0(arg1, arg2_00, arg3);\n        }\n        *(arg1 + 0x128) = appiStack200[0];\n        ppiVar9 = appiStack200[0];\n        break;\n    case 0x407950:\n        ppiVar9 = *(arg1 + 0x128);\n        apiStack184[1] = *(arg1 + 0x120);\n        apiStack184[0]._0_4_ = 0;\n        *(arg1 + 0x128) = &stack0xffffffffffffff38;\n        appiStack200[0] = ppiVar9;\n        if ((ppiVar9 == NULL) || (2 < *ppiVar9[1] - 0x19U)) {\n            appiStack200[1] = arg3;\n            ppiVar10 = fcn.004095c0(arg1, arg2_00, arg3[2]);\n            *(arg1 + 0x128) = ppiVar9;\n            if (apiStack184[0] != 0) {\n                return ppiVar10;\n            }\n        }\n        else {\n            uVar7 = 1;\n            ppiVar10 = ppiVar9;\n            puVar20 = &stack0xffffffffffffff38;\n            do {\n                if (*(ppiVar10 + 2) == 0) {\n                    if (3 < uVar7) {\n                        *(arg1 + 0x130) = 1;\n                        return ppiVar10;\n                    }\n                    uVar12 = uVar7;\n                    uVar7 = uVar7 + 1;\n                    iVar25 = uVar12 * 0x20;\n                    *(&stack0xffffffffffffff38 + iVar25) = *ppiVar10;\n                    *(&stack0xffffffffffffff40 + iVar25) = ppiVar10[1];\n                    *(&stack0xffffffffffffff48 + iVar25) = ppiVar10[2];\n                    piVar24 = ppiVar10[3];\n                    *(&stack0xffffffffffffff38 + iVar25) = puVar20;\n                    puVar20 = &stack0xffffffffffffff38 + uVar12 * 0x20;\n                    *(&stack0xffffffffffffff50 + iVar25) = piVar24;\n                    *(arg1 + 0x128) = puVar20;\n                    *(ppiVar10 + 2) = 1;\n                }\n                ppiVar10 = *ppiVar10;\n            } while ((ppiVar10 != NULL) && (*ppiVar10[1] - 0x19U < 3));\n            appiStack200[1] = arg3;\n            ppiVar10 = fcn.004095c0(arg1, arg2_00, arg3[2]);\n            *(arg1 + 0x128) = ppiVar9;\n            if (apiStack184[0] != 0) {\n                return ppiVar10;\n            }\n            if (uVar7 != 1) {\n                do {\n                    uVar7 = uVar7 - 1;\n                    fcn.004095f0(arg1, arg2_00, *(&stack0xffffffffffffff40 + uVar7 * 0x20));\n                } while (uVar7 != 1);\n                ppiVar9 = *(arg1 + 0x128);\n            }\n        }\n        ppiVar9 = fcn.0040a190(arg1, arg2_00, arg3 + 1, ppiVar9);\n        break;\n    case 0x407a90:\n        ppiVar9 = fcn.004095c0(arg1, arg2_00, arg3[1]);\n        break;\n    case 0x407aa3:\n        goto code_r0x00407aa3;\n    }\n    return ppiVar9;\n}\n",
        "token_count": 27328
    },
    "0040b3c0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040b3c0(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int32_t *piVar4;\n    uchar *puVar5;\n    ulong *puVar6;\n    uint64_t uVar7;\n    \n    iVar2 = fcn.0040c4e0();\n    iVar1 = *0x49e108;\n    if ((*0x49e108 == 0) && (iVar2 != 0)) {\n        *0x49e108 = 1;\n        iVar3 = fcn.0040c2f0(\".pdata\");\n        if (iVar3 == 0) {\n            puVar6 = 0x49e220;\n            for (iVar3 = 0x30; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar6 = 0;\n                puVar6 = puVar6 + 1;\n            }\n            puVar6 = 0x49e120;\n            for (iVar3 = 0x20; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar6 = 0;\n                puVar6 = puVar6 + 1;\n            }\n            uVar7 = 0;\n            piVar4 = 0x49e220;\n            puVar5 = 0x49e120;\n            do {\n                iVar3 = fcn.0040c440(uVar7);\n                if (iVar3 == 0) {\n                    if (uVar7 == 0) goto code_r0x0040b3fe;\n                    uVar7 = uVar7 & 0xffffffff;\n                    goto code_r0x0040b490;\n                }\n                *puVar5 = 9;\n                *(puVar5 + 4) = 0x40b200 - iVar2;\n                uVar7 = uVar7 + 1;\n                iVar1 = *(iVar3 + 0xc);\n                *piVar4 = iVar1;\n                piVar4[1] = iVar1 + *(iVar3 + 8);\n                piVar4[2] = puVar5 - iVar2;\n                piVar4 = piVar4 + 3;\n                puVar5 = puVar5 + 8;\n            } while (uVar7 != 0x20);\n            uVar7 = 0x20;\ncode_r0x0040b490:\n            (*_sym.imp.KERNEL32.dll_RtlAddFunctionTable)(0x49e220, uVar7, iVar2);\n        }\ncode_r0x0040b3fe:\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 589
    },
    "0040be60": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0040be60(void)\n\n{\n    uint64_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint64_t auStack72 [2];\n    uint64_t auStack56 [2];\n    \n    auStack72[0] = 0;\n    if (*0x47fd80 != 0x2b992ddfa232) {\n        *0x47fd90 = ~*0x47fd80;\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_GetSystemTimeAsFileTime)(auStack72);\n    uVar1 = auStack72[0];\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    uVar4 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    (*_sym.imp.KERNEL32.dll_QueryPerformanceCounter)(auStack56);\n    *0x47fd80 = (uVar1 ^ auStack56[0] ^ uVar2 ^ uVar3 ^ uVar4) & 0xffffffffffff;\n    if (*0x47fd80 == 0x2b992ddfa232) {\n        *0x47fd90 = 0xffffd466d2205dcc;\n        *0x47fd80 = 0x2b992ddfa233;\n    }\n    else {\n        *0x47fd90 = ~*0x47fd80;\n    }\n    return;\n}\n",
        "token_count": 337
    },
    "0040c2f0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nint64_t fcn.0040c2f0(ulong arg1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    uVar3 = sub.msvcrt.dll_strlen();\n    if (8 < uVar3) {\n        return 0;\n    }\n    if ((*0x400000 == 0x5a4d) && (iVar2 = fcn.0040c260(0x400000),  iVar2 != 0)) {\n        iVar4 = *0x40003c;\n        iVar5 = iVar4 + 0x400018 + *(iVar4 + 0x400014);\n        uVar1 = *(iVar4 + 0x400006);\n        if (uVar1 != 0) {\n            iVar4 = iVar5 + 0x28;\n            do {\n                iVar2 = sub.msvcrt.dll_strncmp(iVar5, arg1, 8);\n                if (iVar2 == 0) {\n                    return iVar5;\n                }\n                iVar5 = iVar5 + 0x28;\n            } while (iVar5 != iVar4 + (uVar1 - 1) * 0x28);\n            return 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 292
    },
    "0040c3a0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nint64_t fcn.0040c3a0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    \n    if ((*0x400000 != 0x5a4d) || (iVar2 = fcn.0040c260(0x400000),  iVar2 == 0)) {\n        return 0;\n    }\n    iVar3 = *0x40003c;\n    iVar4 = iVar3 + 0x400018 + *(iVar3 + 0x400014);\n    if (*(iVar3 + 0x400006) != 0) {\n        iVar1 = iVar4 + 0x28;\n        do {\n            if ((*(iVar4 + 0xc) <= arg1 - 0x400000U) && (arg1 - 0x400000U < *(iVar4 + 0xc) + *(iVar4 + 8))) {\n                return iVar4;\n            }\n            iVar4 = iVar4 + 0x28;\n        } while (iVar4 != iVar1 + (*(iVar3 + 0x400006) - 1) * 0x28);\n    }\n    return 0;\n}\n",
        "token_count": 272
    },
    "0040c3f0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nushort fcn.0040c3f0(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x400000 == 0x5a4d) {\n        iVar1 = fcn.0040c260(0x400000);\n        if (iVar1 != 0) {\n            return *(*0x40003c + 0x400006);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 91
    },
    "0040c440": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nint64_t fcn.0040c440(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    \n    if (*0x400000 == 0x5a4d) {\n        iVar2 = fcn.0040c260(0x400000);\n        if (iVar2 != 0) {\n            iVar3 = *0x40003c;\n            iVar4 = iVar3 + 0x400018 + *(iVar3 + 0x400014);\n            if (*(iVar3 + 0x400006) != 0) {\n                iVar1 = iVar4 + 0x28;\n                do {\n                    if ((*(iVar4 + 0x27) & 0x20) != 0) {\n                        if (arg1 == 0) {\n                            return iVar4;\n                        }\n                        arg1 = arg1 + -1;\n                    }\n                    iVar4 = iVar4 + 0x28;\n                } while (iVar4 != iVar1 + (*(iVar3 + 0x400006) - 1) * 0x28);\n                return 0;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 268
    },
    "0040c4e0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.0040c4e0(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x400000 == 0x5a4d) {\n        iVar1 = fcn.0040c260(0x400000);\n        if (iVar1 != 0) {\n            return 0x400000;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 84
    },
    "0040cc00": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint64_t fcn.0040cc00(ulong noname_0, int64_t arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    \n    if (arg3 - arg4 < 0x41) {\n        pcVar1 = swi(3);\n        uVar4 = (*pcVar1)();\n        return uVar4;\n    }\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetAtomNameA)(noname_0, arg2);\n    if (iVar3 != 0) {\n        iVar5 = 0;\n        uVar4 = 0;\n        do {\n            while (*(arg4 + arg2 + iVar5) == 'A') {\n                cVar2 = iVar5;\n                iVar5 = iVar5 + 1;\n                uVar4 = uVar4 | 1 << (-cVar2 & 0x1fU);\n                if (iVar5 == 0x40) {\n                    return uVar4;\n                }\n            }\n            iVar5 = iVar5 + 1;\n        } while (iVar5 != 0x40);\n        return uVar4;\n    }\n    pcVar1 = swi(3);\n    uVar4 = (*pcVar1)();\n    return uVar4;\n}\n",
        "token_count": 303
    },
    "0040ce40": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.0040ce40(ulong arg1)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    ulong *puVar2;\n    ulong auStackX8 [4];\n    uint64_t uStack16;\n    \n    puVar2 = auStackX8;\n    uVar1 = in_RAX;\n    if (0xfff < in_RAX) {\n        do {\n            puVar2 = puVar2 + -0x200;\n            *puVar2 = *puVar2;\n            uVar1 = uVar1 - 0x1000;\n        } while (0x1000 < uVar1);\n    }\n    uStack16 = in_RAX;\n    *(puVar2 - uVar1) = *(puVar2 - uVar1);\n    return uStack16;\n}\n",
        "token_count": 182
    },
    "00413830": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nchar * fcn.00413830(int32_t *arg1, ulong arg2, uint *arg3, uint32_t *arg4)\n\n{\n    uint32_t *puVar1;\n    bool bVar2;\n    bool bVar3;\n    bool bVar4;\n    double dVar5;\n    char cVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int64_t arg1_00;\n    uint *puVar10;\n    int32_t *piVar11;\n    char *pcVar12;\n    int64_t iVar13;\n    int64_t iVar14;\n    int32_t iVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    uint *puVar20;\n    uint *puVar21;\n    uint64_t uVar22;\n    int32_t iVar24;\n    uint32_t uVar25;\n    char *pcVar26;\n    char *pcVar27;\n    char *pcVar28;\n    int32_t iVar29;\n    int32_t iVar30;\n    double dVar31;\n    double dVar32;\n    double dVar33;\n    double dVar34;\n    double dVar35;\n    uint uVar36;\n    uint uVar37;\n    uint32_t in_stack_00000028;\n    uint32_t in_stack_00000030;\n    int32_t *in_stack_00000038;\n    char **in_stack_00000040;\n    uint32_t uStack208;\n    int64_t iStack200;\n    int64_t iStack192;\n    uint32_t uStack172;\n    uint32_t uStack140;\n    uint32_t uStack108;\n    uint32_t auStack92 [7];\n    uint64_t uVar23;\n    \n    uVar16 = in_stack_00000030;\n    uVar9 = *arg4;\n    *arg4 = uVar9 & 0xffffffcf;\n    if (4 < (uVar9 & 7)) {\n        return NULL;\n    }\n    // switch table (5 cases) at 0x4838d0\n    switch(*((uVar9 & 7) * 4 + 0x4838d0) + 0x4838d0) {\n    case 0x413880:\n        iVar24 = *arg1;\n        uVar22 = 0;\n        if (0x20 < iVar24) {\n            iVar30 = 0x20;\n            do {\n                iVar15 = iVar30 * 2;\n                uVar22 = uVar22 + 1;\n                iVar29 = iVar30 * -2;\n                iVar30 = iVar15;\n            } while (iVar24 != iVar15 && SBORROW4(iVar24, iVar15) == iVar24 + iVar29 < 0);\n        }\n        arg1_00 = fcn.00415020(uVar22);\n        puVar10 = arg3;\n        puVar20 = arg1_00 + 0x18;\n        do {\n            uVar36 = *puVar10;\n            puVar10 = puVar10 + 1;\n            puVar21 = puVar20 + 1;\n            *puVar20 = uVar36;\n            puVar20 = puVar21;\n        } while (puVar10 <= arg3 + (iVar24 + -1 >> 5));\n        uVar22 = puVar21 - (arg1_00 + 0x18) >> 2;\n        uVar23 = uVar22 & 0xffffffff;\n        piVar11 = arg1_00 + 0x14 + uVar22 * 4;\ncode_r0x004138ff:\n        iVar30 = uVar23;\n        uVar17 = iVar30 - 1;\n        uVar23 = uVar17;\n        if (*piVar11 == 0) goto code_r0x004138f0;\n        *(arg1_00 + 0x14) = iVar30;\n        puVar1 = arg1_00 + 0x18 + uVar17 * 4;\n        uVar17 = 0x1f;\n        if (*puVar1 != 0) {\n            for (; *puVar1 >> uVar17 == 0; uVar17 = uVar17 - 1) {\n            }\n        }\n        iVar30 = iVar30 * 0x20 - (uVar17 ^ 0x1f);\n        goto code_r0x00413920;\n    case 0x413993:\n        *in_stack_00000038 = -0x8000;\n        pcVar12 = fcn.00414d20(0x4838c9, in_stack_00000040, 3);\n        return pcVar12;\n    case 0x4139c0:\n        *in_stack_00000038 = -0x8000;\n        pcVar12 = fcn.00414d20(\"Infinity\", in_stack_00000040, 8);\n        return pcVar12;\n    }\ncode_r0x0041394e:\n    *in_stack_00000038 = 1;\n    pcVar12 = fcn.00414d20(0x4838cd, in_stack_00000040, 1);\n    return pcVar12;\ncode_r0x004138f0:\n    piVar11 = piVar11 + -1;\n    if (uVar17 == 0) goto code_r0x00413e10;\n    goto code_r0x004138ff;\ncode_r0x0041494c:\n    while( true ) {\n        iVar24 = fcn.00415640(iStack192, iVar13);\n        if (iVar24 < 1) break;\n        *pcVar28 = uVar17;\n        iVar14 = fcn.00415190(iVar13, 10, 0);\n        if (iStack200 == iVar13) {\n            iStack200 = iVar14;\n        }\n        arg1_00 = fcn.00415190(arg1_00, 10, 0);\n        iVar24 = fcn.00414d90(arg1_00, iStack192);\n        uVar17 = iVar24 + 0x30;\n        pcVar28 = pcVar28 + 1;\n        iVar13 = iVar14;\n    }\n    if (uVar17 == 0x39) {\ncode_r0x00414b89:\n        *pcVar28 = '9';\n        pcVar26 = pcVar28 + 1;\n        cVar6 = '9';\ncode_r0x00414624:\n        while (pcVar28 = pcVar26 + -1,  cVar6 == '9') {\n            if (pcVar28 == pcVar12) {\n                uVar9 = 0x20;\n                *pcVar12 = '1';\n                iVar24 = uStack208 + 2;\n                goto code_r0x00413fbf;\n            }\n            cVar6 = pcVar26[-2];\n            pcVar26 = pcVar28;\n        }\n        uVar9 = 0x20;\n        *pcVar28 = cVar6 + '\\x01';\n        iVar24 = uStack208 + 1;\n    }\n    else {\n        cVar6 = uVar17 + '\\x01';\n        uVar9 = 0x20;\ncode_r0x0041496f:\n        *pcVar28 = cVar6;\n        pcVar26 = pcVar28 + 1;\n        iVar24 = uStack208 + 1;\n    }\n    goto code_r0x00413fbf;\ncode_r0x004148bd:\n    cVar6 = uVar7 + '\\x01';\ncode_r0x004148c5:\n    *pcVar28 = cVar6;\n    iVar24 = uVar17 + 1;\n    uVar9 = 0x20;\n    goto code_r0x00413dd5;\ncode_r0x00413e10:\n    *(arg1_00 + 0x14) = 0;\n    iVar30 = 0;\ncode_r0x00413920:\n    auStack92[0] = fcn.00415e30(arg1_00);\n    iVar29 = arg2;\n    if (auStack92[0] != 0) {\n        fcn.00415d20(arg1_00, auStack92[0]);\n        iVar29 = arg2 + auStack92[0];\n        iVar30 = iVar30 - auStack92[0];\n    }\n    if (*(arg1_00 + 0x14) == 0) {\n        fcn.00415120(arg1_00);\n        goto code_r0x0041394e;\n    }\n    uVar22 = fcn.004157d0(arg1_00, auStack92);\n    uVar17 = iVar29 + -1 + iVar30;\n    uVar18 = uVar22 >> 0x20 & 0xfffff | 0x3ff00000;\n    iVar15 = ((uVar17 >> 0x1f ^ uVar17) - (uVar17 >> 0x1f)) + -0x435;\n    dVar31 = ((uVar22 & 0xffffffff | uVar18 << 0x20) - *0x4838e8) * *0x4838f0 + *0x4838f8 + uVar17 * *0x483900;\n    if (0 < iVar15) {\n        dVar31 = dVar31 + iVar15 * *0x483908;\n    }\n    uStack208 = dVar31;\n    uVar36 = 0;\n    uVar37 = 0;\n    if ((dVar31 < 0.0) && (uStack208 != dVar31)) {\n        uStack208 = uStack208 - 1;\n    }\n    bVar3 = true;\n    dVar31 = uVar22 & 0xffffffff | uVar18 + uVar17 * 0x100000 << 0x20;\n    if (uStack208 < 0x17) {\n        if (*(uStack208 * 8 + 0x483980) <= dVar31) {\n            bVar3 = false;\n        }\n        else {\n            uStack208 = uStack208 - 1;\n            bVar3 = false;\n        }\n    }\n    uVar25 = 0;\n    uVar19 = (iVar30 - uVar17) - 1;\n    uVar18 = uVar19;\n    if (uVar19 < 0) {\n        uVar18 = 0;\n        uVar25 = -uVar19;\n    }\n    if (uStack208 < 0) {\n        uVar25 = uVar25 - uStack208;\n        uStack140 = 0;\n        uVar19 = -uStack208;\n    }\n    else {\n        uVar18 = uVar18 + uStack208;\n        uVar19 = 0;\n        uStack140 = uStack208;\n    }\n    if (in_stack_00000028 < 10) {\n        if (in_stack_00000028 < 6) goto code_r0x00413e4b;\n        in_stack_00000028 = in_stack_00000028 - 4;\n        bVar2 = false;\n    }\n    else {\n        in_stack_00000028 = 0;\ncode_r0x00413e4b:\n        bVar2 = uVar17 + 0x3fe < 0x7f8;\n    }\n    if (in_stack_00000028 == 3) {\n        bVar4 = false;\ncode_r0x00413b96:\n        uStack108 = uStack208 + in_stack_00000030;\n        uVar16 = uStack108 + 1;\n        uVar22 = uVar16;\n        if (uVar16 < 1) {\n            auStack92[0] = 1;\n            uVar22 = 1;\n            bVar2 = uVar16 < 0xf & bVar2;\n        }\n        else {\n            bVar2 = uVar16 < 0xf & bVar2;\n            auStack92[0] = uVar16;\n        }\n    }\n    else {\n        if (in_stack_00000028 < 4) {\n            bVar4 = false;\n            if (in_stack_00000028 != 2) {\ncode_r0x00414246:\n                bVar2 = false;\n                bVar4 = true;\n                uStack108 = 0xffffffff;\n                in_stack_00000030 = 0;\n                auStack92[0] = iVar24 * *0x483910 + 3;\n                uVar22 = auStack92[0];\n                uVar16 = 0xffffffff;\n                goto code_r0x00413bc6;\n            }\n        }\n        else {\n            bVar4 = true;\n            if (in_stack_00000028 != 4) {\n                if (in_stack_00000028 != 5) goto code_r0x00414246;\n                goto code_r0x00413b96;\n            }\n        }\n        if (in_stack_00000030 < 1) {\n            in_stack_00000030 = 1;\n        }\n        uVar22 = in_stack_00000030;\n        bVar2 = uVar16 < 0xf & bVar2;\n        auStack92[0] = in_stack_00000030;\n        uStack108 = in_stack_00000030;\n        uVar16 = in_stack_00000030;\n    }\ncode_r0x00413bc6:\n    pcVar12 = fcn.00414cf0(uVar22);\n    dVar34 = *0x483920;\n    uVar17 = arg1[3] - 1;\n    uStack172 = uVar17;\n    if (uVar17 != 0) {\n        uStack172 = 2;\n        if (-1 < uVar17) {\n            uStack172 = uVar17;\n        }\n        if ((uVar9 & 8) != 0) {\n            uStack172 = 3 - uStack172;\n        }\n    }\n    if ((bVar2) && ((uStack172 | uStack208) == 0)) {\n        auStack92[0] = 0;\n        if ((bVar3) && (dVar31 < *0x483918)) {\n            if (uVar16 == 0) {\n                dVar34 = dVar31 + dVar31 + *0x483930;\n                dVar32 = dVar34 & 0xffffffff | (dVar34 >> 0x20) + 0xfcc00000 << 0x20;\n                goto code_r0x00413edd;\n            }\n            if (0 < uStack108) {\n                uVar17 = 0xffffffff;\n                dVar33 = *0x483920 * dVar31;\n                dVar32 = *0x483928 * dVar33 + *0x483930;\n                dVar32 = dVar32 & 0xffffffff | (dVar32 >> 0x20) + 0xfcc00000 << 0x20;\n                uVar9 = uStack108;\n                goto code_r0x00413cc0;\n            }\n            goto code_r0x00413f20;\n        }\n        dVar32 = dVar31 + dVar31 + *0x483930;\n        dVar32 = dVar32 & 0xffffffff | (dVar32 >> 0x20) + 0xfcc00000 << 0x20;\n        if (uVar16 != 0) {\n            uVar17 = 0;\n            dVar33 = dVar31;\n            uVar9 = uVar16;\ncode_r0x00413cc0:\n            if (!bVar4) {\n                auStack92[0] = 1;\n                dVar32 = dVar32 * *((uVar9 - 1) * 8 + 0x483980);\n                pcVar28 = pcVar12;\n                while( true ) {\n                    iVar15 = dVar33;\n                    if (iVar15 != 0) {\n                        dVar33 = dVar33 - iVar15;\n                    }\n                    pcVar26 = pcVar28 + 1;\n                    uVar7 = iVar15 + 0x30;\n                    *pcVar28 = uVar7;\n                    if (auStack92[0] == uVar9) break;\n                    dVar33 = dVar33 * dVar34;\n                    auStack92[0] = auStack92[0] + 1;\n                    pcVar28 = pcVar26;\n                }\n                if (dVar32 + *0x483950 < dVar33) goto code_r0x004148b5;\n                if (*0x483950 - dVar32 <= dVar33) goto code_r0x00413f20;\n                if (dVar33 != CONCAT44(uVar37, uVar36)) goto code_r0x00414be5;\n                uVar9 = 0;\ncode_r0x00414867:\n                while (uVar7 == '0') {\n                    uVar7 = pcVar26[-2];\n                    pcVar26 = pcVar26 + -1;\n                }\n                iVar24 = uVar17 + 1;\n                goto code_r0x00413dd5;\n            }\n            dVar35 = *0x483950 / *((uVar9 - 1) * 8 + 0x483980);\n            auStack92[0] = 0;\n            pcVar26 = pcVar12 + 1;\n            uVar7 = dVar33 + 0x30;\n            *pcVar12 = uVar7;\n            dVar5 = *0x483920;\n            dVar34 = *0x483918;\n            dVar33 = dVar33 - dVar33;\n            dVar35 = dVar35 - dVar32;\n            if (dVar35 <= dVar33) {\n                if (*0x483918 - dVar33 < dVar35) goto code_r0x004148b5;\n                auStack92[0] = 1;\n                pcVar28 = pcVar26;\n                if (1 < uVar9) {\n                    do {\n                        dVar33 = dVar33 * dVar5;\n                        pcVar26 = pcVar28 + 1;\n                        dVar35 = dVar35 * dVar5;\n                        iVar15 = dVar33;\n                        uVar7 = iVar15 + 0x30;\n                        *pcVar28 = uVar7;\n                        dVar33 = dVar33 - iVar15;\n                        if (dVar33 < dVar35) goto code_r0x00413dbf;\n                        if (dVar34 - dVar33 < dVar35) goto code_r0x004148b5;\n                        auStack92[0] = auStack92[0] + 1;\n                        pcVar28 = pcVar26;\n                    } while (auStack92[0] < uVar9);\n                }\n                goto code_r0x00413f20;\n            }\ncode_r0x00413dbf:\n            iVar24 = uVar17 + 1;\n            if (dVar33 != CONCAT44(uVar37, uVar36)) goto code_r0x00413dcf;\n            goto code_r0x0041470a;\n        }\ncode_r0x00413edd:\n        if (dVar31 - *0x483938 <= dVar32) {\n            if ((dVar32 ^ *0x483940) <= dVar31 - *0x483938) goto code_r0x00413f20;\n            goto code_r0x0041428a;\n        }\n        iVar24 = 2;\n        iStack192 = 0;\n        iVar13 = 0;\ncode_r0x00413fa4:\n        iStack200 = 0;\n        uVar9 = 0x20;\n        *pcVar12 = '1';\n        pcVar26 = pcVar12 + 1;\n    }\n    else {\ncode_r0x00413f20:\n        if ((iVar29 < 0) || (arg1[5] < uStack208)) {\n            uVar9 = uVar19;\n            if (bVar4) {\n                auStack92[0] = (iVar24 - iVar30) + 1;\n                uVar7 = uVar25;\n                if (((iVar29 - (iVar24 - iVar30) < arg1[1]) && (in_stack_00000028 != 3)) && (in_stack_00000028 != 5)) {\n                    auStack92[0] = (iVar29 - arg1[1]) + 1;\n                    if (((1 < in_stack_00000028) && (0 < uVar16)) && (uVar16 < auStack92[0])) {\ncode_r0x004144ae:\n                        uVar8 = uVar16 - 1;\n                        uVar17 = uVar19 - uVar8;\n                        if (uVar19 < uVar8) {\n                            uStack140 = uStack140 + (uVar8 - uVar19);\n                            uVar17 = 0;\n                            uVar9 = uVar8;\n                        }\n                        uVar19 = uVar17;\n                        auStack92[0] = uVar16;\n                        if (uVar16 < 0) {\n                            auStack92[0] = 0;\n                            uVar7 = uVar25 - uVar16;\n                        }\n                    }\n                }\n                else if (1 < in_stack_00000028) goto code_r0x004144ae;\n                uVar17 = uVar25 + auStack92[0];\n                uVar18 = uVar18 + auStack92[0];\n                iVar13 = fcn.00415250(1);\n                uVar25 = uVar7;\n            }\n            else {\n                iVar13 = 0;\n                uVar17 = uVar25;\n            }\n            if ((0 < uVar18) && (0 < uVar25)) {\n                auStack92[0] = uVar18;\n                if (uVar25 < uVar18) {\n                    auStack92[0] = uVar25;\n                }\n                uVar17 = uVar17 - auStack92[0];\n                uVar18 = uVar18 - auStack92[0];\n                uVar25 = uVar25 - auStack92[0];\n            }\n            if (0 < uVar9) {\n                if (bVar4) {\n                    iVar14 = arg1_00;\n                    if (0 < uVar19) {\n                        iVar13 = fcn.004153b0(iVar13, uVar19);\n                        iVar14 = fcn.00415280(iVar13, arg1_00);\n                        fcn.00415120(arg1_00);\n                    }\n                    uVar9 = uVar9 - uVar19;\n                    arg1_00 = iVar14;\n                    if (uVar9 == 0) goto code_r0x00414113;\n                }\n                arg1_00 = fcn.004153b0(arg1_00, uVar9);\n            }\ncode_r0x00414113:\n            iStack192 = fcn.00415250(1);\n            if (0 < uStack140) {\n                iStack192 = fcn.004153b0(iStack192, uStack140);\n            }\n            bVar2 = false;\n            if (((in_stack_00000028 < 2) && (iVar30 == 1)) && (arg1[1] + 1 < arg2)) {\n                uVar17 = uVar17 + 1;\n                uVar18 = uVar18 + 1;\n                bVar2 = true;\n            }\n            uVar9 = 0x1f;\n            if (uStack140 != 0) {\n                puVar1 = iStack192 + 0x18 + (*(iStack192 + 0x14) + -1) * 4;\n                uVar9 = 0x1f;\n                if (*puVar1 != 0) {\n                    for (; *puVar1 >> uVar9 == 0; uVar9 = uVar9 - 1) {\n                    }\n                }\n                uVar9 = uVar9 ^ 0x1f;\n            }\n            uVar9 = (uVar9 - uVar18) - 4 & 0x1f;\n            auStack92[0] = uVar9;\n            if (0 < uVar17 + uVar9) {\n                arg1_00 = fcn.00415530(arg1_00, uVar17 + uVar9);\n            }\n            if (0 < uVar18 + auStack92[0]) {\n                iStack192 = fcn.00415530(iStack192, uVar18 + auStack92[0]);\n            }\n            if ((bVar3) && (iVar24 = fcn.00415640(arg1_00, iStack192),  iVar24 < 0)) {\n                uStack208 = uStack208 - 1;\n                arg1_00 = fcn.00415190(arg1_00, 10, 0);\n                if (bVar4) {\n                    iVar13 = fcn.00415190(iVar13, 10, 0);\n                    if ((0 < uStack108) || (in_stack_00000028 < 3)) {\ncode_r0x0041431e:\n                        iStack200 = iVar13;\n                        if (0 < uVar25 + uVar9) {\n                            iStack200 = fcn.00415530(iVar13, uVar25 + uVar9);\n                        }\n                        iVar13 = iStack200;\n                        if (bVar2) {\n                            iVar13 = fcn.00415020(*(iStack200 + 8));\n                            sub.msvcrt.dll_memcpy(iVar13 + 0x10, iStack200 + 0x10, *(iStack200 + 0x14) * 4 + 8);\n                            iVar13 = fcn.00415530(iVar13, 1);\n                        }\n                        auStack92[0] = 1;\n                        pcVar28 = pcVar12;\n                        while( true ) {\n                            iVar24 = fcn.00414d90(arg1_00, iStack192);\n                            uVar17 = iVar24 + 0x30;\n                            uVar9 = fcn.00415640(arg1_00, iStack200);\n                            iVar14 = fcn.00415690(iStack192, iVar13);\n                            uVar16 = 1;\n                            if (*(iVar14 + 0x10) == 0) {\n                                uVar16 = fcn.00415640(arg1_00, iVar14);\n                            }\n                            fcn.00415120(iVar14);\n                            if ((((uVar16 | in_stack_00000028) == 0) && ((*arg3 & 1) == 0)) && (uStack172 == 0)) {\n                                if (uVar17 == 0x39) goto code_r0x00414b89;\n                                if (uVar9 < 1) {\n                                    uVar9 = 0x10;\n                                    if (*(arg1_00 + 0x14) < 2) {\n                                        uVar9 = ~-(*(arg1_00 + 0x18) == 0) & 0x10;\n                                    }\n                                }\n                                else {\n                                    uVar9 = 0x20;\n                                    uVar17 = iVar24 + 0x31;\n                                }\n                                pcVar26 = pcVar28 + 1;\n                                *pcVar28 = uVar17;\n                                iVar24 = uStack208 + 1;\n                                goto code_r0x00413fbf;\n                            }\n                            if ((uVar9 < 0) || (((uVar9 | in_stack_00000028) == 0 && ((*arg3 & 1) == 0)))) {\n                                if ((uStack172 == 0) || ((*(arg1_00 + 0x14) < 2 && (*(arg1_00 + 0x18) == 0)))) {\n                                    if (uVar16 < 1) {\n                                        uVar9 = 0;\n                                    }\n                                    else {\n                                        arg1_00 = fcn.00415530(arg1_00, 1);\n                                        iVar30 = fcn.00415640(arg1_00, iStack192);\n                                        if ((iVar30 < 1) && ((iVar30 != 0 || ((uVar17 & 1) == 0)))) {\n                                            uVar9 = 0x20;\n                                        }\n                                        else {\n                                            if (uVar17 == 0x39) goto code_r0x00414b89;\n                                            uVar9 = 0x20;\n                                            uVar17 = iVar24 + 0x31;\n                                        }\n                                    }\n                                    cVar6 = uVar17;\n                                    if (*(arg1_00 + 0x14) < 2) {\n                                        if (*(arg1_00 + 0x18) != 0) {\n                                            uVar9 = 0x10;\n                                        }\n                                        goto code_r0x0041496f;\n                                    }\n                                }\n                                else if (uStack172 != 2) goto code_r0x0041494c;\n                                cVar6 = uVar17;\n                                uVar9 = 0x10;\n                                goto code_r0x0041496f;\n                            }\n                            if ((0 < uVar16) && (uStack172 != 2)) {\n                                if (uVar17 == 0x39) goto code_r0x00414b89;\n                                pcVar26 = pcVar28 + 1;\n                                uVar9 = 0x20;\n                                *pcVar28 = iVar24 + '1';\n                                iVar24 = uStack208 + 1;\n                                goto code_r0x00413fbf;\n                            }\n                            pcVar27 = pcVar28 + 1;\n                            *pcVar28 = uVar17;\n                            if (auStack92[0] == uStack108) break;\n                            arg1_00 = fcn.00415190(arg1_00, 10, 0);\n                            if (iStack200 == iVar13) {\n                                iStack200 = fcn.00415190(iStack200, 10, 0);\n                                iVar13 = iStack200;\n                            }\n                            else {\n                                iStack200 = fcn.00415190(iStack200, 10, 0);\n                                iVar13 = fcn.00415190(iVar13, 10, 0);\n                            }\n                            auStack92[0] = auStack92[0] + 1;\n                            pcVar28 = pcVar27;\n                        }\n                        goto code_r0x004145e9;\n                    }\n                }\n                else if ((0 < uStack108) || (in_stack_00000028 < 3)) goto code_r0x0041458a;\n            }\n            else {\n                uStack108 = uVar16;\n                if ((0 < uVar16) || (in_stack_00000028 < 3)) {\n                    if (bVar4) goto code_r0x0041431e;\ncode_r0x0041458a:\n                    auStack92[0] = 1;\n                    pcVar28 = pcVar12;\n                    while( true ) {\n                        pcVar27 = pcVar28 + 1;\n                        iVar24 = fcn.00414d90(arg1_00, iStack192);\n                        uVar17 = iVar24 + 0x30;\n                        *pcVar28 = uVar17;\n                        if (uStack108 <= auStack92[0]) break;\n                        arg1_00 = fcn.00415190(arg1_00, 10, 0);\n                        auStack92[0] = auStack92[0] + 1;\n                        pcVar28 = pcVar27;\n                    }\n                    iStack200 = 0;\ncode_r0x004145e9:\n                    if (uStack172 == 0) {\n                        arg1_00 = fcn.00415530(arg1_00, 1);\n                        iVar24 = fcn.00415640(arg1_00, iStack192);\n                        if ((0 < iVar24) || ((iVar24 == 0 && ((uVar17 & 1) != 0)))) {\ncode_r0x00414609:\n                            cVar6 = pcVar27[-1];\n                            pcVar26 = pcVar27;\n                            goto code_r0x00414624;\n                        }\ncode_r0x004149bc:\n                        if ((1 < *(arg1_00 + 0x14)) || (uVar9 = 0,  *(arg1_00 + 0x18) != 0)) {\n                            uVar9 = 0x10;\n                        }\n                    }\n                    else {\n                        if (uStack172 == 2) goto code_r0x004149bc;\n                        if ((1 < *(arg1_00 + 0x14)) || (*(arg1_00 + 0x18) != 0)) goto code_r0x00414609;\n                        uVar9 = 0;\n                    }\n                    do {\n                        pcVar26 = pcVar27;\n                        pcVar27 = pcVar26 + -1;\n                    } while (pcVar26[-1] == '0');\n                    iVar24 = uStack208 + 1;\n                    goto code_r0x00413fbf;\n                }\n            }\n            if (uStack108 == 0) {\n                iStack192 = fcn.00415190(iStack192, 5, 0);\n                iVar24 = fcn.00415640(arg1_00, iStack192);\n                if (0 < iVar24) {\n                    iVar24 = uStack208 + 2;\n                    goto code_r0x00413fa4;\n                }\n            }\n        }\n        else {\n            dVar34 = *(uStack208 * 8 + 0x483980);\n            if ((0 < uVar16) || (-1 < in_stack_00000030)) {\n                auStack92[0] = 1;\n                pcVar26 = pcVar12 + 1;\n                uVar9 = dVar31 / dVar34;\n                *pcVar12 = uVar9 + '0';\n                dVar32 = *0x483920;\n                dVar31 = dVar31 - uVar9 * dVar34;\n                if (dVar31 != CONCAT44(uVar37, uVar36)) {\n                    uVar17 = 1;\n                    if (uVar16 != 1) {\n                        pcVar28 = pcVar26;\n                        do {\n                            uVar17 = uVar17 + 1;\n                            pcVar26 = pcVar28 + 1;\n                            uVar9 = (dVar31 * dVar32) / dVar34;\n                            *pcVar28 = uVar9 + '0';\n                            dVar31 = dVar31 * dVar32 - uVar9 * dVar34;\n                            auStack92[0] = uVar17;\n                            if (dVar31 == CONCAT44(uVar37, uVar36)) goto code_r0x00414703;\n                            pcVar28 = pcVar26;\n                        } while (uVar16 != uVar17);\n                    }\n                    uVar17 = uStack208;\n                    if (uStack172 == 0) {\n                        if (dVar31 + dVar31 <= dVar34) {\n                            if (dVar34 == dVar31 + dVar31) {\n                                uVar7 = pcVar26[-1];\n                                if ((uVar9 & 1) != 0) goto code_r0x004148b5;\ncode_r0x00414be5:\n                                uVar9 = 0x10;\n                            }\n                            else {\n                                uVar7 = pcVar26[-1];\n                                uVar9 = 0x10;\n                            }\n                            goto code_r0x00414867;\n                        }\n                    }\n                    else if (uStack172 != 1) {\n                        iVar24 = uStack208 + 1;\ncode_r0x00413dcf:\n                        uVar9 = 0x10;\n                        goto code_r0x00413dd5;\n                    }\n                    uVar7 = pcVar26[-1];\ncode_r0x004148b5:\n                    do {\n                        pcVar28 = pcVar26 + -1;\n                        if (uVar7 != '9') goto code_r0x004148bd;\n                        if (pcVar28 == pcVar12) {\n                            uVar17 = uVar17 + 1;\n                            *pcVar12 = '0';\n                            cVar6 = '1';\n                            goto code_r0x004148c5;\n                        }\n                        uVar7 = pcVar26[-2];\n                        pcVar26 = pcVar28;\n                    } while( true );\n                }\ncode_r0x00414703:\n                iVar24 = uStack208 + 1;\ncode_r0x0041470a:\n                uVar9 = 0;\n                goto code_r0x00413dd5;\n            }\n            if ((uVar16 == 0) && (dVar34 * *0x483938 < dVar31)) {\n                iStack192 = 0;\n                iVar13 = 0;\n                iVar24 = uStack208 + 2;\n                goto code_r0x00413fa4;\n            }\ncode_r0x0041428a:\n            iStack192 = 0;\n            iVar13 = 0;\n        }\n        uVar9 = 0x10;\n        iStack200 = 0;\n        iVar24 = -in_stack_00000030;\n        pcVar26 = pcVar12;\n    }\ncode_r0x00413fbf:\n    fcn.00415120(iStack192);\n    if (iVar13 != 0) {\n        if ((iStack200 != iVar13) && (iStack200 != 0)) {\n            fcn.00415120(iStack200);\n        }\n        fcn.00415120(iVar13);\n    }\ncode_r0x00413dd5:\n    fcn.00415120(arg1_00);\n    *pcVar26 = '\\0';\n    *in_stack_00000038 = iVar24;\n    if (in_stack_00000040 != NULL) {\n        *in_stack_00000040 = pcVar26;\n    }\n    *arg4 = *arg4 | uVar9;\n    return pcVar12;\n}\n",
        "token_count": 8372
    },
    "00414cf0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t * fcn.00414cf0(ulong arg1)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    if (0x1b < arg1) {\n        iVar1 = 4;\n        do {\n            iVar1 = iVar1 * 2;\n            uVar3 = uVar3 + 1;\n        } while (iVar1 + 0x17 < arg1);\n    }\n    puVar2 = fcn.00415020(uVar3);\n    *puVar2 = uVar3;\n    return puVar2 + 1;\n}\n",
        "token_count": 147
    },
    "00415be0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.00415be0(char **arg1, char *arg2)\n\n{\n    char cVar1;\n    char cVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    \n    pcVar4 = *arg1;\n    do {\n        cVar2 = *arg2;\n        pcVar4 = pcVar4 + 1;\n        if (cVar2 == 0) {\n            *arg1 = pcVar4;\n            return 1;\n        }\n        cVar1 = *pcVar4;\n        iVar3 = cVar1;\n        if (cVar1 + 0xbfU < 0x1a) {\n            iVar3 = cVar1 + 0x20;\n        }\n        arg2 = arg2 + 1;\n    } while (iVar3 == cVar2);\n    return 0;\n}\n",
        "token_count": 186
    },
    "00419bf0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.00419bf0(uint64_t arg1, ulong arg2)\n\n{\n    int64_t arg1_00;\n    uint uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    \n    arg1 = arg1 & 0xffffffff;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    iVar2 = fcn.004183e0();\n    arg1_00 = iVar2 + 0x60;\n    fcn.0041d560(arg1_00);\n    uVar7 = arg1;\n    if (*(iVar2 + 0x48) < uVar7 || *(iVar2 + 0x48) == uVar7) {\n        iVar6 = uVar7 + 1;\n        iVar3 = sub.msvcrt.dll_realloc(*(iVar2 + 0x50), iVar6 * 8);\n        if (iVar3 != 0) {\n            iVar4 = sub.msvcrt.dll_realloc(*(iVar2 + 0x58), iVar6);\n            if (iVar4 != 0) {\n                sub.msvcrt.dll_memset(iVar3 + *(iVar2 + 0x48) * 8, 0, iVar6 - *(iVar2 + 0x48) << 3);\n                sub.msvcrt.dll_memset(*(iVar2 + 0x48) + iVar4, 0, iVar6 - *(iVar2 + 0x48));\n                *(iVar2 + 0x50) = iVar3;\n                *(iVar2 + 0x58) = iVar4;\n                *(iVar2 + 0x48) = iVar6;\n                goto code_r0x00419c2b;\n            }\n        }\n        fcn.0041d4c0(arg1_00);\n        uVar5 = 0xc;\n    }\n    else {\n        iVar3 = *(iVar2 + 0x50);\ncode_r0x00419c2b:\n        *(iVar3 + arg1 * 8) = arg2;\n        *(*(iVar2 + 0x58) + arg1) = 1;\n        fcn.0041d4c0(arg1_00);\n        (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        uVar5 = 0;\n    }\n    return uVar5;\n}\n",
        "token_count": 535
    },
    "0041bdc0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.0041bdc0(int32_t **arg1, int64_t arg2)\n\n{\n    uchar *arg2_00;\n    ulong *puVar1;\n    code *pcVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    ulong uVar10;\n    char *arg1_00;\n    int32_t *arg1_01;\n    int32_t *piVar11;\n    uint64_t uVar12;\n    uint32_t uVar13;\n    bool bVar14;\n    ulong auStack184 [5];\n    ulong uStack144;\n    ulong uStack136;\n    uint64_t auStack128 [2];\n    \n    uVar12 = 0xffffffff;\n    if (arg2 != 0) {\n        uVar12 = fcn.0041bab0(arg1);\n        if (uVar12 != 0) {\n            return uVar12;\n        }\n        piVar11 = *arg1;\n        uVar5 = fcn.0041b4e0(piVar11);\n        uVar12 = uVar5;\n        if (uVar5 == 0x10) {\n            if ((((*arg1)[2] == 0) || (iVar4 = (*arg1)[5],  iVar4 == 0)) ||\n               (iVar6 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)(),  iVar4 != iVar6)) {\n                uVar8 = fcn.0041ea00(piVar11, uVar12);\n                uVar9 = fcn.0041ea30(arg2);\n                fcn.0041b560(*arg1, 0x10);\n                uVar12 = 0;\n                if (uVar8 <= uVar9) {\n                    uVar12 = uVar9 - uVar8;\n                }\n                goto code_r0x0041bce0;\n            }\n            uVar5 = 0x24;\n        }\n        uStack136 = *arg1;\n        goto code_r0x0041b560;\n    }\ncode_r0x0041bce0:\n    uVar8 = fcn.0041bab0(arg1);\n    if (uVar8 != 0) {\n        return uVar8;\n    }\n    piVar11 = *arg1;\n    arg1_01 = piVar11;\n    if ((piVar11[2] == 0) || (iVar4 = piVar11[5],  iVar4 == 0)) {\ncode_r0x0041bd0c:\n        uVar10 = *(piVar11 + 6);\n        fcn.0041b560(arg1_01, 0);\n        uVar12 = fcn.0041c560(uVar10, 1, uVar12);\n        if (uVar12 != 0) {\n            return uVar12;\n        }\n        uVar12 = fcn.0041bab0(arg1);\n        if (uVar12 != 0) {\n            return uVar12;\n        }\n        piVar11[3] = 1;\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        piVar11[5] = iVar4;\ncode_r0x0041bd65:\n        uVar5 = 0;\n    }\n    else {\n        iVar6 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        if (iVar4 != iVar6) {\n            arg1_01 = *arg1;\n            goto code_r0x0041bd0c;\n        }\n        uVar5 = 0x24;\n        if (piVar11[2] == 2) {\n            LOCK();\n            piVar11[3] = piVar11[3] + 1;\n            goto code_r0x0041bd65;\n        }\n    }\n    uStack136 = *arg1;\ncode_r0x0041b560:\n    auStack128[0] = uVar5;\n    if (*0x49f498 == 0) {\n        *0x49f498 = fcn.0041d1b0(\"mutex_global_shmem\", 0x10, 0x41b1d0);\n    }\n    fcn.0041d560(*0x49f498);\n    iVar7 = *0x49f498;\n    if ((*uStack136 == -0x454e0ff3) && (0 < uStack136[1])) {\n        bVar14 = *0x49f498 == 0;\n        uStack136[1] = uStack136[1] + -1;\n        if (bVar14) {\n            *0x49f498 = fcn.0041d1b0(\"mutex_global_shmem\", 0x10, 0x41b1d0);\n            fcn.0041d4c0(*0x49f498);\n            return auStack128[0];\n        }\n        fcn.0041d4c0(iVar7);\n        return auStack128[0];\n    }\n    iVar7 = (*_sym.imp.msvcrt.dll___iob_func)();\n    sub.msvcrt.dll_fprintf(iVar7 + 0x60, 0x483d68, \"(m_->valid == LIFE_MUTEX) && (m_->busy > 0)\");\n    sub.msvcrt.dll_exit(1);\n    arg1_00 = \"mutex_global_shmem\";\n    auStack184[0] = 0x41d1d6;\n    iVar4 = sub.msvcrt.dll_strlen();\n    auStack184[0] = 0x41d1ee;\n    iVar7 = fcn.0040ce40(arg1_00);\n    iVar7 = -iVar7;\n    arg2_00 = &stack0xffffffffffffff70 + iVar7;\n    *(&stack0xffffffffffffff70 + iVar7) = 0x656d68732d636367;\n    *(&stack0xffffffffffffff78 + iVar7) = 0x64742d6d;\n    *(&stack0xffffffffffffff7c + iVar7) = 0x326d;\n    uVar5 = iVar4 + 0x50;\n    (&stack0xffffffffffffff7e)[iVar7] = 0x2d;\n    *(&stack0xffffffffffffff48 + iVar7) = 0x41d236;\n    sub.msvcrt.dll_memcpy(&stack0xffffffffffffff7f + iVar7, \"mutex_global_shmem\", iVar4);\n    puVar1 = &stack0xffffffffffffff80 + iVar4 + iVar7;\n    *puVar1 = 0x6161616161616161;\n    puVar1[1] = 0x6161616161616161;\n    puVar1[2] = 0x6161616161616161;\n    puVar1[3] = 0x6161616161616161;\n    puVar1[4] = 0x6161616161616161;\n    puVar1[5] = 0x6161616161616161;\n    puVar1[6] = 0x6161616161616161;\n    puVar1[7] = 0x6161616161616161;\n    (&stack0xffffffffffffff70)[uVar5 + iVar7] = 0;\n    (&stack0xffffffffffffff70)[(iVar4 + 0xf) + iVar7] = 0;\n    *(&stack0xffffffffffffff48 + iVar7) = 0x41d27e;\n    uVar10 = (*_sym.imp.KERNEL32.dll_CreateMutexA)(0, 0);\n    (&stack0xffffffffffffff70)[(iVar4 + 0xf) + iVar7] = 0x2d;\n    *(&stack0xffffffffffffff48 + iVar7) = 0x41d294;\n    iVar6 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(uVar10, 0xffffffff);\n    if (iVar6 != 0) {\n        pcVar2 = swi(3);\n        uVar12 = (*pcVar2)();\n        return uVar12;\n    }\n    *(&stack0xffffffffffffff48 + iVar7) = 0x41d2a2;\n    uVar3 = (*_sym.imp.KERNEL32.dll_FindAtomA)();\n    if (uVar3 == 0) {\n        *(&stack0xffffffffffffff48 + iVar7) = 0x41d2b7;\n        uVar8 = sub.msvcrt.dll_malloc(0x10);\n        uVar12 = 0x40;\n        do {\n            if ((uVar8 >> (uVar12 & 0x3f) & 1) != 0) {\n                arg2_00[uVar5 - uVar12] = 0x41;\n            }\n            uVar13 = uVar12 - 1;\n            uVar12 = uVar13;\n        } while (uVar13 != 0);\n        *(&stack0xffffffffffffff48 + iVar7) = 0x41d2e3;\n        uVar3 = (*_sym.imp.KERNEL32.dll_AddAtomA)();\n        if (uVar3 == 0) {\n            pcVar2 = swi(3);\n            uVar12 = (*pcVar2)();\n            return uVar12;\n        }\n        *(&stack0xffffffffffffff48 + iVar7) = 0x41d2f9;\n        uVar12 = fcn.0041d130(uVar3, arg2_00, uVar5, iVar4 + 0x10);\n        if (uVar12 == uVar8) {\n            *(&stack0xffffffffffffff48 + iVar7) = 0x41d356;\n            sub.msvcrt.dll_memset(uVar8, 0, 0x10);\n            *(&stack0xffffffffffffff48 + iVar7) = 0x41d361;\n            (*0x41b1d0)(uVar8);\n        }\n        else {\n            *(&stack0xffffffffffffff48 + iVar7) = 0x41d309;\n            fcn.00416d90(uVar8);\n        }\n    }\n    else {\n        *(&stack0xffffffffffffff48 + iVar7) = 0x41d344;\n        uVar12 = fcn.0041d130(uVar3, arg2_00, uVar5, iVar4 + 0x10);\n    }\n    *(&stack0xffffffffffffff48 + iVar7) = 0x41d312;\n    (*_sym.imp.KERNEL32.dll_ReleaseMutex)(uVar10);\n    *(&stack0xffffffffffffff48 + iVar7) = 0x41d31b;\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar10);\n    return uVar12;\n}\n",
        "token_count": 2371
    },
    "0041c040": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041c040(ulong arg1, ulong arg2, ulong arg3, int32_t *arg4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(arg3);\n    iVar1 = *arg4;\n    if (0x7fffffff < arg2 + iVar1) {\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(arg3);\n        return 0x22;\n    }\n    LOCK();\n    *arg4 = *arg4 + arg2;\n    if (iVar1 < 0) {\n        iVar2 = -iVar1;\n        if (arg2 < -iVar1) {\n            iVar2 = arg2;\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_ReleaseSemaphore)(arg1, iVar2, 0);\n        if (iVar1 == 0) {\n            LOCK();\n            *arg4 = *arg4 - arg2;\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(arg3);\n            return 0x16;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(arg3);\n    return 0;\n}\n",
        "token_count": 259
    },
    "0041e180": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.0041e180(int32_t **arg1)\n\n{\n    int32_t *piVar1;\n    uint64_t uVar2;\n    \n    if ((*arg1 != 0xffffffffffffffff) || (uVar2 = fcn.0041e0a0(arg1),  (uVar2 & 0xffffffef) == 0)) {\n        if (*0x49f4d8 == 0) {\n            *0x49f4d8 = fcn.0041d1b0(\"rwl_global_shmem\", 0x10, 0x41dad0);\n        }\n        fcn.0041d560(*0x49f4d8);\n        piVar1 = *arg1;\n        uVar2 = 0x16;\n        if ((piVar1 != NULL) && (*piVar1 == -0x454e0f13)) {\n            piVar1[1] = piVar1[1] + 1;\n            uVar2 = 0;\n        }\n        if (*0x49f4d8 == 0) {\n            *0x49f4d8 = fcn.0041d1b0(\"rwl_global_shmem\", 0x10, 0x41dad0);\n        }\n        fcn.0041d4c0(*0x49f4d8);\n    }\n    return uVar2;\n}\n",
        "token_count": 309
    },
    "0041f0d0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t fcn.0041f0d0(ulong arg1, int64_t arg2)\n\n{\n    uint8_t uVar1;\n    \n    if (arg1 == 0xff) {\n        return 0;\n    }\n    uVar1 = arg1 & 0x70;\n    if (uVar1 == 0x20) {\n        return *(*(arg2 + 0x20) + 8);\n    }\n    if (uVar1 < 0x21) {\n        if ((arg1 & 0x70) == 0) {\n            return 0;\n        }\n        if (uVar1 == 0x10) {\n            return 0;\n        }\n    }\n    else {\n        if (uVar1 == 0x40) goto code_r0x0041f120;\n        if (uVar1 == 0x50) {\n            return 0;\n        }\n        if (uVar1 == 0x30) {\n            return 0;\n        }\n    }\n    sub.msvcrt.dll_abort();\ncode_r0x0041f120:\n    return **(*(arg2 + 0x20) + 0x10) + *(*(arg2 + 0x20) + 8);\n}\n",
        "token_count": 272
    },
    "00423550": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.00423550(int64_t *arg1, ulong s)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    \n    iVar1 = *arg1;\n    uVar2 = sub.msvcrt.dll_strlen(s);\n    uVar4 = *(iVar1 + -0x18);\n    uVar3 = uVar4;\n    if (uVar2 <= uVar4) {\n        uVar3 = uVar2;\n    }\n    uVar3 = sub.msvcrt.dll_memcmp(iVar1, s, uVar3);\n    if (uVar3 == 0) {\n        uVar4 = uVar4 - uVar2;\n        uVar3 = 0x7fffffff;\n        if (uVar4 < 0x80000000) {\n            uVar3 = 0x80000000;\n            if (-0x80000001 < uVar4) {\n                uVar3 = uVar4 & 0xffffffff;\n            }\n            return uVar3;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 250
    },
    "0043fbe0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.0043fbe0(int64_t arg1, int64_t arg2)\n\n{\n    int32_t iVar1;\n    \n    if (arg2 == arg1) {\n        return 1;\n    }\n    if ((**(arg1 + 8) != '*') &&\n       (iVar1 = sub.msvcrt.dll_strcmp(*(arg1 + 8), *(arg2 + 8) + (**(arg2 + 8) == '*')),  iVar1 == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 119
    },
    "00441420": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00441420(int64_t *arg1, uint64_t arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uchar uStack9;\n    \n    iVar3 = *arg1;\n    if ((arg2 != *(iVar3 + -0x10)) || (0 < *(iVar3 + -8))) {\n        uVar4 = *(iVar3 + -0x18);\n        if (arg2 < uVar4) {\n            arg2 = uVar4;\n        }\n        iVar5 = fcn.00440280(iVar3 + -0x18, &uStack9, arg2 - uVar4);\n        iVar3 = *arg1;\n        LOCK();\n        piVar1 = iVar3 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar2 < 1) {\n            fcn.00469650(iVar3 + -0x18);\n        }\n        *arg1 = iVar5;\n    }\n    return;\n}\n",
        "token_count": 255
    },
    "004478c0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t fcn.004478c0(uint64_t arg1, uint64_t arg2)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    char *arg1_00;\n    \n    if (arg1 < 0x3ffffffffffffffa) {\n        iVar2 = arg1 + 0x19;\n        if (arg2 < arg1) {\n            if (arg1 < arg2 * 2) {\n                arg1 = arg2 * 2;\n            }\n            if (((0x1000 < arg1 + 0x39) && (arg2 < arg1)) &&\n               (arg1 = (arg1 + 0x1000) - (arg1 + 0x39 & 0xfff),  0x3ffffffffffffff9 < arg1)) {\n                arg1 = 0x3ffffffffffffff9;\n            }\n            iVar2 = arg1 + 0x19;\n        }\n        iVar2 = fcn.004696a0(iVar2);\n        *(iVar2 + 8) = arg1;\n        *(iVar2 + 0x10) = 0;\n        return iVar2;\n    }\n    arg1_00 = \"basic_string::_S_create\";\n    fcn.00465550(\"basic_string::_S_create\");\n    iVar2 = *arg1_00;\n    iVar1 = *(iVar2 + -0x18);\n    if (-1 < *(iVar2 + -8)) {\n        fcn.00447290(arg1_00);\n        iVar2 = *arg1_00;\n    }\n    return iVar2 + iVar1 + -1;\n}\n",
        "token_count": 351
    },
    "00447ac0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.00447ac0(int64_t *arg1, uint64_t arg2, uint64_t arg3)\n\n{\n    int64_t *piVar1;\n    uint64_t uVar2;\n    char *arg1_00;\n    \n    uVar2 = *(*arg1 + -0x18) - arg2;\n    if (uVar2 <= arg3) {\n        arg3 = uVar2;\n    }\n    if (arg2 <= *(*arg1 + -0x18)) {\n        fcn.004489d0(arg1, arg2, arg3, 0);\n        return arg1;\n    }\n    arg1_00 = \"basic_string::erase\";\n    fcn.004655e0(\"basic_string::erase\");\n    piVar1 = *arg1_00;\n    if (-1 < *(piVar1 + -1)) {\n        fcn.00447290(arg1_00);\n        piVar1 = *arg1_00;\n    }\n    return piVar1;\n}\n",
        "token_count": 223
    },
    "004488f0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.004488f0(int64_t *arg1, uint64_t arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uchar uStack9;\n    \n    iVar3 = *arg1;\n    if ((arg2 != *(iVar3 + -0x10)) || (0 < *(iVar3 + -8))) {\n        uVar4 = *(iVar3 + -0x18);\n        if (arg2 < uVar4) {\n            arg2 = uVar4;\n        }\n        iVar5 = fcn.00447850(iVar3 + -0x18, &uStack9, arg2 - uVar4);\n        iVar3 = *arg1;\n        LOCK();\n        piVar1 = iVar3 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar2 < 1) {\n            fcn.00469650(iVar3 + -0x18);\n        }\n        *arg1 = iVar5;\n    }\n    return;\n}\n",
        "token_count": 256
    },
    "00448b10": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00448b10(int64_t *arg1, ulong arg2)\n\n{\n    uint64_t arg2_00;\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    iVar1 = *arg1;\n    iVar2 = *(iVar1 + -0x18);\n    arg2_00 = iVar2 + 1;\n    if ((*(iVar1 + -0x10) <= arg2_00 && arg2_00 != *(iVar1 + -0x10)) || (0 < *(iVar1 + -8))) {\n        fcn.004488f0(arg1, arg2_00);\n        iVar1 = *arg1;\n        iVar2 = *(iVar1 + -0x18);\n    }\n    *(iVar1 + iVar2) = arg2;\n    iVar1 = *arg1;\n    *(iVar1 + -8) = 0;\n    *(iVar1 + -0x18) = arg2_00;\n    *(iVar1 + arg2_00) = 0;\n    return;\n}\n",
        "token_count": 227
    },
    "0044a9f0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0044a9f0(ulong *arg1)\n\n{\n    int64_t arg1_00;\n    int64_t iVar1;\n    \n    arg1_00 = arg1[4];\n    *arg1 = 0x487f30;\n    iVar1 = fcn.00460170();\n    if ((arg1_00 != iVar1) && (arg1_00 != 0)) {\n        fcn.00469640(arg1_00);\n    }\n    if (arg1[2] != NULL) {\n        (**(*arg1[2] + 8))();\n    }\n    fcn.00460220(arg1 + 3);\n    *arg1 = 0x487b50;\n    return;\n}\n",
        "token_count": 161
    },
    "0044b290": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0044b290(ulong *arg1)\n\n{\n    int64_t arg1_00;\n    int64_t iVar1;\n    \n    arg1_00 = arg1[4];\n    *arg1 = 0x487f50;\n    iVar1 = fcn.00460170();\n    if ((arg1_00 != iVar1) && (arg1_00 != 0)) {\n        fcn.00469640(arg1_00);\n    }\n    if (arg1[2] != NULL) {\n        (**(*arg1[2] + 8))();\n    }\n    fcn.00460220(arg1 + 3);\n    *arg1 = 0x487b50;\n    return;\n}\n",
        "token_count": 159
    },
    "004603d0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.004603d0(int32_t **arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong arg1_00;\n    int32_t **arg1_01;\n    int64_t in_RDX;\n    \n    *arg1 = NULL;\n    fcn.0045e8a0();\n    piVar1 = *0x47f290;\n    *arg1 = *0x47f290;\n    if (piVar1 == *0x47f240) {\n        LOCK();\n        *piVar1 = *piVar1 + 1;\n        return;\n    }\n    arg1_00 = fcn.0041f9b0();\n    iVar2 = fcn.0041bdb0(arg1_00);\n    if (iVar2 != 0) {\n        arg1_01 = fcn.00420e70();\n        goto code_r0x00460444;\n    }\n    LOCK();\n    **0x47f290 = **0x47f290 + 1;\n    *arg1 = *0x47f290;\n    iVar2 = fcn.0041b7a0(arg1_00);\n    if (iVar2 == 0) {\n        return;\n    }\n    while( true ) {\n        arg1_01 = fcn.00420ea0();\ncode_r0x00460444:\n        in_RDX = in_RDX + 1;\n        if (in_RDX == 0) break;\n        fcn.0040ca50(arg1_01);\n    }\n    fcn.00469a20(arg1_01);\n    piVar1 = *arg1_01;\n    LOCK();\n    *piVar1 = *piVar1 + -1;\n    if ((*piVar1 == 0) && (piVar1 != NULL)) {\n        fcn.00460040(piVar1);\n        if (piVar1 != NULL) {\n    // WARNING: Could not recover jumptable at 0x00416d90. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.msvcrt.dll_free)();\n            return;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 479
    },
    "00459600": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00459600(int64_t *arg1, int16_t *arg2, int64_t arg3)\n\n{\n    int64_t iVar1;\n    int16_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    iVar3 = 0;\n    if (arg3 < 1) {\n        return 0;\n    }\n    iVar1 = arg1[2];\n    iVar4 = arg1[3] - iVar1;\n    while( true ) {\n        iVar4 = iVar4 >> 1;\n        if (iVar4 != 0) {\n            iVar5 = arg3 - iVar3;\n            if (iVar4 < arg3 - iVar3) {\n                iVar5 = iVar4;\n            }\n            iVar3 = iVar3 + iVar5;\n            sub.msvcrt.dll_memcpy(arg2, iVar1, iVar5 * 2);\n            arg1[2] = arg1[2] + iVar5 * 2;\n            if (arg3 <= iVar3) {\n                return iVar3;\n            }\n            arg2 = arg2 + iVar5;\n        }\n        iVar2 = (**(*arg1 + 0x50))(arg1);\n        if (iVar2 == -1) {\n            return iVar3;\n        }\n        iVar3 = iVar3 + 1;\n        *arg2 = iVar2;\n        if (arg3 <= iVar3) break;\n        iVar1 = arg1[2];\n        iVar4 = arg1[3] - iVar1;\n        arg2 = arg2 + 1;\n    }\n    return iVar3;\n}\n",
        "token_count": 351
    },
    "0045ed10": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045ed10(int64_t arg1, int64_t arg2, int64_t *arg3)\n\n{\n    int64_t *piVar1;\n    int64_t **ppiVar2;\n    int64_t iVar3;\n    int64_t *piVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    char *arg1_00;\n    int64_t iVar10;\n    int64_t iVar11;\n    int64_t *piVar12;\n    \n    piVar12 = arg3;\n    uVar9 = fcn.00425c30(arg3);\n    uVar5 = *(arg2 + 0x10) - 1;\n    if (uVar9 <= uVar5) {\n        uVar5 = *(arg2 + 8);\n        piVar12 = *(uVar5 + uVar9 * 8);\n        if (piVar12 != NULL) {\n            if (piVar12 != NULL) {\n                uVar5 = fcn.00425c30(arg3);\n                if (*(arg1 + 0x10) - 1U < uVar5) {\n                    uVar9 = uVar5 + 4;\n                    iVar3 = *(arg1 + 8);\n                    iVar6 = -1;\n                    if (uVar9 < 0xfe0000000000001) {\n                        iVar6 = uVar9 * 8;\n                    }\n                    iVar6 = fcn.00469670(iVar6);\n                    uVar7 = *(arg1 + 0x10);\n                    iVar10 = 0;\n                    if (uVar7 != 0) {\n                        do {\n                            *(iVar6 + iVar10) = *(*(arg1 + 8) + iVar10);\n                            iVar10 = iVar10 + 8;\n                        } while (iVar10 != uVar7 * 8);\n                    }\n                    if (uVar7 < uVar9) {\n                        do {\n                            *(iVar6 + uVar7 * 8) = 0;\n                            uVar7 = uVar7 + 1;\n                        } while (uVar9 != uVar7);\n                    }\n                    iVar10 = *(arg1 + 0x18);\n                    iVar8 = -1;\n                    if (uVar9 < 0xfe0000000000001) {\n                        iVar8 = uVar9 * 8;\n                    }\n                    iVar8 = fcn.00469670(iVar8);\n                    uVar7 = *(arg1 + 0x10);\n                    iVar11 = 0;\n                    if (uVar7 != 0) {\n                        do {\n                            *(iVar8 + iVar11) = *(*(arg1 + 0x18) + iVar11);\n                            iVar11 = iVar11 + 8;\n                        } while (iVar11 != uVar7 * 8);\n                    }\n                    if (uVar7 < uVar9) {\n                        do {\n                            *(iVar8 + uVar7 * 8) = 0;\n                            uVar7 = uVar7 + 1;\n                        } while (uVar9 != uVar7);\n                    }\n                    *(arg1 + 0x10) = uVar9;\n                    *(arg1 + 8) = iVar6;\n                    *(arg1 + 0x18) = iVar8;\n                    if (iVar3 != 0) {\n                        fcn.00469640(iVar3);\n                    }\n                    if (iVar10 != 0) {\n                        fcn.00469640(iVar10);\n                    }\n                }\n                LOCK();\n                *(piVar12 + 1) = *(piVar12 + 1) + 1;\n                ppiVar2 = *(arg1 + 8) + uVar5 * 8;\n                piVar4 = *ppiVar2;\n                if (piVar4 != NULL) {\n                    LOCK();\n                    piVar1 = piVar4 + 1;\n                    *piVar1 = *piVar1 + -1;\n                    if (*piVar1 == 0) {\n                        (**(*piVar4 + 8))();\n                    }\n                }\n                iVar3 = *(arg1 + 0x10);\n                *ppiVar2 = piVar12;\n                if (iVar3 != 0) {\n                    uVar5 = 0;\n                    do {\n                        piVar12 = *(*(arg1 + 0x18) + uVar5 * 8);\n                        if (piVar12 != NULL) {\n                            LOCK();\n                            piVar4 = piVar12 + 1;\n                            *piVar4 = *piVar4 + -1;\n                            if (*piVar4 == 0) {\n                                (**(*piVar12 + 8))();\n                            }\n                            *(*(arg1 + 0x18) + uVar5 * 8) = 0;\n                        }\n                        uVar5 = uVar5 + 1;\n                    } while (uVar5 <= *(arg1 + 0x10) && *(arg1 + 0x10) != uVar5);\n                }\n            }\n            return;\n        }\n    }\n    arg1_00 = \"locale::_Impl::_M_replace_facet\";\n    fcn.004659a0(\"locale::_Impl::_M_replace_facet\");\n    iVar3 = *piVar12;\n    while (iVar3 != 0) {\n        piVar12 = piVar12 + 1;\n        fcn.0045ed10(arg1_00, uVar5, iVar3);\n        iVar3 = *piVar12;\n    }\n    return;\n}\n",
        "token_count": 1209
    },
    "00464020": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00464020(uchar *arg1, ulong arg2, char *arg3, int64_t arg4)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    char cVar3;\n    uchar *puVar4;\n    int64_t iVar6;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *in_stack_00000028;\n    uchar *in_stack_00000030;\n    uchar *puVar5;\n    \n    cVar3 = *arg3;\n    iVar6 = 0;\n    uVar2 = 0;\n    iVar7 = cVar3;\n    while (iVar7 < in_stack_00000030 - in_stack_00000028) {\n        while( true ) {\n            if (0x7d < cVar3 - 1U) goto code_r0x0046407c;\n            in_stack_00000030 = in_stack_00000030 + -iVar7;\n            if (arg4 - 1U <= uVar2) break;\n            uVar2 = uVar2 + 1;\n            cVar3 = arg3[uVar2];\n            iVar7 = cVar3;\n            if (in_stack_00000030 - in_stack_00000028 <= iVar7) goto code_r0x0046407c;\n        }\n        iVar6 = iVar6 + 1;\n    }\ncode_r0x0046407c:\n    puVar5 = in_stack_00000028;\n    puVar8 = arg1;\n    if (in_stack_00000030 != in_stack_00000028) {\n        do {\n            puVar4 = puVar5 + 1;\n            *puVar8 = *puVar5;\n            puVar5 = puVar4;\n            puVar8 = puVar8 + 1;\n        } while (puVar4 != in_stack_00000030);\n        iVar7 = puVar4 - in_stack_00000028;\n        in_stack_00000028 = in_stack_00000028 + iVar7;\n        arg1 = arg1 + iVar7;\n    }\n    while (puVar5 = arg1,  iVar6 = iVar6 + -1,  iVar6 != -1) {\n        *puVar5 = arg2;\n        uVar1 = arg3[uVar2];\n        arg1 = puVar5 + 1;\n        if ('\\0' < uVar1) {\n            iVar7 = 0;\n            do {\n                puVar5[iVar7 + 1] = in_stack_00000028[iVar7];\n                iVar7 = iVar7 + 1;\n            } while (iVar7 != (uVar1 - 1 & 0xff) + 1);\n            in_stack_00000028 = in_stack_00000028 + iVar7;\n            arg1 = puVar5 + 1 + iVar7;\n        }\n    }\n    while (puVar8 = puVar5,  uVar2 = uVar2 - 1,  uVar2 != 0xffffffffffffffff) {\n        *puVar8 = arg2;\n        uVar1 = arg3[uVar2];\n        puVar5 = puVar8 + 1;\n        if ('\\0' < uVar1) {\n            iVar6 = 0;\n            do {\n                puVar8[iVar6 + 1] = in_stack_00000028[iVar6];\n                iVar6 = iVar6 + 1;\n            } while (iVar6 != (uVar1 - 1 & 0xff) + 1);\n            in_stack_00000028 = in_stack_00000028 + iVar6;\n            puVar5 = puVar8 + 1 + iVar6;\n        }\n    }\n    return;\n}\n",
        "token_count": 807
    },
    "00465040": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nbool fcn.00465040(int64_t arg1, int64_t arg2, char **arg3)\n\n{\n    char cVar1;\n    char *pcVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    bool bVar6;\n    \n    pcVar2 = *arg3;\n    uVar4 = *(pcVar2 + -0x18) - 1;\n    uVar3 = arg2 - 1U;\n    if (uVar4 < arg2 - 1U) {\n        uVar3 = uVar4;\n    }\n    if (uVar3 == 0) {\n        bVar6 = true;\n    }\n    else {\n        uVar5 = 0;\n        do {\n            bVar6 = pcVar2[uVar4] == *(arg1 + uVar5);\n            uVar4 = uVar4 - 1;\n            uVar5 = uVar5 + 1;\n            if (!bVar6) break;\n        } while (uVar5 < uVar3);\n    }\n    cVar1 = *(arg1 + uVar3);\n    if ((uVar4 != 0) && (bVar6 != false)) {\n        do {\n            bVar6 = pcVar2[uVar4] == cVar1;\n            uVar4 = uVar4 - 1;\n            if (!bVar6) break;\n        } while (uVar4 != 0);\n    }\n    if (cVar1 - 1U < 0x7e) {\n        bVar6 = bVar6 & (*pcVar2 == cVar1 || *pcVar2 < cVar1);\n    }\n    return bVar6;\n}\n",
        "token_count": 378
    },
    "004667a0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.004667a0(int64_t *arg1)\n\n{\n    int64_t arg1_00;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    \n    uVar1 = fcn.00425c30(0x47f220);\n    uVar2 = 0;\n    if ((uVar1 < *(*arg1 + 0x10)) && (arg1_00 = *(*(*arg1 + 8) + uVar1 * 8),  arg1_00 != 0)) {\n        uVar1 = fcn.0046a300(arg1_00, 0x484f60, 0x485a20, 0);\n        uVar2 = uVar1 & 0xffffffffffffff00 | uVar1 != 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 186
    },
    "00466800": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.00466800(int64_t *arg1)\n\n{\n    int64_t arg1_00;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    \n    uVar1 = fcn.00425c30(0x47f230);\n    uVar2 = 0;\n    if ((uVar1 < *(*arg1 + 0x10)) && (arg1_00 = *(*(*arg1 + 8) + uVar1 * 8),  arg1_00 != 0)) {\n        uVar1 = fcn.0046a300(arg1_00, 0x484f60, 0x485a60, 0);\n        uVar2 = uVar1 & 0xffffffffffffff00 | uVar1 != 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 185
    },
    "00466860": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.00466860(int64_t *arg1)\n\n{\n    int64_t arg1_00;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    \n    uVar1 = fcn.00425c30(0x47f2a0);\n    uVar2 = 0;\n    if ((uVar1 < *(*arg1 + 0x10)) && (arg1_00 = *(*(*arg1 + 8) + uVar1 * 8),  arg1_00 != 0)) {\n        uVar1 = fcn.0046a300(arg1_00, 0x484f60, 0x485a80, 0);\n        uVar2 = uVar1 & 0xffffffffffffff00 | uVar1 != 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 187
    },
    "004668c0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.004668c0(int64_t *arg1)\n\n{\n    int64_t arg1_00;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    \n    uVar1 = fcn.00425c30(0x47f2b0);\n    uVar2 = 0;\n    if ((uVar1 < *(*arg1 + 0x10)) && (arg1_00 = *(*(*arg1 + 8) + uVar1 * 8),  arg1_00 != 0)) {\n        uVar1 = fcn.0046a300(arg1_00, 0x484f60, 0x485aa0, 0);\n        uVar2 = uVar1 & 0xffffffffffffff00 | uVar1 != 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 188
    },
    "004669e0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.004669e0(int64_t *arg1)\n\n{\n    int64_t arg1_00;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    \n    uVar1 = fcn.00425c30(0x47f2e0);\n    uVar2 = 0;\n    if ((uVar1 < *(*arg1 + 0x10)) && (arg1_00 = *(*(*arg1 + 8) + uVar1 * 8),  arg1_00 != 0)) {\n        uVar1 = fcn.0046a300(arg1_00, 0x484f60, 0x485b00, 0);\n        uVar2 = uVar1 & 0xffffffffffffff00 | uVar1 != 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 188
    },
    "00466a40": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.00466a40(int64_t *arg1)\n\n{\n    int64_t arg1_00;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    \n    uVar1 = fcn.00425c30(0x47f2f0);\n    uVar2 = 0;\n    if ((uVar1 < *(*arg1 + 0x10)) && (arg1_00 = *(*(*arg1 + 8) + uVar1 * 8),  arg1_00 != 0)) {\n        uVar1 = fcn.0046a300(arg1_00, 0x484f60, 0x485b20, 0);\n        uVar2 = uVar1 & 0xffffffffffffff00 | uVar1 != 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 188
    },
    "00466aa0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.00466aa0(int64_t *arg1)\n\n{\n    int64_t arg1_00;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    \n    uVar1 = fcn.00425c30(0x47f300);\n    uVar2 = 0;\n    if ((uVar1 < *(*arg1 + 0x10)) && (arg1_00 = *(*(*arg1 + 8) + uVar1 * 8),  arg1_00 != 0)) {\n        uVar1 = fcn.0046a300(arg1_00, 0x484f60, 0x485b40, 0);\n        uVar2 = uVar1 & 0xffffffffffffff00 | uVar1 != 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 186
    },
    "00466b00": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.00466b00(int64_t *arg1)\n\n{\n    int64_t arg1_00;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    \n    uVar1 = fcn.00425c30(0x47f310);\n    uVar2 = 0;\n    if ((uVar1 < *(*arg1 + 0x10)) && (arg1_00 = *(*(*arg1 + 8) + uVar1 * 8),  arg1_00 != 0)) {\n        uVar1 = fcn.0046a300(arg1_00, 0x484f60, 0x485b60, 0);\n        uVar2 = uVar1 & 0xffffffffffffff00 | uVar1 != 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 186
    },
    "00467020": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.00467020(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.00425c30(0x47f0b0);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x4850a0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f0c0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x4850e0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f0d0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485120, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f0e0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485160, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f0f0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x4851a0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f100);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x4851c0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f220);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485a20, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f230);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485a60, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2a0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485a80, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2b0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485aa0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2c0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485ac0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2d0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485ae0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2e0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485b00, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2f0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485b20, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f300);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485b40, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f310);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485b60, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f340);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485bc0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f350);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485c00, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f360);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485c40, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f370);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485c60, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f380);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485c80, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f390);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485cc0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3a0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485d00, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3b0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485d20, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3c0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485db0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3d0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485dd0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3e0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485df0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3f0);\n    iVar4 = *piVar3;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x484f60;\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485e10, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.00464810(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = piVar3 + *(*piVar3 + -0x18);\n    fcn.00462d30(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 4297
    },
    "00467080": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.00467080(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.00425c30(0x47f0c0);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x4850e0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f0d0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485120, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f0e0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485160, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f0f0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x4851a0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f100);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x4851c0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f220);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485a20, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f230);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485a60, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2a0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485a80, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2b0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485aa0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2c0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485ac0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2d0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485ae0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2e0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485b00, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2f0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485b20, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f300);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485b40, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f310);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485b60, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f340);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485bc0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f350);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485c00, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f360);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485c40, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f370);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485c60, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f380);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485c80, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f390);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485cc0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3a0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485d00, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3b0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485d20, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3c0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485db0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3d0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485dd0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3e0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485df0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3f0);\n    iVar4 = *piVar2;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x484f60;\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485e10, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.00464810(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = piVar3 + *(*piVar3 + -0x18);\n    fcn.00462d30(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 4148
    },
    "004670e0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.004670e0(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.00425c30(0x47f0d0);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485120, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f0e0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485160, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f0f0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x4851a0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f100);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x4851c0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f220);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485a20, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f230);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485a60, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2a0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485a80, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2b0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485aa0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2c0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485ac0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2d0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485ae0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2e0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485b00, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2f0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485b20, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f300);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485b40, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f310);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485b60, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f340);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485bc0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f350);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485c00, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f360);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485c40, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f370);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485c60, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f380);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485c80, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f390);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485cc0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3a0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485d00, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3b0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485d20, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3c0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485db0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3d0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485dd0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3e0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485df0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3f0);\n    iVar4 = *piVar3;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x484f60;\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485e10, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.00464810(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = piVar3 + *(*piVar3 + -0x18);\n    fcn.00462d30(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 4000
    },
    "00467140": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.00467140(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.00425c30(0x47f0e0);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485160, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f0f0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x4851a0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f100);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x4851c0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f220);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485a20, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f230);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485a60, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2a0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485a80, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2b0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485aa0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2c0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485ac0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2d0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485ae0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2e0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485b00, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2f0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485b20, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f300);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485b40, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f310);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485b60, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f340);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485bc0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f350);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485c00, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f360);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485c40, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f370);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485c60, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f380);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485c80, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f390);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485cc0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3a0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485d00, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3b0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485d20, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3c0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485db0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3d0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485dd0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3e0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485df0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3f0);\n    iVar4 = *piVar2;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x484f60;\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485e10, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.00464810(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = piVar3 + *(*piVar3 + -0x18);\n    fcn.00462d30(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 3852
    },
    "004671a0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.004671a0(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.00425c30(0x47f0f0);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x4851a0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f100);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x4851c0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f220);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485a20, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f230);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485a60, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2a0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485a80, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2b0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485aa0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2c0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485ac0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2d0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485ae0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2e0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485b00, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2f0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485b20, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f300);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485b40, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f310);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485b60, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f340);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485bc0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f350);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485c00, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f360);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485c40, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f370);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485c60, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f380);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485c80, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f390);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485cc0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3a0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485d00, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3b0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485d20, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3c0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485db0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3d0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485dd0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3e0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485df0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3f0);\n    iVar4 = *piVar3;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x484f60;\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485e10, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.00464810(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = piVar3 + *(*piVar3 + -0x18);\n    fcn.00462d30(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 3706
    },
    "00467200": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.00467200(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.00425c30(0x47f100);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x4851c0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f220);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485a20, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f230);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485a60, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2a0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485a80, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2b0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485aa0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2c0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485ac0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2d0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485ae0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2e0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485b00, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2f0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485b20, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f300);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485b40, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f310);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485b60, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f340);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485bc0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f350);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485c00, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f360);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485c40, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f370);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485c60, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f380);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485c80, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f390);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485cc0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3a0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485d00, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3b0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485d20, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3c0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485db0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3d0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485dd0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3e0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485df0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3f0);\n    iVar4 = *piVar2;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x484f60;\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485e10, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.00464810(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = piVar3 + *(*piVar3 + -0x18);\n    fcn.00462d30(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 3556
    },
    "00467260": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.00467260(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.00425c30(0x47f220);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485a20, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f230);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485a60, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2a0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485a80, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2b0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485aa0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2c0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485ac0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2d0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485ae0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2e0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485b00, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2f0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485b20, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f300);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485b40, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f310);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485b60, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f340);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485bc0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f350);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485c00, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f360);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485c40, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f370);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485c60, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f380);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485c80, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f390);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485cc0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3a0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485d00, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3b0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485d20, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3c0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485db0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3d0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485dd0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3e0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485df0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3f0);\n    iVar4 = *piVar3;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x484f60;\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485e10, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.00464810(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = piVar3 + *(*piVar3 + -0x18);\n    fcn.00462d30(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 3409
    },
    "004672c0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.004672c0(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.00425c30(0x47f230);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485a60, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2a0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485a80, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2b0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485aa0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2c0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485ac0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2d0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485ae0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2e0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485b00, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2f0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485b20, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f300);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485b40, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f310);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485b60, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f340);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485bc0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f350);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485c00, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f360);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485c40, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f370);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485c60, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f380);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485c80, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f390);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485cc0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3a0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485d00, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3b0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485d20, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3c0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485db0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3d0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485dd0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3e0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485df0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3f0);\n    iVar4 = *piVar2;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x484f60;\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485e10, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.00464810(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = piVar3 + *(*piVar3 + -0x18);\n    fcn.00462d30(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 3264
    },
    "00467320": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.00467320(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.00425c30(0x47f2a0);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485a80, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2b0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485aa0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2c0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485ac0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2d0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485ae0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2e0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485b00, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2f0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485b20, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f300);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485b40, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f310);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485b60, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f340);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485bc0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f350);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485c00, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f360);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485c40, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f370);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485c60, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f380);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485c80, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f390);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485cc0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3a0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485d00, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3b0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485d20, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3c0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485db0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3d0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485dd0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3e0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485df0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3f0);\n    iVar4 = *piVar3;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x484f60;\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485e10, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.00464810(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = piVar3 + *(*piVar3 + -0x18);\n    fcn.00462d30(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 3117
    },
    "00467380": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.00467380(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.00425c30(0x47f2b0);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485aa0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2c0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485ac0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2d0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485ae0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2e0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485b00, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2f0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485b20, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f300);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485b40, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f310);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485b60, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f340);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485bc0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f350);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485c00, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f360);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485c40, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f370);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485c60, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f380);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485c80, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f390);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485cc0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3a0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485d00, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3b0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485d20, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3c0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485db0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3d0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485dd0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3e0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485df0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3f0);\n    iVar4 = *piVar2;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x484f60;\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485e10, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.00464810(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = piVar3 + *(*piVar3 + -0x18);\n    fcn.00462d30(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 2969
    },
    "004674a0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.004674a0(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.00425c30(0x47f2e0);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485b00, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f2f0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485b20, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f300);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485b40, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f310);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485b60, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f340);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485bc0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f350);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485c00, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f360);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485c40, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f370);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485c60, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f380);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485c80, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f390);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485cc0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3a0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485d00, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3b0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485d20, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3c0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485db0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3d0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485dd0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3e0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485df0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3f0);\n    iVar4 = *piVar3;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x484f60;\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485e10, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.00464810(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = piVar3 + *(*piVar3 + -0x18);\n    fcn.00462d30(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 2526
    },
    "00467500": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.00467500(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.00425c30(0x47f2f0);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485b20, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f300);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485b40, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f310);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485b60, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f340);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485bc0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f350);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485c00, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f360);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485c40, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f370);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485c60, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f380);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485c80, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f390);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485cc0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3a0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485d00, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3b0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485d20, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3c0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485db0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3d0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485dd0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3e0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485df0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3f0);\n    iVar4 = *piVar2;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x484f60;\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485e10, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.00464810(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = piVar3 + *(*piVar3 + -0x18);\n    fcn.00462d30(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 2377
    },
    "00467560": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.00467560(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.00425c30(0x47f300);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485b40, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f310);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485b60, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f340);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485bc0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f350);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485c00, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f360);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485c40, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f370);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485c60, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f380);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485c80, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f390);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485cc0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3a0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485d00, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3b0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485d20, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3c0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485db0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3d0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485dd0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3e0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485df0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3f0);\n    iVar4 = *piVar3;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x484f60;\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485e10, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.00464810(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = piVar3 + *(*piVar3 + -0x18);\n    fcn.00462d30(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 2229
    },
    "004675c0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.004675c0(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.00425c30(0x47f310);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485b60, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f340);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485bc0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f350);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485c00, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f360);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485c40, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f370);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485c60, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f380);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485c80, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f390);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485cc0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3a0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485d00, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3b0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485d20, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3c0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485db0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3d0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485dd0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3e0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485df0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3f0);\n    iVar4 = *piVar2;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x484f60;\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485e10, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.00464810(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = piVar3 + *(*piVar3 + -0x18);\n    fcn.00462d30(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 2084
    },
    "004676e0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.004676e0(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.00425c30(0x47f360);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485c40, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f370);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485c60, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f380);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485c80, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f390);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485cc0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3a0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485d00, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3b0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485d20, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3c0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485db0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3d0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485dd0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3e0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485df0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3f0);\n    iVar4 = *piVar3;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x484f60;\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485e10, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.00464810(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = piVar3 + *(*piVar3 + -0x18);\n    fcn.00462d30(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 1646
    },
    "00467740": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t * fcn.00467740(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    ulong arg3;\n    int64_t iVar4;\n    \n    uVar1 = fcn.00425c30(0x47f370);\n    piVar3 = *(*arg1 + 8);\n    if ((uVar1 < *(*arg1 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485c60, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f380);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485c80, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f390);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485cc0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3a0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485d00, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3b0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485d20, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3c0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485db0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3d0);\n    piVar3 = *(*piVar2 + 8);\n    if ((uVar1 < *(*piVar2 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485dd0, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3e0);\n    piVar2 = *(*piVar3 + 8);\n    if ((uVar1 < *(*piVar3 + 0x10)) && (piVar2 = piVar2[uVar1],  piVar2 != NULL)) {\n        piVar3 = fcn.0046a300(piVar2, 0x484f60, 0x485df0, 0);\n        if (piVar3 != NULL) {\n            return piVar3;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    uVar1 = fcn.00425c30(0x47f3f0);\n    iVar4 = *piVar2;\n    piVar3 = *(iVar4 + 8);\n    if ((uVar1 < *(iVar4 + 0x10)) && (piVar3 = piVar3[uVar1],  piVar3 != NULL)) {\n        iVar4 = 0x484f60;\n        piVar2 = fcn.0046a300(piVar3, 0x484f60, 0x485e10, 0);\n        if (piVar2 != NULL) {\n            return piVar2;\n        }\n    }\n    else {\n        fcn.00464f90();\n    }\n    fcn.004698f0();\n    if (iVar4 != 0) {\n        arg3 = sub.msvcrt.dll_strlen(iVar4);\n        fcn.00464810(piVar3, iVar4, arg3);\n        return piVar3;\n    }\n    iVar4 = piVar3 + *(*piVar3 + -0x18);\n    fcn.00462d30(iVar4, *(iVar4 + 0x20) | 1);\n    return piVar3;\n}\n",
        "token_count": 1499
    },
    "004014f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004014f0(void)\n\n{\n    ulong var_a0h;\n    ulong var_98h;\n    ulong var_90h;\n    ulong format;\n    uint var_68h;\n    ulong *var_58h;\n    int64_t var_48h;\n    ulong s;\n    ulong var_4h;\n    \n    var_a0h._0_4_ = 6;\n    var_4h._0_4_ = 0;\n    while (*(var_4h * 0x10 + 0x4800a0) != 0) {\n        var_90h = *(var_4h * 0x10 + 0x4800a0);\n        var_98h._0_4_ = *(var_4h * 0x10 + 0x4800a8);\n        (*_sym.imp.USER32.dll_SendMessageA)(*0x49e080, 0x101b, var_4h, &var_a0h);\n        var_4h._0_4_ = var_4h + 1;\n    }\n    var_4h._0_4_ = 0;\n    while (*(var_4h * 0x18 + 0x480140) != 0) {\n        format._0_4_ = 5;\n        format._4_4_ = var_4h;\n        var_68h = 0;\n        var_58h = *(var_4h * 0x18 + 0x480140);\n        var_48h = *(var_4h * 0x18 + 0x480150);\n        (*_sym.imp.USER32.dll_SendMessageA)(*0x49e080, 0x1007, 0, &format);\n        format._0_4_ = 1;\n        var_68h = 1;\n        var_58h = *(var_4h * 0x18 + 0x480148);\n        (*_sym.imp.USER32.dll_SendMessageA)(*0x49e080, 0x1006, 0, &format);\n        var_68h = 2;\n        var_58h = &s;\n        sub.msvcrt.dll_sprintf(&s, \"%d %%\", *(var_4h * 0x18 + 0x480150));\n        (*_sym.imp.USER32.dll_SendMessageA)(*0x49e080, 0x1006, 0, &format);\n        var_4h._0_4_ = var_4h + 1;\n    }\n    return;\n}\n",
        "token_count": 589
    },
    "00401c71": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00401c71(void)\n\n{\n    int64_t in_GS_OFFSET;\n    ulong var_18h;\n    ulong var_ch;\n    \n    return *(in_GS_OFFSET + 0x60);\n}\n",
        "token_count": 48
    },
    "00401c9d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00401c9d(int16_t *arg1)\n\n{\n    int16_t *var_10h;\n    ulong var_4h;\n    \n    var_4h._0_4_ = 0;\n    for (var_10h = arg1; *var_10h != 0; var_10h = var_10h + 1) {\n        var_4h._0_4_ = var_4h + 1;\n    }\n    return var_4h;\n}\n",
        "token_count": 141
    },
    "00401d90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00401d90(ulong param_1)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong var_10h;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_10h_2;\n    int64_t *var_8h;\n    \n    iVar3 = fcn.00401c71();\n    iVar1 = *(*(iVar3 + 0x18) + 0x10);\n    var_8h = *(*(iVar3 + 0x18) + 0x10);\n    do {\n        iVar2 = fcn.00401cd0(var_8h[0xc], param_1);\n        if (iVar2 == 0) {\n            return var_8h[6];\n        }\n        var_8h = *var_8h;\n    } while (var_8h != iVar1);\n    return 0;\n}\n",
        "token_count": 211
    },
    "00401e15": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "resolve function by parsing PE exports"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t fcn.00401e15(int64_t arg1, ulong arg2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    ulong var_10h;\n    ulong s2;\n    ulong s1;\n    ulong var_38h;\n    ulong var_30h;\n    ulong var_28h;\n    ulong var_20h;\n    ulong var_18h_2;\n    ulong var_10h_2;\n    ulong var_4h;\n    \n    iVar4 = arg1 + *(arg1 + ((((((((((((((((((((((((((((((((*(arg1 + ((((((((((((((((((((((((*0x46b018 - *0x46b024) -\n                                                                                           *0x46b014 *\n                                                                                           *0x46b024 * *0x46b020 *\n                                                                                           *0x46b020) -\n                                                                                          *0x46b010 * *0x46b018) -\n                                                                                         *0x46b020) +\n                                                                                         *0x46b014 * *0x46b018 +\n                                                                                         *0x46b018 * *0x46b018 +\n                                                                                        *0x46b010 *\n                                                                                        *0x46b024 * *0x46b018) -\n                                                                                       *0x46b010 * *0x46b014) -\n                                                                                      *0x46b020) - *0x46b010 * *0x46b018\n                                                                                     ) - *0x46b014 *\n                                                                                         *0x46b024 * *0x46b020 *\n                                                                                         *0x46b020) - *0x46b024) +\n                                                                                   *0x46b018 + *0x46b014 * *0x46b018 +\n                                                                                   *0x46b018 * *0x46b018 +\n                                                                                  *0x46b010 * *0x46b024 * *0x46b018) -\n                                                                                 *0x46b010 * *0x46b014) - *0x46b020) -\n                                                                               *0x46b010 * *0x46b018) -\n                                                                              *0x46b014 *\n                                                                              *0x46b024 * *0x46b020 * *0x46b020) -\n                                                                             *0x46b024) + *0x46b018 +\n                                                                             *0x46b014 * *0x46b018 +\n                                                                             *0x46b018 * *0x46b018 +\n                                                                            *0x46b010 * *0x46b024 * *0x46b018) -\n                                                                           *0x46b010 * *0x46b014) - *0x46b020) -\n                                                                         *0x46b010 * *0x46b018) -\n                                                                        *0x46b014 * *0x46b024 * *0x46b020 * *0x46b020) -\n                                                                       *0x46b024) + *0x46b018 + *0x46b014 * *0x46b018 +\n                                                                       *0x46b018 * *0x46b018 +\n                                                                      *0x46b010 * *0x46b024 * *0x46b018) -\n                                                                     *0x46b010 * *0x46b014) * 0x40 + 0x3c) + *0x46b014)\n                                                          - *0x46b010 * *0x46b020) + *0x46b024 * *0x46b01c * *0x46b020 +\n                                                         *0x46b020) - *0x46b024) + *0x46b01c + *0x46b010) -\n                                                      *0x46b01c *\n                                                      *0x46b020 * *0x46b024 * *0x46b01c * *0x46b018 * *0x46b014) +\n                                                     *0x46b018) - *0x46b024) + *0x46b014) - *0x46b010 * *0x46b020) +\n                                                  *0x46b024 * *0x46b01c * *0x46b020 + *0x46b020) - *0x46b024) +\n                                                *0x46b01c + *0x46b010) -\n                                              *0x46b01c * *0x46b020 * *0x46b024 * *0x46b01c * *0x46b018 * *0x46b014) +\n                                             *0x46b018) - *0x46b024) + *0x46b014) - *0x46b010 * *0x46b020) +\n                                          *0x46b024 * *0x46b01c * *0x46b020 + *0x46b020) - *0x46b024) + *0x46b01c +\n                                       *0x46b010) -\n                                      *0x46b01c * *0x46b020 * *0x46b024 * *0x46b01c * *0x46b018 * *0x46b014) + *0x46b018\n                                     ) - *0x46b024) + *0x46b014) - *0x46b010 * *0x46b020) +\n                                  *0x46b024 * *0x46b01c * *0x46b020 + *0x46b020) - *0x46b024) + *0x46b01c + *0x46b010) -\n                              *0x46b01c * *0x46b020 * *0x46b024 * *0x46b01c * *0x46b018 * *0x46b014) + *0x46b018) -\n                            *0x46b024) + 0x88);\n    uVar1 = *(iVar4 + 0x1c);\n    uVar2 = *(iVar4 + 0x24);\n    var_4h._0_4_ = 0;\n    while( true ) {\n        if (*(iVar4 + 0x18) <= var_4h) {\n            return 0;\n        }\n        iVar3 = sub.msvcrt.dll_strcmp();\n        if (iVar3 == 0) break;\n        var_4h._0_4_ = var_4h + 1;\n    }\n    return arg1 + *(arg1 + uVar1 +\n                   *(arg1 + uVar2 +\n                    ((((*0x46b014 * 3 + var_4h + *0x46b024 * 3 + *0x46b020 * -3) - *0x46b014 * *0x46b01c) -\n                     *0x46b014 * *0x46b01c) - *0x46b014 * *0x46b01c) * 2) * 4);\n}\n",
        "token_count": 1573
    },
    "0040294c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0040294c(ulong param_1)\n\n{\n    ulong var_10h;\n    \n    (*_sym.imp.USER32.dll_MessageBoxW)(0, param_1, 0, 0);\n    return 0;\n}\n",
        "token_count": 54
    },
    "00402981": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00402981(ulong param_1, ulong param_2)\n\n{\n    ulong var_10h;\n    ulong var_18h;\n    \n    (*_sym.imp.USER32.dll_MessageBoxA)(0, param_2, 0, 0);\n    return 0;\n}\n",
        "token_count": 65
    },
    "004029bd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004029bd(void)\n\n{\n    ulong var_10h;\n    ulong var_18h;\n    \n    (*_sym.imp.USER32.dll_MessageBoxA)(0, 0x48006c, 0, 0);\n    return;\n}\n",
        "token_count": 57
    },
    "00402d82": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402d82(void)\n\n{\n    fcn.00461b50(0x49e088);\n    return;\n}\n",
        "token_count": 31
    },
    "00402dd9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402dd9(void)\n\n{\n    fcn.00402d9d(1, 0xffff);\n    return;\n}\n",
        "token_count": 32
    },
    "00402e10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t * fcn.00402e10(int64_t arg1, ulong arg2, int64_t arg3, int64_t arg4)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    \n    if (0x4b < arg2) {\n        return NULL;\n    }\n    // switch table (76 cases) at 0x481480\n    switch(*(arg2 * 4 + 0x481480) + 0x481480) {\n    case 0x402e30:\n        if (arg3 != 0) goto code_r0x00402e35;\n        break;\n    case 0x402e35:\n        goto code_r0x00402e35;\n    case 0x402e70:\n        if (arg3 == 0) {\n            return NULL;\n        }\n    case 0x402e75:\n        if (arg4 != 0) {\ncode_r0x00402e35:\n            iVar2 = *(arg1 + 0x28);\n            puVar3 = NULL;\n            if (iVar2 < *(arg1 + 0x2c)) {\n                *(arg1 + 0x28) = iVar2 + 1;\n                puVar1 = *(arg1 + 0x20) + iVar2 * 0x18;\n                if (puVar1 != NULL) {\n                    *puVar1 = arg2;\n                    *(puVar1 + 2) = arg3;\n                    *(puVar1 + 4) = arg4;\n                    puVar3 = puVar1;\n                }\n            }\n            return puVar3;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 371
    },
    "00402e90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.00402e90(int64_t arg1, int64_t arg2, ulong arg3)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(arg1 + 0x28);\n    if (iVar2 < *(arg1 + 0x2c)) {\n        *(arg1 + 0x28) = iVar2 + 1;\n        puVar1 = *(arg1 + 0x20) + iVar2 * 0x18;\n        if (((puVar1 != NULL) && (arg2 != 0)) && (arg3 != 0)) {\n            *puVar1 = 0;\n            *(puVar1 + 2) = arg2;\n            puVar1[4] = arg3;\n            return puVar1;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 186
    },
    "00403000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.00403000(int64_t arg1, uint *arg2)\n\n{\n    uint *puVar1;\n    char cVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    uint *puVar5;\n    uint uVar6;\n    \n    pcVar4 = *(arg1 + 0x18);\n    cVar2 = *pcVar4;\n    if (cVar2 == 'O') {\n        if (cVar2 == 'R') goto code_r0x00403039;\n        *(arg1 + 0x50) = *(arg1 + 0x50) + 3;\n        uVar6 = 0x20;\n        *(arg1 + 0x18) = pcVar4 + 1;\n    }\n    else {\n        if (cVar2 != 'R') {\n            return arg2;\n        }\ncode_r0x00403039:\n        *(arg1 + 0x50) = *(arg1 + 0x50) + 2;\n        uVar6 = 0x1f;\n        *(arg1 + 0x18) = pcVar4 + 1;\n    }\n    switch(uVar6) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 0xb:\n    case 0x21:\n    case 0x2b:\n    case 0x2d:\n    case 0x35:\n    case 0x36:\n    case 0x37:\n    case 0x38:\n    case 0x39:\n    case 0x3b:\n    case 0x3c:\n    case 0x3e:\n        break;\n    case 9:\n    case 10:\n    case 0xc:\n    case 0xd:\n    case 0xe:\n    case 0xf:\n    case 0x10:\n    case 0x11:\n    case 0x12:\n    case 0x13:\n    case 0x14:\n    case 0x15:\n    case 0x16:\n    case 0x17:\n    case 0x22:\n    case 0x23:\n    case 0x24:\n    case 0x25:\n    case 0x26:\n    case 0x28:\n    case 0x33:\n    case 0x34:\n    case 0x3a:\n    case 0x3d:\n        if (arg2 != NULL) goto code_r0x00402e35;\n        break;\n    case 0x19:\n    case 0x1a:\n    case 0x1b:\n    case 0x1c:\n    case 0x1d:\n    case 0x1e:\n    case 0x1f:\n    case 0x20:\n    case 0x29:\n    case 0x2e:\n    case 0x2f:\ncode_r0x00402e35:\n        iVar3 = *(arg1 + 0x28);\n        puVar5 = NULL;\n        if (iVar3 < *(arg1 + 0x2c)) {\n            *(arg1 + 0x28) = iVar3 + 1;\n            puVar1 = *(arg1 + 0x20) + iVar3 * 0x18;\n            if (puVar1 != NULL) {\n                *puVar1 = uVar6;\n                *(puVar1 + 2) = arg2;\n                *(puVar1 + 4) = 0;\n                puVar5 = puVar1;\n            }\n        }\n        return puVar5;\n    }\n    return NULL;\n}\n",
        "token_count": 798
    },
    "00403720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.00403720(ulong arg1, uint *arg2)\n\n{\n    int32_t *piVar1;\n    \n    if (arg2 != NULL) {\n        do {\n    // switch table (75 cases) at 0x4815d0\n            switch(*arg2) {\n            case 0:\n            case 6:\n            case 0x18:\n            case 0x27:\n            case 0x31:\n            case 0x3f:\n            case 0x44:\n            case 0x46:\n            case 0x49:\n            case 0x4a:\n                goto code_r0x00403772;\n            case 5:\n                piVar1 = fcn.004036b0(arg1, arg2 + 2);\n                if ((piVar1 != NULL) && (*piVar1 == 0x2f)) {\n                    return piVar1;\n                }\n                goto code_r0x00403772;\n            case 7:\n            case 8:\n            case 0x32:\n                goto code_r0x00403761;\n            }\n            piVar1 = fcn.00403720(arg1, *(arg2 + 2));\n            if (piVar1 != NULL) {\n                return piVar1;\n            }\ncode_r0x00403761:\n            arg2 = *(arg2 + 4);\n        } while (arg2 != NULL);\n    }\ncode_r0x00403772:\n    return NULL;\n}\n",
        "token_count": 323
    },
    "00405d20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405d20(int64_t arg1, uchar *s)\n\n{\n    uchar *puVar1;\n    uchar uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    \n    iVar3 = sub.msvcrt.dll_strlen(s);\n    if (iVar3 != 0) {\n        puVar1 = s + iVar3;\n        iVar3 = *(arg1 + 0x100);\n        do {\n            uVar2 = *s;\n            if (iVar3 == 0xff) {\n                *(arg1 + 0xff) = 0;\n                (**(arg1 + 0x110))(arg1, 0xff);\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar4 = 1;\n                iVar3 = 0;\n            }\n            else {\n                iVar4 = iVar3 + 1;\n            }\n            s = s + 1;\n            *(arg1 + 0x100) = iVar4;\n            *(arg1 + iVar3) = uVar2;\n            *(arg1 + 0x108) = uVar2;\n            iVar3 = iVar4;\n        } while (s != puVar1);\n    }\n    return;\n}\n",
        "token_count": 274
    },
    "0040a190": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a190(int64_t arg1, ulong arg2, int64_t *arg3, int64_t *arg4)\n\n{\n    uchar uVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t arg2_00;\n    uchar *puVar5;\n    \n    arg2_00 = arg2;\n    piVar2 = arg4;\n    if (arg4 != NULL) {\ncode_r0x0040a1b1:\n        if (*(piVar2 + 2) != 0) goto code_r0x0040a1bc;\n        if (*piVar2[1] != 0x2a) {\n            iVar4 = *(arg1 + 0x100);\n            puVar5 = 0x481f90;\n            do {\n                uVar1 = *puVar5;\n                if (iVar4 == 0xff) {\n                    *(arg1 + 0xff) = 0;\n                    (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                    *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                    iVar3 = 0;\n                    iVar4 = 1;\n                }\n                else {\n                    iVar3 = iVar4;\n                    iVar4 = iVar4 + 1;\n                }\n                puVar5 = puVar5 + 1;\n                *(arg1 + 0x100) = iVar4;\n                *(arg1 + iVar3) = uVar1;\n                *(arg1 + 0x108) = uVar1;\n            } while (puVar5 != 0x481f92);\n            fcn.00409dc0(arg1, arg2_00, arg4, 0);\n            iVar4 = *(arg1 + 0x100);\n            if (iVar4 == 0xff) {\n                *(arg1 + 0xff) = 0;\n                (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                iVar3 = 1;\n                iVar4 = 0;\n            }\n            else {\n                iVar3 = iVar4 + 1;\n            }\n            *(arg1 + 0x100) = iVar3;\n            *(arg1 + iVar4) = 0x29;\n            *(arg1 + 0x108) = 0x29;\n            goto code_r0x0040a1db;\n        }\n        fcn.00409dc0(arg1, arg2_00, arg4, 0);\n        iVar4 = *(arg1 + 0x100);\n        goto code_r0x0040a1fd;\n    }\ncode_r0x0040a1d4:\n    iVar3 = *(arg1 + 0x100);\ncode_r0x0040a1db:\n    if (iVar3 == 0xff) {\n        *(arg1 + 0xff) = 0;\n        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n        *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n        iVar4 = 1;\n        iVar3 = 0;\n    }\n    else {\n        iVar4 = iVar3 + 1;\n    }\n    *(arg1 + 0x100) = iVar4;\n    *(arg1 + iVar3) = 0x20;\n    *(arg1 + 0x108) = 0x20;\ncode_r0x0040a1fd:\n    if (iVar4 == 0xff) {\n        *(arg1 + 0xff) = 0;\n        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n        *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n        iVar3 = 1;\n        iVar4 = 0;\n    }\n    else {\n        iVar3 = iVar4 + 1;\n    }\n    *(arg1 + 0x100) = iVar3;\n    *(arg1 + iVar4) = 0x5b;\n    *(arg1 + 0x108) = 0x5b;\n    if (*arg3 != 0) {\n        fcn.004095c0(arg1, arg2_00, *arg3);\n        iVar3 = *(arg1 + 0x100);\n    }\n    if (iVar3 == 0xff) {\n        *(arg1 + 0xff) = 0;\n        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n        *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n        iVar4 = 1;\n        iVar3 = 0;\n    }\n    else {\n        iVar4 = iVar3 + 1;\n    }\n    *(arg1 + 0x100) = iVar4;\n    *(arg1 + iVar3) = 0x5d;\n    *(arg1 + 0x108) = 0x5d;\n    return;\ncode_r0x0040a1bc:\n    piVar2 = *piVar2;\n    if (piVar2 == NULL) goto code_r0x0040a1c4;\n    goto code_r0x0040a1b1;\ncode_r0x0040a1c4:\n    fcn.00409dc0(arg1, arg2_00, arg4, 0);\n    goto code_r0x0040a1d4;\n}\n",
        "token_count": 1274
    },
    "0040a410": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a410(int64_t arg1, ulong arg2, int64_t *arg3, int64_t *arg4)\n\n{\n    int32_t iVar1;\n    int64_t *piVar2;\n    ulong uVar3;\n    uint8_t uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint64_t arg2_00;\n    uint64_t uVar7;\n    \n    arg2_00 = arg2;\n    if (arg4 != NULL) {\n        iVar1 = *(arg4 + 2);\n        piVar2 = arg4;\n        while (iVar1 == 0) {\n            if (*piVar2[1] - 0x19U < 0x13) {\n                uVar7 = 1 << (*piVar2[1] - 0x19U & 0x3f);\n                if ((uVar7 & 0x43107) != 0) {\n                    uVar4 = *(arg1 + 0x108);\ncode_r0x0040a491:\n                    if (uVar4 == 0x20) {\ncode_r0x0040a605:\n                        iVar6 = *(arg1 + 0x100);\n                        if (iVar6 != 0xff) goto code_r0x0040a618;\ncode_r0x0040a4cf:\n                        *(arg1 + 0xff) = 0;\n                        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                        *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                        iVar5 = 1;\n                        iVar6 = 0;\n                    }\n                    else {\n                        iVar5 = *(arg1 + 0x100);\n                        if (iVar5 == 0xff) {\n                            *(arg1 + 0xff) = 0;\n                            (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                            *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                            iVar6 = 1;\n                            iVar5 = 0;\n                        }\n                        else {\n                            iVar6 = iVar5 + 1;\n                        }\n                        *(arg1 + 0x100) = iVar6;\n                        *(arg1 + iVar5) = 0x20;\n                        *(arg1 + 0x108) = 0x20;\n                        if (iVar6 == 0xff) goto code_r0x0040a4cf;\ncode_r0x0040a618:\n                        iVar5 = iVar6 + 1;\n                    }\n                    *(arg1 + 0x100) = iVar5;\n                    uVar3 = *(arg1 + 0x128);\n                    *(arg1 + iVar6) = 0x28;\n                    *(arg1 + 0x108) = 0x28;\n                    *(arg1 + 0x128) = 0;\n                    fcn.00409dc0(arg1, arg2_00, arg4, 0);\n                    iVar5 = *(arg1 + 0x100);\n                    if (iVar5 == 0xff) {\n                        *(arg1 + 0xff) = 0;\n                        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n                        *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n                        iVar6 = 1;\n                        iVar5 = 0;\n                    }\n                    else {\n                        iVar6 = iVar5 + 1;\n                    }\n                    *(arg1 + 0x100) = iVar6;\n                    *(arg1 + iVar5) = 0x29;\n                    *(arg1 + 0x108) = 0x29;\n                    goto joined_r0x0040a530;\n                }\n                if ((uVar7 & 0xe00) != 0) {\n                    uVar4 = *(arg1 + 0x108);\n                    if ((uVar4 & 0xfd) != 0x28) goto code_r0x0040a491;\n                    goto code_r0x0040a605;\n                }\n            }\n            piVar2 = *piVar2;\n            if (piVar2 == NULL) break;\n            iVar1 = *(piVar2 + 2);\n        }\n    }\n    uVar3 = *(arg1 + 0x128);\n    *(arg1 + 0x128) = 0;\n    fcn.00409dc0(arg1, arg2_00, arg4, 0);\n    iVar6 = *(arg1 + 0x100);\njoined_r0x0040a530:\n    if (iVar6 == 0xff) {\n        *(arg1 + 0xff) = 0;\n        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n        *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n        iVar5 = 1;\n        iVar6 = 0;\n    }\n    else {\n        iVar5 = iVar6 + 1;\n    }\n    *(arg1 + 0x100) = iVar5;\n    *(arg1 + iVar6) = 0x28;\n    *(arg1 + 0x108) = 0x28;\n    if ((*arg3 != 0) && (*(arg1 + 0x130) == 0)) {\n        fcn.00405dc0(arg1, arg2_00, *arg3);\n        iVar5 = *(arg1 + 0x100);\n    }\n    if (iVar5 == 0xff) {\n        *(arg1 + 0xff) = 0;\n        (**(arg1 + 0x110))(arg1, 0xff, *(arg1 + 0x118));\n        *(arg1 + 0x138) = *(arg1 + 0x138) + 1;\n        iVar6 = 1;\n        iVar5 = 0;\n    }\n    else {\n        iVar6 = iVar5 + 1;\n    }\n    *(arg1 + 0x100) = iVar6;\n    *(arg1 + iVar5) = 0x29;\n    *(arg1 + 0x108) = 0x29;\n    fcn.00409dc0(arg1, arg2_00, arg4, 1);\n    *(arg1 + 0x128) = uVar3;\n    return;\n}\n",
        "token_count": 1439
    },
    "0040b1e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040b1e0(ulong arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.0040b130(arg1);\n    return -(iVar1 == 0);\n}\n",
        "token_count": 51
    },
    "0040b840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b840(uchar *arg1, ulong arg2, ulong arg3)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    code *pcVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uchar *puVar6;\n    char *pcVar7;\n    uint64_t uVar8;\n    uint32_t uVar9;\n    uint *puVar10;\n    code *pcVar11;\n    int32_t *piVar12;\n    uint32_t *puVar13;\n    int64_t iVar14;\n    int32_t *piVar15;\n    int32_t iVar16;\n    ulong uVar17;\n    uint64_t *arg3_00;\n    uchar *in_R9;\n    int64_t unaff_R12;\n    uchar *unaff_R13;\n    uchar *unaff_R14;\n    ulong auStack312 [5];\n    uchar auStack272 [12];\n    uchar auStack260 [4];\n    uchar *puStack256;\n    ulong uStack232;\n    code *pcStack208;\n    uchar *puStack200;\n    ulong uStack192;\n    int64_t iStack184;\n    uchar *puStack176;\n    uchar *puStack168;\n    ulong uStack160;\n    uint uStack108;\n    ulong uStack104;\n    ulong uStack80;\n    int32_t iStack68;\n    \n    uVar17 = arg3;\n    if (*0x49e3b4 < 1) goto code_r0x0040ba25;\n    pcStack208 = NULL;\n    iVar4 = *0x49e3b8;\n    do {\n        in_R9 = *(iVar4 + 8);\n        if ((in_R9 <= arg1) &&\n           (in_R9 = in_R9 + *(*(iVar4 + 0x10) + 8),  pcVar11 = _sym.imp.KERNEL32.dll_VirtualQuery,  arg1 < in_R9))\n        goto code_r0x0040b91b;\n        uVar9 = pcStack208 + 1;\n        pcStack208 = uVar9;\n        iVar4 = iVar4 + 0x18;\n    } while (uVar9 != *0x49e3b4);\n    while( true ) {\n        uStack160 = 0x40b89f;\n        unaff_R12 = fcn.0040c3a0(arg1);\n        if (unaff_R12 == 0) break;\n        unaff_R13 = &stack0xffffffffffffff98;\n        unaff_R14 = pcStack208 * 0x18;\n        puVar10 = unaff_R14 + *0x49e3b8;\n        *(puVar10 + 4) = unaff_R12;\n        *puVar10 = 0;\n        uStack160 = 0x40b8d4;\n        iVar4 = fcn.0040c4e0();\n        *(puVar10 + 2) = iVar4 + *(unaff_R12 + 0xc);\n        pcStack208 = _sym.imp.KERNEL32.dll_VirtualQuery;\n        uStack160 = 0x40b8fe;\n        iVar4 = (*_sym.imp.KERNEL32.dll_VirtualQuery)(*(unaff_R14 + *0x49e3b8 + 8), unaff_R13, 0x30);\n        if (iVar4 == 0) {\n            uVar17 = *(unaff_R14 + *0x49e3b8 + 8);\n            uStack160 = 0x40ba49;\n            fcn.0040b7d0(\"  VirtualQuery failed for %d bytes at address %p\", *(unaff_R12 + 8), uVar17, in_R9);\n            break;\n        }\n        if ((iStack68 == 4) || (iStack68 == 0x40)) {\ncode_r0x0040b914:\n            *0x49e3b4 = *0x49e3b4 + 1;\n            pcVar11 = pcStack208;\ncode_r0x0040b91b:\n            unaff_R13 = &stack0xffffffffffffff98;\n            uStack160 = 0x40b929;\n            iVar4 = (*pcVar11)(arg1, unaff_R13, 0x30);\n            pcVar3 = _sym.imp.KERNEL32.dll_VirtualProtect;\n            pcStack208 = pcVar11;\n            if (iVar4 != 0) {\n                if ((iStack68 != 4) && (iStack68 != 0x40)) {\n                    uStack160 = 0x40b996;\n                    (*_sym.imp.KERNEL32.dll_VirtualProtect)(uStack104, uStack80, 0x40, &stack0xffffffffffffff94);\n                    uStack160 = 0x40b9a4;\n                    sub.msvcrt.dll_memcpy(arg1, arg2, arg3);\n                    if ((iStack68 != 0x40) && (iStack68 != 4)) {\n                        uStack160 = 0x40b9c6;\n                        (*pcVar3)(uStack104, uStack80, uStack108, &stack0xffffffffffffff94);\n                    }\n                    return;\n                }\n    // WARNING: Could not recover jumptable at 0x00416d40. Too many branches\n    // WARNING: Treating indirect jump as call\n                (*_sym.imp.msvcrt.dll_memcpy)(arg1, arg2, arg3);\n                return;\n            }\n            goto code_r0x0040ba58;\n        }\n        unaff_R14 = unaff_R14 + *0x49e3b8;\n        uVar17 = 0x40;\n        uStack160 = 0x40ba09;\n        in_R9 = unaff_R14;\n        iVar16 = (*_sym.imp.KERNEL32.dll_VirtualProtect)(uStack104);\n        if (iVar16 != 0) goto code_r0x0040b914;\n        uStack160 = 0x40ba17;\n        uVar9 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        uStack160 = 0x40ba25;\n        fcn.0040b7d0(\"  VirtualProtect failed with code 0x%x\", uVar9, uVar17, in_R9);\ncode_r0x0040ba25:\n        pcStack208 = NULL;\n    }\n    uStack160 = 0x40ba58;\n    fcn.0040b7d0(\"Address %p has no image-section\", arg1, uVar17, in_R9);\ncode_r0x0040ba58:\n    pcVar7 = \"  VirtualQuery failed for %d bytes at address %p\";\n    uStack160 = 0x40ba6c;\n    puVar6 = arg1;\n    fcn.0040b7d0(\"  VirtualQuery failed for %d bytes at address %p\", 0x30, arg1, in_R9);\n    if (*0x49e3b0 != 0) {\n        return;\n    }\n    *0x49e3b0 = 1;\n    auStack312[0] = 0x40baaf;\n    puStack200 = arg1;\n    uStack192 = arg2;\n    iStack184 = unaff_R12;\n    puStack176 = unaff_R13;\n    puStack168 = unaff_R14;\n    uStack160 = arg3;\n    fcn.0040c3f0();\n    auStack312[0] = 0x40bac6;\n    iVar4 = fcn.0040ce40(pcVar7);\n    piVar12 = 0x48ae00;\n    *0x49e3b4 = 0;\n    iVar4 = -iVar4;\n    *0x49e3b8 = &stack0xfffffffffffffef0 + iVar4;\n    if ((*0x48ae00 == 0) && (*0x48ae04 == 0)) {\n        in_R9 = *0x48ae08;\n        if (*0x48ae08 == 0) {\n            piVar12 = 0x48ae0c;\n            puVar6 = *0x48ae0c;\n            if ((*0x48ae0c != 0) || (*0x48ae10 != 0)) goto code_r0x0040bc60;\n        }\n        uVar8 = piVar12[2];\n        if (piVar12[2] != 1) {\ncode_r0x0040bd7d:\n            *(&stack0xfffffffffffffec8 + iVar4) = 0x40bd89;\n            fcn.0040b7d0(\"  Unknown pseudo relocation protocol version %d.\\n\", uVar8, puVar6, in_R9);\n            return;\n        }\n        puVar13 = piVar12 + 3;\n        if (0x48ae23 < puVar13) {\n            *0x49e3b4 = 0;\n            return;\n        }\n        do {\n            uVar1 = *(puVar13 + 2);\n            arg3_00 = *puVar13 + 0x400000;\n            pcVar7 = puVar13[1] + 0x400000;\n            uVar8 = *arg3_00;\n            if (uVar1 == 0x10) {\n                in_R9 = *pcVar7;\n                puVar6 = in_R9;\n                if (*pcVar7 < 0) {\n                    puVar6 = in_R9 | 0xffffffffffff0000;\n                }\n                puStack256 = puVar6 + (uVar8 - arg3_00);\n                *(&stack0xfffffffffffffec8 + iVar4) = 0x40bd11;\n                fcn.0040b840(pcVar7, &stack0xffffffffffffff00, 2);\n            }\n            else {\n                uVar9 = uVar1;\n                if (uVar1 < 0x11) {\n                    if (uVar9 != 8) {\ncode_r0x0040bd16:\n                        pcVar7 = \"  Unknown pseudo relocation bit size %d.\\n\";\n                        uVar8 = uVar9;\n                        puStack256 = NULL;\n                        *(&stack0xfffffffffffffec8 + iVar4) = 0x40bd2c;\n                        fcn.0040b7d0(\"  Unknown pseudo relocation bit size %d.\\n\", uVar8, arg3_00, in_R9);\n                        goto code_r0x0040bd2c;\n                    }\n                    in_R9 = *pcVar7;\n                    puVar6 = in_R9;\n                    if (*pcVar7 < '\\0') {\n                        puVar6 = in_R9 | 0xffffffffffffff00;\n                    }\n                    puStack256 = puVar6 + (uVar8 - arg3_00);\n                    *(&stack0xfffffffffffffec8 + iVar4) = 0x40bcd7;\n                    fcn.0040b840(pcVar7, &stack0xffffffffffffff00, 1);\n                }\n                else if (uVar9 == 0x20) {\ncode_r0x0040bd2c:\n                    in_R9 = *pcVar7;\n                    puVar6 = in_R9;\n                    if (*pcVar7 < 0) {\n                        puVar6 = in_R9 | 0xffffffff00000000;\n                    }\n                    puStack256 = puVar6 + (uVar8 - arg3_00);\n                    *(&stack0xfffffffffffffec8 + iVar4) = 0x40bd5a;\n                    fcn.0040b840(pcVar7, &stack0xffffffffffffff00, 4);\n                }\n                else {\n                    if (uVar9 != 0x40) goto code_r0x0040bd16;\n                    puStack256 = (uVar8 - arg3_00) + *pcVar7;\n                    *(&stack0xfffffffffffffec8 + iVar4) = 0x40bbc6;\n                    fcn.0040b840(pcVar7, &stack0xffffffffffffff00, 8);\n                }\n            }\n            puVar13 = puVar13 + 3;\n        } while (puVar13 < 0x48ae24);\n    }\n    else {\ncode_r0x0040bc60:\n        if (0x48ae23 < piVar12) {\n            *0x49e3b4 = 0;\n            return;\n        }\n        do {\n            uVar9 = piVar12[1];\n            piVar15 = piVar12 + 2;\n            puStack256 = puStack256 & 0xffffffff00000000 | *(uVar9 + 0x400000) + *piVar12;\n            *(&stack0xfffffffffffffec8 + iVar4) = 0x40bc94;\n            fcn.0040b840(uVar9 + 0x400000, &stack0xffffffffffffff00, 4);\n            piVar12 = piVar15;\n        } while (piVar15 < 0x48ae24);\n    }\n    pcVar3 = _sym.imp.KERNEL32.dll_VirtualQuery;\n    pcVar11 = _sym.imp.KERNEL32.dll_VirtualProtect;\n    iVar14 = 0;\n    iVar16 = 0;\n    if (0 < *0x49e3b4) {\n        do {\n            if (*(*0x49e3b8 + iVar14) != 0) {\n                uVar17 = *(*0x49e3b8 + iVar14 + 8);\n                *(&stack0xfffffffffffffec8 + iVar4) = 0x40bc33;\n                iVar5 = (*pcVar3)(uVar17, &stack0xffffffffffffff00, 0x30);\n                uVar17 = uStack232;\n                puVar6 = puStack256;\n                if (iVar5 == 0) {\n                    puVar6 = *(*0x49e3b8 + iVar14 + 8);\n                    uVar8 = *(*(*0x49e3b8 + iVar14 + 0x10) + 8);\n                    *(&stack0xfffffffffffffec8 + iVar4) = 0x40bd7d;\n                    fcn.0040b7d0(\"  VirtualQuery failed for %d bytes at address %p\", uVar8, puVar6, in_R9);\n                    goto code_r0x0040bd7d;\n                }\n                uVar2 = *(*0x49e3b8 + iVar14);\n                *(&stack0xfffffffffffffec8 + iVar4) = 0x40bc55;\n                in_R9 = &stack0xfffffffffffffefc;\n                (*pcVar11)(puVar6, uVar17, uVar2);\n            }\n            iVar16 = iVar16 + 1;\n            iVar14 = iVar14 + 0x18;\n        } while (iVar16 < *0x49e3b4);\n    }\n    return;\n}\n",
        "token_count": 3272
    },
    "0040c030": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040c030(void)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x49e980);\n    pcVar3 = _sym.imp.KERNEL32.dll_TlsGetValue;\n    pcVar2 = _sym.imp.KERNEL32.dll_GetLastError;\n    for (puVar1 = *0x49e960; puVar1 != NULL; puVar1 = *(puVar1 + 4)) {\n        iVar5 = (*pcVar3)(*puVar1);\n        iVar4 = (*pcVar2)();\n        if ((iVar4 == 0) && (iVar5 != 0)) {\n            (**(puVar1 + 2))();\n        }\n    }\n    // WARNING: Could not recover jumptable at 0x0040c09a. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x49e980);\n    return;\n}\n",
        "token_count": 243
    },
    "0040c260": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.0040c260(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = arg1 + *(arg1 + 0x3c);\n    if (*piVar1 != 0x4550) {\n        return false;\n    }\n    return *(piVar1 + 6) == 0x20b;\n}\n",
        "token_count": 82
    },
    "0040c2a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "contain loop"
        ],
        "decompiled_code": "\nint64_t fcn.0040c2a0(int64_t arg1, uint64_t arg2)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    arg1 = arg1 + *(arg1 + 0x3c);\n    iVar2 = arg1 + 0x18 + *(arg1 + 0x14);\n    if (*(arg1 + 6) != 0) {\n        iVar1 = iVar2 + 0x28;\n        do {\n            if ((*(iVar2 + 0xc) <= arg2) && (arg2 < *(iVar2 + 0xc) + *(iVar2 + 8))) {\n                return iVar2;\n            }\n            iVar2 = iVar2 + 0x28;\n        } while (iVar2 != iVar1 + (*(arg1 + 6) - 1) * 0x28);\n    }\n    return 0;\n}\n",
        "token_count": 199
    },
    "0040c720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0040c720(int64_t arg1)\n\n{\n    return **(*(arg1 + 0x20) + 0x10) + *(*(arg1 + 0x20) + 8);\n}\n",
        "token_count": 52
    },
    "0040cc80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "delay execution",
            "delay execution",
            "delay execution",
            "delay execution",
            "delay execution",
            "contain loop",
            "create mutex",
            "check mutex and exit"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t fcn.0040cc80(ulong arg1, ulong arg2, code *arg3)\n\n{\n    uchar *arg2_00;\n    ulong *puVar1;\n    code *pcVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint32_t uVar10;\n    ulong auStack128 [5];\n    ulong uStack88;\n    ulong var_48h;\n    ulong uStack72;\n    \n    auStack128[0] = 0x40cca6;\n    uVar7 = arg1;\n    iVar4 = sub.msvcrt.dll_strlen();\n    auStack128[0] = 0x40ccbe;\n    iVar6 = fcn.0040ce40(uVar7);\n    iVar6 = -iVar6;\n    arg2_00 = &stack0xffffffffffffffa8 + iVar6;\n    *(&stack0xffffffffffffffa8 + iVar6) = 0x656d68732d636367;\n    *(&fcn.0040cc80::var_48h + iVar6) = 0x64742d6d;\n    *(&fcn.0040cc80::var_48h + iVar6 + 4) = 0x326d;\n    *(&fcn.0040cc80::var_48h + iVar6 + 6) = 0x2d;\n    *(&stack0xffffffffffffff80 + iVar6) = 0x40cd06;\n    sub.msvcrt.dll_memcpy(&fcn.0040cc80::var_48h + iVar6 + 7, arg1, iVar4);\n    puVar1 = &stack0xffffffffffffffb8 + iVar4 + iVar6;\n    *puVar1 = 0x6161616161616161;\n    puVar1[1] = 0x6161616161616161;\n    puVar1[2] = 0x6161616161616161;\n    puVar1[3] = 0x6161616161616161;\n    puVar1[4] = 0x6161616161616161;\n    puVar1[5] = 0x6161616161616161;\n    puVar1[6] = 0x6161616161616161;\n    puVar1[7] = 0x6161616161616161;\n    (&stack0xffffffffffffffa8)[(iVar4 + 0x50) + iVar6] = 0;\n    (&stack0xffffffffffffffa8)[(iVar4 + 0xf) + iVar6] = 0;\n    *(&stack0xffffffffffffff80 + iVar6) = 0x40cd4e;\n    uVar7 = (*_sym.imp.KERNEL32.dll_CreateMutexA)(0, 0);\n    (&stack0xffffffffffffffa8)[(iVar4 + 0xf) + iVar6] = 0x2d;\n    *(&stack0xffffffffffffff80 + iVar6) = 0x40cd64;\n    iVar5 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(uVar7, 0xffffffff);\n    if (iVar5 != 0) {\n        pcVar2 = swi(3);\n        uVar8 = (*pcVar2)();\n        return uVar8;\n    }\n    *(&stack0xffffffffffffff80 + iVar6) = 0x40cd72;\n    uVar3 = (*_sym.imp.KERNEL32.dll_FindAtomA)();\n    if (uVar3 == 0) {\n        *(&stack0xffffffffffffff80 + iVar6) = 0x40cd83;\n        uVar9 = sub.msvcrt.dll_malloc(arg2);\n        uVar8 = 0x40;\n        do {\n            if ((uVar9 >> (uVar8 & 0x3f) & 1) != 0) {\n                arg2_00[(iVar4 + 0x50) - uVar8] = 0x41;\n            }\n            uVar10 = uVar8 - 1;\n            uVar8 = uVar10;\n        } while (uVar10 != 0);\n        var_48h._4_4_ = iVar4 + 0x10;\n        *(&stack0xffffffffffffff80 + iVar6) = 0x40cdb7;\n        uVar3 = (*_sym.imp.KERNEL32.dll_AddAtomA)();\n        uVar8 = var_48h._4_4_;\n        if (uVar3 == 0) {\n            pcVar2 = swi(3);\n            uVar8 = (*pcVar2)();\n            return uVar8;\n        }\n        *(&stack0xffffffffffffff80 + iVar6) = 0x40cdcf;\n        uVar8 = fcn.0040cc00(uVar3, arg2_00, iVar4 + 0x51, uVar8);\n        if (uVar8 == uVar9) {\n            *(&stack0xffffffffffffff80 + iVar6) = 0x40ce2d;\n            sub.msvcrt.dll_memset(uVar9, 0, arg2);\n            if (arg3 != NULL) {\n                *(&stack0xffffffffffffff80 + iVar6) = 0x40ce38;\n                (*arg3)(uVar9);\n            }\n        }\n        else {\n            *(&stack0xffffffffffffff80 + iVar6) = 0x40cddf;\n            fcn.00416d90(uVar9);\n        }\n    }\n    else {\n        *(&stack0xffffffffffffff80 + iVar6) = 0x40ce1b;\n        uVar8 = fcn.0040cc00(uVar3, arg2_00, iVar4 + 0x51, iVar4 + 0x10);\n    }\n    *(&stack0xffffffffffffff80 + iVar6) = 0x40cde8;\n    (*_sym.imp.KERNEL32.dll_ReleaseMutex)(uVar7);\n    *(&stack0xffffffffffffff80 + iVar6) = 0x40cdf1;\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar7);\n    return uVar8;\n}\n",
        "token_count": 1380
    },
    "0040d350": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0040d350(ulong stream)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    ulong auStack16 [2];\n    \n    iVar1 = sub.msvcrt.dll_fgetpos(stream, auStack16);\n    uVar2 = 0xffffffffffffffff;\n    if (iVar1 == 0) {\n        uVar2 = auStack16[0];\n    }\n    return uVar2;\n}\n",
        "token_count": 94
    },
    "0040d380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040d380(int64_t arg1, int64_t arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (arg2 != 0) {\n        iVar2 = arg2 - 1U;\n        iVar1 = fcn.0040fb50(0, arg1, arg2 - 1U & 0xffffffff, arg3);\n        if (iVar1 <= iVar2) {\n            iVar2 = iVar1;\n        }\n        *(arg1 + iVar2) = 0;\n        return;\n    }\n    fcn.0040fb50(0, arg1, 0, arg3);\n    return;\n}\n",
        "token_count": 157
    },
    "0040dee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040dee0(ushort param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    char cStack15;\n    ushort uStack14;\n    int32_t aiStack12 [3];\n    \n    aiStack12[0] = 0;\n    uStack14 = param_1;\n    uVar1 = sub.msvcrt.dll____lc_codepage_func();\n    iVar2 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(uVar1, 0, &uStack14, 1, &cStack15, 1, 0, aiStack12);\n    if ((iVar2 == 0) || (aiStack12[0] != 0)) {\n        iVar2 = -1;\n    }\n    else {\n        iVar2 = cStack15;\n    }\n    return iVar2;\n}\n",
        "token_count": 189
    },
    "0040dfb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0040dfb0(uchar *arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    uint *puVar2;\n    uint16_t auStackX16 [12];\n    int32_t aiStack12 [3];\n    \n    auStackX16[0] = noname_1;\n    if (arg3 == 0) {\n        if (0xff < noname_1) {\ncode_r0x0040e01a:\n            puVar2 = sub.msvcrt.dll__errno();\n            *puVar2 = 0x2a;\n            return 0xffffffff;\n        }\n        *arg1 = noname_1;\n        uVar1 = 1;\n    }\n    else {\n        aiStack12[0] = 0;\n        uVar1 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(arg3, 0, auStackX16, 1, arg1, arg4, 0, aiStack12);\n        if ((uVar1 == 0) || (aiStack12[0] != 0)) goto code_r0x0040e01a;\n    }\n    return uVar1;\n}\n",
        "token_count": 268
    },
    "0040e340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0040e340(ushort *arg1, ulong arg2, ulong arg3, int64_t arg4)\n\n{\n    int32_t iVar1;\n    int64_t arg4_00;\n    ushort auStack42 [5];\n    \n    if (arg1 == NULL) {\n        arg1 = auStack42;\n    }\n    auStack42[0] = 0;\n    sub.msvcrt.dll____lc_codepage_func();\n    arg4_00 = 0x49e9d8;\n    if (arg4 != 0) {\n        arg4_00 = arg4;\n    }\n    iVar1 = fcn.0040e1c0(arg1, arg2, arg3, arg4_00);\n    return iVar1;\n}\n",
        "token_count": 168
    },
    "0040e610": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040e610(ulong c, int64_t *arg2)\n\n{\n    int32_t iVar1;\n    \n    if (((*(arg2 + 1) & 0x4000) != 0) || (iVar1 = *(arg2 + 0x24),  *(arg2 + 5) != iVar1 && iVar1 <= *(arg2 + 5))) {\n        if ((*(arg2 + 1) & 0x2000) != 0) {\n            sub.msvcrt.dll_fputc();\n            *(arg2 + 0x24) = *(arg2 + 0x24) + 1;\n            return;\n        }\n        *(*arg2 + *(arg2 + 0x24)) = c;\n        iVar1 = *(arg2 + 0x24);\n    }\n    *(arg2 + 0x24) = iVar1 + 1;\n    return;\n}\n",
        "token_count": 200
    },
    "0040e670": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040e670(uint16_t *arg1, ulong arg2, int64_t arg3)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    char acStack72 [16];\n    char *pcVar3;\n    \n    fcn.0040e030(acStack72, 0);\n    iVar1 = *(arg3 + 0x10);\n    if ((-1 < iVar1) && (iVar1 < arg2)) {\n        arg2._0_4_ = iVar1;\n    }\n    if (arg2 < *(arg3 + 0xc)) {\n        iVar1 = *(arg3 + 0xc) - arg2;\n        *(arg3 + 0xc) = iVar1;\n        if ((0 < iVar1) && ((*(arg3 + 9) & 4) == 0)) {\n            *(arg3 + 0xc) = iVar1 + -1;\n            do {\n                fcn.0040e610(0x20, arg3);\n                iVar1 = *(arg3 + 0xc);\n                *(arg3 + 0xc) = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n    }\n    else {\n        *(arg3 + 0xc) = 0xffffffff;\n    }\n    for (; 0 < arg2; arg2._0_4_ = arg2 + -1) {\n        iVar1 = fcn.0040e030(acStack72, *arg1);\n        if (iVar1 < 1) break;\n        pcVar3 = acStack72;\n        do {\n            pcVar2 = pcVar3 + 1;\n            fcn.0040e610(*pcVar3, arg3);\n            pcVar3 = pcVar2;\n        } while (pcVar2 != acStack72 + (iVar1 - 1) + 1);\n        arg1 = arg1 + 1;\n    }\n    while (iVar1 = *(arg3 + 0xc),  *(arg3 + 0xc) = iVar1 + -1,  0 < iVar1) {\n        fcn.0040e610(0x20, arg3);\n    }\n    return;\n}\n",
        "token_count": 481
    },
    "0040e780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.0040e780(char *arg1, ulong arg2, int64_t arg3)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    ulong var_1h;\n    \n    iVar2 = *(arg3 + 0x10);\n    if ((-1 < iVar2) && (iVar2 < arg2)) {\n        arg2._0_4_ = iVar2;\n    }\n    if (arg2 < *(arg3 + 0xc)) {\n        iVar2 = *(arg3 + 0xc) - arg2;\n        *(arg3 + 0xc) = iVar2;\n        if ((0 < iVar2) && ((*(arg3 + 9) & 4) == 0)) {\n            *(arg3 + 0xc) = iVar2 + -1;\n            do {\n                fcn.0040e610(0x20, arg3);\n                iVar2 = *(arg3 + 0xc);\n                *(arg3 + 0xc) = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    else {\n        *(arg3 + 0xc) = 0xffffffff;\n    }\n    pcVar1 = arg1 + (arg2 - 1) + 1;\n    if (arg2 == 0) goto code_r0x0040e81f;\n    do {\n        pcVar3 = arg1 + 1;\n        fcn.0040e610(*arg1, arg3);\n        arg1 = pcVar3;\n    } while (pcVar3 != pcVar1);\n    iVar2 = *(arg3 + 0xc);\n    *(arg3 + 0xc) = iVar2 + -1;\n    while (0 < iVar2) {\n        fcn.0040e610(0x20, arg3);\ncode_r0x0040e81f:\n        iVar2 = *(arg3 + 0xc);\n        *(arg3 + 0xc) = iVar2 + -1;\n    }\n    return;\n}\n",
        "token_count": 466
    },
    "0040f2a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040f2a0(ulong arg1, ulong arg2, ulong arg3, int64_t arg4)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int64_t arg1_00;\n    int32_t iVar3;\n    \n    iVar3 = 1;\n    arg3._0_4_ = arg3 + -1;\n    arg1_00 = arg3;\n    while (arg3._0_4_ = arg3 / 10,  arg3 != 0) {\n        iVar3 = iVar3 + 1;\n    }\n    iVar2 = *(arg4 + 0x2c);\n    if (*(arg4 + 0x2c) <= iVar3) {\n        iVar2 = iVar3;\n    }\n    if (iVar2 + 2 < *(arg4 + 0xc)) {\n        *(arg4 + 0xc) = *(arg4 + 0xc) - (iVar2 + 2);\n    }\n    else {\n        *(arg4 + 0xc) = 0xffffffff;\n    }\n    fcn.0040ef80(arg1, arg2, 1, arg4);\n    uVar1 = *(arg4 + 8);\n    *(arg4 + 0x10) = *(arg4 + 0x2c);\n    *(arg4 + 8) = uVar1 | 0x1c0;\n    fcn.0040e610(uVar1 & 0x20 | 0x45, arg4);\n    *(arg4 + 0xc) = *(arg4 + 0xc) + iVar2 + 1;\n    fcn.0040e8e0(arg1_00, arg4);\n    return;\n}\n",
        "token_count": 381
    },
    "0040f370": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040f370(unkbyte10 *noname_0, int64_t arg2)\n\n{\n    unkbyte10 Var1;\n    ulong arg2_00;\n    uint64_t arg3;\n    ulong uStack72;\n    ulong uStack64;\n    uint32_t uStack48;\n    uint32_t uStack44;\n    ulong uStack40;\n    ushort uStack32;\n    unkbyte6 Stack30;\n    \n    Var1 = *noname_0;\n    if (*(arg2 + 0x10) < 0) {\n        *(arg2 + 0x10) = 6;\n        arg3 = 7;\n    }\n    else {\n        arg3 = *(arg2 + 0x10) + 1;\n    }\n    uStack40 = Var1;\n    uStack32 = Var1 >> 0x40;\n    uStack72 = uStack40;\n    uStack64 = CONCAT62(Stack30, uStack32);\n    arg2_00 = fcn.0040e540(2, &uStack72, arg3, &uStack44);\n    if (uStack44 != 0xffff8000) {\n        fcn.0040f2a0(uStack48, arg2_00, uStack44, arg2);\n        fcn.00414d70(arg2_00);\n        return;\n    }\n    fcn.0040e840(uStack48, arg2_00, arg2);\n    fcn.00414d70(arg2_00);\n    return;\n}\n",
        "token_count": 334
    },
    "0040f420": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040f420(unkbyte10 *noname_0, int64_t arg2)\n\n{\n    unkbyte10 Var1;\n    int32_t iVar2;\n    ulong arg2_00;\n    uint64_t arg3;\n    ulong uStack72;\n    ulong uStack64;\n    uint32_t uStack48;\n    uint32_t uStack44;\n    ulong uStack40;\n    ushort uStack32;\n    unkbyte6 Stack30;\n    \n    arg3 = *(arg2 + 0x10);\n    Var1 = *noname_0;\n    if (*(arg2 + 0x10) < 0) {\n        *(arg2 + 0x10) = 6;\n        arg3 = 6;\n    }\n    uStack40 = Var1;\n    uStack32 = Var1 >> 0x40;\n    uStack72 = uStack40;\n    uStack64 = CONCAT62(Stack30, uStack32);\n    arg2_00 = fcn.0040e540(3, &uStack72, arg3, &uStack44);\n    if (uStack44 != 0xffff8000) {\n        fcn.0040ef80(uStack48, arg2_00, uStack44, arg2);\n        iVar2 = *(arg2 + 0xc);\n        *(arg2 + 0xc) = iVar2 + -1;\n        while (0 < iVar2) {\n            fcn.0040e610(0x20, arg2);\n            iVar2 = *(arg2 + 0xc);\n            *(arg2 + 0xc) = iVar2 + -1;\n        }\n        fcn.00414d70(arg2_00);\n        return;\n    }\n    fcn.0040e840(uStack48, arg2_00, arg2);\n    fcn.00414d70(arg2_00);\n    return;\n}\n",
        "token_count": 413
    },
    "00414d20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414d20(char *arg1, char **arg2, uint64_t arg3)\n\n{\n    char cVar1;\n    char *pcVar2;\n    char *pcVar3;\n    \n    pcVar3 = fcn.00414cf0(arg3 & 0xffffffff);\n    cVar1 = *arg1;\n    *pcVar3 = cVar1;\n    pcVar2 = arg1 + 1;\n    while (cVar1 != '\\0') {\n        cVar1 = *pcVar2;\n        pcVar3 = pcVar3 + 1;\n        *pcVar3 = cVar1;\n        pcVar2 = pcVar2 + 1;\n    }\n    if (arg2 != NULL) {\n        *arg2 = pcVar3;\n    }\n    return;\n}\n",
        "token_count": 177
    },
    "00415190": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00415190(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uint uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    \n    iVar1 = *(arg1 + 0x14);\n    iVar2 = 0;\n    uVar4 = arg3;\n    do {\n        uVar5 = *(arg1 + 0x18 + iVar2 * 4) * arg2 + uVar4;\n        *(arg1 + 0x18 + iVar2 * 4) = uVar5;\n        iVar2 = iVar2 + 1;\n        uVar4 = uVar5 >> 0x20;\n    } while (iVar2 < iVar1);\n    iVar2 = arg1;\n    if (uVar4 != 0) {\n        uVar3 = uVar5 >> 0x20;\n        if (iVar1 < *(arg1 + 0xc)) {\n            *(arg1 + 0x18 + iVar1 * 4) = uVar3;\n            *(arg1 + 0x14) = iVar1 + 1;\n        }\n        else {\n            iVar2 = fcn.00415020(*(arg1 + 8) + 1);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                sub.msvcrt.dll_memcpy(iVar2 + 0x10, arg1 + 0x10, *(arg1 + 0x14) * 4 + 8);\n                fcn.00415120(arg1);\n                *(iVar2 + 0x18 + iVar1 * 4) = uVar3;\n                *(iVar2 + 0x14) = iVar1 + 1;\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 409
    },
    "00415250": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00415250(ulong arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.00415020(1);\n    if (iVar1 != 0) {\n        *(iVar1 + 0x18) = arg1;\n        *(iVar1 + 0x14) = 1;\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "00415e30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00415e30(int64_t arg1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t *puVar5;\n    \n    puVar5 = arg1 + 0x18;\n    puVar1 = puVar5 + *(arg1 + 0x14);\n    if (puVar1 <= puVar5) {\n        return 0;\n    }\n    uVar2 = *(arg1 + 0x18);\n    iVar4 = 0;\n    while( true ) {\n        if (uVar2 != 0) {\n            iVar3 = 0;\n            for (; (uVar2 & 1) == 0; uVar2 = uVar2 >> 1 | 0x80000000) {\n                iVar3 = iVar3 + 1;\n            }\n            return iVar4 + iVar3;\n        }\n        puVar5 = puVar5 + 1;\n        iVar4 = iVar4 + 0x20;\n        if (puVar1 <= puVar5) break;\n        uVar2 = *puVar5;\n    }\n    return iVar4;\n}\n",
        "token_count": 265
    },
    "00416c60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00416c60(void)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uint64_t uVar3;\n    uint8_t *puVar4;\n    \n    puVar4 = 0x483acf;\n    cVar2 = '\\x10';\n    uVar3 = 0x30;\n    do {\n        *(uVar3 + 0x49f540) = cVar2;\n        uVar1 = *puVar4;\n        uVar3 = uVar1;\n        cVar2 = cVar2 + '\\x01';\n        puVar4 = puVar4 + 1;\n    } while (uVar1 != 0);\n    puVar4 = 0x483ac8;\n    cVar2 = '\\x1a';\n    uVar3 = 0x61;\n    do {\n        *(uVar3 + 0x49f540) = cVar2;\n        uVar1 = *puVar4;\n        uVar3 = uVar1;\n        cVar2 = cVar2 + '\\x01';\n        puVar4 = puVar4 + 1;\n    } while (uVar1 != 0);\n    puVar4 = 0x483ac1;\n    cVar2 = '\\x1a';\n    uVar3 = 0x41;\n    do {\n        *(uVar3 + 0x49f540) = cVar2;\n        uVar1 = *puVar4;\n        uVar3 = uVar1;\n        cVar2 = cVar2 + '\\x01';\n        puVar4 = puVar4 + 1;\n    } while (uVar1 != 0);\n    return;\n}\n",
        "token_count": 370
    },
    "004172b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.004172b0(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t arg1_00;\n    int64_t *piVar3;\n    \n    if (*0x49f3e8 == 0) {\n        *0x49f3e8 = fcn.0041d1b0(\"once_global_shmem\", 0x10, 0x417060);\n    }\n    fcn.0041d560(*0x49f3e8);\n    if (*0x49f3f0 == NULL) {\n        *0x49f3f0 = fcn.0041d1b0(\"once_obj_shmem\", 8, 0);\n    }\n    arg1_00 = *0x49f3e8;\n    piVar1 = **0x49f3f0;\n    if (piVar1 == NULL) {\n        piVar3 = sub.msvcrt.dll_calloc(1);\n        *piVar3 = arg1;\n        *(piVar3 + 2) = 1;\n        if (*0x49f3f0 == NULL) {\n            *0x49f3f0 = fcn.0041d1b0(\"once_obj_shmem\", 8, 0);\n        }\n        **0x49f3f0 = piVar3;\ncode_r0x00417323:\n        fcn.0041b880(piVar3 + 1, 0);\n        arg1_00 = *0x49f3e8;\n    }\n    else {\n        iVar2 = *piVar1;\n        while (iVar2 != arg1) {\n            piVar3 = piVar1[3];\n            if (piVar3 == NULL) {\n                piVar3 = sub.msvcrt.dll_calloc(1);\n                *piVar3 = arg1;\n                *(piVar3 + 2) = 1;\n                piVar1[3] = piVar3;\n                goto code_r0x00417323;\n            }\n            piVar1 = piVar3;\n            iVar2 = *piVar3;\n        }\n        *(piVar1 + 2) = *(piVar1 + 2) + 1;\n        piVar3 = piVar1;\n    }\n    if (arg1_00 != 0) {\n        fcn.0041d4c0(arg1_00);\n        return piVar3;\n    }\n    *0x49f3e8 = fcn.0041d1b0(\"once_global_shmem\", 0x10, 0x417060);\n    fcn.0041d4c0(*0x49f3e8);\n    return piVar3;\n}\n",
        "token_count": 605
    },
    "00417430": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00417430(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    code *pcVar6;\n    ulong in_RAX;\n    int64_t iVar7;\n    int64_t iVar8;\n    \n    if (arg1 == 0) {\n        return in_RAX;\n    }\n    if (*0x49f3e8 == NULL) {\n        *0x49f3e8 = fcn.0041d1b0(\"once_global_shmem\", 0x10, 0x417060);\n    }\n    fcn.0041d560(*0x49f3e8);\n    if (*0x49f3f0 == NULL) {\n        *0x49f3f0 = fcn.0041d1b0(\"once_obj_shmem\", 8, 0);\n    }\n    iVar7 = **0x49f3f0;\n    if ((arg1 == iVar7) || (iVar7 == 0)) {\n        iVar8 = 0;\n    }\n    else {\n        do {\n            iVar8 = iVar7;\n            iVar7 = *(iVar8 + 0x18);\n            if (arg1 == iVar7) break;\n        } while (iVar7 != 0);\n    }\n    if (iVar7 == 0) {\n        iVar7 = (*_sym.imp.msvcrt.dll___iob_func)();\n        sub.msvcrt.dll_fprintf(iVar7 + 0x60, \"%p not found?!?!\\n\", arg1);\n    }\n    else {\n        piVar1 = arg1 + 0x10;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            fcn.0041beb0(arg1 + 8);\n            if (iVar8 == 0) {\n                if (*0x49f3f0 == NULL) {\n                    *0x49f3f0 = fcn.0041d1b0(\"once_obj_shmem\", 8, 0);\n                }\n                **0x49f3f0 = *(arg1 + 0x18);\n            }\n            else {\n                *(iVar8 + 0x18) = *(arg1 + 0x18);\n            }\n            fcn.00416d90(arg1);\n        }\n    }\n    if (*0x49f3e8 == NULL) {\n        *0x49f3e8 = fcn.0041d1b0(\"once_global_shmem\", 0x10, 0x417060);\n    }\n    puVar5 = *0x49f3e8;\n    if (*0x49f3e8 == NULL) {\n        return 0x16;\n    }\n    puVar2 = *0x49f3e8 + 3;\n    LOCK();\n    puVar3 = *0x49f3e8 + 3;\n    *puVar3 = *puVar3 - 1;\n    pcVar6 = _sym.imp.KERNEL32.dll_Sleep;\n    uVar4 = *puVar3;\n    while (uVar4 != 0) {\n        LOCK();\n        *puVar2 = *puVar2 + 1;\n        (*pcVar6)(0);\n        LOCK();\n        *puVar2 = *puVar2 - 1;\n        uVar4 = *puVar2;\n    }\n    if (puVar5[1] < *puVar5) {\n        puVar5[1] = puVar5[1] + 1;\n        if (puVar5[1] != *puVar5) goto code_r0x0041d51c;\n    }\n    else if (puVar5[1] != *puVar5) goto code_r0x0041d51c;\n    *puVar5 = 0;\n    puVar5[1] = 0;\ncode_r0x0041d51c:\n    LOCK();\n    puVar5[3] = puVar5[3] + 1;\n    return 0;\n}\n",
        "token_count": 917
    },
    "0041d4c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "delay execution",
            "delay execution",
            "delay execution",
            "delay execution",
            "delay execution"
        ],
        "decompiled_code": "\nulong fcn.0041d4c0(uint32_t *arg1)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    code *pcVar4;\n    \n    if (arg1 == NULL) {\n        return 0x16;\n    }\n    puVar1 = arg1 + 3;\n    LOCK();\n    puVar2 = arg1 + 3;\n    *puVar2 = *puVar2 - 1;\n    pcVar4 = _sym.imp.KERNEL32.dll_Sleep;\n    uVar3 = *puVar2;\n    while (uVar3 != 0) {\n        LOCK();\n        *puVar1 = *puVar1 + 1;\n        (*pcVar4)(0);\n        LOCK();\n        *puVar1 = *puVar1 - 1;\n        uVar3 = *puVar1;\n    }\n    if (arg1[1] < *arg1) {\n        arg1[1] = arg1[1] + 1;\n        if (arg1[1] != *arg1) goto code_r0x0041d51c;\n    }\n    else if (arg1[1] != *arg1) goto code_r0x0041d51c;\n    *arg1 = 0;\n    arg1[1] = 0;\ncode_r0x0041d51c:\n    LOCK();\n    arg1[3] = arg1[3] + 1;\n    return 0;\n}\n",
        "token_count": 334
    },
    "00417be0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00417be0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t arg1;\n    \n    if (*0x49f418 == 0) {\n        *0x49f418 = fcn.0041d1b0(\"mtx_pthr_locked_shmem\", 8, 0x417050);\n    }\n    fcn.0041bdb0(*0x49f418);\n    if (*0x49f428 == NULL) {\n        *0x49f428 = fcn.0041d1b0(\"pthr_root_shmem\", 8, 0);\n    }\n    arg1 = **0x49f428;\n    if (arg1 == 0) {\n        iVar1 = sub.msvcrt.dll_calloc(1, 0x1e0);\n        arg1 = iVar1;\n        if (iVar1 != 0) {\n            iVar2 = fcn.004175e0(iVar1);\n            *(iVar1 + 0x1d8) = iVar2;\n            if (iVar2 == 0) {\n                arg1 = 0;\n                fcn.00416d90(iVar1);\n            }\n        }\n    }\n    else {\n        iVar1 = fcn.004175e0(arg1);\n        *(arg1 + 0x1d8) = iVar1;\n        if (iVar1 == 0) {\n            arg1 = 0;\n        }\n        else {\n            if (*0x49f428 == NULL) {\n                *0x49f428 = fcn.0041d1b0(\"pthr_root_shmem\", 8, 0);\n            }\n            iVar1 = *(arg1 + 0x1d0);\n            **0x49f428 = iVar1;\n            if (iVar1 == 0) {\n                if (*0x49f420 == NULL) {\n                    *0x49f420 = fcn.0041d1b0(\"pthr_last_shmem\", 8, 0);\n                }\n                **0x49f420 = 0;\n            }\n            *(arg1 + 0x1d0) = 0;\n        }\n    }\n    if (*0x49f418 == 0) {\n        *0x49f418 = fcn.0041d1b0(\"mtx_pthr_locked_shmem\", 8, 0x417050);\n    }\n    fcn.0041b7a0(*0x49f418);\n    return arg1;\n}\n",
        "token_count": 553
    },
    "0041b560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0041b560(int32_t *arg1, ulong arg2)\n\n{\n    ulong *puVar1;\n    code *pcVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    ulong uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    char *arg1_00;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    bool bVar13;\n    ulong auStack184 [5];\n    ulong uStack144;\n    ulong uStack136;\n    uint64_t uStack128;\n    \n    uStack128 = arg2;\n    if (*0x49f498 == 0) {\n        *0x49f498 = fcn.0041d1b0(\"mutex_global_shmem\", 0x10, 0x41b1d0);\n    }\n    fcn.0041d560(*0x49f498);\n    iVar6 = *0x49f498;\n    if ((*arg1 == -0x454e0ff3) && (0 < arg1[1])) {\n        bVar13 = *0x49f498 == 0;\n        arg1[1] = arg1[1] + -1;\n        if (bVar13) {\n            *0x49f498 = fcn.0041d1b0(\"mutex_global_shmem\", 0x10, 0x41b1d0);\n            fcn.0041d4c0(*0x49f498);\n            return uStack128;\n        }\n        fcn.0041d4c0(iVar6);\n        return uStack128;\n    }\n    iVar6 = (*_sym.imp.msvcrt.dll___iob_func)();\n    sub.msvcrt.dll_fprintf(iVar6 + 0x60, 0x483d68, \"(m_->valid == LIFE_MUTEX) && (m_->busy > 0)\");\n    sub.msvcrt.dll_exit(1);\n    arg1_00 = \"mutex_global_shmem\";\n    auStack184[0] = 0x41d1d6;\n    uStack136 = arg1;\n    iVar4 = sub.msvcrt.dll_strlen();\n    auStack184[0] = 0x41d1ee;\n    iVar7 = fcn.0040ce40(arg1_00);\n    iVar7 = -iVar7;\n    iVar6 = &uStack144 + iVar7;\n    *(&uStack144 + iVar7) = 0x656d68732d636367;\n    *(&uStack136 + iVar7) = 0x64742d6d;\n    *(&uStack136 + iVar7 + 4) = 0x326d;\n    uVar12 = iVar4 + 0x50;\n    *(&uStack136 + iVar7 + 6) = 0x2d;\n    *(auStack184 + iVar7) = 0x41d236;\n    sub.msvcrt.dll_memcpy(&uStack136 + iVar7 + 7, \"mutex_global_shmem\", iVar4);\n    puVar1 = &uStack128 + iVar4 + iVar7;\n    *puVar1 = 0x6161616161616161;\n    puVar1[1] = 0x6161616161616161;\n    puVar1[2] = 0x6161616161616161;\n    puVar1[3] = 0x6161616161616161;\n    puVar1[4] = 0x6161616161616161;\n    puVar1[5] = 0x6161616161616161;\n    puVar1[6] = 0x6161616161616161;\n    puVar1[7] = 0x6161616161616161;\n    *(&uStack144 + uVar12 + iVar7) = 0;\n    *(&uStack144 + (iVar4 + 0xf) + iVar7) = 0;\n    *(auStack184 + iVar7) = 0x41d27e;\n    uVar8 = (*_sym.imp.KERNEL32.dll_CreateMutexA)(0, 0);\n    *(&uStack144 + (iVar4 + 0xf) + iVar7) = 0x2d;\n    *(auStack184 + iVar7) = 0x41d294;\n    iVar5 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(uVar8, 0xffffffff);\n    if (iVar5 != 0) {\n        pcVar2 = swi(3);\n        uVar9 = (*pcVar2)();\n        return uVar9;\n    }\n    *(auStack184 + iVar7) = 0x41d2a2;\n    uVar3 = (*_sym.imp.KERNEL32.dll_FindAtomA)();\n    if (uVar3 == 0) {\n        *(auStack184 + iVar7) = 0x41d2b7;\n        uVar10 = sub.msvcrt.dll_malloc(0x10);\n        uVar9 = 0x40;\n        do {\n            if ((uVar10 >> (uVar9 & 0x3f) & 1) != 0) {\n                *(iVar6 + (uVar12 - uVar9)) = 0x41;\n            }\n            uVar11 = uVar9 - 1;\n            uVar9 = uVar11;\n        } while (uVar11 != 0);\n        *(auStack184 + iVar7) = 0x41d2e3;\n        uVar3 = (*_sym.imp.KERNEL32.dll_AddAtomA)();\n        if (uVar3 == 0) {\n            pcVar2 = swi(3);\n            uVar9 = (*pcVar2)();\n            return uVar9;\n        }\n        *(auStack184 + iVar7) = 0x41d2f9;\n        uVar9 = fcn.0041d130(uVar3, iVar6, uVar12, iVar4 + 0x10);\n        if (uVar9 == uVar10) {\n            *(auStack184 + iVar7) = 0x41d356;\n            sub.msvcrt.dll_memset(uVar10, 0, 0x10);\n            *(auStack184 + iVar7) = 0x41d361;\n            (*0x41b1d0)(uVar10);\n        }\n        else {\n            *(auStack184 + iVar7) = 0x41d309;\n            fcn.00416d90(uVar10);\n        }\n    }\n    else {\n        *(auStack184 + iVar7) = 0x41d344;\n        uVar9 = fcn.0041d130(uVar3, iVar6, uVar12, iVar4 + 0x10);\n    }\n    *(auStack184 + iVar7) = 0x41d312;\n    (*_sym.imp.KERNEL32.dll_ReleaseMutex)(uVar8);\n    *(auStack184 + iVar7) = 0x41d31b;\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar8);\n    return uVar9;\n}\n",
        "token_count": 1587
    },
    "0041d1b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "delay execution",
            "delay execution",
            "delay execution",
            "delay execution",
            "delay execution",
            "delay execution",
            "delay execution",
            "delay execution",
            "delay execution",
            "delay execution",
            "delay execution",
            "delay execution",
            "delay execution",
            "delay execution",
            "delay execution",
            "delay execution",
            "delay execution",
            "delay execution",
            "delay execution",
            "delay execution",
            "delay execution",
            "delay execution",
            "delay execution",
            "delay execution",
            "delay execution",
            "delay execution",
            "delay execution",
            "contain loop",
            "create mutex",
            "check mutex and exit"
        ],
        "decompiled_code": "\nuint64_t fcn.0041d1b0(ulong arg1, ulong arg2, code *arg3)\n\n{\n    uchar *arg2_00;\n    ulong *puVar1;\n    code *pcVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    ulong auStack112 [5];\n    ulong uStack72;\n    \n    auStack112[0] = 0x41d1d6;\n    uVar7 = arg1;\n    iVar4 = sub.msvcrt.dll_strlen();\n    auStack112[0] = 0x41d1ee;\n    iVar6 = fcn.0040ce40(uVar7);\n    iVar6 = -iVar6;\n    arg2_00 = &stack0xffffffffffffffb8 + iVar6;\n    *(&stack0xffffffffffffffb8 + iVar6) = 0x656d68732d636367;\n    *(&stack0xffffffffffffffc0 + iVar6) = 0x64742d6d;\n    *(&stack0xffffffffffffffc4 + iVar6) = 0x326d;\n    uVar11 = iVar4 + 0x50;\n    (&stack0xffffffffffffffc6)[iVar6] = 0x2d;\n    *(&stack0xffffffffffffff90 + iVar6) = 0x41d236;\n    sub.msvcrt.dll_memcpy(&stack0xffffffffffffffc7 + iVar6, arg1, iVar4);\n    puVar1 = &stack0xffffffffffffffc8 + iVar4 + iVar6;\n    *puVar1 = 0x6161616161616161;\n    puVar1[1] = 0x6161616161616161;\n    puVar1[2] = 0x6161616161616161;\n    puVar1[3] = 0x6161616161616161;\n    puVar1[4] = 0x6161616161616161;\n    puVar1[5] = 0x6161616161616161;\n    puVar1[6] = 0x6161616161616161;\n    puVar1[7] = 0x6161616161616161;\n    (&stack0xffffffffffffffb8)[uVar11 + iVar6] = 0;\n    (&stack0xffffffffffffffb8)[(iVar4 + 0xf) + iVar6] = 0;\n    *(&stack0xffffffffffffff90 + iVar6) = 0x41d27e;\n    uVar7 = (*_sym.imp.KERNEL32.dll_CreateMutexA)(0, 0);\n    (&stack0xffffffffffffffb8)[(iVar4 + 0xf) + iVar6] = 0x2d;\n    *(&stack0xffffffffffffff90 + iVar6) = 0x41d294;\n    iVar5 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(uVar7, 0xffffffff);\n    if (iVar5 != 0) {\n        pcVar2 = swi(3);\n        uVar8 = (*pcVar2)();\n        return uVar8;\n    }\n    *(&stack0xffffffffffffff90 + iVar6) = 0x41d2a2;\n    uVar3 = (*_sym.imp.KERNEL32.dll_FindAtomA)();\n    if (uVar3 == 0) {\n        *(&stack0xffffffffffffff90 + iVar6) = 0x41d2b7;\n        uVar9 = sub.msvcrt.dll_malloc(arg2);\n        uVar8 = 0x40;\n        do {\n            if ((uVar9 >> (uVar8 & 0x3f) & 1) != 0) {\n                arg2_00[uVar11 - uVar8] = 0x41;\n            }\n            uVar10 = uVar8 - 1;\n            uVar8 = uVar10;\n        } while (uVar10 != 0);\n        *(&stack0xffffffffffffff90 + iVar6) = 0x41d2e3;\n        uVar3 = (*_sym.imp.KERNEL32.dll_AddAtomA)();\n        if (uVar3 == 0) {\n            pcVar2 = swi(3);\n            uVar8 = (*pcVar2)();\n            return uVar8;\n        }\n        *(&stack0xffffffffffffff90 + iVar6) = 0x41d2f9;\n        uVar8 = fcn.0041d130(uVar3, arg2_00, uVar11, iVar4 + 0x10);\n        if (uVar8 == uVar9) {\n            *(&stack0xffffffffffffff90 + iVar6) = 0x41d356;\n            sub.msvcrt.dll_memset(uVar9, 0, arg2);\n            if (arg3 != NULL) {\n                *(&stack0xffffffffffffff90 + iVar6) = 0x41d361;\n                (*arg3)(uVar9);\n            }\n        }\n        else {\n            *(&stack0xffffffffffffff90 + iVar6) = 0x41d309;\n            fcn.00416d90(uVar9);\n        }\n    }\n    else {\n        *(&stack0xffffffffffffff90 + iVar6) = 0x41d344;\n        uVar8 = fcn.0041d130(uVar3, arg2_00, uVar11, iVar4 + 0x10);\n    }\n    *(&stack0xffffffffffffff90 + iVar6) = 0x41d312;\n    (*_sym.imp.KERNEL32.dll_ReleaseMutex)(uVar7);\n    *(&stack0xffffffffffffff90 + iVar6) = 0x41d31b;\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar7);\n    return uVar8;\n}\n",
        "token_count": 1310
    },
    "00418790": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00418790(int64_t arg1)\n\n{\n    ulong uVar1;\n    \n    if (arg1 != 0) {\n        if (*0x49f418 == 0) {\n            *0x49f418 = fcn.0041d1b0(\"mtx_pthr_locked_shmem\", 8, 0x417050);\n        }\n        fcn.0041bdb0(*0x49f418);\n        uVar1 = fcn.00417080(arg1);\n        if (*0x49f418 == 0) {\n            *0x49f418 = fcn.0041d1b0(\"mtx_pthr_locked_shmem\", 8, 0x417050);\n        }\n        fcn.0041b7a0(*0x49f418);\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 190
    },
    "00419d20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00419d20(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.004183e0();\n    if (iVar1 != 0) {\n        return *(iVar1 + 0x1d8);\n    }\n    return 0;\n}\n",
        "token_count": 63
    },
    "00419d50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00419d50(ulong arg1)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    \n    iVar1 = fcn.00418790(arg1);\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = *(iVar1 + 0x30);\n    }\n    return uVar2;\n}\n",
        "token_count": 88
    },
    "00419db0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00419db0(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.004183e0();\n    if (iVar1 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = iVar1 + 0x18;\n    }\n    return iVar1;\n}\n",
        "token_count": 76
    },
    "0041a050": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041a050(ulong arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.004183e0();\n    if (iVar1 != 0) {\n        if (arg1 < 1) {\n            LOCK();\n            *(iVar1 + 0x20) = *(iVar1 + 0x20) + -1;\n            return;\n        }\n        LOCK();\n        *(iVar1 + 0x20) = *(iVar1 + 0x20) + 1;\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "0041a2b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041a2b0(ulong arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.004183e0();\n    if (arg1 != 0) {\n        fcn.0041a160();\n        if (*(iVar1 + 0x30) == 0) {\n            (*_sym.imp.KERNEL32.dll_Sleep)(arg1);\n        }\n        else {\n            (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*(iVar1 + 0x30), arg1);\n        }\n        fcn.0041a160();\n        return 0;\n    }\n    fcn.0041a160();\n    (*_sym.imp.KERNEL32.dll_Sleep)(0);\n    fcn.0041a160();\n    return 0;\n}\n",
        "token_count": 175
    },
    "0041be70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0041be70(int32_t **arg1)\n\n{\n    uchar *arg2;\n    ulong *puVar1;\n    code *pcVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    ulong uVar9;\n    uint64_t uVar10;\n    char *arg1_00;\n    uint32_t uVar11;\n    bool bVar12;\n    ulong auStack184 [5];\n    ulong uStack144;\n    ulong uStack136;\n    uint64_t uStack128;\n    \n    uVar8 = fcn.0041bab0(arg1);\n    if (uVar8 != 0) {\n        return uVar8;\n    }\n    uVar4 = fcn.0041b4e0(*arg1);\n    uStack136 = *arg1;\n    uStack128 = uVar4;\n    if (*0x49f498 == 0) {\n        *0x49f498 = fcn.0041d1b0(\"mutex_global_shmem\", 0x10, 0x41b1d0);\n    }\n    fcn.0041d560(*0x49f498);\n    iVar7 = *0x49f498;\n    if ((*uStack136 == -0x454e0ff3) && (0 < uStack136[1])) {\n        bVar12 = *0x49f498 == 0;\n        uStack136[1] = uStack136[1] + -1;\n        if (bVar12) {\n            *0x49f498 = fcn.0041d1b0(\"mutex_global_shmem\", 0x10, 0x41b1d0);\n            fcn.0041d4c0(*0x49f498);\n            return uStack128;\n        }\n        fcn.0041d4c0(iVar7);\n        return uStack128;\n    }\n    iVar7 = (*_sym.imp.msvcrt.dll___iob_func)();\n    sub.msvcrt.dll_fprintf(iVar7 + 0x60, 0x483d68, \"(m_->valid == LIFE_MUTEX) && (m_->busy > 0)\");\n    sub.msvcrt.dll_exit(1);\n    arg1_00 = \"mutex_global_shmem\";\n    auStack184[0] = 0x41d1d6;\n    iVar5 = sub.msvcrt.dll_strlen();\n    auStack184[0] = 0x41d1ee;\n    iVar7 = fcn.0040ce40(arg1_00);\n    iVar7 = -iVar7;\n    arg2 = &stack0xffffffffffffff70 + iVar7;\n    *(&stack0xffffffffffffff70 + iVar7) = 0x656d68732d636367;\n    *(&stack0xffffffffffffff78 + iVar7) = 0x64742d6d;\n    *(&stack0xffffffffffffff7c + iVar7) = 0x326d;\n    uVar4 = iVar5 + 0x50;\n    (&stack0xffffffffffffff7e)[iVar7] = 0x2d;\n    *(&stack0xffffffffffffff48 + iVar7) = 0x41d236;\n    sub.msvcrt.dll_memcpy(&stack0xffffffffffffff7f + iVar7, \"mutex_global_shmem\", iVar5);\n    puVar1 = &stack0xffffffffffffff80 + iVar5 + iVar7;\n    *puVar1 = 0x6161616161616161;\n    puVar1[1] = 0x6161616161616161;\n    puVar1[2] = 0x6161616161616161;\n    puVar1[3] = 0x6161616161616161;\n    puVar1[4] = 0x6161616161616161;\n    puVar1[5] = 0x6161616161616161;\n    puVar1[6] = 0x6161616161616161;\n    puVar1[7] = 0x6161616161616161;\n    (&stack0xffffffffffffff70)[uVar4 + iVar7] = 0;\n    (&stack0xffffffffffffff70)[(iVar5 + 0xf) + iVar7] = 0;\n    *(&stack0xffffffffffffff48 + iVar7) = 0x41d27e;\n    uVar9 = (*_sym.imp.KERNEL32.dll_CreateMutexA)(0, 0);\n    (&stack0xffffffffffffff70)[(iVar5 + 0xf) + iVar7] = 0x2d;\n    *(&stack0xffffffffffffff48 + iVar7) = 0x41d294;\n    iVar6 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(uVar9, 0xffffffff);\n    if (iVar6 != 0) {\n        pcVar2 = swi(3);\n        uVar8 = (*pcVar2)();\n        return uVar8;\n    }\n    *(&stack0xffffffffffffff48 + iVar7) = 0x41d2a2;\n    uVar3 = (*_sym.imp.KERNEL32.dll_FindAtomA)();\n    if (uVar3 == 0) {\n        *(&stack0xffffffffffffff48 + iVar7) = 0x41d2b7;\n        uVar10 = sub.msvcrt.dll_malloc(0x10);\n        uVar8 = 0x40;\n        do {\n            if ((uVar10 >> (uVar8 & 0x3f) & 1) != 0) {\n                arg2[uVar4 - uVar8] = 0x41;\n            }\n            uVar11 = uVar8 - 1;\n            uVar8 = uVar11;\n        } while (uVar11 != 0);\n        *(&stack0xffffffffffffff48 + iVar7) = 0x41d2e3;\n        uVar3 = (*_sym.imp.KERNEL32.dll_AddAtomA)();\n        if (uVar3 == 0) {\n            pcVar2 = swi(3);\n            uVar8 = (*pcVar2)();\n            return uVar8;\n        }\n        *(&stack0xffffffffffffff48 + iVar7) = 0x41d2f9;\n        uVar8 = fcn.0041d130(uVar3, arg2, uVar4, iVar5 + 0x10);\n        if (uVar8 == uVar10) {\n            *(&stack0xffffffffffffff48 + iVar7) = 0x41d356;\n            sub.msvcrt.dll_memset(uVar10, 0, 0x10);\n            *(&stack0xffffffffffffff48 + iVar7) = 0x41d361;\n            (*0x41b1d0)(uVar10);\n        }\n        else {\n            *(&stack0xffffffffffffff48 + iVar7) = 0x41d309;\n            fcn.00416d90(uVar10);\n        }\n    }\n    else {\n        *(&stack0xffffffffffffff48 + iVar7) = 0x41d344;\n        uVar8 = fcn.0041d130(uVar3, arg2, uVar4, iVar5 + 0x10);\n    }\n    *(&stack0xffffffffffffff48 + iVar7) = 0x41d312;\n    (*_sym.imp.KERNEL32.dll_ReleaseMutex)(uVar9);\n    *(&stack0xffffffffffffff48 + iVar7) = 0x41d31b;\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar9);\n    return uVar8;\n}\n",
        "token_count": 1686
    },
    "0041beb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0041beb0(ulong param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *apuStack32 [2];\n    \n    iVar2 = fcn.0041b3a0(param_1, apuStack32);\n    puVar1 = apuStack32[0];\n    if ((iVar2 == 0) && (apuStack32[0] != NULL)) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*(apuStack32[0] + 6));\n        *puVar1 = 0xdeadbeef;\n        puVar1[2] = 0;\n        puVar1[3] = 0;\n        fcn.00416d90(apuStack32[0]);\n    }\n    return iVar2;\n}\n",
        "token_count": 181
    },
    "0041c490": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0041c490(int64_t *arg1)\n\n{\n    uint uVar1;\n    \n    if (*0x49f4a0 == 0) {\n        *0x49f4a0 = fcn.0041d1b0(\"cond_locked_shmem_cond\", 0x10, 0x41c020);\n    }\n    fcn.0041d560(*0x49f4a0);\n    uVar1 = 0x16;\n    if ((arg1 != NULL) && (uVar1 = 0,  *arg1 == -1)) {\n        uVar1 = fcn.0041c360(arg1, 0);\n    }\n    if (*0x49f4a0 != 0) {\n        fcn.0041d4c0(*0x49f4a0);\n        return uVar1;\n    }\n    *0x49f4a0 = fcn.0041d1b0(\"cond_locked_shmem_cond\", 0x10, 0x41c020);\n    fcn.0041d4c0(*0x49f4a0);\n    return uVar1;\n}\n",
        "token_count": 258
    },
    "0041c840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0041c840(ulong arg1, uint64_t arg2, uint64_t arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t *in_stack_00000028;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_EnterCriticalSection;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(arg4);\n    LOCK();\n    *in_stack_00000028 = *in_stack_00000028 + -1;\n    pcVar3 = _sym.imp.KERNEL32.dll_LeaveCriticalSection;\n    iVar1 = *in_stack_00000028;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(arg4);\n    iVar4 = 0;\n    if (iVar1 < 0) {\n        iVar4 = fcn.0041c560(arg1, arg2 & 0xffffffff, arg3 & 0xffffffff);\n        (*pcVar2)(arg4);\n        if (iVar4 != 0) {\n            LOCK();\n            *in_stack_00000028 = *in_stack_00000028 + 1;\n        }\n        (*pcVar3)(arg4);\n    }\n    return iVar4;\n}\n",
        "token_count": 277
    },
    "0041d420": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "delay execution"
        ],
        "decompiled_code": "\nulong fcn.0041d420(int32_t *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    ulong uVar5;\n    \n    uVar5 = 0x16;\n    if ((arg1 != NULL) && (uVar5 = 0x10,  0 < arg1[3])) {\n        piVar1 = arg1 + 3;\n        LOCK();\n        piVar2 = arg1 + 3;\n        *piVar2 = *piVar2 + -1;\n        pcVar4 = _sym.imp.KERNEL32.dll_Sleep;\n        iVar3 = *piVar2;\n        while (iVar3 != 0) {\n            LOCK();\n            *piVar1 = *piVar1 + 1;\n            (*pcVar4)(0);\n            LOCK();\n            *piVar1 = *piVar1 + -1;\n            iVar3 = *piVar1;\n        }\n        if (*arg1 == arg1[1]) {\n            *arg1 = *arg1 + 1;\n            LOCK();\n            arg1[3] = arg1[3] + 1;\n            uVar5 = 0;\n        }\n        else {\n            LOCK();\n            arg1[3] = arg1[3] + 1;\n            uVar5 = 0x10;\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 317
    },
    "0041d560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "delay execution"
        ],
        "decompiled_code": "\nulong fcn.0041d560(uint32_t *arg1)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    code *pcVar5;\n    ulong uVar6;\n    \n    uVar6 = 0x16;\n    if (arg1 != NULL) {\n        puVar1 = arg1 + 3;\n        LOCK();\n        puVar2 = arg1 + 3;\n        *puVar2 = *puVar2 - 1;\n        pcVar5 = _sym.imp.KERNEL32.dll_Sleep;\n        uVar4 = *puVar2;\n        while (uVar4 != 0) {\n            LOCK();\n            *puVar1 = *puVar1 + 1;\n            (*pcVar5)(0);\n            LOCK();\n            *puVar1 = *puVar1 - 1;\n            uVar4 = *puVar1;\n        }\n        uVar4 = *arg1;\n        *arg1 = *arg1 + 1;\n        LOCK();\n        arg1[3] = arg1[3] + 1;\n        pcVar5 = _sym.imp.KERNEL32.dll_Sleep;\n        uVar3 = arg1[1];\n        while (uVar3 < uVar4) {\n            (*pcVar5)(0);\n            uVar3 = arg1[1];\n        }\n        uVar6 = 0;\n    }\n    return uVar6;\n}\n",
        "token_count": 327
    },
    "0041db10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041db10(int32_t **arg1)\n\n{\n    int32_t *piVar1;\n    ulong uVar2;\n    \n    if (*0x49f4d8 == 0) {\n        *0x49f4d8 = fcn.0041d1b0(\"rwl_global_shmem\", 0x10, 0x41dad0);\n    }\n    fcn.0041d560(*0x49f4d8);\n    uVar2 = 0x16;\n    if (((arg1 != NULL) && (piVar1 = *arg1,  piVar1 != NULL)) && (*piVar1 == -0x454e0f13)) {\n        if (piVar1 == 0xffffffffffffffff) {\n            uVar2 = 1;\n        }\n        else {\n            piVar1[1] = piVar1[1] + 1;\n            uVar2 = 0;\n        }\n    }\n    if (*0x49f4d8 != 0) {\n        fcn.0041d4c0(*0x49f4d8);\n        return uVar2;\n    }\n    *0x49f4d8 = fcn.0041d1b0(\"rwl_global_shmem\", 0x10, 0x41dad0);\n    fcn.0041d4c0(*0x49f4d8);\n    return uVar2;\n}\n",
        "token_count": 318
    },
    "0041dbe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0041dbe0(int32_t **arg1, int32_t **arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    *arg2 = NULL;\n    if (*0x49f4d8 == 0) {\n        *0x49f4d8 = fcn.0041d1b0(\"rwl_global_shmem\", 0x10, 0x41dad0);\n    }\n    iVar2 = fcn.0041d420(*0x49f4d8);\n    if (iVar2 != 0) {\n        return 0x10;\n    }\n    if ((arg1 == NULL) || (piVar1 = *arg1,  piVar1 == NULL)) {\n        uVar3 = 0x16;\n    }\n    else if (piVar1 == 0xffffffffffffffff) {\n        *arg1 = NULL;\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 0x16;\n        if ((*piVar1 == -0x454e0f13) && (uVar3 = 0x10,  piVar1[1] == 0)) {\n            *arg2 = piVar1;\n            uVar3 = 0;\n            *arg1 = NULL;\n        }\n    }\n    if (*0x49f4d8 == 0) {\n        *0x49f4d8 = fcn.0041d1b0(\"rwl_global_shmem\", 0x10, 0x41dad0);\n    }\n    fcn.0041d4c0(*0x49f4d8);\n    return uVar3;\n}\n",
        "token_count": 378
    },
    "0041dd10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0041dd10(int64_t arg1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.0041bdb0(arg1 + 0x18);\n    if (iVar1 == 0) {\n        iVar2 = fcn.0041bdb0(arg1 + 0x20);\n        if (iVar2 != 0) {\n            fcn.0041b7a0(arg1 + 0x18);\n            return iVar2;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 124
    },
    "0041dd70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0041dd70(int64_t arg1, ulong arg2)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    \n    uVar1 = fcn.0041b7a0(arg1 + 0x20);\n    uVar2 = fcn.0041b7a0(arg1 + 0x18);\n    if ((uVar2 != 0) && (arg2 != 0)) {\n        return uVar2;\n    }\n    uVar2 = uVar2 & 0xffffffff;\n    if ((arg2 | uVar1) != 0) {\n        uVar2 = uVar1;\n    }\n    return uVar2;\n}\n",
        "token_count": 156
    },
    "0041ddd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0041ddd0(int32_t **arg1, ulong arg2)\n\n{\n    ulong *puVar1;\n    code *pcVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    char *arg1_00;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    ulong auStack184 [5];\n    ulong uStack144;\n    ulong uStack136;\n    uint64_t uStack128;\n    \n    uStack128 = arg2;\n    if (*0x49f4d8 == 0) {\n        *0x49f4d8 = fcn.0041d1b0(\"rwl_global_shmem\", 0x10, 0x41dad0);\n    }\n    fcn.0041d560(*0x49f4d8);\n    if ((**arg1 == -0x454e0f13) && (0 < (*arg1)[1])) {\n        (*arg1)[1] = (*arg1)[1] + -1;\n        if (*0x49f4d8 == 0) {\n            *0x49f4d8 = fcn.0041d1b0(\"rwl_global_shmem\", 0x10, 0x41dad0);\n            fcn.0041d4c0(*0x49f4d8);\n            return uStack128;\n        }\n        fcn.0041d4c0(*0x49f4d8);\n        return uStack128;\n    }\n    iVar10 = (*_sym.imp.msvcrt.dll___iob_func)();\n    sub.msvcrt.dll_fprintf\n              (iVar10 + 0x60, \"Assertion failed: (%s), file %s, line %d\\n\", \n               \"(((rwlock_t *)*rwl)->valid == LIFE_RWLOCK) && (((rwlock_t *)*rwl)->busy > 0)\");\n    sub.msvcrt.dll_exit(1);\n    arg1_00 = \"rwl_global_shmem\";\n    auStack184[0] = 0x41d1d6;\n    uStack136 = arg1;\n    iVar4 = sub.msvcrt.dll_strlen();\n    auStack184[0] = 0x41d1ee;\n    iVar6 = fcn.0040ce40(arg1_00);\n    iVar6 = -iVar6;\n    iVar10 = &uStack144 + iVar6;\n    *(&uStack144 + iVar6) = 0x656d68732d636367;\n    *(&uStack136 + iVar6) = 0x64742d6d;\n    *(&uStack136 + iVar6 + 4) = 0x326d;\n    uVar12 = iVar4 + 0x50;\n    *(&uStack136 + iVar6 + 6) = 0x2d;\n    *(auStack184 + iVar6) = 0x41d236;\n    sub.msvcrt.dll_memcpy(&uStack136 + iVar6 + 7, \"rwl_global_shmem\", iVar4);\n    puVar1 = &uStack128 + iVar4 + iVar6;\n    *puVar1 = 0x6161616161616161;\n    puVar1[1] = 0x6161616161616161;\n    puVar1[2] = 0x6161616161616161;\n    puVar1[3] = 0x6161616161616161;\n    puVar1[4] = 0x6161616161616161;\n    puVar1[5] = 0x6161616161616161;\n    puVar1[6] = 0x6161616161616161;\n    puVar1[7] = 0x6161616161616161;\n    *(&uStack144 + uVar12 + iVar6) = 0;\n    *(&uStack144 + (iVar4 + 0xf) + iVar6) = 0;\n    *(auStack184 + iVar6) = 0x41d27e;\n    uVar7 = (*_sym.imp.KERNEL32.dll_CreateMutexA)(0, 0);\n    *(&uStack144 + (iVar4 + 0xf) + iVar6) = 0x2d;\n    *(auStack184 + iVar6) = 0x41d294;\n    iVar5 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(uVar7, 0xffffffff);\n    if (iVar5 != 0) {\n        pcVar2 = swi(3);\n        uVar8 = (*pcVar2)();\n        return uVar8;\n    }\n    *(auStack184 + iVar6) = 0x41d2a2;\n    uVar3 = (*_sym.imp.KERNEL32.dll_FindAtomA)();\n    if (uVar3 == 0) {\n        *(auStack184 + iVar6) = 0x41d2b7;\n        uVar9 = sub.msvcrt.dll_malloc(0x10);\n        uVar8 = 0x40;\n        do {\n            if ((uVar9 >> (uVar8 & 0x3f) & 1) != 0) {\n                *(iVar10 + (uVar12 - uVar8)) = 0x41;\n            }\n            uVar11 = uVar8 - 1;\n            uVar8 = uVar11;\n        } while (uVar11 != 0);\n        *(auStack184 + iVar6) = 0x41d2e3;\n        uVar3 = (*_sym.imp.KERNEL32.dll_AddAtomA)();\n        if (uVar3 == 0) {\n            pcVar2 = swi(3);\n            uVar8 = (*pcVar2)();\n            return uVar8;\n        }\n        *(auStack184 + iVar6) = 0x41d2f9;\n        uVar8 = fcn.0041d130(uVar3, iVar10, uVar12, iVar4 + 0x10);\n        if (uVar8 == uVar9) {\n            *(auStack184 + iVar6) = 0x41d356;\n            sub.msvcrt.dll_memset(uVar9, 0, 0x10);\n            *(auStack184 + iVar6) = 0x41d361;\n            (*0x41dad0)(uVar9);\n        }\n        else {\n            *(auStack184 + iVar6) = 0x41d309;\n            fcn.00416d90(uVar9);\n        }\n    }\n    else {\n        *(auStack184 + iVar6) = 0x41d344;\n        uVar8 = fcn.0041d130(uVar3, iVar10, uVar12, iVar4 + 0x10);\n    }\n    *(auStack184 + iVar6) = 0x41d312;\n    (*_sym.imp.KERNEL32.dll_ReleaseMutex)(uVar7);\n    *(auStack184 + iVar6) = 0x41d31b;\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar7);\n    return uVar8;\n}\n",
        "token_count": 1606
    },
    "0041dfb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0041dfb0(ulong *arg1)\n\n{\n    uint *arg1_00;\n    int32_t iVar1;\n    uint *puVar2;\n    \n    iVar1 = 0x16;\n    if (arg1 != NULL) {\n        *arg1 = 0;\n        puVar2 = sub.msvcrt.dll_calloc(1);\n        iVar1 = 0xc;\n        if (puVar2 != NULL) {\n            arg1_00 = puVar2 + 6;\n            *puVar2 = 0xdeadb0ef;\n            puVar2[4] = 0;\n            puVar2[3] = 0;\n            puVar2[2] = 0;\n            iVar1 = fcn.0041b880(arg1_00, 0);\n            if (iVar1 == 0) {\n                iVar1 = fcn.0041b880(puVar2 + 8, 0);\n                if (iVar1 == 0) {\n                    iVar1 = fcn.0041c360(puVar2 + 10, 0);\n                    if (iVar1 == 0) {\n                        *puVar2 = 0xbab1f0ed;\n                        *arg1 = puVar2;\n                        return 0;\n                    }\n                    fcn.0041beb0(arg1_00);\n                    fcn.0041beb0(puVar2 + 8);\n                    fcn.00416d90(puVar2);\n                    return iVar1;\n                }\n                fcn.0041beb0(arg1_00);\n            }\n            fcn.00416d90(puVar2);\n            return iVar1;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 377
    },
    "0041e0a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0041e0a0(int64_t *arg1)\n\n{\n    uint uVar1;\n    \n    if (*0x49f4d0 == 0) {\n        *0x49f4d0 = fcn.0041d1b0(\"cond_locked_shmem_rwlock\", 0x10, 0x41daf0);\n    }\n    fcn.0041d560(*0x49f4d0);\n    if (*arg1 == -1) {\n        uVar1 = fcn.0041dfb0(arg1);\n        if (*0x49f4d0 == 0) {\n            *0x49f4d0 = fcn.0041d1b0(\"cond_locked_shmem_rwlock\", 0x10, 0x41daf0);\n        }\n        fcn.0041d4c0(*0x49f4d0);\n    }\n    else {\n        if (*0x49f4d0 == 0) {\n            *0x49f4d0 = fcn.0041d1b0(\"cond_locked_shmem_rwlock\", 0x10, 0x41daf0);\n        }\n        fcn.0041d4c0(*0x49f4d0);\n        uVar1 = 0x16;\n    }\n    return uVar1;\n}\n",
        "token_count": 296
    },
    "0041e3a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0041e3a0(int32_t **arg1)\n\n{\n    int32_t *arg1_00;\n    uchar *arg2;\n    ulong *puVar1;\n    int32_t *arg1_01;\n    code *pcVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    ulong uVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    char *arg1_02;\n    uint32_t uVar11;\n    ulong auStack184 [5];\n    ulong uStack144;\n    ulong uStack136;\n    uint64_t auStack128 [2];\n    \n    fcn.0041a160();\n    uVar10 = fcn.0041e180(arg1);\n    if (uVar10 != 0) {\n        return uVar10;\n    }\n    arg1_01 = *arg1;\n    arg1_00 = arg1_01 + 6;\n    uVar6 = fcn.0041bdb0(arg1_00);\n    if (uVar6 == 0) {\n        LOCK();\n        arg1_01[3] = arg1_01[3] + 1;\n        if (arg1_01[3] == 0x7fffffff) {\n            uVar6 = fcn.0041bdb0(arg1_01 + 8);\n            if (uVar6 == 0) {\n                arg1_01[3] = arg1_01[3] - arg1_01[4];\n                arg1_01[4] = 0;\n                uVar6 = fcn.0041dd70(arg1_01, 0);\n            }\n            else {\n                fcn.0041b7a0(arg1_00);\n            }\n        }\n        else {\n            uVar6 = fcn.0041b7a0(arg1_00);\n        }\n    }\n    auStack128[0] = uVar6;\n    if (*0x49f4d8 == 0) {\n        *0x49f4d8 = fcn.0041d1b0(\"rwl_global_shmem\", 0x10, 0x41dad0);\n    }\n    fcn.0041d560(*0x49f4d8);\n    if ((**arg1 == -0x454e0f13) && (0 < (*arg1)[1])) {\n        (*arg1)[1] = (*arg1)[1] + -1;\n        if (*0x49f4d8 != 0) {\n            fcn.0041d4c0(*0x49f4d8);\n            return auStack128[0];\n        }\n        *0x49f4d8 = fcn.0041d1b0(\"rwl_global_shmem\", 0x10, 0x41dad0);\n        fcn.0041d4c0(*0x49f4d8);\n        return auStack128[0];\n    }\n    iVar9 = (*_sym.imp.msvcrt.dll___iob_func)();\n    sub.msvcrt.dll_fprintf\n              (iVar9 + 0x60, \"Assertion failed: (%s), file %s, line %d\\n\", \n               \"(((rwlock_t *)*rwl)->valid == LIFE_RWLOCK) && (((rwlock_t *)*rwl)->busy > 0)\");\n    sub.msvcrt.dll_exit(1);\n    arg1_02 = \"rwl_global_shmem\";\n    auStack184[0] = 0x41d1d6;\n    uStack136 = arg1;\n    iVar4 = sub.msvcrt.dll_strlen();\n    auStack184[0] = 0x41d1ee;\n    iVar9 = fcn.0040ce40(arg1_02);\n    iVar9 = -iVar9;\n    arg2 = &stack0xffffffffffffff70 + iVar9;\n    *(&stack0xffffffffffffff70 + iVar9) = 0x656d68732d636367;\n    *(&stack0xffffffffffffff78 + iVar9) = 0x64742d6d;\n    *(&stack0xffffffffffffff7c + iVar9) = 0x326d;\n    uVar6 = iVar4 + 0x50;\n    (&stack0xffffffffffffff7e)[iVar9] = 0x2d;\n    *(&stack0xffffffffffffff48 + iVar9) = 0x41d236;\n    sub.msvcrt.dll_memcpy(&stack0xffffffffffffff7f + iVar9, \"rwl_global_shmem\", iVar4);\n    puVar1 = &stack0xffffffffffffff80 + iVar4 + iVar9;\n    *puVar1 = 0x6161616161616161;\n    puVar1[1] = 0x6161616161616161;\n    puVar1[2] = 0x6161616161616161;\n    puVar1[3] = 0x6161616161616161;\n    puVar1[4] = 0x6161616161616161;\n    puVar1[5] = 0x6161616161616161;\n    puVar1[6] = 0x6161616161616161;\n    puVar1[7] = 0x6161616161616161;\n    (&stack0xffffffffffffff70)[uVar6 + iVar9] = 0;\n    (&stack0xffffffffffffff70)[(iVar4 + 0xf) + iVar9] = 0;\n    *(&stack0xffffffffffffff48 + iVar9) = 0x41d27e;\n    uVar7 = (*_sym.imp.KERNEL32.dll_CreateMutexA)(0, 0);\n    (&stack0xffffffffffffff70)[(iVar4 + 0xf) + iVar9] = 0x2d;\n    *(&stack0xffffffffffffff48 + iVar9) = 0x41d294;\n    iVar5 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(uVar7, 0xffffffff);\n    if (iVar5 != 0) {\n        pcVar2 = swi(3);\n        uVar10 = (*pcVar2)();\n        return uVar10;\n    }\n    *(&stack0xffffffffffffff48 + iVar9) = 0x41d2a2;\n    uVar3 = (*_sym.imp.KERNEL32.dll_FindAtomA)();\n    if (uVar3 == 0) {\n        *(&stack0xffffffffffffff48 + iVar9) = 0x41d2b7;\n        uVar8 = sub.msvcrt.dll_malloc(0x10);\n        uVar10 = 0x40;\n        do {\n            if ((uVar8 >> (uVar10 & 0x3f) & 1) != 0) {\n                arg2[uVar6 - uVar10] = 0x41;\n            }\n            uVar11 = uVar10 - 1;\n            uVar10 = uVar11;\n        } while (uVar11 != 0);\n        *(&stack0xffffffffffffff48 + iVar9) = 0x41d2e3;\n        uVar3 = (*_sym.imp.KERNEL32.dll_AddAtomA)();\n        if (uVar3 == 0) {\n            pcVar2 = swi(3);\n            uVar10 = (*pcVar2)();\n            return uVar10;\n        }\n        *(&stack0xffffffffffffff48 + iVar9) = 0x41d2f9;\n        uVar10 = fcn.0041d130(uVar3, arg2, uVar6, iVar4 + 0x10);\n        if (uVar10 == uVar8) {\n            *(&stack0xffffffffffffff48 + iVar9) = 0x41d356;\n            sub.msvcrt.dll_memset(uVar8, 0, 0x10);\n            *(&stack0xffffffffffffff48 + iVar9) = 0x41d361;\n            (*0x41dad0)(uVar8);\n        }\n        else {\n            *(&stack0xffffffffffffff48 + iVar9) = 0x41d309;\n            fcn.00416d90(uVar8);\n        }\n    }\n    else {\n        *(&stack0xffffffffffffff48 + iVar9) = 0x41d344;\n        uVar10 = fcn.0041d130(uVar3, arg2, uVar6, iVar4 + 0x10);\n    }\n    *(&stack0xffffffffffffff48 + iVar9) = 0x41d312;\n    (*_sym.imp.KERNEL32.dll_ReleaseMutex)(uVar7);\n    *(&stack0xffffffffffffff48 + iVar9) = 0x41d31b;\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar7);\n    return uVar10;\n}\n",
        "token_count": 1952
    },
    "0041e6f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041e6f0(int64_t *arg1)\n\n{\n    int64_t arg1_00;\n    int32_t iVar1;\n    uint32_t uVar2;\n    ulong *puVar3;\n    int64_t *piVar4;\n    uint64_t arg2;\n    code *pcStack88;\n    int64_t iStack80;\n    ulong uStack72;\n    \n    fcn.0041a160();\n    iVar1 = fcn.0041e180(arg1);\n    if (iVar1 != 0) {\n        return;\n    }\n    arg1_00 = *arg1;\n    uVar2 = fcn.0041dd10(arg1_00);\n    arg2 = uVar2;\n    if (uVar2 == 0) {\n        if (*(arg1_00 + 8) == 0) {\n            iVar1 = *(arg1_00 + 0xc);\n            if (0 < *(arg1_00 + 0x10)) {\n                iVar1 = iVar1 - *(arg1_00 + 0x10);\n                *(arg1_00 + 0x10) = 0;\n                *(arg1_00 + 0xc) = iVar1;\n            }\n            if (0 < iVar1) {\n                *(arg1_00 + 0x10) = -iVar1;\n                pcStack88 = 0x41ddb0;\n                iStack80 = arg1_00;\n                puVar3 = fcn.00419db0();\n                uStack72 = *puVar3;\n                piVar4 = fcn.00419db0();\n                *piVar4 = &pcStack88;\n                do {\n                    uVar2 = fcn.0041cd10(arg1_00 + 0x28, arg1_00 + 0x20);\n                    if (uVar2 != 0) {\n                        puVar3 = fcn.00419db0();\n                        *puVar3 = uStack72;\n                        (*pcStack88)(iStack80);\n                        arg2 = uVar2;\n                        goto code_r0x0041e7f5;\n                    }\n                } while (*(arg1_00 + 0x10) < 0);\n                puVar3 = fcn.00419db0();\n                *puVar3 = uStack72;\n                *(arg1_00 + 0xc) = 0;\n            }\n        }\n        LOCK();\n        *(arg1_00 + 8) = *(arg1_00 + 8) + 1;\n    }\ncode_r0x0041e7f5:\n    fcn.0041ddd0(arg1, arg2);\n    return;\n}\n",
        "token_count": 585
    },
    "0041ea00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0041ea00(ulong noname_0, ulong arg2)\n\n{\n    int64_t iStack24;\n    uint16_t uStack16;\n    \n    (*_sym.imp.msvcrt.dll__ftime)(&iStack24);\n    return uStack16 + iStack24 * 1000;\n}\n",
        "token_count": 72
    },
    "0041fa90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041fa90(ulong arg1)\n\n{\n    if ((arg1 & 0x3d) < 0x3d) {\n    // switch table (61 cases) at 0x480df4\n        switch(*((arg1 & 0x3d) * 4 + 0x480df4) + 0x480df4) {\n        case 0x41fab0:\n            return 0x480dd2;\n        case 0x41fac0:\n            return 0x480de3;\n        case 0x41fad0:\n            return 0x480de6;\n        case 0x41fae0:\n            return 0x480de0;\n        case 0x41faf0:\n            return 0x480dd4;\n        case 0x41fb00:\n            return 0x480ddd;\n        case 0x41fb10:\n            return 0x480de9;\n        case 0x41fb20:\n            return 0x480dd0;\n        case 0x41fb30:\n            return 0x480dda;\n        case 0x41fb40:\n            return 0x480dec;\n        case 0x41fb50:\n            return 0x480df0;\n        case 0x41fb60:\n            return 0x480dd8;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 308
    },
    "0041fbc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0041fbc0(ulong arg1, int64_t arg2, uint64_t arg3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int32_t *piVar4;\n    uint64_t uVar5;\n    \n    pcVar1 = _sym.imp.msvcrt.dll__errno;\n    uVar5 = arg3;\n    do {\n        while( true ) {\n            iVar2 = sub.msvcrt.dll__write_1(arg1, arg2, uVar5 & 0xffffffff);\n            iVar3 = iVar2;\n            if (iVar3 == -1) break;\n            uVar5 = uVar5 - iVar3;\n            if (uVar5 == 0) goto code_r0x0041fc07;\n            arg2 = arg2 + iVar3;\n        }\n        piVar4 = (*pcVar1)();\n    } while (*piVar4 == 4);\ncode_r0x0041fc07:\n    return arg3 - uVar5;\n}\n",
        "token_count": 230
    },
    "0044b550": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044b550(ulong *arg1)\n\n{\n    sub.msvcrt.dll__fileno_1(*arg1);\n    return;\n}\n",
        "token_count": 35
    },
    "0041fc40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041fc40(ulong *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    char cVar2;\n    \n    fcn.0044d7b0(arg1);\n    *arg1 = 0x4877d0;\n    fcn.0044b750(arg1 + 9, arg2);\n    cVar2 = fcn.00424ed0(arg1 + 9);\n    if (cVar2 == '\\0') {\n        return;\n    }\n    *(arg1 + 0xb) = arg3;\n    arg1[0xe] = arg4;\n    fcn.0044c1f0(arg1);\n    uVar1 = arg1[0xd];\n    *(arg1 + 0x79) = 0;\n    *(arg1 + 0x7a) = 0;\n    arg1[5] = 0;\n    arg1[4] = 0;\n    arg1[6] = 0;\n    arg1[1] = uVar1;\n    arg1[2] = uVar1;\n    arg1[3] = uVar1;\n    return;\n}\n",
        "token_count": 262
    },
    "00460470": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00460470(int32_t **arg1)\n\n{\n    int32_t *arg1_00;\n    \n    arg1_00 = *arg1;\n    LOCK();\n    *arg1_00 = *arg1_00 + -1;\n    if ((*arg1_00 == 0) && (arg1_00 != NULL)) {\n        fcn.00460040(arg1_00);\n        if (arg1_00 != NULL) {\n    // WARNING: Could not recover jumptable at 0x00416d90. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.msvcrt.dll_free)();\n            return;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 159
    },
    "004200b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004200b0(ulong *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    char cVar2;\n    \n    fcn.0044f4d0(arg1);\n    *arg1 = 0x487850;\n    fcn.0044b750(arg1 + 9, arg2);\n    cVar2 = fcn.00424ed0(arg1 + 9);\n    if (cVar2 == '\\0') {\n        return;\n    }\n    *(arg1 + 0xb) = arg3;\n    arg1[0xe] = arg4;\n    fcn.0044de60(arg1);\n    uVar1 = arg1[0xd];\n    *(arg1 + 0x79) = 0;\n    *(arg1 + 0x7a) = 0;\n    arg1[5] = 0;\n    arg1[4] = 0;\n    arg1[6] = 0;\n    arg1[1] = uVar1;\n    arg1[2] = uVar1;\n    arg1[3] = uVar1;\n    return;\n}\n",
        "token_count": 258
    },
    "00420500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00420500(int64_t arg1)\n\n{\n    ulong uVar1;\n    \n    uVar1 = fcn.0041b7a0(arg1);\n    if (uVar1 == 0) {\n        return uVar1;\n    }\n    fcn.00420ea0();\n    return *(arg1 + 0x40);\n}\n",
        "token_count": 79
    },
    "00421070": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00421070(ulong arg1, ulong arg2, ulong arg3, ulong *arg4)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.0043fbe0(arg1, arg2);\n    if (cVar1 != '\\0') {\n        *arg4 = arg3;\n        arg4[2] = 0x10;\n        *(arg4 + 1) = 6;\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "004230b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.004230b0(int64_t *arg1, ulong noname_1, uint64_t arg3)\n\n{\n    char *pcVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    \n    iVar2 = *arg1;\n    uVar3 = 0xffffffffffffffff;\n    if ((arg3 < *(iVar2 + -0x18)) && (pcVar1 = iVar2 + arg3,  uVar3 = arg3,  *pcVar1 == noname_1)) {\n        do {\n            arg3 = arg3 + 1;\n            if (*(iVar2 + -0x18) <= arg3) {\n                return 0xffffffffffffffff;\n            }\n            uVar3 = arg3;\n        } while (*(iVar2 + arg3) == *pcVar1);\n    }\n    return uVar3;\n}\n",
        "token_count": 190
    },
    "00424250": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00424250(int64_t arg1, uchar *arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t arg1_00;\n    ulong in_stack_00000028;\n    \n    uVar1 = sub.msvcrt.dll_setlocale(0, 0);\n    iVar2 = sub.msvcrt.dll_strlen(uVar1);\n    arg1_00 = fcn.00469670(iVar2 + 1);\n    sub.msvcrt.dll_memcpy(arg1_00, uVar1, iVar2 + 1);\n    sub.msvcrt.dll_setlocale(0, *(arg1 + 0x20));\n    iVar2 = sub.msvcrt.dll_strftime(arg2, arg3, arg4, in_stack_00000028);\n    sub.msvcrt.dll_setlocale(0, arg1_00);\n    if (arg1_00 != 0) {\n        fcn.00469640(arg1_00);\n    }\n    if (iVar2 == 0) {\n        *arg2 = 0;\n    }\n    return;\n}\n",
        "token_count": 246
    },
    "004245f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004245f0(int64_t arg1, ushort *arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t arg1_00;\n    ulong in_stack_00000028;\n    \n    uVar1 = sub.msvcrt.dll_setlocale(0, 0);\n    iVar2 = sub.msvcrt.dll_strlen(uVar1);\n    arg1_00 = fcn.00469670(iVar2 + 1);\n    sub.msvcrt.dll_memcpy(arg1_00, uVar1, iVar2 + 1);\n    sub.msvcrt.dll_setlocale(0, *(arg1 + 0x20));\n    iVar2 = sub.msvcrt.dll_wcsftime(arg2, arg3, arg4, in_stack_00000028);\n    sub.msvcrt.dll_setlocale(0, arg1_00);\n    if (arg1_00 != 0) {\n        fcn.00469640(arg1_00);\n    }\n    if (iVar2 == 0) {\n        *arg2 = 0;\n    }\n    return;\n}\n",
        "token_count": 248
    },
    "004247f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.004247f0(ulong noname_0, int64_t *arg2)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t arg3;\n    ulong *arg1;\n    \n    arg3 = fcn.00425c30(0x47f360);\n    piVar1 = *(*arg2 + 0x18) + arg3 * 8;\n    iVar2 = *piVar1;\n    if (iVar2 != 0) {\n        return iVar2;\n    }\n    arg1 = fcn.004696a0(0x90);\n    *(arg1 + 1) = 0;\n    arg1[2] = 0;\n    arg1[3] = 0;\n    *arg1 = 0x488d30;\n    *(arg1 + 4) = 0;\n    arg1[5] = 0;\n    arg1[6] = 0;\n    arg1[7] = 0;\n    arg1[8] = 0;\n    *(arg1 + 9) = 0;\n    *(arg1 + 0x49) = 0;\n    *(arg1 + 0x11) = 0;\n    fcn.0045a3e0(arg1, arg2);\n    fcn.0045e9d0(*arg2, arg1, arg3);\n    return *piVar1;\n}\n",
        "token_count": 317
    },
    "004248f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.004248f0(ulong noname_0, int64_t *arg2)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t arg3;\n    ulong *arg1;\n    \n    arg3 = fcn.00425c30(0x47f370);\n    piVar1 = *(*arg2 + 0x18) + arg3 * 8;\n    iVar2 = *piVar1;\n    if (iVar2 != 0) {\n        return iVar2;\n    }\n    arg1 = fcn.004696a0(0xd0);\n    *(arg1 + 1) = 0;\n    arg1[2] = 0;\n    *arg1 = 0x488d50;\n    arg1[3] = 0;\n    *(arg1 + 4) = 0;\n    arg1[5] = 0;\n    arg1[6] = 0;\n    arg1[7] = 0;\n    arg1[8] = 0;\n    *(arg1 + 9) = 0;\n    *(arg1 + 0x4a) = 0;\n    *(arg1 + 0x19) = 0;\n    fcn.0045a9b0(arg1, arg2);\n    fcn.0045e9d0(*arg2, arg1, arg3);\n    return *piVar1;\n}\n",
        "token_count": 318
    },
    "00424a00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00424a00(ulong noname_0, int64_t *arg2)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t arg3;\n    ulong *arg1;\n    \n    arg3 = fcn.00425c30(0x47f0b0);\n    piVar1 = *(*arg2 + 0x18) + arg3 * 8;\n    iVar2 = *piVar1;\n    if (iVar2 != 0) {\n        return iVar2;\n    }\n    arg1 = fcn.004696a0(0x70);\n    *(arg1 + 1) = 0;\n    arg1[2] = 0;\n    arg1[3] = 0;\n    *arg1 = 0x489030;\n    *(arg1 + 4) = 0;\n    *(arg1 + 0x21) = 0;\n    *(arg1 + 0x22) = 0;\n    arg1[5] = 0;\n    arg1[6] = 0;\n    arg1[7] = 0;\n    arg1[8] = 0;\n    arg1[9] = 0;\n    arg1[10] = 0;\n    *(arg1 + 0xb) = 0;\n    *(arg1 + 0x5c) = 0;\n    *(arg1 + 0x5d) = 0;\n    *(arg1 + 0x5e) = 0;\n    *(arg1 + 0x5f) = 0;\n    *(arg1 + 0xc) = 0;\n    *(arg1 + 0x61) = 0;\n    *(arg1 + 0x62) = 0;\n    *(arg1 + 99) = 0;\n    *(arg1 + 0x6f) = 0;\n    fcn.0045c050(arg1, arg2);\n    fcn.0045e9d0(*arg2, arg1, arg3);\n    return *piVar1;\n}\n",
        "token_count": 465
    },
    "00424b30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00424b30(ulong noname_0, int64_t *arg2)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t arg3;\n    ulong *arg1;\n    \n    arg3 = fcn.00425c30(0x47f0c0);\n    piVar1 = *(*arg2 + 0x18) + arg3 * 8;\n    iVar2 = *piVar1;\n    if (iVar2 != 0) {\n        return iVar2;\n    }\n    arg1 = fcn.004696a0(0x70);\n    *(arg1 + 1) = 0;\n    arg1[2] = 0;\n    arg1[3] = 0;\n    *arg1 = 0x489050;\n    *(arg1 + 4) = 0;\n    *(arg1 + 0x21) = 0;\n    *(arg1 + 0x22) = 0;\n    arg1[5] = 0;\n    arg1[6] = 0;\n    arg1[7] = 0;\n    arg1[8] = 0;\n    arg1[9] = 0;\n    arg1[10] = 0;\n    *(arg1 + 0xb) = 0;\n    *(arg1 + 0x5c) = 0;\n    *(arg1 + 0x5d) = 0;\n    *(arg1 + 0x5e) = 0;\n    *(arg1 + 0x5f) = 0;\n    *(arg1 + 0xc) = 0;\n    *(arg1 + 0x61) = 0;\n    *(arg1 + 0x62) = 0;\n    *(arg1 + 99) = 0;\n    *(arg1 + 0x6f) = 0;\n    fcn.0045c770(arg1, arg2);\n    fcn.0045e9d0(*arg2, arg1, arg3);\n    return *piVar1;\n}\n",
        "token_count": 465
    },
    "00424c60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00424c60(ulong noname_0, int64_t *arg2)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t arg3;\n    ulong *arg1;\n    \n    arg3 = fcn.00425c30(0x47f0d0);\n    piVar1 = *(*arg2 + 0x18) + arg3 * 8;\n    iVar2 = *piVar1;\n    if (iVar2 != 0) {\n        return iVar2;\n    }\n    arg1 = fcn.004696a0(0x80);\n    *(arg1 + 1) = 0;\n    arg1[2] = 0;\n    *(arg1 + 0x22) = 0;\n    *(arg1 + 0x24) = 0;\n    *arg1 = 0x489070;\n    arg1[3] = 0;\n    *(arg1 + 4) = 0;\n    arg1[5] = 0;\n    arg1[6] = 0;\n    arg1[7] = 0;\n    arg1[8] = 0;\n    arg1[9] = 0;\n    arg1[10] = 0;\n    *(arg1 + 0xb) = 0;\n    *(arg1 + 0x5c) = 0;\n    *(arg1 + 0x5d) = 0;\n    *(arg1 + 0x5e) = 0;\n    *(arg1 + 0x5f) = 0;\n    *(arg1 + 0xc) = 0;\n    *(arg1 + 0x61) = 0;\n    *(arg1 + 0x62) = 0;\n    *(arg1 + 99) = 0;\n    *(arg1 + 0x7a) = 0;\n    fcn.0045ce90(arg1, arg2);\n    fcn.0045e9d0(*arg2, arg1, arg3);\n    return *piVar1;\n}\n",
        "token_count": 465
    },
    "00424d90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00424d90(ulong noname_0, int64_t *arg2)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t arg3;\n    ulong *arg1;\n    \n    arg3 = fcn.00425c30(0x47f0e0);\n    piVar1 = *(*arg2 + 0x18) + arg3 * 8;\n    iVar2 = *piVar1;\n    if (iVar2 != 0) {\n        return iVar2;\n    }\n    arg1 = fcn.004696a0(0x80);\n    *(arg1 + 1) = 0;\n    arg1[2] = 0;\n    arg1[3] = 0;\n    *arg1 = 0x489090;\n    *(arg1 + 4) = 0;\n    *(arg1 + 0x22) = 0;\n    arg1[5] = 0;\n    *(arg1 + 0x24) = 0;\n    arg1[6] = 0;\n    arg1[7] = 0;\n    arg1[8] = 0;\n    arg1[9] = 0;\n    arg1[10] = 0;\n    *(arg1 + 0xb) = 0;\n    *(arg1 + 0x5c) = 0;\n    *(arg1 + 0x5d) = 0;\n    *(arg1 + 0x5e) = 0;\n    *(arg1 + 0x5f) = 0;\n    *(arg1 + 0xc) = 0;\n    *(arg1 + 0x61) = 0;\n    *(arg1 + 0x62) = 0;\n    *(arg1 + 99) = 0;\n    *(arg1 + 0x7a) = 0;\n    fcn.0045d5d0(arg1, arg2);\n    fcn.0045e9d0(*arg2, arg1, arg3);\n    return *piVar1;\n}\n",
        "token_count": 467
    },
    "00425380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00425380(int64_t **arg1, int64_t **arg2)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    int16_t iVar3;\n    char cVar4;\n    \n    cVar4 = '\\x01';\n    piVar1 = *arg1;\n    if ((piVar1 != NULL) && (cVar4 = '\\0',  *(arg1 + 1) == -1)) {\n        if (piVar1[2] < piVar1[3]) {\n            iVar3 = *piVar1[2];\n        }\n        else {\n            iVar3 = (**(*piVar1 + 0x48))();\n        }\n        if (iVar3 == -1) {\n            *arg1 = NULL;\n            cVar4 = '\\x01';\n        }\n        else {\n            *(arg1 + 1) = iVar3;\n            cVar4 = '\\0';\n        }\n    }\n    piVar1 = *arg2;\n    cVar2 = '\\x01';\n    if ((piVar1 != NULL) && (cVar2 = '\\0',  *(arg2 + 1) == -1)) {\n        if (piVar1[2] < piVar1[3]) {\n            iVar3 = *piVar1[2];\n        }\n        else {\n            iVar3 = (**(*piVar1 + 0x48))();\n        }\n        if (iVar3 != -1) {\n            *(arg2 + 1) = iVar3;\n            return cVar4 == '\\0';\n        }\n        *arg2 = NULL;\n        return cVar4 == '\\x01';\n    }\n    return cVar2 == cVar4;\n}\n",
        "token_count": 370
    },
    "00425470": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00425470(int64_t **arg1)\n\n{\n    int64_t *piVar1;\n    int16_t iVar2;\n    \n    piVar1 = *arg1;\n    if ((piVar1 == NULL) || (*(arg1 + 1) != -1)) {\n        return;\n    }\n    if (piVar1[2] < piVar1[3]) {\n        iVar2 = *piVar1[2];\n    }\n    else {\n        iVar2 = (**(*piVar1 + 0x48))();\n    }\n    if (iVar2 != -1) {\n        *(arg1 + 1) = iVar2;\n        return;\n    }\n    *arg1 = NULL;\n    return;\n}\n",
        "token_count": 158
    },
    "00425590": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/c6eee0698c4b4bd09944ca66a2e4c269"
        ],
        "decompiled_code": "\nvoid fcn.00425590(int64_t *arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uchar auStack280 [256];\n    \n    iVar2 = 0;\n    do {\n        auStack280[iVar2] = iVar2;\n        iVar2 = iVar2 + 1;\n    } while (iVar2 != 0x100);\n    (**(*arg1 + 0x38))(arg1, auStack280, &stack0xffffffffffffffe8, arg1 + 0x39);\n    *(arg1 + 7) = 1;\n    iVar1 = sub.msvcrt.dll_memcmp(auStack280, arg1 + 0x39, 0x100);\n    if (iVar1 != 0) {\n        *(arg1 + 7) = 2;\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "004256b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004256b0(int64_t *arg1, ulong arg2)\n\n{\n    fcn.00425590(arg1);\n    // WARNING: Could not recover jumptable at 0x004256d4. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(*arg1 + 0x30))(arg1, arg2);\n    return;\n}\n",
        "token_count": 86
    },
    "00425c30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00425c30(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = *arg1;\n    if (iVar1 == 0) {\n        LOCK();\n        iVar1 = *0x47f250 + 1;\n        *0x47f250 = *0x47f250 + 1;\n        *arg1 = iVar1;\n    }\n    return iVar1 + -1;\n}\n",
        "token_count": 99
    },
    "00426380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00426380(ulong noname_0, ulong s1, ulong s2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.msvcrt.dll_strcoll(s1, s2);\n    return iVar1 != 0 | iVar1 >> 0x1e;\n}\n",
        "token_count": 69
    },
    "00426720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00426720(ulong noname_0, ulong s1, ulong s2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.msvcrt.dll_wcscoll(s1, s2);\n    return iVar1 != 0 | iVar1 >> 0x1e;\n}\n",
        "token_count": 70
    },
    "00431260": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00431260(ulong noname_0, ulong arg2, ulong arg3)\n\n{\n    ulong uVar1;\n    int32_t iVar2;\n    char in_R9B;\n    int64_t in_stack_00000028;\n    ulong in_stack_00000030;\n    int32_t in_stack_00000038;\n    int32_t *in_stack_00000040;\n    \n    if (in_stack_00000028 != 0) {\n        iVar2 = in_stack_00000028 - in_stack_00000038;\n        uVar1 = fcn.00464020(in_stack_00000030, in_R9B, arg2, arg3);\n        sub.msvcrt.dll_memcpy(uVar1, in_stack_00000028, *in_stack_00000040 - iVar2);\n        *in_stack_00000040 = (*in_stack_00000040 - iVar2) + (uVar1 - in_stack_00000030);\n        return;\n    }\n    iVar2 = fcn.00464020(in_stack_00000030, in_R9B, arg2, arg3);\n    *in_stack_00000040 = iVar2 - in_stack_00000030;\n    return;\n}\n",
        "token_count": 267
    },
    "0043fc70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043fc70(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = *arg1;\n    if (0 < *(iVar1 + -8)) {\n        fcn.00441510(arg1, 0, 0, 0);\n        iVar1 = *arg1;\n    }\n    *(iVar1 + -8) = 0xffffffff;\n    return;\n}\n",
        "token_count": 92
    },
    "004405d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004405d0(ulong arg1, ulong noname_1, int64_t arg3)\n\n{\n    if (arg3 != 0) {\n        fcn.004405f0(arg1, noname_1, arg3);\n    }\n    return arg1;\n}\n",
        "token_count": 64
    },
    "00440870": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00440870(ulong arg1, int64_t arg2)\n\n{\n    uint16_t in_R8W;\n    \n    if (arg2 != 0) {\n        fcn.00440890(arg1, arg2, in_R8W);\n    }\n    return arg1;\n}\n",
        "token_count": 66
    },
    "004416f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004416f0(ulong *arg1, int64_t arg2, ulong arg3)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    \n    iVar2 = -2;\n    if (arg2 != 0) {\n        iVar2 = sub.msvcrt.dll_wcslen(arg2);\n        iVar2 = arg2 + iVar2 * 2;\n    }\n    uVar1 = fcn.0043fd90(arg2, iVar2);\n    *arg1 = uVar1;\n    return;\n}\n",
        "token_count": 118
    },
    "004418c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004418c0(ulong *arg1, ulong arg2, ulong noname_2, ulong arg4)\n\n{\n    ulong uVar1;\n    \n    uVar1 = fcn.0043fcb0(arg2, noname_2);\n    *arg1 = uVar1;\n    return;\n}\n",
        "token_count": 71
    },
    "00462cd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00462cd0(int64_t arg1, int64_t arg2)\n\n{\n    fcn.00461c40(arg1);\n    fcn.00462bb0(arg1, arg1 + 0xd0);\n    *(arg1 + 0xe0) = 0;\n    *(arg1 + 0xe1) = 0;\n    *(arg1 + 0xd8) = 0;\n    *(arg1 + 0x1c) = 0;\n    *(arg1 + 0xe8) = arg2;\n    *(arg1 + 0x20) = arg2 == 0;\n    return;\n}\n",
        "token_count": 144
    },
    "00445a90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar * fcn.00445a90(uchar *arg1, int64_t *arg2)\n\n{\n    int64_t *piVar1;\n    char *pcVar2;\n    uint32_t uVar3;\n    int64_t iVar5;\n    ulong in_R8;\n    uchar auStack96 [32];\n    uint32_t uVar4;\n    uint64_t arg2_00;\n    \n    *arg1 = 0;\n    *(arg1 + 8) = arg2;\n    iVar5 = *arg2;\n    pcVar2 = arg2 + *(iVar5 + -0x18);\n    if (*(pcVar2 + 0xd8) != 0) {\n        uVar4 = *(pcVar2 + 0x20);\n        if (uVar4 != 0) goto code_r0x00445ae0;\n        fcn.004455f0(*(pcVar2 + 0xd8));\n        iVar5 = *arg2;\n    }\n    pcVar2 = arg2 + *(iVar5 + -0x18);\n    uVar4 = *(pcVar2 + 0x20);\n    if (uVar4 == 0) {\n        *arg1 = 1;\n        return pcVar2;\n    }\ncode_r0x00445ae0:\n    uVar3 = uVar4 | 4;\n    if (*(pcVar2 + 0xe8) == 0) {\n        uVar3 = uVar4 | 5;\n    }\n    arg2_00 = uVar3;\n    *(pcVar2 + 0x20) = uVar3;\n    if ((*(pcVar2 + 0x1c) & uVar3) == 0) {\n        return pcVar2;\n    }\n    pcVar2 = \"basic_ios::clear\";\n    fcn.00465210(\"basic_ios::clear\");\n    fcn.004603c0(pcVar2, arg2_00 + 0xd0);\n    fcn.00461bd0(auStack96, arg2_00, in_R8);\n    fcn.00460470(auStack96);\n    fcn.00462bb0(arg2_00, in_R8);\n    piVar1 = *(arg2_00 + 0xe8);\n    if (piVar1 != NULL) {\n        fcn.004603c0(auStack96, piVar1 + 7);\n        (**(*piVar1 + 0x10))(piVar1, in_R8);\n        fcn.004604a0(piVar1 + 7, in_R8);\n        fcn.00460470(auStack96);\n    }\n    return pcVar2;\n}\n",
        "token_count": 584
    },
    "00447290": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00447290(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = *arg1;\n    if (0 < *(iVar1 + -8)) {\n        fcn.004489d0(arg1, 0, 0, 0);\n        iVar1 = *arg1;\n    }\n    *(iVar1 + -8) = 0xffffffff;\n    return;\n}\n",
        "token_count": 92
    },
    "00447b80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00447b80(ulong arg1, ulong noname_1, int64_t arg3)\n\n{\n    if (arg3 != 0) {\n        fcn.00447ba0(arg1, noname_1, arg3);\n    }\n    return arg1;\n}\n",
        "token_count": 64
    },
    "00447e00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00447e00(ulong arg1, int64_t arg2)\n\n{\n    char in_R8B;\n    \n    if (arg2 != 0) {\n        fcn.00447e20(arg1, arg2, in_R8B);\n    }\n    return arg1;\n}\n",
        "token_count": 66
    },
    "00448ba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00448ba0(ulong *arg1, int64_t arg2, ulong arg3)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    \n    iVar2 = -1;\n    if (arg2 != 0) {\n        iVar2 = sub.msvcrt.dll_strlen(arg2);\n        iVar2 = arg2 + iVar2;\n    }\n    uVar1 = fcn.00447380(arg2, iVar2);\n    *arg1 = uVar1;\n    return;\n}\n",
        "token_count": 112
    },
    "00448d70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00448d70(ulong *arg1, ulong arg2, ulong noname_2, ulong arg4)\n\n{\n    ulong uVar1;\n    \n    uVar1 = fcn.004472c0(arg2, noname_2);\n    *arg1 = uVar1;\n    return;\n}\n",
        "token_count": 70
    },
    "004493d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004493d0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    uint uVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    \n    puVar4 = *(arg1 + 0x10);\n    if (puVar4 == NULL) {\n        puVar4 = fcn.004696a0(0x70);\n        *(puVar4 + 1) = 0;\n        puVar4[2] = 0;\n        puVar4[3] = 0;\n        *(puVar4 + 4) = 0;\n        *puVar4 = 0x489030;\n        *(puVar4 + 0x21) = 0;\n        *(puVar4 + 0x22) = 0;\n        puVar4[5] = 0;\n        puVar4[6] = 0;\n        puVar4[7] = 0;\n        puVar4[8] = 0;\n        puVar4[9] = 0;\n        puVar4[10] = 0;\n        *(puVar4 + 0xb) = 0;\n        *(puVar4 + 0x5c) = 0;\n        *(puVar4 + 0x5d) = 0;\n        *(puVar4 + 0x5e) = 0;\n        *(puVar4 + 0x5f) = 0;\n        *(puVar4 + 0xc) = 0;\n        *(puVar4 + 0x61) = 0;\n        *(puVar4 + 0x62) = 0;\n        *(puVar4 + 99) = 0;\n        *(puVar4 + 0x6f) = 0;\n        *(arg1 + 0x10) = puVar4;\n    }\n    *(puVar4 + 0x21) = 0x2e;\n    uVar2 = *0x4842f0;\n    *(*(arg1 + 0x10) + 0x22) = 0x2c;\n    iVar1 = *(arg1 + 0x10);\n    *(iVar1 + 0x10) = 0x480a70;\n    *(iVar1 + 0x28) = 0x480a70;\n    *(iVar1 + 0x38) = 0x480a70;\n    *(iVar1 + 0x48) = 0x480a70;\n    *(iVar1 + 0x18) = 0;\n    *(iVar1 + 0x30) = 0;\n    *(iVar1 + 0x40) = 0;\n    *(iVar1 + 0x50) = 0;\n    *(iVar1 + 0x58) = 0;\n    *(iVar1 + 0x5c) = uVar2;\n    iVar1 = *0x47f0a0;\n    *(*(arg1 + 0x10) + 0x60) = uVar2;\n    iVar3 = 0;\n    do {\n        *(*(arg1 + 0x10) + 100 + iVar3) = *(iVar1 + iVar3);\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0xb);\n    return;\n}\n",
        "token_count": 731
    },
    "00449710": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00449710(ulong *arg1)\n\n{\n    *arg1 = 0x487d30;\n    if (arg1[2] != NULL) {\n        (**(*arg1[2] + 8))();\n    }\n    *arg1 = 0x487b50;\n    return;\n}\n",
        "token_count": 70
    },
    "00449760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00449760(int64_t arg1)\n\n{\n    int64_t iVar1;\n    uint uVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    \n    puVar4 = *(arg1 + 0x10);\n    if (puVar4 == NULL) {\n        puVar4 = fcn.004696a0(0x70);\n        *(puVar4 + 1) = 0;\n        puVar4[2] = 0;\n        puVar4[3] = 0;\n        *(puVar4 + 4) = 0;\n        *puVar4 = 0x489050;\n        *(puVar4 + 0x21) = 0;\n        *(puVar4 + 0x22) = 0;\n        puVar4[5] = 0;\n        puVar4[6] = 0;\n        puVar4[7] = 0;\n        puVar4[8] = 0;\n        puVar4[9] = 0;\n        puVar4[10] = 0;\n        *(puVar4 + 0xb) = 0;\n        *(puVar4 + 0x5c) = 0;\n        *(puVar4 + 0x5d) = 0;\n        *(puVar4 + 0x5e) = 0;\n        *(puVar4 + 0x5f) = 0;\n        *(puVar4 + 0xc) = 0;\n        *(puVar4 + 0x61) = 0;\n        *(puVar4 + 0x62) = 0;\n        *(puVar4 + 99) = 0;\n        *(puVar4 + 0x6f) = 0;\n        *(arg1 + 0x10) = puVar4;\n    }\n    *(puVar4 + 0x21) = 0x2e;\n    uVar2 = *0x4842f0;\n    *(*(arg1 + 0x10) + 0x22) = 0x2c;\n    iVar1 = *(arg1 + 0x10);\n    *(iVar1 + 0x10) = 0x480a70;\n    *(iVar1 + 0x28) = 0x480a70;\n    *(iVar1 + 0x38) = 0x480a70;\n    *(iVar1 + 0x48) = 0x480a70;\n    *(iVar1 + 0x18) = 0;\n    *(iVar1 + 0x30) = 0;\n    *(iVar1 + 0x40) = 0;\n    *(iVar1 + 0x50) = 0;\n    *(iVar1 + 0x58) = 0;\n    *(iVar1 + 0x5c) = uVar2;\n    iVar1 = *0x47f0a0;\n    *(*(arg1 + 0x10) + 0x60) = uVar2;\n    iVar3 = 0;\n    do {\n        *(*(arg1 + 0x10) + 100 + iVar3) = *(iVar1 + iVar3);\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0xb);\n    return;\n}\n",
        "token_count": 730
    },
    "00449aa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00449aa0(ulong *arg1)\n\n{\n    *arg1 = 0x487db0;\n    if (arg1[2] != NULL) {\n        (**(*arg1[2] + 8))();\n    }\n    *arg1 = 0x487b50;\n    return;\n}\n",
        "token_count": 71
    },
    "00449af0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00449af0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uint uVar3;\n    int64_t iVar4;\n    ulong *puVar5;\n    \n    puVar5 = *(arg1 + 0x10);\n    if (puVar5 == NULL) {\n        puVar5 = fcn.004696a0(0x80);\n        *(puVar5 + 1) = 0;\n        puVar5[2] = 0;\n        puVar5[3] = 0;\n        *puVar5 = 0x489070;\n        *(puVar5 + 4) = 0;\n        *(puVar5 + 0x22) = 0;\n        *(puVar5 + 0x24) = 0;\n        puVar5[5] = 0;\n        puVar5[6] = 0;\n        puVar5[7] = 0;\n        puVar5[8] = 0;\n        puVar5[9] = 0;\n        puVar5[10] = 0;\n        *(puVar5 + 0xb) = 0;\n        *(puVar5 + 0x5c) = 0;\n        *(puVar5 + 0x5d) = 0;\n        *(puVar5 + 0x5e) = 0;\n        *(puVar5 + 0x5f) = 0;\n        *(puVar5 + 0xc) = 0;\n        *(puVar5 + 0x61) = 0;\n        *(puVar5 + 0x62) = 0;\n        *(puVar5 + 99) = 0;\n        *(puVar5 + 0x7a) = 0;\n        *(arg1 + 0x10) = puVar5;\n    }\n    uVar3 = *0x4842f0;\n    *(puVar5 + 0x22) = 0x2e;\n    puVar5[3] = 0;\n    puVar5[2] = 0x480a70;\n    *(puVar5 + 0x24) = 0x2c;\n    *(puVar5 + 0x5c) = uVar3;\n    puVar5[6] = 0;\n    puVar5[5] = 0x480a72;\n    puVar5[7] = 0x480a72;\n    puVar5[9] = 0x480a72;\n    puVar5[8] = 0;\n    puVar5[10] = 0;\n    *(puVar5 + 0xb) = 0;\n    iVar2 = *0x47f0a0;\n    *(*(arg1 + 0x10) + 0x60) = uVar3;\n    iVar1 = *(arg1 + 0x10);\n    iVar4 = 0;\n    do {\n        *(iVar1 + 100 + iVar4 * 2) = *(iVar2 + iVar4);\n        iVar4 = iVar4 + 1;\n    } while (iVar4 != 0xb);\n    return;\n}\n",
        "token_count": 705
    },
    "00449e40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00449e40(ulong *arg1)\n\n{\n    *arg1 = 0x487e30;\n    if (arg1[2] != NULL) {\n        (**(*arg1[2] + 8))();\n    }\n    *arg1 = 0x487b50;\n    return;\n}\n",
        "token_count": 71
    },
    "00449e90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00449e90(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uint uVar3;\n    int64_t iVar4;\n    ulong *puVar5;\n    \n    puVar5 = *(arg1 + 0x10);\n    if (puVar5 == NULL) {\n        puVar5 = fcn.004696a0(0x80);\n        *(puVar5 + 1) = 0;\n        puVar5[2] = 0;\n        *puVar5 = 0x489090;\n        puVar5[3] = 0;\n        *(puVar5 + 4) = 0;\n        *(puVar5 + 0x22) = 0;\n        *(puVar5 + 0x24) = 0;\n        puVar5[5] = 0;\n        puVar5[6] = 0;\n        puVar5[7] = 0;\n        puVar5[8] = 0;\n        puVar5[9] = 0;\n        puVar5[10] = 0;\n        *(puVar5 + 0xb) = 0;\n        *(puVar5 + 0x5c) = 0;\n        *(puVar5 + 0x5d) = 0;\n        *(puVar5 + 0x5e) = 0;\n        *(puVar5 + 0x5f) = 0;\n        *(puVar5 + 0xc) = 0;\n        *(puVar5 + 0x61) = 0;\n        *(puVar5 + 0x62) = 0;\n        *(puVar5 + 99) = 0;\n        *(puVar5 + 0x7a) = 0;\n        *(arg1 + 0x10) = puVar5;\n    }\n    puVar5[3] = 0;\n    *(puVar5 + 0x24) = 0x2c;\n    *(puVar5 + 0x22) = 0x2e;\n    uVar3 = *0x4842f0;\n    puVar5[6] = 0;\n    puVar5[2] = 0x480a70;\n    puVar5[8] = 0;\n    puVar5[10] = 0;\n    *(puVar5 + 0xb) = 0;\n    puVar5[5] = 0x480a72;\n    puVar5[7] = 0x480a72;\n    puVar5[9] = 0x480a72;\n    *(puVar5 + 0x5c) = uVar3;\n    iVar2 = *0x47f0a0;\n    *(*(arg1 + 0x10) + 0x60) = uVar3;\n    iVar1 = *(arg1 + 0x10);\n    iVar4 = 0;\n    do {\n        *(iVar1 + 100 + iVar4 * 2) = *(iVar2 + iVar4);\n        iVar4 = iVar4 + 1;\n    } while (iVar4 != 0xb);\n    return;\n}\n",
        "token_count": 705
    },
    "0044a1e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044a1e0(ulong *arg1)\n\n{\n    *arg1 = 0x487eb0;\n    if (arg1[2] != NULL) {\n        (**(*arg1[2] + 8))();\n    }\n    *arg1 = 0x487b50;\n    return;\n}\n",
        "token_count": 73
    },
    "0044a230": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044a230(int64_t arg1)\n\n{\n    ulong *puVar1;\n    \n    puVar1 = *(arg1 + 0x10);\n    if (puVar1 == NULL) {\n        puVar1 = fcn.004696a0(400);\n        *(puVar1 + 1) = 0;\n        puVar1[2] = 0;\n        puVar1[3] = 0;\n        puVar1[4] = 0;\n        *puVar1 = 0x488db0;\n        puVar1[5] = 0;\n        puVar1[6] = 0;\n        puVar1[7] = 0;\n        puVar1[8] = 0;\n        puVar1[9] = 0;\n        puVar1[10] = 0;\n        puVar1[0xb] = 0;\n        puVar1[0xc] = 0;\n        puVar1[0xd] = 0;\n        puVar1[0xe] = 0;\n        puVar1[0xf] = 0;\n        puVar1[0x10] = 0;\n        puVar1[0x11] = 0;\n        puVar1[0x12] = 0;\n        puVar1[0x13] = 0;\n        puVar1[0x14] = 0;\n        puVar1[0x15] = 0;\n        puVar1[0x16] = 0;\n        puVar1[0x17] = 0;\n        puVar1[0x18] = 0;\n        puVar1[0x19] = 0;\n        puVar1[0x1a] = 0;\n        puVar1[0x1b] = 0;\n        puVar1[0x1c] = 0;\n        puVar1[0x1d] = 0;\n        puVar1[0x1e] = 0;\n        puVar1[0x1f] = 0;\n        puVar1[0x20] = 0;\n        puVar1[0x21] = 0;\n        puVar1[0x22] = 0;\n        puVar1[0x23] = 0;\n        puVar1[0x24] = 0;\n        puVar1[0x25] = 0;\n        puVar1[0x26] = 0;\n        puVar1[0x27] = 0;\n        puVar1[0x28] = 0;\n        puVar1[0x29] = 0;\n        puVar1[0x2a] = 0;\n        puVar1[0x2b] = 0;\n        puVar1[0x2c] = 0;\n        puVar1[0x2d] = 0;\n        puVar1[0x2e] = 0;\n        puVar1[0x2f] = 0;\n        puVar1[0x30] = 0;\n        *(puVar1 + 0x31) = 0;\n        *(arg1 + 0x10) = puVar1;\n    }\n    puVar1[2] = \"%m/%d/%y\";\n    puVar1[3] = \"%m/%d/%y\";\n    puVar1[6] = 0x4811b2;\n    puVar1[7] = 0x4811b2;\n    puVar1[4] = 0x4811a9;\n    puVar1[5] = 0x4811a9;\n    puVar1[8] = 0x4811b3;\n    puVar1[10] = 0x4811b2;\n    puVar1[9] = 0x4811b6;\n    puVar1[0xb] = 0x4811b9;\n    puVar1[0xd] = 0x4811c7;\n    puVar1[0xc] = 0x4811c0;\n    puVar1[0xe] = 0x4811cf;\n    puVar1[0x10] = 0x4811e2;\n    puVar1[0xf] = 0x4811d9;\n    puVar1[0x11] = 0x4811e9;\n    puVar1[0x12] = 0x4811f2;\n    puVar1[0x13] = 0x4811f6;\n    puVar1[0x14] = 0x4811fa;\n    puVar1[0x15] = 0x4811fe;\n    puVar1[0x16] = 0x481202;\n    puVar1[0x17] = 0x481206;\n    puVar1[0x18] = 0x48120a;\n    puVar1[0x19] = 0x48120e;\n    puVar1[0x1a] = 0x481216;\n    puVar1[0x1b] = 0x48121f;\n    puVar1[0x1c] = 0x481225;\n    puVar1[0x1d] = 0x48122b;\n    puVar1[0x1e] = 0x48122f;\n    puVar1[0x1f] = 0x481234;\n    puVar1[0x20] = 0x481239;\n    puVar1[0x21] = 0x481240;\n    puVar1[0x22] = 0x48124a;\n    puVar1[0x23] = 0x481252;\n    puVar1[0x24] = 0x48125b;\n    puVar1[0x25] = 0x481264;\n    puVar1[0x26] = 0x481268;\n    puVar1[0x27] = 0x48126c;\n    puVar1[0x28] = 0x481270;\n    puVar1[0x29] = 0x48122b;\n    puVar1[0x2a] = 0x481274;\n    puVar1[0x2b] = 0x481278;\n    puVar1[0x2c] = 0x48127c;\n    puVar1[0x2d] = 0x481280;\n    puVar1[0x2e] = 0x481284;\n    puVar1[0x2f] = 0x481288;\n    puVar1[0x30] = 0x48128c;\n    return;\n}\n",
        "token_count": 1512
    },
    "0044a6b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044a6b0(ulong *arg1, ulong arg2, int64_t arg3)\n\n{\n    ulong uVar1;\n    \n    arg1[2] = arg2;\n    *(arg1 + 1) = arg3 != 0;\n    *arg1 = 0x487f30;\n    uVar1 = fcn.00460170();\n    arg1[4] = uVar1;\n    fcn.0044a230(arg1);\n    return;\n}\n",
        "token_count": 110
    },
    "0044aad0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044aad0(int64_t arg1)\n\n{\n    ulong *puVar1;\n    \n    puVar1 = *(arg1 + 0x10);\n    if (puVar1 == NULL) {\n        puVar1 = fcn.004696a0(400);\n        *(puVar1 + 1) = 0;\n        puVar1[2] = 0;\n        puVar1[3] = 0;\n        puVar1[4] = 0;\n        *puVar1 = 0x488dd0;\n        puVar1[5] = 0;\n        puVar1[6] = 0;\n        puVar1[7] = 0;\n        puVar1[8] = 0;\n        puVar1[9] = 0;\n        puVar1[10] = 0;\n        puVar1[0xb] = 0;\n        puVar1[0xc] = 0;\n        puVar1[0xd] = 0;\n        puVar1[0xe] = 0;\n        puVar1[0xf] = 0;\n        puVar1[0x10] = 0;\n        puVar1[0x11] = 0;\n        puVar1[0x12] = 0;\n        puVar1[0x13] = 0;\n        puVar1[0x14] = 0;\n        puVar1[0x15] = 0;\n        puVar1[0x16] = 0;\n        puVar1[0x17] = 0;\n        puVar1[0x18] = 0;\n        puVar1[0x19] = 0;\n        puVar1[0x1a] = 0;\n        puVar1[0x1b] = 0;\n        puVar1[0x1c] = 0;\n        puVar1[0x1d] = 0;\n        puVar1[0x1e] = 0;\n        puVar1[0x1f] = 0;\n        puVar1[0x20] = 0;\n        puVar1[0x21] = 0;\n        puVar1[0x22] = 0;\n        puVar1[0x23] = 0;\n        puVar1[0x24] = 0;\n        puVar1[0x25] = 0;\n        puVar1[0x26] = 0;\n        puVar1[0x27] = 0;\n        puVar1[0x28] = 0;\n        puVar1[0x29] = 0;\n        puVar1[0x2a] = 0;\n        puVar1[0x2b] = 0;\n        puVar1[0x2c] = 0;\n        puVar1[0x2d] = 0;\n        puVar1[0x2e] = 0;\n        puVar1[0x2f] = 0;\n        puVar1[0x30] = 0;\n        *(puVar1 + 0x31) = 0;\n        *(arg1 + 0x10) = puVar1;\n    }\n    puVar1[2] = 0x481290;\n    puVar1[3] = 0x481290;\n    puVar1[6] = 0x4812b4;\n    puVar1[7] = 0x4812b4;\n    puVar1[4] = L\"%H:%M:%S\";\n    puVar1[5] = L\"%H:%M:%S\";\n    puVar1[8] = 0x4812b6;\n    puVar1[10] = 0x4812b4;\n    puVar1[9] = 0x4812bc;\n    puVar1[0xb] = L\"Sunday\";\n    puVar1[0xd] = L\"Tuesday\";\n    puVar1[0xc] = L\"Monday\";\n    puVar1[0xe] = L\"Wednesday\";\n    puVar1[0x10] = L\"Friday\";\n    puVar1[0xf] = L\"Thursday\";\n    puVar1[0x11] = L\"Saturday\";\n    puVar1[0x12] = 0x481334;\n    puVar1[0x13] = 0x48133c;\n    puVar1[0x14] = 0x481344;\n    puVar1[0x15] = 0x48134c;\n    puVar1[0x16] = 0x481354;\n    puVar1[0x17] = 0x48135c;\n    puVar1[0x18] = 0x481364;\n    puVar1[0x19] = L\"January\";\n    puVar1[0x1a] = L\"February\";\n    puVar1[0x1b] = L\"March\";\n    puVar1[0x1c] = L\"April\";\n    puVar1[0x1d] = 0x4813a6;\n    puVar1[0x1e] = L\"June\";\n    puVar1[0x1f] = L\"July\";\n    puVar1[0x20] = L\"August\";\n    puVar1[0x21] = L\"September\";\n    puVar1[0x22] = L\"October\";\n    puVar1[0x23] = L\"November\";\n    puVar1[0x24] = L\"December\";\n    puVar1[0x25] = 0x481418;\n    puVar1[0x26] = 0x481420;\n    puVar1[0x27] = 0x481428;\n    puVar1[0x28] = 0x481430;\n    puVar1[0x29] = 0x4813a6;\n    puVar1[0x2a] = 0x481438;\n    puVar1[0x2b] = 0x481440;\n    puVar1[0x2c] = 0x481448;\n    puVar1[0x2d] = 0x481450;\n    puVar1[0x2e] = 0x481458;\n    puVar1[0x2f] = 0x481460;\n    puVar1[0x30] = 0x481468;\n    return;\n}\n",
        "token_count": 1450
    },
    "0044af50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044af50(ulong *arg1, ulong arg2, int64_t arg3)\n\n{\n    ulong uVar1;\n    \n    arg1[2] = arg2;\n    *(arg1 + 1) = arg3 != 0;\n    *arg1 = 0x487f50;\n    uVar1 = fcn.00460170();\n    arg1[4] = uVar1;\n    fcn.0044aad0(arg1);\n    return;\n}\n",
        "token_count": 108
    },
    "0044b370": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044b370(ulong *arg1, ulong arg2)\n\n{\n    *arg1 = 0x487f70;\n    fcn.00448c40(arg1 + 1, arg2);\n    return;\n}\n",
        "token_count": 53
    },
    "0044b420": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044b420(ulong *arg1, ulong arg2)\n\n{\n    fcn.00455c30(arg1, arg2);\n    *arg1 = 0x487fb0;\n    return;\n}\n",
        "token_count": 50
    },
    "0044b480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044b480(ulong *arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar auStack42 [2];\n    int64_t aiStack40 [2];\n    \n    fcn.00448ba0(aiStack40, \"regex_error\", auStack42);\n    fcn.00455c30(arg1, aiStack40);\n    LOCK();\n    piVar1 = aiStack40[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) {\n        fcn.004477a0(aiStack40[0] + -0x18);\n    }\n    *(arg1 + 2) = arg2;\n    *arg1 = 0x487ff0;\n    return;\n}\n",
        "token_count": 191
    },
    "0044b670": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0044b670(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    \n    pcVar1 = _sym.imp.msvcrt.dll__errno;\n    do {\n        uVar2 = fcn.0044b550(arg1);\n        iVar3 = sub.msvcrt.dll__read(uVar2, arg2, arg3);\n        if (iVar3 != -1) {\n            return iVar3;\n        }\n        piVar4 = (*pcVar1)();\n    } while (*piVar4 == 4);\n    return -1;\n}\n",
        "token_count": 153
    },
    "0044b8b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0044b8b0(ulong arg1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint16_t uStack82;\n    int64_t iStack64;\n    \n    uVar1 = fcn.0044b550(arg1);\n    iVar2 = (*_sym.imp.msvcrt.dll__fstat64)(uVar1);\n    if ((iVar2 == 0) && ((uStack82 & 0xf000) == 0x8000)) {\n        uVar1 = fcn.0044b550(arg1);\n        iVar3 = fcn.0040de60(uVar1, 0, 1);\n        return iStack64 - iVar3;\n    }\n    return 0;\n}\n",
        "token_count": 173
    },
    "0045e840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045e840(ulong *arg1)\n\n{\n    *arg1 = 0x4892d0;\n    fcn.00460220(arg1 + 2);\n    *arg1 = 0x489130;\n    *arg1 = 0x487b50;\n    return;\n}\n",
        "token_count": 69
    },
    "0044bae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044bae0(ulong *arg1, ulong arg2)\n\n{\n    fcn.0044b370(arg1, arg2);\n    *arg1 = 0x488110;\n    return;\n}\n",
        "token_count": 50
    },
    "0044bb80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044bb80(ulong *arg1, ulong arg2)\n\n{\n    fcn.0044b370(arg1, arg2);\n    *arg1 = 0x488190;\n    return;\n}\n",
        "token_count": 49
    },
    "0044bbe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044bbe0(ulong *arg1, ulong arg2)\n\n{\n    fcn.0044b370(arg1, arg2);\n    *arg1 = 0x4881d0;\n    return;\n}\n",
        "token_count": 51
    },
    "0044bcb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044bcb0(ulong *arg1)\n\n{\n    *arg1 = 0x487ad0;\n    fcn.0045dd80(arg1 + 3);\n    if (arg1[1] != NULL) {\n        (***arg1[1])();\n    }\n    arg1[1] = 0;\n    return;\n}\n",
        "token_count": 80
    },
    "00458bf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00458bf0(int64_t *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    \n    iVar3 = *arg1;\n    if (iVar3 != 0) {\n        LOCK();\n        piVar1 = iVar3 + -0xa0;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar2 == 1) {\n            if (*(iVar3 + -0x88) != NULL) {\n                (**(iVar3 + -0x88))(*arg1);\n            }\n            fcn.00469cb0(*arg1);\n            *arg1 = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 168
    },
    "0044be00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0044be00(int64_t arg1, ulong arg2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    cVar1 = (**(**(arg1 + 0x98) + 0x30))();\n    if (cVar1 != '\\0') {\n        return *(arg1 + 0x10) - *(arg1 + 0x18);\n    }\n    iVar2 = (**(**(arg1 + 0x98) + 0x38))\n                      (*(arg1 + 0x98), arg2, *(arg1 + 0xa0), *(arg1 + 0xb0), *(arg1 + 0x10) - *(arg1 + 8));\n    return (iVar2 + *(arg1 + 0xa0)) - *(arg1 + 0xb8);\n}\n",
        "token_count": 188
    },
    "0044c230": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.0044c230(int64_t *arg1, ulong arg2, ulong arg3)\n\n{\n    int64_t *arg1_00;\n    int64_t iVar1;\n    char cVar2;\n    int64_t aiStack56 [3];\n    \n    arg1_00 = arg1 + 9;\n    cVar2 = fcn.00424ed0(arg1_00);\n    if (cVar2 == '\\0') {\n        fcn.0044b590(arg1_00, arg2, arg3);\n        cVar2 = fcn.00424ed0(arg1_00);\n        if (cVar2 != '\\0') {\n            fcn.0044c1f0(arg1);\n            iVar1 = arg1[0xd];\n            *(arg1 + 0xb) = arg3;\n            *(arg1 + 0x79) = 0;\n            *(arg1 + 0x7a) = 0;\n            arg1[5] = 0;\n            arg1[4] = 0;\n            arg1[1] = iVar1;\n            arg1[2] = iVar1;\n            arg1[3] = iVar1;\n            arg1[6] = 0;\n            *(arg1 + 0xc) = *(arg1 + 0x5c);\n            *(arg1 + 100) = *(arg1 + 0x5c);\n            if (((arg3 & 2) != 0) && ((**(*arg1 + 0x20))(aiStack56, arg1, 0, 2, arg3),  aiStack56[0] == -1)) {\n                fcn.0044c350(arg1);\n                return NULL;\n            }\n            return arg1;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 397
    },
    "0044ca40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.0044ca40(int64_t *arg1, int64_t arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    char cVar2;\n    int64_t iVar3;\n    uint in_stack_00000028;\n    \n    *arg1 = -1;\n    *(arg1 + 1) = 0;\n    cVar2 = fcn.0044bf00(arg2);\n    if (cVar2 != '\\0') {\n        iVar3 = fcn.0044b710(arg2 + 0x48, arg3, arg4);\n        if (iVar3 != -1) {\n            uVar1 = *(arg2 + 0xa0);\n            *arg1 = iVar3;\n            *(arg2 + 0x79) = 0;\n            *(arg2 + 0x7a) = 0;\n            *(arg2 + 0x28) = 0;\n            *(arg2 + 0xb8) = uVar1;\n            *(arg2 + 0xb0) = uVar1;\n            uVar1 = *(arg2 + 0x68);\n            *(arg2 + 0x20) = 0;\n            *(arg2 + 0x30) = 0;\n            *(arg2 + 0x60) = in_stack_00000028;\n            *(arg1 + 1) = in_stack_00000028;\n            *(arg2 + 8) = uVar1;\n            *(arg2 + 0x10) = uVar1;\n            *(arg2 + 0x18) = uVar1;\n            return arg1;\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 373
    },
    "0044d950": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044d950(ulong *arg1)\n\n{\n    int32_t *arg1_00;\n    \n    *arg1 = 0x488290;\n    fcn.0044c350(arg1);\n    fcn.0044b930(arg1 + 9);\n    *arg1 = 0x488970;\n    arg1_00 = arg1[7];\n    LOCK();\n    *arg1_00 = *arg1_00 + -1;\n    if ((*arg1_00 == 0) && (arg1_00 != NULL)) {\n        fcn.00460040(arg1_00);\n        if (arg1_00 != NULL) {\n    // WARNING: Could not recover jumptable at 0x00416d90. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.msvcrt.dll_free)();\n            return;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 207
    },
    "0044d990": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044d990(ulong *arg1)\n\n{\n    int32_t *arg1_00;\n    \n    *arg1 = 0x488290;\n    fcn.0044c350(arg1);\n    fcn.0044b930(arg1 + 9);\n    *arg1 = 0x488970;\n    arg1_00 = arg1[7];\n    LOCK();\n    *arg1_00 = *arg1_00 + -1;\n    if ((*arg1_00 == 0) && (arg1_00 != NULL)) {\n        fcn.00460040(arg1_00);\n        if (arg1_00 != NULL) {\n    // WARNING: Could not recover jumptable at 0x00416d90. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.msvcrt.dll_free)();\n            return;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 207
    },
    "0044dec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.0044dec0(int64_t *arg1, ulong arg2, ulong arg3)\n\n{\n    int64_t *arg1_00;\n    int64_t iVar1;\n    char cVar2;\n    int64_t aiStack56 [3];\n    \n    arg1_00 = arg1 + 9;\n    cVar2 = fcn.00424ed0(arg1_00);\n    if (cVar2 == '\\0') {\n        fcn.0044b590(arg1_00, arg2, arg3);\n        cVar2 = fcn.00424ed0(arg1_00);\n        if (cVar2 != '\\0') {\n            fcn.0044de60(arg1);\n            iVar1 = arg1[0xd];\n            *(arg1 + 0xb) = arg3;\n            *(arg1 + 0x79) = 0;\n            *(arg1 + 0x7a) = 0;\n            arg1[5] = 0;\n            arg1[4] = 0;\n            arg1[1] = iVar1;\n            arg1[2] = iVar1;\n            arg1[3] = iVar1;\n            arg1[6] = 0;\n            *(arg1 + 0xc) = *(arg1 + 0x5c);\n            *(arg1 + 100) = *(arg1 + 0x5c);\n            if (((arg3 & 2) != 0) && ((**(*arg1 + 0x20))(aiStack56, arg1, 0, 2, arg3),  aiStack56[0] == -1)) {\n                fcn.0044dfe0(arg1);\n                return NULL;\n            }\n            return arg1;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 396
    },
    "0044e6f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.0044e6f0(int64_t *arg1, int64_t arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    char cVar2;\n    int64_t iVar3;\n    uint in_stack_00000028;\n    \n    *arg1 = -1;\n    *(arg1 + 1) = 0;\n    cVar2 = fcn.0044db60(arg2);\n    if (cVar2 != '\\0') {\n        iVar3 = fcn.0044b710(arg2 + 0x48, arg3, arg4);\n        if (iVar3 != -1) {\n            uVar1 = *(arg2 + 0xa0);\n            *arg1 = iVar3;\n            *(arg2 + 0x79) = 0;\n            *(arg2 + 0x7a) = 0;\n            *(arg2 + 0x28) = 0;\n            *(arg2 + 0xb8) = uVar1;\n            *(arg2 + 0xb0) = uVar1;\n            uVar1 = *(arg2 + 0x68);\n            *(arg2 + 0x20) = 0;\n            *(arg2 + 0x30) = 0;\n            *(arg2 + 0x60) = in_stack_00000028;\n            *(arg1 + 1) = in_stack_00000028;\n            *(arg2 + 8) = uVar1;\n            *(arg2 + 0x10) = uVar1;\n            *(arg2 + 0x18) = uVar1;\n            return arg1;\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 375
    },
    "0044f670": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044f670(ulong *arg1)\n\n{\n    int32_t *arg1_00;\n    \n    *arg1 = 0x488310;\n    fcn.0044dfe0(arg1);\n    fcn.0044b930(arg1 + 9);\n    *arg1 = 0x4889f0;\n    arg1_00 = arg1[7];\n    LOCK();\n    *arg1_00 = *arg1_00 + -1;\n    if ((*arg1_00 == 0) && (arg1_00 != NULL)) {\n        fcn.00460040(arg1_00);\n        if (arg1_00 != NULL) {\n    // WARNING: Could not recover jumptable at 0x00416d90. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.msvcrt.dll_free)();\n            return;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 210
    },
    "0044f6b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044f6b0(ulong *arg1)\n\n{\n    int32_t *arg1_00;\n    \n    *arg1 = 0x488310;\n    fcn.0044dfe0(arg1);\n    fcn.0044b930(arg1 + 9);\n    *arg1 = 0x4889f0;\n    arg1_00 = arg1[7];\n    LOCK();\n    *arg1_00 = *arg1_00 + -1;\n    if ((*arg1_00 == 0) && (arg1_00 != NULL)) {\n        fcn.00460040(arg1_00);\n        if (arg1_00 != NULL) {\n    // WARNING: Could not recover jumptable at 0x00416d90. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.msvcrt.dll_free)();\n            return;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "00463440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00463440(int64_t arg1, int64_t arg2)\n\n{\n    fcn.00461c40(arg1);\n    fcn.00463330(arg1, arg1 + 0xd0);\n    *(arg1 + 0xe0) = 0;\n    *(arg1 + 0xe2) = 0;\n    *(arg1 + 0xd8) = 0;\n    *(arg1 + 0x1c) = 0;\n    *(arg1 + 0xe8) = arg2;\n    *(arg1 + 0x20) = arg2 == 0;\n    return;\n}\n",
        "token_count": 142
    },
    "004545f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar * fcn.004545f0(uchar *arg1, int64_t *arg2)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    char *pcVar3;\n    uint32_t uVar4;\n    ulong in_R8;\n    uchar auStack96 [32];\n    uint32_t uVar5;\n    uint64_t arg2_00;\n    \n    iVar1 = *arg2;\n    *arg1 = 0;\n    *(arg1 + 8) = arg2;\n    pcVar3 = arg2 + *(iVar1 + -0x18);\n    if (*(pcVar3 + 0xd8) != 0) {\n        uVar5 = *(pcVar3 + 0x20);\n        if (uVar5 != 0) goto code_r0x00454643;\n        fcn.00454150(*(pcVar3 + 0xd8));\n        pcVar3 = arg2 + *(*arg2 + -0x18);\n    }\n    uVar5 = *(pcVar3 + 0x20);\n    if (uVar5 == 0) {\n        *arg1 = 1;\n        return pcVar3;\n    }\ncode_r0x00454643:\n    uVar4 = uVar5 | 4;\n    if (*(pcVar3 + 0xe8) == 0) {\n        uVar4 = uVar5 | 5;\n    }\n    arg2_00 = uVar4;\n    *(pcVar3 + 0x20) = uVar4;\n    if ((*(pcVar3 + 0x1c) & uVar4) == 0) {\n        return pcVar3;\n    }\n    pcVar3 = \"basic_ios::clear\";\n    fcn.00465210(\"basic_ios::clear\");\n    fcn.004603c0(pcVar3, arg2_00 + 0xd0);\n    fcn.00461bd0(auStack96, arg2_00, in_R8);\n    fcn.00460470(auStack96);\n    fcn.00463330(arg2_00, in_R8);\n    piVar2 = *(arg2_00 + 0xe8);\n    if (piVar2 != NULL) {\n        fcn.004603c0(auStack96, piVar2 + 7);\n        (**(*piVar2 + 0x10))(piVar2, in_R8);\n        fcn.004604a0(piVar2 + 7, in_R8);\n        fcn.00460470(auStack96);\n    }\n    return pcVar3;\n}\n",
        "token_count": 572
    },
    "00455c30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00455c30(ulong *arg1, ulong arg2)\n\n{\n    *arg1 = 0x488550;\n    fcn.00448c40(arg1 + 1, arg2);\n    return;\n}\n",
        "token_count": 52
    },
    "004605b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004605b0(ulong *arg1)\n\n{\n    *arg1 = 0x489350;\n    fcn.00460220(arg1 + 2);\n    *arg1 = 0x4891b0;\n    *arg1 = 0x487b50;\n    return;\n}\n",
        "token_count": 69
    },
    "004606c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004606c0(ulong *arg1)\n\n{\n    *arg1 = 0x4893b0;\n    fcn.00460220(arg1 + 2);\n    *arg1 = 0x489210;\n    *arg1 = 0x487b50;\n    return;\n}\n",
        "token_count": 69
    },
    "00458b90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00458b90(ulong *arg1, ulong arg2)\n\n{\n    fcn.00455c30(arg1, arg2);\n    *arg1 = 0x488930;\n    return;\n}\n",
        "token_count": 49
    },
    "004603c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004603c0(int32_t **arg1, int32_t **arg2)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = *arg2;\n    *arg1 = piVar1;\n    LOCK();\n    *piVar1 = *piVar1 + 1;\n    return;\n}\n",
        "token_count": 73
    },
    "00462000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00462000(ulong *arg1)\n\n{\n    *arg1 = 0x4896b0;\n    fcn.00460220(arg1 + 2);\n    *arg1 = 0x487b50;\n    return;\n}\n",
        "token_count": 57
    },
    "004621e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004621e0(ulong *arg1)\n\n{\n    *arg1 = 0x4896f0;\n    fcn.00460220(arg1 + 2);\n    *arg1 = 0x487b50;\n    return;\n}\n",
        "token_count": 58
    },
    "00462530": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00462530(ulong *arg1)\n\n{\n    *arg1 = 0x489730;\n    if (arg1[2] != NULL) {\n        (**(*arg1[2] + 8))();\n    }\n    *arg1 = 0x487b50;\n    return;\n}\n",
        "token_count": 69
    },
    "004628b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004628b0(ulong *arg1)\n\n{\n    *arg1 = 0x489790;\n    if (arg1[2] != NULL) {\n        (**(*arg1[2] + 8))();\n    }\n    *arg1 = 0x487b50;\n    return;\n}\n",
        "token_count": 70
    },
    "0045a380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045a380(ulong *arg1, ulong arg2)\n\n{\n    fcn.00455c30(arg1, arg2);\n    *arg1 = 0x488cf0;\n    return;\n}\n",
        "token_count": 50
    },
    "0045af50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045af50(ulong *arg1, ulong arg2)\n\n{\n    fcn.0044b370(arg1, arg2);\n    *arg1 = 0x488d70;\n    return;\n}\n",
        "token_count": 50
    },
    "0045dd90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t ** fcn.0045dd90(int64_t **arg1)\n\n{\n    int64_t *piVar1;\n    \n    piVar1 = *arg1;\n    if (piVar1 != NULL) {\n        if (piVar1[2] < piVar1[3]) {\n            piVar1[2] = piVar1[2] + 1;\n        }\n        else {\n            (**(*piVar1 + 0x50))();\n        }\n        *(arg1 + 1) = 0xffffffff;\n    }\n    return arg1;\n}\n",
        "token_count": 125
    },
    "0045ddd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t ** fcn.0045ddd0(int64_t **arg1)\n\n{\n    int64_t *piVar1;\n    \n    piVar1 = *arg1;\n    if (piVar1 != NULL) {\n        if (piVar1[2] < piVar1[3]) {\n            piVar1[2] = piVar1[2] + 2;\n        }\n        else {\n            (**(*piVar1 + 0x50))();\n        }\n        *(arg1 + 1) = 0xffff;\n    }\n    return arg1;\n}\n",
        "token_count": 125
    },
    "0045e7c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045e7c0(ulong *arg1, int64_t arg2)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    \n    *(arg1 + 1) = arg2 != 0;\n    *arg1 = 0x4892d0;\n    uVar3 = fcn.00460180();\n    arg1[2] = uVar3;\n    *(arg1 + 3) = 0;\n    iVar5 = 0;\n    do {\n        iVar2 = fcn.0040dee0();\n        if (iVar2 == -1) {\n            *(arg1 + 3) = 0;\n            goto code_r0x0045e701;\n        }\n        *(arg1 + iVar5 + 0x19) = iVar2;\n        iVar5 = iVar5 + 1;\n    } while (iVar5 != 0x80);\n    *(arg1 + 3) = 1;\ncode_r0x0045e701:\n    uVar4 = 0;\n    do {\n        uVar1 = fcn.0040df60(uVar4 & 0xffffffff);\n        *(arg1 + uVar4 * 2 + 0x9a) = uVar1;\n        uVar4 = uVar4 + 1;\n    } while (uVar4 != 0x100);\n    iVar5 = 0;\n    do {\n        *(arg1 + iVar5 * 2 + 0x29a) = 1 << (iVar5 & 0x1f);\n        uVar1 = fcn.004258c0();\n        *(arg1 + iVar5 * 2 + 0x2ba) = uVar1;\n        iVar5 = iVar5 + 1;\n    } while (iVar5 != 0x10);\n    return;\n}\n",
        "token_count": 420
    },
    "0045ef80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045ef80(uint *arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    ushort *puVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    \n    *arg1 = arg2;\n    *(arg1 + 4) = 0x1c;\n    *(arg1 + 2) = 0x47e800;\n    *(arg1 + 8) = 0;\n    iVar4 = 0x47e800;\n    *(arg1 + 6) = 0x47e6a0;\n    iVar1 = 0;\n    iVar3 = 0x47e6a0;\n    while( true ) {\n        *(iVar3 + iVar1) = 0;\n        *(iVar4 + iVar1) = 0;\n        iVar1 = iVar1 + 8;\n        if (iVar1 == 0xe0) break;\n        iVar4 = *(arg1 + 2);\n        iVar3 = *(arg1 + 6);\n    }\n    *(arg1 + 8) = 0x47e660;\n    *0x47e660 = 0x47e100;\n    puVar2 = fcn.00460170();\n    *0x47e100 = *puVar2;\n    iVar4 = 0x47e660;\n    iVar3 = 8;\n    while( true ) {\n        *(iVar4 + iVar3) = 0;\n        iVar3 = iVar3 + 8;\n        if (iVar3 == 0x30) break;\n        iVar4 = *(arg1 + 8);\n    }\n    fcn.0045e2d0(0x47e120, 0, 0, 1);\n    fcn.0045eae0(arg1, 0x47f220, 0x47e120);\n    fcn.00460540(0x47e780, 1);\n    fcn.0045eae0(arg1, 0x47f2a0, 0x47e780);\n    *0x47da48 = 1;\n    *0x47da50 = 0;\n    *0x47da40 = 0x488d30;\n    *0x47da58 = 0;\n    *0x47da60 = 0;\n    *0x47da68 = 0;\n    *0x47d820 = 0x489730;\n    *0x47da70 = 0;\n    *0x47da78 = 0;\n    *0x47da80 = 0;\n    *0x47da88 = 0;\n    *0x47da89 = 0;\n    *0x47dac8 = 0;\n    *0x47d828 = 1;\n    *0x47d830 = 0x47da40;\n    fcn.00462220(0x47d820);\n    fcn.0045eae0(arg1, 0x47f360, 0x47d820);\n    *0x47e8f8 = 1;\n    *0x47e8f0 = 0x489490;\n    fcn.0045eae0(arg1, 0x47f2e0, 0x47e8f0);\n    *0x47e918 = 1;\n    *0x47e910 = 0x489590;\n    fcn.0045eae0(arg1, 0x47f300, 0x47e910);\n    *0x47e7c8 = 1;\n    *0x47e7c0 = 0x489410;\n    *0x47e7d0 = fcn.00460180();\n    fcn.0045eae0(arg1, 0x47f2c0, 0x47e7c0);\n    *0x47df08 = 1;\n    *0x47df10 = 0;\n    *0x47df00 = 0x489030;\n    *0x47df18 = 0;\n    *0x47df20 = 0;\n    *0x47df21 = 0;\n    *0x47d9a0 = 0x487d30;\n    *0x47df22 = 0;\n    *0x47df28 = 0;\n    *0x47df30 = 0;\n    *0x47df38 = 0;\n    *0x47df40 = 0;\n    *0x47df48 = 0;\n    *0x47df50 = 0;\n    *0x47df58 = 0;\n    *0x47df5c = 0;\n    *0x47df5d = 0;\n    *0x47df5e = 0;\n    *0x47df5f = 0;\n    *0x47df60 = 0;\n    *0x47df61 = 0;\n    *0x47df62 = 0;\n    *0x47df63 = 0;\n    *0x47df6f = 0;\n    *0x47d9a8 = 1;\n    *0x47d9b0 = 0x47df00;\n    fcn.004493d0(0x47d9a0);\n    fcn.0045eae0(arg1, 0x47f0b0, 0x47d9a0);\n    *0x47df88 = 1;\n    *0x47df90 = 0;\n    *0x47df80 = 0x489050;\n    *0x47df98 = 0;\n    *0x47dfa0 = 0;\n    *0x47dfa1 = 0;\n    *0x47d9c0 = 0x487db0;\n    *0x47dfa2 = 0;\n    *0x47dfa8 = 0;\n    *0x47dfb0 = 0;\n    *0x47dfb8 = 0;\n    *0x47dfc0 = 0;\n    *0x47dfc8 = 0;\n    *0x47dfd0 = 0;\n    *0x47dfd8 = 0;\n    *0x47dfdc = 0;\n    *0x47dfdd = 0;\n    *0x47dfde = 0;\n    *0x47dfdf = 0;\n    *0x47dfe0 = 0;\n    *0x47dfe1 = 0;\n    *0x47dfe2 = 0;\n    *0x47dfe3 = 0;\n    *0x47dfef = 0;\n    *0x47d9c8 = 1;\n    *0x47d9d0 = 0x47df80;\n    fcn.00449760(0x47d9c0);\n    fcn.0045eae0(arg1, 0x47f0c0, 0x47d9c0);\n    *0x47d8a8 = 1;\n    *0x47d8a0 = 0x4899f0;\n    fcn.0045eae0(arg1, 0x47f3c0, 0x47d8a0);\n    *0x47d8c8 = 1;\n    *0x47d8c0 = 0x489a70;\n    fcn.0045eae0(arg1, 0x47f3e0, 0x47d8c0);\n    *0x47dbc8 = 1;\n    *0x47dbd0 = 0;\n    *0x47dbc0 = 0x488db0;\n    *0x47dbd8 = 0;\n    *0x47dbe0 = 0;\n    *0x47dbe8 = 0;\n    *0x47dbf0 = 0;\n    *0x47dbf8 = 0;\n    *0x47dc00 = 0;\n    *0x47dc08 = 0;\n    *0x47dc10 = 0;\n    *0x47dc18 = 0;\n    *0x47dc20 = 0;\n    *0x47dc28 = 0;\n    *0x47dc30 = 0;\n    *0x47dc38 = 0;\n    *0x47dc40 = 0;\n    *0x47dc48 = 0;\n    *0x47dc50 = 0;\n    *0x47dc58 = 0;\n    *0x47dc60 = 0;\n    *0x47dc68 = 0;\n    *0x47dc70 = 0;\n    *0x47dc78 = 0;\n    *0x47dc80 = 0;\n    *0x47dc88 = 0;\n    *0x47dc90 = 0;\n    *0x47dc98 = 0;\n    *0x47dca0 = 0;\n    *0x47dca8 = 0;\n    *0x47dcb0 = 0;\n    *0x47dcb8 = 0;\n    *0x47dcc0 = 0;\n    *0x47dcc8 = 0;\n    *0x47dcd0 = 0;\n    *0x47dcd8 = 0;\n    *0x47dce0 = 0;\n    *0x47dce8 = 0;\n    *0x47dcf0 = 0;\n    *0x47dcf8 = 0;\n    *0x47dd00 = 0;\n    *0x47dd08 = 0;\n    *0x47dd10 = 0;\n    *0x47dd18 = 0;\n    *0x47dd20 = 0;\n    *0x47dd28 = 0;\n    *0x47dd30 = 0;\n    *0x47dd38 = 0;\n    *0x47dd40 = 0;\n    *0x47dd48 = 0;\n    fcn.0044a6b0(0x47d8e0, 0x47dbc0, 1);\n    fcn.0045eae0(arg1, 0x47f0f0, 0x47d8e0);\n    *0x47d868 = 1;\n    *0x47d860 = 0x4897f0;\n    fcn.0045eae0(arg1, 0x47f380, 0x47d860);\n    *0x47d888 = 1;\n    *0x47d880 = 0x4898b0;\n    fcn.0045eae0(arg1, 0x47f3a0, 0x47d880);\n    fcn.00461eb0(0x47d7e0, 1);\n    fcn.0045eae0(arg1, 0x47f340, 0x47d7e0);\n    fcn.0045e7c0(0x47e360, 1);\n    fcn.0045eae0(arg1, 0x47f230, 0x47e360);\n    fcn.00460650(0x47e7a0, 1);\n    fcn.0045eae0(arg1, 0x47f2b0, 0x47e7a0);\n    *0x47dae8 = 1;\n    *0x47dae0 = 0x488d50;\n    *0x47daf0 = 0;\n    *0x47daf8 = 0;\n    *0x47db00 = 0;\n    *0x47d840 = 0x489790;\n    *0x47db08 = 0;\n    *0x47db10 = 0;\n    *0x47db18 = 0;\n    *0x47db20 = 0;\n    *0x47db28 = 0;\n    *0x47db2a = 0;\n    *0x47dba8 = 0;\n    *0x47d848 = 1;\n    *0x47d850 = 0x47dae0;\n    fcn.00462580(0x47d840);\n    fcn.0045eae0(arg1, 0x47f370, 0x47d840);\n    *0x47e908 = 1;\n    *0x47e900 = 0x489510;\n    fcn.0045eae0(arg1, 0x47f2f0, 0x47e900);\n    *0x47e928 = 1;\n    *0x47e920 = 0x4895f0;\n    fcn.0045eae0(arg1, 0x47f310, 0x47e920);\n    *0x47e7e8 = 1;\n    *0x47e7e0 = 0x489450;\n    *0x47e7f0 = fcn.00460180();\n    fcn.0045eae0(arg1, 0x47f2d0, 0x47e7e0);\n    *0x47e022 = 0;\n    *0x47e024 = 0;\n    *0x47e000 = 0x489070;\n    *0x47e008 = 1;\n    *0x47e010 = 0;\n    *0x47d9e0 = 0x487e30;\n    *0x47e018 = 0;\n    *0x47e020 = 0;\n    *0x47e028 = 0;\n    *0x47e030 = 0;\n    *0x47e038 = 0;\n    *0x47e040 = 0;\n    *0x47e048 = 0;\n    *0x47e050 = 0;\n    *0x47e058 = 0;\n    *0x47e05c = 0;\n    *0x47e05d = 0;\n    *0x47e05e = 0;\n    *0x47e05f = 0;\n    *0x47e060 = 0;\n    *0x47e061 = 0;\n    *0x47e062 = 0;\n    *0x47e063 = 0;\n    *0x47e07a = 0;\n    *0x47d9e8 = 1;\n    *0x47d9f0 = 0x47e000;\n    fcn.00449af0(0x47d9e0);\n    fcn.0045eae0(arg1, 0x47f0d0, 0x47d9e0);\n    *0x47e0a4 = 0;\n    *0x47e080 = 0x489090;\n    *0x47e088 = 1;\n    *0x47e0a2 = 0;\n    *0x47e090 = 0;\n    *0x47e098 = 0;\n    *0x47e0a0 = 0;\n    *0x47da00 = 0x487eb0;\n    *0x47e0a8 = 0;\n    *0x47e0b0 = 0;\n    *0x47e0b8 = 0;\n    *0x47e0c0 = 0;\n    *0x47e0c8 = 0;\n    *0x47e0d0 = 0;\n    *0x47e0d8 = 0;\n    *0x47e0dc = 0;\n    *0x47e0dd = 0;\n    *0x47e0de = 0;\n    *0x47e0df = 0;\n    *0x47e0e0 = 0;\n    *0x47e0e1 = 0;\n    *0x47e0e2 = 0;\n    *0x47e0e3 = 0;\n    *0x47e0fa = 0;\n    *0x47da08 = 1;\n    *0x47da10 = 0x47e080;\n    fcn.00449e90(0x47da00);\n    fcn.0045eae0(arg1, 0x47f0e0, 0x47da00);\n    *0x47d8b8 = 1;\n    *0x47d8b0 = 0x489a30;\n    fcn.0045eae0(arg1, 0x47f3d0, 0x47d8b0);\n    *0x47d8d8 = 1;\n    *0x47d8d0 = 0x489ab0;\n    fcn.0045eae0(arg1, 0x47f3f0, 0x47d8d0);\n    *0x47dd68 = 1;\n    *0x47dd70 = 0;\n    *0x47dd60 = 0x488dd0;\n    *0x47dd78 = 0;\n    *0x47dd80 = 0;\n    *0x47dd88 = 0;\n    *0x47dd90 = 0;\n    *0x47dd98 = 0;\n    *0x47dda0 = 0;\n    *0x47dda8 = 0;\n    *0x47ddb0 = 0;\n    *0x47ddb8 = 0;\n    *0x47ddc0 = 0;\n    *0x47ddc8 = 0;\n    *0x47ddd0 = 0;\n    *0x47ddd8 = 0;\n    *0x47dde0 = 0;\n    *0x47dde8 = 0;\n    *0x47ddf0 = 0;\n    *0x47ddf8 = 0;\n    *0x47de00 = 0;\n    *0x47de08 = 0;\n    *0x47de10 = 0;\n    *0x47de18 = 0;\n    *0x47de20 = 0;\n    *0x47de28 = 0;\n    *0x47de30 = 0;\n    *0x47de38 = 0;\n    *0x47de40 = 0;\n    *0x47de48 = 0;\n    *0x47de50 = 0;\n    *0x47de58 = 0;\n    *0x47de60 = 0;\n    *0x47de68 = 0;\n    *0x47de70 = 0;\n    *0x47de78 = 0;\n    *0x47de80 = 0;\n    *0x47de88 = 0;\n    *0x47de90 = 0;\n    *0x47de98 = 0;\n    *0x47dea0 = 0;\n    *0x47dea8 = 0;\n    *0x47deb0 = 0;\n    *0x47deb8 = 0;\n    *0x47dec0 = 0;\n    *0x47dec8 = 0;\n    *0x47ded0 = 0;\n    *0x47ded8 = 0;\n    *0x47dee0 = 0;\n    *0x47dee8 = 0;\n    fcn.0044af50(0x47d920, 0x47dd60, 1);\n    fcn.0045eae0(arg1, 0x47f100, 0x47d920);\n    *0x47d878 = 1;\n    *0x47d870 = 0x489850;\n    fcn.0045eae0(arg1, 0x47f390, 0x47d870);\n    *0x47d898 = 1;\n    *0x47d890 = 0x4898f0;\n    fcn.0045eae0(arg1, 0x47f3b0, 0x47d890);\n    fcn.00462090(0x47d800, 1);\n    fcn.0045eae0(arg1, 0x47f350, 0x47d800);\n    iVar4 = *(arg1 + 6);\n    iVar3 = fcn.00425c30(0x47f360);\n    *(iVar4 + iVar3 * 8) = 0x47da40;\n    iVar4 = *(arg1 + 6);\n    iVar3 = fcn.00425c30(0x47f0b0);\n    *(iVar4 + iVar3 * 8) = 0x47df00;\n    iVar4 = *(arg1 + 6);\n    iVar3 = fcn.00425c30(0x47f0c0);\n    *(iVar4 + iVar3 * 8) = 0x47df80;\n    iVar4 = *(arg1 + 6);\n    iVar3 = fcn.00425c30(0x47f0f0);\n    *(iVar4 + iVar3 * 8) = 0x47dbc0;\n    iVar4 = *(arg1 + 6);\n    iVar3 = fcn.00425c30(0x47f370);\n    *(iVar4 + iVar3 * 8) = 0x47dae0;\n    iVar4 = *(arg1 + 6);\n    iVar3 = fcn.00425c30(0x47f0d0);\n    *(iVar4 + iVar3 * 8) = 0x47e000;\n    iVar4 = *(arg1 + 6);\n    iVar3 = fcn.00425c30(0x47f0e0);\n    *(iVar4 + iVar3 * 8) = 0x47e080;\n    iVar4 = *(arg1 + 6);\n    iVar3 = fcn.00425c30(0x47f100);\n    *(iVar4 + iVar3 * 8) = 0x47dd60;\n    return;\n}\n",
        "token_count": 4964
    },
    "00460180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00460180(void)\n\n{\n    fcn.00419150(0x47f270, 0x460200);\n    return *0x47f260;\n}\n",
        "token_count": 41
    },
    "004601c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004601c0(ulong *arg1, char *arg2)\n\n{\n    int64_t iVar1;\n    char *unaff_RSI;\n    char *unaff_RDI;\n    char *pcVar2;\n    bool bVar3;\n    \n    do {\n        *(*0x20 + -8) = unaff_RDI;\n        *(*0x20 + -0x10) = unaff_RSI;\n        bVar3 = *0x20 == 0x38;\n        *arg1 = 0;\n        iVar1 = 2;\n        pcVar2 = 0x480bd0;\n        do {\n            unaff_RSI = arg2;\n            unaff_RDI = pcVar2;\n            if (iVar1 == 0) break;\n            iVar1 = iVar1 + -1;\n            unaff_RDI = pcVar2 + 1;\n            unaff_RSI = arg2 + 1;\n            bVar3 = *arg2 == *pcVar2;\n            arg2 = unaff_RSI;\n            pcVar2 = unaff_RDI;\n        } while (bVar3);\n        if (bVar3) {\n            return;\n        }\n        *(*0x20 + -0x40) = 0x4601f3;\n        fcn.004659a0(\"locale::facet::_S_create_c_locale name not valid\");\n        arg2 = 0x484590;\n        arg1 = 0x47f260;\n        *0x20 = *0x20 + -0x38;\n    } while( true );\n}\n",
        "token_count": 342
    },
    "00460540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00460540(ulong *arg1, int64_t arg2)\n\n{\n    ulong uVar1;\n    \n    *(arg1 + 1) = arg2 != 0;\n    *arg1 = 0x489350;\n    uVar1 = fcn.00460180();\n    arg1[2] = uVar1;\n    return;\n}\n",
        "token_count": 81
    },
    "00460650": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00460650(ulong *arg1, int64_t arg2)\n\n{\n    ulong uVar1;\n    \n    *(arg1 + 1) = arg2 != 0;\n    *arg1 = 0x4893b0;\n    uVar1 = fcn.00460180();\n    arg1[2] = uVar1;\n    return;\n}\n",
        "token_count": 83
    },
    "004608d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004608d0(ulong *arg1)\n\n{\n    *arg1 = 0x489410;\n    fcn.00460220(arg1 + 2);\n    *arg1 = 0x487b50;\n    return;\n}\n",
        "token_count": 56
    },
    "00460ac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00460ac0(ulong *arg1)\n\n{\n    *arg1 = 0x489450;\n    fcn.00460220(arg1 + 2);\n    *arg1 = 0x487b50;\n    return;\n}\n",
        "token_count": 56
    },
    "00461180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00461180(int64_t arg1, ulong arg2)\n\n{\n    ulong *puVar1;\n    \n    for (puVar1 = *(arg1 + 0x28); puVar1 != NULL; puVar1 = *puVar1) {\n        (*puVar1[1])(arg2, arg1, *(puVar1 + 2));\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "00461220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00461220(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong *puVar3;\n    ulong *arg1_00;\n    \n    arg1_00 = *(arg1 + 0x28);\n    while (arg1_00 != NULL) {\n        LOCK();\n        piVar1 = arg1_00 + 0x14;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar2 != 0) break;\n        puVar3 = *arg1_00;\n        fcn.00469650(arg1_00);\n        arg1_00 = puVar3;\n    }\n    *(arg1 + 0x28) = 0;\n    return;\n}\n",
        "token_count": 178
    },
    "00461bd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00461bd0(ulong arg1, int64_t arg2, ulong arg3)\n\n{\n    fcn.004603c0(arg1, arg2 + 0xd0);\n    fcn.004604a0(arg2 + 0xd0, arg3);\n    fcn.00461180(arg2, 1);\n    return arg1;\n}\n",
        "token_count": 82
    },
    "00461c40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00461c40(int64_t arg1)\n\n{\n    uchar auStack40 [24];\n    \n    *(arg1 + 8) = 6;\n    *(arg1 + 0x10) = 0;\n    *(arg1 + 0x18) = 0x1002;\n    fcn.004603d0(auStack40);\n    fcn.004604a0(arg1 + 0xd0, auStack40);\n    fcn.00460470(auStack40);\n    return;\n}\n",
        "token_count": 117
    },
    "00461c90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00461c90(ulong *arg1, ulong arg2)\n\n{\n    *arg1 = 0x487b70;\n    fcn.00448c40(arg1 + 1, arg2);\n    return;\n}\n",
        "token_count": 53
    },
    "00461eb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00461eb0(ulong *arg1, int64_t arg2)\n\n{\n    ulong uVar1;\n    \n    *(arg1 + 1) = arg2 != 0;\n    *arg1 = 0x4896b0;\n    uVar1 = fcn.00460180();\n    arg1[2] = uVar1;\n    return;\n}\n",
        "token_count": 84
    },
    "00461f50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00461f50(ulong *arg1, int64_t arg2)\n\n{\n    ulong uVar1;\n    \n    *(arg1 + 1) = arg2 != 0;\n    *arg1 = 0x4896b0;\n    uVar1 = fcn.00460180();\n    arg1[2] = uVar1;\n    return;\n}\n",
        "token_count": 84
    },
    "00461fc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00461fc0(ulong *arg1)\n\n{\n    *arg1 = 0x4896b0;\n    fcn.00460220(arg1 + 2);\n    *arg1 = 0x487b50;\n    return;\n}\n",
        "token_count": 58
    },
    "00462090": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00462090(ulong *arg1, int64_t arg2)\n\n{\n    ulong uVar1;\n    \n    *(arg1 + 1) = arg2 != 0;\n    *arg1 = 0x4896f0;\n    uVar1 = fcn.00460180();\n    arg1[2] = uVar1;\n    return;\n}\n",
        "token_count": 83
    },
    "00462130": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00462130(ulong *arg1, int64_t arg2)\n\n{\n    ulong uVar1;\n    \n    *(arg1 + 1) = arg2 != 0;\n    *arg1 = 0x4896f0;\n    uVar1 = fcn.00460180();\n    arg1[2] = uVar1;\n    return;\n}\n",
        "token_count": 83
    },
    "004621a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004621a0(ulong *arg1)\n\n{\n    *arg1 = 0x4896f0;\n    fcn.00460220(arg1 + 2);\n    *arg1 = 0x487b50;\n    return;\n}\n",
        "token_count": 58
    },
    "00462220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00462220(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    \n    puVar4 = *(arg1 + 0x10);\n    if (puVar4 == NULL) {\n        puVar4 = fcn.004696a0(0x90);\n        *(puVar4 + 1) = 0;\n        puVar4[2] = 0;\n        puVar4[3] = 0;\n        *(puVar4 + 4) = 0;\n        *puVar4 = 0x488d30;\n        puVar4[5] = 0;\n        puVar4[6] = 0;\n        puVar4[7] = 0;\n        puVar4[8] = 0;\n        *(puVar4 + 9) = 0;\n        *(puVar4 + 0x49) = 0;\n        *(puVar4 + 0x11) = 0;\n        *(arg1 + 0x10) = puVar4;\n    }\n    puVar4[3] = 0;\n    *(puVar4 + 4) = 0;\n    *(puVar4 + 9) = 0x2e;\n    puVar4[2] = 0x480a40;\n    iVar3 = *0x47f090;\n    *(*(arg1 + 0x10) + 0x49) = 0x2c;\n    iVar2 = 0;\n    do {\n        *(*(arg1 + 0x10) + 0x4a + iVar2) = *(iVar3 + iVar2);\n        iVar1 = *0x47f080;\n        iVar2 = iVar2 + 1;\n    } while (iVar2 != 0x24);\n    iVar3 = 0;\n    do {\n        *(*(arg1 + 0x10) + 0x6e + iVar3) = *(iVar1 + iVar3);\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0x1a);\n    iVar3 = *(arg1 + 0x10);\n    *(iVar3 + 0x28) = 0x480a41;\n    *(iVar3 + 0x30) = 4;\n    *(iVar3 + 0x40) = 5;\n    *(iVar3 + 0x38) = 0x480a46;\n    return;\n}\n",
        "token_count": 555
    },
    "00462580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00462580(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    \n    puVar4 = *(arg1 + 0x10);\n    if (puVar4 == NULL) {\n        puVar4 = fcn.004696a0(0xd0);\n        *(puVar4 + 1) = 0;\n        puVar4[2] = 0;\n        *puVar4 = 0x488d50;\n        puVar4[3] = 0;\n        *(puVar4 + 4) = 0;\n        puVar4[5] = 0;\n        puVar4[6] = 0;\n        puVar4[7] = 0;\n        puVar4[8] = 0;\n        *(puVar4 + 9) = 0;\n        *(puVar4 + 0x4a) = 0;\n        *(puVar4 + 0x19) = 0;\n        *(arg1 + 0x10) = puVar4;\n    }\n    iVar3 = *0x47f090;\n    puVar4[3] = 0;\n    *(puVar4 + 4) = 0;\n    puVar4[2] = 0x480a40;\n    *(puVar4 + 0x4a) = 0x2c;\n    *(puVar4 + 9) = 0x2e;\n    iVar2 = 0;\n    do {\n        *(puVar4 + iVar2 * 2 + 0x4c) = *(iVar3 + iVar2);\n        iVar1 = *0x47f080;\n        iVar2 = iVar2 + 1;\n    } while (iVar2 != 0x24);\n    iVar3 = 0;\n    do {\n        *(puVar4 + iVar3 * 2 + 0x94) = *(iVar1 + iVar3);\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0x1a);\n    puVar4[6] = 4;\n    puVar4[8] = 5;\n    puVar4[5] = 0x480a4c;\n    puVar4[7] = 0x480a56;\n    return;\n}\n",
        "token_count": 520
    },
    "00462bb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00462bb0(int64_t arg1, ulong arg2)\n\n{\n    ulong uVar1;\n    char cVar2;\n    \n    cVar2 = fcn.004667a0(arg2);\n    if (cVar2 == '\\0') {\n        *(arg1 + 0xf0) = 0;\n    }\n    else {\n        uVar1 = fcn.00467260(arg2);\n        *(arg1 + 0xf0) = uVar1;\n    }\n    cVar2 = fcn.00466aa0(arg2);\n    if (cVar2 == '\\0') {\n        *(arg1 + 0xf8) = 0;\n    }\n    else {\n        uVar1 = fcn.00467560(arg2);\n        *(arg1 + 0xf8) = uVar1;\n    }\n    cVar2 = fcn.004669e0(arg2);\n    if (cVar2 == '\\0') {\n        *(arg1 + 0x100) = 0;\n    }\n    else {\n        uVar1 = fcn.004674a0(arg2);\n        *(arg1 + 0x100) = uVar1;\n    }\n    return;\n}\n",
        "token_count": 266
    },
    "00462e20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00462e20(int64_t arg1, ulong arg2)\n\n{\n    ulong uVar1;\n    \n    uVar1 = *(arg1 + 0xe8);\n    *(arg1 + 0xe8) = arg2;\n    fcn.00462d30(arg1, 0);\n    return uVar1;\n}\n",
        "token_count": 76
    },
    "00463330": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00463330(int64_t arg1, ulong arg2)\n\n{\n    ulong uVar1;\n    char cVar2;\n    \n    cVar2 = fcn.00466800(arg2);\n    if (cVar2 == '\\0') {\n        *(arg1 + 0xf0) = 0;\n    }\n    else {\n        uVar1 = fcn.004672c0(arg2);\n        *(arg1 + 0xf0) = uVar1;\n    }\n    cVar2 = fcn.00466b00(arg2);\n    if (cVar2 == '\\0') {\n        *(arg1 + 0xf8) = 0;\n    }\n    else {\n        uVar1 = fcn.004675c0(arg2);\n        *(arg1 + 0xf8) = uVar1;\n    }\n    cVar2 = fcn.00466a40(arg2);\n    if (cVar2 == '\\0') {\n        *(arg1 + 0x100) = 0;\n    }\n    else {\n        uVar1 = fcn.00467500(arg2);\n        *(arg1 + 0x100) = uVar1;\n    }\n    return;\n}\n",
        "token_count": 265
    },
    "00463590": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00463590(int64_t arg1, ulong arg2)\n\n{\n    ulong uVar1;\n    \n    uVar1 = *(arg1 + 0xe8);\n    *(arg1 + 0xe8) = arg2;\n    fcn.004634a0(arg1, 0);\n    return uVar1;\n}\n",
        "token_count": 75
    },
    "004651f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.004651f0(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.00469d60();\n    return *(iVar1 + 8) & 0xffffff00 | *(iVar1 + 8) != 0;\n}\n",
        "token_count": 61
    },
    "00469580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00469580(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    \n    iVar1 = *arg1;\n    *(iVar1 + 0x58) = 0;\n    *(iVar1 + 0x90) = 0;\n    fcn.0044c180(iVar1);\n    iVar1 = *arg1;\n    uVar2 = *(iVar1 + 0x68);\n    *(iVar1 + 0x79) = 0;\n    *(iVar1 + 0x7a) = 0;\n    *(iVar1 + 0x28) = 0;\n    *(iVar1 + 0x20) = 0;\n    *(iVar1 + 0x30) = 0;\n    *(iVar1 + 8) = uVar2;\n    *(iVar1 + 0x10) = uVar2;\n    *(iVar1 + 0x18) = uVar2;\n    *(iVar1 + 0x60) = *(iVar1 + 0x5c);\n    *(iVar1 + 100) = *(iVar1 + 0x5c);\n    return;\n}\n",
        "token_count": 258
    },
    "004695e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004695e0(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    \n    iVar1 = *arg1;\n    *(iVar1 + 0x58) = 0;\n    *(iVar1 + 0x90) = 0;\n    fcn.0044ddf0(iVar1);\n    iVar1 = *arg1;\n    uVar2 = *(iVar1 + 0x68);\n    *(iVar1 + 0x79) = 0;\n    *(iVar1 + 0x7a) = 0;\n    *(iVar1 + 0x28) = 0;\n    *(iVar1 + 0x20) = 0;\n    *(iVar1 + 0x30) = 0;\n    *(iVar1 + 8) = uVar2;\n    *(iVar1 + 0x10) = uVar2;\n    *(iVar1 + 0x18) = uVar2;\n    *(iVar1 + 0x60) = *(iVar1 + 0x5c);\n    *(iVar1 + 100) = *(iVar1 + 0x5c);\n    return;\n}\n",
        "token_count": 259
    },
    "00469670": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00469670(ulong param_1)\n\n{\n    fcn.004696a0(param_1);\n    return;\n}\n",
        "token_count": 31
    },
    "004696a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.004696a0(int64_t arg1)\n\n{\n    ulong uVar1;\n    char cVar2;\n    int32_t iVar3;\n    ulong *puVar4;\n    ulong uVar5;\n    uint64_t uVar6;\n    int64_t *arg1_00;\n    int64_t **ppiVar7;\n    ulong arg1_01;\n    int64_t *piVar8;\n    uchar *arg3;\n    uint32_t uVar9;\n    int64_t iVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    ulong *puVar13;\n    uchar auStack400 [16];\n    ulong uStack384;\n    int64_t *piStack352;\n    uint64_t uStack344;\n    \n    if (arg1 == 0) {\n        arg1 = 1;\n    }\n    while( true ) {\n        puVar4 = sub.msvcrt.dll_malloc(arg1);\n        if (puVar4 != NULL) {\n            return puVar4;\n        }\n        if (*0x47fd70 == NULL) break;\n        (**0x47fd70)();\n    }\n    puVar4 = fcn.00469800(8);\n    *puVar4 = 0x489930;\n    iVar10 = 0x485d40;\n    uVar5 = fcn.0046a250(puVar4, 0x485d40, 0x462b70);\n    if (iVar10 != -1) {\n        fcn.0040ca50(uVar5);\n    }\n    fcn.00469a20(uVar5);\n    puVar4 = sub.msvcrt.dll_malloc(0x90);\n    if (puVar4 != NULL) {\ncode_r0x00469738:\n        iVar10 = fcn.00469d60();\n        *(iVar10 + 8) = *(iVar10 + 8) + 1;\n        puVar13 = puVar4;\n        for (iVar10 = 0x12; iVar10 != 0; iVar10 = iVar10 + -1) {\n            *puVar13 = 0;\n            puVar13 = puVar13 + 1;\n        }\n        return puVar4;\n    }\n    iVar10 = 0x47da20;\n    iVar3 = fcn.0041bdb0(0x47da20);\n    if (iVar3 == 0) {\n        uVar6 = 0;\n        uVar12 = *0x46b380;\n        do {\n            uVar11 = *0x46b380;\n            if ((uVar12 & 1) == 0) {\n                puVar4 = uVar6 * 0x90 + 0x47b3a0;\n                *0x46b380 = 1 << (uVar6 & 0x3f) | *0x46b380;\n                iVar3 = fcn.0041b7a0(0x47da20);\n                if (iVar3 == 0) goto code_r0x00469738;\n                fcn.00420ea0();\n                break;\n            }\n            uVar9 = uVar6 + 1;\n            uVar6 = uVar9;\n            uVar12 = uVar12 >> 1;\n        } while (uVar9 != 0x40);\n        iVar10 = fcn.00466fe0();\n        while (uVar11 = uVar11 + 1,  uVar11 != 0) {\n            iVar10 = fcn.0040ca50(iVar10);\n        }\n        fcn.00469a20(iVar10);\n    }\n    fcn.00420e70();\n    uStack344 = iVar10 + 0xa0;\n    puVar4 = sub.msvcrt.dll_malloc(uStack344);\n    if (puVar4 != NULL) {\ncode_r0x0046981e:\n        iVar10 = fcn.00469d60();\n        *(iVar10 + 8) = *(iVar10 + 8) + 1;\n        puVar13 = puVar4;\n        for (iVar10 = 0x14; iVar10 != 0; iVar10 = iVar10 + -1) {\n            *puVar13 = 0;\n            puVar13 = puVar13 + 1;\n        }\n        return puVar4 + 0x14;\n    }\n    iVar3 = fcn.0041bdb0(0x47da20);\n    if (iVar3 == 0) {\n        uVar12 = *0x46b370;\n        if (uStack344 < 0x401) {\n            uVar11 = 0;\n            uVar6 = *0x46b370;\n            do {\n                if ((uVar6 & 1) == 0) {\n                    puVar4 = uVar11 * 0x400 + 0x46b3a0;\n                    *0x46b370 = 1 << (uVar11 & 0x3f) | *0x46b370;\n                    iVar3 = fcn.0041b7a0(0x47da20);\n                    if (iVar3 == 0) goto code_r0x0046981e;\n                    fcn.00420ea0();\n                    break;\n                }\n                uVar9 = uVar11 + 1;\n                uVar11 = uVar9;\n                uVar6 = uVar6 >> 1;\n            } while (uVar9 != 0x40);\n        }\n        uVar5 = fcn.00466fe0();\n        while (uVar12 = uVar12 + 1,  uVar12 != 0) {\n            uVar5 = fcn.0040ca50(uVar5);\n        }\n        fcn.00469a20(uVar5);\n    }\n    fcn.00420e70();\n    puVar4 = fcn.00469800(8);\n    *puVar4 = 0x489650;\n    fcn.0046a250(puVar4, 0x485b80, 0x460d70);\n    arg1_00 = fcn.00469800(8);\n    *arg1_00 = 0x487cf0;\n    fcn.0046a250(arg1_00, 0x485060, 0x4493b0);\n    ppiVar7 = fcn.00469d60();\n    piStack352 = *ppiVar7;\n    piVar8 = arg1_00 + -10;\n    if (*arg1_00 + 0xb8b1aabcbcd4d500U < 2) {\n        iVar3 = *(arg1_00 + -5);\n        if (iVar3 < 0) {\n            iVar3 = -iVar3;\n        }\n        *(arg1_00 + -5) = iVar3 + 1;\n        *(ppiVar7 + 1) = *(ppiVar7 + 1) + -1;\n        if (piVar8 != piStack352) {\n            arg1_00[-6] = piStack352;\n            *ppiVar7 = piVar8;\n        }\n        return arg1_00[-1];\n    }\n    if (piStack352 != NULL) {\n        fcn.00466fe0();\n        if ((piStack352 == NULL) || (fcn.00469950(piStack352),  1 < *piStack352 + 0xb8b1aabcbcd4d500U)) {\n            fcn.00466fe0();\n        }\n        iVar10 = piStack352[-7];\n        fcn.0041f310();\n        fcn.00469950(iVar10);\n        uStack384 = *(iVar10 + -0x10);\n        uVar5 = *(iVar10 + -0x18);\n        iVar3 = *(iVar10 + -0x24);\n        uVar1 = *(iVar10 + -0x38);\n        arg1_01 = fcn.0041f350(*(iVar10 + -0x40));\n        fcn.00469950(arg1_01);\n        piVar8 = fcn.00469e90();\n        puVar13 = *piVar8;\n        puVar4 = puVar13 + 0x12;\n        if ((*(puVar13 + 10) & 1) != 0) {\n            puVar4 = *puVar13;\n        }\n        arg3 = auStack400;\n        fcn.0041ef60(0, uVar5, arg3);\n        cVar2 = fcn.0041f050(arg3, puVar4[-0x12], puVar4, iVar3);\n        if (cVar2 != '\\0') {\n            arg3 = fcn.0046a200();\n            fcn.00469b80();\n            fcn.00469b80();\n            fcn.0040ca50(arg3);\n        }\n        cVar2 = fcn.0041f050(arg3, 0x485330, 0, iVar3);\n        if (cVar2 != '\\0') {\n            puVar4 = fcn.00469800(8);\n            *puVar4 = 0x488250;\n            fcn.0046a250(puVar4, 0x485330, 0x44bd70);\n        }\n        fcn.0041f310(uVar1);\n        ppiVar7 = fcn.00469d60();\n        piVar8 = *ppiVar7;\n        if (piVar8 == NULL) {\n            puVar4 = NULL;\n        }\n        else {\n            if ((*(piVar8 + 10) & 1) != 0) {\n                piVar8 = *piVar8 + -0x90;\n            }\n            puVar4 = *piVar8;\n        }\n        return puVar4;\n    }\n    *ppiVar7 = piVar8;\n    return NULL;\n}\n",
        "token_count": 2159
    },
    "0046a120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046a120(uchar *arg1)\n\n{\n    int32_t iVar1;\n    int64_t *piVar2;\n    ulong arg1_00;\n    int64_t iVar3;\n    ulong in_R9;\n    ulong uVar4;\n    \n    iVar3 = 0x41fba0;\n    fcn.00419150(0x47fd20, 0x41fba0);\n    iVar1 = fcn.0041bdb0(*0x47e940);\n    if (iVar1 != 0) {\n        arg1_00 = fcn.00420e70();\n        goto code_r0x0046a195;\n    }\n    arg1[1] = 0;\n    iVar3 = 0x41fb80;\n    *arg1 = 1;\n    fcn.00419150(0x47fd00, 0x41fb80);\n    iVar1 = fcn.0041cbf0(*0x47e930);\n    if (iVar1 == 0) {\n        arg1_00 = *0x47e940;\n        iVar1 = fcn.0041b7a0(*0x47e940);\n        if (iVar1 == 0) {\n            return;\n        }\n        fcn.00420ea0();\n    }\n    else {\n        while( true ) {\n            arg1_00 = fcn.00420ed0();\n            fcn.00420500(*0x47e940);\ncode_r0x0046a195:\n            iVar3 = iVar3 + 1;\n            if (iVar3 == 0) break;\n            fcn.0040ca50(arg1_00);\n        }\n    }\n    uVar4 = 0x46a1c9;\n    fcn.00469a20(arg1_00);\n    sub.msvcrt.dll__write_1(2, \"pure virtual method called\\n\", 0x1b, in_R9, uVar4);\n    fcn.00466fe0();\n    piVar2 = fcn.00469d60();\n    iVar3 = *piVar2;\n    *(piVar2 + 1) = *(piVar2 + 1) + 1;\n    if (iVar3 == 0) goto code_r0x0046a245;\n    if (*(iVar3 + 0x50) + 0xb8b1aabcbcd4d500U < 2) goto code_r0x0046a24a;\n    *piVar2 = 0;\n    do {\n        iVar3 = iVar3 + 0x50;\n        fcn.0040cb00(iVar3);\n        fcn.00469950(iVar3);\ncode_r0x0046a245:\n        fcn.00466fe0();\ncode_r0x0046a24a:\n        *(iVar3 + 0x28) = -*(iVar3 + 0x28);\n    } while( true );\n}\n",
        "token_count": 646
    },
    "0040de50": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.0040de50(void)\n\n{\n    // WARNING: Could not recover jumptable at 0x00416f60. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.msvcrt.dll_fopen)();\n    return;\n}\n",
        "token_count": 62
    },
    "0041a080": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041a080(void)\n\n{\n    code **ppcVar1;\n    int32_t *piVar2;\n    \n    ppcVar1 = fcn.004183e0();\n    *(ppcVar1 + 8) = *(ppcVar1 + 8) & 0xf3 | 4;\n    fcn.0041a050(1);\n    piVar2 = *0x49f460;\n    if (*0x49f460 == NULL) goto code_r0x0041a0e0;\n    do {\n        piVar2 = *0x49f460;\n        LOCK();\n        **0x49f460 = **0x49f460 + -1;\n        for (ppcVar1 = ppcVar1[3]; ppcVar1 != NULL; ppcVar1 = ppcVar1[2]) {\n            (**ppcVar1)();\n        }\n        fcn.0041a050(0);\n        fcn.00419e80(0xdeadbeef);\ncode_r0x0041a0e0:\n        *0x49f460 = fcn.0041d1b0(\"_pthread_cancelling_shmem\", CONCAT71(piVar2 >> 8, 4), 0);\n    } while( true );\n}\n",
        "token_count": 283
    },
    "0041f460": {
        "rules": [
            "contain loop",
            "create mutex",
            "check mutex and exit"
        ],
        "decompiled_code": "\nuint64_t fcn.0041f460(void)\n\n{\n    int64_t arg2;\n    ulong *puVar1;\n    code *pcVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    char *arg1;\n    uint32_t uVar10;\n    ulong auStack128 [5];\n    ulong uStack88;\n    uint uStack80;\n    uint uStack76;\n    ulong uStack72;\n    \n    arg1 = \"__terminate_handler_sh\";\n    auStack128[0] = 0x40cca6;\n    iVar4 = sub.msvcrt.dll_strlen();\n    auStack128[0] = 0x40ccbe;\n    iVar6 = fcn.0040ce40(arg1);\n    iVar6 = -iVar6;\n    arg2 = &uStack88 + iVar6;\n    *(&uStack88 + iVar6) = 0x656d68732d636367;\n    *(&uStack80 + iVar6) = 0x64742d6d;\n    *(&uStack72 + iVar6 + -4) = 0x326d;\n    *(&uStack72 + iVar6 + -2) = 0x2d;\n    *(auStack128 + iVar6) = 0x40cd06;\n    sub.msvcrt.dll_memcpy(&uStack72 + iVar6 + -1, \"__terminate_handler_sh\", iVar4);\n    puVar1 = &uStack72 + iVar4 + iVar6;\n    *puVar1 = 0x6161616161616161;\n    puVar1[1] = 0x6161616161616161;\n    puVar1[2] = 0x6161616161616161;\n    puVar1[3] = 0x6161616161616161;\n    puVar1[4] = 0x6161616161616161;\n    puVar1[5] = 0x6161616161616161;\n    puVar1[6] = 0x6161616161616161;\n    puVar1[7] = 0x6161616161616161;\n    *(&uStack88 + (iVar4 + 0x50) + iVar6) = 0;\n    *(&uStack88 + (iVar4 + 0xf) + iVar6) = 0;\n    *(auStack128 + iVar6) = 0x40cd4e;\n    uVar7 = (*_sym.imp.KERNEL32.dll_CreateMutexA)(0, 0);\n    *(&uStack88 + (iVar4 + 0xf) + iVar6) = 0x2d;\n    *(auStack128 + iVar6) = 0x40cd64;\n    iVar5 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(uVar7, 0xffffffff);\n    if (iVar5 != 0) {\n        pcVar2 = swi(3);\n        uVar8 = (*pcVar2)();\n        return uVar8;\n    }\n    *(auStack128 + iVar6) = 0x40cd72;\n    uVar3 = (*_sym.imp.KERNEL32.dll_FindAtomA)();\n    if (uVar3 == 0) {\n        *(auStack128 + iVar6) = 0x40cd83;\n        uVar9 = sub.msvcrt.dll_malloc(8);\n        uVar8 = 0x40;\n        do {\n            if ((uVar9 >> (uVar8 & 0x3f) & 1) != 0) {\n                *(arg2 + ((iVar4 + 0x50) - uVar8)) = 0x41;\n            }\n            uVar10 = uVar8 - 1;\n            uVar8 = uVar10;\n        } while (uVar10 != 0);\n        uStack76 = iVar4 + 0x10;\n        *(auStack128 + iVar6) = 0x40cdb7;\n        uVar3 = (*_sym.imp.KERNEL32.dll_AddAtomA)();\n        uVar8 = uStack76;\n        if (uVar3 == 0) {\n            pcVar2 = swi(3);\n            uVar8 = (*pcVar2)();\n            return uVar8;\n        }\n        *(auStack128 + iVar6) = 0x40cdcf;\n        uVar8 = fcn.0040cc00(uVar3, arg2, iVar4 + 0x51, uVar8);\n        if (uVar8 == uVar9) {\n            *(auStack128 + iVar6) = 0x40ce2d;\n            sub.msvcrt.dll_memset(uVar9, 0, 8);\n            *(auStack128 + iVar6) = 0x40ce38;\n            (*0x46a430)(uVar9);\n        }\n        else {\n            *(auStack128 + iVar6) = 0x40cddf;\n            fcn.00416d90(uVar9);\n        }\n    }\n    else {\n        *(auStack128 + iVar6) = 0x40ce1b;\n        uVar8 = fcn.0040cc00(uVar3, arg2, iVar4 + 0x51, iVar4 + 0x10);\n    }\n    *(auStack128 + iVar6) = 0x40cde8;\n    (*_sym.imp.KERNEL32.dll_ReleaseMutex)(uVar7);\n    *(auStack128 + iVar6) = 0x40cdf1;\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar7);\n    return uVar8;\n}\n",
        "token_count": 1259
    },
    "0041f480": {
        "rules": [
            "contain loop",
            "create mutex",
            "check mutex and exit"
        ],
        "decompiled_code": "\nuint64_t fcn.0041f480(void)\n\n{\n    int64_t arg2;\n    ulong *puVar1;\n    code *pcVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    char *arg1;\n    uint32_t uVar10;\n    ulong auStack128 [5];\n    ulong uStack88;\n    uint uStack80;\n    uint uStack76;\n    ulong uStack72;\n    \n    arg1 = \"__unexpected_handler_sh\";\n    auStack128[0] = 0x40cca6;\n    iVar4 = sub.msvcrt.dll_strlen();\n    auStack128[0] = 0x40ccbe;\n    iVar6 = fcn.0040ce40(arg1);\n    iVar6 = -iVar6;\n    arg2 = &uStack88 + iVar6;\n    *(&uStack88 + iVar6) = 0x656d68732d636367;\n    *(&uStack80 + iVar6) = 0x64742d6d;\n    *(&uStack72 + iVar6 + -4) = 0x326d;\n    *(&uStack72 + iVar6 + -2) = 0x2d;\n    *(auStack128 + iVar6) = 0x40cd06;\n    sub.msvcrt.dll_memcpy(&uStack72 + iVar6 + -1, \"__unexpected_handler_sh\", iVar4);\n    puVar1 = &uStack72 + iVar4 + iVar6;\n    *puVar1 = 0x6161616161616161;\n    puVar1[1] = 0x6161616161616161;\n    puVar1[2] = 0x6161616161616161;\n    puVar1[3] = 0x6161616161616161;\n    puVar1[4] = 0x6161616161616161;\n    puVar1[5] = 0x6161616161616161;\n    puVar1[6] = 0x6161616161616161;\n    puVar1[7] = 0x6161616161616161;\n    *(&uStack88 + (iVar4 + 0x50) + iVar6) = 0;\n    *(&uStack88 + (iVar4 + 0xf) + iVar6) = 0;\n    *(auStack128 + iVar6) = 0x40cd4e;\n    uVar7 = (*_sym.imp.KERNEL32.dll_CreateMutexA)(0, 0);\n    *(&uStack88 + (iVar4 + 0xf) + iVar6) = 0x2d;\n    *(auStack128 + iVar6) = 0x40cd64;\n    iVar5 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(uVar7, 0xffffffff);\n    if (iVar5 != 0) {\n        pcVar2 = swi(3);\n        uVar8 = (*pcVar2)();\n        return uVar8;\n    }\n    *(auStack128 + iVar6) = 0x40cd72;\n    uVar3 = (*_sym.imp.KERNEL32.dll_FindAtomA)();\n    if (uVar3 == 0) {\n        *(auStack128 + iVar6) = 0x40cd83;\n        uVar9 = sub.msvcrt.dll_malloc(8);\n        uVar8 = 0x40;\n        do {\n            if ((uVar9 >> (uVar8 & 0x3f) & 1) != 0) {\n                *(arg2 + ((iVar4 + 0x50) - uVar8)) = 0x41;\n            }\n            uVar10 = uVar8 - 1;\n            uVar8 = uVar10;\n        } while (uVar10 != 0);\n        uStack76 = iVar4 + 0x10;\n        *(auStack128 + iVar6) = 0x40cdb7;\n        uVar3 = (*_sym.imp.KERNEL32.dll_AddAtomA)();\n        uVar8 = uStack76;\n        if (uVar3 == 0) {\n            pcVar2 = swi(3);\n            uVar8 = (*pcVar2)();\n            return uVar8;\n        }\n        *(auStack128 + iVar6) = 0x40cdcf;\n        uVar8 = fcn.0040cc00(uVar3, arg2, iVar4 + 0x51, uVar8);\n        if (uVar8 == uVar9) {\n            *(auStack128 + iVar6) = 0x40ce2d;\n            sub.msvcrt.dll_memset(uVar9, 0, 8);\n            *(auStack128 + iVar6) = 0x40ce38;\n            (*0x46a440)(uVar9);\n        }\n        else {\n            *(auStack128 + iVar6) = 0x40cddf;\n            fcn.00416d90(uVar9);\n        }\n    }\n    else {\n        *(auStack128 + iVar6) = 0x40ce1b;\n        uVar8 = fcn.0040cc00(uVar3, arg2, iVar4 + 0x51, iVar4 + 0x10);\n    }\n    *(auStack128 + iVar6) = 0x40cde8;\n    (*_sym.imp.KERNEL32.dll_ReleaseMutex)(uVar7);\n    *(auStack128 + iVar6) = 0x40cdf1;\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar7);\n    return uVar8;\n}\n",
        "token_count": 1259
    },
    "0044b930": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint64_t * fcn.0044b930(int64_t *arg1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    \n    pcVar1 = _sym.imp.msvcrt.dll__errno;\n    if (*arg1 != 0) {\n        if (*(arg1 + 1) == '\\0') {\ncode_r0x0044b615:\n            *arg1 = 0;\n            return arg1;\n        }\n        puVar3 = (*_sym.imp.msvcrt.dll__errno)();\n        *puVar3 = 0;\n        do {\n            iVar2 = sub.msvcrt.dll_fclose(*arg1);\n            if (iVar2 == 0) goto code_r0x0044b615;\n            piVar4 = (*pcVar1)();\n        } while (*piVar4 == 4);\n        *arg1 = 0;\n    }\n    return NULL;\n}\n",
        "token_count": 212
    },
    "00463cc0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00463cc0(void)\n\n{\n    if (*0x47d7b0 == NULL) goto code_r0x00463cd8;\n    do {\n        fcn.0041f350(**0x47d7b0);\ncode_r0x00463cd8:\n        *0x47d7b0 = fcn.0041f480();\n    } while( true );\n}\n",
        "token_count": 89
    },
    "00465670": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00465670(ulong arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong *arg1_00;\n    int64_t *piVar3;\n    int64_t aiStack56 [3];\n    \n    arg1_00 = fcn.00469800(0x20);\n    piVar3 = fcn.00464fc0();\n    (**(*piVar3 + 0x18))(aiStack56, piVar3, arg1);\n    fcn.00455c30(arg1_00, aiStack56);\n    LOCK();\n    piVar1 = aiStack56[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 < 1) goto code_r0x004656e9;\n    do {\n        *(arg1_00 + 2) = arg1;\n        arg1_00[3] = piVar3;\n        *arg1_00 = 0x488210;\n        fcn.0046a250(arg1_00, 0x485310, 0x44bc70);\ncode_r0x004656e9:\n        fcn.004477a0(aiStack56[0] + -0x18);\n    } while( true );\n}\n",
        "token_count": 293
    },
    "00466fe0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00466fe0(void)\n\n{\n    if (*0x47d7a0 == NULL) goto code_r0x00466ff8;\n    do {\n        fcn.0041f310(**0x47d7a0);\ncode_r0x00466ff8:\n        *0x47d7a0 = fcn.0041f460();\n    } while( true );\n}\n",
        "token_count": 89
    },
    "0040b7d0": {
        "rules": [
            "write file on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0040b7d0(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    ulong uVar3;\n    code *pcVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uchar *puVar7;\n    char *pcVar8;\n    uint64_t uVar9;\n    uint32_t uVar10;\n    uint *puVar11;\n    code *pcVar12;\n    int32_t *piVar13;\n    uint32_t *puVar14;\n    int64_t iVar15;\n    int32_t *piVar16;\n    int32_t iVar17;\n    ulong *puVar18;\n    ulong *arg3_00;\n    uint64_t *arg3_01;\n    uchar *arg4_00;\n    int64_t unaff_R12;\n    ulong *unaff_R13;\n    uchar *unaff_R14;\n    ulong uStackX16;\n    ulong uStackX24;\n    ulong uStackX32;\n    ulong auStack384 [5];\n    uchar auStack344 [12];\n    uchar auStack332 [4];\n    uchar *apuStack328 [3];\n    ulong uStack304;\n    code *pcStack280;\n    uchar *puStack272;\n    ulong uStack264;\n    int64_t iStack256;\n    ulong *puStack248;\n    uchar *puStack240;\n    ulong *puStack232;\n    uint uStack180;\n    ulong auStack176 [3];\n    ulong uStack152;\n    int32_t iStack140;\n    ulong uStack128;\n    ulong *puStack120;\n    \n    puStack120 = &uStackX16;\n    uStackX16 = arg2;\n    uStackX24 = arg3;\n    uStackX32 = arg4;\n    iVar5 = sub.msvcrt.dll___iob_func();\n    arg4_00 = iVar5 + 0x60;\n    sub.msvcrt.dll_fwrite(\"Mingw-w64 runtime failure:\\n\", 1, 0x1b);\n    iVar5 = sub.msvcrt.dll___iob_func();\n    puStack272 = iVar5 + 0x60;\n    uStack264 = arg1;\n    puVar18 = puStack120;\n    sub.msvcrt.dll_vfprintf();\n    sub.msvcrt.dll_abort();\n    arg3_00 = puVar18;\n    uStack128 = arg1;\n    if (*0x49e3b4 < 1) goto code_r0x0040ba25;\n    pcStack280 = NULL;\n    iVar5 = *0x49e3b8;\n    do {\n        arg4_00 = *(iVar5 + 8);\n        if ((arg4_00 <= puStack272) &&\n           (arg4_00 = arg4_00 + *(*(iVar5 + 0x10) + 8),  pcVar12 = _sym.imp.KERNEL32.dll_VirtualQuery, \n           puStack272 < arg4_00)) goto code_r0x0040b91b;\n        uVar10 = pcStack280 + 1;\n        pcStack280 = uVar10;\n        iVar5 = iVar5 + 0x18;\n    } while (uVar10 != *0x49e3b4);\n    while( true ) {\n        puStack232 = 0x40b89f;\n        unaff_R12 = fcn.0040c3a0(puStack272);\n        if (unaff_R12 == 0) break;\n        unaff_R13 = auStack176;\n        unaff_R14 = pcStack280 * 0x18;\n        puVar11 = unaff_R14 + *0x49e3b8;\n        *(puVar11 + 4) = unaff_R12;\n        *puVar11 = 0;\n        puStack232 = 0x40b8d4;\n        iVar5 = fcn.0040c4e0();\n        *(puVar11 + 2) = iVar5 + *(unaff_R12 + 0xc);\n        pcStack280 = _sym.imp.KERNEL32.dll_VirtualQuery;\n        puStack232 = 0x40b8fe;\n        iVar5 = (*_sym.imp.KERNEL32.dll_VirtualQuery)(*(unaff_R14 + *0x49e3b8 + 8), unaff_R13, 0x30);\n        if (iVar5 == 0) {\n            arg3_00 = *(unaff_R14 + *0x49e3b8 + 8);\n            puStack232 = 0x40ba49;\n            fcn.0040b7d0(\"  VirtualQuery failed for %d bytes at address %p\", *(unaff_R12 + 8), arg3_00, arg4_00);\n            break;\n        }\n        if ((iStack140 == 4) || (iStack140 == 0x40)) {\ncode_r0x0040b914:\n            *0x49e3b4 = *0x49e3b4 + 1;\n            pcVar12 = pcStack280;\ncode_r0x0040b91b:\n            unaff_R13 = auStack176;\n            puStack232 = 0x40b929;\n            iVar5 = (*pcVar12)(puStack272, unaff_R13, 0x30);\n            pcVar4 = _sym.imp.KERNEL32.dll_VirtualProtect;\n            pcStack280 = pcVar12;\n            if (iVar5 != 0) {\n                if ((iStack140 != 4) && (iStack140 != 0x40)) {\n                    puStack232 = 0x40b996;\n                    (*_sym.imp.KERNEL32.dll_VirtualProtect)(auStack176[0], uStack152, 0x40, &uStack180);\n                    puStack232 = 0x40b9a4;\n                    sub.msvcrt.dll_memcpy(puStack272, uStack264, puVar18);\n                    if ((iStack140 != 0x40) && (iStack140 != 4)) {\n                        puStack232 = 0x40b9c6;\n                        (*pcVar4)(auStack176[0], uStack152, uStack180, &uStack180);\n                    }\n                    return;\n                }\n    // WARNING: Could not recover jumptable at 0x00416d40. Too many branches\n    // WARNING: Treating indirect jump as call\n                (*_sym.imp.msvcrt.dll_memcpy)(puStack272, uStack264, puVar18);\n                return;\n            }\n            goto code_r0x0040ba58;\n        }\n        unaff_R14 = unaff_R14 + *0x49e3b8;\n        arg3_00 = 0x40;\n        puStack232 = 0x40ba09;\n        arg4_00 = unaff_R14;\n        iVar17 = (*_sym.imp.KERNEL32.dll_VirtualProtect)(auStack176[0]);\n        if (iVar17 != 0) goto code_r0x0040b914;\n        puStack232 = 0x40ba17;\n        uVar10 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        puStack232 = 0x40ba25;\n        fcn.0040b7d0(\"  VirtualProtect failed with code 0x%x\", uVar10, arg3_00, arg4_00);\ncode_r0x0040ba25:\n        pcStack280 = NULL;\n    }\n    puStack232 = 0x40ba58;\n    fcn.0040b7d0(\"Address %p has no image-section\", puStack272, arg3_00, arg4_00);\ncode_r0x0040ba58:\n    pcVar8 = \"  VirtualQuery failed for %d bytes at address %p\";\n    puStack232 = 0x40ba6c;\n    puVar7 = puStack272;\n    fcn.0040b7d0(\"  VirtualQuery failed for %d bytes at address %p\", 0x30, puStack272, arg4_00);\n    if (*0x49e3b0 != 0) {\n        return;\n    }\n    *0x49e3b0 = 1;\n    auStack384[0] = 0x40baaf;\n    iStack256 = unaff_R12;\n    puStack248 = unaff_R13;\n    puStack240 = unaff_R14;\n    puStack232 = puVar18;\n    fcn.0040c3f0();\n    auStack384[0] = 0x40bac6;\n    iVar5 = fcn.0040ce40(pcVar8);\n    piVar13 = 0x48ae00;\n    *0x49e3b4 = 0;\n    iVar5 = -iVar5;\n    *0x49e3b8 = auStack344 + iVar5;\n    if ((*0x48ae00 == 0) && (*0x48ae04 == 0)) {\n        arg4_00 = *0x48ae08;\n        if (*0x48ae08 == 0) {\n            piVar13 = 0x48ae0c;\n            puVar7 = *0x48ae0c;\n            if ((*0x48ae0c != 0) || (*0x48ae10 != 0)) goto code_r0x0040bc60;\n        }\n        uVar9 = piVar13[2];\n        if (piVar13[2] != 1) {\ncode_r0x0040bd7d:\n            *(auStack384 + iVar5) = 0x40bd89;\n            fcn.0040b7d0(\"  Unknown pseudo relocation protocol version %d.\\n\", uVar9, puVar7, arg4_00);\n            return;\n        }\n        puVar14 = piVar13 + 3;\n        if (0x48ae23 < puVar14) {\n            *0x49e3b4 = 0;\n            return;\n        }\n        do {\n            uVar1 = *(puVar14 + 2);\n            arg3_01 = *puVar14 + 0x400000;\n            pcVar8 = puVar14[1] + 0x400000;\n            uVar9 = *arg3_01;\n            if (uVar1 == 0x10) {\n                arg4_00 = *pcVar8;\n                puVar7 = arg4_00;\n                if (*pcVar8 < 0) {\n                    puVar7 = arg4_00 | 0xffffffffffff0000;\n                }\n                apuStack328[0] = puVar7 + (uVar9 - arg3_01);\n                *(auStack384 + iVar5) = 0x40bd11;\n                fcn.0040b840(pcVar8, apuStack328, 2);\n            }\n            else {\n                uVar10 = uVar1;\n                if (uVar1 < 0x11) {\n                    if (uVar10 != 8) {\ncode_r0x0040bd16:\n                        pcVar8 = \"  Unknown pseudo relocation bit size %d.\\n\";\n                        uVar9 = uVar10;\n                        apuStack328[0] = NULL;\n                        *(auStack384 + iVar5) = 0x40bd2c;\n                        fcn.0040b7d0(\"  Unknown pseudo relocation bit size %d.\\n\", uVar9, arg3_01, arg4_00);\n                        goto code_r0x0040bd2c;\n                    }\n                    arg4_00 = *pcVar8;\n                    puVar7 = arg4_00;\n                    if (*pcVar8 < '\\0') {\n                        puVar7 = arg4_00 | 0xffffffffffffff00;\n                    }\n                    apuStack328[0] = puVar7 + (uVar9 - arg3_01);\n                    *(auStack384 + iVar5) = 0x40bcd7;\n                    fcn.0040b840(pcVar8, apuStack328, 1);\n                }\n                else if (uVar10 == 0x20) {\ncode_r0x0040bd2c:\n                    arg4_00 = *pcVar8;\n                    puVar7 = arg4_00;\n                    if (*pcVar8 < 0) {\n                        puVar7 = arg4_00 | 0xffffffff00000000;\n                    }\n                    apuStack328[0] = puVar7 + (uVar9 - arg3_01);\n                    *(auStack384 + iVar5) = 0x40bd5a;\n                    fcn.0040b840(pcVar8, apuStack328, 4);\n                }\n                else {\n                    if (uVar10 != 0x40) goto code_r0x0040bd16;\n                    apuStack328[0] = (uVar9 - arg3_01) + *pcVar8;\n                    *(auStack384 + iVar5) = 0x40bbc6;\n                    fcn.0040b840(pcVar8, apuStack328, 8);\n                }\n            }\n            puVar14 = puVar14 + 3;\n        } while (puVar14 < 0x48ae24);\n    }\n    else {\ncode_r0x0040bc60:\n        if (0x48ae23 < piVar13) {\n            *0x49e3b4 = 0;\n            return;\n        }\n        do {\n            uVar10 = piVar13[1];\n            piVar16 = piVar13 + 2;\n            apuStack328[0] = apuStack328[0] & 0xffffffff00000000 | *(uVar10 + 0x400000) + *piVar13;\n            *(auStack384 + iVar5) = 0x40bc94;\n            fcn.0040b840(uVar10 + 0x400000, apuStack328, 4);\n            piVar13 = piVar16;\n        } while (piVar16 < 0x48ae24);\n    }\n    pcVar4 = _sym.imp.KERNEL32.dll_VirtualQuery;\n    pcVar12 = _sym.imp.KERNEL32.dll_VirtualProtect;\n    iVar15 = 0;\n    iVar17 = 0;\n    if (0 < *0x49e3b4) {\n        do {\n            if (*(*0x49e3b8 + iVar15) != 0) {\n                uVar3 = *(*0x49e3b8 + iVar15 + 8);\n                *(auStack384 + iVar5) = 0x40bc33;\n                iVar6 = (*pcVar4)(uVar3, apuStack328, 0x30);\n                uVar3 = uStack304;\n                puVar7 = apuStack328[0];\n                if (iVar6 == 0) {\n                    puVar7 = *(*0x49e3b8 + iVar15 + 8);\n                    uVar9 = *(*(*0x49e3b8 + iVar15 + 0x10) + 8);\n                    *(auStack384 + iVar5) = 0x40bd7d;\n                    fcn.0040b7d0(\"  VirtualQuery failed for %d bytes at address %p\", uVar9, puVar7, arg4_00);\n                    goto code_r0x0040bd7d;\n                }\n                uVar2 = *(*0x49e3b8 + iVar15);\n                *(auStack384 + iVar5) = 0x40bc55;\n                arg4_00 = auStack332;\n                (*pcVar12)(puVar7, uVar3, uVar2);\n            }\n            iVar17 = iVar17 + 1;\n            iVar15 = iVar15 + 0x18;\n        } while (iVar17 < *0x49e3b4);\n    }\n    return;\n}\n",
        "token_count": 3494
    }
}