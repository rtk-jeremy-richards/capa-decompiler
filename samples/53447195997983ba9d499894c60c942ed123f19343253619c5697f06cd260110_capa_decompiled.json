{
    "004010e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004010e0(void)\n\n{\n    ulong uVar1;\n    char cVar2;\n    ulong *in_RAX;\n    ulong *puVar3;\n    ulong *puVar4;\n    ulong *puVar5;\n    int64_t iVar6;\n    ulong *puVar7;\n    ulong *arg2;\n    ulong *unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t uVar9;\n    ulong *puVar10;\n    ulong *puVar11;\n    uint64_t uVar12;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            puVar5 = unaff_RBX;\ncode_r0x00401116:\n            do {\n                unaff_RBX = puVar5;\n                puVar4 = in_RAX;\n                if (unaff_RBX == NULL) {\n                    if (*0x7ad9c8 != NULL) {\n                        *(*0x20 + -0x38) = *0x7ad9c8;\n                        iVar6 = 0;\n                        puVar5 = *0x7ad9c8;\n                        puVar4 = *0x7ad9c0;\n                        while( true ) {\n                            uVar1 = *puVar4;\n                            if (*(puVar4 + 3) != '\\0') {\n                                if ((*(puVar4 + 0x19) == '\\0') || (*puVar4[2] != '\\0')) {\n                                    *puVar4[2] = *(puVar4 + 0x19);\n                                }\n                                else {\n                                    *(*0x20 + -0x40) = puVar4[1];\n                                    *(*0x20 + -0x10) = uVar1;\n                                    *(*0x20 + -0x48) = iVar6;\n                                    *(*0x20 + -0x18) = puVar4;\n                                    *(*0x20 + -0x90) = 0x4013bb;\n                                    fcn.00435540();\n                                    *(*0x20 + -0x90) = 0x4013cc;\n                                    fcn.00435e40();\n                                    *(*0x20 + -0x90) = 0x4013db;\n                                    fcn.00435e40();\n                                    *(*0x20 + -0x90) = 0x4013ec;\n                                    fcn.00435e40();\n                                    *(*0x20 + -0x90) = 0x4013f1;\n                                    fcn.004355c0();\n                                    puVar5 = *(*0x20 + -0x38);\n                                    puVar4 = *(*0x20 + -0x18);\n                                    iVar6 = *(*0x20 + -0x48);\n                                }\n                            }\n                            iVar6 = iVar6 + 1;\n                            if (puVar5 <= iVar6) break;\n                            puVar4 = puVar4 + 4;\n                        }\n                    }\n                    return;\n                }\n                for (puVar7 = NULL; puVar7 < unaff_RBX; puVar7 = puVar7 + 1) {\n                    if (*(puVar4 + puVar7) == ',') goto code_r0x0040112d;\n                }\n                puVar7 = 0xffffffffffffffff;\ncode_r0x0040112d:\n                if (puVar7 < 0) {\n                    puVar5 = NULL;\n                    in_RAX = NULL;\n                    puVar7 = unaff_RBX;\n                }\n                else {\n                    if (unaff_RBX < puVar7) goto code_r0x00401610;\n                    if (unaff_RBX < puVar7 + 1U) goto code_r0x00401605;\n                    unaff_RBX = unaff_RBX - puVar7;\n                    puVar5 = unaff_RBX + -1;\n                    in_RAX = (puVar7 + 1U & -puVar5 >> 0x3f) + puVar4;\n                }\n            } while ((puVar7 < 4) || (*puVar4 != 0x2e757063));\n            for (arg2 = NULL; arg2 < puVar7; arg2 = arg2 + 1) {\n                if (*(puVar4 + arg2) == '=') goto code_r0x0040118c;\n            }\n            arg2 = 0xffffffffffffffff;\ncode_r0x0040118c:\n            *(*0x20 + -0x38) = puVar5;\n            *(*0x20 + -0x10) = in_RAX;\n            if (arg2 < 0) {\n                *(*0x20 + -0x60) = puVar7;\n                *(*0x20 + -0x20) = puVar4;\n                *(*0x20 + -0x90) = 0x401308;\n                fcn.00435540();\n                *(*0x20 + -0x90) = 0x401319;\n                fcn.00435e40();\n                *(*0x20 + -0x90) = 0x401328;\n                fcn.00435e40();\n                *(*0x20 + -0x90) = 0x401339;\n                fcn.00435e40();\n                *(*0x20 + -0x90) = 0x40133e;\n                fcn.004355c0();\n                in_RAX = *(*0x20 + -0x10);\n                puVar5 = *(*0x20 + -0x38);\n                goto code_r0x00401116;\n            }\n            if (arg2 <= puVar7) {\n                if (0x3 < arg2) {\n                    puVar11 = arg2 + -4;\n                    uVar9 = -puVar11 >> 0x3f & 4;\n                    unaff_RBX = puVar4 + uVar9;\n                    if (arg2 + 1U <= puVar7) {\n                        *(*0x20 + -0x40) = puVar11;\n                        *(*0x20 + -0x28) = unaff_RBX;\n                        iVar6 = puVar7 - arg2;\n                        *(*0x20 + -0x68) = iVar6 + -1;\n                        uVar12 = arg2 + 1U & -(iVar6 + -1) >> 0x3f;\n                        puVar3 = puVar4 + uVar12;\n                        *(*0x20 + -0x30) = puVar3;\n                        if (iVar6 == 3) {\n                            if (*(puVar4 + uVar12) != 0x6e6f) {\ncode_r0x0040128c:\n                                *(*0x20 + -0x90) = 0x401291;\n                                fcn.00435540();\n                                *(*0x20 + -0x90) = 0x4012a5;\n                                fcn.00435e40();\n                                *(*0x20 + -0x90) = 0x4012b4;\n                                fcn.00435e40();\n                                *(*0x20 + -0x90) = 0x4012c5;\n                                fcn.00435e40();\n                                *(*0x20 + -0x90) = 0x4012d4;\n                                fcn.00435e40();\n                                *(*0x20 + -0x90) = 0x4012e5;\n                                fcn.00435e40();\n                                *(*0x20 + -0x90) = 0x4012ea;\n                                fcn.004355c0();\n                                in_RAX = *(*0x20 + -0x10);\n                                puVar5 = *(*0x20 + -0x38);\n                                goto code_r0x00401116;\n                            }\n                        }\n                        else if (((iVar6 != 4) || (*(puVar4 + uVar12) != 0x666f)) || (*(puVar4 + uVar12 + 2) != 'f'))\n                        goto code_r0x0040128c;\n                        uVar12 = iVar6 == 3;\n                        if (((arg2 == 0x7) && (puVar3 = *(puVar4 + uVar9),  *(puVar4 + uVar9) == 0x6c61)) &&\n                           (*(puVar4 + uVar9 + 2) == 'l')) {\n                            puVar10 = *0x7ad9c8;\n                            for (puVar3 = NULL; puVar3 < puVar10; puVar3 = puVar3 + 1) {\n                                puVar7 = *0x7ad9c8;\n                                if (*0x7ad9c8 <= puVar3) {\ncode_r0x004015d7:\n                                    *(*0x20 + -0x90) = 0x4015dc;\n                                    fcn.0045e240(puVar7);\n                                    goto code_r0x004015dc;\n                                }\n                                iVar6 = puVar3 * 0x20;\n                                *(*0x7ad9c0 + puVar3 * 4 + 3) = 1;\n                                puVar11 = *0x7ad9c0;\n                                if (*0x7ad9c8 <= puVar3) {\n                                    *(*0x20 + -0x90) = 0x4015d7;\n                                    puVar7 = *0x7ad9c8;\n                                    fcn.0045e240(*0x7ad9c8);\n                                    goto code_r0x004015d7;\n                                }\ncode_r0x0040158a:\n                                *(puVar11 + iVar6 + 0x19) = uVar12;\n                            }\n                        }\n                        else {\n                            *(*0x20 + -0x69) = iVar6 == 3;\n                            *(*0x20 + -0x48) = *0x7ad9c8;\n                            puVar4 = NULL;\n                            arg2 = *0x7ad9c8;\n                            while (puVar4 < arg2) {\n                                puVar7 = *0x7ad9c8;\n                                puVar10 = *0x7ad9c0;\n                                if (*0x7ad9c8 <= puVar4) {\ncode_r0x00401585:\n                                    *(*0x20 + -0x90) = 0x40158a;\n                                    iVar6 = fcn.0045e240(puVar7);\n                                    goto code_r0x0040158a;\n                                }\n                                puVar7 = (*0x7ad9c0)[puVar4 * 4 + 1];\n                                puVar10 = (*0x7ad9c0)[puVar4 * 4];\n                                puVar3 = puVar4;\n                                if (puVar7 == puVar11) {\n                                    *(*0x20 + -0x50) = puVar4 * 0x20;\n                                    *(*0x20 + -0x58) = puVar4;\n                                    *(*0x20 + -0x90) = 0x4014b0;\n                                    cVar2 = fcn.00402a00(puVar7, arg2);\n                                    if (cVar2 != '\\0') {\n                                        puVar3 = *(*0x20 + -0x58);\n                                        puVar7 = *0x7ad9c8;\n                                        in_RAX = *0x7ad9c0;\n                                        if (puVar3 < *0x7ad9c8) {\n                                            puVar10 = *(*0x20 + -0x50);\n                                            *(*0x7ad9c0 + 3 + puVar10) = 1;\n                                            in_RAX = *0x7ad9c0;\n                                            if (puVar3 < *0x7ad9c8) {\n                                                *(*0x7ad9c0 + 0x19 + puVar10) = *(*0x20 + -0x69);\n                                                in_RAX = *(*0x20 + -0x10);\n                                                puVar5 = *(*0x20 + -0x38);\n                                                goto code_r0x00401116;\n                                            }\n                                            *(*0x20 + -0x90) = 0x40157f;\n                                            puVar7 = *0x7ad9c8;\n                                            fcn.0045e240(*0x7ad9c8);\n                                        }\n                                        *(*0x20 + -0x90) = 0x401585;\n                                        fcn.0045e240(puVar7);\n                                        puVar3 = puVar4;\n                                        goto code_r0x00401585;\n                                    }\n                                    arg2 = *(*0x20 + -0x48);\n                                    unaff_RBX = *(*0x20 + -0x28);\n                                    in_RAX = *(*0x20 + -0x10);\n                                    puVar5 = *(*0x20 + -0x38);\n                                    puVar11 = *(*0x20 + -0x40);\n                                    uVar12 = *(*0x20 + -0x69);\n                                    puVar3 = *(*0x20 + -0x58);\n                                }\n                                puVar4 = puVar3 + 1;\n                            }\n                            *(*0x20 + -0x90) = 0x401535;\n                            fcn.00435540();\n                            *(*0x20 + -0x90) = 0x401546;\n                            fcn.00435e40();\n                            *(*0x20 + -0x90) = 0x401555;\n                            fcn.00435e40();\n                            *(*0x20 + -0x90) = 0x401566;\n                            fcn.00435e40();\n                            *(*0x20 + -0x90) = 0x40156b;\n                            fcn.004355c0();\n                            in_RAX = *(*0x20 + -0x10);\n                            puVar5 = *(*0x20 + -0x38);\n                        }\n                        goto code_r0x00401116;\n                    }\ncode_r0x004015dc:\n                    *(*0x20 + -0x90) = 0x4015e5;\n                    fcn.0045e300(puVar7);\n                }\n                puVar7 = arg2;\n                *(*0x20 + -0x90) = 0x4015f2;\n                arg2 = puVar7;\n                fcn.0045e300(puVar7);\n            }\n            *(*0x20 + -0x90) = 0x401605;\n            fcn.0045e280(arg2, puVar7);\ncode_r0x00401605:\n            *(*0x20 + -0x90) = 0x401610;\n            puVar7 = unaff_RBX;\n            fcn.0045e300(unaff_RBX);\ncode_r0x00401610:\n            *(*0x20 + -0x90) = 0x401618;\n            in_RAX = fcn.0045e280(puVar7, unaff_RBX);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x401628;\n        fcn.0045bb60();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 3472
    },
    "00401640": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401d88)\n\nvoid fcn.00401640(ulong param_1, ulong *param_2, ulong *param_3, ulong *param_4)\n\n{\n    ulong *puVar1;\n    ulong *puVar2;\n    ulong *puVar3;\n    ulong *puVar4;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    int64_t iVar7;\n    ulong *puVar8;\n    ulong uVar9;\n    int64_t unaff_R14;\n    int32_t iStack96;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uint32_t uStack80;\n    uint32_t uStack76;\n    uint64_t arg2;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    puVar1 = fcn.0040c560();\n    puVar1[1] = 3;\n    *puVar1 = 0x4aed65;\n    puVar1[2] = 0x8020e1;\n    puVar1[5] = 3;\n    puVar1[4] = 0x4aed68;\n    puVar1[6] = 0x8020e0;\n    puVar1[9] = 4;\n    puVar1[8] = 0x4aeee5;\n    puVar1[10] = 0x8020e6;\n    puVar1[0xd] = 9;\n    puVar1[0xc] = 0x4af984;\n    puVar1[0xe] = 0x8020e9;\n    puVar1[0x11] = 6;\n    puVar1[0x10] = 0x4af23b;\n    puVar3 = 0x8020eb;\n    puVar1[0x12] = 0x8020eb;\n    *0x7ad9c8 = 0x5;\n    *0x7ad9d0 = 0x5;\n    if (*0x801c20 != 0) {\n        fcn.0045dda0(0x8020eb, param_2, param_3, param_4);\n        puVar1 = *0x7ad9c0;\n    }\n    *0x7ad9c0 = puVar1;\n    fcn.00401f00();\n    puVar1 = *0x7ad9c0;\n    if (iStack96 < 2) {\n        puVar3 = *0x7ad9c8 + 5;\n        puVar2 = *0x7ad9c0;\n        puVar8 = *0x7ad9c8;\n        if ((*0x7ad9d0 < puVar3) &&\n           (puVar4 = *0x7ad9c8,  puVar2 = fcn.00447360(*0x7ad9c8),  puVar8 = puVar1,  puVar1 = puVar2, \n           *0x7ad9d0 = puVar4,  *0x801c20 != 0)) {\n            puVar2 = fcn.0045dda0(puVar4, puVar3, param_3, param_4);\n            puVar1 = *0x7ad9c0;\n        }\n        *0x7ad9c0 = puVar1;\n        *0x7ad9c8 = puVar8 + 5;\n        iVar7 = puVar8 * 0x20;\n        puVar2[puVar8 * 4 + 1] = 6;\n        *(puVar2 + puVar8 * 4 + 3) = 0;\n        *(puVar2 + iVar7 + 0x19) = 0;\n        param_3 = puVar2 + puVar8 * 4 + 4;\n        param_4 = puVar2 + puVar8 * 4 + 6;\n        puVar3 = puVar2 + puVar8 * 4 + 0x10;\n        if (*0x801c20 == 0) {\n            puVar2[puVar8 * 4] = 0x4af235;\n            puVar2[puVar8 * 4 + 2] = 0x8020ea;\n        }\n        else {\n            uVar9 = 0x4af235;\n            fcn.0045df40(puVar3, puVar2 + puVar8 * 4 + 2, param_3);\n            iStack96 = fcn.0045dec0(puVar3, 0x8020ea, param_3, uVar9);\n        }\n        puVar2[puVar8 * 4 + 5] = 4;\n        *(puVar2 + puVar8 * 4 + 7) = 0;\n        *(puVar2 + iVar7 + 0x39) = 0;\n        if (*0x801c20 == 0) {\n            puVar2[puVar8 * 4 + 4] = 0x4aef1d;\n            puVar2[puVar8 * 4 + 6] = 0x8020ec;\n        }\n        else {\n            fcn.0045dec0(puVar3, 0x4aef1d, param_3, param_4);\n            iStack96 = fcn.0045dec0(puVar3, 0x8020ec, param_3, param_4);\n        }\n        puVar2[puVar8 * 4 + 9] = 5;\n        *(puVar2 + puVar8 * 4 + 0xb) = 0;\n        *(puVar2 + iVar7 + 0x59) = 0;\n        if (*0x801c20 == 0) {\n            puVar2[puVar8 * 4 + 8] = 0x4af071;\n            puVar2[puVar8 * 4 + 10] = 0x8020ee;\n        }\n        else {\n            fcn.0045dec0(puVar3, 0x4af071, param_3, param_4);\n            iStack96 = fcn.0045dec0(puVar3, 0x8020ee, param_3, param_4);\n        }\n        puVar2[puVar8 * 4 + 0xd] = 5;\n        *(puVar2 + puVar8 * 4 + 0xf) = 0;\n        *(puVar2 + iVar7 + 0x79) = 0;\n        if (*0x801c20 == 0) {\n            puVar2[puVar8 * 4 + 0xc] = 0x4af076;\n            puVar2[puVar8 * 4 + 0xe] = 0x8020ef;\n        }\n        else {\n            fcn.0045dec0(puVar3, 0x4af076, param_3, param_4);\n            iStack96 = fcn.0045dec0(puVar3, 0x8020ef, param_3, param_4);\n        }\n        puVar2[puVar8 * 4 + 0x11] = 5;\n        *(puVar2 + puVar8 * 4 + 0x13) = 0;\n        *(puVar2 + iVar7 + 0x99) = 0;\n        if (*0x801c20 == 0) {\n            puVar2[puVar8 * 4 + 0x10] = 0x4af07b;\n            param_2 = 0x8020ed;\n            puVar2[puVar8 * 4 + 0x12] = 0x8020ed;\n        }\n        else {\n            fcn.0045dec0(puVar3, 0x4af07b, param_3, param_4);\n            param_2 = 0x8020ed;\n            iStack96 = fcn.0045dec0(puVar3, 0x8020ed, param_3, param_4);\n        }\n    }\n    puVar1 = *0x7ad9c0;\n    if (iStack96 < 3) {\n        puVar3 = *0x7ad9c8 + 5;\n        puVar2 = *0x7ad9c0;\n        puVar8 = *0x7ad9c8;\n        if ((*0x7ad9d0 < puVar3) &&\n           (puVar4 = *0x7ad9c8,  puVar2 = fcn.00447360(*0x7ad9c8),  puVar8 = puVar1,  puVar1 = puVar2, \n           *0x7ad9d0 = puVar4,  *0x801c20 != 0)) {\n            puVar2 = fcn.0045dda0(puVar4, puVar3, param_3, param_4);\n            puVar1 = *0x7ad9c0;\n        }\n        *0x7ad9c0 = puVar1;\n        *0x7ad9c8 = puVar8 + 5;\n        iVar7 = puVar8 * 0x20;\n        puVar2[puVar8 * 4 + 1] = 3;\n        *(puVar2 + puVar8 * 4 + 3) = 0;\n        *(puVar2 + iVar7 + 0x19) = 0;\n        puVar3 = puVar2 + puVar8 * 4 + 4;\n        param_2 = puVar2 + puVar8 * 4 + 6;\n        puVar1 = puVar2 + puVar8 * 4 + 8;\n        puVar4 = puVar2 + puVar8 * 4 + 10;\n        if (*0x801c20 == 0) {\n            puVar2[puVar8 * 4] = 0x4aed6b;\n            puVar2[puVar8 * 4 + 2] = 0x8020e2;\n        }\n        else {\n            uVar9 = 0x4aed6b;\n            fcn.0045df40(puVar3, param_2, puVar1);\n            fcn.0045dda0(puVar3, param_2, puVar1, uVar9);\n        }\n        puVar2[puVar8 * 4 + 5] = 4;\n        *(puVar2 + puVar8 * 4 + 7) = 0;\n        *(puVar2 + iVar7 + 0x39) = 0;\n        if (*0x801c20 == 0) {\n            puVar2[puVar8 * 4 + 4] = 0x4aeead;\n            puVar2[puVar8 * 4 + 6] = 0x8020e3;\n        }\n        else {\n            fcn.0045dda0(puVar3, param_2, puVar1, puVar4);\n            fcn.0045dda0(puVar3, param_2, puVar1, puVar4);\n        }\n        puVar2[puVar8 * 4 + 9] = 4;\n        *(puVar2 + puVar8 * 4 + 0xb) = 0;\n        *(puVar2 + iVar7 + 0x59) = 0;\n        if (*0x801c20 == 0) {\n            puVar2[puVar8 * 4 + 8] = 0x4aeeb9;\n            puVar2[puVar8 * 4 + 10] = 0x8020e4;\n        }\n        else {\n            fcn.0045dda0(puVar3, param_2, puVar1, puVar4);\n            fcn.0045dda0(puVar3, param_2, puVar1, puVar4);\n        }\n        puVar2[puVar8 * 4 + 0xd] = 4;\n        *(puVar2 + puVar8 * 4 + 0xf) = 0;\n        *(puVar2 + iVar7 + 0x79) = 0;\n        if (*0x801c20 == 0) {\n            puVar2[puVar8 * 4 + 0xc] = 0x4aeebd;\n            puVar2[puVar8 * 4 + 0xe] = 0x8020e5;\n        }\n        else {\n            fcn.0045dda0(puVar3, param_2, puVar1, puVar4);\n            fcn.0045dda0(puVar3, param_2, puVar1, puVar4);\n        }\n        puVar2[puVar8 * 4 + 0x11] = 3;\n        *(puVar2 + puVar8 * 4 + 0x13) = 0;\n        *(puVar2 + iVar7 + 0x99) = 0;\n        if (*0x801c20 == 0) {\n            puVar2[puVar8 * 4 + 0x10] = 0x4aed77;\n            puVar2[puVar8 * 4 + 0x12] = 0x8020e7;\n        }\n        else {\n            fcn.0045dda0(puVar3, param_2, puVar1, puVar4);\n            fcn.0045dda0(puVar3, param_2, puVar1, puVar4);\n        }\n    }\n    fcn.00401ec0(puVar3, param_2);\n    if (uStack88 != 0) {\n        fcn.00401ec0(puVar3, param_2);\n        *0x8019bc = uStack88;\n        fcn.00401ec0(puVar3, param_2);\n        *0x8020ec = (uStack80 & 1) != 0;\n        *0x8020e9 = (uStack80 >> 1 & 1) != 0;\n        *0x8020ed = (uStack80 >> 9 & 1) != 0;\n        *0x8020ee = (uStack80 >> 0x13 & 1) != 0;\n        *0x8020ef = (uStack80 >> 0x14 & 1) != 0;\n        *0x8020ea = (uStack80 >> 0x17 & 1) != 0;\n        *0x8020e0 = (uStack80 >> 0x19 & 1) != 0;\n        *0x8020e8 = (uStack80 >> 0x1b & 1) != 0;\n        uVar5 = puVar3 & 0xffffffffffffff00 | *0x8020e8;\n        uVar6 = (param_2 & 0xffffff00 | (uStack80 >> 0xc & 1) != 0) & uVar5;\n        arg2 = uVar6;\n        *0x8020e7 = uVar6;\n        if ((uStack80 >> 0x1b & 1) != 0) {\n            fcn.00401ee0(uVar5, arg2);\n        }\n        uVar5 = 0;\n        *0x8020e2 = 0;\n        if (6 < uStack88) {\n            fcn.00401ec0(0, arg2);\n            *0x8020e4 = (uStack84 >> 3 & 1) != 0;\n            uVar5 = uVar5 & 0xffffffffffffff00 | (uStack84 >> 5 & 1) != 0;\n            uVar9 = 0;\n            *0x8020e3 = 0;\n            *0x8020e5 = (uStack84 >> 8 & 1) != 0;\n            *0x8020e6 = (uStack84 >> 9 & 1) != 0;\n            *0x8020e1 = (uStack84 >> 0x13 & 1) != 0;\n            fcn.00401ec0(uVar5, 0);\n            if (uStack88 < 0x80000001) {\n                return;\n            }\n            fcn.00401ec0(uVar5, uVar9);\n            *0x8020eb = (uStack76 >> 0x1b & 1) != 0;\n            return;\n        }\n        *0x8020e2 = 0;\n        return;\n    }\n    return;\n}\n",
        "token_count": 3764
    },
    "00402d40": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00402d40(uint64_t arg1)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    uint32_t uVar3;\n    uchar (*pauVar4) [32];\n    uint64_t uVar5;\n    uchar auVar6 [32];\n    uchar auVar7 [16];\n    uchar auVar8 [32];\n    uchar auVar9 [32];\n    uchar (*pauStackX8) [32];\n    uint64_t uStackX16;\n    uchar (*pauStackX24) [32];\n    uint64_t uStackX32;\n    uint8_t uVar10;\n    \n    if (uStackX16 < uStackX32) {\n        return;\n    }\n    if ((0xf < uStackX16) && (*0x8020ef == '\\x01')) {\n        if (0xb < uStackX32) goto code_r0x00402b57;\n        if ((*pauStackX24 + 0x10 & 0xff0) != 0) {\n            pauVar4 = pauStackX8[-1];\n            uVar5 = 0x10 - uStackX32;\n            do {\n                uVar3 = pcmpestri(**pauStackX24, **pauStackX8, 0xc);\n                if ((arg1 & 0xffffffff00000000 | uVar3) < uVar5 || (arg1 & 0xffffffff00000000 | uVar3) == uVar5) {\n                    return;\n                }\n                pauStackX8 = pauStackX8 + uVar5;\n            } while (pauStackX8 < *pauVar4 + uStackX16 + 0x11);\n            uVar3 = pcmpestri(**pauStackX24, *((*pauVar4 + uStackX16 + 0x11)[-1] + 0x1f), 0xc);\n            if (uVar5 <= (arg1 & 0xffffffff00000000 | uVar3) && (arg1 & 0xffffffff00000000 | uVar3) != uVar5) {\n                return;\n            }\n            return;\n        }\n    }\n    if (uStackX32 < 3) {\n        pauVar4 = pauStackX8[-1];\n        do {\n            if (**pauStackX8 == **pauStackX24) {\n                return;\n            }\n            pauStackX8 = *pauStackX8 + 1;\n        } while (pauStackX8 < *pauVar4 + uStackX16 + 0x1f);\n        return;\n    }\n    if (uStackX32 < 4) {\n        pauVar4 = pauStackX8[-1];\n        do {\n            while (**pauStackX8 != **pauStackX24) {\n                pauStackX8 = *pauStackX8 + 1;\n                if (*pauVar4 + uStackX16 + 0x1e <= pauStackX8) {\n                    return;\n                }\n            }\n            if (*(*pauStackX8 + 1) == *(*pauStackX24 + 1)) {\n                return;\n            }\n            pauStackX8 = *pauStackX8 + 1;\n        } while (pauStackX8 < *pauVar4 + uStackX16 + 0x1e);\n        return;\n    }\n    if (uStackX32 < 5) {\n        pauVar4 = pauStackX8[-1];\n        do {\n            if (**pauStackX8 == **pauStackX24) {\n                return;\n            }\n            pauStackX8 = *pauStackX8 + 1;\n        } while (pauStackX8 < *pauVar4 + uStackX16 + 0x1d);\n        return;\n    }\n    if (uStackX32 < 8) {\n        pauVar4 = pauStackX8 + ((uStackX16 + 1) - uStackX32);\n        do {\n            while (**pauStackX8 != **pauStackX24) {\n                pauStackX8 = *pauStackX8 + 1;\n                if (pauVar4 <= pauStackX8) {\n                    return;\n                }\n            }\n            if (*(pauStackX8[-1] + uStackX32 + 0x1c) == *(pauStackX24[-1] + uStackX32 + 0x1c)) {\n                return;\n            }\n            pauStackX8 = *pauStackX8 + 1;\n        } while (pauStackX8 < pauVar4);\n        return;\n    }\n    if (uStackX32 < 9) {\n        pauVar4 = pauStackX8[-1];\n        do {\n            if (**pauStackX8 == **pauStackX24) {\n                return;\n            }\n            pauStackX8 = *pauStackX8 + 1;\n        } while (pauStackX8 < *pauVar4 + uStackX16 + 0x19);\n        return;\n    }\ncode_r0x00402b57:\n    if (uStackX32 < 0x10) {\n        pauVar4 = pauStackX8 + ((uStackX16 + 1) - uStackX32);\n        do {\n            while (**pauStackX8 == **pauStackX24) {\n                if (*(pauStackX8[-1] + uStackX32 + 0x18) == *(pauStackX24[-1] + uStackX32 + 0x18)) {\n                    return;\n                }\n                pauStackX8 = *pauStackX8 + 1;\n                if (pauVar4 <= pauStackX8) {\n                    return;\n                }\n            }\n            pauStackX8 = *pauStackX8 + 1;\n        } while (pauStackX8 < pauVar4);\n    }\n    else if (uStackX32 < 0x11) {\n        pauVar4 = pauStackX8[-1];\n        do {\n            uVar10 = -((*pauStackX8)[0xf] == (*pauStackX24)[0xf]);\n            auVar7 = CONCAT115(uVar10, CONCAT114(-((*pauStackX8)[0xe] == (*pauStackX24)[0xe]), \n                                                 CONCAT113(-((*pauStackX8)[0xd] == (*pauStackX24)[0xd]), \n                                                           CONCAT112(-((*pauStackX8)[0xc] == (*pauStackX24)[0xc]), \n                                                                     CONCAT111(-((*pauStackX8)[0xb] ==\n                                                                                (*pauStackX24)[0xb]), \n                                                                               CONCAT110(-((*pauStackX8)[10] ==\n                                                                                          (*pauStackX24)[10]), \n                                                                                         CONCAT19(-((*pauStackX8)[9] ==\n                                                                                                   (*pauStackX24)[9]), \n                                                                                                  CONCAT18(-((*\n                                                            pauStackX8)[8] == (*pauStackX24)[8]), \n                                                            CONCAT17(-((*pauStackX8)[7] == (*pauStackX24)[7]), \n                                                                     CONCAT16(-((*pauStackX8)[6] == (*pauStackX24)[6]), \n                                                                              CONCAT15(-((*pauStackX8)[5] ==\n                                                                                        (*pauStackX24)[5]), \n                                                                                       CONCAT14(-((*pauStackX8)[4] ==\n                                                                                                 (*pauStackX24)[4]), \n                                                                                                CONCAT13(-((*pauStackX8)\n                                                                                                           [3] == (*\n                                                            pauStackX24)[3]), \n                                                            CONCAT12(-((*pauStackX8)[2] == (*pauStackX24)[2]), \n                                                                     CONCAT11(-((*pauStackX8)[1] == (*pauStackX24)[1]), \n                                                                              -((*pauStackX8)[0] == (*pauStackX24)[0])))\n                                                            )))))))))))));\n            if ((SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 | (SUB161(auVar7 >> 0x17, 0) & 1) << 2\n                 | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 | (SUB161(auVar7 >> 0x27, 0) & 1) << 4 |\n                 (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 | (SUB161(auVar7 >> 0x37, 0) & 1) << 6 |\n                 (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 | (SUB161(auVar7 >> 0x47, 0) & 1) << 8 |\n                 (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 | (SUB161(auVar7 >> 0x57, 0) & 1) << 10 |\n                 (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb | (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc |\n                 (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd | (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (uVar10 >> 7) << 0xf)\n                == 0xffff) {\n                return;\n            }\n            pauStackX8 = *pauStackX8 + 1;\n        } while (pauStackX8 < *pauVar4 + uStackX16 + 0x11);\n    }\n    else if (uStackX32 < 0x20) {\n        pauVar4 = pauStackX8 + ((uStackX16 + 1) - uStackX32);\n        pcVar1 = pauStackX24[-1] + uStackX32 + 0x10;\n        do {\n            while (uVar10 = -((*pauStackX8)[0xf] == (*pauStackX24)[0xf]), \n                  auVar7 = CONCAT115(uVar10, CONCAT114(-((*pauStackX8)[0xe] == (*pauStackX24)[0xe]), \n                                                       CONCAT113(-((*pauStackX8)[0xd] == (*pauStackX24)[0xd]), \n                                                                 CONCAT112(-((*pauStackX8)[0xc] == (*pauStackX24)[0xc])\n                                                                           , CONCAT111(-((*pauStackX8)[0xb] ==\n                                                                                        (*pauStackX24)[0xb]), \n                                                                                       CONCAT110(-((*pauStackX8)[10] ==\n                                                                                                  (*pauStackX24)[10]), \n                                                                                                 CONCAT19(-((*pauStackX8\n                                                                                                            )[9] == (*\n                                                            pauStackX24)[9]), \n                                                            CONCAT18(-((*pauStackX8)[8] == (*pauStackX24)[8]), \n                                                                     CONCAT17(-((*pauStackX8)[7] == (*pauStackX24)[7]), \n                                                                              CONCAT16(-((*pauStackX8)[6] ==\n                                                                                        (*pauStackX24)[6]), \n                                                                                       CONCAT15(-((*pauStackX8)[5] ==\n                                                                                                 (*pauStackX24)[5]), \n                                                                                                CONCAT14(-((*pauStackX8)\n                                                                                                           [4] == (*\n                                                            pauStackX24)[4]), \n                                                            CONCAT13(-((*pauStackX8)[3] == (*pauStackX24)[3]), \n                                                                     CONCAT12(-((*pauStackX8)[2] == (*pauStackX24)[2]), \n                                                                              CONCAT11(-((*pauStackX8)[1] ==\n                                                                                        (*pauStackX24)[1]), \n                                                                                       -((*pauStackX8)[0] ==\n                                                                                        (*pauStackX24)[0])))))))))))))))\n                                    ), \n                  (SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 |\n                   (SUB161(auVar7 >> 0x17, 0) & 1) << 2 | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 |\n                   (SUB161(auVar7 >> 0x27, 0) & 1) << 4 | (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 |\n                   (SUB161(auVar7 >> 0x37, 0) & 1) << 6 | (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 |\n                   (SUB161(auVar7 >> 0x47, 0) & 1) << 8 | (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 |\n                   (SUB161(auVar7 >> 0x57, 0) & 1) << 10 | (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb |\n                   (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd |\n                   (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (uVar10 >> 7) << 0xf) != 0xffff) {\n                pauStackX8 = *pauStackX8 + 1;\n                if (pauVar4 <= pauStackX8) {\n                    return;\n                }\n            }\n            pcVar2 = pauStackX8[-1] + uStackX32 + 0x10;\n            auVar7 = CONCAT115(-(pcVar2[0xf] == pcVar1[0xf]), \n                               CONCAT114(-(pcVar2[0xe] == pcVar1[0xe]), \n                                         CONCAT113(-(pcVar2[0xd] == pcVar1[0xd]), \n                                                   CONCAT112(-(pcVar2[0xc] == pcVar1[0xc]), \n                                                             CONCAT111(-(pcVar2[0xb] == pcVar1[0xb]), \n                                                                       CONCAT110(-(pcVar2[10] == pcVar1[10]), \n                                                                                 CONCAT19(-(pcVar2[9] == pcVar1[9]), \n                                                                                          CONCAT18(-(pcVar2[8] ==\n                                                                                                    pcVar1[8]), \n                                                                                                   CONCAT17(-(pcVar2[7]\n                                                                                                             == pcVar1[7\n                                                            ]), CONCAT16(-(pcVar2[6] == pcVar1[6]), \n                                                                         CONCAT15(-(pcVar2[5] == pcVar1[5]), \n                                                                                  CONCAT14(-(pcVar2[4] == pcVar1[4]), \n                                                                                           CONCAT13(-(pcVar2[3] ==\n                                                                                                     pcVar1[3]), \n                                                                                                    CONCAT12(-(pcVar2[2]\n                                                                                                              == pcVar1[\n                                                            2]), CONCAT11(-(pcVar2[1] == pcVar1[1]), \n                                                                          -(*pcVar2 == *pcVar1))))))))))))))));\n            if ((SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 | (SUB161(auVar7 >> 0x17, 0) & 1) << 2\n                 | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 | (SUB161(auVar7 >> 0x27, 0) & 1) << 4 |\n                 (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 | (SUB161(auVar7 >> 0x37, 0) & 1) << 6 |\n                 (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 | (SUB161(auVar7 >> 0x47, 0) & 1) << 8 |\n                 (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 | (SUB161(auVar7 >> 0x57, 0) & 1) << 10 |\n                 (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb | (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc |\n                 (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd | (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe |\n                (-(pcVar2[0xf] == pcVar1[0xf]) >> 7) << 0xf) == 0xffff) {\n                return;\n            }\n            pauStackX8 = *pauStackX8 + 1;\n        } while (pauStackX8 < pauVar4);\n    }\n    else {\n        if (uStackX32 < 0x21) {\n            auVar6 = vmovdqu_avx(*pauStackX24);\n            pauVar4 = pauStackX8[-1];\n            do {\n                auVar8 = vmovdqu_avx(*pauStackX8);\n                auVar8 = vpcmpeqb_avx2(auVar8, auVar6);\n                if ((SUB321(auVar8 >> 7, 0) & 1 | (SUB321(auVar8 >> 0xf, 0) & 1) << 1 |\n                     (SUB321(auVar8 >> 0x17, 0) & 1) << 2 | (SUB321(auVar8 >> 0x1f, 0) & 1) << 3 |\n                     (SUB321(auVar8 >> 0x27, 0) & 1) << 4 | (SUB321(auVar8 >> 0x2f, 0) & 1) << 5 |\n                     (SUB321(auVar8 >> 0x37, 0) & 1) << 6 | (SUB321(auVar8 >> 0x3f, 0) & 1) << 7 |\n                     (SUB321(auVar8 >> 0x47, 0) & 1) << 8 | (SUB321(auVar8 >> 0x4f, 0) & 1) << 9 |\n                     (SUB321(auVar8 >> 0x57, 0) & 1) << 10 | (SUB321(auVar8 >> 0x5f, 0) & 1) << 0xb |\n                     (SUB321(auVar8 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar8 >> 0x6f, 0) & 1) << 0xd |\n                     (SUB321(auVar8 >> 0x77, 0) & 1) << 0xe | SUB321(auVar8 >> 0x7f, 0) << 0xf |\n                     (SUB321(auVar8 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar8 >> 0x8f, 0) & 1) << 0x11 |\n                     (SUB321(auVar8 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar8 >> 0x9f, 0) & 1) << 0x13 |\n                     (SUB321(auVar8 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar8 >> 0xaf, 0) & 1) << 0x15 |\n                     (SUB321(auVar8 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar8 >> 0xbf, 0) << 0x17 |\n                     (SUB321(auVar8 >> 199, 0) & 1) << 0x18 | (SUB321(auVar8 >> 0xcf, 0) & 1) << 0x19 |\n                     (SUB321(auVar8 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar8 >> 0xdf, 0) & 1) << 0x1b |\n                     (SUB321(auVar8 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar8 >> 0xef, 0) & 1) << 0x1d |\n                     (SUB321(auVar8 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar8 >> 0xff, 0) << 0x1f) == 0xffffffff) {\ncode_r0x00402cc8:\n                    vzeroupper_avx();\n                    return;\n                }\n                pauStackX8 = *pauStackX8 + 1;\n            } while (pauStackX8 < *pauVar4 + uStackX16 + 1);\n        }\n        else {\n            pauVar4 = pauStackX8 + ((uStackX16 + 1) - uStackX32);\n            auVar6 = vmovdqu_avx(*(pauStackX24[-1] + uStackX32));\n            auVar8 = vmovdqu_avx(*pauStackX24);\n            do {\n                while( true ) {\n                    auVar9 = vmovdqu_avx(*pauStackX8);\n                    auVar9 = vpcmpeqb_avx2(auVar9, auVar8);\n                    if ((SUB321(auVar9 >> 7, 0) & 1 | (SUB321(auVar9 >> 0xf, 0) & 1) << 1 |\n                         (SUB321(auVar9 >> 0x17, 0) & 1) << 2 | (SUB321(auVar9 >> 0x1f, 0) & 1) << 3 |\n                         (SUB321(auVar9 >> 0x27, 0) & 1) << 4 | (SUB321(auVar9 >> 0x2f, 0) & 1) << 5 |\n                         (SUB321(auVar9 >> 0x37, 0) & 1) << 6 | (SUB321(auVar9 >> 0x3f, 0) & 1) << 7 |\n                         (SUB321(auVar9 >> 0x47, 0) & 1) << 8 | (SUB321(auVar9 >> 0x4f, 0) & 1) << 9 |\n                         (SUB321(auVar9 >> 0x57, 0) & 1) << 10 | (SUB321(auVar9 >> 0x5f, 0) & 1) << 0xb |\n                         (SUB321(auVar9 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar9 >> 0x6f, 0) & 1) << 0xd |\n                         (SUB321(auVar9 >> 0x77, 0) & 1) << 0xe | SUB321(auVar9 >> 0x7f, 0) << 0xf |\n                         (SUB321(auVar9 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar9 >> 0x8f, 0) & 1) << 0x11 |\n                         (SUB321(auVar9 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar9 >> 0x9f, 0) & 1) << 0x13 |\n                         (SUB321(auVar9 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar9 >> 0xaf, 0) & 1) << 0x15 |\n                         (SUB321(auVar9 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar9 >> 0xbf, 0) << 0x17 |\n                         (SUB321(auVar9 >> 199, 0) & 1) << 0x18 | (SUB321(auVar9 >> 0xcf, 0) & 1) << 0x19 |\n                         (SUB321(auVar9 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar9 >> 0xdf, 0) & 1) << 0x1b |\n                         (SUB321(auVar9 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar9 >> 0xef, 0) & 1) << 0x1d |\n                         (SUB321(auVar9 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar9 >> 0xff, 0) << 0x1f) == 0xffffffff)\n                    break;\n                    pauStackX8 = *pauStackX8 + 1;\n                    if (pauVar4 <= pauStackX8) goto code_r0x00402cbd;\n                }\n                auVar9 = vmovdqu_avx(*(pauStackX8[-1] + uStackX32));\n                auVar9 = vpcmpeqb_avx2(auVar9, auVar6);\n                if ((SUB321(auVar9 >> 7, 0) & 1 | (SUB321(auVar9 >> 0xf, 0) & 1) << 1 |\n                     (SUB321(auVar9 >> 0x17, 0) & 1) << 2 | (SUB321(auVar9 >> 0x1f, 0) & 1) << 3 |\n                     (SUB321(auVar9 >> 0x27, 0) & 1) << 4 | (SUB321(auVar9 >> 0x2f, 0) & 1) << 5 |\n                     (SUB321(auVar9 >> 0x37, 0) & 1) << 6 | (SUB321(auVar9 >> 0x3f, 0) & 1) << 7 |\n                     (SUB321(auVar9 >> 0x47, 0) & 1) << 8 | (SUB321(auVar9 >> 0x4f, 0) & 1) << 9 |\n                     (SUB321(auVar9 >> 0x57, 0) & 1) << 10 | (SUB321(auVar9 >> 0x5f, 0) & 1) << 0xb |\n                     (SUB321(auVar9 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar9 >> 0x6f, 0) & 1) << 0xd |\n                     (SUB321(auVar9 >> 0x77, 0) & 1) << 0xe | SUB321(auVar9 >> 0x7f, 0) << 0xf |\n                     (SUB321(auVar9 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar9 >> 0x8f, 0) & 1) << 0x11 |\n                     (SUB321(auVar9 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar9 >> 0x9f, 0) & 1) << 0x13 |\n                     (SUB321(auVar9 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar9 >> 0xaf, 0) & 1) << 0x15 |\n                     (SUB321(auVar9 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar9 >> 0xbf, 0) << 0x17 |\n                     (SUB321(auVar9 >> 199, 0) & 1) << 0x18 | (SUB321(auVar9 >> 0xcf, 0) & 1) << 0x19 |\n                     (SUB321(auVar9 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar9 >> 0xdf, 0) & 1) << 0x1b |\n                     (SUB321(auVar9 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar9 >> 0xef, 0) & 1) << 0x1d |\n                     (SUB321(auVar9 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar9 >> 0xff, 0) << 0x1f) == 0xffffffff)\n                goto code_r0x00402cc8;\n                pauStackX8 = *pauStackX8 + 1;\n            } while (pauStackX8 < pauVar4);\n        }\ncode_r0x00402cbd:\n        vzeroupper_avx();\n    }\n    return;\n}\n",
        "token_count": 6758
    },
    "00404180": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00404180(uint64_t arg1)\n\n{\n    ulong *puVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    char cVar4;\n    int64_t in_RAX;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uint8_t *puVar9;\n    uint64_t unaff_RBX;\n    int64_t iVar10;\n    uint64_t uVar11;\n    uint64_t unaff_RDI;\n    int64_t iVar12;\n    uint32_t uVar13;\n    uint8_t *puVar14;\n    \n    if (*(in_RAX + 8) <= arg1) {\n        return;\n    }\n    uVar7 = *(in_RAX + 8) - arg1;\n    if (uVar7 < unaff_RDI) {\n        unaff_RDI = uVar7;\n    }\n    if ((*(in_RAX + 0x17) & 0x40) == 0) {\n        fcn.00404520(arg1);\n        return;\n    }\n    if (*0x7ad098 == NULL) {\n        iVar8 = 0;\n        iVar10 = 0;\n    }\n    else {\n        iVar10 = **0x7ad098;\n        iVar8 = (*0x7ad098)[1];\n    }\n    for (iVar12 = 0; iVar12 < iVar8; iVar12 = iVar12 + 1) {\n        iVar2 = *(iVar10 + iVar12 * 8);\n        if ((*(iVar2 + 0xd0) <= unaff_RBX) && (unaff_RBX < *(iVar2 + 0xd8))) {\n            fcn.00404520(arg1 + (unaff_RBX - *(iVar2 + 0xd0)));\n            return;\n        }\n        if ((*(iVar2 + 0xe0) <= unaff_RBX) && (unaff_RBX < *(iVar2 + 0xe8))) {\n            fcn.00404520(arg1 + (unaff_RBX - *(iVar2 + 0xe0)));\n            return;\n        }\n    }\n    uVar7 = unaff_RBX + 0x800000000000 >> 0x2a;\n    if (uVar7 < 0x40) {\n        if (*(*(*(*(uVar7 * 8 + 0x7d3e10) + (unaff_RBX + 0x800000000000 >> 0x16 & 0xfffff) * 8) + 0x20000 +\n               (unaff_RBX >> 0xd & 0x1ff) * 8) + 99) == '\\x02') {\n            fcn.0045ba20();\n            return;\n        }\n        uVar7 = unaff_RBX + 0x800000000000 >> 0x2a;\n        if (uVar7 < 0x40) {\n            uVar11 = unaff_RBX + 0x800000000000 >> 0x16;\n            iVar10 = *(*(uVar7 * 8 + 0x7d3e10) + (uVar11 & 0xfffff) * 8);\n            if (iVar10 == 0) {\n                uVar11 = 0;\n                uVar13 = 0;\n                puVar14 = NULL;\n                puVar9 = NULL;\n            }\n            else {\n                puVar9 = (unaff_RBX >> 5 & 0x1ffff) + iVar10;\n                uVar13 = unaff_RBX >> 3 & 3;\n                puVar14 = iVar10 + 0x1ffff;\n            }\n            uVar5 = 0;\n            uVar7 = unaff_RBX;\n            do {\n                if (unaff_RDI + arg1 <= uVar5) {\n                    return;\n                }\n                if ((arg1 <= uVar5) && ((*puVar9 >> (uVar13 & 0x1f) & 1) != 0)) {\n                    puVar1 = unaff_RBX + uVar5;\n                    unaff_RBX = uVar7;\n                    cVar4 = fcn.00403d80(*puVar1);\n                    if (cVar4 != '\\0') {\n                        fcn.00433c80();\n                        break;\n                    }\n                    uVar11 = uVar11 & 0xffffffff;\n                    uVar7 = unaff_RBX;\n                }\n                if (uVar13 < 3) {\n                    uVar13 = uVar13 + 1;\n                }\n                else if (puVar14 == puVar9) {\n                    uVar6 = uVar11 & 0xffffffff;\n                    unaff_RBX = uVar7;\n                    puVar9 = fcn.00410aa0(uVar11 & 0xffffffff);\n                    uVar11 = uVar6;\n                    uVar7 = unaff_RBX;\n                }\n                else {\n                    puVar9 = puVar9 + 1;\n                    uVar13 = 0;\n                }\n                uVar5 = uVar5 + 8;\n            } while( true );\n        }\n        fcn.0045e260(0x40);\n    }\n    fcn.0045e260(0x40);\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 1179
    },
    "0040ae00": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040ae00(void)\n\n{\n    int64_t iVar1;\n    uint64_t *puVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x7985a4 == 0x10) {\n                if (*0x801b18 != 0) {\n                    if (*0x801b18 < 0x80001) {\n                        if (0xfff < *0x801b18) {\n                            if ((*0x801b18 & *0x801b18 - 1) == 0) {\n                                if ((*0x801b10 & *0x801b10 - 1) == 0) {\n                                    if (0x400000 < *0x801b10) {\n                                        *0x801b10 = 0;\n                                    }\n                                    if (*0x801b10 != 0) {\n                                        while (*0x801b10 != (1 << (*0x801b08 & 0x3f) & -(*0x801b08 < 0x40))) {\n                                            *0x801b08 = *0x801b08 + 1;\n                                        }\n                                    }\n                                    *(*0x20 + -0x28) = 0x40aeb2;\n                                    fcn.00423ac0();\n                                    *(*0x20 + -0x28) = 0x40aeb7;\n                                    *0x801ad0 = fcn.00413080();\n                                    for (iVar1 = 0; iVar1 < 3; iVar1 = iVar1 + 1) {\n                                    }\n                                    for (iVar1 = 0x7f; -1 < iVar1; iVar1 = iVar1 + -1) {\n                                        *(*0x20 + -0x10) = iVar1;\n                                        *(*0x20 + -0x28) = 0x40aee5;\n                                        puVar2 = fcn.00415d40();\n                                        iVar1 = *(*0x20 + -0x10);\n                                        *puVar2 = iVar1 << 0x28 | 0xc000000000;\n                                        puVar2[2] = *0x7d4030;\n                                        *0x7d4030 = puVar2;\n                                    }\n                                    return;\n                                }\n                                *(*0x20 + -0x28) = 0x40af5d;\n                                fcn.00435540();\n                                *(*0x20 + -0x28) = 0x40af6e;\n                                fcn.00435e40();\n                                *(*0x20 + -0x28) = 0x40af7a;\n                                fcn.00435b40();\n                                *(*0x20 + -0x28) = 0x40af8b;\n                                fcn.00435e40();\n                                *(*0x20 + -0x28) = 0x40af90;\n                                fcn.004355c0();\n                                *(*0x20 + -0x28) = 0x40afa5;\n                                fcn.00433c80();\n                            }\n                            *(*0x20 + -0x28) = 0x40afaa;\n                            fcn.00435540();\n                            *(*0x20 + -0x28) = 0x40afbb;\n                            fcn.00435e40();\n                            *(*0x20 + -0x28) = 0x40afc7;\n                            fcn.00435b40();\n                            *(*0x20 + -0x28) = 0x40afd8;\n                            fcn.00435e40();\n                            *(*0x20 + -0x28) = 0x40afdd;\n                            fcn.004355c0();\n                            *(*0x20 + -0x28) = 0x40afee;\n                            fcn.00433c80();\n                        }\n                        *(*0x20 + -0x28) = 0x40aff3;\n                        fcn.00435540();\n                        *(*0x20 + -0x28) = 0x40b005;\n                        fcn.00435e40();\n                        *(*0x20 + -0x28) = 0x40b011;\n                        fcn.00435b40();\n                        *(*0x20 + -0x28) = 0x40b025;\n                        fcn.00435e40();\n                        *(*0x20 + -0x28) = 0x40b02f;\n                        fcn.00435c40();\n                        *(*0x20 + -0x28) = 0x40b045;\n                        fcn.00435e40();\n                        *(*0x20 + -0x28) = 0x40b04a;\n                        fcn.004355c0();\n                        *(*0x20 + -0x28) = 0x40b05b;\n                        fcn.00433c80();\n                    }\n                    *(*0x20 + -0x28) = 0x40b065;\n                    fcn.00435540();\n                    *(*0x20 + -0x28) = 0x40b076;\n                    fcn.00435e40();\n                    *(*0x20 + -0x28) = 0x40b085;\n                    fcn.00435b40();\n                    *(*0x20 + -0x28) = 0x40b096;\n                    fcn.00435e40();\n                    *(*0x20 + -0x28) = 0x40b0a5;\n                    fcn.00435c40();\n                    *(*0x20 + -0x28) = 0x40b0b6;\n                    fcn.00435e40();\n                    *(*0x20 + -0x28) = 0x40b0bb;\n                    fcn.004355c0();\n                    *(*0x20 + -0x28) = 0x40b0cc;\n                    fcn.00433c80();\n                }\n                *(*0x20 + -0x28) = 0x40b0dd;\n                fcn.00433c80();\n            }\n            *(*0x20 + -0x28) = 0x40b0ee;\n            fcn.00433c80();\n        }\n        *(puVar3 + -8) = 0x40b0f4;\n        fcn.0045bb60();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1503
    },
    "0040d560": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0040d560(ulong arg1)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t *piVar6;\n    int64_t *unaff_RBX;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if ((unaff_RBX != NULL) && (*unaff_RBX != 0)) {\n        if ((*(unaff_RBX + 1) & 4) != 0) {\n            fcn.00433d80();\n        }\n        uVar3 = (***(in_RAX + 0x48))(arg1);\n        uVar7 = (1 << (*(unaff_RBX + 9) & 0x3f)) - 1;\n        iVar1 = unaff_RBX[3];\n        iVar5 = (uVar7 & uVar3) * *(in_RAX + 0x52) + unaff_RBX[2];\n        if (iVar1 != 0) {\n            if ((*(unaff_RBX + 1) & 8) == 0) {\n                uVar7 = uVar7 >> 1;\n            }\n            iVar8 = *(in_RAX + 0x52) * (uVar7 & uVar3);\n            if (2 < *(iVar1 + iVar8) - 2U) {\n                iVar5 = iVar1 + iVar8;\n            }\n        }\n        uVar4 = uVar3 >> 0x38;\n        uVar7 = uVar4;\n        if (uVar3 >> 0x38 < 5) {\n            uVar4 = (uVar3 >> 0x38) + 5;\n            uVar7 = uVar4;\n        }\n        do {\n            if (iVar5 == 0) {\n                return 0x802b20;\n            }\n            for (uVar3 = 0; uVar3 < 8; uVar3 = uVar3 + 1) {\n                if (uVar4 == *(uVar3 + iVar5)) {\n                    piVar6 = *(in_RAX + 0x50) * uVar3 + iVar5 + 8;\n                    if ((*(in_RAX + 0x54) & 1) != 0) {\n                        piVar6 = *piVar6;\n                    }\n                    cVar2 = (***(*(in_RAX + 0x30) + 0x18))(piVar6);\n                    if (cVar2 != '\\0') {\n                        piVar6 = iVar5 + *(in_RAX + 0x51) * uVar3 + *(in_RAX + 0x50) * 8 + 8;\n                        if ((*(in_RAX + 0x54) >> 1 & 1) != 0) {\n                            piVar6 = *piVar6;\n                        }\n                        return piVar6;\n                    }\n                    uVar4 = uVar7 & 0xff;\n                }\n                else if (*(uVar3 + iVar5) == '\\0') {\n                    return 0x802b20;\n                }\n            }\n            iVar5 = *(iVar5 + *(in_RAX + 0x52) + -8);\n        } while( true );\n    }\n    if ((*(in_RAX + 0x54) >> 4 & 1) != 0) {\n        (***(in_RAX + 0x48))();\n    }\n    return 0x802b20;\n}\n",
        "token_count": 841
    },
    "0040dfc0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040dfc0(uint64_t arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    ulong arg1_00;\n    int64_t **arg3;\n    ulong *arg3_00;\n    uint8_t uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    char *pcVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    ulong *arg1_01;\n    int64_t **arg1_02;\n    int64_t **ppiVar9;\n    int64_t unaff_R14;\n    bool bVar10;\n    uchar in_XMM15 [16];\n    \n    while (puVar5 = *0x20,  *0x20 + -0x30 < *(unaff_R14 + 0x10) || *0x20 + -0x30 == *(unaff_R14 + 0x10)) {\ncode_r0x0040e52a:\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x40e53e;\n        fcn.0045bb60();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    }\n    puVar5 = *0x20 + -0xb0;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    pcVar6 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x18);\n    uVar4 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar4 = *(unaff_RBX + 9) - 1;\n    }\n    iVar7 = 1 << (uVar4 & 0x3f);\n    arg2 = arg1;\n    if (2 < *pcVar6 - 2U) {\n        *(*0x20 + -0x48) = in_XMM15;\n        *(*0x20 + -0x38) = in_XMM15;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        iVar8 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x10);\n        *(*0x20 + -0x48) = iVar8;\n        *(*0x20 + -0x38) = iVar8 + 8;\n        *(*0x20 + -0x30) = iVar8 + *(in_RAX + 0x50) * 8 + 8;\n        if ((*(unaff_RBX + 8) & 8) == 0) {\n            iVar8 = (iVar7 + arg1) * *(in_RAX + 0x52) + *(unaff_RBX + 0x10);\n            *(*0x20 + -0x28) = iVar8;\n            *(*0x20 + -0x18) = iVar8 + 8;\n            *(*0x20 + -0x10) = iVar8 + *(in_RAX + 0x50) * 8 + 8;\n        }\n        *(*0x20 + -0x70) = arg1;\n        *(*0x20 + -0x91) = uVar4;\n        *(*0x20 + -0x90) = iVar7;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        arg1 = uVar4;\n        for (; pcVar6 != NULL; pcVar6 = *(pcVar6 + (*(in_RAX + 0x52) - 8))) {\n            *(*0x20 + -0x50) = pcVar6;\n            arg1_02 = pcVar6 + 8;\n            arg1_01 = pcVar6 + *(in_RAX + 0x50) * 8 + 8;\n            for (iVar8 = 0; iVar8 < 8; iVar8 = iVar8 + 1) {\n                uVar3 = pcVar6[iVar8];\n                if (1 < uVar3) {\n                    if (4 < uVar3) {\n                        ppiVar9 = arg1_02;\n                        if ((*(in_RAX + 0x54) & 1) != 0) {\n                            ppiVar9 = *arg1_02;\n                        }\n                        *(*0x20 + -0x88) = iVar8;\n                        *(*0x20 + -0x58) = arg1_01;\n                        *(*0x20 + -0x68) = ppiVar9;\n                        *(*0x20 + -0x60) = arg1_02;\n                        if ((*(unaff_RBX + 8) & 8) == 0) {\n                            *(*0x20 + -0x93) = uVar3;\n                            pcVar2 = **(in_RAX + 0x48);\n                            *(*0x20 + -0xb8) = 0x40e21d;\n                            uVar4 = (*pcVar2)();\n                            if ((*(*(*0x20 + 0x10) + 8) & 1) == 0) {\n                                uVar3 = 0;\n                            }\n                            else if ((*(*(*0x20 + 8) + 0x54) >> 2 & 1) == 0) {\n                                *(*0x20 + -0x80) = uVar4;\n                                pcVar2 = **(*(*(*0x20 + 8) + 0x30) + 0x18);\n                                *(*0x20 + -0xb8) = 0x40e262;\n                                uVar3 = (*pcVar2)();\n                                uVar3 = uVar3 ^ 1;\n                                uVar4 = *(*0x20 + -0x80);\n                            }\n                            else {\n                                uVar3 = 0;\n                            }\n                            if (uVar3 == 0) {\n                                bVar10 = (uVar4 >> (*(*0x20 + -0x91) & 0x3f) & 1) != 0;\n                                uVar3 = *(*0x20 + -0x93);\n                            }\n                            else {\n                                uVar3 = uVar4 >> 0x38;\n                                if (uVar3 < 5) {\n                                    uVar3 = uVar3 + 5;\n                                }\n                                bVar10 = *(*0x20 + -0x93) & 1;\n                            }\n                            arg1 = *(*0x20 + -0x91);\n                            arg2 = *(*0x20 + -0x70);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            iVar8 = *(*0x20 + -0x88);\n                            arg1_01 = *(*0x20 + -0x58);\n                            arg1_02 = *(*0x20 + -0x60);\n                            ppiVar9 = *(*0x20 + -0x68);\n                            in_RAX = *(*0x20 + 8);\n                            pcVar6 = *(*0x20 + -0x50);\n                        }\n                        else {\n                            bVar10 = false;\n                        }\n                        pcVar6[iVar8] = bVar10 + 2;\n                        if (bVar10 < 2) {\n                            iVar7 = bVar10 * 0x20;\n                            *(*0x20 + -0x78) = iVar7;\n                            if (*(*0x20 + iVar7 + -0x40) == 8) {\n                                *(*0x20 + -0x92) = uVar3;\n                                arg1_00 = *(*0x20 + iVar7 + -0x48);\n                                *(*0x20 + -0xb8) = 0x40e345;\n                                iVar8 = fcn.0040cda0(arg1_00);\n                                iVar7 = *(*0x20 + -0x78);\n                                *(*0x20 + iVar7 + -0x48) = iVar8;\n                                *(*0x20 + iVar7 + -0x40) = 0;\n                                *(*0x20 + iVar7 + -0x38) = iVar8 + 8;\n                                in_RAX = *(*0x20 + 8);\n                                *(*0x20 + iVar7 + -0x30) = iVar8 + *(in_RAX + 0x50) * 8 + 8;\n                                arg1 = *(*0x20 + -0x91);\n                                arg2 = *(*0x20 + -0x70);\n                                unaff_RBX = *(*0x20 + 0x10);\n                                pcVar6 = *(*0x20 + -0x50);\n                                iVar8 = *(*0x20 + -0x88);\n                                iVar7 = *(*0x20 + -0x78);\n                                arg1_01 = *(*0x20 + -0x58);\n                                arg1_02 = *(*0x20 + -0x60);\n                                uVar3 = *(*0x20 + -0x92);\n                                ppiVar9 = *(*0x20 + -0x68);\n                            }\n                            *(*(*0x20 + iVar7 + -0x48) + (*(*0x20 + iVar7 + -0x40) & 7)) = uVar3;\n                            if ((*(in_RAX + 0x54) & 1) == 0) {\n                                *(*0x20 + -0xb8) = 0x40e425;\n                                fcn.00410240(arg1_02);\n                                in_RAX = *(*0x20 + 8);\n                                arg1 = *(*0x20 + -0x91);\n                                arg2 = *(*0x20 + -0x70);\n                                unaff_RBX = *(*0x20 + 0x10);\n                                pcVar6 = *(*0x20 + -0x50);\n                                iVar8 = *(*0x20 + -0x88);\n                                iVar7 = *(*0x20 + -0x78);\n                                arg1_01 = *(*0x20 + -0x58);\n                                arg1_02 = *(*0x20 + -0x60);\n                            }\n                            else {\n                                arg3 = *(*0x20 + iVar7 + -0x38);\n                                if (*0x801c20 == 0) {\n                                    *arg3 = ppiVar9;\n                                }\n                                else {\n                                    *(*0x20 + -0xb8) = 0x40e405;\n                                    in_RAX = fcn.0045df00(arg1, arg2, arg3, iVar7);\n                                }\n                            }\n                            if ((*(in_RAX + 0x54) >> 1 & 1) == 0) {\n                                *(*0x20 + -0xb8) = 0x40e4af;\n                                fcn.00410240(arg1_01);\n                                in_RAX = *(*0x20 + 8);\n                                arg1 = *(*0x20 + -0x91);\n                                arg2 = *(*0x20 + -0x70);\n                                unaff_RBX = *(*0x20 + 0x10);\n                                pcVar6 = *(*0x20 + -0x50);\n                                iVar8 = *(*0x20 + -0x88);\n                                iVar7 = *(*0x20 + -0x78);\n                                arg1_01 = *(*0x20 + -0x58);\n                                arg1_02 = *(*0x20 + -0x60);\n                            }\n                            else {\n                                arg3_00 = *(*0x20 + iVar7 + -0x30);\n                                if (*0x801c20 == 0) {\n                                    *arg3_00 = *arg1_01;\n                                }\n                                else {\n                                    *(*0x20 + -0xb8) = 0x40e490;\n                                    in_RAX = fcn.0045df00(arg1, arg2, arg3_00, iVar7);\n                                }\n                            }\n                            *(*0x20 + iVar7 + -0x40) = *(*0x20 + iVar7 + -0x40) + 1;\n                            *(*0x20 + iVar7 + -0x38) = *(*0x20 + iVar7 + -0x38) + *(in_RAX + 0x50);\n                            *(*0x20 + iVar7 + -0x30) = *(*0x20 + iVar7 + -0x30) + *(in_RAX + 0x51);\n                            uVar4 = arg1 & 0xffffffff;\n                            iVar7 = *(*0x20 + -0x90);\n                            goto code_r0x0040e193;\n                        }\n                        arg1 = 2;\n                        *(*0x20 + -0xb8) = 0x40e518;\n                        fcn.0045e240(2);\n                    }\n                    unaff_RBX = 0xd;\n                    *(*0x20 + -0xb8) = 0x40e529;\n                    in_RAX = fcn.00433c80();\n                    goto code_r0x0040e52a;\n                }\n                pcVar6[iVar8] = '\\x04';\ncode_r0x0040e193:\n                arg1_02 = arg1_02 + *(in_RAX + 0x50);\n                arg1_01 = arg1_01 + *(in_RAX + 0x51);\n            }\n        }\n        if (((*(unaff_RBX + 8) & 2) == 0) && (*(*(in_RAX + 0x40) + 8) != 0)) {\n            uVar1 = *(in_RAX + 0x52);\n            iVar7 = *(unaff_RBX + 0x18);\n            *(*0x20 + -0xb8) = 0x40e174;\n            fcn.00410540(uVar1 * arg2 + iVar7 + 8);\n            in_RAX = *(*0x20 + 8);\n            arg2 = *(*0x20 + -0x70);\n            unaff_RBX = *(*0x20 + 0x10);\n            iVar7 = *(*0x20 + -0x90);\n        }\n    }\n    if (*(unaff_RBX + 0x20) == arg2) {\n        *(*0x20 + -0xb8) = 0x40e0f9;\n        fcn.0040e560(iVar7, in_RAX, uVar4);\n    }\n    return;\n}\n",
        "token_count": 3293
    },
    "0040e560": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040e560(uint64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uint32_t uVar3;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    iVar1 = *(in_RAX + 0x20);\n    *(in_RAX + 0x20) = iVar1 + 1;\n    arg2 = iVar1 + 0x401;\n    if (arg1 < arg2) {\n        arg2 = arg1;\n    }\n    while ((uVar2 = *(in_RAX + 0x20),  uVar2 != arg2 &&\n           (uVar3 = *(*(unaff_RBX + 0x52) * uVar2 + *(in_RAX + 0x18)) - 2,  arg3 = uVar3,  uVar3 < 3))) {\n        *(in_RAX + 0x20) = uVar2 + 1;\n    }\n    if (arg1 == uVar2) {\n        if (*0x801c20 == 0) {\n            *(in_RAX + 0x18) = 0;\n        }\n        else {\n            in_RAX = fcn.0045dea0(0, arg2, arg3, in_R9);\n        }\n        if (*(in_RAX + 0x28) != 0) {\n            if (*0x801c20 == 0) {\n                *(*(in_RAX + 0x28) + 8) = 0;\n            }\n            else {\n                in_RAX = fcn.0045dea0(0, arg2, arg3, in_R9);\n            }\n        }\n        *(in_RAX + 8) = *(in_RAX + 8) & 0xf7;\n    }\n    return;\n}\n",
        "token_count": 486
    },
    "0040e660": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0040e660(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int32_t *piVar4;\n    int64_t *unaff_RBX;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if ((unaff_RBX != NULL) && (*unaff_RBX != 0)) {\n        if ((*(unaff_RBX + 1) & 4) != 0) {\n            fcn.00433d80();\n        }\n        if (*(unaff_RBX + 9) == '\\0') {\n            iVar3 = unaff_RBX[2];\n        }\n        else {\n            uVar2 = (***(in_RAX + 0x48))();\n            uVar5 = (1 << (*(unaff_RBX + 9) & 0x3f)) - 1;\n            iVar1 = unaff_RBX[3];\n            iVar3 = (uVar5 & uVar2) * *(in_RAX + 0x52) + unaff_RBX[2];\n            if (iVar1 != 0) {\n                if ((*(unaff_RBX + 1) & 8) == 0) {\n                    uVar5 = uVar5 >> 1;\n                }\n                iVar6 = *(in_RAX + 0x52) * (uVar5 & uVar2);\n                if (2 < *(iVar1 + iVar6) - 2U) {\n                    iVar3 = iVar1 + iVar6;\n                }\n            }\n        }\n        do {\n            if (iVar3 == 0) {\n                return 0x802b20;\n            }\n            piVar4 = iVar3 + 8;\n            for (uVar5 = 0; uVar5 < 8; uVar5 = uVar5 + 1) {\n                if ((arg1 == *piVar4) && (1 < *(uVar5 + iVar3))) {\n                    return *(in_RAX + 0x51) * uVar5 + iVar3 + 0x28;\n                }\n                piVar4 = piVar4 + 1;\n            }\n            iVar3 = *(iVar3 + *(in_RAX + 0x52) + -8);\n        } while( true );\n    }\n    return 0x802b20;\n}\n",
        "token_count": 583
    },
    "0040e800": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0040e800(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int32_t *piVar4;\n    int64_t *unaff_RBX;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if ((unaff_RBX != NULL) && (*unaff_RBX != 0)) {\n        if ((*(unaff_RBX + 1) & 4) != 0) {\n            fcn.00433d80();\n        }\n        if (*(unaff_RBX + 9) == '\\0') {\n            iVar3 = unaff_RBX[2];\n        }\n        else {\n            uVar2 = (***(in_RAX + 0x48))();\n            uVar5 = (1 << (*(unaff_RBX + 9) & 0x3f)) - 1;\n            iVar1 = unaff_RBX[3];\n            iVar3 = (uVar5 & uVar2) * *(in_RAX + 0x52) + unaff_RBX[2];\n            if (iVar1 != 0) {\n                if ((*(unaff_RBX + 1) & 8) == 0) {\n                    uVar5 = uVar5 >> 1;\n                }\n                iVar6 = *(in_RAX + 0x52) * (uVar5 & uVar2);\n                if (2 < *(iVar1 + iVar6) - 2U) {\n                    iVar3 = iVar1 + iVar6;\n                }\n            }\n        }\n        do {\n            if (iVar3 == 0) {\n                return 0x802b20;\n            }\n            piVar4 = iVar3 + 8;\n            for (uVar5 = 0; uVar5 < 8; uVar5 = uVar5 + 1) {\n                if ((arg1 == *piVar4) && (1 < *(uVar5 + iVar3))) {\n                    return *(in_RAX + 0x51) * uVar5 + iVar3 + 0x28;\n                }\n                piVar4 = piVar4 + 1;\n            }\n            iVar3 = *(iVar3 + *(in_RAX + 0x52) + -8);\n        } while( true );\n    }\n    return 0x802b20;\n}\n",
        "token_count": 583
    },
    "0040ed80": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040ed80(uint64_t arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    ulong arg1_00;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    char *pcVar5;\n    uint32_t uVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    uint *puVar9;\n    char *arg1_01;\n    uint8_t uVar10;\n    int64_t unaff_R14;\n    bool bVar11;\n    uchar in_XMM15 [16];\n    \n    while (puVar4 = *0x20,  *0x20 + -0x20 < *(unaff_R14 + 0x10) || *0x20 + -0x20 == *(unaff_R14 + 0x10)) {\ncode_r0x0040f10b:\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x40f11f;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    }\n    puVar4 = *0x20 + -0xa0;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    pcVar5 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x18);\n    uVar6 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar6 = *(unaff_RBX + 9) - 1;\n    }\n    iVar7 = 1 << (uVar6 & 0x3f);\n    uVar3 = arg1;\n    if (2 < *pcVar5 - 2U) {\n        *(*0x20 + -0x48) = in_XMM15;\n        *(*0x20 + -0x38) = in_XMM15;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        iVar8 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x10);\n        *(*0x20 + -0x48) = iVar8;\n        *(*0x20 + -0x38) = iVar8 + 8;\n        *(*0x20 + -0x30) = iVar8 + 0x28;\n        if ((*(unaff_RBX + 8) & 8) == 0) {\n            iVar8 = (iVar7 + arg1) * *(in_RAX + 0x52) + *(unaff_RBX + 0x10);\n            *(*0x20 + -0x28) = iVar8;\n            *(*0x20 + -0x18) = iVar8 + 8;\n            *(*0x20 + -0x10) = iVar8 + 0x28;\n        }\n        *(*0x20 + -0x70) = arg1;\n        *(*0x20 + -0x81) = uVar6;\n        *(*0x20 + -0x80) = iVar7;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + 8) = in_RAX;\n        arg1 = uVar6;\n        for (; pcVar5 != NULL; pcVar5 = *(pcVar5 + (*(in_RAX + 0x52) - 8))) {\n            *(*0x20 + -0x50) = pcVar5;\n            puVar9 = pcVar5 + 8;\n            arg1_01 = pcVar5 + 0x28;\n            for (iVar8 = 0; iVar8 < 8; iVar8 = iVar8 + 1) {\n                uVar10 = pcVar5[iVar8];\n                if (1 < uVar10) {\n                    if (4 < uVar10) {\n                        *(*0x20 + -0x78) = iVar8;\n                        *(*0x20 + -0x82) = uVar10;\n                        *(*0x20 + -0x58) = arg1_01;\n                        *(*0x20 + -0x60) = puVar9;\n                        if ((*(unaff_RBX + 8) & 8) == 0) {\n                            pcVar2 = **(in_RAX + 0x48);\n                            *(*0x20 + -0xa8) = 0x40efa2;\n                            uVar3 = (*pcVar2)();\n                            bVar11 = (uVar3 >> (*(*0x20 + -0x81) & 0x3f) & 1) != 0;\n                            puVar9 = *(*0x20 + -0x60);\n                            arg1_01 = *(*0x20 + -0x58);\n                            iVar8 = *(*0x20 + -0x78);\n                            uVar10 = *(*0x20 + -0x82);\n                            pcVar5 = *(*0x20 + -0x50);\n                        }\n                        else {\n                            bVar11 = false;\n                        }\n                        pcVar5[iVar8] = bVar11 + 2;\n                        if (bVar11 < 2) {\n                            iVar7 = bVar11 * 0x20;\n                            *(*0x20 + -0x68) = iVar7;\n                            if (*(*0x20 + iVar7 + -0x40) == 8) {\n                                arg1_00 = *(*0x20 + iVar7 + -0x48);\n                                *(*0x20 + -0xa8) = 0x40f025;\n                                iVar8 = fcn.0040cda0(arg1_00);\n                                iVar7 = *(*0x20 + -0x68);\n                                *(*0x20 + iVar7 + -0x48) = iVar8;\n                                *(*0x20 + iVar7 + -0x40) = 0;\n                                *(*0x20 + iVar7 + -0x38) = iVar8 + 8;\n                                *(*0x20 + iVar7 + -0x30) = iVar8 + 0x28;\n                                puVar9 = *(*0x20 + -0x60);\n                                arg1_01 = *(*0x20 + -0x58);\n                                uVar10 = *(*0x20 + -0x82);\n                            }\n                            *(*(*0x20 + iVar7 + -0x48) + (*(*0x20 + iVar7 + -0x40) & 7)) = uVar10;\n                            **(*0x20 + iVar7 + -0x38) = *puVar9;\n                            *(*0x20 + -0xa8) = 0x40f096;\n                            fcn.00410240(arg1_01);\n                            iVar7 = *(*0x20 + -0x68);\n                            *(*0x20 + iVar7 + -0x40) = *(*0x20 + iVar7 + -0x40) + 1;\n                            *(*0x20 + iVar7 + -0x38) = *(*0x20 + iVar7 + -0x38) + 4;\n                            in_RAX = *(*0x20 + 8);\n                            *(*0x20 + iVar7 + -0x30) = *(*0x20 + iVar7 + -0x30) + *(in_RAX + 0x51);\n                            arg1 = *(*0x20 + -0x81);\n                            uVar3 = *(*0x20 + -0x70);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            pcVar5 = *(*0x20 + -0x50);\n                            iVar7 = *(*0x20 + -0x80);\n                            puVar9 = *(*0x20 + -0x60);\n                            arg1_01 = *(*0x20 + -0x58);\n                            iVar8 = *(*0x20 + -0x78);\n                            goto code_r0x0040ef29;\n                        }\n                        arg1 = 2;\n                        *(*0x20 + -0xa8) = 0x40f0f9;\n                        fcn.0045e240(2);\n                    }\n                    unaff_RBX = 0xd;\n                    *(*0x20 + -0xa8) = 0x40f10a;\n                    in_RAX = fcn.00433c80();\n                    goto code_r0x0040f10b;\n                }\n                pcVar5[iVar8] = '\\x04';\ncode_r0x0040ef29:\n                puVar9 = puVar9 + 1;\n                arg1_01 = arg1_01 + *(in_RAX + 0x51);\n            }\n        }\n        if (((*(unaff_RBX + 8) & 2) == 0) && (*(*(in_RAX + 0x40) + 8) != 0)) {\n            uVar1 = *(in_RAX + 0x52);\n            iVar7 = *(unaff_RBX + 0x18);\n            *(*0x20 + -0xa8) = 0x40ef0a;\n            fcn.00410540(uVar1 * uVar3 + iVar7 + 8);\n            in_RAX = *(*0x20 + 8);\n            uVar3 = *(*0x20 + -0x70);\n            unaff_RBX = *(*0x20 + 0x10);\n            iVar7 = *(*0x20 + -0x80);\n        }\n    }\n    if (*(unaff_RBX + 0x20) == uVar3) {\n        *(*0x20 + -0xa8) = 0x40ee99;\n        fcn.0040e560(iVar7, in_RAX, iVar7);\n    }\n    return;\n}\n",
        "token_count": 2270
    },
    "0040f140": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0040f140(int32_t *arg1)\n\n{\n    int64_t iVar1;\n    int32_t *piVar2;\n    char cVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int32_t **ppiVar7;\n    uint64_t uVar8;\n    int64_t *unaff_RBX;\n    int32_t *unaff_RDI;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    bool bVar10;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if ((unaff_RBX == NULL) || (*unaff_RBX == 0)) {\n        return 0x802b20;\n    }\n    if ((*(unaff_RBX + 1) & 4) != 0) {\n        fcn.00433d80();\n    }\n    if (*(unaff_RBX + 9) != '\\0') {\ncode_r0x0040f1ed:\n        uVar8 = (***(in_RAX + 0x48))();\n        uVar6 = (1 << (*(unaff_RBX + 9) & 0x3f)) - 1;\n        iVar1 = unaff_RBX[3];\n        iVar5 = (uVar6 & uVar8) * *(in_RAX + 0x52) + unaff_RBX[2];\n        if (iVar1 != 0) {\n            if ((*(unaff_RBX + 1) & 8) == 0) {\n                uVar6 = uVar6 >> 1;\n            }\n            iVar9 = *(in_RAX + 0x52) * (uVar6 & uVar8);\n            if (2 < *(iVar1 + iVar9) - 2U) {\n                iVar5 = iVar1 + iVar9;\n            }\n        }\n        uVar4 = uVar8 >> 0x38;\n        uVar6 = uVar4;\n        if (uVar8 >> 0x38 < 5) {\n            uVar4 = (uVar8 >> 0x38) + 5;\n            uVar6 = uVar4;\n        }\n        do {\n            if (iVar5 == 0) {\n                return 0x802b20;\n            }\n            ppiVar7 = iVar5 + 8;\n            for (uVar8 = 0; uVar8 < 8; uVar8 = uVar8 + 1) {\n                if ((ppiVar7[1] == unaff_RDI) && (*(uVar8 + iVar5) == uVar4)) {\n                    if ((arg1 == *ppiVar7) || (cVar3 = fcn.00402a00(unaff_RDI, ppiVar7),  cVar3 != '\\0')) {\n                        return iVar5 + uVar8 * *(in_RAX + 0x51) + 0x88;\n                    }\n                    uVar4 = uVar6 & 0xff;\n                }\n                ppiVar7 = ppiVar7 + 2;\n            }\n            iVar5 = *(iVar5 + *(in_RAX + 0x52) + -8);\n        } while( true );\n    }\n    iVar1 = unaff_RBX[2];\n    if (unaff_RDI < 0x20) {\n        ppiVar7 = iVar1 + 8;\n        uVar6 = 0;\n        do {\n            if (7 < uVar6) {\n                return 0x802b20;\n            }\n            if ((ppiVar7[1] == unaff_RDI) && (1 < *(uVar6 + iVar1))) {\n                if ((arg1 == *ppiVar7) || (cVar3 = fcn.00402a00(unaff_RDI, ppiVar7),  cVar3 != '\\0')) {\n                    return iVar1 + uVar6 * *(in_RAX + 0x51) + 0x88;\n                }\n            }\n            else if (*(uVar6 + iVar1) == '\\0') {\n                return 0x802b20;\n            }\n            uVar6 = uVar6 + 1;\n            ppiVar7 = ppiVar7 + 2;\n        } while( true );\n    }\n    ppiVar7 = iVar1 + 8;\n    uVar6 = 8;\n    for (uVar8 = 0; uVar8 < 8; uVar8 = uVar8 + 1) {\n        if ((ppiVar7[1] == unaff_RDI) && (1 < *(uVar8 + iVar1))) {\n            piVar2 = *ppiVar7;\n            if (arg1 == piVar2) {\n                return uVar8 * *(in_RAX + 0x51) + iVar1 + 0x88;\n            }\n            if (((*piVar2 == *arg1) && (*(piVar2 + unaff_RDI + -4) == *(arg1 + unaff_RDI + -4))) &&\n               (bVar10 = uVar6 != 8,  uVar6 = uVar8,  bVar10)) goto code_r0x0040f1ed;\n        }\n        else if (*(uVar8 + iVar1) == '\\0') break;\n        ppiVar7 = ppiVar7 + 2;\n    }\n    if ((uVar6 != 8) && (cVar3 = fcn.00402a00(unaff_RDI, uVar8),  cVar3 != '\\0')) {\n        return iVar1 + uVar6 * *(in_RAX + 0x51) + 0x88;\n    }\n    return 0x802b20;\n}\n",
        "token_count": 1299
    },
    "0040f540": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0040f540(int32_t *arg1)\n\n{\n    int64_t iVar1;\n    int32_t *piVar2;\n    char cVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int32_t **ppiVar7;\n    uint64_t uVar8;\n    int64_t *unaff_RBX;\n    int32_t *unaff_RDI;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    bool bVar10;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if ((unaff_RBX == NULL) || (*unaff_RBX == 0)) {\n        return 0x802b20;\n    }\n    if ((*(unaff_RBX + 1) & 4) != 0) {\n        fcn.00433d80();\n    }\n    if (*(unaff_RBX + 9) != '\\0') {\ncode_r0x0040f5ef:\n        uVar8 = (***(in_RAX + 0x48))();\n        uVar6 = (1 << (*(unaff_RBX + 9) & 0x3f)) - 1;\n        iVar1 = unaff_RBX[3];\n        iVar5 = (uVar6 & uVar8) * *(in_RAX + 0x52) + unaff_RBX[2];\n        if (iVar1 != 0) {\n            if ((*(unaff_RBX + 1) & 8) == 0) {\n                uVar6 = uVar6 >> 1;\n            }\n            iVar9 = *(in_RAX + 0x52) * (uVar6 & uVar8);\n            if (2 < *(iVar1 + iVar9) - 2U) {\n                iVar5 = iVar1 + iVar9;\n            }\n        }\n        uVar4 = uVar8 >> 0x38;\n        uVar6 = uVar4;\n        if (uVar8 >> 0x38 < 5) {\n            uVar4 = (uVar8 >> 0x38) + 5;\n            uVar6 = uVar4;\n        }\n        do {\n            if (iVar5 == 0) {\n                return 0x802b20;\n            }\n            ppiVar7 = iVar5 + 8;\n            for (uVar8 = 0; uVar8 < 8; uVar8 = uVar8 + 1) {\n                if ((ppiVar7[1] == unaff_RDI) && (*(uVar8 + iVar5) == uVar4)) {\n                    if ((arg1 == *ppiVar7) || (cVar3 = fcn.00402a00(unaff_RDI, ppiVar7),  cVar3 != '\\0')) {\n                        return iVar5 + uVar8 * *(in_RAX + 0x51) + 0x88;\n                    }\n                    uVar4 = uVar6 & 0xff;\n                }\n                ppiVar7 = ppiVar7 + 2;\n            }\n            iVar5 = *(iVar5 + *(in_RAX + 0x52) + -8);\n        } while( true );\n    }\n    iVar1 = unaff_RBX[2];\n    if (unaff_RDI < 0x20) {\n        ppiVar7 = iVar1 + 8;\n        uVar6 = 0;\n        do {\n            if (7 < uVar6) {\n                return 0x802b20;\n            }\n            if ((ppiVar7[1] == unaff_RDI) && (1 < *(uVar6 + iVar1))) {\n                if ((arg1 == *ppiVar7) || (cVar3 = fcn.00402a00(unaff_RDI, ppiVar7),  cVar3 != '\\0')) {\n                    return iVar1 + uVar6 * *(in_RAX + 0x51) + 0x88;\n                }\n            }\n            else if (*(uVar6 + iVar1) == '\\0') {\n                return 0x802b20;\n            }\n            uVar6 = uVar6 + 1;\n            ppiVar7 = ppiVar7 + 2;\n        } while( true );\n    }\n    ppiVar7 = iVar1 + 8;\n    uVar6 = 8;\n    for (uVar8 = 0; uVar8 < 8; uVar8 = uVar8 + 1) {\n        if ((ppiVar7[1] == unaff_RDI) && (1 < *(uVar8 + iVar1))) {\n            piVar2 = *ppiVar7;\n            if (arg1 == piVar2) {\n                return uVar8 * *(in_RAX + 0x51) + iVar1 + 0x88;\n            }\n            if (((*piVar2 == *arg1) && (*(piVar2 + unaff_RDI + -4) == *(arg1 + unaff_RDI + -4))) &&\n               (bVar10 = uVar6 != 8,  uVar6 = uVar8,  bVar10)) goto code_r0x0040f5ef;\n        }\n        else if (*(uVar8 + iVar1) == '\\0') break;\n        ppiVar7 = ppiVar7 + 2;\n    }\n    if ((uVar6 != 8) && (cVar3 = fcn.00402a00(unaff_RDI, uVar8),  cVar3 != '\\0')) {\n        return iVar1 + uVar6 * *(in_RAX + 0x51) + 0x88;\n    }\n    return 0x802b20;\n}\n",
        "token_count": 1299
    },
    "0040fe20": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040fe20(uint64_t arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    ulong uVar3;\n    ulong *arg4;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    char *pcVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    ulong *puVar9;\n    char *arg1_00;\n    uint8_t uVar10;\n    int64_t unaff_R14;\n    bool bVar11;\n    uchar in_XMM15 [16];\n    \n    while (puVar5 = *0x20,  *0x20 + -0x20 < *(unaff_R14 + 0x10) || *0x20 + -0x20 == *(unaff_R14 + 0x10)) {\ncode_r0x004101fb:\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x41020f;\n        fcn.0045bb60();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    }\n    puVar5 = *0x20 + -0xa0;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    pcVar6 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x18);\n    uVar4 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar4 = *(unaff_RBX + 9) - 1;\n    }\n    iVar7 = 1 << (uVar4 & 0x3f);\n    arg2 = arg1;\n    if (2 < *pcVar6 - 2U) {\n        *(*0x20 + -0x48) = in_XMM15;\n        *(*0x20 + -0x38) = in_XMM15;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        iVar8 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x10);\n        *(*0x20 + -0x48) = iVar8;\n        *(*0x20 + -0x38) = iVar8 + 8;\n        *(*0x20 + -0x30) = iVar8 + 0x88;\n        if ((*(unaff_RBX + 8) & 8) == 0) {\n            iVar8 = (iVar7 + arg1) * *(in_RAX + 0x52) + *(unaff_RBX + 0x10);\n            *(*0x20 + -0x28) = iVar8;\n            *(*0x20 + -0x18) = iVar8 + 8;\n            *(*0x20 + -0x10) = iVar8 + 0x88;\n        }\n        *(*0x20 + -0x70) = arg1;\n        *(*0x20 + -0x81) = uVar4;\n        *(*0x20 + -0x80) = iVar7;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        arg1 = uVar4;\n        for (; pcVar6 != NULL; pcVar6 = *(pcVar6 + (*(in_RAX + 0x52) - 8))) {\n            *(*0x20 + -0x50) = pcVar6;\n            puVar9 = pcVar6 + 8;\n            arg1_00 = pcVar6 + 0x88;\n            for (iVar8 = 0; iVar8 < 8; iVar8 = iVar8 + 1) {\n                uVar10 = pcVar6[iVar8];\n                if (1 < uVar10) {\n                    if (4 < uVar10) {\n                        *(*0x20 + -0x78) = iVar8;\n                        *(*0x20 + -0x82) = uVar10;\n                        *(*0x20 + -0x58) = arg1_00;\n                        *(*0x20 + -0x60) = puVar9;\n                        if ((*(unaff_RBX + 8) & 8) == 0) {\n                            pcVar2 = **(in_RAX + 0x48);\n                            *(*0x20 + -0xa8) = 0x410042;\n                            uVar4 = (*pcVar2)();\n                            arg1 = *(*0x20 + -0x81);\n                            bVar11 = (uVar4 >> (arg1 & 0x3f) & 1) != 0;\n                            arg2 = *(*0x20 + -0x70);\n                            iVar8 = *(*0x20 + -0x78);\n                            puVar9 = *(*0x20 + -0x60);\n                            arg1_00 = *(*0x20 + -0x58);\n                            uVar10 = *(*0x20 + -0x82);\n                            pcVar6 = *(*0x20 + -0x50);\n                        }\n                        else {\n                            bVar11 = false;\n                        }\n                        pcVar6[iVar8] = bVar11 + 2;\n                        if (bVar11 < 2) {\n                            iVar7 = bVar11 * 0x20;\n                            *(*0x20 + -0x68) = iVar7;\n                            if (*(*0x20 + iVar7 + -0x40) == 8) {\n                                uVar3 = *(*0x20 + iVar7 + -0x48);\n                                *(*0x20 + -0xa8) = 0x4100c6;\n                                iVar8 = fcn.0040cda0(uVar3);\n                                iVar7 = *(*0x20 + -0x68);\n                                *(*0x20 + iVar7 + -0x48) = iVar8;\n                                *(*0x20 + iVar7 + -0x40) = 0;\n                                *(*0x20 + iVar7 + -0x38) = iVar8 + 8;\n                                *(*0x20 + iVar7 + -0x30) = iVar8 + 0x88;\n                                arg1 = *(*0x20 + -0x81);\n                                arg2 = *(*0x20 + -0x70);\n                                puVar9 = *(*0x20 + -0x60);\n                                arg1_00 = *(*0x20 + -0x58);\n                                uVar10 = *(*0x20 + -0x82);\n                                iVar7 = *(*0x20 + -0x68);\n                            }\n                            *(*(*0x20 + iVar7 + -0x48) + (*(*0x20 + iVar7 + -0x40) & 7)) = uVar10;\n                            arg4 = *(*0x20 + iVar7 + -0x38);\n                            uVar3 = *puVar9;\n                            arg4[1] = puVar9[1];\n                            if (*0x801c20 == 0) {\n                                *arg4 = uVar3;\n                            }\n                            else {\n                                *(*0x20 + -0xa8) = 0x41016d;\n                                fcn.0045df20(arg1, arg2, uVar3, arg4);\n                            }\n                            *(*0x20 + -0xa8) = 0x410185;\n                            fcn.00410240(arg1_00);\n                            iVar7 = *(*0x20 + -0x68);\n                            *(*0x20 + iVar7 + -0x40) = *(*0x20 + iVar7 + -0x40) + 1;\n                            *(*0x20 + iVar7 + -0x38) = *(*0x20 + iVar7 + -0x38) + 0x10;\n                            in_RAX = *(*0x20 + 8);\n                            *(*0x20 + iVar7 + -0x30) = *(*0x20 + iVar7 + -0x30) + *(in_RAX + 0x51);\n                            arg1 = *(*0x20 + -0x81);\n                            arg2 = *(*0x20 + -0x70);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            pcVar6 = *(*0x20 + -0x50);\n                            iVar8 = *(*0x20 + -0x78);\n                            uVar4 = *(*0x20 + -0x81);\n                            iVar7 = *(*0x20 + -0x80);\n                            puVar9 = *(*0x20 + -0x60);\n                            arg1_00 = *(*0x20 + -0x58);\n                            goto code_r0x0040ffd3;\n                        }\n                        arg1 = 2;\n                        *(*0x20 + -0xa8) = 0x4101e9;\n                        fcn.0045e240(2);\n                    }\n                    unaff_RBX = 0xd;\n                    *(*0x20 + -0xa8) = 0x4101fa;\n                    in_RAX = fcn.00433c80();\n                    goto code_r0x004101fb;\n                }\n                pcVar6[iVar8] = '\\x04';\ncode_r0x0040ffd3:\n                puVar9 = puVar9 + 2;\n                arg1_00 = arg1_00 + *(in_RAX + 0x51);\n            }\n        }\n        if (((*(unaff_RBX + 8) & 2) == 0) && (*(*(in_RAX + 0x40) + 8) != 0)) {\n            uVar1 = *(in_RAX + 0x52);\n            iVar7 = *(unaff_RBX + 0x18);\n            *(*0x20 + -0xa8) = 0x40ffb4;\n            fcn.00410540(uVar1 * arg2 + iVar7 + 8);\n            in_RAX = *(*0x20 + 8);\n            arg2 = *(*0x20 + -0x70);\n            unaff_RBX = *(*0x20 + 0x10);\n            iVar7 = *(*0x20 + -0x80);\n        }\n    }\n    if (*(unaff_RBX + 0x20) == arg2) {\n        *(*0x20 + -0xa8) = 0x40ff3f;\n        fcn.0040e560(iVar7, in_RAX, uVar4);\n    }\n    return;\n}\n",
        "token_count": 2427
    },
    "00410cc0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00410cc0(uint64_t arg1)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong *puVar4;\n    code *pcVar5;\n    uint64_t in_RAX;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uint32_t uVar9;\n    uint64_t uVar10;\n    uint8_t *puVar11;\n    uint64_t unaff_RBX;\n    int64_t iVar12;\n    uint32_t uVar13;\n    uint8_t *puVar14;\n    int64_t iVar15;\n    int64_t unaff_R14;\n    \n    if (((in_RAX | unaff_RBX | arg1) & 7) == 0) {\n        if (*0x801c24 == '\\0') {\n            return;\n        }\n        uVar6 = in_RAX + 0x800000000000 >> 0x16;\n        uVar10 = in_RAX + 0x800000000000 >> 0x2a;\n        if (uVar10 < 0x40) {\n            iVar12 = *(uVar10 * 8 + 0x7d3e10);\n            if (iVar12 == 0) {\n                iVar12 = 0;\n            }\n            else {\n                iVar12 = *(iVar12 + (uVar6 & 0xfffff) * 8);\n                if (iVar12 == 0) {\n                    iVar12 = 0;\n                }\n                else {\n                    iVar12 = *(iVar12 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n                }\n            }\n        }\n        else {\n            iVar12 = 0;\n        }\n        if (iVar12 == 0) {\n            if (*0x7ad098 == NULL) {\n                iVar15 = 0;\n                iVar12 = 0;\n            }\n            else {\n                iVar12 = **0x7ad098;\n                iVar15 = (*0x7ad098)[1];\n            }\n            iVar7 = 0;\n            while( true ) {\n                if (iVar15 <= iVar7) {\n                    if (*0x7ad098 == NULL) {\n                        iVar15 = 0;\n                        iVar12 = 0;\n                    }\n                    else {\n                        iVar12 = **0x7ad098;\n                        iVar15 = (*0x7ad098)[1];\n                    }\n                    iVar7 = 0;\n                    while( true ) {\n                        if (iVar15 <= iVar7) {\n                            return;\n                        }\n                        iVar2 = *(iVar12 + iVar7 * 8);\n                        if ((*(iVar2 + 0xe0) <= in_RAX) &&\n                           (puVar1 = iVar2 + 0xe8,  in_RAX <= *puVar1 && *puVar1 != in_RAX)) break;\n                        iVar7 = iVar7 + 1;\n                    }\n                    fcn.00411340(arg1);\n                    return;\n                }\n                iVar2 = *(iVar12 + iVar7 * 8);\n                if ((*(iVar2 + 0xd0) <= in_RAX) && (puVar1 = iVar2 + 0xd8,  in_RAX <= *puVar1 && *puVar1 != in_RAX))\n                break;\n                iVar7 = iVar7 + 1;\n            }\n            fcn.00411340(arg1);\n            return;\n        }\n        if (((*(iVar12 + 99) != '\\x01') || (in_RAX <= *(iVar12 + 0x18) && *(iVar12 + 0x18) != in_RAX)) ||\n           (*(iVar12 + 0x70) < in_RAX || *(iVar12 + 0x70) == in_RAX)) {\n            return;\n        }\n        iVar12 = *(*(unaff_R14 + 0x30) + 0xa0);\n        if (uVar10 < 0x40) {\n            iVar15 = *(*(uVar10 * 8 + 0x7d3e10) + (uVar6 & 0xfffff) * 8);\n            if (iVar15 == 0) {\n                uVar6 = 0;\n                uVar13 = 0;\n                puVar11 = NULL;\n                puVar14 = NULL;\n            }\n            else {\n                puVar14 = iVar15 + (in_RAX >> 5 & 0x1ffff);\n                uVar13 = in_RAX >> 3 & 3;\n                puVar11 = iVar15 + 0x1ffff;\n            }\n            if (unaff_RBX == 0) {\n                for (uVar10 = 0; uVar10 < arg1; uVar10 = uVar10 + 8) {\n                    if ((*puVar14 >> (uVar13 & 0x1f) & 1) != 0) {\n                        puVar4 = *(iVar12 + 0x1268);\n                        *puVar4 = *(uVar10 + in_RAX);\n                        puVar4[1] = 0;\n                        iVar15 = *(iVar12 + 0x1268) + 0x10;\n                        *(iVar12 + 0x1268) = iVar15;\n                        if (*(iVar12 + 0x1270) == iVar15) {\n                            fcn.0042cee0();\n                            uVar6 = uVar6 & 0xffffffff;\n                        }\n                    }\n                    if (uVar13 < 3) {\n                        uVar13 = uVar13 + 1;\n                    }\n                    else if (puVar11 == puVar14) {\n                        uVar9 = uVar6 & 0xffffffff;\n                        puVar14 = fcn.00410aa0(uVar6 & 0xffffffff);\n                        uVar6 = uVar9;\n                    }\n                    else {\n                        puVar14 = puVar14 + 1;\n                        uVar13 = 0;\n                    }\n                }\n            }\n            else {\n                uVar10 = unaff_RBX;\n                for (uVar8 = 0; uVar8 < arg1; uVar8 = uVar8 + 8) {\n                    if ((*puVar14 >> (uVar13 & 0x1f) & 1) != 0) {\n                        puVar4 = *(iVar12 + 0x1268);\n                        uVar3 = *(uVar8 + unaff_RBX);\n                        *puVar4 = *(uVar8 + in_RAX);\n                        puVar4[1] = uVar3;\n                        iVar15 = *(iVar12 + 0x1268) + 0x10;\n                        *(iVar12 + 0x1268) = iVar15;\n                        if (*(iVar12 + 0x1270) == iVar15) {\n                            unaff_RBX = uVar10;\n                            fcn.0042cee0();\n                            uVar6 = uVar6 & 0xffffffff;\n                            uVar10 = unaff_RBX;\n                        }\n                    }\n                    if (uVar13 < 3) {\n                        uVar13 = uVar13 + 1;\n                    }\n                    else if (puVar11 == puVar14) {\n                        uVar9 = uVar6 & 0xffffffff;\n                        unaff_RBX = uVar10;\n                        puVar14 = fcn.00410aa0(uVar6 & 0xffffffff);\n                        uVar6 = uVar9;\n                        uVar10 = unaff_RBX;\n                    }\n                    else {\n                        puVar14 = puVar14 + 1;\n                        uVar13 = 0;\n                    }\n                }\n            }\n            return;\n        }\n        fcn.0045e260(0x40);\n    }\n    fcn.00433c80();\n    pcVar5 = swi(3);\n    (*pcVar5)();\n    return;\n}\n",
        "token_count": 1712
    },
    "00411140": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00411140(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    code *pcVar4;\n    uint64_t in_RAX;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    uint64_t unaff_RBX;\n    uint64_t uVar7;\n    uint8_t *puVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    uint32_t uVar11;\n    uint8_t *puVar12;\n    int64_t unaff_R14;\n    \n    if (((unaff_RBX | in_RAX | arg1) & 7) == 0) {\n        if (*0x801c24 == '\\0') {\n            return;\n        }\n        iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n        uVar7 = in_RAX + 0x800000000000 >> 0x2a;\n        if (uVar7 < 0x40) {\n            uVar9 = in_RAX + 0x800000000000 >> 0x16;\n            iVar10 = *(*(uVar7 * 8 + 0x7d3e10) + (uVar9 & 0xfffff) * 8);\n            if (iVar10 == 0) {\n                uVar9 = 0;\n                uVar11 = 0;\n                puVar8 = NULL;\n                puVar12 = NULL;\n            }\n            else {\n                puVar12 = iVar10 + (in_RAX >> 5 & 0x1ffff);\n                uVar11 = in_RAX >> 3 & 3;\n                puVar8 = iVar10 + 0x1ffff;\n            }\n            uVar7 = unaff_RBX;\n            for (uVar5 = 0; uVar5 < arg1; uVar5 = uVar5 + 8) {\n                if ((*puVar12 >> (uVar11 & 0x1f) & 1) != 0) {\n                    puVar2 = *(iVar1 + 0x1268);\n                    uVar3 = *(uVar5 + unaff_RBX);\n                    *puVar2 = 0;\n                    puVar2[1] = uVar3;\n                    iVar10 = *(iVar1 + 0x1268) + 0x10;\n                    *(iVar1 + 0x1268) = iVar10;\n                    if (*(iVar1 + 0x1270) == iVar10) {\n                        unaff_RBX = uVar7;\n                        fcn.0042cee0();\n                        uVar9 = uVar9 & 0xffffffff;\n                        uVar7 = unaff_RBX;\n                    }\n                }\n                if (uVar11 < 3) {\n                    uVar11 = uVar11 + 1;\n                }\n                else if (puVar8 == puVar12) {\n                    uVar6 = uVar9 & 0xffffffff;\n                    unaff_RBX = uVar7;\n                    puVar12 = fcn.00410aa0(uVar9 & 0xffffffff);\n                    uVar9 = uVar6;\n                    uVar7 = unaff_RBX;\n                }\n                else {\n                    puVar12 = puVar12 + 1;\n                    uVar11 = 0;\n                }\n            }\n            return;\n        }\n        fcn.0045e260(0x40);\n    }\n    fcn.00433c80();\n    pcVar4 = swi(3);\n    (*pcVar4)();\n    return;\n}\n",
        "token_count": 784
    },
    "00411880": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00411880(uint64_t arg1)\n\n{\n    int32_t iVar1;\n    uint8_t *in_RAX;\n    uint8_t *puVar2;\n    ulong uVar3;\n    int8_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint8_t *puVar8;\n    uint64_t *unaff_RDI;\n    int64_t iVar9;\n    uint32_t uVar10;\n    uint64_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar15;\n    uint8_t uVar16;\n    uint8_t uVar17;\n    uint64_t uVar18;\n    int64_t iVar19;\n    uint64_t uVar20;\n    uint64_t uVar21;\n    uint8_t *puVar22;\n    uint8_t *puVar23;\n    int64_t unaff_R14;\n    uint8_t *puVar24;\n    uint64_t uVar25;\n    bool bVar26;\n    uint32_t uVar14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xa0 && *0x20 + -0xa0 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x120;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX == 8) {\n                return;\n            }\n            uVar5 = in_RAX + 0x800000000000 >> 0x2a;\n            if (uVar5 < 0x40) {\n                puVar23 = in_RAX + 0x800000000000 >> 0x16;\n                uVar18 = puVar23 & 0xfffff;\n                iVar19 = *(*(uVar5 * 8 + 0x7d3e10) + uVar18 * 8);\n                if (iVar19 == 0) {\n                    puVar2 = NULL;\n                    uVar11 = 0;\n                    puVar24 = NULL;\n                    puVar22 = NULL;\n                }\n                else {\n                    puVar2 = iVar19 + (in_RAX >> 5 & 0x1ffff);\n                    uVar11 = in_RAX >> 3 & 3;\n                    puVar24 = iVar19 + 0x1ffff;\n                    puVar22 = puVar23;\n                }\n                puVar8 = unaff_RDI[4];\n                uVar10 = uVar11;\n                if (unaff_RBX == 0x10) {\n                    iVar4 = uVar11;\n                    if (*unaff_RDI != 8) {\n                        *puVar2 = ~(0x33 << iVar4 & -(uVar10 < 0x20)) & *puVar2 |\n                                  (*puVar8 & 3 |\n                                  (-(unaff_RDI[1] >> 3 < 0x20) & 0x10 << (unaff_RDI[1] >> 3 & 0x1f)) - 1 & 0xf0) <<\n                                  iVar4 & -(uVar10 < 0x20);\n                        return;\n                    }\n                    *puVar2 = *puVar2 | 0x33 << iVar4 & -(uVar10 < 0x20);\n                    return;\n                }\n                if (unaff_RBX == 0x18) {\n                    uVar12 = *puVar8;\n                    if (*unaff_RDI == 8) {\n                        uVar12 = 7;\n                    }\n                    uVar12 = (uVar12 & 7) << 4 | uVar12 & 7;\n                    uVar14 = (uVar12 & 0x40) >> 1;\n                    uVar13 = uVar14 | uVar12;\n                    uVar15 = uVar13 | 0x10;\n                    uVar17 = uVar15;\n                    if (uVar10 < 2) {\n                        if (uVar10 == 0) {\n                            *puVar2 = *puVar2 & 0x88 | uVar13 | 0x10;\n                        }\n                        else {\n                            *puVar2 = uVar15 << 1 | *puVar2 & 0x11;\n                        }\n                    }\n                    else {\n                        *(*0x20 + -0xdb) = uVar17;\n                        if (uVar10 == 2) {\n                            *puVar2 = (uVar14 | uVar12 & 0x33 | 0x10) << 2 | *puVar2 & 0x33;\n                            if (puVar2 == puVar24) {\n                                *(*0x20 + -0x128) = 0x411b74;\n                                puVar2 = fcn.00410aa0(puVar22 & 0xffffffff);\n                                uVar17 = *(*0x20 + -0xdb);\n                            }\n                            else {\n                                puVar2 = puVar2 + 1;\n                            }\n                            *puVar2 = uVar17 >> 2 & 0x11 | *puVar2 & 0xee;\n                        }\n                        else if (uVar10 == 3) {\n                            *puVar2 = *puVar2 & 0x77 | (uVar12 & 0x11 | 0x10) << 3;\n                            if (puVar2 == puVar24) {\n                                *(*0x20 + -0x128) = 0x411bcb;\n                                puVar2 = fcn.00410aa0(puVar22 & 0xffffffff);\n                                uVar17 = *(*0x20 + -0xdb);\n                            }\n                            else {\n                                puVar2 = puVar2 + 1;\n                            }\n                            *puVar2 = uVar17 >> 1 & 0x33 | *puVar2 & 0xcc;\n                        }\n                    }\n                    return;\n                }\n                *(*0x20 + -0xd0) = uVar18;\n                *(*0x20 + -0x30) = puVar2;\n                uVar18 = puVar22 & 0xffffffff;\n                uVar6 = in_RAX + unaff_RBX + 0x7fffffffffff >> 0x16;\n                puVar2 = in_RAX;\n                if (uVar18 == uVar6) {\n                    puVar2 = *(*0x20 + -0x30);\n                }\n                *(*0x20 + -0x50) = in_RAX;\n                *(*0x20 + -0x58) = uVar6;\n                *(*0x20 + -0x60) = uVar18;\n                *(*0x20 + -0x68) = uVar5;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x70) = puVar23;\n                if ((*(unaff_RDI + 0x17) & 0x40) == 0) {\n                    *(*0x20 + -0x38) = puVar2;\n                    uVar5 = *unaff_RDI;\n                    puVar22 = puVar8;\n                    if (arg1 <= uVar5) {\n                        uVar3 = 0;\n                        *(*0x20 + -0x28) = 0;\n                        *(*0x20 + -0xc0) = 0;\n                        *(*0x20 + -0xa8) = 0;\n                        goto code_r0x00411f05;\n                    }\n                    *(*0x20 + -0x78) = uVar5;\n                    uVar25 = unaff_RDI[1] >> 3;\n                    if (uVar25 < 0x3a) {\n                        *(*0x20 + 0x18) = arg1;\n                        *(*0x20 + -0xb0) = 0;\n                        *(*0x20 + -0x98) = 0;\n                        puVar23 = puVar8;\n                        while (uVar21 = *(*0x20 + -0xb0),  uVar21 < uVar25) {\n                            uVar17 = *puVar23;\n                            puVar23 = puVar23 + 1;\n                            uVar18 = *(*0x20 + -0x60);\n                            *(*0x20 + -0xb0) = uVar21 + 8;\n                            *(*0x20 + -0x98) = *(*0x20 + -0x98) | uVar17 << (uVar21 & 0x3f) & -(uVar21 < 0x40);\n                            arg1 = *(*0x20 + 0x18);\n                            uVar6 = *(*0x20 + -0x58);\n                        }\n                        uVar5 = uVar5 >> 3;\n                        if (uVar5 * 2 < 0x3a) {\n                            uVar25 = *(*0x20 + -0x98);\n                            for (uVar6 = uVar5; uVar6 < 0x41; uVar6 = uVar6 * 2) {\n                                *(*0x20 + -0xc0) = uVar25;\n                                uVar25 = uVar25 << (uVar6 & 0x3f) & -(uVar6 < 0x40) | *(*0x20 + -0xc0);\n                                arg1 = *(*0x20 + 0x18);\n                            }\n                            if (uVar5 == '\\0') {\n                                *(*0x20 + -0x128) = 0x41246a;\n                                fcn.00432100();\n                                goto code_r0x0041246a;\n                            }\n                            *(*0x20 + -0xda) = uVar5 & 0xff;\n                            uVar5 = uVar5 * (0x39 / *(*0x20 + -0xda));\n                            uVar25 = uVar25 & (1 << (uVar5 & 0x3f) & -(uVar5 < 0x40)) - 1;\n                            uVar6 = *(*0x20 + -0x58);\n                            puVar2 = *(*0x20 + -0x38);\n                        }\n                        else {\n                            uVar25 = *(*0x20 + -0x98);\n                        }\n                        *(*0x20 + -0xb8) = uVar5;\n                        puVar23 = NULL;\n                        *(*0x20 + -0xc0) = uVar25;\n                        puVar22 = NULL;\n                    }\n                    else {\n                        uVar25 = uVar25 + 7 >> 3;\n                        uVar5 = (uVar5 >> 3) + (uVar25 - 1) * -8;\n                        puVar23 = puVar8 + (uVar25 - 1);\n                        *(*0x20 + -0xb8) = 0;\n                        *(*0x20 + -0xc0) = 0;\n                    }\n                    break;\n                }\n                uVar5 = unaff_RDI[1];\n                uVar18 = *unaff_RDI;\n                *(*0x20 + -0x128) = 0x411ab0;\n                fcn.004124c0(puVar22 & 0xffffffff, uVar5, uVar18, arg1);\n                bVar26 = *(*0x20 + -0x60) == *(*0x20 + -0x58);\n                goto code_r0x00411c97;\n            }\ncode_r0x0041246a:\n            arg1 = 0x40;\n            *(*0x20 + -0x128) = 0x412477;\n            in_RAX = fcn.0045e260(0x40);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + 0x20) = unaff_RDI;\n        *(puVar7 + -8) = 0x412491;\n        fcn.0045bb60();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_RDI = *(puVar7 + 0x20);\n        *0x20 = puVar7;\n    } while( true );\ncode_r0x004122ea:\n    *(*0x20 + -0x28) = puVar23;\n    *(*0x20 + -0xa8) = uVar5;\n    puVar23 = *(*0x20 + -0x70);\n    uVar5 = *(*0x20 + -0x78);\n    uVar3 = *(*0x20 + -0xb8);\ncode_r0x00411f05:\n    if (puVar22 == NULL) {\n        puVar24 = *(*0x20 + -0xc0);\n        *(*0x20 + -0xb8) = uVar3;\n        puVar23 = *(*0x20 + -0x70);\n    }\n    else {\n        puVar24 = *puVar22;\n        puVar22 = puVar22 + 1;\n        *(*0x20 + -0x90) = puVar2;\n        *(*0x20 + -0xb8) = 8;\n        puVar2 = *(*0x20 + -0x90);\n    }\n    if (arg1 == uVar5) {\n        uVar5 = unaff_RDI[1];\ncode_r0x00411f84:\n        uVar5 = uVar5 >> 3;\n        if (uVar5 != 0) {\n            if (uVar11 == 0) {\n                uVar17 = puVar24 & 0xf | 0xf0;\n                if (4 < uVar5) {\n                    *puVar2 = uVar17;\n                    iVar1 = 4;\n                    iVar19 = *(*0x20 + -0xb8) + -4;\n                    uVar25 = 4;\n                    goto code_r0x00412049;\n                }\n                puVar23 = puVar2;\n                uVar11 = 4;\n                goto code_r0x004121d6;\n            }\n            if (uVar11 == 2) goto code_r0x00411fd9;\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x128) = 0x41227e;\n            fcn.00433c80();\n        }\n        *(*0x20 + -0x128) = 0x412286;\n        uVar3 = fcn.004569c0();\n        *(*0x20 + -0x18) = uVar3;\n        *(*0x20 + -0x88) = unaff_RBX;\n        *(*0x20 + -0x128) = 0x41229b;\n        fcn.00435540();\n        *(*0x20 + -0x128) = 0x4122ac;\n        fcn.00435e40();\n        *(*0x20 + -0x128) = 0x4122c5;\n        fcn.00435e40();\n        *(*0x20 + -0x128) = 0x4122ca;\n        fcn.004357a0();\n        *(*0x20 + -0x128) = 0x4122cf;\n        fcn.004355c0();\n        unaff_RBX = 0x2d;\n        *(*0x20 + -0x128) = 0x4122e5;\n        fcn.00433c80();\n    }\n    else if (uVar5 != 0) {\n        uVar5 = uVar5 * (arg1 / uVar5 - 1) + unaff_RDI[1];\n        puVar2 = *(*0x20 + -0x38);\n        arg1 = uVar6;\n        goto code_r0x00411f84;\n    }\n    puVar8 = puVar22;\n    *(*0x20 + -0x128) = 0x4122ea;\n    puVar2 = fcn.00432100();\n    puVar22 = puVar24;\n    goto code_r0x004122ea;\ncode_r0x00411fd9:\n    uVar17 = (puVar24 & 3) << 2;\n    uVar16 = uVar17 | 0x40;\n    if (1 < uVar5) {\n        uVar16 = uVar17 | 0xc0;\n    }\n    *puVar2 = uVar16 | *puVar2 & 0x33;\n    puVar23 = puVar2 + 1;\n    if (uVar5 < 3) {\n        uVar17 = 0;\n        uVar11 = 6;\n    }\n    else {\n        iVar1 = 2;\n        iVar19 = *(*0x20 + -0xb8) + -2;\n        uVar25 = 2;\ncode_r0x00412049:\n        puVar23 = puVar2 + 1;\n        uVar11 = puVar24 >> iVar1;\n        iVar9 = *(*0x20 + -0xc0);\n        uVar21 = iVar19 - 4;\n        while( true ) {\n            *(*0x20 + -0x98) = uVar11;\n            uVar17 = uVar11 & 0xf | 0xf0;\n            uVar11 = uVar25 + 4;\n            if (uVar5 <= uVar25 + 4) break;\n            *puVar23 = uVar17;\n            uVar11 = *(*0x20 + -0x98) >> 4;\n            uVar17 = uVar21;\n            if (puVar22 == *(*0x20 + -0x28)) {\n                if (puVar22 == NULL) {\n                    if (uVar21 < 8) {\n                        uVar11 = uVar11 | iVar9 << (uVar17 & 0x3f);\n                        uVar21 = uVar21 + *(*0x20 + -0xa8);\n                        iVar9 = *(*0x20 + -0xc0);\n                    }\n                    uVar20 = uVar21 - 8;\n                }\n                else {\n                    uVar11 = uVar11 | -(uVar21 < 0x40) & *puVar22 << (uVar17 & 0x3f);\n                    uVar20 = uVar21 + *(*0x20 + -0xa8);\n                    if (uVar20 < 8) {\n                        uVar11 = uVar11 | *puVar8 << (uVar20 & 0x3f);\n                        puVar22 = puVar8 + 1;\n                    }\n                    else {\n                        uVar20 = (uVar21 + *(*0x20 + -0xa8)) - 8;\n                        puVar22 = puVar8;\n                    }\n                }\n            }\n            else if (uVar21 < 8) {\n                uVar11 = uVar11 | *puVar22 << (uVar17 & 0x3f);\n                uVar20 = uVar21;\n                puVar22 = puVar22 + 1;\n            }\n            else {\n                uVar20 = uVar21 - 8;\n            }\n            *(*0x20 + -0x98) = uVar11;\n            uVar17 = uVar11 & 0xf | 0xf0;\n            uVar25 = uVar25 + 8;\n            if (uVar5 <= uVar25) {\n                puVar23 = puVar23 + 1;\n                uVar6 = *(*0x20 + -0x58);\n                uVar11 = uVar25;\n                break;\n            }\n            puVar23[1] = uVar17;\n            uVar11 = *(*0x20 + -0x98) >> 4;\n            puVar23 = puVar23 + 2;\n            uVar6 = *(*0x20 + -0x58);\n            uVar21 = uVar20;\n        }\n    }\ncode_r0x004121d6:\n    if (uVar5 < uVar11) {\n        uVar5 = -((uVar11 - uVar5) + -4);\n        uVar16 = (1 << (uVar5 & 0x3f) & -(uVar5 < 0x40)) - 1;\n        uVar17 = uVar17 & (uVar16 * '\\x10' | uVar16);\n    }\n    uVar5 = unaff_RBX >> 3;\n    if (uVar11 <= uVar5) {\n        *puVar23 = uVar17;\n        while( true ) {\n            puVar23 = puVar23 + 1;\n            uVar11 = uVar11 + 4;\n            if (uVar5 < uVar11) break;\n            *puVar23 = 0;\n        }\n        uVar17 = 0;\n    }\n    if (uVar11 == uVar5 + 2) {\n        *puVar23 = uVar17 | *puVar23 & 0xcc;\n        bVar26 = uVar18 == uVar6;\n    }\n    else {\n        bVar26 = uVar18 == uVar6;\n    }\ncode_r0x00411c97:\n    if (!bVar26) {\n        iVar19 = *(*(*(*0x20 + -0x68) * 8 + 0x7d3e10) + *(*0x20 + -0xd0) * 8);\n        if (iVar19 == 0) {\n            puVar2 = *(*0x20 + -0x50);\n            puVar23 = NULL;\n            puVar22 = NULL;\n            uVar5 = 0;\n            uVar10 = 0;\n        }\n        else {\n            puVar2 = *(*0x20 + -0x50);\n            puVar23 = iVar19 + (puVar2 >> 5 & 0x1ffff);\n            uVar10 = puVar2 >> 3 & 3;\n            puVar22 = iVar19 + 0x1ffff;\n            uVar5 = *(*0x20 + -0x70);\n        }\n        uVar18 = *(*0x20 + 0x10) >> 3;\n        puVar24 = puVar2;\n        if (uVar10 == 2) {\n            *puVar23 = *puVar2 | *puVar23 & 0x33;\n            if (puVar22 == puVar23) {\n                *(*0x20 + -0x10) = puVar2;\n                *(*0x20 + -0x80) = uVar18;\n                uVar10 = 3;\n                *(*0x20 + -0x128) = 0x411d66;\n                puVar23 = fcn.00410aa0(uVar5);\n                uVar18 = *(*0x20 + -0x80);\n                puVar24 = *(*0x20 + -0x50);\n                puVar2 = *(*0x20 + -0x10);\n            }\n            else {\n                puVar23 = puVar23 + 1;\n                uVar10 = 0;\n            }\n            uVar18 = uVar18 - 2;\n            puVar2 = puVar2 + 1;\n        }\n        while (*(*0x20 + -0x48) = puVar2,  3 < uVar18) {\n            *(*0x20 + -0x40) = puVar23;\n            *(*0x20 + -0xa0) = uVar18;\n            *(*0x20 + -0x128) = 0x411dd1;\n            uVar3 = fcn.00410c20(uVar5);\n            *(*0x20 + -0x18) = uVar3;\n            *(*0x20 + -0xd4) = uVar10;\n            *(*0x20 + -0xd8) = uVar5;\n            *(*0x20 + -0x20) = puVar22;\n            *(*0x20 + -200) = uVar18 & 0xfffffffffffffffc;\n            *(*0x20 + -0x58) = uVar18 >> 2;\n            *(*0x20 + -0x128) = 0x411e12;\n            fcn.0045ebc0(uVar18 >> 2);\n            puVar2 = *(*0x20 + -0x48) + *(*0x20 + -0x58);\n            puVar23 = *(*0x20 + -0x18);\n            uVar10 = *(*0x20 + -0xd4);\n            puVar22 = *(*0x20 + -0x20);\n            uVar5 = *(*0x20 + -0xd8);\n            puVar24 = *(*0x20 + -0x50);\n            uVar18 = *(*0x20 + -0xa0) - *(*0x20 + -200);\n        }\n        if (uVar18 == 2) {\n            *puVar23 = *puVar2 | *puVar23 & 0xcc;\n            if (uVar10 < 3) {\n                uVar10 = uVar10 + 1;\n            }\n            else if (puVar22 == puVar23) {\n                *(*0x20 + -0x128) = 0x411ea5;\n                puVar23 = fcn.00410aa0(uVar5);\n                puVar24 = *(*0x20 + -0x50);\n            }\n            else {\n                puVar23 = puVar23 + 1;\n                uVar10 = 0;\n            }\n            if ((2 < uVar10) && (puVar23 == puVar22)) {\n                *(*0x20 + -0x128) = 0x411ed7;\n                fcn.00410aa0(uVar5);\n                puVar24 = *(*0x20 + -0x50);\n            }\n        }\n        *(*0x20 + -0x128) = 0x411efb;\n        fcn.0045e8c0(puVar24);\n    }\n    return;\n}\n",
        "token_count": 5770
    },
    "00417160": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004176aa)\n// WARNING: Removing unreachable block (ram,0x004171a5)\n// WARNING: Removing unreachable block (ram,0x004171c3)\n// WARNING: Removing unreachable block (ram,0x004176d5)\n\nvoid fcn.00417160(ulong param_1, uint64_t param_2, uint64_t param_3, ulong param_4)\n\n{\n    int32_t *piVar1;\n    int64_t *piVar2;\n    char cVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    ulong uVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    uint64_t uVar10;\n    int64_t iVar11;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint uVar16;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x130 && *0x20 + -0x130 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x1b0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *0x8019ec = 2;\n            *0x801c24 = 1;\n            *0x801c20 = *0x801c20 & 0xffffff00 | 1;\n            *0x7ae100 = *0x802388;\n            *(*0x20 + -0x1b8) = 0x4171e5;\n            fcn.0045fb60();\n            uVar13 = 0;\n            uVar14 = 0;\n            uVar15 = 0;\n            uVar16 = 0;\n            iVar8 = **(in_GS_OFFSET + 0x28);\n            iVar11 = *(iVar8 + 0x30);\n            uVar5 = *(*0x20 + -0x1b0);\n            *(*0x20 + -0x178) = uVar5;\n            piVar1 = iVar11 + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            iVar11 = *(iVar8 + 0x30);\n            *(*0x20 + -0x30) = iVar11;\n            *(iVar11 + 0xd0) = 5;\n            *(*0x20 + -0x10) = iVar11 + 200;\n            if (*0x801c20 == 0) {\n                *(iVar11 + 200) = 0x4af02b;\n                uVar10 = param_3;\n            }\n            else {\n                *(*0x20 + -0x1b8) = 0x417265;\n                fcn.0045df00(uVar5, param_2, param_3, param_4);\n                uVar10 = param_3;\n            }\n            *(*0x20 + -0x20) = iVar8;\n            *(*(iVar8 + 0x30) + 0xf9) = 2;\n            *(*0x20 + -0x28) = *(*(iVar8 + 0x30) + 0x90);\n            *(*0x20 + -0x1b8) = 0x41729a;\n            fcn.00438120(4);\n            *(*(*0x20 + -0x28) + 0xb0) = 6;\n            *(*0x20 + -0xf8) = CONCAT412(uVar16, CONCAT48(uVar15, CONCAT44(uVar14, uVar13)));\n            *(*0x20 + -0xf8) = 0x417e60;\n            *(*0x20 + -0xf0) = *(*0x20 + -0x178);\n            *(*0x20 + -0x1b0) = *0x20 + -0xf8;\n            *(*0x20 + -0x1b8) = 0x4172df;\n            fcn.0045ba20();\n            *(*0x20 + -0x1b0) = 0x7195b8;\n            *(*0x20 + -0x1b8) = 0x417305;\n            fcn.0045ba20();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            param_2 = *(*(*0x20 + -0x20) + 0x30);\n            *(param_2 + 0xf9) = 0;\n            *(*0x20 + -0x1b8) = 0x417345;\n            fcn.00438120(2);\n            if (*0x7b3b90 != '\\0') {\n                *(*0x20 + -0x1b8) = 0x417367;\n                fcn.00450c80(0);\n            }\n            iVar8 = *(*0x20 + -0x30);\n            *(iVar8 + 0xd0) = 0;\n            if (*0x801c20 == 0) {\n                *(iVar8 + 200) = 0;\n            }\n            else {\n                param_2 = 0;\n                *(*0x20 + -0x1b8) = 0x41739f;\n                fcn.0045dec0(iVar8, 0, uVar10, param_4);\n            }\n            param_3 = uVar10;\n            if (*0x8019ec == 0) {\n                *0x805530 = *0x802430;\n                *(*0x20 + -0x1b0) = 0x719598;\n                *(*0x20 + -0x1b8) = 0x4173ca;\n                fcn.0045ba20();\n                *(*0x20 + -0x1b8) = 0x4173e5;\n                fcn.0045fb60();\n                *(*0x20 + -0x180) = *(*0x20 + -0x1b0);\n                *(*0x20 + -0x1b8) = 0x417407;\n                fcn.0045fbc0(iVar8, param_2);\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                iVar8 = *(*0x20 + -0x1b0);\n                iVar4 = *(*0x20 + -0x1a8);\n                param_2 = *(*0x20 + -0x180);\n                *0x7ae0e8 = *0x7ae0e8 + (param_2 - *0x7ae0f0);\n                param_3 = param_2 - *0x7ae0f0;\n                *0x7ae0e0 = param_2;\n                if (param_3 < 0) {\n                    LOCK();\n                    *0x806bc0 = *0x806bc0 + 1;\n                    param_3 = uVar10;\ncode_r0x00417514:\n                    *0x804508 = iVar8 * 1000000000 + iVar4;\n                    *0x805528 = param_2;\n                    *((*0x805518 & 0xff) * 8 + 0x804518) = *0x7ae0e8;\n                    *((*0x805518 & 0xff) * 8 + 0x804d18) = iVar8 * 1000000000 + iVar4;\n                    *0x804510 = *0x804510 + *0x7ae0e8;\n                    iVar8 = (*0x7ae0d0 - *0x7ae0c8) * *0x7ae0bc;\n                    *(*0x20 + -0x170) = iVar8;\n                    iVar11 = (*0x7ae0e0 - *0x7ae0d8) * *0x7ae0bc;\n                    *(*0x20 + -0x158) = iVar11;\n                    *0x7ae080 = *0x8023e8 + *0x8023e0 + *0x8023f0 + iVar8 + iVar11 + *0x7ae080;\n                    *0x805520 = *0x7ae080 / ((param_2 - *0x7ae620) * *0x8019f0 + *0x7ae628);\n                    *0x7d3d90 = 0;\n                    *0x7adbb4 = 0;\n                    if (*0x7ae078 != '\\0') {\n                        *0x80551c = *0x80551c + 1;\n                    }\n                    *(*0x20 + -0x1b8) = 0x417645;\n                    fcn.0040a460();\n                    *0x805518 = *0x805518 + 1;\n                    *(*0x20 + -0x1b8) = 0x417657;\n                    fcn.0043c1a0();\n                    *(*0x20 + -0x1b8) = 0x417665;\n                    fcn.0040a680();\n                    *(*0x20 + -0x1b8) = 0x417676;\n                    fcn.00419260();\n                    *0x8019f4 = ((*0x8019f4 >> 1) + (((*0x8019f4 >> 1) + 1) / 0x6000000) * -0x6000000 + 1) * 2;\n                    param_2 = *0x8019f4;\n                    LOCK();\n                    if ((*0x7adbbc & 0x80000000) == 0) {\n                        *0x7adbbc = *0x7adbbc + 1;\n                        LOCK();\n                        *(*0x20 + -0x184) = 0;\n                        *(*0x20 + -0x188) = *0x7d3db8;\n                        *(*0x20 + -0x1b0) = 0x7195c0;\n                        *(*0x20 + -0x1b8) = 0x41770f;\n                        fcn.0045ba20();\n                        *(*0x20 + -0x1b8) = 0x417728;\n                        fcn.0042abc0();\n                        *(*0x20 + -0x1b8) = 0x41772d;\n                        fcn.00423520();\n                        *(*0x20 + -0x1b0) = 0x719580;\n                        *(*0x20 + -0x1b8) = 0x41773d;\n                        fcn.0045ba20();\n                        *(*0x20 + -0x1b0) = 0x7195d0;\n                        *(*0x20 + -0x1b8) = 0x417765;\n                        fcn.0045ba20();\n                        uVar13 = 0;\n                        uVar14 = 0;\n                        uVar15 = 0;\n                        uVar16 = 0;\n                        unaff_R14 = **(in_GS_OFFSET + 0x28);\n                        *(*0x20 + -0x1b8) = 0x417792;\n                        fcn.00420f80();\n                        if (*0x801e7c < 1) {\ncode_r0x004177f4:\n                            *(*0x20 + -0x1b8) = 0x417805;\n                            fcn.00445a60(0);\n                            *(*0x20 + -0x1b8) = 0x417816;\n                            fcn.00445a60(0);\n                            iVar4 = *(*(*0x20 + -0x30) + 0xd8);\n                            *(*(*0x20 + -0x30) + 0xd8) = iVar4 + -1;\n                            if ((iVar4 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                            }\n                            return;\n                        }\n                        *(*0x20 + -0x100) = *0x732810 * *0x805520;\n                        *(*0x20 + -0xe8) = CONCAT412(uVar16, CONCAT48(uVar15, CONCAT44(uVar14, uVar13)));\n                        *(*0x20 + -0xe0) = CONCAT412(uVar16, CONCAT48(uVar15, CONCAT44(uVar14, uVar13)));\n                        *(*0x20 + -0x1b8) = 0x4177cb;\n                        fcn.00435540();\n                        param_2 = (*0x7ae0c8 - *0x801b58) / 1000000;\n                        uVar10 = 0x17;\n                        while ((cVar3 = param_2,  9 < param_2 || (0x13 < uVar10))) {\n                            param_2 = param_2 / 10;\n                            if (0x17 < uVar10) goto code_r0x00417e06;\n                            *(*0x20 + (uVar10 - 0xe8)) = cVar3 + param_2 * -10 + '0';\n                            bVar12 = uVar10 == 0x15;\n                            uVar10 = uVar10 - 1;\n                            if (bVar12) {\n                                *(*0x20 + -0xd4) = 0x2e;\n                                uVar10 = 0x13;\n                            }\n                        }\n                        if (uVar10 < 0x18) {\n                            *(*0x20 + (uVar10 - 0xe8)) = cVar3 + '0';\n                            *(*0x20 + -0x108) = *0x805518;\n                            *(*0x20 + -0x1b8) = 0x41790c;\n                            uVar5 = fcn.0044b220(-(uVar10 - 0x18));\n                            *(*0x20 + -0x18) = uVar5;\n                            *(*0x20 + -0x110) = *0x20 + ((uVar10 & uVar10 - 0x18 >> 0x3f) - 0xe8);\n                            *(*0x20 + -0x1b8) = 0x417925;\n                            fcn.00435540();\n                            *(*0x20 + -0x1b8) = 0x417936;\n                            fcn.00435e40();\n                            *(*0x20 + -0x1b8) = 0x417945;\n                            fcn.00435b40();\n                            *(*0x20 + -0x1b8) = 0x417956;\n                            fcn.00435e40();\n                            *(*0x20 + -0x1b8) = 0x41796b;\n                            fcn.00435e40();\n                            *(*0x20 + -0x1b8) = 0x41797c;\n                            fcn.00435e40();\n                            *(*0x20 + -0x1b8) = 0x41798f;\n                            fcn.00435c40(*(*0x20 + -0x100));\n                            *(*0x20 + -0x1b8) = 0x4179a5;\n                            fcn.00435e40();\n                            *(*0x20 + -0x1b8) = 0x4179aa;\n                            fcn.004355c0();\n                            *(*0x20 + -0xd0) = CONCAT412(uVar16, CONCAT48(uVar15, CONCAT44(uVar14, uVar13)));\n                            *(*0x20 + -200) = CONCAT412(uVar16, CONCAT48(uVar15, CONCAT44(uVar14, uVar13)));\n                            *(*0x20 + -0xd0) = *0x7ae0d0;\n                            *(*0x20 + -200) = *0x7ae0d8;\n                            *(*0x20 + -0xc0) = *0x7ae0e0;\n                            iVar11 = 0;\n                            iVar8 = *0x7ae0c8;\n                            while (iVar11 < 3) {\n                                *(*0x20 + -0x148) = iVar11;\n                                *(*0x20 + -0x168) = *(*0x20 + iVar11 * 8 + -0xd0);\n                                if (iVar11 != 0) {\n                                    *(*0x20 + -0x118) = iVar8;\n                                    *(*0x20 + -0x1b8) = 0x417a96;\n                                    fcn.00435540();\n                                    *(*0x20 + -0x1b8) = 0x417aa7;\n                                    fcn.00435e40();\n                                    *(*0x20 + -0x1b8) = 0x417aac;\n                                    fcn.004355c0();\n                                }\n                                *(*0x20 + -0x1b8) = 0x417a0c;\n                                uVar5 = fcn.00418f80(0x18);\n                                *(*0x20 + -0x1b8) = 0x417a1f;\n                                uVar6 = fcn.0044b220(0x18);\n                                *(*0x20 + -0x18) = uVar6;\n                                *(*0x20 + -0x110) = uVar5;\n                                *(*0x20 + -0x1b8) = 0x417a34;\n                                fcn.00435540();\n                                *(*0x20 + -0x1b8) = 0x417a49;\n                                fcn.00435e40();\n                                *(*0x20 + -0x1b8) = 0x417a4e;\n                                fcn.004355c0();\n                                iVar8 = *(*0x20 + -0x168);\n                                iVar11 = *(*0x20 + -0x148) + 1;\n                            }\n                            *(*0x20 + -0x1b8) = 0x417ac5;\n                            fcn.00435540();\n                            *(*0x20 + -0x1b8) = 0x417ad6;\n                            fcn.00435e40();\n                            *(*0x20 + -0x1b8) = 0x417adb;\n                            fcn.004355c0();\n                            *(*0x20 + -0x58) = CONCAT412(uVar16, CONCAT48(uVar15, CONCAT44(uVar14, uVar13)));\n                            *(*0x20 + -0x50) = CONCAT412(uVar16, CONCAT48(uVar15, CONCAT44(uVar14, uVar13)));\n                            *(*0x20 + -0x40) = CONCAT412(uVar16, CONCAT48(uVar15, CONCAT44(uVar14, uVar13)));\n                            *(*0x20 + -0x58) = *(*0x20 + -0x170);\n                            *(*0x20 + -0x50) = *0x8023e0;\n                            *(*0x20 + -0x48) = *0x8023e8 + *0x8023f0;\n                            *(*0x20 + -0x40) = *0x8023f8;\n                            *(*0x20 + -0x38) = *(*0x20 + -0x158);\n                            iVar8 = 0;\n                            while (iVar8 < 5) {\n                                *(*0x20 + -0x150) = iVar8;\n                                *(*0x20 + -0x160) = *(*0x20 + iVar8 * 8 + -0x58);\n                                if ((iVar8 == 2) || (iVar8 == 3)) {\n                                    *(*0x20 + -0x1b8) = 0x417bd6;\n                                    fcn.00435540();\n                                    *(*0x20 + -0x1b8) = 0x417be7;\n                                    fcn.00435e40();\n                                    *(*0x20 + -0x1b8) = 0x417bec;\n                                    fcn.004355c0();\n                                }\n                                else if (iVar8 != 0) {\n                                    *(*0x20 + -0x1b8) = 0x417c05;\n                                    fcn.00435540();\n                                    *(*0x20 + -0x1b8) = 0x417c16;\n                                    fcn.00435e40();\n                                    *(*0x20 + -0x1b8) = 0x417c1b;\n                                    fcn.004355c0();\n                                }\n                                *(*0x20 + -0x1b8) = 0x417b5e;\n                                uVar5 = fcn.00418f80(0x18);\n                                *(*0x20 + -0x1b8) = 0x417b71;\n                                uVar6 = fcn.0044b220(0x18);\n                                *(*0x20 + -0x18) = uVar6;\n                                *(*0x20 + -0x110) = uVar5;\n                                *(*0x20 + -0x1b8) = 0x417b86;\n                                fcn.00435540();\n                                *(*0x20 + -0x1b8) = 0x417b9b;\n                                fcn.00435e40();\n                                *(*0x20 + -0x1b8) = 0x417ba5;\n                                fcn.004355c0();\n                                iVar8 = *(*0x20 + -0x150) + 1;\n                            }\n                            *(*0x20 + -0x108) = *0x8023a8;\n                            *(*0x20 + -0x120) = *0x7ae0f8;\n                            *(*0x20 + -0x128) = *0x7ae100;\n                            *(*0x20 + -0x130) = *0x7ae108;\n                            *(*0x20 + -0x138) = *0x802380;\n                            *(*0x20 + -0x140) = *0x8023b0;\n                            *(*0x20 + -0x118) = *0x7ae0c0;\n                            *(*0x20 + -0x1b8) = 0x417c92;\n                            fcn.00435540();\n                            *(*0x20 + -0x1b8) = 0x417ca5;\n                            fcn.00435e40();\n                            *(*0x20 + -0x1b8) = 0x417cb6;\n                            fcn.00435b40();\n                            *(*0x20 + -0x1b8) = 0x417cc7;\n                            fcn.00435e40();\n                            *(*0x20 + -0x1b8) = 0x417cd8;\n                            fcn.00435b40();\n                            *(*0x20 + -0x1b8) = 0x417ce9;\n                            fcn.00435e40();\n                            *(*0x20 + -0x1b8) = 0x417cfa;\n                            fcn.00435b40();\n                            *(*0x20 + -0x1b8) = 0x417d0b;\n                            fcn.00435e40();\n                            *(*0x20 + -0x1b8) = 0x417d19;\n                            fcn.00435b40();\n                            *(*0x20 + -0x1b8) = 0x417d2a;\n                            fcn.00435e40();\n                            *(*0x20 + -0x1b8) = 0x417d3b;\n                            fcn.00435b40();\n                            *(*0x20 + -0x1b8) = 0x417d4c;\n                            fcn.00435e40();\n                            *(*0x20 + -0x1b8) = 0x417d5a;\n                            fcn.00435b40();\n                            *(*0x20 + -0x1b8) = 0x417d6b;\n                            fcn.00435e40();\n                            *(*0x20 + -0x1b8) = 0x417d78;\n                            fcn.00435c40();\n                            *(*0x20 + -0x1b8) = 0x417d89;\n                            fcn.00435e40();\n                            *(*0x20 + -0x1b8) = 0x417d8e;\n                            fcn.004355c0();\n                            if (*0x7ae078 != '\\0') {\n                                *(*0x20 + -0x1b8) = 0x417d9c;\n                                fcn.00435540();\n                                *(*0x20 + -0x1b8) = 0x417dad;\n                                fcn.00435e40();\n                                *(*0x20 + -0x1b8) = 0x417db2;\n                                fcn.004355c0();\n                            }\n                            *(*0x20 + -0x1b8) = 0x417db7;\n                            fcn.00435540();\n                            *(*0x20 + -0x1b8) = 0x417dbc;\n                            fcn.004357a0();\n                            *(*0x20 + -0x1b8) = 0x417dc5;\n                            fcn.004355c0();\n                            cVar3 = *(*(unaff_R14 + 0x30) + 0xe7);\n                            *(*(unaff_R14 + 0x30) + 0xe7) = cVar3 + -1;\n                            if (cVar3 == '\\x01') {\n                                *(*0x20 + -0x1b8) = 0x417df7;\n                                fcn.0040a680();\n                            }\n                            goto code_r0x004177f4;\n                        }\n                        *(*0x20 + -0x1b8) = 0x417e06;\n                        fcn.0045e240(0x18);\ncode_r0x00417e06:\n                        *(*0x20 + -0x1b8) = 0x417e13;\n                        fcn.0045e240(0x18);\n                    }\n                    *(*0x20 + -0x1b8) = 0x417e25;\n                    fcn.00433c80();\n                }\n                else {\n                    if (param_3 < 0x10) {\n                        iVar11 = 0;\n                    }\n                    else {\n                        iVar7 = 0x3f;\n                        if (param_3 != 0) {\n                            for (; param_3 >> iVar7 == 0; iVar7 = iVar7 + -1) {\n                            }\n                        }\n                        if (param_3 == 0) {\n                            iVar7 = -1;\n                        }\n                        iVar11 = iVar7 + -3;\n                        if (iVar11 * 0x10 < 0x2d0) {\n                            iVar7 = param_3 >> ((iVar7 - 4U | ~-(iVar7 - 4U < 0x40)) & 0x3f);\n                            param_3 = iVar7 + (((iVar7 >> 0x3f) >> 0x3c) + iVar7 >> 4) * -0x10;\n                        }\n                        else {\n                            iVar11 = 0x2c;\n                            param_3 = 0xf;\n                        }\n                    }\n                    uVar10 = iVar11 * 0x10 + param_3;\n                    if (uVar10 < 0x2d0) {\n                        piVar2 = uVar10 * 8 + 0x805540;\n                        LOCK();\n                        *piVar2 = *piVar2 + 1;\n                        goto code_r0x00417514;\n                    }\n                }\n                *(*0x20 + -0x1b8) = 0x417e32;\n                fcn.0045e260(0x2d0);\n            }\n            *(*0x20 + -0x1b8) = 0x417e45;\n            fcn.00433c80();\n        }\n        *(puVar9 + -8) = 0x417e4b;\n        fcn.0045bb60();\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 6301
    },
    "004193a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004193a0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    int64_t arg1;\n    int64_t unaff_RBX;\n    int64_t iVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t iVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    \ncode_r0x004193a0:\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0x60;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        iVar5 = *(in_RAX + 0x40);\n        if (unaff_RBX < iVar5) {\n            return;\n        }\n        *(in_RAX + 0x40) = unaff_RBX;\n        arg1 = *(in_RAX + 0x28);\n        iVar5 = (unaff_RBX - iVar5) * *(in_RAX + 0x4c);\n        if (arg1 != 0) {\n            LOCK();\n            *(in_RAX + 0x28) = *(in_RAX + 0x28) - arg1;\n        }\n        iVar7 = *(in_RAX + 0x38);\n        if (iVar7 != 0) {\n            LOCK();\n            *(in_RAX + 0x38) = *(in_RAX + 0x38) - iVar7;\n        }\n        if (*(in_RAX + 0x50) != '\\0') {\ncode_r0x00419466:\n            if (*(in_RAX + 0x20) != '\\0') {\n                arg1 = arg1 + iVar5 * *0x7327b0;\n            }\n            *(*0x20 + -0x68) = 0x419496;\n            fcn.004195a0(arg1);\n            return;\n        }\n        *(*0x20 + -0x48) = iVar5;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x20) = unaff_RBX;\n        piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n        *piVar1 = *piVar1 + 1;\n        *(*0x20 + -0x10) = *0x7ada40;\n        *(*0x20 + -0x28) = *0x7ada48;\n        iVar9 = *(unaff_R14 + 0x30);\n        *(*0x20 + -0x18) = iVar9;\n        iVar4 = 0;\n        iVar8 = *0x7ada48;\n        do {\n            if (iVar8 <= iVar4) {\n                iVar2 = *(iVar9 + 0xd8);\n                *(iVar9 + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                goto code_r0x00419466;\n            }\n            *(*0x20 + -0x30) = iVar4;\n            *(*0x20 + -0x40) = iVar7;\n            *(*0x20 + -0x38) = arg1;\n            *(*0x20 + -0x68) = 0x4194ef;\n            uVar3 = fcn.00419780();\n            if (uVar3 < 2) {\n                if (uVar3 != 0) goto code_r0x0041951f;\n                arg1 = *(*0x20 + -0x38);\n                iVar7 = *(*0x20 + -0x40);\n            }\n            else if ((uVar3 == 2) || (uVar3 == 3)) {\n                arg1 = *(*0x20 + -0x38) + unaff_RBX;\n                iVar7 = *(*0x20 + -0x40);\n            }\n            else {\n                if (uVar3 != 4) goto code_r0x00419568;\ncode_r0x0041951f:\n                iVar7 = *(*0x20 + -0x40) + unaff_RBX;\n                arg1 = *(*0x20 + -0x38);\n            }\n            iVar4 = *(*0x20 + -0x30) + 1;\n            in_RAX = *(*0x20 + 8);\n            iVar5 = *(*0x20 + -0x48);\n            unaff_RBX = *(*0x20 + -0x20);\n            iVar8 = *(*0x20 + -0x28);\n            iVar9 = *(*0x20 + -0x18);\n        } while( true );\n    }\n    goto code_r0x0041957a;\ncode_r0x00419568:\n    unaff_RBX = 0x20;\n    *(*0x20 + -0x68) = 0x419579;\n    in_RAX = fcn.00433c80();\ncode_r0x0041957a:\n    *(puVar6 + 8) = in_RAX;\n    *(puVar6 + 0x10) = unaff_RBX;\n    *(puVar6 + -8) = 0x419589;\n    fcn.0045bb60();\n    in_RAX = *(puVar6 + 8);\n    unaff_RBX = *(puVar6 + 0x10);\n    *0x20 = puVar6;\n    goto code_r0x004193a0;\n}\n",
        "token_count": 1303
    },
    "00419820": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00419820(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    bool bVar2;\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint8_t unaff_BL;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar6;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            do {\n                uVar1 = *in_RAX;\n                uVar3 = uVar1 >> 0x3d;\n                if (unaff_BL != uVar1 >> 0x3d) goto code_r0x004198fa;\n                LOCK();\n                bVar6 = uVar1 == *in_RAX;\n                *in_RAX = *in_RAX ^ bVar6 * *in_RAX;\n            } while (!bVar6);\n            uVar4 = arg1 & 0xe000000000000000 | uVar1 & 0x1fffffffffffffff;\n            uVar3 = 0;\n            bVar2 = arg1 < uVar4;\n            arg1 = arg1 - uVar4;\n            if (bVar2) {\n                arg1 = 0;\n            }\n            if (arg1 == 0) {\n                return uVar1 ^ !bVar6 * (uVar1 ^ *in_RAX);\n            }\n            if (unaff_BL < 3) {\n                if (unaff_BL == 1) {\ncode_r0x004198c9:\n                    LOCK();\n                    *0x801ef8 = *0x801ef8 + arg1;\n                    return 0x801ef8;\n                }\n                if (unaff_BL == 2) {\ncode_r0x004198b2:\n                    LOCK();\n                    *0x801ee8 = *0x801ee8 + arg1;\n                    return 0x801ee8;\n                }\n            }\n            else {\n                if (unaff_BL == 3) goto code_r0x004198b2;\n                if (unaff_BL == 4) goto code_r0x004198c9;\n            }\n            unaff_BL = 0x33;\n            *(*0x20 + -0x28) = 0x4198fa;\n            fcn.00433c80();\ncode_r0x004198fa:\n            *(*0x20 + 0x10) = unaff_BL;\n            *(*0x20 + -0x10) = uVar3;\n            *(*0x20 + -0x28) = 0x419908;\n            fcn.00435540();\n            *(*0x20 + -0x28) = 0x419919;\n            fcn.00435e40();\n            *(*0x20 + -0x28) = 0x419926;\n            fcn.00435b40();\n            *(*0x20 + -0x28) = 0x419937;\n            fcn.00435e40();\n            *(*0x20 + -0x28) = 0x419945;\n            fcn.00435b40();\n            *(*0x20 + -0x28) = 0x41994a;\n            fcn.004357a0();\n            *(*0x20 + -0x28) = 0x41994f;\n            fcn.004355c0();\n            unaff_BL = 0x3e;\n            *(*0x20 + -0x28) = 0x419965;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar5 + 8) = in_RAX;\n        puVar5[0x10] = unaff_BL;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x419979;\n        fcn.0045bb60();\n        in_RAX = *(puVar5 + 8);\n        unaff_BL = puVar5[0x10];\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 995
    },
    "00419da0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.00419da0(char param_1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    uint32_t unaff_EBX;\n    int64_t unaff_R14;\n    int64_t iStack96;\n    ulong *puStack88;\n    int64_t iStack80;\n    uint64_t uStack72;\n    uint64_t uStack64;\n    int64_t iStack56;\n    int64_t iStack48;\n    uchar auStack40 [16];\n    uchar auStack24 [16];\n    \n    while (auStack24 < *(unaff_R14 + 0x10) || auStack24 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    iStack96 = 0;\n    if ((unaff_EBX < *0x7ae028) || (*0x7ae02c <= unaff_EBX)) {\n        if ((unaff_EBX < *0x7ae02c) || (*0x7ae030 <= unaff_EBX)) {\n            puVar4 = *0x801a40;\n            if (unaff_EBX == 0) {\n                while (puVar4 != NULL) {\ncode_r0x0041a07b:\n                    puStack88 = puVar4;\n                    fcn.0041c260(0x801dc0);\n                    puVar4 = *puStack88;\n                }\n                piVar2 = NULL;\n            }\n            else if (unaff_EBX == 1) {\n                fcn.0045ba20();\n                piVar2 = NULL;\n            }\n            else {\n                if ((unaff_EBX < *0x7ae030) || (*0x7ae034 <= unaff_EBX)) {\n                    puVar4 = *0x7ae034;\n                    if ((*0x7ae034 <= unaff_EBX) && (unaff_EBX < *0x7ae038)) {\n                        if (unaff_EBX - *0x7ae034 < *0x7ae048) {\n                            iVar3 = *(*0x7ae040 + (unaff_EBX - *0x7ae034) * 8);\n                            if (((*(iVar3 + 0x90) == 4) || (*(iVar3 + 0x90) == 3)) && (*(iVar3 + 0xa8) == 0)) {\n                                *(iVar3 + 0xa8) = *0x7adff8;\n                            }\n                            auStack40 = CONCAT88(iVar3, 0x41a200);\n                            auStack24 = CONCAT88(&iStack96, in_RAX);\n                            fcn.0045ba20();\n                            piVar2 = 0x8023c8;\n                            goto code_r0x00419f88;\n                        }\n                        fcn.0045e240(*0x7ae048);\n                    }\n                    fcn.00435540();\n                    uStack64 = *0x7ae034;\n                    uStack72 = *0x7ae038;\n                    fcn.00435540();\n                    fcn.00435e40();\n                    fcn.00435b40();\n                    fcn.00435e40();\n                    fcn.00435b40();\n                    fcn.00435e40();\n                    fcn.00435b40();\n                    fcn.00435e40();\n                    fcn.004355c0();\n                    fcn.00433c80();\n                    goto code_r0x0041a07b;\n                }\n                fcn.0041a540();\n                piVar2 = NULL;\n            }\n        }\n        else {\n            if (*0x7ad098 == NULL) {\n                iVar3 = 0;\n                iStack56 = 0;\n            }\n            else {\n                iStack56 = **0x7ad098;\n                iVar3 = (*0x7ad098)[1];\n            }\n            iVar1 = 0;\n            while (iVar1 < iVar3) {\n                iStack80 = iVar1;\n                iVar1 = fcn.0041a360(*(*(iStack56 + iVar1 * 8) + 0x208));\n                iStack96 = iVar1 + iStack96;\n                iVar1 = iStack80 + 1;\n            }\n            piVar2 = 0x8023d0;\n        }\n    }\n    else {\n        if (*0x7ad098 == NULL) {\n            iVar3 = 0;\n            iStack48 = 0;\n        }\n        else {\n            iStack48 = **0x7ad098;\n            iVar3 = (*0x7ad098)[1];\n        }\n        iVar1 = 0;\n        while (iVar1 < iVar3) {\n            iStack80 = iVar1;\n            iVar1 = fcn.0041a360(*(*(iStack48 + iVar1 * 8) + 0x1f8));\n            iStack96 = iVar1 + iStack96;\n            iVar1 = iStack80 + 1;\n        }\n        piVar2 = 0x8023d0;\n    }\ncode_r0x00419f88:\n    if ((piVar2 != NULL) && (iStack96 != 0)) {\n        LOCK();\n        *piVar2 = *piVar2 + iStack96;\n        if (param_1 != '\\0') {\n            fcn.0041b080();\n        }\n    }\n    return iStack96;\n}\n",
        "token_count": 1201
    },
    "0041b9c0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041b9c0(ulong arg1)\n\n{\n    int64_t arg1_00;\n    uint64_t uVar1;\n    int32_t iVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    int32_t iVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_RSI;\n    ulong unaff_RDI;\n    char cVar5;\n    char cVar6;\n    uint64_t in_R8;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    bool bVar9;\n    int64_t iVar10;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    iVar3 = *in_RAX;\n    if (iVar3 == 0) {\n        uVar7 = 0;\n        bVar9 = false;\n    }\n    else {\n        uVar7 = in_R8 & 0xffffffffffffff00 | *(iVar3 + 0x24) == '\\x03';\n        bVar9 = *(iVar3 + 0x24) == '\\x05';\n    }\n    cVar5 = uVar7;\n    if (((*(unaff_RBX + 0x110) == '\\0') && (cVar5 == '\\0')) && (!bVar9)) {\n        iVar4 = 0;\n        iVar2 = fcn.0044a2a0();\n        if (0 < iVar2) {\n            fcn.0041c260(unaff_RBX);\n        }\n        if (0 < iVar4) {\n            fcn.0041c260(unaff_RDI);\n        }\n        if (in_RAX[7] != 0) {\n            iVar10 = unaff_RSI;\n            for (iVar3 = 0; iVar3 < uVar7; iVar3 = iVar3 + 1) {\n                arg1_00 = unaff_RSI + iVar3 * 0x10;\n                iVar2 = *(unaff_RSI + iVar3 * 0x10);\n                iVar8 = in_RAX[7];\n                if (-1 < iVar2) {\n                    iVar8 = in_RAX[8];\n                }\n                uVar1 = iVar8 + iVar2;\n                if (in_RAX[5] < uVar1 || in_RAX[5] == uVar1) {\n                    unaff_RSI = iVar10;\n                    fcn.00420b00(arg1_00);\n                    iVar10 = unaff_RSI;\n                }\n            }\n        }\n        return;\n    }\n    if ((in_RAX[7] != 0) && (in_RAX[7] != in_RAX[5])) {\n        fcn.0041c760(0);\n        uVar7 = uVar7 & 0xff;\n    }\n    cVar6 = uVar7;\n    if (in_RAX[9] != 0) {\n        fcn.0041c760(0);\n        cVar6 = cVar5;\n    }\n    if ((cVar6 != '\\0') || (bVar9)) {\n        *(unaff_RBX + 0x110) = 1;\n    }\n    else {\n        *(unaff_RBX + 0x110) = 0;\n    }\n    return;\n}\n",
        "token_count": 751
    },
    "0041c400": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041c400(void)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    uint64_t in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    int64_t *unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t uVar8;\n    uint32_t uVar9;\n    uint8_t *puVar10;\n    uint8_t *puVar11;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = in_RAX + 0x800000000000 >> 0x2a;\n            if (uVar6 < 0x40) {\n                uVar8 = in_RAX + 0x800000000000 >> 0x16;\n                iVar4 = *(*(uVar6 * 8 + 0x7d3e10) + (uVar8 & 0xfffff) * 8);\n                if (iVar4 == 0) {\n                    uVar8 = 0;\n                    uVar9 = 0;\n                    puVar11 = NULL;\n                    puVar10 = NULL;\n                }\n                else {\n                    puVar10 = iVar4 + (in_RAX >> 5 & 0x1ffff);\n                    uVar9 = in_RAX >> 3 & 3;\n                    puVar11 = iVar4 + 0x1ffff;\n                }\n                iVar4 = *(iVar4 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n                uVar6 = *(iVar4 + 0x68);\n                if (uVar6 != 0) {\n                    *(*0x20 + 0x10) = unaff_RBX;\n                    *(*0x20 + -0x30) = in_RAX;\n                    if (uVar6 < 0x20001) goto code_r0x0041c531;\n                    if (*(iVar4 + 0x18) != in_RAX) {\ncode_r0x0041c66e:\n                        uVar6 = (*(iVar4 + 0x68) + *(iVar4 + 0x18)) - in_RAX;\n                        if (0x20000 < uVar6) {\n                            uVar6 = 0x20000;\n                        }\ncode_r0x0041c531:\n                        *(*0x20 + -0x40) = uVar6;\n                        uVar3 = 0;\n                        while ((uVar3 < uVar6 && (uVar1 = *puVar10,  ((uVar1 >> (uVar9 & 0x1f)) >> 4 & 1) != 0))) {\n                            *(*0x20 + -0x38) = uVar3;\n                            if (((uVar1 >> (uVar9 & 0x1f) & 1) != 0) &&\n                               ((*(uVar3 + in_RAX) != 0 && (uVar6 <= *(uVar3 + in_RAX) - in_RAX)))) {\n                                *(*0x20 + -0x18) = puVar10;\n                                *(*0x20 + -0x20) = puVar11;\n                                *(*0x20 + -0x5c) = uVar8;\n                                *(*0x20 + -0x54) = uVar9;\n                                *(*0x20 + -0x98) = 0x41c5b1;\n                                iVar4 = fcn.00410940(uVar3);\n                                if (iVar4 != 0) {\n                                    *(*0x20 + -0x98) = 0x41c5d3;\n                                    fcn.0041ca20(*(*0x20 + -0x38), uVar6, uVar3);\n                                }\n                                uVar3 = *(*0x20 + -0x38);\n                                uVar9 = *(*0x20 + -0x54);\n                                uVar6 = *(*0x20 + -0x40);\n                                unaff_RBX = *(*0x20 + 0x10);\n                                in_RAX = *(*0x20 + -0x30);\n                                uVar8 = *(*0x20 + -0x5c);\n                                puVar10 = *(*0x20 + -0x18);\n                                puVar11 = *(*0x20 + -0x20);\n                            }\n                            if (uVar9 < 3) {\n                                uVar9 = uVar9 + 1;\n                            }\n                            else if (puVar11 == puVar10) {\n                                uVar5 = uVar8 & 0xffffffff;\n                                *(*0x20 + -0x98) = 0x41c62e;\n                                puVar10 = fcn.00410aa0(uVar8 & 0xffffffff);\n                                uVar6 = *(*0x20 + -0x40);\n                                in_RAX = *(*0x20 + -0x30);\n                                uVar8 = uVar5;\n                                uVar3 = *(*0x20 + -0x38);\n                                unaff_RBX = *(*0x20 + 0x10);\n                            }\n                            else {\n                                puVar10 = puVar10 + 1;\n                                uVar9 = 0;\n                            }\n                            uVar3 = uVar3 + 8;\n                        }\n                        unaff_RBX[2] = unaff_RBX[2] + uVar6;\n                        unaff_RBX[3] = unaff_RBX[3] + uVar3;\n                        return;\n                    }\n                    if ((*(iVar4 + 0x62) & 1) != 0) {\n                        unaff_RBX[2] = unaff_RBX[2] + uVar6;\n                        return;\n                    }\n                    *(*0x20 + -0x50) = iVar4;\n                    *(*0x20 + -0x28) = puVar11;\n                    *(*0x20 + -0x58) = uVar8;\n                    *(*0x20 + -0x60) = uVar9;\n                    *(*0x20 + -0x10) = puVar10;\n                    uVar6 = in_RAX;\ncode_r0x0041c696:\n                    uVar6 = uVar6 + 0x20000;\n                    if (*(iVar4 + 0x68) + *(iVar4 + 0x18) <= uVar6) goto code_r0x0041c66e;\n                    iVar2 = *unaff_RBX;\n                    if (iVar2 == 0) {\ncode_r0x0041c6c6:\n                        *(*0x20 + -0x48) = uVar6;\n                        *(*0x20 + -0x98) = 0x41c6d6;\n                        fcn.00422a00();\n                        uVar6 = *(*0x20 + -0x48);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        in_RAX = *(*0x20 + -0x30);\n                        uVar8 = *(*0x20 + -0x58);\n                        uVar9 = *(*0x20 + -0x60);\n                        puVar10 = *(*0x20 + -0x10);\n                        iVar4 = *(*0x20 + -0x50);\n                        puVar11 = *(*0x20 + -0x28);\n                        goto code_r0x0041c696;\n                    }\n                    uVar3 = *(iVar2 + 0x10);\n                    if (uVar3 == 0xfd) goto code_r0x0041c6c6;\n                    if (uVar3 < 0xfd) {\n                        *(iVar2 + 0x18 + uVar3 * 8) = uVar6;\n                        *(iVar2 + 0x10) = *(iVar2 + 0x10) + 1;\n                        goto code_r0x0041c696;\n                    }\n                    *(*0x20 + -0x98) = 0x41c710;\n                    fcn.0045e240(0xfd);\n                }\n                unaff_RBX = 0x11;\n                *(*0x20 + -0x98) = 0x41c725;\n                fcn.00433c80();\n            }\n            *(*0x20 + -0x98) = 0x41c732;\n            in_RAX = fcn.0045e260(0x40);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + -8) = 0x41c745;\n        fcn.0045bb60();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 2050
    },
    "0041e7e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041e80b)\n// WARNING: Removing unreachable block (ram,0x0041e812)\n// WARNING: Removing unreachable block (ram,0x0041e818)\n\nint64_t fcn.0041e7e0(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.004071c0();\n    iVar1 = fcn.0044bd40();\n    if (iVar1 != iVar1) {\n        return 100;\n    }\n    return iVar1;\n}\n",
        "token_count": 173
    },
    "0041e860": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041e894)\n// WARNING: Removing unreachable block (ram,0x0041e89b)\n// WARNING: Removing unreachable block (ram,0x0041e8a2)\n// WARNING: Removing unreachable block (ram,0x0041e8d3)\n\nulong fcn.0041e860(void)\n\n{\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.004071c0();\n    uVar1 = fcn.0044be20();\n    return uVar1;\n}\n",
        "token_count": 173
    },
    "004218a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.004218a0(void)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint8_t **in_RAX;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    ulong uVar7;\n    uint64_t uVar8;\n    uint8_t *puVar9;\n    uint8_t *puVar10;\n    char unaff_BL;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    uint32_t uVar12;\n    ulong *puVar13;\n    uint64_t uVar14;\n    int64_t iVar15;\n    uint16_t uVar16;\n    int64_t iVar17;\n    uint32_t uVar18;\n    int64_t unaff_R14;\n    uint8_t *unaff_R15;\n    \ncode_r0x004218a0:\n    puVar11 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x50 && *0x20 + -0x50 != *(unaff_R14 + 0x10)) {\n        puVar11 = *0x20 + -0xd0;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        piVar1 = *(unaff_R14 + 0x30);\n        if (((*(piVar1 + 0x1b) != 0) || (*(piVar1 + 0x18) != 0)) || (*piVar1 == unaff_R14)) {\n            puVar10 = *in_RAX;\n            if (unaff_BL == '\\0') {\n                *in_RAX = NULL;\n            }\n            *(*0x20 + -0xb0) = *0x7d3db8;\n            uVar3 = puVar10[99];\n            *(*0x20 + -0xb5) = uVar3;\n            if ((uVar3 == 1) && (*(puVar10 + 0x58) == *0x7d3db8 - 1)) {\n                *(*0x20 + 0x10) = unaff_BL;\n                *(*0x20 + -0x98) = puVar10;\n                *(*0x20 + -0xac) = *0x7d3db8 - 1;\n                uVar12 = *0x7d3db8;\n                if (*0x7b3b90 != '\\0') {\n                    *(*0x20 + -0xd8) = 0x421951;\n                    fcn.00451d00();\n                    puVar10 = *(*0x20 + -0x98);\n                    uVar12 = *(*0x20 + -0xb0);\n                }\n                LOCK();\n                *0x7d3de0 = *0x7d3de0 + *(puVar10 + 0x20);\n                uVar3 = puVar10[0x62];\n                *(*0x20 + -0xb8) = uVar3;\n                uVar8 = *(puVar10 + 0x68);\n                *(*0x20 + -0xa0) = uVar8;\n                uVar14 = *(puVar10 + 0x80);\n                *(*0x20 + -0x50) = uVar14;\n                *(*0x20 + -0x48) = puVar10 + 0x80;\n                *(*0x20 + -0x40) = uVar14;\n                do {\n                    uVar4 = uVar3;\n                    puVar13 = *(*0x20 + -0x40);\n                    if (puVar13 == NULL) {\n                        if ((uVar14 != 0) && (*(puVar10 + 0x80) == 0)) {\n                            puVar13 = *(puVar10 + 0x18) + 0x800000000000;\n                            uVar14 = puVar13 >> 0x2a;\n                            if (0x3f < uVar14) {\ncode_r0x00422305:\n                                uVar5 = 0;\n                                *(*0x20 + -0xd8) = 0x422312;\n                                fcn.0045e260(0x40);\n                                goto code_r0x00422312;\n                            }\n                            puVar13 = puVar13 >> 0x16 & 0xfffff;\n                            uVar14 = *(*(uVar14 * 8 + 0x7d3e10) + puVar13 * 8);\n                            uVar5 = *(puVar10 + 0x18) >> 0xd;\n                            uVar6 = (uVar5 & 0x1ff) >> 3;\n                            if (0x3f < uVar6) {\n                                *(*0x20 + -0xd8) = 0x422305;\n                                fcn.0045e260(0x40);\n                                goto code_r0x00422305;\n                            }\n                            puVar9 = uVar14 + uVar6 + 0x21080;\n                            LOCK();\n                            *puVar9 = *puVar9 & ~(1 << (uVar5 & 7));\n                        }\n                        if ((*0x801ea8 != 0) || (*0x801e64 != 0)) {\n                            *(*0x20 + -0x38) = *(puVar10 + 0x50);\n                            *(*0x20 + -0x30) = 1;\n                            *(*0x20 + -0x28) = 0;\n                            *(*0x20 + -0x20) = *(puVar10 + 0x48);\n                            *(*0x20 + -0x18) = 1;\n                            *(*0x20 + -0x10) = 0;\n                            for (uVar14 = 0; uVar14 <= *(puVar10 + 0x38) && *(puVar10 + 0x38) != uVar14;\n                                uVar14 = uVar14 + 1) {\n                                if (((**(*0x20 + -0x38) & *(*0x20 + -0x30)) == 0) &&\n                                   ((*(*0x20 + -0x10) <= *(puVar10 + 0x30) && *(puVar10 + 0x30) != *(*0x20 + -0x10) ||\n                                    ((**(*0x20 + -0x20) & *(*0x20 + -0x18)) != 0)))) {\n                                    iVar15 = *(puVar10 + 0x68) * uVar14 + *(puVar10 + 0x18);\n                                    if (*0x801ea8 != 0) {\n                                        *(*0x20 + -0x80) = uVar14;\n                                        *(*0x20 + -0xa8) = iVar15;\n                                        *(*0x20 + -0xd8) = 0x42223e;\n                                        fcn.0042ba40();\n                                        uVar14 = *(*0x20 + -0x80);\n                                        puVar10 = *(*0x20 + -0x98);\n                                        uVar8 = *(*0x20 + -0xa0);\n                                        iVar15 = *(*0x20 + -0xa8);\n                                    }\n                                    if (*0x801e64 != 0) {\n                                        for (uVar4 = 0; uVar4 < uVar8; uVar4 = uVar4 + 4) {\n                                            *(iVar15 + uVar4) = 0xdeadbeef;\n                                        }\n                                    }\n                                }\n                                if (*(*0x20 + -0x30) == -0x80) {\n                                    *(*0x20 + -0x38) = *(*0x20 + -0x38) + 1;\n                                    *(*0x20 + -0x30) = 1;\n                                }\n                                else {\n                                    *(*0x20 + -0x30) = *(*0x20 + -0x30) << 1;\n                                }\n                                *(*0x20 + -0x28) = *(*0x20 + -0x28) + 1;\n                                if (*(*0x20 + -0x18) == -0x80) {\n                                    *(*0x20 + -0x20) = *(*0x20 + -0x20) + 1;\n                                    *(*0x20 + -0x18) = 1;\n                                }\n                                else {\n                                    *(*0x20 + -0x18) = *(*0x20 + -0x18) << 1;\n                                }\n                                *(*0x20 + -0x10) = *(*0x20 + -0x10) + 1;\n                            }\n                        }\n                        uVar14 = *(puVar10 + 0x30);\n                        if (*(puVar10 + 0x38) < uVar14 || *(puVar10 + 0x38) == uVar14) goto code_r0x00421c26;\n                        uVar8 = uVar14 >> 3;\n                        if ((~*(uVar8 + *(puVar10 + 0x48)) & *(uVar8 + *(puVar10 + 0x50))) >> (uVar14 & 7) != 0) {\n                            *(*0x20 + -0x58) = uVar8;\n                            *(*0x20 + -0xd8) = 0x421bf2;\n                            fcn.004224a0();\n                            uVar8 = *(*0x20 + -0x58);\n                            puVar10 = *(*0x20 + -0x98);\n                        }\n                        do {\n                            while (uVar8 = uVar8 + 1,  uVar8 < *(puVar10 + 0x38) + 7U >> 3) {\n                                if ((*(uVar8 + *(puVar10 + 0x50)) & ~*(uVar8 + *(puVar10 + 0x48))) != 0) {\n                                    *(*0x20 + -0x88) = uVar8;\n                                    *(*0x20 + -0xd8) = 0x422192;\n                                    fcn.004224a0();\n                                    uVar8 = *(*0x20 + -0x88);\n                                    puVar10 = *(*0x20 + -0x98);\n                                }\n                            }\ncode_r0x00421c26:\n                            uVar14 = *(puVar10 + 0x38) + 7U >> 3;\n                            *(*0x20 + -0x58) = uVar14;\n                            iVar15 = 0;\n                            for (uVar8 = 0; *(*0x20 + -0x70) = iVar15,  uVar8 < uVar14; uVar8 = uVar8 + 8) {\n                                if (*0x8019b5 == '\\0') {\n                                    *(*0x20 + -0x90) = uVar8;\n                                    *(*0x20 + -0xd8) = 0x421c79;\n                                    iVar17 = fcn.004020e0();\n                                    uVar14 = *(*0x20 + -0x58);\n                                    puVar10 = *(*0x20 + -0x98);\n                                    iVar15 = *(*0x20 + -0x70);\n                                    uVar8 = *(*0x20 + -0x90);\n                                }\n                                else {\n                                    iVar17 = popcnt(*(*(puVar10 + 0x50) + uVar8));\n                                }\n                                iVar15 = iVar15 + iVar17;\n                            }\n                            uVar16 = *(puVar10 + 0x60);\n                            uVar14 = uVar16;\n                            uVar12 = uVar16 - iVar15;\n                            uVar8 = uVar12;\n                            *(*0x20 + -0xb4) = uVar12;\n                            if (iVar15 <= uVar16) {\n                                *(puVar10 + 0x60) = iVar15;\n                                *(puVar10 + 0x30) = 0;\n                                *(puVar10 + 0x88) = 0;\n                                if (*0x7b3b90 != '\\0') {\n                                    uVar14 = *(*(unaff_R14 + 0x30) + 0xa0);\n                                    *(uVar14 + 0x11e8) = *(uVar14 + 0x11e8) + *(puVar10 + 0x68) * (uVar12 & 0xffff);\n                                }\n                                uVar16 = uVar14;\n                                *(puVar10 + 0x48) = *(puVar10 + 0x50);\n                                *(*0x20 + -0xd8) = 0x421d25;\n                                uVar7 = fcn.00426360();\n                                uVar14 = *(*0x20 + -0x98);\n                                *(uVar14 + 0x50) = uVar7;\n                                *(*0x20 + -0xd8) = 0x421d38;\n                                fcn.00410580();\n                                iVar15 = *(*0x20 + -0x98);\n                                uVar3 = *(iVar15 + 99);\n                                uVar8 = uVar14 & 0xffffffffffffff00 | uVar3;\n                                *(*0x20 + -0xb5) = uVar3;\n                                if (uVar3 == 1) {\n                                    uVar12 = *(iVar15 + 0x58);\n                                    puVar10 = uVar12;\n                                    if (uVar12 == *(*0x20 + -0xac)) {\n                                        uVar18 = *(*0x20 + -0xb0);\n                                        if ((uVar12 != uVar18 + 1) && (uVar12 != uVar18 + 3)) {\n                                            puVar10 = uVar18;\n                                            *(iVar15 + 0x58) = uVar18;\n                                            uVar14 = *(*0x20 + -0xb8);\n                                            uVar3 = *(*0x20 + -0xb8) >> 1;\n                                            if (uVar3 == 0) {\n                                                if (*(*0x20 + 0x10) != '\\0') {\n                                                    return 0;\n                                                }\n                                                if (*(*0x20 + -0xb4) != 0) {\n                                                    if (*0x801e68 < 1) {\n                                                        *(*0x20 + -0xd8) = 0x421f36;\n                                                        fcn.004252c0();\n                                                    }\n                                                    else {\n                                                        *(iVar15 + 0x70) = 0;\n                                                        *(*0x20 + -0xd8) = 0x421f28;\n                                                        fcn.004145e0();\n                                                    }\n                                                    *(*0x20 + -0xd8) = 0x421f45;\n                                                    iVar15 = fcn.0042cca0();\n                                                    LOCK();\n                                                    *(iVar15 + 0x270) = *(iVar15 + 0x270) + 1;\n                                                    LOCK();\n                                                    piVar1 = iVar15 + 0x268;\n                                                    iVar15 = *piVar1;\n                                                    *piVar1 = *piVar1 + *(*0x20 + -0xa0);\n                                                    *(*0x20 + -0xd8) = 0x421f6d;\n                                                    fcn.0042cd80(iVar15);\n                                                    LOCK();\n                                                    *0x802450 = *0x802450 + *(*0x20 + -0xa0);\n                                                    return 1;\n                                                }\n                                                if (uVar14 < 0x88) {\n                                                    *(*0x20 + -0xd8) = 0x421fc6;\n                                                    fcn.0042c640(uVar14 * 0xc0 + 0x7d4110, (uVar18 >> 1 & 1) * 5);\n                                                    return 0;\n                                                }\n                                                *(*0x20 + -0xd8) = 0x421fe5;\n                                                fcn.0045e240(0x88);\ncode_r0x00421fe5:\n                                                *(*0x20 + -0xd8) = 0x421ff1;\n                                                fcn.0045e240(0x88);\ncode_r0x00421ff1:\n                                                *(*0x20 + -0xd8) = 0x421ffd;\n                                                fcn.0045e240(0x88);\n                                            }\n                                            else {\n                                                if (*(*0x20 + -0xb4) == 0) {\n                                                    cVar2 = *(*0x20 + 0x10);\ncode_r0x00421e29:\n                                                    if (cVar2 != '\\0') {\n                                                        return 0;\n                                                    }\n                                                    if (*(*0x20 + -0x70) == 0) {\n                                                        *(*0x20 + -0xd8) = 0x421ed1;\n                                                        fcn.004252c0();\n                                                        return 1;\n                                                    }\n                                                    if (*(iVar15 + 0x38) != (*(*0x20 + -0x70) & 0xffff)) {\n                                                        if (uVar14 < 0x88) {\n                                                            *(*0x20 + -0xd8) = 0x421ebb;\n                                                            fcn.0042c640(uVar14 * 0xc0 + 0x7d40c0, \n                                                                         (puVar10 >> 1 & 1) * 5);\n                                                            return 0;\n                                                        }\n                                                        goto code_r0x00421fe5;\n                                                    }\n                                                    if (uVar14 < 0x88) {\n                                                        *(*0x20 + -0xd8) = 0x421e7c;\n                                                        fcn.0042c640(uVar14 * 0xc0 + 0x7d4110, (puVar10 >> 1 & 1) * 5);\n                                                        return 0;\n                                                    }\n                                                    goto code_r0x00421ff1;\n                                                }\n                                                *(*0x20 + -0xb6) = uVar3;\n                                                *(iVar15 + 100) = 1;\n                                                *(*0x20 + -0xd8) = 0x421dba;\n                                                iVar15 = fcn.0042cca0();\n                                                if (*(*0x20 + -0xb6) < 0x44) {\n                                                    piVar1 = iVar15 + *(*0x20 + -0xb6) * 8 + 0x278;\n                                                    *(*0x20 + -0x60) = *(*0x20 + -0xb4);\n                                                    LOCK();\n                                                    iVar15 = *piVar1;\n                                                    *piVar1 = *piVar1 + *(*0x20 + -0xb4);\n                                                    *(*0x20 + -0xd8) = 0x421df8;\n                                                    fcn.0042cd80(piVar1, iVar15);\n                                                    iVar15 = *(*0x20 + -0x98);\n                                                    LOCK();\n                                                    *0x802450 = *0x802450 + *(*0x20 + -0x60) * *(iVar15 + 0x68);\n                                                    cVar2 = *(*0x20 + 0x10);\n                                                    puVar10 = *(*0x20 + -0xb0);\n                                                    uVar14 = *(*0x20 + -0xb8);\n                                                    goto code_r0x00421e29;\n                                                }\n                                            }\n                                            uVar8 = 0x44;\n                                            *(*0x20 + -0xd8) = 0x42200a;\n                                            fcn.0045e240(0x44);\n                                        }\n                                        iVar15 = 0x11;\n                                        *(*0x20 + -0xd8) = 0x42201b;\n                                        fcn.00433c80();\n                                    }\n                                }\n                                *(*0x20 + -0x68) = *(iVar15 + 0x58);\n                                *(*0x20 + -0xd8) = 0x422028;\n                                fcn.00435540();\n                                *(*0x20 + -0xd8) = 0x422039;\n                                fcn.00435e40();\n                                *(*0x20 + -0xd8) = 0x422046;\n                                fcn.00435b40();\n                                *(*0x20 + -0xd8) = 0x422057;\n                                fcn.00435e40();\n                                *(*0x20 + -0xd8) = 0x422065;\n                                fcn.00435b40();\n                                *(*0x20 + -0xd8) = 0x422076;\n                                fcn.00435e40();\n                                *(*0x20 + -0xd8) = 0x42207f;\n                                fcn.00435b40();\n                                *(*0x20 + -0xd8) = 0x422085;\n                                fcn.004357a0();\n                                *(*0x20 + -0xd8) = 0x42208a;\n                                fcn.004355c0();\n                                *(*0x20 + -0xd8) = 0x42209b;\n                                fcn.00433c80();\n                            }\n                            *(*0x20 + -0xb2) = uVar16;\n                            *(*0x20 + -0x58) = *(puVar10 + 0x38);\n                            *(*0x20 + -0xd8) = 0x4220af;\n                            fcn.00435540();\n                            *(*0x20 + -0xd8) = 0x4220c5;\n                            fcn.00435e40();\n                            *(*0x20 + -0xd8) = 0x4220cf;\n                            fcn.00435b40();\n                            *(*0x20 + -0xd8) = 0x4220e5;\n                            fcn.00435e40();\n                            *(*0x20 + -0xd8) = 0x4220f2;\n                            fcn.00435b40();\n                            *(*0x20 + -0xd8) = 0x422105;\n                            fcn.00435e40();\n                            *(*0x20 + -0xd8) = 0x42210f;\n                            fcn.00435b40();\n                            *(*0x20 + -0xd8) = 0x422125;\n                            fcn.00435e40();\n                            *(*0x20 + -0xd8) = 0x422132;\n                            fcn.00435b40();\n                            *(*0x20 + -0xd8) = 0x422137;\n                            fcn.004357a0();\n                            *(*0x20 + -0xd8) = 0x42213c;\n                            fcn.004355c0();\n                            *(*0x20 + -0xd8) = 0x42214d;\n                            fcn.00433c80();\n                        } while( true );\n                    }\n                    if (uVar8 == 0) goto code_r0x004223d3;\n                    uVar4 = SUB168(ZEXT216(*(puVar13 + 1)) / ZEXT816(uVar8), 0);\n                    uVar18 = SUB164(ZEXT216(*(puVar13 + 1)) / ZEXT816(uVar8), 0) & 7;\n                    uVar5 = uVar18;\n                    puVar9 = (uVar4 >> 3) + *(puVar10 + 0x50);\n                    uVar3 = *puVar9;\n                    uVar12 = uVar3;\n                    if ((1 << uVar18 & uVar3) == 0) {\n                        uVar4 = uVar4 * uVar8 + uVar8;\n                        unaff_R15 = puVar10;\n                        for (; puVar10 = puVar9,  puVar13 != NULL; puVar13 = *puVar13) {\n                            if (uVar4 <= *(puVar13 + 1)) {\n                                cVar2 = '\\0';\n                                goto code_r0x00421aa8;\n                            }\n                            if (*(puVar13 + 10) == '\\x01') {\n                                *puVar10 = uVar12 | 1 << (uVar5 & 0x1f);\n                                cVar2 = '\\x01';\n                                goto code_r0x00421aa8;\n                            }\ncode_r0x00422312:\n                            puVar9 = puVar10;\n                        }\n                        cVar2 = '\\0';\ncode_r0x00421aa8:\n                        *(*0x20 + -0x78) = uVar4;\n                        *(*0x20 + -0xb7) = cVar2;\n                        while ((puVar13 = *(*0x20 + -0x40),  puVar10 = unaff_R15,  puVar13 != NULL &&\n                               (*(puVar13 + 1) < uVar4))) {\n                            if ((*(puVar13 + 10) == '\\x01') || (cVar2 == '\\0')) {\n                                uVar7 = *puVar13;\n                                *(*0x20 + -0x40) = uVar7;\n                                **(*0x20 + -0x48) = uVar7;\n                                *(*0x20 + -0xd8) = 0x4223a5;\n                                fcn.00426220(uVar8);\n                                cVar2 = *(*0x20 + -0xb7);\n                                uVar4 = *(*0x20 + -0x78);\n                                uVar8 = *(*0x20 + -0xa0);\n                                uVar14 = *(*0x20 + -0x50);\n                                unaff_R15 = *(*0x20 + -0x98);\n                            }\n                            else {\n                                *(*0x20 + -0x48) = puVar13;\n                                *(*0x20 + -0x40) = *puVar13;\n                            }\n                        }\n                    }\n                    else if (*(puVar13 + 10) == '\\x03') {\n                        uVar7 = *puVar13;\n                        *(*0x20 + -0x40) = uVar7;\n                        **(*0x20 + -0x48) = uVar7;\n                        *(puVar13 + 0x11) = 1;\n                        *(*0x20 + -0xd8) = 0x421a65;\n                        fcn.00426220(uVar8);\n                        uVar8 = *(*0x20 + -0xa0);\n                        uVar14 = *(*0x20 + -0x50);\n                        puVar10 = *(*0x20 + -0x98);\n                    }\n                    else {\n                        *(*0x20 + -0x48) = puVar13;\n                        *(*0x20 + -0x40) = *puVar13;\n                    }\n                    uVar12 = *(*0x20 + -0xb0);\n                    uVar3 = *(*0x20 + -0xb8);\n                    unaff_R15 = puVar10;\n                } while( true );\n            }\n            goto code_r0x004223d8;\n        }\n        goto code_r0x0042245b;\n    }\n    goto code_r0x0042246d;\ncode_r0x004223d3:\n    *(*0x20 + -0xd8) = 0x4223d8;\n    fcn.00432100();\ncode_r0x004223d8:\n    *(*0x20 + -0x68) = *(puVar10 + 0x58);\n    *(*0x20 + -0xd8) = 0x4223e5;\n    fcn.00435540();\n    *(*0x20 + -0xd8) = 0x4223f6;\n    fcn.00435e40();\n    *(*0x20 + -0xd8) = 0x422405;\n    fcn.00435b40();\n    *(*0x20 + -0xd8) = 0x422416;\n    fcn.00435e40();\n    *(*0x20 + -0xd8) = 0x422425;\n    fcn.00435b40();\n    *(*0x20 + -0xd8) = 0x422436;\n    fcn.00435e40();\n    *(*0x20 + -0xd8) = 0x42243f;\n    fcn.00435b40();\n    *(*0x20 + -0xd8) = 0x422445;\n    fcn.004357a0();\n    *(*0x20 + -0xd8) = 0x42244a;\n    fcn.004355c0();\n    *(*0x20 + -0xd8) = 0x42245b;\n    fcn.00433c80();\ncode_r0x0042245b:\n    unaff_BL = '\\x1c';\n    *(*0x20 + -0xd8) = 0x42246c;\n    in_RAX = fcn.00433c80();\ncode_r0x0042246d:\n    *(puVar11 + 8) = in_RAX;\n    puVar11[0x10] = unaff_BL;\n    *(puVar11 + -8) = 0x42247b;\n    fcn.0045bb60();\n    in_RAX = *(puVar11 + 8);\n    unaff_BL = puVar11[0x10];\n    *0x20 = puVar11;\n    goto code_r0x004218a0;\n}\n",
        "token_count": 6382
    },
    "004247a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.004247a0(uint64_t param_1)\n\n{\n    int64_t *piVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    int64_t iVar4;\n    char cVar5;\n    ulong in_RAX;\n    ulong uVar6;\n    int64_t iVar7;\n    ulong uVar8;\n    int64_t *piVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    uint64_t unaff_RBX;\n    uint64_t uVar12;\n    uchar *puVar13;\n    uchar *unaff_RBP;\n    uchar (*pauVar14) [16];\n    uchar uVar15;\n    uint64_t unaff_RDI;\n    uint64_t uVar16;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar17;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        uVar15 = unaff_RDI;\n        puVar13 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x18)) {\n            puVar13 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = param_1;\n            *(*0x20 + 0x19) = uVar15;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            iVar7 = *(*(unaff_R14 + 0x30) + 0xa0);\n            *(*0x20 + -0x10) = iVar7;\n            if ((iVar7 == 0) || (0xf < unaff_RBX)) {\n                iVar7 = 0;\n                pauVar14 = NULL;\n                unaff_RBX = 0;\ncode_r0x004248ea:\n                *(*0x20 + -0x58) = unaff_RBX;\n                *(*0x20 + -0x28) = pauVar14;\n                *(*0x20 + -0x40) = iVar7;\n                *(*0x20 + -0x98) = 0x424905;\n                fcn.0040a460();\n                iVar7 = *(*0x20 + -0x40);\n                if (iVar7 == 0) {\n                    *(*0x20 + -0x18) = *(*0x20 + 8) + 0x10;\n                    uVar6 = *(*0x20 + 0x10);\n                    *(*0x20 + -0x98) = 0x42493f;\n                    iVar7 = fcn.004283a0();\n                    if (iVar7 != 0) {\n                        uVar8 = 0;\n                        goto code_r0x004249ae;\n                    }\n                    uVar6 = *(*0x20 + 0x10);\n                    *(*0x20 + -0x98) = 0x42495e;\n                    uVar8 = fcn.00425000();\n                    if (uVar6 == '\\0') {\n                        *(*0x20 + -0x98) = 0x424973;\n                        fcn.0040a680();\n                        return 0;\n                    }\n                    *(*0x20 + -0x50) = uVar8;\n                    uVar6 = *(*0x20 + 0x10);\n                    *(*0x20 + -0x98) = 0x42499c;\n                    iVar7 = fcn.004283a0();\n                    if (iVar7 != 0) {\n                        uVar8 = *(*0x20 + -0x50);\n                        goto code_r0x004249ae;\n                    }\n                }\n                else {\n                    uVar8 = 0;\n                    uVar6 = *(*0x20 + -0x58);\ncode_r0x004249ae:\n                    *(*0x20 + -0x58) = uVar6;\n                    *(*0x20 + -0x50) = uVar8;\n                    *(*0x20 + -0x40) = iVar7;\n                    iVar7 = *(*0x20 + -0x28);\n                    if (iVar7 == 0) {\n                        *(*0x20 + -0x98) = 0x4249d4;\n                        iVar7 = fcn.00424680();\n                    }\n                    *(*0x20 + -0x28) = iVar7;\n                    *(*0x20 + -0x98) = 0x4249eb;\n                    fcn.0040a680();\n                    pauVar14 = *(*0x20 + -0x28);\n                    iVar7 = *(*0x20 + -0x40);\n                    uVar6 = *(*0x20 + -0x50);\n                    unaff_RBX = *(*0x20 + -0x58);\ncode_r0x004249ff:\n                    *(*0x20 + -0x60) = pauVar14;\n                    *(*0x20 + -0x40) = iVar7;\n                    *(*0x20 + -0x58) = unaff_RBX;\n                    *(*0x20 + -0x50) = uVar6;\n                    *pauVar14 = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                    *pauVar14[1] = 0;\n                    *(pauVar14[1] + 8) = iVar7;\n                    uVar6 = *(*0x20 + 0x10);\n                    *pauVar14[2] = uVar6;\n                    *pauVar14[6] = 0;\n                    pauVar14[6][2] = 0;\n                    *(pauVar14[6] + 8) = 0;\n                    *(pauVar14[7] + 8) =\n                         CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                    pauVar14[6][4] = 0;\n                    *pauVar14[3] = 0;\n                    *(pauVar14[8] + 8) = 0;\n                    *(pauVar14[4] + 8) =\n                         CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                    *(*0x20 + -0x20) = pauVar14[6] + 3;\n                    pauVar14[6][3] = 0;\n                    *(*0x20 + -0x98) = 0x424a88;\n                    cVar5 = fcn.00424520(uVar6);\n                    if (cVar5 == '\\0') {\n                        iVar7 = *(*0x20 + -0x60);\n                    }\n                    else {\n                        iVar7 = *(*0x20 + -0x60);\n                        *(iVar7 + 100) = 1;\n                    }\n                    uVar12 = *(*0x20 + 0x10) << 0xd;\n                    *(*0x20 + -0x30) = uVar12;\n                    if (*(*0x20 + 0x18) == '\\0') {\n                        uVar3 = *(*0x20 + 0x19);\n                        *(iVar7 + 0x62) = uVar3;\n                        if (uVar3 >> 1 == 0) {\n                            *(iVar7 + 0x68) = uVar12;\n                            *(iVar7 + 0x38) = 1;\n                            *(iVar7 + 0x5c) = 0;\ncode_r0x00424b66:\n                            *(iVar7 + 0x30) = 0;\n                            *(iVar7 + 0x88) = 0;\n                            *(iVar7 + 0x40) = 0xffffffffffffffff;\n                            *(*0x20 + -0x98) = 0x424b8a;\n                            uVar6 = fcn.00426360();\n                            *(*(*0x20 + -0x60) + 0x50) = uVar6;\n                            *(*0x20 + -0x98) = 0x424b9c;\n                            uVar6 = fcn.00426680();\n                            iVar7 = *(*0x20 + -0x60);\n                            *(iVar7 + 0x48) = uVar6;\n                            *(iVar7 + 0x58) = *(*(*0x20 + 8) + 0x10138);\n                            **(*0x20 + -0x20) = 1;\n                            goto code_r0x00424bdd;\n                        }\n                        unaff_RDI = uVar3 >> 1;\n                        if (unaff_RDI < 0x44) {\n                            uVar10 = *(unaff_RDI * 2 + 0x7985a0);\n                            *(iVar7 + 0x68) = uVar10;\n                            if (uVar10 != 0) {\n                                *(iVar7 + 0x38) = uVar12 / uVar10;\n                                *(iVar7 + 0x5c) = *(unaff_RDI * 4 + 0x799900);\n                                goto code_r0x00424b66;\n                            }\n                            goto code_r0x00424f85;\n                        }\n                    }\n                    else {\n                        *(iVar7 + 0x28) = 0;\n                        *(iVar7 + 0x38) = 0;\n                        *(iVar7 + 0x70) = *(iVar7 + 0x20) * 0x2000 + *(iVar7 + 0x18);\n                        **(*0x20 + -0x20) = 2;\ncode_r0x00424bdd:\n                        if (*0x801ec4 == '\\0') {\n                            iVar11 = *(*0x20 + -0x58);\n                            uVar12 = 0;\n                            if (*0x802308 < *0x802458 + iVar11) {\n                                uVar12 = (*0x802458 + iVar11) - *0x802308;\n                            }\n                        }\n                        else {\n                            iVar11 = *(*0x20 + -0x58);\n                            uVar12 = 0;\n                        }\n                        if (*0x801c10 == 0xffffffffffffffff) {\n                            bVar17 = *(*0x20 + -0x10) == 0;\n                        }\n                        else {\n                            uVar10 = *(*0x20 + -0x50);\n                            if (uVar10 == 0) {\n                                bVar17 = *(*0x20 + -0x10) == 0;\n                            }\n                            else {\n                                uVar16 = *0x802430 + *0x802440 + uVar10;\n                                if (*0x801c10 < uVar16) {\n                                    uVar16 = uVar16 - *0x801c10;\n                                    if (uVar16 < uVar10) {\n                                        uVar10 = uVar16;\n                                    }\n                                    if (uVar12 < uVar10) {\n                                        uVar12 = uVar10;\n                                    }\n                                    bVar17 = *(*0x20 + -0x10) == 0;\n                                }\n                                else {\n                                    bVar17 = *(*0x20 + -0x10) == 0;\n                                }\n                            }\n                        }\n                        if ((!bVar17) && (uVar12 != 0)) {\n                            *(*0x20 + -0x48) = uVar12;\n                            *(*0x20 + -0x98) = 0x424ca9;\n                            fcn.0045fb60(iVar11, iVar7);\n                            *(*0x20 + -0x68) = *(*0x20 + -0x90);\n                            uVar12 = *(*(*0x20 + -0x10) + 0x1228);\n                            *(*0x20 + -0x38) = uVar12 >> 0x3d;\n                            if (uVar12 >> 0x3d == 0) {\n                                *(*(*0x20 + -0x10) + 0x1228) =\n                                     *(*0x20 + -0x90) & 0x1fffffffffffffff | 0x6000000000000000;\n                            }\n                            *(*0x20 + -0x98) = 0x424d29;\n                            fcn.0041f9c0(0x7194a0);\n                            *(*0x20 + -0x98) = 0x424d2f;\n                            fcn.0045fb60();\n                            in_XMM15_Da = 0;\n                            in_XMM15_Db = 0;\n                            in_XMM15_Dc = 0;\n                            in_XMM15_Dd = 0;\n                            unaff_R14 = **(in_GS_OFFSET + 0x28);\n                            iVar7 = *(*0x20 + -0x90);\n                            if (*(*0x20 + -0x38) == '\\0') {\n                                *(*0x20 + -0x70) = iVar7;\n                                *(*0x20 + -0x98) = 0x424d6d;\n                                fcn.00419820(iVar7);\n                                iVar7 = *(*0x20 + -0x70);\n                            }\n                            LOCK();\n                            *(*(*0x20 + 8) + 0x10110) = *(*(*0x20 + 8) + 0x10110) + (iVar7 - *(*0x20 + -0x68));\n                            iVar11 = *(*0x20 + -0x58);\n                        }\n                        if (iVar11 != 0) {\n                            *(*0x20 + -0x98) = 0x424db9;\n                            fcn.00414520(iVar11);\n                            *(*0x20 + -0x98) = 0x424dcd;\n                            fcn.0042cbe0();\n                        }\n                        *(*0x20 + -0x98) = 0x424de9;\n                        fcn.0042cbe0();\n                        if (*(*0x20 + 0x18) == '\\0') {\n                            *(*0x20 + -0x98) = 0x424e06;\n                            fcn.0042cbe0();\n                        }\n                        *(*0x20 + -0x98) = 0x424e12;\n                        piVar9 = fcn.0042cca0();\n                        iVar7 = *(*0x20 + -0x58);\n                        LOCK();\n                        *piVar9 = *piVar9 + iVar7;\n                        LOCK();\n                        piVar1 = piVar9 + 1;\n                        iVar11 = *piVar1;\n                        *piVar1 = *piVar1 - iVar7;\n                        uVar3 = *(*0x20 + 0x18);\n                        if (uVar3 < 2) {\n                            if (uVar3 == 0) {\n                                LOCK();\n                                piVar9 = piVar9 + 2;\n                                iVar11 = *piVar9;\n                                *piVar9 = *piVar9 + *(*0x20 + -0x30);\n                            }\n                            else {\n                                LOCK();\n                                piVar9 = piVar9 + 3;\n                                iVar11 = *piVar9;\n                                *piVar9 = *piVar9 + *(*0x20 + -0x30);\n                            }\n                        }\n                        else if (uVar3 == 2) {\n                            LOCK();\n                            piVar9 = piVar9 + 5;\n                            iVar11 = *piVar9;\n                            *piVar9 = *piVar9 + *(*0x20 + -0x30);\n                        }\n                        else if (uVar3 == 3) {\n                            LOCK();\n                            piVar9 = piVar9 + 4;\n                            iVar11 = *piVar9;\n                            *piVar9 = *piVar9 + *(*0x20 + -0x30);\n                        }\n                        *(*0x20 + -0x98) = 0x424e85;\n                        fcn.0042cd80(uVar3, iVar11);\n                        unaff_RDI = *(*0x20 + -0x60);\n                        *(*0x20 + -0x98) = 0x424ea5;\n                        fcn.00424420(*(*0x20 + 0x10));\n                        if (*(*0x20 + 0x18) != '\\0') {\ncode_r0x00424f4b:\n                            *(*0x20 + -0x98) = 0x424f50;\n                            fcn.0045d960();\n                            return *(*0x20 + -0x60);\n                        }\n                        uVar12 = *(*(*0x20 + -0x60) + 0x18);\n                        uVar10 = uVar12 + 0x800000000000 >> 0x2a;\n                        if (uVar10 < 0x40) {\n                            puVar2 = *(*(uVar10 * 8 + 0x7d3e10) + (uVar12 + 0x800000000000 >> 0x16 & 0xfffff) * 8) +\n                                     (uVar12 >> 0x10 & 0x3f) + 0x21000;\n                            LOCK();\n                            *puVar2 = *puVar2 | 1 << (uVar12 >> 0xd & 7);\n                            LOCK();\n                            *(*(*0x20 + 8) + 0x10158) = *(*(*0x20 + 8) + 0x10158) + *(*0x20 + 0x10);\n                            goto code_r0x00424f4b;\n                        }\n                        *(*0x20 + -0x98) = 0x424f85;\n                        fcn.0045e260(0x40);\ncode_r0x00424f85:\n                        *(*0x20 + -0x98) = 0x424f8a;\n                        fcn.00432100();\n                    }\n                    *(*0x20 + -0x98) = 0x424f97;\n                    fcn.0045e240(0x44);\n                }\n                unaff_RBX = 0x2b;\n                *(*0x20 + -0x98) = 0x424fa8;\n                fcn.00433c80();\n            }\n            else {\n                if (*(iVar7 + 0x50) == 0) {\n                    *(*0x20 + -0x98) = 0x424825;\n                    fcn.0040a460();\n                    param_1 = *(*0x20 + 8) + 0x10;\n                    *(*0x20 + -0x98) = 0x424839;\n                    uVar6 = fcn.00429a00();\n                    iVar7 = *(*0x20 + -0x10);\n                    *(iVar7 + 0x48) = uVar6;\n                    *(iVar7 + 0x50) = unaff_RBX;\n                    *(iVar7 + 0x58) = param_1;\n                    *(*0x20 + -0x98) = 0x42485c;\n                    fcn.0040a680();\n                    unaff_RBX = *(*0x20 + 0x10);\n                }\n                *(*0x20 + -0x98) = 0x424875;\n                iVar7 = fcn.00429600(param_1);\n                if (iVar7 == 0) {\n                    pauVar14 = NULL;\n                    goto code_r0x004248ea;\n                }\n                iVar11 = *(*(unaff_R14 + 0x30) + 0xa0);\n                if ((iVar11 == 0) || (iVar4 = *(iVar11 + 0xdc8),  iVar4 == 0)) {\n                    pauVar14 = NULL;\ncode_r0x004248c0:\n                    if (pauVar14 == NULL) goto code_r0x004248ea;\n                    uVar6 = 0;\n                    goto code_r0x004249ff;\n                }\n                unaff_RDI = iVar4 - 1;\n                if (unaff_RDI < 0x80) {\n                    pauVar14 = *(iVar11 + 0xdc8 + iVar4 * 8);\n                    *(iVar11 + 0xdc8) = unaff_RDI;\n                    goto code_r0x004248c0;\n                }\n            }\n            uVar15 = unaff_RDI;\n            param_1 = 0x80;\n            *(*0x20 + -0x98) = 0x424fb5;\n            in_RAX = fcn.0045e240(0x80);\n        }\n        *(puVar13 + 8) = in_RAX;\n        *(puVar13 + 0x10) = unaff_RBX;\n        puVar13[0x18] = param_1;\n        puVar13[0x19] = uVar15;\n        *(puVar13 + -8) = 0x424fce;\n        fcn.004602a0();\n        in_RAX = *(puVar13 + 8);\n        unaff_RBX = *(puVar13 + 0x10);\n        param_1 = puVar13[0x18];\n        unaff_RDI = puVar13[0x19];\n        *0x20 = puVar13;\n    } while( true );\n}\n",
        "token_count": 4742
    },
    "00425440": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00425440(uchar param_1)\n\n{\n    uint64_t *puVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    int16_t iVar4;\n    ulong arg1;\n    ulong *puVar5;\n    int64_t in_RAX;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = param_1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*(unaff_RBX + 99) == '\\x01') {\n                iVar4 = *(unaff_RBX + 0x60);\n                *(*0x20 + -0x2a) = iVar4;\n                if ((iVar4 == 0) && (*(in_RAX + 0x10138) == *(unaff_RBX + 0x58))) {\n                    LOCK();\n                    *(in_RAX + 0x10158) = *(in_RAX + 0x10158) - *(unaff_RBX + 0x20);\n                    uVar7 = *(unaff_RBX + 0x18);\n                    uVar9 = uVar7 + 0x800000000000 >> 0x2a;\n                    if (uVar9 < 0x40) {\n                        puVar2 = *(*(uVar9 * 8 + 0x7d3e10) + (uVar7 + 0x800000000000 >> 0x16 & 0xfffff) * 8) +\n                                 (uVar7 >> 0x10 & 0x3f) + 0x21000;\n                        LOCK();\n                        *puVar2 = *puVar2 & ~(1 << (uVar7 >> 0xd & 7));\ncode_r0x00425534:\n                        *(*0x20 + -0x10) = *(unaff_RBX + 0x20) << 0xd;\n                        *(*0x20 + -0x58) = 0x425550;\n                        fcn.0042cbe0();\n                        if (*(*0x20 + 0x18) == '\\0') {\n                            *(*0x20 + -0x58) = 0x42556d;\n                            fcn.0042cbe0();\n                        }\n                        *(*0x20 + -0x58) = 0x425579;\n                        iVar6 = fcn.0042cca0();\n                        uVar3 = *(*0x20 + 0x18);\n                        uVar7 = uVar3;\n                        if (uVar3 < 2) {\n                            if (uVar3 == 0) {\n                                LOCK();\n                                puVar1 = iVar6 + 0x10;\n                                uVar7 = *puVar1;\n                                *puVar1 = *puVar1 - *(*0x20 + -0x10);\n                            }\n                            else {\n                                LOCK();\n                                puVar1 = iVar6 + 0x18;\n                                uVar7 = *puVar1;\n                                *puVar1 = *puVar1 - *(*0x20 + -0x10);\n                            }\n                        }\n                        else if (uVar3 == 2) {\n                            LOCK();\n                            puVar1 = iVar6 + 0x28;\n                            uVar7 = *puVar1;\n                            *puVar1 = *puVar1 - *(*0x20 + -0x10);\n                        }\n                        else if (uVar3 == 3) {\n                            LOCK();\n                            puVar1 = iVar6 + 0x20;\n                            uVar7 = *puVar1;\n                            *puVar1 = *puVar1 - *(*0x20 + -0x10);\n                        }\n                        *(*0x20 + -0x58) = 0x4255df;\n                        fcn.0042cd80(uVar7);\n                        arg1 = *(*(*0x20 + 0x10) + 0x20);\n                        *(*0x20 + -0x58) = 0x425608;\n                        fcn.00428660(arg1);\n                        puVar5 = *(*0x20 + 0x10);\n                        *(puVar5 + 99) = 0;\n                        iVar6 = *(*(unaff_R14 + 0x30) + 0xa0);\n                        if (iVar6 == 0) {\ncode_r0x00425649:\n                            iVar6 = *(*0x20 + 8);\n                            *(iVar6 + 0x16a68) = *(iVar6 + 0x16a68) - *(iVar6 + 0x16a38);\n                            *puVar5 = *(iVar6 + 0x16a50);\n                            *(iVar6 + 0x16a50) = puVar5;\n                            return;\n                        }\n                        uVar7 = *(iVar6 + 0xdc8);\n                        if (0x7f < uVar7) goto code_r0x00425649;\n                        if (uVar7 < 0x80) {\n                            *(iVar6 + 0xdd0 + uVar7 * 8) = puVar5;\n                            *(iVar6 + 0xdc8) = *(iVar6 + 0xdc8) + 1;\n                            return;\n                        }\n                        *(*0x20 + -0x58) = 0x425688;\n                        fcn.0045e240(0x80);\n                        goto code_r0x00425688;\n                    }\n                    goto code_r0x004256aa;\n                }\n            }\n            else {\n                if (*(unaff_RBX + 99) == '\\x02') {\n                    if (*(unaff_RBX + 0x60) == 0) goto code_r0x00425534;\ncode_r0x00425688:\n                    *(*0x20 + -0x58) = 0x425699;\n                    fcn.00433c80();\n                }\n                unaff_RBX = 0x29;\n                *(*0x20 + -0x58) = 0x4256aa;\n                fcn.00433c80();\ncode_r0x004256aa:\n                *(*0x20 + -0x58) = 0x4256b7;\n                in_RAX = fcn.0045e260(0x40);\n            }\n            uVar7 = *(unaff_RBX + 0x58);\n            *(*0x20 + -0x18) = uVar7;\n            *(*0x20 + -0x20) = *(in_RAX + 0x10138);\n            *(*0x20 + -0x28) = *(unaff_RBX + 0x18);\n            *(*0x20 + -0x58) = 0x4256d8;\n            fcn.00435540();\n            param_1 = uVar7;\n            *(*0x20 + -0x58) = 0x4256e9;\n            fcn.00435e40();\n            *(*0x20 + -0x58) = 0x4256f3;\n            fcn.00435e00();\n            *(*0x20 + -0x58) = 0x425705;\n            fcn.00435e40();\n            *(*0x20 + -0x58) = 0x42570f;\n            fcn.00435ca0();\n            *(*0x20 + -0x58) = 0x425725;\n            fcn.00435e40();\n            *(*0x20 + -0x58) = 0x42572f;\n            fcn.00435b40();\n            *(*0x20 + -0x58) = 0x425745;\n            fcn.00435e40();\n            *(*0x20 + -0x58) = 0x42574f;\n            fcn.00435b40();\n            *(*0x20 + -0x58) = 0x425765;\n            fcn.00435e40();\n            *(*0x20 + -0x58) = 0x42576f;\n            fcn.00435b40();\n            *(*0x20 + -0x58) = 0x425774;\n            fcn.004357a0();\n            *(*0x20 + -0x58) = 0x425779;\n            fcn.004355c0();\n            unaff_RBX = 0x23;\n            *(*0x20 + -0x58) = 0x42578a;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        puVar8[0x18] = param_1;\n        *(puVar8 + -8) = 0x42579e;\n        fcn.0045bb60();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        param_1 = puVar8[0x18];\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 2139
    },
    "00426220": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00426220(ulong arg1)\n\n{\n    char cVar1;\n    ulong uVar2;\n    ulong *puVar3;\n    int64_t in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            cVar1 = *(in_RAX + 10);\n            if (cVar1 == '\\x01') {\n                uVar2 = *(in_RAX + 0x18);\n                *(*0x20 + -0x38) = 0x4262d0;\n                fcn.00414d20(uVar2);\n                *(*0x20 + -0x38) = 0x4262de;\n                fcn.0040a460();\n                *0x7da778 = *0x7da778 - *0x7da748;\n                puVar3 = *(*0x20 + 8);\n                *puVar3 = *0x7da760;\n                *(*0x20 + -0x38) = 0x426318;\n                *0x7da760 = puVar3;\n                fcn.0040a680();\n                return;\n            }\n            if (cVar1 == '\\x02') {\n                uVar2 = *(in_RAX + 0x10);\n                *(*0x20 + -0x38) = 0x42626c;\n                fcn.0042afc0(arg1, uVar2);\n                *(*0x20 + -0x38) = 0x42627a;\n                fcn.0040a460();\n                *0x7da7c0 = *0x7da7c0 - *0x7da790;\n                puVar3 = *(*0x20 + 8);\n                *puVar3 = *0x7da7a8;\n                *(*0x20 + -0x38) = 0x4262b3;\n                *0x7da7a8 = puVar3;\n                fcn.0040a680();\n                return;\n            }\n            if (cVar1 == '\\x03') {\n                *(in_RAX + 0x10) = 1;\n                return;\n            }\n            unaff_RBX = 0x10;\n            *(*0x20 + -0x38) = 0x426333;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x426348;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 770
    },
    "0042a7a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0042a7a0(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*(in_RAX + 0x10) == 2) || (*(in_RAX + 0x10) == 3)) {\n                return in_RAX + *(in_RAX + 0x28) * 8 + 0x30;\n            }\n            *(*0x20 + -0x20) = 0x42a7ed;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x42a7f8;\n        fcn.0045bb60();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 309
    },
    "0042a800": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong * fcn.0042a800(ulong *arg1)\n\n{\n    ulong *in_RAX;\n    ulong *puVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    ulong *arg2;\n    ulong *puVar5;\n    int64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    ulong *unaff_RSI;\n    ulong *unaff_RDI;\n    char cVar7;\n    uint64_t in_R8;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    \ncode_r0x0042a800:\n    puVar4 = *0x7ad068;\n    cVar7 = in_R8;\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0x48;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x20) = unaff_RDI;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + 0x10) = unaff_RBX;\n        if (*0x7ad068 != NULL) {\ncode_r0x0042a8b2:\n            cVar7 = in_R8;\n            uVar8 = 0;\n            for (iVar3 = 0; iVar3 < unaff_RDI; iVar3 = iVar3 + 1) {\n                uVar8 = (arg1[iVar3] + uVar8) * 0x401;\n                uVar8 = uVar8 >> 6 ^ uVar8;\n            }\n            uVar8 = (uVar8 + unaff_RBX) * 0x401;\n            uVar8 = (uVar8 >> 6 ^ uVar8) * 9;\n            uVar8 = uVar8 >> 0xb ^ uVar8;\n            if (uVar8 % 179999 < 179999) {\n                puVar4 = puVar4 + uVar8 % 179999;\n                puVar1 = *puVar4;\n                do {\n                    cVar7 = in_R8;\n                    if (puVar1 == NULL) {\n                        if (cVar7 == '\\0') {\n                            return NULL;\n                        }\n                        *(*0x20 + -0x30) = uVar8;\n                        *(*0x20 + -0x10) = puVar4;\n                        *(*0x20 + -0x50) = 0x42a993;\n                        fcn.0040a460();\n                        arg1 = *(*0x20 + -0x10);\n                        arg2 = *arg1;\n                        iVar3 = *(*0x20 + 0x18);\n                        puVar4 = *(*0x20 + 0x20);\n                        unaff_RDI = *(*0x20 + 0x10);\n                        in_R8 = *(*0x20 + -0x30);\n                        uVar8 = *(*0x20 + 8);\n                        puVar5 = in_RAX;\n                        do {\n                            if (arg2 == NULL) {\n                                *(*0x20 + -0x50) = 0x42aa05;\n                                puVar1 = fcn.0042a6a0();\n                                arg2 = puVar1[5];\n                                if (0x20 < arg2) {\n                                    iVar3 = 0x20;\n                                    *(*0x20 + -0x50) = 0x42aacb;\n                                    iVar2 = fcn.0045e360(arg1, arg2);\n                                    goto code_r0x0042aacb;\n                                }\n                                *(*0x20 + -0x20) = puVar1;\n                                if (*(*0x20 + 0x20) < arg2) {\n                                    arg2 = *(*0x20 + 0x20);\n                                }\n                                if (*(*0x20 + 0x18) != puVar1 + 6) {\n                                    *(*0x20 + -0x50) = 0x42aa45;\n                                    fcn.0045ebc0(arg2 << 3);\n                                    puVar1 = *(*0x20 + -0x20);\n                                }\n                                puVar1[3] = *(*0x20 + -0x30);\n                                puVar1[4] = *(*0x20 + 0x10);\n                                if (*(*0x20 + 8) == 1) {\n                                    puVar4 = 0x7ad090;\n                                }\n                                else if (*(*0x20 + 8) == 3) {\n                                    puVar4 = 0x7ad0e0;\n                                }\n                                else {\n                                    puVar4 = 0x7ad060;\n                                }\n                                puVar5 = *(*0x20 + -0x10);\n                                *puVar1 = *puVar5;\n                                puVar1[1] = *puVar4;\n                                *puVar5 = puVar1;\n                                *puVar4 = puVar1;\n                                *(*0x20 + -0x50) = 0x42aab1;\n                                fcn.0040a680();\n                                return *(*0x20 + -0x20);\n                            }\n                            if (((arg2[2] == uVar8) && (arg2[3] == in_R8)) && (arg2[4] == unaff_RDI)) {\n                                puVar5 = arg2[5];\n                                if (0x20 < puVar5) {\n                                    unaff_RBX = 0x20;\n                                    *(*0x20 + -0x50) = 0x42ab19;\n                                    in_RAX = puVar5;\n                                    iVar3 = fcn.0045e360(arg1, puVar5);\n                                    goto code_r0x0042ab19;\n                                }\n                                if (puVar4 == puVar5) {\n                                    iVar2 = 0;\n                                    while( true ) {\n                                        if (puVar5 <= iVar2) {\n                                            *(*0x20 + -0x28) = arg2;\n                                            *(*0x20 + -0x50) = 0x42aafd;\n                                            fcn.0040a680();\n                                            return *(*0x20 + -0x28);\n                                        }\n                                        puVar1 = arg2[iVar2 + 6];\n                                        if (*(iVar3 + iVar2 * 8) != puVar1) break;\ncode_r0x0042aacb:\n                                        iVar2 = iVar2 + 1;\n                                    }\n                                }\n                            }\n                            arg2 = *arg2;\n                        } while( true );\n                    }\n                    if (((puVar1[2] == in_RAX) && (puVar1[3] == uVar8)) && (puVar1[4] == unaff_RBX)) {\n                        puVar5 = puVar1[5];\n                        if (0x20 < puVar5) goto code_r0x0042ab45;\n                        if (unaff_RDI == puVar5) {\n                            iVar3 = 0;\n                            while( true ) {\n                                if (puVar5 <= iVar3) {\n                                    return puVar1;\n                                }\n                                if (arg1[iVar3] != puVar1[iVar3 + 6]) break;\ncode_r0x0042ab19:\n                                iVar3 = iVar3 + 1;\n                            }\n                        }\n                    }\n                    puVar1 = *puVar1;\n                } while( true );\n            }\n            goto code_r0x0042ab4f;\n        }\n        *(*0x20 + 0x30) = cVar7;\n        *(*0x20 + -0x50) = 0x42a84b;\n        fcn.0040a460();\n        puVar1 = *0x7ad068;\n        if (*0x7ad068 != NULL) {\ncode_r0x0042a880:\n            *0x7ad068 = puVar1;\n            *(*0x20 + -0x18) = *0x7ad068;\n            *(*0x20 + -0x50) = 0x42a893;\n            fcn.0040a680();\n            in_RAX = *(*0x20 + 8);\n            arg1 = *(*0x20 + 0x18);\n            unaff_RBX = *(*0x20 + 0x10);\n            unaff_RDI = *(*0x20 + 0x20);\n            in_R8 = *(*0x20 + 0x30);\n            puVar4 = *(*0x20 + -0x18);\n            goto code_r0x0042a8b2;\n        }\n        *(*0x20 + -0x50) = 0x42a869;\n        arg1 = *0x7ad068;\n        puVar1 = fcn.00414420();\n        if (puVar1 != NULL) goto code_r0x0042a880;\n        goto code_r0x0042ab59;\n    }\n    goto code_r0x0042ab6b;\ncode_r0x0042ab45:\n    *(*0x20 + -0x50) = 0x42ab4f;\n    fcn.0045e360(arg1, puVar5);\ncode_r0x0042ab4f:\n    arg1 = 0x2bf1f;\n    *(*0x20 + -0x50) = 0x42ab59;\n    fcn.0045e240(179999);\ncode_r0x0042ab59:\n    unaff_RBX = 0x1f;\n    *(*0x20 + -0x50) = 0x42ab6a;\n    in_RAX = fcn.00433c80();\n    unaff_RSI = puVar4;\ncode_r0x0042ab6b:\n    *(puVar6 + 8) = in_RAX;\n    *(puVar6 + 0x10) = unaff_RBX;\n    *(puVar6 + 0x18) = arg1;\n    *(puVar6 + 0x20) = unaff_RDI;\n    *(puVar6 + 0x28) = unaff_RSI;\n    puVar6[0x30] = cVar7;\n    *(puVar6 + -8) = 0x42ab8e;\n    fcn.0045bb60();\n    in_RAX = *(puVar6 + 8);\n    unaff_RBX = *(puVar6 + 0x10);\n    arg1 = *(puVar6 + 0x18);\n    unaff_RDI = *(puVar6 + 0x20);\n    unaff_RSI = *(puVar6 + 0x28);\n    in_R8 = puVar6[0x30];\n    *0x20 = puVar6;\n    goto code_r0x0042a800;\n}\n",
        "token_count": 2419
    },
    "0042abc0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042abf0)\n\nvoid fcn.0042abc0(void)\n\n{\n    uint32_t uVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            if ((*0x8019f4 & 1) != 0) {\n                *0x8019f4 = *0x8019f4 | 1;\n                return;\n            }\n            *(*0x20 + -0x14) = *0x8019f4;\n            *(*0x20 + -0x30) = 0x42ac14;\n            *0x8019f4 = *0x8019f4 | 1;\n            fcn.0040a460();\n            uVar1 = (*(*0x20 + -0x14) >> 1) % 3;\n            if (uVar1 < 3) {\n                *(*0x20 + -0x18) = uVar1;\n                *(*0x20 + -0x10) = uVar1 * 8 + 0x801c50;\n                *(*0x20 + -0x30) = 0x42ac4f;\n                fcn.0040a460();\n                *(*0x20 + -0x30) = 0x42ac58;\n                fcn.0042aca0();\n                *(*0x20 + -0x30) = 0x42ac65;\n                fcn.0040a680();\n                *(*0x20 + -0x30) = 0x42ac73;\n                fcn.0040a680();\n                return;\n            }\n            *(*0x20 + -0x30) = 0x42ac91;\n            fcn.0045e240(3);\n        }\n        *(puVar2 + -8) = 0x42ac97;\n        fcn.0045bb60();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 539
    },
    "0042aca0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0042aca0(void)\n\n{\n    uint32_t in_EAX;\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = in_EAX;\n            if (uVar1 < 3) {\n                *(*0x20 + -0x10) = uVar1;\n                iVar3 = *0x7ad090;\n                while (iVar3 != 0) {\n                    *(*0x20 + -0x18) = iVar3;\n                    *(*0x20 + -0x30) = 0x42ace6;\n                    piVar2 = fcn.0042a740();\n                    uVar1 = *(*0x20 + -0x10);\n                    *piVar2 = *piVar2 + piVar2[uVar1 * 4 + 4];\n                    piVar2[1] = piVar2[1] + piVar2[uVar1 * 4 + 5];\n                    piVar2[2] = piVar2[2] + piVar2[uVar1 * 4 + 6];\n                    piVar2[3] = piVar2[3] + piVar2[uVar1 * 4 + 7];\n                    piVar2[uVar1 * 4 + 4] = 0;\n                    piVar2[uVar1 * 4 + 5] = 0;\n                    piVar2[uVar1 * 4 + 6] = 0;\n                    piVar2[uVar1 * 4 + 7] = 0;\n                    iVar3 = *(*(*0x20 + -0x18) + 8);\n                }\n                return uVar1;\n            }\n            *(*0x20 + -0x30) = 0x42ad5f;\n            in_EAX = fcn.0045e240(3);\n        }\n        *(puVar4 + 8) = in_EAX;\n        *(puVar4 + -8) = 0x42ad69;\n        fcn.0045bb60();\n        in_EAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 599
    },
    "0042ad80": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042ad80(void)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    uint64_t arg1;\n    ulong uVar3;\n    uint32_t uVar4;\n    uchar *unaff_RBX;\n    uchar *puVar5;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xf0 && *0x20 + -0xf0 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x170;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x180) = *0x20 + -8;\n            *(*0x20 + -0x178) = 0x42adcf;\n            fcn.0045e4b4();\n            unaff_RBP = *(*0x20 + -0x180);\n            unaff_RBX = *0x20 + -0x130;\n            *(*0x20 + -0x178) = 0x42adea;\n            arg1 = fcn.004558e0(0x20);\n            if (arg1 < 0x21) {\n                *(*0x20 + -0x13c) = (*0x8019f4 >> 1) + (((*0x8019f4 >> 1) + 2) / 3) * -3;\n                unaff_RBX = *(*0x20 + 0x10);\n                *(*0x20 + -0x178) = 0x42ae3d;\n                uVar3 = fcn.0042a800(*0x20 + -0x130);\n                *(*0x20 + -0x138) = uVar3;\n                *(*0x20 + -0x178) = 0x42ae47;\n                uVar3 = fcn.0042a740();\n                uVar4 = *(*0x20 + -0x13c) + 2;\n                if (uVar4 < 3) {\n                    *(*0x20 + -0x140) = uVar4;\n                    *(*0x20 + -0x30) = uVar3;\n                    *(*0x20 + -0x28) = uVar4 * 8 + 0x801c50;\n                    *(*0x20 + -0x178) = 0x42ae7f;\n                    fcn.0040a460();\n                    uVar4 = *(*0x20 + -0x140);\n                    iVar2 = *(*0x20 + -0x30);\n                    piVar1 = iVar2 + 0x20 + uVar4 * 0x20;\n                    *piVar1 = *piVar1 + 1;\n                    piVar1 = iVar2 + 0x30 + uVar4 * 0x20;\n                    *piVar1 = *piVar1 + *(*0x20 + 0x10);\n                    *(*0x20 + -0x178) = 0x42aeb0;\n                    fcn.0040a680();\n                    *(*0x20 + -0x20) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)))\n                    ;\n                    *(*0x20 + -0x10) = 0;\n                    *(*0x20 + -0x20) = 0x42af80;\n                    *(*0x20 + -0x18) = *(*0x20 + 8);\n                    *(*0x20 + -0x10) = *(*0x20 + -0x138);\n                    *(*0x20 + -0x170) = *0x20 + -0x20;\n                    *(*0x20 + -0x178) = 0x42af05;\n                    fcn.0045ba20();\n                    return;\n                }\n                *(*0x20 + -0x178) = 0x42af35;\n                arg1 = fcn.0045e240(3);\n            }\n            *(*0x20 + -0x178) = 0x42af45;\n            in_RAX = fcn.0045e280(arg1, 0x20);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + -8) = 0x42af55;\n        fcn.0045bb60();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1138
    },
    "0042afc0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042afc0(void)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    ulong uVar3;\n    uint32_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x20) = *0x8019f4;\n            *(*0x20 + -0x38) = 0x42afed;\n            uVar3 = fcn.0042a740();\n            uVar4 = (*(*0x20 + -0x20) >> 1) + 1;\n            unaff_RBX = uVar4 / 3;\n            uVar4 = (*(*0x20 + -0x20) >> 1) + (uVar4 / 3) * -3 + 1;\n            if (uVar4 < 3) {\n                *(*0x20 + -0x1c) = uVar4;\n                *(*0x20 + -0x18) = uVar3;\n                *(*0x20 + -0x10) = uVar4 * 8 + 0x801c50;\n                *(*0x20 + -0x38) = 0x42b031;\n                fcn.0040a460();\n                uVar4 = *(*0x20 + -0x1c);\n                iVar2 = *(*0x20 + -0x18);\n                piVar1 = iVar2 + 0x28 + uVar4 * 0x20;\n                *piVar1 = *piVar1 + 1;\n                piVar1 = iVar2 + 0x38 + uVar4 * 0x20;\n                *piVar1 = *piVar1 + *(*0x20 + 0x10);\n                *(*0x20 + -0x38) = 0x42b059;\n                fcn.0040a680();\n                return;\n            }\n            *(*0x20 + -0x38) = 0x42b06f;\n            in_RAX = fcn.0045e240(3);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + -8) = 0x42b07f;\n        fcn.0045bb60();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 698
    },
    "0042cca0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0042cca0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    iVar4 = *(*(unaff_R14 + 0x30) + 0xa0);\n    if (iVar4 == 0) {\n        fcn.0040a460(in_RAX + 0xdd0);\n    }\n    else {\n        LOCK();\n        piVar1 = iVar4 + 0x227c;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + 1;\n        if ((iVar2 + 1U & 1) == 0) goto code_r0x0042cd32;\n    }\n    uVar5 = *(in_RAX + 0xdc8) % 3;\n    if (uVar5 < 3) {\n        return in_RAX + uVar5 * 0x498;\n    }\n    fcn.0045e240(3);\ncode_r0x0042cd32:\n    fcn.00435540();\n    fcn.00435e40();\n    fcn.00435b40();\n    fcn.004357a0();\n    fcn.004355c0();\n    fcn.00433c80();\n    pcVar3 = swi(3);\n    iVar4 = (*pcVar3)();\n    return iVar4;\n}\n",
        "token_count": 338
    },
    "0042eca0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042eca0(void)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x24) = 0;\n            *(*0x20 + -0x1c) = 0;\n            *(*0x20 + -0x70) = *0x7ad020;\n            *(*0x20 + -0x68) = *0x20 + -0x20;\n            *(*0x20 + -0x60) = *0x20 + -0x24;\n            *(*0x20 + -0x58) = *0x20 + -0x1c;\n            *(*0x20 + -0x78) = 0x42ecfe;\n            fcn.00430e80();\n            uVar7 = 0;\n            uVar8 = 0;\n            uVar9 = 0;\n            uVar10 = 0;\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            if ((*(*0x20 + -0x20) < 10) ||\n               (((*(*0x20 + -0x20) == 10 && (*(*0x20 + -0x24) == 0)) && (*(*0x20 + -0x1c) < 0x3ad7)))) {\n                return;\n            }\n            *(*0x20 + -0x78) = 0x42ed45;\n            iVar3 = fcn.00430d20();\n            puVar1 = iVar3 + 3;\n            *(*0x20 + -0x10) = puVar1;\n            uVar2 = *puVar1;\n            *(*0x20 + -0x25) = uVar2;\n            *puVar1 = uVar2 | 0x80;\n            *(*0x20 + -0x78) = 0x42ed70;\n            fcn.0042f560(0x21);\n            uVar5 = *0x801b78;\n            if (*0x801b78 < 0x106) {\n                *(*0x20 + -0x18) = *0x801b78;\n                *(*0x20 + -0x78) = 0x42eda5;\n                fcn.0045ebc0(*0x801b78);\n                iVar3 = *(*0x20 + -0x18);\n                for (iVar4 = 0; iVar4 < 0x20; iVar4 = iVar4 + 1) {\n                    uVar5 = iVar3 + iVar4 * 2;\n                    if (0x20a < uVar5) goto code_r0x0042ef25;\n                    *(uVar5 + 0x8026c0) = *((*(iVar4 + 0x8028aa) >> 4) + 0x4b0db9);\n                    if (0x20a < iVar3 + iVar4 * 2 + 1U) goto code_r0x0042ef15;\n                    *(uVar5 + 0x8026c1) = *((*(iVar4 + 0x8028aa) & 0xf) + 0x4b0db9);\n                }\n                uVar5 = iVar3 + 0x40;\n                while( true ) {\n                    if (0x209 < uVar5) {\n                        *(*0x20 + -0x70) = *0x795258;\n                        *(*0x20 + -0x68) = 0x8026c0;\n                        *(*0x20 + -0x60) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                        *(*0x20 + -0x50) = 0;\n                        *(*0x20 + -0x48) = 3;\n                        *(*0x20 + -0x40) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                        *(*0x20 + -0x78) = 0x42ee93;\n                        fcn.00431080();\n                        *(*0x20 + -0x78) = 0x42eeac;\n                        fcn.0045f700();\n                        if (*(*0x20 + -0x70) != 3) {\n                            *0x8019a2 = 1;\n                            return;\n                        }\n                        **(*0x20 + -0x10) = *(*0x20 + -0x25);\n                        *(*0x20 + -0x78) = 0x42eed7;\n                        fcn.00435540();\n                        *(*0x20 + -0x78) = 0x42eee8;\n                        fcn.00435e40();\n                        *(*0x20 + -0x78) = 0x42eeed;\n                        fcn.004355c0();\n                        return;\n                    }\n                    if (0x20a < uVar5) break;\n                    *(uVar5 + 0x8026c0) = 0x41;\n                    uVar5 = uVar5 + 1;\n                }\n                *(*0x20 + -0x78) = 0x42ef15;\n                fcn.0045e240(0x20b);\ncode_r0x0042ef15:\n                *(*0x20 + -0x78) = 0x42ef25;\n                fcn.0045e240(0x20b);\ncode_r0x0042ef25:\n                uVar5 = 0x20b;\n                *(*0x20 + -0x78) = 0x42ef32;\n                fcn.0045e240(0x20b);\n            }\n            *(*0x20 + -0x78) = 0x42ef3c;\n            fcn.0045e2a0(uVar5, 0x105);\n        }\n        *(puVar6 + -8) = 0x42ef45;\n        fcn.0045bb60();\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1524
    },
    "004347a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.004347a0(void)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    int64_t in_RAX;\n    uchar uVar3;\n    int64_t iVar4;\n    int32_t iVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t iVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    uint32_t uVar10;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar11;\n    \ncode_r0x004347a0:\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n        puVar6 = *0x20 + -0x70;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        iVar7 = *(*(unaff_R14 + 0x30) + 0x90);\n        if ((iVar7 == 0) || (*(iVar7 + 0x90) != 2)) {\n            *(*0x20 + 8) = in_RAX;\n            uVar3 = 0;\n            iVar4 = 0;\n            iVar5 = 0;\n            iVar7 = 0;\n            iVar8 = 0;\n            iVar9 = 0;\n            do {\n                *(*0x20 + -0x40) = iVar9;\n                *(*0x20 + -0x38) = iVar7;\n                *(*0x20 + -0x50) = iVar5;\n                *(*0x20 + -0x20) = iVar4;\n                *(*0x20 + -0x5a) = uVar3;\n                *(*0x20 + -0x30) = iVar8;\n                uVar10 = *(in_RAX + 0x90);\n                if (uVar10 < 5) {\n                    if (uVar10 != 1) {\n                        if (uVar10 == 2) {\n                            if (*(in_RAX + 0xb2) == '\\0') {\n                                bVar11 = false;\n                            }\n                            else if (*(in_RAX + 0xb1) == '\\0') {\n                                bVar11 = false;\n                            }\n                            else if (*(in_RAX + 0x10) == -0x522) {\n                                if (*(in_RAX + 0x30) == iVar4) {\n                                    bVar11 = *(iVar4 + 0x300) == iVar5;\n                                }\n                                else {\n                                    bVar11 = false;\n                                }\n                            }\n                            else {\n                                bVar11 = false;\n                            }\n                            if (!bVar11) {\n                                *(*0x20 + -0x78) = 0x4348b8;\n                                cVar2 = fcn.00438040(0x1002);\n                                if (cVar2 == '\\0') {\n                                    iVar8 = *(*0x20 + -0x30);\n                                    iVar9 = *(*0x20 + -0x40);\n                                    uVar3 = *(*0x20 + -0x5a);\n                                    iVar4 = *(*0x20 + -0x20);\n                                    iVar5 = *(*0x20 + -0x50);\n                                    iVar7 = *(*0x20 + -0x38);\n                                }\n                                else {\n                                    iVar7 = *(*0x20 + 8);\n                                    *(iVar7 + 0xb1) = 0x101;\n                                    *(iVar7 + 0x10) = 0xfffffffffffffade;\n                                    iVar7 = *(iVar7 + 0x30);\n                                    *(*0x20 + -0x10) = iVar7;\n                                    iVar5 = *(iVar7 + 0x300);\n                                    *(*0x20 + -0x4c) = iVar5;\n                                    if (*(*0x20 + -0x20) == iVar7) {\n                                        bVar11 = iVar5 != *(*0x20 + -0x50);\n                                    }\n                                    else {\n                                        bVar11 = true;\n                                    }\n                                    *(*0x20 + -0x59) = bVar11;\n                                    *(*0x20 + -0x78) = 0x434925;\n                                    fcn.00437c80(2);\n                                    if ((*0x801e98 == 0) && (*(*0x20 + -0x59) != '\\0')) {\n                                        *(*0x20 + -0x78) = 0x43493d;\n                                        fcn.0045fb60();\n                                        iVar7 = *(*0x20 + -0x38);\n                                        if (iVar7 <= *(*0x20 + -0x70)) {\n                                            *(*0x20 + -0x48) = *(*0x20 + -0x70);\n                                            *(*0x20 + -0x78) = 0x43496e;\n                                            fcn.004313a0();\n                                            iVar7 = *(*0x20 + -0x48) + 5000;\n                                        }\n                                    }\n                                    else {\n                                        iVar7 = *(*0x20 + -0x38);\n                                    }\n                                    iVar8 = *(*0x20 + -0x30);\n                                    iVar9 = *(*0x20 + -0x40);\n                                    iVar4 = *(*0x20 + -0x10);\n                                    iVar5 = *(*0x20 + -0x4c);\n                                    uVar3 = *(*0x20 + -0x5a);\n                                }\n                            }\n                            goto code_r0x00434a90;\n                        }\n                        if (uVar10 < 3) goto code_r0x004349fa;\n                    }\ncode_r0x00434a52:\n                    *(*0x20 + -0x5a) = uVar3;\n                    *(*0x20 + -0x78) = 0x434a66;\n                    cVar2 = fcn.00438040(uVar10 | 0x1000);\n                    if (cVar2 != '\\0') {\n                        piVar1 = *(*0x20 + 8);\n                        *(piVar1 + 0xb1) = 0;\n                        piVar1[2] = *piVar1 + 0x13a0;\n                        return piVar1;\n                    }\n                    iVar8 = *(*0x20 + -0x30);\n                    iVar9 = *(*0x20 + -0x40);\n                    uVar3 = *(*0x20 + -0x5a);\n                    iVar4 = *(*0x20 + -0x20);\n                    iVar5 = *(*0x20 + -0x50);\n                    iVar7 = *(*0x20 + -0x38);\n                }\n                else {\n                    if (uVar10 == 6) {\n                        return NULL;\n                    }\n                    if (uVar10 != 8) {\n                        if (uVar10 == 9) {\n                            *(*0x20 + -0x78) = 0x434a1a;\n                            cVar2 = fcn.004385e0(4);\n                            if (cVar2 != '\\0') {\n                                uVar10 = 4;\n                                uVar3 = 1;\n                                goto code_r0x00434a52;\n                            }\n                            iVar8 = *(*0x20 + -0x30);\n                            iVar9 = *(*0x20 + -0x40);\n                            uVar3 = *(*0x20 + -0x5a);\n                            iVar4 = *(*0x20 + -0x20);\n                            iVar5 = *(*0x20 + -0x50);\n                            iVar7 = *(*0x20 + -0x38);\n                        }\n                        else {\ncode_r0x004349fa:\n                            if ((uVar10 >> 0xc & 1) == 0) goto code_r0x00434bb3;\n                        }\n                    }\n                }\ncode_r0x00434a90:\n                *(*0x20 + -0x38) = iVar7;\n                *(*0x20 + -0x50) = iVar5;\n                *(*0x20 + -0x20) = iVar4;\n                *(*0x20 + -0x5a) = uVar3;\n                if (iVar8 == 0) {\n                    *(*0x20 + -0x78) = 0x434aac;\n                    fcn.0045fb60();\n                    iVar9 = *(*0x20 + -0x70) + 10000;\n                }\n                *(*0x20 + -0x40) = iVar9;\n                *(*0x20 + -0x78) = 0x434ad5;\n                fcn.0045fb60();\n                if (*(*0x20 + -0x70) < *(*0x20 + -0x40)) {\n                    *(*0x20 + -0x70) = 10;\n                    *(*0x20 + -0x78) = 0x434b05;\n                    fcn.0045d940();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    iVar9 = *(*0x20 + -0x40);\n                }\n                else {\n                    *(*0x20 + -0x70) = 0x719768;\n                    *(*0x20 + -0x78) = 0x434b35;\n                    fcn.0045ba20();\n                    *(*0x20 + -0x78) = 0x434b4e;\n                    fcn.0045fb60();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    iVar9 = *(*0x20 + -0x70) + 5000;\n                }\n                iVar8 = *(*0x20 + -0x30) + 1;\n                in_RAX = *(*0x20 + 8);\n                iVar7 = *(*0x20 + -0x38);\n                iVar5 = *(*0x20 + -0x50);\n                iVar4 = *(*0x20 + -0x20);\n                uVar3 = *(*0x20 + -0x5a);\n            } while( true );\n        }\n        goto code_r0x00434ccb;\n    }\n    goto code_r0x00434cdd;\ncode_r0x00434bb3:\n    *(*0x20 + -0x18) = unaff_R14;\n    *(*0x20 + -0x54) = *(in_RAX + 0x90);\n    *(*0x20 + -0x28) = *(in_RAX + 0x98);\n    *(*0x20 + -0x78) = 0x434bd3;\n    fcn.00435540();\n    *(*0x20 + -0x78) = 0x434be5;\n    fcn.00435e40();\n    *(*0x20 + -0x78) = 0x434bef;\n    fcn.00435dc0();\n    *(*0x20 + -0x78) = 0x434c05;\n    fcn.00435e40();\n    *(*0x20 + -0x78) = 0x434c0f;\n    fcn.00435c40();\n    *(*0x20 + -0x78) = 0x434c25;\n    fcn.00435e40();\n    *(*0x20 + -0x78) = 0x434c30;\n    fcn.00435b40();\n    *(*0x20 + -0x78) = 0x434c35;\n    fcn.004357a0();\n    *(*0x20 + -0x78) = 0x434c3a;\n    fcn.004355c0();\n    *(*0x20 + -0x58) = *(*(*0x20 + -0x18) + 0x90);\n    *(*0x20 + -0x28) = *(*(*0x20 + -0x18) + 0x98);\n    *(*0x20 + -0x78) = 0x434c5a;\n    fcn.00435540();\n    *(*0x20 + -0x78) = 0x434c6b;\n    fcn.00435e40();\n    *(*0x20 + -0x78) = 0x434c75;\n    fcn.00435dc0();\n    *(*0x20 + -0x78) = 0x434c86;\n    fcn.00435e40();\n    *(*0x20 + -0x78) = 0x434c90;\n    fcn.00435c40();\n    *(*0x20 + -0x78) = 0x434ca5;\n    fcn.00435e40();\n    *(*0x20 + -0x78) = 0x434cb0;\n    fcn.00435b40();\n    *(*0x20 + -0x78) = 0x434cb5;\n    fcn.004357a0();\n    *(*0x20 + -0x78) = 0x434cba;\n    fcn.004355c0();\n    *(*0x20 + -0x78) = 0x434ccb;\n    fcn.00433c80();\ncode_r0x00434ccb:\n    *(*0x20 + -0x78) = 0x434cdc;\n    in_RAX = fcn.00433c80();\ncode_r0x00434cdd:\n    *(puVar6 + 8) = in_RAX;\n    *(puVar6 + -8) = 0x434ce7;\n    fcn.004602a0();\n    in_RAX = *(puVar6 + 8);\n    *0x20 = puVar6;\n    goto code_r0x004347a0;\n}\n",
        "token_count": 3007
    },
    "00435000": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00435000(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint64_t *in_RAX;\n    int64_t iVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    ulong arg2;\n    int64_t unaff_RBX;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = in_RAX[6];\n            if (*(uVar6 + 0x90) != in_RAX) {\n                return 0;\n            }\n            if ((((*(uVar6 + 0xa0) == 0) || (*(uVar6 + 0xd8) != 0)) || (*(uVar6 + 0xc0) != 0)) ||\n               ((*(uVar6 + 0xd0) != 0 || (*(*(uVar6 + 0xa0) + 4) != 1)))) {\n                return 0;\n            }\n            if ((arg1 < *in_RAX) || (arg1 - *in_RAX < *0x795378)) {\n                return 0;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x78) = 0x4350a7;\n            iVar4 = fcn.0044cfe0();\n            if (iVar4 == 0) {\n                return 0;\n            }\n            *(*0x20 + -0x10) = iVar4;\n            *(*0x20 + -0x18) = unaff_RBX;\n            unaff_RDI = *(*0x20 + 0x10);\n            *(*0x20 + -0x78) = 0x4350c9;\n            iVar3 = fcn.0044de40(0);\n            if (iVar3 == -2) {\n                return 0;\n            }\n            iVar4 = *(*0x20 + -0x10);\n            if (*(iVar4 + 0x27) < 2) {\n                iVar7 = *(*0x20 + -0x18);\n                uVar6 = 0;\n            }\n            else {\n                uVar1 = *(iVar4 + 0x27 + *(iVar4 + 0x1c) * 4 + 5);\n                iVar7 = *(*0x20 + -0x18);\n                unaff_RDI = (uVar1 == 0xffffffff) - 1;\n                uVar6 = uVar1 + *(iVar7 + 0x130) & unaff_RDI;\n            }\n            if ((uVar6 == 0) || ((*(iVar4 + 0x25) & 4) != 0)) {\n                return 0;\n            }\n            *(*0x20 + -0x44) = iVar3;\n            *(*0x20 + -0x40) = unaff_RBX;\n            *(*0x20 + -0x20) = iVar4 + 0x27;\n            *(*0x20 + -0x78) = 0x43514f;\n            piVar5 = fcn.0044d760();\n            if (*(*(*0x20 + -0x10) + 0x27) < 4) {\n                unaff_RBX = *(*0x20 + -0x18);\n                uVar6 = 0;\n            }\n            else {\n                uVar1 = *(*(*0x20 + -0x20) + *(*(*0x20 + -0x10) + 0x1c) * 4 + 0xd);\n                unaff_RBX = *(*0x20 + -0x18);\n                uVar6 = uVar1 + *(unaff_RBX + 0x130) & (uVar1 == 0xffffffff) - 1;\n            }\n            if (uVar6 == 0) {\ncode_r0x0043520a:\n                if (iVar7 < 8) {\n                    arg2 = 0;\n                }\n                else {\n                    arg2 = CONCAT71(0x2e656d69746e75, *piVar5 == 0x2e656d69746e7572);\n                }\n                if (arg2 == '\\0') {\n                    if (iVar7 < 0x11) {\n                        cVar2 = '\\0';\n                    }\n                    else {\n                        *(*0x20 + -0x38) = iVar7;\n                        *(*0x20 + -0x28) = piVar5;\n                        *(*0x20 + -0x78) = 0x435254;\n                        cVar2 = fcn.00402a00(0x11, arg2);\n                        iVar7 = *(*0x20 + -0x38);\n                        piVar5 = *(*0x20 + -0x28);\n                    }\n                }\n                else {\n                    cVar2 = '\\x01';\n                }\n                if (cVar2 != '\\0') {\n                    return 0;\n                }\n                if (iVar7 < 8) {\n                    bVar9 = false;\n                }\n                else {\n                    bVar9 = *piVar5 == 0x2e7463656c666572;\n                }\n                if (bVar9) {\n                    return 0;\n                }\n                if (*(*0x20 + -0x44) == -5) {\n                    *(*0x20 + -0x78) = 0x43530a;\n                    fcn.0044cf80();\n                    return 1;\n                }\n                if (1 < *(*0x20 + -0x44) + 4U) {\n                    return 1;\n                }\n                uVar6 = *(*0x20 + -0x40);\n                if (((uVar6 != 0) && (uVar6 <= *(*0x20 + 0x10))) && (*(*0x20 + 0x10) - uVar6 < 0x15)) {\n                    return 1;\n                }\n                unaff_RBX = 0xe;\n                *(*0x20 + -0x78) = 0x435373;\n                fcn.00433c80();\n            }\n            else {\n                *(*0x20 + -0x38) = iVar7;\n                *(*0x20 + -0x28) = piVar5;\n                *(*0x20 + -0x30) = uVar6;\n                unaff_RDI = *(*0x20 + 0x10);\n                *(*0x20 + -0x78) = 0x4351c5;\n                iVar3 = fcn.0044dda0(2);\n                if (iVar3 < 0) {\n                    iVar7 = *(*0x20 + -0x38);\n                    piVar5 = *(*0x20 + -0x28);\n                    goto code_r0x0043520a;\n                }\n                if (iVar3 < 0x100000) {\n                    uVar1 = *(*(*0x20 + -0x30) + 0xc + iVar3 * 0x14);\n                    iVar7 = *(*0x20 + -0x18);\n                    *(*0x20 + -0x78) = 0x4351f4;\n                    piVar5 = fcn.0044d8a0(uVar1);\n                    goto code_r0x0043520a;\n                }\n            }\n            arg1 = 0x100000;\n            *(*0x20 + -0x78) = 0x43537d;\n            in_RAX = fcn.0045e240(0x100000);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x20) = unaff_RDI;\n        *(puVar8 + -8) = 0x435397;\n        fcn.0045bb60();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        unaff_RDI = *(puVar8 + 0x20);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1943
    },
    "00437c80": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00437c80(ulong arg1)\n\n{\n    int64_t in_RAX;\n    uint32_t unaff_EBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + 0x14) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            if ((unaff_EBX - 0x1001 < 4) || (unaff_EBX == 0x1009)) {\n                if (arg1 == (unaff_EBX & 0xffffefff)) {\n                    LOCK();\n                    if (unaff_EBX == *(in_RAX + 0x90)) {\n                        *(in_RAX + 0x90) = arg1;\n                        return unaff_EBX;\n                    }\n                }\n                *(*0x20 + -0x48) = 0x437ceb;\n                fcn.00435540();\n                *(*0x20 + -0x48) = 0x437cfc;\n                fcn.00435e40();\n                *(*0x20 + -0x48) = 0x437d06;\n                fcn.00435dc0();\n                *(*0x20 + -0x48) = 0x437d17;\n                fcn.00435e40();\n                *(*0x20 + -0x48) = 0x437d25;\n                fcn.00435ca0();\n                *(*0x20 + -0x48) = 0x437d36;\n                fcn.00435e40();\n                *(*0x20 + -0x48) = 0x437d45;\n                fcn.00435ca0();\n                *(*0x20 + -0x48) = 0x437d4a;\n                fcn.004357a0();\n                *(*0x20 + -0x48) = 0x437d4f;\n                fcn.004355c0();\n                *(*0x20 + -0x18) = unaff_R14;\n                *(*0x20 + -0x2c) = *(*(*0x20 + 8) + 0x90);\n                *(*0x20 + -0x20) = *(*(*0x20 + 8) + 0x98);\n                *(*0x20 + -0x48) = 0x437d75;\n                fcn.00435540();\n                *(*0x20 + -0x48) = 0x437d86;\n                fcn.00435e40();\n                *(*0x20 + -0x48) = 0x437d90;\n                fcn.00435dc0();\n                *(*0x20 + -0x48) = 0x437da5;\n                fcn.00435e40();\n                *(*0x20 + -0x48) = 0x437daf;\n                fcn.00435c40();\n                *(*0x20 + -0x48) = 0x437dc5;\n                fcn.00435e40();\n                *(*0x20 + -0x48) = 0x437dd0;\n                fcn.00435b40();\n                *(*0x20 + -0x48) = 0x437dd5;\n                fcn.004357a0();\n                *(*0x20 + -0x48) = 0x437dda;\n                fcn.004355c0();\n                *(*0x20 + -0x30) = *(*(*0x20 + -0x18) + 0x90);\n                *(*0x20 + -0x20) = *(*(*0x20 + -0x18) + 0x98);\n                *(*0x20 + -0x48) = 0x437dfa;\n                fcn.00435540();\n                *(*0x20 + -0x48) = 0x437e0b;\n                fcn.00435e40();\n                *(*0x20 + -0x48) = 0x437e15;\n                fcn.00435dc0();\n                *(*0x20 + -0x48) = 0x437e26;\n                fcn.00435e40();\n                *(*0x20 + -0x48) = 0x437e30;\n                fcn.00435c40();\n                *(*0x20 + -0x48) = 0x437e45;\n                fcn.00435e40();\n                *(*0x20 + -0x48) = 0x437e50;\n                fcn.00435b40();\n                *(*0x20 + -0x48) = 0x437e55;\n                fcn.004357a0();\n                *(*0x20 + -0x48) = 0x437e5a;\n                fcn.004355c0();\n                *(*0x20 + -0x48) = 0x437e6b;\n                fcn.00433c80();\n            }\n            *(*0x20 + -0x48) = 0x437e70;\n            fcn.00435540();\n            *(*0x20 + -0x48) = 0x437e85;\n            fcn.00435e40();\n            *(*0x20 + -0x48) = 0x437e8f;\n            fcn.00435dc0();\n            *(*0x20 + -0x48) = 0x437ea5;\n            fcn.00435e40();\n            *(*0x20 + -0x48) = 0x437eb0;\n            fcn.00435ca0();\n            *(*0x20 + -0x48) = 0x437ec5;\n            fcn.00435e40();\n            *(*0x20 + -0x48) = 0x437ed0;\n            fcn.00435ca0();\n            *(*0x20 + -0x48) = 0x437ed5;\n            fcn.004357a0();\n            *(*0x20 + -0x48) = 0x437eda;\n            fcn.004355c0();\n            *(*0x20 + -0x10) = unaff_R14;\n            *(*0x20 + -0x24) = *(*(*0x20 + 8) + 0x90);\n            *(*0x20 + -0x20) = *(*(*0x20 + 8) + 0x98);\n            *(*0x20 + -0x48) = 0x437f05;\n            fcn.00435540();\n            *(*0x20 + -0x48) = 0x437f16;\n            fcn.00435e40();\n            *(*0x20 + -0x48) = 0x437f25;\n            fcn.00435dc0();\n            *(*0x20 + -0x48) = 0x437f36;\n            fcn.00435e40();\n            *(*0x20 + -0x48) = 0x437f45;\n            fcn.00435c40();\n            *(*0x20 + -0x48) = 0x437f56;\n            fcn.00435e40();\n            *(*0x20 + -0x48) = 0x437f65;\n            fcn.00435b40();\n            *(*0x20 + -0x48) = 0x437f6a;\n            fcn.004357a0();\n            *(*0x20 + -0x48) = 0x437f6f;\n            fcn.004355c0();\n            arg1._0_4_ = *(*(*0x20 + -0x10) + 0x90);\n            *(*0x20 + -0x28) = arg1;\n            *(*0x20 + -0x20) = *(*(*0x20 + -0x10) + 0x98);\n            *(*0x20 + -0x48) = 0x437f8f;\n            fcn.00435540();\n            *(*0x20 + -0x48) = 0x437fa5;\n            fcn.00435e40();\n            *(*0x20 + -0x48) = 0x437faf;\n            fcn.00435dc0();\n            *(*0x20 + -0x48) = 0x437fc5;\n            fcn.00435e40();\n            *(*0x20 + -0x48) = 0x437fcf;\n            fcn.00435c40();\n            *(*0x20 + -0x48) = 0x437fe5;\n            fcn.00435e40();\n            *(*0x20 + -0x48) = 0x437ff0;\n            fcn.00435b40();\n            *(*0x20 + -0x48) = 0x437ff5;\n            fcn.004357a0();\n            *(*0x20 + -0x48) = 0x437ffa;\n            fcn.004355c0();\n            unaff_EBX = 0x37;\n            *(*0x20 + -0x48) = 0x43800b;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_EBX;\n        *(puVar1 + 0x14) = arg1;\n        *(puVar1 + -8) = 0x43801e;\n        fcn.0045bb60();\n        in_RAX = *(puVar1 + 8);\n        unaff_EBX = *(puVar1 + 0x10);\n        arg1._0_4_ = *(puVar1 + 0x14);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 2287
    },
    "00438040": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00438040(ulong arg1)\n\n{\n    uint32_t *puVar1;\n    int64_t in_RAX;\n    uint32_t unaff_EBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar3;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + 0x14) = arg1;\n            if ((unaff_EBX - 1 < 4) && (arg1 == (unaff_EBX | 0x1000))) {\n                LOCK();\n                puVar1 = in_RAX + 0x90;\n                bVar3 = unaff_EBX == *puVar1;\n                if (bVar3) {\n                    *puVar1 = arg1;\n                }\n                else {\n                    unaff_EBX = *puVar1;\n                }\n                return unaff_EBX & 0xffffff00 | bVar3;\n            }\n            *(*0x20 + -0x20) = 0x438091;\n            fcn.00435540();\n            *(*0x20 + -0x20) = 0x4380a5;\n            fcn.00435e40();\n            *(*0x20 + -0x20) = 0x4380b0;\n            fcn.00435ca0();\n            *(*0x20 + -0x20) = 0x4380c5;\n            fcn.00435e40();\n            *(*0x20 + -0x20) = 0x4380d0;\n            fcn.00435ca0();\n            *(*0x20 + -0x20) = 0x4380d5;\n            fcn.004357a0();\n            *(*0x20 + -0x20) = 0x4380da;\n            fcn.004355c0();\n            unaff_EBX = 0x10;\n            *(*0x20 + -0x20) = 0x4380eb;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_EBX;\n        *(puVar2 + 0x14) = arg1;\n        *(puVar2 + -8) = 0x4380fe;\n        fcn.0045bb60();\n        in_RAX = *(puVar2 + 8);\n        unaff_EBX = *(puVar2 + 0x10);\n        arg1._0_4_ = *(puVar2 + 0x14);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 696
    },
    "null": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "0043b980": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0043b980(void)\n\n{\n    uint32_t uVar1;\n    uchar auVar2 [16];\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    uchar uVar10;\n    uint64_t arg1;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    int64_t unaff_R14;\n    bool bVar13;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = *(*(unaff_R14 + 0x30) + 0xa0);\n            *(*0x20 + -0x10) = uVar6;\n            iVar5 = 0;\n            iVar8 = 0;\n            uVar10 = 0;\n            while( true ) {\n                if (3 < iVar5) {\n                    return 0;\n                }\n                uVar11 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n                auVar2 = ZEXT816(uVar11) * ZEXT816(uVar11 ^ 0xe7037ed1a0b428db);\n                *(*(unaff_R14 + 0x30) + 0xf0) = uVar11;\n                if (*0x7adb80 == 0) goto code_r0x0043bcd2;\n                uVar11 = (SUB168(auVar2, 0) ^ SUB168(auVar2 >> 0x40, 0)) & 0xffffffff;\n                if (*0x7adb90 == 0) goto code_r0x0043bccd;\n                uVar12 = (uVar11 / *0x7adb80) % (*0x7adb90 & 0xffffffff);\n                arg1 = *0x7adb90;\n                if (*0x7adb90 <= uVar12) break;\n                *(*0x20 + -0x50) = iVar5;\n                uVar1 = *(*0x7adb88 + uVar12 * 4);\n                *(*0x20 + -0x28) = 0;\n                *(*0x20 + -0x24) = *0x7adb80;\n                *(*0x20 + -0x20) = uVar11 % *0x7adb80;\n                *(*0x20 + -0x1c) = uVar1;\n                uVar11 = uVar1 & 0xffffff00 | iVar5 == 3;\n                *(*0x20 + -0x5b) = iVar5 == 3;\n                while (*(*0x20 + -0x24) != *(*0x20 + -0x28)) {\n                    if (*0x7ae5e0 != 0) {\n                        return 0;\n                    }\n                    uVar1 = *(*0x20 + -0x20);\n                    arg1 = *0x7ada48;\n                    if (*0x7ada48 <= uVar1) {\ncode_r0x0043bcbd:\n                        *(*0x20 + -0x80) = 0x43bcc5;\n                        fcn.0045e240(arg1);\n                        goto code_r0x0043bcc5;\n                    }\n                    arg1 = *(*0x7ada40 + uVar1 * 8);\n                    uVar12 = *0x7ada40;\n                    if (uVar6 != arg1) {\n                        if (iVar5 != 3) {\n                            bVar13 = false;\ncode_r0x0043bb20:\n                            if (bVar13) {\n                                *(*0x20 + -0x18) = arg1;\n                                *(*0x20 + -0x30) = iVar8;\n                                *(*0x20 + -0x5a) = uVar10;\n                                *(*0x20 + -0x80) = 0x43bb45;\n                                iVar3 = fcn.0043c720();\n                                if (in_RAX == 0) {\n                                    iVar7 = *(*0x20 + -0x30);\ncode_r0x0043bb60:\n                                    iVar8 = iVar7;\n                                }\n                                else {\n                                    iVar7 = *(*0x20 + -0x30);\n                                    iVar8 = in_RAX;\n                                    if ((iVar7 != 0) && (iVar7 <= in_RAX)) goto code_r0x0043bb60;\n                                }\n                                if (iVar5 == '\\0') {\n                                    uVar10 = *(*0x20 + -0x5a);\n                                }\n                                else {\n                                    *(*0x20 + -0x58) = iVar3;\n                                    *(*0x20 + -0x38) = iVar8;\n                                    *(*0x20 + -0x80) = 0x43bb85;\n                                    iVar5 = fcn.004426e0();\n                                    if (iVar5 != 0) {\n                                        return iVar5;\n                                    }\n                                    iVar3 = *(*0x20 + -0x58);\n                                    iVar8 = *(*0x20 + -0x38);\n                                    uVar10 = 1;\n                                }\n                                uVar11 = *(*0x20 + -0x5b);\n                                arg1 = *(*0x20 + -0x18);\n                                uVar6 = *(*0x20 + -0x10);\n                                iVar5 = *(*0x20 + -0x50);\n                                in_RAX = iVar3;\n                            }\n                            uVar4 = *(*0x20 + -0x20) >> 5;\n                            uVar12 = *0x7adac8;\n                            if (uVar4 < *0x7adac8) {\n                                uVar1 = *(*0x7adac0 + uVar4 * 4);\n                                uVar12 = uVar1;\n                                if ((uVar1 >> (*(*0x20 + -0x20) & 0x1f) & 1) == 0) {\n                                    *(*0x20 + -0x40) = iVar8;\n                                    *(*0x20 + -0x59) = uVar10;\n                                    *(*0x20 + -0x48) = in_RAX;\n                                    *(*0x20 + -0x80) = 0x43bc12;\n                                    iVar5 = fcn.00442a40(uVar11);\n                                    if (iVar5 != 0) {\n                                        return iVar5;\n                                    }\n                                    iVar5 = *(*0x20 + -0x50);\n                                    uVar11 = *(*0x20 + -0x5b);\n                                    iVar8 = *(*0x20 + -0x40);\n                                    uVar10 = *(*0x20 + -0x59);\n                                    in_RAX = *(*0x20 + -0x48);\n                                    uVar6 = *(*0x20 + -0x10);\n                                }\n                                goto code_r0x0043bc3f;\n                            }\n                            goto code_r0x0043bcad;\n                        }\n                        uVar12 = *0x7adb08;\n                        if (uVar1 >> 5 < *0x7adb08) {\n                            bVar13 = (*(*0x7adb00 + (uVar1 >> 5) * 4) >> (uVar1 & 0x1f) & 1) != 0;\n                            goto code_r0x0043bb20;\n                        }\ncode_r0x0043bcb5:\n                        *(*0x20 + -0x80) = 0x43bcbd;\n                        fcn.0045e240(uVar12);\n                        goto code_r0x0043bcbd;\n                    }\ncode_r0x0043bc3f:\n                    *(*0x20 + -0x28) = *(*0x20 + -0x28) + 1;\n                    uVar1 = *(*0x20 + -0x24);\n                    arg1 = uVar1;\n                    if (uVar1 == 0) {\n                        *(*0x20 + -0x80) = 0x43bcad;\n                        fcn.00432100();\ncode_r0x0043bcad:\n                        *(*0x20 + -0x80) = 0x43bcb5;\n                        fcn.0045e240(uVar12);\n                        goto code_r0x0043bcb5;\n                    }\n                    *(*0x20 + -0x20) = (*(*0x20 + -0x20) + *(*0x20 + -0x1c)) % uVar1;\n                }\n                iVar5 = iVar5 + 1;\n            }\ncode_r0x0043bcc5:\n            *(*0x20 + -0x80) = 0x43bccd;\n            fcn.0045e240(arg1);\ncode_r0x0043bccd:\n            *(*0x20 + -0x80) = 0x43bcd2;\n            fcn.00432100();\ncode_r0x0043bcd2:\n            *(*0x20 + -0x80) = 0x43bcd7;\n            in_RAX = fcn.00432100();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + -8) = 0x43bce5;\n        fcn.0045bb60();\n        in_RAX = *(puVar9 + 8);\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 2163
    },
    "00446f60": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00447033)\n// WARNING: Removing unreachable block (ram,0x00447054)\n\nulong fcn.00446f60(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t in_EAX;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (0x5f < in_EAX) {\n                return 0;\n            }\n            LOCK();\n            uVar4 = in_EAX >> 5;\n            iVar3 = *0x801e3c + 1;\n            if (uVar4 < 3) {\n                if ((*(uVar4 * 4 + 0x801e14) >> (in_EAX & 0x1f) & 1) == 0) {\n                    LOCK();\n                    return 0;\n                }\n                do {\n                    uVar2 = *(uVar4 * 4 + 0x801e08);\n                    if ((uVar2 >> (in_EAX & 0x1f) & 1) != 0) {\n                        LOCK();\n                        return 1;\n                    }\n                    puVar1 = uVar4 * 4 + 0x801e08;\n                    LOCK();\n                } while (uVar2 != *puVar1);\n                *0x801e3c = *0x801e3c + 1;\n                *puVar1 = uVar2 | 1 << (in_EAX & 0x1f);\n                if (*0x801e38 == 0) {\n                    LOCK();\n                    *0x801e38 = 2;\ncode_r0x00447078:\n                    LOCK();\n                    *0x801e3c = *0x801e3c + -1;\n                    return 1;\n                }\n                if (*0x801e38 == 1) {\n                    LOCK();\n                    *0x801e38 = 0;\n                    *(*0x20 + -0x20) = 0x447071;\n                    fcn.0040a760();\n                    goto code_r0x00447078;\n                }\n                if (*0x801e38 == 2) goto code_r0x00447078;\n                *(*0x20 + -0x20) = 0x4470a8;\n                fcn.00433c80();\n                iVar3 = *0x801e3c;\n            }\n            *0x801e3c = iVar3;\n            *(*0x20 + -0x20) = 0x4470b2;\n            in_EAX = fcn.0045e240(3);\n        }\n        *(puVar5 + 8) = in_EAX;\n        *(puVar5 + -8) = 0x4470bc;\n        fcn.0045bb60();\n        in_EAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 763
    },
    "00450da0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00450da0(int64_t *arg1, ulong noname_1, ulong arg3, uint64_t arg4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uchar unaff_SIL;\n    uint64_t uVar5;\n    code *unaff_RDI;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x38) = unaff_RDI;\n            *(*0x20 + 0x40) = unaff_SIL;\n            *(*0x20 + 0x44) = arg3;\n            *(*0x20 + 0x48) = arg4;\n            *(*0x20 + -0x10) = unaff_RBX;\n            iVar1 = *unaff_RDI;\n            *(*0x20 + -0x28) = in_RAX + 0x34;\n            if ((iVar1 == 0) || (-(*(iVar1 + 0x10) + -0xfbe8) < in_RAX + 0x34)) {\n                *(*0x20 + -0x60) = 0x450e0c;\n                iVar1 = fcn.004514e0();\n                arg1 = *(*0x20 + 0x38);\n                *arg1 = iVar1;\n            }\n            *(*0x20 + -0x20) = iVar1;\n            *(*0x20 + -0x60) = 0x450e25;\n            fcn.0045dc20(arg1, iVar1);\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            unaff_RBX = *(*0x20 + -0x20);\n            uVar2 = (*(*0x20 + -0x58) >> 6) - *(unaff_RBX + 8);\n            uVar3 = *(*0x20 + -0x58) >> 6;\n            if (uVar2 == 0) {\n                uVar3 = *(unaff_RBX + 8) + 1;\n            }\n            *(unaff_RBX + 8) = uVar3;\n            if (uVar2 == 0) {\n                uVar2 = 1;\n            }\n            uVar3 = *(*0x20 + 0x44);\n            if (*(*0x20 + 0x44) == 0) {\n                uVar5 = *(*0x20 + 0x48);\n                if (-1 < uVar5) goto code_r0x00450e89;\n                uVar8 = *(*0x20 + 0x10);\n                uVar10 = uVar8;\n            }\n            else {\n                uVar5 = *(*0x20 + 0x48);\ncode_r0x00450e89:\n                uVar8 = *(*0x20 + 0x10);\n                uVar10 = uVar8 + 1;\n            }\n            uVar6 = uVar10;\n            if (3 < uVar10) {\n                uVar6 = 3;\n            }\n            arg4 = *(unaff_RBX + 0x10);\n            uVar10 = uVar6;\n            uVar9 = *(*0x20 + 0x40);\n            arg3._0_4_ = uVar6 << 6 | *(*0x20 + 0x40);\n            if (arg4 < 0xfbe8) {\n                *(unaff_RBX + 0x418 + arg4) = arg3;\n                uVar7 = *(unaff_RBX + 0x10) + 1;\n                *(unaff_RBX + 0x10) = uVar7;\n                if (uVar6 != '\\x03') {\n                    unaff_RDI = NULL;\n                    goto code_r0x00450ef2;\n                }\n                unaff_RDI = NULL;\ncode_r0x004511e4:\n                if (unaff_RDI < pe_nt_image_headers64) {\n                    if (uVar7 < 0xfbe8) {\n                        *(unaff_RBX + 0x418 + uVar7) = unaff_RDI;\n                        uVar10 = uVar7 + 1;\n                        *(unaff_RBX + 0x10) = uVar10;\n                        unaff_RDI = unaff_RBX + uVar7 + 0x418;\ncode_r0x00450ef2:\n                        uVar7 = *(unaff_RBX + 0x10);\n                        while (0x7f < uVar2) {\n                            if (0xfbe7 < uVar7) goto code_r0x004511bf;\n                            *(unaff_RBX + 0x418 + uVar7) = uVar2 | 0x80;\n                            uVar7 = uVar7 + 1;\n                            uVar2 = uVar2 >> 7;\n                            uVar10 = uVar2;\n                        }\n                        if (uVar7 < 0xfbe8) {\n                            *(unaff_RBX + 0x418 + uVar7) = uVar2;\n                            *(unaff_RBX + 0x10) = uVar7 + 1;\n                            uVar7 = *(*0x20 + 8);\n                            iVar1 = 0;\n                            do {\n                                if (iVar1 < uVar8) {\n                                    uVar10 = *(uVar7 + iVar1 * 8);\n                                    uVar9 = *(unaff_RBX + 0x10);\n                                    goto code_r0x00451180;\n                                }\n                                if (uVar3 == 0) {\n                                    if (uVar5 != 0) {\n                                        if (uVar5 < 1) goto code_r0x00450fe2;\n                                        *(*0x20 + -0x30) = arg4;\n                                        *(*0x20 + -0x18) = unaff_RDI;\n                                        unaff_RBX = unaff_RBX + 0x18;\n                                        unaff_RDI = pe_nt_image_headers64;\n                                        *(*0x20 + -0x60) = 0x450fd5;\n                                        uVar3 = fcn.004512c0(0x80);\n                                        uVar8 = *(*0x20 + -0x20);\n                                        uVar7 = *(uVar8 + 0x10);\n                                        goto code_r0x00451031;\n                                    }\n                                    uVar8 = *(unaff_RBX + 0x10);\n                                    uVar3 = 0;\n                                    goto code_r0x004510a9;\n                                }\n                                uVar8 = uVar3 & 0xffffffff;\n                                uVar5 = *(unaff_RBX + 0x10);\ncode_r0x0045110e:\n                                if (uVar8 < 0x80) {\n                                    if (uVar5 < 0xfbe8) {\n                                        *(unaff_RBX + 0x418 + uVar5) = uVar8;\n                                        *(unaff_RBX + 0x10) = uVar5 + 1;\ncode_r0x00450fe2:\n                                        do {\n                                            iVar1 = *(unaff_RBX + 0x10) - arg4;\n                                            uVar8 = *(*0x20 + -0x28);\n                                            if (iVar1 <= uVar8) {\n                                                if (unaff_RDI != NULL) {\n                                                    *unaff_RDI = iVar1 + -2;\n                                                }\n                                                return;\n                                            }\n                                            unaff_RBX = 0x1d;\n                                            *(*0x20 + -0x60) = 0x451019;\n                                            uVar3 = fcn.00433c80();\n                                            do {\n                                                *(uVar8 + 0x418 + uVar7) = uVar3 | 0x80;\n                                                uVar3 = uVar3 >> 7;\n                                                uVar7 = uVar7 + 1;\ncode_r0x00451031:\n                                                if (uVar3 < 0x80) {\n                                                    if (uVar7 < 0xfbe8) {\n                                                        *(uVar8 + 0x418 + uVar7) = uVar3;\n                                                        *(uVar8 + 0x10) = uVar7 + 1;\n                                                        unaff_RDI = *(*0x20 + -0x18);\n                                                        arg4 = *(*0x20 + -0x30);\n                                                        unaff_RBX = uVar8;\n                                                        goto code_r0x00450fe2;\n                                                    }\n                                                    *(*0x20 + -0x60) = 0x451085;\n                                                    fcn.0045e240(0xfbe8);\n                                                    break;\n                                                }\n                                            } while (uVar7 < 0xfbe8);\n                                            *(*0x20 + -0x60) = 0x451092;\n                                            uVar3 = fcn.0045e240(0xfbe8);\n                                            while( true ) {\n                                                *(unaff_RBX + 0x418 + uVar8) = uVar3 | 0x80;\n                                                uVar3 = uVar3 >> 7;\n                                                uVar8 = uVar8 + 1;\n                                                uVar5 = uVar3;\ncode_r0x004510a9:\n                                                if (uVar3 < 0x80) break;\n                                                if (0xfbe7 < uVar8) goto code_r0x004510ea;\n                                            }\n                                            if (0xfbe7 < uVar8) goto code_r0x004510dd;\n                                            *(unaff_RBX + 0x418 + uVar8) = uVar3;\n                                            *(unaff_RBX + 0x10) = uVar8 + 1;\n                                        } while( true );\n                                    }\n                                    *(*0x20 + -0x60) = 0x451155;\n                                    fcn.0045e240(0xfbe8);\n                                }\n                                else if (uVar5 < 0xfbe8) goto code_r0x004510f7;\n                                uVar3 = 0xfbe8;\n                                *(*0x20 + -0x60) = 0x451165;\n                                iVar1 = fcn.0045e240(0xfbe8);\n                                while( true ) {\n                                    *(unaff_RBX + 0x418 + uVar9) = uVar10 | 0x80;\n                                    uVar10 = uVar10 >> 7;\n                                    uVar9 = uVar9 + 1;\ncode_r0x00451180:\n                                    if (uVar10 < 0x80) break;\n                                    if (0xfbe7 < uVar9) goto code_r0x004511a5;\n                                }\n                                if (0xfbe7 < uVar9) goto code_r0x00451198;\n                                *(unaff_RBX + 0x418 + uVar9) = uVar10;\n                                uVar10 = uVar9 + 1;\n                                *(unaff_RBX + 0x10) = uVar10;\n                                iVar1 = iVar1 + 1;\n                            } while( true );\n                        }\n                        goto code_r0x004511b2;\n                    }\n                    *(*0x20 + -0x60) = 0x451236;\n                    fcn.0045e240(0xfbe8);\n                }\n                else if (uVar7 < 0xfbe8) goto code_r0x004511cc;\n                arg3._0_4_ = uVar7;\n                *(*0x20 + -0x60) = 0x451245;\n                fcn.0045e240(0xfbe8);\n            }\n            unaff_SIL = uVar5;\n            arg1 = 0xfbe8;\n            *(*0x20 + -0x60) = 0x451252;\n            in_RAX = fcn.0045e240(0xfbe8);\n        }\n        *(puVar4 + 0x20) = in_RAX;\n        *(puVar4 + 0x28) = unaff_RBX;\n        *(puVar4 + 0x30) = arg1;\n        *(puVar4 + 0x38) = unaff_RDI;\n        puVar4[0x40] = unaff_SIL;\n        *(puVar4 + 0x44) = arg3;\n        *(puVar4 + 0x48) = arg4;\n        *(puVar4 + -8) = 0x45127a;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 0x20);\n        unaff_RBX = *(puVar4 + 0x28);\n        arg1 = *(puVar4 + 0x30);\n        unaff_RDI = *(puVar4 + 0x38);\n        unaff_SIL = puVar4[0x40];\n        arg3._0_4_ = *(puVar4 + 0x44);\n        arg4 = *(puVar4 + 0x48);\n        *0x20 = puVar4;\n    } while( true );\ncode_r0x004510dd:\n    *(*0x20 + -0x60) = 0x4510ea;\n    fcn.0045e240(0xfbe8);\ncode_r0x004510ea:\n    *(*0x20 + -0x60) = 0x4510f7;\n    fcn.0045e240(0xfbe8);\ncode_r0x004510f7:\n    *(unaff_RBX + 0x418 + uVar5) = uVar8 | 0x80;\n    uVar8 = uVar8 >> 7;\n    uVar5 = uVar5 + 1;\n    uVar7 = uVar8;\n    goto code_r0x0045110e;\ncode_r0x00451198:\n    *(*0x20 + -0x60) = 0x4511a5;\n    fcn.0045e240(0xfbe8);\ncode_r0x004511a5:\n    *(*0x20 + -0x60) = 0x4511b2;\n    fcn.0045e240(0xfbe8);\ncode_r0x004511b2:\n    *(*0x20 + -0x60) = 0x4511bf;\n    fcn.0045e240(0xfbe8);\ncode_r0x004511bf:\n    uVar3 = 0xfbe8;\n    *(*0x20 + -0x60) = 0x4511cc;\n    uVar2 = fcn.0045e240(0xfbe8);\ncode_r0x004511cc:\n    *(unaff_RBX + 0x418 + uVar7) = unaff_RDI | 0x80;\n    unaff_RDI = unaff_RDI >> 7;\n    uVar7 = uVar7 + 1;\n    goto code_r0x004511e4;\n}\n",
        "token_count": 3431
    },
    "004525e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar * fcn.004525e0(uchar *arg1, ulong noname_1, uint64_t arg3, uint64_t arg4)\n\n{\n    uchar *puVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    char cVar4;\n    int32_t iVar5;\n    int64_t in_RAX;\n    ulong *puVar6;\n    int64_t iVar7;\n    ulong uVar8;\n    int64_t iVar9;\n    ulong uVar10;\n    uint64_t uVar11;\n    int64_t iVar12;\n    ulong uVar13;\n    uint32_t uVar14;\n    uchar *puVar15;\n    ulong *unaff_RBX;\n    uchar *puVar16;\n    uchar *unaff_RBP;\n    uchar *unaff_RSI;\n    uchar *unaff_RDI;\n    int64_t *piVar17;\n    uchar *puVar18;\n    uint64_t uVar19;\n    code **ppcVar20;\n    uchar *in_R10;\n    int64_t in_R11;\n    int64_t iVar21;\n    uchar *unaff_R14;\n    int64_t iVar22;\n    bool bVar23;\n    uint8_t uVar24;\n    uchar in_XMM15 [16];\n    \ncode_r0x004525e0:\n    puVar16 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x2f0 && *0x20 + -0x2f0 != *(unaff_R14 + 0x10)) {\n        puVar16 = *0x20 + -0x370;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if ((unaff_RSI < 1) || (in_R10 == NULL)) {\n            if ((unaff_R14 != unaff_RDI) || (arg1 = unaff_R14,  *(*(unaff_R14 + 0x30) + 0x90) != unaff_R14)) {\n                uVar24 = *(*(unaff_R14 + 0x30) + 0xf9);\n                uVar14 = uVar24;\n                if ((uVar24 == 0) && (uVar14 = *0x79528c >> 2,  1 < *(*(unaff_R14 + 0x30) + 0xc4))) {\n                    uVar14 = 2;\n                }\n                if ((in_RAX == -1) && (unaff_RBX == 0xffffffffffffffff)) {\n                    unaff_RBX = *(unaff_RDI + 0x70);\n                    if (unaff_RBX == NULL) {\n                        in_RAX = *(unaff_RDI + 0x40);\n                        unaff_RBX = *(unaff_RDI + 0x38);\n                        uVar8 = *(unaff_RDI + 0x50);\n                    }\n                    else {\n                        in_RAX = *(unaff_RDI + 0x78);\n                        uVar8 = 0;\n                    }\n                }\n                else {\n                    uVar8 = 0;\n                }\n                *(*0x20 + -0x68) = in_R11;\n                *(*0x20 + -0x334) = uVar14;\n                *(*0x20 + -0x60) = in_XMM15;\n                *(*0x20 + -0x380) = unaff_RBP;\n                *(*0x20 + -0x378) = 0x4526cf;\n                puVar6 = fcn.0045e4f0();\n                unaff_RBP = *(*0x20 + -0x380);\n                *(*0x20 + -0x50) = in_RAX;\n                *(*0x20 + -0x38) = unaff_RBX;\n                iVar9 = puVar6[0x2a];\n                iVar22 = puVar6[0x2b];\n                uVar13 = puVar6[1];\n                uVar10 = *puVar6;\n                if (arg3 == 0) {\n                    *(*0x20 + -0x342) = in_R10 == NULL;\n                    uVar14 = *(*0x20 + -0x334);\n                }\n                else {\n                    *(*0x20 + -0x288) = puVar6;\n                    *(*0x20 + -0x342) = 0;\n                    puVar6 = *(*0x20 + -0x288);\n                }\n                puVar18 = uVar14;\n                *(*0x20 + 0x30) = unaff_RSI;\n                *(*0x20 + 0x48) = in_R10;\n                *(*0x20 + -0x2c8) = iVar22;\n                *(*0x20 + -0xa8) = iVar9;\n                *(*0x20 + -0x238) = in_RAX;\n                *(*0x20 + -0x240) = unaff_RBX;\n                *(*0x20 + 0x38) = arg3;\n                *(*0x20 + 0x40) = arg4;\n                *(*0x20 + -0x70) = puVar6;\n                *(*0x20 + -0x248) = uVar13;\n                *(*0x20 + -0x250) = uVar10;\n                *(*0x20 + -0xb0) = uVar8;\n                if (in_RAX == 0) {\n                    *(*0x20 + -0x50) = *unaff_RBX;\n                    puVar18 = *(*0x20 + -0x240) + 8;\n                    *(*0x20 + -0x38) = puVar18;\n                }\n                *(*0x20 + -0x378) = 0x4527be;\n                iVar7 = fcn.0044cfe0();\n                if (iVar7 == 0) {\n                    arg1 = *(*0x20 + 0x48);\n                    if ((arg1 != NULL) || (puVar15 = in_R10,  puVar1 = arg1,  *(*0x20 + -0x342) != '\\0')) {\n                        *(*0x20 + -600) = *(*(*0x20 + -0x70) + 0x98);\n                        *(*0x20 + -0x238) = *(*0x20 + -0x50);\n                        *(*0x20 + -0x378) = 0x45289f;\n                        fcn.00435540();\n                        *(*0x20 + -0x378) = 0x4528b0;\n                        fcn.00435e40();\n                        *(*0x20 + -0x378) = 0x4528bd;\n                        fcn.00435c40();\n                        *(*0x20 + -0x378) = 0x4528ce;\n                        fcn.00435e40();\n                        *(*0x20 + -0x378) = 0x4528db;\n                        fcn.00435ca0();\n                        *(*0x20 + -0x378) = 0x4528e5;\n                        fcn.004357a0();\n                        *(*0x20 + -0x378) = 0x4528ea;\n                        fcn.004355c0();\n                        arg1 = *0x20 + -0x60;\n                        puVar18 = NULL;\n                        *(*0x20 + -0x378) = 0x452909;\n                        fcn.00456240(arg1);\n                        puVar15 = in_R10;\n                        puVar1 = *(*0x20 + 0x48);\n                    }\n                    uVar24 = puVar1 == NULL;\n                    if (uVar24) {\n                        return NULL;\n                    }\n                    iVar7 = 10;\n                    *(*0x20 + -0x378) = 0x45293e;\n                    iVar12 = fcn.00433c80();\n                    goto code_r0x0045293e;\n                }\n                *(*0x20 + -0x60) = iVar7;\n                *(*0x20 + -0x58) = uVar8;\n                *(*0x20 + -0x380) = unaff_RBP;\n                *(*0x20 + -0x378) = 0x4527f0;\n                fcn.0045e4b4();\n                unaff_RBP = *(*0x20 + -0x380);\n                unaff_RSI = *(*0x20 + 0x40);\n                arg1 = *(*0x20 + -0x70);\n                arg4 = *(*0x20 + -0x240);\n                in_R10 = *(*0x20 + -0x238);\n                uVar8 = *(*0x20 + -0x250);\n                uVar13 = *(*0x20 + -0x248);\n                iVar12 = *(*0x20 + 0x30);\n                iVar9 = *(*0x20 + -0xa8);\n                iVar22 = *(*0x20 + -0x2c8);\n                uVar10 = *(*0x20 + -0xb0);\n                unaff_RDI = NULL;\n                arg3 = 0;\n                *(*0x20 + -0x300) = 0;\n                puVar15 = NULL;\n                while( true ) {\n                    if (unaff_RSI <= puVar15) {\n                        puVar18 = *(*0x20 + -0x300);\n                        goto code_r0x004537c9;\n                    }\n                    *(*0x20 + -0x310) = uVar13;\n                    *(*0x20 + -0x318) = uVar8;\n                    iVar7 = *(*0x20 + -0x60);\n                    if (*(iVar7 + 0x10) == 0) break;\n                    *(*0x20 + -0x78) = *(*0x20 + -0x58);\n                    *(*0x20 + -0x80) = iVar7;\n                    uVar24 = *(iVar7 + 0x25);\n                    cVar4 = *(iVar7 + 0x24);\n                    if (cVar4 == '\\x04') {\n                        uVar24 = uVar24 & 0xfd;\n                    }\n                    if ((((*(*0x20 + -0x50) == in_R10) && (*(*0x20 + -0x38) == arg4)) && (*(arg1 + 0x78) == in_R10)) &&\n                       (*(arg1 + 0x70) == arg4)) {\n                        uVar24 = uVar24 & 0xfd;\n                    }\n                    *(*0x20 + -0x2e8) = puVar15;\n                    *(*0x20 + -0x260) = iVar12;\n                    *(*0x20 + -0x341) = arg3;\n                    *(*0x20 + -0xb0) = uVar10;\n                    *(*0x20 + -0x343) = unaff_RDI;\n                    if (*(*0x20 + -0x30) == 0) {\n                        if ((((*(*0x20 + 8) >> 2 & 1) == 0) || (**(arg1 + 0x30) != arg1)) ||\n                           (uVar11 = (*(arg1 + 0x30))[0x12],  uVar11 == 0)) {\n                            *(*0x20 + -0xb8) = *(*0x20 + -0x80);\n                            *(*0x20 + -0xc0) = *(*0x20 + -0x78);\n                            uVar13 = *(*0x20 + -0x310);\n                            uVar8 = *(*0x20 + -0x318);\n                        }\n                        else if (cVar4 == '\\f') {\n                            *(*0x20 + -0x50) = *(uVar11 + 0x40);\n                            *(*0x20 + -0x378) = 0x452bad;\n                            iVar7 = fcn.0044cfe0();\n                            *(*0x20 + -0x60) = iVar7;\n                            *(*0x20 + -0x58) = uVar10;\n                            iVar9 = *(*0x20 + -0x70);\n                            uVar24 = *(iVar7 + 0x25);\n                            *(*0x20 + -0x40) = *(*(*(iVar9 + 0x30) + 0x90) + 0x60);\n                            *(*0x20 + -0x38) = *(*(*(iVar9 + 0x30) + 0x90) + 0x38);\n                            puVar6 = *(*(iVar9 + 0x30) + 0x90);\n                            uVar8 = *puVar6;\n                            uVar13 = puVar6[1];\n                            iVar9 = puVar6[0x2a];\n                            iVar22 = puVar6[0x2b];\n                            *(*0x20 + -0xb8) = iVar7;\n                            *(*0x20 + -0xc0) = uVar10;\n                        }\n                        else if (cVar4 == '\\x13') {\n                            *(*0x20 + -0x38) = *(uVar11 + 0x38);\n                            puVar6 = *(*(arg1 + 0x30) + 0x90);\n                            uVar8 = *puVar6;\n                            uVar13 = puVar6[1];\n                            iVar9 = puVar6[0x2a];\n                            iVar22 = puVar6[0x2b];\n                            uVar24 = uVar24 & 0xfd;\n                            *(*0x20 + -0x290) = iVar12;\n                            *(*0x20 + -0xb8) = *(*0x20 + -0x80);\n                            *(*0x20 + -0x298) = arg1;\n                            *(*0x20 + -0xc0) = *(*0x20 + -0x78);\n                        }\n                        else {\n                            *(*0x20 + -0xb8) = *(*0x20 + -0x80);\n                            *(*0x20 + -0xc0) = *(*0x20 + -0x78);\n                            uVar13 = *(*0x20 + -0x310);\n                            uVar8 = *(*0x20 + -0x318);\n                        }\n                        *(*0x20 + -0x2c8) = iVar22;\n                        *(*0x20 + -0xa8) = iVar9;\n                        *(*0x20 + -0x310) = uVar13;\n                        *(*0x20 + -0x318) = uVar8;\n                        *(*0x20 + -0x340) = uVar24;\n                        *(*0x20 + -0x378) = 0x452ce9;\n                        iVar5 = fcn.0044dba0(*(*0x20 + -0x50));\n                        *(*0x20 + -0x30) = iVar5 + *(*0x20 + -0x38);\n                        *(*0x20 + -0x30) = iVar5 + *(*0x20 + -0x38) + 8;\n                        iVar12 = *(*0x20 + -0x260);\n                        arg1 = *(*0x20 + -0x70);\n                        puVar15 = *(*0x20 + -0x2e8);\n                        uVar10 = *(*0x20 + -0xb0);\n                        unaff_RSI = *(*0x20 + 0x40);\n                        unaff_RDI = *(*0x20 + -0x343);\n                        arg3 = *(*0x20 + -0x341);\n                        arg4 = *(*0x20 + -0x240);\n                        in_R10 = *(*0x20 + -0x238);\n                        uVar24 = *(*0x20 + -0x340);\n                        in_R11 = *(*0x20 + -0xb8);\n                        iVar22 = *(*0x20 + -0x2c8);\n                        iVar9 = *(*0x20 + -0xa8);\n                    }\n                    else {\n                        *(*0x20 + -0xc0) = *(*0x20 + -0x78);\n                        in_R11 = *(*0x20 + -0x80);\n                    }\n                    *(*0x20 + -0xa8) = iVar9;\n                    *(*0x20 + -0x2c8) = iVar22;\n                    *(*0x20 + -0xb8) = in_R11;\n                    if ((uVar24 & 1) == 0) {\n                        if ((uVar24 & 2) == 0) {\ncode_r0x00452e0d:\n                            if (*(*0x20 + -0x40) == 0) {\n                                *(*0x20 + -0x2e0) = *(*0x20 + -0x30) + -8;\n                                *(*0x20 + -0x40) = *(*(*0x20 + -0x30) + -8);\n                            }\n                            else {\n                                *(*0x20 + -0x2a0) = iVar12;\n                                *(*0x20 + -0x2e0) = 0;\n                            }\n                            *(*0x20 + -0x378) = 0x452e58;\n                            iVar7 = fcn.0044cfe0();\n                            if (iVar7 == 0) {\n                                arg4 = *(*0x20 + -0x342);\n                                if (*(*0x20 + -0x342) == 0) {\n                                    arg1 = *(*0x20 + -0x70);\n                                    in_R10 = *(*0x20 + -0xb8);\n                                }\n                                else {\n                                    arg1 = *(*0x20 + -0x70);\n                                    if (*(*(arg1 + 0x30) + 0xe8) == '\\0') {\n                                        in_R10 = *(*0x20 + -0xb8);\n                                    }\n                                    else {\n                                        in_R10 = *(*0x20 + -0xb8);\n                                        if (in_R10[0x24] == '\\x12') {\n                                            arg4 = 0;\n                                        }\n                                    }\n                                }\n                                *(*0x20 + -0x88) = 0;\n                                *(*0x20 + -0x90) = uVar10;\n                                in_R11 = *(*0x20 + 0x48);\n                                if ((in_R11 != 0) || (iVar9 = in_R11,  arg4 != '\\0')) {\n                                    uVar8 = *(*0x20 + -0xc0);\n                                    *(*0x20 + -0x378) = 0x452f15;\n                                    uVar13 = fcn.0044d760();\n                                    *(*0x20 + -0x98) = uVar13;\n                                    *(*0x20 + -0x268) = uVar8;\n                                    *(*0x20 + -600) = *(*(*0x20 + -0x70) + 0x98);\n                                    unaff_RSI = *(*0x20 + -0x40);\n                                    *(*0x20 + -0x248) = unaff_RSI;\n                                    *(*0x20 + -0x378) = 0x452f51;\n                                    fcn.00435540();\n                                    *(*0x20 + -0x378) = 0x452f65;\n                                    fcn.00435e40();\n                                    *(*0x20 + -0x378) = 0x452f72;\n                                    fcn.00435c40();\n                                    *(*0x20 + -0x378) = 0x452f85;\n                                    fcn.00435e40();\n                                    *(*0x20 + -0x378) = 0x452f9a;\n                                    fcn.00435e40();\n                                    *(*0x20 + -0x378) = 0x452fab;\n                                    fcn.00435e40();\n                                    *(*0x20 + -0x378) = 0x452fb8;\n                                    fcn.00435ca0();\n                                    *(*0x20 + -0x378) = 0x452fbd;\n                                    fcn.004357a0();\n                                    *(*0x20 + -0x378) = 0x452fc5;\n                                    fcn.004355c0();\n                                    unaff_RDI = *(*0x20 + -0x2e0);\n                                    *(*0x20 + -0x378) = 0x452fe5;\n                                    fcn.00456240(*0x20 + -0x60);\n                                    iVar7 = *(*0x20 + -0x88);\n                                    arg1 = *(*0x20 + -0x70);\n                                    uVar10 = *(*0x20 + -0x90);\n                                    in_R10 = *(*0x20 + -0xb8);\n                                    in_R11 = *(*0x20 + 0x48);\n                                    iVar9 = *(*0x20 + 0x48);\n                                }\n                                if (iVar9 != 0) goto code_r0x004542d9;\n                            }\n                            else {\n                                arg1 = *(*0x20 + -0x70);\n                            }\n                            puVar15 = *(*0x20 + -0x2e8);\n                            unaff_RSI = *(*0x20 + 0x40);\n                            unaff_RDI = *(*0x20 + -0x343);\n                            arg3 = *(*0x20 + -0x341);\n                            in_R11 = *(*0x20 + -0xb8);\n                            iVar9 = *(*0x20 + -0xa8);\n                            iVar22 = *(*0x20 + -0x2c8);\n                            *(*0x20 + -0xe0) = iVar7;\n                            *(*0x20 + -0xe8) = uVar10;\n                            uVar8 = *(*0x20 + -0x260);\n                        }\n                        else {\n                            if (*(*0x20 + 0x48) != 0) {\n                                if (puVar15 < 1) goto code_r0x00452e0d;\n                                if (*(*0x20 + 0x48) != 0) goto code_r0x004542ea;\n                            }\n                            *(*0x20 + -0x40) = 0;\n                            *(*0x20 + -0x2a8) = iVar12;\n                            *(*0x20 + -0xe0) = 0;\n                            *(*0x20 + -0xe8) = 0;\n                            uVar8 = *(*0x20 + -0x2a8);\n                        }\n                        iVar7 = *(*0x20 + -0xe0);\n                        *(*0x20 + -0x2b0) = uVar8;\n                        *(*0x20 + -200) = *(*0x20 + -0xe8);\n                        iVar12 = *(*0x20 + -0x2b0);\n                    }\n                    else {\n                        *(*0x20 + -0x40) = 0;\n                        *(*0x20 + -200) = 0;\n                        iVar7 = 0;\n                    }\n                    iVar2 = *(*0x20 + -0x30);\n                    *(*0x20 + -0x28) = iVar2;\n                    *(*0x20 + -0x28) = iVar2 - 8U;\n                    if (*(*0x20 + -0x38) < iVar2 - 8U) {\n                        *(*0x20 + -0x28) = iVar2 + -0x10;\n                    }\n                    *(*0x20 + -0xe0) = iVar7;\n                    ppcVar20 = *(*0x20 + 0x48);\n                    if (ppcVar20 == NULL) {\n                        in_R10 = *(*0x20 + -0x342);\n                        if (*(*0x20 + -0x342) != 0) goto code_r0x0045311f;\n                    }\n                    else {\n                        in_R10 = *(*0x20 + -0x342);\ncode_r0x0045311f:\n                        *(*0x20 + -0x20) = *(*0x20 + -0x30);\n                        if (ppcVar20 == NULL) {\n                            bVar23 = false;\n                        }\n                        else {\n                            bVar23 = *(in_R11 + 8) == -0x80000000;\n                        }\n                        *(*0x20 + -0x18) = *(in_R11 + 8);\n                        *(*0x20 + -0x10) = 0;\n                        if (bVar23) {\n                            *(*0x20 + -0x378) = 0x453185;\n                            uVar8 = fcn.00454940(*(*0x20 + -0xc0));\n                            *(*0x20 + -0x18) = uVar8;\n                            *(*0x20 + -0x10) = in_R11;\n                            iVar12 = *(*0x20 + -0x260);\n                            arg1 = *(*0x20 + -0x70);\n                            puVar15 = *(*0x20 + -0x2e8);\n                            unaff_RSI = *(*0x20 + 0x40);\n                            unaff_RDI = *(*0x20 + -0x343);\n                            arg3 = *(*0x20 + -0x341);\n                            ppcVar20 = *(*0x20 + 0x48);\n                            in_R10 = *(*0x20 + -0x342);\n                            in_R11 = *(*0x20 + -0xb8);\n                            iVar22 = *(*0x20 + -0x2c8);\n                        }\n                        iVar7 = *(*0x20 + -0xe0);\n                        iVar9 = *(*0x20 + -0xa8);\n                    }\n                    *(*0x20 + -0x48) = *(*0x20 + -0x50);\n                    if (unaff_RDI == '\\0') {\n                        bVar23 = ppcVar20 == NULL;\n                    }\n                    else if (*(*(*0x20 + -0x60) + 0xc) == 0) {\n                        *(*0x20 + -0x48) = 0;\n                        bVar23 = ppcVar20 == NULL;\n                    }\n                    else {\n                        *(*0x20 + -0x378) = 0x45323f;\n                        iVar9 = fcn.0044ce60();\n                        *(*0x20 + -0x48) = iVar9 + *(*(*0x20 + -0x60) + 0xc) + 1;\n                        bVar23 = *(*0x20 + 0x48) == 0;\n                        iVar12 = *(*0x20 + -0x260);\n                        arg1 = *(*0x20 + -0x70);\n                        puVar15 = *(*0x20 + -0x2e8);\n                        iVar7 = *(*0x20 + -0xe0);\n                        unaff_RSI = *(*0x20 + 0x40);\n                        unaff_RDI = *(*0x20 + -0x343);\n                        arg3 = *(*0x20 + -0x341);\n                        ppcVar20 = *(*0x20 + 0x48);\n                        in_R10 = *(*0x20 + -0x342);\n                        in_R11 = *(*0x20 + -0xb8);\n                        iVar9 = *(*0x20 + -0xa8);\n                        iVar22 = *(*0x20 + -0x2c8);\n                    }\n                    if (bVar23) {\n                        iVar21 = *(*0x20 + 0x38);\n                        iVar2 = iVar21;\n                    }\n                    else {\n                        pcVar3 = *ppcVar20;\n                        *(*0x20 + -0x378) = 0x4532ef;\n                        cVar4 = (*pcVar3)(pcVar3, ppcVar20);\n                        if (cVar4 == '\\0') {\n                            return *(*0x20 + -0x2e8);\n                        }\n                        iVar2 = *(*0x20 + 0x38);\n                        iVar12 = *(*0x20 + -0x260);\n                        arg1 = *(*0x20 + -0x70);\n                        puVar15 = *(*0x20 + -0x2e8);\n                        iVar7 = *(*0x20 + -0xe0);\n                        unaff_RSI = *(*0x20 + 0x40);\n                        unaff_RDI = *(*0x20 + -0x343);\n                        arg3 = *(*0x20 + -0x341);\n                        ppcVar20 = *(*0x20 + 0x48);\n                        in_R10 = *(*0x20 + -0x342);\n                        in_R11 = *(*0x20 + -0xb8);\n                        iVar21 = *(*0x20 + 0x38);\n                        iVar9 = *(*0x20 + -0xa8);\n                        iVar22 = *(*0x20 + -0x2c8);\n                    }\n                    if (iVar2 == 0) goto code_r0x0045350e;\n                    iVar9 = *(*0x20 + -0x50);\n                    if (((puVar15 == NULL) && ((*(*0x20 + 8) >> 1 & 1) != 0)) || (unaff_RDI != '\\0')) {\ncode_r0x0045341c:\n                        iVar22 = iVar9 + 1;\n                    }\n                    else {\n                        *(*0x20 + -0x308) = iVar9;\n                        *(*0x20 + -0x378) = 0x4533b4;\n                        iVar9 = fcn.0044ce60();\n                        if (iVar9 == *(*0x20 + -0x308)) {\n                            iVar12 = *(*0x20 + -0x260);\n                            arg1 = *(*0x20 + -0x70);\n                            puVar15 = *(*0x20 + -0x2e8);\n                            iVar7 = *(*0x20 + -0xe0);\n                            unaff_RSI = *(*0x20 + 0x40);\n                            unaff_RDI = *(*0x20 + -0x343);\n                            arg3 = *(*0x20 + -0x341);\n                            iVar9 = *(*0x20 + -0x308);\n                            in_R10 = *(*0x20 + -0x342);\n                            in_R11 = *(*0x20 + -0xb8);\n                            iVar21 = *(*0x20 + 0x38);\n                            goto code_r0x0045341c;\n                        }\n                        iVar9 = *(*0x20 + -0x308) + -1;\n                        iVar12 = *(*0x20 + -0x260);\n                        arg1 = *(*0x20 + -0x70);\n                        puVar15 = *(*0x20 + -0x2e8);\n                        iVar7 = *(*0x20 + -0xe0);\n                        unaff_RSI = *(*0x20 + 0x40);\n                        unaff_RDI = *(*0x20 + -0x343);\n                        arg3 = *(*0x20 + -0x341);\n                        in_R10 = *(*0x20 + -0x342);\n                        in_R11 = *(*0x20 + -0xb8);\n                        iVar21 = *(*0x20 + 0x38);\n                        iVar22 = *(*0x20 + -0x308);\n                    }\n                    *(*0x20 + -800) = iVar9;\n                    if (*(in_R11 + 0x27) < 4) {\n                        *(*0x20 + -0x2b8) = iVar12;\n                        *(*0x20 + -0x100) = 0;\n                        iVar12 = *(*0x20 + -0x2b8);\n                    }\n                    else {\n                        uVar14 = *(in_R11 + *(in_R11 + 0x1c) * 4 + 0x34);\n                        in_R10 = *(*0x20 + -0x342);\n                        *(*0x20 + -0x100) = uVar14 + *(*(*0x20 + -0xc0) + 0x130) & (uVar14 == 0xffffffff) - 1;\n                    }\n                    arg4 = *(*0x20 + -0x100);\n                    if (arg4 == 0) goto code_r0x00454252;\n                    while( true ) {\n                        *(*0x20 + -0x260) = iVar12;\n                        *(*0x20 + -0x248) = iVar22;\n                        *(*0x20 + -0x268) = puVar15;\n                        *(*0x20 + -0x341) = arg3;\n                        unaff_RDI = *(*0x20 + -800);\n                        unaff_RSI = *0x20 + -0x208;\n                        *(*0x20 + -0x378) = 0x454105;\n                        iVar5 = fcn.0044dda0(2);\n                        if (iVar5 < 0) break;\n                        uVar11 = iVar5;\n                        if (0xfffff < uVar11) {\ncode_r0x004542cf:\n                            arg1 = 0x100000;\n                            *(*0x20 + -0x378) = 0x4542d9;\n                            fcn.0045e240(0x100000);\n                            goto code_r0x004542d9;\n                        }\n                        *(*0x20 + -0x278) = uVar11 * 5;\n                        unaff_RSI = *(*0x20 + -0x100);\n                        unaff_RDI = unaff_RSI + uVar11 * 0x14;\n                        if ((((unaff_RSI[uVar11 * 0x14 + 2] == '\\x15') && (cVar4 = *(*0x20 + -0x341),  cVar4 != '\\t'))\n                            && (cVar4 != '\\x12')) && (cVar4 != '\\x0e')) {\n                            uVar11 = *(*0x20 + -0x268);\n                            arg3 = *(*0x20 + -0x260);\n                        }\n                        else {\n                            arg3 = *(*0x20 + -0x260);\n                            if (arg3 < 1) {\n                                arg4 = *(*0x20 + 0x40);\n                                uVar11 = *(*0x20 + -0x268);\n                                if (uVar11 < arg4) {\n                                    if (0xfffff < uVar11) goto code_r0x004542c5;\n                                    in_R10 = *(*0x20 + 0x38);\n                                    *(in_R10 + uVar11 * 8) = *(*0x20 + -0x248);\n                                    uVar11 = uVar11 + 1;\n                                }\n                                else {\n                                    in_R10 = *(*0x20 + 0x38);\n                                }\n                            }\n                            else {\n                                arg3 = arg3 - 1;\n                                in_R10 = *(*0x20 + 0x38);\n                                uVar11 = *(*0x20 + -0x268);\n                            }\n                        }\ncode_r0x00454049:\n                        *(*0x20 + -0x260) = arg3;\n                        *(*0x20 + -0x268) = uVar11;\n                        *(*0x20 + -0x341) = unaff_RDI[2];\n                        *(*0x20 + -0x378) = 0x454079;\n                        iVar9 = fcn.0044ce60();\n                        arg4 = iVar9 + *(*(*0x20 + -0x100) + *(*0x20 + -0x278) * 4 + 0x10);\n                        iVar22 = iVar9 + *(*(*0x20 + -0x100) + *(*0x20 + -0x278) * 4 + 0x10) + 1;\n                        in_R11 = *(*0x20 + -0xb8);\n                        *(*0x20 + -800) = arg4;\n                        arg3 = *(*0x20 + -0x341);\n                        puVar15 = *(*0x20 + -0x268);\n                        iVar12 = *(*0x20 + -0x260);\n                    }\n                    arg1 = *(*0x20 + -0x70);\n                    iVar7 = *(*0x20 + -0xe0);\n                    unaff_RSI = *(*0x20 + 0x40);\n                    unaff_RDI = *(*0x20 + -0x343);\n                    in_R10 = *(*0x20 + -0x342);\n                    in_R11 = *(*0x20 + -0xb8);\n                    iVar21 = *(*0x20 + 0x38);\n                    arg3 = *(*0x20 + -0x341);\n                    puVar15 = *(*0x20 + -0x268);\n                    iVar22 = *(*0x20 + -0x248);\n                    iVar12 = *(*0x20 + -0x260);\ncode_r0x00454252:\n                    if (((*(in_R11 + 0x24) != '\\x15') || (cVar4 = arg3,  cVar4 == '\\t')) ||\n                       ((cVar4 == '\\x12' || (cVar4 == '\\x0e')))) {\n                        if (iVar12 < 1) {\n                            if (puVar15 < unaff_RSI) {\n                                if (0xfffff < puVar15) {\n                                    *(*0x20 + -0x378) = 0x4542c5;\n                                    fcn.0045e240(0x100000);\ncode_r0x004542c5:\n                                    *(*0x20 + -0x378) = 0x4542cf;\n                                    fcn.0045e240(0x100000);\n                                    goto code_r0x004542cf;\n                                }\n                                *(iVar21 + puVar15 * 8) = iVar22;\n                                puVar15 = puVar15 + 1;\n                            }\n                        }\n                        else {\n                            iVar12 = iVar12 + -1;\n                        }\n                    }\n                    arg3 = *(in_R11 + 0x24);\n                    puVar15 = puVar15 + -1;\n                    ppcVar20 = *(*0x20 + 0x48);\n                    iVar9 = *(*0x20 + -0xa8);\n                    iVar22 = *(*0x20 + -0x2c8);\ncode_r0x0045350e:\n                    cVar4 = unaff_RDI;\n                    *(*0x20 + -0x260) = iVar12;\n                    if (in_R10 == '\\0') {\n                        puVar18 = *(*0x20 + -0x300);\n                        goto code_r0x0045368a;\n                    }\n                    *(*0x20 + -0x33d) = arg3;\n                    *(*0x20 + -0x268) = puVar15;\n                    unaff_RDI = *(*0x20 + -0x50);\n                    *(*0x20 + -0x328) = unaff_RDI;\n                    if ((puVar15 < 1) && (uVar11 = *(*0x20 + 8),  (uVar11 >> 1 & 1) != 0)) {\n                        *(*0x20 + -0x2c0) = iVar12;\n                        *(*0x20 + -0x33e) = 0;\n                        iVar12 = *(*0x20 + -0x2c0);\n                    }\n                    else {\n                        *(*0x20 + -0x378) = 0x453575;\n                        uVar19 = fcn.0044ce60();\n                        iVar12 = *(*0x20 + -0x260);\n                        puVar15 = *(*0x20 + -0x268);\n                        iVar7 = *(*0x20 + -0xe0);\n                        unaff_RSI = *(*0x20 + 0x40);\n                        cVar4 = *(*0x20 + -0x343);\n                        arg3 = *(*0x20 + -0x33d);\n                        unaff_RDI = *(*0x20 + -0x328);\n                        in_R11 = *(*0x20 + -0xb8);\n                        uVar11 = *(*0x20 + 8);\n                        iVar9 = *(*0x20 + -0xa8);\n                        iVar22 = *(*0x20 + -0x2c8);\n                        *(*0x20 + -0x33e) = uVar19 <= *(*0x20 + -0x50) && *(*0x20 + -0x50) != uVar19;\n                        arg1 = *(*0x20 + -0x70);\n                    }\n                    if ((*(*0x20 + -0x33e) != '\\0') && (cVar4 == '\\0')) {\n                        unaff_RDI = unaff_RDI + -1;\n                    }\n                    if (*(in_R11 + 0x27) < 4) {\n                        uVar19 = 0;\n                    }\n                    else {\n                        uVar14 = *(in_R11 + *(in_R11 + 0x1c) * 4 + 0x34);\n                        uVar19 = uVar14 + *(*(*0x20 + -0xc0) + 0x130) & (uVar14 == 0xffffffff) - 1;\n                        iVar22 = *(*0x20 + -0x2c8);\n                    }\n                    if (uVar19 != 0) {\n                        *(*0x20 + -0x108) = uVar19;\n                        *(*0x20 + -0x230) = in_XMM15;\n                        *(*0x20 + -0x228) = in_XMM15;\n                        *(*0x20 + -0x218) = in_XMM15;\n                        uVar8 = *(*0x20 + -0x300);\n                        goto code_r0x00453a57;\n                    }\n                    puVar18 = *(*0x20 + -0x300);\n                    while( true ) {\n                        *(*0x20 + -0x300) = puVar18;\n                        *(*0x20 + -0x328) = unaff_RDI;\n                        if ((uVar11 & 1) == 0) {\n                            *(*0x20 + -0x378) = 0x453caa;\n                            cVar4 = fcn.00455b00(arg1, puVar15 & 0xffffffffffffff00 | puVar18 == NULL, arg3);\n                            arg1 = *(*0x20 + -0x70);\n                            puVar15 = *(*0x20 + -0x268);\n                            iVar7 = *(*0x20 + -0xe0);\n                            unaff_RSI = *(*0x20 + 0x40);\n                            puVar18 = *(*0x20 + -0x300);\n                            in_R11 = *(*0x20 + -0xb8);\n                            iVar9 = *(*0x20 + -0xa8);\n                            iVar22 = *(*0x20 + -0x2c8);\n                            iVar12 = *(*0x20 + -0x260);\n                        }\n                        else {\n                            cVar4 = '\\x01';\n                        }\n                        if (cVar4 != '\\0') {\n                            uVar8 = *(*0x20 + -0xc0);\n                            *(*0x20 + -0x378) = 0x453d19;\n                            uVar13 = fcn.0044d760();\n                            *(*0x20 + -0xf8) = uVar13;\n                            *(*0x20 + -0x2f8) = uVar8;\n                            uVar8 = *(*0x20 + -0x328);\n                            uVar13 = *(*0x20 + -0xc0);\n                            *(*0x20 + -0x378) = 0x453d45;\n                            uVar10 = fcn.0044db40(uVar8);\n                            *(*0x20 + -0xd8) = uVar10;\n                            *(*0x20 + -0x2d8) = uVar13;\n                            *(*0x20 + -0x33c) = uVar8;\n                            iVar9 = *(*0x20 + -0x2f8);\n                            if (iVar9 == 0xf) {\n                                piVar17 = *(*0x20 + -0xf8);\n                                if ((((*piVar17 == 0x2e656d69746e7572) && (*(piVar17 + 1) == 0x61706f67)) &&\n                                    (*(piVar17 + 0xc) == 0x696e)) && (*(piVar17 + 0xe) == 'c')) {\n                                    iVar9 = 5;\n                                    piVar17 = 0x4af058;\n                                }\n                            }\n                            else {\n                                piVar17 = *(*0x20 + -0xf8);\n                            }\n                            *(*0x20 + -0xf8) = piVar17;\n                            *(*0x20 + -0x2f8) = iVar9;\n                            *(*0x20 + -0x378) = 0x453dbc;\n                            fcn.00435540();\n                            *(*0x20 + -0x378) = 0x453dce;\n                            fcn.00435e40();\n                            *(*0x20 + -0x378) = 0x453ddf;\n                            fcn.00435e40();\n                            *(*0x20 + -0x378) = 0x453de5;\n                            fcn.004355c0();\n                            *(*0x20 + -0x378) = 0x453e07;\n                            fcn.004543e0(*(*0x20 + -0x20));\n                            *(*0x20 + -0x378) = 0x453e0c;\n                            fcn.00435540();\n                            *(*0x20 + -0x378) = 0x453e1d;\n                            fcn.00435e40();\n                            *(*0x20 + -0x378) = 0x453e25;\n                            fcn.004355c0();\n                            *(*0x20 + -0x378) = 0x453e2a;\n                            fcn.00435540();\n                            *(*0x20 + -0x378) = 0x453e3b;\n                            fcn.00435e40();\n                            *(*0x20 + -0x378) = 0x453e50;\n                            fcn.00435e40();\n                            *(*0x20 + -0x378) = 0x453e65;\n                            fcn.00435e40();\n                            *(*0x20 + -0x378) = 0x453e71;\n                            fcn.00435c40();\n                            *(*0x20 + -0x378) = 0x453e76;\n                            fcn.004355c0();\n                            *(*0x20 + -0x378) = 0x453e8d;\n                            uVar11 = fcn.0044ce60();\n                            if (uVar11 <= *(*0x20 + -0x50) && *(*0x20 + -0x50) != uVar11) {\n                                *(*0x20 + -0x378) = 0x453eae;\n                                uVar8 = fcn.0044ce60();\n                                *(*0x20 + -0x330) = uVar8;\n                                *(*0x20 + -0x248) = *(*0x20 + -0x50);\n                                *(*0x20 + -0x378) = 0x453ec8;\n                                fcn.00435540();\n                                *(*0x20 + -0x378) = 0x453ed9;\n                                fcn.00435e40();\n                                *(*0x20 + -0x378) = 0x453eee;\n                                fcn.00435ca0(*(*0x20 + -0x330));\n                                *(*0x20 + -0x378) = 0x453ef3;\n                                fcn.004355c0();\n                            }\n                            iVar9 = *(*(*0x20 + -0x70) + 0x30);\n                            if ((((iVar9 != 0) && (1 < *(iVar9 + 0xc4))) && (*(iVar9 + 0x90) == *(*0x20 + -0x70))) ||\n                               (1 < *(*0x20 + -0x334))) {\n                                *(*0x20 + -0x248) = *(*0x20 + -0x30);\n                                *(*0x20 + -0x250) = *(*0x20 + -0x38);\n                                *(*0x20 + -0x280) = *(*0x20 + -0x50);\n                                *(*0x20 + -0x378) = 0x453f5e;\n                                fcn.00435540();\n                                *(*0x20 + -0x378) = 0x453f6f;\n                                fcn.00435e40();\n                                *(*0x20 + -0x378) = 0x453f7c;\n                                fcn.00435ca0();\n                                *(*0x20 + -0x378) = 0x453f8d;\n                                fcn.00435e40();\n                                *(*0x20 + -0x378) = 0x453f9a;\n                                fcn.00435ca0();\n                                *(*0x20 + -0x378) = 0x453fab;\n                                fcn.00435e40();\n                                *(*0x20 + -0x378) = 0x453fb8;\n                                fcn.00435ca0();\n                                *(*0x20 + -0x378) = 0x453fbd;\n                                fcn.004355c0();\n                            }\n                            *(*0x20 + -0x378) = 0x453fc5;\n                            fcn.00435540();\n                            *(*0x20 + -0x378) = 0x453fca;\n                            fcn.004357a0();\n                            *(*0x20 + -0x378) = 0x453fcf;\n                            fcn.004355c0();\n                            puVar18 = *(*0x20 + -0x300) + 1;\n                            iVar12 = *(*0x20 + -0x260);\n                            arg1 = *(*0x20 + -0x70);\n                            puVar15 = *(*0x20 + -0x268);\n                            iVar7 = *(*0x20 + -0xe0);\n                            unaff_RSI = *(*0x20 + 0x40);\n                            in_R11 = *(*0x20 + -0xb8);\n                            iVar9 = *(*0x20 + -0xa8);\n                            iVar22 = *(*0x20 + -0x2c8);\n                        }\n                        arg3 = *(in_R11 + 0x24);\n                        ppcVar20 = *(*0x20 + 0x48);\ncode_r0x0045368a:\n                        puVar15 = puVar15 + 1;\n                        if ((*(in_R11 + 0x24) == '\\x04') && (iVar22 != 0)) {\n                            uVar8 = *(iVar9 + -8 + iVar22 * 8);\n                            if ((iVar12 == 0) && (ppcVar20 == NULL)) {\n                                *(*0x20 + -0x270) = puVar18;\n                                *(*0x20 + -0x33f) = arg3;\n                                *(*0x20 + -0x378) = 0x4536db;\n                                puVar15 = fcn.00454b20(uVar8);\n                                arg1 = *(*0x20 + -0x70);\n                                iVar7 = *(*0x20 + -0xe0);\n                                unaff_RSI = *(*0x20 + 0x40);\n                                puVar18 = *(*0x20 + -0x270);\n                                arg3 = *(*0x20 + -0x33f);\n                                in_R11 = *(*0x20 + -0xb8);\n                                iVar9 = *(*0x20 + -0xa8);\n                                iVar22 = *(*0x20 + -0x2c8);\n                                iVar12 = *(*0x20 + -0x260);\n                            }\n                            iVar22 = iVar22 + -1;\n                        }\n                        cVar4 = *(in_R11 + 0x24);\n                        in_R10 = puVar15;\n                        if (iVar7 == 0) goto code_r0x004537c9;\n                        if (*(*0x20 + -0x40) != *(*0x20 + -0x50)) break;\n                        *(*0x20 + -0x248) = *(*0x20 + -0x50);\n                        if (*(*0x20 + -0x30) != *(*0x20 + -0x38)) {\n                            uVar24 = cVar4 == '\\x12';\n                            goto code_r0x0045293e;\n                        }\n                        *(*0x20 + -0x238) = *(*0x20 + -0x38);\n                        *(*0x20 + -0x378) = 0x45397d;\n                        fcn.00435540();\n                        *(*0x20 + -0x378) = 0x45398e;\n                        fcn.00435e40();\n                        *(*0x20 + -0x378) = 0x45399b;\n                        fcn.00435ca0();\n                        *(*0x20 + -0x378) = 0x4539ac;\n                        fcn.00435e40();\n                        *(*0x20 + -0x378) = 0x4539b9;\n                        fcn.00435ca0();\n                        *(*0x20 + -0x378) = 0x4539be;\n                        fcn.004357a0();\n                        *(*0x20 + -0x378) = 0x4539c5;\n                        fcn.004355c0();\n                        iVar9 = *(*0x20 + -0x38);\n                        *(*0x20 + -0x378) = 0x4539e5;\n                        fcn.00456240(*0x20 + -0x60);\n                        *(*0x20 + -0x378) = 0x4539f6;\n                        fcn.00433c80();\n                        while( true ) {\n                            *(*0x20 + -0x300) = iVar9;\n                            *(*0x20 + -0x341) = *(*(*0x20 + -0xa0) + 2);\n                            *(*0x20 + -0x378) = 0x453a25;\n                            iVar9 = fcn.0044ce60();\n                            unaff_RDI = iVar9 + *(*(*0x20 + -0x108) + *(*0x20 + -0x278) * 4 + 0x10);\n                            arg3 = *(*0x20 + -0x341);\n                            uVar8 = *(*0x20 + -0x300);\ncode_r0x00453a57:\n                            *(*0x20 + -0x300) = uVar8;\n                            *(*0x20 + -0x341) = arg3;\n                            *(*0x20 + -0x328) = unaff_RDI;\n                            *(*0x20 + -0x378) = 0x453a85;\n                            in_R10 = unaff_RDI;\n                            iVar5 = fcn.0044dda0(2);\n                            if (iVar5 < 0) break;\n                            uVar11 = iVar5;\n                            if (0xfffff < uVar11) {\n                                uVar11 = 0x100000;\n                                *(*0x20 + -0x378) = 0x454049;\n                                fcn.0045e240(0x100000);\n                                goto code_r0x00454049;\n                            }\n                            *(*0x20 + -0x278) = uVar11 * 5;\n                            iVar9 = *(*0x20 + -0x108);\n                            *(*0x20 + -0x22c) = *(iVar9 + 0xc + uVar11 * 0x14);\n                            *(*0x20 + -0x20c) = *(iVar9 + uVar11 * 0x14 + 2);\n                            *(*0x20 + -0xa0) = iVar9 + uVar11 * 0x14;\n                            if ((*(*0x20 + 8) & 1) == 0) {\n                                *(*0x20 + -0x378) = 0x453b1b;\n                                cVar4 = fcn.00455b00(*(*0x20 + -0x70), *(*0x20 + -0x300), *(*0x20 + -0x341));\n                                if (cVar4 != '\\0') goto code_r0x00453b28;\n                                iVar9 = *(*0x20 + -0x300);\n                            }\n                            else {\ncode_r0x00453b28:\n                                uVar8 = *(*0x20 + -0xc0);\n                                *(*0x20 + -0x378) = 0x453b3d;\n                                uVar13 = fcn.0044d760();\n                                *(*0x20 + -0xf0) = uVar13;\n                                *(*0x20 + -0x2f0) = uVar8;\n                                uVar8 = *(*0x20 + -0x328);\n                                uVar13 = *(*0x20 + -0xc0);\n                                *(*0x20 + -0x378) = 0x453b67;\n                                uVar10 = fcn.0044db40(uVar8);\n                                *(*0x20 + -0xd0) = uVar10;\n                                *(*0x20 + -0x2d0) = uVar13;\n                                *(*0x20 + -0x338) = uVar8;\n                                *(*0x20 + -0x378) = 0x453b85;\n                                fcn.00435540();\n                                *(*0x20 + -0x378) = 0x453b9a;\n                                fcn.00435e40();\n                                *(*0x20 + -0x378) = 0x453bab;\n                                fcn.00435e40();\n                                *(*0x20 + -0x378) = 0x453bb0;\n                                fcn.004355c0();\n                                *(*0x20 + -0x378) = 0x453bb5;\n                                fcn.00435540();\n                                *(*0x20 + -0x378) = 0x453bc6;\n                                fcn.00435e40();\n                                *(*0x20 + -0x378) = 0x453bdb;\n                                fcn.00435e40();\n                                *(*0x20 + -0x378) = 0x453bec;\n                                fcn.00435e40();\n                                *(*0x20 + -0x378) = 0x453bf8;\n                                fcn.00435c40(*(*0x20 + -0x338));\n                                *(*0x20 + -0x378) = 0x453bfd;\n                                fcn.004357a0();\n                                *(*0x20 + -0x378) = 0x453c05;\n                                fcn.004355c0();\n                                iVar9 = *(*0x20 + -0x300) + 1;\n                            }\n                        }\n                        iVar12 = *(*0x20 + -0x260);\n                        arg1 = *(*0x20 + -0x70);\n                        puVar15 = *(*0x20 + -0x268);\n                        iVar7 = *(*0x20 + -0xe0);\n                        unaff_RSI = *(*0x20 + 0x40);\n                        in_R11 = *(*0x20 + -0xb8);\n                        uVar11 = *(*0x20 + 8);\n                        iVar9 = *(*0x20 + -0xa8);\n                        iVar22 = *(*0x20 + -0x2c8);\n                        arg3 = *(*0x20 + -0x341);\n                        unaff_RDI = *(*0x20 + -0x328);\n                        puVar18 = *(*0x20 + -0x300);\n                    }\n                    uVar24 = cVar4 == '\\x12';\ncode_r0x0045293e:\n                    *(*0x20 + -0x60) = iVar7;\n                    *(*0x20 + -0x58) = *(*0x20 + -200);\n                    *(*0x20 + -0x50) = *(*0x20 + -0x40);\n                    *(*0x20 + -0x40) = 0;\n                    uVar11 = *(*0x20 + -0x30);\n                    *(*0x20 + -0x38) = uVar11;\n                    *(*0x20 + -0x30) = 0;\n                    *(*0x20 + -0x10) = 0;\n                    arg4 = *(*0x20 + -0x240);\n                    uVar13 = *(*0x20 + -0x310);\n                    uVar8 = *(*0x20 + -0x318);\n                    *(*0x20 + -0x300) = puVar18;\n                    in_R10 = *(*0x20 + -0x238);\n                    unaff_RDI = uVar11 & 0xffffff00 | uVar24;\n                    uVar10 = 0;\n                }\n                puVar18 = *(*0x20 + -0x300);\ncode_r0x004537c9:\n                while( true ) {\n                    if (*(*0x20 + -0x342) != '\\0') {\n                        puVar15 = puVar18;\n                    }\n                    if ((*(*0x20 + 0x48) == 0) || (unaff_RSI <= puVar15)) break;\n                    puVar18 = *(arg1 + 0x80);\n                    if (puVar18 == *(*0x20 + -0x38)) {\n                        return puVar15;\n                    }\n                    *(*0x20 + -0x238) = *(*0x20 + -0x38);\n                    *(*0x20 + -0x240) = puVar18;\n                    *(*0x20 + -0x2e8) = puVar15;\n                    *(*0x20 + -600) = *(arg1 + 0x98);\n                    *(*0x20 + -0x378) = 0x45383d;\n                    fcn.00435540();\n                    *(*0x20 + -0x378) = 0x45384e;\n                    fcn.00435e40();\n                    *(*0x20 + -0x378) = 0x45385b;\n                    fcn.00435c40();\n                    *(*0x20 + -0x378) = 0x45386c;\n                    fcn.00435e40();\n                    *(*0x20 + -0x378) = 0x453879;\n                    fcn.00435ca0();\n                    *(*0x20 + -0x378) = 0x45388a;\n                    fcn.00435e40();\n                    *(*0x20 + -0x378) = 0x453897;\n                    fcn.00435ca0();\n                    *(*0x20 + -0x378) = 0x45389c;\n                    fcn.004357a0();\n                    *(*0x20 + -0x378) = 0x4538a5;\n                    fcn.004355c0();\n                    arg1 = **(*0x20 + -0x70);\n                    *(*0x20 + -0x238) = arg1;\n                    *(*0x20 + -0x240) = (*(*0x20 + -0x70))[1];\n                    *(*0x20 + -0x378) = 0x4538c9;\n                    fcn.00435540();\n                    *(*0x20 + -0x378) = 0x4538da;\n                    fcn.00435e40();\n                    *(*0x20 + -0x378) = 0x4538e7;\n                    fcn.00435ca0();\n                    *(*0x20 + -0x378) = 0x4538f8;\n                    fcn.00435e40();\n                    *(*0x20 + -0x378) = 0x453905;\n                    fcn.00435ca0();\n                    *(*0x20 + -0x378) = 0x453916;\n                    fcn.00435e40();\n                    *(*0x20 + -0x378) = 0x453925;\n                    fcn.00435c40();\n                    *(*0x20 + -0x378) = 0x453936;\n                    fcn.00435e40();\n                    *(*0x20 + -0x378) = 0x453945;\n                    fcn.00435c40();\n                    *(*0x20 + -0x378) = 0x45394a;\n                    fcn.004357a0();\n                    *(*0x20 + -0x378) = 0x45394f;\n                    fcn.004355c0();\n                    *(*0x20 + -0x378) = 0x453965;\n                    puVar15 = in_R10;\n                    fcn.00433c80();\n                    in_R10 = puVar15;\n                }\n                return puVar15;\n            }\n            goto code_r0x00454356;\n        }\n        goto code_r0x00454367;\n    }\n    goto code_r0x00454379;\ncode_r0x004542d9:\n    *(*0x20 + -0x378) = 0x4542ea;\n    fcn.00433c80();\ncode_r0x004542ea:\n    uVar8 = *(*0x20 + -0xc0);\n    *(*0x20 + -0x378) = 0x4542fa;\n    uVar13 = fcn.0044d760();\n    *(*0x20 + -0x98) = uVar13;\n    *(*0x20 + -0x260) = uVar8;\n    *(*0x20 + -0x378) = 0x45430f;\n    fcn.00435540();\n    *(*0x20 + -0x378) = 0x454325;\n    fcn.00435e40();\n    *(*0x20 + -0x378) = 0x45433a;\n    fcn.00435e40();\n    *(*0x20 + -0x378) = 0x45433f;\n    fcn.004357a0();\n    *(*0x20 + -0x378) = 0x454345;\n    fcn.004355c0();\n    *(*0x20 + -0x378) = 0x454356;\n    fcn.00433c80();\ncode_r0x00454356:\n    *(*0x20 + -0x378) = 0x454367;\n    fcn.00433c80();\ncode_r0x00454367:\n    unaff_RBX = 0x37;\n    *(*0x20 + -0x378) = 0x454378;\n    in_RAX = fcn.00433c80();\ncode_r0x00454379:\n    *(puVar16 + 0x10) = in_RAX;\n    *(puVar16 + 0x18) = unaff_RBX;\n    *(puVar16 + 0x20) = arg1;\n    *(puVar16 + 0x28) = unaff_RDI;\n    *(puVar16 + 0x30) = unaff_RSI;\n    *(puVar16 + 0x38) = arg3;\n    *(puVar16 + 0x40) = arg4;\n    *(puVar16 + 0x48) = in_R10;\n    *(puVar16 + 0x50) = in_R11;\n    *(puVar16 + -8) = 0x4543ab;\n    fcn.0045bb60();\n    in_RAX = *(puVar16 + 0x10);\n    unaff_RBX = *(puVar16 + 0x18);\n    arg1 = *(puVar16 + 0x20);\n    unaff_RDI = *(puVar16 + 0x28);\n    unaff_RSI = *(puVar16 + 0x30);\n    arg3 = *(puVar16 + 0x38);\n    arg4 = *(puVar16 + 0x40);\n    in_R10 = *(puVar16 + 0x48);\n    in_R11 = *(puVar16 + 0x50);\n    *0x20 = puVar16;\n    goto code_r0x004525e0;\n}\n",
        "token_count": 14921
    },
    "00455100": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00455100(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uint64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    uchar auStack312 [256];\n    ulong *puStack56;\n    ulong uStack48;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    while (auStack312 < *(unaff_R14 + 0x10) || auStack312 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (((((*0x8019ab != '\\0') && (iVar1 = *(unaff_RDI + 0x30),  iVar1 != 0)) && (0 < *(iVar1 + 0x108))) &&\n        ((*(unaff_RDI + 0x70) != 0 && (*(iVar1 + 0x110) != NULL)))) && (**(iVar1 + 0x110) != 0)) {\n        *(iVar1 + 0x10c) = 1;\n        iVar1 = fcn.0045e7c0();\n        **(*(iVar1 + 0x30) + 0x110) = 0;\n        *(*(iVar1 + 0x30) + 0x10c) = 0;\n        fcn.00456540();\n    }\n    if ((*(unaff_RDI + 0x90) & 0xffffefff) == 3) {\n        unaff_RSI = unaff_RSI & 0xfffffffffffffffd;\n    }\n    iVar1 = *(unaff_RDI + 0x30);\n    if ((iVar1 != 0) && (*(iVar1 + 0x2f0) != 0)) {\n        unaff_RSI = unaff_RSI & 0xfffffffffffffffd;\n    }\n    iVar1 = fcn.004525e0(arg1, iVar1, 0, 100);\n    if ((iVar1 == 0) && ((unaff_RSI & 1) == 0)) {\n        iVar1 = fcn.004525e0(arg1, unaff_RSI | 1, 0, 100);\n    }\n    if (iVar1 == 100) {\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.004355c0();\n    }\n    fcn.00454da0();\n    puStack56 = *(unaff_RDI + 0x130);\n    if (puStack56 == NULL) {\n        return;\n    }\n    iVar1 = puStack56[1];\n    puStack56 = *puStack56;\n    if (iVar1 != 0) {\n        iVar2 = 0;\n        while( true ) {\n            uStack48 = *puStack56;\n            uStack40 = *(puStack56 + 1);\n            uStack36 = *(puStack56 + 0xc);\n            uStack32 = *(puStack56 + 2);\n            uStack28 = *(puStack56 + 0x14);\n            uStack24 = *(puStack56 + 3);\n            uStack20 = *(puStack56 + 0x1c);\n            uStack16 = *(puStack56 + 4);\n            uStack12 = *(puStack56 + 0x24);\n            fcn.00455460(puStack56[2]);\n            iVar2 = iVar2 + 1;\n            if (iVar1 <= iVar2) break;\n            puStack56 = puStack56 + 5;\n        }\n    }\n    return;\n}\n",
        "token_count": 828
    },
    "00455620": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00455620(ulong arg1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    ulong in_RAX;\n    ulong uVar3;\n    ulong uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t *piVar8;\n    int64_t unaff_R14;\n    \n    do {\n        iVar6 = unaff_RBX;\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x80) = 0x45565f;\n            uVar3 = fcn.0044d760();\n            iVar6 = *(*0x20 + -0x10);\n            if (*(iVar6 + 0x27) < 4) {\n                iVar6 = *(*0x20 + -0x18);\n                uVar5 = 0;\n            }\n            else {\n                uVar1 = *(iVar6 + *(iVar6 + 0x1c) * 4 + 0x34);\n                iVar6 = *(*0x20 + -0x18);\n                uVar5 = uVar1 + *(iVar6 + 0x130) & (uVar1 == 0xffffffff) - 1;\n            }\n            if (uVar5 == 0) goto code_r0x0045571e;\n            *(*0x20 + -0x30) = uVar5;\n            *(*0x20 + -0x40) = unaff_RBX;\n            *(*0x20 + -0x28) = uVar3;\n            *(*0x20 + -0x80) = 0x4556d3;\n            iVar2 = fcn.0044dda0(2);\n            if (iVar2 < 0) {\n                unaff_RBX = *(*0x20 + -0x40);\n                uVar3 = *(*0x20 + -0x28);\n                goto code_r0x00455714;\n            }\n            if (iVar2 < 0x100000) {\n                uVar1 = *(*(*0x20 + -0x30) + 0xc + iVar2 * 0x14);\n                unaff_RBX = *(*0x20 + -0x18);\n                *(*0x20 + -0x80) = 0x455708;\n                uVar3 = fcn.0044d8a0(uVar1);\ncode_r0x00455714:\n                iVar6 = *(*0x20 + -0x18);\ncode_r0x0045571e:\n                *(*0x20 + -0x40) = unaff_RBX;\n                *(*0x20 + -0x28) = uVar3;\n                uVar3 = *(*0x20 + 0x18);\n                *(*0x20 + -0x80) = 0x455745;\n                uVar4 = fcn.0044da20(uVar3);\n                *(*0x20 + -0x20) = uVar4;\n                *(*0x20 + -0x38) = iVar6;\n                *(*0x20 + -0x4c) = uVar3;\n                iVar6 = *(*0x20 + -0x40);\n                if (iVar6 == 0xf) {\n                    piVar8 = *(*0x20 + -0x28);\n                    if ((((*piVar8 == 0x2e656d69746e7572) && (*(piVar8 + 1) == 0x61706f67)) &&\n                        (*(piVar8 + 0xc) == 0x696e)) && (*(piVar8 + 0xe) == 'c')) {\n                        iVar6 = 5;\n                        piVar8 = 0x4af058;\n                    }\n                }\n                else {\n                    piVar8 = *(*0x20 + -0x28);\n                }\n                *(*0x20 + -0x40) = iVar6;\n                *(*0x20 + -0x28) = piVar8;\n                *(*0x20 + -0x80) = 0x4557ab;\n                fcn.00435540();\n                *(*0x20 + -0x80) = 0x4557ba;\n                fcn.00435e40();\n                *(*0x20 + -0x80) = 0x4557cb;\n                fcn.00435e40();\n                *(*0x20 + -0x80) = 0x4557d0;\n                fcn.004355c0();\n                *(*0x20 + -0x80) = 0x4557d5;\n                fcn.00435540();\n                *(*0x20 + -0x80) = 0x4557e6;\n                fcn.00435e40();\n                *(*0x20 + -0x80) = 0x4557f5;\n                fcn.00435e40();\n                *(*0x20 + -0x80) = 0x455806;\n                fcn.00435e40();\n                *(*0x20 + -0x80) = 0x455812;\n                fcn.00435c40();\n                *(*0x20 + -0x80) = 0x455817;\n                fcn.004355c0();\n                *(*0x20 + -0x80) = 0x455828;\n                uVar5 = fcn.0044ce60();\n                if (uVar5 < *(*0x20 + 0x18)) {\n                    *(*0x20 + -0x80) = 0x455846;\n                    uVar3 = fcn.0044ce60();\n                    *(*0x20 + -0x48) = uVar3;\n                    *(*0x20 + -0x80) = 0x455850;\n                    fcn.00435540();\n                    *(*0x20 + -0x80) = 0x455865;\n                    fcn.00435e40();\n                    *(*0x20 + -0x80) = 0x45587a;\n                    fcn.00435ca0(*(*0x20 + -0x48));\n                    *(*0x20 + -0x80) = 0x45587f;\n                    fcn.004355c0();\n                }\n                *(*0x20 + -0x80) = 0x455885;\n                fcn.00435540();\n                *(*0x20 + -0x80) = 0x45588a;\n                fcn.004357a0();\n                *(*0x20 + -0x80) = 0x45588f;\n                fcn.004355c0();\n                return;\n            }\n            arg1 = 0x100000;\n            *(*0x20 + -0x80) = 0x4558a5;\n            in_RAX = fcn.0045e240(0x100000);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = iVar6;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x4558ba;\n        fcn.0045bb60();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1811
    },
    "00455dc0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00455dc0(void)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    uint32_t uVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    int64_t iStack64;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    uVar1 = *(in_RAX + 0x90);\n    uVar2 = uVar1 & 0xffffefff;\n    if (((uVar2 == 4) || (uVar2 == 3)) && (*(in_RAX + 0xa8) != 0)) {\n        fcn.0045fb60();\n        iVar3 = (iStack64 - *(in_RAX + 0xa8)) / 60000000000;\n    }\n    else {\n        iVar3 = 0;\n    }\n    fcn.00435540();\n    fcn.00435e40();\n    fcn.00435c40();\n    fcn.00435e40();\n    fcn.00435e40();\n    fcn.004355c0();\n    if ((uVar1 >> 0xc & 1) != 0) {\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.004355c0();\n    }\n    if (0 < iVar3) {\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.00435c40();\n        fcn.00435e40();\n        fcn.004355c0();\n    }\n    if (*(in_RAX + 0xe8) != 0) {\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.004355c0();\n    }\n    fcn.00435540();\n    fcn.00435e40();\n    fcn.004355c0();\n    return;\n}\n",
        "token_count": 452
    },
    "00458880": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00458880(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    int64_t in_RAX;\n    uint64_t uVar6;\n    uint64_t unaff_RBX;\n    int64_t iVar7;\n    \n    if (unaff_RBX <= arg1) {\n        return 0xfffd;\n    }\n    if (arg1 <= unaff_RBX) {\n        iVar7 = unaff_RBX - arg1;\n        unaff_RBX = -iVar7 >> 0x3f & arg1;\n        if (iVar7 != 0) {\n            uVar1 = *(in_RAX + unaff_RBX);\n            if (0xbf < uVar1) {\n                uVar5 = uVar1;\n                if (uVar1 < 0xe0) {\n                    if (((1 < iVar7) && (uVar1 = *(in_RAX + 1 + unaff_RBX),  0x7f < uVar1)) &&\n                       ((uVar1 < 0xc0 && (uVar5 = uVar1 & 0x3f | (uVar5 & 0x1f) << 6,  0x7f < uVar5)))) {\n                        return uVar5;\n                    }\n                }\n                else if (uVar1 < 0xf0) {\n                    if ((((2 < iVar7) && (uVar1 = *(in_RAX + 1 + unaff_RBX),  0x7f < uVar1)) && (uVar1 < 0xc0)) &&\n                       ((uVar2 = *(in_RAX + 2 + unaff_RBX),  0x7f < uVar2 && (uVar2 < 0xc0)))) {\n                        uVar5 = uVar2 & 0x3f | (uVar1 & 0x3f) << 6 | (uVar5 & 0xf) << 0xc;\n                        if ((0x7ff < uVar5) && (0x7ff < uVar5 - 0xd800)) {\n                            return uVar5;\n                        }\n                    }\n                }\n                else if ((((((uVar1 < 0xf8) && (3 < iVar7)) && (uVar1 = *(in_RAX + 1 + unaff_RBX),  0x7f < uVar1)) &&\n                          ((uVar1 < 0xc0 && (uVar2 = *(in_RAX + 2 + unaff_RBX),  0x7f < uVar2)))) &&\n                         ((uVar2 < 0xc0 && ((uVar3 = *(in_RAX + 3 + unaff_RBX),  0x7f < uVar3 && (uVar3 < 0xc0)))))) &&\n                        (uVar5 = uVar3 & 0x3f | (uVar5 & 7) << 0x12 | (uVar1 & 0x3f) << 0xc | (uVar2 & 0x3f) << 6, \n                        uVar5 - 0x10000 < 0x100000)) {\n                    return uVar5;\n                }\n            }\n            return 0xfffd;\n        }\n        fcn.0045e240(0);\n    }\n    fcn.0045e300(unaff_RBX);\n    pcVar4 = swi(3);\n    uVar6 = (*pcVar4)();\n    return uVar6;\n}\n",
        "token_count": 800
    },
    "00458a60": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00458a60(void)\n\n{\n    code *pcVar1;\n    uint8_t uVar2;\n    uint8_t *in_RAX;\n    ulong uVar3;\n    uint64_t unaff_RBX;\n    uint8_t uVar4;\n    uint32_t unaff_EDI;\n    \n    uVar4 = unaff_EDI;\n    if (unaff_EDI < 0x80) {\n        if (unaff_RBX != 0) {\n            *in_RAX = uVar4;\n            return 1;\n        }\n        goto code_r0x00458bac;\n    }\n    uVar2 = unaff_EDI >> 6;\n    if (unaff_EDI < 0x800) {\n        if (1 < unaff_RBX) {\n            *in_RAX = uVar2 | 0xc0;\n            in_RAX[1] = uVar4 & 0x3f | 0x80;\n            return 2;\n        }\n    }\n    else {\n        if ((unaff_EDI < 0x110000) && (0x7ff < unaff_EDI - 0xd800)) {\n            if (unaff_EDI < 0x10000) goto code_r0x00458b00;\n            if (3 < unaff_RBX) {\n                *in_RAX = unaff_EDI >> 0x12 | 0xf0;\n                in_RAX[1] = unaff_EDI >> 0xc & 0x3f | 0x80;\n                in_RAX[2] = uVar2 & 0x3f | 0x80;\n                in_RAX[3] = uVar4 & 0x3f | 0x80;\n                return 4;\n            }\n            fcn.0045e240(unaff_RBX);\n        }\n        else {\n            unaff_EDI = 0xfffd;\ncode_r0x00458b00:\n            if (2 < unaff_RBX) {\n                *in_RAX = unaff_EDI >> 0xc | 0xe0;\n                in_RAX[1] = unaff_EDI >> 6 & 0x3f | 0x80;\n                in_RAX[2] = unaff_EDI & 0x3f | 0x80;\n                return 3;\n            }\n        }\n        fcn.0045e240(unaff_RBX);\n    }\n    fcn.0045e240(unaff_RBX);\ncode_r0x00458bac:\n    fcn.0045e240(0);\n    pcVar1 = swi(3);\n    uVar3 = (*pcVar1)();\n    return uVar3;\n}\n",
        "token_count": 594
    },
    "00459a40": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00459a40(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t *in_RAX;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (unaff_RBX < 4) {\n        if (unaff_RBX == 0) {\ncode_r0x00459ad6:\n            uVar1 = 4;\n            goto code_r0x00459b12;\n        }\n        if (((unaff_RBX == 3) && (*in_RAX == 0x6c61)) && (*(in_RAX + 2) == 'l')) {\n            uVar1 = 6;\n            goto code_r0x00459b12;\n        }\n    }\n    else if (unaff_RBX == 4) {\n        if (*in_RAX == 0x656e6f6e) {\n            uVar1 = 0;\n            goto code_r0x00459b12;\n        }\n    }\n    else if (unaff_RBX == 5) {\n        if ((*in_RAX == 0x73617263) && (*(in_RAX + 1) == 'h')) {\n            uVar1 = 0xb;\n            goto code_r0x00459b12;\n        }\n    }\n    else if (unaff_RBX == 6) {\n        if ((*in_RAX == 0x676e6973) && (*(in_RAX + 1) == 0x656c)) goto code_r0x00459ad6;\n        if ((*in_RAX == 0x74737973) && (*(in_RAX + 1) == 0x6d65)) {\n            uVar1 = 10;\n            goto code_r0x00459b12;\n        }\n    }\n    uVar3 = fcn.0044bd40();\n    if ((unaff_RBX == '\\0') || (uVar3 != (uVar3 & 0xffffffff))) {\n        uVar1 = 2;\n    }\n    else {\n        uVar1 = uVar3 << 2 | 2;\n    }\ncode_r0x00459b12:\n    if ((*0x8019ac != '\\0') || (*0x8019aa != '\\0')) {\n        uVar1 = uVar1 | 1;\n    }\n    uVar2 = *0x79528c;\n    *0x79528c = uVar1 | *0x801a1c;\n    return uVar2;\n}\n",
        "token_count": 608
    },
    "00464be0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00464be0(void)\n\n{\n    int64_t iVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    uint8_t *in_RAX;\n    uint64_t uVar4;\n    uint32_t uVar5;\n    uint64_t unaff_RBX;\n    uint32_t uVar6;\n    \n    if (unaff_RBX == 0) {\n        return 0xfffd;\n    }\n    uVar2 = *(*in_RAX + 0x7994a0);\n    uVar5 = *in_RAX;\n    if (0xef < uVar2) {\n        uVar6 = (uVar2 << 0x1f) >> 0x1f;\n        return ~uVar6 & uVar5 | uVar6 & 0xfffd;\n    }\n    uVar4 = uVar2 & 7;\n    iVar1 = (uVar2 >> 4) * 2;\n    if (unaff_RBX < uVar4) {\n        return 0xfffd;\n    }\n    if (1 < unaff_RBX) {\n        uVar2 = in_RAX[1];\n        if ((uVar2 < *(iVar1 + 0x796120)) || (*(iVar1 + 0x796121) < uVar2)) {\n            return 0xfffd;\n        }\n        uVar6 = uVar2;\n        if (uVar4 < 3) {\n            return (uVar5 & 0x1f) << 6 | uVar6 & 0x3f;\n        }\n        uVar2 = in_RAX[2];\n        if (uVar2 + 0x80 < 0x40) {\n            if (uVar4 < 4) {\n                return (uVar5 & 0xf) << 0xc | (uVar6 & 0x3f) << 6 | uVar2 & 0x3f;\n            }\n            if (0x3f < in_RAX[3] + 0x80) {\n                return 0xfffd;\n            }\n            return in_RAX[3] & 0x3f | (uVar5 & 7) << 0x12 | (uVar6 & 0x3f) << 0xc | (uVar2 & 0x3f) << 6;\n        }\n        return 0xfffd;\n    }\n    fcn.0045e240(1);\n    pcVar3 = swi(3);\n    uVar4 = (*pcVar3)();\n    return uVar4;\n}\n",
        "token_count": 570
    },
    "00464da0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00464da0(void)\n\n{\n    int64_t iVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    uint8_t *in_RAX;\n    uint64_t uVar4;\n    uint32_t uVar5;\n    uint64_t unaff_RBX;\n    uint32_t uVar6;\n    \n    if (unaff_RBX == 0) {\n        return 0xfffd;\n    }\n    uVar2 = *(*in_RAX + 0x7994a0);\n    uVar5 = *in_RAX;\n    if (0xef < uVar2) {\n        uVar6 = (uVar2 << 0x1f) >> 0x1f;\n        return ~uVar6 & uVar5 | uVar6 & 0xfffd;\n    }\n    uVar4 = uVar2 & 7;\n    iVar1 = (uVar2 >> 4) * 2;\n    if (unaff_RBX < uVar4) {\n        return 0xfffd;\n    }\n    if (1 < unaff_RBX) {\n        uVar2 = in_RAX[1];\n        if ((uVar2 < *(iVar1 + 0x796120)) || (*(iVar1 + 0x796121) < uVar2)) {\n            return 0xfffd;\n        }\n        uVar6 = uVar2;\n        if (uVar4 < 3) {\n            return (uVar5 & 0x1f) << 6 | uVar6 & 0x3f;\n        }\n        uVar2 = in_RAX[2];\n        if (uVar2 + 0x80 < 0x40) {\n            if (uVar4 < 4) {\n                return (uVar5 & 0xf) << 0xc | (uVar6 & 0x3f) << 6 | uVar2 & 0x3f;\n            }\n            if (0x3f < in_RAX[3] + 0x80) {\n                return 0xfffd;\n            }\n            return in_RAX[3] & 0x3f | (uVar5 & 7) << 0x12 | (uVar6 & 0x3f) << 0xc | (uVar2 & 0x3f) << 6;\n        }\n        return 0xfffd;\n    }\n    fcn.0045e240(1);\n    pcVar3 = swi(3);\n    uVar4 = (*pcVar3)();\n    return uVar4;\n}\n",
        "token_count": 570
    },
    "00465080": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00465080(void)\n\n{\n    code *pcVar1;\n    uint8_t uVar2;\n    uint8_t *in_RAX;\n    ulong uVar3;\n    uint64_t unaff_RBX;\n    uint8_t uVar4;\n    uint32_t unaff_EDI;\n    \n    uVar4 = unaff_EDI;\n    if (unaff_EDI < 0x80) {\n        if (unaff_RBX != 0) {\n            *in_RAX = uVar4;\n            return 1;\n        }\n        goto code_r0x004651cc;\n    }\n    uVar2 = unaff_EDI >> 6;\n    if (unaff_EDI < 0x800) {\n        if (1 < unaff_RBX) {\n            *in_RAX = uVar2 | 0xc0;\n            in_RAX[1] = uVar4 & 0x3f | 0x80;\n            return 2;\n        }\n    }\n    else {\n        if ((unaff_EDI < 0x110000) && (0x7ff < unaff_EDI - 0xd800)) {\n            if (unaff_EDI < 0x10000) goto code_r0x00465120;\n            if (3 < unaff_RBX) {\n                *in_RAX = unaff_EDI >> 0x12 | 0xf0;\n                in_RAX[1] = unaff_EDI >> 0xc & 0x3f | 0x80;\n                in_RAX[2] = uVar2 & 0x3f | 0x80;\n                in_RAX[3] = uVar4 & 0x3f | 0x80;\n                return 4;\n            }\n            fcn.0045e240(unaff_RBX);\n        }\n        else {\n            unaff_EDI = 0xfffd;\ncode_r0x00465120:\n            if (2 < unaff_RBX) {\n                *in_RAX = unaff_EDI >> 0xc | 0xe0;\n                in_RAX[1] = unaff_EDI >> 6 & 0x3f | 0x80;\n                in_RAX[2] = unaff_EDI & 0x3f | 0x80;\n                return 3;\n            }\n        }\n        fcn.0045e240(unaff_RBX);\n    }\n    fcn.0045e240(unaff_RBX);\ncode_r0x004651cc:\n    fcn.0045e240(0);\n    pcVar1 = swi(3);\n    uVar3 = (*pcVar1)();\n    return uVar3;\n}\n",
        "token_count": 591
    },
    "004651e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.004651e0(void)\n\n{\n    int64_t iVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    \n    uVar6 = 0;\n    iVar4 = 0;\n    do {\n        if (unaff_RBX <= uVar6) {\n            return iVar4;\n        }\n        if (unaff_RBX <= uVar6) goto code_r0x00465333;\n        if (*(in_RAX + uVar6) < 0x80) {\n            uVar6 = uVar6 + 1;\n        }\n        else {\n            uVar2 = *(*(in_RAX + uVar6) + 0x7994a0);\n            if (uVar2 == 0xf1) {\n                uVar6 = uVar6 + 1;\n            }\n            else {\n                uVar5 = uVar2 & 7;\n                if (unaff_RBX < uVar5 + uVar6) {\n                    uVar6 = uVar6 + 1;\n                }\n                else {\n                    iVar1 = (uVar2 >> 4) * 2;\n                    if (unaff_RBX <= uVar6 + 1) {\ncode_r0x00465328:\n                        fcn.0045e240(unaff_RBX);\ncode_r0x00465333:\n                        fcn.0045e240(unaff_RBX);\n                        pcVar3 = swi(3);\n                        iVar4 = (*pcVar3)();\n                        return iVar4;\n                    }\n                    uVar2 = *(uVar6 + 1 + in_RAX);\n                    if ((uVar2 < *(iVar1 + 0x796120)) || (*(iVar1 + 0x796121) < uVar2)) {\n                        uVar5 = 1;\n                    }\n                    else if (uVar5 != 2) {\n                        if (unaff_RBX <= uVar6 + 2) {\ncode_r0x0046531d:\n                            fcn.0045e240(unaff_RBX);\n                            goto code_r0x00465328;\n                        }\n                        if (*(uVar6 + 2 + in_RAX) + 0x80U < 0x40) {\n                            if (uVar5 != 3) {\n                                if (unaff_RBX <= uVar6 + 3) {\n                                    fcn.0045e240(unaff_RBX);\n                                    goto code_r0x0046531d;\n                                }\n                                if (0x3f < *(uVar6 + 3 + in_RAX) + 0x80U) {\n                                    uVar5 = 1;\n                                }\n                            }\n                        }\n                        else {\n                            uVar5 = 1;\n                        }\n                    }\n                    uVar6 = uVar5 + uVar6;\n                }\n            }\n        }\n        iVar4 = iVar4 + 1;\n    } while( true );\n}\n",
        "token_count": 667
    },
    "00465340": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00465340(int64_t arg1)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint64_t in_RAX;\n    uint64_t uVar4;\n    uint32_t unaff_EBX;\n    int64_t iVar5;\n    uint64_t unaff_RDI;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int32_t aiStack20 [3];\n    \n    if (2 < in_RAX) {\n        return 0xfffd;\n    }\n    iVar5 = 0;\n    uVar4 = unaff_RDI;\n    while( true ) {\n        uVar6 = uVar4;\n        if (uVar6 <= iVar5) {\n            return unaff_EBX;\n        }\n        iVar7 = (uVar6 - iVar5) / 2;\n        uVar4 = iVar7 + iVar5;\n        if (unaff_RDI <= uVar4) break;\n        iVar1 = arg1 + uVar4 * 0x14;\n        iVar3 = *(arg1 + uVar4 * 0x14);\n        aiStack20[0] = *(iVar1 + 8);\n        aiStack20[1] = *(iVar1 + 0xc);\n        aiStack20[2] = *(iVar1 + 0x10);\n        if (iVar3 <= unaff_EBX) {\n            if (unaff_EBX <= *(iVar1 + 4)) {\n                if (aiStack20[in_RAX] < 0x110000) {\n                    return aiStack20[in_RAX] + unaff_EBX;\n                }\n                return (unaff_EBX - iVar3 & 0xfffffffe | in_RAX & 1) + iVar3;\n            }\n            if (iVar3 <= unaff_EBX) {\n                iVar5 = iVar7 + iVar5 + 1;\n                uVar4 = uVar6;\n            }\n        }\n    }\n    fcn.0045e240(unaff_RDI);\n    pcVar2 = swi(3);\n    uVar4 = (*pcVar2)();\n    return uVar4;\n}\n",
        "token_count": 470
    },
    "0046b9a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0046b9a0(int64_t arg1, ulong noname_1, int64_t **arg3)\n\n{\n    ulong uVar1;\n    bool bVar2;\n    int32_t iVar3;\n    int64_t in_RAX;\n    ulong uVar4;\n    int64_t iVar5;\n    ulong *puVar6;\n    int64_t **ppiVar7;\n    int64_t iVar8;\n    ulong uVar9;\n    uint64_t arg1_00;\n    int64_t **ppiVar10;\n    int64_t *piVar11;\n    int64_t **arg1_01;\n    int64_t **unaff_RBX;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    int64_t **unaff_RSI;\n    int64_t **unaff_RDI;\n    uint32_t uVar13;\n    int64_t **ppiVar14;\n    uint8_t uVar15;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x1d8 && *0x20 + -0x1d8 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -600;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x1f8) = 0;\n            *(*0x20 + -0x1d0) = 0;\n            *(*0x20 + -0xb0) = in_XMM15;\n            if (unaff_RBX == NULL) {\n                *(*0x20 + -0x1f8) = 0;\n                *(*0x20 + -0x1d0) = 0;\n                *(*0x20 + -0xb0) = 0x732cf8;\n                *(*0x20 + -0xa8) = 0x732890;\n                *(*0x20 + -0x260) = 0x46bede;\n                fcn.004328a0();\n                return *(*0x20 + -0x1f8);\n            }\n            if (arg3 == NULL) {\n                arg3 = 0x7adbe0;\n            }\n            piVar11 = arg3[8];\n            if (piVar11 == NULL) {\n                piVar11 = 0x7adc40;\n            }\n            if (3 < arg3[6]) {\n                *(*0x20 + -0x1f8) = 0;\n                *(*0x20 + -0x1d0) = 0;\n                *(*0x20 + -0xb0) = 0x732cf8;\n                *(*0x20 + -0xa8) = 0x732890;\n                *(*0x20 + -0x260) = 0x46be79;\n                fcn.004328a0();\n                return *(*0x20 + -0x1f8);\n            }\n            if (arg3[6] < 3) {\n                *(*0x20 + -0x1f8) = 0;\n                *(*0x20 + -0x1d0) = 0;\n                *(*0x20 + -0xb0) = 0x732cf8;\n                *(*0x20 + -0xa8) = 0x732888;\n                *(*0x20 + -0x260) = 0x46be14;\n                fcn.004328a0();\n                return *(*0x20 + -0x1f8);\n            }\n            *(*0x20 + -0xb8) = arg3;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + -0xe8) = piVar11;\n            ppiVar7 = arg3[1];\n            ppiVar14 = *arg3;\n            ppiVar10 = unaff_RBX;\n            if (ppiVar7 != NULL) {\n                *(*0x20 + -0x260) = 0x46ba7e;\n                fcn.0046b6a0(in_RAX);\n                arg1 = in_RAX;\n                ppiVar10 = ppiVar7;\n                unaff_RDI = unaff_RBX;\n                if (in_RAX != 0) {\n                    *(*0x20 + -0x1f8) = 0;\n                    *(*0x20 + -0x1d0) = 0;\n                    *(*0x20 + -0xb0) = in_RAX;\n                    *(*0x20 + -0xa8) = unaff_RBX;\n                    *(*0x20 + -0x260) = 0x46bdaf;\n                    fcn.004328a0();\n                    return *(*0x20 + -0x1f8);\n                }\n            }\n            unaff_RBX = ppiVar10;\n            *(*0x20 + -0x260) = 0x46ba8e;\n            uVar4 = fcn.0046ca80(arg1);\n            if (unaff_RDI == NULL) {\n                if (unaff_RBX != NULL) {\n                    unaff_RDI = NULL;\n                    unaff_RSI = NULL;\n                    goto code_r0x0046baad;\n                }\n            }\n            else {\n                uVar4 = 0;\ncode_r0x0046baad:\n                *(*0x20 + -0xb0) = unaff_RDI;\n                *(*0x20 + -0xa8) = unaff_RSI;\n                if (unaff_RDI != NULL) {\n                    *(*0x20 + -0x1f8) = 0;\n                    *(*0x20 + -0x1d0) = 0;\n                    *(*0x20 + -0x260) = 0x46bd58;\n                    fcn.004328a0();\n                    return *(*0x20 + -0x1f8);\n                }\n                *(*0x20 + -0xf0) = uVar4;\n                unaff_RBX = *(*(*0x20 + -0xe8) + 0x10);\n                unaff_RDI = *(*(*0x20 + -0xe8) + 8);\n                if (unaff_RBX == NULL) {\n                    unaff_RBX = *(*0x20 + 0x20);\n                    arg1 = *(*0x20 + 0x28);\n                    *(*0x20 + -0x260) = 0x46bb05;\n                    unaff_RDI = fcn.0046af80(arg1);\n                }\n                if (unaff_RBX == NULL) {\n                    uVar4 = 0;\ncode_r0x0046bb7c:\n                    *(*0x20 + -0xd0) = uVar4;\n                    unaff_RSI = *(*0x20 + -0xb8);\n                    unaff_RBX = unaff_RSI[1];\n                    unaff_RDI = *unaff_RSI;\n                    if (unaff_RBX == NULL) {\n                        uVar4 = 0;\ncode_r0x0046bbd7:\n                        *(*0x20 + -0xd8) = uVar4;\n                        *(*0x20 + -0x200) = 0;\n                        *(*0x20 + -0x204) = 0;\n                        *(*0x20 + -0x1fc) = 0;\n                        *(*0x20 + -0x260) = 0x46bc0b;\n                        fcn.004700a0(*0x20 + -0x1fc);\n                        if (*(*0x20 + -0x200) < 6) {\n                            bVar2 = true;\n                        }\n                        else if (*(*0x20 + -0x200) == 6) {\n                            bVar2 = *(*0x20 + -0x204) < 2;\n                        }\n                        else {\n                            bVar2 = false;\n                        }\n                        *(*0x20 + -0x205) = bVar2;\n                        *(*0x20 + -0x260) = 0x46bc32;\n                        uVar4 = fcn.0046eca0();\n                        *(*0x20 + -0x1e8) = uVar4;\n                        *(*0x20 + -0x1b0) = *(*(*0x20 + -0xe8) + 0x58);\n                        uVar4 = *(*(*0x20 + -0xb8) + 0x30);\n                        *(*0x20 + -0x1c0) = uVar4;\n                        *(*0x20 + -0x260) = 0x46bc71;\n                        iVar5 = fcn.00447240(uVar4);\n                        *(*0x20 + -0xc0) = iVar5;\n                        unaff_RBX = *(*0x20 + -0x1e8);\n                        ppiVar7 = unaff_RBX;\n                        if (*(*0x20 + -0x1b0) != NULL) {\n                            ppiVar7 = *(*0x20 + -0x1b0);\n                        }\n                        *(*0x20 + -0x1f0) = ppiVar7;\n                        iVar8 = *(*0x20 + -0xb8);\n                        unaff_RSI = *(iVar8 + 0x30);\n                        *(*0x20 + -0x1b8) = unaff_RSI;\n                        for (unaff_RDI = NULL; unaff_RDI < unaff_RSI; unaff_RDI = unaff_RDI + 1) {\n                            ppiVar14 = *(iVar8 + 0x30);\n                            if (ppiVar14 <= unaff_RDI) goto code_r0x0046c7ba;\n                            ppiVar10 = *(*(iVar8 + 0x28) + unaff_RDI * 8);\n                            ppiVar14 = ppiVar10;\n                            if (ppiVar10 != NULL) {\n                                arg1_01 = ppiVar7;\n                                if (((unaff_RBX != ppiVar7) && (*(*0x20 + -0x205) != '\\0')) &&\n                                   ((ppiVar10 & 0x10000003) == 3)) {\n                                    arg1_01 = unaff_RBX;\n                                }\n                                ppiVar14 = *(*0x20 + -0x1c0);\n                                if (ppiVar14 <= unaff_RDI) goto code_r0x0046c7af;\n                                *(*0x20 + -0x1d8) = unaff_RDI;\n                                ppiVar14 = iVar5 + unaff_RDI * 8;\n                                arg3 = 0x1;\n                                *(*0x20 + -0x260) = 0x46bfaa;\n                                iVar5 = fcn.0046e520(arg1_01, arg1_01, 1, 2);\n                                if (iVar5 != 0) {\n                                    *(*0x20 + -0x1f8) = 0;\n                                    *(*0x20 + -0x1d0) = 0;\n                                    *(*0x20 + -0xb0) = iVar5;\n                                    *(*0x20 + -0xa8) = ppiVar10;\n                                    *(*0x20 + -0x260) = 0x46c08f;\n                                    fcn.004328a0();\n                                    return *(*0x20 + -0x1f8);\n                                }\n                                *(*0x20 + -0x1b0) = *(*(*0x20 + -0xc0) + *(*0x20 + -0x1d8) * 8);\n                                *(*0x20 + -0x260) = 0x46bfdb;\n                                puVar6 = fcn.0040c560();\n                                *puVar6 = 0x46c900;\n                                puVar6[1] = *(*0x20 + -0x1f0);\n                                puVar6[2] = *(*0x20 + -0x1b0);\n                                *(*0x20 + -0x260) = 0x46bfff;\n                                iVar3 = fcn.00432160();\n                                if (iVar3 != 0) {\n                                    *(*0x20 + -0x260) = 0x46c038;\n                                    fcn.004328a0();\n                                    return *(*0x20 + -0x1f8);\n                                }\n                                iVar5 = *(*0x20 + -0xc0);\n                                iVar8 = *(*0x20 + -0xb8);\n                                ppiVar7 = *(*0x20 + -0x1f0);\n                                unaff_RBX = *(*0x20 + -0x1e8);\n                                unaff_RSI = *(*0x20 + -0x1b8);\n                                unaff_RDI = *(*0x20 + -0x1d8);\n                            }\n                        }\n                        *(*0x20 + -0x268) = unaff_RBP;\n                        *(*0x20 + -0x260) = 0x46c0d7;\n                        fcn.0045e4e6();\n                        unaff_RBP = *(*0x20 + -0x268);\n                        *(*0x20 + -0x260) = 0x46c0e5;\n                        uVar4 = fcn.0046d640();\n                        *(*0x20 + -0x10) = uVar4;\n                        *(*0x20 + -0xb0) = unaff_RBX;\n                        *(*0x20 + -0xa8) = iVar8;\n                        if (unaff_RBX != NULL) {\n                            *(*0x20 + -0x1f8) = 0;\n                            *(*0x20 + -0x1d0) = 0;\n                            *(*0x20 + -0x260) = 0x46c365;\n                            fcn.004328a0();\n                            return *(*0x20 + -0x1f8);\n                        }\n                        *(*0x20 + -0xa0) = in_XMM15;\n                        *(*0x20 + -0xa0) = 0x46c8a0;\n                        *(*0x20 + -0x98) = *(*0x20 + -0x10);\n                        *(*0x20 + -0x120) = *0x20 + -0xa0;\n                        *(*0x20 + -0x260) = 0x46c14e;\n                        iVar3 = fcn.00432260();\n                        if (iVar3 != 0) {\n                            *(*0x20 + -0x260) = 0x46c319;\n                            fcn.004328a0();\n                            return *(*0x20 + -0x1f8);\n                        }\n                        *(*0x20 + -0x78) = 0x70;\n                        *(*0x20 + -0x3c) = 0x100;\n                        unaff_RDI = *(*0x20 + -0xe8);\n                        if (*unaff_RDI != '\\0') {\n                            *(*0x20 + -0x3c) = 0x101;\n                            *(*0x20 + -0x38) = 0;\n                        }\n                        ppiVar7 = arg3;\n                        if (unaff_RDI[0xb] != NULL) {\n                            unaff_RBX = NULL;\n                            unaff_RSI = 0x8;\n                            ppiVar7 = NULL;\n                            *(*0x20 + -0x260) = 0x46c1bb;\n                            iVar5 = fcn.0046fc80(0x20000, unaff_RDI + 0xb, 0, 0);\n                            *(*0x20 + -0xb0) = iVar5;\n                            *(*0x20 + -0xa8) = 0;\n                            if (iVar5 != 0) {\n                                *(*0x20 + -0x1f8) = 0;\n                                *(*0x20 + -0x1d0) = 0;\n                                *(*0x20 + -0x260) = 0x46c2e7;\n                                fcn.004328a0();\n                                return *(*0x20 + -0x1f8);\n                            }\n                            unaff_RDI = *(*0x20 + -0xe8);\n                        }\n                        arg1_00 = *(*0x20 + -0x1c0);\n                        if (arg1_00 != 0) {\n                            unaff_RBX = *(*0x20 + -0xc0);\n                            *(*0x20 + -0x28) = *unaff_RBX;\n                            if (1 < arg1_00) {\n                                *(*0x20 + -0x20) = unaff_RBX[1];\n                                if (2 < arg1_00) {\n                                    *(*0x20 + -0x18) = unaff_RBX[2];\n                                    piVar11 = unaff_RDI[9];\n                                    *(*0x20 + -0x1c8) = arg1_00 + piVar11;\n                                    ppiVar14 = unaff_RDI[8];\n                                    ppiVar7 = unaff_RBX;\n                                    unaff_RBX = ppiVar14;\n                                    if (arg1_00 < arg1_00 + piVar11) {\n                                        *(*0x20 + -0x1b8) = piVar11;\n                                        *(*0x20 + -200) = ppiVar14;\n                                        *(*0x20 + -0x260) = 0x46c273;\n                                        ppiVar7 = fcn.00447360(arg1_00);\n                                        piVar11 = *(*0x20 + -0x1b8);\n                                        unaff_RBX = *(*0x20 + -200);\n                                    }\n                                    *(*0x20 + -0x1c0) = arg1_00;\n                                    *(*0x20 + -0xe0) = ppiVar7;\n                                    *(*0x20 + -0x260) = 0x46c2b1;\n                                    ppiVar7 = unaff_RBX;\n                                    fcn.0045ebc0(piVar11 << 3);\n                                    iVar5 = *(*0x20 + -0xe0);\n                                    uVar15 = *(*0x20 + -0x205);\n                                    unaff_RSI = uVar15;\n                                    unaff_RDI = *(*0x20 + -0x1c8);\n                                    for (iVar8 = 0; iVar8 < unaff_RDI; iVar8 = iVar8 + 1) {\n                                        if ((uVar15 != 0) && ((*(iVar5 + iVar8 * 8) & 0x10000003) == 3)) {\n                                            *(iVar5 + iVar8 * 8) = 0;\n                                        }\n                                    }\n                                    ppiVar10 = NULL;\n                                    for (iVar8 = 0; iVar8 < unaff_RDI; iVar8 = iVar8 + 1) {\n                                        ppiVar14 = *(iVar5 + iVar8 * 8);\n                                        if (ppiVar14 != NULL) {\n                                            if (unaff_RDI <= ppiVar10) goto code_r0x0046c77e;\n                                            *(iVar5 + ppiVar10 * 8) = ppiVar14;\n                                            ppiVar10 = ppiVar10 + 1;\n                                        }\n                                    }\n                                    ppiVar14 = *(*0x20 + -0x1c0);\n                                    if (ppiVar10 <= ppiVar14) {\n                                        if (ppiVar10 == NULL) {\n                                            uVar15 = 0;\n                                        }\n                                        else {\n                                            uVar15 = *(*(*0x20 + -0xe8) + 0x38) ^ 1;\n                                        }\n                                        *(*0x20 + -0x206) = uVar15;\n                                        *(*0x20 + -0x1e0) = ppiVar10;\n                                        if (uVar15 == 0) {\ncode_r0x0046c4b5:\n                                            iVar5 = *(*(*0x20 + -0xb8) + 0x18);\n                                            uVar4 = *(*(*0x20 + -0xb8) + 0x20);\n                                            *(*0x20 + -0x260) = 0x46c4ce;\n                                            uVar9 = fcn.0046b0e0(uVar4);\n                                            *(*0x20 + -0xb0) = iVar5;\n                                            *(*0x20 + -0xa8) = uVar4;\n                                            if (iVar5 != 0) {\n                                                *(*0x20 + -0x1f8) = 0;\n                                                *(*0x20 + -0x1d0) = 0;\n                                                *(*0x20 + -0x260) = 0x46c73f;\n                                                fcn.004328a0();\n                                                return *(*0x20 + -0x1f8);\n                                            }\n                                            *(*0x20 + -0x198) = in_XMM15;\n                                            *(*0x20 + -0x188) = 0;\n                                            iVar5 = *(*0x20 + -0xe8);\n                                            uVar13 = *(iVar5 + 0x18) | 0x80400;\n                                            if (*(iVar5 + 0x20) == 0) {\n                                                uVar4 = *(iVar5 + 0x28);\n                                                *(*0x20 + -600) = *0x20 + -0x198;\n                                                uVar1 = *(*0x20 + -0xd0);\n                                                *(*0x20 + -0x260) = 0x46c5ba;\n                                                uVar4 = fcn.0046e2a0(uVar4, iVar5, uVar13, uVar9);\n                                                *(*0x20 + -0xb0) = uVar4;\n                                                *(*0x20 + -0xa8) = uVar1;\n                                            }\n                                            else {\n                                                *(*0x20 + -600) = *0x20 + -0x78;\n                                                *(*0x20 + -0x250) = *0x20 + -0x198;\n                                                uVar4 = *(*0x20 + -0xf0);\n                                                *(*0x20 + -0x260) = 0x46c567;\n                                                uVar9 = fcn.0046d760(*(*0x20 + -0xd0), iVar5, *(*0x20 + -0x206), uVar13)\n                                                ;\n                                                *(*0x20 + -0xb0) = uVar9;\n                                                *(*0x20 + -0xa8) = uVar4;\n                                            }\n                                            if (*(*0x20 + -0xb0) != 0) {\n                                                *(*0x20 + -0x1f8) = 0;\n                                                *(*0x20 + -0x1d0) = 0;\n                                                *(*0x20 + -0x260) = 0x46c6f8;\n                                                fcn.004328a0();\n                                                return *(*0x20 + -0x1f8);\n                                            }\n                                            *(*0x20 + -0x1a8) = in_XMM15;\n                                            *(*0x20 + -0x1a8) = 0x46c840;\n                                            *(*0x20 + -0x1a0) = *(*0x20 + -400);\n                                            *(*0x20 + -0x168) = *0x20 + -0x1a8;\n                                            *(*0x20 + -0x260) = 0x46c61e;\n                                            iVar3 = fcn.00432260();\n                                            if (iVar3 != 0) {\n                                                *(*0x20 + -0x260) = 0x46c6b1;\n                                                fcn.004328a0();\n                                                return *(*0x20 + -0x1f8);\n                                            }\n                                            *(*0x20 + -0x90) = *(*0x20 + -0xe0);\n                                            *(*0x20 + -0x88) = *(*0x20 + -0x1e0);\n                                            *(*0x20 + -0x80) = *(*0x20 + -0x1c0);\n                                            *(*0x20 + -0x1f8) = *(*0x20 + -0x188);\n                                            *(*0x20 + -0x1d0) = *(*0x20 + -0x198);\n                                            *(*0x20 + -0xb0) = in_XMM15;\n                                            *(*0x20 + -0x260) = 0x46c67f;\n                                            fcn.004328a0();\n                                            return *(*0x20 + -0x1f8);\n                                        }\n                                        if (ppiVar10 != NULL) {\n                                            *(*0x20 + -0x260) = 0x46c459;\n                                            iVar5 = fcn.0046fc80(0x20002, iVar5, 0, 0);\n                                            *(*0x20 + -0xb0) = iVar5;\n                                            *(*0x20 + -0xa8) = 0;\n                                            if (iVar5 != 0) {\n                                                *(*0x20 + -0x1f8) = 0;\n                                                *(*0x20 + -0x1d0) = 0;\n                                                *(*0x20 + -0x260) = 0x46c488;\n                                                fcn.004328a0();\n                                                return *(*0x20 + -0x1f8);\n                                            }\n                                            goto code_r0x0046c4b5;\n                                        }\n                                        ppiVar10 = NULL;\n                                        *(*0x20 + -0x260) = 0x46c776;\n                                        fcn.0045e240(0);\n                                    }\n                                    *(*0x20 + -0x260) = 0x46c77e;\n                                    fcn.0045e2c0(ppiVar10, ppiVar14);\ncode_r0x0046c77e:\n                                    *(*0x20 + -0x260) = 0x46c789;\n                                    fcn.0045e240(unaff_RDI);\n                                }\n                                *(*0x20 + -0x260) = 0x46c796;\n                                fcn.0045e240(2);\n                            }\n                            *(*0x20 + -0x260) = 0x46c7a5;\n                            fcn.0045e240(1);\n                        }\n                        *(*0x20 + -0x260) = 0x46c7af;\n                        fcn.0045e240(0);\ncode_r0x0046c7af:\n                        *(*0x20 + -0x260) = 0x46c7ba;\n                        fcn.0045e240(ppiVar14);\n                        arg3 = ppiVar7;\ncode_r0x0046c7ba:\n                        *(*0x20 + -0x260) = 0x46c7c5;\n                        fcn.0045e240(ppiVar14);\n                    }\n                    else {\n                        *(*0x20 + -0x260) = 0x46bba5;\n                        uVar4 = fcn.0046ca80(uVar4);\n                        if (unaff_RDI != NULL) {\n                            uVar4 = 0;\ncode_r0x0046bbbb:\n                            *(*0x20 + -0xb0) = unaff_RDI;\n                            *(*0x20 + -0xa8) = unaff_RSI;\n                            if (unaff_RDI != NULL) {\n                                *(*0x20 + -0x1f8) = 0;\n                                *(*0x20 + -0x1d0) = 0;\n                                *(*0x20 + -0x260) = 0x46bcca;\n                                fcn.004328a0();\n                                return *(*0x20 + -0x1f8);\n                            }\n                            goto code_r0x0046bbd7;\n                        }\n                        if (unaff_RBX != NULL) {\n                            unaff_RDI = NULL;\n                            unaff_RSI = NULL;\n                            goto code_r0x0046bbbb;\n                        }\n                    }\n                    *(*0x20 + -0x260) = 0x46c7cf;\n                    fcn.0045e240(0);\n                }\n                else {\n                    *(*0x20 + -0x260) = 0x46bb34;\n                    uVar4 = fcn.0046ca80(arg1);\n                    if (unaff_RDI != NULL) {\n                        uVar4 = 0;\ncode_r0x0046bb4d:\n                        *(*0x20 + -0xb0) = unaff_RDI;\n                        *(*0x20 + -0xa8) = unaff_RBX;\n                        if (unaff_RDI != NULL) {\n                            *(*0x20 + -0x1f8) = 0;\n                            *(*0x20 + -0x1d0) = 0;\n                            *(*0x20 + -0x260) = 0x46bd11;\n                            fcn.004328a0();\n                            return *(*0x20 + -0x1f8);\n                        }\n                        goto code_r0x0046bb7c;\n                    }\n                    unaff_RSI = unaff_RBX;\n                    if (unaff_RBX != NULL) {\n                        unaff_RDI = NULL;\n                        unaff_RBX = NULL;\n                        goto code_r0x0046bb4d;\n                    }\n                }\n                *(*0x20 + -0x260) = 0x46c7d9;\n                fcn.0045e240(0);\n            }\n            arg1 = 0;\n            *(*0x20 + -0x260) = 0x46c7e5;\n            in_RAX = fcn.0045e240(0);\n        }\n        *(puVar12 + 8) = in_RAX;\n        *(puVar12 + 0x10) = unaff_RBX;\n        *(puVar12 + 0x18) = arg1;\n        *(puVar12 + 0x20) = unaff_RDI;\n        *(puVar12 + 0x28) = unaff_RSI;\n        *(puVar12 + 0x30) = arg3;\n        *(puVar12 + -8) = 0x46c809;\n        fcn.0045bb60();\n        in_RAX = *(puVar12 + 8);\n        unaff_RBX = *(puVar12 + 0x10);\n        arg1 = *(puVar12 + 0x18);\n        unaff_RDI = *(puVar12 + 0x20);\n        unaff_RSI = *(puVar12 + 0x28);\n        arg3 = *(puVar12 + 0x30);\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 6817
    },
    "0046cf40": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0046cf40(ulong arg1)\n\n{\n    int64_t iVar1;\n    ulong in_RAX;\n    ulong uVar2;\n    uint32_t uVar3;\n    int64_t *piVar4;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    int32_t iVar7;\n    int64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX == 0) {\n                return 0xffffffffffffffff;\n            }\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0x68) = 0x46cf7a;\n            uVar2 = fcn.0046ca80(arg1);\n            if (unaff_RDI != 0) {\n                uVar2 = 0;\n                goto code_r0x0046cf90;\n            }\n            if (unaff_RBX != 0) {\n                unaff_RDI = 0;\ncode_r0x0046cf90:\n                if (unaff_RDI != 0) {\n                    return 0xffffffffffffffff;\n                }\n                uVar6 = *(*0x20 + 0x18);\n                uVar5 = uVar6;\n                if ((uVar6 & 3) == 0) {\n                    uVar3 = 0x80000000;\n                }\n                else if ((uVar5 & 3) == 1) {\n                    uVar3 = 0x40000000;\n                }\n                else if ((uVar5 & 3) == 2) {\n                    uVar3 = 0xc0000000;\n                }\n                else {\n                    uVar3 = 0;\n                }\n                if ((uVar6 & 0x40) != 0) {\n                    uVar3 = uVar3 | 0x40000000;\n                }\n                if ((uVar6 & 0x400) != 0) {\n                    uVar3 = uVar3 & 0xbfffffff | 4;\n                }\n                uVar6 = uVar3;\n                if ((uVar5 >> 0x13 & 1) == 0) {\n                    *(*0x20 + -0x30) = 0;\n                    *(*0x20 + -0x28) = 0;\n                    *(*0x20 + -0x20) = 0;\n                    *(*0x20 + -0x30) = 0x18;\n                    *(*0x20 + -0x20) = 1;\n                    puVar8 = *0x20 + -0x30;\n                }\n                else {\n                    puVar8 = NULL;\n                }\n                if ((uVar5 & 0xc0) == 0xc0) {\n                    iVar7 = 1;\n                }\n                else if ((uVar5 & 0x240) == 0x240) {\n                    iVar7 = 2;\n                }\n                else if ((uVar5 >> 6 & 1) == 0) {\n                    if ((uVar5 >> 9 & 1) == 0) {\n                        iVar7 = 3;\n                    }\n                    else {\n                        iVar7 = 5;\n                    }\n                }\n                else {\n                    iVar7 = 4;\n                }\n                if ((*(*0x20 + 0x20) >> 7 & 1) == 0) {\n                    if (iVar7 == 2) {\n                        *(*0x20 + -0x18) = uVar2;\n                        *(*0x20 + -0x10) = puVar8;\n                        *(*0x20 + -0x34) = uVar3;\n                        *(*0x20 + -0x38) = 2;\n                        piVar4 = 0x3;\n                        *(*0x20 + -0x68) = 0x46d0cb;\n                        uVar2 = fcn.0046dfc0(3, uVar6, 0x80, 0);\n                        if ((uVar6 == 0) ||\n                           (((iVar1 = *(uVar6 + 8),  iVar1 != 0x4a26e0 || (*piVar4 != 2)) &&\n                            ((uVar6 == 0 ||\n                             (((iVar1 != 0x4a26e0 || (*piVar4 != 0x35)) &&\n                              ((uVar6 == 0 || ((iVar1 != 0x4a26e0 || (*piVar4 != 3)))))))))))) {\n                            return uVar2;\n                        }\n                        uVar6 = *(*0x20 + -0x34);\n                    }\n                    uVar5 = 1;\n                }\n                else {\n                    uVar5 = 0x80;\n                }\n                *(*0x20 + -0x68) = 0x46d156;\n                uVar2 = fcn.0046dfc0(3, uVar6, uVar5, 0);\n                return uVar2;\n            }\n            arg1 = 0;\n            *(*0x20 + -0x68) = 0x46d1a5;\n            in_RAX = fcn.0045e240(0);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x20) = unaff_RDI;\n        *(puVar8 + -8) = 0x46d1be;\n        fcn.0045bb60();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        unaff_RDI = *(puVar8 + 0x20);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1441
    },
    "0047ae40": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0047ae40(int64_t arg1, ulong noname_1, int64_t arg3, int64_t arg4)\n\n{\n    uint64_t in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t iVar6;\n    int64_t iVar7;\n    int64_t in_R10;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_R10 != 0) {\n                uVar8 = unaff_RBX - 1;\n                if (uVar8 < 0) {\n                    iVar1 = (SUB168(SEXT816(-0x5555555555555555) * SEXT816(-unaff_RBX) >> 0x40, 0) - unaff_RBX >> 3) -\n                            (-unaff_RBX >> 0x3f);\n                    in_RAX = (in_RAX - iVar1) - 1;\n                    uVar8 = unaff_RBX + iVar1 * 0xc + 0xb;\n                }\n                if (0xb < uVar8) {\n                    iVar1 = SUB168(SEXT816(-0x5555555555555555) * SEXT816(uVar8) >> 0x40, 0) + uVar8 >> 3;\n                    in_RAX = iVar1 + in_RAX;\n                    uVar8 = uVar8 + iVar1 * -0xc;\n                }\n                iVar1 = arg4;\n                if (arg4 < 0) {\n                    iVar1 = -(arg4 + 1) / 1000000000;\n                    arg3 = (arg3 - iVar1) + -1;\n                    iVar1 = arg4 + iVar1 * 1000000000 + 1000000000;\n                }\n                if (999999999 < iVar1) {\n                    iVar2 = iVar1 / 1000000000 + (iVar1 >> 0x3f);\n                    arg3 = arg3 + iVar2;\n                    iVar1 = iVar1 + iVar2 * -1000000000;\n                }\n                if (arg3 < 0) {\n                    iVar2 = ((SUB168(SEXT816(-0x7777777777777777) * SEXT816(-(arg3 + 1)) >> 0x40, 0) - arg3) + -1 >> 5)\n                            - (-(arg3 + 1) >> 0x3f);\n                    unaff_RSI = (unaff_RSI - iVar2) + -1;\n                    arg3 = arg3 + iVar2 * 0x3c + 0x3c;\n                }\n                if (0x3b < arg3) {\n                    iVar2 = SUB168(SEXT816(-0x7777777777777777) * SEXT816(arg3) >> 0x40, 0) + arg3 >> 5;\n                    unaff_RSI = unaff_RSI + iVar2;\n                    arg3 = arg3 + iVar2 * -0x3c;\n                }\n                if (unaff_RSI < 0) {\n                    iVar2 = ((SUB168(SEXT816(-0x7777777777777777) * SEXT816(-(unaff_RSI + 1)) >> 0x40, 0) - unaff_RSI) +\n                             -1 >> 5) - (-(unaff_RSI + 1) >> 0x3f);\n                    unaff_RDI = (unaff_RDI - iVar2) + -1;\n                    unaff_RSI = unaff_RSI + iVar2 * 0x3c + 0x3c;\n                }\n                if (0x3b < unaff_RSI) {\n                    iVar2 = SUB168(SEXT816(-0x7777777777777777) * SEXT816(unaff_RSI) >> 0x40, 0) + unaff_RSI >> 5;\n                    unaff_RDI = unaff_RDI + iVar2;\n                    unaff_RSI = unaff_RSI + iVar2 * -0x3c;\n                }\n                if (unaff_RDI < 0) {\n                    iVar2 = ((SUB168(SEXT816(-0x5555555555555555) * SEXT816(-(unaff_RDI + 1)) >> 0x40, 0) - unaff_RDI) +\n                             -1 >> 4) - (-(unaff_RDI + 1) >> 0x3f);\n                    arg1 = (arg1 - iVar2) + -1;\n                    unaff_RDI = unaff_RDI + iVar2 * 0x18 + 0x18;\n                }\n                if (0x17 < unaff_RDI) {\n                    iVar2 = SUB168(SEXT816(-0x5555555555555555) * SEXT816(unaff_RDI) >> 0x40, 0) + unaff_RDI >> 4;\n                    arg1 = arg1 + iVar2;\n                    unaff_RDI = unaff_RDI + iVar2 * -0x18;\n                }\n                uVar3 = (in_RAX + 0x440d116ebf >> 1) / 200;\n                iVar2 = in_RAX + uVar3 * -400;\n                *(*0x20 + -0x38) = uVar3 * 0x23ab1;\n                uVar4 = (iVar2 + 0x440d116ebfU >> 1) / 0x32;\n                iVar2 = iVar2 + uVar4 * -100;\n                uVar3 = iVar2 + 0x440d116ebf;\n                arg4 = ((iVar2 - (uVar3 & 0xfffffffffffffffc)) + 0x440d116ebf) * 0x16d;\n                iVar2 = uVar4 * 0x8eac + *(*0x20 + -0x38) + (uVar3 >> 2) * 0x5b5 + arg4;\n                if (uVar8 < 0xd) {\n                    *(*0x20 + -0x28) = iVar1;\n                    iVar7 = *(uVar8 * 4 + 0x796e00);\n                    iVar1 = iVar7 + iVar2;\n                    if (((in_RAX & 3) == 0) &&\n                       (((in_RAX != ((SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(in_RAX) >> 0x40, 0) + in_RAX >> 6) -\n                                    (in_RAX >> 0x3f)) * 100 ||\n                         ((in_RAX * -0x70a3d70a3d70a3d7 << 0x3c | in_RAX * -0x70a3d70a3d70a3d7 + 0x51eb851eb851eb0 >> 4)\n                          < 0xa3d70a3d70a3d7)) && (2 < uVar8 + 1)))) {\n                        iVar1 = iVar2 + iVar7 + 1;\n                    }\n                    *(*0x20 + 0x40) = in_R10;\n                    iVar2 = unaff_RSI * 0x3c;\n                    iVar1 = (iVar1 + arg1 + -1) * 0x15180 + unaff_RDI * 0xe10 + iVar2 + arg3;\n                    *(*0x20 + -0x30) = iVar1;\n                    *(*0x20 + -0x40) = iVar1 + -0x7ffffffe1ad9c900;\n                    *(*0x20 + -0x58) = 0x47b208;\n                    fcn.0047b440();\n                    if (iVar1 == 0) {\n                        iVar1 = *(*0x20 + -0x40);\n                    }\n                    else {\n                        iVar6 = *(*0x20 + -0x30);\n                        iVar7 = (iVar6 - iVar1) + -0x7ffffffe1ad9c900;\n                        if ((iVar7 < unaff_RDI) || (iVar2 - iVar7 == 0 || iVar2 < iVar7)) {\n                            *(*0x20 + -0x58) = 0x47b23d;\n                            fcn.0047b440();\n                            iVar6 = *(*0x20 + -0x30);\n                        }\n                        iVar1 = (iVar6 - iVar1) + -0x7ffffffe1ad9c900;\n                    }\n                    iVar2 = *(*0x20 + -0x28);\n                    *(*0x20 + -0x20) = iVar2;\n                    *(*0x20 + -0x18) = iVar1 + 0xe7791f700;\n                    *(*0x20 + -0x10) = *0x7a5de8;\n                    iVar1 = *(*0x20 + 0x40);\n                    if (iVar1 == 0x7aa500) {\n                        iVar1 = 0;\n                    }\n                    if (iVar2 < 0) {\n                        *(*0x20 + -0x18) = ((iVar2 << 1) >> 0x1f) + 0xdd7b17f80;\n                        *(*0x20 + -0x20) = *(*0x20 + -0x28) & 0x3fffffff;\n                    }\n                    *(*0x20 + -0x10) = iVar1;\n                    return *(*0x20 + -0x20);\n                }\n                arg1 = 0xd;\n                *(*0x20 + -0x58) = 0x47b2f6;\n                fcn.0045e240(0xd);\n            }\n            unaff_RBX = 0x732ac8;\n            *(*0x20 + -0x58) = 0x47b309;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + 0x28) = unaff_RSI;\n        *(puVar5 + 0x30) = arg3;\n        *(puVar5 + 0x38) = arg4;\n        *(puVar5 + 0x40) = in_R10;\n        *(puVar5 + -8) = 0x47b337;\n        fcn.0045bb60();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        unaff_RSI = *(puVar5 + 0x28);\n        arg3 = *(puVar5 + 0x30);\n        arg4 = *(puVar5 + 0x38);\n        in_R10 = *(puVar5 + 0x40);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 2610
    },
    "0047be40": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar * fcn.0047be40(void)\n\n{\n    uint32_t uVar1;\n    char *in_RAX;\n    char *pcVar2;\n    uint64_t arg1;\n    uint64_t unaff_RBX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (unaff_RBX == 0) {\n        return NULL;\n    }\n    if (*in_RAX == '<') {\n        uVar4 = 0;\n        do {\n            arg1 = uVar4;\n            if (unaff_RBX <= arg1) {\n                return NULL;\n            }\n            uVar3 = in_RAX[arg1];\n            if (in_RAX[arg1] < 0x80) {\n                uVar4 = arg1 + 1;\n            }\n            else {\n                uVar1 = fcn.00458880(arg1);\n                uVar3 = uVar1;\n                uVar4 = unaff_RBX;\n            }\n        } while (uVar3 != 0x3e);\n        if (arg1 <= unaff_RBX) {\n            if (arg1 != 0) {\n                uVar3 = arg1 - 1;\n                if (arg1 + 1 <= unaff_RBX) {\n                    return in_RAX + (-uVar3 >> 0x3f & 1);\n                }\n                fcn.0045e300(unaff_RBX);\n            }\n            arg1 = 0;\n            fcn.0045e300(0);\n        }\n        pcVar2 = fcn.0045e280(arg1, unaff_RBX);\n    }\n    else {\n        pcVar2 = in_RAX;\n        uVar3 = 0;\n    }\n    do {\n        uVar4 = uVar3;\n        if (unaff_RBX <= uVar4) {\n            if (2 < unaff_RBX) {\n                return pcVar2;\n            }\n            return NULL;\n        }\n        uVar1 = pcVar2[uVar4];\n        if (pcVar2[uVar4] < 0x80) {\n            uVar3 = uVar4 + 1;\n        }\n        else {\n            uVar1 = fcn.00458880(uVar4);\n            pcVar2 = in_RAX;\n            uVar3 = unaff_RBX;\n        }\n    } while ((2 < uVar1 - 0x2b) && (9 < uVar1 - 0x30));\n    if (2 < uVar4) {\n        return pcVar2;\n    }\n    return NULL;\n}\n",
        "token_count": 614
    },
    "00481820": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00481820(uchar param_1)\n\n{\n    int64_t *in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*in_RAX == 0) {\n                return 0;\n            }\n            *(*0x20 + 0x18) = param_1;\n            *(*0x20 + -0x28) = 0x481852;\n            iVar1 = func_0x004591c0();\n            *(*0x20 + -0x10) = iVar1;\n            if (iVar1 < 2) {\n                if (iVar1 == 0) {\n                    return 0;\n                }\n                if (iVar1 == 1) {\n                    uVar2 = *0x7ad6e0;\n                    if (*(*0x20 + 0x18) == '\\0') {\n                        uVar2 = 0x732c78;\n                    }\n                    return uVar2;\n                }\n            }\n            else {\n                if (iVar1 == 2) {\n                    return *0x7a6550;\n                }\n                if (iVar1 == 3) {\n                    return *0x7ad700;\n                }\n            }\n            *(*0x20 + -0x28) = 0x4818ed;\n            fcn.00435540();\n            *(*0x20 + -0x28) = 0x4818fe;\n            fcn.00435e40();\n            *(*0x20 + -0x28) = 0x481908;\n            fcn.00435c40();\n            *(*0x20 + -0x28) = 0x48190d;\n            fcn.004357a0();\n            *(*0x20 + -0x28) = 0x481912;\n            fcn.004355c0();\n            unaff_RBX = 0x7328d8;\n            *(*0x20 + -0x28) = 0x481925;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        puVar3[0x18] = param_1;\n        *(puVar3 + -8) = 0x481939;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        param_1 = puVar3[0x18];\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 696
    },
    "00481960": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00481960(uchar param_1)\n\n{\n    int64_t *in_RAX;\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*in_RAX == 0) {\n                *(*0x20 + -0x28) = 0x481a26;\n                puVar2 = fcn.0040c560();\n                puVar2[1] = 0x21;\n                *puVar2 = 0x4b550f;\n                return 0x732b18;\n            }\n            *(*0x20 + 0x18) = param_1;\n            *(*0x20 + -0x28) = 0x481992;\n            iVar1 = fcn.00459240();\n            *(*0x20 + -0x10) = iVar1;\n            if (iVar1 < 2) {\n                if (iVar1 == 0) {\n                    return 0;\n                }\n                if (iVar1 == 1) {\n                    uVar3 = *0x7ad6e0;\n                    if (*(*0x20 + 0x18) == '\\0') {\n                        uVar3 = 0x732c78;\n                    }\n                    return uVar3;\n                }\n            }\n            else {\n                if (iVar1 == 2) {\n                    return *0x7a6550;\n                }\n                if (iVar1 == 3) {\n                    return *0x7ad700;\n                }\n            }\n            *(*0x20 + -0x28) = 0x481a51;\n            fcn.00435540();\n            *(*0x20 + -0x28) = 0x481a65;\n            fcn.00435e40();\n            *(*0x20 + -0x28) = 0x481a6f;\n            fcn.00435c40();\n            *(*0x20 + -0x28) = 0x481a74;\n            fcn.004357a0();\n            *(*0x20 + -0x28) = 0x481a79;\n            fcn.004355c0();\n            unaff_RBX = 0x7328d8;\n            *(*0x20 + -0x28) = 0x481a8c;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        puVar4[0x18] = param_1;\n        *(puVar4 + -8) = 0x481aa5;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        param_1 = puVar4[0x18];\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 770
    },
    "00482020": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00482020(uint *arg1)\n\n{\n    uint *in_RAX;\n    uint64_t noname_1;\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong arg1_00;\n    uint64_t uVar3;\n    int64_t *unaff_RBX;\n    uint *puVar4;\n    char unaff_DIL;\n    code *in_R8;\n    uint *in_R9;\n    int64_t unaff_R14;\n    uint uStack48;\n    uint uStack44;\n    ulong uStack40;\n    uint64_t uStack32;\n    ulong uStack24;\n    uint *puStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (*0x7ad710 != 0) {\n        return 0;\n    }\n    if (arg1 < 5) {\n        if (arg1 == 0x2) {\n            if (*unaff_RBX != 0x7069) goto code_r0x0048265a;\n            goto code_r0x004823fc;\n        }\n        if (arg1 == 0x3) {\n            iVar1 = fcn.004026e0(0x4aed86);\n            if (iVar1 < 1) {\n                if ((*unaff_RBX == 0x6964) && (*(unaff_RBX + 2) == 'r')) {\n                    *(in_RAX + 0x88) = 3;\n                    goto code_r0x00482403;\n                }\n                if ((*unaff_RBX != 0x7069) || (*(unaff_RBX + 2) != '4')) goto code_r0x0048265a;\n            }\n            else if (((*unaff_RBX != 0x7069) || (*(unaff_RBX + 2) != '6')) &&\n                    (((*unaff_RBX != 0x6374 || (*(unaff_RBX + 2) != 'p')) &&\n                     ((*unaff_RBX != 0x6475 || (*(unaff_RBX + 2) != 'p')))))) goto code_r0x0048265a;\n            goto code_r0x004823fc;\n        }\n        if (arg1 != 0x4) goto code_r0x0048265a;\n        iVar1 = fcn.004026e0(0x4aef21);\n        if (0 < iVar1) {\n            iVar1 = fcn.004026e0(0x4aef29);\n            if (iVar1 < 1) {\n                if ((*unaff_RBX != 0x36706374) && (*unaff_RBX != 0x34706475)) goto code_r0x0048265a;\n            }\n            else if ((*unaff_RBX != 0x36706475) && (*unaff_RBX != 0x78696e75)) goto code_r0x0048265a;\n            goto code_r0x004823fc;\n        }\n        if (*unaff_RBX == 0x656c6966) {\n            *(in_RAX + 0x88) = 1;\n        }\n        else {\n            if (*unaff_RBX != 0x65706970) {\n                if (*unaff_RBX != 0x34706374) goto code_r0x0048265a;\n                goto code_r0x004823fc;\n            }\n            *(in_RAX + 0x88) = 4;\n        }\n    }\n    else {\n        if (arg1 == 0x7) {\n            if (((*unaff_RBX != 0x736e6f63) || (*(unaff_RBX + 4) != 0x6c6f)) || (*(unaff_RBX + 6) != 'e'))\n            goto code_r0x0048265a;\n            *(in_RAX + 0x88) = 2;\n            goto code_r0x00482403;\n        }\n        if (arg1 == 0x8) {\n            if (*unaff_RBX != 0x6d61726778696e75) {\ncode_r0x0048265a:\n                arg1_00 = 0x25;\n                uStack24 = fcn.0044ae80(0x25);\n                uStack40 = 0x4b5c57;\n                puVar2 = fcn.0040c560();\n                puVar2[1] = uStack40;\n                if (*0x801c20 == 0) {\n                    *puVar2 = uStack24;\n                }\n                else {\n                    fcn.0045dec0(arg1_00, uStack24, in_R8, in_R9);\n                }\n                return 0;\n            }\n        }\n        else if (((arg1 != 0xa) || (*unaff_RBX != 0x6b63617078696e75)) || (*(unaff_RBX + 1) != 0x7465))\n        goto code_r0x0048265a;\ncode_r0x004823fc:\n        *(in_RAX + 0x88) = 0;\n    }\ncode_r0x00482403:\n    *(in_RAX + 0x21f) = *(in_RAX + 0x88) != '\\0';\n    if (unaff_DIL == '\\0') {\n        noname_1 = 0;\n        puVar4 = NULL;\n    }\n    else {\n        noname_1 = fcn.00481740(in_RAX + 0x6e);\n        puVar4 = in_RAX;\n    }\n    if (*0x7ace18 != NULL) {\n        in_R8 = **0x7ace18;\n        in_R9 = in_RAX;\n        uStack32 = noname_1;\n        puStack16 = puVar4;\n        (*in_R8)(in_RAX, *0x7ace18);\n        noname_1 = uStack32;\n    }\n    if (noname_1 != 0) {\n        return 0;\n    }\n    if ((unaff_DIL != '\\0') && (*0x8019a0 != '\\0')) {\n        if ((arg1 == 0x3) && ((*unaff_RBX == 0x6374 && (*(unaff_RBX + 2) == 'p')))) {\n            uVar3 = 3;\n        }\n        else {\n            uVar3 = 2;\n        }\n        noname_1 = uVar3;\n        iVar1 = fcn.0046fa80(*(in_RAX + 4));\n        if ((iVar1 == 0) && (noname_1 = uVar3,  (uVar3 & 1) != 0)) {\n            *(in_RAX + 0x87) = 1;\n        }\n    }\n    if (arg1 == 0x3) {\n        if ((*unaff_RBX != 0x6475) || (*(unaff_RBX + 2) != 'p')) goto code_r0x004825de;\n    }\n    else if ((arg1 != 0x4) || ((*unaff_RBX != 0x34706475 && (*unaff_RBX != 0x36706475)))) goto code_r0x004825de;\n    uStack48 = 0;\n    uStack44 = 0;\n    noname_1 = *(in_RAX + 4);\n    arg1 = &uStack44;\n    in_R8 = NULL;\n    in_R9 = &uStack48;\n    iVar1 = fcn.00470280(arg1, noname_1, 0, in_R9);\n    if (iVar1 != 0) {\n        return 0x4af74e;\n    }\ncode_r0x004825de:\n    in_RAX[0x10] = 0x72;\n    in_RAX[0x44] = 0x77;\n    if (*0x801c20 == 0) {\n        *(in_RAX + 0x14) = in_RAX;\n        *(in_RAX + 0x48) = in_RAX;\n    }\n    else {\n        fcn.0045dda0(arg1, noname_1, in_R8, in_R9);\n        in_RAX = fcn.0045dda0(arg1, noname_1, in_R8, in_R9);\n    }\n    *(in_RAX + 0xe) = *(in_RAX + 0x6e);\n    *(in_RAX + 0x42) = *(in_RAX + 0x6e);\n    return 0;\n}\n",
        "token_count": 1920
    },
    "00482720": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00482720(void)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (*(in_RAX + 0x10) != -1) {\n        if (*(in_RAX + 0x1b8) != 0) {\n            fcn.00459120();\n            *(in_RAX + 0x1b8) = 0;\n        }\n        if (*(in_RAX + 0x220) == '\\0') {\n            uVar1 = (***0x7a5dc8)();\n        }\n        else if (*(in_RAX + 0x220) == '\\x03') {\n            uVar1 = fcn.0046e6c0(*(in_RAX + 0x10));\n        }\n        else {\n            uVar1 = fcn.0046dee0(*(in_RAX + 0x10));\n        }\n        *(in_RAX + 0x10) = 0xffffffffffffffff;\n        fcn.00459d40(in_RAX + 0x218);\n        return uVar1;\n    }\n    return 0x732cf8;\n}\n",
        "token_count": 303
    },
    "00485920": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.00485920(ulong arg1)\n\n{\n    int32_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    ulong unaff_RBX;\n    int64_t unaff_RSI;\n    int32_t *unaff_RDI;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if ((unaff_RSI == 4) && (*unaff_RDI == 0x656c6966)) {\n        iVar2 = fcn.0046eba0();\n        if (iVar2 == 0) {\n            unaff_RSI = 7;\n        }\n        iVar1 = fcn.0046f180();\n        if ((*0x20 == 0x24) && (iVar1 == 3)) {\n            unaff_RSI = 4;\n        }\n    }\n    piVar3 = fcn.0040c560();\n    iVar2 = fcn.0040c560();\n    *(iVar2 + 0x10) = in_RAX;\n    *(iVar2 + 0x21d) = 0x101;\n    *(iVar2 + 0x230) = arg1;\n    if (*0x801c20 == 0) {\n        *(iVar2 + 0x228) = unaff_RBX;\n        *piVar3 = iVar2;\n    }\n    else {\n        fcn.0045dec0(arg1, unaff_RBX, in_R8, in_R9);\n        fcn.0045dda0(arg1, unaff_RBX, in_R8, in_R9);\n    }\n    fcn.00415520(0x49e020);\n    fcn.00482020(unaff_RSI);\n    return piVar3;\n}\n",
        "token_count": 444
    },
    "004867c0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint16_t * fcn.004867c0(ulong param_1, ulong param_2, uint64_t param_3, uint64_t param_4)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    char cVar5;\n    int16_t *in_RAX;\n    int64_t iVar6;\n    int16_t *piVar7;\n    uint64_t uVar8;\n    uint64_t arg2;\n    uint64_t uVar9;\n    uint64_t unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (*0x8019a2 != '\\0') {\n                return in_RAX;\n            }\n            if (unaff_RBX < 0xf8) {\n                return in_RAX;\n            }\n            if (*in_RAX == 0x5c5c) {\n                return in_RAX;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x38) = 0x486815;\n            cVar5 = fcn.004865c0();\n            if (cVar5 == '\\0') {\n                return *(*0x20 + 8);\n            }\n            *(*0x20 + -0x18) = *(*0x20 + 0x10) + 4;\n            *(*0x20 + -0x38) = 0x486836;\n            iVar6 = fcn.00447240(*(*0x20 + 0x10) + 4);\n            arg2 = *(*0x20 + -0x18);\n            uVar8 = arg2;\n            if (3 < arg2) {\n                uVar8 = 3;\n            }\n            if (iVar6 != 0x4aed5f) {\n                *(*0x20 + -0x10) = iVar6;\n                *(*0x20 + -0x38) = 0x486865;\n                fcn.0045ebc0(uVar8);\n                iVar6 = *(*0x20 + -0x10);\n                arg2 = *(*0x20 + -0x18);\n            }\n            uVar8 = *(*0x20 + 0x10);\n            piVar7 = *(*0x20 + 8);\n            uVar2 = 0;\n            uVar3 = 3;\n            uVar4 = param_3;\ncode_r0x004868c0:\n            param_3 = uVar4;\n            unaff_RBX = uVar3;\n            uVar9 = uVar2;\n            if (uVar8 <= uVar9) {\n                if (unaff_RBX == 6) {\n                    if (arg2 < 7) goto code_r0x004869dc;\n                    *(iVar6 + 6) = 0x5c;\n                    unaff_RBX = 7;\n                }\n                if (unaff_RBX <= arg2) {\n                    *(*0x20 + -0x38) = 0x4869c7;\n                    piVar7 = fcn.0044b220(unaff_RBX);\n                    return piVar7;\n                }\n                *(*0x20 + -0x38) = 0x4869dc;\n                uVar9 = arg2;\n                fcn.0045e2c0(unaff_RBX, arg2);\ncode_r0x004869dc:\n                *(*0x20 + -0x38) = 0x4869e9;\n                uVar8 = arg2;\n                iVar6 = fcn.0045e240(arg2);\n                goto code_r0x004869e9;\n            }\n            if (uVar8 <= uVar9) goto code_r0x00486a4d;\n            uVar1 = *(piVar7 + uVar9);\n            param_3 = uVar1;\n            uVar3 = unaff_RBX;\n            if ((uVar1 == 0x5c) || (uVar1 == 0x2f)) {\n                uVar2 = uVar9 + 1;\n                uVar4 = uVar9 + 1;\n                goto code_r0x004868c0;\n            }\n            if (uVar1 == 0x2e) {\n                param_4 = uVar9 + 1;\n                uVar2 = param_4;\n                uVar4 = param_4;\n                if (uVar8 == param_4) goto code_r0x004868c0;\n                if (uVar8 <= param_4) goto code_r0x00486a45;\n                cVar5 = *(uVar9 + 1 + piVar7);\n                if ((cVar5 == '\\\\') || (cVar5 == '/')) goto code_r0x004868c0;\n            }\n            param_4 = uVar9 + 1;\n            if ((uVar8 <= param_4) || (uVar1 != 0x2e)) goto code_r0x0048696c;\n            if (param_4 < uVar8) {\n                uVar1 = *(uVar9 + 1 + piVar7);\n                param_3 = uVar1;\n                if (uVar1 == 0x2e) {\n                    param_3 = uVar9 + 2;\n                    if (uVar8 == param_3) {\n                        return piVar7;\n                    }\n                    if (param_3 < uVar8) {\n                        uVar1 = *(uVar9 + 2 + piVar7);\n                        param_3 = uVar1;\n                        if (uVar1 == 0x5c) {\n                            return piVar7;\n                        }\n                        if (uVar1 == 0x2f) {\n                            return piVar7;\n                        }\n                        goto code_r0x0048696c;\n                    }\n                }\n                else {\ncode_r0x0048696c:\n                    if (unaff_RBX < arg2) {\n                        *(iVar6 + unaff_RBX) = 0x5c;\n                        param_3 = unaff_RBX;\n                        for (; param_3 = param_3 + 1,  uVar2 = uVar9,  uVar3 = param_3,  uVar4 = uVar9,  uVar9 < uVar8;\n                            uVar9 = uVar9 + 1) {\n                            uVar1 = *(piVar7 + uVar9);\n                            param_4 = uVar1;\n                            if ((uVar1 == 0x5c) || (uVar1 == 0x2f)) break;\n                            if (arg2 <= param_3) {\n                                *(*0x20 + -0x38) = 0x486a25;\n                                fcn.0045e240(arg2);\n                                goto code_r0x00486a25;\n                            }\ncode_r0x004869e9:\n                            *(iVar6 + param_3) = param_4;\n                        }\n                        goto code_r0x004868c0;\n                    }\ncode_r0x00486a25:\n                    *(*0x20 + -0x38) = 0x486a30;\n                    fcn.0045e240(arg2);\n                    uVar8 = arg2;\n                }\n                *(*0x20 + -0x38) = 0x486a38;\n                fcn.0045e240(uVar8);\n            }\n            *(*0x20 + -0x38) = 0x486a45;\n            fcn.0045e240(uVar8);\ncode_r0x00486a45:\n            *(*0x20 + -0x38) = 0x486a4d;\n            fcn.0045e240(uVar8);\ncode_r0x00486a4d:\n            *(*0x20 + -0x38) = 0x486a55;\n            in_RAX = fcn.0045e240(uVar8);\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + -8) = 0x486a65;\n        fcn.0045bb60();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 1978
    },
    "00486ba0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0048704e)\n// WARNING: Removing unreachable block (ram,0x0048709c)\n// WARNING: Removing unreachable block (ram,0x0048708e)\n// WARNING: Removing unreachable block (ram,0x004870ad)\n// WARNING: Removing unreachable block (ram,0x004870cd)\n// WARNING: Removing unreachable block (ram,0x004870bf)\n// WARNING: Removing unreachable block (ram,0x004870de)\n// WARNING: Removing unreachable block (ram,0x00486c7c)\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.00486ba0(uint8_t *arg1)\n\n{\n    uint8_t uVar1;\n    ulong in_RAX;\n    ulong *puVar2;\n    int64_t iVar3;\n    uint64_t arg1_00;\n    ulong uVar4;\n    uint8_t *arg1_01;\n    uint64_t in_RDX;\n    ulong unaff_RBX;\n    uint64_t unaff_RSI;\n    int64_t unaff_RDI;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uchar auStack736 [16];\n    uint32_t uStack720;\n    ulong uStack716;\n    uint uStack708;\n    uint uStack704;\n    uchar auStack700 [12];\n    uint uStack688;\n    uint uStack684;\n    ulong uStack680;\n    uint uStack672;\n    uint uStack668;\n    ulong uStack664;\n    uint uStack656;\n    uint uStack652;\n    uint uStack648;\n    uint64_t uStack96;\n    int64_t iStack88;\n    ulong uStack80;\n    int64_t iStack72;\n    uint32_t *puStack64;\n    uchar auStack48 [16];\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (auStack32._0_8_ = SUB168(in_XMM15, 0),  &uStack680 < *(unaff_R14 + 0x10) || &uStack680 == *(unaff_R14 + 0x10)\n          ) {\n        fcn.0045bb60();\n        unaff_RSI = unaff_RSI & 0xffffffff;\n    }\n    ppcStack16 = NULL;\n    if (unaff_RDI == 0) {\n        puVar2 = fcn.0040c560();\n        puVar2[1] = unaff_RBX;\n        if (*0x801c20 == 0) {\n            *puVar2 = in_RAX;\n        }\n        else {\n            puVar2 = fcn.0045dec0(unaff_RBX, in_RAX, in_R8, in_R9);\n        }\n        puVar2[3] = 0;\n        if (*0x801c20 == 0) {\n            puVar2[2] = arg1;\n        }\n        else {\n            puVar2 = fcn.0045dec0(unaff_RBX, arg1, in_R8, in_R9);\n        }\n        puVar2[4] = 0x732cf8;\n        puVar2[5] = 0x732860;\n        return auStack32._0_8_;\n    }\n    if (unaff_RDI == 3) {\n        uVar1 = *arg1;\n        in_RDX = uVar1;\n        if ((uVar1 == 0x6e) || (uVar1 == 0x4e)) {\n            uVar1 = arg1[1];\n            in_RDX = uVar1;\n            if ((uVar1 == 0x75) || (uVar1 == 0x55)) {\n                uVar1 = arg1[2];\n                in_RDX = uVar1;\n                if ((uVar1 == 0x6c) || (uVar1 == 0x4c)) {\n                    return 0x732db0;\n                }\n            }\n        }\n    }\n    arg1_01 = arg1;\n    fcn.004867c0();\n    fcn.0046ca80(arg1_01);\n    uStack716 = SUB168(in_XMM15, 0);\n    if (unaff_RDI == 0) {\n        fcn.0045e240(0);\n        fcn.004328a0();\n        return auStack32._0_8_;\n    }\n    uStack80 = 0;\n    if (unaff_RDI == 0) {\n        uStack720 = SUB164(in_XMM15, 0);\n        uStack708 = SUB164(in_XMM15 >> 0x40, 0);\n        uStack704 = SUB164(in_XMM15 >> 0x60, 0);\n        puStack64 = &uStack720;\n        _auStack700 = in_XMM15;\n        iVar3 = fcn.0046ef80(puStack64);\n        uVar4 = SUB168(in_XMM15, 0);\n        if ((iVar3 == 0) && (in_RDX = uStack720,  (uStack720 >> 10 & 1) == 0)) {\n            iStack72 = fcn.0040c560();\n            *(iStack72 + 0x10) = uStack720;\n            *(iStack72 + 0x14) = uStack716;\n            *(iStack72 + 0x1c) = CONCAT44(uStack704, uStack708);\n            *(iStack72 + 0x24) = auStack700._0_8_;\n            *(iStack72 + 0x2c) = auStack700._8_4_;\n            *(iStack72 + 0x30) = uStack688;\n            iVar3 = fcn.00487e00(0, in_RDX, in_R8, in_R9);\n            if (iVar3 == 0) {\n                return 0x732db0;\n            }\n            return uVar4;\n        }\n        if (((iVar3 != 0) && (in_RDX = 0x4a26e0,  *(iVar3 + 8) == 0x4a26e0)) && (_pe_dos_header == 0x20)) {\n            uStack684 = SUB164(in_XMM15, 0);\n            uStack680 = SUB168(in_XMM15 >> 0x20, 0);\n            uStack672 = SUB164(in_XMM15 >> 0x60, 0);\n            fcn.0045e441();\n            fcn.0046d440();\n            if (&uStack684 != NULL) {\n                puVar2 = fcn.0040c560();\n                puVar2[1] = 0xd;\n                *puVar2 = 0x4b0549;\n                puVar2[3] = 0;\n                if (*0x801c20 == 0) {\n                    puVar2[2] = arg1;\n                }\n                else {\n                    puVar2 = fcn.0045dec0(0, arg1, in_R8, in_R9);\n                }\n                puVar2[4] = &uStack684;\n                if (*0x801c20 == 0) {\n                    puVar2[5] = puStack64;\n                }\n                else {\n                    fcn.0045dec0(unaff_RDI, puStack64, in_R8, in_R9);\n                }\n                return uVar4;\n            }\n            fcn.0046e6c0();\n            iStack88 = fcn.0040c560();\n            *(iStack88 + 0x10) = uStack684;\n            *(iStack88 + 0x14) = uStack680;\n            *(iStack88 + 0x1c) = CONCAT44(uStack668, uStack672);\n            *(iStack88 + 0x24) = uStack664;\n            *(iStack88 + 0x2c) = uStack656;\n            *(iStack88 + 0x30) = uStack652;\n            *(iStack88 + 0x34) = uStack648;\n            iVar3 = fcn.00487e00(0, in_RDX, in_R8, in_R9);\n            if (iVar3 == 0) {\n                return 0x732db0;\n            }\n            return uVar4;\n        }\n        arg1_00 = fcn.0046dfc0(0, in_RDX, unaff_RSI & 0xffffffff, 0);\n        auStack736 = CONCAT88(arg1_00, 0x487480);\n        ppcStack16 = auStack736;\n        uVar4 = fcn.00487640(arg1_00);\n        auStack32 = CONCAT88(uVar4, 0x732db0);\n        auStack48 = ZEXT816(arg1_00) << 0x40;\n        (**ppcStack16)();\n        return auStack32._0_8_;\n    }\n    uStack96 = unaff_RSI;\n    puVar2 = fcn.0040c560();\n    puVar2[1] = unaff_RBX;\n    if (*0x801c20 == 0) {\n        *puVar2 = in_RAX;\n    }\n    else {\n        puVar2 = fcn.0045dec0(unaff_RBX, in_RAX, in_R8, in_R9);\n    }\n    puVar2[3] = unaff_RDI;\n    if (*0x801c20 == 0) {\n        puVar2[2] = arg1;\n    }\n    else {\n        puVar2 = fcn.0045dec0(unaff_RBX, arg1, in_R8, in_R9);\n    }\n    puVar2[4] = unaff_RDI;\n    if (*0x801c20 == 0) {\n        puVar2[5] = uStack96;\n    }\n    else {\n        fcn.0045dec0(unaff_RBX, uStack96, in_R8, in_R9);\n    }\n    return uStack716;\n}\n",
        "token_count": 2222
    },
    "0048fec0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar (*) [16] fcn.0048fec0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    char cVar1;\n    uchar (*in_RAX) [16];\n    ulong *puVar2;\n    ulong uVar3;\n    ulong uVar4;\n    uchar (*pauVar5) [16];\n    int64_t iVar6;\n    uchar (*pauVar7) [16];\n    uchar (*pauVar8) [16];\n    uchar (*pauVar9) [16];\n    uchar (*pauVar10) [16];\n    int64_t iVar11;\n    ulong arg2;\n    int64_t *piVar12;\n    code **arg3;\n    code *pcVar13;\n    uchar (*pauVar14) [16];\n    int64_t unaff_R14;\n    uchar (*pauStack424) [16];\n    code *pcStack368;\n    int64_t iStack360;\n    int64_t iStack352;\n    int64_t iStack344;\n    int64_t iStack336;\n    int64_t iStack328;\n    int64_t iStack320;\n    uchar (*pauStack312) [16];\n    uchar (*pauStack304) [16];\n    ulong uStack296;\n    ulong uStack288;\n    ulong uStack280;\n    uchar *puStack272;\n    uchar (*pauStack264) [16];\n    ulong uStack256;\n    int64_t *piStack248;\n    int64_t *piStack240;\n    int64_t *piStack232;\n    int64_t *piStack224;\n    int64_t *piStack216;\n    int64_t *piStack208;\n    int64_t *piStack200;\n    int64_t *piStack192;\n    int64_t *piStack184;\n    int64_t *piStack176;\n    int64_t *piStack168;\n    ulong *puStack160;\n    int64_t iStack152;\n    uchar (*pauStack144) [16];\n    uchar (*pauStack136) [16];\n    uchar (*pauStack128) [16];\n    uchar auStack120 [16];\n    uchar (*apauStack104 [3]) [16];\n    code *pcStack80;\n    ulong uStack72;\n    ulong uStack64;\n    uchar auStack56 [16];\n    uchar auStack40 [16];\n    uchar auStack24 [16];\n    \n    while (&pcStack368 < *(unaff_R14 + 0x10) || &pcStack368 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (((*(*in_RAX + 8) == 0) && (*in_RAX[0xc] == 0)) && (*in_RAX[0x14] == 0)) {\n        puVar2 = fcn.0040c560();\n        puVar2[1] = 0x10;\n        *puVar2 = 0x4b0f99;\n        *in_RAX[0xc] = 0x732b18;\n        if (*0x801c20 == 0) {\n            *(in_RAX[0xc] + 8) = puVar2;\n        }\n        else {\n            fcn.0045dda0(0x732b18, in_RAX[0xc] + 8, param_3, param_4);\n        }\n    }\n    if ((*in_RAX[0xc] != 0) || (*in_RAX[0x14] != 0)) {\n        piVar12 = *(in_RAX[0xe] + 8);\n        if (*in_RAX[0xf] != 0) {\n            pauStack304 = NULL;\n            iStack328 = *in_RAX[0xf];\n            while( true ) {\n                piStack248 = piVar12;\n                (**(*piVar12 + 0x18))();\n                pauStack304 = pauStack304 + 1;\n                if (iStack328 <= pauStack304) break;\n                piVar12 = piStack248 + 2;\n            }\n        }\n        iStack336 = *(in_RAX[0x10] + 8);\n        piStack240 = *in_RAX[0x10];\n        if (iStack336 != 0) {\n            pauStack304 = NULL;\n            while( true ) {\n                (**(*piStack240 + 0x18))();\n                pauStack304 = pauStack304 + 1;\n                if (iStack336 <= pauStack304) break;\n                piStack240 = piStack240 + 2;\n            }\n        }\n        if (*in_RAX[0x14] == NULL) {\n            return *in_RAX[0xc];\n        }\n        return *in_RAX[0x14];\n    }\n    uVar4 = *(*in_RAX + 8);\n    pauVar8 = *in_RAX[4];\n    uStack256 = *(in_RAX[4] + 8);\n    arg2 = uStack256;\n    uVar3 = fcn.0048fc60(pauVar8);\n    if (pauVar8 != NULL) {\n        piVar12 = *(in_RAX[0xe] + 8);\n        if (*in_RAX[0xf] != 0) {\n            pauStack304 = NULL;\n            iStack344 = *in_RAX[0xf];\n            while( true ) {\n                piStack232 = piVar12;\n                (**(*piVar12 + 0x18))(*(*piVar12 + 0x18), piVar12[1]);\n                pauStack304 = pauStack304 + 1;\n                if (iStack344 <= pauStack304) break;\n                piVar12 = piStack232 + 2;\n            }\n        }\n        iStack352 = *(in_RAX[0x10] + 8);\n        piStack224 = *in_RAX[0x10];\n        if (iStack352 != 0) {\n            pauStack304 = NULL;\n            while( true ) {\n                (**(*piStack224 + 0x18))();\n                pauStack304 = pauStack304 + 1;\n                if (iStack352 <= pauStack304) break;\n                piStack224 = piStack224 + 2;\n            }\n        }\n        return pauVar8;\n    }\n    *(*in_RAX + 8) = uVar4;\n    if (*0x801c20 == 0) {\n        **in_RAX = uVar3;\n    }\n    else {\n        fcn.0045dda0(0, arg2, param_3, param_4);\n    }\n    if (*in_RAX[10] != 0) {\n        puVar2 = fcn.0040c560();\n        puVar2[1] = 0x15;\n        *puVar2 = 0x4b24b6;\n        return 0x732b18;\n    }\n    if (*in_RAX[0xb] != 0) {\n        (**(*in_RAX[0xb] + 0x20))();\n        cVar1 = fcn.00406140();\n        if (cVar1 != '\\0') {\n            piVar12 = *(in_RAX[0xe] + 8);\n            if (*in_RAX[0xf] != 0) {\n                iVar11 = 0;\n                iStack360 = *in_RAX[0xf];\n                while( true ) {\n                    pauStack304 = iVar11;\n                    piStack216 = piVar12;\n                    (**(*piVar12 + 0x18))(*(*piVar12 + 0x18), piVar12[1]);\n                    iVar11 = pauStack304 + 1;\n                    if (iStack360 <= iVar11) break;\n                    piVar12 = piStack216 + 2;\n                }\n            }\n            piVar12 = *in_RAX[0x10];\n            if (*(in_RAX[0x10] + 8) != NULL) {\n                iVar11 = 0;\n                pcStack368 = *(in_RAX[0x10] + 8);\n                while( true ) {\n                    pauStack304 = iVar11;\n                    piStack208 = piVar12;\n                    (**(*piVar12 + 0x18))(*(*piVar12 + 0x18), piVar12[1]);\n                    iVar11 = pauStack304 + 1;\n                    if (pcStack368 <= iVar11) break;\n                    piVar12 = piStack208 + 2;\n                }\n            }\n            pauVar8 = (**(*in_RAX[0xb] + 0x28))();\n            return pauVar8;\n        }\n    }\n    pauStack304 = *(in_RAX[8] + 8) + 3;\n    pauStack144 = NULL;\n    uVar4 = fcn.00447240(pauStack304);\n    *(in_RAX[0xd] + 8) = 0;\n    *in_RAX[0xe] = pauStack304;\n    pauStack128 = in_RAX[0xd];\n    pauVar8 = in_RAX;\n    if (*0x801c20 == 0) {\n        *in_RAX[0xd] = uVar4;\n    }\n    else {\n        fcn.0045dda0(in_RAX, pauStack128, param_3, param_4);\n    }\n    apauStack104[0] = 0x719488;\n    apauStack104[1] = 0x719490;\n    apauStack104[2] = 0x719480;\n    pauStack304 = NULL;\n    do {\n        if (2 < pauStack304) {\n            pauVar7 = *(pauVar8[0xd] + 8);\n            iVar11 = *(pauVar8[8] + 8);\n            pauStack304 = *pauVar7 + iVar11;\n            pauStack144 = *pauVar8[0xd];\n            pauVar5 = pauVar7;\n            pauVar9 = *pauVar8[0xe];\n            pauVar14 = *pauVar8[8];\n            if (*pauVar8[0xe] < pauStack304) {\n                iStack320 = iVar11;\n                pauStack312 = pauVar7;\n                pauStack136 = *pauVar8[8];\n                pauStack144 = fcn.00447360(pauVar7);\n                pauVar5 = pauStack312;\n                iVar11 = iStack320;\n                pauVar9 = pauVar7;\n                pauVar14 = pauStack136;\n            }\n            if (pauVar5 <= pauStack304) {\n                iVar6 = pauVar5 - pauVar9;\n                pcVar13 = *pauStack144;\n                pauVar7 = pauVar14;\n                pauStack312 = pauVar9;\n                fcn.00410400(iVar11);\n                pauVar8 = pauStack128;\n                *(in_RAX[0xd] + 8) = pauStack304;\n                *in_RAX[0xe] = pauStack312;\n                pauVar10 = pauStack144;\n                if (*0x801c20 == 0) {\n                    *in_RAX[0xd] = pauStack144;\n                    pauVar8 = pauVar14;\n                }\n                else {\n                    fcn.0045dea0(pauStack144, pauStack312, pauVar9, pauVar7);\n                }\n                uStack64 = fcn.00490fe0();\n                if (pauVar8 != NULL) {\n                    return pauVar8;\n                }\n                iVar11 = *(in_RAX[1] + 8);\n                puStack272 = *in_RAX[1];\n                if (iVar11 == 0) {\n                    auStack120 = *in_RAX;\n                    iVar11 = 1;\n                    puStack272 = auStack120;\n                }\n                pcStack80 = *in_RAX[4];\n                uStack72 = *(in_RAX[4] + 8);\n                auStack40 = in_RAX[0xd];\n                auStack56 = CONCAT88(pauVar10, pcVar13 + (pauVar5 << 3 & iVar6 >> 0x3f));\n                auStack24 = CONCAT88(*(in_RAX[9] + 8), *in_RAX[0xe]);\n                pauVar8 = *(*in_RAX + 8);\n                arg3 = &pcStack80;\n                uVar4 = fcn.00484140(puStack272, in_RAX, arg3);\n                if (*0x801c20 == 0) {\n                    *in_RAX[10] = uVar4;\n                }\n                else {\n                    fcn.0045dda0(puStack272, in_RAX[10], arg3, iVar11);\n                }\n                if (pauVar8 == NULL) {\n                    pauVar8 = *in_RAX[0xf];\n                    piVar12 = *(in_RAX[0xe] + 8);\n                    pauVar7 = pauVar8;\n                    if (pauVar8 != NULL) {\n                        pauVar7 = NULL;\n                        while( true ) {\n                            pauStack304 = pauVar7;\n                            piStack168 = piVar12;\n                            (**(*piVar12 + 0x18))(*(*piVar12 + 0x18), piVar12[1]);\n                            pauVar7 = *pauStack304 + 1;\n                            if (pauVar8 <= pauVar7) break;\n                            piVar12 = piStack168 + 2;\n                        }\n                    }\n                    pauVar8 = in_RAX;\n                    if (*in_RAX[0x12] != 0) {\n                        uStack280 = fcn.00404840();\n                        pauVar7 = in_RAX;\n                        if (*0x801c20 == 0) {\n                            *in_RAX[0x13] = uStack280;\n                        }\n                        else {\n                            uStack280 = fcn.0045dda0(in_RAX[0x13], in_RAX, arg3, iVar11);\n                        }\n                        iStack152 = *(pauVar7[0x11] + 8);\n                        pauStack304 = *pauVar7[0x12];\n                        pauVar5 = NULL;\n                        while (pauVar8 = pauVar7,  pauVar5 < pauStack304) {\n                            uStack296 = *(iStack152 + pauVar5 * 8);\n                            pauStack312 = pauVar5;\n                            puStack160 = fcn.0040c560();\n                            *puStack160 = 0x490ce0;\n                            if (*0x801c20 == 0) {\n                                puStack160[1] = uStack280;\n                            }\n                            else {\n                                fcn.0045dec0(0x490ce0, uStack280, arg3, iVar11);\n                            }\n                            puVar2 = fcn.0040c560();\n                            uVar4 = 0x490c80;\n                            *puVar2 = 0x490c80;\n                            if (*0x801c20 == 0) {\n                                puVar2[1] = puStack160;\n                                puVar2[2] = uStack296;\n                            }\n                            else {\n                                fcn.0045dec0(0x490c80, puStack160, arg3, iVar11);\n                                fcn.0045dec0(uVar4, uStack296, arg3, iVar11);\n                            }\n                            fcn.0043e560();\n                            pauVar7 = in_RAX;\n                            pauVar5 = *pauStack312 + 1;\n                        }\n                    }\n                    uVar4 = fcn.00490d40();\n                    if (*0x801c20 == 0) {\n                        *(in_RAX[0x13] + 8) = uVar4;\n                    }\n                    else {\n                        fcn.0045dda0(pauVar7, pauVar8, arg3, iVar11);\n                    }\n                    return NULL;\n                }\n                iVar11 = *in_RAX[0xf];\n                piVar12 = *(in_RAX[0xe] + 8);\n                if (iVar11 != 0) {\n                    pauStack304 = NULL;\n                    while( true ) {\n                        piStack184 = piVar12;\n                        (**(*piVar12 + 0x18))(*(*piVar12 + 0x18), piVar12[1]);\n                        pauStack304 = pauStack304 + 1;\n                        if (iVar11 <= pauStack304) break;\n                        piVar12 = piStack184 + 2;\n                    }\n                }\n                iVar11 = *(in_RAX[0x10] + 8);\n                piStack176 = *in_RAX[0x10];\n                if (iVar11 != 0) {\n                    pauStack304 = NULL;\n                    while( true ) {\n                        (**(*piStack176 + 0x18))();\n                        pauStack304 = pauStack304 + 1;\n                        if (iVar11 <= pauStack304) break;\n                        piStack176 = piStack176 + 2;\n                    }\n                }\n                return pauVar8;\n            }\n            in_RAX = pauStack128;\n            fcn.0045e300(pauStack304);\ncode_r0x00490897:\n            iVar11 = *(in_RAX[0x10] + 8);\n            piStack192 = *in_RAX[0x10];\n            if (iVar11 != 0) {\n                pauStack304 = NULL;\n                while( true ) {\n                    (**(*piStack192 + 0x18))();\n                    pauStack304 = pauStack304 + 1;\n                    pauStack144 = pauStack424;\n                    if (iVar11 <= pauStack304) break;\n                    piStack192 = piStack192 + 2;\n                }\n            }\n            return pauStack144;\n        }\n        pauVar7 = apauStack104[pauStack304];\n        pauVar5 = **pauVar7;\n        uVar4 = (*pauVar5)();\n        if (pauStack144 != NULL) {\n            iVar11 = *in_RAX[0xf];\n            piVar12 = *(in_RAX[0xe] + 8);\n            pauStack424 = pauStack144;\n            pauStack264 = pauVar5;\n            if (iVar11 != 0) {\n                pauStack304 = NULL;\n                while( true ) {\n                    piStack200 = piVar12;\n                    (**(*piVar12 + 0x18))(*(*piVar12 + 0x18), piVar12[1]);\n                    pauStack304 = pauStack304 + 1;\n                    if (iVar11 <= pauStack304) break;\n                    piVar12 = piStack200 + 2;\n                }\n            }\n            goto code_r0x00490897;\n        }\n        pauVar9 = *(in_RAX[0xd] + 8);\n        pcVar13 = *pauVar9 + 1;\n        pauVar14 = *in_RAX[0xd];\n        pauStack144 = pauVar14;\n        pauVar8 = in_RAX;\n        if (*in_RAX[0xe] < pcVar13) {\n            uStack288 = uVar4;\n            pauStack144 = fcn.00447360(pauVar9);\n            *in_RAX[0xe] = pauVar9;\n            pauVar7 = in_RAX;\n            if (*0x801c20 == 0) {\n                *in_RAX[0xd] = pauStack144;\n                uVar4 = uStack288;\n                pauVar5 = pauVar9;\n                pauVar9 = pauVar14;\n                pauVar8 = in_RAX;\n            }\n            else {\n                pauStack144 = fcn.0045dda0(pauVar9, in_RAX, pauVar8, pcVar13);\n                uVar4 = uStack288;\n                pauVar5 = pauVar9;\n                pauVar9 = pauVar14;\n                pauVar8 = pauVar7;\n            }\n        }\n        *(pauVar8[0xd] + 8) = *pauVar9 + 1;\n        if (*0x801c20 == 0) {\n            *(*pauStack144 + pauVar9 * 8) = uVar4;\n        }\n        else {\n            fcn.0045dda0(pauVar5, pauVar7, pauVar8, *pauVar9 + 1);\n        }\n        pauStack304 = pauStack304 + 1;\n    } while( true );\n}\n",
        "token_count": 4467
    },
    "00493920": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00493920(uint64_t arg1, ulong noname_1, uint64_t arg3, uint64_t arg4)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint8_t *unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    ulong unaff_RDI;\n    uint64_t uVar5;\n    uint64_t arg1_00;\n    uint64_t in_R10;\n    uint64_t in_R11;\n    uint32_t unaff_R12D;\n    int64_t unaff_R14;\n    \ncode_r0x00493920:\n    puVar4 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar4 = *0x20 + -0x38;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + 0x28) = unaff_RSI;\n        *(*0x20 + -0x24) = 0;\n        uVar3 = 0;\n        do {\n            if (3 < uVar3) {\n                uVar3 = 4;\n                unaff_RSI = 0;\n                unaff_RDI = 0;\n                goto code_r0x00493a85;\n            }\n            if (arg3 == in_R10) {\n                if (uVar3 == 0) {\n                    return in_R10;\n                }\n                if ((uVar3 != 1) && (*(in_RAX + 0x140) == -1)) {\n                    unaff_RSI = 0;\n                    unaff_RDI = 0;\n                    goto code_r0x00493a85;\n                }\n                *(*0x20 + -0x10) = in_R10;\n                *(*0x20 + -0x40) = 0x493a48;\n                fcn.00409d60();\n                return *(*0x20 + -0x10);\n            }\n            if (arg3 <= in_R10) goto code_r0x00493cf7;\n            uVar1 = *(in_R10 + unaff_RSI);\n            arg4 = uVar1;\n            in_R11 = in_R10 + 1;\n            uVar2 = *(in_RAX + 0x40 + arg4);\n            unaff_R12D = uVar2;\n            if (uVar2 == 0xff) {\n                if ((uVar1 != 10) && (uVar1 != 0xd)) {\n                    *(*0x20 + -0x10) = in_R11;\n                    unaff_R12D = *(in_RAX + 0x140);\n                    if (unaff_R12D != uVar1) {\n                        *(*0x20 + -0x40) = 0x493a09;\n                        fcn.00409d60();\n                        return *(*0x20 + -0x10);\n                    }\n                    if (uVar3 < 2) {\n                        *(*0x20 + -0x40) = 0x4939e5;\n                        fcn.00409d60();\n                        return *(*0x20 + -0x10);\n                    }\n                    arg1_00 = arg1;\n                    if (uVar3 == 2) goto code_r0x00493c53;\n                    goto code_r0x00493bd6;\n                }\n                uVar3 = uVar3 - 1;\n            }\n            else {\n                if (3 < uVar3) goto code_r0x00493cea;\n                *(*0x20 + (uVar3 - 0x24)) = uVar2;\n            }\n            uVar3 = uVar3 + 1;\n            in_R10 = in_R11;\n        } while( true );\n    }\n    goto code_r0x00493d06;\ncode_r0x00493bd6:\n    arg1_00 = arg3;\n    if (arg1_00 <= in_R11) {\ncode_r0x00493c39:\n        unaff_RSI = 0;\n        unaff_RDI = 0;\n        in_R10 = in_R11;\ncode_r0x00493a85:\n        *(*0x20 + -0x10) = in_R10;\n        uVar5 = *(*0x20 + -0x24) << 0x12 | *(*0x20 + -0x23) << 0xc;\n        uVar1 = *(*0x20 + -0x22);\n        arg1_00 = *(*0x20 + -0x21) | uVar1 << 6 | uVar5;\n        *(*0x20 + -0x22) = arg1_00;\n        *(*0x20 + -0x23) = (uVar1 << 6 | uVar5) >> 8;\n        arg4 = uVar5 >> 0x10;\n        *(*0x20 + -0x24) = uVar5 >> 0x10;\n        if (uVar3 == 2) {\ncode_r0x00493b52:\n            arg1_00 = *(*0x20 + -0x24);\n            if (arg1 != 0) {\n                *unaff_RBX = *(*0x20 + -0x24);\n                if ((*(in_RAX + 0x144) != '\\0') && ((*(*0x20 + -0x23) != '\\0' || (*(*0x20 + -0x22) != '\\0')))) {\n                    *(*0x20 + -0x40) = 0x493b85;\n                    fcn.00409d60();\n                    return *(*0x20 + -0x10);\n                }\n                return in_R10;\n            }\n            arg1 = 0;\n            *(*0x20 + -0x40) = 0x493bbf;\n            fcn.0045e240(0);\ncode_r0x00493bbf:\n            *(*0x20 + -0x40) = 0x493bc9;\n            fcn.0045e240(arg1);\n        }\n        else {\n            if (uVar3 == 3) {\ncode_r0x00493b03:\n                arg1_00 = *(*0x20 + -0x23);\n                if (1 < arg1) {\n                    unaff_RBX[1] = *(*0x20 + -0x23);\n                    if ((*(in_RAX + 0x144) != '\\0') && (*(*0x20 + -0x22) != '\\0')) {\n                        *(*0x20 + -0x40) = 0x493b32;\n                        fcn.00409d60();\n                        return *(*0x20 + -0x10);\n                    }\n                    *(*0x20 + -0x23) = 0;\n                    goto code_r0x00493b52;\n                }\n                goto code_r0x00493bbf;\n            }\n            if (uVar3 != 4) {\n                return in_R10;\n            }\n            if (2 < arg1) {\n                unaff_RBX[2] = arg1_00;\n                *(*0x20 + -0x22) = 0;\n                goto code_r0x00493b03;\n            }\n        }\n        *(*0x20 + -0x40) = 0x493bd3;\n        in_RAX = fcn.0045e240(arg1);\ncode_r0x00493bd3:\n        in_R11 = in_R11 + 1;\n        arg3 = arg1_00;\n        goto code_r0x00493bd6;\n    }\n    if (in_R11 < arg1_00) {\n        uVar1 = *(in_R11 + unaff_RSI);\n        arg4 = uVar1;\n        if ((uVar1 != 10) && (uVar1 != 0xd)) {\n            if (arg1_00 <= in_R11) goto code_r0x00493c39;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x20) = uVar3;\n            *(*0x20 + -0x18) = in_R11;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x40) = 0x493c14;\n            unaff_RDI = fcn.00409d60();\n            arg1 = *(*0x20 + 0x18);\n            uVar3 = *(*0x20 + -0x20);\n            unaff_RBX = *(*0x20 + 0x10);\n            in_R11 = *(*0x20 + -0x18);\n            unaff_RSI = 0x732c58;\n            in_RAX = *(*0x20 + 8);\n            in_R10 = in_R11;\n            goto code_r0x00493a85;\n        }\n        goto code_r0x00493bd3;\n    }\n    *(*0x20 + -0x40) = 0x493c50;\n    arg3 = arg1_00;\n    in_RAX = fcn.0045e240(arg1_00);\n    do {\n        in_R11 = in_R11 + 1;\ncode_r0x00493c53:\n        if (arg3 <= in_R11) break;\n        if (arg3 <= in_R11) goto code_r0x00493cdf;\n        uVar1 = *(in_R11 + unaff_RSI);\n        arg4 = uVar1;\n    } while ((uVar1 == 10) || (uVar1 == 0xd));\n    *(*0x20 + -0x10) = in_R11;\n    if (arg3 == in_R11) {\n        *(*0x20 + -0x40) = 0x493cb9;\n        fcn.00409d60();\n        return *(*0x20 + -0x10);\n    }\n    if (arg3 <= in_R11) goto code_r0x00493cd4;\n    arg4 = *(unaff_RSI + in_R11);\n    if (unaff_R12D != *(unaff_RSI + in_R11)) {\n        *(*0x20 + -0x40) = 0x493c96;\n        fcn.00409d60();\n        return *(*0x20 + -0x10);\n    }\n    in_R11 = in_R11 + 1;\n    arg1 = arg1_00;\n    goto code_r0x00493bd6;\ncode_r0x00493cd4:\n    *(*0x20 + -0x40) = 0x493cdf;\n    fcn.0045e240(arg3);\ncode_r0x00493cdf:\n    *(*0x20 + -0x40) = 0x493cea;\n    fcn.0045e240(arg3);\ncode_r0x00493cea:\n    *(*0x20 + -0x40) = 0x493cf7;\n    fcn.0045e240(4);\ncode_r0x00493cf7:\n    arg1 = arg3;\n    *(*0x20 + -0x40) = 0x493d05;\n    arg3 = arg1;\n    in_RAX = fcn.0045e240(arg1);\ncode_r0x00493d06:\n    *(puVar4 + 8) = in_RAX;\n    *(puVar4 + 0x10) = unaff_RBX;\n    *(puVar4 + 0x18) = arg1;\n    *(puVar4 + 0x20) = unaff_RDI;\n    *(puVar4 + 0x28) = unaff_RSI;\n    *(puVar4 + 0x30) = arg3;\n    *(puVar4 + 0x38) = arg4;\n    *(puVar4 + 0x40) = in_R10;\n    *(puVar4 + -8) = 0x493d33;\n    fcn.0045bb60();\n    in_RAX = *(puVar4 + 8);\n    unaff_RBX = *(puVar4 + 0x10);\n    arg1 = *(puVar4 + 0x18);\n    unaff_RDI = *(puVar4 + 0x20);\n    unaff_RSI = *(puVar4 + 0x28);\n    arg3 = *(puVar4 + 0x30);\n    arg4 = *(puVar4 + 0x38);\n    in_R10 = *(puVar4 + 0x40);\n    *0x20 = puVar4;\n    goto code_r0x00493920;\n}\n",
        "token_count": 2860
    },
    "004026e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.004026e0(uchar (*arg1) [32])\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uchar (*in_RAX) [32];\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uint64_t unaff_RDI;\n    uint64_t uVar5;\n    uchar auVar6 [16];\n    uint8_t uVar7;\n    uchar auVar8 [32];\n    uchar auVar9 [32];\n    uchar auVar10 [32];\n    uchar auVar11 [32];\n    \n    if (in_RAX != arg1) {\n        uVar5 = unaff_RDI;\n        if (unaff_RBX < unaff_RDI) {\n            uVar5 = unaff_RBX;\n        }\n        if (uVar5 < 8) {\n            if (uVar5 * -8 != 0) {\n                uVar7 = uVar5 * -8;\n                if (in_RAX < 0xf9) {\n                    uVar3 = **in_RAX;\n                }\n                else {\n                    uVar3 = *(in_RAX[-1] + uVar5 + 0x18) >> (uVar7 & 0x3f);\n                }\n                uVar3 = uVar3 << (uVar7 & 0x3f);\n                if (arg1 < 0xf9) {\n                    uVar5 = **arg1;\n                }\n                else {\n                    uVar5 = *(arg1[-1] + uVar5 + 0x18) >> (uVar7 & 0x3f);\n                }\n                uVar5 = uVar5 << (uVar7 & 0x3f);\n                uVar3 = uVar3 >> 0x38 | (uVar3 & 0xff000000000000) >> 0x28 | (uVar3 & 0xff0000000000) >> 0x18 |\n                        (uVar3 & 0xff00000000) >> 8 | (uVar3 & 0xff000000) << 8 | (uVar3 & 0xff0000) << 0x18 |\n                        (uVar3 & 0xff00) << 0x28 | uVar3 << 0x38;\n                uVar5 = (uVar5 >> 0x38 | (uVar5 & 0xff000000000000) >> 0x28 | (uVar5 & 0xff0000000000) >> 0x18 |\n                         (uVar5 & 0xff00000000) >> 8 | (uVar5 & 0xff000000) << 8 | (uVar5 & 0xff0000) << 0x18 |\n                         (uVar5 & 0xff00) << 0x28 | uVar5 << 0x38) ^ uVar3;\n                if (uVar5 != 0) {\n                    iVar1 = 0x3f;\n                    if (uVar5 != 0) {\n                        for (; uVar5 >> iVar1 == 0; iVar1 = iVar1 + -1) {\n                        }\n                    }\n                    return (uVar3 >> (iVar1 & 0x3f) & 1) * 2 + -1;\n                }\n            }\n            goto code_r0x004025cb;\n        }\n        if (0x3f < uVar5) {\n            if (*0x8020e3 == '\\x01') {\n                do {\n                    auVar8 = vmovdqu_avx(*in_RAX);\n                    auVar9 = vmovdqu_avx(*arg1);\n                    auVar10 = vmovdqu_avx(in_RAX[1]);\n                    auVar11 = vmovdqu_avx(arg1[1]);\n                    auVar8 = vpcmpeqb_avx2(auVar9, auVar8);\n                    uVar2 = (SUB321(auVar8 >> 7, 0) & 1 | (SUB321(auVar8 >> 0xf, 0) & 1) << 1 |\n                             (SUB321(auVar8 >> 0x17, 0) & 1) << 2 | (SUB321(auVar8 >> 0x1f, 0) & 1) << 3 |\n                             (SUB321(auVar8 >> 0x27, 0) & 1) << 4 | (SUB321(auVar8 >> 0x2f, 0) & 1) << 5 |\n                             (SUB321(auVar8 >> 0x37, 0) & 1) << 6 | (SUB321(auVar8 >> 0x3f, 0) & 1) << 7 |\n                             (SUB321(auVar8 >> 0x47, 0) & 1) << 8 | (SUB321(auVar8 >> 0x4f, 0) & 1) << 9 |\n                             (SUB321(auVar8 >> 0x57, 0) & 1) << 10 | (SUB321(auVar8 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB321(auVar8 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar8 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB321(auVar8 >> 0x77, 0) & 1) << 0xe | SUB321(auVar8 >> 0x7f, 0) << 0xf |\n                             (SUB321(auVar8 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar8 >> 0x8f, 0) & 1) << 0x11 |\n                             (SUB321(auVar8 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar8 >> 0x9f, 0) & 1) << 0x13 |\n                             (SUB321(auVar8 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar8 >> 0xaf, 0) & 1) << 0x15 |\n                             (SUB321(auVar8 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar8 >> 0xbf, 0) << 0x17 |\n                             (SUB321(auVar8 >> 199, 0) & 1) << 0x18 | (SUB321(auVar8 >> 0xcf, 0) & 1) << 0x19 |\n                             (SUB321(auVar8 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar8 >> 0xdf, 0) & 1) << 0x1b |\n                             (SUB321(auVar8 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar8 >> 0xef, 0) & 1) << 0x1d |\n                             (SUB321(auVar8 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar8 >> 0xff, 0) << 0x1f) ^ 0xffffffff;\n                    uVar3 = uVar2;\n                    if (uVar2 != 0) {\n                        vzeroupper_avx();\n                        goto code_r0x0040251d;\n                    }\n                    auVar8 = vpcmpeqb_avx2(auVar11, auVar10);\n                    uVar2 = (SUB321(auVar8 >> 7, 0) & 1 | (SUB321(auVar8 >> 0xf, 0) & 1) << 1 |\n                             (SUB321(auVar8 >> 0x17, 0) & 1) << 2 | (SUB321(auVar8 >> 0x1f, 0) & 1) << 3 |\n                             (SUB321(auVar8 >> 0x27, 0) & 1) << 4 | (SUB321(auVar8 >> 0x2f, 0) & 1) << 5 |\n                             (SUB321(auVar8 >> 0x37, 0) & 1) << 6 | (SUB321(auVar8 >> 0x3f, 0) & 1) << 7 |\n                             (SUB321(auVar8 >> 0x47, 0) & 1) << 8 | (SUB321(auVar8 >> 0x4f, 0) & 1) << 9 |\n                             (SUB321(auVar8 >> 0x57, 0) & 1) << 10 | (SUB321(auVar8 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB321(auVar8 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar8 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB321(auVar8 >> 0x77, 0) & 1) << 0xe | SUB321(auVar8 >> 0x7f, 0) << 0xf |\n                             (SUB321(auVar8 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar8 >> 0x8f, 0) & 1) << 0x11 |\n                             (SUB321(auVar8 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar8 >> 0x9f, 0) & 1) << 0x13 |\n                             (SUB321(auVar8 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar8 >> 0xaf, 0) & 1) << 0x15 |\n                             (SUB321(auVar8 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar8 >> 0xbf, 0) << 0x17 |\n                             (SUB321(auVar8 >> 199, 0) & 1) << 0x18 | (SUB321(auVar8 >> 0xcf, 0) & 1) << 0x19 |\n                             (SUB321(auVar8 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar8 >> 0xdf, 0) & 1) << 0x1b |\n                             (SUB321(auVar8 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar8 >> 0xef, 0) & 1) << 0x1d |\n                             (SUB321(auVar8 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar8 >> 0xff, 0) << 0x1f) ^ 0xffffffff;\n                    uVar3 = uVar2;\n                    if (uVar2 != 0) {\n                        vzeroupper_avx();\n                        goto code_r0x0040250b;\n                    }\n                    in_RAX = in_RAX[2];\n                    arg1 = arg1[2];\n                    uVar5 = uVar5 - 0x40;\n                } while (0x3f < uVar5);\n                vzeroupper_avx();\n            }\n            else {\n                do {\n                    uVar7 = -((*arg1)[0xf] == (*in_RAX)[0xf]);\n                    auVar6 = CONCAT115(uVar7, CONCAT114(-((*arg1)[0xe] == (*in_RAX)[0xe]), \n                                                        CONCAT113(-((*arg1)[0xd] == (*in_RAX)[0xd]), \n                                                                  CONCAT112(-((*arg1)[0xc] == (*in_RAX)[0xc]), \n                                                                            CONCAT111(-((*arg1)[0xb] == (*in_RAX)[0xb])\n                                                                                      , CONCAT110(-((*arg1)[10] ==\n                                                                                                   (*in_RAX)[10]), \n                                                                                                  CONCAT19(-((*arg1)[9]\n                                                                                                            == (*in_RAX)\n                                                            [9]), CONCAT18(-((*arg1)[8] == (*in_RAX)[8]), \n                                                                           CONCAT17(-((*arg1)[7] == (*in_RAX)[7]), \n                                                                                    CONCAT16(-((*arg1)[6] ==\n                                                                                              (*in_RAX)[6]), \n                                                                                             CONCAT15(-((*arg1)[5] ==\n                                                                                                       (*in_RAX)[5]), \n                                                                                                      CONCAT14(-((*arg1)\n                                                            [4] == (*in_RAX)[4]), \n                                                            CONCAT13(-((*arg1)[3] == (*in_RAX)[3]), \n                                                                     CONCAT12(-((*arg1)[2] == (*in_RAX)[2]), \n                                                                              CONCAT11(-((*arg1)[1] == (*in_RAX)[1]), \n                                                                                       -((*arg1)[0] == (*in_RAX)[0])))))\n                                                            )))))))))));\n                    uVar3 = (SUB161(auVar6 >> 7, 0) & 1 | (SUB161(auVar6 >> 0xf, 0) & 1) << 1 |\n                             (SUB161(auVar6 >> 0x17, 0) & 1) << 2 | (SUB161(auVar6 >> 0x1f, 0) & 1) << 3 |\n                             (SUB161(auVar6 >> 0x27, 0) & 1) << 4 | (SUB161(auVar6 >> 0x2f, 0) & 1) << 5 |\n                             (SUB161(auVar6 >> 0x37, 0) & 1) << 6 | (SUB161(auVar6 >> 0x3f, 0) & 1) << 7 |\n                             (SUB161(auVar6 >> 0x47, 0) & 1) << 8 | (SUB161(auVar6 >> 0x4f, 0) & 1) << 9 |\n                             (SUB161(auVar6 >> 0x57, 0) & 1) << 10 | (SUB161(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB161(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB161(auVar6 >> 0x77, 0) & 1) << 0xe | (uVar7 >> 7) << 0xf) ^ 0xffff;\n                    if (uVar3 != 0) goto code_r0x0040251d;\n                    uVar7 = -((*arg1)[0x1f] == (*in_RAX)[0x1f]);\n                    auVar6 = CONCAT115(uVar7, CONCAT114(-((*arg1)[0x1e] == (*in_RAX)[0x1e]), \n                                                        CONCAT113(-((*arg1)[0x1d] == (*in_RAX)[0x1d]), \n                                                                  CONCAT112(-((*arg1)[0x1c] == (*in_RAX)[0x1c]), \n                                                                            CONCAT111(-((*arg1)[0x1b] == (*in_RAX)[0x1b]\n                                                                                       ), CONCAT110(-((*arg1)[0x1a] ==\n                                                                                                     (*in_RAX)[0x1a]), \n                                                                                                    CONCAT19(-((*arg1)[\n                                                            0x19] == (*in_RAX)[0x19]), \n                                                            CONCAT18(-((*arg1)[0x18] == (*in_RAX)[0x18]), \n                                                                     CONCAT17(-((*arg1)[0x17] == (*in_RAX)[0x17]), \n                                                                              CONCAT16(-((*arg1)[0x16] ==\n                                                                                        (*in_RAX)[0x16]), \n                                                                                       CONCAT15(-((*arg1)[0x15] ==\n                                                                                                 (*in_RAX)[0x15]), \n                                                                                                CONCAT14(-((*arg1)[0x14]\n                                                                                                          == (*in_RAX)[\n                                                            0x14]), CONCAT13(-((*arg1)[0x13] == (*in_RAX)[0x13]), \n                                                                             CONCAT12(-((*arg1)[0x12] == (*in_RAX)[0x12]\n                                                                                       ), CONCAT11(-((*arg1)[0x11] ==\n                                                                                                    (*in_RAX)[0x11]), \n                                                                                                   -((*arg1)[0x10] ==\n                                                                                                    (*in_RAX)[0x10])))))\n                                                            )))))))))));\n                    uVar3 = (SUB161(auVar6 >> 7, 0) & 1 | (SUB161(auVar6 >> 0xf, 0) & 1) << 1 |\n                             (SUB161(auVar6 >> 0x17, 0) & 1) << 2 | (SUB161(auVar6 >> 0x1f, 0) & 1) << 3 |\n                             (SUB161(auVar6 >> 0x27, 0) & 1) << 4 | (SUB161(auVar6 >> 0x2f, 0) & 1) << 5 |\n                             (SUB161(auVar6 >> 0x37, 0) & 1) << 6 | (SUB161(auVar6 >> 0x3f, 0) & 1) << 7 |\n                             (SUB161(auVar6 >> 0x47, 0) & 1) << 8 | (SUB161(auVar6 >> 0x4f, 0) & 1) << 9 |\n                             (SUB161(auVar6 >> 0x57, 0) & 1) << 10 | (SUB161(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB161(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB161(auVar6 >> 0x77, 0) & 1) << 0xe | (uVar7 >> 7) << 0xf) ^ 0xffff;\n                    if (uVar3 != 0) {\n                        in_RAX = *in_RAX + 0x10;\n                        arg1 = *arg1 + 0x10;\n                        goto code_r0x0040251d;\n                    }\n                    uVar7 = -(arg1[1][0xf] == in_RAX[1][0xf]);\n                    auVar6 = CONCAT115(uVar7, CONCAT114(-(arg1[1][0xe] == in_RAX[1][0xe]), \n                                                        CONCAT113(-(arg1[1][0xd] == in_RAX[1][0xd]), \n                                                                  CONCAT112(-(arg1[1][0xc] == in_RAX[1][0xc]), \n                                                                            CONCAT111(-(arg1[1][0xb] == in_RAX[1][0xb])\n                                                                                      , CONCAT110(-(arg1[1][10] ==\n                                                                                                   in_RAX[1][10]), \n                                                                                                  CONCAT19(-(arg1[1][9]\n                                                                                                            == in_RAX[1]\n                                                            [9]), CONCAT18(-(arg1[1][8] == in_RAX[1][8]), \n                                                                           CONCAT17(-(arg1[1][7] == in_RAX[1][7]), \n                                                                                    CONCAT16(-(arg1[1][6] ==\n                                                                                              in_RAX[1][6]), \n                                                                                             CONCAT15(-(arg1[1][5] ==\n                                                                                                       in_RAX[1][5]), \n                                                                                                      CONCAT14(-(arg1[1]\n                                                            [4] == in_RAX[1][4]), \n                                                            CONCAT13(-(arg1[1][3] == in_RAX[1][3]), \n                                                                     CONCAT12(-(arg1[1][2] == in_RAX[1][2]), \n                                                                              CONCAT11(-(arg1[1][1] == in_RAX[1][1]), \n                                                                                       -(arg1[1][0] == in_RAX[1][0])))))\n                                                            )))))))))));\n                    uVar3 = (SUB161(auVar6 >> 7, 0) & 1 | (SUB161(auVar6 >> 0xf, 0) & 1) << 1 |\n                             (SUB161(auVar6 >> 0x17, 0) & 1) << 2 | (SUB161(auVar6 >> 0x1f, 0) & 1) << 3 |\n                             (SUB161(auVar6 >> 0x27, 0) & 1) << 4 | (SUB161(auVar6 >> 0x2f, 0) & 1) << 5 |\n                             (SUB161(auVar6 >> 0x37, 0) & 1) << 6 | (SUB161(auVar6 >> 0x3f, 0) & 1) << 7 |\n                             (SUB161(auVar6 >> 0x47, 0) & 1) << 8 | (SUB161(auVar6 >> 0x4f, 0) & 1) << 9 |\n                             (SUB161(auVar6 >> 0x57, 0) & 1) << 10 | (SUB161(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB161(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB161(auVar6 >> 0x77, 0) & 1) << 0xe | (uVar7 >> 7) << 0xf) ^ 0xffff;\n                    if (uVar3 != 0) goto code_r0x0040250b;\n                    auVar6 = *(in_RAX[1] + 0x10);\n                    uVar7 = -(arg1[1][0x1f] == SUB161(auVar6 >> 0x78, 0));\n                    auVar6 = CONCAT115(uVar7, CONCAT114(-(arg1[1][0x1e] == SUB161(auVar6 >> 0x70, 0)), \n                                                        CONCAT113(-(arg1[1][0x1d] == SUB161(auVar6 >> 0x68, 0)), \n                                                                  CONCAT112(-(arg1[1][0x1c] == SUB161(auVar6 >> 0x60, 0)\n                                                                             ), CONCAT111(-(arg1[1][0x1b] ==\n                                                                                           SUB161(auVar6 >> 0x58, 0)), \n                                                                                          CONCAT110(-(arg1[1][0x1a] ==\n                                                                                                     SUB161(auVar6 >> \n                                                            0x50, 0)), \n                                                            CONCAT19(-(arg1[1][0x19] == SUB161(auVar6 >> 0x48, 0)), \n                                                                     CONCAT18(-(arg1[1][0x18] ==\n                                                                               SUB161(auVar6 >> 0x40, 0)), \n                                                                              CONCAT17(-(arg1[1][0x17] ==\n                                                                                        SUB161(auVar6 >> 0x38, 0)), \n                                                                                       CONCAT16(-(arg1[1][0x16] ==\n                                                                                                 SUB161(auVar6 >> 0x30, \n                                                                                                        0)), \n                                                                                                CONCAT15(-(arg1[1][0x15]\n                                                                                                          == SUB161(\n                                                            auVar6 >> 0x28, 0)), \n                                                            CONCAT14(-(arg1[1][0x14] == SUB161(auVar6 >> 0x20, 0)), \n                                                                     CONCAT13(-(arg1[1][0x13] ==\n                                                                               SUB161(auVar6 >> 0x18, 0)), \n                                                                              CONCAT12(-(arg1[1][0x12] ==\n                                                                                        SUB161(auVar6 >> 0x10, 0)), \n                                                                                       CONCAT11(-(arg1[1][0x11] ==\n                                                                                                 SUB161(auVar6 >> 8, 0))\n                                                                                                , -(arg1[1][0x10] ==\n                                                                                                   SUB161(auVar6, 0)))))\n                                                                    ))))))))))));\n                    uVar3 = (SUB161(auVar6 >> 7, 0) & 1 | (SUB161(auVar6 >> 0xf, 0) & 1) << 1 |\n                             (SUB161(auVar6 >> 0x17, 0) & 1) << 2 | (SUB161(auVar6 >> 0x1f, 0) & 1) << 3 |\n                             (SUB161(auVar6 >> 0x27, 0) & 1) << 4 | (SUB161(auVar6 >> 0x2f, 0) & 1) << 5 |\n                             (SUB161(auVar6 >> 0x37, 0) & 1) << 6 | (SUB161(auVar6 >> 0x3f, 0) & 1) << 7 |\n                             (SUB161(auVar6 >> 0x47, 0) & 1) << 8 | (SUB161(auVar6 >> 0x4f, 0) & 1) << 9 |\n                             (SUB161(auVar6 >> 0x57, 0) & 1) << 10 | (SUB161(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB161(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB161(auVar6 >> 0x77, 0) & 1) << 0xe | (uVar7 >> 7) << 0xf) ^ 0xffff;\n                    if (uVar3 != 0) {\n                        in_RAX = in_RAX[1] + 0x10;\n                        arg1 = arg1[1] + 0x10;\n                        goto code_r0x0040251d;\n                    }\n                    in_RAX = in_RAX[2];\n                    arg1 = arg1[2];\n                    uVar5 = uVar5 - 0x40;\n                } while (0x40 < uVar5);\n            }\n        }\n        for (; 0x10 < uVar5; uVar5 = uVar5 - 0x10) {\n            auVar6 = **in_RAX;\n            uVar7 = -((*arg1)[0xf] == SUB161(auVar6 >> 0x78, 0));\n            auVar6 = CONCAT115(uVar7, CONCAT114(-((*arg1)[0xe] == SUB161(auVar6 >> 0x70, 0)), \n                                                CONCAT113(-((*arg1)[0xd] == SUB161(auVar6 >> 0x68, 0)), \n                                                          CONCAT112(-((*arg1)[0xc] == SUB161(auVar6 >> 0x60, 0)), \n                                                                    CONCAT111(-((*arg1)[0xb] ==\n                                                                               SUB161(auVar6 >> 0x58, 0)), \n                                                                              CONCAT110(-((*arg1)[10] ==\n                                                                                         SUB161(auVar6 >> 0x50, 0)), \n                                                                                        CONCAT19(-((*arg1)[9] ==\n                                                                                                  SUB161(auVar6 >> 0x48\n                                                                                                         , 0)), \n                                                                                                 CONCAT18(-((*arg1)[8]\n                                                                                                           == SUB161(\n                                                            auVar6 >> 0x40, 0)), \n                                                            CONCAT17(-((*arg1)[7] == SUB161(auVar6 >> 0x38, 0)), \n                                                                     CONCAT16(-((*arg1)[6] == SUB161(auVar6 >> 0x30, 0))\n                                                                              , CONCAT15(-((*arg1)[5] ==\n                                                                                          SUB161(auVar6 >> 0x28, 0)), \n                                                                                         CONCAT14(-((*arg1)[4] ==\n                                                                                                   SUB161(auVar6 >> 0x20\n                                                                                                          , 0)), \n                                                                                                  CONCAT13(-((*arg1)[3]\n                                                                                                            == SUB161(\n                                                            auVar6 >> 0x18, 0)), \n                                                            CONCAT12(-((*arg1)[2] == SUB161(auVar6 >> 0x10, 0)), \n                                                                     CONCAT11(-((*arg1)[1] == SUB161(auVar6 >> 8, 0)), \n                                                                              -((*arg1)[0] == SUB161(auVar6, 0))))))))))\n                                                            )))))));\n            uVar3 = (SUB161(auVar6 >> 7, 0) & 1 | (SUB161(auVar6 >> 0xf, 0) & 1) << 1 |\n                     (SUB161(auVar6 >> 0x17, 0) & 1) << 2 | (SUB161(auVar6 >> 0x1f, 0) & 1) << 3 |\n                     (SUB161(auVar6 >> 0x27, 0) & 1) << 4 | (SUB161(auVar6 >> 0x2f, 0) & 1) << 5 |\n                     (SUB161(auVar6 >> 0x37, 0) & 1) << 6 | (SUB161(auVar6 >> 0x3f, 0) & 1) << 7 |\n                     (SUB161(auVar6 >> 0x47, 0) & 1) << 8 | (SUB161(auVar6 >> 0x4f, 0) & 1) << 9 |\n                     (SUB161(auVar6 >> 0x57, 0) & 1) << 10 | (SUB161(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                     (SUB161(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                     (SUB161(auVar6 >> 0x77, 0) & 1) << 0xe | (uVar7 >> 7) << 0xf) ^ 0xffff;\n            if (uVar3 != 0) goto code_r0x0040251d;\n            in_RAX = *in_RAX + 0x10;\n            arg1 = *arg1 + 0x10;\n        }\n        if (8 < uVar5) {\n            uVar3 = **in_RAX;\n            uVar4 = **arg1;\n            if (uVar3 != uVar4) goto code_r0x00402556;\n        }\n        uVar3 = *(in_RAX[-1] + uVar5 + 0x18);\n        uVar4 = *(arg1[-1] + uVar5 + 0x18);\n        if (uVar3 != uVar4) {\ncode_r0x00402556:\n            uVar5 = uVar3 >> 0x38 | (uVar3 & 0xff000000000000) >> 0x28 | (uVar3 & 0xff0000000000) >> 0x18 |\n                    (uVar3 & 0xff00000000) >> 8 | (uVar3 & 0xff000000) << 8 | (uVar3 & 0xff0000) << 0x18 |\n                    (uVar3 & 0xff00) << 0x28 | uVar3 << 0x38;\n            uVar3 = (uVar4 >> 0x38 | (uVar4 & 0xff000000000000) >> 0x28 | (uVar4 & 0xff0000000000) >> 0x18 |\n                     (uVar4 & 0xff00000000) >> 8 | (uVar4 & 0xff000000) << 8 | (uVar4 & 0xff0000) << 0x18 |\n                     (uVar4 & 0xff00) << 0x28 | uVar4 << 0x38) ^ uVar5;\n            iVar1 = 0x3f;\n            if (uVar3 != 0) {\n                for (; uVar3 >> iVar1 == 0; iVar1 = iVar1 + -1) {\n                }\n            }\n            return (uVar5 >> (iVar1 & 0x3f) & 1) * 2 + -1;\n        }\n    }\ncode_r0x004025cb:\n    return ((unaff_RBX == unaff_RDI) - 1) + (unaff_RBX != unaff_RDI && unaff_RDI <= unaff_RBX) * 2;\ncode_r0x0040250b:\n    in_RAX = in_RAX[1];\n    arg1 = arg1[1];\ncode_r0x0040251d:\n    iVar1 = 0;\n    if (uVar3 != 0) {\n        for (; (uVar3 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n        }\n    }\n    return ((*arg1)[iVar1] <= (*in_RAX)[iVar1] && (*in_RAX)[iVar1] != (*arg1)[iVar1]) * 2 + -1;\n}\n",
        "token_count": 7674
    },
    "00402880": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00402880(ulong noname_0, ulong arg2)\n\n{\n    uchar (*pauVar1) [32];\n    uint8_t *puVar2;\n    uint64_t in_RAX;\n    uint8_t uVar3;\n    uchar auVar4 [16];\n    uint8_t uVar6;\n    uchar auVar5 [32];\n    uchar auVar7 [32];\n    uchar (*pauStackX8) [32];\n    uint64_t uStackX16;\n    uint8_t uStackX24;\n    \n    if (*0x8020ea != '\\x01') {\n        fcn.00402420(uStackX24);\n        return;\n    }\n    uVar3 = uStackX16;\n    if (uStackX16 < 0x10) {\n        if (uStackX16 == 0) {\n            return;\n        }\n        if ((*pauStackX8 + 0x10 & 0xff0) != 0) {\n            uVar6 = -((*pauStackX8)[0xf] == uStackX24);\n            auVar4 = CONCAT115(uVar6, CONCAT114(-((*pauStackX8)[0xe] == uStackX24), \n                                                CONCAT113(-((*pauStackX8)[0xd] == uStackX24), \n                                                          CONCAT112(-((*pauStackX8)[0xc] == uStackX24), \n                                                                    CONCAT111(-((*pauStackX8)[0xb] == uStackX24), \n                                                                              CONCAT110(-((*pauStackX8)[10] == uStackX24\n                                                                                         ), CONCAT19(-((*pauStackX8)[9]\n                                                                                                      == uStackX24), \n                                                                                                     CONCAT18(-((*\n                                                            pauStackX8)[8] == uStackX24), \n                                                            CONCAT17(-((*pauStackX8)[7] == uStackX24), \n                                                                     CONCAT16(-((*pauStackX8)[6] == uStackX24), \n                                                                              CONCAT15(-((*pauStackX8)[5] == uStackX24)\n                                                                                       , CONCAT14(-((*pauStackX8)[4] ==\n                                                                                                   uStackX24), \n                                                                                                  CONCAT13(-((*\n                                                            pauStackX8)[3] == uStackX24), \n                                                            CONCAT12(-((*pauStackX8)[2] == uStackX24), \n                                                                     CONCAT11(-((*pauStackX8)[1] == uStackX24), \n                                                                              -((*pauStackX8)[0] == uStackX24)))))))))))\n                                                            )))));\n            popcnt((SUB161(auVar4 >> 7, 0) & 1 | (SUB161(auVar4 >> 0xf, 0) & 1) << 1 |\n                    (SUB161(auVar4 >> 0x17, 0) & 1) << 2 | (SUB161(auVar4 >> 0x1f, 0) & 1) << 3 |\n                    (SUB161(auVar4 >> 0x27, 0) & 1) << 4 | (SUB161(auVar4 >> 0x2f, 0) & 1) << 5 |\n                    (SUB161(auVar4 >> 0x37, 0) & 1) << 6 | (SUB161(auVar4 >> 0x3f, 0) & 1) << 7 |\n                    (SUB161(auVar4 >> 0x47, 0) & 1) << 8 | (SUB161(auVar4 >> 0x4f, 0) & 1) << 9 |\n                    (SUB161(auVar4 >> 0x57, 0) & 1) << 10 | (SUB161(auVar4 >> 0x5f, 0) & 1) << 0xb |\n                    (SUB161(auVar4 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar4 >> 0x6f, 0) & 1) << 0xd |\n                    (SUB161(auVar4 >> 0x77, 0) & 1) << 0xe | (uVar6 >> 7) << 0xf) & (1 << (uVar3 & 0x3f)) - 1U);\n            return;\n        }\n        puVar2 = pauStackX8[-1] + uStackX16 + 0x10;\n        auVar4 = CONCAT115(-(puVar2[0xf] == uStackX24), \n                           CONCAT114(-(puVar2[0xe] == uStackX24), \n                                     CONCAT113(-(puVar2[0xd] == uStackX24), \n                                               CONCAT112(-(puVar2[0xc] == uStackX24), \n                                                         CONCAT111(-(puVar2[0xb] == uStackX24), \n                                                                   CONCAT110(-(puVar2[10] == uStackX24), \n                                                                             CONCAT19(-(puVar2[9] == uStackX24), \n                                                                                      CONCAT18(-(puVar2[8] == uStackX24)\n                                                                                               , CONCAT17(-(puVar2[7] ==\n                                                                                                           uStackX24), \n                                                                                                          CONCAT16(-(\n                                                            puVar2[6] == uStackX24), \n                                                            CONCAT15(-(puVar2[5] == uStackX24), \n                                                                     CONCAT14(-(puVar2[4] == uStackX24), \n                                                                              CONCAT13(-(puVar2[3] == uStackX24), \n                                                                                       CONCAT12(-(puVar2[2] == uStackX24\n                                                                                                 ), CONCAT11(-(puVar2[1]\n                                                                                                              == \n                                                            uStackX24), -(*puVar2 == uStackX24))))))))))))))));\n        popcnt((SUB161(auVar4 >> 7, 0) & 1 | (SUB161(auVar4 >> 0xf, 0) & 1) << 1 | (SUB161(auVar4 >> 0x17, 0) & 1) << 2\n                | (SUB161(auVar4 >> 0x1f, 0) & 1) << 3 | (SUB161(auVar4 >> 0x27, 0) & 1) << 4 |\n                (SUB161(auVar4 >> 0x2f, 0) & 1) << 5 | (SUB161(auVar4 >> 0x37, 0) & 1) << 6 |\n                (SUB161(auVar4 >> 0x3f, 0) & 1) << 7 | (SUB161(auVar4 >> 0x47, 0) & 1) << 8 |\n                (SUB161(auVar4 >> 0x4f, 0) & 1) << 9 | (SUB161(auVar4 >> 0x57, 0) & 1) << 10 |\n                (SUB161(auVar4 >> 0x5f, 0) & 1) << 0xb | (SUB161(auVar4 >> 0x67, 0) & 1) << 0xc |\n                (SUB161(auVar4 >> 0x6f, 0) & 1) << 0xd | (SUB161(auVar4 >> 0x77, 0) & 1) << 0xe |\n               (-(puVar2[0xf] == uStackX24) >> 7) << 0xf) & (0xffff >> (0x10 - uVar3 & 0x3f)) << (0x10 - uVar3 & 0x3f));\n        return;\n    }\n    if ((uStackX16 < 0x21) || (*0x8020e3 != '\\x01')) {\n        pauVar1 = pauStackX8[-1] + uStackX16 + 0x10;\n        for (; pauStackX8 <= pauVar1; pauStackX8 = *pauStackX8 + 0x10) {\n            uVar3 = -((*pauStackX8)[0xf] == uStackX24);\n            auVar4 = CONCAT115(uVar3, CONCAT114(-((*pauStackX8)[0xe] == uStackX24), \n                                                CONCAT113(-((*pauStackX8)[0xd] == uStackX24), \n                                                          CONCAT112(-((*pauStackX8)[0xc] == uStackX24), \n                                                                    CONCAT111(-((*pauStackX8)[0xb] == uStackX24), \n                                                                              CONCAT110(-((*pauStackX8)[10] == uStackX24\n                                                                                         ), CONCAT19(-((*pauStackX8)[9]\n                                                                                                      == uStackX24), \n                                                                                                     CONCAT18(-((*\n                                                            pauStackX8)[8] == uStackX24), \n                                                            CONCAT17(-((*pauStackX8)[7] == uStackX24), \n                                                                     CONCAT16(-((*pauStackX8)[6] == uStackX24), \n                                                                              CONCAT15(-((*pauStackX8)[5] == uStackX24)\n                                                                                       , CONCAT14(-((*pauStackX8)[4] ==\n                                                                                                   uStackX24), \n                                                                                                  CONCAT13(-((*\n                                                            pauStackX8)[3] == uStackX24), \n                                                            CONCAT12(-((*pauStackX8)[2] == uStackX24), \n                                                                     CONCAT11(-((*pauStackX8)[1] == uStackX24), \n                                                                              -((*pauStackX8)[0] == uStackX24)))))))))))\n                                                            )))));\n            popcnt(SUB161(auVar4 >> 7, 0) & 1 | (SUB161(auVar4 >> 0xf, 0) & 1) << 1 |\n                   (SUB161(auVar4 >> 0x17, 0) & 1) << 2 | (SUB161(auVar4 >> 0x1f, 0) & 1) << 3 |\n                   (SUB161(auVar4 >> 0x27, 0) & 1) << 4 | (SUB161(auVar4 >> 0x2f, 0) & 1) << 5 |\n                   (SUB161(auVar4 >> 0x37, 0) & 1) << 6 | (SUB161(auVar4 >> 0x3f, 0) & 1) << 7 |\n                   (SUB161(auVar4 >> 0x47, 0) & 1) << 8 | (SUB161(auVar4 >> 0x4f, 0) & 1) << 9 |\n                   (SUB161(auVar4 >> 0x57, 0) & 1) << 10 | (SUB161(auVar4 >> 0x5f, 0) & 1) << 0xb |\n                   (SUB161(auVar4 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar4 >> 0x6f, 0) & 1) << 0xd |\n                   (SUB161(auVar4 >> 0x77, 0) & 1) << 0xe | (uVar3 >> 7) << 0xf);\n        }\n        if ((uStackX16 & 0xf) != 0) {\n            uVar3 = 0x10 - (uStackX16 & 0xf);\n            uVar6 = -((*pauVar1)[0xf] == uStackX24);\n            auVar4 = CONCAT115(uVar6, CONCAT114(-((*pauVar1)[0xe] == uStackX24), \n                                                CONCAT113(-((*pauVar1)[0xd] == uStackX24), \n                                                          CONCAT112(-((*pauVar1)[0xc] == uStackX24), \n                                                                    CONCAT111(-((*pauVar1)[0xb] == uStackX24), \n                                                                              CONCAT110(-((*pauVar1)[10] == uStackX24), \n                                                                                        CONCAT19(-((*pauVar1)[9] ==\n                                                                                                  uStackX24), \n                                                                                                 CONCAT18(-((*pauVar1)\n                                                                                                            [8] == \n                                                            uStackX24), \n                                                            CONCAT17(-((*pauVar1)[7] == uStackX24), \n                                                                     CONCAT16(-((*pauVar1)[6] == uStackX24), \n                                                                              CONCAT15(-((*pauVar1)[5] == uStackX24), \n                                                                                       CONCAT14(-((*pauVar1)[4] ==\n                                                                                                 uStackX24), \n                                                                                                CONCAT13(-((*pauVar1)[3]\n                                                                                                          == uStackX24)\n                                                                                                         , CONCAT12(-((*\n                                                            pauVar1)[2] == uStackX24), \n                                                            CONCAT11(-((*pauVar1)[1] == uStackX24), \n                                                                     -((*pauVar1)[0] == uStackX24))))))))))))))));\n            popcnt((SUB161(auVar4 >> 7, 0) & 1 | (SUB161(auVar4 >> 0xf, 0) & 1) << 1 |\n                    (SUB161(auVar4 >> 0x17, 0) & 1) << 2 | (SUB161(auVar4 >> 0x1f, 0) & 1) << 3 |\n                    (SUB161(auVar4 >> 0x27, 0) & 1) << 4 | (SUB161(auVar4 >> 0x2f, 0) & 1) << 5 |\n                    (SUB161(auVar4 >> 0x37, 0) & 1) << 6 | (SUB161(auVar4 >> 0x3f, 0) & 1) << 7 |\n                    (SUB161(auVar4 >> 0x47, 0) & 1) << 8 | (SUB161(auVar4 >> 0x4f, 0) & 1) << 9 |\n                    (SUB161(auVar4 >> 0x57, 0) & 1) << 10 | (SUB161(auVar4 >> 0x5f, 0) & 1) << 0xb |\n                    (SUB161(auVar4 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar4 >> 0x6f, 0) & 1) << 0xd |\n                    (SUB161(auVar4 >> 0x77, 0) & 1) << 0xe | (uVar6 >> 7) << 0xf) &\n                   (0xffff >> (uVar3 & 0x3f)) << (uVar3 & 0x3f));\n        }\n        return;\n    }\n    pauVar1 = pauStackX8[-1] + uStackX16;\n    auVar5 = vpbroadcastb_avx2(ZEXT816(in_RAX & 0xffffffffffffff00 | uStackX24));\n    do {\n        auVar7 = vmovdqu_avx(*pauStackX8);\n        auVar7 = vpcmpeqb_avx2(auVar7, auVar5);\n        popcnt(SUB321(auVar7 >> 7, 0) & 1 | (SUB321(auVar7 >> 0xf, 0) & 1) << 1 | (SUB321(auVar7 >> 0x17, 0) & 1) << 2 |\n               (SUB321(auVar7 >> 0x1f, 0) & 1) << 3 | (SUB321(auVar7 >> 0x27, 0) & 1) << 4 |\n               (SUB321(auVar7 >> 0x2f, 0) & 1) << 5 | (SUB321(auVar7 >> 0x37, 0) & 1) << 6 |\n               (SUB321(auVar7 >> 0x3f, 0) & 1) << 7 | (SUB321(auVar7 >> 0x47, 0) & 1) << 8 |\n               (SUB321(auVar7 >> 0x4f, 0) & 1) << 9 | (SUB321(auVar7 >> 0x57, 0) & 1) << 10 |\n               (SUB321(auVar7 >> 0x5f, 0) & 1) << 0xb | (SUB321(auVar7 >> 0x67, 0) & 1) << 0xc |\n               (SUB321(auVar7 >> 0x6f, 0) & 1) << 0xd | (SUB321(auVar7 >> 0x77, 0) & 1) << 0xe |\n               SUB321(auVar7 >> 0x7f, 0) << 0xf | (SUB321(auVar7 >> 0x87, 0) & 1) << 0x10 |\n               (SUB321(auVar7 >> 0x8f, 0) & 1) << 0x11 | (SUB321(auVar7 >> 0x97, 0) & 1) << 0x12 |\n               (SUB321(auVar7 >> 0x9f, 0) & 1) << 0x13 | (SUB321(auVar7 >> 0xa7, 0) & 1) << 0x14 |\n               (SUB321(auVar7 >> 0xaf, 0) & 1) << 0x15 | (SUB321(auVar7 >> 0xb7, 0) & 1) << 0x16 |\n               SUB321(auVar7 >> 0xbf, 0) << 0x17 | (SUB321(auVar7 >> 199, 0) & 1) << 0x18 |\n               (SUB321(auVar7 >> 0xcf, 0) & 1) << 0x19 | (SUB321(auVar7 >> 0xd7, 0) & 1) << 0x1a |\n               (SUB321(auVar7 >> 0xdf, 0) & 1) << 0x1b | (SUB321(auVar7 >> 0xe7, 0) & 1) << 0x1c |\n               (SUB321(auVar7 >> 0xef, 0) & 1) << 0x1d | (SUB321(auVar7 >> 0xf7, 0) & 1) << 0x1e |\n               SUB321(auVar7 >> 0xff, 0) << 0x1f);\n        pauStackX8 = pauStackX8[1];\n    } while (pauStackX8 <= pauVar1);\n    if (pauStackX8 != pauVar1) {\n        auVar7 = vmovdqu_avx(*pauVar1);\n        auVar5 = vpcmpeqb_avx2(auVar7, auVar5);\n        vzeroupper_avx();\n        uVar3 = 0x20 - (uVar3 & 0x1f);\n        popcnt((SUB321(auVar5 >> 7, 0) & 1 | (SUB321(auVar5 >> 0xf, 0) & 1) << 1 | (SUB321(auVar5 >> 0x17, 0) & 1) << 2\n                | (SUB321(auVar5 >> 0x1f, 0) & 1) << 3 | (SUB321(auVar5 >> 0x27, 0) & 1) << 4 |\n                (SUB321(auVar5 >> 0x2f, 0) & 1) << 5 | (SUB321(auVar5 >> 0x37, 0) & 1) << 6 |\n                (SUB321(auVar5 >> 0x3f, 0) & 1) << 7 | (SUB321(auVar5 >> 0x47, 0) & 1) << 8 |\n                (SUB321(auVar5 >> 0x4f, 0) & 1) << 9 | (SUB321(auVar5 >> 0x57, 0) & 1) << 10 |\n                (SUB321(auVar5 >> 0x5f, 0) & 1) << 0xb | (SUB321(auVar5 >> 0x67, 0) & 1) << 0xc |\n                (SUB321(auVar5 >> 0x6f, 0) & 1) << 0xd | (SUB321(auVar5 >> 0x77, 0) & 1) << 0xe |\n                SUB321(auVar5 >> 0x7f, 0) << 0xf | (SUB321(auVar5 >> 0x87, 0) & 1) << 0x10 |\n                (SUB321(auVar5 >> 0x8f, 0) & 1) << 0x11 | (SUB321(auVar5 >> 0x97, 0) & 1) << 0x12 |\n                (SUB321(auVar5 >> 0x9f, 0) & 1) << 0x13 | (SUB321(auVar5 >> 0xa7, 0) & 1) << 0x14 |\n                (SUB321(auVar5 >> 0xaf, 0) & 1) << 0x15 | (SUB321(auVar5 >> 0xb7, 0) & 1) << 0x16 |\n                SUB321(auVar5 >> 0xbf, 0) << 0x17 | (SUB321(auVar5 >> 199, 0) & 1) << 0x18 |\n                (SUB321(auVar5 >> 0xcf, 0) & 1) << 0x19 | (SUB321(auVar5 >> 0xd7, 0) & 1) << 0x1a |\n                (SUB321(auVar5 >> 0xdf, 0) & 1) << 0x1b | (SUB321(auVar5 >> 0xe7, 0) & 1) << 0x1c |\n                (SUB321(auVar5 >> 0xef, 0) & 1) << 0x1d | (SUB321(auVar5 >> 0xf7, 0) & 1) << 0x1e |\n               SUB321(auVar5 >> 0xff, 0) << 0x1f) & (0xffffffff >> (uVar3 & 0x3f)) << (uVar3 & 0x3f));\n        return;\n    }\n    vzeroupper_avx();\n    return;\n}\n",
        "token_count": 5194
    },
    "00402a00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00402a00(uint64_t arg1, ulong arg2)\n\n{\n    uchar auVar1 [16];\n    uchar auVar2 [16];\n    uchar *puVar3;\n    uchar *puVar4;\n    uchar (*in_RAX) [32];\n    uint8_t uVar5;\n    uchar (*unaff_RBX) [32];\n    uchar (*pauVar6) [32];\n    uint64_t uVar7;\n    uint64_t uVar8;\n    bool bVar9;\n    uchar auVar10 [16];\n    uchar auVar11 [32];\n    uchar auVar12 [32];\n    uchar auVar13 [32];\n    uchar auVar14 [32];\n    \n    if (in_RAX == unaff_RBX) {\n        return 1;\n    }\n    if (7 < arg1) {\n        pauVar6 = in_RAX;\n        if (0x3f < arg1) {\n            if (*0x8020e3 == '\\x01') {\n                while (0x3f < arg1) {\n                    auVar11 = vmovdqu_avx(*pauVar6);\n                    auVar12 = vmovdqu_avx(*unaff_RBX);\n                    auVar13 = vmovdqu_avx(pauVar6[1]);\n                    auVar14 = vmovdqu_avx(unaff_RBX[1]);\n                    auVar11 = vpcmpeqb_avx2(auVar11, auVar12);\n                    auVar12 = vpcmpeqb_avx2(auVar14, auVar13);\n                    auVar11 = vpand_avx2(auVar12, auVar11);\n                    pauVar6 = pauVar6[2];\n                    unaff_RBX = unaff_RBX[2];\n                    arg1 = arg1 - 0x40;\n                    if ((SUB321(auVar11 >> 7, 0) & 1 | (SUB321(auVar11 >> 0xf, 0) & 1) << 1 |\n                         (SUB321(auVar11 >> 0x17, 0) & 1) << 2 | (SUB321(auVar11 >> 0x1f, 0) & 1) << 3 |\n                         (SUB321(auVar11 >> 0x27, 0) & 1) << 4 | (SUB321(auVar11 >> 0x2f, 0) & 1) << 5 |\n                         (SUB321(auVar11 >> 0x37, 0) & 1) << 6 | (SUB321(auVar11 >> 0x3f, 0) & 1) << 7 |\n                         (SUB321(auVar11 >> 0x47, 0) & 1) << 8 | (SUB321(auVar11 >> 0x4f, 0) & 1) << 9 |\n                         (SUB321(auVar11 >> 0x57, 0) & 1) << 10 | (SUB321(auVar11 >> 0x5f, 0) & 1) << 0xb |\n                         (SUB321(auVar11 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar11 >> 0x6f, 0) & 1) << 0xd |\n                         (SUB321(auVar11 >> 0x77, 0) & 1) << 0xe | SUB321(auVar11 >> 0x7f, 0) << 0xf |\n                         (SUB321(auVar11 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar11 >> 0x8f, 0) & 1) << 0x11 |\n                         (SUB321(auVar11 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar11 >> 0x9f, 0) & 1) << 0x13 |\n                         (SUB321(auVar11 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar11 >> 0xaf, 0) & 1) << 0x15 |\n                         (SUB321(auVar11 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar11 >> 0xbf, 0) << 0x17 |\n                         (SUB321(auVar11 >> 199, 0) & 1) << 0x18 | (SUB321(auVar11 >> 0xcf, 0) & 1) << 0x19 |\n                         (SUB321(auVar11 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar11 >> 0xdf, 0) & 1) << 0x1b |\n                         (SUB321(auVar11 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar11 >> 0xef, 0) & 1) << 0x1d |\n                         (SUB321(auVar11 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar11 >> 0xff, 0) << 0x1f) != 0xffffffff) {\n                        vzeroupper_avx();\n                        return 0;\n                    }\n                }\n                vzeroupper_avx();\n            }\n            else {\n                while (0x3f < arg1) {\n                    auVar10 = **unaff_RBX;\n                    auVar1 = *(*unaff_RBX + 0x10);\n                    auVar2 = *unaff_RBX[1];\n                    auVar10 = CONCAT115(-((*pauVar6)[0xf] == SUB161(auVar10 >> 0x78, 0)), \n                                        CONCAT114(-((*pauVar6)[0xe] == SUB161(auVar10 >> 0x70, 0)), \n                                                  CONCAT113(-((*pauVar6)[0xd] == SUB161(auVar10 >> 0x68, 0)), \n                                                            CONCAT112(-((*pauVar6)[0xc] == SUB161(auVar10 >> 0x60, 0)), \n                                                                      CONCAT111(-((*pauVar6)[0xb] ==\n                                                                                 SUB161(auVar10 >> 0x58, 0)), \n                                                                                CONCAT110(-((*pauVar6)[10] ==\n                                                                                           SUB161(auVar10 >> 0x50, 0)), \n                                                                                          CONCAT19(-((*pauVar6)[9] ==\n                                                                                                    SUB161(auVar10 >>\n                                                                                                           0x48, 0)), \n                                                                                                   CONCAT18(-((*pauVar6)\n                                                                                                              [8] == \n                                                            SUB161(auVar10 >> 0x40, 0)), \n                                                            CONCAT17(-((*pauVar6)[7] == SUB161(auVar10 >> 0x38, 0)), \n                                                                     CONCAT16(-((*pauVar6)[6] ==\n                                                                               SUB161(auVar10 >> 0x30, 0)), \n                                                                              CONCAT15(-((*pauVar6)[5] ==\n                                                                                        SUB161(auVar10 >> 0x28, 0)), \n                                                                                       CONCAT14(-((*pauVar6)[4] ==\n                                                                                                 SUB161(auVar10 >> 0x20\n                                                                                                        , 0)), \n                                                                                                CONCAT13(-((*pauVar6)[3]\n                                                                                                          == SUB161(\n                                                            auVar10 >> 0x18, 0)), \n                                                            CONCAT12(-((*pauVar6)[2] == SUB161(auVar10 >> 0x10, 0)), \n                                                                     CONCAT11(-((*pauVar6)[1] == SUB161(auVar10 >> 8, 0)\n                                                                               ), -((*pauVar6)[0] == SUB161(auVar10, 0))\n                                                                             ))))))))))))))) &\n                              CONCAT115(-((*pauVar6)[0x1f] == SUB161(auVar1 >> 0x78, 0)), \n                                        CONCAT114(-((*pauVar6)[0x1e] == SUB161(auVar1 >> 0x70, 0)), \n                                                  CONCAT113(-((*pauVar6)[0x1d] == SUB161(auVar1 >> 0x68, 0)), \n                                                            CONCAT112(-((*pauVar6)[0x1c] == SUB161(auVar1 >> 0x60, 0)), \n                                                                      CONCAT111(-((*pauVar6)[0x1b] ==\n                                                                                 SUB161(auVar1 >> 0x58, 0)), \n                                                                                CONCAT110(-((*pauVar6)[0x1a] ==\n                                                                                           SUB161(auVar1 >> 0x50, 0)), \n                                                                                          CONCAT19(-((*pauVar6)[0x19] ==\n                                                                                                    SUB161(auVar1 >> \n                                                            0x48, 0)), \n                                                            CONCAT18(-((*pauVar6)[0x18] == SUB161(auVar1 >> 0x40, 0)), \n                                                                     CONCAT17(-((*pauVar6)[0x17] ==\n                                                                               SUB161(auVar1 >> 0x38, 0)), \n                                                                              CONCAT16(-((*pauVar6)[0x16] ==\n                                                                                        SUB161(auVar1 >> 0x30, 0)), \n                                                                                       CONCAT15(-((*pauVar6)[0x15] ==\n                                                                                                 SUB161(auVar1 >> 0x28, \n                                                                                                        0)), \n                                                                                                CONCAT14(-((*pauVar6)\n                                                                                                           [0x14] ==\n                                                                                                          SUB161(auVar1 \n                                                            >> 0x20, 0)), \n                                                            CONCAT13(-((*pauVar6)[0x13] == SUB161(auVar1 >> 0x18, 0)), \n                                                                     CONCAT12(-((*pauVar6)[0x12] ==\n                                                                               SUB161(auVar1 >> 0x10, 0)), \n                                                                              CONCAT11(-((*pauVar6)[0x11] ==\n                                                                                        SUB161(auVar1 >> 8, 0)), \n                                                                                       -((*pauVar6)[0x10] ==\n                                                                                        SUB161(auVar1, 0))))))))))))))))\n                                       ) &\n                              CONCAT115(-(pauVar6[1][0xf] == SUB161(auVar2 >> 0x78, 0)), \n                                        CONCAT114(-(pauVar6[1][0xe] == SUB161(auVar2 >> 0x70, 0)), \n                                                  CONCAT113(-(pauVar6[1][0xd] == SUB161(auVar2 >> 0x68, 0)), \n                                                            CONCAT112(-(pauVar6[1][0xc] == SUB161(auVar2 >> 0x60, 0)), \n                                                                      CONCAT111(-(pauVar6[1][0xb] ==\n                                                                                 SUB161(auVar2 >> 0x58, 0)), \n                                                                                CONCAT110(-(pauVar6[1][10] ==\n                                                                                           SUB161(auVar2 >> 0x50, 0)), \n                                                                                          CONCAT19(-(pauVar6[1][9] ==\n                                                                                                    SUB161(auVar2 >> \n                                                            0x48, 0)), \n                                                            CONCAT18(-(pauVar6[1][8] == SUB161(auVar2 >> 0x40, 0)), \n                                                                     CONCAT17(-(pauVar6[1][7] ==\n                                                                               SUB161(auVar2 >> 0x38, 0)), \n                                                                              CONCAT16(-(pauVar6[1][6] ==\n                                                                                        SUB161(auVar2 >> 0x30, 0)), \n                                                                                       CONCAT15(-(pauVar6[1][5] ==\n                                                                                                 SUB161(auVar2 >> 0x28, \n                                                                                                        0)), \n                                                                                                CONCAT14(-(pauVar6[1][4]\n                                                                                                          == SUB161(\n                                                            auVar2 >> 0x20, 0)), \n                                                            CONCAT13(-(pauVar6[1][3] == SUB161(auVar2 >> 0x18, 0)), \n                                                                     CONCAT12(-(pauVar6[1][2] ==\n                                                                               SUB161(auVar2 >> 0x10, 0)), \n                                                                              CONCAT11(-(pauVar6[1][1] ==\n                                                                                        SUB161(auVar2 >> 8, 0)), \n                                                                                       -(pauVar6[1][0] ==\n                                                                                        SUB161(auVar2, 0))))))))))))))))\n                                       ) &\n                              CONCAT115(-(pauVar6[1][0x1f] == unaff_RBX[1][0x1f]), \n                                        CONCAT114(-(pauVar6[1][0x1e] == unaff_RBX[1][0x1e]), \n                                                  CONCAT113(-(pauVar6[1][0x1d] == unaff_RBX[1][0x1d]), \n                                                            CONCAT112(-(pauVar6[1][0x1c] == unaff_RBX[1][0x1c]), \n                                                                      CONCAT111(-(pauVar6[1][0x1b] == unaff_RBX[1][0x1b]\n                                                                                 ), CONCAT110(-(pauVar6[1][0x1a] ==\n                                                                                               unaff_RBX[1][0x1a]), \n                                                                                              CONCAT19(-(pauVar6[1]\n                                                                                                         [0x19] ==\n                                                                                                        unaff_RBX[1]\n                                                                                                        [0x19]), \n                                                                                                       CONCAT18(-(\n                                                            pauVar6[1][0x18] == unaff_RBX[1][0x18]), \n                                                            CONCAT17(-(pauVar6[1][0x17] == unaff_RBX[1][0x17]), \n                                                                     CONCAT16(-(pauVar6[1][0x16] == unaff_RBX[1][0x16])\n                                                                              , CONCAT15(-(pauVar6[1][0x15] ==\n                                                                                          unaff_RBX[1][0x15]), \n                                                                                         CONCAT14(-(pauVar6[1][0x14] ==\n                                                                                                   unaff_RBX[1][0x14]), \n                                                                                                  CONCAT13(-(pauVar6[1]\n                                                                                                             [0x13] ==\n                                                                                                            unaff_RBX[1]\n                                                                                                            [0x13]), \n                                                                                                           CONCAT12(-(\n                                                            pauVar6[1][0x12] == unaff_RBX[1][0x12]), \n                                                            CONCAT11(-(pauVar6[1][0x11] == unaff_RBX[1][0x11]), \n                                                                     -(pauVar6[1][0x10] == unaff_RBX[1][0x10])))))))))))\n                                                            )))));\n                    pauVar6 = pauVar6[2];\n                    unaff_RBX = unaff_RBX[2];\n                    arg1 = arg1 - 0x40;\n                    if ((SUB161(auVar10 >> 7, 0) & 1 | (SUB161(auVar10 >> 0xf, 0) & 1) << 1 |\n                         (SUB161(auVar10 >> 0x17, 0) & 1) << 2 | (SUB161(auVar10 >> 0x1f, 0) & 1) << 3 |\n                         (SUB161(auVar10 >> 0x27, 0) & 1) << 4 | (SUB161(auVar10 >> 0x2f, 0) & 1) << 5 |\n                         (SUB161(auVar10 >> 0x37, 0) & 1) << 6 | (SUB161(auVar10 >> 0x3f, 0) & 1) << 7 |\n                         (SUB161(auVar10 >> 0x47, 0) & 1) << 8 | (SUB161(auVar10 >> 0x4f, 0) & 1) << 9 |\n                         (SUB161(auVar10 >> 0x57, 0) & 1) << 10 | (SUB161(auVar10 >> 0x5f, 0) & 1) << 0xb |\n                         (SUB161(auVar10 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar10 >> 0x6f, 0) & 1) << 0xd |\n                         (SUB161(auVar10 >> 0x77, 0) & 1) << 0xe | SUB161(auVar10 >> 0x7f, 0) << 0xf) != 0xffff) {\n                        return 0;\n                    }\n                }\n            }\n        }\n        do {\n            if (arg1 < 9) {\n                return in_RAX & 0xffffffffffffff00 | *(pauVar6[-1] + arg1 + 0x18) == *(unaff_RBX[-1] + arg1 + 0x18);\n            }\n            puVar3 = *pauVar6;\n            puVar4 = *unaff_RBX;\n            pauVar6 = *pauVar6 + 8;\n            unaff_RBX = *unaff_RBX + 8;\n            arg1 = arg1 - 8;\n        } while (*puVar3 == *puVar4);\n        return 0;\n    }\n    bVar9 = arg1 == 0;\n    if (!bVar9) {\n        uVar5 = arg1 * -8;\n        if (in_RAX < 0xf9) {\n            uVar7 = **in_RAX;\n        }\n        else {\n            uVar7 = *(in_RAX[-1] + arg1 + 0x18) >> (uVar5 & 0x3f);\n        }\n        if (unaff_RBX < 0xf9) {\n            uVar8 = **unaff_RBX;\n        }\n        else {\n            uVar8 = *(unaff_RBX[-1] + arg1 + 0x18) >> (uVar5 & 0x3f);\n        }\n        bVar9 = (arg1 * -8 & 0x3f) != 0;\n        bVar9 = !bVar9 && uVar8 - uVar7 == 0 || bVar9 && uVar8 - uVar7 << (uVar5 & 0x3f) == 0;\n    }\n    return in_RAX & 0xffffffffffffff00 | bVar9;\n}\n",
        "token_count": 4147
    },
    "00402ea0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00402ea0(ulong noname_0, ulong arg2)\n\n{\n    uchar (*pauVar1) [32];\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint16_t uVar4;\n    uint64_t in_RAX;\n    uint32_t uVar5;\n    bool bVar6;\n    uchar auVar7 [16];\n    uint8_t uVar9;\n    uchar auVar8 [32];\n    uchar auVar10 [32];\n    uchar (*pauStackX8) [32];\n    uint64_t uStackX16;\n    uint8_t uStackX24;\n    \n    if (uStackX16 < 0x10) {\n        if (uStackX16 != 0) {\n            if ((*pauStackX8 + 0x10 & 0xff0) == 0) {\n                puVar2 = pauStackX8[-1] + uStackX16 + 0x10;\n                auVar7 = CONCAT115(-(puVar2[0xf] == uStackX24), \n                                   CONCAT114(-(puVar2[0xe] == uStackX24), \n                                             CONCAT113(-(puVar2[0xd] == uStackX24), \n                                                       CONCAT112(-(puVar2[0xc] == uStackX24), \n                                                                 CONCAT111(-(puVar2[0xb] == uStackX24), \n                                                                           CONCAT110(-(puVar2[10] == uStackX24), \n                                                                                     CONCAT19(-(puVar2[9] == uStackX24)\n                                                                                              , CONCAT18(-(puVar2[8] ==\n                                                                                                          uStackX24), \n                                                                                                         CONCAT17(-(\n                                                            puVar2[7] == uStackX24), \n                                                            CONCAT16(-(puVar2[6] == uStackX24), \n                                                                     CONCAT15(-(puVar2[5] == uStackX24), \n                                                                              CONCAT14(-(puVar2[4] == uStackX24), \n                                                                                       CONCAT13(-(puVar2[3] == uStackX24\n                                                                                                 ), CONCAT12(-(puVar2[2]\n                                                                                                              == \n                                                            uStackX24), \n                                                            CONCAT11(-(puVar2[1] == uStackX24), -(*puVar2 == uStackX24))\n                                                            ))))))))))))));\n                uVar5 = ((SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 |\n                          (SUB161(auVar7 >> 0x17, 0) & 1) << 2 | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 |\n                          (SUB161(auVar7 >> 0x27, 0) & 1) << 4 | (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 |\n                          (SUB161(auVar7 >> 0x37, 0) & 1) << 6 | (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 |\n                          (SUB161(auVar7 >> 0x47, 0) & 1) << 8 | (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 |\n                          (SUB161(auVar7 >> 0x57, 0) & 1) << 10 | (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb |\n                          (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd |\n                          (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (-(puVar2[0xf] == uStackX24) >> 7) << 0xf) <<\n                        (uStackX16 & 0x1f)) >> 0x10;\n                iVar3 = 0;\n                if (uVar5 != 0) {\n                    for (; (uVar5 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n                    }\n                }\n                if (uVar5 != 0) {\n                    return;\n                }\n            }\n            else {\n                uVar9 = -((*pauStackX8)[0xf] == uStackX24);\n                auVar7 = CONCAT115(uVar9, CONCAT114(-((*pauStackX8)[0xe] == uStackX24), \n                                                    CONCAT113(-((*pauStackX8)[0xd] == uStackX24), \n                                                              CONCAT112(-((*pauStackX8)[0xc] == uStackX24), \n                                                                        CONCAT111(-((*pauStackX8)[0xb] == uStackX24), \n                                                                                  CONCAT110(-((*pauStackX8)[10] ==\n                                                                                             uStackX24), \n                                                                                            CONCAT19(-((*pauStackX8)[9]\n                                                                                                      == uStackX24), \n                                                                                                     CONCAT18(-((*\n                                                            pauStackX8)[8] == uStackX24), \n                                                            CONCAT17(-((*pauStackX8)[7] == uStackX24), \n                                                                     CONCAT16(-((*pauStackX8)[6] == uStackX24), \n                                                                              CONCAT15(-((*pauStackX8)[5] == uStackX24)\n                                                                                       , CONCAT14(-((*pauStackX8)[4] ==\n                                                                                                   uStackX24), \n                                                                                                  CONCAT13(-((*\n                                                            pauStackX8)[3] == uStackX24), \n                                                            CONCAT12(-((*pauStackX8)[2] == uStackX24), \n                                                                     CONCAT11(-((*pauStackX8)[1] == uStackX24), \n                                                                              -((*pauStackX8)[0] == uStackX24)))))))))))\n                                                            )))));\n                uVar4 = SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar7 >> 0x17, 0) & 1) << 2 | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar7 >> 0x27, 0) & 1) << 4 | (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar7 >> 0x37, 0) & 1) << 6 | (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar7 >> 0x47, 0) & 1) << 8 | (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar7 >> 0x57, 0) & 1) << 10 | (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (uVar9 >> 7) << 0xf;\n                uVar5 = 0;\n                if (uVar4 != 0) {\n                    for (; (uVar4 >> uVar5 & 1) == 0; uVar5 = uVar5 + 1) {\n                    }\n                }\n                if ((uVar4 != 0) && (uVar5 < uStackX16)) {\n                    return;\n                }\n            }\n        }\n    }\n    else {\n        if ((0x20 < uStackX16) && (bVar6 = *0x8020e3 == '\\x01',  bVar6)) {\n            pauVar1 = pauStackX8[-1] + uStackX16;\n            auVar8 = vpbroadcastb_avx2(ZEXT816(in_RAX & 0xffffffffffffff00 | uStackX24));\n            do {\n                auVar10 = vmovdqu_avx(*pauStackX8);\n                auVar10 = vpcmpeqb_avx2(auVar10, auVar8);\n                vptest_avx(auVar10, auVar10);\n                if (!bVar6) goto code_r0x00402e83;\n                pauStackX8 = pauStackX8[1];\n                bVar6 = pauStackX8 == pauVar1;\n            } while (pauStackX8 < pauVar1);\n            auVar10 = vmovdqu_avx(*pauVar1);\n            auVar10 = vpcmpeqb_avx2(auVar10, auVar8);\n            vptest_avx(auVar10, auVar10);\n            if (bVar6) {\n                vzeroupper_avx();\n                return;\n            }\ncode_r0x00402e83:\n            uVar5 = SUB321(auVar10 >> 7, 0) & 1 | (SUB321(auVar10 >> 0xf, 0) & 1) << 1 |\n                    (SUB321(auVar10 >> 0x17, 0) & 1) << 2 | (SUB321(auVar10 >> 0x1f, 0) & 1) << 3 |\n                    (SUB321(auVar10 >> 0x27, 0) & 1) << 4 | (SUB321(auVar10 >> 0x2f, 0) & 1) << 5 |\n                    (SUB321(auVar10 >> 0x37, 0) & 1) << 6 | (SUB321(auVar10 >> 0x3f, 0) & 1) << 7 |\n                    (SUB321(auVar10 >> 0x47, 0) & 1) << 8 | (SUB321(auVar10 >> 0x4f, 0) & 1) << 9 |\n                    (SUB321(auVar10 >> 0x57, 0) & 1) << 10 | (SUB321(auVar10 >> 0x5f, 0) & 1) << 0xb |\n                    (SUB321(auVar10 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar10 >> 0x6f, 0) & 1) << 0xd |\n                    (SUB321(auVar10 >> 0x77, 0) & 1) << 0xe | SUB321(auVar10 >> 0x7f, 0) << 0xf |\n                    (SUB321(auVar10 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar10 >> 0x8f, 0) & 1) << 0x11 |\n                    (SUB321(auVar10 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar10 >> 0x9f, 0) & 1) << 0x13 |\n                    (SUB321(auVar10 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar10 >> 0xaf, 0) & 1) << 0x15 |\n                    (SUB321(auVar10 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar10 >> 0xbf, 0) << 0x17 |\n                    (SUB321(auVar10 >> 199, 0) & 1) << 0x18 | (SUB321(auVar10 >> 0xcf, 0) & 1) << 0x19 |\n                    (SUB321(auVar10 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar10 >> 0xdf, 0) & 1) << 0x1b |\n                    (SUB321(auVar10 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar10 >> 0xef, 0) & 1) << 0x1d |\n                    (SUB321(auVar10 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar10 >> 0xff, 0) << 0x1f;\n            iVar3 = 0;\n            if (uVar5 != 0) {\n                for (; (uVar5 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n                }\n            }\n            vzeroupper_avx();\n            return;\n        }\n        pauVar1 = pauStackX8[-1] + uStackX16 + 0x10;\n        for (; pauStackX8 < pauVar1; pauStackX8 = *pauStackX8 + 0x10) {\n            uVar9 = -((*pauStackX8)[0xf] == uStackX24);\n            auVar7 = CONCAT115(uVar9, CONCAT114(-((*pauStackX8)[0xe] == uStackX24), \n                                                CONCAT113(-((*pauStackX8)[0xd] == uStackX24), \n                                                          CONCAT112(-((*pauStackX8)[0xc] == uStackX24), \n                                                                    CONCAT111(-((*pauStackX8)[0xb] == uStackX24), \n                                                                              CONCAT110(-((*pauStackX8)[10] == uStackX24\n                                                                                         ), CONCAT19(-((*pauStackX8)[9]\n                                                                                                      == uStackX24), \n                                                                                                     CONCAT18(-((*\n                                                            pauStackX8)[8] == uStackX24), \n                                                            CONCAT17(-((*pauStackX8)[7] == uStackX24), \n                                                                     CONCAT16(-((*pauStackX8)[6] == uStackX24), \n                                                                              CONCAT15(-((*pauStackX8)[5] == uStackX24)\n                                                                                       , CONCAT14(-((*pauStackX8)[4] ==\n                                                                                                   uStackX24), \n                                                                                                  CONCAT13(-((*\n                                                            pauStackX8)[3] == uStackX24), \n                                                            CONCAT12(-((*pauStackX8)[2] == uStackX24), \n                                                                     CONCAT11(-((*pauStackX8)[1] == uStackX24), \n                                                                              -((*pauStackX8)[0] == uStackX24)))))))))))\n                                                            )))));\n            uVar4 = SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 |\n                    (SUB161(auVar7 >> 0x17, 0) & 1) << 2 | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 |\n                    (SUB161(auVar7 >> 0x27, 0) & 1) << 4 | (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 |\n                    (SUB161(auVar7 >> 0x37, 0) & 1) << 6 | (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 |\n                    (SUB161(auVar7 >> 0x47, 0) & 1) << 8 | (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 |\n                    (SUB161(auVar7 >> 0x57, 0) & 1) << 10 | (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb |\n                    (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd |\n                    (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (uVar9 >> 7) << 0xf;\n            iVar3 = 0;\n            if (uVar4 != 0) {\n                for (; (uVar4 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n                }\n            }\n            if (uVar4 != 0) {\n                return;\n            }\n        }\n        uVar9 = -((*pauVar1)[0xf] == uStackX24);\n        auVar7 = CONCAT115(uVar9, CONCAT114(-((*pauVar1)[0xe] == uStackX24), \n                                            CONCAT113(-((*pauVar1)[0xd] == uStackX24), \n                                                      CONCAT112(-((*pauVar1)[0xc] == uStackX24), \n                                                                CONCAT111(-((*pauVar1)[0xb] == uStackX24), \n                                                                          CONCAT110(-((*pauVar1)[10] == uStackX24), \n                                                                                    CONCAT19(-((*pauVar1)[9] ==\n                                                                                              uStackX24), \n                                                                                             CONCAT18(-((*pauVar1)[8] ==\n                                                                                                       uStackX24), \n                                                                                                      CONCAT17(-((*\n                                                            pauVar1)[7] == uStackX24), \n                                                            CONCAT16(-((*pauVar1)[6] == uStackX24), \n                                                                     CONCAT15(-((*pauVar1)[5] == uStackX24), \n                                                                              CONCAT14(-((*pauVar1)[4] == uStackX24), \n                                                                                       CONCAT13(-((*pauVar1)[3] ==\n                                                                                                 uStackX24), \n                                                                                                CONCAT12(-((*pauVar1)[2]\n                                                                                                          == uStackX24)\n                                                                                                         , CONCAT11(-((*\n                                                            pauVar1)[1] == uStackX24), -((*pauVar1)[0] == uStackX24)))))\n                                                            )))))))))));\n        uVar4 = SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 | (SUB161(auVar7 >> 0x17, 0) & 1) << 2\n                | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 | (SUB161(auVar7 >> 0x27, 0) & 1) << 4 |\n                (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 | (SUB161(auVar7 >> 0x37, 0) & 1) << 6 |\n                (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 | (SUB161(auVar7 >> 0x47, 0) & 1) << 8 |\n                (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 | (SUB161(auVar7 >> 0x57, 0) & 1) << 10 |\n                (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb | (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc |\n                (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd | (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (uVar9 >> 7) << 0xf;\n        iVar3 = 0;\n        if (uVar4 != 0) {\n            for (; (uVar4 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n            }\n        }\n        if (uVar4 != 0) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 4620
    },
    "00403440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00403440(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (((*0x8020e0 != '\\0') && (*0x8020ed != '\\0')) && (*0x8020ee != '\\0')) {\n        *0x8019b0 = 1;\n        fcn.0042f560(0x80);\n        return;\n    }\n    fcn.0042f560(0x20);\n    *0x801c80 = *0x801c80 | 1;\n    *0x801c88 = *0x801c88 | 1;\n    *0x801c90 = *0x801c90 | 1;\n    *0x801c98 = *0x801c98 | 1;\n    return;\n}\n",
        "token_count": 224
    },
    "00403560": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00403560(void)\n\n{\n    ulong *in_RAX;\n    ulong unaff_RBX;\n    \n    if (*0x801c20 != '\\0') {\n        fcn.00403500();\n    }\n    *in_RAX = unaff_RBX;\n    return;\n}\n",
        "token_count": 64
    },
    "00403e60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00403e60(void)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    ulong *in_RAX;\n    ulong *puVar3;\n    int64_t unaff_R14;\n    \n    cVar2 = fcn.00403d80();\n    if (cVar2 == '\\0') {\n        return;\n    }\n    cVar2 = fcn.00403d80();\n    if (cVar2 != '\\0') {\n        return;\n    }\n    piVar1 = *(unaff_R14 + 0x30);\n    if ((*piVar1 != unaff_R14) && (piVar1[10] != unaff_R14)) {\n        puVar3 = *0x801b00;\n        if (*(piVar1 + 0x18) != 0) {\n            return;\n        }\n        while( true ) {\n            if (puVar3 == NULL) {\n                fcn.0045ba20();\n                return;\n            }\n            if ((puVar3 <= in_RAX) && (in_RAX < puVar3 + 0x8000)) break;\n            puVar3 = *puVar3;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 266
    },
    "00404020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00404020(ulong arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    ulong unaff_RDI;\n    \n    if (*(in_RAX + 8) == 0) {\n        return;\n    }\n    cVar1 = fcn.00403d80();\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00403d80();\n        if (cVar1 != '\\0') {\n            return;\n        }\n        fcn.00404180(unaff_RDI);\n        return;\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "004040c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004040c0(ulong arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t unaff_RDI;\n    \n    if (*(in_RAX + 8) == 0) {\n        return;\n    }\n    cVar1 = fcn.00403d80();\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00403d80();\n        if (cVar1 == '\\0') {\n            for (iVar2 = 0; iVar2 < unaff_RDI; iVar2 = iVar2 + 1) {\n                fcn.00404180(0);\n            }\n            return;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 167
    },
    "00404840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00404840(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint64_t *puVar1;\n    ulong *noname_0;\n    uchar auVar2 [16];\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t arg2;\n    ulong uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            puVar1 = *(in_RAX + 0x30);\n            uVar3 = *puVar1;\n            if (uVar3 < 0x10000) {\n                if (*(puVar1 + 0x15) < 9) {\n                    *(*0x20 + -0x18) = puVar1;\n                    auVar2 = ZEXT816(unaff_RBX) * ZEXT816(uVar3);\n                    uVar3 = SUB168(auVar2, 0);\n                    if (((SUB168(auVar2 >> 0x40, 0) == 0) && (uVar4 = 0xffffffffffa0,  uVar3 < 0xffffffffffa1)) &&\n                       (-1 < unaff_RBX)) {\n                        *(*0x20 + 0x10) = unaff_RBX;\n                        if (uVar3 == 0) {\n                            *(*0x20 + -0x40) = 0x404966;\n                            arg2 = fcn.0040bba0(1);\n                            if (*0x801c20 == 0) {\n                                *(arg2 + 0x10) = arg2 + 0x10;\n                            }\n                            else {\n                                *(*0x20 + -0x40) = 0x404985;\n                                arg2 = fcn.0045dea0(arg2 + 0x10, uVar4, param_3, param_4);\n                            }\n                        }\n                        else if (*(*(*0x20 + -0x18) + 8) == 0) {\n                            uVar4 = 1;\n                            *(*0x20 + -0x40) = 0x4048d3;\n                            arg2 = fcn.0040bba0();\n                            if (*0x801c20 == 0) {\n                                *(arg2 + 0x10) = arg2 + 0x60;\n                            }\n                            else {\n                                *(*0x20 + -0x40) = 0x4048f4;\n                                arg2 = fcn.0045dec0(uVar4, arg2 + 0x60, param_3, param_4);\n                            }\n                        }\n                        else {\n                            *(*0x20 + -0x20) = uVar3;\n                            *(*0x20 + -0x40) = 0x40490a;\n                            uVar4 = fcn.0040c560();\n                            *(*0x20 + -0x10) = uVar4;\n                            *(*0x20 + -0x40) = 0x404925;\n                            uVar4 = fcn.0040bba0(1);\n                            if (*0x801c20 == 0) {\n                                arg2 = *(*0x20 + -0x10);\n                                *(arg2 + 0x10) = uVar4;\n                            }\n                            else {\n                                arg2 = *(*0x20 + -0x10);\n                                *(*0x20 + -0x40) = 0x40494d;\n                                fcn.0045dda0(arg2 + 0x10, arg2, param_3, param_4);\n                            }\n                        }\n                        noname_0 = *(*0x20 + -0x18);\n                        uVar4 = *noname_0;\n                        *(arg2 + 0x18) = uVar4;\n                        if (*0x801c20 == 0) {\n                            *(arg2 + 0x20) = noname_0;\n                        }\n                        else {\n                            *(*0x20 + -0x40) = 0x4049ab;\n                            arg2 = fcn.0045dea0(noname_0, uVar4, param_3, param_4);\n                        }\n                        *(arg2 + 8) = *(*0x20 + 0x10);\n                        return;\n                    }\n                    *(*0x20 + -0x40) = 0x4049d1;\n                    fcn.004334e0();\n                }\n                *(*0x20 + -0x40) = 0x4049e5;\n                fcn.00433c80();\n            }\n            unaff_RBX = 0x26;\n            *(*0x20 + -0x40) = 0x4049f6;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + -8) = 0x404a06;\n        fcn.0045bb60();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1257
    },
    "00404a60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00404a60(uint64_t *param_1, uint64_t param_2, uint64_t param_3, int64_t param_4)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    uint64_t *in_RAX;\n    uint64_t *noname_0;\n    int64_t *piVar3;\n    int64_t iVar4;\n    char cVar5;\n    uint64_t *arg1;\n    uint64_t uVar6;\n    ulong uVar7;\n    int64_t noname_1;\n    ulong unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t iVar9;\n    int64_t *arg3;\n    int64_t iVar10;\n    int64_t iVar11;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar12;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            cVar5 = param_1;\n            if (in_RAX == NULL) {\n                if (cVar5 == '\\0') {\n                    return 0;\n                }\n                noname_0 = 0x4;\n                *(*0x20 + -0x88) = 0x404b65;\n                fcn.004366e0();\n                *(*0x20 + -0x88) = 0x404b76;\n                fcn.00433c80();\n                param_1 = noname_0;\ncode_r0x00404b79:\n                do {\n                    piVar3 = noname_0[7];\n                    if (piVar3 == NULL) {\n                        piVar3 = NULL;\n                        break;\n                    }\n                    arg1 = noname_0 + 7;\n                    uVar6 = piVar3[1];\n                    if (uVar6 == 0) {\n                        if (*0x801c20 == 0) {\n                            *(noname_0 + 7) =\n                                 CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                        }\n                        else {\n                            uVar7 = 0;\n                            *(*0x20 + -0x88) = 0x404bf7;\n                            fcn.0045df20(param_1, piVar3, 0, param_4);\n                            *(*0x20 + -0x88) = 0x404c05;\n                            noname_0 = fcn.0045df20(param_1, piVar3, uVar7, param_4);\n                        }\n                    }\n                    else if (*0x801c20 == 0) {\n                        *(uVar6 + 0x10) = 0;\n                        noname_0[7] = uVar6;\n                        piVar3[1] = 0;\n                    }\n                    else {\n                        iVar4 = uVar6 + 0x10;\n                        uVar7 = 0;\n                        *(*0x20 + -0x88) = 0x404bc9;\n                        fcn.0045dec0(arg1, 0, uVar6, iVar4);\n                        *(*0x20 + -0x88) = 0x404bd1;\n                        fcn.0045df20(arg1, uVar7, uVar6, iVar4);\n                        *(*0x20 + -0x88) = 0x404bda;\n                        noname_0 = fcn.0045dec0(arg1, uVar7, uVar6, iVar4);\n                    }\n                    if (*(piVar3 + 0x34) == '\\0') {\n                        param_3 = 0;\n                    }\n                    else {\n                        iVar4 = *piVar3;\n                        LOCK();\n                        piVar1 = iVar4 + 0x178;\n                        bVar12 = *piVar1 == 0;\n                        if (bVar12) {\n                            *piVar1 = 1;\n                        }\n                        param_3 = (iVar4 & 0xffffff00 | bVar12) ^ 1;\n                    }\n                    param_4 = 1;\n                    param_1 = noname_0;\n                } while (param_3 != '\\0');\n                if (piVar3 != NULL) {\n                    *(*0x20 + -0x18) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)))\n                    ;\n                    *(*0x20 + -0x18) = 0x4050c0;\n                    *(*0x20 + -0x10) = noname_0;\n                    *(*0x20 + -0x88) = 0x40500b;\n                    fcn.00405100(*(*0x20 + 0x10), piVar3, 0x4050c0);\n                    return 1;\n                }\n                if (*noname_0 <= noname_0[1] && noname_0[1] != *noname_0) {\n                    *(*0x20 + -0x88) = 0x404f98;\n                    fcn.00410240(*(*0x20 + 0x10));\n                    piVar3 = *(*0x20 + 8);\n                    iVar4 = piVar3[5];\n                    piVar3[5] = iVar4 + 1;\n                    if (piVar3[1] == iVar4 + 1) {\n                        piVar3[5] = 0;\n                    }\n                    *piVar3 = *piVar3 + 1;\n                    *(*0x20 + -0x88) = 0x404fc8;\n                    fcn.0040a680();\n                    return 1;\n                }\n                if (*(*0x20 + 0x18) == 0) {\n                    *(*0x20 + -0x88) = 0x404c85;\n                    fcn.0040a680();\n                    return 0;\n                }\n                *(*0x20 + -0x38) = unaff_R14;\n                *(*0x20 + -0x88) = 0x404c9b;\n                piVar3 = fcn.00436900(noname_0, *(*0x20 + 0x18));\n                piVar3[5] = 0;\n                iVar4 = *(*0x20 + -0x50);\n                if (iVar4 != 0) {\n                    piVar3[5] = -1;\n                }\n                if (*0x801c20 == 0) {\n                    noname_1 = *(*0x20 + 0x10);\n                    piVar3[3] = noname_1;\n                    piVar3[8] = 0;\n                    iVar9 = *(*0x20 + -0x38);\n                    *piVar3 = iVar9;\n                }\n                else {\n                    noname_1 = *(*0x20 + 0x10);\n                    *(*0x20 + -0x88) = 0x404ced;\n                    fcn.0045dec0(iVar4, noname_1, param_3, param_4);\n                    uVar7 = 0;\n                    *(*0x20 + -0x88) = 0x404cf9;\n                    fcn.0045df20(iVar4, noname_1, 0, param_4);\n                    iVar9 = *(*0x20 + -0x38);\n                    *(*0x20 + -0x88) = 0x404d06;\n                    piVar3 = fcn.0045df40(iVar4, noname_1, uVar7);\n                }\n                *(piVar3 + 0x34) = 0;\n                arg3 = piVar3 + 10;\n                if (*0x801c20 == 0) {\n                    param_4 = *(*0x20 + 8);\n                    piVar3[10] = param_4;\n                }\n                else {\n                    param_4 = *(*0x20 + 8);\n                    *(*0x20 + -0x88) = 0x404d3b;\n                    piVar3 = fcn.0045df40(iVar4, noname_1, arg3);\n                }\n                iVar10 = iVar9 + 0x148;\n                iVar11 = iVar9 + 0x88;\n                if (*0x801c20 == 0) {\n                    *(iVar9 + 0x148) = piVar3;\n                    *(iVar9 + 0x88) = 0;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x404d76;\n                    fcn.0045dda0(iVar4, noname_1, arg3, param_4);\n                    *(*0x20 + -0x88) = 0x404d85;\n                    piVar3 = fcn.0045df20(iVar4, noname_1, 0, param_4);\n                }\n                if (*0x801c20 == 0) {\n                    piVar3[1] = 0;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x404db4;\n                    piVar3 = fcn.0045df20(iVar4, noname_1, 0, param_4);\n                }\n                *(*0x20 + -0x48) = piVar3;\n                *(*0x20 + -0x20) = arg3;\n                *(*0x20 + -0x28) = iVar10;\n                *(*0x20 + -0x30) = iVar11;\n                iVar10 = *(param_4 + 0x50);\n                if (iVar10 == 0) {\n                    if (*0x801c20 == 0) {\n                        piVar3[2] = 0;\n                        *(param_4 + 0x48) = piVar3;\n                        *(param_4 + 0x50) = piVar3;\n                    }\n                    else {\n                        uVar7 = 0;\n                        *(*0x20 + -0x88) = 0x404e52;\n                        fcn.0045df20(iVar4, noname_1, 0, param_4);\n                        *(*0x20 + -0x88) = 0x404e5b;\n                        fcn.0045dda0(iVar4, noname_1, uVar7, param_4);\n                        *(*0x20 + -0x88) = 0x404e65;\n                        fcn.0045dda0(iVar4, noname_1, uVar7, param_4);\n                    }\n                }\n                else if (*0x801c20 == 0) {\n                    piVar3[2] = iVar10;\n                    *(iVar10 + 8) = piVar3;\n                    *(param_4 + 0x50) = piVar3;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x404e07;\n                    fcn.0045df40(iVar4, noname_1, arg3);\n                    *(*0x20 + -0x88) = 0x404e10;\n                    fcn.0045dda0(iVar4, noname_1, arg3, iVar10);\n                    *(*0x20 + -0x88) = 0x404e18;\n                    fcn.0045dda0(iVar4, noname_1, arg3, iVar10);\n                }\n                uVar2 = *(iVar9 + 0xb9);\n                *(iVar9 + 0xb9) = 1;\n                param_3 = uVar2;\n                param_1 = 0xf;\n                unaff_RDI = 0x16;\n                *(*0x20 + -0x88) = 0x404e9b;\n                fcn.004366e0();\n                iVar4 = *(*0x20 + -0x48);\n                param_2 = *(*0x20 + -0x38);\n                if (*(param_2 + 0x148) == iVar4) {\n                    if (*0x801c20 == 0) {\n                        *(param_2 + 0x148) = 0;\n                    }\n                    else {\n                        unaff_RDI = *(*0x20 + -0x28);\n                        *(*0x20 + -0x88) = 0x404ed4;\n                        iVar4 = fcn.0045dea0(0, param_2, param_3, param_4);\n                    }\n                    *(param_2 + 0xb8) = 0;\n                    uVar6 = *(iVar4 + 0x35);\n                    if (*0x801c20 == 0) {\n                        *(param_2 + 0x88) = 0;\n                    }\n                    else {\n                        unaff_RDI = *(*0x20 + -0x30);\n                        *(*0x20 + -0x88) = 0x404f05;\n                        iVar4 = fcn.0045dec0(uVar6, 0, param_3, param_4);\n                    }\n                    *(*0x20 + -0x51) = uVar6;\n                    param_2 = *(iVar4 + 0x28);\n                    if (0 < param_2) {\n                        param_2 = param_2 - *(*0x20 + -0x50);\n                        *(*0x20 + -0x88) = 0x404f27;\n                        fcn.0042b0a0();\n                        iVar4 = *(*0x20 + -0x48);\n                        uVar6 = *(*0x20 + -0x51);\n                    }\n                    if (*0x801c20 == 0) {\n                        *(iVar4 + 0x50) = 0;\n                    }\n                    else {\n                        unaff_RDI = *(*0x20 + -0x20);\n                        param_2 = 0;\n                        *(*0x20 + -0x88) = 0x404f50;\n                        fcn.0045dec0(uVar6, 0, param_3, param_4);\n                    }\n                    *(*0x20 + -0x88) = 0x404f55;\n                    fcn.00436c00();\n                    if (*(*0x20 + -0x51) != '\\0') {\n                        return 1;\n                    }\n                    param_1 = *(*0x20 + 8);\n                    if (*(param_1 + 0x1c) == 0) {\n                        *(*0x20 + -0x88) = 0x405039;\n                        fcn.00433c80();\n                    }\n                    *(*0x20 + -0x88) = 0x40504c;\n                    fcn.004334e0();\n                }\n                *(*0x20 + -0x88) = 0x40505d;\n                fcn.00433c80();\n            }\n            else {\n                if ((cVar5 == '\\0') && (*(in_RAX + 0x1c) == 0)) {\n                    uVar6 = in_RAX[1];\n                    if (uVar6 == 0) {\n                        param_2 = in_RAX[7] == 0;\n                    }\n                    else {\n                        param_2 = uVar6 & 0xffffffffffffff00 | *in_RAX == uVar6;\n                    }\n                    if (param_2 != '\\0') {\n                        return 0;\n                    }\n                }\n                *(*0x20 + 0x18) = cVar5;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                if (*0x801a60 == 0) {\n                    param_2 = 0;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x404ae7;\n                    fcn.0045dc20(param_1, param_2);\n                    in_XMM15_Da = 0;\n                    in_XMM15_Db = 0;\n                    in_XMM15_Dc = 0;\n                    in_XMM15_Dd = 0;\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    param_2 = *(*0x20 + -0x80);\n                    in_RAX = *(*0x20 + 8);\n                }\n                *(*0x20 + -0x50) = param_2;\n                param_1 = in_RAX + 0xb;\n                *(*0x20 + -0x40) = param_1;\n                *(*0x20 + -0x88) = 0x404b25;\n                fcn.0040a460();\n                noname_0 = *(*0x20 + 8);\n                if (*(noname_0 + 0x1c) == 0) goto code_r0x00404b79;\n            }\n            *(*0x20 + -0x88) = 0x405069;\n            fcn.0040a680();\n            unaff_RBX = 0x732a18;\n            *(*0x20 + -0x88) = 0x40507c;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        puVar8[0x18] = param_1;\n        *(puVar8 + 0x20) = unaff_RDI;\n        *(puVar8 + -8) = 0x405095;\n        fcn.0045bb60();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        param_1 = puVar8[0x18];\n        unaff_RDI = *(puVar8 + 0x20);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 4054
    },
    "00405100": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00405100(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    int64_t *unaff_RBX;\n    code **unaff_RDI;\n    ulong in_R9;\n    int64_t unaff_R14;\n    int64_t iStack40;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    piVar2 = unaff_RBX;\n    if (unaff_RBX[3] != 0) {\n        fcn.00405260(arg1);\n        if (*0x801c20 == 0) {\n            unaff_RBX[3] = 0;\n        }\n        else {\n            fcn.0045dee0(unaff_RBX, noname_1, arg3, in_R9);\n        }\n    }\n    iVar1 = *piVar2;\n    (**unaff_RDI)();\n    piVar2 = unaff_RBX;\n    if (*0x801c20 == 0) {\n        *(iVar1 + 0x88) = unaff_RBX;\n    }\n    else {\n        fcn.0045dea0(unaff_RBX, unaff_RDI, arg3, in_R9);\n    }\n    *(piVar2 + 0x35) = 1;\n    if (piVar2[5] != 0) {\n        fcn.0045dc20(piVar2, unaff_RDI);\n        unaff_RBX[5] = iStack40;\n    }\n    fcn.00436820();\n    return;\n}\n",
        "token_count": 383
    },
    "00405360": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00405360(ulong param_1, int64_t *param_2, int64_t *param_3, ulong param_4)\n\n{\n    int32_t *piVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    int64_t in_RAX;\n    int64_t **arg1;\n    int64_t iVar4;\n    int64_t *piVar5;\n    int64_t iVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar8;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX != 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x10) = in_RAX + 0x58;\n                *(*0x20 + -0x40) = 0x4053a5;\n                fcn.0040a460();\n                iVar4 = *(*0x20 + 8);\n                if (*(iVar4 + 0x1c) == 0) break;\n                *(*0x20 + -0x40) = 0x40575a;\n                fcn.0040a680();\n                *(*0x20 + -0x40) = 0x40576d;\n                fcn.004334e0();\n            }\n            *(*0x20 + -0x40) = 0x405785;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x405790;\n        fcn.0045bb60();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n    *(iVar4 + 0x1c) = 1;\n    *(*0x20 + -0x28) = 0;\ncode_r0x004054b4:\n    arg1 = *(iVar4 + 0x38);\n    if (arg1 != NULL) goto code_r0x004054c9;\n    arg1 = NULL;\n    goto code_r0x004053ec;\ncode_r0x004054c9:\n    iVar6 = iVar4 + 0x38;\n    piVar5 = arg1[1];\n    if (piVar5 == NULL) {\n        if (*0x801c20 == 0) {\n            *(iVar4 + 0x38) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        }\n        else {\n            *(*0x20 + -0x40) = 0x40553a;\n            fcn.0045df00(arg1, iVar6, param_3, param_4);\n            *(*0x20 + -0x40) = 0x405545;\n            iVar4 = fcn.0045df00(arg1, iVar6, param_3, param_4);\n        }\n    }\n    else if (*0x801c20 == 0) {\n        piVar5[2] = 0;\n        *(iVar4 + 0x38) = piVar5;\n        arg1[1] = NULL;\n    }\n    else {\n        param_3 = piVar5 + 2;\n        param_4 = 0;\n        *(*0x20 + -0x40) = 0x405507;\n        fcn.0045df40(arg1, iVar6, param_3);\n        *(*0x20 + -0x40) = 0x40550f;\n        fcn.0045df00(arg1, iVar6, param_3, param_4);\n        *(*0x20 + -0x40) = 0x405518;\n        iVar4 = fcn.0045df40(arg1, iVar6, param_3);\n    }\n    if (*(arg1 + 0x34) == '\\0') {\n        param_2 = NULL;\n    }\n    else {\n        piVar2 = *arg1;\n        LOCK();\n        piVar5 = piVar2 + 0x2f;\n        bVar8 = *piVar5 == 0;\n        if (bVar8) {\n            *piVar5 = 1;\n        }\n        param_2 = (piVar2 & 0xffffff00 | bVar8) ^ 1;\n    }\n    if (param_2 == '\\0') {\ncode_r0x004053ec:\n        if (arg1 != NULL) {\n            *(*0x20 + -0x18) = arg1;\n            if (arg1[3] != NULL) {\n                *(*0x20 + -0x40) = 0x40540e;\n                fcn.004104e0();\n                if (*0x801c20 == 0) {\n                    arg1 = *(*0x20 + -0x18);\n                    arg1[3] = NULL;\n                }\n                else {\n                    param_2 = NULL;\n                    *(*0x20 + -0x40) = 0x40543c;\n                    arg1 = fcn.0045dec0(*(*0x20 + -0x18) + 0x18, 0, param_3, param_4);\n                }\n                iVar4 = *(*0x20 + 8);\n            }\n            if (arg1[5] != NULL) {\n                *(*0x20 + -0x40) = 0x405455;\n                fcn.0045dc20(arg1, param_2);\n                in_XMM15_Da = 0;\n                in_XMM15_Db = 0;\n                in_XMM15_Dc = 0;\n                in_XMM15_Dd = 0;\n                arg1 = *(*0x20 + -0x18);\n                arg1[5] = *(*0x20 + -0x38);\n                iVar4 = *(*0x20 + 8);\n            }\n            param_2 = *arg1;\n            if (*0x801c20 == 0) {\n                param_2[0x11] = arg1;\n            }\n            else {\n                param_3 = param_2 + 0x11;\n                *(*0x20 + -0x40) = 0x4054ac;\n                iVar4 = fcn.0045dea0(arg1, param_2, param_3, param_4);\n            }\n            *(arg1 + 0x35) = 0;\n            param_2[0x14] = *(*0x20 + -0x28);\n            *(*0x20 + -0x28) = param_2;\n            goto code_r0x004054b4;\n        }\n        goto code_r0x00405645;\n    }\n    goto code_r0x004054b4;\ncode_r0x00405645:\n    piVar5 = *(iVar4 + 0x48);\n    if (piVar5 != NULL) goto code_r0x00405652;\n    piVar5 = NULL;\n    goto code_r0x004055a0;\ncode_r0x00405652:\n    iVar6 = iVar4 + 0x48;\n    iVar3 = piVar5[1];\n    if (iVar3 == 0) {\n        if (*0x801c20 == 0) {\n            *(iVar4 + 0x48) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        }\n        else {\n            *(*0x20 + -0x40) = 0x4056c7;\n            fcn.0045dee0(piVar5, iVar6, param_3, param_4);\n            *(*0x20 + -0x40) = 0x4056d0;\n            iVar4 = fcn.0045dee0(piVar5, iVar6, param_3, param_4);\n        }\n    }\n    else if (*0x801c20 == 0) {\n        *(iVar3 + 0x10) = 0;\n        *(iVar4 + 0x48) = iVar3;\n        piVar5[1] = 0;\n    }\n    else {\n        param_3 = iVar3 + 0x10;\n        param_4 = 0;\n        *(*0x20 + -0x40) = 0x405690;\n        fcn.0045df40(piVar5, iVar6, param_3);\n        *(*0x20 + -0x40) = 0x405698;\n        fcn.0045dee0(piVar5, iVar6, param_3, param_4);\n        *(*0x20 + -0x40) = 0x4056a5;\n        iVar4 = fcn.0045df40(piVar5, iVar6, param_3);\n    }\n    if (*(piVar5 + 0x34) == '\\0') {\n        param_2 = NULL;\n    }\n    else {\n        iVar6 = *piVar5;\n        LOCK();\n        piVar1 = iVar6 + 0x178;\n        bVar8 = *piVar1 == 0;\n        if (bVar8) {\n            *piVar1 = 1;\n        }\n        param_2 = (iVar6 & 0xffffff00 | bVar8) ^ 1;\n    }\n    if (param_2 == '\\0') {\ncode_r0x004055a0:\n        if (piVar5 == NULL) {\n            *(*0x20 + -0x40) = 0x405709;\n            fcn.0040a680();\n            while (iVar4 = *(*0x20 + -0x28),  iVar4 != 0) {\n                if (iVar4 != 0) {\n                    *(*0x20 + -0x28) = *(iVar4 + 0xa0);\n                }\n                *(iVar4 + 0xa0) = 0;\n                *(*0x20 + -0x40) = 0x405725;\n                fcn.00436820();\n            }\n            return;\n        }\n        if (*0x801c20 == 0) {\n            piVar5[3] = 0;\n        }\n        else {\n            param_2 = piVar5 + 3;\n            *(*0x20 + -0x40) = 0x4055cd;\n            iVar4 = fcn.0045dee0(piVar5, param_2, param_3, param_4);\n        }\n        if (piVar5[5] != 0) {\n            *(*0x20 + -0x20) = piVar5;\n            *(*0x20 + -0x40) = 0x4055e5;\n            fcn.0045dc20(piVar5, param_2);\n            in_XMM15_Da = 0;\n            in_XMM15_Db = 0;\n            in_XMM15_Dc = 0;\n            in_XMM15_Dd = 0;\n            piVar5 = *(*0x20 + -0x20);\n            piVar5[5] = *(*0x20 + -0x38);\n            iVar4 = *(*0x20 + 8);\n        }\n        param_2 = *piVar5;\n        if (*0x801c20 == 0) {\n            param_2[0x11] = piVar5;\n        }\n        else {\n            *(*0x20 + -0x40) = 0x40563c;\n            iVar4 = fcn.0045dea0(piVar5, param_2, param_3, param_4);\n        }\n        *(piVar5 + 0x35) = 0;\n        param_2[0x14] = *(*0x20 + -0x28);\n        *(*0x20 + -0x28) = param_2;\n    }\n    goto code_r0x00405645;\n}\n",
        "token_count": 2753
    },
    "004057e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004057e0(uint64_t param_1, int64_t *param_2, uint64_t param_3, int64_t param_4)\n\n{\n    int32_t *piVar1;\n    int64_t *in_RAX;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    uint8_t uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t *piVar7;\n    ulong uVar8;\n    int64_t unaff_RBX;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar10;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    int64_t *piStackX8;\n    int64_t iStackX16;\n    uint8_t uStackX24;\n    int64_t *piStack136;\n    int64_t *piStack88;\n    \n    while (uVar4 = param_1, \n          &stack0xfffffffffffffff8 < *(unaff_R14 + 0x10) || &stack0xfffffffffffffff8 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n        param_1 = param_1 & 0xff;\n        piStackX8 = in_RAX;\n        iStackX16 = unaff_RBX;\n        uStackX24 = uVar4;\n    }\n    if (in_RAX == NULL) {\n        if (uVar4 != 0) {\n            fcn.004366e0();\n            in_RAX = fcn.00433c80();\n            goto code_r0x004059a5;\n        }\n        return 0;\n    }\n    if (uVar4 == 0) {\n        if (in_RAX[1] == 0) {\n            uVar5 = in_RAX[9] & 0xffffffffffffff00U | in_RAX[9] == 0;\n        }\n        else {\n            uVar5 = param_2 & 0xffffffffffffff00 | *in_RAX == 0;\n        }\n    }\n    else {\n        uVar5 = 0;\n    }\n    if (uVar5 != '\\0') {\n        if (*(in_RAX + 0x1c) == 0) {\n            return 0;\n        }\n        if (in_RAX[1] == 0) {\n            uVar5 = in_RAX[9] & 0xffffffffffffff00U | in_RAX[9] == 0;\n        }\n        else {\n            uVar5 = *(in_RAX + 0x1c) & 0xffffff00 | *in_RAX == 0;\n        }\n        if (uVar5 != '\\0') {\n            if (unaff_RBX != 0) {\n                fcn.004104e0();\n            }\n            return 1;\n        }\n    }\n    if (*0x801a60 == 0) {\n        piStack136 = NULL;\n    }\n    else {\n        fcn.0045dc20(param_1, uVar5);\n        in_XMM15_Da = 0;\n        in_XMM15_Db = 0;\n        in_XMM15_Dc = 0;\n        in_XMM15_Dd = 0;\n        unaff_R14 = **(in_GS_OFFSET + 0x28);\n    }\n    piVar2 = in_RAX + 0xb;\n    param_2 = piStack136;\n    fcn.0040a460();\n    piStackX8 = in_RAX;\n    iStackX16 = unaff_RBX;\n    uStackX24 = uVar4;\n    piStack88 = piStack136;\n    if (*(in_RAX + 0x1c) != 0) {\n        if (*in_RAX != 0) goto code_r0x004059a5;\n        fcn.0040a680();\n        if (unaff_RBX != 0) {\n            fcn.004104e0();\n        }\n        return 1;\n    }\ncode_r0x00405d58:\n    param_2 = in_RAX[9];\n    if (param_2 != NULL) goto code_r0x00405d69;\n    param_2 = NULL;\n    goto code_r0x00405e30;\ncode_r0x00405d69:\n    piVar3 = in_RAX + 9;\n    iVar6 = param_2[1];\n    if (iVar6 == 0) {\n        if (*0x801c20 == 0) {\n            *(in_RAX + 9) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        }\n        else {\n            uVar8 = 0;\n            fcn.0045df20(piVar2, param_2, 0, param_4);\n            in_RAX = fcn.0045df20(piVar2, param_2, uVar8, param_4);\n        }\n    }\n    else if (*0x801c20 == 0) {\n        *(iVar6 + 0x10) = 0;\n        in_RAX[9] = iVar6;\n        param_2[1] = 0;\n    }\n    else {\n        iVar9 = iVar6 + 0x10;\n        uVar8 = 0;\n        fcn.0045dec0(piVar3, 0, iVar6, iVar9);\n        fcn.0045df20(piVar3, uVar8, iVar6, iVar9);\n        in_RAX = fcn.0045dec0(piVar3, uVar8, iVar6, iVar9);\n    }\n    if (*(param_2 + 0x34) == '\\0') {\n        param_3 = 0;\n    }\n    else {\n        iVar6 = *param_2;\n        LOCK();\n        piVar1 = iVar6 + 0x178;\n        bVar10 = *piVar1 == 0;\n        if (bVar10) {\n            *piVar1 = 1;\n        }\n        param_3 = (iVar6 & 0xffffff00 | bVar10) ^ 1;\n    }\n    param_4 = 1;\n    piVar2 = in_RAX;\n    if (param_3 == '\\0') {\ncode_r0x00405e30:\n        if (param_2 != NULL) {\n            fcn.00405f00(iStackX16);\n            return 1;\n        }\ncode_r0x004059a5:\n        if (*in_RAX != 0) {\n            if (iStackX16 != 0) {\n                fcn.00410240(in_RAX[6] * *(in_RAX + 3) + in_RAX[2]);\n                in_RAX = piStackX8;\n            }\n            fcn.004104e0(in_RAX[4]);\n            iVar6 = piStackX8[6];\n            piStackX8[6] = iVar6 + 1;\n            if (piStackX8[1] == iVar6 + 1) {\n                piStackX8[6] = 0;\n            }\n            *piStackX8 = *piStackX8 + -1;\n            fcn.0040a680();\n            return 1;\n        }\n        if (uStackX24 == 0) {\n            fcn.0040a680();\n            return 0;\n        }\n        piVar2 = fcn.00436900(uStackX24, param_2);\n        piVar2[5] = 0;\n        if (piStack88 != NULL) {\n            piVar2[5] = -1;\n        }\n        piVar3 = piStack88;\n        if (*0x801c20 == 0) {\n            piVar2[3] = iStackX16;\n            piVar2[8] = 0;\n        }\n        else {\n            fcn.0045dec0(piStack88, iStackX16, param_3, param_4);\n            piVar2 = fcn.0045dec0(piVar3, 0, param_3, param_4);\n        }\n        iVar6 = unaff_R14 + 0x148;\n        if (*0x801c20 == 0) {\n            *(unaff_R14 + 0x148) = piVar2;\n            *piVar2 = unaff_R14;\n        }\n        else {\n            fcn.0045dda0(piVar3, iVar6, param_3, param_4);\n            piVar2 = fcn.0045dee0(piVar3, iVar6, param_3, param_4);\n        }\n        *(piVar2 + 0x34) = 0;\n        param_4 = unaff_R14 + 0x88;\n        piVar7 = piStackX8;\n        if (*0x801c20 == 0) {\n            piVar2[10] = piStackX8;\n            *(unaff_R14 + 0x88) = 0;\n        }\n        else {\n            fcn.0045dec0(piVar3, piStackX8, piVar2 + 10, param_4);\n            piVar2 = fcn.0045df20(piVar3, piVar7, 0, param_4);\n        }\n        if (*0x801c20 == 0) {\n            piVar2[1] = 0;\n        }\n        else {\n            piVar2 = fcn.0045df20(piVar3, iVar6, 0, param_4);\n        }\n        iVar9 = piVar7[8];\n        if (iVar9 == 0) {\n            if (*0x801c20 == 0) {\n                piVar2[2] = 0;\n                piVar7[7] = piVar2;\n                piVar7[8] = piVar2;\n            }\n            else {\n                uVar8 = 0;\n                fcn.0045df20(piVar3, iVar6, 0, param_4);\n                fcn.0045dda0(piVar3, iVar6, uVar8, param_4);\n                fcn.0045dda0(piVar3, iVar6, uVar8, param_4);\n            }\n        }\n        else if (*0x801c20 == 0) {\n            piVar2[2] = iVar9;\n            *(iVar9 + 8) = piVar2;\n            piVar7[8] = piVar2;\n        }\n        else {\n            fcn.0045df20(piVar3, iVar6, iVar9, param_4);\n            fcn.0045dda0(piVar3, iVar6, iVar9, param_4);\n            fcn.0045dda0(piVar3, iVar6, iVar9, param_4);\n        }\n        uVar4 = *(unaff_R14 + 0xb9);\n        *(unaff_R14 + 0xb9) = 1;\n        param_3 = uVar4;\n        in_RAX = 0xe;\n        fcn.004366e0();\n        if (*(unaff_R14 + 0x148) == piVar2) {\n            iVar6 = unaff_R14;\n            if (*0x801c20 == 0) {\n                *(unaff_R14 + 0x148) = 0;\n                piVar3 = piVar2;\n            }\n            else {\n                piVar3 = fcn.0045dea0(0, unaff_R14, param_3, param_4);\n            }\n            *(iVar6 + 0xb8) = 0;\n            if (0 < piVar3[5]) {\n                fcn.0042b0a0();\n                piVar3 = piVar2;\n                iVar6 = unaff_R14;\n            }\n            uVar5 = *(piVar3 + 0x35);\n            if (*0x801c20 == 0) {\n                *(iVar6 + 0x88) = 0;\n                piVar3[10] = 0;\n            }\n            else {\n                fcn.0045dec0(uVar5, 0, param_3, param_4);\n                fcn.0045dec0(uVar5, 0, param_3, param_4);\n            }\n            fcn.00436c00();\n            return 1;\n        }\n        fcn.00433c80();\n        piVar2 = in_RAX;\n    }\n    goto code_r0x00405d58;\n}\n",
        "token_count": 2784
    },
    "00405f00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00405f00(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t *piVar1;\n    int64_t in_RDX;\n    int64_t *unaff_RBX;\n    int64_t iVar2;\n    code **unaff_RDI;\n    uint64_t in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    int64_t iStack48;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (*(in_RAX + 8) == 0) {\n        in_RAX = in_RDX;\n        if (arg1 != 0) {\n            fcn.004052e0(arg1);\n            in_RAX = in_RDX;\n        }\n    }\n    else {\n        in_R8 = *(in_RAX + 0x18);\n        if (arg1 != 0) {\n            fcn.00410240(*(in_RAX + 0x30) * in_R8 + *(in_RAX + 0x10));\n        }\n        fcn.00410240(unaff_RBX[3]);\n        iVar2 = *(in_RAX + 0x30) + 1;\n        *(in_RAX + 0x30) = iVar2;\n        if (*(in_RAX + 8) == iVar2) {\n            *(in_RAX + 0x30) = 0;\n        }\n        *(in_RAX + 0x28) = *(in_RAX + 0x30);\n    }\n    if (*0x801c20 == 0) {\n        unaff_RBX[3] = 0;\n    }\n    else {\n        in_R8 = 0;\n        fcn.0045df20(unaff_RDI, in_RAX, 0, in_R9);\n    }\n    iVar2 = *unaff_RBX;\n    (**unaff_RDI)();\n    piVar1 = unaff_RBX;\n    if (*0x801c20 == 0) {\n        *(iVar2 + 0x88) = unaff_RBX;\n    }\n    else {\n        fcn.0045dea0(unaff_RBX, unaff_RDI, in_R8, in_R9);\n    }\n    *(piVar1 + 0x35) = 1;\n    if (piVar1[5] != 0) {\n        fcn.0045dc20(piVar1, unaff_RDI);\n        unaff_RBX[5] = iStack48;\n    }\n    fcn.00436820();\n    return;\n}\n",
        "token_count": 594
    },
    "00409100": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00409100(uint64_t param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    ulong *puVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    ulong noname_0;\n    uint32_t *noname_1;\n    int64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            noname_1 = *(in_RAX + 0x38);\n            if (*(in_RAX + 0x40) != 0) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                if ((*(unaff_RBX + 0x14) & 1) == 0) {\n                    if (param_1 != '\\0') {\n                        return 0;\n                    }\n                    uVar1 = *noname_1;\n                    *(*0x20 + -0x48) = 0x40931c;\n                    fcn.00456b80();\n                    *(*0x20 + -0x48) = 0x409325;\n                    uVar4 = fcn.004572e0(param_1, noname_1, param_3, param_4);\n                    *(*0x20 + -0x18) = uVar4;\n                    *(*0x20 + -0x28) = uVar1;\n                    *(*0x20 + -0x48) = 0x40933b;\n                    iVar5 = fcn.0040c560();\n                    if (*0x801c20 == 0) {\n                        *(iVar5 + 8) = *(*0x20 + 0x10);\n                        *(iVar5 + 0x10) = *(*0x20 + 8);\n                    }\n                    else {\n                        *(*0x20 + -0x48) = 0x4093a5;\n                        fcn.0045dea0(*(*0x20 + 0x10), noname_1, param_3, param_4);\n                        *(*0x20 + -0x48) = 0x4093b3;\n                        iVar5 = fcn.0045dea0(*(*0x20 + 8), noname_1, param_3, param_4);\n                    }\n                    *(iVar5 + 0x20) = *(*0x20 + -0x28);\n                    if (*0x801c20 != 0) goto code_r0x00409385;\n                    *(iVar5 + 0x18) = *(*0x20 + -0x18);\n                    do {\n                        *(*0x20 + -0x48) = 0x409385;\n                        fcn.004334e0();\ncode_r0x00409385:\n                        *(*0x20 + -0x48) = 0x409393;\n                        fcn.0045dea0(*(*0x20 + -0x18), noname_1, param_3, param_4);\n                    } while( true );\n                }\n                *(*0x20 + 0x18) = param_1;\n                *(*0x20 + -0x48) = 0x40916d;\n                iVar5 = *0x7a5de0;\n                iVar2 = fcn.00409400(unaff_RBX);\n                if (iVar2 == 0) {\n                    *(*0x20 + -0x48) = 0x409185;\n                    fcn.0040a460();\n                    in_RAX = *(*0x20 + 8);\n                    *(*0x20 + -0x48) = 0x40919b;\n                    iVar2 = fcn.00409400(*(*0x20 + 0x10));\n                    if (iVar2 == 0) {\n                        uVar4 = *(*0x20 + 8);\n                        in_RAX = 0;\n                        *(*0x20 + -0x48) = 0x4091e7;\n                        puVar3 = fcn.0040c8c0(0x804500);\n                        if (*0x801c20 == 0) {\n                            *puVar3 = *(*0x20 + 8);\n                            iVar5 = *(*0x20 + 0x10);\n                            puVar3[1] = iVar5;\n                        }\n                        else {\n                            noname_0 = *(*0x20 + 8);\n                            *(*0x20 + -0x48) = 0x409212;\n                            iVar5 = fcn.0045dea0(noname_0, uVar4, param_3, param_4);\n                            iVar5 = iVar5 + 8;\n                            in_RAX = *(*0x20 + 0x10);\n                            *(*0x20 + -0x48) = 0x409225;\n                            puVar3 = fcn.0045dee0(noname_0, iVar5, param_3, param_4);\n                        }\n                        *(*0x20 + -0x10) = puVar3;\n                        *(puVar3 + 2) = 0;\n                        *(*0x20 + -0x48) = 0x409236;\n                        fcn.00409600();\n                        *(*0x20 + -0x48) = 0x409245;\n                        fcn.00409460();\n                        *(*0x20 + -0x48) = 0x409253;\n                        fcn.0040a680();\n                        iVar2 = *(*0x20 + -0x10);\n                    }\n                    else {\n                        *(*0x20 + -0x20) = iVar2;\n                        *(*0x20 + -0x48) = 0x4091b8;\n                        fcn.0040a680();\n                        iVar2 = *(*0x20 + -0x20);\n                    }\n                }\n                if (*(iVar2 + 0x18) == 0) {\n                    if (*(*0x20 + 0x18) != '\\0') {\n                        return 0;\n                    }\n                    *(*0x20 + -0x48) = 0x409285;\n                    uVar4 = fcn.00409600();\n                    *(*0x20 + -0x18) = uVar4;\n                    *(*0x20 + -0x28) = in_RAX;\n                    *(*0x20 + -0x48) = 0x40929b;\n                    iVar2 = fcn.0040c560();\n                    if (*0x801c20 == 0) {\n                        *(iVar2 + 8) = *(*0x20 + 0x10);\n                        *(iVar2 + 0x10) = *(*0x20 + 8);\n                    }\n                    else {\n                        *(*0x20 + -0x48) = 0x409305;\n                        fcn.0045dea0(*(*0x20 + 0x10), iVar5, param_3, param_4);\n                        *(*0x20 + -0x48) = 0x409313;\n                        iVar2 = fcn.0045dea0(*(*0x20 + 8), iVar5, param_3, param_4);\n                    }\n                    *(iVar2 + 0x20) = *(*0x20 + -0x28);\n                    if (*0x801c20 != 0) goto code_r0x004092e5;\n                    *(iVar2 + 0x18) = *(*0x20 + -0x18);\n                    do {\n                        *(*0x20 + -0x48) = 0x4092e5;\n                        fcn.004334e0();\ncode_r0x004092e5:\n                        *(*0x20 + -0x48) = 0x4092f3;\n                        fcn.0045dea0(*(*0x20 + -0x18), iVar5, param_3, param_4);\n                    } while( true );\n                }\n                return iVar2;\n            }\n            unaff_RBX = 0x1f;\n            *(*0x20 + -0x48) = 0x4093c6;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        puVar6[0x18] = param_1;\n        *(puVar6 + -8) = 0x4093da;\n        fcn.0045bb60();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        param_1 = puVar6[0x18];\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 2035
    },
    "00409460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00409460(void)\n\n{\n    uint64_t uVar1;\n    uint64_t *puVar2;\n    ulong in_RAX;\n    int64_t *piVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(*(unaff_R14 + 0x30) + 0xc0) == 0) {\n                uVar1 = **0x7a5de0;\n                puVar2 = *0x7a5de0;\n                if ((*0x7a5de0)[1] < (uVar1 >> 2) * 3) goto code_r0x0040954a;\n                *(*0x20 + -0x30) = *0x7a5de0;\n                *(*0x20 + -0x20) = in_RAX;\n                *(*0x20 + -0x50) = 0x4094cd;\n                piVar3 = fcn.0040bba0(1, *0x7a5de0, uVar1);\n                *(*0x20 + -0x28) = piVar3;\n                *piVar3 = **(*0x20 + -0x30) << 1;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x18) = 0x4604c0;\n                *(*0x20 + -0x10) = piVar3;\n                *(*0x20 + -0x50) = 0x409505;\n                fcn.0040a140();\n                if (*(*(*0x20 + -0x30) + 8) == (*(*0x20 + -0x28))[1]) {\n                    puVar2 = *(*0x20 + -0x28);\n                    if (*0x801c20 != '\\0') {\n                        *(*0x20 + -0x50) = 0x40952f;\n                        fcn.00403500();\n                        puVar2 = *(*0x20 + -0x28);\n                    }\ncode_r0x0040954a:\n                    *0x7a5de0 = puVar2;\n                    *(*0x20 + -0x50) = 0x409555;\n                    fcn.004095a0();\n                    return;\n                }\n                *(*0x20 + -0x50) = 0x409570;\n                fcn.00433c80();\n            }\n            *(*0x20 + -0x50) = 0x409585;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x409590;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 752
    },
    "00409600": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00409600(void)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    ulong *in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong uVar5;\n    ulong arg4;\n    ulong uVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    uint32_t *noname_0;\n    uint64_t arg1;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    uint64_t uVar12;\n    int64_t noname_2;\n    int64_t unaff_R14;\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x28 && *0x20 + -0x28 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0xa8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = *in_RAX;\n            *(*0x20 + -0x40) = in_RAX[1];\n            *(*0x20 + -0xb0) = 0x409647;\n            iVar3 = fcn.00456a60();\n            arg1 = *(*0x20 + -0x30);\n            uVar9 = *(arg1 + 0x40);\n            uVar10 = *(iVar3 + 4);\n            uVar1 = *(iVar3 + 8);\n            if (uVar10 < 0x10001) {\n                if (uVar9 < 0x10001) {\n                    *(*0x20 + -0x48) = iVar3;\n                    *(*0x20 + -0x50) = uVar1 + iVar3;\n                    *(*0x20 + -0x90) = uVar9;\n                    *(*0x20 + -0x60) = uVar10;\n                    uVar10 = 0;\n                    uVar6 = 0;\n                    arg4 = 0;\ncode_r0x004096c0:\n                    if (uVar9 <= uVar10) {\n                        *(*(*0x20 + 8) + 0x18) = arg4;\n                        return 0;\n                    }\n                    uVar4 = *(arg1 + 0x38);\n                    arg1 = *(arg1 + 0x40);\n                    if (uVar10 < arg1) {\n                        *(*0x20 + -0x88) = uVar10;\n                        *(*0x20 + -0x10) = uVar4;\n                        *(*0x20 + -0x80) = uVar6;\n                        *(*0x20 + -0x20) = arg4;\n                        *(*0x20 + -0xb0) = 0x409705;\n                        uVar4 = fcn.00456e20();\n                        *(*0x20 + -0x58) = uVar4;\n                        iVar3 = *(*0x20 + -0x88);\n                        iVar8 = *(*0x20 + -0x10);\n                        uVar9 = *(iVar8 + iVar3 * 8);\n                        *(*0x20 + -0xb0) = 0x409725;\n                        uVar4 = fcn.00456b80();\n                        *(*0x20 + -0x18) = uVar4;\n                        *(*0x20 + -0xb0) = 0x409732;\n                        uVar4 = fcn.004572e0(iVar3, iVar8, uVar6, arg4);\n                        *(*0x20 + -0x28) = uVar4;\n                        *(*0x20 + -0x70) = uVar9;\n                        *(*0x20 + -0xb0) = 0x40974c;\n                        uVar5 = fcn.004574a0(iVar3, iVar8, uVar6, arg4);\n                        uVar4 = arg4;\n                        if (uVar9 == 0) {\n                            *(*0x20 + -0xb0) = 0x40975f;\n                            uVar5 = fcn.004572e0(*(*0x20 + -0x30), iVar8, uVar6, arg4);\n                            uVar4 = arg4;\n                        }\n                        *(*0x20 + -0x38) = uVar5;\n                        *(*0x20 + -0x78) = uVar9;\n                        uVar9 = *(*0x20 + -0x40);\n                        uVar10 = *(*0x20 + -0x60);\n                        uVar12 = *(*0x20 + -0x80);\n                        do {\n                            if (uVar10 <= uVar12) {\n                                *(*(*0x20 + 8) + 0x18) = 0;\n                                return *(*0x20 + -0x28);\n                            }\n                            if (uVar10 <= uVar12) {\n                                *(*0x20 + -0xb0) = 0x409971;\n                                fcn.0045e240(uVar10);\n                                break;\n                            }\n                            *(*0x20 + -0x80) = uVar12;\n                            noname_2 = uVar12 << 4;\n                            *(*0x20 + -0x68) = noname_2;\n                            *(*0x20 + -0xb0) = 0x409853;\n                            uVar6 = fcn.00456b80();\n                            *(*0x20 + -0x18) = uVar6;\n                            iVar3 = *(*0x20 + -0x50);\n                            uVar10 = *(iVar3 + 4 + *(*0x20 + -0x68));\n                            *(*0x20 + -0xb0) = 0x409873;\n                            iVar7 = fcn.00456e20();\n                            iVar8 = *(*0x20 + -0x58);\n                            uVar9 = uVar10;\n                            if (iVar7 == iVar8) {\n                                *(*0x20 + -0xb0) = 0x40988f;\n                                fcn.004572e0(iVar8, iVar3, noname_2, uVar4);\n                                if (*(*0x20 + -0x70) == uVar10) {\n                                    uVar9 = *(*0x20 + -0x28);\n                                    *(*0x20 + -0xb0) = 0x4098ad;\n                                    cVar2 = fcn.00402a00(uVar10, iVar3);\n                                }\n                                else {\n                                    cVar2 = '\\0';\n                                }\n                                iVar8 = *(*0x20 + -0x58);\n                            }\n                            else {\n                                cVar2 = '\\0';\n                            }\n                            if (cVar2 != '\\0') {\n                                *(*0x20 + -0xb0) = 0x4098cc;\n                                fcn.004574a0(iVar8, iVar3, noname_2, uVar4);\n                                if (uVar9 == 0) {\n                                    noname_0 = *(*0x20 + -0x48);\n                                    uVar9 = *noname_0;\n                                    *(*0x20 + -0xb0) = 0x4098e5;\n                                    fcn.00456b80();\n                                    *(*0x20 + -0xb0) = 0x4098ea;\n                                    fcn.004572e0(noname_0, iVar3, noname_2, uVar4);\n                                }\n                                if ((**(*0x20 + -0x18) & 1) == 0) {\n                                    if (*(*0x20 + -0x78) == uVar9) {\n                                        *(*0x20 + -0xb0) = 0x409925;\n                                        cVar2 = fcn.00402a00(uVar9, *(*0x20 + -0x78));\n                                    }\n                                    else {\n                                        cVar2 = '\\0';\n                                    }\n                                }\n                                else {\n                                    cVar2 = '\\x01';\n                                }\n                                if (cVar2 != '\\0') goto code_r0x00409785;\n                            }\n                            uVar12 = *(*0x20 + -0x80) + 1;\n                            uVar9 = *(*0x20 + -0x40);\n                            uVar10 = *(*0x20 + -0x60);\n                        } while( true );\n                    }\n                    *(*0x20 + -0xb0) = 0x40997c;\n                    fcn.0045e240(arg1);\n                }\n                uVar10 = 0x10000;\n                *(*0x20 + -0xb0) = 0x409986;\n                fcn.0045e340(arg1, uVar9);\n            }\n            *(*0x20 + -0xb0) = 0x409993;\n            in_RAX = fcn.0045e340(arg1, uVar10);\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + -8) = 0x40999e;\n        fcn.0045bb60();\n        in_RAX = *(puVar11 + 8);\n        *0x20 = puVar11;\n    } while( true );\ncode_r0x00409785:\n    *(*0x20 + -0xb0) = 0x40979d;\n    arg4 = fcn.004570e0();\n    iVar3 = *(*0x20 + -0x88);\n    if (iVar3 != 0) {\n        if (*0x801c20 == 0) {\n            *(*(*0x20 + 8) + 0x18 + iVar3 * 8) = arg4;\n        }\n        else {\n            *(*0x20 + -0xb0) = 0x4097d9;\n            fcn.0045dda0(iVar3, *(*0x20 + 8), noname_2, uVar4);\n        }\n        arg4 = *(*0x20 + -0x20);\n    }\n    uVar10 = iVar3 + 1;\n    uVar9 = *(*0x20 + -0x90);\n    arg1 = *(*0x20 + -0x30);\n    uVar6 = *(*0x20 + -0x80);\n    goto code_r0x004096c0;\n}\n",
        "token_count": 2303
    },
    "00409aa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00409aa0(ulong arg1)\n\n{\n    ulong in_RAX;\n    ulong *puVar1;\n    int64_t iVar2;\n    ulong in_RDX;\n    ulong unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    puVar1 = fcn.0040c560();\n    if (*0x801c20 != 0) goto code_r0x00409b0a;\n    *puVar1 = arg1;\n    puVar1[1] = in_RAX;\n    puVar1[2] = unaff_RBX;\n    do {\n        *(puVar1 + 3) = in_XMM15;\n        fcn.004334e0();\ncode_r0x00409b0a:\n        iVar2 = fcn.0045dea0(arg1, in_RDX, in_R8, in_R9);\n        in_RDX = in_RAX;\n        fcn.0045dec0(iVar2 + 8, in_RAX, in_R8, in_R9);\n        puVar1 = fcn.0045dea0(unaff_RBX, in_RDX, in_R8, in_R9);\n    } while( true );\n}\n",
        "token_count": 331
    },
    "00409b80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00409b80(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong *puVar1;\n    int64_t iVar2;\n    ulong arg2;\n    ulong noname_1;\n    ulong unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (in_RAX == 0) {\n        noname_1 = 0;\n    }\n    else {\n        noname_1 = *(in_RAX + 8);\n    }\n    arg2 = noname_1;\n    puVar1 = fcn.0040c560();\n    if (*0x801c20 != 0) goto code_r0x00409bfc;\n    *puVar1 = arg1;\n    puVar1[1] = noname_1;\n    puVar1[2] = unaff_RBX;\n    do {\n        *(puVar1 + 3) = in_XMM15;\n        fcn.004334e0();\ncode_r0x00409bfc:\n        iVar2 = fcn.0045dea0(arg1, arg2, in_R8, in_R9);\n        arg2 = noname_1;\n        fcn.0045dec0(iVar2 + 8, noname_1, in_R8, in_R9);\n        puVar1 = fcn.0045dea0(unaff_RBX, arg2, in_R8, in_R9);\n    } while( true );\n}\n",
        "token_count": 387
    },
    "00409de0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.00409de0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong in_RAX;\n    ulong *puVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (unaff_RBX == 0) {\n        puVar1 = 0x802b20;\n    }\n    else {\n        puVar1 = fcn.0040bba0(1);\n        puVar1[1] = unaff_RBX;\n        if (*0x801c20 == 0) {\n            *puVar1 = in_RAX;\n        }\n        else {\n            puVar1 = fcn.0045dea0(in_RAX, unaff_RBX, param_3, param_4);\n        }\n    }\n    return puVar1;\n}\n",
        "token_count": 237
    },
    "00409e80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.00409e80(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t *piVar1;\n    ulong arg1_00;\n    int64_t unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (in_RAX == 0) {\n        piVar1 = 0x802b20;\n    }\n    else {\n        arg1_00 = 1;\n        piVar1 = fcn.0040bba0();\n        piVar1[1] = unaff_RBX;\n        piVar1[2] = arg1;\n        if (*0x801c20 == 0) {\n            *piVar1 = in_RAX;\n        }\n        else {\n            piVar1 = fcn.0045dec0(arg1_00, in_RAX, in_R8, in_R9);\n        }\n    }\n    return piVar1;\n}\n",
        "token_count": 264
    },
    "0040a000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040a000(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (unaff_RBX != 0) {\n        fcn.00409100(0);\n        return;\n    }\n    iVar1 = fcn.0040c560();\n    if (*0x801c20 != 0) goto code_r0x0040a06d;\n    *(iVar1 + 0x10) = in_RAX;\n    do {\n        *(iVar1 + 0x18) = in_XMM15;\n        fcn.004334e0();\ncode_r0x0040a06d:\n        iVar1 = fcn.0045dea0(in_RAX, param_2, param_3, param_4);\n    } while( true );\n}\n",
        "token_count": 268
    },
    "0040a460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0040a460(void)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t *puVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(*(unaff_R14 + 0x30) + 0xd8);\n            if (-1 < iVar1) {\n                *(*(unaff_R14 + 0x30) + 0xd8) = iVar1 + 1;\n                LOCK();\n                bVar9 = *in_RAX == 0;\n                *in_RAX = *in_RAX ^ bVar9 * (*in_RAX ^ 1);\n                if (bVar9) {\n                    return !bVar9 * *in_RAX;\n                }\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x18) = unaff_R14;\n                *(*0x20 + -0x48) = 0x40a4bb;\n                fcn.004303e0();\n                iVar4 = 0;\n                if (1 < *0x8019f8) {\n                    iVar4 = 4;\n                }\n                *(*0x20 + -0x30) = iVar4;\n                iVar5 = *(*0x20 + -0x18);\n                puVar6 = *(*0x20 + -0x10);\n                iVar3 = 0;\n                do {\n                    uVar8 = *puVar6;\n                    if ((uVar8 & 1) == 0) {\n                        *(*0x20 + -0x20) = uVar8;\n                        LOCK();\n                        bVar9 = uVar8 == *puVar6;\n                        *puVar6 = *puVar6 ^ bVar9 * (*puVar6 ^ (uVar8 | 1));\n                        if (bVar9) {\n                            return uVar8 ^ !bVar9 * (uVar8 ^ *puVar6);\n                        }\n                        uVar8 = *(*0x20 + -0x20);\n                        iVar3 = 0;\n                    }\n                    *(*0x20 + -0x28) = iVar3;\n                    if (iVar3 < iVar4) {\n                        *(*0x20 + -0x40) = 0x1e;\n                        *(*0x20 + -0x48) = 0x40a576;\n                        fcn.0045d940();\n                        iVar3 = *(*0x20 + -0x28);\n                    }\n                    else if (iVar3 < iVar4 + 1) {\n                        *(*0x20 + -0x40) = 0x719768;\n                        *(*0x20 + -0x48) = 0x40a54f;\n                        fcn.0045ba20();\n                        iVar3 = *(*0x20 + -0x28);\n                    }\n                    else {\n                        do {\n                            *(*(iVar5 + 0x30) + 0x240) = uVar8 & 0xfffffffffffffffe;\n                            LOCK();\n                            uVar2 = *puVar6;\n                            *puVar6 = *puVar6 ^ (uVar8 == uVar2) * (*puVar6 ^ (*(iVar5 + 0x30) | 1));\n                            if (uVar8 == uVar2) {\n                                if ((uVar8 & 1) != 0) {\n                                    *(*0x20 + -0x48) = 0x40a5f8;\n                                    fcn.0042fec0();\n                                    iVar3 = 0;\n                                }\n                                break;\n                            }\n                            uVar8 = *puVar6;\n                        } while ((uVar8 & 1) != 0);\n                    }\n                    iVar3 = iVar3 + 1;\n                    iVar4 = *(*0x20 + -0x30);\n                    iVar5 = *(*0x20 + -0x18);\n                    puVar6 = *(*0x20 + -0x10);\n                } while( true );\n            }\n            *(*0x20 + -0x48) = 0x40a625;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x40a630;\n        fcn.0045bb60();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1118
    },
    "0040a680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0040a680(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t *in_RAX;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar7;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = unaff_R14;\n            do {\n                while (uVar5 = *in_RAX,  uVar5 == 1) {\n                    LOCK();\n                    bVar7 = *in_RAX == 1;\n                    *in_RAX = *in_RAX ^ bVar7 * *in_RAX;\n                    uVar5 = !bVar7 * (*in_RAX ^ 1) ^ 1;\n                    if (bVar7) goto code_r0x0040a6f6;\n                }\n                LOCK();\n                uVar3 = *in_RAX;\n                *in_RAX = *in_RAX ^ (uVar5 == uVar3) * (*in_RAX ^ *((uVar5 & 0xfffffffffffffffe) + 0x240));\n            } while (uVar5 != uVar3);\n            *(*0x20 + -0x28) = 0x40a6f6;\n            uVar5 = fcn.00430260();\ncode_r0x0040a6f6:\n            iVar4 = *(*0x20 + -0x10);\n            piVar1 = *(iVar4 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + -1;\n            iVar2 = *(*(iVar4 + 0x30) + 0xd8);\n            if (-1 < iVar2) {\n                if ((iVar2 == 0) && (*(iVar4 + 0xb1) != '\\0')) {\n                    *(iVar4 + 0x10) = 0xfffffffffffffade;\n                }\n                return uVar5;\n            }\n            *(*0x20 + -0x28) = 0x40a745;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + -8) = 0x40a750;\n        fcn.0045bb60();\n        in_RAX = *(puVar6 + 8);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 650
    },
    "0040a760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0040a760(void)\n\n{\n    uint64_t *in_RAX;\n    uint64_t uVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar3;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            do {\n                uVar1 = *in_RAX;\n                LOCK();\n                bVar3 = uVar1 == *in_RAX;\n                *in_RAX = *in_RAX ^ bVar3 * (*in_RAX ^ 1);\n            } while (!bVar3);\n            if (uVar1 == 0) {\n                return uVar1 ^ !bVar3 * (uVar1 ^ *in_RAX);\n            }\n            if (uVar1 != 1) {\n                *(*0x20 + -0x20) = 0x40a7ae;\n                uVar1 = fcn.00430260();\n                return uVar1;\n            }\n            *(*0x20 + -0x20) = 0x40a7c9;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x40a7d4;\n        fcn.0045bb60();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 409
    },
    "0040a7e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040a7e0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    uint64_t *puVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar4;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (**(unaff_R14 + 0x30) == unaff_R14) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x10) = unaff_R14;\n                *(*0x20 + -0x30) = 0x40a81b;\n                fcn.004303e0();\n                iVar1 = *(*0x20 + -0x10);\n                puVar2 = *(*0x20 + 8);\n                LOCK();\n                bVar4 = *puVar2 == 0;\n                *puVar2 = *puVar2 ^ bVar4 * (*puVar2 ^ *(iVar1 + 0x30));\n                if (bVar4) {\n                    *(*(iVar1 + 0x30) + 0xe5) = 1;\n                    if (**0x7a5dd8 == 0) {\n                        *(*0x20 + -0x30) = 0x40a865;\n                        fcn.0042fec0();\n                    }\n                    else {\n                        while (*puVar2 == 0) {\n                            *(*0x20 + -0x30) = 0x40a8ac;\n                            fcn.0042fec0(iVar1);\n                            *(*0x20 + -0x28) = **0x7a5dd8;\n                            *(*0x20 + -0x20) = 0;\n                            *(*0x20 + -0x30) = 0x40a8c8;\n                            fcn.0045d980();\n                            iVar1 = *(*0x20 + -0x10);\n                            puVar2 = *(*0x20 + 8);\n                        }\n                    }\n                }\n                else {\n                    if (*puVar2 == 1) {\n                        return !bVar4 * *puVar2;\n                    }\n                    *(*0x20 + -0x30) = 0x40a888;\n                    fcn.00433c80();\n                }\n                iVar1 = *(*(*0x20 + -0x10) + 0x30);\n                *(iVar1 + 0xe5) = 0;\n                return iVar1;\n            }\n            *(*0x20 + -0x30) = 0x40a905;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x40a910;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 738
    },
    "0040a920": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0040a920(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int32_t iVar4;\n    uint64_t *in_RAX;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    int64_t iStack56;\n    int64_t iStack32;\n    uint64_t *puStack24;\n    int64_t in_stack_fffffffffffffff0;\n    \n    LOCK();\n    uVar1 = *in_RAX;\n    *in_RAX = *in_RAX ^ (uVar1 == 0) * (*in_RAX ^ *(unaff_R14 + 0x30));\n    if (uVar1 == 0) {\n        if (unaff_RBX < 0) {\n            *(*(unaff_R14 + 0x30) + 0xe5) = 1;\n            if (**0x7a5dd8 == 0) {\n                fcn.0042fec0();\n            }\n            else {\n                while (iVar4 = fcn.0042fec0(),  iVar4 < 0) {\n                    fcn.0045d980();\n                }\n            }\n            goto code_r0x0040ab4f;\n        }\n        fcn.0045fb60();\n        iStack32 = iStack56 + unaff_RBX;\n        puStack24 = in_RAX;\n    }\n    else {\n        if (*in_RAX == 1) {\n            return 1;\n        }\n        fcn.00433c80();\n        unaff_R14 = in_stack_fffffffffffffff0;\n    }\n    do {\n        *(*(unaff_R14 + 0x30) + 0xe5) = 1;\n        iVar4 = fcn.0042fec0();\n        if (-1 < iVar4) {\n            *(*(unaff_R14 + 0x30) + 0xe5) = 0;\n            return 1;\n        }\n        iVar2 = **0x7a5dd8;\n        if (iVar2 != 0) {\n            fcn.0045d980();\n            iStack56 = iVar2;\n        }\n        *(*(unaff_R14 + 0x30) + 0xe5) = 0;\n        fcn.0045fb60();\n    } while (0 < iStack32 - iStack56);\n    while( true ) {\n        uVar1 = *puStack24;\n        if (uVar1 != *(unaff_R14 + 0x30)) break;\n        LOCK();\n        uVar3 = *puStack24;\n        *puStack24 = *puStack24 ^ (uVar1 == uVar3) * *puStack24;\n        if (uVar1 == uVar3) {\n            return 0;\n        }\n    }\n    if (uVar1 == 1) {\n        *(*(unaff_R14 + 0x30) + 0xe5) = 1;\n        iVar4 = fcn.0042fec0();\n        if (-1 < iVar4) {\n            *(*(unaff_R14 + 0x30) + 0xe5) = 0;\n            return 1;\n        }\n        fcn.00433c80();\n    }\n    fcn.00433c80();\ncode_r0x0040ab4f:\n    *(*(unaff_R14 + 0x30) + 0xe5) = 0;\n    return 1;\n}\n",
        "token_count": 763
    },
    "0040bba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint64_t fcn.0040bba0(uint64_t param_1)\n\n{\n    int32_t *piVar1;\n    int64_t *piVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int32_t iVar5;\n    uint64_t *puVar6;\n    char cVar7;\n    uint64_t in_RAX;\n    int64_t iVar8;\n    uchar (*pauVar9) [16];\n    uchar uVar10;\n    uint64_t uVar11;\n    int64_t unaff_RBX;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    int64_t iVar13;\n    uint8_t uVar14;\n    int64_t iVar15;\n    uint64_t uVar16;\n    uint64_t uVar17;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint8_t uVar18;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x8019ec != 2) {\n                if (in_RAX == 0) {\n                    return 0x801ba0;\n                }\n                if (*0x801ea4 != '\\0') {\n                    if (*0x801eb0 != 0) {\n                        *(*0x20 + -0x78) = 0x40bc39;\n                        iVar8 = fcn.0040c8c0(0x804500);\n                        return iVar8;\n                    }\n                    if ((*0x801ca0 != '\\0') && (*(unaff_R14 + 0x98) == *0x801ca8)) {\n                        *0x801cb0 = *0x801cb0 + 1;\n                    }\n                }\n                *(*0x20 + 0x18) = param_1;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                if (*0x8019e4 == 0) {\n                    iVar8 = 0;\n                }\n                else {\n                    iVar8 = *(*(unaff_R14 + 0x30) + 0x90);\n                    if (iVar8 == 0) {\n                        *(*0x20 + -0x18) = unaff_R14;\n                        iVar8 = *(*0x20 + -0x18);\n                    }\n                    iVar13 = *(iVar8 + 0x180) - in_RAX;\n                    *(iVar8 + 0x180) = iVar13;\n                    if (iVar13 < 0) {\n                        *(*0x20 + -0x10) = iVar8;\n                        *(*0x20 + -0x78) = 0x40bcbf;\n                        fcn.0041a800();\n                        in_RAX = *(*0x20 + 8);\n                        param_1 = *(*0x20 + 0x18);\n                        iVar8 = *(*0x20 + -0x10);\n                        unaff_RBX = *(*0x20 + 0x10);\n                    }\n                }\n                piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                *piVar1 = *piVar1 + 1;\n                iVar13 = *(unaff_R14 + 0x30);\n                if (*(iVar13 + 0xc0) == 0) {\n                    if (*(iVar13 + 0x50) != unaff_R14) {\n                        *(iVar13 + 0xc0) = 1;\n                        iVar15 = *0x801ad0;\n                        if (*(iVar13 + 0xa0) != 0) {\n                            iVar15 = *(*(iVar13 + 0xa0) + 0x40);\n                        }\n                        if (iVar15 != 0) {\n                            if (unaff_RBX == 0) {\n                                uVar18 = true;\n                            }\n                            else {\n                                uVar18 = *(unaff_RBX + 8) == 0;\n                            }\n                            *(*0x20 + -0x28) = iVar13;\n                            *(*0x20 + -0x38) = iVar15;\n                            *(*0x20 + -0x4a) = uVar18;\n                            *(*0x20 + -0x18) = iVar8;\n                            if (in_RAX < 0x8001) {\n                                if ((uVar18 != false) && (in_RAX < 0x10)) {\n                                    uVar16 = *(iVar15 + 0x18);\n                                    if ((in_RAX & 7) == 0) {\n                                        uVar16 = uVar16 + 7 & 0xfffffffffffffff8;\n                                    }\n                                    else if ((in_RAX & 3) == 0) {\n                                        uVar16 = uVar16 + 3 & 0xfffffffffffffffc;\n                                    }\n                                    else if ((in_RAX & 1) == 0) {\n                                        uVar16 = uVar16 + 1 & 0xfffffffffffffffe;\n                                    }\n                                    if ((in_RAX + uVar16 < 0x11) && (iVar8 = *(iVar15 + 0x10),  iVar8 != 0)) {\n                                        *(iVar15 + 0x18) = in_RAX + uVar16;\n                                        *(iVar15 + 0x20) = *(iVar15 + 0x20) + 1;\n                                        *(iVar13 + 0xc0) = 0;\n                                        iVar5 = *(iVar13 + 0xd8);\n                                        *(iVar13 + 0xd8) = iVar5 + -1;\n                                        if ((iVar5 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                                        }\n                                        return iVar8 + uVar16;\n                                    }\n                                    uVar17 = *(iVar15 + 0x50);\n                                    uVar16 = *(uVar17 + 0x40);\n                                    uVar11 = 0;\n                                    if (uVar16 != 0) {\n                                        for (; (uVar16 >> uVar11 & 1) == 0; uVar11 = uVar11 + 1) {\n                                        }\n                                    }\n                                    if (uVar16 == 0) {\n                                        uVar11 = 0x40;\n                                    }\n                                    if (uVar11 < 0x40) {\n                                        uVar3 = *(uVar17 + 0x30) + uVar11;\n                                        if (*(uVar17 + 0x38) <= uVar3) goto code_r0x0040bea6;\n                                        uVar4 = *(uVar17 + 0x30) + uVar11 + 1;\n                                        if (((uVar4 & 0x3f) == 0) && (*(uVar17 + 0x38) != uVar4)) {\n                                            pauVar9 = NULL;\n                                        }\n                                        else {\n                                            uVar11 = uVar11 + 1;\n                                            *(uVar17 + 0x40) = uVar16 >> (uVar11 & 0x3f) & -(uVar11 < 0x40);\n                                            *(uVar17 + 0x30) = uVar4;\n                                            *(uVar17 + 0x60) = *(uVar17 + 0x60) + 1;\n                                            pauVar9 = *(uVar17 + 0x68) * uVar3 + *(uVar17 + 0x18);\n                                        }\n                                    }\n                                    else {\ncode_r0x0040bea6:\n                                        pauVar9 = NULL;\n                                    }\n                                    uVar10 = uVar11;\n                                    if (pauVar9 == NULL) {\n                                        *(*0x20 + -0x78) = 0x40bebf;\n                                        pauVar9 = fcn.0040b980();\n                                        iVar15 = *(*0x20 + -0x38);\n                                        uVar18 = *(*0x20 + -0x4a);\n                                        uVar17 = 5;\n                                        in_RAX = *(*0x20 + 8);\n                                    }\n                                    else {\n                                        uVar10 = 0;\n                                    }\n                                    *pauVar9 = CONCAT412(in_XMM15_Dd, \n                                                         CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                    if ((in_RAX <= *(iVar15 + 0x18) && *(iVar15 + 0x18) != in_RAX) ||\n                                       (*(iVar15 + 0x10) == 0)) {\n                                        *(iVar15 + 0x10) = pauVar9;\n                                        *(iVar15 + 0x18) = in_RAX;\n                                    }\n                                    uVar16 = 0x10;\ncode_r0x0040c109:\n                                    uVar14 = 0;\n                                    goto code_r0x0040c1ba;\n                                }\n                                if (0x3f8 < in_RAX) {\n                                    uVar16 = in_RAX - 0x381 >> 7;\n                                    if (uVar16 < 0xf9) {\n                                        uVar14 = \" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                                 [uVar16];\n                                        goto code_r0x0040bf62;\n                                    }\n                                    goto code_r0x0040c405;\n                                }\n                                uVar16 = in_RAX + 7 >> 3;\n                                if (uVar16 < 0x81) {\n                                    uVar14 = *(uVar16 + 0x798460);\ncode_r0x0040bf62:\n                                    if (uVar14 < 0x44) {\n                                        uVar16 = *(uVar14 * 2 + 0x7985a0);\n                                        uVar17 = uVar14 << 1 & 0xff | uVar18;\n                                        if (uVar17 < 0x88) {\n                                            uVar17 = *(iVar15 + 0x28 + uVar17 * 8);\n                                            uVar11 = *(uVar17 + 0x40);\n                                            iVar8 = 0;\n                                            if (uVar11 != 0) {\n                                                for (; (uVar11 >> iVar8 & 1) == 0; iVar8 = iVar8 + 1) {\n                                                }\n                                            }\n                                            if (uVar11 == 0) {\n                                                iVar8 = 0x40;\n                                            }\n                                            if (iVar8 < 0x40) {\n                                                uVar3 = *(uVar17 + 0x30) + iVar8;\n                                                if (*(uVar17 + 0x38) <= uVar3) {\n                                                    iVar15 = *(*0x20 + -0x38);\n                                                    goto code_r0x0040c04c;\n                                                }\n                                                uVar4 = *(uVar17 + 0x30) + iVar8 + 1;\n                                                if (((uVar4 & 0x3f) == 0) && (*(uVar17 + 0x38) != uVar4)) {\n                                                    iVar15 = *(*0x20 + -0x38);\n                                                    pauVar9 = NULL;\n                                                }\n                                                else {\n                                                    *(uVar17 + 0x40) =\n                                                         uVar11 >> (iVar8 + 1U & 0x3f) & -(iVar8 + 1U < 0x40);\n                                                    *(uVar17 + 0x30) = uVar4;\n                                                    *(uVar17 + 0x60) = *(uVar17 + 0x60) + 1;\n                                                    pauVar9 = *(uVar17 + 0x68) * uVar3 + *(uVar17 + 0x18);\n                                                    param_1 = *(*0x20 + 0x18);\n                                                    iVar15 = *(*0x20 + -0x38);\n                                                }\n                                            }\n                                            else {\ncode_r0x0040c04c:\n                                                pauVar9 = NULL;\n                                            }\n                                            *(*0x20 + -0x30) = uVar16;\n                                            if (pauVar9 == NULL) {\n                                                uVar17 = uVar14 << 1 | uVar18;\n                                                *(*0x20 + -0x78) = 0x40c068;\n                                                pauVar9 = fcn.0040b980(param_1, 0, iVar15);\n                                                iVar15 = *(*0x20 + -0x38);\n                                                uVar18 = *(*0x20 + -0x4a);\n                                                uVar16 = *(*0x20 + -0x30);\n                                                uVar10 = param_1;\n                                                in_RAX = *(*0x20 + 8);\n                                                param_1 = *(*0x20 + 0x18);\n                                            }\n                                            else {\n                                                uVar10 = 0;\n                                            }\n                                            if ((param_1 != '\\0') && (*(uVar17 + 100) != '\\0')) {\n                                                *(*0x20 + -0x20) = pauVar9;\n                                                *(*0x20 + -0x4b) = uVar10;\n                                                *(*0x20 + -0x48) = uVar17;\n                                                *(*0x20 + -0x78) = 0x40c0c6;\n                                                fcn.0045e8c0(param_1, pauVar9, iVar15);\n                                                in_RAX = *(*0x20 + 8);\n                                                pauVar9 = *(*0x20 + -0x20);\n                                                uVar18 = *(*0x20 + -0x4a);\n                                                uVar10 = *(*0x20 + -0x4b);\n                                                uVar16 = *(*0x20 + -0x30);\n                                                uVar17 = *(*0x20 + -0x48);\n                                            }\n                                            goto code_r0x0040c109;\n                                        }\n                                        goto code_r0x0040c3e9;\n                                    }\n                                    goto code_r0x0040c3f6;\n                                }\n                            }\n                            else {\n                                *(*0x20 + -0x78) = 0x40c11e;\n                                uVar17 = fcn.00413560();\n                                *(uVar17 + 0x30) = 1;\n                                *(uVar17 + 0x60) = 1;\n                                uVar16 = *(uVar17 + 0x68);\n                                pauVar9 = *(uVar17 + 0x18);\n                                if ((*(*0x20 + 0x18) == '\\0') || (*(uVar17 + 100) == '\\0')) {\n                                    uVar14 = 0;\n                                    uVar18 = *(*0x20 + -0x4a);\n                                }\n                                else {\n                                    uVar14 = *(*0x20 + -0x4a);\n                                    uVar18 = uVar14;\n                                    if (uVar14 == 0) {\n                                        *(*0x20 + -0x48) = uVar17;\n                                        *(*0x20 + -0x30) = uVar16;\n                                        *(*0x20 + -0x20) = pauVar9;\n                                        *(*0x20 + -0x78) = 0x40c16c;\n                                        fcn.0045e8c0();\n                                        uVar17 = *(*0x20 + -0x48);\n                                        pauVar9 = *(*0x20 + -0x20);\n                                        uVar16 = *(*0x20 + -0x30);\n                                        uVar14 = *(*0x20 + -0x4a);\n                                        uVar18 = uVar14;\n                                    }\n                                }\n                                uVar10 = 1;\n                                in_RAX = *(*0x20 + 8);\ncode_r0x0040c1ba:\n                                *(*0x20 + -0x20) = pauVar9;\n                                *(*0x20 + -0x30) = uVar16;\n                                *(*0x20 + -0x4b) = uVar10;\n                                *(*0x20 + -0x49) = uVar14;\n                                *(*0x20 + -0x48) = uVar17;\n                                if (uVar18 == 0) {\n                                    *(*0x20 + -0x78) = 0x40c1ed;\n                                    fcn.00411880(in_RAX);\n                                    puVar6 = *(*0x20 + 0x10);\n                                    if (*puVar6 < *(*0x20 + 8)) {\n                                        uVar16 = 0;\n                                        if (puVar6[1] != 0) {\n                                            uVar16 = (*(*0x20 + 8) - *puVar6) + puVar6[1];\n                                        }\n                                    }\n                                    else {\n                                        uVar16 = puVar6[1];\n                                    }\n                                    *(*(*0x20 + -0x38) + 8) = *(*(*0x20 + -0x38) + 8) + uVar16;\n                                }\n                                else {\n                                    uVar16 = 0;\n                                }\n                                *(*0x20 + -0x40) = uVar16;\n                                *(*0x20 + -0x78) = 0x40c23f;\n                                fcn.0045d960();\n                                in_XMM15_Da = 0;\n                                in_XMM15_Db = 0;\n                                in_XMM15_Dc = 0;\n                                in_XMM15_Dd = 0;\n                                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                                *(*(*0x20 + -0x48) + 0x88) = *(*(*0x20 + -0x48) + 0x30);\n                                if (*0x8019ec != 0) {\n                                    *(*0x20 + -0x78) = 0x40c285;\n                                    fcn.0041d180(*(*0x20 + -0x30));\n                                }\n                                if (*0x801a38 < 1) {\n                                    uVar16 = *(*0x20 + -0x30);\n                                }\n                                else {\n                                    if (*0x801a38 == 1) {\n                                        uVar16 = *(*0x20 + -0x30);\n                                    }\n                                    else {\n                                        uVar17 = **(*0x20 + -0x38);\n                                        uVar16 = *(*0x20 + -0x30);\n                                        if (uVar16 < uVar17) {\n                                            **(*0x20 + -0x38) = uVar17 - uVar16;\n                                            goto code_r0x0040c2d1;\n                                        }\n                                    }\n                                    *(*0x20 + -0x78) = 0x40c2c5;\n                                    fcn.0040c680(uVar16);\n                                    uVar16 = *(*0x20 + -0x30);\n                                }\ncode_r0x0040c2d1:\n                                iVar8 = *(*0x20 + -0x28);\n                                *(iVar8 + 0xc0) = 0;\n                                iVar5 = *(iVar8 + 0xd8);\n                                *(iVar8 + 0xd8) = iVar5 + -1;\n                                if ((iVar5 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                                }\n                                if (*(*0x20 + -0x49) == '\\0') {\ncode_r0x0040c32f:\n                                    if (*0x801ea4 != '\\0') {\n                                        if (*0x801ea8 != 0) {\n                                            *(*0x20 + -0x78) = 0x40c357;\n                                            fcn.0042b7a0(*(*0x20 + 0x10));\n                                            uVar16 = *(*0x20 + -0x30);\n                                        }\n                                        if ((*0x801ca0 != '\\0') && (*(unaff_R14 + 0x98) == *0x801ca8)) {\n                                            *0x801cb8 = *0x801cb8 + uVar16;\n                                        }\n                                    }\n                                    if (*(*0x20 + -0x18) != 0) {\n                                        piVar2 = *(*0x20 + -0x18) + 0x180;\n                                        *piVar2 = *piVar2 - (uVar16 - *(*0x20 + 8));\n                                    }\n                                    if (*(*0x20 + -0x4b) != '\\0') {\n                                        *(*0x20 + -0x78) = 0x40c3a9;\n                                        cVar7 = fcn.00416180(0);\n                                        if (cVar7 != '\\0') {\n                                            *(*0x20 + -0x78) = 0x40c3b8;\n                                            fcn.004162e0(0);\n                                        }\n                                    }\n                                    return *(*0x20 + -0x20);\n                                }\n                                if (*(*0x20 + -0x4a) != '\\0') {\n                                    *(*0x20 + -0x78) = 0x40c32a;\n                                    fcn.0040c4a0();\n                                    uVar16 = *(*0x20 + -0x30);\n                                    goto code_r0x0040c32f;\n                                }\n                                *(*0x20 + -0x78) = 0x40c3e9;\n                                fcn.00433c80();\ncode_r0x0040c3e9:\n                                *(*0x20 + -0x78) = 0x40c3f6;\n                                fcn.0045e240(0x88);\ncode_r0x0040c3f6:\n                                *(*0x20 + -0x78) = 0x40c405;\n                                fcn.0045e240(0x44);\ncode_r0x0040c405:\n                                *(*0x20 + -0x78) = 0x40c412;\n                                fcn.0045e260(0xf9);\n                            }\n                            param_1 = 0x81;\n                            *(*0x20 + -0x78) = 0x40c41f;\n                            fcn.0045e260(0x81);\n                        }\n                        *(*0x20 + -0x78) = 0x40c430;\n                        fcn.00433c80();\n                    }\n                    *(*0x20 + -0x78) = 0x40c445;\n                    fcn.00433c80();\n                }\n                *(*0x20 + -0x78) = 0x40c456;\n                fcn.00433c80();\n            }\n            unaff_RBX = 0x32;\n            *(*0x20 + -0x78) = 0x40c467;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar12 + 8) = in_RAX;\n        *(puVar12 + 0x10) = unaff_RBX;\n        puVar12[0x18] = param_1;\n        *(puVar12 + -8) = 0x40c47b;\n        fcn.0045bb60();\n        in_RAX = *(puVar12 + 8);\n        unaff_RBX = *(puVar12 + 0x10);\n        param_1 = puVar12[0x18];\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 5247
    },
    "0040c4a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040c4a0(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    uVar1 = unaff_RBX + in_RAX;\n    for (; unaff_RBX < uVar1; unaff_RBX = unaff_RBX + 0x40000) {\n        if (*(unaff_R14 + 0xb1) != '\\0') {\n            fcn.0045b9a0();\n        }\n        uVar2 = uVar1 - unaff_RBX;\n        if (0x40000 < uVar2) {\n            uVar2 = 0x40000;\n        }\n        fcn.0045e8c0(uVar2);\n    }\n    return;\n}\n",
        "token_count": 238
    },
    "0040c5c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040c5c0(void)\n\n{\n    uint64_t uVar1;\n    uint64_t *in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX == 1) {\n                uVar1 = *in_RAX;\n                *(*0x20 + -0x28) = 0x40c62f;\n                fcn.0040bba0(1, uVar1);\n                return;\n            }\n            if (((SUB168(ZEXT816(unaff_RBX) * ZEXT816(*in_RAX) >> 0x40, 0) == 0) &&\n                (SUB168(ZEXT816(unaff_RBX) * ZEXT816(*in_RAX), 0) < 0x1000000000001)) && (-1 < unaff_RBX)) {\n                *(*0x20 + -0x28) = 0x40c612;\n                fcn.0040bba0(1);\n                return;\n            }\n            unaff_RBX = 0x732a48;\n            *(*0x20 + -0x28) = 0x40c64c;\n            in_RAX = fcn.004334e0(in_RAX);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x40c65c;\n        fcn.0045bb60();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 492
    },
    "0040c680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040c680(ulong arg1)\n\n{\n    int32_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar3 = *0x801ad0;\n            if (*(in_RAX + 0xa0) != 0) {\n                piVar3 = *(*(in_RAX + 0xa0) + 0x40);\n            }\n            if (piVar3 != NULL) {\n                if (*0x801a38 == 1) {\n                    iVar2 = 0;\n                }\n                else {\n                    *(*0x20 + -0x20) = piVar3;\n                    *(*0x20 + -0x18) = arg1;\n                    *(*0x20 + -0x10) = unaff_RBX;\n                    *(*0x20 + -0x38) = 0x40c6de;\n                    iVar1 = fcn.0040c760();\n                    iVar2 = iVar1;\n                    piVar3 = *(*0x20 + -0x20);\n                    arg1 = *(*0x20 + -0x18);\n                }\n                *piVar3 = iVar2;\n                *(*0x20 + -0x38) = 0x40c705;\n                fcn.0042ad80(arg1);\n                return;\n            }\n            unaff_RBX = 0x38;\n            *(*0x20 + -0x38) = 0x40c725;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x40c73a;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 599
    },
    "0040c9e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040c9e0(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint64_t *puVar3;\n    uint64_t uVar4;\n    uint64_t in_RAX;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t **ppuVar7;\n    uint64_t *puVar8;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar6 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX != 0) {\n                if (unaff_RBX == 0) {\n                    unaff_RBX = 8;\ncode_r0x0040ca33:\n                    if (0xffff < in_RAX) {\n                        *(*0x20 + -0x48) = 0x40cb0d;\n                        iVar5 = fcn.00414420();\n                        return iVar5;\n                    }\n                    *(*0x20 + 0x18) = arg1;\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x30) = unaff_RBX;\n                    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                    *piVar1 = *piVar1 + 1;\n                    iVar5 = *(unaff_R14 + 0x30);\n                    *(*0x20 + -0x20) = iVar5;\n                    if ((iVar5 == 0) || (*(iVar5 + 0xa0) == 0)) {\n                        *(*0x20 + -0x48) = 0x40ca8c;\n                        fcn.0040a460();\n                        in_RAX = *(*0x20 + 8);\n                        arg1 = *(*0x20 + 0x18);\n                        iVar5 = *(*0x20 + -0x20);\n                        unaff_RBX = *(*0x20 + -0x30);\n                        ppuVar7 = 0x801c38;\n                    }\n                    else {\n                        ppuVar7 = *(iVar5 + 0xa0) + 0x11f0;\n                    }\n                    *(*0x20 + -0x18) = ppuVar7;\n                    puVar8 = ppuVar7[1];\n                    *(*0x20 + -0x28) = -unaff_RBX;\n                    puVar8 = puVar8 + (unaff_RBX - 1) & -unaff_RBX;\n                    ppuVar7[1] = puVar8;\n                    if ((0x40000 < puVar8 + in_RAX) || (*ppuVar7 == NULL)) {\n                        *(*0x20 + -0x48) = 0x40caea;\n                        puVar8 = fcn.00414420();\n                        ppuVar7 = *(*0x20 + -0x18);\n                        *ppuVar7 = puVar8;\n                        if (*ppuVar7 == NULL) {\n                            if (ppuVar7 == 0x801c38) goto code_r0x0040cc31;\n                            do {\n                                *(*0x20 + -0x48) = 0x40cc2f;\n                                fcn.00433c80();\ncode_r0x0040cc31:\n                                *(*0x20 + -0x48) = 0x40cc3d;\n                                fcn.0040a680();\n                            } while( true );\n                        }\n                        do {\n                            uVar4 = *0x801b00;\n                            **ppuVar7 = *0x801b00;\n                            LOCK();\n                            bVar9 = uVar4 == *0x801b00;\n                            *0x801b00 = *0x801b00 ^ bVar9 * (*0x801b00 ^ *ppuVar7);\n                        } while (!bVar9);\n                        ppuVar7[1] = *(*0x20 + -0x30) + 7U & *(*0x20 + -0x28);\n                        in_RAX = *(*0x20 + 8);\n                        iVar5 = *(*0x20 + -0x20);\n                        arg1 = *(*0x20 + 0x18);\n                    }\n                    puVar8 = *ppuVar7;\n                    puVar3 = ppuVar7[1];\n                    ppuVar7[1] = in_RAX + puVar3;\n                    iVar2 = *(iVar5 + 0xd8);\n                    *(iVar5 + 0xd8) = iVar2 + -1;\n                    iVar5 = puVar8 + puVar3;\n                    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                    }\n                    *(*0x20 + -0x10) = iVar5;\n                    if (ppuVar7 == 0x801c38) {\n                        *(*0x20 + -0x48) = 0x40cb77;\n                        fcn.0040a680();\n                        arg1 = *(*0x20 + 0x18);\n                        iVar5 = *(*0x20 + -0x10);\n                    }\n                    if (arg1 != 0x804500) {\n                        *(*0x20 + -0x48) = 0x40cb9d;\n                        fcn.0042cbe0();\n                        *(*0x20 + -0x48) = 0x40cbb1;\n                        fcn.0042cbe0();\n                        iVar5 = *(*0x20 + -0x10);\n                    }\n                    return iVar5;\n                }\n                if ((unaff_RBX & unaff_RBX - 1) == 0) {\n                    if (unaff_RBX < 0x2001) goto code_r0x0040ca33;\n                    *(*0x20 + -0x48) = 0x40cc50;\n                    fcn.00433c80();\n                }\n                *(*0x20 + -0x48) = 0x40cc65;\n                fcn.00433c80();\n            }\n            unaff_RBX = 0x1a;\n            *(*0x20 + -0x48) = 0x40cc76;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + -8) = 0x40cc8b;\n        fcn.004602a0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1621
    },
    "0040cca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0040cca0(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    uint64_t *in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    uint64_t uVar3;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    uVar2 = (arg1 + *in_RAX) - 1 & -arg1;\n    uVar3 = uVar2 + unaff_RBX;\n    if (uVar3 <= in_RAX[2]) {\n        *in_RAX = uVar3;\n        uVar1 = in_RAX[1];\n        uVar3 = -*0x801b18 & (uVar3 + *0x801b18) - 2;\n        if (uVar1 < uVar3) {\n            if (*(in_RAX + 3) != '\\0') {\n                fcn.00414640(unaff_RDI);\n                fcn.00414520(uVar3 - uVar1);\n            }\n            in_RAX[1] = uVar3;\n        }\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 307
    },
    "0040cda0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040cda0(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    int64_t iVar3;\n    uchar auVar4 [16];\n    int64_t in_RAX;\n    int64_t iVar5;\n    int64_t arg4;\n    ulong uVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    int64_t *piVar9;\n    int64_t unaff_RBX;\n    int64_t *in_R8;\n    int64_t arg4_00;\n    uint64_t uVar10;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    iVar7 = *(in_RAX + 0x28);\n    iVar5 = in_RAX;\n    iVar8 = arg1;\n    if ((iVar7 == 0) || (arg4 = *(iVar7 + 0x10),  arg4 == 0)) {\n        arg4 = fcn.0040bba0(1);\n    }\n    else {\n        in_R8 = *(unaff_RBX + 0x52);\n        piVar9 = in_R8 + arg4 + -8;\n        if (*piVar9 == 0) {\n            if (*0x801c20 == 0) {\n                *(iVar7 + 0x10) = arg4 + in_R8;\n            }\n            else {\n                iVar5 = fcn.0045dec0(arg1, arg4 + in_R8, in_R8, arg4);\n            }\n        }\n        else {\n            if (*0x801c20 == 0) {\n                *piVar9 = 0;\n            }\n            else {\n                iVar5 = fcn.0045dec0(arg1, 0, in_R8, arg4);\n            }\n            if (*0x801c20 == 0) {\n                *(*(iVar5 + 0x28) + 0x10) = 0;\n            }\n            else {\n                iVar5 = fcn.0045dec0(iVar8, 0, in_R8, arg4);\n            }\n        }\n    }\n    uVar2 = *(iVar5 + 9);\n    if (uVar2 < 0x10) {\n        *(iVar5 + 10) = *(iVar5 + 10) + 1;\n    }\n    else {\n        uVar10 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n        auVar4 = ZEXT816(uVar10) * ZEXT816(uVar10 ^ 0xe7037ed1a0b428db);\n        *(*(unaff_R14 + 0x30) + 0xf0) = uVar10;\n        uVar2 = uVar2 - 0xf;\n        uVar1 = (1 << (uVar2 & 0x1f) & -(uVar2 < 0x20)) - 1;\n        in_R8 = uVar1;\n        if ((uVar1 & (SUB164(auVar4, 0) ^ SUB164(auVar4 >> 0x40, 0))) == 0) {\n            *(iVar5 + 10) = *(iVar5 + 10) + 1;\n        }\n    }\n    iVar7 = *(unaff_RBX + 0x40);\n    if (*(iVar7 + 8) == 0) {\n        if (*(iVar5 + 0x28) == 0) {\n            iVar7 = arg4;\n            uVar6 = fcn.0040c560();\n            if (*0x801c20 == 0) {\n                *(in_RAX + 0x28) = uVar6;\n                iVar5 = in_RAX;\n                iVar8 = arg1;\n            }\n            else {\n                iVar5 = in_RAX;\n                fcn.0045dda0(in_RAX, in_RAX + 0x28, in_R8, iVar7);\n                iVar8 = arg1;\n            }\n        }\n        piVar9 = *(iVar5 + 0x28);\n        if (*piVar9 == 0) {\n            iVar7 = arg4;\n            uVar6 = fcn.0040c560();\n            if (*0x801c20 == 0) {\n                **(in_RAX + 0x28) = uVar6;\n                iVar5 = in_RAX;\n                iVar8 = arg1;\n            }\n            else {\n                fcn.0045dda0(in_RAX, piVar9, in_R8, iVar7);\n                iVar5 = in_RAX;\n                iVar8 = arg1;\n            }\n        }\n        in_R8 = **(iVar5 + 0x28);\n        iVar5 = in_R8[1];\n        iVar3 = *in_R8;\n        iVar7 = iVar3;\n        if (in_R8[2] < iVar5 + 1U) {\n            iVar8 = iVar3;\n            piVar9 = in_R8;\n            arg4_00 = arg4;\n            iVar7 = fcn.00447360(iVar5);\n            in_R8[2] = iVar5;\n            if (*0x801c20 == 0) {\n                *in_R8 = iVar7;\n                iVar5 = iVar3;\n                iVar8 = arg1;\n            }\n            else {\n                iVar7 = fcn.0045dda0(iVar5, iVar8, piVar9, arg4_00);\n                iVar5 = iVar3;\n                iVar8 = arg1;\n            }\n        }\n        in_R8[1] = iVar5 + 1;\n        if (*0x801c20 == 0) {\n            *(iVar7 + iVar5 * 8) = arg4;\n        }\n        else {\n            iVar8 = fcn.0045df40(iVar7 + iVar5 * 8, iVar7, in_R8);\n        }\n    }\n    if (*0x801c20 == 0) {\n        *(iVar8 + *(unaff_RBX + 0x52) + -8) = arg4;\n    }\n    else {\n        fcn.0045df40(*(unaff_RBX + 0x52), iVar7, in_R8);\n    }\n    return arg4;\n}\n",
        "token_count": 1419
    },
    "0040d140": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040d140(int64_t arg1)\n\n{\n    uchar auVar1 [16];\n    uint8_t uVar2;\n    uint32_t uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    uint64_t unaff_RBX;\n    uint64_t uVar7;\n    int64_t in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    auVar1 = ZEXT816(**(in_RAX + 0x40)) * ZEXT816(unaff_RBX);\n    if ((SUB168(auVar1 >> 0x40, 0) != 0) || (0x1000000000000 < SUB168(auVar1, 0))) {\n        unaff_RBX = 0;\n    }\n    if (arg1 == 0) {\n        arg1 = fcn.0040c560();\n    }\n    uVar4 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n    *(*(unaff_R14 + 0x30) + 0xf0) = uVar4;\n    auVar1 = ZEXT816(uVar4) * ZEXT816(uVar4 ^ 0xe7037ed1a0b428db);\n    *(arg1 + 0xc) = SUB164(auVar1 >> 0x40, 0) ^ SUB164(auVar1, 0);\n    uVar3 = 0;\n    while ((uVar2 = uVar3,  8 < unaff_RBX &&\n           (uVar4 = 1 << (uVar2 & 0x3f),  uVar7 = uVar4 >> 1,  in_R8 = uVar7 + (uVar4 & 0xfffffffffffffffe), \n           uVar7 + in_R8 * 4 < unaff_RBX))) {\n        uVar3 = uVar3 + 1;\n    }\n    *(arg1 + 9) = uVar2;\n    iVar6 = arg1;\n    if (uVar2 != 0) {\n        uVar4 = uVar3;\n        uVar5 = fcn.0040d300(0);\n        if (*0x801c20 == 0) {\n            *(arg1 + 0x10) = uVar5;\n        }\n        else {\n            fcn.0045dda0(arg1 + 0x10, arg1, in_R8, in_R9);\n        }\n        if (uVar4 != 0) {\n            iVar6 = fcn.0040c560();\n            if (*0x801c20 == 0) {\n                *(arg1 + 0x28) = iVar6;\n                *(iVar6 + 0x10) = uVar4;\n                iVar6 = arg1;\n            }\n            else {\n                fcn.0045dda0(arg1 + 0x28, arg1, in_R8, in_R9);\n                fcn.0045dea0(uVar4, arg1, in_R8, in_R9);\n                iVar6 = arg1;\n            }\n        }\n    }\n    return iVar6;\n}\n",
        "token_count": 770
    },
    "0040d300": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040d300(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    ulong uVar2;\n    int64_t arg2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint8_t unaff_BL;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    uint64_t in_R8;\n    uint64_t in_R9;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = 1 << (unaff_BL & 0x3f);\n            uVar7 = uVar6;\n            if (unaff_BL < 4) goto code_r0x0040d432;\n            in_R9 = (1 << (unaff_BL - 4 & 0x3f)) + uVar6;\n            uVar1 = **(in_RAX + 0x40);\n            in_R8 = in_R9 * uVar1;\n            if (in_R8 < 0x8000) {\n                if (0x3f8 < in_R8) {\n                    uVar7 = in_R8 - 0x381 >> 7;\n                    if (uVar7 < 0xf9) {\n                        if (\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                            [uVar7] < 0x44) {\n                            uVar4 = *(\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                      [uVar7] * 2 + 0x7985a0);\n                            goto code_r0x0040d400;\n                        }\n                        goto code_r0x0040d4ec;\n                    }\n                    goto code_r0x0040d4f9;\n                }\n                uVar7 = in_R8 + 7 >> 3;\n                if (uVar7 < 0x81) {\n                    uVar7 = *(uVar7 + 0x798460);\n                    if (uVar7 < 0x44) {\n                        uVar4 = *(uVar7 * 2 + 0x7985a0);\n                        goto code_r0x0040d400;\n                    }\n                    goto code_r0x0040d506;\n                }\n            }\n            else {\n                uVar4 = in_R8;\n                if (in_R8 < in_R8 + 0x2000 || in_R8 - (in_R8 + 0x2000) == 0) {\n                    uVar4 = in_R8 + 0x1fff & 0xffffffffffffe000;\n                }\ncode_r0x0040d400:\n                uVar7 = in_R9;\n                if (uVar4 == in_R8) goto code_r0x0040d432;\n                if (uVar1 != 0) {\n                    uVar7 = uVar4 / uVar1;\ncode_r0x0040d432:\n                    *(*0x20 + -0x10) = in_RAX;\n                    *(*0x20 + -0x28) = uVar6;\n                    *(*0x20 + -0x20) = uVar7;\n                    if (arg1 == 0) {\n                        uVar2 = *(in_RAX + 0x40);\n                        *(*0x20 + -0x40) = 0x40d48e;\n                        iVar3 = fcn.0040c5c0(uVar2, uVar7);\n                    }\n                    else {\n                        *(*0x20 + -0x18) = arg1;\n                        if (*(*(in_RAX + 0x40) + 8) == 0) {\n                            *(*0x20 + -0x40) = 0x40d475;\n                            fcn.0045e8c0();\n                        }\n                        else {\n                            *(*0x20 + -0x40) = 0x40d468;\n                            fcn.00410540();\n                        }\n                        iVar3 = *(*0x20 + -0x18);\n                    }\n                    arg2 = *(*0x20 + -0x28);\n                    if (*(*0x20 + -0x20) != arg2) {\n                        uVar7 = *(*(*0x20 + -0x10) + 0x52);\n                        if (*0x801c20 == 0) {\n                            *((*(*0x20 + -0x20) + -1) * uVar7 + iVar3 + uVar7 + -8) = iVar3;\n                        }\n                        else {\n                            *(*0x20 + -0x40) = 0x40d4d6;\n                            fcn.0045dda0(iVar3 + uVar7 * arg2, arg2, in_R8, in_R9);\n                        }\n                    }\n                    return;\n                }\n                *(*0x20 + -0x40) = 0x40d4ec;\n                fcn.00432100();\ncode_r0x0040d4ec:\n                *(*0x20 + -0x40) = 0x40d4f9;\n                fcn.0045e240(0x44);\ncode_r0x0040d4f9:\n                *(*0x20 + -0x40) = 0x40d506;\n                fcn.0045e260(0xf9);\ncode_r0x0040d506:\n                *(*0x20 + -0x40) = 0x40d513;\n                fcn.0045e240(0x44);\n            }\n            arg1 = 0x81;\n            *(*0x20 + -0x40) = 0x40d525;\n            in_RAX = fcn.0045e260(0x81);\n        }\n        *(puVar5 + 8) = in_RAX;\n        puVar5[0x10] = unaff_BL;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x40d539;\n        fcn.0045bb60();\n        in_RAX = *(puVar5 + 8);\n        unaff_BL = puVar5[0x10];\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1589
    },
    "0040d7a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.0040d7a0(ulong arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    char cVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t arg2;\n    int64_t iVar7;\n    uint8_t uVar8;\n    int64_t *piVar9;\n    uint64_t arg1_00;\n    int64_t arg1_01;\n    ulong uVar10;\n    ulong arg1_02;\n    int64_t **ppiVar11;\n    int64_t unaff_RBX;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    ulong in_R8;\n    int64_t arg3;\n    ulong in_R9;\n    int64_t arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX != 0) break;\n            unaff_RBX = 0x732a58;\n            *(*0x20 + -0x88) = 0x40dcbd;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar12 + 8) = in_RAX;\n        *(puVar12 + 0x10) = unaff_RBX;\n        *(puVar12 + 0x18) = arg1;\n        *(puVar12 + -8) = 0x40dcd2;\n        fcn.0045bb60();\n        in_RAX = *(puVar12 + 8);\n        unaff_RBX = *(puVar12 + 0x10);\n        arg1 = *(puVar12 + 0x18);\n        *0x20 = puVar12;\n    } while( true );\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + -0x10) = arg1;\n    if ((*(unaff_RBX + 8) & 4) != 0) {\n        *(*0x20 + -0x88) = 0x40d7f9;\n        fcn.00433d80();\n        in_RAX = *(*0x20 + 8);\n    }\n    pcVar2 = **(in_RAX + 0x48);\n    *(*0x20 + -0x88) = 0x40d822;\n    uVar4 = (*pcVar2)();\n    *(*0x20 + -0x58) = uVar4;\n    piVar9 = *(*0x20 + 0x10);\n    *(piVar9 + 1) = *(piVar9 + 1) ^ 4;\n    if (piVar9[2] == 0) {\n        uVar10 = *(*0x20 + 8);\n        *(*0x20 + -0x88) = 0x40d85b;\n        iVar5 = fcn.0040bba0();\n        if (*0x801c20 == 0) {\n            piVar9 = *(*0x20 + 0x10);\n            piVar9[2] = iVar5;\n        }\n        else {\n            piVar9 = *(*0x20 + 0x10);\n            *(*0x20 + -0x88) = 0x40d889;\n            fcn.0045dda0(piVar9, uVar10, in_R8, in_R9);\n        }\n        uVar4 = *(*0x20 + -0x58);\n    }\n    iVar5 = *(*0x20 + 8);\n    do {\n        arg1_00 = (1 << (*(piVar9 + 9) & 0x3f)) - 1U & uVar4;\n        if (piVar9[3] != 0) {\n            *(*0x20 + -0x50) = arg1_00;\n            *(*0x20 + -0x88) = 0x40d8ec;\n            fcn.0040df20(arg1_00);\n            uVar4 = *(*0x20 + -0x58);\n            arg1_00 = *(*0x20 + -0x50);\n            piVar9 = *(*0x20 + 0x10);\n            iVar5 = *(*0x20 + 8);\n        }\n        uVar1 = *(iVar5 + 0x52);\n        iVar7 = piVar9[2];\n        uVar6 = uVar4 >> 0x38;\n        if (uVar4 >> 0x38 < 5) {\n            uVar6 = (uVar4 >> 0x38) + 5;\n        }\n        *(*0x20 + -0x61) = uVar6;\n        arg2 = 0;\n        arg3 = 0;\n        arg4 = 0;\n        iVar7 = arg1_00 * uVar1 + iVar7;\n        do {\n            arg1_01 = iVar7;\n            *(*0x20 + -0x28) = arg1_01;\n            for (uVar4 = 0; uVar4 < 8; uVar4 = uVar4 + 1) {\n                uVar8 = *(arg1_01 + uVar4);\n                if (uVar6 == uVar8) {\n                    *(*0x20 + -0x60) = uVar4;\n                    *(*0x20 + -0x30) = arg4;\n                    *(*0x20 + -0x40) = arg3;\n                    *(*0x20 + -0x38) = arg2;\n                    piVar9 = *(iVar5 + 0x50) * uVar4 + arg1_01 + 8;\n                    if ((*(iVar5 + 0x54) & 1) != 0) {\n                        piVar9 = *piVar9;\n                    }\n                    *(*0x20 + -0x48) = piVar9;\n                    pcVar2 = **(*(iVar5 + 0x30) + 0x18);\n                    *(*0x20 + -0x88) = 0x40da97;\n                    cVar3 = (*pcVar2)();\n                    if (cVar3 != '\\0') {\n                        iVar5 = *(*0x20 + 8);\n                        if ((*(iVar5 + 0x54) >> 3 & 1) != 0) {\n                            *(*0x20 + -0x88) = 0x40daf7;\n                            fcn.00410240(*(*0x20 + -0x10));\n                            iVar5 = *(*0x20 + 8);\n                        }\n                        ppiVar11 = *(*0x20 + -0x28) + *(iVar5 + 0x51) * *(*0x20 + -0x60) + *(iVar5 + 0x50) * 8 + 8;\n                        goto code_r0x0040dc4a;\n                    }\n                    uVar6 = *(*0x20 + -0x61);\n                    arg1_01 = *(*0x20 + -0x28);\n                    piVar9 = *(*0x20 + 0x10);\n                    iVar5 = *(*0x20 + 8);\n                    uVar4 = *(*0x20 + -0x60);\n                    arg2 = *(*0x20 + -0x38);\n                    arg3 = *(*0x20 + -0x40);\n                    arg4 = *(*0x20 + -0x30);\n                }\n                else {\n                    if ((uVar8 < 2) && (arg2 == 0)) {\n                        arg3 = uVar4 * *(iVar5 + 0x50) + arg1_01 + 8;\n                        arg4 = *(iVar5 + 0x51) * uVar4 + *(iVar5 + 0x50) * 8 + arg1_01 + 8;\n                        arg2 = arg1_01 + uVar4;\n                    }\n                    if (uVar8 == 0) goto code_r0x0040d934;\n                }\n            }\n            iVar7 = *(arg1_01 + *(iVar5 + 0x52) + -8);\n        } while (iVar7 != 0);\ncode_r0x0040d934:\n        if (piVar9[3] != 0) goto code_r0x0040db29;\n        uVar8 = *(piVar9 + 9);\n        if ((*piVar9 + 1U < 9) ||\n           (uVar4 = 1 << (uVar8 & 0x3f),  *piVar9 + 1U <= (uVar4 >> 1) * 5 + (uVar4 & 0xfffffffffffffffe) * 4)) {\n            if (0xf < uVar8) {\n                uVar8 = 0xf;\n            }\n            if (*(piVar9 + 10) < 1 << (uVar8 & 0xf)) {\ncode_r0x0040db29:\n                if (arg2 == 0) {\n                    *(*0x20 + -0x88) = 0x40db3c;\n                    arg2 = fcn.0040cda0(arg1_01);\n                    iVar5 = *(*0x20 + 8);\n                    arg3 = arg2 + 8;\n                    arg4 = arg2 + *(iVar5 + 0x50) * 8 + 8;\n                }\n                *(*0x20 + -0x30) = arg4;\n                *(*0x20 + -0x38) = arg2;\n                iVar7 = arg3;\n                if ((*(iVar5 + 0x54) & 1) != 0) {\n                    *(*0x20 + -0x18) = arg3;\n                    uVar10 = 1;\n                    *(*0x20 + -0x88) = 0x40db93;\n                    iVar7 = fcn.0040bba0();\n                    if (*0x801c20 == 0) {\n                        **(*0x20 + -0x18) = iVar7;\n                    }\n                    else {\n                        *(*0x20 + -0x88) = 0x40dbad;\n                        iVar7 = fcn.0045dda0(uVar10, arg2, arg3, arg4);\n                    }\n                    arg2 = *(*0x20 + -0x38);\n                    iVar5 = *(*0x20 + 8);\n                    arg4 = *(*0x20 + -0x30);\n                }\n                if ((*(iVar5 + 0x54) >> 1 & 1) != 0) {\n                    *(*0x20 + -0x40) = iVar7;\n                    arg1_02 = 1;\n                    *(*0x20 + -0x88) = 0x40dbee;\n                    uVar10 = fcn.0040bba0();\n                    if (*0x801c20 == 0) {\n                        **(*0x20 + -0x30) = uVar10;\n                    }\n                    else {\n                        *(*0x20 + -0x88) = 0x40dc08;\n                        fcn.0045dda0(arg1_02, arg2, iVar7, arg4);\n                    }\n                }\n                *(*0x20 + -0x88) = 0x40dc26;\n                fcn.00410240(*(*0x20 + -0x10));\n                **(*0x20 + -0x38) = *(*0x20 + -0x61);\n                **(*0x20 + 0x10) = **(*0x20 + 0x10) + 1;\n                iVar5 = *(*0x20 + 8);\n                ppiVar11 = *(*0x20 + -0x30);\ncode_r0x0040dc4a:\n                iVar7 = *(*0x20 + 0x10);\n                if ((*(iVar7 + 8) & 4) == 0) {\n                    *(*0x20 + -0x20) = ppiVar11;\n                    *(*0x20 + -0x88) = 0x40dc72;\n                    fcn.00433d80();\n                    ppiVar11 = *(*0x20 + -0x20);\n                    iVar5 = *(*0x20 + 8);\n                    iVar7 = *(*0x20 + 0x10);\n                }\n                *(iVar7 + 8) = *(iVar7 + 8) & 0xfb;\n                if ((*(iVar5 + 0x54) >> 1 & 1) != 0) {\n                    ppiVar11 = *ppiVar11;\n                }\n                return ppiVar11;\n            }\n        }\n        *(*0x20 + -0x88) = 0x40d8a5;\n        fcn.0040dd00();\n        piVar9 = *(*0x20 + 0x10);\n        uVar4 = *(*0x20 + -0x58);\n        iVar5 = *(*0x20 + 8);\n    } while( true );\n}\n",
        "token_count": 2951
    },
    "0040dd00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040dd00(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong in_RAX;\n    ulong uVar1;\n    ulong *arg2;\n    int32_t iVar2;\n    ulong *puVar3;\n    ulong *arg1;\n    uint32_t uVar4;\n    int64_t *unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*unaff_RBX + 1U < 9) ||\n               (uVar6 = 1 << (*(unaff_RBX + 9) & 0x3f), \n               *unaff_RBX + 1U <= (uVar6 >> 1) * 5 + (uVar6 & 0xfffffffffffffffe) * 4)) {\n                *(unaff_RBX + 1) = *(unaff_RBX + 1) | 8;\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = 1;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x19) = iVar2;\n            *(*0x20 + -0x18) = unaff_RBX[2];\n            uVar6 = *(unaff_RBX + 9) + iVar2;\n            *(*0x20 + -0x40) = 0x40dd79;\n            uVar1 = fcn.0040d300(0);\n            arg2 = *(*0x20 + 0x10);\n            uVar4 = *(arg2 + 1) & 0xfffffffc;\n            if ((*(arg2 + 1) & 1) != 0) {\n                uVar4 = uVar4 | 2;\n            }\n            *(arg2 + 9) = *(arg2 + 9) + *(*0x20 + -0x19);\n            *(arg2 + 1) = uVar4;\n            if (*0x801c20 == 0) {\n                arg2[3] = *(*0x20 + -0x18);\n                arg2[2] = uVar1;\n                puVar3 = uVar4;\n            }\n            else {\n                puVar3 = arg2 + 3;\n                *(*0x20 + -0x40) = 0x40ddcd;\n                fcn.0045df00(puVar3, arg2, param_3, param_4);\n                *(*0x20 + -0x40) = 0x40ddd6;\n                fcn.0045dda0(puVar3, arg2, param_3, param_4);\n                puVar3 = arg2;\n            }\n            arg2[4] = 0;\n            *(arg2 + 10) = 0;\n            arg1 = arg2[5];\n            if ((arg1 == NULL) || (puVar3 = *arg1,  puVar3 == NULL)) goto code_r0x0040de52;\n            if (arg1[1] == 0) {\n                if (*0x801c20 == 0) {\n                    arg1[1] = puVar3;\n                }\n                else {\n                    *(*0x20 + -0x40) = 0x40de25;\n                    arg2 = fcn.0045dec0(arg1 + 1, puVar3, param_3, param_4);\n                }\n                arg1 = arg2[5];\n                if (*0x801c20 == 0) {\n                    *arg1 = 0;\n                }\n                else {\n                    puVar3 = NULL;\n                    *(*0x20 + -0x40) = 0x40de4f;\n                    arg2 = fcn.0045dec0(arg1, 0, param_3, param_4);\n                }\ncode_r0x0040de52:\n                if (uVar6 != 0) {\n                    if (arg2[5] == 0) {\n                        *(*0x20 + -0x10) = uVar6;\n                        *(*0x20 + -0x40) = 0x40de6f;\n                        uVar1 = fcn.0040c560();\n                        if (*0x801c20 == 0) {\n                            arg1 = *(*0x20 + 0x10);\n                            arg1[5] = uVar1;\n                        }\n                        else {\n                            arg1 = *(*0x20 + 0x10);\n                            *(*0x20 + -0x40) = 0x40de97;\n                            fcn.0045dda0(arg1 + 5, arg1, param_3, param_4);\n                            puVar3 = arg1;\n                        }\n                        uVar6 = *(*0x20 + -0x10);\n                        arg2 = arg1;\n                    }\n                    if (*0x801c20 == 0) {\n                        *(arg2[5] + 0x10) = uVar6;\n                    }\n                    else {\n                        *(*0x20 + -0x40) = 0x40dec5;\n                        fcn.0045dee0(arg1, puVar3, param_3, param_4);\n                    }\n                }\n                return;\n            }\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x40) = 0x40dee5;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + -8) = 0x40def5;\n        fcn.0045bb60();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1408
    },
    "0040df20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040df20(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    uVar1 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar1 = uVar1 - 1;\n    }\n    fcn.0040dfc0((1 << (uVar1 & 0x3f)) - 1U & arg1);\n    if (*(unaff_RBX + 0x18) != 0) {\n        fcn.0040dfc0(*(unaff_RBX + 0x20));\n    }\n    return;\n}\n",
        "token_count": 214
    },
    "0040e9a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040e9a0(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    uint8_t uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint8_t uVar7;\n    int64_t *arg1_00;\n    uint64_t uVar8;\n    int64_t arg1_01;\n    int64_t unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    ulong in_R8;\n    ulong in_R9;\n    uint64_t uVar10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if (unaff_RBX != 0) break;\n            unaff_RBX = 0x732a58;\n            *(*0x20 + -0x40) = 0x40ec9a;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        *(puVar9 + 0x18) = arg1;\n        *(puVar9 + -8) = 0x40ecae;\n        fcn.0045bb60();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        arg1._0_4_ = *(puVar9 + 0x18);\n        *0x20 = puVar9;\n    } while( true );\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + 8) = in_RAX;\n    if ((*(unaff_RBX + 8) & 4) != 0) {\n        *(*0x20 + -0x40) = 0x40e9ed;\n        fcn.00433d80();\n        in_RAX = *(*0x20 + 8);\n    }\n    pcVar1 = **(in_RAX + 0x48);\n    *(*0x20 + -0x40) = 0x40ea0b;\n    uVar4 = (*pcVar1)();\n    *(*0x20 + -0x20) = uVar4;\n    arg1_00 = *(*0x20 + 0x10);\n    *(arg1_00 + 1) = *(arg1_00 + 1) ^ 4;\n    if (arg1_00[2] == 0) {\n        *(*0x20 + -0x40) = 0x40ea3c;\n        iVar5 = fcn.0040bba0();\n        if (*0x801c20 == 0) {\n            arg1_00 = *(*0x20 + 0x10);\n            arg1_00[2] = iVar5;\n        }\n        else {\n            arg1_00 = *(*0x20 + 0x10);\n            *(*0x20 + -0x40) = 0x40ea65;\n            fcn.0045dda0(arg1_00, arg1_00 + 2, in_R8, in_R9);\n        }\n        uVar4 = *(*0x20 + -0x20);\n    }\n    iVar5 = *(*0x20 + 8);\n    do {\n        uVar8 = (1 << (*(arg1_00 + 9) & 0x3f)) - 1U & uVar4;\n        if (arg1_00[3] != 0) {\n            *(*0x20 + -0x18) = uVar8;\n            *(*0x20 + -0x40) = 0x40eaba;\n            fcn.0040ece0(uVar8);\n            uVar4 = *(*0x20 + -0x20);\n            uVar8 = *(*0x20 + -0x18);\n            iVar5 = *(*0x20 + 8);\n            arg1_00 = *(*0x20 + 0x10);\n        }\n        uVar3 = uVar4 >> 0x38;\n        iVar6 = 0;\n        uVar4 = 0;\n        iVar2 = uVar8 * *(iVar5 + 0x52) + arg1_00[2];\n        do {\n            arg1_01 = iVar2;\n            for (uVar8 = 0; uVar8 < 8; uVar8 = uVar8 + 1) {\n                if (*(arg1_01 + uVar8) < 2) {\n                    uVar10 = uVar8;\n                    iVar2 = arg1_01;\n                    if (iVar6 != 0) {\n                        uVar10 = uVar4;\n                        iVar2 = iVar6;\n                    }\n                    iVar6 = iVar2;\n                    uVar4 = uVar10;\n                    if (*(arg1_01 + uVar8) == 0) goto code_r0x0040eaeb;\n                }\n                else if (*(*0x20 + 0x18) == *(arg1_01 + uVar8 * 4 + 8)) goto code_r0x0040ec3a;\n            }\n            iVar2 = *(arg1_01 + *(iVar5 + 0x52) + -8);\n        } while (iVar2 != 0);\ncode_r0x0040eaeb:\n        if (arg1_00[3] != 0) goto code_r0x0040ebe2;\n        uVar7 = *(arg1_00 + 9);\n        if ((*arg1_00 + 1U < 9) ||\n           (uVar8 = 1 << (uVar7 & 0x3f),  *arg1_00 + 1U <= (uVar8 >> 1) * 5 + (uVar8 & 0xfffffffffffffffe) * 4)) {\n            if (0xf < uVar7) {\n                uVar7 = 0xf;\n            }\n            if (*(arg1_00 + 10) < 1 << (uVar7 & 0xf)) {\ncode_r0x0040ebe2:\n                uVar8 = uVar4;\n                if (iVar6 == 0) {\n                    *(*0x20 + -0x40) = 0x40ebf5;\n                    iVar6 = fcn.0040cda0(arg1_01);\n                    iVar5 = *(*0x20 + 8);\n                    arg1_00 = *(*0x20 + 0x10);\n                    uVar8 = 0;\n                    uVar3 = *(*0x20 + -0x20) >> 0x38;\n                }\n                arg1_01 = iVar6;\n                if (uVar3 < 5) {\n                    uVar3 = uVar3 + 5;\n                }\n                *(arg1_01 + (uVar8 & 7)) = uVar3;\n                *(arg1_01 + uVar8 * 4 + 8) = *(*0x20 + 0x18);\n                *arg1_00 = *arg1_00 + 1;\ncode_r0x0040ec3a:\n                iVar5 = uVar8 * *(iVar5 + 0x51) + arg1_01 + 0x28;\n                if ((*(arg1_00 + 1) & 4) == 0) {\n                    *(*0x20 + -0x10) = iVar5;\n                    *(*0x20 + -0x40) = 0x40ec69;\n                    fcn.00433d80();\n                    iVar5 = *(*0x20 + -0x10);\n                    arg1_00 = *(*0x20 + 0x10);\n                }\n                *(arg1_00 + 1) = *(arg1_00 + 1) & 0xfb;\n                return iVar5;\n            }\n        }\n        *(*0x20 + -0x40) = 0x40ea7c;\n        fcn.0040dd00();\n        arg1_00 = *(*0x20 + 0x10);\n        uVar4 = *(*0x20 + -0x20);\n        iVar5 = *(*0x20 + 8);\n    } while( true );\n}\n",
        "token_count": 1929
    },
    "0040ece0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040ece0(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    uVar1 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar1 = uVar1 - 1;\n    }\n    fcn.0040ed80((1 << (uVar1 & 0x3f)) - 1U & arg1);\n    if (*(unaff_RBX + 0x18) != 0) {\n        fcn.0040ed80(*(unaff_RBX + 0x20));\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "0040f960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040f960(ulong arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    ulong arg1_00;\n    ulong uVar4;\n    uint8_t uVar5;\n    int64_t in_RAX;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t arg3;\n    uint8_t uVar9;\n    int64_t *arg1_01;\n    uint64_t uVar10;\n    int64_t arg1_02;\n    int64_t unaff_RBX;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t *arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            if (unaff_RBX != 0) break;\n            unaff_RBX = 0x732a58;\n            *(*0x20 + -0x70) = 0x40fd3a;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + 0x10) = unaff_RBX;\n        *(puVar11 + 0x18) = arg1;\n        *(puVar11 + 0x20) = unaff_RDI;\n        *(puVar11 + -8) = 0x40fd54;\n        fcn.0045bb60();\n        in_RAX = *(puVar11 + 8);\n        unaff_RBX = *(puVar11 + 0x10);\n        arg1 = *(puVar11 + 0x18);\n        unaff_RDI = *(puVar11 + 0x20);\n        *0x20 = puVar11;\n    } while( true );\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + 8) = in_RAX;\n    if ((*(unaff_RBX + 8) & 4) != 0) {\n        *(*0x20 + -0x70) = 0x40f9b6;\n        fcn.00433d80();\n        in_RAX = *(*0x20 + 8);\n    }\n    pcVar2 = **(in_RAX + 0x48);\n    *(*0x20 + -0x70) = 0x40f9d7;\n    uVar6 = (*pcVar2)();\n    *(*0x20 + -0x40) = uVar6;\n    arg1_01 = *(*0x20 + 0x10);\n    *(arg1_01 + 1) = *(arg1_01 + 1) ^ 4;\n    if (arg1_01[2] == 0) {\n        *(*0x20 + -0x70) = 0x40fa08;\n        iVar7 = fcn.0040bba0();\n        if (*0x801c20 == 0) {\n            arg1_01 = *(*0x20 + 0x10);\n            arg1_01[2] = iVar7;\n        }\n        else {\n            arg1_01 = *(*0x20 + 0x10);\n            *(*0x20 + -0x70) = 0x40fa30;\n            fcn.0045dda0(arg1_01, arg1_01 + 2, in_R8, in_R9);\n        }\n        uVar6 = *(*0x20 + -0x40);\n    }\n    iVar7 = *(*0x20 + 8);\n    do {\n        uVar10 = (1 << (*(arg1_01 + 9) & 0x3f)) - 1U & uVar6;\n        if (arg1_01[3] != 0) {\n            *(*0x20 + -0x38) = uVar10;\n            *(*0x20 + -0x70) = 0x40fa85;\n            fcn.0040fd80(uVar10);\n            uVar6 = *(*0x20 + -0x40);\n            uVar10 = *(*0x20 + -0x38);\n            iVar7 = *(*0x20 + 8);\n            arg1_01 = *(*0x20 + 0x10);\n        }\n        uVar1 = *(iVar7 + 0x52);\n        iVar3 = arg1_01[2];\n        uVar8 = uVar6 >> 0x38;\n        if (uVar6 >> 0x38 < 5) {\n            uVar8 = (uVar6 >> 0x38) + 5;\n        }\n        *(*0x20 + -0x49) = uVar8;\n        arg3 = 0;\n        uVar6 = 0;\n        iVar3 = uVar10 * uVar1 + iVar3;\n        do {\n            arg1_02 = iVar3;\n            *(*0x20 + -0x10) = arg1_02;\n            for (uVar10 = 0; uVar5 = uVar8,  uVar10 < 8; uVar10 = uVar10 + 1) {\n                uVar9 = *(arg1_02 + uVar10);\n                if (uVar5 == uVar9) {\n                    iVar3 = uVar10 * 0x10 + arg1_02;\n                    arg4 = iVar3 + 8;\n                    if (*(iVar3 + 0x10) == *(*0x20 + 0x20)) {\n                        if (*(*0x20 + 0x18) == *arg4) {\n                            uVar5 = 0;\n                        }\n                        else {\n                            *(*0x20 + -0x30) = uVar10;\n                            *(*0x20 + -0x20) = arg4;\n                            *(*0x20 + -0x48) = uVar6;\n                            *(*0x20 + -0x18) = arg3;\n                            *(*0x20 + -0x70) = 0x40fbf6;\n                            uVar5 = fcn.00402a00(*(*0x20 + 0x20), iVar7);\n                            uVar5 = uVar5 ^ 1;\n                            iVar7 = *(*0x20 + 8);\n                            arg1_01 = *(*0x20 + 0x10);\n                            arg3 = *(*0x20 + -0x18);\n                            uVar6 = *(*0x20 + -0x48);\n                            arg4 = *(*0x20 + -0x20);\n                            uVar10 = *(*0x20 + -0x30);\n                            arg1_02 = *(*0x20 + -0x10);\n                            uVar8 = *(*0x20 + -0x49);\n                        }\n                        if (uVar5 == 0) {\n                            if (*0x801c20 == 0) {\n                                *arg4 = *(*0x20 + 0x18);\n                            }\n                            else {\n                                *(*0x20 + -0x70) = 0x40fc58;\n                                fcn.0045dea0(*(*0x20 + 0x18), iVar7, uVar6, arg4);\n                            }\n                            goto code_r0x0040fcd7;\n                        }\n                    }\n                }\n                else {\n                    if ((uVar9 < 2) && (arg3 == 0)) {\n                        arg3 = arg1_02;\n                        uVar6 = uVar10;\n                    }\n                    if (uVar9 == 0) goto code_r0x0040fac8;\n                }\n            }\n            iVar3 = *(arg1_02 + *(iVar7 + 0x52) + -8);\n        } while (iVar3 != 0);\ncode_r0x0040fac8:\n        if (arg1_01[3] != 0) goto code_r0x0040fc60;\n        uVar9 = *(arg1_01 + 9);\n        if ((*arg1_01 + 1U < 9) ||\n           (uVar10 = 1 << (uVar9 & 0x3f),  *arg1_01 + 1U <= (uVar10 >> 1) * 5 + (uVar10 & 0xfffffffffffffffe) * 4)) {\n            if (0xf < uVar9) {\n                uVar9 = 0xf;\n            }\n            if (*(arg1_01 + 10) < 1 << (uVar9 & 0xf)) {\ncode_r0x0040fc60:\n                if (arg3 == 0) {\n                    *(*0x20 + -0x70) = 0x40fc73;\n                    arg3 = fcn.0040cda0(arg1_02);\n                    iVar7 = *(*0x20 + 8);\n                    arg1_01 = *(*0x20 + 0x10);\n                    uVar6 = 0;\n                    uVar5 = *(*0x20 + -0x49);\n                }\n                *(arg3 + (uVar6 & 7)) = uVar5;\n                iVar3 = arg3 + uVar6 * 0x10;\n                arg1_00 = *(*0x20 + 0x20);\n                uVar4 = *(*0x20 + 0x18);\n                *(iVar3 + 0x10) = arg1_00;\n                if (*0x801c20 == 0) {\n                    *(iVar3 + 8) = uVar4;\n                }\n                else {\n                    *(*0x20 + -0x70) = 0x40fcce;\n                    fcn.0045df40(arg1_00, iVar7, arg3);\n                }\n                *arg1_01 = *arg1_01 + 1;\n                uVar10 = uVar6;\n                arg1_02 = arg3;\ncode_r0x0040fcd7:\n                iVar7 = uVar10 * *(iVar7 + 0x51) + arg1_02 + 0x88;\n                if ((*(arg1_01 + 1) & 4) == 0) {\n                    *(*0x20 + -0x28) = iVar7;\n                    *(*0x20 + -0x70) = 0x40fd09;\n                    fcn.00433d80();\n                    iVar7 = *(*0x20 + -0x28);\n                    arg1_01 = *(*0x20 + 0x10);\n                }\n                *(arg1_01 + 1) = *(arg1_01 + 1) & 0xfb;\n                return iVar7;\n            }\n        }\n        *(*0x20 + -0x70) = 0x40fa47;\n        fcn.0040dd00();\n        arg1_01 = *(*0x20 + 0x10);\n        uVar6 = *(*0x20 + -0x40);\n        iVar7 = *(*0x20 + 8);\n    } while( true );\n}\n",
        "token_count": 2548
    },
    "0040fd80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040fd80(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    uVar1 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar1 = uVar1 - 1;\n    }\n    fcn.0040fe20((1 << (uVar1 & 0x3f)) - 1U & arg1);\n    if (*(unaff_RBX + 0x18) != 0) {\n        fcn.0040fe20(*(unaff_RBX + 0x20));\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "00410240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00410240(int64_t arg1)\n\n{\n    ulong *in_RAX;\n    int64_t unaff_RBX;\n    \n    if (unaff_RBX != arg1) {\n        if ((*0x801c24 != '\\0') && (in_RAX[1] != 0)) {\n            fcn.00410cc0(in_RAX[1]);\n        }\n        fcn.0045ebc0(*in_RAX);\n        if (*0x801c25 != '\\0') {\n            fcn.00404020(arg1);\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "004102e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004102e0(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t arg1_00;\n    int64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    uint32_t uVar4;\n    \n    if ((((*0x801c24 != '\\0') && (in_RAX != 0)) && (*(in_RAX + 8) != 0)) && (7 < unaff_RDI)) {\n        fcn.00410cc0(unaff_RDI);\n    }\n    fcn.0045ebc0(unaff_RDI);\n    iVar2 = 0;\n    while( true ) {\n        if (8 < iVar2) {\n            return;\n        }\n        uVar3 = iVar2 >> 3;\n        if (1 < uVar3) break;\n        arg1_00 = iVar2 + uVar3 * -8;\n        if (arg1_00 < 0) {\n            fcn.004320a0();\n            break;\n        }\n        uVar4 = 1 << (arg1_00 & 0x1f) & -(arg1_00 < 0x20);\n        if ((uVar4 & *(unaff_RSI + 0x108 + uVar3)) != 0) {\n            if (*0x801c20 == 0) {\n                *(unaff_RSI + 0xc0 + iVar2 * 8) = *(unaff_RSI + iVar2 * 8);\n            }\n            else {\n                fcn.0045dee0(arg1_00, unaff_RSI, -(arg1_00 < 0x20), uVar4);\n            }\n        }\n        iVar2 = iVar2 + 1;\n    }\n    fcn.0045e240(2);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 434
    },
    "00410400": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00410400(int64_t arg1)\n\n{\n    int64_t *in_RAX;\n    int64_t arg1_00;\n    int64_t unaff_RBX;\n    int64_t unaff_RSI;\n    int64_t unaff_RDI;\n    \n    if (unaff_RSI < arg1) {\n        arg1 = unaff_RSI;\n    }\n    if (arg1 == 0) {\n        return 0;\n    }\n    if (*0x801c25 != '\\0') {\n        fcn.004040c0(unaff_RDI);\n    }\n    if (unaff_RDI != unaff_RBX) {\n        arg1_00 = arg1 * *in_RAX;\n        if (*0x801c24 != '\\0') {\n            fcn.00410cc0((arg1_00 - *in_RAX) + in_RAX[1]);\n        }\n        fcn.0045ebc0(arg1_00);\n        return arg1;\n    }\n    return arg1;\n}\n",
        "token_count": 227
    },
    "004104e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004104e0(void)\n\n{\n    ulong *in_RAX;\n    \n    if ((*0x801c24 != '\\0') && (in_RAX[1] != 0)) {\n        fcn.00410cc0(in_RAX[1]);\n    }\n    fcn.0045e8c0(*in_RAX);\n    return;\n}\n",
        "token_count": 80
    },
    "00410700": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00410700(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00435540();\n    fcn.00435540();\n    fcn.00435e40();\n    fcn.00435ca0();\n    fcn.004355c0();\n    if (in_RAX != 0) {\n        if (*(in_RAX + 99) == '\\x01') {\n            fcn.00435540();\n            fcn.00435e40();\n            fcn.004355c0();\n        }\n        else {\n            fcn.00435540();\n            fcn.00435e40();\n            fcn.004355c0();\n        }\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.00435ca0();\n        fcn.00435e40();\n        fcn.00435ca0();\n        fcn.00435e40();\n        fcn.00435b40();\n        fcn.004355c0();\n    }\n    fcn.00435540();\n    fcn.004357a0();\n    fcn.004355c0();\n    if (arg1 != 0) goto code_r0x00410850;\n    do {\n        *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n        fcn.00433c80();\ncode_r0x00410850:\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.00435ca0();\n        fcn.00435e40();\n        fcn.00435ca0();\n        fcn.00435e40();\n        fcn.004355c0();\n        fcn.0041cd40(arg1);\n    } while( true );\n}\n",
        "token_count": 449
    },
    "00410940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00410940(ulong arg1)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x7d3e10);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 != 0) {\n        if (((*(iVar2 + 99) == '\\x01') && (uVar1 = *(iVar2 + 0x18),  uVar1 <= in_RAX)) &&\n           (in_RAX <= *(iVar2 + 0x70) && *(iVar2 + 0x70) != in_RAX)) {\n            return *(iVar2 + 0x68) * (*(iVar2 + 0x5c) * (in_RAX - uVar1) >> 0x20) + uVar1;\n        }\n        if (*(iVar2 + 99) != '\\x02') {\n            if (*0x801e80 != 0) {\n                fcn.00410700(unaff_RBX);\n            }\n            return 0;\n        }\n        return 0;\n    }\n    if ((in_RAX == 0xdeaddeaddeaddead) && (*0x801e80 != 0)) {\n        fcn.00410700(unaff_RBX);\n    }\n    return 0;\n}\n",
        "token_count": 463
    },
    "00411340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00411340(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_RSI;\n    uint8_t *puVar5;\n    int64_t iVar6;\n    uint64_t unaff_RDI;\n    uint32_t uVar7;\n    int64_t unaff_R14;\n    int64_t iVar8;\n    \n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    uVar7 = 1 << (unaff_RDI >> 3 & 7);\n    puVar5 = unaff_RSI + (unaff_RDI >> 6);\n    uVar4 = 0;\n    iVar8 = unaff_RBX;\n    do {\n        if (arg1 <= uVar4) {\n            return;\n        }\n        if (uVar7 == '\\0') {\n            if (puVar5[1] != 0) {\n                uVar7 = 1;\n                puVar5 = puVar5 + 1;\n                goto code_r0x004113c9;\n            }\n            uVar4 = uVar4 + 0x38;\n            puVar5 = puVar5 + 1;\n        }\n        else {\ncode_r0x004113c9:\n            if ((*puVar5 & uVar7) != 0) {\n                if (unaff_RBX == 0) {\n                    puVar2 = *(iVar1 + 0x1268);\n                    *puVar2 = *(uVar4 + in_RAX);\n                    puVar2[1] = 0;\n                    iVar6 = *(iVar1 + 0x1268) + 0x10;\n                    *(iVar1 + 0x1268) = iVar6;\n                    if (*(iVar1 + 0x1270) == iVar6) {\n                        unaff_RBX = iVar8;\n                        fcn.0042cee0();\n                        uVar7 = uVar7 & 0xff;\n                        iVar8 = unaff_RBX;\n                    }\n                }\n                else {\n                    puVar2 = *(iVar1 + 0x1268);\n                    uVar3 = *(uVar4 + unaff_RBX);\n                    *puVar2 = *(uVar4 + in_RAX);\n                    puVar2[1] = uVar3;\n                    iVar6 = *(iVar1 + 0x1268) + 0x10;\n                    *(iVar1 + 0x1268) = iVar6;\n                    if (*(iVar1 + 0x1270) == iVar6) {\n                        unaff_RBX = iVar8;\n                        fcn.0042cee0();\n                        uVar7 = uVar7 & 0xff;\n                        iVar8 = unaff_RBX;\n                    }\n                }\n            }\n            uVar7 = uVar7 << 1;\n        }\n        uVar4 = uVar4 + 8;\n    } while( true );\n}\n",
        "token_count": 670
    },
    "004114e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004114e0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    code *pcVar4;\n    int64_t *in_RAX;\n    int64_t unaff_RBX;\n    uint8_t *puVar5;\n    int64_t unaff_RDI;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    int64_t iVar9;\n    \n    if (in_RAX != NULL) {\n        if (*in_RAX == unaff_RDI) {\n            if ((*(in_RAX + 0x17) & 0x40) == 0) {\n                if (*0x801c24 != '\\0') {\n                    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n                    puVar5 = in_RAX[4];\n                    uVar7 = 0;\n                    iVar9 = unaff_RBX;\n                    for (uVar6 = 0; uVar6 <= in_RAX[1] && in_RAX[1] != uVar6; uVar6 = uVar6 + 8) {\n                        if ((uVar6 & 0x3f) == 0) {\n                            uVar7 = *puVar5;\n                            puVar5 = puVar5 + 1;\n                        }\n                        else {\n                            uVar7 = uVar7 >> 1;\n                        }\n                        if ((uVar7 & 1) != 0) {\n                            puVar2 = *(iVar1 + 0x1268);\n                            uVar3 = *(uVar6 + arg1);\n                            *puVar2 = *(uVar6 + unaff_RBX);\n                            puVar2[1] = uVar3;\n                            iVar8 = *(iVar1 + 0x1268) + 0x10;\n                            *(iVar1 + 0x1268) = iVar8;\n                            if (*(iVar1 + 0x1270) == iVar8) {\n                                unaff_RBX = iVar9;\n                                fcn.0042cee0();\n                                iVar9 = unaff_RBX;\n                            }\n                        }\n                    }\n                    return;\n                }\n                return;\n            }\n            fcn.004569c0();\n            fcn.00435540();\n            fcn.00435e40();\n            fcn.00435e40();\n            fcn.00435e40();\n            fcn.004355c0();\n            fcn.00433c80();\n        }\n        fcn.004569c0();\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.00435e40();\n        fcn.00435e40();\n        fcn.00435b40();\n        fcn.00435e40();\n        fcn.00435b40();\n        fcn.004357a0();\n        fcn.004355c0();\n        fcn.00433c80();\n    }\n    fcn.00433c80();\n    pcVar4 = swi(3);\n    (*pcVar4)();\n    return;\n}\n",
        "token_count": 691
    },
    "004124c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004124c0(ulong arg1, ulong noname_1, uint64_t arg3, uint64_t arg4)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    uint unaff_EBX;\n    uint64_t uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    ulong unaff_RDI;\n    uint64_t uVar6;\n    uint64_t in_R10;\n    ulong in_R11;\n    uint64_t unaff_R12;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        uVar4 = unaff_RSI;\n        uVar6 = arg3;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = unaff_RDI;\n            if ((in_R10 & 0x1f) == 0) {\n                *(*0x20 + 0x38) = in_R10;\n                *(*0x20 + 0x20) = unaff_RSI;\n                *(*0x20 + -0x10) = in_RAX;\n                if (arg4 == arg3) {\n                    unaff_RDI = 2;\n                    *(*0x20 + -0x70) = 0x41258c;\n                    arg3 = fcn.00412960(in_RAX);\n                    uVar4 = *(*0x20 + 0x20);\n                    if (uVar4 != arg3 * 8) {\n                        *(*0x20 + -0x40) = arg3;\n                        *(*0x20 + -0x70) = 0x4125e8;\n                        fcn.00435540();\n                        *(*0x20 + -0x70) = 0x4125f9;\n                        fcn.00435e40();\n                        *(*0x20 + -0x70) = 0x412605;\n                        fcn.00435b40();\n                        *(*0x20 + -0x70) = 0x412616;\n                        fcn.00435e40();\n                        *(*0x20 + -0x70) = 0x412625;\n                        fcn.00435b40();\n                        *(*0x20 + -0x70) = 0x41262a;\n                        fcn.004357a0();\n                        *(*0x20 + -0x70) = 0x41262f;\n                        fcn.004355c0();\n                        uVar2 = 0x2b;\n                        *(*0x20 + -0x70) = 0x412645;\n                        uVar1 = fcn.00433c80();\n                        goto code_r0x00412645;\n                    }\ncode_r0x004125a5:\n                    *(*0x20 + -0x70) = 0x4125d4;\n                    fcn.0045e8c0(*(*0x20 + -0x10) + (arg3 + 3 >> 2), *(*0x20 + 0x38) >> 5);\n                    return;\n                }\n                if (arg3 != 0) {\n                    uVar1 = arg4 / arg3;\n                    *(*0x20 + -0x38) = in_XMM15;\n                    *(*0x20 + -0x30) = in_XMM15;\n                    *(*0x20 + -0x20) = in_XMM15;\n                    unaff_R12 = arg3 >> 3;\n                    uVar4 = unaff_RSI >> 3;\n                    uVar6 = unaff_R12 - uVar4;\n                    arg4 = unaff_RSI;\n                    if (uVar6 == 0) {\n                        uVar2 = 0;\n                        goto code_r0x00412645;\n                    }\n                    *(*0x20 + -0x38) = 1;\n                    if (uVar6 < 2) {\n                        uVar2 = 2;\n                        goto code_r0x00412645;\n                    }\n                    *(*0x20 + -0x36) = 0x81;\n                    uVar4 = uVar6 - 1;\n                    uVar2 = 3;\ncode_r0x00412790:\n                    if (0x7f < uVar4) {\n                        if (0x27 < uVar2) goto code_r0x004127c5;\ncode_r0x00412779:\n                        *(*0x20 + (uVar2 - 0x38)) = uVar4 | 0x80;\n                        uVar4 = uVar4 >> 7;\n                        uVar2 = uVar2 + 1;\n                        uVar6 = uVar4;\n                        goto code_r0x00412790;\n                    }\n                    if (uVar2 < 0x28) {\n                        *(*0x20 + (uVar2 - 0x38)) = uVar4;\n                        uVar2 = uVar2 + 1;\ncode_r0x00412645:\n                        if (uVar2 < 0x28) {\n                            *(*0x20 + (uVar2 - 0x38)) = 0x80;\n                            uVar6 = uVar2;\n                            while( true ) {\n                                uVar4 = uVar6 + 1;\n                                if (unaff_R12 < 0x80) break;\n                                if (0x27 < uVar4) goto code_r0x0041275f;\n                                *(*0x20 + (uVar6 - 0x37)) = unaff_R12 | 0x80;\n                                unaff_R12 = unaff_R12 >> 7;\n                                uVar6 = uVar4;\n                            }\n                            if (uVar4 < 0x28) {\n                                *(*0x20 + (uVar6 - 0x37)) = unaff_R12;\n                                uVar6 = uVar1 - 1;\n                                uVar5 = uVar4;\n                                while( true ) {\n                                    uVar4 = uVar5 + 1;\n                                    if (uVar6 < 0x80) break;\n                                    if (0x27 < uVar4) goto code_r0x00412745;\n                                    *(*0x20 + (uVar5 - 0x37)) = uVar6 | 0x80;\n                                    uVar6 = uVar6 >> 7;\n                                    unaff_R12 = uVar6;\n                                    uVar5 = uVar4;\n                                }\n                                if (uVar4 < 0x28) {\n                                    *(*0x20 + (uVar5 - 0x37)) = uVar6;\n                                    if (uVar5 + 2 < 0x28) {\n                                        *(*0x20 + -0x40) = arg3;\n                                        *(*0x20 + -0x48) = uVar1 - 1;\n                                        *(*0x20 + (uVar5 - 0x36)) = 0;\n                                        *(*0x20 + -0x70) = 0x412707;\n                                        fcn.00412960(in_RAX);\n                                        arg3 = *(*0x20 + -0x40) * *(*0x20 + -0x48) + *(*0x20 + 0x20) >> 3;\n                                        goto code_r0x004125a5;\n                                    }\n                                    *(*0x20 + -0x70) = 0x412736;\n                                    fcn.0045e240(0x28);\n                                }\n                                *(*0x20 + -0x70) = 0x412745;\n                                fcn.0045e240(0x28);\ncode_r0x00412745:\n                                *(*0x20 + -0x70) = 0x412752;\n                                fcn.0045e240(0x28);\n                            }\n                            *(*0x20 + -0x70) = 0x41275f;\n                            fcn.0045e240(0x28);\ncode_r0x0041275f:\n                            *(*0x20 + -0x70) = 0x41276c;\n                            fcn.0045e240(0x28);\n                        }\n                        in_RAX = 0x28;\n                        *(*0x20 + -0x70) = 0x412779;\n                        uVar1 = fcn.0045e240(0x28);\n                        goto code_r0x00412779;\n                    }\n                    *(*0x20 + -0x70) = 0x4127c5;\n                    fcn.0045e240(0x28);\ncode_r0x004127c5:\n                    arg1._0_4_ = 0x28;\n                    *(*0x20 + -0x70) = 0x4127d2;\n                    fcn.0045e240(0x28);\n                }\n                *(*0x20 + -0x70) = 0x4127d7;\n                fcn.00432100();\n            }\n            unaff_EBX = 0x27;\n            *(*0x20 + -0x70) = 0x4127e8;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + 0x14) = arg1;\n        *(puVar3 + 0x18) = unaff_RDI;\n        *(puVar3 + 0x20) = uVar4;\n        *(puVar3 + 0x28) = uVar6;\n        *(puVar3 + 0x30) = arg4;\n        *(puVar3 + 0x38) = in_R10;\n        *(puVar3 + 0x40) = in_R11;\n        *(puVar3 + -8) = 0x412819;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x14);\n        unaff_RDI = *(puVar3 + 0x18);\n        unaff_RSI = *(puVar3 + 0x20);\n        arg3 = *(puVar3 + 0x28);\n        arg4 = *(puVar3 + 0x30);\n        in_R10 = *(puVar3 + 0x38);\n        in_R11 = *(puVar3 + 0x40);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 2430
    },
    "00412960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint8_t * fcn.00412960(uint8_t *arg1)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_RAX;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    uint64_t uVar4;\n    uint8_t uVar5;\n    uint32_t uVar6;\n    uint8_t *puVar7;\n    uint8_t *unaff_RBX;\n    uint8_t *puVar8;\n    uint8_t *puVar9;\n    uint8_t *puVar10;\n    uint8_t *puVar11;\n    int64_t unaff_RDI;\n    uint8_t *puVar12;\n    uint8_t *puVar13;\n    uint64_t uVar14;\n    int64_t iVar15;\n    uint8_t *puVar16;\n    \n    puVar12 = NULL;\n    puVar8 = arg1;\n    puVar9 = arg1;\n    puVar7 = NULL;\ncode_r0x00412b32:\n    while( true ) {\n        while( true ) {\n            for (; 0x7 < puVar7; puVar7 = puVar7 + -8) {\n                if (unaff_RDI == 1) {\n                    *puVar8 = puVar12;\n                    puVar8 = puVar8 + 1;\n                }\n                else {\n                    *puVar8 = puVar12 & 0xf | 0xf0;\n                    puVar8[1] = puVar12 >> 4 & 0xf | 0xf0;\n                    puVar8 = puVar8 + 2;\n                }\n                puVar12 = puVar12 >> 8;\n            }\n            uVar1 = *in_RAX;\n            puVar3 = uVar1 & 0x7f;\n            in_RAX = in_RAX + 1;\n            uVar5 = puVar7;\n            if (uVar1 < '\\0') break;\n            if (puVar3 == NULL) {\n                if (unaff_RBX == NULL) {\n                    if (unaff_RDI == 1) {\n                        iVar15 = (puVar8 - puVar9) * 8;\n                        for (puVar9 = puVar7 + (-puVar7 & 7); puVar9 != NULL; puVar9 = puVar9 + -8) {\n                            *puVar8 = puVar12;\n                            puVar12 = puVar12 >> 8;\n                            puVar8 = puVar8 + 1;\n                        }\n                    }\n                    else {\n                        iVar15 = (puVar8 - puVar9) * 4;\n                        for (puVar9 = puVar7 + (-puVar7 & 3); puVar9 != NULL; puVar9 = puVar9 + -4) {\n                            *puVar8 = puVar12 & 0xf | 0xf0;\n                            puVar12 = puVar12 >> 4;\n                            puVar8 = puVar8 + 1;\n                        }\n                    }\n                    return puVar7 + iVar15;\n                }\n                in_RAX = unaff_RBX;\n                unaff_RBX = NULL;\n            }\n            else {\n                for (uVar4 = 0; uVar4 < (uVar1 & 0x7f) >> 3; uVar4 = uVar4 + 1) {\n                    uVar14 = puVar12 | *in_RAX << (uVar5 & 0x3f);\n                    if (unaff_RDI == 1) {\n                        *puVar8 = uVar14;\n                        puVar8 = puVar8 + 1;\n                    }\n                    else {\n                        *puVar8 = uVar14 & 0xf | 0xf0;\n                        puVar8[1] = uVar14 >> 4 & 0xf | 0xf0;\n                        puVar8 = puVar8 + 2;\n                    }\n                    puVar12 = uVar14 >> 8;\n                    in_RAX = in_RAX + 1;\n                }\n                if ((uVar1 & 7) != 0) {\n                    puVar12 = puVar12 | *in_RAX << (uVar5 & 0x3f);\n                    puVar7 = puVar7 + (uVar1 & 7);\n                    in_RAX = in_RAX + 1;\n                }\n            }\n        }\n        if (puVar3 == NULL) {\n            puVar3 = NULL;\n            uVar4 = 0;\n            while( true ) {\n                uVar1 = *in_RAX;\n                puVar3 = puVar3 | (uVar1 & 0x7f) << (uVar4 & 0x3f) & -(uVar4 < 0x40);\n                in_RAX = in_RAX + 1;\n                if (-1 < uVar1) break;\n                uVar4 = uVar4 + 7;\n            }\n        }\n        uVar14 = 0;\n        uVar4 = 0;\n        while( true ) {\n            uVar1 = *in_RAX;\n            uVar14 = uVar14 | -(uVar4 < 0x40) & (uVar1 & 0x7f) << (uVar4 & 0x3f);\n            in_RAX = in_RAX + 1;\n            if (-1 < uVar1) break;\n            uVar4 = uVar4 + 7;\n        }\n        puVar2 = uVar14 * puVar3;\n        if (puVar3 < 0x3a) break;\n        iVar15 = puVar3 - puVar7;\n        if (unaff_RDI == 1) {\n            uVar4 = iVar15 & 7;\n            puVar3 = puVar8 + -(iVar15 + 7U >> 3);\n            if (uVar4 != 0) {\n                puVar12 = puVar12 | (*puVar3 >> (-(uVar4 - 8) & 0x3f) & -(-(uVar4 - 8) < 0x40)) << (uVar5 & 0x3f);\n                puVar7 = puVar7 + uVar4;\n                puVar2 = puVar2 + -uVar4;\n                puVar3 = puVar3 + 1;\n                puVar9 = arg1;\n            }\n            for (uVar4 = puVar2 >> 3; uVar4 != 0; uVar4 = uVar4 - 1) {\n                uVar14 = puVar12 | *puVar3 << (puVar7 & 0x3f) & -(puVar7 < 0x40);\n                *puVar8 = uVar14;\n                puVar12 = uVar14 >> 8;\n                puVar3 = puVar3 + 1;\n                puVar8 = puVar8 + 1;\n            }\n            uVar6 = puVar2 & 7;\n            if (uVar6 != 0) {\n                puVar12 = puVar12 | ((1 << uVar6) - 1U & *puVar3) << (puVar7 & 0x3f) & -(puVar7 < 0x40);\n                puVar7 = puVar7 + uVar6;\n            }\n        }\n        else {\n            uVar4 = iVar15 & 3;\n            puVar3 = puVar8 + -(iVar15 + 3U >> 2);\n            if (uVar4 != 0) {\n                puVar12 = puVar12 | ((*puVar3 & 0xf) >> (-(uVar4 - 4) & 0x3f) & -(-(uVar4 - 4) < 0x40)) <<\n                                    (uVar5 & 0x3f);\n                puVar7 = puVar7 + uVar4;\n                puVar2 = puVar2 + -uVar4;\n                puVar3 = puVar3 + 1;\n                puVar9 = arg1;\n            }\n            for (uVar4 = puVar2 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n                uVar14 = puVar12 | (*puVar3 & 0xf) << (puVar7 & 0x3f) & -(puVar7 < 0x40);\n                *puVar8 = uVar14 & 0xf | 0xf0;\n                puVar12 = uVar14 >> 4;\n                puVar3 = puVar3 + 1;\n                puVar8 = puVar8 + 1;\n            }\n            uVar6 = puVar2 & 3;\n            if (uVar6 != 0) {\n                puVar12 = puVar12 | ((1 << uVar6) - 1U & *puVar3) << (puVar7 & 0x3f) & -(puVar7 < 0x40);\n                puVar7 = puVar7 + uVar6;\n            }\n        }\n    }\n    puVar11 = puVar7;\n    puVar13 = puVar12;\n    puVar16 = puVar8;\n    if (unaff_RDI != 1) {\n        do {\n            puVar16 = puVar16 + -1;\n            puVar10 = puVar7;\n            if (puVar3 <= puVar11) goto code_r0x00412ce5;\n            puVar11 = puVar11 + 4;\n            puVar13 = puVar13 << 4 | *puVar16 & 0xf;\n        } while( true );\n    }\n    do {\n        puVar16 = puVar16 + -1;\n        puVar10 = puVar7;\n        if (puVar3 <= puVar11) {\ncode_r0x00412ce5:\n            puVar7 = puVar11;\n            if (puVar3 < puVar11) {\n                puVar16 = -(puVar11 - puVar3 < 0x40);\n                puVar13 = puVar13 >> (puVar11 - puVar3 & 0x3f) & puVar16;\n                puVar7 = puVar3;\n            }\n            if (puVar7 == 0x1) {\n                puVar7 = puVar2;\n                if (puVar13 == 0x1) {\n                    puVar13 = 0x1ffffffffffffff;\n                    puVar7 = 0x39;\n                }\n                goto code_r0x00412d4e;\n            }\n            puVar11 = puVar7 * 2;\n            puVar3 = puVar7;\n            if (0x39 < puVar11) goto code_r0x00412d4e;\n            for (; puVar3 < 0x41; puVar3 = puVar3 * 2) {\n                puVar11 = puVar13;\n                puVar13 = puVar13 << (puVar3 & 0x3f) & -(puVar3 < 0x40) | puVar13;\n                puVar16 = puVar7;\n            }\n            if (puVar7 != NULL) break;\n            puVar2 = fcn.00432100();\n        }\n        puVar11 = puVar11 + 8;\n        puVar13 = puVar13 << 8 | *puVar16;\n    } while( true );\n    puVar7 = puVar7 * SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x39)) / ZEXT816(puVar7), 0);\n    puVar13 = puVar13 & (1 << (puVar7 & 0x3f) & -(puVar7 < 0x40)) - 1;\ncode_r0x00412d4e:\n    while (puVar7 <= puVar2) {\n        puVar12 = puVar12 | puVar13 << (puVar10 & 0x3f) & -(puVar10 < 0x40);\n        puVar10 = puVar7 + puVar10;\n        if (unaff_RDI == 1) {\n            for (; 0x7 < puVar10; puVar10 = puVar10 + -8) {\n                *puVar8 = puVar12;\n                puVar12 = puVar12 >> 8;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        else {\n            for (; 0x3 < puVar10; puVar10 = puVar10 + -4) {\n                *puVar8 = puVar12 & 0xf | 0xf0;\n                puVar12 = puVar12 >> 4;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        puVar2 = puVar2 + -puVar7;\n    }\n    puVar7 = puVar10;\n    if (puVar2 != NULL) {\n        puVar12 = puVar12 | (puVar13 & (1 << (puVar2 & 0x3f) & -(puVar2 < 0x40)) - 1) << (puVar10 & 0x3f) &\n                            -(puVar10 < 0x40);\n        puVar7 = puVar10 + puVar2;\n    }\n    goto code_r0x00412b32;\n}\n",
        "token_count": 2911
    },
    "00413080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t * fcn.00413080(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    int64_t *piStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    piStack32 = NULL;\n    auStack24 = CONCAT88(&piStack32, 0x413160);\n    fcn.0045ba20();\n    for (iVar2 = 0; iVar2 < 0x88; iVar2 = iVar2 + 1) {\n        piStack32[iVar2 + 5] = 0x802140;\n    }\n    if (*0x801a38 == 1) {\n        iVar2 = 0;\n    }\n    else {\n        iVar1 = fcn.0040c760();\n        iVar2 = iVar1;\n    }\n    *piStack32 = iVar2;\n    return piStack32;\n}\n",
        "token_count": 244
    },
    "00413aa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00413bc9)\n\nint64_t fcn.00413aa0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int32_t iVar1;\n    uint8_t *in_RAX;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    char cVar6;\n    uint32_t uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*in_RAX >> 1 < 0x44) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x58) = 0x413ae6;\n                fcn.004227a0();\n                if (*0x7b3b90 != '\\0') {\n                    *(*0x20 + -0x58) = 0x413af4;\n                    fcn.00451ca0();\n                }\n                *(*0x20 + -0x30) = 0;\n                *(*0x20 + -0x2c) = 0;\n                uVar7 = *0x7d3db8 >> 1 & 1;\n                *(*0x20 + -0x3c) = uVar7;\n                *(*0x20 + -0x10) = uVar7 * 5;\n                *(*0x20 + -0x58) = 0x413b2b;\n                iVar2 = fcn.0042c7e0();\n                if (iVar2 != 0) {\n                    cVar6 = '\\0';\n                    goto code_r0x00413b34;\n                }\ncode_r0x00413ba9:\n                uVar7 = *0x7adbbc & 0x80000000;\n                if (uVar7 == 0) {\n                    *0x7adbbc = *0x7adbbc + 1;\n                    LOCK();\n                }\n                *(*0x20 + -0x30) = *0x7d3db8;\n                *(*0x20 + -0x2c) = uVar7 == 0;\n                if (uVar7 == 0) {\n                    iVar1 = *(*0x20 + -0x3c);\n                    uVar3 = *(*0x20 + 8);\n                    iVar2 = 100;\n                    while (-1 < iVar2) {\n                        if (1 < -(iVar1 + -1)) goto code_r0x00413dcd;\n                        *(*0x20 + -0x38) = iVar2;\n                        *(*0x20 + -0x58) = 0x413c45;\n                        iVar2 = fcn.0042c7e0();\n                        if (iVar2 == 0) {\n                            iVar1 = *(*0x20 + -0x3c);\n                            iVar2 = *(*0x20 + -0x38);\n                            uVar3 = *(*0x20 + 8);\n                            break;\n                        }\n                        *(*0x20 + -0x18) = iVar2;\n                        *(*0x20 + -0x58) = 0x413c5c;\n                        uVar3 = fcn.004213c0();\n                        *(*0x20 + -0x20) = uVar3;\n                        if (iVar2 != '\\0') {\n                            *(*0x20 + -0x58) = 0x413c74;\n                            fcn.004218a0();\n                            *(*0x20 + -0x58) = 0x413c89;\n                            fcn.00420f80();\n                            cVar6 = '\\0';\n                            iVar2 = *(*0x20 + -0x18);\n                            goto code_r0x00413b34;\n                        }\n                        iVar1 = *(*0x20 + -0x3c);\n                        uVar3 = *(*0x20 + 8);\n                        iVar2 = *(*0x20 + -0x38) + -1;\n                    }\n                    do {\n                        if (iVar2 < 0) goto code_r0x00413d73;\n                        if (1 < -(iVar1 + -1)) {\n                            *(*0x20 + -0x58) = 0x413dcd;\n                            fcn.0045e240(2);\ncode_r0x00413dcd:\n                            *(*0x20 + -0x58) = 0x413dd9;\n                            fcn.0045e240(2);\n                            goto code_r0x00413dd9;\n                        }\n                        *(*0x20 + -0x38) = iVar2;\n                        iVar2 = -(iVar1 + -1) * 5;\n                        *(*0x20 + -0x58) = 0x413ce5;\n                        iVar4 = fcn.0042c7e0();\n                        if (iVar4 == 0) goto code_r0x00413d73;\n                        *(*0x20 + -0x18) = iVar4;\n                        *(*0x20 + -0x58) = 0x413d05;\n                        uVar5 = fcn.004213c0();\n                        *(*0x20 + -0x28) = uVar5;\n                        if (iVar4 == '\\0') goto code_r0x00413ca5;\n                        *(*0x20 + -0x58) = 0x413d1d;\n                        fcn.004218a0();\n                        *(*0x20 + -0x58) = 0x413d27;\n                        iVar2 = fcn.004105a0(iVar2, uVar3, param_3, param_4);\n                        if (*(*(*0x20 + -0x28) + 0x38) != iVar2) {\n                            *(*(*0x20 + -0x28) + 0x30) = iVar2;\n                            *(*0x20 + -0x58) = 0x413d67;\n                            fcn.00420f80();\n                            cVar6 = '\\0';\n                            iVar2 = *(*0x20 + -0x18);\n                            goto code_r0x00413b34;\n                        }\n                        *(*0x20 + -0x58) = 0x413d49;\n                        fcn.0042c640(*(*0x20 + -0x10), *(*0x20 + 8));\ncode_r0x00413ca5:\n                        iVar2 = *(*0x20 + -0x38) + -1;\n                        uVar3 = *(*0x20 + 8);\n                        iVar1 = *(*0x20 + -0x3c);\n                    } while( true );\n                }\n                goto code_r0x00413d88;\n            }\ncode_r0x00413dd9:\n            *(*0x20 + -0x58) = 0x413de6;\n            in_RAX = fcn.0045e240(0x44);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + -8) = 0x413df1;\n        fcn.0045bb60();\n        in_RAX = *(puVar8 + 8);\n        *0x20 = puVar8;\n    } while( true );\ncode_r0x00413d73:\n    *(*0x20 + -0x58) = 0x413d88;\n    fcn.00420f80();\ncode_r0x00413d88:\n    *(*0x20 + -0x3d) = *0x7b3b90;\n    if (*0x7b3b90 != '\\0') {\n        *(*0x20 + -0x58) = 0x413d9c;\n        fcn.00451da0();\n    }\n    *(*0x20 + -0x58) = 0x413da6;\n    iVar2 = fcn.00413f00();\n    if (iVar2 == 0) {\n        return 0;\n    }\n    cVar6 = *(*0x20 + -0x3d);\ncode_r0x00413b34:\n    *(*0x20 + -0x18) = iVar2;\n    if ((*0x7b3b90 != '\\0') && (cVar6 == '\\0')) {\n        *(*0x20 + -0x58) = 0x413b4b;\n        fcn.00451da0();\n        iVar2 = *(*0x20 + -0x18);\n    }\n    if ((*(iVar2 + 0x38) != *(iVar2 + 0x60)) && (*(iVar2 + 0x30) != *(iVar2 + 0x38))) {\n        *(*0x20 + -0x58) = 0x413b73;\n        fcn.00410580();\n        iVar2 = *(*0x20 + -0x18);\n        *(iVar2 + 0x40) = *(iVar2 + 0x40) >> (*(iVar2 + 0x30) & 0x3f);\n        return iVar2;\n    }\n    *(*0x20 + -0x58) = 0x413ba8;\n    fcn.00433c80();\n    goto code_r0x00413ba9;\n}\n",
        "token_count": 2119
    },
    "00413e00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00413e00(void)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        uVar1 = *0x7d3db8;\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(unaff_RBX + 0x60) != 0) {\n                if (*(unaff_RBX + 0x58) == *0x7d3db8 + 1) {\n                    *(unaff_RBX + 0x58) = *0x7d3db8 - 1;\n                    *(*0x20 + -0x10) = unaff_RBX;\n                    *(*0x20 + -0x28) = 0x413ea5;\n                    fcn.004218a0();\n                }\n                else {\n                    *(unaff_RBX + 0x58) = *0x7d3db8;\n                    if (*(unaff_RBX + 0x38) - *(unaff_RBX + 0x60) < 1) {\n                        *(*0x20 + -0x28) = 0x413e8d;\n                        fcn.0042c640((uVar1 >> 1 & 1) * 5);\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x413e73;\n                        fcn.0042c640((uVar1 >> 1 & 1) * 5);\n                    }\n                }\n                return;\n            }\n            unaff_RBX = 0x24;\n            *(*0x20 + -0x28) = 0x413ec5;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x413ed5;\n        fcn.0045bb60();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 586
    },
    "004146a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004146a0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    ulong unaff_RBX;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x50) = *0x795168;\n            *(*0x20 + -0x48) = in_RAX;\n            *(*0x20 + -0x40) = unaff_RBX;\n            *(*0x20 + -0x38) = 0x4000;\n            *(*0x20 + -0x58) = 0x4146e5;\n            fcn.00430e80();\n            if (*(*0x20 + -0x30) != 0) {\n                return;\n            }\n            iVar1 = *(*0x20 + 8);\n            uVar2 = *(*0x20 + 0x10);\n            while( true ) {\n                if (uVar2 == 0) {\n                    return;\n                }\n                *(*0x20 + -0x28) = uVar2;\n                *(*0x20 + -0x10) = iVar1;\n                uVar3 = uVar2;\n                while( true ) {\n                    *(*0x20 + -0x18) = uVar3;\n                    if (uVar3 < 0x1000) {\n                        bVar5 = false;\n                    }\n                    else {\n                        *(*0x20 + -0x50) = *0x795168;\n                        *(*0x20 + -0x48) = iVar1;\n                        *(*0x20 + -0x40) = uVar3;\n                        *(*0x20 + -0x38) = 0x4000;\n                        *(*0x20 + -0x58) = 0x414790;\n                        fcn.00430e80();\n                        bVar5 = *(*0x20 + -0x30) == 0;\n                        uVar2 = *(*0x20 + -0x28);\n                        uVar3 = *(*0x20 + -0x18);\n                        iVar1 = *(*0x20 + -0x10);\n                    }\n                    if (!bVar5) break;\n                    uVar3 = uVar3 >> 1 & 0xfffffffffffff000;\n                }\n                if (uVar3 < 0x1000) break;\n                uVar2 = uVar2 - uVar3;\n                iVar1 = iVar1 + uVar3;\n            }\n            *(*0x20 + -0x58) = 0x4147ce;\n            fcn.0045f700();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            *(*0x20 + -0x20) = *(*0x20 + -0x50);\n            *(*0x20 + -0x58) = 0x4147ef;\n            fcn.00435540();\n            *(*0x20 + -0x58) = 0x414805;\n            fcn.00435e40();\n            *(*0x20 + -0x58) = 0x41480f;\n            fcn.00435b40();\n            *(*0x20 + -0x58) = 0x414825;\n            fcn.00435e40();\n            *(*0x20 + -0x58) = 0x41482f;\n            fcn.00435b40();\n            *(*0x20 + -0x58) = 0x414834;\n            fcn.004357a0();\n            *(*0x20 + -0x58) = 0x414839;\n            fcn.004355c0();\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x58) = 0x41484a;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x41485a;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1107
    },
    "00414880": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00414880(void)\n\n{\n    int32_t iVar1;\n    ulong in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    ulong unaff_RBX;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar7;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x58) = *0x795170;\n            *(*0x20 + -0x50) = in_RAX;\n            *(*0x20 + -0x48) = unaff_RBX;\n            *(*0x20 + -0x40) = 0x1000;\n            *(*0x20 + -0x38) = 4;\n            *(*0x20 + -0x60) = 0x4148ce;\n            fcn.00430f00();\n            uVar3 = *(*0x20 + 8);\n            if (*(*0x20 + -0x30) == uVar3) {\n                return uVar3;\n            }\n            uVar2 = *(*0x20 + 0x10);\n            uVar4 = uVar2;\n            while( true ) {\n                if (uVar4 == 0) {\n                    return uVar2;\n                }\n                *(*0x20 + -0x18) = uVar4;\n                *(*0x20 + -0x10) = uVar3;\n                uVar5 = uVar4;\n                while( true ) {\n                    *(*0x20 + -0x20) = uVar5;\n                    if (uVar5 < 0x1000) {\n                        bVar7 = false;\n                    }\n                    else {\n                        *(*0x20 + -0x58) = *0x795170;\n                        *(*0x20 + -0x50) = uVar3;\n                        *(*0x20 + -0x48) = uVar5;\n                        *(*0x20 + -0x40) = 0x1000;\n                        *(*0x20 + -0x38) = 4;\n                        *(*0x20 + -0x60) = 0x414985;\n                        fcn.00430f00();\n                        bVar7 = *(*0x20 + -0x30) == 0;\n                        uVar3 = *(*0x20 + -0x10);\n                        uVar4 = *(*0x20 + -0x18);\n                        uVar5 = *(*0x20 + -0x20);\n                        uVar2 = *(*0x20 + 0x10);\n                    }\n                    if (!bVar7) break;\n                    uVar5 = uVar5 >> 1 & 0xfffffffffffff000;\n                }\n                if (uVar5 < 0x1000) break;\n                uVar4 = uVar4 - uVar5;\n                uVar3 = uVar3 + uVar5;\n            }\n            *(*0x20 + -0x60) = 0x4149d3;\n            fcn.0045f700();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            iVar1 = *(*0x20 + -0x58);\n            *(*0x20 + -0x24) = iVar1;\n            if (iVar1 != 8) goto code_r0x00414a49;\n            do {\n                *(*0x20 + -0x60) = 0x4149f8;\n                fcn.00435540();\n                *(*0x20 + -0x60) = 0x414a09;\n                fcn.00435e40();\n                *(*0x20 + -0x60) = 0x414a13;\n                fcn.00435b40();\n                *(*0x20 + -0x60) = 0x414a25;\n                fcn.00435e40();\n                *(*0x20 + -0x60) = 0x414a2e;\n                fcn.00435b40();\n                *(*0x20 + -0x60) = 0x414a33;\n                fcn.004357a0();\n                *(*0x20 + -0x60) = 0x414a38;\n                fcn.004355c0();\n                *(*0x20 + -0x60) = 0x414a49;\n                iVar1 = fcn.00433c80();\ncode_r0x00414a49:\n            } while (iVar1 == 0x5af);\n            *(*0x20 + -0x60) = 0x414a55;\n            fcn.00435540();\n            *(*0x20 + -0x60) = 0x414a66;\n            fcn.00435e40();\n            *(*0x20 + -0x60) = 0x414a70;\n            fcn.00435b40();\n            *(*0x20 + -0x60) = 0x414a85;\n            fcn.00435e40();\n            *(*0x20 + -0x60) = 0x414a8e;\n            fcn.00435b40();\n            *(*0x20 + -0x60) = 0x414a93;\n            fcn.004357a0();\n            *(*0x20 + -0x60) = 0x414a98;\n            fcn.004355c0();\n            unaff_RBX = 0x1f;\n            *(*0x20 + -0x60) = 0x414aa9;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x414ab9;\n        fcn.0045bb60();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1476
    },
    "00414ae0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00414ae0(void)\n\n{\n    code *pcVar1;\n    int64_t iStack32;\n    \n    fcn.00430e80();\n    if (iStack32 != 0) {\n        return;\n    }\n    fcn.0045f700();\n    fcn.00435540();\n    fcn.00435e40();\n    fcn.00435b40();\n    fcn.00435e40();\n    fcn.00435b40();\n    fcn.004357a0();\n    fcn.004355c0();\n    fcn.00433c80();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 153
    },
    "00414d20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00414d20(ulong arg1)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    ulong *puVar5;\n    ulong arg4;\n    int64_t unaff_R14;\n    \ncode_r0x00414d20:\n    puVar4 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar4 = *0x20 + -0x20;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if (*0x8019ec == 0) {\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x28) = 0x414d6d;\n            fcn.0040a460();\n            if ((*0x801ab0 != NULL) && (*(*0x801ab0 + 2) != 0x65)) goto code_r0x00414def;\n            if (*0x801aa0 != NULL) goto code_r0x00414dcb;\n            *(*0x20 + -0x28) = 0x414d9c;\n            *0x801aa0 = fcn.0040c8c0(0x8044f8);\n            **0x801aa0 = *0x801a40;\n            *0x801a40 = *0x801aa0;\n            if (*0x801dc0 != '\\0') goto code_r0x00414dcb;\n            iVar2 = 0;\n            do {\n                if (iVar2 < 0x40) {\n                    uVar1 = iVar2 + (SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar2) >> 0x40, 0) + iVar2 >> 2) * -5\n                    ;\n                    if (4 < uVar1) goto code_r0x00414f26;\n                }\n                else {\ncode_r0x00414dcb:\n                    puVar5 = *0x801aa0;\n                    puVar3 = *0x801aa0 + 1;\n                    *0x801aa0 = (*0x801aa0)[1];\n                    *puVar3 = *0x801ab0;\n                    *0x801ab0 = puVar5;\ncode_r0x00414def:\n                    puVar3 = *0x801ab0;\n                    uVar1 = *(*0x801ab0 + 2);\n                    if (uVar1 < 0x65) {\n                        LOCK();\n                        *(*0x801ab0 + 2) = *(*0x801ab0 + 2) + 1;\n                        iVar2 = uVar1 * 5;\n                        puVar5 = puVar3 + uVar1 * 5 + 4;\n                        if (*0x801c20 == 0) {\n                            puVar3[uVar1 * 5 + 3] = *(*0x20 + 0x10);\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x414e58;\n                            fcn.0045df40(iVar2, puVar3, puVar5);\n                        }\n                        arg4 = *(*0x20 + 0x18);\n                        puVar3[iVar2 + 5] = arg4;\n                        if (*0x801c20 == 0) {\n                            puVar3[iVar2 + 6] = *(*0x20 + 0x20);\n                            puVar3[iVar2 + 7] = *(*0x20 + 0x28);\n                            puVar3[iVar2 + 4] = *(*0x20 + 8);\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x414e98;\n                            fcn.0045dea0(*(*0x20 + 0x20), puVar3, puVar5, arg4);\n                            *(*0x20 + -0x28) = 0x414ea5;\n                            fcn.0045dea0(*(*0x20 + 0x28), puVar3, puVar5, arg4);\n                            *(*0x20 + -0x28) = 0x414eb2;\n                            fcn.0045dea0(*(*0x20 + 8), puVar3, puVar5, arg4);\n                        }\n                        *0x8019a7 = 1;\n                        *(*0x20 + -0x28) = 0x414ec7;\n                        fcn.0040a680();\n                        return;\n                    }\n                    iVar2 = 0x65;\n                    *(*0x20 + -0x28) = 0x414edb;\n                    uVar1 = fcn.0045e240(0x65);\n                }\n                unaff_RSI = 0x801dc0;\n                *(iVar2 + 0x801dc0) = *(uVar1 + 0x795294);\n                iVar2 = iVar2 + 1;\n            } while( true );\n        }\n        goto code_r0x00414f30;\n    }\n    goto code_r0x00414f46;\ncode_r0x00414f26:\n    arg1 = 5;\n    *(*0x20 + -0x28) = 0x414f30;\n    fcn.0045e240(5);\ncode_r0x00414f30:\n    unaff_RBX = 0x18;\n    *(*0x20 + -0x28) = 0x414f45;\n    in_RAX = fcn.00433c80();\ncode_r0x00414f46:\n    *(puVar4 + 8) = in_RAX;\n    *(puVar4 + 0x10) = unaff_RBX;\n    *(puVar4 + 0x18) = arg1;\n    *(puVar4 + 0x20) = unaff_RDI;\n    *(puVar4 + 0x28) = unaff_RSI;\n    *(puVar4 + -8) = 0x414f65;\n    fcn.0045bb60();\n    in_RAX = *(puVar4 + 8);\n    unaff_RBX = *(puVar4 + 0x10);\n    arg1 = *(puVar4 + 0x18);\n    unaff_RDI = *(puVar4 + 0x20);\n    unaff_RSI = *(puVar4 + 0x28);\n    *0x20 = puVar4;\n    goto code_r0x00414d20;\n}\n",
        "token_count": 1581
    },
    "00414fa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00414fa0(void)\n\n{\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0040a460();\n    if ((*0x8019a6 == '\\0') || (*0x8019a7 == '\\0')) {\n        uVar1 = 0;\n    }\n    else {\n        *0x8019a6 = '\\0';\n        *0x8019a7 = '\\0';\n        uVar1 = *0x7ad080;\n    }\n    fcn.0040a680();\n    return uVar1;\n}\n",
        "token_count": 177
    },
    "00415020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041504c)\n\nvoid fcn.00415020(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (*0x8019d8 == 0) {\n        LOCK();\n        *0x8019d8 = 1;\n        fcn.0043e560();\n    }\n    return;\n}\n",
        "token_count": 128
    },
    "00415520": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00415520(ulong arg1)\n\n{\n    uint64_t *puVar1;\n    int64_t *piVar2;\n    ulong in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint32_t uVar8;\n    ulong unaff_RBX;\n    uint64_t uVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int64_t iVar11;\n    int64_t iVar12;\n    ulong unaff_RDI;\n    uint8_t uVar13;\n    int64_t unaff_R14;\n    bool bVar14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x50 && *0x20 + -0x50 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0xd0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            if (*0x801eb0 != 0) {\n                return;\n            }\n            iVar4 = *(*0x20 + 8);\n            if (iVar4 != 0) {\n                uVar8 = *(iVar4 + 0x17) & 0x1f;\n                uVar9 = uVar8;\n                if (uVar8 == '\\x16') {\n                    if (*(iVar4 + 0x30) != 0) {\n                        *(*0x20 + -0x58) = iVar4;\n                        uVar9 = 0;\n                        *(*0x20 + -0xd8) = 0x4155b8;\n                        uVar3 = fcn.00410940(0);\n                        if (uVar3 != 0) {\n                            uVar7 = *(*0x20 + 0x10);\n                            if (uVar3 == uVar7) {\n                                iVar4 = *(*0x20 + -0x58);\n                            }\n                            else {\n                                iVar4 = *(*0x20 + -0x58);\n                                puVar1 = *(iVar4 + 0x30);\n                                if (((puVar1 == NULL) || (puVar1[1] != 0)) || (0xf < *puVar1)) goto code_r0x00415a50;\n                            }\n                            iVar11 = *(*0x20 + 0x18);\n                            if (iVar11 == 0) {\n                                *(*0x20 + -0x48) =\n                                     CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                *(*0x20 + -0x48) = 0x415be0;\n                                *(*0x20 + -0x40) = *0x20 + 8;\n                                *(*0x20 + -0xd0) = *0x20 + -0x48;\n                                *(*0x20 + -0xd8) = 0x4157e5;\n                                fcn.0045ba20();\n                                return;\n                            }\n                            if ((*(iVar11 + 0x17) & 0x1f) == 0x13) {\n                                *(*0x20 + -0x68) = iVar11;\n                                if ((*(iVar11 + 0x32) & 0x8000) == 0) {\n                                    if (*(iVar11 + 0x30) == 1) {\n                                        if ((*(iVar11 + 0x14) & 1) == 0) {\n                                            iVar6 = 0x38;\n                                        }\n                                        else {\n                                            iVar6 = 0x48;\n                                        }\n                                        iVar6 = *(iVar11 + iVar6);\n                                        *(*0x20 + -0x60) = iVar6;\n                                        if (iVar6 != iVar4) {\n                                            uVar13 = *(iVar6 + 0x17) & 0x1f;\n                                            if (uVar13 == 0x16) {\n                                                *(*0x20 + -0xd8) = 0x41570a;\n                                                iVar4 = fcn.00456a60();\n                                                if (iVar4 == 0) {\n                                                    bVar14 = true;\n                                                }\n                                                else {\n                                                    *(*0x20 + -0xd8) = 0x415725;\n                                                    iVar4 = fcn.00456a60();\n                                                    bVar14 = iVar4 == 0;\n                                                }\n                                                if (!bVar14) goto code_r0x004158fa;\n                                                uVar7 = *(*0x20 + -0x60);\n                                                uVar9 = *(uVar7 + 0x30);\n                                                if (*(*(*0x20 + -0x58) + 0x30) != uVar9) goto code_r0x004158fa;\n                                                iVar11 = *(*0x20 + -0x68);\n                                            }\n                                            else {\n                                                if (uVar13 != 0x14) goto code_r0x004158fa;\n                                                if (*(iVar6 + 0x40) != 0) {\n                                                    uVar9 = *(*0x20 + 8);\n                                                    *(*0x20 + -0xd8) = 0x4156e8;\n                                                    iVar4 = fcn.0040a0a0(uVar7);\n                                                    if (iVar4 == 0) goto code_r0x004158fa;\n                                                    iVar11 = *(*0x20 + -0x68);\n                                                }\n                                            }\n                                        }\n                                        if ((*(iVar11 + 0x14) & 1) == 0) {\n                                            iVar4 = 0x38;\n                                        }\n                                        else {\n                                            iVar4 = 0x48;\n                                        }\n                                        uVar9 = *(iVar11 + 0x30);\n                                        uVar7 = (*(iVar11 + 0x32) & 0x7fff) + *(iVar11 + 0x30);\n                                        uVar3 = uVar7 & 0xffff;\n                                        if (uVar9 <= uVar3) {\n                                            iVar12 = 0;\n                                            for (iVar6 = 0; iVar6 < uVar3 - uVar9; iVar6 = iVar6 + 1) {\n                                                piVar2 = *(iVar11 + iVar4 + (uVar9 << 3 & uVar9 - 0x100000 >> 0x3f) +\n                                                          iVar6 * 8);\n                                                uVar7 = *(piVar2 + 0x15);\n                                                iVar12 = ((iVar12 + uVar7) - 1 & -uVar7) + *piVar2;\n                                            }\n                                            *(*0x20 + -0x78) = iVar12;\n                                            *(*0x20 + -0xd8) = 0x415845;\n                                            fcn.00415020();\n                                            *(*0x20 + -0x38) =\n                                                 CONCAT412(in_XMM15_Dd, \n                                                           CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                            *(*0x20 + -0x28) =\n                                                 CONCAT412(in_XMM15_Dd, \n                                                           CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                            *(*0x20 + -0x18) =\n                                                 CONCAT412(in_XMM15_Dd, \n                                                           CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                            *(*0x20 + -0x38) = 0x415b80;\n                                            *(*0x20 + -0x30) = *0x20 + 8;\n                                            *(*0x20 + -0x28) = *0x20 + 0x18;\n                                            *(*0x20 + -0x20) = *(*0x20 + -0x78) + 7U & 0xfffffffffffffff8;\n                                            *(*0x20 + -0x18) = *(*0x20 + -0x60);\n                                            *(*0x20 + -0x10) = *(*0x20 + -0x58);\n                                            *(*0x20 + -0xd0) = *0x20 + -0x38;\n                                            *(*0x20 + -0xd8) = 0x4158cf;\n                                            fcn.0045ba20();\n                                            return;\n                                        }\n                                        *(*0x20 + -0xd8) = 0x4158fa;\n                                        fcn.0045e300(uVar3);\ncode_r0x004158fa:\n                                        do {\n                                            *(*0x20 + -0xd8) = 0x4158ff;\n                                            uVar5 = fcn.004569c0();\n                                            *(*0x20 + -0x50) = uVar5;\n                                            *(*0x20 + -0x70) = uVar9;\n                                            *(*0x20 + -0xd8) = 0x415916;\n                                            fcn.004569c0();\n                                            uVar9 = 0x4b5662;\n                                            *(*0x20 + -0xd8) = 0x415949;\n                                            fcn.0044b000(0x22, uVar7, 0x4b0797, 0xe);\n                                            *(*0x20 + -0xd8) = 0x41594e;\n                                            fcn.00433c80();\n                                        } while( true );\n                                    }\n                                    *(*0x20 + -0xd8) = 0x415965;\n                                    uVar5 = fcn.004569c0();\n                                    *(*0x20 + -0x50) = uVar5;\n                                    *(*0x20 + -0x70) = 0;\n                                    *(*0x20 + -0xd8) = 0x41597c;\n                                    fcn.004569c0();\n                                    uVar9 = 0x4b5662;\n                                    *(*0x20 + -0xd8) = 0x4159af;\n                                    fcn.0044b000(0x22, uVar7, 0x4b0797, 0xe);\n                                    *(*0x20 + -0xd8) = 0x4159b4;\n                                    fcn.00433c80();\n                                }\n                                *(*0x20 + -0xd8) = 0x4159b9;\n                                uVar5 = fcn.004569c0();\n                                *(*0x20 + -0x50) = uVar5;\n                                *(*0x20 + -0x70) = uVar9;\n                                *(*0x20 + -0xd8) = 0x4159d0;\n                                fcn.004569c0();\n                                *(*0x20 + -0xd0) = 0x4b148c;\n                                *(*0x20 + -200) = 0x12;\n                                *(*0x20 + -0xd8) = 0x415a17;\n                                fcn.0044b100(0x22, uVar7, 0x4b0797, 0xe);\n                                *(*0x20 + -0xd8) = 0x415a1c;\n                                fcn.00433c80();\n                            }\n                            *(*0x20 + -0xd8) = 0x415a25;\n                            fcn.004569c0();\n                            *(*0x20 + -0xd8) = 0x415a4b;\n                            fcn.0044af20(0x29, uVar7, 0x4b0da9, 0x10);\n                            *(*0x20 + -0xd8) = 0x415a50;\n                            fcn.00433c80();\ncode_r0x00415a50:\n                            *(*0x20 + -0xd8) = 0x415a65;\n                            iVar4 = fcn.00433c80();\n                            goto code_r0x00415a65;\n                        }\n                        uVar7 = *(*0x20 + 0x10);\n                        if (uVar7 == 0x801ba0) {\n                            return;\n                        }\n                        uVar9 = 0x801ba0;\n                        for (iVar4 = 0x79ae80; iVar4 != 0; iVar4 = *(iVar4 + 0x220)) {\n                            if (((((*(iVar4 + 0xc0) < uVar7 || *(iVar4 + 0xc0) == uVar7) &&\n                                  (uVar7 <= *(iVar4 + 200) && *(iVar4 + 200) != uVar7)) ||\n                                 ((*(iVar4 + 0xd0) < uVar7 || *(iVar4 + 0xd0) == uVar7 &&\n                                  (uVar7 <= *(iVar4 + 0xd8) && *(iVar4 + 0xd8) != uVar7)))) ||\n                                ((*(iVar4 + 0xe0) < uVar7 || *(iVar4 + 0xe0) == uVar7 &&\n                                 (uVar7 <= *(iVar4 + 0xe8) && *(iVar4 + 0xe8) != uVar7)))) ||\n                               ((*(iVar4 + 0xf0) < uVar7 || *(iVar4 + 0xf0) == uVar7 &&\n                                (uVar7 <= *(iVar4 + 0xf8) && *(iVar4 + 0xf8) != uVar7)))) {\n                                return;\n                            }\ncode_r0x00415a65:\n                            uVar9 = uVar7;\n                        }\n                        *(*0x20 + -0xd8) = 0x415af3;\n                        fcn.00433c80();\n                    }\n                    *(*0x20 + -0xd8) = 0x415b05;\n                    fcn.00433c80();\n                }\n                *(*0x20 + -0xd8) = 0x415b0a;\n                unaff_RDI = fcn.004569c0();\n                arg1 = 0x28;\n                *(*0x20 + -0xd8) = 0x415b30;\n                fcn.0044af20(0x28, uVar9, 0x4b0515, 0xd);\n                *(*0x20 + -0xd8) = 0x415b35;\n                fcn.00433c80();\n            }\n            unaff_RBX = 0x2b;\n            *(*0x20 + -0xd8) = 0x415b46;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + -8) = 0x415b65;\n        fcn.0045bb60();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        arg1 = *(puVar10 + 0x18);\n        unaff_RDI = *(puVar10 + 0x20);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 3460
    },
    "00415c20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00415c20(uint64_t arg1)\n\n{\n    uchar auVar1 [16];\n    uint64_t *in_RAX;\n    int64_t iVar2;\n    uint64_t *arg2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    uint64_t in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX < 0x4001) {\n                if (unaff_RBX < 8) {\n                    unaff_RBX = 8;\n                }\n                *in_RAX = unaff_RBX;\n                if (*0x801c20 == 0) {\n                    in_RAX[1] = arg1;\n                    in_RAX[2] = unaff_RDI;\n                }\n                else {\n                    arg2 = in_RAX + 1;\n                    *(*0x20 + -0x20) = 0x415c7f;\n                    in_R8 = unaff_RDI;\n                    iVar2 = fcn.0045dea0(arg1, arg2, unaff_RDI, in_R9);\n                    unaff_RDI = iVar2 + 0x10;\n                    *(*0x20 + -0x20) = 0x415c88;\n                    in_RAX = fcn.0045df20(arg1, arg2, in_R8, in_R9);\n                }\n                *(in_RAX + 3) = in_XMM15;\n                *(in_RAX + 5) = 0;\n                if (unaff_RBX != 0) {\n                    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x4000);\n                    *(in_RAX + 0x2c) = SUB164(auVar1 / ZEXT816(unaff_RBX), 0) * unaff_RBX;\n                    in_RAX[6] = 0;\n                    if (*0x801c20 == 0) {\n                        in_RAX[7] = unaff_RSI;\n                    }\n                    else {\n                        *(*0x20 + -0x20) = 0x415ccd;\n                        fcn.0045df00(in_RAX, SUB168(auVar1 % ZEXT816(unaff_RBX), 0), in_R8, in_R9);\n                    }\n                    *(in_RAX + 8) = 1;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x415ce5;\n                fcn.00432100();\n            }\n            unaff_RBX = 0x20;\n            *(*0x20 + -0x20) = 0x415cf6;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + 0x28) = unaff_RSI;\n        *(puVar3 + -8) = 0x415d15;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        unaff_RSI = *(puVar3 + 0x28);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 928
    },
    "00415d40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t * fcn.00415d40(void)\n\n{\n    code **ppcVar1;\n    code *pcVar2;\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t *puVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar3 = *in_RAX;\n            if (uVar3 != 0) {\n                puVar4 = in_RAX[3];\n                if (puVar4 != NULL) {\n                    in_RAX[3] = *puVar4;\n                    in_RAX[6] = in_RAX[6] + *in_RAX;\n                    if (*(in_RAX + 8) != '\\0') {\n                        *(*0x20 + -0x18) = puVar4;\n                        *(*0x20 + -0x38) = 0x415d96;\n                        fcn.0045e8c0();\n                        puVar4 = *(*0x20 + -0x18);\n                    }\n                    return puVar4;\n                }\n                *(*0x20 + 8) = in_RAX;\n                if (*(in_RAX + 5) < uVar3) {\n                    uVar3 = in_RAX[7];\n                    *(*0x20 + -0x38) = 0x415dc6;\n                    uVar3 = fcn.0040c8c0(uVar3);\n                    in_RAX = *(*0x20 + 8);\n                    in_RAX[4] = uVar3;\n                    *(in_RAX + 5) = *(in_RAX + 0x2c);\n                }\n                puVar4 = in_RAX[4];\n                ppcVar1 = in_RAX[1];\n                if (ppcVar1 != NULL) {\n                    *(*0x20 + -0x10) = puVar4;\n                    pcVar2 = *ppcVar1;\n                    *(*0x20 + -0x38) = 0x415df6;\n                    (*pcVar2)();\n                    in_RAX = *(*0x20 + 8);\n                    puVar4 = *(*0x20 + -0x10);\n                }\n                in_RAX[4] = in_RAX[4] + *in_RAX;\n                *(in_RAX + 5) = *(in_RAX + 5) - *in_RAX;\n                in_RAX[6] = in_RAX[6] + *in_RAX;\n                return puVar4;\n            }\n            *(*0x20 + -0x38) = 0x415e26;\n            fcn.00435540();\n            *(*0x20 + -0x38) = 0x415e37;\n            fcn.00435e40();\n            *(*0x20 + -0x38) = 0x415e3c;\n            fcn.004355c0();\n            *(*0x20 + -0x38) = 0x415e4d;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x415e58;\n        fcn.0045bb60();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 838
    },
    "00415f00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00415f00(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong noname_0;\n    ulong *puVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    noname_0 = fcn.00404840();\n    puVar1 = fcn.0040c560();\n    *puVar1 = 0x416060;\n    if (*0x801c20 == 0) {\n        puVar1[1] = noname_0;\n    }\n    else {\n        fcn.0045dea0(noname_0, param_2, param_3, param_4);\n    }\n    fcn.0043e560();\n    puVar1 = fcn.0040c560();\n    *puVar1 = 0x416000;\n    if (*0x801c20 == 0) {\n        puVar1[1] = noname_0;\n    }\n    else {\n        fcn.0045dea0(noname_0, param_2, param_3, param_4);\n    }\n    fcn.0043e560();\n    fcn.004057a0();\n    fcn.004057a0();\n    *0x805538 = 1;\n    return;\n}\n",
        "token_count": 331
    },
    "00416180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00416180(ulong arg1)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (((*0x805538 == '\\0') || (*0x801a0c != 0)) || (*0x8019ec != 0)) {\n        return 0;\n    }\n    if (in_RAX == 0) {\n        uVar1 = fcn.0041e540();\n        return uVar1 & 0xffffffffffffff00 | uVar1 <= *0x802388;\n    }\n    if (in_RAX == 1) {\n        if (-1 < *0x802300) {\n            if (*0x805528 == 0) {\n                uVar1 = 0;\n            }\n            else {\n                uVar1 = *0x805528 & 0xffffffffffffff00 | *0x795380 < unaff_RBX - *0x805528;\n            }\n            return uVar1 & 0xffffffff;\n        }\n        return 0;\n    }\n    if (in_RAX == 2) {\n        return 0 < arg1 - *0x7ae0b8;\n    }\n    return 1;\n}\n",
        "token_count": 328
    },
    "004162e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041668c)\n// WARNING: Removing unreachable block (ram,0x004166a3)\n\nvoid fcn.004162e0(uint64_t arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    char cVar5;\n    ulong in_RAX;\n    int64_t iVar6;\n    ulong unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    ulong uVar8;\n    uint64_t arg3;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            piVar3 = *(unaff_R14 + 0x30);\n            if (((*piVar3 == unaff_R14) || (iVar2 = *(piVar3 + 0x1b),  1 < iVar2)) || (piVar3[0x1a] != 0)) {\n                iVar2 = *(piVar3 + 0x1b);\n                *(piVar3 + 0x1b) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(piVar3 + 0x1b) = iVar2 + -1;\n            if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n            *(*0x20 + -0x4c) = arg1;\n            *(*0x20 + -0x30) = unaff_RBX;\n            *(*0x20 + -0x38) = in_RAX;\n            while( true ) {\n                *(*0x20 + -0x88) = 0x4163a5;\n                cVar5 = fcn.00416180(arg1);\n                if (cVar5 == '\\0') {\n                    bVar9 = false;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x4163b2;\n                    iVar6 = fcn.004214c0();\n                    bVar9 = iVar6 != -1;\n                }\n                if (!bVar9) break;\n                *0x7adbb4 = *0x7adbb4 + 1;\n                arg1 = *(*0x20 + -0x4c);\n            }\n            *(*0x20 + -0x88) = 0x4163d0;\n            fcn.00445720(0);\n            *(*0x20 + -0x88) = 0x4163e5;\n            cVar5 = fcn.00416180(*(*0x20 + -0x4c));\n            if (cVar5 == '\\0') {\n                *(*0x20 + -0x88) = 0x4164b0;\n                fcn.00445a60(0);\n                return;\n            }\n            *0x7ae078 = *(*0x20 + -0x38) == 2;\n            if (*0x801e78 == 1) {\n                uVar8 = 1;\n            }\n            else {\n                uVar8 = 0;\n                if (*0x801e78 == 2) {\n                    uVar8 = 2;\n                }\n            }\n            *(*0x20 + -0x40) = uVar8;\n            *(*0x20 + -0x88) = 0x416438;\n            fcn.00445720(0);\n            *(*0x20 + -0x88) = 0x41644b;\n            fcn.00445720(0);\n            if (*0x7b3b90 != '\\0') {\n                *(*0x20 + -0x28) = 0;\n                *(*0x20 + -0x28) = *0x7b3bc0;\n                *(*0x20 + -0x88) = 0x416486;\n                fcn.00450c80(*0x20 + -0x28);\n                *0x7b3bc0 = *0x7b3bc0 + 1;\n            }\n            iVar6 = 0;\n            while( true ) {\n                if (*0x7ada48 <= iVar6) {\n                    *(*0x20 + -0x88) = 0x4164ea;\n                    fcn.00417ea0();\n                    *(*0x20 + -0x80) = 0x7195e0;\n                    *(*0x20 + -0x88) = 0x4164fa;\n                    fcn.0045ba20();\n                    *0x7ae0bc = *0x8019f0;\n                    *0x7ae0c0 = *0x8019f0;\n                    if (*0x8019f8 < *0x8019f0) {\n                        *0x7ae0bc = *0x8019f8;\n                    }\n                    *0x7ae0f8 = *0x802388;\n                    *0x7ae0e8 = 0;\n                    *0x7ae070 = *(*0x20 + -0x40);\n                    *(*0x20 + -0x88) = 0x41655a;\n                    fcn.0045fb60();\n                    *0x7ae0c8 = *(*0x20 + -0x80);\n                    *(*0x20 + -0x48) = *0x7ae0c8;\n                    *0x7ae0f0 = *0x7ae0c8;\n                    if (*0x7b3b90 != '\\0') {\n                        *(*0x20 + -0x28) = 0;\n                        *(*0x20 + -0x28) = 1;\n                        *(*0x20 + -0x88) = 0x4165bf;\n                        fcn.00450c80(*0x20 + -0x28);\n                    }\n                    *(*0x20 + -0x80) = 0x719748;\n                    *(*0x20 + -0x88) = 0x4165cf;\n                    fcn.0045ba20();\n                    *(*0x20 + -0x80) = 0x7195e8;\n                    *(*0x20 + -0x88) = 0x4165f3;\n                    fcn.0045ba20();\n                    uVar10 = 0;\n                    uVar11 = 0;\n                    uVar12 = 0;\n                    uVar13 = 0;\n                    iVar4 = **(in_GS_OFFSET + 0x28);\n                    *(*0x20 + -0x88) = 0x41660c;\n                    fcn.00418de0();\n                    *0x7ae0b8 = *0x7ae0b8 + 1;\n                    arg3 = *(*0x20 + -0x4c);\n                    *(*0x20 + -0x88) = 0x416639;\n                    fcn.0041d480(*0x8019f0, iVar6, arg3);\n                    *(*0x20 + -0x88) = 0x41664f;\n                    fcn.004191a0(*(*0x20 + -0x48));\n                    if (*(*0x20 + -0x40) != 0) {\n                        *(*0x20 + -0x88) = 0x416665;\n                        fcn.00441ba0();\n                    }\n                    *0x8019ec = 1;\n                    *0x801c24 = 1;\n                    *0x801c20 = 1;\n                    *0x7adff0 = 0xffffffff;\n                    *0x7ae000 = 0xffffffff;\n                    *(*0x20 + -0x88) = 0x4166ca;\n                    fcn.004199a0(1, 0x8019ec, arg3);\n                    *(*0x20 + -0x88) = 0x4166cf;\n                    fcn.0041d2a0();\n                    *0x8019e4 = 1;\n                    piVar1 = *(iVar4 + 0x30) + 0xd8;\n                    *piVar1 = *piVar1 + 1;\n                    *(*0x20 + -0x20) = *(iVar4 + 0x30);\n                    *(*0x20 + -0x18) = CONCAT412(uVar13, CONCAT48(uVar12, CONCAT44(uVar11, uVar10)));\n                    *(*0x20 + -0x18) = 0x416880;\n                    *(*0x20 + -0x10) = *0x20 + -0x48;\n                    *(*0x20 + -0x80) = *0x20 + -0x18;\n                    *(*0x20 + -0x88) = 0x41671b;\n                    fcn.0045ba20();\n                    iVar6 = **(in_GS_OFFSET + 0x28);\n                    *(*0x20 + -0x88) = 0x416745;\n                    fcn.00445a60(0);\n                    iVar2 = *(*(*0x20 + -0x20) + 0xd8);\n                    *(*(*0x20 + -0x20) + 0xd8) = iVar2 + -1;\n                    if (iVar2 == 1) {\n                        if (*(iVar6 + 0xb1) == '\\0') {\n                            bVar9 = *(*0x20 + -0x40) == 0;\n                        }\n                        else {\n                            *(iVar6 + 0x10) = 0xfffffffffffffade;\n                            bVar9 = *(*0x20 + -0x40) == 0;\n                        }\n                    }\n                    else {\n                        bVar9 = *(*0x20 + -0x40) == 0;\n                    }\n                    if (!bVar9) {\n                        *(*0x20 + -0x88) = 0x41679c;\n                        fcn.0045b9a0();\n                    }\n                    *(*0x20 + -0x88) = 0x4167ad;\n                    fcn.00445a60(0);\n                    return;\n                }\n                piVar1 = *(*0x7ada40 + iVar6 * 8);\n                iVar2 = *(*(piVar1 + 0x10) + 0x488);\n                if (iVar2 != *0x7d3db8) break;\n                iVar6 = iVar6 + 1;\n            }\n            *(*0x20 + -0x50) = iVar2;\n            *(*0x20 + -0x4c) = *0x7d3db8;\n            *(*0x20 + -0x30) = *piVar1;\n            *(*0x20 + -0x88) = 0x4167cc;\n            arg1 = *0x7ada48;\n            fcn.00435540();\n            *(*0x20 + -0x88) = 0x4167dd;\n            fcn.00435e40();\n            *(*0x20 + -0x88) = 0x4167e7;\n            fcn.00435c40();\n            *(*0x20 + -0x88) = 0x4167f8;\n            fcn.00435e40();\n            *(*0x20 + -0x88) = 0x416805;\n            fcn.00435b40();\n            *(*0x20 + -0x88) = 0x416816;\n            fcn.00435e40();\n            *(*0x20 + -0x88) = 0x41681f;\n            fcn.00435b40();\n            *(*0x20 + -0x88) = 0x416825;\n            fcn.004357a0();\n            *(*0x20 + -0x88) = 0x41682a;\n            fcn.004355c0();\n            unaff_RBX = 0x14;\n            *(*0x20 + -0x88) = 0x41683b;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x41684f;\n        fcn.0045bb60();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 3006
    },
    "00416be0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00416be0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    bool bVar2;\n    ulong uVar3;\n    ulong arg1;\n    uchar *arg1_00;\n    ulong arg2;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    char cStack41;\n    ulong uStack40;\n    ulong uStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00445720(0);\n    while ((*0x8019ec == 1 && (*0x7adff0 == *0x7ae000))) {\n        if (*0x7adf60 == 0) {\n            if (*0x7adfe8 < *0x7adfec) {\n                bVar2 = true;\n            }\n            else {\n                bVar2 = false;\n            }\n        }\n        else {\n            bVar2 = true;\n        }\n        if (bVar2) break;\n        arg1 = 0;\n        fcn.00445720(0);\n        *0x8019e8 = 0;\n        fcn.0045ba20();\n        if (*0x8019e8 == 0) {\n            fcn.0045fb60();\n            uVar3 = 0x7195a8;\n            *0x7ae0d8 = 0x7195a8;\n            *0x7ae0f0 = 0x7195a8;\n            iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n            *(iVar1 + 0xd0) = 5;\n            if (*0x801c20 == 0) {\n                arg2 = 0x4af02b;\n                *(iVar1 + 200) = 0x4af02b;\n            }\n            else {\n                arg2 = 0x4af02b;\n                uVar3 = fcn.0045dec0(arg1, 0x4af02b, param_3, param_4);\n            }\n            uStack40 = uVar3;\n            if (*0x7b3b90 != '\\0') {\n                uStack32 = 0;\n                fcn.00450c80(&uStack32);\n            }\n            fcn.0045ba20();\n            cStack41 = '\\0';\n            auStack24 = CONCAT88(&cStack41, 0x416f00);\n            arg1_00 = auStack24;\n            fcn.0045ba20();\n            if (cStack41 == '\\0') {\n                fcn.0044ab20();\n                *0x8019e4 = 0;\n                fcn.004191a0(uStack40);\n                fcn.0041aec0();\n                fcn.00445a60(0);\n                fcn.00441ba0();\n                fcn.0041d9a0(*0x8019f0);\n                fcn.00417160();\n                return;\n            }\n            iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n            *(iVar1 + 0xd0) = 0;\n            if (*0x801c20 == 0) {\n                *(iVar1 + 200) = 0;\n            }\n            else {\n                fcn.0045dda0(arg1_00, arg2, param_3, param_4);\n            }\n            fcn.0045ba20();\n            fcn.00445a60(0);\n        }\n        else {\n            fcn.00445a60(0);\n        }\n    }\n    fcn.00445a60(0);\n    return;\n}\n",
        "token_count": 864
    },
    "00418620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00418620(ulong noname_0, ulong noname_1, ulong arg3)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t arg2;\n    int64_t iVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (0 < *0x801ea8) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x78) = 0x41864c;\n                fcn.0042bbe0();\n                in_RAX = *(*0x20 + 8);\n            }\n            if (*0x8019ec == 2) {\n                *(*0x20 + -0x20) = *0x7adf60;\n                *0x7adff8 = in_RAX;\n                if ((*0x7adf60 == 0) && (arg2 = *0x7adfe8,  *0x7adfec <= *0x7adfe8)) {\n                    if (0 < *0x801e6c) {\n                        *(*0x20 + -0x78) = 0x41869a;\n                        fcn.00419ba0();\n                    }\n                    if (*0x7adf60 == 0) {\n                        *0x7ae048 = in_XMM15;\n                        if (*0x801c20 == 0) {\n                            *0x7ae040 = 0;\n                        }\n                        else {\n                            *(*0x20 + -0x78) = 0x4186d4;\n                            fcn.0045dea0(0, arg2, arg3, in_R9);\n                        }\n                        *(*0x20 + -0x10) = *0x7ada40;\n                        *(*0x20 + -0x28) = *0x7ada48;\n                        iVar3 = 0;\n                        iVar4 = *0x7ada40;\n                        iVar5 = *0x7ada48;\n                        while( true ) {\n                            iVar2 = *0x7ada48;\n                            iVar1 = *0x7ada40;\n                            if (iVar5 <= iVar3) {\n                                for (iVar4 = 0; iVar4 < iVar2; iVar4 = iVar4 + 1) {\n                                    iVar5 = *(*(iVar1 + iVar4 * 8) + 0x40);\n                                    if (iVar5 != 0) {\n                                        *(iVar5 + 8) = 0;\n                                    }\n                                }\n                                *(*0x20 + -0x78) = 0x4187b5;\n                                fcn.0041e200();\n                                return;\n                            }\n                            *(*0x20 + -0x30) = iVar3;\n                            *(*0x20 + -0x18) = *(iVar4 + iVar3 * 8);\n                            if (*0x801e6c < 1) {\n                                *(*0x20 + -0x78) = 0x418745;\n                                fcn.0042ce20();\n                            }\n                            else {\n                                *(*0x20 + -0x78) = 0x418731;\n                                fcn.0042cfa0();\n                            }\n                            iVar4 = *(*(*0x20 + -0x18) + 0x1240);\n                            if ((iVar4 != 0) &&\n                               ((*(iVar4 + 0x10) != 0 || (*(*(*(*0x20 + -0x18) + 0x1248) + 0x10) != 0)))) break;\n                            *(*0x20 + -0x78) = 0x4186fb;\n                            fcn.00422e00();\n                            iVar3 = *(*0x20 + -0x30) + 1;\n                            iVar4 = *(*0x20 + -0x10);\n                            iVar5 = *(*0x20 + -0x28);\n                        }\n                        *(*0x20 + -0x78) = 0x4187c5;\n                        fcn.00435540();\n                        *(*0x20 + -0x38) = **(*0x20 + -0x18);\n                        *(*0x20 + -0x59) = *(*(*0x20 + -0x18) + 0x498);\n                        *(*0x20 + -0x78) = 0x4187e5;\n                        fcn.00435540();\n                        *(*0x20 + -0x78) = 0x4187f6;\n                        fcn.00435e40();\n                        *(*0x20 + -0x78) = 0x418805;\n                        fcn.00435c40();\n                        *(*0x20 + -0x78) = 0x418816;\n                        fcn.00435e40();\n                        *(*0x20 + -0x78) = 0x418825;\n                        fcn.004357e0();\n                        *(*0x20 + -0x78) = 0x41882a;\n                        fcn.004355c0();\n                        if (*(*(*0x20 + -0x18) + 0x1240) == 0) {\n                            *(*0x20 + -0x78) = 0x4188f1;\n                            fcn.00435540();\n                            *(*0x20 + -0x78) = 0x418905;\n                            fcn.00435e40();\n                            *(*0x20 + -0x78) = 0x41890a;\n                            fcn.004355c0();\n                        }\n                        else {\n                            *(*0x20 + -0x28) = *(*(*(*0x20 + -0x18) + 0x1240) + 0x10);\n                            *(*0x20 + -0x78) = 0x41884d;\n                            fcn.00435540();\n                            *(*0x20 + -0x78) = 0x41885e;\n                            fcn.00435e40();\n                            *(*0x20 + -0x78) = 0x418868;\n                            fcn.00435c40();\n                            *(*0x20 + -0x78) = 0x41886d;\n                            fcn.004355c0();\n                        }\n                        if (*(*(*0x20 + -0x18) + 0x1248) == 0) goto code_r0x004188cc;\n                        *(*0x20 + -0x28) = *(*(*(*0x20 + -0x18) + 0x1248) + 0x10);\n                        *(*0x20 + -0x78) = 0x41888c;\n                        fcn.00435540();\n                        *(*0x20 + -0x78) = 0x41889d;\n                        fcn.00435e40();\n                        *(*0x20 + -0x78) = 0x4188a7;\n                        fcn.00435c40();\n                        *(*0x20 + -0x78) = 0x4188ac;\n                        fcn.004355c0();\n                        do {\n                            *(*0x20 + -0x78) = 0x4188b1;\n                            fcn.00435540();\n                            *(*0x20 + -0x78) = 0x4188b6;\n                            fcn.004357a0();\n                            *(*0x20 + -0x78) = 0x4188bb;\n                            fcn.004355c0();\n                            *(*0x20 + -0x78) = 0x4188cc;\n                            fcn.00433c80();\ncode_r0x004188cc:\n                            *(*0x20 + -0x78) = 0x4188d1;\n                            fcn.00435540();\n                            *(*0x20 + -0x78) = 0x4188e5;\n                            fcn.00435e40();\n                            *(*0x20 + -0x78) = 0x4188ea;\n                            fcn.004355c0();\n                        } while( true );\n                    }\n                    *(*0x20 + -0x78) = 0x418925;\n                    fcn.00433c80();\n                }\n                *(*0x20 + -0x40) = *0x7adfe8;\n                *(*0x20 + -0x48) = *0x7adfec;\n                *(*0x20 + -0x28) = *0x7ae008;\n                *(*0x20 + -0x30) = *0x7ae010;\n                *(*0x20 + -0x50) = *0x7ae018;\n                *(*0x20 + -0x58) = *0x7ae020;\n                *(*0x20 + -0x78) = 0x418970;\n                fcn.00435540();\n                *(*0x20 + -0x78) = 0x418985;\n                fcn.00435e40();\n                *(*0x20 + -0x78) = 0x41898f;\n                fcn.00435ca0();\n                *(*0x20 + -0x78) = 0x4189a5;\n                fcn.00435e40();\n                *(*0x20 + -0x78) = 0x4189af;\n                fcn.00435b40();\n                *(*0x20 + -0x78) = 0x4189c5;\n                fcn.00435e40();\n                *(*0x20 + -0x78) = 0x4189cf;\n                fcn.00435b40();\n                *(*0x20 + -0x78) = 0x4189e5;\n                fcn.00435e40();\n                *(*0x20 + -0x78) = 0x4189ef;\n                fcn.00435c40();\n                *(*0x20 + -0x78) = 0x418a05;\n                fcn.00435e40();\n                *(*0x20 + -0x78) = 0x418a0f;\n                fcn.00435c40();\n                *(*0x20 + -0x78) = 0x418a25;\n                fcn.00435e40();\n                *(*0x20 + -0x78) = 0x418a2f;\n                fcn.00435c40();\n                *(*0x20 + -0x78) = 0x418a45;\n                fcn.00435e40();\n                *(*0x20 + -0x78) = 0x418a4f;\n                fcn.00435c40();\n                *(*0x20 + -0x78) = 0x418a54;\n                fcn.004357a0();\n                *(*0x20 + -0x78) = 0x418a59;\n                fcn.004355c0();\n                *(*0x20 + -0x78) = 0x418a6c;\n                fcn.004334e0();\n            }\n            *(*0x20 + -0x78) = 0x418a7d;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + -8) = 0x418a88;\n        fcn.0045bb60();\n        in_RAX = *(puVar6 + 8);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 2653
    },
    "00418aa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00418c4a)\n\nvoid fcn.00418aa0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    char cVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x8019ec == 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x28) = 0x418ad9;\n                fcn.0040a460();\n                *0x7d3db8 = *0x7d3db8 + 2;\n                *0x7adbbc = 0;\n                *0x7d3de0 = 0;\n                *0x7d4078 = *0x7d4060;\n                *0x7d4080 = *0x7d4068;\n                if (*0x801c20 == 0) {\n                    *0x7d4070 = *0x7d4058;\n                }\n                else {\n                    *(*0x20 + -0x28) = 0x418b3b;\n                    fcn.0045dea0(*0x7d4058, *0x7d4060, param_3, param_4);\n                }\n                *0x7d3e00 = 0;\n                *0x7d3e08 = 0;\n                *(*0x20 + -0x28) = 0x418b65;\n                fcn.0040a680();\n                *0x7adbc0 = 0;\n                if (*(*0x20 + 8) != 2) {\n                    *(*0x20 + -0x28) = 0x418bb5;\n                    fcn.0040a460();\n                    if (*0x7adbb0 != '\\0') {\n                        *0x7adbb0 = '\\0';\n                        *(*0x20 + -0x28) = 0x418bd8;\n                        fcn.004379c0(1);\n                    }\n                    *(*0x20 + -0x28) = 0x418be6;\n                    fcn.0040a680();\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x418b8a;\n                fcn.0040a460();\n                *0x7d3df8 = 0;\n                *(*0x20 + -0x28) = 0x418ba5;\n                fcn.0040a680();\n                while( true ) {\n                    *(*0x20 + -0x28) = 0x418bfb;\n                    iVar2 = fcn.004214c0();\n                    if (iVar2 == -1) break;\n                    *0x7adbb8 = *0x7adbb8 + 1;\n                }\n                *(*0x20 + -0x28) = 0x418c0b;\n                fcn.00423520();\n                do {\n                    *(*0x20 + -0x28) = 0x418c12;\n                    cVar1 = fcn.00423620();\n                } while (cVar1 != '\\0');\n                *0x8019f4 = ((*0x8019f4 >> 1) + (((*0x8019f4 >> 1) + 1) / 0x6000000) * -0x6000000 + 1) * 2;\n                LOCK();\n                *(*0x20 + -0x28) = 0x418c59;\n                fcn.0042abc0();\n                return;\n            }\n            *(*0x20 + -0x28) = 0x418c74;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x418c7f;\n        fcn.004602a0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1024
    },
    "00418de0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00418de0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong *puVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t arg2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (*0x7ad0b0 != NULL) {\n        (***0x7ad0b0)();\n    }\n    arg2 = *0x7ada68;\n    iVar3 = *0x7ada60;\n    for (iVar2 = 0; iVar2 < arg2; iVar2 = iVar2 + 1) {\n        puVar1 = *(iVar3 + iVar2 * 8);\n        if (*0x801c20 != '\\0') {\n            fcn.00403500();\n        }\n        *puVar1 = 0;\n    }\n    fcn.0040a460();\n    iVar3 = *0x7ae5c0;\n    while (iVar3 != 0) {\n        arg2 = *(iVar3 + 8);\n        if (*0x801c20 == 0) {\n            *(iVar3 + 8) = 0;\n            iVar3 = arg2;\n        }\n        else {\n            iVar3 = arg2;\n            fcn.0045dea0(0, arg2, param_3, param_4);\n            arg2 = iVar3;\n        }\n    }\n    if (*0x801c20 == 0) {\n        *0x7ae5c0 = 0;\n    }\n    else {\n        fcn.0045dea0(0, arg2, param_3, param_4);\n    }\n    fcn.0040a680();\n    fcn.0040a460();\n    iVar3 = *0x7ae5d0;\n    while (iVar3 != 0) {\n        arg2 = *(iVar3 + 0x28);\n        if (*0x801c20 == 0) {\n            *(iVar3 + 0x28) = 0;\n            iVar3 = arg2;\n        }\n        else {\n            iVar3 = arg2;\n            fcn.0045dea0(0, arg2, param_3, param_4);\n            arg2 = iVar3;\n        }\n    }\n    if (*0x801c20 == 0) {\n        *0x7ae5d0 = 0;\n    }\n    else {\n        fcn.0045dea0(0, arg2, param_3, param_4);\n    }\n    fcn.0040a680();\n    return;\n}\n",
        "token_count": 615
    },
    "00418f80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuchar * fcn.00418f80(uint64_t arg1)\n\n{\n    uchar *in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    int32_t *piVar3;\n    uchar *puVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    char cVar7;\n    uint64_t unaff_RBX;\n    uint64_t arg1_00;\n    uchar *puVar8;\n    uchar *puVar9;\n    uint64_t unaff_RDI;\n    uint64_t uVar10;\n    int64_t unaff_R14;\n    int64_t aiStack96 [3];\n    char acStack72 [8];\n    int32_t *apiStack64 [5];\n    uchar auStack24 [16];\n    \n    puVar4 = &stack0xfffffffffffffff8;\n    if (unaff_RDI < 10000000) {\n        uVar5 = (unaff_RDI >> 1) / 500;\n        if (uVar5 == 0) {\n            if (unaff_RBX != 0) {\n                *in_RAX = 0x30;\n                if (arg1 != 0) {\n                    return in_RAX;\n                }\n                uVar5 = 0;\n                fcn.0045e2c0(1, 0);\n            }\n            arg1 = 0;\n            iVar1 = fcn.0045e240(0);\n            goto code_r0x0041901b;\n        }\n        iVar1 = 3;\n        for (; 99 < uVar5; uVar5 = uVar5 / 10) {\ncode_r0x0041901b:\n            iVar1 = iVar1 + -1;\n        }\n        arg1_00 = unaff_RBX - iVar1;\n        uVar2 = arg1_00 - 1;\n        uVar6 = unaff_RBX - 1;\ncode_r0x0041904c:\n        uVar10 = uVar6;\n        if ((uVar5 < 10) && (uVar10 < uVar2)) {\n            if (uVar10 < unaff_RBX) {\n                in_RAX[uVar10] = uVar5 + '0';\n                return in_RAX + (-(arg1 - uVar10) >> 0x3f & uVar10);\n            }\n            fcn.0045e240(unaff_RBX);\n            goto code_r0x004190de;\n        }\n        uVar6 = uVar5 / 10;\n        arg1_00 = uVar5 % 10;\n        uVar5 = uVar6;\n        if (uVar10 < unaff_RBX) goto code_r0x0041907a;\n        goto code_r0x004190e6;\n    }\n    uVar5 = unaff_RDI / 1000000;\n    uVar2 = unaff_RBX - 1;\n    arg1_00 = unaff_RBX;\n    uVar6 = uVar2;\ncode_r0x004190f7:\n    uVar10 = uVar6;\n    cVar7 = uVar5;\n    if ((uVar5 < 10) && (uVar10 < uVar2)) {\n        if (uVar10 < arg1_00) {\n            in_RAX[uVar10] = cVar7 + '0';\n            return in_RAX + (-(arg1 - uVar10) >> 0x3f & uVar10);\n        }\n        fcn.0045e240(arg1_00);\n        goto code_r0x0041918c;\n    }\n    uVar5 = uVar5 / 10;\n    if (uVar10 < arg1_00) goto code_r0x0041912b;\n    goto code_r0x00419194;\ncode_r0x0041907a:\n    in_RAX[uVar10] = arg1_00 + '0';\n    uVar6 = uVar10 - 1;\n    if (uVar6 != uVar2) goto code_r0x0041904c;\n    if (uVar6 < unaff_RBX) {\n        in_RAX[uVar10 - 1] = 0x2e;\n        uVar6 = uVar10 - 2;\n        goto code_r0x0041904c;\n    }\ncode_r0x004190de:\n    fcn.0045e240(unaff_RBX);\ncode_r0x004190e6:\n    arg1 = unaff_RBX;\n    uVar2 = arg1;\n    uVar6 = fcn.0045e240(arg1);\n    goto code_r0x004190f7;\ncode_r0x0041912b:\n    in_RAX[uVar10] = cVar7 + uVar5 * -10 + '0';\n    uVar6 = uVar10 - 1;\n    if (uVar6 == uVar2) {\n        if (arg1_00 <= uVar6) {\ncode_r0x0041918c:\n            fcn.0045e240(arg1_00);\ncode_r0x00419194:\n            uVar5 = arg1_00;\n            piVar3 = fcn.0045e240(arg1_00);\n            puVar8 = auStack24;\n            do {\n                cVar7 = arg1_00;\n                puVar9 = puVar8;\n                if (*(unaff_R14 + 0x10) <= puVar8 && puVar8 != *(unaff_R14 + 0x10)) {\n                    puVar9 = puVar8 + -0x20;\n                    *(puVar8 + -8) = puVar4;\n                    puVar4 = puVar8 + -8;\n                    LOCK();\n                    if (*piVar3 == 0) {\n                        *piVar3 = 1;\n                        if (*(piVar3 + 8) != cVar7) {\n                            *(puVar8 + -0x10) = piVar3;\n                            puVar8[0x10] = cVar7;\n                            *(puVar8 + -0x28) = 0x4191e8;\n                            puVar4 = fcn.004193a0();\n                            iVar1 = *(puVar8 + -0x10);\n                            *(iVar1 + 0x20) = puVar8[0x10];\n                            *(iVar1 + 0x21) = 1;\n                            return puVar4;\n                        }\n                        *(puVar8 + -0x28) = 0x419214;\n                        fcn.00433c80();\n                    }\n                    cVar7 = '/';\n                    *(puVar8 + -0x28) = 0x419225;\n                    piVar3 = fcn.00433c80();\n                }\n                *(puVar9 + 8) = piVar3;\n                puVar9[0x10] = cVar7;\n                *(puVar9 + 0x18) = uVar5;\n                *(puVar9 + -8) = 0x419239;\n                fcn.0045bb60();\n                piVar3 = *(puVar9 + 8);\n                arg1_00 = puVar9[0x10];\n                uVar5 = *(puVar9 + 0x18);\n                puVar8 = puVar9;\n            } while( true );\n        }\n        in_RAX[uVar10 - 1] = 0x2e;\n        uVar6 = uVar10 - 2;\n    }\n    goto code_r0x004190f7;\n}\n",
        "token_count": 1648
    },
    "00419260": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00419260(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x21) != '\\0') {\n                iVar2 = *(in_RAX + 0x40);\n                if (iVar2 <= unaff_RBX) {\n                    *(*0x20 + 0x10) = unaff_RBX;\n                    *(*0x20 + 8) = in_RAX;\n                    iVar1 = *(in_RAX + 0x4c);\n                    *(*0x20 + -0x28) = 0x4192a5;\n                    fcn.004195a0((unaff_RBX - iVar2) * iVar1);\n                    in_RAX = *(*0x20 + 8);\n                    unaff_RBX = *(*0x20 + 0x10);\n                }\n                *(in_RAX + 0x40) = unaff_RBX;\n                *(in_RAX + 0x21) = 0;\n                *(*0x20 + -0x28) = 0x4192bd;\n                fcn.00419640();\n                return;\n            }\n            unaff_RBX = 0x2f;\n            *(*0x20 + -0x28) = 0x4192d8;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x4192e8;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 536
    },
    "00419300": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00419300(void)\n\n{\n    uint32_t *in_RAX;\n    uint64_t uVar1;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            if (*in_RAX != 0) {\n                return *in_RAX;\n            }\n            *in_RAX = 1;\n            if (*(in_RAX + 0x21) == '\\0') {\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x28) = 0x41933c;\n                fcn.004193a0();\n                *(*0x20 + -0x28) = 0x419346;\n                uVar1 = fcn.00419640();\n                return uVar1;\n            }\n            unaff_RBX = 0x18;\n            *(*0x20 + -0x28) = 0x41936b;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x41937b;\n        fcn.0045bb60();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 434
    },
    "00419640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00419640(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_RAX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *in_RAX;\n            *in_RAX = 0;\n            if (iVar1 == 1) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x419678;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x419685;\n        fcn.0045bb60();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 280
    },
    "004199a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004199a0(ulong noname_0, ulong noname_1, ulong arg3)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (*0x7ad098 == NULL) {\n        iVar5 = 0;\n        iVar6 = 0;\n    }\n    else {\n        iVar6 = **0x7ad098;\n        iVar5 = (*0x7ad098)[1];\n    }\n    *0x7ae008 = in_XMM15;\n    for (iVar7 = 0; iVar7 < iVar5; iVar7 = iVar7 + 1) {\n        iVar1 = *(iVar6 + iVar7 * 8);\n        uVar8 = (*(iVar1 + 0xd8) - *(iVar1 + 0xd0)) + 0x3ffffU >> 0x12;\n        if (*0x7ae008 < uVar8) {\n            *0x7ae008 = CONCAT88(*0x7ae010, uVar8);\n        }\n    }\n    if (*0x7ad098 == NULL) {\n        iVar5 = 0;\n        iVar6 = 0;\n    }\n    else {\n        iVar6 = **0x7ad098;\n        iVar5 = (*0x7ad098)[1];\n    }\n    for (iVar7 = 0; iVar7 < iVar5; iVar7 = iVar7 + 1) {\n        iVar1 = *(iVar6 + iVar7 * 8);\n        uVar8 = (*(iVar1 + 0xe8) - *(iVar1 + 0xe0)) + 0x3ffffU >> 0x12;\n        if (*0x7ae010 < uVar8) {\n            *0x7ae008 = CONCAT88(uVar8, *0x7ae008);\n        }\n    }\n    *0x7d4090 = *0x7d4060;\n    *0x7d4098 = *0x7d4060;\n    if (*0x801c20 == 0) {\n        *0x7d4088 = *0x7d4058;\n        *0x7ae018 = *0x7d4060;\n    }\n    else {\n        *0x7ae018 = fcn.0045dea0(*0x7d4058, iVar7, arg3, in_R9);\n    }\n    *0x7ae048 = *0x7ada28;\n    *0x7ae050 = *0x7ada28;\n    if (*0x801c20 == 0) {\n        *0x7ae040 = *0x7ada20;\n        *0x7ae020 = *0x7ada28;\n    }\n    else {\n        *0x7ae020 = fcn.0045dea0(*0x7ada20, iVar7, arg3, in_R9);\n    }\n    iVar3 = SUB164(*0x7ae008, 0);\n    iVar4 = SUB164(*0x7ae008 >> 0x40, 0);\n    iVar2 = *0x7ae018;\n    *0x7adfe8 = 0;\n    *0x7adfec = iVar3 + iVar4 + iVar2 + *0x7ae020 + 2;\n    *0x7ae028 = 2;\n    *0x7ae02c = iVar3 + 2;\n    *0x7ae030 = iVar4 + iVar3 + 2;\n    *0x7ae034 = iVar2 + iVar3 + iVar4 + 2;\n    *0x7ae038 = *0x7ae020 + iVar3 + iVar4 + iVar2 + 2;\n    return;\n}\n",
        "token_count": 926
    },
    "0041a540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041a540(void)\n\n{\n    uint64_t uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    ulong in_RAX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    ulong *puVar7;\n    uint64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint8_t uVar9;\n    uint64_t in_R10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar5 = *0x7d4090;\n            if (unaff_RBX < *0x7d4090) {\n                uVar5 = *(*0x7d4088 + unaff_RBX * 8);\n                unaff_RBX = uVar5 >> 0x14;\n                if (unaff_RBX < 0x40) {\n                    *(*0x20 + -0x48) = *0x7d3db8;\n                    *(*0x20 + -0x10) = in_RAX;\n                    unaff_RBX = *(*(unaff_RBX * 8 + 0x7d3e10) + (uVar5 & 0xfffff) * 8);\n                    *(*0x20 + -0x28) = unaff_RBX;\n                    iVar4 = 0;\n                    uVar6 = *0x7d3db8;\n                    do {\n                        if (0x3f < iVar4) {\n                            return;\n                        }\n                        uVar9 = *(unaff_RBX + iVar4 + 0x21080);\n                        if (uVar9 != 0) {\n                            *(*0x20 + -0x30) = iVar4;\n                            *(*0x20 + -0x4a) = uVar9;\n                            for (uVar5 = 0; uVar5 < 8; uVar5 = uVar5 + 1) {\n                                if ((uVar9 & 1 << (uVar5 & 0x1f)) != 0) {\n                                    uVar1 = uVar5 + iVar4 * 8;\n                                    if (uVar1 < 0x200) {\n                                        iVar4 = *(unaff_RBX + 0x20000 + uVar1 * 8);\n                                        in_R10 = in_R10 & 0xffffffffffffff00 | *(iVar4 + 99);\n                                        if (*(iVar4 + 99) == 1) {\n                                            *(*0x20 + -0x20) = uVar5;\n                                            if (*0x8019b1 == '\\0') {\n                                                uVar3 = *(iVar4 + 0x58);\n                                                in_R10 = uVar3;\n                                                if ((uVar3 != uVar6) && (uVar3 != uVar6 + 3)) {\ncode_r0x0041a71a:\n                                                    *(*0x20 + -0x44) = in_R10;\n                                                    *(*0x20 + -0x80) = 0x41a725;\n                                                    fcn.00435540();\n                                                    *(*0x20 + -0x80) = 0x41a736;\n                                                    fcn.00435e40();\n                                                    *(*0x20 + -0x80) = 0x41a73f;\n                                                    fcn.00435b40();\n                                                    *(*0x20 + -0x80) = 0x41a745;\n                                                    fcn.00435760();\n                                                    *(*0x20 + -0x80) = 0x41a74e;\n                                                    fcn.00435b40();\n                                                    *(*0x20 + -0x80) = 0x41a753;\n                                                    fcn.004357a0();\n                                                    *(*0x20 + -0x80) = 0x41a758;\n                                                    fcn.004355c0();\n                                                    *(*0x20 + -0x80) = 0x41a769;\n                                                    fcn.00433c80();\n                                                    goto code_r0x0041a769;\n                                                }\n                                            }\n                                            *(*0x20 + -0x38) = iVar4;\n                                            *(*0x20 + -0x18) = iVar4 + 0x78;\n                                            *(*0x20 + -0x80) = 0x41a669;\n                                            fcn.0040a460();\n                                            iVar4 = *(*0x20 + -0x38);\n                                            for (puVar7 = *(iVar4 + 0x80); puVar7 != NULL; puVar7 = *puVar7) {\n                                                if (*(puVar7 + 10) == '\\x01') {\n                                                    uVar2 = *(puVar7 + 1);\n                                                    uVar5 = *(iVar4 + 0x68);\n                                                    if (uVar5 == 0) {\n                                                        *(*0x20 + -0x80) = 0x41a71a;\n                                                        fcn.00432100();\n                                                        goto code_r0x0041a71a;\n                                                    }\n                                                    *(*0x20 + -0x40) = puVar7;\n                                                    *(*0x20 + -0x80) = 0x41a6e5;\n                                                    fcn.0041c400(iVar4, uVar2 % uVar5);\n                                                    *(*0x20 + -0x80) = 0x41a709;\n                                                    fcn.0041c260(0x795280);\n                                                    iVar4 = *(*0x20 + -0x38);\n                                                    puVar7 = *(*0x20 + -0x40);\n                                                }\n                                            }\n                                            *(*0x20 + -0x80) = 0x41a685;\n                                            fcn.0040a680();\n                                            uVar5 = *(*0x20 + -0x20);\n                                            uVar6 = *(*0x20 + -0x48);\n                                            unaff_RBX = *(*0x20 + -0x28);\n                                            uVar9 = *(*0x20 + -0x4a);\n                                            iVar4 = *(*0x20 + -0x30);\n                                            goto code_r0x0041a5e9;\n                                        }\ncode_r0x0041a769:\n                                        *(*0x20 + -0x49) = in_R10;\n                                        *(*0x20 + -0x80) = 0x41a773;\n                                        fcn.00435540();\n                                        *(*0x20 + -0x80) = 0x41a785;\n                                        fcn.00435e40();\n                                        *(*0x20 + -0x80) = 0x41a792;\n                                        fcn.00435b40();\n                                        *(*0x20 + -0x80) = 0x41a797;\n                                        fcn.004357a0();\n                                        *(*0x20 + -0x80) = 0x41a79c;\n                                        fcn.004355c0();\n                                        unaff_RBX = 0x2b;\n                                        *(*0x20 + -0x80) = 0x41a7ad;\n                                        fcn.00433c80();\n                                    }\n                                    *(*0x20 + -0x80) = 0x41a7ba;\n                                    fcn.0045e260(0x200);\n                                    goto code_r0x0041a7ba;\n                                }\ncode_r0x0041a5e9:\n                            }\n                        }\n                        iVar4 = iVar4 + 1;\n                    } while( true );\n                }\ncode_r0x0041a7ba:\n                uVar5 = 0x40;\n                *(*0x20 + -0x80) = 0x41a7c7;\n                fcn.0045e260(0x40);\n            }\n            *(*0x20 + -0x80) = 0x41a7cf;\n            in_RAX = fcn.0045e240(uVar5);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x41a7df;\n        fcn.0045bb60();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1911
    },
    "0041a800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041a800(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t arg4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (**(in_RAX + 0x30) == unaff_R14) {\n        return;\n    }\n    if ((0 < *(*(unaff_R14 + 0x30) + 0xd8)) || (*(*(unaff_R14 + 0x30) + 0xd0) != 0)) {\n        return;\n    }\n    bVar1 = false;\n    do {\n        while( true ) {\n            iVar3 = *0x8023d8;\n            if (*0x801ec4 != '\\0') {\n                if (bVar1) {\n                    fcn.00450c80(0);\n                }\n                return;\n            }\n            iVar4 = -*(in_RAX + 0x180) * *0x802418;\n            arg4 = -*(in_RAX + 0x180);\n            if (iVar4 < 0x10000) {\n                iVar4 = 0x10000;\n                arg4 = *0x732820 * *0x802420;\n            }\n            if (0 < *0x8023d8) {\n                if (*0x8023d8 < iVar4) {\n                    *(in_RAX + 0x180) = *0x8023d8 * *0x802420 + *(in_RAX + 0x180) + 1;\n                    arg4 = iVar3;\n                }\n                else {\n                    *(in_RAX + 0x180) = *(in_RAX + 0x180) + arg4;\n                    arg4 = iVar4;\n                }\n                LOCK();\n                *0x8023d8 = *0x8023d8 - arg4;\n                if (iVar4 == arg4) {\n                    if (bVar1) {\n                        fcn.00450c80(0);\n                    }\n                    return;\n                }\n            }\n            if ((*0x7b3b90 != '\\0') && (!bVar1)) {\n                fcn.00450c80(0);\n                bVar1 = true;\n            }\n            fcn.0045ba20();\n            iVar3 = *(in_RAX + 0x88);\n            iVar4 = in_RAX;\n            if (*0x801c20 == 0) {\n                *(in_RAX + 0x88) = 0;\n            }\n            else {\n                iVar3 = fcn.0045df20(in_RAX, in_RAX + 0x88, 0, arg4);\n            }\n            if (iVar3 != 0) {\n                fcn.00416be0();\n                iVar4 = in_RAX;\n            }\n            if (-1 < *(iVar4 + 0x180)) goto code_r0x0041aa76;\n            if (*(iVar4 + 0xb1) == '\\0') break;\n            fcn.0045b9a0();\n        }\n        cVar2 = fcn.0041af40();\n    } while (cVar2 == '\\0');\ncode_r0x0041aa76:\n    if (bVar1) {\n        fcn.00450c80(0);\n    }\n    return;\n}\n",
        "token_count": 786
    },
    "0041ab20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041ab20(ulong noname_0, uint64_t arg2, uint64_t arg3)\n\n{\n    uint64_t uVar1;\n    int32_t iVar2;\n    bool bVar3;\n    int64_t iVar4;\n    double dVar5;\n    int64_t in_RAX;\n    ulong uVar6;\n    int64_t iVar7;\n    int64_t arg1;\n    ulong unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint32_t uVar9;\n    ulong in_R9;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    double dVar11;\n    uint64_t uVar10;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar8 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar7 = in_RAX + 0x88;\n            if (*0x801c20 == 0) {\n                *(in_RAX + 0x88) = 0;\n            }\n            else {\n                *(*0x20 + -0x68) = 0x41ab5e;\n                in_RAX = fcn.0045dea0(0, arg2, arg3, in_R9);\n            }\n            if (*0x8019e4 == 0) {\n                *(in_RAX + 0x180) = 0;\n                return;\n            }\n            *(*0x20 + -0x10) = iVar7;\n            *(*0x20 + -0x20) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x68) = 0x41ab92;\n            fcn.0045fb60();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            arg2 = *(*0x20 + -0x60);\n            uVar1 = *(*(*(*(*0x20 + 8) + 0x30) + 0xa0) + 0x1228);\n            if (uVar1 >> 0x3d == 0) {\n                *(*(*(*(*0x20 + 8) + 0x30) + 0xa0) + 0x1228) = arg2 & 0x1fffffffffffffff | 0x4000000000000000;\n            }\n            LOCK();\n            iVar2 = *0x7ae000 + -1;\n            uVar9 = *0x7ae000 - 1;\n            uVar10 = uVar9;\n            arg3 = *0x7adff0;\n            *0x7ae000 = iVar2;\n            if (*0x7adff0 != uVar9) {\n                *(*0x20 + -0x28) = uVar1 >> 0x3d;\n                *(*0x20 + -0x38) = arg2;\n                *(*0x20 + -0x68) = 0x41ac25;\n                fcn.00438120(4);\n                *(*(*0x20 + 8) + 0xb0) = 1;\n                *(*0x20 + -0x68) = 0x41ac4e;\n                uVar6 = fcn.0041c020();\n                *(*0x20 + -0x30) = uVar6;\n                uVar6 = 2;\n                *(*0x20 + -0x68) = 0x41ac67;\n                fcn.00438120(2);\n                dVar5 = *0x802420;\n                dVar11 = *(*0x20 + -0x30) * *0x802420;\n                uVar10 = *(*0x20 + 8);\n                *(uVar10 + 0x180) = dVar11 + *(uVar10 + 0x180) + 1;\n                LOCK();\n                iVar2 = *0x7ae000 + 1;\n                uVar9 = *0x7ae000 + 1;\n                arg2 = uVar9;\n                *0x7ae000 = iVar2;\n                if (uVar9 <= *0x7adff0) {\n                    if (*0x7adff0 == uVar9) {\n                        if (*0x7adf60 == 0) {\n                            if (*0x7adfe8 < *0x7adfec) {\n                                bVar3 = true;\n                            }\n                            else {\n                                bVar3 = false;\n                            }\n                        }\n                        else {\n                            bVar3 = true;\n                        }\n                        if (!bVar3) {\n                            if (*0x801c20 == 0) {\n                                *(uVar10 + 0x88) = uVar10;\n                            }\n                            else {\n                                *(*0x20 + -0x68) = 0x41ad18;\n                                fcn.0045df00(uVar6, arg2, arg3, in_R9);\n                            }\n                        }\n                    }\n                    *(*0x20 + -0x68) = 0x41ad1e;\n                    fcn.0045fb60();\n                    iVar7 = *(*(*(*0x20 + 8) + 0x30) + 0xa0);\n                    *(*0x20 + -0x18) = iVar7;\n                    arg1 = *(*0x20 + -0x60);\n                    *(iVar7 + 0x1218) = *(iVar7 + 0x1218) + (arg1 - *(*0x20 + -0x38));\n                    if (*(*0x20 + -0x28) == '\\0') {\n                        *(*0x20 + -0x20) = arg1;\n                        *(*0x20 + -0x68) = 0x41ad85;\n                        fcn.00419820(arg1);\n                        iVar7 = *(*0x20 + -0x18);\n                        arg1 = *(*0x20 + -0x20);\n                    }\n                    iVar4 = *0x8023e0;\n                    if (5000 < *(iVar7 + 0x1218)) {\n                        LOCK();\n                        *0x8023e0 = *0x8023e0 + *(iVar7 + 0x1218);\n                        *(*0x20 + -0x68) = 0x41adbb;\n                        fcn.00419300(iVar4, arg1);\n                        *(*(*0x20 + -0x18) + 0x1218) = 0;\n                    }\n                    return;\n                }\n                *(*0x20 + -0x44) = uVar9;\n                *(*0x20 + -0x3c) = *0x7adff0;\n                *(*0x20 + -0x68) = 0x41ade5;\n                fcn.00435540(dVar11, dVar5);\n                *(*0x20 + -0x68) = 0x41adf6;\n                fcn.00435e40();\n                *(*0x20 + -0x68) = 0x41adff;\n                fcn.00435b40();\n                *(*0x20 + -0x68) = 0x41ae10;\n                fcn.00435e40();\n                *(*0x20 + -0x68) = 0x41ae19;\n                fcn.00435b40();\n                *(*0x20 + -0x68) = 0x41ae1e;\n                fcn.004357a0();\n                *(*0x20 + -0x68) = 0x41ae25;\n                fcn.004355c0();\n                *(*0x20 + -0x68) = 0x41ae36;\n                fcn.00433c80();\n            }\n            *(*0x20 + -0x40) = uVar10;\n            *(*0x20 + -0x3c) = arg3;\n            *(*0x20 + -0x68) = 0x41ae45;\n            fcn.00435540();\n            *(*0x20 + -0x68) = 0x41ae56;\n            fcn.00435e40();\n            *(*0x20 + -0x68) = 0x41ae5f;\n            fcn.00435b40();\n            *(*0x20 + -0x68) = 0x41ae70;\n            fcn.00435e40();\n            *(*0x20 + -0x68) = 0x41ae79;\n            fcn.00435b40();\n            *(*0x20 + -0x68) = 0x41ae7e;\n            fcn.004357a0();\n            *(*0x20 + -0x68) = 0x41ae85;\n            fcn.004355c0();\n            unaff_RBX = 0x13;\n            *(*0x20 + -0x68) = 0x41ae96;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x41aea6;\n        fcn.004602a0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 2138
    },
    "0041b080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0041b080(void)\n\n{\n    double dVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (dVar1 = *0x802420,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (*0x7ae098 == 0) {\n        LOCK();\n        iVar2 = *0x8023d8;\n        *0x8023d8 = *0x8023d8 + in_RAX;\n        return iVar2;\n    }\n    fcn.0040a460();\n    iVar2 = dVar1 * in_RAX;\n    while( true ) {\n        iVar3 = *0x7ae098;\n        if ((*0x7ae098 == 0) || (iVar2 < 1)) goto code_r0x0041b1a9;\n        if ((*0x7ae098 != 0) && (*0x7ae098 = *(*0x7ae098 + 0xa0),  *0x7ae098 == 0)) {\n            *0x7ae0a0 = 0;\n        }\n        iVar2 = *(iVar3 + 0x180) + iVar2;\n        if (iVar2 < 0) break;\n        *(iVar3 + 0x180) = 0;\n        fcn.004379c0(0);\n    }\n    *(iVar3 + 0x180) = iVar2;\n    *(iVar3 + 0xa0) = 0;\n    iVar2 = iVar3;\n    if (*0x7ae0a0 != 0) {\n        *(*0x7ae0a0 + 0xa0) = iVar3;\n        iVar2 = *0x7ae098;\n    }\n    *0x7ae098 = iVar2;\n    *0x7ae0a0 = iVar3;\n    iVar2 = 0;\ncode_r0x0041b1a9:\n    iVar3 = iVar2;\n    if (0 < iVar2) {\n        LOCK();\n        iVar3 = *0x8023d8;\n        *0x8023d8 = *0x8023d8 + iVar2 * *0x802418;\n    }\n    iVar2 = fcn.0040a680(iVar3);\n    return iVar2;\n}\n",
        "token_count": 555
    },
    "0041b220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.0041b220(void)\n\n{\n    int64_t *piVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    ulong *puVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint32_t uVar7;\n    uint32_t *puVar8;\n    char cVar9;\n    ulong unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar11;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 + -0x180 && *0x20 + -0x180 != *(unaff_R14 + 0x18)) {\n            puVar10 = *0x20 + -0x200;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if ((*(in_RAX + 0x90) >> 0xc & 1) != 0) {\n                uVar7 = *(in_RAX + 0x90) & 0xffffefff;\n                if (uVar7 < 3) {\n                    if (uVar7 == 1) goto code_r0x0041b289;\n                }\n                else {\n                    if (4 < uVar7) {\n                        if (uVar7 == 6) {\n                            return 0;\n                        }\ncode_r0x0041b42a:\n                        *(*0x20 + -0x1a8) = *(in_RAX + 0x90);\n                        puVar8 = *(in_RAX + 0x98);\n                        *(*0x20 + -0x188) = puVar8;\n                        *(*0x20 + -0x208) = 0x41b445;\n                        fcn.00435540();\n                        *(*0x20 + -0x208) = 0x41b456;\n                        fcn.00435e40();\n                        *(*0x20 + -0x208) = 0x41b465;\n                        fcn.00435dc0();\n                        *(*0x20 + -0x208) = 0x41b476;\n                        fcn.00435e40();\n                        *(*0x20 + -0x208) = 0x41b485;\n                        fcn.00435c40();\n                        *(*0x20 + -0x208) = 0x41b496;\n                        fcn.00435e40();\n                        *(*0x20 + -0x208) = 0x41b4a5;\n                        fcn.00435b40();\n                        *(*0x20 + -0x208) = 0x41b4aa;\n                        fcn.004357a0();\n                        *(*0x20 + -0x208) = 0x41b4af;\n                        fcn.004355c0();\n                        *(*0x20 + -0x208) = 0x41b4c5;\n                        fcn.00433c80();\n                        while( true ) {\n                            *(*0x20 + -0x30) = *(*(*0x20 + -0x30) + 0x28);\ncode_r0x0041b4d9:\n                            if (*(*0x20 + -0x30) == 0) break;\n                            if (*(*(*0x20 + -0x30) + 0x18) != 0) {\n                                *(*0x20 + -0x208) = 0x41b516;\n                                fcn.0041c260(0x795280);\n                                puVar8 = *(*0x20 + 8);\n                            }\n                            if (*(*(*0x20 + -0x30) + 0x28) != 0) {\n                                *(*0x20 + -0x208) = 0x41b552;\n                                fcn.0041c260(0x795280);\n                                puVar8 = *(*0x20 + 8);\n                            }\n                            if (*(*(*0x20 + -0x30) + 1) != '\\0') {\n                                *(*0x20 + -0x208) = 0x41b596;\n                                fcn.0041c260(0x795280);\n                                puVar8 = *(*0x20 + 8);\n                            }\n                        }\n                        if (*(puVar8 + 8) != 0) {\n                            *(*0x20 + -0x208) = 0x41b5bd;\n                            fcn.00420880(0);\n                        }\n                        iVar6 = 0;\n                        *(*0x20 + -0x208) = 0x41b5d5;\n                        uVar4 = fcn.00420ca0(*(*0x20 + -0x40));\n                        *(*0x20 + -0x38) = uVar4;\n                        do {\n                            do {\n                                *(*0x20 + -0x208) = 0x41b5ea;\n                                iVar5 = fcn.004209c0();\n                                if (iVar5 == 0) {\n                                    while (iVar6 = *(*0x20 + -0x50),  iVar6 != 0) {\n                                        *(*0x20 + -0x50) = *(iVar6 + 0x18);\n                                        *(iVar6 + 0x10) = 0;\n                                        *(*0x20 + -0x208) = 0x41b648;\n                                        fcn.00423300();\n                                    }\n                                    if (((*(*0x20 + -0x68) == 0) && (*(*0x20 + -0x58) == 0)) && (*(*0x20 + -0x60) == 0))\n                                    {\n                                        return *(*0x20 + -0x198);\n                                    }\n                                    iVar6 = 0x19;\n                                    *(*0x20 + -0x208) = 0x41b69e;\n                                    iVar5 = fcn.00433c80();\n                                }\n                                else {\n                                    iVar5 = iVar5 - *(*0x20 + -0x80);\n                                    puVar8 = *(*0x20 + -0x38);\n                                }\n                                while (cVar9 = iVar6,  puVar8 != NULL) {\n                                    if (iVar5 < *puVar8) {\n                                        puVar8 = *(puVar8 + 4);\n                                    }\n                                    else {\n                                        if (iVar5 < *puVar8 + puVar8[1]) goto code_r0x0041b609;\n                                        puVar8 = *(puVar8 + 6);\n                                    }\n                                }\n                                puVar8 = NULL;\ncode_r0x0041b609:\n                            } while ((puVar8 == NULL) || (uVar2 = *(puVar8 + 2),  uVar2 == 0));\n                            *(puVar8 + 2) = 0;\n                            for (iVar6 = 0x79ae80; iVar6 != 0; iVar6 = *(iVar6 + 0x220)) {\n                                if ((*(iVar6 + 0x130) < uVar2 || *(iVar6 + 0x130) == uVar2) &&\n                                   (uVar2 <= *(iVar6 + 0x100) && *(iVar6 + 0x100) != uVar2)) goto code_r0x0041b6f6;\n                            }\n                            iVar6 = 0;\ncode_r0x0041b6f6:\n                            iVar6 = *(uVar2 + 0xc) + *(iVar6 + 0x128);\n                            if (*(uVar2 + 8) < 0) {\n                                *(*0x20 + -0x1ad) = cVar9;\n                                *(*0x20 + -0x1a0) = puVar8;\n                                *(*0x20 + -0x28) = uVar2;\n                                *(*0x20 + -0x208) = 0x41b72d;\n                                iVar5 = fcn.00412fe0();\n                                iVar6 = *(iVar5 + 0x18);\n                                puVar8 = *(*0x20 + -0x1a0);\n                                cVar9 = *(*0x20 + -0x1ad);\n                            }\n                            else {\n                                iVar5 = 0;\n                            }\n                            *(*0x20 + -400) = iVar5;\n                            puVar8 = *puVar8 + *(*0x20 + -0x80);\n                            if (cVar9 == '\\0') {\n                                *(*0x20 + -0x208) = 0x41b7bc;\n                                fcn.0041c260(iVar6);\n                            }\n                            else {\n                                *(*0x20 + -0x208) = 0x41b788;\n                                fcn.0041c760(iVar6);\n                            }\n                            iVar6 = *(*0x20 + -400);\n                            if (iVar6 != 0) {\n                                *(*0x20 + -0x208) = 0x41b7dc;\n                                fcn.004253c0(2);\n                            }\n                        } while( true );\n                    }\ncode_r0x0041b289:\n                    if (unaff_R14 != in_RAX) {\n                        iVar6 = *(in_RAX + 0x70);\n                        if (iVar6 == 0) {\n                            iVar6 = *(in_RAX + 0x38);\n                        }\n                        iVar5 = *(*(unaff_R14 + 0x30) + 0xa0);\n                        iVar6 = *(in_RAX + 8) - iVar6;\n                        piVar1 = iVar5 + 0x22b8;\n                        *piVar1 = *piVar1 + iVar6;\n                        piVar1 = iVar5 + 0x22c0;\n                        *piVar1 = *piVar1 + 1;\n                        if (*(in_RAX + 0x70) == 0) {\n                            if (*(in_RAX + 0xb4) == '\\0') {\n                                bVar11 = *(in_RAX + 0xb9) == '\\0';\n                            }\n                            else {\n                                bVar11 = false;\n                            }\n                        }\n                        else {\n                            bVar11 = false;\n                        }\n                        *(*0x20 + -0x198) = iVar6;\n                        *(*0x20 + 0x10) = unaff_RBX;\n                        if (bVar11) {\n                            *(*0x20 + -0x208) = 0x41b307;\n                            fcn.00449f60();\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        else {\n                            *(in_RAX + 0xb3) = 1;\n                        }\n                        *(*0x20 + -0x210) = unaff_RBP;\n                        *(*0x20 + -0x208) = 0x41b337;\n                        puVar3 = fcn.0045e494();\n                        uVar4 = puVar3[1];\n                        *(*0x20 + -0x80) = *puVar3;\n                        *(*0x20 + -0x78) = uVar4;\n                        if (puVar3[10] != 0) {\n                            *(*0x20 + -0x208) = 0x41b37c;\n                            fcn.0041c260(0x795280);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(*0x20 + -0x20) = in_XMM15;\n                        *(*0x20 + -0x10) = 0;\n                        *(*0x20 + -0x20) = 0x41b960;\n                        *(*0x20 + -0x18) = *0x20 + -0x180;\n                        *(*0x20 + -0x10) = unaff_RBX;\n                        *(*0x20 + -0x200) = 0;\n                        *(*0x20 + -0x208) = 0x41b3fa;\n                        fcn.004525e0(0, *0x20 + -0x180, 0, 0x7fffffff);\n                        puVar8 = *(*0x20 + 8);\n                        *(*0x20 + -0x30) = *(puVar8 + 10);\n                        goto code_r0x0041b4d9;\n                    }\n                    *(*0x20 + -0x208) = 0x41b7f6;\n                    iVar6 = unaff_R14;\n                    in_RAX = fcn.00433c80();\n                    uVar7 = iVar6;\n                }\n                if (uVar7 != 2) goto code_r0x0041b42a;\n                *(*0x20 + -0x1ac) = *(in_RAX + 0x90);\n                *(*0x20 + -0x188) = *(in_RAX + 0x98);\n                *(*0x20 + -0x208) = 0x41b81a;\n                fcn.00435540();\n                *(*0x20 + -0x208) = 0x41b82b;\n                fcn.00435e40();\n                *(*0x20 + -0x208) = 0x41b838;\n                fcn.00435dc0();\n                *(*0x20 + -0x208) = 0x41b849;\n                fcn.00435e40();\n                *(*0x20 + -0x208) = 0x41b853;\n                fcn.00435c40();\n                *(*0x20 + -0x208) = 0x41b865;\n                fcn.00435e40();\n                *(*0x20 + -0x208) = 0x41b870;\n                fcn.00435b40();\n                *(*0x20 + -0x208) = 0x41b875;\n                fcn.004357a0();\n                *(*0x20 + -0x208) = 0x41b87a;\n                fcn.004355c0();\n                *(*0x20 + -0x208) = 0x41b88b;\n                in_RAX = fcn.00433c80();\n            }\n            *(*0x20 + -0x1a4) = *(in_RAX + 0x90);\n            *(*0x20 + -0x188) = *(in_RAX + 0x98);\n            *(*0x20 + -0x208) = 0x41b8a6;\n            fcn.00435540();\n            *(*0x20 + -0x208) = 0x41b8b7;\n            fcn.00435e40();\n            *(*0x20 + -0x208) = 0x41b8c5;\n            fcn.00435dc0();\n            *(*0x20 + -0x208) = 0x41b8d6;\n            fcn.00435e40();\n            *(*0x20 + -0x208) = 0x41b8e5;\n            fcn.00435c40();\n            *(*0x20 + -0x208) = 0x41b8f6;\n            fcn.00435e40();\n            *(*0x20 + -0x208) = 0x41b905;\n            fcn.00435ca0();\n            *(*0x20 + -0x208) = 0x41b90a;\n            fcn.004357a0();\n            *(*0x20 + -0x208) = 0x41b90f;\n            fcn.004355c0();\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x208) = 0x41b925;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + -8) = 0x41b935;\n        fcn.004602a0();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 3604
    },
    "0041bc00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041bc00(void)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    char cVar3;\n    int64_t *in_RAX;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint32_t uVar7;\n    ulong uVar8;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    bool bVar10;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x801c24 != '\\0') break;\n            unaff_RBX = 0x17;\n            *(*0x20 + -0x60) = 0x41bfe5;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x41bff5;\n        fcn.0045bb60();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n    iVar5 = *(*(unaff_R14 + 0x30) + 0x90);\n    iVar4 = in_RAX[3];\n    if ((unaff_RBX & 0xc) == 0) {\n        iVar9 = 0x7fffffffffffffff;\n        uVar8 = 0;\n    }\n    else {\n        if ((unaff_RBX >> 2 & 1) == 0) {\n            uVar8 = 0;\n            if ((unaff_RBX & 8) != 0) {\n                uVar8 = 0x7196b8;\n            }\n        }\n        else {\n            uVar8 = 0x7196c0;\n        }\n        iVar9 = iVar4 + 100000;\n    }\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + -0x18) = iVar5;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + -0x10) = uVar8;\n    if (*0x7adfec <= *0x7adfe8) goto code_r0x0041bccf;\n    *(*0x20 + -0x40) = iVar4;\n    *(*0x20 + -0x38) = iVar9;\n    *(*0x20 + -0x41) = (unaff_RBX >> 1 & 1) != 0;\ncode_r0x0041bf42:\n    if (*(iVar5 + 0xb1) == '\\0') {\n        bVar10 = false;\n    }\n    else if ((unaff_RBX & 1) == 0) {\n        bVar10 = *0x7ae5e0 != 0;\n    }\n    else {\n        bVar10 = true;\n    }\n    if (bVar10) {\ncode_r0x0041bccf:\n        do {\n            uVar7 = unaff_RBX;\n            if (*(iVar5 + 0xb1) == '\\0') {\n                bVar10 = false;\n            }\n            else if ((unaff_RBX & 1) == 0) {\n                bVar10 = *0x7ae5e0 != 0;\n            }\n            else {\n                bVar10 = true;\n            }\n            if (bVar10) {\n                iVar5 = *(*0x20 + 8);\n                goto code_r0x0041becd;\n            }\n            *(*0x20 + -0x20) = iVar4;\n            *(*0x20 + -0x38) = iVar9;\n            if (*0x7adf60 == 0) {\n                *(*0x20 + -0x60) = 0x41bd25;\n                fcn.00422f00();\n                in_RAX = *(*0x20 + 8);\n                iVar5 = *(*0x20 + -0x18);\n                uVar7 = *(*0x20 + 0x10);\n                iVar9 = *(*0x20 + -0x38);\n            }\n            iVar4 = *in_RAX;\n            if ((iVar4 == 0) || (iVar1 = *(iVar4 + 0x10),  iVar1 == 0)) {\n                iVar4 = 0;\n            }\n            else {\n                *(iVar4 + 0x10) = iVar1 - 1U;\n                if (0xfc < iVar1 - 1U) goto code_r0x0041bf0f;\n                iVar4 = *(iVar4 + 0x10 + iVar1 * 8);\n            }\n            if (iVar4 == 0) {\n                *(*0x20 + -0x60) = 0x41bd85;\n                iVar4 = fcn.00422d20(0, iVar5, iVar9);\n                if (iVar4 == 0) {\n                    *(*0x20 + -0x60) = 0x41bd93;\n                    fcn.0042cee0();\n                    *(*0x20 + -0x60) = 0x41bd9d;\n                    iVar4 = fcn.00422d20();\n                }\n                iVar5 = *(*0x20 + -0x18);\n                uVar7 = *(*0x20 + 0x10);\n                iVar9 = *(*0x20 + -0x38);\n            }\n            if (iVar4 == 0) {\n                iVar4 = *(*0x20 + -0x20);\n                iVar5 = *(*0x20 + 8);\n                goto code_r0x0041becd;\n            }\n            *(*0x20 + -0x60) = 0x41bdd4;\n            fcn.0041c400(iVar4, iVar5, iVar9);\n            iVar5 = *(*0x20 + 8);\n            if (*(iVar5 + 0x18) < 2000) {\n                unaff_RBX = *(*0x20 + 0x10);\n                iVar9 = *(*0x20 + -0x38);\n                iVar4 = *(*0x20 + -0x20);\n            }\n            else {\n                LOCK();\n                *0x8023c0 = *0x8023c0 + *(iVar5 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                if ((unaff_RBX >> 1 & 1) == 0) {\n                    iVar4 = *(*0x20 + -0x20);\n                }\n                else {\n                    *(*0x20 + -0x60) = 0x41be1d;\n                    fcn.0041b080();\n                    iVar5 = *(*0x20 + 8);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    iVar4 = 0;\n                }\n                iVar9 = *(iVar5 + 0x18);\n                *(iVar5 + 0x18) = 0;\n                iVar9 = *(*0x20 + -0x38) - iVar9;\n                if (iVar9 < 1) {\n                    if (*(*0x20 + -0x10) == NULL) {\n                        cVar3 = '\\0';\n                    }\n                    else {\n                        *(*0x20 + -0x28) = iVar9;\n                        *(*0x20 + -0x30) = iVar4;\n                        pcVar2 = **(*0x20 + -0x10);\n                        *(*0x20 + -0x60) = 0x41be62;\n                        cVar3 = (*pcVar2)();\n                        iVar5 = *(*0x20 + 8);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        iVar9 = *(*0x20 + -0x28);\n                        iVar4 = *(*0x20 + -0x30);\n                    }\n                    uVar7 = unaff_RBX;\n                    if (cVar3 != '\\0') goto code_r0x0041becd;\n                    iVar9 = iVar9 + 100000;\n                }\n            }\n            iVar5 = *(*0x20 + -0x18);\n            in_RAX = *(*0x20 + 8);\n        } while( true );\n    }\n    LOCK();\n    uVar7 = *0x7adfe8 + 1;\n    bVar10 = *0x7adfec <= *0x7adfe8;\n    *0x7adfe8 = uVar7;\n    if (bVar10) goto code_r0x0041bccf;\n    *(*0x20 + -0x60) = 0x41bf9f;\n    fcn.00419da0();\n    if (*(*0x20 + -0x10) == NULL) {\n        cVar3 = '\\0';\n    }\n    else {\n        pcVar2 = **(*0x20 + -0x10);\n        *(*0x20 + -0x60) = 0x41bfb2;\n        cVar3 = (*pcVar2)();\n    }\n    if (cVar3 != '\\0') {\n        iVar5 = *(*0x20 + 8);\n        uVar7 = *(*0x20 + 0x10);\n        iVar4 = *(*0x20 + -0x40);\ncode_r0x0041becd:\n        if (0 < *(iVar5 + 0x18)) {\n            LOCK();\n            *0x8023c0 = *0x8023c0 + *(iVar5 + 0x18);\n            if ((uVar7 >> 1 & 1) != 0) {\n                iVar5 = *(iVar5 + 0x18);\n                *(*0x20 + -0x60) = 0x41bef8;\n                fcn.0041b080(iVar5 - iVar4);\n                iVar5 = *(*0x20 + 8);\n            }\n            *(iVar5 + 0x18) = 0;\n        }\n        return;\n    }\n    goto code_r0x0041bf1c;\ncode_r0x0041bf0f:\n    *(*0x20 + -0x60) = 0x41bf1c;\n    fcn.0045e240(0xfd);\ncode_r0x0041bf1c:\n    in_RAX = *(*0x20 + 8);\n    unaff_RBX = *(*0x20 + 0x10);\n    iVar5 = *(*0x20 + -0x18);\n    iVar4 = *(*0x20 + -0x40);\n    iVar9 = *(*0x20 + -0x38);\n    goto code_r0x0041bf42;\n}\n",
        "token_count": 2449
    },
    "0041c020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0041c020(void)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    bool bVar6;\n    \ncode_r0x0041c020:\n    puVar4 = *0x20;\n    if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n        puVar4 = *0x20 + -0x28;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if (*0x801c24 != '\\0') {\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            iVar5 = -in_RAX[3];\n            iVar3 = *(*(unaff_R14 + 0x30) + 0x90);\n            *(*0x20 + -0x10) = iVar3;\n            do {\n                if ((*(iVar3 + 0xb1) != '\\0' || *0x801ec4 != '\\0') || (unaff_RBX <= in_RAX[3] + iVar5))\n                goto code_r0x0041c1fa;\n                *(*0x20 + -0x18) = iVar5;\n                if (*0x7adf60 == 0) {\n                    *(*0x20 + -0x30) = 0x41c0c5;\n                    fcn.00422f00();\n                    in_RAX = *(*0x20 + 8);\n                    iVar5 = *(*0x20 + -0x18);\n                }\n                iVar3 = *in_RAX;\n                if ((iVar3 == 0) || (iVar1 = *(iVar3 + 0x10),  iVar1 == 0)) {\n                    iVar3 = 0;\n                }\n                else {\n                    *(iVar3 + 0x10) = iVar1 - 1U;\n                    if (0xfc < iVar1 - 1U) goto code_r0x0041c20c;\n                    iVar3 = *(iVar3 + 0x10 + iVar1 * 8);\n                }\n                if (iVar3 == 0) {\n                    *(*0x20 + -0x30) = 0x41c125;\n                    iVar3 = fcn.00422d20();\n                    if (iVar3 == 0) {\n                        *(*0x20 + -0x30) = 0x41c133;\n                        fcn.0042cee0();\n                        *(*0x20 + -0x30) = 0x41c13d;\n                        iVar3 = fcn.00422d20();\n                    }\n                    iVar5 = *(*0x20 + -0x18);\n                    in_RAX = *(*0x20 + 8);\n                }\n                if (iVar3 == 0) {\n                    if (*0x7adfec <= *0x7adfe8) {\ncode_r0x0041c1fa:\n                        return iVar5 + in_RAX[3];\n                    }\n                    LOCK();\n                    uVar2 = *0x7adfe8 + 1;\n                    bVar6 = *0x7adfec <= *0x7adfe8;\n                    *0x7adfe8 = uVar2;\n                    if (bVar6) goto code_r0x0041c1fa;\n                    *(*0x20 + -0x30) = 0x41c192;\n                    iVar5 = fcn.00419da0(0);\n                    iVar5 = *(*0x20 + -0x18) + iVar5;\n                    in_RAX = *(*0x20 + 8);\n                }\n                else {\n                    *(*0x20 + -0x30) = 0x41c1b2;\n                    fcn.0041c400();\n                    in_RAX = *(*0x20 + 8);\n                    if (in_RAX[3] < 2000) {\n                        iVar5 = *(*0x20 + -0x18);\n                    }\n                    else {\n                        LOCK();\n                        *0x8023c0 = *0x8023c0 + in_RAX[3];\n                        iVar5 = in_RAX[3];\n                        in_RAX[3] = 0;\n                        iVar5 = *(*0x20 + -0x18) + iVar5;\n                    }\n                }\n                iVar3 = *(*0x20 + -0x10);\n                unaff_RBX = *(*0x20 + 0x10);\n            } while( true );\n        }\n        goto code_r0x0041c219;\n    }\n    goto code_r0x0041c22b;\ncode_r0x0041c20c:\n    *(*0x20 + -0x30) = 0x41c219;\n    fcn.0045e240(0xfd);\ncode_r0x0041c219:\n    unaff_RBX = 0x18;\n    *(*0x20 + -0x30) = 0x41c22a;\n    in_RAX = fcn.00433c80();\ncode_r0x0041c22b:\n    *(puVar4 + 8) = in_RAX;\n    *(puVar4 + 0x10) = unaff_RBX;\n    *(puVar4 + -8) = 0x41c23a;\n    fcn.004602a0();\n    in_RAX = *(puVar4 + 8);\n    unaff_RBX = *(puVar4 + 0x10);\n    *0x20 = puVar4;\n    goto code_r0x0041c020;\n}\n",
        "token_count": 1298
    },
    "0041ca20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041ca20(ulong arg1, ulong noname_1, uint8_t *arg3)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    char cVar3;\n    uint64_t in_RAX;\n    uint64_t uVar4;\n    uint8_t uVar5;\n    ulong unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t *unaff_RSI;\n    int64_t unaff_RDI;\n    uint8_t *puVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((in_RAX & 7) == 0) {\n                *(*0x20 + 8) = in_RAX;\n                iVar1 = *(unaff_RDI + 0x50);\n                puVar7 = arg3 >> 3;\n                if (*0x8019b1 == '\\0') {\n                    uVar5 = 1 << (arg3 & 7);\n                    if (((*0x801e6c < 1) || (arg3 <= *(unaff_RDI + 0x88) && *(unaff_RDI + 0x88) != arg3)) ||\n                       (arg3 = puVar7,  (uVar5 & puVar7[*(unaff_RDI + 0x48)]) != 0)) {\n                        if ((uVar5 & puVar7[iVar1]) != 0) {\n                            return;\n                        }\n                        LOCK();\n                        puVar7[iVar1] = puVar7[iVar1] | uVar5;\n                        uVar2 = *(unaff_RDI + 0x18);\n                        arg3 = uVar2 + 0x800000000000;\n                        if (arg3 >> 0x2a < 0x40) {\n                            iVar1 = *(*((arg3 >> 0x2a) * 8 + 0x7d3e10) + (arg3 >> 0x16 & 0xfffff) * 8);\n                            uVar4 = uVar2 >> 0x10 & 0x3f;\n                            arg3 = iVar1 + uVar4 + 0x21040;\n                            uVar5 = 1 << (uVar2 >> 0xd & 7);\n                            if ((uVar5 & *(iVar1 + 0x21040 + uVar4)) == 0) {\n                                LOCK();\n                                *arg3 = *arg3 | uVar5;\n                            }\n                            if ((*(unaff_RDI + 0x62) & 1) != 0) {\n                                unaff_RSI[2] = unaff_RSI[2] + *(unaff_RDI + 0x68);\n                                return;\n                            }\n                            goto code_r0x0041cb96;\n                        }\n                        goto code_r0x0041cbe6;\n                    }\n                }\n                else {\n                    *(*0x20 + 0x28) = unaff_RSI;\n                    *(*0x20 + -0x50) = 0x41cb85;\n                    cVar3 = fcn.00414220(arg1, iVar1, arg3);\n                    if (cVar3 != '\\0') {\n                        return;\n                    }\n                    in_RAX = *(*0x20 + 8);\n                    unaff_RSI = *(*0x20 + 0x28);\ncode_r0x0041cb96:\n                    iVar1 = *unaff_RSI;\n                    if (iVar1 == 0) {\ncode_r0x0041cbb8:\n                        *(*0x20 + -0x50) = 0x41cbc5;\n                        fcn.00422a00();\n                        return;\n                    }\n                    uVar2 = *(iVar1 + 0x10);\n                    if (uVar2 == 0xfd) goto code_r0x0041cbb8;\n                    if (uVar2 < 0xfd) {\n                        *(iVar1 + 0x18 + uVar2 * 8) = in_RAX;\n                        *(iVar1 + 0x10) = *(iVar1 + 0x10) + 1;\n                        return;\n                    }\n                    *(*0x20 + -0x50) = 0x41cbe6;\n                    fcn.0045e240(0xfd);\ncode_r0x0041cbe6:\n                    *(*0x20 + -0x50) = 0x41cbf3;\n                    fcn.0045e260(0x40);\n                }\n                *(*0x20 + -0x10) = arg1;\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x50) = 0x41cc05;\n                fcn.00435540();\n                *(*0x20 + -0x50) = 0x41cc16;\n                fcn.00435e40();\n                *(*0x20 + -0x50) = 0x41cc25;\n                fcn.00435ca0();\n                *(*0x20 + -0x50) = 0x41cc36;\n                fcn.00435e40();\n                *(*0x20 + -0x50) = 0x41cc45;\n                fcn.00435ca0();\n                *(*0x20 + -0x50) = 0x41cc56;\n                fcn.00435e40();\n                *(*0x20 + -0x50) = 0x41cc65;\n                fcn.00435ca0();\n                *(*0x20 + -0x50) = 0x41cc76;\n                fcn.00435e40();\n                *(*0x20 + -0x50) = 0x41cc7b;\n                fcn.004355c0();\n                *(*0x20 + -0x50) = 0x41cc96;\n                fcn.0041cd40(*(*0x20 + -0x18));\n                arg1 = *(*0x20 + 8);\n                unaff_RDI = -1;\n                *(*0x20 + -0x50) = 0x41ccb3;\n                fcn.0041cd40(arg1);\n                *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n                *(*0x20 + -0x50) = 0x41cccf;\n                fcn.00433c80();\n            }\n            unaff_RBX = 0x23;\n            *(*0x20 + -0x50) = 0x41cce5;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + 0x20) = unaff_RDI;\n        *(puVar6 + 0x28) = unaff_RSI;\n        *(puVar6 + 0x30) = arg3;\n        *(puVar6 + -8) = 0x41cd09;\n        fcn.0045bb60();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_RDI = *(puVar6 + 0x20);\n        unaff_RSI = *(puVar6 + 0x28);\n        arg3 = *(puVar6 + 0x30);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1770
    },
    "0041cd40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0041cd40(uint64_t arg1)\n\n{\n    bool bVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    uVar2 = arg1 + 0x800000000000 >> 0x2a;\n    if (uVar2 < 0x40) {\n        iVar3 = *(uVar2 * 8 + 0x7d3e10);\n        if (iVar3 == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = *(iVar3 + (arg1 + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar3 == 0) {\n                iVar3 = 0;\n            }\n            else {\n                iVar3 = *(iVar3 + 0x20000 + (arg1 >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar3 = 0;\n    }\n    fcn.00435540();\n    fcn.00435e40();\n    fcn.00435e40();\n    fcn.00435ca0();\n    fcn.004355c0();\n    if (iVar3 == 0) {\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.004355c0();\n        return;\n    }\n    fcn.00435540();\n    fcn.00435e40();\n    fcn.00435ca0();\n    fcn.00435e40();\n    fcn.00435ca0();\n    fcn.00435e40();\n    fcn.00435b40();\n    fcn.00435e40();\n    fcn.00435b40();\n    fcn.00435e40();\n    fcn.004355c0();\n    if (*(iVar3 + 99) < *0x7a67f8) {\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.004357a0();\n        fcn.004355c0();\n    }\n    else {\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.00435b40();\n        fcn.00435e40();\n        fcn.004355c0();\n    }\n    uVar2 = *(iVar3 + 0x68);\n    if ((*(iVar3 + 99) == '\\x02') && (uVar2 == 0)) {\n        uVar2 = unaff_RDI + 8;\n    }\n    bVar1 = false;\n    for (uVar4 = 0; uVar4 < uVar2; uVar4 = uVar4 + 8) {\n        if ((uVar4 < 0x400) || ((unaff_RDI - 0x80 < uVar4 && (uVar4 < unaff_RDI + 0x80)))) {\n            if (bVar1) {\n                fcn.00435540();\n                fcn.00435e40();\n                fcn.004355c0();\n            }\n            fcn.00435540();\n            fcn.00435e40();\n            fcn.00435e40();\n            fcn.00435e40();\n            fcn.00435b40();\n            fcn.00435e40();\n            fcn.00435ca0();\n            fcn.004355c0();\n            if (unaff_RDI == uVar4) {\n                fcn.00435540();\n                fcn.00435e40();\n                fcn.004355c0();\n            }\n            fcn.00435540();\n            fcn.004357a0();\n            fcn.004355c0();\n            bVar1 = false;\n        }\n        else {\n            bVar1 = true;\n        }\n    }\n    if (bVar1) {\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.004355c0();\n    }\n    return;\n}\n",
        "token_count": 956
    },
    "0041d180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041d180(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    uint8_t uVar4;\n    int64_t in_RAX;\n    uint64_t uVar5;\n    uint8_t *puVar6;\n    int64_t unaff_RBX;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    \n    if (*0x8019b1 == '\\0') {\n        uVar7 = (unaff_RBX - *(in_RAX + 0x18)) * *(in_RAX + 0x5c);\n        puVar6 = (uVar7 >> 0x23) + *(in_RAX + 0x50);\n        LOCK();\n        *puVar6 = *puVar6 | 1 << (uVar7 >> 0x20 & 7);\n        uVar7 = *(in_RAX + 0x18);\n        uVar5 = uVar7 + 0x800000000000 >> 0x2a;\n        if (uVar5 < 0x40) {\n            iVar2 = *(*(uVar5 * 8 + 0x7d3e10) + (uVar7 + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            uVar5 = uVar7 >> 0x10 & 0x3f;\n            puVar6 = iVar2 + uVar5 + 0x21040;\n            uVar4 = 1 << (uVar7 >> 0xd & 7);\n            if ((uVar4 & *(iVar2 + 0x21040 + uVar5)) == 0) {\n                LOCK();\n                *puVar6 = *puVar6 | uVar4;\n            }\n            piVar1 = *(*(unaff_R14 + 0x30) + 0xa0) + 0x1250;\n            *piVar1 = *piVar1 + arg1;\n            return;\n        }\n        fcn.0045e260(0x40);\n    }\n    fcn.00433c80();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 500
    },
    "0041d480": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041d480(int64_t arg1, ulong noname_1, ulong arg3)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    ulong arg2;\n    ulong unaff_RBX;\n    int64_t iVar4;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    double dVar5;\n    double dVar6;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    *(in_RAX + 0xc0) = 0;\n    *(in_RAX + 200) = 0;\n    *(in_RAX + 0xd0) = 0;\n    *(in_RAX + 0xd8) = 0;\n    uVar2 = *(in_RAX + 0xe0);\n    *(in_RAX + 0xe0) = 0;\n    *(in_RAX + 0xe8) = in_XMM15;\n    *(in_RAX + 0xf8) = 0;\n    *(in_RAX + 0x100) = unaff_RBX;\n    uVar2 = fcn.0041e540(arg1, uVar2);\n    *(in_RAX + 0x78) = uVar2;\n    dVar5 = *0x7327b0 * arg1;\n    iVar4 = *0x7327c0 + dVar5;\n    *(in_RAX + 0x108) = iVar4;\n    dVar6 = iVar4 / dVar5 - *0x7327d0;\n    if ((dVar6 < str.333333._0_8_) || (*0x7327b8 < dVar6)) {\n        if (dVar5 < iVar4) {\n            *(in_RAX + 0x108) = iVar4 + -1;\n        }\n        *(in_RAX + 0x128) = (dVar5 - *(in_RAX + 0x108)) / arg1;\n    }\n    else {\n        *(in_RAX + 0x128) = 0;\n    }\n    if (0 < *0x801e78) {\n        *(in_RAX + 0x108) = arg1;\n        *(in_RAX + 0x128) = 0;\n    }\n    iVar1 = *0x7ada48;\n    iVar4 = *0x7ada40;\n    for (iVar3 = 0; iVar3 < iVar1; iVar3 = iVar3 + 1) {\n        *(*(iVar4 + iVar3 * 8) + 0x1218) = in_XMM15;\n    }\n    if (unaff_RDI == 1) {\n        if (*(in_RAX + 0x108) < 1) {\n            fcn.0041ec20();\n        }\n        else {\n            fcn.0041ec20();\n        }\n    }\n    else {\n        fcn.0041ec20(in_RAX, arg1 - *(in_RAX + 0x108));\n    }\n    fcn.0041d7c0();\n    if (0 < *0x801e70) {\n        uVar2 = *(in_RAX + 0x118);\n        arg2 = *0x802390;\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.00435840(uVar2, arg2);\n        fcn.00435e40();\n        fcn.00435b40();\n        fcn.00435e40();\n        fcn.00435b40();\n        fcn.00435e40();\n        fcn.00435b40();\n        fcn.00435e40();\n        fcn.00435c40();\n        fcn.00435e40();\n        fcn.00435840(uVar2, arg2);\n        fcn.004357a0();\n        fcn.004355c0();\n    }\n    return;\n}\n",
        "token_count": 917
    },
    "0041d9a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041d9a0(int64_t arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    ulong noname_0;\n    uint64_t uVar3;\n    ulong arg2;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    ulong extraout_XMM0_Qa;\n    double dVar4;\n    double dVar5;\n    double dVar6;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    *0x802380 = fcn.0041e400();\n    iVar2 = unaff_RBX - *(in_RAX + 0x100);\n    dVar5 = *0x7327b0;\n    if (0 < iVar2) {\n        dVar5 = *0x7327b0 + *(in_RAX + 0xe0) / (iVar2 * arg1);\n    }\n    if (*(in_RAX + 0x88) <= *(in_RAX + 0x78)) {\n        return;\n    }\n    if (iVar2 < 1) {\n        dVar4 = 0.0;\n    }\n    else {\n        dVar4 = *(in_RAX + 0xf8) / (iVar2 * arg1);\n    }\n    uVar3 = *(in_RAX + 0x88) - *(in_RAX + 0x78);\n    if (uVar3 < 0) {\n        dVar6 = uVar3 >> 1 | uVar3 & 1;\n        dVar6 = dVar6 + dVar6;\n    }\n    else {\n        dVar6 = uVar3;\n    }\n    cVar1 = fcn.0041e940(*(in_RAX + 0x20), \n                         ((dVar4 + dVar5) * dVar6) /\n                         ((*0x7327d0 - dVar5) * (*(in_RAX + 0xc0) + *(in_RAX + 200) + *(in_RAX + 0xd0))), *0x7327d0, \n                         in_RAX + 0x28);\n    *(in_RAX + 0x20) = extraout_XMM0_Qa;\n    if (cVar1 == '\\0') {\n        *(in_RAX + 0x20) = 0;\n    }\n    if (0 < *0x801e70) {\n        fcn.00435540();\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.00435c40(dVar5 * *0x732810);\n        fcn.00435e40();\n        fcn.00435c40();\n        fcn.00435e40();\n        fcn.004355c0();\n        fcn.00435540();\n        fcn.00435c40();\n        fcn.00435e40();\n        fcn.00435c40();\n        fcn.00435e40();\n        fcn.00435c40();\n        fcn.00435e40();\n        fcn.00435b40();\n        fcn.00435e40();\n        fcn.004355c0();\n        arg2 = *(in_RAX + 0x88);\n        noname_0 = *(in_RAX + 0x80);\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.00435b40();\n        fcn.00435e40();\n        fcn.00435b40();\n        fcn.00435e40();\n        fcn.00435c40();\n        fcn.00435e40();\n        fcn.00435840(noname_0, arg2);\n        fcn.00435e40();\n        fcn.004355c0();\n        if (cVar1 == '\\0') {\n            fcn.00435540();\n            fcn.00435e40();\n            fcn.004355c0();\n        }\n        fcn.00435540();\n        fcn.004357a0();\n        fcn.004355c0();\n        cVar1 = *(*(unaff_R14 + 0x30) + 0xe7);\n        *(*(unaff_R14 + 0x30) + 0xe7) = cVar1 + -1;\n        if (cVar1 == '\\x01') {\n            fcn.0040a680();\n        }\n    }\n    return;\n}\n",
        "token_count": 1015
    },
    "0041dde0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041dde0(void)\n\n{\n    int32_t *piVar1;\n    uchar auVar2 [16];\n    char cVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x108) < 1) {\n                return;\n            }\n            if (*0x8019f0 < 2) {\n                return;\n            }\n            if (((unaff_R14 == 0) || (*(unaff_R14 + 0x30) == 0)) ||\n               (piVar1 = *(*(unaff_R14 + 0x30) + 0xa0),  piVar1 == NULL)) {\n                return;\n            }\n            iVar5 = *piVar1;\n            *(*0x20 + -0x14) = iVar5;\n            iVar4 = 0;\n            while( true ) {\n                iVar6 = *0x8019f0;\n                if (4 < iVar4) {\n                    return;\n                }\n                uVar8 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n                auVar2 = ZEXT816(uVar8) * ZEXT816(uVar8 ^ 0xe7037ed1a0b428db);\n                *(*(unaff_R14 + 0x30) + 0xf0) = uVar8;\n                iVar6 = (SUB164(auVar2, 0) ^ SUB164(auVar2 >> 0x40, 0)) * (iVar6 - 1) >> 0x20;\n                if (iVar5 <= iVar6) {\n                    iVar6 = iVar6 + 1;\n                }\n                if (*0x7ada48 <= iVar6) break;\n                if (*(*(*0x7ada40 + iVar6 * 8) + 4) == 1) {\n                    *(*0x20 + -0x10) = iVar4;\n                    *(*0x20 + -0x30) = 0x41def0;\n                    cVar3 = fcn.00441180();\n                    if (cVar3 != '\\0') {\n                        return;\n                    }\n                    iVar4 = *(*0x20 + -0x10);\n                    iVar5 = *(*0x20 + -0x14);\n                }\n                iVar4 = iVar4 + 1;\n            }\n            *(*0x20 + -0x30) = 0x41df29;\n            in_RAX = fcn.0045e240(*0x7ada48);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x41df34;\n        fcn.0045bb60();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 773
    },
    "0041df40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041e043)\n\nulong fcn.0041df40(int64_t arg1)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    bool bVar4;\n    int64_t in_RAX;\n    int64_t *piVar5;\n    int64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t iVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x8019e4 != 0) break;\n            unaff_RBX = 0x36;\n            *(*0x20 + -0x38) = 0x41e1ca;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + -8) = 0x41e1df;\n        fcn.0045bb60();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + 0x10) = unaff_RBX;\n    if (arg1 == 0) {\n        *(*0x20 + -0x38) = 0x41df7b;\n        fcn.0045fb60();\n        arg1 = *(*0x20 + -0x30);\n        in_RAX = *(*0x20 + 8);\n        unaff_RBX = *(*0x20 + 0x10);\n    }\n    *(*0x20 + -0x20) = arg1;\n    if (10000000 < arg1 - *0x801f00) {\n        *(*0x20 + -0x38) = 0x41dfc7;\n        fcn.00419300();\n        in_RAX = *(*0x20 + 8);\n        unaff_RBX = *(*0x20 + 0x10);\n        arg1 = *(*0x20 + -0x20);\n    }\n    if (((unaff_RBX == 0) || (*(unaff_RBX + 0x1240) == 0)) ||\n       ((*(*(unaff_RBX + 0x1240) + 0x10) == 0 && (*(*(unaff_RBX + 0x1248) + 0x10) == 0)))) {\n        if (*0x7adf60 == 0) {\n            if (*0x7adfe8 < *0x7adfec) {\n                bVar4 = true;\n            }\n            else {\n                bVar4 = false;\n            }\n        }\n        else {\n            bVar4 = true;\n        }\n    }\n    else {\n        bVar4 = true;\n    }\n    if (!bVar4) {\n        return 0;\n    }\n    if (*0x801ab8 == 0) {\n        piVar5 = NULL;\n    }\n    else {\n        piVar5 = (*0x801ab8 >> 0x13) << 3;\n        *0x801ab8 = *piVar5;\n        LOCK();\n    }\n    if (piVar5 == NULL) {\n        return 0;\n    }\n    do {\n        uVar2 = *(in_RAX + 0x108);\n        if (uVar2 < 1) goto code_r0x0041e0d1;\n        *(*0x20 + -0x18) = uVar2;\n        LOCK();\n        puVar1 = in_RAX + 0x108;\n        uVar3 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar2 == uVar3) * (*puVar1 ^ uVar2 - 1);\n    } while (uVar2 != uVar3);\n    uVar2 = *(*0x20 + -0x18);\ncode_r0x0041e0d1:\n    if (uVar2 < 1) {\n        if (*(in_RAX + 0x128) == 0.0) {\n            *(*0x20 + -0x38) = 0x41e155;\n            fcn.0040a200();\n            return 0;\n        }\n        iVar7 = arg1 - *(in_RAX + 0x100);\n        if ((0 < iVar7) && (*(in_RAX + 0x128) < *(unaff_RBX + 0x1220) / iVar7)) {\n            *(*0x20 + -0x38) = 0x41e12a;\n            fcn.0040a200(in_RAX, piVar5, arg1, 0x801ab8);\n            return 0;\n        }\n        *(unaff_RBX + 0x1230) = 2;\n    }\n    else {\n        *(unaff_RBX + 0x1230) = 1;\n    }\n    *(*0x20 + -0x10) = piVar5[2];\n    *(*0x20 + -0x38) = 0x41e18b;\n    fcn.00438120(1);\n    if (*0x7b3b90 != '\\0') {\n        *(*0x20 + -0x38) = 0x41e1a5;\n        fcn.00452180();\n    }\n    return *(*0x20 + -0x10);\n}\n",
        "token_count": 1355
    },
    "0041e200": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041e200(void)\n\n{\n    int64_t in_RAX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    ulong uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    *(in_RAX + 0xb8) = unaff_RBX;\n    *(in_RAX + 0x88) = unaff_RBX;\n    *(in_RAX + 0x90) = *(in_RAX + 0xc0);\n    *(in_RAX + 0x98) = *(in_RAX + 0xc0);\n    *(in_RAX + 0xa0) = *(in_RAX + 200);\n    *(in_RAX + 0x78) = 0xffffffffffffffff;\n    if (*0x7b3b90 != '\\0') {\n        uStack16 = *0x802388;\n        fcn.00450c80(&uStack16);\n    }\n    return;\n}\n",
        "token_count": 250
    },
    "0041e360": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041e360(int64_t arg1)\n\n{\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (unaff_RBX != 0) {\n        LOCK();\n        *0x802388 = *0x802388 + unaff_RBX;\n        if (*0x7b3b90 != '\\0') {\n            fcn.00452420();\n        }\n    }\n    if (*0x8019e4 == 0) {\n        if (arg1 != 0) {\n            LOCK();\n            *0x802390 = *0x802390 + arg1;\n        }\n    }\n    else {\n        fcn.0041d7c0();\n    }\n    return;\n}\n",
        "token_count": 209
    },
    "0041f100": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041f100(ulong noname_0, int64_t arg2, ulong arg3)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t noname_0_00;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 8) == 0) {\n                *(*0x20 + 8) = in_RAX;\n                if (*0x801c20 == 0) {\n                    *(in_RAX + 8) = unaff_R14;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x41f149;\n                    fcn.0045dea0(unaff_R14, arg2, arg3, in_R9);\n                }\n                *(*0x20 + -0x20) = 0x41f155;\n                iVar1 = fcn.0040c560();\n                if (*0x801c20 == 0) {\n                    noname_0_00 = *(*0x20 + 8);\n                    *(noname_0_00 + 0x18) = iVar1;\n                }\n                else {\n                    arg2 = *(*0x20 + 8);\n                    *(*0x20 + -0x20) = 0x41f17d;\n                    iVar1 = fcn.0045dda0(arg2 + 0x18, arg2, arg3, in_R9);\n                    noname_0_00 = arg2;\n                }\n                *(iVar1 + 0x20) = 0x4a6800;\n                if (*0x801c20 == 0) {\n                    *(iVar1 + 0x28) = noname_0_00;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x41f1a9;\n                    fcn.0045dea0(noname_0_00, arg2, arg3, in_R9);\n                }\n                if (*0x801c20 == 0) {\n                    *(*(noname_0_00 + 0x18) + 0x18) = 0x7194b0;\n                    iVar1 = 0x7194b0;\n                }\n                else {\n                    arg2 = 0x7194b0;\n                    *(*0x20 + -0x20) = 0x41f1de;\n                    fcn.0045dec0(noname_0_00, 0x7194b0, arg3, in_R9);\n                    iVar1 = noname_0_00;\n                }\n                *(noname_0_00 + 0x38) = 0x3fd599999999999a;\n                *(noname_0_00 + 0x40) = 0x41486a0000000000;\n                *(noname_0_00 + 0x48) = 0x41cdcd6500000000;\n                *(noname_0_00 + 0x50) = 0x3f50624dd2f1a9fc;\n                *(noname_0_00 + 0x58) = 0x408f400000000000;\n                *(noname_0_00 + 0x60) = in_XMM15;\n                *(noname_0_00 + 0x30) = *0x7327a0;\n                if (*(noname_0_00 + 0x88) == 0) {\n                    if (*0x801c20 == 0) {\n                        *(noname_0_00 + 0x88) = 0x7194b8;\n                    }\n                    else {\n                        arg2 = 0x7194b8;\n                        *(*0x20 + -0x20) = 0x41f275;\n                        fcn.0045dec0(noname_0_00, 0x7194b8, arg3, in_R9);\n                        iVar1 = noname_0_00;\n                    }\n                }\n                if (*(noname_0_00 + 0x90) == 0) {\n                    if (*0x801c20 == 0) {\n                        *(noname_0_00 + 0x90) = 0x7194c0;\n                    }\n                    else {\n                        arg2 = 0x7194c0;\n                        *(*0x20 + -0x20) = 0x41f2b4;\n                        fcn.0045dec0(noname_0_00, 0x7194c0, arg3, in_R9);\n                        iVar1 = noname_0_00;\n                    }\n                }\n                if (*(noname_0_00 + 0x98) == 0) {\n                    if (*0x801c20 == 0) {\n                        *(noname_0_00 + 0x98) = 0x7194c8;\n                    }\n                    else {\n                        *(*0x20 + -0x20) = 0x41f2ee;\n                        fcn.0045dda0(iVar1, arg2, arg3, in_R9);\n                    }\n                }\n                return;\n            }\n            *(*0x20 + -0x20) = 0x41f309;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x41f314;\n        fcn.0045bb60();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 1355
    },
    "0041f3c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041f3c0(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0040a460();\n    if (*(in_RAX + 0x10) != '\\0') {\n        *(in_RAX + 0x20) = 0;\n        *(in_RAX + 0x10) = 0;\n        *(*(in_RAX + 8) + 0xa0) = 0;\n        fcn.0043c1a0();\n    }\n    fcn.0040a680();\n    return;\n}\n",
        "token_count": 181
    },
    "0041fb60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041fb60(void)\n\n{\n    char cVar1;\n    ulong in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x30) = 0x41fb86;\n            fcn.00435540();\n            unaff_RBX = *0x802440;\n            if (*0x802430 + *0x802440 != 0) {\n                *(*0x20 + -0x18) = *0x802438;\n                *(*0x20 + -0x10) = (*0x802430 * 100) / (*0x802430 + *0x802440);\n                *(*0x20 + -0x30) = 0x41fbc9;\n                fcn.00435540();\n                *(*0x20 + -0x30) = 0x41fbda;\n                fcn.00435e40();\n                *(*0x20 + -0x30) = 0x41fbe8;\n                fcn.00435b40();\n                *(*0x20 + -0x30) = 0x41fbf9;\n                fcn.00435e40();\n                *(*0x20 + -0x30) = 0x41fc07;\n                fcn.00435b40();\n                *(*0x20 + -0x30) = 0x41fc18;\n                fcn.00435e40();\n                *(*0x20 + -0x30) = 0x41fc25;\n                fcn.00435b40();\n                *(*0x20 + -0x30) = 0x41fc36;\n                fcn.00435e40();\n                *(*0x20 + -0x30) = 0x41fc3b;\n                fcn.004355c0();\n                if (*(*0x20 + 0x10) == '\\0') {\n                    if (*0x7add98 != '\\0') {\n                        *(*0x20 + -0x30) = 0x41fc52;\n                        fcn.00435540();\n                        *(*0x20 + -0x30) = 0x41fc65;\n                        fcn.00435e40();\n                        *(*0x20 + -0x30) = 0x41fc6a;\n                        fcn.004355c0();\n                        *0x7add98 = '\\0';\n                    }\n                }\n                else {\n                    *(*0x20 + -0x30) = 0x41fc78;\n                    fcn.00435540();\n                    *(*0x20 + -0x30) = 0x41fc89;\n                    fcn.00435e40();\n                    *(*0x20 + -0x30) = 0x41fc8e;\n                    fcn.004355c0();\n                }\n                *(*0x20 + -0x30) = 0x41fc93;\n                fcn.00435540();\n                *(*0x20 + -0x30) = 0x41fc98;\n                fcn.004357a0();\n                *(*0x20 + -0x30) = 0x41fc9d;\n                fcn.004355c0();\n                cVar1 = *(*(unaff_R14 + 0x30) + 0xe7);\n                *(*(unaff_R14 + 0x30) + 0xe7) = cVar1 + -1;\n                if (cVar1 == '\\x01') {\n                    *(*0x20 + -0x30) = 0x41fcc5;\n                    fcn.0040a680();\n                }\n                return;\n            }\n            *(*0x20 + -0x30) = 0x41fcd4;\n            in_RAX = fcn.00432100();\n        }\n        *(puVar2 + 8) = in_RAX;\n        puVar2[0x10] = unaff_RBX;\n        *(puVar2 + -8) = 0x41fce5;\n        fcn.0045bb60();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = puVar2[0x10];\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 1078
    },
    "0041fd00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041fdfd)\n\nint64_t fcn.0041fd00(uint64_t arg1)\n\n{\n    ulong uVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t *piVar4;\n    uint64_t uVar5;\n    uint64_t unaff_RBX;\n    uint8_t *puVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t uVar8;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar7 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x10) = *0x801b18;\n            uVar1 = *(in_RAX + 0x10108);\n            *(*0x20 + -0x70) = 0x41fd48;\n            fcn.0040a460(*0x801b18, uVar1);\n            uVar5 = *(*0x20 + -0x10) >> 0xd;\n            if (uVar5 == 0) {\n                uVar5 = 1;\n            }\n            unaff_RDI = *(*0x20 + 0x20) >> 0xd;\n            if ((*(*0x20 + 0x20) & 0x1fff) != 0) {\n                unaff_RDI = unaff_RDI + 1;\n            }\n            iVar3 = *(*0x20 + 8);\n            unaff_RBX = *(iVar3 + 0x68);\n            uVar2 = *(*0x20 + 0x10);\n            if (uVar2 < unaff_RBX) {\n                uVar8 = *(*(iVar3 + 0x60) + uVar2 * 8);\n                if (uVar8 < 0) {\n                    uVar8 = 0x200000;\n                }\n                else {\n                    uVar8 = uVar8 >> 0x15 & 0x1fffff;\n                }\n                if (uVar8 < uVar5) {\n                    uVar5 = *(iVar3 + 0x100d0);\n                    unaff_RBX = *(iVar3 + 0x100c8);\n                    if (uVar2 >> 3 < uVar5) {\n                        puVar6 = unaff_RBX + (uVar2 >> 3);\n                        LOCK();\n                        *puVar6 = *puVar6 & ~(1 << (uVar2 & 7));\n                        *(*0x20 + -0x70) = 0x41fe4c;\n                        fcn.0040a680();\n                        return 0;\n                    }\ncode_r0x0041ffc5:\n                    *(*0x20 + -0x70) = 0x41ffca;\n                    fcn.0045e260(uVar5);\n                }\n                else if (uVar2 >> 0xd < 0x2000) {\n                    *(*0x20 + -0x18) = uVar2 >> 0xd;\n                    *(*0x20 + -0x20) = (uVar2 & 0x1fff) << 7;\n                    *(*0x20 + -0x70) = 0x41fdf8;\n                    iVar3 = fcn.004201e0(uVar5);\n                    *(*0x20 + -0x40) = iVar3;\n                    *(*0x20 + -0x48) = 0x1ff;\n                    unaff_RDI = 0xffff800000000000;\n                    *(*0x20 + -0x38) = *(*0x20 + 0x10) * 0x400000 + iVar3 * 0x2000 + -0x800000000000;\n                    uVar5 = 0x1ff;\n                    *(*0x20 + -0x70) = 0x41fe94;\n                    iVar3 = fcn.004271e0(0x1ff);\n                    if (iVar3 == 0) {\n                        *(*0x20 + -0x70) = 0x41feaf;\n                        fcn.0040a680();\n                        if (*(*(*0x20 + 8) + 0x10120) == '\\0') {\n                            *(*0x20 + -0x70) = 0x41fed0;\n                            fcn.004144c0();\n                            *(*0x20 + -0x28) = *(*0x20 + -0x48) << 0xd;\n                            *(*0x20 + -0x70) = 0x41feea;\n                            fcn.0042cbe0();\n                            *(*0x20 + -0x30) = -*(*0x20 + -0x28);\n                            *(*0x20 + -0x70) = 0x41ff05;\n                            fcn.0042cbe0();\n                            *(*0x20 + -0x70) = 0x41ff11;\n                            piVar4 = fcn.0042cca0();\n                            LOCK();\n                            *piVar4 = *piVar4 + *(*0x20 + -0x30);\n                            LOCK();\n                            piVar4 = piVar4 + 1;\n                            iVar3 = *piVar4;\n                            *piVar4 = *piVar4 + *(*0x20 + -0x28);\n                            *(*0x20 + -0x70) = 0x41ff32;\n                            fcn.0042cd80(iVar3);\n                        }\n                        *(*0x20 + -0x70) = 0x41ff45;\n                        fcn.0040a460();\n                        *(*0x20 + -0x70) = 0x41ff5e;\n                        fcn.00428660(*(*0x20 + -0x48));\n                        *(*0x20 + -0x70) = 0x41ff8b;\n                        fcn.00429ce0(*(*0x20 + -0x48));\n                        *(*0x20 + -0x70) = 0x41ff9d;\n                        fcn.0040a680();\n                        return *(*0x20 + -0x48) << 0xd;\n                    }\n                    unaff_RBX = 0xf;\n                    *(*0x20 + -0x70) = 0x41ffc5;\n                    fcn.00433c80();\n                    goto code_r0x0041ffc5;\n                }\n                *(*0x20 + -0x70) = 0x41ffd4;\n                fcn.0045e260(0x2000);\n            }\n            *(*0x20 + -0x70) = 0x41ffdc;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045e260(unaff_RBX);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + 0x20) = unaff_RDI;\n        *(puVar7 + -8) = 0x41fff6;\n        fcn.004602a0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_RDI = *(puVar7 + 0x20);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1789
    },
    "00420020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00420020(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX < 5) {\n                if (unaff_RBX == 1) {\n                    return in_RAX;\n                }\n                if (unaff_RBX == 2) {\n                    uVar2 = ~(in_RAX | (in_RAX & 0x5555555555555555) + 0x5555555555555555 | 0x5555555555555555);\n                    goto code_r0x00420166;\n                }\n                if (unaff_RBX == 4) {\n                    uVar2 = ~((in_RAX & 0x7777777777777777) + 0x7777777777777777 | in_RAX | 0x7777777777777777);\ncode_r0x00420166:\n                    return ~(uVar2 - (-(unaff_RBX - 1 < 0x40) & uVar2 >> (unaff_RBX - 1 & 0x3f)) | uVar2);\n                }\n            }\n            else if (unaff_RBX < 0x11) {\n                if (unaff_RBX == 8) {\n                    uVar2 = ~((in_RAX & 0x7f7f7f7f7f7f7f7f) + 0x7f7f7f7f7f7f7f7f | in_RAX | 0x7f7f7f7f7f7f7f7f);\n                    goto code_r0x00420166;\n                }\n                if (unaff_RBX == 0x10) {\n                    uVar2 = ~((in_RAX & 0x7fff7fff7fff7fff) + 0x7fff7fff7fff7fff | in_RAX | 0x7fff7fff7fff7fff);\n                    goto code_r0x00420166;\n                }\n            }\n            else {\n                if (unaff_RBX == 0x20) {\n                    uVar2 = ~((in_RAX & 0x7fffffff7fffffff) + 0x7fffffff7fffffff | in_RAX | 0x7fffffff7fffffff);\n                    goto code_r0x00420166;\n                }\n                if (unaff_RBX == 0x40) {\n                    uVar2 = ~(in_RAX | (in_RAX & 0x7fffffffffffffff) + 0x7fffffffffffffff | 0x7fffffffffffffff);\n                    goto code_r0x00420166;\n                }\n            }\n            unaff_RBX = 0xb;\n            *(*0x20 + -0x20) = 0x4201a5;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x4201b5;\n        fcn.0045bb60();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 853
    },
    "004209c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.004209c0(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t *piVar5;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x004209c0:\n    puVar4 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar4 = *0x20 + -0x48;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x18) = in_XMM15;\n        *(*0x20 + -0x18) = in_RAX + 0x118;\n        iVar3 = in_RAX + 0x128;\n        *(*0x20 + -0x20) = iVar3;\n        *(*0x20 + -0x10) = iVar3;\n        iVar2 = 0;\n        do {\n            if (1 < iVar2) {\n                iVar2 = *(in_RAX + 0x120);\n                if (iVar2 != 0) {\n                    *(*0x20 + -0x50) = 0x420ab9;\n                    fcn.00423300(iVar2, iVar3);\n                    *(*(*0x20 + 8) + 0x120) = 0;\n                }\n                return 0;\n            }\n            piVar5 = *(*0x20 + iVar2 * 8 + -0x18);\n            iVar6 = *piVar5;\n            if (iVar6 != 0) {\n                if (*(iVar6 + 0x10) != 0) goto code_r0x00420a7b;\n                if (*(in_RAX + 0x120) != 0) {\n                    *(*0x20 + -0x30) = iVar2;\n                    *(*0x20 + -0x28) = piVar5;\n                    *(*0x20 + -0x38) = iVar6;\n                    *(*0x20 + -0x50) = 0x420a4f;\n                    fcn.00423300(iVar2, iVar3);\n                    in_RAX = *(*0x20 + 8);\n                    iVar2 = *(*0x20 + -0x30);\n                    iVar3 = *(*0x20 + -0x20);\n                    piVar5 = *(*0x20 + -0x28);\n                    iVar6 = *(*0x20 + -0x38);\n                }\n                *(in_RAX + 0x120) = iVar6;\n                iVar6 = *(iVar6 + 0x18);\n                *piVar5 = iVar6;\n                if (iVar6 != 0) goto code_r0x00420a7b;\n            }\n            iVar2 = iVar2 + 1;\n        } while( true );\n    }\n    goto code_r0x00420ae6;\ncode_r0x00420a7b:\n    iVar3 = *(iVar6 + 0x10);\n    uVar1 = iVar3 - 1;\n    *(iVar6 + 0x10) = uVar1;\n    if (uVar1 < 0xfc) {\n        return *(iVar6 + 0x18 + iVar3 * 8);\n    }\n    *(*0x20 + -0x50) = 0x420ae5;\n    in_RAX = fcn.0045e240(0xfc);\ncode_r0x00420ae6:\n    *(puVar4 + 8) = in_RAX;\n    *(puVar4 + -8) = 0x420af0;\n    fcn.0045bb60();\n    in_RAX = *(puVar4 + 8);\n    *0x20 = puVar4;\n    goto code_r0x004209c0;\n}\n",
        "token_count": 913
    },
    "00420dc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00420ef6)\n// WARNING: Removing unreachable block (ram,0x00420ec3)\n\nint64_t fcn.00420dc0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar2 = *(in_RAX + 0x10138);\n            *(*0x20 + -0x10) = uVar2;\n            uVar3 = *0x7adbc0;\ncode_r0x00420e00:\n            if (0x10f < uVar3) {\n                if (*0x7adbc0 != 0xffffffff) {\n                    LOCK();\n                    *0x7adbc0 = 0xffffffff;\n                }\n                return 0;\n            }\n            if (0x87 < (uVar3 >> 1 & 0xff)) goto code_r0x00420f45;\n            *(*0x20 + -0xc) = uVar3;\n            if ((uVar3 & 1) == 0) {\n                if (1 < -((uVar2 >> 1 & 1) - 1)) goto code_r0x00420f39;\n                *(*0x20 + -0x28) = 0x420e6a;\n                iVar1 = fcn.0042c7e0();\ncode_r0x00420ea0:\n                if (iVar1 != 0) {\n                    if (*0x7adbc0 < *(*0x20 + -0xc)) {\n                        LOCK();\n                        *0x7adbc0 = *(*0x20 + -0xc);\n                    }\n                    return iVar1;\n                }\n                uVar3 = *(*0x20 + -0xc) + 1;\n                uVar2 = *(*0x20 + -0x10);\n                goto code_r0x00420e00;\n            }\n            if (-((uVar2 >> 1 & 1) - 1) < 2) {\n                *(*0x20 + -0x28) = 0x420e97;\n                iVar1 = fcn.0042c7e0();\n                goto code_r0x00420ea0;\n            }\n            *(*0x20 + -0x28) = 0x420f39;\n            fcn.0045e240(2);\ncode_r0x00420f39:\n            *(*0x20 + -0x28) = 0x420f45;\n            fcn.0045e240(2);\ncode_r0x00420f45:\n            *(*0x20 + -0x28) = 0x420f52;\n            in_RAX = fcn.0045e240(0x88);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x420f5d;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 811
    },
    "00420f80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00420f80(uchar param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t *in_RAX;\n    uint64_t uVar2;\n    uint32_t uVar3;\n    ulong noname_0;\n    ulong arg2;\n    int32_t unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x7d3db8 == unaff_EBX) {\n                while( true ) {\n                    uVar1 = *in_RAX;\n                    uVar2 = uVar1;\n                    uVar3 = (uVar1 & 0x7fffffff) - 1;\n                    param_1 = uVar3;\n                    if (0x7fffffff < uVar3) break;\n                    LOCK();\n                    if (uVar1 == *in_RAX) {\n                        *in_RAX = uVar1 - 1;\n                        if (uVar1 == 0x80000000) {\n                            if (0 < *0x801e70) {\n                                *(*0x20 + -0x28) = *0x7d3de0;\n                                *(*0x20 + -0x10) = *0x802388;\n                                *(*0x20 + -0x18) = *0x7d3df0;\n                                *(*0x20 + -0x20) = *0x7d3df8;\n                                *(*0x20 + -0x40) = 0x421030;\n                                arg2 = *0x7d3df0;\n                                fcn.00435540();\n                                *(*0x20 + -0x40) = 0x421045;\n                                fcn.00435e40();\n                                *(*0x20 + -0x40) = 0x421053;\n                                fcn.00435b40();\n                                *(*0x20 + -0x40) = 0x421065;\n                                fcn.00435e40();\n                                noname_0 = *(*0x20 + -0x18);\n                                *(*0x20 + -0x40) = 0x42107b;\n                                fcn.00435b40();\n                                *(*0x20 + -0x40) = 0x42108c;\n                                fcn.00435e40();\n                                *(*0x20 + -0x40) = 0x421096;\n                                fcn.00435b40();\n                                *(*0x20 + -0x40) = 0x4210a7;\n                                fcn.00435e40();\n                                *(*0x20 + -0x40) = 0x4210b2;\n                                fcn.00435840(noname_0, arg2);\n                                *(*0x20 + -0x40) = 0x4210c5;\n                                fcn.00435e40();\n                                *(*0x20 + -0x40) = 0x4210ca;\n                                uVar2 = fcn.004355c0();\n                            }\n                            return uVar2;\n                        }\n                        return uVar2;\n                    }\n                }\n                *(*0x20 + -0x40) = 0x4210ef;\n                fcn.00433c80();\n            }\n            unaff_EBX = 0x31;\n            *(*0x20 + -0x40) = 0x421105;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        puVar4[0x14] = param_1;\n        *(puVar4 + -8) = 0x421118;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        param_1 = puVar4[0x14];\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 980
    },
    "00421140": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00421140(void)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            while( true ) {\n                *(*0x20 + -0x40) = 0x421165;\n                iVar2 = fcn.004214c0();\n                if (iVar2 == -1) break;\n                *0x7adbb8 = *0x7adbb8 + 1;\n            }\n            if ((*0x7adbbc & 0x7fffffff) == 0) {\n                *(*0x20 + -0x24) = *0x7d3db8;\n                iVar2 = 0;\n                uVar1 = *0x7d3db8;\n                while( true ) {\n                    if (0x87 < iVar2) {\n                        *(*0x20 + -0x40) = 0x421214;\n                        fcn.0041f3c0();\n                        *(*0x20 + -0x40) = 0x421219;\n                        fcn.004266c0();\n                        return;\n                    }\n                    uVar3 = -((uVar1 >> 1 & 1) - 1);\n                    if (1 < uVar3) break;\n                    *(*0x20 + -0x20) = iVar2;\n                    *(*0x20 + -0x10) = iVar2 * 0xc0;\n                    *(*0x20 + -0x18) = uVar3 * 5;\n                    *(*0x20 + -0x40) = 0x4211ba;\n                    fcn.0042c920(0x7d40b8);\n                    *(*0x20 + -0x40) = 0x4211dc;\n                    fcn.0042c920(*(*0x20 + -0x10) + 0x7d4110);\n                    iVar2 = *(*0x20 + -0x20) + 1;\n                    uVar1 = *(*0x20 + -0x24);\n                }\n                *(*0x20 + -0x40) = 0x42122d;\n                fcn.0045e240(2);\n            }\n            *(*0x20 + -0x40) = 0x42123e;\n            fcn.00433c80();\n        }\n        *(puVar4 + -8) = 0x421245;\n        fcn.0045bb60();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 669
    },
    "00421260": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00421260(ulong noname_0, ulong arg2, ulong arg3)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    iVar2 = unaff_R14;\n    if (*0x801c20 != 0) {\n        fcn.0045dea0(unaff_R14, arg2, arg3, in_R9);\n        iVar2 = *0x7adba8;\n    }\n    *0x7adba8 = iVar2;\n    fcn.0040a460();\n    *0x7adbb0 = 1;\n    fcn.00404a20();\n    fcn.004366e0();\n    do {\n        while (iVar2 = fcn.004214c0(),  iVar2 != -1) {\n            *0x7adbb4 = *0x7adbb4 + 1;\n            fcn.0045b9a0();\n        }\n        while (cVar1 = fcn.00423620(),  cVar1 != '\\0') {\n            fcn.0045b9a0();\n        }\n        fcn.0040a460();\n        if (*0x7adbbc == -0x80000000) {\n            *0x7adbb0 = 1;\n            fcn.004366e0();\n        }\n        else {\n            fcn.0040a680();\n        }\n    } while( true );\n}\n",
        "token_count": 374
    },
    "004213c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004213c0(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 1) != '\\0') {\n                iVar1 = *in_RAX + -2;\n                if (*(unaff_RBX + 0x58) != iVar1) {\n                    return 0;\n                }\n                LOCK();\n                if (iVar1 != *(unaff_RBX + 0x58)) {\n                    return 0;\n                }\n                *(unaff_RBX + 0x58) = *in_RAX + -1;\n                return unaff_RBX;\n            }\n            unaff_RBX = 0x1a;\n            *(*0x20 + -0x20) = 0x421436;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x421446;\n        fcn.0045bb60();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 414
    },
    "004214c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00421508)\n// WARNING: Removing unreachable block (ram,0x004215f9)\n\nulong fcn.004214c0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char cVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = unaff_R14;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            uVar5 = *0x7adbbc & 0x80000000;\n            if (uVar5 == 0) {\n                *0x7adbbc = *0x7adbbc + 1;\n                LOCK();\n            }\n            *(*0x20 + -0x28) = *0x7d3db8;\n            *(*0x20 + -0x24) = uVar5 == 0;\n            if (uVar5 != 0) {\n                *(*(*(*0x20 + -0x10) + 0x30) + 0xd8) = *(*(*(*0x20 + -0x10) + 0x30) + 0xd8) + -1;\n                return 0xffffffffffffffff;\n            }\ncode_r0x00421554:\n            do {\n                *(*0x20 + -0x50) = 0x421565;\n                iVar6 = fcn.00420dc0();\n                if (iVar6 == 0) {\n                    uVar5 = *0x7adbbc & 0x80000000;\n                    if (uVar5 == 0) {\n                        *0x7adbbc = *0x7adbbc | 0x80000000;\n                        LOCK();\n                    }\n                    bVar9 = uVar5 == 0;\n                    iVar6 = -1;\ncode_r0x00421610:\n                    *(*0x20 + -0x32) = bVar9;\n                    *(*0x20 + -0x18) = iVar6;\n                    *(*0x20 + -0x50) = 0x42162e;\n                    fcn.00420f80(*(*0x20 + -0x24));\n                    if (*(*0x20 + -0x32) != '\\0') {\n                        if (0 < *0x801e88) {\n                            *(*0x20 + -0x48) = 0x719760;\n                            *(*0x20 + -0x50) = 0x421652;\n                            fcn.0045ba20();\n                        }\n                        *0x7add40 = 1;\n                    }\n                    *(*(*(*0x20 + -0x10) + 0x30) + 0xd8) = *(*(*(*0x20 + -0x10) + 0x30) + 0xd8) + -1;\n                    return *(*0x20 + -0x18);\n                }\n                if (*(iVar6 + 99) == '\\x01') {\n                    *(*0x20 + -0x50) = 0x421596;\n                    iVar7 = fcn.004213c0();\n                    *(*0x20 + -0x20) = iVar7;\n                    if (iVar6 != '\\0') {\n                        *(*0x20 + -0x18) = *(iVar7 + 0x20);\n                        *(*0x20 + -0x50) = 0x4215b4;\n                        cVar4 = fcn.004218a0();\n                        if (cVar4 == '\\0') {\n                            iVar6 = 0;\n                        }\n                        else {\n                            iVar6 = *(*0x20 + -0x18);\n                            LOCK();\n                            *0x7d3e08 = *0x7d3e08 + iVar6;\n                        }\n                        bVar9 = false;\n                        goto code_r0x00421610;\n                    }\n                    goto code_r0x00421554;\n                }\n                iVar2 = *(iVar6 + 0x58);\n                iVar3 = *(*0x20 + -0x28);\n            } while ((iVar3 == iVar2) || (iVar2 == iVar3 + 3));\n            *(*0x20 + -0x31) = *(iVar6 + 99);\n            *(*0x20 + -0x2c) = iVar2;\n            *(*0x20 + -0x30) = iVar3;\n            *(*0x20 + -0x50) = 0x4216a5;\n            fcn.00435540();\n            *(*0x20 + -0x50) = 0x4216b6;\n            fcn.00435e40();\n            *(*0x20 + -0x50) = 0x4216c5;\n            fcn.00435b40();\n            *(*0x20 + -0x50) = 0x4216d6;\n            fcn.00435e40();\n            *(*0x20 + -0x50) = 0x4216df;\n            fcn.00435b40();\n            *(*0x20 + -0x50) = 0x4216f0;\n            fcn.00435e40();\n            *(*0x20 + -0x50) = 0x4216f9;\n            fcn.00435b40();\n            *(*0x20 + -0x50) = 0x4216fe;\n            fcn.004357a0();\n            *(*0x20 + -0x50) = 0x421705;\n            fcn.004355c0();\n            *(*0x20 + -0x50) = 0x421716;\n            fcn.00433c80();\n        }\n        *(puVar8 + -8) = 0x42171c;\n        fcn.0045bb60();\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1446
    },
    "00421740": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042177c)\n\nvoid fcn.00421740(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar1 = *(unaff_R14 + 0x30);\n            if (((*(piVar1 + 0x1b) != 0) || (*(piVar1 + 0x18) != 0)) || (*piVar1 == unaff_R14)) {\n                uVar3 = *0x7adbbc & 0x80000000;\n                if (uVar3 == 0) {\n                    *0x7adbbc = *0x7adbbc + 1;\n                    LOCK();\n                }\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x20) = *0x7d3db8;\n                *(*0x20 + -0x1c) = uVar3 == 0;\n                if (uVar3 == 0) {\n                    *(*0x20 + -0x38) = 0x4217dd;\n                    uVar2 = fcn.004213c0();\n                    *(*0x20 + -0x18) = uVar2;\n                    if (in_RAX != '\\0') {\n                        *(*0x20 + -0x38) = 0x42180e;\n                        fcn.004218a0();\n                        *(*0x20 + -0x38) = 0x421825;\n                        fcn.00420f80(*(*0x20 + -0x1c));\n                        return;\n                    }\n                    *(*0x20 + -0x38) = 0x4217fb;\n                    fcn.00420f80();\n                    in_RAX = *(*0x20 + -0x10);\n                }\n                while( true ) {\n                    if ((*(in_RAX + 0x58) == *(*0x20 + -0x20)) || (*(in_RAX + 0x58) == *(*0x20 + -0x20) + 3)) break;\n                    *(*0x20 + -0x30) = 0x719768;\n                    *(*0x20 + -0x38) = 0x42183f;\n                    fcn.0045ba20();\n                    in_RAX = *(*0x20 + -0x10);\n                }\n                return;\n            }\n            *(*0x20 + -0x38) = 0x421888;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x421893;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 761
    },
    "004227a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004227a0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    double extraout_XMM0_Qa;\n    double dVar5;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (*0x7d3df8 == 0.0) {\n        return;\n    }\n    if (*0x7b3b90 != '\\0') {\n        fcn.00451ca0();\n    }\n    do {\n        iVar1 = *0x7d3de8;\n        uVar3 = (*0x802388 - *0x7d3df0) + in_RAX;\n        if (uVar3 < 0) {\n            dVar5 = uVar3 >> 1 | uVar3 & 1;\n            dVar5 = dVar5 + dVar5;\n        }\n        else {\n            dVar5 = uVar3;\n        }\n        dVar5 = *0x7d3df8 * dVar5;\n        iVar4 = dVar5;\n        do {\n            if (iVar4 - unaff_RBX <= *0x7d3de0 - iVar1) {\ncode_r0x004228b9:\n                if (*0x7b3b90 != '\\0') {\n                    fcn.00451da0();\n                }\n                return;\n            }\n            iVar2 = fcn.004214c0(dVar5, 0);\n            if (iVar2 == -1) {\n                *0x7d3df8 = 0.0;\n                goto code_r0x004228b9;\n            }\n            dVar5 = extraout_XMM0_Qa;\n        } while (*0x7d3de8 == iVar1);\n    } while( true );\n}\n",
        "token_count": 463
    },
    "00422a00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00422a00(void)\n\n{\n    int64_t iVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar4;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            iVar1 = *in_RAX;\n            if (iVar1 == 0) {\n                *(*0x20 + -0x28) = 0x422a95;\n                fcn.004229a0();\n                iVar2 = **(*0x20 + 8);\n                unaff_RBX = *(*0x20 + 0x10);\n                bVar4 = false;\n            }\n            else if (*(iVar1 + 0x10) == 0xfd) {\n                iVar2 = in_RAX[1];\n                *in_RAX = iVar2;\n                in_RAX[1] = iVar1;\n                bVar4 = *(iVar2 + 0x10) == 0xfd;\n                if (bVar4) {\n                    *(*0x20 + -0x10) = 0xfd;\n                    *(*0x20 + -0x28) = 0x422a59;\n                    fcn.00423360();\n                    *(*(*0x20 + 8) + 0x20) = 1;\n                    *(*0x20 + -0x28) = 0x422a67;\n                    iVar2 = fcn.00423080();\n                    **(*0x20 + 8) = iVar2;\n                    bVar4 = *(*0x20 + -0x10) == 0xfd;\n                    unaff_RBX = *(*0x20 + 0x10);\n                }\n            }\n            else {\n                bVar4 = false;\n                iVar2 = iVar1;\n            }\n            if (*(iVar2 + 0x10) < 0xfd) {\n                *(iVar2 + 0x18 + *(iVar2 + 0x10) * 8) = unaff_RBX;\n                *(iVar2 + 0x10) = *(iVar2 + 0x10) + 1;\n                if ((bVar4) && (*0x8019ec == 1)) {\n                    *(*0x20 + -0x28) = 0x422ad3;\n                    fcn.0041dde0();\n                }\n                return;\n            }\n            *(*0x20 + -0x28) = 0x422ae7;\n            in_RAX = fcn.0045e240(0xfd);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x422af7;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 787
    },
    "00422b20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00422b20(uint64_t arg1)\n\n{\n    int64_t *piVar1;\n    uint64_t uVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    char cVar6;\n    int64_t unaff_RDI;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 == 0) {\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            iVar4 = *in_RAX;\n            if (iVar4 == 0) {\n                *(*0x20 + 0x20) = unaff_RDI;\n                *(*0x20 + 0x18) = arg1;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x58) = 0x422b66;\n                fcn.004229a0();\n                iVar4 = **(*0x20 + 8);\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                unaff_RDI = *(*0x20 + 0x20);\n            }\n            cVar6 = '\\0';\n            while( true ) {\n                if (arg1 == 0) {\n                    if ((cVar6 != '\\0') && (*0x8019ec == 1)) {\n                        *(*0x20 + -0x58) = 0x422c65;\n                        fcn.0041dde0();\n                    }\n                    return;\n                }\n                *(*0x20 + -0x18) = unaff_RDI;\n                *(*0x20 + -0x10) = unaff_RBX;\n                *(*0x20 + -0x20) = arg1;\n                while (uVar2 = *(iVar4 + 0x10),  uVar2 == 0xfd) {\n                    *(*0x20 + -0x58) = 0x422c77;\n                    fcn.00423360();\n                    *(*(*0x20 + 8) + 0x20) = 1;\n                    *(*0x20 + -0x58) = 0x422c85;\n                    iVar3 = fcn.00423080();\n                    piVar1 = *(*0x20 + 8);\n                    iVar4 = piVar1[1];\n                    *piVar1 = iVar4;\n                    piVar1[1] = iVar3;\n                    arg1 = *(*0x20 + -0x20);\n                    unaff_RBX = *(*0x20 + -0x10);\n                    unaff_RDI = *(*0x20 + -0x18);\n                    cVar6 = '\\x01';\n                }\n                if (0xfd < uVar2) goto code_r0x00422cc6;\n                iVar3 = uVar2 - 0xfd;\n                uVar7 = -iVar3;\n                if (SBORROW8(arg1, -iVar3) != arg1 + iVar3 < 0) {\n                    uVar7 = arg1;\n                }\n                if (unaff_RBX != iVar4 + (uVar2 << 3 & iVar3 >> 0x3f) + 0x18) {\n                    *(*0x20 + -0x30) = iVar4;\n                    *(*0x20 + -0x28) = uVar7;\n                    *(*0x20 + -0x31) = cVar6;\n                    *(*0x20 + -0x58) = 0x422c18;\n                    fcn.0045ebc0(uVar7 << 3);\n                    arg1 = *(*0x20 + -0x20);\n                    iVar4 = *(*0x20 + -0x30);\n                    unaff_RBX = *(*0x20 + -0x10);\n                    cVar6 = *(*0x20 + -0x31);\n                    unaff_RDI = *(*0x20 + -0x18);\n                    uVar7 = *(*0x20 + -0x28);\n                }\n                *(iVar4 + 0x10) = *(iVar4 + 0x10) + uVar7;\n                if (arg1 < uVar7) break;\n                unaff_RDI = unaff_RDI - uVar7;\n                arg1 = arg1 - uVar7;\n                unaff_RBX = unaff_RBX + (-unaff_RDI >> 0x3f & uVar7 << 3);\n            }\n            *(*0x20 + -0x58) = 0x422cc6;\n            fcn.0045e300(arg1);\ncode_r0x00422cc6:\n            arg1 = 0xfd;\n            *(*0x20 + -0x58) = 0x422cd3;\n            in_RAX = fcn.0045e300(0xfd);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x422ced;\n        fcn.0045bb60();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1370
    },
    "00422d20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00422d20(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            iVar3 = *in_RAX;\n            if (iVar3 == 0) {\n                *(*0x20 + -0x30) = 0x422d4a;\n                fcn.004229a0();\n                in_RAX = *(*0x20 + 8);\n                iVar3 = *in_RAX;\n            }\n            if (*(iVar3 + 0x10) == 0) {\n                iVar3 = in_RAX[1];\n                iVar2 = *in_RAX;\n                *in_RAX = iVar3;\n                in_RAX[1] = iVar2;\n                if (*(iVar3 + 0x10) == 0) {\n                    *(*0x20 + -0x10) = iVar3;\n                    *(*0x20 + -0x30) = 0x422d7b;\n                    iVar3 = fcn.004233c0();\n                    if (iVar3 == 0) {\n                        return 0;\n                    }\n                    *(*0x20 + -0x18) = iVar3;\n                    *(*0x20 + -0x30) = 0x422d94;\n                    fcn.00423300();\n                    iVar3 = *(*0x20 + -0x18);\n                    **(*0x20 + 8) = iVar3;\n                }\n            }\n            iVar2 = *(iVar3 + 0x10);\n            uVar1 = iVar2 - 1;\n            *(iVar3 + 0x10) = uVar1;\n            if (uVar1 < 0xfd) {\n                return *(iVar3 + 0x10 + iVar2 * 8);\n            }\n            *(*0x20 + -0x30) = 0x422de5;\n            in_RAX = fcn.0045e240(0xfd);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x422df0;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 633
    },
    "00422e00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00422e00(void)\n\n{\n    int64_t iVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (*in_RAX != 0) {\n        if (*(*in_RAX + 0x10) == 0) {\n            fcn.00423300();\n        }\n        else {\n            fcn.00423360();\n            *(in_RAX + 4) = 1;\n        }\n        *in_RAX = 0;\n        if (*(in_RAX[1] + 0x10) == 0) {\n            fcn.00423300();\n        }\n        else {\n            fcn.00423360();\n            *(in_RAX + 4) = 1;\n        }\n        in_RAX[1] = 0;\n    }\n    if (in_RAX[2] != 0) {\n        LOCK();\n        *0x7adfe0 = *0x7adfe0 + in_RAX[2];\n        in_RAX[2] = 0;\n    }\n    iVar1 = *0x8023c0;\n    iVar2 = in_RAX[3];\n    if (iVar2 != 0) {\n        LOCK();\n        *0x8023c0 = *0x8023c0 + iVar2;\n        in_RAX[3] = 0;\n        iVar2 = iVar1;\n    }\n    return iVar2;\n}\n",
        "token_count": 371
    },
    "00422f00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00422f00(void)\n\n{\n    int64_t *in_RAX;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (*in_RAX != 0) {\n        if (*(in_RAX[1] + 0x10) == 0) {\n            if (*(*in_RAX + 0x10) < 5) {\n                return;\n            }\n            iVar1 = fcn.00423460();\n            *in_RAX = iVar1;\n            *(in_RAX + 4) = 1;\n        }\n        else {\n            fcn.00423360();\n            *(in_RAX + 4) = 1;\n            iVar1 = fcn.00423080();\n            in_RAX[1] = iVar1;\n        }\n        if (*0x8019ec == 1) {\n            fcn.0041dde0();\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 255
    },
    "00422fc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00422fc0(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x10) != 0) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x422ff6;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x423005;\n        fcn.0045bb60();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 263
    },
    "00423020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00423020(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x10) == 0) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x423056;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x423065;\n        fcn.0045bb60();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 261
    },
    "00423080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00423080(void)\n\n{\n    int64_t *piVar1;\n    int64_t unaff_R14;\n    int64_t iStack72;\n    uint64_t uStack64;\n    int64_t *piStack56;\n    int64_t *piStack48;\n    uint64_t uStack40;\n    int64_t *piStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (*0x7adf68 == 0) {\n        piVar1 = NULL;\n        goto code_r0x004230a9;\n    }\n    while( true ) {\n        if (*0x7adf68 == 0) {\n            piVar1 = NULL;\n        }\n        else {\n            piVar1 = (*0x7adf68 >> 0x13) << 3;\n            *0x7adf68 = *piVar1;\n            LOCK();\n        }\n        if (piVar1 != NULL) {\n            piStack32 = piVar1;\n            fcn.00423020();\n            piVar1 = piStack32;\n        }\ncode_r0x004230a9:\n        if (piVar1 != NULL) {\n            return;\n        }\n        iStack72 = 0;\n        piStack56 = piVar1;\n        if (*0x7adfb8 != 0) {\n            fcn.0040a460();\n            iStack72 = *0x7adfb8;\n            if (*0x7adfb8 != 0) {\n                fcn.004257c0();\n                fcn.00425940();\n            }\n            fcn.0040a680();\n        }\n        if (iStack72 != 0) goto code_r0x0042319e;\n        auStack24 = CONCAT88(&iStack72, 0x4232a0);\n        fcn.0045ba20();\n        if (iStack72 != 0) break;\n        fcn.00433c80();\n    }\n    fcn.0040a460();\n    fcn.00425940();\n    fcn.0040a680();\ncode_r0x0042319e:\n    uStack40 = 0;\n    piVar1 = piStack56;\n    while (uStack40 + 0x800 < 0x8001) {\n        piStack32 = *(iStack72 + 0x18) + uStack40;\n        piStack32[2] = 0;\n        uStack64 = uStack40;\n        piStack48 = piVar1;\n        uStack40 = uStack40 + 0x800;\n        fcn.0040a360();\n        piVar1 = piStack32;\n        if (uStack64 != 0) {\n            fcn.00423300();\n            piVar1 = piStack48;\n        }\n    }\n    return;\n}\n",
        "token_count": 658
    },
    "00423520": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00423520(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x423545;\n            fcn.0040a460();\n            if (*0x7adf60 == 0) {\n                *0x7adf68 = 0;\n                if (*0x7adfc8 != NULL) {\n                    for (; *0x7adfc8 != NULL; *0x7adfc8 = **0x7adfc8) {\n                        (*0x7adfc8)[2] = 0x7adfb8;\n                    }\n                    if (*0x7adfb8 == 0) {\n                        *0x7adfb8 = *0x7adfc8;\n                        *0x7adfc0 = *0x7adfd0;\n                        *0x7adfc8 = in_XMM15;\n                    }\n                    else {\n                        **0x7adfd0 = *0x7adfb8;\n                        *(*0x7adfb8 + 8) = *0x7adfd0;\n                        *0x7adfb8 = *0x7adfc8;\n                        *0x7adfc8 = in_XMM15;\n                    }\n                }\n                *(*0x20 + -0x20) = 0x423578;\n                fcn.0040a680();\n                return;\n            }\n            *(*0x20 + -0x20) = 0x42360b;\n            fcn.00433c80();\n        }\n        *(puVar1 + -8) = 0x423611;\n        fcn.0045bb60();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 498
    },
    "00423620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00423620(void)\n\n{\n    uint64_t uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0040a460();\n    if ((*0x8019ec == 0) && (*0x7adfb8 != 0)) {\n        fcn.0045ba20();\n        uVar1 = *0x7adfb8;\n        fcn.0040a680();\n        return uVar1 & 0xffffffffffffff00 | uVar1 != 0;\n    }\n    fcn.0040a680();\n    return 0;\n}\n",
        "token_count": 179
    },
    "00423981": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00423981(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x7d3e10);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if ((iVar2 != 0) && (*(iVar2 + 0x18) < in_RAX || *(iVar2 + 0x18) == in_RAX)) {\n        if (*(iVar2 + 99) - 1U < 2) {\n            return in_RAX & 0xffffffffffffff00 | (in_RAX <= *(iVar2 + 0x70) && *(iVar2 + 0x70) != in_RAX);\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 337
    },
    "00423a21": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00423a21(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    bool bVar3;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x7d3e10);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 == 0) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = *(iVar2 + 99) != '\\x01';\n    }\n    if (((!bVar3) && (*(iVar2 + 0x18) < in_RAX || *(iVar2 + 0x18) == in_RAX)) &&\n       (in_RAX <= *(iVar2 + 0x70) && *(iVar2 + 0x70) != in_RAX)) {\n        return iVar2;\n    }\n    return 0;\n}\n",
        "token_count": 354
    },
    "00423c20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00423c20(void)\n\n{\n    int32_t *piVar1;\n    uint64_t *puVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint64_t arg1;\n    uint64_t uVar5;\n    bool bVar6;\n    int64_t in_RAX;\n    uint64_t uVar7;\n    int64_t noname_1;\n    uint64_t unaff_RBX;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (0x7fffffffffffffff < *(in_RAX + 0x10180)) {\n        return;\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar4 = *(unaff_R14 + 0x30);\n    if (*0x7b3b90 != '\\0') {\n        fcn.00451ca0();\n    }\n    arg1 = *(in_RAX + 0x103f8);\n    bVar6 = false;\ncode_r0x00423ccd:\n    do {\n        if (unaff_RBX == 0) {\ncode_r0x00423dd8:\n            if (bVar6) {\n                fcn.0040a680();\n            }\n            if (*0x7b3b90 != '\\0') {\n                fcn.00451da0();\n            }\n            iVar3 = *(iVar4 + 0xd8);\n            *(iVar4 + 0xd8) = iVar3 + -1;\n            if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n            return;\n        }\n        uVar7 = *(in_RAX + 0x10188);\n        if (uVar7 != 0) {\n            uVar8 = uVar7;\n            if (unaff_RBX < uVar7) {\n                uVar8 = unaff_RBX;\n            }\n            LOCK();\n            puVar2 = in_RAX + 0x10188;\n            uVar5 = *puVar2;\n            *puVar2 = *puVar2 ^ (uVar7 == uVar5) * (*puVar2 ^ uVar7 - uVar8);\n            if (uVar7 == uVar5) {\n                unaff_RBX = unaff_RBX - uVar8;\n            }\n            goto code_r0x00423ccd;\n        }\n        LOCK();\n        puVar2 = in_RAX + 0x10180;\n        uVar7 = *puVar2;\n        *puVar2 = *puVar2 + 0x200;\n        if (arg1 <= uVar7 >> 9) {\n            *(in_RAX + 0x10180) = 0x8000000000000000;\n            goto code_r0x00423dd8;\n        }\n        noname_1 = iVar4;\n        if (!bVar6) {\n            fcn.0040a460();\n        }\n        uVar7 = fcn.00423e60(arg1, noname_1, 0x200);\n        if (unaff_RBX < uVar7) {\n            LOCK();\n            *(in_RAX + 0x10188) = *(in_RAX + 0x10188) + (uVar7 - unaff_RBX);\n            unaff_RBX = 0;\n        }\n        else {\n            unaff_RBX = unaff_RBX - uVar7;\n        }\n        bVar6 = true;\n    } while( true );\n}\n",
        "token_count": 856
    },
    "00423e60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00423e92)\n\nulong fcn.00423e60(uint64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    uchar uVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    int64_t iVar7;\n    int64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t uVar9;\n    uint64_t unaff_RDI;\n    uint64_t uVar10;\n    uint8_t uVar11;\n    uint64_t uVar12;\n    uint64_t uVar13;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        uVar9 = unaff_RSI;\n        uVar12 = arg3;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x20 && *0x20 + -0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0xa0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            uVar6 = *0x7adbbc & 0x80000000;\n            if (uVar6 == 0) {\n                *0x7adbbc = *0x7adbbc + 1;\n                LOCK();\n            }\n            *(*0x20 + -0x88) = *0x7d3db8;\n            *(*0x20 + -0x84) = uVar6 == 0;\n            if (uVar6 != 0) {\n                return 0;\n            }\n            *(*0x20 + -0x28) = in_RAX;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            iVar4 = 0;\n            while( true ) {\n                if (arg3 == 0) {\n                    *(*0x20 + -0x70) = iVar4;\n                    *(*0x20 + -0xa8) = 0x424010;\n                    fcn.00420f80(*(*0x20 + -0x84));\n                    if (*0x7b3b90 != '\\0') {\n                        *(*0x20 + -0xa8) = 0x424025;\n                        fcn.0040a680();\n                        *(*0x20 + -0xa8) = 0x42403e;\n                        fcn.00451d00(*(*0x20 + -0x70));\n                        *(*0x20 + -0xa8) = 0x42404a;\n                        fcn.0040a460();\n                    }\n                    return *(*0x20 + -0x70);\n                }\n                uVar9 = unaff_RSI >> 9;\n                unaff_RDI = unaff_RSI;\n                uVar12 = arg3;\n                if (arg1 <= uVar9) goto code_r0x00424219;\n                uVar10 = *(unaff_RBX + uVar9 * 8);\n                uVar9 = uVar10 >> 0x14;\n                if (0x3f < uVar9) goto code_r0x0042420c;\n                uVar9 = *(*(in_RAX + 0x10190 + uVar9 * 8) + (uVar10 & 0xfffff) * 8);\n                uVar6 = unaff_RSI & 0x1ff;\n                uVar10 = uVar6;\n                unaff_RDI = uVar6 >> 3;\n                if (0x40 < unaff_RDI) break;\n                iVar1 = unaff_RDI - 0x40;\n                uVar12 = iVar1 >> 0x3f & unaff_RDI;\n                unaff_RDI = uVar9 + uVar12 + 0x21000;\n                iVar7 = uVar9 + uVar12 + 0x21040;\n                uVar12 = arg3 >> 3;\n                if (-iVar1 < uVar12 || -uVar12 == iVar1) {\n                    uVar12 = -iVar1;\n                }\n                *(*0x20 + -0x30) = arg3;\n                *(*0x20 + -0x68) = uVar12;\n                *(*0x20 + -0x58) = uVar9;\n                *(*0x20 + -0x38) = uVar10;\n                *(*0x20 + -0x18) = unaff_RDI;\n                *(*0x20 + -0x20) = iVar7;\n                *(*0x20 + -0x40) = unaff_RSI;\n                for (uVar13 = 0; uVar13 < uVar12; uVar13 = uVar13 + 1) {\n                    *(*0x20 + -0x10) = unaff_RDI + uVar13;\n                    if (uVar12 <= uVar13) {\ncode_r0x004241f4:\n                        *(*0x20 + -0xa8) = 0x4241ff;\n                        fcn.0045e240(uVar12);\n                        goto code_r0x004241ff;\n                    }\n                    uVar11 = *(unaff_RDI + uVar13) & ~*(uVar13 + iVar7);\n                    if (uVar11 != 0) {\n                        *(*0x20 + -0x60) = uVar13;\n                        for (uVar5 = 0; uVar5 < 8; uVar5 = uVar5 + 1) {\n                            if ((1 << (uVar5 & 0x1f) & uVar11) != 0) {\n                                uVar10 = uVar10 + uVar13 * 8 + uVar5;\n                                if (0x1ff < uVar10) {\n                                    *(*0x20 + -0xa8) = 0x4241f4;\n                                    fcn.0045e260(0x200);\n                                    goto code_r0x004241f4;\n                                }\n                                *(*0x20 + -0x48) = uVar5;\n                                *(*0x20 + -0x50) = iVar4;\n                                *(*0x20 + -0x8a) = uVar11;\n                                uVar2 = *(uVar9 + 0x20000 + uVar10 * 8);\n                                *(*0x20 + -0xa8) = 0x42410e;\n                                iVar4 = fcn.004213c0();\n                                *(*0x20 + -0x80) = iVar4;\n                                if (uVar2 == '\\0') {\n                                    iVar7 = *(*0x20 + -0x20);\n                                    uVar11 = *(*0x20 + -0x8a);\n                                    iVar4 = *(*0x20 + -0x50);\n                                }\n                                else {\n                                    *(*0x20 + -0x78) = *(iVar4 + 0x20);\n                                    *(*0x20 + -0xa8) = 0x42414e;\n                                    fcn.0040a680();\n                                    *(*0x20 + -0xa8) = 0x42415a;\n                                    uVar3 = fcn.004218a0();\n                                    *(*0x20 + -0x89) = uVar3;\n                                    *(*0x20 + -0xa8) = 0x42416a;\n                                    fcn.0040a460();\n                                    iVar4 = *(*0x20 + -0x50);\n                                    if (*(*0x20 + -0x89) != '\\0') {\n                                        iVar4 = *(*0x20 + -0x78) + *(*0x20 + -0x50);\n                                    }\n                                    iVar7 = *(*0x20 + -0x20);\n                                    uVar11 = **(*0x20 + -0x10) & ~*(*(*0x20 + -0x60) + iVar7);\n                                }\n                                uVar5 = *(*0x20 + -0x48);\n                                uVar9 = *(*0x20 + -0x58);\n                                unaff_RDI = *(*0x20 + -0x18);\n                                uVar12 = *(*0x20 + -0x68);\n                                uVar10 = *(*0x20 + -0x38);\n                                uVar13 = *(*0x20 + -0x60);\n                                unaff_RBX = *(*0x20 + 0x10);\n                            }\n                            arg1 = *(*0x20 + 0x18);\n                            unaff_RSI = *(*0x20 + -0x40);\n                        }\n                    }\n                    in_RAX = *(*0x20 + -0x28);\n                    arg3 = *(*0x20 + -0x30);\n                }\n                unaff_RSI = unaff_RSI + uVar12 * 8;\n                arg3 = arg3 + uVar12 * -8;\n            }\ncode_r0x004241ff:\n            *(*0x20 + -0xa8) = 0x42420c;\n            fcn.0045e320(0x40);\ncode_r0x0042420c:\n            arg1 = 0x40;\n            *(*0x20 + -0xa8) = 0x424219;\n            fcn.0045e260(0x40);\ncode_r0x00424219:\n            *(*0x20 + -0xa8) = 0x424225;\n            in_RAX = fcn.0045e260(arg1);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x20) = unaff_RDI;\n        *(puVar8 + 0x28) = uVar9;\n        *(puVar8 + 0x30) = uVar12;\n        *(puVar8 + -8) = 0x424249;\n        fcn.0045bb60();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        unaff_RDI = *(puVar8 + 0x20);\n        unaff_RSI = *(puVar8 + 0x28);\n        arg3 = *(puVar8 + 0x30);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 2402
    },
    "00424680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00424680(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    int64_t iStackX8;\n    int64_t iStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.004602a0();\n        iStackX8 = in_RAX;\n    }\n    iVar2 = *(*(unaff_R14 + 0x30) + 0xa0);\n    if (iVar2 != 0) {\n        if (*(iVar2 + 0xdc8) != 0) goto code_r0x004246d7;\n        iVar4 = 0;\n        iStackX8 = in_RAX;\n        iStack16 = iVar2;\n        do {\n            iVar2 = iStackX8;\n            if (0x3f < iVar4) {\n                *(iStack16 + 0xdc8) = 0x40;\n                iVar2 = iStack16;\ncode_r0x004246d7:\n                uVar1 = *(iVar2 + 0xdc8) - 1;\n                if (uVar1 < 0x80) {\n                    uVar3 = *(iVar2 + 0xdc8 + *(iVar2 + 0xdc8) * 8);\n                    *(iVar2 + 0xdc8) = uVar1;\n                    return uVar3;\n                }\n                iVar4 = 0x80;\n                iVar2 = fcn.0045e240(0x80);\n            }\n            uVar3 = fcn.00415d40(iVar2 + 0x16a38);\n            *(iStack16 + 0xdd0 + iVar4 * 8) = uVar3;\n            iVar4 = iVar4 + 1;\n        } while( true );\n    }\n    uVar3 = fcn.00415d40();\n    return uVar3;\n}\n",
        "token_count": 462
    },
    "00425940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00425940(void)\n\n{\n    int64_t *piVar1;\n    int64_t **in_RAX;\n    int64_t **unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar1 = *unaff_RBX;\n            *(*0x20 + -0x10) = piVar1;\n            if (((piVar1 == NULL) && (unaff_RBX[1] == NULL)) && (unaff_RBX[2] == NULL)) {\n                *unaff_RBX = *in_RAX;\n                if (*in_RAX == NULL) {\n                    in_RAX[1] = unaff_RBX;\n                }\n                else {\n                    (*in_RAX)[1] = unaff_RBX;\n                }\n                *in_RAX = unaff_RBX;\n                unaff_RBX[2] = in_RAX;\n                return;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = unaff_RBX[1];\n            *(*0x20 + -0x20) = unaff_RBX[2];\n            *(*0x20 + -0x38) = 0x4259bd;\n            fcn.00435540();\n            *(*0x20 + -0x38) = 0x4259ce;\n            fcn.00435e40();\n            *(*0x20 + -0x38) = 0x4259d8;\n            fcn.00435e00();\n            *(*0x20 + -0x38) = 0x4259dd;\n            fcn.00435760();\n            *(*0x20 + -0x38) = 0x4259e7;\n            fcn.00435e00();\n            *(*0x20 + -0x38) = 0x4259ec;\n            fcn.00435760();\n            *(*0x20 + -0x38) = 0x4259f6;\n            fcn.00435e00();\n            *(*0x20 + -0x38) = 0x4259fb;\n            fcn.00435760();\n            *(*0x20 + -0x38) = 0x425a05;\n            fcn.00435e00();\n            *(*0x20 + -0x38) = 0x425a0a;\n            fcn.004357a0();\n            *(*0x20 + -0x38) = 0x425a0f;\n            fcn.004355c0();\n            unaff_RBX = 0x10;\n            *(*0x20 + -0x38) = 0x425a25;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x425a35;\n        fcn.0045bb60();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 815
    },
    "00425a60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00425a60(void)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int64_t **ppiVar5;\n    ulong in_RAX;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t **ppiVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    ulong unaff_RBX;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x48) = 0x425a87;\n            iVar6 = fcn.00423a20();\n            if (iVar6 != 0) {\n                *(*0x20 + -0x28) = iVar6;\n                piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                *piVar1 = *piVar1 + 1;\n                *(*0x20 + -0x18) = *(unaff_R14 + 0x30);\n                *(*0x20 + -0x48) = 0x425aae;\n                fcn.00421740();\n                *(*0x20 + -0x20) = *(*0x20 + 8) - *(*(*0x20 + -0x28) + 0x18);\n                *(*0x20 + -0x29) = *(*(*0x20 + 0x10) + 10);\n                *(*0x20 + -0x10) = *(*0x20 + -0x28) + 0x78;\n                *(*0x20 + -0x48) = 0x425ae5;\n                fcn.0040a460();\n                iVar6 = *(*0x20 + -0x28);\n                uVar3 = *(*0x20 + -0x29);\n                uVar7 = *(*0x20 + -0x20);\n                ppiVar5 = iVar6 + 0x80;\n                while (ppiVar9 = ppiVar5,  ppiVar5 = *ppiVar9,  ppiVar5 != NULL) {\n                    uVar10 = *(ppiVar5 + 1);\n                    if ((uVar10 == uVar7) && (*(ppiVar5 + 10) == uVar3)) {\n                        *(*0x20 + -0x48) = 0x425b33;\n                        fcn.0040a680();\n                        iVar4 = *(*(*0x20 + -0x18) + 0xd8);\n                        *(*(*0x20 + -0x18) + 0xd8) = iVar4 + -1;\n                        if ((iVar4 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return 0;\n                    }\n                    if ((uVar7 < uVar10) ||\n                       ((uVar10 == uVar7 && (uVar3 <= *(ppiVar5 + 10) && *(ppiVar5 + 10) != uVar3)))) break;\n                }\n                ppiVar5 = *(*0x20 + 0x10);\n                *(ppiVar5 + 1) = uVar7;\n                *ppiVar5 = *ppiVar9;\n                *ppiVar9 = ppiVar5;\n                uVar7 = *(iVar6 + 0x18);\n                uVar10 = uVar7 + 0x800000000000;\n                uVar11 = uVar10 >> 0x2a;\n                if (uVar11 < 0x40) {\n                    uVar7 = uVar7 >> 0xd;\n                    uVar8 = (uVar7 & 0x1ff) >> 3;\n                    if (uVar8 < 0x40) {\n                        puVar2 = *(*(uVar11 * 8 + 0x7d3e10) + (uVar10 >> 0x16 & 0xfffff) * 8) + uVar8 + 0x21080;\n                        LOCK();\n                        *puVar2 = *puVar2 | 1 << (uVar7 & 7);\n                        *(*0x20 + -0x48) = 0x425c05;\n                        fcn.0040a680();\n                        iVar4 = *(*(*0x20 + -0x18) + 0xd8);\n                        *(*(*0x20 + -0x18) + 0xd8) = iVar4 + -1;\n                        if ((iVar4 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return 1;\n                    }\n                    *(*0x20 + -0x48) = 0x425c4b;\n                    fcn.0045e260(0x40);\n                }\n                *(*0x20 + -0x48) = 0x425c58;\n                fcn.0045e260(0x40);\n            }\n            unaff_RBX = 0x1d;\n            *(*0x20 + -0x48) = 0x425c69;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar12 + 8) = in_RAX;\n        *(puVar12 + 0x10) = unaff_RBX;\n        *(puVar12 + -8) = 0x425c79;\n        fcn.0045bb60();\n        in_RAX = *(puVar12 + 8);\n        unaff_RBX = *(puVar12 + 0x10);\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 1419
    },
    "00425ca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00425ca0(void)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    ulong in_RAX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t *piVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uchar unaff_BL;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int64_t *piVar11;\n    int64_t unaff_R14;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_BL;\n            *(*0x20 + -0x48) = 0x425cc6;\n            iVar4 = fcn.00423a20();\n            if (iVar4 != 0) {\n                *(*0x20 + -0x30) = iVar4;\n                piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                *piVar1 = *piVar1 + 1;\n                *(*0x20 + -0x18) = *(unaff_R14 + 0x30);\n                *(*0x20 + -0x48) = 0x425ced;\n                fcn.00421740();\n                *(*0x20 + -0x20) = *(*0x20 + 8) - *(*(*0x20 + -0x30) + 0x18);\n                *(*0x20 + -0x10) = *(*0x20 + -0x30) + 0x78;\n                *(*0x20 + -0x48) = 0x425d12;\n                fcn.0040a460();\n                iVar4 = *(*0x20 + -0x30);\n                piVar11 = iVar4 + 0x80;\n                do {\n                    piVar7 = piVar11;\n                    piVar11 = *piVar7;\n                    if (piVar11 == NULL) {\n                        piVar11 = NULL;\n                        goto code_r0x00425d50;\n                    }\n                } while ((*(piVar11 + 1) != *(*0x20 + -0x20)) || (*(piVar11 + 10) != *(*0x20 + 0x10)));\n                *piVar7 = *piVar11;\ncode_r0x00425d50:\n                *(*0x20 + -0x28) = piVar11;\n                if (*(iVar4 + 0x80) != 0) goto code_r0x00425dd9;\n                uVar8 = *(iVar4 + 0x18) + 0x800000000000;\n                uVar9 = uVar8 >> 0x2a;\n                if (uVar9 < 0x40) {\n                    uVar5 = *(iVar4 + 0x18) >> 0xd;\n                    uVar6 = (uVar5 & 0x1ff) >> 3;\n                    if (uVar6 < 0x40) {\n                        puVar2 = *(*(uVar9 * 8 + 0x7d3e10) + (uVar8 >> 0x16 & 0xfffff) * 8) + uVar6 + 0x21080;\n                        LOCK();\n                        *puVar2 = *puVar2 & ~(1 << (uVar5 & 7));\ncode_r0x00425dd9:\n                        *(*0x20 + -0x48) = 0x425de5;\n                        fcn.0040a680();\n                        iVar3 = *(*(*0x20 + -0x18) + 0xd8);\n                        *(*(*0x20 + -0x18) + 0xd8) = iVar3 + -1;\n                        if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return *(*0x20 + -0x28);\n                    }\n                    *(*0x20 + -0x48) = 0x425e2b;\n                    fcn.0045e260(0x40);\n                }\n                *(*0x20 + -0x48) = 0x425e38;\n                fcn.0045e260(0x40);\n            }\n            unaff_BL = 0x20;\n            *(*0x20 + -0x48) = 0x425e49;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar10 + 8) = in_RAX;\n        puVar10[0x10] = unaff_BL;\n        *(puVar10 + -8) = 0x425e58;\n        fcn.0045bb60();\n        in_RAX = *(puVar10 + 8);\n        unaff_BL = puVar10[0x10];\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 1208
    },
    "00425e80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00425e80(ulong arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    char cVar4;\n    ulong *puVar5;\n    ulong *puVar6;\n    ulong *arg1_00;\n    ulong unaff_RBX;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    ulong uStack0000000000000028;\n    \n    uStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0040a460();\n    puVar5 = fcn.00415d40();\n    fcn.0040a680();\n    *(puVar5 + 10) = 1;\n    arg1_00 = puVar5 + 2;\n    if (*0x801c20 == 0) {\n        puVar5[2] = unaff_RBX;\n        puVar6 = puVar5;\n    }\n    else {\n        puVar6 = fcn.0045dec0(arg1_00, unaff_RBX, in_R8, in_R9);\n    }\n    puVar6[3] = arg1;\n    if (*0x801c20 == 0) {\n        puVar6[4] = unaff_RDI;\n        puVar6[5] = uStack0000000000000028;\n    }\n    else {\n        fcn.0045df00(arg1_00, puVar6 + 4, in_R8, in_R9);\n        fcn.0045dec0(arg1_00, uStack0000000000000028, in_R8, in_R9);\n    }\n    cVar4 = fcn.00425a60();\n    if (cVar4 != '\\0') {\n        if (*0x8019ec != 0) {\n            fcn.00410940(0);\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            iVar3 = *(unaff_R14 + 0x30);\n            fcn.0041c400();\n            fcn.0041c260(0x795280);\n            iVar2 = *(iVar3 + 0xd8);\n            *(iVar3 + 0xd8) = iVar2 + -1;\n            if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n        }\n        return 1;\n    }\n    fcn.0040a460();\n    *0x7da778 = *0x7da778 - *0x7da748;\n    *puVar5 = *0x7da760;\n    *0x7da760 = puVar5;\n    fcn.0040a680();\n    return 0;\n}\n",
        "token_count": 708
    },
    "00426840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00426840(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    int64_t iVar1;\n    ulong arg1_00;\n    int64_t in_RAX;\n    int64_t arg2;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x796800 < 0x16) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                if (*0x801c20 == 0) {\n                    *(in_RAX + 0x10110) = arg1;\n                }\n                else {\n                    *(*0x20 + -0x28) = 0x42688f;\n                    in_RAX = fcn.0045dea0(arg1, *0x796800, arg3, in_R9);\n                }\n                *(*0x20 + 8) = in_RAX;\n                arg2 = in_RAX + 0x10090;\n                *(*0x20 + -0x28) = 0x4268a6;\n                fcn.0042be00();\n                *(*0x20 + -0x28) = 0x4268b0;\n                fcn.00428ae0();\n                arg1_00 = *0x7953a0;\n                iVar1 = *(*0x20 + 8);\n                *(iVar1 + 0x10078) = *0x7953a0;\n                if (*0x801c20 == 0) {\n                    *(iVar1 + 0x10108) = *(*0x20 + 0x10);\n                }\n                else {\n                    *(*0x20 + -0x28) = 0x4268eb;\n                    fcn.0045dda0(arg1_00, arg2, arg3, in_R9);\n                }\n                return;\n            }\n            *(*0x20 + -0x10) = *0x796800;\n            *(*0x20 + -0x28) = 0x4268ff;\n            fcn.00435540();\n            *(*0x20 + -0x28) = 0x426910;\n            fcn.00435e40();\n            arg1 = *(*0x20 + -0x10);\n            *(*0x20 + -0x28) = 0x42692c;\n            fcn.00435c40(arg1, 1 << (arg1 & 0x3f));\n            *(*0x20 + -0x28) = 0x426931;\n            fcn.004357a0();\n            *(*0x20 + -0x28) = 0x426936;\n            fcn.004355c0();\n            *(*0x20 + -0x28) = 0x42693b;\n            fcn.00435540();\n            *(*0x20 + -0x28) = 0x42694c;\n            fcn.00435e40();\n            *(*0x20 + -0x28) = 0x426956;\n            fcn.00435c40();\n            *(*0x20 + -0x28) = 0x42695b;\n            fcn.004357a0();\n            *(*0x20 + -0x28) = 0x426965;\n            fcn.004355c0();\n            unaff_RBX = 0x2b;\n            *(*0x20 + -0x28) = 0x426976;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x42698b;\n        fcn.0045bb60();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 1016
    },
    "00427580": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00427580(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x10120) != '\\0') goto code_r0x004275f2;\n            uVar2 = unaff_RBX + 0x800000000000U >> 0x2a;\n            if (uVar2 < 0x40) {\n                iVar1 = *(uVar2 * 8 + 0x7d3e10);\n                if ((iVar1 != 0) && (*(iVar1 + (unaff_RBX + 0x800000000000U >> 0x16 & 0xfffff) * 8) != 0)) {\n                    return unaff_RBX;\n                }\ncode_r0x004275f2:\n                *(*0x20 + -0x20) = 0x4275fd;\n                iVar1 = fcn.0042bfc0();\n                if (unaff_RBX != '\\0') {\n                    return iVar1;\n                }\n                return *0x7953a0;\n            }\n            *(*0x20 + -0x20) = 0x42762c;\n            in_RAX = fcn.0045e260(0x40);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x42763c;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 519
    },
    "004283a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.004283a0(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t arg1;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar3 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar2 = *(in_RAX + 0x10078);\n            uVar1 = iVar2 + 0x800000000000;\n            uVar4 = uVar1 >> 0x16;\n            if (*(in_RAX + 0x10088) < uVar4 || *(in_RAX + 0x10088) == uVar4) {\n                return 0;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            arg1 = (iVar2 & 0x3fffff) >> 0xd;\n            if (-(arg1 - 0x200) < unaff_RBX) goto code_r0x004284b9;\n            uVar5 = *(in_RAX + 0x68);\n            if (uVar4 < uVar5) {\n                uVar5 = *(*(in_RAX + 0x60) + uVar4 * 8);\n                if (uVar5 < 0) {\n                    uVar5 = 0x200000;\n                }\n                else {\n                    uVar5 = uVar5 >> 0x15 & 0x1fffff;\n                }\n                if (uVar5 < unaff_RBX) {\ncode_r0x004284b9:\n                    *(*0x20 + -0x40) = 0x4284be;\n                    iVar2 = fcn.00427660();\n                    if (iVar2 == 0) {\n                        if (*(*0x20 + 0x10) == 1) {\n                            *(*(*0x20 + 8) + 0x10078) = *0x7953a0;\n                        }\n                        return 0;\n                    }\ncode_r0x004284f8:\n                    *(*0x20 + -0x10) = iVar2;\n                    *(*0x20 + -0x18) = unaff_RBX;\n                    *(*0x20 + -0x40) = 0x428514;\n                    fcn.004271e0(*(*0x20 + 0x10));\n                    if (*(*(*0x20 + 8) + 0x10078) + 0x800000000000U < *(*0x20 + -0x18) + 0x800000000000U) {\n                        *(*(*0x20 + 8) + 0x10078) = *(*0x20 + -0x18);\n                    }\n                    return *(*0x20 + -0x10);\n                }\n                if (uVar1 >> 0x23 < 0x2000) {\n                    *(*0x20 + -0x10) = uVar4;\n                    *(*0x20 + -0x20) = uVar5;\n                    *(*0x20 + -0x40) = 0x428485;\n                    iVar2 = fcn.0042a320(arg1);\n                    if (iVar2 != -1) {\n                        iVar2 = iVar2 * 0x2000 + *(*0x20 + -0x10) * 0x400000 + -0x800000000000;\n                        unaff_RBX = (*(*0x20 + -0x10) * 0x400000 + unaff_RBX * 0x2000) - 0x800000000000;\n                        goto code_r0x004284f8;\n                    }\n                    *(*0x20 + -0x40) = 0x428567;\n                    fcn.00435540();\n                    *(*0x20 + -0x40) = 0x428578;\n                    fcn.00435e40();\n                    *(*0x20 + -0x40) = 0x428585;\n                    fcn.00435b40();\n                    *(*0x20 + -0x40) = 0x428596;\n                    fcn.00435e40();\n                    *(*0x20 + -0x40) = 0x4285a5;\n                    fcn.00435b40();\n                    *(*0x20 + -0x40) = 0x4285aa;\n                    fcn.004357a0();\n                    *(*0x20 + -0x40) = 0x4285af;\n                    fcn.004355c0();\n                    *(*0x20 + -0x10) = *(*(*0x20 + 8) + 0x10078);\n                    *(*0x20 + -0x40) = 0x4285c5;\n                    fcn.00435540();\n                    *(*0x20 + -0x40) = 0x4285d6;\n                    fcn.00435e40();\n                    *(*0x20 + -0x40) = 0x4285e9;\n                    fcn.00435b40();\n                    *(*0x20 + -0x40) = 0x4285fa;\n                    fcn.00435e40();\n                    *(*0x20 + -0x40) = 0x428605;\n                    fcn.00435ca0();\n                    *(*0x20 + -0x40) = 0x42860a;\n                    fcn.004357a0();\n                    *(*0x20 + -0x40) = 0x42860f;\n                    fcn.004355c0();\n                    unaff_RBX = 0x10;\n                    *(*0x20 + -0x40) = 0x428625;\n                    fcn.00433c80();\n                }\n                *(*0x20 + -0x40) = 0x428632;\n                fcn.0045e260(0x2000);\n            }\n            *(*0x20 + -0x40) = 0x42863d;\n            in_RAX = fcn.0045e260(uVar5);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x42864d;\n        fcn.004602a0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1558
    },
    "00428660": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00428660(uint64_t arg1)\n\n{\n    ulong uVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    uint32_t uVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    char unaff_DIL;\n    uint64_t uVar6;\n    int64_t arg1_00;\n    int64_t iVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar4 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar5 = unaff_RBX + 0x800000000000;\n            if (uVar5 < *(in_RAX + 0x10078) + 0x800000000000U) {\n                *(in_RAX + 0x10078) = unaff_RBX;\n            }\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            arg1_00 = arg1 * 0x2000 + unaff_RBX;\n            iVar7 = arg1 * 0x2000 + unaff_RBX + -1;\n            if (unaff_DIL == '\\0') {\n                *(*0x20 + -0x10) = uVar5;\n                *(*0x20 + -0x18) = arg1_00;\n                *(*0x20 + -0x38) = iVar7;\n                *(*0x20 + -0x60) = 0x4286e6;\n                fcn.004206a0(arg1_00);\n                in_RAX = *(*0x20 + 8);\n                iVar7 = *(*0x20 + -0x38);\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                arg1_00 = *(*0x20 + -0x18);\n                uVar5 = *(*0x20 + -0x10);\n            }\n            if (arg1 == 1) {\n                if (uVar5 >> 0x23 < 0x2000) {\n                    iVar7 = (uVar5 >> 0x16 & 0x1fff) * 0x80 + *(in_RAX + 0x78 + (uVar5 >> 0x23) * 8);\n                    uVar3 = unaff_RBX & 0x3fffff;\n                    uVar5 = uVar3 >> 0x13;\n                    if (uVar5 < 8) {\n                        *(iVar7 + uVar5 * 8) = *(iVar7 + uVar5 * 8) & ~(1 << (uVar3 >> 0xd & 0x3f));\n                        goto code_r0x00428837;\n                    }\n                    *(*0x20 + -0x60) = 0x428865;\n                    fcn.0045e260(8);\n                }\n                *(*0x20 + -0x60) = 0x428872;\n                fcn.0045e260(0x2000);\n                goto code_r0x00428872;\n            }\n            uVar6 = arg1_00 + 0x7fffffffffffU >> 0x16;\n            unaff_RBX = (unaff_RBX & 0x3fffff) >> 0xd;\n            uVar2 = (iVar7 & 0x3fffff) >> 0xd;\n            if (uVar6 == uVar5 >> 0x16) {\n                uVar5 = uVar5 >> 0x23;\n                if (0x1fff < uVar5) {\n                    *(*0x20 + -0x60) = 0x428890;\n                    uVar2 = fcn.0045e260(0x2000);\n                    goto code_r0x00428890;\n                }\n                *(*0x20 + -0x60) = 0x4287dd;\n                fcn.00429de0((uVar2 - unaff_RBX) + 1);\ncode_r0x00428872:\n                arg1 = *(*0x20 + 0x18);\ncode_r0x00428837:\n                *(*0x20 + -0x60) = 0x428849;\n                fcn.00426c00(arg1);\n                return;\n            }\n            if (uVar5 >> 0x23 < 0x2000) {\n                *(*0x20 + -0x10) = arg1_00 + 0x7fffffffffffU;\n                *(*0x20 + -0x18) = uVar6;\n                *(*0x20 + -0x20) = uVar5 >> 0x16;\n                *(*0x20 + -0x28) = uVar2;\n                *(*0x20 + -0x60) = 0x428792;\n                fcn.00429de0(-(unaff_RBX - 0x200));\n                uVar5 = *(*0x20 + 8);\n                uVar6 = *(*0x20 + -0x18);\n                iVar7 = *(*0x20 + -0x20);\n                while (arg1 = iVar7 + 1,  arg1 < uVar6) {\n                    uVar2 = arg1 >> 0xd;\n                    if (0x1fff < uVar2) goto code_r0x0042892f;\ncode_r0x00428890:\n                    *(*0x20 + -0x30) = arg1;\n                    uVar1 = *(uVar5 + 0x78 + uVar2 * 8);\n                    unaff_RBX = 0x40;\n                    *(*0x20 + -0x60) = 0x4288b6;\n                    fcn.0045e8c0(uVar1, (arg1 & 0x1fff) << 7);\n                    uVar5 = *(*0x20 + 8);\n                    uVar6 = *(*0x20 + -0x18);\n                    iVar7 = *(*0x20 + -0x30);\n                }\n                if (*(*0x20 + -0x10) >> 0x23 < 0x2000) {\n                    *(*0x20 + -0x60) = 0x42891f;\n                    fcn.00429de0(*(*0x20 + -0x28) + 1);\n                    goto code_r0x00428872;\n                }\n                *(*0x20 + -0x60) = 0x42892f;\n                fcn.0045e260(0x2000);\ncode_r0x0042892f:\n                *(*0x20 + -0x60) = 0x428939;\n                fcn.0045e260(0x2000);\n            }\n            unaff_DIL = uVar6;\n            arg1 = 0x2000;\n            *(*0x20 + -0x60) = 0x428946;\n            in_RAX = fcn.0045e260(0x2000);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        puVar4[0x20] = unaff_DIL;\n        *(puVar4 + -8) = 0x428965;\n        fcn.004602a0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_DIL = puVar4[0x20];\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1817
    },
    "00428ae0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00428ae0(ulong param_1, ulong param_2, int64_t param_3, int64_t param_4)\n\n{\n    ulong uVar1;\n    ulong uVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    uint64_t arg1;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = *0x796840;\n            *(*0x20 + -0x28) = *0x796848;\n            *(*0x20 + -0x24) = *0x79684c;\n            *(*0x20 + -0x20) = *0x796850;\n            *(*0x20 + -0x1c) = *0x796854;\n            *(*0x20 + -0x18) = *0x796858;\n            *(*0x20 + -0x14) = *0x79685c;\n            *(*0x20 + -0x10) = *0x796860;\n            *(*0x20 + -0xc) = *0x796864;\n            iVar3 = 0;\n            while( true ) {\n                if (4 < iVar3) {\n                    *(*0x20 + -0x88) = 0x428bff;\n                    uVar4 = fcn.00414c20();\n                    *(*0x20 + -0x60) = uVar4;\n                    *(*0x20 + -0x58) = 0x800000;\n                    *(*0x20 + -0x50) = 0x800000;\n                    iVar3 = *(*0x20 + 8);\n                    uVar4 = *(*0x20 + -0x60);\n                    uVar1 = *(*0x20 + -0x58);\n                    uVar2 = *(*0x20 + -0x50);\n                    *(iVar3 + 0x100d0) = uVar1;\n                    *(iVar3 + 0x100d8) = uVar2;\n                    if (*0x801c20 == 0) {\n                        *(iVar3 + 0x100c8) = uVar4;\n                    }\n                    else {\n                        *(*0x20 + -0x88) = 0x428c5b;\n                        fcn.0045dea0(uVar4, uVar1, param_3, param_4);\n                    }\n                    return;\n                }\n                *(*0x20 + -0x70) = iVar3;\n                arg1 = -(*(*0x20 + iVar3 * 8 + -0x30) + -0x30);\n                uVar6 = 1 << (arg1 & 0x3f) & -(arg1 < 0x40);\n                *(*0x20 + -0x68) = uVar6;\n                *(*0x20 + -0x88) = 0x428b85;\n                iVar3 = fcn.00414c20(arg1, *0x801b18 + uVar6 * 8 + -1);\n                if (iVar3 == 0) break;\n                *(*0x20 + -0x48) = iVar3;\n                *(*0x20 + -0x40) = 0;\n                uVar4 = *(*0x20 + -0x68);\n                *(*0x20 + -0x38) = uVar4;\n                iVar3 = *(*0x20 + 8);\n                param_3 = *(*0x20 + -0x70);\n                param_4 = param_3 * 3;\n                uVar1 = *(*0x20 + -0x48);\n                *(iVar3 + 8 + param_3 * 0x18) = 0;\n                *(iVar3 + 0x10 + param_3 * 0x18) = uVar4;\n                if (*0x801c20 == 0) {\n                    *(iVar3 + param_3 * 0x18) = uVar1;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x428bed;\n                    fcn.0045dec0(arg1, uVar1, param_3, param_4);\n                }\n                iVar3 = param_3 + 1;\n            }\n            *(*0x20 + -0x88) = 0x428c76;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x428c85;\n        fcn.0045bb60();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1164
    },
    "004292e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004292e0(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int64_t in_RAX;\n    ulong uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int32_t iVar6;\n    uint64_t unaff_RBX;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t iVar9;\n    ulong unaff_RDI;\n    int32_t iVar10;\n    uint32_t uVar11;\n    uint64_t uVar12;\n    uint32_t uVar13;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (((unaff_RBX & 0x3fffff) == 0) && ((arg1 & 0x3fffff) == 0)) {\n                uVar1 = *(in_RAX + 0x24);\n                uVar2 = *(in_RAX + 0x28);\n                uVar12 = unaff_RBX + 0x800000000000 >> 0x19;\n                uVar13 = -*0x801b18;\n                uVar11 = uVar12 & uVar13;\n                if (uVar2 < uVar11) {\n                    uVar11 = uVar2;\n                }\n                uVar13 = (((arg1 + 0x800000000000 >> 0x16) + 7 >> 3) + *0x801b18) - 1U & uVar13;\n                if (uVar13 < uVar1) {\n                    uVar13 = uVar1;\n                }\n                iVar4 = *(in_RAX + 8);\n                if (*(in_RAX + 0x10) != 0) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x3c) = uVar1;\n                    *(*0x20 + -0x40) = uVar2;\n                    *(*0x20 + -0x18) = uVar12;\n                    *(*0x20 + -0x10) = unaff_RDI;\n                    *(*0x20 + -0x44) = uVar13;\n                    *(*0x20 + -0x48) = uVar11;\n                    *(*0x20 + -0x70) = 0x4293ba;\n                    uVar3 = fcn.0042bca0();\n                    iVar9 = *(*(*0x20 + 8) + 8);\n                    if (*(*(*0x20 + 8) + 0x10) != 0) break;\n                    *(*0x20 + -0x70) = 0x42955d;\n                    fcn.0045e240(0);\n                }\n                arg1 = 0;\n                *(*0x20 + -0x70) = 0x429567;\n                fcn.0045e240(0);\n            }\n            *(*0x20 + -0x70) = 0x42956c;\n            fcn.00435540();\n            *(*0x20 + -0x70) = 0x42957d;\n            fcn.00435e40();\n            *(*0x20 + -0x70) = 0x429587;\n            fcn.00435ca0();\n            *(*0x20 + -0x70) = 0x429598;\n            fcn.00435e40();\n            *(*0x20 + -0x70) = 0x4295a5;\n            fcn.00435ca0();\n            *(*0x20 + -0x70) = 0x4295aa;\n            fcn.004357a0();\n            *(*0x20 + -0x70) = 0x4295af;\n            fcn.004355c0();\n            unaff_RBX = 0x2e;\n            *(*0x20 + -0x70) = 0x4295c5;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x20) = unaff_RDI;\n        *(puVar8 + -8) = 0x4295df;\n        fcn.0045bb60();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        unaff_RDI = *(puVar8 + 0x20);\n        *0x20 = puVar8;\n    } while( true );\n    *(*0x20 + -0x20) = uVar3;\n    *(*0x20 + -0x28) = uVar2 + iVar4;\n    iVar9 = *(*0x20 + -0x44) + iVar9;\n    *(*0x20 + -0x70) = 0x4293f3;\n    fcn.0042bca0();\n    *(*0x20 + -0x70) = 0x429405;\n    iVar4 = fcn.0042bd20(*(*0x20 + -0x20));\n    uVar12 = iVar4 + 0x800000000000;\n    uVar5 = iVar9 + 0x800000000000;\n    if (uVar12 < uVar5) {\n        iVar7 = iVar9 - iVar4;\n    }\n    else {\n        iVar7 = 0;\n    }\n    if (iVar7 != 0) {\n        *(*0x20 + -0x20) = iVar4;\n        *(*0x20 + -0x28) = uVar12;\n        *(*0x20 + -0x30) = iVar9;\n        *(*0x20 + -0x38) = uVar5;\n        *(*0x20 + -0x70) = 0x429465;\n        fcn.0042cbe0();\n        if (*(*0x20 + -0x28) < *(*0x20 + -0x38)) {\n            iVar4 = *(*0x20 + -0x30) - *(*0x20 + -0x20);\n        }\n        else {\n            iVar4 = 0;\n        }\n        LOCK();\n        *0x802458 = *0x802458 + iVar4;\n        *(*0x20 + -0x70) = 0x4294b9;\n        fcn.00414880();\n        if (*(*0x20 + -0x3c) == 0) {\n            iVar6 = *(*0x20 + -0x48);\ncode_r0x004294d2:\n            iVar4 = *(*0x20 + 8);\n            *(iVar4 + 0x24) = iVar6;\n        }\n        else {\n            iVar6 = *(*0x20 + -0x48);\n            if (iVar6 < *(*0x20 + -0x3c)) goto code_r0x004294d2;\n            iVar4 = *(*0x20 + 8);\n        }\n        if (*(*0x20 + -0x40) == 0) {\n            iVar6 = *(*0x20 + -0x44);\ncode_r0x004294f8:\n            *(iVar4 + 0x28) = iVar6;\n        }\n        else {\n            iVar6 = *(*0x20 + -0x44);\n            if (*(*0x20 + -0x40) < iVar6) goto code_r0x004294f8;\n        }\n        iVar4 = *(*0x20 + -0x20);\n        uVar5 = *(*0x20 + -0x38);\n        uVar12 = *(*0x20 + -0x28);\n        iVar9 = *(*0x20 + -0x30);\n    }\n    iVar6 = *(*(*0x20 + 8) + 0x20);\n    if (iVar6 == 0) {\n        iVar10 = *(*0x20 + -0x18);\n    }\n    else {\n        iVar10 = *(*0x20 + -0x18);\n        if (iVar6 <= iVar10) goto code_r0x0042953c;\n    }\n    *(*(*0x20 + 8) + 0x20) = iVar10;\ncode_r0x0042953c:\n    if (uVar12 < uVar5) {\n        iVar9 = iVar9 - iVar4;\n    }\n    else {\n        iVar9 = 0;\n    }\n    return iVar9;\n}\n",
        "token_count": 2024
    },
    "00429600": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00429600(ulong arg1)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    uVar1 = in_RAX[1];\n    if (uVar1 != 0) {\n        if (unaff_RBX == 1) {\n            uVar2 = 0;\n            if (uVar1 != 0) {\n                for (; (uVar1 >> uVar2 & 1) == 0; uVar2 = uVar2 + 1) {\n                }\n            }\n            uVar4 = ~(1 << (uVar2 & 0x3f) & -(uVar2 < 0x40));\n            in_RAX[1] = uVar1 & uVar4;\n            in_RAX[2] = in_RAX[2] & uVar4;\n            return uVar2 * 0x2000 + *in_RAX;\n        }\n        iVar3 = fcn.004296c0();\n        return iVar3;\n    }\n    return 0;\n}\n",
        "token_count": 319
    },
    "00429800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00429800(void)\n\n{\n    uchar (*pauVar1) [16];\n    int64_t *in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x00429800:\n    puVar4 = *0x20;\n    if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n        puVar4 = *0x20 + -0x48;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if (in_RAX[1] == 0) {\n            return;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        iVar6 = *in_RAX;\n        uVar7 = iVar6 + 0x800000000000;\n        *(*0x20 + -0x10) = uVar7;\n        uVar5 = uVar7 >> 0x16;\n        *(*0x20 + -0x18) = uVar5;\n        uVar3 = (iVar6 & 0x3fffff) >> 0xd;\n        *(*0x20 + -0x20) = uVar3;\n        uVar2 = 0;\n        do {\n            if (0x3f < uVar2) {\n                if (*in_RAX + 0x800000000000U < *(unaff_RBX + 0x10078) + 0x800000000000U) {\n                    *(unaff_RBX + 0x10078) = *in_RAX;\n                }\n                *(*0x20 + -0x50) = 0x42998b;\n                fcn.00426c00(0x40);\n                pauVar1 = *(*0x20 + 8);\n                *pauVar1 = in_XMM15;\n                *pauVar1[1] = 0;\n                return;\n            }\n            if ((in_RAX[1] >> (uVar2 & 0x3f) & 1) != 0) {\n                if (0x1fff < uVar7 >> 0x23) goto code_r0x004299c5;\n                iVar6 = (uVar5 & 0x1fff) * 0x80 + *(unaff_RBX + 0x78 + (uVar7 >> 0x23) * 8);\n                uVar8 = uVar3 + uVar2 >> 6;\n                if (7 < uVar8) goto code_r0x004299b3;\n                *(iVar6 + uVar8 * 8) = *(iVar6 + uVar8 * 8) & ~(1 << (uVar3 + uVar2 & 0x3f));\n            }\n            if ((in_RAX[2] >> (uVar2 & 0x3f) & 1) != 0) {\n                if (0x1fff < uVar7 >> 0x23) goto code_r0x004299a6;\n                *(*0x20 + -0x28) = uVar2;\n                *(*0x20 + -0x50) = 0x42992a;\n                fcn.00429ce0(1);\n                in_RAX = *(*0x20 + 8);\n                uVar2 = *(*0x20 + -0x28);\n                uVar3 = *(*0x20 + -0x20);\n                unaff_RBX = *(*0x20 + 0x10);\n                uVar7 = *(*0x20 + -0x10);\n                uVar5 = *(*0x20 + -0x18);\n            }\n            uVar2 = uVar2 + 1;\n        } while( true );\n    }\n    goto code_r0x004299d3;\ncode_r0x004299a6:\n    *(*0x20 + -0x50) = 0x4299b3;\n    fcn.0045e260(0x2000);\ncode_r0x004299b3:\n    *(*0x20 + -0x50) = 0x4299c5;\n    fcn.0045e260(8);\ncode_r0x004299c5:\n    *(*0x20 + -0x50) = 0x4299d2;\n    in_RAX = fcn.0045e260(0x2000);\ncode_r0x004299d3:\n    *(puVar4 + 8) = in_RAX;\n    *(puVar4 + 0x10) = unaff_RBX;\n    *(puVar4 + -8) = 0x4299e5;\n    fcn.004602a0();\n    in_RAX = *(puVar4 + 8);\n    unaff_RBX = *(puVar4 + 0x10);\n    *0x20 = puVar4;\n    goto code_r0x00429800;\n}\n",
        "token_count": 1191
    },
    "00429ce0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00429ce0(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    uint64_t *puVar3;\n    code *pcVar4;\n    int64_t in_RAX;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    \n    uVar5 = unaff_RBX >> 6;\n    if (uVar5 < 8) {\n        if (arg1 == 1) {\n            *(in_RAX + uVar5 * 8) = *(in_RAX + uVar5 * 8) | 1 << (unaff_RBX & 0x3f);\n            return;\n        }\n        uVar2 = (arg1 + unaff_RBX) - 1;\n        uVar6 = uVar2 >> 6;\n        if (uVar6 == uVar5) {\n            puVar3 = in_RAX + uVar5 * 8;\n            *puVar3 = *puVar3 | (1 << (arg1 & 0x3f) & -(arg1 < 0x40)) - 1 << (unaff_RBX & 0x3f);\n            return;\n        }\n        if (uVar6 < 8) {\n            puVar3 = in_RAX + uVar5 * 8;\n            *puVar3 = *puVar3 | -1 << (unaff_RBX & 0x3f);\n            while (uVar5 = uVar5 + 1,  uVar5 < uVar6) {\n                *(in_RAX + uVar5 * 8) = 0xffffffffffffffff;\n            }\n            uVar1 = (uVar2 & 0x3f) + 1;\n            puVar3 = in_RAX + uVar6 * 8;\n            *puVar3 = *puVar3 | (1 << (uVar1 & 0x3f) & -(uVar1 < 0x40)) - 1;\n            return;\n        }\n        fcn.0045e260(8);\n    }\n    fcn.0045e260(8);\n    pcVar4 = swi(3);\n    (*pcVar4)();\n    return;\n}\n",
        "token_count": 499
    },
    "00429de0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00429de0(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    uint64_t *puVar3;\n    code *pcVar4;\n    int64_t in_RAX;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    \n    uVar5 = unaff_RBX >> 6;\n    if (uVar5 < 8) {\n        if (arg1 == 1) {\n            *(in_RAX + uVar5 * 8) = *(in_RAX + uVar5 * 8) & ~(1 << (unaff_RBX & 0x3f));\n            return;\n        }\n        uVar2 = (arg1 + unaff_RBX) - 1;\n        uVar6 = uVar2 >> 6;\n        if (uVar6 == uVar5) {\n            puVar3 = in_RAX + uVar5 * 8;\n            *puVar3 = *puVar3 & ~((1 << (arg1 & 0x3f) & -(arg1 < 0x40)) - 1 << (unaff_RBX & 0x3f));\n            return;\n        }\n        if (uVar6 < 8) {\n            puVar3 = in_RAX + uVar5 * 8;\n            *puVar3 = *puVar3 & ~(-1 << (unaff_RBX & 0x3f));\n            while (uVar5 = uVar5 + 1,  uVar5 < uVar6) {\n                *(in_RAX + uVar5 * 8) = 0;\n            }\n            uVar1 = (uVar2 & 0x3f) + 1;\n            puVar3 = in_RAX + uVar6 * 8;\n            *puVar3 = *puVar3 & -(1 << (uVar1 & 0x3f) & -(uVar1 < 0x40));\n            return;\n        }\n        fcn.0045e260(8);\n    }\n    fcn.0045e260(8);\n    pcVar4 = swi(3);\n    (*pcVar4)();\n    return;\n}\n",
        "token_count": 495
    },
    "00429f00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00429f00(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    uint8_t uVar2;\n    int64_t iVar3;\n    uint64_t in_RDX;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    int64_t in_R8;\n    int64_t in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        uVar4 = unaff_RBX;\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = unaff_RBX;\n            if (arg1 == 1) {\n                uVar4 = unaff_RBX >> 6;\n                if (uVar4 < 8) {\n                    return *(in_RAX + uVar4 * 8) >> (uVar2 & 0x3f) & 1;\n                }\n                *(*0x20 + -0x40) = 0x42a047;\n                in_RAX = fcn.0045e260(8);\n                goto code_r0x0042a047;\n            }\n            uVar4 = unaff_RBX >> 6;\n            if (uVar4 < 8) {\n                unaff_RDI = (arg1 + unaff_RBX) - 1;\n                unaff_RSI = unaff_RDI >> 6;\n                if (unaff_RSI == uVar4) {\n                    if (*0x8019b5 == 0) {\n                        *(*0x20 + -0x40) = 0x42a005;\n                        uVar4 = fcn.004020e0();\n                    }\n                    else {\n                        uVar4 = popcnt(*(in_RAX + uVar4 * 8) >> (uVar2 & 0x3f) &\n                                       (1 << (arg1 & 0x3f) & -(arg1 < 0x40)) - 1);\n                    }\n                    return uVar4;\n                }\n                if (unaff_RSI < 8) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x10) = unaff_RDI;\n                    *(*0x20 + -0x18) = unaff_RSI;\n                    if (*0x8019b5 == 0) {\n                        *(*0x20 + -0x20) = uVar4;\n                        *(*0x20 + -0x40) = 0x429f98;\n                        in_R8 = fcn.004020e0();\n                        uVar4 = *(*0x20 + -0x20);\n                        unaff_RSI = *(*0x20 + -0x18);\n                        unaff_RDI = *(*0x20 + -0x10);\n                        in_RAX = *(*0x20 + 8);\n                    }\n                    else {\n                        in_R8 = popcnt(*(in_RAX + uVar4 * 8) >> (uVar2 & 0x3f));\n                    }\n                    in_RDX = *0x8019b5;\n                    while( true ) {\n                        uVar4 = uVar4 + 1;\n                        *(*0x20 + -0x20) = in_R8;\n                        if (unaff_RSI <= uVar4) break;\n                        if (in_RDX == 0) {\n                            *(*0x20 + -0x28) = uVar4;\n                            *(*0x20 + -0x40) = 0x42a073;\n                            in_R9 = fcn.004020e0();\n                            in_RDX = *0x8019b5;\n                            uVar4 = *(*0x20 + -0x28);\n                            unaff_RSI = *(*0x20 + -0x18);\n                            unaff_RDI = *(*0x20 + -0x10);\n                            in_R8 = *(*0x20 + -0x20);\n                            in_RAX = *(*0x20 + 8);\n                        }\n                        else {\n                            in_R9 = popcnt(*(in_RAX + uVar4 * 8));\n                        }\ncode_r0x0042a047:\n                        in_R8 = in_R8 + in_R9;\n                    }\n                    uVar1 = (unaff_RDI & 0x3f) + 1;\n                    if (in_RDX == 0) {\n                        *(*0x20 + -0x40) = 0x42a0cf;\n                        iVar3 = fcn.004020e0();\n                        in_R8 = *(*0x20 + -0x20);\n                    }\n                    else {\n                        iVar3 = popcnt((1 << (uVar1 & 0x3f) & -(uVar1 < 0x40)) - 1 & *(in_RAX + unaff_RSI * 8));\n                    }\n                    return iVar3 + in_R8;\n                }\n                *(*0x20 + -0x40) = 0x42a0f2;\n                fcn.0045e260(8);\n            }\n            arg1 = 8;\n            *(*0x20 + -0x40) = 0x42a0ff;\n            in_RAX = fcn.0045e260(8);\n            in_RDX = unaff_RBX;\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = uVar4;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x42a114;\n        fcn.0045bb60();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1392
    },
    "0042a320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0042a320(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (unaff_RBX == 1) {\n        arg1 = arg1 >> 6;\n        while( true ) {\n            if (7 < arg1) {\n                return -1;\n            }\n            uVar2 = ~*(in_RAX + arg1 * 8);\n            if (uVar2 != 0) break;\n            arg1 = arg1 + 1;\n        }\n        iVar1 = 0;\n        if (uVar2 != 0) {\n            for (; (uVar2 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n            }\n        }\n        return arg1 * 0x40 + iVar1;\n    }\n    if (0x40 < unaff_RBX) {\n        iVar1 = fcn.0042a4e0(arg1);\n        return iVar1;\n    }\n    iVar1 = fcn.0042a3e0(arg1);\n    return iVar1;\n}\n",
        "token_count": 315
    },
    "0042a6a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042a6a0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            if ((in_RAX == 1) || (in_RAX - 2U < 2)) {\n                *(*0x20 + -0x28) = 0x42a6f0;\n                iVar1 = fcn.0040c8c0(0x8044f0);\n                *(iVar1 + 0x10) = *(*0x20 + 8);\n                *(iVar1 + 0x28) = *(*0x20 + 0x10);\n                return;\n            }\n            unaff_RBX = 0x1b;\n            *(*0x20 + -0x28) = 0x42a71d;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x42a72d;\n        fcn.0045bb60();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 447
    },
    "0042a740": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0042a740(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x10) == 1) {\n                return in_RAX + *(in_RAX + 0x28) * 8 + 0x30;\n            }\n            *(*0x20 + -0x20) = 0x42a785;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x42a790;\n        fcn.0045bb60();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 288
    },
    "0042b180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0042b180(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    double *pdVar2;\n    ulong in_RAX;\n    ulong uVar3;\n    ulong in_RDX;\n    int64_t iVar4;\n    uchar *unaff_RBX;\n    uchar *puVar5;\n    ulong unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xe0 && *0x20 + -0xe0 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x160;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0x170) = *0x20 + -8;\n            *(*0x20 + -0x168) = 0x42b1d5;\n            fcn.0045e4b4();\n            unaff_RBP = *(*0x20 + -0x170);\n            unaff_RDI = *(*(unaff_R14 + 0x30) + 0x90);\n            if ((unaff_RDI == 0) || (unaff_R14 == unaff_RDI)) {\n                unaff_RBX = *0x20 + -0x110;\n                unaff_RDI = 0x20;\n                *(*0x20 + -0x168) = 0x42b237;\n                arg1 = fcn.004558e0(0x20);\n            }\n            else {\n                *(*0x20 + -0x160) = 0;\n                unaff_RBX = 0xffffffffffffffff;\n                *(*0x20 + -0x168) = 0x42b21f;\n                arg1 = fcn.004525e0(0, in_RDX, *0x20 + -0x110, 0x20);\n            }\n            if (arg1 < 0x21) break;\n            in_RDX = 0x20;\n            *(*0x20 + -0x168) = 0x42b325;\n            in_RAX = fcn.0045e280(arg1, 0x20);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x42b33f;\n        fcn.0045bb60();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n    *(*0x20 + -0x168) = 0x42b26c;\n    fcn.0042a800(*0x20 + -0x110);\n    *(*0x20 + -0x168) = 0x42b271;\n    uVar3 = fcn.0042a7a0();\n    *(*0x20 + -0x10) = uVar3;\n    *(*0x20 + -0x168) = 0x42b287;\n    fcn.0040a460();\n    if (*(*0x20 + 0x20) == 2) {\n        iVar1 = *(*0x20 + 0x10);\n        iVar4 = *(*0x20 + 8);\n        if (iVar4 < iVar1) {\n            pdVar2 = *(*0x20 + -0x10);\n            *pdVar2 = iVar1 / iVar4 + *pdVar2;\n            pdVar2[1] = pdVar2[1] + iVar1;\n            goto code_r0x0042b2fa;\n        }\n    }\n    else {\n        iVar4 = *(*0x20 + 8);\n    }\n    pdVar2 = *(*0x20 + -0x10);\n    *pdVar2 = *0x7327d0 + *pdVar2;\n    pdVar2[1] = pdVar2[1] + iVar4;\ncode_r0x0042b2fa:\n    *(*0x20 + -0x168) = 0x42b306;\n    fcn.0040a680();\n    return;\n}\n",
        "token_count": 1073
    },
    "0042b3c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0042b3c0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    char cVar4;\n    int64_t in_RAX;\n    code **unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (*(in_RAX + 0x90) != 6) {\n        cVar4 = fcn.00456460();\n        if (cVar4 == '\\0') {\n            while (*(in_RAX + 0x17c) != 2) {\n                if (*(in_RAX + 0x17c) == 1) {\n                    (**unaff_RBX)();\n                }\n                else {\n                    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                    *piVar1 = *piVar1 + 1;\n                    iVar3 = *(unaff_R14 + 0x30);\n                    LOCK();\n                    if (*(in_RAX + 0x17c) == 0) {\n                        *(in_RAX + 0x17c) = 1;\n                        fcn.0042b520();\n                        *(in_RAX + 0x17c) = 2;\n                    }\n                    iVar2 = *(iVar3 + 0xd8);\n                    *(iVar3 + 0xd8) = iVar2 + -1;\n                    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                    }\n                }\n            }\n            return;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 414
    },
    "0042b520": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0042b520(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong noname_1;\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x90) != 2) {\n                LOCK();\n                if (*0x7aa458 <= *0x7aa448) {\n                    *0x7aa448 = *0x7aa448 + 1;\n                    return;\n                }\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x28) = *0x7aa448;\n                *(*0x20 + -0x20) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                *(*0x20 + -0x10) = 0;\n                *(*0x20 + -0x20) = 0x42b680;\n                *(*0x20 + -0x18) = in_RAX;\n                *(*0x20 + -0x10) = *0x7aa448;\n                *(*0x20 + -0x40) = *0x20 + -0x20;\n                *(*0x20 + -0x48) = 0x42b5a8;\n                *0x7aa448 = *0x7aa448 + 1;\n                fcn.0045ba20();\n                in_XMM15_Da = 0;\n                in_XMM15_Db = 0;\n                in_XMM15_Dc = 0;\n                in_XMM15_Dd = 0;\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                if (*0x7aa468 == 0) {\n                    return;\n                }\n                noname_1 = *(*(*0x20 + 8) + 0x168);\n                if (*(*0x20 + -0x28) < *0x7aa470) {\n                    if (*0x801c20 == 0) {\n                        *(*0x7aa468 + *(*0x20 + -0x28) * 8) = noname_1;\n                    }\n                    else {\n                        *(*0x20 + -0x48) = 0x42b5fd;\n                        fcn.0045dec0(*0x7aa470, noname_1, param_3, param_4);\n                    }\n                    return;\n                }\n                *(*0x20 + -0x48) = 0x42b619;\n                in_RAX = fcn.0045e240(*0x7aa470);\n            }\n            *(*0x20 + -0x30) = *(in_RAX + 0x98);\n            *(*0x20 + -0x48) = 0x42b62a;\n            fcn.00435540();\n            *(*0x20 + -0x48) = 0x42b63b;\n            fcn.00435e40();\n            *(*0x20 + -0x48) = 0x42b645;\n            fcn.00435c40();\n            *(*0x20 + -0x48) = 0x42b64a;\n            fcn.004357a0();\n            *(*0x20 + -0x48) = 0x42b64f;\n            fcn.004355c0();\n            *(*0x20 + -0x48) = 0x42b665;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x42b670;\n        fcn.0045bb60();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 1017
    },
    "0042be00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042be00(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    in_RAX[1] = 0;\n    in_RAX[2] = 0x10;\n    uVar1 = fcn.0040c8c0(unaff_RBX);\n    *in_RAX = uVar1;\n    if (*0x801c20 == 0) {\n        in_RAX[4] = unaff_RBX;\n    }\n    else {\n        fcn.0045dec0(in_RAX, unaff_RBX, param_3, param_4);\n    }\n    in_RAX[3] = 0;\n    return;\n}\n",
        "token_count": 234
    },
    "0042bfc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0042bfc0(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    uint64_t uVar3;\n    uint64_t arg1;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x20) = 0x42bfe7;\n            uVar3 = fcn.0042bec0();\n            if (uVar3 == 0) {\n                if ((*(*0x20 + 8))[1] != NULL) {\n                    return ***(*0x20 + 8);\n                }\n            }\n            else {\n                arg1 = (*(*0x20 + 8))[1];\n                iVar2 = **(*0x20 + 8);\n                if (uVar3 - 1 < arg1) {\n                    iVar5 = (uVar3 - 1) * 0x10;\n                    uVar1 = *(*0x20 + 0x10) + 0x800000000000;\n                    if ((*(iVar5 + iVar2) + 0x800000000000U <= uVar1) &&\n                       (uVar1 < *(iVar2 + 8 + iVar5) + 0x800000000000U)) {\n                        return *(*0x20 + 0x10);\n                    }\n                    if (arg1 <= uVar3) {\n                        return 0;\n                    }\n                    if (uVar3 < arg1) {\n                        return *(uVar3 * 0x10 + iVar2);\n                    }\n                    *(*0x20 + -0x20) = 0x42c099;\n                    fcn.0045e240(arg1);\n                }\n                *(*0x20 + -0x20) = 0x42c0a5;\n                fcn.0045e240(arg1);\n            }\n            *(*0x20 + -0x20) = 0x42c0af;\n            in_RAX = fcn.0045e240(0);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x42c0bf;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 696
    },
    "0042ce20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042ce20(void)\n\n{\n    int64_t *in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *in_RAX = in_RAX + 2;\n            if (*0x801c25 == '\\0') {\n                in_RAX[1] = in_RAX + 0x202;\n            }\n            else {\n                in_RAX[1] = in_RAX + 4;\n            }\n            if ((in_RAX[1] - *in_RAX & 0xfU) == 0) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x42ce85;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x42ce90;\n        fcn.0045bb60();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 338
    },
    "0042cee0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042cee0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    if (0 < *(*(unaff_R14 + 0x30) + 0xdc)) {\n        iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n        *(iVar1 + 0x1268) = iVar1 + 0x1278;\n        return;\n    }\n    if ((*0x801c25 != '\\0') && (in_RAX != 0)) {\n        fcn.00403e60();\n        if (*0x801c24 == '\\0') {\n            iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n            *(iVar1 + 0x1268) = iVar1 + 0x1278;\n            return;\n        }\n    }\n    fcn.0045ba20();\n    return;\n}\n",
        "token_count": 215
    },
    "0042cfa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042cfa0(void)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t arg1;\n    uint8_t *puVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint8_t uVar7;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar6 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar4 = *(in_RAX + 0x1268) - (in_RAX + 0x1278) >> 3;\n            if (uVar4 < 0x201) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x10) = uVar4;\n                *(in_RAX + 0x1268) = 0;\n                if (*0x8019b1 != '\\0') {\n                    iVar3 = 0;\n                    while (iVar3 < uVar4) {\n                        *(*0x20 + -0x18) = iVar3;\n                        uVar1 = *(in_RAX + 0x1278 + iVar3 * 8);\n                        *(*0x20 + -0x48) = 0x42d01b;\n                        fcn.0041c9a0(uVar1);\n                        in_RAX = *(*0x20 + 8);\n                        uVar4 = *(*0x20 + -0x10);\n                        iVar3 = *(*0x20 + -0x18) + 1;\n                    }\n                    *(*0x20 + -0x48) = 0x42d03d;\n                    fcn.0042ce20();\n                    return;\n                }\n                arg1 = 0;\n                for (iVar3 = 0; iVar3 < uVar4; iVar3 = iVar3 + 1) {\n                    uVar8 = arg1;\n                    if (0xfff < *(in_RAX + 0x1278 + iVar3 * 8)) {\n                        *(*0x20 + -0x18) = iVar3;\n                        *(*0x20 + -0x20) = arg1;\n                        uVar4 = 0;\n                        *(*0x20 + -0x48) = 0x42d085;\n                        iVar3 = fcn.00410940(0);\n                        if (iVar3 == 0) {\n                            in_RAX = *(*0x20 + 8);\n                            iVar3 = *(*0x20 + -0x18);\n                            uVar8 = *(*0x20 + -0x20);\n                            uVar4 = *(*0x20 + -0x10);\n                        }\n                        else {\n                            puVar5 = (uVar4 >> 3) + *0x50;\n                            uVar7 = 1 << (uVar4 & 7);\n                            if ((uVar7 & *puVar5) == 0) {\n                                LOCK();\n                                *puVar5 = *puVar5 | uVar7;\n                                uVar4 = *0x18 + 0x800000000000 >> 0x2a;\n                                if (0x3f < uVar4) goto code_r0x0042d22d;\n                                iVar2 = *(*(uVar4 * 8 + 0x7d3e10) + (*0x18 + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n                                uVar4 = *0x18 >> 0x10 & 0x3f;\n                                puVar5 = iVar2 + uVar4 + 0x21040;\n                                uVar7 = 1 << (*0x18 >> 0xd & 7);\n                                if ((uVar7 & *(iVar2 + 0x21040 + uVar4)) == 0) {\n                                    LOCK();\n                                    *puVar5 = *puVar5 | uVar7;\n                                }\n                                if ((*0x62 & 1) == 0) {\n                                    uVar8 = *(*0x20 + -0x20);\n                                    arg1 = *(*0x20 + -0x10);\n                                    if (arg1 <= uVar8) goto code_r0x0042d225;\n                                    in_RAX = *(*0x20 + 8);\n                                    *(in_RAX + 0x1278 + uVar8 * 8) = iVar3;\n                                    uVar8 = uVar8 + 1;\n                                    iVar3 = *(*0x20 + -0x18);\n                                    uVar4 = arg1;\n                                }\n                                else {\n                                    in_RAX = *(*0x20 + 8);\n                                    *(in_RAX + 0x1250) = *(in_RAX + 0x1250) + *0x68;\n                                    iVar3 = *(*0x20 + -0x18);\n                                    uVar8 = *(*0x20 + -0x20);\n                                    uVar4 = *(*0x20 + -0x10);\n                                }\n                            }\n                            else {\n                                in_RAX = *(*0x20 + 8);\n                                iVar3 = *(*0x20 + -0x18);\n                                uVar8 = *(*0x20 + -0x20);\n                                uVar4 = *(*0x20 + -0x10);\n                            }\n                        }\n                    }\n                    arg1 = uVar8;\n                }\n                if (arg1 < 0x201) {\n                    *(*0x20 + -0x48) = 0x42d1fe;\n                    fcn.00422b20(arg1);\n                    *(*0x20 + -0x48) = 0x42d20e;\n                    fcn.0042ce20();\n                    return;\n                }\n                *(*0x20 + -0x48) = 0x42d225;\n                fcn.0045e2c0(arg1, 0x200);\ncode_r0x0042d225:\n                *(*0x20 + -0x48) = 0x42d22d;\n                fcn.0045e240(arg1);\ncode_r0x0042d22d:\n                uVar4 = 0x40;\n                *(*0x20 + -0x48) = 0x42d23a;\n                fcn.0045e260(0x40);\n            }\n            *(*0x20 + -0x48) = 0x42d245;\n            in_RAX = fcn.0045e2a0(uVar4, 0x200);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + -8) = 0x42d250;\n        fcn.004602a0();\n        in_RAX = *(puVar6 + 8);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1583
    },
    "0042d260": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042d260(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (*0x8019fc == 0) {\n        fcn.0040a460();\n        if (*0x8019fc == 0) {\n            fcn.0042d6e0();\n            *0x8019fc = 1;\n        }\n        fcn.0040a680();\n    }\n    return;\n}\n",
        "token_count": 143
    },
    "0042d360": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042d360(ulong arg1)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t unaff_RBX;\n    \n    if ((arg1 == 0x72) || (arg1 == 0xe9)) {\n        do {\n            uVar4 = *(unaff_RBX + 0x18);\n            if (uVar4 == 1) {\n                uVar4 = 0;\n                goto code_r0x0042d376;\n            }\n            LOCK();\n            puVar1 = unaff_RBX + 0x18;\n            uVar3 = *puVar1;\n            *puVar1 = *puVar1 ^ (uVar4 == uVar3) * (*puVar1 ^ 1);\n        } while (uVar4 != uVar3);\n        if (uVar4 == 2) {\n            uVar4 = 0;\n        }\n    }\n    else {\n        uVar4 = 0;\n    }\ncode_r0x0042d376:\n    if ((arg1 == 0x77) || (arg1 == 0xe9)) {\n        do {\n            uVar3 = *(unaff_RBX + 0x20);\n            if (uVar3 == 1) {\n                uVar3 = 0;\n                goto code_r0x0042d38e;\n            }\n            LOCK();\n            puVar1 = unaff_RBX + 0x20;\n            uVar2 = *puVar1;\n            *puVar1 = *puVar1 ^ (uVar3 == uVar2) * (*puVar1 ^ 1);\n        } while (uVar3 != uVar2);\n        if (uVar3 == 2) {\n            uVar3 = 0;\n        }\n    }\n    else {\n        uVar3 = 0;\n    }\ncode_r0x0042d38e:\n    if (uVar4 != 0) {\n        *(uVar4 + 0xa0) = *in_RAX;\n        *in_RAX = uVar4;\n    }\n    if (uVar3 != 0) {\n        *(uVar3 + 0xa0) = *in_RAX;\n        *in_RAX = uVar3;\n    }\n    return;\n}\n",
        "token_count": 527
    },
    "0042d4a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0042d4a0(char param_1)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t *puVar4;\n    int32_t unaff_EBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            puVar4 = in_RAX + 0x18;\n            if (unaff_EBX == 0x77) {\n                puVar4 = in_RAX + 0x20;\n            }\n            do {\n                LOCK();\n                uVar3 = *puVar4;\n                *puVar4 = *puVar4 ^ (uVar3 == 1) * *puVar4;\n                if (uVar3 == 1) {\n                    return 1;\n                }\n                LOCK();\n                uVar3 = *puVar4;\n                *puVar4 = *puVar4 ^ (uVar3 == 0) * (*puVar4 ^ 2);\n                if (uVar3 == 0) {\n                    if (param_1 == '\\0') {\n                        uVar1 = *(in_RAX + 0x10);\n                        if ((uVar1 & 1) == 0) {\n                            if (((unaff_EBX == 0x72) && ((uVar1 >> 2 & 1) != 0)) ||\n                               ((unaff_EBX == 0x77 && ((uVar1 >> 3 & 1) != 0)))) {\n                                uVar3 = 2;\n                            }\n                            else if ((unaff_EBX == 0x72) && ((uVar1 >> 1 & 1) != 0)) {\n                                uVar3 = 3;\n                            }\n                            else {\n                                uVar3 = 0;\n                            }\n                        }\n                        else {\n                            uVar3 = 1;\n                        }\n                        if (uVar3 == 0) goto code_r0x0042d574;\n                    }\n                    else {\ncode_r0x0042d574:\n                        *(*0x20 + -0x10) = puVar4;\n                        param_1 = '\\x02';\n                        *(*0x20 + -0x38) = 0x42d597;\n                        uVar3 = fcn.004366e0();\n                        puVar4 = *(*0x20 + -0x10);\n                    }\n                    uVar2 = *puVar4;\n                    *puVar4 = 0;\n                    if (uVar2 < 3) {\n                        return uVar3 & 0xffffffffffffff00 | uVar2 == 1;\n                    }\n                    *(*0x20 + -0x38) = 0x42d5da;\n                    fcn.00433c80();\n                    break;\n                }\n            } while ((*puVar4 == 1) || (*puVar4 == 0));\n            unaff_EBX = 0x14;\n            *(*0x20 + -0x38) = 0x42d5eb;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_EBX;\n        puVar5[0x14] = param_1;\n        *(puVar5 + -8) = 0x42d5fe;\n        fcn.0045bb60();\n        in_RAX = *(puVar5 + 8);\n        unaff_EBX = *(puVar5 + 0x10);\n        param_1 = puVar5[0x14];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 910
    },
    "0042d620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.0042d620(void)\n\n{\n    ulong *puVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0040a460();\n    if (*(in_RAX + 8) == 0) {\n        iVar2 = fcn.0040c8c0(0x804500);\n        for (uVar3 = 0; uVar3 < 0x11; uVar3 = uVar3 + 1) {\n            *(iVar2 + uVar3 * 0xf0) = *(in_RAX + 8);\n            *(in_RAX + 8) = uVar3 * 0xf0 + iVar2;\n        }\n    }\n    puVar1 = *(in_RAX + 8);\n    *(in_RAX + 8) = *puVar1;\n    fcn.0040a680();\n    return puVar1;\n}\n",
        "token_count": 267
    },
    "0042d7e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0042d7e0(void)\n\n{\n    uint64_t uVar1;\n    int64_t unaff_R14;\n    int64_t iStack16;\n    \n    while (uVar1 = *0x795250,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00430f00();\n    if (iStack16 == 0) {\n        fcn.0045f700();\n        return uVar1 & 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 148
    },
    "0042d8a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0042d8a0(void)\n\n{\n    uint64_t uVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            if (*0x801a04 != 0) {\n                return *0x801a04;\n            }\n            *0x801a04 = 1;\n            *(*0x20 + -0x40) = *0x7951c0;\n            *(*0x20 + -0x38) = *0x795390;\n            *(*0x20 + -0x30) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x48) = 0x42d8fc;\n            uVar1 = fcn.00430f00();\n            if (*(*0x20 + -0x18) != 0) {\n                return uVar1;\n            }\n            *(*0x20 + -0x48) = 0x42d927;\n            fcn.0045f700();\n            in_XMM15_Da = 0;\n            in_XMM15_Db = 0;\n            in_XMM15_Dc = 0;\n            in_XMM15_Dd = 0;\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            *(*0x20 + -0x10) = *(*0x20 + -0x40);\n            *(*0x20 + -0x48) = 0x42d948;\n            fcn.00435540();\n            *(*0x20 + -0x48) = 0x42d959;\n            fcn.00435e40();\n            *(*0x20 + -0x48) = 0x42d965;\n            fcn.00435b40();\n            *(*0x20 + -0x48) = 0x42d976;\n            fcn.00435e40();\n            *(*0x20 + -0x48) = 0x42d97b;\n            fcn.004355c0();\n            *(*0x20 + -0x48) = 0x42d98c;\n            fcn.00433c80();\n        }\n        *(puVar2 + -8) = 0x42d992;\n        fcn.0045bb60();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 706
    },
    "0042d9a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0042d9a0(void)\n\n{\n    ulong uVar1;\n    uint32_t uVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t iVar8;\n    ulong *puVar9;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x800 && *0x20 + -0x800 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x880;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            puVar9 = *0x20 + -0x808;\n            for (iVar4 = 0x100; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar9 = 0;\n                puVar9 = puVar9 + 1;\n            }\n            *(*0x20 + -0x83c) = 0;\n            *(*0x20 + -0x830) = 0;\n            *(*0x20 + -0x838) = 0;\n            *(*0x20 + -0x828) = 0;\n            iVar4 = *(unaff_R14 + 0x30);\n            if (*0x795390 == -1) {\n                return 0;\n            }\n            if (in_RAX < 0) {\n                uVar5 = 0xffffffff;\n            }\n            else if (in_RAX == 0) {\n                uVar5 = 0;\n            }\n            else if (in_RAX < 1000000) {\n                uVar5 = 1;\n            }\n            else if (in_RAX < 1000000000000000) {\n                uVar5 = in_RAX / 1000000 + (in_RAX >> 0x3f);\n            }\n            else {\n                uVar5 = 1000000000;\n            }\n            iVar8 = *0x8019f0;\n            if (iVar8 != 0) {\n                if (iVar8 == -1) {\n                    uVar2 = 0xffffffc0;\n                }\n                else {\n                    uVar2 = SUB164((SEXT816(0x40) & 0xffffffffffffffff | ZEXT816(0x40)) / SEXT816(iVar8), 0);\n                }\n                *(*0x20 + -0x838) = uVar2;\n                if (uVar2 < 8) {\n                    *(*0x20 + -0x838) = 8;\n                }\n                *(*0x20 + -0x820) = in_RAX;\n                *(*0x20 + -0x810) = iVar4;\n                if (in_RAX != 0) {\n                    *(iVar4 + 0xe5) = 1;\n                }\n                puVar6 = *0x20 + -0x808;\n                *(*0x20 + -0x880) = *0x795200;\n                *(*0x20 + -0x878) = *0x795390;\n                *(*0x20 + -0x870) = puVar6;\n                *(*0x20 + -0x868) = *(*0x20 + -0x838);\n                *(*0x20 + -0x860) = *0x20 + -0x838;\n                *(*0x20 + -0x858) = uVar5;\n                *(*0x20 + -0x850) = 0;\n                *(*0x20 + -0x888) = 0x42db07;\n                fcn.00431000();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                if (*(*0x20 + -0x848) == 0) {\n                    *(*(*0x20 + -0x810) + 0xe5) = 0;\n                    *(*0x20 + -0x888) = 0x42db4c;\n                    fcn.0045f700();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    if (*(*0x20 + -0x880) != 0x102) {\n                        *(*0x20 + -0x82c) = *(*0x20 + -0x880);\n                        *(*0x20 + -0x888) = 0x42db97;\n                        fcn.00435540();\n                        *(*0x20 + -0x888) = 0x42dba8;\n                        fcn.00435e40();\n                        *(*0x20 + -0x888) = 0x42dbb4;\n                        fcn.00435c40();\n                        *(*0x20 + -0x888) = 0x42dbc5;\n                        fcn.00435e40();\n                        *(*0x20 + -0x888) = 0x42dbca;\n                        fcn.004355c0();\n                        uVar5 = 0x17;\n                        *(*0x20 + -0x888) = 0x42dbdb;\n                        fcn.00433c80();\n                        goto code_r0x0042dbdb;\n                    }\n                    return 0;\n                }\n                *(*(*0x20 + -0x810) + 0xe5) = 0;\n                puVar6 = *(*0x20 + -0x820);\n                uVar3 = 0;\n                while( true ) {\n                    uVar5 = uVar3;\n                    if (*(*0x20 + -0x838) < uVar5 || *(*0x20 + -0x838) == uVar5) {\n                        return *(*0x20 + -0x828);\n                    }\n                    if (0x3f < uVar3) break;\n                    *(*0x20 + -0x834) = uVar5;\n                    iVar4 = *(*0x20 + uVar3 * 0x20 + -0x800);\n                    if (iVar4 == 0) {\n                        *0x801a04 = 0;\n                        if (puVar6 == NULL) {\n                            *(*0x20 + -0x888) = 0x42dc25;\n                            fcn.0042d8a0();\n                            puVar6 = *(*0x20 + -0x820);\n                            uVar5 = *(*0x20 + -0x834);\n                        }\n                    }\n                    else {\n                        *(*0x20 + -0x818) = iVar4;\n                        *(*0x20 + -0x83c) = 0;\n                        uVar1 = *(*(iVar4 + 0x20) + 8);\n                        *(*0x20 + -0x880) = *0x7ad028;\n                        *(*0x20 + -0x878) = uVar1;\n                        *(*0x20 + -0x870) = iVar4;\n                        *(*0x20 + -0x868) = *0x20 + -0x83c;\n                        *(*0x20 + -0x860) = 0;\n                        *(*0x20 + -0x858) = *0x20 + -0x830;\n                        *(*0x20 + -0x888) = 0x42dc85;\n                        fcn.00430f80();\n                        unaff_R14 = **(in_GS_OFFSET + 0x28);\n                        if (*(*0x20 + -0x850) == 0) {\n                            *(*0x20 + -0x888) = 0x42dcab;\n                            fcn.0045f700();\n                            unaff_R14 = **(in_GS_OFFSET + 0x28);\n                            uVar5 = *(*0x20 + -0x880);\n                        }\n                        else {\n                            uVar5 = 0;\n                        }\n                        *(*0x20 + -0x888) = 0x42dcd7;\n                        fcn.0042dd40(uVar5);\n                        puVar6 = *(*0x20 + -0x820);\n                        uVar5 = *(*0x20 + -0x834);\n                    }\ncode_r0x0042dbdb:\n                    uVar3 = uVar5 + 1;\n                }\n                *(*0x20 + -0x888) = 0x42dd0b;\n                fcn.0045e240(0x40);\n            }\n            *(*0x20 + -0x888) = 0x42dd10;\n            in_RAX = fcn.00432100();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x42dd1b;\n        fcn.0045bb60();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1998
    },
    "0042dec0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0042dec0(ulong arg1)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    ulong uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*0x801b78 == 0) {\n                arg1 = 0x8021e0;\n                *(*0x20 + -0x48) = *0x7951f0;\n                *(*0x20 + -0x40) = 0x8021e0;\n                *(*0x20 + -0x38) = 0x104;\n                *(*0x20 + -0x50) = 0x42df11;\n                fcn.00430e00();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                uVar1 = *(*0x20 + -0x30);\n                if ((uVar1 != 0) && (uVar1 < 0x105)) {\n                    *(uVar1 + 0x8021e0) = 0x5c;\n                    *0x801b78 = uVar1 + 1;\n                    in_RAX = *(*0x20 + 8);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    goto code_r0x0042df5f;\n                }\n            }\n            else {\ncode_r0x0042df5f:\n                if (*0x8019b2 == '\\0') {\n                    uVar1 = *0x801b78;\n                    if (*0x801b78 < 0x106) {\n                        *(*0x20 + -0x20) = *0x801b78 + unaff_RBX;\n                        if (*0x801b78 + unaff_RBX < 0x106) {\n                            uVar2 = 0x8021e0;\n                        }\n                        else {\n                            *(*0x20 + -0x18) = *0x801b78;\n                            *(*0x20 + -0x50) = 0x42e00f;\n                            uVar2 = fcn.00447360(*0x801b78);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(*0x20 + -0x10) = uVar2;\n                        *(*0x20 + -0x50) = 0x42e038;\n                        fcn.0045ebc0(unaff_RBX);\n                        if (*(*0x20 + -0x20) != 0) {\n                            *(*0x20 + -0x48) = *0x7951c8;\n                            *(*0x20 + -0x40) = *(*0x20 + -0x10);\n                            *(*0x20 + -0x50) = 0x42e05f;\n                            fcn.00430d80();\n                            return *(*0x20 + -0x38);\n                        }\n                        uVar1 = 0;\n                        *(*0x20 + -0x50) = 0x42e08c;\n                        fcn.0045e240(0);\n                    }\n                    *(*0x20 + -0x50) = 0x42e096;\n                    fcn.0045e2a0(uVar1, 0x105);\n                }\n                else if (unaff_RBX != 0) {\n                    *(*0x20 + -0x48) = *0x7acfe8;\n                    *(*0x20 + -0x40) = in_RAX;\n                    *(*0x20 + -0x38) = 0;\n                    *(*0x20 + -0x30) = 0x800;\n                    *(*0x20 + -0x50) = 0x42df98;\n                    fcn.00430e80();\n                    return *(*0x20 + -0x28);\n                }\n                arg1 = 0;\n                *(*0x20 + -0x50) = 0x42e0a5;\n                fcn.0045e240(0);\n            }\n            unaff_RBX = 0x24;\n            *(*0x20 + -0x50) = 0x42e0b6;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x42e0cb;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1216
    },
    "0042e0e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042e0e0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong uVar4;\n    ulong uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xd8 && *0x20 + -0xd8 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x158;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0xf4) = 0x32336c656e72656b;\n            *(*0x20 + -0xef) = 0x6c6c642e32336c;\n            *(*0x20 + -0x158) = *0x7951c8;\n            *(*0x20 + -0x150) = *0x20 + -0xf4;\n            *(*0x20 + -0x160) = 0x42e145;\n            fcn.00430d80();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            if (*(*0x20 + -0x148) != 0) {\n                *(*0x20 + -0x128) = *(*0x20 + -0x148);\n                *(*0x20 + -0xab) = 0x69446c6c44646441;\n                uVar4 = 0x79726f74636572;\n                *(*0x20 + -0xa3) = 0x79726f74636572;\n                uVar3 = 0x10;\n                *(*0x20 + -0x160) = 0x42e1a7;\n                iVar1 = fcn.0042de00(0x10);\n                if (*0x801c20 != 0) {\n                    *(*0x20 + -0x160) = 0x42e1c5;\n                    fcn.0045dda0(uVar3, uVar4, param_3, param_4);\n                    iVar1 = *0x7acfd0;\n                }\n                *0x7acfd0 = iVar1;\n                *(*0x20 + -0x23) = 0x6f74636556646441;\n                *(*0x20 + -0x1b) = 0x69746e6f43646572;\n                *(*0x20 + -0x18) = 0x65756e69746e6f43;\n                uVar5 = 0x72656c646e6148;\n                *(*0x20 + -0x10) = 0x72656c646e6148;\n                uVar4 = 0x1b;\n                *(*0x20 + -0x160) = 0x42e227;\n                uVar3 = fcn.0042de00(0x1b);\n                if (*0x801c20 != 0) {\n                    *(*0x20 + -0x160) = 0x42e245;\n                    fcn.0045dda0(uVar4, uVar5, param_3, param_4);\n                    uVar3 = *0x7acfd8;\n                }\n                *0x7acfd8 = uVar3;\n                uVar4 = 0x7262694c64616f4c;\n                *(*0x20 + -0xca) = 0x7262694c64616f4c;\n                *(*0x20 + -0xc3) = 0x41784579726172;\n                uVar3 = 0xf;\n                *(*0x20 + -0x160) = 0x42e285;\n                iVar1 = fcn.0042de00(0xf);\n                if (*0x801c20 != 0) {\n                    *(*0x20 + -0x160) = 0x42e2a5;\n                    fcn.0045dda0(uVar3, uVar4, param_3, param_4);\n                    iVar1 = *0x7acfe8;\n                }\n                *0x7acfe8 = iVar1;\n                *(*0x20 + -0xd9) = 0x7262694c64616f4c;\n                uVar4 = 0x57784579726172;\n                *(*0x20 + -0xd2) = 0x57784579726172;\n                uVar3 = 0xf;\n                *(*0x20 + -0x160) = 0x42e2dd;\n                iVar2 = fcn.0042de00(0xf);\n                iVar1 = iVar2;\n                if (*0x801c20 != 0) {\n                    *(*0x20 + -0x160) = 0x42e2fb;\n                    iVar2 = fcn.0045dda0(uVar3, uVar4, param_3, param_4);\n                    iVar1 = *0x7acff0;\n                }\n                *0x7acff0 = iVar1;\n                if ((iVar2 == 0) || (*0x7acfe8 == 0)) {\n                    *0x8019b2 = false;\n                }\n                else {\n                    *0x8019b2 = *0x7acfd0 != 0;\n                }\n                *(*0x20 + -0x101) = 0x3233697061766461;\n                *(*0x20 + -0xfc) = 0x6c6c642e323369;\n                *(*0x20 + -0x160) = 0x42e354;\n                iVar1 = fcn.0042dec0(0xd);\n                if (iVar1 != 0) {\n                    *(*0x20 + -0x79) = 0x75466d6574737953;\n                    *(*0x20 + -0x77) = 0x636e75466d657473;\n                    uVar5 = 0x3633306e6f6974;\n                    *(*0x20 + -0x6f) = 0x3633306e6f6974;\n                    uVar4 = 0x12;\n                    *(*0x20 + -0x160) = 0x42e3a8;\n                    uVar3 = fcn.0042de00(0x12);\n                    if (*0x801c20 != 0) {\n                        *(*0x20 + -0x160) = 0x42e3c6;\n                        fcn.0045dda0(uVar4, uVar5, param_3, param_4);\n                        uVar3 = *0x7ad010;\n                    }\n                    *0x7ad010 = uVar3;\n                    *(*0x20 + -0x116) = 0x6c642e6c6c64746e;\n                    *(*0x20 + -0x10e) = 0x6c;\n                    *(*0x20 + -0x160) = 0x42e3ee;\n                    iVar1 = fcn.0042dec0(10);\n                    if (iVar1 != 0) {\n                        *(*0x20 + -0x138) = iVar1;\n                        *(*0x20 + -0x67) = 0x6f4674696157744e;\n                        *(*0x20 + -0x61) = 0x6c676e6953726f46;\n                        uVar5 = 0x7463656a624f65;\n                        *(*0x20 + -0x59) = 0x7463656a624f65;\n                        uVar4 = 0x16;\n                        *(*0x20 + -0x160) = 0x42e447;\n                        uVar3 = fcn.0042de00(0x16);\n                        if (*0x801c20 != 0) {\n                            *(*0x20 + -0x160) = 0x42e465;\n                            fcn.0045dda0(uVar4, uVar5, param_3, param_4);\n                            uVar3 = *0x7acff8;\n                        }\n                        *0x7acff8 = uVar3;\n                        *(*0x20 + -0x8a) = 0x75437465476c7452;\n                        *(*0x20 + -0x89) = 0x7275437465476c74;\n                        uVar5 = 0x626550746e6572;\n                        *(*0x20 + -0x81) = 0x626550746e6572;\n                        uVar4 = 0x11;\n                        *(*0x20 + -0x160) = 0x42e4b5;\n                        uVar3 = fcn.0042de00(0x11);\n                        if (*0x801c20 != 0) {\n                            *(*0x20 + -0x160) = 0x42e4d3;\n                            fcn.0045dda0(uVar4, uVar5, param_3, param_4);\n                            uVar3 = *0x7ad018;\n                        }\n                        *0x7ad018 = uVar3;\n                        *(*0x20 + -0x3a) = 0x744e7465476c7452;\n                        *(*0x20 + -0x33) = 0x6e6f697372655674;\n                        uVar5 = 0x737265626d754e;\n                        *(*0x20 + -0x2b) = 0x737265626d754e;\n                        uVar4 = 0x17;\n                        *(*0x20 + -0x160) = 0x42e525;\n                        uVar3 = fcn.0042de00(0x17);\n                        if (*0x801c20 != 0) {\n                            *(*0x20 + -0x160) = 0x42e545;\n                            fcn.0045dda0(uVar4, uVar5, param_3, param_4);\n                            uVar3 = *0x7ad020;\n                        }\n                        *0x7ad020 = uVar3;\n                        *(*0x20 + -0x120) = 0x6c642e6d6d6e6977;\n                        *(*0x20 + -0x118) = 0x6c;\n                        *(*0x20 + -0x160) = 0x42e56d;\n                        iVar1 = fcn.0042dec0(10);\n                        if (iVar1 != 0) {\n                            *(*0x20 + -0x130) = iVar1;\n                            *(*0x20 + -0xbb) = 0x69676542656d6974;\n                            uVar4 = 0x646f697265506e;\n                            *(*0x20 + -0xb3) = 0x646f697265506e;\n                            uVar3 = 0x10;\n                            *(*0x20 + -0x160) = 0x42e5b4;\n                            iVar1 = fcn.0042de00(0x10);\n                            if (*0x801c20 != 0) {\n                                *(*0x20 + -0x160) = 0x42e5d2;\n                                fcn.0045dda0(uVar3, uVar4, param_3, param_4);\n                                iVar1 = *0x7ad030;\n                            }\n                            *0x7ad030 = iVar1;\n                            *(*0x20 + -0xe7) = 0x50646e45656d6974;\n                            uVar4 = 0x646f6972655064;\n                            *(*0x20 + -0xe1) = 0x646f6972655064;\n                            uVar3 = 0xe;\n                            *(*0x20 + -0x160) = 0x42e607;\n                            iVar2 = fcn.0042de00(0xe);\n                            iVar1 = iVar2;\n                            if (*0x801c20 != 0) {\n                                *(*0x20 + -0x160) = 0x42e625;\n                                iVar2 = fcn.0045dda0(uVar3, uVar4, param_3, param_4);\n                                iVar1 = *0x7ad038;\n                            }\n                            *0x7ad038 = iVar1;\n                            if ((*0x7ad030 != 0) && (iVar2 != 0)) {\n                                *(*0x20 + -0x10c) = 0x642e32335f327377;\n                                *(*0x20 + -0x109) = 0x6c6c642e32335f;\n                                *(*0x20 + -0x160) = 0x42e66c;\n                                iVar1 = fcn.0042dec0(0xb);\n                                if (iVar1 != 0) {\n                                    *(*0x20 + -0x51) = 0x764f746547415357;\n                                    *(*0x20 + -0x4a) = 0x657070616c726576;\n                                    uVar4 = 0x746c7573655264;\n                                    *(*0x20 + -0x42) = 0x746c7573655264;\n                                    uVar3 = 0x17;\n                                    *(*0x20 + -0x160) = 0x42e6c5;\n                                    iVar2 = fcn.0042de00(0x17);\n                                    iVar1 = iVar2;\n                                    if (*0x801c20 != 0) {\n                                        *(*0x20 + -0x160) = 0x42e6e5;\n                                        iVar2 = fcn.0045dda0(uVar3, uVar4, param_3, param_4);\n                                        iVar1 = *0x7ad028;\n                                    }\n                                    *0x7ad028 = iVar1;\n                                    if (iVar2 != 0) {\n                                        *(*0x20 + -0x9b) = 0x7465675f656e6977;\n                                        *(*0x20 + -0x9a) = 0x5f7465675f656e69;\n                                        *(*0x20 + -0x92) = 0x6e6f6973726576;\n                                        *(*0x20 + -0x160) = 0x42e73a;\n                                        iVar1 = fcn.0042de00(0x11);\n                                        if (iVar1 != 0) {\n                                            *(*0x20 + -0x160) = 0x42e749;\n                                            fcn.0042f280();\n                                        }\n                                        return;\n                                    }\n                                    *(*0x20 + -0x160) = 0x42e76a;\n                                    fcn.00433c80();\n                                }\n                                *(*0x20 + -0x160) = 0x42e77b;\n                                fcn.00433c80();\n                            }\n                            *(*0x20 + -0x160) = 0x42e78c;\n                            fcn.00433c80();\n                        }\n                        *(*0x20 + -0x160) = 0x42e79d;\n                        fcn.00433c80();\n                    }\n                    *(*0x20 + -0x160) = 0x42e7ae;\n                    fcn.00433c80();\n                }\n                *(*0x20 + -0x160) = 0x42e7bf;\n                fcn.00433c80();\n            }\n            *(*0x20 + -0x160) = 0x42e7d0;\n            fcn.00433c80();\n        }\n        *(puVar6 + -8) = 0x42e7d6;\n        fcn.0045bb60();\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 3575
    },
    "0042ea00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042eae1)\n// WARNING: Removing unreachable block (ram,0x0042eaf6)\n\nulong fcn.0042ea00(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    int64_t iStack80;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00430e80();\n    if (iStack80 != 0) {\n        for (iVar1 = 0; iVar1 < 0x40; iVar1 = iVar1 + 1) {\n        }\n    }\n    fcn.00430d80();\n    return 0;\n}\n",
        "token_count": 184
    },
    "0042eb20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0042eb20(void)\n\n{\n    char in_AL;\n    int64_t unaff_R14;\n    ulong uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (*0x8019a8 == '\\0') {\n        if (in_AL != '\\0') {\n            fcn.00430d80();\n            return uStack16;\n        }\n        fcn.00430d80();\n        return uStack16;\n    }\n    return 0;\n}\n",
        "token_count": 144
    },
    "0042f280": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042f280(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    uint32_t uVar7;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x60) = in_RAX;\n            *(*0x20 + -0x3a) = 0x6574737953746547;\n            *(*0x20 + -0x32) = 0x467341656d69546d;\n            uVar4 = 0x656d6954656c69;\n            *(*0x20 + -0x2a) = 0x656d6954656c69;\n            uVar3 = 0x18;\n            *(*0x20 + -0x98) = 0x42f2ea;\n            iVar1 = fcn.0042de00(0x18);\n            iVar2 = iVar1;\n            if (*0x801c20 != 0) {\n                *(*0x20 + -0x98) = 0x42f308;\n                iVar1 = fcn.0045dda0(uVar3, uVar4, param_3, param_4);\n                iVar2 = *0x7acfe0;\n            }\n            *0x7acfe0 = iVar2;\n            if (iVar1 != 0) {\n                uVar4 = 0x7265507972657551;\n                *(*0x20 + -0x52) = 0x7265507972657551;\n                *(*0x20 + -0x4a) = 0x65636e616d726f66;\n                param_3 = 0x7265746e756f43;\n                *(*0x20 + -0x42) = 0x7265746e756f43;\n                uVar3 = 0x18;\n                *(*0x20 + -0x98) = 0x42f355;\n                iVar2 = fcn.0042de00(0x18);\n                if (*0x801c20 != 0) {\n                    *(*0x20 + -0x98) = 0x42f373;\n                    fcn.0045dda0(uVar3, uVar4, param_3, param_4);\n                    iVar2 = *0x7ad000;\n                }\n                *0x7ad000 = iVar2;\n                *(*0x20 + -0x22) = 0x7265507972657551;\n                *(*0x20 + -0x1a) = 0x65636e616d726f66;\n                *(*0x20 + -0x18) = 0x724665636e616d72;\n                uVar4 = 0x79636e65757165;\n                *(*0x20 + -0x10) = 0x79636e65757165;\n                uVar3 = 0x1a;\n                *(*0x20 + -0x98) = 0x42f3c9;\n                iVar1 = fcn.0042de00(0x1a);\n                iVar2 = iVar1;\n                if (*0x801c20 != 0) {\n                    *(*0x20 + -0x98) = 0x42f3e7;\n                    iVar1 = fcn.0045dda0(uVar3, uVar4, param_3, param_4);\n                    iVar2 = *0x7ad008;\n                }\n                *0x7ad008 = iVar2;\n                if ((*0x7ad000 != 0) && (iVar1 != 0)) {\n                    *(*0x20 + -0x70) = 0;\n                    *(*0x20 + -0x90) = *0x7ad008;\n                    *(*0x20 + -0x88) = *0x20 + -0x70;\n                    *(*0x20 + -0x98) = 0x42f425;\n                    fcn.00430d80();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    iVar2 = *(*0x20 + -0x70);\n                    if (iVar2 != 0) {\n                        if (iVar2 < 0x80000000) {\n                            *(*0x20 + -0x68) = iVar2;\n                            *(*0x20 + -0x90) = *0x7ad000;\n                            *(*0x20 + -0x88) = 0x801b50;\n                            *(*0x20 + -0x98) = 0x42f476;\n                            fcn.00430d80();\n                            uVar7 = 0;\n                            iVar1 = 1000000000;\n                            for (iVar2 = 0x1e; -1 < iVar2; iVar2 = iVar2 + -1) {\n                                iVar6 = *(*0x20 + -0x68) << (iVar2 & 0x3f);\n                                if (iVar6 <= iVar1) {\n                                    iVar1 = iVar1 - iVar6;\n                                    uVar7 = uVar7 | 1 << (iVar2 & 0x1f);\n                                }\n                            }\n                            if (*(*0x20 + -0x68) <= iVar1) {\n                                uVar7 = 0x7fffffff;\n                            }\n                            *0x8019b3 = 1;\n                            *0x801b48 = uVar7;\n                            return;\n                        }\n                        *(*0x20 + -0x98) = 0x42f505;\n                        fcn.00433c80();\n                    }\n                    *(*0x20 + -0x98) = 0x42f516;\n                    fcn.00433c80();\n                }\n                *(*0x20 + -0x98) = 0x42f527;\n                fcn.00433c80();\n            }\n            *(*0x20 + -0x98) = 0x42f538;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x42f545;\n        fcn.0045bb60();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1552
    },
    "0042f600": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042f600(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int16_t *piVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    \ncode_r0x0042f600:\n    puVar8 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar8 = *0x20 + -0x60;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + -0x68) = 0x42f625;\n        iVar1 = fcn.00430d20();\n        uVar6 = 0;\n        iVar7 = 0;\n        for (uVar4 = 0; uVar4 < 0x1000000; uVar4 = uVar4 + 1) {\n            if (*(iVar1 + uVar4 * 2) == 0) {\n                if (uVar6 == uVar4) {\n                    *(*0x20 + -0x28) = iVar1;\n                    *(*0x20 + -0x38) = iVar7;\n                    *(*0x20 + -0x68) = 0x42f66f;\n                    iVar1 = fcn.00447240(iVar7);\n                    uVar6 = *(*0x20 + -0x38);\n                    *0x7ada88 = uVar6;\n                    *0x7ada90 = uVar6;\n                    if (*0x801c20 != 0) {\n                        *(*0x20 + -0x68) = 0x42f6a5;\n                        fcn.0045dda0(iVar7, uVar6, param_3, param_4);\n                        iVar1 = *0x7ada80;\n                    }\n                    *0x7ada80 = iVar1;\n                    iVar7 = *(*0x20 + -0x28);\n                    iVar1 = 0;\n                    iVar9 = 0x1000000;\n                    iVar5 = iVar7;\n                    goto code_r0x0042f6da;\n                }\n                uVar6 = uVar4 + 1;\n                iVar7 = iVar7 + 1;\n            }\n        }\n        goto code_r0x0042f82f;\n    }\n    goto code_r0x0042f840;\ncode_r0x0042f6da:\n    if (uVar6 <= iVar1) {\n        *(*0x20 + -0x60) = *0x795228;\n        *(*0x20 + -0x58) = iVar5;\n        *(*0x20 + -0x68) = 0x42f765;\n        fcn.00430d80();\n        *(*0x20 + -0x18) = 0x49e4a0;\n        *(*0x20 + -0x10) = 0x719520;\n        *(*0x20 + -0x68) = 0x42f7a5;\n        uVar2 = fcn.00459ea0(1);\n        *(*0x20 + -0x60) = *0x7951b0;\n        *(*0x20 + -0x58) = uVar2;\n        *(*0x20 + -0x50) = 1;\n        *(*0x20 + -0x68) = 0x42f7c5;\n        fcn.00430e00();\n        *(*0x20 + -0x68) = 0x42f7de;\n        fcn.0042e860();\n        return;\n    }\n    if (iVar9 == 0) goto code_r0x0042f825;\n    *(*0x20 + -0x30) = iVar1;\n    *(*0x20 + -0x40) = iVar9;\n    *(*0x20 + -0x20) = iVar7;\n    *(*0x20 + -0x68) = 0x42f6fd;\n    uVar2 = fcn.0044c140();\n    iVar7 = *0x7ada80;\n    uVar6 = *(*0x20 + -0x30);\n    uVar4 = *0x7ada88;\n    if (*0x7ada88 <= uVar6) goto code_r0x0042f81a;\n    *(*0x7ada80 + 8 + uVar6 * 0x10) = iVar1;\n    if (*0x801c20 == 0) {\n        *(iVar7 + uVar6 * 0x10) = uVar2;\n        uVar4 = uVar6;\n    }\n    else {\n        *(*0x20 + -0x68) = 0x42f73d;\n        fcn.0045dda0(iVar7, uVar6, param_3, param_4);\n        uVar4 = uVar6;\n    }\n    piVar3 = *(*0x20 + -0x20);\n    iVar9 = *(*0x20 + -0x40);\n    while( true ) {\n        if (iVar9 == 0) {\n            *(*0x20 + -0x68) = 0x42f81a;\n            fcn.0045e240(0);\n            goto code_r0x0042f81a;\n        }\n        if (*piVar3 == 0) break;\n        iVar9 = iVar9 + -1;\n        piVar3 = piVar3 + (-iVar9 >> 0x3f & 2);\n    }\n    iVar1 = uVar4 + 1;\n    iVar9 = iVar9 + -1;\n    iVar7 = piVar3 + (-iVar9 >> 0x3f & 2);\n    uVar6 = *(*0x20 + -0x38);\n    iVar5 = *(*0x20 + -0x28);\n    goto code_r0x0042f6da;\ncode_r0x0042f81a:\n    *(*0x20 + -0x68) = 0x42f825;\n    fcn.0045e240(uVar4);\ncode_r0x0042f825:\n    *(*0x20 + -0x68) = 0x42f82f;\n    fcn.0045e240(0);\ncode_r0x0042f82f:\n    *(*0x20 + -0x68) = 0x42f83c;\n    fcn.0045e240(0x1000000);\ncode_r0x0042f840:\n    *(puVar8 + -8) = 0x42f845;\n    fcn.0045bb60();\n    *0x20 = puVar8;\n    goto code_r0x0042f600;\n}\n",
        "token_count": 1570
    },
    "0042f8e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0042f8e0(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uint64_t arg1_00;\n    int64_t iStack56;\n    \n    if (in_RAX == 1) {\n        fcn.00430d80();\n    }\n    else if (in_RAX == 2) {\n        fcn.00430d80();\n    }\n    arg1_00 = arg1;\n    if (0x40000000 < arg1_00) {\n        fcn.0045e280(arg1_00, 0x40000000);\n        pcVar1 = swi(3);\n        uVar2 = (*pcVar1)();\n        return uVar2;\n    }\n    iVar3 = 0;\n    do {\n        if (arg1_00 <= iVar3) {\ncode_r0x0042fa1b:\n            fcn.00430f80();\n            return 0;\n        }\n        if (0x7f < *(unaff_RBX + iVar3)) {\n            fcn.00430e00();\n            if (iStack56 != 0) {\n                uVar2 = fcn.0042faa0(arg1);\n                return uVar2;\n            }\n            goto code_r0x0042fa1b;\n        }\n        iVar3 = iVar3 + 1;\n    } while( true );\n}\n",
        "token_count": 330
    },
    "0042fec0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0042fec0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iStack96;\n    uint64_t uStack72;\n    uint64_t uStack56;\n    \n    if (in_RAX < 0) {\n        fcn.00430e00();\n        uStack56 = uStack72;\n    }\n    else {\n        fcn.0045fb60();\n        iVar2 = 0;\n        while( true ) {\n            iVar1 = *0x795150;\n            iVar2 = in_RAX - iVar2;\n            for (iVar3 = 0x1e; -1 < iVar3; iVar3 = iVar3 + -1) {\n                iVar4 = 1000000 << (iVar3 & 0x3f);\n                if (iVar4 <= iVar2) {\n                    iVar2 = iVar2 - iVar4;\n                }\n            }\n            fcn.00430f00();\n            if (uStack56 != 1) break;\n            fcn.0045fb60();\n            iVar2 = iVar1 - iStack96;\n            if (in_RAX <= iVar2) {\n                return 0xffffffff;\n            }\n        }\n    }\n    if (uStack56 < 0x81) {\n        if (uStack56 == 0) {\n            return 0;\n        }\n        if (uStack56 == 0x80) {\n            fcn.0045ba20();\n            return 0xffffffff;\n        }\n    }\n    else {\n        if (uStack56 == 0x102) {\n            return 0xffffffff;\n        }\n        if (uStack56 == 0xffffffff) {\n            fcn.0045ba20();\n            return 0xffffffff;\n        }\n    }\n    fcn.0045ba20();\n    return 0xffffffff;\n}\n",
        "token_count": 419
    },
    "00430260": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00430260(void)\n\n{\n    int64_t iStack16;\n    \n    fcn.00430d80();\n    if (iStack16 == 0) {\n        fcn.0045ba20();\n    }\n    return;\n}\n",
        "token_count": 55
    },
    "004303e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004303e0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iStack16;\n    \n    if (*(in_RAX + 0x318) == 0) {\n        fcn.00430f00();\n        *(in_RAX + 0x318) = iStack16;\n        if (iStack16 == 0) {\n            fcn.0045ba20();\n        }\n        fcn.00430f00();\n        *(in_RAX + 800) = iStack16;\n        if (iStack16 == 0) {\n            fcn.0045ba20();\n            fcn.00430d80();\n            *(in_RAX + 0x318) = 0;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 171
    },
    "004306e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004306e0(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t *puVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint in_XMM15_Da;\n    uint uVar6;\n    uint in_XMM15_Db;\n    uint uVar7;\n    uint in_XMM15_Dc;\n    uint uVar8;\n    uint in_XMM15_Dd;\n    uint uVar9;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x30 && *0x20 + -0x30 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0xb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x68) = 0;\n            *(*0x20 + -0xb0) = *0x795238;\n            *(*0x20 + -0xa8) = 0xffffffffffffffff;\n            *(*0x20 + -0xa0) = 0xfffffffffffffffe;\n            *(*0x20 + -0x98) = 0xffffffffffffffff;\n            *(*0x20 + -0x90) = *0x20 + -0x68;\n            *(*0x20 + -0x88) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x78) = 2;\n            *(*0x20 + -0xb8) = 0x430753;\n            fcn.00431080();\n            uVar6 = 0;\n            uVar7 = 0;\n            uVar8 = 0;\n            uVar9 = 0;\n            if (*(*0x20 + -0x70) != 0) {\n                iVar2 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n                *(*0x20 + -0x18) = iVar2;\n                *(*0x20 + -0x10) = iVar2 + 0x308;\n                *(*0x20 + -0xb8) = 0x430799;\n                fcn.0040a460();\n                iVar2 = *(*0x20 + -0x18);\n                *(iVar2 + 0x310) = *(*0x20 + -0x68);\n                if ((*(iVar2 + 0x328) == 0) && (*0x8019a8 != '\\0')) {\n                    *(*0x20 + -0xb0) = *0x795240;\n                    *(*0x20 + -0xa8) = CONCAT412(uVar9, CONCAT48(uVar8, CONCAT44(uVar7, uVar6)));\n                    *(*0x20 + -0x98) = 2;\n                    *(*0x20 + -0x90) = 0x100003;\n                    *(*0x20 + -0xb8) = 0x4307ea;\n                    fcn.00430f00();\n                    uVar6 = 0;\n                    uVar7 = 0;\n                    uVar8 = 0;\n                    uVar9 = 0;\n                    iVar2 = *(*0x20 + -0x88);\n                    *(*(*0x20 + -0x18) + 0x328) = iVar2;\n                    if (iVar2 != 0) goto code_r0x0043081d;\n                }\n                else {\ncode_r0x0043081d:\n                    *(*0x20 + -0xb8) = 0x43082a;\n                    fcn.0040a680();\n                    *(*0x20 + -0x48) = CONCAT412(uVar9, CONCAT48(uVar8, CONCAT44(uVar7, uVar6)));\n                    *(*0x20 + -0x38) = CONCAT412(uVar9, CONCAT48(uVar8, CONCAT44(uVar7, uVar6)));\n                    *(*0x20 + -0x28) = CONCAT412(uVar9, CONCAT48(uVar8, CONCAT44(uVar7, uVar6)));\n                    *(*0x20 + -0xb0) = *0x795160;\n                    *(*0x20 + -0xa8) = *0x20 + -0x48;\n                    *(*0x20 + -0xa0) = *0x20 + -0x48;\n                    *(*0x20 + -0x98) = 0x30;\n                    *(*0x20 + -0xb8) = 0x430867;\n                    fcn.00430e80();\n                    puVar3 = **(in_GS_OFFSET + 0x28);\n                    if (*(*0x20 + -0x90) != 0) {\n                        iVar2 = *(*0x20 + -0x40);\n                        uVar1 = iVar2 + 0x4000;\n                        *(*0x20 + -0x60) = uVar1;\n                        uVar4 = puVar3[1];\n                        *(*0x20 + -0x50) = uVar4;\n                        if ((uVar1 <= uVar4) && ((uVar4 - iVar2) - 0x4000 < 0x4000001)) {\n                            *puVar3 = uVar1;\n                            puVar3[2] = iVar2 + 0x53a0U;\n                            puVar3[3] = iVar2 + 0x53a0U;\n                            *(*0x20 + -0xb8) = 0x4308cf;\n                            fcn.0045dbe0();\n                            return;\n                        }\n                        *(*0x20 + -0xb8) = 0x4308f8;\n                        fcn.00435540();\n                        *(*0x20 + -0xb8) = 0x430909;\n                        fcn.00435e40();\n                        *(*0x20 + -0xb8) = 0x430913;\n                        fcn.00435ca0();\n                        *(*0x20 + -0xb8) = 0x430925;\n                        fcn.00435e40();\n                        *(*0x20 + -0xb8) = 0x43092f;\n                        fcn.00435ca0();\n                        *(*0x20 + -0xb8) = 0x430945;\n                        fcn.00435e40();\n                        *(*0x20 + -0xb8) = 0x43094a;\n                        fcn.004355c0();\n                        *(*0x20 + -0xb8) = 0x43095b;\n                        fcn.00433c80();\n                    }\n                    *(*0x20 + -0xb8) = 0x430965;\n                    fcn.0045f700();\n                    *(*0x20 + -0x58) = *(*0x20 + -0xb0);\n                    *(*0x20 + -0xb8) = 0x430986;\n                    fcn.00435540();\n                    *(*0x20 + -0xb8) = 0x430997;\n                    fcn.00435e40();\n                    *(*0x20 + -0xb8) = 0x4309a5;\n                    fcn.00435b40();\n                    *(*0x20 + -0xb8) = 0x4309aa;\n                    fcn.004357a0();\n                    *(*0x20 + -0xb8) = 0x4309af;\n                    fcn.004355c0();\n                    *(*0x20 + -0xb8) = 0x4309c5;\n                    fcn.00433c80();\n                }\n                *(*0x20 + -0xb8) = 0x4309ca;\n                fcn.0045f700();\n                *(*0x20 + -0x58) = *(*0x20 + -0xb0);\n                *(*0x20 + -0xb8) = 0x4309eb;\n                fcn.00435540();\n                *(*0x20 + -0xb8) = 0x4309fc;\n                fcn.00435e40();\n                *(*0x20 + -0xb8) = 0x430a06;\n                fcn.00435b40();\n                *(*0x20 + -0xb8) = 0x430a0b;\n                fcn.004357a0();\n                *(*0x20 + -0xb8) = 0x430a10;\n                fcn.004355c0();\n                *(*0x20 + -0xb8) = 0x430a25;\n                fcn.00433c80();\n            }\n            *(*0x20 + -0xb8) = 0x430a2a;\n            fcn.0045f700();\n            in_XMM15_Da = 0;\n            in_XMM15_Db = 0;\n            in_XMM15_Dc = 0;\n            in_XMM15_Dd = 0;\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            *(*0x20 + -0x58) = *(*0x20 + -0xb0);\n            *(*0x20 + -0xb8) = 0x430a4b;\n            fcn.00435540();\n            *(*0x20 + -0xb8) = 0x430a5c;\n            fcn.00435e40();\n            *(*0x20 + -0xb8) = 0x430a66;\n            fcn.00435b40();\n            *(*0x20 + -0xb8) = 0x430a6b;\n            fcn.004357a0();\n            *(*0x20 + -0xb8) = 0x430a70;\n            fcn.004355c0();\n            *(*0x20 + -0xb8) = 0x430a85;\n            fcn.00433c80();\n        }\n        *(puVar5 + -8) = 0x430a8b;\n        fcn.0045bb60();\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 2291
    },
    "00430c40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00430c40(void)\n\n{\n    int64_t iVar1;\n    bool bVar2;\n    ulong in_RAX;\n    int64_t unaff_R14;\n    ulong in_stack_00000000;\n    uchar auStackX8 [32];\n    \n    iVar1 = *(unaff_R14 + 0x30);\n    *(iVar1 + 0x278) = in_RAX;\n    if ((*(iVar1 + 0xe0) == 0) || (*(iVar1 + 0x2b0) != 0)) {\n        bVar2 = false;\n    }\n    else {\n        *(iVar1 + 0x2b8) = unaff_R14;\n        *(iVar1 + 0x2a8) = in_stack_00000000;\n        *(iVar1 + 0x2b0) = auStackX8;\n        bVar2 = true;\n    }\n    fcn.0045d980();\n    if (bVar2) {\n        *(iVar1 + 0x2b0) = 0;\n    }\n    return *(iVar1 + 0x290);\n}\n",
        "token_count": 246
    },
    "004313a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.004313a0(void)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    ulong uVar4;\n    ulong arg1;\n    char cVar5;\n    int64_t in_RAX;\n    uint64_t uVar6;\n    int64_t iVar7;\n    ulong *puVar8;\n    uint64_t **ppuVar9;\n    uint64_t *puVar10;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar12;\n    uint in_XMM15_Da;\n    uint uVar13;\n    uint in_XMM15_Db;\n    uint uVar14;\n    uint in_XMM15_Dc;\n    uint uVar15;\n    uint in_XMM15_Dd;\n    uint uVar16;\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x4d8 && *0x20 + -0x4d8 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0x558;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(unaff_R14 + 0x30) != in_RAX) {\n                LOCK();\n                if (*(in_RAX + 0x330) != 0) {\n                    LOCK();\n                    puVar2 = in_RAX + 0x300;\n                    uVar3 = *puVar2;\n                    *puVar2 = *puVar2 + 1;\n                    return uVar3;\n                }\n                *(in_RAX + 0x330) = 1;\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x20) = in_RAX + 0x308;\n                *(*0x20 + -0x560) = 0x43140d;\n                fcn.0040a460();\n                if (*(*(*0x20 + -0x10) + 0x310) == 0) {\n                    *(*0x20 + -0x560) = 0x43142e;\n                    uVar6 = fcn.0040a680();\n                    iVar7 = *(*0x20 + -0x10);\n                    *(iVar7 + 0x330) = 0;\n                    LOCK();\n                    piVar1 = iVar7 + 0x300;\n                    *piVar1 = *piVar1 + 1;\n                    return uVar6;\n                }\n                *(*0x20 + -0x510) = 0;\n                uVar4 = *(*(*0x20 + -0x10) + 0x310);\n                *(*0x20 + -0x558) = *0x795238;\n                *(*0x20 + -0x550) = 0xffffffffffffffff;\n                *(*0x20 + -0x548) = uVar4;\n                *(*0x20 + -0x540) = 0xffffffffffffffff;\n                *(*0x20 + -0x538) = *0x20 + -0x510;\n                *(*0x20 + -0x530) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                *(*0x20 + -0x520) = 2;\n                *(*0x20 + -0x560) = 0x4314ab;\n                fcn.00431080();\n                uVar13 = 0;\n                uVar14 = 0;\n                uVar15 = 0;\n                uVar16 = 0;\n                if (*(*0x20 + -0x518) != 0) break;\n                *(*0x20 + -0x560) = 0x4317ed;\n                fcn.0045f700();\n                in_XMM15_Da = 0;\n                in_XMM15_Db = 0;\n                in_XMM15_Dc = 0;\n                in_XMM15_Dd = 0;\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                *(*0x20 + -0x508) = *(*0x20 + -0x558);\n                *(*0x20 + -0x560) = 0x43180e;\n                fcn.00435540();\n                *(*0x20 + -0x560) = 0x43181f;\n                fcn.00435e40();\n                *(*0x20 + -0x560) = 0x431829;\n                fcn.00435b40();\n                *(*0x20 + -0x560) = 0x43182e;\n                fcn.004357a0();\n                *(*0x20 + -0x560) = 0x431833;\n                fcn.004355c0();\n                *(*0x20 + -0x560) = 0x431845;\n                fcn.00433c80();\n            }\n            *(*0x20 + -0x560) = 0x431856;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + -8) = 0x431865;\n        fcn.0045bb60();\n        in_RAX = *(puVar11 + 8);\n        *0x20 = puVar11;\n    } while( true );\n    *(*0x20 + -0x560) = 0x4314da;\n    fcn.0040a680();\n    *(*0x20 + -0x4ff) = CONCAT412(uVar16, CONCAT48(uVar15, CONCAT44(uVar14, uVar13)));\n    puVar8 = *0x20 + -0x4f0;\n    for (iVar7 = 0x9a; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar8 = 0;\n        puVar8 = puVar8 + 1;\n    }\n    *(*0x20 + -0x18) = *0x20 + -0x4f0 & 0xfffffffffffffff0;\n    *((*0x20 + -0x4f0 & 0xfffffffffffffff0) + 0x30) = 0x100001;\n    *(*0x20 + -0x560) = 0x431515;\n    fcn.0040a460();\n    *(*0x20 + -0x558) = *0x795180;\n    *(*0x20 + -0x550) = *(*0x20 + -0x510);\n    *(*0x20 + -0x560) = 0x43152f;\n    fcn.00430d80();\n    if (*(*0x20 + -0x548) == -1) {\n        *(*0x20 + -0x560) = 0x431770;\n        fcn.0040a680();\n        *(*0x20 + -0x558) = *0x795268;\n        *(*0x20 + -0x550) = *(*0x20 + -0x510);\n        *(*0x20 + -0x560) = 0x43178a;\n        uVar6 = fcn.00430d80();\n        iVar7 = *(*0x20 + -0x10);\n        *(iVar7 + 0x330) = 0;\n        LOCK();\n        piVar1 = iVar7 + 0x300;\n        *piVar1 = *piVar1 + 1;\n        return uVar6;\n    }\n    *(*0x20 + -0x558) = *0x7951e0;\n    *(*0x20 + -0x550) = *(*0x20 + -0x510);\n    *(*0x20 + -0x548) = *(*0x20 + -0x18);\n    *(*0x20 + -0x560) = 0x431578;\n    fcn.00430e00();\n    *(*0x20 + -0x560) = 0x43159a;\n    fcn.0040a680();\n    iVar7 = *(*0x20 + -0x18);\n    uVar6 = *(iVar7 + 0x98);\n    ppuVar9 = *(*0x20 + -0x10);\n    puVar10 = *ppuVar9;\n    if (((((puVar10 == NULL) || (uVar6 <= *puVar10)) || (puVar10[1] < uVar6 || puVar10[1] == uVar6)) &&\n        (((puVar10 = ppuVar9[10],  puVar10 == NULL || (uVar6 <= *puVar10)) ||\n         (puVar10[1] < uVar6 || puVar10[1] == uVar6)))) &&\n       (((puVar10 = ppuVar9[0x12],  puVar10 == NULL || (uVar6 <= *puVar10)) ||\n        (puVar10[1] < uVar6 || puVar10[1] == uVar6)))) {\n        puVar10 = NULL;\n    }\n    if (puVar10 == NULL) {\n        bVar12 = false;\n        goto code_r0x00431648;\n    }\n    if (*(puVar10 + 0xb1) == '\\0') {\n        if (*(puVar10[6] + 0xa0) == 0) {\n            bVar12 = false;\n            goto code_r0x00431648;\n        }\n        if (*(*(puVar10[6] + 0xa0) + 0x22c8) == '\\0') {\n            bVar12 = false;\n            goto code_r0x00431648;\n        }\n    }\n    bVar12 = (*(puVar10 + 0x12) & 0xffffefff) == 2;\ncode_r0x00431648:\n    if (bVar12) {\n        uVar4 = *(iVar7 + 0xf8);\n        arg1 = *(iVar7 + 0x98);\n        *(*0x20 + -0x560) = 0x43166c;\n        cVar5 = fcn.00435000(arg1);\n        if (cVar5 != '\\0') {\n            iVar7 = *(*0x20 + -0x18);\n            puVar8 = *(iVar7 + 0x98) + -8;\n            *puVar8 = uVar4;\n            *(iVar7 + 0x98) = puVar8;\n            *(iVar7 + 0xf8) = fcn.0045f280;\n            *(*0x20 + -0x558) = *0x7951d8;\n            *(*0x20 + -0x550) = *(*0x20 + -0x510);\n            *(*0x20 + -0x548) = iVar7;\n            *(*0x20 + -0x560) = 0x4316c5;\n            fcn.00430e00();\n        }\n        ppuVar9 = *(*0x20 + -0x10);\n    }\n    *(ppuVar9 + 0x66) = 0;\n    LOCK();\n    *(ppuVar9 + 0x60) = *(ppuVar9 + 0x60) + 1;\n    *(*0x20 + -0x558) = *0x7951b8;\n    *(*0x20 + -0x550) = *(*0x20 + -0x510);\n    *(*0x20 + -0x560) = 0x431710;\n    fcn.00430d80();\n    *(*0x20 + -0x558) = *0x795268;\n    *(*0x20 + -0x550) = *(*0x20 + -0x510);\n    *(*0x20 + -0x560) = 0x43173e;\n    uVar6 = fcn.00430d80();\n    return uVar6;\n}\n",
        "token_count": 2686
    },
    "00431880": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00431880(int64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t *piVar1;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x20) = 0x4318a7;\n            fcn.0044cfe0();\n            *(*0x20 + -0x20) = 0x4318ac;\n            piVar1 = fcn.0044d760();\n            if ((unaff_RBX < 8) || (arg1 = 0x2e656d69746e7572,  *piVar1 != 0x2e656d69746e7572)) {\n                if ((unaff_R14 == 0) || ((arg1 = *(unaff_R14 + 0x30),  arg1 == 0 || (*(arg1 + 0xc0) == 0)))) {\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x4318f8;\n                fcn.00433c80();\n            }\n            unaff_RBX = *(*0x20 + 0x18);\n            *(*0x20 + -0x20) = 0x431907;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x43191c;\n        fcn.0045bb60();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 565
    },
    "00431940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00431940(void)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (((unaff_R14 == 0) || (*(unaff_R14 + 0x30) == 0)) || (*(*(unaff_R14 + 0x30) + 0xc0) == 0)) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x431986;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x431996;\n        fcn.0045bb60();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 347
    },
    "00432160": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00432160(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t arg1;\n    ulong noname_1;\n    ulong *puVar2;\n    ulong *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(unaff_R14 + 0x30);\n            if (*(iVar1 + 0x90) == unaff_R14) {\n                *(*0x20 + -0x10) = unaff_R14;\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x28) = 0x43219c;\n                iVar1 = fcn.00432300(iVar1, unaff_R14);\n                if (*(iVar1 + 0x20) == 0) {\n                    arg1 = *(*0x20 + -0x10);\n                    noname_1 = *(arg1 + 0x28);\n                    if (*0x801c20 == 0) {\n                        *(iVar1 + 0x28) = noname_1;\n                        *(arg1 + 0x28) = iVar1;\n                        *(iVar1 + 0x18) = *(*0x20 + 8);\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x4321d1;\n                        fcn.0045dec0(arg1, noname_1, param_3, param_4);\n                        *(*0x20 + -0x28) = 0x4321da;\n                        fcn.0045dda0(arg1, noname_1, param_3, param_4);\n                        *(*0x20 + -0x28) = 0x4321e8;\n                        iVar1 = fcn.0045dea0(*(*0x20 + 8), noname_1, param_3, param_4);\n                    }\n                    *(iVar1 + 0x10) = **0x20;\n                    *(iVar1 + 8) = *0x20 + 8;\n                    *(*0x20 + -0x28) = 0x4321ff;\n                    fcn.0045dd40();\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x43222e;\n                fcn.00433c80();\n            }\n            *(*0x20 + -0x28) = 0x43223f;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x43224a;\n        fcn.0045bb60();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 731
    },
    "00432300": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00432300(ulong noname_0, uint64_t arg2)\n\n{\n    ulong *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    int64_t arg3;\n    int64_t unaff_R14;\n    int64_t iStack40;\n    uint64_t uStack24;\n    uint64_t uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    piVar2 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar2 = *piVar2 + 1;\n    iVar8 = *(unaff_R14 + 0x30);\n    uVar7 = *(iVar8 + 0xa0);\n    uVar9 = uVar7;\n    if (*(uVar7 + 0x70) != 0) goto code_r0x0043236f;\n    if (*0x7ae5d0 == 0) goto code_r0x0043236f;\n    fcn.0040a460();\n    arg2 = uVar7 + 0x68;\n    iStack40 = iVar8;\n    uStack24 = arg2;\n    uStack16 = uVar7;\n    while( true ) {\n        while ((iVar8 = *0x7ae5d0,  *(uVar7 + 0x70) < *(uVar7 + 0x78) >> 1 && (*0x7ae5d0 != 0))) {\n            if (*0x801c20 == 0) {\n                puVar1 = *0x7ae5d0 + 0x28;\n                *0x7ae5d0 = *(*0x7ae5d0 + 0x28);\n                *puVar1 = 0;\n            }\n            else {\n                fcn.0045df40(uVar7, arg2, *0x7ae5d0);\n                arg2 = fcn.0045dec0(uVar7, 0, iVar8, iVar8 + 0x28);\n            }\n            iVar6 = *(uVar7 + 0x70);\n            uVar9 = iVar6 + 1;\n            iVar4 = *(uVar7 + 0x68);\n            iVar5 = iVar4;\n            if (*(uVar7 + 0x78) < uVar9) {\n                arg3 = iVar8;\n                iVar5 = fcn.00447360(iVar6);\n                *(uStack16 + 0x78) = iVar6;\n                uVar7 = uStack16;\n                arg2 = uStack24;\n                if (*0x801c20 == 0) {\n                    *(uStack16 + 0x68) = iVar5;\n                    iVar6 = iVar4;\n                }\n                else {\n                    iVar5 = fcn.0045dda0(iVar6, uStack16, arg3, uVar9);\n                    iVar6 = iVar4;\n                }\n            }\n            *(uVar7 + 0x70) = iVar6 + 1;\n            if (*0x801c20 == 0) {\n                *(iVar5 + iVar6 * 8) = iVar8;\n            }\n            else {\n                fcn.0045df20(uVar7, arg2, iVar8, iVar6 + 1);\n            }\n        }\n        fcn.0040a680();\n        iVar8 = iStack40;\n        uVar9 = uStack16;\ncode_r0x0043236f:\n        iVar6 = *(uVar9 + 0x70);\n        if (iVar6 == 0) {\n            iVar4 = 0;\n            goto code_r0x004323bb;\n        }\n        iVar4 = *(*(uVar9 + 0x68) + -8 + iVar6 * 8);\n        if (*0x801c20 == 0) {\n            *(*(uVar9 + 0x68) + -8 + iVar6 * 8) = 0;\n        }\n        else {\n            fcn.0045df20(iVar6, arg2, 0, iVar4);\n        }\n        uVar7 = iVar6 - 1;\n        arg2 = *(uVar9 + 0x78);\n        if (uVar7 <= arg2) break;\n        fcn.0045e2c0(uVar7, arg2);\n    }\n    *(uVar9 + 0x70) = uVar7;\ncode_r0x004323bb:\n    iVar3 = *(iVar8 + 0xd8);\n    *(iVar8 + 0xd8) = iVar3 + -1;\n    if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    if (iVar4 == 0) {\n        iVar4 = fcn.0040c560();\n    }\n    *(iVar4 + 1) = 1;\n    return iVar4;\n}\n",
        "token_count": 1177
    },
    "00432540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00432540(ulong arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uchar (*in_RAX) [16];\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t arg1_00;\n    uint64_t uVar6;\n    uint64_t arg2_00;\n    int64_t arg2_01;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t arg3;\n    int64_t iVar9;\n    ulong in_R9;\n    uint64_t arg1_01;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    if (*0x801c20 == 0) {\n        *(in_RAX[2] + 8) = 0;\n    }\n    else {\n        in_RAX = fcn.0045df20(arg1, arg2, 0, in_R9);\n    }\n    if (*in_RAX[2] != 0) {\n        fcn.00432820();\n    }\n    if (*(in_RAX[1] + 8) != 0) {\n        fcn.00432860();\n    }\n    if ((*in_RAX)[1] == '\\0') {\n        return;\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    arg3 = *(unaff_R14 + 0x30);\n    arg2_00 = *(arg3 + 0xa0);\n    if (*(arg2_00 + 0x70) == *(arg2_00 + 0x78)) {\n        iVar4 = 0;\n        iVar5 = 0;\n        iVar9 = arg3;\n        uVar6 = arg2_00;\n        while( true ) {\n            uVar8 = *(uVar6 + 0x70);\n            if (uVar8 <= *(uVar6 + 0x78) >> 1) break;\n            arg1_01 = uVar8 - 1;\n            if (uVar8 <= arg1_01) {\ncode_r0x004327fa:\n                fcn.0045e240(uVar8);\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            iVar7 = *(*(uVar6 + 0x68) + -8 + uVar8 * 8);\n            if (*0x801c20 == 0) {\n                *(*(uVar6 + 0x68) + -8 + uVar8 * 8) = 0;\n                arg1_00 = iVar4;\n                arg2_01 = iVar5;\n                iVar4 = iVar7;\n            }\n            else {\n                fcn.0045dee0(iVar4, iVar5, iVar9, uVar6);\n                arg1_00 = iVar4;\n                arg2_01 = iVar5;\n                iVar4 = iVar7;\n            }\n            uVar8 = *(uVar6 + 0x78);\n            if (uVar8 < arg1_01) {\n                fcn.0045e2c0(arg1_01, uVar8);\n                goto code_r0x004327fa;\n            }\n            *(uVar6 + 0x70) = arg1_01;\n            iVar5 = iVar4;\n            if (arg2_01 != 0) {\n                if (*0x801c20 == 0) {\n                    *(arg1_00 + 0x28) = iVar4;\n                    iVar5 = arg2_01;\n                }\n                else {\n                    fcn.0045dee0(arg1_00, arg2_01, iVar9, uVar6);\n                    iVar5 = arg2_01;\n                }\n            }\n        }\n        iVar7 = iVar5;\n        fcn.0040a460();\n        if (*0x801c20 == 0) {\n            *(iVar4 + 0x28) = *0x7ae5d0;\n            *0x7ae5d0 = iVar5;\n        }\n        else {\n            fcn.0045dea0(*0x7ae5d0, iVar7, iVar9, uVar6);\n            fcn.0045dea0(iVar5, iVar7, iVar9, uVar6);\n        }\n        fcn.0040a680();\n    }\n    if (*0x801c20 == 0) {\n        *in_RAX = in_XMM15;\n        *(*in_RAX + 8) = in_XMM15;\n        *(in_RAX[1] + 8) = in_XMM15;\n        *(in_RAX[2] + 8) = in_XMM15;\n        *(in_RAX[3] + 8) = in_XMM15;\n    }\n    else {\n        fcn.004104e0();\n    }\n    iVar5 = *(arg2_00 + 0x70);\n    uVar6 = iVar5 + 1;\n    iVar9 = *(arg2_00 + 0x68);\n    iVar4 = iVar9;\n    if (*(arg2_00 + 0x78) < uVar6) {\n        iVar7 = arg3;\n        uVar8 = arg2_00;\n        iVar4 = fcn.00447360(iVar5);\n        *(arg2_00 + 0x78) = iVar5;\n        iVar5 = iVar9;\n        if (*0x801c20 == 0) {\n            *(arg2_00 + 0x68) = iVar4;\n        }\n        else {\n            iVar4 = fcn.0045dda0(arg2_00 + 0x68, arg2_00, iVar7, uVar8);\n            uVar6 = arg2_00;\n        }\n    }\n    *(arg2_00 + 0x70) = iVar5 + 1;\n    if (*0x801c20 == 0) {\n        *(iVar4 + iVar5 * 8) = in_RAX;\n    }\n    else {\n        fcn.0045dda0(iVar5 + 1, uVar6, arg3, arg2_00);\n    }\n    iVar2 = *(arg3 + 0xd8);\n    *(arg3 + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 1455
    },
    "004328a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004328a0(ulong param_1, ulong param_2, int64_t param_3, ulong param_4)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int64_t iVar3;\n    int64_t noname_0;\n    ulong uVar4;\n    uchar *noname_1;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t arg3;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x28) = unaff_R14;\n            noname_0 = *(*0x20 + -0x28);\n            while( true ) {\n                iVar3 = *(noname_0 + 0x28);\n                if (iVar3 == 0) {\n                    return;\n                }\n                noname_1 = *0x20 + 8;\n                if (*(iVar3 + 8) != noname_1) {\n                    return;\n                }\n                arg3 = noname_0 + 0x28;\n                if (*(iVar3 + 2) != '\\0') break;\n                uVar4 = *(iVar3 + 0x18);\n                if (*0x801c20 == 0) {\n                    *(iVar3 + 0x18) = 0;\n                }\n                else {\n                    param_4 = 0;\n                    *(*0x20 + -0x40) = 0x43292b;\n                    iVar3 = fcn.0045df40(noname_0, noname_1, arg3);\n                    param_3 = arg3;\n                }\n                *(*0x20 + -0x20) = uVar4;\n                if (*0x801c20 == 0) {\n                    *(noname_0 + 0x28) = *(iVar3 + 0x28);\n                }\n                else {\n                    *(*0x20 + -0x40) = 0x432950;\n                    fcn.0045df00(noname_0, noname_1, param_3, param_4);\n                }\n                *(*0x20 + -0x40) = 0x4328c9;\n                fcn.00432540(noname_0, noname_1);\n                pcVar1 = **(*0x20 + -0x20);\n                *(*0x20 + -0x40) = 0x4328d3;\n                (*pcVar1)();\n                noname_0 = *(*0x20 + -0x28);\n            }\n            *(*0x20 + -0x10) = arg3;\n            *(*0x20 + -0x18) = iVar3;\n            *(*0x20 + -0x40) = 0x43296a;\n            cVar2 = fcn.00433100(noname_0, noname_1, param_3, param_4);\n            if (cVar2 != '\\0') {\n                uVar4 = *(*(*0x20 + -0x18) + 0x28);\n                if (*0x801c20 == 0) {\n                    noname_1 = *(*0x20 + -0x28);\n                    *(noname_1 + 0x28) = uVar4;\n                }\n                else {\n                    *(*0x20 + -0x40) = 0x432997;\n                    fcn.0045dea0(uVar4, noname_1, param_3, param_4);\n                }\n                *(*0x20 + -0x40) = 0x43299c;\n                fcn.00432540(uVar4, noname_1);\n                return;\n            }\n            *(*0x20 + -0x40) = 0x4329cb;\n            fcn.00433c80();\n        }\n        *(puVar5 + -8) = 0x4329d1;\n        fcn.0045bb60();\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 961
    },
    "00432ac0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00432ac0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    for (; in_RAX != 0; in_RAX = *(in_RAX + 0x18)) {\n        uVar2 = *(in_RAX + 0x10);\n        if (*(in_RAX + 8) != 0) {\n            iVar1 = fcn.0040a0a0(uVar2);\n            if (iVar1 == 0) {\n                iVar1 = fcn.0040a0a0(uVar2);\n                if (iVar1 != 0) {\n                    (**(iVar1 + 0x18))();\n                    uVar2 = fcn.00409de0();\n                    *(in_RAX + 8) = 0x49d360;\n                    if (*0x801c20 == 0) {\n                        *(in_RAX + 0x10) = uVar2;\n                    }\n                    else {\n                        fcn.0045dda0(0x49d360, in_RAX + 0x10, param_3, param_4);\n                    }\n                }\n            }\n            else {\n                (**(iVar1 + 0x18))();\n                uVar2 = fcn.00409de0();\n                *(in_RAX + 8) = 0x49d360;\n                if (*0x801c20 == 0) {\n                    *(in_RAX + 0x10) = uVar2;\n                }\n                else {\n                    fcn.0045dda0(0x49d360, in_RAX + 0x10, param_3, param_4);\n                }\n            }\n        }\n    }\n    fcn.004329e0();\n    return;\n}\n",
        "token_count": 464
    },
    "00432c40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00432c40(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if ((*(in_RAX + 0x18) != 0) && (fcn.00432c40(),  *(*(in_RAX + 0x18) + 0x32) == '\\0')) {\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.004355c0();\n    }\n    if (*(in_RAX + 0x32) != '\\0') {\n        return;\n    }\n    fcn.00435540();\n    fcn.00435e40();\n    fcn.004355c0();\n    fcn.00407de0(*(in_RAX + 8));\n    if (*(in_RAX + 0x30) != '\\0') {\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.004355c0();\n    }\n    fcn.00435540();\n    fcn.004357a0();\n    fcn.004355c0();\n    return;\n}\n",
        "token_count": 293
    },
    "00433100": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00433100(ulong noname_0, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    uint8_t uVar1;\n    ulong uVar2;\n    int64_t arg1;\n    ulong in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint8_t *arg2;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint64_t uVar8;\n    uint32_t uVar9;\n    int64_t unaff_R14;\n    \ncode_r0x00433100:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x40;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        arg2 = *(unaff_RBX + 0x30);\n        iVar6 = 0;\n        uVar8 = 0;\n        do {\n            uVar1 = *arg2;\n            arg2 = arg2 + 1;\n            if (uVar1 < 0x80) {\n                if (uVar8 < 0) goto code_r0x004333aa;\n                uVar7 = (uVar1 << (uVar8 & 0x1f) & -(uVar8 < 0x20)) + iVar6;\n                uVar3 = uVar7;\n                iVar6 = 0;\n                uVar8 = 0;\n                goto code_r0x00433184;\n            }\n            if (uVar8 < 0) goto code_r0x004333c5;\n            iVar6 = ((uVar1 & 0xffffff7f) << (uVar8 & 0x1f) & -(uVar8 < 0x20)) + iVar6;\n            uVar8 = uVar8 + 7;\n        } while (uVar8 < 0x1d);\n        goto code_r0x004333af;\n    }\n    goto code_r0x004333cb;\n    while( true ) {\n        if (uVar8 < 0) goto code_r0x004333a5;\n        iVar6 = ((uVar1 & 0xffffff7f) << (uVar8 & 0x1f) & -(uVar8 < 0x20)) + iVar6;\n        uVar8 = uVar8 + 7;\n        if (0x1c < uVar8) break;\ncode_r0x00433184:\n        uVar1 = *arg2;\n        arg2 = arg2 + 1;\n        if (uVar1 < 0x80) {\n            if (uVar8 < 0) goto code_r0x0043338b;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x2c) = uVar7;\n            uVar7 = *(*(unaff_RBX + 0x38) - uVar3);\n            uVar8 = (uVar1 << (uVar8 & 0x1f) & -(uVar8 < 0x20)) + iVar6;\n            goto code_r0x004331f5;\n        }\n    }\ncode_r0x00433390:\n    *(*0x20 + -0x48) = 0x4333a5;\n    fcn.004334e0();\ncode_r0x004333a5:\n    *(*0x20 + -0x48) = 0x4333aa;\n    fcn.004320a0();\ncode_r0x004333aa:\n    *(*0x20 + -0x48) = 0x4333af;\n    fcn.004320a0();\ncode_r0x004333af:\n    unaff_RBX = 0x732a78;\n    *(*0x20 + -0x48) = 0x4333c5;\n    fcn.004334e0();\ncode_r0x004333c5:\n    *(*0x20 + -0x48) = 0x4333ca;\n    in_RAX = fcn.004320a0();\ncode_r0x004333cb:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + 0x10) = unaff_RBX;\n    *(puVar5 + -8) = 0x4333da;\n    fcn.0045bb60();\n    in_RAX = *(puVar5 + 8);\n    unaff_RBX = *(puVar5 + 0x10);\n    *0x20 = puVar5;\n    goto code_r0x00433100;\ncode_r0x0043336e:\n    *(*0x20 + -0x48) = 0x433373;\n    fcn.004320a0();\ncode_r0x00433373:\n    *(*0x20 + -0x48) = 0x433386;\n    fcn.004334e0();\ncode_r0x00433386:\n    *(*0x20 + -0x48) = 0x43338b;\n    fcn.004320a0();\ncode_r0x0043338b:\n    *(*0x20 + -0x48) = 0x433390;\n    fcn.004320a0();\n    goto code_r0x00433390;\ncode_r0x004331f5:\n    do {\n        uVar8 = uVar8 - 1;\n        if (uVar8 < 0) {\n            return 1;\n        }\n        iVar6 = 0;\n        uVar4 = 0;\n        while( true ) {\n            uVar1 = *arg2;\n            arg2 = arg2 + 1;\n            if (uVar1 < 0x80) break;\n            if (uVar4 < 0) goto code_r0x00433386;\n            iVar6 = ((uVar1 & 0xffffff7f) << (uVar4 & 0x1f) & -(uVar4 < 0x20)) + iVar6;\n            uVar4 = uVar4 + 7;\n            if (0x1c < uVar4) goto code_r0x00433373;\n        }\n        if (uVar4 < 0) goto code_r0x0043336e;\n        uVar9 = 1 << (uVar8 & 0x1f) & -(uVar8 < 0x20);\n    } while ((uVar9 & uVar7) == 0);\n    *(*0x20 + -0x28) = uVar8;\n    *(*0x20 + -0x18) = arg2;\n    uVar2 = *(*(unaff_RBX + 0x38) - ((uVar1 << (uVar4 & 0x1f) & -(uVar4 < 0x20)) + iVar6));\n    *(*0x20 + -0x10) = unaff_RBX + 0x18;\n    uVar4 = uVar7 & ~uVar9;\n    if (*0x801c20 == 0) {\n        *(unaff_RBX + 0x18) = uVar2;\n    }\n    else {\n        *(*0x20 + -0x48) = 0x43327c;\n        fcn.0045dea0(uVar2, arg2, uVar8, uVar4);\n    }\n    *(*0x20 + -0x2d) = uVar4;\n    *(*(unaff_RBX + 0x38) - uVar3) = uVar4;\n    *(*0x20 + -0x20) = *(unaff_RBX + 0x20);\n    uVar2 = *(unaff_RBX + 0x18);\n    *(*0x20 + -0x48) = 0x4332a5;\n    uVar3 = fcn.00433400(uVar2, arg2, uVar8, uVar4);\n    arg1 = *(*0x20 + -0x20);\n    if ((arg1 == 0) || (*(arg1 + 0x31) == '\\0')) {\n        if (*0x801c20 == 0) {\n            unaff_RBX = *(*0x20 + 0x10);\n            *(unaff_RBX + 0x18) = 0;\n        }\n        else {\n            *(*0x20 + -0x48) = 0x4332dd;\n            uVar3 = fcn.0045dec0(arg1, 0, uVar8, uVar4);\n            unaff_RBX = *(*0x20 + 0x10);\n        }\n        if ((*(unaff_RBX + 0x20) == 0) || (*(*(unaff_RBX + 0x20) + 0x30) == '\\0')) {\n            arg2 = *(*0x20 + -0x18);\n            uVar3 = *(*0x20 + -0x2c);\n            uVar8 = *(*0x20 + -0x28);\n            uVar7 = *(*0x20 + -0x2d);\n            goto code_r0x004331f5;\n        }\n        uVar8 = uVar3 & 0xffffffffffffff00 | *(*0x20 + -0x2d) == '\\0';\n    }\n    else {\n        uVar8 = 1;\n    }\n    return uVar8;\n}\n",
        "token_count": 2138
    },
    "00433400": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00433400(ulong *arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong *arg2;\n    ulong *in_RAX;\n    ulong uVar1;\n    code **unaff_RBX;\n    int64_t unaff_R14;\n    ulong in_stack_00000000;\n    ulong *puStackX8;\n    code **ppcStackX16;\n    \n    puStackX8 = in_RAX;\n    ppcStackX16 = unaff_RBX;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (puStackX8 != NULL) {\n        uVar1 = fcn.00433c20();\n        arg2 = puStackX8;\n        if (*0x801c20 == 0) {\n            *puStackX8 = uVar1;\n        }\n        else {\n            fcn.0045dda0(arg1, noname_1, arg3, arg4);\n        }\n        arg2[4] = in_stack_00000000;\n        if (*0x801c20 == 0) {\n            arg2[5] = &puStackX8;\n        }\n        else {\n            arg1 = arg2 + 5;\n            fcn.0045dda0(arg1, arg2, arg3, arg4);\n        }\n    }\n    (**ppcStackX16)();\n    if (puStackX8 != NULL) {\n        puStackX8[4] = 0;\n        if (*0x801c20 == 0) {\n            puStackX8[5] = 0;\n        }\n        else {\n            fcn.0045dda0(arg1, ppcStackX16, arg3, arg4);\n        }\n    }\n    return;\n}\n",
        "token_count": 418
    },
    "004334e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004334e0(ulong param_1, ulong param_2, int64_t param_3, char *param_4)\n\n{\n    char **ppcVar1;\n    code *pcVar2;\n    char cVar3;\n    ulong in_RAX;\n    int64_t iVar4;\n    ulong uVar5;\n    char *pcVar6;\n    int64_t iVar7;\n    char *pcVar8;\n    ulong unaff_RBX;\n    char *pcVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    ulong uVar11;\n    char *pcVar12;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x38 && *0x20 + -0x38 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0xb8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            iVar4 = *(unaff_R14 + 0x30);\n            if (*(iVar4 + 0x90) == unaff_R14) {\n                if (*(iVar4 + 0xc0) == 0) {\n                    *(*0x20 + -0x48) = unaff_R14;\n                    if (*(iVar4 + 0xd0) == 0) {\n                        if (*(iVar4 + 0xd8) == 0) {\n                            *(*0x20 + -0x40) = in_XMM15;\n                            *(*0x20 + -0x38) = in_XMM15;\n                            *(*0x20 + -0x28) = in_XMM15;\n                            *(*0x20 + -0x18) = in_XMM15;\n                            *(*0x20 + -0x38) = in_RAX;\n                            *(*0x20 + -0x30) = unaff_RBX;\n                            *(*0x20 + -0x28) = *(unaff_R14 + 0x20);\n                            *(*0x20 + -0x50) = unaff_R14 + 0x20;\n                            if (*0x801c20 == 0) {\n                                *(unaff_R14 + 0x20) = *0x20 + -0x40;\n                            }\n                            else {\n                                *(*0x20 + -0xc0) = 0x4335c5;\n                                fcn.0045df00(param_1, unaff_R14 + 0x20, param_3, param_4);\n                            }\n                            LOCK();\n                            *0x801a14 = *0x801a14 + 1;\n                            *(*0x20 + -0xc0) = 0x4335f2;\n                            fcn.00432d40(*0x20 + 8);\ncode_r0x004335f2:\n                            do {\n                                iVar4 = *(*0x20 + -0x48);\n                                pcVar12 = *(iVar4 + 0x28);\n                                if (pcVar12 == NULL) {\n                                    *(*0x20 + -0xc0) = 0x43388c;\n                                    fcn.00432ac0();\n                                    *(*0x20 + -0xc0) = 0x43389a;\n                                    fcn.00434120();\n                                    _pe_dos_header = 0;\n                                    return;\n                                }\n                                iVar7 = iVar4 + 0x28;\n                                if (*pcVar12 != '\\0') {\n                                    if (*(pcVar12 + 0x20) != 0) {\n                                        *(*(pcVar12 + 0x20) + 0x31) = 1;\n                                    }\n                                    if (*0x801c20 == 0) {\n                                        *(pcVar12 + 0x20) = 0;\n                                    }\n                                    else {\n                                        *(*0x20 + -0xc0) = 0x433647;\n                                        iVar4 = fcn.0045df00(iVar7, pcVar12 + 0x20, param_3, param_4);\n                                    }\n                                    if (pcVar12[2] == '\\0') {\n                                        if (*0x801c20 == 0) {\n                                            *(pcVar12 + 0x18) = 0;\n                                        }\n                                        else {\n                                            *(*0x20 + -0xc0) = 0x433674;\n                                            iVar4 = fcn.0045df00(iVar7, pcVar12 + 0x18, param_3, param_4);\n                                        }\n                                        uVar5 = *(pcVar12 + 0x28);\n                                        if (*0x801c20 == 0) {\n                                            *(iVar4 + 0x28) = uVar5;\n                                        }\n                                        else {\n                                            *(*0x20 + -0xc0) = 0x433692;\n                                            fcn.0045dec0(iVar7, uVar5, param_3, param_4);\n                                        }\n                                        *(*0x20 + -0xc0) = 0x43369a;\n                                        fcn.00432540(iVar7, uVar5);\n                                        goto code_r0x004335f2;\n                                    }\n                                }\n                                *pcVar12 = '\\x01';\n                                pcVar8 = pcVar12 + 0x20;\n                                if (*0x801c20 == 0) {\n                                    *(pcVar12 + 0x20) = *0x20 + -0x40;\n                                }\n                                else {\n                                    *(*0x20 + -0xc0) = 0x4336d2;\n                                    fcn.0045df00(iVar7, pcVar8, param_3, param_4);\n                                }\n                                *(*0x20 + -0x58) = iVar7;\n                                *(*0x20 + -0x70) = pcVar12;\n                                *(*0x20 + -0x60) = pcVar8;\n                                if (pcVar12[2] == '\\0') {\n                                    *(*0x20 + -0xc0) = 0x43372f;\n                                    uVar5 = fcn.00433c20();\n                                    *(*0x20 + -0x40) = uVar5;\n                                    pcVar2 = **(*(*0x20 + -0x70) + 0x18);\n                                    *(*0x20 + -0xc0) = 0x433742;\n                                    (*pcVar2)();\n                                    iVar4 = *(*0x20 + -0x70);\n                                    cVar3 = '\\x01';\n                                }\n                                else {\n                                    *(*0x20 + -0xc0) = 0x4336f2;\n                                    cVar3 = fcn.00433100(iVar7, pcVar8, param_3, param_4);\n                                    if (cVar3 == '\\0') {\n                                        iVar4 = *(*0x20 + -0x70);\n                                    }\n                                    else {\n                                        iVar4 = *(*0x20 + -0x70);\n                                        if (*(*(iVar4 + 0x20) + 0x30) == '\\0') {\n                                            *(*0x20 + -0x9a) = cVar3;\n                                            *(*0x20 + -0xc0) = 0x433717;\n                                            fcn.00432d40(0);\n                                            cVar3 = *(*0x20 + -0x9a);\n                                            iVar4 = *(*0x20 + -0x70);\n                                        }\n                                    }\n                                }\n                                *(*0x20 + -0x40) = 0;\n                                iVar7 = *(*0x20 + -0x48);\n                                if (*(iVar7 + 0x28) != iVar4) goto code_r0x00433a25;\n                                if (*0x801c20 == 0) {\n                                    *(iVar4 + 0x20) = 0;\n                                }\n                                else {\n                                    *(*0x20 + -0xc0) = 0x43378c;\n                                    cVar3 = fcn.0045df00(iVar7, iVar4, param_3, param_4);\n                                }\n                                uVar5 = *(iVar4 + 0x10);\n                                *(*0x20 + -0x98) = uVar5;\n                                uVar11 = *(iVar4 + 8);\n                                *(*0x20 + -0x88) = uVar11;\n                                if (cVar3 != '\\0') {\n                                    if (*0x801c20 == 0) {\n                                        *(iVar4 + 0x18) = 0;\n                                    }\n                                    else {\n                                        param_4 = NULL;\n                                        *(*0x20 + -0xc0) = 0x4337ca;\n                                        cVar3 = fcn.0045df40(iVar7, uVar5, iVar4);\n                                    }\n                                    *(*0x20 + -0x99) = cVar3;\n                                    if (*0x801c20 == 0) {\n                                        *(iVar7 + 0x28) = *(iVar4 + 0x28);\n                                        param_3 = iVar4;\n                                    }\n                                    else {\n                                        *(*0x20 + -0xc0) = 0x4337f4;\n                                        fcn.0045dee0(iVar7, uVar5, iVar4, param_4);\n                                        param_3 = iVar4;\n                                    }\n                                    *(*0x20 + -0xc0) = 0x4337fc;\n                                    fcn.00432540(iVar7, uVar5);\n                                    cVar3 = *(*0x20 + -0x99);\n                                    iVar7 = *(*0x20 + -0x48);\n                                    uVar5 = *(*0x20 + -0x98);\n                                    uVar11 = *(*0x20 + -0x88);\n                                }\n                            } while (*(*0x20 + -0x10) == '\\0');\n                            iVar4 = *(*0x20 + -0x28);\n                            if (*0x801c20 == 0) {\n                                *(iVar7 + 0x20) = iVar4;\n                                pcVar12 = *(*0x20 + -0x50);\n                            }\n                            else {\n                                pcVar12 = *(*0x20 + -0x50);\n                                *(*0x20 + -0xc0) = 0x433845;\n                                cVar3 = fcn.0045dee0(iVar7, uVar5, param_3, param_4);\n                            }\n                            if (((iVar4 == 0) || (*(iVar4 + 0x32) == '\\0')) || (*(iVar4 + 0x31) == '\\0')) {\n                                LOCK();\n                                *0x801a14 = *0x801a14 + -1;\n                                pcVar8 = *(iVar7 + 0x28);\n                                if (cVar3 == '\\0') {\n                                    pcVar6 = pcVar8;\n                                    pcVar9 = *(pcVar8 + 0x28);\n                                    pcVar8 = *(pcVar8 + 0x28);\n                                }\n                                else {\n                                    pcVar6 = NULL;\n                                    pcVar9 = pcVar8;\n                                    pcVar8 = 0x801a14;\n                                }\n                                while ((pcVar9 != NULL && (*pcVar9 == '\\0'))) {\n                                    if (pcVar9[2] == '\\0') {\n                                        ppcVar1 = pcVar9 + 0x28;\n                                        pcVar6 = pcVar9;\n                                        pcVar9 = *ppcVar1;\n                                        pcVar8 = *ppcVar1;\n                                    }\n                                    else {\n                                        *(*0x20 + -0x80) = pcVar6;\n                                        if (pcVar6 == NULL) {\n                                            uVar11 = *(pcVar9 + 0x28);\n                                            if (*0x801c20 == 0) {\n                                                *(iVar7 + 0x28) = uVar11;\n                                                param_4 = *(*0x20 + -0x50);\n                                            }\n                                            else {\n                                                *(*0x20 + -0xc0) = 0x433939;\n                                                fcn.0045df20(iVar7, uVar5, uVar11, pcVar12);\n                                                param_4 = pcVar12;\n                                            }\n                                        }\n                                        else {\n                                            uVar11 = *(pcVar9 + 0x28);\n                                            if (*0x801c20 == 0) {\n                                                *(pcVar6 + 0x28) = uVar11;\n                                            }\n                                            else {\n                                                param_4 = pcVar6 + 0x28;\n                                                *(*0x20 + -0xc0) = 0x43390a;\n                                                fcn.0045df20(iVar7, uVar5, uVar11, param_4);\n                                            }\n                                        }\n                                        uVar11 = *(pcVar9 + 0x28);\n                                        *(*0x20 + -0x78) = uVar11;\n                                        *(*0x20 + -0xc0) = 0x43394a;\n                                        fcn.00432540(uVar11, uVar5);\n                                        iVar7 = *(*0x20 + -0x48);\n                                        uVar5 = *(*0x20 + -0x98);\n                                        uVar11 = *(*0x20 + -0x88);\n                                        pcVar12 = *(*0x20 + -0x50);\n                                        pcVar9 = *(*0x20 + -0x78);\n                                        pcVar6 = *(*0x20 + -0x80);\n                                        pcVar8 = pcVar9;\n                                    }\n                                }\n                                if (*0x801c20 == 0) {\n                                    *(iVar7 + 0x20) = *(*0x20 + -0x28);\n                                }\n                                else {\n                                    *(*0x20 + -0xc0) = 0x433989;\n                                    fcn.0045dee0(iVar7, uVar5, pcVar8, param_4);\n                                }\n                                while( true ) {\n                                    iVar4 = *(iVar7 + 0x20);\n                                    if (iVar4 == 0) goto code_r0x004339e5;\n                                    if (*(iVar4 + 0x31) == '\\0') break;\n                                    if (*0x801c20 == 0) {\n                                        *(iVar7 + 0x20) = *(iVar4 + 0x18);\n                                    }\n                                    else {\n                                        *(*0x20 + -0xc0) = 0x4339b0;\n                                        fcn.0045dee0(iVar7, uVar5, pcVar8, param_4);\n                                    }\n                                }\n                                if (iVar4 == 0) goto code_r0x004339e5;\n                                do {\n                                    *(iVar7 + 0x110) = uVar11;\n                                    *(iVar7 + 0x118) = uVar5;\n                                    *(*0x20 + -0xc0) = 0x4339d1;\n                                    fcn.0045b9a0();\n                                    *(*0x20 + -0xc0) = 0x4339e5;\n                                    fcn.00433c80();\ncode_r0x004339e5:\n                                    *(iVar7 + 0xf0) = 0;\n                                } while( true );\n                            }\n                            *(iVar7 + 0x110) = *(iVar4 + 0x28);\n                            *(iVar7 + 0x118) = *(iVar4 + 0x20);\n                            *(*0x20 + -0xc0) = 0x433a13;\n                            fcn.0045b9a0();\n                            *(*0x20 + -0xc0) = 0x433a25;\n                            fcn.00433c80();\ncode_r0x00433a25:\n                            *(*0x20 + -0xc0) = 0x433a36;\n                            fcn.00433c80();\n                        }\n                        *(*0x20 + -0xc0) = 0x433a3b;\n                        fcn.00435540();\n                        *(*0x20 + -0xc0) = 0x433a4c;\n                        fcn.00435e40();\n                        *(*0x20 + -0xc0) = 0x433a51;\n                        fcn.004355c0();\n                        *(*0x20 + -0xc0) = 0x433a66;\n                        fcn.00407de0();\n                        *(*0x20 + -0xc0) = 0x433a6b;\n                        fcn.00435540();\n                        *(*0x20 + -0xc0) = 0x433a70;\n                        fcn.004357a0();\n                        *(*0x20 + -0xc0) = 0x433a75;\n                        fcn.004355c0();\n                        *(*0x20 + -0xc0) = 0x433a86;\n                        fcn.00433c80();\n                    }\n                    *(*0x20 + -0xc0) = 0x433a8b;\n                    fcn.00435540();\n                    *(*0x20 + -0xc0) = 0x433a9c;\n                    fcn.00435e40();\n                    *(*0x20 + -0xc0) = 0x433aa5;\n                    fcn.004355c0();\n                    *(*0x20 + -0xc0) = 0x433aba;\n                    fcn.00407de0();\n                    *(*0x20 + -0xc0) = 0x433abf;\n                    fcn.00435540();\n                    *(*0x20 + -0xc0) = 0x433ac5;\n                    fcn.004357a0();\n                    *(*0x20 + -0xc0) = 0x433aca;\n                    fcn.004355c0();\n                    *(*0x20 + -0xc0) = 0x433acf;\n                    fcn.00435540();\n                    *(*0x20 + -0xc0) = 0x433ae5;\n                    fcn.00435e40();\n                    *(*0x20 + -0xc0) = 0x433aea;\n                    fcn.004355c0();\n                    iVar4 = *(*(*0x20 + -0x48) + 0x30);\n                    param_1 = *(iVar4 + 200);\n                    *(*0x20 + -0x68) = param_1;\n                    *(*0x20 + -0x90) = *(iVar4 + 0xd0);\n                    *(*0x20 + -0xc0) = 0x433b10;\n                    fcn.00435540();\n                    *(*0x20 + -0xc0) = 0x433b1f;\n                    fcn.00435e40();\n                    *(*0x20 + -0xc0) = 0x433b25;\n                    fcn.004355c0();\n                    *(*0x20 + -0xc0) = 0x433b2a;\n                    fcn.00435540();\n                    *(*0x20 + -0xc0) = 0x433b2f;\n                    fcn.004357a0();\n                    *(*0x20 + -0xc0) = 0x433b34;\n                    fcn.004355c0();\n                    *(*0x20 + -0xc0) = 0x433b45;\n                    fcn.00433c80();\n                }\n                *(*0x20 + -0xc0) = 0x433b4a;\n                fcn.00435540();\n                *(*0x20 + -0xc0) = 0x433b5b;\n                fcn.00435e40();\n                *(*0x20 + -0xc0) = 0x433b65;\n                fcn.004355c0();\n                *(*0x20 + -0xc0) = 0x433b7a;\n                fcn.00407de0();\n                *(*0x20 + -0xc0) = 0x433b7f;\n                fcn.00435540();\n                *(*0x20 + -0xc0) = 0x433b85;\n                fcn.004357a0();\n                *(*0x20 + -0xc0) = 0x433b8a;\n                fcn.004355c0();\n                *(*0x20 + -0xc0) = 0x433b9b;\n                fcn.00433c80();\n            }\n            *(*0x20 + -0xc0) = 0x433ba5;\n            fcn.00435540();\n            *(*0x20 + -0xc0) = 0x433bb6;\n            fcn.00435e40();\n            *(*0x20 + -0xc0) = 0x433bbb;\n            fcn.004355c0();\n            *(*0x20 + -0xc0) = 0x433bd0;\n            fcn.00407de0();\n            *(*0x20 + -0xc0) = 0x433bd5;\n            fcn.00435540();\n            *(*0x20 + -0xc0) = 0x433bda;\n            fcn.004357a0();\n            *(*0x20 + -0xc0) = 0x433bdf;\n            fcn.004355c0();\n            unaff_RBX = 0x15;\n            *(*0x20 + -0xc0) = 0x433bf0;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + -8) = 0x433c05;\n        fcn.0045bb60();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 4832
    },
    "00433c40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00433c40(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    piVar1 = *(unaff_R14 + 0x20);\n    if ((((piVar1 != NULL) && (*(piVar1 + 0x32) == '\\0')) && (*(piVar1 + 6) == '\\0')) && (in_RAX == *piVar1)) {\n        *(piVar1 + 6) = 1;\n        return piVar1[1];\n    }\n    return 0;\n}\n",
        "token_count": 135
    },
    "00433fc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00433fc0(void)\n\n{\n    uint in_EAX;\n    int64_t unaff_R14;\n    \n    if (*(*(unaff_R14 + 0x30) + 0xc4) == 0) {\n        *(*(unaff_R14 + 0x30) + 0xc4) = in_EAX;\n    }\n    fcn.0045ba20();\n    _pe_dos_header = 0;\n    return;\n}\n",
        "token_count": 102
    },
    "004342a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004342a0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (*0x7da700 == 0) {\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.004355c0();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xc0;\n    *piVar1 = *piVar1 + 1;\n    if (*(*(unaff_R14 + 0x30) + 0xd8) < 0) {\n        *(*(unaff_R14 + 0x30) + 0xd8) = 1;\n    }\n    iVar3 = *(unaff_R14 + 0x30);\n    iVar2 = *(iVar3 + 0xdc);\n    if (iVar2 != 0) {\n        if (iVar2 != 1) {\n            if (iVar2 == 2) {\n                *(iVar3 + 0xdc) = 3;\n                fcn.00435540();\n                fcn.00435e40();\n                fcn.004355c0();\n                fcn.0042f860();\n            }\n            fcn.0042f860();\n            return 0;\n        }\n        *(iVar3 + 0xdc) = 2;\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.004355c0();\n        return 0;\n    }\n    *(iVar3 + 0xdc) = 1;\n    iVar2 = *0x801a0c;\n    LOCK();\n    *0x801a0c = *0x801a0c + 1;\n    fcn.0040a420(iVar2);\n    if ((0 < *0x801e90) || (0 < *0x801e8c)) {\n        fcn.004413a0();\n    }\n    fcn.00437be0();\n    return 1;\n}\n",
        "token_count": 499
    },
    "00434420": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.00434420(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int64_t in_RAX;\n    uint32_t uVar6;\n    int64_t unaff_R14;\n    bool bVar7;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (*(in_RAX + 0xf0) != 0) {\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.00435ca0();\n        fcn.004355c0();\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.00435ca0();\n        fcn.00435e40();\n        fcn.00435ca0();\n        fcn.00435e40();\n        fcn.00435ca0();\n        fcn.00435e40();\n        fcn.004355c0();\n    }\n    uVar5 = *0x79528c;\n    uVar2 = *(*(unaff_R14 + 0x30) + 0xc4);\n    if (uVar2 == 0) {\n        bVar7 = (*0x79528c >> 1 & 1) != 0;\n    }\n    else {\n        bVar7 = true;\n    }\n    uVar1 = *(*(unaff_R14 + 0x30) + 0xf9);\n    uVar6 = uVar1;\n    if ((uVar1 == 0) && (uVar6 = *0x79528c >> 2,  1 < uVar2)) {\n        uVar6 = 2;\n    }\n    if (uVar6 != 0) {\n        iVar3 = (*(in_RAX + 0x30))[0x12];\n        if (**(in_RAX + 0x30) == in_RAX) {\n            if ((1 < uVar6) || (1 < *(*(unaff_R14 + 0x30) + 0xc4))) {\n                fcn.00435540();\n                fcn.00435e40();\n                fcn.004355c0();\n                fcn.00455000(0);\n            }\n        }\n        else {\n            fcn.00435540();\n            fcn.004357a0();\n            fcn.004355c0();\n            fcn.00455dc0();\n            fcn.00455000(0);\n        }\n        if ((*0x8019a4 == '\\0') && (iVar3 != in_RAX | bVar7)) {\n            *0x8019a4 = '\\x01';\n            fcn.00456000();\n        }\n    }\n    fcn.0040a680();\n    LOCK();\n    iVar4 = *0x801a0c + -1;\n    bVar7 = *0x801a0c != 1;\n    *0x801a0c = iVar4;\n    if (bVar7) {\n        fcn.0040a460();\n        fcn.0040a460();\n    }\n    return uVar5 & 1;\n}\n",
        "token_count": 755
    },
    "004346e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004346e0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    iVar1 = *(unaff_R14 + 0x30);\n    if ((in_RAX == 0) || (*(iVar1 + 0x90) != in_RAX)) {\n        return 0;\n    }\n    if ((((*(iVar1 + 0xd8) == 0) && (*(iVar1 + 0xc0) == 0)) && (*(iVar1 + 0xc4) == 0)) &&\n       ((*(iVar1 + 0xd0) == 0 && (*(iVar1 + 0xdc) == 0)))) {\n        if (((*(in_RAX + 0x90) & 0xffffefff) == 2) && (*(in_RAX + 0x70) == 0)) {\n            if (*(iVar1 + 0x2b0) != 0) {\n                return 0;\n            }\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 243
    },
    "00434760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00434760(void)\n\n{\n    uint64_t uVar1;\n    \n    uVar1 = fcn.0044cfe0();\n    if (uVar1 != 0) {\n        return uVar1 & 0xffffffffffffff00 | *(uVar1 + 0x24) == '\\x01';\n    }\n    return 0;\n}\n",
        "token_count": 82
    },
    "00434d00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00434d00(uchar param_1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int64_t in_RAX;\n    char unaff_BL;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_BL != '\\0') {\n                return;\n            }\n            *(*0x20 + -0x29) = param_1;\n            *(*0x20 + -0x10) = in_RAX;\n            uVar1 = *(in_RAX + 0x90);\n            if ((uVar1 == 0x1001) || (uVar1 - 0x1003 < 2)) {\n                *(*0x20 + -0x50) = 0x434d52;\n                fcn.00437c80(uVar1 & 0xffffefff);\n                if (*(*0x20 + -0x29) != '\\0') {\n                    *(*0x20 + -0x50) = 0x434d6c;\n                    fcn.004379c0(1);\n                }\n                return;\n            }\n            *(*0x20 + -0x18) = unaff_R14;\n            *(*0x20 + -0x24) = *(in_RAX + 0x90);\n            *(*0x20 + -0x20) = *(in_RAX + 0x98);\n            *(*0x20 + -0x50) = 0x434da5;\n            fcn.00435540();\n            *(*0x20 + -0x50) = 0x434db6;\n            fcn.00435e40();\n            *(*0x20 + -0x50) = 0x434dc5;\n            fcn.00435dc0();\n            *(*0x20 + -0x50) = 0x434dd6;\n            fcn.00435e40();\n            *(*0x20 + -0x50) = 0x434de5;\n            fcn.00435c40();\n            *(*0x20 + -0x50) = 0x434df6;\n            fcn.00435e40();\n            *(*0x20 + -0x50) = 0x434e05;\n            fcn.00435b40();\n            *(*0x20 + -0x50) = 0x434e0a;\n            fcn.004357a0();\n            *(*0x20 + -0x50) = 0x434e0f;\n            fcn.004355c0();\n            uVar2 = *(*(*0x20 + -0x18) + 0x90);\n            param_1 = uVar2;\n            *(*0x20 + -0x28) = uVar2;\n            *(*0x20 + -0x20) = *(*(*0x20 + -0x18) + 0x98);\n            *(*0x20 + -0x50) = 0x434e2f;\n            fcn.00435540();\n            *(*0x20 + -0x50) = 0x434e45;\n            fcn.00435e40();\n            *(*0x20 + -0x50) = 0x434e4f;\n            fcn.00435dc0();\n            *(*0x20 + -0x50) = 0x434e65;\n            fcn.00435e40();\n            *(*0x20 + -0x50) = 0x434e6f;\n            fcn.00435c40();\n            *(*0x20 + -0x50) = 0x434e85;\n            fcn.00435e40();\n            *(*0x20 + -0x50) = 0x434e90;\n            fcn.00435b40();\n            *(*0x20 + -0x50) = 0x434e95;\n            fcn.004357a0();\n            *(*0x20 + -0x50) = 0x434e9a;\n            fcn.004355c0();\n            unaff_BL = '\\x13';\n            *(*0x20 + -0x50) = 0x434eab;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar3 + 8) = in_RAX;\n        puVar3[0x10] = unaff_BL;\n        puVar3[0x11] = param_1;\n        *(puVar3 + -8) = 0x434ebe;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        unaff_BL = puVar3[0x10];\n        param_1 = puVar3[0x11];\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1173
    },
    "0045ff40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045ff40(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    \n    iVar1 = **(in_GS_OFFSET + 0x28);\n    *(iVar1 + 0xb4) = 1;\n    if (*(iVar1 + 0xb2) == '\\0') {\n        fcn.0045b9a0();\n    }\n    else {\n        fcn.0045b9a0();\n    }\n    *(iVar1 + 0xb4) = 0;\n    return;\n}\n",
        "token_count": 122
    },
    "004355c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004355c0(void)\n\n{\n    char cVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    cVar1 = *(*(unaff_R14 + 0x30) + 0xe7);\n    *(*(unaff_R14 + 0x30) + 0xe7) = cVar1 + -1;\n    if (cVar1 == '\\x01') {\n        fcn.0040a680();\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "00435620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00435620(uint64_t arg1)\n\n{\n    uint64_t arg2;\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t arg1_00;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX == 0) {\n                return;\n            }\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x38) = 0x43565d;\n            fcn.004353c0(arg1);\n            if (unaff_R14 == 0) {\ncode_r0x004356fd:\n                *(*0x20 + -0x38) = 0x435711;\n                fcn.00458bc0(*(*0x20 + 0x18));\n                return;\n            }\n            if ((*(unaff_R14 + 0xf8) == 0) || (0 < *(*(unaff_R14 + 0x30) + 0xdc))) goto code_r0x004356fd;\n            iVar1 = *(unaff_R14 + 0x108) - *(unaff_R14 + 0x100);\n            arg1_00 = iVar1;\n            if (*(*0x20 + 0x10) < iVar1) {\n                arg1_00 = *(*0x20 + 0x10);\n            }\n            iVar2 = unaff_R14;\n            if (*(*0x20 + 8) != *(unaff_R14 + 0xf8) + (*(unaff_R14 + 0x100) & -iVar1 >> 0x3f)) {\n                *(*0x20 + -0x10) = unaff_R14;\n                *(*0x20 + -0x18) = arg1_00;\n                *(*0x20 + -0x38) = 0x4356cc;\n                fcn.0045ebc0(arg1_00);\n                arg1_00 = *(*0x20 + -0x18);\n                iVar2 = *(*0x20 + -0x10);\n            }\n            arg2 = *(iVar2 + 0x108);\n            unaff_RBX = *(iVar2 + 0x100);\n            arg1 = arg1_00 + unaff_RBX;\n            if (arg1 <= arg2) {\n                *(iVar2 + 0x100) = arg1;\n                return;\n            }\n            *(*0x20 + -0x38) = 0x43572d;\n            in_RAX = fcn.0045e2c0(arg1, arg2);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x435745;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 865
    },
    "004366e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004366e0(uint64_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong in_RAX;\n    int64_t arg2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    uchar unaff_DIL;\n    int64_t arg3;\n    int64_t arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            arg2 = *(unaff_R14 + 0x30);\n            arg3 = *(arg2 + 0x90);\n            if ((*(arg3 + 0x90) == 2) || (*(arg3 + 0x90) == 0x1002)) {\n                if (*0x801c20 == 0) {\n                    *(arg2 + 0x250) = unaff_RBX;\n                    *(arg2 + 0x248) = in_RAX;\n                }\n                else {\n                    arg4 = arg2 + 0x250;\n                    *(*0x20 + -0x20) = 0x43675e;\n                    fcn.0045dee0(param_1, arg2, arg3, arg4);\n                    *(*0x20 + -0x20) = 0x43676a;\n                    fcn.0045dda0(param_1, arg2, arg3, arg4);\n                }\n                *(arg3 + 0xb0) = param_1;\n                *(arg2 + 600) = unaff_DIL;\n                *(arg2 + 0x260) = unaff_RSI;\n                iVar2 = *(arg2 + 0xd8);\n                *(arg2 + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                *(*0x20 + -0x20) = 0x4367b6;\n                fcn.0045b9a0();\n                return;\n            }\n            unaff_RBX = 0x14;\n            *(*0x20 + -0x20) = 0x4367d2;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        puVar3[0x18] = param_1;\n        puVar3[0x19] = unaff_DIL;\n        *(puVar3 + 0x20) = unaff_RSI;\n        *(puVar3 + -8) = 0x4367f0;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        param_1 = puVar3[0x18];\n        unaff_DIL = puVar3[0x19];\n        unaff_RSI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 837
    },
    "00436900": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00436900(ulong noname_0, uint64_t arg2)\n\n{\n    ulong *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    uint64_t arg3;\n    int64_t iVar12;\n    int64_t unaff_R14;\n    int64_t iStack40;\n    uint64_t uStack24;\n    uint64_t uStack16;\n    \n    piVar2 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar2 = *piVar2 + 1;\n    iVar9 = *(unaff_R14 + 0x30);\n    uVar5 = *(iVar9 + 0xa0);\n    uVar10 = uVar5;\n    if (*(uVar5 + 0x9b8) != 0) goto code_r0x00436965;\n    iVar12 = unaff_R14;\n    fcn.0040a460();\n    arg2 = uVar5 + 0x9b0;\n    iStack40 = iVar9;\n    uStack24 = arg2;\n    uStack16 = uVar5;\n    do {\n        while ((uVar10 = *0x7ae5c0,  uVar11 = *(uVar5 + 0x9c0) >> 1,  *(uVar5 + 0x9b8) < uVar11 &&\n               (uVar11 = *0x7ae5c0,  *0x7ae5c0 != 0))) {\n            if (*0x801c20 == 0) {\n                puVar1 = *0x7ae5c0 + 8;\n                *0x7ae5c0 = *(*0x7ae5c0 + 8);\n                *puVar1 = 0;\n            }\n            else {\n                fcn.0045df40(uVar5, arg2, *0x7ae5c0);\n                fcn.0045df40(uVar5, arg2, uVar10);\n            }\n            iVar9 = *(uVar5 + 0x9b8);\n            uVar11 = iVar9 + 1;\n            iVar12 = *(uVar5 + 0x9b0);\n            iVar6 = iVar12;\n            if (*(uVar5 + 0x9c0) < uVar11) {\n                arg3 = uVar10;\n                iVar6 = fcn.00447360(iVar9);\n                *(uStack16 + 0x9c0) = iVar9;\n                uVar5 = uStack16;\n                arg2 = uStack24;\n                if (*0x801c20 == 0) {\n                    *(uStack16 + 0x9b0) = iVar6;\n                    iVar9 = iVar12;\n                }\n                else {\n                    iVar6 = fcn.0045dda0(iVar9, uStack16, arg3, uVar11);\n                    iVar9 = iVar12;\n                }\n            }\n            iVar12 = iVar9 + 1;\n            *(uVar5 + 0x9b8) = iVar12;\n            if (*0x801c20 == 0) {\n                *(iVar6 + iVar9 * 8) = uVar10;\n            }\n            else {\n                fcn.0045df20(uVar5, arg2, uVar10, iVar12);\n            }\n        }\n        fcn.0040a680();\n        iVar9 = iStack40;\n        uVar10 = uStack16;\n        if (*(uStack16 + 0x9b8) == 0) {\n            uVar7 = fcn.0040c560();\n            iVar6 = *(uStack16 + 0x9b8);\n            iVar4 = *(uStack16 + 0x9b0);\n            arg2 = iVar6 + 1U;\n            iVar8 = iVar4;\n            if (*(uStack16 + 0x9c0) < iVar6 + 1U) {\n                iVar8 = fcn.00447360(iVar6);\n                *(uStack16 + 0x9c0) = iVar6;\n                if (*0x801c20 == 0) {\n                    *(uStack16 + 0x9b0) = iVar8;\n                    arg2 = uStack16;\n                    iVar6 = iVar4;\n                }\n                else {\n                    iVar8 = fcn.0045dda0(iVar6, uStack16, uVar11, iVar12);\n                    arg2 = uVar10;\n                    iVar6 = iVar4;\n                }\n            }\n            *(uVar10 + 0x9b8) = iVar6 + 1;\n            if (*0x801c20 == 0) {\n                *(iVar8 + iVar6 * 8) = uVar7;\n            }\n            else {\n                fcn.0045dda0(uVar10, arg2, iVar6 + 1, iVar12);\n            }\n        }\ncode_r0x00436965:\n        uVar5 = *(uVar10 + 0x9b8);\n        iVar12 = *(uVar10 + 0x9b0);\n        uVar11 = uVar5 - 1;\n        if (uVar11 < uVar5) {\n            iVar6 = *(iVar12 + -8 + uVar5 * 8);\n            if (*0x801c20 == 0) {\n                *(iVar12 + -8 + uVar5 * 8) = 0;\n            }\n            else {\n                iVar12 = 0;\n                fcn.0045df40(uVar11, arg2, uVar10);\n            }\n            uVar5 = *(uVar10 + 0x9c0);\n            if (uVar11 <= uVar5) {\n                *(uVar10 + 0x9b8) = uVar11;\n                if (*(iVar6 + 0x18) == 0) {\n                    iVar3 = *(iVar9 + 0xd8);\n                    *(iVar9 + 0xd8) = iVar3 + -1;\n                    if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                    }\n                    return iVar6;\n                }\n                fcn.00433c80();\n            }\n            uVar5 = fcn.0045e2c0(uVar11, uVar5);\n        }\n        arg2 = uVar5;\n        fcn.0045e240(uVar5);\n    } while( true );\n}\n",
        "token_count": 1498
    },
    "00436c00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00436c00(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t arg1;\n    uint64_t uVar6;\n    uint64_t arg2;\n    int64_t arg2_00;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t arg3;\n    int64_t iVar9;\n    uint64_t arg1_00;\n    int64_t unaff_R14;\n    \n    if (*(in_RAX + 0x18) == 0) {\n        if (*(in_RAX + 0x34) == '\\0') {\n            if (*(in_RAX + 8) == 0) {\n                if (*(in_RAX + 0x10) == 0) {\n                    if (*(in_RAX + 0x40) == 0) {\n                        if (*(in_RAX + 0x50) == 0) {\n                            if (*(unaff_R14 + 0x88) == 0) {\n                                piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                                *piVar1 = *piVar1 + 1;\n                                arg3 = *(unaff_R14 + 0x30);\n                                arg2 = *(arg3 + 0xa0);\n                                if (*(arg2 + 0x9b8) == *(arg2 + 0x9c0)) {\n                                    iVar4 = 0;\n                                    iVar5 = 0;\n                                    iVar9 = arg3;\n                                    uVar6 = arg2;\n                                    while( true ) {\n                                        uVar8 = *(uVar6 + 0x9b8);\n                                        if (uVar8 <= *(uVar6 + 0x9c0) >> 1) break;\n                                        arg1_00 = uVar8 - 1;\n                                        if (uVar8 <= arg1_00) {\ncode_r0x00436eb1:\n                                            fcn.0045e240(uVar8);\n                                            goto code_r0x00436ebc;\n                                        }\n                                        iVar7 = *(*(uVar6 + 0x9b0) + -8 + uVar8 * 8);\n                                        if (*0x801c20 == 0) {\n                                            *(*(uVar6 + 0x9b0) + -8 + uVar8 * 8) = 0;\n                                            arg1 = iVar4;\n                                            arg2_00 = iVar5;\n                                            iVar4 = iVar7;\n                                        }\n                                        else {\n                                            fcn.0045dee0(iVar4, iVar5, iVar9, uVar6);\n                                            arg1 = iVar4;\n                                            arg2_00 = iVar5;\n                                            iVar4 = iVar7;\n                                        }\n                                        uVar8 = *(uVar6 + 0x9c0);\n                                        if (uVar8 < arg1_00) {\n                                            fcn.0045e2c0(arg1_00, uVar8);\n                                            goto code_r0x00436eb1;\n                                        }\n                                        *(uVar6 + 0x9b8) = arg1_00;\n                                        iVar5 = iVar4;\n                                        if (arg2_00 != 0) {\n                                            if (*0x801c20 == 0) {\n                                                *(arg1 + 8) = iVar4;\n                                                iVar5 = arg2_00;\n                                            }\n                                            else {\n                                                fcn.0045dee0(arg1, arg2_00, iVar9, uVar6);\n                                                iVar5 = arg2_00;\n                                            }\n                                        }\n                                    }\n                                    iVar7 = iVar5;\n                                    fcn.0040a460();\n                                    if (*0x801c20 == 0) {\n                                        *(iVar4 + 8) = *0x7ae5c0;\n                                        *0x7ae5c0 = iVar5;\n                                    }\n                                    else {\n                                        fcn.0045dea0(*0x7ae5c0, iVar7, iVar9, uVar6);\n                                        fcn.0045dea0(iVar5, iVar7, iVar9, uVar6);\n                                    }\n                                    fcn.0040a680();\n                                }\n                                iVar5 = *(arg2 + 0x9b8);\n                                uVar6 = iVar5 + 1;\n                                iVar9 = *(arg2 + 0x9b0);\n                                iVar4 = iVar9;\n                                if (*(arg2 + 0x9c0) < uVar6) {\n                                    iVar7 = arg3;\n                                    uVar8 = arg2;\n                                    iVar4 = fcn.00447360(iVar5);\n                                    *(arg2 + 0x9c0) = iVar5;\n                                    iVar5 = iVar9;\n                                    if (*0x801c20 == 0) {\n                                        *(arg2 + 0x9b0) = iVar4;\n                                    }\n                                    else {\n                                        iVar4 = fcn.0045dda0(arg2 + 0x9b0, arg2, iVar7, uVar8);\n                                        uVar6 = arg2;\n                                    }\n                                }\n                                *(arg2 + 0x9b8) = iVar5 + 1;\n                                if (*0x801c20 == 0) {\n                                    *(iVar4 + iVar5 * 8) = in_RAX;\n                                }\n                                else {\n                                    fcn.0045dda0(iVar5 + 1, uVar6, arg3, arg2);\n                                }\n                                iVar2 = *(arg3 + 0xd8);\n                                *(arg3 + 0xd8) = iVar2 + -1;\n                                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                                }\n                                return;\n                            }\ncode_r0x00436ebc:\n                            fcn.00433c80();\n                        }\n                        fcn.00433c80();\n                    }\n                    fcn.00433c80();\n                }\n                fcn.00433c80();\n            }\n            fcn.00433c80();\n        }\n        fcn.00433c80();\n    }\n    fcn.00433c80();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 1392
    },
    "004370a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004370a0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t arg1;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x90) != 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x58) = 0x4370db;\n                fcn.0040a460();\n                uVar2 = *0x7ada20;\n                uVar4 = *0x7ada28 + 1;\n                arg1 = uVar4;\n                uVar3 = *0x7ada20;\n                uVar6 = *0x7ada28;\n                if (*0x7ada30 < uVar4) {\n                    *(*0x20 + -0x58) = 0x43710e;\n                    arg1 = *0x7ada28;\n                    uVar3 = fcn.00447360(*0x7ada28);\n                    uVar6 = uVar2;\n                    uVar2 = uVar3;\n                    *0x7ada30 = arg1;\n                    if (*0x801c20 != 0) {\n                        *(*0x20 + -0x58) = 0x437133;\n                        uVar3 = fcn.0045dda0(arg1, uVar4, param_3, param_4);\n                        uVar2 = *0x7ada20;\n                    }\n                }\n                *0x7ada20 = uVar2;\n                *0x7ada28 = uVar6 + 1;\n                if (*0x801c20 == 0) {\n                    *(uVar3 + uVar6 * 8) = *(*0x20 + 8);\n                }\n                else {\n                    *(*0x20 + -0x58) = 0x437166;\n                    fcn.0045dec0(arg1, *(*0x20 + 8), param_3, param_4);\n                }\n                if (*0x7ada28 != 0) {\n                    uVar4 = *0x7ad040;\n                    if ((*0x7ad040 != *0x7ada20) && (uVar4 = *0x7ada20,  *0x801c20 != '\\0')) {\n                        *(*0x20 + -0x10) = *0x7ada20;\n                        *(*0x20 + -0x58) = 0x4371a5;\n                        fcn.00403500();\n                        uVar4 = *(*0x20 + -0x10);\n                    }\n                    *0x7ad040 = uVar4;\n                    uVar1 = *0x801a48;\n                    *0x801a48 = *0x7ada28;\n                    *(*0x20 + -0x58) = 0x4371d3;\n                    fcn.0040a680(uVar1);\n                    return;\n                }\n                *(*0x20 + -0x58) = 0x4371e7;\n                fcn.0045e240(0);\n            }\n            *(*0x20 + -0x58) = 0x4371f8;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x437205;\n        fcn.0045bb60();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 942
    },
    "004377c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004377c0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t *piVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int64_t in_RAX;\n    ulong uVar4;\n    ulong arg1;\n    int64_t arg2;\n    uint64_t arg2_00;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (**(unaff_R14 + 0x30) != unaff_R14) {\n        fcn.004558e0(0x20);\n    }\n    fcn.0040a460();\n    if (unaff_RBX < 0) {\n        uVar4 = fcn.00437760();\n        *(in_RAX + 0xb8) = uVar4;\n    }\n    else {\n        *(in_RAX + 0xb8) = unaff_RBX;\n    }\n    uVar4 = *(in_RAX + 0xb8);\n    arg2 = in_RAX;\n    uVar2 = fcn.0045dce0();\n    fcn.0045dc20(uVar4, arg2);\n    uVar3 = fcn.0045dce0();\n    if ((uVar2 | uVar3) == 0) {\n        uVar3 = 1;\n    }\n    arg2_00 = uVar2;\n    *(in_RAX + 0xf0) = CONCAT44(uVar3, uVar2);\n    piVar1 = *(in_RAX + 0x50);\n    if (piVar1 != NULL) {\n        arg2_00 = *piVar1 + 0x13a0;\n        piVar1[3] = arg2_00;\n    }\n    if (*0x801c20 == 0) {\n        *(in_RAX + 0x120) = *0x7ad048;\n    }\n    else {\n        fcn.0045dea0(*0x7ad048, arg2_00, param_3, param_4);\n    }\n    if (*0x801c20 != '\\0') {\n        fcn.00403500();\n    }\n    arg1 = 0x7ad048;\n    *0x7ad048 = in_RAX;\n    fcn.0040a680();\n    uVar4 = fcn.0040c560();\n    if (*0x801c20 == 0) {\n        *(in_RAX + 0x110) = uVar4;\n    }\n    else {\n        fcn.0045dda0(arg1, arg2_00, param_3, param_4);\n    }\n    return;\n}\n",
        "token_count": 647
    },
    "004379c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004379c0(uchar param_1)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    ulong uVar5;\n    int64_t in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x31) = param_1;\n            *(*0x20 + 8) = in_RAX;\n            if (*0x7b3b90 != '\\0') {\n                *(*0x20 + -0x58) = 0x4379ef;\n                fcn.00452180();\n                in_RAX = *(*0x20 + 8);\n            }\n            uVar2 = *(in_RAX + 0x90);\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            uVar5 = *(unaff_R14 + 0x30);\n            if ((uVar2 & 0xffffefff) == 4) {\n                *(*0x20 + -0x10) = unaff_R14;\n                *(*0x20 + -0x20) = uVar5;\n                *(*0x20 + -0x58) = 0x437a31;\n                fcn.00438120(1);\n                *(*0x20 + -0x58) = 0x437a50;\n                fcn.004422c0(*(*0x20 + -0x31));\n                *(*0x20 + -0x58) = 0x437a55;\n                fcn.0043a740();\n                iVar3 = *(*(*0x20 + -0x20) + 0xd8);\n                *(*(*0x20 + -0x20) + 0xd8) = iVar3 + -1;\n                if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(*0x20 + -0x18) = unaff_R14;\n            *(*0x20 + -0x2c) = *(in_RAX + 0x90);\n            *(*0x20 + -0x28) = *(in_RAX + 0x98);\n            *(*0x20 + -0x58) = 0x437aac;\n            fcn.00435540();\n            *(*0x20 + -0x58) = 0x437abd;\n            fcn.00435e40();\n            *(*0x20 + -0x58) = 0x437ac7;\n            fcn.00435dc0();\n            *(*0x20 + -0x58) = 0x437ad8;\n            fcn.00435e40();\n            *(*0x20 + -0x58) = 0x437ae5;\n            fcn.00435c40();\n            *(*0x20 + -0x58) = 0x437af6;\n            fcn.00435e40();\n            *(*0x20 + -0x58) = 0x437b05;\n            fcn.00435b40();\n            *(*0x20 + -0x58) = 0x437b0a;\n            fcn.004357a0();\n            *(*0x20 + -0x58) = 0x437b0f;\n            fcn.004355c0();\n            uVar4 = *(*(*0x20 + -0x18) + 0x90);\n            param_1 = uVar4;\n            *(*0x20 + -0x30) = uVar4;\n            *(*0x20 + -0x28) = *(*(*0x20 + -0x18) + 0x98);\n            *(*0x20 + -0x58) = 0x437b2f;\n            fcn.00435540();\n            *(*0x20 + -0x58) = 0x437b45;\n            fcn.00435e40();\n            *(*0x20 + -0x58) = 0x437b4f;\n            fcn.00435dc0();\n            *(*0x20 + -0x58) = 0x437b65;\n            fcn.00435e40();\n            *(*0x20 + -0x58) = 0x437b6f;\n            fcn.00435c40();\n            *(*0x20 + -0x58) = 0x437b85;\n            fcn.00435e40();\n            *(*0x20 + -0x58) = 0x437b90;\n            fcn.00435b40();\n            *(*0x20 + -0x58) = 0x437b95;\n            fcn.004357a0();\n            *(*0x20 + -0x58) = 0x437b9a;\n            fcn.004355c0();\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x58) = 0x437bab;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        puVar6[0x18] = param_1;\n        *(puVar6 + -8) = 0x437bbf;\n        fcn.0045bb60();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        param_1 = puVar6[0x18];\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1401
    },
    "00438120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t * fcn.00438120(ulong arg1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int64_t in_RAX;\n    int64_t *piVar5;\n    int64_t *piVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    uint32_t unaff_EBX;\n    uint64_t uVar9;\n    ulong uStack64;\n    int64_t *piStack40;\n    int64_t iStack32;\n    uchar auStack24 [16];\n    \n    if ((((unaff_EBX >> 0xc & 1) != 0) || ((arg1 >> 0xc & 1) != 0)) || (unaff_EBX == arg1)) {\n        auStack24 = CONCAT412(arg1, CONCAT48(unaff_EBX, 0x4384a0));\n        uStack64 = auStack24;\n        fcn.0045ba20();\n    }\n    iVar8 = 0;\n    piVar6 = NULL;\n    while( true ) {\n        LOCK();\n        puVar1 = in_RAX + 0x90;\n        uVar2 = *puVar1;\n        if (unaff_EBX == uVar2) {\n            *puVar1 = arg1;\n            uVar4 = unaff_EBX;\n        }\n        else {\n            uVar4 = *puVar1;\n        }\n        piVar5 = uVar4;\n        if (unaff_EBX == uVar2) break;\n        if ((unaff_EBX == 4) && (*(in_RAX + 0x90) == 1)) {\n            fcn.00433c80();\n            pcVar3 = swi(3);\n            piVar6 = (*pcVar3)();\n            return piVar6;\n        }\n        if (iVar8 == 0) {\n            fcn.0045fb60();\n            piVar6 = uStack64 + 0x271;\n        }\n        fcn.0045fb60();\n        piStack40 = piVar6;\n        iStack32 = iVar8;\n        if (uStack64 < piVar6) {\n            iVar8 = 0;\n            while ((piVar6 = piStack40,  iVar8 < 10 && (*(in_RAX + 0x90) != unaff_EBX))) {\ncode_r0x0043842c:\n                uStack64 = CONCAT44(uStack64._4_4_, 1);\n                fcn.0045d940();\n                iVar8 = iVar8 + 1;\n            }\n        }\n        else {\n            uStack64 = 0x719768;\n            fcn.0045ba20();\n            fcn.0045fb60();\n            piVar6 = 0x71a12c;\n        }\n        iVar8 = iStack32 + 1;\n    }\n    if (unaff_EBX == 2) {\n        if ((*(in_RAX + 0xbd) & 7) == 0) {\n            *(in_RAX + 0xbc) = 1;\n        }\n        *(in_RAX + 0xbd) = *(in_RAX + 0xbd) + '\\x01';\n    }\n    if (*(in_RAX + 0xbc) != '\\0') {\n        if (unaff_EBX == 1) {\n            fcn.0045fb60();\n            piVar5 = uStack64 - *(in_RAX + 0xc0);\n            *(in_RAX + 200) = *(in_RAX + 200) + piVar5;\n            *(in_RAX + 0xc0) = 0;\n        }\n        if (arg1 == 1) {\n            fcn.0045fb60();\n            *(in_RAX + 0xc0) = uStack64;\n            piVar5 = uStack64;\n        }\n        else if (arg1 == 2) {\n            *(in_RAX + 0xbc) = 0;\n            uVar9 = *(in_RAX + 200);\n            if (uVar9 < 0) {\n                LOCK();\n                piVar5 = *0x7afcb8;\n                *0x7afcb8 = *0x7afcb8 + 1;\n            }\n            else {\n                if (uVar9 < 0x10) {\n                    iVar8 = 0;\n                }\n                else {\n                    iVar7 = 0x3f;\n                    if (uVar9 != 0) {\n                        for (; uVar9 >> iVar7 == 0; iVar7 = iVar7 + -1) {\n                        }\n                    }\n                    if (uVar9 == 0) {\n                        iVar7 = -1;\n                    }\n                    iVar8 = iVar7 + -3;\n                    if (iVar8 * 0x10 < 0x2d0) {\n                        iVar7 = uVar9 >> ((iVar7 - 4U | ~-(iVar7 - 4U < 0x40)) & 0x3f);\n                        uVar9 = iVar7 + (((iVar7 >> 0x3f) >> 0x3c) + iVar7 >> 4) * -0x10;\n                    }\n                    else {\n                        iVar8 = 0x2c;\n                        uVar9 = 0xf;\n                    }\n                }\n                uVar9 = iVar8 * 0x10 + uVar9;\n                if (0x2cf < uVar9) {\n                    iVar8 = 0x2d0;\n                    fcn.0045e260(0x2d0);\n                    goto code_r0x0043842c;\n                }\n                piVar5 = uVar9 * 8 + 0x7ae638;\n                LOCK();\n                *piVar5 = *piVar5 + 1;\n            }\n            *(in_RAX + 200) = 0;\n        }\n    }\n    return piVar5;\n}\n",
        "token_count": 1311
    },
    "00438540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.00438540(ulong arg1)\n\n{\n    int64_t in_RAX;\n    int32_t unaff_EBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((unaff_EBX == 2) && (arg1 == 0x1009)) {\n                do {\n                    LOCK();\n                } while (*(in_RAX + 0x90) != 2);\n                *(in_RAX + 0x90) = 0x1009;\n                return 2;\n            }\n            unaff_EBX = 0x10;\n            *(*0x20 + -0x20) = 0x4385a5;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_EBX;\n        *(puVar1 + 0x14) = arg1;\n        *(puVar1 + -8) = 0x4385b8;\n        fcn.0045bb60();\n        in_RAX = *(puVar1 + 8);\n        unaff_EBX = *(puVar1 + 0x10);\n        arg1._0_4_ = *(puVar1 + 0x14);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 404
    },
    "004388e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004388e0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uchar in_AL;\n    ulong uVar4;\n    int64_t iVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \ncode_r0x004388e0:\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0x58;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_AL;\n        piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n        *piVar1 = *piVar1 + 1;\n        *(*0x20 + -0x20) = *(unaff_R14 + 0x30);\n        if (*0x8019fc != 0) {\n            *(*0x20 + -0x60) = 0x438925;\n            uVar4 = fcn.0042d9a0();\n            *(*0x20 + -0x28) = uVar4;\n            *(*0x20 + -0x60) = 0x438934;\n            fcn.0043c1a0();\n        }\n        *(*0x20 + -0x60) = 0x438945;\n        fcn.0040a460();\n        if (*0x801a08 != 0) {\n            *0x801a08 = 0;\n        }\n        *(*0x20 + -0x60) = 0x43896b;\n        uVar4 = fcn.0043fa60();\n        *(*0x20 + -0x18) = uVar4;\n        *0x7ae5e0 = 0;\n        if (*0x7ae5f0 != 0) {\n            *0x7ae5f0 = 0;\n            *(*0x20 + -0x60) = 0x438999;\n            fcn.0040a760();\n        }\n        *(*0x20 + -0x60) = 0x4389a7;\n        fcn.0040a680();\n        iVar5 = *(*0x20 + -0x18);\n        do {\n            if (iVar5 == 0) {\n                *(*0x20 + -0x60) = 0x438a14;\n                fcn.0045fb60();\n                iVar5 = **(in_GS_OFFSET + 0x28);\n                *(*0x20 + -0x30) = *(*0x20 + -0x58);\n                if (*(*0x20 + 8) != '\\0') {\n                    *(*0x20 + -0x60) = 0x438a53;\n                    fcn.00450c80(0);\n                }\n                *(*0x20 + -0x60) = 0x438a58;\n                fcn.0043a740();\n                iVar2 = *(*(*0x20 + -0x20) + 0xd8);\n                *(*(*0x20 + -0x20) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(iVar5 + 0xb1) != '\\0')) {\n                    *(iVar5 + 0x10) = 0xfffffffffffffade;\n                }\n                return *(*0x20 + -0x30);\n            }\n            iVar3 = *(iVar5 + 0x38);\n            *(*0x20 + -0x10) = *(iVar5 + 8);\n            if (iVar3 == 0) {\n                *(*0x20 + -0x60) = 0x438a0c;\n                fcn.00439b80(0xffffffffffffffff);\n            }\n            else {\n                *(iVar5 + 0x38) = 0;\n                if (*(iVar3 + 0xa8) != 0) goto code_r0x00438a93;\n                *(iVar3 + 0xa8) = iVar5;\n                *(*0x20 + -0x60) = 0x4389f9;\n                fcn.0040a760();\n            }\n            iVar5 = *(*0x20 + -0x10);\n        } while( true );\n    }\n    goto code_r0x00438aa6;\ncode_r0x00438a93:\n    *(*0x20 + -0x60) = 0x438aa5;\n    in_AL = fcn.00433c80();\ncode_r0x00438aa6:\n    puVar6[8] = in_AL;\n    *(puVar6 + -8) = 0x438aaf;\n    fcn.0045bb60();\n    in_AL = puVar6[8];\n    *0x20 = puVar6;\n    goto code_r0x004388e0;\n}\n",
        "token_count": 1138
    },
    "00438c60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00438c60(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (*0x8019a3 == '\\0') {\n        *0x8019a3 = '\\x01';\n        fcn.004397a0();\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "00438d00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00438d00(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint32_t uVar1;\n    uchar in_AL;\n    int64_t iVar2;\n    int64_t *piVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar2 = *(unaff_R14 + 0x30);\n            if (iVar2 != 0x7ae120) {\n                *(*0x20 + 8) = in_AL;\n                *(*0x20 + -0x18) = iVar2;\n                *(*0x20 + -0x30) = 0x438d3a;\n                fcn.00430aa0();\n                iVar2 = *(*(*0x20 + -0x18) + 0x50);\n                if (iVar2 != 0) {\n                    *(*0x20 + -0x30) = 0x438d54;\n                    fcn.004483c0();\n                    if (*0x801c20 == 0) {\n                        iVar2 = *(*0x20 + -0x18);\n                        *(iVar2 + 0x50) = 0;\n                    }\n                    else {\n                        *(*0x20 + -0x30) = 0x438d85;\n                        iVar2 = fcn.0045dec0(*(*0x20 + -0x18) + 0x50, 0, param_3, param_4);\n                    }\n                }\n                *(*0x20 + -0x30) = 0x438d95;\n                fcn.0040a460(iVar2);\n                iVar2 = *(*0x20 + -0x18);\n                piVar3 = 0x7ad048;\n                while (iVar5 = *piVar3,  iVar5 != 0) {\n                    if (iVar5 == iVar2) {\n                        iVar5 = *(iVar2 + 0x120);\n                        if (*0x801c20 == 0) {\n                            *piVar3 = iVar5;\n                        }\n                        else {\n                            *(*0x20 + -0x30) = 0x438dd8;\n                            fcn.0045dec0(iVar2, iVar5, param_3, param_4);\n                        }\n                        *(iVar2 + 0xec) = 2;\n                        if (*0x801c20 == 0) {\n                            *(iVar2 + 0x270) = *0x7ae5d8;\n                            *0x7ae5d8 = iVar2;\n                        }\n                        else {\n                            *(*0x20 + -0x30) = 0x438e0f;\n                            iVar5 = *0x7ae5d8;\n                            fcn.0045dec0(iVar2, *0x7ae5d8, param_3, param_4);\n                            *(*0x20 + -0x30) = 0x438e1b;\n                            fcn.0045dea0(iVar2, iVar5, param_3, param_4);\n                        }\n                        *(*0x20 + -0x30) = 0x438e29;\n                        fcn.0040a680();\n                        iVar2 = *0x801ae8;\n                        LOCK();\n                        *0x801ae8 = *0x801ae8 + *(*(*0x20 + -0x18) + 0x100);\n                        *(*0x20 + -0x30) = 0x438e46;\n                        fcn.00440460(*(*0x20 + -0x18), iVar2);\n                        *(*0x20 + -0x30) = 0x438e4b;\n                        fcn.0043a420();\n                        *(*0x20 + -0x30) = 0x438e59;\n                        fcn.0040a460();\n                        *0x7ae540 = *0x7ae540 + 1;\n                        *(*0x20 + -0x30) = 0x438e65;\n                        fcn.00440620();\n                        *(*0x20 + -0x30) = 0x438e73;\n                        fcn.0040a680();\n                        *(*0x20 + -0x30) = 0x438e7d;\n                        fcn.00430b40();\n                        if (*(*0x20 + 8) != '\\0') {\n                            uVar1 = *(*(*0x20 + -0x18) + 0xec);\n                            *(*(*0x20 + -0x18) + 0xec) = 1;\n                            return uVar1;\n                        }\n                        *(*0x20 + -0x30) = 0x438eb1;\n                        uVar4 = fcn.004306a0();\n                        return uVar4;\n                    }\n                    piVar3 = iVar5 + 0x120;\n                }\n                *(*0x20 + -0x30) = 0x438ecc;\n                fcn.00433c80();\n            }\n            *(*0x20 + -0x30) = 0x438ed1;\n            fcn.00440460();\n            *(*0x20 + -0x30) = 0x438ed6;\n            fcn.0043a420();\n            *(*0x20 + -0x30) = 0x438ee5;\n            fcn.0040a460();\n            *0x7ae540 = *0x7ae540 + 1;\n            *(*0x20 + -0x30) = 0x438ef1;\n            fcn.00440620();\n            *(*0x20 + -0x30) = 0x438eff;\n            fcn.0040a680();\n            *(*0x20 + -0x10) = unaff_R14;\n            *(*0x20 + -0x30) = 0x438f16;\n            fcn.0040a7e0();\n            *(*(*(*0x20 + -0x10) + 0x30) + 0x118) = 0;\n            *(*0x20 + -0x30) = 0x438f3b;\n            in_AL = fcn.00433c80();\n        }\n        puVar6[8] = in_AL;\n        *(puVar6 + -8) = 0x438f45;\n        fcn.0045bb60();\n        in_AL = puVar6[8];\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1541
    },
    "00438f60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00438f60(ulong param_1, ulong param_2, uint64_t param_3, ulong param_4)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    code *pcVar6;\n    char cVar7;\n    ulong in_RAX;\n    int64_t iVar8;\n    ulong arg1;\n    int64_t iVar9;\n    ulong arg2;\n    int64_t iVar10;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t iVar12;\n    int64_t unaff_R14;\n    bool bVar13;\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar11 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x28) = unaff_R14;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            arg1 = *(*(unaff_R14 + 0x30) + 0xa0);\n            arg2 = *(*(*0x20 + -0x28) + 0x30);\n            *(*0x20 + -0x38) = arg2;\n            *(*0x20 + -0x10) = arg1;\n            *(*0x20 + -0x68) = 0x438fb9;\n            fcn.0040a460();\n            if (*0x7ae608 == 0) {\n                *0x7ae608 = *0x8019f0 + -1;\n                if (*0x801c20 == 0) {\n                    *0x7ae600 = *(*0x20 + 8);\n                }\n                else {\n                    *(*0x20 + -0x68) = 0x438ffc;\n                    fcn.0045dda0(arg1, arg2, param_3, param_4);\n                }\n                iVar10 = *0x7ada48;\n                iVar9 = *0x7ada40;\n                iVar8 = *(*0x20 + -0x10);\n                for (iVar12 = 0; iVar12 < iVar10; iVar12 = iVar12 + 1) {\n                    iVar5 = *(iVar9 + iVar12 * 8);\n                    if (iVar8 != iVar5) {\n                        puVar2 = iVar5 + 0x2278;\n                        uVar3 = *puVar2;\n                        *puVar2 = 1;\n                        param_3 = uVar3;\n                    }\n                }\n                *(*0x20 + -0x68) = 0x43903b;\n                fcn.004410e0();\n                for (iVar8 = *0x7ae550; iVar8 != 0; iVar8 = *(iVar8 + 8)) {\n                    LOCK();\n                    if (*(iVar8 + 0x2278) == 1) {\n                        *(iVar8 + 0x2278) = 0;\n                        *(*0x20 + -0x18) = iVar8;\n                        pcVar6 = **(*0x20 + 8);\n                        *(*0x20 + -0x68) = 0x43907a;\n                        (*pcVar6)();\n                        *0x7ae608 = *0x7ae608 + -1;\n                        iVar8 = *(*0x20 + -0x18);\n                    }\n                }\n                *(*0x20 + -0x4c) = *0x7ae608;\n                *(*0x20 + -0x68) = 0x4390a5;\n                fcn.0040a680();\n                pcVar6 = **(*0x20 + 8);\n                *(*0x20 + -0x68) = 0x4390b4;\n                (*pcVar6)();\n                *(*0x20 + -0x20) = *0x7ada40;\n                *(*0x20 + -0x40) = *0x7ada48;\n                iVar9 = *0x7ada40;\n                iVar10 = *0x7ada48;\n                for (iVar8 = 0; iVar8 < iVar10; iVar8 = iVar8 + 1) {\n                    iVar12 = *(iVar9 + iVar8 * 8);\n                    if (*(iVar12 + 4) == 2) {\n                        if (*(iVar12 + 0x2278) == 1) {\n                            LOCK();\n                            bVar13 = *(iVar12 + 4) == 2;\n                            if (bVar13) {\n                                *(iVar12 + 4) = 0;\n                            }\n                            param_3 = param_3 & 0xffffffffffffff00 | bVar13;\n                        }\n                        else {\n                            param_3 = 0;\n                        }\n                    }\n                    else {\n                        param_3 = 0;\n                    }\n                    if (param_3 != '\\0') {\n                        *(*0x20 + -0x48) = iVar8;\n                        if (*0x7b3b90 != '\\0') {\n                            *(*0x20 + -0x30) = iVar12;\n                            *(*0x20 + -0x68) = 0x439137;\n                            fcn.00452360();\n                            *(*0x20 + -0x68) = 0x439145;\n                            fcn.00451be0();\n                            iVar12 = *(*0x20 + -0x30);\n                        }\n                        *(iVar12 + 0x14) = *(iVar12 + 0x14) + 1;\n                        *(*0x20 + -0x68) = 0x439155;\n                        fcn.0043a420();\n                        iVar9 = *(*0x20 + -0x20);\n                        iVar10 = *(*0x20 + -0x40);\n                        iVar8 = *(*0x20 + -0x48);\n                    }\n                }\n                if (0 < *(*0x20 + -0x4c)) {\n                    while( true ) {\n                        *(*0x20 + -0x68) = 0x43918b;\n                        cVar7 = fcn.0040abc0();\n                        if (cVar7 != '\\0') break;\n                        *(*0x20 + -0x68) = 0x43917a;\n                        fcn.004410e0();\n                    }\n                    *0x7ae610 = 0;\n                }\n                if (*0x7ae608 == 0) {\n                    iVar8 = 0;\n                    while( true ) {\n                        if (*0x7ada48 <= iVar8) {\n                            *(*0x20 + -0x68) = 0x4391e5;\n                            iVar8 = *0x7ada48;\n                            fcn.0040a460();\n                            if (*0x801c20 == 0) {\n                                *0x7ae600 = 0;\n                            }\n                            else {\n                                *(*0x20 + -0x68) = 0x439209;\n                                fcn.0045dea0(0, iVar8, param_3, param_4);\n                            }\n                            *(*0x20 + -0x68) = 0x439217;\n                            fcn.0040a680();\n                            iVar4 = *(*(*0x20 + -0x38) + 0xd8);\n                            *(*(*0x20 + -0x38) + 0xd8) = iVar4 + -1;\n                            if ((iVar4 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                            }\n                            return;\n                        }\n                        if (*(*(*0x7ada40 + iVar8 * 8) + 0x2278) != 0) break;\n                        iVar8 = iVar8 + 1;\n                    }\n                    *(*0x20 + -0x68) = 0x43925e;\n                    fcn.00433c80();\n                }\n                *(*0x20 + -0x68) = 0x43926f;\n                fcn.00433c80();\n            }\n            *(*0x20 + -0x68) = 0x439285;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + -8) = 0x439290;\n        fcn.004602a0();\n        in_RAX = *(puVar11 + 8);\n        *0x20 = puVar11;\n    } while( true );\n}\n",
        "token_count": 1964
    },
    "004392a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.004392a0(void)\n\n{\n    uint32_t *puVar1;\n    uint64_t uVar2;\n    int32_t iVar3;\n    int64_t unaff_R14;\n    bool bVar4;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    LOCK();\n    puVar1 = *(*(unaff_R14 + 0x30) + 0xa0) + 0x2278;\n    if (*puVar1 != 1) {\n        return *puVar1;\n    }\n    *puVar1 = 0;\n    (***0x7ae600)();\n    fcn.0040a460();\n    iVar3 = *0x7ae608 + -1;\n    bVar4 = *0x7ae608 == 1;\n    *0x7ae608 = iVar3;\n    if (bVar4) {\n        fcn.0040a760();\n    }\n    uVar2 = fcn.0040a680();\n    return uVar2;\n}\n",
        "token_count": 260
    },
    "00439360": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.00439360(ulong arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    int64_t *noname_0;\n    int64_t iVar3;\n    int64_t arg1_00;\n    int64_t arg2;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    int64_t iStack48;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00443b60();\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    arg2 = unaff_R14;\n    iVar4 = unaff_R14;\n    if (*(*(unaff_R14 + 0x30) + 0xa0) == 0) {\n        fcn.004402e0();\n    }\n    if (*0x7ae5d8 != 0) {\n        fcn.0040a460();\n        iStack48 = *0x7ae5d8;\n        iVar3 = 0;\n        while (iStack48 != 0) {\n            if (*(iStack48 + 0xec) == 2) {\n                arg1_00 = *(iStack48 + 0x270);\n                if (*0x801c20 == 0) {\n                    *(iStack48 + 0x270) = iVar3;\n                    iVar3 = iStack48;\n                    iStack48 = arg1_00;\n                }\n                else {\n                    fcn.0045dda0(arg1_00, arg2, in_R8, in_R9);\n                    iVar3 = iStack48;\n                    iStack48 = arg1_00;\n                }\n            }\n            else {\n                if (*(iStack48 + 0xec) == 0) {\n                    fcn.0045ba20();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                }\n                iStack48 = *(iStack48 + 0x270);\n            }\n        }\n        if (*0x801c20 != 0) {\n            fcn.0045dda0(0, arg2, in_R8, in_R9);\n            iVar3 = *0x7ae5d8;\n        }\n        *0x7ae5d8 = iVar3;\n        fcn.0040a680();\n    }\n    noname_0 = fcn.0040c560();\n    if (*0x801c20 == 0) {\n        noname_0[0x11] = unaff_RBX;\n    }\n    else {\n        noname_0 = fcn.0045dea0(unaff_RBX, arg2, in_R8, in_R9);\n    }\n    fcn.004377c0();\n    iVar3 = fcn.0043e400();\n    if (*0x801c20 == 0) {\n        *noname_0 = iVar3;\n    }\n    else {\n        iVar3 = fcn.0045dda0(unaff_RBX, arg2, in_R8, in_R9);\n    }\n    if (*0x801c20 == 0) {\n        *(iVar3 + 0x30) = noname_0;\n    }\n    else {\n        fcn.0045dea0(noname_0, arg2, in_R8, in_R9);\n    }\n    if (in_RAX == *(*(iVar4 + 0x30) + 0xa0)) {\n        fcn.00440460();\n    }\n    iVar2 = *(*(iVar4 + 0x30) + 0xd8);\n    *(*(iVar4 + 0x30) + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    fcn.00443cc0();\n    return noname_0;\n}\n",
        "token_count": 960
    },
    "00439820": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00439820(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int32_t iVar1;\n    int64_t noname_1;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    noname_1 = fcn.00439360(0xffffffffffffffff);\n    iVar2 = fcn.0043e400();\n    *(iVar2 + 0x40) = 0x45dd61;\n    iVar4 = *(iVar2 + 8) + -0x20;\n    *(iVar2 + 0x38) = iVar4;\n    *(iVar2 + 0x60) = 0;\n    *(iVar2 + 0x48) = iVar2;\n    *(iVar2 + 0x78) = *(iVar2 + 0x40);\n    *(iVar2 + 0x70) = iVar4;\n    *(iVar2 + 0x80) = *(iVar2 + 0x38);\n    fcn.00438120(6);\n    iVar4 = noname_1;\n    if (*0x801c20 == 0) {\n        *(iVar2 + 0x30) = noname_1;\n    }\n    else {\n        iVar2 = fcn.0045dec0(iVar2 + 0x30, noname_1, param_3, param_4);\n    }\n    if (*0x801c20 == 0) {\n        *(iVar4 + 0x90) = iVar2;\n    }\n    else {\n        iVar2 = fcn.0045dda0(iVar4 + 0x90, iVar4, param_3, param_4);\n    }\n    *(iVar4 + 0x23c) = *(iVar4 + 0x23c) + 1;\n    *(iVar4 + 0x130) = iVar2;\n    *(iVar2 + 0xe8) = iVar4;\n    LOCK();\n    iVar4 = *0x7ae500 + 1;\n    *0x7ae500 = *0x7ae500 + 1;\n    *(iVar2 + 0x98) = iVar4;\n    fcn.004370a0();\n    iVar1 = *0x7ae548;\n    LOCK();\n    *0x7ae548 = *0x7ae548 + 1;\n    uVar3 = fcn.00439a80(iVar1);\n    *(noname_1 + 0x128) = uVar3;\n    *0x8019d0 = *0x8019d0 + 1;\n    *0x801a88 = noname_1;\n    return;\n}\n",
        "token_count": 650
    },
    "00439a80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00439b20)\n\nuint64_t fcn.00439a80(void)\n\n{\n    bool bVar1;\n    char in_AL;\n    uint64_t uVar2;\n    \n    bVar1 = false;\n    while( true ) {\n        while (*0x801a88 == 1) {\n            fcn.0045fb40();\n        }\n        if ((*0x801a88 != 0) || (in_AL != '\\0')) break;\n        if (!bVar1) {\n            LOCK();\n            *0x8019d4 = *0x8019d4 + 1;\n        }\n        fcn.0045fa60();\n        bVar1 = true;\n    }\n    LOCK();\n    uVar2 = *0x801a88;\n    *0x801a88 = *0x801a88 ^ *0x801a88 ^ 1;\n    return uVar2;\n}\n",
        "token_count": 207
    },
    "00439b80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00439b80(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            *(*0x20 + -0x30) = 0x439bbb;\n            iVar3 = fcn.00439360(arg1);\n            *(iVar3 + 0xa8) = *(*0x20 + 0x10);\n            if (((unaff_R14 == 0) || (arg1 = *(unaff_R14 + 0x30),  arg1 == 0)) ||\n               ((*(*0x20 + -0x10) = iVar3,  *(arg1 + 0x238) == 0 && (*(arg1 + 0xe8) == '\\0')))) {\n                *(*0x20 + -0x30) = 0x439ca6;\n                fcn.00439d20();\n                iVar2 = *(*(unaff_R14 + 0x30) + 0xd8);\n                *(*(unaff_R14 + 0x30) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(*0x20 + -0x30) = 0x439c14;\n            fcn.0040a460();\n            if (*0x801d20 != 0) {\n                iVar3 = *(*0x20 + -0x10);\n                *(iVar3 + 0x128) = *0x801d08;\n                *0x801d08 = iVar3;\n                if (*0x801d10 != '\\0') {\n                    *0x801d10 = '\\0';\n                    *(*0x20 + -0x30) = 0x439c5d;\n                    fcn.0040a760();\n                }\n                *(*0x20 + -0x30) = 0x439c6b;\n                fcn.0040a680();\n                iVar2 = *(*(unaff_R14 + 0x30) + 0xd8);\n                *(*(unaff_R14 + 0x30) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            unaff_RBX = 0x2a;\n            *(*0x20 + -0x30) = 0x439ceb;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x439d05;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 928
    },
    "00439d20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00439d20(void)\n\n{\n    ulong *in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x8019ab == '\\0') {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x40) = 0x439de5;\n                fcn.00443b60();\n                *(*0x20 + -0x40) = 0x439def;\n                fcn.00430540();\n                *(*0x20 + -0x40) = 0x439dfb;\n                fcn.00443cc0();\n                return;\n            }\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x18) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            if (*0x7acdd0 != 0) {\n                *(*0x20 + -0x20) = *in_RAX;\n                *(*0x20 + -0x18) = in_RAX + 0xb;\n                *(*0x20 + -0x10) = fcn.0045b960;\n                *(*0x20 + -0x40) = 0x439d8f;\n                fcn.00443b60();\n                *(*0x20 + -0x38) = *0x7acdd0;\n                *(*0x20 + -0x30) = *0x20 + -0x20;\n                *(*0x20 + -0x40) = 0x439da9;\n                fcn.0045d980();\n                *(*0x20 + -0x40) = 0x439dc9;\n                fcn.00443cc0();\n                return;\n            }\n            *(*0x20 + -0x40) = 0x439e16;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x439e25;\n        fcn.0045bb60();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 653
    },
    "00439e40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00439e40(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar3 = *(unaff_R14 + 0x30);\n    LOCK();\n    if (*0x801d20 != 0) {\n        iVar2 = *(iVar3 + 0xd8);\n        *(iVar3 + 0xd8) = iVar2 + -1;\n        if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        return;\n    }\n    *0x801d20 = 1;\n    fcn.00439b80(0xffffffffffffffff);\n    iVar2 = *(iVar3 + 0xd8);\n    *(iVar3 + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 346
    },
    "0043a020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043a020(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(unaff_R14 + 0x30);\n            if (*(iVar1 + 0xd8) == 0) {\n                if (*(iVar1 + 0xa0) == 0) {\n                    if (*(iVar1 + 0xe4) == '\\0') {\n                        *(*0x20 + -0x10) = unaff_R14;\n                        *(*0x20 + -0x30) = 0x43a079;\n                        fcn.0040a460();\n                        *(*0x20 + -0x30) = 0x43a087;\n                        fcn.00441ce0();\n                        *(*0x20 + -0x30) = 0x43a095;\n                        fcn.0040a680();\n                        *(*0x20 + -0x18) = unaff_R14;\n                        *(*0x20 + -0x30) = 0x43a0ac;\n                        fcn.0040a7e0();\n                        *(*(*(*0x20 + -0x18) + 0x30) + 0x118) = 0;\n                        *(*0x20 + -0x30) = 0x43a0d5;\n                        fcn.004402e0();\n                        *(*(*(*0x20 + -0x10) + 0x30) + 0xa8) = 0;\n                        return;\n                    }\n                    *(*0x20 + -0x30) = 0x43a105;\n                    fcn.00433c80();\n                }\n                *(*0x20 + -0x30) = 0x43a116;\n                fcn.00433c80();\n            }\n            *(*0x20 + -0x30) = 0x43a127;\n            fcn.00433c80();\n        }\n        *(puVar2 + -8) = 0x43a12d;\n        fcn.0045bb60();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 576
    },
    "0043a160": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043a160(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong in_RAX;\n    int64_t iVar4;\n    ulong uVar5;\n    char cVar6;\n    int32_t iVar7;\n    uchar unaff_BL;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_BL;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            *(*0x20 + -0x20) = *(unaff_R14 + 0x30);\n            *(*0x20 + -0x48) = 0x43a1a5;\n            fcn.0040a460();\n            iVar4 = *(*0x20 + 8);\n            if (iVar4 == 0) {\n                *(*0x20 + -0x48) = 0x43a1b6;\n                iVar4 = fcn.00442120();\n                if (iVar4 == 0) {\n                    *(*0x20 + -0x48) = 0x43a2c5;\n                    fcn.0040a680();\n                    if (*(*0x20 + 0x10) == '\\0') {\ncode_r0x0043a2e5:\n                        iVar2 = *(*(*0x20 + -0x20) + 0xd8);\n                        *(*(*0x20 + -0x20) + 0xd8) = iVar2 + -1;\n                        if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return;\n                    }\n                    LOCK();\n                    iVar2 = *0x7ae55c + -1;\n                    iVar7 = *0x7ae55c + -1;\n                    cVar6 = iVar7;\n                    *0x7ae55c = iVar2;\n                    if (-1 < iVar7) goto code_r0x0043a2e5;\n                    *(*0x20 + -0x48) = 0x43a32b;\n                    iVar4 = fcn.00433c80();\n                    goto code_r0x0043a32b;\n                }\n            }\n            iVar3 = *0x7ae520;\n            if (*0x7ae520 != 0) {\n                *0x7ae520 = *(*0x7ae520 + 0x128);\n                *0x7ae528 = *0x7ae528 + -1;\n            }\n            *(*0x20 + -0x18) = iVar4;\n            if (iVar3 == 0) {\n                *(*0x20 + -0x48) = 0x43a1f2;\n                uVar5 = fcn.00437760();\n                *(*0x20 + -0x28) = uVar5;\n                *(*0x20 + -0x48) = 0x43a205;\n                fcn.0040a680();\n                *(*0x20 + -0x48) = 0x43a22f;\n                fcn.00439b80(*(*0x20 + -0x28));\n                iVar2 = *(*(*0x20 + -0x20) + 0xd8);\n                *(*(*0x20 + -0x20) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(*0x20 + -0x10) = iVar3;\n            *(*0x20 + -0x48) = 0x43a278;\n            fcn.0040a680();\n            iVar4 = *(*0x20 + -0x10);\n            if (*(iVar4 + 0xe4) == '\\0') {\n                if (*(iVar4 + 0xa8) == 0) {\n                    cVar6 = *(*0x20 + 0x10);\n                    if (cVar6 == '\\0') {\n                        cVar6 = '\\0';\ncode_r0x0043a32b:\n                        *(iVar4 + 0xe4) = cVar6;\n                        *(iVar4 + 0xa8) = *(*0x20 + -0x18);\n                        *(*0x20 + -0x48) = 0x43a348;\n                        fcn.0040a760();\n                        iVar2 = *(*(*0x20 + -0x20) + 0xd8);\n                        *(*(*0x20 + -0x20) + 0xd8) = iVar2 + -1;\n                        if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return;\n                    }\n                    iVar3 = *(*0x20 + -0x18);\n                    do {\n                    } while (*(iVar3 + 0x194) != *(iVar3 + 0x194));\n                    if ((*(iVar3 + 0x194) == *(iVar3 + 400)) && (*(iVar3 + 0x998) == 0)) goto code_r0x0043a32b;\n                    *(*0x20 + -0x48) = 0x43a3c5;\n                    fcn.00433c80();\n                }\n                *(*0x20 + -0x48) = 0x43a3d6;\n                fcn.00433c80();\n            }\n            unaff_BL = 0x15;\n            *(*0x20 + -0x48) = 0x43a3e7;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar8 + 8) = in_RAX;\n        puVar8[0x10] = unaff_BL;\n        *(puVar8 + -8) = 0x43a3f6;\n        fcn.0045bb60();\n        in_RAX = *(puVar8 + 8);\n        unaff_BL = puVar8[0x10];\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1543
    },
    "0043a420": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043a420(void)\n\n{\n    int64_t iVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    do {\n    } while (*(in_RAX + 0x194) != *(in_RAX + 0x194));\n    if (((*(in_RAX + 0x194) != *(in_RAX + 400)) || (*(in_RAX + 0x998) != 0)) || (*0x7ae570 != 0)) {\n        fcn.0043a160();\n        return;\n    }\n    if (((*0x7b3b90 != '\\0') || (*0x7b3b91 != '\\0')) && ((*0x7b3be8 != 0 && ((*0x7b3bd8 != 0 || (*0x7b3b91 != '\\0'))))))\n    {\n        fcn.0043a160();\n        return;\n    }\n    if (*0x8019e4 != 0) {\n        if ((*(in_RAX + 0x1240) == 0) || ((*(*(in_RAX + 0x1240) + 0x10) == 0 && (*(*(in_RAX + 0x1248) + 0x10) == 0)))) {\n            if (*0x7adf60 == 0) {\n                if (*0x7adfe8 < *0x7adfec) {\n                    bVar5 = true;\n                }\n                else {\n                    bVar5 = false;\n                }\n            }\n            else {\n                bVar5 = true;\n            }\n        }\n        else {\n            bVar5 = true;\n        }\n        if (bVar5) {\n            fcn.0043a160();\n            return;\n        }\n    }\n    uVar2 = *0x7ae55c + *0x7ae558;\n    if ((*0x7ae55c + *0x7ae558 == 0) && (LOCK(),  uVar2 = in_RAX,  *0x7ae55c == 0)) {\n        *0x7ae55c = 1;\n        fcn.0043a160();\n        return;\n    }\n    fcn.0040a460(uVar2);\n    if (*0x7ae5e0 != 0) {\n        *(in_RAX + 4) = 3;\n        iVar3 = *0x7ae5e4 + -1;\n        bVar5 = *0x7ae5e4 == 1;\n        *0x7ae5e4 = iVar3;\n        if (bVar5) {\n            fcn.0040a760();\n        }\n        fcn.0040a680();\n        return;\n    }\n    if (*(in_RAX + 0x2278) == 0) {\n        bVar5 = false;\n    }\n    else {\n        LOCK();\n        bVar5 = *(in_RAX + 0x2278) == 1;\n        if (bVar5) {\n            *(in_RAX + 0x2278) = 0;\n        }\n    }\n    if (bVar5) {\n        (***0x7ae600)();\n        iVar3 = *0x7ae608 + -1;\n        bVar5 = *0x7ae608 == 1;\n        *0x7ae608 = iVar3;\n        if (bVar5) {\n            fcn.0040a760();\n        }\n    }\n    if (*0x7ae570 == 0) {\n        if ((*0x7ae558 == *0x8019f0 + -1) && (*0x7ae508 != 0)) {\n            fcn.0040a680();\n            fcn.0043a160();\n            return;\n        }\n        iVar1 = *(in_RAX + 0x1208);\n        iVar4 = *(in_RAX + 0x1210);\n        if ((iVar1 != 0) && ((iVar4 == 0 || (iVar1 <= iVar4)))) {\n            iVar4 = iVar1;\n        }\n        fcn.00441f80();\n        fcn.0040a680();\n        if (iVar4 != 0) {\n            fcn.0043c0c0();\n        }\n        return;\n    }\n    fcn.0040a680();\n    fcn.0043a160();\n    return;\n}\n",
        "token_count": 1036
    },
    "0043a7c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043a7c0(void)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar2 = *(unaff_R14 + 0x30);\n            if ((*(iVar2 + 0x130) != 0) && (*(*(iVar2 + 0x130) + 0xe8) == iVar2)) {\n                *(*0x20 + -0x18) = unaff_R14;\n                if (*(iVar2 + 0xa0) != 0) {\n                    *(*0x20 + -0x50) = 0x43a810;\n                    fcn.00440460();\n                    *(*0x20 + -0x50) = 0x43a815;\n                    fcn.0043a420();\n                }\n                *(*0x20 + -0x50) = 0x43a81f;\n                fcn.004405c0();\n                *(*0x20 + -0x50) = 0x43a825;\n                fcn.00438ca0();\n                uVar1 = *(*(*(*(*0x20 + -0x18) + 0x30) + 0x130) + 0x90);\n                if ((uVar1 & 0xffffefff) == 1) {\n                    *(*0x20 + -0x50) = 0x43a856;\n                    fcn.004402e0();\n                    *(*(*(*0x20 + -0x18) + 0x30) + 0xa8) = 0;\n                    return;\n                }\n                *(*0x20 + -0x2c) = uVar1;\n                *(*0x20 + -0x50) = 0x43a87d;\n                fcn.00435540();\n                *(*0x20 + -0x50) = 0x43a88e;\n                fcn.00435e40();\n                *(*0x20 + -0x50) = 0x43a899;\n                fcn.00435b40();\n                *(*0x20 + -0x50) = 0x43a8aa;\n                fcn.00435e40();\n                *(*0x20 + -0x50) = 0x43a8af;\n                fcn.004355c0();\n                iVar2 = *(*(*(*0x20 + -0x18) + 0x30) + 0x130);\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x20) = unaff_R14;\n                *(*0x20 + -0x30) = *(iVar2 + 0x90);\n                *(*0x20 + -0x28) = *(iVar2 + 0x98);\n                *(*0x20 + -0x50) = 0x43a8e5;\n                fcn.00435540();\n                *(*0x20 + -0x50) = 0x43a8f6;\n                fcn.00435e40();\n                *(*0x20 + -0x50) = 0x43a905;\n                fcn.00435dc0();\n                *(*0x20 + -0x50) = 0x43a916;\n                fcn.00435e40();\n                *(*0x20 + -0x50) = 0x43a925;\n                fcn.00435c40();\n                *(*0x20 + -0x50) = 0x43a936;\n                fcn.00435e40();\n                *(*0x20 + -0x50) = 0x43a945;\n                fcn.00435b40();\n                *(*0x20 + -0x50) = 0x43a94a;\n                fcn.004357a0();\n                *(*0x20 + -0x50) = 0x43a94f;\n                fcn.004355c0();\n                *(*0x20 + -0x34) = *(*(*0x20 + -0x20) + 0x90);\n                *(*0x20 + -0x28) = *(*(*0x20 + -0x20) + 0x98);\n                *(*0x20 + -0x50) = 0x43a96f;\n                fcn.00435540();\n                *(*0x20 + -0x50) = 0x43a985;\n                fcn.00435e40();\n                *(*0x20 + -0x50) = 0x43a98f;\n                fcn.00435dc0();\n                *(*0x20 + -0x50) = 0x43a9a5;\n                fcn.00435e40();\n                *(*0x20 + -0x50) = 0x43a9af;\n                fcn.00435c40();\n                *(*0x20 + -0x50) = 0x43a9c5;\n                fcn.00435e40();\n                *(*0x20 + -0x50) = 0x43a9d0;\n                fcn.00435b40();\n                *(*0x20 + -0x50) = 0x43a9d5;\n                fcn.004357a0();\n                *(*0x20 + -0x50) = 0x43a9da;\n                fcn.004355c0();\n                *(*0x20 + -0x50) = 0x43a9eb;\n                fcn.00433c80();\n            }\n            *(*0x20 + -0x50) = 0x43a9fc;\n            fcn.00433c80();\n        }\n        *(puVar3 + -8) = 0x43aa05;\n        fcn.0045bb60();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1408
    },
    "0043aa20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043aa20(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(in_RAX + 0xe8);\n            if (*(unaff_R14 + 0x30) != iVar1) {\n                if (*(iVar1 + 0xa8) == 0) {\n                    *(*0x20 + -0x10) = iVar1;\n                    *(*0x20 + -0x28) = 0x43aa5f;\n                    fcn.004405c0();\n                    *(*0x20 + -0x28) = 0x43aa65;\n                    uVar2 = fcn.00440460();\n                    *(*(*0x20 + -0x10) + 0xa8) = uVar2;\n                    *(*0x20 + -0x28) = 0x43aa7e;\n                    fcn.0040a760();\n                    *(*0x20 + -0x28) = 0x43aa85;\n                    fcn.0043a020();\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x43aaa5;\n                fcn.00433c80();\n            }\n            *(*0x20 + -0x28) = 0x43aab6;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x43aac5;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 493
    },
    "0043aae0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043aae0(void)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x7ae5e0 != 0) {\n                if (*(*(unaff_R14 + 0x30) + 0xe4) == '\\0') {\ncode_r0x0043ab30:\n                    *(*0x20 + -0x28) = 0x43ab35;\n                    uVar2 = fcn.00440460();\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0x28) = 0x43ab48;\n                    fcn.0040a460();\n                    *(*(*0x20 + -0x10) + 4) = 3;\n                    iVar1 = *0x7ae5e4 + -1;\n                    bVar5 = *0x7ae5e4 == 1;\n                    *0x7ae5e4 = iVar1;\n                    if (bVar5) {\n                        *(*0x20 + -0x28) = 0x43ab74;\n                        fcn.0040a760();\n                    }\n                    *(*0x20 + -0x28) = 0x43ab85;\n                    fcn.0040a680();\n                    *(*0x20 + -0x28) = 0x43ab8a;\n                    fcn.0043a020();\n                    return;\n                }\n                *(*(unaff_R14 + 0x30) + 0xe4) = 0;\n                LOCK();\n                iVar1 = *0x7ae55c + -1;\n                iVar3 = *0x7ae55c + -1;\n                *0x7ae55c = iVar1;\n                if (-1 < iVar3) goto code_r0x0043ab30;\n                *(*0x20 + -0x28) = 0x43aba5;\n                fcn.00433c80();\n            }\n            *(*0x20 + -0x28) = 0x43abb6;\n            fcn.00433c80();\n        }\n        *(puVar4 + -8) = 0x43abbc;\n        fcn.0045bb60();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 636
    },
    "0043abe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043abe0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    int64_t *in_RAX;\n    int64_t *piVar2;\n    char unaff_BL;\n    int64_t unaff_R14;\n    int64_t iVar3;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (*0x7aa444 != '\\0') {\n        fcn.0042b3c0();\n    }\n    iVar3 = unaff_R14;\n    if (*0x801c20 == 0) {\n        *(*(unaff_R14 + 0x30) + 0x90) = in_RAX;\n        piVar2 = in_RAX;\n    }\n    else {\n        piVar2 = fcn.0045dda0(arg1, unaff_R14, arg3, arg4);\n    }\n    if (*0x801c20 == 0) {\n        piVar2[6] = *(unaff_R14 + 0x30);\n    }\n    else {\n        fcn.0045df00(arg1, unaff_R14, arg3, arg4);\n    }\n    fcn.00438120(2);\n    in_RAX[0x15] = 0;\n    *(in_RAX + 0xb1) = 0;\n    in_RAX[2] = *in_RAX + 0x13a0;\n    if (unaff_BL == '\\0') {\n        piVar1 = *(*(iVar3 + 0x30) + 0xa0) + 0x10;\n        *piVar1 = *piVar1 + 1;\n    }\n    if (*(*(iVar3 + 0x30) + 0xe0) != *0x7ae618) {\n        fcn.004312c0();\n    }\n    if (*0x7b3b90 != '\\0') {\n        if ((in_RAX[0xe] != 0) && (*(in_RAX + 0xbb) != '\\0')) {\n            fcn.004522a0();\n        }\n        fcn.00451f40();\n    }\n    fcn.0045b980();\n    return;\n}\n",
        "token_count": 530
    },
    "0043ad60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043b086)\n// WARNING: Removing unreachable block (ram,0x0043b08b)\n\nuint64_t fcn.0043ad60(void)\n\n{\n    int32_t iVar1;\n    ulong noname_2;\n    char cVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t *piVar9;\n    uint32_t uVar10;\n    uint64_t uVar11;\n    int64_t unaff_R14;\n    bool bVar12;\n    int64_t iStack232;\n    uint64_t uStack104;\n    ulong uStack96;\n    uint64_t uStack88;\n    ulong uStack80;\n    ulong uStack72;\n    uint64_t uStack64;\n    uint64_t uStack56;\n    ulong uStack48;\n    int64_t iStack40;\n    \n    while (&uStack104 < *(unaff_R14 + 0x10) || &uStack104 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\ncode_r0x0043ad8e:\n    while (uVar8 = *(*(unaff_R14 + 0x30) + 0xa0),  *0x7ae5e0 != 0) {\n        fcn.0043aae0();\n    }\n    if (*(uVar8 + 0x2278) != 0) {\n        fcn.004392a0();\n    }\n    uVar3 = fcn.0043c720();\n    if (((*0x7b3b90 != '\\0') || (*0x7b3b91 != '\\0')) && (uVar4 = fcn.00450ae0(),  uVar4 != 0)) {\n        fcn.00438120(1);\n        fcn.00452180();\n        return uVar4;\n    }\n    if ((*0x8019e4 != 0) && (uVar4 = fcn.0041df40(uVar3),  uVar4 != 0)) {\n        return uVar4;\n    }\n    if ((*(uVar8 + 0x10) * -0x3ef368eb < 0x4325c54) && (0 < *0x7ae570)) {\n        fcn.0040a460();\n        uVar4 = fcn.00441d40();\n        fcn.0040a680();\n        if (uVar4 != 0) {\n            return uVar4;\n        }\n    }\n    if (((*0x8019a6 != '\\0') && (*0x8019a7 != '\\0')) && (iVar5 = fcn.00414fa0(uVar8),  iVar5 != 0)) {\n        fcn.004379c0(1);\n    }\n    iVar5 = **0x7a5dd8;\n    if (iVar5 != 0) {\n        fcn.0045d980(uVar8);\n        iStack232 = iVar5;\n    }\n    uVar4 = fcn.004426e0(uVar8);\n    if (uVar4 != 0) {\n        return uVar4;\n    }\n    if (*0x7ae570 != 0) {\n        fcn.0040a460();\n        uStack56 = fcn.00441d40();\n        fcn.0040a680();\n        if (uStack56 != 0) {\n            return uStack56;\n        }\n    }\n    if (*0x8019fc == 0) {\n        bVar12 = false;\n    }\n    else if (*0x801a00 == 0) {\n        bVar12 = false;\n    }\n    else {\n        bVar12 = *0x7ae508 != 0;\n    }\n    if ((bVar12) && (uVar4 = fcn.0042d9a0(),  uVar4 != 0)) {\n        fcn.0043c1a0();\n        fcn.00438120(1);\n        if (*0x7b3b90 != '\\0') {\n            fcn.00452180();\n        }\n        return uVar4;\n    }\n    if (*(*(unaff_R14 + 0x30) + 0xe4) == '\\0') {\n        uVar10 = *0x8019f0 - *0x7ae558;\n        bVar12 = *0x7ae55c << 1 < uVar10;\n    }\n    else {\n        bVar12 = true;\n        uVar10 = *0x8019f0;\n    }\n    uVar4 = uVar10;\n    if (bVar12) goto code_r0x0043b036;\n    uVar4 = 0;\n    goto code_r0x0043b095;\ncode_r0x0043b036:\n    if (*(*(unaff_R14 + 0x30) + 0xe4) == '\\0') {\n        *(*(unaff_R14 + 0x30) + 0xe4) = 1;\n        LOCK();\n        *0x7ae55c = *0x7ae55c + 1;\n    }\n    uVar11 = fcn.0043b980();\n    if (uVar11 != 0) {\n        return uVar11;\n    }\n    if (!bVar12) {\n        if (uVar4 == 0) {\n            uVar4 = 0;\n        }\ncode_r0x0043b095:\n        if (*0x8019e4 == 0) {\n            cVar2 = '\\0';\n        }\n        else {\n            if ((*(uVar8 + 0x1240) == 0) || ((*(*(uVar8 + 0x1240) + 0x10) == 0 && (*(*(uVar8 + 0x1248) + 0x10) == 0))))\n            {\n                if (*0x7adf60 == 0) {\n                    if (*0x7adfe8 < *0x7adfec) {\n                        bVar12 = true;\n                    }\n                    else {\n                        bVar12 = false;\n                    }\n                }\n                else {\n                    bVar12 = true;\n                }\n            }\n            else {\n                bVar12 = true;\n            }\n            if (bVar12) {\n                cVar2 = fcn.0041ea60();\n            }\n            else {\n                cVar2 = '\\0';\n            }\n        }\n        uVar11 = uVar8;\n        if (cVar2 == '\\0') goto code_r0x0043b14d;\n        while( true ) {\n            if (*0x801ab8 == 0) {\n                piVar9 = NULL;\n            }\n            else {\n                piVar9 = (*0x801ab8 >> 0x13) << 3;\n                *0x801ab8 = *piVar9;\n                LOCK();\n            }\n            if (piVar9 != NULL) {\n                *(uVar11 + 0x1230) = 3;\n                uVar8 = piVar9[2];\n                fcn.00438120(1);\n                if (*0x7b3b90 != '\\0') {\n                    fcn.00452180();\n                }\n                return uVar8;\n            }\n            fcn.0041eb40();\ncode_r0x0043b14d:\n            noname_2 = *0x7adb10;\n            uVar3 = *0x7adad0;\n            uStack48 = *0x7ada40;\n            uStack104 = *0x7ada48;\n            uStack96 = *0x7ada50;\n            uStack72 = *0x7adac0;\n            uStack80 = *0x7adb00;\n            uVar11 = *0x7ada48;\n            fcn.0040a460();\n            if ((*0x7ae5e0 != 0) || (*(uVar8 + 0x2278) != 0)) break;\n            if (*0x7ae570 != 0) {\n                uStack64 = fcn.00441d40();\n                fcn.0040a680();\n                return uStack64;\n            }\n            uVar6 = fcn.00440460();\n            if (uVar6 == uVar8) {\n                fcn.00441f80();\n                fcn.0040a680();\n                uVar6 = uStack104;\n                cVar2 = *(*(unaff_R14 + 0x30) + 0xe4);\n                uVar7 = uVar4;\n                if (cVar2 == '\\0') {\ncode_r0x0043b343:\n                    iVar5 = *0x7ae508;\n                    if (*0x8019fc == 0) {\n                        bVar12 = false;\n                    }\n                    else if ((*0x801a00 == 0) && (uVar7 == 0)) {\n                        bVar12 = false;\n                    }\n                    else {\n                        *0x7ae508 = 0;\n                        bVar12 = iVar5 != 0;\n                    }\n                    if (!bVar12) {\n                        if ((uVar7 != 0 && *0x8019fc != 0) && ((*0x7ae510 == 0 || (uVar7 < *0x7ae510)))) {\n                            fcn.0042d8a0();\n                        }\ncode_r0x0043b74d:\n                        fcn.0043a020();\n                        goto code_r0x0043ad8e;\n                    }\n                    uVar11 = 0x7ae510;\n                    *0x7ae510 = uVar7;\n                    if (*(*(unaff_R14 + 0x30) + 0xa0) == 0) {\n                        if (*(*(unaff_R14 + 0x30) + 0xe4) == '\\0') {\n                            uStack88 = uVar7;\n                            fcn.0045fb60();\n                            uVar8 = fcn.0042d9a0();\n                            iVar5 = *0x7ae508;\n                            *0x7ae510 = 0;\n                            *0x7ae508 = iStack232;\n                            if ((*0x801a90 == 0) || (uVar8 != 0)) {\n                                fcn.0040a460(iVar5);\n                                iStack40 = fcn.00442120();\n                                fcn.0040a680();\n                                if (iStack40 == 0) {\n                                    fcn.0043c1a0();\n                                    goto code_r0x0043b74d;\n                                }\n                                fcn.004402e0();\n                                if (uVar8 != 0) {\n                                    fcn.0043c1a0();\n                                    fcn.00438120(1);\n                                    if (*0x7b3b90 != '\\0') {\n                                        fcn.00452180();\n                                    }\n                                    return uVar8;\n                                }\n                                if (cVar2 != '\\0') {\n                                    *(*(unaff_R14 + 0x30) + 0xe4) = 1;\n                                    LOCK();\n                                    *0x7ae55c = *0x7ae55c + 1;\n                                }\n                            }\n                            else {\n                                fcn.0043a020();\n                            }\n                            goto code_r0x0043ad8e;\n                        }\n                        fcn.00433c80();\n                    }\n                    fcn.00433c80();\n                }\n                else {\n                    *(*(unaff_R14 + 0x30) + 0xe4) = 0;\n                    LOCK();\n                    iVar1 = *0x7ae55c + -1;\n                    uVar10 = *0x7ae55c - 1;\n                    uVar11 = uVar10;\n                    *0x7ae55c = iVar1;\n                    if (-1 < uVar10) {\n                        iVar5 = fcn.0043bd00(uStack96, uVar11, uVar3);\n                        if (iVar5 == 0) {\n                            iVar5 = fcn.0043bee0();\n                            if (iVar5 != 0) {\n                                iStack40 = iVar5;\n                                fcn.004402e0();\n                                *(*(unaff_R14 + 0x30) + 0xe4) = 1;\n                                LOCK();\n                                *0x7ae55c = *0x7ae55c + 1;\n                                *(iStack40 + 0x1230) = 3;\n                                fcn.00438120(1);\n                                if (*0x7b3b90 != '\\0') {\n                                    fcn.00452180();\n                                }\n                                return uVar6;\n                            }\n                            uVar7 = fcn.0043be40(uStack96, uVar11, noname_2, uVar4);\n                            goto code_r0x0043b343;\n                        }\n                        fcn.004402e0();\n                        *(*(unaff_R14 + 0x30) + 0xe4) = 1;\n                        LOCK();\n                        *0x7ae55c = *0x7ae55c + 1;\n                        goto code_r0x0043ad8e;\n                    }\n                }\n                fcn.00433c80();\n            }\n            fcn.00433c80();\n        }\n        fcn.0040a680();\n    }\n    goto code_r0x0043ad8e;\n}\n",
        "token_count": 2970
    },
    "0043bee0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0043bee0(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if ((*0x8019e4 == 0) || (*0x802410 >> 0x20 <= *0x802410)) {\n        return 0;\n    }\n    if (*0x7adf60 == 0) {\n        if (*0x7adfe8 < *0x7adfec) {\n            bVar1 = true;\n        }\n        else {\n            bVar1 = false;\n        }\n    }\n    else {\n        bVar1 = true;\n    }\n    if (!bVar1) {\n        return 0;\n    }\n    fcn.0040a460();\n    iVar3 = fcn.00442120();\n    if (iVar3 == 0) {\n        fcn.0040a680();\n        return 0;\n    }\n    if ((*0x8019e4 != 0) && (cVar2 = fcn.0041ea60(),  cVar2 != '\\0')) {\n        if (*0x801ab8 == 0) {\n            piVar4 = NULL;\n        }\n        else {\n            piVar4 = (*0x801ab8 >> 0x13) << 3;\n            *0x801ab8 = *piVar4;\n            LOCK();\n        }\n        if (piVar4 != NULL) {\n            fcn.0040a680();\n            return iVar3;\n        }\n        fcn.00441f80();\n        fcn.0040a680();\n        fcn.0041eb40();\n        return 0;\n    }\n    fcn.00441f80();\n    fcn.0040a680();\n    return 0;\n}\n",
        "token_count": 449
    },
    "0043c120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043c120(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(*(unaff_R14 + 0x30) + 0xe4) != '\\0') {\n                *(*(unaff_R14 + 0x30) + 0xe4) = 0;\n                LOCK();\n                if (-1 < *0x7ae55c + -1) {\n                    *(*0x20 + -0x20) = 0x43c165;\n                    *0x7ae55c = *0x7ae55c + -1;\n                    fcn.0043a740();\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x43c185;\n                *0x7ae55c = *0x7ae55c + -1;\n                fcn.00433c80();\n            }\n            *(*0x20 + -0x20) = 0x43c196;\n            fcn.00433c80();\n        }\n        *(puVar1 + -8) = 0x43c19c;\n        fcn.0045bb60();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 375
    },
    "0043c1a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t * fcn.0043c1a0(void)\n\n{\n    int64_t *in_RAX;\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t arg1;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    int64_t iStack64;\n    uchar auStack48 [40];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    iVar2 = *in_RAX;\n    if (iVar2 == 0) {\n        return in_RAX;\n    }\n    if (*0x7b3b90 != '\\0') {\n        for (; iVar2 != 0; iVar2 = *(iVar2 + 0xa0)) {\n            fcn.00452180();\n        }\n    }\n    arg1 = 0;\n    iStack64 = *in_RAX;\n    iVar2 = iStack64;\n    iVar3 = 0;\n    while (iVar4 = iVar2,  iVar4 != 0) {\n        fcn.00438120(1);\n        arg1 = arg1 + 1;\n        iVar3 = iVar4;\n        iVar2 = *(iVar4 + 0xa0);\n    }\n    *in_RAX = 0;\n    piVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    if (piVar1 == NULL) {\n        fcn.0040a460();\n        iVar2 = *0x7ae560;\n        iVar4 = *0x7ae568;\n        if ((iVar3 != 0) && (*(iVar3 + 0xa0) = 0,  iVar2 = iStack64,  iVar4 = iVar3,  *0x7ae568 != 0)) {\n            *(*0x7ae568 + 0xa0) = iStack64;\n            iVar2 = *0x7ae560;\n        }\n        *0x7ae568 = iVar4;\n        *0x7ae560 = iVar2;\n        *0x7ae570 = *0x7ae570 + arg1;\n        piVar1 = fcn.0040a680();\n        while ((arg1 != 0 && (*0x7ae558 != 0))) {\n            piVar1 = fcn.0043a160();\n            arg1 = arg1 + -1;\n        }\n        return piVar1;\n    }\n    uVar5 = *0x7ae558;\n    iVar2 = 0;\n    auStack48._0_16_ = in_XMM15;\n    while( true ) {\n        iVar3 = iStack64;\n        if ((uVar5 <= iVar2) || (iStack64 == 0)) break;\n        if (iStack64 != 0) {\n            iStack64 = *(iStack64 + 0xa0);\n        }\n        *(iVar3 + 0xa0) = 0;\n        if (auStack48._8_8_ == 0) {\n            auStack48._0_8_ = iVar3;\n        }\n        else {\n            *(auStack48._8_8_ + 0xa0) = iVar3;\n        }\n        auStack48._0_16_ = CONCAT88(iVar3, auStack48._0_8_);\n        iVar2 = iVar2 + 1;\n    }\n    if (0 < iVar2) {\n        fcn.0040a460();\n        if (auStack48._8_8_ != 0) {\n            *(auStack48._8_8_ + 0xa0) = 0;\n            if (*0x7ae568 == 0) {\n                *0x7ae560 = auStack48._0_8_;\n            }\n            else {\n                *(*0x7ae568 + 0xa0) = auStack48._0_8_;\n            }\n            *0x7ae568 = auStack48._8_8_;\n        }\n        *0x7ae570 = *0x7ae570 + iVar2;\n        fcn.0040a680();\n        iVar3 = iVar2;\n        while ((iVar3 != 0 && (*0x7ae558 != 0))) {\n            fcn.0043a160();\n            iVar3 = iVar3 + -1;\n        }\n        arg1 = arg1 - iVar2;\n    }\n    if (iStack64 != 0) {\n        piVar1 = fcn.004425a0(arg1);\n    }\n    return piVar1;\n}\n",
        "token_count": 1045
    },
    "0043c4c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043c4c0(ulong param_1, int64_t param_2, ulong param_3, ulong param_4)\n\n{\n    ulong arg1;\n    uint8_t uVar1;\n    char cVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int64_t noname_1;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar3 = *(unaff_R14 + 0x30);\n            if (*(iVar3 + 0xd8) == 0) {\n                *(*0x20 + -0x10) = unaff_R14;\n                if (*(iVar3 + 0x130) != 0) {\n                    *(*0x20 + -0x38) = 0x43c4fd;\n                    fcn.0043a7c0();\n                    arg1 = *(*(*(*0x20 + -0x10) + 0x30) + 0x130);\n                    unaff_RBX = 0;\n                    *(*0x20 + -0x38) = 0x43c517;\n                    fcn.0043abe0(arg1, param_2, param_3, param_4);\n                }\n                uVar4 = *(*0x20 + -0x10);\n                param_2 = *(uVar4 + 0x30);\n                if (*(param_2 + 0xe8) == '\\0') {\n                    while( true ) {\n                        param_2 = *(*(uVar4 + 0x30) + 0xa0);\n                        *(param_2 + 0x22c8) = 0;\n                        if ((*(*(uVar4 + 0x30) + 0xe4) != '\\0') &&\n                           ((*(param_2 + 0x998) != 0 || (*(param_2 + 0x194) != *(param_2 + 400))))) break;\n                        *(*0x20 + -0x38) = 0x43c57e;\n                        iVar3 = fcn.0043ad60();\n                        *(*0x20 + -0x18) = iVar3;\n                        *(*0x20 + -0x19) = unaff_RBX;\n                        *(*0x20 + -0x1a) = uVar4;\n                        noname_1 = *(*0x20 + -0x10);\n                        if (*(*(noname_1 + 0x30) + 0xe4) != '\\0') {\n                            *(*0x20 + -0x38) = 0x43c5a5;\n                            fcn.0043c120();\n                            iVar3 = *(*0x20 + -0x18);\n                            uVar4 = *(*0x20 + -0x1a);\n                            noname_1 = *(*0x20 + -0x10);\n                            unaff_RBX = *(*0x20 + -0x19);\n                        }\n                        if (*0x7ae578 == '\\0') {\n                            uVar1 = 0;\n                        }\n                        else {\n                            *(*0x20 + -0x38) = 0x43c5d0;\n                            uVar1 = fcn.00456460();\n                            uVar1 = uVar1 ^ 1;\n                            uVar4 = *(*0x20 + -0x1a);\n                            noname_1 = *(*0x20 + -0x10);\n                            unaff_RBX = *(*0x20 + -0x19);\n                            iVar3 = *(*0x20 + -0x18);\n                        }\n                        if (uVar1 == 0) {\ncode_r0x0043c6a8:\n                            if (uVar4 != '\\0') {\n                                *(*0x20 + -0x38) = 0x43c6b1;\n                                fcn.0043a740();\n                                iVar3 = *(*0x20 + -0x18);\n                                noname_1 = *(*0x20 + -0x10);\n                                unaff_RBX = *(*0x20 + -0x19);\n                            }\n                            if (*(iVar3 + 0xe8) == 0) {\n                                *(*0x20 + -0x38) = 0x43c6d3;\n                                fcn.0043abe0(uVar4, noname_1, param_3, param_4);\n                                return;\n                            }\n                            *(*0x20 + -0x38) = 0x43c533;\n                            fcn.0043aa20();\n                            uVar4 = *(*0x20 + -0x10);\n                        }\n                        else {\n                            *(*0x20 + -0x38) = 0x43c605;\n                            fcn.0040a460();\n                            if (*0x7ae578 == '\\0') {\n                                cVar2 = '\\x01';\n                            }\n                            else {\n                                *(*0x20 + -0x38) = 0x43c625;\n                                cVar2 = fcn.00456460();\n                            }\n                            if (cVar2 != '\\0') {\n                                *(*0x20 + -0x38) = 0x43c694;\n                                fcn.0040a680();\n                                iVar3 = *(*0x20 + -0x18);\n                                uVar4 = *(*0x20 + -0x1a);\n                                noname_1 = *(*0x20 + -0x10);\n                                unaff_RBX = *(*0x20 + -0x19);\n                                goto code_r0x0043c6a8;\n                            }\n                            unaff_RBX = *(*0x20 + -0x18);\n                            *(unaff_RBX + 0xa0) = 0;\n                            uVar4 = unaff_RBX;\n                            if (*0x7ae588 != 0) {\n                                *(*0x7ae588 + 0xa0) = unaff_RBX;\n                                uVar4 = *0x7ae580;\n                            }\n                            *0x7ae580 = uVar4;\n                            *0x7ae590 = *0x7ae590 + 1;\n                            *(*0x20 + -0x38) = 0x43c67c;\n                            *0x7ae588 = unaff_RBX;\n                            fcn.0040a680();\n                            uVar4 = *(*0x20 + -0x10);\n                        }\n                    }\n                    *(*0x20 + -0x38) = 0x43c6ee;\n                    fcn.00433c80();\n                }\n                *(*0x20 + -0x38) = 0x43c6ff;\n                fcn.00433c80();\n            }\n            unaff_RBX = 0x17;\n            *(*0x20 + -0x38) = 0x43c710;\n            fcn.00433c80();\n        }\n        *(puVar5 + -8) = 0x43c716;\n        fcn.0045bb60();\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1641
    },
    "0043c720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0043c720(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    int64_t iStack64;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    iVar1 = *(in_RAX + 0x1208);\n    iVar2 = *(in_RAX + 0x1210);\n    if ((iVar1 != 0) && ((iVar2 == 0 || (iVar1 <= iVar2)))) {\n        iVar2 = iVar1;\n    }\n    if (iVar2 == 0) {\n        return unaff_RBX;\n    }\n    if (unaff_RBX == 0) {\n        fcn.0045fb60();\n        unaff_R14 = **(in_GS_OFFSET + 0x28);\n        unaff_RBX = iStack64;\n    }\n    if ((unaff_RBX < iVar2) &&\n       ((in_RAX != *(*(unaff_R14 + 0x30) + 0xa0) || (*(in_RAX + 0x22a4) <= *(in_RAX + 0x22a0) >> 2)))) {\n        return unaff_RBX;\n    }\n    fcn.0040a460();\n    if (*(in_RAX + 0x2290) != 0) {\n        fcn.0044f920();\n        do {\n            if (*(in_RAX + 0x2290) == 0) break;\n            iVar1 = fcn.0044fd20();\n        } while (iVar1 == 0);\n    }\n    if ((in_RAX == *(*(unaff_R14 + 0x30) + 0xa0)) && (*(in_RAX + 0x2290) >> 2 < *(in_RAX + 0x22a4))) {\n        fcn.00450140();\n    }\n    fcn.0040a680();\n    return unaff_RBX;\n}\n",
        "token_count": 492
    },
    "0043cae0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0043cae0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if ((*(in_RAX + 0x90) & 0xffffefff) == 2) {\n                *(*0x20 + -0x38) = 0x43cb1f;\n                fcn.00438120(1);\n                *(*(*(unaff_R14 + 0x30) + 0x90) + 0x30) = 0;\n                *(*(unaff_R14 + 0x30) + 0x90) = 0;\n                *(*0x20 + -0x38) = 0x43cb4e;\n                fcn.0040a460();\n                iVar1 = *(*0x20 + 8);\n                *(iVar1 + 0xa0) = 0;\n                iVar2 = iVar1;\n                if (*0x7ae568 != 0) {\n                    *(*0x7ae568 + 0xa0) = iVar1;\n                    iVar2 = *0x7ae560;\n                }\n                *0x7ae560 = iVar2;\n                *0x7ae570 = *0x7ae570 + 1;\n                *(*0x20 + -0x38) = 0x43cb9f;\n                *0x7ae568 = iVar1;\n                fcn.0040a680();\n                *(*0x20 + -0x38) = 0x43cba5;\n                fcn.0043c4c0();\n                return;\n            }\n            *(*0x20 + -0x10) = unaff_R14;\n            *(*0x20 + -0x1c) = *(in_RAX + 0x90);\n            *(*0x20 + -0x18) = *(in_RAX + 0x98);\n            *(*0x20 + -0x38) = 0x43cbd0;\n            fcn.00435540();\n            *(*0x20 + -0x38) = 0x43cbe5;\n            fcn.00435e40();\n            *(*0x20 + -0x38) = 0x43cbef;\n            fcn.00435dc0();\n            *(*0x20 + -0x38) = 0x43cc05;\n            fcn.00435e40();\n            *(*0x20 + -0x38) = 0x43cc0f;\n            fcn.00435c40();\n            *(*0x20 + -0x38) = 0x43cc25;\n            fcn.00435e40();\n            *(*0x20 + -0x38) = 0x43cc30;\n            fcn.00435b40();\n            *(*0x20 + -0x38) = 0x43cc35;\n            fcn.004357a0();\n            *(*0x20 + -0x38) = 0x43cc3a;\n            fcn.004355c0();\n            *(*0x20 + -0x20) = *(*(*0x20 + -0x10) + 0x90);\n            *(*0x20 + -0x18) = *(*(*0x20 + -0x10) + 0x98);\n            *(*0x20 + -0x38) = 0x43cc5a;\n            fcn.00435540();\n            *(*0x20 + -0x38) = 0x43cc6b;\n            fcn.00435e40();\n            *(*0x20 + -0x38) = 0x43cc75;\n            fcn.00435dc0();\n            *(*0x20 + -0x38) = 0x43cc86;\n            fcn.00435e40();\n            *(*0x20 + -0x38) = 0x43cc90;\n            fcn.00435c40();\n            *(*0x20 + -0x38) = 0x43cca5;\n            fcn.00435e40();\n            *(*0x20 + -0x38) = 0x43ccb0;\n            fcn.00435b40();\n            *(*0x20 + -0x38) = 0x43ccb5;\n            fcn.004357a0();\n            *(*0x20 + -0x38) = 0x43ccba;\n            fcn.004355c0();\n            *(*0x20 + -0x38) = 0x43cccb;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x43ccd6;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1213
    },
    "0043ce40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043ce40(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (*0x7b3b90 != '\\0') {\n        *(unaff_R14 + 0xe0) = *(*(unaff_R14 + 0x30) + 0xa0);\n        fcn.00450c80(0);\n    }\n    fcn.0043cae0();\n    return;\n}\n",
        "token_count": 141
    },
    "0043cec0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043cec0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (*0x7b3b90 != '\\0') {\n                unaff_RBX = 0;\n                *(*0x20 + -0x48) = 0x43cef2;\n                fcn.00452100();\n                in_RAX = *(*0x20 + 8);\n            }\n            if ((*(in_RAX + 0x90) & 0xffffefff) == 2) {\n                *(in_RAX + 0xb0) = 0x19;\n                if (*(in_RAX + 0xb4) == '\\0') goto code_r0x0043cf3e;\n                *(*0x20 + -0x48) = 0x43cf27;\n                iVar1 = fcn.0044cfe0();\n                if (iVar1 != 0) {\n                    if ((*(iVar1 + 0x25) & 2) == 0) {\ncode_r0x0043cf3e:\n                        *(*0x20 + -0x48) = 0x43cf4d;\n                        fcn.00438540(0x1009);\n                        *(*(*(unaff_R14 + 0x30) + 0x90) + 0x30) = 0;\n                        *(*(unaff_R14 + 0x30) + 0x90) = 0;\n                        *(*0x20 + -0x48) = 0x43cf85;\n                        fcn.00437c80(9);\n                        *(*0x20 + -0x48) = 0x43cf8a;\n                        fcn.0043c4c0();\n                        return;\n                    }\n                    *(*0x20 + -0x48) = 0x43cf99;\n                    uVar2 = fcn.0044d760();\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0x20) = unaff_RBX;\n                    *(*0x20 + -0x48) = 0x43cfa8;\n                    fcn.00435540();\n                    *(*0x20 + -0x48) = 0x43cfb9;\n                    fcn.00435e40();\n                    *(*0x20 + -0x48) = 0x43cfc8;\n                    fcn.00435e40();\n                    *(*0x20 + -0x48) = 0x43cfd9;\n                    fcn.00435e40();\n                    *(*0x20 + -0x48) = 0x43cfde;\n                    fcn.004355c0();\n                    *(*0x20 + -0x48) = 0x43cfef;\n                    fcn.00433c80();\n                }\n                *(*0x20 + -0x48) = 0x43d005;\n                in_RAX = fcn.00433c80();\n            }\n            *(*0x20 + -0x18) = unaff_R14;\n            *(*0x20 + -0x2c) = *(in_RAX + 0x90);\n            *(*0x20 + -0x28) = *(in_RAX + 0x98);\n            *(*0x20 + -0x48) = 0x43d026;\n            fcn.00435540();\n            *(*0x20 + -0x48) = 0x43d037;\n            fcn.00435e40();\n            *(*0x20 + -0x48) = 0x43d045;\n            fcn.00435dc0();\n            *(*0x20 + -0x48) = 0x43d056;\n            fcn.00435e40();\n            *(*0x20 + -0x48) = 0x43d065;\n            fcn.00435c40();\n            *(*0x20 + -0x48) = 0x43d076;\n            fcn.00435e40();\n            *(*0x20 + -0x48) = 0x43d085;\n            fcn.00435b40();\n            *(*0x20 + -0x48) = 0x43d08a;\n            fcn.004357a0();\n            *(*0x20 + -0x48) = 0x43d08f;\n            fcn.004355c0();\n            *(*0x20 + -0x30) = *(*(*0x20 + -0x18) + 0x90);\n            *(*0x20 + -0x28) = *(*(*0x20 + -0x18) + 0x98);\n            *(*0x20 + -0x48) = 0x43d0af;\n            fcn.00435540();\n            *(*0x20 + -0x48) = 0x43d0c5;\n            fcn.00435e40();\n            *(*0x20 + -0x48) = 0x43d0cf;\n            fcn.00435dc0();\n            *(*0x20 + -0x48) = 0x43d0e5;\n            fcn.00435e40();\n            *(*0x20 + -0x48) = 0x43d0ef;\n            fcn.00435c40();\n            *(*0x20 + -0x48) = 0x43d105;\n            fcn.00435e40();\n            *(*0x20 + -0x48) = 0x43d110;\n            fcn.00435b40();\n            *(*0x20 + -0x48) = 0x43d115;\n            fcn.004357a0();\n            *(*0x20 + -0x48) = 0x43d11a;\n            fcn.004355c0();\n            unaff_RBX = 0xc;\n            *(*0x20 + -0x48) = 0x43d12b;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x43d136;\n        fcn.004602a0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1550
    },
    "0043d5c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043d5c0(void)\n\n{\n    code *pcVar1;\n    ulong in_RAX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    if ((**(unaff_R14 + 0x30) != unaff_R14) && ((*(unaff_R14 + 0x30))[10] != unaff_R14)) {\n        *(unaff_R14 + 0x40) = in_RAX;\n        *(unaff_R14 + 0x38) = unaff_RBX;\n        *(unaff_R14 + 0x58) = in_XMM15_Da;\n        *(unaff_R14 + 0x5c) = in_XMM15_Db;\n        *(unaff_R14 + 0x60) = in_XMM15_Dc;\n        *(unaff_R14 + 100) = in_XMM15_Dd;\n        if (*(unaff_R14 + 0x50) != 0) {\n            fcn.00437080();\n        }\n        return;\n    }\n    fcn.00433c80();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 296
    },
    "0043d620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043d620(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t in_RAX;\n    uint64_t unaff_RBX;\n    uint64_t *unaff_R14;\n    \n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + 1;\n    unaff_R14[2] = 0xfffffffffffffade;\n    *(unaff_R14 + 0xb7) = 1;\n    fcn.0043d5c0();\n    unaff_R14[0xe] = unaff_RBX;\n    unaff_R14[0xf] = in_RAX;\n    fcn.00438120(3);\n    uVar1 = unaff_R14[0xe];\n    if ((uVar1 <= *unaff_R14 && *unaff_R14 != uVar1) || (unaff_R14[1] < uVar1)) {\n        fcn.0045ba20();\n    }\n    if (*0x7b3b90 != '\\0') {\n        fcn.0045ba20();\n        fcn.0043d5c0();\n    }\n    if (*0x7ae5f0 != 0) {\n        fcn.0045ba20();\n        fcn.0043d5c0();\n    }\n    if (*(*(unaff_R14[6] + 0xa0) + 0x2278) != 0) {\n        fcn.0045ba20();\n        fcn.0043d5c0();\n    }\n    *(unaff_R14[6] + 0x26c) = *(*(unaff_R14[6] + 0xa0) + 0x14);\n    *(unaff_R14 + 0xbb) = 1;\n    iVar2 = *(unaff_R14[6] + 0xa0);\n    *(iVar2 + 0x38) = 0;\n    *(unaff_R14[6] + 0xb0) = iVar2;\n    *(unaff_R14[6] + 0xa0) = 0;\n    *(iVar2 + 4) = 2;\n    if (*0x7ae5e0 != 0) {\n        fcn.0045ba20();\n        fcn.0043d5c0();\n    }\n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + -1;\n    return;\n}\n",
        "token_count": 567
    },
    "0043df20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043dff9)\n\nulong fcn.0043df20(void)\n\n{\n    int64_t in_RAX;\n    \n    if (*0x7ae5e4 == 0x7fffffff) {\n        return 0;\n    }\n    if ((in_RAX != 0) && (*(in_RAX + 4) == 2)) {\n        LOCK();\n        if (*(in_RAX + 4) == 2) {\n            *(in_RAX + 4) = 0;\n            fcn.00440340();\n            fcn.0043e0e0();\n            return 1;\n        }\n    }\n    if (*0x7ae550 != 0) {\n        fcn.0045ba20();\n    }\n    return 0;\n}\n",
        "token_count": 175
    },
    "0043e0e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043e0e0(void)\n\n{\n    int32_t *piVar1;\n    int64_t unaff_R14;\n    \n    if (*(*(*(unaff_R14 + 0x30) + 0xa0) + 0x14) != *(*(unaff_R14 + 0x30) + 0x26c)) {\n        if (*0x7b3b90 != '\\0') {\n            fcn.0045ba20();\n        }\n        piVar1 = *(*(unaff_R14 + 0x30) + 0xa0) + 0x14;\n        *piVar1 = *piVar1 + 1;\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "0043e680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.0043e680(uint64_t arg1)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uchar auVar5 [16];\n    char cVar6;\n    uint8_t uVar7;\n    int64_t in_RAX;\n    int64_t iVar8;\n    ulong uVar9;\n    uint64_t uVar10;\n    int64_t *piVar11;\n    int64_t iVar12;\n    ulong unaff_RBX;\n    uchar *puVar13;\n    uchar *unaff_RBP;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar13 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar13 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x28) = unaff_R14;\n            if (in_RAX == 0) {\n                *(*0x20 + -0x50) = 0x43e6c5;\n                fcn.00433d80();\n            }\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            arg1 = *(*0x20 + -0x28);\n            *(*0x20 + -0x18) = *(*(arg1 + 0x30) + 0xa0);\n            *(*0x20 + -0x50) = 0x43e6ef;\n            iVar8 = fcn.0043ef00();\n            if (iVar8 == 0) {\n                *(*0x20 + -0x50) = 0x43e6fe;\n                uVar9 = fcn.0043e400();\n                *(*0x20 + -0x30) = uVar9;\n                arg1 = 6;\n                *(*0x20 + -0x50) = 0x43e70f;\n                fcn.00438120(6);\n                *(*0x20 + -0x50) = 0x43e719;\n                fcn.004370a0();\n                iVar8 = *(*0x20 + -0x30);\n            }\n            if (*(iVar8 + 8) != 0) {\n                arg1 = *(iVar8 + 0x90);\n                if (*(iVar8 + 0x90) == 6) {\n                    *(*0x20 + -0x30) = iVar8;\n                    *(*0x20 + -0x38) = *(iVar8 + 8);\n                    *(*0x20 + -0x20) = iVar8 + 0x38;\n                    *(*0x20 + -0x50) = 0x43e75c;\n                    fcn.0045e8c0();\n                    iVar8 = *(*0x20 + -0x38);\n                    iVar12 = *(*0x20 + -0x30);\n                    *(iVar12 + 0x38) = iVar8 + -0x20;\n                    *(iVar12 + 0x80) = iVar8 + -0x20;\n                    *(iVar12 + 0x40) = 0x45dd61;\n                    *(iVar12 + 0x48) = iVar12;\n                    *(*0x20 + -0x50) = 0x43e799;\n                    fcn.00449ee0(iVar12, iVar12, in_R8, in_R9);\n                    *(*(*0x20 + -0x30) + 0x128) = *(*0x20 + 0x18);\n                    *(*0x20 + -0x50) = 0x43e7b4;\n                    uVar9 = fcn.0043ea40();\n                    if (*0x801c20 == 0) {\n                        iVar8 = *(*0x20 + -0x30);\n                        *(iVar8 + 0x130) = uVar9;\n                    }\n                    else {\n                        iVar8 = *(*0x20 + -0x30);\n                        *(*0x20 + -0x50) = 0x43e7e5;\n                        fcn.0045dda0(iVar8 + 0x130, iVar8, in_R8, in_R9);\n                    }\n                    *(iVar8 + 0x138) = **(*0x20 + 8);\n                    *(*0x20 + -0x50) = 0x43e805;\n                    cVar6 = fcn.00456460();\n                    if (cVar6 == '\\0') {\n                        iVar12 = *(*(*(*0x20 + -0x28) + 0x30) + 0x90);\n                        if (iVar12 == 0) {\n                            iVar8 = *(*0x20 + -0x30);\n                        }\n                        else if (*0x801c20 == 0) {\n                            iVar8 = *(*0x20 + -0x30);\n                            *(iVar8 + 0x168) = *(iVar12 + 0x168);\n                        }\n                        else {\n                            *(*0x20 + -0x50) = 0x43e86f;\n                            iVar8 = fcn.0045df00(iVar8, *(*0x20 + -0x28), *(*0x20 + -0x30) + 0x168, in_R9);\n                        }\n                        if (*0x7aa444 != '\\0') {\n                            *(iVar8 + 0x17c) = 2;\n                        }\n                    }\n                    else {\n                        LOCK();\n                        *0x7ae548 = *0x7ae548 + 1;\n                        iVar8 = *(*0x20 + -0x30);\n                    }\n                    uVar10 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n                    auVar5 = ZEXT816(uVar10) * ZEXT816(uVar10 ^ 0xe7037ed1a0b428db);\n                    *(*(unaff_R14 + 0x30) + 0xf0) = uVar10;\n                    uVar7 = SUB161(auVar5, 0) ^ SUB161(auVar5 >> 0x40, 0);\n                    *(iVar8 + 0xbd) = uVar7;\n                    if ((uVar7 & 7) == 0) {\n                        *(iVar8 + 0xbc) = 1;\n                    }\n                    *(*0x20 + -0x50) = 0x43e8e5;\n                    fcn.00438120(1);\n                    piVar11 = *(*0x20 + -0x30);\n                    iVar12 = piVar11[1] - *piVar11;\n                    iVar8 = *(*0x20 + -0x18);\n                    if (iVar8 == 0) {\n                        LOCK();\n                        *0x8023a8 = *0x8023a8 + iVar12;\n                    }\n                    else {\n                        iVar4 = *(iVar8 + 0x22b0);\n                        iVar2 = iVar4 + iVar12;\n                        *(iVar8 + 0x22b0) = iVar2;\n                        if (0x3ffe < iVar4 + iVar12 + 0x1fffU) {\n                            LOCK();\n                            *0x8023a8 = *0x8023a8 + iVar2;\n                            *(iVar8 + 0x22b0) = 0;\n                        }\n                    }\n                    iVar12 = *0x7ae500;\n                    if (*(iVar8 + 0x188) == *(iVar8 + 0x180)) {\n                        LOCK();\n                        iVar2 = *0x7ae500 + 1;\n                        *0x7ae500 = *0x7ae500 + 0x10;\n                        *(iVar8 + 0x180) = iVar2;\n                        *(iVar8 + 0x188) = iVar12 + 0x11;\n                    }\n                    piVar11[0x13] = *(iVar8 + 0x180);\n                    *(iVar8 + 0x180) = *(iVar8 + 0x180) + 1;\n                    if (*0x7b3b90 != '\\0') {\n                        *(*0x20 + -0x50) = 0x43e9af;\n                        fcn.00451e60();\n                        piVar11 = *(*0x20 + -0x30);\n                    }\n                    iVar3 = *(*(*(*0x20 + -0x28) + 0x30) + 0xd8);\n                    *(*(*(*0x20 + -0x28) + 0x30) + 0xd8) = iVar3 + -1;\n                    if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                    }\n                    return piVar11;\n                }\n                *(*0x20 + -0x50) = 0x43e9fe;\n                fcn.00433c80();\n            }\n            unaff_RBX = 0x1c;\n            *(*0x20 + -0x50) = 0x43ea0f;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar13 + 8) = in_RAX;\n        *(puVar13 + 0x10) = unaff_RBX;\n        *(puVar13 + 0x18) = arg1;\n        *(puVar13 + -8) = 0x43ea25;\n        fcn.0045bb60();\n        in_RAX = *(puVar13 + 8);\n        unaff_RBX = *(puVar13 + 0x10);\n        arg1 = *(puVar13 + 0x18);\n        *0x20 = puVar13;\n    } while( true );\n}\n",
        "token_count": 2282
    },
    "0043ea40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.0043ea40(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    int64_t in_RAX;\n    ulong uVar4;\n    uchar *puVar5;\n    ulong *puVar6;\n    int64_t iVar7;\n    uint64_t noname_1;\n    ulong *puVar8;\n    uchar *unaff_RBP;\n    int32_t iVar9;\n    int64_t iVar10;\n    ulong uVar11;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x350 && *0x20 + -0x350 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x3d0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*0x801e94 < 1) || (*(in_RAX + 0x98) == 0)) {\n                return NULL;\n            }\n            *(*0x20 + 8) = in_RAX;\n            puVar8 = *(in_RAX + 0x130);\n            if (puVar8 == NULL) {\n                uVar11 = 0;\n                uVar4 = 0;\n            }\n            else {\n                uVar4 = *puVar8;\n                uVar11 = puVar8[1];\n            }\n            *(*0x20 + -0x378) = uVar11;\n            *(*0x20 + -0x48) = uVar4;\n            iVar9 = uVar11 + 1;\n            if (*0x801e94 < iVar9) {\n                iVar9 = *0x801e94;\n            }\n            *(*0x20 + -0x370) = iVar9;\n            *(*0x20 + -0x3d8) = 0x43eae5;\n            uVar4 = fcn.00447240(iVar9);\n            if (*(*0x20 + -0x370) != 0) {\n                *(*0x20 + -0x38) = uVar4;\n                iVar10 = *(*0x20 + -0x370) + -1;\n                noname_1 = -iVar10 >> 0x3f & 0x28;\n                *(*0x20 + -0x3d8) = 0x43eb2d;\n                fcn.00410400(iVar10);\n                *(*0x20 + -0x3e0) = unaff_RBP;\n                *(*0x20 + -0x3d8) = 0x43eb4f;\n                fcn.0045e3ee();\n                *(*0x20 + -0x3d0) = 0;\n                uVar11 = 100;\n                *(*0x20 + -0x3d8) = 0x43eb87;\n                uVar4 = fcn.004525e0(0, noname_1, *0x20 + -0x368, 100);\n                *(*0x20 + -0x380) = uVar4;\n                *(*0x20 + -0x3d8) = 0x43eb9e;\n                puVar5 = fcn.00447240(uVar4);\n                iVar10 = *(*0x20 + -0x380);\n                iVar7 = iVar10;\n                if (100 < iVar10) {\n                    iVar7 = 100;\n                }\n                if (puVar5 != *0x20 + -0x368) {\n                    *(*0x20 + -0x40) = puVar5;\n                    *(*0x20 + -0x3d8) = 0x43ebce;\n                    fcn.0045ebc0(iVar7 << 3);\n                    puVar5 = *(*0x20 + -0x40);\n                    iVar10 = *(*0x20 + -0x380);\n                }\n                *(*0x20 + -0x30) = in_XMM15;\n                *(*0x20 + -0x28) = in_XMM15;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x30) = puVar5;\n                *(*0x20 + -0x28) = iVar10;\n                *(*0x20 + -0x20) = iVar10;\n                *(*0x20 + -0x18) = *(*(*0x20 + 8) + 0x98);\n                puVar8 = *(*(*0x20 + 8) + 0x128);\n                *(*0x20 + -0x10) = puVar8;\n                if (*0x801c20 == 0) {\n                    puVar8 = *(*0x20 + -0x38);\n                    *puVar8 = *(*0x20 + -0x30);\n                    uVar1 = *(*0x20 + -0x24);\n                    uVar2 = *(*0x20 + -0x20);\n                    uVar3 = *(*0x20 + -0x1c);\n                    *(puVar8 + 1) = *(*0x20 + -0x28);\n                    *(puVar8 + 0xc) = uVar1;\n                    *(puVar8 + 2) = uVar2;\n                    *(puVar8 + 0x14) = uVar3;\n                    uVar1 = *(*0x20 + -0x14);\n                    uVar2 = *(*0x20 + -0x10);\n                    uVar3 = *(*0x20 + -0xc);\n                    *(puVar8 + 3) = *(*0x20 + -0x18);\n                    *(puVar8 + 0x1c) = uVar1;\n                    *(puVar8 + 4) = uVar2;\n                    *(puVar8 + 0x24) = uVar3;\n                }\n                else {\n                    *(*0x20 + -0x3d8) = 0x43ec86;\n                    fcn.00410240(*0x20 + -0x30);\n                }\n                *(*0x20 + -0x3d8) = 0x43ec92;\n                puVar6 = fcn.0040c560();\n                uVar4 = *(*0x20 + -0x370);\n                puVar6[1] = uVar4;\n                puVar6[2] = uVar4;\n                if (*0x801c20 == 0) {\n                    *puVar6 = *(*0x20 + -0x38);\n                }\n                else {\n                    *(*0x20 + -0x3d8) = 0x43ecc5;\n                    puVar6 = fcn.0045dea0(*(*0x20 + -0x38), puVar8, iVar10, uVar11);\n                }\n                return puVar6;\n            }\n            *(*0x20 + -0x3d8) = 0x43ece5;\n            in_RAX = fcn.0045e300(0);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x43ecf0;\n        fcn.0045bb60();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1654
    },
    "0043ed00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043ed00(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int32_t iVar2;\n    uchar (*unaff_RBX) [16];\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*unaff_RBX[9] == 6) {\n                if (*0x795288 != *(*unaff_RBX + 8) - **unaff_RBX) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + 0x10) = unaff_RBX;\n                    *(*0x20 + -0x68) = 0x43ed5a;\n                    fcn.004483c0();\n                    unaff_RBX = *(*0x20 + 0x10);\n                    *unaff_RBX = in_XMM15;\n                    *unaff_RBX[1] = 0;\n                    in_RAX = *(*0x20 + 8);\n                }\n                *unaff_RBX[10] = *(in_RAX + 0x9a0);\n                *(in_RAX + 0x9a0) = unaff_RBX;\n                iVar2 = *(in_RAX + 0x9a8) + 1;\n                *(in_RAX + 0x9a8) = iVar2;\n                if (0x3f < iVar2) {\n                    *(*0x20 + -0x48) = in_XMM15;\n                    *(*0x20 + -0x18) = in_XMM15;\n                    iVar2 = 0;\n                    while (0x1f < *(in_RAX + 0x9a8)) {\n                        piVar1 = *(in_RAX + 0x9a0);\n                        if (piVar1 != NULL) {\n                            *(in_RAX + 0x9a0) = piVar1[0x14];\n                        }\n                        *(in_RAX + 0x9a8) = *(in_RAX + 0x9a8) + -1;\n                        if (*piVar1 == 0) {\n                            piVar1[0x14] = *(*0x20 + -0x18);\n                            *(*0x20 + -0x18) = piVar1;\n                            if (*(*0x20 + -0x10) == 0) {\n                                *(*0x20 + -0x10) = piVar1;\n                            }\n                        }\n                        else {\n                            piVar1[0x14] = *(*0x20 + -0x48);\n                            *(*0x20 + -0x48) = piVar1;\n                            if (*(*0x20 + -0x40) == 0) {\n                                *(*0x20 + -0x40) = piVar1;\n                            }\n                        }\n                        iVar2 = iVar2 + 1;\n                    }\n                    *(*0x20 + -0x4c) = iVar2;\n                    *(*0x20 + -0x68) = 0x43ee45;\n                    fcn.0040a460();\n                    *(*0x20 + -0x28) = *(*0x20 + -0x18);\n                    *(*0x20 + -0x20) = *(*0x20 + -0x10);\n                    if (*(*0x20 + -0x18) != 0) {\n                        *(*(*0x20 + -0x10) + 0xa0) = *0x7ae5a8;\n                        *0x7ae5a8 = *(*0x20 + -0x28);\n                    }\n                    *(*0x20 + -0x38) = *(*0x20 + -0x48);\n                    *(*0x20 + -0x30) = *(*0x20 + -0x40);\n                    if (*(*0x20 + -0x48) != 0) {\n                        *(*(*0x20 + -0x40) + 0xa0) = *0x7ae5a0;\n                        *0x7ae5a0 = *(*0x20 + -0x38);\n                    }\n                    *0x7ae5b0 = *0x7ae5b0 + *(*0x20 + -0x4c);\n                    *(*0x20 + -0x68) = 0x43eec5;\n                    fcn.0040a680();\n                }\n                return;\n            }\n            unaff_RBX = 0x1d;\n            *(*0x20 + -0x68) = 0x43eedb;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x43eeeb;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1219
    },
    "0043ef00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.0043ef00(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    do {\n        piVar1 = *(in_RAX + 0x9a0);\n        if ((piVar1 != NULL) || ((*0x7ae5a0 == 0 && (*0x7ae5a8 == 0)))) {\n            if (piVar1 != NULL) {\n                *(in_RAX + 0x9a0) = piVar1[0x14];\n                *(in_RAX + 0x9a8) = *(in_RAX + 0x9a8) + -1;\n                if ((*piVar1 != 0) && (*0x795288 != piVar1[1] - *piVar1)) {\n                    fcn.0045ba20();\n                }\n                if (*piVar1 == 0) {\n                    fcn.0045ba20();\n                    piVar1[2] = *piVar1 + 0x13a0;\n                }\n                return piVar1;\n            }\n            return NULL;\n        }\n        fcn.0040a460();\n        while (*(in_RAX + 0x9a8) < 0x20) {\n            if (*0x7ae5a0 == 0) {\n                if (*0x7ae5a8 == 0) break;\n                iVar2 = *0x7ae5a8;\n                *0x7ae5a8 = *(*0x7ae5a8 + 0xa0);\n            }\n            else {\n                iVar2 = *0x7ae5a0;\n                *0x7ae5a0 = *(*0x7ae5a0 + 0xa0);\n            }\n            *0x7ae5b0 = *0x7ae5b0 + -1;\n            *(iVar2 + 0xa0) = *(in_RAX + 0x9a0);\n            *(in_RAX + 0x9a0) = iVar2;\n            *(in_RAX + 0x9a8) = *(in_RAX + 0x9a8) + 1;\n        }\n        fcn.0040a680();\n    } while( true );\n}\n",
        "token_count": 562
    },
    "0043f1a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0043f1a0(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int32_t iVar2;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uchar auStack72 [48];\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    iVar2 = 0;\n    auStack72._0_16_ = in_XMM15;\n    auStack24 = in_XMM15;\n    while( true ) {\n        piVar1 = *(in_RAX + 0x9a0);\n        if (piVar1 == NULL) break;\n        if (piVar1 != NULL) {\n            *(in_RAX + 0x9a0) = piVar1[0x14];\n        }\n        *(in_RAX + 0x9a8) = *(in_RAX + 0x9a8) + -1;\n        if (*piVar1 == 0) {\n            piVar1[0x14] = auStack24._0_8_;\n            auStack24 = CONCAT88(auStack24._8_8_, piVar1);\n            if (auStack24._8_8_ == 0) {\n                auStack24 = CONCAT88(piVar1, piVar1);\n            }\n        }\n        else {\n            piVar1[0x14] = auStack72._0_8_;\n            auStack72._0_16_ = CONCAT88(auStack72._8_8_, piVar1);\n            if (auStack72._8_8_ == 0) {\n                auStack72._0_16_ = CONCAT88(piVar1, piVar1);\n            }\n        }\n        iVar2 = iVar2 + 1;\n    }\n    fcn.0040a460();\n    if (auStack24._0_8_ != 0) {\n        *(auStack24._8_8_ + 0xa0) = *0x7ae5a8;\n        *0x7ae5a8 = auStack24._0_8_;\n    }\n    if (auStack72._0_8_ != 0) {\n        *(auStack72._8_8_ + 0xa0) = *0x7ae5a0;\n        *0x7ae5a0 = auStack72._0_8_;\n    }\n    *0x7ae5b0 = *0x7ae5b0 + iVar2;\n    fcn.0040a680();\n    return;\n}\n",
        "token_count": 610
    },
    "0043f300": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043f300(void)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int64_t unaff_R14;\n    \n    if (*0x801d20 == 0) {\n        fcn.00439e40();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0x238;\n    *piVar1 = *piVar1 + 1;\n    if (*(*(unaff_R14 + 0x30) + 0x238) != 0) {\n        *(*(unaff_R14 + 0x30) + 0x130) = unaff_R14;\n        *(unaff_R14 + 0xe8) = *(unaff_R14 + 0x30);\n        return;\n    }\n    *(*(unaff_R14 + 0x30) + 0x238) = 0xffffffff;\n    fcn.004334e0();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 230
    },
    "0043f380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043f380(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    iVar1 = *(*(unaff_R14 + 0x30) + 0x238);\n    if (iVar1 != 0) {\n        *(*(unaff_R14 + 0x30) + 0x238) = iVar1 + -1;\n        iVar2 = *(unaff_R14 + 0x30);\n        if ((*(iVar2 + 0x23c) == 0) && (*(iVar2 + 0x238) == 0)) {\n            *(iVar2 + 0x130) = 0;\n            *(unaff_R14 + 0xe8) = 0;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "0043f3e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043f3e0(void)\n\n{\n    int32_t *piVar1;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    int64_t iVar2;\n    \n    iVar2 = unaff_R14;\n    if (*(*(unaff_R14 + 0x30) + 0x23c) == 0) {\n        fcn.0045ba20();\n        unaff_R14 = **(in_GS_OFFSET + 0x28);\n    }\n    piVar1 = *(iVar2 + 0x30) + 0x23c;\n    *piVar1 = *piVar1 + -1;\n    iVar2 = *(unaff_R14 + 0x30);\n    if ((*(iVar2 + 0x23c) == 0) && (*(iVar2 + 0x238) == 0)) {\n        *(iVar2 + 0x130) = 0;\n        *(unaff_R14 + 0xe8) = 0;\n    }\n    return;\n}\n",
        "token_count": 231
    },
    "0043f4c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043f4c0(ulong noname_0, uint64_t arg2, uint64_t arg3)\n\n{\n    uint32_t *puVar1;\n    uint64_t arg1;\n    uint *in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint unaff_EBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *in_RAX = unaff_EBX;\n            in_RAX[1] = 3;\n            *(in_RAX + 0x26e) = 0;\n            *(in_RAX + 0x270) = 0x80;\n            if (*0x801c20 == 0) {\n                *(in_RAX + 0x26c) = in_RAX + 0x272;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x43f51c;\n                in_RAX = fcn.0045dea0(in_RAX + 0x272, arg2, arg3, in_R9);\n            }\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(in_RAX + 0x1c) = 0;\n            *(in_RAX + 0x1e) = 0x20;\n            if (*0x801c20 == 0) {\n                *(in_RAX + 0x1a) = in_RAX + 0x20;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x43f551;\n                in_RAX = fcn.0045dea0(in_RAX + 0x20, arg2, arg3, in_R9);\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x20) = 0x43f565;\n            fcn.0042ce20(in_RAX + 0x49a);\n            if (*(*(*0x20 + 8) + 0x40) == 0) {\n                uVar4 = *(*0x20 + 0x10);\n                arg2 = uVar4;\n                if (uVar4 != 0) {\n                    *(*0x20 + -0x20) = 0x43f59a;\n                    uVar2 = fcn.00413080();\n                    *(*(*0x20 + 8) + 0x40) = uVar2;\n                    uVar4 = *(*0x20 + 0x10);\n                    goto code_r0x0043f5a7;\n                }\n                if (*0x801ad0 != 0) {\n                    *(*(*0x20 + 8) + 0x40) = *0x801ad0;\n                    goto code_r0x0043f5a7;\n                }\n            }\n            else {\n                uVar4 = *(*0x20 + 0x10);\ncode_r0x0043f5a7:\n                arg1 = *0x7adb08;\n                iVar5 = ((uVar4 >> 0x1f) >> 0x1b) + uVar4 >> 5;\n                arg2 = iVar5 * 0x20;\n                uVar4 = uVar4 + iVar5 * -0x20;\n                if (-1 < uVar4) {\n                    arg2 = -(uVar4 < 0x20);\n                    uVar4 = 1 << (uVar4 & 0x1f) & -(uVar4 < 0x20);\n                    arg3 = uVar4;\n                    uVar3 = iVar5;\n                    if (uVar3 < *0x7adb08) {\n                        puVar1 = *0x7adb00 + uVar3 * 4;\n                        LOCK();\n                        *puVar1 = *puVar1 | uVar4;\n                        if (uVar3 < *0x7adac8) {\n                            puVar1 = *0x7adac0 + uVar3 * 4;\n                            LOCK();\n                            *puVar1 = *puVar1 & ~uVar4;\n                            return;\n                        }\n                        *(*0x20 + -0x20) = 0x43f61f;\n                        arg2 = *0x7adac0;\n                        fcn.0045e240(*0x7adac8);\n                    }\n                    *(*0x20 + -0x20) = 0x43f627;\n                    fcn.0045e240(arg1);\n                }\n                *(*0x20 + -0x20) = 0x43f62c;\n                fcn.004320a0();\n            }\n            unaff_EBX = 0xf;\n            *(*0x20 + -0x20) = 0x43f63d;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_EBX;\n        *(puVar6 + -8) = 0x43f64c;\n        fcn.0045bb60();\n        in_RAX = *(puVar6 + 8);\n        unaff_EBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1293
    },
    "0043f660": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043f660(ulong param_1, int64_t param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    while (*(in_RAX + 400) != *(in_RAX + 0x194)) {\n        uVar3 = *(in_RAX + 0x194) - 1;\n        *(in_RAX + 0x194) = uVar3;\n        param_2 = *(in_RAX + 0x198 + (uVar3 & 0xff) * 8);\n        *(param_2 + 0xa0) = *0x7ae560;\n        if (*0x7ae568 == 0) {\n            *0x7ae568 = param_2;\n        }\n        *0x7ae570 = *0x7ae570 + 1;\n        *0x7ae560 = param_2;\n    }\n    iVar2 = *(in_RAX + 0x998);\n    if (iVar2 != 0) {\n        *(iVar2 + 0xa0) = *0x7ae560;\n        if (*0x7ae568 == 0) {\n            *0x7ae568 = iVar2;\n        }\n        *0x7ae570 = *0x7ae570 + 1;\n        *0x7ae560 = iVar2;\n        *(in_RAX + 0x998) = 0;\n        param_2 = iVar2;\n    }\n    if (*(in_RAX + 0x2290) != 0) {\n        fcn.0040a460();\n        fcn.0040a460();\n        param_2 = *(in_RAX + 0x2290);\n        fcn.0044f6e0(param_2);\n        *(in_RAX + 0x2290) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        if (*0x801c20 == 0) {\n            *(in_RAX + 0x2288) = 0;\n            iVar2 = in_RAX;\n        }\n        else {\n            param_2 = 0;\n            iVar2 = fcn.0045dec0(in_RAX + 0x2288, 0, param_3, param_4);\n        }\n        *(iVar2 + 0x22a0) = 0;\n        uVar1 = *(iVar2 + 0x1208);\n        *(iVar2 + 0x1208) = 0;\n        fcn.0040a680(uVar1);\n        fcn.0040a680();\n    }\n    if (*0x8019ec != 0) {\n        fcn.0042cfa0();\n        fcn.00422e00(in_RAX + 0x1240);\n    }\n    fcn.00410540(in_RAX + 0x9c8);\n    *(in_RAX + 0x9b8) = 0;\n    *(in_RAX + 0x9c0) = 0x80;\n    if (*0x801c20 == 0) {\n        *(in_RAX + 0x9b0) = in_RAX + 0x9c8;\n        iVar2 = in_RAX;\n    }\n    else {\n        iVar2 = fcn.0045dea0(in_RAX + 0x9c8, param_2, param_3, param_4);\n    }\n    fcn.00410540(iVar2 + 0x80);\n    *(in_RAX + 0x70) = 0;\n    *(in_RAX + 0x78) = 0x20;\n    if (*0x801c20 == 0) {\n        *(in_RAX + 0x68) = in_RAX + 0x80;\n    }\n    else {\n        fcn.0045dea0(in_RAX + 0x80, in_RAX, param_3, param_4);\n    }\n    fcn.0045ba20();\n    fcn.004131e0(*(in_RAX + 0x40));\n    *(in_RAX + 0x40) = 0;\n    fcn.0043f1a0();\n    fcn.00450bc0();\n    *(in_RAX + 0x1218) = 0;\n    *(in_RAX + 4) = 4;\n    return;\n}\n",
        "token_count": 1101
    },
    "0043fa60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0043fa60(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int32_t in_EAX;\n    ulong uVar6;\n    int64_t *piVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    uint64_t uVar13;\n    uint32_t uVar14;\n    int64_t *piVar15;\n    uint32_t uVar16;\n    int64_t *unaff_RBX;\n    int64_t *piVar17;\n    uchar *puVar18;\n    uchar *unaff_RBP;\n    int64_t *unaff_RSI;\n    uint32_t uVar19;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar18 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x30 && *0x20 + -0x30 != *(unaff_R14 + 0x10)) {\n            puVar18 = *0x20 + -0xb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((-1 < *0x8019f0) && (0 < in_EAX)) {\n                *(*0x20 + -0x70) = *0x8019f0;\n                *(*0x20 + 8) = in_EAX;\n                if (*0x7b3b90 != '\\0') {\n                    *(*0x20 + -0x38) = 0;\n                    *(*0x20 + -0x38) = in_EAX;\n                    unaff_RBX = 0x1;\n                    unaff_RSI = 0x1;\n                    *(*0x20 + -0xb8) = 0x43fadc;\n                    fcn.00450c80(*0x20 + -0x38);\n                }\n                *(*0x20 + -0xb8) = 0x43fae5;\n                fcn.0045fb60();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                iVar8 = *(*0x20 + -0xb0);\n                if (*0x7ae620 == 0) {\n                    uVar14 = *(*0x20 + -0x70);\n                }\n                else {\n                    uVar14 = *(*0x20 + -0x70);\n                    *0x7ae628 = *0x7ae628 + uVar14 * (iVar8 - *0x7ae620);\n                }\n                *(*0x20 + -0x40) = iVar8;\n                uVar16 = *(*0x20 + 8);\n                uVar11 = uVar16;\n                *(*0x20 + -0x6c) = ((uVar16 + 0x1f >> 0x1f) >> 0x1b) + uVar16 + 0x1f >> 5;\n                *0x7ae620 = iVar8;\n                if (*0x7ada48 < uVar16) {\n                    *(*0x20 + -0xb8) = 0x43fb79;\n                    fcn.0040a460();\n                    iVar1 = *(*0x20 + 8);\n                    if (*0x7ada50 < iVar1) {\n                        *(*0x20 + -0x50) = iVar1;\n                        *(*0x20 + -0xb8) = 0x43fbbc;\n                        uVar6 = fcn.00447240(iVar1);\n                        *(*0x20 + -0x10) = uVar6;\n                        uVar6 = *(*0x20 + -0x50);\n                        *(*0x20 + -0xb8) = 0x43fbe6;\n                        fcn.00410400(uVar6);\n                        *0x7ada48 = *(*0x20 + -0x50);\n                        *0x7ada50 = *0x7ada48;\n                        if (*0x801c20 == 0) {\n                            *0x7ada40 = *(*0x20 + -0x10);\n                            piVar17 = *0x7ada48;\n                        }\n                        else {\n                            *(*0x20 + -0xb8) = 0x43fc27;\n                            fcn.0045df00(uVar6, *0x7ada48, uVar11, iVar8);\n                            piVar17 = *0x7ada48;\n                        }\ncode_r0x0043fc2e:\n                        *0x7ada48 = piVar17;\n                        unaff_RSI = *0x7adac8;\n                        uVar14 = *(*0x20 + -0x6c);\n                        uVar11 = uVar14;\n                        if (*0x7adad0 < uVar14) {\n                            *(*0x20 + -0x58) = uVar14;\n                            *(*0x20 + -0xb8) = 0x43fc93;\n                            uVar6 = fcn.004470e0(*0x7adac8);\n                            unaff_RBX = *(*0x20 + -0x58);\n                            piVar17 = unaff_RBX;\n                            piVar7 = unaff_RBX;\n                            if (*0x801c20 != 0) {\n                                *(*0x20 + -0xb8) = 0x43fcc5;\n                                piVar17 = *0x7adac8;\n                                *0x7adac8 = unaff_RBX;\n                                piVar7 = *0x7adad0;\n                                *0x7adad0 = unaff_RBX;\n                                fcn.0045dda0(piVar17, piVar7, uVar11, iVar8);\n                                uVar6 = *0x7adac0;\n                                piVar17 = *0x7adac8;\n                                piVar7 = *0x7adad0;\n                            }\n                            *0x7adad0 = piVar7;\n                            *0x7adac8 = piVar17;\n                            *0x7adac0 = uVar6;\n                            *(*0x20 + -0xb8) = 0x43fcdf;\n                            uVar6 = fcn.004470e0(*0x7adb08);\n                            *0x7adb10 = *(*0x20 + -0x58);\n                            piVar17 = *0x7adb10;\n                            if (*0x801c20 != 0) {\n                                *(*0x20 + -0xb8) = 0x43fd10;\n                                piVar17 = *0x7adb08;\n                                *0x7adb08 = *0x7adb10;\n                                fcn.0045dda0(piVar17, *0x7adb10, uVar11, iVar8);\n                                uVar6 = *0x7adb00;\n                                piVar17 = *0x7adb08;\n                            }\ncode_r0x0043fd12:\n                            *0x7adb08 = piVar17;\n                            *0x7adb00 = uVar6;\n                            *(*0x20 + -0xb8) = 0x43fd1e;\n                            fcn.0040a680();\n                            uVar14 = *(*0x20 + -0x70);\n                            uVar11 = *(*0x20 + 8);\n                            goto code_r0x0043fd60;\n                        }\n                        unaff_RBX = uVar14;\n                        piVar7 = *0x7adad0;\n                        if (unaff_RBX <= *0x7adad0) {\n                            piVar7 = *0x7adb10;\n                            *0x7adac8 = unaff_RBX;\n                            uVar6 = *0x7adb00;\n                            piVar17 = unaff_RBX;\n                            if (unaff_RBX <= *0x7adb10) goto code_r0x0043fd12;\n                            goto code_r0x00440292;\n                        }\n                        goto code_r0x0044029a;\n                    }\n                    unaff_RSI = iVar1;\n                    piVar7 = *0x7ada50;\n                    piVar17 = unaff_RSI;\n                    if (unaff_RSI <= *0x7ada50) goto code_r0x0043fc2e;\n                }\n                else {\ncode_r0x0043fd60:\n                    while( true ) {\n                        piVar17 = uVar14;\n                        if (uVar11 <= uVar14) break;\n                        unaff_RSI = uVar14;\n                        piVar15 = *0x7ada48;\n                        piVar7 = piVar17;\n                        if (*0x7ada48 <= unaff_RSI) goto code_r0x0044028a;\n                        *(*0x20 + -0x60) = uVar14;\n                        *(*0x20 + -0x48) = unaff_RSI;\n                        iVar8 = (*0x7ada40)[unaff_RSI];\n                        if (iVar8 == 0) {\n                            *(*0x20 + -0xb8) = 0x43fda7;\n                            iVar8 = fcn.0040c560();\n                            piVar17 = *(*0x20 + -0x60);\n                        }\n                        *(*0x20 + -0x28) = iVar8;\n                        *(*0x20 + -0xb8) = 0x43fdc5;\n                        fcn.0043f4c0(iVar8, piVar17, uVar11);\n                        piVar15 = *0x7ada48;\n                        piVar7 = *0x7ada40;\n                        if (*0x7ada48 <= *(*0x20 + -0x48)) goto code_r0x00440285;\n                        piVar7 = *0x7ada40 + *(*0x20 + -0x48);\n                        if (*0x801c20 != '\\0') {\n                            *(*0x20 + -0x18) = piVar7;\n                            piVar17 = *(*0x20 + -0x28);\n                            *(*0x20 + -0xb8) = 0x43fe0f;\n                            fcn.00403500();\n                            piVar7 = *(*0x20 + -0x18);\n                        }\n                        *piVar7 = *(*0x20 + -0x28);\n                        uVar14 = *(*0x20 + -0x60) + 1;\n                        uVar11 = *(*0x20 + 8);\n                        unaff_RBX = piVar17;\n                    }\n                    *(*0x20 + -0x20) = unaff_R14;\n                    piVar2 = *(*(unaff_R14 + 0x30) + 0xa0);\n                    if (piVar2 == NULL) {\ncode_r0x0043fedf:\n                        piVar7 = *(*0x20 + -0x20);\ncode_r0x0043fee7:\n                        *(piVar7[6] + 0xa0) = 0;\n                        piVar17 = *0x7ada40;\n                        if (*0x7ada48 != NULL) {\n                            iVar8 = **0x7ada40;\n                            *(iVar8 + 0x38) = 0;\n                            *(iVar8 + 4) = 0;\n                            *(*0x20 + -0xb8) = 0x43ff25;\n                            fcn.004402e0();\n                            if (*0x7b3b90 != '\\0') {\n                                *(*0x20 + -0xb8) = 0x43ff33;\n                                fcn.00451f40();\n                            }\n                            goto code_r0x0043ff33;\n                        }\n                    }\n                    else {\n                        if (uVar11 <= *piVar2) {\n                            if (piVar2 == NULL) goto code_r0x0043fedf;\n                            if (*0x7b3b90 != '\\0') {\n                                *(unaff_R14 + 0xe0) = piVar2;\n                                unaff_RSI = NULL;\n                                *(*0x20 + -0xb8) = 0x43fe75;\n                                fcn.00450c80(0);\n                                *(*0x20 + -0xb8) = 0x43fe8d;\n                                fcn.00451be0();\n                            }\n                            piVar7 = *(*0x20 + -0x20);\n                            *(*(piVar7[6] + 0xa0) + 0x38) = 0;\n                            goto code_r0x0043fee7;\n                        }\n                        piVar2[1] = 1;\n                        *(*0x20 + -0xb8) = 0x43fedd;\n                        fcn.004139c0();\n                        piVar17 = unaff_RBX;\ncode_r0x0043ff33:\n                        *0x801ad0 = 0;\n                        uVar16 = *(*0x20 + -0x70);\n                        uVar14 = *(*0x20 + 8);\n                        uVar19 = uVar14;\n                        while (piVar15 = *0x7ada48,  piVar7 = uVar16,  uVar14 < uVar16) {\n                            piVar17 = uVar14;\n                            unaff_RSI = *0x7ada48;\n                            if (*0x7ada48 <= piVar17) goto code_r0x00440270;\n                            *(*0x20 + -100) = uVar14;\n                            *(*0x20 + -0xb8) = 0x43ff5a;\n                            fcn.0043f660();\n                            uVar19 = *(*0x20 + 8);\n                            uVar16 = *(*0x20 + -0x70);\n                            unaff_RSI = piVar15;\n                            uVar14 = *(*0x20 + -100) + 1;\n                        }\n                        if (uVar19 == *0x7ada48) {\ncode_r0x00440029:\n                            uVar11 = uVar19;\n                            iVar8 = *(*0x20 + -0x20);\n                            iVar10 = 0;\n                            while( true ) {\n                                uVar19 = uVar19 - 1;\n                                *(*0x20 + -0x30) = iVar10;\n                                if (uVar19 < 0) {\n                                    *0x7adb80 = uVar11;\n                                    *0x7adb90 = 0;\n                                    for (uVar14 = 1; uVar4 = *0x7adb88,  uVar19 = uVar11,  uVar13 = uVar11, \n                                        uVar16 = uVar14,  uVar14 <= uVar19; uVar14 = uVar14 + 1) {\n                                        while (uVar19 = uVar13,  uVar19 != 0) {\n                                            piVar7 = *(*0x20 + -0x70);\n                                            uVar13 = uVar16 % uVar13;\n                                            uVar16 = uVar19;\n                                        }\n                                        if (uVar16 == 1) {\n                                            uVar13 = *0x7adb90 + 1;\n                                            uVar12 = *0x7adb90;\n                                            uVar9 = *0x7adb88;\n                                            if (*0x7adb98 < uVar13) {\n                                                *(*0x20 + -0x5c) = uVar14;\n                                                *(*0x20 + -0xb8) = 0x44016d;\n                                                uVar11 = *0x7adb90;\n                                                uVar9 = fcn.00447360(*0x7adb90);\n                                                uVar12 = uVar9;\n                                                if (*0x801c20 != 0) {\n                                                    *(*0x20 + -0xb8) = 0x440192;\n                                                    uVar12 = *0x7adb98;\n                                                    *0x7adb98 = uVar11;\n                                                    uVar9 = fcn.0045dda0(uVar11, piVar7, uVar13, uVar12);\n                                                    uVar12 = *0x7adb88;\n                                                    uVar11 = *0x7adb98;\n                                                }\n                                                *0x7adb98 = uVar11;\n                                                *0x7adb88 = uVar12;\n                                                piVar7 = *(*0x20 + -0x70);\n                                                uVar14 = *(*0x20 + -0x5c);\n                                                uVar11 = *(*0x20 + 8);\n                                                iVar10 = *(*0x20 + -0x30);\n                                                uVar12 = uVar4;\n                                            }\n                                            *0x7adb90 = uVar12 + 1;\n                                            *(uVar9 + uVar12 * 4) = uVar14;\n                                        }\n                                    }\n                                    *0x8019f0 = uVar19;\n                                    if (uVar19 != piVar7) {\n                                        *(*0x20 + -0xb8) = 0x4401e7;\n                                        fcn.004196a0(uVar11);\n                                        iVar10 = *(*0x20 + -0x30);\n                                    }\n                                    return iVar10;\n                                }\n                                if (*0x7ada48 <= uVar19) break;\n                                iVar3 = (*0x7ada40)[uVar19];\n                                if (*(*(iVar8 + 0x30) + 0xa0) != iVar3) {\n                                    *(iVar3 + 4) = 0;\n                                    iVar5 = *0x7ae520;\n                                    do {\n                                    } while (*(iVar3 + 0x194) != *(iVar3 + 0x194));\n                                    if ((*(iVar3 + 0x194) == *(iVar3 + 400)) && (*(iVar3 + 0x998) == 0)) {\n                                        *(*0x20 + -0x68) = uVar19;\n                                        piVar17 = *(*0x20 + -0x40);\n                                        *(*0x20 + -0xb8) = 0x4400ac;\n                                        fcn.00441f80();\n                                        uVar11 = *(*0x20 + 8);\n                                        piVar7 = *(*0x20 + -0x70);\n                                        uVar19 = *(*0x20 + -0x68);\n                                        iVar8 = *(*0x20 + -0x20);\n                                        iVar10 = *(*0x20 + -0x30);\n                                    }\n                                    else {\n                                        if (*0x7ae520 != 0) {\n                                            *0x7ae520 = *(*0x7ae520 + 0x128);\n                                            *0x7ae528 = *0x7ae528 + -1;\n                                        }\n                                        *(iVar3 + 0x38) = iVar5;\n                                        *(iVar3 + 8) = iVar10;\n                                        iVar10 = iVar3;\n                                    }\n                                }\n                            }\n                            *(*0x20 + -0xb8) = 0x440250;\n                            fcn.0045e240(*0x7ada48);\ncode_r0x00440250:\n                            *(*0x20 + -0xb8) = 0x440258;\n                            fcn.0045e2c0(piVar17, piVar7);\ncode_r0x00440258:\n                            *(*0x20 + -0xb8) = 0x440265;\n                            fcn.0045e2c0(piVar17, piVar7);\n                        }\n                        else {\n                            *(*0x20 + -0xb8) = 0x43ffac;\n                            fcn.0040a460();\n                            piVar15 = *(*0x20 + 8);\n                            piVar7 = piVar15;\n                            piVar17 = *0x7ada50;\n                            if (piVar15 <= *0x7ada50) {\n                                piVar17 = *(*0x20 + -0x6c);\n                                piVar7 = *0x7adad0;\n                                *0x7ada48 = piVar15;\n                                if (piVar17 <= *0x7adad0) {\n                                    piVar7 = *0x7adb10;\n                                    *0x7adac8 = piVar17;\n                                    if (piVar17 <= *0x7adb10) {\n                                        *(*0x20 + -0xb8) = 0x44001e;\n                                        *0x7adb08 = piVar17;\n                                        fcn.0040a680();\n                                        uVar19 = *(*0x20 + 8);\n                                        piVar7 = *(*0x20 + -0x70);\n                                        goto code_r0x00440029;\n                                    }\n                                    goto code_r0x00440250;\n                                }\n                                goto code_r0x00440258;\n                            }\n                        }\n                        *(*0x20 + -0xb8) = 0x440270;\n                        piVar15 = piVar17;\n                        fcn.0045e2c0(piVar7, piVar17);\n                        piVar7 = piVar15;\ncode_r0x00440270:\n                        *(*0x20 + -0xb8) = 0x44027b;\n                        fcn.0045e240(unaff_RSI);\n                    }\n                    piVar15 = NULL;\n                    *(*0x20 + -0xb8) = 0x440285;\n                    fcn.0045e240(0);\ncode_r0x00440285:\n                    *(*0x20 + -0xb8) = 0x44028a;\n                    fcn.0045e240(piVar15);\n                    unaff_RBX = piVar17;\ncode_r0x0044028a:\n                    *(*0x20 + -0xb8) = 0x440292;\n                    fcn.0045e240(piVar15);\ncode_r0x00440292:\n                    *(*0x20 + -0xb8) = 0x44029a;\n                    fcn.0045e2c0(unaff_RBX, piVar7);\ncode_r0x0044029a:\n                    *(*0x20 + -0xb8) = 0x4402a5;\n                    fcn.0045e2c0(unaff_RBX, piVar7);\n                }\n                *(*0x20 + -0xb8) = 0x4402ad;\n                fcn.0045e2c0(unaff_RSI, piVar7);\n            }\n            unaff_RBX = 0x17;\n            *(*0x20 + -0xb8) = 0x4402be;\n            in_EAX = fcn.00433c80();\n        }\n        *(puVar18 + 8) = in_EAX;\n        *(puVar18 + -8) = 0x4402c8;\n        fcn.0045bb60();\n        in_EAX = *(puVar18 + 8);\n        *0x20 = puVar18;\n    } while( true );\n}\n",
        "token_count": 5028
    },
    "004402e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004402e0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00440340();\n    fcn.004139c0();\n    if (*0x7b3b90 != '\\0') {\n        fcn.00451b80();\n    }\n    return;\n}\n",
        "token_count": 116
    },
    "00440340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00440340(void)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    if (*(*(unaff_R14 + 0x30) + 0xa0) != 0) {\n        fcn.00433c80();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if ((*(in_RAX + 0x38) == 0) && (*(in_RAX + 4) == 0)) {\n        *(*(unaff_R14 + 0x30) + 0xa0) = in_RAX;\n        *(in_RAX + 0x38) = *(unaff_R14 + 0x30);\n        *(in_RAX + 4) = 1;\n        return;\n    }\n    do {\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.00435b40();\n        fcn.00435e40();\n        fcn.00435c40();\n        fcn.00435e40();\n        fcn.00435b40();\n        fcn.004357a0();\n        fcn.004355c0();\n        fcn.00433c80();\n    } while( true );\n}\n",
        "token_count": 286
    },
    "00440460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00440460(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(unaff_R14 + 0x30);\n            iVar3 = *(iVar1 + 0xa0);\n            if (iVar3 != 0) {\n                *(*0x20 + -0x10) = iVar1;\n                *(*0x20 + -0x18) = iVar3;\n                iVar2 = *(iVar3 + 0x38);\n                *(*0x20 + -0x30) = iVar2;\n                if ((iVar2 == iVar1) && (*(iVar3 + 4) == 1)) {\n                    *(*0x20 + -0x20) = unaff_R14;\n                    if (*0x7b3b90 != '\\0') {\n                        *(*0x20 + -0x48) = 0x4404be;\n                        fcn.00451be0();\n                        iVar3 = *(*0x20 + -0x18);\n                    }\n                    *(*(*(*0x20 + -0x20) + 0x30) + 0xa0) = 0;\n                    *(iVar3 + 0x38) = 0;\n                    *(iVar3 + 4) = 0;\n                    return;\n                }\n                *(*0x20 + -0x28) = *(iVar3 + 4);\n                *(*0x20 + -0x48) = 0x4404fd;\n                fcn.00435540();\n                *(*0x20 + -0x48) = 0x44050e;\n                fcn.00435e40();\n                *(*0x20 + -0x48) = 0x440518;\n                fcn.00435dc0();\n                *(*0x20 + -0x48) = 0x440529;\n                fcn.00435e40();\n                *(*0x20 + -0x48) = 0x440533;\n                fcn.00435dc0();\n                *(*0x20 + -0x48) = 0x440545;\n                fcn.00435e40();\n                *(*0x20 + -0x48) = 0x44054f;\n                fcn.00435ca0();\n                *(*0x20 + -0x48) = 0x440565;\n                fcn.00435e40();\n                *(*0x20 + -0x48) = 0x44056f;\n                fcn.00435b40();\n                *(*0x20 + -0x48) = 0x440574;\n                fcn.004357a0();\n                *(*0x20 + -0x48) = 0x440579;\n                fcn.004355c0();\n                *(*0x20 + -0x48) = 0x44058a;\n                fcn.00433c80();\n            }\n            *(*0x20 + -0x48) = 0x44059b;\n            fcn.00433c80();\n        }\n        *(puVar4 + -8) = 0x4405a5;\n        fcn.0045bb60();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 827
    },
    "00440620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00440620(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*0x8019ac != '\\0') || (*0x8019aa != '\\0')) {\n                return;\n            }\n            if (*0x801a0c != 0) {\n                return;\n            }\n            if ((*0x8019ab == '\\0') && (*0x8019a3 != '\\0')) {\n                *(*0x20 + -0x50) = 0x440686;\n                *0x801a88 = fcn.00439a80();\n                uVar3 = *0x8019d0 != 0;\n            }\n            else {\n                uVar3 = 0;\n            }\n            uVar5 = *0x7ae528;\n            iVar6 = (((*0x7ae530 - *0x7ae540) - *0x7ae528) - *0x7ae52c) - *0x7ae53c;\n            if (uVar3 < iVar6) {\n                return;\n            }\n            if (-1 < iVar6) {\n                *(*0x20 + -0x28) = 0;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x18) = 0x440920;\n                *(*0x20 + -0x10) = *0x20 + -0x28;\n                *(*0x20 + -0x50) = 0x440708;\n                fcn.00437220();\n                if (*(*0x20 + -0x28) == 0) {\n                    *(*0x20 + -0x50) = 0x44071e;\n                    fcn.0040a680();\n                    *(*0x20 + -0x50) = 0x44072f;\n                    fcn.00433d80();\n                }\n                if (*0x801a90 != 0) {\n                    *(*0x20 + -0x50) = 0x44073e;\n                    iVar1 = fcn.004505c0();\n                    iVar4 = 0x7fffffffffffffff;\n                    if (iVar1 < 0x7fffffffffffffff) {\n                        *(*0x20 + -0x50) = 0x440771;\n                        *0x801a90 = iVar1;\n                        iVar2 = fcn.00442120();\n                        iVar6 = *0x7ae55c;\n                        iVar1 = *0x7ae520;\n                        if (iVar2 != 0) {\n                            if (*0x7ae520 != 0) {\n                                *0x7ae528 = *0x7ae528 - 1;\n                                LOCK();\n                                *0x7ae55c = *0x7ae55c + 1;\n                                puVar7 = *0x7ae520 + 0xe4;\n                                *0x7ae520 = *(*0x7ae520 + 0x128);\n                                *puVar7 = 1;\n                                *(iVar1 + 0xa8) = iVar2;\n                                *(*0x20 + -0x50) = 0x4407d0;\n                                fcn.0040a760(iVar1, iVar6);\n                                return;\n                            }\n                            *(*0x20 + -0x50) = 0x440809;\n                            iVar4 = *0x7ae520;\n                            fcn.00433c80();\n                        }\n                        *(*0x20 + -0x50) = 0x44081a;\n                        iVar1 = fcn.00433c80();\n                        goto code_r0x0044081a;\n                    }\n                }\n                iVar1 = 0;\n                iVar4 = *0x7ada40;\n                uVar5 = *0x7ada48;\n                while( true ) {\n                    if (uVar5 <= iVar1) {\n                        *(*0x20 + -0x50) = 0x44084d;\n                        fcn.0040a680();\n                        *(*0x20 + -0x50) = 0x44085e;\n                        fcn.00433d80();\n                        return;\n                    }\n                    if (*(*(iVar4 + iVar1 * 8) + 0x2290) != 0) break;\ncode_r0x0044081a:\n                    iVar1 = iVar1 + 1;\n                }\n                return;\n            }\n            *(*0x20 + -0x20) = *0x7ae530 - *0x7ae540;\n            *(*0x20 + -0x2c) = *0x7ae528;\n            *(*0x20 + -0x30) = *0x7ae52c;\n            *(*0x20 + -0x34) = *0x7ae53c;\n            *(*0x20 + -0x50) = 0x44087f;\n            fcn.00435540();\n            *(*0x20 + -0x50) = 0x440890;\n            fcn.00435e40();\n            *(*0x20 + -0x50) = 0x44089c;\n            fcn.00435c40();\n            *(*0x20 + -0x50) = 0x4408ad;\n            fcn.00435e40();\n            *(*0x20 + -0x50) = 0x4408b9;\n            fcn.00435c40();\n            *(*0x20 + -0x50) = 0x4408ca;\n            fcn.00435e40();\n            *(*0x20 + -0x50) = 0x4408d7;\n            fcn.00435c40();\n            *(*0x20 + -0x50) = 0x4408e8;\n            fcn.00435e40();\n            *(*0x20 + -0x50) = 0x4408f4;\n            fcn.00435c40();\n            *(*0x20 + -0x50) = 0x4408f9;\n            fcn.004357a0();\n            *(*0x20 + -0x50) = 0x4408fe;\n            fcn.004355c0();\n            *(*0x20 + -0x50) = 0x44090f;\n            fcn.00433c80();\n        }\n        *(puVar7 + -8) = 0x440915;\n        fcn.0045bb60();\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1587
    },
    "00440ea0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00440ea0(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    bool bVar6;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0040a460();\n    iVar4 = 0;\n    for (iVar3 = 0; iVar3 < *0x7ada48; iVar3 = iVar3 + 1) {\n        iVar2 = *(*0x7ada40 + iVar3 * 8);\n        if (iVar2 != 0) {\n            iVar1 = *(iVar2 + 4);\n            if ((iVar1 == 1) || (iVar1 == 2)) {\n                if (*(iVar2 + 0x18) == *(iVar2 + 0x10)) {\n                    iVar5 = *(iVar2 + 0x20) + 10000000;\n                    if (iVar5 <= in_RAX) {\n                        fcn.00441180();\n                    }\n                    bVar6 = iVar5 <= in_RAX;\n                }\n                else {\n                    *(iVar2 + 0x18) = *(iVar2 + 0x10);\n                    *(iVar2 + 0x20) = in_RAX;\n                    bVar6 = false;\n                }\n            }\n            else {\n                bVar6 = false;\n            }\n            if (iVar1 == 2) {\n                if ((bVar6) || (*(iVar2 + 0x28) == *(iVar2 + 0x14))) {\n                    do {\n                    } while (*(iVar2 + 0x194) != *(iVar2 + 0x194));\n                    if (*(iVar2 + 0x194) == *(iVar2 + 400)) {\n                        if (*(iVar2 + 0x998) == 0) {\n                            bVar6 = *0x7ae55c + *0x7ae558 != 0;\n                        }\n                        else {\n                            bVar6 = false;\n                        }\n                    }\n                    else {\n                        bVar6 = false;\n                    }\n                    if ((!bVar6) || (*(iVar2 + 0x30) + 10000000 <= in_RAX)) {\n                        fcn.0040a680();\n                        fcn.004405c0();\n                        LOCK();\n                        if (*(iVar2 + 4) == 2) {\n                            *(iVar2 + 4) = 0;\n                            if (*0x7b3b90 != '\\0') {\n                                fcn.00452360();\n                                fcn.00451be0();\n                            }\n                            *(iVar2 + 0x14) = *(iVar2 + 0x14) + 1;\n                            fcn.0043a420();\n                            iVar4 = iVar4 + 1;\n                        }\n                        fcn.004405c0();\n                        fcn.0040a460();\n                    }\n                }\n                else {\n                    *(iVar2 + 0x28) = *(iVar2 + 0x14);\n                    *(iVar2 + 0x30) = in_RAX;\n                }\n            }\n        }\n    }\n    fcn.0040a680();\n    return iVar4;\n}\n",
        "token_count": 745
    },
    "004410e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.004410e0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    int64_t unaff_R14;\n    \n    while (iVar2 = *0x7ada48,  iVar1 = *0x7ada40,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    uVar5 = 0;\n    for (iVar4 = 0; iVar4 < iVar2; iVar4 = iVar4 + 1) {\n        if (*(*(iVar1 + iVar4 * 8) + 4) == 1) {\n            uVar3 = fcn.00441180();\n            uVar5 = uVar5 & 0xff | uVar3;\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 226
    },
    "00441180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00441180(void)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    piVar1 = *(in_RAX + 0x38);\n    if ((piVar1 != NULL) && (*(unaff_R14 + 0x30) != piVar1)) {\n        iVar2 = piVar1[0x12];\n        if ((iVar2 != 0) && (*piVar1 != iVar2)) {\n            *(iVar2 + 0xb1) = 1;\n            *(iVar2 + 0x10) = 0xfffffffffffffade;\n            if (*0x801e98 == 0) {\n                *(in_RAX + 0x22c8) = 1;\n                fcn.004313a0();\n            }\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 257
    },
    "004413a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004413a0(void)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    char in_AL;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    int64_t iStack176;\n    uint64_t uStack48;\n    int64_t iStack40;\n    int64_t iStack32;\n    ulong uStack24;\n    int64_t iStack16;\n    \n    while (&uStack48 < *(unaff_R14 + 0x10) || &uStack48 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0045fb60();\n    if (*0x801b68 == 0) {\n        *0x801b68 = iStack176;\n    }\n    fcn.0040a460();\n    iStack40 = *0x801b68;\n    uStack48 = *0x7ae558;\n    fcn.00435540();\n    fcn.00435e40();\n    fcn.00435c40(iStack176 - iStack40 >> 0x3f, (iStack176 - iStack40) / 1000000);\n    fcn.00435e40();\n    fcn.00435c40();\n    fcn.00435e40();\n    fcn.00435b40();\n    fcn.00435e40();\n    fcn.00435c40();\n    fcn.00435e40();\n    fcn.00435b40();\n    fcn.00435e40();\n    fcn.00435c40();\n    fcn.00435e40();\n    fcn.00435c40();\n    fcn.004355c0();\n    if (in_AL != '\\0') {\n        uStack48 = *0x7ae5e0;\n        iStack40 = *0x7ae52c;\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.00435b40();\n        fcn.00435e40();\n        fcn.00435c40();\n        fcn.00435e40();\n        fcn.00435c40();\n        fcn.00435e40();\n        fcn.00435b40();\n        fcn.004357a0();\n        fcn.004355c0();\n    }\n    iVar3 = *0x7ada48;\n    iStack16 = *0x7ada40;\n    for (iVar4 = 0; iVar4 < iVar3; iVar4 = iVar4 + 1) {\n        iVar2 = *(iStack16 + iVar4 * 8);\n        uVar1 = *(iVar2 + 400);\n        if (in_AL == '\\0') {\n            fcn.00435540();\n            fcn.00435760();\n            fcn.004355c0();\n            if (iVar4 == 0) {\n                fcn.00435540();\n                fcn.00435e40();\n                fcn.004355c0();\n            }\n            fcn.00435540();\n            fcn.00435b40(uVar1);\n            fcn.004355c0();\n            if (iVar4 == *0x7ada48 + -1) {\n                fcn.00435540();\n                fcn.00435e40();\n                fcn.004355c0();\n            }\n        }\n        else {\n            uStack48 = *(iVar2 + 4);\n            iStack40 = *(iVar2 + 0x9a8);\n            fcn.00435540();\n            fcn.00435e40();\n            fcn.00435c40();\n            fcn.00435e40();\n            fcn.00435b40();\n            fcn.00435e40();\n            fcn.00435b40();\n            fcn.00435e40();\n            fcn.00435b40();\n            fcn.00435e40();\n            fcn.00435c40();\n            fcn.00435e40();\n            fcn.00435b40(uVar1);\n            fcn.00435e40();\n            fcn.00435c40();\n            fcn.00435e40();\n            fcn.00435c40();\n            fcn.004357a0();\n            fcn.004355c0();\n        }\n    }\n    iVar4 = *0x7ad048;\n    if (in_AL != '\\0') {\n        while (iVar4 != 0) {\n            iStack40 = *(iVar4 + 0xb8);\n            uStack48 = *(iVar4 + 0xc4);\n            uStack24 = *(iVar4 + 200);\n            iStack32 = iVar4;\n            fcn.00435540();\n            fcn.00435e40();\n            fcn.00435c40();\n            fcn.00435e40();\n            fcn.00435c40();\n            fcn.00435e40();\n            fcn.00435c40();\n            fcn.00435e40();\n            fcn.00435c40();\n            fcn.00435e40();\n            fcn.00435b40();\n            fcn.00435e40();\n            fcn.00435e40();\n            fcn.00435e40();\n            fcn.00435c40();\n            fcn.00435e40();\n            fcn.00435c40();\n            fcn.00435e40();\n            fcn.004357e0();\n            fcn.00435e40();\n            fcn.004357e0();\n            fcn.00435e40();\n            fcn.00435c40();\n            fcn.004357a0();\n            fcn.004355c0();\n            iVar4 = *(iStack32 + 0x120);\n        }\n        fcn.00437220();\n        fcn.0040a640();\n        return;\n    }\n    fcn.0040a640();\n    return;\n}\n",
        "token_count": 1310
    },
    "00441ba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00441ba0(void)\n\n{\n    uint8_t in_AL;\n    uint8_t uVar1;\n    int32_t iVar2;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0040a460();\n    iVar2 = *0x7ae590;\n    uVar1 = in_AL ^ 1;\n    if (*0x7ae578 != uVar1) {\n        *0x7ae578 = uVar1;\n        if (in_AL == 0) {\n            fcn.0040a680();\n        }\n        else {\n            *0x7ae590 = 0;\n            if (*0x7ae588 != 0) {\n                *(*0x7ae588 + 0xa0) = 0;\n                if (*0x7ae568 == 0) {\n                    *0x7ae560 = *0x7ae580;\n                }\n                else {\n                    *(*0x7ae568 + 0xa0) = *0x7ae580;\n                }\n                *0x7ae568 = *0x7ae588;\n            }\n            *0x7ae570 = *0x7ae570 + iVar2;\n            *0x7ae580 = in_XMM15;\n            fcn.0040a680();\n            while ((iVar2 != 0 && (*0x7ae558 != 0))) {\n                fcn.0043a160();\n                iVar2 = iVar2 + -1;\n            }\n        }\n        return;\n    }\n    fcn.0040a680();\n    return;\n}\n",
        "token_count": 396
    },
    "004425a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004425a0(ulong arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong uVar5;\n    int64_t in_RAX;\n    uchar (*unaff_RBX) [16];\n    int32_t iVar6;\n    int32_t iVar7;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    iVar1 = *(in_RAX + 400);\n    iVar7 = 0;\n    for (iVar6 = *(in_RAX + 0x194); (iVar2 = **unaff_RBX,  iVar2 != 0 && (iVar6 - iVar1 < 0x100)); iVar6 = iVar6 + 1) {\n        if ((iVar2 != 0) && (iVar3 = *(iVar2 + 0xa0),  **unaff_RBX = iVar3,  iVar3 == 0)) {\n            *(*unaff_RBX + 8) = 0;\n        }\n        *(in_RAX + 0x198 + iVar6 * 8) = iVar2;\n        iVar7 = iVar7 + 1;\n    }\n    *(in_RAX + 0x194) = iVar6;\n    if (**unaff_RBX != 0) {\n        fcn.0040a460();\n        iVar2 = *(*unaff_RBX + 8);\n        uVar4 = **unaff_RBX;\n        uVar5 = *0x7ae560;\n        iVar3 = *0x7ae568;\n        if ((iVar2 != 0) && (*(iVar2 + 0xa0) = 0,  uVar5 = uVar4,  iVar3 = iVar2,  *0x7ae568 != 0)) {\n            *(*0x7ae568 + 0xa0) = uVar4;\n            uVar5 = *0x7ae560;\n        }\n        *0x7ae568 = iVar3;\n        *0x7ae560 = uVar5;\n        *0x7ae570 = *0x7ae570 + (arg1 - iVar7);\n        *unaff_RBX = in_XMM15;\n        fcn.0040a680();\n    }\n    return;\n}\n",
        "token_count": 549
    },
    "004428a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.004428a0(uint64_t arg1)\n\n{\n    uint64_t *puVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t in_RAX;\n    uint64_t uVar5;\n    int64_t unaff_RBX;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    char unaff_DIL;\n    int64_t unaff_R14;\n    \n    while (uVar5 = arg1,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n        arg1 = arg1 & 0xffffffff;\n    }\n    do {\n        while( true ) {\n            iVar2 = *(in_RAX + 400);\n            uVar6 = *(in_RAX + 0x194) - iVar2;\n            uVar6 = uVar6 - (uVar6 >> 1);\n            if (uVar6 == 0) break;\n            if (uVar6 < 0x81) {\n                for (uVar7 = 0; uVar7 < uVar6; uVar7 = uVar7 + 1) {\n                    *(unaff_RBX + (uVar7 + uVar5 & 0xff) * 8) = *(in_RAX + 0x198 + (uVar7 + iVar2 & 0xff) * 8);\n                }\n                LOCK();\n                if (iVar2 == *(in_RAX + 400)) {\n                    *(in_RAX + 400) = uVar6 + iVar2;\n                    return uVar6;\n                }\n            }\n        }\n        if ((unaff_DIL == '\\0') || (uVar3 = *(in_RAX + 0x998),  uVar3 == 0)) {\n            return 0;\n        }\n        if (*(in_RAX + 4) == 1) {\n            fcn.0045ba20();\n            uVar5 = arg1 & 0xffffffff;\n        }\n        LOCK();\n        puVar1 = in_RAX + 0x998;\n        uVar4 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar3 == uVar4) * *puVar1;\n    } while (uVar3 != uVar4);\n    *(unaff_RBX + (uVar5 & 0xff) * 8) = uVar3;\n    return 1;\n}\n",
        "token_count": 564
    },
    "00442a40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00442a40(ulong arg1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    int32_t iVar5;\n    int64_t in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar2 = *(in_RAX + 0x194);\n            *(*0x20 + -0xc) = uVar2;\n            *(*0x20 + -0x30) = 0x442a7d;\n            iVar5 = fcn.004428a0(uVar2);\n            if (iVar5 == 0) {\n                return 0;\n            }\n            iVar1 = iVar5 + *(*0x20 + -0xc) + -1;\n            iVar3 = *(*0x20 + 8);\n            uVar4 = *(iVar3 + 0x198 + iVar1 * 8);\n            if (iVar5 == 1) {\n                return uVar4;\n            }\n            uVar2 = ((*(*0x20 + -0xc) - *(iVar3 + 400)) + iVar5) - 1;\n            arg1._0_1_ = uVar2;\n            if (uVar2 < 0x100) {\n                *(iVar3 + 0x194) = iVar1;\n                return uVar4;\n            }\n            unaff_RBX = 0x18;\n            *(*0x20 + -0x30) = 0x442afa;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        puVar6[0x18] = arg1;\n        *(puVar6 + -8) = 0x442b0e;\n        fcn.0045bb60();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1._0_1_ = puVar6[0x18];\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 606
    },
    "00442b40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00442b40(void)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int64_t *in_RAX;\n    ulong uVar3;\n    ulong uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    ulong uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xa8 && *0x20 + -0xa8 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x128;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*in_RAX != 1) {\n                if (*in_RAX == 2) {\n                    return;\n                }\n                *(*0x20 + 8) = in_RAX;\n                *in_RAX = 1;\n                uVar5 = 0;\n                while (uVar5 <= in_RAX[1] && in_RAX[1] != uVar5) {\n                    *(*0x20 + -0xe8) = uVar5;\n                    *(*0x20 + -0x130) = 0x442bb1;\n                    fcn.00442b40();\n                    in_RAX = *(*0x20 + 8);\n                    uVar5 = *(*0x20 + -0xe8) + 1;\n                }\n                if (in_RAX[2] == 0) {\n                    *in_RAX = 2;\n                    return;\n                }\n                if (*0x801ca0 == '\\0') {\n                    uVar3 = 0;\n                    uVar4 = 0;\n                    uVar7 = 0;\n                }\n                else {\n                    *(*0x20 + -0x130) = 0x442be5;\n                    fcn.0045fb60();\n                    uVar3 = *(*0x20 + -0x128);\n                    in_RAX = *(*0x20 + 8);\n                    uVar4 = *0x801cb8;\n                    uVar7 = *0x801cb0;\n                }\n                *(*0x20 + -0xe0) = uVar4;\n                *(*0x20 + -0xd8) = uVar7;\n                *(*0x20 + -0x100) = uVar3;\n                *(*0x20 + -0x18) = in_RAX + in_RAX[1] + 3;\n                uVar5 = 0;\n                while (uVar5 <= in_RAX[2] && in_RAX[2] != uVar5) {\n                    *(*0x20 + -0xf0) = uVar5;\n                    pcVar1 = *(uVar5 * 8 + *(*0x20 + -0x18));\n                    *(*0x20 + -0x130) = 0x442c6d;\n                    (*pcVar1)(uVar4);\n                    in_RAX = *(*0x20 + 8);\n                    uVar4 = *(*0x20 + -0xe0);\n                    uVar3 = *(*0x20 + -0x100);\n                    uVar5 = *(*0x20 + -0xf0) + 1;\n                }\n                if (*0x801ca0 == '\\0') goto code_r0x00442e3e;\n                *(*0x20 + -0x130) = 0x442ca5;\n                fcn.0045fb60(uVar4, uVar3);\n                uVar9 = 0;\n                uVar10 = 0;\n                uVar11 = 0;\n                uVar12 = 0;\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                *(*0x20 + -0xc0) = *0x801cb0;\n                *(*0x20 + -200) = *0x801cb8;\n                uVar4 = *(*0x20 + -0x128);\n                *(*0x20 + -0x108) = uVar4;\n                *(*0x20 + -0x130) = 0x442cea;\n                fcn.0044cfe0();\n                *(*0x20 + -0x130) = 0x442cef;\n                uVar3 = fcn.0044d800();\n                *(*0x20 + -0x20) = uVar3;\n                *(*0x20 + -0xf8) = uVar4;\n                *(*0x20 + -0xb8) = CONCAT412(uVar12, CONCAT48(uVar11, CONCAT44(uVar10, uVar9)));\n                *(*0x20 + -0xb0) = CONCAT412(uVar12, CONCAT48(uVar11, CONCAT44(uVar10, uVar9)));\n                *(*0x20 + -0x130) = 0x442d0d;\n                fcn.00435540();\n                *(*0x20 + -0x130) = 0x442d1e;\n                fcn.00435e40();\n                *(*0x20 + -0x130) = 0x442d30;\n                fcn.00435e40();\n                *(*0x20 + -0x130) = 0x442d45;\n                fcn.00435e40();\n                *(*0x20 + -0x130) = 0x442d4a;\n                fcn.004355c0();\n                *(*0x20 + -0x130) = 0x442d6b;\n                uVar4 = fcn.00418f80(0x18);\n                *(*0x20 + -0x130) = 0x442d7e;\n                uVar3 = fcn.0044b220(0x18);\n                *(*0x20 + -0x10) = uVar3;\n                *(*0x20 + -0xd0) = uVar4;\n                *(*0x20 + -0x130) = 0x442d90;\n                fcn.00435540();\n                *(*0x20 + -0x130) = 0x442da5;\n                fcn.00435e40();\n                *(*0x20 + -0x130) = 0x442db6;\n                fcn.00435e40();\n                *(*0x20 + -0x130) = 0x442dbb;\n                fcn.004355c0();\n                *(*0x20 + -0x130) = 0x442dda;\n                uVar4 = fcn.00418f80(0x18);\n                *(*0x20 + -0x130) = 0x442ded;\n                uVar3 = fcn.0044b220(0x18);\n                *(*0x20 + -0x10) = uVar3;\n                *(*0x20 + -0xd0) = uVar4;\n                *(*0x20 + -0x130) = 0x442dff;\n                fcn.00435540();\n                *(*0x20 + -0x130) = 0x442e11;\n                fcn.00435e40();\n                *(*0x20 + -0x130) = 0x442e25;\n                fcn.00435e40();\n                *(*0x20 + -0x130) = 0x442e2a;\n                fcn.004355c0();\n                uVar5 = *(*0x20 + -200) - *(*0x20 + -0xe0);\n                uVar6 = 0x17;\n                while (cVar2 = uVar5,  9 < uVar5) {\n                    uVar5 = uVar5 / 10;\n                    if (0x17 < uVar6) goto code_r0x00443025;\n                    *(*0x20 + (uVar6 - 0xb8)) = cVar2 + uVar5 * -10 + '0';\n                    uVar6 = uVar6 - 1;\n                }\n                if (uVar6 < 0x18) {\n                    *(*0x20 + (uVar6 - 0xb8)) = cVar2 + '0';\n                    *(*0x20 + -0x130) = 0x442ed8;\n                    uVar4 = fcn.0044b220(-(uVar6 - 0x18));\n                    *(*0x20 + -0x10) = uVar4;\n                    *(*0x20 + -0xd0) = *0x20 + ((uVar6 & uVar6 - 0x18 >> 0x3f) - 0xb8);\n                    *(*0x20 + -0x130) = 0x442eea;\n                    fcn.00435540();\n                    *(*0x20 + -0x130) = 0x442efc;\n                    fcn.00435e40();\n                    *(*0x20 + -0x130) = 0x442f0d;\n                    fcn.00435e40();\n                    *(*0x20 + -0x130) = 0x442f12;\n                    fcn.004355c0();\n                    uVar6 = *(*0x20 + -0xc0) - *(*0x20 + -0xd8);\n                    uVar5 = 0x17;\n                    while (cVar2 = uVar6,  9 < uVar6) {\n                        uVar6 = uVar6 / 10;\n                        if (0x17 < uVar5) goto code_r0x00443006;\n                        *(*0x20 + (uVar5 - 0xb8)) = cVar2 + uVar6 * -10 + '0';\n                        uVar5 = uVar5 - 1;\n                    }\n                    if (uVar5 < 0x18) {\n                        *(*0x20 + (uVar5 - 0xb8)) = cVar2 + '0';\n                        *(*0x20 + -0x130) = 0x442fa5;\n                        uVar4 = fcn.0044b220(-(uVar5 - 0x18));\n                        *(*0x20 + -0x10) = uVar4;\n                        *(*0x20 + -0xd0) = *0x20 + ((uVar5 & uVar5 - 0x18 >> 0x3f) - 0xb8);\n                        *(*0x20 + -0x130) = 0x442fb7;\n                        fcn.00435540();\n                        *(*0x20 + -0x130) = 0x442fc9;\n                        fcn.00435e40();\n                        *(*0x20 + -0x130) = 0x442fda;\n                        fcn.00435e40();\n                        *(*0x20 + -0x130) = 0x442fdf;\n                        fcn.004355c0();\n                        *(*0x20 + -0x130) = 0x442fe5;\n                        fcn.00435540();\n                        *(*0x20 + -0x130) = 0x442fea;\n                        fcn.004357a0();\n                        *(*0x20 + -0x130) = 0x442fef;\n                        fcn.004355c0();\n                        in_RAX = *(*0x20 + 8);\ncode_r0x00442e3e:\n                        *in_RAX = 2;\n                        return;\n                    }\n                    *(*0x20 + -0x130) = 0x443006;\n                    fcn.0045e240(0x18);\ncode_r0x00443006:\n                    *(*0x20 + -0x130) = 0x443013;\n                    fcn.0045e240(0x18);\n                }\n                *(*0x20 + -0x130) = 0x443025;\n                fcn.0045e240(0x18);\ncode_r0x00443025:\n                *(*0x20 + -0x130) = 0x443032;\n                fcn.0045e240(0x18);\n            }\n            *(*0x20 + -0x130) = 0x443045;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + -8) = 0x443050;\n        fcn.0045bb60();\n        in_RAX = *(puVar8 + 8);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 2813
    },
    "00443060": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00443060(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    uint in_EAX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    uVar1 = unaff_RBX;\n    *0x8019c4 = in_EAX;\n    if (*0x801c20 != 0) {\n        fcn.0045dee0(arg1, arg2, arg3, arg4);\n        uVar1 = *0x7ad050;\n    }\n    *0x7ad050 = uVar1;\n    return;\n}\n",
        "token_count": 188
    },
    "004430c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004431fa)\n// WARNING: Removing unreachable block (ram,0x0044320b)\n// WARNING: Removing unreachable block (ram,0x0044321c)\n// WARNING: Removing unreachable block (ram,0x0044322d)\n// WARNING: Removing unreachable block (ram,0x0044323e)\n// WARNING: Removing unreachable block (ram,0x0044324f)\n// WARNING: Removing unreachable block (ram,0x00443265)\n// WARNING: Removing unreachable block (ram,0x00443276)\n// WARNING: Removing unreachable block (ram,0x00443287)\n// WARNING: Removing unreachable block (ram,0x00443298)\n\nulong fcn.004430c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    LOCK();\n    LOCK();\n    LOCK();\n    *0x801b80 = 0x2a;\n    *0x801b88 = 0x30000000003;\n    return 0x2a;\n}\n",
        "token_count": 272
    },
    "00443cc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00443cc0(void)\n\n{\n    int32_t *piVar1;\n    int64_t in_RAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            piVar1 = in_RAX + 0x28;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            iVar2 = iVar2 + -1;\n            if (-1 < iVar2) goto code_r0x00443d36;\n            if ((iVar2 != -1) && (iVar2 != -0x40000001)) {\n                LOCK();\n                piVar1 = in_RAX + 0x2c;\n                iVar2 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n                if (iVar2 == 1) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x20) = 0x443d10;\n                    fcn.0040a460();\n                    if (*(*(*0x20 + 8) + 0x20) != 0) {\n                        *(*0x20 + -0x20) = 0x443d2a;\n                        fcn.0040a760();\n                    }\n                    *(*0x20 + -0x20) = 0x443d36;\n                    fcn.0040a680();\n                }\ncode_r0x00443d36:\n                iVar2 = *(*(unaff_R14 + 0x30) + 0xd8);\n                *(*(unaff_R14 + 0x30) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(*0x20 + -0x20) = 0x443d7b;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x443d86;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 635
    },
    "00444060": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00444060(uint64_t **arg1)\n\n{\n    uchar *puVar1;\n    uint16_t uVar2;\n    int64_t *piVar3;\n    uchar auVar4 [16];\n    int64_t in_RAX;\n    uint64_t **ppuVar5;\n    uint64_t **ppuVar6;\n    uint64_t **ppuVar7;\n    int64_t iVar8;\n    uint64_t **arg3;\n    ulong uVar9;\n    uint64_t *puVar10;\n    uint64_t *puVar11;\n    uint64_t *puVar12;\n    uint64_t **arg1_00;\n    uchar uVar13;\n    uint64_t arg2;\n    uint64_t *puVar14;\n    uint64_t **noname_1;\n    uint64_t **unaff_RBX;\n    uchar *puVar15;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    uint64_t **unaff_RDI;\n    uint64_t **in_R8;\n    uint64_t **arg4;\n    int64_t iVar16;\n    uint64_t **ppuVar17;\n    uint64_t **ppuVar18;\n    char cVar19;\n    uint64_t uVar20;\n    uint64_t **unaff_R13;\n    uint64_t **unaff_R14;\n    uint64_t **unaff_R15;\n    int64_t in_GS_OFFSET;\n    bool bVar21;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar15 = *0x20;\n        if (unaff_R14[2] <= *0x20 + -0xb8 && *0x20 + -0xb8 != unaff_R14[2]) {\n            puVar15 = *0x20 + -0x138;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            ppuVar17 = unaff_RSI + unaff_RDI;\n            ppuVar5 = ppuVar17;\n            if (ppuVar17 < 0x10001) {\n                iVar8 = unaff_RDI + unaff_RSI + -0x20000;\n                arg2 = ppuVar17 * 2 & iVar8 >> 0x3f;\n                ppuVar5 = unaff_RBX + arg2;\n                if (ppuVar17 <= -iVar8) {\n                    *(*0x20 + 0x10) = unaff_RBX;\n                    *(*0x20 + 0x20) = unaff_RDI;\n                    *(*0x20 + 0x30) = in_R8;\n                    *(*0x20 + -0xa8) = ppuVar17;\n                    *(*0x20 + -0xb0) = arg2;\n                    *(*0x20 + -0x88) = ppuVar5;\n                    *(*0x20 + 8) = in_RAX;\n                    if (*0x801a60 == 0) {\n                        unaff_RSI = 0;\n                        arg1_00 = ppuVar17;\n                    }\n                    else {\n                        *(*0x20 + -0x140) = 0x444114;\n                        fcn.0045dc20(ppuVar17, arg2);\n                        in_XMM15_Da = 0;\n                        in_XMM15_Db = 0;\n                        in_XMM15_Dc = 0;\n                        in_XMM15_Dd = 0;\n                        unaff_R14 = **(in_GS_OFFSET + 0x28);\n                        unaff_RSI = *(*0x20 + -0x138);\n                        arg1_00 = *(*0x20 + -0xa8);\n                        arg2 = *(*0x20 + -0xb0);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        unaff_RDI = *(*0x20 + 0x20);\n                        in_R8 = *(*0x20 + 0x30);\n                        ppuVar5 = *(*0x20 + -0x88);\n                        in_RAX = *(*0x20 + 8);\n                    }\n                    ppuVar6 = NULL;\n                    for (iVar8 = 0; iVar8 < arg1_00; iVar8 = iVar8 + 1) {\n                        iVar16 = iVar8 * 0x10;\n                        if (*(in_RAX + iVar16) == 0) {\n                            unaff_R13 = in_RAX + iVar16 + 8;\n                            if (*0x801c20 == 0) {\n                                *(in_RAX + 8 + iVar16) = 0;\n                            }\n                            else {\n                                *(*0x20 + -0x140) = 0x444256;\n                                in_RAX = fcn.0045df40(arg1_00, arg2, in_R8);\n                                unaff_R15 = ppuVar5;\n                            }\n                        }\n                        else {\n                            unaff_R15 = 0xa0761d6478bd642f;\n                            unaff_R13 = unaff_R14[6][0x1e] + 0xa0761d6478bd642f;\n                            auVar4 = ZEXT816(unaff_R13) * ZEXT816(unaff_R13 ^ 0xe7037ed1a0b428db);\n                            unaff_R14[6][0x1e] = unaff_R13;\n                            ppuVar5 = (SUB164(auVar4, 0) ^ SUB164(auVar4 >> 0x40, 0)) * (ppuVar6 + 1U & 0xffffffff) >>\n                                      0x20;\n                            ppuVar17 = arg1_00;\n                            if (arg1_00 <= ppuVar5) goto code_r0x00445558;\n                            if (arg1_00 <= ppuVar6) goto code_r0x00445550;\n                            *(unaff_RBX + ppuVar6 * 2) = *(unaff_RBX + ppuVar5 * 2);\n                            *(unaff_RBX + ppuVar5 * 2) = iVar8;\n                            in_RAX = *(*0x20 + 8);\n                            arg2 = *(*0x20 + -0xb0);\n                            ppuVar5 = *(*0x20 + -0x88);\n                            ppuVar6 = ppuVar6 + 1U;\n                        }\n                    }\n                    ppuVar17 = ppuVar6;\n                    if (ppuVar6 <= arg1_00) {\n                        ppuVar17 = NULL;\ncode_r0x00444280:\n                        ppuVar18 = ppuVar6;\n                        if (ppuVar6 <= ppuVar17) {\n                            while (ppuVar17 = ppuVar18 - 1,  -1 < ppuVar17) {\n                                uVar2 = *(ppuVar5 + ppuVar17 * 2);\n                                arg4 = ppuVar5;\n                                if (arg1_00 <= uVar2) goto code_r0x00445498;\n                                *(*0x20 + -0xe8) = ppuVar17;\n                                *(*0x20 + -0x104) = uVar2;\n                                ppuVar7 = *(in_RAX + uVar2 * 0x10);\n                                *(*0x20 + -0x68) = ppuVar7;\n                                *(ppuVar5 + ppuVar17 * 2) = *(unaff_RBX + arg2);\n                                ppuVar18 = ppuVar17;\n                                unaff_R15 = NULL;\n                                while (ppuVar5 = unaff_RDI,  noname_1 = unaff_R15 * 2 + 1,  unaff_RDI = ppuVar5, \n                                      noname_1 < ppuVar18) {\n                                    unaff_R13 = unaff_R15 * 2 + 2;\n                                    if (unaff_R13 < ppuVar18) {\n                                        ppuVar17 = ppuVar18;\n                                        if (ppuVar6 <= noname_1) goto code_r0x0044548d;\n                                        ppuVar18 = *(arg4 + unaff_R15 * 4 + 2);\n                                        if (arg1_00 <= ppuVar18) goto code_r0x00445485;\n                                        ppuVar18 = *(in_RAX + ppuVar18 * 0x10);\n                                        if (ppuVar6 <= unaff_R13) goto code_r0x00445478;\n                                        *(*0x20 + -0xf0) = unaff_R15;\n                                        unaff_R15 = *(arg4 + unaff_R15 * 4 + 4);\n                                        if (arg1_00 <= unaff_R15) goto code_r0x00445470;\n                                        if (ppuVar18 < *(in_RAX + unaff_R15 * 0x10)) {\n                                            ppuVar18 = *(*0x20 + -0xe8);\n                                            unaff_R15 = *(*0x20 + -0xf0);\n                                            noname_1 = unaff_R13;\n                                        }\n                                        else {\n                                            ppuVar18 = *(*0x20 + -0xe8);\n                                            unaff_R15 = *(*0x20 + -0xf0);\n                                        }\n                                    }\n                                    if (ppuVar6 <= noname_1) goto code_r0x00445465;\n                                    uVar2 = *(arg4 + noname_1 * 2);\n                                    unaff_R13 = uVar2;\n                                    if (arg1_00 <= unaff_R13) goto code_r0x00445458;\n                                    *(*0x20 + -0x102) = uVar2;\n                                    unaff_R13 = *(in_RAX + unaff_R13 * 0x10);\n                                    if (unaff_R13 <= ppuVar7) {\n                                        uVar2 = *(*0x20 + -0x104);\n                                        break;\n                                    }\n                                    if (ppuVar6 <= unaff_R15) goto code_r0x0044544d;\ncode_r0x00445357:\n                                    *(arg4 + unaff_R15 * 2) = *(*0x20 + -0x102);\n                                    ppuVar7 = *(*0x20 + -0x68);\n                                    uVar2 = *(*0x20 + -0x104);\n                                    unaff_RDI = ppuVar5;\n                                    unaff_R15 = noname_1;\n                                }\n                                unaff_R13 = uVar2;\n                                if (ppuVar6 <= unaff_R15) goto code_r0x00445442;\n                                *(arg4 + unaff_R15 * 2) = uVar2;\n                                arg2 = *(*0x20 + -0xb0);\n                                ppuVar5 = arg4;\n                            }\n                            *(*0x20 + -0x100) = unaff_RSI;\n                            *(*0x20 + -0xf8) = ppuVar6;\n                            *(*0x20 + -0x140) = 0x444350;\n                            fcn.00443da0(arg1_00, arg2, arg1_00);\n                            noname_1 = *(*0x20 + 0x20);\n                            ppuVar7 = *(*0x20 + 8);\n                            unaff_RSI = *(*0x20 + -0xf8);\n                            arg4 = *(*0x20 + 0x10);\n                            arg3 = NULL;\n                            unaff_RBX = arg1_00;\n                            arg1_00 = *(*0x20 + -0xa8);\n                            break;\n                        }\n                        ppuVar18 = *(unaff_RBX + ppuVar17 * 2);\n                        if (ppuVar18 < arg1_00) {\n                            uVar20 = *(in_RAX + ppuVar18 * 0x10);\n                            *(*0x20 + -0x60) = uVar20;\n                            arg4 = ppuVar5;\n                            unaff_R13 = ppuVar17;\n                            goto code_r0x004454c6;\n                        }\ncode_r0x00445538:\n                        *(*0x20 + -0x140) = 0x445545;\n                        fcn.0045e240(arg1_00);\n                        ppuVar17 = ppuVar6;\n                    }\n                    *(*0x20 + -0x140) = 0x445550;\n                    fcn.0045e2c0(ppuVar17, arg1_00);\ncode_r0x00445550:\n                    *(*0x20 + -0x140) = 0x445558;\n                    fcn.0045e240(ppuVar17);\ncode_r0x00445558:\n                    *(*0x20 + -0x140) = 0x44555d;\n                    fcn.0045e240(ppuVar17);\n                }\n                *(*0x20 + -0x140) = 0x445568;\n                ppuVar5 = ppuVar17;\n                fcn.0045e380(ppuVar17, ppuVar17);\n                arg1 = ppuVar17;\n            }\n            unaff_RBX = 0x10000;\n            *(*0x20 + -0x140) = 0x445572;\n            in_RAX = fcn.0045e340(arg1, ppuVar5);\n        }\n        *(puVar15 + 8) = in_RAX;\n        *(puVar15 + 0x10) = unaff_RBX;\n        *(puVar15 + 0x18) = arg1;\n        *(puVar15 + 0x20) = unaff_RDI;\n        *(puVar15 + 0x28) = unaff_RSI;\n        puVar15[0x30] = in_R8;\n        *(puVar15 + -8) = 0x445596;\n        fcn.0045bb60();\n        in_RAX = *(puVar15 + 8);\n        unaff_RBX = *(puVar15 + 0x10);\n        arg1 = *(puVar15 + 0x18);\n        unaff_RDI = *(puVar15 + 0x20);\n        unaff_RSI = *(puVar15 + 0x28);\n        in_R8 = puVar15[0x30];\n        *0x20 = puVar15;\n    } while( true );\ncode_r0x00444380:\n    if (arg3 < unaff_RSI) {\n        ppuVar18 = *(arg4 + arg3 * 2);\n        if (arg1_00 <= ppuVar18) {\n            *(*0x20 + -0x140) = 0x445357;\n            in_R8 = arg1_00;\n            in_RAX = fcn.0045e240(arg1_00);\n            goto code_r0x00445357;\n        }\n        *(*0x20 + -0xb0) = ppuVar18;\n        ppuVar17 = ppuVar18 * 0x10;\n        ppuVar5 = ppuVar7[ppuVar18 * 2];\n        *(*0x20 + -0x70) = ppuVar5;\n        if (ppuVar18 < noname_1) {\n            if (*(ppuVar5 + 0x1c) != 0) {\n                ppuVar5 = *(*0x20 + -0x88);\ncode_r0x00444de8:\n                *(*0x20 + -0x140) = 0x444df6;\n                arg3 = arg1_00;\n                fcn.00443ea0(arg1_00, noname_1, arg1_00);\n                *(*0x20 + -0x140) = 0x444e09;\n                fcn.004334e0();\n                goto code_r0x00444e09;\n            }\n            goto code_r0x00444e48;\n        }\n        do {\n            puVar12 = ppuVar5[9];\n            if (puVar12 == NULL) {\n                puVar12 = NULL;\n                break;\n            }\n            puVar11 = puVar12[1];\n            if (puVar11 == NULL) {\n                if (*0x801c20 == 0) {\n                    *(ppuVar5 + 9) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                }\n                else {\n                    uVar9 = 0;\n                    *(*0x20 + -0x140) = 0x44511d;\n                    fcn.0045dec0(arg3, 0, arg1_00, arg4);\n                    *(*0x20 + -0x140) = 0x445126;\n                    ppuVar7 = fcn.0045dec0(arg3, uVar9, arg1_00, arg4);\n                }\n            }\n            else if (*0x801c20 == 0) {\n                puVar11[2] = 0;\n                ppuVar5[9] = puVar11;\n                puVar12[1] = 0;\n            }\n            else {\n                uVar9 = 0;\n                *(*0x20 + -0x140) = 0x4450ca;\n                fcn.0045dec0(arg3, 0, arg1_00, arg4);\n                *(*0x20 + -0x140) = 0x4450d8;\n                fcn.0045df40(arg3, uVar9, arg1_00);\n                *(*0x20 + -0x140) = 0x4450e5;\n                ppuVar7 = fcn.0045dec0(arg3, uVar9, arg1_00, puVar11);\n                noname_1 = *(*0x20 + 0x20);\n                ppuVar5 = *(*0x20 + -0x70);\n            }\n            if (*(puVar12 + 0x34) == '\\0') {\n                bVar21 = false;\n            }\n            else {\n                LOCK();\n                bVar21 = *(*puVar12 + 0x178) == 0;\n                if (bVar21) {\n                    *(*puVar12 + 0x178) = 1;\n                }\n                bVar21 = !bVar21;\n            }\n        } while (bVar21);\n        if (puVar12 != NULL) {\n            *(*0x20 + -0x40) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x38) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x28) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x18) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x40) = 0x445620;\n            *(*0x20 + -0x38) = ppuVar7;\n            *(*0x20 + -0x30) = arg1_00;\n            *(*0x20 + -0x28) = arg1_00;\n            *(*0x20 + -0x20) = *(*0x20 + -0x88);\n            *(*0x20 + -0x18) = unaff_RSI;\n            *(*0x20 + -0x10) = arg1_00;\n            uVar9 = *(ppuVar7 + 1 + ppuVar17);\n            *(*0x20 + -0x140) = 0x445333;\n            fcn.00405f00(uVar9);\n            iVar8 = -1;\n            uVar9 = *(*0x20 + -0xb0);\n            uVar13 = 1;\n            goto code_r0x00444462;\n        }\n        if (*ppuVar5 != NULL) {\n            puVar12 = ppuVar5[6] * *(ppuVar5 + 3) + ppuVar5[2];\n            if (*(ppuVar7 + 1 + ppuVar17) != 0) {\n                *(*0x20 + -0x98) = puVar12;\n                *(*0x20 + -0x140) = 0x44522a;\n                fcn.00410240(puVar12);\n                puVar12 = *(*0x20 + -0x98);\n            }\n            *(*0x20 + -0x140) = 0x445246;\n            fcn.004104e0(puVar12);\n            piVar3 = *(*0x20 + -0x70);\n            iVar8 = piVar3[6] + 1;\n            piVar3[6] = iVar8;\n            if (piVar3[1] == iVar8) {\n                piVar3[6] = 0;\n            }\n            *piVar3 = *piVar3 + -1;\n            *(*0x20 + -0x140) = 0x445292;\n            fcn.00443ea0(*(*0x20 + -0xa8), iVar8, *(*0x20 + -0xa8));\n            iVar8 = -1;\n            uVar9 = *(*0x20 + -0xb0);\n            uVar13 = 1;\n            goto code_r0x00444462;\n        }\n        if (*(ppuVar5 + 0x1c) != 0) {\n            *(*0x20 + -0xa8) = ppuVar17;\n            *(*0x20 + -0x140) = 0x4451b7;\n            fcn.00443ea0(arg1_00, noname_1, arg1_00);\n            if (*(*(*0x20 + 8) + 8 + *(*0x20 + -0xa8)) != 0) {\n                *(*0x20 + -0x140) = 0x4451e5;\n                fcn.004104e0();\n            }\n            iVar8 = -1;\n            uVar9 = *(*0x20 + -0xb0);\n            uVar13 = 0;\ncode_r0x00444462:\n            if (0 < iVar8) {\n                *(*0x20 + -0x106) = uVar13;\n                *(*0x20 + -0xe0) = uVar9;\n                *(*0x20 + -0x140) = 0x444485;\n                fcn.0042b0a0(*(*0x20 + -0x100));\n                uVar9 = *(*0x20 + -0xe0);\n            }\n            return uVar9;\n        }\n    }\n    else {\n        arg4 = *(*0x20 + 0x30);\n        if (*(*0x20 + 0x30) == 0) {\n            *(*0x20 + -0x140) = 0x444452;\n            fcn.00443ea0(arg1_00, noname_1, arg1_00);\n            iVar8 = -1;\n            uVar9 = 0xffffffffffffffff;\n            uVar13 = 0;\n            goto code_r0x00444462;\n        }\n        ppuVar18 = ppuVar6;\n        if (unaff_R14[0x29] == NULL) {\n            *(*0x20 + -0x80) = unaff_R14;\n            ppuVar6 = unaff_R14 + 0x29;\n            *(*0x20 + -0x48) = ppuVar6;\n            ppuVar17 = *(*0x20 + -0x88);\n            iVar8 = 0;\n            ppuVar5 = unaff_R14;\n            arg4 = ppuVar6;\n            while (iVar8 < unaff_RSI) {\n                ppuVar18 = *(ppuVar17 + iVar8 * 2);\n                arg3 = arg1_00;\n                if (arg1_00 <= ppuVar18) goto code_r0x00444e25;\n                *(*0x20 + -0xb0) = ppuVar18;\n                *(*0x20 + -0xb8) = iVar8;\n                *(*0x20 + -0x90) = arg4;\n                *(*0x20 + -0xc0) = ppuVar18 * 0x10;\n                puVar12 = ppuVar7[ppuVar18 * 2];\n                *(*0x20 + -0x70) = puVar12;\n                *(*0x20 + -0x140) = 0x44452a;\n                ppuVar17 = fcn.00436900(ppuVar6, puVar12);\n                if (*0x801c20 == 0) {\n                    ppuVar5 = *(*0x20 + -0x80);\n                    *ppuVar17 = ppuVar5;\n                }\n                else {\n                    ppuVar5 = *(*0x20 + -0x80);\n                    *(*0x20 + -0x140) = 0x444552;\n                    ppuVar17 = fcn.0045dec0(ppuVar6, ppuVar5, arg1_00, arg4);\n                }\n                *(ppuVar17 + 0x34) = 1;\n                ppuVar7 = *(*0x20 + 8);\n                puVar12 = *(ppuVar7 + *(*0x20 + -0xc0) + 8);\n                if (*0x801c20 == 0) {\n                    ppuVar17[3] = puVar12;\n                }\n                else {\n                    *(*0x20 + -0x140) = 0x444589;\n                    ppuVar17 = fcn.0045dec0(ppuVar5, puVar12, ppuVar7, ppuVar17 + 3);\n                }\n                ppuVar17[5] = NULL;\n                if (*(*0x20 + -0x100) != 0) {\n                    ppuVar17[5] = 0xffffffffffffffff;\n                }\n                if (*0x801c20 == 0) {\n                    puVar12 = *(*0x20 + -0x70);\n                    ppuVar17[10] = puVar12;\n                    **(*0x20 + -0x90) = ppuVar17;\n                }\n                else {\n                    ppuVar17 = ppuVar17 + 10;\n                    puVar12 = *(*0x20 + -0x70);\n                    *(*0x20 + -0x140) = 0x4445e5;\n                    fcn.0045dec0(ppuVar5, puVar12, ppuVar7, ppuVar17);\n                    *(*0x20 + -0x140) = 0x4445f2;\n                    ppuVar17 = fcn.0045dda0(ppuVar5, puVar12, ppuVar7, ppuVar17);\n                }\n                noname_1 = *(*0x20 + 0x20);\n                if (*(*0x20 + -0xb0) < noname_1) {\n                    if (*0x801c20 == 0) {\n                        ppuVar17[1] = NULL;\n                    }\n                    else {\n                        *(*0x20 + -0x140) = 0x444645;\n                        ppuVar17 = fcn.0045dec0(ppuVar5, 0, ppuVar7, puVar12);\n                    }\n                    puVar11 = puVar12[10];\n                    if (puVar11 == NULL) {\n                        if (*0x801c20 == 0) {\n                            ppuVar17[2] = NULL;\n                            puVar12[9] = ppuVar17;\n                            puVar12[10] = ppuVar17;\n                        }\n                        else {\n                            uVar9 = 0;\n                            *(*0x20 + -0x140) = 0x4446d9;\n                            fcn.0045dec0(ppuVar5, 0, ppuVar7, puVar12);\n                            *(*0x20 + -0x140) = 0x4446e5;\n                            fcn.0045dda0(ppuVar5, uVar9, ppuVar7, puVar12);\n                            *(*0x20 + -0x140) = 0x4446ed;\n                            ppuVar17 = fcn.0045dda0(ppuVar5, uVar9, ppuVar7, puVar12);\n                        }\n                    }\n                    else if (*0x801c20 == 0) {\n                        ppuVar17[2] = puVar11;\n                        puVar11[1] = ppuVar17;\n                        puVar12[10] = ppuVar17;\n                    }\n                    else {\n                        ppuVar17 = ppuVar17 + 2;\n                        *(*0x20 + -0x140) = 0x444689;\n                        fcn.0045dec0(ppuVar5, puVar11, ppuVar7, ppuVar17);\n                        *(*0x20 + -0x140) = 0x444692;\n                        fcn.0045dda0(ppuVar5, puVar11, ppuVar7, ppuVar17);\n                        *(*0x20 + -0x140) = 0x44469a;\n                        ppuVar17 = fcn.0045dda0(ppuVar5, puVar11, ppuVar7, ppuVar17);\n                    }\n                }\n                else {\n                    if (*0x801c20 == 0) {\n                        ppuVar17[1] = NULL;\n                    }\n                    else {\n                        *(*0x20 + -0x140) = 0x444725;\n                        ppuVar17 = fcn.0045dec0(ppuVar5, 0, ppuVar7, puVar12);\n                    }\n                    puVar11 = puVar12[8];\n                    if (puVar11 == NULL) {\n                        if (*0x801c20 == 0) {\n                            ppuVar17[2] = NULL;\n                            puVar12[7] = ppuVar17;\n                            puVar12[8] = ppuVar17;\n                        }\n                        else {\n                            uVar9 = 0;\n                            *(*0x20 + -0x140) = 0x4447b9;\n                            fcn.0045dec0(ppuVar5, 0, ppuVar7, puVar12);\n                            *(*0x20 + -0x140) = 0x4447c5;\n                            fcn.0045dda0(ppuVar5, uVar9, ppuVar7, puVar12);\n                            *(*0x20 + -0x140) = 0x4447cd;\n                            ppuVar17 = fcn.0045dda0(ppuVar5, uVar9, ppuVar7, puVar12);\n                        }\n                    }\n                    else if (*0x801c20 == 0) {\n                        ppuVar17[2] = puVar11;\n                        puVar11[1] = ppuVar17;\n                        puVar12[8] = ppuVar17;\n                    }\n                    else {\n                        ppuVar17 = ppuVar17 + 2;\n                        *(*0x20 + -0x140) = 0x444769;\n                        fcn.0045dec0(ppuVar5, puVar11, ppuVar7, ppuVar17);\n                        *(*0x20 + -0x140) = 0x444772;\n                        fcn.0045dda0(ppuVar5, puVar11, ppuVar7, ppuVar17);\n                        *(*0x20 + -0x140) = 0x44477a;\n                        ppuVar17 = fcn.0045dda0(ppuVar5, puVar11, ppuVar7, ppuVar17);\n                    }\n                }\n                arg4 = ppuVar17 + 8;\n                unaff_RSI = *(*0x20 + -0xf8);\n                ppuVar17 = *(*0x20 + -0x88);\n                ppuVar6 = *(*0x20 + -0x48);\n                arg1_00 = *(*0x20 + -0xa8);\n                iVar8 = *(*0x20 + -0xb8) + 1;\n            }\n            *(*0x20 + -0x50) = ppuVar5 + 0x11;\n            if (*0x801c20 == 0) {\n                ppuVar5[0x11] = NULL;\n            }\n            else {\n                *(*0x20 + -0x140) = 0x44480c;\n                fcn.0045dec0(ppuVar6, 0, arg1_00, ppuVar5 + 0x11);\n            }\n            puVar1 = ppuVar5 + 0xb9;\n            uVar13 = *puVar1;\n            *puVar1 = 1;\n            *(*0x20 + -0x140) = 0x44483c;\n            fcn.004366e0(9, puVar1, uVar13);\n            iVar8 = *(*0x20 + -0x80);\n            *(iVar8 + 0xb8) = 0;\n            iVar16 = *(*0x20 + -0xa8);\n            *(*0x20 + -0x140) = 0x444873;\n            fcn.00443da0(iVar16, iVar8, iVar16);\n            iVar8 = *(*0x20 + -0x80);\n            *(iVar8 + 0x178) = 0;\n            arg3 = *(iVar8 + 0x88);\n            if (*0x801c20 == 0) {\n                *(iVar8 + 0x88) = 0;\n            }\n            else {\n                *(*0x20 + -0x140) = 0x4448b2;\n                fcn.0045df40(iVar16, iVar8, arg3);\n            }\n            ppuVar6 = *(iVar8 + 0x148);\n            for (ppuVar17 = ppuVar6; ppuVar17 != NULL; ppuVar17 = ppuVar17[8]) {\n                *(ppuVar17 + 0x34) = 0;\n                if (*0x801c20 == 0) {\n                    ppuVar17[3] = NULL;\n                    ppuVar17[10] = NULL;\n                }\n                else {\n                    *(*0x20 + -0x140) = 0x4448f5;\n                    fcn.0045dec0(iVar8, 0, arg3, ppuVar17);\n                    *(*0x20 + -0x140) = 0x444905;\n                    ppuVar6 = fcn.0045dec0(iVar8, 0, arg3, ppuVar17);\n                    iVar16 = iVar8;\n                }\n            }\n            if (*0x801c20 == 0) {\n                *(iVar8 + 0x148) = 0;\n            }\n            else {\n                *(*0x20 + -0x140) = 0x444931;\n                ppuVar6 = fcn.0045dec0(iVar16, 0, arg3, 0);\n            }\n            *(*0x20 + -0x58) = arg3;\n            noname_1 = *(*0x20 + 0x20);\n            ppuVar7 = *(*0x20 + 8);\n            arg1_00 = *(*0x20 + -0xa8);\n            unaff_RSI = *(*0x20 + -0xf8);\n            ppuVar5 = *(*0x20 + -0x88);\n            arg4 = NULL;\n            ppuVar18 = 0xffffffffffffffff;\n            cVar19 = '\\0';\n            puVar12 = 0xffffffffffffffff;\n            iVar8 = 0;\n            while (iVar8 < unaff_RSI) {\n                ppuVar17 = *(ppuVar5 + iVar8 * 2);\n                if (arg1_00 <= ppuVar17) goto code_r0x00444e1a;\n                *(*0x20 + -0xb0) = ppuVar17;\n                ppuVar5 = ppuVar7 + ppuVar17 * 2;\n                if (ppuVar6 == arg3) {\n                    if (0 < ppuVar6[5]) {\n                        puVar12 = ppuVar6[5];\n                    }\n                    cVar19 = *(ppuVar6 + 0x35);\n                    ppuVar18 = *(*0x20 + -0xb0);\n                }\n                else {\n                    puVar11 = ppuVar7[ppuVar17 * 2];\n                    ppuVar5 = arg4;\n                    if (*(*0x20 + -0xb0) < noname_1) {\n                        puVar10 = ppuVar6[2];\n                        ppuVar17 = ppuVar6 + 1;\n                        puVar14 = ppuVar6[1];\n                        if (puVar10 == NULL) {\n                            if (puVar14 == NULL) {\n                                if (puVar11[9] == ppuVar6) {\n                                    if (*0x801c20 == 0) {\n                                        *(puVar11 + 9) =\n                                             CONCAT412(in_XMM15_Dd, \n                                                       CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                    }\n                                    else {\n                                        puVar10 = puVar11 + 9;\n                                        uVar9 = 0;\n                                        *(*0x20 + -0x140) = 0x444bd2;\n                                        fcn.0045df20(puVar11, puVar10, 0, arg4);\n                                        *(*0x20 + -0x140) = 0x444bdb;\n                                        ppuVar6 = fcn.0045df20(puVar11, puVar10, uVar9, arg4);\n                                        ppuVar5 = arg4;\n                                    }\n                                }\n                            }\n                            else if (*0x801c20 == 0) {\n                                puVar14[2] = 0;\n                                puVar11[9] = puVar14;\n                                ppuVar6[1] = NULL;\n                            }\n                            else {\n                                *(*0x20 + -0x140) = 0x444b7a;\n                                fcn.0045df00(puVar11, ppuVar17, puVar14, arg4);\n                                *(*0x20 + -0x140) = 0x444b85;\n                                fcn.0045df20(puVar11, ppuVar17, puVar14, arg4);\n                                *(*0x20 + -0x140) = 0x444b8d;\n                                ppuVar6 = fcn.0045df00(puVar11, ppuVar17, puVar14, arg4);\n                                ppuVar5 = arg4;\n                            }\n                        }\n                        else if (puVar14 == NULL) {\n                            if (*0x801c20 == 0) {\n                                puVar10[1] = 0;\n                                puVar11[10] = puVar10;\n                                ppuVar6[2] = NULL;\n                            }\n                            else {\n                                puVar14 = puVar10 + 1;\n                                uVar9 = 0;\n                                *(*0x20 + -0x140) = 0x444b1a;\n                                fcn.0045df20(puVar11, puVar14, 0, arg4);\n                                *(*0x20 + -0x140) = 0x444b26;\n                                fcn.0045dea0(puVar10, puVar14, uVar9, arg4);\n                                *(*0x20 + -0x140) = 0x444b2e;\n                                ppuVar6 = fcn.0045df20(puVar10, puVar14, uVar9, arg4);\n                                ppuVar5 = arg4;\n                            }\n                        }\n                        else if (*0x801c20 == 0) {\n                            puVar10[1] = puVar14;\n                            puVar14[2] = puVar10;\n                            *(ppuVar6 + 1) =\n                                 CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                        }\n                        else {\n                            *(*0x20 + -0x140) = 0x444ab6;\n                            fcn.0045df20(puVar10 + 1, ppuVar17, puVar14, arg4);\n                            *(*0x20 + -0x140) = 0x444ac5;\n                            fcn.0045dea0(puVar10, ppuVar17, puVar14, arg4);\n                            uVar9 = 0;\n                            *(*0x20 + -0x140) = 0x444acf;\n                            fcn.0045dea0(0, ppuVar17, puVar14, arg4);\n                            *(*0x20 + -0x140) = 0x444ad7;\n                            ppuVar6 = fcn.0045dea0(uVar9, ppuVar17, puVar14, arg4);\n                            ppuVar5 = arg4;\n                        }\n                    }\n                    else {\n                        puVar10 = ppuVar6[2];\n                        ppuVar17 = ppuVar6 + 1;\n                        puVar14 = ppuVar6[1];\n                        if (puVar10 == NULL) {\n                            if (puVar14 == NULL) {\n                                if (puVar11[7] == ppuVar6) {\n                                    if (*0x801c20 == 0) {\n                                        *(puVar11 + 7) =\n                                             CONCAT412(in_XMM15_Dd, \n                                                       CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                    }\n                                    else {\n                                        puVar10 = puVar11 + 7;\n                                        uVar9 = 0;\n                                        *(*0x20 + -0x140) = 0x444d31;\n                                        fcn.0045df20(puVar11, puVar10, 0, arg4);\n                                        *(*0x20 + -0x140) = 0x444d3a;\n                                        ppuVar6 = fcn.0045df20(puVar11, puVar10, uVar9, arg4);\n                                        ppuVar5 = arg4;\n                                    }\n                                }\n                            }\n                            else if (*0x801c20 == 0) {\n                                puVar14[2] = 0;\n                                puVar11[7] = puVar14;\n                                ppuVar6[1] = NULL;\n                            }\n                            else {\n                                *(*0x20 + -0x140) = 0x444ce6;\n                                fcn.0045df00(puVar11, ppuVar17, puVar14, arg4);\n                                *(*0x20 + -0x140) = 0x444cef;\n                                fcn.0045df20(puVar11, ppuVar17, puVar14, arg4);\n                                *(*0x20 + -0x140) = 0x444cf7;\n                                ppuVar6 = fcn.0045df00(puVar11, ppuVar17, puVar14, arg4);\n                                ppuVar5 = arg4;\n                            }\n                        }\n                        else if (puVar14 == NULL) {\n                            if (*0x801c20 == 0) {\n                                puVar10[1] = 0;\n                                puVar11[8] = puVar10;\n                                ppuVar6[2] = NULL;\n                            }\n                            else {\n                                puVar14 = puVar10 + 1;\n                                uVar9 = 0;\n                                *(*0x20 + -0x140) = 0x444c8a;\n                                fcn.0045df20(puVar11, puVar14, 0, arg4);\n                                *(*0x20 + -0x140) = 0x444c96;\n                                fcn.0045dea0(puVar10, puVar14, uVar9, arg4);\n                                *(*0x20 + -0x140) = 0x444c9e;\n                                ppuVar6 = fcn.0045df20(puVar10, puVar14, uVar9, arg4);\n                                ppuVar5 = arg4;\n                            }\n                        }\n                        else if (*0x801c20 == 0) {\n                            puVar10[1] = puVar14;\n                            puVar14[2] = puVar10;\n                            *(ppuVar6 + 1) =\n                                 CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                        }\n                        else {\n                            *(*0x20 + -0x140) = 0x444c29;\n                            fcn.0045df20(puVar10 + 1, ppuVar17, puVar14, arg4);\n                            *(*0x20 + -0x140) = 0x444c35;\n                            fcn.0045dea0(puVar10, ppuVar17, puVar14, arg4);\n                            uVar9 = 0;\n                            *(*0x20 + -0x140) = 0x444c3f;\n                            fcn.0045dea0(0, ppuVar17, puVar14, arg4);\n                            *(*0x20 + -0x140) = 0x444c47;\n                            ppuVar6 = fcn.0045dea0(uVar9, ppuVar17, puVar14, arg4);\n                            ppuVar5 = arg4;\n                        }\n                    }\n                    arg3 = *(*0x20 + -0x58);\n                }\n                *(*0x20 + -0xb0) = iVar8;\n                *(*0x20 + -0x105) = cVar19;\n                *(*0x20 + -0xe0) = ppuVar18;\n                *(*0x20 + -0x78) = ppuVar5;\n                *(*0x20 + -0xd8) = puVar12;\n                puVar12 = ppuVar6[8];\n                *(*0x20 + -0xa0) = puVar12;\n                if (*0x801c20 == 0) {\n                    ppuVar6[8] = NULL;\n                }\n                else {\n                    *(*0x20 + -0x140) = 0x444d9f;\n                    fcn.0045dec0(ppuVar5, 0, arg3, puVar12);\n                }\n                *(*0x20 + -0x140) = 0x44497e;\n                fcn.00436c00();\n                arg1_00 = *(*0x20 + -0xa8);\n                unaff_RSI = *(*0x20 + -0xf8);\n                ppuVar5 = *(*0x20 + -0x88);\n                ppuVar18 = *(*0x20 + -0xe0);\n                arg4 = *(*0x20 + -0x78);\n                ppuVar6 = *(*0x20 + -0xa0);\n                noname_1 = *(*0x20 + 0x20);\n                arg3 = *(*0x20 + -0x58);\n                ppuVar7 = *(*0x20 + 8);\n                cVar19 = *(*0x20 + -0x105);\n                puVar12 = *(*0x20 + -0xd8);\n                iVar8 = *(*0x20 + -0xb0) + 1;\n            }\n            if (arg4 != NULL) {\n                *(*0x20 + -200) = ppuVar18;\n                *(*0x20 + -0xd0) = puVar12;\n                if (ppuVar18 < noname_1) {\n                    if (cVar19 == '\\0') goto code_r0x00444de8;\n                    cVar19 = '\\0';\n                }\n                *(*0x20 + -0x106) = cVar19;\n                *(*0x20 + -0x140) = 0x444dd4;\n                fcn.00443ea0(arg1_00, noname_1, arg1_00);\n                iVar8 = *(*0x20 + -0xd0);\n                uVar9 = *(*0x20 + -200);\n                uVar13 = *(*0x20 + -0x106);\n                goto code_r0x00444462;\n            }\ncode_r0x00444e09:\n            *(*0x20 + -0x140) = 0x444e1a;\n            fcn.00433c80();\ncode_r0x00444e1a:\n            *(*0x20 + -0x140) = 0x444e25;\n            fcn.0045e240(arg1_00);\n            ppuVar17 = ppuVar7;\ncode_r0x00444e25:\n            *(*0x20 + -0x140) = 0x444e30;\n            arg1_00 = arg3;\n            fcn.0045e240(arg3);\n        }\n        ppuVar7 = 0x11;\n        *(*0x20 + -0x140) = 0x444e45;\n        fcn.00433c80();\ncode_r0x00444e48:\n        do {\n            puVar12 = ppuVar5[7];\n            if (puVar12 == NULL) {\n                puVar12 = NULL;\n                break;\n            }\n            puVar11 = puVar12[1];\n            if (puVar11 == NULL) {\n                if (*0x801c20 == 0) {\n                    *(ppuVar5 + 7) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                }\n                else {\n                    uVar9 = 0;\n                    *(*0x20 + -0x140) = 0x444ee7;\n                    fcn.0045dec0(arg3, 0, arg1_00, arg4);\n                    *(*0x20 + -0x140) = 0x444ef0;\n                    ppuVar7 = fcn.0045dec0(arg3, uVar9, arg1_00, arg4);\n                }\n            }\n            else if (*0x801c20 == 0) {\n                puVar11[2] = 0;\n                ppuVar5[7] = puVar11;\n                puVar12[1] = 0;\n            }\n            else {\n                uVar9 = 0;\n                *(*0x20 + -0x140) = 0x444e96;\n                fcn.0045dec0(arg3, 0, arg1_00, arg4);\n                *(*0x20 + -0x140) = 0x444ea5;\n                fcn.0045df40(arg3, uVar9, arg1_00);\n                *(*0x20 + -0x140) = 0x444eaf;\n                ppuVar7 = fcn.0045dec0(arg3, uVar9, arg1_00, puVar11);\n                noname_1 = *(*0x20 + 0x20);\n                ppuVar5 = *(*0x20 + -0x70);\n            }\n            if (*(puVar12 + 0x34) == '\\0') {\n                bVar21 = false;\n            }\n            else {\n                LOCK();\n                bVar21 = *(*puVar12 + 0x178) == 0;\n                if (bVar21) {\n                    *(*puVar12 + 0x178) = 1;\n                }\n                bVar21 = !bVar21;\n            }\n        } while (bVar21);\n        if (puVar12 != NULL) {\n            *(*0x20 + -0x40) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x38) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x28) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x18) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x40) = 0x4455c0;\n            *(*0x20 + -0x38) = ppuVar7;\n            *(*0x20 + -0x30) = arg1_00;\n            *(*0x20 + -0x28) = arg1_00;\n            *(*0x20 + -0x20) = *(*0x20 + -0x88);\n            *(*0x20 + -0x18) = unaff_RSI;\n            *(*0x20 + -0x10) = arg1_00;\n            uVar9 = *(ppuVar7 + 1 + ppuVar17);\n            *(*0x20 + -0x140) = 0x445047;\n            fcn.00405100(uVar9, *(*0x20 + -0x88), arg1_00);\n            iVar8 = -1;\n            uVar9 = *(*0x20 + -0xb0);\n            uVar13 = 0;\n            goto code_r0x00444462;\n        }\n        if (*ppuVar5 <= ppuVar5[1] && ppuVar5[1] != *ppuVar5) {\n            uVar9 = *(ppuVar7 + 1 + ppuVar17);\n            *(*0x20 + -0x140) = 0x444f5d;\n            fcn.00410240(uVar9);\n            piVar3 = *(*0x20 + -0x70);\n            iVar8 = piVar3[5];\n            piVar3[5] = iVar8 + 1;\n            if (piVar3[1] == iVar8 + 1) {\n                piVar3[5] = 0;\n            }\n            *piVar3 = *piVar3 + 1;\n            *(*0x20 + -0x140) = 0x444fa9;\n            fcn.00443ea0(*(*0x20 + -0xa8), piVar3, *(*0x20 + -0xa8));\n            iVar8 = -1;\n            uVar9 = *(*0x20 + -0xb0);\n            uVar13 = 0;\n            goto code_r0x00444462;\n        }\n    }\n    unaff_R15 = 0x1;\n    arg3 = arg3 + 1;\n    unaff_RBX = ppuVar7;\n    ppuVar6 = ppuVar18;\n    goto code_r0x00444380;\ncode_r0x00445442:\n    *(*0x20 + -0x140) = 0x44544d;\n    fcn.0045e240(ppuVar6);\ncode_r0x0044544d:\n    arg1_00 = ppuVar6;\n    *(*0x20 + -0x140) = 0x445458;\n    ppuVar6 = arg1_00;\n    fcn.0045e240(arg1_00);\ncode_r0x00445458:\n    *(*0x20 + -0x140) = 0x445465;\n    fcn.0045e240(arg1_00);\ncode_r0x00445465:\n    arg1_00 = ppuVar6;\n    *(*0x20 + -0x140) = 0x445470;\n    ppuVar6 = arg1_00;\n    fcn.0045e240(arg1_00);\ncode_r0x00445470:\n    *(*0x20 + -0x140) = 0x445478;\n    fcn.0045e240(arg1_00);\ncode_r0x00445478:\n    arg1_00 = ppuVar6;\n    *(*0x20 + -0x140) = 0x445485;\n    ppuVar6 = arg1_00;\n    fcn.0045e240(arg1_00);\ncode_r0x00445485:\n    *(*0x20 + -0x140) = 0x44548d;\n    fcn.0045e240(arg1_00);\n    ppuVar17 = ppuVar18;\ncode_r0x0044548d:\n    arg1_00 = ppuVar6;\n    *(*0x20 + -0x140) = 0x445498;\n    ppuVar6 = arg1_00;\n    fcn.0045e240(arg1_00);\ncode_r0x00445498:\n    *(*0x20 + -0x140) = 0x4454a5;\n    in_RAX = fcn.0045e240(arg1_00);\n    while( true ) {\n        uVar2 = *(*0x20 + -0x102);\n        *(arg4 + ppuVar17 * 2) = uVar2;\n        uVar20 = *(*0x20 + -0x60);\n        arg2 = *(*0x20 + -0xb0);\n        ppuVar17 = unaff_R15;\n        unaff_R15 = uVar2;\ncode_r0x004454c6:\n        if (ppuVar17 < 1) goto code_r0x004442b3;\n        unaff_R15 = ppuVar17 + (-1 - (ppuVar17 + -1 >> 0x3f)) >> 1;\n        if (ppuVar6 <= unaff_R15) goto code_r0x0044552d;\n        uVar2 = *(arg4 + unaff_R15 * 2);\n        if (arg1_00 <= uVar2) goto code_r0x00445526;\n        *(*0x20 + -0x102) = uVar2;\n        if (uVar20 <= *(in_RAX + uVar2 * 0x10)) break;\n        if (ppuVar6 <= ppuVar17) goto code_r0x0044551b;\n    }\n    arg2 = *(*0x20 + -0xb0);\ncode_r0x004442b3:\n    if (ppuVar6 <= ppuVar17) {\n        *(*0x20 + -0x140) = 0x44551b;\n        fcn.0045e240(ppuVar6);\ncode_r0x0044551b:\n        arg1_00 = ppuVar6;\n        *(*0x20 + -0x140) = 0x445526;\n        ppuVar6 = arg1_00;\n        fcn.0045e240(arg1_00);\ncode_r0x00445526:\n        *(*0x20 + -0x140) = 0x44552d;\n        fcn.0045e240(arg1_00);\ncode_r0x0044552d:\n        arg1_00 = ppuVar6;\n        *(*0x20 + -0x140) = 0x445538;\n        ppuVar6 = arg1_00;\n        fcn.0045e240(arg1_00);\n        goto code_r0x00445538;\n    }\n    *(arg4 + ppuVar17 * 2) = *(unaff_RBX + unaff_R13 * 2);\n    ppuVar17 = unaff_R13 + 1;\n    ppuVar5 = arg4;\n    goto code_r0x00444280;\n}\n",
        "token_count": 13278
    },
    "00445680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00445680(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong in_RDX;\n    int64_t unaff_R14;\n    ulong uStack32;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (*(in_RAX + 0x28) != 0) {\n        fcn.0045dc20(arg1, in_RDX);\n        *(in_RAX + 0x28) = uStack32;\n    }\n    fcn.00436820();\n    return;\n}\n",
        "token_count": 153
    },
    "00445720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00445720(ulong arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint32_t *in_RAX;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uchar unaff_BL;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    bool bVar11;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(*(unaff_R14 + 0x30) + 0x90) == unaff_R14) break;\n            unaff_BL = 0x1d;\n            *(*0x20 + -0x68) = 0x445a1b;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar10 + 8) = in_RAX;\n        puVar10[0x10] = unaff_BL;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + -8) = 0x445a34;\n        fcn.0045bb60();\n        in_RAX = *(puVar10 + 8);\n        unaff_BL = puVar10[0x10];\n        arg1 = *(puVar10 + 0x18);\n        unaff_RDI = *(puVar10 + 0x20);\n        *0x20 = puVar10;\n    } while( true );\n    while( true ) {\n        uVar4 = *in_RAX;\n        if (uVar4 == 0) break;\n        LOCK();\n        if (uVar4 == *in_RAX) {\n            *in_RAX = uVar4 - 1;\n            return uVar4;\n        }\n    }\n    *(*0x20 + 0x18) = arg1;\n    *(*0x20 + 0x20) = unaff_RDI;\n    *(*0x20 + -0x3d) = unaff_BL;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + -0x68) = 0x445792;\n    iVar5 = fcn.00436900(arg1, uVar4);\n    *(*0x20 + -0x18) = iVar5;\n    uVar6 = *(*0x20 + 8);\n    *(iVar5 + 0x20) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n    *(iVar5 + 0x30) = 0;\n    uVar6 = uVar6 >> 3;\n    uVar8 = SUB168(ZEXT816(0x5197f7d73404147) * ZEXT816(uVar6) >> 0x40, 0);\n    uVar8 = (uVar8 + uVar6 >> 1 | CARRY8(uVar8, uVar6) << 0x3f) >> 7;\n    iVar7 = uVar6 + uVar8 * -0xfb;\n    *(*0x20 + -0x28) = iVar7;\n    uVar4 = *(*0x20 + 0x18);\n    if (((*(*0x20 + 0x18) & 1) == 0) || (*0x801a60 == 0)) {\n        iVar9 = 0;\n    }\n    else {\n        *(*0x20 + -0x68) = 0x4457f6;\n        fcn.0045dc20(iVar7, uVar8);\n        iVar9 = *(*0x20 + -0x60);\n        *(*(*0x20 + -0x18) + 0x28) = 0xffffffffffffffff;\n        iVar7 = *(*0x20 + -0x28);\n        iVar5 = *(*0x20 + -0x18);\n        uVar4 = *(*0x20 + 0x18);\n    }\n    if (((uVar4 >> 1 & 1) != 0) && (*0x801ae0 != 0)) {\n        if (iVar9 == 0) {\n            *(*0x20 + -0x68) = 0x445850;\n            fcn.0045dc20(iVar7, 0);\n            iVar9 = *(*0x20 + -0x60);\n            iVar7 = *(*0x20 + -0x28);\n            iVar5 = *(*0x20 + -0x18);\n        }\n        *(iVar5 + 0x20) = iVar9;\n    }\n    *(*0x20 + -0x38) = iVar9;\n    iVar7 = iVar7 * 0x40;\n    *(*0x20 + -0x30) = iVar7;\n    *(*0x20 + -0x20) = iVar7 + 0x7afcc0;\n    do {\n        *(*0x20 + -0x10) = iVar7 + 0x7afcc0;\n        *(*0x20 + -0x68) = 0x4458b5;\n        fcn.0040a460();\n        piVar1 = *(*0x20 + -0x30) + 0x7afcd0;\n        LOCK();\n        *piVar1 = *piVar1 + 1;\n        piVar3 = *(*0x20 + 8);\n        do {\n            iVar2 = *piVar3;\n            bVar11 = iVar2 == 0;\n            if (bVar11) goto code_r0x004458e4;\n            *(*0x20 + -0x3c) = iVar2;\n            LOCK();\n        } while (iVar2 != *piVar3);\n        *piVar3 = iVar2 + -1;\n        bVar11 = *(*0x20 + -0x3c) == 0;\ncode_r0x004458e4:\n        if (!bVar11) {\n            LOCK();\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            *(*0x20 + -0x68) = 0x4459a5;\n            fcn.0040a680(iVar2);\ncode_r0x004459a5:\n            iVar5 = *(*(*0x20 + -0x18) + 0x28);\n            if (0 < iVar5) {\n                *(*0x20 + -0x68) = 0x4459cf;\n                fcn.0042b0a0(iVar5 - *(*0x20 + -0x38));\n            }\n            *(*0x20 + -0x68) = 0x4459d9;\n            uVar6 = fcn.00436c00();\n            return uVar6;\n        }\n        *(*0x20 + -0x68) = 0x445905;\n        fcn.00445c80(*(*0x20 + -0x18));\n        *(*0x20 + -0x68) = 0x44592f;\n        fcn.004366e0(0x12);\n        if (*(*(*0x20 + -0x18) + 0x30) == 0) {\n            piVar1 = *(*0x20 + 8);\n            do {\n                iVar2 = *piVar1;\n                if (iVar2 == 0) goto code_r0x0044595a;\n                LOCK();\n            } while (iVar2 != *piVar1);\n            *piVar1 = iVar2 + -1;\ncode_r0x0044595a:\n            bVar11 = iVar2 != 0;\n        }\n        else {\n            bVar11 = true;\n        }\n        if (bVar11) goto code_r0x004459a5;\n        iVar7 = *(*0x20 + -0x30);\n    } while( true );\n}\n",
        "token_count": 1897
    },
    "00445a60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00445a60(int64_t arg1)\n\n{\n    int32_t iVar1;\n    int32_t *in_RAX;\n    uint64_t uVar2;\n    ulong uVar3;\n    int32_t *arg1_00;\n    uint64_t uVar4;\n    uchar unaff_BL;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            *in_RAX = *in_RAX + 1;\n            uVar2 = in_RAX >> 3;\n            uVar4 = SUB168(ZEXT816(0x5197f7d73404147) * ZEXT816(uVar2) >> 0x40, 0);\n            iVar6 = (uVar2 + ((uVar4 + uVar2 >> 1 | CARRY8(uVar4, uVar2) << 0x3f) >> 7) * -0xfb) * 0x40;\n            if (*(iVar6 + 0x7afcd0) == 0) {\n                return SUB168(ZEXT816(0x5197f7d73404147) * ZEXT816(uVar2), 0);\n            }\n            *(*0x20 + 0x10) = unaff_BL;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x10) = iVar6 + 0x7afcd0;\n            *(*0x20 + -0x30) = iVar6;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x20) = iVar6 + 0x7afcc0;\n            *(*0x20 + -0x50) = 0x445af4;\n            fcn.0040a460();\n            if (**(*0x20 + -0x10) == 0) {\n                *(*0x20 + -0x50) = 0x445ba9;\n                uVar3 = fcn.0040a680();\n                return uVar3;\n            }\n            uVar3 = *(*0x20 + -0x18);\n            *(*0x20 + -0x50) = 0x445b25;\n            iVar6 = fcn.00446020(*(*0x20 + -0x30));\n            *(*0x20 + -0x28) = iVar6;\n            *(*0x20 + -0x38) = uVar3;\n            if (iVar6 != 0) {\n                LOCK();\n                **(*0x20 + -0x10) = **(*0x20 + -0x10) + -1;\n            }\n            *(*0x20 + -0x50) = 0x445b4e;\n            fcn.0040a680();\n            iVar6 = *(*0x20 + -0x28);\n            if (iVar6 == 0) {\n                return 0;\n            }\n            arg1 = *(iVar6 + 0x20);\n            if (arg1 != 0) {\n                arg1 = *(*0x20 + 0x18) + 3;\n                *(*0x20 + -0x50) = 0x445b7e;\n                fcn.00458e60();\n                iVar6 = *(*0x20 + -0x28);\n            }\n            if (*(iVar6 + 0x30) == 0) break;\n            unaff_BL = 0x1a;\n            *(*0x20 + -0x50) = 0x445c49;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar5 + 8) = in_RAX;\n        puVar5[0x10] = unaff_BL;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x445c5d;\n        fcn.0045bb60();\n        in_RAX = *(puVar5 + 8);\n        unaff_BL = puVar5[0x10];\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n    arg1_00 = *(*0x20 + 0x10);\n    if (*(*0x20 + 0x10) != 0) {\n        arg1_00 = *(*0x20 + -0x18);\n        do {\n            iVar1 = *arg1_00;\n            if (iVar1 == 0) goto code_r0x00445c25;\n            LOCK();\n        } while (iVar1 != *arg1_00);\n        *arg1_00 = iVar1 + -1;\ncode_r0x00445c25:\n        if (iVar1 != 0) {\n            *(iVar6 + 0x30) = 1;\n        }\n    }\n    *(*0x20 + -0x50) = 0x445bd5;\n    uVar3 = fcn.00445680(arg1_00);\n    if ((*(*(*0x20 + -0x28) + 0x30) == 1) && (*(*(unaff_R14 + 0x30) + 0xd8) == 0)) {\n        *(*0x20 + -0x50) = 0x445bfc;\n        uVar3 = fcn.0045b9a0();\n    }\n    return uVar3;\n}\n",
        "token_count": 1299
    },
    "00445c80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00445c80(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t *noname_1;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t *piVar4;\n    int64_t **unaff_RDI;\n    int64_t **arg3;\n    int64_t *arg4;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x00445c80:\n    puVar3 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar3 = *0x20 + -0x20;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        piVar4 = arg1 + 1;\n        if (*0x801c20 == 0) {\n            *arg1 = unaff_R14;\n            arg1[3] = unaff_RBX;\n            *(arg1 + 1) = in_XMM15;\n        }\n        else {\n            uVar5 = unaff_RDI & 0xffffffff;\n            *(*0x20 + -0x28) = 0x445cca;\n            fcn.0045df40(arg1, piVar4, uVar5);\n            *(*0x20 + -0x28) = 0x445cd6;\n            fcn.0045dee0(arg1, piVar4, uVar5, arg1 + 3);\n            *(*0x20 + -0x28) = 0x445ce5;\n            fcn.0045df40(arg1, piVar4, uVar5);\n            *(*0x20 + -0x28) = 0x445ced;\n            in_RAX = fcn.0045df40(arg1, piVar4, uVar5);\n            unaff_RDI = uVar5 & 0xffffffff;\n        }\n        arg3 = in_RAX + 8;\n        piVar1 = *(in_RAX + 8);\n        noname_1 = NULL;\n        while (arg4 = piVar1,  arg4 != NULL) {\n            if (unaff_RBX == arg4[3]) {\n                if (unaff_RDI == '\\0') {\n                    if (arg4[9] == 0) {\n                        if (*0x801c20 == 0) {\n                            arg4[8] = arg1;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x445ed7;\n                            fcn.0045dea0(arg1, piVar4, arg3, arg4);\n                        }\n                    }\n                    else if (*0x801c20 == 0) {\n                        *(arg4[9] + 0x40) = arg1;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x445ebd;\n                        fcn.0045dea0(arg1, piVar4, arg3, arg4);\n                    }\n                    if (*0x801c20 == 0) {\n                        arg4[9] = arg1;\n                        arg1[8] = 0;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x445ef9;\n                        fcn.0045dea0(arg1, piVar4, arg3, arg4);\n                        *(*0x20 + -0x28) = 0x445f05;\n                        fcn.0045dda0(arg1, piVar4, arg3, arg4);\n                    }\n                }\n                else {\n                    if (*0x801c20 == 0) {\n                        *arg3 = arg1;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x445d51;\n                        fcn.0045dea0(arg1, piVar4, arg3, arg4);\n                    }\n                    *(arg1 + 6) = *(arg4 + 6);\n                    arg1[4] = arg4[4];\n                    if (*0x801c20 == 0) {\n                        arg1[7] = arg4[7];\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x445d7c;\n                        fcn.0045dda0(arg1, piVar4, arg3, arg4);\n                    }\n                    iVar2 = arg4[2];\n                    if (*0x801c20 == 0) {\n                        arg1[2] = iVar2;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x445d9a;\n                        iVar2 = fcn.0045dda0(arg1, piVar4, arg3, arg4);\n                    }\n                    if (*0x801c20 == 0) {\n                        arg1[1] = arg4[1];\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x445dbb;\n                        fcn.0045dda0(arg1, piVar4, arg3, arg4);\n                    }\n                    if (iVar2 != 0) {\n                        if (*0x801c20 == 0) {\n                            *(iVar2 + 0x38) = arg1;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x445ddd;\n                            fcn.0045dea0(arg1, piVar4, arg3, arg4);\n                        }\n                    }\n                    if (arg1[1] != 0) {\n                        if (*0x801c20 == 0) {\n                            *(arg1[1] + 0x38) = arg1;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x445dfe;\n                            fcn.0045dea0(arg1, piVar4, arg3, arg4);\n                        }\n                    }\n                    if (*0x801c20 == 0) {\n                        arg1[8] = arg4;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x445e16;\n                        fcn.0045df40(arg1, piVar4, arg3);\n                    }\n                    iVar2 = arg4[9];\n                    if (*0x801c20 == 0) {\n                        arg1[9] = iVar2;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x445e32;\n                        iVar2 = fcn.0045dda0(arg1, piVar4, arg3, arg4);\n                    }\n                    if (iVar2 == 0) {\n                        if (*0x801c20 == 0) {\n                            arg1[9] = arg4;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x445e4d;\n                            fcn.0045df40(arg1, piVar4, arg3);\n                        }\n                    }\n                    if (*0x801c20 == 0) {\n                        arg4[7] = 0;\n                        *(arg4 + 1) = in_XMM15;\n                        arg4[9] = 0;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x445e7b;\n                        fcn.0045dda0(arg1, piVar4, arg3, arg4);\n                        *(*0x20 + -0x28) = 0x445e85;\n                        fcn.0045dda0(arg1, piVar4, arg3, arg4);\n                        *(*0x20 + -0x28) = 0x445e8e;\n                        fcn.0045dda0(arg1, piVar4, arg3, arg4);\n                        *(*0x20 + -0x28) = 0x445e97;\n                        fcn.0045dda0(arg1, piVar4, arg3, arg4);\n                    }\n                }\n                return;\n            }\n            if (unaff_RBX < arg4[3]) {\n                arg3 = arg4 + 2;\n            }\n            else {\n                arg3 = arg4 + 1;\n            }\n            noname_1 = arg4;\n            piVar1 = *arg3;\n        }\n        unaff_RDI = *(unaff_R14 + 0x30);\n        piVar4 = unaff_RDI[0x1e] + 0xa0761d6478bd642f;\n        uVar5 = piVar4 ^ 0xe7037ed1a0b428db;\n        unaff_RDI[0x1e] = piVar4;\n        *(arg1 + 6) = SUB164(ZEXT816(piVar4) * ZEXT816(uVar5), 0) ^ SUB164(ZEXT816(piVar4) * ZEXT816(uVar5) >> 0x40, 0)\n                      | 1;\n        if (*0x801c20 == 0) {\n            arg1[7] = noname_1;\n            *arg3 = arg1;\n        }\n        else {\n            *(*0x20 + -0x28) = 0x445f6b;\n            unaff_RDI = arg3;\n            fcn.0045dec0(arg1, noname_1, arg3, uVar5);\n            *(*0x20 + -0x28) = 0x445f73;\n            arg3 = unaff_RDI;\n            fcn.0045dea0(arg1, noname_1, unaff_RDI, uVar5);\n        }\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + -0x10) = in_RAX;\n        do {\n            iVar2 = arg1[7];\n            if ((iVar2 == 0) || (*(iVar2 + 0x30) <= *(arg1 + 6))) {\n                return;\n            }\n            if (*(iVar2 + 0x10) == arg1) {\n                *(*0x20 + -0x28) = 0x445fc5;\n                fcn.004464e0(arg1, iVar2, arg3, uVar5);\n            }\n            else {\n                if (*(iVar2 + 8) != arg1) goto code_r0x00445fd1;\n                *(*0x20 + -0x28) = 0x445fb7;\n                fcn.00446380(arg1, iVar2, arg3, uVar5);\n            }\n            arg1 = *(*0x20 + 0x18);\n        } while( true );\n    }\n    goto code_r0x00445fe6;\ncode_r0x00445fd1:\n    unaff_RBX = 0x732948;\n    *(*0x20 + -0x28) = 0x445fe5;\n    in_RAX = fcn.004334e0();\ncode_r0x00445fe6:\n    *(puVar3 + 8) = in_RAX;\n    *(puVar3 + 0x10) = unaff_RBX;\n    *(puVar3 + 0x18) = arg1;\n    puVar3[0x20] = unaff_RDI;\n    *(puVar3 + -8) = 0x445fff;\n    fcn.0045bb60();\n    in_RAX = *(puVar3 + 8);\n    unaff_RBX = *(puVar3 + 0x10);\n    arg1 = *(puVar3 + 0x18);\n    unaff_RDI = puVar3[0x20];\n    *0x20 = puVar3;\n    goto code_r0x00445c80;\n}\n",
        "token_count": 2618
    },
    "00446020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00446020(ulong param_1, ulong param_2, uint64_t param_3, ulong param_4)\n\n{\n    int64_t *arg2;\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    int64_t *piVar5;\n    int64_t noname_0;\n    int64_t noname_1;\n    ulong uVar6;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    ulong uStack56;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    arg2 = in_RAX + 8;\n    noname_0 = *(in_RAX + 8);\n    piVar5 = arg2;\n    while( true ) {\n        if (noname_0 == 0) {\n            return 0;\n        }\n        if (unaff_RBX == *(noname_0 + 0x18)) break;\n        if (unaff_RBX < *(noname_0 + 0x18)) {\n            piVar5 = noname_0 + 0x10;\n        }\n        else {\n            piVar5 = noname_0 + 8;\n        }\n        noname_0 = *piVar5;\n        param_3 = unaff_RBX;\n    }\n    if (*(noname_0 + 0x20) == 0) {\n        uStack56 = 0;\n    }\n    else {\n        fcn.0045dc20(noname_0, arg2);\n        in_XMM15_Da = 0;\n        in_XMM15_Db = 0;\n        in_XMM15_Dc = 0;\n        in_XMM15_Dd = 0;\n    }\n    iVar3 = *(noname_0 + 0x40);\n    if (iVar3 == 0) {\n        while( true ) {\n            while (*(noname_0 + 8) != 0) {\n                if ((*(noname_0 + 0x10) != 0) &&\n                   (uVar2 = *(*(noname_0 + 0x10) + 0x30),  puVar1 = *(noname_0 + 8) + 0x30, \n                   uVar2 <= *puVar1 && *puVar1 != uVar2)) goto code_r0x004462c2;\n                fcn.00446380(noname_0, arg2, param_3, param_4);\n            }\n            if (*(noname_0 + 0x10) == 0) break;\ncode_r0x004462c2:\n            fcn.004464e0(noname_0, arg2, param_3, param_4);\n        }\n        iVar3 = *(noname_0 + 0x38);\n        if (iVar3 == 0) {\n            if (*0x801c20 == 0) {\n                *(in_RAX + 8) = 0;\n            }\n            else {\n                fcn.0045dec0(noname_0, 0, param_3, param_4);\n            }\n        }\n        else if (*(iVar3 + 0x10) == noname_0) {\n            if (*0x801c20 == 0) {\n                *(iVar3 + 0x10) = 0;\n            }\n            else {\n                fcn.0045dec0(noname_0, 0, param_3, param_4);\n            }\n        }\n        else if (*0x801c20 == 0) {\n            *(iVar3 + 8) = 0;\n        }\n        else {\n            fcn.0045dec0(noname_0, 0, param_3, param_4);\n        }\n    }\n    else {\n        if (*0x801c20 == 0) {\n            *piVar5 = iVar3;\n        }\n        else {\n            fcn.0045df00(noname_0, arg2, param_3, param_4);\n        }\n        *(iVar3 + 0x30) = *(noname_0 + 0x30);\n        noname_1 = *(noname_0 + 0x38);\n        if (*0x801c20 == 0) {\n            *(iVar3 + 0x38) = noname_1;\n        }\n        else {\n            fcn.0045dec0(noname_0, noname_1, param_3, param_4);\n        }\n        iVar4 = *(noname_0 + 0x10);\n        if (*0x801c20 == 0) {\n            *(iVar3 + 0x10) = iVar4;\n        }\n        else {\n            noname_1 = iVar3 + 0x10;\n            iVar4 = fcn.0045dda0(noname_0, noname_1, param_3, param_4);\n        }\n        if (iVar4 != 0) {\n            if (*0x801c20 == 0) {\n                *(iVar4 + 0x38) = iVar3;\n            }\n            else {\n                fcn.0045df00(noname_0, noname_1, param_3, param_4);\n            }\n        }\n        iVar4 = *(noname_0 + 8);\n        if (*0x801c20 == 0) {\n            *(iVar3 + 8) = iVar4;\n        }\n        else {\n            noname_1 = iVar3 + 8;\n            iVar4 = fcn.0045dda0(noname_0, noname_1, param_3, param_4);\n        }\n        if (iVar4 != 0) {\n            if (*0x801c20 == 0) {\n                *(iVar4 + 0x38) = iVar3;\n            }\n            else {\n                fcn.0045df00(noname_0, noname_1, param_3, param_4);\n            }\n        }\n        if (*(iVar3 + 0x40) == 0) {\n            if (*0x801c20 == 0) {\n                *(iVar3 + 0x48) = 0;\n            }\n            else {\n                fcn.0045dec0(noname_0, 0, param_3, param_4);\n            }\n        }\n        else if (*0x801c20 == 0) {\n            *(iVar3 + 0x48) = *(noname_0 + 0x48);\n        }\n        else {\n            fcn.0045dec0(noname_0, *(noname_0 + 0x48), param_3, param_4);\n        }\n        *(iVar3 + 0x20) = uStack56;\n        if (*0x801c20 == 0) {\n            *(noname_0 + 0x40) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        }\n        else {\n            uVar6 = 0;\n            fcn.0045dec0(noname_0, 0, param_3, param_4);\n            fcn.0045dec0(noname_0, uVar6, param_3, param_4);\n        }\n    }\n    if (*0x801c20 == 0) {\n        *(noname_0 + 0x38) = 0;\n        *(noname_0 + 0x18) = 0;\n        *(noname_0 + 8) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n    }\n    else {\n        uVar6 = 0;\n        fcn.0045dec0(noname_0, 0, param_3, param_4);\n        fcn.0045df00(noname_0, uVar6, param_3, param_4);\n        fcn.0045dec0(noname_0, uVar6, param_3, param_4);\n        fcn.0045dec0(noname_0, uVar6, param_3, param_4);\n    }\n    *(noname_0 + 0x30) = 0;\n    return noname_0;\n}\n",
        "token_count": 1908
    },
    "00446380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00446380(ulong noname_0, ulong noname_1, int64_t noname_2, ulong arg4)\n\n{\n    int64_t in_RAX;\n    int64_t arg1;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t arg3;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            arg3 = *(unaff_RBX + 8);\n            arg1 = *(unaff_RBX + 0x38);\n            arg2 = *(arg3 + 0x10);\n            if (*0x801c20 == 0) {\n                *(arg3 + 0x10) = unaff_RBX;\n                *(unaff_RBX + 0x38) = arg3;\n                *(unaff_RBX + 8) = arg2;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x4463ca;\n                fcn.0045dee0(arg1, arg2, arg3, arg4);\n                *(*0x20 + -0x20) = 0x4463d3;\n                fcn.0045df20(arg1, arg2, arg3, arg4);\n                *(*0x20 + -0x20) = 0x4463dc;\n                in_RAX = fcn.0045dec0(arg1, arg2, arg3, arg4);\n                noname_2 = arg3;\n            }\n            if (arg2 != 0) {\n                if (*0x801c20 == 0) {\n                    *(arg2 + 0x38) = unaff_RBX;\n                }\n                else {\n                    arg2 = arg2 + 0x38;\n                    *(*0x20 + -0x20) = 0x446405;\n                    in_RAX = fcn.0045dee0(arg1, arg2, noname_2, arg4);\n                }\n            }\n            if (*0x801c20 == 0) {\n                *(arg3 + 0x38) = arg1;\n            }\n            else {\n                arg2 = arg3 + 0x38;\n                *(*0x20 + -0x20) = 0x446426;\n                in_RAX = fcn.0045dea0(arg1, arg2, noname_2, arg4);\n            }\n            if (arg1 == 0) {\n                if (*0x801c20 == 0) {\n                    *(in_RAX + 8) = arg3;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x44649a;\n                fcn.0045dea0(arg3, arg2, noname_2, arg4);\n                return;\n            }\n            if (*(arg1 + 0x10) == unaff_RBX) {\n                if (*0x801c20 == 0) {\n                    *(arg1 + 0x10) = arg3;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x446452;\n                fcn.0045dea0(arg3, arg2, noname_2, arg4);\n                return;\n            }\n            if (*(arg1 + 8) == unaff_RBX) {\n                if (*0x801c20 == 0) {\n                    *(arg1 + 8) = arg3;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x446478;\n                    fcn.0045dea0(arg3, arg2, noname_2, arg4);\n                }\n                return;\n            }\n            unaff_RBX = 0x13;\n            *(*0x20 + -0x20) = 0x4464b5;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x4464c5;\n        fcn.0045bb60();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 1047
    },
    "004464e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004464e0(ulong noname_0, ulong noname_1, int64_t noname_2, ulong arg4)\n\n{\n    int64_t in_RAX;\n    int64_t arg1;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t arg3;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            arg3 = *(unaff_RBX + 0x10);\n            arg1 = *(unaff_RBX + 0x38);\n            arg2 = *(arg3 + 8);\n            if (*0x801c20 == 0) {\n                *(arg3 + 8) = unaff_RBX;\n                *(unaff_RBX + 0x38) = arg3;\n                *(unaff_RBX + 0x10) = arg2;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x44652a;\n                fcn.0045dee0(arg1, arg2, arg3, arg4);\n                *(*0x20 + -0x20) = 0x446533;\n                fcn.0045df20(arg1, arg2, arg3, arg4);\n                *(*0x20 + -0x20) = 0x44653c;\n                in_RAX = fcn.0045dec0(arg1, arg2, arg3, arg4);\n                noname_2 = arg3;\n            }\n            if (arg2 != 0) {\n                if (*0x801c20 == 0) {\n                    *(arg2 + 0x38) = unaff_RBX;\n                }\n                else {\n                    arg2 = arg2 + 0x38;\n                    *(*0x20 + -0x20) = 0x446565;\n                    in_RAX = fcn.0045dee0(arg1, arg2, noname_2, arg4);\n                }\n            }\n            if (*0x801c20 == 0) {\n                *(arg3 + 0x38) = arg1;\n            }\n            else {\n                arg2 = arg3 + 0x38;\n                *(*0x20 + -0x20) = 0x446586;\n                in_RAX = fcn.0045dea0(arg1, arg2, noname_2, arg4);\n            }\n            if (arg1 == 0) {\n                if (*0x801c20 == 0) {\n                    *(in_RAX + 8) = arg3;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x4465fa;\n                fcn.0045dea0(arg3, arg2, noname_2, arg4);\n                return;\n            }\n            if (*(arg1 + 0x10) == unaff_RBX) {\n                if (*0x801c20 == 0) {\n                    *(arg1 + 0x10) = arg3;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x4465b2;\n                fcn.0045dea0(arg3, arg2, noname_2, arg4);\n                return;\n            }\n            if (*(arg1 + 8) == unaff_RBX) {\n                if (*0x801c20 == 0) {\n                    *(arg1 + 8) = arg3;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x4465d8;\n                    fcn.0045dea0(arg3, arg2, noname_2, arg4);\n                }\n                return;\n            }\n            unaff_RBX = 0x14;\n            *(*0x20 + -0x20) = 0x446615;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x446625;\n        fcn.0045bb60();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 1046
    },
    "00446800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00446800(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t *in_RAX;\n    ulong *puVar3;\n    int64_t unaff_RBX;\n    \n    if (*(unaff_RBX + 0xf8) < *0x79af30) {\n        return 0;\n    }\n    if (*(unaff_RBX + 0xf8) <= *0x79af38) {\n        uVar1 = *in_RAX;\n        if (uVar1 < 0xc000008f) {\n            if (uVar1 < 0xc0000006) {\n                if ((uVar1 != 0x80000003) && (uVar1 != 0xc0000005)) {\n                    return 0;\n                }\n            }\n            else if (((uVar1 != 0xc000001d) && (uVar1 != 0xc000008d)) && (uVar1 != 0xc000008e)) {\n                return 0;\n            }\n        }\n        else if (uVar1 < 0xc0000092) {\n            if ((uVar1 != 0xc000008f) && (uVar1 != 0xc0000091)) {\n                return 0;\n            }\n        }\n        else if (((uVar1 != 0xc0000093) && (uVar1 != 0xc0000094)) && (uVar1 != 0xc0000095)) {\n            return 0;\n        }\n        if ((*(arg1 + 0xb7) != '\\0') || (cVar2 = fcn.00434760(),  cVar2 != '\\0')) {\n            fcn.00446ae0(arg1);\n        }\n        *(arg1 + 0xf0) = *in_RAX;\n        *(arg1 + 0x110) = *(in_RAX + 8);\n        *(arg1 + 0x118) = *(in_RAX + 10);\n        *(arg1 + 0x120) = *(unaff_RBX + 0xf8);\n        if ((*(unaff_RBX + 0xf8) != NULL) && (*(unaff_RBX + 0xf8) != fcn.0045f280)) {\n            puVar3 = *(unaff_RBX + 0x98) + -8;\n            *(unaff_RBX + 0x98) = puVar3;\n            *puVar3 = *(unaff_RBX + 0xf8);\n        }\n        *(unaff_RBX + 0xf8) = 0x45dd80;\n        return 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 592
    },
    "00446a80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00446a80(ulong arg1)\n\n{\n    if ((*0x8019ac == '\\0') && (*0x8019aa == '\\0')) {\n        if (*0x8019ae != '\\0') {\n            return 0;\n        }\n        fcn.00446ae0(arg1);\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 83
    },
    "00446ae0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00446ae0(int64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t *piVar2;\n    uint32_t uVar3;\n    ulong *unaff_R14;\n    ulong *puVar4;\n    \n    puVar4 = unaff_R14;\n    if (*0x801a0c != 0) {\n        fcn.0042f860();\n    }\n    *0x801a0c = 1;\n    *puVar4 = 0;\n    puVar4[2] = 0x13a0;\n    puVar4[3] = 0x13a0;\n    fcn.00435540();\n    fcn.00435e40();\n    fcn.00435ca0();\n    fcn.00435760();\n    fcn.00435ca0();\n    fcn.00435760();\n    fcn.00435ca0();\n    fcn.00435760();\n    fcn.00435ca0();\n    fcn.004357a0();\n    fcn.004355c0();\n    fcn.00435540();\n    fcn.00435e40();\n    fcn.00435ca0();\n    fcn.004357a0();\n    fcn.004355c0();\n    piVar2 = puVar4[6];\n    if (((*(piVar2 + 0x1d) != '\\0') && (*piVar2 == arg1)) && (piVar2[0x12] != 0)) {\n        if (*0x8019ab != '\\0') {\n            fcn.00435540();\n            fcn.00435e40();\n            fcn.004355c0();\n        }\n        arg1 = *(puVar4[6] + 0x90);\n    }\n    fcn.00435540();\n    fcn.004357a0();\n    fcn.004355c0();\n    *(puVar4[6] + 0xc4) = 2;\n    *(puVar4[6] + 0x98) = arg1;\n    uVar1 = *(unaff_R14[6] + 0xf9);\n    uVar3 = uVar1;\n    if ((uVar1 == 0) && (uVar3 = *0x79528c >> 2,  1 < *(unaff_R14[6] + 0xc4))) {\n        uVar3 = 2;\n    }\n    if (uVar3 != 0) {\n        fcn.00455060(0);\n        fcn.00456000();\n        fcn.00406c80();\n    }\n    fcn.0042f860();\n    return;\n}\n",
        "token_count": 593
    },
    "004470e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004470e0(uint64_t arg1)\n\n{\n    uchar auVar1 [16];\n    uint64_t *in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX <= arg1) {\n                uVar2 = *in_RAX * unaff_RBX;\n                uVar4 = uVar2;\n                goto code_r0x0044714a;\n            }\n            uVar4 = *in_RAX;\n            *(*0x20 + -0x18) = uVar4;\n            auVar1 = ZEXT816(unaff_RBX) * ZEXT816(uVar4);\n            uVar2 = SUB168(auVar1, 0);\n            if (((SUB168(auVar1 >> 0x40, 0) == 0) && (uVar2 < 0x1000000000001)) && (-1 < unaff_RBX)) {\n                uVar4 = arg1 * *(*0x20 + -0x18);\ncode_r0x0044714a:\n                *(*0x20 + 0x20) = unaff_RDI;\n                *(*0x20 + -0x20) = uVar4;\n                if (in_RAX[1] == 0) {\n                    *(*0x20 + -0x28) = uVar2;\n                    *(*0x20 + -0x48) = 0x447169;\n                    iVar3 = fcn.0040bba0(0);\n                    uVar4 = *(*0x20 + -0x20);\n                    if (uVar4 < *(*0x20 + -0x28)) {\n                        *(*0x20 + -0x10) = iVar3;\n                        *(*0x20 + -0x48) = 0x44718c;\n                        fcn.0045e8c0(uVar4, iVar3 + uVar4);\n                        iVar3 = *(*0x20 + -0x10);\n                        uVar4 = *(*0x20 + -0x20);\n                    }\n                }\n                else {\n                    *(*0x20 + -0x48) = 0x4471a5;\n                    iVar3 = fcn.0040bba0(1);\n                    uVar4 = *(*0x20 + -0x20);\n                    if ((uVar4 != 0) && (*0x801c20 != '\\0')) {\n                        *(*0x20 + -0x10) = iVar3;\n                        *(*0x20 + -0x48) = 0x4471c7;\n                        fcn.00411140(uVar4);\n                        iVar3 = *(*0x20 + -0x10);\n                        uVar4 = *(*0x20 + -0x20);\n                    }\n                }\n                *(*0x20 + -0x10) = iVar3;\n                *(*0x20 + -0x48) = 0x4471e5;\n                fcn.0045ebc0(uVar4);\n                return *(*0x20 + -0x10);\n            }\n            unaff_RBX = 0x732958;\n            *(*0x20 + -0x48) = 0x447208;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x447225;\n        fcn.0045bb60();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1017
    },
    "00447360": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00447360(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t *in_RAX;\n    uint64_t uVar3;\n    ulong uVar4;\n    uint8_t uVar5;\n    int64_t arg1_00;\n    int64_t *piVar6;\n    int64_t *piVar7;\n    int64_t *piVar8;\n    ulong unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t *unaff_RSI;\n    int64_t *piVar10;\n    int64_t *unaff_RDI;\n    char *pcVar11;\n    int64_t unaff_R14;\n    bool bVar12;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (unaff_RDI <= unaff_RSI) break;\n            unaff_RBX = 0x732988;\n            *(*0x20 + -0x68) = 0x4479f8;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        *(puVar9 + 0x18) = arg1;\n        *(puVar9 + 0x20) = unaff_RDI;\n        *(puVar9 + 0x28) = unaff_RSI;\n        *(puVar9 + -8) = 0x447a17;\n        fcn.0045bb60();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        arg1 = *(puVar9 + 0x18);\n        unaff_RDI = *(puVar9 + 0x20);\n        unaff_RSI = *(puVar9 + 0x28);\n        *0x20 = puVar9;\n    } while( true );\n    piVar6 = *in_RAX;\n    if (piVar6 == NULL) {\n        return 0x801ba0;\n    }\n    pcVar11 = unaff_RDI * 2;\n    piVar7 = unaff_RSI;\n    if ((unaff_RSI <= pcVar11) && (piVar7 = pcVar11,  0xff < unaff_RDI)) {\n        for (; 0 < unaff_RDI; unaff_RDI = unaff_RDI + (unaff_RDI + ((unaff_RDI + 0x60 >> 0x3f) >> 0x3e) + 0x300 >> 2)) {\n            if (unaff_RSI <= unaff_RDI) {\n                piVar7 = unaff_RDI;\n                pcVar11 = unaff_RDI;\n                if (0 < unaff_RDI) goto code_r0x004473ce;\n                break;\n            }\n        }\n        piVar7 = unaff_RSI;\n        pcVar11 = unaff_RSI;\n    }\ncode_r0x004473ce:\n    do {\n        piVar8 = piVar7;\n        if (piVar6 == 0x1) {\n            if (0x7fff < piVar8) {\n                piVar6 = piVar8;\n                if (piVar8 <= piVar8 + 0x400) {\n                    piVar6 = piVar8 + 0x1fffU & 0xffffffffffffe000;\n                }\ncode_r0x00447499:\n                bVar12 = 0x1000000000000 < piVar8;\n                pcVar11 = arg1;\n                piVar7 = piVar6;\n                goto code_r0x004477c9;\n            }\n            if (0x3f8 < piVar8) {\n                piVar6 = piVar8 - 0x381U >> 7;\n                if (piVar6 < 0xf9) {\n                    pcVar11 = \n                    \" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                    ;\n                    piVar6 = *(piVar6 + 0xf3254);\n                    if (piVar6 < 0x44) {\n                        piVar6 = *(piVar6 * 2 + 0x7985a0);\n                        goto code_r0x00447499;\n                    }\n                    goto code_r0x00447959;\n                }\n                goto code_r0x00447966;\n            }\n            piVar6 = piVar8 + 7U >> 3;\n            if (piVar6 < 0x81) {\n                pcVar11 = 0x798460;\n                piVar6 = *(piVar6 + 0xf308c);\n                if (piVar6 < 0x44) {\n                    piVar6 = *(piVar6 * 2 + 0x7985a0);\n                    goto code_r0x00447499;\n                }\n                goto code_r0x00447973;\n            }\n        }\n        else {\n            if (piVar6 == 0x8) {\n                piVar6 = piVar8 * 8;\n                if (0x7fff < piVar6) {\n                    if (piVar6 <= piVar6 + 0x400) {\n                        piVar6 = piVar6 + 0x1fffU & 0xffffffffffffe000;\n                    }\ncode_r0x00447574:\n                    bVar12 = 0x200000000000 < piVar8;\n                    pcVar11 = arg1 << 3;\n                    unaff_RSI = unaff_RSI << 3;\n                    piVar7 = piVar6 >> 3;\n                    goto code_r0x004477c9;\n                }\n                if (0x3f8 < piVar6) {\n                    piVar10 = piVar6 - 0x381U >> 7;\n                    if (piVar10 < 0xf9) {\n                        pcVar11 = \n                        \" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                        ;\n                        piVar10 = *(piVar10 + 0xf3254);\n                        if (piVar10 < 0x44) {\n                            piVar6 = *(piVar10 * 2 + 0x7985a0);\n                            goto code_r0x00447574;\n                        }\n                        goto code_r0x00447925;\n                    }\n                    goto code_r0x00447932;\n                }\n                piVar10 = piVar6 + 7U >> 3;\n                piVar6 = piVar8;\n                if (piVar10 < 0x81) {\n                    pcVar11 = 0x798460;\n                    piVar10 = *(piVar10 + 0xf308c);\n                    if (piVar10 < 0x44) {\n                        piVar6 = *(piVar10 * 2 + 0x7985a0);\n                        goto code_r0x00447574;\n                    }\n                    goto code_r0x0044793f;\n                }\n            }\n            else {\n                if ((piVar6 & piVar6 - 1U) == 0) {\n                    piVar7 = NULL;\n                    if (piVar6 != NULL) {\n                        for (; (piVar6 >> piVar7 & 1) == 0; piVar7 = piVar7 + 1) {\n                        }\n                    }\n                    uVar5 = piVar7;\n                    pcVar11 = arg1 << (uVar5 & 0x3f);\n                    unaff_RSI = unaff_RSI << (uVar5 & 0x3f);\n                    piVar6 = piVar8 << (uVar5 & 0x3f);\n                    if (0x7fff < piVar6) {\n                        if (piVar6 <= piVar6 + 0x400) {\n                            piVar6 = piVar6 + 0x1fffU & 0xffffffffffffe000;\n                        }\ncode_r0x00447694:\n                        bVar12 = 0x1000000000000U >> (uVar5 & 0x3f) < piVar8;\n                        piVar7 = piVar6 >> (uVar5 & 0x3f);\ncode_r0x004477c9:\n                        piVar10 = 0x1000000000000;\n                        if ((!bVar12) && (piVar6 < 0x1000000000001)) {\n                            *(*0x20 + -0x10) = unaff_RBX;\n                            *(*0x20 + -0x28) = arg1;\n                            *(*0x20 + -0x38) = pcVar11;\n                            *(*0x20 + -0x40) = piVar7;\n                            if (in_RAX[1] == 0) {\n                                *(*0x20 + -0x30) = piVar6;\n                                *(*0x20 + -0x48) = unaff_RSI;\n                                *(*0x20 + -0x68) = 0x44780c;\n                                uVar4 = fcn.0040bba0(0);\n                                *(*0x20 + -0x18) = uVar4;\n                                *(*0x20 + -0x68) = 0x447829;\n                                fcn.0045e8c0();\n                                arg1_00 = *(*0x20 + -0x38);\n                                uVar4 = *(*0x20 + -0x18);\n                            }\n                            else {\n                                *(*0x20 + 8) = in_RAX;\n                                *(*0x20 + -0x68) = 0x44784a;\n                                uVar4 = fcn.0040bba0(1);\n                                arg1_00 = *(*0x20 + -0x38);\n                                if ((arg1_00 != 0) && (*0x801c20 != '\\0')) {\n                                    *(*0x20 + -0x18) = uVar4;\n                                    iVar1 = **(*0x20 + 8);\n                                    iVar2 = (*(*0x20 + 8))[1];\n                                    *(*0x20 + -0x68) = 0x44787b;\n                                    fcn.00411140((arg1_00 - iVar1) + iVar2);\n                                    uVar4 = *(*0x20 + -0x18);\n                                    arg1_00 = *(*0x20 + -0x38);\n                                }\n                            }\n                            *(*0x20 + -0x18) = uVar4;\n                            *(*0x20 + -0x68) = 0x447894;\n                            fcn.0045ebc0(arg1_00);\n                            return *(*0x20 + -0x18);\n                        }\n                        unaff_RBX = 0x732988;\n                        *(*0x20 + -0x68) = 0x4478c5;\n                        fcn.004334e0();\n                        piVar7 = piVar6;\n                        piVar8 = arg1;\n                        in_RAX = piVar10;\ncode_r0x004478c5:\n                        *(*0x20 + -0x68) = 0x4478cf;\n                        fcn.0045e240(0x44);\ncode_r0x004478cf:\n                        *(*0x20 + -0x68) = 0x4478d9;\n                        fcn.0045e260(0xf9);\ncode_r0x004478d9:\n                        *(*0x20 + -0x68) = 0x4478e5;\n                        fcn.0045e240(0x44);\n                        piVar10 = piVar8;\n                        goto code_r0x004478e5;\n                    }\n                    if (0x3f8 < piVar6) {\n                        piVar10 = piVar6 - 0x381U >> 7;\n                        if (piVar10 < 0xf9) {\n                            piVar10 = *(piVar10 + 0xf3254);\n                            if (piVar10 < 0x44) {\n                                piVar6 = *(piVar10 * 2 + 0x7985a0);\n                                goto code_r0x00447694;\n                            }\n                            goto code_r0x004478ef;\n                        }\n                        goto code_r0x004478fc;\n                    }\n                    piVar10 = piVar6 + 7U >> 3;\n                    if (piVar10 < 0x81) {\n                        piVar10 = *(piVar10 + 0xf308c);\n                        if (piVar10 < 0x44) {\n                            piVar6 = *(piVar10 * 2 + 0x7985a0);\n                            goto code_r0x00447694;\n                        }\n                        goto code_r0x00447909;\n                    }\n                }\n                else {\n                    *(*0x20 + -0x20) = piVar6;\n                    piVar6 = piVar8 * piVar6;\n                    piVar7 = *(*0x20 + -0x20);\n                    pcVar11 = arg1 * piVar7;\n                    unaff_RSI = unaff_RSI * piVar7;\n                    if (0x7fff < piVar6) {\n                        if (piVar6 < piVar6 + 0x400 || piVar6 - (piVar6 + 0x400) == 0) {\n                            piVar6 = piVar6 + 0x1fffU & 0xffffffffffffe000;\n                        }\ncode_r0x00447795:\n                        *(*0x20 + -0x20) = piVar6 / piVar7;\n                        bVar12 = SUB168(ZEXT816(piVar8) * ZEXT816(piVar7) >> 0x40, 0) != 0;\n                        piVar7 = *(*0x20 + -0x20);\n                        goto code_r0x004477c9;\n                    }\n                    if (0x3f8 < piVar6) {\n                        uVar3 = piVar6 - 0x381U >> 7;\n                        if (uVar3 < 0xf9) {\n                            if (\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                [uVar3] < 0x44) {\n                                piVar6 = *(\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                           [uVar3] * 2 + 0x7985a0);\n                                goto code_r0x00447795;\n                            }\n                            goto code_r0x004478c5;\n                        }\n                        goto code_r0x004478cf;\n                    }\n                    uVar3 = piVar6 + 7U >> 3;\n                    piVar10 = piVar8;\n                    if (uVar3 < 0x81) {\n                        uVar3 = *(uVar3 + 0x798460);\n                        if (uVar3 < 0x44) {\n                            piVar6 = *(uVar3 * 2 + 0x7985a0);\n                            goto code_r0x00447795;\n                        }\n                        goto code_r0x004478d9;\n                    }\ncode_r0x004478e5:\n                    pcVar11 = in_RAX;\n                    *(*0x20 + -0x68) = 0x4478ef;\n                    fcn.0045e260(0x81);\ncode_r0x004478ef:\n                    *(*0x20 + -0x68) = 0x4478fc;\n                    fcn.0045e240(0x44);\ncode_r0x004478fc:\n                    *(*0x20 + -0x68) = 0x447909;\n                    fcn.0045e260(0xf9);\ncode_r0x00447909:\n                    *(*0x20 + -0x68) = 0x447916;\n                    fcn.0045e240(0x44);\n                }\n                *(*0x20 + -0x68) = 0x447925;\n                fcn.0045e260(0x81);\n                piVar8 = piVar7;\ncode_r0x00447925:\n                *(*0x20 + -0x68) = 0x447932;\n                fcn.0045e240(0x44);\ncode_r0x00447932:\n                *(*0x20 + -0x68) = 0x44793f;\n                fcn.0045e260(0xf9);\ncode_r0x0044793f:\n                *(*0x20 + -0x68) = 0x44794c;\n                fcn.0045e240(0x44);\n                piVar6 = piVar8;\n            }\n            *(*0x20 + -0x68) = 0x447959;\n            fcn.0045e260(0x81);\n            piVar8 = piVar10;\ncode_r0x00447959:\n            *(*0x20 + -0x68) = 0x447966;\n            fcn.0045e240(0x44);\ncode_r0x00447966:\n            *(*0x20 + -0x68) = 0x447973;\n            fcn.0045e260(0xf9);\ncode_r0x00447973:\n            *(*0x20 + -0x68) = 0x447985;\n            fcn.0045e240(0x44);\n        }\n        arg1 = 0x81;\n        *(*0x20 + -0x68) = 0x447992;\n        in_RAX = fcn.0045e260(0x81);\n        piVar7 = pcVar11;\n        unaff_RSI = piVar8;\n    } while( true );\n}\n",
        "token_count": 4178
    },
    "00447a40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong * fcn.00447a40(void)\n\n{\n    uint8_t in_AL;\n    int64_t iVar1;\n    ulong *puVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_AL < 2) {\n                iVar3 = in_AL * 0x40;\n                iVar1 = *(iVar3 + 0x802028);\n                if (iVar1 != 0) goto code_r0x00447ade;\n                *(*0x20 + 8) = in_AL;\n                *(*0x20 + -0x18) = iVar3 + 0x802028;\n                *(*0x20 + -0x40) = 0x447aa6;\n                iVar1 = fcn.004243c0();\n                if (iVar1 != 0) {\n                    if (*(iVar1 + 0x60) == 0) {\n                        if (*(iVar1 + 0x28) == 0) {\n                            *(iVar1 + 0x68) = 0x2000 << (*(*0x20 + 8) & 0x3f);\n                            puVar2 = NULL;\n                            do {\n                                if (0x7fff < puVar2) {\n                                    *(*0x20 + -0x20) = iVar1;\n                                    *(*0x20 + -0x40) = 0x447b6f;\n                                    fcn.00425940();\n                                    iVar1 = *(*0x20 + -0x20);\ncode_r0x00447ade:\n                                    puVar2 = *(iVar1 + 0x28);\n                                    if (puVar2 != NULL) {\n                                        *(iVar1 + 0x28) = *puVar2;\n                                        *(iVar1 + 0x60) = *(iVar1 + 0x60) + 1;\n                                        if (*(iVar1 + 0x28) == 0) {\n                                            *(*0x20 + -0x10) = puVar2;\n                                            *(*0x20 + -0x40) = 0x447b15;\n                                            fcn.004257c0();\n                                            puVar2 = *(*0x20 + -0x10);\n                                        }\n                                        return puVar2;\n                                    }\n                                    *(*0x20 + -0x40) = 0x447b38;\n                                    iVar1 = fcn.00433c80();\n                                }\n                                puVar4 = *(iVar1 + 0x18) + puVar2;\n                                *puVar4 = *(iVar1 + 0x28);\n                                *(iVar1 + 0x28) = puVar4;\n                                puVar2 = puVar2 + *(iVar1 + 0x68);\n                            } while( true );\n                        }\n                        *(*0x20 + -0x40) = 0x447b8f;\n                        fcn.00433c80();\n                    }\n                    *(*0x20 + -0x40) = 0x447ba5;\n                    fcn.00433c80();\n                }\n                *(*0x20 + -0x40) = 0x447bb6;\n                fcn.00433c80();\n            }\n            *(*0x20 + -0x40) = 0x447bc5;\n            in_AL = fcn.0045e240(2);\n        }\n        puVar5[8] = in_AL;\n        *(puVar5 + -8) = 0x447bcf;\n        fcn.0045bb60();\n        in_AL = puVar5[8];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 895
    },
    "00447be0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00447be0(void)\n\n{\n    int16_t iVar1;\n    ulong *in_RAX;\n    uint64_t uVar2;\n    uint8_t unaff_BL;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = in_RAX + 0x100000000000 >> 0x2a;\n            if (uVar2 < 0x40) {\n                iVar4 = *(*(*(uVar2 * 8 + 0x7d3e10) + (in_RAX + 0x100000000000 >> 0x16 & 0xfffff) * 8) + 0x20000 +\n                         (in_RAX >> 0xd & 0x1ff) * 8);\n                if (*(iVar4 + 99) == '\\x02') {\n                    *(*0x20 + -0x18) = iVar4;\n                    if (*(iVar4 + 0x28) == 0) {\n                        if (unaff_BL < 2) {\n                            *(*0x20 + 0x10) = unaff_BL;\n                            *(*0x20 + -0x10) = in_RAX;\n                            *(*0x20 + -0x38) = 0x447c96;\n                            fcn.00425940(0x802020);\n                            unaff_BL = *(*0x20 + 0x10);\n                            in_RAX = *(*0x20 + -0x10);\n                            iVar4 = *(*0x20 + -0x18);\n                            goto code_r0x00447ca5;\n                        }\n                    }\n                    else {\ncode_r0x00447ca5:\n                        *in_RAX = *(iVar4 + 0x28);\n                        *(iVar4 + 0x28) = in_RAX;\n                        iVar1 = *(iVar4 + 0x60);\n                        *(iVar4 + 0x60) = iVar1 + -1;\n                        if (*0x8019ec != 0) {\n                            return;\n                        }\n                        if (iVar1 != 1) {\n                            return;\n                        }\n                        if (unaff_BL < 2) {\n                            *(*0x20 + -0x38) = 0x447cf3;\n                            fcn.004257c0(0x802020);\n                            *(*(*0x20 + -0x18) + 0x28) = 0;\n                            *(*0x20 + -0x38) = 0x447d11;\n                            fcn.004253c0(1);\n                            return;\n                        }\n                        *(*0x20 + -0x38) = 0x447d25;\n                        fcn.0045e240(2);\n                    }\n                    *(*0x20 + -0x38) = 0x447d2f;\n                    fcn.0045e240(2);\n                }\n                unaff_BL = 0x21;\n                *(*0x20 + -0x38) = 0x447d45;\n                fcn.00433c80();\n            }\n            *(*0x20 + -0x38) = 0x447d52;\n            in_RAX = fcn.0045e260(0x40);\n        }\n        *(puVar3 + 8) = in_RAX;\n        puVar3[0x10] = unaff_BL;\n        *(puVar3 + -8) = 0x447d65;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        unaff_BL = puVar3[0x10];\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 906
    },
    "00447d80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00447d80(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    ulong *puVar3;\n    uint64_t uVar4;\n    uint8_t unaff_BL;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar4 = unaff_BL;\n            if (uVar4 < 2) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x18) = uVar4;\n                *(*0x20 + 0x10) = unaff_BL;\n                *(*0x20 + -0x10) = uVar4 * 0x40 + 0x802020;\n                *(*0x20 + -0x40) = 0x447dd1;\n                fcn.0040a460();\n                uVar4 = 0;\n                puVar3 = NULL;\n                while( true ) {\n                    *(*0x20 + -0x28) = uVar4;\n                    *(*0x20 + -0x20) = puVar3;\n                    if (0x3fff < uVar4) break;\n                    *(*0x20 + -0x40) = 0x447de5;\n                    puVar3 = fcn.00447a40();\n                    *puVar3 = *(*0x20 + -0x20);\n                    uVar4 = (0x2000 << (*(*0x20 + 0x10) & 0x3f)) + *(*0x20 + -0x28);\n                }\n                *(*0x20 + -0x40) = 0x447e34;\n                fcn.0040a680();\n                iVar1 = *(*0x20 + 8);\n                iVar2 = *(*0x20 + -0x18);\n                *(iVar1 + 0x468 + iVar2 * 0x10) = *(*0x20 + -0x20);\n                *(iVar1 + 0x470 + iVar2 * 0x10) = *(*0x20 + -0x28);\n                return;\n            }\n            *(*0x20 + -0x40) = 0x447e75;\n            in_RAX = fcn.0045e240(2);\n        }\n        *(puVar5 + 8) = in_RAX;\n        puVar5[0x10] = unaff_BL;\n        *(puVar5 + -8) = 0x447e85;\n        fcn.004602a0();\n        in_RAX = *(puVar5 + 8);\n        unaff_BL = puVar5[0x10];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 701
    },
    "00447ea0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00447ea0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    ulong *puVar3;\n    int64_t iVar4;\n    uint8_t unaff_BL;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = unaff_BL;\n            if (uVar2 < 2) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + 0x10) = unaff_BL;\n                iVar4 = uVar2 * 0x10;\n                *(*0x20 + -0x18) = iVar4;\n                *(*0x20 + -0x28) = *(in_RAX + 0x468 + iVar4);\n                *(*0x20 + -0x20) = *(in_RAX + 0x470 + iVar4);\n                *(*0x20 + -0x10) = uVar2 * 0x40 + 0x802020;\n                *(*0x20 + -0x40) = 0x447f14;\n                fcn.0040a460();\n                puVar3 = *(*0x20 + -0x28);\n                uVar2 = *(*0x20 + -0x20);\n                while (*(*0x20 + -0x20) = uVar2,  0x4000 < uVar2) {\n                    *(*0x20 + -0x28) = *puVar3;\n                    *(*0x20 + -0x40) = 0x447f37;\n                    fcn.00447be0();\n                    puVar3 = *(*0x20 + -0x28);\n                    uVar2 = *(*0x20 + -0x20) - (0x2000 << (*(*0x20 + 0x10) & 0x3f));\n                }\n                *(*0x20 + -0x28) = puVar3;\n                *(*0x20 + -0x40) = 0x447f6f;\n                fcn.0040a680();\n                iVar4 = *(*0x20 + -0x18);\n                iVar1 = *(*0x20 + 8);\n                *(iVar1 + 0x468 + iVar4) = *(*0x20 + -0x28);\n                *(iVar1 + 0x470 + iVar4) = *(*0x20 + -0x20);\n                return;\n            }\n            *(*0x20 + -0x40) = 0x447faa;\n            in_RAX = fcn.0045e240(2);\n        }\n        *(puVar5 + 8) = in_RAX;\n        puVar5[0x10] = unaff_BL;\n        *(puVar5 + -8) = 0x447fb9;\n        fcn.004602a0();\n        in_RAX = *(puVar5 + 8);\n        unaff_BL = puVar5[0x10];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 777
    },
    "00447fe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00447fe0(void)\n\n{\n    int64_t in_RAX;\n    uint8_t uVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.004602a0();\n    }\n    for (uVar1 = 0; uVar1 < 2; uVar1 = uVar1 + 1) {\n        fcn.0040a460();\n        iVar2 = uVar1 * 0x10;\n        puVar3 = *(in_RAX + 0x468 + iVar2);\n        while (puVar3 != NULL) {\n            puVar3 = *puVar3;\n            fcn.00447be0();\n        }\n        *(in_RAX + 0x468 + iVar2) = 0;\n        *(in_RAX + 0x470 + iVar2) = 0;\n        fcn.0040a680();\n    }\n    return;\n}\n",
        "token_count": 250
    },
    "004480e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.004480e0(void)\n\n{\n    uint32_t uVar1;\n    uint64_t in_RAX;\n    ulong *puVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t *piVar8;\n    int64_t iVar9;\n    uint32_t uVar10;\n    uint64_t uVar11;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        uVar1 = in_RAX;\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar12 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar8 = *(unaff_R14 + 0x30);\n            if (*piVar8 == unaff_R14) {\n                uVar7 = uVar1 - 1;\n                if ((uVar1 - 1 & uVar1) == 0) {\n                    if (*0x801e68 != 0) {\n                        uVar6 = -*0x801b18;\n                        piVar8 = (*0x801b18 + (in_RAX & 0xffffffff)) - 1 & uVar6;\n                        *(*0x20 + -0x18) = piVar8 & 0xffffffff;\n                        *(*0x20 + -0x78) = 0x44816c;\n                        puVar2 = fcn.00414420();\n                        if (puVar2 != NULL) {\n                            return puVar2;\n                        }\n                        uVar11 = 0x1a;\n                        *(*0x20 + -0x78) = 0x448195;\n                        fcn.00433c80();\n                        goto code_r0x00448195;\n                    }\n                    *(*0x20 + 8) = uVar1;\n                    if (0x7fff < uVar1) {\n                        piVar8 = in_RAX & 0xffffffff;\n                        uVar7 = 0;\n                        uVar6 = piVar8 >> 0xd;\n                        uVar11 = uVar6;\n                        for (; 1 < uVar6; uVar6 = uVar6 >> 1) {\ncode_r0x00448195:\n                            uVar7 = uVar7 + 1;\n                        }\n                        *(*0x20 + -0x18) = uVar11;\n                        *(*0x20 + -0x20) = piVar8;\n                        *(*0x20 + -0x40) = uVar7;\n                        *(*0x20 + -0x78) = 0x4481c5;\n                        fcn.0040a460();\n                        if (*(*0x20 + -0x40) < 0x23) {\n                            iVar3 = *(*(*0x20 + -0x40) * 0x10 + 0x8028e8);\n                            if (iVar3 == 0) {\n                                uVar4 = 0;\n                            }\n                            else {\n                                *(*0x20 + -0x28) = iVar3;\n                                *(*0x20 + -0x78) = 0x4481f9;\n                                fcn.004257c0();\n                                uVar4 = *(*0x20 + -0x28);\n                            }\n                            *(*0x20 + -0x48) = uVar4;\n                            *(*0x20 + -0x78) = 0x448211;\n                            fcn.0040a680();\n                            iVar3 = *(*0x20 + -0x48);\n                            if (iVar3 == 0) {\n                                *(*0x20 + -0x78) = 0x448231;\n                                iVar3 = fcn.004243c0(1);\n                                if (iVar3 == 0) {\n                                    uVar11 = 0xd;\n                                    *(*0x20 + -0x78) = 0x44826e;\n                                    fcn.00433c80();\n                                    goto code_r0x0044826e;\n                                }\n                                *(iVar3 + 0x68) = *(*0x20 + -0x20);\n                            }\n                            return *(iVar3 + 0x18);\n                        }\ncode_r0x0044826e:\n                        uVar10 = uVar11;\n                        uVar7 = 0x23;\n                        *(*0x20 + -0x78) = 0x448278;\n                        uVar1 = fcn.0045e240(0x23);\n                        goto code_r0x00448278;\n                    }\n                    uVar7 = in_RAX & 0xffffffff;\n                    uVar10 = 0;\n                    while( true ) {\n                        uVar5 = uVar7;\n                        uVar1 = in_RAX;\n                        if (uVar1 < 0x2001) break;\ncode_r0x00448278:\n                        uVar10 = uVar10 + 1;\n                        in_RAX = uVar1 >> 1;\n                    }\n                    if ((piVar8[0x14] == 0) || (piVar8[0x1a] != 0)) {\n                        if ((uVar10 & 0xff) < 2) {\n                            *(*0x20 + -0x51) = uVar10;\n                            *(*0x20 + -0x10) = (uVar10 & 0xff) * 0x40 + 0x802020;\n                            *(*0x20 + -0x78) = 0x4482c7;\n                            fcn.0040a460();\n                            *(*0x20 + -0x78) = 0x4482d1;\n                            uVar4 = fcn.00447a40();\n                            *(*0x20 + -0x50) = uVar4;\n                            *(*0x20 + -0x78) = 0x4482e5;\n                            fcn.0040a680();\n                            return *(*0x20 + -0x50);\n                        }\n                    }\n                    else {\n                        iVar3 = *(piVar8[0x14] + 0x40);\n                        if ((uVar10 & 0xff) < 2) {\n                            iVar9 = (uVar10 & 0xff) * 0x10;\n                            puVar2 = *(iVar3 + 0x468 + iVar9);\n                            if (puVar2 == NULL) {\n                                *(*0x20 + -0x38) = iVar3;\n                                *(*0x20 + -0x30) = iVar9;\n                                *(*0x20 + -0x78) = 0x448325;\n                                fcn.00447d80();\n                                iVar9 = *(*0x20 + -0x30);\n                                iVar3 = *(*0x20 + -0x38);\n                                puVar2 = *(iVar3 + 0x468 + iVar9);\n                                uVar5 = *(*0x20 + 8);\n                            }\n                            *(iVar3 + 0x468 + iVar9) = *puVar2;\n                            piVar8 = iVar3 + 0x470 + iVar9;\n                            *piVar8 = *piVar8 - uVar5;\n                            return puVar2;\n                        }\n                        *(*0x20 + -0x78) = 0x448372;\n                        fcn.0045e240(2);\n                    }\n                    *(*0x20 + -0x78) = 0x44837c;\n                    fcn.0045e240(2);\n                }\n                *(*0x20 + -0x78) = 0x44838d;\n                fcn.00433c80();\n            }\n            *(*0x20 + -0x78) = 0x44839e;\n            uVar1 = fcn.00433c80();\n        }\n        *(puVar12 + 8) = uVar1;\n        *(puVar12 + -8) = 0x4483a8;\n        fcn.004602a0();\n        in_RAX = *(puVar12 + 8);\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 1829
    },
    "004483c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004483c0(void)\n\n{\n    int64_t *piVar1;\n    ulong *in_RAX;\n    int32_t iVar2;\n    uint64_t uVar3;\n    uint32_t uVar4;\n    ulong *puVar5;\n    int64_t unaff_RBX;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t iVar9;\n    int64_t iVar10;\n    int64_t unaff_R14;\n    \n    do {\n        iVar9 = *0x802458;\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar8 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = unaff_RBX - in_RAX;\n            if ((uVar6 & uVar6 - 1) == 0) {\n                if (*0x801e68 != 0) {\n                    LOCK();\n                    *0x802458 = in_RAX + (*0x802458 - unaff_RBX);\n                    *(*0x20 + -0x80) = 0x4484ad;\n                    fcn.004146a0(0x802458, iVar9);\n                    return;\n                }\n                puVar5 = in_RAX;\n                uVar7 = uVar6;\n                if (0x7fff < uVar6) {\n                    uVar6 = in_RAX + 0x100000000000 >> 0x2a;\n                    if (uVar6 < 0x40) {\n                        uVar4 = in_RAX >> 0xd;\n                        iVar9 = *(*(*(uVar6 * 8 + 0x7d3e10) + (in_RAX + 0x100000000000 >> 0x16 & 0xfffff) * 8) + 0x20000\n                                 + (uVar4 & 0x1ff) * 8);\n                        puVar5 = uVar4 & 0x100 | *(iVar9 + 99);\n                        if (*(iVar9 + 99) == 2) {\n                            if (*0x8019ec == 0) {\n                                *(*0x20 + -0x80) = 0x448495;\n                                fcn.004253c0(1);\n                                return;\n                            }\n                            iVar10 = 0;\n                            for (uVar6 = *(iVar9 + 0x20); 1 < uVar6; uVar6 = uVar6 >> 1) {\n                                iVar10 = iVar10 + 1;\n                            }\n                            *(*0x20 + -0x50) = iVar9;\n                            *(*0x20 + -0x48) = iVar10;\n                            *(*0x20 + -0x80) = 0x4484e5;\n                            fcn.0040a460();\n                            if (*(*0x20 + -0x48) < 0x23) {\n                                *(*0x20 + -0x80) = 0x448508;\n                                fcn.00425940(0x8028e8);\n                                *(*0x20 + -0x80) = 0x448516;\n                                fcn.0040a680();\n                                return;\n                            }\n                            *(*0x20 + -0x80) = 0x448525;\n                            in_RAX = fcn.0045e240(0x23);\n                        }\n                        *(*0x20 + -0x20) = in_RAX;\n                        *(*0x20 + -0x58) = *(iVar9 + 0x18);\n                        *(*0x20 + -0x80) = 0x448538;\n                        fcn.00435540();\n                        *(*0x20 + -0x80) = 0x448545;\n                        fcn.00435ca0();\n                        *(*0x20 + -0x80) = 0x44854a;\n                        fcn.00435760();\n                        *(*0x20 + -0x80) = 0x448554;\n                        fcn.00435dc0();\n                        *(*0x20 + -0x80) = 0x448559;\n                        fcn.004357a0();\n                        *(*0x20 + -0x80) = 0x44855e;\n                        fcn.004355c0();\n                        uVar7 = 0xe;\n                        *(*0x20 + -0x80) = 0x44856f;\n                        fcn.00433c80();\n                    }\n                    iVar2 = 0x40;\n                    *(*0x20 + -0x80) = 0x44857c;\n                    uVar6 = fcn.0045e260(0x40);\n                    goto code_r0x0044857c;\n                }\n                *(*0x20 + -0x10) = unaff_R14;\n                uVar3 = 0;\n                for (; iVar2 = uVar3,  0x2000 < uVar7; uVar7 = uVar7 >> 1) {\ncode_r0x0044857c:\n                    uVar3 = iVar2 + 1;\n                }\n                *(*0x20 + -0x28) = puVar5;\n                iVar9 = *(*(*(*0x20 + -0x10) + 0x30) + 0xa0);\n                if ((iVar9 == 0) || (*(*(*(*0x20 + -0x10) + 0x30) + 0xd0) != 0)) {\n                    if ((uVar3 & 0xff) < 2) {\n                        *(*0x20 + -0x59) = uVar3;\n                        *(*0x20 + -0x18) = (uVar3 & 0xff) * 0x40 + 0x802020;\n                        *(*0x20 + -0x80) = 0x4485d9;\n                        fcn.0040a460();\n                        *(*0x20 + -0x80) = 0x4485e8;\n                        fcn.00447be0();\n                        *(*0x20 + -0x80) = 0x4485f4;\n                        fcn.0040a680();\n                        return;\n                    }\n                }\n                else {\n                    iVar9 = *(iVar9 + 0x40);\n                    if ((uVar3 & 0xff) < 2) {\n                        iVar10 = (uVar3 & 0xff) * 0x10;\n                        if (0x7fff < *(iVar9 + 0x470 + iVar10)) {\n                            *(*0x20 + -0x30) = uVar6;\n                            *(*0x20 + -0x38) = iVar10;\n                            *(*0x20 + -0x40) = iVar9;\n                            *(*0x20 + -0x80) = 0x448636;\n                            fcn.00447ea0();\n                            uVar6 = *(*0x20 + -0x30);\n                            puVar5 = *(*0x20 + -0x28);\n                            iVar9 = *(*0x20 + -0x40);\n                            iVar10 = *(*0x20 + -0x38);\n                        }\n                        *puVar5 = *(iVar9 + 0x468 + iVar10);\n                        *(iVar9 + 0x468 + iVar10) = puVar5;\n                        piVar1 = iVar9 + 0x470 + iVar10;\n                        *piVar1 = *piVar1 + uVar6;\n                        return;\n                    }\n                    *(*0x20 + -0x80) = 0x44867a;\n                    fcn.0045e240(2);\n                }\n                *(*0x20 + -0x80) = 0x448685;\n                fcn.0045e240(2);\n            }\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x80) = 0x448696;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x4486a6;\n        fcn.004602a0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1915
    },
    "004486c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004486c0(uint64_t *arg1)\n\n{\n    int64_t iVar1;\n    uint64_t *puVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    uint64_t in_RAX;\n    uint64_t uVar8;\n    ulong uVar9;\n    int32_t *unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    int64_t unaff_RDI;\n    uint64_t uVar11;\n    uint32_t uVar12;\n    uint64_t uVar13;\n    int64_t unaff_R14;\n    \n    while (puVar10 = *0x20,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\ncode_r0x00448891:\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + 0x28) = unaff_RSI;\n        *(puVar10 + -8) = 0x4488af;\n        fcn.0045bb60();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        arg1 = *(puVar10 + 0x18);\n        unaff_RDI = *(puVar10 + 0x20);\n        unaff_RSI = *(puVar10 + 0x28);\n        *0x20 = puVar10;\n    }\n    puVar10 = *0x20 + -0x60;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    *(*0x20 + 0x20) = unaff_RDI;\n    *(*0x20 + 0x28) = unaff_RSI;\n    *(*0x20 + -0x10) = unaff_RSI;\n    uVar3 = *arg1;\n    uVar4 = arg1[1];\n    uVar5 = arg1[2];\n    uVar11 = *unaff_RBX;\n    *(*0x20 + -0x28) = uVar11;\n    *(*0x20 + -0x30) = in_RAX;\n    uVar6 = arg1[0x23];\n    uVar13 = 0;\n    uVar8 = in_RAX;\n    do {\n        if (uVar11 <= uVar13) {\n            return;\n        }\n        *(*0x20 + -0x40) = uVar13;\n        uVar12 = *((uVar13 >> 3) + *(unaff_RBX + 2));\n        while (uVar12 != '\\0') {\n            uVar7 = 0;\n            if (uVar12 != 0) {\n                for (; (uVar12 >> uVar7 & 1) == 0; uVar7 = uVar7 + 1) {\n                }\n            }\n            uVar12 = uVar12 & uVar12 - 1;\n            *(*0x20 + -0x49) = uVar12;\n            iVar1 = uVar7 + uVar13;\n            puVar2 = in_RAX + iVar1 * 8;\n            while( true ) {\n                uVar13 = *(in_RAX + iVar1 * 8);\n                *(*0x20 + -0x48) = uVar13;\n                if (unaff_RDI != 0) {\n                    if (uVar13 - 1 < 0xfff) {\n                        if (*0x801e80 != 0) {\n                            *(*0x20 + -0x20) = puVar2;\n                            arg1 = *(unaff_R14 + 0x30);\n                            *(arg1 + 0xf9) = 2;\n                            *(*0x20 + -0x68) = 0x448810;\n                            uVar9 = fcn.0044d760();\n                            *(*0x20 + -0x18) = uVar9;\n                            *(*0x20 + -0x38) = unaff_RSI;\n                            *(*0x20 + -0x68) = 0x44881f;\n                            fcn.00435540();\n                            *(*0x20 + -0x68) = 0x448830;\n                            fcn.00435e40();\n                            *(*0x20 + -0x68) = 0x44883f;\n                            fcn.00435e40();\n                            *(*0x20 + -0x68) = 0x448850;\n                            fcn.00435e40();\n                            *(*0x20 + -0x68) = 0x44885a;\n                            fcn.00435dc0();\n                            *(*0x20 + -0x68) = 0x44886b;\n                            fcn.00435e40();\n                            *(*0x20 + -0x68) = 0x448875;\n                            fcn.00435ca0();\n                            *(*0x20 + -0x68) = 0x44887a;\n                            fcn.004357a0();\n                            *(*0x20 + -0x68) = 0x44887f;\n                            fcn.004355c0();\n                            unaff_RBX = 0x1e;\n                            *(*0x20 + -0x68) = 0x448890;\n                            in_RAX = fcn.00433c80();\n                            goto code_r0x00448891;\n                        }\n                        uVar12 = *(*0x20 + -0x49);\n                    }\n                    else {\n                        uVar12 = *(*0x20 + -0x49);\n                    }\n                }\n                if ((uVar13 < uVar3) || (uVar4 <= uVar13)) goto code_r0x0044873e;\n                if (uVar6 <= uVar8) {\n                    *(in_RAX + iVar1 * 8) = uVar13 + uVar5;\n                    goto code_r0x0044873e;\n                }\n                LOCK();\n                uVar11 = *puVar2;\n                *puVar2 = *puVar2 ^ (uVar13 == uVar11) * (*puVar2 ^ *(*0x20 + -0x48) + uVar5);\n                if (uVar13 == uVar11) break;\n                uVar8 = *(*0x20 + -0x30);\n                unaff_RSI = *(*0x20 + -0x10);\n            }\n            uVar8 = *(*0x20 + -0x30);\n            unaff_RSI = *(*0x20 + -0x10);\ncode_r0x0044873e:\n            uVar13 = *(*0x20 + -0x40);\n            uVar11 = *(*0x20 + -0x28);\n        }\n        uVar13 = uVar13 + 8;\n    } while( true );\n}\n",
        "token_count": 1594
    },
    "00448ec0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00448ec0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int64_t *in_RAX;\n    ulong uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t unaff_RBX;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    int64_t unaff_R14;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x130 && *0x20 + -0x130 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x1b0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX[0xe] == 0) {\n                iVar8 = in_RAX[1];\n                iVar1 = *in_RAX;\n                if (iVar1 != 0) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x130) = iVar8;\n                    *(*0x20 + -0x138) = iVar1;\n                    iVar2 = *(unaff_R14 + 0x30);\n                    *(*0x20 + -0x160) = iVar8 - in_RAX[7];\n                    iVar2 = *(iVar2 + 0xa0);\n                    *(*0x20 + -0x140) = iVar8 - iVar1;\n                    iVar8 = unaff_RBX - (iVar8 - iVar1);\n                    if (iVar2 == 0) {\n                        LOCK();\n                        uVar9 = *0x8023a8;\n                        *0x8023a8 = *0x8023a8 + iVar8;\n                    }\n                    else {\n                        iVar3 = *(iVar2 + 0x22b0);\n                        iVar1 = iVar3 + iVar8;\n                        *(iVar2 + 0x22b0) = iVar1;\n                        uVar9 = iVar3 + iVar8 + 0x1fff;\n                        if (0x3ffe < uVar9) {\n                            LOCK();\n                            *0x8023a8 = *0x8023a8 + iVar1;\n                            *(iVar2 + 0x22b0) = 0;\n                            uVar9 = 0x8023a8;\n                        }\n                    }\n                    *(*0x20 + -0x148) = unaff_RBX;\n                    *(*0x20 + -0x1b8) = 0x448fa6;\n                    uVar5 = fcn.004480e0();\n                    *(*0x20 + -0x150) = uVar5;\n                    *(*0x20 + -0x158) = uVar9;\n                    *(*0x20 + -0x1c0) = unaff_RBP;\n                    *(*0x20 + -0x1b8) = 0x448fcf;\n                    fcn.0045e4a6();\n                    uVar6 = *(*0x20 + -0x138);\n                    *(*0x20 + -0x128) = uVar6;\n                    uVar7 = *(*0x20 + -0x130);\n                    *(*0x20 + -0x120) = uVar7;\n                    *(*0x20 + -0x118) = uVar9 - uVar7;\n                    iVar8 = *(*0x20 + 8);\n                    if (*(iVar8 + 0xb8) == '\\0') {\n                        uVar9 = *(*0x20 + -0x140);\n                        if ((*(*0x20 + -0x148) < uVar9) &&\n                           (uVar11 = *(*0x20 + -0x148) & 0xffffffffffffff00 | *(iVar8 + 0xb9),  *(iVar8 + 0xb9) != 0)) {\n                            *(*0x20 + -0x1b8) = 0x4491e8;\n                            fcn.00433c80();\n                            goto code_r0x004491e8;\n                        }\n                        for (iVar8 = *(iVar8 + 0x148); iVar8 != 0; iVar8 = *(iVar8 + 0x40)) {\n                            uVar9 = *(iVar8 + 0x18);\n                            if ((*(*0x20 + -0x128) < uVar9 || *(*0x20 + -0x128) == uVar9) &&\n                               (uVar9 <= *(*0x20 + -0x120) && *(*0x20 + -0x120) != uVar9)) {\n                                *(iVar8 + 0x18) = uVar9 + *(*0x20 + -0x118);\n                            }\n                        }\n                        iVar8 = *(*0x20 + -0x160);\n                    }\n                    else {\n                        uVar9 = 0;\n                        for (uVar11 = *(iVar8 + 0x148); uVar11 != 0; uVar11 = *(uVar11 + 0x40)) {\n                            uVar12 = *(*(uVar11 + 0x50) + 0x18) + *(uVar11 + 0x18);\n                            if (((uVar6 <= uVar12) && (uVar12 < uVar7)) && (uVar9 < uVar12)) {\n                                uVar9 = uVar12;\n                            }\ncode_r0x004491e8:\n                        }\n                        *(*0x20 + -0x10) = uVar9;\n                        *(*0x20 + -0x1b8) = 0x449232;\n                        iVar8 = fcn.00448d40(*0x20 + -0x128);\n                        iVar8 = *(*0x20 + -0x160) - iVar8;\n                    }\n                    *(*0x20 + -0x1b8) = 0x449094;\n                    fcn.0045ebc0(iVar8);\n                    iVar8 = *(*0x20 + 8);\n                    uVar9 = *(iVar8 + 0x50);\n                    if ((*(*0x20 + -0x128) < uVar9 || *(*0x20 + -0x128) == uVar9) &&\n                       (uVar9 <= *(*0x20 + -0x120) && *(*0x20 + -0x120) != uVar9)) {\n                        *(iVar8 + 0x50) = *(*0x20 + -0x118) + uVar9;\n                    }\n                    uVar9 = *(iVar8 + 0x68);\n                    if ((*(*0x20 + -0x128) < uVar9 || *(*0x20 + -0x128) == uVar9) &&\n                       (uVar9 <= *(*0x20 + -0x120) && *(*0x20 + -0x120) != uVar9)) {\n                        *(iVar8 + 0x68) = uVar9 + *(*0x20 + -0x118);\n                    }\n                    *(*0x20 + -0x1b8) = 0x4490fa;\n                    fcn.00448c40();\n                    piVar4 = *(*0x20 + 8);\n                    uVar9 = piVar4[4];\n                    if ((*(*0x20 + -0x128) < uVar9 || *(*0x20 + -0x128) == uVar9) &&\n                       (uVar9 <= *(*0x20 + -0x120) && *(*0x20 + -0x120) != uVar9)) {\n                        piVar4[4] = *(*0x20 + -0x118) + uVar9;\n                    }\n                    if (*(*0x20 + -0x10) != 0) {\n                        *(*0x20 + -0x10) = *(*0x20 + -0x10) + *(*0x20 + -0x118);\n                    }\n                    iVar8 = *(*0x20 + -0x150);\n                    *piVar4 = iVar8;\n                    iVar1 = *(*0x20 + -0x158);\n                    piVar4[1] = iVar1;\n                    piVar4[2] = iVar8 + 0x13a0;\n                    piVar4[7] = iVar1 - *(*0x20 + -0x160);\n                    iVar8 = *(*0x20 + -0x118);\n                    piVar4[0x10] = piVar4[0x10] + iVar8;\n                    *(*0x20 + -0x1b0) = 0;\n                    *(*0x20 + -0x1b8) = 0x4491b5;\n                    fcn.004525e0(0, iVar8, 0, 0x7fffffff);\n                    *(*0x20 + -0x1b8) = 0x4491c7;\n                    fcn.004483c0();\n                    return;\n                }\n                *(*0x20 + -0x1b8) = 0x44925d;\n                fcn.00433c80();\n            }\n            unaff_RBX = 0x27;\n            *(*0x20 + -0x1b8) = 0x44926e;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + -8) = 0x44927e;\n        fcn.0045bb60();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 2198
    },
    "00449ee0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00449ee0(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    int64_t *arg3;\n    int64_t **in_RAX;\n    int64_t *arg1;\n    int64_t **arg2;\n    int64_t **unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (unaff_RBX == NULL) {\n        arg1 = 0x449ec0;\n    }\n    else {\n        arg1 = *unaff_RBX;\n    }\n    arg2 = *in_RAX + -1;\n    arg3 = in_RAX[1];\n    *arg2 = arg3;\n    *in_RAX = arg2;\n    in_RAX[1] = arg1;\n    if (*0x801c20 == 0) {\n        in_RAX[3] = unaff_RBX;\n    }\n    else {\n        fcn.0045dee0(arg1, arg2, arg3, arg4);\n    }\n    return;\n}\n",
        "token_count": 279
    },
    "00449f60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00449f60(void)\n\n{\n    int64_t *piVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t *unaff_R14;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (unaff_R14[2] <= *0x20 && *0x20 != unaff_R14[2]) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*in_RAX != 0) {\n                if (((*(in_RAX + 0x12) >> 0xc & 1) != 0) ||\n                   (((in_RAX == *(unaff_R14[6] + 0x90) && (unaff_R14 != *(unaff_R14[6] + 0x90))) &&\n                    (*(in_RAX + 0x12) == 2)))) {\n                    if (in_RAX[0xe] == 0) {\n                        if (*(in_RAX + 0xb4) == '\\0') {\n                            bVar5 = *(in_RAX + 0xb9) == '\\0';\n                        }\n                        else {\n                            bVar5 = false;\n                        }\n                    }\n                    else {\n                        bVar5 = false;\n                    }\n                    if (bVar5) {\n                        if ((*(unaff_R14[6] + 0x90) != in_RAX) || (*(in_RAX[6] + 0x2b0) == 0)) {\n                            if (0 < *0x801e74) {\n                                return;\n                            }\n                            *(*0x20 + 8) = in_RAX;\n                            iVar2 = in_RAX[0x27];\n                            *(*0x20 + -0x20) = 0x44a029;\n                            iVar2 = fcn.0044cfe0(iVar2);\n                            if ((iVar2 != 0) && (*(iVar2 + 0x24) == '\\x06')) {\n                                return;\n                            }\n                            piVar1 = *(*0x20 + 8);\n                            uVar3 = piVar1[1] - *piVar1;\n                            if (uVar3 >> 1 < 0x2000) {\n                                return;\n                            }\n                            if (uVar3 >> 2 <= (piVar1[1] - piVar1[7]) + 800U) {\n                                return;\n                            }\n                            *(*0x20 + -0x20) = 0x44a086;\n                            fcn.00448ec0();\n                            return;\n                        }\n                        *(*0x20 + -0x20) = 0x44a0b5;\n                        fcn.00433c80();\n                    }\n                    *(*0x20 + -0x20) = 0x44a0c6;\n                    fcn.00433c80();\n                }\n                *(*0x20 + -0x20) = 0x44a0d7;\n                fcn.00433c80();\n            }\n            *(*0x20 + -0x20) = 0x44a0e8;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x44a0f3;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 821
    },
    "0044a2a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0044a2a0(uchar param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    ulong *in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    uint64_t *puVar5;\n    ulong unaff_RBX;\n    int64_t iVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t *piVar11;\n    int64_t iVar12;\n    uint64_t uVar13;\n    int64_t unaff_R14;\n    int64_t iVar14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x40 && *0x20 + -0x40 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0xc0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar8 = in_RAX[3];\n            if (iVar8 == 0) {\n                return 0;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x88) = iVar8;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = *in_RAX;\n            *(*0x20 + -0x20) = in_RAX[1];\n            *(*0x20 + -200) = 0x44a309;\n            iVar3 = fcn.0044ce60();\n            iVar8 = *(*0x20 + -0x88);\n            if (iVar3 == iVar8) {\n                iVar2 = -1;\n            }\n            else {\n                *(*0x20 + -0x88) = iVar8 + -1;\n                *(*0x20 + -200) = 0x44a345;\n                iVar2 = fcn.0044dda0(1);\n                iVar8 = *(*0x20 + -0x88);\n            }\n            *(*0x20 + -0x88) = iVar8;\n            if (iVar2 == -1) {\n                iVar2 = 0;\n            }\n            *(*0x20 + -0x94) = iVar2;\n            iVar8 = *(*0x20 + 8);\n            iVar3 = *(iVar8 + 0x38) - *(iVar8 + 0x28);\n            if (iVar3 == 0) {\n                iVar6 = *(*0x20 + -0x20);\n                iVar12 = *(*0x20 + -0x18);\n                iVar9 = 0;\n                iVar3 = 0;\n                goto code_r0x0044a44a;\n            }\n            iVar12 = *(*0x20 + -0x18);\n            if (*(iVar12 + 0x27) < 2) {\n                iVar6 = *(*0x20 + -0x20);\n                piVar11 = NULL;\n            }\n            else {\n                uVar1 = *(iVar12 + *(iVar12 + 0x1c) * 4 + 0x2c);\n                iVar6 = *(*0x20 + -0x20);\n                piVar11 = uVar1 + *(iVar6 + 0x130) & (uVar1 == 0xffffffff) - 1;\n            }\n            *(*0x20 + -0x80) = iVar3;\n            if ((piVar11 != NULL) && (iVar10 = *piVar11,  0 < iVar10)) {\n                iVar9 = piVar11[1];\n                if (iVar9 < 1) {\n                    iVar9 = 0;\n                    iVar3 = 0;\ncode_r0x0044a44a:\n                    if (*(iVar8 + 0x48) == 0) {\n                        iVar10 = 0;\n                        iVar14 = 0;\n                        goto code_r0x0044a530;\n                    }\n                    piVar11 = *(iVar8 + 0x50);\n                    if (piVar11 != NULL) {\n                        iVar2 = *(iVar8 + 0x48) >> 3;\n                        iVar10 = *piVar11;\n                        if (iVar2 < *piVar11) {\n                            iVar10 = iVar2;\n                        }\n                        iVar14 = *(piVar11 + 2);\n                        goto code_r0x0044a530;\n                    }\n                    if (*(iVar12 + 0x27) == '\\0') {\n                        piVar11 = NULL;\n                    }\n                    else {\n                        uVar1 = *(iVar12 + *(iVar12 + 0x1c) * 4 + 0x28);\n                        piVar11 = *(iVar6 + 0x130) + uVar1 & (uVar1 == 0xffffffff) - 1;\n                    }\n                    if ((piVar11 != NULL) && (iVar10 = *piVar11,  0 < iVar10)) {\n                        *(*0x20 + -0x48) = piVar11;\n                        if ((-1 < iVar2) && (iVar2 < iVar10)) {\n                            iVar10 = piVar11[1];\n                            if (iVar10 < 1) {\n                                iVar10 = 0;\n                                iVar14 = 0;\n                            }\n                            else {\n                                iVar14 = piVar11 + iVar2 * (iVar10 + 7 >> 3) + 8;\n                            }\ncode_r0x0044a530:\n                            if (*(iVar8 + 0x50) == 0) {\n                                if (*(iVar12 + 0x27) < 3) {\n                                    puVar5 = NULL;\n                                }\n                                else {\n                                    uVar1 = *(iVar12 + *(iVar12 + 0x1c) * 4 + 0x30);\n                                    puVar5 = uVar1 + *(iVar6 + 0x130) & (uVar1 == 0xffffffff) - 1;\n                                }\n                                if (puVar5 != NULL) {\n                                    *(*0x20 + -0x50) = puVar5;\n                                    *(*0x20 + -0x28) = iVar14;\n                                    *(*0x20 + -0x8c) = iVar10;\n                                    *(*0x20 + -0x30) = iVar3;\n                                    *(*0x20 + -0x90) = iVar9;\n                                    uVar13 = *puVar5;\n                                    *(*0x20 + -0x78) = uVar13;\n                                    if (uVar13 < 0) {\n                                        *(*0x20 + -200) = 0x44a5c5;\n                                        fcn.00447320();\n                                        iVar9 = *(*0x20 + -0x90);\n                                        uVar13 = *(*0x20 + -0x78);\n                                    }\n                                    *(*0x20 + -0x38) = *(*0x20 + -0x50) + 8;\n                                    if ((SUB168(ZEXT816(0x10) * ZEXT816(uVar13) >> 0x40, 0) != 0) ||\n                                       (-*(*0x20 + -0x38) <= uVar13 * 0x10 && uVar13 * 0x10 + *(*0x20 + -0x38) != 0)) {\n                                        *(*0x20 + -200) = 0x44a62a;\n                                        fcn.00447320();\n                                        iVar9 = *(*0x20 + -0x90);\n                                    }\n                                }\n                            }\n                            return iVar9;\n                        }\n                        *(*0x20 + -200) = 0x44a6a6;\n                        uVar4 = fcn.0044d760();\n                        *(*0x20 + -0x28) = uVar4;\n                        *(*0x20 + -0x68) = iVar6;\n                        *(*0x20 + -0x70) = **(*0x20 + -0x48);\n                        *(*0x20 + -200) = 0x44a6c5;\n                        fcn.00435540();\n                        *(*0x20 + -200) = 0x44a6d6;\n                        fcn.00435e40();\n                        *(*0x20 + -200) = 0x44a6e5;\n                        fcn.00435c40(*(*0x20 + -0x94));\n                        *(*0x20 + -200) = 0x44a6f6;\n                        fcn.00435e40();\n                        *(*0x20 + -200) = 0x44a705;\n                        fcn.00435c40();\n                        *(*0x20 + -200) = 0x44a716;\n                        fcn.00435e40();\n                        *(*0x20 + -200) = 0x44a728;\n                        fcn.00435e40();\n                        *(*0x20 + -200) = 0x44a739;\n                        fcn.00435e40();\n                        *(*0x20 + -200) = 0x44a745;\n                        fcn.00435ca0();\n                        *(*0x20 + -200) = 0x44a756;\n                        fcn.00435e40();\n                        *(*0x20 + -200) = 0x44a75b;\n                        fcn.004355c0();\n                        iVar6 = 0x10;\n                        *(*0x20 + -200) = 0x44a76c;\n                        fcn.00433c80();\n                    }\n                    *(*0x20 + -200) = 0x44a774;\n                    uVar4 = fcn.0044d760();\n                    *(*0x20 + -0x28) = uVar4;\n                    *(*0x20 + -0x68) = iVar6;\n                    *(*0x20 + -0x58) = *(*(*0x20 + 8) + 0x40);\n                    *(*0x20 + -0x60) = *(*(*0x20 + 8) + 0x48);\n                    *(*0x20 + -200) = 0x44a7a5;\n                    fcn.00435540();\n                    *(*0x20 + -200) = 0x44a7b6;\n                    fcn.00435e40();\n                    *(*0x20 + -200) = 0x44a7c8;\n                    fcn.00435e40();\n                    *(*0x20 + -200) = 0x44a7d9;\n                    fcn.00435e40();\n                    *(*0x20 + -200) = 0x44a7e5;\n                    fcn.00435ca0();\n                    *(*0x20 + -200) = 0x44a7f6;\n                    fcn.00435e40();\n                    *(*0x20 + -200) = 0x44a805;\n                    fcn.00435ca0();\n                    *(*0x20 + -200) = 0x44a80a;\n                    fcn.004357a0();\n                    *(*0x20 + -200) = 0x44a80f;\n                    fcn.004355c0();\n                    iVar6 = 0x10;\n                    *(*0x20 + -200) = 0x44a825;\n                    fcn.00433c80();\n                }\n                else {\n                    *(*0x20 + -0x40) = piVar11;\n                    if ((-1 < iVar2) && (iVar2 < iVar10)) {\n                        iVar3 = piVar11 + (iVar9 + 7 >> 3) * iVar2 + 8;\n                        goto code_r0x0044a44a;\n                    }\n                }\n                *(*0x20 + -200) = 0x44a82d;\n                uVar4 = fcn.0044d760();\n                *(*0x20 + -0x28) = uVar4;\n                *(*0x20 + -0x68) = iVar6;\n                *(*0x20 + -0x70) = **(*0x20 + -0x40);\n                *(*0x20 + -200) = 0x44a84f;\n                fcn.00435540();\n                *(*0x20 + -200) = 0x44a865;\n                fcn.00435e40();\n                *(*0x20 + -200) = 0x44a871;\n                fcn.00435c40(*(*0x20 + -0x94));\n                *(*0x20 + -200) = 0x44a885;\n                fcn.00435e40();\n                *(*0x20 + -200) = 0x44a88f;\n                fcn.00435c40();\n                *(*0x20 + -200) = 0x44a8a5;\n                fcn.00435e40();\n                *(*0x20 + -200) = 0x44a8b7;\n                fcn.00435e40();\n                *(*0x20 + -200) = 0x44a8c8;\n                fcn.00435e40();\n                *(*0x20 + -200) = 0x44a8d2;\n                fcn.00435ca0();\n                *(*0x20 + -200) = 0x44a8e5;\n                fcn.00435e40();\n                *(*0x20 + -200) = 0x44a8ea;\n                fcn.004355c0();\n                iVar6 = 0x10;\n                *(*0x20 + -200) = 0x44a8fb;\n                fcn.00433c80();\n            }\n            *(*0x20 + -200) = 0x44a905;\n            uVar4 = fcn.0044d760();\n            *(*0x20 + -0x28) = uVar4;\n            *(*0x20 + -0x68) = iVar6;\n            *(*0x20 + -0x58) = *(*(*0x20 + 8) + 0x38);\n            *(*0x20 + -200) = 0x44a928;\n            fcn.00435540();\n            *(*0x20 + -200) = 0x44a939;\n            fcn.00435e40();\n            *(*0x20 + -200) = 0x44a94b;\n            fcn.00435e40();\n            *(*0x20 + -200) = 0x44a95c;\n            fcn.00435e40();\n            param_1 = *(*0x20 + -0x80);\n            *(*0x20 + -200) = 0x44a96e;\n            fcn.00435ca0();\n            *(*0x20 + -200) = 0x44a97f;\n            fcn.00435e40();\n            *(*0x20 + -200) = 0x44a989;\n            fcn.00435ca0();\n            *(*0x20 + -200) = 0x44a98e;\n            fcn.004357a0();\n            *(*0x20 + -200) = 0x44a993;\n            fcn.004355c0();\n            unaff_RBX = 0x10;\n            *(*0x20 + -200) = 0x44a9a5;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        puVar7[0x18] = param_1;\n        *(puVar7 + -8) = 0x44a9b9;\n        fcn.0045bb60();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        param_1 = puVar7[0x18];\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 3533
    },
    "0044ab20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0044ab20(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    iVar5 = *0x7ada48;\n    iVar4 = *0x7ada40;\n    if (*0x801ea0 == 0) {\n        return;\n    }\n    uVar8 = 0;\n    uVar7 = 0;\n    for (iVar6 = 0; iVar6 < iVar5; iVar6 = iVar6 + 1) {\n        iVar1 = *(iVar4 + iVar6 * 8);\n        iVar2 = *(iVar1 + 0x22b8);\n        iVar3 = *(iVar1 + 0x22c0);\n        *(iVar1 + 0x22b8) = in_XMM15_Da;\n        *(iVar1 + 0x22bc) = in_XMM15_Db;\n        *(iVar1 + 0x22c0) = in_XMM15_Dc;\n        *(iVar1 + 0x22c4) = in_XMM15_Dd;\n        uVar7 = uVar7 + iVar2;\n        uVar8 = uVar8 + iVar3;\n    }\n    if (uVar8 != 0) {\n        uVar8 = uVar7 / uVar8 + 0x13a0;\n        if (*0x7953b0 < uVar8) {\n            uVar8 = *0x7953b0;\n        }\n        if (uVar8 < 0x2000) {\n            uVar8 = 0x2000;\n        }\n        uVar7 = 0;\n        while (*0x795288 = 1 << (uVar7 & 0x1f) & -(uVar7 < 0x20),  *0x795288 < uVar8) {\n            uVar7 = uVar7 + 1;\n        }\n        return;\n    }\n    *0x795288 = 0x2000;\n    return;\n}\n",
        "token_count": 512
    },
    "0044abe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0044abe0(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t *unaff_RBX;\n    int64_t *piVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint32_t uVar6;\n    int64_t *piVar7;\n    int64_t *piVar8;\n    int64_t *unaff_RDI;\n    int64_t *piVar9;\n    int64_t *in_R8;\n    int64_t *piVar10;\n    int64_t *in_R9;\n    uint64_t *unaff_R14;\n    bool bVar11;\n    \ncode_r0x0044abe0:\n    puVar5 = *0x20;\n    piVar10 = in_R9;\n    if (unaff_R14[2] <= *0x20 && *0x20 != unaff_R14[2]) {\n        puVar5 = *0x20 + -0x70;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x10) = unaff_RBX;\n        if (arg1 == NULL) {\n            piVar7 = NULL;\n            piVar8 = NULL;\n            piVar9 = NULL;\n            piVar10 = in_R8;\n            goto code_r0x0044ac20;\n        }\n        in_R9 = NULL;\n        unaff_RDI = NULL;\n        piVar7 = NULL;\n        piVar10 = NULL;\n        piVar4 = unaff_RBX;\n        do {\n            if (piVar4[1] != 0) {\n                in_R8 = piVar10 + piVar4[1];\n                if (in_R8 < piVar10) goto code_r0x0044ae25;\n                unaff_RDI = unaff_RDI + 1;\n                piVar7 = in_R9;\n                piVar10 = in_R8;\n            }\n            in_R9 = in_R9 + 1;\n            piVar8 = unaff_RDI;\n            piVar9 = piVar10;\n            if (arg1 <= in_R9) {\ncode_r0x0044ac20:\n                unaff_RDI = piVar9;\n                piVar4 = unaff_RBX;\n                unaff_RBX = piVar8;\n                if (unaff_RBX == NULL) {\n                    return 0;\n                }\n                if (unaff_RBX == 0x1) {\n                    if (in_RAX != 0) {\n                        piVar8 = 0x1;\n                        goto code_r0x0044ac87;\n                    }\n                    if (piVar7 < arg1) {\n                        iVar2 = piVar4[piVar7 * 2 + 1];\n                        *(*0x20 + -0x18) = piVar4[piVar7 * 2];\n                        *(*0x20 + -0x10) = iVar2;\n                        uVar1 = *(*0x20 + -0x18);\n                        if (*unaff_R14 < uVar1 || *unaff_R14 == uVar1) {\n                            uVar6 = uVar1 & 0xffffff00 | uVar1 < unaff_R14[1];\n                        }\n                        else {\n                            uVar6 = 0;\n                        }\n                        piVar8 = uVar6 ^ 1;\n                        goto code_r0x0044ac87;\n                    }\n                }\n                else {\n                    piVar8 = NULL;\ncode_r0x0044ac87:\n                    if (piVar8 != '\\0') {\n                        if (arg1 <= piVar7) {\n                            *(*0x20 + -0x78) = 0x44acfb;\n                            iVar2 = fcn.0045e240(arg1);\n                            return iVar2;\n                        }\n                        return piVar4[piVar7 * 2];\n                    }\n                    *(*0x20 + 0x18) = arg1;\n                    *(*0x20 + 0x10) = piVar4;\n                    *(*0x20 + -0x78) = 0x44aca5;\n                    iVar2 = fcn.0044b320();\n                    unaff_RBX = *(*0x20 + 0x18);\n                    if (unaff_RBX == NULL) {\n                        return iVar2;\n                    }\n                    *(*0x20 + -0x30) = iVar2;\n                    *(*0x20 + -0x50) = unaff_RDI;\n                    piVar10 = *(*0x20 + 0x10);\n                    in_R9 = NULL;\n                    piVar4 = unaff_RDI;\n                    while( true ) {\n                        piVar7 = piVar10[1];\n                        piVar9 = unaff_RDI;\n                        if (piVar7 < unaff_RDI) {\n                            piVar9 = piVar7;\n                        }\n                        if (arg1 == *piVar10) {\n                            bVar11 = unaff_RDI < piVar7;\n                            piVar3 = arg1;\n                            arg1 = unaff_RDI;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = arg1;\n                            *(*0x20 + -0x38) = in_R9;\n                            *(*0x20 + -0x20) = piVar10;\n                            *(*0x20 + -0x40) = unaff_RDI;\n                            *(*0x20 + -0x48) = piVar8;\n                            *(*0x20 + -0x58) = piVar7;\n                            *(*0x20 + -0x78) = 0x44ad5c;\n                            fcn.0045ebc0(piVar9);\n                            arg1 = *(*0x20 + -0x40);\n                            piVar7 = *(*0x20 + -0x58);\n                            bVar11 = arg1 < piVar7;\n                            unaff_RBX = *(*0x20 + 0x18);\n                            piVar4 = *(*0x20 + -0x50);\n                            piVar8 = *(*0x20 + -0x48);\n                            piVar10 = *(*0x20 + -0x20);\n                            in_R9 = *(*0x20 + -0x38);\n                            iVar2 = *(*0x20 + -0x30);\n                            piVar3 = *(*0x20 + -0x28);\n                        }\n                        if (bVar11) break;\n                        in_R9 = in_R9 + 1;\n                        piVar8 = piVar8 - piVar7;\n                        unaff_RDI = arg1 - piVar7;\n                        arg1 = piVar3 + (piVar7 & -piVar8 >> 0x3f);\n                        if (unaff_RBX <= in_R9) {\n                            return iVar2;\n                        }\n                        piVar10 = piVar10 + 2;\n                    }\n                    *(*0x20 + -0x78) = 0x44add0;\n                    fcn.0045e300(arg1);\n                    piVar7 = piVar8;\n                    unaff_RDI = piVar9;\n                }\n                *(*0x20 + -0x78) = 0x44add8;\n                in_RAX = fcn.0045e240(arg1);\n            }\n            piVar4 = piVar4 + 2;\n        } while( true );\n    }\n    goto code_r0x0044ae37;\ncode_r0x0044ae25:\n    unaff_RBX = 0x1d;\n    *(*0x20 + -0x78) = 0x44ae36;\n    in_RAX = fcn.00433c80();\ncode_r0x0044ae37:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + 0x10) = unaff_RBX;\n    *(puVar5 + 0x18) = arg1;\n    *(puVar5 + 0x20) = unaff_RDI;\n    *(puVar5 + -8) = 0x44ae50;\n    fcn.0045bb60();\n    in_RAX = *(puVar5 + 8);\n    unaff_RBX = *(puVar5 + 0x10);\n    arg1 = *(puVar5 + 0x18);\n    unaff_RDI = *(puVar5 + 0x20);\n    *0x20 = puVar5;\n    in_R9 = piVar10;\n    goto code_r0x0044abe0;\n}\n",
        "token_count": 1885
    },
    "0044b220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0044b220(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    uint8_t *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (arg1 != 0) {\n        if (arg1 != 1) {\n            if ((in_RAX == 0) || (0x20 < arg1)) {\n                in_RAX = fcn.0040bba0(0);\n            }\n            fcn.0045ebc0(arg1);\n            return in_RAX;\n        }\n        return *unaff_RBX * 8 + 0x7a0de0;\n    }\n    return 0;\n}\n",
        "token_count": 199
    },
    "0044be20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint64_t fcn.0044be20(void)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint64_t uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t unaff_RBX;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX == 0) {\n                return 0;\n            }\n            cVar1 = *((unaff_RBX - 1) + in_RAX);\n            if (cVar1 - 0x30U < 10) {\n                *(*0x20 + -0x28) = 0x44bf70;\n                uVar4 = fcn.0044bd40();\n                if ((unaff_RBX != '\\0') && (-1 < uVar4)) {\n                    return uVar4;\n                }\n                return 0;\n            }\n            if ((cVar1 != 'B') || (unaff_RBX < 2)) {\n                return 0;\n            }\n            if (unaff_RBX - 2 < unaff_RBX) {\n                cVar1 = *((unaff_RBX - 2) + in_RAX);\n                if (cVar1 - 0x30U < 10) {\n                    *(*0x20 + -0x28) = 0x44bf37;\n                    uVar4 = fcn.0044bd40();\n                    if ((unaff_RBX != '\\x01') && (-1 < uVar4)) {\n                        return uVar4;\n                    }\n                    return 0;\n                }\n                if (cVar1 != 'i') {\n                    return 0;\n                }\n                if (unaff_RBX < 4) {\n                    return 0;\n                }\n                uVar4 = unaff_RBX - 3;\n                if (uVar4 < unaff_RBX) {\n                    uVar2 = *((unaff_RBX - 3) + in_RAX);\n                    if (uVar2 < 0x4c) {\n                        if (uVar2 == 0x47) {\n                            iVar6 = 3;\n                        }\n                        else {\n                            if (uVar2 != 0x4b) {\n                                return 0;\n                            }\n                            iVar6 = 1;\n                        }\n                    }\n                    else if (uVar2 == 0x4d) {\n                        iVar6 = 2;\n                    }\n                    else {\n                        if (uVar2 != 0x54) {\n                            return 0;\n                        }\n                        iVar6 = 4;\n                    }\n                    iVar9 = 1;\n                    for (iVar7 = 0; iVar7 < iVar6; iVar7 = iVar7 + 1) {\n                        iVar9 = iVar9 << 10;\n                    }\n                    *(*0x20 + -0x10) = iVar9;\n                    *(*0x20 + -0x28) = 0x44bfb8;\n                    uVar5 = fcn.0044bd40();\n                    if ((uVar4 == '\\0') || (uVar5 < 0)) {\n                        return 0;\n                    }\n                    uVar3 = *(*0x20 + -0x10);\n                    if (uVar3 != 0) {\n                        if (SUB168((ZEXT816(0) << 0x40 | ZEXT816(0xffffffffffffffff)) / ZEXT816(uVar3), 0) < uVar5) {\n                            return 0;\n                        }\n                        if (uVar5 * uVar3 < 0x8000000000000000) {\n                            return uVar5 * uVar3;\n                        }\n                        return 0;\n                    }\n                    *(*0x20 + -0x28) = 0x44c03a;\n                    fcn.00432100();\n                    unaff_RBX = uVar4;\n                }\n                *(*0x20 + -0x28) = 0x44c045;\n                fcn.0045e240(unaff_RBX);\n            }\n            *(*0x20 + -0x28) = 0x44c050;\n            in_RAX = fcn.0045e240(unaff_RBX);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x44c065;\n        fcn.0045bb60();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1153
    },
    "0044c3a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0044c3a0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t *piVar1;\n    uint uVar2;\n    int64_t **ppiVar3;\n    int64_t *piVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    int64_t *piVar7;\n    int64_t *piVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x70) = 0x44c3c5;\n            ppiVar3 = fcn.0040c560();\n            *(*0x20 + -0x18) = ppiVar3;\n            for (iVar6 = 0x79ae80; iVar6 != 0; iVar6 = *(iVar6 + 0x220)) {\n                if (*(iVar6 + 0x218) == '\\0') {\n                    *(*0x20 + -0x10) = iVar6;\n                    piVar7 = ppiVar3[1];\n                    piVar8 = piVar7 + 1;\n                    piVar1 = *ppiVar3;\n                    piVar4 = piVar1;\n                    if (ppiVar3[2] < piVar8) {\n                        *(*0x20 + -0x70) = 0x44c41d;\n                        piVar4 = fcn.00447360(piVar7);\n                        ppiVar3 = *(*0x20 + -0x18);\n                        ppiVar3[2] = piVar7;\n                        if (*0x801c20 == 0) {\n                            *ppiVar3 = piVar4;\n                        }\n                        else {\n                            *(*0x20 + -0x70) = 0x44c439;\n                            piVar4 = fcn.0045dda0(piVar7, piVar8, param_3, param_4);\n                        }\n                        iVar6 = *(*0x20 + -0x10);\n                        piVar7 = piVar1;\n                    }\n                    piVar8 = piVar7 + 1;\n                    ppiVar3[1] = piVar8;\n                    if (*0x801c20 == 0) {\n                        piVar4[piVar7] = iVar6;\n                    }\n                    else {\n                        *(*0x20 + -0x70) = 0x44c467;\n                        ppiVar3 = fcn.0045dea0(iVar6, piVar8, param_3, param_4);\n                    }\n                    if ((*(iVar6 + 0x1f0) == 0) && (*(iVar6 + 0x1f8) == 0)) {\n                        iVar9 = *(iVar6 + 0xd8) - *(iVar6 + 0xd0);\n                        *(*0x20 + -0x28) = iVar9;\n                        *(*0x20 + -0x70) = 0x44c4a5;\n                        uVar2 = fcn.00412860();\n                        iVar6 = *(*0x20 + -0x10);\n                        *(iVar6 + 0x1f0) = uVar2;\n                        if (*0x801c20 == 0) {\n                            *(iVar6 + 0x1f8) = iVar9;\n                        }\n                        else {\n                            *(*0x20 + -0x70) = 0x44c4d4;\n                            iVar6 = fcn.0045dee0(iVar6 + 0x1f8, piVar8, param_3, param_4);\n                        }\n                        iVar10 = *(iVar6 + 0xe8) - *(iVar6 + 0xe0);\n                        *(*0x20 + -0x20) = iVar10;\n                        *(*0x20 + -0x70) = 0x44c4f6;\n                        uVar2 = fcn.00412860();\n                        iVar6 = *(*0x20 + -0x10);\n                        *(iVar6 + 0x200) = uVar2;\n                        iVar9 = *(*0x20 + -0x20) + *(*0x20 + -0x28);\n                        if (*0x801c20 == 0) {\n                            *(iVar6 + 0x208) = iVar10;\n                        }\n                        else {\n                            *(*0x20 + -0x70) = 0x44c534;\n                            iVar6 = fcn.0045dee0(iVar9, iVar6 + 0x208, param_3, param_4);\n                        }\n                        LOCK();\n                        *0x8023b0 = *0x8023b0 + iVar9;\n                        ppiVar3 = *(*0x20 + -0x18);\n                    }\n                }\n            }\n            piVar8 = ppiVar3[1];\n            piVar7 = NULL;\n            while( true ) {\n                if (piVar8 <= piVar7) goto code_r0x0044c5bc;\n                iVar6 = (*ppiVar3)[piVar7];\n                if (*(iVar6 + 0x1e8) != '\\0') break;\n                piVar7 = piVar7 + 1;\n            }\n            if (*0x801c20 == 0) {\n                **ppiVar3 = iVar6;\n            }\n            else {\n                *(*0x20 + -0x70) = 0x44c587;\n                ppiVar3 = fcn.0045df00(piVar7, piVar8, param_3, param_4);\n            }\n            piVar8 = *ppiVar3;\n            piVar1 = ppiVar3[1];\n            if (piVar7 < piVar1) {\n                if (*0x801c20 == 0) {\n                    piVar8[piVar7] = 0x79ae80;\n                }\n                else {\n                    *(*0x20 + -0x70) = 0x44c5bb;\n                    ppiVar3 = fcn.0045dea0(0x79ae80, piVar8, param_3, param_4);\n                }\ncode_r0x0044c5bc:\n                if (*0x801c20 != '\\0') {\n                    *(*0x20 + -0x70) = 0x44c5d4;\n                    fcn.00403500();\n                    ppiVar3 = *(*0x20 + -0x18);\n                }\n                uVar5 = *0x7ad098;\n                *0x7ad098 = ppiVar3;\n                return uVar5;\n            }\n            *(*0x20 + -0x70) = 0x44c5f8;\n            fcn.0045e240(piVar1);\n        }\n        *(puVar11 + -8) = 0x44c5fe;\n        fcn.0045bb60();\n        *0x20 = puVar11;\n    } while( true );\n}\n",
        "token_count": 1631
    },
    "0044c620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044c620(void)\n\n{\n    ulong *puVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    char cVar6;\n    uint32_t **in_RAX;\n    uint32_t **ppuVar7;\n    int64_t iVar8;\n    ulong *puVar9;\n    ulong uVar10;\n    int64_t iVar11;\n    ulong *arg1;\n    ulong *puVar12;\n    uchar *puVar13;\n    uchar *unaff_RBP;\n    ulong *puVar14;\n    ulong *arg1_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar13 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x78 && *0x20 + -0x78 != *(unaff_R14 + 0x10)) {\n            puVar13 = *0x20 + -0xf8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            puVar9 = *in_RAX;\n            uVar2 = *puVar9;\n            *(*0x20 + -0xdc) = uVar2;\n            if (((((uVar2 == 0xfffffff0) && (*(puVar9 + 4) == '\\0')) && (*(puVar9 + 5) == '\\0')) &&\n                ((*(puVar9 + 6) == '\\x01' && (*(puVar9 + 7) == '\\b')))) &&\n               (puVar14 = puVar9[3],  in_RAX[0x16] == puVar14)) {\n                *(*0x20 + 8) = in_RAX;\n                arg1 = in_RAX[0x11];\n                puVar9 = in_RAX[0x10];\n                arg1_00 = arg1 + -1;\n                puVar1 = NULL;\n                do {\n                    puVar12 = puVar1;\n                    if (arg1_00 <= puVar12) {\n                        if (arg1 == NULL) goto code_r0x0044cb75;\n                        *(*0x20 + -0xd8) = arg1_00;\n                        *(*0x20 + -0x60) = arg1;\n                        puVar12 = *puVar9;\n                        *(*0x20 + -0x100) = 0x44c8c6;\n                        uVar10 = fcn.0044ce60();\n                        puVar9 = *(*(*0x20 + 8) + 0x88);\n                        arg1_00 = *(*(*0x20 + 8) + 0x80);\n                        puVar14 = *(*0x20 + -0xd8);\n                        if (puVar9 <= puVar14) goto code_r0x0044cb6a;\n                        *(*0x20 + -0xd0) = uVar10;\n                        *(*0x20 + -0x100) = 0x44c905;\n                        iVar8 = fcn.0044ce60();\n                        *(*0x20 + -200) = iVar8;\n                        iVar11 = *(*0x20 + 8);\n                        puVar9 = *(iVar11 + 0xa0);\n                        *(*0x20 + -0x80) = puVar9;\n                        arg1_00 = *(*0x20 + -0xd0);\n                        if ((arg1_00 != puVar9) || (*(iVar11 + 0xa8) != iVar8)) goto code_r0x0044cac5;\n                        iVar8 = *(iVar11 + 0x1d8);\n                        arg1_00 = *(iVar11 + 0x1d0);\n                        if (iVar8 == 0) {\n                            return;\n                        }\n                        *(*0x20 + -0x60) = iVar8;\n                        iVar11 = 0;\n                        goto code_r0x0044c98a;\n                    }\n                    puVar14 = *(puVar9 + puVar12);\n                    puVar1 = puVar12 + 1;\n                    if (arg1 <= puVar1) goto code_r0x0044ccb5;\n                } while (*(puVar9 + puVar12) <= *(puVar9 + puVar12 + 1));\n                arg1 = in_RAX[0xe];\n                puVar3 = in_RAX[0xd];\n                puVar14 = *(puVar9 + puVar12 * 8 + 4);\n                if (puVar14 < arg1) {\n                    puVar9 = *(puVar9 + puVar12 * 8 + 0xc);\n                    if (puVar9 < arg1) {\n                        *(*0x20 + -0xb8) = puVar12;\n                        *(*0x20 + -0x60) = puVar1;\n                        if (puVar1 < arg1_00) {\n                            *(*0x20 + -0x38) = puVar14 + puVar3;\n                            *(*0x20 + -0x100) = 0x44c746;\n                            uVar10 = fcn.0044d760(puVar9 + puVar3);\n                            ppuVar7 = *(*0x20 + 8);\n                        }\n                        else {\n                            uVar10 = 0x4aed71;\n                            ppuVar7 = in_RAX;\n                            in_RAX = 0x3;\n                        }\n                        *(*0x20 + -0x58) = uVar10;\n                        *(*0x20 + -0xb0) = in_RAX;\n                        *(*0x20 + -0x100) = 0x44c774;\n                        uVar10 = fcn.0044d760();\n                        iVar11 = *(*0x20 + 8);\n                        arg1 = *(iVar11 + 0x88);\n                        iVar8 = *(iVar11 + 0x80);\n                        puVar9 = *(*0x20 + -0xb8);\n                        if (puVar9 < arg1) {\n                            if (*(*0x20 + -0x60) < arg1) {\n                                *(*0x20 + -0x68) = *(iVar8 + puVar9 * 8);\n                                *(*0x20 + -0x60) = ppuVar7;\n                                *(*0x20 + -0x40) = uVar10;\n                                *(*0x20 + -0x70) = *(iVar8 + 8 + puVar9 * 8);\n                                *(*0x20 + -0x48) = *(iVar11 + 0x198);\n                                *(*0x20 + -0x78) = *(iVar11 + 0x1a0);\n                                *(*0x20 + -0x100) = 0x44c7f4;\n                                fcn.00435540();\n                                *(*0x20 + -0x100) = 0x44c805;\n                                fcn.00435e40();\n                                *(*0x20 + -0x100) = 0x44c812;\n                                fcn.00435ca0();\n                                *(*0x20 + -0x100) = 0x44c817;\n                                fcn.00435760();\n                                *(*0x20 + -0x100) = 0x44c82c;\n                                fcn.00435e40();\n                                *(*0x20 + -0x100) = 0x44c83d;\n                                fcn.00435e40();\n                                *(*0x20 + -0x100) = 0x44c84a;\n                                fcn.00435ca0();\n                                *(*0x20 + -0x100) = 0x44c84f;\n                                fcn.00435760();\n                                *(*0x20 + -0x100) = 0x44c865;\n                                fcn.00435e40();\n                                *(*0x20 + -0x100) = 0x44c876;\n                                fcn.00435e40();\n                                *(*0x20 + -0x100) = 0x44c88b;\n                                fcn.00435e40();\n                                *(*0x20 + -0x100) = 0x44c890;\n                                fcn.004357a0();\n                                *(*0x20 + -0x100) = 0x44c895;\n                                fcn.004355c0();\n                                iVar11 = *(*0x20 + -0xb8);\n                                puVar12 = *(*0x20 + 8);\n                                arg1 = NULL;\n                                while (arg1 <= iVar11) {\n                                    arg1_00 = puVar12[0xe];\n                                    puVar9 = puVar12[0x11];\n                                    if (puVar9 <= arg1) {\ncode_r0x0044cc70:\n                                        *(*0x20 + -0x100) = 0x44cc7b;\n                                        fcn.0045e240(puVar9);\n                                        break;\n                                    }\n                                    puVar9 = *(puVar12[0x10] + 4 + arg1 * 8);\n                                    if (arg1_00 <= puVar9) {\ncode_r0x0044cc65:\n                                        *(*0x20 + -0x100) = 0x44cc70;\n                                        fcn.0045e240(arg1_00);\n                                        goto code_r0x0044cc70;\n                                    }\n                                    *(*0x20 + -0xc0) = arg1;\n                                    *(*0x20 + -0x100) = 0x44cc36;\n                                    uVar10 = fcn.0044d760();\n                                    arg1 = *(*(*0x20 + 8) + 0x88);\n                                    arg1_00 = *(*(*0x20 + 8) + 0x80);\n                                    puVar14 = *(*0x20 + -0xc0);\n                                    if (arg1 <= puVar14) {\n                                        *(*0x20 + -0x100) = 0x44cc65;\n                                        fcn.0045e240(arg1);\n                                        goto code_r0x0044cc65;\n                                    }\ncode_r0x0044cb7f:\n                                    *(*0x20 + -0x60) = puVar12;\n                                    *(*0x20 + -0x40) = uVar10;\n                                    *(*0x20 + -0x68) = *(arg1_00 + puVar14);\n                                    *(*0x20 + -0x100) = 0x44cb9f;\n                                    fcn.00435540();\n                                    *(*0x20 + -0x100) = 0x44cbb0;\n                                    fcn.00435e40();\n                                    *(*0x20 + -0x100) = 0x44cbbd;\n                                    fcn.00435ca0();\n                                    *(*0x20 + -0x100) = 0x44cbc5;\n                                    fcn.00435760();\n                                    *(*0x20 + -0x100) = 0x44cbda;\n                                    fcn.00435e40();\n                                    *(*0x20 + -0x100) = 0x44cbdf;\n                                    fcn.004357a0();\n                                    *(*0x20 + -0x100) = 0x44cbe5;\n                                    fcn.004355c0();\n                                    iVar11 = *(*0x20 + -0xb8);\n                                    puVar12 = *(*0x20 + 8);\n                                    arg1 = *(*0x20 + -0xc0) + 1;\n                                }\n                                *(*0x20 + -0x100) = 0x44cc8c;\n                                fcn.00433c80();\n                            }\n                            *(*0x20 + -0x100) = 0x44cc97;\n                            fcn.0045e240(arg1);\n                        }\n                        *(*0x20 + -0x100) = 0x44cca5;\n                        puVar9 = arg1;\n                        fcn.0045e240(arg1);\n                    }\n                    *(*0x20 + -0x100) = 0x44ccad;\n                    fcn.0045e240(arg1);\n                }\n                *(*0x20 + -0x100) = 0x44ccb5;\n                fcn.0045e240(arg1);\ncode_r0x0044ccb5:\n                *(*0x20 + -0x100) = 0x44ccbd;\n                in_RAX = fcn.0045e240(arg1);\n            }\n            *(*0x20 + -0x90) = *(puVar9 + 4);\n            *(*0x20 + -0x98) = *(puVar9 + 5);\n            *(*0x20 + -0xa0) = *(puVar9 + 6);\n            *(*0x20 + -0xa8) = *(puVar9 + 7);\n            *(*0x20 + -0x80) = puVar9[3];\n            *(*0x20 + -0x88) = in_RAX[0x16];\n            *(*0x20 + -0x40) = in_RAX[0x33];\n            *(*0x20 + -0x60) = in_RAX[0x34];\n            *(*0x20 + -0x100) = 0x44cd19;\n            fcn.00435540();\n            *(*0x20 + -0x100) = 0x44cd2a;\n            fcn.00435e40();\n            *(*0x20 + -0x100) = 0x44cd33;\n            fcn.00435ca0();\n            *(*0x20 + -0x100) = 0x44cd45;\n            fcn.00435e40();\n            *(*0x20 + -0x100) = 0x44cd4f;\n            fcn.00435b40();\n            *(*0x20 + -0x100) = 0x44cd65;\n            fcn.00435e40();\n            *(*0x20 + -0x100) = 0x44cd6f;\n            fcn.00435b40();\n            *(*0x20 + -0x100) = 0x44cd85;\n            fcn.00435e40();\n            *(*0x20 + -0x100) = 0x44cd8f;\n            fcn.00435b40();\n            *(*0x20 + -0x100) = 0x44cda5;\n            fcn.00435e40();\n            *(*0x20 + -0x100) = 0x44cdaf;\n            fcn.00435b40();\n            *(*0x20 + -0x100) = 0x44cdc5;\n            fcn.00435e40();\n            *(*0x20 + -0x100) = 0x44cdcf;\n            fcn.00435ca0();\n            *(*0x20 + -0x100) = 0x44cde5;\n            fcn.00435e40();\n            *(*0x20 + -0x100) = 0x44cdef;\n            fcn.00435ca0();\n            *(*0x20 + -0x100) = 0x44ce05;\n            fcn.00435e40();\n            *(*0x20 + -0x100) = 0x44ce1a;\n            fcn.00435e40();\n            *(*0x20 + -0x100) = 0x44ce1f;\n            fcn.004357a0();\n            *(*0x20 + -0x100) = 0x44ce25;\n            fcn.004355c0();\n            *(*0x20 + -0x100) = 0x44ce36;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar13 + 8) = in_RAX;\n        *(puVar13 + -8) = 0x44ce45;\n        fcn.0045bb60();\n        in_RAX = *(puVar13 + 8);\n        *0x20 = puVar13;\n    } while( true );\ncode_r0x0044c98a:\n    *(*0x20 + -0x30) = *arg1_00;\n    uVar2 = *(arg1_00 + 0xc);\n    uVar4 = *(arg1_00 + 2);\n    uVar5 = *(arg1_00 + 0x14);\n    *(*0x20 + -0x28) = *(arg1_00 + 1);\n    *(*0x20 + -0x24) = uVar2;\n    *(*0x20 + -0x20) = uVar4;\n    *(*0x20 + -0x1c) = uVar5;\n    uVar2 = *(arg1_00 + 0x1c);\n    uVar4 = *(arg1_00 + 4);\n    uVar5 = *(arg1_00 + 0x24);\n    *(*0x20 + -0x18) = *(arg1_00 + 3);\n    *(*0x20 + -0x14) = uVar2;\n    *(*0x20 + -0x10) = uVar4;\n    *(*0x20 + -0xc) = uVar5;\n    puVar14 = *(*0x20 + -0x10);\n    if (puVar14[1] != *(*0x20 + -0x18)) {\ncode_r0x0044ca0e:\n        iVar11 = *(*(*0x20 + 8) + 0x1c0);\n        *(*0x20 + -0x40) = iVar11;\n        *(*0x20 + -0x60) = *(*(*0x20 + 8) + 0x1c8);\n        puVar9 = *(*0x20 + -0x30);\n        *(*0x20 + -0x48) = puVar9;\n        *(*0x20 + -0x78) = *(*0x20 + -0x28);\n        *(*0x20 + -0x100) = 0x44ca59;\n        fcn.00435540();\n        *(*0x20 + -0x100) = 0x44ca6a;\n        fcn.00435e40();\n        *(*0x20 + -0x100) = 0x44ca7f;\n        fcn.00435e40();\n        *(*0x20 + -0x100) = 0x44ca90;\n        fcn.00435e40();\n        *(*0x20 + -0x100) = 0x44caa5;\n        fcn.00435e40();\n        *(*0x20 + -0x100) = 0x44caaa;\n        fcn.004357a0();\n        *(*0x20 + -0x100) = 0x44caaf;\n        fcn.004355c0();\n        *(*0x20 + -0x100) = 0x44cac5;\n        fcn.00433c80();\ncode_r0x0044cac5:\n        *(*0x20 + -0x88) = *(iVar11 + 0xa8);\n        *(*0x20 + -0x100) = 0x44cad6;\n        fcn.00435540();\n        *(*0x20 + -0x100) = 0x44cae7;\n        fcn.00435e40();\n        *(*0x20 + -0x100) = 0x44caf1;\n        fcn.00435ca0();\n        *(*0x20 + -0x100) = 0x44cb05;\n        fcn.00435e40();\n        *(*0x20 + -0x100) = 0x44cb0f;\n        fcn.00435ca0();\n        *(*0x20 + -0x100) = 0x44cb25;\n        fcn.00435e40();\n        *(*0x20 + -0x100) = 0x44cb2f;\n        fcn.00435ca0();\n        *(*0x20 + -0x100) = 0x44cb45;\n        fcn.00435e40();\n        *(*0x20 + -0x100) = 0x44cb4f;\n        fcn.00435ca0();\n        *(*0x20 + -0x100) = 0x44cb54;\n        fcn.004357a0();\n        *(*0x20 + -0x100) = 0x44cb59;\n        fcn.004355c0();\n        puVar12 = 0x16;\n        *(*0x20 + -0x100) = 0x44cb6a;\n        fcn.00433c80();\ncode_r0x0044cb6a:\n        *(*0x20 + -0x100) = 0x44cb75;\n        fcn.0045e240(puVar9);\ncode_r0x0044cb75:\n        *(*0x20 + -0x100) = 0x44cb7f;\n        uVar10 = fcn.0045e240(0);\n        goto code_r0x0044cb7f;\n    }\n    *(*0x20 + -0x78) = iVar11;\n    *(*0x20 + -0x50) = arg1_00;\n    *(*0x20 + -0x100) = 0x44c9e9;\n    cVar6 = fcn.00402a00(*(*0x20 + -0x18), iVar8);\n    if (cVar6 == '\\0') goto code_r0x0044ca0e;\n    iVar11 = *(*0x20 + -0x78) + 1;\n    if (*(*0x20 + -0x60) <= iVar11) {\n        return;\n    }\n    arg1_00 = *(*0x20 + -0x50) + 0x28;\n    iVar8 = *(*0x20 + -0x60);\n    goto code_r0x0044c98a;\n}\n",
        "token_count": 4849
    },
    "0044ce60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0044ce60(void)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uint64_t *puVar5;\n    int64_t iVar6;\n    \n    uVar4 = unaff_RBX & 0xffffffff;\n    uVar3 = *(in_RAX + 0xb0) + uVar4;\n    iVar1 = *(in_RAX + 0x140);\n    puVar5 = *(in_RAX + 0x138);\n    if (1 < iVar1) {\n        iVar6 = 0;\n        while( true ) {\n            if (((*puVar5 <= uVar4) && (uVar4 < puVar5[1])) || ((iVar6 == iVar1 + -1 && (puVar5[1] == uVar4)))) break;\n            iVar6 = iVar6 + 1;\n            if (iVar1 <= iVar6) goto code_r0x0044cedb;\n            puVar5 = puVar5 + 3;\n        }\n        uVar3 = (puVar5[2] + uVar4) - *puVar5;\ncode_r0x0044cedb:\n        if (*(in_RAX + 0xb8) < uVar3) {\n            fcn.00435540();\n            fcn.00435e40();\n            fcn.00435ca0();\n            fcn.00435e40();\n            fcn.00435ca0();\n            fcn.00435e40();\n            fcn.00435ca0();\n            fcn.004357a0();\n            fcn.004355c0();\n            fcn.00433c80();\n            pcVar2 = swi(3);\n            uVar3 = (*pcVar2)();\n            return uVar3;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 431
    },
    "0044cfe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0044cfe0(void)\n\n{\n    uint32_t uVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t *arg1;\n    int64_t *piVar6;\n    int64_t *in_R9;\n    \n    for (iVar4 = 0x79ae80; iVar4 != 0; iVar4 = *(iVar4 + 0x220)) {\n        if ((*(iVar4 + 0xa0) < in_RAX || *(iVar4 + 0xa0) == in_RAX) &&\n           (in_RAX <= *(iVar4 + 0xa8) && *(iVar4 + 0xa8) != in_RAX)) goto code_r0x0044d020;\n    }\n    iVar4 = 0;\ncode_r0x0044d020:\n    if (iVar4 == 0) {\n        return 0;\n    }\n    arg1 = *(iVar4 + 0xb0);\n    iVar2 = in_RAX - arg1;\n    uVar1 = iVar2;\n    uVar5 = *(iVar4 + 0x140);\n    piVar6 = *(iVar4 + 0x138);\n    if (uVar5 < 2) goto code_r0x0044d05c;\n    in_R9 = NULL;\n    do {\n        uVar1 = iVar2;\n        piVar3 = piVar6[2];\n        if (in_RAX < piVar3) {\n            return 0;\n        }\n        if (in_RAX < (piVar6[1] - *piVar6) + piVar3) {\n            uVar1 = *piVar6 + (in_RAX - piVar3);\n            in_R9 = piVar3;\ncode_r0x0044d05c:\n            uVar5 = arg1 + (uVar1 - *(iVar4 + 0xa0));\n            arg1 = (uVar5 >> 0xc) * 0x14 + *(iVar4 + 0x98);\n            in_RAX = (uVar5 & 0xfff) >> 8;\n            uVar5 = *arg1;\n            if (in_RAX < 0x10) {\n                piVar6 = *(arg1 + 4 + in_RAX) + *arg1;\n                do {\n                    arg1 = piVar6;\n                    in_RAX = *(iVar4 + 0x88);\n                    uVar5 = *(iVar4 + 0x80);\n                    piVar6 = arg1 + 1;\n                    if (in_RAX <= piVar6) goto code_r0x0044d0f8;\n                    in_R9 = uVar5 + piVar6 * 8;\n                } while (*in_R9 < uVar1 || *in_R9 == uVar1);\n                if (arg1 < in_RAX) {\n                    piVar3 = *(uVar5 + 4 + arg1 * 8);\n                    arg1 = *(iVar4 + 0x70);\n                    in_RAX = *(iVar4 + 0x68);\n                    if (piVar3 < arg1) {\n                        return piVar3 + in_RAX;\n                    }\n                    fcn.0045e240(arg1);\n                }\n                fcn.0045e240(in_RAX);\ncode_r0x0044d0f8:\n                fcn.0045e240(in_RAX);\n            }\n            iVar4 = 0x10;\n            iVar2 = fcn.0045e260(0x10);\n        }\n        else {\n            in_R9 = in_R9 + 1;\n            if (uVar5 <= in_R9) goto code_r0x0044d05c;\n        }\n        piVar6 = piVar6 + 3;\n    } while( true );\n}\n",
        "token_count": 858
    },
    "0044d160": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0044d42c)\n// WARNING: Removing unreachable block (ram,0x0044d439)\n// WARNING: Removing unreachable block (ram,0x0044d5b0)\n// WARNING: Removing unreachable block (ram,0x0044d449)\n// WARNING: Removing unreachable block (ram,0x0044d54f)\n// WARNING: Removing unreachable block (ram,0x0044d641)\n// WARNING: Removing unreachable block (ram,0x0044d69b)\n// WARNING: Removing unreachable block (ram,0x0044d5c7)\n// WARNING: Removing unreachable block (ram,0x0044d6ac)\n\nuint fcn.0044d160(uint64_t arg1)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uchar auVar3 [16];\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int32_t iVar5;\n    uint64_t unaff_RBX;\n    int64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t in_R8;\n    uint64_t uVar8;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    int32_t iStackX24;\n    uint64_t uStackX32;\n    int64_t in_stack_00000028;\n    uint uStack140;\n    uint64_t uStack128;\n    uint64_t uStack64;\n    int64_t iStack56;\n    uint64_t uStack32;\n    int64_t iStack24;\n    int64_t iStack16;\n    \n    while (iVar5 = arg1,  &uStack64 < *(unaff_R14 + 0x10) || &uStack64 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n        arg1 = arg1 & 0xffffffff;\n        in_R8 = in_R8 & 0xff;\n        iStackX24 = iVar5;\n        uStackX32 = unaff_RDI;\n        in_stack_00000028 = unaff_RSI;\n    }\n    if (iVar5 == 0) {\n        return 0xffffffff;\n    }\n    if (unaff_RSI == 0) goto code_r0x0044d1c9;\n    uVar6 = unaff_RDI >> 3 & 1;\n    uVar8 = 0;\n    do {\n        if (uVar8 < 8) {\n            iVar7 = uVar6 * 0x80 + unaff_RSI;\n            iVar9 = uVar8 * 0x10;\n            if ((*(iVar7 + 8 + iVar9) == arg1) && (*(iVar7 + iVar9) == unaff_RDI)) {\n                return *(iVar7 + 0xc + iVar9);\n            }\n        }\n        else {\ncode_r0x0044d1c9:\n            if (in_RAX == 0) {\n                if ((in_R8 == '\\0') || (*0x801a0c != 0)) {\n                    return 0xffffffff;\n                }\n                fcn.0044cf80();\n                fcn.00435540();\n                fcn.00435e40();\n                fcn.00435ca0();\n                fcn.004357a0();\n                fcn.004355c0();\n                iVar7 = fcn.00433c80();\ncode_r0x0044d2f6:\n                do {\n                    iStack56 = iVar7;\n                    fcn.0044cf80();\n                    iVar7 = fcn.0044dee0(arg1);\n                } while (uStack128 <= uStackX32);\n                if (in_stack_00000028 == 0) {\n                    return uStack140;\n                }\n                unaff_RBX = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n                auVar3 = ZEXT816(unaff_RBX) * ZEXT816(unaff_RBX ^ 0xe7037ed1a0b428db);\n                arg1 = SUB168(auVar3 >> 0x40, 0);\n                *(*(unaff_R14 + 0x30) + 0xf0) = unaff_RBX;\n                unaff_RSI = (uStackX32 >> 3 & 1) * 0x80;\n                in_R8 = in_stack_00000028 + unaff_RSI;\n                uVar1 = *(in_stack_00000028 + 8 + unaff_RSI);\n                uVar2 = *(in_stack_00000028 + 0xc + unaff_RSI);\n                uVar6 = uVar2;\n                uVar8 = *(in_stack_00000028 + unaff_RSI);\n                uVar4 = ((SUB164(auVar3, 0) ^ SUB164(auVar3 >> 0x40, 0)) << 3) >> 0x20;\n                if (uVar4 < 8) {\n                    iVar7 = uVar4 * 0x10;\n                    *(in_R8 + iVar7) = uVar8;\n                    *(in_R8 + 8 + iVar7) = uVar1;\n                    *(in_R8 + 0xc + iVar7) = uVar2;\n                    *(in_stack_00000028 + unaff_RSI) = uStackX32;\n                    *(in_stack_00000028 + 8 + unaff_RSI) = iStackX24;\n                    *(in_stack_00000028 + 0xc + unaff_RSI) = uStack140;\n                    return uStack140;\n                }\n                fcn.0045e240(8);\n            }\n            else {\n                uVar6 = *(unaff_RBX + 0x60);\n                iVar5 = arg1;\n                uVar8 = arg1 & 0xffffffff;\n                arg1 = *(unaff_RBX + 0x58);\n                if (uVar8 <= *(unaff_RBX + 0x58)) {\n                    uStack64 = uVar8;\n                    uStack32 = unaff_RBX;\n                    iStack24 = in_RAX;\n                    iStack16 = *(unaff_RBX + 0x50);\n                    uStack128 = fcn.0044cf80();\n                    uStack140 = 0xffffffff;\n                    arg1 = uVar6 - uStack64;\n                    iVar7 = (-arg1 >> 0x3f & uStack64) + iStack16;\n                    iStackX24 = iVar5;\n                    uStackX32 = unaff_RDI;\n                    in_stack_00000028 = unaff_RSI;\n                    goto code_r0x0044d2f6;\n                }\n            }\n            unaff_RDI = arg1;\n            in_RAX = fcn.0045e300(arg1);\n        }\n        uVar8 = uVar8 + 1;\n    } while( true );\n}\n",
        "token_count": 1540
    },
    "0044e080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044e080(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    bool bVar8;\n    char cVar9;\n    ulong *in_RAX;\n    int64_t iVar10;\n    ulong arg1;\n    int64_t iVar11;\n    uint64_t *unaff_RBX;\n    uint64_t uVar12;\n    uchar *puVar13;\n    uchar *unaff_RBP;\n    uint8_t uVar14;\n    int64_t *piVar15;\n    int64_t *piVar16;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar13 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar13 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*unaff_RBX < 9) {\n                uVar14 = *(unaff_RBX + 0x17) & 0x1f;\n                if ((uVar14 != 0xd) && (uVar14 != 0xe)) {\n                    if (*unaff_RBX != 0) {\n                        *(*0x20 + 0x10) = unaff_RBX;\n                        *(*0x20 + 8) = in_RAX;\n                        *(*0x20 + -0x10) = *in_RAX;\n                        *(*0x20 + -0x48) = in_RAX[1];\n                        *(*0x20 + -0x40) = in_RAX[2];\n                        arg1 = 0;\n                        *(*0x20 + -0x90) = 0x44e10e;\n                        cVar9 = fcn.0044e360(0);\n                        if (cVar9 == '\\0') {\n                            piVar15 = *(*0x20 + 8);\n                            piVar15[1] = *(*0x20 + -0x48);\n                            piVar15[2] = *(*0x20 + -0x40);\n                            if (*0x801c20 == 0) {\n                                *piVar15 = *(*0x20 + -0x10);\n                            }\n                            else {\n                                *(*0x20 + -0x90) = 0x44e185;\n                                fcn.0045dec0(arg1, *(*0x20 + -0x10), param_3, param_4);\n                            }\n                            piVar16 = *(*0x20 + 0x10);\n                            piVar15[4] = -*(piVar16 + 0x15) & (*(piVar16 + 0x15) + piVar15[4]) - 1;\n                            *(*0x20 + -0x38) = in_XMM15;\n                            *(*0x20 + -0x30) = in_XMM15;\n                            *(*0x20 + -0x20) = in_XMM15;\n                            *(*0x20 + -0x38) = 1;\n                            iVar10 = piVar15[3];\n                            *(*0x20 + -0x30) = iVar10;\n                            iVar11 = piVar15[4];\n                            *(*0x20 + -0x28) = iVar11;\n                            iVar1 = *piVar16;\n                            *(*0x20 + -0x18) = iVar1;\n                            iVar2 = *piVar15;\n                            iVar3 = piVar15[1];\n                            if (iVar3 == 0) {\n                                bVar8 = true;\n                            }\n                            else {\n                                if (*(iVar2 + -0x28 + iVar3 * 0x28) == 1) {\n                                    iVar4 = *(iVar2 + -8 + iVar3 * 0x28);\n                                    if ((iVar10 == *(iVar2 + -0x20 + iVar3 * 0x28) + iVar4) &&\n                                       (iVar11 == *(iVar2 + -0x18 + iVar3 * 0x28) + iVar4)) {\n                                        *(iVar2 + -8 + iVar3 * 0x28) = iVar4 + iVar1;\n                                        uVar14 = 1;\n                                    }\n                                    else {\n                                        uVar14 = 0;\n                                    }\n                                }\n                                else {\n                                    uVar14 = 0;\n                                }\n                                bVar8 = uVar14 ^ 1;\n                            }\n                            if (bVar8) {\n                                iVar11 = piVar15[1];\n                                uVar12 = iVar11 + 1;\n                                iVar1 = *piVar15;\n                                arg4 = piVar15[2];\n                                iVar10 = iVar1;\n                                if (arg4 < uVar12) {\n                                    *(*0x20 + -0x90) = 0x44e271;\n                                    iVar10 = fcn.00447360(iVar11);\n                                    piVar15 = *(*0x20 + 8);\n                                    piVar15[2] = iVar11;\n                                    if (*0x801c20 == 0) {\n                                        *piVar15 = iVar10;\n                                    }\n                                    else {\n                                        *(*0x20 + -0x90) = 0x44e290;\n                                        iVar10 = fcn.0045dda0(iVar11, uVar12, piVar16, arg4);\n                                    }\n                                    piVar16 = *(*0x20 + 0x10);\n                                    iVar11 = iVar1;\n                                }\n                                piVar15[1] = iVar11 + 1;\n                                *(iVar10 + iVar11 * 0x28) = *(*0x20 + -0x38);\n                                iVar10 = iVar10 + iVar11 * 0x28;\n                                uVar5 = *(*0x20 + -0x2c);\n                                uVar6 = *(*0x20 + -0x28);\n                                uVar7 = *(*0x20 + -0x24);\n                                *(iVar10 + 8) = *(*0x20 + -0x30);\n                                *(iVar10 + 0xc) = uVar5;\n                                *(iVar10 + 0x10) = uVar6;\n                                *(iVar10 + 0x14) = uVar7;\n                                uVar5 = *(*0x20 + -0x1c);\n                                uVar6 = *(*0x20 + -0x18);\n                                uVar7 = *(*0x20 + -0x14);\n                                *(iVar10 + 0x18) = *(*0x20 + -0x20);\n                                *(iVar10 + 0x1c) = uVar5;\n                                *(iVar10 + 0x20) = uVar6;\n                                *(iVar10 + 0x24) = uVar7;\n                            }\n                            piVar15[4] = piVar15[4] + *piVar16;\n                        }\n                        else {\n                            piVar15 = *(*0x20 + 8);\n                            piVar16 = *(*0x20 + 0x10);\n                            uVar12 = *(piVar16 + 0x15);\n                            uVar12 = -uVar12 & (piVar15[5] + uVar12) - 1;\n                            piVar15[5] = uVar12;\n                            piVar15[5] = *piVar16 + uVar12;\n                        }\n                        piVar15[3] = piVar15[3] + 8;\n                        return;\n                    }\n                    in_RAX[4] = -*(unaff_RBX + 0x15) & (in_RAX[4] + *(unaff_RBX + 0x15)) - 1;\n                    return;\n                }\n                *(*0x20 + -0x90) = 0x44e325;\n                fcn.004334e0();\n            }\n            unaff_RBX = 0x732998;\n            *(*0x20 + -0x90) = 0x44e338;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar13 + 8) = in_RAX;\n        *(puVar13 + 0x10) = unaff_RBX;\n        *(puVar13 + -8) = 0x44e348;\n        fcn.0045bb60();\n        in_RAX = *(puVar13 + 8);\n        unaff_RBX = *(puVar13 + 0x10);\n        *0x20 = puVar13;\n    } while( true );\n}\n",
        "token_count": 1922
    },
    "0044e9e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0044e9e0(int64_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong arg1;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t *unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    int64_t arg3;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*0x8019fc == 0) {\n                *(*0x20 + -0x58) = 0x44ea10;\n                fcn.0042d260();\n                in_RAX = *(*0x20 + 8);\n                unaff_RBX = *(*0x20 + 0x10);\n            }\n            if (*unaff_RBX == 0) {\n                *unaff_RBX = in_RAX;\n                iVar4 = *(in_RAX + 0x2290);\n                arg3 = *(in_RAX + 0x2288);\n                arg4 = iVar4 + 1;\n                if (*(in_RAX + 0x2298) < arg4) {\n                    *(*0x20 + -0x10) = iVar4;\n                    *(*0x20 + -0x58) = 0x44ea6c;\n                    iVar6 = arg3;\n                    iVar3 = fcn.00447360(iVar4);\n                    in_RAX = *(*0x20 + 8);\n                    *(in_RAX + 0x2298) = iVar4;\n                    if (*0x801c20 == 0) {\n                        *(in_RAX + 0x2288) = iVar3;\n                        param_1 = iVar4;\n                    }\n                    else {\n                        *(*0x20 + -0x58) = 0x44ea9d;\n                        iVar3 = fcn.0045dda0(in_RAX, in_RAX + 0x2288, iVar6, arg4);\n                        param_1 = in_RAX;\n                    }\n                    unaff_RBX = *(*0x20 + 0x10);\n                    iVar4 = arg3;\n                    arg3 = iVar3;\n                }\n                iVar6 = iVar4 + 1;\n                *(in_RAX + 0x2290) = iVar6;\n                if (*0x801c20 == 0) {\n                    *(arg3 + iVar4 * 8) = unaff_RBX;\n                }\n                else {\n                    *(*0x20 + -0x58) = 0x44ead6;\n                    fcn.0045dee0(param_1, in_RAX, arg3, iVar6);\n                }\n                arg1 = *(in_RAX + 0x2298);\n                *(*0x20 + -0x58) = 0x44eaf6;\n                fcn.00450680(arg1, in_RAX, arg3, iVar6);\n                iVar4 = *(*0x20 + 8);\n                if (*(iVar4 + 0x2290) != 0) {\n                    if (**(iVar4 + 0x2288) == *(*0x20 + 0x10)) {\n                        *(iVar4 + 0x1208) = *(*(*0x20 + 0x10) + 8);\n                    }\n                    LOCK();\n                    piVar1 = iVar4 + 0x22a0;\n                    iVar2 = *piVar1;\n                    *piVar1 = *piVar1 + 1;\n                    return iVar2;\n                }\n                param_1 = 0;\n                *(*0x20 + -0x58) = 0x44eb45;\n                fcn.0045e240(0);\n            }\n            unaff_RBX = 0x22;\n            *(*0x20 + -0x58) = 0x44eb56;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + -8) = 0x44eb66;\n        fcn.0045bb60();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1096
    },
    "0044ee20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0044ee20(ulong noname_0, uint64_t arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    ulong arg1;\n    int64_t in_RAX;\n    ulong uVar4;\n    uint64_t uVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t arg3;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar5 = *(in_RAX + 0x2290);\n            if (unaff_RBX < uVar5) {\n                piVar3 = *(*(in_RAX + 0x2288) + unaff_RBX * 8);\n                if (in_RAX == *piVar3) {\n                    *piVar3 = 0;\n                    uVar5 = *(in_RAX + 0x2290);\n                    arg3 = uVar5 - 1;\n                    if (unaff_RBX == arg3) {\ncode_r0x0044eeb6:\n                        arg4 = *(in_RAX + 0x2290);\n                        if (arg3 < arg4) {\n                            if (*0x801c20 == 0) {\n                                *(*(in_RAX + 0x2288) + -8 + uVar5 * 8) = 0;\n                            }\n                            else {\n                                *(*0x20 + -0x38) = 0x44eef0;\n                                in_RAX = fcn.0045df00(uVar5, arg2, arg3, arg4);\n                            }\n                            arg2 = *(in_RAX + 0x2298);\n                            if (arg3 <= arg2) {\n                                *(in_RAX + 0x2290) = arg3;\n                                uVar5 = unaff_RBX;\n                                if (unaff_RBX != arg3) {\n                                    *(*0x20 + 8) = in_RAX;\n                                    *(*0x20 + 0x10) = unaff_RBX;\n                                    uVar4 = *(in_RAX + 0x2288);\n                                    arg1 = *(in_RAX + 0x2298);\n                                    *(*0x20 + -0x38) = 0x44ef45;\n                                    uVar4 = fcn.00450680(arg1, uVar4, arg3, arg4);\n                                    *(*0x20 + -0x10) = uVar4;\n                                    uVar4 = *(*(*0x20 + 8) + 0x2298);\n                                    *(*0x20 + -0x38) = 0x44ef71;\n                                    fcn.00450800(uVar4);\n                                    in_RAX = *(*0x20 + 8);\n                                    unaff_RBX = *(*0x20 + 0x10);\n                                    uVar5 = *(*0x20 + -0x10);\n                                }\n                                if (unaff_RBX == 0) {\n                                    if (*(in_RAX + 0x2290) == 0) {\n                                        *(in_RAX + 0x1208) = 0;\n                                    }\n                                    else {\n                                        *(in_RAX + 0x1208) = *(**(in_RAX + 0x2288) + 8);\n                                    }\n                                }\n                                LOCK();\n                                piVar1 = in_RAX + 0x22a0;\n                                iVar2 = *piVar1;\n                                *piVar1 = *piVar1 + -1;\n                                if (iVar2 == 1) {\n                                    *(in_RAX + 0x1210) = 0;\n                                }\n                                return uVar5;\n                            }\n                            *(*0x20 + -0x38) = 0x44efe5;\n                            fcn.0045e2c0(arg3, arg2);\n                        }\n                        uVar5 = arg4;\n                        *(*0x20 + -0x38) = 0x44eff0;\n                        fcn.0045e240(uVar5);\ncode_r0x0044eff0:\n                        *(*0x20 + -0x38) = 0x44eff8;\n                        fcn.0045e240(uVar5);\n                    }\n                    else if (arg3 < uVar5) {\n                        if (unaff_RBX < uVar5) {\n                            if (*0x801c20 == 0) {\n                                *(*(in_RAX + 0x2288) + unaff_RBX * 8) = *(*(in_RAX + 0x2288) + -8 + uVar5 * 8);\n                            }\n                            else {\n                                *(*0x20 + -0x38) = 0x44eeb6;\n                                in_RAX = fcn.0045df40(uVar5, arg2, arg3);\n                            }\n                            goto code_r0x0044eeb6;\n                        }\n                        goto code_r0x0044eff0;\n                    }\n                    *(*0x20 + -0x38) = 0x44f005;\n                    fcn.0045e240(uVar5);\n                }\n                unaff_RBX = 0x13;\n                *(*0x20 + -0x38) = 0x44f016;\n                fcn.00433c80();\n            }\n            *(*0x20 + -0x38) = 0x44f01e;\n            in_RAX = fcn.0045e240(uVar5);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x44f02e;\n        fcn.0045bb60();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1399
    },
    "0044f040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044f040(ulong noname_0, uint64_t arg2, ulong noname_2, ulong arg4)\n\n{\n    uint64_t arg1;\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t arg3;\n    ulong arg1_00;\n    int64_t in_RAX;\n    int64_t arg1_01;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t arg3_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x2290) != 0) {\n                arg3 = ***(in_RAX + 0x2288);\n                if (in_RAX == arg3) {\n                    ***(in_RAX + 0x2288) = 0;\n                    arg1_01 = *(in_RAX + 0x2290);\n                    arg1 = arg1_01 - 1;\n                    if (0 < arg1) {\n                        if (*0x801c20 == 0) {\n                            **(in_RAX + 0x2288) = (*(in_RAX + 0x2288))[arg1_01 + -1];\n                        }\n                        else {\n                            *(*0x20 + -0x30) = 0x44f0b4;\n                            in_RAX = fcn.0045df00(arg1_01, arg2, arg3, arg4);\n                        }\n                    }\n                    arg3_00 = *(in_RAX + 0x2290);\n                    if (arg1 < arg3_00) {\n                        if (*0x801c20 == 0) {\n                            *(*(in_RAX + 0x2288) + -8 + arg1_01 * 8) = 0;\n                        }\n                        else {\n                            *(*0x20 + -0x30) = 0x44f0ee;\n                            in_RAX = fcn.0045df00(arg1_01, arg2, arg3_00, arg4);\n                        }\n                        arg2 = *(in_RAX + 0x2298);\n                        if (arg1 <= arg2) {\n                            *(in_RAX + 0x2290) = arg1;\n                            if (0 < arg1) {\n                                *(*0x20 + 8) = in_RAX;\n                                arg1_00 = *(in_RAX + 0x2298);\n                                *(*0x20 + -0x30) = 0x44f127;\n                                fcn.00450800(arg1_00);\n                                in_RAX = *(*0x20 + 8);\n                            }\n                            if (*(in_RAX + 0x2290) == 0) {\n                                *(in_RAX + 0x1208) = 0;\n                            }\n                            else {\n                                *(in_RAX + 0x1208) = *(**(in_RAX + 0x2288) + 8);\n                            }\n                            LOCK();\n                            piVar1 = in_RAX + 0x22a0;\n                            iVar2 = *piVar1;\n                            *piVar1 = *piVar1 + -1;\n                            if (iVar2 == 1) {\n                                *(in_RAX + 0x1210) = 0;\n                            }\n                            return;\n                        }\n                        *(*0x20 + -0x30) = 0x44f185;\n                        fcn.0045e2c0(arg1, arg2);\n                    }\n                    *(*0x20 + -0x30) = 0x44f190;\n                    fcn.0045e240(arg3_00);\n                }\n                *(*0x20 + -0x30) = 0x44f1a5;\n                fcn.00433c80();\n            }\n            *(*0x20 + -0x30) = 0x44f1af;\n            in_RAX = fcn.0045e240(0);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x44f1ba;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1025
    },
    "0044fd20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0044fd20(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint32_t uVar1;\n    int64_t *arg2;\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \ncode_r0x0044fd20:\n    puVar2 = *0x20;\n    if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n        puVar2 = *0x20 + -0x28;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\ncode_r0x0044fd47:\n        if (*(in_RAX + 0x2290) == 0) goto code_r0x0044ff65;\n        arg2 = **(in_RAX + 0x2288);\n        if (in_RAX != *arg2) {\n            unaff_RBX = 0xf;\n            *(*0x20 + -0x30) = 0x44ff65;\n            fcn.00433c80();\n            goto code_r0x0044ff65;\n        }\n        uVar1 = *(arg2 + 8);\n        if (9 < uVar1) {\n            *(*0x20 + -0x30) = 0x44fefb;\n            fcn.00450a20();\n            in_RAX = *(*0x20 + 8);\n            goto code_r0x0044ff05;\n        }\n        *(*0x20 + -0x10) = arg2;\n        switch(uVar1) {\n        case 0:\n        case 5:\n            *(*0x20 + -0x30) = 0x44fe30;\n            fcn.00450a20();\n            in_RAX = *(*0x20 + 8);\n            break;\n        case 1:\n            if (unaff_RBX < arg2[1]) {\n                return arg2[1];\n            }\n            LOCK();\n            if (uVar1 == *(arg2 + 8)) {\n                *(arg2 + 8) = 2;\n                *(*0x20 + -0x30) = 0x44ff25;\n                fcn.0044ffa0(unaff_RBX);\n                return 0;\n            }\n            goto code_r0x0044fd47;\n        default:\n            *(*0x20 + -0x30) = 0x44feea;\n            fcn.00450a20();\n            in_RAX = *(*0x20 + 8);\n            break;\n        case 3:\n            LOCK();\n            if (uVar1 != *(arg2 + 8)) goto code_r0x0044fd47;\n            *(arg2 + 8) = 4;\n            *(*0x20 + -0x30) = 0x44fddf;\n            fcn.0044f040(in_RAX, arg2, param_3, param_4);\n            LOCK();\n            if (*(*(*0x20 + -0x10) + 0x40) == 4) {\n                *(*(*0x20 + -0x10) + 0x40) = 5;\n            }\n            else {\n                *(*0x20 + -0x30) = 0x44fdff;\n                fcn.00450a20();\n            }\n            in_RAX = *(*0x20 + 8);\n            LOCK();\n            *(in_RAX + 0x22a4) = *(in_RAX + 0x22a4) + -1;\n            if (*(in_RAX + 0x2290) == 0) {\n                return -1;\n            }\n            break;\n        case 6:\n            *(*0x20 + -0x28) = 0x719768;\n            *(*0x20 + -0x30) = 0x44fe4f;\n            fcn.0045ba20();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            in_RAX = *(*0x20 + 8);\n            break;\n        case 7:\n        case 8:\n            goto code_r0x0044fe72;\n        }\n        goto code_r0x0044ff05;\n    }\n    goto code_r0x0044ff70;\ncode_r0x0044fe72:\n    LOCK();\n    if (uVar1 != *(arg2 + 8)) goto code_r0x0044fd47;\n    *(arg2 + 8) = 9;\n    arg2[1] = arg2[7];\n    *(*0x20 + -0x30) = 0x44fea5;\n    fcn.0044f040(in_RAX, arg2, param_3, param_4);\n    *(*0x20 + -0x30) = 0x44feb4;\n    fcn.0044e9e0();\n    LOCK();\n    if (*(*(*0x20 + -0x10) + 0x40) == 9) {\n        *(*(*0x20 + -0x10) + 0x40) = 1;\n    }\n    else {\n        *(*0x20 + -0x30) = 0x44fed4;\n        fcn.00450a20();\n    }\n    in_RAX = *(*0x20 + 8);\ncode_r0x0044ff05:\n    unaff_RBX = *(*0x20 + 0x10);\n    goto code_r0x0044fd47;\ncode_r0x0044ff65:\n    *(*0x20 + -0x30) = 0x44ff6f;\n    in_RAX = fcn.0045e240(0);\ncode_r0x0044ff70:\n    *(puVar2 + 8) = in_RAX;\n    *(puVar2 + 0x10) = unaff_RBX;\n    *(puVar2 + -8) = 0x44ff7f;\n    fcn.004602a0();\n    in_RAX = *(puVar2 + 8);\n    unaff_RBX = *(puVar2 + 0x10);\n    *0x20 = puVar2;\n    goto code_r0x0044fd20;\n}\n",
        "token_count": 1458
    },
    "0044ffa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044ffa0(int64_t arg1)\n\n{\n    code **arg2;\n    ulong arg4;\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.004602a0();\n    }\n    arg2 = *(unaff_RBX + 0x18);\n    arg4 = *(unaff_RBX + 0x30);\n    iVar1 = *(unaff_RBX + 0x10);\n    if (iVar1 < 1) {\n        fcn.0044f040(arg1, arg2, *(unaff_RBX + 0x28), arg4);\n        LOCK();\n        if (*(unaff_RBX + 0x40) == 2) {\n            *(unaff_RBX + 0x40) = 0;\n        }\n        else {\n            fcn.00450a20();\n        }\n    }\n    else {\n        iVar1 = iVar1 * ((arg1 - *(unaff_RBX + 8)) / iVar1 + 1) + *(unaff_RBX + 8);\n        *(unaff_RBX + 8) = iVar1;\n        if (iVar1 < 0) {\n            *(unaff_RBX + 8) = 0x7fffffffffffffff;\n        }\n        fcn.00450800(*(in_RAX + 0x2298));\n        LOCK();\n        if (*(unaff_RBX + 0x40) == 2) {\n            *(unaff_RBX + 0x40) = 1;\n        }\n        else {\n            fcn.00450a20();\n        }\n        if (*(in_RAX + 0x2290) == 0) {\n            *(in_RAX + 0x1208) = 0;\n        }\n        else {\n            *(in_RAX + 0x1208) = *(**(in_RAX + 0x2288) + 8);\n        }\n    }\n    fcn.0040a680();\n    (**arg2)(arg4);\n    fcn.0040a460();\n    return;\n}\n",
        "token_count": 503
    },
    "00450140": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00450140(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint64_t in_RAX;\n    uint64_t uVar3;\n    ulong *arg1;\n    ulong *arg2;\n    ulong *puVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t *piVar6;\n    int64_t *piVar7;\n    ulong *arg1_00;\n    ulong *puVar8;\n    int32_t iVar9;\n    ulong *arg4;\n    ulong *in_R10;\n    uint64_t unaff_R12;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar10;\n    \ncode_r0x00450140:\n    puVar5 = *0x20;\n    puVar8 = in_R10;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x60;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(in_RAX + 0x1210) = 0;\n        piVar6 = *(in_RAX + 0x2288);\n        *(*0x20 + -0x18) = piVar6;\n        arg1 = *(in_RAX + 0x2290);\n        *(*0x20 + -0x30) = arg1;\n        arg2 = *(in_RAX + 0x2298);\n        *(*0x20 + -0x28) = arg2;\n        puVar4 = NULL;\n        piVar7 = NULL;\n        arg1_00 = NULL;\n        arg4 = NULL;\n        uVar3 = unaff_R12;\ncode_r0x004501a0:\n        puVar8 = arg1_00;\n        if (puVar4 < arg1) {\n            *(*0x20 + -0x20) = puVar4;\n            *(*0x20 + -0x3c) = arg4;\n            *(*0x20 + -0x38) = arg1_00;\n            *(*0x20 + -0x3d) = piVar7;\n            puVar8 = piVar6[puVar4];\n            *(*0x20 + -0x10) = puVar8;\n            uVar3 = in_RAX;\n        }\n        else {\n            for (; puVar8 < arg1; puVar8 = puVar8 + 1) {\n                if (arg1 <= puVar8) goto code_r0x004503e9;\n                piVar7 = piVar6 + puVar8;\n                if (*0x801c20 == 0) {\n                    piVar6[puVar8] = 0;\n                }\n                else {\n                    *(*0x20 + -0x68) = 0x450367;\n                    in_RAX = fcn.0045dee0(arg1, arg2, puVar8, arg4);\n                    in_R10 = arg1_00;\n                }\n            }\n            iVar9 = arg4;\n            LOCK();\n            puVar1 = in_RAX + 0x22a4;\n            arg4 = *puVar1;\n            *puVar1 = *puVar1 + -iVar9;\n            LOCK();\n            puVar1 = in_RAX + 0x22a0;\n            puVar8 = *puVar1;\n            *puVar1 = *puVar1 + -iVar9;\n            if (arg1_00 <= arg2) {\n                *(in_RAX + 0x2290) = arg1_00;\n                *(in_RAX + 0x2298) = arg2;\n                if (*0x801c20 == 0) {\n                    *(in_RAX + 0x2288) = piVar6;\n                }\n                else {\n                    *(*0x20 + -0x68) = 0x4503b7;\n                    in_RAX = fcn.0045df00(arg1, arg2, puVar8, arg4);\n                }\n                if (arg1_00 == NULL) {\n                    *(in_RAX + 0x1208) = 0;\n                }\n                else {\n                    *(in_RAX + 0x1208) = *(*piVar6 + 8);\n                }\n                return;\n            }\n            *(*0x20 + -0x68) = 0x4503e9;\n            arg1 = arg1_00;\n            fcn.0045e2c0(arg1_00, arg2);\ncode_r0x004503e9:\n            *(*0x20 + -0x68) = 0x4503f1;\n            fcn.0045e240(arg1);\n            puVar4 = arg1_00;\n            arg1_00 = puVar8;\n            puVar8 = in_R10;\n        }\ncode_r0x004503f4:\n        uVar2 = *(puVar8 + 8);\n        unaff_R12 = uVar2;\n        in_RAX = uVar3;\n        in_R10 = puVar8;\n        switch(unaff_R12) {\n        case 0:\n        case 5:\n            *(*0x20 + -0x68) = 0x45043b;\n            fcn.00450a20();\n            arg1 = *(*0x20 + -0x30);\n            arg2 = *(*0x20 + -0x28);\n            puVar4 = *(*0x20 + -0x20);\n            piVar6 = *(*0x20 + -0x18);\n            piVar7 = *(*0x20 + -0x3d);\n            arg1_00 = *(*0x20 + -0x38);\n            arg4 = *(*0x20 + -0x3c);\n            puVar8 = *(*0x20 + -0x10);\n            uVar3 = *(*0x20 + 8);\n            goto code_r0x004503f4;\n        case 1:\n            if (piVar7 != '\\0') {\n                if (arg1 <= arg1_00) goto code_r0x00450585;\n                if (*0x801c20 == 0) {\n                    piVar6[arg1_00] = puVar8;\n                }\n                else {\n                    *(*0x20 + -0x68) = 0x4501f7;\n                    fcn.0045df40(arg1, arg2, arg1_00);\n                    arg4 = puVar8;\n                }\n                *(*0x20 + -0x68) = 0x450208;\n                fcn.00450680(arg2, arg2, arg1_00, arg4);\n                in_RAX = *(*0x20 + 8);\n                arg1 = *(*0x20 + -0x30);\n                arg2 = *(*0x20 + -0x28);\n                puVar4 = *(*0x20 + -0x20);\n                piVar6 = *(*0x20 + -0x18);\n                piVar7 = *(*0x20 + -0x3d);\n                arg1_00 = *(*0x20 + -0x38);\n                arg4 = *(*0x20 + -0x3c);\n            }\n            arg1_00 = arg1_00 + 1;\n            goto code_r0x00450198;\n        case 2:\n        case 4:\n        case 9:\n            *(*0x20 + -0x68) = 0x450505;\n            fcn.00450a20();\n            arg1 = *(*0x20 + -0x30);\n            arg2 = *(*0x20 + -0x28);\n            puVar4 = *(*0x20 + -0x20);\n            piVar6 = *(*0x20 + -0x18);\n            piVar7 = *(*0x20 + -0x3d);\n            arg1_00 = *(*0x20 + -0x38);\n            arg4 = *(*0x20 + -0x3c);\n            puVar8 = *(*0x20 + -0x10);\n            uVar3 = *(*0x20 + 8);\n            goto code_r0x004503f4;\n        case 3:\n            LOCK();\n            if (uVar2 == *(puVar8 + 8)) {\n                *(puVar8 + 8) = 4;\n                *puVar8 = 0;\n                LOCK();\n                bVar10 = *(puVar8 + 8) == 4;\n                if (bVar10) {\n                    *(puVar8 + 8) = 5;\n                }\n                in_R10 = puVar8 & 0xffffffffffffff00 | bVar10;\n                if (!bVar10) {\n                    *(*0x20 + -0x68) = 0x45025c;\n                    fcn.00450a20();\n                    arg1 = *(*0x20 + -0x30);\n                    arg2 = *(*0x20 + -0x28);\n                    puVar4 = *(*0x20 + -0x20);\n                    piVar6 = *(*0x20 + -0x18);\n                    arg1_00 = *(*0x20 + -0x38);\n                    arg4 = *(*0x20 + -0x3c);\n                    in_RAX = *(*0x20 + 8);\n                }\n                arg4 = arg4 + 1;\n                piVar7 = 0x1;\n                unaff_R12 = in_RAX;\n                goto code_r0x00450198;\n            }\n            goto code_r0x004503f4;\n        case 6:\n            *(*0x20 + -0x60) = 0x719768;\n            *(*0x20 + -0x68) = 0x450485;\n            fcn.0045ba20();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            arg1 = *(*0x20 + -0x30);\n            arg2 = *(*0x20 + -0x28);\n            puVar4 = *(*0x20 + -0x20);\n            piVar6 = *(*0x20 + -0x18);\n            piVar7 = *(*0x20 + -0x3d);\n            arg1_00 = *(*0x20 + -0x38);\n            arg4 = *(*0x20 + -0x3c);\n            puVar8 = *(*0x20 + -0x10);\n            uVar3 = *(*0x20 + 8);\n            goto code_r0x004503f4;\n        case 7:\n        case 8:\n            goto code_r0x004504d1;\n        default:\n            *(*0x20 + -0x68) = 0x450545;\n            fcn.00450a20();\n            arg1 = *(*0x20 + -0x30);\n            arg2 = *(*0x20 + -0x28);\n            piVar6 = *(*0x20 + -0x18);\n            piVar7 = *(*0x20 + -0x3d);\n            arg4 = *(*0x20 + -0x3c);\n            uVar3 = *(*0x20 + 8);\n            puVar4 = *(*0x20 + -0x20);\n            arg1_00 = *(*0x20 + -0x38);\n            puVar8 = *(*0x20 + -0x10);\n            goto code_r0x004503f4;\n        }\n    }\n    goto code_r0x0045058e;\ncode_r0x004504d1:\n    LOCK();\n    if (uVar2 == *(puVar8 + 8)) goto code_r0x004504de;\n    goto code_r0x004503f4;\ncode_r0x004504de:\n    *(puVar8 + 8) = 9;\n    puVar8[1] = puVar8[7];\n    unaff_R12 = uVar3;\n    if (arg1_00 < arg1) {\n        if (*0x801c20 == 0) {\n            piVar6[arg1_00] = puVar8;\n        }\n        else {\n            *(*0x20 + -0x68) = 0x4502c7;\n            fcn.0045df40(arg1, arg2, arg1_00);\n            arg4 = puVar8;\n        }\n        *(*0x20 + -0x68) = 0x4502d8;\n        fcn.00450680(arg2, arg2, arg1_00, arg4);\n        LOCK();\n        if (*(*(*0x20 + -0x10) + 0x40) == 9) {\n            *(*(*0x20 + -0x10) + 0x40) = 1;\n        }\n        else {\n            *(*0x20 + -0x68) = 0x4502f8;\n            fcn.00450a20();\n        }\n        arg1_00 = *(*0x20 + -0x38) + 1;\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + -0x30);\n        arg2 = *(*0x20 + -0x28);\n        puVar4 = *(*0x20 + -0x20);\n        piVar6 = *(*0x20 + -0x18);\n        piVar7 = 0x1;\n        arg4 = *(*0x20 + -0x3c);\ncode_r0x00450198:\n        puVar4 = puVar4 + 1;\n        uVar3 = unaff_R12;\n        goto code_r0x004501a0;\n    }\n    *(*0x20 + -0x68) = 0x450585;\n    fcn.0045e240(arg1);\ncode_r0x00450585:\n    *(*0x20 + -0x68) = 0x45058d;\n    in_RAX = fcn.0045e240(arg1);\ncode_r0x0045058e:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + -8) = 0x450598;\n    fcn.0045bb60();\n    in_RAX = *(puVar5 + 8);\n    *0x20 = puVar5;\n    in_R10 = puVar8;\n    goto code_r0x00450140;\n}\n",
        "token_count": 3196
    },
    "00450680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00450680(uint64_t arg1, ulong noname_1, uint64_t arg3, int64_t arg4)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    bool bVar4;\n    bool bVar5;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            bVar4 = unaff_RBX < unaff_RDI;\n            bVar5 = unaff_RBX == unaff_RDI;\n            if (unaff_RBX <= unaff_RDI) {\n                *(*0x20 + -0x28) = 0x4506b1;\n                fcn.00450a20();\n                arg1 = *(*0x20 + 0x10);\n                bVar4 = arg1 < *(*0x20 + 0x20);\n                bVar5 = arg1 == *(*0x20 + 0x20);\n                in_RAX = *(*0x20 + 8);\n                unaff_RDI = *(*0x20 + 0x20);\n                unaff_RBX = arg1;\n            }\n            if (!bVar4 && !bVar5) {\n                iVar2 = *(*(in_RAX + unaff_RDI * 8) + 8);\n                if (iVar2 < 1) {\n                    *(*0x20 + -0x10) = iVar2;\n                    *(*0x20 + -0x28) = 0x4506e8;\n                    fcn.00450a20();\n                    in_RAX = *(*0x20 + 8);\n                    iVar2 = *(*0x20 + -0x10);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RDI = *(*0x20 + 0x20);\n                }\n                iVar1 = *(in_RAX + unaff_RDI * 8);\n                while (0 < unaff_RDI) {\n                    arg3 = unaff_RDI - 1 >> 2;\n                    if (unaff_RBX <= arg3) goto code_r0x0045079a;\n                    arg4 = *(in_RAX + arg3 * 8);\n                    if (*(arg4 + 8) == iVar2 || *(arg4 + 8) < iVar2) break;\n                    if (unaff_RBX <= unaff_RDI) goto code_r0x0045078f;\n                    if (*0x801c20 == 0) {\n                        *(in_RAX + unaff_RDI * 8) = arg4;\n                        unaff_RDI = arg3;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x450746;\n                        unaff_RDI = arg3;\n                        in_RAX = fcn.0045df40(arg1, iVar2, arg3);\n                        arg3 = unaff_RDI;\n                    }\n                }\n                if (unaff_RDI < unaff_RBX) {\n                    iVar2 = *(in_RAX + unaff_RDI * 8);\n                    if (iVar2 != iVar1) {\n                        if (*0x801c20 == 0) {\n                            *(in_RAX + unaff_RDI * 8) = iVar1;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x450774;\n                            unaff_RDI = fcn.0045df00(iVar2, in_RAX + unaff_RDI * 8, arg3, arg4);\n                        }\n                    }\n                    return unaff_RDI;\n                }\n                *(*0x20 + -0x28) = 0x45078f;\n                fcn.0045e240(unaff_RBX);\ncode_r0x0045078f:\n                *(*0x20 + -0x28) = 0x45079a;\n                fcn.0045e240(unaff_RBX);\ncode_r0x0045079a:\n                *(*0x20 + -0x28) = 0x4507a5;\n                fcn.0045e240(unaff_RBX);\n            }\n            *(*0x20 + -0x28) = 0x4507b0;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045e240(unaff_RBX);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + -8) = 0x4507ca;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1273
    },
    "00450800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00450800(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t arg2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    uint64_t arg3;\n    uint64_t arg4;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int64_t unaff_R14;\n    bool bVar8;\n    bool bVar9;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            bVar8 = unaff_RBX < unaff_RDI;\n            bVar9 = unaff_RBX == unaff_RDI;\n            if (unaff_RBX <= unaff_RDI) {\n                *(*0x20 + -0x28) = 0x450831;\n                fcn.00450a20();\n                arg1 = *(*0x20 + 0x10);\n                bVar8 = arg1 < *(*0x20 + 0x20);\n                bVar9 = arg1 == *(*0x20 + 0x20);\n                in_RAX = *(*0x20 + 8);\n                unaff_RDI = *(*0x20 + 0x20);\n                unaff_RBX = arg1;\n            }\n            if (!bVar8 && !bVar9) {\n                arg2 = *(*(in_RAX + unaff_RDI * 8) + 8);\n                if (arg2 < 1) {\n                    *(*0x20 + -0x10) = arg2;\n                    *(*0x20 + -0x28) = 0x450868;\n                    fcn.00450a20();\n                    in_RAX = *(*0x20 + 8);\n                    arg2 = *(*0x20 + -0x10);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RDI = *(*0x20 + 0x20);\n                }\n                iVar1 = *(in_RAX + unaff_RDI * 8);\n                arg3 = unaff_RDI;\n                while( true ) {\n                    unaff_RDI = arg3 * 4;\n                    arg4 = unaff_RDI + 1;\n                    if (unaff_RBX <= arg4) break;\n                    if (unaff_RBX <= arg4) goto code_r0x004509c7;\n                    iVar4 = *(*(in_RAX + 8 + arg3 * 0x20) + 8);\n                    uVar5 = unaff_RDI + 2;\n                    if (uVar5 < unaff_RBX) {\n                        if (unaff_RBX <= uVar5) goto code_r0x004509bc;\n                        iVar7 = *(*(in_RAX + 0x10 + arg3 * 0x20) + 8);\n                        if (iVar7 < iVar4) {\n                            arg4 = uVar5;\n                            iVar4 = iVar7;\n                        }\n                    }\n                    uVar5 = unaff_RDI + 3;\n                    uVar6 = arg4;\n                    iVar7 = iVar4;\n                    if (uVar5 < unaff_RBX) {\n                        if (unaff_RBX <= uVar5) goto code_r0x004509b1;\n                        iVar7 = *(*(in_RAX + 0x18 + arg3 * 0x20) + 8);\n                        uVar6 = unaff_RDI + 4;\n                        if (uVar6 < unaff_RBX) {\n                            if (unaff_RBX <= uVar6) goto code_r0x004509a6;\n                            iVar2 = *(*(in_RAX + 0x20 + arg3 * 0x20) + 8);\n                            if (iVar2 < iVar7) {\n                                uVar5 = uVar6;\n                                iVar7 = iVar2;\n                            }\n                        }\n                        uVar6 = uVar5;\n                        if (iVar4 <= iVar7) {\n                            uVar6 = arg4;\n                            iVar7 = iVar4;\n                        }\n                    }\n                    if (arg2 <= iVar7) break;\n                    if (unaff_RBX <= uVar6) goto code_r0x0045099b;\n                    if (unaff_RBX <= arg3) goto code_r0x00450990;\n                    if (*0x801c20 == 0) {\n                        *(in_RAX + arg3 * 8) = *(in_RAX + uVar6 * 8);\n                        arg3 = uVar6;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x450950;\n                        in_RAX = fcn.0045df40(arg1, arg2, arg3);\n                        arg3 = uVar6;\n                    }\n                }\n                if (arg3 < unaff_RBX) {\n                    iVar4 = *(in_RAX + arg3 * 8);\n                    if (iVar4 != iVar1) {\n                        if (*0x801c20 == 0) {\n                            *(in_RAX + arg3 * 8) = iVar1;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x45097b;\n                            fcn.0045df00(iVar4, arg2, arg3, arg4);\n                        }\n                    }\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x450990;\n                fcn.0045e240(unaff_RBX);\ncode_r0x00450990:\n                *(*0x20 + -0x28) = 0x45099b;\n                fcn.0045e240(unaff_RBX);\ncode_r0x0045099b:\n                *(*0x20 + -0x28) = 0x4509a6;\n                fcn.0045e240(unaff_RBX);\ncode_r0x004509a6:\n                *(*0x20 + -0x28) = 0x4509b1;\n                fcn.0045e240(unaff_RBX);\ncode_r0x004509b1:\n                *(*0x20 + -0x28) = 0x4509bc;\n                fcn.0045e240(unaff_RBX);\ncode_r0x004509bc:\n                *(*0x20 + -0x28) = 0x4509c7;\n                fcn.0045e240(unaff_RBX);\ncode_r0x004509c7:\n                *(*0x20 + -0x28) = 0x4509d2;\n                fcn.0045e240(unaff_RBX);\n            }\n            *(*0x20 + -0x28) = 0x4509dd;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045e240(unaff_RBX);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + -8) = 0x4509f7;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1813
    },
    "00450ae0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00450ae0(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if ((*0x7b3be8 != 0) && ((*0x7b3bd8 != 0 || (*0x7b3b91 != '\\0')))) {\n        fcn.0040a460();\n        iVar1 = *0x7b3be8;\n        if ((*0x7b3be8 != 0) && ((*0x7b3bd8 != 0 || (*0x7b3b91 != '\\0')))) {\n            *0x7b3be8 = 0;\n            fcn.0040a680();\n            return iVar1;\n        }\n        fcn.0040a680();\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 233
    },
    "00450bc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00450bc0(void)\n\n{\n    ulong *puVar1;\n    ulong *puVar2;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    puVar1 = *(in_RAX + 0x11d0);\n    *(in_RAX + 0x11d0) = 0;\n    if (puVar1 == NULL) {\n        return;\n    }\n    fcn.0040a460();\n    *puVar1 = 0;\n    puVar2 = puVar1;\n    if (*0x7b3bd8 != NULL) {\n        **0x7b3be0 = puVar1;\n        puVar2 = *0x7b3bd8;\n    }\n    *0x7b3bd8 = puVar2;\n    *0x7b3be0 = puVar1;\n    fcn.0040a680();\n    return;\n}\n",
        "token_count": 252
    },
    "00450c80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00450c80(ulong arg1)\n\n{\n    int64_t iVar1;\n    uint64_t noname_1;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    iVar1 = fcn.004513e0();\n    if ((*0x7b3b90 == '\\0') && (*(iVar1 + 0x268) == '\\0')) {\n        fcn.00451460();\n        return;\n    }\n    noname_1 = unaff_RBX;\n    if ((0 < unaff_RBX) && (*(iVar1 + 0x90) == unaff_R14)) {\n        noname_1 = unaff_RBX + 1;\n    }\n    fcn.00450da0(unaff_RBX & 0xffffffff, noname_1, 0, noname_1);\n    fcn.00451460();\n    return;\n}\n",
        "token_count": 247
    },
    "004512c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.004512c0(uint64_t arg1)\n\n{\n    uint uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0x10) = unaff_RBX;\n            iVar2 = *(in_RAX + 0x90);\n            *(*0x20 + -0x18) = iVar2;\n            if (unaff_R14 == iVar2) {\n                *(*0x20 + -0x48) = 0x451345;\n                arg1 = fcn.004558e0(arg1);\n                unaff_RBX = *(*0x20 + -0x10);\n                unaff_RDI = *(*0x20 + 0x20);\n                iVar2 = *(*0x20 + -0x18);\n            }\n            else if (iVar2 == 0) {\n                arg1 = 0;\n            }\n            else {\n                *(*0x20 + -0x48) = 0x451325;\n                arg1 = fcn.00455a60(unaff_RBX, unaff_RBX);\n                unaff_RBX = *(*0x20 + -0x10);\n                unaff_RDI = *(*0x20 + 0x20);\n                iVar2 = *(*0x20 + -0x18);\n            }\n            unaff_RSI = arg1 - 1;\n            if (0 < arg1) {\n                arg1 = unaff_RSI;\n            }\n            if ((0 < arg1) && (*(iVar2 + 0x98) == 1)) {\n                arg1 = arg1 - 1;\n            }\n            if (arg1 <= unaff_RDI) {\n                *(*0x20 + -0x48) = 0x451385;\n                uVar1 = fcn.00451760(arg1);\n                return uVar1;\n            }\n            *(*0x20 + -0x48) = 0x451399;\n            in_RAX = fcn.0045e2c0(arg1, unaff_RDI);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + 0x28) = unaff_RSI;\n        *(puVar3 + -8) = 0x4513b8;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        unaff_RSI = *(puVar3 + 0x28);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 822
    },
    "00451460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00451460(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (in_EAX == -1) {\n        fcn.0040a680();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0xd8);\n    *(*(unaff_R14 + 0x30) + 0xd8) = iVar1 + -1;\n    if ((iVar1 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 204
    },
    "004514e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004514e0(void)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong *in_RAX;\n    ulong *puVar3;\n    uint64_t uVar4;\n    uint unaff_EBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x7b3b88 == 0) {\n                uVar6 = 1;\n            }\n            else {\n                uVar6 = *0x7b3b88 & 0xffffffffffffff00 | *(*(unaff_R14 + 0x30) + 0x90) != *0x7b3b88;\n            }\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + -0x19) = uVar6;\n            if (uVar6 != '\\0') {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x38) = 0x451539;\n                fcn.0040a460();\n                in_RAX = *(*0x20 + 8);\n                uVar6 = *(*0x20 + -0x19);\n            }\n            puVar3 = *0x7b3bd8;\n            puVar2 = *0x7b3be0;\n            if ((in_RAX != NULL) && (*in_RAX = 0,  puVar3 = in_RAX,  puVar2 = in_RAX,  *0x7b3bd8 != NULL)) {\n                **0x7b3be0 = in_RAX;\n                puVar3 = *0x7b3bd8;\n                puVar2 = in_RAX;\n            }\n            *0x7b3be0 = puVar2;\n            *0x7b3bd8 = puVar3;\n            if (*0x7b3bd0 == NULL) {\n                *(*0x20 + -0x38) = 0x4515a8;\n                puVar3 = fcn.00414420();\n                if (puVar3 != NULL) goto code_r0x004515b1;\n            }\n            else {\n                puVar3 = *0x7b3bd0;\n                *0x7b3bd0 = **0x7b3bd0;\ncode_r0x004515b1:\n                *(*0x20 + -0x18) = puVar3;\n                *(*0x20 + -0x10) = puVar3;\n                *puVar3 = 0;\n                puVar3[2] = 0;\n                *(*0x20 + -0x38) = 0x4515cd;\n                fcn.0045dc20(uVar6, 0);\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                iVar1 = *(*0x20 + -0x10);\n                uVar6 = *(*0x20 + -0x30) >> 6;\n                if (*(iVar1 + 8) == *(*0x20 + -0x30) >> 6) {\n                    uVar6 = *(iVar1 + 8) + 1;\n                }\n                *(iVar1 + 8) = uVar6;\n                if (*(iVar1 + 0x10) < 0xfbe8) {\n                    *(iVar1 + 0x418 + *(iVar1 + 0x10)) = 0x41;\n                    uVar4 = *(iVar1 + 0x10) + 1;\n                    *(iVar1 + 0x10) = uVar4;\n                    for (uVar5 = *(*0x20 + 0x10); 0x7f < uVar5; uVar5 = uVar5 >> 7) {\n                        if (0xfbe7 < uVar4) goto code_r0x00451712;\n                        *(iVar1 + 0x418 + uVar4) = uVar5 | 0x80;\n                        uVar4 = uVar4 + 1;\n                    }\n                    if (uVar4 < 0xfbe8) {\n                        *(iVar1 + 0x418 + uVar4) = uVar5;\n                        uVar4 = uVar4 + 1;\n                        *(iVar1 + 0x10) = uVar4;\n                        for (; 0x7f < uVar6; uVar6 = uVar6 >> 7) {\n                            if (0xfbe7 < uVar4) goto code_r0x004516f5;\n                            *(iVar1 + 0x418 + uVar4) = uVar6 | 0x80;\n                            uVar4 = uVar4 + 1;\n                        }\n                        if (uVar4 < 0xfbe8) {\n                            *(iVar1 + 0x418 + uVar4) = uVar6;\n                            *(iVar1 + 0x10) = uVar4 + 1;\n                            if (*(*0x20 + -0x19) != '\\0') {\n                                *(*0x20 + -0x38) = 0x4516d9;\n                                fcn.0040a680();\n                            }\n                            return *(*0x20 + -0x18);\n                        }\n                        *(*0x20 + -0x38) = 0x4516f5;\n                        fcn.0045e240(0xfbe8);\ncode_r0x004516f5:\n                        *(*0x20 + -0x38) = 0x451705;\n                        fcn.0045e240(0xfbe8);\n                    }\n                    *(*0x20 + -0x38) = 0x451712;\n                    fcn.0045e240(0xfbe8);\ncode_r0x00451712:\n                    *(*0x20 + -0x38) = 0x45171f;\n                    fcn.0045e240(0xfbe8);\n                }\n                *(*0x20 + -0x38) = 0x45172c;\n                fcn.0045e240(0xfbe8);\n            }\n            unaff_EBX = 0x14;\n            *(*0x20 + -0x38) = 0x45173d;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_EBX;\n        *(puVar7 + -8) = 0x45174c;\n        fcn.0045bb60();\n        in_RAX = *(puVar7 + 8);\n        unaff_EBX = *(puVar7 + 0x10);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1609
    },
    "00451a60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00451a60(void)\n\n{\n    int64_t **in_RAX;\n    int64_t *piVar1;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = unaff_RBX + 7U & 0xfffffffffffffff8;\n            if ((*in_RAX == NULL) || (0xfff8 < in_RAX[1] + uVar2)) {\n                if (uVar2 < 0xfff9) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0x28) = 0x451ac8;\n                    piVar1 = fcn.00414420();\n                    if (piVar1 != NULL) {\n                        in_RAX = *(*0x20 + 8);\n                        *piVar1 = *in_RAX;\n                        *in_RAX = piVar1;\n                        in_RAX[1] = NULL;\n                        uVar2 = *(*0x20 + -0x10);\n                        goto code_r0x00451aec;\n                    }\n                    goto code_r0x00451b25;\n                }\n            }\n            else {\ncode_r0x00451aec:\n                piVar1 = in_RAX[1];\n                if (piVar1 < 0xfff8) {\n                    in_RAX[1] = piVar1 + uVar2;\n                    return *in_RAX + piVar1 + 8;\n                }\n                *(*0x20 + -0x28) = 0x451b25;\n                fcn.0045e260(0xfff8);\ncode_r0x00451b25:\n                *(*0x20 + -0x28) = 0x451b36;\n                fcn.00433c80();\n            }\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x28) = 0x451b47;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x451b57;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 670
    },
    "00451be0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00451be0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar3 = *(unaff_R14 + 0x30);\n    uVar4 = *(iVar3 + 0xa0);\n    *(iVar3 + 0xa0) = in_RAX;\n    fcn.00450c80(0);\n    *(iVar3 + 0xa0) = uVar4;\n    iVar2 = *(iVar3 + 0xd8);\n    *(iVar3 + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 291
    },
    "00451ca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00451ca0(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n            if (*(iVar1 + 0x11d8) == '\\0') {\n                *(iVar1 + 0x11d8) = 1;\n                *(iVar1 + 0x11e0) = in_XMM15;\n                return;\n            }\n            *(*0x20 + -0x20) = 0x451cf4;\n            fcn.00433c80();\n        }\n        *(puVar2 + -8) = 0x451cfa;\n        fcn.0045bb60();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 298
    },
    "00451d00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00451d00(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    if (*(iVar1 + 0x11d8) != '\\0') {\n        if (*(iVar1 + 0x11e0) == 0) {\n            fcn.00450c80(0);\n        }\n        *(iVar1 + 0x11e0) = *(iVar1 + 0x11e0) + in_RAX;\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "00451da0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00451da0(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n            if (*(iVar1 + 0x11d8) != '\\0') {\n                if (*(iVar1 + 0x11e0) != 0) {\n                    *(*0x20 + -0x10) = iVar1;\n                    *(*0x20 + -0x20) = in_XMM15;\n                    *(*0x20 + -0x20) = *(iVar1 + 0x11e0);\n                    *(*0x20 + -0x18) = *(iVar1 + 0x11e8);\n                    *(*0x20 + -0x50) = 0x451e19;\n                    fcn.00450c80(*0x20 + -0x20);\n                    iVar1 = *(*0x20 + -0x10);\n                }\n                *(iVar1 + 0x11d8) = 0;\n                return;\n            }\n            *(*0x20 + -0x50) = 0x451e45;\n            fcn.00433c80();\n        }\n        *(puVar2 + -8) = 0x451e4b;\n        fcn.0045bb60();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 430
    },
    "00451f40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00451f40(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(*(unaff_R14 + 0x30) + 0x90);\n            iVar2 = *(*(iVar1 + 0x30) + 0xa0);\n            *(iVar1 + 0xd8) = *(iVar1 + 0xd8) + 1;\n            if (*(iVar2 + 0x1230) == 0) {\n                if (*(iVar1 + 0xe0) == iVar2) {\n                    *(*0x20 + -0x38) = 0;\n                    *(*0x20 + -0x38) = *(iVar1 + 0x98);\n                    *(*0x20 + -0x68) = 0x452029;\n                    fcn.00450c80(*0x20 + -0x38);\n                    return;\n                }\n                *(iVar1 + 0xe0) = iVar2;\n                *(*0x20 + -0x30) = in_XMM15;\n                *(*0x20 + -0x30) = *(iVar1 + 0x98);\n                *(*0x20 + -0x28) = *(iVar1 + 0xd8);\n                *(*0x20 + -0x68) = 0x45206e;\n                fcn.00450c80(*0x20 + -0x30);\n                return;\n            }\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x18) = in_XMM15;\n            *(*0x20 + -0x20) = *(iVar1 + 0x98);\n            *(*0x20 + -0x18) = *(iVar1 + 0xd8);\n            if (*(iVar2 + 0x1230) < 4) {\n                *(*0x20 + -0x10) = *(*(iVar2 + 0x1230) * 8 + 0x7c3c48);\n                *(*0x20 + -0x68) = 0x451fe8;\n                fcn.00450c80(*0x20 + -0x20);\n                return;\n            }\n            *(*0x20 + -0x68) = 0x452085;\n            fcn.0045e240(4);\n        }\n        *(puVar3 + -8) = 0x45208b;\n        fcn.0045bb60();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 689
    },
    "00452360": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00452360(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar3 = *(unaff_R14 + 0x30);\n    uVar4 = *(iVar3 + 0xa0);\n    *(iVar3 + 0xa0) = in_RAX;\n    fcn.00450c80(0);\n    *(iVar3 + 0xa0) = uVar4;\n    iVar2 = *(iVar3 + 0xd8);\n    *(iVar3 + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 290
    },
    "004543e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004543e0(ulong arg1)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uchar *puVar3;\n    uint uVar4;\n    int64_t in_RAX;\n    char cVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uchar uVar7;\n    int64_t unaff_RDI;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            uVar1 = *(in_RAX + 0x27);\n            if (uVar1 < 6) {\n                uVar9 = 0;\n            }\n            else {\n                uVar2 = *(in_RAX + 0x27 + *(in_RAX + 0x1c) * 4 + 0x15);\n                uVar9 = uVar2 + *(unaff_RBX + 0x130) & (uVar2 == 0xffffffff) - 1;\n            }\n            if (uVar9 == 0) {\n                return;\n            }\n            *(*0x20 + -0x40) = uVar9;\n            *(*0x20 + 0x18) = arg1;\n            if (uVar1 < 7) {\n                uVar9 = 0;\n            }\n            else {\n                uVar2 = *(in_RAX + 0x27 + *(in_RAX + 0x1c) * 4 + 0x19);\n                uVar9 = uVar2 + *(unaff_RBX + 0x130) & (uVar2 == 0xffffffff) - 1;\n            }\n            *(*0x20 + -0x48) = uVar9;\n            *(*0x20 + -0x90) = 0x4544b8;\n            uVar4 = fcn.0044dda0(3);\n            puVar3 = *(*0x20 + -0x48);\n            if (puVar3 == NULL) {\n                uVar7 = 0xff;\n            }\n            else {\n                uVar7 = *puVar3;\n            }\n            *(*0x20 + -0x5c) = uVar7;\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0xc) = 0;\n            *(*0x20 + -0x20) = 0x4548e0;\n            *(*0x20 + -0x18) = puVar3;\n            *(*0x20 + -0x10) = uVar4;\n            *(*0x20 + -0xc) = uVar7;\n            *(*0x20 + -0x38) = in_XMM15;\n            *(*0x20 + -0x28) = 0;\n            *(*0x20 + -0x38) = 0x454800;\n            *(*0x20 + -0x30) = *(*0x20 + 0x18);\n            *(*0x20 + -0x28) = *0x20 + -0x20;\n            *(*0x20 + -0x5b) = 1;\n            unaff_RDI = *(*0x20 + -0x40);\n            uVar9 = 0;\n            cVar5 = '\\0';\n            while (uVar9 < 0xab) {\n                *(*0x20 + -0x5a) = cVar5;\n                uVar1 = *(unaff_RDI + uVar9);\n                uVar8 = uVar9 + 1;\n                *(*0x20 + -0x58) = uVar8;\n                if (uVar1 < 0xfd) {\n                    if (uVar1 == 0xfb) {\n                        if (*(*0x20 + -0x5b) == '\\0') {\n                            *(*0x20 + -0x90) = 0x45459d;\n                            fcn.00435540();\n                            *(*0x20 + -0x90) = 0x4545ae;\n                            fcn.00435e40();\n                            *(*0x20 + -0x90) = 0x4545b3;\n                            fcn.004355c0();\n                        }\n                        *(*0x20 + -0x90) = 0x4545b8;\n                        fcn.00435540();\n                        unaff_RBX = 1;\n                        *(*0x20 + -0x90) = 0x4545c9;\n                        fcn.00435e40();\n                        *(*0x20 + -0x90) = 0x4545ce;\n                        fcn.004355c0();\n                        uVar9 = *(*0x20 + -0x58);\n                        cVar5 = *(*0x20 + -0x5a);\n                    }\n                    else if (uVar1 == 0xfc) {\n                        if (*(*0x20 + -0x5b) == '\\0') {\n                            *(*0x20 + -0x90) = 0x4545fc;\n                            fcn.00435540();\n                            *(*0x20 + -0x90) = 0x45460d;\n                            fcn.00435e40();\n                            *(*0x20 + -0x90) = 0x454612;\n                            fcn.004355c0();\n                        }\n                        *(*0x20 + -0x90) = 0x454617;\n                        fcn.00435540();\n                        unaff_RBX = 3;\n                        *(*0x20 + -0x90) = 0x454628;\n                        fcn.00435e40();\n                        *(*0x20 + -0x90) = 0x45462d;\n                        fcn.004355c0();\n                        uVar9 = *(*0x20 + -0x58);\n                        cVar5 = *(*0x20 + -0x5a);\n                    }\n                    else {\ncode_r0x004546be:\n                        *(*0x20 + -0x59) = uVar1;\n                        *(*0x20 + -0x50) = uVar9;\n                        if (*(*0x20 + -0x5b) == '\\0') {\n                            *(*0x20 + -0x90) = 0x4546d5;\n                            fcn.00435540();\n                            unaff_RBX = 2;\n                            *(*0x20 + -0x90) = 0x4546e6;\n                            fcn.00435e40();\n                            *(*0x20 + -0x90) = 0x4546eb;\n                            fcn.004355c0();\n                            uVar9 = *(*0x20 + -0x50);\n                            unaff_RDI = *(*0x20 + -0x40);\n                            uVar8 = *(*0x20 + -0x58);\n                        }\n                        if (0xaa < uVar8) {\n                            *(*0x20 + -0x90) = 0x4547a5;\n                            fcn.0045e240(0xab);\n                            break;\n                        }\n                        unaff_RBX = *(uVar9 + 1 + unaff_RDI);\n                        *(*0x20 + -0x90) = 0x45472b;\n                        (**(*0x20 + -0x38))();\n                        if (*(*0x20 + -0x59) < *(*0x20 + -0x5c)) {\n                            cVar5 = *(*0x20 + -0x5a);\n                        }\n                        else {\n                            cVar5 = *(*0x20 + -0x5a) + '\\x01';\n                        }\n                        uVar9 = *(*0x20 + -0x50) + 2;\n                    }\ncode_r0x0045477d:\n                    *(*0x20 + -0x5b) = 0;\n                }\n                else {\n                    if (uVar1 == 0xfd) {\n                        *(*0x20 + -0x90) = 0x454758;\n                        fcn.00435540();\n                        unaff_RBX = 1;\n                        *(*0x20 + -0x90) = 0x454769;\n                        fcn.00435e40();\n                        *(*0x20 + -0x90) = 0x45476e;\n                        fcn.004355c0();\n                        uVar9 = *(*0x20 + -0x58);\n                        cVar5 = *(*0x20 + -0x5a);\n                        goto code_r0x0045477d;\n                    }\n                    if (uVar1 != 0xfe) {\n                        if (uVar1 == 0xff) {\n                            return;\n                        }\n                        goto code_r0x004546be;\n                    }\n                    if (*(*0x20 + -0x5b) == '\\0') {\n                        *(*0x20 + -0x90) = 0x454665;\n                        fcn.00435540();\n                        *(*0x20 + -0x90) = 0x454676;\n                        fcn.00435e40();\n                        *(*0x20 + -0x90) = 0x45467b;\n                        fcn.004355c0();\n                    }\n                    *(*0x20 + -0x90) = 0x454685;\n                    fcn.00435540();\n                    unaff_RBX = 1;\n                    *(*0x20 + -0x90) = 0x454696;\n                    fcn.00435e40();\n                    *(*0x20 + -0x90) = 0x45469b;\n                    fcn.004355c0();\n                    *(*0x20 + -0x5b) = 1;\n                    uVar9 = *(*0x20 + -0x58);\n                    cVar5 = *(*0x20 + -0x5a);\n                }\n                unaff_RDI = *(*0x20 + -0x40);\n            }\n            arg1 = 0xab;\n            *(*0x20 + -0x90) = 0x4547af;\n            in_RAX = fcn.0045e240(0xab);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + 0x20) = unaff_RDI;\n        *(puVar6 + -8) = 0x4547c9;\n        fcn.0045bb60();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_RDI = *(puVar6 + 0x20);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 2536
    },
    "00454da0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00454da0(ulong param_1, ulong param_2)\n\n{\n    ulong arg1;\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    arg1 = *(in_RAX + 0x128);\n    iVar2 = fcn.0044cfe0();\n    if (iVar2 == 0) {\n        cVar1 = '\\0';\n    }\n    else {\n        cVar1 = fcn.00455b00(in_RAX, param_2, 0);\n    }\n    if ((cVar1 != '\\0') && (*(in_RAX + 0x98) != 1)) {\n        iVar2 = fcn.00454e40(arg1);\n    }\n    return iVar2;\n}\n",
        "token_count": 229
    },
    "00455460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00455460(ulong arg1)\n\n{\n    ulong arg1_00;\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t unaff_RBX;\n    ulong unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    ulong uStack0000000000000028;\n    \n    uStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00435540();\n    fcn.00435e40();\n    fcn.00435c40();\n    fcn.00435e40();\n    fcn.004355c0();\n    for (uVar3 = 0; uVar3 < unaff_RBX; uVar3 = uVar3 + 1) {\n        arg1_00 = *(in_RAX + uVar3 * 8);\n        uVar4 = uVar3;\n        fcn.0044cfe0();\n        cVar1 = fcn.00455bc0(uVar4 & 0xffffff00 | uVar3 == 0);\n        if (cVar1 != '\\0') {\n            fcn.00455620(arg1_00);\n        }\n    }\n    if (unaff_RBX == 100) {\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.004355c0();\n    }\n    iVar2 = fcn.0044cfe0();\n    if (iVar2 == 0) {\n        cVar1 = '\\0';\n    }\n    else {\n        cVar1 = fcn.00455bc0();\n    }\n    if ((cVar1 != '\\0') && (unaff_RDI != 1)) {\n        iVar2 = fcn.00454e40(uStack0000000000000028);\n    }\n    return iVar2;\n}\n",
        "token_count": 475
    },
    "00455b00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.00455b00(int64_t arg1, ulong noname_1, ulong arg3)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    uint32_t unaff_EDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n        unaff_EDI = unaff_EDI & 0xff;\n    }\n    iVar1 = *(unaff_R14 + 0x30);\n    if (((1 < *(iVar1 + 0xc4)) && (arg1 != 0)) && ((*(iVar1 + 0x90) == arg1 || (arg1 == *(iVar1 + 0x98))))) {\n        return 1;\n    }\n    uVar2 = fcn.00455bc0(unaff_EDI);\n    return uVar2;\n}\n",
        "token_count": 218
    },
    "00455bc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nbool fcn.00455bc0(uint64_t param_1)\n\n{\n    uint8_t uVar1;\n    int64_t in_RAX;\n    int64_t *piVar2;\n    uint64_t uVar3;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    char unaff_SIL;\n    char unaff_DIL;\n    int64_t unaff_R14;\n    bool bVar4;\n    int64_t iStack32;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n        param_1 = param_1 & 0xff;\n    }\n    arg2 = *0x79528c;\n    uVar1 = *(*(unaff_R14 + 0x30) + 0xf9);\n    uVar3 = uVar1;\n    if ((uVar1 == 0) && (arg2 = *0x79528c >> 2,  uVar3 = arg2,  1 < *(*(unaff_R14 + 0x30) + 0xc4))) {\n        arg2 = 2;\n        uVar3 = arg2;\n    }\n    if (1 < uVar3) {\n        return true;\n    }\n    if (in_RAX == 0) {\n        return false;\n    }\n    if ((((unaff_DIL == '\\x15') && (unaff_SIL != '\\t')) && (unaff_SIL != '\\x12')) && (unaff_SIL != '\\x0e')) {\n        return false;\n    }\n    uVar3 = param_1;\n    piVar2 = fcn.0044d760();\n    if ((((unaff_RBX == 0xf) && (uVar3 = 0x2e656d69746e7572,  *piVar2 == 0x2e656d69746e7572)) &&\n        ((*(piVar2 + 1) == 0x61706f67 && ((*(piVar2 + 0xc) == 0x696e && (*(piVar2 + 0xe) == 'c')))))) &&\n       (arg2 = param_1 & 0xff,  param_1 == '\\0')) {\n        return true;\n    }\n    fcn.00402ea0(uVar3, arg2);\n    if (iStack32 < 0) {\n        bVar4 = false;\n    }\n    else {\n        if (unaff_RBX < 8) {\n            bVar4 = false;\n        }\n        else {\n            bVar4 = *piVar2 == 0x2e656d69746e7572;\n        }\n        if (bVar4) {\n            if (((unaff_RBX < 9) || (*piVar2 != 0x2e656d69746e7572)) || (*(piVar2 + 1) < 0x41)) {\n                bVar4 = false;\n            }\n            else {\n                bVar4 = *(piVar2 + 1) < 0x5b;\n            }\n        }\n        else {\n            bVar4 = true;\n        }\n    }\n    return bVar4;\n}\n",
        "token_count": 715
    },
    "00456000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00456000(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0x90);\n    if ((iVar1 != 0) && (in_RAX != iVar1)) {\n        fcn.00435540();\n        fcn.004357a0();\n        fcn.004355c0();\n        fcn.00455dc0();\n        fcn.00455100(0);\n    }\n    fcn.004372e0();\n    return;\n}\n",
        "token_count": 184
    },
    "00456540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00456540(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    ulong uStack64;\n    ulong uStack56;\n    ulong uStack48;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (*0x7ad070 != 0) {\n        uStack64 = SUB168(in_XMM15, 0);\n        uStack48 = SUB168(in_XMM15 >> 0x40, 0);\n        uStack56 = uStack64;\n        for (iVar1 = 0; (iVar1 < 0x20 && (*(in_RAX + iVar1 * 8) != 0)); iVar1 = iVar1 + 1) {\n            fcn.00456660(&uStack64);\n        }\n        uStack64 = 0;\n        fcn.00456860();\n        return;\n    }\n    for (iVar1 = 0; (iVar1 < 0x20 && (*(in_RAX + iVar1 * 8) != 0)); iVar1 = iVar1 + 1) {\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.00435ca0();\n        fcn.004357a0();\n        fcn.004355c0();\n    }\n    return;\n}\n",
        "token_count": 338
    },
    "00456660": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00456660(ulong *arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    *arg1 = in_RAX;\n    iVar1 = 0;\n    do {\n        if (unaff_RBX < iVar1) {\n            return iVar1;\n        }\n        fcn.00456860();\n        if (arg1[3] == 0) {\n            fcn.00435540();\n            fcn.00435e40();\n            fcn.004355c0();\n        }\n        else {\n            fcn.0044c080();\n            fcn.00435540();\n            fcn.00435e40();\n            fcn.004357a0();\n            fcn.004355c0();\n        }\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.004355c0();\n        if (arg1[1] != 0) {\n            fcn.0044c080();\n            fcn.00435540();\n            fcn.00435e40();\n            fcn.00435e40();\n            fcn.00435b40();\n            fcn.00435760();\n            fcn.004355c0();\n        }\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.00435ca0();\n        fcn.004357a0();\n        fcn.004355c0();\n        iVar1 = iVar1 + 1;\n    } while (arg1[5] != 0);\n    return iVar1;\n}\n",
        "token_count": 407
    },
    "00456860": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00456860(void)\n\n{\n    code *pcVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if ((*0x801a0c == 0) && (*(*(unaff_R14 + 0x30) + 0x90) == unaff_R14)) {\n        pcVar1 = vtable.Ld_M_fF.0;\n    }\n    else {\n        pcVar1 = 0x7194e0;\n    }\n    (**pcVar1)(pcVar1, pcVar1);\n    return;\n}\n",
        "token_count": 167
    },
    "004568e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004568e0(int64_t arg1)\n\n{\n    ulong in_RAX;\n    code *pcVar1;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*0x7ad078 == 0) {\n                return;\n            }\n            if ((*0x801a0c == 0) && (unaff_RDI = unaff_R14,  *(*(unaff_R14 + 0x30) + 0x90) == unaff_R14)) {\n                pcVar1 = vtable.Ld_M_fF.0;\n            }\n            else {\n                pcVar1 = 0x7194e0;\n            }\n            if (arg1 != 0) {\n                *(*0x20 + -0x28) = in_RAX;\n                *(*0x20 + -0x20) = 0;\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = arg1;\n                pcVar1 = *pcVar1;\n                *(*0x20 + -0x40) = 0x456967;\n                (*pcVar1)();\n                return;\n            }\n            arg1 = 0;\n            *(*0x20 + -0x40) = 0x456985;\n            in_RAX = fcn.0045e240(0);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x45699f;\n        fcn.0045bb60();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 603
    },
    "004569c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.004569c0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar1 = *(in_RAX + 0x28);\n            *(*0x20 + -0x20) = 0x4569e5;\n            fcn.00456b80();\n            *(*0x20 + -0x20) = 0x4569ea;\n            iVar2 = fcn.004572e0(param_1, param_2, param_3, param_4);\n            if ((*(*(*0x20 + 8) + 0x14) & 2) == 0) {\n                return iVar2;\n            }\n            if (uVar1 != 0) {\n                return iVar2 + (-(uVar1 - 1) >> 0x3f & 1);\n            }\n            param_1 = 0;\n            *(*0x20 + -0x20) = 0x456a34;\n            in_RAX = fcn.0045e300(0);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x456a3f;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 464
    },
    "00457600": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00457600(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint uVar4;\n    ulong in_RAX;\n    ulong uVar5;\n    uint64_t uVar6;\n    int64_t *piVar7;\n    ulong *puVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    int64_t *piVar13;\n    int64_t iVar14;\n    int64_t iVar15;\n    uchar *puVar16;\n    uchar *unaff_RBP;\n    uint64_t uVar17;\n    int64_t *piVar18;\n    int64_t iVar19;\n    int64_t iVar20;\n    int64_t arg4;\n    int64_t iVar21;\n    int64_t iVar22;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar16 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x238 && *0x20 + -0x238 != *(unaff_R14 + 0x10)) {\n            puVar16 = *0x20 + -0x2b8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x79b0a0 == 0) {\n                return in_RAX;\n            }\n            *(*0x20 + -0x1b8) = in_XMM15;\n            *(*0x20 + -0x1a8) = in_XMM15;\n            *(*0x20 + -0x198) = in_XMM15;\n            if (*0x79afd8 < 9) {\n                *(*0x20 + -0x2c8) = unaff_RBP;\n                *(*0x20 + -0x2c0) = 0x45767a;\n                fcn.0045e4b8();\n                unaff_RBP = *(*0x20 + -0x2c8);\n                *(*0x20 + -0x1a8) = *0x20 + -0xf8;\n            }\n            *(*0x20 + -0x2c0) = 0x4576a5;\n            uVar5 = fcn.0040d140(*0x20 + -0x1b8);\n            if (*0x7ad098 == NULL) {\n                piVar18 = NULL;\n                piVar7 = NULL;\n                piVar13 = NULL;\n            }\n            else {\n                piVar7 = **0x7ad098;\n                piVar18 = (*0x7ad098)[1];\n                piVar13 = (*0x7ad098)[2];\n            }\n            if (piVar18 != NULL) {\n                *(*0x20 + -0x238) = uVar5;\n                iVar20 = *piVar7;\n                iVar14 = (-(piVar13 + -1) >> 0x3f & 8) + piVar7;\n                *(*0x20 + -0x1f0) = iVar14;\n                iVar22 = piVar18 + -1;\n                *(*0x20 + -0x240) = iVar22;\n                iVar9 = 0;\n                do {\n                    if (iVar22 <= iVar9) {\n                        return uVar5;\n                    }\n                    *(*0x20 + -0x248) = iVar9;\n                    *(*0x20 + -0x218) = iVar20;\n                    iVar19 = *(iVar14 + iVar9 * 8);\n                    *(*0x20 + -0x1f8) = iVar19;\n                    arg4 = *(iVar20 + 0x150);\n                    *(*0x20 + -0x200) = arg4;\n                    iVar21 = *(iVar20 + 0x158);\n                    *(*0x20 + -0x250) = iVar21;\n                    iVar15 = 0;\n                    while (iVar15 < iVar21) {\n                        *(*0x20 + -600) = iVar15;\n                        uVar1 = *(arg4 + iVar15 * 4);\n                        if (*(iVar20 + 0x210) == 0) {\n                            iVar22 = uVar1 + *(iVar20 + 0x118);\n                        }\n                        else {\n                            *(*0x20 + -0x2c0) = 0x457905;\n                            piVar7 = fcn.0040e660(uVar1);\n                            iVar22 = *piVar7;\n                        }\n                        *(*0x20 + -0x220) = iVar22;\n                        uVar11 = *(iVar22 + 0x10);\n                        *(*0x20 + -0x2c0) = 0x45792b;\n                        piVar7 = fcn.0040e660(uVar11);\n                        uVar12 = piVar7[1];\n                        iVar22 = *piVar7;\n                        iVar9 = *(*0x20 + -0x220);\n                        for (iVar14 = 0; iVar14 < uVar12; iVar14 = iVar14 + 1) {\n                            if (*(iVar22 + iVar14 * 8) == iVar9) goto code_r0x0045788a;\n                        }\n                        uVar10 = uVar12 + 1;\n                        iVar14 = iVar22;\n                        uVar6 = uVar12;\n                        uVar17 = piVar7[2];\n                        if (piVar7[2] < uVar10) {\n                            *(*0x20 + -0x270) = uVar12;\n                            *(*0x20 + -0x2c0) = 0x457965;\n                            iVar14 = fcn.00447360(uVar12);\n                            uVar10 = iVar22 + 1;\n                            iVar9 = *(*0x20 + -0x220);\n                            uVar6 = *(*0x20 + -0x270);\n                            uVar11 = uVar12;\n                            uVar17 = uVar12;\n                        }\n                        *(*0x20 + -0x210) = iVar14;\n                        *(*0x20 + -0x260) = uVar10;\n                        *(*0x20 + -0x268) = uVar17;\n                        iVar22 = iVar14 + uVar6 * 8;\n                        if (*0x801c20 == 0) {\n                            *(iVar14 + uVar6 * 8) = iVar9;\n                        }\n                        else {\n                            *(*0x20 + -0x2c0) = 0x4579aa;\n                            fcn.0045dec0(uVar11, iVar9, uVar10, iVar22);\n                        }\n                        uVar12 = *(iVar9 + 0x10);\n                        *(*0x20 + -0x2c0) = 0x4579c5;\n                        puVar8 = fcn.0040e9a0(uVar12);\n                        puVar8[1] = *(*0x20 + -0x260);\n                        puVar8[2] = *(*0x20 + -0x268);\n                        if (*0x801c20 == 0) {\n                            *puVar8 = *(*0x20 + -0x210);\n                        }\n                        else {\n                            *(*0x20 + -0x2c0) = 0x457a05;\n                            fcn.0045dec0(uVar12, *(*0x20 + -0x210), uVar10, iVar22);\n                        }\ncode_r0x0045788a:\n                        uVar5 = *(*0x20 + -0x238);\n                        iVar9 = *(*0x20 + -0x248);\n                        iVar14 = *(*0x20 + -0x1f0);\n                        iVar22 = *(*0x20 + -0x240);\n                        iVar19 = *(*0x20 + -0x1f8);\n                        iVar20 = *(*0x20 + -0x218);\n                        arg4 = *(*0x20 + -0x200);\n                        iVar21 = *(*0x20 + -0x250);\n                        iVar15 = *(*0x20 + -600) + 1;\n                    }\n                    if (*(iVar19 + 0x210) == 0) {\n                        uVar10 = 0;\n                        *(*0x20 + -0x2c0) = 0x457777;\n                        uVar5 = fcn.0040d140(0);\n                        uVar11 = *0x7adae0;\n                        uVar12 = *0x7adae8 + 1;\n                        uVar6 = *0x7adae0;\n                        uVar17 = *0x7adae8;\n                        if (*0x7adaf0 < uVar12) {\n                            *(*0x20 + -0x230) = uVar5;\n                            *(*0x20 + -0x2c0) = 0x4577af;\n                            uVar10 = *0x7adae8;\n                            uVar6 = fcn.00447360(*0x7adae8);\n                            uVar17 = uVar6;\n                            *0x7adaf0 = uVar10;\n                            if (*0x801c20 != 0) {\n                                *(*0x20 + -0x2c0) = 0x4577d4;\n                                uVar6 = fcn.0045dda0(uVar10, uVar12, iVar20, arg4);\n                                uVar17 = *0x7adae0;\n                            }\n                            *0x7adae0 = uVar17;\n                            uVar5 = *(*0x20 + -0x230);\n                            uVar17 = uVar11;\n                        }\n                        *0x7adae8 = uVar17 + 1;\n                        if (*0x801c20 == 0) {\n                            *(uVar6 + uVar17 * 8) = uVar5;\n                            iVar22 = *(*0x20 + -0x1f8);\n                            *(iVar22 + 0x210) = uVar5;\n                        }\n                        else {\n                            *(*0x20 + -0x2c0) = 0x457814;\n                            fcn.0045dda0(uVar10, *0x7adae8, iVar20, arg4);\n                            iVar22 = *(*0x20 + -0x1f8);\n                            *(*0x20 + -0x2c0) = 0x45782e;\n                            fcn.0045dda0(iVar22, iVar22 + 0x210, iVar20, arg4);\n                        }\n                        iVar9 = *(iVar22 + 0x150);\n                        *(*0x20 + -0x200) = iVar9;\n                        iVar14 = *(iVar22 + 0x158);\n                        *(*0x20 + -0x250) = iVar14;\n                        iVar20 = 0;\n                        while (iVar20 < iVar14) {\n                            *(*0x20 + -600) = iVar20;\n                            iVar2 = *(iVar9 + iVar20 * 4);\n                            *(*0x20 + -0x274) = iVar2;\n                            iVar20 = iVar2 + *(iVar22 + 0x118);\n                            *(*0x20 + -0x208) = iVar20;\n                            uVar1 = *(iVar20 + 0x10);\n                            *(*0x20 + -0x2c0) = 0x457a66;\n                            piVar7 = fcn.0040e660(uVar1);\n                            iVar22 = *piVar7;\n                            *(*0x20 + -0x210) = iVar22;\n                            iVar9 = piVar7[1];\n                            *(*0x20 + -0x260) = iVar9;\n                            iVar14 = 0;\n                            while (iVar14 < iVar9) {\n                                *(*0x20 + -0x268) = iVar14;\n                                *(*0x20 + -0x228) = *(iVar22 + iVar14 * 8);\n                                *(*0x20 + -0x1e8) = in_XMM15;\n                                *(*0x20 + -0x1d8) = in_XMM15;\n                                *(*0x20 + -0x1c8) = in_XMM15;\n                                *(*0x20 + -0x2c8) = unaff_RBP;\n                                *(*0x20 + -0x2c0) = 0x457b4f;\n                                fcn.0045e4d9();\n                                unaff_RBP = *(*0x20 + -0x2c8);\n                                *(*0x20 + -0x1d8) = *0x20 + -0x188;\n                                *(*0x20 + -0x2c0) = 0x457b68;\n                                uVar4 = fcn.0044c360();\n                                *(*0x20 + -0x1dc) = uVar4;\n                                *(*0x20 + -0x2c0) = 0x457b8c;\n                                cVar3 = fcn.00457be0(*0x20 + -0x1e8);\n                                if (cVar3 != '\\0') {\n                                    uVar5 = *(*0x20 + -0x228);\n                                    goto code_r0x00457a97;\n                                }\n                                iVar22 = *(*0x20 + -0x210);\n                                iVar9 = *(*0x20 + -0x260);\n                                iVar14 = *(*0x20 + -0x268) + 1;\n                            }\n                            uVar5 = *(*0x20 + -0x208);\ncode_r0x00457a97:\n                            *(*0x20 + -0x228) = uVar5;\n                            uVar12 = *(*0x20 + -0x274);\n                            *(*0x20 + -0x2c0) = 0x457abe;\n                            puVar8 = fcn.0040e9a0(uVar12);\n                            if (*0x801c20 == 0) {\n                                *puVar8 = *(*0x20 + -0x228);\n                            }\n                            else {\n                                *(*0x20 + -0x2c0) = 0x457ae9;\n                                fcn.0045dec0(uVar12, *(*0x20 + -0x228), iVar20, arg4);\n                            }\n                            iVar22 = *(*0x20 + -0x1f8);\n                            iVar9 = *(*0x20 + -0x200);\n                            iVar14 = *(*0x20 + -0x250);\n                            iVar20 = *(*0x20 + -600) + 1;\n                        }\n                        uVar5 = *(*0x20 + -0x238);\n                        iVar9 = *(*0x20 + -0x248);\n                        iVar14 = *(*0x20 + -0x1f0);\n                        iVar22 = *(*0x20 + -0x240);\n                        iVar19 = *(*0x20 + -0x1f8);\n                    }\n                    iVar9 = iVar9 + 1;\n                    iVar20 = iVar19;\n                } while( true );\n            }\n            *(*0x20 + -0x2c0) = 0x457bc5;\n            fcn.0045e240(0);\n        }\n        *(puVar16 + -8) = 0x457bcb;\n        in_RAX = fcn.0045bb60();\n        *0x20 = puVar16;\n    } while( true );\n}\n",
        "token_count": 3377
    },
    "00458da0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00458da0(void)\n\n{\n    if (*0x801c20 != '\\0') {\n        fcn.00403500();\n    }\n    fcn.004636a0();\n    return;\n}\n",
        "token_count": 48
    },
    "00458e00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00458e00(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    ulong in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    uVar1 = in_RAX;\n    if (*0x801c20 != 0) {\n        fcn.0045dda0(arg1, arg2, arg3, arg4);\n        uVar1 = *0x7ad0b0;\n    }\n    *0x7ad0b0 = uVar1;\n    return;\n}\n",
        "token_count": 172
    },
    "00458f60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00458f60(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    uint32_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar6;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x38) = 0x458f89;\n            iVar3 = fcn.0042d620();\n            *(*0x20 + -0x18) = iVar3;\n            *(*0x20 + -0x10) = iVar3 + 0x28;\n            *(*0x20 + -0x38) = 0x458fa5;\n            fcn.0040a460();\n            iVar3 = *(*0x20 + -0x18);\n            if ((*(iVar3 + 0x20) == 0) || (*(iVar3 + 0x20) == 1)) {\n                if ((*(iVar3 + 0x18) == 0) || (*(iVar3 + 0x18) == 1)) {\n                    *(iVar3 + 8) = *(*0x20 + 8);\n                    *(iVar3 + 0x30) = 0;\n                    uVar4 = *(iVar3 + 0x10);\n                    while( true ) {\n                        if ((uVar4 >> 1 & 1) == 0) {\n                            bVar6 = false;\n                        }\n                        else {\n                            LOCK();\n                            bVar6 = uVar4 == *(iVar3 + 0x10);\n                            if (bVar6) {\n                                *(iVar3 + 0x10) = uVar4 ^ 2;\n                            }\n                            bVar6 = !bVar6;\n                        }\n                        if (!bVar6) break;\n                        uVar4 = *(iVar3 + 0x10);\n                    }\n                    *(iVar3 + 0x38) = *(iVar3 + 0x38) + 1;\n                    *(iVar3 + 0x18) = 0;\n                    *(iVar3 + 0x88) = 0;\n                    *(iVar3 + 0x90) = *(iVar3 + 0x90) + 1;\n                    *(iVar3 + 0x20) = 0;\n                    *(iVar3 + 0xe0) = 0;\n                    *(iVar3 + 0xe8) = iVar3;\n                    uVar4 = *(iVar3 + 0x10);\n                    uVar1 = *(iVar3 + 0x30);\n                    if (*(iVar3 + 0x88) < 0) {\n                        uVar1 = *(iVar3 + 0x30) | 4;\n                    }\n                    while( true ) {\n                        LOCK();\n                        if (uVar4 == *(iVar3 + 0x10)) break;\n                        uVar4 = *(iVar3 + 0x10);\n                    }\n                    *(iVar3 + 0x10) = uVar4 & 2 | uVar1;\n                    *(*0x20 + -0x38) = 0x459085;\n                    fcn.0040a680();\n                    *(*0x20 + -0x38) = 0x459094;\n                    iVar2 = fcn.0042d7e0();\n                    if (iVar2 != 0) {\n                        *(*0x20 + -0x1c) = iVar2;\n                        *(*0x20 + -0x38) = 0x4590ad;\n                        fcn.0042d2e0();\n                        return 0;\n                    }\n                    return *(*0x20 + -0x18);\n                }\n                *(*0x20 + -0x38) = 0x4590e5;\n                fcn.00433c80();\n            }\n            *(*0x20 + -0x38) = 0x4590f6;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x459105;\n        fcn.0045bb60();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1041
    },
    "00459120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00459120(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x30) != '\\0') {\n                if ((*(in_RAX + 0x20) == 0) || (*(in_RAX + 0x20) == 1)) {\n                    if ((*(in_RAX + 0x18) == 0) || (*(in_RAX + 0x18) == 1)) {\n                        *(*0x20 + -0x20) = 0x45916d;\n                        fcn.0042d2e0();\n                        return;\n                    }\n                    *(*0x20 + -0x20) = 0x459188;\n                    fcn.00433c80();\n                }\n                *(*0x20 + -0x20) = 0x459199;\n                fcn.00433c80();\n            }\n            *(*0x20 + -0x20) = 0x4591aa;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x4591b5;\n        fcn.0045bb60();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 418
    },
    "004593e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004593e0(void)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int32_t iVar4;\n    int64_t in_RAX;\n    int64_t iVar5;\n    uint32_t uVar6;\n    int64_t arg2;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t iVar9;\n    uint32_t uVar10;\n    uint64_t arg3;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x10) = in_RAX + 0x28;\n            *(*0x20 + -0x40) = 0x459411;\n            fcn.0040a460();\n            iVar5 = *(*0x20 + 8);\n            if (*(iVar5 + 0x30) == '\\0') break;\n            *(*0x20 + -0x40) = 0x45960a;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + -8) = 0x459615;\n        fcn.0045bb60();\n        in_RAX = *(puVar8 + 8);\n        *0x20 = puVar8;\n    } while( true );\n    *(iVar5 + 0x30) = 1;\n    *(iVar5 + 0x38) = *(iVar5 + 0x38) + 1;\n    *(iVar5 + 0x90) = *(iVar5 + 0x90) + 1;\n    uVar10 = *(iVar5 + 0x10);\n    uVar6 = *(iVar5 + 0x30);\n    if (*(iVar5 + 0x88) < 0) {\n        uVar6 = *(iVar5 + 0x30) | 4;\n    }\n    arg3 = uVar6 | 8;\n    if (*(iVar5 + 0xe0) < 0) {\n        uVar6 = uVar6 | 8;\n    }\n    while( true ) {\n        LOCK();\n        if (uVar10 == *(iVar5 + 0x10)) break;\n        uVar10 = *(iVar5 + 0x10);\n    }\n    *(iVar5 + 0x10) = uVar10 & 2 | uVar6;\n    do {\n        uVar2 = *(iVar5 + 0x18);\n        if (uVar2 == 1) {\n            iVar7 = 0;\n            goto code_r0x004594c2;\n        }\n        if (uVar2 == 0) {\n            iVar7 = 0;\n            goto code_r0x004594c2;\n        }\n        *(*0x20 + -0x28) = uVar2;\n        LOCK();\n        puVar1 = iVar5 + 0x18;\n        uVar3 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar2 == uVar3) * *puVar1;\n    } while (uVar2 != uVar3);\n    iVar7 = *(*0x20 + -0x28);\n    if (*(*0x20 + -0x28) == 2) {\n        iVar7 = 0;\n    }\ncode_r0x004594c2:\n    do {\n        arg2 = 0;\n        uVar2 = *(iVar5 + 0x20);\n        if (uVar2 == 1) {\n            iVar9 = 0;\n            goto code_r0x004594fa;\n        }\n        if (uVar2 == 0) {\n            iVar9 = 0;\n            goto code_r0x004594fa;\n        }\n        *(*0x20 + -0x28) = uVar2;\n        LOCK();\n        puVar1 = iVar5 + 0x20;\n        uVar3 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar2 == uVar3) * *puVar1;\n        if (uVar2 == uVar3) {\n            iVar9 = *(*0x20 + -0x28);\n            if (*(*0x20 + -0x28) == 2) {\n                iVar9 = arg2;\n            }\ncode_r0x004594fa:\n            *(*0x20 + -0x18) = iVar7;\n            *(*0x20 + -0x20) = iVar9;\n            if (*(iVar5 + 0x58) != 0) {\n                *(*0x20 + -0x40) = 0x459514;\n                fcn.0044eb80();\n                if (*0x801c20 == 0) {\n                    iVar5 = *(*0x20 + 8);\n                    *(iVar5 + 0x58) = 0;\n                }\n                else {\n                    arg2 = 0;\n                    *(*0x20 + -0x40) = 0x459545;\n                    iVar5 = fcn.0045dec0(*(*0x20 + 8) + 0x58, 0, arg3, in_R9);\n                }\n            }\n            if (*(iVar5 + 0xb0) != 0) {\n                *(*0x20 + -0x40) = 0x459568;\n                fcn.0044eb80();\n                if (*0x801c20 == 0) {\n                    *(*(*0x20 + 8) + 0xb0) = 0;\n                }\n                else {\n                    *(*0x20 + -0x40) = 0x459596;\n                    fcn.0045dea0(0, arg2, arg3, in_R9);\n                }\n            }\n            *(*0x20 + -0x40) = 0x4595a5;\n            fcn.0040a680();\n            iVar4 = *0x801a00;\n            if (*(*0x20 + -0x18) != 0) {\n                LOCK();\n                *0x801a00 = *0x801a00 + -1;\n                *(*0x20 + -0x40) = 0x4595ca;\n                fcn.00436820(iVar4);\n            }\n            iVar4 = *0x801a00;\n            if (*(*0x20 + -0x20) != 0) {\n                LOCK();\n                *0x801a00 = *0x801a00 + -1;\n                *(*0x20 + -0x40) = 0x4595ef;\n                fcn.00436820(iVar4);\n            }\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 1585
    },
    "00459700": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.00459700(ulong param_1, int64_t param_2)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    char cVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    int64_t *unaff_R14;\n    uchar auStackX8 [32];\n    int64_t iStack56;\n    \n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + 1;\n    if (auStackX8 <= unaff_R14[0xe]) {\n        unaff_R14[0x15] = 0;\n        iVar5 = *(unaff_R14[6] + 0xb0);\n        *(unaff_R14[6] + 0xb0) = 0;\n        cVar3 = fcn.0043df20();\n        if (cVar3 != '\\0') {\n            if (*0x7aa444 != '\\0') {\n                fcn.0045ba20();\n            }\n            if (*0x7b3b90 != '\\0') {\n                iVar2 = *(unaff_R14[6] + 0xa0);\n                if ((iVar2 != iVar5) || (*(iVar2 + 0x14) != *(unaff_R14[6] + 0x26c))) {\n                    fcn.0045ba20();\n                }\n            }\n            piVar1 = *(unaff_R14[6] + 0xa0) + 0x14;\n            *piVar1 = *piVar1 + 1;\n            fcn.00438120(2);\n            unaff_R14[0xe] = 0;\n            *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + -1;\n            if (*(unaff_R14 + 0xb1) == '\\0') {\n                unaff_R14[2] = *unaff_R14 + 0x13a0;\n            }\n            else {\n                unaff_R14[2] = -0x522;\n            }\n            *(unaff_R14 + 0xb7) = 0;\n            if ((*0x7ae578 != '\\0') && (unaff_R14 = fcn.00456460(),  unaff_R14 == '\\0')) {\n                unaff_R14 = fcn.004366a0();\n            }\n            return unaff_R14;\n        }\n        unaff_R14[0x1a] = 0;\n        if (*0x7b3b90 != '\\0') {\n            while ((iVar5 != 0 && (param_2 = unaff_R14[6],  *(param_2 + 0x26c) == *(iVar5 + 0x14)))) {\n                iStack56 = 0x719768;\n                fcn.0045ba20();\n            }\n            fcn.0045dc20(unaff_R14, param_2);\n            unaff_R14[0x1a] = iStack56;\n        }\n        *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + -1;\n        piVar4 = fcn.0045b9a0();\n        unaff_R14[0xe] = 0;\n        piVar1 = *(unaff_R14[6] + 0xa0) + 0x14;\n        *piVar1 = *piVar1 + 1;\n        *(unaff_R14 + 0xb7) = 0;\n        return piVar4;\n    }\n    iVar5 = fcn.00433c80();\n    if (((iVar5 < 4) && (1 < *0x8019f8)) && (*0x7ae558 + *0x7ae55c + 1 < *0x8019f0)) {\n        iVar5 = *(unaff_R14[6] + 0xa0);\n        do {\n        } while (*(iVar5 + 0x194) != *(iVar5 + 0x194));\n        if ((*(iVar5 + 0x194) == *(iVar5 + 400)) && (*(iVar5 + 0x998) == 0)) {\n            return 0x1;\n        }\n        return NULL;\n    }\n    return NULL;\n}\n",
        "token_count": 972
    },
    "00459980": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00459980(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    if (((3 < in_RAX) || (*0x8019f8 < 2)) || (*0x8019f0 <= *0x7ae558 + *0x7ae55c + 1)) {\n        return 0;\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    do {\n    } while (*(iVar1 + 0x194) != *(iVar1 + 0x194));\n    if ((*(iVar1 + 0x194) == *(iVar1 + 400)) && (*(iVar1 + 0x998) == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 187
    },
    "00459ea0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00459ea0(uchar param_1)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    int64_t in_RAX;\n    int64_t **ppiVar3;\n    ulong *puVar4;\n    char cVar5;\n    uint32_t uVar6;\n    int64_t iVar7;\n    int64_t *arg1;\n    uint64_t arg1_00;\n    uint64_t arg2;\n    ulong uVar8;\n    ulong unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    uint64_t uVar10;\n    int64_t *piVar11;\n    uint64_t arg3;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    bool bVar12;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x78 && *0x20 + -0x78 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0xf8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if ((in_RAX != 0) && ((*(in_RAX + 0x17) & 0x1f) == 0x13)) {\n                *(*0x20 + -0x98) = in_XMM15;\n                *(*0x20 + -0x88) = in_XMM15;\n                *(*0x20 + -0x78) = in_XMM15;\n                *(*0x20 + -0x68) = in_XMM15;\n                if ((*(in_RAX + 0x14) & 1) == 0) {\n                    iVar7 = 0x38;\n                }\n                else {\n                    iVar7 = 0x48;\n                }\n                arg1_00 = *(in_RAX + 0x30);\n                if (arg1_00 < 0x100001) {\n                    *(*0x20 + -0xb0) = in_RAX;\n                    *(*0x20 + -0xc0) = iVar7 + in_RAX;\n                    *(*0x20 + -0xb8) = unaff_RBX;\n                    *(*0x20 + -200) = arg1_00;\n                    iVar7 = 0;\n                    while (iVar7 < arg1_00) {\n                        *(*0x20 + -0xd0) = iVar7;\n                        *(*0x20 + -0x100) = 0x459f65;\n                        fcn.0044e080();\n                        in_RAX = *(*0x20 + -0xb0);\n                        arg1_00 = *(*0x20 + -200);\n                        iVar7 = *(*0x20 + -0xd0) + 1;\n                    }\n                    arg2 = *(*0x20 + -0x78) + 7U & 0xfffffffffffffff8;\n                    *(*0x20 + -0x78) = arg2;\n                    *(*0x20 + -0x60) = arg2;\n                    uVar1 = *(in_RAX + 0x14);\n                    arg1_00 = uVar1;\n                    uVar2 = *(in_RAX + 0x30);\n                    piVar11 = uVar2;\n                    arg1 = (*(in_RAX + 0x32) & 0x7fff) + uVar2 & 0xffff;\n                    if (piVar11 <= arg1) {\n                        arg4 = uVar2;\n                        arg3 = piVar11 << 3;\n                        uVar10 = piVar11 + -0x20000 >> 0x3f & arg3;\n                        arg1 = arg1 - arg4;\n                        if (arg1 == 0x1) {\n                            if ((uVar1 & 1) == 0) {\n                                iVar7 = 0x38;\n                            }\n                            else {\n                                iVar7 = 0x48;\n                            }\n                            arg1 = *(iVar7 + in_RAX + uVar10);\n                            if (*arg1 == 8) {\n                                if ((uVar1 & 1) == 0) {\n                                    iVar7 = 0x38;\n                                }\n                                else {\n                                    iVar7 = 0x48;\n                                }\n                                uVar6 = *(*(iVar7 + in_RAX + uVar10) + 0x17) & 0x1f;\n                                arg1 = uVar6;\n                                cVar5 = uVar6;\n                                if ((cVar5 != '\\r') && (cVar5 != '\\x0e')) {\n                                    if (*0x795388 == 0) {\n                                        *(*0x20 + -0x78) = arg2 + 8;\n                                    }\n                                    arg1 = (*(*0x20 + -0x78) + 7U & 0xfffffffffffffff8) + *(*0x20 + -0x70);\n                                    if (arg1 < 0x201) {\n                                        *(*0x20 + -0x100) = 0x45a09c;\n                                        fcn.0040a460();\n                                        iVar7 = *0x801988;\n                                        *(*0x20 + -0xa8) = *(*0x20 + -0xb8);\n                                        *(*0x20 + -0xa0) = 0;\n                                        *(*0x20 + -0x100) = 0x45a0c5;\n                                        ppiVar3 = fcn.0040d560(*0x20 + -0xa8);\n                                        arg1 = *ppiVar3;\n                                        if (iVar7 != '\\0') {\n                                            *(*0x20 + -0xd8) = arg1;\n                                            *(*0x20 + -0x100) = 0x45a265;\n                                            fcn.0040a680();\n                                            return *(*0x20 + -0xd8) * 5 + 0x460f60;\n                                        }\n                                        iVar7 = *0x801988;\n                                        if (*0x801988 == 0) {\n                                            *(*0x20 + -0x100) = 0x45a0df;\n                                            iVar7 = fcn.0040d0c0();\n                                            if (*0x801c20 != 0) {\n                                                *(*0x20 + -0x100) = 0x45a0fd;\n                                                fcn.0045dda0(arg1, arg2, arg3, arg4);\n                                                iVar7 = *0x801988;\n                                            }\n                                        }\n                                        *0x801988 = iVar7;\n                                        bVar12 = *0x801990 < 2000;\n                                        if (*0x801990 < 2000) {\n                                            *(*0x20 + -0x108) = unaff_RBP;\n                                            *(*0x20 + -0x100) = 0x45a12f;\n                                            iVar7 = fcn.0045e4f0();\n                                            unaff_RBP = *(*0x20 + -0x108);\n                                            uVar8 = *(*0x20 + -0xb8);\n                                            *(*0x20 + -0x58) = uVar8;\n                                            *(*0x20 + -0x48) = *(*0x20 + -0x98);\n                                            *(*0x20 + -0x44) = *(*0x20 + -0x94);\n                                            *(*0x20 + -0x40) = *(*0x20 + -0x90);\n                                            *(*0x20 + -0x3c) = *(*0x20 + -0x8c);\n                                            *(*0x20 + -0x38) = *(*0x20 + -0x88);\n                                            *(*0x20 + -0x34) = *(*0x20 + -0x84);\n                                            *(*0x20 + -0x30) = *(*0x20 + -0x80);\n                                            *(*0x20 + -0x2c) = *(*0x20 + -0x7c);\n                                            *(*0x20 + -0x28) = *(*0x20 + -0x78);\n                                            *(*0x20 + -0x24) = *(*0x20 + -0x74);\n                                            *(*0x20 + -0x20) = *(*0x20 + -0x70);\n                                            *(*0x20 + -0x1c) = *(*0x20 + -0x6c);\n                                            *(*0x20 + -0x18) = *(*0x20 + -0x68);\n                                            *(*0x20 + -0x14) = *(*0x20 + -100);\n                                            *(*0x20 + -0x10) = *(*0x20 + -0x60);\n                                            *(*0x20 + -0xc) = *(*0x20 + -0x5c);\n                                            if (bVar12) {\n                                                *(*0x20 + -0xe0) = iVar7;\n                                                *(*0x20 + -200) = iVar7 * 5;\n                                                if (*0x801c20 == 0) {\n                                                    *(*0x20 + -0x108) = unaff_RBP;\n                                                    *(*0x20 + -0x100) = 0x45a1cf;\n                                                    fcn.0045e85a();\n                                                }\n                                                else {\n                                                    *(*0x20 + -0x100) = 0x45a1ec;\n                                                    fcn.00410240(*0x20 + -0x58);\n                                                    uVar8 = *(*0x20 + -0xb8);\n                                                }\n                                                *(*0x20 + -0xa8) = uVar8;\n                                                *(*0x20 + -0xa0) = 0;\n                                                *(*0x20 + -0x100) = 0x45a213;\n                                                puVar4 = fcn.0040d7a0(*0x20 + -0xa8);\n                                                *puVar4 = *(*0x20 + -0xe0);\n                                                *0x801990 = *0x801990 + 1;\n                                                *(*0x20 + -0x100) = 0x45a231;\n                                                fcn.0040a680();\n                                                return *(*0x20 + -200) + 0x460f60;\n                                            }\n                                            arg1 = 0x7d0;\n                                            *(*0x20 + -0x100) = 0x45a293;\n                                            fcn.0045e240(2000);\n                                        }\n                                        *(*0x20 + -0x100) = 0x45a2a5;\n                                        fcn.0040a680();\n                                        *(*0x20 + -0x100) = 0x45a2b6;\n                                        fcn.00433c80();\n                                    }\n                                    *(*0x20 + -0x100) = 0x45a2c9;\n                                    fcn.004334e0();\n                                }\n                                *(*0x20 + -0x100) = 0x45a2dc;\n                                fcn.004334e0();\n                            }\n                            *(*0x20 + -0x100) = 0x45a2ef;\n                            fcn.004334e0();\n                        }\n                        *(*0x20 + -0x100) = 0x45a305;\n                        fcn.004334e0();\n                    }\n                    *(*0x20 + -0x100) = 0x45a30d;\n                    fcn.0045e300(arg1);\n                }\n                *(*0x20 + -0x100) = 0x45a31a;\n                fcn.0045e280(arg1_00, 0x100000);\n                param_1 = arg1_00;\n            }\n            unaff_RBX = 0x7329b8;\n            *(*0x20 + -0x100) = 0x45a32d;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        puVar9[0x18] = param_1;\n        *(puVar9 + -8) = 0x45a345;\n        fcn.0045bb60();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        param_1 = puVar9[0x18];\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 2775
    },
    "0045a360": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045a360(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    ulong uStackX32;\n    uchar auStack32 [8];\n    ulong uStack24;\n    uint uStack16;\n    \n    iStackX24 = 0;\n    uStackX32 = 0;\n    piVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30) + 0x23c;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    *(*(iVar2 + 0x30) + 0x130) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    if (*0x8019b2 == '\\0') {\n        *(iVar2 + 0x2c0) = *0x7951d0;\n        *(iVar2 + 0x2c8) = 1;\n        *(iVar2 + 0x2d0) = auStackX16;\n    }\n    else {\n        *(iVar2 + 0x2c0) = *0x7acff0;\n        *(iVar2 + 0x2c8) = 3;\n        uStack24 = 0;\n        uStack16 = 0x800;\n        *(iVar2 + 0x2d0) = auStack32;\n    }\n    fcn.004035a0(iVar2 + 0x2c0);\n    iStackX24 = *(iVar2 + 0x2d8);\n    if (iStackX24 == 0) {\n        uStackX32 = *(iVar2 + 0x2e8);\n    }\n    fcn.0043f3e0();\n    return;\n}\n",
        "token_count": 454
    },
    "0045d980": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045d980(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    int64_t in_GS_OFFSET;\n    code *pcStackX8;\n    ulong uStackX16;\n    \n    piVar5 = *(in_GS_OFFSET + 0x28);\n    iVar1 = *piVar5;\n    if (((iVar1 != 0) && (iVar1 != (*(iVar1 + 0x30))[10])) && (iVar2 = **(iVar1 + 0x30),  iVar1 != iVar2)) {\n        pcVar4 = fcn.0045ac00();\n        *piVar5 = iVar2;\n        uVar6 = *(iVar2 + 0x38) - 0x40U & 0xfffffffffffffff0;\n        *(uVar6 + 0x30) = iVar1;\n        *(uVar6 + 0x28) = *(iVar1 + 8) - *0x20;\n        *(uVar6 - 8) = 0x45d9e9;\n        uVar3 = (*pcVar4)(uStackX16);\n        iVar1 = *(*(uVar6 + 0x30) + 8);\n        iVar2 = *(uVar6 + 0x28);\n        **(in_GS_OFFSET + 0x28) = *(uVar6 + 0x30);\n        *((iVar1 - iVar2) + 0x18) = uVar3;\n        return;\n    }\n    uVar3 = (*pcStackX8)(uStackX16);\n    *(*0x20 + 0x18) = uVar3;\n    return;\n}\n",
        "token_count": 394
    },
    "0045dc20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045dc20(ulong noname_0, ulong arg2)\n\n{\n    if (*0x8020eb == '\\x01') {\n        rdtscp();\n    }\n    else {\n        rdtsc();\n    }\n    return;\n}\n",
        "token_count": 56
    },
    "0045dc60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "contain loop",
            "encrypt data using AES via x86 extensions"
        ],
        "decompiled_code": "\nuint64_t fcn.0045dc60(uint64_t arg1)\n\n{\n    uchar (*in_RAX) [16];\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uchar auVar5 [16];\n    uchar auVar6 [16];\n    uchar auVar7 [16];\n    uchar auVar8 [16];\n    uchar auVar9 [16];\n    uchar auVar10 [16];\n    uchar auVar11 [16];\n    uchar auVar12 [16];\n    uchar auVar13 [16];\n    \n    if (*0x8019b0 == '\\0') {\n        uVar1 = unaff_RBX ^ *0x801c80 ^ 0xa0761d6478bd642f;\n        if (arg1 == 0) {\n            return uVar1;\n        }\n        if (arg1 < 4) {\n            uVar2 = CONCAT12(in_RAX[-1][arg1 + 0xf], CONCAT11((*in_RAX)[arg1 >> 1], (*in_RAX)[0]));\n            uVar3 = 0;\n        }\n        else if (arg1 == 4) {\n            uVar2 = **in_RAX;\n            uVar3 = **in_RAX;\n        }\n        else if (arg1 < 8) {\n            uVar2 = **in_RAX;\n            uVar3 = *(in_RAX[-1] + arg1 + 0xc);\n        }\n        else if (arg1 == 8) {\n            uVar2 = **in_RAX;\n            uVar3 = uVar2;\n        }\n        else if (arg1 < 0x11) {\n            uVar2 = **in_RAX;\n            uVar3 = *(in_RAX[-1] + arg1 + 8);\n        }\n        else {\n            uVar3 = arg1;\n            uVar2 = uVar1;\n            uVar4 = uVar1;\n            if (0x30 < arg1) {\n                for (; 0x30 < uVar3; uVar3 = uVar3 - 0x30) {\n                    auVar5 = ZEXT816(*(*in_RAX + 8) ^ uVar1) * ZEXT816(**in_RAX ^ 0xe7037ed1a0b428db);\n                    auVar6 = ZEXT816(*(in_RAX[1] + 8) ^ uVar2) * ZEXT816(*in_RAX[1] ^ 0x8ebc6af09c88c6e3);\n                    auVar7 = ZEXT816(*(in_RAX[2] + 8) ^ uVar4) * ZEXT816(*in_RAX[2] ^ 0x589965cc75374cc3);\n                    uVar1 = SUB168(auVar5, 0) ^ SUB168(auVar5 >> 0x40, 0);\n                    in_RAX = in_RAX[3];\n                    uVar2 = SUB168(auVar6, 0) ^ SUB168(auVar6 >> 0x40, 0);\n                    uVar4 = SUB168(auVar7, 0) ^ SUB168(auVar7 >> 0x40, 0);\n                }\n                uVar1 = uVar1 ^ uVar2 ^ uVar4;\n            }\n            for (; 0x10 < uVar3; uVar3 = uVar3 - 0x10) {\n                auVar5 = ZEXT816(*(*in_RAX + 8) ^ uVar1) * ZEXT816(**in_RAX ^ 0xe7037ed1a0b428db);\n                uVar1 = SUB168(auVar5, 0) ^ SUB168(auVar5 >> 0x40, 0);\n                in_RAX = in_RAX[1];\n            }\n            uVar2 = *(in_RAX[-1] + uVar3);\n            uVar3 = *(in_RAX[-1] + uVar3 + 8);\n        }\n        auVar5 = ZEXT816(uVar3 ^ uVar1) * ZEXT816(uVar2 ^ 0xe7037ed1a0b428db);\n        auVar5 = ZEXT816(SUB168(auVar5, 0) ^ SUB168(auVar5 >> 0x40, 0)) * ZEXT816(arg1 ^ 0x1d8e4e27c47d124f);\n        return SUB168(auVar5, 0) ^ SUB168(auVar5 >> 0x40, 0);\n    }\n    auVar5 = pinsrw(ZEXT816(unaff_RBX), arg1, 4);\n    auVar5 = pshufhw(auVar5, auVar5, 0);\n    auVar6 = aesenc(auVar5 ^ *0x801fa0, auVar5 ^ *0x801fa0);\n    if (arg1 < 0x10) {\n        if (arg1 == 0) {\n            auVar5 = aesenc(auVar6, auVar6);\n            return SUB168(auVar5, 0);\n        }\n        if ((in_RAX[1] & 0xff0) == 0) {\n            auVar5 = pshufb(*(in_RAX[-1] + arg1), *(arg1 * 0x10 + 0x7335e0));\n        }\n        else {\n            auVar5 = *in_RAX & *(arg1 * 0x10 + 0x7334e0);\n        }\n    }\n    else {\n        if (arg1 != 0x10) {\n            if (arg1 < 0x21) {\n                auVar5 = aesenc(auVar5 ^ *0x801fb0, auVar5 ^ *0x801fb0);\n                auVar5 = *(in_RAX[-1] + arg1) ^ auVar5;\n                auVar6 = aesenc(*in_RAX ^ auVar6, *in_RAX ^ auVar6);\n                auVar7 = aesenc(auVar5, auVar5);\n                auVar5 = aesenc(auVar6, auVar6);\n                auVar6 = aesenc(auVar7, auVar7);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, auVar6);\n                return SUB168(auVar5, 0) ^ SUB168(auVar6, 0);\n            }\n            if (arg1 < 0x41) {\n                auVar7 = aesenc(auVar5 ^ *0x801fb0, auVar5 ^ *0x801fb0);\n                auVar8 = aesenc(auVar5 ^ *0x801fc0, auVar5 ^ *0x801fc0);\n                auVar5 = aesenc(auVar5 ^ *0x801fd0, auVar5 ^ *0x801fd0);\n                auVar8 = *(in_RAX[-2] + arg1) ^ auVar8;\n                auVar5 = *(in_RAX[-1] + arg1) ^ auVar5;\n                auVar6 = aesenc(*in_RAX ^ auVar6, *in_RAX ^ auVar6);\n                auVar7 = aesenc(in_RAX[1] ^ auVar7, in_RAX[1] ^ auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                auVar9 = aesenc(auVar5, auVar5);\n                auVar5 = aesenc(auVar6, auVar6);\n                auVar6 = aesenc(auVar7, auVar7);\n                auVar7 = aesenc(auVar8, auVar8);\n                auVar8 = aesenc(auVar9, auVar9);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                return SUB168(auVar5, 0) ^ SUB168(auVar7, 0) ^ SUB168(auVar6, 0) ^ SUB168(auVar8, 0);\n            }\n            if (arg1 < 0x81) {\n                auVar7 = aesenc(auVar5 ^ *0x801fb0, auVar5 ^ *0x801fb0);\n                auVar8 = aesenc(auVar5 ^ *0x801fc0, auVar5 ^ *0x801fc0);\n                auVar9 = aesenc(auVar5 ^ *0x801fd0, auVar5 ^ *0x801fd0);\n                auVar10 = aesenc(auVar5 ^ *0x801fe0, auVar5 ^ *0x801fe0);\n                auVar11 = aesenc(auVar5 ^ *0x801ff0, auVar5 ^ *0x801ff0);\n                auVar12 = aesenc(auVar5 ^ *0x802000, auVar5 ^ *0x802000);\n                auVar5 = aesenc(auVar5 ^ *0x802010, auVar5 ^ *0x802010);\n                auVar10 = *(in_RAX[-4] + arg1) ^ auVar10;\n                auVar11 = *(in_RAX[-3] + arg1) ^ auVar11;\n                auVar12 = *(in_RAX[-2] + arg1) ^ auVar12;\n                auVar5 = *(in_RAX[-1] + arg1) ^ auVar5;\n                auVar6 = aesenc(*in_RAX ^ auVar6, *in_RAX ^ auVar6);\n                auVar7 = aesenc(in_RAX[1] ^ auVar7, in_RAX[1] ^ auVar7);\n                auVar8 = aesenc(in_RAX[2] ^ auVar8, in_RAX[2] ^ auVar8);\n                auVar9 = aesenc(in_RAX[3] ^ auVar9, in_RAX[3] ^ auVar9);\n                auVar10 = aesenc(auVar10, auVar10);\n                auVar11 = aesenc(auVar11, auVar11);\n                auVar12 = aesenc(auVar12, auVar12);\n                auVar13 = aesenc(auVar5, auVar5);\n                auVar5 = aesenc(auVar6, auVar6);\n                auVar6 = aesenc(auVar7, auVar7);\n                auVar7 = aesenc(auVar8, auVar8);\n                auVar8 = aesenc(auVar9, auVar9);\n                auVar9 = aesenc(auVar10, auVar10);\n                auVar10 = aesenc(auVar11, auVar11);\n                auVar11 = aesenc(auVar12, auVar12);\n                auVar12 = aesenc(auVar13, auVar13);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                auVar9 = aesenc(auVar9, auVar9);\n                auVar10 = aesenc(auVar10, auVar10);\n                auVar11 = aesenc(auVar11, auVar11);\n                auVar12 = aesenc(auVar12, auVar12);\n                return SUB168(auVar5, 0) ^ SUB168(auVar9, 0) ^ SUB168(auVar7, 0) ^ SUB168(auVar11, 0) ^\n                       SUB168(auVar6, 0) ^ SUB168(auVar10, 0) ^ SUB168(auVar8, 0) ^ SUB168(auVar12, 0);\n            }\n            auVar7 = aesenc(auVar5 ^ *0x801fb0, auVar5 ^ *0x801fb0);\n            auVar8 = aesenc(auVar5 ^ *0x801fc0, auVar5 ^ *0x801fc0);\n            auVar9 = aesenc(auVar5 ^ *0x801fd0, auVar5 ^ *0x801fd0);\n            auVar10 = aesenc(auVar5 ^ *0x801fe0, auVar5 ^ *0x801fe0);\n            auVar11 = aesenc(auVar5 ^ *0x801ff0, auVar5 ^ *0x801ff0);\n            auVar12 = aesenc(auVar5 ^ *0x802000, auVar5 ^ *0x802000);\n            auVar5 = aesenc(auVar5 ^ *0x802010, auVar5 ^ *0x802010);\n            auVar6 = *(in_RAX[-8] + arg1) ^ auVar6;\n            auVar7 = *(in_RAX[-7] + arg1) ^ auVar7;\n            auVar8 = *(in_RAX[-6] + arg1) ^ auVar8;\n            auVar9 = *(in_RAX[-5] + arg1) ^ auVar9;\n            auVar10 = *(in_RAX[-4] + arg1) ^ auVar10;\n            auVar11 = *(in_RAX[-3] + arg1) ^ auVar11;\n            auVar12 = *(in_RAX[-2] + arg1) ^ auVar12;\n            auVar5 = *(in_RAX[-1] + arg1) ^ auVar5;\n            uVar1 = arg1 - 1 >> 7;\n            do {\n                auVar6 = aesenc(auVar6, auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                auVar9 = aesenc(auVar9, auVar9);\n                auVar10 = aesenc(auVar10, auVar10);\n                auVar11 = aesenc(auVar11, auVar11);\n                auVar12 = aesenc(auVar12, auVar12);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, *in_RAX);\n                auVar7 = aesenc(auVar7, in_RAX[1]);\n                auVar8 = aesenc(auVar8, in_RAX[2]);\n                auVar9 = aesenc(auVar9, in_RAX[3]);\n                auVar10 = aesenc(auVar10, in_RAX[4]);\n                auVar11 = aesenc(auVar11, in_RAX[5]);\n                auVar12 = aesenc(auVar12, in_RAX[6]);\n                auVar5 = aesenc(auVar5, in_RAX[7]);\n                in_RAX = in_RAX[8];\n                uVar1 = uVar1 - 1;\n            } while (uVar1 != 0);\n            auVar6 = aesenc(auVar6, auVar6);\n            auVar7 = aesenc(auVar7, auVar7);\n            auVar8 = aesenc(auVar8, auVar8);\n            auVar9 = aesenc(auVar9, auVar9);\n            auVar10 = aesenc(auVar10, auVar10);\n            auVar11 = aesenc(auVar11, auVar11);\n            auVar12 = aesenc(auVar12, auVar12);\n            auVar13 = aesenc(auVar5, auVar5);\n            auVar5 = aesenc(auVar6, auVar6);\n            auVar6 = aesenc(auVar7, auVar7);\n            auVar7 = aesenc(auVar8, auVar8);\n            auVar8 = aesenc(auVar9, auVar9);\n            auVar9 = aesenc(auVar10, auVar10);\n            auVar10 = aesenc(auVar11, auVar11);\n            auVar11 = aesenc(auVar12, auVar12);\n            auVar12 = aesenc(auVar13, auVar13);\n            auVar5 = aesenc(auVar5, auVar5);\n            auVar6 = aesenc(auVar6, auVar6);\n            auVar7 = aesenc(auVar7, auVar7);\n            auVar8 = aesenc(auVar8, auVar8);\n            auVar9 = aesenc(auVar9, auVar9);\n            auVar10 = aesenc(auVar10, auVar10);\n            auVar11 = aesenc(auVar11, auVar11);\n            auVar12 = aesenc(auVar12, auVar12);\n            return SUB168(auVar5, 0) ^ SUB168(auVar9, 0) ^ SUB168(auVar7, 0) ^ SUB168(auVar11, 0) ^\n                   SUB168(auVar6, 0) ^ SUB168(auVar10, 0) ^ SUB168(auVar8, 0) ^ SUB168(auVar12, 0);\n        }\n        auVar5 = *in_RAX;\n    }\n    auVar5 = aesenc(auVar5 ^ auVar6, auVar5 ^ auVar6);\n    auVar5 = aesenc(auVar5, auVar5);\n    auVar5 = aesenc(auVar5, auVar5);\n    return SUB168(auVar5, 0);\n}\n",
        "token_count": 3936
    },
    "0045dce0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "encrypt data using AES via x86 extensions"
        ],
        "decompiled_code": "\nuint64_t fcn.0045dce0(void)\n\n{\n    uint64_t *in_RAX;\n    uint64_t unaff_RBX;\n    uchar auVar1 [16];\n    \n    if (*0x8019b0 != '\\0') {\n        auVar1 = pinsrq(ZEXT816(unaff_RBX), *in_RAX, 1);\n        auVar1 = aesenc(auVar1, *0x801fa0);\n        auVar1 = aesenc(auVar1, *0x801fb0);\n        auVar1 = aesenc(auVar1, *0x801fc0);\n        return SUB168(auVar1, 0);\n    }\n    auVar1 = ZEXT816(*in_RAX ^ 0xe7037ed1a0b428db) * ZEXT816(*in_RAX ^ unaff_RBX ^ *0x801c80 ^ 0xa0761d6478bd642f);\n    auVar1 = ZEXT816(0x1d8e4e27c47d1247) * ZEXT816(SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0));\n    return SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n}\n",
        "token_count": 293
    },
    "0045e8c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0045e8c0(void)\n\n{\n    uint *puVar1;\n    uchar auVar2 [32];\n    uchar (*in_RAX) [32];\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uchar (*pauVar5) [32];\n    uchar (*pauVar6) [32];\n    uchar auVar7 [16];\n    uchar in_YMM0 [32];\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    while( true ) {\n        while( true ) {\n            if (unaff_RBX == 0) {\n                return;\n            }\n            if (unaff_RBX < 3) {\n                (*in_RAX)[0] = 0;\n                in_RAX[-1][unaff_RBX + 0x1f] = 0;\n                return;\n            }\n            if (unaff_RBX < 5) {\n                **in_RAX = 0;\n                *(in_RAX[-1] + unaff_RBX + 0x1e) = 0;\n                return;\n            }\n            if (unaff_RBX < 8) {\n                **in_RAX = 0;\n                *(in_RAX[-1] + unaff_RBX + 0x1c) = 0;\n                return;\n            }\n            if (unaff_RBX == 8) {\n                **in_RAX = 0;\n                return;\n            }\n            if (unaff_RBX < 0x11) {\n                **in_RAX = 0;\n                *(in_RAX[-1] + unaff_RBX + 0x18) = 0;\n                return;\n            }\n            if (unaff_RBX < 0x21) {\n                **in_RAX = in_XMM15_Da;\n                *(*in_RAX + 4) = in_XMM15_Db;\n                *(*in_RAX + 8) = in_XMM15_Dc;\n                *(*in_RAX + 0xc) = in_XMM15_Dd;\n                puVar1 = in_RAX[-1] + unaff_RBX + 0x10;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                return;\n            }\n            if (unaff_RBX < 0x41) {\n                **in_RAX = in_XMM15_Da;\n                *(*in_RAX + 4) = in_XMM15_Db;\n                *(*in_RAX + 8) = in_XMM15_Dc;\n                *(*in_RAX + 0xc) = in_XMM15_Dd;\n                *(*in_RAX + 0x10) = in_XMM15_Da;\n                *(*in_RAX + 0x14) = in_XMM15_Db;\n                *(*in_RAX + 0x18) = in_XMM15_Dc;\n                *(*in_RAX + 0x1c) = in_XMM15_Dd;\n                puVar1 = in_RAX[-1] + unaff_RBX;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                puVar1 = in_RAX[-1] + unaff_RBX + 0x10;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                return;\n            }\n            if (unaff_RBX < 0x81) {\n                **in_RAX = in_XMM15_Da;\n                *(*in_RAX + 4) = in_XMM15_Db;\n                *(*in_RAX + 8) = in_XMM15_Dc;\n                *(*in_RAX + 0xc) = in_XMM15_Dd;\n                *(*in_RAX + 0x10) = in_XMM15_Da;\n                *(*in_RAX + 0x14) = in_XMM15_Db;\n                *(*in_RAX + 0x18) = in_XMM15_Dc;\n                *(*in_RAX + 0x1c) = in_XMM15_Dd;\n                *in_RAX[1] = in_XMM15_Da;\n                *(in_RAX[1] + 4) = in_XMM15_Db;\n                *(in_RAX[1] + 8) = in_XMM15_Dc;\n                *(in_RAX[1] + 0xc) = in_XMM15_Dd;\n                *(in_RAX[1] + 0x10) = in_XMM15_Da;\n                *(in_RAX[1] + 0x14) = in_XMM15_Db;\n                *(in_RAX[1] + 0x18) = in_XMM15_Dc;\n                *(in_RAX[1] + 0x1c) = in_XMM15_Dd;\n                puVar1 = in_RAX[-2] + unaff_RBX;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                puVar1 = in_RAX[-2] + unaff_RBX + 0x10;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                puVar1 = in_RAX[-1] + unaff_RBX;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                puVar1 = in_RAX[-1] + unaff_RBX + 0x10;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                return;\n            }\n            if (unaff_RBX < 0x101) {\n                **in_RAX = in_XMM15_Da;\n                *(*in_RAX + 4) = in_XMM15_Db;\n                *(*in_RAX + 8) = in_XMM15_Dc;\n                *(*in_RAX + 0xc) = in_XMM15_Dd;\n                *(*in_RAX + 0x10) = in_XMM15_Da;\n                *(*in_RAX + 0x14) = in_XMM15_Db;\n                *(*in_RAX + 0x18) = in_XMM15_Dc;\n                *(*in_RAX + 0x1c) = in_XMM15_Dd;\n                *in_RAX[1] = in_XMM15_Da;\n                *(in_RAX[1] + 4) = in_XMM15_Db;\n                *(in_RAX[1] + 8) = in_XMM15_Dc;\n                *(in_RAX[1] + 0xc) = in_XMM15_Dd;\n                *(in_RAX[1] + 0x10) = in_XMM15_Da;\n                *(in_RAX[1] + 0x14) = in_XMM15_Db;\n                *(in_RAX[1] + 0x18) = in_XMM15_Dc;\n                *(in_RAX[1] + 0x1c) = in_XMM15_Dd;\n                *in_RAX[2] = in_XMM15_Da;\n                *(in_RAX[2] + 4) = in_XMM15_Db;\n                *(in_RAX[2] + 8) = in_XMM15_Dc;\n                *(in_RAX[2] + 0xc) = in_XMM15_Dd;\n                *(in_RAX[2] + 0x10) = in_XMM15_Da;\n                *(in_RAX[2] + 0x14) = in_XMM15_Db;\n                *(in_RAX[2] + 0x18) = in_XMM15_Dc;\n                *(in_RAX[2] + 0x1c) = in_XMM15_Dd;\n                *in_RAX[3] = in_XMM15_Da;\n                *(in_RAX[3] + 4) = in_XMM15_Db;\n                *(in_RAX[3] + 8) = in_XMM15_Dc;\n                *(in_RAX[3] + 0xc) = in_XMM15_Dd;\n                *(in_RAX[3] + 0x10) = in_XMM15_Da;\n                *(in_RAX[3] + 0x14) = in_XMM15_Db;\n                *(in_RAX[3] + 0x18) = in_XMM15_Dc;\n                *(in_RAX[3] + 0x1c) = in_XMM15_Dd;\n                puVar1 = in_RAX[-4] + unaff_RBX;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                puVar1 = in_RAX[-4] + unaff_RBX + 0x10;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                puVar1 = in_RAX[-3] + unaff_RBX;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                puVar1 = in_RAX[-3] + unaff_RBX + 0x10;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                puVar1 = in_RAX[-2] + unaff_RBX;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                puVar1 = in_RAX[-2] + unaff_RBX + 0x10;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                puVar1 = in_RAX[-1] + unaff_RBX;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                puVar1 = in_RAX[-1] + unaff_RBX + 0x10;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                return;\n            }\n            auVar7 = SUB3216(in_YMM0, 0);\n            if ((*0x8020e6 != '\\x01') || (unaff_RBX < 0x800)) break;\n            if (*0x8020e3 == '\\x01') {\n                auVar7 = vpxor_avx(auVar7, auVar7);\n                in_YMM0 = ZEXT1632(auVar7);\n                if (0x1ffffff < unaff_RBX) goto code_r0x0045ea61;\n            }\n            uVar4 = unaff_RBX & 7;\n            for (uVar3 = unaff_RBX >> 3; unaff_RBX = uVar4,  uVar3 != 0; uVar3 = uVar3 - 1) {\n                **in_RAX = 0;\n                in_RAX = *in_RAX + 8;\n            }\n        }\n        if (*0x8020e3 == '\\x01') break;\n        do {\n            **in_RAX = in_XMM15_Da;\n            *(*in_RAX + 4) = in_XMM15_Db;\n            *(*in_RAX + 8) = in_XMM15_Dc;\n            *(*in_RAX + 0xc) = in_XMM15_Dd;\n            *(*in_RAX + 0x10) = in_XMM15_Da;\n            *(*in_RAX + 0x14) = in_XMM15_Db;\n            *(*in_RAX + 0x18) = in_XMM15_Dc;\n            *(*in_RAX + 0x1c) = in_XMM15_Dd;\n            *in_RAX[1] = in_XMM15_Da;\n            *(in_RAX[1] + 4) = in_XMM15_Db;\n            *(in_RAX[1] + 8) = in_XMM15_Dc;\n            *(in_RAX[1] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[1] + 0x10) = in_XMM15_Da;\n            *(in_RAX[1] + 0x14) = in_XMM15_Db;\n            *(in_RAX[1] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[1] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[2] = in_XMM15_Da;\n            *(in_RAX[2] + 4) = in_XMM15_Db;\n            *(in_RAX[2] + 8) = in_XMM15_Dc;\n            *(in_RAX[2] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[2] + 0x10) = in_XMM15_Da;\n            *(in_RAX[2] + 0x14) = in_XMM15_Db;\n            *(in_RAX[2] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[2] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[3] = in_XMM15_Da;\n            *(in_RAX[3] + 4) = in_XMM15_Db;\n            *(in_RAX[3] + 8) = in_XMM15_Dc;\n            *(in_RAX[3] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[3] + 0x10) = in_XMM15_Da;\n            *(in_RAX[3] + 0x14) = in_XMM15_Db;\n            *(in_RAX[3] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[3] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[4] = in_XMM15_Da;\n            *(in_RAX[4] + 4) = in_XMM15_Db;\n            *(in_RAX[4] + 8) = in_XMM15_Dc;\n            *(in_RAX[4] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[4] + 0x10) = in_XMM15_Da;\n            *(in_RAX[4] + 0x14) = in_XMM15_Db;\n            *(in_RAX[4] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[4] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[5] = in_XMM15_Da;\n            *(in_RAX[5] + 4) = in_XMM15_Db;\n            *(in_RAX[5] + 8) = in_XMM15_Dc;\n            *(in_RAX[5] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[5] + 0x10) = in_XMM15_Da;\n            *(in_RAX[5] + 0x14) = in_XMM15_Db;\n            *(in_RAX[5] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[5] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[6] = in_XMM15_Da;\n            *(in_RAX[6] + 4) = in_XMM15_Db;\n            *(in_RAX[6] + 8) = in_XMM15_Dc;\n            *(in_RAX[6] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[6] + 0x10) = in_XMM15_Da;\n            *(in_RAX[6] + 0x14) = in_XMM15_Db;\n            *(in_RAX[6] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[6] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[7] = in_XMM15_Da;\n            *(in_RAX[7] + 4) = in_XMM15_Db;\n            *(in_RAX[7] + 8) = in_XMM15_Dc;\n            *(in_RAX[7] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[7] + 0x10) = in_XMM15_Da;\n            *(in_RAX[7] + 0x14) = in_XMM15_Db;\n            *(in_RAX[7] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[7] + 0x1c) = in_XMM15_Dd;\n            unaff_RBX = unaff_RBX - 0x100;\n            in_RAX = in_RAX[8];\n        } while (0xff < unaff_RBX);\n    }\n    auVar7 = vpxor_avx(auVar7, auVar7);\n    in_YMM0 = ZEXT1632(auVar7);\n    if (unaff_RBX < 0x2000000) {\n        do {\n            pauVar5 = in_RAX;\n            uVar3 = unaff_RBX;\n            auVar2 = vmovdqu_avx(in_YMM0);\n            *pauVar5 = auVar2;\n            auVar2 = vmovdqu_avx(in_YMM0);\n            pauVar5[1] = auVar2;\n            auVar2 = vmovdqu_avx(in_YMM0);\n            pauVar5[2] = auVar2;\n            auVar2 = vmovdqu_avx(in_YMM0);\n            pauVar5[3] = auVar2;\n            unaff_RBX = uVar3 - 0x80;\n            in_RAX = pauVar5[4];\n        } while (0x7f < uVar3 - 0x80);\n        auVar2 = vmovdqu_avx(in_YMM0);\n        *(pauVar5[-1] + uVar3) = auVar2;\n        auVar2 = vmovdqu_avx(in_YMM0);\n        *(pauVar5[-2] + uVar3) = auVar2;\n        auVar2 = vmovdqu_avx(in_YMM0);\n        *(pauVar5[-3] + uVar3) = auVar2;\n        auVar2 = vmovdqu_avx(in_YMM0);\n        *(pauVar5[-4] + uVar3) = auVar2;\n        vzeroupper_avx();\n        return;\n    }\ncode_r0x0045ea61:\n    auVar2 = vmovdqu_avx(in_YMM0);\n    *in_RAX = auVar2;\n    uVar3 = in_RAX + (unaff_RBX - (in_RAX[1] & 0xffffffffffffffe0));\n    pauVar5 = in_RAX[1] & 0xffffffffffffffe0;\n    do {\n        pauVar6 = pauVar5;\n        uVar4 = uVar3;\n        auVar2 = vmovntdq_avx(in_YMM0);\n        *pauVar6 = auVar2;\n        auVar2 = vmovntdq_avx(in_YMM0);\n        pauVar6[1] = auVar2;\n        auVar2 = vmovntdq_avx(in_YMM0);\n        pauVar6[2] = auVar2;\n        auVar2 = vmovntdq_avx(in_YMM0);\n        pauVar6[3] = auVar2;\n        uVar3 = uVar4 - 0x80;\n        pauVar5 = pauVar6[4];\n    } while (0x7f < uVar4 - 0x80);\n    auVar2 = vmovdqu_avx(in_YMM0);\n    *(pauVar6[-1] + uVar4) = auVar2;\n    auVar2 = vmovdqu_avx(in_YMM0);\n    *(pauVar6[-2] + uVar4) = auVar2;\n    auVar2 = vmovdqu_avx(in_YMM0);\n    *(pauVar6[-3] + uVar4) = auVar2;\n    auVar2 = vmovdqu_avx(in_YMM0);\n    *(pauVar6[-4] + uVar4) = auVar2;\n    vzeroupper_avx();\n    return;\n}\n",
        "token_count": 5100
    },
    "0045ebc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0045ebc0(uint64_t arg1)\n\n{\n    uint *puVar1;\n    uchar uVar2;\n    uint uVar3;\n    ulong uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint uVar16;\n    uint uVar17;\n    uint uVar18;\n    uint uVar19;\n    uint uVar20;\n    uint uVar21;\n    uint uVar22;\n    uint uVar23;\n    uint uVar24;\n    uint uVar25;\n    uint uVar26;\n    uint uVar27;\n    uint uVar28;\n    uint uVar29;\n    uint uVar30;\n    uint uVar31;\n    uint uVar32;\n    uint uVar33;\n    uint uVar34;\n    uint uVar35;\n    uint uVar36;\n    uint uVar37;\n    uint uVar38;\n    uint uVar39;\n    uint uVar40;\n    uint uVar41;\n    uint uVar42;\n    uint uVar43;\n    uint uVar44;\n    uint uVar45;\n    uint uVar46;\n    uint uVar47;\n    uint uVar48;\n    uint uVar49;\n    uint uVar50;\n    uint uVar51;\n    uint uVar52;\n    uint uVar53;\n    uint uVar54;\n    uint uVar55;\n    uint uVar56;\n    uint uVar57;\n    uint uVar58;\n    uint uVar59;\n    uint uVar60;\n    uint uVar61;\n    uint uVar62;\n    uint uVar63;\n    uint uVar64;\n    uint uVar65;\n    uint uVar66;\n    uchar (*in_RAX) [32];\n    uint64_t uVar67;\n    uchar (*unaff_RBX) [32];\n    uint64_t uVar68;\n    int64_t iVar69;\n    ulong *puVar70;\n    uchar (*pauVar71) [32];\n    ulong *puVar72;\n    uchar (*pauVar73) [32];\n    uchar (*pauVar74) [32];\n    uchar *puVar75;\n    bool bVar76;\n    uchar auVar77 [32];\n    uchar auVar78 [32];\n    uchar auVar79 [32];\n    uchar auVar80 [32];\n    uchar auVar81 [32];\n    \n    while( true ) {\n        if (arg1 == 0) {\n            return;\n        }\n        if (arg1 < 3) {\n            uVar2 = unaff_RBX[-1][arg1 + 0x1f];\n            (*in_RAX)[0] = (*unaff_RBX)[0];\n            in_RAX[-1][arg1 + 0x1f] = uVar2;\n            return;\n        }\n        if (arg1 < 4) {\n            uVar2 = (*unaff_RBX)[2];\n            **in_RAX = **unaff_RBX;\n            (*in_RAX)[2] = uVar2;\n            return;\n        }\n        if (arg1 < 5) {\n            **in_RAX = **unaff_RBX;\n            return;\n        }\n        if (arg1 < 8) {\n            uVar3 = *(unaff_RBX[-1] + arg1 + 0x1c);\n            **in_RAX = **unaff_RBX;\n            *(in_RAX[-1] + arg1 + 0x1c) = uVar3;\n            return;\n        }\n        if (arg1 == 8) {\n            **in_RAX = **unaff_RBX;\n            return;\n        }\n        if (arg1 < 0x11) {\n            uVar4 = *(unaff_RBX[-1] + arg1 + 0x18);\n            **in_RAX = **unaff_RBX;\n            *(in_RAX[-1] + arg1 + 0x18) = uVar4;\n            return;\n        }\n        if (arg1 < 0x21) break;\n        if (arg1 < 0x41) {\n            uVar3 = *(*unaff_RBX + 4);\n            uVar5 = *(*unaff_RBX + 8);\n            uVar6 = *(*unaff_RBX + 0xc);\n            uVar7 = *(*unaff_RBX + 0x10);\n            uVar8 = *(*unaff_RBX + 0x14);\n            uVar9 = *(*unaff_RBX + 0x18);\n            uVar10 = *(*unaff_RBX + 0x1c);\n            puVar1 = unaff_RBX[-1] + arg1;\n            uVar11 = *puVar1;\n            uVar12 = puVar1[1];\n            uVar13 = puVar1[2];\n            uVar14 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1 + 0x10;\n            uVar15 = *puVar1;\n            uVar16 = puVar1[1];\n            uVar17 = puVar1[2];\n            uVar18 = puVar1[3];\n            **in_RAX = **unaff_RBX;\n            *(*in_RAX + 4) = uVar3;\n            *(*in_RAX + 8) = uVar5;\n            *(*in_RAX + 0xc) = uVar6;\n            *(*in_RAX + 0x10) = uVar7;\n            *(*in_RAX + 0x14) = uVar8;\n            *(*in_RAX + 0x18) = uVar9;\n            *(*in_RAX + 0x1c) = uVar10;\n            puVar1 = in_RAX[-1] + arg1;\n            *puVar1 = uVar11;\n            puVar1[1] = uVar12;\n            puVar1[2] = uVar13;\n            puVar1[3] = uVar14;\n            puVar1 = in_RAX[-1] + arg1 + 0x10;\n            *puVar1 = uVar15;\n            puVar1[1] = uVar16;\n            puVar1[2] = uVar17;\n            puVar1[3] = uVar18;\n            return;\n        }\n        if (arg1 < 0x81) {\n            uVar3 = *(*unaff_RBX + 4);\n            uVar5 = *(*unaff_RBX + 8);\n            uVar6 = *(*unaff_RBX + 0xc);\n            uVar7 = *(*unaff_RBX + 0x10);\n            uVar8 = *(*unaff_RBX + 0x14);\n            uVar9 = *(*unaff_RBX + 0x18);\n            uVar10 = *(*unaff_RBX + 0x1c);\n            uVar11 = *unaff_RBX[1];\n            uVar12 = *(unaff_RBX[1] + 4);\n            uVar13 = *(unaff_RBX[1] + 8);\n            uVar14 = *(unaff_RBX[1] + 0xc);\n            uVar15 = *(unaff_RBX[1] + 0x10);\n            uVar16 = *(unaff_RBX[1] + 0x14);\n            uVar17 = *(unaff_RBX[1] + 0x18);\n            uVar18 = *(unaff_RBX[1] + 0x1c);\n            puVar1 = unaff_RBX[-2] + arg1;\n            uVar19 = *puVar1;\n            uVar20 = puVar1[1];\n            uVar21 = puVar1[2];\n            uVar22 = puVar1[3];\n            puVar1 = unaff_RBX[-2] + arg1 + 0x10;\n            uVar23 = *puVar1;\n            uVar24 = puVar1[1];\n            uVar25 = puVar1[2];\n            uVar26 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1;\n            uVar27 = *puVar1;\n            uVar28 = puVar1[1];\n            uVar29 = puVar1[2];\n            uVar30 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1 + 0x10;\n            uVar31 = *puVar1;\n            uVar32 = puVar1[1];\n            uVar33 = puVar1[2];\n            uVar34 = puVar1[3];\n            **in_RAX = **unaff_RBX;\n            *(*in_RAX + 4) = uVar3;\n            *(*in_RAX + 8) = uVar5;\n            *(*in_RAX + 0xc) = uVar6;\n            *(*in_RAX + 0x10) = uVar7;\n            *(*in_RAX + 0x14) = uVar8;\n            *(*in_RAX + 0x18) = uVar9;\n            *(*in_RAX + 0x1c) = uVar10;\n            *in_RAX[1] = uVar11;\n            *(in_RAX[1] + 4) = uVar12;\n            *(in_RAX[1] + 8) = uVar13;\n            *(in_RAX[1] + 0xc) = uVar14;\n            *(in_RAX[1] + 0x10) = uVar15;\n            *(in_RAX[1] + 0x14) = uVar16;\n            *(in_RAX[1] + 0x18) = uVar17;\n            *(in_RAX[1] + 0x1c) = uVar18;\n            puVar1 = in_RAX[-2] + arg1;\n            *puVar1 = uVar19;\n            puVar1[1] = uVar20;\n            puVar1[2] = uVar21;\n            puVar1[3] = uVar22;\n            puVar1 = in_RAX[-2] + arg1 + 0x10;\n            *puVar1 = uVar23;\n            puVar1[1] = uVar24;\n            puVar1[2] = uVar25;\n            puVar1[3] = uVar26;\n            puVar1 = in_RAX[-1] + arg1;\n            *puVar1 = uVar27;\n            puVar1[1] = uVar28;\n            puVar1[2] = uVar29;\n            puVar1[3] = uVar30;\n            puVar1 = in_RAX[-1] + arg1 + 0x10;\n            *puVar1 = uVar31;\n            puVar1[1] = uVar32;\n            puVar1[2] = uVar33;\n            puVar1[3] = uVar34;\n            return;\n        }\n        if (arg1 < 0x101) {\n            uVar3 = *(*unaff_RBX + 4);\n            uVar5 = *(*unaff_RBX + 8);\n            uVar6 = *(*unaff_RBX + 0xc);\n            uVar7 = *(*unaff_RBX + 0x10);\n            uVar8 = *(*unaff_RBX + 0x14);\n            uVar9 = *(*unaff_RBX + 0x18);\n            uVar10 = *(*unaff_RBX + 0x1c);\n            uVar11 = *unaff_RBX[1];\n            uVar12 = *(unaff_RBX[1] + 4);\n            uVar13 = *(unaff_RBX[1] + 8);\n            uVar14 = *(unaff_RBX[1] + 0xc);\n            uVar15 = *(unaff_RBX[1] + 0x10);\n            uVar16 = *(unaff_RBX[1] + 0x14);\n            uVar17 = *(unaff_RBX[1] + 0x18);\n            uVar18 = *(unaff_RBX[1] + 0x1c);\n            uVar19 = *unaff_RBX[2];\n            uVar20 = *(unaff_RBX[2] + 4);\n            uVar21 = *(unaff_RBX[2] + 8);\n            uVar22 = *(unaff_RBX[2] + 0xc);\n            uVar23 = *(unaff_RBX[2] + 0x10);\n            uVar24 = *(unaff_RBX[2] + 0x14);\n            uVar25 = *(unaff_RBX[2] + 0x18);\n            uVar26 = *(unaff_RBX[2] + 0x1c);\n            uVar27 = *unaff_RBX[3];\n            uVar28 = *(unaff_RBX[3] + 4);\n            uVar29 = *(unaff_RBX[3] + 8);\n            uVar30 = *(unaff_RBX[3] + 0xc);\n            uVar31 = *(unaff_RBX[3] + 0x10);\n            uVar32 = *(unaff_RBX[3] + 0x14);\n            uVar33 = *(unaff_RBX[3] + 0x18);\n            uVar34 = *(unaff_RBX[3] + 0x1c);\n            puVar1 = unaff_RBX[-4] + arg1;\n            uVar35 = *puVar1;\n            uVar36 = puVar1[1];\n            uVar37 = puVar1[2];\n            uVar38 = puVar1[3];\n            puVar1 = unaff_RBX[-4] + arg1 + 0x10;\n            uVar39 = *puVar1;\n            uVar40 = puVar1[1];\n            uVar41 = puVar1[2];\n            uVar42 = puVar1[3];\n            puVar1 = unaff_RBX[-3] + arg1;\n            uVar43 = *puVar1;\n            uVar44 = puVar1[1];\n            uVar45 = puVar1[2];\n            uVar46 = puVar1[3];\n            puVar1 = unaff_RBX[-3] + arg1 + 0x10;\n            uVar47 = *puVar1;\n            uVar48 = puVar1[1];\n            uVar49 = puVar1[2];\n            uVar50 = puVar1[3];\n            puVar1 = unaff_RBX[-2] + arg1;\n            uVar51 = *puVar1;\n            uVar52 = puVar1[1];\n            uVar53 = puVar1[2];\n            uVar54 = puVar1[3];\n            puVar1 = unaff_RBX[-2] + arg1 + 0x10;\n            uVar55 = *puVar1;\n            uVar56 = puVar1[1];\n            uVar57 = puVar1[2];\n            uVar58 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1;\n            uVar59 = *puVar1;\n            uVar60 = puVar1[1];\n            uVar61 = puVar1[2];\n            uVar62 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1 + 0x10;\n            uVar63 = *puVar1;\n            uVar64 = puVar1[1];\n            uVar65 = puVar1[2];\n            uVar66 = puVar1[3];\n            **in_RAX = **unaff_RBX;\n            *(*in_RAX + 4) = uVar3;\n            *(*in_RAX + 8) = uVar5;\n            *(*in_RAX + 0xc) = uVar6;\n            *(*in_RAX + 0x10) = uVar7;\n            *(*in_RAX + 0x14) = uVar8;\n            *(*in_RAX + 0x18) = uVar9;\n            *(*in_RAX + 0x1c) = uVar10;\n            *in_RAX[1] = uVar11;\n            *(in_RAX[1] + 4) = uVar12;\n            *(in_RAX[1] + 8) = uVar13;\n            *(in_RAX[1] + 0xc) = uVar14;\n            *(in_RAX[1] + 0x10) = uVar15;\n            *(in_RAX[1] + 0x14) = uVar16;\n            *(in_RAX[1] + 0x18) = uVar17;\n            *(in_RAX[1] + 0x1c) = uVar18;\n            *in_RAX[2] = uVar19;\n            *(in_RAX[2] + 4) = uVar20;\n            *(in_RAX[2] + 8) = uVar21;\n            *(in_RAX[2] + 0xc) = uVar22;\n            *(in_RAX[2] + 0x10) = uVar23;\n            *(in_RAX[2] + 0x14) = uVar24;\n            *(in_RAX[2] + 0x18) = uVar25;\n            *(in_RAX[2] + 0x1c) = uVar26;\n            *in_RAX[3] = uVar27;\n            *(in_RAX[3] + 4) = uVar28;\n            *(in_RAX[3] + 8) = uVar29;\n            *(in_RAX[3] + 0xc) = uVar30;\n            *(in_RAX[3] + 0x10) = uVar31;\n            *(in_RAX[3] + 0x14) = uVar32;\n            *(in_RAX[3] + 0x18) = uVar33;\n            *(in_RAX[3] + 0x1c) = uVar34;\n            puVar1 = in_RAX[-4] + arg1;\n            *puVar1 = uVar35;\n            puVar1[1] = uVar36;\n            puVar1[2] = uVar37;\n            puVar1[3] = uVar38;\n            puVar1 = in_RAX[-4] + arg1 + 0x10;\n            *puVar1 = uVar39;\n            puVar1[1] = uVar40;\n            puVar1[2] = uVar41;\n            puVar1[3] = uVar42;\n            puVar1 = in_RAX[-3] + arg1;\n            *puVar1 = uVar43;\n            puVar1[1] = uVar44;\n            puVar1[2] = uVar45;\n            puVar1[3] = uVar46;\n            puVar1 = in_RAX[-3] + arg1 + 0x10;\n            *puVar1 = uVar47;\n            puVar1[1] = uVar48;\n            puVar1[2] = uVar49;\n            puVar1[3] = uVar50;\n            puVar1 = in_RAX[-2] + arg1;\n            *puVar1 = uVar51;\n            puVar1[1] = uVar52;\n            puVar1[2] = uVar53;\n            puVar1[3] = uVar54;\n            puVar1 = in_RAX[-2] + arg1 + 0x10;\n            *puVar1 = uVar55;\n            puVar1[1] = uVar56;\n            puVar1[2] = uVar57;\n            puVar1[3] = uVar58;\n            puVar1 = in_RAX[-1] + arg1;\n            *puVar1 = uVar59;\n            puVar1[1] = uVar60;\n            puVar1[2] = uVar61;\n            puVar1[3] = uVar62;\n            puVar1 = in_RAX[-1] + arg1 + 0x10;\n            *puVar1 = uVar63;\n            puVar1[1] = uVar64;\n            puVar1[2] = uVar65;\n            puVar1[3] = uVar66;\n            return;\n        }\n        if ((*0x8019af & 1) != 0) {\n            if (in_RAX - unaff_RBX < arg1) {\n                uVar3 = **unaff_RBX;\n                uVar5 = *(*unaff_RBX + 4);\n                uVar6 = *(*unaff_RBX + 8);\n                uVar7 = *(*unaff_RBX + 0xc);\n                uVar8 = *(*unaff_RBX + 0x10);\n                uVar9 = *(*unaff_RBX + 0x14);\n                uVar10 = *(*unaff_RBX + 0x18);\n                uVar11 = *(*unaff_RBX + 0x1c);\n                puVar75 = *in_RAX + arg1;\n                uVar12 = *unaff_RBX[1];\n                uVar13 = *(unaff_RBX[1] + 4);\n                uVar14 = *(unaff_RBX[1] + 8);\n                uVar15 = *(unaff_RBX[1] + 0xc);\n                uVar16 = *(unaff_RBX[1] + 0x10);\n                uVar17 = *(unaff_RBX[1] + 0x14);\n                uVar18 = *(unaff_RBX[1] + 0x18);\n                uVar19 = *(unaff_RBX[1] + 0x1c);\n                uVar20 = *unaff_RBX[2];\n                uVar21 = *(unaff_RBX[2] + 4);\n                uVar22 = *(unaff_RBX[2] + 8);\n                uVar23 = *(unaff_RBX[2] + 0xc);\n                uVar24 = *(unaff_RBX[2] + 0x10);\n                uVar25 = *(unaff_RBX[2] + 0x14);\n                uVar26 = *(unaff_RBX[2] + 0x18);\n                uVar27 = *(unaff_RBX[2] + 0x1c);\n                uVar68 = puVar75 & 0x1f;\n                uVar28 = *unaff_RBX[3];\n                uVar29 = *(unaff_RBX[3] + 4);\n                uVar30 = *(unaff_RBX[3] + 8);\n                uVar31 = *(unaff_RBX[3] + 0xc);\n                uVar32 = *(unaff_RBX[3] + 0x10);\n                uVar33 = *(unaff_RBX[3] + 0x14);\n                uVar34 = *(unaff_RBX[3] + 0x18);\n                uVar35 = *(unaff_RBX[3] + 0x1c);\n                uVar67 = puVar75 ^ uVar68;\n                auVar81 = vmovdqu_avx(*(unaff_RBX[-1] + arg1));\n                iVar69 = unaff_RBX + (arg1 - uVar68);\n                arg1 = arg1 - uVar68;\n                if (0x100000 < arg1) {\n                    arg1 = arg1 - 0x80;\n                    do {\n                        auVar77 = vmovdqu_avx(*(iVar69 + -0x20));\n                        auVar78 = vmovdqu_avx(*(iVar69 + -0x40));\n                        auVar79 = vmovdqu_avx(*(iVar69 + -0x60));\n                        auVar80 = vmovdqu_avx(*(iVar69 + -0x80));\n                        iVar69 = iVar69 + -0x80;\n                        auVar77 = vmovntdq_avx(auVar77);\n                        *(uVar67 - 0x20) = auVar77;\n                        auVar77 = vmovntdq_avx(auVar78);\n                        *(uVar67 - 0x40) = auVar77;\n                        auVar77 = vmovntdq_avx(auVar79);\n                        *(uVar67 - 0x60) = auVar77;\n                        auVar77 = vmovntdq_avx(auVar80);\n                        *(uVar67 - 0x80) = auVar77;\n                        uVar67 = uVar67 - 0x80;\n                        bVar76 = 0x7f < arg1;\n                        arg1 = arg1 - 0x80;\n                    } while (bVar76 && arg1 != 0);\n                    auVar81 = vmovdqu_avx(auVar81);\n                    *(puVar75 + -0x20) = auVar81;\n                    vzeroupper_avx();\n                    **in_RAX = uVar3;\n                    *(*in_RAX + 4) = uVar5;\n                    *(*in_RAX + 8) = uVar6;\n                    *(*in_RAX + 0xc) = uVar7;\n                    *(*in_RAX + 0x10) = uVar8;\n                    *(*in_RAX + 0x14) = uVar9;\n                    *(*in_RAX + 0x18) = uVar10;\n                    *(*in_RAX + 0x1c) = uVar11;\n                    *in_RAX[1] = uVar12;\n                    *(in_RAX[1] + 4) = uVar13;\n                    *(in_RAX[1] + 8) = uVar14;\n                    *(in_RAX[1] + 0xc) = uVar15;\n                    *(in_RAX[1] + 0x10) = uVar16;\n                    *(in_RAX[1] + 0x14) = uVar17;\n                    *(in_RAX[1] + 0x18) = uVar18;\n                    *(in_RAX[1] + 0x1c) = uVar19;\n                    *in_RAX[2] = uVar20;\n                    *(in_RAX[2] + 4) = uVar21;\n                    *(in_RAX[2] + 8) = uVar22;\n                    *(in_RAX[2] + 0xc) = uVar23;\n                    *(in_RAX[2] + 0x10) = uVar24;\n                    *(in_RAX[2] + 0x14) = uVar25;\n                    *(in_RAX[2] + 0x18) = uVar26;\n                    *(in_RAX[2] + 0x1c) = uVar27;\n                    *in_RAX[3] = uVar28;\n                    *(in_RAX[3] + 4) = uVar29;\n                    *(in_RAX[3] + 8) = uVar30;\n                    *(in_RAX[3] + 0xc) = uVar31;\n                    *(in_RAX[3] + 0x10) = uVar32;\n                    *(in_RAX[3] + 0x14) = uVar33;\n                    *(in_RAX[3] + 0x18) = uVar34;\n                    *(in_RAX[3] + 0x1c) = uVar35;\n                    return;\n                }\n                arg1 = arg1 - 0x80;\n                do {\n                    auVar77 = vmovdqu_avx(*(iVar69 + -0x20));\n                    auVar78 = vmovdqu_avx(*(iVar69 + -0x40));\n                    auVar79 = vmovdqu_avx(*(iVar69 + -0x60));\n                    auVar80 = vmovdqu_avx(*(iVar69 + -0x80));\n                    iVar69 = iVar69 + -0x80;\n                    *(uVar67 - 0x20) = auVar77;\n                    *(uVar67 - 0x40) = auVar78;\n                    *(uVar67 - 0x60) = auVar79;\n                    *(uVar67 - 0x80) = auVar80;\n                    uVar67 = uVar67 - 0x80;\n                    bVar76 = 0x7f < arg1;\n                    arg1 = arg1 - 0x80;\n                } while (bVar76 && arg1 != 0);\n                auVar81 = vmovdqu_avx(auVar81);\n                *(puVar75 + -0x20) = auVar81;\n                vzeroupper_avx();\n                **in_RAX = uVar3;\n                *(*in_RAX + 4) = uVar5;\n                *(*in_RAX + 8) = uVar6;\n                *(*in_RAX + 0xc) = uVar7;\n                *(*in_RAX + 0x10) = uVar8;\n                *(*in_RAX + 0x14) = uVar9;\n                *(*in_RAX + 0x18) = uVar10;\n                *(*in_RAX + 0x1c) = uVar11;\n                *in_RAX[1] = uVar12;\n                *(in_RAX[1] + 4) = uVar13;\n                *(in_RAX[1] + 8) = uVar14;\n                *(in_RAX[1] + 0xc) = uVar15;\n                *(in_RAX[1] + 0x10) = uVar16;\n                *(in_RAX[1] + 0x14) = uVar17;\n                *(in_RAX[1] + 0x18) = uVar18;\n                *(in_RAX[1] + 0x1c) = uVar19;\n                *in_RAX[2] = uVar20;\n                *(in_RAX[2] + 4) = uVar21;\n                *(in_RAX[2] + 8) = uVar22;\n                *(in_RAX[2] + 0xc) = uVar23;\n                *(in_RAX[2] + 0x10) = uVar24;\n                *(in_RAX[2] + 0x14) = uVar25;\n                *(in_RAX[2] + 0x18) = uVar26;\n                *(in_RAX[2] + 0x1c) = uVar27;\n                *in_RAX[3] = uVar28;\n                *(in_RAX[3] + 4) = uVar29;\n                *(in_RAX[3] + 8) = uVar30;\n                *(in_RAX[3] + 0xc) = uVar31;\n                *(in_RAX[3] + 0x10) = uVar32;\n                *(in_RAX[3] + 0x14) = uVar33;\n                *(in_RAX[3] + 0x18) = uVar34;\n                *(in_RAX[3] + 0x1c) = uVar35;\n                return;\n            }\n            if (0xfffff < arg1) {\n                puVar1 = unaff_RBX[-4] + arg1;\n                uVar3 = *puVar1;\n                uVar5 = puVar1[1];\n                uVar6 = puVar1[2];\n                uVar7 = puVar1[3];\n                uVar8 = *(unaff_RBX[-4] + arg1 + 0x10);\n                uVar9 = *(unaff_RBX[-4] + arg1 + 0x14);\n                uVar10 = *(unaff_RBX[-4] + arg1 + 0x18);\n                uVar11 = *(unaff_RBX[-4] + arg1 + 0x1c);\n                uVar12 = *(unaff_RBX[-3] + arg1);\n                uVar13 = *(unaff_RBX[-3] + arg1 + 4);\n                uVar14 = *(unaff_RBX[-3] + arg1 + 8);\n                uVar15 = *(unaff_RBX[-3] + arg1 + 0xc);\n                uVar16 = *(unaff_RBX[-3] + arg1 + 0x10);\n                uVar17 = *(unaff_RBX[-3] + arg1 + 0x14);\n                uVar18 = *(unaff_RBX[-3] + arg1 + 0x18);\n                uVar19 = *(unaff_RBX[-3] + arg1 + 0x1c);\n                uVar20 = *(unaff_RBX[-2] + arg1);\n                uVar21 = *(unaff_RBX[-2] + arg1 + 4);\n                uVar22 = *(unaff_RBX[-2] + arg1 + 8);\n                uVar23 = *(unaff_RBX[-2] + arg1 + 0xc);\n                uVar24 = *(unaff_RBX[-2] + arg1 + 0x10);\n                uVar25 = *(unaff_RBX[-2] + arg1 + 0x14);\n                uVar26 = *(unaff_RBX[-2] + arg1 + 0x18);\n                uVar27 = *(unaff_RBX[-2] + arg1 + 0x1c);\n                uVar28 = *(unaff_RBX[-1] + arg1);\n                uVar29 = *(unaff_RBX[-1] + arg1 + 4);\n                uVar30 = *(unaff_RBX[-1] + arg1 + 8);\n                uVar31 = *(unaff_RBX[-1] + arg1 + 0xc);\n                uVar32 = *(unaff_RBX[-1] + arg1 + 0x10);\n                uVar33 = *(unaff_RBX[-1] + arg1 + 0x14);\n                uVar34 = *(unaff_RBX[-1] + arg1 + 0x18);\n                uVar35 = *(unaff_RBX[-1] + arg1 + 0x1c);\n                auVar81 = vmovdqu_avx(*unaff_RBX);\n                pauVar74 = (in_RAX & 0xffffffffffffffe0) + 0x20;\n                iVar69 = arg1 - (pauVar74 - in_RAX);\n                pauVar73 = unaff_RBX + (pauVar74 - in_RAX);\n                uVar67 = iVar69 - 0x80;\n                pauVar71 = pauVar74;\n                do {\n                    auVar77 = vmovdqu_avx(*pauVar73);\n                    auVar78 = vmovdqu_avx(pauVar73[1]);\n                    auVar79 = vmovdqu_avx(pauVar73[2]);\n                    auVar80 = vmovdqu_avx(pauVar73[3]);\n                    pauVar73 = pauVar73[4];\n                    auVar77 = vmovntdq_avx(auVar77);\n                    *pauVar71 = auVar77;\n                    auVar77 = vmovntdq_avx(auVar78);\n                    pauVar71[1] = auVar77;\n                    auVar77 = vmovntdq_avx(auVar79);\n                    pauVar71[2] = auVar77;\n                    auVar77 = vmovntdq_avx(auVar80);\n                    pauVar71[3] = auVar77;\n                    pauVar71 = pauVar71[4];\n                    bVar76 = 0x7f < uVar67;\n                    uVar67 = uVar67 - 0x80;\n                } while (bVar76 && uVar67 != 0);\n                auVar81 = vmovdqu_avx(auVar81);\n                *in_RAX = auVar81;\n                vzeroupper_avx();\n                *(pauVar74 + iVar69 + -0x80) = uVar3;\n                *(pauVar74 + iVar69 + -0x7c) = uVar5;\n                *(pauVar74 + iVar69 + -0x78) = uVar6;\n                *(pauVar74 + iVar69 + -0x74) = uVar7;\n                *(pauVar74 + iVar69 + -0x70) = uVar8;\n                *(pauVar74 + iVar69 + -0x6c) = uVar9;\n                *(pauVar74 + iVar69 + -0x68) = uVar10;\n                *(pauVar74 + iVar69 + -100) = uVar11;\n                *(pauVar74 + iVar69 + -0x60) = uVar12;\n                *(pauVar74 + iVar69 + -0x5c) = uVar13;\n                *(pauVar74 + iVar69 + -0x58) = uVar14;\n                *(pauVar74 + iVar69 + -0x54) = uVar15;\n                *(pauVar74 + iVar69 + -0x50) = uVar16;\n                *(pauVar74 + iVar69 + -0x4c) = uVar17;\n                *(pauVar74 + iVar69 + -0x48) = uVar18;\n                *(pauVar74 + iVar69 + -0x44) = uVar19;\n                *(pauVar74 + iVar69 + -0x40) = uVar20;\n                *(pauVar74 + iVar69 + -0x3c) = uVar21;\n                *(pauVar74 + iVar69 + -0x38) = uVar22;\n                *(pauVar74 + iVar69 + -0x34) = uVar23;\n                *(pauVar74 + iVar69 + -0x30) = uVar24;\n                *(pauVar74 + iVar69 + -0x2c) = uVar25;\n                *(pauVar74 + iVar69 + -0x28) = uVar26;\n                *(pauVar74 + iVar69 + -0x24) = uVar27;\n                *(pauVar74 + iVar69 + -0x20) = uVar28;\n                *(pauVar74 + iVar69 + -0x1c) = uVar29;\n                *(pauVar74 + iVar69 + -0x18) = uVar30;\n                *(pauVar74 + iVar69 + -0x14) = uVar31;\n                *(pauVar74 + iVar69 + -0x10) = uVar32;\n                *(pauVar74 + iVar69 + -0xc) = uVar33;\n                *(pauVar74 + iVar69 + -8) = uVar34;\n                *(pauVar74 + iVar69 + -4) = uVar35;\n                return;\n            }\n            uVar3 = *(unaff_RBX[-4] + arg1);\n            uVar5 = *(unaff_RBX[-4] + arg1 + 4);\n            uVar6 = *(unaff_RBX[-4] + arg1 + 8);\n            uVar7 = *(unaff_RBX[-4] + arg1 + 0xc);\n            uVar8 = *(unaff_RBX[-4] + arg1 + 0x10);\n            uVar9 = *(unaff_RBX[-4] + arg1 + 0x14);\n            uVar10 = *(unaff_RBX[-4] + arg1 + 0x18);\n            uVar11 = *(unaff_RBX[-4] + arg1 + 0x1c);\n            pauVar73 = (in_RAX & 0xffffffffffffffe0) + 0x20;\n            uVar12 = *(unaff_RBX[-3] + arg1);\n            uVar13 = *(unaff_RBX[-3] + arg1 + 4);\n            uVar14 = *(unaff_RBX[-3] + arg1 + 8);\n            uVar15 = *(unaff_RBX[-3] + arg1 + 0xc);\n            uVar16 = *(unaff_RBX[-3] + arg1 + 0x10);\n            uVar17 = *(unaff_RBX[-3] + arg1 + 0x14);\n            uVar18 = *(unaff_RBX[-3] + arg1 + 0x18);\n            uVar19 = *(unaff_RBX[-3] + arg1 + 0x1c);\n            uVar20 = *(unaff_RBX[-2] + arg1);\n            uVar21 = *(unaff_RBX[-2] + arg1 + 4);\n            uVar22 = *(unaff_RBX[-2] + arg1 + 8);\n            uVar23 = *(unaff_RBX[-2] + arg1 + 0xc);\n            uVar24 = *(unaff_RBX[-2] + arg1 + 0x10);\n            uVar25 = *(unaff_RBX[-2] + arg1 + 0x14);\n            uVar26 = *(unaff_RBX[-2] + arg1 + 0x18);\n            uVar27 = *(unaff_RBX[-2] + arg1 + 0x1c);\n            uVar28 = *(unaff_RBX[-1] + arg1);\n            uVar29 = *(unaff_RBX[-1] + arg1 + 4);\n            uVar30 = *(unaff_RBX[-1] + arg1 + 8);\n            uVar31 = *(unaff_RBX[-1] + arg1 + 0xc);\n            uVar32 = *(unaff_RBX[-1] + arg1 + 0x10);\n            uVar33 = *(unaff_RBX[-1] + arg1 + 0x14);\n            uVar34 = *(unaff_RBX[-1] + arg1 + 0x18);\n            uVar35 = *(unaff_RBX[-1] + arg1 + 0x1c);\n            auVar81 = vmovdqu_avx(*unaff_RBX);\n            pauVar71 = unaff_RBX + (pauVar73 - in_RAX);\n            uVar67 = (arg1 - (pauVar73 - in_RAX)) - 0x80;\n            do {\n                uVar68 = uVar67;\n                auVar77 = vmovdqu_avx(*pauVar71);\n                auVar78 = vmovdqu_avx(pauVar71[1]);\n                auVar79 = vmovdqu_avx(pauVar71[2]);\n                auVar80 = vmovdqu_avx(pauVar71[3]);\n                pauVar71 = pauVar71[4];\n                *pauVar73 = auVar77;\n                pauVar73[1] = auVar78;\n                pauVar73[2] = auVar79;\n                pauVar73[3] = auVar80;\n                pauVar73 = pauVar73[4];\n                uVar67 = uVar68 - 0x80;\n            } while (0x7f < uVar68 && uVar68 - 0x80 != 0);\n            auVar81 = vmovdqu_avx(auVar81);\n            *in_RAX = auVar81;\n            vzeroupper_avx();\n            *(pauVar73[-4] + uVar68) = uVar3;\n            *(pauVar73[-4] + uVar68 + 4) = uVar5;\n            *(pauVar73[-4] + uVar68 + 8) = uVar6;\n            *(pauVar73[-4] + uVar68 + 0xc) = uVar7;\n            *(pauVar73[-4] + uVar68 + 0x10) = uVar8;\n            *(pauVar73[-4] + uVar68 + 0x14) = uVar9;\n            *(pauVar73[-4] + uVar68 + 0x18) = uVar10;\n            *(pauVar73[-4] + uVar68 + 0x1c) = uVar11;\n            *(pauVar73[-3] + uVar68) = uVar12;\n            *(pauVar73[-3] + uVar68 + 4) = uVar13;\n            *(pauVar73[-3] + uVar68 + 8) = uVar14;\n            *(pauVar73[-3] + uVar68 + 0xc) = uVar15;\n            *(pauVar73[-3] + uVar68 + 0x10) = uVar16;\n            *(pauVar73[-3] + uVar68 + 0x14) = uVar17;\n            *(pauVar73[-3] + uVar68 + 0x18) = uVar18;\n            *(pauVar73[-3] + uVar68 + 0x1c) = uVar19;\n            *(pauVar73[-2] + uVar68) = uVar20;\n            *(pauVar73[-2] + uVar68 + 4) = uVar21;\n            *(pauVar73[-2] + uVar68 + 8) = uVar22;\n            *(pauVar73[-2] + uVar68 + 0xc) = uVar23;\n            *(pauVar73[-2] + uVar68 + 0x10) = uVar24;\n            *(pauVar73[-2] + uVar68 + 0x14) = uVar25;\n            *(pauVar73[-2] + uVar68 + 0x18) = uVar26;\n            *(pauVar73[-2] + uVar68 + 0x1c) = uVar27;\n            *(pauVar73[-1] + uVar68) = uVar28;\n            *(pauVar73[-1] + uVar68 + 4) = uVar29;\n            *(pauVar73[-1] + uVar68 + 8) = uVar30;\n            *(pauVar73[-1] + uVar68 + 0xc) = uVar31;\n            *(pauVar73[-1] + uVar68 + 0x10) = uVar32;\n            *(pauVar73[-1] + uVar68 + 0x14) = uVar33;\n            *(pauVar73[-1] + uVar68 + 0x18) = uVar34;\n            *(pauVar73[-1] + uVar68 + 0x1c) = uVar35;\n            return;\n        }\n        if ((in_RAX < unaff_RBX) || (*unaff_RBX + arg1 <= in_RAX)) {\n            if (arg1 < 0x801) {\n                do {\n                    arg1 = arg1 - 0x100;\n                    uVar48 = *(*unaff_RBX + 4);\n                    uVar49 = *(*unaff_RBX + 8);\n                    uVar50 = *(*unaff_RBX + 0xc);\n                    uVar51 = *(*unaff_RBX + 0x10);\n                    uVar52 = *(*unaff_RBX + 0x14);\n                    uVar53 = *(*unaff_RBX + 0x18);\n                    uVar54 = *(*unaff_RBX + 0x1c);\n                    uVar55 = *unaff_RBX[1];\n                    uVar56 = *(unaff_RBX[1] + 4);\n                    uVar57 = *(unaff_RBX[1] + 8);\n                    uVar58 = *(unaff_RBX[1] + 0xc);\n                    uVar59 = *(unaff_RBX[1] + 0x10);\n                    uVar60 = *(unaff_RBX[1] + 0x14);\n                    uVar61 = *(unaff_RBX[1] + 0x18);\n                    uVar62 = *(unaff_RBX[1] + 0x1c);\n                    uVar63 = *unaff_RBX[2];\n                    uVar64 = *(unaff_RBX[2] + 4);\n                    uVar65 = *(unaff_RBX[2] + 8);\n                    uVar66 = *(unaff_RBX[2] + 0xc);\n                    uVar3 = *(unaff_RBX[2] + 0x10);\n                    uVar5 = *(unaff_RBX[2] + 0x14);\n                    uVar6 = *(unaff_RBX[2] + 0x18);\n                    uVar7 = *(unaff_RBX[2] + 0x1c);\n                    uVar8 = *unaff_RBX[3];\n                    uVar9 = *(unaff_RBX[3] + 4);\n                    uVar10 = *(unaff_RBX[3] + 8);\n                    uVar11 = *(unaff_RBX[3] + 0xc);\n                    uVar12 = *(unaff_RBX[3] + 0x10);\n                    uVar13 = *(unaff_RBX[3] + 0x14);\n                    uVar14 = *(unaff_RBX[3] + 0x18);\n                    uVar15 = *(unaff_RBX[3] + 0x1c);\n                    uVar16 = *unaff_RBX[4];\n                    uVar17 = *(unaff_RBX[4] + 4);\n                    uVar18 = *(unaff_RBX[4] + 8);\n                    uVar19 = *(unaff_RBX[4] + 0xc);\n                    uVar20 = *(unaff_RBX[4] + 0x10);\n                    uVar21 = *(unaff_RBX[4] + 0x14);\n                    uVar22 = *(unaff_RBX[4] + 0x18);\n                    uVar23 = *(unaff_RBX[4] + 0x1c);\n                    uVar24 = *unaff_RBX[5];\n                    uVar25 = *(unaff_RBX[5] + 4);\n                    uVar26 = *(unaff_RBX[5] + 8);\n                    uVar27 = *(unaff_RBX[5] + 0xc);\n                    uVar28 = *(unaff_RBX[5] + 0x10);\n                    uVar29 = *(unaff_RBX[5] + 0x14);\n                    uVar30 = *(unaff_RBX[5] + 0x18);\n                    uVar31 = *(unaff_RBX[5] + 0x1c);\n                    uVar32 = *unaff_RBX[6];\n                    uVar33 = *(unaff_RBX[6] + 4);\n                    uVar34 = *(unaff_RBX[6] + 8);\n                    uVar35 = *(unaff_RBX[6] + 0xc);\n                    uVar36 = *(unaff_RBX[6] + 0x10);\n                    uVar37 = *(unaff_RBX[6] + 0x14);\n                    uVar38 = *(unaff_RBX[6] + 0x18);\n                    uVar39 = *(unaff_RBX[6] + 0x1c);\n                    uVar40 = *unaff_RBX[7];\n                    uVar41 = *(unaff_RBX[7] + 4);\n                    uVar42 = *(unaff_RBX[7] + 8);\n                    uVar43 = *(unaff_RBX[7] + 0xc);\n                    uVar44 = *(unaff_RBX[7] + 0x10);\n                    uVar45 = *(unaff_RBX[7] + 0x14);\n                    uVar46 = *(unaff_RBX[7] + 0x18);\n                    uVar47 = *(unaff_RBX[7] + 0x1c);\n                    **in_RAX = **unaff_RBX;\n                    *(*in_RAX + 4) = uVar48;\n                    *(*in_RAX + 8) = uVar49;\n                    *(*in_RAX + 0xc) = uVar50;\n                    *(*in_RAX + 0x10) = uVar51;\n                    *(*in_RAX + 0x14) = uVar52;\n                    *(*in_RAX + 0x18) = uVar53;\n                    *(*in_RAX + 0x1c) = uVar54;\n                    *in_RAX[1] = uVar55;\n                    *(in_RAX[1] + 4) = uVar56;\n                    *(in_RAX[1] + 8) = uVar57;\n                    *(in_RAX[1] + 0xc) = uVar58;\n                    *(in_RAX[1] + 0x10) = uVar59;\n                    *(in_RAX[1] + 0x14) = uVar60;\n                    *(in_RAX[1] + 0x18) = uVar61;\n                    *(in_RAX[1] + 0x1c) = uVar62;\n                    *in_RAX[2] = uVar63;\n                    *(in_RAX[2] + 4) = uVar64;\n                    *(in_RAX[2] + 8) = uVar65;\n                    *(in_RAX[2] + 0xc) = uVar66;\n                    *(in_RAX[2] + 0x10) = uVar3;\n                    *(in_RAX[2] + 0x14) = uVar5;\n                    *(in_RAX[2] + 0x18) = uVar6;\n                    *(in_RAX[2] + 0x1c) = uVar7;\n                    *in_RAX[3] = uVar8;\n                    *(in_RAX[3] + 4) = uVar9;\n                    *(in_RAX[3] + 8) = uVar10;\n                    *(in_RAX[3] + 0xc) = uVar11;\n                    *(in_RAX[3] + 0x10) = uVar12;\n                    *(in_RAX[3] + 0x14) = uVar13;\n                    *(in_RAX[3] + 0x18) = uVar14;\n                    *(in_RAX[3] + 0x1c) = uVar15;\n                    *in_RAX[4] = uVar16;\n                    *(in_RAX[4] + 4) = uVar17;\n                    *(in_RAX[4] + 8) = uVar18;\n                    *(in_RAX[4] + 0xc) = uVar19;\n                    *(in_RAX[4] + 0x10) = uVar20;\n                    *(in_RAX[4] + 0x14) = uVar21;\n                    *(in_RAX[4] + 0x18) = uVar22;\n                    *(in_RAX[4] + 0x1c) = uVar23;\n                    *in_RAX[5] = uVar24;\n                    *(in_RAX[5] + 4) = uVar25;\n                    *(in_RAX[5] + 8) = uVar26;\n                    *(in_RAX[5] + 0xc) = uVar27;\n                    *(in_RAX[5] + 0x10) = uVar28;\n                    *(in_RAX[5] + 0x14) = uVar29;\n                    *(in_RAX[5] + 0x18) = uVar30;\n                    *(in_RAX[5] + 0x1c) = uVar31;\n                    *in_RAX[6] = uVar32;\n                    *(in_RAX[6] + 4) = uVar33;\n                    *(in_RAX[6] + 8) = uVar34;\n                    *(in_RAX[6] + 0xc) = uVar35;\n                    *(in_RAX[6] + 0x10) = uVar36;\n                    *(in_RAX[6] + 0x14) = uVar37;\n                    *(in_RAX[6] + 0x18) = uVar38;\n                    *(in_RAX[6] + 0x1c) = uVar39;\n                    *in_RAX[7] = uVar40;\n                    *(in_RAX[7] + 4) = uVar41;\n                    *(in_RAX[7] + 8) = uVar42;\n                    *(in_RAX[7] + 0xc) = uVar43;\n                    *(in_RAX[7] + 0x10) = uVar44;\n                    *(in_RAX[7] + 0x14) = uVar45;\n                    *(in_RAX[7] + 0x18) = uVar46;\n                    *(in_RAX[7] + 0x1c) = uVar47;\n                    unaff_RBX = unaff_RBX[8];\n                    in_RAX = in_RAX[8];\n                } while (0xff < arg1);\n            }\n            else {\n                if ((*0x8020e6 == '\\x01') && (((unaff_RBX | in_RAX) & 7) != 0)) {\n                    for (; arg1 != 0; arg1 = arg1 - 1) {\n                        (*in_RAX)[0] = (*unaff_RBX)[0];\n                        unaff_RBX = *unaff_RBX + 1;\n                        in_RAX = *in_RAX + 1;\n                    }\n                    return;\n                }\n                uVar68 = arg1 & 7;\n                for (uVar67 = arg1 >> 3; arg1 = uVar68,  uVar67 != 0; uVar67 = uVar67 - 1) {\n                    **in_RAX = **unaff_RBX;\n                    unaff_RBX = *unaff_RBX + 8;\n                    in_RAX = *in_RAX + 8;\n                }\n            }\n        }\n        else {\n            uVar67 = arg1 >> 3;\n            uVar68 = arg1 & 7;\n            puVar70 = *unaff_RBX + arg1;\n            puVar72 = *in_RAX + arg1;\n            while( true ) {\n                if (uVar67 == 0) break;\n                uVar67 = uVar67 - 1;\n                puVar72[-1] = puVar70[-1];\n                puVar70 = puVar70 + -1;\n                puVar72 = puVar72 + -1;\n            }\n            in_RAX = puVar72 - uVar68;\n            unaff_RBX = puVar70 - uVar68;\n            arg1 = uVar68;\n        }\n    }\n    uVar3 = *(*unaff_RBX + 4);\n    uVar5 = *(*unaff_RBX + 8);\n    uVar6 = *(*unaff_RBX + 0xc);\n    puVar1 = unaff_RBX[-1] + arg1 + 0x10;\n    uVar7 = *puVar1;\n    uVar8 = puVar1[1];\n    uVar9 = puVar1[2];\n    uVar10 = puVar1[3];\n    **in_RAX = **unaff_RBX;\n    *(*in_RAX + 4) = uVar3;\n    *(*in_RAX + 8) = uVar5;\n    *(*in_RAX + 0xc) = uVar6;\n    puVar1 = in_RAX[-1] + arg1 + 0x10;\n    *puVar1 = uVar7;\n    puVar1[1] = uVar8;\n    puVar1[2] = uVar9;\n    puVar1[3] = uVar10;\n    return;\n}\n",
        "token_count": 13219
    },
    "0045fb60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045fb60(void)\n\n{\n    if (*0x8019b3 == '\\0') {\n        return;\n    }\n    fcn.0042f100();\n    return;\n}\n",
        "token_count": 44
    },
    "0045fbc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0045fbc0(ulong noname_0, ulong arg2)\n\n{\n    int64_t iVar1;\n    \n    if (*0x8019b3 == '\\0') {\n        return (*0x7ffe0014 + -0x19db1ded53e8000) * 0x5fca6af2bd215e5c;\n    }\n    iVar1 = fcn.0042f180();\n    return iVar1;\n}\n",
        "token_count": 104
    },
    "0045fe60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045fe60(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    uint8_t uVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t arg1_00;\n    ulong in_R9;\n    int64_t in_GS_OFFSET;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    \n    uVar7 = 0;\n    uVar8 = 0;\n    uVar9 = 0;\n    uVar10 = 0;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    puVar5 = *0x20;\n    do {\n        puVar1 = iVar2 + 0x10;\n        puVar6 = puVar5;\n        if (*puVar1 <= puVar5 && puVar5 != *puVar1) {\n            puVar6 = puVar5 + -0x60;\n            *(puVar5 + -8) = unaff_RBP;\n            unaff_RBP = puVar5 + -8;\n            if (*0x801c20 == 0) {\n                *0x7ad058 = 0x45f600;\n            }\n            else {\n                *(puVar5 + -0x68) = 0x42efa5;\n                fcn.0045dec0(arg1, 0x45f600, arg3, in_R9);\n            }\n            arg1_00 = 0;\n            while( true ) {\n                if (0x35 < arg1_00) {\n                    *(puVar5 + -0x68) = 0x42f015;\n                    fcn.0042e0e0();\n                    *(puVar5 + -0x68) = 0x42f01a;\n                    fcn.00446640();\n                    *(puVar5 + -0x68) = 0x42f01f;\n                    fcn.004466e0();\n                    *(puVar5 + -0x68) = 0x42f025;\n                    fcn.0042ebe0();\n                    *(puVar5 + -0x68) = 0x42f02c;\n                    *0x801a18 = fcn.0042eb20();\n                    *(puVar5 + -0x68) = 0x42f037;\n                    fcn.0042eca0();\n                    *(puVar5 + -0x68) = 0x42f03c;\n                    *0x8019f8 = fcn.0042ea00();\n                    *(puVar5 + -0x38) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                    *(puVar5 + -0x28) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                    *(puVar5 + -0x18) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                    *(puVar5 + -0x60) = *0x7951e8;\n                    *(puVar5 + -0x58) = puVar5 + -0x38;\n                    *(puVar5 + -0x68) = 0x42f06e;\n                    fcn.00430d80();\n                    *0x801b18 = *(puVar5 + -0x34);\n                    *(puVar5 + -0x60) = *0x795198;\n                    *(puVar5 + -0x58) = 0xffffffffffffffff;\n                    *(puVar5 + -0x50) = 1;\n                    *(puVar5 + -0x68) = 0x42f0af;\n                    fcn.00430e00();\n                    return;\n                }\n                uVar3 = *(arg1_00 + 0x4b7783);\n                if (uVar3 < 0x80) {\n                    uVar4 = arg1_00;\n                    arg1_00 = arg1_00 + 1;\n                }\n                else {\n                    *(puVar5 + -0x40) = arg1_00;\n                    *(puVar5 + -0x68) = 0x42eff4;\n                    uVar3 = fcn.00458880(arg1_00);\n                    arg1_00 = 0x36;\n                    uVar4 = *(puVar5 + -0x40);\n                }\n                if (99 < uVar4) break;\n                arg3 = 0x801f20;\n                *(uVar4 + 0x801f20) = uVar3;\n                *0x8019c8 = *0x8019c8 + 1;\n            }\n            arg1 = 100;\n            *(puVar5 + -0x68) = 0x42f0d7;\n            fcn.0045e240(100);\n        }\n        *(puVar6 + -8) = 0x42f0dd;\n        fcn.0045bb60();\n        puVar5 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1159
    },
    "00460040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00437564)\n\nvoid fcn.00460040(ulong param_1, int64_t param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t arg1;\n    uchar *puVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t in_GS_OFFSET;\n    \n    iVar2 = **(in_GS_OFFSET + 0x28);\n    puVar4 = *0x20;\n    do {\n        puVar5 = puVar4;\n        if (*(iVar2 + 0x10) <= puVar4 && puVar4 != *(iVar2 + 0x10)) {\n            puVar5 = puVar4 + -0x50;\n            *(puVar4 + -8) = unaff_RBP;\n            unaff_RBP = puVar4 + -8;\n            *(puVar4 + -0x18) = iVar2;\n            *0x7ae538 = 10000;\n            iVar2 = 0x79ae80;\n            while (iVar2 != 0) {\n                *(puVar4 + -0x20) = iVar2;\n                *(puVar4 + -0x58) = 0x43741a;\n                fcn.0044c620();\n                iVar2 = *(*(puVar4 + -0x20) + 0x220);\n            }\n            for (iVar2 = 0; iVar2 < 2; iVar2 = iVar2 + 1) {\n                param_2 = 0x802020;\n                *(iVar2 * 0x40 + 0x802028) = 0;\n                *(iVar2 * 0x40 + 0x802030) = 0;\n            }\n            for (iVar2 = 0; iVar2 < 0x23; iVar2 = iVar2 + 1) {\n                param_2 = 0x8028e8;\n                *(iVar2 * 0x10 + 0x8028e8) = 0;\n                *(iVar2 * 0x10 + 0x8028f0) = 0;\n            }\n            *(puVar4 + -0x58) = 0x43748b;\n            fcn.0040ae00();\n            *(puVar4 + -0x58) = 0x437490;\n            fcn.00437380();\n            *(puVar4 + -0x58) = 0x437495;\n            fcn.00403440();\n            *(puVar4 + -0x58) = 0x4374aa;\n            fcn.0042f560(8);\n            uVar1 = *(*(puVar4 + -0x18) + 0x30);\n            *(puVar4 + -0x58) = 0x4374c5;\n            fcn.004377c0(uVar1);\n            *(puVar4 + -0x58) = 0x4374ca;\n            fcn.0044c3a0();\n            *(puVar4 + -0x58) = 0x4374cf;\n            fcn.00457600();\n            *(puVar4 + -0x58) = 0x4374d4;\n            fcn.004099c0();\n            *(puVar4 + -0x58) = 0x4374d9;\n            fcn.0044a9e0();\n            *(puVar4 + -0x58) = 0x4374e9;\n            fcn.0042f600();\n            *(puVar4 + -0x58) = 0x4374ee;\n            fcn.004436a0();\n            *(puVar4 + -0x58) = 0x4374f3;\n            fcn.00415e80();\n            *(puVar4 + -0x58) = 0x437505;\n            fcn.0040a460();\n            *(puVar4 + -0x58) = 0x43750a;\n            fcn.0045fb60();\n            iVar2 = **(in_GS_OFFSET + 0x28);\n            *0x7ae508 = *(puVar4 + -0x50);\n            *(puVar4 + -0x34) = *0x8019f8;\n            *(puVar4 + -0x58) = 0x437545;\n            fcn.004071c0();\n            *(puVar4 + -0x58) = 0x43754a;\n            fcn.0044bd40();\n            arg1 = *(puVar4 + -0x34);\n            *(puVar4 + -0x58) = 0x437573;\n            iVar3 = fcn.0043fa60();\n            if (iVar3 == 0) {\n                *(puVar4 + -0x58) = 0x43758a;\n                fcn.0040a680();\n                if (1 < *0x801e60) {\n                    *0x801c25 = 1;\n                    *0x801c20 = CONCAT31(*0x801c21, 1);\n                    *(puVar4 + -0x10) = *0x7ada40;\n                    *(puVar4 + -0x28) = *0x7ada48;\n                    iVar2 = 0;\n                    arg1 = *0x7ada40;\n                    param_2 = *0x7ada48;\n                    while (iVar2 < param_2) {\n                        *(puVar4 + -0x30) = iVar2;\n                        iVar2 = *(arg1 + iVar2 * 8);\n                        *(puVar4 + -0x58) = 0x437665;\n                        fcn.0042ce20(arg1, iVar2 + 0x1268);\n                        arg1 = *(puVar4 + -0x10);\n                        param_2 = *(puVar4 + -0x28);\n                        iVar2 = *(puVar4 + -0x30) + 1;\n                    }\n                }\n                if (*0x7a6648 == 0) {\n                    *0x7a6648 = 7;\n                    if (*0x801c20 == 0) {\n                        *0x7a6640 = 0x4af498;\n                    }\n                    else {\n                        *(puVar4 + -0x58) = 0x437606;\n                        fcn.0045dda0(arg1, param_2, param_3, param_4);\n                    }\n                }\n                if (*0x7a6688 == 1) {\n                    *0x7a6688 = 0;\n                    if (*0x801c20 == 0) {\n                        *0x7a6680 = 0;\n                    }\n                    else {\n                        *(puVar4 + -0x58) = 0x43763f;\n                        fcn.0045dda0(arg1, param_2, param_3, param_4);\n                    }\n                }\n                return;\n            }\n            *(puVar4 + -0x58) = 0x437696;\n            fcn.00433c80();\n        }\n        *(puVar5 + -8) = 0x43769c;\n        fcn.0045bb60();\n        puVar4 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1631
    },
    "00460060": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00460060(void)\n\n{\n    int64_t in_GS_OFFSET;\n    int64_t iStack24;\n    int64_t *piStack16;\n    \n    piStack16 = **(in_GS_OFFSET + 0x28);\n    if (*piStack16 == 0) {\n        iStack24 = piStack16[1];\n        if (iStack24 == 0) {\n            iStack24 = 0x2000;\n        }\n        piStack16[1] = &iStack24;\n        *piStack16 = &stack0x000003e8 + -iStack24;\n    }\n    piStack16[2] = *piStack16 + 0x13a0;\n    piStack16[3] = *piStack16 + 0x13a0;\n    fcn.00438b60();\n    fcn.00438d00();\n    return;\n}\n",
        "token_count": 198
    },
    "00460140": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004434ac)\n// WARNING: Removing unreachable block (ram,0x004434ae)\n// WARNING: Removing unreachable block (ram,0x004434b4)\n// WARNING: Removing unreachable block (ram,0x004434cf)\n// WARNING: Removing unreachable block (ram,0x004434d5)\n// WARNING: Removing unreachable block (ram,0x004434d7)\n// WARNING: Removing unreachable block (ram,0x004434dd)\n// WARNING: Removing unreachable block (ram,0x004434f0)\n// WARNING: Removing unreachable block (ram,0x004434f6)\n// WARNING: Removing unreachable block (ram,0x0044350f)\n// WARNING: Removing unreachable block (ram,0x00443511)\n// WARNING: Removing unreachable block (ram,0x0044351d)\n// WARNING: Removing unreachable block (ram,0x00443537)\n// WARNING: Removing unreachable block (ram,0x00443539)\n// WARNING: Removing unreachable block (ram,0x00443558)\n// WARNING: Removing unreachable block (ram,0x00443562)\n// WARNING: Removing unreachable block (ram,0x00443573)\n// WARNING: Removing unreachable block (ram,0x0044351a)\n// WARNING: Removing unreachable block (ram,0x00443585)\n// WARNING: Removing unreachable block (ram,0x00443596)\n// WARNING: Removing unreachable block (ram,0x004435a7)\n// WARNING: Removing unreachable block (ram,0x004435b8)\n// WARNING: Removing unreachable block (ram,0x004435c9)\n\nvoid fcn.00460140(void)\n\n{\n    uint64_t *puVar1;\n    int32_t *piVar2;\n    uint8_t *puVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t iVar10;\n    int64_t in_GS_OFFSET;\n    \n    iVar4 = **(in_GS_OFFSET + 0x28);\n    puVar8 = *0x20;\n    do {\n        puVar1 = iVar4 + 0x10;\n        puVar9 = puVar8;\n        if (*puVar1 <= puVar8 && puVar8 != *puVar1) {\n            puVar9 = puVar8 + -0x40;\n            *(puVar8 + -8) = unaff_RBP;\n            unaff_RBP = puVar8 + -8;\n            *(puVar8 + -0x1c) = 0;\n            *(puVar8 + -0x20) = 0;\n            *(puVar8 + -0x24) = 0;\n            *(puVar8 + -0x10) = 0;\n            *(puVar8 + -0x18) = 0;\n            *(puVar8 + -0x28) = 0;\n            uVar5 = 0;\n            iVar7 = 0xb3a4b57ce31;\n            for (iVar6 = 0x1e; -1 < iVar6; iVar6 = iVar6 + -1) {\n                iVar10 = 1000000000 << (iVar6 & 0x3f);\n                if (iVar10 <= iVar7) {\n                    iVar7 = iVar7 - iVar10;\n                    uVar5 = uVar5 | 1 << (iVar6 & 0x1f);\n                }\n            }\n            if (iVar7 < 1000000000) {\n                *(puVar8 + -0x1c) = iVar7;\n            }\n            else {\n                *(puVar8 + -0x1c) = 0;\n                uVar5 = 0x7fffffff;\n            }\n            if ((uVar5 == 0x3039) && (*(puVar8 + -0x1c) == 0xd431)) {\n                *(puVar8 + -0x2c) = 0;\n                *(puVar8 + -0x2c) = 1;\n                piVar2 = puVar8 + -0x2c;\n                LOCK();\n                if (*piVar2 == 1) {\n                    *piVar2 = 2;\n                    if (*(puVar8 + -0x2c) == 2) {\n                        *(puVar8 + -0x2c) = 4;\n                        LOCK();\n                        if (*piVar2 == 5) {\n                            *piVar2 = 6;\n                        }\n                        else {\n                            if (*(puVar8 + -0x2c) == 4) {\n                                *(puVar8 + -0x2c) = 0xffffffff;\n                                LOCK();\n                                if (*piVar2 == -1) {\n                                    *piVar2 = -2;\n                                    if (*(puVar8 + -0x2c) == -2) {\n                                        *(puVar8 + -0x28) = 0x1010101;\n                                        puVar3 = puVar8 + -0x27;\n                                        LOCK();\n                                        *puVar3 = *puVar3 | 0xf0;\n                                        if ((((puVar8[-0x28] == '\\x01') && (puVar8[-0x27] == -0xf)) &&\n                                            (puVar8[-0x26] == '\\x01')) && (puVar8[-0x25] == '\\x01')) {\n                                            *(puVar8 + -0x28) = 0xffffffff;\n                                            LOCK();\n                                            *puVar3 = *puVar3 & 1;\n                                            if (((puVar8[-0x28] == -1) && (puVar8[-0x27] == '\\x01')) &&\n                                               ((puVar8[-0x26] == -1 && (puVar8[-0x25] == -1)))) {\n                                                *(puVar8 + -0x10) = 0xffffffffffffffff;\n                                                *(puVar8 + -0x48) = 0x4435eb;\n                                                fcn.00433c80();\n                                            }\n                                            *(puVar8 + -0x48) = 0x4435fc;\n                                            fcn.00433c80();\n                                        }\n                                        *(puVar8 + -0x48) = 0x44360d;\n                                        fcn.00433c80();\n                                    }\n                                    *(puVar8 + -0x48) = 0x44361e;\n                                    fcn.00433c80();\n                                }\n                                *(puVar8 + -0x48) = 0x44362f;\n                                fcn.00433c80();\n                            }\n                            *(puVar8 + -0x48) = 0x443645;\n                            fcn.00433c80();\n                        }\n                        *(puVar8 + -0x48) = 0x443656;\n                        fcn.00433c80();\n                    }\n                    *(puVar8 + -0x48) = 0x443667;\n                    fcn.00433c80();\n                }\n                *(puVar8 + -0x48) = 0x443678;\n                fcn.00433c80();\n            }\n            *(puVar8 + -0x48) = 0x443689;\n            fcn.00433c80();\n        }\n        *(puVar9 + -8) = 0x44368f;\n        fcn.0045bb60();\n        puVar8 = puVar9;\n    } while( true );\n}\n",
        "token_count": 1648
    },
    "00460280": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00460280(void)\n\n{\n    uint uVar1;\n    uint64_t *puVar2;\n    uint64_t uVar3;\n    uint64_t **ppuVar4;\n    int64_t iVar5;\n    uint uVar6;\n    uint uVar7;\n    int32_t iVar8;\n    int64_t iVar9;\n    uint64_t *puVar10;\n    ulong uVar11;\n    uint64_t uVar12;\n    ulong *puVar13;\n    ulong uVar14;\n    uint64_t uVar15;\n    ulong unaff_RBX;\n    uchar *puVar16;\n    uchar *puVar17;\n    uchar *unaff_RBP;\n    int64_t in_GS_OFFSET;\n    \n    iVar9 = **(in_GS_OFFSET + 0x28);\n    puVar16 = *0x20;\n    do {\n        puVar17 = puVar16;\n        if (*(iVar9 + 0x10) <= puVar16 + -0x130 && puVar16 + -0x130 != *(iVar9 + 0x10)) {\n            puVar17 = puVar16 + -0x1b0;\n            *(puVar16 + -8) = unaff_RBP;\n            unaff_RBP = puVar16 + -8;\n            puVar13 = *(iVar9 + 0x30);\n            puVar2 = puVar13[3];\n            if (puVar2[2] != 0xfffffffffffffb2e) {\n                *(puVar16 + -0xf8) = iVar9;\n                puVar10 = puVar13[0x12];\n                *(puVar16 + -0xb8) = puVar10;\n                if (puVar2 == puVar10) break;\n                *(puVar16 + -0xd8) = puVar13;\n                *(puVar16 + -0x158) = puVar2;\n                *(puVar16 + -0xe0) = *puVar13;\n                *(puVar16 + -0xe8) = puVar13[10];\n                *(puVar16 + -0x1b8) = 0x449d7b;\n                fcn.00435540();\n                *(puVar16 + -0x1b8) = 0x449d8c;\n                fcn.00435e40();\n                *(puVar16 + -0x1b8) = 0x449d96;\n                fcn.00435ca0();\n                *(puVar16 + -0x1b8) = 0x449da7;\n                fcn.00435e40();\n                *(puVar16 + -0x1b8) = 0x449db4;\n                fcn.00435dc0();\n                *(puVar16 + -0x1b8) = 0x449dc5;\n                fcn.00435e40();\n                *(puVar16 + -0x1b8) = 0x449dd2;\n                fcn.00435dc0();\n                *(puVar16 + -0x1b8) = 0x449de5;\n                fcn.00435e40();\n                *(puVar16 + -0x1b8) = 0x449df2;\n                fcn.00435dc0();\n                *(puVar16 + -0x1b8) = 0x449e05;\n                fcn.00435e40();\n                *(puVar16 + -0x1b8) = 0x449e12;\n                fcn.00435dc0();\n                *(puVar16 + -0x1b8) = 0x449e17;\n                fcn.004357a0();\n                *(puVar16 + -0x1b8) = 0x449e1c;\n                fcn.004355c0();\n                iVar5 = *(*(puVar16 + -0xf8) + 0x30);\n                *(puVar16 + -0x40) = *(iVar5 + 8);\n                uVar1 = *(iVar5 + 0x14);\n                uVar6 = *(iVar5 + 0x18);\n                uVar7 = *(iVar5 + 0x1c);\n                *(puVar16 + -0x38) = *(iVar5 + 0x10);\n                *(puVar16 + -0x34) = uVar1;\n                *(puVar16 + -0x30) = uVar6;\n                *(puVar16 + -0x2c) = uVar7;\n                uVar1 = *(iVar5 + 0x24);\n                uVar6 = *(iVar5 + 0x28);\n                uVar7 = *(iVar5 + 0x2c);\n                *(puVar16 + -0x28) = *(iVar5 + 0x20);\n                *(puVar16 + -0x24) = uVar1;\n                *(puVar16 + -0x20) = uVar6;\n                *(puVar16 + -0x1c) = uVar7;\n                uVar1 = *(iVar5 + 0x34);\n                uVar6 = *(iVar5 + 0x38);\n                uVar7 = *(iVar5 + 0x3c);\n                *(puVar16 + -0x18) = *(iVar5 + 0x30);\n                *(puVar16 + -0x14) = uVar1;\n                *(puVar16 + -0x10) = uVar6;\n                *(puVar16 + -0xc) = uVar7;\n                *(puVar16 + -0x1b8) = 0x449e85;\n                fcn.00455100(*(puVar16 + -0x18));\n                *(puVar16 + -0x1b8) = 0x449e96;\n                fcn.00433c80();\n            }\n            unaff_RBX = 0x17;\n            *(puVar16 + -0x1b8) = 0x449ea7;\n            fcn.00433c80();\n        }\n        *(puVar17 + -8) = 0x449ead;\n        fcn.0045bb60();\n        puVar16 = puVar17;\n    } while( true );\n    if (*(puVar10 + 0xb7) == '\\0') {\n        *(puVar16 + -0xb0) = puVar13[1];\n        uVar1 = *(puVar13 + 0x14);\n        uVar6 = *(puVar13 + 3);\n        uVar7 = *(puVar13 + 0x1c);\n        *(puVar16 + -0xa8) = *(puVar13 + 2);\n        *(puVar16 + -0xa4) = uVar1;\n        *(puVar16 + -0xa0) = uVar6;\n        *(puVar16 + -0x9c) = uVar7;\n        uVar1 = *(puVar13 + 0x24);\n        uVar6 = *(puVar13 + 5);\n        uVar7 = *(puVar13 + 0x2c);\n        *(puVar16 + -0x98) = *(puVar13 + 4);\n        *(puVar16 + -0x94) = uVar1;\n        *(puVar16 + -0x90) = uVar6;\n        *(puVar16 + -0x8c) = uVar7;\n        uVar1 = *(puVar13 + 0x34);\n        uVar6 = *(puVar13 + 7);\n        uVar7 = *(puVar13 + 0x3c);\n        *(puVar16 + -0x88) = *(puVar13 + 6);\n        *(puVar16 + -0x84) = uVar1;\n        *(puVar16 + -0x80) = uVar6;\n        *(puVar16 + -0x7c) = uVar7;\n        *(*(iVar9 + 0x30) + 0x10) = 0;\n        *(*(iVar9 + 0x30) + 0x30) = 0;\n        *(*(iVar9 + 0x30) + 8) = 0;\n        *(*(iVar9 + 0x30) + 0x18) = 0;\n        puVar13 = puVar10[2];\n        *(puVar16 + -0x100) = puVar13;\n        if ((puVar13 == 0xfffffffffffffade) &&\n           ((((iVar9 = *(iVar9 + 0x30),  *(iVar9 + 0xd8) != 0 || (*(iVar9 + 0xc0) != 0)) || (*(iVar9 + 0xd0) != 0)) ||\n            (*(*(iVar9 + 0xa0) + 4) != 1)))) {\n            puVar10[2] = *puVar10 + 0x13a0;\n            *(puVar16 + -0x1b0) = puVar10 + 7;\n            *(puVar16 + -0x1b8) = 0x4493d4;\n            fcn.0045b980();\n            puVar10 = *(puVar16 + -0xb8);\n            puVar13 = *(puVar16 + -0x100);\n        }\n        uVar15 = *puVar10;\n        if (uVar15 != 0) {\n            uVar3 = puVar10[7];\n            uVar12 = uVar3 - 8;\n            *(puVar16 + -0x180) = uVar12;\n            if (uVar12 < uVar15) {\n                *(puVar16 + -0x108) = uVar15;\n                *(puVar16 + -0x110) = uVar3;\n                *(puVar16 + -0x118) = puVar10[1];\n                *(puVar16 + -0x120) = *(puVar16 + -0xa8);\n                *(puVar16 + -0x128) = *(puVar16 + -0xb0);\n                *(puVar16 + -0x130) = *(puVar16 + -0x88);\n                *(puVar16 + -0x138) = puVar10[8];\n                *(puVar16 + -0x140) = puVar10[0xc];\n                *(puVar16 + -0xc0) = puVar10[10];\n                *(puVar16 + -0x1b8) = 0x44948e;\n                fcn.00435540();\n                *(puVar16 + -0x1b8) = 0x44949f;\n                fcn.00435e40();\n                *(puVar16 + -0x1b8) = 0x4494a9;\n                fcn.00435ca0();\n                *(puVar16 + -0x1b8) = 0x4494ba;\n                fcn.00435e40();\n                *(puVar16 + -0x1b8) = 0x4494c7;\n                fcn.00435ca0();\n                *(puVar16 + -0x1b8) = 0x4494d8;\n                fcn.00435e40();\n                *(puVar16 + -0x1b8) = 0x4494e5;\n                fcn.00435ca0();\n                *(puVar16 + -0x1b8) = 0x4494f6;\n                fcn.00435e40();\n                *(puVar16 + -0x1b8) = 0x449505;\n                fcn.00435ca0();\n                *(puVar16 + -0x1b8) = 0x449516;\n                fcn.00435e40();\n                *(puVar16 + -0x1b8) = 0x449525;\n                fcn.00435ca0();\n                *(puVar16 + -0x1b8) = 0x449536;\n                fcn.00435e40();\n                *(puVar16 + -0x1b8) = 0x449545;\n                fcn.00435ca0();\n                *(puVar16 + -0x1b8) = 0x449556;\n                fcn.00435e40();\n                *(puVar16 + -0x1b8) = 0x449565;\n                fcn.00435ca0();\n                *(puVar16 + -0x1b8) = 0x449576;\n                fcn.00435e40();\n                *(puVar16 + -0x1b8) = 0x449585;\n                fcn.00435ca0();\n                *(puVar16 + -0x1b8) = 0x449596;\n                fcn.00435e40();\n                *(puVar16 + -0x1b8) = 0x4495a5;\n                fcn.00435ca0();\n                *(puVar16 + -0x1b8) = 0x4495b6;\n                fcn.00435e40();\n                *(puVar16 + -0x1b8) = 0x4495c5;\n                fcn.00435dc0();\n                *(puVar16 + -0x1b8) = 0x4495d6;\n                fcn.00435e40();\n                *(puVar16 + -0x1b8) = 0x4495db;\n                fcn.004355c0();\n                puVar10 = *(puVar16 + -0xb8);\n                puVar13 = *(puVar16 + -0x100);\n                uVar12 = *(puVar16 + -0x180);\n            }\n            if (*puVar10 < uVar12 || *puVar10 == uVar12) {\n                if (puVar13 != 0xfffffffffffffade) {\ncode_r0x00449682:\n                    uVar15 = puVar10[1];\n                    uVar12 = *puVar10;\n                    *(puVar16 + -0x168) = uVar15 - uVar12;\n                    uVar3 = puVar10[8];\n                    *(puVar16 + -0x1b8) = 0x44969a;\n                    iVar9 = fcn.0044cfe0(uVar15 - uVar12, uVar3);\n                    uVar15 = *(puVar16 + -0x168);\n                    uVar12 = uVar15 << 1;\n                    if (iVar9 != 0) {\n                        *(puVar16 + -0x148) = uVar12;\n                        *(puVar16 + -0x1b8) = 0x4496b4;\n                        iVar8 = fcn.0044dc20();\n                        for (uVar12 = *(puVar16 + -0x148);\n                            uVar12 - (*(*(puVar16 + -0xb8) + 8) - *(*(puVar16 + -0xb8) + 0x38)) < iVar8 + 0x13a0U;\n                            uVar12 = uVar12 << 1) {\n                        }\n                        uVar15 = *(puVar16 + -0x168);\n                    }\n                    if (*(puVar16 + -0x100) == -0x113) {\n                        uVar12 = uVar15;\n                    }\n                    if ((uVar12 <= *0x7953b0) && (uVar12 <= *0x7953a8)) {\n                        *(puVar16 + -0x160) = uVar12;\n                        *(puVar16 + -0x1b8) = 0x449729;\n                        fcn.00438120(8);\n                        *(puVar16 + -0x1b8) = 0x44973b;\n                        fcn.00448ec0();\n                        *(puVar16 + -0x1b8) = 0x449752;\n                        fcn.00438120(2);\n                        *(puVar16 + -0x1b0) = *(puVar16 + -0xb8) + 0x38;\n                        *(puVar16 + -0x1b8) = 0x449767;\n                        fcn.0045b980();\n                        return;\n                    }\n                    if (*0x7953a8 <= *0x7953b0) goto code_r0x0044987b;\n                    *(puVar16 + -0x1b8) = 0x44979d;\n                    fcn.00435540();\n                    *(puVar16 + -0x1b8) = 0x4497ae;\n                    fcn.00435e40();\n                    *(puVar16 + -0x1b8) = 0x4497ba;\n                    fcn.00435b40();\n                    *(puVar16 + -0x1b8) = 0x4497cb;\n                    fcn.00435e40();\n                    *(puVar16 + -0x1b8) = 0x4497d0;\n                    fcn.004355c0();\n                    do {\n                        *(puVar16 + -0x108) = **(puVar16 + -0xb8);\n                        *(puVar16 + -0x110) = (*(puVar16 + -0xb8))[1];\n                        *(puVar16 + -0x1b8) = 0x4497f4;\n                        fcn.00435540();\n                        *(puVar16 + -0x1b8) = 0x449805;\n                        fcn.00435e40();\n                        *(puVar16 + -0x1b8) = 0x44980f;\n                        fcn.00435ca0();\n                        *(puVar16 + -0x1b8) = 0x449825;\n                        fcn.00435e40();\n                        *(puVar16 + -0x1b8) = 0x449832;\n                        fcn.00435ca0();\n                        *(puVar16 + -0x1b8) = 0x449845;\n                        fcn.00435e40();\n                        *(puVar16 + -0x1b8) = 0x449852;\n                        fcn.00435ca0();\n                        *(puVar16 + -0x1b8) = 0x449865;\n                        fcn.00435e40();\n                        *(puVar16 + -0x1b8) = 0x44986a;\n                        fcn.004355c0();\n                        *(puVar16 + -0x1b8) = 0x44987b;\n                        fcn.00433c80();\ncode_r0x0044987b:\n                        *(puVar16 + -0x1b8) = 0x449885;\n                        fcn.00435540();\n                        *(puVar16 + -0x1b8) = 0x449896;\n                        fcn.00435e40();\n                        *(puVar16 + -0x1b8) = 0x4498a5;\n                        fcn.00435b40();\n                        *(puVar16 + -0x1b8) = 0x4498b6;\n                        fcn.00435e40();\n                        *(puVar16 + -0x1b8) = 0x4498bb;\n                        fcn.004355c0();\n                    } while( true );\n                }\n                ppuVar4 = *(*(puVar16 + -0xf8) + 0x30);\n                if (*ppuVar4 != puVar10) {\n                    if ((ppuVar4[0x14] != NULL) || (*(ppuVar4 + 0x1b) != 0)) {\n                        if (*(puVar10 + 0xb3) != '\\0') {\n                            *(puVar10 + 0xb3) = 0;\n                            *(puVar16 + -0x1b8) = 0x44964a;\n                            fcn.00449f60();\n                            puVar10 = *(puVar16 + -0xb8);\n                            puVar13 = *(puVar16 + -0x100);\n                        }\n                        if (*(puVar10 + 0xb2) != '\\0') {\n                            *(puVar16 + -0x1b8) = 0x44966d;\n                            fcn.0043cec0(puVar13);\n                        }\n                        *(puVar16 + -0x1b8) = 0x44967a;\n                        fcn.0043ce40();\n                        puVar10 = *(puVar16 + -0xb8);\n                        goto code_r0x00449682;\n                    }\n                    *(puVar16 + -0x1b8) = 0x4498f6;\n                    fcn.00433c80();\n                }\n                *(puVar16 + -0x1b8) = 0x449907;\n                puVar10 = fcn.00433c80();\n            }\n            puVar13 = *(puVar10 + 0x12);\n            *(puVar16 + -0x184) = *(puVar10 + 0x12);\n            *(puVar16 + -0x150) = puVar10[0x13];\n            *(puVar16 + -0x1b8) = 0x449925;\n            fcn.00435540();\n            *(puVar16 + -0x1b8) = 0x449936;\n            fcn.00435e40();\n            *(puVar16 + -0x1b8) = 0x449945;\n            fcn.00435dc0();\n            *(puVar16 + -0x1b8) = 0x449956;\n            fcn.00435e40();\n            *(puVar16 + -0x1b8) = 0x449965;\n            fcn.00435c40();\n            *(puVar16 + -0x1b8) = 0x449976;\n            fcn.00435e40();\n            *(puVar16 + -0x1b8) = 0x449985;\n            fcn.00435ca0();\n            *(puVar16 + -0x1b8) = 0x449996;\n            fcn.00435e40();\n            *(puVar16 + -0x1b8) = 0x44999b;\n            fcn.004355c0();\n            *(puVar16 + -0x108) = **(puVar16 + -0xb8);\n            *(puVar16 + -0x1b8) = 0x4499b3;\n            fcn.00435540();\n            *(puVar16 + -0x1b8) = 0x4499c5;\n            fcn.00435e40();\n            *(puVar16 + -0x1b8) = 0x4499cf;\n            fcn.00435ca0();\n            *(puVar16 + -0x1b8) = 0x4499e5;\n            fcn.00435e40();\n            *(puVar16 + -0x1b8) = 0x4499f2;\n            fcn.00435ca0();\n            *(puVar16 + -0x1b8) = 0x4499f7;\n            fcn.004357a0();\n            *(puVar16 + -0x1b8) = 0x4499fc;\n            fcn.004355c0();\n            *(puVar16 + -0x1b8) = 0x449a0d;\n            fcn.00433c80();\n        }\n        unaff_RBX = 0x19;\n        *(puVar16 + -0x1b8) = 0x449a1e;\n        puVar10 = fcn.00433c80();\n    }\n    *(puVar16 + -0x78) = puVar13[1];\n    uVar1 = *(puVar13 + 0x14);\n    uVar6 = *(puVar13 + 3);\n    uVar7 = *(puVar13 + 0x1c);\n    *(puVar16 + -0x70) = *(puVar13 + 2);\n    *(puVar16 + -0x6c) = uVar1;\n    *(puVar16 + -0x68) = uVar6;\n    *(puVar16 + -100) = uVar7;\n    uVar1 = *(puVar13 + 0x24);\n    uVar6 = *(puVar13 + 5);\n    uVar7 = *(puVar13 + 0x2c);\n    *(puVar16 + -0x60) = *(puVar13 + 4);\n    *(puVar16 + -0x5c) = uVar1;\n    *(puVar16 + -0x58) = uVar6;\n    *(puVar16 + -0x54) = uVar7;\n    uVar1 = *(puVar13 + 0x34);\n    uVar6 = *(puVar13 + 7);\n    uVar7 = *(puVar13 + 0x3c);\n    *(puVar16 + -0x50) = *(puVar13 + 6);\n    *(puVar16 + -0x4c) = uVar1;\n    *(puVar16 + -0x48) = uVar6;\n    *(puVar16 + -0x44) = uVar7;\n    puVar10[0xe] = *(puVar16 + -0x78);\n    puVar10[0xf] = *(puVar16 + -0x70);\n    uVar15 = puVar10[8];\n    *(puVar16 + -0x1b8) = 0x449a72;\n    iVar9 = fcn.0044cfe0(uVar15);\n    if (iVar9 != 0) goto code_r0x00449cf6;\n    uVar11 = 9;\n    uVar14 = 0x4af801;\n    iVar9 = 0;\n    do {\n        *(puVar16 + -0x170) = uVar11;\n        *(puVar16 + -0xf0) = uVar14;\n        *(puVar16 + -0x178) = iVar9;\n        puVar13 = *(puVar16 + -0xb8);\n        *(puVar16 + -0x108) = puVar13[7];\n        *(puVar16 + -0x110) = *puVar13;\n        *(puVar16 + -0x118) = puVar13[1];\n        *(puVar16 + -0x120) = *(puVar16 + -0x70);\n        *(puVar16 + -0x128) = *(puVar16 + -0x78);\n        *(puVar16 + -0x130) = *(puVar16 + -0x50);\n        *(puVar16 + -0x138) = puVar13[8];\n        *(puVar16 + -0x140) = puVar13[0xc];\n        *(puVar16 + -0xc0) = puVar13[10];\n        *(puVar16 + -0x1b8) = 0x449b19;\n        fcn.00435540();\n        *(puVar16 + -0x1b8) = 0x449b2a;\n        fcn.00435e40();\n        *(puVar16 + -0x1b8) = 0x449b3c;\n        fcn.00435e40();\n        *(puVar16 + -0x1b8) = 0x449b4d;\n        fcn.00435e40();\n        *(puVar16 + -0x1b8) = 0x449b57;\n        fcn.00435ca0();\n        *(puVar16 + -0x1b8) = 0x449b68;\n        fcn.00435e40();\n        *(puVar16 + -0x1b8) = 0x449b75;\n        fcn.00435ca0();\n        *(puVar16 + -0x1b8) = 0x449b86;\n        fcn.00435e40();\n        *(puVar16 + -0x1b8) = 0x449b93;\n        fcn.00435ca0();\n        *(puVar16 + -0x1b8) = 0x449ba5;\n        fcn.00435e40();\n        *(puVar16 + -0x1b8) = 0x449bb2;\n        fcn.00435ca0();\n        *(puVar16 + -0x1b8) = 0x449bc5;\n        fcn.00435e40();\n        *(puVar16 + -0x1b8) = 0x449bd2;\n        fcn.00435ca0();\n        *(puVar16 + -0x1b8) = 0x449be5;\n        fcn.00435e40();\n        *(puVar16 + -0x1b8) = 0x449bf2;\n        fcn.00435ca0();\n        *(puVar16 + -0x1b8) = 0x449c05;\n        fcn.00435e40();\n        *(puVar16 + -0x1b8) = 0x449c12;\n        fcn.00435ca0();\n        *(puVar16 + -0x1b8) = 0x449c25;\n        fcn.00435e40();\n        *(puVar16 + -0x1b8) = 0x449c2f;\n        fcn.00435ca0();\n        *(puVar16 + -0x1b8) = 0x449c45;\n        fcn.00435e40();\n        *(puVar16 + -0x1b8) = 0x449c52;\n        fcn.00435ca0();\n        *(puVar16 + -0x1b8) = 0x449c65;\n        fcn.00435e40();\n        *(puVar16 + -0x1b8) = 0x449c6f;\n        fcn.00435ca0();\n        *(puVar16 + -0x1b8) = 0x449c85;\n        fcn.00435e40();\n        *(puVar16 + -0x1b8) = 0x449c92;\n        fcn.00435dc0();\n        *(puVar16 + -0x1b8) = 0x449ca5;\n        fcn.00435e40();\n        *(puVar16 + -0x1b8) = 0x449caa;\n        fcn.004355c0();\n        *(*(*(puVar16 + -0xf8) + 0x30) + 0xf9) = 2;\n        *(puVar16 + -0x1b8) = 0x449ce5;\n        fcn.00455100(*(puVar16 + -0x50));\n        unaff_RBX = 0x20;\n        *(puVar16 + -0x1b8) = 0x449cf6;\n        iVar9 = fcn.00433c80();\ncode_r0x00449cf6:\n        *(puVar16 + -200) = unaff_RBX;\n        *(puVar16 + -0xd0) = iVar9;\n        *(puVar16 + -0x1b8) = 0x449d0b;\n        uVar11 = fcn.0044d760();\n        *(puVar16 + -0xf0) = uVar11;\n        *(puVar16 + -0x170) = unaff_RBX;\n        uVar1 = **(puVar16 + -0xd0);\n        *(puVar16 + -0x1b8) = 0x449d31;\n        iVar9 = fcn.0044ce60(uVar1);\n        iVar9 = *(*(puVar16 + -0xb8) + 0x40) - iVar9;\n        uVar11 = *(puVar16 + -0x170);\n        uVar14 = *(puVar16 + -0xf0);\n    } while( true );\n}\n",
        "token_count": 7118
    },
    "00463d60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.00463d60(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    bool bVar3;\n    int32_t iVar4;\n    uint32_t *in_RAX;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    uVar7 = *in_RAX;\n    bVar3 = false;\n    bVar1 = false;\n    iVar5 = 0;\n    while( true ) {\n        while( true ) {\n            while( true ) {\n                uVar8 = uVar7 & 5;\n                if (uVar8 == 1) {\n                    cVar2 = fcn.00459980();\n                }\n                else {\n                    cVar2 = '\\0';\n                }\n                if (cVar2 == '\\0') break;\n                if (((!bVar1) && ((uVar7 >> 1 & 1) == 0)) && (uVar7 >> 3 != 0)) {\n                    LOCK();\n                    if (uVar7 == *in_RAX) {\n                        *in_RAX = uVar7 | 2;\n                        bVar1 = true;\n                    }\n                }\n                fcn.00459a00();\n                uVar7 = *in_RAX;\n            }\n            uVar9 = uVar7;\n            if ((uVar7 & 4) == 0) {\n                uVar9 = uVar7 | 1;\n            }\n            if (uVar8 != 0) {\n                uVar9 = uVar9 + 8;\n            }\n            if ((bVar3) && ((uVar7 & 1) != 0)) {\n                uVar9 = uVar9 | 4;\n            }\n            if (bVar1) {\n                if ((uVar9 >> 1 & 1) == 0) {\n                    fcn.00459620();\n                }\n                uVar9 = uVar9 & 0xfffffffd;\n            }\n            LOCK();\n            if (uVar7 == *in_RAX) break;\n            uVar7 = *in_RAX;\n        }\n        *in_RAX = uVar9;\n        if (uVar8 == 0) break;\n        if (iVar5 == 0) {\n            iVar5 = fcn.00459e20();\n        }\n        fcn.00459ce0(1);\n        if (bVar3) {\n            bVar3 = true;\n        }\n        else {\n            iVar6 = fcn.00459e20();\n            bVar3 = 1000000 < iVar6 - iVar5;\n        }\n        uVar7 = *in_RAX;\n        if ((uVar7 >> 2 & 1) != 0) {\n            if (((uVar7 & 3) != 0) || (uVar7 >> 3 == 0)) {\n                fcn.00459620();\n            }\n            if ((bVar3) && (uVar7 >> 3 != 1)) {\n                iVar4 = -7;\n            }\n            else {\n                iVar4 = -0xb;\n            }\n            LOCK();\n            uVar7 = *in_RAX;\n            *in_RAX = *in_RAX + iVar4;\n            return uVar7;\n        }\n        bVar1 = true;\n    }\n    return uVar7;\n}\n",
        "token_count": 796
    },
    "00464140": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00464140(void)\n\n{\n    int32_t *in_RAX;\n    code **unaff_RBX;\n    int64_t unaff_R14;\n    bool bVar1;\n    uchar in_XMM15 [16];\n    uchar auStack56 [16];\n    uchar auStack40 [16];\n    code **ppcStack24;\n    code **ppcStack16;\n    \n    while (ppcStack24 = SUB168(in_XMM15, 0),  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    LOCK();\n    bVar1 = in_RAX[1] == 0;\n    if (bVar1) {\n        in_RAX[1] = 1;\n    }\n    if (!bVar1) {\n        fcn.00463d60();\n    }\n    auStack56 = CONCAT88(in_RAX + 1, 0x4642c0);\n    ppcStack16 = auStack56;\n    if (*in_RAX == 0) {\n        auStack40 = CONCAT88(in_RAX, 0x464280);\n        ppcStack24 = auStack40;\n        (**unaff_RBX)(in_RAX, unaff_RBX);\n        (**ppcStack24)();\n    }\n    (**ppcStack16)();\n    return;\n}\n",
        "token_count": 313
    },
    "00464560": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00464560(uint64_t arg1, ulong noname_1, code *arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    char cVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    int64_t unaff_RBX;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \ncode_r0x00464560:\n    puVar8 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar8 = *0x20 + -0x78;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + 0x38) = arg4;\n        *(*0x20 + 0x30) = arg3;\n        *(*0x20 + 0x20) = unaff_RDI;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x28) = unaff_RSI;\n        *(*0x20 + -0x80) = 0x4645c5;\n        iVar3 = fcn.00409f40(unaff_RDI);\n        if (iVar3 != 0) {\n            pcVar1 = *(iVar3 + 0x18);\n            *(*0x20 + -0x80) = 0x4646ce;\n            iVar3 = (*pcVar1)(*(*0x20 + 0x10));\n            return iVar3;\n        }\n        *(*0x20 + -0x80) = 0x4645ea;\n        iVar3 = fcn.00409f40(*(*0x20 + 0x10));\n        if (iVar3 != 0) {\n            pcVar1 = *(iVar3 + 0x18);\n            *(*0x20 + -0x80) = 0x4646ab;\n            iVar3 = (*pcVar1)(*(*0x20 + 0x20));\n            return iVar3;\n        }\n        unaff_RBX = *(*0x20 + 0x28);\n        if (unaff_RBX == 0) {\n            if ((*(*0x20 + 0x18) == 0x732b58) && (iVar3 = *(*(*0x20 + 0x20) + 0x10),  iVar3 < 0x8000)) {\n                if (iVar3 < 1) {\n                    iVar3 = 1;\n                }\n            }\n            else {\n                iVar3 = 0x8000;\n            }\n            *(*0x20 + -0x50) = iVar3;\n            *(*0x20 + -0x80) = 0x464677;\n            unaff_RBX = fcn.00447240(iVar3);\n            unaff_RDI = *(*0x20 + -0x50);\n            uVar5 = unaff_RDI;\n        }\n        else {\n            unaff_RDI = *(*0x20 + 0x38);\n            uVar5 = *(*0x20 + 0x30);\n        }\n        *(*0x20 + -0x20) = uVar5;\n        *(*0x20 + -0x10) = unaff_RBX;\n        *(*0x20 + -0x28) = unaff_RDI;\n        iVar3 = 0;\n        do {\n            *(*0x20 + -0x30) = iVar3;\n            unaff_RSI = *(*0x20 + 0x18);\n            arg3 = *(unaff_RSI + 0x18);\n            *(*0x20 + -0x80) = 0x464712;\n            arg1 = (*arg3)();\n            *(*0x20 + -0x40) = unaff_RBX;\n            *(*0x20 + -0x18) = uVar5;\n            if (arg1 < 1) {\n                iVar3 = *(*0x20 + -0x30);\n            }\n            else {\n                if (*(*0x20 + -0x28) < arg1) goto code_r0x0046481d;\n                *(*0x20 + -0x48) = arg1;\n                pcVar1 = *(*(*0x20 + 8) + 0x18);\n                iVar7 = *(*0x20 + -0x10);\n                *(*0x20 + -0x80) = 0x464764;\n                iVar4 = (*pcVar1)(arg1);\n                if (iVar4 < 0) {\n                    iVar6 = *(*0x20 + -0x48);\ncode_r0x0046477a:\n                    if (iVar7 == 0) {\n                        iVar7 = *0x7ad7b0;\n                    }\n                    iVar4 = 0;\n                }\n                else {\n                    iVar6 = *(*0x20 + -0x48);\n                    if (iVar6 < iVar4) goto code_r0x0046477a;\n                }\n                iVar3 = *(*0x20 + -0x30) + iVar4;\n                if (iVar7 != 0) {\n                    return iVar3;\n                }\n                if (iVar6 != iVar4) {\n                    return iVar3;\n                }\n                unaff_RBX = *(*0x20 + -0x40);\n            }\n            if (unaff_RBX != 0) {\n                if (*0x7ad750 == unaff_RBX) {\n                    *(*0x20 + -0x38) = iVar3;\n                    *(*0x20 + -0x80) = 0x4647dc;\n                    cVar2 = fcn.00403360(*0x7ad758);\n                    if (cVar2 == '\\0') {\n                        iVar3 = *(*0x20 + -0x38);\n                    }\n                    else {\n                        iVar3 = *(*0x20 + -0x38);\n                    }\n                }\n                return iVar3;\n            }\n            unaff_RBX = *(*0x20 + -0x10);\n            unaff_RDI = *(*0x20 + -0x28);\n            uVar5 = *(*0x20 + -0x20);\n        } while( true );\n    }\n    goto code_r0x00464826;\ncode_r0x0046481d:\n    *(*0x20 + -0x80) = 0x464825;\n    in_RAX = fcn.0045e2c0(arg1, *(*0x20 + -0x28));\ncode_r0x00464826:\n    *(puVar8 + 8) = in_RAX;\n    *(puVar8 + 0x10) = unaff_RBX;\n    *(puVar8 + 0x18) = arg1;\n    *(puVar8 + 0x20) = unaff_RDI;\n    *(puVar8 + 0x28) = unaff_RSI;\n    *(puVar8 + 0x30) = arg3;\n    *(puVar8 + 0x38) = arg4;\n    *(puVar8 + -8) = 0x46484e;\n    fcn.0045bb60();\n    in_RAX = *(puVar8 + 8);\n    unaff_RBX = *(puVar8 + 0x10);\n    arg1 = *(puVar8 + 0x18);\n    unaff_RDI = *(puVar8 + 0x20);\n    unaff_RSI = *(puVar8 + 0x28);\n    arg3 = *(puVar8 + 0x30);\n    arg4 = *(puVar8 + 0x38);\n    *0x20 = puVar8;\n    goto code_r0x00464560;\n}\n",
        "token_count": 1785
    },
    "00469c00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.00469c00(ulong arg1)\n\n{\n    ulong in_RAX;\n    ulong uVar1;\n    char *pcVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong *puVar5;\n    ulong *arg1_00;\n    int64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    ulong in_R8;\n    ulong arg3;\n    ulong in_R9;\n    ulong arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x20 && *0x20 + -0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0xa0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0xa8) = 0x469c3b;\n            uVar1 = fcn.0046ca80(arg1);\n            iVar3 = *0x7acf90;\n            if (unaff_RDI == 0) {\n                if (unaff_RBX != 0) {\n                    unaff_RDI = 0;\n                    goto code_r0x00469c56;\n                }\n            }\n            else {\n                uVar1 = 0;\ncode_r0x00469c56:\n                if (unaff_RDI != 0) {\n                    return NULL;\n                }\n                *(*0x20 + -0x20) = uVar1;\n                *(*0x20 + -0xa8) = 0x469c8a;\n                pcVar2 = fcn.0040f140(*(*0x20 + 8));\n                unaff_RBX = *0x7ad960;\n                if (*pcVar2 == '\\0') {\n                    *(*0x20 + -0xa8) = 0x469d12;\n                    uVar1 = fcn.00460380();\n                    goto code_r0x00469d12;\n                }\n                unaff_RDI = *(*0x20 + 8);\n                *(*0x20 + -0xa8) = 0x469cb7;\n                uVar1 = *0x7ad968;\n                fcn.0044ae80(*0x7ad968);\n                *(*0x20 + -0xa8) = 0x469cbc;\n                iVar3 = fcn.0046ca80(uVar1);\n                if (unaff_RDI != 0) {\n                    iVar3 = 0;\n                    goto code_r0x00469cd6;\n                }\n                if (unaff_RBX != 0) {\n                    unaff_RDI = 0;\ncode_r0x00469cd6:\n                    if (unaff_RDI != 0) {\n                        return NULL;\n                    }\n                    *(*0x20 + -0xa8) = 0x469ceb;\n                    uVar1 = fcn.00460320();\ncode_r0x00469d12:\n                    if (iVar3 != 0) {\n                        *(*0x20 + -0x50) = iVar3;\n                        *(*0x20 + -0xa8) = 0x469d28;\n                        uVar1 = fcn.0046cc00();\n                        *(*0x20 + -0x10) = uVar1;\n                        *(*0x20 + -0x48) = iVar3;\n                        *(*0x20 + -0xa8) = 0x469d45;\n                        uVar1 = fcn.0040c560();\n                        *(*0x20 + -0x18) = uVar1;\n                        *(*0x20 + -0xa8) = 0x469d57;\n                        uVar1 = fcn.00409d60();\n                        puVar5 = *(*0x20 + -0x18);\n                        *puVar5 = 0x732cf8;\n                        if (*0x801c20 == 0) {\n                            puVar5[1] = uVar1;\n                            arg1_00 = 0x732cf8;\n                        }\n                        else {\n                            *(*0x20 + -0xa8) = 0x469d87;\n                            fcn.0045dda0(puVar5, puVar5 + 1, in_R8, in_R9);\n                            arg1_00 = puVar5;\n                        }\n                        puVar5[3] = *(*0x20 + 0x10);\n                        if (*0x801c20 == 0) {\n                            uVar1 = *(*0x20 + 8);\n                            puVar5[2] = uVar1;\n                        }\n                        else {\n                            uVar1 = *(*0x20 + 8);\n                            *(*0x20 + -0xa8) = 0x469dc5;\n                            fcn.0045dec0(arg1_00, uVar1, in_R8, in_R9);\n                        }\n                        arg3 = 0x4aec0c;\n                        arg4 = 2;\n                        *(*0x20 + -0xa8) = 0x469df5;\n                        uVar4 = fcn.0044b000(0xf, uVar1, 0x4aec0c, 2);\n                        iVar3 = *(*0x20 + -0x18);\n                        *(iVar3 + 0x28) = 0x4b0b11;\n                        if (*0x801c20 == 0) {\n                            *(iVar3 + 0x20) = uVar4;\n                        }\n                        else {\n                            *(*0x20 + -0xa8) = 0x469e19;\n                            fcn.0045dda0(iVar3, uVar1, arg3, arg4);\n                        }\n                        return NULL;\n                    }\n                    *(*0x20 + -0x58) = uVar1;\n                    *(*0x20 + -0xa8) = 0x469e45;\n                    puVar5 = fcn.0040c560();\n                    uVar1 = *(*0x20 + 0x10);\n                    puVar5[1] = uVar1;\n                    if (*0x801c20 == 0) {\n                        *puVar5 = *(*0x20 + 8);\n                    }\n                    else {\n                        *(*0x20 + -0xa8) = 0x469e77;\n                        puVar5 = fcn.0045dec0(uVar1, *(*0x20 + 8), in_R8, in_R9);\n                    }\n                    puVar5[2] = *(*0x20 + -0x58);\n                    return puVar5;\n                }\n                *(*0x20 + -0xa8) = 0x469eb6;\n                fcn.0045e240(0);\n            }\n            arg1 = 0;\n            *(*0x20 + -0xa8) = 0x469ec5;\n            in_RAX = fcn.0045e240(0);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x469ed5;\n        fcn.0045bb60();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1698
    },
    "00469f00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.00469f00(int64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong uVar3;\n    ulong *puVar4;\n    int64_t arg1_00;\n    ulong *arg1_01;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    ulong in_R8;\n    ulong arg3;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        iVar1 = arg1;\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x30 && *0x20 + -0x30 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0xb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0xb8) = 0x469f49;\n            iVar1 = fcn.0046c9a0(arg1);\n            if (unaff_RDI != 0) {\n                iVar1 = 0;\n                goto code_r0x00469f60;\n            }\n            if (arg1 != 0) {\n                unaff_RDI = 0;\ncode_r0x00469f60:\n                if (unaff_RDI != 0) {\n                    return NULL;\n                }\n                arg1_00 = *(*0x20 + 8);\n                uVar2 = *(arg1_00 + 0x10);\n                *(*0x20 + -0xb8) = 0x469f85;\n                uVar2 = fcn.004603c0(arg1_00, uVar2);\n                if (iVar1 != 0) {\n                    *(*0x20 + -0x90) = iVar1;\n                    *(*0x20 + -0xb8) = 0x469f9b;\n                    uVar2 = fcn.0046cc00();\n                    *(*0x20 + -0x70) = uVar2;\n                    *(*0x20 + -0x80) = iVar1;\n                    *(*0x20 + -0xb8) = 0x469fb1;\n                    uVar2 = fcn.0040c560();\n                    *(*0x20 + -0x78) = uVar2;\n                    *(*0x20 + -0xb8) = 0x469fc5;\n                    uVar2 = fcn.00409d60();\n                    puVar4 = *(*0x20 + -0x78);\n                    *puVar4 = 0x732cf8;\n                    if (*0x801c20 == 0) {\n                        puVar4[1] = uVar2;\n                        arg1_01 = 0x732cf8;\n                    }\n                    else {\n                        *(*0x20 + -0xb8) = 0x469ff2;\n                        fcn.0045dda0(puVar4, puVar4 + 1, in_R8, in_R9);\n                        arg1_01 = puVar4;\n                    }\n                    uVar2 = *(*0x20 + 0x18);\n                    puVar4[3] = uVar2;\n                    if (*0x801c20 == 0) {\n                        uVar3 = *(*0x20 + 0x10);\n                        puVar4[2] = uVar3;\n                    }\n                    else {\n                        uVar3 = *(*0x20 + 0x10);\n                        *(*0x20 + -0xb8) = 0x46a02c;\n                        fcn.0045df20(arg1_01, uVar2, uVar3, in_R9);\n                    }\n                    *(*0x20 + -0xc0) = unaff_RBP;\n                    *(*0x20 + -0xb8) = 0x46a04f;\n                    fcn.0045e4eb();\n                    arg3 = 0x4b0b02;\n                    *(*0x20 + -0x68) = 0x4b0b02;\n                    *(*0x20 + -0x60) = 0xf;\n                    *(*0x20 + -0x58) = uVar3;\n                    *(*0x20 + -0x50) = uVar2;\n                    *(*0x20 + -0x48) = 0x4b0789;\n                    *(*0x20 + -0x40) = 0xe;\n                    uVar2 = (*(*0x20 + 8))[1];\n                    *(*0x20 + -0x38) = **(*0x20 + 8);\n                    *(*0x20 + -0x30) = uVar2;\n                    *(*0x20 + -0x28) = 0x4aec0c;\n                    *(*0x20 + -0x20) = 2;\n                    *(*0x20 + -0x18) = *(*0x20 + -0x70);\n                    uVar2 = *(*0x20 + -0x80);\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0xb8) = 0x46a0ec;\n                    uVar3 = fcn.0044abe0(6);\n                    iVar1 = *(*0x20 + -0x78);\n                    *(iVar1 + 0x28) = *0x20 + -0x68;\n                    if (*0x801c20 == 0) {\n                        *(iVar1 + 0x20) = uVar3;\n                    }\n                    else {\n                        *(*0x20 + -0xb8) = 0x46a10d;\n                        fcn.0045dda0(iVar1, uVar2, arg3, in_R9);\n                    }\n                    return NULL;\n                }\n                *(*0x20 + -0x88) = uVar2;\n                *(*0x20 + -0xb8) = 0x46a137;\n                puVar4 = fcn.0040c560();\n                if (*0x801c20 == 0) {\n                    *puVar4 = *(*0x20 + 8);\n                }\n                else {\n                    *(*0x20 + -0xb8) = 0x46a15f;\n                    puVar4 = fcn.0045dec0(arg1_00, *(*0x20 + 8), in_R8, in_R9);\n                }\n                puVar4[2] = *(*0x20 + 0x18);\n                if (*0x801c20 == 0) {\n                    puVar4[1] = *(*0x20 + 0x10);\n                }\n                else {\n                    *(*0x20 + -0xb8) = 0x46a193;\n                    puVar4 = fcn.0045dec0(arg1_00, *(*0x20 + 0x10), in_R8, in_R9);\n                }\n                puVar4[3] = *(*0x20 + -0x88);\n                return puVar4;\n            }\n            iVar1 = 0;\n            *(*0x20 + -0xb8) = 0x46a1d2;\n            in_RAX = fcn.0045e240(0);\n            unaff_RBX = arg1;\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = iVar1;\n        *(puVar5 + -8) = 0x46a1e7;\n        fcn.0045bb60();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1817
    },
    "0046a200": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0046a200(void)\n\n{\n    int64_t iVar1;\n    bool bVar2;\n    int32_t *in_RAX;\n    int64_t unaff_R14;\n    int64_t iVar3;\n    uchar in_XMM15 [16];\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (iVar3 = SUB168(in_XMM15, 0),  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    ppcStack16 = NULL;\n    if (*(in_RAX + 2) == 0) {\n        LOCK();\n        if (*in_RAX == 0) {\n            *in_RAX = 1;\n        }\n        else {\n            fcn.00463d60();\n        }\n        auStack32 = CONCAT88(in_RAX, 0x46a360);\n        ppcStack16 = auStack32;\n        if (*(in_RAX + 2) == 0) {\n            iVar1 = *(in_RAX + 6);\n            fcn.00469c00(in_RAX);\n            if (iVar1 != 0) {\n                (**ppcStack16)();\n                return iVar1;\n            }\n            fcn.00458da0(in_RAX + 2);\n        }\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if (bVar2) {\n        (**ppcStack16)();\n    }\n    return iVar3;\n}\n",
        "token_count": 354
    },
    "0046a3c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0046a3c0(void)\n\n{\n    bool bVar1;\n    int32_t *in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    int64_t iVar3;\n    uchar in_XMM15 [16];\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (iVar3 = SUB168(in_XMM15, 0),  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    ppcStack16 = NULL;\n    if (*(in_RAX + 8) == 0) {\n        LOCK();\n        if (*in_RAX == 0) {\n            *in_RAX = 1;\n        }\n        else {\n            fcn.00463d60();\n        }\n        auStack32 = CONCAT88(in_RAX, 0x46a580);\n        ppcStack16 = auStack32;\n        if (*(in_RAX + 8) == 0) {\n            iVar2 = fcn.0046a200();\n            if (iVar2 != 0) {\n                (**ppcStack16)();\n                return iVar2;\n            }\n            iVar2 = *(in_RAX + 2);\n            fcn.00469f00(*(in_RAX + 4));\n            if (iVar2 != 0) {\n                (**ppcStack16)();\n                return iVar2;\n            }\n            fcn.00458da0(in_RAX + 8);\n        }\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n    }\n    if (bVar1) {\n        (**ppcStack16)();\n    }\n    return iVar3;\n}\n",
        "token_count": 396
    },
    "0046a760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0046a760(void)\n\n{\n    int64_t iVar1;\n    int64_t arg1;\n    ulong uVar2;\n    ulong uVar3;\n    uint64_t arg1_00;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uint64_t uVar4;\n    uint64_t arg1_01;\n    int64_t iVar5;\n    uint64_t uVar6;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar auStack56 [16];\n    int64_t iStack40;\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (auStack56 < *(unaff_R14 + 0x10) || auStack56 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    ppcStack16 = NULL;\n    iStack40 = 0;\n    iVar1 = fcn.0046ed80();\n    if (unaff_RBX != 0) {\n        return 0;\n    }\n    auStack56 = CONCAT88(iVar1, 0x46aa20);\n    ppcStack16 = auStack56;\n    arg1 = fcn.00447240(0x32);\n    arg1_00 = 0;\n    uVar4 = 0;\n    uVar6 = 0x32;\n    arg1_01 = 0;\n    do {\n        if (0xffffff < arg1_00) {\ncode_r0x0046a9c5:\n            fcn.0045e240(0x1000000);\n            fcn.004328a0();\n            return iStack40;\n        }\n        arg2 = arg1_01;\n        if (*(iVar1 + arg1_00 * 2) == 0) {\n            if (arg1_00 <= uVar4) {\n                auStack32 = CONCAT88(uVar6, arg1_01);\n                iStack40 = arg1;\n                (**ppcStack16)();\n                return iStack40;\n            }\n            if (arg1_00 < uVar4) {\n                fcn.0045e300(arg1_00);\n                goto code_r0x0046a9c5;\n            }\n            uVar2 = fcn.00469580(-(uVar4 - 0x1000000));\n            uVar3 = fcn.0044b660(arg1_00 - uVar4);\n            arg2 = arg1_01 + 1;\n            if (uVar6 < arg2) {\n                uVar6 = arg1_01;\n                iVar5 = fcn.00447360(arg1_01);\n                arg2 = arg1 + 1;\n                arg1 = iVar5;\n            }\n            iVar5 = arg1_01 * 0x10;\n            *(arg1 + 8 + iVar5) = uVar2;\n            if (*0x801c20 == 0) {\n                *(arg1 + iVar5) = uVar3;\n            }\n            else {\n                fcn.0045dda0(arg1, arg2, arg1 + iVar5, in_R9);\n            }\n            uVar4 = arg1_00 + 1;\n        }\n        arg1_00 = arg1_00 + 1;\n        arg1_01 = arg2;\n    } while( true );\n}\n",
        "token_count": 739
    },
    "0046b5e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nchar * fcn.0046b5e0(int64_t arg1)\n\n{\n    char *pcVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    pcVar1 = fcn.0046b4a0(arg1);\n    if (arg1 == 0) {\n        if (((2 < unaff_RBX) && ((*pcVar1 == '\\\\' || (*pcVar1 == '/')))) && ((pcVar1[1] == '\\\\' || (pcVar1[1] == '/'))))\n        {\n            return NULL;\n        }\n        return pcVar1;\n    }\n    return NULL;\n}\n",
        "token_count": 188
    },
    "0046b6a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint8_t * fcn.0046b6a0(uint8_t *arg1)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    ulong in_RAX;\n    uint8_t *puVar3;\n    ulong arg1_00;\n    uint64_t in_RDX;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x20 && *0x20 + -0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0xa0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            if (unaff_RDI == 0) {\n                return NULL;\n            }\n            if (2 < unaff_RDI) {\n                uVar1 = *arg1;\n                in_RDX = uVar1;\n                if ((uVar1 == 0x5c) || (uVar1 == 0x2f)) {\n                    uVar1 = arg1[1];\n                    in_RDX = uVar1;\n                    if ((uVar1 == 0x5c) || (uVar1 == 0x2f)) {\n                        return arg1;\n                    }\n                }\n            }\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x18) = arg1;\n            if ((unaff_RDI < 2) || (arg1[1] != 0x3a)) {\n                *(*0x20 + -0xa8) = 0x46b865;\n                fcn.0046b5e0(arg1);\n                if (arg1 != NULL) {\n                    return NULL;\n                }\n                cVar2 = **(*0x20 + 0x18);\n                if ((cVar2 != '\\\\') && (cVar2 != '/')) {\n                    *(*0x20 + -0xa8) = 0x46b8ec;\n                    fcn.0044af20(unaff_RBX, in_RDX, *(*0x20 + 0x18), *(*0x20 + 0x20));\n                    *(*0x20 + -0xa8) = 0x46b8f1;\n                    puVar3 = fcn.0046b4a0(unaff_RBX);\n                    return puVar3;\n                }\n                if (1 < unaff_RBX) {\n                    arg1_00 = 2;\n                    *(*0x20 + -0xa8) = 0x46b8b3;\n                    fcn.0044ae80(2);\n                    *(*0x20 + -0xa8) = 0x46b8b8;\n                    puVar3 = fcn.0046b4a0(arg1_00);\n                    return puVar3;\n                }\n                *(*0x20 + -0xa8) = 0x46b945;\n                in_RDX = unaff_RBX;\n                fcn.0045e280(2, unaff_RBX);\n            }\n            else {\n                if (unaff_RDI == 2) {\n                    return NULL;\n                }\n                if ((arg1[2] == 0x5c) || (arg1[2] == 0x2f)) {\n                    return arg1;\n                }\n                *(*0x20 + -0xa8) = 0x46b77d;\n                puVar3 = fcn.0046b5e0(arg1);\n                if (arg1 != NULL) {\n                    return NULL;\n                }\n                in_RDX = **(*0x20 + 0x18);\n                if (in_RDX - 0x61 < 0x1a) {\n                    in_RDX = in_RDX - 0x20;\n                }\n                if (unaff_RBX != 0) {\n                    uVar5 = *puVar3;\n                    if (uVar5 - 0x61 < 0x1a) {\n                        uVar5 = uVar5 - 0x20;\n                    }\n                    if (uVar5 == in_RDX) {\n                        *(*0x20 + -0xa8) = 0x46b7f3;\n                        fcn.0044af20(unaff_RBX, in_RDX, *(*0x20 + 0x18) + 2, *(*0x20 + 0x20) + -2);\n                        *(*0x20 + -0xa8) = 0x46b7f8;\n                        puVar3 = fcn.0046b4a0(unaff_RBX);\n                        return puVar3;\n                    }\n                    *(*0x20 + -0xa8) = 0x46b818;\n                    puVar3 = fcn.0046b4a0(0);\n                    return puVar3;\n                }\n            }\n            arg1 = NULL;\n            *(*0x20 + -0xa8) = 0x46b94f;\n            in_RAX = fcn.0045e240(0);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + -8) = 0x46b969;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1367
    },
    "0046d340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint64_t fcn.0046d340(ulong arg1)\n\n{\n    ulong *in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    uint auStack32 [2];\n    ulong uStack24;\n    uint uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (unaff_RBX == 2) {\n        uStack24 = 0;\n        auStack32[0] = 0x18;\n        uStack16 = 1;\n        iVar1 = fcn.0046e160(auStack32);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        *in_RAX = 0;\n        in_RAX[1] = 0;\n        return 0;\n    }\n    return 0x732cf8;\n}\n",
        "token_count": 228
    },
    "0046d640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0046d640(void)\n\n{\n    uint32_t in_EAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong *puVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x1c) = in_EAX;\n            *(*0x20 + -0x18) = 0;\n            *(*0x20 + -0x40) = 0x46d675;\n            iVar1 = fcn.0046f6c0(0);\n            if (((iVar1 == 0) || (*(iVar1 + 8) != 0x4a26e0)) || (*in_EAX != 0x7a)) {\n                if (iVar1 == 0) {\n                    *(*0x20 + -0x40) = 0x46d716;\n                    puVar3 = fcn.0040c560();\n                    puVar3[1] = 0x42;\n                    *puVar3 = 0x4b7d7e;\n                    return 0;\n                }\n                return 0;\n            }\n            *(*0x20 + -0x40) = 0x46d6ab;\n            uVar2 = fcn.00447240(*(*0x20 + -0x18));\n            if (*(*0x20 + -0x18) != 0) {\n                *(*0x20 + -0x10) = uVar2;\n                *(*0x20 + -0x40) = 0x46d6cc;\n                iVar1 = fcn.0046f6c0(0);\n                if (iVar1 == 0) {\n                    return *(*0x20 + -0x10);\n                }\n                return 0;\n            }\n            *(*0x20 + -0x40) = 0x46d748;\n            in_EAX = fcn.0045e240(0);\n        }\n        *(puVar4 + 8) = in_EAX;\n        *(puVar4 + -8) = 0x46d752;\n        fcn.0045bb60();\n        in_EAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 599
    },
    "00475900": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00475900(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uchar *arg1;\n    uint64_t uVar4;\n    uint64_t arg1_00;\n    uint64_t uVar5;\n    uint64_t arg2;\n    int64_t *piVar6;\n    uint64_t arg1_01;\n    ulong arg4;\n    ulong arg3;\n    int64_t unaff_R14;\n    uint32_t uStack640;\n    uchar auStack592 [8];\n    uchar auStack584 [504];\n    int64_t iStack80;\n    uchar *puStack72;\n    ulong uStack64;\n    uchar auStack56 [16];\n    int64_t iStack40;\n    uchar auStack32 [16];\n    ulong uStack16;\n    \n    while (auStack584 < *(unaff_R14 + 0x10) || auStack584 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    uStack16 = 0;\n    iStack40 = 0;\n    fcn.0043f300();\n    uStack16 = 0x7194d0;\n    fcn.00447240(0);\n    iVar2 = fcn.0045e458();\n    uVar4 = 0x100;\n    piVar6 = NULL;\n    uVar5 = 0;\n    arg1 = auStack592;\n    arg1_01 = 0;\n    do {\n        uStack640 = uVar4;\n        iStack80 = iVar2;\n        while( true ) {\n            if (uVar4 == 0) goto code_r0x00475c6d;\n            arg4 = 0;\n            arg3 = 0;\n            puStack72 = arg1;\n            iVar2 = fcn.0046da40(arg1, arg1, 0, 0);\n            if (iVar2 == 0) break;\n            if (iVar2 == 0) {\ncode_r0x00475bec:\n                iStack40 = iStack80;\n                auStack32 = CONCAT88(uVar5, arg1_01);\n                auStack56 = CONCAT88(piVar6, iVar2);\n                fcn.0043f380();\n                return iStack40;\n            }\n            if ((*(iVar2 + 8) != 0x4a26e0) || (*piVar6 != 0xea)) {\n                if ((iVar2 != 0) && ((*(iVar2 + 8) == 0x4a26e0 && (*piVar6 == 0x103)))) {\n                    iStack40 = iStack80;\n                    auStack32 = CONCAT88(uVar5, arg1_01);\n                    fcn.0043f380();\n                    return iStack40;\n                }\n                goto code_r0x00475bec;\n            }\n            uVar4 = uVar4 << 1;\n            uStack640 = uVar4;\n            arg1 = fcn.00447240(uVar4 & 0xffffffff);\n            uVar4 = uVar4 & 0xffffffff;\n        }\n        arg1_00 = uStack640;\n        if (uVar4 < arg1_00) {\n            fcn.0045e2c0(arg1_00, uVar4);\ncode_r0x00475c6d:\n            fcn.0045e240(0);\n            fcn.004328a0();\n            return iStack40;\n        }\n        uVar3 = fcn.0046cb80(uVar4);\n        iVar1 = iStack80;\n        arg2 = arg1_01 + 1;\n        iVar2 = iStack80;\n        if (uVar5 < arg2) {\n            uVar5 = arg1_01;\n            uStack64 = uVar3;\n            iVar2 = fcn.00447360(arg1_01);\n            arg2 = iVar1 + 1;\n            uVar3 = uStack64;\n        }\n        *(iVar2 + 8 + arg1_01 * 0x10) = arg1_00;\n        if (*0x801c20 == 0) {\n            *(iVar2 + arg1_01 * 0x10) = uVar3;\n        }\n        else {\n            fcn.0045dda0(iVar2, arg2, arg3, arg4);\n        }\n        piVar6 = piVar6 + 1;\n        arg1 = puStack72;\n        arg1_01 = arg2;\n    } while( true );\n}\n",
        "token_count": 998
    },
    "00475ee0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00475f2f)\n// WARNING: Removing unreachable block (ram,0x00475f7d)\n// WARNING: Removing unreachable block (ram,0x00475f39)\n// WARNING: Removing unreachable block (ram,0x00475f68)\n// WARNING: Removing unreachable block (ram,0x00475f3e)\n// WARNING: Removing unreachable block (ram,0x00475f4a)\n// WARNING: Removing unreachable block (ram,0x00475fb4)\n\nulong fcn.00475ee0(ulong arg1, ulong arg2)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00475ce0(arg1, arg2, 0x40);\n    return 0;\n}\n",
        "token_count": 217
    },
    "00476000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00476100)\n// WARNING: Removing unreachable block (ram,0x00476109)\n// WARNING: Removing unreachable block (ram,0x00476112)\n\nulong fcn.00476000(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    int64_t *noname_1;\n    ulong arg1_00;\n    ulong uVar2;\n    int64_t iVar3;\n    uchar *arg1_01;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t arg1_02;\n    uint64_t unaff_RDI;\n    ulong *puVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x7e8 && *0x20 + -0x7e8 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x868;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x828) = in_RAX;\n            *(*0x20 + -0x870) = 0x476045;\n            noname_1 = fcn.0046ca80(arg1);\n            if (unaff_RDI == 0) {\n                unaff_RBX = arg1;\n                if (arg1 != 0) {\n                    unaff_RDI = 0;\n                    goto code_r0x00476060;\n                }\n            }\n            else {\n                noname_1 = NULL;\ncode_r0x00476060:\n                if (unaff_RDI != 0) {\n                    return 0;\n                }\n                *(*0x20 + -0x20) = noname_1;\n                puVar5 = *0x20 + -0x820;\n                for (iVar3 = 0x100; iVar3 != 0; iVar3 = iVar3 + -1) {\n                    *puVar5 = 0;\n                    puVar5 = puVar5 + 1;\n                }\n                *(*0x20 + -0x830) = 0;\n                arg1_01 = *0x20 + -0x820;\n                *(*0x20 + -0x870) = 0x4760ad;\n                iVar3 = fcn.004764a0(arg1_01, noname_1, 0, 0);\n                if (((iVar3 != 0) && (*(iVar3 + 8) == 0x4a26e0)) && (*noname_1 == 2)) {\n                    *(*0x20 + -0x870) = 0x4760e8;\n                    fcn.00476300(arg1_01);\n                    if (arg1_01 != NULL) {\n                        return 0;\n                    }\n                    *(*0x20 + -0x870) = 0x4760f6;\n                    fcn.0046ca80(0);\n                    return 0;\n                }\n                *(*0x20 + -0x18) = 0;\n                arg1_02 = 0x400;\n                while( true ) {\n                    uVar2 = 0x4a26e0;\n                    if (((iVar3 == 0) || (*(iVar3 + 8) != 0x4a26e0)) ||\n                       ((*noname_1 != 0xea || (uVar1 = *(*0x20 + -0x830),  uVar1 <= arg1_02)))) {\n                        if (iVar3 == 0) {\n                            *(*0x20 + -0x870) = 0x476290;\n                            uVar2 = fcn.0046cb80(arg1_02);\n                            return uVar2;\n                        }\n                        return 0;\n                    }\n                    *(*0x20 + -0x870) = 0x47624a;\n                    arg1_00 = fcn.00447240(uVar1);\n                    unaff_RDI = *(*0x20 + -0x830);\n                    if (unaff_RDI == 0) break;\n                    *(*0x20 + -0x10) = arg1_00;\n                    *(*0x20 + -0x82c) = *(*0x20 + -0x830);\n                    noname_1 = *(*0x20 + -0x20);\n                    *(*0x20 + -0x870) = 0x4761f0;\n                    iVar3 = fcn.004764a0(arg1_00, uVar2, 0, *(*0x20 + -0x18));\n                    arg1_02 = *(*0x20 + -0x82c);\n                }\n                *(*0x20 + -0x870) = 0x4762ae;\n                fcn.0045e240(0);\n                *(*0x20 + -0x870) = 0x4762b8;\n                fcn.0045e240(0);\n                unaff_RBX = uVar1;\n            }\n            arg1 = 0;\n            *(*0x20 + -0x870) = 0x4762c5;\n            in_RAX = fcn.0045e240(0);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x4762da;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1334
    },
    "0047b440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0047b440(void)\n\n{\n    uchar uVar1;\n    ulong uVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    ulong uVar5;\n    uint64_t arg1;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t uVar7;\n    uint64_t arg1_00;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    int64_t *piVar12;\n    int64_t iVar13;\n    uint64_t unaff_R13;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x68) = 0x47b465;\n            iVar3 = fcn.0047b380();\n            uVar4 = *(iVar3 + 0x10);\n            arg1 = *(iVar3 + 0x18);\n            if (arg1 == 0) {\n                return 0x4aed56;\n            }\n            uVar7 = unaff_RSI;\n            if (*(iVar3 + 0x60) == NULL) {\n                iVar11 = *(*0x20 + 0x10);\n            }\n            else {\n                iVar11 = *(*0x20 + 0x10);\n                if ((*(iVar3 + 0x50) <= iVar11) && (uVar7 = *(iVar3 + 0x58),  iVar11 < *(iVar3 + 0x58))) {\n                    return **(iVar3 + 0x60);\n                }\n            }\n            unaff_RBX = *(iVar3 + 0x30);\n            piVar12 = *(iVar3 + 0x28);\n            if ((unaff_RBX == 0) || (*piVar12 != iVar11 && iVar11 <= *piVar12)) {\n                *(*0x20 + -0x10) = iVar3;\n                *(*0x20 + -0x68) = 0x47b4e8;\n                uVar9 = unaff_RBX;\n                uVar4 = fcn.0047b6e0();\n                arg1 = *(*(*0x20 + -0x10) + 0x10);\n                unaff_RBX = *(*(*0x20 + -0x10) + 0x18);\n                if (uVar4 < unaff_RBX) {\n                    return *(uVar4 * 0x20 + arg1);\n                }\n                *(*0x20 + -0x68) = 0x47b585;\n                uVar4 = unaff_RBX;\n                iVar3 = fcn.0045e240(unaff_RBX);\n                uVar10 = unaff_R13;\n            }\n            else {\n                uVar7 = 0;\n                uVar9 = 0x7fffffffffffffff;\n                uVar10 = unaff_RBX;\n            }\n            while (uVar8 = uVar10,  arg1_00 = uVar9,  uVar9 = uVar8 - uVar7,  unaff_RSI = uVar7,  1 < uVar9) {\n                uVar10 = uVar9 / 2 + uVar7;\n                unaff_R13 = uVar9;\n                if (unaff_RBX <= uVar10) goto code_r0x0047b6b0;\n                uVar9 = piVar12[uVar10 * 2];\n                unaff_R13 = uVar10;\n                if (piVar12[uVar10 * 2] <= iVar11) {\n                    uVar7 = uVar10;\n                    uVar9 = arg1_00;\n                    uVar10 = uVar8;\n                    unaff_R13 = uVar8;\n                }\n            }\n            if (uVar7 < unaff_RBX) {\n                unaff_RSI = uVar7 * 0x10;\n                if (*(piVar12 + uVar7 * 2 + 1) < arg1) {\n                    iVar13 = *(piVar12 + uVar7 * 2 + 1) * 0x20;\n                    uVar5 = *(iVar13 + uVar4);\n                    uVar2 = *(iVar13 + 8 + uVar4);\n                    iVar11 = piVar12[uVar7 * 2];\n                    uVar1 = *(iVar13 + 0x18 + uVar4);\n                    if ((uVar7 == unaff_RBX - 1) && (*(iVar3 + 0x48) != 0)) {\n                        *(*0x20 + -0x20) = *(iVar13 + 0x10 + uVar4);\n                        *(*0x20 + -0x28) = uVar2;\n                        *(*0x20 + -0x18) = uVar5;\n                        *(*0x20 + -0x30) = iVar11;\n                        *(*0x20 + -0x39) = uVar1;\n                        *(*0x20 + -0x38) = arg1_00;\n                        *(*0x20 + -0x68) = 0x47b64e;\n                        uVar5 = fcn.0047b7c0(arg1_00);\n                        if (uVar7 != '\\0') {\n                            return uVar5;\n                        }\n                        uVar5 = *(*0x20 + -0x18);\n                    }\n                    return uVar5;\n                }\n                *(*0x20 + -0x68) = 0x47b6a5;\n                fcn.0045e240(arg1);\n            }\n            *(*0x20 + -0x68) = 0x47b6b0;\n            fcn.0045e240(unaff_RBX);\ncode_r0x0047b6b0:\n            *(*0x20 + -0x68) = 0x47b6bb;\n            in_RAX = fcn.0045e240(unaff_RBX);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x47b6cb;\n        fcn.0045bb60();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1531
    },
    "0047b6e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0047b6e0(void)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    if (*(in_RAX + 0x30) != 0) {\n        iVar5 = 0;\n        iVar4 = *(in_RAX + 0x28);\n        while( true ) {\n            if (*(iVar4 + 8) == '\\0') {\n                uVar2 = *(in_RAX + 0x18);\n                iVar4 = *(in_RAX + 0x10);\n                uVar3 = *(*(in_RAX + 0x28) + 8);\n                if (uVar2 <= uVar3) {\n                    fcn.0045e240(uVar2);\n                    pcVar1 = swi(3);\n                    uVar2 = (*pcVar1)();\n                    return uVar2;\n                }\n                if (*(uVar3 * 0x20 + 0x18 + iVar4) != '\\0') {\n                    while (uVar3 = uVar3 - 1,  -1 < uVar3) {\n                        if (*(uVar3 * 0x20 + 0x18 + iVar4) == '\\0') {\n                            return uVar3;\n                        }\n                    }\n                }\n                uVar3 = 0;\n                while( true ) {\n                    if (uVar2 <= uVar3) {\n                        return 0;\n                    }\n                    if (*(uVar3 * 0x20 + 0x18 + iVar4) == '\\0') break;\n                    uVar3 = uVar3 + 1;\n                }\n                return uVar3;\n            }\n            iVar5 = iVar5 + 1;\n            if (*(in_RAX + 0x30) <= iVar5) break;\n            iVar4 = iVar4 + 0x10;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 437
    },
    "0047c080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0047c080(void)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    char *in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    char *pcVar6;\n    uint64_t unaff_RBX;\n    uint64_t uVar7;\n    uint64_t arg1;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t iVar9;\n    int64_t iVar10;\n    int64_t unaff_R14;\n    char cVar11;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x18 && *0x20 + -0x18 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x98;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX == 0) {\n                return 0;\n            }\n            cVar11 = *in_RAX;\n            if (cVar11 == '+') {\n                uVar7 = unaff_RBX - 1;\n                in_RAX = in_RAX + (-uVar7 >> 0x3f & 1);\n                cVar11 = false;\n            }\n            else {\n                uVar7 = unaff_RBX;\n                if (cVar11 == '-') {\n                    uVar7 = unaff_RBX - 1;\n                    unaff_RBX = -uVar7 >> 0x3f & 1;\n                    in_RAX = in_RAX + unaff_RBX;\n                }\n                cVar11 = cVar11 == '-';\n            }\n            *(*0x20 + -0x79) = cVar11;\n            if (uVar7 == 0) {\n                iVar9 = 0;\n                pcVar6 = NULL;\n                bVar1 = false;\n                iVar10 = 0;\n            }\n            else {\n                *(*0x20 + -0x78) = uVar7;\n                *(*0x20 + -0x10) = in_RAX;\n                uVar4 = 0;\n                iVar10 = 0;\n                do {\n                    if (uVar7 <= uVar4) {\n                        if (iVar10 < 0) {\n                            iVar9 = 0;\n                            pcVar6 = NULL;\n                            bVar1 = false;\n                            iVar10 = 0;\n                        }\n                        else {\n                            iVar9 = 0;\n                            pcVar6 = NULL;\n                            bVar1 = true;\n                        }\n                        goto code_r0x0047c220;\n                    }\n                    uVar2 = in_RAX[uVar4];\n                    if (in_RAX[uVar4] < 0x80) {\n                        uVar5 = uVar4;\n                        arg1 = uVar7;\n                        uVar4 = uVar4 + 1;\n                    }\n                    else {\n                        *(*0x20 + -0x30) = uVar4;\n                        *(*0x20 + -0x48) = iVar10;\n                        *(*0x20 + -0xa0) = 0x47c171;\n                        uVar2 = fcn.00458880(uVar4);\n                        uVar5 = *(*0x20 + -0x30);\n                        iVar10 = *(*0x20 + -0x48);\n                        arg1 = *(*0x20 + -0x78);\n                        cVar11 = *(*0x20 + -0x79);\n                        in_RAX = *(*0x20 + -0x10);\n                        unaff_RBX = uVar7;\n                        uVar4 = uVar7;\n                    }\n                    if (9 < uVar2 - 0x30) {\n                        if ((uVar5 == 0) || (iVar10 < 0)) {\n                            iVar9 = 0;\n                            pcVar6 = NULL;\n                            bVar1 = false;\n                            iVar10 = 0;\n                        }\n                        else {\n                            if (arg1 < uVar5) goto code_r0x0047c5cd;\n                            iVar9 = arg1 - uVar5;\n                            pcVar6 = in_RAX + (uVar5 & -iVar9 >> 0x3f);\n                            bVar1 = true;\n                        }\n                        goto code_r0x0047c220;\n                    }\n                    iVar10 = uVar2 + iVar10 * 10 + -0x30;\n                    uVar7 = arg1;\n                } while (iVar10 < 0xa9);\n                iVar9 = 0;\n                pcVar6 = NULL;\n                bVar1 = false;\n                iVar10 = 0;\n            }\ncode_r0x0047c220:\n            if (!bVar1) {\n                return 0;\n            }\n            iVar3 = iVar10 * 0xe10;\n            if ((iVar9 == 0) || (*pcVar6 != ':')) {\n                if (cVar11 != '\\0') {\n                    iVar3 = iVar10 * -0xe10;\n                }\n                return iVar3;\n            }\n            uVar7 = iVar9 - 1;\n            pcVar6 = pcVar6 + (-uVar7 >> 0x3f & 1);\n            if (iVar9 == 1) {\n                iVar10 = 0;\n                pcVar6 = NULL;\n                bVar1 = false;\n                arg1 = 0;\n            }\n            else {\n                *(*0x20 + -0x68) = iVar9;\n                *(*0x20 + -0x60) = iVar3;\n                *(*0x20 + -0x28) = uVar7;\n                *(*0x20 + -0x18) = pcVar6;\n                uVar4 = 0;\n                arg1 = 0;\n                do {\n                    if (uVar7 <= uVar4) {\n                        if (arg1 < 0) {\n                            iVar10 = 0;\n                            pcVar6 = NULL;\n                            bVar1 = false;\n                            arg1 = 0;\n                        }\n                        else {\n                            iVar10 = 0;\n                            pcVar6 = NULL;\n                            bVar1 = true;\n                        }\n                        goto code_r0x0047c3c0;\n                    }\n                    uVar2 = pcVar6[uVar4];\n                    if (pcVar6[uVar4] < 0x80) {\n                        uVar5 = uVar7;\n                        unaff_RBX = uVar4;\n                        uVar4 = uVar4 + 1;\n                    }\n                    else {\n                        *(*0x20 + -0x38) = uVar4;\n                        *(*0x20 + -0x50) = arg1;\n                        *(*0x20 + -0xa0) = 0x47c30a;\n                        uVar2 = fcn.00458880(uVar4);\n                        uVar5 = *(*0x20 + -0x28);\n                        pcVar6 = *(*0x20 + -0x18);\n                        arg1 = *(*0x20 + -0x50);\n                        cVar11 = *(*0x20 + -0x79);\n                        iVar9 = *(*0x20 + -0x68);\n                        iVar3 = *(*0x20 + -0x60);\n                        unaff_RBX = *(*0x20 + -0x38);\n                        uVar4 = uVar7;\n                    }\n                    if (9 < uVar2 - 0x30) {\n                        if ((unaff_RBX == 0) || (arg1 < 0)) {\n                            iVar10 = 0;\n                            pcVar6 = NULL;\n                            bVar1 = false;\n                            arg1 = 0;\n                        }\n                        else {\n                            if (uVar5 < unaff_RBX) goto code_r0x0047c5c5;\n                            iVar10 = (iVar9 - unaff_RBX) + -1;\n                            pcVar6 = pcVar6 + (unaff_RBX & -iVar10 >> 0x3f);\n                            bVar1 = true;\n                        }\n                        goto code_r0x0047c3c0;\n                    }\n                    arg1 = (uVar2 + arg1 * 10) - 0x30;\n                    uVar7 = uVar5;\n                } while (arg1 < 0x3c);\n                iVar10 = 0;\n                pcVar6 = NULL;\n                bVar1 = false;\n                arg1 = 0;\n            }\ncode_r0x0047c3c0:\n            if (!bVar1) {\n                return 0;\n            }\n            iVar3 = iVar3 + arg1 * 0x3c;\n            if ((iVar10 == 0) || (*pcVar6 != ':')) {\n                if (cVar11 != '\\0') {\n                    iVar3 = -iVar3;\n                }\n                return iVar3;\n            }\n            uVar7 = iVar10 - 1;\n            pcVar6 = pcVar6 + (-uVar7 >> 0x3f & 1);\n            if (iVar10 == 1) {\n                bVar1 = false;\n                arg1 = 0;\n                goto code_r0x0047c462;\n            }\n            *(*0x20 + -0x60) = iVar3;\n            *(*0x20 + -0x70) = iVar10;\n            *(*0x20 + -0x28) = uVar7;\n            *(*0x20 + -0x20) = pcVar6;\n            uVar4 = 0;\n            arg1 = 0;\n            while( true ) {\n                if (uVar7 <= uVar4) {\n                    if (arg1 < 0) {\n                        bVar1 = false;\n                        arg1 = 0;\n                    }\n                    else {\n                        bVar1 = true;\n                    }\n                    goto code_r0x0047c462;\n                }\n                uVar2 = pcVar6[uVar4];\n                if (pcVar6[uVar4] < 0x80) {\n                    uVar5 = uVar7;\n                    unaff_RBX = uVar4;\n                    uVar4 = uVar4 + 1;\n                }\n                else {\n                    *(*0x20 + -0x40) = uVar4;\n                    *(*0x20 + -0x58) = arg1;\n                    *(*0x20 + -0xa0) = 0x47c4ec;\n                    uVar2 = fcn.00458880(uVar4);\n                    uVar5 = *(*0x20 + -0x28);\n                    pcVar6 = *(*0x20 + -0x20);\n                    arg1 = *(*0x20 + -0x58);\n                    cVar11 = *(*0x20 + -0x79);\n                    iVar3 = *(*0x20 + -0x60);\n                    unaff_RBX = *(*0x20 + -0x40);\n                    uVar4 = uVar7;\n                }\n                if (9 < uVar2 - 0x30) break;\n                arg1 = (uVar2 + arg1 * 10) - 0x30;\n                uVar7 = uVar5;\n                if (0x3b < arg1) {\n                    bVar1 = false;\n                    arg1 = 0;\n                    goto code_r0x0047c462;\n                }\n            }\n            if ((unaff_RBX == 0) || (arg1 < 0)) {\n                bVar1 = false;\n                arg1 = 0;\n                goto code_r0x0047c462;\n            }\n            if (unaff_RBX <= uVar5) {\n                bVar1 = true;\ncode_r0x0047c462:\n                if (!bVar1) {\n                    return 0;\n                }\n                iVar10 = iVar3 + arg1;\n                if (cVar11 != '\\0') {\n                    iVar10 = -(iVar3 + arg1);\n                }\n                return iVar10;\n            }\n            *(*0x20 + -0xa0) = 0x47c5c5;\n            fcn.0045e300(uVar5);\ncode_r0x0047c5c5:\n            *(*0x20 + -0xa0) = 0x47c5cd;\n            fcn.0045e300(uVar5);\ncode_r0x0047c5cd:\n            *(*0x20 + -0xa0) = 0x47c5d8;\n            in_RAX = fcn.0045e300(arg1);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x47c5e8;\n        fcn.0045bb60();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 2851
    },
    "0047c600": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0047c600(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    uint32_t uVar3;\n    char *in_RAX;\n    char *pcVar4;\n    ulong uVar5;\n    char *pcVar6;\n    char *pcVar7;\n    char *pcVar8;\n    char *pcVar9;\n    char *unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uint64_t uVar11;\n    char *unaff_RDI;\n    char *pcVar12;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x88 && *0x20 + -0x88 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x108;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x78) = in_XMM15;\n            *(*0x20 + -0x70) = in_XMM15;\n            *(*0x20 + -0x60) = in_XMM15;\n            *(*0x20 + -0x50) = in_XMM15;\n            *(*0x20 + -0x48) = in_XMM15;\n            *(*0x20 + -0x38) = in_XMM15;\n            if (unaff_RBX == NULL) {\n                *(*0x20 + -0x78) = in_XMM15;\n                *(*0x20 + -0x70) = in_XMM15;\n                *(*0x20 + -0x60) = in_XMM15;\n                return *(*0x20 + -0x78);\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*in_RAX != 'J') {\n                if (*in_RAX != 'M') {\n                    *(*0x20 + 8) = in_RAX;\n                    pcVar9 = NULL;\n                    pcVar12 = NULL;\n                    pcVar4 = unaff_RBX;\n                    break;\n                }\n                pcVar12 = unaff_RBX + -1;\n                pcVar4 = in_RAX + (-pcVar12 >> 0x3f & 1);\n                if (unaff_RBX != 0x1) {\n                    *(*0x20 + -0x80) = pcVar12;\n                    *(*0x20 + -0x18) = pcVar4;\n                    uVar11 = 0;\n                    pcVar9 = NULL;\n                    goto code_r0x0047ca2b;\n                }\n                pcVar12 = NULL;\n                bVar1 = false;\n                pcVar4 = NULL;\n                uVar11 = 0;\n                goto code_r0x0047cb1b;\n            }\n            pcVar12 = unaff_RBX + -1;\n            pcVar4 = in_RAX + (-pcVar12 >> 0x3f & 1);\n            if (unaff_RBX == 0x1) {\n                cVar2 = '\\0';\n                pcVar6 = NULL;\n                pcVar9 = NULL;\n                unaff_RBX = NULL;\n                goto code_r0x0047cef8;\n            }\n            *(*0x20 + -0x80) = pcVar12;\n            *(*0x20 + -0x10) = pcVar4;\n            pcVar9 = NULL;\n            pcVar6 = NULL;\n            while( true ) {\n                if (pcVar12 <= pcVar9) {\n                    if (pcVar6 < 1) {\n                        cVar2 = '\\0';\n                        pcVar6 = NULL;\n                        pcVar9 = NULL;\n                        unaff_RBX = NULL;\n                    }\n                    else {\n                        cVar2 = '\\x01';\n                        pcVar9 = NULL;\n                        unaff_RBX = NULL;\n                    }\n                    goto code_r0x0047cef8;\n                }\n                uVar3 = pcVar9[pcVar4];\n                if (pcVar9[pcVar4] < 0x80) {\n                    pcVar7 = pcVar9;\n                    pcVar8 = pcVar12;\n                    pcVar9 = pcVar9 + 1;\n                }\n                else {\n                    *(*0x20 + -0x88) = pcVar9;\n                    *(*0x20 + -0xb8) = pcVar6;\n                    *(*0x20 + -0x110) = 0x47cf9a;\n                    uVar3 = fcn.00458880(pcVar9);\n                    pcVar7 = *(*0x20 + -0x88);\n                    pcVar8 = *(*0x20 + -0x80);\n                    pcVar6 = *(*0x20 + -0xb8);\n                    pcVar4 = *(*0x20 + -0x10);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    pcVar9 = pcVar12;\n                }\n                if (9 < uVar3 - 0x30) break;\n                pcVar6 = uVar3 + pcVar6 * 10 + -0x30;\n                pcVar12 = pcVar8;\n                if (0x16d < pcVar6) {\n                    cVar2 = '\\0';\n                    pcVar6 = NULL;\n                    pcVar9 = NULL;\n                    unaff_RBX = NULL;\n                    goto code_r0x0047cef8;\n                }\n            }\n            if ((pcVar7 == NULL) || (pcVar6 < 1)) {\n                cVar2 = '\\0';\n                pcVar6 = NULL;\n                pcVar9 = NULL;\n                unaff_RBX = NULL;\n                goto code_r0x0047cef8;\n            }\n            if (pcVar7 <= pcVar8) goto code_r0x0047d018;\n            *(*0x20 + -0x110) = 0x47d074;\n            in_RAX = fcn.0045e300(pcVar8);\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + -8) = 0x47d085;\n        fcn.0045bb60();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        *0x20 = puVar10;\n    } while( true );\n    while (pcVar12 = uVar11 + pcVar12 * 10 + -0x30,  pcVar4 = unaff_RBX,  pcVar12 < 0x16e) {\n        if (pcVar4 <= pcVar9) {\n            if (pcVar12 < 0) {\n                bVar1 = false;\n                pcVar9 = NULL;\n                pcVar12 = NULL;\n                unaff_RBX = NULL;\n            }\n            else {\n                bVar1 = true;\n                pcVar9 = NULL;\n                unaff_RBX = NULL;\n            }\n            goto code_r0x0047c836;\n        }\n        uVar11 = pcVar9[in_RAX];\n        if (pcVar9[in_RAX] < 0x80) {\n            pcVar6 = pcVar9;\n            unaff_RBX = pcVar4;\n            pcVar9 = pcVar9 + 1;\n        }\n        else {\n            *(*0x20 + -0xa8) = pcVar9;\n            *(*0x20 + -0xd8) = pcVar12;\n            *(*0x20 + -0x110) = 0x47c791;\n            uVar3 = fcn.00458880(pcVar9);\n            pcVar6 = *(*0x20 + -0xa8);\n            pcVar12 = *(*0x20 + -0xd8);\n            uVar11 = uVar3;\n            in_RAX = *(*0x20 + 8);\n            unaff_RBX = *(*0x20 + 0x10);\n            pcVar9 = pcVar4;\n        }\n        if (9 < uVar11 - 0x30U) {\n            if ((pcVar6 == NULL) || (pcVar12 < 0)) {\n                bVar1 = false;\n                pcVar9 = NULL;\n                pcVar12 = NULL;\n                unaff_RBX = NULL;\n                goto code_r0x0047c836;\n            }\n            if (pcVar6 <= unaff_RBX) {\n                pcVar9 = unaff_RBX + -pcVar6;\n                unaff_RBX = in_RAX + (pcVar6 & -pcVar9 >> 0x3f);\n                bVar1 = true;\n                goto code_r0x0047c836;\n            }\n            *(*0x20 + -0x110) = 0x47ca25;\n            pcVar4 = fcn.0045e300(unaff_RBX);\n            goto code_r0x0047ca2b;\n        }\n    }\n    bVar1 = false;\n    pcVar9 = NULL;\n    pcVar12 = NULL;\n    unaff_RBX = NULL;\ncode_r0x0047c836:\n    if (!bVar1) {\n        *(*0x20 + -0x78) = in_XMM15;\n        *(*0x20 + -0x70) = in_XMM15;\n        *(*0x20 + -0x60) = in_XMM15;\n        return *(*0x20 + -0x78);\n    }\n    *(*0x20 + -0x50) = 1;\n    *(*0x20 + -0x48) = pcVar12;\n    goto code_r0x0047c897;\ncode_r0x0047ce46:\n    pcVar6 = uVar3 + pcVar6 * 10 + -0x30;\n    pcVar12 = pcVar8;\n    if (6 < pcVar6) goto code_r0x0047ce5f;\n    goto code_r0x0047cdd6;\ncode_r0x0047ce5f:\n    bVar1 = false;\n    pcVar6 = NULL;\n    pcVar9 = NULL;\n    unaff_RDI = NULL;\n    goto code_r0x0047cd56;\ncode_r0x0047d018:\n    pcVar9 = unaff_RBX + (-1 - pcVar7);\n    unaff_RBX = pcVar4 + (pcVar7 & -pcVar9 >> 0x3f);\n    cVar2 = '\\x01';\ncode_r0x0047cef8:\n    if (cVar2 == '\\0') {\n        *(*0x20 + -0x78) = in_XMM15;\n        *(*0x20 + -0x70) = in_XMM15;\n        *(*0x20 + -0x60) = in_XMM15;\n        return *(*0x20 + -0x78);\n    }\n    *(*0x20 + -0x50) = 0;\n    *(*0x20 + -0x48) = pcVar6;\n    goto code_r0x0047c897;\n    while (uVar11 = (uVar3 + uVar11 * 10) - 0x30,  pcVar9 = pcVar12,  pcVar12 = pcVar6,  uVar11 < 0xd) {\ncode_r0x0047ca2b:\n        if (pcVar12 <= pcVar9) {\n            if (uVar11 < 1) {\n                pcVar12 = NULL;\n                bVar1 = false;\n                pcVar4 = NULL;\n                uVar11 = 0;\n            }\n            else {\n                pcVar12 = NULL;\n                bVar1 = true;\n                pcVar4 = NULL;\n            }\n            goto code_r0x0047cb1b;\n        }\n        uVar3 = pcVar9[pcVar4];\n        if (pcVar9[pcVar4] < 0x80) {\n            pcVar6 = pcVar12;\n            pcVar12 = pcVar9 + 1;\n        }\n        else {\n            *(*0x20 + -0x90) = pcVar9;\n            *(*0x20 + -0xc0) = uVar11;\n            *(*0x20 + -0x110) = 0x47ca65;\n            uVar3 = fcn.00458880(pcVar9);\n            pcVar9 = *(*0x20 + -0x90);\n            pcVar6 = *(*0x20 + -0x80);\n            uVar11 = *(*0x20 + -0xc0);\n            pcVar4 = *(*0x20 + -0x18);\n            unaff_RBX = *(*0x20 + 0x10);\n        }\n        if (9 < uVar3 - 0x30) {\n            if ((pcVar9 == NULL) || (uVar11 < 1)) {\n                pcVar12 = NULL;\n                bVar1 = false;\n                pcVar4 = NULL;\n                uVar11 = 0;\n            }\n            else {\n                if (pcVar6 < pcVar9) goto code_r0x0047ceed;\n                pcVar12 = unaff_RBX + (-1 - pcVar9);\n                pcVar4 = pcVar4 + (pcVar9 & -pcVar12 >> 0x3f);\n                bVar1 = true;\n            }\n            goto code_r0x0047cb1b;\n        }\n    }\n    pcVar12 = NULL;\n    bVar1 = false;\n    pcVar4 = NULL;\n    uVar11 = 0;\ncode_r0x0047cb1b:\n    if (((!bVar1) || (pcVar12 == NULL)) || (*pcVar4 != '.')) {\n        *(*0x20 + -0x78) = in_XMM15;\n        *(*0x20 + -0x70) = in_XMM15;\n        *(*0x20 + -0x60) = in_XMM15;\n        return *(*0x20 + -0x78);\n    }\n    *(*0x20 + -0xb0) = uVar11;\n    pcVar9 = pcVar12 + -1;\n    pcVar4 = pcVar4 + (-pcVar9 >> 0x3f & 1);\n    if (pcVar12 == 0x1) {\n        unaff_RDI = NULL;\n        bVar1 = false;\n        pcVar4 = NULL;\n        unaff_RBX = NULL;\n    }\n    else {\n        *(*0x20 + -0x80) = pcVar9;\n        *(*0x20 + -0x20) = pcVar4;\n        *(*0x20 + -0xe0) = pcVar12;\n        pcVar7 = NULL;\n        unaff_RBX = NULL;\n        do {\n            if (pcVar9 <= pcVar7) {\n                if (unaff_RBX < 1) {\n                    unaff_RDI = NULL;\n                    bVar1 = false;\n                    pcVar4 = NULL;\n                    unaff_RBX = NULL;\n                }\n                else {\n                    unaff_RDI = NULL;\n                    bVar1 = true;\n                    pcVar4 = NULL;\n                }\n                goto code_r0x0047ccb2;\n            }\n            uVar3 = pcVar7[pcVar4];\n            if (pcVar7[pcVar4] < 0x80) {\n                pcVar8 = pcVar9;\n                pcVar6 = pcVar7;\n                pcVar7 = pcVar7 + 1;\n            }\n            else {\n                *(*0x20 + -0x98) = pcVar7;\n                *(*0x20 + -200) = unaff_RBX;\n                *(*0x20 + -0x110) = 0x47cbf2;\n                uVar3 = fcn.00458880(pcVar7);\n                pcVar8 = *(*0x20 + -0x80);\n                pcVar6 = *(*0x20 + -0x98);\n                uVar11 = *(*0x20 + -0xb0);\n                pcVar12 = *(*0x20 + -0xe0);\n                pcVar4 = *(*0x20 + -0x20);\n                unaff_RBX = *(*0x20 + -200);\n                pcVar7 = pcVar9;\n            }\n            if (9 < uVar3 - 0x30) {\n                if ((pcVar6 == NULL) || (unaff_RBX < 1)) {\n                    unaff_RDI = NULL;\n                    bVar1 = false;\n                    pcVar4 = NULL;\n                    unaff_RBX = NULL;\n                }\n                else {\n                    if (pcVar8 < pcVar6) goto code_r0x0047cee5;\n                    unaff_RDI = pcVar12 + (-1 - pcVar6);\n                    pcVar4 = pcVar4 + (pcVar6 & -unaff_RDI >> 0x3f);\n                    bVar1 = true;\n                }\n                goto code_r0x0047ccb2;\n            }\n            unaff_RBX = uVar3 + unaff_RBX * 10 + -0x30;\n            pcVar9 = pcVar8;\n        } while (unaff_RBX < 6);\n        unaff_RDI = NULL;\n        bVar1 = false;\n        pcVar4 = NULL;\n        unaff_RBX = NULL;\n    }\ncode_r0x0047ccb2:\n    if (((!bVar1) || (unaff_RDI == NULL)) || (*pcVar4 != '.')) {\n        *(*0x20 + -0x78) = in_XMM15;\n        *(*0x20 + -0x70) = in_XMM15;\n        *(*0x20 + -0x60) = in_XMM15;\n        return *(*0x20 + -0x78);\n    }\n    pcVar12 = unaff_RDI + -1;\n    pcVar4 = pcVar4 + (-pcVar12 >> 0x3f & 1);\n    if (unaff_RDI != 0x1) {\n        *(*0x20 + -0xe8) = unaff_RDI;\n        *(*0x20 + -0xf0) = unaff_RBX;\n        *(*0x20 + -0x80) = pcVar12;\n        *(*0x20 + -0x28) = pcVar4;\n        pcVar9 = NULL;\n        pcVar6 = NULL;\ncode_r0x0047cdd6:\n        if (pcVar9 < pcVar12) {\n            uVar3 = pcVar9[pcVar4];\n            if (pcVar9[pcVar4] < 0x80) {\n                pcVar7 = pcVar9;\n                pcVar8 = pcVar12;\n                pcVar9 = pcVar9 + 1;\n            }\n            else {\n                *(*0x20 + -0xa0) = pcVar9;\n                *(*0x20 + -0xd0) = pcVar6;\n                *(*0x20 + -0x110) = 0x47ce05;\n                uVar3 = fcn.00458880(pcVar9);\n                pcVar7 = *(*0x20 + -0xa0);\n                pcVar6 = *(*0x20 + -0xd0);\n                uVar11 = *(*0x20 + -0xb0);\n                pcVar8 = *(*0x20 + -0x80);\n                unaff_RDI = *(*0x20 + -0xe8);\n                pcVar4 = *(*0x20 + -0x28);\n                unaff_RBX = *(*0x20 + -0xf0);\n                pcVar9 = pcVar12;\n            }\n            if (uVar3 - 0x30 < 10) goto code_r0x0047ce46;\n            if ((pcVar7 == NULL) || (pcVar6 < 0)) {\n                bVar1 = false;\n                pcVar6 = NULL;\n                pcVar9 = NULL;\n                unaff_RDI = NULL;\n            }\n            else {\n                if (pcVar8 < pcVar7) {\n                    *(*0x20 + -0x110) = 0x47cee5;\n                    fcn.0045e300(pcVar8);\ncode_r0x0047cee5:\n                    *(*0x20 + -0x110) = 0x47ceed;\n                    fcn.0045e300(pcVar8);\ncode_r0x0047ceed:\n                    *(*0x20 + -0x110) = 0x47cef8;\n                    pcVar9 = pcVar6;\n                    cVar2 = fcn.0045e300(pcVar6);\n                    goto code_r0x0047cef8;\n                }\n                pcVar9 = unaff_RDI + (-1 - pcVar7);\n                unaff_RDI = pcVar4 + (pcVar7 & -pcVar9 >> 0x3f);\n                bVar1 = true;\n            }\n        }\n        else if (pcVar6 < 0) {\n            bVar1 = false;\n            pcVar6 = NULL;\n            pcVar9 = NULL;\n            unaff_RDI = NULL;\n        }\n        else {\n            bVar1 = true;\n            pcVar9 = NULL;\n            unaff_RDI = NULL;\n        }\n        goto code_r0x0047cd56;\n    }\n    bVar1 = false;\n    pcVar6 = NULL;\n    pcVar9 = NULL;\n    unaff_RDI = NULL;\ncode_r0x0047cd56:\n    if (!bVar1) {\n        *(*0x20 + -0x78) = in_XMM15;\n        *(*0x20 + -0x70) = in_XMM15;\n        *(*0x20 + -0x60) = in_XMM15;\n        return *(*0x20 + -0x78);\n    }\n    *(*0x20 + -0x50) = 2;\n    *(*0x20 + -0x48) = pcVar6;\n    *(*0x20 + -0x40) = unaff_RBX;\n    *(*0x20 + -0x38) = uVar11;\n    unaff_RBX = unaff_RDI;\ncode_r0x0047c897:\n    if ((pcVar9 != NULL) && (*unaff_RBX == '/')) {\n        *(*0x20 + -0x110) = 0x47c945;\n        uVar5 = fcn.0047c080(pcVar9 + -1);\n        if (unaff_RDI == '\\0') {\n            *(*0x20 + -0x78) = in_XMM15;\n            *(*0x20 + -0x70) = in_XMM15;\n            *(*0x20 + -0x60) = in_XMM15;\n            return *(*0x20 + -0x78);\n        }\n        *(*0x20 + -0x30) = uVar5;\n        *(*0x20 + -0x78) = *(*0x20 + -0x50);\n        *(*0x20 + -0x70) = *(*0x20 + -0x48);\n        *(*0x20 + -0x6c) = *(*0x20 + -0x44);\n        *(*0x20 + -0x68) = *(*0x20 + -0x40);\n        *(*0x20 + -100) = *(*0x20 + -0x3c);\n        *(*0x20 + -0x60) = *(*0x20 + -0x38);\n        *(*0x20 + -0x5c) = *(*0x20 + -0x34);\n        *(*0x20 + -0x58) = *(*0x20 + -0x30);\n        *(*0x20 + -0x54) = *(*0x20 + -0x2c);\n        return *(*0x20 + -0x78);\n    }\n    *(*0x20 + -0x30) = 0x1c20;\n    *(*0x20 + -0x78) = *(*0x20 + -0x50);\n    *(*0x20 + -0x70) = *(*0x20 + -0x48);\n    *(*0x20 + -0x6c) = *(*0x20 + -0x44);\n    *(*0x20 + -0x68) = *(*0x20 + -0x40);\n    *(*0x20 + -100) = *(*0x20 + -0x3c);\n    *(*0x20 + -0x60) = *(*0x20 + -0x38);\n    *(*0x20 + -0x5c) = *(*0x20 + -0x34);\n    *(*0x20 + -0x58) = *(*0x20 + -0x30);\n    *(*0x20 + -0x54) = *(*0x20 + -0x2c);\n    return *(*0x20 + -0x78);\n}\n",
        "token_count": 5500
    },
    "0047d0a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0047d0a0(int64_t arg1, ulong noname_1, int64_t arg3, int64_t arg4)\n\n{\n    code *pcVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t unaff_RBX;\n    uint64_t unaff_RSI;\n    int64_t iVar6;\n    int64_t unaff_RDI;\n    int64_t iVar7;\n    int64_t iStack0000000000000030;\n    \n    iVar4 = in_RAX >> 0x3f;\n    if (unaff_RBX == 0) {\n        iVar3 = arg1 * 0x15180;\n        if ((((in_RAX & 3) != 0) ||\n            ((in_RAX == ((SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(in_RAX) >> 0x40, 0) + in_RAX >> 6) - iVar4) *\n                        100 &&\n             (0xa3d70a3d70a3d6 <\n              (in_RAX * -0x70a3d70a3d70a3d7 << 0x3c | in_RAX * -0x70a3d70a3d70a3d7 + 0x51eb851eb851eb0 >> 4))))) ||\n           (arg1 < 0x3c)) {\n            iVar3 = iVar3 + -0x15180;\n        }\n    }\n    else if (unaff_RBX == 1) {\n        iVar3 = arg1 * 0x15180;\n    }\n    else if (unaff_RBX == 2) {\n        uVar2 = in_RAX;\n        if (unaff_RSI < 3) {\n            uVar2 = in_RAX - 1;\n        }\n        iVar5 = (SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(uVar2) >> 0x40, 0) + uVar2 >> 6) - (uVar2 >> 0x3f);\n        iVar7 = uVar2 + iVar5 * -100;\n        iVar6 = (unaff_RSI +\n                ((unaff_RSI + SUB168(SEXT816(-0x5555555555555555) * SEXT816(unaff_RSI + 9) >> 0x40, 0) + 9 >> 3) -\n                (unaff_RSI + 9 >> 0x3f)) * -0xc) * 0x1a;\n        iVar3 = iVar6 + 0x102;\n        iVar5 = ((iVar6 + SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar3) >> 0x40, 0) + 0x102 >> 3) -\n                (iVar3 >> 0x3f)) + iVar7 + (iVar7 + ((iVar7 >> 0x3f) >> 0x3e) >> 2) +\n                (((iVar5 >> 0x3f) >> 0x3e) + iVar5 >> 2) + iVar5 * -2;\n        iVar5 = iVar5 + ((iVar5 + 1) / 7) * -7;\n        iVar3 = iVar5 + 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar5 + 8;\n        }\n        arg1 = arg1 - iVar3;\n        if (arg1 < 0) {\n            arg1 = arg1 + 7;\n        }\n        for (iVar3 = 1; iStack0000000000000030 = arg3,  iVar3 < unaff_RDI; iVar3 = iVar3 + 1) {\n            if (((unaff_RSI == 2) && ((in_RAX & 3) == 0)) &&\n               ((in_RAX != ((SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(in_RAX) >> 0x40, 0) + in_RAX >> 6) - iVar4) *\n                           100 ||\n                ((in_RAX * -0x70a3d70a3d70a3d7 << 0x3c | in_RAX * -0x70a3d70a3d70a3d7 + 0x51eb851eb851eb0 >> 4) <\n                 0xa3d70a3d70a3d7)))) {\n                iVar5 = 0x1d;\n            }\n            else {\n                if (0xc < unaff_RSI) goto code_r0x0047d447;\n                if (0xc < unaff_RSI - 1) goto code_r0x0047d43d;\n                iVar5 = *(unaff_RSI * 4 + 0x796e00) - *(unaff_RSI * 4 + 0x796dfc);\n            }\n            if (iVar5 <= arg1 + 7) break;\n            arg1 = arg1 + 7;\n        }\n        if (0xc < unaff_RSI - 1) {\n            fcn.0045e240(0xd);\ncode_r0x0047d43d:\n            fcn.0045e240(0xd);\ncode_r0x0047d447:\n            fcn.0045e240(0xd);\n            pcVar1 = swi(3);\n            iVar4 = (*pcVar1)();\n            return iVar4;\n        }\n        iVar5 = *(unaff_RSI * 4 + 0x796dfc);\n        iVar3 = iVar5 + arg1;\n        if (((in_RAX & 3) == 0) &&\n           (((in_RAX != ((SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(in_RAX) >> 0x40, 0) + in_RAX >> 6) - iVar4) *\n                        100 ||\n             ((in_RAX * -0x70a3d70a3d70a3d7 << 0x3c | in_RAX * -0x70a3d70a3d70a3d7 + 0x51eb851eb851eb0 >> 4) <\n              0xa3d70a3d70a3d7)) && (2 < unaff_RSI)))) {\n            iVar3 = arg1 + iVar5 + 1;\n        }\n        iVar3 = iVar3 * 0x15180;\n    }\n    else {\n        iVar3 = 0;\n    }\n    return (iVar3 + arg3) - arg4;\n}\n",
        "token_count": 1516
    },
    "0047d8a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0047d930)\n// WARNING: Removing unreachable block (ram,0x0047d97f)\n// WARNING: Removing unreachable block (ram,0x0047d96a)\n// WARNING: Removing unreachable block (ram,0x0047d973)\n// WARNING: Removing unreachable block (ram,0x0047db01)\n// WARNING: Removing unreachable block (ram,0x0047db54)\n// WARNING: Removing unreachable block (ram,0x0047db6f)\n// WARNING: Removing unreachable block (ram,0x0047db58)\n// WARNING: Removing unreachable block (ram,0x0047db6a)\n// WARNING: Removing unreachable block (ram,0x0047da21)\n// WARNING: Removing unreachable block (ram,0x0047da83)\n// WARNING: Removing unreachable block (ram,0x0047da79)\n// WARNING: Removing unreachable block (ram,0x0047da90)\n// WARNING: Removing unreachable block (ram,0x0047daf2)\n\nulong fcn.0047d8a0(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    ulong uVar1;\n    uchar in_XMM15 [16];\n    uchar auStack64 [48];\n    ulong uStack16;\n    \n    while (uVar1 = SUB168(in_XMM15, 0),  auStack64 < *(unaff_R14 + 0x10) || auStack64 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    uStack16 = 0;\n    fcn.00475800(0x37);\n    return uVar1;\n}\n",
        "token_count": 372
    },
    "0047e040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint64_t fcn.0047e040(void)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    ulong in_RAX;\n    ulong uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    ulong arg1;\n    int64_t iVar7;\n    int64_t iVar8;\n    uint64_t unaff_RBX;\n    uint64_t noname_1;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        noname_1 = unaff_RBX;\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            noname_1 = *(unaff_RBX + 2);\n            uVar1 = *(unaff_RBX + 0xc);\n            arg1 = 1;\n            *(*0x20 + -0x68) = 0x47e08a;\n            uVar4 = fcn.0047ae40(1, noname_1, uVar1, 0);\n            *(*0x20 + -0x20) = uVar4;\n            *(*0x20 + -0x18) = noname_1;\n            *(*0x20 + -0x10) = arg1;\n            *(*0x20 + -0x68) = 0x47e09e;\n            iVar5 = fcn.0047aa40(arg1);\n            iVar8 = *(*0x20 + 0x10);\n            iVar5 = *(iVar8 + 4) - iVar5;\n            if (iVar5 < 0) {\n                iVar5 = iVar5 + 7;\n            }\n            if (*(iVar8 + 6) - 1 < 4) {\n                iVar8 = iVar5 + *(iVar8 + 6) * 7 + -6;\n                goto code_r0x0047e19c;\n            }\n            uVar6 = *(iVar8 + 2);\n            if (((uVar6 == 2) && (uVar3 = *(*0x20 + 8),  (uVar3 & 3) == 0)) &&\n               ((uVar3 != ((SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(uVar3) >> 0x40, 0) + uVar3 >> 6) -\n                          (uVar3 >> 0x3f)) * 100 ||\n                (noname_1 = 0xa3d70a3d70a3d6, \n                (uVar3 * -0x70a3d70a3d70a3d7 << 0x3c | uVar3 * -0x70a3d70a3d70a3d7 + 0x51eb851eb851eb0 >> 4) <\n                0xa3d70a3d70a3d7)))) {\n                iVar7 = 0x1d;\ncode_r0x0047e18d:\n                iVar8 = iVar5 + 0x1d;\n                if (iVar7 < iVar5 + 0x1d) {\n                    iVar8 = iVar5 + 0x16;\n                }\ncode_r0x0047e19c:\n                if (*(*0x20 + -0x20) < 0) {\n                    iVar5 = ((*(*0x20 + -0x20) << 1) >> 0x1f) + 0xdd7b17f80;\n                }\n                else {\n                    iVar5 = *(*0x20 + -0x18);\n                }\n                return iVar5 + (iVar8 + -1) * 0x15180 + -0xe7791f700;\n            }\n            if (uVar6 < 0xd) {\n                uVar2 = *(uVar6 * 4 + 0x796e00);\n                noname_1 = uVar2;\n                if (uVar6 - 1 < 0xd) {\n                    iVar7 = uVar2 - *(uVar6 * 4 + 0x796dfc);\n                    goto code_r0x0047e18d;\n                }\n                *(*0x20 + -0x68) = 0x47e1f2;\n                fcn.0045e240(0xd);\n            }\n            *(*0x20 + -0x68) = 0x47e1ff;\n            in_RAX = fcn.0045e240(0xd);\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = noname_1;\n        *(puVar9 + -8) = 0x47e20f;\n        fcn.0045bb60();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 1205
    },
    "0047e220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0047e220(ulong arg1, ulong noname_1, uint64_t arg3)\n\n{\n    int32_t *piVar1;\n    uint64_t arg1_00;\n    int64_t in_RAX;\n    ulong *puVar2;\n    ulong uVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    ulong *puVar6;\n    ulong uVar7;\n    uint64_t uVar8;\n    uint16_t uVar9;\n    int64_t iVar10;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t iVar12;\n    uint64_t uVar13;\n    int64_t unaff_RDI;\n    uint64_t in_R9;\n    int64_t unaff_R14;\n    bool bVar14;\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *0x7adca8 = 5;\n            if (*0x801c20 == 0) {\n                *0x7adca0 = 0x4aefcc;\n            }\n            else {\n                unaff_RDI = 0x7adca0;\n                *(*0x20 + -0x98) = 0x47e27d;\n                in_RAX = fcn.0045dec0(arg1, 0x4aefcc, arg3, in_R9);\n            }\n            *(*0x20 + 8) = in_RAX;\n            uVar7 = 1;\n            if (*(in_RAX + 0x46) != 0) {\n                uVar7 = 2;\n            }\n            *(*0x20 + -0x58) = uVar7;\n            *(*0x20 + -0x98) = 0x47e2ac;\n            uVar4 = uVar7;\n            puVar2 = fcn.00447240(uVar7);\n            *0x7adcb8 = *(*0x20 + -0x58);\n            *0x7adcc0 = *0x7adcb8;\n            if (*0x801c20 != 0) {\n                unaff_RDI = 0x7adcb0;\n                *(*0x20 + -0x98) = 0x47e2dd;\n                fcn.0045dda0(uVar4, *0x7adcb8, arg3, in_R9);\n                puVar2 = *0x7adcb0;\n            }\n            *0x7adcb0 = puVar2;\n            *(*0x20 + -0x98) = 0x47e2ea;\n            uVar3 = fcn.0047dca0();\n            puVar2 = *0x7adcb0;\n            if (*0x7adcb8 != 0) {\n                (*0x7adcb0)[1] = uVar7;\n                if (*0x801c20 == 0) {\n                    *puVar2 = uVar3;\n                }\n                else {\n                    *(*0x20 + -0x98) = 0x47e31c;\n                    fcn.0045dda0(uVar4, puVar2, arg3, in_R9);\n                }\n                if (*(*0x20 + -0x58) == 1) {\n                    puVar2[2] = **(*0x20 + 8) * -0x3c;\n                    *0x7adcf0 = 0x8000000000000000;\n                    uVar13 = 0x7fffffffffffffff;\n                    *0x7adcf8 = 0x7fffffffffffffff;\n                    puVar6 = puVar2;\n                    if (*0x801c20 != 0) {\n                        *(*0x20 + -0x98) = 0x47e52e;\n                        fcn.0045dec0(uVar4, puVar2, arg3, in_R9);\n                        puVar6 = *0x7add00;\n                    }\n                    *0x7add00 = puVar6;\n                    uVar7 = 1;\n                    *(*0x20 + -0x98) = 0x47e545;\n                    puVar6 = fcn.00447240(1);\n                    *0x7adcd0 = 1;\n                    *0x7adcd8 = 1;\n                    if (*0x801c20 != 0) {\n                        *(*0x20 + -0x98) = 0x47e579;\n                        fcn.0045dda0(uVar7, puVar2, arg3, in_R9);\n                        puVar6 = *0x7adcc8;\n                    }\n                    *0x7adcc8 = puVar6;\n                    **0x7adcc8 = *0x7adcf0;\n                    if (*0x7adcd0 == 0) {\n                        *(*0x20 + -0x98) = 0x47e5b9;\n                        puVar2 = *0x7adcc8;\n                        iVar5 = fcn.0045e240(0);\n                        goto code_r0x0047e5b9;\n                    }\n                    *(*0x7adcc8 + 1) = 0;\n                    return;\n                }\n                piVar1 = *(*0x20 + 8);\n                puVar2[2] = (piVar1[0x15] + *piVar1) * -0x3c;\n                uVar13 = *0x7adcb8;\n                puVar2 = *0x7adcb0;\n                arg3 = *0x7adcb8;\n                if (1 < *0x7adcb8) {\n                    (*0x7adcb0)[5] = unaff_RDI;\n                    if (*0x801c20 == 0) {\n                        puVar2[4] = uVar4;\n                    }\n                    else {\n                        *(*0x20 + -0x98) = 0x47e386;\n                        fcn.0045dea0(uVar4, puVar2, uVar13, in_R9);\n                    }\n                    puVar2[6] = (piVar1[0x2a] + *piVar1) * -0x3c;\n                    *(puVar2 + 7) = 1;\n                    *(*0x20 + -0x72) = *(piVar1 + 0x46);\n                    *(*0x20 + -0x74) = *(piVar1 + 0x9a);\n                    uVar7 = 400;\n                    *(*0x20 + -0x98) = 0x47e3c6;\n                    puVar2 = fcn.00447240(400);\n                    *0x7adcd0 = 400;\n                    *0x7adcd8 = 400;\n                    iVar5 = *(*0x20 + 8) + 0x44;\n                    iVar10 = *(*0x20 + 8) + 0x98;\n                    uVar9 = *(*0x20 + -0x72);\n                    iVar12 = iVar5;\n                    if (*(*0x20 + -0x74) < uVar9) {\n                        iVar12 = iVar10;\n                    }\n                    *(*0x20 + -0x30) = iVar12;\n                    if (*(*0x20 + -0x74) < uVar9) {\n                        iVar10 = iVar5;\n                    }\n                    *(*0x20 + -0x38) = iVar10;\n                    if (*0x801c20 != 0) {\n                        *(*0x20 + -0x98) = 0x47e431;\n                        fcn.0045dda0(uVar7, iVar10, uVar9, iVar5);\n                        puVar2 = *0x7adcc8;\n                    }\n                    *0x7adcc8 = puVar2;\n                    *(*0x20 + -0x98) = 0x47e436;\n                    uVar4 = fcn.0047ada0(uVar7);\n                    *(*0x20 + -0x20) = uVar4;\n                    *(*0x20 + -0x18) = 400;\n                    *(*0x20 + -0x10) = uVar7;\n                    if (*(*0x20 + -0x20) < 0) {\n                        *(*0x20 + -0x18) = ((*(*0x20 + -0x20) << 1) >> 0x1f) + 0xdd7b17f80;\n                        *(*0x20 + -0x20) = *(*0x20 + -0x20) & 0x3fffffff;\n                    }\n                    *(*0x20 + -0x10) = 0;\n                    *(*0x20 + -0x98) = 0x47e495;\n                    iVar5 = fcn.0047a9e0(0);\n                    *(*0x20 + -0x70) = iVar5;\n                    bVar14 = *(*0x20 + -0x74) < *(*0x20 + -0x72);\n                    uVar9 = *(*0x20 + -0x74) & 0xff00 | bVar14;\n                    *(*0x20 + -0x75) = bVar14;\n                    *(*0x20 + -0x76) = !bVar14;\n                    unaff_RDI = iVar5 + -100;\n                    arg3 = !bVar14;\n                    *(*0x20 + -0x50) = arg3;\n                    *(*0x20 + -0x48) = bVar14;\n                    uVar8 = 0;\n                    in_R9 = bVar14;\n                    while( true ) {\n                        arg1_00 = *0x7adcd0;\n                        if (iVar5 + 100 <= unaff_RDI) {\n                            return;\n                        }\n                        if (*0x7adcd0 <= uVar8) goto code_r0x0047e712;\n                        *(*0x20 + -0x28) = *0x7adcc8;\n                        *(*0x20 + -0x68) = unaff_RDI;\n                        *(*0x20 + -0x60) = uVar8;\n                        *(*0x20 + -0x98) = 0x47e645;\n                        iVar5 = fcn.0047e040(uVar8, uVar9);\n                        uVar13 = *0x7adcb8;\n                        if (*0x7adcb8 <= *(*0x20 + -0x50)) goto code_r0x0047e70a;\n                        arg3 = *(*0x20 + -0x60);\n                        unaff_RDI = arg3 * 0x10;\n                        iVar10 = *(*0x20 + -0x28);\n                        *(iVar10 + unaff_RDI) = iVar5 - (*0x7adcb0)[*(*0x20 + -0x50) * 4 + 2];\n                        *(iVar10 + 8 + unaff_RDI) = *(*0x20 + -0x75);\n                        uVar13 = *0x7adcd0;\n                        if (*0x7adcd0 <= arg3 + 1) goto code_r0x0047e705;\n                        *(*0x20 + -0x28) = *0x7adcc8;\n                        *(*0x20 + -0x40) = arg3 + 1;\n                        *(*0x20 + -0x98) = 0x47e6c5;\n                        iVar5 = fcn.0047e040();\n                        uVar13 = *(*0x20 + -0x48);\n                        puVar2 = *0x7adcb0;\n                        if (*0x7adcb8 <= uVar13) break;\ncode_r0x0047e5b9:\n                        iVar10 = *(*0x20 + -0x40);\n                        iVar12 = *(*0x20 + -0x28);\n                        *(iVar12 + iVar10 * 0x10) = iVar5 - puVar2[uVar13 * 4 + 2];\n                        *(iVar12 + 8 + iVar10 * 0x10) = *(*0x20 + -0x76);\n                        unaff_RDI = *(*0x20 + -0x68) + 1;\n                        uVar8 = *(*0x20 + -0x60) + 2;\n                        iVar5 = *(*0x20 + -0x70);\n                        uVar9 = *(*0x20 + -0x75);\n                        arg3 = *(*0x20 + -0x50);\n                        in_R9 = uVar13;\n                    }\n                    *(*0x20 + -0x98) = 0x47e705;\n                    uVar13 = *0x7adcb8;\n                    fcn.0045e240(*0x7adcb8);\ncode_r0x0047e705:\n                    *(*0x20 + -0x98) = 0x47e70a;\n                    fcn.0045e240(uVar13);\ncode_r0x0047e70a:\n                    *(*0x20 + -0x98) = 0x47e712;\n                    fcn.0045e240(uVar13);\ncode_r0x0047e712:\n                    *(*0x20 + -0x98) = 0x47e71d;\n                    fcn.0045e240(arg1_00);\n                }\n                *(*0x20 + -0x98) = 0x47e72a;\n                fcn.0045e240(arg3);\n            }\n            arg1 = 0;\n            *(*0x20 + -0x98) = 0x47e734;\n            in_RAX = fcn.0045e240(0);\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + -8) = 0x47e73f;\n        fcn.0045bb60();\n        in_RAX = *(puVar11 + 8);\n        *0x20 = puVar11;\n    } while( true );\n}\n",
        "token_count": 3165
    },
    "0047efa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0047efa0(void)\n\n{\n    int16_t *in_RAX;\n    ulong uVar1;\n    int64_t arg1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (in_RAX != NULL) {\n        arg1 = 0;\n        for (; *in_RAX != 0; in_RAX = in_RAX + 1) {\n            arg1 = arg1 + 1;\n        }\n        fcn.00469580(arg1);\n        uVar1 = fcn.0044b660(arg1);\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 182
    },
    "004805a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint64_t fcn.004805a0(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    ulong uVar4;\n    ulong uVar5;\n    int16_t *piVar6;\n    uint64_t arg1;\n    int16_t *noname_0;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uchar auStack56 [16];\n    uint64_t uStack40;\n    uint64_t uStack24;\n    uchar auStack32 [16];\n    \n    while (auStack56 < *(unaff_R14 + 0x10) || auStack56 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    uStack40 = 0;\n    if ((in_RAX != 0) && (*(in_RAX + 0x20) != 0)) {\n        iVar2 = fcn.0047f280(0);\n        if (iVar2 != 0) {\n            return 0;\n        }\n        auStack56 = ZEXT816(0x4808c0);\n        noname_0 = NULL;\n        auStack32 = in_XMM15;\n        while( true ) {\n            for (piVar6 = noname_0; *piVar6 != 0; piVar6 = piVar6 + 1) {\n            }\n            uVar3 = piVar6 - noname_0 >> 1;\n            if (uVar3 == 0) break;\n            if (0x3fffffff < uVar3) {\n                fcn.0045e360(noname_0, uVar3);\n                fcn.004328a0();\n                return uStack40;\n            }\n            uVar4 = fcn.00469580(uVar3);\n            uVar5 = fcn.0044b660(uVar3);\n            uVar1 = uStack40;\n            arg1 = SUB168(auStack32, 0);\n            uVar7 = arg1;\n            if (uStack24 < arg1 + 1) {\n                uStack40 = fcn.00447360(arg1);\n                uVar3 = arg1;\n                uVar7 = uVar1;\n                uStack24 = arg1;\n            }\n            auStack32 = CONCAT88(uStack24, uVar7 + 1);\n            *(uStack40 + 8 + uVar7 * 0x10) = uVar4;\n            piVar6 = noname_0 + (piVar6 - noname_0 & 0xfffffffffffffffeU) + 2;\n            if (*0x801c20 == 0) {\n                *(uStack40 + uVar7 * 0x10) = uVar5;\n                noname_0 = piVar6;\n            }\n            else {\n                fcn.0045dda0(uVar3, uStack40, piVar6, noname_0);\n                noname_0 = piVar6;\n            }\n        }\n        (*auStack56._0_8_)();\n        return uStack40;\n    }\n    uVar3 = fcn.0046a760();\n    return uVar3;\n}\n",
        "token_count": 743
    },
    "004814c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.004814c0(void)\n\n{\n    uint64_t uVar1;\n    uint64_t *in_RAX;\n    uint64_t uVar2;\n    uint64_t *puVar3;\n    uint64_t uVar4;\n    char unaff_BL;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_BL == '\\0') {\n                puVar3 = in_RAX + 0xc;\n                uVar4 = 4;\n                uVar5 = 0x7ffff80000000000;\n                iVar7 = 0x80000000000;\n            }\n            else {\n                puVar3 = in_RAX + 1;\n                uVar4 = 2;\n                uVar5 = 0x7ffff800000;\n                iVar7 = 0x800000;\n            }\n            while ((uVar1 = *in_RAX,  (uVar1 & uVar4) != 0 && ((uVar1 & 0x7ffff8) != 0))) {\n                uVar8 = ~uVar4 & uVar1;\n                if ((uVar1 & uVar5) != 0) {\n                    uVar8 = (~uVar4 & uVar1) - iVar7;\n                }\n                uVar8 = uVar8 - 8;\n                LOCK();\n                bVar9 = uVar1 == *in_RAX;\n                *in_RAX = *in_RAX ^ bVar9 * (*in_RAX ^ uVar8);\n                uVar2 = uVar1 ^ !bVar9 * (uVar1 ^ *in_RAX);\n                if (bVar9) {\n                    if ((uVar1 & uVar5) != 0) {\n                        *(*0x20 + -0x10) = uVar8;\n                        *(*0x20 + -0x28) = 0x481572;\n                        uVar2 = fcn.00459d40();\n                        uVar8 = *(*0x20 + -0x10);\n                    }\n                    return uVar2 & 0xffffffffffffff00 | (uVar8 & 0x7ffff9) == 1;\n                }\n            }\n            unaff_BL = -8;\n            *(*0x20 + -0x28) = 0x4815a5;\n            in_RAX = fcn.004334e0(puVar3);\n        }\n        *(puVar6 + 8) = in_RAX;\n        puVar6[0x10] = unaff_BL;\n        *(puVar6 + -8) = 0x4815b4;\n        fcn.0045bb60();\n        in_RAX = *(puVar6 + 8);\n        unaff_BL = puVar6[0x10];\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 753
    },
    "004815e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.004815e0(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    ulong uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            while (uVar1 = *in_RAX,  (uVar1 & 0x7ffff8) != 0) {\n                LOCK();\n                uVar2 = *in_RAX;\n                *in_RAX = *in_RAX ^ (uVar1 == uVar2) * (*in_RAX ^ uVar1 - 8);\n                if (uVar1 == uVar2) {\n                    if ((uVar1 - 8 & 0x7ffff9) != 1) {\n                        return 0;\n                    }\n                    *(*0x20 + -0x20) = 0x481633;\n                    uVar3 = fcn.00482720();\n                    return uVar3;\n                }\n            }\n            *(*0x20 + -0x20) = 0x48165e;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x481669;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 421
    },
    "00481ca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00481ca0(void)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    char cVar4;\n    int64_t in_RAX;\n    int64_t iVar5;\n    int64_t *piVar6;\n    ulong *puVar7;\n    ulong unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar5 = *(in_RAX + 0x38);\n            if (*(iVar5 + 0x1b8) == 0) {\n                *(*0x20 + -0x58) = 0x481f85;\n                puVar7 = fcn.0040c560();\n                puVar7[1] = 0x36;\n                *puVar7 = 0x4b7717;\n                return 0;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = iVar5;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x18) = iVar5 + 0x1b8;\n            iVar2 = *(in_RAX + 0x28);\n            uVar1 = *(iVar5 + 0x21f);\n            *(*0x20 + -0x58) = 0x481cf8;\n            iVar5 = fcn.00481820(uVar1);\n            if (iVar5 != 0) {\n                return 0;\n            }\n            pcVar3 = **(*0x20 + 0x10);\n            *(*0x20 + -0x58) = 0x481d18;\n            iVar5 = (*pcVar3)();\n            if (iVar5 == 0) {\n                iVar5 = *(*0x20 + 8);\n                if (*(*(iVar5 + 0x38) + 0x21c) != '\\0') {\n                    return *(iVar5 + 0x30);\n                }\n            }\n            else {\n                if (((iVar5 == 0) || (*(iVar5 + 8) != 0x4a26e0)) || (*iVar2 != 0x3e5)) {\n                    return 0;\n                }\n                iVar5 = *(*0x20 + 8);\n            }\n            iVar2 = *(iVar5 + 0x28);\n            uVar1 = *(*(*0x20 + -0x10) + 0x21f);\n            *(*0x20 + -0x58) = 0x481d85;\n            iVar5 = fcn.00481960(uVar1);\n            if (iVar5 == 0) {\n                if (*(*(*0x20 + 8) + 0x2c) == 0) {\n                    return *(*(*0x20 + 8) + 0x30);\n                }\n                *(*0x20 + -0x58) = 0x481ee6;\n                piVar6 = fcn.00409d60();\n                if (((*0x732d00 != 0x4a26e0) || (*piVar6 != 0xea)) && ((*0x732d00 != 0x4a26e0 || (*piVar6 != 0x2738))))\n                {\n                    return 0;\n                }\n                return *(*(*0x20 + 8) + 0x30);\n            }\n            *(*0x20 + -0x20) = iVar2;\n            *(*0x20 + -0x28) = iVar5;\n            if ((iVar5 != 0) && (*(iVar5 + 8) == 0x4a2da0)) goto code_r0x00481dfa;\n            if (*0x7ad6e0 == iVar5) {\n                *(*0x20 + -0x58) = 0x481dbc;\n                cVar4 = fcn.00403360(*0x7ad6e8);\n                if (cVar4 != '\\0') {\ncode_r0x00481dfa:\n                    piVar6 = *(*0x20 + 8);\n                    *(*0x20 + -0x58) = 0x481e0d;\n                    iVar5 = fcn.0046dde0();\n                    if ((iVar5 != 0) && (((iVar5 == 0 || (*(iVar5 + 8) != 0x4a26e0)) || (*piVar6 != 0x490)))) {\n                        do {\n                            *(*0x20 + -0x58) = 0x481fbb;\n                            fcn.004334e0();\n                        } while( true );\n                    }\n                    iVar5 = *(*0x20 + 8);\n                    if (*(*(*0x20 + -0x10) + 0x1b8) != 0) {\n                        *(*0x20 + -0x58) = 0x481e5e;\n                        fcn.00459380();\n                        iVar5 = *(*0x20 + 8);\n                    }\n                    if (*(iVar5 + 0x2c) == 0) {\n                        return *(iVar5 + 0x30);\n                    }\n                    *(*0x20 + -0x58) = 0x481e79;\n                    fcn.00409d60();\n                    return 0;\n                }\n                iVar5 = *(*0x20 + -0x28);\n            }\n            if (*0x7a6550 == iVar5) {\n                *(*0x20 + -0x58) = 0x481df2;\n                cVar4 = fcn.00403360(*0x7a6558);\n                if (cVar4 != '\\0') goto code_r0x00481dfa;\n            }\n            pcVar3 = *(*(*0x20 + -0x28) + 0x18);\n            *(*0x20 + -0x58) = 0x481fd2;\n            (*pcVar3)();\n            *(*0x20 + -0x58) = 0x481feb;\n            fcn.0044ae80(0x22);\n            *(*0x20 + -0x58) = 0x481ff0;\n            unaff_RBX = fcn.00409de0();\n            *(*0x20 + -0x58) = 0x481fff;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x48200f;\n        fcn.0045bb60();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1597
    },
    "00482840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00482840(void)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    cVar1 = fcn.00481240();\n    if (cVar1 == '\\0') {\n        uVar2 = *0x7ad6e0;\n        if (*(in_RAX + 0x21f) == '\\0') {\n            uVar2 = 0x732c78;\n        }\n        return uVar2;\n    }\n    if (*(in_RAX + 0x220) == '\\x04') {\n        fcn.0046dde0(*(in_RAX + 0x10));\n    }\n    if (*(in_RAX + 0x1b8) != 0) {\n        fcn.004593e0();\n    }\n    uVar2 = fcn.004815e0();\n    fcn.00459c20(in_RAX + 0x218);\n    return uVar2;\n}\n",
        "token_count": 270
    },
    "004829a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004829a0(int64_t *arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    bool bVar4;\n    uchar in_XMM15 [16];\n    uchar auStack56 [16];\n    uchar auStack40 [16];\n    code **ppcStack24;\n    code **ppcStack16;\n    \n    while (ppcStack24 = SUB168(in_XMM15, 0), \n          &stack0xfffffffffffffff8 < *(unaff_R14 + 0x10) || &stack0xfffffffffffffff8 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    cVar1 = fcn.00481360();\n    if (cVar1 == '\\0') {\n        iVar3 = *0x7ad6e0;\n        if (*(in_RAX + 0x21f) == '\\0') {\n            iVar3 = 0x732c78;\n        }\n    }\n    else {\n        iVar3 = 0;\n    }\n    if (iVar3 == 0) {\n        auStack40 = CONCAT88(in_RAX, 0x482da0);\n        ppcStack16 = auStack40;\n        if (0x40000000 < arg1) {\n            arg1 = 0x40000000;\n        }\n        if (*(in_RAX + 0x21f) == '\\0') {\n            *(in_RAX + 0x58) = arg1;\n            iVar3 = in_RAX + 0x60;\n            if (*0x801c20 == 0) {\n                *(in_RAX + 0x60) = 0;\n            }\n            else {\n                in_RAX = fcn.0045df00(iVar3, arg1, in_R8, in_R9);\n            }\n            if (arg1 != NULL) {\n                if (*0x801c20 == 0) {\n                    *(in_RAX + 0x60) = unaff_RBX;\n                }\n                else {\n                    fcn.0045df00(iVar3, arg1, in_R8, in_R9);\n                }\n            }\n            uVar2 = fcn.00481ca0();\n            bVar4 = false;\n        }\n        else {\n            LOCK();\n            bVar4 = *(in_RAX + 0x1c0) == 0;\n            if (bVar4) {\n                *(in_RAX + 0x1c0) = 1;\n            }\n            if (!bVar4) {\n                fcn.00463d60();\n            }\n            auStack56 = CONCAT88(in_RAX + 0x1c0, 0x482d40);\n            ppcStack24 = auStack56;\n            if (*(in_RAX + 0x220) == '\\x02') {\n                uVar2 = fcn.00482e00(arg1);\n            }\n            else {\n                uVar2 = fcn.0046d1e0(arg1, arg1);\n                if ((((*(in_RAX + 0x220) == '\\x04') && (unaff_RBX != 0)) && (*(unaff_RBX + 8) == 0x4a26e0)) &&\n                   (*arg1 == 0x3e3)) {\n                    unaff_RBX = *0x7ad6e0;\n                }\n            }\n            if (unaff_RBX != 0) {\n                uVar2 = 0;\n            }\n            bVar4 = true;\n        }\n        if (bVar4) {\n            (**ppcStack24)();\n        }\n        (**ppcStack16)();\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 853
    },
    "00482e00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00482e00(code **arg1)\n\n{\n    uint16_t uVar1;\n    code **ppcVar2;\n    code **in_RAX;\n    ulong uVar3;\n    code *pcVar4;\n    int64_t iVar5;\n    code *pcVar6;\n    code *pcVar7;\n    ulong arg1_00;\n    code *arg1_01;\n    code *pcVar8;\n    code *unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    code **unaff_RDI;\n    uint32_t *in_R8;\n    code **in_R9;\n    uint32_t uVar10;\n    int64_t unaff_R14;\n    \n    while (puVar9 = *0x20,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\ncode_r0x004832a6:\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        *(puVar9 + 0x18) = arg1;\n        *(puVar9 + 0x20) = unaff_RDI;\n        *(puVar9 + -8) = 0x4832bf;\n        fcn.0045bb60();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        arg1 = *(puVar9 + 0x18);\n        unaff_RDI = *(puVar9 + 0x20);\n        *0x20 = puVar9;\n    }\n    puVar9 = *0x20 + -0x70;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    *(*0x20 + 0x10) = unaff_RBX;\n    if (arg1 == NULL) {\n        return 0;\n    }\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + 0x18) = arg1;\n    *(*0x20 + 0x10) = unaff_RBX;\n    if (in_RAX[0x3c] == NULL) {\n        arg1_00 = 10000;\n        *(*0x20 + -0x78) = 0x482e5f;\n        uVar3 = fcn.00447240(10000);\n        iVar5 = *(*0x20 + 8);\n        *(iVar5 + 0x1e8) = 0;\n        *(iVar5 + 0x1f0) = 10000;\n        if (*0x801c20 == 0) {\n            *(iVar5 + 0x1e0) = uVar3;\n        }\n        else {\n            *(*0x20 + -0x78) = 0x482e9b;\n            fcn.0045dda0(arg1_00, iVar5 + 0x1e0, in_R8, in_R9);\n        }\n        *(*0x20 + -0x78) = 0x482eae;\n        pcVar4 = fcn.00447240(40000);\n        in_RAX = *(*0x20 + 8);\n        in_RAX[0x40] = NULL;\n        in_RAX[0x41] = 0x9c40;\n        if (*0x801c20 == 0) {\n            in_RAX[0x3f] = pcVar4;\n        }\n        else {\n            *(*0x20 + -0x78) = 0x482eed;\n            fcn.0045dda0(in_RAX, in_RAX + 0x3f, in_R8, in_R9);\n        }\n        arg1 = *(*0x20 + 0x18);\n        unaff_RBX = *(*0x20 + 0x10);\n    }\ncode_r0x00482f28:\n    if (in_RAX[0x40] != in_RAX[0x42] && in_RAX[0x42] <= in_RAX[0x40]) goto code_r0x004830c4;\n    *(*0x20 + -0x40) = in_RAX[0x3e] - in_RAX[0x3d];\n    *(*0x20 + -0x78) = 0x482f5b;\n    uVar3 = fcn.0040c560();\n    iVar5 = *(*0x20 + -0x40);\n    if (*(*0x20 + 0x18) < *(*0x20 + -0x40)) {\n        iVar5 = *(*0x20 + 0x18);\n    }\n    unaff_RBX = *(*0x20 + 8);\n    ppcVar2 = *(unaff_RBX + 0x1e8);\n    unaff_RDI = *(unaff_RBX + 0x1f0);\n    in_R8 = *(unaff_RBX + 0x1e0);\n    arg1 = ppcVar2 + 1;\n    if (arg1 <= unaff_RDI) {\n        if (ppcVar2 < arg1) {\n            *(*0x20 + -0x10) = uVar3;\n            pcVar4 = **0x7a5dd0;\n            unaff_RBX = in_R8 + ppcVar2 * 2;\n            *(*0x20 + -0x78) = 0x482fcd;\n            arg1 = *0x7a5dd0;\n            iVar5 = (*pcVar4)(iVar5, *0x7a5dd0);\n            if (iVar5 != 0) {\n                return 0;\n            }\n            in_RAX = *(*0x20 + 8);\n            pcVar8 = in_RAX[0x3c];\n            arg1_01 = in_RAX[0x3e];\n            in_R8 = *(*0x20 + -0x10);\n            pcVar4 = in_RAX[0x3d] + *in_R8;\n            if (pcVar4 <= arg1_01) {\n                *(*0x20 + -0x48) = pcVar4;\n                *(*0x20 + -0x20) = pcVar8;\n                in_RAX[0x3d] = NULL;\n                unaff_RBX = in_RAX[0x41];\n                *(*0x20 + -0x28) = unaff_RBX;\n                arg1 = in_RAX[0x3f];\n                *(*0x20 + -0x18) = arg1;\n                pcVar6 = NULL;\n                arg1_01 = NULL;\n                do {\n                    if (pcVar6 < pcVar4) {\n                        if (pcVar6 < pcVar4) {\n                            uVar1 = *(pcVar8 + pcVar6 * 2);\n                            uVar10 = uVar1;\n                            pcVar7 = pcVar6;\n                            if (uVar10 - 0xd800 < 0x800) {\n                                pcVar7 = pcVar6 + 1;\n                                if (pcVar4 != pcVar7) {\n                                    if (pcVar7 < pcVar4) {\n                                        if ((uVar10 < 0xdc00) && (*(pcVar8 + pcVar6 * 2 + 2) - 0xdc00 < 0x400)) {\n                                            uVar10 = ((uVar10 - 0xd800) * 0x400 | *(pcVar8 + pcVar6 * 2 + 2) - 0xdc00) +\n                                                     0x10000;\n                                        }\n                                        else {\n                                            uVar10 = 0xfffd;\n                                        }\n                                        if (uVar10 == 0xfffd) {\n                                            pcVar7 = pcVar6;\n                                        }\n                                        goto code_r0x00483201;\n                                    }\n                                    goto code_r0x0048326a;\n                                }\n                                if (*in_R8 == 0) {\n                                    uVar10 = 0xfffd;\n                                    pcVar7 = pcVar6;\n                                    goto code_r0x00483201;\n                                }\n                                if (in_RAX[0x3e] != NULL) {\n                                    in_RAX[0x3d] = 0x1;\n                                    *in_RAX[0x3c] = uVar1;\n                                    goto code_r0x00483063;\n                                }\n                            }\n                            else {\ncode_r0x00483201:\n                                *(*0x20 + -0x30) = arg1_01;\n                                *(*0x20 + -0x38) = pcVar7;\n                                pcVar8 = unaff_RBX + -arg1_01;\n                                in_R8 = (-pcVar8 >> 0x3f & arg1_01) + arg1;\n                                in_RAX = uVar10;\n                                *(*0x20 + -0x78) = 0x483233;\n                                iVar5 = fcn.00465080();\n                                pcVar4 = iVar5 + *(*0x20 + -0x30);\n                                unaff_RBX = *(*0x20 + -0x28);\n                                arg1_01 = pcVar4;\n                                if (pcVar4 <= unaff_RBX) goto code_r0x00483147;\n                                *(*0x20 + -0x78) = 0x48326a;\n                                fcn.0045e2c0(pcVar4, unaff_RBX);\n                                unaff_RBX = pcVar8;\ncode_r0x0048326a:\n                                *(*0x20 + -0x78) = 0x483272;\n                                fcn.0045e240(pcVar4);\n                            }\n                            pcVar4 = 0x1;\n                            arg1_01 = NULL;\n                            *(*0x20 + -0x78) = 0x48327e;\n                            fcn.0045e2c0(1, 0);\n                        }\n                        *(*0x20 + -0x78) = 0x483285;\n                        fcn.0045e240(pcVar4);\n                        break;\n                    }\ncode_r0x00483063:\n                    in_RAX[0x40] = arg1_01;\n                    in_RAX[0x41] = unaff_RBX;\n                    if (*0x801c20 == 0) {\n                        in_RAX[0x3f] = arg1;\n                    }\n                    else {\n                        *(*0x20 + -0x78) = 0x483095;\n                        in_RAX = fcn.0045df40(pcVar4, in_RAX + 0x3f, in_R8);\n                    }\n                    in_RAX[0x42] = NULL;\n                    if (*in_R8 != 0) goto code_r0x00482f15;\n                    arg1 = *(*0x20 + 0x18);\n                    unaff_RBX = *(*0x20 + 0x10);\ncode_r0x004830c4:\n                    arg1_01 = in_RAX[0x40];\n                    pcVar4 = in_RAX[0x3f];\n                    pcVar8 = in_RAX[0x41];\n                    pcVar6 = in_RAX[0x42];\n                    if (pcVar6 <= arg1_01) {\n                        iVar5 = 0;\n                        goto code_r0x00483103;\n                    }\n                    *(*0x20 + -0x78) = 0x483147;\n                    unaff_RBX = arg1_01;\n                    fcn.0045e300(arg1_01);\ncode_r0x00483147:\n                    pcVar6 = *(*0x20 + -0x38) + 1;\n                    in_R8 = *(*0x20 + -0x10);\n                    arg1 = *(*0x20 + -0x18);\n                    pcVar4 = *(*0x20 + -0x48);\n                    pcVar8 = *(*0x20 + -0x20);\n                    in_RAX = *(*0x20 + 8);\n                } while( true );\n            }\n            *(*0x20 + -0x78) = 0x48328a;\n            fcn.0045e2c0(pcVar4, arg1_01);\n            unaff_RDI = in_RAX;\n        }\n        *(*0x20 + -0x78) = 0x483295;\n        fcn.0045e240(arg1);\n    }\n    *(*0x20 + -0x78) = 0x4832a5;\n    in_R9 = arg1;\n    in_RAX = fcn.0045e2c0(arg1, unaff_RDI);\n    goto code_r0x004832a6;\ncode_r0x00482f15:\n    arg1 = *(*0x20 + 0x18);\n    unaff_RBX = *(*0x20 + 0x10);\n    goto code_r0x00482f28;\ncode_r0x00483103:\n    if ((arg1_01 - pcVar6 <= iVar5) || (arg1 <= iVar5)) goto code_r0x00483124;\n    if (pcVar4[iVar5 + (pcVar6 - pcVar8 >> 0x3f & pcVar6)] == 0x1a) {\n        if (iVar5 == 0) {\n            in_RAX[0x42] = in_RAX[0x42] + 1;\n        }\ncode_r0x00483124:\n        in_RAX[0x42] = in_RAX[0x42] + iVar5;\n        return iVar5;\n    }\n    unaff_RBX[iVar5] = pcVar4[iVar5 + (pcVar6 - pcVar8 >> 0x3f & pcVar6)];\n    iVar5 = iVar5 + 1;\n    goto code_r0x00483103;\n}\n",
        "token_count": 3057
    },
    "00483340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00483340(int64_t *arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int64_t *piVar2;\n    int64_t *arg3;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    int64_t iVar4;\n    int64_t unaff_RDI;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    bool bVar7;\n    uchar in_XMM15 [16];\n    uchar auStack56 [16];\n    uchar auStack40 [16];\n    code **ppcStack24;\n    code **ppcStack16;\n    \n    while (ppcStack24 = SUB168(in_XMM15, 0), \n          auStack40 + 8 < *(unaff_R14 + 0x10) || auStack40 + 8 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    cVar1 = fcn.00481360();\n    if (cVar1 == '\\0') {\n        iVar6 = *0x7ad6e0;\n        if (*(in_RAX + 0x21f) == '\\0') {\n            iVar6 = 0x732c78;\n        }\n    }\n    else {\n        iVar6 = 0;\n    }\n    if (iVar6 == 0) {\n        auStack40 = CONCAT88(in_RAX, 0x483840);\n        ppcStack16 = auStack40;\n        if (*(in_RAX + 0x21f) == '\\0') {\n            bVar7 = false;\n        }\n        else {\n            LOCK();\n            bVar7 = *(in_RAX + 0x1c0) == 0;\n            if (bVar7) {\n                *(in_RAX + 0x1c0) = 1;\n            }\n            if (!bVar7) {\n                fcn.00463d60();\n            }\n            auStack56 = CONCAT88(in_RAX + 0x1c0, 0x4837e0);\n            ppcStack24 = auStack56;\n            bVar7 = true;\n        }\n        iVar6 = 0;\n        while( true ) {\n            if (arg1 == NULL) {\n                if (bVar7) {\n                    (**ppcStack24)();\n                }\n                (**ppcStack16)();\n                return iVar6;\n            }\n            arg3 = arg1;\n            if (0x40000000 < arg1) {\n                arg3 = 0x40000000;\n            }\n            if (*(in_RAX + 0x21f) == '\\0') {\n                *(in_RAX + 0x128) = arg3;\n                iVar4 = in_RAX + 0x130;\n                piVar2 = arg1;\n                iVar3 = unaff_RBX;\n                iVar5 = in_RAX;\n                if (*0x801c20 == 0) {\n                    *(in_RAX + 0x130) = 0;\n                }\n                else {\n                    fcn.0045dea0(0, unaff_RBX, arg3, iVar4);\n                }\n                if (arg3 != NULL) {\n                    if (*0x801c20 == 0) {\n                        *(iVar5 + 0x130) = iVar3;\n                    }\n                    else {\n                        fcn.0045dec0(piVar2, iVar3, iVar5, iVar4);\n                    }\n                }\n                iVar4 = 0x719460;\n                piVar2 = fcn.00481ca0();\n            }\n            else {\n                iVar4 = unaff_RBX;\n                if (*(in_RAX + 0x220) == '\\x02') {\n                    piVar2 = fcn.004838a0(arg3);\n                }\n                else {\n                    piVar2 = fcn.0046d2a0(arg3, unaff_RBX);\n                    if ((((*(in_RAX + 0x220) == '\\x04') && (unaff_RBX != 0)) && (*(unaff_RBX + 8) == 0x4a26e0)) &&\n                       (*arg3 == 0x3e3)) {\n                        iVar4 = *0x7ad6e0;\n                    }\n                }\n                if (iVar4 != 0) {\n                    piVar2 = NULL;\n                }\n            }\n            iVar6 = iVar6 + piVar2;\n            if (iVar4 != 0) break;\n            if (arg1 < piVar2) {\n                fcn.0045e300(arg1);\n                fcn.004328a0();\n                return 0;\n            }\n            unaff_RDI = unaff_RDI - piVar2;\n            arg1 = arg1 - piVar2;\n            unaff_RBX = unaff_RBX + (piVar2 & -unaff_RDI >> 0x3f);\n        }\n        if (bVar7) {\n            (**ppcStack24)();\n        }\n        (**ppcStack16)();\n        return iVar6;\n    }\n    return 0;\n}\n",
        "token_count": 1114
    },
    "004838a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nuint8_t * fcn.004838a0(uint8_t *arg1)\n\n{\n    int64_t iVar1;\n    uint64_t arg1_00;\n    uint uVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    uchar *arg4;\n    ulong uVar5;\n    uint64_t uVar6;\n    uint8_t *arg1_01;\n    uint8_t *unaff_RBX;\n    uchar *puVar7;\n    ulong unaff_RBP;\n    uint8_t *puVar8;\n    uint8_t *unaff_RDI;\n    uint8_t *puVar9;\n    uint8_t *puVar10;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x004838a0:\n    puVar7 = *0x20;\n    puVar9 = unaff_RDI;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x448 && *0x20 + -0x448 != *(unaff_R14 + 0x10)) {\n        puVar7 = *0x20 + -0x4c8;\n        *(*0x20 + -8) = unaff_RBP;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + -0x4d8) = *0x20 + -8;\n        *(*0x20 + -0x4d0) = 0x4838fb;\n        iVar3 = fcn.0045e3a0();\n        unaff_RBP = *(*0x20 + -0x4d8);\n        puVar9 = *(iVar3 + 0x1d0);\n        puVar10 = *(iVar3 + 0x1d8);\n        uVar4 = *(iVar3 + 0x1c8);\n        *(*0x20 + -0x10) = iVar3 + 0x1c8;\n        puVar8 = arg1;\n        if (puVar9 != NULL) {\n            *(*0x20 + -0x438) = puVar9 + arg1;\n            puVar8 = puVar9;\n            if (puVar10 < puVar9 + arg1) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x440) = puVar9;\n                *(*0x20 + -0x4d0) = 0x48395f;\n                uVar4 = fcn.00447360(puVar9);\n                puVar8 = *(*0x20 + -0x440);\n                arg1 = *(*0x20 + 0x18);\n                puVar10 = puVar9;\n            }\n            *(*0x20 + -0x440) = puVar10;\n            *(*0x20 + -0x18) = uVar4;\n            *(*0x20 + -0x4d0) = 0x483996;\n            fcn.0045ebc0(arg1);\n            iVar3 = *(*0x20 + 8);\n            *(iVar3 + 0x1d0) = in_XMM15;\n            if (*0x801c20 == 0) {\n                *(iVar3 + 0x1c8) = 0;\n            }\n            else {\n                *(*0x20 + -0x4d0) = 0x4839d5;\n                fcn.0045dea0(0, iVar3, puVar8, uVar4);\n            }\n            arg1 = *(*0x20 + -0x438);\n            unaff_RDI = *(*0x20 + -0x440);\n            unaff_RBX = *(*0x20 + -0x18);\n            puVar8 = *(*0x20 + 0x18);\n        }\n        puVar9 = 0x100;\n        puVar10 = NULL;\n        arg4 = *0x20 + -0x430;\n        do {\n            *(*0x20 + -0x468) = puVar9;\n            *(*0x20 + -0x470) = puVar10;\n            *(*0x20 + -0x28) = arg4;\n            *(*0x20 + -0x460) = arg1;\n            *(*0x20 + -0x20) = unaff_RBX;\n            if (arg1 < 4) {\n                if (arg1 == NULL) {\ncode_r0x00483bcb:\n                    if (arg1 != NULL) {\n                        *(*0x20 + -0x4d0) = 0x483be5;\n                        uVar5 = fcn.00447240(arg1);\n                        uVar4 = *(*0x20 + -0x460);\n                        iVar3 = *(*0x20 + 8);\n                        *(iVar3 + 0x1d0) = uVar4;\n                        *(iVar3 + 0x1d8) = uVar4;\n                        if (*0x801c20 == 0) {\n                            *(iVar3 + 0x1c8) = uVar5;\n                        }\n                        else {\n                            *(*0x20 + -0x4d0) = 0x483c1f;\n                            fcn.0045dda0(uVar4, iVar3, puVar10, arg4);\n                        }\n                        unaff_RBX = *(*0x20 + -0x20);\n                        if (unaff_RBX != *(iVar3 + 0x1c8)) {\n                            *(*0x20 + -0x4d0) = 0x483c38;\n                            fcn.0045ebc0(uVar4);\n                        }\n                        puVar8 = *(*0x20 + 0x18);\n                        puVar9 = *(*0x20 + -0x468);\n                        puVar10 = *(*0x20 + -0x470);\n                        arg4 = *(*0x20 + -0x28);\n                    }\n                    goto code_r0x00483c80;\n                }\n                if (arg1 < (*(*unaff_RBX + 0x7994a0) & 7)) {\n                    iVar3 = (*(*unaff_RBX + 0x7994a0) >> 4) * 2;\n                    if ((arg1 < 2) ||\n                       (((*(iVar3 + 0x796120) <= unaff_RBX[1] && (unaff_RBX[1] <= *(iVar3 + 0x796121))) &&\n                        ((arg1 < 3 || ((0x7f < unaff_RBX[2] && (unaff_RBX[2] < 0xc0)))))))) goto code_r0x00483bcb;\n                }\n            }\n            *(*0x20 + -0x458) = unaff_RDI;\n            *(*0x20 + -0x4d0) = 0x483b2e;\n            uVar2 = fcn.00464be0(unaff_RDI);\n            puVar9 = *(*0x20 + -0x470);\n            puVar10 = puVar9 + 1;\n            if (*(*0x20 + -0x468) < puVar10) {\n                *(*0x20 + -0x484) = uVar2;\n                *(*0x20 + -0x448) = arg1;\n                iVar3 = *(*0x20 + -0x28);\n                *(*0x20 + -0x4d0) = 0x483b75;\n                arg4 = fcn.00447360(puVar9);\n                puVar10 = iVar3 + 1;\n                unaff_RBX = *(*0x20 + -0x448);\n                puVar8 = *(*0x20 + -0x470);\n                uVar2 = *(*0x20 + -0x484);\n            }\n            else {\n                arg4 = *(*0x20 + -0x28);\n                unaff_RBX = arg1;\n                puVar8 = puVar9;\n                puVar9 = *(*0x20 + -0x468);\n            }\n            *(arg4 + puVar8 * 4) = uVar2;\n            arg1 = *(*0x20 + -0x460);\n            if (arg1 < unaff_RBX) goto code_r0x00483dfe;\n            unaff_RDI = *(*0x20 + -0x458) - unaff_RBX;\n            arg1 = arg1 + -unaff_RBX;\n            unaff_RBX = (unaff_RBX & -unaff_RDI >> 0x3f) + *(*0x20 + -0x20);\n            puVar8 = *(*0x20 + 0x18);\n        } while( true );\n    }\n    goto code_r0x00483e0a;\ncode_r0x00483c80:\n    if (puVar10 == NULL) {\n        return puVar8;\n    }\n    arg1_01 = puVar10;\n    if (16000 < puVar10) {\n        arg1_01 = 0x3e80;\n    }\n    if (puVar9 < arg1_01) goto code_r0x00483df6;\n    if (puVar10 < arg1_01) goto code_r0x00483deb;\n    *(*0x20 + -0x470) = puVar10;\n    *(*0x20 + -0x28) = arg4;\n    *(*0x20 + -0x468) = puVar9;\n    *(*0x20 + -0x450) = arg1_01;\n    *(*0x20 + -0x4d0) = 0x483cd7;\n    unaff_RBX = fcn.004693e0(puVar9);\n    iVar3 = *(*0x20 + -0x468);\n    iVar1 = *(*0x20 + -0x450);\n    *(*0x20 + -0x468) = iVar3 - iVar1;\n    puVar10 = *(*0x20 + -0x470) - iVar1;\n    *(*0x20 + -0x470) = puVar10;\n    arg4 = *(*0x20 + -0x28) + (iVar1 << 2 & -(iVar3 - iVar1) >> 0x3f);\n    *(*0x20 + -0x28) = arg4;\n    while (arg1_01 != NULL) {\n        *(*0x20 + -0x480) = arg1_01;\n        *(*0x20 + -0x30) = unaff_RBX;\n        *(*0x20 + -0x478) = puVar9;\n        *(*0x20 + -0x488) = 0;\n        puVar10 = *(*(*0x20 + 8) + 0x10);\n        puVar9 = *0x20 + -0x488;\n        puVar8 = NULL;\n        *(*0x20 + -0x4d0) = 0x483db5;\n        iVar3 = fcn.0046fe00(arg1_01);\n        if (iVar3 != 0) {\n            return NULL;\n        }\n        uVar6 = *(*0x20 + -0x488);\n        arg1_00 = *(*0x20 + -0x480);\n        if (arg1_00 < uVar6) {\n            *(*0x20 + -0x4d0) = 0x483deb;\n            fcn.0045e300(arg1_00);\n            goto code_r0x00483deb;\n        }\n        puVar9 = *(*0x20 + -0x478) - uVar6;\n        unaff_RBX = (uVar6 << 1 & -puVar9 >> 0x3f) + *(*0x20 + -0x30);\n        arg4 = *(*0x20 + -0x28);\n        puVar10 = *(*0x20 + -0x470);\n        arg1_01 = arg1_00 - uVar6;\n    }\n    puVar8 = *(*0x20 + 0x18);\n    puVar9 = *(*0x20 + -0x468);\n    unaff_RBX = arg1_01;\n    goto code_r0x00483c80;\ncode_r0x00483deb:\n    arg1_01 = puVar10;\n    *(*0x20 + -0x4d0) = 0x483df6;\n    fcn.0045e300(arg1_01);\ncode_r0x00483df6:\n    *(*0x20 + -0x4d0) = 0x483dfe;\n    fcn.0045e2c0(arg1_01, puVar9);\n    arg1 = puVar8;\ncode_r0x00483dfe:\n    *(*0x20 + -0x4d0) = 0x483e09;\n    in_RAX = fcn.0045e300(arg1);\ncode_r0x00483e0a:\n    *(puVar7 + 8) = in_RAX;\n    *(puVar7 + 0x10) = unaff_RBX;\n    *(puVar7 + 0x18) = arg1;\n    *(puVar7 + 0x20) = puVar9;\n    *(puVar7 + -8) = 0x483e25;\n    fcn.0045bb60();\n    in_RAX = *(puVar7 + 8);\n    unaff_RBX = *(puVar7 + 0x10);\n    arg1 = *(puVar7 + 0x18);\n    unaff_RDI = *(puVar7 + 0x20);\n    *0x20 = puVar7;\n    goto code_r0x004838a0;\n}\n",
        "token_count": 3053
    },
    "00484240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00484240(int64_t arg1, ulong noname_1, ulong *arg3)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong in_RAX;\n    ulong uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    ulong *puVar8;\n    int64_t arg1_00;\n    int64_t iVar9;\n    int64_t iVar10;\n    ulong unaff_RBX;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong *unaff_RDI;\n    int64_t iVar12;\n    ulong uVar13;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x58 && *0x20 + -0x58 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0xd8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x28) = unaff_RSI;\n            if ((arg3 == NULL) || (arg3[8] != 0)) {\ncode_r0x0048434a:\n                *(*0x20 + -0x50) = in_XMM15;\n                *(*0x20 + -0x48) = in_XMM15;\n                *(*0x20 + -0x38) = in_XMM15;\n                *(*0x20 + -0x28) = in_XMM15;\n                *(*0x20 + -0x18) = in_XMM15;\n                uVar13 = arg3[1];\n                *(*0x20 + -0x50) = *arg3;\n                *(*0x20 + -0x48) = uVar13;\n                iVar10 = arg3[2];\n                uVar13 = arg3[3];\n                uVar4 = arg3[4];\n                *(*0x20 + -0x40) = iVar10;\n                *(*0x20 + -0x38) = uVar13;\n                *(*0x20 + -0x30) = uVar4;\n                uVar13 = arg3[8];\n                *(*0x20 + -0x10) = uVar13;\n                if (iVar10 == 0) {\n                    *(*0x20 + -0xe0) = 0x4843cd;\n                    uVar4 = fcn.004805a0();\n                    *(*0x20 + -0x38) = unaff_RBX;\n                    *(*0x20 + -0x30) = arg1;\n                    *(*0x20 + -0x40) = uVar4;\n                    if (unaff_RDI != NULL) {\n                        return 0;\n                    }\n                    arg3 = *(*0x20 + 0x30);\n                }\n                uVar4 = arg3[6];\n                *(*0x20 + -0x70) = uVar4;\n                *(*0x20 + -0xe0) = 0x484409;\n                uVar4 = fcn.00447240(uVar4);\n                *(*0x20 + -0x20) = 0;\n                *(*0x20 + -0x18) = *(*0x20 + -0x70);\n                *(*0x20 + -0x28) = uVar4;\n                iVar10 = *(*0x20 + 0x30);\n                iVar9 = *(iVar10 + 0x28);\n                *(*0x20 + -0x58) = iVar9;\n                iVar12 = *(iVar10 + 0x30);\n                *(*0x20 + -0x70) = iVar12;\n                for (iVar5 = 0; iVar5 < iVar12; iVar5 = iVar5 + 1) {\n                    piVar1 = *(iVar9 + iVar5 * 8);\n                    if (piVar1 == NULL) {\n                        uVar13 = 0xffffffffffffffff;\n                    }\n                    else {\n                        uVar13 = *(*piVar1 + 0x10);\n                    }\n                    arg1_00 = *(*0x20 + -0x20);\n                    iVar2 = *(*0x20 + -0x28);\n                    iVar6 = iVar2;\n                    if (*(*0x20 + -0x18) < arg1_00 + 1U) {\n                        *(*0x20 + -0x78) = iVar5;\n                        *(*0x20 + -0x98) = uVar13;\n                        *(*0x20 + -0xe0) = 0x4844d5;\n                        iVar6 = fcn.00447360(arg1_00);\n                        *(*0x20 + -0x18) = arg1_00;\n                        *(*0x20 + -0x28) = iVar6;\n                        iVar10 = *(*0x20 + 0x30);\n                        iVar9 = *(*0x20 + -0x58);\n                        iVar12 = *(*0x20 + -0x70);\n                        uVar13 = *(*0x20 + -0x98);\n                        iVar5 = *(*0x20 + -0x78);\n                        arg1_00 = iVar2;\n                    }\n                    *(*0x20 + -0x20) = arg1_00 + 1;\n                    *(iVar6 + arg1_00 * 8) = uVar13;\n                }\n                uVar4 = *(*0x20 + 0x10);\n                iVar9 = *(*0x20 + 0x18);\n                uVar3 = *(*0x20 + 0x20);\n                puVar11 = *0x20 + -0x50;\n                *(*0x20 + -0xe0) = 0x484545;\n                uVar7 = fcn.0046b9a0(iVar9, iVar10, puVar11);\n                if (iVar9 != 0) {\n                    *(*0x20 + -0x60) = uVar3;\n                    *(*0x20 + -0x80) = iVar9;\n                    *(*0x20 + -0xe0) = 0x484565;\n                    puVar8 = fcn.0040c560();\n                    puVar8[1] = 9;\n                    *puVar8 = 0x4af933;\n                    uVar4 = *(*0x20 + 0x10);\n                    puVar8[3] = uVar4;\n                    if (*0x801c20 == 0) {\n                        puVar8[2] = *(*0x20 + 8);\n                    }\n                    else {\n                        *(*0x20 + -0xe0) = 0x4845ab;\n                        puVar8 = fcn.0045dec0(uVar4, *(*0x20 + 8), puVar11, uVar13);\n                    }\n                    puVar8[4] = *(*0x20 + -0x80);\n                    if (*0x801c20 == 0) {\n                        puVar8[5] = *(*0x20 + -0x60);\n                    }\n                    else {\n                        *(*0x20 + -0xe0) = 0x4845d6;\n                        fcn.0045dec0(uVar4, *(*0x20 + -0x60), puVar11, uVar13);\n                    }\n                    return 0;\n                }\n                *(*0x20 + -0x90) = uVar7;\n                *(*0x20 + -0x88) = uVar4;\n                *(*0x20 + -0xe0) = 0x484608;\n                puVar8 = fcn.0040c560();\n                *(*0x20 + -0x68) = puVar8;\n                *puVar8 = *(*0x20 + -0x90);\n                puVar8[1] = *(*0x20 + -0x88);\n                *(*0x20 + -0xe0) = 0x48463b;\n                fcn.00415520(0x49dfc0);\n                return *(*0x20 + -0x68);\n            }\n            uVar13 = *arg3;\n            if (arg3[1] == 0) goto code_r0x0048434a;\n            *(*0x20 + -0xe0) = 0x4842c5;\n            fcn.00486aa0();\n            if (arg1 == 0) {\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                unaff_RDI = *(*0x20 + 0x20);\n                arg3 = *(*0x20 + 0x30);\n                goto code_r0x0048434a;\n            }\n            if (arg1 == 0x732b78) {\n                unaff_RDI[1] = 5;\n                if (*0x801c20 == 0) {\n                    *unaff_RDI = 0x4af00d;\n                }\n                else {\n                    *(*0x20 + -0xe0) = 0x484335;\n                    fcn.0045dec0(0x732b78, 0x4af00d, arg3, uVar13);\n                }\n                return 0;\n            }\n            unaff_RBX = 0x4a1960;\n            arg1 = 0x4a1360;\n            *(*0x20 + -0xe0) = 0x48466a;\n            in_RAX = fcn.00409b80(0x4a1360);\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + 0x10) = unaff_RBX;\n        *(puVar11 + 0x18) = arg1;\n        *(puVar11 + 0x20) = unaff_RDI;\n        *(puVar11 + 0x28) = unaff_RSI;\n        *(puVar11 + 0x30) = arg3;\n        *(puVar11 + -8) = 0x48468e;\n        fcn.0045bb60();\n        in_RAX = *(puVar11 + 8);\n        unaff_RBX = *(puVar11 + 0x10);\n        arg1 = *(puVar11 + 0x18);\n        unaff_RDI = *(puVar11 + 0x20);\n        unaff_RSI = *(puVar11 + 0x28);\n        arg3 = *(puVar11 + 0x30);\n        *0x20 = puVar11;\n    } while( true );\n}\n",
        "token_count": 2443
    },
    "004846c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.004846c0(ulong arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    ulong *puVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    int64_t noname_1;\n    ulong arg2;\n    int64_t unaff_RBX;\n    ulong arg4;\n    int64_t unaff_R14;\n    uchar auStack56 [16];\n    int64_t iStack40;\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (&stack0xfffffffffffffff8 < *(unaff_R14 + 0x10) || &stack0xfffffffffffffff8 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    ppcStack16 = NULL;\n    iVar4 = *(in_RAX + 8);\n    if (iVar4 != -1) {\n        if (*(in_RAX + 0x10) != 0) {\n            return *0x7ad8b0;\n        }\n        if (*0x7a65b0 == unaff_RBX) {\n            noname_1 = iVar4;\n            cVar1 = fcn.00403360(*0x7a65b8);\n            if (cVar1 != '\\0') {\n                uVar5 = 0;\n                arg4 = 0;\n                iVar2 = fcn.0046e520(0xffffffffffffffff, noname_1, 0, 0);\n                if (iVar2 != 0) {\n                    iStack40 = iVar4;\n                    puVar3 = fcn.0040c560();\n                    puVar3[1] = 0xf;\n                    *puVar3 = 0x4b0af3;\n                    puVar3[2] = iVar2;\n                    if (*0x801c20 == 0) {\n                        puVar3[3] = iStack40;\n                    }\n                    else {\n                        fcn.0045dea0(iStack40, noname_1, uVar5, arg4);\n                    }\n                    return 0x732bf8;\n                }\n                arg2 = 0x4849c0;\n                auStack56 = ZEXT816(0x4849c0);\n                ppcStack16 = auStack56;\n                iVar4 = fcn.0046fb80();\n                if (iVar4 == 0) {\n                    uVar5 = 0;\n                    puVar3 = NULL;\n                }\n                else {\n                    iStack40 = 1;\n                    puVar3 = fcn.0040c560();\n                    puVar3[1] = 0x10;\n                    *puVar3 = 0x4b0f09;\n                    puVar3[2] = iVar4;\n                    if (*0x801c20 == 0) {\n                        puVar3[3] = iStack40;\n                    }\n                    else {\n                        puVar3 = fcn.0045dea0(iStack40, arg2, uVar5, arg4);\n                    }\n                    uVar5 = 0x732bf8;\n                }\n                auStack32 = CONCAT88(puVar3, uVar5);\n                (**ppcStack16)();\n                return auStack32._0_8_;\n            }\n        }\n        return 0x732cf8;\n    }\n    return 0x732cf8;\n}\n",
        "token_count": 752
    },
    "00484a20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00484a20(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    iVar1 = *(in_RAX + 8);\n    *(in_RAX + 8) = -1;\n    if (iVar1 != -1) {\n        iVar1 = fcn.0046dee0();\n        if (iVar1 != 0) {\n            puVar2 = fcn.0040c560();\n            puVar2[1] = 0xb;\n            *puVar2 = 0x4afdc7;\n            puVar2[2] = iVar1;\n            if (*0x801c20 == 0) {\n                puVar2[3] = unaff_RBX;\n            }\n            else {\n                fcn.0045dea0(unaff_RBX, param_2, param_3, param_4);\n            }\n            return 0x732bf8;\n        }\n        fcn.00415520(0);\n        return 0;\n    }\n    return 0x732cf8;\n}\n",
        "token_count": 320
    },
    "00484c20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00484c20(void)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uint64_t arg1;\n    int64_t iVar5;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t in_R11;\n    int64_t unaff_R14;\n    uint64_t uStack80;\n    uint64_t uStack24;\n    uint8_t *puStack16;\n    \n    while (&uStack24 < *(unaff_R14 + 0x10) || &uStack24 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    uVar4 = 0;\n    uVar3 = 0;\n    iVar5 = 0;\n    arg1 = 0;\n    uVar8 = 0;\n    do {\n        if (unaff_RBX == 0) {\n            for (; 0 < uVar4; uVar4 = uVar4 - 1) {\n                uVar8 = arg1 + 1;\n                iVar2 = iVar5;\n                if (uVar3 < uVar8) {\n                    uVar3 = arg1;\n                    iVar2 = fcn.00447360(arg1);\n                    uVar8 = iVar5 + 1;\n                }\n                *(iVar2 + arg1) = 0x5c;\n                arg1 = uVar8;\n                iVar5 = iVar2;\n            }\n            return iVar5;\n        }\n        uVar1 = *in_RAX;\n        uVar7 = uVar8;\n        uStack24 = unaff_RBX;\n        puStack16 = in_RAX;\n        if (uVar1 < 0x21) {\n            if (((uVar1 == 9) || (uVar1 == 0x20)) && (uVar8 == 0)) {\n                for (; 0 < uVar4; uVar4 = uVar4 - 1) {\n                    uVar8 = arg1 + 1;\n                    iVar2 = iVar5;\n                    if (uVar3 < uVar8) {\n                        uVar3 = arg1;\n                        iVar2 = fcn.00447360(arg1);\n                        uVar8 = iVar5 + 1;\n                    }\n                    *(iVar2 + arg1) = 0x5c;\n                    arg1 = uVar8;\n                    iVar5 = iVar2;\n                }\n                return iVar5;\n            }\ncode_r0x00484de2:\n            for (; 0 < uVar4; uVar4 = uVar4 - 1) {\n                uVar9 = arg1 + 1;\n                iVar2 = iVar5;\n                if (uVar3 < uVar9) {\n                    uVar3 = arg1;\n                    iVar2 = fcn.00447360(arg1);\n                    uVar9 = iVar5 + 1;\n                    uVar7 = uVar8 & 0xff;\n                    in_RAX = puStack16;\n                    unaff_RBX = uStack24;\n                }\n                *(iVar2 + arg1) = 0x5c;\n                arg1 = uVar9;\n                iVar5 = iVar2;\n            }\n            uVar9 = arg1 + 1;\n            iVar2 = iVar5;\n            if (uVar3 < uVar9) {\n                uVar3 = arg1;\n                iVar2 = fcn.00447360(arg1);\n                uVar9 = iVar5 + 1;\n                uVar7 = uVar8 & 0xff;\n                in_RAX = puStack16;\n                unaff_RBX = uStack24;\n            }\n            *(iVar2 + arg1) = uVar1;\n            uVar4 = 0;\n            iVar5 = iVar2;\n        }\n        else {\n            if (uVar1 == 0x22) {\n                uVar9 = uVar4 / 2;\n                uStack80 = uVar4;\n                goto code_r0x00484e5e;\n            }\n            if (uVar1 != 0x5c) goto code_r0x00484de2;\n            uVar4 = uVar4 + 1;\n            uVar9 = arg1;\n        }\n        while (unaff_RBX == 0) {\n            in_RAX = fcn.0045e300(0);\n            iVar2 = iVar5;\n            while( true ) {\n                *(iVar2 + arg1) = 0x5c;\n                uVar9 = uVar9 - 1;\n                arg1 = in_R11;\n                iVar5 = iVar2;\ncode_r0x00484e5e:\n                uVar6 = uVar7;\n                if (uVar9 < 1) break;\n                in_R11 = arg1 + 1;\n                iVar2 = iVar5;\n                if (uVar3 < in_R11) {\n                    uVar3 = arg1;\n                    iVar2 = fcn.00447360(arg1);\n                    in_R11 = iVar5 + 1;\n                    uVar7 = uVar8 & 0xff;\n                    in_RAX = puStack16;\n                    unaff_RBX = uStack24;\n                    uVar4 = uStack80;\n                }\n            }\n            if ((uVar4 & 1) == 0) {\n                uVar9 = arg1;\n                if (((uVar7 != '\\0') && (1 < unaff_RBX)) && (in_RAX[1] == 0x22)) {\n                    uVar9 = arg1 + 1;\n                    iVar2 = iVar5;\n                    if (uVar3 < uVar9) {\n                        uVar3 = arg1;\n                        iVar2 = fcn.00447360(arg1);\n                        uVar9 = iVar5 + 1;\n                        uVar6 = uVar8;\n                        in_RAX = puStack16;\n                        unaff_RBX = uStack24;\n                    }\n                    *(iVar2 + arg1) = 0x22;\n                    in_RAX = in_RAX + 1;\n                    unaff_RBX = unaff_RBX - 1;\n                    iVar5 = iVar2;\n                }\n                uVar7 = uVar6 ^ 1;\n            }\n            else {\n                uVar9 = arg1 + 1;\n                if (uVar3 < uVar9) {\n                    uVar3 = arg1;\n                    iVar2 = fcn.00447360(arg1);\n                    uVar9 = iVar5 + 1;\n                    uVar7 = uVar8 & 0xff;\n                    in_RAX = puStack16;\n                    unaff_RBX = uStack24;\n                    iVar5 = iVar2;\n                }\n                *(iVar5 + arg1) = 0x22;\n            }\n            uVar4 = 0;\n        }\n        unaff_RBX = unaff_RBX - 1;\n        in_RAX = in_RAX + (-unaff_RBX >> 0x3f & 1);\n        arg1 = uVar9;\n        uVar8 = uVar7;\n        in_R11 = unaff_RBX;\n    } while( true );\n}\n",
        "token_count": 1594
    },
    "00485060": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00485060(void)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_RAX;\n    ulong uVar2;\n    ulong uVar3;\n    int64_t arg2;\n    uint64_t arg1;\n    uint64_t uVar4;\n    uint64_t arg1_00;\n    int64_t unaff_RBX;\n    int64_t iVar5;\n    int64_t iVar6;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    uVar4 = 0;\n    arg1 = 0;\n    iVar5 = 0;\n    while (unaff_RBX != 0) {\n        uVar1 = *in_RAX;\n        if ((uVar1 == 0x20) || (uVar1 == 9)) {\n            in_RAX = in_RAX + (-(unaff_RBX + -1) >> 0x3f & 1);\n            unaff_RBX = unaff_RBX + -1;\n        }\n        else {\n            uVar2 = fcn.00484c20();\n            uVar3 = fcn.0044b220(unaff_RBX);\n            arg1_00 = arg1 + 1;\n            arg2 = iVar5;\n            if (uVar4 < arg1_00) {\n                uVar4 = arg1;\n                arg2 = fcn.00447360(arg1);\n                arg1_00 = iVar5 + 1;\n            }\n            iVar6 = arg1 * 0x10;\n            *(arg2 + 8 + iVar6) = uVar2;\n            in_RAX = uVar1;\n            unaff_RBX = iVar5;\n            if (*0x801c20 == 0) {\n                *(arg2 + iVar6) = uVar3;\n                arg1 = arg1_00;\n                iVar5 = arg2;\n            }\n            else {\n                fcn.0045dda0(arg1_00, arg2, arg2 + iVar6, in_R9);\n                arg1 = arg1_00;\n                iVar5 = arg2;\n            }\n        }\n    }\n    return iVar5;\n}\n",
        "token_count": 517
    },
    "004855e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004855e0(ulong arg1)\n\n{\n    ulong noname_1;\n    char cVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    ulong *puVar3;\n    ulong arg1_00;\n    int64_t unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    iVar2 = *0x7ad870;\n    if (in_RAX != NULL) {\n        iVar2 = 0;\n    }\n    if (iVar2 == 0) {\n        iVar2 = fcn.00483340(arg1);\n        if (iVar2 < 0) {\n            iVar2 = 0;\n        }\n        if (unaff_RBX != 0) {\n            if (*0x7ad750 == unaff_RBX) {\n                cVar1 = fcn.00403360(*0x7ad758);\n            }\n            else {\n                cVar1 = '\\0';\n            }\n            if (cVar1 == '\\0') {\n                if ((*0x7ad6e0 == unaff_RBX) && (cVar1 = fcn.00403360(*0x7ad6e8),  cVar1 != '\\0')) {\n                    arg1 = *0x7ad848;\n                    unaff_RBX = *0x7ad840;\n                }\n                puVar3 = fcn.0040c560();\n                puVar3[1] = 5;\n                *puVar3 = 0x4af09e;\n                noname_1 = *(*in_RAX + 0x228);\n                arg1_00 = *(*in_RAX + 0x230);\n                puVar3[3] = arg1_00;\n                if (*0x801c20 == 0) {\n                    puVar3[2] = noname_1;\n                }\n                else {\n                    puVar3 = fcn.0045dec0(arg1_00, noname_1, in_R8, in_R9);\n                }\n                puVar3[4] = unaff_RBX;\n                if (*0x801c20 == 0) {\n                    puVar3[5] = arg1;\n                }\n                else {\n                    fcn.0045dec0(arg1_00, arg1, in_R8, in_R9);\n                }\n            }\n        }\n        return iVar2;\n    }\n    return 0;\n}\n",
        "token_count": 584
    },
    "00485be0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00485d8a)\n// WARNING: Removing unreachable block (ram,0x00485e07)\n\nint64_t * fcn.00485be0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t arg2;\n    char cVar1;\n    ulong in_RAX;\n    int64_t *piVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    int64_t *arg1;\n    int64_t *unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        piVar2 = unaff_RBX;\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x68 && *0x20 + -0x68 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0xe8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0xf0) = 0x485c1b;\n            piVar2 = fcn.004867c0();\n            *(*0x20 + -0x20) = piVar2;\n            *(*0x20 + -0xb8) = unaff_RBX;\n            if ((unaff_RBX == 0x2) && (*(piVar2 + 1) == ':')) {\n                unaff_RDI = 0x4aebda;\n                *(*0x20 + -0xf0) = 0x485c50;\n                fcn.0044ae80(2);\n            }\n            else if (unaff_RBX == NULL) {\n                piVar2 = 0x2;\n            }\n            else {\n                cVar1 = *(unaff_RBX + -1 + piVar2);\n                if ((cVar1 == '/') || (cVar1 == '\\\\')) {\n                    unaff_RDI = 0x4aebda;\n                    *(*0x20 + -0xf0) = 0x485c88;\n                    fcn.0044ae80(unaff_RBX);\n                }\n                else {\n                    unaff_RDI = 0x4aec50;\n                    *(*0x20 + -0xf0) = 0x485ca6;\n                    fcn.0044ae80(unaff_RBX);\n                }\n            }\n            *(*0x20 + -0xf0) = 0x485cd2;\n            arg1 = piVar2;\n            uVar3 = fcn.0046ca80(piVar2);\n            if (unaff_RDI == 0) {\n                if (piVar2 != NULL) {\n                    unaff_RDI = 0;\n                    goto code_r0x00485ced;\n                }\n            }\n            else {\n                uVar3 = 0;\ncode_r0x00485ced:\n                if (unaff_RDI != 0) {\n                    return NULL;\n                }\n                *(*0x20 + -0x28) = uVar3;\n                *(*0x20 + -0xf0) = 0x485d0a;\n                iVar4 = fcn.0040c560();\n                *(*0x20 + -0x18) = iVar4;\n                *(*0x20 + -0xf0) = 0x485d25;\n                uVar3 = fcn.0046d440();\n                *(*0x20 + -0xc0) = uVar3;\n                if (iVar4 == 0) {\n                    iVar4 = *(*0x20 + -0x18);\n                    goto code_r0x00485e39;\n                }\n                if (((iVar4 == 0) || (*(iVar4 + 8) != 0x4a26e0)) || (*arg1 != 2)) {\n                    return NULL;\n                }\n                *(*0x20 + -0x4c) = in_XMM15;\n                *(*0x20 + -0x48) = in_XMM15;\n                *(*0x20 + -0x38) = in_XMM15;\n                piVar2 = *(*0x20 + -0xb8);\n                *(*0x20 + -0xf0) = 0x485d85;\n                fcn.0046ca80(arg1);\n                if (piVar2 != NULL) {\n                    *(*0x20 + -0xf0) = 0x485db4;\n                    iVar4 = fcn.0046ef80(*0x20 + -0x4c);\n                    if (iVar4 != 0) {\n                        return NULL;\n                    }\n                    if ((*(*0x20 + -0x4c) >> 4 & 1) == 0) {\n                        return NULL;\n                    }\n                    iVar4 = *(*0x20 + -0x18);\n                    *(iVar4 + 0x260) = 1;\ncode_r0x00485e39:\n                    *(iVar4 + 600) = *(*0x20 + -0xb8);\n                    *(*0x20 + -0x10) = iVar4 + 0x250;\n                    if (*0x801c20 == 0) {\n                        *(iVar4 + 0x250) = *(*0x20 + -0x20);\n                    }\n                    else {\n                        *(*0x20 + -0xf0) = 0x485e7e;\n                        fcn.0045dec0(iVar4 + 0x250, *(*0x20 + -0x20), param_3, param_4);\n                    }\n                    *(*0x20 + -0xf0) = 0x485e86;\n                    cVar1 = fcn.004865c0();\n                    if (cVar1 == '\\0') {\n                        iVar4 = *(*0x20 + -0x18);\n                        uVar3 = *(iVar4 + 600);\n                        *(*0x20 + -0xf0) = 0x485ea5;\n                        uVar5 = fcn.0046b4a0(iVar4);\n                        arg2 = *(*0x20 + -0x18);\n                        *(arg2 + 600) = uVar3;\n                        if (*0x801c20 == 0) {\n                            *(arg2 + 0x250) = uVar5;\n                        }\n                        else {\n                            *(*0x20 + -0xf0) = 0x485ed6;\n                            fcn.0045dda0(iVar4, arg2, param_3, param_4);\n                        }\n                        if (iVar4 != 0) {\n                            return NULL;\n                        }\n                    }\n                    uVar3 = *(*0x20 + 0x10);\n                    *(*0x20 + -0xf0) = 0x485f05;\n                    piVar2 = fcn.00485920(uVar3);\n                    if (*0x801c20 == 0) {\n                        *(*piVar2 + 0x238) = *(*0x20 + -0x18);\n                    }\n                    else {\n                        *(*0x20 + -0xf0) = 0x485f3a;\n                        piVar2 = fcn.0045dec0(uVar3, *(*0x20 + -0x18), param_3, param_4);\n                    }\n                    return piVar2;\n                }\n                *(*0x20 + -0xf0) = 0x485f88;\n                fcn.0045e240(0);\n            }\n            *(*0x20 + -0xf0) = 0x485f92;\n            in_RAX = fcn.0045e240(0);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = piVar2;\n        *(puVar6 + -8) = 0x485fa5;\n        fcn.0045bb60();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1853
    },
    "00485fc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00485fc0(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    ulong *puVar1;\n    int64_t iVar2;\n    uint64_t noname_1;\n    int64_t unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (unaff_RBX == 0) {\n        puVar1 = fcn.0040c560();\n        puVar1[1] = 4;\n        *puVar1 = 0x4aef01;\n        puVar1[3] = 0;\n        if (*0x801c20 == 0) {\n            puVar1[2] = in_RAX;\n        }\n        else {\n            puVar1 = fcn.0045dec0(0x4aef01, in_RAX, in_R8, in_R9);\n        }\n        puVar1[4] = 0x732cf8;\n        puVar1[5] = 0x732880;\n        return 0;\n    }\n    noname_1 = arg1;\n    iVar2 = fcn.00485ae0(arg1);\n    if (unaff_RBX == 0) {\n        return iVar2;\n    }\n    iVar2 = fcn.00485be0();\n    if (unaff_RBX == 0) {\n        if (((arg1 & 1) == 0) && ((arg1 >> 1 & 1) == 0)) {\n            return iVar2;\n        }\n        if (iVar2 != 0) {\n            fcn.00486220();\n        }\n        puVar1 = fcn.0040c560();\n        puVar1[1] = 4;\n        *puVar1 = 0x4aef01;\n        puVar1[3] = 0;\n        if (*0x801c20 == 0) {\n            puVar1[2] = in_RAX;\n        }\n        else {\n            puVar1 = fcn.0045dec0(0, in_RAX, in_R8, in_R9);\n        }\n        puVar1[4] = 0x732cf8;\n        puVar1[5] = 0x732868;\n        return 0;\n    }\n    puVar1 = fcn.0040c560();\n    puVar1[1] = 4;\n    *puVar1 = 0x4aef01;\n    puVar1[3] = unaff_RBX;\n    iVar2 = unaff_RBX;\n    if (*0x801c20 == 0) {\n        puVar1[2] = in_RAX;\n    }\n    else {\n        puVar1 = fcn.0045dec0(unaff_RBX, in_RAX, in_R8, in_R9);\n    }\n    puVar1[4] = unaff_RBX;\n    if (*0x801c20 == 0) {\n        puVar1[5] = noname_1;\n    }\n    else {\n        fcn.0045dec0(iVar2, noname_1, in_R8, in_R9);\n    }\n    return 0;\n}\n",
        "token_count": 750
    },
    "00486220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00486220(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong arg2;\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    ulong *puVar3;\n    ulong uVar4;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (in_RAX == 0) {\n        return 0x732cf8;\n    }\n    if ((*(in_RAX + 0x238) != 0) && (*(*(in_RAX + 0x238) + 0x260) != '\\0')) {\n        return 0;\n    }\n    iVar2 = fcn.00482840();\n    if (iVar2 == 0) {\n        uVar4 = 0;\n    }\n    else {\n        if ((*0x7ad6e0 == iVar2) && (cVar1 = fcn.00403360(*0x7ad6e8),  cVar1 != '\\0')) {\n            iVar2 = *0x7ad840;\n            unaff_RBX = *0x7ad848;\n        }\n        puVar3 = fcn.0040c560();\n        puVar3[1] = 5;\n        *puVar3 = 0x4af012;\n        uVar4 = *(in_RAX + 0x228);\n        arg2 = *(in_RAX + 0x230);\n        puVar3[3] = arg2;\n        if (*0x801c20 == 0) {\n            puVar3[2] = uVar4;\n        }\n        else {\n            puVar3 = fcn.0045dea0(uVar4, arg2, param_3, param_4);\n        }\n        puVar3[4] = iVar2;\n        if (*0x801c20 == 0) {\n            puVar3[5] = unaff_RBX;\n        }\n        else {\n            fcn.0045dec0(uVar4, unaff_RBX, param_3, param_4);\n        }\n        uVar4 = 0x732b78;\n    }\n    fcn.00415520(0);\n    return uVar4;\n}\n",
        "token_count": 542
    },
    "004863c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004863c0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t arg1;\n    ulong *puVar1;\n    ulong uVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    arg1 = fcn.0046d340(2);\n    if (arg1 != 0) {\n        puVar1 = fcn.0040c560();\n        puVar1[1] = 4;\n        *puVar1 = 0x4aef09;\n        puVar1[2] = arg1;\n        if (*0x801c20 == 0) {\n            puVar1[3] = 2;\n        }\n        else {\n            fcn.0045dec0(arg1, 2, param_3, param_4);\n        }\n        return 0;\n    }\n    uVar2 = fcn.00485920(2);\n    fcn.00485920(2);\n    return uVar2;\n}\n",
        "token_count": 272
    },
    "004864e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004864e0(void)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    uint64_t unaff_RBX;\n    uint64_t arg1;\n    \n    if ((unaff_RBX == 2) && (*(in_RAX + 1) == ':')) {\n        in_RAX = 0x4aebdd;\n        unaff_RBX = 1;\n    }\n    else if ((2 < unaff_RBX) && (*(in_RAX + 1) == ':')) {\n        in_RAX = in_RAX + 2;\n        unaff_RBX = unaff_RBX - 2;\n    }\n    do {\n        arg1 = unaff_RBX;\n        unaff_RBX = arg1 - 1;\n        if (unaff_RBX < 1) break;\n        if (arg1 <= unaff_RBX) goto code_r0x004865a5;\n    } while ((*(in_RAX + unaff_RBX) == '/') || (*(in_RAX + unaff_RBX) == '\\\\'));\n    while( true ) {\n        unaff_RBX = unaff_RBX - 1;\n        if (unaff_RBX < 0) {\n            return;\n        }\n        if (arg1 <= unaff_RBX) break;\n        if (*(in_RAX + unaff_RBX) == '/') {\n            return;\n        }\n        if (*(in_RAX + unaff_RBX) == '\\\\') {\n            return;\n        }\n    }\n    fcn.0045e240(arg1);\ncode_r0x004865a5:\n    fcn.0045e240(arg1);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 376
    },
    "00486680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nchar * fcn.00486680(void)\n\n{\n    char cVar1;\n    char cVar2;\n    code *pcVar3;\n    char *in_RAX;\n    char *pcVar4;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    uint64_t arg1;\n    \n    if (unaff_RBX < 2) {\n        return NULL;\n    }\n    cVar1 = *in_RAX;\n    cVar2 = in_RAX[1];\n    if ((cVar2 == ':') && (((cVar1 - 0x30U < 10 || (cVar1 + 0x9fU < 0x1a)) || (cVar1 + 0xbfU < 0x1a)))) {\n        return in_RAX;\n    }\n    if ((((4 < unaff_RBX) && ((cVar1 == '\\\\' || (cVar1 == '/')))) && ((cVar2 == '\\\\' || (cVar2 == '/')))) &&\n       (((cVar1 = in_RAX[2],  cVar1 != '\\\\' && (cVar1 != '/')) && (cVar1 != '.')))) {\n        for (iVar5 = 3; iVar5 < unaff_RBX - 1; iVar5 = iVar5 + 1) {\n            if ((in_RAX[iVar5] == '\\\\') || (in_RAX[iVar5] == '/')) {\n                arg1 = iVar5 + 1;\n                if (arg1 < unaff_RBX) {\n                    cVar1 = in_RAX[iVar5 + 1];\n                    if (cVar1 == '\\\\') {\n                        return NULL;\n                    }\n                    if (cVar1 == '/') {\n                        return NULL;\n                    }\n                    if (cVar1 == '.') {\n                        return NULL;\n                    }\n                    for (; ((arg1 < unaff_RBX && (in_RAX[arg1] != '\\\\')) && (in_RAX[arg1] != '/')); arg1 = arg1 + 1) {\n                    }\n                    if (arg1 <= unaff_RBX) {\n                        return in_RAX;\n                    }\n                    fcn.0045e280(arg1, unaff_RBX);\n                }\n                fcn.0045e240(unaff_RBX);\n                pcVar3 = swi(3);\n                pcVar4 = (*pcVar3)();\n                return pcVar4;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 523
    },
    "00487640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong * fcn.00487640(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong *puVar2;\n    int64_t iVar3;\n    ulong unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    ulong uStack112;\n    ulong uStack104;\n    int64_t iStack96;\n    ulong uStack88;\n    uint uStack76;\n    ulong uStack72;\n    uint uStack64;\n    uint uStack60;\n    uchar auStack56 [12];\n    uint uStack44;\n    uchar auStack40 [12];\n    uint uStack28;\n    ulong uStack24;\n    uint *puStack16;\n    \n    while (&puStack16 < *(unaff_R14 + 0x10) || &puStack16 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    uStack76 = SUB164(in_XMM15, 0);\n    uStack72 = SUB168(in_XMM15, 0);\n    uStack64 = SUB164(in_XMM15 >> 0x40, 0);\n    uStack60 = SUB164(in_XMM15 >> 0x60, 0);\n    puStack16 = &uStack76;\n    uStack88 = arg1;\n    _auStack56 = in_XMM15;\n    _auStack40 = in_XMM15;\n    iVar1 = fcn.0046f080();\n    if (iVar1 != 0) {\n        iStack96 = iVar1;\n        puVar2 = fcn.0040c560();\n        puVar2[1] = 0x1a;\n        *puVar2 = 0x4b39be;\n        puVar2[3] = unaff_RBX;\n        if (*0x801c20 == 0) {\n            puVar2[2] = in_RAX;\n        }\n        else {\n            puVar2 = fcn.0045dec0(unaff_RBX, in_RAX, in_R8, in_R9);\n        }\n        puVar2[4] = iStack96;\n        if (*0x801c20 == 0) {\n            puVar2[5] = puStack16;\n        }\n        else {\n            fcn.0045dec0(unaff_RBX, puStack16, in_R8, in_R9);\n        }\n        return NULL;\n    }\n    uStack112 = 0;\n    iVar1 = fcn.0047f040(&uStack112);\n    if (iVar1 != 0) {\n        iVar3 = *0x9;\n        if (iVar1 != 0x732cf8) {\n            iVar3 = 0;\n        }\n        uStack24 = 9;\n        iStack96 = iVar1;\n        if ((iVar1 != 0x732cf8) || (iVar3 != 0x57)) {\n            puVar2 = fcn.0040c560();\n            puVar2[1] = 0x1c;\n            *puVar2 = 0x4b4177;\n            puVar2[3] = unaff_RBX;\n            if (*0x801c20 == 0) {\n                puVar2[2] = in_RAX;\n            }\n            else {\n                puVar2 = fcn.0045dec0(unaff_RBX, in_RAX, in_R8, in_R9);\n            }\n            puVar2[4] = iStack96;\n            if (*0x801c20 == 0) {\n                puVar2[5] = uStack24;\n            }\n            else {\n                fcn.0045dec0(unaff_RBX, uStack24, in_R8, in_R9);\n            }\n            return NULL;\n        }\n        uStack112 = uStack112 & 0xffffffff;\n    }\n    puStack16 = fcn.004864e0();\n    uStack104 = unaff_RBX;\n    puVar2 = fcn.0040c560();\n    puVar2[1] = uStack104;\n    if (*0x801c20 == 0) {\n        *puVar2 = puStack16;\n    }\n    else {\n        puVar2 = fcn.0045dec0(uStack104, puStack16, in_R8, in_R9);\n    }\n    *(puVar2 + 2) = uStack76;\n    *(puVar2 + 0x14) = uStack72;\n    *(puVar2 + 0x1c) = CONCAT44(uStack60, uStack64);\n    *(puVar2 + 0x24) = auStack56._0_8_;\n    *(puVar2 + 0x2c) = uStack44;\n    *(puVar2 + 6) = auStack40._0_4_;\n    *(puVar2 + 0xb) = auStack56._8_4_;\n    *(puVar2 + 0x5c) = auStack40._8_4_;\n    *(puVar2 + 0xc) = uStack28;\n    *(puVar2 + 0x34) = uStack112._4_4_;\n    return puVar2;\n}\n",
        "token_count": 1165
    },
    "00487940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00487c1f)\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nulong fcn.00487940(ulong noname_0, ulong arg2)\n\n{\n    ulong *puVar1;\n    ulong *in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    ulong *puVar5;\n    ulong *arg1;\n    ulong unaff_RSI;\n    int64_t unaff_RDI;\n    uint64_t arg3;\n    ulong arg4;\n    int64_t unaff_R14;\n    bool bVar6;\n    uchar in_XMM15 [16];\n    uchar auStack168 [16];\n    uint uStack116;\n    uchar auStack112 [12];\n    uint uStack100;\n    uchar auStack96 [24];\n    ulong uStack72;\n    int64_t iStack64;\n    uchar auStack56 [16];\n    uchar auStack40 [16];\n    code **ppcStack24;\n    code **ppcStack16;\n    \n    while (ppcStack24 = SUB168(in_XMM15, 0), \n          auStack112 + 8 < *(unaff_R14 + 0x10) || auStack112 + 8 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    LOCK();\n    bVar6 = *(in_RAX + 0x3c) == 0;\n    if (bVar6) {\n        *(in_RAX + 0x3c) = 1;\n    }\n    iVar3 = in_RAX + 0x3c;\n    auStack56._0_8_ = ppcStack24;\n    if (!bVar6) {\n        iStack64 = in_RAX + 0x3c;\n        fcn.00463d60();\n        iVar3 = iStack64;\n    }\n    auStack40 = CONCAT88(iVar3, 0x487da0);\n    ppcStack16 = auStack40;\n    puVar5 = in_RAX[10];\n    puVar1 = in_RAX[9];\n    if (puVar5 == NULL) {\n        auStack56._0_8_ = SUB168(in_XMM15, 0);\n        (*0x487da0)();\n        return auStack56._0_8_;\n    }\n    arg1 = in_RAX;\n    if (*(in_RAX + 100) != '\\0') {\n        unaff_RDI = 0x4aebed;\n        unaff_RSI = 1;\n        fcn.0044af20(puVar5, arg2, *in_RAX, in_RAX[1]);\n        arg1 = puVar5;\n        puVar5 = puVar1;\n    }\n    fcn.0046ca80(arg1);\n    if (unaff_RDI == 0) {\n        if (puVar5 == NULL) {\n            fcn.0045e240(0);\n            fcn.004328a0();\n            return auStack56._0_8_;\n        }\n        unaff_RDI = 0;\n        unaff_RSI = 0;\n    }\n    if (unaff_RDI == 0) {\n        if ((*(in_RAX + 2) >> 10 & 1) == 0) {\n            uVar4 = 0x2000000;\n        }\n        else if ((*(in_RAX + 0x34) == -0x5ffffff4) || (*(in_RAX + 0x34) == -0x5ffffffd)) {\n            uVar4 = 0x2200000;\n        }\n        else {\n            uVar4 = 0x2000000;\n        }\n        arg3 = uVar4;\n        arg4 = 0;\n        puVar5 = in_RAX;\n        uVar2 = fcn.0046dfc0(0, in_RAX, arg3, 0);\n        auStack56._0_8_ = SUB168(in_XMM15, 0);\n        uStack72 = SUB168(in_XMM15 >> 0x40, 0);\n        auStack168 = CONCAT88(uVar2, 0x487d40);\n        ppcStack24 = auStack168;\n        uStack116 = SUB164(in_XMM15, 0);\n        auStack112 = SUB1612(in_XMM15, 0);\n        uStack100 = SUB164(in_XMM15 >> 0x60, 0);\n        auStack96._0_16_ = in_XMM15;\n        iVar3 = fcn.0046f080();\n        if (iVar3 == 0) {\n            in_RAX[10] = 0;\n            if (*0x801c20 == 0) {\n                in_RAX[9] = 0;\n            }\n            else {\n                fcn.0045dee0(in_RAX, puVar5, arg3, arg4);\n            }\n            *(in_RAX + 0xb) = auStack96._8_4_;\n            *(in_RAX + 0x5c) = uStack72;\n            *(in_RAX + 0xc) = uStack72._4_4_;\n            (**ppcStack24)();\n            (**ppcStack16)();\n            return auStack56._0_8_;\n        }\n        auStack56 = CONCAT88(&uStack116, iVar3);\n        (**ppcStack24)();\n        (**ppcStack16)();\n        return auStack56._0_8_;\n    }\n    auStack56 = CONCAT88(unaff_RSI, unaff_RDI);\n    (**ppcStack16)();\n    return auStack56._0_8_;\n}\n",
        "token_count": 1259
    },
    "00487e00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00487e00(ulong *arg1, ulong *arg2, ulong arg3, ulong arg4)\n\n{\n    char cVar1;\n    ulong *in_RAX;\n    ulong uVar2;\n    ulong uVar3;\n    ulong *puVar4;\n    ulong *arg1_00;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    in_RAX[10] = arg1;\n    if (*0x801c20 == 0) {\n        in_RAX[9] = unaff_RBX;\n    }\n    else {\n        fcn.0045dee0(arg1, arg2, arg3, arg4);\n    }\n    arg1_00 = arg1;\n    cVar1 = fcn.004865c0();\n    if (cVar1 == '\\0') {\n        uVar3 = in_RAX[10];\n        arg1_00 = in_RAX;\n        uVar2 = fcn.0046b4a0(in_RAX);\n        in_RAX[10] = uVar3;\n        arg2 = in_RAX;\n        if (*0x801c20 == 0) {\n            in_RAX[9] = uVar2;\n        }\n        else {\n            fcn.0045dda0(arg1_00, in_RAX, arg3, arg4);\n        }\n        if (arg1_00 != NULL) {\n            puVar4 = fcn.0040c560();\n            puVar4[1] = 8;\n            *puVar4 = 0x4af586;\n            puVar4[3] = arg1;\n            if (*0x801c20 == 0) {\n                puVar4[2] = unaff_RBX;\n            }\n            else {\n                puVar4 = fcn.0045dea0(unaff_RBX, arg2, arg3, arg4);\n            }\n            puVar4[4] = arg1_00;\n            if (*0x801c20 == 0) {\n                puVar4[5] = in_RAX + 9;\n            }\n            else {\n                fcn.0045dea0(in_RAX + 9, arg2, arg3, arg4);\n            }\n            return 0x732b78;\n        }\n    }\n    uVar3 = fcn.004864e0();\n    in_RAX[1] = arg1;\n    if (*0x801c20 == 0) {\n        *in_RAX = uVar3;\n    }\n    else {\n        fcn.0045dda0(arg1_00, arg2, arg3, arg4);\n    }\n    return 0;\n}\n",
        "token_count": 629
    },
    "004887c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004887c0(uint64_t arg1, uint64_t arg2, ulong noname_2, ulong arg4)\n\n{\n    int64_t iVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t arg1_00;\n    uint64_t uVar4;\n    uint64_t arg2_00;\n    uint32_t unaff_EBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*in_RAX == NULL) {\n                if (*0x801c20 == 0) {\n                    *in_RAX = in_RAX;\n                }\n                else {\n                    *(*0x20 + -0x68) = 0x488805;\n                    in_RAX = fcn.0045dda0(arg1, arg2, 0, arg4);\n                }\ncode_r0x00488805:\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + 0x10) = unaff_EBX;\n                if (unaff_EBX < 0x80) {\n                    iVar3 = in_RAX[2];\n                    iVar1 = in_RAX[1];\n                    uVar4 = iVar3 + 1;\n                    iVar2 = iVar1;\n                    if (in_RAX[3] < uVar4) {\n                        *(*0x20 + -0x68) = 0x488845;\n                        iVar2 = fcn.00447360(iVar3);\n                        in_RAX = *(*0x20 + 8);\n                        in_RAX[3] = iVar3;\n                        if (*0x801c20 == 0) {\n                            in_RAX[1] = iVar2;\n                        }\n                        else {\n                            *(*0x20 + -0x68) = 0x48886c;\n                            iVar2 = fcn.0045dda0(in_RAX, in_RAX + 1, uVar4, arg4);\n                        }\n                        unaff_EBX = *(*0x20 + 0x10);\n                        iVar3 = iVar1;\n                    }\n                    in_RAX[2] = iVar3 + 1;\n                    *(iVar2 + iVar3) = unaff_EBX;\n                    return 1;\n                }\n                uVar4 = in_RAX[2];\n                *(*0x20 + -0x20) = uVar4;\n                if (in_RAX[3] - uVar4 < 4) {\n                    iVar3 = in_RAX[3] * 2 + 4;\n                    *(*0x20 + -0x18) = iVar3;\n                    *(*0x20 + -0x68) = 0x4888d7;\n                    iVar3 = fcn.00447240(iVar3);\n                    in_RAX = *(*0x20 + 8);\n                    arg2_00 = in_RAX[2];\n                    uVar4 = *(*0x20 + -0x20);\n                    arg1_00 = uVar4;\n                    if (arg2_00 < uVar4) {\n                        arg1_00 = arg2_00;\n                    }\n                    if (iVar3 != in_RAX[1]) {\n                        *(*0x20 + -0x10) = iVar3;\n                        *(*0x20 + -0x68) = 0x488905;\n                        fcn.0045ebc0(arg1_00);\n                        iVar3 = *(*0x20 + -0x10);\n                        uVar4 = *(*0x20 + -0x20);\n                        in_RAX = *(*0x20 + 8);\n                    }\n                    in_RAX[2] = uVar4;\n                    in_RAX[3] = *(*0x20 + -0x18);\n                    if (*0x801c20 == 0) {\n                        in_RAX[1] = iVar3;\n                    }\n                    else {\n                        *(*0x20 + -0x68) = 0x48893f;\n                        fcn.0045dda0(in_RAX, arg2_00, in_RAX + 1, arg4);\n                    }\n                }\n                arg2 = in_RAX[3];\n                arg1 = uVar4 + 4;\n                if (arg1 <= arg2) {\n                    if (uVar4 <= arg1) {\n                        *(*0x20 + -0x68) = 0x488988;\n                        iVar3 = fcn.00465080(arg2 - uVar4, -(arg2 - uVar4) >> 0x3f & uVar4);\n                        arg2 = *(*(*0x20 + 8) + 0x18);\n                        arg1 = *(*0x20 + -0x20);\n                        uVar4 = arg1 + iVar3;\n                        if (uVar4 <= arg2) {\n                            *(*(*0x20 + 8) + 0x10) = uVar4;\n                            return iVar3;\n                        }\n                        *(*0x20 + -0x68) = 0x4889b9;\n                        fcn.0045e2c0(uVar4, arg2);\n                    }\n                    *(*0x20 + -0x68) = 0x4889c5;\n                    fcn.0045e300(arg1);\n                }\n                *(*0x20 + -0x68) = 0x4889cd;\n                fcn.0045e2c0(arg1, arg2);\n            }\n            else if (in_RAX == *in_RAX) goto code_r0x00488805;\n            unaff_EBX = 0x732918;\n            *(*0x20 + -0x68) = 0x4889e5;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_EBX;\n        *(puVar5 + -8) = 0x4889f4;\n        fcn.0045bb60();\n        in_RAX = *(puVar5 + 8);\n        unaff_EBX = *(puVar5 + 0x10);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1461
    },
    "00488a20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00488a20(uint64_t arg1)\n\n{\n    int32_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    int64_t arg4;\n    int64_t iVar3;\n    uint64_t arg1_00;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    uint64_t arg3;\n    int64_t in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x50) = 0x488a4c;\n            iVar2 = fcn.004651e0();\n            iVar3 = *(*0x20 + 0x18);\n            if ((-1 < iVar3) && (iVar3 <= iVar2)) {\n                iVar2 = iVar3;\n            }\n            *(*0x20 + -0x28) = iVar2;\n            *(*0x20 + -0x50) = 0x488a75;\n            arg4 = fcn.00447240(iVar2);\n            *(*0x20 + -0x10) = arg4;\n            iVar3 = 0;\n            iVar2 = *(*0x20 + 8);\n            unaff_RBX = *(*0x20 + 0x10);\n            while( true ) {\n                iVar6 = *(*0x20 + -0x28) + -1;\n                if (iVar6 <= iVar3) {\n                    if (0 < *(*0x20 + -0x28)) {\n                        iVar6 = iVar6 * 0x10;\n                        *(arg4 + 8 + iVar6) = unaff_RBX;\n                        if (*0x801c20 == 0) {\n                            *(arg4 + iVar6) = iVar2;\n                        }\n                        else {\n                            *(*0x20 + -0x50) = 0x488b91;\n                            fcn.0045dec0(iVar3, iVar2, iVar6, in_R9);\n                        }\n                    }\n                    return;\n                }\n                *(*0x20 + -0x30) = iVar3;\n                *(*0x20 + -0x20) = unaff_RBX;\n                *(*0x20 + -0x18) = iVar2;\n                *(*0x20 + -0x50) = 0x488ac5;\n                iVar1 = fcn.00464da0();\n                uVar4 = *(*0x20 + -0x20);\n                if (uVar4 < unaff_RBX) goto code_r0x00488ba9;\n                arg3 = *(*0x20 + -0x30);\n                arg1_00 = *(*0x20 + -0x28);\n                if (arg1_00 <= arg3) break;\n                iVar6 = arg3 * 0x10;\n                arg4 = *(*0x20 + -0x10);\n                *(arg4 + 8 + iVar6) = unaff_RBX;\n                uVar4 = uVar4 - unaff_RBX;\n                iVar3 = *(*0x20 + -0x18);\n                iVar2 = iVar3 + (unaff_RBX & -uVar4 >> 0x3f);\n                if (*0x801c20 == 0) {\n                    *(arg4 + iVar6) = iVar3;\n                    unaff_RBX = uVar4;\n                }\n                else {\n                    *(*0x20 + -0x50) = 0x488b2d;\n                    iVar1 = fcn.0045dec0(arg1_00, iVar3, arg3, arg4);\n                    unaff_RBX = uVar4;\n                }\n                if (iVar1 == 0xfffd) {\n                    *(arg4 + 8 + iVar6) = 3;\n                    if (*0x801c20 == 0) {\n                        *(arg4 + iVar6) = 0x4aed9e;\n                    }\n                    else {\n                        *(*0x20 + -0x50) = 0x488b66;\n                        fcn.0045dec0(arg1_00, 0x4aed9e, arg3, arg4);\n                    }\n                }\n                iVar3 = arg3 + 1;\n                in_R9 = arg4;\n            }\n            *(*0x20 + -0x50) = 0x488ba9;\n            fcn.0045e240(arg1_00);\ncode_r0x00488ba9:\n            *(*0x20 + -0x50) = 0x488bb1;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045e280(unaff_RBX, uVar4);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x488bc6;\n        fcn.0045bb60();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1298
    },
    "00488be0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00488be0(uint8_t *arg1)\n\n{\n    uint8_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint8_t *puVar3;\n    int64_t in_RDX;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            if (unaff_RDI == 0) {\n                *(*0x20 + -0x48) = 0x488c58;\n                iVar2 = fcn.004651e0();\n                return iVar2 + 1;\n            }\n            if (unaff_RDI == 1) {\n                uVar1 = *arg1;\n                *(*0x20 + -0x40) = in_RAX;\n                *(*0x20 + -0x38) = unaff_RBX;\n                *(*0x20 + -0x30) = uVar1;\n                *(*0x20 + -0x48) = 0x488c30;\n                fcn.00402880(uVar1, in_RDX);\n                return *(*0x20 + -0x28);\n            }\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x18) = arg1;\n            in_RDX = 0;\n            while( true ) {\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x20) = in_RDX;\n                *(*0x20 + -0x48) = 0x488c9e;\n                iVar2 = fcn.0048b080(arg1, in_RDX);\n                if (iVar2 == -1) {\n                    return *(*0x20 + -0x20);\n                }\n                unaff_RDI = *(*0x20 + 0x20);\n                puVar3 = iVar2 + unaff_RDI;\n                arg1 = *(*0x20 + -0x18);\n                if (arg1 < puVar3) break;\n                in_RDX = *(*0x20 + -0x20) + 1;\n                unaff_RBX = arg1 - puVar3;\n                in_RAX = (puVar3 & -unaff_RBX >> 0x3f) + *(*0x20 + -0x10);\n                arg1 = *(*0x20 + 0x18);\n            }\n            *(*0x20 + -0x48) = 0x488cce;\n            in_RAX = fcn.0045e300(arg1);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + -8) = 0x488ce8;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 888
    },
    "00488d20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00488d20(uint8_t *arg1, ulong arg2, ulong noname_2, ulong arg4)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    uint64_t uVar3;\n    int32_t iVar4;\n    uint64_t unaff_RDI;\n    uint64_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (unaff_RDI == 0) {\n        return unaff_RBX;\n    }\n    if (unaff_RDI == 1) {\n        uVar2 = *arg1;\n        unaff_RDI = unaff_RBX;\n        goto code_r0x00488ff4;\n    }\n    if (unaff_RBX == unaff_RDI) {\n        cVar1 = fcn.00402a00(unaff_RDI, arg2);\n        if (cVar1 != '\\0') {\n            return 0;\n        }\n        return 0xffffffffffffffff;\n    }\n    if (unaff_RBX < unaff_RDI) {\n        return 0xffffffffffffffff;\n    }\n    iVar4 = 0;\n    uVar2 = unaff_RDI;\n    while (uVar2 = uVar2 - 1,  -1 < uVar2) {\n        iVar4 = iVar4 * 0x1000193 + arg1[uVar2];\n    }\n    iVar7 = 0x1000193;\n    iVar6 = 1;\n    for (uVar2 = unaff_RDI; 0 < uVar2; uVar2 = uVar2 >> 1) {\n        if ((uVar2 & 1) != 0) {\n            iVar6 = iVar6 * iVar7;\n        }\n        iVar7 = iVar7 * iVar7;\n    }\n    uVar3 = unaff_RBX - unaff_RDI;\n    iVar7 = 0;\n    uVar5 = unaff_RBX;\n    while (uVar5 = uVar5 - 1,  uVar3 <= uVar5) {\n        uVar2 = unaff_RBX;\n        if (unaff_RBX <= uVar5) goto code_r0x00488fe6;\n        iVar7 = *(in_RAX + uVar5) + iVar7 * 0x1000193;\n    }\n    uVar2 = uVar3;\n    if (iVar7 == iVar4) {\n        uVar2 = unaff_RBX;\n        if (uVar3 <= unaff_RBX) {\n            if (unaff_RDI == unaff_RBX - uVar3) {\n                cVar1 = fcn.00402a00(unaff_RBX - uVar3, unaff_RDI);\n            }\n            else {\n                cVar1 = '\\0';\n            }\n            uVar2 = uVar3;\n            if (cVar1 != '\\0') {\n                return uVar3;\n            }\n            goto code_r0x00488ef0;\n        }\n    }\n    else {\ncode_r0x00488ef0:\n        while( true ) {\n            uVar2 = uVar2 - 1;\n            if (uVar2 < 0) {\n                return 0xffffffffffffffff;\n            }\n            if (unaff_RBX <= uVar2) break;\n            uVar5 = uVar2 + unaff_RDI;\n            if (unaff_RBX <= uVar5) {\ncode_r0x00488fc5:\n                fcn.0045e240(unaff_RBX);\n                break;\n            }\n            iVar7 = (iVar7 * 0x1000193 + *(uVar2 + in_RAX)) - *(uVar5 + in_RAX) * iVar6;\n            if (iVar4 == iVar7) {\n                if (uVar5 < uVar2) {\n                    fcn.0045e300(uVar5);\n                    goto code_r0x00488fc5;\n                }\n                cVar1 = fcn.00402a00(unaff_RDI, (-unaff_RDI >> 0x3f & uVar2) + in_RAX);\n                if (cVar1 != '\\0') {\n                    return uVar2;\n                }\n            }\n        }\n        fcn.0045e240(unaff_RBX);\n    }\n    fcn.0045e300(uVar2);\ncode_r0x00488fe6:\n    in_RAX = fcn.0045e240(uVar2);\ncode_r0x00488ff4:\n    do {\n        unaff_RDI = unaff_RDI - 1;\n        if (unaff_RDI < 0) {\n            return 0xffffffffffffffff;\n        }\n    } while (*(in_RAX + unaff_RDI) != uVar2);\n    return unaff_RDI;\n}\n",
        "token_count": 1114
    },
    "004891c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t fcn.004891c0(uint8_t *arg1)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t arg1_00;\n    int64_t unaff_RBX;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uchar auStack72 [8];\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint32_t auStack40 [7];\n    uint uStack12;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (unaff_RDI == 0) {\n        return -1;\n    }\n    if (unaff_RDI == 1) {\n        uVar4 = *arg1;\n        if (0x7f < *arg1) {\n            uVar4 = 0xfffd;\n        }\n        iVar5 = fcn.00489060(uVar4);\n        return iVar5;\n    }\n    if (8 < unaff_RBX) {\n        _auStack72 = in_XMM15;\n        for (iVar5 = 0; iVar5 < unaff_RDI; iVar5 = iVar5 + 1) {\n            uVar1 = arg1[iVar5];\n            if (0x7f < uVar1) break;\n            *(auStack72 + (uVar1 >> 5) * 4) = *(auStack72 + (uVar1 >> 5) * 4) | 1 << (uVar1 & 0x1f);\n        }\n        auStack40[0] = auStack72._0_4_;\n        auStack40[1] = auStack72._4_4_;\n        auStack40[2] = uStack64;\n        auStack40[3] = uStack60;\n        uStack56 = SUB164(in_XMM15, 0);\n        uStack52 = SUB164(in_XMM15 >> 0x20, 0);\n        uStack48 = SUB164(in_XMM15 >> 0x40, 0);\n        uStack44 = SUB164(in_XMM15 >> 0x60, 0);\n        uStack12 = uStack44;\n        auStack40[4] = uStack56;\n        auStack40[5] = uStack52;\n        auStack40[6] = uStack48;\n        if (unaff_RDI <= iVar5) {\n            iVar5 = 0;\n            while( true ) {\n                if (unaff_RBX <= iVar5) {\n                    return -1;\n                }\n                if ((auStack40[*(iVar5 + in_RAX) >> 5] >> (*(iVar5 + in_RAX) & 0x1f) & 1) != 0) break;\n                iVar5 = iVar5 + 1;\n            }\n            return iVar5;\n        }\n    }\n    iVar5 = 0;\n    do {\n        arg1_00 = iVar5;\n        if (unaff_RBX <= arg1_00) {\n            return -1;\n        }\n        uVar4 = *(in_RAX + arg1_00);\n        if (*(in_RAX + arg1_00) < 0x80) {\n            iVar5 = arg1_00 + 1;\n        }\n        else {\n            uVar2 = fcn.00458880(arg1_00);\n            uVar4 = uVar2;\n            iVar5 = unaff_RBX;\n        }\n        iVar3 = fcn.00489060(uVar4);\n    } while (iVar3 < 0);\n    return arg1_00;\n}\n",
        "token_count": 885
    },
    "004893c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint8_t * fcn.004893c0(uint8_t *arg1)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    uint8_t *in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint8_t *puVar5;\n    uint8_t *arg2;\n    uint8_t *unaff_RBX;\n    uint32_t uVar6;\n    uint8_t *unaff_RDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uint32_t uStack100;\n    uchar auStack72 [8];\n    uint uStack64;\n    uint uStack60;\n    uchar auStack56 [8];\n    uint uStack48;\n    uint uStack44;\n    uint32_t auStack40 [7];\n    uint uStack12;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (unaff_RDI == NULL) {\n        return 0xffffffffffffffff;\n    }\n    if (unaff_RBX != 0x1) {\n        arg2 = unaff_RBX;\n        if (unaff_RBX < 9) goto code_r0x0048945d;\n        _auStack72 = in_XMM15;\n        _auStack56 = in_XMM15;\n        arg2 = NULL;\n        do {\n            if ((unaff_RDI <= arg2) || (uVar6 = arg1[arg2],  0x7f < arg1[arg2])) {\n                auStack40[0] = auStack72._0_4_;\n                auStack40[1] = auStack72._4_4_;\n                auStack40[2] = uStack64;\n                auStack40[3] = uStack60;\n                uStack12 = uStack44;\n                auStack40[4] = auStack56._0_4_;\n                auStack40[5] = auStack56._4_4_;\n                auStack40[6] = uStack48;\n                bVar1 = unaff_RDI <= arg2;\n                arg2 = unaff_RBX;\n                if (bVar1) {\n                    do {\n                        unaff_RBX = unaff_RBX + -1;\n                        if (unaff_RBX < 0) {\n                            return 0xffffffffffffffff;\n                        }\n                    } while ((auStack40[in_RAX[unaff_RBX] >> 5] >> (in_RAX[unaff_RBX] & 0x1f) & 1) == 0);\n                    return unaff_RBX;\n                }\ncode_r0x0048945d:\n                unaff_RBX = arg2;\n                if (unaff_RDI == 0x1) {\n                    uStack100 = *arg1;\n                    unaff_RDI = 0xfffd;\n                    uVar6 = uStack100;\n                    if (0x7f < *arg1) {\n                        uStack100 = 0xfffd;\n                        uVar6 = uStack100;\n                    }\n                }\n                else {\n                    while( true ) {\n                        if (unaff_RBX < 1) {\n                            return 0xffffffffffffffff;\n                        }\n                        if (arg2 < unaff_RBX) break;\n                        uVar6 = fcn.00464f60();\n                        iVar3 = fcn.00489060(uVar6);\n                        unaff_RBX = NULL;\n                        if (-1 < iVar3) {\n                            return NULL;\n                        }\n                    }\n                    puVar5 = arg2;\n                    fcn.0045e280(unaff_RBX, arg2);\n                    uVar6 = puVar5;\n                    unaff_RDI = arg2;\n                }\n                while( true ) {\n                    if (unaff_RBX < 1) {\n                        return 0xffffffffffffffff;\n                    }\n                    if (arg2 < unaff_RBX) break;\n                    uVar2 = fcn.00464f60();\n                    unaff_RBX = NULL;\n                    unaff_RDI = arg2;\n                    uVar6 = uStack100;\n                    if (uVar2 == uStack100) {\n                        return NULL;\n                    }\n                }\n                arg1 = unaff_RBX;\n                in_RAX = fcn.0045e280(unaff_RBX, arg2);\n            }\n            uVar4 = uVar6 >> 5;\n            *(auStack72 + uVar4 * 4) = *(auStack72 + uVar4 * 4) | 1 << (uVar6 & 0x1f);\n            arg2 = arg2 + 1;\n        } while( true );\n    }\n    uVar4 = *in_RAX;\n    if (0x7f < *in_RAX) {\n        uVar4 = 0xfffd;\n    }\n    iVar3 = fcn.00489060(uVar4);\n    if (iVar3 < 0) {\n        return 0xffffffffffffffff;\n    }\n    return NULL;\n}\n",
        "token_count": 1116
    },
    "00489660": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00489660(uint64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t arg1_00;\n    uint64_t arg2;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    int64_t unaff_RDI;\n    uint64_t in_R9;\n    uint64_t uVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            if (arg3 == 0) {\n                return 0;\n            }\n            if (unaff_RDI == 0) {\n                *(*0x20 + -0x60) = 0x48970e;\n                iVar1 = fcn.00488a20(arg3);\n                return iVar1;\n            }\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            if (arg3 < 0) {\n                *(*0x20 + -0x60) = 0x4896b6;\n                iVar1 = fcn.00488be0(arg1);\n                arg3 = iVar1 + 1;\n                unaff_RBX = *(*0x20 + 0x10);\n            }\n            if (unaff_RBX + 1 < arg3) {\n                arg3 = unaff_RBX + 1;\n            }\n            *(*0x20 + -0x30) = arg3;\n            *(*0x20 + -0x60) = 0x4896e5;\n            iVar1 = fcn.00447240(arg3);\n            *(*0x20 + -0x10) = iVar1;\n            arg1_00 = *(*0x20 + -0x30);\n            arg2 = arg1_00 - 1;\n            *(*0x20 + -0x20) = arg2;\n            unaff_RBX = *(*0x20 + 0x10);\n            unaff_RDI = *(*0x20 + 8);\n            for (uVar4 = 0; unaff_RSI = unaff_RBX,  uVar4 < arg2; uVar4 = uVar4 + 1) {\n                *(*0x20 + -0x28) = unaff_RBX;\n                *(*0x20 + -0x38) = uVar4;\n                *(*0x20 + -0x18) = unaff_RDI;\n                unaff_RDI = *(*0x20 + 0x20);\n                *(*0x20 + -0x60) = 0x48977d;\n                iVar2 = fcn.0048b080(*(*0x20 + 0x18), arg2);\n                if (iVar2 < 0) {\n                    iVar1 = *(*0x20 + -0x10);\n                    arg1_00 = *(*0x20 + -0x30);\n                    uVar4 = *(*0x20 + -0x38);\n                    unaff_RSI = *(*0x20 + -0x28);\n                    unaff_RDI = *(*0x20 + -0x18);\n                    break;\n                }\n                unaff_RSI = *(*0x20 + 0x28);\n                arg1 = unaff_RSI + iVar2;\n                arg2 = *(*0x20 + -0x28);\n                if (arg2 < arg1) goto code_r0x00489870;\n                uVar4 = *(*0x20 + -0x38);\n                arg1_00 = *(*0x20 + -0x30);\n                arg3 = uVar4;\n                if (arg1_00 <= uVar4) goto code_r0x00489865;\n                arg3 = uVar4 * 0x10;\n                iVar1 = *(*0x20 + -0x10);\n                *(iVar1 + 8 + arg3) = arg1;\n                unaff_RDI = iVar1 + arg3;\n                uVar3 = iVar2 + *(*0x20 + 0x20);\n                if (*0x801c20 == 0) {\n                    uVar6 = *(*0x20 + -0x18);\n                    *(iVar1 + arg3) = uVar6;\n                }\n                else {\n                    arg3 = *(*0x20 + -0x18);\n                    *(*0x20 + -0x60) = 0x4897ed;\n                    uVar3 = fcn.0045df20(arg1, arg2, arg3, arg1_00);\n                    uVar6 = arg3;\n                }\n                if (arg2 < uVar3) goto code_r0x0048985b;\n                unaff_RBX = arg2 - uVar3;\n                unaff_RDI = uVar6 + (uVar3 & -unaff_RBX >> 0x3f);\n                arg2 = *(*0x20 + -0x20);\n                arg3 = unaff_RBX;\n                in_R9 = arg1_00;\n            }\n            if (uVar4 < arg1_00) {\n                *(iVar1 + 8 + uVar4 * 0x10) = unaff_RSI;\n                if (*0x801c20 == 0) {\n                    *(iVar1 + uVar4 * 0x10) = unaff_RDI;\n                }\n                else {\n                    *(*0x20 + -0x60) = 0x489845;\n                    iVar1 = fcn.0045dee0(arg1_00, uVar4, arg3, in_R9);\n                }\n                return iVar1;\n            }\n            *(*0x20 + -0x60) = 0x48985b;\n            fcn.0045e240(arg1_00);\n            unaff_RBX = uVar4;\n            arg1_00 = in_R9;\ncode_r0x0048985b:\n            *(*0x20 + -0x60) = 0x489865;\n            fcn.0045e300(arg2);\ncode_r0x00489865:\n            arg1 = arg1_00;\n            *(*0x20 + -0x60) = 0x489870;\n            in_R9 = arg1;\n            fcn.0045e240(arg1);\ncode_r0x00489870:\n            *(*0x20 + -0x60) = 0x489875;\n            in_RAX = fcn.0045e280(arg1, arg2);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + 0x28) = unaff_RSI;\n        *(puVar5 + 0x30) = arg3;\n        *(puVar5 + -8) = 0x489899;\n        fcn.0045bb60();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        unaff_RSI = *(puVar5 + 0x28);\n        arg3 = *(puVar5 + 0x30);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1845
    },
    "004898c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.004898c0(int64_t arg1)\n\n{\n    ulong *in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    ulong *puVar5;\n    int64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t uVar7;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x004898c0:\n    puVar6 = *0x20;\n    uVar7 = unaff_RSI;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x40 && *0x20 + -0x40 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0xc0;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x20) = unaff_RDI;\n        if (unaff_RBX == 0) {\n            return 0;\n        }\n        if (unaff_RBX == 1) {\n            return *in_RAX;\n        }\n        uVar7 = unaff_RSI * (unaff_RBX + -1);\n        for (iVar1 = 0; iVar1 < unaff_RBX; iVar1 = iVar1 + 1) {\n            uVar7 = uVar7 + in_RAX[iVar1 * 2 + 1];\n        }\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        *(*0x20 + -0x28) = *0x20 + -0x28;\n        if (-1 < uVar7) {\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x58) = unaff_RBX + -1;\n            *(*0x20 + -0x60) = unaff_RSI;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 8) = in_RAX;\n            if (*(*0x20 + -0x10) - *(*0x20 + -0x18) < uVar7) {\n                *(*0x20 + -0x88) = *(*0x20 + -0x18);\n                iVar1 = uVar7 + *(*0x20 + -0x10) * 2;\n                *(*0x20 + -0x80) = iVar1;\n                *(*0x20 + -200) = 0x4899f0;\n                iVar1 = fcn.00447240(iVar1);\n                uVar7 = *(*0x20 + -0x88);\n                uVar4 = uVar7;\n                if (*(*0x20 + -0x18) < uVar7) {\n                    uVar4 = *(*0x20 + -0x18);\n                }\n                if (iVar1 != *(*0x20 + -0x20)) {\n                    *(*0x20 + -0x30) = iVar1;\n                    *(*0x20 + -200) = 0x489a25;\n                    fcn.0045ebc0(uVar4);\n                    iVar1 = *(*0x20 + -0x30);\n                    uVar7 = *(*0x20 + -0x88);\n                }\n                *(*0x20 + -0x18) = uVar7;\n                *(*0x20 + -0x10) = *(*0x20 + -0x80);\n                *(*0x20 + -0x20) = iVar1;\n                in_RAX = *(*0x20 + 8);\n                arg1 = *(*0x20 + 0x18);\n                unaff_RDI = *(*0x20 + 0x20);\n            }\n            iVar1 = in_RAX[1];\n            uVar3 = *in_RAX;\n            if (*(*0x20 + -0x28) == NULL) {\n                *(*0x20 + -0x28) = *0x20 + -0x28;\ncode_r0x00489aad:\n                uVar7 = *(*0x20 + -0x18);\n                *(*0x20 + -0x68) = iVar1 + uVar7;\n                uVar4 = *(*0x20 + -0x10);\n                uVar2 = *(*0x20 + -0x20);\n                if (uVar4 < iVar1 + uVar7) {\n                    *(*0x20 + -0x70) = uVar7;\n                    *(*0x20 + -0x90) = iVar1;\n                    *(*0x20 + -0x48) = uVar3;\n                    *(*0x20 + -200) = 0x489af7;\n                    uVar2 = fcn.00447360(uVar7);\n                    iVar1 = *(*0x20 + -0x90);\n                    unaff_RDI = uVar4;\n                    uVar4 = uVar7;\n                }\n                *(*0x20 + -0x70) = uVar4;\n                *(*0x20 + -0x38) = uVar2;\n                *(*0x20 + -200) = 0x489b28;\n                fcn.0045ebc0(iVar1);\n                *(*0x20 + -0x18) = *(*0x20 + -0x68);\n                *(*0x20 + -0x10) = *(*0x20 + -0x70);\n                *(*0x20 + -0x20) = *(*0x20 + -0x38);\n                puVar5 = (-(*(*0x20 + 0x18) + -1) >> 0x3f & 0x10) + *(*0x20 + 8);\n                uVar7 = *(*0x20 + 0x10);\n                if (uVar7 == 1) {\ncode_r0x00489b97:\n                    return *(*0x20 + -0x20);\n                }\n                arg1 = *(*0x20 + -0x60);\n                iVar1 = 0;\n                do {\n                    uVar3 = puVar5[1];\n                    uVar2 = *puVar5;\n                    if (*(*0x20 + -0x28) == NULL) {\n                        *(*0x20 + -0x28) = *0x20 + -0x28;\n                    }\n                    else if (*(*0x20 + -0x28) != *0x20 + -0x28) goto code_r0x00489dc5;\n                    *(*0x20 + -0x98) = uVar3;\n                    *(*0x20 + -0x50) = uVar2;\n                    *(*0x20 + -0x68) = iVar1;\n                    *(*0x20 + -0x40) = puVar5;\n                    uVar4 = *(*0x20 + -0x18);\n                    uVar7 = arg1 + uVar4;\n                    *(*0x20 + -0x70) = uVar7;\n                    uVar3 = *(*0x20 + -0x20);\n                    unaff_RDI = *(*0x20 + -0x10);\n                    if (*(*0x20 + -0x10) < uVar7) {\n                        *(*0x20 + -0x78) = uVar4;\n                        *(*0x20 + -200) = 0x489c6a;\n                        uVar3 = fcn.00447360(uVar4);\n                        arg1 = *(*0x20 + -0x60);\n                        unaff_RDI = uVar4;\n                    }\n                    *(*0x20 + -0x78) = unaff_RDI;\n                    *(*0x20 + -0x38) = uVar3;\n                    *(*0x20 + -200) = 0x489c98;\n                    fcn.0045ebc0(arg1);\n                    *(*0x20 + -0x18) = *(*0x20 + -0x70);\n                    *(*0x20 + -0x10) = *(*0x20 + -0x78);\n                    *(*0x20 + -0x20) = *(*0x20 + -0x38);\n                    if (*(*0x20 + -0x28) == NULL) {\n                        *(*0x20 + -0x28) = *0x20 + -0x28;\n                    }\n                    else if (*(*0x20 + -0x28) != *0x20 + -0x28) goto code_r0x00489dae;\n                    uVar7 = *(*0x20 + -0x18);\n                    iVar1 = *(*0x20 + -0x98);\n                    *(*0x20 + -0x70) = iVar1 + uVar7;\n                    uVar3 = *(*0x20 + -0x20);\n                    unaff_RDI = *(*0x20 + -0x10);\n                    if (*(*0x20 + -0x10) < iVar1 + uVar7) {\n                        *(*0x20 + -0x78) = uVar7;\n                        *(*0x20 + -200) = 0x489d39;\n                        uVar3 = fcn.00447360(uVar7);\n                        iVar1 = *(*0x20 + -0x98);\n                        unaff_RDI = uVar7;\n                    }\n                    *(*0x20 + -0x78) = unaff_RDI;\n                    *(*0x20 + -0x38) = uVar3;\n                    *(*0x20 + -200) = 0x489d67;\n                    fcn.0045ebc0(iVar1);\n                    *(*0x20 + -0x18) = *(*0x20 + -0x70);\n                    *(*0x20 + -0x10) = *(*0x20 + -0x78);\n                    *(*0x20 + -0x20) = *(*0x20 + -0x38);\n                    iVar1 = *(*0x20 + -0x68) + 1;\n                    uVar7 = *(*0x20 + -0x58);\n                    if (uVar7 <= iVar1) goto code_r0x00489b97;\n                    puVar5 = *(*0x20 + -0x40) + 0x10;\n                    arg1 = *(*0x20 + -0x60);\n                } while( true );\n            }\n            if (*(*0x20 + -0x28) == *0x20 + -0x28) goto code_r0x00489aad;\n            goto code_r0x00489dd8;\n        }\n        goto code_r0x00489deb;\n    }\n    goto code_r0x00489dff;\ncode_r0x00489dae:\n    *(*0x20 + -200) = 0x489dc5;\n    fcn.004334e0();\ncode_r0x00489dc5:\n    *(*0x20 + -200) = 0x489dd8;\n    fcn.004334e0();\ncode_r0x00489dd8:\n    *(*0x20 + -200) = 0x489deb;\n    fcn.004334e0();\ncode_r0x00489deb:\n    unaff_RBX = 0x732ab8;\n    *(*0x20 + -200) = 0x489dfe;\n    in_RAX = fcn.004334e0();\ncode_r0x00489dff:\n    *(puVar6 + 8) = in_RAX;\n    *(puVar6 + 0x10) = unaff_RBX;\n    *(puVar6 + 0x18) = arg1;\n    *(puVar6 + 0x20) = unaff_RDI;\n    *(puVar6 + 0x28) = uVar7;\n    *(puVar6 + -8) = 0x489e1d;\n    fcn.0045bb60();\n    in_RAX = *(puVar6 + 8);\n    unaff_RBX = *(puVar6 + 0x10);\n    arg1 = *(puVar6 + 0x18);\n    unaff_RDI = *(puVar6 + 0x20);\n    unaff_RSI = *(puVar6 + 0x28);\n    *0x20 = puVar6;\n    goto code_r0x004898c0;\n}\n",
        "token_count": 2790
    },
    "00489e40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\ncode ** fcn.00489e40(code **arg1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    code **in_RAX;\n    int64_t iVar5;\n    ulong uVar6;\n    int64_t iVar7;\n    uchar *arg1_00;\n    int64_t iVar8;\n    code **unaff_RBX;\n    code **ppcVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uchar *puVar11;\n    uchar *in_R8;\n    uchar *in_R9;\n    int64_t unaff_R14;\n    bool bVar12;\n    uchar in_XMM15 [16];\n    \ncode_r0x00489e40:\n    puVar10 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x40 && *0x20 + -0x40 != *(unaff_R14 + 0x10)) {\n        puVar10 = *0x20 + -0xc0;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        iVar8 = 0;\n        while (iVar8 < arg1) {\n            *(*0x20 + -0x68) = iVar8;\n            uVar3 = *(unaff_RBX + iVar8);\n            if (*(unaff_RBX + iVar8) < 0x80) {\n                arg1 = iVar8 + 1;\n            }\n            else {\n                *(*0x20 + -200) = 0x489edf;\n                uVar3 = fcn.00458880(iVar8);\n                in_RAX = *(*0x20 + 8);\n                unaff_RBX = arg1;\n            }\n            *(*0x20 + -0x74) = uVar3;\n            *(*0x20 + -0x48) = arg1;\n            pcVar1 = *in_RAX;\n            *(*0x20 + -200) = 0x489eff;\n            uVar2 = (*pcVar1)();\n            *(*0x20 + -0x78) = uVar2;\n            uVar3 = *(*0x20 + -0x74);\n            if (uVar2 != uVar3) {\n                if (uVar3 == 0xfffd) {\n                    arg1 = *(*0x20 + 0x18);\n                    ppcVar9 = *(*0x20 + -0x68);\n                    bVar12 = arg1 < ppcVar9;\n                    goto code_r0x00489f43;\n                }\n                if (uVar3 < 0) {\n                    arg1 = 0xffffffffffffffff;\n                }\n                else if (uVar3 < 0x80) {\n                    arg1 = 0x1;\n                }\n                else if (uVar3 < 0x800) {\n                    arg1 = 0x2;\n                }\n                else if (uVar3 - 0xd800 < 0x800) {\n                    arg1 = 0xffffffffffffffff;\n                }\n                else if (uVar3 < 0x10000) {\n                    arg1 = 0x3;\n                }\n                else if (uVar3 < 0x110000) {\n                    arg1 = 0x4;\n                }\n                else {\n                    arg1 = 0xffffffffffffffff;\n                }\n                in_R8 = uVar2;\n                ppcVar9 = arg1;\ncode_r0x0048a000:\n                in_R9 = *(*0x20 + -0x28);\n                if (in_R9 == NULL) {\n                    *(*0x20 + -0x28) = *0x20 + -0x28;\n                }\n                else if (in_R9 != *0x20 + -0x28) goto code_r0x0048a3fd;\n                in_RAX = *(*0x20 + 0x18);\n                in_R9 = in_RAX + 4;\n                if (in_R9 < 0) goto code_r0x0048a3ea;\n                *(*0x20 + -0x70) = ppcVar9;\n                if (*(*0x20 + -0x10) - *(*0x20 + -0x18) < in_R9) {\n                    *(*0x20 + -0x60) = *(*0x20 + -0x18);\n                    iVar8 = in_RAX + *(*0x20 + -0x10) * 2 + 4;\n                    *(*0x20 + -0x58) = iVar8;\n                    *(*0x20 + -200) = 0x48a09b;\n                    iVar5 = fcn.00447240(iVar8);\n                    iVar8 = *(*0x20 + -0x60);\n                    iVar7 = iVar8;\n                    if (*(*0x20 + -0x18) < iVar8) {\n                        iVar7 = *(*0x20 + -0x18);\n                    }\n                    if (iVar5 == *(*0x20 + -0x20)) {\n                        in_RAX = *(*0x20 + 0x18);\n                        arg1 = *(*0x20 + -0x68);\n                        bVar12 = in_RAX < arg1;\n                    }\n                    else {\n                        *(*0x20 + -0x30) = iVar5;\n                        *(*0x20 + -200) = 0x48a0de;\n                        fcn.0045ebc0(iVar7);\n                        in_RAX = *(*0x20 + 0x18);\n                        arg1 = *(*0x20 + -0x68);\n                        bVar12 = in_RAX < arg1;\n                        iVar5 = *(*0x20 + -0x30);\n                        iVar8 = *(*0x20 + -0x60);\n                    }\n                    *(*0x20 + -0x18) = iVar8;\n                    *(*0x20 + -0x10) = *(*0x20 + -0x58);\n                    *(*0x20 + -0x20) = iVar5;\n                    in_R8 = *(*0x20 + -0x78);\n                }\n                else {\n                    arg1 = *(*0x20 + -0x68);\n                    bVar12 = in_RAX < arg1;\n                }\n                if (bVar12) goto code_r0x0048a3e5;\n                in_R9 = *(*0x20 + -0x28);\n                if (in_R9 == NULL) {\n                    *(*0x20 + -0x28) = *0x20 + -0x28;\n                }\n                else if (in_R9 != *0x20 + -0x28) goto code_r0x0048a3d1;\n                arg1_00 = *(*0x20 + -0x18);\n                *(*0x20 + -0x48) = arg1 + arg1_00;\n                uVar6 = *(*0x20 + -0x20);\n                puVar11 = *(*0x20 + -0x10);\n                in_R9 = arg1_00;\n                if (*(*0x20 + -0x10) < arg1 + arg1_00) {\n                    *(*0x20 + -0x50) = arg1_00;\n                    *(*0x20 + -200) = 0x48a18f;\n                    uVar6 = fcn.00447360(arg1_00);\n                    in_R9 = *(*0x20 + -0x50);\n                    arg1 = *(*0x20 + -0x68);\n                    puVar11 = arg1_00;\n                }\n                *(*0x20 + -0x50) = puVar11;\n                *(*0x20 + -0x38) = uVar6;\n                *(*0x20 + -200) = 0x48a1bd;\n                fcn.0045ebc0(arg1);\n                *(*0x20 + -0x18) = *(*0x20 + -0x48);\n                *(*0x20 + -0x10) = *(*0x20 + -0x50);\n                in_RAX = *(*0x20 + -0x38);\n                *(*0x20 + -0x20) = in_RAX;\n                if (-1 < *(*0x20 + -0x78)) {\n                    *(*0x20 + -200) = 0x48a1fc;\n                    fcn.004887c0(arg1, in_RAX, in_R8, in_R9);\n                }\n                ppcVar9 = *(*0x20 + -0x70) + *(*0x20 + -0x68);\n                arg1 = *(*0x20 + 0x18);\n                if (arg1 < ppcVar9) goto code_r0x0048a3cc;\n                arg1 = arg1 - ppcVar9;\n                unaff_RBX = *(*0x20 + 0x10) + (ppcVar9 & -arg1 >> 0x3f);\n                in_RAX = *(*0x20 + 8);\n                break;\n            }\n            if (uVar3 == 0xfffd) {\n                arg1 = *(*0x20 + 0x18);\n                ppcVar9 = *(*0x20 + -0x68);\n                bVar12 = arg1 < ppcVar9;\ncode_r0x00489f43:\n                if (!bVar12) {\n                    ppcVar9 = arg1 - ppcVar9;\n                    *(*0x20 + -200) = 0x489f70;\n                    uVar3 = fcn.00464da0();\n                    if (ppcVar9 == 0x1) {\n                        in_R8 = *(*0x20 + -0x78);\n                    }\n                    else {\n                        in_R8 = *(*0x20 + -0x78);\n                        if (uVar3 == *(*0x20 + -0x78)) goto code_r0x00489e94;\n                    }\n                    goto code_r0x0048a000;\n                }\n                goto code_r0x0048a410;\n            }\ncode_r0x00489e94:\n            in_RAX = *(*0x20 + 8);\n            arg1 = *(*0x20 + 0x18);\n            unaff_RBX = *(*0x20 + 0x10);\n            iVar8 = *(*0x20 + -0x48);\n        }\n        if (*(*0x20 + -0x10) == 0) {\n            return unaff_RBX;\n        }\n        *(*0x20 + -0x48) = arg1;\n        *(*0x20 + -0x40) = unaff_RBX;\n        iVar8 = 0;\n        do {\n            if (arg1 <= iVar8) {\n                return *(*0x20 + -0x20);\n            }\n            if (*(iVar8 + unaff_RBX) < 0x80) {\n                arg1 = iVar8 + 1;\n            }\n            else {\n                *(*0x20 + -200) = 0x48a2bc;\n                fcn.00458880(iVar8);\n                in_RAX = *(*0x20 + 8);\n            }\n            *(*0x20 + -0x50) = arg1;\n            arg1 = *in_RAX;\n            *(*0x20 + -200) = 0x48a2d8;\n            iVar4 = (*arg1)();\n            if (-1 < iVar4) {\n                if (iVar4 < 0x80) {\n                    in_R8 = *(*0x20 + -0x28);\n                    if (in_R8 == NULL) {\n                        *(*0x20 + -0x28) = *0x20 + -0x28;\n                    }\n                    else {\n                        in_R9 = *0x20 + -0x28;\n                        if (in_R8 != in_R9) goto code_r0x0048a3b9;\n                    }\n                    iVar8 = *(*0x20 + -0x18);\n                    in_R8 = iVar8 + 1;\n                    iVar5 = *(*0x20 + -0x20);\n                    iVar7 = iVar5;\n                    if (*(*0x20 + -0x10) < in_R8) {\n                        *(*0x20 + -0x7c) = iVar4;\n                        *(*0x20 + -200) = 0x48a353;\n                        iVar7 = fcn.00447360(iVar8);\n                        *(*0x20 + -0x10) = iVar8;\n                        *(*0x20 + -0x20) = iVar7;\n                        iVar4 = *(*0x20 + -0x7c);\n                        iVar8 = iVar5;\n                    }\n                    *(*0x20 + -0x18) = iVar8 + 1;\n                    *(iVar7 + iVar8) = iVar4;\n                }\n                else {\n                    *(*0x20 + -200) = 0x48a394;\n                    fcn.004887c0(arg1, in_RAX, in_R8, in_R9);\n                }\n            }\n            in_RAX = *(*0x20 + 8);\n            arg1 = *(*0x20 + -0x48);\n            unaff_RBX = *(*0x20 + -0x40);\n            iVar8 = *(*0x20 + -0x50);\n        } while( true );\n    }\n    goto code_r0x0048a419;\ncode_r0x0048a3b9:\n    *(*0x20 + -200) = 0x48a3cc;\n    fcn.004334e0();\ncode_r0x0048a3cc:\n    *(*0x20 + -200) = 0x48a3d1;\n    fcn.0045e300(arg1);\ncode_r0x0048a3d1:\n    *(*0x20 + -200) = 0x48a3e5;\n    fcn.004334e0();\ncode_r0x0048a3e5:\n    *(*0x20 + -200) = 0x48a3ea;\n    fcn.0045e280(arg1, in_RAX);\ncode_r0x0048a3ea:\n    *(*0x20 + -200) = 0x48a3fd;\n    fcn.004334e0();\ncode_r0x0048a3fd:\n    unaff_RBX = 0x732918;\n    *(*0x20 + -200) = 0x48a410;\n    fcn.004334e0();\ncode_r0x0048a410:\n    *(*0x20 + -200) = 0x48a418;\n    in_RAX = fcn.0045e300(arg1);\ncode_r0x0048a419:\n    *(puVar10 + 8) = in_RAX;\n    *(puVar10 + 0x10) = unaff_RBX;\n    *(puVar10 + 0x18) = arg1;\n    *(puVar10 + -8) = 0x48a42d;\n    fcn.0045bb60();\n    in_RAX = *(puVar10 + 8);\n    unaff_RBX = *(puVar10 + 0x10);\n    arg1 = *(puVar10 + 0x18);\n    *0x20 = puVar10;\n    goto code_r0x00489e40;\n}\n",
        "token_count": 3454
    },
    "0048b080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0048b080(uint8_t *arg1, uint8_t *arg2)\n\n{\n    uint8_t *arg1_00;\n    char cVar1;\n    int64_t in_RAX;\n    uint8_t *unaff_RBX;\n    uint8_t *puVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint8_t uVar5;\n    uint8_t *unaff_RDI;\n    uint64_t noname_2;\n    uint8_t *arg1_01;\n    uint8_t *puVar6;\n    uint8_t *unaff_R12;\n    uint8_t *puVar7;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar2 = unaff_RBX;\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            if (unaff_RDI == NULL) {\n                return 0;\n            }\n            if (unaff_RDI == 0x1) {\n                uVar5 = *arg1;\n                *(*0x20 + -0x80) = in_RAX;\n                *(*0x20 + -0x78) = unaff_RBX;\n                *(*0x20 + -0x70) = uVar5;\n                *(*0x20 + -0x88) = 0x48b1f0;\n                fcn.00402ea0(uVar5, arg2);\n                return *(*0x20 + -0x68);\n            }\n            if (unaff_RBX == unaff_RDI) {\n                *(*0x20 + -0x88) = 0x48b1ba;\n                cVar1 = fcn.00402a00(unaff_RDI, arg2);\n                if (cVar1 == '\\0') {\n                    return -1;\n                }\n                return 0;\n            }\n            if (unaff_RBX < unaff_RDI) {\n                return -1;\n            }\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*0x801a20 < unaff_RDI) {\n                uVar5 = *arg1;\n                *(*0x20 + -0x52) = uVar5;\n                noname_2 = arg1[1];\n                *(*0x20 + -0x54) = arg1[1];\n                puVar2 = unaff_RBX + -unaff_RDI;\n                *(*0x20 + -0x10) = puVar2;\n                arg1_01 = puVar2 + 1;\n                *(*0x20 + -0x50) = arg1_01;\n                iVar3 = 0;\n                puVar7 = NULL;\n                while( true ) {\n                    puVar6 = puVar7;\n                    if (arg1_01 <= puVar6) {\n                        return -1;\n                    }\n                    puVar7 = unaff_R12;\n                    if (unaff_RBX <= puVar6) goto code_r0x0048b478;\n                    *(*0x20 + -0x30) = iVar3;\n                    puVar7 = puVar6[in_RAX];\n                    if (puVar6[in_RAX] != uVar5) {\n                        if (unaff_RBX < arg1_01) goto code_r0x0048b470;\n                        puVar7 = puVar6 + 1;\n                        if (arg1_01 < puVar7) goto code_r0x0048b465;\n                        *(*0x20 + -0x40) = puVar6;\n                        iVar3 = puVar2 - puVar6;\n                        *(*0x20 + -0x80) = (-iVar3 >> 0x3f & puVar7) + in_RAX;\n                        *(*0x20 + -0x78) = iVar3;\n                        *(*0x20 + -0x70) = uVar5;\n                        *(*0x20 + -0x88) = 0x48b28a;\n                        fcn.00402ea0(arg1, iVar3);\n                        unaff_R14 = **(in_GS_OFFSET + 0x28);\n                        if (*(*0x20 + -0x68) < 0) {\n                            return -1;\n                        }\n                        puVar6 = *(*0x20 + -0x68) + *(*0x20 + -0x40) + 1;\n                        in_RAX = *(*0x20 + 8);\n                        arg1 = *(*0x20 + 0x18);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        puVar2 = *(*0x20 + -0x10);\n                        uVar5 = *(*0x20 + -0x52);\n                        unaff_RDI = *(*0x20 + 0x20);\n                        noname_2 = *(*0x20 + -0x54);\n                        arg1_01 = *(*0x20 + -0x50);\n                        iVar3 = *(*0x20 + -0x30);\n                    }\n                    puVar7 = puVar6 + 1;\n                    if (unaff_RBX <= puVar7) goto code_r0x0048b459;\n                    *(*0x20 + -0x18) = puVar6;\n                    if (puVar6[in_RAX + 1] == noname_2) break;\ncode_r0x0048b3a3:\n                    iVar3 = iVar3 + 1;\n                    unaff_R12 = (puVar7 >> 4) + 4;\n                    if ((unaff_R12 <= iVar3) && (puVar7 < arg1_01)) {\n                        *(*0x20 + -0x88) = 0x48b3e8;\n                        iVar3 = fcn.004021c0(arg1, unaff_RBX + (-1 - puVar6), noname_2, arg1_01);\n                        if (-1 < iVar3) {\n                            return iVar3 + *(*0x20 + -0x18) + 1;\n                        }\n                        return -1;\n                    }\n                }\n                arg1_00 = puVar6 + unaff_RDI;\n                if (arg1_00 <= unaff_RBX) {\n                    if (puVar6 <= arg1_00) {\n                        *(*0x20 + -0x20) = puVar7;\n                        *(*0x20 + -0x88) = 0x48b357;\n                        cVar1 = fcn.00402a00(unaff_RDI, unaff_RDI);\n                        if (cVar1 != '\\0') {\n                            return *(*0x20 + -0x18);\n                        }\n                        in_RAX = *(*0x20 + 8);\n                        arg1 = *(*0x20 + 0x18);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        puVar2 = *(*0x20 + -0x10);\n                        uVar5 = *(*0x20 + -0x52);\n                        unaff_RDI = *(*0x20 + 0x20);\n                        noname_2 = *(*0x20 + -0x54);\n                        arg1_01 = *(*0x20 + -0x50);\n                        puVar6 = *(*0x20 + -0x18);\n                        iVar3 = *(*0x20 + -0x30);\n                        puVar7 = *(*0x20 + -0x20);\n                        goto code_r0x0048b3a3;\n                    }\n                    *(*0x20 + -0x88) = 0x48b451;\n                    fcn.0045e300(arg1_00);\n                }\n                *(*0x20 + -0x88) = 0x48b459;\n                fcn.0045e280(arg1_00, unaff_RBX);\ncode_r0x0048b459:\n                *(*0x20 + -0x88) = 0x48b465;\n                fcn.0045e240(unaff_RBX);\ncode_r0x0048b465:\n                *(*0x20 + -0x88) = 0x48b470;\n                fcn.0045e300(arg1_01);\ncode_r0x0048b470:\n                *(*0x20 + -0x88) = 0x48b478;\n                fcn.0045e280(arg1_01, unaff_RBX);\ncode_r0x0048b478:\n                arg1 = unaff_RBX;\n                *(*0x20 + -0x88) = 0x48b485;\n                unaff_RBX = arg1;\n                in_RAX = fcn.0045e240(arg1);\n                unaff_R12 = puVar7;\n            }\n            else {\n                if (unaff_RBX < 0x41) {\n                    *(*0x20 + -0x80) = in_RAX;\n                    *(*0x20 + -0x78) = unaff_RBX;\n                    *(*0x20 + -0x70) = arg1;\n                    *(*0x20 + -0x68) = unaff_RDI;\n                    *(*0x20 + -0x88) = 0x48b147;\n                    fcn.00402d40(arg1);\n                    return *(*0x20 + -0x60);\n                }\n                uVar5 = *arg1;\n                *(*0x20 + -0x51) = uVar5;\n                noname_2 = arg1[1];\n                *(*0x20 + -0x53) = arg1[1];\n                puVar2 = unaff_RBX + -unaff_RDI;\n                *(*0x20 + -0x10) = puVar2;\n                arg1_01 = puVar2 + 1;\n                *(*0x20 + -0x48) = arg1_01;\n                iVar3 = 0;\n                puVar7 = NULL;\n            }\n            while( true ) {\n                puVar6 = puVar7;\n                if (arg1_01 <= puVar6) {\n                    return -1;\n                }\n                if (unaff_RBX <= puVar6) goto code_r0x0048b70d;\n                *(*0x20 + -0x28) = iVar3;\n                unaff_R12 = puVar6[in_RAX];\n                if (puVar6[in_RAX] != uVar5) {\n                    if (unaff_RBX < arg1_01) goto code_r0x0048b705;\n                    unaff_R12 = puVar6 + 1;\n                    if (arg1_01 < unaff_R12) goto code_r0x0048b6f8;\n                    *(*0x20 + -0x38) = puVar6;\n                    iVar3 = puVar2 - puVar6;\n                    *(*0x20 + -0x80) = in_RAX + (unaff_R12 & -iVar3 >> 0x3f);\n                    *(*0x20 + -0x78) = iVar3;\n                    *(*0x20 + -0x70) = uVar5;\n                    *(*0x20 + -0x88) = 0x48b4f5;\n                    fcn.00402ea0(arg1, iVar3);\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    if (*(*0x20 + -0x68) < 0) {\n                        return -1;\n                    }\n                    puVar6 = *(*0x20 + -0x38) + *(*0x20 + -0x68) + 1;\n                    in_RAX = *(*0x20 + 8);\n                    arg1 = *(*0x20 + 0x18);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    puVar2 = *(*0x20 + -0x10);\n                    uVar5 = *(*0x20 + -0x51);\n                    unaff_RDI = *(*0x20 + 0x20);\n                    noname_2 = *(*0x20 + -0x53);\n                    arg1_01 = *(*0x20 + -0x48);\n                    iVar3 = *(*0x20 + -0x28);\n                }\n                unaff_R12 = puVar6 + 1;\n                if (unaff_RBX <= unaff_R12) goto code_r0x0048b6ed;\n                *(*0x20 + -0x18) = puVar6;\n                if (puVar6[in_RAX + 1] == noname_2) break;\ncode_r0x0048b60c:\n                iVar3 = iVar3 + 1;\n                puVar7 = unaff_R12;\n                if (puVar6 + ((puVar6 + 0x11 >> 0x3f) >> 0x3d) + 0x11 >> 3 < iVar3) {\n                    *(*0x20 + -0x80) = in_RAX + (unaff_R12 & -(unaff_RBX + (-1 - puVar6)) >> 0x3f);\n                    *(*0x20 + -0x78) = unaff_RBX + (-1 - puVar6);\n                    *(*0x20 + -0x70) = arg1;\n                    *(*0x20 + -0x68) = unaff_RDI;\n                    *(*0x20 + -0x88) = 0x48b65f;\n                    fcn.00402d40(arg1);\n                    if (*(*0x20 + -0x60) < 0) {\n                        return -1;\n                    }\n                    return *(*0x20 + -0x60) + *(*0x20 + -0x18) + 1;\n                }\n            }\n            puVar7 = puVar6 + unaff_RDI;\n            if (puVar7 <= unaff_RBX) {\n                if (puVar6 <= puVar7) {\n                    *(*0x20 + -0x20) = unaff_R12;\n                    *(*0x20 + -0x88) = 0x48b5b9;\n                    cVar1 = fcn.00402a00(unaff_RDI, unaff_RDI);\n                    if (cVar1 != '\\0') {\n                        return *(*0x20 + -0x18);\n                    }\n                    in_RAX = *(*0x20 + 8);\n                    arg1 = *(*0x20 + 0x18);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    puVar2 = *(*0x20 + -0x10);\n                    uVar5 = *(*0x20 + -0x51);\n                    unaff_RDI = *(*0x20 + 0x20);\n                    noname_2 = *(*0x20 + -0x53);\n                    arg1_01 = *(*0x20 + -0x48);\n                    puVar6 = *(*0x20 + -0x18);\n                    iVar3 = *(*0x20 + -0x28);\n                    unaff_R12 = *(*0x20 + -0x20);\n                    goto code_r0x0048b60c;\n                }\n                *(*0x20 + -0x88) = 0x48b6e5;\n                fcn.0045e300(puVar7);\n            }\n            *(*0x20 + -0x88) = 0x48b6ed;\n            fcn.0045e280(puVar7, unaff_RBX);\ncode_r0x0048b6ed:\n            *(*0x20 + -0x88) = 0x48b6f8;\n            fcn.0045e240(unaff_RBX);\ncode_r0x0048b6f8:\n            *(*0x20 + -0x88) = 0x48b705;\n            fcn.0045e300(arg1_01);\ncode_r0x0048b705:\n            *(*0x20 + -0x88) = 0x48b70d;\n            fcn.0045e280(arg1_01, unaff_RBX);\ncode_r0x0048b70d:\n            arg1 = unaff_RBX;\n            *(*0x20 + -0x88) = 0x48b718;\n            arg2 = arg1;\n            in_RAX = fcn.0045e240(arg1);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = puVar2;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + -8) = 0x48b732;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 3886
    },
    "0048b860": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0048bf3c)\n// WARNING: Removing unreachable block (ram,0x0048bf37)\n\nvoid fcn.0048b860(ulong param_1, char *param_2)\n\n{\n    uint8_t uVar1;\n    int64_t arg1;\n    bool bVar2;\n    ulong in_RAX;\n    char *pcVar3;\n    int64_t iVar4;\n    char *arg1_00;\n    char *arg2;\n    char *unaff_RBX;\n    char *pcVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    char *unaff_RSI;\n    char *pcVar7;\n    char cVar8;\n    char cVar9;\n    char *pcVar10;\n    int64_t unaff_R14;\n    char *pcVar11;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xb8 && *0x20 + -0xb8 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x138;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x140) = 0x48b89e;\n            pcVar3 = fcn.0048ca80();\n            pcVar11 = *(*0x20 + 0x10);\n            if (pcVar3 <= pcVar11) {\n                pcVar5 = pcVar11 + -pcVar3;\n                unaff_RBX = -pcVar5 >> 0x3f & pcVar3;\n                iVar4 = *(*0x20 + 8);\n                arg2 = unaff_RBX + iVar4;\n                if (pcVar5 == NULL) {\n                    if ((1 < pcVar3) && (*(iVar4 + 1) != ':')) {\n                        *(*0x20 + -0x140) = 0x48baef;\n                        fcn.0048a6e0(0x4aebde, param_2, 1, 0xffffffffffffffff);\n                        return;\n                    }\n                    *(*0x20 + -0x140) = 0x48bb15;\n                    fcn.0044ae80(pcVar11);\n                    return;\n                }\n                if (unaff_RBX[iVar4] == '\\\\') {\n                    pcVar10 = 0x1;\n                }\n                else {\n                    pcVar10 = unaff_RBX[iVar4] == '/';\n                }\n                *(*0x20 + -200) = pcVar5;\n                *(*0x20 + -0xa0) = arg2;\n                *(*0x20 + -0xfa) = pcVar10;\n                *(*0x20 + -0x50) = in_XMM15;\n                *(*0x20 + -0x48) = in_XMM15;\n                *(*0x20 + -0x38) = in_XMM15;\n                *(*0x20 + -0x28) = in_XMM15;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x50) = arg2;\n                *(*0x20 + -0x48) = pcVar5;\n                *(*0x20 + -0x20) = iVar4;\n                *(*0x20 + -0x18) = pcVar11;\n                *(*0x20 + -0x10) = pcVar3;\n                *(*0x20 + -0x98) = *(*0x20 + -0x50);\n                *(*0x20 + -0x90) = *(*0x20 + -0x48);\n                *(*0x20 + -0x8c) = *(*0x20 + -0x44);\n                *(*0x20 + -0x88) = *(*0x20 + -0x40);\n                *(*0x20 + -0x84) = *(*0x20 + -0x3c);\n                *(*0x20 + -0x80) = *(*0x20 + -0x38);\n                *(*0x20 + -0x7c) = *(*0x20 + -0x34);\n                *(*0x20 + -0x78) = *(*0x20 + -0x30);\n                *(*0x20 + -0x74) = *(*0x20 + -0x2c);\n                *(*0x20 + -0x70) = *(*0x20 + -0x28);\n                *(*0x20 + -0x6c) = *(*0x20 + -0x24);\n                *(*0x20 + -0x68) = *(*0x20 + -0x20);\n                *(*0x20 + -100) = *(*0x20 + -0x1c);\n                *(*0x20 + -0x60) = *(*0x20 + -0x18);\n                *(*0x20 + -0x5c) = *(*0x20 + -0x14);\n                *(*0x20 + -0x58) = *(*0x20 + -0x10);\n                *(*0x20 + -0x54) = *(*0x20 + -0xc);\n                if (pcVar10 == '\\0') {\n                    pcVar3 = NULL;\n                    pcVar11 = pcVar3;\n                    arg1_00 = pcVar5;\ncode_r0x0048bb28:\n                    pcVar5 = pcVar11;\n                    if (arg1_00 <= pcVar5) {\n                        if (*(*0x20 + -0x70) == 0) {\n                            if (*(*0x20 + -0x88) == 0) {\n                                iVar4 = *(*0x20 + -0x90);\n                                arg1_00 = *(*0x20 + -0x98);\n                                if ((0 < iVar4) && (*arg1_00 == '.')) {\n                                    *(*0x20 + -0x70) = 1;\n                                    goto code_r0x0048c168;\n                                }\n                                *(*0x20 + -200) = iVar4;\n                                *(*0x20 + -0x140) = 0x48c0e7;\n                                pcVar3 = fcn.00447240(iVar4);\n                                pcVar11 = *(*0x20 + -200);\n                                *(*0x20 + -0x80) = pcVar11;\n                                *(*0x20 + -0x78) = pcVar11;\n                                *(*0x20 + -0x88) = pcVar3;\n                                unaff_RBX = *(*0x20 + -0x98);\n                                param_2 = *(*0x20 + -0x90);\n                                unaff_RSI = *(*0x20 + -0x70);\n                                arg2 = param_2;\n                                if (param_2 < unaff_RSI) goto code_r0x0048c25f;\n                                if (unaff_RSI < pcVar11) {\n                                    pcVar11 = unaff_RSI;\n                                }\n                                if (pcVar3 != unaff_RBX) {\n                                    *(*0x20 + -0x140) = 0x48c13a;\n                                    fcn.0045ebc0(pcVar11);\n                                }\n                            }\n                            pcVar11 = *(*0x20 + -0x80);\n                            arg1_00 = *(*0x20 + -0x88);\n                            if (*(*0x20 + -0x70) < pcVar11) {\n                                arg1_00[*(*0x20 + -0x70)] = '.';\n                                *(*0x20 + -0x70) = *(*0x20 + -0x70) + 1;\n                                goto code_r0x0048c168;\n                            }\n                        }\n                        else {\ncode_r0x0048c168:\n                            unaff_RBX = *(*0x20 + -0x88);\n                            pcVar3 = *(*0x20 + -0x78);\n                            if (unaff_RBX == NULL) {\n                                pcVar3 = *(*0x20 + -0x60);\n                                arg1_00 = *(*0x20 + -0x68);\n                                if (*(*0x20 + -0x58) + *(*0x20 + -0x70) <= pcVar3) {\ncode_r0x0048c213:\n                                    *(*0x20 + -0x140) = 0x48c235;\n                                    fcn.0048a6e0(0x4aebde, pcVar3, 1, 0xffffffffffffffff);\n                                    return;\n                                }\n                                *(*0x20 + -0x140) = 0x48c24a;\n                                fcn.0045e280(*(*0x20 + -0x58) + *(*0x20 + -0x70), pcVar3);\ncode_r0x0048c24a:\n                                *(*0x20 + -0x140) = 0x48c252;\n                                pcVar11 = unaff_RSI;\n                                fcn.0045e2c0(unaff_RSI, pcVar3);\n                            }\n                            else {\n                                unaff_RSI = *(*0x20 + -0x60);\n                                pcVar11 = *(*0x20 + -0x58);\n                                if (pcVar11 <= unaff_RSI) {\n                                    unaff_RSI = *(*0x20 + -0x70);\n                                    if (unaff_RSI <= pcVar3) {\n                                        *(*0x20 + -0xa0) = *(*0x20 + -0x68);\n                                        *(*0x20 + -200) = pcVar11;\n                                        *(*0x20 + -0x140) = 0x48c1c9;\n                                        fcn.0044b220(unaff_RSI);\n                                        *(*0x20 + -0x140) = 0x48c1e5;\n                                        fcn.0044ae80(*(*0x20 + -200));\n                                        goto code_r0x0048c213;\n                                    }\n                                    goto code_r0x0048c24a;\n                                }\n                            }\n                            *(*0x20 + -0x140) = 0x48c25a;\n                            param_2 = unaff_RSI;\n                            fcn.0045e280(pcVar11, unaff_RSI);\n                        }\n                        *(*0x20 + -0x140) = 0x48c25f;\n                        fcn.0045e240(pcVar11);\n                        arg2 = param_2;\ncode_r0x0048c25f:\n                        *(*0x20 + -0x140) = 0x48c267;\n                        pcVar3 = unaff_RSI;\n                        pcVar5 = fcn.0045e280(unaff_RSI, arg2);\n                        goto code_r0x0048c267;\n                    }\n                    if (arg1_00 <= pcVar5) goto code_r0x0048c670;\n                    cVar8 = pcVar5[arg2];\n                    if ((cVar8 == '\\\\') || (cVar8 == '/')) {\n                        pcVar11 = pcVar5 + 1;\n                        goto code_r0x0048bb28;\n                    }\n                    *(*0x20 + -0xf0) = pcVar3;\n                    cVar9 = pcVar10;\n                    if (cVar8 != '.') {\ncode_r0x0048bf4a:\n                        if (cVar9 == '\\0') {\ncode_r0x0048bf69:\n                            if (*(*0x20 + -0x70) != 0) {\ncode_r0x0048bf78:\n                                if (*(*0x20 + -0x88) == 0) {\n                                    *(*0x20 + -0xf8) = pcVar5;\n                                    pcVar7 = *(*0x20 + -0x70);\n                                    unaff_RBX = *(*0x20 + -0x90);\n                                    if (unaff_RBX <= pcVar7) {\ncode_r0x0048bfca:\n                                        *(*0x20 + -0xd0) = unaff_RBX;\n                                        *(*0x20 + -0x140) = 0x48bfde;\n                                        pcVar3 = fcn.00447240(unaff_RBX);\n                                        pcVar11 = *(*0x20 + -0xd0);\n                                        *(*0x20 + -0x80) = pcVar11;\n                                        *(*0x20 + -0x78) = pcVar11;\n                                        *(*0x20 + -0x88) = pcVar3;\n                                        unaff_RBX = *(*0x20 + -0x98);\n                                        arg2 = *(*0x20 + -0x90);\n                                        unaff_RSI = *(*0x20 + -0x70);\n                                        if (unaff_RSI <= arg2) {\n                                            if (unaff_RSI < pcVar11) {\n                                                pcVar11 = unaff_RSI;\n                                            }\n                                            if (pcVar3 != unaff_RBX) {\n                                                *(*0x20 + -0x140) = 0x48c02d;\n                                                fcn.0045ebc0(pcVar11);\n                                            }\n                                            pcVar5 = *(*0x20 + -0xf8);\n                                            pcVar3 = *(*0x20 + -0xf0);\n                                            arg2 = *(*0x20 + -0xa0);\n                                            arg1_00 = *(*0x20 + -200);\n                                            pcVar10 = *(*0x20 + -0xfa);\n                                            goto code_r0x0048c04a;\n                                        }\n                                        goto code_r0x0048c3d0;\n                                    }\n                                    if (pcVar7 < unaff_RBX) {\n                                        if (pcVar7[*(*0x20 + -0x98)] == '\\\\') {\n                                            *(*0x20 + -0x70) = pcVar7 + 1;\n                                            goto code_r0x0048c26a;\n                                        }\n                                        goto code_r0x0048bfca;\n                                    }\n                                }\n                                else {\ncode_r0x0048c04a:\n                                    pcVar7 = *(*0x20 + -0x80);\n                                    if (*(*0x20 + -0x70) < pcVar7) {\n                                        (*(*0x20 + -0x70))[*(*0x20 + -0x88)] = '\\\\';\n                                        *(*0x20 + -0x70) = *(*0x20 + -0x70) + 1;\n                                        goto code_r0x0048c26a;\n                                    }\ncode_r0x0048c3c5:\n                                    *(*0x20 + -0x140) = 0x48c3d0;\n                                    fcn.0045e240(pcVar7);\ncode_r0x0048c3d0:\n                                    *(*0x20 + -0x140) = 0x48c3d8;\n                                    fcn.0045e280(unaff_RSI, arg2);\n                                }\n                                *(*0x20 + -0x140) = 0x48c3e5;\n                                pcVar3 = unaff_RBX;\n                                fcn.0045e240(unaff_RBX);\n                                pcVar11 = pcVar7;\n                                param_2 = arg2;\n                                goto code_r0x0048bb28;\n                            }\n                        }\n                        else {\n                            if (*(*0x20 + -0x70) != 1) goto code_r0x0048bf78;\n                            if (cVar9 == '\\0') goto code_r0x0048bf69;\n                        }\ncode_r0x0048c26a:\n                        for (; pcVar11 = pcVar5,  param_2 = arg2,  pcVar5 < arg1_00; pcVar5 = pcVar5 + 1) {\n                            uVar1 = pcVar5[arg2];\n                            pcVar7 = uVar1;\n                            if ((uVar1 == 0x5c) || (uVar1 == 0x2f)) break;\n                            if (*(*0x20 + -0x88) == 0) {\n                                *(*0x20 + -0xe0) = pcVar5;\n                                *(*0x20 + -0xf9) = uVar1;\n                                pcVar11 = *(*0x20 + -0x70);\n                                unaff_RBX = *(*0x20 + -0x90);\n                                if (unaff_RBX <= pcVar11) {\ncode_r0x0048c2ef:\n                                    *(*0x20 + -0xd0) = unaff_RBX;\n                                    *(*0x20 + -0x140) = 0x48c305;\n                                    pcVar3 = fcn.00447240(unaff_RBX);\n                                    pcVar11 = *(*0x20 + -0xd0);\n                                    *(*0x20 + -0x80) = pcVar11;\n                                    *(*0x20 + -0x78) = pcVar11;\n                                    *(*0x20 + -0x88) = pcVar3;\n                                    unaff_RBX = *(*0x20 + -0x98);\n                                    arg2 = *(*0x20 + -0x90);\n                                    unaff_RSI = *(*0x20 + -0x70);\n                                    if (unaff_RSI <= arg2) {\n                                        if (unaff_RSI < pcVar11) {\n                                            pcVar11 = unaff_RSI;\n                                        }\n                                        if (pcVar3 != unaff_RBX) {\n                                            *(*0x20 + -0x140) = 0x48c350;\n                                            fcn.0045ebc0(pcVar11);\n                                        }\n                                        pcVar5 = *(*0x20 + -0xe0);\n                                        pcVar3 = *(*0x20 + -0xf0);\n                                        arg2 = *(*0x20 + -0xa0);\n                                        arg1_00 = *(*0x20 + -200);\n                                        pcVar7 = *(*0x20 + -0xf9);\n                                        pcVar10 = *(*0x20 + -0xfa);\n                                        goto code_r0x0048c373;\n                                    }\n                                    goto code_r0x0048c3b2;\n                                }\n                                if (pcVar11 < unaff_RBX) {\n                                    if (pcVar11[*(*0x20 + -0x98)] != uVar1) goto code_r0x0048c2ef;\n                                    *(*0x20 + -0x70) = pcVar11 + 1;\n                                    goto code_r0x0048c267;\n                                }\ncode_r0x0048c3ba:\n                                *(*0x20 + -0x140) = 0x48c3c5;\n                                fcn.0045e240(unaff_RBX);\n                                goto code_r0x0048c3c5;\n                            }\ncode_r0x0048c373:\n                            unaff_RBX = pcVar10 & 0xffffffff;\n                            pcVar10 = *(*0x20 + -0x70);\n                            if (*(*0x20 + -0x80) <= pcVar10) {\n                                *(*0x20 + -0x140) = 0x48c3b2;\n                                fcn.0045e240(*(*0x20 + -0x80));\ncode_r0x0048c3b2:\n                                *(*0x20 + -0x140) = 0x48c3ba;\n                                fcn.0045e280(unaff_RSI, arg2);\n                                goto code_r0x0048c3ba;\n                            }\n                            pcVar10[*(*0x20 + -0x88)] = pcVar7;\n                            *(*0x20 + -0x70) = *(*0x20 + -0x70) + 1;\n                            pcVar10 = unaff_RBX;\ncode_r0x0048c267:\n                        }\n                        goto code_r0x0048bb28;\n                    }\n                    pcVar11 = pcVar5 + 1;\n                    if (arg1_00 == pcVar11) goto code_r0x0048bb28;\n                    if (arg1_00 <= pcVar11) goto code_r0x0048c665;\n                    cVar8 = (pcVar5 + 1)[arg2];\n                    if (cVar8 == '\\\\') goto code_r0x0048c4b4;\n                    if (cVar8 == '/') goto code_r0x0048c4b4;\n                    if (pcVar11 < arg1_00) {\n                        if (cVar8 != '.') goto code_r0x0048bf4a;\n                        pcVar7 = pcVar5 + 2;\n                        if (arg1_00 != pcVar7) {\n                            if (arg1_00 <= pcVar7) {\ncode_r0x0048c49b:\n                                *(*0x20 + -0x140) = 0x48c4a6;\n                                fcn.0045e240(arg1_00);\n                                goto code_r0x0048c4a6;\n                            }\n                            if (((pcVar5 + 2)[arg2] != '\\\\') && ((pcVar5 + 2)[arg2] != '/')) goto code_r0x0048bf4a;\n                        }\n                        iVar4 = *(*0x20 + -0x70);\n                        if (pcVar3 < iVar4) {\n                            *(*0x20 + -0x70) = iVar4 + -1;\n                            while (pcVar5 = *(*0x20 + -0x70),  pcVar11 = pcVar7,  param_2 = arg2,  pcVar3 < pcVar5) {\n                                pcVar11 = *(*0x20 + -0x80);\n                                if (*(*0x20 + -0x88) == 0) {\n                                    pcVar11 = *(*0x20 + -0x98);\n                                    if (*(*0x20 + -0x90) <= pcVar5) {\n                                        *(*0x20 + -0x140) = 0x48c493;\n                                        fcn.0045e240(*(*0x20 + -0x90));\n                                        goto code_r0x0048c493;\n                                    }\n                                    cVar8 = pcVar11[pcVar5];\n                                }\n                                else {\n                                    if (pcVar11 <= pcVar5) {\ncode_r0x0048c493:\n                                        *(*0x20 + -0x140) = 0x48c49b;\n                                        fcn.0045e240(pcVar11);\n                                        goto code_r0x0048c49b;\n                                    }\n                                    cVar8 = pcVar5[*(*0x20 + -0x88)];\n                                }\n                                pcVar11 = pcVar7;\n                                if ((cVar8 == '\\\\') || (cVar8 == '/')) break;\ncode_r0x0048c41f:\n                                *(*0x20 + -0x70) = pcVar5 + -1;\n                            }\n                            goto code_r0x0048bb28;\n                        }\n                        pcVar11 = pcVar7;\n                        param_2 = arg2;\n                        if (cVar9 != '\\0') goto code_r0x0048bb28;\n                        *(*0x20 + -0xd8) = pcVar7;\n                        if (iVar4 < 1) {\ncode_r0x0048bd20:\n                            if (*(*0x20 + -0x88) == 0) {\n                                pcVar3 = *(*0x20 + -0x70);\n                                pcVar11 = *(*0x20 + -0x90);\n                                if (pcVar11 <= pcVar3) {\ncode_r0x0048bd6e:\n                                    *(*0x20 + -0xd0) = pcVar11;\n                                    *(*0x20 + -0x140) = 0x48bd85;\n                                    pcVar3 = fcn.00447240(pcVar11);\n                                    pcVar11 = *(*0x20 + -0xd0);\n                                    *(*0x20 + -0x80) = pcVar11;\n                                    *(*0x20 + -0x78) = pcVar11;\n                                    *(*0x20 + -0x88) = pcVar3;\n                                    unaff_RBX = *(*0x20 + -0x98);\n                                    arg2 = *(*0x20 + -0x90);\n                                    unaff_RSI = *(*0x20 + -0x70);\n                                    if (unaff_RSI <= arg2) {\n                                        if (unaff_RSI < pcVar11) {\n                                            pcVar11 = unaff_RSI;\n                                        }\n                                        if (pcVar3 != unaff_RBX) {\n                                            *(*0x20 + -0x140) = 0x48bdda;\n                                            fcn.0045ebc0(pcVar11);\n                                        }\n                                        arg2 = *(*0x20 + -0xa0);\n                                        arg1_00 = *(*0x20 + -200);\n                                        pcVar7 = *(*0x20 + -0xd8);\n                                        pcVar10 = *(*0x20 + -0xfa);\n                                        goto code_r0x0048bdf2;\n                                    }\n                                    goto code_r0x0048c405;\n                                }\n                                if (pcVar3 < pcVar11) {\n                                    if (pcVar3[*(*0x20 + -0x98)] != '.') goto code_r0x0048bd6e;\n                                    *(*0x20 + -0x70) = pcVar3 + 1;\n                                    goto code_r0x0048be20;\n                                }\n                            }\n                            else {\ncode_r0x0048bdf2:\n                                pcVar11 = *(*0x20 + -0x80);\n                                if (*(*0x20 + -0x70) < pcVar11) {\n                                    (*(*0x20 + -0x70))[*(*0x20 + -0x88)] = '.';\n                                    *(*0x20 + -0x70) = *(*0x20 + -0x70) + 1;\ncode_r0x0048be20:\n                                    if (*(*0x20 + -0x88) == 0) {\n                                        pcVar3 = *(*0x20 + -0x70);\n                                        pcVar11 = *(*0x20 + -0x90);\n                                        if (pcVar11 <= pcVar3) {\ncode_r0x0048be6e:\n                                            *(*0x20 + -0xd0) = pcVar11;\n                                            *(*0x20 + -0x140) = 0x48be85;\n                                            pcVar3 = fcn.00447240(pcVar11);\n                                            pcVar11 = *(*0x20 + -0xd0);\n                                            *(*0x20 + -0x80) = pcVar11;\n                                            *(*0x20 + -0x78) = pcVar11;\n                                            *(*0x20 + -0x88) = pcVar3;\n                                            unaff_RBX = *(*0x20 + -0x98);\n                                            arg2 = *(*0x20 + -0x90);\n                                            unaff_RSI = *(*0x20 + -0x70);\n                                            if (unaff_RSI <= arg2) {\n                                                if (unaff_RSI < pcVar11) {\n                                                    pcVar11 = unaff_RSI;\n                                                }\n                                                if (pcVar3 != unaff_RBX) {\n                                                    *(*0x20 + -0x140) = 0x48beda;\n                                                    fcn.0045ebc0(pcVar11);\n                                                }\n                                                arg2 = *(*0x20 + -0xa0);\n                                                arg1_00 = *(*0x20 + -200);\n                                                pcVar7 = *(*0x20 + -0xd8);\n                                                pcVar10 = *(*0x20 + -0xfa);\n                                                goto code_r0x0048bef2;\n                                            }\n                                            goto code_r0x0048c3f2;\n                                        }\n                                        if (pcVar3 < pcVar11) {\n                                            if (pcVar3[*(*0x20 + -0x98)] != '.') goto code_r0x0048be6e;\n                                            *(*0x20 + -0x70) = pcVar3 + 1;\n                                            goto code_r0x0048bf20;\n                                        }\n                                    }\n                                    else {\ncode_r0x0048bef2:\n                                        if (*(*0x20 + -0x70) < *(*0x20 + -0x80)) {\n                                            *(*(*0x20 + -0x88) + *(*0x20 + -0x70)) = 0x2e;\n                                            *(*0x20 + -0x70) = *(*0x20 + -0x70) + 1;\ncode_r0x0048bf20:\n                                            pcVar3 = *(*0x20 + -0x70);\n                                            pcVar11 = pcVar7;\n                                            param_2 = arg2;\n                                            goto code_r0x0048bb28;\n                                        }\n                                        *(*0x20 + -0x140) = 0x48c3f2;\n                                        fcn.0045e240(*(*0x20 + -0x80));\ncode_r0x0048c3f2:\n                                        *(*0x20 + -0x140) = 0x48c3fa;\n                                        pcVar11 = unaff_RSI;\n                                        fcn.0045e280(unaff_RSI, arg2);\n                                    }\n                                    *(*0x20 + -0x140) = 0x48c3ff;\n                                    fcn.0045e240(pcVar11);\n                                }\n                                *(*0x20 + -0x140) = 0x48c405;\n                                fcn.0045e240(pcVar11);\ncode_r0x0048c405:\n                                *(*0x20 + -0x140) = 0x48c40d;\n                                pcVar11 = unaff_RSI;\n                                fcn.0045e280(unaff_RSI, arg2);\n                            }\n                            *(*0x20 + -0x140) = 0x48c412;\n                            fcn.0045e240(pcVar11);\n                        }\n                        else {\n                            if (*(*0x20 + -0x88) == 0) {\n                                arg1 = *(*0x20 + -0x90);\n                                if ((iVar4 < arg1) && (*(*(*0x20 + -0x98) + iVar4) == '\\\\')) {\n                                    *(*0x20 + -0x70) = iVar4 + 1;\n                                    goto code_r0x0048bd20;\n                                }\n                                *(*0x20 + -0xd0) = arg1;\n                                *(*0x20 + -0x140) = 0x48bc8a;\n                                pcVar3 = fcn.00447240(arg1);\n                                pcVar11 = *(*0x20 + -0xd0);\n                                *(*0x20 + -0x80) = pcVar11;\n                                *(*0x20 + -0x78) = pcVar11;\n                                *(*0x20 + -0x88) = pcVar3;\n                                unaff_RBX = *(*0x20 + -0x98);\n                                arg2 = *(*0x20 + -0x90);\n                                unaff_RSI = *(*0x20 + -0x70);\n                                if (arg2 < unaff_RSI) goto code_r0x0048c417;\n                                if (unaff_RSI < pcVar11) {\n                                    pcVar11 = unaff_RSI;\n                                }\n                                if (pcVar3 != unaff_RBX) {\n                                    *(*0x20 + -0x140) = 0x48bcda;\n                                    fcn.0045ebc0(pcVar11);\n                                }\n                                arg2 = *(*0x20 + -0xa0);\n                                arg1_00 = *(*0x20 + -200);\n                                pcVar7 = *(*0x20 + -0xd8);\n                                pcVar10 = *(*0x20 + -0xfa);\n                            }\n                            pcVar11 = *(*0x20 + -0x80);\n                            if (*(*0x20 + -0x70) < pcVar11) {\n                                (*(*0x20 + -0x70))[*(*0x20 + -0x88)] = '\\\\';\n                                *(*0x20 + -0x70) = *(*0x20 + -0x70) + 1;\n                                goto code_r0x0048bd20;\n                            }\n                        }\n                        *(*0x20 + -0x140) = 0x48c417;\n                        fcn.0045e240(pcVar11);\ncode_r0x0048c417:\n                        *(*0x20 + -0x140) = 0x48c41f;\n                        pcVar3 = unaff_RSI;\n                        pcVar5 = fcn.0045e280(unaff_RSI, arg2);\n                        goto code_r0x0048c41f;\n                    }\ncode_r0x0048c4a6:\n                    pcVar3 = arg1_00;\n                    *(*0x20 + -0x140) = 0x48c4b1;\n                    arg1_00 = pcVar3;\n                    fcn.0045e240(pcVar3);\n                    do {\n                        pcVar11 = pcVar11 + 1;\ncode_r0x0048c4b4:\n                    } while ((pcVar11 < arg1_00) && ((pcVar11[arg2] == '\\\\' || (pcVar11[arg2] == '/'))));\n                    *(*0x20 + -0xd0) = pcVar11;\n                    if (*(*0x20 + -0x70) == 0) {\n                        if (arg1_00 < pcVar11) goto code_r0x0048c655;\n                        unaff_RBX = arg1_00 + -pcVar11;\n                        *(*0x20 + -0x140) = 0x48c50a;\n                        iVar4 = fcn.0048ca80();\n                        bVar2 = 0 < iVar4;\n                        arg2 = *(*0x20 + -0xa0);\n                        arg1_00 = *(*0x20 + -200);\n                        pcVar10 = *(*0x20 + -0xfa);\n                        pcVar11 = *(*0x20 + -0xd0);\n                        pcVar3 = *(*0x20 + -0xf0);\n                    }\n                    else {\n                        bVar2 = false;\n                    }\n                    param_2 = arg2;\n                    if (!bVar2) goto code_r0x0048bb28;\n                    if (*(*0x20 + -0x88) == 0) {\n                        pcVar5 = *(*0x20 + -0x70);\n                        unaff_RBX = *(*0x20 + -0x90);\n                        if (pcVar5 < unaff_RBX) {\n                            if (unaff_RBX <= pcVar5) goto code_r0x0048c64d;\n                            if (pcVar5[*(*0x20 + -0x98)] == '.') {\n                                *(*0x20 + -0x70) = pcVar5 + 1;\n                                goto code_r0x0048bb28;\n                            }\n                        }\n                        *(*0x20 + -0xe8) = unaff_RBX;\n                        *(*0x20 + -0x140) = 0x48c59b;\n                        pcVar3 = fcn.00447240(unaff_RBX);\n                        pcVar11 = *(*0x20 + -0xe8);\n                        *(*0x20 + -0x80) = pcVar11;\n                        *(*0x20 + -0x78) = pcVar11;\n                        *(*0x20 + -0x88) = pcVar3;\n                        unaff_RBX = *(*0x20 + -0x98);\n                        arg2 = *(*0x20 + -0x90);\n                        unaff_RSI = *(*0x20 + -0x70);\n                        if (arg2 < unaff_RSI) goto code_r0x0048c645;\n                        if (unaff_RSI < pcVar11) {\n                            pcVar11 = unaff_RSI;\n                        }\n                        if (pcVar3 != unaff_RBX) {\n                            *(*0x20 + -0x140) = 0x48c5ea;\n                            fcn.0045ebc0(pcVar11);\n                        }\n                        pcVar3 = *(*0x20 + -0xf0);\n                        arg2 = *(*0x20 + -0xa0);\n                        arg1_00 = *(*0x20 + -200);\n                        pcVar10 = *(*0x20 + -0xfa);\n                        pcVar11 = *(*0x20 + -0xd0);\n                    }\n                    if (*(*0x20 + -0x70) < *(*0x20 + -0x80)) {\n                        *(*(*0x20 + -0x88) + *(*0x20 + -0x70)) = 0x2e;\n                        *(*0x20 + -0x70) = *(*0x20 + -0x70) + 1;\n                        param_2 = arg2;\n                        goto code_r0x0048bb28;\n                    }\n                    *(*0x20 + -0x140) = 0x48c645;\n                    fcn.0045e240(*(*0x20 + -0x80));\ncode_r0x0048c645:\n                    *(*0x20 + -0x140) = 0x48c64d;\n                    fcn.0045e280(unaff_RSI, arg2);\ncode_r0x0048c64d:\n                    *(*0x20 + -0x140) = 0x48c655;\n                    fcn.0045e240(unaff_RBX);\ncode_r0x0048c655:\n                    *(*0x20 + -0x140) = 0x48c665;\n                    fcn.0045e300(arg1_00);\n                    param_2 = arg2;\ncode_r0x0048c665:\n                    *(*0x20 + -0x140) = 0x48c670;\n                    fcn.0045e240(arg1_00);\ncode_r0x0048c670:\n                    *(*0x20 + -0x140) = 0x48c678;\n                    fcn.0045e240(arg1_00);\ncode_r0x0048c678:\n                    *(*0x20 + -0x140) = 0x48c67d;\n                    fcn.0045e240(arg1_00);\ncode_r0x0048c67d:\n                    *(*0x20 + -0x140) = 0x48c685;\n                    pcVar11 = unaff_RSI;\n                    fcn.0045e280(unaff_RSI, param_2);\n                }\n                else {\n                    if (*(*0x20 + -0x88) != 0) {\ncode_r0x0048ba7d:\n                        arg1_00 = *(*0x20 + -0x80);\n                        if (*(*0x20 + -0x70) < arg1_00) {\n                            (*(*0x20 + -0x70))[*(*0x20 + -0x88)] = '\\\\';\n                            *(*0x20 + -0x70) = *(*0x20 + -0x70) + 1;\ncode_r0x0048baab:\n                            pcVar3 = 0x1;\n                            pcVar11 = pcVar3;\n                            arg1_00 = pcVar5;\n                            goto code_r0x0048bb28;\n                        }\n                        goto code_r0x0048c678;\n                    }\n                    pcVar3 = *(*0x20 + -0x70);\n                    pcVar11 = *(*0x20 + -0x90);\n                    if (pcVar11 <= pcVar3) {\ncode_r0x0048ba07:\n                        *(*0x20 + -0xd0) = pcVar11;\n                        *(*0x20 + -0x140) = 0x48ba1b;\n                        pcVar3 = fcn.00447240(pcVar11);\n                        pcVar11 = *(*0x20 + -0xd0);\n                        *(*0x20 + -0x80) = pcVar11;\n                        *(*0x20 + -0x78) = pcVar11;\n                        *(*0x20 + -0x88) = pcVar3;\n                        unaff_RBX = *(*0x20 + -0x98);\n                        param_2 = *(*0x20 + -0x90);\n                        unaff_RSI = *(*0x20 + -0x70);\n                        if (unaff_RSI <= param_2) {\n                            if (unaff_RSI < pcVar11) {\n                                pcVar11 = unaff_RSI;\n                            }\n                            if (pcVar3 != unaff_RBX) {\n                                *(*0x20 + -0x140) = 0x48ba6a;\n                                fcn.0045ebc0(pcVar11);\n                            }\n                            pcVar5 = *(*0x20 + -200);\n                            arg2 = *(*0x20 + -0xa0);\n                            pcVar10 = *(*0x20 + -0xfa);\n                            goto code_r0x0048ba7d;\n                        }\n                        goto code_r0x0048c67d;\n                    }\n                    if (pcVar3 < pcVar11) {\n                        if (pcVar3[*(*0x20 + -0x98)] != '\\\\') goto code_r0x0048ba07;\n                        *(*0x20 + -0x70) = pcVar3 + 1;\n                        goto code_r0x0048baab;\n                    }\n                }\n                *(*0x20 + -0x140) = 0x48c68a;\n                fcn.0045e240(pcVar11);\n            }\n            *(*0x20 + -0x140) = 0x48c68f;\n            in_RAX = fcn.0045e300(pcVar11);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x48c69f;\n        fcn.0045bb60();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 9264
    },
    "0048c6c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0048c6c0(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_RBX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (unaff_RBX == 0) {\ncode_r0x0048c6e5:\n        uVar1 = 0;\n    }\n    else {\n        iVar2 = 0;\n        for (; *(in_RAX + 8) == 0; in_RAX = in_RAX + 0x10) {\n            iVar2 = iVar2 + 1;\n            if (unaff_RBX <= iVar2) goto code_r0x0048c6e5;\n        }\n        uVar1 = fcn.0048cec0(arg1 - iVar2);\n    }\n    return uVar1;\n}\n",
        "token_count": 239
    },
    "0048c8c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool fcn.0048c8c0(ulong param_1, char *param_2)\n\n{\n    bool bVar1;\n    char cVar2;\n    char *in_RAX;\n    uint64_t uVar3;\n    char *arg1;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    char *pcStack24;\n    char **ppcStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (unaff_RBX != 0) {\n        param_2 = *0x7a6758;\n        if (*0x7a6758 == NULL) goto code_r0x0048c90a;\n        pcStack24 = *0x7a6758;\n        param_2 = NULL;\n        ppcStack16 = *0x7a6750;\n        goto code_r0x0048ca0c;\n    }\n    bVar1 = false;\ncode_r0x0048c90c:\n    do {\n        if (bVar1) {\n            return true;\n        }\n        uVar3 = fcn.0048ca80();\n        if (uVar3 == 0) {\n            return false;\n        }\n        if (unaff_RBX != 0) {\n            param_2 = in_RAX;\n            if ((*in_RAX == '\\\\') || (*in_RAX == '/')) {\n                if (1 < unaff_RBX) {\n                    if ((in_RAX[1] == '\\\\') || (in_RAX[1] == '/')) {\n                        return true;\n                    }\n                    goto code_r0x0048c974;\n                }\n            }\n            else {\ncode_r0x0048c974:\n                if (uVar3 <= unaff_RBX) {\n                    if (unaff_RBX - uVar3 != 0) {\n                        return in_RAX[uVar3 & -(unaff_RBX - uVar3) >> 0x3f] == '\\\\' ||\n                               in_RAX[uVar3 & -(unaff_RBX - uVar3) >> 0x3f] == '/';\n                    }\n                    return false;\n                }\n                fcn.0045e300(unaff_RBX);\n            }\n            fcn.0045e240(1);\n        }\n        fcn.0045e240(0);\n        do {\n            ppcStack16 = ppcStack16 + 2;\ncode_r0x0048ca0c:\n            arg1 = *ppcStack16;\n            cVar2 = fcn.0048ae20(arg1);\n            if (cVar2 != '\\0') {\n                bVar1 = true;\n                param_2 = arg1;\n                goto code_r0x0048c90c;\n            }\n            param_2 = param_2 + 1;\n        } while (param_2 < pcStack24);\ncode_r0x0048c90a:\n        bVar1 = false;\n    } while( true );\n}\n",
        "token_count": 677
    },
    "0048ca80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint64_t fcn.0048ca80(void)\n\n{\n    char cVar1;\n    char cVar2;\n    code *pcVar3;\n    char *in_RAX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t unaff_RBX;\n    \n    if (unaff_RBX < 2) {\n        return 0;\n    }\n    cVar1 = *in_RAX;\n    cVar2 = in_RAX[1];\n    if ((cVar2 == ':') && ((cVar1 + 0x9fU < 0x1a || (cVar1 + 0xbfU < 0x1a)))) {\n        return 2;\n    }\n    if ((((4 < unaff_RBX) && ((cVar1 == '\\\\' || (cVar1 == '/')))) && ((cVar2 == '\\\\' || (cVar2 == '/')))) &&\n       (((cVar1 = in_RAX[2],  cVar1 != '\\\\' && (cVar1 != '/')) && (cVar1 != '.')))) {\n        for (iVar4 = 3; iVar4 < unaff_RBX - 1; iVar4 = iVar4 + 1) {\n            if ((in_RAX[iVar4] == '\\\\') || (in_RAX[iVar4] == '/')) {\n                uVar5 = iVar4 + 1;\n                if (unaff_RBX <= uVar5) {\n                    fcn.0045e240(unaff_RBX);\n                    pcVar3 = swi(3);\n                    uVar5 = (*pcVar3)();\n                    return uVar5;\n                }\n                cVar1 = in_RAX[iVar4 + 1];\n                if (cVar1 == '\\\\') {\n                    return 0;\n                }\n                if (cVar1 == '/') {\n                    return 0;\n                }\n                if (cVar1 == '.') {\n                    return 0;\n                }\n                for (; ((uVar5 < unaff_RBX && (in_RAX[uVar5] != '\\\\')) && (in_RAX[uVar5] != '/')); uVar5 = uVar5 + 1) {\n                }\n                return uVar5;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 485
    },
    "0048cba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.0048cba0(void)\n\n{\n    ulong uVar1;\n    int64_t in_RAX;\n    ulong *puVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    uint32_t uVar6;\n    uint64_t arg1;\n    int64_t iVar7;\n    uint64_t arg1_00;\n    ulong arg1_01;\n    uint64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uint64_t arg3;\n    ulong arg3_00;\n    ulong *arg4;\n    ulong arg4_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX == 0) {\n                return 0x801ba0;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            uVar3 = 0;\n            uVar9 = 0;\n            arg1_00 = 0;\n            arg3 = 0;\n            arg4 = 0x801ba0;\n            for (arg1 = 0; *(*0x20 + -0x48) = arg1_00,  arg1 < unaff_RBX; arg1 = arg1 + 1) {\n                if (*(in_RAX + arg1) == '\\\"') {\n                    uVar3 = uVar3 ^ 1;\n                }\n                else if ((*(in_RAX + arg1) == ';') && (uVar3 == '\\0')) {\n                    if (arg1 < uVar9) goto code_r0x0048ce85;\n                    iVar7 = arg1 - uVar9;\n                    iVar4 = in_RAX + (uVar9 & -iVar7 >> 0x3f);\n                    uVar10 = arg1_00;\n                    uVar9 = arg1_00 + 1;\n                    if (arg3 < arg1_00 + 1) {\n                        *(*0x20 + -0x28) = arg1;\n                        *(*0x20 + -0x30) = iVar7;\n                        *(*0x20 + -0x10) = iVar4;\n                        *(*0x20 + -0x49) = 0;\n                        *(*0x20 + -0x98) = 0x48cca9;\n                        puVar2 = fcn.00447360(arg1_00);\n                        uVar9 = arg4 + 1;\n                        uVar3 = *(*0x20 + -0x49);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        uVar10 = *(*0x20 + -0x48);\n                        arg1 = *(*0x20 + -0x28);\n                        iVar7 = *(*0x20 + -0x30);\n                        iVar4 = *(*0x20 + -0x10);\n                        in_RAX = *(*0x20 + 8);\n                        arg3 = arg1_00;\n                        arg4 = puVar2;\n                    }\n                    arg1_00 = uVar9;\n                    arg4[uVar10 * 2 + 1] = iVar7;\n                    if (*0x801c20 == 0) {\n                        arg4[uVar10 * 2] = iVar4;\n                    }\n                    else {\n                        uVar6 = uVar3;\n                        *(*0x20 + -0x98) = 0x48cd08;\n                        in_RAX = fcn.0045dec0(uVar3, iVar4, arg3, arg4);\n                        uVar3 = uVar6;\n                    }\n                    uVar9 = arg1 + 1;\n                }\n            }\n            if (uVar9 <= unaff_RBX) {\n                uVar3 = arg1_00 + 1;\n                iVar7 = unaff_RBX - uVar9;\n                iVar4 = (uVar9 & -iVar7 >> 0x3f) + in_RAX;\n                uVar9 = arg1_00;\n                puVar2 = arg4;\n                if (arg3 < uVar3) {\n                    *(*0x20 + -0x28) = iVar7;\n                    *(*0x20 + -0x10) = iVar4;\n                    *(*0x20 + -0x98) = 0x48cd6b;\n                    puVar2 = fcn.00447360(arg1_00);\n                    uVar3 = arg4 + 1;\n                    uVar9 = *(*0x20 + -0x48);\n                    iVar7 = *(*0x20 + -0x28);\n                    iVar4 = *(*0x20 + -0x10);\n                    arg1 = arg1_00;\n                    arg3 = arg1_00;\n                }\n                puVar2[uVar9 * 2 + 1] = iVar7;\n                if (*0x801c20 == 0) {\n                    puVar2[uVar9 * 2] = iVar4;\n                }\n                else {\n                    *(*0x20 + -0x98) = 0x48cdb1;\n                    uVar3 = fcn.0045dec0(arg1, iVar4, arg3, puVar2);\n                }\n                if (uVar3 != 0) {\n                    *(*0x20 + -0x20) = puVar2;\n                    *(*0x20 + -0x48) = uVar3;\n                    *(*0x20 + -0x40) = arg3;\n                    iVar4 = 0;\n                    while( true ) {\n                        *(*0x20 + -0x38) = iVar4;\n                        *(*0x20 + -0x18) = puVar2;\n                        uVar5 = *puVar2;\n                        uVar1 = puVar2[1];\n                        arg1_01 = 0x4aebec;\n                        arg3_00 = 0;\n                        arg4_00 = 0xffffffffffffffff;\n                        *(*0x20 + -0x98) = 0x48ce25;\n                        uVar5 = fcn.0048a6e0(0x4aebec, uVar5, 0, 0xffffffffffffffff);\n                        iVar4 = *(*0x20 + -0x38);\n                        puVar2 = *(*0x20 + -0x20);\n                        puVar2[iVar4 * 2 + 1] = uVar1;\n                        if (*0x801c20 == 0) {\n                            puVar2[iVar4 * 2] = uVar5;\n                        }\n                        else {\n                            *(*0x20 + -0x98) = 0x48ce53;\n                            fcn.0045dda0(arg1_01, iVar4 * 0x10, arg3_00, arg4_00);\n                        }\n                        iVar4 = iVar4 + 1;\n                        if (*(*0x20 + -0x48) <= iVar4) break;\n                        puVar2 = *(*0x20 + -0x18) + 0x10;\n                    }\n                }\n                return puVar2;\n            }\n            *(*0x20 + -0x98) = 0x48ce85;\n            arg1 = unaff_RBX;\n            fcn.0045e300(unaff_RBX);\ncode_r0x0048ce85:\n            *(*0x20 + -0x98) = 0x48ce8d;\n            in_RAX = fcn.0045e300(arg1);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x48ce9d;\n        fcn.0045bb60();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1861
    },
    "0048cec0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.0048cec0(uint64_t arg1)\n\n{\n    int64_t *in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX != 0) {\n                *(*0x20 + -0x10) = in_RAX;\n                if ((in_RAX[1] != 2) || (*(*in_RAX + 1) != ':')) {\n                    *(*0x20 + 0x10) = unaff_RBX;\n                    *(*0x20 + 0x18) = arg1;\n                    *(*0x20 + -0x70) = 0x48cf26;\n                    fcn.004898c0(arg1);\n                    *(*0x20 + -0x70) = 0x48cf2b;\n                    uVar3 = fcn.0048b860();\n                    *(*0x20 + -0x20) = uVar3;\n                    *(*0x20 + -0x30) = unaff_RBX;\n                    *(*0x20 + -0x70) = 0x48cf3a;\n                    iVar1 = fcn.0048ca80();\n                    if (iVar1 < 3) {\n                        return *(*0x20 + -0x20);\n                    }\n                    uVar3 = *(*(*0x20 + -0x10) + 8);\n                    *(*0x20 + -0x70) = 0x48cf5b;\n                    uVar2 = fcn.0048b860();\n                    *(*0x20 + -0x18) = uVar2;\n                    *(*0x20 + -0x28) = uVar3;\n                    *(*0x20 + -0x70) = 0x48cf6a;\n                    iVar1 = fcn.0048ca80();\n                    if (2 < iVar1) {\n                        return *(*0x20 + -0x20);\n                    }\n                    uVar4 = *(*0x20 + -0x10);\n                    unaff_RBX = *(*0x20 + 0x10) - 1;\n                    *(*0x20 + -0x70) = 0x48cfb1;\n                    fcn.004898c0(*(*0x20 + 0x18) + -1);\n                    *(*0x20 + -0x70) = 0x48cfb6;\n                    uVar3 = fcn.0048b860();\n                    arg1 = *(*0x20 + -0x28);\n                    if (arg1 <= arg1 - 1) {\n                        *(*0x20 + -0x70) = 0x48d046;\n                        in_RAX = fcn.0045e240(arg1);\n                        goto code_r0x0048d046;\n                    }\n                    if (*((arg1 - 1) + *(*0x20 + -0x18)) != '\\\\') {\n                        *(*0x20 + -0x70) = 0x48d00c;\n                        uVar3 = fcn.0044af20(arg1, *(*0x20 + -0x18), uVar3, unaff_RBX);\n                        return uVar3;\n                    }\n                    *(*0x20 + -0x70) = 0x48cfe6;\n                    uVar3 = fcn.0044ae80(arg1);\n                    return uVar3;\n                }\n                uVar4 = 1;\n                while ((uVar4 < unaff_RBX && (in_RAX[uVar4 * 2 + 1] == 0))) {\ncode_r0x0048d046:\n                    uVar4 = uVar4 + 1;\n                }\n                if (uVar4 <= unaff_RBX) {\n                    *(*0x20 + -0x70) = 0x48d0a5;\n                    fcn.004898c0(arg1 - uVar4);\n                    uVar3 = *(*(*0x20 + -0x10) + 8);\n                    *(*0x20 + -0x70) = 0x48d0c5;\n                    fcn.0044ae80(uVar3);\n                    *(*0x20 + -0x70) = 0x48d0ca;\n                    uVar3 = fcn.0048b860();\n                    return uVar3;\n                }\n                *(*0x20 + -0x70) = 0x48d0df;\n                fcn.0045e300(unaff_RBX);\n            }\n            arg1 = 0;\n            *(*0x20 + -0x70) = 0x48d0e9;\n            in_RAX = fcn.0045e240(0);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x48d0fe;\n        fcn.0045bb60();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1304
    },
    "0048d820": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0048d820(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t arg1_00;\n    uint64_t arg1_01;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t uVar6;\n    uint8_t *unaff_RDI;\n    uchar in_R8B;\n    uchar in_R9B;\n    uchar in_R10B;\n    uchar uVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x18 && *0x20 + -0x18 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x98;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x30) = in_R8B;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x51) = in_R9B;\n            *(*0x20 + -0x52) = in_R10B;\n            *(*0x20 + 0x20) = unaff_RDI;\n            uVar6 = unaff_RSI;\n            if (arg1 - unaff_RBX < unaff_RSI) {\n                *(*0x20 + 8) = in_RAX;\n                iVar2 = unaff_RSI + unaff_RBX + 2;\n                *(*0x20 + -0x48) = iVar2;\n                *(*0x20 + -0xa0) = 0x48d8a6;\n                in_RAX = fcn.00447240(iVar2);\n                if (in_RAX != *(*0x20 + 8)) {\n                    *(*0x20 + -0x10) = in_RAX;\n                    *(*0x20 + -0xa0) = 0x48d8c8;\n                    fcn.0045ebc0(*(*0x20 + 0x10));\n                    in_RAX = *(*0x20 + -0x10);\n                }\n                unaff_RBX = *(*0x20 + 0x10);\n                uVar6 = *(*0x20 + 0x28);\n                unaff_RDI = *(*0x20 + 0x20);\n                in_R8B = *(*0x20 + 0x30);\n                in_R9B = *(*0x20 + -0x51);\n                in_R10B = *(*0x20 + -0x52);\n                arg1 = *(*0x20 + -0x48);\n            }\n            arg1_00 = unaff_RBX + 1;\n            iVar2 = in_RAX;\n            uVar4 = unaff_RBX;\n            if (arg1 < arg1_00) {\n                *(*0x20 + -0xa0) = 0x48d925;\n                iVar2 = fcn.00447360(unaff_RBX);\n                arg1_00 = in_RAX + 1;\n                uVar4 = *(*0x20 + 0x10);\n                uVar6 = *(*0x20 + 0x28);\n                unaff_RDI = *(*0x20 + 0x20);\n                in_R8B = *(*0x20 + 0x30);\n                in_R9B = *(*0x20 + -0x51);\n                in_R10B = *(*0x20 + -0x52);\n                arg1 = unaff_RBX;\n            }\n            *(iVar2 + uVar4) = in_R8B;\n            while( true ) {\n                *(*0x20 + -0x28) = arg1_00;\n                if (uVar6 == 0) {\n                    if (arg1 < arg1_00 + 1) {\n                        *(*0x20 + -0xa0) = 0x48dbea;\n                        iVar2 = fcn.00447360(arg1_00);\n                        in_R8B = *(*0x20 + 0x30);\n                        arg1_00 = *(*0x20 + -0x28);\n                    }\n                    *(iVar2 + arg1_00) = in_R8B;\n                    return;\n                }\n                *(*0x20 + -0x18) = unaff_RDI;\n                *(*0x20 + -0x30) = uVar6;\n                uVar1 = *unaff_RDI;\n                if (*unaff_RDI < 0x80) {\n                    unaff_RBX = 1;\n                    unaff_RSI = uVar6;\n                }\n                else {\n                    *(*0x20 + -0x38) = arg1;\n                    *(*0x20 + -0x20) = iVar2;\n                    *(*0x20 + -0xa0) = 0x48d9c5;\n                    uVar1 = fcn.00464da0();\n                    arg1 = *(*0x20 + -0x38);\n                    unaff_RSI = *(*0x20 + -0x30);\n                    unaff_RDI = *(*0x20 + -0x18);\n                    in_R8B = *(*0x20 + 0x30);\n                    in_R9B = *(*0x20 + -0x51);\n                    in_R10B = *(*0x20 + -0x52);\n                    arg1_00 = *(*0x20 + -0x28);\n                    iVar2 = *(*0x20 + -0x20);\n                    unaff_RBX = uVar6;\n                }\n                *(*0x20 + -0x50) = unaff_RBX;\n                if ((unaff_RBX == 1) && (uVar1 == 0xfffd)) {\n                    uVar6 = arg1_00 + 2;\n                    uVar4 = arg1_00;\n                    if (arg1 < uVar6) {\n                        *(*0x20 + -0x40) = uVar6;\n                        *(*0x20 + -0xa0) = 0x48da45;\n                        iVar2 = fcn.00447360(arg1_00);\n                        unaff_RBX = *(*0x20 + -0x50);\n                        unaff_RSI = *(*0x20 + -0x30);\n                        unaff_RDI = *(*0x20 + -0x18);\n                        in_R8B = *(*0x20 + 0x30);\n                        in_R9B = *(*0x20 + -0x51);\n                        in_R10B = *(*0x20 + -0x52);\n                        uVar4 = *(*0x20 + -0x28);\n                        uVar6 = *(*0x20 + -0x40);\n                        arg1 = arg1_00;\n                    }\n                    *(iVar2 + uVar4) = 0x785c;\n                    arg1_01 = uVar4 + 3;\n                    uVar7 = *((*unaff_RDI >> 4) + 0x4b0db9);\n                    iVar3 = iVar2;\n                    if (arg1 < arg1_01) {\n                        *(*0x20 + -0x53) = uVar7;\n                        *(*0x20 + -0xa0) = 0x48dabf;\n                        iVar3 = fcn.00447360(uVar6);\n                        arg1_01 = iVar2 + 1;\n                        unaff_RBX = *(*0x20 + -0x50);\n                        unaff_RSI = *(*0x20 + -0x30);\n                        unaff_RDI = *(*0x20 + -0x18);\n                        in_R8B = *(*0x20 + 0x30);\n                        in_R9B = *(*0x20 + -0x51);\n                        in_R10B = *(*0x20 + -0x52);\n                        uVar4 = *(*0x20 + -0x28);\n                        uVar7 = *(*0x20 + -0x53);\n                        arg1 = uVar6;\n                    }\n                    *(uVar4 + 2 + iVar3) = uVar7;\n                    arg1_00 = arg1_01 + 1;\n                    uVar7 = *((*unaff_RDI & 0xf) + 0x4b0db9);\n                    iVar2 = iVar3;\n                    uVar6 = arg1_01;\n                    if (arg1 < arg1_00) {\n                        *(*0x20 + -0x28) = arg1_01;\n                        *(*0x20 + -0x53) = uVar7;\n                        *(*0x20 + -0xa0) = 0x48db3e;\n                        iVar2 = fcn.00447360(arg1_01);\n                        arg1_00 = iVar3 + 1;\n                        unaff_RBX = *(*0x20 + -0x50);\n                        unaff_RSI = *(*0x20 + -0x30);\n                        unaff_RDI = *(*0x20 + -0x18);\n                        in_R8B = *(*0x20 + 0x30);\n                        in_R9B = *(*0x20 + -0x51);\n                        in_R10B = *(*0x20 + -0x52);\n                        uVar6 = *(*0x20 + -0x28);\n                        uVar7 = *(*0x20 + -0x53);\n                        arg1 = arg1_01;\n                    }\n                    *(iVar2 + uVar6) = uVar7;\n                }\n                else {\n                    *(*0x20 + -0xa0) = 0x48db94;\n                    iVar2 = fcn.0048dca0(arg1);\n                    unaff_RSI = *(*0x20 + -0x30);\n                    unaff_RDI = *(*0x20 + -0x18);\n                    in_R8B = *(*0x20 + 0x30);\n                    in_R9B = *(*0x20 + -0x51);\n                    in_R10B = *(*0x20 + -0x52);\n                    unaff_RBX = *(*0x20 + -0x50);\n                }\n                if (unaff_RSI < unaff_RBX) break;\n                uVar6 = unaff_RSI - unaff_RBX;\n                unaff_RDI = unaff_RDI + (unaff_RBX & -uVar6 >> 0x3f);\n            }\n            *(*0x20 + -0xa0) = 0x48dc25;\n            arg1 = unaff_RSI;\n            in_RAX = fcn.0045e300(unaff_RSI);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + 0x28) = unaff_RSI;\n        puVar5[0x30] = in_R8B;\n        puVar5[0x31] = in_R9B;\n        puVar5[0x32] = in_R10B;\n        *(puVar5 + -8) = 0x48dc53;\n        fcn.0045bb60();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        unaff_RSI = *(puVar5 + 0x28);\n        in_R8B = puVar5[0x30];\n        in_R9B = puVar5[0x31];\n        in_R10B = puVar5[0x32];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 2698
    },
    "0048ed60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.0048ed60(ulong arg1)\n\n{\n    uint64_t uVar1;\n    char cVar2;\n    ulong in_RAX;\n    ulong *puVar3;\n    ulong *puVar4;\n    ulong *puVar5;\n    ulong uVar6;\n    int64_t arg1_00;\n    int64_t iVar7;\n    ulong noname_1;\n    int64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    ulong *unaff_RDI;\n    uint64_t in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x58) = 0x48ed98;\n            puVar3 = fcn.0040c560();\n            uVar6 = *(*0x20 + 0x10);\n            puVar3[1] = uVar6;\n            if (*0x801c20 == 0) {\n                *puVar3 = *(*0x20 + 8);\n                puVar4 = puVar3;\n            }\n            else {\n                *(*0x20 + -0x58) = 0x48edc5;\n                puVar4 = fcn.0045dec0(uVar6, *(*0x20 + 8), in_R8, in_R9);\n                unaff_RDI = puVar3;\n            }\n            unaff_RSI = *(*0x20 + 0x20);\n            in_R8 = unaff_RSI + 1;\n            *(*0x20 + -0x20) = in_R8;\n            if (in_R8 < 2) {\n                unaff_RBX = 1;\n                uVar1 = in_R8;\n            }\n            else {\n                unaff_RBX = 1;\n                unaff_RDI = 0x1;\n                *(*0x20 + -0x58) = 0x48edfc;\n                puVar4 = fcn.00447360(1);\n                uVar1 = *(*0x20 + -0x20);\n                unaff_RSI = *(*0x20 + 0x20);\n                in_R8 = *(*0x20 + -0x20);\n            }\n            if (uVar1 != 0) {\n                *(*0x20 + -0x28) = unaff_RBX;\n                *(*0x20 + -0x10) = puVar4;\n                iVar7 = (-(unaff_RBX + -1) >> 0x3f & 0x10) + puVar4;\n                puVar4 = *(*0x20 + 0x18);\n                *(*0x20 + -0x58) = 0x48ee58;\n                fcn.00410400(unaff_RSI);\n                *(*0x20 + -0x58) = 0x48ee65;\n                puVar3 = fcn.0040c560();\n                arg1_00 = *(*0x20 + 0x10);\n                puVar3[1] = arg1_00;\n                if (*0x801c20 == 0) {\n                    uVar6 = *(*0x20 + 8);\n                    *puVar3 = uVar6;\n                    puVar5 = puVar3;\n                    puVar3 = puVar4;\n                }\n                else {\n                    uVar6 = *(*0x20 + 8);\n                    *(*0x20 + -0x58) = 0x48ee8f;\n                    puVar5 = fcn.0045dea0(uVar6, iVar7, in_R8, in_R9);\n                }\n                *(*0x20 + -0x18) = puVar5;\n                puVar5[3] = *(*0x20 + -0x20);\n                puVar5[4] = *(*0x20 + -0x28);\n                if (*0x801c20 == 0) {\n                    noname_1 = *(*0x20 + -0x10);\n                    puVar5[2] = noname_1;\n                }\n                else {\n                    puVar3 = puVar5 + 2;\n                    noname_1 = *(*0x20 + -0x10);\n                    *(*0x20 + -0x58) = 0x48eec8;\n                    fcn.0045dec0(uVar6, noname_1, in_R8, in_R9);\n                }\n                *(*0x20 + -0x58) = 0x48eed0;\n                fcn.0048c780();\n                if (arg1_00 == *(*0x20 + 0x10)) {\n                    *(*0x20 + -0x58) = 0x48eee7;\n                    cVar2 = fcn.00402a00(arg1_00, noname_1);\n                    if (cVar2 != '\\0') {\n                        iVar7 = *(*0x20 + 0x10);\n                        *(*0x20 + -0x58) = 0x48ef05;\n                        uVar6 = fcn.00491ae0();\n                        if (iVar7 == 0) {\n                            puVar4 = *(*0x20 + -0x18);\n                        }\n                        else {\n                            puVar4 = *(*0x20 + -0x18);\n                            puVar4[1] = iVar7;\n                            if (*0x801c20 == 0) {\n                                *puVar4 = uVar6;\n                            }\n                            else {\n                                *(*0x20 + -0x58) = 0x48ef2d;\n                                fcn.0045dda0(arg1_00, puVar4, in_R8, in_R9);\n                            }\n                        }\n                        if (arg1_00 == 0) {\n                            return puVar4;\n                        }\n                        puVar4[0x18] = arg1_00;\n                        if (*0x801c20 == 0) {\n                            puVar4[0x19] = puVar3;\n                            return puVar4;\n                        }\n                        *(*0x20 + -0x58) = 0x48ef67;\n                        fcn.0045dda0(puVar4 + 0x19, puVar4, in_R8, in_R9);\n                        return puVar4;\n                    }\n                }\n                return *(*0x20 + -0x18);\n            }\n            arg1 = 0;\n            *(*0x20 + -0x58) = 0x48ef85;\n            in_RAX = fcn.0045e300(0);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x20) = unaff_RDI;\n        *(puVar8 + 0x28) = unaff_RSI;\n        *(puVar8 + -8) = 0x48efa5;\n        fcn.0045bb60();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        unaff_RDI = *(puVar8 + 0x20);\n        unaff_RSI = *(puVar8 + 0x28);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1789
    },
    "0048f780": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0048fabf)\n// WARNING: Removing unreachable block (ram,0x0048fae5)\n// WARNING: Removing unreachable block (ram,0x0048fb2b)\n// WARNING: Removing unreachable block (ram,0x0048fb22)\n// WARNING: Removing unreachable block (ram,0x0048fb40)\n// WARNING: Removing unreachable block (ram,0x0048fb58)\n// WARNING: Removing unreachable block (ram,0x0048fb8a)\n// WARNING: Removing unreachable block (ram,0x0048fb83)\n// WARNING: Removing unreachable block (ram,0x0048fb8f)\n\nint64_t fcn.0048f780(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    ulong noname_1;\n    int64_t arg3;\n    ulong uVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t unaff_RBX;\n    int64_t arg3_00;\n    uint64_t uVar7;\n    ulong arg4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (unaff_RBX == 0) {\n        iVar5 = fcn.00485800(1);\n        return iVar5;\n    }\n    if (unaff_RBX == 0x732bd8) {\n        return arg1;\n    }\n    iVar5 = arg1;\n    noname_1 = fcn.004863c0();\n    if (iVar5 == 0) {\n        iVar6 = *(in_RAX + 0xf0);\n        iVar2 = *(in_RAX + 0xe8);\n        uVar7 = iVar6 + 1;\n        iVar4 = in_RAX;\n        arg3 = iVar2;\n        if (*(in_RAX + 0xf8) < uVar7) {\n            arg3_00 = iVar2;\n            arg3 = fcn.00447360(iVar6);\n            *(in_RAX + 0xf8) = iVar6;\n            if (*0x801c20 == 0) {\n                *(in_RAX + 0xe8) = arg3;\n                iVar5 = iVar6;\n                iVar6 = iVar2;\n            }\n            else {\n                iVar5 = in_RAX;\n                arg3 = fcn.0045dda0(in_RAX, in_RAX + 0xe8, arg3_00, uVar7);\n                iVar4 = iVar5;\n                iVar6 = iVar2;\n            }\n        }\n        *(iVar4 + 0xf0) = iVar6 + 1;\n        arg4 = 0x732b98;\n        *(arg3 + iVar6 * 0x10) = 0x732b98;\n        if (*0x801c20 == 0) {\n            *(arg3 + 8 + iVar6 * 0x10) = unaff_RBX;\n            uVar1 = noname_1;\n        }\n        else {\n            uVar1 = fcn.0045dee0(iVar5, iVar4, arg3, 0x732b98);\n        }\n        iVar5 = *(iVar4 + 0x108);\n        uVar7 = iVar5 + 1;\n        iVar6 = *(iVar4 + 0x100);\n        iVar2 = iVar6;\n        if (*(iVar4 + 0x110) < uVar7) {\n            iVar2 = fcn.00447360(iVar5);\n            *(in_RAX + 0x110) = iVar5;\n            if (*0x801c20 == 0) {\n                *(in_RAX + 0x100) = iVar2;\n                iVar4 = in_RAX;\n            }\n            else {\n                iVar4 = in_RAX;\n                iVar2 = fcn.0045dda0(in_RAX + 0x100, in_RAX, uVar7, arg4);\n            }\n            arg4 = 0x732b98;\n            uVar1 = noname_1;\n            iVar5 = iVar6;\n        }\n        *(iVar4 + 0x108) = iVar5 + 1;\n        *(iVar2 + iVar5 * 0x10) = arg4;\n        if (*0x801c20 == 0) {\n            *(iVar2 + 8 + iVar5 * 0x10) = uVar1;\n        }\n        else {\n            fcn.0045dda0(iVar5 + 1, iVar4, uVar7, arg4);\n        }\n        puVar3 = fcn.0040c560();\n        *puVar3 = 0x48fbe0;\n        puVar3[1] = unaff_RBX;\n        iVar5 = unaff_RBX;\n        if (*0x801c20 == 0) {\n            puVar3[2] = arg1;\n            puVar3[3] = noname_1;\n        }\n        else {\n            fcn.0045dec0(unaff_RBX, arg1, uVar7, arg4);\n            puVar3 = fcn.0045dec0(iVar5, noname_1, uVar7, arg4);\n        }\n        iVar6 = *(in_RAX + 0x120);\n        iVar2 = *(in_RAX + 0x118);\n        uVar7 = iVar6 + 1;\n        iVar4 = iVar2;\n        if (*(in_RAX + 0x128) < uVar7) {\n            iVar4 = fcn.00447360(iVar6);\n            *(in_RAX + 0x128) = iVar6;\n            if (*0x801c20 == 0) {\n                *(in_RAX + 0x118) = iVar4;\n                iVar5 = iVar6;\n                iVar6 = iVar2;\n            }\n            else {\n                iVar4 = fcn.0045dda0(in_RAX, in_RAX + 0x118, uVar7, arg4);\n                iVar5 = in_RAX;\n                iVar6 = iVar2;\n            }\n        }\n        *(in_RAX + 0x120) = iVar6 + 1;\n        if (*0x801c20 == 0) {\n            *(iVar4 + iVar6 * 8) = puVar3;\n        }\n        else {\n            fcn.0045dda0(iVar5, in_RAX, iVar6 + 1, arg4);\n        }\n        return unaff_RBX;\n    }\n    return 0;\n}\n",
        "token_count": 1478
    },
    "0048fc60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0048fc60(uint64_t arg1)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    ulong in_RAX;\n    ulong uVar3;\n    char *pcVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t in_RDX;\n    uint64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0x88) = 0x48fc9d;\n            fcn.0048c780();\n            uVar6 = *(*0x20 + 0x10);\n            if (unaff_RBX == uVar6) {\n                *(*0x20 + -0x88) = 0x48fcba;\n                cVar1 = fcn.00402a00(unaff_RBX, in_RDX);\n                if (cVar1 == '\\0') {\n                    uVar6 = *(*0x20 + 0x10);\n                    goto code_r0x0048fcc6;\n                }\n                unaff_RBX = 0x4aec08;\n                unaff_RDI = *(*0x20 + 8);\n                *(*0x20 + -0x88) = 0x48fcf6;\n                uVar3 = fcn.0044ae80(2);\n            }\n            else {\ncode_r0x0048fcc6:\n                uVar3 = *(*0x20 + 8);\n                unaff_RBX = uVar6;\n            }\n            if (*(*0x20 + 0x20) == 0) {\n                *(*0x20 + -0x88) = 0x48fe5e;\n                uVar3 = fcn.00491ae0();\n                return uVar3;\n            }\n            *(*0x20 + -0x58) = unaff_RBX;\n            *(*0x20 + -0x40) = uVar3;\n            *(*0x20 + -0x88) = 0x48fd18;\n            arg1 = fcn.0048ca80();\n            in_RDX = *(*0x20 + -0x58);\n            if (arg1 <= in_RDX) {\n                if (arg1 != 0) {\n                    *(*0x20 + -0x88) = 0x48fe4f;\n                    uVar3 = fcn.00491ae0();\n                    return uVar3;\n                }\n                if (in_RDX < 2) {\n                    pcVar4 = *(*0x20 + -0x40);\n                }\n                else {\n                    pcVar4 = *(*0x20 + -0x40);\n                    if ((*pcVar4 == '\\\\') || (*pcVar4 == '/')) {\n                        *(*0x20 + -0x88) = 0x48fd54;\n                        uVar3 = fcn.00491ae0();\n                        return uVar3;\n                    }\n                }\n                *(*0x20 + -0x28) = in_XMM15;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x28) = *(*0x20 + 0x18);\n                *(*0x20 + -0x20) = *(*0x20 + 0x20);\n                *(*0x20 + -0x18) = pcVar4;\n                *(*0x20 + -0x10) = in_RDX;\n                unaff_RBX = 2;\n                iVar5 = 2;\n                *(*0x20 + -0x88) = 0x48fda5;\n                uVar3 = fcn.0048c6c0(2);\n                *(*0x20 + -0x30) = uVar3;\n                *(*0x20 + -0x48) = 2;\n                *(*0x20 + -0x88) = 0x48fdb4;\n                uVar3 = fcn.00491ae0();\n                if (iVar5 != 0) {\n                    return 0;\n                }\n                uVar6 = *(*0x20 + -0x48);\n                if (uVar6 < 3) {\n                    *(*0x20 + -0x50) = 2;\n                    *(*0x20 + -0x38) = uVar3;\n                    *(*0x20 + -0x88) = 0x48fddd;\n                    uVar2 = fcn.00402a00(uVar6, in_RDX);\n                    uVar6 = *(*0x20 + -0x48);\n                    unaff_RBX = *(*0x20 + -0x50);\n                    in_RDX = uVar2;\n                }\n                else {\n                    in_RDX = 0;\n                }\n                if ((in_RDX == '\\0') || (uVar6 <= unaff_RBX)) {\n                    *(*0x20 + -0x88) = 0x48fe26;\n                    uVar3 = fcn.0044ae80(*(*0x20 + -0x58));\n                    return uVar3;\n                }\n                *(*0x20 + -0x88) = 0x48fe73;\n                arg1 = fcn.0045e300(unaff_RBX);\n            }\n            *(*0x20 + -0x88) = 0x48fe7b;\n            in_RAX = fcn.0045e280(arg1, in_RDX);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + 0x20) = unaff_RDI;\n        *(puVar7 + -8) = 0x48fe95;\n        fcn.0045bb60();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_RDI = *(puVar7 + 0x20);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1530
    },
    "00490d40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00490d40(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t in_RAX;\n    ulong noname_0;\n    ulong *puVar1;\n    ulong arg1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (*(in_RAX + 0xb0) != 0) {\n        noname_0 = fcn.00404840();\n        puVar1 = fcn.0040c560();\n        *puVar1 = 0x490e00;\n        if (*0x801c20 == 0) {\n            puVar1[1] = noname_0;\n            puVar1[2] = in_RAX;\n        }\n        else {\n            arg1 = noname_0;\n            fcn.0045dea0(noname_0, param_2, param_3, param_4);\n            fcn.0045dec0(arg1, in_RAX, param_3, param_4);\n        }\n        fcn.0043e560();\n        return noname_0;\n    }\n    return 0;\n}\n",
        "token_count": 297
    },
    "004910c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.004910c0(ulong arg1)\n\n{\n    uint64_t uVar1;\n    ulong uVar2;\n    ulong noname_2;\n    uchar in_AL;\n    ulong uVar3;\n    ulong *arg1_00;\n    uint64_t uVar4;\n    uint64_t arg2;\n    char *pcVar5;\n    uchar *puVar6;\n    uint64_t arg1_01;\n    uchar unaff_BL;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    int64_t iVar8;\n    ulong unaff_RDI;\n    int64_t iVar9;\n    int64_t arg4;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar10;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xf8 && *0x20 + -0xf8 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x178;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_AL;\n            *(*0x20 + 9) = unaff_BL;\n            *(*0x20 + 0x18) = unaff_RDI;\n            *(*0x20 + 0x10) = arg1;\n            *(*0x20 + -0x180) = 0x491118;\n            uVar3 = fcn.00447240(unaff_RDI);\n            *(*0x20 + -0xd8) = uVar3;\n            *(*0x20 + -0xd0) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0xc0) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0xb0) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            if (*(*0x20 + 0x18) < 9) {\n                *(*0x20 + -0xa0) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                *(*0x20 + -0x188) = unaff_RBP;\n                *(*0x20 + -0x180) = 0x49116f;\n                fcn.0045e4d9();\n                unaff_RBP = *(*0x20 + -0x188);\n                *(*0x20 + -0xc0) = *0x20 + -0xa0;\n            }\n            *(*0x20 + -0x180) = 0x491197;\n            uVar3 = fcn.0040d140(*0x20 + -0xd0);\n            *(*0x20 + -0x108) = uVar3;\n            arg2 = *(*0x20 + -0xd8);\n            arg1_01 = 0;\n            unaff_RDI = 0;\n            arg1_00 = NULL;\n            uVar4 = *(*0x20 + 0x18);\n            unaff_RSI = uVar4;\n            while (0 < uVar4) {\n                *(*0x20 + -0x130) = unaff_RSI;\n                *(*0x20 + -0x138) = arg1_01;\n                *(*0x20 + -0x100) = arg2;\n                *(*0x20 + -0xe8) = arg1_00;\n                *(*0x20 + -0x118) = unaff_RDI;\n                *(*0x20 + -0x110) = uVar4 - 1;\n                iVar9 = (uVar4 - 1) * 0x10;\n                arg1_01 = *(*(*0x20 + 0x10) + 8 + iVar9);\n                *(*0x20 + -0x128) = arg1_01;\n                uVar3 = *(*(*0x20 + 0x10) + iVar9);\n                *(*0x20 + -0xf8) = uVar3;\n                if (*(*0x20 + 9) == '\\0') {\n                    *(*0x20 + -0x178) = uVar3;\n                    *(*0x20 + -0x170) = arg1_01;\n                    *(*0x20 + -0x168) = 0;\n                    *(*0x20 + -0x180) = 0x491249;\n                    fcn.00402ea0(uVar4, arg2);\n                    in_XMM15_Da = 0;\n                    in_XMM15_Db = 0;\n                    in_XMM15_Dc = 0;\n                    in_XMM15_Dd = 0;\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    bVar10 = *(*0x20 + -0x160) != -1;\n                    arg2 = *(*0x20 + -0x100);\n                    unaff_RSI = *(*0x20 + -0x130);\n                    arg1_01 = *(*0x20 + -0x128);\n                }\n                else {\n                    bVar10 = false;\n                }\n                if (bVar10) {\n                    *(*0x20 + -0x180) = 0x4912bd;\n                    arg1_00 = fcn.0040c560();\n                    arg1_00[1] = 0x27;\n                    *arg1_00 = 0x4b5f6f;\n                    unaff_RSI = *(*0x20 + -0x130);\n                    arg1_01 = *(*0x20 + -0x138);\n                    unaff_RDI = 0x732b18;\n                    arg2 = *(*0x20 + -0x100);\n                }\n                else {\n                    unaff_RDI = 1;\n                    *(*0x20 + -0x180) = 0x491305;\n                    uVar4 = fcn.0048b080(0x4aebe3, arg2);\n                    if (uVar4 == 0) {\n                        arg1_01 = *(*0x20 + -0x128);\n                        if (arg1_01 == 0) goto code_r0x0049163c;\n                        arg1_01 = arg1_01 - 1;\n                        *(*0x20 + -0x180) = 0x49134a;\n                        iVar9 = fcn.0048b080(0x4aebe3, -arg1_01 >> 0x3f & 1);\n                        uVar4 = iVar9 + 1;\n                        unaff_RSI = arg1_01;\n                    }\n                    unaff_RDI = 1;\n                    if (uVar4 < 0) {\n                        iVar9 = *(*0x20 + -0x128);\n                        if (iVar9 == 0) {\n                            arg1_01 = *(*0x20 + -0x138);\n                            unaff_RSI = *(*0x20 + -0x130);\n                            arg2 = *(*0x20 + -0x100);\n                        }\n                        else {\n                            unaff_RSI = *(*0x20 + -0x138);\n                            arg1_01 = unaff_RSI + 1;\n                            if (*(*0x20 + -0x130) < arg1_01) {\n                                iVar9 = *(*0x20 + -0x100);\n                                *(*0x20 + -0x180) = 0x491396;\n                                arg2 = fcn.00447360(unaff_RSI);\n                                arg1_01 = iVar9 + 1;\n                                iVar9 = *(*0x20 + -0x128);\n                                uVar4 = *(*0x20 + -0x138);\n                            }\n                            else {\n                                arg2 = *(*0x20 + -0x100);\n                                uVar4 = unaff_RSI;\n                                unaff_RSI = *(*0x20 + -0x130);\n                            }\n                            iVar8 = uVar4 * 0x10;\n                            *(arg2 + 8 + iVar8) = iVar9;\n                            if (*0x801c20 == 0) {\n                                *(arg2 + iVar8) = *(*0x20 + -0xf8);\n                            }\n                            else {\n                                *(*0x20 + -0x180) = 0x4913de;\n                                arg2 = fcn.0045df40(unaff_RSI, arg2 + iVar8, arg1_01);\n                            }\n                        }\n                        unaff_RDI = *(*0x20 + -0x118);\n                        arg1_00 = *(*0x20 + -0xe8);\n                    }\n                    else {\n                        arg2 = *(*0x20 + -0x128);\n                        if (arg2 < uVar4) goto code_r0x00491634;\n                        if (*(*0x20 + 8) == '\\0') {\n                            uVar3 = *(*0x20 + -0xf8);\n                        }\n                        else {\n                            *(*0x20 + -0x180) = 0x49143f;\n                            uVar3 = fcn.0048a460();\n                        }\n                        *(*0x20 + -0xf0) = uVar3;\n                        *(*0x20 + -0x120) = uVar4;\n                        *(*0x20 + -0x180) = 0x491466;\n                        pcVar5 = fcn.0040f140(uVar3);\n                        if (*pcVar5 == '\\0') {\n                            *(*0x20 + -0x180) = 0x4914aa;\n                            puVar6 = fcn.0040f960(*(*0x20 + -0xf0));\n                            *puVar6 = 1;\n                            unaff_RSI = *(*0x20 + -0x138);\n                            arg1_01 = unaff_RSI + 1;\n                            if (*(*0x20 + -0x130) < arg1_01) {\n                                iVar9 = *(*0x20 + -0x100);\n                                *(*0x20 + -0x180) = 0x4914e5;\n                                arg2 = fcn.00447360(unaff_RSI);\n                                arg1_01 = iVar9 + 1;\n                                uVar4 = *(*0x20 + -0x138);\n                            }\n                            else {\n                                arg2 = *(*0x20 + -0x100);\n                                uVar4 = unaff_RSI;\n                                unaff_RSI = *(*0x20 + -0x130);\n                            }\n                            iVar9 = uVar4 * 0x10;\n                            *(arg2 + 8 + iVar9) = *(*0x20 + -0x128);\n                            if (*0x801c20 == 0) {\n                                *(arg2 + iVar9) = *(*0x20 + -0xf8);\n                            }\n                            else {\n                                *(*0x20 + -0x180) = 0x49152d;\n                                arg2 = fcn.0045df40(unaff_RSI, arg1_01, arg2 + iVar9);\n                            }\n                            unaff_RDI = *(*0x20 + -0x118);\n                            arg1_00 = *(*0x20 + -0xe8);\n                        }\n                        else {\n                            unaff_RSI = *(*0x20 + -0x130);\n                            arg1_01 = *(*0x20 + -0x138);\n                            arg2 = *(*0x20 + -0x100);\n                            unaff_RDI = *(*0x20 + -0x118);\n                            arg1_00 = *(*0x20 + -0xe8);\n                        }\n                    }\n                }\n                uVar4 = *(*0x20 + -0x110);\n            }\n            uVar4 = 0;\n            while( true ) {\n                if (arg1_01 >> 1 <= uVar4) {\n                    return arg2;\n                }\n                if (arg1_01 <= uVar4) goto code_r0x0049162c;\n                uVar1 = (arg1_01 - uVar4) - 1;\n                iVar9 = uVar4 * 0x10;\n                uVar3 = *(arg2 + iVar9);\n                uVar2 = *(arg2 + 8 + iVar9);\n                if (arg1_01 <= uVar1) break;\n                arg4 = uVar1 * 0x10;\n                noname_2 = *(arg4 + arg2);\n                *(arg2 + 8 + iVar9) = *(arg4 + 8 + arg2);\n                iVar8 = arg4 + arg2;\n                if (*0x801c20 == 0) {\n                    *(arg2 + iVar9) = noname_2;\n                }\n                else {\n                    *(*0x20 + -0xe0) = iVar8;\n                    *(*0x20 + -0x180) = 0x4915cd;\n                    unaff_RDI = fcn.0045df20(arg1_00, arg2, noname_2, arg4);\n                    iVar8 = *(*0x20 + -0xe0);\n                }\n                *(arg2 + 8 + arg4) = uVar2;\n                if (*0x801c20 == 0) {\n                    *(arg2 + arg4) = uVar3;\n                }\n                else {\n                    *(*0x20 + -0x180) = 0x4915fd;\n                    unaff_RDI = fcn.0045df40(arg1_00, arg2, iVar8);\n                }\n                uVar4 = uVar4 + 1;\n            }\n            *(*0x20 + -0x180) = 0x49162c;\n            fcn.0045e240(arg1_01);\ncode_r0x0049162c:\n            *(*0x20 + -0x180) = 0x491634;\n            uVar4 = fcn.0045e240(arg1_01);\ncode_r0x00491634:\n            *(*0x20 + -0x180) = 0x49163c;\n            fcn.0045e280(uVar4, arg2);\ncode_r0x0049163c:\n            unaff_BL = arg1_01;\n            arg1 = 0;\n            *(*0x20 + -0x180) = 0x491648;\n            in_AL = fcn.0045e300(0);\n        }\n        puVar7[8] = in_AL;\n        puVar7[9] = unaff_BL;\n        *(puVar7 + 0x10) = arg1;\n        *(puVar7 + 0x18) = unaff_RDI;\n        *(puVar7 + 0x20) = unaff_RSI;\n        *(puVar7 + -8) = 0x491665;\n        fcn.0045bb60();\n        in_AL = puVar7[8];\n        unaff_BL = puVar7[9];\n        arg1 = *(puVar7 + 0x10);\n        unaff_RDI = *(puVar7 + 0x18);\n        unaff_RSI = *(puVar7 + 0x20);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 3460
    },
    "004916a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.004916a0(uint64_t arg1)\n\n{\n    char cVar1;\n    ulong *in_RAX;\n    ulong uVar2;\n    ulong *puVar3;\n    uint64_t arg1_00;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (unaff_RBX != 0) {\n        arg2 = 0;\n        puVar3 = in_RAX;\n        while( true ) {\n            uVar2 = *puVar3;\n            fcn.0048b760(0x4aebe3, arg2);\n            if ((uVar2 != '\\0') && (cVar1 = fcn.0048ae20(0x4afb95),  cVar1 != '\\0')) {\n                return in_RAX;\n            }\n            arg2 = arg2 + 1;\n            if (unaff_RBX <= arg2) break;\n            puVar3 = puVar3 + 2;\n        }\n    }\n    fcn.00484040();\n    uVar2 = fcn.0044ae80(0xb);\n    arg1_00 = unaff_RBX + 1;\n    if (arg1 < arg1_00) {\n        puVar3 = fcn.00447360(unaff_RBX);\n        arg1_00 = in_RAX + 1;\n        in_RAX = puVar3;\n    }\n    in_RAX[unaff_RBX * 2 + 1] = 0x4afeae;\n    if (*0x801c20 == 0) {\n        in_RAX[unaff_RBX * 2] = uVar2;\n    }\n    else {\n        fcn.0045dda0(arg1_00, in_RAX, in_RAX + unaff_RBX * 2, in_R9);\n    }\n    return in_RAX;\n}\n",
        "token_count": 472
    },
    "00491ae0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00491d26)\n// WARNING: Removing unreachable block (ram,0x00491d2b)\n// WARNING: Removing unreachable block (ram,0x00491b70)\n// WARNING: Removing unreachable block (ram,0x00491b65)\n// WARNING: Removing unreachable block (ram,0x0049213f)\n\nulong fcn.00491ae0(ulong param_1, ulong param_2)\n\n{\n    ulong uVar1;\n    char cVar2;\n    ulong in_RAX;\n    char **ppcVar3;\n    int64_t iVar4;\n    ulong *puVar5;\n    char *arg4;\n    int64_t iVar6;\n    ulong uVar7;\n    uint64_t arg2;\n    ulong uVar8;\n    int64_t iVar9;\n    ulong unaff_RBX;\n    char *pcVar10;\n    uint64_t uVar11;\n    int64_t unaff_R14;\n    ulong uStack200;\n    int64_t iStack192;\n    int64_t iStack184;\n    ulong uStack176;\n    int64_t iStack168;\n    uint64_t uStack160;\n    char *pcStack152;\n    ulong uStack144;\n    ulong uStack136;\n    ulong *puStack128;\n    ulong uStack120;\n    uchar (*pauStack112) [16];\n    uchar auStack104 [16];\n    \n    while (&uStack200 < *(unaff_R14 + 0x10) || &uStack200 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00484040();\n    fcn.0048a460();\n    ppcVar3 = fcn.00489660(0x4aebe1, param_2, 0xffffffffffffffff);\n    iVar6 = 0;\n    arg2 = 0;\n    uStack160 = 0;\n    iVar9 = 0;\n    while( true ) {\n        pcVar10 = ppcVar3[1];\n        arg4 = *ppcVar3;\n        if (pcVar10 != NULL) {\n            iVar4 = iVar9;\n            iStack184 = iVar6;\n            pauStack112 = ppcVar3;\n            if (*arg4 != '.') {\n                iStack168 = iVar9;\n                arg4 = fcn.0044ae80(1);\n                pcVar10 = 0x4aebdd;\n                iVar4 = iStack168;\n            }\n            uVar11 = uStack160 + 1;\n            iVar9 = iVar4;\n            if (arg2 < uVar11) {\n                arg2 = uStack160;\n                pcStack152 = arg4;\n                iVar9 = fcn.00447360(uStack160);\n                uVar11 = iVar4 + 1;\n                arg4 = pcStack152;\n            }\n            iVar4 = uStack160 * 0x10;\n            *(iVar9 + 8 + iVar4) = pcVar10;\n            iVar6 = iStack184;\n            if (*0x801c20 == 0) {\n                *(iVar9 + iVar4) = arg4;\n                ppcVar3 = pauStack112;\n                uStack160 = uVar11;\n            }\n            else {\n                ppcVar3 = fcn.0045df40(iStack184, arg2, iVar9 + iVar4);\n                uStack160 = uVar11;\n            }\n        }\n        iVar6 = iVar6 + 1;\n        if (6 < iVar6) break;\n        ppcVar3 = ppcVar3 + 2;\n    }\n    uVar7 = 0x4aecd8;\n    iStack168 = iVar9;\n    iVar4 = fcn.004891c0(0x4aecd8);\n    if (-1 < iVar4) {\n        iVar4 = iStack168;\n        uVar7 = fcn.00491980(iStack168, iVar9);\n        if (iVar4 != 0) {\n            puVar5 = fcn.0040c560();\n            puVar5[1] = unaff_RBX;\n            if (*0x801c20 == 0) {\n                *puVar5 = in_RAX;\n            }\n            else {\n                puVar5 = fcn.0045dec0(unaff_RBX, in_RAX, iVar6, arg4);\n            }\n            puVar5[2] = iVar4;\n            if (*0x801c20 == 0) {\n                puVar5[3] = uStack160;\n            }\n            else {\n                fcn.0045dec0(unaff_RBX, uStack160, iVar6, arg4);\n            }\n            return 0;\n        }\n        return uVar7;\n    }\n    fcn.0046a5e0(uVar7);\n    if (uVar7 == '\\0') {\n        auStack104 = CONCAT88(1, 0x4aebdd);\n        uVar7 = in_RAX;\n        fcn.0048c6c0(2);\n        iVar9 = iStack168;\n        uStack136 = fcn.00491980(iStack168, uVar7);\n        if (iVar9 == 0) {\n            uStack200 = 2;\n            fcn.0048e8c0();\n            puStack128 = fcn.0040c560();\n            puStack128[1] = unaff_RBX;\n            uVar7 = unaff_RBX;\n            uVar8 = in_RAX;\n            if (*0x801c20 == 0) {\n                *puStack128 = in_RAX;\n            }\n            else {\n                puStack128 = fcn.0045dec0(unaff_RBX, in_RAX, iVar6, arg4);\n            }\n            uVar1 = *0x7ad8e8;\n            iVar6 = *0x7ad8e0;\n            puStack128[2] = *0x7ad8e0;\n            if (*0x801c20 == 0) {\n                puStack128[3] = uVar1;\n            }\n            else {\n                puStack128 = fcn.0045df00(uVar7, uVar8, iVar6, arg4);\n            }\n            iStack192 = 0x732c18;\n        }\n        else {\n            iStack192 = 0;\n            puStack128 = NULL;\n            uStack200 = 0;\n            uStack136 = 0;\n        }\n    }\n    else {\n        iStack192 = 0;\n        puStack128 = NULL;\n        uStack200 = 0;\n        uStack136 = 0;\n    }\n    fcn.00484040();\n    pauStack112 = fcn.0048cba0();\n    iVar9 = 0;\n    while( true ) {\n        auStack104 = *pauStack112;\n        uVar7 = in_RAX;\n        iStack184 = iVar9;\n        fcn.0048c6c0(2);\n        iVar9 = iStack168;\n        uStack176 = fcn.00491980(iStack168, uVar7);\n        uVar7 = uStack200;\n        if (iVar9 == 0) break;\n        iVar9 = iStack184 + 1;\n        if (3 < iVar9) {\n            if (iStack192 == 0) {\n                puVar5 = fcn.0040c560();\n                puVar5[1] = unaff_RBX;\n                if (*0x801c20 == 0) {\n                    *puVar5 = in_RAX;\n                }\n                else {\n                    puVar5 = fcn.0045dec0(unaff_RBX, in_RAX, iVar6, arg4);\n                }\n                uVar7 = *0x7ad8f8;\n                puVar5[2] = *0x7ad8f0;\n                if (*0x801c20 == 0) {\n                    puVar5[3] = uVar7;\n                }\n                else {\n                    fcn.0045dec0(unaff_RBX, uVar7, iVar6, arg4);\n                }\n                return 0;\n            }\n            return uStack136;\n        }\n        pauStack112 = pauStack112[1];\n    }\n    if (iStack192 != 0) {\n        iVar9 = iStack192;\n        uStack120 = fcn.00486b20();\n        uStack144 = uVar7;\n        iVar4 = iVar9;\n        uVar7 = fcn.00486b20();\n        if (((iVar9 != 0) || (iVar4 != 0)) || (cVar2 = fcn.00487580(uVar7),  cVar2 == '\\0')) {\n            return uStack136;\n        }\n    }\n    cVar2 = fcn.0048c8c0();\n    if (cVar2 == '\\0') {\n        fcn.0048e8c0();\n        puVar5 = fcn.0040c560();\n        puVar5[1] = unaff_RBX;\n        if (*0x801c20 == 0) {\n            *puVar5 = in_RAX;\n        }\n        else {\n            puVar5 = fcn.0045dec0(unaff_RBX, in_RAX, iVar6, arg4);\n        }\n        uVar7 = *0x7ad8e8;\n        puVar5[2] = *0x7ad8e0;\n        if (*0x801c20 == 0) {\n            puVar5[3] = uVar7;\n        }\n        else {\n            fcn.0045dec0(unaff_RBX, uVar7, iVar6, arg4);\n        }\n        return uStack176;\n    }\n    return uStack176;\n}\n",
        "token_count": 2134
    },
    "00494880": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00494880(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t arg2;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    uchar auStack56 [16];\n    uchar auStack40 [16];\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00494be0();\n    auStack56 = CONCAT88(2, 0x4aec0a);\n    auStack40 = CONCAT88(5, 0x4af080);\n    auStack24 = CONCAT88(0x2c, 0x4b69f1);\n    fcn.0048ed60(auStack56);\n    auStack56 = CONCAT88(2, 0x4aec0a);\n    auStack40 = CONCAT88(5, 0x4af080);\n    auStack24 = CONCAT88(0x2c, 0x4b69f1);\n    arg2 = fcn.0048ed60(auStack56);\n    iVar1 = fcn.0040c560();\n    *(iVar1 + 0x18) = 0x8000000;\n    if (*0x801c20 == 0) {\n        *(arg2 + 0x98) = iVar1;\n    }\n    else {\n        fcn.0045dda0(arg2 + 0x98, arg2, param_3, param_4);\n    }\n    fcn.0048fec0();\n    return;\n}\n",
        "token_count": 381
    },
    "00412860": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.00412860(void)\n\n{\n    ulong in_RAX;\n    uint64_t arg1;\n    uint64_t uVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = in_RAX;\n            uVar1 = (unaff_RBX >> 3) + 7 >> 3;\n            *(*0x20 + -0x20) = uVar1;\n            *(*0x20 + -0x28) = uVar1 + 1;\n            unaff_RBX = 1;\n            *(*0x20 + -0x50) = 0x4128ab;\n            arg1 = fcn.0040c8c0(0x8044f0);\n            uVar1 = *(*0x20 + -0x28);\n            if (uVar1 < 0x40000001) {\n                if (*(*0x20 + -0x20) < uVar1) {\n                    *(*0x20 + -0x18) = arg1;\n                    *(*(*0x20 + -0x20) + arg1) = 0xa1;\n                    *(*0x20 + -0x50) = 0x4128e5;\n                    fcn.00412960(arg1);\n                    if (*(*(*0x20 + -0x20) + *(*0x20 + -0x18)) == -0x5f) {\n                        return;\n                    }\n                    unaff_RBX = 0x1b;\n                    *(*0x20 + -0x50) = 0x412913;\n                    fcn.00433c80();\n                    uVar1 = arg1;\n                }\n                *(*0x20 + -0x50) = 0x41291b;\n                fcn.0045e240(uVar1);\n            }\n            *(*0x20 + -0x50) = 0x412925;\n            in_RAX = fcn.0045e2a0(uVar1, 0x40000000);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x412935;\n        fcn.0045bb60();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 663
    },
    "004206a0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.004206a0(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint8_t uVar2;\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t arg1_00;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t unaff_RBX;\n    uint8_t *puVar7;\n    uint64_t uVar8;\n    uint32_t uVar9;\n    uint64_t uVar10;\n    uint64_t in_R9;\n    uint64_t in_R11;\n    \n    uVar5 = unaff_RBX + 0x800000000000;\n    uVar6 = uVar5 >> 0x16;\n    uVar3 = arg1 + 0x7fffffffe000;\n    uVar4 = uVar3 >> 0x16;\n    uVar2 = uVar6;\n    uVar8 = uVar3;\n    if (uVar4 == uVar6) {\n        uVar8 = in_RAX[1];\n        if (uVar5 >> 0x19 < in_RAX[2]) {\n            puVar7 = (uVar5 >> 0x19) + uVar8;\n            LOCK();\n            *puVar7 = *puVar7 | 1 << (uVar2 & 7);\n            uVar8 = uVar3;\n        }\n        else {\n            in_RAX = fcn.0045e260(in_RAX[2]);\n        }\n    }\n    else {\n        uVar5 = uVar5 >> 0x19;\n        uVar3 = uVar3 >> 0x19;\n        if (uVar5 == uVar3) {\n            uVar4 = (uVar4 - uVar6) + 1;\n            uVar9 = 1 << (uVar4 & 0x1f) & -(uVar4 < 0x20);\n            uVar10 = uVar9;\n            uVar9 = uVar9 - 1 << (uVar2 & 7);\n            uVar3 = uVar9;\n            uVar4 = in_RAX[2];\n            if (uVar4 <= uVar5) {\n                in_RAX = fcn.0045e260(uVar4);\n                goto code_r0x004207f6;\n            }\n            LOCK();\n            *(in_RAX[1] + uVar5) = *(in_RAX[1] + uVar5) | uVar9;\n            goto code_r0x004207b9;\n        }\n        uVar10 = uVar6 + 7 & 0xfffffffffffffff8;\n        uVar6 = uVar10 - uVar6;\n        if (uVar6 != 0) {\n            arg1_00 = in_RAX[2];\n            if (arg1_00 <= uVar5) goto code_r0x00420867;\n            LOCK();\n            *(in_RAX[1] + uVar5) = *(in_RAX[1] + uVar5) | (-(uVar6 < 0x20) & 1 << (uVar6 & 0x1f)) - 1 << (uVar2 & 7);\n        }\n        in_R11 = uVar4 & 0xfffffffffffffff8;\n        for (; uVar10 < in_R11; uVar10 = uVar10 + 8) {\n            arg1_00 = in_RAX[2];\n            uVar5 = in_RAX[1];\n            in_R9 = uVar10 >> 3;\n            if (arg1_00 <= in_R9) goto code_r0x0042085c;\ncode_r0x004207f6:\n            *(in_R9 + uVar5) = 0xff;\n        }\n        uVar4 = (uVar4 - in_R11) + 1;\n        if (uVar4 != 0) {\n            arg1_00 = in_RAX[1];\n            if (in_RAX[2] <= uVar3) {\n                fcn.0045e260(in_RAX[2]);\ncode_r0x0042085c:\n                fcn.0045e260(arg1_00);\ncode_r0x00420867:\n                fcn.0045e260(arg1_00);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            LOCK();\n            *(arg1_00 + uVar3) = *(arg1_00 + uVar3) | (1 << (uVar4 & 0x1f) & -(uVar4 < 0x20)) - 1;\n        }\n    }\ncode_r0x004207b9:\n    uVar4 = *in_RAX;\n    if (uVar4 < 0) {\n        uVar4 = -uVar4;\n    }\n    if (uVar4 < uVar8) {\n        *in_RAX = -uVar8;\n    }\n    return;\n}\n",
        "token_count": 1101
    },
    "00435840": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043592b)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00435840(ulong noname_0, ulong arg2)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    uint uVar4;\n    uint uVar6;\n    double dVar5;\n    uchar in_XMM0 [16];\n    double dVar7;\n    uint uStack20;\n    ushort uStack16;\n    uchar uStack14;\n    uchar uStack13;\n    uchar uStack12;\n    char cStack11;\n    char cStack10;\n    char cStack9;\n    \n    while (dVar5 = SUB168(in_XMM0, 0),  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n        in_XMM0 = in_XMM0 & 0xffffffffffffffff;\n    }\n    uVar4 = SUB164(in_XMM0, 0);\n    uVar6 = SUB164(in_XMM0 >> 0x20, 0);\n    if (dVar5 == dVar5 + dVar5) {\n        if (0.0 < dVar5) {\n            fcn.00435e40();\n            return;\n        }\n        if ((dVar5 == dVar5 + dVar5) && (dVar5 < 0.0)) {\n            fcn.00435e40();\n            return;\n        }\n    }\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack14 = 0;\n    if (dVar5 == 0.0) {\n        iVar2 = 0;\n    }\n    else {\n        if (dVar5 < 0.0) {\n            in_XMM0 = ZEXT816(*0x732840) ^ in_XMM0;\n        }\n        iVar2 = 0;\n        for (; *0x7327f8 <= SUB168(in_XMM0, 0);\n            in_XMM0 = CONCAT88(SUB168(in_XMM0 >> 0x40, 0), SUB168(in_XMM0, 0) / *0x7327f8)) {\n            iVar2 = iVar2 + 1;\n        }\n        for (; dVar5 = SUB168(in_XMM0, 0),  dVar5 < *0x7327d0;\n            in_XMM0 = CONCAT88(SUB168(in_XMM0 >> 0x40, 0), dVar5 * *0x7327f8)) {\n            iVar2 = iVar2 + -1;\n        }\n        dVar7 = *0x7327f0;\n        for (iVar3 = 0; iVar3 < 7; iVar3 = iVar3 + 1) {\n            dVar7 = dVar7 / *0x7327f8;\n        }\n        dVar7 = dVar7 + dVar5;\n        if (*0x7327f8 <= dVar7) {\n            iVar2 = iVar2 + 1;\n            dVar7 = dVar7 / *0x7327f8;\n        }\n        uVar4 = SUB84(dVar7, 0);\n        uVar6 = dVar7 >> 0x20;\n    }\n    for (iVar3 = 0; iVar3 < 7; iVar3 = iVar3 + 1) {\n        *(&uStack20 + iVar3) = CONCAT44(uVar6, uVar4) + '0';\n        dVar5 = (CONCAT44(uVar6, uVar4) - CONCAT44(uVar6, uVar4)) * *0x7327f8;\n        uVar4 = SUB84(dVar5, 0);\n        uVar6 = dVar5 >> 0x20;\n    }\n    uStack20 = CONCAT31(uStack20._1_3_, 0x2e);\n    uStack13 = 0x65;\n    uStack12 = 0x2b;\n    if (iVar2 < 0) {\n        uStack12 = 0x2d;\n        iVar2 = -iVar2;\n    }\n    cStack11 = ((SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(iVar2) >> 0x40, 0) + iVar2 >> 6) - (iVar2 >> 0x3f)) + '0'\n    ;\n    iVar3 = (SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar2) >> 0x40, 0) + iVar2 >> 3) - (iVar2 >> 0x3f);\n    cVar1 = iVar3;\n    cStack10 = cVar1 + ((iVar3 & 0xff) / 10) * -10 + '0';\n    cStack9 = iVar2 + cVar1 * -10 + '0';\n    fcn.00435620(0xe);\n    return;\n}\n",
        "token_count": 1131
    },
    "0044a9e0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.0044a9e0(void)\n\n{\n    ulong *puVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xb8 && *0x20 + -0xb8 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x138;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + -0x148) = *0x20 + -8;\n            *(*0x20 + -0x140) = 0x44aa2f;\n            fcn.0045e4ab();\n            unaff_RBP = *(*0x20 + -0x148);\n            *(*0x20 + -0x128) = 0x4a6b00;\n            *(*0x20 + -0x120) = *0x20 + -0x118;\n            puVar1 = *(*0x20 + -0x128);\n            if ((*(puVar1 + 0x17) & 0x40) == 0) {\n                for (iVar2 = 0x79ae80; iVar2 != 0; iVar2 = *(iVar2 + 0x220)) {\n                    if ((*(iVar2 + 0x130) < 0x801bf1) && (0x801bf0 < *(iVar2 + 0x100))) goto code_r0x0044aa96;\n                }\n                iVar2 = 0;\ncode_r0x0044aa96:\n                if (iVar2 != 0) {\n                    *0x801bf0 = -(*puVar1 + 7U & 0xfffffff8);\n                    *0x801bf4 = *puVar1;\n                    *0x801bf8 = puVar1[1];\n                    *0x801bfc = puVar1[4] - *(iVar2 + 0x128);\n                    return;\n                }\n                *(*0x20 + -0x140) = 0x44aaf0;\n                fcn.00433c80();\n            }\n            *(*0x20 + -0x140) = 0x44ab05;\n            fcn.00433c80();\n        }\n        *(puVar3 + -8) = 0x44ab0b;\n        fcn.0045bb60();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 581
    },
    "0044b9c0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong fcn.0044b9c0(void)\n\n{\n    uint64_t in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x18) = in_XMM15;\n            if (0x7fff < in_RAX) {\n                if (in_RAX <= in_RAX + 0x2000) {\n                    in_RAX = in_RAX + 0x1fff & 0xffffffffffffe000;\n                }\n                goto code_r0x0044ba99;\n            }\n            if (in_RAX < 0x3f9) {\n                uVar3 = in_RAX + 7 >> 3;\n                if (uVar3 < 0x81) {\n                    uVar3 = *(uVar3 + 0x798460);\n                    if (0x43 < uVar3) goto code_r0x0044bb17;\n                    in_RAX = *(uVar3 * 2 + 0x7985a0);\ncode_r0x0044ba99:\n                    *(*0x20 + -0x30) = in_RAX;\n                    *(*0x20 + -0x50) = 0x44baaa;\n                    uVar1 = fcn.0040bba0(0);\n                    iVar4 = *(*0x20 + 8);\n                    iVar2 = *(*0x20 + -0x30);\n                    if (iVar4 != iVar2) {\n                        *(*0x20 + -0x28) = uVar1;\n                        *(*0x20 + -0x50) = 0x44bad0;\n                        fcn.0045e8c0(iVar2 - iVar4);\n                        uVar1 = *(*0x20 + -0x28);\n                        iVar2 = *(*0x20 + -0x30);\n                        iVar4 = *(*0x20 + 8);\n                    }\n                    *(*0x20 + -0x20) = uVar1;\n                    *(*0x20 + -0x18) = iVar4;\n                    *(*0x20 + -0x10) = iVar2;\n                    return *(*0x20 + -0x20);\n                }\n            }\n            else {\n                uVar3 = in_RAX - 0x381 >> 7;\n                if (uVar3 < 0xf9) {\n                    if (\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                        [uVar3] < 0x44) {\n                        in_RAX = *(\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                   [uVar3] * 2 + 0x7985a0);\n                        goto code_r0x0044ba99;\n                    }\n                    *(*0x20 + -0x50) = 0x44bb0a;\n                    fcn.0045e240(0x44);\n                }\n                *(*0x20 + -0x50) = 0x44bb17;\n                fcn.0045e260(0xf9);\ncode_r0x0044bb17:\n                *(*0x20 + -0x50) = 0x44bb25;\n                fcn.0045e240(0x44);\n            }\n            *(*0x20 + -0x50) = 0x44bb32;\n            in_RAX = fcn.0045e260(0x81);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x44bb3d;\n        fcn.0045bb60();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1091
    },
    "0044bb60": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong fcn.0044bb60(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    ulong uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x18) = in_XMM15;\n            if (in_RAX < 0x400000000001) {\n                *(*0x20 + 8) = in_RAX;\n                uVar1 = in_RAX * 4;\n                *(*0x20 + -0x30) = uVar1;\n                if (0x7fff < uVar1) {\n                    if (uVar1 <= uVar1 + 0x2000) {\n                        uVar1 = uVar1 + 0x1fff & 0xffffffffffffe000;\n                    }\n                    goto code_r0x0044bc59;\n                }\n                if (uVar1 < 0x3f9) {\n                    uVar1 = uVar1 + 7 >> 3;\n                    if (uVar1 < 0x81) {\n                        uVar1 = *(uVar1 + 0x798460);\n                        if (0x43 < uVar1) goto code_r0x0044bce5;\n                        uVar1 = *(uVar1 * 2 + 0x7985a0);\ncode_r0x0044bc59:\n                        *(*0x20 + -0x38) = uVar1;\n                        *(*0x20 + -0x58) = 0x44bc6a;\n                        uVar2 = fcn.0040bba0(0);\n                        uVar1 = *(*0x20 + -0x38);\n                        if (uVar1 != *(*0x20 + -0x30)) {\n                            *(*0x20 + -0x28) = uVar2;\n                            *(*0x20 + -0x58) = 0x44bc95;\n                            fcn.0045e8c0(uVar1, *(*0x20 + 8));\n                            uVar2 = *(*0x20 + -0x28);\n                            uVar1 = *(*0x20 + -0x38);\n                        }\n                        *(*0x20 + -0x20) = uVar2;\n                        *(*0x20 + -0x18) = *(*0x20 + 8);\n                        *(*0x20 + -0x10) = uVar1 >> 2;\n                        return *(*0x20 + -0x20);\n                    }\n                }\n                else {\n                    uVar1 = uVar1 - 0x381 >> 7;\n                    if (uVar1 < 0xf9) {\n                        if (\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                            [uVar1] < 0x44) {\n                            uVar1 = *(\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                      [uVar1] * 2 + 0x7985a0);\n                            goto code_r0x0044bc59;\n                        }\n                        *(*0x20 + -0x58) = 0x44bcd3;\n                        fcn.0045e240(0x44);\n                    }\n                    *(*0x20 + -0x58) = 0x44bce5;\n                    fcn.0045e260(0xf9);\ncode_r0x0044bce5:\n                    *(*0x20 + -0x58) = 0x44bcf2;\n                    fcn.0045e240(0x44);\n                }\n                *(*0x20 + -0x58) = 0x44bcff;\n                fcn.0045e260(0x81);\n            }\n            *(*0x20 + -0x58) = 0x44bd10;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x44bd1b;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1153
    },
    "0044dee0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint8_t * fcn.0044dee0(int64_t arg1)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint8_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint8_t *puVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    uint64_t unaff_RBX;\n    int32_t *unaff_RSI;\n    int64_t *unaff_RDI;\n    char in_R8B;\n    uint64_t uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint64_t in_R10;\n    int64_t unaff_R12;\n    \n    if (unaff_RBX != 0) {\n        uVar1 = *in_RAX;\n        uVar10 = uVar1;\n        if ((uVar1 == 0) && (in_R8B == '\\0')) {\n            return NULL;\n        }\n        if (-1 < uVar1) {\n            uVar8 = 1;\n            goto code_r0x0044df35;\n        }\n        uVar6 = 0;\n        uVar8 = 0;\n        iVar9 = 0;\n        while (uVar6 < unaff_RBX) {\n            puVar5 = in_RAX + uVar6;\n            uVar7 = uVar6 + 1;\n            uVar6 = uVar7;\n            uVar10 = (*puVar5 & 0x7f) << (iVar9 & 0x1f);\n            in_R10 = uVar10;\n            uVar10 = uVar8 | uVar10;\n            uVar8 = uVar10;\n            if ((*puVar5 & 0x80) == 0) {\n                uVar8 = uVar7;\n                unaff_R12 = arg1;\ncode_r0x0044df35:\n                uVar10 = -(uVar10 & 1) ^ uVar10 >> 1;\n                uVar6 = uVar10;\n                *unaff_RSI = *unaff_RSI + uVar10;\n                if (uVar8 <= unaff_RBX) {\n                    unaff_RBX = unaff_RBX - uVar8;\n                    uVar6 = arg1 - uVar8;\n                    uVar8 = uVar8 & -uVar6 >> 0x3f;\n                    unaff_RSI = in_RAX + uVar8;\n                    if (unaff_RBX != 0) {\n                        uVar3 = in_RAX[uVar8];\n                        if (-1 < in_RAX[uVar8]) {\n                            uVar4 = 1;\n                            goto code_r0x0044df88;\n                        }\n                        uVar10 = 0;\n                        uVar8 = 0;\n                        uVar3 = 0;\n                        while (uVar3 < unaff_RBX) {\n                            uVar4 = uVar3 + 1;\n                            iVar9 = uVar8;\n                            uVar10 = uVar10 | (*(uVar3 + unaff_RSI) & 0x7f) << (uVar8 & 0x1f);\n                            in_R10 = uVar4;\n                            if ((*(uVar3 + unaff_RSI) & 0x80) == 0) {\n                                uVar3 = uVar10;\ncode_r0x0044df88:\n                                if (uVar4 <= unaff_RBX) {\n                                    *unaff_RDI = *unaff_RDI + uVar3;\n                                    return (uVar4 & -(uVar6 - uVar4) >> 0x3f) + unaff_RSI;\n                                }\n                                uVar8 = unaff_RBX;\n                                uVar10 = fcn.0045e300(unaff_RBX);\n                                iVar9 = uVar8;\n                            }\n                            uVar8 = iVar9 + 7;\n                            uVar3 = in_R10 & 0xffffffff;\n                        }\n                        fcn.0045e240(unaff_RBX);\n                    }\n                    fcn.0045e240(0);\n                }\n                uVar3 = unaff_RBX;\n                in_RAX = fcn.0045e300(unaff_RBX);\n                iVar9 = uVar3;\n                arg1 = unaff_R12;\n            }\n            iVar9 = iVar9 + 7;\n        }\n        fcn.0045e240(unaff_RBX);\n    }\n    fcn.0045e240(0);\n    pcVar2 = swi(3);\n    puVar5 = (*pcVar2)();\n    return puVar5;\n}\n",
        "token_count": 1010
    },
    "00452520": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong fcn.00452520(void)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    ulong uVar3;\n    uint *puVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    iVar2 = fcn.0044cfe0();\n    if (iVar2 != 0) {\n        if (*(iVar2 + 0x27) < 8) {\n            puVar4 = NULL;\n        }\n        else {\n            uVar1 = *(iVar2 + *(iVar2 + 0x1c) * 4 + 0x44);\n            puVar4 = uVar1 + *(unaff_RBX + 0x130) & (uVar1 == 0xffffffff) - 1;\n        }\n        if (puVar4 != NULL) {\n            uVar3 = fcn.0044ce60(*puVar4);\n            return uVar3;\n        }\n        return in_RAX;\n    }\n    return in_RAX;\n}\n",
        "token_count": 276
    },
    "0048dca0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nint64_t fcn.0048dca0(uint64_t arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uint64_t unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    uint8_t unaff_SIL;\n    uint32_t unaff_EDI;\n    uint64_t in_R8;\n    uchar uVar10;\n    uint64_t in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        uVar10 = in_R9;\n        cVar1 = in_R8;\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_EDI;\n            *(*0x20 + -0x30) = 0;\n            if ((unaff_EDI == unaff_SIL) || (unaff_EDI == 0x5c)) {\n                uVar2 = unaff_RBX + 1;\n                iVar7 = in_RAX;\n                uVar6 = unaff_RBX;\n                if (arg1 < uVar2) {\n                    *(*0x20 + -0x80) = 0x48de0f;\n                    iVar7 = fcn.00447360(unaff_RBX);\n                    uVar2 = in_RAX + 1;\n                    uVar6 = *(*0x20 + 0x10);\n                    unaff_EDI = *(*0x20 + 0x20);\n                    arg1 = unaff_RBX;\n                }\n                uVar10 = unaff_EDI;\n                *(iVar7 + uVar6) = 0x5c;\n                if (arg1 < uVar2 + 1) {\n                    *(*0x20 + -0x18) = uVar2;\n                    *(*0x20 + -0x80) = 0x48de4c;\n                    iVar7 = fcn.00447360(uVar2);\n                    uVar2 = *(*0x20 + -0x18);\n                    uVar10 = *(*0x20 + 0x20);\n                }\n                *(iVar7 + uVar2) = uVar10;\n                return iVar7;\n            }\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            if (cVar1 != '\\0') {\n                if (unaff_EDI < 0x80) {\n                    *(*0x20 + -0x80) = 0x48dd1d;\n                    cVar1 = fcn.0048e4e0();\n                    arg1 = *(*0x20 + 0x18);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_EDI = *(*0x20 + 0x20);\n                    in_RAX = *(*0x20 + 8);\n                }\n                else {\n                    cVar1 = '\\0';\n                }\n                if (cVar1 != '\\0') {\n                    if (arg1 < unaff_RBX + 1) {\n                        *(*0x20 + -0x80) = 0x48dd66;\n                        in_RAX = fcn.00447360(unaff_RBX);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        unaff_EDI = *(*0x20 + 0x20);\n                    }\n                    *(in_RAX + unaff_RBX) = unaff_EDI;\n                    return in_RAX;\n                }\n                goto code_r0x0048df43;\n            }\n            *(*0x20 + 0x26) = uVar10;\n            *(*0x20 + -0x80) = 0x48dd99;\n            cVar1 = fcn.0048e4e0();\n            if (cVar1 != '\\0') goto code_r0x0048de6d;\n            if (*(*0x20 + 0x26) == '\\0') {\n                unaff_EDI = *(*0x20 + 0x20);\n                goto code_r0x0048df2b;\n            }\n            unaff_EDI = *(*0x20 + 0x20);\n            if (0xffff < unaff_EDI) goto code_r0x0048df2b;\n            unaff_RBX = 0;\n            uVar2 = *0x7a6818;\n            while (uVar6 = uVar2,  unaff_RBX < uVar6) {\n                iVar7 = uVar6 - unaff_RBX >> 1;\n                in_R9 = iVar7 + unaff_RBX;\n                arg1 = *0x7a6818;\n                in_R8 = uVar6;\n                if (*0x7a6818 <= in_R9) goto code_r0x0048e470;\n                uVar2 = in_R9;\n                in_R8 = in_R9;\n                if (*(*0x7a6810 + in_R9 * 2) < unaff_EDI) {\n                    unaff_RBX = iVar7 + unaff_RBX + 1;\n                    uVar2 = uVar6;\n                    in_R8 = uVar6;\n                }\n            }\n            if (*0x7a6818 <= unaff_RBX) goto code_r0x0048df2b;\n            if (unaff_RBX < *0x7a6818) {\n                if (*(*0x7a6810 + unaff_RBX * 2) == unaff_EDI) {\ncode_r0x0048de6d:\n                    unaff_EDI = *(*0x20 + 0x20);\n                    *(*0x20 + -0x80) = 0x48de86;\n                    uVar2 = fcn.00465080(4);\n                    if (uVar2 < 5) {\n                        uVar6 = *(*0x20 + 0x10);\n                        *(*0x20 + -0x18) = uVar6 + uVar2;\n                        if (*(*0x20 + 0x18) < uVar6 + uVar2) {\n                            *(*0x20 + -0x28) = uVar2;\n                            *(*0x20 + -0x80) = 0x48ded1;\n                            uVar3 = fcn.00447360(uVar6);\n                            uVar2 = *(*0x20 + -0x28);\n                        }\n                        else {\n                            uVar3 = *(*0x20 + 8);\n                            uVar6 = *(*0x20 + 0x18);\n                        }\n                        *(*0x20 + -0x20) = uVar6;\n                        *(*0x20 + -0x10) = uVar3;\n                        *(*0x20 + -0x80) = 0x48df05;\n                        fcn.0045ebc0(uVar2);\n                        return *(*0x20 + -0x10);\n                    }\n                    *(*0x20 + -0x80) = 0x48df2b;\n                    fcn.0045e280(uVar2, 4);\n                }\ncode_r0x0048df2b:\n                in_RAX = *(*0x20 + 8);\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\ncode_r0x0048df43:\n                if (unaff_EDI < 10) {\n                    if (unaff_EDI == 7) {\n                        if (arg1 < unaff_RBX + 2) {\n                            *(*0x20 + -0x18) = unaff_RBX + 2;\n                            *(*0x20 + -0x80) = 0x48e008;\n                            in_RAX = fcn.00447360(unaff_RBX);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(in_RAX + unaff_RBX) = 0x615c;\n                        return in_RAX;\n                    }\n                    if (unaff_EDI == 8) {\n                        if (arg1 < unaff_RBX + 2) {\n                            *(*0x20 + -0x18) = unaff_RBX + 2;\n                            *(*0x20 + -0x80) = 0x48dfc8;\n                            in_RAX = fcn.00447360(unaff_RBX);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(in_RAX + unaff_RBX) = 0x625c;\n                        return in_RAX;\n                    }\n                    if (unaff_EDI == 9) {\n                        if (arg1 < unaff_RBX + 2) {\n                            *(*0x20 + -0x18) = unaff_RBX + 2;\n                            *(*0x20 + -0x80) = 0x48df8c;\n                            in_RAX = fcn.00447360(unaff_RBX);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(in_RAX + unaff_RBX) = 0x745c;\n                        return in_RAX;\n                    }\n                }\n                else {\n                    if (unaff_EDI < 0xc) {\n                        if (unaff_EDI == 10) {\n                            if (arg1 < unaff_RBX + 2) {\n                                *(*0x20 + -0x18) = unaff_RBX + 2;\n                                *(*0x20 + -0x80) = 0x48e2a5;\n                                in_RAX = fcn.00447360(unaff_RBX);\n                                unaff_RBX = *(*0x20 + 0x10);\n                            }\n                            *(in_RAX + unaff_RBX) = 0x6e5c;\n                            return in_RAX;\n                        }\n                        if (arg1 < unaff_RBX + 2) {\n                            *(*0x20 + -0x18) = unaff_RBX + 2;\n                            *(*0x20 + -0x80) = 0x48e2df;\n                            in_RAX = fcn.00447360(unaff_RBX);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(in_RAX + unaff_RBX) = 0x765c;\n                        return in_RAX;\n                    }\n                    if (unaff_EDI == 0xc) {\n                        if (arg1 < unaff_RBX + 2) {\n                            *(*0x20 + -0x18) = unaff_RBX + 2;\n                            *(*0x20 + -0x80) = 0x48e265;\n                            in_RAX = fcn.00447360(unaff_RBX);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(in_RAX + unaff_RBX) = 0x665c;\n                        return in_RAX;\n                    }\n                    if (unaff_EDI == 0xd) {\n                        if (arg1 < unaff_RBX + 2) {\n                            *(*0x20 + -0x18) = unaff_RBX + 2;\n                            *(*0x20 + -0x80) = 0x48e225;\n                            in_RAX = fcn.00447360(unaff_RBX);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(in_RAX + unaff_RBX) = 0x725c;\n                        return in_RAX;\n                    }\n                }\n                if ((unaff_EDI < 0x20) || (unaff_EDI == 0x7f)) {\n                    uVar2 = unaff_RBX + 2;\n                    uVar6 = unaff_RBX;\n                    if (arg1 < uVar2) {\n                        *(*0x20 + -0x18) = uVar2;\n                        *(*0x20 + -0x80) = 0x48e139;\n                        in_RAX = fcn.00447360(unaff_RBX);\n                        uVar6 = *(*0x20 + 0x10);\n                        uVar2 = *(*0x20 + -0x18);\n                        unaff_EDI = *(*0x20 + 0x20);\n                        arg1 = unaff_RBX;\n                    }\n                    *(in_RAX + uVar6) = 0x785c;\n                    uVar8 = uVar6 + 3;\n                    uVar10 = *((unaff_EDI >> 4) + 0x4b0db9);\n                    iVar7 = in_RAX;\n                    if (arg1 < uVar8) {\n                        *(*0x20 + -0x31) = uVar10;\n                        *(*0x20 + -0x80) = 0x48e190;\n                        iVar7 = fcn.00447360(uVar2);\n                        uVar8 = in_RAX + 1;\n                        uVar6 = *(*0x20 + 0x10);\n                        unaff_EDI = *(*0x20 + 0x20);\n                        uVar10 = *(*0x20 + -0x31);\n                        arg1 = uVar2;\n                    }\n                    *(uVar6 + 2 + iVar7) = uVar10;\n                    uVar10 = *((unaff_EDI & 0xf) + 0x4b0db9);\n                    if (arg1 < uVar8 + 1) {\n                        *(*0x20 + -0x18) = uVar8;\n                        *(*0x20 + -0x31) = uVar10;\n                        *(*0x20 + -0x80) = 0x48e1e7;\n                        iVar7 = fcn.00447360(uVar8);\n                        uVar8 = *(*0x20 + -0x18);\n                        uVar10 = *(*0x20 + -0x31);\n                    }\n                    *(iVar7 + uVar8) = uVar10;\n                }\n                else {\n                    if ((unaff_EDI < 0xd800) || (unaff_EDI - 0xe000 < 0x102000)) {\n                        if (0xffff < unaff_EDI) {\n                            uVar2 = unaff_RBX + 2;\n                            uVar6 = unaff_RBX;\n                            if (arg1 < uVar2) {\n                                *(*0x20 + -0x18) = uVar2;\n                                *(*0x20 + -0x80) = 0x48e0a5;\n                                in_RAX = fcn.00447360(unaff_RBX);\n                                uVar6 = *(*0x20 + 0x10);\n                                uVar2 = *(*0x20 + -0x18);\n                                unaff_EDI = *(*0x20 + 0x20);\n                                arg1 = unaff_RBX;\n                            }\n                            *(in_RAX + uVar6) = 0x555c;\n                            for (iVar7 = 0x1c; -1 < iVar7; iVar7 = iVar7 + -4) {\n                                uVar10 = *((unaff_EDI >> (iVar7 & 0x1f) & 0xf) + 0x4b0db9);\n                                iVar5 = in_RAX;\n                                uVar6 = uVar2;\n                                uVar8 = uVar2 + 1;\n                                if (arg1 < uVar2 + 1) {\n                                    *(*0x20 + -0x20) = uVar2;\n                                    *(*0x20 + -0x18) = iVar7;\n                                    *(*0x20 + -0x31) = uVar10;\n                                    *(*0x20 + -0x80) = 0x48e3ec;\n                                    iVar5 = fcn.00447360(uVar2);\n                                    iVar7 = *(*0x20 + -0x18);\n                                    uVar6 = *(*0x20 + -0x20);\n                                    unaff_EDI = *(*0x20 + 0x20);\n                                    uVar10 = *(*0x20 + -0x31);\n                                    arg1 = uVar2;\n                                    uVar8 = in_RAX + 1;\n                                }\n                                uVar2 = uVar8;\n                                *(iVar5 + uVar6) = uVar10;\n                                in_RAX = iVar5;\n                            }\n                            return in_RAX;\n                        }\n                    }\n                    else {\n                        unaff_EDI = 0xfffd;\n                    }\n                    *(*0x20 + -0x2c) = unaff_EDI;\n                    uVar2 = unaff_RBX + 2;\n                    uVar6 = unaff_RBX;\n                    if (arg1 < uVar2) {\n                        *(*0x20 + -0x18) = uVar2;\n                        *(*0x20 + -0x80) = 0x48e0f5;\n                        in_RAX = fcn.00447360(unaff_RBX);\n                        uVar6 = *(*0x20 + 0x10);\n                        uVar2 = *(*0x20 + -0x18);\n                        unaff_EDI = *(*0x20 + -0x2c);\n                        arg1 = unaff_RBX;\n                    }\n                    *(in_RAX + uVar6) = 0x755c;\n                    iVar7 = in_RAX;\n                    for (iVar5 = 0xc; -1 < iVar5; iVar5 = iVar5 + -4) {\n                        uVar10 = *((unaff_EDI >> (iVar5 & 0x1f) & 0xf) + 0x4b0db9);\n                        iVar4 = iVar7;\n                        uVar6 = uVar2;\n                        uVar8 = uVar2 + 1;\n                        if (arg1 < uVar2 + 1) {\n                            *(*0x20 + -0x20) = uVar2;\n                            *(*0x20 + -0x18) = iVar5;\n                            *(*0x20 + -0x31) = uVar10;\n                            *(*0x20 + -0x80) = 0x48e35f;\n                            iVar4 = fcn.00447360(uVar2);\n                            iVar5 = *(*0x20 + -0x18);\n                            uVar6 = *(*0x20 + -0x20);\n                            unaff_EDI = *(*0x20 + -0x2c);\n                            uVar10 = *(*0x20 + -0x31);\n                            arg1 = uVar2;\n                            uVar8 = iVar7 + 1;\n                        }\n                        uVar2 = uVar8;\n                        *(iVar4 + uVar6) = uVar10;\n                        iVar7 = iVar4;\n                    }\n                }\n                return iVar7;\n            }\n            *(*0x20 + -0x80) = 0x48e470;\n            arg1 = fcn.0045e240(*0x7a6818);\ncode_r0x0048e470:\n            uVar10 = in_R9;\n            cVar1 = in_R8;\n            *(*0x20 + -0x80) = 0x48e47b;\n            in_RAX = fcn.0045e240(arg1);\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        *(puVar9 + 0x18) = arg1;\n        *(puVar9 + 0x20) = unaff_EDI;\n        puVar9[0x24] = unaff_SIL;\n        puVar9[0x25] = cVar1;\n        puVar9[0x26] = uVar10;\n        *(puVar9 + -8) = 0x48e4a5;\n        fcn.0045bb60();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        arg1 = *(puVar9 + 0x18);\n        unaff_EDI = *(puVar9 + 0x20);\n        unaff_SIL = puVar9[0x24];\n        in_R8 = puVar9[0x25];\n        in_R9 = puVar9[0x26];\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 4585
    },
    "004071c0": {
        "rules": [
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688",
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653"
        ],
        "decompiled_code": "\nint64_t fcn.004071c0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    char cVar6;\n    char cVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (*0x7ada80 != NULL) {\n                if (*0x7ada88 == 0) {\n                    return 0;\n                }\n                iVar2 = 0;\n                piVar3 = *0x7ada80;\n                while( true ) {\n                    iVar1 = *piVar3;\n                    if ((unaff_RBX < piVar3[1]) && (*(unaff_RBX + iVar1) == '=')) break;\ncode_r0x0040722e:\n                    iVar2 = iVar2 + 1;\n                    if (*0x7ada88 <= iVar2) {\n                        return 0;\n                    }\n                    piVar3 = piVar3 + 2;\n                }\n                uVar5 = 0;\n                do {\n                    if (unaff_RBX <= uVar5) {\n                        return iVar1 + (unaff_RBX + 1 & -((piVar3[1] - unaff_RBX) + -1) >> 0x3f);\n                    }\n                    cVar6 = *(uVar5 + iVar1);\n                    if (unaff_RBX <= uVar5) {\n                        *(*0x20 + -0x20) = 0x4072b3;\n                        fcn.0045e240(unaff_RBX);\n                        break;\n                    }\n                    cVar7 = *(uVar5 + in_RAX);\n                    if (cVar7 != cVar6) {\n                        if (cVar6 + 0xbfU < 0x1a) {\n                            cVar6 = cVar6 + ' ';\n                        }\n                        if (cVar7 + 0xbfU < 0x1a) {\n                            cVar7 = cVar7 + ' ';\n                        }\n                        if (cVar6 != cVar7) goto code_r0x0040722e;\n                    }\n                    uVar5 = uVar5 + 1;\n                } while( true );\n            }\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x20) = 0x4072c5;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x4072d5;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 766
    },
    "0048e940": {
        "rules": [
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688",
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653"
        ],
        "decompiled_code": "\nint64_t fcn.0048e940(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t arg1_00;\n    uint64_t uVar4;\n    uint64_t arg2;\n    uint64_t unaff_RBX;\n    int64_t iVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    uint64_t arg1_01;\n    int64_t unaff_R14;\n    \ncode_r0x0048e940:\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0x50;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x20) = unaff_RDI;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + 8) = in_RAX;\n        uVar4 = 0;\n        arg1 = unaff_RBX;\n        do {\n            unaff_RBX = arg1 - unaff_RDI;\n            if (unaff_RBX - 1 <= uVar4) {\n                return 0;\n            }\n            if (uVar4 < 1) {\ncode_r0x0048e9a7:\n                arg1_01 = uVar4 + unaff_RDI;\n                if (arg1 < arg1_01) goto code_r0x0048eafa;\n                iVar5 = arg1 - arg1_01;\n                unaff_RBX = -iVar5 >> 0x3f & arg1_01;\n                iVar3 = in_RAX + unaff_RBX;\n                if (iVar5 == 0) goto code_r0x0048eaf0;\n                if (*(in_RAX + unaff_RBX) == '=') {\n                    if (arg1_01 < uVar4) goto code_r0x0048eae5;\n                    *(*0x20 + -0x28) = uVar4;\n                    *(*0x20 + -0x20) = iVar5;\n                    *(*0x20 + -0x10) = iVar3;\n                    *(*0x20 + -0x58) = 0x48ea1c;\n                    uVar1 = fcn.00402a00(unaff_RDI, uVar4);\n                    uVar1 = uVar1 ^ 1;\n                    uVar4 = *(*0x20 + -0x28);\n                    arg1 = *(*0x20 + 0x10);\n                    unaff_RDI = *(*0x20 + 0x20);\n                    iVar5 = *(*0x20 + -0x20);\n                    iVar3 = *(*0x20 + -0x10);\n                    in_RAX = *(*0x20 + 8);\n                }\n                else {\n                    uVar1 = 1;\n                }\n                if (uVar1 == 0) goto code_r0x0048ea4c;\n            }\n            else {\n                if (arg1 <= uVar4 - 1) goto code_r0x0048eb05;\n                if (*((uVar4 - 1) + in_RAX) == ',') goto code_r0x0048e9a7;\n            }\n            uVar4 = uVar4 + 1;\n        } while( true );\n    }\n    goto code_r0x0048eb11;\ncode_r0x0048ea4c:\n    uVar4 = iVar5 - 1;\n    *(*0x20 + -0x38) = uVar4;\n    unaff_RBX = -uVar4 >> 0x3f & 1;\n    iVar3 = unaff_RBX + iVar3;\n    *(*0x20 + -0x18) = iVar3;\n    unaff_RDI = 0;\n    do {\n        if (uVar4 <= unaff_RDI) {\n            return iVar3;\n        }\n        arg1 = *(iVar3 + unaff_RDI);\n        if (*(iVar3 + unaff_RDI) < 0x80) {\n            arg1_00 = unaff_RDI;\n            arg2 = uVar4;\n            unaff_RDI = unaff_RDI + 1;\n        }\n        else {\n            *(*0x20 + -0x30) = unaff_RDI;\n            *(*0x20 + -0x58) = 0x48eaa5;\n            uVar2 = fcn.00458880(unaff_RDI);\n            arg1_00 = *(*0x20 + -0x30);\n            arg2 = *(*0x20 + -0x38);\n            arg1 = uVar2;\n            iVar3 = *(*0x20 + -0x18);\n            unaff_RBX = uVar4;\n            unaff_RDI = uVar4;\n        }\n        uVar4 = arg2;\n    } while (arg1 != 0x2c);\n    if (arg1_00 <= arg2) {\n        return iVar3;\n    }\n    *(*0x20 + -0x58) = 0x48eae5;\n    fcn.0045e280(arg1_00, arg2);\ncode_r0x0048eae5:\n    *(*0x20 + -0x58) = 0x48eaf0;\n    fcn.0045e300(arg1_01);\ncode_r0x0048eaf0:\n    *(*0x20 + -0x58) = 0x48eafa;\n    fcn.0045e240(0);\ncode_r0x0048eafa:\n    *(*0x20 + -0x58) = 0x48eb05;\n    fcn.0045e300(arg1);\ncode_r0x0048eb05:\n    *(*0x20 + -0x58) = 0x48eb10;\n    in_RAX = fcn.0045e240(arg1);\ncode_r0x0048eb11:\n    *(puVar6 + 8) = in_RAX;\n    *(puVar6 + 0x10) = unaff_RBX;\n    *(puVar6 + 0x18) = arg1;\n    *(puVar6 + 0x20) = unaff_RDI;\n    *(puVar6 + -8) = 0x48eb2a;\n    fcn.0045bb60();\n    in_RAX = *(puVar6 + 8);\n    unaff_RBX = *(puVar6 + 0x10);\n    arg1 = *(puVar6 + 0x18);\n    unaff_RDI = *(puVar6 + 0x20);\n    *0x20 = puVar6;\n    goto code_r0x0048e940;\n}\n",
        "token_count": 1559
    },
    "00420b00": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00420b00(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            iVar2 = *(in_RAX + 0x138);\n            iVar3 = unaff_RBX;\n            if (iVar2 == 0) {\n                *(*0x20 + -0x28) = 0x420b38;\n                iVar2 = fcn.00423080();\n                *(iVar2 + 0x18) = 0;\n                iVar3 = *(*0x20 + 8);\n                *(iVar3 + 0x130) = iVar2;\n                *(iVar3 + 0x138) = iVar2;\n                arg1 = *(*0x20 + 0x18);\n                iVar3 = *(*0x20 + 0x10);\n                in_RAX = *(*0x20 + 8);\n            }\n            iVar4 = *(iVar2 + 0x10);\n            if (iVar4 < 1) {\ncode_r0x00420beb:\n                uVar1 = *(iVar2 + 0x10);\n                if (uVar1 < 0x3f) {\n                    *(iVar2 + 0x10) = uVar1 + 1;\n                    iVar4 = uVar1 * 0x20;\n                    *(iVar2 + 0x20 + iVar4) = iVar3 - *(in_RAX + 0x100);\n                    *(iVar2 + 0x24 + iVar4) = *(arg1 + 4);\n                    *(iVar2 + 0x28 + iVar4) = arg1;\n                    *(in_RAX + 0x140) = *(in_RAX + 0x140) + 1;\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x420c3b;\n                fcn.0045e240(0x3f);\ncode_r0x00420c3b:\n                unaff_RBX = 0x29;\n                *(*0x20 + -0x28) = 0x420c4c;\n                fcn.00433c80();\n            }\n            else {\n                unaff_RBX = iVar3 - *(in_RAX + 0x100);\n                if (iVar4 - 1U < 0x3f) {\n                    iVar6 = (iVar4 - 1U) * 0x20;\n                    if (*(iVar2 + 0x20 + iVar6) + *(iVar2 + 0x24 + iVar6) <= unaff_RBX) {\n                        if (iVar4 == 0x3f) {\n                            *(*0x20 + -0x10) = iVar2;\n                            *(*0x20 + -0x28) = 0x420bb9;\n                            iVar2 = fcn.00423080();\n                            *(iVar2 + 0x18) = 0;\n                            *(*(*0x20 + -0x10) + 0x18) = iVar2;\n                            in_RAX = *(*0x20 + 8);\n                            *(in_RAX + 0x138) = iVar2;\n                            iVar3 = *(*0x20 + 0x10);\n                            arg1 = *(*0x20 + 0x18);\n                        }\n                        goto code_r0x00420beb;\n                    }\n                    goto code_r0x00420c3b;\n                }\n            }\n            arg1 = 0x3f;\n            *(*0x20 + -0x28) = 0x420c59;\n            in_RAX = fcn.0045e240(0x3f);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x420c6e;\n        fcn.0045bb60();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1118
    },
    "00420ca0": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nulong fcn.00420ca0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    ulong uVar3;\n    uint64_t arg1_00;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (arg1 == 0) {\n                return 0;\n            }\n            *(*0x20 + 0x18) = arg1;\n            arg1_00 = arg1 / 2;\n            *(*0x20 + -0x10) = arg1_00;\n            *(*0x20 + -0x50) = 0x420ce5;\n            uVar3 = fcn.00420ca0(arg1_00);\n            if (arg1_00 < 0x3f) {\n                *(*0x20 + -0x30) = uVar3;\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x20) = arg1_00 * 0x20;\n                *(*0x20 + -0x28) = unaff_RBX + arg1_00 * 0x20 + 0x20;\n                *(*0x20 + -0x50) = 0x420d45;\n                uVar3 = fcn.00420ca0((*(*0x20 + 0x18) - *(*0x20 + -0x10)) + -1);\n                iVar1 = *(*0x20 + -0x20);\n                iVar2 = *(*0x20 + -0x18);\n                *(iVar2 + 0x30 + iVar1) = *(*0x20 + -0x30);\n                *(iVar2 + 0x38 + iVar1) = uVar3;\n                return *(*0x20 + -0x28);\n            }\n            arg1 = 0x3f;\n            *(*0x20 + -0x50) = 0x420d8c;\n            in_RAX = fcn.0045e240(0x3f);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x420da5;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 700
    },
    "0042c0e0": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.0042c0e0(int64_t **arg1)\n\n{\n    ulong in_RAX;\n    int64_t **arg1_00;\n    int64_t *piVar1;\n    int64_t **ppiVar2;\n    int64_t iVar3;\n    int64_t **ppiVar4;\n    int64_t **arg2;\n    int64_t unaff_RBX;\n    int64_t *piVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t iVar7;\n    int64_t **arg1_01;\n    int64_t iVar8;\n    int64_t **unaff_R13;\n    int64_t unaff_R14;\n    bool bVar9;\n    bool bVar10;\n    \n    do {\n        ppiVar2 = arg1;\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX + 0x800000000000U < arg1 + 0x100000000000) {\n                ppiVar2 = arg1 - unaff_RBX;\n            }\n            else {\n                ppiVar2 = NULL;\n            }\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + -0x20) = unaff_RBX;\n            if (ppiVar2 != NULL) {\n                *(*0x20 + -0x28) = unaff_RBX + 0x800000000000U;\n                *(*0x20 + -0x30) = arg1 + 0x100000000000;\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x68) = 0x42c145;\n                arg1_00 = fcn.0042bec0();\n                if (arg1_00 < 1) {\n                    ppiVar4 = *(*0x20 + 8);\n                    iVar7 = *(*0x20 + -0x20);\n                    bVar9 = false;\ncode_r0x0042c18e:\n                    ppiVar2 = ppiVar4[1];\n                    piVar1 = *ppiVar4;\n                    arg2 = ppiVar4[2];\n                    if (arg1_00 < ppiVar2) {\n                        if (arg1_00 < ppiVar2) {\n                            iVar8 = *(*0x20 + -0x18);\n                            bVar10 = piVar1[arg1_00 * 2] == iVar8;\n                            goto code_r0x0042c1ca;\n                        }\n                    }\n                    else {\n                        iVar8 = *(*0x20 + -0x18);\n                        bVar10 = false;\ncode_r0x0042c1ca:\n                        if (bVar10) {\n                            if (!bVar9) {\ncode_r0x0042c2f4:\n                                if (bVar10) {\n                                    if (arg1_00 < ppiVar2) {\n                                        piVar1[arg1_00 * 2] = iVar7;\n                                        bVar9 = *(*0x20 + -0x30) < *(*0x20 + -0x28);\n                                        bVar10 = *(*0x20 + -0x30) == *(*0x20 + -0x28);\n                                        goto code_r0x0042c4f1;\n                                    }\n                                }\n                                else {\n                                    *(*0x20 + -0x38) = arg1_00;\n                                    arg1_01 = ppiVar2 + 1;\n                                    if (arg2 < arg1_01) {\n                                        *(*0x20 + -0x40) = arg2;\n                                        *(*0x20 + -0x48) = ppiVar2;\n                                        *(*0x20 + -0x10) = piVar1;\n                                        ppiVar4[1] = arg1_01;\n                                        ppiVar4[2] = arg2 << 1;\n                                        piVar1 = ppiVar4[4];\n                                        *(*0x20 + -0x68) = 0x42c3ed;\n                                        piVar1 = fcn.0040c8c0(piVar1);\n                                        ppiVar4 = *(*0x20 + 8);\n                                        *ppiVar4 = piVar1;\n                                        arg2 = ppiVar4[2];\n                                        arg1_00 = *(*0x20 + -0x38);\n                                        if (arg1_00 <= arg2) {\n                                            arg2 = *(*0x20 + -0x40);\n                                            if (arg1_00 <= arg2) {\n                                                piVar5 = *(*0x20 + -0x10);\n                                                if (piVar1 != piVar5) {\n                                                    *(*0x20 + -0x68) = 0x42c42e;\n                                                    fcn.0045ebc0(arg1_00 << 4);\n                                                    arg1_00 = *(*0x20 + -0x38);\n                                                    ppiVar4 = *(*0x20 + 8);\n                                                    piVar5 = *(*0x20 + -0x10);\n                                                    arg2 = *(*0x20 + -0x40);\n                                                }\n                                                arg1_01 = ppiVar4[1];\n                                                if (arg1_00 + 1U <= arg1_01) {\n                                                    iVar7 = arg1_01 + (-1 - arg1_00);\n                                                    if (*(*0x20 + -0x48) - arg1_00 < iVar7) {\n                                                        iVar7 = *(*0x20 + -0x48) - arg1_00;\n                                                    }\n                                                    if (piVar5 + (arg1_00 - arg2 >> 0x3f & arg1_00 << 4) !=\n                                                        *ppiVar4 +\n                                                        (-(ppiVar4[2] + (-1 - arg1_00)) >> 0x3f & (arg1_00 + 1U) * 0x10)\n                                                       ) {\n                                                        *(*0x20 + -0x68) = 0x42c4b1;\n                                                        fcn.0045ebc0(iVar7 << 4);\n                                                        ppiVar4 = *(*0x20 + 8);\n                                                        arg1_00 = *(*0x20 + -0x38);\n                                                    }\n                                                    iVar7 = *(*0x20 + -0x20);\n                                                    iVar8 = *(*0x20 + -0x18);\n                                                    goto code_r0x0042c4cb;\n                                                }\ncode_r0x0042c512:\n                                                *(*0x20 + -0x68) = 0x42c51a;\n                                                arg1_00 = arg1_01;\n                                                fcn.0045e300(arg1_01);\n                                            }\n                                            *(*0x20 + -0x68) = 0x42c525;\n                                            fcn.0045e2c0(arg1_00, arg2);\n                                        }\n                                        *(*0x20 + -0x68) = 0x42c52d;\n                                        fcn.0045e2c0(arg1_00, arg2);\ncode_r0x0042c52d:\n                                        *(*0x20 + -0x68) = 0x42c538;\n                                        fcn.0045e300(arg1_01);\ncode_r0x0042c538:\n                                        *(*0x20 + -0x68) = 0x42c545;\n                                        fcn.0045e300(arg1_01);\n                                    }\n                                    else if (arg1_01 <= arg2) {\n                                        ppiVar4[1] = arg1_01;\n                                        arg2 = *ppiVar4;\n                                        if (arg1_01 < arg1_00 + 1U) goto code_r0x0042c538;\n                                        iVar3 = ppiVar2 - arg1_00;\n                                        if (arg1_01 < arg1_00) goto code_r0x0042c52d;\n                                        if (iVar3 + 1 < iVar3) {\n                                            iVar3 = iVar3 + 1;\n                                        }\n                                        if ((-(ppiVar4[2] - arg1_00) >> 0x3f & arg1_00 << 4) + arg2 !=\n                                            arg2 + (-((ppiVar4[2] - arg1_00) + -1) >> 0x3f & (arg1_00 + 1U) * 0x10)) {\n                                            *(*0x20 + -0x68) = 0x42c3a5;\n                                            fcn.0045ebc0(iVar3 << 4);\n                                            ppiVar4 = *(*0x20 + 8);\n                                            arg1_00 = *(*0x20 + -0x38);\n                                            iVar7 = *(*0x20 + -0x20);\n                                            iVar8 = *(*0x20 + -0x18);\n                                        }\ncode_r0x0042c4cb:\n                                        piVar1 = *ppiVar4;\n                                        ppiVar2 = ppiVar4[1];\n                                        if (ppiVar2 <= arg1_00) {\n                                            *(*0x20 + -0x68) = 0x42c512;\n                                            fcn.0045e240(ppiVar2);\n                                            arg2 = ppiVar4;\n                                            arg1_01 = arg1_00;\n                                            goto code_r0x0042c512;\n                                        }\n                                        piVar1[arg1_00 * 2] = iVar7;\n                                        piVar1[arg1_00 * 2 + 1] = iVar8;\n                                        bVar9 = *(*0x20 + -0x30) < *(*0x20 + -0x28);\n                                        bVar10 = *(*0x20 + -0x30) == *(*0x20 + -0x28);\n                                        goto code_r0x0042c4f1;\n                                    }\n                                    ppiVar2 = arg1_01;\n                                    *(*0x20 + -0x68) = 0x42c54d;\n                                    fcn.0045e2c0(ppiVar2, arg2);\n                                }\n                                *(*0x20 + -0x68) = 0x42c555;\n                                fcn.0045e240(ppiVar2);\n                                goto code_r0x0042c555;\n                            }\n                            if (arg1_00 < ppiVar2) {\n                                if (ppiVar2 <= arg1_00 - 1U) goto code_r0x0042c572;\n                                piVar1[(arg1_00 - 1U) * 2 + 1] = piVar1[arg1_00 * 2 + 1];\n                                ppiVar2 = ppiVar4[1];\n                                if (ppiVar2 < arg1_00) goto code_r0x0042c56a;\n                                iVar3 = ppiVar2 - arg1_00;\n                                unaff_R13 = ppiVar2;\n                                if (ppiVar2 < arg1_00 + 1) goto code_r0x0042c55f;\n                                if (iVar3 + -1 < iVar3) {\n                                    iVar3 = iVar3 + -1;\n                                }\n                                if (*ppiVar4 + (-((ppiVar4[2] - arg1_00) + -1) >> 0x3f & (arg1_00 + 1) * 0x10) !=\n                                    (-(ppiVar4[2] - arg1_00) >> 0x3f & arg1_00 * 0x10) + *ppiVar4) {\n                                    *(*0x20 + -0x68) = 0x42c27e;\n                                    fcn.0045ebc0(iVar3 << 4);\n                                    ppiVar4 = *(*0x20 + 8);\n                                    iVar7 = *(*0x20 + -0x20);\n                                    iVar8 = *(*0x20 + -0x18);\n                                }\n                                arg2 = ppiVar4[2];\n                                ppiVar2 = ppiVar4[1] + -1;\n                                if (arg2 < ppiVar2) goto code_r0x0042c55a;\n                                ppiVar4[1] = ppiVar2;\n                                bVar9 = *(*0x20 + -0x30) < *(*0x20 + -0x28);\n                                bVar10 = *(*0x20 + -0x30) == *(*0x20 + -0x28);\ncode_r0x0042c4f1:\n                                if (bVar9 || bVar10) {\n                                    iVar8 = 0;\n                                }\n                                else {\n                                    iVar8 = iVar8 - iVar7;\n                                }\n                                ppiVar4[3] = ppiVar4[3] + iVar8;\n                                return;\n                            }\n                        }\n                        else {\n                            if (!bVar9) goto code_r0x0042c2f4;\n                            if (arg1_00 - 1U < ppiVar2) {\n                                piVar1[(arg1_00 - 1U) * 2 + 1] = iVar8;\n                                bVar9 = *(*0x20 + -0x30) < *(*0x20 + -0x28);\n                                bVar10 = *(*0x20 + -0x30) == *(*0x20 + -0x28);\n                                goto code_r0x0042c4f1;\n                            }\ncode_r0x0042c555:\n                            *(*0x20 + -0x68) = 0x42c55a;\n                            fcn.0045e240(ppiVar2);\ncode_r0x0042c55a:\n                            *(*0x20 + -0x68) = 0x42c55f;\n                            fcn.0045e2c0(ppiVar2, arg2);\ncode_r0x0042c55f:\n                            *(*0x20 + -0x68) = 0x42c56a;\n                            ppiVar2 = unaff_R13;\n                            fcn.0045e300(unaff_R13);\ncode_r0x0042c56a:\n                            *(*0x20 + -0x68) = 0x42c572;\n                            fcn.0045e300(ppiVar2);\ncode_r0x0042c572:\n                            *(*0x20 + -0x68) = 0x42c577;\n                            fcn.0045e240(ppiVar2);\n                        }\n                        *(*0x20 + -0x68) = 0x42c57f;\n                        fcn.0045e240(ppiVar2);\n                    }\n                    *(*0x20 + -0x68) = 0x42c585;\n                    fcn.0045e240(ppiVar2);\n                }\n                else {\n                    ppiVar4 = *(*0x20 + 8);\n                    ppiVar2 = ppiVar4[1];\n                    if (arg1_00 - 1U < ppiVar2) {\n                        iVar7 = *(*0x20 + -0x20);\n                        bVar9 = *(*ppiVar4 + 8 + (arg1_00 - 1U) * 0x10) == iVar7;\n                        goto code_r0x0042c18e;\n                    }\n                }\n                *(*0x20 + -0x68) = 0x42c58d;\n                fcn.0045e240(ppiVar2);\n            }\n            *(*0x20 + -0x68) = 0x42c592;\n            fcn.00435540();\n            *(*0x20 + -0x68) = 0x42c5a5;\n            fcn.00435e40();\n            *(*0x20 + -0x68) = 0x42c5af;\n            fcn.00435ca0();\n            *(*0x20 + -0x68) = 0x42c5c5;\n            fcn.00435e40();\n            *(*0x20 + -0x68) = 0x42c5cf;\n            fcn.00435ca0();\n            *(*0x20 + -0x68) = 0x42c5e5;\n            fcn.00435e40();\n            *(*0x20 + -0x68) = 0x42c5ea;\n            fcn.004355c0();\n            unaff_RBX = 0x29;\n            *(*0x20 + -0x68) = 0x42c5fb;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = ppiVar2;\n        *(puVar6 + -8) = 0x42c610;\n        fcn.0045bb60();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 3798
    },
    "00441e80": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.00441e80(void)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x22a0) != 0) {\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x10) = in_RAX + 0x2280;\n            *(*0x20 + -0x28) = 0x441ec5;\n            fcn.0040a460();\n            if ((*(*0x20 + 8))[0x8a8] != 0) goto code_r0x00441f21;\n            iVar2 = **(*0x20 + 8);\n            iVar5 = iVar2 + ((iVar2 >> 0x1f) >> 0x1b) >> 5;\n            uVar4 = iVar2 + iVar5 * -0x20;\n            if (-1 < uVar4) {\n                if (iVar5 < *0x7adb08) {\n                    puVar1 = *0x7adb00 + iVar5 * 4;\n                    LOCK();\n                    *puVar1 = *puVar1 & ~(1 << (uVar4 & 0x1f) & -(uVar4 < 0x20));\ncode_r0x00441f21:\n                    *(*0x20 + -0x28) = 0x441f2b;\n                    fcn.0040a680();\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x441f47;\n                fcn.0045e240(*0x7adb08);\n            }\n            *(*0x20 + -0x28) = 0x441f4c;\n            in_RAX = fcn.004320a0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x441f57;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 610
    },
    "00441f80": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.00441f80(void)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int64_t in_RAX;\n    uint64_t arg1;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            do {\n            } while (*(in_RAX + 0x194) != *(in_RAX + 0x194));\n            if ((*(in_RAX + 0x194) == *(in_RAX + 400)) && (*(in_RAX + 0x998) == 0)) {\n                *(*0x20 + 8) = in_RAX;\n                if (unaff_RBX == 0) {\n                    *(*0x20 + -0x28) = 0x441fd9;\n                    fcn.0045fb60();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    unaff_RBX = *(*0x20 + -0x20);\n                }\n                *(*0x20 + -0x10) = unaff_RBX;\n                *(*0x20 + -0x28) = 0x442005;\n                fcn.00441e80();\n                piVar3 = *(*0x20 + 8);\n                iVar2 = *piVar3;\n                iVar5 = ((iVar2 >> 0x1f) >> 0x1b) + iVar2 >> 5;\n                uVar6 = iVar2 + iVar5 * -0x20;\n                if (-1 < uVar6) {\n                    arg1 = *0x7adac8;\n                    if (iVar5 < *0x7adac8) {\n                        puVar1 = *0x7adac0 + iVar5 * 4;\n                        LOCK();\n                        *puVar1 = *puVar1 | 1 << (uVar6 & 0x1f) & -(uVar6 < 0x20);\n                        *(piVar3 + 2) = *0x7ae550;\n                        LOCK();\n                        *0x7ae558 = *0x7ae558 + 1;\n                        *0x7ae550 = piVar3;\n                        if (*(piVar3 + 0x48a) >> 0x3d == 0) {\n                            *(piVar3 + 0x48a) = *(*0x20 + -0x10) & 0x1fffffffffffffff | 0x8000000000000000;\n                            return;\n                        }\n                        *(*0x20 + -0x28) = 0x4420cd;\n                        arg1 = fcn.00433c80();\n                    }\n                    *(*0x20 + -0x28) = 0x4420d8;\n                    fcn.0045e240(arg1);\n                }\n                *(*0x20 + -0x28) = 0x4420dd;\n                fcn.004320a0();\n            }\n            unaff_RBX = 0x23;\n            *(*0x20 + -0x28) = 0x4420ee;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x4420fe;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 927
    },
    "00442120": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nulong fcn.00442120(void)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    int32_t *piVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t arg1;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x7ae550 == NULL) {\n                return 0;\n            }\n            *(*0x20 + -0x10) = *0x7ae550;\n            piVar3 = *0x7ae550;\n            if (in_RAX == 0) {\n                *(*0x20 + -0x38) = 0x442159;\n                fcn.0045fb60();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                in_RAX = *(*0x20 + -0x30);\n                piVar3 = *(*0x20 + -0x10);\n            }\n            iVar2 = *piVar3;\n            iVar6 = iVar2 + ((iVar2 >> 0x1f) >> 0x1b) >> 5;\n            uVar5 = iVar2 + iVar6 * -0x20;\n            if (-1 < uVar5) {\n                arg1 = *0x7adb08;\n                if (iVar6 < *0x7adb08) {\n                    puVar1 = *0x7adb00 + iVar6 * 4;\n                    LOCK();\n                    *puVar1 = *puVar1 | 1 << (uVar5 & 0x1f) & -(uVar5 < 0x20);\n                    arg1 = *0x7adac8;\n                    iVar2 = *piVar3;\n                    iVar6 = iVar2 + ((iVar2 >> 0x1f) >> 0x1b) >> 5;\n                    uVar5 = iVar2 + iVar6 * -0x20;\n                    if (-1 < uVar5) {\n                        if (iVar6 < *0x7adac8) {\n                            *(*0x20 + -0x18) = in_RAX;\n                            puVar1 = *0x7adac0 + iVar6 * 4;\n                            LOCK();\n                            *puVar1 = *puVar1 & ~(1 << (uVar5 & 0x1f) & -(uVar5 < 0x20));\n                            *0x7ae550 = *(piVar3 + 2);\n                            LOCK();\n                            *0x7ae558 = *0x7ae558 + -1;\n                            *(*0x20 + -0x38) = 0x442269;\n                            fcn.00419820(in_RAX);\n                            return *(*0x20 + -0x10);\n                        }\n                        *(*0x20 + -0x38) = 0x44228e;\n                        fcn.0045e240(*0x7adac8);\n                    }\n                    *(*0x20 + -0x38) = 0x442293;\n                    fcn.004320a0();\n                }\n                *(*0x20 + -0x38) = 0x44229e;\n                fcn.0045e240(arg1);\n            }\n            *(*0x20 + -0x38) = 0x4422a5;\n            in_RAX = fcn.004320a0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x4422b0;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 924
    },
    "004021c0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.004021c0(uint64_t arg1, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int32_t iVar2;\n    uint64_t arg2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t iVar4;\n    uint64_t unaff_RDI;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint64_t arg1_00;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        uVar5 = unaff_RDI;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            arg2 = 0;\n            for (iVar4 = 0; iVar2 = arg2,  iVar4 < unaff_RDI; iVar4 = iVar4 + 1) {\n                arg2 = iVar2 * 0x1000193 + *(arg1 + iVar4);\n            }\n            iVar7 = 0x1000193;\n            iVar8 = 1;\n            for (; 0 < uVar5; uVar5 = uVar5 >> 1) {\n                if ((uVar5 & 1) != 0) {\n                    iVar8 = iVar8 * iVar7;\n                }\n                iVar7 = iVar7 * iVar7;\n            }\n            iVar7 = 0;\n            for (uVar5 = 0; uVar5 < unaff_RDI; uVar5 = uVar5 + 1) {\n                if (unaff_RBX <= uVar5) goto code_r0x004023dc;\n                iVar7 = iVar7 * 0x1000193 + *(in_RAX + uVar5);\n            }\n            *(*0x20 + -0x10) = unaff_RDI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x30) = iVar8;\n            *(*0x20 + -0x2c) = iVar2;\n            arg1_00 = unaff_RDI;\n            uVar6 = unaff_RDI;\n            if (iVar7 == iVar2) {\n                uVar6 = uVar5;\n                if (unaff_RDI <= unaff_RBX) {\n                    *(*0x20 + -0x28) = iVar7;\n                    *(*0x20 + -0x50) = 0x4022a5;\n                    cVar1 = fcn.00402a00(unaff_RDI, arg2);\n                    if (cVar1 != '\\0') {\n                        return 0;\n                    }\n                    in_RAX = *(*0x20 + 8);\n                    arg2 = *(*0x20 + -0x2c);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    uVar6 = *(*0x20 + -0x10);\n                    iVar7 = *(*0x20 + -0x28);\n                    iVar8 = *(*0x20 + -0x30);\n                    arg1_00 = uVar6;\n                    goto code_r0x004022e0;\n                }\n            }\n            else {\ncode_r0x004022e0:\n                while( true ) {\n                    do {\n                        uVar5 = arg1_00;\n                        if (unaff_RBX <= uVar5) {\n                            return 0xffffffffffffffff;\n                        }\n                        unaff_RDI = uVar5 - uVar6;\n                        if (unaff_RBX <= unaff_RDI) goto code_r0x004023c6;\n                        iVar7 = (iVar7 * 0x1000193 + *(in_RAX + uVar5)) - *(in_RAX + unaff_RDI) * iVar8;\n                        arg1_00 = uVar5 + 1;\n                    } while (arg2 != iVar7);\n                    uVar9 = unaff_RDI + 1;\n                    if (arg1_00 < uVar9) break;\n                    if (uVar6 == uVar5 - unaff_RDI) {\n                        *(*0x20 + -0x24) = iVar7;\n                        *(*0x20 + -0x20) = arg1_00;\n                        *(*0x20 + -0x18) = uVar9;\n                        *(*0x20 + -0x50) = 0x402366;\n                        cVar1 = fcn.00402a00(uVar5 - unaff_RDI, arg2);\n                        arg2 = *(*0x20 + -0x2c);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        uVar6 = *(*0x20 + -0x10);\n                        iVar7 = *(*0x20 + -0x24);\n                        iVar8 = *(*0x20 + -0x30);\n                        arg1_00 = *(*0x20 + -0x20);\n                        uVar9 = *(*0x20 + -0x18);\n                        in_RAX = *(*0x20 + 8);\n                    }\n                    else {\n                        cVar1 = '\\0';\n                    }\n                    if (cVar1 != '\\0') {\n                        return uVar9;\n                    }\n                }\n                *(*0x20 + -0x50) = 0x4023c6;\n                fcn.0045e300(arg1_00);\ncode_r0x004023c6:\n                *(*0x20 + -0x50) = 0x4023d1;\n                fcn.0045e240(unaff_RBX);\n            }\n            *(*0x20 + -0x50) = 0x4023dc;\n            fcn.0045e280(unaff_RDI, unaff_RBX);\n            uVar5 = uVar6;\ncode_r0x004023dc:\n            *(*0x20 + -0x50) = 0x4023e7;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045e240(unaff_RBX);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = uVar5;\n        *(puVar3 + -8) = 0x402405;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1633
    },
    "00404520": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00404520(uint64_t arg1)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t unaff_RBX;\n    uint8_t *puVar6;\n    uint32_t uVar7;\n    int64_t unaff_RDI;\n    uint64_t uVar8;\n    \n    iVar5 = arg1 - (arg1 & 0xffffffffffffffc0);\n    uVar8 = unaff_RDI + iVar5;\n    puVar6 = unaff_RBX + (arg1 >> 6);\n    iVar4 = (arg1 & 0xffffffffffffffc0) + in_RAX;\n    uVar3 = 0;\n    uVar7 = 0;\n    do {\n        if (uVar8 <= uVar3) {\n            return;\n        }\n        if ((uVar3 & 0x3f) == 0) {\n            uVar7 = *puVar6;\n            puVar6 = puVar6 + 1;\n        }\n        else {\n            uVar7 = uVar7 >> 1;\n        }\n        if (iVar5 == 0) {\n            if (((uVar7 & 1) != 0) && (cVar2 = fcn.00403d80(iVar4, *(iVar4 + uVar3)),  cVar2 != '\\0')) {\n                fcn.00433c80();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        else {\n            iVar5 = iVar5 + -8;\n        }\n        uVar3 = uVar3 + 8;\n    } while( true );\n}\n",
        "token_count": 389
    },
    "00408aa0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00408aa0(ulong param_1, uint64_t param_2)\n\n{\n    ulong uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    ulong unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t arg1;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uchar uVar6;\n    uchar uVar7;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xa8 && *0x20 + -0xa8 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x128;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x130) = 0x408ad6;\n            fcn.0044cfe0();\n            *(*0x20 + -0x130) = 0x408adb;\n            uVar1 = fcn.0044d760();\n            *(*0x20 + -0xa8) = uVar1;\n            *(*0x20 + -0xf8) = unaff_RBX;\n            *(*0x20 + -0x128) = uVar1;\n            *(*0x20 + -0x120) = unaff_RBX;\n            *(*0x20 + -0x118) = 0x28;\n            *(*0x20 + -0x130) = 0x408afb;\n            fcn.00402ea0(param_1, param_2);\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            iVar4 = *(*0x20 + -0x110);\n            if (-1 < iVar4) {\n                uVar2 = iVar4 - 1;\n                param_2 = *(*0x20 + -0xf8);\n                if (uVar2 <= param_2) {\n                    arg1 = iVar4 + 2;\n                    uVar6 = param_2 < arg1;\n                    if (arg1 < param_2) goto code_r0x00408b5b;\n                    do {\n                        uVar6 = 0;\n                        iVar4 = 0x31;\n                        *(*0x20 + -0x130) = 0x408b56;\n                        fcn.0044ae80(0x31);\n                        *(*0x20 + -0x130) = 0x408b5b;\n                        uVar2 = fcn.00433c80();\ncode_r0x00408b5b:\n                        if (uVar6) goto code_r0x00408ded;\n                        if (arg1 < uVar2) goto code_r0x00408de5;\n                        iVar3 = *(*0x20 + -0xa8);\n                    } while ((CONCAT11(*(iVar4 + iVar3), *(iVar4 + -1 + iVar3)) != 0x282e) ||\n                            (*(iVar4 + 1 + iVar3) != '*'));\n                    *(*0x20 + -0x100) = uVar2;\n                    param_2 = param_2 - iVar4;\n                    *(*0x20 + -0xf0) = param_2;\n                    iVar4 = param_2 - 2;\n                    *(*0x20 + -0xf8) = iVar4;\n                    iVar3 = (-iVar4 >> 0x3f & arg1) + iVar3;\n                    *(*0x20 + -0xa0) = iVar3;\n                    *(*0x20 + -0x128) = iVar3;\n                    *(*0x20 + -0x120) = iVar4;\n                    *(*0x20 + -0x118) = 0x29;\n                    *(*0x20 + -0x130) = 0x408bde;\n                    fcn.00402ea0(iVar4, param_2);\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    uVar2 = *(*0x20 + -0x110);\n                    if (-1 < uVar2) {\n                        arg1 = uVar2 + 2;\n                        param_2 = *(*0x20 + -0xf8);\n                        uVar6 = arg1 < param_2;\n                        uVar7 = arg1 == param_2;\n                        if (arg1 < param_2) goto code_r0x00408c3a;\n                        do {\n                            uVar6 = 0;\n                            uVar7 = 1;\n                            uVar2 = 0x2e;\n                            *(*0x20 + -0x130) = 0x408c35;\n                            fcn.0044ae80(0x2e);\n                            *(*0x20 + -0x130) = 0x408c3a;\n                            fcn.00433c80();\ncode_r0x00408c3a:\n                            if (!uVar6 && !uVar7) goto code_r0x00408db2;\n                            if (arg1 < uVar2) goto code_r0x00408da7;\n                        } while (*(*(*0x20 + -0xa0) + uVar2) != 0x2e29);\n                        *(*0x20 + -0x138) = unaff_RBP;\n                        *(*0x20 + -0x130) = 0x408c8f;\n                        iVar4 = fcn.0045e4d9();\n                        unaff_RBP = *(*0x20 + -0x138);\n                        *(*0x20 + -0x98) = 0x4b071d;\n                        *(*0x20 + -0x90) = 0xd;\n                        *(*0x20 + -0x88) = *(*0x20 + -0xa8);\n                        *(*0x20 + -0x80) = *(*0x20 + -0x100);\n                        *(*0x20 + -0x78) = 0x4aebdd;\n                        *(*0x20 + -0x70) = 1;\n                        *(*0x20 + -0x68) = iVar4;\n                        *(*0x20 + -0x60) = uVar2;\n                        *(*0x20 + -0x58) = 0x4aebdd;\n                        *(*0x20 + -0x50) = 1;\n                        *(*0x20 + -0x48) = (-((*(*0x20 + -0xf0) - uVar2) + -4) >> 0x3f & arg1) + iVar4;\n                        *(*0x20 + -0x40) = (*(*0x20 + -0xf0) - uVar2) + -4;\n                        *(*0x20 + -0x38) = 0x4b1823;\n                        *(*0x20 + -0x30) = 0x13;\n                        *(*0x20 + -0x28) = iVar4;\n                        *(*0x20 + -0x20) = uVar2;\n                        param_2 = 0x4af4fe;\n                        *(*0x20 + -0x18) = 0x4af4fe;\n                        *(*0x20 + -0x10) = 8;\n                        *(*0x20 + -0x130) = 0x408d93;\n                        fcn.0044abe0(9);\n                        *(*0x20 + -0x130) = 0x408d98;\n                        fcn.00409de0();\n                        *(*0x20 + -0x130) = 0x408da7;\n                        fcn.004334e0();\ncode_r0x00408da7:\n                        *(*0x20 + -0x130) = 0x408db2;\n                        fcn.0045e300(arg1);\ncode_r0x00408db2:\n                        *(*0x20 + -0x130) = 0x408dba;\n                        fcn.0045e280(arg1, param_2);\n                    }\n                    *(*0x20 + -0x130) = 0x408ddd;\n                    fcn.0044ae80(0x13);\n                    *(*0x20 + -0x130) = 0x408de5;\n                    fcn.00433c80();\ncode_r0x00408de5:\n                    *(*0x20 + -0x130) = 0x408ded;\n                    fcn.0045e300(arg1);\ncode_r0x00408ded:\n                    *(*0x20 + -0x130) = 0x408df5;\n                    uVar2 = fcn.0045e280(arg1, param_2);\n                }\n                *(*0x20 + -0x130) = 0x408dfd;\n                fcn.0045e280(uVar2, param_2);\n            }\n            unaff_RBX = 0x4b1caa;\n            param_1 = 0x13;\n            *(*0x20 + -0x130) = 0x408e25;\n            fcn.0044ae80(0x13);\n            *(*0x20 + -0x130) = 0x408e2a;\n            fcn.00433c80();\n        }\n        *(puVar5 + -8) = 0x408e30;\n        fcn.0045bb60();\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 2101
    },
    "004105a0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.004105a0(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = *(in_RAX + 0x30);\n            uVar3 = *(in_RAX + 0x38);\n            if (uVar3 == uVar1) {\n                return uVar1;\n            }\n            if (uVar1 <= uVar3) {\n                *(*0x20 + -0x20) = uVar3;\n                *(*0x20 + 8) = in_RAX;\n                uVar5 = *(in_RAX + 0x40);\n                iVar4 = 0;\n                if (uVar5 != 0) {\n                    for (; (uVar5 >> iVar4 & 1) == 0; iVar4 = iVar4 + 1) {\n                    }\n                }\n                if (uVar5 == 0) {\n                    iVar4 = 0x40;\n                }\n                while( true ) {\n                    if (iVar4 != 0x40) {\n                        uVar5 = uVar1 + iVar4;\n                        if (uVar3 <= uVar5) {\n                            *(in_RAX + 0x30) = uVar3;\n                            return uVar3;\n                        }\n                        *(in_RAX + 0x40) = *(in_RAX + 0x40) >> (iVar4 + 1U & 0x3f) & -(iVar4 + 1U < 0x40);\n                        uVar1 = uVar1 + iVar4 + 1;\n                        if (((uVar1 & 0x3f) == 0) && (uVar3 != uVar1)) {\n                            *(*0x20 + -0x10) = uVar5;\n                            *(*0x20 + -0x18) = uVar1;\n                            *(*0x20 + -0x38) = 0x4106a5;\n                            fcn.00410580();\n                            in_RAX = *(*0x20 + 8);\n                            uVar1 = *(*0x20 + -0x18);\n                            uVar5 = *(*0x20 + -0x10);\n                        }\n                        *(in_RAX + 0x30) = uVar1;\n                        return uVar5;\n                    }\n                    uVar1 = uVar1 + 0x40 & 0xffffffffffffffc0;\n                    if (uVar3 <= uVar1) break;\n                    *(*0x20 + -0x18) = uVar1;\n                    *(*0x20 + -0x38) = 0x410605;\n                    fcn.00410580();\n                    in_RAX = *(*0x20 + 8);\n                    uVar3 = *(in_RAX + 0x40);\n                    iVar4 = 0;\n                    if (uVar3 != 0) {\n                        for (; (uVar3 >> iVar4 & 1) == 0; iVar4 = iVar4 + 1) {\n                        }\n                    }\n                    if (uVar3 == 0) {\n                        iVar4 = 0x40;\n                    }\n                    uVar3 = *(*0x20 + -0x20);\n                    uVar1 = *(*0x20 + -0x18);\n                }\n                *(in_RAX + 0x30) = uVar3;\n                return uVar3;\n            }\n            *(*0x20 + -0x38) = 0x4106e7;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x4106f2;\n        fcn.0045bb60();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 998
    },
    "00413560": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00413560(uchar param_1)\n\n{\n    int64_t *piVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX <= unaff_RBX + 0x2000) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 0x18) = param_1;\n                uVar4 = unaff_RBX >> 0xd;\n                if ((unaff_RBX & 0x1fff) != 0) {\n                    uVar4 = (unaff_RBX >> 0xd) + 1;\n                }\n                *(*0x20 + -0x18) = uVar4;\n                *(*0x20 + -0x10) = uVar4 << 0xd;\n                *(*0x20 + -0x50) = 0x4135c5;\n                fcn.004227a0();\n                param_1 = *(*0x20 + 0x18);\n                *(*0x20 + -0x21) = param_1;\n                *(*0x20 + -0x50) = 0x4135e5;\n                iVar2 = fcn.00424280();\n                if (iVar2 != 0) {\n                    *(*0x20 + -0x20) = iVar2;\n                    *(*0x20 + -0x50) = 0x4135ff;\n                    iVar2 = fcn.0042cca0();\n                    LOCK();\n                    *(iVar2 + 0x38) = *(iVar2 + 0x38) + *(*0x20 + -0x10);\n                    LOCK();\n                    piVar1 = iVar2 + 0x40;\n                    iVar2 = *piVar1;\n                    *piVar1 = *piVar1 + 1;\n                    *(*0x20 + -0x50) = 0x413625;\n                    fcn.0042cd80(iVar2);\n                    LOCK();\n                    *0x802448 = *0x802448 + *(*0x20 + -0x10);\n                    *(*0x20 + -0x50) = 0x413652;\n                    fcn.0041e360(0);\n                    if (*(*0x20 + -0x21) < 0x88) {\n                        *(*0x20 + -0x50) = 0x4136a5;\n                        fcn.0042c640(*(*0x20 + -0x21) * 0xc0 + 0x7d4110, (*0x7d3db8 >> 1 & 1) * 5);\n                        iVar2 = *(*0x20 + -0x20);\n                        *(iVar2 + 0x70) = *(iVar2 + 0x18) + *(*0x20 + 0x10);\n                        uVar4 = *(iVar2 + 0x18) + 0x800000000000;\n                        uVar3 = uVar4 >> 0x2a;\n                        if (uVar3 < 0x40) {\n                            uVar4 = uVar4 >> 0x16;\n                            if (*(*(uVar3 * 8 + 0x7d3e10) + (uVar4 & 0xfffff) * 8) == 0) {\n                                uVar4 = 0;\n                            }\n                            *(*0x20 + -0x50) = 0x41373f;\n                            fcn.00411720(uVar4 & 0xffffffff);\n                            return *(*0x20 + -0x20);\n                        }\n                        *(*0x20 + -0x50) = 0x413758;\n                        fcn.0045e260(0x40);\n                    }\n                    param_1 = 0x88;\n                    *(*0x20 + -0x50) = 0x413765;\n                    fcn.0045e240(0x88);\n                }\n                *(*0x20 + -0x50) = 0x413776;\n                fcn.00433c80();\n            }\n            unaff_RBX = 0xd;\n            *(*0x20 + -0x50) = 0x413787;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        puVar5[0x18] = param_1;\n        *(puVar5 + -8) = 0x41379b;\n        fcn.0045bb60();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        param_1 = puVar5[0x18];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1206
    },
    "0041c260": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0041c260(int64_t arg1)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t arg3;\n    uint64_t uVar4;\n    uint64_t noname_1;\n    uint64_t unaff_RBX;\n    int64_t unaff_RSI;\n    uint64_t arg1_00;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    int64_t iStack0000000000000028;\n    \n    iStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    arg1_00 = 0;\n    while (arg1_00 < unaff_RBX) {\n        uVar1 = *(arg1 + (arg1_00 >> 6));\n        uVar4 = uVar1;\n        if (uVar1 == 0) {\n            arg1_00 = arg1_00 + 0x40;\n        }\n        else {\n            iVar5 = 0;\n            for (; (iVar5 < 8 && (arg1_00 < unaff_RBX)); arg1_00 = arg1_00 + 8) {\n                if (((uVar4 & 1) != 0) && (uVar2 = *(arg1_00 + in_RAX),  uVar2 != 0)) {\n                    arg3 = arg1_00;\n                    noname_1 = uVar4;\n                    iVar3 = fcn.00410940(arg1_00);\n                    if (iVar3 == 0) {\n                        if (((iStack0000000000000028 != 0) &&\n                            (*(iStack0000000000000028 + 0x100) < uVar2 || *(iStack0000000000000028 + 0x100) == uVar2))\n                           && (uVar2 <= *(iStack0000000000000028 + 0x108) && *(iStack0000000000000028 + 0x108) != uVar2)\n                           ) {\n                            fcn.00420880(0);\n                        }\n                    }\n                    else {\n                        fcn.0041ca20(arg1_00, noname_1, arg3);\n                    }\n                }\n                iVar5 = iVar5 + 1;\n                uVar4 = uVar4 >> 1;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 574
    },
    "0041f9c0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.0041f9c0(code **arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    uint64_t uStack64;\n    uchar auStack56 [16];\n    uchar auStack40 [16];\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    uStack64 = 0;\n    while( true ) {\n        if (unaff_RBX <= uStack64) {\n            return uStack64;\n        }\n        iVar2 = fcn.00420520(in_RAX + 0x100c0);\n        if (iVar2 == 0) break;\n        auStack56 = CONCAT88(in_RAX, 0x41fb00);\n        auStack40 = CONCAT88(unaff_RBX, iVar2);\n        auStack24 = CONCAT88(&uStack64, unaff_RBX);\n        fcn.0045ba20();\n        if (arg1 == NULL) {\n            cVar1 = '\\0';\n        }\n        else {\n            cVar1 = (**arg1)();\n        }\n        if (cVar1 != '\\0') {\n            return uStack64;\n        }\n    }\n    return uStack64;\n}\n",
        "token_count": 325
    },
    "004201e0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.004201e0(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if (((arg1 - 1 & arg1) == 0) && (arg1 != 0)) {\n                if (arg1 < 0x41) {\n                    uVar4 = arg1;\n                    if (unaff_RDI != 0) {\n                        uVar4 = -arg1 & (arg1 + unaff_RDI) - 1;\n                    }\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x10) = uVar4;\n                    uVar4 = unaff_RBX >> 6;\n                    while( true ) {\n                        *(*0x20 + -0x28) = uVar4;\n                        bVar9 = uVar4 < 0;\n                        if (bVar9) break;\n                        if (7 < uVar4) goto code_r0x00420468;\n                        uVar3 = *(in_RAX + uVar4 * 8);\n                        uVar4 = *(in_RAX + 0x40 + uVar4 * 8);\n                        *(*0x20 + -0x50) = 0x420290;\n                        iVar2 = fcn.00420020(uVar3 | uVar4, arg1);\n                        if (iVar2 != -1) {\n                            bVar9 = *(*0x20 + -0x28) < 0;\n                            in_RAX = *(*0x20 + 8);\n                            arg1 = *(*0x20 + 0x18);\n                            uVar4 = *(*0x20 + -0x28);\n                            break;\n                        }\n                        uVar4 = *(*0x20 + -0x28) - 1;\n                        in_RAX = *(*0x20 + 8);\n                        arg1 = *(*0x20 + 0x18);\n                    }\n                    if (bVar9) {\n                        return 0;\n                    }\n                    if (uVar4 < 8) break;\n                    *(*0x20 + -0x50) = 0x420468;\n                    fcn.0045e240(8);\ncode_r0x00420468:\n                    arg1 = 8;\n                    *(*0x20 + -0x50) = 0x420475;\n                    fcn.0045e240(8);\n                }\n                *(*0x20 + -0x50) = 0x42047a;\n                fcn.00435540();\n                *(*0x20 + -0x50) = 0x42048b;\n                fcn.00435e40();\n                *(*0x20 + -0x50) = 0x420495;\n                fcn.00435b40();\n                *(*0x20 + -0x50) = 0x42049a;\n                fcn.004357a0();\n                *(*0x20 + -0x50) = 0x42049f;\n                fcn.004355c0();\n                *(*0x20 + -0x50) = 0x4204b0;\n                fcn.00433c80();\n            }\n            *(*0x20 + -0x50) = 0x4204b5;\n            fcn.00435540();\n            *(*0x20 + -0x50) = 0x4204c6;\n            fcn.00435e40();\n            *(*0x20 + -0x50) = 0x4204d0;\n            fcn.00435b40();\n            *(*0x20 + -0x50) = 0x4204d5;\n            fcn.004357a0();\n            *(*0x20 + -0x50) = 0x4204da;\n            fcn.004355c0();\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x50) = 0x4204eb;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x420505;\n        fcn.0045bb60();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n    uVar3 = *(in_RAX + uVar4 * 8);\n    uVar4 = *(in_RAX + 0x40 + uVar4 * 8);\n    *(*0x20 + -0x50) = 0x4202de;\n    uVar4 = fcn.00420020(uVar3 | uVar4, arg1);\n    uVar3 = ~uVar4;\n    iVar2 = 0x3f;\n    if (uVar3 != 0) {\n        for (; uVar3 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n        }\n    }\n    if (uVar3 == 0) {\n        iVar2 = -1;\n    }\n    iVar1 = *(*0x20 + -0x28);\n    uVar3 = iVar2 + iVar1 * 0x40 + 1;\n    iVar7 = iVar2 + iVar1 * 0x40 + 1;\n    uVar4 = uVar4 << (-(iVar2 + '\\x01') & 0x3fU) & -(-(iVar2 + -0x3f) < 0x40);\n    if (uVar4 == 0) {\n        *(*0x20 + -0x20) = uVar3;\n        *(*0x20 + -0x18) = iVar7;\n        uVar4 = iVar2 + 1;\n        while (-1 < iVar1 + -1) {\n            *(*0x20 + -0x30) = iVar1 + -1;\n            *(*0x20 + -0x38) = uVar4;\n            *(*0x20 + -0x50) = 0x4203af;\n            uVar3 = fcn.00420020();\n            iVar2 = 0x3f;\n            if (uVar3 != 0) {\n                for (; uVar3 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n                }\n            }\n            if (uVar3 == 0) {\n                iVar2 = -1;\n            }\n            uVar4 = (*(*0x20 + -0x38) - (iVar2 + 1)) + 0x40;\n            if (uVar3 != 0) {\n                iVar7 = *(*0x20 + -0x18);\n                uVar3 = *(*0x20 + -0x20);\n                break;\n            }\n            iVar7 = *(*0x20 + -0x18);\n            uVar3 = *(*0x20 + -0x20);\n            iVar1 = *(*0x20 + -0x30);\n        }\n    }\n    else {\n        iVar2 = 0x3f;\n        if (uVar4 != 0) {\n            for (; uVar4 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n            }\n        }\n        if (uVar4 == 0) {\n            iVar2 = -1;\n        }\n        uVar4 = -(iVar2 + -0x3f);\n    }\n    uVar8 = uVar4;\n    if (*(*0x20 + -0x10) < uVar4) {\n        uVar8 = *(*0x20 + -0x10);\n    }\n    uVar8 = iVar7 - uVar8;\n    if ((((0x2000 < *0x801b10) && (*0x801b18 < *0x801b10)) &&\n        (uVar6 = -(*0x801b10 >> 0xd),  ((uVar8 + (*0x801b10 >> 0xd)) - 1 & uVar6) <= uVar3)) &&\n       (uVar6 = uVar6 & uVar8,  iVar7 - uVar4 <= uVar6)) {\n        uVar8 = uVar6;\n    }\n    return uVar8;\n}\n",
        "token_count": 2088
    },
    "004269a0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.004269a0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            uVar3 = arg1 + unaff_RBX + 0x3fffff & 0xffffffffffc00000;\n            *(*0x20 + -0x40) = uVar3;\n            *(*0x20 + -0x48) = unaff_RBX & 0xffffffffffc00000;\n            *(*0x20 + -0x70) = 0x4269f4;\n            fcn.00428d40(uVar3);\n            iVar2 = *(*0x20 + 8);\n            iVar1 = *(*0x20 + -0x48);\n            uVar3 = iVar1 + 0x800000000000U >> 0x16;\n            if ((*(iVar2 + 0x10080) == 0) || (uVar3 < *(iVar2 + 0x10080))) {\n                *(iVar2 + 0x10080) = uVar3;\n            }\n            *(*0x20 + -0x18) = iVar1 + 0x800000000000U;\n            *(*0x20 + -0x20) = uVar3;\n            iVar1 = *(*0x20 + -0x40);\n            uVar3 = iVar1 + 0x800000000000U >> 0x16;\n            *(*0x20 + -0x28) = uVar3;\n            if (*(iVar2 + 0x10088) < uVar3) {\n                *(iVar2 + 0x10088) = uVar3;\n            }\n            *(*0x20 + -0x70) = 0x426a65;\n            fcn.0042bca0();\n            *(*0x20 + -0x70) = 0x426a85;\n            fcn.0042c0e0(iVar1);\n            iVar2 = *(*0x20 + 8);\n            if (*(*0x20 + -0x18) < *(iVar2 + 0x10078) + 0x800000000000U) {\n                unaff_RBX = *(*0x20 + -0x48);\n                *(iVar2 + 0x10078) = unaff_RBX;\n            }\n            else {\n                unaff_RBX = *(*0x20 + -0x48);\n            }\n            uVar3 = *(*0x20 + -0x28);\n            uVar5 = *(*0x20 + -0x20);\ncode_r0x00426b09:\n            if (uVar3 <= uVar5) {\n                *(*0x20 + -0x70) = 0x426b9e;\n                fcn.00426c00(*(*0x20 + 0x18) >> 0xd);\n                return;\n            }\n            uVar3 = uVar5 >> 0xd;\n            if (0x1fff < uVar3) goto code_r0x00426bb9;\n            *(*0x20 + -0x30) = uVar5;\n            if (*(iVar2 + 0x78 + uVar3 * 8) != 0) {\ncode_r0x00426ac7:\n                *(*0x20 + -0x70) = 0x426aef;\n                fcn.00429ce0(0x200);\n                uVar5 = *(*0x20 + -0x30) + 1;\n                uVar3 = *(*0x20 + -0x28);\n                iVar2 = *(*0x20 + 8);\n                unaff_RBX = *(*0x20 + -0x48);\n                goto code_r0x00426b09;\n            }\n            *(*0x20 + -0x38) = uVar3;\n            *(*0x20 + -0x10) = iVar2 + uVar3 * 8 + 0x78;\n            *(*0x20 + -0x70) = 0x426b65;\n            iVar2 = fcn.00414420();\n            if (iVar2 != 0) {\n                **(*0x20 + -0x10) = iVar2;\n                goto code_r0x00426ac7;\n            }\n            unaff_RBX = 0x18;\n            *(*0x20 + -0x70) = 0x426bb9;\n            fcn.00433c80();\ncode_r0x00426bb9:\n            arg1 = 0x2000;\n            *(*0x20 + -0x70) = 0x426bc6;\n            in_RAX = fcn.0045e260(0x2000);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x426bdb;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1332
    },
    "004271e0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.004271e0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    int64_t in_RAX;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t in_RDX;\n    uint64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            uVar2 = unaff_RBX;\n            uVar10 = unaff_RBX + 0x800000000000;\n            uVar11 = uVar10 >> 0x16;\n            uVar8 = unaff_RBX + arg1 * 0x2000 + 0x7fffffffffff;\n            uVar9 = uVar8 >> 0x16;\n            unaff_RBX = (uVar2 & 0x3fffff) >> 0xd;\n            *(*0x20 + -0x18) = unaff_RBX;\n            uVar6 = ((uVar2 + arg1 * 0x2000) - 1 & 0x3fffff) >> 0xd;\n            if (uVar9 == uVar11) {\n                if (0x1fff < uVar10 >> 0x23) {\n                    *(*0x20 + -0x88) = 0x4273d8;\n                    fcn.0045e260(0x2000);\n                    goto code_r0x004273d8;\n                }\n                *(*0x20 + -0x10) = *(in_RAX + 0x78 + (uVar10 >> 0x23) * 8);\n                *(*0x20 + -0x40) = (uVar11 & 0x1fff) << 7;\n                iVar4 = (uVar6 - unaff_RBX) + 1;\n                *(*0x20 + -0x48) = iVar4;\n                *(*0x20 + -0x88) = 0x427366;\n                uVar3 = fcn.00429f00(iVar4);\n                *(*0x20 + -0x50) = uVar3;\n                *(*0x20 + -0x88) = 0x42738a;\n                fcn.0042a620(*(*0x20 + -0x48));\n                iVar4 = *(*0x20 + -0x50);\ncode_r0x0042738f:\n                *(*0x20 + -0x60) = iVar4;\n                *(*0x20 + -0x88) = 0x4273b8;\n                fcn.00426c00(*(*0x20 + 0x18));\n                return *(*0x20 + -0x60) << 0xd;\n            }\n            if (uVar10 >> 0x23 < 0x2000) {\n                *(*0x20 + -0x20) = uVar9;\n                *(*0x20 + -0x28) = uVar8;\n                *(*0x20 + -0x30) = uVar11;\n                *(*0x20 + -0x38) = uVar6;\n                *(*0x20 + -0x10) = *(in_RAX + 0x78 + (uVar10 >> 0x23) * 8);\n                *(*0x20 + -0x40) = (uVar11 & 0x1fff) << 7;\n                *(*0x20 + -0x48) = -(unaff_RBX - 0x200);\n                *(*0x20 + -0x88) = 0x4272db;\n                uVar3 = fcn.00429f00(-(unaff_RBX - 0x200));\n                *(*0x20 + -0x50) = uVar3;\n                unaff_RBX = *(*0x20 + -0x18);\n                *(*0x20 + -0x88) = 0x4272ff;\n                fcn.0042a620(*(*0x20 + -0x48));\n                iVar1 = *(*0x20 + -0x30);\n                iVar5 = *(*0x20 + 8);\n                uVar6 = *(*0x20 + -0x20);\n                iVar4 = *(*0x20 + -0x50);\n                while( true ) {\n                    in_RDX = iVar1 + 1;\n                    *(*0x20 + -0x60) = iVar4;\n                    if (uVar6 <= in_RDX) {\n                        if (0x1fff < *(*0x20 + -0x28) >> 0x23) {\n                            *(*0x20 + -0x88) = 0x427512;\n                            iVar5 = fcn.0045e260(0x2000);\n                            goto code_r0x00427512;\n                        }\n                        *(*0x20 + -0x10) = *(iVar5 + 0x78 + (*(*0x20 + -0x28) >> 0x23) * 8);\n                        *(*0x20 + -0x40) = (uVar6 & 0x1fff) << 7;\n                        *(*0x20 + -0x48) = *(*0x20 + -0x38) + 1;\n                        *(*0x20 + -0x88) = 0x4274d4;\n                        uVar3 = fcn.00429f00(*(*0x20 + -0x38) + 1);\n                        *(*0x20 + -0x50) = uVar3;\n                        *(*0x20 + -0x88) = 0x4274f5;\n                        fcn.0042a620(*(*0x20 + -0x48));\n                        iVar4 = *(*0x20 + -0x60) + *(*0x20 + -0x50);\n                        goto code_r0x0042738f;\n                    }\n                    if (0x1fff < in_RDX >> 0xd) break;\n                    *(*0x20 + -0x58) = in_RDX;\n                    *(*0x20 + -0x10) = *(iVar5 + 0x78 + (in_RDX >> 0xd) * 8);\n                    *(*0x20 + -0x40) = (in_RDX & 0x1fff) << 7;\n                    *(*0x20 + -0x88) = 0x42746d;\n                    iVar4 = fcn.00429f00(0x200);\n                    in_RDX = *(*0x20 + -0x60) + iVar4;\n                    iVar4 = *(*0x20 + -0x10) + *(*0x20 + -0x40);\n                    for (iVar5 = 0; iVar5 < 8; iVar5 = iVar5 + 1) {\ncode_r0x00427512:\n                        *(iVar4 + iVar5 * 8) = 0xffffffffffffffff;\n                    }\ncode_r0x004273d8:\n                    *(*0x20 + -0x60) = in_RDX;\n                    unaff_RBX = 0x40;\n                    *(*0x20 + -0x88) = 0x4273f0;\n                    fcn.0045e8c0();\n                    iVar1 = *(*0x20 + -0x58);\n                    iVar5 = *(*0x20 + 8);\n                    uVar6 = *(*0x20 + -0x20);\n                    iVar4 = *(*0x20 + -0x60);\n                }\n                *(*0x20 + -0x88) = 0x427535;\n                fcn.0045e260(0x2000);\n            }\n            arg1 = 0x2000;\n            *(*0x20 + -0x88) = 0x427545;\n            in_RAX = fcn.0045e260(0x2000);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x42755a;\n        fcn.0045bb60();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 2047
    },
    "00429a00": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.00429a00(void)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t arg1;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar5 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar9 = *(in_RAX + 0x10078);\n            uVar3 = iVar9 + 0x800000000000;\n            uVar6 = uVar3 >> 0x16;\n            if (*(in_RAX + 0x10088) < uVar6 || *(in_RAX + 0x10088) == uVar6) {\n                return 0;\n            }\n            arg1 = *(in_RAX + 0x68);\n            iVar2 = *(in_RAX + 0x60);\n            if (uVar6 < arg1) {\n                *(*0x20 + 8) = in_RAX;\n                arg1 = *(iVar2 + uVar6 * 8);\n                if (arg1 == 0) {\n                    *(*0x20 + -0x68) = 0x429a7a;\n                    uVar6 = fcn.00427660();\n                    if (uVar6 == 0) {\n                        *(*(*0x20 + 8) + 0x10078) = *0x7953a0;\n                        return 0;\n                    }\n                    arg1 = uVar6 + 0x800000000000;\n                    if (arg1 >> 0x23 < 0x2000) {\n                        iVar2 = *(*(*0x20 + 8) + 0x78 + (arg1 >> 0x23) * 8);\n                        arg1 = (arg1 >> 0x16 & 0x1fff) * 0x80;\n                        iVar9 = iVar2 + arg1;\n                        uVar3 = (uVar6 & 0x3fffff) >> 0x13;\n                        if (uVar3 < 8) {\n                            uVar8 = *(iVar2 + arg1 + uVar3 * 8);\n                            uVar6 = uVar6 & 0xfffffffffff80000;\n                            uVar3 = *(iVar2 + arg1 + 0x40 + uVar3 * 8);\ncode_r0x00429bec:\n                            uVar8 = ~uVar8;\n                            uVar4 = (uVar6 & 0x3fffff) >> 0x13;\n                            if (uVar4 < 8) {\n                                *(*0x20 + -0x40) = uVar3;\n                                *(*0x20 + -0x38) = uVar8;\n                                *(*0x20 + -0x30) = uVar6;\n                                puVar1 = iVar9 + uVar4 * 8;\n                                *puVar1 = *puVar1 | uVar8;\n                                puVar1 = iVar9 + 0x40 + uVar4 * 8;\n                                *puVar1 = *puVar1 & ~(uVar8 & uVar3);\n                                *(*0x20 + -0x68) = 0x429c34;\n                                fcn.00426c00(0x40);\n                                iVar9 = *(*0x20 + -0x30);\n                                *(*(*0x20 + 8) + 0x10078) = iVar9 + 0x7e000;\n                                return iVar9;\n                            }\n                            *(*0x20 + -0x68) = 0x429c7c;\n                            fcn.0045e260(8);\ncode_r0x00429c7c:\n                            *(*0x20 + -0x68) = 0x429c86;\n                            fcn.0045e260(8);\n                            uVar3 = arg1;\n                            goto code_r0x00429c86;\n                        }\n                        goto code_r0x00429ca5;\n                    }\n                }\n                else {\n                    uVar3 = uVar3 >> 0x23;\n                    if (uVar3 < 0x2000) {\n                        *(*0x20 + -0x20) = uVar6;\n                        iVar2 = *(in_RAX + 0x78 + uVar3 * 8);\n                        *(*0x20 + -0x10) = iVar2;\n                        iVar7 = (uVar6 & 0x1fff) * 0x80;\n                        *(*0x20 + -0x28) = iVar7;\n                        uVar3 = iVar2 + iVar7;\n                        *(*0x20 + -0x18) = uVar3;\n                        *(*0x20 + -0x68) = 0x429b7f;\n                        arg1 = fcn.0042a320((iVar9 & 0x3fffff) >> 0xd);\n                        iVar9 = *(*0x20 + -0x10) + *(*0x20 + -0x28);\n                        if (arg1 != 0xffffffffffffffff) {\n                            uVar3 = arg1 >> 6;\n                            if (uVar3 < 8) {\n                                uVar6 = ((arg1 & 0xffffffffffffffc0) * 0x2000 + *(*0x20 + -0x20) * 0x400000) -\n                                        0x800000000000;\n                                uVar8 = *(*(*0x20 + -0x18) + uVar3 * 8);\n                                arg1 = *(*0x20 + -0x10) + *(*0x20 + -0x28) + 0x40;\n                                uVar3 = *(arg1 + uVar3 * 8);\n                                goto code_r0x00429bec;\n                            }\n                            goto code_r0x00429c7c;\n                        }\ncode_r0x00429c86:\n                        *(*0x20 + -0x68) = 0x429c97;\n                        fcn.00433c80();\n                        arg1 = uVar3;\n                    }\n                    *(*0x20 + -0x68) = 0x429ca5;\n                    fcn.0045e260(0x2000);\ncode_r0x00429ca5:\n                    *(*0x20 + -0x68) = 0x429caf;\n                    fcn.0045e260(8);\n                }\n                *(*0x20 + -0x68) = 0x429cbc;\n                fcn.0045e260(0x2000);\n            }\n            *(*0x20 + -0x68) = 0x429cc7;\n            in_RAX = fcn.0045e260(arg1);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x429cd2;\n        fcn.004602a0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1661
    },
    "0042a4e0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.0042a4e0(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    \n    arg1 = arg1 >> 6;\n    uVar3 = 0;\n    iVar4 = -1;\n    iVar5 = -1;\n    do {\n        if (7 < arg1) {\n            if (unaff_RBX <= uVar3) {\n                return iVar5;\n            }\n            return -1;\n        }\n        uVar1 = *(in_RAX + arg1 * 8);\n        if (uVar1 == 0xffffffffffffffff) {\n            uVar3 = 0;\n        }\n        else {\n            if (iVar4 == -1) {\n                uVar6 = ~uVar1;\n                iVar4 = 0;\n                if (uVar6 != 0) {\n                    for (; (uVar6 >> iVar4 & 1) == 0; iVar4 = iVar4 + 1) {\n                    }\n                }\n                if (uVar6 == 0) {\n                    iVar4 = 0x40;\n                }\n                iVar4 = arg1 * 0x40 + iVar4;\n            }\n            if (uVar3 == 0) {\n                iVar2 = 0x3f;\n                if (uVar1 != 0) {\n                    for (; uVar1 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n                    }\n                }\n                if (uVar1 == 0) {\n                    iVar2 = -1;\n                }\n                iVar5 = arg1 * 0x40 + iVar2 + 1;\n                uVar3 = -(iVar2 + -0x3f);\n            }\n            else {\n                uVar6 = 0;\n                if (uVar1 != 0) {\n                    for (; (uVar1 >> uVar6 & 1) == 0; uVar6 = uVar6 + 1) {\n                    }\n                }\n                if (uVar1 == 0) {\n                    uVar6 = 0x40;\n                }\n                if (unaff_RBX <= uVar6 + uVar3) {\n                    return iVar5;\n                }\n                if (uVar6 < 0x40) {\n                    iVar2 = 0x3f;\n                    if (uVar1 != 0) {\n                        for (; uVar1 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n                        }\n                    }\n                    if (uVar1 == 0) {\n                        iVar2 = -1;\n                    }\n                    iVar5 = arg1 * 0x40 + iVar2 + 1;\n                    uVar3 = -(iVar2 + -0x3f);\n                }\n                else {\n                    uVar3 = uVar3 + 0x40;\n                }\n            }\n        }\n        arg1 = arg1 + 1;\n    } while( true );\n}\n",
        "token_count": 679
    },
    "0042e860": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0042e860(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    ulong uStack24;\n    ulong uStack16;\n    \n    while (&uStack24 < *(unaff_R14 + 0x10) || &uStack24 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    iVar1 = fcn.0042dec0(0xd);\n    if (iVar1 != 0) {\n        iVar1 = fcn.0042de00(0x27);\n        if (iVar1 != 0) {\n            uStack24 = 0x49fbc0;\n            uStack16 = 0x719678;\n            fcn.00459ea0(1);\n            fcn.00430e80();\n            return;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "0042fd20": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0042fd20(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 == 0) {\n                return;\n            }\n            *(*0x20 + -0xc) = 0;\n            if (arg1 != 0) {\n                *(*0x20 + -0x48) = *0x795148;\n                *(*0x20 + -0x40) = in_RAX;\n                *(*0x20 + -0x38) = unaff_RBX;\n                *(*0x20 + -0x30) = arg1 & 0xffffffff;\n                *(*0x20 + -0x28) = *0x20 + -0xc;\n                *(*0x20 + -0x20) = 0;\n                *(*0x20 + -0x50) = 0x42fd85;\n                fcn.00430f80();\n                return;\n            }\n            arg1 = 0;\n            *(*0x20 + -0x50) = 0x42fdb7;\n            in_RAX = fcn.0045e240(0);\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + 0x20) = unaff_RDI;\n        *(puVar1 + -8) = 0x42fdd1;\n        fcn.0045bb60();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        unaff_RDI = *(puVar1 + 0x20);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 558
    },
    "004312c0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.004312c0(void)\n\n{\n    uint in_EAX;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00431000();\n    *(*(**(in_GS_OFFSET + 0x28) + 0x30) + 0xe0) = in_EAX;\n    return;\n}\n",
        "token_count": 127
    },
    "00434120": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00434120(void)\n\n{\n    fcn.0045ba20();\n    fcn.0045ba20();\n    _pe_dos_header = 0;\n    return;\n}\n",
        "token_count": 43
    },
    "00435e40": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00435e40(void)\n\n{\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00435620(unaff_RBX);\n    return;\n}\n",
        "token_count": 92
    },
    "0044ae80": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0044ae80(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0044abe0(2);\n    return;\n}\n",
        "token_count": 87
    },
    "0044b920": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0044b920(void)\n\n{\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    uVar1 = fcn.0040bba0(0);\n    return uVar1;\n}\n",
        "token_count": 98
    },
    "00451760": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t fcn.00451760(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    ulong *puVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t arg1_00;\n    code *pcVar5;\n    int32_t iVar6;\n    uint64_t unaff_RBX;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    ulong *unaff_RDI;\n    uint64_t uVar9;\n    int64_t iVar10;\n    int64_t in_R10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 == 0) {\n                return 0;\n            }\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x50) = 0x4517a5;\n            uVar1 = fcn.0045dc60(arg1 << 3);\n            uVar4 = uVar1 & 0x1fff;\n            unaff_RDI = *(*(*0x20 + 8) + 0x20 + uVar4 * 8);\n            uVar9 = *(*0x20 + 8) + uVar4 * 8 + 0x20;\n            arg1_00 = *(*0x20 + 0x18);\n            iVar10 = *(*0x20 + 0x10);\n            while( true ) {\n                if (unaff_RDI == NULL) {\n                    iVar6 = 0;\n                    arg1_00 = uVar9;\n                    goto code_r0x00451817;\n                }\n                if ((unaff_RDI[1] == uVar1) && (unaff_RBX = unaff_RDI[3],  arg1_00 == unaff_RBX)) break;\ncode_r0x004517d9:\n                unaff_RDI = *unaff_RDI;\n            }\n            if (unaff_RBX < 0x81) {\n                in_R10 = 0;\n                do {\n                    if (in_R10 < unaff_RBX) {\n                        if (*(iVar10 + in_R10 * 8) != unaff_RDI[in_R10 + 4]) goto code_r0x004517d9;\n                    }\n                    else {\n                        iVar6 = *(unaff_RDI + 2);\n                        arg1_00 = uVar9;\ncode_r0x00451817:\n                        if (iVar6 != 0) {\n                            return iVar6;\n                        }\n                        *(*0x20 + -0x20) = uVar1;\n                        *(*0x20 + -0x28) = uVar4;\n                        *(*0x20 + -0x10) = arg1_00;\n                        *(*0x20 + -0x50) = 0x451834;\n                        fcn.0040a460();\n                        iVar3 = *(*0x20 + 8);\n                        pcVar5 = *(iVar3 + 0x20 + *(*0x20 + -0x28) * 8);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        uVar1 = *(*0x20 + 0x18);\n                        unaff_RDI = *(*0x20 + -0x20);\n                        while( true ) {\n                            if (pcVar5 == NULL) {\n                                iVar6 = 0;\n                                goto code_r0x00451897;\n                            }\n                            if ((*(pcVar5 + 8) == unaff_RDI) && (arg1_00 = *(pcVar5 + 0x18),  uVar1 == arg1_00)) break;\ncode_r0x00451861:\n                            pcVar5 = *pcVar5;\n                        }\n                        if (arg1_00 < 0x81) {\n                            iVar10 = 0;\n                            do {\n                                if (iVar10 < arg1_00) {\n                                    in_R10 = *(pcVar5 + (iVar10 + 4) * 8);\n                                    if (*(unaff_RBX + iVar10 * 8) != in_R10) goto code_r0x00451861;\n                                }\n                                else {\n                                    iVar6 = *(pcVar5 + 0x10);\ncode_r0x00451897:\n                                    if (iVar6 != 0) {\n                                        *(*0x20 + -0x2c) = iVar6;\n                                        *(*0x20 + -0x50) = 0x4518e5;\n                                        fcn.0040a680();\n                                        return *(*0x20 + -0x2c);\n                                    }\n                                    *(iVar3 + 8) = *(iVar3 + 8) + 1;\n                                    *(*0x20 + -0x50) = 0x4518a6;\n                                    puVar2 = fcn.00451a00();\n                                    puVar2[1] = *(*0x20 + -0x20);\n                                    iVar3 = *(*0x20 + 8);\n                                    *(puVar2 + 2) = *(iVar3 + 8);\n                                    uVar9 = *(*0x20 + 0x18);\n                                    puVar2[3] = uVar9;\n                                    if (uVar9 < 0x81) {\n                                        iVar10 = *(*0x20 + 0x10);\n                                        for (iVar7 = 0; iVar7 < uVar9; iVar7 = iVar7 + 1) {\n                                            puVar2[iVar7 + 4] = *(iVar10 + iVar7 * 8);\n                                        }\n                                        *(*0x20 + -0x18) = puVar2;\n                                        *puVar2 = *(iVar3 + 0x20 + *(*0x20 + -0x28) * 8);\n                                        *(*0x20 + -0x50) = 0x451925;\n                                        fcn.00403560();\n                                        *(*0x20 + -0x50) = 0x451931;\n                                        fcn.0040a680();\n                                        return *(*(*0x20 + -0x18) + 0x10);\n                                    }\n                                    pcVar5 = pe_nt_image_headers64;\n                                    *(*0x20 + -0x50) = 0x451950;\n                                    iVar3 = fcn.0045e280(uVar9, 0x80);\n                                    unaff_RBX = uVar1;\n                                }\n                                iVar10 = iVar10 + 1;\n                            } while( true );\n                        }\n                        *(*0x20 + -0x50) = 0x451985;\n                        uVar9 = arg1_00;\n                        uVar4 = fcn.0045e280(arg1_00, 0x80);\n                    }\n                    in_R10 = in_R10 + 1;\n                } while( true );\n            }\n            *(*0x20 + -0x50) = 0x4519ba;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045e280(unaff_RBX, 0x80);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x20) = unaff_RDI;\n        *(puVar8 + -8) = 0x4519d4;\n        fcn.0045bb60();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        unaff_RDI = *(puVar8 + 0x20);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1832
    },
    "00451e60": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00451e60(void)\n\n{\n    uint uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t unaff_R14;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    *(in_RAX + 0xd8) = 0;\n    *(in_RAX + 0xe0) = *(*(unaff_R14 + 0x30) + 0xa0);\n    iVar2 = fcn.00452520();\n    piVar3 = fcn.0040c560();\n    *piVar3 = iVar2 + 1;\n    uVar1 = fcn.00451760(1);\n    auStack24 = ZEXT1216(CONCAT48(uVar1, *(in_RAX + 0x98)));\n    fcn.00450c80(auStack24);\n    return;\n}\n",
        "token_count": 245
    },
    "00452180": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00452180(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    ulong uStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    *(in_RAX + 0xd8) = *(in_RAX + 0xd8) + 1;\n    if (*(in_RAX + 0xe0) == iVar1) {\n        uStack32 = *(in_RAX + 0x98);\n        fcn.00450c80(&uStack32);\n    }\n    else {\n        *(in_RAX + 0xe0) = iVar1;\n        auStack24 = CONCAT88(*(in_RAX + 0xd8), *(in_RAX + 0x98));\n        fcn.00450c80(auStack24);\n    }\n    return;\n}\n",
        "token_count": 256
    },
    "004522a0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.004522a0(void)\n\n{\n    int64_t iVar1;\n    uint64_t in_RAX;\n    int64_t unaff_R14;\n    ulong uStack32;\n    ulong uStack24;\n    uint64_t uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if ((in_RAX != 0) && (in_RAX < *0x7b3ba0)) {\n        in_RAX = 0;\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0x90);\n    *(iVar1 + 0xd8) = *(iVar1 + 0xd8) + 1;\n    *(iVar1 + 0xe0) = *(*(iVar1 + 0x30) + 0xa0);\n    uStack32 = *(iVar1 + 0x98);\n    uStack24 = *(iVar1 + 0xd8);\n    uStack16 = in_RAX >> 6;\n    fcn.00450c80(&uStack32);\n    return;\n}\n",
        "token_count": 270
    },
    "004570e0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.004570e0(void)\n\n{\n    uint64_t in_RAX;\n    ulong *puVar1;\n    int64_t iVar2;\n    int32_t unaff_EBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_EBX == -1) {\n                return 0x40a1c0;\n            }\n            for (iVar2 = 0x79ae80; iVar2 != 0; iVar2 = *(iVar2 + 0x220)) {\n                if ((*(iVar2 + 0x118) < in_RAX || *(iVar2 + 0x118) == in_RAX) &&\n                   (in_RAX <= *(iVar2 + 0x120) && *(iVar2 + 0x120) != in_RAX)) goto code_r0x00457140;\n            }\n            iVar2 = 0;\ncode_r0x00457140:\n            if (iVar2 != 0) {\n                *(*0x20 + -0x50) = 0x457219;\n                iVar2 = fcn.0044ce60();\n                return iVar2;\n            }\n            *(*0x20 + -0x30) = in_RAX;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + -0x50) = 0x457165;\n            fcn.0040a460();\n            *(*0x20 + -0x50) = 0x45717c;\n            puVar1 = fcn.0040e660(*(*0x20 + 0x10));\n            *(*0x20 + -0x18) = *puVar1;\n            *(*0x20 + -0x50) = 0x457193;\n            fcn.0040a680();\n            if (*(*0x20 + -0x18) != 0) {\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x50) = 0x4571a5;\n            fcn.00435540();\n            *(*0x20 + -0x50) = 0x4571b6;\n            fcn.00435e40();\n            *(*0x20 + -0x50) = 0x4571c5;\n            fcn.00435ca0();\n            *(*0x20 + -0x50) = 0x4571d6;\n            fcn.00435e40();\n            *(*0x20 + -0x50) = 0x4571e5;\n            fcn.00435ca0();\n            *(*0x20 + -0x50) = 0x4571f6;\n            fcn.00435e40();\n            *(*0x20 + -0x50) = 0x4571fb;\n            fcn.004355c0();\n            iVar2 = 0x79ae80;\n            while (iVar2 != 0) {\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x20) = *(iVar2 + 0x118);\n                *(*0x20 + -0x28) = *(iVar2 + 0x120);\n                *(*0x20 + -0x50) = 0x457245;\n                fcn.00435540();\n                *(*0x20 + -0x50) = 0x457256;\n                fcn.00435e40();\n                *(*0x20 + -0x50) = 0x457265;\n                fcn.00435ca0();\n                *(*0x20 + -0x50) = 0x457276;\n                fcn.00435e40();\n                *(*0x20 + -0x50) = 0x457285;\n                fcn.00435ca0();\n                *(*0x20 + -0x50) = 0x45728a;\n                fcn.004357a0();\n                *(*0x20 + -0x50) = 0x45728f;\n                fcn.004355c0();\n                iVar2 = *(*(*0x20 + -0x10) + 0x220);\n            }\n            unaff_EBX = 0x2e;\n            *(*0x20 + -0x50) = 0x4572ba;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + -8) = 0x4572c9;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1175
    },
    "0045a4e0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045a4e0(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    uchar auStackX8 [8];\n    int64_t iStackX16;\n    ulong uStackX24;\n    \n    iStackX16 = 0;\n    uStackX24 = 0;\n    piVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30) + 0x23c;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    *(*(iVar2 + 0x30) + 0x130) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar2 + 0x2c0) = *0x7951d0;\n    *(iVar2 + 0x2c8) = 1;\n    *(iVar2 + 0x2d0) = auStackX8;\n    fcn.004035a0(iVar2 + 0x2c0);\n    iStackX16 = *(iVar2 + 0x2d8);\n    if (iStackX16 == 0) {\n        uStackX24 = *(iVar2 + 0x2e8);\n    }\n    fcn.0043f3e0();\n    return;\n}\n",
        "token_count": 343
    },
    "0045e3a0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045e3a0(void)\n\n{\n    uint *unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *unaff_RDI = in_XMM15_Da;\n    unaff_RDI[1] = in_XMM15_Db;\n    unaff_RDI[2] = in_XMM15_Dc;\n    unaff_RDI[3] = in_XMM15_Dd;\n    unaff_RDI[4] = in_XMM15_Da;\n    unaff_RDI[5] = in_XMM15_Db;\n    unaff_RDI[6] = in_XMM15_Dc;\n    unaff_RDI[7] = in_XMM15_Dd;\n    unaff_RDI[8] = in_XMM15_Da;\n    unaff_RDI[9] = in_XMM15_Db;\n    unaff_RDI[10] = in_XMM15_Dc;\n    unaff_RDI[0xb] = in_XMM15_Dd;\n    unaff_RDI[0xc] = in_XMM15_Da;\n    unaff_RDI[0xd] = in_XMM15_Db;\n    unaff_RDI[0xe] = in_XMM15_Dc;\n    unaff_RDI[0xf] = in_XMM15_Dd;\n    unaff_RDI[0x10] = in_XMM15_Da;\n    unaff_RDI[0x11] = in_XMM15_Db;\n    unaff_RDI[0x12] = in_XMM15_Dc;\n    unaff_RDI[0x13] = in_XMM15_Dd;\n    unaff_RDI[0x14] = in_XMM15_Da;\n    unaff_RDI[0x15] = in_XMM15_Db;\n    unaff_RDI[0x16] = in_XMM15_Dc;\n    unaff_RDI[0x17] = in_XMM15_Dd;\n    unaff_RDI[0x18] = in_XMM15_Da;\n    unaff_RDI[0x19] = in_XMM15_Db;\n    unaff_RDI[0x1a] = in_XMM15_Dc;\n    unaff_RDI[0x1b] = in_XMM15_Dd;\n    unaff_RDI[0x1c] = in_XMM15_Da;\n    unaff_RDI[0x1d] = in_XMM15_Db;\n    unaff_RDI[0x1e] = in_XMM15_Dc;\n    unaff_RDI[0x1f] = in_XMM15_Dd;\n    unaff_RDI[0x20] = in_XMM15_Da;\n    unaff_RDI[0x21] = in_XMM15_Db;\n    unaff_RDI[0x22] = in_XMM15_Dc;\n    unaff_RDI[0x23] = in_XMM15_Dd;\n    unaff_RDI[0x24] = in_XMM15_Da;\n    unaff_RDI[0x25] = in_XMM15_Db;\n    unaff_RDI[0x26] = in_XMM15_Dc;\n    unaff_RDI[0x27] = in_XMM15_Dd;\n    unaff_RDI[0x28] = in_XMM15_Da;\n    unaff_RDI[0x29] = in_XMM15_Db;\n    unaff_RDI[0x2a] = in_XMM15_Dc;\n    unaff_RDI[0x2b] = in_XMM15_Dd;\n    unaff_RDI[0x2c] = in_XMM15_Da;\n    unaff_RDI[0x2d] = in_XMM15_Db;\n    unaff_RDI[0x2e] = in_XMM15_Dc;\n    unaff_RDI[0x2f] = in_XMM15_Dd;\n    unaff_RDI[0x30] = in_XMM15_Da;\n    unaff_RDI[0x31] = in_XMM15_Db;\n    unaff_RDI[0x32] = in_XMM15_Dc;\n    unaff_RDI[0x33] = in_XMM15_Dd;\n    unaff_RDI[0x34] = in_XMM15_Da;\n    unaff_RDI[0x35] = in_XMM15_Db;\n    unaff_RDI[0x36] = in_XMM15_Dc;\n    unaff_RDI[0x37] = in_XMM15_Dd;\n    unaff_RDI[0x38] = in_XMM15_Da;\n    unaff_RDI[0x39] = in_XMM15_Db;\n    unaff_RDI[0x3a] = in_XMM15_Dc;\n    unaff_RDI[0x3b] = in_XMM15_Dd;\n    unaff_RDI[0x3c] = in_XMM15_Da;\n    unaff_RDI[0x3d] = in_XMM15_Db;\n    unaff_RDI[0x3e] = in_XMM15_Dc;\n    unaff_RDI[0x3f] = in_XMM15_Dd;\n    unaff_RDI[0x40] = in_XMM15_Da;\n    unaff_RDI[0x41] = in_XMM15_Db;\n    unaff_RDI[0x42] = in_XMM15_Dc;\n    unaff_RDI[0x43] = in_XMM15_Dd;\n    unaff_RDI[0x44] = in_XMM15_Da;\n    unaff_RDI[0x45] = in_XMM15_Db;\n    unaff_RDI[0x46] = in_XMM15_Dc;\n    unaff_RDI[0x47] = in_XMM15_Dd;\n    unaff_RDI[0x48] = in_XMM15_Da;\n    unaff_RDI[0x49] = in_XMM15_Db;\n    unaff_RDI[0x4a] = in_XMM15_Dc;\n    unaff_RDI[0x4b] = in_XMM15_Dd;\n    unaff_RDI[0x4c] = in_XMM15_Da;\n    unaff_RDI[0x4d] = in_XMM15_Db;\n    unaff_RDI[0x4e] = in_XMM15_Dc;\n    unaff_RDI[0x4f] = in_XMM15_Dd;\n    unaff_RDI[0x50] = in_XMM15_Da;\n    unaff_RDI[0x51] = in_XMM15_Db;\n    unaff_RDI[0x52] = in_XMM15_Dc;\n    unaff_RDI[0x53] = in_XMM15_Dd;\n    unaff_RDI[0x54] = in_XMM15_Da;\n    unaff_RDI[0x55] = in_XMM15_Db;\n    unaff_RDI[0x56] = in_XMM15_Dc;\n    unaff_RDI[0x57] = in_XMM15_Dd;\n    unaff_RDI[0x58] = in_XMM15_Da;\n    unaff_RDI[0x59] = in_XMM15_Db;\n    unaff_RDI[0x5a] = in_XMM15_Dc;\n    unaff_RDI[0x5b] = in_XMM15_Dd;\n    unaff_RDI[0x5c] = in_XMM15_Da;\n    unaff_RDI[0x5d] = in_XMM15_Db;\n    unaff_RDI[0x5e] = in_XMM15_Dc;\n    unaff_RDI[0x5f] = in_XMM15_Dd;\n    unaff_RDI[0x60] = in_XMM15_Da;\n    unaff_RDI[0x61] = in_XMM15_Db;\n    unaff_RDI[0x62] = in_XMM15_Dc;\n    unaff_RDI[99] = in_XMM15_Dd;\n    unaff_RDI[100] = in_XMM15_Da;\n    unaff_RDI[0x65] = in_XMM15_Db;\n    unaff_RDI[0x66] = in_XMM15_Dc;\n    unaff_RDI[0x67] = in_XMM15_Dd;\n    unaff_RDI[0x68] = in_XMM15_Da;\n    unaff_RDI[0x69] = in_XMM15_Db;\n    unaff_RDI[0x6a] = in_XMM15_Dc;\n    unaff_RDI[0x6b] = in_XMM15_Dd;\n    unaff_RDI[0x6c] = in_XMM15_Da;\n    unaff_RDI[0x6d] = in_XMM15_Db;\n    unaff_RDI[0x6e] = in_XMM15_Dc;\n    unaff_RDI[0x6f] = in_XMM15_Dd;\n    unaff_RDI[0x70] = in_XMM15_Da;\n    unaff_RDI[0x71] = in_XMM15_Db;\n    unaff_RDI[0x72] = in_XMM15_Dc;\n    unaff_RDI[0x73] = in_XMM15_Dd;\n    unaff_RDI[0x74] = in_XMM15_Da;\n    unaff_RDI[0x75] = in_XMM15_Db;\n    unaff_RDI[0x76] = in_XMM15_Dc;\n    unaff_RDI[0x77] = in_XMM15_Dd;\n    unaff_RDI[0x78] = in_XMM15_Da;\n    unaff_RDI[0x79] = in_XMM15_Db;\n    unaff_RDI[0x7a] = in_XMM15_Dc;\n    unaff_RDI[0x7b] = in_XMM15_Dd;\n    unaff_RDI[0x7c] = in_XMM15_Da;\n    unaff_RDI[0x7d] = in_XMM15_Db;\n    unaff_RDI[0x7e] = in_XMM15_Dc;\n    unaff_RDI[0x7f] = in_XMM15_Dd;\n    unaff_RDI[0x80] = in_XMM15_Da;\n    unaff_RDI[0x81] = in_XMM15_Db;\n    unaff_RDI[0x82] = in_XMM15_Dc;\n    unaff_RDI[0x83] = in_XMM15_Dd;\n    unaff_RDI[0x84] = in_XMM15_Da;\n    unaff_RDI[0x85] = in_XMM15_Db;\n    unaff_RDI[0x86] = in_XMM15_Dc;\n    unaff_RDI[0x87] = in_XMM15_Dd;\n    unaff_RDI[0x88] = in_XMM15_Da;\n    unaff_RDI[0x89] = in_XMM15_Db;\n    unaff_RDI[0x8a] = in_XMM15_Dc;\n    unaff_RDI[0x8b] = in_XMM15_Dd;\n    unaff_RDI[0x8c] = in_XMM15_Da;\n    unaff_RDI[0x8d] = in_XMM15_Db;\n    unaff_RDI[0x8e] = in_XMM15_Dc;\n    unaff_RDI[0x8f] = in_XMM15_Dd;\n    unaff_RDI[0x90] = in_XMM15_Da;\n    unaff_RDI[0x91] = in_XMM15_Db;\n    unaff_RDI[0x92] = in_XMM15_Dc;\n    unaff_RDI[0x93] = in_XMM15_Dd;\n    unaff_RDI[0x94] = in_XMM15_Da;\n    unaff_RDI[0x95] = in_XMM15_Db;\n    unaff_RDI[0x96] = in_XMM15_Dc;\n    unaff_RDI[0x97] = in_XMM15_Dd;\n    unaff_RDI[0x98] = in_XMM15_Da;\n    unaff_RDI[0x99] = in_XMM15_Db;\n    unaff_RDI[0x9a] = in_XMM15_Dc;\n    unaff_RDI[0x9b] = in_XMM15_Dd;\n    unaff_RDI[0x9c] = in_XMM15_Da;\n    unaff_RDI[0x9d] = in_XMM15_Db;\n    unaff_RDI[0x9e] = in_XMM15_Dc;\n    unaff_RDI[0x9f] = in_XMM15_Dd;\n    unaff_RDI[0xa0] = in_XMM15_Da;\n    unaff_RDI[0xa1] = in_XMM15_Db;\n    unaff_RDI[0xa2] = in_XMM15_Dc;\n    unaff_RDI[0xa3] = in_XMM15_Dd;\n    unaff_RDI[0xa4] = in_XMM15_Da;\n    unaff_RDI[0xa5] = in_XMM15_Db;\n    unaff_RDI[0xa6] = in_XMM15_Dc;\n    unaff_RDI[0xa7] = in_XMM15_Dd;\n    unaff_RDI[0xa8] = in_XMM15_Da;\n    unaff_RDI[0xa9] = in_XMM15_Db;\n    unaff_RDI[0xaa] = in_XMM15_Dc;\n    unaff_RDI[0xab] = in_XMM15_Dd;\n    unaff_RDI[0xac] = in_XMM15_Da;\n    unaff_RDI[0xad] = in_XMM15_Db;\n    unaff_RDI[0xae] = in_XMM15_Dc;\n    unaff_RDI[0xaf] = in_XMM15_Dd;\n    unaff_RDI[0xb0] = in_XMM15_Da;\n    unaff_RDI[0xb1] = in_XMM15_Db;\n    unaff_RDI[0xb2] = in_XMM15_Dc;\n    unaff_RDI[0xb3] = in_XMM15_Dd;\n    unaff_RDI[0xb4] = in_XMM15_Da;\n    unaff_RDI[0xb5] = in_XMM15_Db;\n    unaff_RDI[0xb6] = in_XMM15_Dc;\n    unaff_RDI[0xb7] = in_XMM15_Dd;\n    unaff_RDI[0xb8] = in_XMM15_Da;\n    unaff_RDI[0xb9] = in_XMM15_Db;\n    unaff_RDI[0xba] = in_XMM15_Dc;\n    unaff_RDI[0xbb] = in_XMM15_Dd;\n    unaff_RDI[0xbc] = in_XMM15_Da;\n    unaff_RDI[0xbd] = in_XMM15_Db;\n    unaff_RDI[0xbe] = in_XMM15_Dc;\n    unaff_RDI[0xbf] = in_XMM15_Dd;\n    unaff_RDI[0xc0] = in_XMM15_Da;\n    unaff_RDI[0xc1] = in_XMM15_Db;\n    unaff_RDI[0xc2] = in_XMM15_Dc;\n    unaff_RDI[0xc3] = in_XMM15_Dd;\n    unaff_RDI[0xc4] = in_XMM15_Da;\n    unaff_RDI[0xc5] = in_XMM15_Db;\n    unaff_RDI[0xc6] = in_XMM15_Dc;\n    unaff_RDI[199] = in_XMM15_Dd;\n    unaff_RDI[200] = in_XMM15_Da;\n    unaff_RDI[0xc9] = in_XMM15_Db;\n    unaff_RDI[0xca] = in_XMM15_Dc;\n    unaff_RDI[0xcb] = in_XMM15_Dd;\n    unaff_RDI[0xcc] = in_XMM15_Da;\n    unaff_RDI[0xcd] = in_XMM15_Db;\n    unaff_RDI[0xce] = in_XMM15_Dc;\n    unaff_RDI[0xcf] = in_XMM15_Dd;\n    unaff_RDI[0xd0] = in_XMM15_Da;\n    unaff_RDI[0xd1] = in_XMM15_Db;\n    unaff_RDI[0xd2] = in_XMM15_Dc;\n    unaff_RDI[0xd3] = in_XMM15_Dd;\n    unaff_RDI[0xd4] = in_XMM15_Da;\n    unaff_RDI[0xd5] = in_XMM15_Db;\n    unaff_RDI[0xd6] = in_XMM15_Dc;\n    unaff_RDI[0xd7] = in_XMM15_Dd;\n    unaff_RDI[0xd8] = in_XMM15_Da;\n    unaff_RDI[0xd9] = in_XMM15_Db;\n    unaff_RDI[0xda] = in_XMM15_Dc;\n    unaff_RDI[0xdb] = in_XMM15_Dd;\n    unaff_RDI[0xdc] = in_XMM15_Da;\n    unaff_RDI[0xdd] = in_XMM15_Db;\n    unaff_RDI[0xde] = in_XMM15_Dc;\n    unaff_RDI[0xdf] = in_XMM15_Dd;\n    unaff_RDI[0xe0] = in_XMM15_Da;\n    unaff_RDI[0xe1] = in_XMM15_Db;\n    unaff_RDI[0xe2] = in_XMM15_Dc;\n    unaff_RDI[0xe3] = in_XMM15_Dd;\n    unaff_RDI[0xe4] = in_XMM15_Da;\n    unaff_RDI[0xe5] = in_XMM15_Db;\n    unaff_RDI[0xe6] = in_XMM15_Dc;\n    unaff_RDI[0xe7] = in_XMM15_Dd;\n    unaff_RDI[0xe8] = in_XMM15_Da;\n    unaff_RDI[0xe9] = in_XMM15_Db;\n    unaff_RDI[0xea] = in_XMM15_Dc;\n    unaff_RDI[0xeb] = in_XMM15_Dd;\n    unaff_RDI[0xec] = in_XMM15_Da;\n    unaff_RDI[0xed] = in_XMM15_Db;\n    unaff_RDI[0xee] = in_XMM15_Dc;\n    unaff_RDI[0xef] = in_XMM15_Dd;\n    unaff_RDI[0xf0] = in_XMM15_Da;\n    unaff_RDI[0xf1] = in_XMM15_Db;\n    unaff_RDI[0xf2] = in_XMM15_Dc;\n    unaff_RDI[0xf3] = in_XMM15_Dd;\n    unaff_RDI[0xf4] = in_XMM15_Da;\n    unaff_RDI[0xf5] = in_XMM15_Db;\n    unaff_RDI[0xf6] = in_XMM15_Dc;\n    unaff_RDI[0xf7] = in_XMM15_Dd;\n    unaff_RDI[0xf8] = in_XMM15_Da;\n    unaff_RDI[0xf9] = in_XMM15_Db;\n    unaff_RDI[0xfa] = in_XMM15_Dc;\n    unaff_RDI[0xfb] = in_XMM15_Dd;\n    unaff_RDI[0xfc] = in_XMM15_Da;\n    unaff_RDI[0xfd] = in_XMM15_Db;\n    unaff_RDI[0xfe] = in_XMM15_Dc;\n    unaff_RDI[0xff] = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 4587
    },
    "0045e3ee": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045e3ee(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x20) = in_XMM15_Da;\n    *(unaff_RDI + 0x24) = in_XMM15_Db;\n    *(unaff_RDI + 0x28) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x140) = in_XMM15_Da;\n    *(unaff_RDI + 0x144) = in_XMM15_Db;\n    *(unaff_RDI + 0x148) = in_XMM15_Dc;\n    *(unaff_RDI + 0x14c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x150) = in_XMM15_Da;\n    *(unaff_RDI + 0x154) = in_XMM15_Db;\n    *(unaff_RDI + 0x158) = in_XMM15_Dc;\n    *(unaff_RDI + 0x15c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x160) = in_XMM15_Da;\n    *(unaff_RDI + 0x164) = in_XMM15_Db;\n    *(unaff_RDI + 0x168) = in_XMM15_Dc;\n    *(unaff_RDI + 0x16c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x170) = in_XMM15_Da;\n    *(unaff_RDI + 0x174) = in_XMM15_Db;\n    *(unaff_RDI + 0x178) = in_XMM15_Dc;\n    *(unaff_RDI + 0x17c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x180) = in_XMM15_Da;\n    *(unaff_RDI + 0x184) = in_XMM15_Db;\n    *(unaff_RDI + 0x188) = in_XMM15_Dc;\n    *(unaff_RDI + 0x18c) = in_XMM15_Dd;\n    *(unaff_RDI + 400) = in_XMM15_Da;\n    *(unaff_RDI + 0x194) = in_XMM15_Db;\n    *(unaff_RDI + 0x198) = in_XMM15_Dc;\n    *(unaff_RDI + 0x19c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1a0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1a4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1a8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ac) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1b0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1b4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1b8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1bc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1c0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1c4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1c8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1cc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1d0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1d4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1d8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1dc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1e0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1e4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1e8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ec) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1f0) = in_XMM15_Da;\n    *(unaff_RDI + 500) = in_XMM15_Db;\n    *(unaff_RDI + 0x1f8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1fc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x200) = in_XMM15_Da;\n    *(unaff_RDI + 0x204) = in_XMM15_Db;\n    *(unaff_RDI + 0x208) = in_XMM15_Dc;\n    *(unaff_RDI + 0x20c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x210) = in_XMM15_Da;\n    *(unaff_RDI + 0x214) = in_XMM15_Db;\n    *(unaff_RDI + 0x218) = in_XMM15_Dc;\n    *(unaff_RDI + 0x21c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x220) = in_XMM15_Da;\n    *(unaff_RDI + 0x224) = in_XMM15_Db;\n    *(unaff_RDI + 0x228) = in_XMM15_Dc;\n    *(unaff_RDI + 0x22c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x230) = in_XMM15_Da;\n    *(unaff_RDI + 0x234) = in_XMM15_Db;\n    *(unaff_RDI + 0x238) = in_XMM15_Dc;\n    *(unaff_RDI + 0x23c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x240) = in_XMM15_Da;\n    *(unaff_RDI + 0x244) = in_XMM15_Db;\n    *(unaff_RDI + 0x248) = in_XMM15_Dc;\n    *(unaff_RDI + 0x24c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x250) = in_XMM15_Da;\n    *(unaff_RDI + 0x254) = in_XMM15_Db;\n    *(unaff_RDI + 600) = in_XMM15_Dc;\n    *(unaff_RDI + 0x25c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x260) = in_XMM15_Da;\n    *(unaff_RDI + 0x264) = in_XMM15_Db;\n    *(unaff_RDI + 0x268) = in_XMM15_Dc;\n    *(unaff_RDI + 0x26c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x270) = in_XMM15_Da;\n    *(unaff_RDI + 0x274) = in_XMM15_Db;\n    *(unaff_RDI + 0x278) = in_XMM15_Dc;\n    *(unaff_RDI + 0x27c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x280) = in_XMM15_Da;\n    *(unaff_RDI + 0x284) = in_XMM15_Db;\n    *(unaff_RDI + 0x288) = in_XMM15_Dc;\n    *(unaff_RDI + 0x28c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x290) = in_XMM15_Da;\n    *(unaff_RDI + 0x294) = in_XMM15_Db;\n    *(unaff_RDI + 0x298) = in_XMM15_Dc;\n    *(unaff_RDI + 0x29c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2a0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2a4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2a8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2ac) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2b0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2b4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2b8) = in_XMM15_Dc;\n    *(unaff_RDI + 700) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2c0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2c4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2c8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2cc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2d0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2d4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2d8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2dc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2e0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2e4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2e8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2ec) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2f0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2f4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2f8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2fc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x300) = in_XMM15_Da;\n    *(unaff_RDI + 0x304) = in_XMM15_Db;\n    *(unaff_RDI + 0x308) = in_XMM15_Dc;\n    *(unaff_RDI + 0x30c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x310) = in_XMM15_Da;\n    *(unaff_RDI + 0x314) = in_XMM15_Db;\n    *(unaff_RDI + 0x318) = in_XMM15_Dc;\n    *(unaff_RDI + 0x31c) = in_XMM15_Dd;\n    *(unaff_RDI + 800) = in_XMM15_Da;\n    *(unaff_RDI + 0x324) = in_XMM15_Db;\n    *(unaff_RDI + 0x328) = in_XMM15_Dc;\n    *(unaff_RDI + 0x32c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x330) = in_XMM15_Da;\n    *(unaff_RDI + 0x334) = in_XMM15_Db;\n    *(unaff_RDI + 0x338) = in_XMM15_Dc;\n    *(unaff_RDI + 0x33c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 4102
    },
    "0045e438": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045e438(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x140) = in_XMM15_Da;\n    *(unaff_RDI + 0x144) = in_XMM15_Db;\n    *(unaff_RDI + 0x148) = in_XMM15_Dc;\n    *(unaff_RDI + 0x14c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x150) = in_XMM15_Da;\n    *(unaff_RDI + 0x154) = in_XMM15_Db;\n    *(unaff_RDI + 0x158) = in_XMM15_Dc;\n    *(unaff_RDI + 0x15c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x160) = in_XMM15_Da;\n    *(unaff_RDI + 0x164) = in_XMM15_Db;\n    *(unaff_RDI + 0x168) = in_XMM15_Dc;\n    *(unaff_RDI + 0x16c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x170) = in_XMM15_Da;\n    *(unaff_RDI + 0x174) = in_XMM15_Db;\n    *(unaff_RDI + 0x178) = in_XMM15_Dc;\n    *(unaff_RDI + 0x17c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x180) = in_XMM15_Da;\n    *(unaff_RDI + 0x184) = in_XMM15_Db;\n    *(unaff_RDI + 0x188) = in_XMM15_Dc;\n    *(unaff_RDI + 0x18c) = in_XMM15_Dd;\n    *(unaff_RDI + 400) = in_XMM15_Da;\n    *(unaff_RDI + 0x194) = in_XMM15_Db;\n    *(unaff_RDI + 0x198) = in_XMM15_Dc;\n    *(unaff_RDI + 0x19c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1a0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1a4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1a8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ac) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1b0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1b4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1b8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1bc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1c0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1c4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1c8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1cc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1d0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1d4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1d8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1dc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1e0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1e4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1e8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ec) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1f0) = in_XMM15_Da;\n    *(unaff_RDI + 500) = in_XMM15_Db;\n    *(unaff_RDI + 0x1f8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1fc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x200) = in_XMM15_Da;\n    *(unaff_RDI + 0x204) = in_XMM15_Db;\n    *(unaff_RDI + 0x208) = in_XMM15_Dc;\n    *(unaff_RDI + 0x20c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x210) = in_XMM15_Da;\n    *(unaff_RDI + 0x214) = in_XMM15_Db;\n    *(unaff_RDI + 0x218) = in_XMM15_Dc;\n    *(unaff_RDI + 0x21c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x220) = in_XMM15_Da;\n    *(unaff_RDI + 0x224) = in_XMM15_Db;\n    *(unaff_RDI + 0x228) = in_XMM15_Dc;\n    *(unaff_RDI + 0x22c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x230) = in_XMM15_Da;\n    *(unaff_RDI + 0x234) = in_XMM15_Db;\n    *(unaff_RDI + 0x238) = in_XMM15_Dc;\n    *(unaff_RDI + 0x23c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x240) = in_XMM15_Da;\n    *(unaff_RDI + 0x244) = in_XMM15_Db;\n    *(unaff_RDI + 0x248) = in_XMM15_Dc;\n    *(unaff_RDI + 0x24c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x250) = in_XMM15_Da;\n    *(unaff_RDI + 0x254) = in_XMM15_Db;\n    *(unaff_RDI + 600) = in_XMM15_Dc;\n    *(unaff_RDI + 0x25c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x260) = in_XMM15_Da;\n    *(unaff_RDI + 0x264) = in_XMM15_Db;\n    *(unaff_RDI + 0x268) = in_XMM15_Dc;\n    *(unaff_RDI + 0x26c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x270) = in_XMM15_Da;\n    *(unaff_RDI + 0x274) = in_XMM15_Db;\n    *(unaff_RDI + 0x278) = in_XMM15_Dc;\n    *(unaff_RDI + 0x27c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 3030
    },
    "0045e441": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045e441(void)\n\n{\n    uint *unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *unaff_RDI = in_XMM15_Da;\n    unaff_RDI[1] = in_XMM15_Db;\n    unaff_RDI[2] = in_XMM15_Dc;\n    unaff_RDI[3] = in_XMM15_Dd;\n    unaff_RDI[4] = in_XMM15_Da;\n    unaff_RDI[5] = in_XMM15_Db;\n    unaff_RDI[6] = in_XMM15_Dc;\n    unaff_RDI[7] = in_XMM15_Dd;\n    unaff_RDI[8] = in_XMM15_Da;\n    unaff_RDI[9] = in_XMM15_Db;\n    unaff_RDI[10] = in_XMM15_Dc;\n    unaff_RDI[0xb] = in_XMM15_Dd;\n    unaff_RDI[0xc] = in_XMM15_Da;\n    unaff_RDI[0xd] = in_XMM15_Db;\n    unaff_RDI[0xe] = in_XMM15_Dc;\n    unaff_RDI[0xf] = in_XMM15_Dd;\n    unaff_RDI[0x10] = in_XMM15_Da;\n    unaff_RDI[0x11] = in_XMM15_Db;\n    unaff_RDI[0x12] = in_XMM15_Dc;\n    unaff_RDI[0x13] = in_XMM15_Dd;\n    unaff_RDI[0x14] = in_XMM15_Da;\n    unaff_RDI[0x15] = in_XMM15_Db;\n    unaff_RDI[0x16] = in_XMM15_Dc;\n    unaff_RDI[0x17] = in_XMM15_Dd;\n    unaff_RDI[0x18] = in_XMM15_Da;\n    unaff_RDI[0x19] = in_XMM15_Db;\n    unaff_RDI[0x1a] = in_XMM15_Dc;\n    unaff_RDI[0x1b] = in_XMM15_Dd;\n    unaff_RDI[0x1c] = in_XMM15_Da;\n    unaff_RDI[0x1d] = in_XMM15_Db;\n    unaff_RDI[0x1e] = in_XMM15_Dc;\n    unaff_RDI[0x1f] = in_XMM15_Dd;\n    unaff_RDI[0x20] = in_XMM15_Da;\n    unaff_RDI[0x21] = in_XMM15_Db;\n    unaff_RDI[0x22] = in_XMM15_Dc;\n    unaff_RDI[0x23] = in_XMM15_Dd;\n    unaff_RDI[0x24] = in_XMM15_Da;\n    unaff_RDI[0x25] = in_XMM15_Db;\n    unaff_RDI[0x26] = in_XMM15_Dc;\n    unaff_RDI[0x27] = in_XMM15_Dd;\n    unaff_RDI[0x28] = in_XMM15_Da;\n    unaff_RDI[0x29] = in_XMM15_Db;\n    unaff_RDI[0x2a] = in_XMM15_Dc;\n    unaff_RDI[0x2b] = in_XMM15_Dd;\n    unaff_RDI[0x2c] = in_XMM15_Da;\n    unaff_RDI[0x2d] = in_XMM15_Db;\n    unaff_RDI[0x2e] = in_XMM15_Dc;\n    unaff_RDI[0x2f] = in_XMM15_Dd;\n    unaff_RDI[0x30] = in_XMM15_Da;\n    unaff_RDI[0x31] = in_XMM15_Db;\n    unaff_RDI[0x32] = in_XMM15_Dc;\n    unaff_RDI[0x33] = in_XMM15_Dd;\n    unaff_RDI[0x34] = in_XMM15_Da;\n    unaff_RDI[0x35] = in_XMM15_Db;\n    unaff_RDI[0x36] = in_XMM15_Dc;\n    unaff_RDI[0x37] = in_XMM15_Dd;\n    unaff_RDI[0x38] = in_XMM15_Da;\n    unaff_RDI[0x39] = in_XMM15_Db;\n    unaff_RDI[0x3a] = in_XMM15_Dc;\n    unaff_RDI[0x3b] = in_XMM15_Dd;\n    unaff_RDI[0x3c] = in_XMM15_Da;\n    unaff_RDI[0x3d] = in_XMM15_Db;\n    unaff_RDI[0x3e] = in_XMM15_Dc;\n    unaff_RDI[0x3f] = in_XMM15_Dd;\n    unaff_RDI[0x40] = in_XMM15_Da;\n    unaff_RDI[0x41] = in_XMM15_Db;\n    unaff_RDI[0x42] = in_XMM15_Dc;\n    unaff_RDI[0x43] = in_XMM15_Dd;\n    unaff_RDI[0x44] = in_XMM15_Da;\n    unaff_RDI[0x45] = in_XMM15_Db;\n    unaff_RDI[0x46] = in_XMM15_Dc;\n    unaff_RDI[0x47] = in_XMM15_Dd;\n    unaff_RDI[0x48] = in_XMM15_Da;\n    unaff_RDI[0x49] = in_XMM15_Db;\n    unaff_RDI[0x4a] = in_XMM15_Dc;\n    unaff_RDI[0x4b] = in_XMM15_Dd;\n    unaff_RDI[0x4c] = in_XMM15_Da;\n    unaff_RDI[0x4d] = in_XMM15_Db;\n    unaff_RDI[0x4e] = in_XMM15_Dc;\n    unaff_RDI[0x4f] = in_XMM15_Dd;\n    unaff_RDI[0x50] = in_XMM15_Da;\n    unaff_RDI[0x51] = in_XMM15_Db;\n    unaff_RDI[0x52] = in_XMM15_Dc;\n    unaff_RDI[0x53] = in_XMM15_Dd;\n    unaff_RDI[0x54] = in_XMM15_Da;\n    unaff_RDI[0x55] = in_XMM15_Db;\n    unaff_RDI[0x56] = in_XMM15_Dc;\n    unaff_RDI[0x57] = in_XMM15_Dd;\n    unaff_RDI[0x58] = in_XMM15_Da;\n    unaff_RDI[0x59] = in_XMM15_Db;\n    unaff_RDI[0x5a] = in_XMM15_Dc;\n    unaff_RDI[0x5b] = in_XMM15_Dd;\n    unaff_RDI[0x5c] = in_XMM15_Da;\n    unaff_RDI[0x5d] = in_XMM15_Db;\n    unaff_RDI[0x5e] = in_XMM15_Dc;\n    unaff_RDI[0x5f] = in_XMM15_Dd;\n    unaff_RDI[0x60] = in_XMM15_Da;\n    unaff_RDI[0x61] = in_XMM15_Db;\n    unaff_RDI[0x62] = in_XMM15_Dc;\n    unaff_RDI[99] = in_XMM15_Dd;\n    unaff_RDI[100] = in_XMM15_Da;\n    unaff_RDI[0x65] = in_XMM15_Db;\n    unaff_RDI[0x66] = in_XMM15_Dc;\n    unaff_RDI[0x67] = in_XMM15_Dd;\n    unaff_RDI[0x68] = in_XMM15_Da;\n    unaff_RDI[0x69] = in_XMM15_Db;\n    unaff_RDI[0x6a] = in_XMM15_Dc;\n    unaff_RDI[0x6b] = in_XMM15_Dd;\n    unaff_RDI[0x6c] = in_XMM15_Da;\n    unaff_RDI[0x6d] = in_XMM15_Db;\n    unaff_RDI[0x6e] = in_XMM15_Dc;\n    unaff_RDI[0x6f] = in_XMM15_Dd;\n    unaff_RDI[0x70] = in_XMM15_Da;\n    unaff_RDI[0x71] = in_XMM15_Db;\n    unaff_RDI[0x72] = in_XMM15_Dc;\n    unaff_RDI[0x73] = in_XMM15_Dd;\n    unaff_RDI[0x74] = in_XMM15_Da;\n    unaff_RDI[0x75] = in_XMM15_Db;\n    unaff_RDI[0x76] = in_XMM15_Dc;\n    unaff_RDI[0x77] = in_XMM15_Dd;\n    unaff_RDI[0x78] = in_XMM15_Da;\n    unaff_RDI[0x79] = in_XMM15_Db;\n    unaff_RDI[0x7a] = in_XMM15_Dc;\n    unaff_RDI[0x7b] = in_XMM15_Dd;\n    unaff_RDI[0x7c] = in_XMM15_Da;\n    unaff_RDI[0x7d] = in_XMM15_Db;\n    unaff_RDI[0x7e] = in_XMM15_Dc;\n    unaff_RDI[0x7f] = in_XMM15_Dd;\n    unaff_RDI[0x80] = in_XMM15_Da;\n    unaff_RDI[0x81] = in_XMM15_Db;\n    unaff_RDI[0x82] = in_XMM15_Dc;\n    unaff_RDI[0x83] = in_XMM15_Dd;\n    unaff_RDI[0x84] = in_XMM15_Da;\n    unaff_RDI[0x85] = in_XMM15_Db;\n    unaff_RDI[0x86] = in_XMM15_Dc;\n    unaff_RDI[0x87] = in_XMM15_Dd;\n    unaff_RDI[0x88] = in_XMM15_Da;\n    unaff_RDI[0x89] = in_XMM15_Db;\n    unaff_RDI[0x8a] = in_XMM15_Dc;\n    unaff_RDI[0x8b] = in_XMM15_Dd;\n    unaff_RDI[0x8c] = in_XMM15_Da;\n    unaff_RDI[0x8d] = in_XMM15_Db;\n    unaff_RDI[0x8e] = in_XMM15_Dc;\n    unaff_RDI[0x8f] = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 2631
    },
    "0045e458": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045e458(void)\n\n{\n    uint *unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *unaff_RDI = in_XMM15_Da;\n    unaff_RDI[1] = in_XMM15_Db;\n    unaff_RDI[2] = in_XMM15_Dc;\n    unaff_RDI[3] = in_XMM15_Dd;\n    unaff_RDI[4] = in_XMM15_Da;\n    unaff_RDI[5] = in_XMM15_Db;\n    unaff_RDI[6] = in_XMM15_Dc;\n    unaff_RDI[7] = in_XMM15_Dd;\n    unaff_RDI[8] = in_XMM15_Da;\n    unaff_RDI[9] = in_XMM15_Db;\n    unaff_RDI[10] = in_XMM15_Dc;\n    unaff_RDI[0xb] = in_XMM15_Dd;\n    unaff_RDI[0xc] = in_XMM15_Da;\n    unaff_RDI[0xd] = in_XMM15_Db;\n    unaff_RDI[0xe] = in_XMM15_Dc;\n    unaff_RDI[0xf] = in_XMM15_Dd;\n    unaff_RDI[0x10] = in_XMM15_Da;\n    unaff_RDI[0x11] = in_XMM15_Db;\n    unaff_RDI[0x12] = in_XMM15_Dc;\n    unaff_RDI[0x13] = in_XMM15_Dd;\n    unaff_RDI[0x14] = in_XMM15_Da;\n    unaff_RDI[0x15] = in_XMM15_Db;\n    unaff_RDI[0x16] = in_XMM15_Dc;\n    unaff_RDI[0x17] = in_XMM15_Dd;\n    unaff_RDI[0x18] = in_XMM15_Da;\n    unaff_RDI[0x19] = in_XMM15_Db;\n    unaff_RDI[0x1a] = in_XMM15_Dc;\n    unaff_RDI[0x1b] = in_XMM15_Dd;\n    unaff_RDI[0x1c] = in_XMM15_Da;\n    unaff_RDI[0x1d] = in_XMM15_Db;\n    unaff_RDI[0x1e] = in_XMM15_Dc;\n    unaff_RDI[0x1f] = in_XMM15_Dd;\n    unaff_RDI[0x20] = in_XMM15_Da;\n    unaff_RDI[0x21] = in_XMM15_Db;\n    unaff_RDI[0x22] = in_XMM15_Dc;\n    unaff_RDI[0x23] = in_XMM15_Dd;\n    unaff_RDI[0x24] = in_XMM15_Da;\n    unaff_RDI[0x25] = in_XMM15_Db;\n    unaff_RDI[0x26] = in_XMM15_Dc;\n    unaff_RDI[0x27] = in_XMM15_Dd;\n    unaff_RDI[0x28] = in_XMM15_Da;\n    unaff_RDI[0x29] = in_XMM15_Db;\n    unaff_RDI[0x2a] = in_XMM15_Dc;\n    unaff_RDI[0x2b] = in_XMM15_Dd;\n    unaff_RDI[0x2c] = in_XMM15_Da;\n    unaff_RDI[0x2d] = in_XMM15_Db;\n    unaff_RDI[0x2e] = in_XMM15_Dc;\n    unaff_RDI[0x2f] = in_XMM15_Dd;\n    unaff_RDI[0x30] = in_XMM15_Da;\n    unaff_RDI[0x31] = in_XMM15_Db;\n    unaff_RDI[0x32] = in_XMM15_Dc;\n    unaff_RDI[0x33] = in_XMM15_Dd;\n    unaff_RDI[0x34] = in_XMM15_Da;\n    unaff_RDI[0x35] = in_XMM15_Db;\n    unaff_RDI[0x36] = in_XMM15_Dc;\n    unaff_RDI[0x37] = in_XMM15_Dd;\n    unaff_RDI[0x38] = in_XMM15_Da;\n    unaff_RDI[0x39] = in_XMM15_Db;\n    unaff_RDI[0x3a] = in_XMM15_Dc;\n    unaff_RDI[0x3b] = in_XMM15_Dd;\n    unaff_RDI[0x3c] = in_XMM15_Da;\n    unaff_RDI[0x3d] = in_XMM15_Db;\n    unaff_RDI[0x3e] = in_XMM15_Dc;\n    unaff_RDI[0x3f] = in_XMM15_Dd;\n    unaff_RDI[0x40] = in_XMM15_Da;\n    unaff_RDI[0x41] = in_XMM15_Db;\n    unaff_RDI[0x42] = in_XMM15_Dc;\n    unaff_RDI[0x43] = in_XMM15_Dd;\n    unaff_RDI[0x44] = in_XMM15_Da;\n    unaff_RDI[0x45] = in_XMM15_Db;\n    unaff_RDI[0x46] = in_XMM15_Dc;\n    unaff_RDI[0x47] = in_XMM15_Dd;\n    unaff_RDI[0x48] = in_XMM15_Da;\n    unaff_RDI[0x49] = in_XMM15_Db;\n    unaff_RDI[0x4a] = in_XMM15_Dc;\n    unaff_RDI[0x4b] = in_XMM15_Dd;\n    unaff_RDI[0x4c] = in_XMM15_Da;\n    unaff_RDI[0x4d] = in_XMM15_Db;\n    unaff_RDI[0x4e] = in_XMM15_Dc;\n    unaff_RDI[0x4f] = in_XMM15_Dd;\n    unaff_RDI[0x50] = in_XMM15_Da;\n    unaff_RDI[0x51] = in_XMM15_Db;\n    unaff_RDI[0x52] = in_XMM15_Dc;\n    unaff_RDI[0x53] = in_XMM15_Dd;\n    unaff_RDI[0x54] = in_XMM15_Da;\n    unaff_RDI[0x55] = in_XMM15_Db;\n    unaff_RDI[0x56] = in_XMM15_Dc;\n    unaff_RDI[0x57] = in_XMM15_Dd;\n    unaff_RDI[0x58] = in_XMM15_Da;\n    unaff_RDI[0x59] = in_XMM15_Db;\n    unaff_RDI[0x5a] = in_XMM15_Dc;\n    unaff_RDI[0x5b] = in_XMM15_Dd;\n    unaff_RDI[0x5c] = in_XMM15_Da;\n    unaff_RDI[0x5d] = in_XMM15_Db;\n    unaff_RDI[0x5e] = in_XMM15_Dc;\n    unaff_RDI[0x5f] = in_XMM15_Dd;\n    unaff_RDI[0x60] = in_XMM15_Da;\n    unaff_RDI[0x61] = in_XMM15_Db;\n    unaff_RDI[0x62] = in_XMM15_Dc;\n    unaff_RDI[99] = in_XMM15_Dd;\n    unaff_RDI[100] = in_XMM15_Da;\n    unaff_RDI[0x65] = in_XMM15_Db;\n    unaff_RDI[0x66] = in_XMM15_Dc;\n    unaff_RDI[0x67] = in_XMM15_Dd;\n    unaff_RDI[0x68] = in_XMM15_Da;\n    unaff_RDI[0x69] = in_XMM15_Db;\n    unaff_RDI[0x6a] = in_XMM15_Dc;\n    unaff_RDI[0x6b] = in_XMM15_Dd;\n    unaff_RDI[0x6c] = in_XMM15_Da;\n    unaff_RDI[0x6d] = in_XMM15_Db;\n    unaff_RDI[0x6e] = in_XMM15_Dc;\n    unaff_RDI[0x6f] = in_XMM15_Dd;\n    unaff_RDI[0x70] = in_XMM15_Da;\n    unaff_RDI[0x71] = in_XMM15_Db;\n    unaff_RDI[0x72] = in_XMM15_Dc;\n    unaff_RDI[0x73] = in_XMM15_Dd;\n    unaff_RDI[0x74] = in_XMM15_Da;\n    unaff_RDI[0x75] = in_XMM15_Db;\n    unaff_RDI[0x76] = in_XMM15_Dc;\n    unaff_RDI[0x77] = in_XMM15_Dd;\n    unaff_RDI[0x78] = in_XMM15_Da;\n    unaff_RDI[0x79] = in_XMM15_Db;\n    unaff_RDI[0x7a] = in_XMM15_Dc;\n    unaff_RDI[0x7b] = in_XMM15_Dd;\n    unaff_RDI[0x7c] = in_XMM15_Da;\n    unaff_RDI[0x7d] = in_XMM15_Db;\n    unaff_RDI[0x7e] = in_XMM15_Dc;\n    unaff_RDI[0x7f] = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 2341
    },
    "0045e47d": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045e47d(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x140) = in_XMM15_Da;\n    *(unaff_RDI + 0x144) = in_XMM15_Db;\n    *(unaff_RDI + 0x148) = in_XMM15_Dc;\n    *(unaff_RDI + 0x14c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x150) = in_XMM15_Da;\n    *(unaff_RDI + 0x154) = in_XMM15_Db;\n    *(unaff_RDI + 0x158) = in_XMM15_Dc;\n    *(unaff_RDI + 0x15c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x160) = in_XMM15_Da;\n    *(unaff_RDI + 0x164) = in_XMM15_Db;\n    *(unaff_RDI + 0x168) = in_XMM15_Dc;\n    *(unaff_RDI + 0x16c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x170) = in_XMM15_Da;\n    *(unaff_RDI + 0x174) = in_XMM15_Db;\n    *(unaff_RDI + 0x178) = in_XMM15_Dc;\n    *(unaff_RDI + 0x17c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x180) = in_XMM15_Da;\n    *(unaff_RDI + 0x184) = in_XMM15_Db;\n    *(unaff_RDI + 0x188) = in_XMM15_Dc;\n    *(unaff_RDI + 0x18c) = in_XMM15_Dd;\n    *(unaff_RDI + 400) = in_XMM15_Da;\n    *(unaff_RDI + 0x194) = in_XMM15_Db;\n    *(unaff_RDI + 0x198) = in_XMM15_Dc;\n    *(unaff_RDI + 0x19c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1a0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1a4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1a8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ac) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1b0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1b4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1b8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1bc) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 2053
    },
    "0045e494": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045e494(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x140) = in_XMM15_Da;\n    *(unaff_RDI + 0x144) = in_XMM15_Db;\n    *(unaff_RDI + 0x148) = in_XMM15_Dc;\n    *(unaff_RDI + 0x14c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x150) = in_XMM15_Da;\n    *(unaff_RDI + 0x154) = in_XMM15_Db;\n    *(unaff_RDI + 0x158) = in_XMM15_Dc;\n    *(unaff_RDI + 0x15c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x160) = in_XMM15_Da;\n    *(unaff_RDI + 0x164) = in_XMM15_Db;\n    *(unaff_RDI + 0x168) = in_XMM15_Dc;\n    *(unaff_RDI + 0x16c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x170) = in_XMM15_Da;\n    *(unaff_RDI + 0x174) = in_XMM15_Db;\n    *(unaff_RDI + 0x178) = in_XMM15_Dc;\n    *(unaff_RDI + 0x17c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 1722
    },
    "0045e4ab": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045e4ab(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 1403
    },
    "0045e4b8": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045e4b8(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x10) = in_XMM15_Da;\n    *(unaff_RDI + 0x14) = in_XMM15_Db;\n    *(unaff_RDI + 0x18) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x20) = in_XMM15_Da;\n    *(unaff_RDI + 0x24) = in_XMM15_Db;\n    *(unaff_RDI + 0x28) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 1247
    },
    "0045e4d9": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045e4d9(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 777
    },
    "0045e4f0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045e4f0(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 461
    },
    "0046a5e0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0046a5e0(ulong arg1)\n\n{\n    uint64_t arg2;\n    uint32_t uVar1;\n    ulong in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    int64_t *arg1_00;\n    uint64_t arg1_01;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x50) = 0x46a605;\n            uVar2 = fcn.0046ca80(arg1);\n            if (unaff_RDI == 0) {\n                if (unaff_RBX != 0) {\n                    unaff_RDI = 0;\n                    goto code_r0x0046a619;\n                }\n            }\n            else {\n                uVar2 = 0;\ncode_r0x0046a619:\n                if (unaff_RDI != 0) {\n                    return 0;\n                }\n                *(*0x20 + -0x18) = uVar2;\n                unaff_RBX = 100;\n                while( true ) {\n                    *(*0x20 + -0x24) = unaff_RBX;\n                    *(*0x20 + -0x20) = unaff_RBX;\n                    *(*0x20 + -0x50) = 0x46a656;\n                    uVar3 = fcn.00447240(unaff_RBX);\n                    if (*(*0x20 + -0x20) == 0) break;\n                    *(*0x20 + -0x10) = uVar3;\n                    arg1_00 = *(*0x20 + -0x24);\n                    *(*0x20 + -0x50) = 0x46a67f;\n                    uVar1 = fcn.0046ee60(arg1_00);\n                    if ((((uVar1 == 0) && (uVar3 != 0)) && (*(uVar3 + 8) == 0x4a26e0)) && (*arg1_00 == 0xcb)) {\n                        return 0;\n                    }\n                    unaff_RDI = *(*0x20 + -0x24);\n                    if (uVar1 <= *(*0x20 + -0x24)) {\n                        arg1_01 = uVar1;\n                        arg2 = *(*0x20 + -0x20);\n                        if (arg1_01 <= arg2) {\n                            *(*0x20 + -0x50) = 0x46a6e8;\n                            fcn.00469580(arg2);\n                            *(*0x20 + -0x50) = 0x46a6f8;\n                            uVar2 = fcn.0044b660(arg1_01);\n                            return uVar2;\n                        }\n                        *(*0x20 + -0x50) = 0x46a70c;\n                        fcn.0045e2c0(arg1_01, arg2);\n                        unaff_RBX = uVar3;\n                        break;\n                    }\n                    unaff_RBX = uVar1;\n                }\n                *(*0x20 + -0x50) = 0x46a716;\n                fcn.0045e240(0);\n            }\n            arg1 = 0;\n            *(*0x20 + -0x50) = 0x46a725;\n            in_RAX = fcn.0045e240(0);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x46a735;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 977
    },
    "0046b4a0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0046b4a0(ulong arg1)\n\n{\n    uint64_t arg2;\n    uint32_t uVar1;\n    ulong in_RAX;\n    ulong uVar2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x50) = 0x46b4c5;\n            uVar2 = fcn.0046ca80(arg1);\n            if (unaff_RDI == 0) {\n                if (unaff_RBX != 0) {\n                    unaff_RDI = 0;\n                    goto code_r0x0046b4e0;\n                }\n            }\n            else {\n                uVar2 = 0;\ncode_r0x0046b4e0:\n                if (unaff_RDI != 0) {\n                    return 0;\n                }\n                *(*0x20 + -0x18) = uVar2;\n                unaff_RBX = 100;\n                while( true ) {\n                    *(*0x20 + -0x24) = unaff_RBX;\n                    *(*0x20 + -0x20) = unaff_RBX;\n                    *(*0x20 + -0x50) = 0x46b525;\n                    uVar2 = fcn.00447240(unaff_RBX);\n                    if (*(*0x20 + -0x20) == 0) break;\n                    *(*0x20 + -0x10) = uVar2;\n                    unaff_RBX = *(*0x20 + -0x24);\n                    unaff_RDI = 0;\n                    *(*0x20 + -0x50) = 0x46b547;\n                    uVar1 = fcn.0046f280(uVar2);\n                    if (unaff_RBX != 0) {\n                        return 0;\n                    }\n                    if (uVar1 <= *(*0x20 + -0x24)) {\n                        arg2 = *(*0x20 + -0x20);\n                        if (uVar1 <= arg2) {\n                            *(*0x20 + -0x50) = 0x46b575;\n                            uVar2 = fcn.0046cb80(arg2);\n                            return uVar2;\n                        }\n                        *(*0x20 + -0x50) = 0x46b59c;\n                        fcn.0045e2c0(uVar1, arg2);\n                        break;\n                    }\n                    unaff_RBX = uVar1;\n                }\n                *(*0x20 + -0x50) = 0x46b5a6;\n                fcn.0045e240(0);\n            }\n            arg1 = 0;\n            *(*0x20 + -0x50) = 0x46b5b0;\n            in_RAX = fcn.0045e240(0);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x46b5c5;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 858
    },
    "0046cc00": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0046cca9)\n// WARNING: Removing unreachable block (ram,0x0046ccd5)\n\nulong fcn.0046cc00(void)\n\n{\n    int32_t iVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x218 && *0x20 + -0x218 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x298;\n            *(*0x20 + -8) = unaff_RBP;\n            uVar3 = in_RAX - 0x20000000;\n            if (uVar3 < 0x83) {\n                return *(uVar3 * 0x10 + 0x7ab560);\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x260) = in_XMM15;\n            *(*0x20 + -0x2a8) = *0x20 + -8;\n            *(*0x20 + -0x2a0) = 0x46cc6f;\n            uVar2 = fcn.0045e438();\n            unaff_RBP = *(*0x20 + -0x2a8);\n            *(*0x20 + -0x2a0) = 0x46cc98;\n            uVar3 = fcn.0046e8a0(uVar2, uVar3, 300, 300);\n            do {\n                uVar4 = uVar3;\n                iVar1 = uVar4;\n                if (iVar1 == 0) break;\n                uVar3 = iVar1 - 1;\n                if (299 < uVar3) goto code_r0x0046cda5;\n            } while ((*(*0x20 + uVar3 * 2 + -0x260) == 10) || (*(*0x20 + uVar3 * 2 + -0x260) == 0xd));\n            uVar4 = uVar4 & 0xffffffff;\n            if (uVar4 < 0x12d) {\n                *(*0x20 + -0x2a0) = 0x46cd7b;\n                fcn.00469580(300);\n                *(*0x20 + -0x2a0) = 0x46cd8b;\n                uVar2 = fcn.0044b660(uVar4);\n                return uVar2;\n            }\n            *(*0x20 + -0x2a0) = 0x46cda5;\n            fcn.0045e2c0(uVar4, 300);\ncode_r0x0046cda5:\n            *(*0x20 + -0x2a0) = 0x46cdb1;\n            in_RAX = fcn.0045e240(300);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x46cdbc;\n        fcn.0045bb60();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 781
    },
    "0046dde0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0046dde0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = in_RAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = *0x7ad160;\n            *(*0x20 + -0x50) = 0x46de17;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x20);\n                *(*0x20 + -0x50) = 0x46de4c;\n                iVar2 = fcn.0045a7a0(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x7a6710;\n                    if ((iVar1 != 0) && (uVar3 = *0x7a6720,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x50) = 0x46de87;\n                        fcn.00409d60();\n                        uVar3 = 0x732cf8;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x50) = 0x46deb2;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x46dec5;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 569
    },
    "0046eba0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0046eba0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = in_RAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = *0x7ad2f8;\n            *(*0x20 + -0x50) = 0x46ebd7;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x20);\n                *(*0x20 + -0x50) = 0x46ec0c;\n                iVar2 = fcn.0045a7a0(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x7a6710;\n                    if ((iVar1 != 0) && (uVar3 = *0x7a6720,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x50) = 0x46ec47;\n                        fcn.00409d60();\n                        uVar3 = 0x732cf8;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x50) = 0x46ec72;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x46ec85;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 572
    },
    "0046ef80": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0046ef80(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uint unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + -0x20) = *0x7ad330;\n            *(*0x20 + -0x50) = 0x46efb8;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x50) = 0x46eff2;\n                iVar2 = fcn.0045a7a0(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x7a6710;\n                    if ((iVar1 != 0) && (uVar3 = *0x7a6720,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x50) = 0x46f02d;\n                        fcn.00409d60();\n                        uVar3 = 0x732cf8;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x50) = 0x46f058;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x46f06c;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 618
    },
    "0046f080": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0046f080(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = in_RAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = *0x7ad340;\n            *(*0x20 + -0x50) = 0x46f0b7;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x20);\n                *(*0x20 + -0x50) = 0x46f0ec;\n                iVar2 = fcn.0045a7a0(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x7a6710;\n                    if ((iVar1 != 0) && (uVar3 = *0x7a6720,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x50) = 0x46f127;\n                        fcn.00409d60();\n                        uVar3 = 0x732cf8;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x50) = 0x46f152;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x46f165;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 571
    },
    "0046f180": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0046f180(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x7ad348;\n            *(*0x20 + -0x50) = 0x46f1b2;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x50) = 0x46f1dc;\n                uVar2 = fcn.0045a7a0(iVar1);\n                if (((uVar2 == 0) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x20) = uVar2;\n                    *(*0x20 + -0x50) = 0x46f226;\n                    fcn.00409d60();\n                    uVar2 = *(*0x20 + -0x20);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x50) = 0x46f256;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x46f265;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 485
    },
    "0046f3c0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.0046f3c0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x7ad3a0;\n            *(*0x20 + -0x50) = 0x46f3f2;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x50) = 0x46f41c;\n                iVar2 = fcn.0045a7a0(iVar1);\n                if (((iVar2 == -1) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x20) = 0xffffffffffffffff;\n                    *(*0x20 + -0x50) = 0x46f466;\n                    fcn.00409d60();\n                    iVar2 = *(*0x20 + -0x20);\n                }\n                return iVar2;\n            }\n            *(*0x20 + -0x50) = 0x46f496;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x46f4a5;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 491
    },
    "0046f4c0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0046f4c0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uint unaff_EBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = *0x7ad3a8;\n            *(*0x20 + -0x50) = 0x46f4f3;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x50) = 0x46f525;\n                uVar2 = fcn.0045a7a0(iVar1);\n                if (((uVar2 == 0) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x20) = uVar2;\n                    *(*0x20 + -0x50) = 0x46f566;\n                    fcn.00409d60();\n                    uVar2 = *(*0x20 + -0x20);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x50) = 0x46f596;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + -8) = 0x46f5a5;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 547
    },
    "0046f5c0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0046f5c0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = *0x7ad3c0;\n            *(*0x20 + -0x50) = 0x46f5ef;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x50) = 0x46f619;\n                uVar2 = fcn.0045a7a0(iVar1);\n                if (((uVar2 == -1) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x20) = uVar2;\n                    *(*0x20 + -0x50) = 0x46f65b;\n                    fcn.00409d60();\n                    uVar2 = *(*0x20 + -0x20);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x50) = 0x46f68c;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x46f697;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 489
    },
    "0047d460": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0047d729)\n\nuchar fcn.0047d460(ulong arg1, ulong noname_1, ulong arg3, int64_t arg4)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    int64_t arg1_00;\n    int64_t unaff_RSI;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    int64_t iStack0000000000000028;\n    ulong uStack0000000000000030;\n    int64_t iStack0000000000000038;\n    uchar auStack64 [16];\n    int64_t iStack48;\n    ulong uStack40;\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    iStack0000000000000028 = unaff_RSI;\n    uStack0000000000000030 = arg3;\n    iStack0000000000000038 = arg4;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    ppcStack16 = NULL;\n    iVar5 = 0x20019;\n    uVar3 = fcn.00475800(arg1);\n    if (unaff_RBX != 0) {\n        return 0;\n    }\n    auStack64 = CONCAT88(uVar3, 0x47d840);\n    ppcStack16 = auStack64;\n    iVar4 = fcn.0046a3c0(*0x7acf80);\n    if (iVar4 == 0) {\n        iVar4 = 7;\n        iVar5 = fcn.00476000(7);\n        if (iVar4 == 0) {\n            iVar4 = 7;\n            iStack48 = iVar5;\n            uVar3 = fcn.00476000(7);\n            arg2 = 0x4af364;\n            iVar5 = iStack48;\n        }\n        else {\n            arg2 = 0;\n            uVar3 = 0;\n        }\n        arg1_00 = 0x4af36b;\n    }\n    else {\n        arg1_00 = 0;\n        arg2 = 0;\n        uVar3 = 0;\n    }\n    if (iVar4 != 0) {\n        iVar4 = fcn.00475ee0(3, arg2);\n        if (iVar5 != 0) {\n            auStack32 = CONCAT88(uVar3, iVar5);\n            (**ppcStack16)();\n            return 0;\n        }\n        iStack48 = iVar4;\n        uVar3 = fcn.00475ee0(3, arg2);\n        arg2 = 0x4aecf9;\n        arg1_00 = 0x4aed53;\n    }\n    if ((iStack0000000000000028 == arg1_00) &&\n       (iVar5 = arg2,  uStack40 = uVar3,  cVar1 = fcn.00402a00(arg1_00, arg2),  cVar1 != '\\0')) {\n        if (iStack0000000000000038 == arg2) {\n            uVar2 = fcn.00402a00(arg2, iVar5);\n            uVar2 = uVar2 ^ 1;\n        }\n        else {\n            uVar2 = 1;\n        }\n        if (uVar2 == 0) {\n            uVar2 = 0;\n        }\n        else if (iStack0000000000000038 == iStack0000000000000028) {\n            uVar2 = fcn.00402a00(iStack0000000000000038, iVar5);\n            uVar2 = uVar2 ^ 1;\n        }\n        else {\n            uVar2 = 1;\n        }\n        if (uVar2 == 0) {\n            (**ppcStack16)();\n            return 1;\n        }\n        (**ppcStack16)();\n        return 0;\n    }\n    (**ppcStack16)();\n    return 0;\n}\n",
        "token_count": 932
    },
    "0047f280": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0047f280(uchar param_1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = param_1;\n            *(*0x20 + -0x20) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = *0x7ace60;\n            *(*0x20 + -0x50) = 0x47f2b8;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x50) = 0x47f2f4;\n                iVar2 = fcn.0045a7a0(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x7a6570;\n                    if ((iVar1 != 0) && (uVar3 = *0x7a6580,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x50) = 0x47f32f;\n                        fcn.00409d60();\n                        uVar3 = 0x732cf8;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x50) = 0x47f35a;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        puVar4[0x18] = param_1;\n        *(puVar4 + -8) = 0x47f36e;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        param_1 = puVar4[0x18];\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 622
    },
    "00490fe0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00490fe0(void)\n\n{\n    int64_t in_RAX;\n    int64_t arg1;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    arg1 = *(in_RAX + 0x28);\n    if ((arg1 == 0) && (arg1 = fcn.004805a0(),  unaff_RDI != 0)) {\n        arg1 = fcn.0046a760();\n    }\n    fcn.004910c0(arg1);\n    fcn.004916a0(arg1);\n    return;\n}\n",
        "token_count": 179
    },
    "00493d80": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00493d80(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    ulong arg1_00;\n    int64_t arg1_01;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*(in_RAX + 0x140) == -1) {\n                arg1_01 = ((arg1 * 6 >> 0x3f) >> 0x3d) + arg1 * 6 >> 3;\n            }\n            else {\n                arg1_01 = (arg1 >> 2) * 3;\n            }\n            *(*0x20 + -0x38) = arg1_01;\n            *(*0x20 + -0x78) = 0x493df1;\n            uVar1 = fcn.00447240(arg1_01);\n            *(*0x20 + -0x10) = uVar1;\n            uVar1 = *(*0x20 + 0x10);\n            arg1_00 = *(*0x20 + 0x18);\n            *(*0x20 + -0x78) = 0x493e10;\n            fcn.0044b3c0(arg1_00);\n            unaff_RBX = *(*0x20 + -0x10);\n            *(*0x20 + -0x78) = 0x493e30;\n            arg1 = fcn.00493ea0(*(*0x20 + -0x38), arg1_01, uVar1, arg1_00);\n            if (arg1 <= *(*0x20 + -0x38)) {\n                return *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x78) = 0x493e5d;\n            in_RAX = fcn.0045e2c0(arg1, *(*0x20 + -0x38));\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x493e72;\n        fcn.0045bb60();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 710
    },
    "00403280": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint64_t fcn.00403280(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX == 0) {\n                return 1;\n            }\n            if (*(in_RAX + 0x18) != NULL) {\n                if ((*(in_RAX + 0x17) & 0x20) != 0) {\n                    return in_RAX & 0xffffffffffffff00 | unaff_RBX == arg1;\n                }\n                pcVar1 = **(in_RAX + 0x18);\n                *(*0x20 + -0x38) = 0x4032cc;\n                uVar2 = (*pcVar1)();\n                return uVar2;\n            }\n            *(*0x20 + -0x38) = 0x4032ea;\n            fcn.004569c0();\n            arg1 = 0x1c;\n            *(*0x20 + -0x38) = 0x403305;\n            fcn.0044ae80(0x1c);\n            *(*0x20 + -0x38) = 0x40330a;\n            unaff_RBX = fcn.00409de0();\n            *(*0x20 + -0x38) = 0x403319;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x40332e;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 568
    },
    "00403360": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint64_t fcn.00403360(int64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX == 0) {\n                return 1;\n            }\n            uVar2 = *(in_RAX + 8);\n            if (*(uVar2 + 0x18) != NULL) {\n                if ((*(uVar2 + 0x17) & 0x20) != 0) {\n                    return uVar2 & 0xffffffffffffff00 | unaff_RBX == arg1;\n                }\n                pcVar1 = **(uVar2 + 0x18);\n                *(*0x20 + -0x38) = 0x4033af;\n                uVar2 = (*pcVar1)();\n                return uVar2;\n            }\n            *(*0x20 + -0x38) = 0x4033cd;\n            fcn.004569c0();\n            arg1 = 0x1c;\n            *(*0x20 + -0x38) = 0x4033e6;\n            fcn.0044ae80(0x1c);\n            *(*0x20 + -0x38) = 0x4033eb;\n            unaff_RBX = fcn.00409de0();\n            *(*0x20 + -0x38) = 0x4033fa;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x40340f;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 584
    },
    "004035a0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "contain loop"
        ],
        "decompiled_code": "\nuint64_t fcn.004035a0(void)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    uint32_t uStack32;\n    \n    if (in_RAX == 0) {\n        fcn.00433c80();\n        pcVar3 = swi(3);\n        uVar4 = (*pcVar3)();\n        return uVar4;\n    }\n    iVar2 = *(unaff_R14 + 0x30);\n    *(iVar2 + 0x100) = *(iVar2 + 0x100) + 1;\n    *(iVar2 + 0x108) = *(iVar2 + 0x108) + 1;\n    **(iVar2 + 0x110) = 0;\n    fcn.004596c0();\n    while( true ) {\n        LOCK();\n        if (*(iVar2 + 0x330) == 0) break;\n        fcn.0045ba20();\n    }\n    *(iVar2 + 0x330) = 1;\n    *(iVar2 + 0xe8) = 1;\n    fcn.0045d980();\n    *(iVar2 + 0xe8) = 0;\n    *(iVar2 + 0x108) = *(iVar2 + 0x108) + -1;\n    uVar1 = *(iVar2 + 0x330);\n    *(iVar2 + 0x330) = 0;\n    fcn.00459700(iVar2, uVar1);\n    return uStack32;\n}\n",
        "token_count": 365
    },
    "00405260": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405260(ulong arg1)\n\n{\n    ulong *in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.004114e0(arg1);\n    fcn.0045ebc0(*in_RAX);\n    return;\n}\n",
        "token_count": 107
    },
    "004052e0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004052e0(ulong arg1)\n\n{\n    ulong *in_RAX;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.004114e0(*(unaff_RBX + 0x18));\n    fcn.0045ebc0(*in_RAX);\n    return;\n}\n",
        "token_count": 125
    },
    "004076c0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004076c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0044ae80(0xf);\n    return;\n}\n",
        "token_count": 85
    },
    "00409c60": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00409c60(void)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    uVar1 = fcn.0040bba0(1, *in_RAX);\n    fcn.00410240(unaff_RBX);\n    return uVar1;\n}\n",
        "token_count": 129
    },
    "00409ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00409ce0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    uVar1 = fcn.0040bba0(0, *in_RAX, param_3, param_4, unaff_RBX);\n    fcn.0045ebc0(*in_RAX);\n    return uVar1;\n}\n",
        "token_count": 163
    },
    "00410c20": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00410c20(uint64_t arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n        arg1 = arg1 & 0xffffffff;\n    }\n    fcn.00410b40(arg1);\n    return;\n}\n",
        "token_count": 99
    },
    "00412fe0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00412fe0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    iVar1 = fcn.004243c0(2, (in_RAX + 0x3fU >> 6) + 0x1fff >> 0xd);\n    fcn.00412960(*(iVar1 + 0x18));\n    return iVar1;\n}\n",
        "token_count": 148
    },
    "00418cc0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00418cc0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x38) = 0x418ce5;\n            fcn.00437220();\n            *(*0x20 + -0x38) = 0x418cf3;\n            fcn.0040a460();\n            *(*0x20 + -0x20) = *0x7d4060;\n            *(*0x20 + -0x10) = *0x7d4058;\n            *(*0x20 + -0x38) = 0x418d19;\n            fcn.0040a680();\n            iVar2 = *(*0x20 + -0x20);\n            iVar3 = *(*0x20 + -0x10);\n            iVar1 = 0;\n            while( true ) {\n                if (iVar2 <= iVar1) {\n                    *0x7adfe0 = 0;\n                    *0x7ae088 = *0x802388;\n                    return;\n                }\n                if (0x3f < *(iVar3 + iVar1 * 8) >> 0x14) break;\n                *(*0x20 + -0x18) = iVar1;\n                *(*0x20 + -0x38) = 0x418d59;\n                fcn.0045e8c0();\n                iVar1 = *(*0x20 + -0x18) + 1;\n                iVar2 = *(*0x20 + -0x20);\n                iVar3 = *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x38) = 0x418db8;\n            fcn.0045e260(0x40);\n        }\n        *(puVar4 + -8) = 0x418dbe;\n        fcn.004602a0();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 551
    },
    "0041af40": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.0041af40(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0040a460();\n    iVar2 = *0x7ae0a0;\n    iVar1 = *0x7ae098;\n    if (*0x8019e4 == 0) {\n        fcn.0040a680();\n        return 1;\n    }\n    *(unaff_R14 + 0xa0) = 0;\n    iVar3 = unaff_R14;\n    if (*0x7ae0a0 != 0) {\n        *(*0x7ae0a0 + 0xa0) = unaff_R14;\n        iVar3 = *0x7ae098;\n    }\n    *0x7ae098 = iVar3;\n    if (*0x8023d8 < 1) {\n        *0x7ae0a0 = unaff_R14;\n        fcn.004366e0(0xb);\n        return 1;\n    }\n    *0x7ae098 = iVar1;\n    *0x7ae0a0 = iVar2;\n    if (iVar2 != 0) {\n        *(iVar2 + 0xa0) = 0;\n    }\n    fcn.0040a680();\n    return 0;\n}\n",
        "token_count": 351
    },
    "00423ac0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00423ac0(ulong param_1, ulong param_2, ulong param_3)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00415c20(0x7196e0);\n    fcn.00415c20(0);\n    fcn.00415c20(0);\n    fcn.00415c20(0);\n    fcn.00415c20(0);\n    fcn.00415c20(0);\n    *(in_RAX + 0x16a78) = 0;\n    for (iVar1 = 0; iVar1 < 0x88; iVar1 = iVar1 + 1) {\n        *(in_RAX + 0x10438 + iVar1 * 0xc0) = iVar1;\n    }\n    fcn.00426840(0x8044f8, in_RAX + 0x10, param_3);\n    return;\n}\n",
        "token_count": 271
    },
    "004257c0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.004257c0(void)\n\n{\n    uchar (**ppauVar1) [16];\n    uchar (**in_RAX) [16];\n    uchar (*unaff_RBX) [16];\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            ppauVar1 = *unaff_RBX[1];\n            if (in_RAX == ppauVar1) {\n                if (*in_RAX == unaff_RBX) {\n                    *in_RAX = **unaff_RBX;\n                }\n                else {\n                    **(*unaff_RBX + 8) = **unaff_RBX;\n                }\n                if (in_RAX[1] == unaff_RBX) {\n                    in_RAX[1] = *(*unaff_RBX + 8);\n                }\n                else {\n                    *(**unaff_RBX + 8) = *(*unaff_RBX + 8);\n                }\n                *unaff_RBX = in_XMM15;\n                *unaff_RBX[1] = 0;\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = ppauVar1;\n            *(*0x20 + -0x18) = *unaff_RBX[2];\n            *(*0x20 + -0x20) = *(*unaff_RBX + 8);\n            *(*0x20 + -0x38) = 0x425857;\n            fcn.00435540();\n            *(*0x20 + -0x38) = 0x425868;\n            fcn.00435e40();\n            *(*0x20 + -0x38) = 0x425872;\n            fcn.00435b40();\n            *(*0x20 + -0x38) = 0x425885;\n            fcn.00435e40();\n            *(*0x20 + -0x38) = 0x42588f;\n            fcn.00435e00();\n            *(*0x20 + -0x38) = 0x4258a5;\n            fcn.00435e40();\n            *(*0x20 + -0x38) = 0x4258af;\n            fcn.00435e00();\n            *(*0x20 + -0x38) = 0x4258c5;\n            fcn.00435e40();\n            *(*0x20 + -0x38) = 0x4258cf;\n            fcn.00435e00();\n            *(*0x20 + -0x38) = 0x4258e5;\n            fcn.00435e40();\n            *(*0x20 + -0x38) = 0x4258ef;\n            fcn.00435e00();\n            *(*0x20 + -0x38) = 0x4258f4;\n            fcn.004357a0();\n            *(*0x20 + -0x38) = 0x4258f9;\n            fcn.004355c0();\n            unaff_RBX = 0x10;\n            *(*0x20 + -0x38) = 0x42590a;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x42591a;\n        fcn.0045bb60();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 940
    },
    "0042a620": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042a620(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00429ce0(arg1);\n    fcn.00429de0(arg1);\n    return;\n}\n",
        "token_count": 98
    },
    "00430aa0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00430aa0(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    iVar1 = *(unaff_R14 + 0x30);\n    fcn.0040a460();\n    if (*(iVar1 + 0x310) != 0) {\n        fcn.00430d80();\n        *(iVar1 + 0x310) = 0;\n    }\n    fcn.0040a680();\n    return;\n}\n",
        "token_count": 107
    },
    "004353c0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.004353c0(ulong arg1)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    uint64_t arg1_00;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t arg1_01;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x38) = 0x4353ec;\n            fcn.00435540();\n            if (*0x801a0c != 0) {\ncode_r0x00435409:\n                *(*0x20 + -0x38) = 0x43540e;\n                fcn.004355c0();\n                return;\n            }\n            arg1_00 = *(*0x20 + 0x10);\n            iVar3 = *(*0x20 + 0x18);\n            iVar5 = *(*0x20 + 8);\n            uVar1 = 0;\n            while( true ) {\n                if (arg1_00 <= uVar1) goto code_r0x00435409;\n                if (0x200 < *0x801b20) goto code_r0x004354f8;\n                iVar6 = *0x801b20 - 0x200;\n                if (arg1_00 < uVar1) break;\n                iVar2 = arg1_00 - uVar1;\n                arg1_01 = -iVar6;\n                if (-iVar2 != iVar6 && iVar2 <= -iVar6) {\n                    arg1_01 = iVar2;\n                }\n                unaff_RBX = iVar5 + (uVar1 - iVar3 >> 0x3f & uVar1);\n                if (unaff_RBX != (iVar6 >> 0x3f & *0x801b20) + 0x8024c0) {\n                    *(*0x20 + -0x10) = uVar1;\n                    *(*0x20 + -0x18) = arg1_01;\n                    *(*0x20 + -0x38) = 0x4354ce;\n                    fcn.0045ebc0(arg1_01);\n                    iVar3 = *(*0x20 + 0x18);\n                    iVar5 = *(*0x20 + 8);\n                    arg1_00 = *(*0x20 + 0x10);\n                    arg1_01 = *(*0x20 + -0x18);\n                    uVar1 = *(*0x20 + -0x10);\n                }\n                iVar6 = *0x801b20 + arg1_01;\n                *0x801b20 = iVar6 + (((iVar6 >> 0x3f) >> 0x37) + iVar6 >> 9) * -0x200;\n                uVar1 = arg1_01 + uVar1;\n            }\n            *(*0x20 + -0x38) = 0x4354f8;\n            fcn.0045e300(arg1_00);\ncode_r0x004354f8:\n            arg1 = 0x200;\n            *(*0x20 + -0x38) = 0x435505;\n            in_RAX = fcn.0045e300(0x200);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x43551a;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1007
    },
    "0043e560": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043e560(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0045ba20();\n    return;\n}\n",
        "token_count": 82
    },
    "0044d760": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.0044d760(void)\n\n{\n    int32_t iVar1;\n    uint64_t arg1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if ((in_RAX == 0) || (iVar1 = *(in_RAX + 4),  iVar1 == 0)) {\n                iVar3 = 0;\n                goto code_r0x0044d7a4;\n            }\n            arg1 = *(unaff_RBX + 0x10);\n            unaff_RBX = *(unaff_RBX + 8);\n            if (iVar1 < arg1) {\n                iVar3 = unaff_RBX + iVar1;\ncode_r0x0044d7a4:\n                *(*0x20 + -0x20) = iVar3;\n                *(*0x20 + -0x38) = 0x44d7b1;\n                uVar2 = fcn.0044c080();\n                *(*0x20 + -0x18) = *(*0x20 + -0x20);\n                *(*0x20 + -0x10) = uVar2;\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x38) = 0x44d7da;\n            in_RAX = fcn.0045e240(arg1);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x44d7ea;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 563
    },
    "0044d8a0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.0044d8a0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    uint64_t arg1_00;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (in_RAX == 0) {\n                iVar2 = 0;\n                goto code_r0x0044d8dd;\n            }\n            arg1_00 = *(unaff_RBX + 0x10);\n            unaff_RBX = *(unaff_RBX + 8);\n            if (arg1 < arg1_00) {\n                iVar2 = unaff_RBX + arg1;\ncode_r0x0044d8dd:\n                *(*0x20 + -0x20) = iVar2;\n                *(*0x20 + -0x38) = 0x44d8ea;\n                uVar1 = fcn.0044c080();\n                *(*0x20 + -0x18) = *(*0x20 + -0x20);\n                *(*0x20 + -0x10) = uVar1;\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x38) = 0x44d916;\n            in_RAX = fcn.0045e240(arg1_00);\n            arg1._0_4_ = arg1_00;\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x44d92a;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 593
    },
    "0044d940": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.0044d940(ulong arg1)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    uint64_t arg1_00;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (in_RAX == 0) {\n                return 0x4aebe4;\n            }\n            arg1_00 = *(unaff_RBX + 0x28);\n            uVar3 = arg1 + *(in_RAX + 0x20);\n            if (uVar3 < arg1_00) {\n                uVar1 = *(*(unaff_RBX + 0x20) + uVar3 * 4);\n                if (uVar1 == 0xffffffff) {\n                    return 0x4aebe4;\n                }\n                uVar3 = *(unaff_RBX + 0x40);\n                arg1_00 = *(unaff_RBX + 0x38);\n                if (uVar1 < uVar3) {\n                    *(*0x20 + -0x20) = uVar1 + arg1_00;\n                    *(*0x20 + -0x38) = 0x44d999;\n                    uVar2 = fcn.0044c080();\n                    *(*0x20 + -0x18) = *(*0x20 + -0x20);\n                    *(*0x20 + -0x10) = uVar2;\n                    return *(*0x20 + -0x18);\n                }\n                *(*0x20 + -0x38) = 0x44d9ee;\n                fcn.0045e240(uVar3);\n            }\n            *(*0x20 + -0x38) = 0x44d9f8;\n            in_RAX = fcn.0045e240(arg1_00);\n            arg1._0_4_ = arg1_00;\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x44da0c;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1._0_4_ = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 708
    },
    "0044f6e0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.0044f6e0(int64_t arg1)\n\n{\n    int32_t iVar1;\n    ulong *puVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    iVar3 = 0;\ncode_r0x0044f711:\n    if (arg1 <= iVar3) {\n        return;\n    }\n    puVar2 = *(unaff_RBX + iVar3 * 8);\ncode_r0x0044f7fa:\n    iVar1 = *(puVar2 + 8);\n    switch(iVar1) {\n    case 0:\n    case 5:\n        fcn.00450a20();\n        goto code_r0x0044f7fa;\n    case 1:\n        LOCK();\n        if (iVar1 == *(puVar2 + 8)) {\n            *(puVar2 + 8) = 9;\n            *puVar2 = 0;\n            fcn.0044e9e0();\n            LOCK();\n            if (*(puVar2 + 8) == 9) {\n                *(puVar2 + 8) = 1;\n            }\n            else {\n                fcn.00450a20();\n            }\n            goto code_r0x0044f70b;\n        }\n        goto code_r0x0044f7fa;\n    case 2:\n    case 4:\n    case 9:\n        fcn.00450a20();\n        goto code_r0x0044f7fa;\n    case 3:\n        LOCK();\n        if (iVar1 == *(puVar2 + 8)) {\n            *(puVar2 + 8) = 5;\n            *puVar2 = 0;\n            goto code_r0x0044f70b;\n        }\n        goto code_r0x0044f7fa;\n    case 6:\n        fcn.0045ba20();\n        goto code_r0x0044f7fa;\n    case 7:\n    case 8:\n        break;\n    default:\n        fcn.00450a20();\n        goto code_r0x0044f7fa;\n    }\n    LOCK();\n    if (iVar1 == *(puVar2 + 8)) goto code_r0x0044f894;\n    goto code_r0x0044f7fa;\ncode_r0x0044f894:\n    *(puVar2 + 8) = 9;\n    puVar2[1] = puVar2[7];\n    *puVar2 = 0;\n    fcn.0044e9e0();\n    LOCK();\n    if (*(puVar2 + 8) == 9) {\n        *(puVar2 + 8) = 1;\n    }\n    else {\n        fcn.00450a20();\n    }\ncode_r0x0044f70b:\n    iVar3 = iVar3 + 1;\n    goto code_r0x0044f711;\n}\n",
        "token_count": 688
    },
    "0044fc40": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.0044fc40(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    for (iVar3 = 0; iVar3 < arg1; iVar3 = iVar3 + 1) {\n        iVar2 = *(unaff_RBX + iVar3 * 8);\n        fcn.0044e9e0();\n        LOCK();\n        piVar1 = iVar2 + 0x40;\n        if (*piVar1 == 9) {\n            *piVar1 = 1;\n        }\n        else {\n            fcn.00450a20();\n        }\n    }\n    return;\n}\n",
        "token_count": 215
    },
    "004520a0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004520a0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    *(unaff_R14 + 0xe0) = *(*(unaff_R14 + 0x30) + 0xa0);\n    fcn.00450c80(0);\n    return;\n}\n",
        "token_count": 115
    },
    "00455000": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00455000(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00455100(arg1);\n    return;\n}\n",
        "token_count": 85
    },
    "00455060": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00455060(ulong arg1)\n\n{\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (*(*(unaff_RDI + 0x30) + 0x2b0) != 0) {\n        fcn.00455100(0);\n        return;\n    }\n    fcn.00455100(arg1);\n    return;\n}\n",
        "token_count": 136
    },
    "0045a640": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.0045a640(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    uchar auStackX8 [16];\n    int64_t iStackX24;\n    ulong uStackX32;\n    \n    iStackX24 = 0;\n    uStackX32 = 0;\n    piVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30) + 0x23c;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    *(*(iVar2 + 0x30) + 0x130) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar2 + 0x2c0) = *0x795210;\n    *(iVar2 + 0x2c8) = 2;\n    *(iVar2 + 0x2d0) = auStackX8;\n    fcn.004035a0(iVar2 + 0x2c0);\n    iStackX24 = *(iVar2 + 0x2d8);\n    if (iStackX24 == 0) {\n        uStackX32 = *(iVar2 + 0x2e8);\n    }\n    fcn.0043f3e0();\n    return;\n}\n",
        "token_count": 339
    },
    "0045abc0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045abc0(ulong arg1, ulong arg2)\n\n{\n    fcn.0045fdc0();\n    return;\n}\n",
        "token_count": 32
    },
    "0045f680": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "write file on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0045f680(void)\n\n{\n    (**0x7951f8)();\n    (**0x795140)();\n    fcn.0045dbc0();\n    return;\n}\n",
        "token_count": 41
    },
    "0045fa60": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045fa60(void)\n\n{\n    int32_t iStackX8;\n    uchar auStack48 [32];\n    int64_t iStack16;\n    uchar *puStack8;\n    \n    puStack8 = auStack48;\n    iStack16 = iStackX8;\n    (**0x7acff8)(0xffffffffffffffff, 0);\n    return;\n}\n",
        "token_count": 84
    },
    "0045fb40": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.0045fb40(void)\n\n{\n    (**0x795178)();\n    return;\n}\n",
        "token_count": 23
    },
    "0045fdc0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045fdc0(void)\n\n{\n    ulong uStackX24;\n    \n    fcn.004102e0(uStackX24);\n    return;\n}\n",
        "token_count": 37
    },
    "00465440": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.00465440(void)\n\n{\n    uint32_t in_EAX;\n    uint64_t uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (in_EAX < 0x80) {\n        if (in_EAX - 0x61 < 0x1a) {\n            in_EAX = in_EAX - 0x20;\n        }\n        return in_EAX;\n    }\n    uVar1 = fcn.00465340(*0x7a68f0);\n    return uVar1;\n}\n",
        "token_count": 169
    },
    "004654c0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.004654c0(void)\n\n{\n    uint32_t in_EAX;\n    uint64_t uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (in_EAX < 0x80) {\n        if (in_EAX - 0x41 < 0x1a) {\n            in_EAX = in_EAX + 0x20;\n        }\n        return in_EAX;\n    }\n    uVar1 = fcn.00465340(*0x7a68f0);\n    return uVar1;\n}\n",
        "token_count": 170
    },
    "004693e0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.004693e0(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t arg1_00;\n    uint32_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            iVar3 = unaff_RBX;\n            for (iVar2 = 0; iVar2 < unaff_RBX; iVar2 = iVar2 + 1) {\n                if (0xffff < *(in_RAX + iVar2 * 4)) {\n                    iVar3 = iVar3 + 1;\n                }\n            }\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x18) = iVar3;\n            *(*0x20 + -0x38) = 0x46943b;\n            iVar1 = fcn.00447240(iVar3);\n            iVar3 = *(*0x20 + 8);\n            iVar2 = *(*0x20 + -0x10);\n            arg1 = *(*0x20 + -0x18);\n            arg1_00 = 0;\n            for (unaff_RBX = 0; unaff_RBX < iVar2; unaff_RBX = unaff_RBX + 1) {\n                uVar5 = *(iVar3 + unaff_RBX * 4);\n                if ((uVar5 < 0xd800) || (uVar5 - 0xe000 < 0x2000)) {\n                    if (arg1 <= arg1_00) goto code_r0x0046953d;\n                    *(iVar1 + arg1_00 * 2) = uVar5;\n                    arg1_00 = arg1_00 + 1;\n                }\n                else {\n                    uVar5 = uVar5 - 0x10000;\n                    if (uVar5 < 0x100000) {\n                        if (arg1 <= arg1_00) goto code_r0x00469535;\n                        *(iVar1 + arg1_00 * 2) = (uVar5 >> 10 & 0x3ff) + 0xd800;\n                        if (arg1 <= arg1_00 + 1) goto code_r0x0046952d;\n                        *(iVar1 + 2 + arg1_00 * 2) = (uVar5 & 0x3ff) + 0xdc00;\n                        arg1_00 = arg1_00 + 2;\n                    }\n                    else {\n                        if (arg1 <= arg1_00) goto code_r0x00469525;\n                        *(iVar1 + arg1_00 * 2) = 0xfffd;\n                        arg1_00 = arg1_00 + 1;\n                    }\n                }\n            }\n            if (arg1_00 <= arg1) {\n                return;\n            }\n            *(*0x20 + -0x38) = 0x469525;\n            fcn.0045e2c0(arg1_00, arg1);\n            arg1 = arg1_00;\ncode_r0x00469525:\n            *(*0x20 + -0x38) = 0x46952d;\n            fcn.0045e240(arg1);\ncode_r0x0046952d:\n            *(*0x20 + -0x38) = 0x469535;\n            fcn.0045e240(arg1);\ncode_r0x00469535:\n            *(*0x20 + -0x38) = 0x46953d;\n            fcn.0045e240(arg1);\ncode_r0x0046953d:\n            *(*0x20 + -0x38) = 0x469545;\n            in_RAX = fcn.0045e240(arg1);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x46955a;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1108
    },
    "0046c9a0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.0046c9a0(ulong arg1)\n\n{\n    ulong uVar1;\n    ulong in_RDX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    int64_t iStack24;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00402ea0(arg1, in_RDX);\n    if (iStack24 != -1) {\n        return 0;\n    }\n    uVar1 = fcn.004470e0(unaff_RBX);\n    return uVar1;\n}\n",
        "token_count": 158
    },
    "0046d5a0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.0046d5a0(void)\n\n{\n    uint64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if ((in_RAX < 0x10) && (*(in_RAX * 0x10 + 0x7aa888) != 0)) {\n        return *(in_RAX * 0x10 + 0x7aa880);\n    }\n    fcn.00469700(in_RAX);\n    uVar1 = fcn.0044ae80(7);\n    return uVar1;\n}\n",
        "token_count": 174
    },
    "00480f60": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00480f60(void)\n\n{\n    code *pcVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x18) = in_XMM15;\n            if ((*0x7ad740 == 0) || (*0x7ad740 == 0x8019b7)) {\n                *(*0x20 + -0x18) = in_XMM15;\n            }\n            else {\n                *(*0x20 + -0x18) = *0x7ad740;\n                *(*0x20 + -0x10) = *0x7ad748;\n            }\n            if (*(*0x20 + -0x18) == 0) {\n                iVar2 = 0;\n                goto code_r0x00480fe0;\n            }\n            if (*(*0x20 + -0x18) == 0x49a120) {\n                iVar2 = **(*0x20 + -0x10);\ncode_r0x00480fe0:\n                if (iVar2 != 0) {\n                    pcVar1 = *(iVar2 + 0x20);\n                    *(*0x20 + -0x38) = 0x480ff4;\n                    (*pcVar1)(unaff_RBX);\n                }\n                return;\n            }\n            unaff_RBX = 0x49a120;\n            *(*0x20 + -0x38) = 0x481010;\n            in_RAX = fcn.00409aa0(0x49efc0);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x481025;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 588
    },
    "00481040": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00481040(void)\n\n{\n    code *pcVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x18) = in_XMM15;\n            if ((*0x7ad740 == 0) || (*0x7ad740 == 0x8019b7)) {\n                *(*0x20 + -0x18) = in_XMM15;\n            }\n            else {\n                *(*0x20 + -0x18) = *0x7ad740;\n                *(*0x20 + -0x10) = *0x7ad748;\n            }\n            if (*(*0x20 + -0x18) == 0) {\n                iVar2 = 0;\n                goto code_r0x004810c0;\n            }\n            if (*(*0x20 + -0x18) == 0x49a120) {\n                iVar2 = **(*0x20 + -0x10);\ncode_r0x004810c0:\n                if (iVar2 != 0) {\n                    pcVar1 = *(iVar2 + 0x28);\n                    *(*0x20 + -0x38) = 0x4810d4;\n                    (*pcVar1)(unaff_RBX);\n                }\n                return;\n            }\n            unaff_RBX = 0x49a120;\n            *(*0x20 + -0x38) = 0x4810f0;\n            in_RAX = fcn.00409aa0(0x49efc0);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x481105;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 590
    },
    "00481120": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00481120(void)\n\n{\n    code *pcVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x18) = in_XMM15;\n            if ((*0x7ad740 == 0) || (*0x7ad740 == 0x8019b7)) {\n                *(*0x20 + -0x18) = in_XMM15;\n            }\n            else {\n                *(*0x20 + -0x18) = *0x7ad740;\n                *(*0x20 + -0x10) = *0x7ad748;\n            }\n            if (*(*0x20 + -0x18) == 0) {\n                iVar2 = 0;\n                goto code_r0x004811a0;\n            }\n            if (*(*0x20 + -0x18) == 0x49a120) {\n                iVar2 = **(*0x20 + -0x10);\ncode_r0x004811a0:\n                if (iVar2 != 0) {\n                    pcVar1 = *(iVar2 + 0x30);\n                    *(*0x20 + -0x38) = 0x4811b4;\n                    (*pcVar1)(unaff_RBX);\n                }\n                return;\n            }\n            unaff_RBX = 0x49a120;\n            *(*0x20 + -0x38) = 0x4811d0;\n            in_RAX = fcn.00409aa0(0x49efc0);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x4811e5;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 592
    },
    "00485800": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nint64_t * fcn.00485800(ulong arg1)\n\n{\n    int64_t *piVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00481040();\n    piVar1 = fcn.00485fc0(arg1);\n    if (unaff_RBX != 0) {\n        return NULL;\n    }\n    *(*piVar1 + 0x240) = (arg1 >> 10 & 1) != 0;\n    return piVar1;\n}\n",
        "token_count": 166
    },
    "00485ae0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.00485ae0(uint64_t arg1)\n\n{\n    ulong uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.004867c0();\n    fcn.0046cf40(arg1 | 0x80000);\n    if (unaff_RBX != 0) {\n        return 0;\n    }\n    uVar1 = fcn.00485920(0);\n    return uVar1;\n}\n",
        "token_count": 154
    },
    "00486aa0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00486aa0(void)\n\n{\n    ulong in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00481120();\n    fcn.00486ba0(in_RAX);\n    return;\n}\n",
        "token_count": 99
    },
    "00486b20": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00486b20(void)\n\n{\n    ulong in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00481120();\n    fcn.00486ba0(in_RAX);\n    return;\n}\n",
        "token_count": 99
    },
    "0048f020": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuchar fcn.0048f020(int64_t arg1)\n\n{\n    uchar uVar1;\n    int64_t in_RAX;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (arg1 == in_RAX) {\n        uVar1 = fcn.00403280(unaff_RDI);\n    }\n    else {\n        uVar1 = 0;\n    }\n    fcn.0048efe0();\n    return uVar1;\n}\n",
        "token_count": 152
    },
    "004918e0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint64_t fcn.004918e0(ulong noname_0, ulong arg2, ulong arg3)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    iVar1 = fcn.00488d20(0x4aebdd, arg2, arg3, in_R9);\n    if (iVar1 < 0) {\n        return 0;\n    }\n    uVar2 = fcn.004893c0(0x4aecd8);\n    return uVar2 & 0xffffffffffffff00 | uVar2 < iVar1;\n}\n",
        "token_count": 191
    },
    "00413300": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.00413300(void)\n\n{\n    int64_t *piVar1;\n    uint8_t uVar2;\n    ulong arg1;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint8_t unaff_BL;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar8 = unaff_BL;\n            if (uVar8 < 0x88) {\n                iVar4 = *(in_RAX + 0x28 + uVar8 * 8);\n                if (*(iVar4 + 0x38) == *(iVar4 + 0x60)) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x10) = uVar8;\n                    if (iVar4 == 0x802140) {\ncode_r0x0041343a:\n                        *(*0x20 + -0x40) = 0x413452;\n                        iVar4 = fcn.00413aa0(uVar8 * 0xc0);\n                        if (iVar4 != 0) {\n                            if (*(iVar4 + 0x38) != *(iVar4 + 0x60)) {\n                                *(*0x20 + -0x18) = iVar4;\n                                *(iVar4 + 0x58) = *0x7d3db8 + 3;\n                                *(iVar4 + 0x66) = *(iVar4 + 0x60);\n                                arg1 = *(*(*0x20 + 8) + 8);\n                                *(*0x20 + -0x40) = 0x4134ab;\n                                fcn.0041e360(arg1);\n                                iVar4 = *(*0x20 + 8);\n                                *(iVar4 + 8) = 0;\n                                *(iVar4 + 0x28 + *(*0x20 + -0x10) * 8) = *(*0x20 + -0x18);\n                                return;\n                            }\n                            *(*0x20 + -0x40) = 0x4134e5;\n                            fcn.00433c80();\n                        }\n                        *(*0x20 + -0x40) = 0x4134f6;\n                        fcn.00433c80();\ncode_r0x004134f6:\n                        *(*0x20 + -0x40) = 0x413505;\n                        fcn.0045e240(0x44);\n                    }\n                    else if (*(iVar4 + 0x58) == *0x7d3db8 + 3) {\n                        *(*0x20 + 0x10) = unaff_BL;\n                        *(*0x20 + -0x18) = iVar4;\n                        *(*0x20 + -0x40) = 0x41339f;\n                        fcn.00413e00();\n                        *(*0x20 + -0x40) = 0x4133ab;\n                        iVar3 = fcn.0042cca0();\n                        iVar4 = *(*0x20 + -0x18);\n                        iVar5 = *(iVar4 + 0x60) - *(iVar4 + 0x66);\n                        uVar2 = *(*0x20 + 0x10);\n                        uVar8 = uVar2 >> 1;\n                        if (uVar8 < 0x44) {\n                            *(*0x20 + -0x20) = iVar5;\n                            piVar1 = iVar3 + uVar8 * 8 + 0x48;\n                            LOCK();\n                            iVar6 = *piVar1;\n                            *piVar1 = *piVar1 + iVar5;\n                            if (uVar2 == 5) {\n                                iVar6 = *(*0x20 + 8);\n                                LOCK();\n                                *(iVar3 + 0x30) = *(iVar3 + 0x30) + *(iVar6 + 0x20);\n                                *(iVar6 + 0x20) = 0;\n                            }\n                            *(*0x20 + -0x40) = 0x413410;\n                            fcn.0042cd80(iVar4, iVar6);\n                            LOCK();\n                            *0x802448 = *0x802448 + *(*0x20 + -0x20) * *(*(*0x20 + -0x18) + 0x68);\n                            *(*(*0x20 + -0x18) + 0x66) = 0;\n                            uVar8 = *(*0x20 + -0x10);\n                            goto code_r0x0041343a;\n                        }\n                        goto code_r0x004134f6;\n                    }\n                    *(*0x20 + -0x40) = 0x413516;\n                    fcn.00433c80();\n                }\n                unaff_BL = 0x28;\n                *(*0x20 + -0x40) = 0x413527;\n                fcn.00433c80();\n            }\n            *(*0x20 + -0x40) = 0x413534;\n            in_RAX = fcn.0045e240(0x88);\n        }\n        *(puVar7 + 8) = in_RAX;\n        puVar7[0x10] = unaff_BL;\n        *(puVar7 + -8) = 0x413545;\n        fcn.0045bb60();\n        in_RAX = *(puVar7 + 8);\n        unaff_BL = puVar7[0x10];\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1328
    },
    "00427660": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nint64_t fcn.00427660(ulong param_1, ulong param_2, uint64_t param_3, uchar *param_4)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    uchar *puVar2;\n    int64_t iVar3;\n    uint8_t uVar4;\n    uchar *puVar5;\n    uchar *arg1;\n    uchar *unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t uVar7;\n    uchar *puVar8;\n    uint64_t uVar9;\n    uchar *arg2;\n    uchar *in_R11;\n    uchar *puVar10;\n    uint64_t uVar11;\n    uint64_t unaff_R13;\n    int64_t unaff_R14;\n    uint64_t unaff_R15;\n    uchar in_XMM15 [16];\n    \n    while (puVar5 = *0x20 + -0x98,  puVar6 = *0x20,  puVar5 < *(unaff_R14 + 0x10) || puVar5 == *(unaff_R14 + 0x10)) {\ncode_r0x004281d9:\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x4281e8;\n        fcn.0045bb60();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    }\n    puVar6 = *0x20 + -0x118;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + -0x30) = *0x7953b8;\n    *(*0x20 + -0x28) = *0x7953a0;\n    *(*0x20 + -0x18) = in_XMM15;\n    *(*0x20 + -0x18) = 0x428200;\n    *(*0x20 + -0x10) = *0x20 + -0x30;\n    puVar2 = NULL;\n    uVar7 = 0;\n    puVar8 = NULL;\n    uVar9 = 0xffffffffffffffff;\ncode_r0x0042770e:\n    if (4 < puVar2) {\n        arg1 = uVar7 >> 0xd;\n        if (arg1 < 0x2000) {\n            *(*0x20 + -0x38) = uVar7;\n            uVar7 = (uVar7 & 0x1fff) << 7;\n            *(*0x20 + -0x120) = 0x42785f;\n            iVar3 = fcn.0042a320(0);\n            if (iVar3 != -1) {\n                *(*0x20 + -0x90) = iVar3;\n                *(*0x20 + -0x48) = *(*0x20 + -0x38) << 0x16;\n                *(*0x20 + -0x120) = 0x4278bd;\n                (**(*0x20 + -0x18))(*(*0x20 + -0x38) << 0x16, *0x20 + -0x18, 0xffff800000000000);\n                *(*0x20 + -0x120) = 0x4278d2;\n                fcn.00427580();\n                return *(*0x20 + -0x90) * 0x2000 + *(*0x20 + -0x48) + -0x800000000000;\n            }\n            uVar9 = *(*(*0x20 + 8) + 0x68);\n            arg1 = *(*(*0x20 + 8) + 0x60);\n            if (*(*0x20 + -0x38) < uVar9) {\n                uVar7 = *(arg1 + *(*0x20 + -0x38) * 8);\n                uVar9 = uVar7 & 0x1fffff;\n                if ((uVar7 & 0x8000000000000000) != 0) {\n                    uVar9 = 0x200000;\n                }\n                if (uVar7 < 0) {\n                    uVar11 = 0x200000;\n                }\n                else {\n                    uVar11 = uVar7 >> 0x15 & 0x1fffff;\n                }\n                *(*0x20 + -0xf8) = uVar11;\n                *(*0x20 + -0xf0) = uVar9;\n                if (-1 < uVar7) goto code_r0x00427a6d;\n                uVar7 = 0x200000;\n                do {\n                    *(*0x20 + -0x100) = uVar7;\n                    *(*0x20 + -0x120) = 0x42797f;\n                    fcn.00435540();\n                    *(*0x20 + -0x120) = 0x427990;\n                    fcn.00435e40();\n                    *(*0x20 + -0x120) = 0x42799a;\n                    fcn.00435c40();\n                    *(*0x20 + -0x120) = 0x4279ab;\n                    fcn.00435e40();\n                    *(*0x20 + -0x120) = 0x4279b8;\n                    fcn.00435c40();\n                    *(*0x20 + -0x120) = 0x4279c9;\n                    fcn.00435e40();\n                    *(*0x20 + -0x120) = 0x4279d3;\n                    fcn.00435b40();\n                    *(*0x20 + -0x120) = 0x4279e5;\n                    fcn.00435e40();\n                    *(*0x20 + -0x120) = 0x4279ef;\n                    fcn.00435b40();\n                    *(*0x20 + -0x120) = 0x427a05;\n                    fcn.00435e40();\n                    *(*0x20 + -0x120) = 0x427a0f;\n                    fcn.00435b40();\n                    *(*0x20 + -0x120) = 0x427a25;\n                    fcn.00435e40();\n                    *(*0x20 + -0x120) = 0x427a2a;\n                    fcn.004355c0();\n                    *(*0x20 + -0x120) = 0x427a2f;\n                    fcn.00435540();\n                    *(*0x20 + -0x120) = 0x427a45;\n                    fcn.00435e40();\n                    *(*0x20 + -0x120) = 0x427a52;\n                    fcn.00435b40();\n                    *(*0x20 + -0x120) = 0x427a57;\n                    fcn.004357a0();\n                    *(*0x20 + -0x120) = 0x427a5c;\n                    fcn.004355c0();\n                    *(*0x20 + -0x120) = 0x427a6d;\n                    fcn.00433c80();\ncode_r0x00427a6d:\n                    uVar7 = uVar7 >> 0x2a & 0x1fffff;\n                } while( true );\n            }\n            *(*0x20 + -0x120) = 0x427a98;\n            fcn.0045e240(uVar9);\n        }\n        *(*0x20 + -0x120) = 0x427aa5;\n        fcn.0045e260(0x2000);\n        goto code_r0x00427aa5;\n    }\n    param_3 = 0x7967c0;\n    uVar11 = *(puVar2 * 8 + 0x7967c0);\n    uVar1 = -(uVar11 < 0x40);\n    uVar4 = uVar11;\n    puVar10 = 1 << (uVar4 & 0x3f) & uVar1;\n    unaff_R13 = 0x796800;\n    unaff_R15 = *(puVar2 * 8 + 0x796800);\n    puVar5 = uVar7 << (uVar4 & 0x3f) & uVar1;\n    arg2 = *(in_RAX + 0x10 + puVar2 * 0x18);\n    param_4 = *(in_RAX + puVar2 * 0x18);\n    arg1 = puVar5 + puVar10;\n    in_R11 = puVar2;\n    if (arg1 <= arg2) {\n        if (puVar5 <= arg1) {\n            *(*0x20 + -0x70) = puVar5;\n            *(*0x20 + -0xa8) = uVar9;\n            *(*0x20 + -0xa0) = puVar8;\n            uVar7 = 0x796840;\n            uVar9 = *(puVar2 * 8 + 0x796840);\n            param_4 = param_4 + (*(*0x20 + -0x70) << 3 & puVar5 - arg2 >> 0x3f);\n            uVar9 = *(in_RAX + 0x10078) + 0x800000000000U >> (uVar9 & 0x3f) & -(uVar9 < 0x40);\n            param_3 = *(*0x20 + -0x70);\n            if ((-puVar10 & uVar9) == param_3) {\n                puVar5 = puVar10 + -1 & uVar9;\n            }\n            else {\n                puVar5 = NULL;\n            }\n            *(*0x20 + -0x38) = puVar2;\n            *(*0x20 + -0x40) = puVar10;\n            *(*0x20 + -0xb0) = unaff_R15;\n            *(*0x20 + -0x20) = param_4;\n            *(*0x20 + -0x98) = puVar5;\n            unaff_R13 = 0;\n            arg1 = puVar10;\n            arg2 = NULL;\n            do {\n                if (arg1 <= puVar5) {\ncode_r0x00427d20:\n                    if (unaff_RBX <= arg2) {\n                        *(*0x20 + -0x68) = unaff_R13;\n                        *(*0x20 + -0x58) = *(uVar7 + in_R11 * 8);\n                        *(*0x20 + -0x120) = 0x427ff0;\n                        fcn.00427580();\n                        return (-(*(*0x20 + -0x58) < 0x40) & *(*0x20 + -0x70) << (*(*0x20 + -0x58) & 0x3f)) +\n                               *(*0x20 + -0x68) * 0x2000 + -0x800000000000;\n                    }\n                    if (in_R11 == NULL) {\n                        return 0;\n                    }\n                    uVar7 = *(*0x20 + -0xa0);\n                    uVar9 = uVar7 & 0x1fffff;\n                    unaff_R13 = 0x200000;\n                    if ((uVar7 & 0x8000000000000000) != 0) {\n                        uVar9 = 0x200000;\n                    }\n                    if (uVar7 < 0) {\n                        unaff_R15 = 0x200000;\n                    }\n                    else {\n                        unaff_R15 = uVar7 >> 0x15 & 0x1fffff;\n                    }\n                    *(*0x20 + -200) = unaff_R15;\n                    *(*0x20 + -0xc0) = uVar9;\n                    if (uVar7 < 0) {\n                        arg2 = 0x200000;\n                    }\n                    else {\n                        arg2 = uVar7 >> 0x2a & 0x1fffff;\n                    }\n                    *(*0x20 + -0xd0) = arg2;\n                    *(*0x20 + -0x120) = 0x427db2;\n                    fcn.00435540();\n                    *(*0x20 + -0x120) = 0x427dc5;\n                    fcn.00435e40();\n                    *(*0x20 + -0x120) = 0x427dd9;\n                    fcn.00435c40(*(*0x20 + -0x38) + -1);\n                    *(*0x20 + -0x120) = 0x427dea;\n                    fcn.00435e40();\n                    *(*0x20 + -0x120) = 0x427df4;\n                    fcn.00435c40();\n                    *(*0x20 + -0x120) = 0x427e05;\n                    fcn.00435e40();\n                    *(*0x20 + -0x120) = 0x427e0f;\n                    fcn.00435b40();\n                    *(*0x20 + -0x120) = 0x427e25;\n                    fcn.00435e40();\n                    *(*0x20 + -0x120) = 0x427e2f;\n                    fcn.00435b40();\n                    *(*0x20 + -0x120) = 0x427e45;\n                    fcn.00435e40();\n                    *(*0x20 + -0x120) = 0x427e4f;\n                    fcn.00435b40();\n                    *(*0x20 + -0x120) = 0x427e54;\n                    fcn.004357a0();\n                    *(*0x20 + -0x120) = 0x427e59;\n                    fcn.004355c0();\n                    *(*0x20 + -0x120) = 0x427e5e;\n                    fcn.00435540();\n                    *(*0x20 + -0x120) = 0x427e6f;\n                    fcn.00435e40();\n                    *(*0x20 + -0x120) = 0x427e7c;\n                    fcn.00435c40();\n                    *(*0x20 + -0x120) = 0x427e8d;\n                    fcn.00435e40();\n                    *(*0x20 + -0x120) = 0x427e9a;\n                    fcn.00435b40();\n                    *(*0x20 + -0x120) = 0x427eab;\n                    fcn.00435e40();\n                    *(*0x20 + -0x120) = 0x427eb8;\n                    fcn.00435c40();\n                    *(*0x20 + -0x120) = 0x427ebd;\n                    fcn.004357a0();\n                    *(*0x20 + -0x120) = 0x427ec5;\n                    fcn.004355c0();\n                    *(*0x20 + -0x48) = *(*(*0x20 + 8) + 0x10078);\n                    *(*0x20 + -0x120) = 0x427ee5;\n                    fcn.00435540();\n                    *(*0x20 + -0x120) = 0x427ef6;\n                    fcn.00435e40();\n                    *(*0x20 + -0x120) = 0x427f05;\n                    fcn.00435ca0();\n                    *(*0x20 + -0x120) = 0x427f16;\n                    fcn.00435e40();\n                    *(*0x20 + -0x120) = 0x427f25;\n                    fcn.00435c40();\n                    *(*0x20 + -0x120) = 0x427f2a;\n                    fcn.004357a0();\n                    *(*0x20 + -0x120) = 0x427f2f;\n                    fcn.004355c0();\n                    *(*0x20 + -0x58) = *(*(*0x20 + -0x38) * 8 + 0x796840);\n                    arg1 = *(*(*0x20 + -0x38) * 8 + 0x7967c0);\n                    *(*0x20 + -0x60) = arg1;\n                    *(*0x20 + -0x120) = 0x427f65;\n                    fcn.00435540();\n                    *(*0x20 + -0x120) = 0x427f76;\n                    fcn.00435e40();\n                    *(*0x20 + -0x120) = 0x427f85;\n                    fcn.00435b40();\n                    *(*0x20 + -0x120) = 0x427f96;\n                    fcn.00435e40();\n                    *(*0x20 + -0x120) = 0x427fa5;\n                    fcn.00435b40();\n                    *(*0x20 + -0x120) = 0x427faa;\n                    fcn.004357a0();\n                    *(*0x20 + -0x120) = 0x427faf;\n                    fcn.004355c0();\n                    iVar3 = 0;\n                    while (iVar3 < *(*0x20 + -0x40)) {\n                        uVar7 = *(*(*0x20 + -0x20) + iVar3 * 8);\n                        uVar9 = uVar7 & 0x1fffff;\n                        param_3 = 0x200000;\n                        if ((uVar7 & 0x8000000000000000) != 0) {\n                            uVar9 = 0x200000;\n                        }\n                        if (uVar7 < 0) {\n                            param_4 = 0x200000;\n                        }\n                        else {\n                            param_4 = uVar7 >> 0x15 & 0x1fffff;\n                            arg2 = param_4;\n                        }\n                        *(*0x20 + -0x88) = iVar3;\n                        *(*0x20 + -0xe0) = param_4;\n                        *(*0x20 + -0xd8) = uVar9;\n                        if (uVar7 < 0) {\n                            uVar7 = 0x200000;\n                        }\n                        else {\n                            uVar7 = uVar7 >> 0x2a & 0x1fffff;\n                        }\n                        *(*0x20 + -0xe8) = uVar7;\n                        *(*0x20 + -0x120) = 0x42804b;\n                        fcn.00435540();\n                        *(*0x20 + -0x120) = 0x42805c;\n                        fcn.00435e40();\n                        *(*0x20 + -0x120) = 0x428069;\n                        fcn.00435c40();\n                        *(*0x20 + -0x120) = 0x42807a;\n                        fcn.00435e40();\n                        arg1 = *(*0x20 + -0x88) + *(*0x20 + -0x70);\n                        *(*0x20 + -0x120) = 0x428096;\n                        fcn.00435c40();\n                        *(*0x20 + -0x120) = 0x4280a7;\n                        fcn.00435e40();\n                        *(*0x20 + -0x120) = 0x4280b1;\n                        fcn.00435b40();\n                        *(*0x20 + -0x120) = 0x4280c5;\n                        fcn.00435e40();\n                        *(*0x20 + -0x120) = 0x4280cf;\n                        fcn.00435b40();\n                        *(*0x20 + -0x120) = 0x4280e5;\n                        fcn.00435e40();\n                        *(*0x20 + -0x120) = 0x4280ef;\n                        fcn.00435b40();\n                        *(*0x20 + -0x120) = 0x428105;\n                        fcn.00435e40();\n                        *(*0x20 + -0x120) = 0x42810a;\n                        fcn.004355c0();\n                        iVar3 = *(*0x20 + -0x88) + 1;\n                    }\n                    unaff_RBX = 0x10;\n                    *(*0x20 + -0x120) = 0x4281bd;\n                    fcn.00433c80();\ncode_r0x004281bd:\n                    *(*0x20 + -0x120) = 0x4281c8;\n                    fcn.0045e240(arg1);\n                    break;\n                }\n                if (arg1 <= puVar5) goto code_r0x004281bd;\n                iVar3 = *(param_4 + puVar5 * 8);\n                if (iVar3 == 0) {\n                    puVar8 = NULL;\n                    goto code_r0x00427aa5;\n                }\n                *(*0x20 + -0x80) = puVar5;\n                *(*0x20 + -0x50) = iVar3;\n                *(*0x20 + -0x68) = unaff_R13;\n                *(*0x20 + -0xb8) = arg2;\n                uVar7 = *(uVar7 + in_R11 * 8);\n                *(*0x20 + -0x78) = puVar5 + param_3;\n                unaff_R13 = puVar5 + param_3 << (uVar7 & 0x3f) & -(uVar7 < 0x40);\n                *(*0x20 + -0x120) = 0x427b4e;\n                (**(*0x20 + -0x18))(uVar7, *0x20 + -0x18, 1 << (unaff_R15 & 0x3f), unaff_R13 - 0x800000000000);\n                puVar8 = *(*0x20 + -0x50);\n                uVar7 = puVar8 & 0x1fffff;\n                param_3 = 0x8000000000000000;\n                param_4 = 0x200000;\n                if ((puVar8 & 0x8000000000000000) != 0) {\n                    uVar7 = 0x200000;\n                }\n                iVar3 = *(*0x20 + -0xb8);\n                arg2 = iVar3 + uVar7;\n                unaff_RBX = *(*0x20 + 0x10);\n                if (unaff_RBX <= arg2) {\n                    unaff_R13 = *(*0x20 + -0x68);\n                    if (iVar3 == 0) {\n                        unaff_R13 = *(*0x20 + -0x80) << (*(*0x20 + -0xb0) & 0x3f) & -(*(*0x20 + -0xb0) < 0x40);\n                    }\n                    uVar7 = 0x796840;\n                    param_3 = *(*0x20 + -0x70);\n                    param_4 = *(*0x20 + -0x20);\n                    in_R11 = *(*0x20 + -0x38);\n                    goto code_r0x00427d20;\n                }\n                if (puVar8 < 0) {\n                    puVar2 = 0x200000;\n                    in_R11 = arg2;\n                }\n                else {\n                    puVar2 = puVar8 >> 0x15 & 0x1fffff;\n                    in_R11 = puVar8;\n                }\n                if (unaff_RBX <= puVar2) goto code_r0x004276f0;\n                if (iVar3 == 0) {\n                    uVar9 = *(*0x20 + -0xb0);\n                }\n                else {\n                    uVar9 = *(*0x20 + -0xb0);\n                    uVar11 = 1 << (uVar9 & 0x3f) & -(uVar9 < 0x40);\n                    if (uVar11 <= uVar7) {\n                        puVar8 = iVar3 + uVar11;\n                        arg1 = *(*0x20 + -0x40);\n                        uVar7 = 0x796840;\n                        param_3 = *(*0x20 + -0x70);\n                        param_4 = *(*0x20 + -0x20);\n                        in_R11 = *(*0x20 + -0x38);\n                        puVar5 = *(*0x20 + -0x80);\n                        unaff_R15 = *(*0x20 + -0xb0);\n                        unaff_R13 = *(*0x20 + -0x68);\n                        goto code_r0x00427aa5;\n                    }\n                }\n                if (puVar8 < 0) {\n                    puVar8 = 0x200000;\n                }\n                else {\n                    puVar8 = puVar8 >> 0x2a & 0x1fffff;\n                }\n                puVar5 = *(*0x20 + -0x80);\n                unaff_R13 = (-(uVar9 < 0x40) & puVar5 + 1 << (uVar9 & 0x3f)) - puVar8;\n                arg1 = *(*0x20 + -0x40);\n                param_3 = *(*0x20 + -0x70);\n                param_4 = *(*0x20 + -0x20);\n                in_R11 = *(*0x20 + -0x38);\n                unaff_R15 = *(*0x20 + -0xb0);\n                uVar7 = 0x796840;\ncode_r0x00427aa5:\n                puVar5 = puVar5 + 1;\n                arg2 = puVar8;\n            } while( true );\n        }\n        *(*0x20 + -0x120) = 0x4281d0;\n        fcn.0045e300(arg1);\n    }\n    *(*0x20 + -0x120) = 0x4281d8;\n    in_RAX = fcn.0045e2c0(arg1, arg2);\n    goto code_r0x004281d9;\ncode_r0x004276f0:\n    puVar2 = *(*0x20 + -0x38) + 1;\n    in_RAX = *(*0x20 + 8);\n    uVar7 = *(*0x20 + -0x78);\n    uVar9 = uVar7;\n    goto code_r0x0042770e;\n}\n",
        "token_count": 5951
    },
    "00428d40": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.00428d40(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    ulong uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t arg2;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uint64_t arg1_00;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x00428d40:\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x20 && *0x20 + -0x20 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0xa0;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + 0x10) = unaff_RBX;\n        if (((unaff_RBX & 0x3fffff) == 0) && ((arg1 & 0x3fffff) == 0)) {\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = in_XMM15;\n            *(*0x20 + -0x30) = 0x429260;\n            *(*0x20 + -0x28) = in_RAX;\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = 0x4291e0;\n            *(*0x20 + -0x18) = vtable.Ld_M_f.0;\n            *(*0x20 + -0x10) = *0x20 + -0x30;\n            *(*0x20 + -0xa8) = 0x428e0a;\n            uVar3 = fcn.0042bec0(vtable.Ld_M_f.0, in_RAX + 0x10090);\n            *(*0x20 + -0x58) = uVar3;\n            iVar9 = 0;\n            do {\n                if (4 < iVar9) {\n                    *(*0x20 + -0xa8) = 0x4290fa;\n                    iVar9 = fcn.004292e0(*(*0x20 + 0x18));\n                    *(*(*0x20 + 8) + 0x10118) = *(*(*0x20 + 8) + 0x10118) + iVar9;\n                    return;\n                }\n                *(*0x20 + -0x60) = iVar9;\n                uVar3 = *(*0x20 + 0x18);\n                *(*0x20 + -0xa8) = 0x428e45;\n                arg1 = fcn.0042bca0();\n                *(*0x20 + -0xa8) = 0x428e6a;\n                iVar4 = (*_vtable.Ld_M_f.0)(uVar3, vtable.Ld_M_f.0);\n                iVar9 = *(*0x20 + -0x60);\n                iVar8 = *(*0x20 + 8);\n                arg2 = *(iVar8 + 0x10 + iVar9 * 0x18);\n                if (*(iVar8 + 8 + iVar9 * 0x18) < arg1) {\n                    if (arg2 < arg1) goto code_r0x0042913a;\n                    *(iVar8 + 8 + iVar9 * 0x18) = arg1;\n                }\n                iVar1 = *(iVar8 + iVar9 * 0x18);\n                if (*(iVar8 + 8 + iVar9 * 0x18) == 0) goto code_r0x00429130;\n                iVar4 = iVar1 + (iVar4 << 3 & -*0x801b18);\n                uVar7 = iVar1 + ((*0x801b18 + arg1 * 8) - 1 & -*0x801b18);\n                uVar5 = *(*0x20 + -0x58);\n                if (0 < uVar5) {\n                    uVar2 = *(iVar8 + 0x10090);\n                    arg1_00 = *(iVar8 + 0x10098);\n                    arg2 = uVar2;\n                    if (arg1_00 <= uVar5 - 1) goto code_r0x00429125;\n                    *(*0x20 + -0x78) = iVar4;\n                    *(*0x20 + -0x80) = uVar7;\n                    iVar9 = (uVar5 - 1) * 0x10;\n                    arg2 = *(iVar9 + uVar2);\n                    uVar3 = *(iVar9 + 8 + uVar2);\n                    *(*0x20 + -0xa8) = 0x428f26;\n                    uVar3 = (**(*0x20 + -0x20))(uVar3, *0x20 + -0x20);\n                    arg1 = *(*0x20 + -0x80);\n                    *(*0x20 + -0xa8) = 0x428f3b;\n                    iVar4 = fcn.0042bd20(uVar3);\n                    iVar9 = *(*0x20 + -0x60);\n                    iVar8 = *(*0x20 + 8);\n                    uVar5 = *(*0x20 + -0x58);\n                    uVar7 = arg1;\n                }\n                arg1_00 = *(iVar8 + 0x10090);\n                uVar2 = *(iVar8 + 0x10098);\n                if (uVar5 < uVar2) {\n                    if (uVar2 <= uVar5) goto code_r0x00429119;\n                    *(*0x20 + -0x70) = uVar7;\n                    *(*0x20 + -0x68) = iVar4;\n                    uVar3 = *(uVar5 * 0x10 + 8 + arg1_00);\n                    *(*0x20 + -0xa8) = 0x428f9b;\n                    uVar3 = (**(*0x20 + -0x20))(uVar3, *0x20 + -0x20);\n                    uVar7 = *(*0x20 + -0x70);\n                    *(*0x20 + -0xa8) = 0x428fb0;\n                    iVar4 = fcn.0042bd20(uVar3);\n                    iVar9 = *(*0x20 + -0x60);\n                }\n                if (iVar4 + 0x800000000000U < uVar7 + 0x800000000000) {\n                    iVar8 = uVar7 - iVar4;\n                }\n                else {\n                    iVar8 = 0;\n                }\n                if (iVar8 != 0) {\n                    *(*0x20 + -0x38) = iVar4 + 0x800000000000U;\n                    *(*0x20 + -0x40) = uVar7 + 0x800000000000;\n                    *(*0x20 + -0x48) = uVar7;\n                    *(*0x20 + -0x50) = iVar4;\n                    *(*0x20 + -0xa8) = 0x429028;\n                    fcn.0042cbe0();\n                    if (*(*0x20 + -0x38) < *(*0x20 + -0x40)) {\n                        iVar9 = *(*0x20 + -0x48) - *(*0x20 + -0x50);\n                    }\n                    else {\n                        iVar9 = 0;\n                    }\n                    LOCK();\n                    *0x802458 = *0x802458 + iVar9;\n                    *(*0x20 + -0xa8) = 0x42907b;\n                    fcn.00414880();\n                    if (*(*0x20 + -0x38) < *(*0x20 + -0x40)) {\n                        iVar9 = *(*0x20 + -0x48) - *(*0x20 + -0x50);\n                    }\n                    else {\n                        iVar9 = 0;\n                    }\n                    *(*(*0x20 + 8) + 0x10118) = *(*(*0x20 + 8) + 0x10118) + iVar9;\n                    iVar9 = *(*0x20 + -0x60);\n                }\n                iVar9 = iVar9 + 1;\n            } while( true );\n        }\n        goto code_r0x00429145;\n    }\n    goto code_r0x004291a6;\ncode_r0x00429119:\n    *(*0x20 + -0xa8) = 0x429125;\n    fcn.0045e240(uVar2);\ncode_r0x00429125:\n    *(*0x20 + -0xa8) = 0x429130;\n    fcn.0045e240(arg1_00);\ncode_r0x00429130:\n    *(*0x20 + -0xa8) = 0x42913a;\n    fcn.0045e240(0);\ncode_r0x0042913a:\n    *(*0x20 + -0xa8) = 0x429145;\n    fcn.0045e2c0(arg1, arg2);\ncode_r0x00429145:\n    *(*0x20 + -0xa8) = 0x42914a;\n    fcn.00435540();\n    *(*0x20 + -0xa8) = 0x42915b;\n    fcn.00435e40();\n    *(*0x20 + -0xa8) = 0x429168;\n    fcn.00435ca0();\n    *(*0x20 + -0xa8) = 0x429179;\n    fcn.00435e40();\n    *(*0x20 + -0xa8) = 0x429186;\n    fcn.00435ca0();\n    *(*0x20 + -0xa8) = 0x42918b;\n    fcn.004357a0();\n    *(*0x20 + -0xa8) = 0x429190;\n    fcn.004355c0();\n    unaff_RBX = 0x2e;\n    *(*0x20 + -0xa8) = 0x4291a5;\n    in_RAX = fcn.00433c80();\ncode_r0x004291a6:\n    *(puVar6 + 8) = in_RAX;\n    *(puVar6 + 0x10) = unaff_RBX;\n    *(puVar6 + 0x18) = arg1;\n    *(puVar6 + -8) = 0x4291ba;\n    fcn.0045bb60();\n    in_RAX = *(puVar6 + 8);\n    unaff_RBX = *(puVar6 + 0x10);\n    arg1 = *(puVar6 + 0x18);\n    *0x20 = puVar6;\n    goto code_r0x00428d40;\n}\n",
        "token_count": 2500
    },
    "00437be0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.00437be0(void)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    *0x8019dc = 1;\n    for (iVar2 = 0; iVar2 < 5; iVar2 = iVar2 + 1) {\n        *0x7ae5e4 = 0x7fffffff;\n        *0x7ae5e0 = 1;\n        cVar1 = fcn.004410e0();\n        if (cVar1 == '\\0') break;\n        fcn.00431140();\n    }\n    fcn.00431140();\n    fcn.004410e0();\n    fcn.00431140();\n    return;\n}\n",
        "token_count": 211
    },
    "004020e0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint32_t fcn.004020e0(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    \n    uVar1 = (in_RAX & 0x5555555555555555) + (in_RAX >> 1 & 0x5555555555555555);\n    uVar1 = (uVar1 >> 2 & 0x3333333333333333) + (uVar1 & 0x3333333333333333);\n    uVar1 = (uVar1 >> 4) + uVar1 & 0xf0f0f0f0f0f0f0f;\n    uVar1 = uVar1 + (uVar1 >> 8);\n    iVar2 = (uVar1 >> 0x10) + uVar1;\n    return (iVar2 >> 0x20) + iVar2 & 0x7f;\n}\n",
        "token_count": 210
    },
    "00408e40": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint64_t fcn.00408e40(uint64_t arg1)\n\n{\n    uchar auVar1 [16];\n    uchar auVar2 [16];\n    uchar auVar3 [16];\n    uint64_t *in_RAX;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    \n    uVar5 = unaff_RBX ^ *0x801c80 ^ 0xa0761d6478bd642f;\n    if (arg1 == 0) {\n        return uVar5;\n    }\n    if (arg1 < 4) {\n        uVar4 = CONCAT12(*(in_RAX + (arg1 - 1)), CONCAT11(*(in_RAX + (arg1 >> 1)), *in_RAX));\n        uVar6 = 0;\n    }\n    else if (arg1 == 4) {\n        uVar4 = *in_RAX;\n        uVar6 = *in_RAX;\n    }\n    else if (arg1 < 8) {\n        uVar4 = *in_RAX;\n        uVar6 = *(in_RAX + (arg1 - 4));\n    }\n    else if (arg1 == 8) {\n        uVar4 = *in_RAX;\n        uVar6 = uVar4;\n    }\n    else if (arg1 < 0x11) {\n        uVar4 = *in_RAX;\n        uVar6 = *(in_RAX + (arg1 - 8));\n    }\n    else {\n        uVar6 = arg1;\n        uVar4 = uVar5;\n        uVar7 = uVar5;\n        if (0x30 < arg1) {\n            for (; 0x30 < uVar6; uVar6 = uVar6 - 0x30) {\n                auVar1 = ZEXT816(in_RAX[1] ^ uVar5) * ZEXT816(*in_RAX ^ 0xe7037ed1a0b428db);\n                auVar2 = ZEXT816(in_RAX[3] ^ uVar4) * ZEXT816(in_RAX[2] ^ 0x8ebc6af09c88c6e3);\n                auVar3 = ZEXT816(in_RAX[5] ^ uVar7) * ZEXT816(in_RAX[4] ^ 0x589965cc75374cc3);\n                uVar5 = SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n                in_RAX = in_RAX + 6;\n                uVar4 = SUB168(auVar2, 0) ^ SUB168(auVar2 >> 0x40, 0);\n                uVar7 = SUB168(auVar3, 0) ^ SUB168(auVar3 >> 0x40, 0);\n            }\n            uVar5 = uVar5 ^ uVar4 ^ uVar7;\n        }\n        for (; 0x10 < uVar6; uVar6 = uVar6 - 0x10) {\n            auVar1 = ZEXT816(in_RAX[1] ^ uVar5) * ZEXT816(*in_RAX ^ 0xe7037ed1a0b428db);\n            uVar5 = SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n            in_RAX = in_RAX + 2;\n        }\n        uVar4 = *(in_RAX + (uVar6 - 0x10));\n        uVar6 = *(in_RAX + (uVar6 - 8));\n    }\n    auVar1 = ZEXT816(uVar6 ^ uVar5) * ZEXT816(uVar4 ^ 0xe7037ed1a0b428db);\n    auVar1 = ZEXT816(SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0)) * ZEXT816(arg1 ^ 0x1d8e4e27c47d124f);\n    return SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n}\n",
        "token_count": 941
    },
    "004137c0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.004137c0(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    ulong uVar6;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x004137c0:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x60;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x10) = *(in_RAX + 8);\n        *(in_RAX + 8) = 0;\n        *(*0x20 + -0x44) = *0x7d3db8;\n        iVar2 = 0;\n        uVar6 = 0;\n        do {\n            *(*0x20 + -0x28) = uVar6;\n            if (0x87 < iVar2) {\n                *(in_RAX + 0x10) = in_XMM15;\n                *(*0x20 + -0x68) = 0x41394c;\n                iVar3 = fcn.0042cca0();\n                iVar2 = *(*0x20 + 8);\n                LOCK();\n                piVar1 = iVar3 + 0x30;\n                iVar3 = *piVar1;\n                *piVar1 = *piVar1 + *(iVar2 + 0x20);\n                *(iVar2 + 0x20) = 0;\n                *(*0x20 + -0x68) = 0x41396f;\n                fcn.0042cd80(iVar2, iVar3);\n                *(*0x20 + -0x68) = 0x413985;\n                fcn.0041e360(*(*0x20 + -0x10));\n                return;\n            }\n            iVar3 = *(in_RAX + 0x28 + iVar2 * 8);\n            if (iVar3 != 0x802140) {\n                *(*0x20 + -0x30) = iVar2;\n                *(*0x20 + -0x38) = iVar3;\n                *(*0x20 + -0x18) = *(iVar3 + 0x60);\n                *(*0x20 + -0x20) = *(iVar3 + 0x66);\n                *(iVar3 + 0x66) = 0;\n                *(*0x20 + -0x68) = 0x413853;\n                iVar2 = fcn.0042cca0();\n                uVar4 = *(*0x20 + -0x30) >> 1 & 0x7f;\n                if (0x43 < uVar4) goto code_r0x0041398f;\n                *(*0x20 + -0x40) = *(*0x20 + -0x18) - *(*0x20 + -0x20);\n                piVar1 = iVar2 + uVar4 * 8 + 0x48;\n                LOCK();\n                iVar2 = *piVar1;\n                *piVar1 = *piVar1 + (*(*0x20 + -0x18) - *(*0x20 + -0x20));\n                *(*0x20 + -0x68) = 0x413895;\n                fcn.0042cd80(iVar2);\n                iVar2 = *(*0x20 + -0x38);\n                LOCK();\n                *0x802448 = *0x802448 + *(iVar2 + 0x68) * *(*0x20 + -0x40);\n                if (*(iVar2 + 0x58) == *(*0x20 + -0x44) + 1) {\n                    iVar2 = *(*0x20 + -0x28);\n                }\n                else {\n                    iVar2 = *(*0x20 + -0x28) - *(iVar2 + 0x68) * (*(iVar2 + 0x38) - *(iVar2 + 0x60));\n                }\n                *(*0x20 + -0x28) = iVar2;\n                *(*0x20 + -0x68) = 0x413905;\n                fcn.00413e00(*(*0x20 + -0x30), *(*0x20 + -0x30) * 0xc0);\n                iVar2 = *(*0x20 + -0x30);\n                in_RAX = *(*0x20 + 8);\n                *(in_RAX + 0x28 + iVar2 * 8) = 0x802140;\n                uVar6 = *(*0x20 + -0x28);\n            }\n            iVar2 = iVar2 + 1;\n        } while( true );\n    }\n    goto code_r0x0041399d;\ncode_r0x0041398f:\n    *(*0x20 + -0x68) = 0x41399c;\n    in_RAX = fcn.0045e240(0x44);\ncode_r0x0041399d:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + -8) = 0x4139a7;\n    fcn.0045bb60();\n    in_RAX = *(puVar5 + 8);\n    *0x20 = puVar5;\n    goto code_r0x004137c0;\n}\n",
        "token_count": 1258
    },
    "00413f00": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.00413f00(void)\n\n{\n    uint8_t *in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = *in_RAX >> 1;\n            if (uVar1 < 0x44) {\n                *(*0x20 + -0x10) = *(uVar1 + 0x7973e0);\n                *(*0x20 + -0x18) = *(uVar1 * 2 + 0x7985a0);\n                *(*0x20 + -0x48) = 0x413f5b;\n                iVar2 = fcn.00424280();\n                if (iVar2 == 0) {\n                    return 0;\n                }\n                *(iVar2 + 0x70) =\n                     *(*0x20 + -0x18) * (*(*0x20 + -0x10) * 0x2000 * *(iVar2 + 0x5c) >> 0x20) + *(iVar2 + 0x18);\n                uVar1 = *(iVar2 + 0x18) + 0x800000000000;\n                uVar4 = uVar1 >> 0x2a;\n                if (uVar4 < 0x40) {\n                    uVar1 = uVar1 >> 0x16;\n                    if (*(*(uVar4 * 8 + 0x7d3e10) + (uVar1 & 0xfffff) * 8) == 0) {\n                        uVar1 = 0;\n                    }\n                    *(*0x20 + -0x20) = iVar2;\n                    *(*0x20 + -0x48) = 0x41401c;\n                    fcn.00411720(uVar1 & 0xffffffff);\n                    return *(*0x20 + -0x20);\n                }\n                *(*0x20 + -0x48) = 0x414045;\n                fcn.0045e260(0x40);\n            }\n            *(*0x20 + -0x48) = 0x41404f;\n            in_RAX = fcn.0045e240(0x44);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x41405a;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 675
    },
    "0041d380": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.0041d380(int64_t arg1)\n\n{\n    ulong uVar1;\n    int32_t *in_RAX;\n    int64_t iVar2;\n    int32_t unaff_EBX;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    *(in_RAX + 4) = 0x400000;\n    *(in_RAX + 0x1e) = 0xffffffffffffffff;\n    *(in_RAX + 10) = 0x3feccccccccccccd;\n    *(in_RAX + 0xc) = 0x4010000000000000;\n    *(in_RAX + 0xe) = 0x408f400000000000;\n    *(in_RAX + 0x10) = 0xc08f400000000000;\n    *(in_RAX + 0x12) = 0x408f400000000000;\n    *(in_RAX + 0x14) = in_XMM15;\n    if (unaff_EBX < 0) {\n        unaff_EBX = -1;\n    }\n    *(in_RAX + 4) = ((unaff_EBX << 0x16) >> 1) / 0x32;\n    *in_RAX = unaff_EBX;\n    uVar1 = *(in_RAX + 2);\n    iVar2 = arg1;\n    if (-1 < arg1) {\n        iVar2 = *(in_RAX + 2);\n        *(in_RAX + 2) = arg1;\n    }\n    fcn.0041e6e0(iVar2, uVar1);\n    return;\n}\n",
        "token_count": 413
    },
    "0041e6e0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint64_t fcn.0041e6e0(void)\n\n{\n    uint64_t uVar1;\n    int32_t *in_RAX;\n    uint64_t uVar2;\n    char unaff_BL;\n    double dVar3;\n    \n    if (unaff_BL == '\\0') {\n        *(in_RAX + 0x1c) = *(in_RAX + 0x22) + 0x100000;\n    }\n    else {\n        *(in_RAX + 0x1c) = 0;\n    }\n    if (*in_RAX < 0) {\n        uVar2 = 0xffffffffffffffff;\n    }\n    else {\n        uVar2 = ((*(in_RAX + 0x28) + *(in_RAX + 0x2e) + *(in_RAX + 0x2c)) * *in_RAX >> 1) / 0x32 + *(in_RAX + 0x2e);\n    }\n    if (uVar2 < *(in_RAX + 4)) {\n        uVar2 = *(in_RAX + 4);\n    }\n    *(in_RAX + 0x1a) = uVar2;\n    uVar2 = *(in_RAX + 0x26) + *(in_RAX + 0x28) + *(in_RAX + 0x2c);\n    if (uVar2 < 0) {\n        dVar3 = uVar2 & 1 | uVar2 >> 1;\n        dVar3 = dVar3 + dVar3;\n    }\n    else {\n        dVar3 = uVar2;\n    }\n    dVar3 = dVar3 * *0x7327c8 * *(in_RAX + 8) * *0x7327e8;\n    if (*0x732830 <= dVar3) {\n        uVar2 = dVar3 - *0x732830 | 0x8000000000000000;\n    }\n    else {\n        uVar2 = dVar3;\n    }\n    uVar1 = *(in_RAX + 6);\n    *(in_RAX + 6) = uVar2;\n    return uVar1;\n}\n",
        "token_count": 479
    },
    "0041edc0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.0041edc0(uint64_t arg1, ulong arg2)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    double dVar3;\n    double dVar4;\n    double dVar5;\n    \n    uVar1 = *0x801c10;\n    dVar3 = *0x732808 * in_RAX;\n    if (*0x732830 <= dVar3) {\n        *0x801c18 = dVar3 - *0x732830 | 0x8000000000000000;\n    }\n    else {\n        *0x801c18 = dVar3;\n    }\n    if (*0x802458 <= *0x801c18) {\n        *0x801c18 = 0xffffffffffffffff;\n    }\n    if (arg1 == 0) {\n        *0x801c10 = 0xffffffffffffffff;\n        return uVar1;\n    }\n    if (unaff_RBX < 0) {\n        dVar3 = unaff_RBX & 1 | unaff_RBX >> 1;\n        dVar3 = dVar3 + dVar3;\n    }\n    else {\n        dVar3 = unaff_RBX;\n    }\n    if (arg1 < 0) {\n        dVar4 = arg1 & 1 | arg1 >> 1;\n        dVar4 = dVar4 + dVar4;\n    }\n    else {\n        dVar4 = arg1;\n    }\n    if (*0x805530 < 0) {\n        dVar5 = *0x805530 & 1 | *0x805530 >> 1;\n        dVar5 = dVar5 + dVar5;\n    }\n    else {\n        dVar5 = *0x805530;\n    }\n    dVar5 = dVar5 * (dVar3 / dVar4);\n    if (*0x732830 <= dVar5) {\n        uVar2 = dVar5 - *0x732830 | 0x8000000000000000;\n    }\n    else {\n        uVar2 = dVar5;\n    }\n    *0x801c10 = -*0x801b18 & (uVar2 + uVar2 / 10 + *0x801b18) - 1;\n    if ((*0x801c10 < *0x802440 + *0x802430) && (*0x801b18 <= (*0x802440 + *0x802430) - *0x801c10)) {\n        uVar1 = 0x801c10;\n    }\n    else {\n        *0x801c10 = 0xffffffffffffffff;\n    }\n    return uVar1;\n}\n",
        "token_count": 603
    },
    "004423c0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.004423c0(ulong arg1)\n\n{\n    ulong uVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    ulong in_RAX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    ulong unaff_RBX;\n    uchar *puVar7;\n    ulong unaff_RBP;\n    int32_t unaff_EDI;\n    int32_t iVar8;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar7 = *0x20;\n        iVar8 = unaff_EDI;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x3b0 && *0x20 + -0x3b0 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x430;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + -0x410) = in_XMM15;\n            iVar8 = *0x20 + -0x408;\n            *(*0x20 + -0x440) = *0x20 + -8;\n            *(*0x20 + -0x438) = 0x44240f;\n            iVar4 = fcn.0045e3a0();\n            unaff_RBP = *(*0x20 + -0x440);\n            if (unaff_EDI - arg1 >> 1 == 0x80) {\n                for (uVar6 = 0; uVar6 < 0x80; uVar6 = uVar6 + 1) {\n                    *(*0x20 + uVar6 * 8 + -0x410) = *(iVar4 + 0x198 + (uVar6 + arg1 & 0xff) * 8);\n                }\n                LOCK();\n                if (arg1 != *(iVar4 + 400)) {\n                    return 0;\n                }\n                *(iVar4 + 400) = arg1 + 0x80;\n                *(*0x20 + -0x10) = unaff_RBX;\n                uVar5 = 0;\n                while( true ) {\n                    if (0x7f < uVar5) {\n                        *(*0x20 + -0x420) = in_XMM15;\n                        *(*0x20 + -0x420) = *(*0x20 + -0x410);\n                        *(*0x20 + -0x418) = *(*0x20 + -0x10);\n                        *(*0x20 + -0x438) = 0x4424dc;\n                        fcn.0040a460();\n                        iVar4 = *(*0x20 + -0x418);\n                        uVar1 = *(*0x20 + -0x420);\n                        uVar2 = *0x7ae560;\n                        iVar3 = *0x7ae568;\n                        if ((iVar4 != 0) && (*(iVar4 + 0xa0) = 0,  uVar2 = uVar1,  iVar3 = iVar4,  *0x7ae568 != 0)) {\n                            *(*0x7ae568 + 0xa0) = uVar1;\n                            uVar2 = *0x7ae560;\n                        }\n                        *0x7ae568 = iVar3;\n                        *0x7ae560 = uVar2;\n                        *0x7ae570 = *0x7ae570 + 0x81;\n                        *(*0x20 + -0x420) = in_XMM15;\n                        *(*0x20 + -0x438) = 0x44253b;\n                        fcn.0040a680();\n                        return 1;\n                    }\n                    iVar4 = uVar5 * 8;\n                    uVar5 = uVar5 + 1;\n                    if (0x80 < uVar5) break;\n                    *(*(*0x20 + iVar4 + -0x410) + 0xa0) = *(*0x20 + uVar5 * 8 + -0x410);\n                }\n                arg1._0_4_ = 0x81;\n                *(*0x20 + -0x438) = 0x44255a;\n                fcn.0045e240(0x81);\n            }\n            unaff_RBX = 0x1e;\n            *(*0x20 + -0x438) = 0x44256b;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + 0x1c) = iVar8;\n        *(puVar7 + -8) = 0x442585;\n        fcn.0045bb60();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1._0_4_ = *(puVar7 + 0x18);\n        unaff_EDI = *(puVar7 + 0x1c);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1162
    },
    "0047aa40": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nint64_t fcn.0047aa40(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    iVar2 = fcn.0047a780(arg1);\n    iVar2 = iVar2 + ((iVar2 + 0x15180U >> 1) / 0x49d40) * -0x93a80;\n    iVar1 = iVar2 + 0x15180;\n    return (iVar2 + SUB168(SEXT816(-0x3dd1baf98d76b549) * SEXT816(iVar1) >> 0x40, 0) + 0x15180 >> 0x10) -\n           (iVar1 >> 0x3f);\n}\n",
        "token_count": 219
    },
    "0047ab80": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint64_t fcn.0047ab80(ulong noname_0, ulong arg2)\n\n{\n    code *pcVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    char unaff_BL;\n    int64_t iVar7;\n    \n    uVar2 = (in_RAX / 0x15180) % 0x23ab1;\n    uVar3 = uVar2 >> 1;\n    iVar4 = uVar3 / 0x4756 - uVar3 / 0x11d58;\n    uVar2 = uVar2 + iVar4 * -0x8eac;\n    uVar3 = SUB168(ZEXT816(0x66db072f2284d191) * ZEXT816(uVar2) >> 0x40, 0);\n    uVar3 = (uVar3 + uVar2 >> 1 | CARRY8(uVar3, uVar2) << 0x3f) >> 10;\n    uVar2 = uVar2 + uVar3 * -0x5b5;\n    uVar5 = SUB168(ZEXT816(0x6719f36016719f37) * ZEXT816(uVar2) >> 0x40, 0);\n    uVar5 = uVar5 + uVar2 >> 1 | CARRY8(uVar5, uVar2) << 0x3f;\n    iVar6 = (uVar5 >> 8) - (uVar5 >> 10);\n    iVar7 = ((in_RAX / 0x15180) / 0x23ab1) * 400 + iVar4 * 100 + uVar3 * 4 + iVar6;\n    iVar4 = uVar2 + iVar6 * -0x16d;\n    uVar2 = iVar7 - 0x440d116ebf;\n    if (unaff_BL == '\\0') {\n        return uVar2;\n    }\n    if ((uVar2 & 3) == 0) {\n        iVar6 = SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(uVar2) >> 0x40, 0) + iVar7 + -0x440d116ebf;\n        if ((((iVar6 >> 6) - (uVar2 >> 0x3f)) * 100 - uVar2 != 0) ||\n           (((iVar6 >> 8) - (uVar2 >> 0x3f)) * 400 - uVar2 == 0)) {\n            if (iVar4 < 0x3c) {\n                if (iVar4 == 0x3b) {\n                    return uVar2;\n                }\n            }\n            else {\n                iVar4 = iVar4 + -1;\n            }\n        }\n    }\n    uVar3 = (iVar4 + SUB168(SEXT816(-0x7bdef7bdef7bdef7) * SEXT816(iVar4) >> 0x40, 0) >> 4) - (iVar4 >> 0x3f);\n    if (uVar3 + 1 < 0xd) {\n        if ((*(uVar3 * 4 + 0x796e04) <= iVar4) || (uVar3 < 0xd)) {\n            return uVar2;\n        }\n        fcn.0045e240(0xd);\n    }\n    fcn.0045e240(0xd);\n    pcVar1 = swi(3);\n    uVar2 = (*pcVar1)();\n    return uVar2;\n}\n",
        "token_count": 818
    },
    "0047b7c0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.0047b7c0(char *arg1)\n\n{\n    ulong in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    char *pcVar6;\n    char *pcVar7;\n    int64_t iVar8;\n    char *unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    char *unaff_RDI;\n    char *in_R8;\n    int64_t in_R9;\n    char cVar10;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xd0 && *0x20 + -0xd0 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x150;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0xc0) = arg1;\n            *(*0x20 + -0x158) = 0x47b806;\n            uVar1 = fcn.0047be40();\n            if (unaff_RSI == '\\0') {\n                return 0;\n            }\n            *(*0x20 + -0xf8) = unaff_RBX;\n            *(*0x20 + -0x18) = uVar1;\n            *(*0x20 + -0x158) = 0x47b827;\n            iVar2 = fcn.0047c080();\n            if (unaff_RDI == '\\0') {\n                return 0;\n            }\n            if ((arg1 == NULL) || (*unaff_RDI == ',')) {\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -200) = iVar2;\n            *(*0x20 + -0x100) = -iVar2;\n            *(*0x20 + -0x158) = 0x47b895;\n            pcVar6 = arg1;\n            uVar1 = fcn.0047be40();\n            if (unaff_RSI == '\\0') {\n                return 0;\n            }\n            *(*0x20 + -0x10) = uVar1;\n            *(*0x20 + -0xd0) = arg1;\n            if ((unaff_RDI == NULL) || (*pcVar6 == ',')) {\n                iVar2 = *(*0x20 + -200) + -0xe10;\n                pcVar7 = pcVar6;\n                unaff_RBX = arg1;\n            }\n            else {\n                *(*0x20 + -0x158) = 0x47b8d7;\n                iVar2 = fcn.0047c080();\n                unaff_RSI = unaff_RDI & 0xffffffff;\n                unaff_RBX = *(*0x20 + -0xd0);\n                pcVar7 = unaff_RDI;\n                unaff_RDI = pcVar6;\n            }\n            if (unaff_RSI == '\\0') {\n                return 0;\n            }\n            if (unaff_RDI == NULL) {\n                unaff_RDI = 0xf;\n                pcVar7 = 0x4b0aa8;\n            }\n            if (unaff_RDI != NULL) {\n                *(*0x20 + -200) = -iVar2;\n                cVar10 = *pcVar7;\n                if ((cVar10 != ',') && (cVar10 != ';')) {\n                    return 0;\n                }\n                *(*0x20 + -0xb8) = in_XMM15;\n                *(*0x20 + -0xb0) = in_XMM15;\n                *(*0x20 + -0xa0) = in_XMM15;\n                *(*0x20 + -0x90) = in_XMM15;\n                *(*0x20 + -0x88) = in_XMM15;\n                *(*0x20 + -0x78) = in_XMM15;\n                *(*0x20 + -0x158) = 0x47b9a7;\n                uVar1 = fcn.0047c600();\n                *(*0x20 + -0x40) = uVar1;\n                *(*0x20 + -0x38) = unaff_RDI + -1;\n                *(*0x20 + -0x30) = pcVar7;\n                *(*0x20 + -0x28) = unaff_RDI;\n                *(*0x20 + -0x20) = unaff_RSI;\n                *(*0x20 + -0xb8) = *(*0x20 + -0x40);\n                *(*0x20 + -0xb0) = *(*0x20 + -0x38);\n                *(*0x20 + -0xac) = *(*0x20 + -0x34);\n                *(*0x20 + -0xa8) = *(*0x20 + -0x30);\n                *(*0x20 + -0xa4) = *(*0x20 + -0x2c);\n                *(*0x20 + -0xa0) = *(*0x20 + -0x28);\n                *(*0x20 + -0x9c) = *(*0x20 + -0x24);\n                *(*0x20 + -0x98) = *(*0x20 + -0x20);\n                *(*0x20 + -0x94) = *(*0x20 + -0x1c);\n                if (((cVar10 == '\\0') || (in_R9 == 0)) || (*in_R8 != ',')) {\n                    return 0;\n                }\n                iVar2 = in_R9 + -1;\n                *(*0x20 + -0x158) = 0x47ba39;\n                iVar8 = iVar2;\n                uVar1 = fcn.0047c600();\n                *(*0x20 + -0x68) = uVar1;\n                *(*0x20 + -0x60) = iVar2;\n                *(*0x20 + -0x58) = iVar8;\n                *(*0x20 + -0x50) = unaff_RDI;\n                *(*0x20 + -0x48) = unaff_RSI;\n                *(*0x20 + -0x90) = *(*0x20 + -0x68);\n                *(*0x20 + -0x88) = *(*0x20 + -0x60);\n                *(*0x20 + -0x84) = *(*0x20 + -0x5c);\n                *(*0x20 + -0x80) = *(*0x20 + -0x58);\n                *(*0x20 + -0x7c) = *(*0x20 + -0x54);\n                *(*0x20 + -0x78) = *(*0x20 + -0x50);\n                *(*0x20 + -0x74) = *(*0x20 + -0x4c);\n                *(*0x20 + -0x70) = *(*0x20 + -0x48);\n                *(*0x20 + -0x6c) = *(*0x20 + -0x44);\n                if ((cVar10 == '\\0') || (in_R9 != 0)) {\n                    return 0;\n                }\n                *(*0x20 + -0x158) = 0x47bac6;\n                uVar1 = fcn.0047ab80(*(*0x20 + 0x20), 0x7ffffffe1ad9c900);\n                *(*0x20 + -0x110) = uVar1;\n                *(*0x20 + -0x108) = unaff_RDI;\n                uVar1 = *(*0x20 + -0xa8);\n                *(*0x20 + -0x158) = 0x47bb06;\n                uVar3 = fcn.0047d0a0(*(*0x20 + -0xb0), uVar1, *(*0x20 + -0x98), *(*0x20 + -0x100));\n                *(*0x20 + -0xd8) = uVar3;\n                *(*0x20 + -0x158) = 0x47bb45;\n                iVar4 = fcn.0047d0a0(*(*0x20 + -0x88), uVar1, *(*0x20 + -0x70), *(*0x20 + -200));\n                iVar2 = *(*0x20 + -0xd8);\n                iVar5 = iVar4;\n                iVar8 = iVar2;\n                if (iVar4 < iVar2) {\n                    iVar5 = iVar2;\n                    iVar8 = iVar4;\n                }\n                uVar3 = *(*0x20 + -0xd0);\n                uVar1 = *(*0x20 + -0x18);\n                if (iVar4 < iVar2) {\n                    uVar3 = *(*0x20 + -0xf8);\n                    uVar1 = *(*0x20 + -0x10);\n                }\n                *(*0x20 + -0xe8) = uVar3;\n                uVar3 = *(*0x20 + -200);\n                if (iVar4 < iVar2) {\n                    uVar3 = *(*0x20 + -0x100);\n                }\n                *(*0x20 + -0xf0) = uVar3;\n                uVar3 = *(*0x20 + -0x10);\n                if (iVar4 < iVar2) {\n                    uVar3 = *(*0x20 + -0x18);\n                }\n                iVar2 = *(*0x20 + 0x20);\n                *(*0x20 + -0x118) =\n                     *(*0x20 + -0x108) * 0x15180 +\n                     iVar2 + ((SUB168(SEXT816(-0x3dd1baf98d76b549) * SEXT816(iVar2) >> 0x40, 0) + iVar2 >> 0x10) -\n                             (iVar2 >> 0x3f)) * -0x15180;\n                *(*0x20 + -0xe0) = ((*(*0x20 + -0x110) + 0x440d116ebfU >> 1) / 200) * 0x23ab1;\n                if (iVar8 <= *(*0x20 + -0x118)) {\n                    if (iVar5 <= *(*0x20 + -0x118)) {\n                        return uVar1;\n                    }\n                    return uVar3;\n                }\n                return uVar1;\n            }\n            arg1 = NULL;\n            *(*0x20 + -0x158) = 0x47bdf6;\n            in_RAX = fcn.0045e240(0);\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        *(puVar9 + 0x18) = arg1;\n        *(puVar9 + 0x20) = unaff_RDI;\n        *(puVar9 + -8) = 0x47be10;\n        fcn.0045bb60();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        arg1 = *(puVar9 + 0x18);\n        unaff_RDI = *(puVar9 + 0x20);\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 2588
    },
    "0048d300": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.0048d300(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    uchar *in_RAX;\n    uchar *puVar3;\n    uchar *puVar4;\n    uchar *puVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uchar *unaff_RSI;\n    uint64_t uVar7;\n    uchar *unaff_RDI;\n    char cVar8;\n    uint64_t in_R8;\n    uchar uVar9;\n    uint64_t in_R9;\n    uchar uVar10;\n    uchar *puVar11;\n    uchar *puVar12;\n    uchar *unaff_R13;\n    int64_t unaff_R14;\n    uchar unaff_R15B;\n    bool bVar13;\n    uchar in_XMM15 [16];\n    \n    do {\n        uVar9 = in_R9;\n        cVar8 = in_R8;\n        puVar3 = *0x20 + -0x10;\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= puVar3 && puVar3 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RSI + -2 < 0x23) {\n                *(*0x20 + -0x51) = in_XMM15;\n                *(*0x20 + -0x50) = in_XMM15;\n                *(*0x20 + -0x40) = in_XMM15;\n                *(*0x20 + -0x30) = in_XMM15;\n                *(*0x20 + -0x20) = in_XMM15;\n                if (cVar8 != '\\0') {\n                    unaff_RDI = -unaff_RDI;\n                }\n                if (unaff_RSI != 0xa) {\n                    if ((unaff_RSI & unaff_RSI + -1) != 0) {\n                        puVar4 = 0x41;\n                        while (unaff_RSI <= unaff_RDI) {\n                            puVar5 = unaff_RDI / unaff_RSI;\n                            uVar7 = unaff_RDI - puVar5 * unaff_RSI;\n                            puVar11 = in_RAX;\n                            if (0x23 < uVar7) goto code_r0x0048d57c;\n                            uVar1 = *(uVar7 + 0x4b5982);\n                            puVar3 = uVar1;\n                            if (0x40 < puVar4 + -1) goto code_r0x0048d572;\n                            (*0x20 + -0x52)[puVar4] = uVar1;\n                            puVar4 = puVar4 + -1;\n                            unaff_RDI = puVar5;\n                        }\n                        puVar11 = puVar4 + -1;\n                        puVar12 = unaff_RDI[0x4b5982];\n                        puVar5 = puVar4;\n                        if (0x40 < puVar11) goto code_r0x0048d565;\n                        (*0x20 + -0x52)[puVar4] = unaff_RDI[0x4b5982];\n                        bVar13 = cVar8 == '\\0';\n                        goto code_r0x0048d412;\n                    }\n                    iVar2 = 0;\n                    if (unaff_RSI != NULL) {\n                        for (; (unaff_RSI >> iVar2 & 1) == 0; iVar2 = iVar2 + 1) {\n                        }\n                    }\n                    puVar5 = iVar2 & 7;\n                    puVar11 = unaff_RSI + -1;\n                    puVar12 = 0x41;\n                    goto code_r0x0048d5a0;\n                }\n                puVar4 = 0x41;\n                puVar11 = unaff_RDI;\ncode_r0x0048d624:\n                uVar9 = in_R9;\n                cVar8 = in_R8;\n                if (puVar11 < 0x64) {\n                    unaff_RDI = puVar11;\n                    if (puVar11 * 2 + 1U < 200) {\n                        puVar3 = puVar4 + -1;\n                        puVar12 = 0x4b7f98;\n                        if (puVar3 < 0x41) {\n                            (*0x20 + -0x52)[puVar4] = *(puVar11 * 2 + 0x4b7f99);\n                            if (puVar11 < 0xa) {\ncode_r0x0048d74b:\n                                bVar13 = cVar8 == '\\0';\n                                puVar11 = puVar3;\ncode_r0x0048d412:\n                                do {\n                                    puVar5 = puVar11;\n                                    if (bVar13) {\ncode_r0x0048d435:\n                                        if (in_R9 == '\\0') {\n                                            if (puVar5 < 0x42) {\n                                                *(*0x20 + -0x98) = 0x48d51e;\n                                                fcn.0044b220(-(puVar5 + -0x41));\n                                                return 0;\n                                            }\n                                            *(*0x20 + -0x98) = 0x48d548;\n                                            fcn.0045e300(0x41);\n                                        }\n                                        else if (puVar5 < 0x42) {\n                                            uVar7 = (unaff_RBX - puVar5) + 0x41;\n                                            *(*0x20 + -0x60) = uVar7;\n                                            puVar3 = puVar5 + -0x41;\n                                            if (arg1 < uVar7) {\n                                                *(*0x20 + -0x68) = puVar3;\n                                                *(*0x20 + -0x10) = *0x20 + ((puVar5 & puVar3 >> 0x3f) - 0x51);\n                                                *(*0x20 + 0x10) = unaff_RBX;\n                                                *(*0x20 + -0x98) = 0x48d49b;\n                                                in_RAX = fcn.00447360(unaff_RBX);\n                                                puVar3 = *(*0x20 + -0x68);\n                                                arg1 = unaff_RBX;\n                                            }\n                                            *(*0x20 + -0x68) = arg1;\n                                            *(*0x20 + -0x10) = in_RAX;\n                                            *(*0x20 + -0x98) = 0x48d4d2;\n                                            fcn.0045ebc0(-puVar3);\n                                            return *(*0x20 + -0x10);\n                                        }\n                                        *(*0x20 + -0x98) = 0x48d555;\n                                        fcn.0045e300(0x41);\n                                    }\n                                    else {\n                                        puVar5 = puVar11 + -1;\n                                        if (puVar5 < 0x41) {\n                                            (*0x20 + -0x52)[puVar11] = 0x2d;\n                                            goto code_r0x0048d435;\n                                        }\n                                    }\n                                    *(*0x20 + -0x98) = 0x48d565;\n                                    fcn.0045e240(0x41);\ncode_r0x0048d565:\n                                    puVar4 = puVar12;\n                                    *(*0x20 + -0x98) = 0x48d572;\n                                    fcn.0045e240(0x41);\n                                    in_RAX = puVar11;\ncode_r0x0048d572:\n                                    *(*0x20 + -0x98) = 0x48d57c;\n                                    fcn.0045e240(0x41);\n                                    puVar11 = in_RAX;\ncode_r0x0048d57c:\n                                    arg1 = 0x24;\n                                    *(*0x20 + -0x98) = 0x48d589;\n                                    in_RAX = fcn.0045e260(0x24);\n                                    unaff_RDI = puVar3;\n                                    while( true ) {\n                                        puVar12 = unaff_R13;\n                                        (*0x20 + -0x52)[puVar4] = unaff_R15B;\n                                        unaff_RDI = unaff_RDI >> (puVar5 & 0x3f);\n                                        puVar3 = unaff_RDI;\n                                        unaff_R13 = puVar12;\ncode_r0x0048d5a0:\n                                        if (unaff_RDI < unaff_RSI) break;\n                                        puVar4 = puVar12;\n                                        if (0x23 < (unaff_RDI & puVar11)) goto code_r0x0048d609;\n                                        unaff_R13 = puVar12 + -1;\n                                        unaff_R15B = *((unaff_RDI & puVar11) + 0x4b5982);\n                                        if (0x40 < unaff_R13) goto code_r0x0048d5fc;\n                                    }\n                                    puVar5 = puVar12 + -1;\n                                    puVar11 = unaff_RDI[0x4b5982];\n                                    if (0x40 < puVar5) goto code_r0x0048d5ef;\n                                    (*0x20 + -0x52)[puVar12] = unaff_RDI[0x4b5982];\n                                    bVar13 = in_R8 == '\\0';\n                                    puVar11 = puVar5;\n                                } while( true );\n                            }\n                            unaff_RDI = puVar11 << 1;\n                            if (unaff_RDI < 0xc8) {\n                                puVar3 = puVar4 + -2;\n                                if (puVar3 < 0x41) {\n                                    (*0x20 + -0x53)[puVar4] = *(puVar11 * 2 + 0x4b7f98);\n                                    goto code_r0x0048d74b;\n                                }\n                                *(*0x20 + -0x98) = 0x48d765;\n                                fcn.0045e240(0x41);\n                            }\n                            *(*0x20 + -0x98) = 0x48d772;\n                            fcn.0045e260(200);\n                        }\n                        *(*0x20 + -0x98) = 0x48d77f;\n                        fcn.0045e240(0x41);\n                    }\n                    *(*0x20 + -0x98) = 0x48d78c;\n                    fcn.0045e260(200);\n                    in_RAX = unaff_RSI;\n                }\n                else {\n                    unaff_RDI = puVar11 >> 1;\n                    puVar5 = unaff_RDI / 0x32;\n                    puVar11 = puVar11 + puVar5 * -100;\n                    if (199 < puVar11 * 2 + 1U) goto code_r0x0048d7af;\n                    uVar1 = *(puVar11 * 2 + 0x4b7f99);\n                    unaff_R13 = uVar1;\n                    if (0x40 < puVar4 + -1) goto code_r0x0048d7a5;\n                    (*0x20 + -0x52)[puVar4] = uVar1;\n                    if (199 < puVar11 * 2) goto code_r0x0048d796;\n                    puVar3 = puVar4 + -2;\n                    uVar10 = *(puVar11 * 2 + 0x4b7f98);\n                    if (puVar3 < 0x41) goto code_r0x0048d616;\n                }\n                *(*0x20 + -0x98) = 0x48d796;\n                fcn.0045e240(0x41);\ncode_r0x0048d796:\n                *(*0x20 + -0x98) = 0x48d7a5;\n                fcn.0045e260(200);\ncode_r0x0048d7a5:\n                *(*0x20 + -0x98) = 0x48d7af;\n                fcn.0045e240(0x41);\ncode_r0x0048d7af:\n                arg1 = 200;\n                *(*0x20 + -0x98) = 0x48d7b9;\n                fcn.0045e260(200);\n                unaff_RSI = in_RAX;\n            }\n            unaff_RBX = 0x732aa8;\n            *(*0x20 + -0x98) = 0x48d7cc;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + 0x20) = unaff_RDI;\n        *(puVar6 + 0x28) = unaff_RSI;\n        puVar6[0x30] = cVar8;\n        puVar6[0x31] = uVar9;\n        *(puVar6 + -8) = 0x48d7f5;\n        fcn.0045bb60();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_RDI = *(puVar6 + 0x20);\n        unaff_RSI = *(puVar6 + 0x28);\n        in_R8 = puVar6[0x30];\n        in_R9 = puVar6[0x31];\n        *0x20 = puVar6;\n    } while( true );\ncode_r0x0048d5ef:\n    *(*0x20 + -0x98) = 0x48d5fc;\n    fcn.0045e240(0x41);\ncode_r0x0048d5fc:\n    *(*0x20 + -0x98) = 0x48d609;\n    fcn.0045e240(0x41);\n    puVar4 = puVar12;\ncode_r0x0048d609:\n    uVar10 = SUB81(puVar11, 0);\n    arg1 = 0x24;\n    *(*0x20 + -0x98) = 0x48d616;\n    puVar3 = fcn.0045e260(0x24);\n    in_RAX = unaff_RSI;\ncode_r0x0048d616:\n    (*0x20 + -0x53)[puVar4] = uVar10;\n    puVar4 = puVar3;\n    unaff_RSI = in_RAX;\n    puVar11 = puVar5;\n    goto code_r0x0048d624;\n}\n",
        "token_count": 3340
    },
    "00410b40": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nint64_t fcn.00410b40(ulong arg1)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    int64_t iVar5;\n    \n    uVar4 = (unaff_RBX & 0xffffffff) + unaff_RSI >> 2;\n    uVar2 = uVar4 + in_RAX;\n    if (uVar2 <= unaff_RDI) {\n        return in_RAX + uVar4;\n    }\n    uVar2 = (uVar2 - unaff_RDI) - 1;\n    uVar1 = arg1 + (uVar2 >> 0x11) + 1;\n    uVar4 = uVar1 >> 0x14;\n    if (uVar4 < 0x40) {\n        iVar5 = *(uVar4 * 8 + 0x7d3e10);\n        if ((iVar5 == 0) || (iVar5 = *(iVar5 + (uVar1 & 0xfffff) * 8),  iVar5 == 0)) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (uVar2 & 0x1ffff) + iVar5;\n        }\n        return iVar5;\n    }\n    fcn.0045e260(0x40);\n    pcVar3 = swi(3);\n    iVar5 = (*pcVar3)();\n    return iVar5;\n}\n",
        "token_count": 360
    },
    "00411720": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid fcn.00411720(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    ulong uVar1;\n    uint64_t uVar2;\n    int32_t unaff_EBX;\n    uint uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    ulong unaff_RDI;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = unaff_RDI;\n            uVar2 = (*(unaff_RSI + 0x20) << 0xd) >> 3;\n            if (unaff_EBX == 0) {\n                *(*0x20 + -0x28) = *(unaff_RSI + 0x68);\n                uVar3 = 0;\n                while (uVar2 != 0) {\n                    *(*0x20 + -0x38) = uVar2;\n                    *(*0x20 + -0x10) = in_RAX;\n                    *(*0x20 + -0x68) = 0x4117b0;\n                    uVar1 = fcn.00410c20(arg1);\n                    *(*0x20 + -0x18) = uVar1;\n                    *(*0x20 + -0x3c) = uVar3;\n                    *(*0x20 + -0x40) = arg1;\n                    *(*0x20 + -0x20) = unaff_RDI;\n                    *(*0x20 + -0x30) = uVar2;\n                    if (*(*0x20 + -0x28) == 8) {\n                        puVar4 = *(*0x20 + -0x10);\n                        for (uVar5 = 0; uVar5 < uVar2 >> 2; uVar5 = uVar5 + 1) {\n                            *puVar4 = 0xff;\n                            puVar4 = puVar4 + 1;\n                        }\n                    }\n                    else {\n                        *(*0x20 + -0x68) = 0x4117f0;\n                        fcn.0045e8c0();\n                    }\n                    in_RAX = *(*0x20 + -0x18);\n                    arg1 = *(*0x20 + -0x40);\n                    uVar3 = *(*0x20 + -0x3c);\n                    unaff_RDI = *(*0x20 + -0x20);\n                    uVar2 = *(*0x20 + -0x38) - *(*0x20 + -0x30);\n                }\n                return;\n            }\n            *(*0x20 + -0x68) = 0x411825;\n            fcn.00433c80();\n            unaff_EBX = 0x1a;\n            *(*0x20 + -0x68) = 0x411836;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + 0x14) = arg1;\n        *(puVar4 + 0x18) = unaff_RDI;\n        *(puVar4 + 0x20) = unaff_RSI;\n        *(puVar4 + -8) = 0x411853;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x14);\n        unaff_RDI = *(puVar4 + 0x18);\n        unaff_RSI = *(puVar4 + 0x20);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 941
    },
    "00452100": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00452100(void)\n\n{\n    uint64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n        in_RAX = in_RAX & 0xff;\n    }\n    if ((in_RAX & 0x80) != 0) {\n        fcn.00450c80(0);\n    }\n    fcn.00450c80(0);\n    return;\n}\n",
        "token_count": 134
    },
    "004572e0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nint64_t fcn.004572e0(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    if (in_RAX == 0) {\n        return 0;\n    }\n    iVar4 = 0;\n    iVar5 = 0;\n    while( true ) {\n        uVar1 = *(iVar4 + in_RAX + 1);\n        uVar3 = iVar4 * 7;\n        if (uVar3 < 0) {\n            fcn.004320a0();\n            pcVar2 = swi(3);\n            iVar4 = (*pcVar2)();\n            return iVar4;\n        }\n        iVar5 = iVar5 + ((uVar1 & 0x7f) << (uVar3 & 0x3f) & -(uVar3 < 0x40));\n        if ((uVar1 & 0x80) == 0) break;\n        iVar4 = iVar4 + 1;\n    }\n    if (iVar5 == 0) {\n        return 0;\n    }\n    return iVar4 + in_RAX + 2;\n}\n",
        "token_count": 293
    },
    "004573a0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint8_t * fcn.004573a0(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    uint8_t *in_RAX;\n    uint8_t *puVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    \n    if ((*in_RAX & 2) == 0) {\n        return NULL;\n    }\n    iVar5 = 0;\n    iVar7 = 0;\n    while( true ) {\n        uVar3 = iVar5 * 7;\n        if (uVar3 < 0) goto code_r0x0045748f;\n        iVar7 = iVar7 + ((in_RAX[iVar5 + 1] & 0x7f) << (uVar3 & 0x3f) & -(uVar3 < 0x40));\n        if ((in_RAX[iVar5 + 1] & 0x80) == 0) break;\n        iVar5 = iVar5 + 1;\n    }\n    iVar6 = 0;\n    while( true ) {\n        iVar1 = iVar7 + iVar5 + iVar6;\n        if (iVar6 * 7 < 0) break;\n        if ((in_RAX[iVar1 + 2] & 0x80) == 0) {\n            return in_RAX + iVar1 + 3;\n        }\n        iVar6 = iVar6 + 1;\n    }\n    fcn.004320a0();\ncode_r0x0045748f:\n    fcn.004320a0();\n    pcVar2 = swi(3);\n    puVar4 = (*pcVar2)();\n    return puVar4;\n}\n",
        "token_count": 396
    },
    "004574a0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nulong fcn.004574a0(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    uint64_t uVar1;\n    uint8_t *in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    uint8_t *noname_0_00;\n    uint8_t *noname_1_00;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    int64_t noname_2_00;\n    uint64_t arg4_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((in_RAX == NULL) || ((*in_RAX & 4) == 0)) {\n                return 0;\n            }\n            iVar3 = 0;\n            iVar5 = 0;\n            while( true ) {\n                uVar1 = iVar3 * 7;\n                if (uVar1 < 0) goto code_r0x004575d4;\n                arg4_00 = -(uVar1 < 0x40);\n                iVar5 = ((in_RAX[iVar3 + 1] & 0x7f) << (uVar1 & 0x3f) & arg4_00) + iVar5;\n                if ((in_RAX[iVar3 + 1] & 0x80) == 0) break;\n                iVar3 = iVar3 + 1;\n            }\n            noname_2_00 = iVar5 + iVar3;\n            iVar3 = iVar5 + iVar3 + 2;\n            if ((*in_RAX & 2) == 0) goto code_r0x00457542;\n            iVar3 = 0;\n            iVar5 = 0;\n            while( true ) {\n                arg4_00 = iVar3 * 7;\n                if (arg4_00 < 0) break;\n                iVar5 = iVar5 + ((in_RAX[noname_2_00 + iVar3 + 2] & 0x7f) << (arg4_00 & 0x3f) & -(arg4_00 < 0x40));\n                if ((in_RAX[noname_2_00 + iVar3 + 2] & 0x80) == 0) {\n                    iVar3 = iVar5 + iVar3 + noname_2_00 + 3;\ncode_r0x00457542:\n                    *(*0x20 + -0xc) = 0;\n                    noname_0_00 = in_RAX + iVar3;\n                    noname_1_00 = *0x20 + -0xc;\n                    if (noname_1_00 != noname_0_00) {\n                        noname_0_00 = *(in_RAX + iVar3);\n                        *(*0x20 + -0xc) = *(in_RAX + iVar3);\n                    }\n                    *(*0x20 + -0x28) = 0x45756c;\n                    fcn.00456b80();\n                    *(*0x20 + -0x28) = 0x457571;\n                    uVar2 = fcn.004572e0(noname_0_00, noname_1_00, noname_2_00, arg4_00);\n                    return uVar2;\n                }\n                iVar3 = iVar3 + 1;\n            }\n            *(*0x20 + -0x28) = 0x4575d4;\n            fcn.004320a0();\ncode_r0x004575d4:\n            *(*0x20 + -0x28) = 0x4575d9;\n            in_RAX = fcn.004320a0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x4575e5;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 968
    },
    "004636c0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nint64_t fcn.004636c0(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    \n    if (in_RAX == 0) {\n        return 0;\n    }\n    iVar2 = 0;\n    while( true ) {\n        if (iVar2 * 7 < 0) {\n            fcn.004320a0();\n            pcVar1 = swi(3);\n            iVar2 = (*pcVar1)();\n            return iVar2;\n        }\n        if ((*(iVar2 + in_RAX + 1) & 0x80) == 0) break;\n        iVar2 = iVar2 + 1;\n    }\n    return iVar2 + in_RAX + 2;\n}\n",
        "token_count": 188
    },
    "00492a60": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nint64_t fcn.00492a60(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    \n    if (in_RAX == 0) {\n        return 0;\n    }\n    iVar2 = 0;\n    while( true ) {\n        if (iVar2 * 7 < 0) {\n            fcn.004320a0();\n            pcVar1 = swi(3);\n            iVar2 = (*pcVar1)();\n            return iVar2;\n        }\n        if ((*(iVar2 + in_RAX + 1) & 0x80) == 0) break;\n        iVar2 = iVar2 + 1;\n    }\n    return iVar2 + in_RAX + 2;\n}\n",
        "token_count": 188
    },
    "0041c760": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0041c760(int64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    ulong unaff_RDI;\n    uint64_t arg3;\n    int64_t unaff_R14;\n    \ncode_r0x0041c760:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x50;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + -0x10) = unaff_RDI;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x28) = unaff_RSI;\n        uVar4 = 0;\n        do {\n            if (unaff_RBX <= uVar4) {\n                return;\n            }\n            if (arg1 == 0) {\ncode_r0x0041c7f9:\n                *(*0x20 + -0x18) = uVar4;\n                uVar4 = *(in_RAX + uVar4);\n                if (((unaff_RSI == 0) || (uVar4 <= *(unaff_RSI + 0x100) && *(unaff_RSI + 0x100) != uVar4)) ||\n                   (*(unaff_RSI + 0x108) < uVar4 || *(unaff_RSI + 0x108) == uVar4)) {\n                    *(*0x20 + -0x20) = uVar4;\n                    *(*0x20 + -0x58) = 0x41c85c;\n                    iVar3 = fcn.00423a20();\n                    if (iVar3 == 0) {\n                        in_RAX = *(*0x20 + 8);\n                        arg1 = *(*0x20 + 0x18);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        unaff_RSI = *(*0x20 + 0x28);\n                        unaff_RDI = *(*0x20 + -0x10);\n                        uVar4 = *(*0x20 + -0x18);\n                    }\n                    else {\n                        iVar2 = *(iVar3 + 0x18);\n                        uVar4 = (*(*0x20 + -0x20) - iVar2) * *(iVar3 + 0x5c);\n                        arg3 = uVar4 >> 0x20;\n                        if ((*(iVar3 + 0x88) < arg3 || *(iVar3 + 0x88) == arg3) &&\n                           ((1 << (uVar4 >> 0x20 & 7) & *((uVar4 >> 0x23) + *(iVar3 + 0x48))) == 0)) {\n                            in_RAX = *(*0x20 + 8);\n                            arg1 = *(*0x20 + 0x18);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            unaff_RSI = *(*0x20 + 0x28);\n                            unaff_RDI = *(*0x20 + -0x10);\n                            uVar4 = *(*0x20 + -0x18);\n                        }\n                        else {\n                            iVar3 = *(iVar3 + 0x68);\n                            *(*0x20 + -0x58) = 0x41c8f8;\n                            fcn.0041ca20(*(*0x20 + -0x18), iVar2 + iVar3 * arg3, arg3);\n                            in_RAX = *(*0x20 + 8);\n                            arg1 = *(*0x20 + 0x18);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            unaff_RSI = *(*0x20 + 0x28);\n                            unaff_RDI = *(*0x20 + -0x10);\n                            uVar4 = *(*0x20 + -0x18);\n                        }\n                    }\n                }\n                else {\n                    *(*0x20 + -0x58) = 0x41c82c;\n                    fcn.00420880(1);\n                    in_RAX = *(*0x20 + 8);\n                    arg1 = *(*0x20 + 0x18);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RSI = *(*0x20 + 0x28);\n                    unaff_RDI = *(*0x20 + -0x10);\n                    uVar4 = *(*0x20 + -0x18);\n                }\n            }\n            else {\n                uVar1 = *(arg1 + (uVar4 >> 6));\n                if (uVar1 == 0) {\n                    if ((uVar4 & 0x3f) != 0) goto code_r0x0041c948;\n                    uVar4 = uVar4 + 0x38;\n                }\n                else if ((uVar1 >> (uVar4 >> 3 & 7) & 1) != 0) goto code_r0x0041c7f9;\n            }\n            uVar4 = uVar4 + 8;\n        } while( true );\n    }\n    goto code_r0x0041c95a;\ncode_r0x0041c948:\n    unaff_RBX = 0xf;\n    *(*0x20 + -0x58) = 0x41c959;\n    in_RAX = fcn.00433c80();\ncode_r0x0041c95a:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + 0x10) = unaff_RBX;\n    *(puVar5 + 0x18) = arg1;\n    *(puVar5 + 0x20) = unaff_RDI;\n    *(puVar5 + 0x28) = unaff_RSI;\n    *(puVar5 + -8) = 0x41c978;\n    fcn.0045bb60();\n    in_RAX = *(puVar5 + 8);\n    unaff_RBX = *(puVar5 + 0x10);\n    arg1 = *(puVar5 + 0x18);\n    unaff_RDI = *(puVar5 + 0x20);\n    unaff_RSI = *(puVar5 + 0x28);\n    *0x20 = puVar5;\n    goto code_r0x0041c760;\n}\n",
        "token_count": 1527
    },
    "0044bd40": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint64_t fcn.0044bd40(void)\n\n{\n    char cVar1;\n    char *in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    \n    if (unaff_RBX == 0) {\n        return 0;\n    }\n    cVar1 = *in_RAX;\n    if (cVar1 == '-') {\n        unaff_RBX = unaff_RBX + -1;\n        in_RAX = in_RAX + (-unaff_RBX >> 0x3f & 1);\n    }\n    uVar2 = 0;\n    for (iVar3 = 0; iVar3 < unaff_RBX; iVar3 = iVar3 + 1) {\n        if (9 < in_RAX[iVar3] - 0x30U) {\n            return 0;\n        }\n        if (0x1999999999999999 < uVar2) {\n            return 0;\n        }\n        uVar4 = uVar2 * 10;\n        uVar2 = (in_RAX[iVar3] + uVar2 * 10) - 0x30;\n        if (uVar2 < uVar4) {\n            return 0;\n        }\n    }\n    if (cVar1 != '-') {\n        if (0x7fffffffffffffff < uVar2) {\n            return 0;\n        }\n        if (cVar1 != '-') goto code_r0x0044bdf9;\n    }\n    if (0x8000000000000000 < uVar2) {\n        return 0;\n    }\ncode_r0x0044bdf9:\n    if (cVar1 == '-') {\n        uVar2 = -uVar2;\n    }\n    return uVar2;\n}\n",
        "token_count": 395
    },
    "00456a60": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint64_t fcn.00456a60(void)\n\n{\n    int64_t in_RAX;\n    \n    if ((*(in_RAX + 0x14) & 1) != 0) {\n        switch(*(in_RAX + 0x17) & 0x1f) {\n        case 0x11:\n            return in_RAX + 0x48;\n        case 0x12:\n            return in_RAX + 0x40;\n        case 0x13:\n            return in_RAX + 0x38;\n        case 0x14:\n            return in_RAX + 0x50;\n        case 0x15:\n            return in_RAX + 0x58;\n        case 0x16:\n            return in_RAX + 0x38;\n        case 0x17:\n            return in_RAX + 0x38;\n        default:\n            return in_RAX + 0x30;\n        case 0x19:\n            return in_RAX + 0x50;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 233
    },
    "0048ae20": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nulong fcn.0048ae20(uint8_t *arg1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint8_t *in_RAX;\n    ulong uVar7;\n    uint8_t *puVar8;\n    uint8_t *unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    uint8_t *unaff_RDI;\n    int64_t unaff_R14;\n    \ncode_r0x0048ae20:\n    puVar9 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar9 = *0x20 + -0x58;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x18) = arg1;\ncode_r0x0048ae50:\n        if ((unaff_RBX == NULL) || (unaff_RDI == NULL)) {\n            if (unaff_RDI == unaff_RBX) {\n                *(*0x20 + -0x60) = 0x48aff9;\n                uVar7 = fcn.00402a00(unaff_RBX, unaff_RBX);\n            }\n            else {\n                uVar7 = 0;\n            }\n            return uVar7;\n        }\n        *(*0x20 + -0x28) = unaff_RDI;\n        *(*0x20 + -0x10) = arg1;\n        uVar4 = *in_RAX;\n        if (*in_RAX < 0x80) {\n            puVar8 = unaff_RBX + -1;\n            in_RAX = in_RAX + (-puVar8 >> 0x3f & 1);\n            unaff_RBX = unaff_RDI;\n        }\n        else {\n            *(*0x20 + -0x30) = unaff_RBX;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x60) = 0x48aea5;\n            uVar4 = fcn.00464da0();\n            arg1 = *(*0x20 + -0x30);\n            if (arg1 < unaff_RBX) goto code_r0x0048b02e;\n            puVar8 = arg1 + -unaff_RBX;\n            in_RAX = *(*0x20 + -0x18) + (unaff_RBX & -puVar8 >> 0x3f);\n            arg1 = *(*0x20 + -0x10);\n            unaff_RBX = *(*0x20 + -0x28);\n        }\n        *(*0x20 + -0x30) = puVar8;\n        *(*0x20 + -0x18) = in_RAX;\n        uVar5 = *arg1;\n        if (*arg1 < 0x80) {\n            unaff_RDI = unaff_RBX + -1;\n            arg1 = arg1 + (-unaff_RDI >> 0x3f & 1);\n            unaff_RBX = puVar8;\n        }\n        else {\n            *(*0x20 + -0x3c) = uVar4;\n            *(*0x20 + -0x60) = 0x48af15;\n            uVar5 = fcn.00464da0();\n            arg1 = *(*0x20 + -0x28);\n            if (arg1 < unaff_RBX) goto code_r0x0048b026;\n            unaff_RDI = arg1 + -unaff_RBX;\n            arg1 = *(*0x20 + -0x10) + (unaff_RBX & -unaff_RDI >> 0x3f);\n            in_RAX = *(*0x20 + -0x18);\n            unaff_RBX = *(*0x20 + -0x30);\n            uVar4 = *(*0x20 + -0x3c);\n        }\n        if (uVar4 != uVar5) {\n            uVar3 = uVar5;\n            if (uVar5 < uVar4) {\n                uVar3 = uVar4;\n                uVar4 = uVar5;\n            }\n            if (uVar3 < 0x80) {\n                if ((0x19 < uVar4 - 0x41) || (uVar3 != uVar4 + 0x20)) {\n                    return 0;\n                }\n            }\n            else {\n                *(*0x20 + -0x38) = unaff_RDI;\n                *(*0x20 + -0x40) = uVar3;\n                *(*0x20 + -0x20) = arg1;\n                *(*0x20 + -0x3c) = uVar4;\n                *(*0x20 + -0x60) = 0x48afaf;\n                iVar6 = fcn.00465540();\n                iVar1 = *(*0x20 + -0x3c);\n                iVar2 = *(*0x20 + -0x40);\n                while ((iVar6 != iVar1 && (iVar6 < iVar2))) {\n                    *(*0x20 + -0x60) = 0x48b008;\n                    iVar6 = fcn.00465540();\n                    iVar1 = *(*0x20 + -0x3c);\n                    iVar2 = *(*0x20 + -0x40);\n                }\n                if (iVar6 != iVar2) {\n                    return 0;\n                }\n                in_RAX = *(*0x20 + -0x18);\n                arg1 = *(*0x20 + -0x20);\n                unaff_RBX = *(*0x20 + -0x30);\n                unaff_RDI = *(*0x20 + -0x38);\n            }\n        }\n        goto code_r0x0048ae50;\n    }\n    goto code_r0x0048b037;\ncode_r0x0048b026:\n    *(*0x20 + -0x60) = 0x48b02e;\n    fcn.0045e300(arg1);\n    unaff_RDI = unaff_RBX;\ncode_r0x0048b02e:\n    *(*0x20 + -0x60) = 0x48b036;\n    in_RAX = fcn.0045e300(arg1);\ncode_r0x0048b037:\n    *(puVar9 + 8) = in_RAX;\n    *(puVar9 + 0x10) = unaff_RBX;\n    *(puVar9 + 0x18) = arg1;\n    *(puVar9 + 0x20) = unaff_RDI;\n    *(puVar9 + -8) = 0x48b050;\n    fcn.0045bb60();\n    in_RAX = *(puVar9 + 8);\n    unaff_RBX = *(puVar9 + 0x10);\n    arg1 = *(puVar9 + 0x18);\n    unaff_RDI = *(puVar9 + 0x20);\n    *0x20 = puVar9;\n    goto code_r0x0048ae20;\n}\n",
        "token_count": 1630
    },
    "00492ba0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint64_t fcn.00492ba0(void)\n\n{\n    int64_t in_RAX;\n    \n    if ((*(in_RAX + 0x14) & 1) != 0) {\n        switch(*(in_RAX + 0x17) & 0x1f) {\n        case 0x11:\n            return in_RAX + 0x48;\n        case 0x12:\n            return in_RAX + 0x40;\n        case 0x13:\n            return in_RAX + 0x38;\n        case 0x14:\n            return in_RAX + 0x50;\n        case 0x15:\n            return in_RAX + 0x58;\n        case 0x16:\n            return in_RAX + 0x38;\n        case 0x17:\n            return in_RAX + 0x38;\n        default:\n            return in_RAX + 0x30;\n        case 0x19:\n            return in_RAX + 0x50;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 233
    },
    "00404600": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.00404600(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    uint64_t *puVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    char cVar6;\n    uint32_t uVar7;\n    uint64_t uVar8;\n    uint64_t unaff_RSI;\n    int64_t iVar9;\n    uint64_t unaff_RDI;\n    uint64_t in_R8;\n    int64_t unaff_R14;\n    int64_t iStackX8;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.004602a0();\n        iStackX8 = in_RAX;\n    }\n    uVar8 = *(in_RAX + 8);\n    if (uVar8 == 0) {\n        return;\n    }\n    if (uVar8 <= arg1) {\n        return;\n    }\n    if (uVar8 - arg1 < unaff_RDI) {\n        unaff_RDI = uVar8 - arg1;\n    }\n    if ((*(in_RAX + 0x17) & 0x40) == 0) {\n        fcn.00404520(arg1);\n        return;\n    }\n    uVar7 = *(in_RAX + 0x17) & 0x1f;\n    uVar8 = uVar7;\n    cVar6 = uVar7;\n    if (cVar6 == '\\x11') {\n        iStackX8 = in_RAX;\n        for (uVar8 = 0; uVar8 <= *(in_RAX + 0x40) && *(in_RAX + 0x40) != uVar8; uVar8 = uVar8 + 1) {\n            if (arg1 <= **(in_RAX + 0x30) && **(in_RAX + 0x30) != arg1) {\n                fcn.00404600(arg1);\n                in_RAX = iStackX8;\n            }\n            uVar4 = **(in_RAX + 0x30);\n            uVar5 = arg1;\n            if (uVar4 < arg1) {\n                uVar5 = uVar4;\n            }\n            unaff_RSI = uVar4 - uVar5;\n            arg1 = arg1 - uVar5;\n            if (unaff_RDI <= unaff_RSI) {\n                return;\n            }\ncode_r0x00404765:\n            unaff_RDI = unaff_RDI - unaff_RSI;\n        }\n    }\n    else {\n        if (cVar6 != '\\x19') {\n            in_RAX = fcn.00433c80();\n            arg1 = in_R8;\n            goto code_r0x00404765;\n        }\n        iVar1 = *(in_RAX + 0x40);\n        iVar9 = *(in_RAX + 0x38);\n        if (iVar1 != 0) {\n            iVar3 = 0;\n            while( true ) {\n                puVar2 = *(iVar9 + 8);\n                if (arg1 <= *puVar2 && *puVar2 != arg1) {\n                    fcn.00404600(arg1);\n                }\n                uVar8 = *puVar2;\n                uVar4 = arg1;\n                if (uVar8 < arg1) {\n                    uVar4 = uVar8;\n                }\n                arg1 = arg1 - uVar4;\n                if (unaff_RDI <= uVar8 - uVar4) {\n                    return;\n                }\n                iVar3 = iVar3 + 1;\n                unaff_RDI = unaff_RDI - (uVar8 - uVar4);\n                if (iVar1 <= iVar3) break;\n                iVar9 = iVar9 + 0x18;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 875
    },
    "0040c760": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint64_t fcn.0040c760(void)\n\n{\n    code *pcVar1;\n    uchar auVar2 [16];\n    double dVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    double dVar5;\n    \n    if (in_RAX < 0x7000001) {\n        if (in_RAX == 0) {\n            return 0;\n        }\n    }\n    else {\n        in_RAX = 0x7000000;\n    }\n    uVar4 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n    auVar2 = ZEXT816(uVar4) * ZEXT816(uVar4 ^ 0xe7037ed1a0b428db);\n    *(*(unaff_R14 + 0x30) + 0xf0) = uVar4;\n    dVar3 = (((SUB164(auVar2, 0) ^ SUB164(auVar2 >> 0x40, 0)) << 0x1a) >> 0x20) + 1;\n    uVar4 = SUB124(ZEXT812(dVar3) >> 0x20, 0) >> 0xf & 0x1f;\n    dVar5 = *(uVar4 * 8 + 0x7996c0);\n    if (uVar4 + 1 < 0x21) {\n        dVar5 = (((dVar3 >> 0x34 & 0x7ff) - 0x3ff) + dVar5 +\n                *0x732798 * (dVar3 >> 0x1b & 0xfffff) * (*(uVar4 * 8 + 0x7996c8) - dVar5)) - *0x732800;\n        if (0.0 < dVar5) {\n            dVar5 = 0.0;\n        }\n        return dVar5 * in_RAX * *0x732850 + 1;\n    }\n    fcn.0045e260(0x21);\n    pcVar1 = swi(3);\n    uVar4 = (*pcVar1)();\n    return uVar4;\n}\n",
        "token_count": 502
    },
    "0044e360": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17",
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint64_t fcn.0044e360(int64_t arg1)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    uint64_t arg1_00;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    char cVar6;\n    int64_t *in_RAX;\n    int64_t iVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    ulong *unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uint64_t uVar11;\n    int64_t iVar12;\n    int64_t unaff_R14;\n    bool bVar13;\n    bool bVar14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x30 && *0x20 + -0x30 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0xb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar9 = (*(unaff_RBX + 0x17) & 0x1f) - 1;\n            *(*0x20 + 8) = in_RAX;\n            switch(iVar9) {\n            case 0:\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n            case 6:\n            case 7:\n            case 8:\n            case 9:\n            case 0xb:\n            case 0x15:\n            case 0x19:\n                uVar1 = *unaff_RBX;\n                iVar9 = in_RAX[6];\n                bVar14 = SBORROW8(*0x795388, iVar9);\n                iVar7 = *0x795388 - iVar9;\n                bVar13 = *0x795388 == iVar9;\n                if (iVar9 < *0x795388) {\n                    *(*0x20 + -0x30) = in_XMM15;\n                    *(*0x20 + -0x28) = in_XMM15;\n                    *(*0x20 + -0x18) = in_XMM15;\n                    *(*0x20 + -0x30) = 2;\n                    *(*0x20 + -0x28) = in_RAX[3] + arg1;\n                    *(*0x20 + -0x18) = in_RAX[6];\n                    *(*0x20 + -0x10) = uVar1;\n                    iVar8 = in_RAX[1];\n                    uVar11 = iVar8 + 1;\n                    iVar2 = *in_RAX;\n                    iVar7 = iVar2;\n                    iVar12 = *0x795388;\n                    if (in_RAX[2] < uVar11) {\n                        *(*0x20 + -0x60) = iVar9;\n                        *(*0x20 + -0x68) = *0x795388;\n                        *(*0x20 + -0xb8) = 0x44e585;\n                        iVar7 = fcn.00447360(iVar8);\n                        in_RAX = *(*0x20 + 8);\n                        in_RAX[2] = iVar8;\n                        if (*0x801c20 == 0) {\n                            *in_RAX = iVar7;\n                        }\n                        else {\n                            *(*0x20 + -0xb8) = 0x44e5a5;\n                            iVar7 = fcn.0045dda0(iVar8, uVar11, iVar9, iVar12);\n                        }\n                        iVar9 = *(*0x20 + -0x60);\n                        iVar12 = *(*0x20 + -0x68);\n                        iVar8 = iVar2;\n                    }\n                    in_RAX[1] = iVar8 + 1;\n                    *(iVar7 + iVar8 * 0x28) = *(*0x20 + -0x30);\n                    iVar7 = iVar7 + iVar8 * 0x28;\n                    uVar3 = *(*0x20 + -0x24);\n                    uVar4 = *(*0x20 + -0x20);\n                    uVar5 = *(*0x20 + -0x1c);\n                    *(iVar7 + 8) = *(*0x20 + -0x28);\n                    *(iVar7 + 0xc) = uVar3;\n                    *(iVar7 + 0x10) = uVar4;\n                    *(iVar7 + 0x14) = uVar5;\n                    uVar3 = *(*0x20 + -0x14);\n                    uVar4 = *(*0x20 + -0x10);\n                    uVar5 = *(*0x20 + -0xc);\n                    *(iVar7 + 0x18) = *(*0x20 + -0x18);\n                    *(iVar7 + 0x1c) = uVar3;\n                    *(iVar7 + 0x20) = uVar4;\n                    *(iVar7 + 0x24) = uVar5;\n                    in_RAX[6] = in_RAX[6] + 1;\n                    bVar14 = SBORROW8(iVar12, iVar9);\n                    iVar7 = iVar12 - iVar9;\n                    bVar13 = iVar12 == iVar9;\n                }\n                return in_RAX & 0xffffffffffffff00 | (!bVar13 && bVar14 == iVar7 < 0);\n            case 5:\n            case 10:\n                uVar1 = *unaff_RBX;\n                iVar9 = in_RAX[6];\n                bVar14 = SBORROW8(*0x795388, iVar9);\n                iVar7 = *0x795388 - iVar9;\n                bVar13 = *0x795388 == iVar9;\n                if (iVar9 < *0x795388) {\n                    *(*0x20 + -0x58) = in_XMM15;\n                    *(*0x20 + -0x50) = in_XMM15;\n                    *(*0x20 + -0x40) = in_XMM15;\n                    *(*0x20 + -0x58) = 2;\n                    *(*0x20 + -0x50) = in_RAX[3] + arg1;\n                    *(*0x20 + -0x40) = in_RAX[6];\n                    *(*0x20 + -0x38) = uVar1;\n                    iVar8 = in_RAX[1];\n                    uVar11 = iVar8 + 1;\n                    iVar2 = *in_RAX;\n                    iVar7 = iVar2;\n                    iVar12 = *0x795388;\n                    if (in_RAX[2] < uVar11) {\n                        *(*0x20 + -0x60) = iVar9;\n                        *(*0x20 + -0x68) = *0x795388;\n                        *(*0x20 + -0xb8) = 0x44e42e;\n                        iVar7 = fcn.00447360(iVar8);\n                        in_RAX = *(*0x20 + 8);\n                        in_RAX[2] = iVar8;\n                        if (*0x801c20 == 0) {\n                            *in_RAX = iVar7;\n                        }\n                        else {\n                            *(*0x20 + -0xb8) = 0x44e44d;\n                            iVar7 = fcn.0045dda0(iVar8, uVar11, iVar9, iVar12);\n                        }\n                        iVar9 = *(*0x20 + -0x60);\n                        iVar12 = *(*0x20 + -0x68);\n                        iVar8 = iVar2;\n                    }\n                    in_RAX[1] = iVar8 + 1;\n                    *(iVar7 + iVar8 * 0x28) = *(*0x20 + -0x58);\n                    iVar7 = iVar7 + iVar8 * 0x28;\n                    uVar3 = *(*0x20 + -0x4c);\n                    uVar4 = *(*0x20 + -0x48);\n                    uVar5 = *(*0x20 + -0x44);\n                    *(iVar7 + 8) = *(*0x20 + -0x50);\n                    *(iVar7 + 0xc) = uVar3;\n                    *(iVar7 + 0x10) = uVar4;\n                    *(iVar7 + 0x14) = uVar5;\n                    uVar3 = *(*0x20 + -0x3c);\n                    uVar4 = *(*0x20 + -0x38);\n                    uVar5 = *(*0x20 + -0x34);\n                    *(iVar7 + 0x18) = *(*0x20 + -0x40);\n                    *(iVar7 + 0x1c) = uVar3;\n                    *(iVar7 + 0x20) = uVar4;\n                    *(iVar7 + 0x24) = uVar5;\n                    in_RAX[6] = in_RAX[6] + 1;\n                    bVar14 = SBORROW8(iVar12, iVar9);\n                    iVar7 = iVar12 - iVar9;\n                    bVar13 = iVar12 == iVar9;\n                }\n                return in_RAX & 0xffffffffffffff00 | (!bVar13 && bVar14 == iVar7 < 0);\n            case 0x10:\n                if (unaff_RBX[8] == 1) {\n                    *(*0x20 + -0xb8) = 0x44e4bc;\n                    uVar11 = fcn.0044e360(arg1);\n                    return uVar11;\n                }\n                break;\n            case 0x18:\n                *(*0x20 + 0x18) = arg1;\n                *(*0x20 + 0x10) = unaff_RBX;\n                iVar9 = unaff_RBX[8];\n                *(*0x20 + -0x60) = iVar9;\n                uVar11 = 0;\n                while( true ) {\n                    if (iVar9 <= uVar11) {\n                        return 1;\n                    }\n                    iVar7 = unaff_RBX[7];\n                    arg1_00 = unaff_RBX[8];\n                    if (arg1_00 <= uVar11) break;\n                    *(*0x20 + -0x70) = uVar11;\n                    iVar9 = *(iVar7 + 0x10 + uVar11 * 0x18);\n                    *(*0x20 + -0xb8) = 0x44e665;\n                    cVar6 = fcn.0044e360(iVar9 + arg1);\n                    if (cVar6 == '\\0') {\n                        return 0;\n                    }\n                    uVar11 = *(*0x20 + -0x70) + 1;\n                    iVar9 = *(*0x20 + -0x60);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    arg1 = *(*0x20 + 0x18);\n                }\n                *(*0x20 + -0xb8) = 0x44e69b;\n                fcn.0045e240(arg1_00);\n            }\n            *(*0x20 + -0xb8) = 0x44e6a5;\n            fcn.004569c0();\n            arg1 = 0x16;\n            *(*0x20 + -0xb8) = 0x44e6cb;\n            fcn.0044af20(0x16, iVar9, 0x4b77b9, 0x37);\n            *(*0x20 + -0xb8) = 0x44e6d0;\n            unaff_RBX = fcn.00409de0();\n            *(*0x20 + -0xb8) = 0x44e6df;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + -8) = 0x44e6f4;\n        fcn.0045bb60();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        arg1 = *(puVar10 + 0x18);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 2724
    },
    "00457be0": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint64_t fcn.00457be0(uint32_t *arg1)\n\n{\n    uint16_t *puVar1;\n    uint16_t *puVar2;\n    uint8_t uVar3;\n    uint16_t uVar4;\n    uint16_t uVar5;\n    uint32_t uVar6;\n    char cVar7;\n    ulong in_RAX;\n    ulong uVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    int64_t iVar13;\n    int64_t iVar14;\n    ulong unaff_RBX;\n    uchar *puVar15;\n    uchar *unaff_RBP;\n    uint64_t uVar16;\n    int64_t in_R8;\n    uint64_t in_R9;\n    ulong arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar15 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xa0 && *0x20 + -0xa0 != *(unaff_R14 + 0x10)) {\n            puVar15 = *0x20 + -0x120;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x20) = arg1;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x128) = 0x457c48;\n            fcn.0040d560(*0x20 + -0x18);\n            if (arg1 != '\\0') {\n                return 1;\n            }\n            *(*0x20 + -0x18) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = *(*0x20 + 0x10);\n            *(*0x20 + -0x128) = 0x457c8c;\n            fcn.0040d7a0(*0x20 + -0x18);\n            iVar14 = *(*0x20 + 0x10);\n            if (*(*0x20 + 8) == iVar14) {\n                return 1;\n            }\n            uVar3 = *(*(*0x20 + 8) + 0x17);\n            if ((*(iVar14 + 0x17) & 0x1f) != (uVar3 & 0x1f)) {\n                return 0;\n            }\n            *(*0x20 + -0x105) = uVar3;\n            *(*0x20 + -0x106) = uVar3 & 0x1f;\n            *(*0x20 + -0x128) = 0x457cd6;\n            uVar8 = fcn.004569c0();\n            *(*0x20 + -0x28) = uVar8;\n            *(*0x20 + -0xb8) = uVar3;\n            *(*0x20 + -0x128) = 0x457cf0;\n            iVar9 = fcn.004569c0();\n            if (uVar3 != *(*0x20 + -0xb8)) {\n                return 0;\n            }\n            *(*0x20 + -0x128) = 0x457d0a;\n            cVar7 = fcn.00402a00(*(*0x20 + -0xb8), iVar14);\n            if (cVar7 == '\\0') {\n                return 0;\n            }\n            *(*0x20 + -0x128) = 0x457d2e;\n            uVar8 = fcn.00456a60();\n            *(*0x20 + -0x80) = uVar8;\n            *(*0x20 + -0x128) = 0x457d45;\n            iVar10 = fcn.00456a60();\n            arg1 = *(*0x20 + -0x80);\n            if (arg1 == NULL) {\n                if (iVar10 != 0) {\n                    return 0;\n                }\n            }\n            else {\n                if (iVar10 == 0) {\n                    return 0;\n                }\n                *(*0x20 + -0x88) = iVar10;\n                uVar6 = *arg1;\n                *(*0x20 + -0x128) = 0x457d93;\n                fcn.00456b80();\n                *(*0x20 + -0x128) = 0x457d98;\n                uVar8 = fcn.004572e0(arg1, iVar14, in_R8, in_R9);\n                *(*0x20 + -0x68) = uVar8;\n                *(*0x20 + -0xf0) = uVar6;\n                uVar6 = **(*0x20 + -0x88);\n                uVar11 = uVar6;\n                *(*0x20 + -0x128) = 0x457dbe;\n                fcn.00456b80();\n                *(*0x20 + -0x128) = 0x457dc5;\n                iVar9 = fcn.004572e0(uVar11, iVar14, in_R8, in_R9);\n                arg1 = *(*0x20 + -0xf0);\n                if (uVar6 != arg1) {\n                    return 0;\n                }\n                *(*0x20 + -0x128) = 0x457de5;\n                cVar7 = fcn.00402a00(arg1, iVar14);\n                if (cVar7 == '\\0') {\n                    return 0;\n                }\n            }\n            if (*(*0x20 + -0x106) - 1U < 0x10) {\n                return 1;\n            }\n            switch(*(*0x20 + -0x105) & 0x1f) {\n            case 0x11:\n                *(*0x20 + -0x128) = 0x457e45;\n                cVar7 = fcn.00457be0(*(*0x20 + -0x20));\n                if (cVar7 == '\\0') {\n                    uVar11 = 0;\n                }\n                else {\n                    uVar11 = *(*(*0x20 + 8) + 0x40) & 0xffffffffffffff00 |\n                             *(*(*0x20 + 0x10) + 0x40) == *(*(*0x20 + 8) + 0x40);\n                }\n                return uVar11 & 0xffffffff;\n            case 0x12:\n                if (*(*(*0x20 + 0x10) + 0x38) == *(*(*0x20 + 8) + 0x38)) {\n                    *(*0x20 + -0x128) = 0x457ead;\n                    uVar11 = fcn.00457be0(*(*0x20 + -0x20));\n                }\n                else {\n                    uVar11 = 0;\n                }\n                return uVar11;\n            case 0x13:\n                iVar14 = *(*0x20 + 8);\n                in_R8 = *(*0x20 + 0x10);\n                if (*(in_R8 + 0x32) != *(iVar14 + 0x32)) {\n                    return 0;\n                }\n                uVar4 = *(iVar14 + 0x30);\n                arg1 = uVar4;\n                uVar5 = *(in_R8 + 0x30);\n                if (uVar5 != uVar4) {\n                    return 0;\n                }\n                if ((*(iVar14 + 0x14) & 1) == 0) {\n                    iVar9 = 0x38;\n                }\n                else {\n                    iVar9 = 0x48;\n                }\n                in_R9 = iVar14 + iVar9;\n                if (arg1 < 0x100001) {\n                    if ((*(in_R8 + 0x14) & 1) == 0) {\n                        iVar9 = 0x38;\n                    }\n                    else {\n                        iVar9 = 0x48;\n                    }\n                    *(*0x20 + -0x102) = uVar4;\n                    *(*0x20 + -0x104) = uVar5;\n                    *(*0x20 + -0x98) = in_R9;\n                    *(*0x20 + -0xa0) = in_R8 + iVar9;\n                    uVar8 = *(*0x20 + -0x20);\n                    uVar11 = 0;\n                    while (uVar16 = uVar5,  uVar11 < arg1) {\n                        if (uVar16 <= uVar11) goto code_r0x004587ec;\n                        *(*0x20 + -0xd0) = uVar11;\n                        *(*0x20 + -0x128) = 0x458686;\n                        cVar7 = fcn.00457be0(uVar8);\n                        if (cVar7 == '\\0') {\n                            return 0;\n                        }\ncode_r0x00458625:\n                        arg1 = *(*0x20 + -0x102);\n                        uVar5 = *(*0x20 + -0x104);\n                        uVar8 = *(*0x20 + -0x20);\n                        in_R9 = *(*0x20 + -0x98);\n                        iVar14 = *(*0x20 + 8);\n                        in_R8 = *(*0x20 + 0x10);\n                        uVar11 = *(*0x20 + -0xd0) + 1;\n                    }\n                    if ((*(iVar14 + 0x14) & 1) == 0) {\n                        iVar9 = 0x38;\n                    }\n                    else {\n                        iVar9 = 0x48;\n                    }\n                    uVar16 = *(iVar14 + 0x30);\n                    uVar11 = (*(iVar14 + 0x32) & 0x7fff) + *(iVar14 + 0x30) & 0xffff;\n                    if (uVar16 <= uVar11) {\n                        iVar10 = uVar11 - uVar16;\n                        iVar14 = (uVar16 - 0x100000 >> 0x3f & uVar16 << 3) + iVar14 + iVar9;\n                        if ((*(in_R8 + 0x14) & 1) == 0) {\n                            iVar9 = 0x38;\n                        }\n                        else {\n                            iVar9 = 0x48;\n                        }\n                        puVar1 = in_R8 + 0x32;\n                        puVar2 = in_R8 + 0x30;\n                        uVar16 = *puVar2;\n                        in_R8 = in_R8 + iVar9;\n                        uVar11 = (*puVar1 & 0x7fff) + *puVar2 & 0xffff;\n                        if (uVar16 <= uVar11) {\n                            *(*0x20 + -0xf8) = iVar10;\n                            *(*0x20 + -0xa8) = iVar14;\n                            uVar11 = uVar11 - uVar16;\n                            *(*0x20 + -0x100) = uVar11;\n                            in_R9 = uVar16 - 0x100000 >> 0x3f;\n                            uVar16 = (uVar16 << 3 & in_R9) + in_R8;\n                            *(*0x20 + -0xb0) = uVar16;\n                            uVar12 = 0;\n                            while( true ) {\n                                if (iVar10 <= uVar12) {\n                                    return 1;\n                                }\n                                in_R8 = *(iVar14 + uVar12 * 8);\n                                if (uVar11 <= uVar12) break;\n                                *(*0x20 + -0xd8) = uVar12;\n                                *(*0x20 + -0x128) = 0x4587a5;\n                                cVar7 = fcn.00457be0(uVar8);\n                                if (cVar7 == '\\0') {\n                                    return 0;\n                                }\n                                uVar12 = *(*0x20 + -0xd8) + 1;\n                                iVar10 = *(*0x20 + -0xf8);\n                                uVar11 = *(*0x20 + -0x100);\n                                uVar8 = *(*0x20 + -0x20);\n                                uVar16 = *(*0x20 + -0xb0);\n                                iVar14 = *(*0x20 + -0xa8);\n                            }\n                            *(*0x20 + -0x128) = 0x4587d8;\n                            fcn.0045e240(uVar11);\n                        }\n                        *(*0x20 + -0x128) = 0x4587e5;\n                        fcn.0045e300(uVar11);\n                    }\n                    *(*0x20 + -0x128) = 0x4587ec;\n                    fcn.0045e300(uVar11);\ncode_r0x004587ec:\n                    arg1 = uVar16 & 0xffffffff;\n                    *(*0x20 + -0x128) = 0x4587f3;\n                    fcn.0045e240(arg1);\n                }\n                *(*0x20 + -0x128) = 0x4587fd;\n                fcn.0045e280(arg1, 0x100000);\n            default:\n                *(*0x20 + -0x128) = 0x458805;\n                fcn.00435540();\n                *(*0x20 + -0x128) = 0x458816;\n                fcn.00435e40();\n                *(*0x20 + -0x128) = 0x458825;\n                fcn.00435b40();\n                *(*0x20 + -0x128) = 0x45882a;\n                fcn.004357a0();\n                *(*0x20 + -0x128) = 0x45882f;\n                fcn.004355c0();\n                unaff_RBX = 0x1d;\n                *(*0x20 + -0x128) = 0x458845;\n                in_RAX = fcn.00433c80();\n                break;\n            case 0x14:\n                *(*0x20 + -0x128) = 0x457f7b;\n                uVar8 = fcn.004572e0(*(*0x20 + 8), iVar14, in_R8, in_R9);\n                *(*0x20 + -0x28) = uVar8;\n                *(*0x20 + -0xb8) = iVar9;\n                uVar8 = *(*(*0x20 + 0x10) + 0x30);\n                *(*0x20 + -0x128) = 0x457f9c;\n                fcn.004572e0(*(*0x20 + 0x10), uVar8, in_R8, in_R9);\n                if (iVar9 == *(*0x20 + -0xb8)) {\n                    *(*0x20 + -0x128) = 0x457fb6;\n                    cVar7 = fcn.00402a00(*(*0x20 + -0xb8), uVar8);\n                    if (cVar7 != '\\0') {\n                        iVar10 = *(*0x20 + 8);\n                        iVar14 = *(iVar10 + 0x40);\n                        iVar9 = *(*0x20 + 0x10);\n                        if (*(iVar9 + 0x40) != iVar14) {\n                            return 0;\n                        }\n                        *(*0x20 + -0xb8) = iVar14;\n                        uVar11 = 0;\n                        goto code_r0x00458435;\n                    }\n                }\n                return 0;\n            case 0x15:\n                *(*0x20 + -0x128) = 0x45802e;\n                cVar7 = fcn.00457be0(*(*0x20 + -0x20));\n                if (cVar7 == '\\0') {\n                    uVar11 = 0;\n                }\n                else {\n                    *(*0x20 + -0x128) = 0x45805b;\n                    uVar11 = fcn.00457be0(*(*0x20 + -0x20));\n                }\n                return uVar11;\n            case 0x16:\n                *(*0x20 + -0x128) = 0x458090;\n                uVar11 = fcn.00457be0(*(*0x20 + -0x20));\n                return uVar11;\n            case 0x17:\n                *(*0x20 + -0x128) = 0x4580c6;\n                uVar11 = fcn.00457be0(*(*0x20 + -0x20));\n                return uVar11;\n            case 0x18:\n            case 0x1a:\n                return 1;\n            case 0x19:\n                iVar14 = *(*(*0x20 + 0x10) + 0x40);\n                iVar9 = *(*0x20 + 8);\n                if (*(iVar9 + 0x40) != iVar14) {\n                    return 0;\n                }\n                *(*0x20 + -0x128) = 0x4580f9;\n                uVar8 = fcn.004572e0(*(*0x20 + 0x10), iVar14, in_R8, in_R9);\n                *(*0x20 + -0x28) = uVar8;\n                *(*0x20 + -0xb8) = iVar9;\n                uVar8 = *(*(*0x20 + 0x10) + 0x30);\n                *(*0x20 + -0x128) = 0x45811a;\n                fcn.004572e0(*(*0x20 + 0x10), uVar8, in_R8, in_R9);\n                if (iVar9 == *(*0x20 + -0xb8)) {\n                    *(*0x20 + -0x128) = 0x458135;\n                    cVar7 = fcn.00402a00(*(*0x20 + -0xb8), uVar8);\n                    if (cVar7 != '\\0') {\n                        iVar14 = *(*0x20 + 8);\n                        iVar9 = *(iVar14 + 0x40);\n                        *(*0x20 + -0xb8) = iVar9;\n                        iVar10 = *(*0x20 + 0x10);\n                        uVar11 = 0;\n                        goto code_r0x00458213;\n                    }\n                }\n                return 0;\n            }\n        }\n        *(puVar15 + 8) = in_RAX;\n        *(puVar15 + 0x10) = unaff_RBX;\n        *(puVar15 + 0x18) = arg1;\n        *(puVar15 + -8) = 0x45885a;\n        fcn.0045bb60();\n        in_RAX = *(puVar15 + 8);\n        unaff_RBX = *(puVar15 + 0x10);\n        arg1 = *(puVar15 + 0x18);\n        *0x20 = puVar15;\n    } while( true );\ncode_r0x00458213:\n    if (iVar9 <= uVar11) {\n        return 1;\n    }\n    uVar8 = *(iVar14 + 0x38);\n    uVar16 = *(iVar14 + 0x40);\n    if (uVar16 <= uVar11) {\ncode_r0x00458413:\n        *(*0x20 + -0x128) = 0x458418;\n        fcn.0045e240(uVar16);\n        goto code_r0x00458418;\n    }\n    iVar13 = uVar11 * 3;\n    arg4 = *(iVar10 + 0x38);\n    uVar16 = *(iVar10 + 0x40);\n    if (uVar16 <= uVar11) {\n        *(*0x20 + -0x128) = 0x458413;\n        fcn.0045e240(uVar16);\n        goto code_r0x00458413;\n    }\n    *(*0x20 + -0xc0) = iVar13;\n    *(*0x20 + -0x30) = arg4;\n    *(*0x20 + -0x38) = uVar8;\n    *(*0x20 + -0xe8) = uVar11;\n    *(*0x20 + -0x128) = 0x45826c;\n    uVar8 = fcn.004572e0(uVar16, iVar14, iVar13, arg4);\n    *(*0x20 + -0x28) = uVar8;\n    *(*0x20 + -200) = iVar9;\n    uVar8 = *(*0x20 + -0x30);\n    *(*0x20 + -0x128) = 0x458292;\n    fcn.004572e0(*(*0x20 + -0xc0), uVar8, iVar13, arg4);\n    if (iVar9 != *(*0x20 + -200)) {\n        return 0;\n    }\n    *(*0x20 + -0x128) = 0x4582b9;\n    cVar7 = fcn.00402a00(*(*0x20 + -200), uVar8);\n    if (cVar7 == '\\0') {\n        return 0;\n    }\n    iVar14 = *(*(*0x20 + -0x30) + 8 + *(*0x20 + -0xc0) * 8);\n    *(*0x20 + -0x128) = 0x4582f4;\n    cVar7 = fcn.00457be0(*(*0x20 + -0x20));\n    if (cVar7 == '\\0') {\n        return 0;\n    }\n    *(*0x20 + -0x128) = 0x458312;\n    uVar8 = fcn.004573a0(*(*0x20 + -0xc0), *(*0x20 + -0x38), iVar13, arg4);\n    *(*0x20 + -0x28) = uVar8;\n    *(*0x20 + -200) = iVar14;\n    uVar8 = *(*0x20 + -0x30);\n    *(*0x20 + -0x128) = 0x458338;\n    fcn.004573a0(*(*0x20 + -0xc0), uVar8, iVar13, arg4);\n    if (iVar14 != *(*0x20 + -200)) {\n        return 0;\n    }\n    *(*0x20 + -0x128) = 0x458355;\n    cVar7 = fcn.00402a00(*(*0x20 + -200), uVar8);\n    if (cVar7 == '\\0') {\n        return 0;\n    }\n    iVar14 = *(*0x20 + -0xc0);\n    if (*(*(*0x20 + -0x30) + 0x10 + iVar14 * 8) != *(*(*0x20 + -0x38) + 0x10 + iVar14 * 8)) {\n        return 0;\n    }\n    if (((**(*(*0x20 + -0x30) + iVar14 * 8) & 8) != 0) != ((**(*(*0x20 + -0x38) + iVar14 * 8) & 8) != 0)) {\n        return 0;\n    }\n    uVar11 = *(*0x20 + -0xe8) + 1;\n    iVar9 = *(*0x20 + -0xb8);\n    iVar10 = *(*0x20 + 0x10);\n    iVar14 = *(*0x20 + 8);\n    goto code_r0x00458213;\ncode_r0x00458435:\n    if (iVar14 <= uVar11) {\n        return 1;\n    }\n    iVar14 = *(iVar10 + 0x38);\n    uVar16 = *(iVar10 + 0x40);\n    if (uVar16 <= uVar11) {\ncode_r0x00458620:\n        *(*0x20 + -0x128) = 0x458625;\n        fcn.0045e240(uVar16);\n        goto code_r0x00458625;\n    }\n    iVar10 = iVar14 + uVar11 * 8;\n    uVar8 = *(iVar9 + 0x38);\n    uVar16 = *(iVar9 + 0x40);\n    if (uVar16 <= uVar11) {\n        *(*0x20 + -0x128) = 0x45861d;\n        fcn.0045e240(uVar16);\n        goto code_r0x00458620;\n    }\n    *(*0x20 + -0xe0) = uVar11;\n    *(*0x20 + -0x78) = iVar10;\n    *(*0x20 + -0x40) = uVar8;\n    *(*0x20 + -0x48) = iVar14;\n    *(*0x20 + -0x128) = 0x458492;\n    uVar8 = fcn.00456b80();\n    *(*0x20 + -0x50) = uVar8;\n    iVar9 = *(*0x20 + -0xe0);\n    iVar13 = *(*0x20 + -0x40);\n    *(*0x20 + -0x90) = iVar13 + iVar9 * 8;\n    uVar16 = *(iVar13 + iVar9 * 8);\n    *(*0x20 + -0x128) = 0x4584be;\n    uVar8 = fcn.00456b80();\n    *(*0x20 + -0x58) = uVar8;\n    *(*0x20 + -0x128) = 0x4584d3;\n    uVar8 = fcn.004572e0(iVar9, iVar13, iVar14, iVar10);\n    *(*0x20 + -0x60) = uVar8;\n    *(*0x20 + -0xc0) = uVar16;\n    *(*0x20 + -0x128) = 0x4584ed;\n    iVar9 = fcn.004572e0(iVar9, iVar13, iVar14, iVar10);\n    uVar11 = *(*0x20 + -0xc0);\n    if (uVar16 != uVar11) {\n        return 0;\n    }\n    *(*0x20 + -0x128) = 0x45850b;\n    cVar7 = fcn.00402a00(uVar11, iVar13);\n    if (cVar7 == '\\0') {\n        return 0;\n    }\n    *(*0x20 + -0x128) = 0x458525;\n    uVar8 = fcn.004574a0(uVar11, iVar13, iVar14, iVar10);\n    *(*0x20 + -0x28) = uVar8;\n    *(*0x20 + -0xc0) = iVar9;\n    *(*0x20 + -0x128) = 0x45853f;\n    fcn.004574a0(uVar11, iVar13, iVar14, iVar10);\n    if (iVar9 != *(*0x20 + -0xc0)) {\n        return 0;\n    }\n    *(*0x20 + -0x128) = 0x45855d;\n    cVar7 = fcn.00402a00(*(*0x20 + -0xc0), iVar13);\n    if (cVar7 == '\\0') {\n        return 0;\n    }\n    *(*0x20 + -0x128) = 0x458585;\n    uVar8 = fcn.00456e20();\n    *(*0x20 + -0x70) = uVar8;\n    *(*0x20 + -0x128) = 0x4585ab;\n    fcn.00456e20();\n    *(*0x20 + -0x128) = 0x4585c5;\n    cVar7 = fcn.00457be0(*(*0x20 + -0x20));\n    if (cVar7 == '\\0') {\n        return 0;\n    }\ncode_r0x00458418:\n    uVar11 = *(*0x20 + -0xe0) + 1;\n    iVar14 = *(*0x20 + -0xb8);\n    iVar9 = *(*0x20 + 0x10);\n    iVar10 = *(*0x20 + 8);\n    goto code_r0x00458435;\n}\n",
        "token_count": 6329
    },
    "00441d40": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint64_t fcn.00441d40(void)\n\n{\n    int32_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        iVar2 = *0x7ae560;\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x7ae570 == 0) {\n                return 0;\n            }\n            if (*0x8019f0 != 0) {\n                if (*0x8019f0 == -1) {\n                    iVar1 = -*0x7ae570;\n                }\n                else {\n                    iVar1 = *0x7ae570 / *0x8019f0;\n                }\n                iVar3 = iVar1 + 1;\n                if (*0x7ae570 < iVar1 + 1) {\n                    iVar3 = *0x7ae570;\n                }\n                if ((0 < unaff_EBX) && (unaff_EBX < iVar3)) {\n                    iVar3 = unaff_EBX;\n                }\n                if (0x80 < iVar3) {\n                    iVar3 = 0x80;\n                }\n                *0x7ae570 = *0x7ae570 - iVar3;\n                if ((*0x7ae560 != 0) && (*0x7ae560 = *(*0x7ae560 + 0xa0),  *0x7ae560 == 0)) {\n                    *0x7ae568 = 0;\n                }\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x18) = in_RAX;\n                while( true ) {\n                    if (iVar3 + -1 < 1) break;\n                    *(*0x20 + -0x1c) = iVar3 + -1;\n                    if ((*0x7ae560 != 0) && (*0x7ae560 = *(*0x7ae560 + 0xa0),  *0x7ae560 == 0)) {\n                        *0x7ae568 = 0;\n                    }\n                    *(*0x20 + -0x40) = 0x441e07;\n                    fcn.004422c0(0);\n                    iVar3 = *(*0x20 + -0x1c);\n                    iVar2 = *(*0x20 + -0x10);\n                }\n                return iVar2;\n            }\n            *(*0x20 + -0x40) = 0x441e5b;\n            in_RAX = fcn.00432100();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + -8) = 0x441e6a;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 765
    },
    "0044da20": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.0044da20(ulong arg1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    ulong uVar3;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (in_RAX != 0) {\n        uVar1 = fcn.0044d160(*(in_RAX + 0x14));\n        iVar2 = fcn.0044d160(*(in_RAX + 0x18));\n        if (((uVar1 != 0xffffffff) && (iVar2 != -1)) && (*(unaff_RBX + 0x40) != uVar1 && uVar1 <= *(unaff_RBX + 0x40)))\n        {\n            uVar3 = fcn.0044d940(uVar1);\n            return uVar3;\n        }\n        return 0x4aebe4;\n    }\n    return 0x4aebe4;\n}\n",
        "token_count": 264
    },
    "00456e20": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint64_t fcn.00456e20(ulong param_1, int64_t param_2)\n\n{\n    uint64_t in_RAX;\n    uint64_t *puVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint32_t unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((unaff_EBX == 0) || (unaff_EBX == 0xffffffff)) {\n                return 0;\n            }\n            for (iVar2 = 0x79ae80; iVar2 != 0; iVar2 = *(iVar2 + 0x220)) {\n                if ((*(iVar2 + 0x118) < in_RAX || *(iVar2 + 0x118) == in_RAX) &&\n                   (in_RAX <= *(iVar2 + 0x120) && *(iVar2 + 0x120) != in_RAX)) goto code_r0x00456e7c;\n            }\n            iVar2 = 0;\ncode_r0x00456e7c:\n            *(*0x20 + 0x10) = unaff_EBX;\n            if (iVar2 == 0) {\n                *(*0x20 + -0x38) = in_RAX;\n                *(*0x20 + -0x58) = 0x456efc;\n                fcn.0040a460();\n                *(*0x20 + -0x58) = 0x456f13;\n                puVar1 = fcn.0040e660(*(*0x20 + 0x10));\n                uVar3 = *puVar1;\n                *(*0x20 + -0x20) = uVar3;\n                *(*0x20 + -0x58) = 0x456f2a;\n                fcn.0040a680();\n                if (*(*0x20 + -0x20) != 0) {\n                    return *(*0x20 + -0x20);\n                }\n                *(*0x20 + -0x58) = 0x456f39;\n                fcn.00435540();\n                *(*0x20 + -0x58) = 0x456f4a;\n                fcn.00435e40();\n                *(*0x20 + -0x58) = 0x456f56;\n                fcn.00435ca0();\n                *(*0x20 + -0x58) = 0x456f67;\n                fcn.00435e40();\n                *(*0x20 + -0x58) = 0x456f71;\n                fcn.00435ca0();\n                *(*0x20 + -0x58) = 0x456f85;\n                fcn.00435e40();\n                *(*0x20 + -0x58) = 0x456f8a;\n                fcn.004355c0();\n                iVar2 = 0x79ae80;\n                while (iVar2 != 0) {\n                    *(*0x20 + -0x18) = iVar2;\n                    uVar3 = *(iVar2 + 0x118);\n                    *(*0x20 + -0x28) = uVar3;\n                    param_2 = *(iVar2 + 0x120);\n                    *(*0x20 + -0x30) = param_2;\n                    *(*0x20 + -0x58) = 0x456fbf;\n                    fcn.00435540();\n                    *(*0x20 + -0x58) = 0x456fd0;\n                    fcn.00435e40();\n                    *(*0x20 + -0x58) = 0x456fda;\n                    fcn.00435ca0();\n                    *(*0x20 + -0x58) = 0x456feb;\n                    fcn.00435e40();\n                    *(*0x20 + -0x58) = 0x456ff5;\n                    fcn.00435ca0();\n                    *(*0x20 + -0x58) = 0x456ffa;\n                    fcn.004357a0();\n                    *(*0x20 + -0x58) = 0x456fff;\n                    fcn.004355c0();\n                    iVar2 = *(*(*0x20 + -0x18) + 0x220);\n                }\n                *(*0x20 + -0x58) = 0x457025;\n                fcn.00433c80();\n            }\n            else {\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x58) = 0x456ea5;\n                puVar1 = fcn.0040e660(unaff_EBX);\n                if (*puVar1 != 0) {\n                    return *puVar1;\n                }\n                param_2 = *(*(*0x20 + -0x10) + 0x118);\n                uVar3 = *(*(*0x20 + -0x10) + 0x120);\n                if (param_2 + *(*0x20 + 0x10) <= uVar3) {\n                    return param_2 + *(*0x20 + 0x10);\n                }\n            }\n            *(*0x20 + -0x28) = param_2;\n            *(*0x20 + -0x30) = uVar3;\n            *(*0x20 + -0x58) = 0x457034;\n            fcn.00435540();\n            *(*0x20 + -0x58) = 0x457045;\n            fcn.00435e40();\n            *(*0x20 + -0x58) = 0x457051;\n            fcn.00435ca0();\n            *(*0x20 + -0x58) = 0x457065;\n            fcn.00435e40();\n            *(*0x20 + -0x58) = 0x45706f;\n            fcn.00435ca0();\n            *(*0x20 + -0x58) = 0x457085;\n            fcn.00435e40();\n            *(*0x20 + -0x58) = 0x45708f;\n            fcn.00435ca0();\n            *(*0x20 + -0x58) = 0x457094;\n            fcn.004357a0();\n            *(*0x20 + -0x58) = 0x457099;\n            fcn.004355c0();\n            unaff_EBX = 0x21;\n            *(*0x20 + -0x58) = 0x4570aa;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + -8) = 0x4570b9;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1661
    },
    "00470160": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.00470160(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = unaff_RBX;\n            *(*0x20 + -0x20) = arg1;\n            *(*0x20 + -0x28) = *0x7ad538;\n            *(*0x20 + -0x60) = 0x470199;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x60) = 0x4701cf;\n                uVar2 = fcn.0045a7a0(iVar1);\n                if (((uVar2 == -1) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x30) = uVar2;\n                    *(*0x20 + -0x60) = 0x47020f;\n                    fcn.00409d60();\n                    uVar2 = *(*0x20 + -0x30);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x60) = 0x470245;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x47025a;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 583
    },
    "00420520": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nuint64_t fcn.00420520(void)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    uint64_t uVar3;\n    uint32_t uVar4;\n    code *pcVar5;\n    uint64_t *in_RAX;\n    uint64_t uVar6;\n    int32_t iVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    \n    uVar6 = *in_RAX;\n    uVar8 = uVar6;\n    if (uVar6 < 0) {\n        uVar8 = -uVar6;\n    }\n    if (*0x7953b8 == uVar8 - 0x800000000000) {\n        return 0;\n    }\n    uVar9 = uVar8 >> 0x19;\n    while( true ) {\n        iVar7 = uVar9;\n        if (iVar7 < *(in_RAX + 4)) {\n            do {\n                uVar6 = *in_RAX;\n                if (uVar6 < 0) {\n                    return 0;\n                }\n                LOCK();\n                uVar8 = *in_RAX;\n                *in_RAX = *in_RAX ^ (uVar6 == uVar8) * (*in_RAX ^ *0x7953b8 + 0x800000000000U);\n            } while (uVar6 != uVar8);\n            return 0;\n        }\n        if (in_RAX[2] <= iVar7) break;\n        uVar2 = *(in_RAX[1] + iVar7);\n        if (uVar2 != 0) {\n            uVar1 = uVar2 + uVar2 + 1;\n            uVar4 = 0x1f;\n            if (uVar1 != 0) {\n                for (; uVar1 >> uVar4 == 0; uVar4 = uVar4 - 1) {\n                }\n            }\n            uVar9 = (uVar4 + iVar7 * 8) - 1;\n            if (uVar9 != uVar8 >> 0x16) {\n                if (uVar6 < 0) {\n                    LOCK();\n                    *in_RAX = *in_RAX ^ (-*in_RAX == uVar8) * (*in_RAX ^ uVar9 * 0x400000 + 0x3fe000);\n                }\n                else {\n                    uVar6 = uVar9 * 0x400000 + 0x3fe000;\n                    do {\n                        uVar8 = *in_RAX;\n                        if (uVar8 < uVar6) {\n                            return uVar9;\n                        }\n                        LOCK();\n                        uVar3 = *in_RAX;\n                        *in_RAX = *in_RAX ^ (uVar8 == uVar3) * (*in_RAX ^ uVar6);\n                    } while (uVar8 != uVar3);\n                }\n                return uVar9;\n            }\n            return uVar9;\n        }\n        uVar9 = iVar7 - 1;\n    }\n    fcn.0045e240(in_RAX[2]);\n    pcVar5 = swi(3);\n    uVar6 = (*pcVar5)();\n    return uVar6;\n}\n",
        "token_count": 706
    },
    "00424420": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nvoid fcn.00424420(uint64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    uint64_t unaff_RBX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    ulong unaff_RDI;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    \n    uVar2 = unaff_RBX + 0x800000000000 >> 0x2a;\n    if (0x3f < uVar2) {\ncode_r0x004244f9:\n        fcn.0045e260(0x40);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    iVar3 = *(*(in_RAX + 0x10190 + uVar2 * 8) + (unaff_RBX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n    uVar2 = 0;\n    do {\n        if (arg1 <= uVar2) {\n            return;\n        }\n        uVar6 = (unaff_RBX >> 0xd) + uVar2 & 0x1ff;\n        if (uVar6 == 0) {\n            uVar4 = uVar2 * 0x2000 + unaff_RBX + 0x800000000000;\n            uVar5 = uVar4 >> 0x2a;\n            if (0x3f < uVar5) {\n                fcn.0045e260(0x40);\n                goto code_r0x004244f9;\n            }\n            iVar3 = *(*(in_RAX + 0x10190 + uVar5 * 8) + (uVar4 >> 0x16 & 0xfffff) * 8);\n        }\n        *(iVar3 + 0x20000 + uVar6 * 8) = unaff_RDI;\n        uVar2 = uVar2 + 1;\n    } while( true );\n}\n",
        "token_count": 452
    },
    "00424520": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nuint64_t fcn.00424520(int64_t arg1)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t in_RAX;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    int64_t unaff_RBX;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t in_R10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        uVar5 = in_R10;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar5 = 0;\n            while( true ) {\n                uVar4 = uVar5;\n                if (arg1 == 0) {\n                    return uVar5;\n                }\n                uVar8 = unaff_RBX + 0x800000000000U >> 0x2a;\n                uVar5 = in_R10;\n                if (0x3f < uVar8) break;\n                iVar2 = *(*(in_RAX + 0x10190 + uVar8 * 8) + (unaff_RBX + 0x800000000000U >> 0x16 & 0xfffff) * 8);\n                uVar9 = *(iVar2 + 0x210c8);\n                uVar6 = unaff_RBX & 0x3fffff;\n                uVar8 = arg1 * 0x2000 + uVar6;\n                uVar5 = in_R10 & 0xffffff00 | uVar6 < uVar9 | uVar4;\n                if (0x400000 < uVar8) {\n                    uVar8 = 0x400000;\n                }\n                while (uVar9 < uVar8) {\n                    LOCK();\n                    puVar1 = iVar2 + 0x210c8;\n                    uVar3 = *puVar1;\n                    *puVar1 = *puVar1 ^ (uVar9 == uVar3) * (*puVar1 ^ uVar8);\n                    if (uVar9 == uVar3) break;\n                    uVar9 = *(iVar2 + 0x210c8);\n                    if ((uVar9 <= uVar8) && (uVar6 < uVar9)) {\n                        unaff_RBX = 0x33;\n                        *(*0x20 + -0x20) = 0x42462c;\n                        fcn.00433c80();\n                        goto code_r0x0042462c;\n                    }\n                }\n                unaff_RBX = (uVar8 - uVar6) + unaff_RBX;\n                arg1 = arg1 - (uVar8 - uVar6 >> 0xd);\n                in_R10 = uVar5;\n            }\ncode_r0x0042462c:\n            arg1 = 0x40;\n            *(*0x20 + -0x20) = 0x424639;\n            in_RAX = fcn.0045e260(0x40);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x42464e;\n        fcn.0045bb60();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n        in_R10 = uVar5;\n    } while( true );\n}\n",
        "token_count": 901
    },
    "00426c00": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nvoid fcn.00426c00(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    char cVar3;\n    uint8_t uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t unaff_RBX;\n    uint64_t uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uchar unaff_SIL;\n    uint64_t unaff_RDI;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    int64_t iVar12;\n    uint64_t noname_1;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x38 && *0x20 + -0x38 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0xb8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar10 = unaff_RBX + 0x800000000000;\n            *(*0x20 + -0x20) = uVar10;\n            uVar11 = uVar10 >> 0x16;\n            *(*0x20 + -0x28) = uVar11;\n            uVar9 = arg1 * 0x2000 + unaff_RBX + 0x7fffffffffff;\n            *(*0x20 + -0x30) = uVar9;\n            uVar9 = uVar9 >> 0x16;\n            if (uVar9 == uVar11) {\n                uVar5 = *(in_RAX + 0x68);\n                noname_1 = *(in_RAX + 0x60);\n                uVar7 = unaff_RBX;\n                if (uVar5 <= uVar11) goto code_r0x00427025;\n                noname_1 = *(noname_1 + uVar11 * 8);\n                if (0x1fff < uVar10 >> 0x23) goto code_r0x00427018;\n                *(*0x20 + -0x90) = noname_1;\n                iVar1 = *(in_RAX + 0x78 + (uVar10 >> 0x23) * 8);\n                *(*0x20 + -0xc0) = 0x426e0f;\n                iVar1 = fcn.0042a140(iVar1 + (uVar11 & 0x1fff) * 0x80, noname_1, uVar9);\n                if (iVar1 == *(*0x20 + -0x90)) {\n                    return;\n                }\n                iVar6 = *(*0x20 + 8);\n                uVar11 = *(iVar6 + 0x68);\n                uVar9 = *(iVar6 + 0x60);\n                if (uVar11 <= *(*0x20 + -0x28)) goto code_r0x00427010;\n                *(uVar9 + *(*0x20 + -0x28) * 8) = iVar1;\n                goto code_r0x00426e52;\n            }\n            *(*0x20 + -0x38) = uVar9;\n            if (unaff_RDI != '\\0') {\n                uVar5 = *(in_RAX + 0x68);\n                unaff_RBX = *(in_RAX + 0x60);\n                if (uVar10 >> 0x23 < 0x2000) {\n                    *(*0x20 + 0x21) = unaff_SIL;\n                    *(*0x20 + -0x80) = uVar5;\n                    *(*0x20 + -0x10) = unaff_RBX;\n                    iVar1 = *(in_RAX + 0x78 + (uVar10 >> 0x23) * 8);\n                    *(*0x20 + -0xc0) = 0x426cff;\n                    uVar2 = fcn.0042a140(iVar1 + (uVar11 & 0x1fff) * 0x80, uVar5, uVar9);\n                    uVar11 = *(*0x20 + -0x80);\n                    uVar5 = *(*0x20 + -0x28);\n                    if (uVar5 < uVar11) {\n                        *(*(*0x20 + -0x10) + uVar5 * 8) = uVar2;\n                        unaff_RDI = *(*0x20 + 8);\n                        uVar11 = *(unaff_RDI + 0x70);\n                        unaff_RBX = *(*0x20 + -0x38);\n                        if (unaff_RBX <= uVar11) {\n                            if (uVar5 + 1 <= unaff_RBX) {\n                                iVar1 = ((uVar5 + 1) * 8 & -((uVar11 - uVar5) + -1) >> 0x3f) + *(unaff_RDI + 0x60);\n                                uVar7 = (unaff_RBX - uVar5) - 1;\n                                noname_1 = *(*0x20 + 0x21);\n                                if (*(*0x20 + 0x21) != 0) {\n                                    if (uVar7 == 0) goto code_r0x0042702d;\n                                    uVar7 = uVar7 * 8;\n                                    *(*0x20 + -0xc0) = 0x426d9d;\n                                    fcn.0045e8c0();\n                                    unaff_RDI = *(*0x20 + 8);\n                                    unaff_RBX = *(*0x20 + -0x38);\n                                    goto code_r0x0042702d;\n                                }\n                                noname_1 = 0;\n                                goto code_r0x004270b6;\n                            }\n                            *(*0x20 + -0xc0) = 0x4270cd;\n                            fcn.0045e320(unaff_RBX);\n                        }\n                        uVar5 = uVar11;\n                        *(*0x20 + -0xc0) = 0x4270d8;\n                        uVar11 = unaff_RBX;\n                        fcn.0045e2e0(unaff_RBX, uVar5);\n                    }\n                    *(*0x20 + -0xc0) = 0x4270e5;\n                    fcn.0045e260(uVar11);\n                }\n                uVar11 = 0x2000;\n                *(*0x20 + -0xc0) = 0x4270f2;\n                uVar2 = fcn.0045e260(0x2000);\n                goto code_r0x004270f2;\n            }\n            uVar5 = *(in_RAX + 0x68);\n            *(*0x20 + -0x88) = uVar5;\n            *(*0x20 + -0x18) = *(in_RAX + 0x60);\n            while( true ) {\n                unaff_SIL = uVar5;\n                if (uVar9 < uVar11) goto code_r0x00427083;\n                if (0x1fff < uVar11 >> 0xd) goto code_r0x00427179;\n                *(*0x20 + -0x50) = uVar11;\n                iVar1 = *(in_RAX + 0x78 + (uVar11 >> 0xd) * 8);\n                iVar6 = (uVar11 & 0x1fff) * 0x80;\n                *(*0x20 + -0xc0) = 0x42715f;\n                uVar2 = fcn.0042a140(iVar1 + iVar6, iVar6, uVar9);\n                uVar11 = *(*0x20 + -0x50);\n                uVar5 = *(*0x20 + -0x88);\n                if (uVar5 <= uVar11) break;\ncode_r0x004270f2:\n                *(*(*0x20 + -0x18) + uVar11 * 8) = uVar2;\n                uVar11 = uVar11 + 1;\n                uVar9 = *(*0x20 + -0x38);\n                in_RAX = *(*0x20 + 8);\n            }\n            *(*0x20 + -0xc0) = 0x427179;\n            fcn.0045e260(uVar5);\ncode_r0x00427179:\n            arg1 = 0x2000;\n            *(*0x20 + -0xc0) = 0x427186;\n            in_RAX = fcn.0045e260(0x2000);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        puVar8[0x20] = unaff_RDI;\n        puVar8[0x21] = unaff_SIL;\n        *(puVar8 + -8) = 0x4271a5;\n        fcn.0045bb60();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        unaff_RDI = puVar8[0x20];\n        unaff_SIL = puVar8[0x21];\n        *0x20 = puVar8;\n    } while( true );\ncode_r0x00427083:\n    iVar6 = *(*0x20 + 8);\ncode_r0x00426e52:\n    uVar10 = *(*0x20 + -0x20);\n    unaff_RBX = *(*0x20 + -0x30);\n    iVar1 = 3;\n    cVar3 = '\\x01';\ncode_r0x00426e77:\n    if ((iVar1 < 0) || (cVar3 == '\\0')) {\n        return;\n    }\n    *(*0x20 + -0x68) = iVar1;\n    uVar11 = *(iVar1 * 8 + 0x796840);\n    uVar9 = -(uVar11 < 0x40);\n    uVar5 = *(iVar1 * 8 + 0x7967c8);\n    *(*0x20 + -0x70) = uVar5;\n    unaff_RDI = *(iVar1 * 8 + 0x796808);\n    *(*0x20 + -0x78) = unaff_RDI;\n    uVar4 = uVar11;\n    uVar11 = uVar10 >> (uVar4 & 0x3f) & uVar9;\n    iVar12 = (unaff_RBX >> (uVar4 & 0x3f) & uVar9) + 1;\n    *(*0x20 + -0x58) = iVar12;\n    cVar3 = '\\0';\n    while( true ) {\n        if (iVar12 <= uVar11) goto code_r0x00426e6e;\n        *(*0x20 + -0x60) = uVar11;\n        *(*0x20 + -0x91) = cVar3;\n        noname_1 = *(iVar6 + 0x28 + iVar1 * 0x18);\n        uVar9 = uVar11 << (uVar5 & 0x3f) & -(uVar5 < 0x40);\n        *(*0x20 + -0x40) = *(*0x20 + -0x60) + 1;\n        uVar11 = *(*0x20 + -0x60) + 1 << (uVar5 & 0x3f) & -(uVar5 < 0x40);\n        if (noname_1 < uVar11) break;\n        if (uVar11 < uVar9) {\ncode_r0x00426ff7:\n            *(*0x20 + -0xc0) = 0x427005;\n            fcn.0045e300(uVar11);\n            break;\n        }\n        *(*0x20 + -0x48) = iVar1 * 3;\n        iVar1 = noname_1 - uVar9;\n        unaff_RBX = uVar11 - uVar9;\n        noname_1 = -iVar1 >> 0x3f;\n        *(*0x20 + -0xc0) = 0x426fad;\n        uVar11 = unaff_RBX;\n        iVar12 = fcn.00428980(iVar1, uVar10, uVar9 << 3 & noname_1);\n        iVar6 = *(*0x20 + 8);\n        uVar10 = *(iVar6 + 8 + *(*0x20 + -0x48) * 8);\n        iVar1 = *(iVar6 + *(*0x20 + -0x48) * 8);\n        uVar9 = *(*0x20 + -0x60);\n        if (uVar10 <= uVar9) {\n            *(*0x20 + -0xc0) = 0x426ff7;\n            fcn.0045e240(uVar10);\n            goto code_r0x00426ff7;\n        }\n        if (*(iVar1 + uVar9 * 8) == iVar12) {\n            cVar3 = *(*0x20 + -0x91);\n        }\n        else {\n            *(iVar1 + uVar9 * 8) = iVar12;\n            cVar3 = '\\x01';\n        }\n        iVar1 = *(*0x20 + -0x68);\n        iVar12 = *(*0x20 + -0x58);\n        uVar5 = *(*0x20 + -0x70);\n        unaff_RDI = *(*0x20 + -0x78);\n        uVar11 = *(*0x20 + -0x40);\n        uVar10 = *(*0x20 + -0x20);\n        unaff_RBX = *(*0x20 + -0x30);\n    }\n    *(*0x20 + -0xc0) = 0x427010;\n    fcn.0045e2c0(uVar11, noname_1);\ncode_r0x00427010:\n    *(*0x20 + -0xc0) = 0x427018;\n    fcn.0045e260(uVar11);\ncode_r0x00427018:\n    uVar5 = 0x2000;\n    *(*0x20 + -0xc0) = 0x427025;\n    fcn.0045e260(0x2000);\n    uVar7 = unaff_RBX;\ncode_r0x00427025:\n    unaff_RBX = uVar9;\n    *(*0x20 + -0xc0) = 0x42702d;\n    fcn.0045e260(uVar5);\ncode_r0x0042702d:\n    do {\n        if (*(*0x20 + -0x30) >> 0x23 < 0x2000) {\n            uVar2 = *(unaff_RDI + 0x78 + (*(*0x20 + -0x30) >> 0x23) * 8);\n            unaff_RBX = (unaff_RBX & 0x1fff) << 7;\n            *(*0x20 + -0xc0) = 0x427065;\n            uVar2 = fcn.0042a140(uVar2, noname_1, unaff_RBX);\n            noname_1 = *(*0x20 + -0x38);\n            if (noname_1 < *(*0x20 + -0x80)) goto code_r0x00427077;\n            *(*0x20 + -0xc0) = 0x427098;\n            fcn.0045e260(*(*0x20 + -0x80));\n        }\n        *(*0x20 + -0xc0) = 0x4270a5;\n        iVar1 = fcn.0045e260(0x2000);\n        do {\n            *(iVar1 + noname_1 * 8) = 0x8000040000200;\n            noname_1 = noname_1 + 1;\ncode_r0x004270b6:\n        } while (noname_1 < uVar7);\n    } while( true );\ncode_r0x00426e6e:\n    iVar1 = iVar1 + -1;\n    goto code_r0x00426e77;\ncode_r0x00427077:\n    *(*(*0x20 + -0x10) + noname_1 * 8) = uVar2;\n    goto code_r0x00427083;\n}\n",
        "token_count": 3722
    },
    "0043bd00": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nint64_t fcn.0043bd00(uint64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    bool bVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            arg3 = 0;\n            while( true ) {\n                if (unaff_RBX <= arg3) {\n                    return 0;\n                }\n                iVar1 = *(in_RAX + arg3 * 8);\n                uVar3 = arg3 >> 5 & 0x7ffffff;\n                if (unaff_RSI <= uVar3) break;\n                if ((*(unaff_RDI + uVar3 * 4) >> (arg3 & 0x1f) & 1) == 0) {\n                    do {\n                    } while (*(iVar1 + 0x194) != *(iVar1 + 0x194));\n                    bVar4 = *(iVar1 + 0x194) != *(iVar1 + 400) || *(iVar1 + 0x998) != 0;\n                }\n                else {\n                    bVar4 = false;\n                }\n                if (bVar4) {\n                    *(*0x20 + -0x28) = 0x43bdb5;\n                    fcn.0040a460();\n                    *(*0x20 + -0x28) = 0x43bdbc;\n                    uVar2 = fcn.00442120();\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0x28) = 0x43bdcf;\n                    fcn.0040a680();\n                    if (*(*0x20 + -0x10) == 0) {\n                        return 0;\n                    }\n                    return *(*0x20 + -0x10);\n                }\n                arg3 = arg3 + 1;\n            }\n            *(*0x20 + -0x28) = 0x43bded;\n            arg1 = unaff_RSI;\n            in_RAX = fcn.0045e240(unaff_RSI);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + 0x28) = unaff_RSI;\n        *(puVar5 + 0x30) = arg3;\n        *(puVar5 + -8) = 0x43be11;\n        fcn.0045bb60();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        unaff_RSI = *(puVar5 + 0x28);\n        arg3 = *(puVar5 + 0x30);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 867
    },
    "0043be40": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nint64_t fcn.0043be40(ulong noname_0, ulong noname_1, ulong noname_2, int64_t arg4)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t unaff_RBX;\n    uint64_t unaff_RSI;\n    int64_t unaff_RDI;\n    \n    uVar4 = 0;\n    while( true ) {\n        if (unaff_RBX <= uVar4) {\n            return arg4;\n        }\n        iVar3 = *(in_RAX + uVar4 * 8);\n        uVar5 = uVar4 >> 5 & 0x7ffffff;\n        if (unaff_RSI <= uVar5) break;\n        iVar6 = arg4;\n        if ((*(unaff_RDI + uVar5 * 4) >> (uVar4 & 0x1f) & 1) != 0) {\n            iVar1 = *(iVar3 + 0x1208);\n            iVar6 = *(iVar3 + 0x1210);\n            if ((iVar1 != 0) && ((iVar6 == 0 || (iVar1 <= iVar6)))) {\n                iVar6 = iVar1;\n            }\n            if ((iVar6 == 0) || ((arg4 != 0 && (arg4 <= iVar6)))) {\n                iVar6 = arg4;\n            }\n        }\n        uVar4 = uVar4 + 1;\n        arg4 = iVar6;\n    }\n    fcn.0045e240(unaff_RSI);\n    pcVar2 = swi(3);\n    iVar3 = (*pcVar2)();\n    return iVar3;\n}\n",
        "token_count": 400
    },
    "0040b100": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint64_t fcn.0040b100(void)\n\n{\n    uint64_t *puVar1;\n    ulong in_RAX;\n    uint64_t uVar2;\n    uint64_t *puVar3;\n    int64_t iVar4;\n    ulong *puVar5;\n    int64_t *piVar6;\n    uint64_t uVar7;\n    int64_t unaff_RBX;\n    uint64_t uVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    uint64_t *arg2;\n    uint64_t *puVar10;\n    uint64_t uVar11;\n    uint64_t in_R11;\n    ulong uVar12;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar13;\n    \ncode_r0x0040b100:\n    puVar9 = *0x20;\n    uVar2 = in_R11;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x28 && *0x20 + -0x28 != *(unaff_R14 + 0x10)) {\n        puVar9 = *0x20 + -0xa8;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        uVar8 = unaff_RBX + 0x3fffffU & 0xffffffffffc00000;\n        *(*0x20 + -0x78) = uVar8;\n        *(*0x20 + -0xb0) = 0x40b15f;\n        uVar2 = fcn.0040cca0(0x400000);\n        if (uVar2 != 0) {\n            uVar7 = *(*0x20 + -0x78);\n            goto code_r0x0040b17c;\n        }\n        arg2 = *(*0x20 + 8);\n        uVar8 = *(*0x20 + -0x78);\n        do {\n            puVar10 = arg2[0x2076];\n            if (puVar10 == NULL) {\n                uVar7 = 0;\ncode_r0x0040b5d5:\n                if (uVar7 == 0) {\n                    *(*0x20 + -0xb0) = 0x40b5ed;\n                    iVar4 = fcn.0040b820(0x400000);\n                    if (iVar4 == 0) {\n                        return 0;\n                    }\n                    *(*0x20 + -0x10) = iVar4;\n                    *(*0x20 + -0x38) = uVar8;\n                    *(*0x20 + -0x28) = *(*0x20 + 8) + 0x16ba8;\n                    *(*0x20 + -0xb0) = 0x40b625;\n                    puVar5 = fcn.00415d40();\n                    *puVar5 = *(*0x20 + -0x10);\n                    *(puVar5 + 1) = 1;\n                    puVar5[2] = *0x7d4030;\n                    *(*0x20 + -0xb0) = 0x40b653;\n                    *0x7d4030 = puVar5;\n                    piVar6 = fcn.00415d40();\n                    uVar2 = *(*0x20 + -0x10);\n                    uVar7 = *(*0x20 + -0x38);\n                    *piVar6 = uVar7 + uVar2;\n                    piVar6[2] = *0x7d4030;\n                    *0x7d4030 = piVar6;\n                }\n                uVar11 = uVar7 + uVar2;\n                if (uVar11 < uVar2) {\n                    iVar4 = 0x1c;\n                    uVar12 = 0x4b438b;\n                }\n                else if (uVar2 + 0x800000000000 >> 0x16 < 0x4000000) {\n                    bVar13 = 0x3ffffff < uVar11 + 0x7fffffffffff >> 0x16;\n                    iVar4 = 0;\n                    if (bVar13) {\n                        iVar4 = 0x20;\n                    }\n                    uVar12 = 0;\n                    if (bVar13) {\n                        uVar12 = 0x4b4ef8;\n                    }\n                }\n                else {\n                    iVar4 = 0x21;\n                    uVar12 = 0x4b525a;\n                }\n                if (iVar4 != 0) goto code_r0x0040b759;\n                uVar8 = uVar7;\n                in_R11 = uVar2;\n                if ((uVar2 & 0x3fffff) != 0) goto code_r0x0040b748;\ncode_r0x0040b17c:\n                *(*0x20 + -0x10) = uVar2;\n                *(*0x20 + -0x38) = uVar7;\n                arg2 = uVar2 + 0x800000000000 >> 0x16;\n                puVar3 = *(*0x20 + 8);\n                while( true ) {\n                    if (uVar2 + uVar7 + 0x7fffffffffff >> 0x16 < arg2) {\n                        return uVar2;\n                    }\n                    puVar10 = arg2 >> 0x14;\n                    uVar2 = in_R11;\n                    if (0x3f < puVar10) goto code_r0x0040b487;\n                    *(*0x20 + -0x40) = arg2;\n                    uVar2 = puVar3[puVar10 + 0x2032];\n                    puVar10 = puVar3 + puVar10 + 0x2032;\n                    if (uVar2 == 0) {\n                        *(*0x20 + -0x18) = puVar10;\n                        *(*0x20 + -0xa8) = *0x795170;\n                        *(*0x20 + -0xa0) = 0;\n                        *(*0x20 + -0x98) = 0x800000;\n                        *(*0x20 + -0x90) = 0x3000;\n                        *(*0x20 + -0x88) = 4;\n                        *(*0x20 + -0xb0) = 0x40b268;\n                        fcn.00430f00();\n                        unaff_R14 = **(in_GS_OFFSET + 0x28);\n                        uVar2 = *(*0x20 + -0x80);\n                        if (uVar2 == 0) goto code_r0x0040b476;\n                        **(*0x20 + -0x18) = uVar2;\n                        puVar3 = *(*0x20 + 8);\n                        arg2 = *(*0x20 + -0x40);\n                    }\n                    uVar8 = arg2 & 0xfffff;\n                    in_R11 = *(uVar2 + uVar8 * 8);\n                    arg2 = uVar2 + uVar8 * 8;\n                    if (in_R11 != 0) goto code_r0x0040b465;\n                    *(*0x20 + -0x20) = arg2;\n                    arg2 = puVar3 + 0x2072;\n                    uVar8 = 0x210d0;\n                    *(*0x20 + -0xb0) = 0x40b2fe;\n                    iVar4 = fcn.0040cca0(8);\n                    if (iVar4 == 0) {\n                        uVar8 = 8;\n                        *(*0x20 + -0xb0) = 0x40b31b;\n                        iVar4 = fcn.0040c8c0(0x8044f8);\n                        puVar3 = puVar10;\n                        if (iVar4 == 0) goto code_r0x0040b450;\n                    }\n                    puVar3 = *(*0x20 + 8);\n                    uVar2 = puVar3[0x207d];\n                    if (puVar3[0x207c] == uVar2) {\n                        *(*0x20 + -0x68) = iVar4;\n                        iVar4 = uVar2 << 4;\n                        if (iVar4 == 0) {\n                            iVar4 = *0x801b18;\n                        }\n                        *(*0x20 + -0x70) = iVar4;\n                        *(*0x20 + -0xb0) = 0x40b37b;\n                        uVar2 = fcn.0040c8c0(0x8044f8);\n                        if (uVar2 == 0) goto code_r0x0040b43f;\n                        puVar3 = *(*0x20 + 8);\n                        uVar8 = puVar3[0x207b];\n                        puVar3[0x207b] = uVar2;\n                        puVar3[0x207d] = *(*0x20 + -0x70) >> 3;\n                        uVar2 = puVar3[0x207c];\n                        if (puVar3[0x207c] < puVar3[0x207c]) {\n                            uVar2 = puVar3[0x207c];\n                        }\n                        if (puVar3[0x207b] != uVar8) {\n                            *(*0x20 + -0xb0) = 0x40b3d9;\n                            fcn.0045ebc0(uVar2 << 3);\n                            puVar3 = *(*0x20 + 8);\n                        }\n                        iVar4 = *(*0x20 + -0x68);\n                    }\n                    puVar1 = puVar3[0x207c];\n                    arg2 = puVar3[0x207d];\n                    puVar10 = puVar1 + 1;\n                    if (arg2 < puVar10) goto code_r0x0040b437;\n                    puVar3[0x207c] = puVar10;\n                    arg2 = puVar3[0x207b];\n                    if (puVar10 <= puVar1) break;\n                    uVar2 = *(*0x20 + -0x40);\n                    arg2[puVar1] = uVar2;\n                    **(*0x20 + -0x20) = iVar4;\n                    arg2 = uVar2 + 1;\n                    uVar2 = *(*0x20 + -0x10);\n                    uVar7 = *(*0x20 + -0x38);\n                }\n                *(*0x20 + -0xb0) = 0x40b437;\n                fcn.0045e240(puVar10);\ncode_r0x0040b437:\n                *(*0x20 + -0xb0) = 0x40b43f;\n                fcn.0045e2c0(puVar10, arg2);\ncode_r0x0040b43f:\n                *(*0x20 + -0xb0) = 0x40b450;\n                fcn.00433c80();\ncode_r0x0040b450:\n                *(*0x20 + -0xb0) = 0x40b465;\n                fcn.00433c80();\n                puVar10 = puVar3;\ncode_r0x0040b465:\n                *(*0x20 + -0xb0) = 0x40b476;\n                fcn.00433c80();\ncode_r0x0040b476:\n                uVar8 = 0x27;\n                *(*0x20 + -0xb0) = 0x40b487;\n                fcn.00433c80();\n                uVar2 = in_R11;\ncode_r0x0040b487:\n                *(*0x20 + -0xb0) = 0x40b494;\n                fcn.0045e260(0x40);\n            }\n            else {\n                *(*0x20 + -0x48) = puVar10;\n                uVar7 = *puVar10;\n                if (*(puVar10 + 1) != '\\0') {\n                    uVar7 = *puVar10 - uVar8;\n                }\n                uVar11 = uVar8 + uVar7;\n                if (uVar11 < uVar7) {\n                    uVar2 = 0;\n                }\n                else if (uVar11 + 0x7fffffffffff >> 0x16 < 0x4000000) {\n                    *(*0x20 + -0x58) = uVar7;\n                    *(*0x20 + -0x38) = uVar11;\n                    *(*0x20 + -0xb0) = 0x40b53f;\n                    uVar2 = fcn.00414c20();\n                    arg2 = *(*0x20 + 8);\n                    uVar8 = *(*0x20 + -0x78);\n                    puVar10 = *(*0x20 + -0x48);\n                    uVar11 = *(*0x20 + -0x38);\n                    uVar7 = *(*0x20 + -0x58);\n                }\n                else {\n                    uVar2 = 0;\n                }\n                if (uVar2 == uVar7) {\n                    if (*(puVar10 + 1) != '\\0') {\n                        uVar11 = uVar7;\n                    }\n                    *puVar10 = uVar11;\n                    uVar7 = uVar8;\n                    goto code_r0x0040b5d5;\n                }\n                if (uVar2 != 0) {\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0xb0) = 0x40b586;\n                    fcn.00414ae0();\n                    arg2 = *(*0x20 + 8);\n                    uVar8 = *(*0x20 + -0x78);\n                    puVar10 = *(*0x20 + -0x48);\n                    uVar2 = *(*0x20 + -0x10);\n                }\n            }\n            arg2[0x2076] = puVar10[2];\n            arg2[0x2d7b] = arg2[0x2d7b] - arg2[0x2d75];\n            *puVar10 = arg2[0x2d78];\n            arg2[0x2d78] = puVar10;\n        } while( true );\n    }\n    goto code_r0x0040b7f0;\ncode_r0x0040b748:\n    *(*0x20 + -0xb0) = 0x40b759;\n    fcn.00433c80();\ncode_r0x0040b759:\n    *(*0x20 + -0x60) = uVar2;\n    *(*0x20 + -0x38) = uVar11;\n    *(*0x20 + -0x30) = uVar12;\n    *(*0x20 + -0x50) = iVar4;\n    *(*0x20 + -0xb0) = 0x40b772;\n    fcn.00435540();\n    *(*0x20 + -0xb0) = 0x40b785;\n    fcn.00435e40();\n    *(*0x20 + -0xb0) = 0x40b78f;\n    fcn.00435ca0();\n    *(*0x20 + -0xb0) = 0x40b7a5;\n    fcn.00435e40();\n    *(*0x20 + -0xb0) = 0x40b7af;\n    fcn.00435ca0();\n    *(*0x20 + -0xb0) = 0x40b7c5;\n    fcn.00435e40();\n    *(*0x20 + -0xb0) = 0x40b7d4;\n    fcn.00435e40();\n    *(*0x20 + -0xb0) = 0x40b7d9;\n    fcn.004357a0();\n    *(*0x20 + -0xb0) = 0x40b7de;\n    fcn.004355c0();\n    unaff_RBX = 0x2e;\n    *(*0x20 + -0xb0) = 0x40b7ef;\n    in_RAX = fcn.00433c80();\ncode_r0x0040b7f0:\n    *(puVar9 + 8) = in_RAX;\n    *(puVar9 + 0x10) = unaff_RBX;\n    *(puVar9 + -8) = 0x40b7ff;\n    fcn.0045bb60();\n    in_RAX = *(puVar9 + 8);\n    unaff_RBX = *(puVar9 + 0x10);\n    *0x20 = puVar9;\n    in_R11 = uVar2;\n    goto code_r0x0040b100;\n}\n",
        "token_count": 3728
    },
    "00435b40": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.00435b40(void)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uchar *puVar3;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + -0x6c) = in_XMM15;\n            *(*0x20 + -0x98) = *0x20 + -8;\n            *(*0x20 + -0x90) = 0x435b8f;\n            uVar1 = fcn.0045e4eb();\n            unaff_RBP = *(*0x20 + -0x98);\n            for (uVar2 = 99; 0 < uVar2; uVar2 = uVar2 - 1) {\n                *(*0x20 + (uVar2 - 0x6c)) = uVar1 + (uVar1 / 10) * -10 + '0';\n                if (uVar1 < 10) break;\n                uVar1 = uVar1 / 10;\n            }\n            if (uVar2 < 0x65) {\n                *(*0x20 + -0x90) = 0x435bff;\n                fcn.00435620(-(uVar2 - 100));\n                return;\n            }\n            *(*0x20 + -0x90) = 0x435c1c;\n            in_RAX = fcn.0045e300(100);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x435c27;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 490
    },
    "00469700": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nulong fcn.00469700(void)\n\n{\n    char cVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (-1 < in_RAX) {\n                if (in_RAX == 0) {\n                    return 0x4aebdf;\n                }\n                *(*0x20 + -0x50) = in_XMM15;\n                *(*0x20 + -0x4c) = in_XMM15;\n                uVar2 = 0x13;\n                break;\n            }\n            uVar2 = -in_RAX;\n            if (uVar2 == 0) goto code_r0x00469813;\n            *(*0x20 + -0x3c) = in_XMM15;\n            *(*0x20 + -0x38) = in_XMM15;\n            uVar4 = 0x13;\n            while (cVar1 = uVar2,  9 < uVar2) {\n                uVar2 = uVar2 / 10;\n                if (0x13 < uVar4) goto code_r0x004698bd;\n                *(*0x20 + (uVar4 - 0x3c)) = cVar1 + uVar2 * -10 + '0';\n                uVar4 = uVar4 - 1;\n            }\n            if (uVar4 < 0x14) goto code_r0x0046987a;\n            *(*0x20 + -0x80) = 0x4698bd;\n            fcn.0045e240(0x14);\ncode_r0x004698bd:\n            *(*0x20 + -0x80) = 0x4698ca;\n            in_RAX = fcn.0045e240(0x14);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x4698d5;\n        fcn.0045bb60();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\ncode_r0x0046978d:\n    cVar1 = in_RAX;\n    if (in_RAX < 10) goto code_r0x004697c0;\n    in_RAX = in_RAX / 10;\n    if (0x13 < uVar2) goto code_r0x00469806;\n    *(*0x20 + (uVar2 - 0x50)) = cVar1 + in_RAX * -10 + '0';\n    uVar2 = uVar2 - 1;\n    goto code_r0x0046978d;\ncode_r0x0046987a:\n    *(*0x20 + (uVar4 - 0x3c)) = cVar1 + '0';\n    *(*0x20 + -0x80) = 0x4698a5;\n    fcn.0044b220(-(uVar4 - 0x14));\n    goto code_r0x00469813;\ncode_r0x004697c0:\n    if (uVar2 < 0x14) {\n        *(*0x20 + (uVar2 - 0x50)) = cVar1 + '0';\n        *(*0x20 + -0x80) = 0x4697ee;\n        uVar3 = fcn.0044b220(-(uVar2 - 0x14));\n        return uVar3;\n    }\n    *(*0x20 + -0x80) = 0x469806;\n    fcn.0045e240(0x14);\ncode_r0x00469806:\n    *(*0x20 + -0x80) = 0x469813;\n    fcn.0045e240(0x14);\ncode_r0x00469813:\n    *(*0x20 + -0x80) = 0x46982c;\n    uVar3 = fcn.0044ae80(1);\n    return uVar3;\n}\n",
        "token_count": 1019
    },
    "00493ea0": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint64_t fcn.00493ea0(uint64_t arg1, ulong noname_1, int64_t arg3, uint64_t arg4)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    int64_t in_RAX;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    int64_t iVar9;\n    uint32_t uVar10;\n    uint64_t uVar11;\n    int64_t iVar12;\n    uint64_t uVar13;\n    uint64_t uVar14;\n    uint32_t uVar15;\n    uint64_t uVar16;\n    uint64_t arg1_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x18 && *0x20 + -0x18 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x98;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x28) = unaff_RSI;\n            if (arg3 == 0) {\n                return 0;\n            }\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + 0x38) = arg4;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x28) = unaff_RSI;\n            uVar6 = 0;\n            uVar7 = 0;\n            iVar9 = 0;\n            iVar12 = 0;\n            while ((7 < arg3 - uVar6 && (iVar5 = arg1 - uVar7,  7 < iVar5))) {\n                arg1 = uVar6 + 8;\n                if (arg4 < arg1) goto code_r0x0049449a;\n                if (arg1 < uVar6) goto code_r0x0049448f;\n                *(*0x20 + -0x20) = arg1;\n                *(*0x20 + -0x28) = iVar12;\n                *(*0x20 + -0x10) = iVar9;\n                *(*0x20 + -0x50) = uVar6;\n                uVar6 = uVar6 - arg4 >> 0x3f & *(*0x20 + -0x50);\n                uVar1 = *(in_RAX + 0x40 + *(unaff_RSI + uVar6));\n                uVar2 = *(in_RAX + 0x40 + *(unaff_RSI + 1 + uVar6));\n                uVar3 = *(in_RAX + 0x40 + *(unaff_RSI + 2 + uVar6));\n                *(*0x20 + -0x51) = uVar3;\n                *(*0x20 + -0x52) = *(in_RAX + 0x40 + *(unaff_RSI + 3 + uVar6));\n                *(*0x20 + -0x53) = *(in_RAX + 0x40 + *(unaff_RSI + 4 + uVar6));\n                *(*0x20 + -0x54) = *(in_RAX + 0x40 + *(unaff_RSI + 5 + uVar6));\n                *(*0x20 + -0x55) = *(in_RAX + 0x40 + *(unaff_RSI + 6 + uVar6));\n                uVar4 = *(in_RAX + 0x40 + *(unaff_RSI + 7 + uVar6));\n                arg1_00 = *(*0x20 + -0x55);\n                if ((uVar2 | uVar1 | uVar3 | *(*0x20 + -0x52) | *(*0x20 + -0x53) | *(*0x20 + -0x54) | *(*0x20 + -0x55) |\n                    uVar4) == 0xff) {\n                    arg1 = *(*0x20 + 0x18);\n                    if (arg1 < uVar7) goto code_r0x0049447c;\n                    *(*0x20 + -0x30) = uVar7;\n                    iVar9 = unaff_RDI - uVar7;\n                    *(*0x20 + -0xa0) = 0x494134;\n                    uVar6 = fcn.00493920(iVar5, arg1, arg3, arg4);\n                    uVar7 = *(*0x20 + -0x30) + unaff_RBX + (-iVar9 >> 0x3f & uVar7);\n                    if (iVar5 != 0) {\n                        return uVar7;\n                    }\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RSI = *(*0x20 + 0x28);\n                    arg3 = *(*0x20 + 0x30);\n                    arg4 = *(*0x20 + 0x38);\n                    arg1 = *(*0x20 + 0x18);\n                    unaff_RDI = *(*0x20 + 0x20);\n                    in_RAX = *(*0x20 + 8);\n                    iVar12 = iVar5;\n                }\n                else {\n                    uVar6 = uVar1 << 0x3a | uVar2 << 0x34;\n                    uVar13 = *(*0x20 + -0x51) << 0x2e | uVar6;\n                    uVar14 = *(*0x20 + -0x53) << 0x22 | *(*0x20 + -0x52) << 0x28 | uVar13;\n                    uVar11 = *(*0x20 + -0x54) << 0x1c | uVar14;\n                    uVar16 = arg1_00 << 0x16;\n                    arg1_00 = uVar16 | uVar11;\n                    arg1 = *(*0x20 + 0x18);\n                    if (arg1 < uVar7) goto code_r0x00494487;\n                    *(unaff_RBX + (uVar7 - unaff_RDI >> 0x3f & uVar7)) =\n                         uVar6 >> 0x38 | (uVar13 & 0xff000000000000) >> 0x28 | (uVar14 & 0xff0000000000) >> 0x18 |\n                         (uVar11 & 0xff00000000) >> 8 | (arg1_00 & 0xff000000) << 8 |\n                         (uVar4 << 0x10 | uVar16 & 0xff0000) << 0x18;\n                    uVar7 = uVar7 + 6;\n                    uVar6 = *(*0x20 + -0x20);\n                    iVar9 = *(*0x20 + -0x10);\n                    iVar12 = *(*0x20 + -0x28);\n                }\n            }\n            while ((arg1_00 = arg3 - uVar6,  uVar11 = uVar6,  3 < arg1_00 && (iVar5 = arg1 - uVar7,  3 < iVar5))) {\n                arg1_00 = uVar6 + 4;\n                arg1 = arg4;\n                if (arg4 < arg1_00) goto code_r0x00494471;\n                if (arg1_00 < uVar6) goto code_r0x00494466;\n                *(*0x20 + -0x38) = uVar6;\n                *(*0x20 + -0x20) = arg1_00;\n                *(*0x20 + -0x18) = iVar9;\n                *(*0x20 + -0x40) = iVar12;\n                uVar6 = uVar6 - arg4 >> 0x3f & *(*0x20 + -0x38);\n                uVar1 = *(in_RAX + 0x40 + *(unaff_RSI + uVar6));\n                uVar2 = *(in_RAX + 0x40 + *(unaff_RSI + 1 + uVar6));\n                uVar3 = *(in_RAX + 0x40 + *(unaff_RSI + 2 + uVar6));\n                arg1_00 = uVar3;\n                uVar4 = *(in_RAX + 0x40 + *(unaff_RSI + 3 + uVar6));\n                if ((uVar2 | uVar1 | uVar3 | uVar4) == 0xff) {\n                    uVar11 = *(*0x20 + 0x18);\n                    if (uVar11 < uVar7) goto code_r0x00494453;\n                    *(*0x20 + -0x48) = uVar7;\n                    iVar9 = unaff_RDI - uVar7;\n                    *(*0x20 + -0xa0) = 0x494305;\n                    uVar6 = fcn.00493920(iVar5, uVar11, arg3, arg4);\n                    uVar7 = *(*0x20 + -0x48) + unaff_RBX + (-iVar9 >> 0x3f & uVar7);\n                    if (iVar5 != 0) {\n                        return uVar7;\n                    }\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RSI = *(*0x20 + 0x28);\n                    arg3 = *(*0x20 + 0x30);\n                    arg4 = *(*0x20 + 0x38);\n                    arg1 = *(*0x20 + 0x18);\n                    unaff_RDI = *(*0x20 + 0x20);\n                    in_RAX = *(*0x20 + 8);\n                    iVar12 = iVar5;\n                }\n                else {\n                    uVar10 = uVar1 << 0x1a | uVar2 << 0x14;\n                    uVar15 = uVar3 << 0xe | uVar10;\n                    arg1_00 = uVar15;\n                    uVar11 = *(*0x20 + 0x18);\n                    if (uVar11 < uVar7) goto code_r0x0049445e;\n                    *(unaff_RBX + (uVar7 - unaff_RDI >> 0x3f & uVar7)) =\n                         uVar10 >> 0x18 | (uVar15 & 0xff0000) >> 8 | (uVar4 << 8 | uVar3 << 0xe & 0xff00) << 8;\n                    uVar7 = uVar7 + 3;\n                    uVar6 = *(*0x20 + -0x20);\n                    iVar9 = *(*0x20 + -0x18);\n                    iVar12 = *(*0x20 + -0x40);\n                    arg1 = uVar11;\n                }\n            }\n            while( true ) {\n                if (arg3 <= uVar11) {\n                    return uVar7;\n                }\n                if (arg1 < uVar7) break;\n                *(*0x20 + -0x20) = uVar7;\n                iVar9 = arg1 - uVar7;\n                *(*0x20 + -0xa0) = 0x494405;\n                uVar11 = fcn.00493920(iVar9, uVar11, arg3, arg4);\n                uVar7 = *(*0x20 + -0x20) + (-(unaff_RDI - uVar7) >> 0x3f & uVar7) + unaff_RBX;\n                if (iVar9 != 0) {\n                    return uVar7;\n                }\n                unaff_RDI = *(*0x20 + 0x20);\n                arg4 = *(*0x20 + 0x38);\n                unaff_RBX = *(*0x20 + 0x10);\n                arg1 = *(*0x20 + 0x18);\n                unaff_RSI = *(*0x20 + 0x28);\n                arg3 = *(*0x20 + 0x30);\n                arg1_00 = unaff_RDI;\n            }\n            *(*0x20 + -0xa0) = 0x494453;\n            fcn.0045e300(arg1);\ncode_r0x00494453:\n            *(*0x20 + -0xa0) = 0x49445e;\n            fcn.0045e300(uVar11);\n            arg1 = arg4;\ncode_r0x0049445e:\n            *(*0x20 + -0xa0) = 0x494466;\n            fcn.0045e300(uVar11);\ncode_r0x00494466:\n            *(*0x20 + -0xa0) = 0x494471;\n            fcn.0045e300(arg1_00);\ncode_r0x00494471:\n            *(*0x20 + -0xa0) = 0x49447c;\n            arg4 = arg1;\n            fcn.0045e2c0(arg1_00, arg1);\ncode_r0x0049447c:\n            *(*0x20 + -0xa0) = 0x494487;\n            fcn.0045e300(arg1);\ncode_r0x00494487:\n            *(*0x20 + -0xa0) = 0x49448f;\n            fcn.0045e300(arg1);\n            arg1 = arg1_00;\ncode_r0x0049448f:\n            *(*0x20 + -0xa0) = 0x49449a;\n            fcn.0045e300(arg1);\ncode_r0x0049449a:\n            *(*0x20 + -0xa0) = 0x4944a5;\n            in_RAX = fcn.0045e2c0(arg1, arg4);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x20) = unaff_RDI;\n        *(puVar8 + 0x28) = unaff_RSI;\n        *(puVar8 + 0x30) = arg3;\n        *(puVar8 + 0x38) = arg4;\n        *(puVar8 + -8) = 0x4944ce;\n        fcn.0045bb60();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        unaff_RDI = *(puVar8 + 0x20);\n        unaff_RSI = *(puVar8 + 0x28);\n        arg3 = *(puVar8 + 0x30);\n        arg4 = *(puVar8 + 0x38);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 3447
    },
    "0044b100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9",
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472"
        ],
        "decompiled_code": "\nvoid fcn.0044b100(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t unaff_R14;\n    ulong uStack0000000000000040;\n    \n    uStack0000000000000040 = arg3;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0045e4f0();\n    fcn.0044abe0(5);\n    return;\n}\n",
        "token_count": 136
    },
    "0046d440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9",
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472"
        ],
        "decompiled_code": "\nvoid fcn.0046d440(ulong param_1)\n\n{\n    uint *unaff_RBX;\n    int64_t unaff_R14;\n    uint uStack600;\n    ulong uStack596;\n    ulong uStack588;\n    ulong uStack580;\n    uint uStack572;\n    uint uStack568;\n    uint uStack564;\n    uint uStack560;\n    ulong uStack556;\n    uchar auStack488 [452];\n    uint uStack36;\n    uint uStack32;\n    ushort uStack28;\n    ushort uStack26;\n    ushort uStack24;\n    ushort uStack22;\n    ushort uStack20;\n    uint uStack18;\n    uint uStack14;\n    \n    while (auStack488 < *(unaff_R14 + 0x10) || auStack488 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0045e438();\n    fcn.0046e7a0();\n    if (*0x20 == 0x258) {\n        *unaff_RBX = uStack600;\n        *(unaff_RBX + 1) = uStack596;\n        *(unaff_RBX + 3) = uStack588;\n        *(unaff_RBX + 5) = uStack580;\n        unaff_RBX[7] = uStack572;\n        unaff_RBX[8] = uStack568;\n        unaff_RBX[9] = uStack564;\n        unaff_RBX[10] = uStack560;\n        if (unaff_RBX != NULL) {\n            *(unaff_RBX + 0xb) = uStack556;\n            fcn.0045e6e0(param_1, unaff_RBX + 0x32);\n        }\n        if (unaff_RBX != 0x2) {\n            *(unaff_RBX + 0x232) = uStack36;\n            *(unaff_RBX + 0x236) = uStack32;\n            *(unaff_RBX + 0x23a) = CONCAT22(uStack26, uStack28);\n            *(unaff_RBX + 0x23e) = CONCAT22(uStack22, uStack24);\n            unaff_RBX[0x8f] = CONCAT22(uStack24, uStack26);\n            unaff_RBX[0x90] = CONCAT22(uStack20, uStack22);\n            unaff_RBX[0x91] = uStack18;\n            unaff_RBX[0x92] = uStack14;\n        }\n    }\n    return;\n}\n",
        "token_count": 567
    },
    "0040a200": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint64_t fcn.0040a200(void)\n\n{\n    uint64_t *in_RAX;\n    uint64_t uVar1;\n    uint64_t *unaff_RBX;\n    uint64_t uVar2;\n    uint64_t *puVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = unaff_RBX[1] + 1;\n            unaff_RBX[1] = uVar1;\n            uVar2 = unaff_RBX << 0x10 | uVar1 & 0x7ffff;\n            puVar3 = (uVar2 >> 0x13) * 8;\n            if (unaff_RBX == puVar3) {\n                do {\n                    uVar1 = *in_RAX;\n                    *unaff_RBX = uVar1;\n                    LOCK();\n                    bVar5 = uVar1 == *in_RAX;\n                    *in_RAX = *in_RAX ^ bVar5 * (*in_RAX ^ uVar2);\n                } while (!bVar5);\n                return uVar1 ^ !bVar5 * (uVar1 ^ *in_RAX);\n            }\n            *(*0x20 + -0x20) = uVar1;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x28) = uVar2;\n            *(*0x20 + -0x18) = puVar3;\n            *(*0x20 + -0x40) = 0x40a287;\n            fcn.00435540();\n            *(*0x20 + -0x40) = 0x40a298;\n            fcn.00435e40();\n            *(*0x20 + -0x40) = 0x40a2a5;\n            fcn.00435dc0();\n            *(*0x20 + -0x40) = 0x40a2b6;\n            fcn.00435e40();\n            *(*0x20 + -0x40) = 0x40a2c5;\n            fcn.00435ca0();\n            *(*0x20 + -0x40) = 0x40a2d6;\n            fcn.00435e40();\n            *(*0x20 + -0x40) = 0x40a2e5;\n            fcn.00435ca0();\n            *(*0x20 + -0x40) = 0x40a2f6;\n            fcn.00435e40();\n            *(*0x20 + -0x40) = 0x40a305;\n            fcn.00435dc0();\n            *(*0x20 + -0x40) = 0x40a30a;\n            fcn.004357a0();\n            *(*0x20 + -0x40) = 0x40a30f;\n            fcn.004355c0();\n            unaff_RBX = 0xc;\n            *(*0x20 + -0x40) = 0x40a325;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x40a335;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 897
    },
    "0040a360": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid fcn.0040a360(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX == ((in_RAX << 0x10 | 0x7ffffU) >> 0x13) * 8) {\n                return;\n            }\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x30) = 0x40a3a6;\n            fcn.00435540();\n            *(*0x20 + -0x18) = *(*0x20 + -0x10);\n            *(*0x20 + -0x30) = 0x40a3b5;\n            fcn.00435540();\n            *(*0x20 + -0x30) = 0x40a3c6;\n            fcn.00435e40();\n            *(*0x20 + -0x30) = 0x40a3d0;\n            fcn.00435ca0();\n            *(*0x20 + -0x30) = 0x40a3d5;\n            fcn.004357a0();\n            *(*0x20 + -0x30) = 0x40a3da;\n            fcn.004355c0();\n            *(*0x20 + -0x30) = 0x40a3eb;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x40a3f6;\n        fcn.0045bb60();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 500
    },
    "004224a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004224a0(void)\n\n{\n    uint8_t uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x80) = 0x4224c5;\n            fcn.00435540();\n            *(*0x20 + -0x40) = *(*(*0x20 + 8) + 0x68);\n            *(*0x20 + -0x48) = *(*(*0x20 + 8) + 0x30);\n            *(*0x20 + -0x80) = 0x4224e5;\n            fcn.00435540();\n            *(*0x20 + -0x80) = 0x4224f6;\n            fcn.00435e40();\n            *(*0x20 + -0x80) = 0x422505;\n            fcn.00435e00();\n            *(*0x20 + -0x80) = 0x422516;\n            fcn.00435e40();\n            *(*0x20 + -0x80) = 0x422525;\n            fcn.00435b40();\n            *(*0x20 + -0x80) = 0x422536;\n            fcn.00435e40();\n            *(*0x20 + -0x80) = 0x422545;\n            fcn.00435b40();\n            *(*0x20 + -0x80) = 0x422556;\n            fcn.00435e40();\n            *(*0x20 + -0x80) = 0x42255b;\n            fcn.004355c0();\n            iVar2 = *(*0x20 + 8);\n            *(*0x20 + -0x38) = *(iVar2 + 0x50);\n            *(*0x20 + -0x30) = 1;\n            *(*0x20 + -0x28) = 0;\n            *(*0x20 + -0x20) = *(iVar2 + 0x48);\n            *(*0x20 + -0x18) = 1;\n            *(*0x20 + -0x10) = 0;\n            uVar3 = 0;\n            while (uVar3 <= *(iVar2 + 0x38) && *(iVar2 + 0x38) != uVar3) {\n                *(*0x20 + -0x58) = uVar3;\n                *(*0x20 + -0x50) = *(iVar2 + 0x68) * uVar3 + *(iVar2 + 0x18);\n                *(*0x20 + -0x80) = 0x4225cf;\n                fcn.00435540();\n                *(*0x20 + -0x80) = 0x4225d9;\n                fcn.00435ca0();\n                *(*0x20 + -0x80) = 0x4225de;\n                fcn.004355c0();\n                if (*(*(*0x20 + 8) + 0x30) < *(*0x20 + -0x58) || *(*(*0x20 + 8) + 0x30) == *(*0x20 + -0x58)) {\n                    bVar5 = (**(*0x20 + -0x20) & *(*0x20 + -0x18)) != 0;\n                }\n                else {\n                    bVar5 = true;\n                }\n                *(*0x20 + -0x59) = bVar5;\n                if (bVar5 == false) {\n                    *(*0x20 + -0x80) = 0x422634;\n                    fcn.00435540();\n                    *(*0x20 + -0x80) = 0x422645;\n                    fcn.00435e40();\n                    *(*0x20 + -0x80) = 0x42264a;\n                    fcn.004355c0();\n                }\n                else {\n                    *(*0x20 + -0x80) = 0x422617;\n                    fcn.00435540();\n                    *(*0x20 + -0x80) = 0x422628;\n                    fcn.00435e40();\n                    *(*0x20 + -0x80) = 0x42262d;\n                    fcn.004355c0();\n                }\n                if ((**(*0x20 + -0x38) & *(*0x20 + -0x30)) == 0) {\n                    *(*0x20 + -0x80) = 0x422685;\n                    fcn.00435540();\n                    *(*0x20 + -0x80) = 0x422696;\n                    fcn.00435e40();\n                    *(*0x20 + -0x80) = 0x42269b;\n                    fcn.004355c0();\n                }\n                else {\n                    *(*0x20 + -0x80) = 0x422665;\n                    fcn.00435540();\n                    *(*0x20 + -0x80) = 0x422676;\n                    fcn.00435e40();\n                    *(*0x20 + -0x80) = 0x42267b;\n                    fcn.004355c0();\n                }\n                if ((**(*0x20 + -0x38) & *(*0x20 + -0x30)) == 0) {\n                    uVar1 = 0;\n                }\n                else {\n                    uVar1 = *(*0x20 + -0x59) ^ 1;\n                }\n                *(*0x20 + -0x5a) = uVar1;\n                if (uVar1 != 0) {\n                    *(*0x20 + -0x80) = 0x4226c9;\n                    fcn.00435540();\n                    *(*0x20 + -0x80) = 0x4226da;\n                    fcn.00435e40();\n                    *(*0x20 + -0x80) = 0x4226df;\n                    fcn.004355c0();\n                }\n                *(*0x20 + -0x80) = 0x4226e5;\n                fcn.00435540();\n                *(*0x20 + -0x80) = 0x4226ea;\n                fcn.004357a0();\n                *(*0x20 + -0x80) = 0x4226ef;\n                fcn.004355c0();\n                if (*(*0x20 + -0x5a) != '\\0') {\n                    *(*0x20 + -0x80) = 0x422725;\n                    fcn.00435fa0(0);\n                }\n                if (*(*0x20 + -0x30) == -0x80) {\n                    *(*0x20 + -0x38) = *(*0x20 + -0x38) + 1;\n                    *(*0x20 + -0x30) = 1;\n                }\n                else {\n                    *(*0x20 + -0x30) = *(*0x20 + -0x30) << 1;\n                }\n                *(*0x20 + -0x28) = *(*0x20 + -0x28) + 1;\n                if (*(*0x20 + -0x18) == -0x80) {\n                    *(*0x20 + -0x20) = *(*0x20 + -0x20) + 1;\n                    *(*0x20 + -0x18) = 1;\n                }\n                else {\n                    *(*0x20 + -0x18) = *(*0x20 + -0x18) << 1;\n                }\n                *(*0x20 + -0x10) = *(*0x20 + -0x10) + 1;\n                iVar2 = *(*0x20 + 8);\n                uVar3 = *(*0x20 + -0x58) + 1;\n            }\n            *(*0x20 + -0x80) = 0x422785;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x422790;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1980
    },
    "004296c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nint64_t fcn.004296c0(void)\n\n{\n    int64_t *in_RAX;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    uVar3 = in_RAX[1];\n    uVar2 = unaff_RBX - 1;\n    uVar1 = 1;\n    do {\n        if (uVar2 == 0) {\ncode_r0x0042971b:\n            uVar2 = 0;\n            if (uVar3 != 0) {\n                for (; (uVar3 >> uVar2 & 1) == 0; uVar2 = uVar2 + 1) {\n                }\n            }\n            if (uVar3 == 0) {\n                uVar2 = 0x40;\n            }\ncode_r0x00429728:\n            if (uVar2 < 0x40) {\n                uVar3 = (-(unaff_RBX < 0x40) & 1 << (unaff_RBX & 0x3f)) - 1 << (uVar2 & 0x3f);\n                if (*0x8019b5 == '\\0') {\n                    fcn.004020e0();\n                }\n                else {\n                    popcnt(in_RAX[2] & uVar3);\n                }\n                uVar3 = ~uVar3;\n                in_RAX[1] = in_RAX[1] & uVar3;\n                in_RAX[2] = in_RAX[2] & uVar3;\n                return uVar2 * 0x2000 + *in_RAX;\n            }\n            return 0;\n        }\n        if (uVar2 <= uVar1) {\n            uVar3 = uVar3 >> (uVar2 & 0x3f) & uVar3;\n            goto code_r0x0042971b;\n        }\n        uVar3 = uVar3 & uVar3 >> (uVar1 & 0x3f);\n        if (uVar3 == 0) {\n            uVar2 = 0x40;\n            goto code_r0x00429728;\n        }\n        uVar2 = uVar2 - uVar1;\n        uVar1 = uVar1 << 1;\n    } while( true );\n}\n",
        "token_count": 571
    },
    "0042a140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nuint64_t fcn.0042a140(ulong noname_0, ulong noname_1, ulong arg3)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    uint8_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    \n    uVar5 = 0xffffffffffffffff;\n    uVar6 = 0;\n    uVar7 = 0;\n    for (iVar3 = 0; iVar3 < 8; iVar3 = iVar3 + 1) {\n        uVar9 = *(in_RAX + iVar3 * 8);\n        if (uVar9 == 0) {\n            uVar6 = uVar6 + 0x40;\n        }\n        else {\n            iVar1 = 0;\n            if (uVar9 != 0) {\n                for (; (uVar9 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n                }\n            }\n            iVar10 = 0x3f;\n            if (uVar9 != 0) {\n                for (; uVar9 >> iVar10 == 0; iVar10 = iVar10 + -1) {\n                }\n            }\n            uVar6 = iVar1 + uVar6;\n            if (uVar5 == 0xffffffffffffffff) {\n                uVar5 = uVar6;\n            }\n            if (uVar7 < uVar6) {\n                uVar7 = uVar6;\n            }\n            iVar1 = 0x3f;\n            if (uVar9 != 0) {\n                for (; uVar9 >> iVar1 == 0; iVar1 = iVar1 + -1) {\n                }\n            }\n            if (uVar9 == 0) {\n                iVar10 = -1;\n            }\n            uVar6 = -(iVar10 + -0x3f);\n        }\n    }\n    if (uVar5 == 0xffffffffffffffff) {\n        return 0x8000040000200;\n    }\n    if (uVar7 < uVar6) {\n        uVar7 = uVar6;\n    }\n    if (0x3d < uVar7) {\n        if (uVar7 == 0x200000) {\n            uVar7 = 0x8000000000000000;\n        }\n        else {\n            uVar7 = (uVar7 & 0x1fffff) << 0x15 | uVar5 & 0x1fffff | (uVar6 & 0x1fffff) << 0x2a;\n        }\n        return uVar7;\n    }\n    iVar3 = 0;\n    do {\n        if (7 < iVar3) {\n            if (uVar7 == 0x200000) {\n                uVar7 = 0x8000000000000000;\n            }\n            else {\n                uVar7 = (uVar7 & 0x1fffff) << 0x15 | uVar5 & 0x1fffff | (uVar6 & 0x1fffff) << 0x2a;\n            }\n            return uVar7;\n        }\n        uVar9 = *(in_RAX + iVar3 * 8);\n        iVar1 = 0;\n        if (uVar9 != 0) {\n            for (; (uVar9 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n            }\n        }\n        uVar2 = iVar1;\n        if (uVar9 == 0) {\n            uVar2 = 0;\n        }\n        uVar9 = uVar9 >> (uVar2 & 0x3f);\n        if ((uVar9 & uVar9 + 1) != 0) {\n            uVar4 = 1;\n            uVar8 = uVar7;\ncode_r0x0042a2f3:\n            do {\n                if (uVar8 != 0) {\n                    if (uVar4 < uVar8) {\n                        uVar9 = uVar9 | uVar9 >> (uVar4 & 0x3f);\n                        if ((uVar9 & uVar9 + 1) == 0) break;\n                        uVar8 = uVar8 - uVar4;\n                        uVar4 = uVar4 << 1;\n                        goto code_r0x0042a2f3;\n                    }\n                    uVar9 = uVar9 | uVar9 >> (uVar8 & 0x3f);\n                    if ((uVar9 & uVar9 + 1) == 0) break;\n                }\n                uVar8 = ~uVar9;\n                iVar1 = 0;\n                if (uVar8 != 0) {\n                    for (; (uVar8 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n                    }\n                }\n                uVar2 = iVar1;\n                if (uVar8 == 0) {\n                    uVar2 = 0;\n                }\n                uVar9 = uVar9 >> (uVar2 & 0x3f);\n                uVar8 = 0;\n                if (uVar9 != 0) {\n                    for (; (uVar9 >> uVar8 & 1) == 0; uVar8 = uVar8 + 1) {\n                    }\n                }\n                if (uVar9 == 0) {\n                    uVar8 = 0x40;\n                }\n                uVar9 = uVar9 >> (uVar8 & 0x3f);\n                uVar7 = uVar8 + uVar7;\n            } while ((uVar9 & uVar9 + 1) != 0);\n        }\n        iVar3 = iVar3 + 1;\n    } while( true );\n}\n",
        "token_count": 1306
    },
    "0042a3e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nint64_t fcn.0042a3e0(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    \n    arg1 = arg1 >> 6;\n    iVar3 = -1;\n    iVar5 = 0;\n    do {\n        if (7 < arg1) {\n            return -1;\n        }\n        uVar1 = *(in_RAX + arg1 * 8);\n        uVar6 = ~uVar1;\n        if (uVar6 == 0) {\n            iVar5 = 0;\n        }\n        else {\n            if (iVar3 == -1) {\n                iVar3 = 0;\n                if (uVar6 != 0) {\n                    for (; (uVar6 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n                    }\n                }\n                iVar3 = arg1 * 0x40 + iVar3;\n            }\n            iVar7 = 0;\n            if (uVar1 != 0) {\n                for (; (uVar1 >> iVar7 & 1) == 0; iVar7 = iVar7 + 1) {\n                }\n            }\n            if (uVar1 == 0) {\n                iVar7 = 0x40;\n            }\n            if (unaff_RBX <= iVar7 + iVar5) {\n                return arg1 * 0x40 - iVar5;\n            }\n            uVar4 = unaff_RBX - 1;\n            uVar2 = 1;\n            while (uVar4 != 0) {\n                if (uVar4 <= uVar2) {\n                    uVar6 = uVar6 >> (uVar4 & 0x3f) & uVar6;\n                    break;\n                }\n                uVar6 = uVar6 & uVar6 >> (uVar2 & 0x3f);\n                if (uVar6 == 0) {\n                    uVar4 = 0x40;\n                    goto code_r0x0042a46b;\n                }\n                uVar4 = uVar4 - uVar2;\n                uVar2 = uVar2 << 1;\n            }\n            uVar4 = 0;\n            if (uVar6 != 0) {\n                for (; (uVar6 >> uVar4 & 1) == 0; uVar4 = uVar4 + 1) {\n                }\n            }\n            if (uVar6 == 0) {\n                uVar4 = 0x40;\n            }\ncode_r0x0042a46b:\n            if (uVar4 < 0x40) {\n                return uVar4 + arg1 * 0x40;\n            }\n            iVar5 = 0x3f;\n            if (uVar1 != 0) {\n                for (; uVar1 >> iVar5 == 0; iVar5 = iVar5 + -1) {\n                }\n            }\n            if (uVar1 == 0) {\n                iVar5 = -1;\n            }\n            iVar5 = -(iVar5 + -0x3f);\n        }\n        arg1 = arg1 + 1;\n    } while( true );\n}\n",
        "token_count": 739
    },
    "0042c640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042c640(void)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    ulong uVar3;\n    uint64_t uVar4;\n    ulong unaff_RBX;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    iVar2 = fcn.0042cb00(in_RAX + 0x20);\n    uVar4 = *(in_RAX + 0x10);\n    uVar5 = iVar2 - 1U >> 9;\n    do {\n        if (uVar5 < uVar4) {\n            iVar6 = *(*(in_RAX + 8) + uVar5 * 8);\ncode_r0x0042c792:\n            *(iVar6 + (iVar2 - 1U & 0x1ff) * 8 + 0x18) = unaff_RBX;\n            return;\n        }\n        fcn.0040a460();\n        uVar4 = *(in_RAX + 0x10);\n        if (uVar4 <= uVar5) {\n            if (uVar4 == *(in_RAX + 0x18)) {\n                iVar6 = *(in_RAX + 0x18) << 1;\n                if (iVar6 == 0) {\n                    iVar6 = 0x100;\n                }\n                uVar3 = fcn.0040c8c0(0x8044f8);\n                if (*(in_RAX + 0x18) != 0) {\n                    fcn.0045ebc0(*(in_RAX + 0x18) << 3);\n                }\n                *(in_RAX + 8) = uVar3;\n                *(in_RAX + 0x18) = iVar6;\n            }\n            iVar6 = fcn.0042ca60();\n            *(uVar5 * 8 + *(in_RAX + 8)) = iVar6;\n            iVar1 = *(in_RAX + 0x10);\n            *(in_RAX + 0x10) = uVar4 + 1;\n            fcn.0040a680(iVar1);\n            goto code_r0x0042c792;\n        }\n        fcn.0040a680();\n    } while( true );\n}\n",
        "token_count": 556
    },
    "0047a780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0047a780(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if ((arg1 == 0) || (arg1 == 0x7adca0)) {\n        arg1 = fcn.0047b380();\n    }\n    if (in_RAX < 0) {\n        unaff_RBX = ((in_RAX << 1) >> 0x1f) + 0xdd7b17f80;\n    }\n    iVar1 = unaff_RBX + -0xe7791f700;\n    if (arg1 != 0x7aa500) {\n        if (((*(arg1 + 0x60) == 0) || (*(arg1 + 0x50) != iVar1 && iVar1 <= *(arg1 + 0x50))) ||\n           (*(arg1 + 0x58) == iVar1 || *(arg1 + 0x58) < iVar1)) {\n            fcn.0047b440();\n            iVar1 = arg1 + unaff_RBX + -0xe7791f700;\n        }\n        else {\n            iVar1 = *(*(arg1 + 0x60) + 0x10) + unaff_RBX + -0xe7791f700;\n        }\n    }\n    return iVar1 + 0x7ffffffe1ad9c900;\n}\n",
        "token_count": 372
    },
    "0048d200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nuint64_t fcn.0048d200(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t arg1;\n    int64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((99 < in_RAX) || (unaff_RBX != 10)) {\n                *(*0x20 + -0x40) = 0x48d2a5;\n                fcn.0048d300(0);\n                return in_RAX;\n            }\n            if (in_RAX < 10) {\n                arg1 = in_RAX + 1;\n                if (in_RAX <= arg1) {\n                    return in_RAX + 0x4b5982;\n                }\n            }\n            else {\n                arg1 = in_RAX * 2 + 2;\n                if (arg1 < 0xc9) {\n                    if (in_RAX << 1 <= arg1) {\n                        return in_RAX * 2 + 0x4b7f98;\n                    }\n                    *(*0x20 + -0x40) = 0x48d2ba;\n                    fcn.0045e300(arg1);\n                }\n                *(*0x20 + -0x40) = 0x48d2c5;\n                fcn.0045e280(arg1, 200);\n            }\n            *(*0x20 + -0x40) = 0x48d2ca;\n            in_RAX = fcn.0045e300(arg1);\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x48d2da;\n        fcn.0045bb60();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 541
    },
    "004385e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nuint32_t fcn.004385e0(ulong arg1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int64_t in_RAX;\n    int32_t unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((unaff_EBX == 9) && (arg1 == 4)) {\n                uVar3 = 0;\n                LOCK();\n                puVar1 = in_RAX + 0x90;\n                uVar2 = *puVar1;\n                if (uVar2 == 9) {\n                    *puVar1 = 4;\n                }\n                else {\n                    uVar3 = *puVar1;\n                }\n                return uVar3 & 0xffffff00 | uVar2 == 9;\n            }\n            unaff_EBX = 0x10;\n            *(*0x20 + -0x20) = 0x438632;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + 0x14) = arg1;\n        *(puVar4 + -8) = 0x438645;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        arg1._0_4_ = *(puVar4 + 0x14);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 469
    },
    "0044eb80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nulong fcn.0044eb80(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t *in_RAX;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    do {\n        iVar2 = *(in_RAX + 8);\n        switch(iVar2) {\n        case 0:\n            return 0;\n        case 1:\n        case 8:\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            iVar3 = *(unaff_R14 + 0x30);\n            LOCK();\n            if (iVar2 == *(in_RAX + 8)) {\n                *(in_RAX + 8) = 6;\n                iVar4 = *in_RAX;\n                LOCK();\n                if (*(in_RAX + 8) == 6) {\n                    *(in_RAX + 8) = 3;\n                }\n                else {\n                    fcn.00450a20();\n                }\n                iVar2 = *(iVar3 + 0xd8);\n                *(iVar3 + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                LOCK();\n                *(iVar4 + 0x22a4) = *(iVar4 + 0x22a4) + 1;\n                return 1;\n            }\n            iVar2 = *(iVar3 + 0xd8);\n            *(iVar3 + 0xd8) = iVar2 + -1;\n            if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n            break;\n        case 2:\n        case 9:\n            fcn.0045ba20();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            break;\n        case 3:\n        case 4:\n        case 5:\n            return 0;\n        case 6:\n            fcn.0045ba20();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            break;\n        case 7:\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            iVar3 = *(unaff_R14 + 0x30);\n            LOCK();\n            if (iVar2 == *(in_RAX + 8)) {\n                *(in_RAX + 8) = 6;\n                iVar4 = *in_RAX;\n                LOCK();\n                if (*(in_RAX + 8) == 6) {\n                    *(in_RAX + 8) = 3;\n                }\n                else {\n                    fcn.00450a20();\n                }\n                iVar2 = *(iVar3 + 0xd8);\n                *(iVar3 + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                LOCK();\n                *(iVar4 + 0x22a4) = *(iVar4 + 0x22a4) + 1;\n                return 1;\n            }\n            iVar2 = *(iVar3 + 0xd8);\n            *(iVar3 + 0xd8) = iVar2 + -1;\n            if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n            break;\n        default:\n            fcn.00450a20();\n        }\n    } while( true );\n}\n",
        "token_count": 946
    },
    "0044f1e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nuchar fcn.0044f1e0(int64_t *arg1, ulong noname_1, int64_t arg3, int64_t arg4)\n\n{\n    int32_t *piVar1;\n    uint64_t *puVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    char cVar7;\n    int64_t *in_RAX;\n    int32_t iVar8;\n    ulong arg2;\n    uint64_t unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t iVar10;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x30) = arg3;\n            if (0 < unaff_RBX) {\n                if (-1 < arg1) break;\n                *(*0x20 + -0x48) = 0x44f67b;\n                fcn.00433c80();\n            }\n            unaff_RBX = 0x1b;\n            *(*0x20 + -0x48) = 0x44f68c;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        *(puVar9 + 0x18) = arg1;\n        *(puVar9 + 0x20) = unaff_RDI;\n        *(puVar9 + 0x28) = unaff_RSI;\n        *(puVar9 + 0x30) = arg3;\n        *(puVar9 + 0x38) = arg4;\n        *(puVar9 + -8) = 0x44f6b5;\n        fcn.0045bb60();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        arg1 = *(puVar9 + 0x18);\n        unaff_RDI = *(puVar9 + 0x20);\n        unaff_RSI = *(puVar9 + 0x28);\n        arg3 = *(puVar9 + 0x30);\n        arg4 = *(puVar9 + 0x38);\n        *0x20 = puVar9;\n    } while( true );\n    *(*0x20 + 0x38) = arg4;\n    *(*0x20 + 0x20) = unaff_RDI;\n    *(*0x20 + 0x18) = arg1;\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + 0x30) = arg3;\n    *(*0x20 + -0x10) = unaff_RSI;\ncode_r0x0044f23c:\n    iVar8 = *(in_RAX + 8);\n    switch(iVar8) {\n    case 0:\n    case 5:\n        piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n        *piVar1 = *piVar1 + 1;\n        iVar10 = *(unaff_R14 + 0x30);\n        LOCK();\n        if (iVar8 == *(in_RAX + 8)) {\n            *(in_RAX + 8) = 6;\n            cVar7 = '\\x01';\n            arg2 = 0;\n            goto code_r0x0044f494;\n        }\n        iVar8 = *(iVar10 + 0xd8);\n        *(iVar10 + 0xd8) = iVar8 + -1;\n        if ((iVar8 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        goto code_r0x0044f23c;\n    case 1:\n    case 7:\n    case 8:\n        piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n        *piVar1 = *piVar1 + 1;\n        iVar10 = *(unaff_R14 + 0x30);\n        LOCK();\n        if (iVar8 == *(in_RAX + 8)) {\n            *(in_RAX + 8) = 6;\n            cVar7 = '\\0';\n            arg2 = 1;\n            goto code_r0x0044f494;\n        }\n        iVar8 = *(iVar10 + 0xd8);\n        *(iVar10 + 0xd8) = iVar8 + -1;\n        if ((iVar8 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        goto code_r0x0044f23c;\n    case 2:\n    case 4:\n    case 9:\n        *(*0x20 + -0x40) = 0x719768;\n        *(*0x20 + -0x48) = 0x44f3f5;\n        fcn.0045ba20();\n        unaff_R14 = **(in_GS_OFFSET + 0x28);\n        arg1 = *(*0x20 + 0x18);\n        unaff_RBX = *(*0x20 + 0x10);\n        unaff_RSI = *(*0x20 + -0x10);\n        unaff_RDI = *(*0x20 + 0x20);\n        arg3 = *(*0x20 + 0x30);\n        arg4 = *(*0x20 + 0x38);\n        in_RAX = *(*0x20 + 8);\n        goto code_r0x0044f23c;\n    case 3:\n        break;\n    case 6:\n        *(*0x20 + -0x40) = 0x719768;\n        *(*0x20 + -0x48) = 0x44f335;\n        fcn.0045ba20();\n        unaff_R14 = **(in_GS_OFFSET + 0x28);\n        arg1 = *(*0x20 + 0x18);\n        unaff_RBX = *(*0x20 + 0x10);\n        unaff_RSI = *(*0x20 + -0x10);\n        unaff_RDI = *(*0x20 + 0x20);\n        arg3 = *(*0x20 + 0x30);\n        arg4 = *(*0x20 + 0x38);\n        in_RAX = *(*0x20 + 8);\n        goto code_r0x0044f23c;\n    default:\n        *(*0x20 + -0x48) = 0x44f43c;\n        fcn.00450a20();\n        arg1 = *(*0x20 + 0x18);\n        unaff_RBX = *(*0x20 + 0x10);\n        unaff_RSI = *(*0x20 + -0x10);\n        unaff_RDI = *(*0x20 + 0x20);\n        arg3 = *(*0x20 + 0x30);\n        arg4 = *(*0x20 + 0x38);\n        in_RAX = *(*0x20 + 8);\n        goto code_r0x0044f23c;\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar10 = *(unaff_R14 + 0x30);\n    LOCK();\n    if (iVar8 != *(in_RAX + 8)) {\n        iVar8 = *(iVar10 + 0xd8);\n        *(iVar10 + 0xd8) = iVar8 + -1;\n        if ((iVar8 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        goto code_r0x0044f23c;\n    }\n    *(in_RAX + 8) = 6;\n    LOCK();\n    *(*in_RAX + 0x22a4) = *(*in_RAX + 0x22a4) + -1;\n    cVar7 = '\\0';\n    arg2 = 0;\ncode_r0x0044f494:\n    in_RAX[2] = arg1;\n    if (*0x801c20 == 0) {\n        in_RAX[3] = unaff_RDI;\n    }\n    else {\n        arg1 = in_RAX + 3;\n        *(*0x20 + -0x48) = 0x44f4bd;\n        cVar7 = fcn.0045dec0(arg1, unaff_RDI, arg3, arg4);\n    }\n    in_RAX[4] = unaff_RSI;\n    if (*0x801c20 == 0) {\n        in_RAX[5] = arg3;\n    }\n    else {\n        *(*0x20 + -0x48) = 0x44f4dc;\n        cVar7 = fcn.0045df20(arg1, arg2, arg3, arg4);\n    }\n    *(*0x20 + -0x28) = iVar10;\n    *(*0x20 + -0x2d) = arg2;\n    in_RAX[6] = arg4;\n    if (cVar7 == '\\0') {\n        in_RAX[7] = unaff_RBX;\n        iVar8 = 8;\n        if (in_RAX[1] != unaff_RBX && unaff_RBX <= in_RAX[1]) {\n            iVar8 = 7;\n        }\n        iVar4 = *in_RAX;\n        if (iVar8 == 7) {\n            do {\n                uVar5 = *(iVar4 + 0x1210);\n                if ((uVar5 != 0) && (uVar5 < unaff_RBX)) break;\n                LOCK();\n                puVar2 = iVar4 + 0x1210;\n                uVar6 = *puVar2;\n                *puVar2 = *puVar2 ^ (uVar5 == uVar6) * (*puVar2 ^ unaff_RBX);\n            } while (uVar5 != uVar6);\n        }\n        LOCK();\n        if (*(in_RAX + 8) == 6) {\n            *(in_RAX + 8) = iVar8;\n        }\n        else {\n            *(*0x20 + -0x2c) = iVar8;\n            *(*0x20 + -0x48) = 0x44f5da;\n            fcn.00450a20();\n            iVar8 = *(*0x20 + -0x2c);\n            iVar10 = *(*0x20 + -0x28);\n        }\n        iVar3 = *(iVar10 + 0xd8);\n        *(iVar10 + 0xd8) = iVar3 + -1;\n        if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        if (iVar8 == 7) {\n            *(*0x20 + -0x48) = 0x44f62f;\n            fcn.0043c0c0();\n        }\n    }\n    else {\n        in_RAX[1] = unaff_RBX;\n        iVar10 = *(*(unaff_R14 + 0x30) + 0xa0);\n        *(*0x20 + -0x18) = iVar10;\n        *(*0x20 + -0x20) = iVar10 + 0x2280;\n        *(*0x20 + -0x48) = 0x44f53f;\n        fcn.0040a460();\n        *(*0x20 + -0x48) = 0x44f54e;\n        fcn.0044e9e0();\n        *(*0x20 + -0x48) = 0x44f55a;\n        fcn.0040a680();\n        LOCK();\n        if (*(*(*0x20 + 8) + 0x40) == 6) {\n            *(*(*0x20 + 8) + 0x40) = 1;\n        }\n        else {\n            *(*0x20 + -0x48) = 0x44f57a;\n            fcn.00450a20();\n        }\n        iVar8 = *(*(*0x20 + -0x28) + 0xd8);\n        *(*(*0x20 + -0x28) + 0xd8) = iVar8 + -1;\n        if ((iVar8 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        *(*0x20 + -0x48) = 0x44f5b0;\n        fcn.0043c0c0();\n    }\n    return *(*0x20 + -0x2d);\n}\n",
        "token_count": 3041
    },
    "0044f920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nvoid fcn.0044f920(void)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t *noname_0;\n    uint64_t arg1;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    int64_t *arg1_00;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar6;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*(in_RAX + 0x1210) == 0) || (unaff_RBX < *(in_RAX + 0x1210))) {\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(in_RAX + 0x1210) = 0;\n            noname_0 = NULL;\n            arg1 = 0;\n            unaff_RBX = 0;\n            iVar3 = 0;\n            while( true ) {\n                arg1_00 = *(in_RAX + 0x2290);\n                if (arg1_00 <= noname_0) {\n                    if (arg1 != 0) {\n                        *(*0x20 + -0x88) = 0x44fbf9;\n                        fcn.0044fc40(arg1);\n                    }\n                    return;\n                }\n                if (arg1_00 <= noname_0) goto code_r0x0044fc14;\n                arg1_00 = *(*(in_RAX + 0x2288) + noname_0 * 8);\n                if (in_RAX != *arg1_00) break;\n                *(*0x20 + -0x30) = noname_0;\n                *(*0x20 + -0x38) = unaff_RBX;\n                *(*0x20 + -0x40) = arg1;\n                *(*0x20 + -0x10) = iVar3;\n                uVar1 = *(arg1_00 + 8);\n                if (uVar1 < 10) {\n                    *(*0x20 + -0x18) = arg1_00;\n                    switch(uVar1) {\n                    default:\n                        *(*0x20 + -0x88) = 0x44fb9b;\n                        fcn.00450a20();\n                        in_RAX = *(*0x20 + 8);\n                        noname_0 = *(*0x20 + -0x30);\n                        unaff_RBX = *(*0x20 + -0x38);\n                        arg1 = *(*0x20 + -0x40);\n                        iVar3 = *(*0x20 + -0x10);\n                        break;\n                    case 1:\n                        break;\n                    case 3:\n                        LOCK();\n                        if (uVar1 == *(arg1_00 + 8)) {\n                            *(arg1_00 + 8) = 4;\n                            *(*0x20 + -0x88) = 0x44fa05;\n                            iVar3 = fcn.0044ee20(noname_0, arg1);\n                            LOCK();\n                            if (*(*(*0x20 + -0x18) + 0x40) == 4) {\n                                *(*(*0x20 + -0x18) + 0x40) = 5;\n                            }\n                            else {\n                                *(*0x20 + -0x20) = iVar3;\n                                *(*0x20 + -0x88) = 0x44fa2e;\n                                fcn.00450a20();\n                                iVar3 = *(*0x20 + -0x20);\n                            }\n                            in_RAX = *(*0x20 + 8);\n                            LOCK();\n                            *(in_RAX + 0x22a4) = *(in_RAX + 0x22a4) + -1;\n                            noname_0 = iVar3 + -1;\n                            arg1 = *(*0x20 + -0x40);\n                            unaff_RBX = *(*0x20 + -0x38);\n                            iVar3 = *(*0x20 + -0x10);\n                        }\n                        break;\n                    case 6:\n                        *(*0x20 + -0x80) = 0x719768;\n                        *(*0x20 + -0x88) = 0x44fa85;\n                        fcn.0045ba20();\n                        unaff_R14 = **(in_GS_OFFSET + 0x28);\n                        noname_0 = *(*0x20 + -0x30) + -1;\n                        in_RAX = *(*0x20 + 8);\n                        unaff_RBX = *(*0x20 + -0x38);\n                        arg1 = *(*0x20 + -0x40);\n                        iVar3 = *(*0x20 + -0x10);\n                        break;\n                    case 7:\n                    case 8:\n                        LOCK();\n                        bVar6 = uVar1 == *(arg1_00 + 8);\n                        if (bVar6) {\n                            *(arg1_00 + 8) = 9;\n                        }\n                        arg4 = uVar1 & 0xffffff00 | bVar6;\n                        if (bVar6) {\n                            iVar3 = arg1_00[7];\n                            arg1_00[1] = iVar3;\n                            *(*0x20 + -0x88) = 0x44faef;\n                            iVar2 = fcn.0044ee20(noname_0, iVar3);\n                            unaff_RBX = *(*0x20 + -0x40);\n                            arg1 = unaff_RBX + 1;\n                            if (*(*0x20 + -0x38) < arg1) {\n                                *(*0x20 + -0x28) = iVar2;\n                                iVar2 = *(*0x20 + -0x10);\n                                *(*0x20 + -0x88) = 0x44fb2b;\n                                iVar3 = fcn.00447360(unaff_RBX);\n                                arg1 = iVar2 + 1;\n                                uVar5 = *(*0x20 + -0x40);\n                                iVar2 = *(*0x20 + -0x28);\n                            }\n                            else {\n                                iVar3 = *(*0x20 + -0x10);\n                                uVar5 = unaff_RBX;\n                                unaff_RBX = *(*0x20 + -0x38);\n                            }\n                            if (*0x801c20 == 0) {\n                                *(iVar3 + uVar5 * 8) = *(*0x20 + -0x18);\n                            }\n                            else {\n                                *(*0x20 + -0x88) = 0x44fb6a;\n                                iVar2 = fcn.0045df00(arg1, iVar3, iVar3 + uVar5 * 8, arg4);\n                            }\n                            noname_0 = iVar2 + -1;\n                            in_RAX = *(*0x20 + 8);\n                        }\n                    }\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x44fbc5;\n                    fcn.00450a20();\n                    in_RAX = *(*0x20 + 8);\n                    noname_0 = *(*0x20 + -0x30);\n                    unaff_RBX = *(*0x20 + -0x38);\n                    arg1 = *(*0x20 + -0x40);\n                    iVar3 = *(*0x20 + -0x10);\n                }\n                noname_0 = noname_0 + 1;\n            }\n            unaff_RBX = 0x13;\n            *(*0x20 + -0x88) = 0x44fc14;\n            fcn.00433c80();\ncode_r0x0044fc14:\n            *(*0x20 + -0x88) = 0x44fc1f;\n            in_RAX = fcn.0045e240(arg1_00);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x44fc2f;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1931
    },
    "0046aa80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nint64_t fcn.0046aa80(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    bool bVar3;\n    bool bVar4;\n    int64_t in_RAX;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uint64_t unaff_RBX;\n    int64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t iVar9;\n    uint64_t uVar10;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (unaff_RSI == 0) {\n        if (arg1 < unaff_RBX + 2) {\n            in_RAX = fcn.00447360(unaff_RBX);\n        }\n        *(in_RAX + unaff_RBX) = 0x2222;\n        return in_RAX;\n    }\n    bVar3 = false;\n    bVar4 = false;\n    for (iVar7 = 0; iVar7 < unaff_RSI; iVar7 = iVar7 + 1) {\n        uVar1 = *(unaff_RDI + iVar7);\n        if (uVar1 < 0x21) {\n            if ((uVar1 == 9) || (uVar1 == 0x20)) {\n                bVar4 = true;\n            }\n        }\n        else if ((uVar1 == 0x22) || (uVar1 == 0x5c)) {\n            bVar3 = true;\n        }\n    }\n    if (!bVar3) {\n        if (!bVar4) {\n            if (arg1 < unaff_RBX + unaff_RSI) {\n                in_RAX = fcn.00447360(unaff_RBX);\n            }\n            fcn.0045ebc0(unaff_RSI);\n            return in_RAX;\n        }\n        uVar8 = unaff_RBX + 1;\n        iVar7 = in_RAX;\n        if (arg1 < uVar8) {\n            arg1 = unaff_RBX;\n            iVar7 = fcn.00447360(unaff_RBX);\n            uVar8 = in_RAX + 1;\n        }\n        *(iVar7 + unaff_RBX) = 0x22;\n        uVar10 = unaff_RSI + uVar8;\n        if (arg1 < uVar10) {\n            arg1 = uVar8;\n            iVar7 = fcn.00447360(uVar8);\n        }\n        fcn.0045ebc0(unaff_RSI);\n        if (arg1 < unaff_RSI + uVar8 + 1) {\n            iVar7 = fcn.00447360(uVar10);\n        }\n        *(iVar7 + uVar10) = 0x22;\n        return iVar7;\n    }\n    if (bVar4) {\n        uVar8 = unaff_RBX + 1;\n        iVar7 = in_RAX;\n        if (arg1 < uVar8) {\n            arg1 = unaff_RBX;\n            iVar7 = fcn.00447360(unaff_RBX);\n            uVar8 = in_RAX + 1;\n        }\n        *(iVar7 + unaff_RBX) = 0x22;\n        in_RAX = iVar7;\n        unaff_RBX = uVar8;\n    }\n    iVar9 = 0;\n    for (iVar7 = 0; iVar7 < unaff_RSI; iVar7 = iVar7 + 1) {\n        cVar2 = *(unaff_RDI + iVar7);\n        iVar5 = in_RAX;\n        uVar8 = unaff_RBX;\n        if (cVar2 == '\\\"') {\n            for (; 0 < iVar9; iVar9 = iVar9 + -1) {\n                uVar10 = uVar8 + 1;\n                iVar6 = iVar5;\n                if (arg1 < uVar10) {\n                    arg1 = uVar8;\n                    iVar6 = fcn.00447360(uVar8);\n                    uVar10 = iVar5 + 1;\n                }\n                *(iVar6 + uVar8) = 0x5c;\n                iVar5 = iVar6;\n                uVar8 = uVar10;\n            }\n            unaff_RBX = uVar8 + 1;\n            in_RAX = iVar5;\n            if (arg1 < unaff_RBX) {\n                arg1 = uVar8;\n                in_RAX = fcn.00447360(uVar8);\n                unaff_RBX = iVar5 + 1;\n            }\n            *(in_RAX + uVar8) = 0x5c;\n        }\n        else if (cVar2 == '\\\\') {\n            iVar9 = iVar9 + 1;\n        }\n        else {\n            iVar9 = 0;\n        }\n        uVar8 = unaff_RBX + 1;\n        iVar5 = in_RAX;\n        if (arg1 < uVar8) {\n            arg1 = unaff_RBX;\n            iVar5 = fcn.00447360(unaff_RBX);\n            uVar8 = in_RAX + 1;\n        }\n        *(iVar5 + unaff_RBX) = cVar2;\n        in_RAX = iVar5;\n        unaff_RBX = uVar8;\n    }\n    if (bVar4) {\n        for (; 0 < iVar9; iVar9 = iVar9 + -1) {\n            uVar8 = unaff_RBX + 1;\n            iVar7 = in_RAX;\n            if (arg1 < uVar8) {\n                arg1 = unaff_RBX;\n                iVar7 = fcn.00447360(unaff_RBX);\n                uVar8 = in_RAX + 1;\n            }\n            *(iVar7 + unaff_RBX) = 0x5c;\n            in_RAX = iVar7;\n            unaff_RBX = uVar8;\n        }\n        if (arg1 < unaff_RBX + 1) {\n            in_RAX = fcn.00447360(unaff_RBX);\n        }\n        *(in_RAX + unaff_RBX) = 0x22;\n    }\n    return in_RAX;\n}\n",
        "token_count": 1398
    },
    "00425000": {
        "rules": [
            "encrypt data using HC-128/01272f7612224ac7bcc403d9d7459f40"
        ],
        "decompiled_code": "\nint64_t fcn.00425000(void)\n\n{\n    uint64_t uVar1;\n    ulong uVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t arg1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    iVar5 = (unaff_RBX + 0x1ffU & 0xfffffffffffffe00) * 0x2000;\n    uVar1 = iVar5 + *(in_RAX + 0x10420);\n    uVar6 = -*0x801b18 & (*0x801b18 + uVar1) - 1;\n    if ((*(in_RAX + 0x10428) < uVar6) || (uVar1 < *(in_RAX + 0x10420))) {\n        iVar3 = fcn.0040b100();\n        uVar2 = *0x802430;\n        if (iVar3 == 0) {\n            fcn.00435540();\n            fcn.00435e40();\n            fcn.00435b40();\n            fcn.00435e40();\n            fcn.00435b40(uVar2);\n            fcn.00435e40();\n            fcn.004355c0();\n            return 0;\n        }\n        if (iVar3 == *(in_RAX + 0x10428)) {\n            *(in_RAX + 0x10428) = iVar3 + iVar5;\n            arg1 = 0;\n        }\n        else {\n            arg1 = *(in_RAX + 0x10428) - *(in_RAX + 0x10420);\n            if (arg1 == 0) {\n                arg1 = 0;\n            }\n            else {\n                fcn.00414640(0x802438);\n                iVar4 = fcn.0042cca0();\n                LOCK();\n                *(iVar4 + 8) = *(iVar4 + 8) + arg1;\n                fcn.0042cd80();\n                fcn.004269a0(arg1);\n            }\n            *(in_RAX + 0x10420) = iVar3;\n            *(in_RAX + 0x10428) = iVar3 + iVar5;\n        }\n        uVar6 = -*0x801b18 & (*0x801b18 + *(in_RAX + 0x10420) + iVar5) - 1U;\n    }\n    else {\n        arg1 = 0;\n    }\n    iVar5 = *(in_RAX + 0x10420);\n    *(in_RAX + 0x10420) = uVar6;\n    iVar5 = uVar6 - iVar5;\n    fcn.00414640(0x802438);\n    iVar3 = fcn.0042cca0();\n    LOCK();\n    *(iVar3 + 8) = *(iVar3 + 8) + iVar5;\n    fcn.0042cd80();\n    fcn.004269a0(iVar5);\n    return arg1 + iVar5;\n}\n",
        "token_count": 735
    },
    "0042faa0": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nulong fcn.0042faa0(ulong arg1)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint64_t arg1_00;\n    uint64_t uVar3;\n    uint64_t arg1_01;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x30) = in_RAX;\n            *(*0x20 + -0x78) = 0x42fad9;\n            fcn.0040a460();\n            unaff_RBX = *(*0x20 + 0x18);\n            if (unaff_RBX < 0x40000001) {\n                *(*0x20 + -0x38) = unaff_RBX;\n                *(*0x20 + -0x20) = *(*0x20 + 0x10);\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = 0x40000000;\n                iVar2 = *(*0x20 + -0x20);\n                *(*0x20 + -0x28) = iVar2;\n                arg1_00 = 0;\n                uVar3 = 0;\n                while (arg1_00 < unaff_RBX) {\n                    uVar1 = *(iVar2 + arg1_00);\n                    if (*(iVar2 + arg1_00) < 0x80) {\n                        arg1_01 = uVar3;\n                        uVar3 = unaff_RBX;\n                        arg1_00 = arg1_00 + 1;\n                    }\n                    else {\n                        *(*0x20 + -0x48) = uVar3;\n                        *(*0x20 + -0x78) = 0x42fb4d;\n                        uVar1 = fcn.00458880(arg1_00);\n                        arg1_01 = *(*0x20 + -0x48);\n                        iVar2 = *(*0x20 + -0x28);\n                        uVar3 = *(*0x20 + -0x38);\n                        arg1_00 = unaff_RBX;\n                    }\n                    unaff_RBX = uVar3;\n                    if (0x3e5 < arg1_01) {\n                        if (1000 < arg1_01) goto code_r0x0042fcc5;\n                        *(*0x20 + -0x4c) = uVar1;\n                        *(*0x20 + -0x40) = arg1_00;\n                        *(*0x20 + -0x78) = 0x42fb99;\n                        fcn.0042fd20(arg1_01);\n                        iVar2 = *(*0x20 + -0x28);\n                        unaff_RBX = *(*0x20 + -0x38);\n                        uVar1 = *(*0x20 + -0x4c);\n                        arg1_00 = *(*0x20 + -0x40);\n                        arg1_01 = 0;\n                    }\n                    if (uVar1 < 0x10000) {\n                        if (999 < arg1_01) goto code_r0x0042fcb3;\n                        *(arg1_01 * 2 + 0x802f20) = uVar1;\n                        uVar3 = arg1_01 + 1;\n                    }\n                    else {\n                        if (999 < arg1_01) goto code_r0x0042fca6;\n                        *(arg1_01 * 2 + 0x802f20) = (uVar1 - 0x10000 >> 10 & 0x3ff) + 0xd800;\n                        if (999 < arg1_01 + 1) goto code_r0x0042fc99;\n                        *(arg1_01 * 2 + 0x802f22) = (uVar1 - 0x10000 & 0x3ff) + 0xdc00;\n                        uVar3 = arg1_01 + 2;\n                    }\n                }\n                if (uVar3 < 0x3e9) {\n                    *(*0x20 + -0x78) = 0x42fc6f;\n                    fcn.0042fd20(uVar3);\n                    *(*0x20 + -0x78) = 0x42fc7d;\n                    fcn.0040a680();\n                    return *(*0x20 + -0x38);\n                }\n                arg1_01 = 1000;\n                *(*0x20 + -0x78) = 0x42fc99;\n                fcn.0045e2c0(uVar3, 1000);\ncode_r0x0042fc99:\n                *(*0x20 + -0x78) = 0x42fca6;\n                fcn.0045e240(1000);\ncode_r0x0042fca6:\n                *(*0x20 + -0x78) = 0x42fcb3;\n                fcn.0045e240(1000);\ncode_r0x0042fcb3:\n                *(*0x20 + -0x78) = 0x42fcc5;\n                fcn.0045e240(1000);\ncode_r0x0042fcc5:\n                *(*0x20 + -0x78) = 0x42fcd2;\n                fcn.0045e2c0(arg1_01, 1000);\n            }\n            *(*0x20 + -0x78) = 0x42fcdf;\n            uVar3 = unaff_RBX;\n            in_RAX = fcn.0045e280(unaff_RBX, 0x40000000);\n            arg1._0_4_ = uVar3;\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x42fcf3;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1._0_4_ = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1537
    },
    "0044b4a0": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid fcn.0044b4a0(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    bool bVar8;\n    bool bVar9;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            uVar4 = 0;\n            uVar7 = arg1;\n            arg1 = 0;\n            while (uVar4 < uVar7) {\n                if (*(unaff_RBX + uVar4) < 0x80) {\n                    uVar3 = uVar7;\n                    uVar4 = uVar4 + 1;\n                }\n                else {\n                    *(*0x20 + -0x28) = arg1;\n                    *(*0x20 + -0x48) = 0x44b505;\n                    fcn.00458880(uVar4);\n                    in_RAX = *(*0x20 + 8);\n                    uVar3 = *(*0x20 + 0x18);\n                    arg1 = *(*0x20 + -0x28);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    uVar4 = uVar7;\n                }\n                arg1 = arg1 + 1;\n                uVar7 = uVar3;\n            }\n            if (in_RAX == 0) {\ncode_r0x0044b562:\n                *(*0x20 + -0x48) = 0x44b56a;\n                iVar2 = fcn.0044bb60();\n                uVar4 = *(*0x20 + 0x18);\n                uVar3 = *(*0x20 + 0x10);\n                arg1 = unaff_RBX;\ncode_r0x0044b57a:\n                unaff_RBX = uVar3;\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x18) = uVar7;\n                *(*0x20 + -0x20) = arg1;\n                uVar3 = 0;\n                uVar7 = 0;\n                while( true ) {\n                    if (uVar4 <= uVar3) {\n                        return;\n                    }\n                    uVar1 = *(unaff_RBX + uVar3);\n                    if (uVar1 < 0x80) {\n                        uVar5 = uVar4;\n                        uVar3 = uVar3 + 1;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = uVar7;\n                        *(*0x20 + -0x48) = 0x44b5c5;\n                        uVar1 = fcn.00458880(uVar3);\n                        uVar5 = *(*0x20 + 0x18);\n                        arg1 = *(*0x20 + -0x20);\n                        uVar7 = *(*0x20 + -0x28);\n                        iVar2 = *(*0x20 + -0x10);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        uVar3 = uVar4;\n                    }\n                    if (arg1 <= uVar7) break;\n                    *(iVar2 + uVar7 * 4) = uVar1;\n                    uVar7 = uVar7 + 1;\n                    uVar4 = uVar5;\n                }\n                *(*0x20 + -0x48) = 0x44b60c;\n                fcn.0045e240(arg1);\n            }\n            else {\n                bVar8 = arg1 < 0x20;\n                bVar9 = arg1 == 0x20;\n                if (0x20 < arg1) goto code_r0x0044b562;\n                *(*0x20 + -0x50) = unaff_RBP;\n                *(*0x20 + -0x48) = 0x44b54f;\n                iVar2 = fcn.0045e4e2();\n                unaff_RBP = *(*0x20 + -0x50);\n                if (bVar8 || bVar9) {\n                    uVar4 = uVar7;\n                    uVar7 = 0x20;\n                    uVar3 = unaff_RBX;\n                    goto code_r0x0044b57a;\n                }\n            }\n            *(*0x20 + -0x48) = 0x44b619;\n            in_RAX = fcn.0045e280(arg1, 0x20);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + -8) = 0x44b62e;\n        fcn.0045bb60();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1292
    },
    "0045bd00": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid fcn.0045bd00(ulong param_1, ulong param_2, ulong param_3, ulong param_4, uint32_t param_5)\n\n{\n    uint64_t *puVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uchar *unaff_RBP;\n    uchar *puVar5;\n    int64_t in_GS_OFFSET;\n    ulong uStackX8;\n    code **ppcStackX16;\n    uchar *puStackX24;\n    uint32_t uStackX32;\n    uint32_t uStackX36;\n    uchar auStack524296 [128];\n    uchar auStack524168 [262016];\n    uchar auStack262152 [128];\n    uchar auStack262024 [130944];\n    uchar auStack131080 [128];\n    uchar auStack130952 [65400];\n    ulong uStack65552;\n    uchar auStack65544 [128];\n    uchar auStack65416 [32632];\n    ulong uStack32784;\n    uchar auStack32776 [128];\n    uchar auStack32648 [16248];\n    ulong uStack16400;\n    uchar auStack16392 [128];\n    uchar auStack16264 [8056];\n    ulong uStack8208;\n    uchar auStack8200 [128];\n    uchar auStack8072 [3960];\n    ulong uStack4112;\n    uchar auStack4104 [128];\n    uchar auStack3976 [1912];\n    ulong uStack2064;\n    uchar auStack2056 [128];\n    uchar auStack1928 [888];\n    ulong uStack1040;\n    uchar auStack1032 [128];\n    uchar auStack904 [376];\n    ulong uStack528;\n    uchar auStack520 [128];\n    uchar auStack392 [120];\n    ulong uStack272;\n    uchar auStack264 [120];\n    ulong uStack144;\n    uchar auStack136 [56];\n    ulong uStack80;\n    uchar auStack72 [24];\n    ulong uStack48;\n    uchar auStack40 [8];\n    ulong uStack32;\n    uchar auStack24 [16];\n    \n    if (param_5 < 0x11) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *0x20 < *puVar1 || *0x20 == *puVar1) {\n            fcn.0045bb60();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack24;\n        }\n        puVar5 = auStack24;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack32 = 0x45bf45;\n        fcn.0045bc40();\n        uStack32 = 0x45bf50;\n        (**ppcStackX16)();\n        uStack32 = 0x45bf5a;\n        fcn.0045bb80(uVar4, ppcStackX16, param_3, param_4);\n        uStack32 = 0x45bf7d;\n        fcn.0045abc0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x21) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *0x20 < *puVar1 || *0x20 == *puVar1) {\n            fcn.0045bb60();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack40;\n        }\n        puVar5 = auStack40;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack48 = 0x45c005;\n        fcn.0045bc40();\n        uStack48 = 0x45c010;\n        (**ppcStackX16)();\n        uStack48 = 0x45c01a;\n        fcn.0045bb80(uVar4, ppcStackX16, param_3, param_4);\n        uStack48 = 0x45c03d;\n        fcn.0045abc0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x41) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *0x20 < *puVar1 || *0x20 == *puVar1) {\n            fcn.0045bb60();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack72;\n        }\n        puVar5 = auStack72;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack80 = 0x45c0c5;\n        fcn.0045bc40();\n        uStack80 = 0x45c0d0;\n        (**ppcStackX16)();\n        uStack80 = 0x45c0da;\n        fcn.0045bb80(uVar4, ppcStackX16, param_3, param_4);\n        uStack80 = 0x45c0fd;\n        fcn.0045abc0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x81) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n              &stack0xfffffffffffffff8 < *puVar1 || &stack0xfffffffffffffff8 == *puVar1) {\n            fcn.0045bb60();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack136;\n        }\n        puVar5 = auStack136;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack144 = 0x45c1a4;\n        fcn.0045bc40();\n        uStack144 = 0x45c1b2;\n        (**ppcStackX16)();\n        uStack144 = 0x45c1bf;\n        fcn.0045bb80(uVar4, ppcStackX16, param_3, param_4);\n        uStack144 = 0x45c1ee;\n        fcn.0045abc0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x101) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  auStack136 < *puVar1 || auStack136 == *puVar1) {\n            fcn.0045bb60();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack264;\n        }\n        puVar5 = auStack264;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack272 = 0x45c2a7;\n        fcn.0045bc40();\n        uStack272 = 0x45c2b5;\n        (**ppcStackX16)();\n        uStack272 = 0x45c2c2;\n        fcn.0045bb80(uVar4, ppcStackX16, param_3, param_4);\n        uStack272 = 0x45c2f1;\n        fcn.0045abc0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x201) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  auStack392 < *puVar1 || auStack392 == *puVar1) {\n            fcn.0045bb60();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack520;\n        }\n        puVar5 = auStack520;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack528 = 0x45c3a7;\n        fcn.0045bc40();\n        uStack528 = 0x45c3b5;\n        (**ppcStackX16)();\n        uStack528 = 0x45c3c2;\n        fcn.0045bb80(uVar4, ppcStackX16, param_3, param_4);\n        uStack528 = 0x45c3f1;\n        fcn.0045abc0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x401) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  auStack904 < *puVar1 || auStack904 == *puVar1) {\n            fcn.0045bb60();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack1032;\n        }\n        puVar5 = auStack1032;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack1040 = 0x45c4a7;\n        fcn.0045bc40();\n        uStack1040 = 0x45c4b5;\n        (**ppcStackX16)();\n        uStack1040 = 0x45c4c2;\n        fcn.0045bb80(uVar4, ppcStackX16, param_3, param_4);\n        uStack1040 = 0x45c4f1;\n        fcn.0045abc0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x801) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  auStack1928 < *puVar1 || auStack1928 == *puVar1) {\n            fcn.0045bb60();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack2056;\n        }\n        puVar5 = auStack2056;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack2064 = 0x45c5a7;\n        fcn.0045bc40();\n        uStack2064 = 0x45c5b5;\n        (**ppcStackX16)();\n        uStack2064 = 0x45c5c2;\n        fcn.0045bb80(uVar4, ppcStackX16, param_3, param_4);\n        uStack2064 = 0x45c5f1;\n        fcn.0045abc0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x1001) {\n        while( true ) {\n            if ((0xf87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack3976 && auStack3976 != *puVar1)) break;\n            fcn.0045bb60();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack4104;\n        }\n        puVar5 = auStack4104;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack4112 = 0x45c6af;\n        fcn.0045bc40();\n        uStack4112 = 0x45c6bd;\n        (**ppcStackX16)();\n        uStack4112 = 0x45c6ca;\n        fcn.0045bb80(uVar4, ppcStackX16, param_3, param_4);\n        uStack4112 = 0x45c6f9;\n        fcn.0045abc0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x2001) {\n        while( true ) {\n            if ((0x1f87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack8072 && auStack8072 != *puVar1)) break;\n            fcn.0045bb60();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack8200;\n        }\n        puVar5 = auStack8200;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack8208 = 0x45c7af;\n        fcn.0045bc40();\n        uStack8208 = 0x45c7bd;\n        (**ppcStackX16)();\n        uStack8208 = 0x45c7ca;\n        fcn.0045bb80(uVar4, ppcStackX16, param_3, param_4);\n        uStack8208 = 0x45c7f9;\n        fcn.0045abc0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x4001) {\n        while( true ) {\n            if ((0x3f87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack16264 && auStack16264 != *puVar1)) break;\n            fcn.0045bb60();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack16392;\n        }\n        puVar5 = auStack16392;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack16400 = 0x45c8af;\n        fcn.0045bc40();\n        uStack16400 = 0x45c8bd;\n        (**ppcStackX16)();\n        uStack16400 = 0x45c8ca;\n        fcn.0045bb80(uVar4, ppcStackX16, param_3, param_4);\n        uStack16400 = 0x45c8f9;\n        fcn.0045abc0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x8001) {\n        while( true ) {\n            if ((0x7f87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack32648 && auStack32648 != *puVar1)) break;\n            fcn.0045bb60();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack32776;\n        }\n        puVar5 = auStack32776;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack32784 = 0x45c9af;\n        fcn.0045bc40();\n        uStack32784 = 0x45c9bd;\n        (**ppcStackX16)();\n        uStack32784 = 0x45c9ca;\n        fcn.0045bb80(uVar4, ppcStackX16, param_3, param_4);\n        uStack32784 = 0x45c9f9;\n        fcn.0045abc0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x10001) {\n        while( true ) {\n            if ((0xff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack65416 && auStack65416 != *puVar1)) break;\n            fcn.0045bb60();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack65544;\n        }\n        puVar5 = auStack65544;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack65552 = 0x45caaf;\n        fcn.0045bc40();\n        uStack65552 = 0x45cabd;\n        (**ppcStackX16)();\n        uStack65552 = 0x45caca;\n        fcn.0045bb80(uVar4, ppcStackX16, param_3, param_4);\n        uStack65552 = 0x45caf9;\n        fcn.0045abc0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x20001) {\n        while( true ) {\n            if ((0x1ff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack130952 && auStack130952 != *puVar1)) break;\n            fcn.0045bb60();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack131080;\n        }\n        puVar5 = auStack131080;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045bc40();\n        (**ppcStackX16)();\n        fcn.0045bb80(uVar4, ppcStackX16, param_3, param_4);\n        fcn.0045abc0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x40001) {\n        while( true ) {\n            if ((0x3ff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack262024 && auStack262024 != *puVar1)) break;\n            fcn.0045bb60();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack262152;\n        }\n        puVar5 = auStack262152;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045bc40();\n        (**ppcStackX16)();\n        fcn.0045bb80(uVar4, ppcStackX16, param_3, param_4);\n        fcn.0045abc0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x80001) {\n        while( true ) {\n            if ((0x7ff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack524168 && auStack524168 != *puVar1)) break;\n            fcn.0045bb60();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack524296;\n        }\n        puVar5 = auStack524296;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045bc40();\n        (**ppcStackX16)();\n        fcn.0045bb80(uVar4, ppcStackX16, param_3, param_4);\n        fcn.0045abc0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x100001) {\n        while( true ) {\n            if ((0xfff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xfffffffffff00078 && &stack0xfffffffffff00078 != *puVar1)) break;\n            fcn.0045bb60();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffffeffff8;\n        }\n        puVar5 = &stack0xffffffffffeffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045bc40();\n        (**ppcStackX16)();\n        fcn.0045bb80(uVar4, ppcStackX16, param_3, param_4);\n        fcn.0045abc0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x200001) {\n        while( true ) {\n            if ((0x1fff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xffffffffffe00078 && &stack0xffffffffffe00078 != *puVar1)) break;\n            fcn.0045bb60();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffffdffff8;\n        }\n        puVar5 = &stack0xffffffffffdffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045bc40();\n        (**ppcStackX16)();\n        fcn.0045bb80(uVar4, ppcStackX16, param_3, param_4);\n        fcn.0045abc0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x400001) {\n        while( true ) {\n            if ((0x3fff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xffffffffffc00078 && &stack0xffffffffffc00078 != *puVar1)) break;\n            fcn.0045bb60();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffffbffff8;\n        }\n        puVar5 = &stack0xffffffffffbffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045bc40();\n        (**ppcStackX16)();\n        fcn.0045bb80(uVar4, ppcStackX16, param_3, param_4);\n        fcn.0045abc0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x800001) {\n        while( true ) {\n            if ((0x7fff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xffffffffff800078 && &stack0xffffffffff800078 != *puVar1)) break;\n            fcn.0045bb60();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffff7ffff8;\n        }\n        puVar5 = &stack0xffffffffff7ffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045bc40();\n        (**ppcStackX16)();\n        fcn.0045bb80(uVar4, ppcStackX16, param_3, param_4);\n        fcn.0045abc0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x1000001) {\n        while( true ) {\n            if ((0xffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xffffffffff000078 && &stack0xffffffffff000078 != *puVar1)) break;\n            fcn.0045bb60();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xfffffffffefffff8;\n        }\n        puVar5 = &stack0xfffffffffefffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045bc40();\n        (**ppcStackX16)();\n        fcn.0045bb80(uVar4, ppcStackX16, param_3, param_4);\n        fcn.0045abc0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x2000001) {\n        while( true ) {\n            if ((0x1ffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xfffffffffe000078 && &stack0xfffffffffe000078 != *puVar1)) break;\n            fcn.0045bb60();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xfffffffffdfffff8;\n        }\n        puVar5 = &stack0xfffffffffdfffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045bc40();\n        (**ppcStackX16)();\n        fcn.0045bb80(uVar4, ppcStackX16, param_3, param_4);\n        fcn.0045abc0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x4000001) {\n        while( true ) {\n            if ((0x3ffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xfffffffffc000078 && &stack0xfffffffffc000078 != *puVar1)) break;\n            fcn.0045bb60();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xfffffffffbfffff8;\n        }\n        puVar5 = &stack0xfffffffffbfffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045bc40();\n        (**ppcStackX16)();\n        fcn.0045bb80(uVar4, ppcStackX16, param_3, param_4);\n        fcn.0045abc0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x8000001) {\n        while( true ) {\n            if ((0x7ffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xfffffffff8000078 && &stack0xfffffffff8000078 != *puVar1)) break;\n            fcn.0045bb60();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xfffffffff7fffff8;\n        }\n        puVar5 = &stack0xfffffffff7fffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045bc40();\n        (**ppcStackX16)();\n        fcn.0045bb80(uVar4, ppcStackX16, param_3, param_4);\n        fcn.0045abc0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x10000001) {\n        while( true ) {\n            if ((0xfffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xfffffffff0000078 && &stack0xfffffffff0000078 != *puVar1)) break;\n            fcn.0045bb60();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffeffffff8;\n        }\n        puVar5 = &stack0xffffffffeffffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045bc40();\n        (**ppcStackX16)();\n        fcn.0045bb80(uVar4, ppcStackX16, param_3, param_4);\n        fcn.0045abc0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x20000001) {\n        while( true ) {\n            if ((0x1fffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xffffffffe0000078 && &stack0xffffffffe0000078 != *puVar1)) break;\n            fcn.0045bb60();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffdffffff8;\n        }\n        puVar5 = &stack0xffffffffdffffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045bc40();\n        (**ppcStackX16)();\n        fcn.0045bb80(uVar4, ppcStackX16, param_3, param_4);\n        fcn.0045abc0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x40000001) {\n        while( true ) {\n            if ((0x3fffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xffffffffc0000078 && &stack0xffffffffc0000078 != *puVar1)) break;\n            fcn.0045bb60();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffbffffff8;\n        }\n        puVar5 = &stack0xffffffffbffffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045bc40();\n        (**ppcStackX16)();\n        fcn.0045bb80(uVar4, ppcStackX16, param_3, param_4);\n        fcn.0045abc0(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    iVar3 = **(in_GS_OFFSET + 0x28);\n    do {\n        puVar1 = iVar3 + 0x10;\n        if (*puVar1 <= *0x20 && *0x20 != *puVar1) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x436fe7;\n            fcn.004334e0();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x436fed;\n        fcn.0045bb60();\n    } while( true );\n}\n",
        "token_count": 9513
    },
    "00464f60": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nuint64_t fcn.00464f60(void)\n\n{\n    uint8_t uVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX == 0) {\n                return 0xfffd;\n            }\n            uVar1 = *((unaff_RBX - 1) + in_RAX);\n            if (uVar1 < 0x80) {\n                return uVar1;\n            }\n            iVar3 = unaff_RBX - 4;\n            if (iVar3 < 0) {\n                iVar3 = 0;\n            }\n            for (uVar5 = unaff_RBX - 2; iVar3 <= uVar5; uVar5 = uVar5 - 1) {\n                if (unaff_RBX <= uVar5) goto code_r0x00465052;\n                if ((*(in_RAX + uVar5) & 0xc0) != 0x80) break;\n            }\n            if (uVar5 < 0) {\n                uVar5 = 0;\n            }\n            if (uVar5 <= unaff_RBX) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x10) = uVar5;\n                *(*0x20 + -0x28) = 0x465017;\n                uVar2 = fcn.00464da0();\n                if (*(*0x20 + 0x10) != *(*0x20 + -0x10) + (unaff_RBX - uVar5)) {\n                    return 0xfffd;\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x28) = 0x465052;\n            fcn.0045e300(unaff_RBX);\ncode_r0x00465052:\n            *(*0x20 + -0x28) = 0x46505d;\n            in_RAX = fcn.0045e240(unaff_RBX);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x46506d;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 700
    },
    "00465540": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nuint64_t fcn.00465540(void)\n\n{\n    uint64_t uVar1;\n    uint32_t uVar2;\n    uint64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int64_t unaff_R14;\n    \n    do {\n        uVar3 = *0x7a6918;\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = in_RAX;\n            if (0x10ffff < uVar2) {\n                return in_RAX;\n            }\n            if (uVar2 < 0x80) {\n                return *(uVar2 * 2 + 0x7993a0);\n            }\n            uVar6 = 0;\n            uVar1 = *0x7a6918;\n            while (uVar4 = uVar1,  uVar6 < uVar4) {\n                iVar7 = (uVar4 - uVar6) / 2;\n                uVar1 = iVar7 + uVar6;\n                if (*0x7a6918 <= uVar1) goto code_r0x00465645;\n                if (*(*0x7a6910 + uVar1 * 4) < uVar2) {\n                    uVar6 = iVar7 + uVar6 + 1;\n                    uVar1 = uVar4;\n                }\n            }\n            if (*0x7a6918 <= uVar6) goto code_r0x0046560e;\n            if (uVar6 < *0x7a6918) {\n                if (uVar2 == *(*0x7a6910 + uVar6 * 4)) {\n                    return *(*0x7a6910 + uVar6 * 4 + 2);\n                }\ncode_r0x0046560e:\n                *(*0x20 + 8) = uVar2;\n                *(*0x20 + -0x20) = 0x465617;\n                uVar3 = fcn.004654c0();\n                if (uVar3 == *(*0x20 + 8)) {\n                    *(*0x20 + -0x20) = 0x465630;\n                    uVar3 = fcn.00465440();\n                    return uVar3;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x20) = 0x465645;\n            fcn.0045e240(*0x7a6918);\ncode_r0x00465645:\n            *(*0x20 + -0x20) = 0x465650;\n            in_RAX = fcn.0045e240(uVar3);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x46565a;\n        fcn.0045bb60();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 757
    },
    "0047dca0": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nulong fcn.0047dca0(void)\n\n{\n    ulong uVar1;\n    uint32_t uVar2;\n    ulong *puVar3;\n    int64_t iVar4;\n    ulong arg1;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    int64_t unaff_R14;\n    int64_t iStack72;\n    int64_t iStack64;\n    int64_t iStack56;\n    ulong uStack48;\n    int64_t iStack40;\n    int64_t iStack32;\n    int64_t iStack24;\n    int64_t iStack16;\n    \n    while (&iStack64 < *(unaff_R14 + 0x10) || &iStack64 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    iStack40 = fcn.0046cb80(0x20);\n    uVar1 = *0x7ad5f8;\n    puVar3 = fcn.0040f540(iStack40);\n    if (uVar1 != '\\0') {\n        return *puVar3;\n    }\n    iVar4 = fcn.0046cb80(0x20);\n    iStack72 = 0x20;\n    iStack16 = iVar4;\n    arg1 = fcn.0047d8a0(iVar4);\n    uVar1 = *0x7ad5f8;\n    if (iVar4 == 0) {\n        puVar3 = fcn.0040f540(arg1);\n        if (uVar1 != '\\0') {\n            return *puVar3;\n        }\n    }\n    iVar6 = 0;\n    uVar7 = 0;\n    iVar4 = iStack40;\n    uVar8 = 0;\n    iVar9 = 0;\n    while (iVar6 < 0x20) {\n        uVar2 = *(iVar4 + iVar6);\n        if (*(iVar4 + iVar6) < 0x80) {\n            iVar6 = iVar6 + 1;\n        }\n        else {\n            iStack24 = iVar9;\n            uVar2 = fcn.00458880(iVar6);\n            iVar4 = iStack40;\n            iVar9 = iStack24;\n            iVar6 = 0x20;\n        }\n        if (uVar2 - 0x41 < 0x1a) {\n            uVar10 = uVar8 + 1;\n            iVar5 = iVar9;\n            if (uVar7 < uVar10) {\n                uVar7 = uVar8;\n                iStack56 = iVar6;\n                iVar5 = fcn.00447360(uVar8);\n                uVar10 = iVar9 + 1;\n                iVar4 = iStack40;\n                iVar6 = iStack56;\n            }\n            *(iVar5 + uVar8 * 4) = uVar2;\n            uVar8 = uVar10;\n            iVar9 = iVar5;\n        }\n    }\n    uStack48 = fcn.0044b660(uVar8);\n    iVar6 = 0;\n    uVar7 = 0;\n    iVar4 = iStack16;\n    uVar8 = 0;\n    iVar9 = 0;\n    while (iVar6 < 0x20) {\n        uVar2 = *(iVar4 + iVar6);\n        if (*(iVar4 + iVar6) < 0x80) {\n            iVar6 = iVar6 + 1;\n        }\n        else {\n            iStack32 = iVar9;\n            uVar2 = fcn.00458880(iVar6);\n            iVar4 = iStack16;\n            iVar9 = iStack32;\n            iVar6 = iStack72;\n        }\n        if (uVar2 - 0x41 < 0x1a) {\n            uVar10 = uVar8 + 1;\n            iVar5 = iVar9;\n            if (uVar7 < uVar10) {\n                uVar7 = uVar8;\n                iStack64 = iVar6;\n                iVar5 = fcn.00447360(uVar8);\n                uVar10 = iVar9 + 1;\n                iVar4 = iStack16;\n                iVar6 = iStack64;\n            }\n            *(iVar5 + uVar8 * 4) = uVar2;\n            uVar8 = uVar10;\n            iVar9 = iVar5;\n        }\n    }\n    fcn.0044b660(uVar8);\n    return uStack48;\n}\n",
        "token_count": 1003
    },
    "00489060": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nint64_t fcn.00489060(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    ulong arg1_00;\n    int64_t iVar2;\n    int64_t arg1_01;\n    uint64_t in_RDX;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    int64_t iStack32;\n    \n    while (uVar1 = arg1,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n        arg1 = arg1 & 0xffffffff;\n    }\n    if (uVar1 < 0x80) {\n        fcn.00402ea0(arg1, in_RDX);\n        return iStack32;\n    }\n    if (uVar1 == 0xfffd) {\n        iVar2 = 0;\n        do {\n            arg1_01 = iVar2;\n            if (unaff_RBX <= arg1_01) {\n                return -1;\n            }\n            uVar1 = *(in_RAX + arg1_01);\n            if (*(in_RAX + arg1_01) < 0x80) {\n                iVar2 = arg1_01 + 1;\n            }\n            else {\n                uVar1 = fcn.00458880(arg1_01);\n                iVar2 = unaff_RBX;\n            }\n        } while (uVar1 != 0xfffd);\n        return arg1_01;\n    }\n    if ((0xd7ff < uVar1) && (in_RDX = uVar1 - 0xe000,  0x101fff < uVar1 - 0xe000)) {\n        return -1;\n    }\n    arg1_00 = fcn.0044b840();\n    iVar2 = fcn.0048b080(arg1_00, in_RDX);\n    return iVar2;\n}\n",
        "token_count": 438
    },
    "0048a460": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nint64_t fcn.0048a460(void)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    char cVar8;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x0048a460:\n    puVar7 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n        puVar7 = *0x20 + -0x90;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        bVar2 = false;\n        for (iVar5 = 0; iVar5 < unaff_RBX; iVar5 = iVar5 + 1) {\n            uVar1 = *(in_RAX + iVar5);\n            if (0x7f < uVar1) {\n                *(*0x20 + -0x98) = 0x48a4d8;\n                iVar5 = fcn.00489e40(unaff_RBX);\n                return iVar5;\n            }\n            if (bVar2) {\n                bVar2 = true;\n            }\n            else if (uVar1 < 0x41) {\n                bVar2 = false;\n            }\n            else {\n                bVar2 = uVar1 < 0x5b;\n            }\n        }\n        if (!bVar2) {\n            return in_RAX;\n        }\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        *(*0x20 + -0x28) = *0x20 + -0x28;\n        if (*(*0x20 + -0x10) - *(*0x20 + -0x18) < unaff_RBX) {\n            *(*0x20 + -0x40) = *(*0x20 + -0x18);\n            iVar5 = unaff_RBX + *(*0x20 + -0x10) * 2;\n            *(*0x20 + -0x38) = iVar5;\n            *(*0x20 + -0x98) = 0x48a54d;\n            iVar3 = fcn.00447240(iVar5);\n            iVar5 = *(*0x20 + -0x40);\n            iVar6 = iVar5;\n            if (*(*0x20 + -0x18) < iVar5) {\n                iVar6 = *(*0x20 + -0x18);\n            }\n            if (iVar3 != *(*0x20 + -0x20)) {\n                *(*0x20 + -0x30) = iVar3;\n                *(*0x20 + -0x98) = 0x48a575;\n                fcn.0045ebc0(iVar6);\n                iVar3 = *(*0x20 + -0x30);\n                iVar5 = *(*0x20 + -0x40);\n            }\n            *(*0x20 + -0x18) = iVar5;\n            *(*0x20 + -0x10) = *(*0x20 + -0x38);\n            *(*0x20 + -0x20) = iVar3;\n            in_RAX = *(*0x20 + 8);\n            unaff_RBX = *(*0x20 + 0x10);\n        }\n        iVar5 = 0;\n        do {\n            if (unaff_RBX <= iVar5) {\n                return *(*0x20 + -0x20);\n            }\n            cVar8 = *(in_RAX + iVar5);\n            if (cVar8 + 0xbfU < 0x1a) {\n                cVar8 = cVar8 + ' ';\n            }\n            if (*(*0x20 + -0x28) == NULL) {\n                *(*0x20 + -0x28) = *0x20 + -0x28;\n            }\n            else if (*(*0x20 + -0x28) != *0x20 + -0x28) goto code_r0x0048a697;\n            iVar3 = *(*0x20 + -0x18);\n            iVar6 = *(*0x20 + -0x20);\n            iVar4 = iVar6;\n            if (*(*0x20 + -0x10) < iVar3 + 1U) {\n                *(*0x20 + -0x48) = iVar5;\n                *(*0x20 + -0x49) = cVar8;\n                *(*0x20 + -0x98) = 0x48a645;\n                iVar4 = fcn.00447360(iVar3);\n                *(*0x20 + -0x10) = iVar3;\n                *(*0x20 + -0x20) = iVar4;\n                iVar5 = *(*0x20 + -0x48);\n                cVar8 = *(*0x20 + -0x49);\n                in_RAX = *(*0x20 + 8);\n                unaff_RBX = *(*0x20 + 0x10);\n                iVar3 = iVar6;\n            }\n            *(*0x20 + -0x18) = iVar3 + 1;\n            *(iVar4 + iVar3) = cVar8;\n            iVar5 = iVar5 + 1;\n        } while( true );\n    }\n    goto code_r0x0048a6ab;\ncode_r0x0048a697:\n    unaff_RBX = 0x732918;\n    *(*0x20 + -0x98) = 0x48a6aa;\n    in_RAX = fcn.004334e0();\ncode_r0x0048a6ab:\n    *(puVar7 + 8) = in_RAX;\n    *(puVar7 + 0x10) = unaff_RBX;\n    *(puVar7 + -8) = 0x48a6ba;\n    fcn.0045bb60();\n    in_RAX = *(puVar7 + 8);\n    unaff_RBX = *(puVar7 + 0x10);\n    *0x20 = puVar7;\n    goto code_r0x0048a460;\n}\n",
        "token_count": 1471
    },
    "00456460": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint64_t fcn.00456460(void)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n        unaff_RBX = unaff_RBX & 0xff;\n    }\n    iVar2 = fcn.0044cfe0();\n    if (iVar2 == 0) {\n        return 0;\n    }\n    cVar1 = *(iVar2 + 0x24);\n    if ((cVar1 == '\\x11') || (cVar1 == '\\n')) {\n        return 0;\n    }\n    if (cVar1 != '\\x10') {\n        piVar3 = fcn.0044d760();\n        if (unaff_RBX < 8) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = CONCAT71(0x2e656d69746e75, *piVar3 == 0x2e656d69746e7572);\n        }\n        return uVar4 & 0xffffffff;\n    }\n    if (unaff_RBX != '\\0') {\n        return 0;\n    }\n    return *0x8019a5 ^ 1;\n}\n",
        "token_count": 330
    },
    "004937a0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid fcn.004937a0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX == 0x40) {\n                iVar2 = 0;\n                while( true ) {\n                    if (0x3f < iVar2) {\n                        *(*0x20 + 8) = in_RAX;\n                        *(*0x20 + -0x30) = 0x493805;\n                        iVar1 = fcn.0040c560();\n                        *(iVar1 + 0x140) = 0x3d;\n                        iVar2 = *(*0x20 + 8);\n                        if (iVar1 != iVar2) {\n                            *(*0x20 + -0x10) = iVar1;\n                            *(*0x20 + -0x30) = 0x493828;\n                            fcn.0045ebc0(0x40);\n                            iVar1 = *(*0x20 + -0x10);\n                            iVar2 = *(*0x20 + 8);\n                        }\n                        for (iVar3 = 0; iVar3 < 0x100; iVar3 = iVar3 + 1) {\n                            *(iVar1 + 0x40 + iVar3) = 0xff;\n                        }\n                        for (iVar3 = 0; iVar3 < 0x40; iVar3 = iVar3 + 1) {\n                            *(iVar1 + 0x40 + *(iVar2 + iVar3)) = iVar3;\n                        }\n                        return;\n                    }\n                    if ((*(in_RAX + iVar2) == '\\n') || (*(in_RAX + iVar2) == '\\r')) break;\n                    iVar2 = iVar2 + 1;\n                }\n                *(*0x20 + -0x30) = 0x49387b;\n                fcn.004334e0();\n            }\n            unaff_RBX = 0x7328a8;\n            *(*0x20 + -0x30) = 0x49388e;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x49389e;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 704
    },
    "0046d1e0": {
        "rules": [
            "parse credit card information/4eef9ae1278b42f592aee8ead6d8bf37"
        ],
        "decompiled_code": "\nuint fcn.0046d1e0(ulong arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    int64_t *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    iVar1 = fcn.0046f920(arg1, arg2, 0);\n    if (iVar1 != 0) {\n        if (((iVar1 != 0) && (*(iVar1 + 8) == 0x4a26e0)) && (*unaff_RBX == 0x6d)) {\n            return 0;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 186
    },
    "0048e4e0": {
        "rules": [
            "parse credit card information/f44d27b3cce043409e5315cf54d1899b",
            "search for credit card data/ac143e9ae29c414184a69c9308e24693"
        ],
        "decompiled_code": "\nuint64_t fcn.0048e4e0(void)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    uint64_t in_RAX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    uint16_t uVar12;\n    uint64_t uVar13;\n    uint64_t uVar14;\n    uint64_t uVar15;\n    \n    iVar11 = *0x7a6850;\n    uVar4 = in_RAX;\n    if (uVar4 < 0x100) {\n        if (uVar4 - 0x20 < 0x5f) {\n            return 1;\n        }\n        if (0xa0 < uVar4) {\n            return in_RAX & 0xffffffffffffff00 | uVar4 != 0xad;\n        }\n        return 0;\n    }\n    if (uVar4 < 0x10000) {\n        uVar15 = 0;\n        uVar5 = *0x7a6878;\n        uVar10 = *0x7a6838;\n        uVar13 = *0x7a6830;\n        iVar11 = *0x7a6870;\n        uVar14 = *0x7a6878;\n    }\n    else {\n        uVar6 = 0;\n        uVar7 = *0x7a6898;\n        while (uVar5 = uVar7,  uVar10 = *0x7a6858,  uVar13 = *0x7a6890,  uVar14 = *0x7a6898,  uVar6 < uVar5) {\n            iVar8 = uVar5 - uVar6 >> 1;\n            uVar7 = iVar8 + uVar6;\n            uVar15 = uVar6;\n            if (*0x7a6898 <= uVar7) goto code_r0x0048e6bb;\n            if (*(*0x7a6890 + uVar7 * 4) < uVar4) {\n                uVar6 = uVar6 + iVar8 + 1;\n                uVar7 = uVar5;\n            }\n        }\n        if (*0x7a6898 <= uVar6) {\n            return 0;\n        }\n        uVar15 = uVar6 & 0xfffffffffffffffe;\n        if (uVar15 < *0x7a6898) {\n            uVar2 = *(*0x7a6890 + uVar15 * 4);\n            uVar15 = uVar2;\n            if (uVar4 < uVar2) {\n                return 0;\n            }\n            uVar6 = uVar6 | 1;\n            if (uVar6 < *0x7a6898) {\n                if (*(*0x7a6890 + uVar6 * 4) < uVar4) {\n                    return 0;\n                }\n                if (0x1ffff < uVar4) {\n                    return 1;\n                }\n                uVar13 = uVar4 - 0x10000;\n                uVar7 = 0;\n                uVar5 = *0x7a6858;\n                while (uVar9 = uVar5,  uVar12 = uVar4 - 0x10000,  uVar7 < uVar9) {\n                    uVar10 = uVar9 - uVar7 >> 1;\n                    uVar15 = uVar10 + uVar7;\n                    uVar5 = *0x7a6858;\n                    uVar14 = uVar9;\n                    if (*0x7a6858 <= uVar15) goto code_r0x0048e696;\n                    uVar1 = *(*0x7a6850 + uVar15 * 2);\n                    uVar6 = uVar1;\n                    uVar5 = uVar15;\n                    uVar14 = uVar15;\n                    if (uVar1 < uVar12) {\n                        uVar7 = uVar7 + uVar10 + 1;\n                        uVar5 = uVar9;\n                        uVar14 = uVar9;\n                    }\n                }\n                if (*0x7a6858 <= uVar7) {\n                    return 1;\n                }\n                if (uVar7 < *0x7a6858) {\n                    uVar1 = *(*0x7a6850 + uVar7 * 2);\n                    return uVar1 & 0xff00 | uVar1 != uVar12;\n                }\n                uVar10 = *0x7a6858;\n                uVar5 = fcn.0045e240(*0x7a6858);\ncode_r0x0048e696:\n                fcn.0045e240(uVar5);\n            }\n            fcn.0045e240(uVar14);\n        }\n        fcn.0045e240(uVar14);\n        uVar5 = uVar6;\ncode_r0x0048e6bb:\n        in_RAX = fcn.0045e240(uVar14);\n    }\n    while (uVar6 = uVar5,  uVar12 = in_RAX,  uVar15 < uVar6) {\n        iVar8 = uVar6 - uVar15 >> 1;\n        uVar5 = iVar8 + uVar15;\n        if (uVar14 <= uVar5) goto code_r0x0048e7d1;\n        if (*(iVar11 + uVar5 * 2) < uVar12) {\n            uVar15 = uVar15 + iVar8 + 1;\n            uVar5 = uVar6;\n        }\n    }\n    if (uVar14 <= uVar15) {\n        return 0;\n    }\n    if ((uVar15 & 0xfffffffffffffffe) < uVar14) {\n        if (uVar12 < *(iVar11 + (uVar15 & 0xfffffffffffffffe) * 2)) {\n            return 0;\n        }\n        if ((uVar15 | 1) < uVar14) {\n            if (*(iVar11 + (uVar15 | 1) * 2) < uVar12) {\n                return 0;\n            }\n            uVar6 = 0;\n            uVar5 = uVar10;\n            uVar7 = uVar14;\n            while (uVar14 = uVar5,  uVar6 < uVar14) {\n                iVar11 = uVar14 - uVar6 >> 1;\n                uVar7 = iVar11 + uVar6;\n                if (uVar10 <= uVar7) goto code_r0x0048e7b3;\n                uVar5 = uVar7;\n                if (*(uVar13 + uVar7 * 2) < uVar12) {\n                    uVar6 = uVar6 + iVar11 + 1;\n                    uVar5 = uVar14;\n                    uVar7 = uVar14;\n                }\n            }\n            if (uVar10 <= uVar6) {\n                return 1;\n            }\n            if (uVar6 < uVar10) {\n                uVar1 = *(uVar13 + uVar6 * 2);\n                return uVar1 & 0xff00 | uVar1 != uVar12;\n            }\n            fcn.0045e240(uVar10);\n            uVar14 = uVar7;\ncode_r0x0048e7b3:\n            fcn.0045e240(uVar10);\n        }\n        fcn.0045e240(uVar14);\n    }\n    fcn.0045e240(uVar14);\ncode_r0x0048e7d1:\n    fcn.0045e240(uVar14);\n    pcVar3 = swi(3);\n    uVar6 = (*pcVar3)();\n    return uVar6;\n}\n",
        "token_count": 1750
    },
    "00401080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401080(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00401640();\n    fcn.004010e0();\n    return;\n}\n",
        "token_count": 89
    },
    "00403500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00403500(void)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    uchar in_AL;\n    unkbyte7 in_RAX;\n    int64_t iVar3;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    puVar2 = *(iVar1 + 0x1268);\n    *puVar2 = *CONCAT71(in_RAX, in_AL);\n    puVar2[1] = unaff_RBX;\n    iVar3 = *(iVar1 + 0x1268) + 0x10;\n    *(iVar1 + 0x1268) = iVar3;\n    if (*(iVar1 + 0x1270) == iVar3) {\n        fcn.0042cee0();\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "00403d80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00403d80(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    uint64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    if (in_RAX == 0) {\n        return 0;\n    }\n    cVar2 = func_0x00423980();\n    if (cVar2 == '\\0') {\n        if (*0x7ad098 == NULL) {\n            iVar4 = 0;\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = **0x7ad098;\n            iVar4 = (*0x7ad098)[1];\n        }\n        iVar3 = 0;\n        while( true ) {\n            if (iVar4 <= iVar3) {\n                return 0;\n            }\n            iVar1 = *(iVar5 + iVar3 * 8);\n            if (((*(iVar1 + 0xd0) < in_RAX || *(iVar1 + 0xd0) == in_RAX) && (in_RAX < *(iVar1 + 0xd8))) ||\n               ((*(iVar1 + 0xe0) < in_RAX || *(iVar1 + 0xe0) == in_RAX && (in_RAX < *(iVar1 + 0xe8))))) break;\n            iVar3 = iVar3 + 1;\n        }\n        return 1;\n    }\n    return 1;\n}\n",
        "token_count": 317
    },
    "00404a20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404a20(void)\n\n{\n    fcn.00404a60(1);\n    return;\n}\n",
        "token_count": 27
    },
    "004057a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004057a0(void)\n\n{\n    fcn.004057e0(1);\n    return;\n}\n",
        "token_count": 27
    },
    "00406140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00406140(void)\n\n{\n    ulong in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.004057e0(0, in_RAX);\n    return;\n}\n",
        "token_count": 93
    },
    "00406b60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid fcn.00406b60(void)\n\n{\n    code *in_RAX;\n    int64_t unaff_R14;\n    uchar uStack50;\n    uchar uStack49;\n    uchar auStack48 [8];\n    uchar *puStack40;\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    puStack40 = auStack48;\n    uStack50 = 0;\n    auStack32 = CONCAT88(&uStack50, 0x406c20);\n    ppcStack16 = auStack32;\n    uStack49 = 1;\n    (*in_RAX)();\n    uStack50 = 1;\n    uStack49 = 0;\n    (**ppcStack16)();\n    return;\n}\n",
        "token_count": 221
    },
    "00406c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.00406c80(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00435540();\n    fcn.00435e40();\n    fcn.00435ca0();\n    fcn.004357a0();\n    fcn.004355c0();\n    fcn.00435540();\n    fcn.00435e40();\n    fcn.00435ca0();\n    fcn.004357a0();\n    fcn.004355c0();\n    fcn.00435540();\n    fcn.00435e40();\n    fcn.00435ca0();\n    fcn.004357a0();\n    fcn.004355c0();\n    fcn.00435540();\n    fcn.00435e40();\n    fcn.00435ca0();\n    fcn.004357a0();\n    fcn.004355c0();\n    fcn.00435540();\n    fcn.00435e40();\n    fcn.00435ca0();\n    fcn.004357a0();\n    fcn.004355c0();\n    fcn.00435540();\n    fcn.00435e40();\n    fcn.00435ca0();\n    fcn.004357a0();\n    fcn.004355c0();\n    fcn.00435540();\n    fcn.00435e40();\n    fcn.00435ca0();\n    fcn.004357a0();\n    fcn.004355c0();\n    fcn.00435540();\n    fcn.00435e40();\n    fcn.00435ca0();\n    fcn.004357a0();\n    fcn.004355c0();\n    fcn.00435540();\n    fcn.00435e40();\n    fcn.00435ca0();\n    fcn.004357a0();\n    fcn.004355c0();\n    fcn.00435540();\n    fcn.00435e40();\n    fcn.00435ca0();\n    fcn.004357a0();\n    fcn.004355c0();\n    fcn.00435540();\n    fcn.00435e40();\n    fcn.00435ca0();\n    fcn.004357a0();\n    fcn.004355c0();\n    fcn.00435540();\n    fcn.00435e40();\n    fcn.00435ca0();\n    fcn.004357a0();\n    fcn.004355c0();\n    fcn.00435540();\n    fcn.00435e40();\n    fcn.00435ca0();\n    fcn.004357a0();\n    fcn.004355c0();\n    fcn.00435540();\n    fcn.00435e40();\n    fcn.00435ca0();\n    fcn.004357a0();\n    fcn.004355c0();\n    fcn.00435540();\n    fcn.00435e40();\n    fcn.00435ca0();\n    fcn.004357a0();\n    fcn.004355c0();\n    fcn.00435540();\n    fcn.00435e40();\n    fcn.00435ca0();\n    fcn.004357a0();\n    fcn.004355c0();\n    fcn.00435540();\n    fcn.00435e40();\n    fcn.00435ca0();\n    fcn.004357a0();\n    fcn.004355c0();\n    fcn.00435540();\n    fcn.00435e40();\n    fcn.00435ca0();\n    fcn.004357a0();\n    fcn.004355c0();\n    fcn.00435540();\n    fcn.00435e40();\n    fcn.00435ca0();\n    fcn.004357a0();\n    fcn.004355c0();\n    fcn.00435540();\n    fcn.00435e40();\n    fcn.00435ca0();\n    fcn.004357a0();\n    fcn.004355c0();\n    return;\n}\n",
        "token_count": 953
    },
    "00407de0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00407de0(ulong param_1, ulong param_2)\n\n{\n    float fVar1;\n    float fVar2;\n    ulong uVar3;\n    uint32_t uVar4;\n    int64_t in_RAX;\n    ulong uVar5;\n    ulong *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (&stack0xfffffffffffffff8 < *(unaff_R14 + 0x10) || &stack0xfffffffffffffff8 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (in_RAX != 0) {\n        uVar4 = *(in_RAX + 0x10);\n        if (uVar4 < 0x8d826c96) {\n            if (uVar4 < 0x5272f85d) {\n                if (uVar4 < 0x3e2307d5) {\n                    if (uVar4 == 0x778cdb8) {\n                        if (in_RAX == 0x49d360) {\n                            fcn.00435540();\n                            fcn.00435e40();\n                            fcn.004355c0();\n                            return;\n                        }\n                    }\n                    else if ((uVar4 == 0x3e2307d4) && (in_RAX == 0x49cd60)) {\n                        fcn.00435540();\n                        fcn.00435c40();\n                        fcn.004355c0();\n                        return;\n                    }\n                }\n                else if (uVar4 == 0x43daea34) {\n                    if (in_RAX == 0x49ce20) {\n                        fcn.00435540();\n                        fcn.00435c40();\n                        fcn.004355c0();\n                        return;\n                    }\n                }\n                else if ((uVar4 == 0x5272f85c) && (in_RAX == 0x49d520)) {\n                    fcn.00435540();\n                    fcn.00435b40();\n                    fcn.004355c0();\n                    return;\n                }\n            }\n            else if (uVar4 < 0x6bed3cfb) {\n                if (uVar4 == 0x64fd0d3c) {\n                    if (in_RAX == 0x49d3e0) {\n                        fcn.00435540();\n                        fcn.00435b40();\n                        fcn.004355c0();\n                        return;\n                    }\n                }\n                else if ((uVar4 == 0x6bed3cfa) && (in_RAX == 0x49cda0)) {\n                    fcn.00435540();\n                    fcn.00435c40();\n                    fcn.004355c0();\n                    return;\n                }\n            }\n            else if (uVar4 == 0x7688f20c) {\n                if (in_RAX == 0x49c5e0) {\n                    uVar5 = unaff_RBX[1];\n                    uVar3 = *unaff_RBX;\n                    fcn.00435540();\n                    fcn.00435aa0(uVar3, uVar5);\n                    fcn.004355c0();\n                    return;\n                }\n            }\n            else if ((uVar4 == 0x8d826c95) && (uVar5 = 0x49c6a0,  in_RAX == 0x49c6a0)) {\n                fcn.00435540();\n                fcn.00435840(uVar5, param_2);\n                fcn.004355c0();\n                return;\n            }\n        }\n        else if (uVar4 < 0x99d6dd44) {\n            if (uVar4 < 0x93592d95) {\n                if (uVar4 == 0x8fc52ddb) {\n                    if (in_RAX == 0x49d4a0) {\n                        fcn.00435540();\n                        fcn.00435b40();\n                        fcn.004355c0();\n                        return;\n                    }\n                }\n                else if ((uVar4 == 0x93592d94) && (uVar5 = 0x49c6e0,  in_RAX == 0x49c6e0)) {\n                    fcn.00435540();\n                    fcn.00435840(uVar5, param_2);\n                    fcn.004355c0();\n                    return;\n                }\n            }\n            else if (uVar4 == 0x95738979) {\n                if (in_RAX == 0x49d4e0) {\n                    fcn.00435540();\n                    fcn.00435b40();\n                    fcn.004355c0();\n                    return;\n                }\n            }\n            else if ((uVar4 == 0x99d6dd43) && (in_RAX == 0x49cde0)) {\n                fcn.00435540();\n                fcn.00435c40();\n                fcn.004355c0();\n                return;\n            }\n        }\n        else if (uVar4 < 0xc1efe3a3) {\n            if (uVar4 == 0xb00b9f48) {\n                if (in_RAX == 0x49c4a0) {\n                    fcn.00435540();\n                    fcn.004357e0();\n                    fcn.004355c0();\n                    return;\n                }\n            }\n            else if ((uVar4 == 0xc1efe3a2) && (in_RAX == 0x49c620)) {\n                fVar1 = *(unaff_RBX + 4);\n                fVar2 = *unaff_RBX;\n                fcn.00435540();\n                fcn.00435aa0(fVar2, fVar1);\n                fcn.004355c0();\n                return;\n            }\n        }\n        else if (uVar4 == 0xcb735792) {\n            if (in_RAX == 0x49cd20) {\n                fcn.00435540();\n                fcn.00435c40();\n                fcn.004355c0();\n                return;\n            }\n        }\n        else if (uVar4 == 0xd9632893) {\n            if (in_RAX == 0x49d420) {\n                fcn.00435540();\n                fcn.00435b40();\n                fcn.004355c0();\n                return;\n            }\n        }\n        else if ((uVar4 == 0xe927f9e3) && (in_RAX == 0x49d460)) {\n            fcn.00435540();\n            fcn.00435b40();\n            fcn.004355c0();\n            return;\n        }\n        fcn.00408360();\n        return;\n    }\n    fcn.00435540();\n    fcn.00435e40();\n    fcn.004355c0();\n    return;\n}\n",
        "token_count": 1529
    },
    "00408360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00408360(void)\n\n{\n    float fVar1;\n    float fVar2;\n    ulong uVar3;\n    int64_t in_RAX;\n    int64_t noname_0;\n    ulong uVar4;\n    ulong *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.004569c0();\n    noname_0 = *(in_RAX + 0x17) - 1;\n    uVar4 = 0x733240;\n    switch(noname_0) {\n    case 0:\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.00435e40();\n        fcn.004357e0();\n        fcn.00435e40();\n        fcn.004355c0();\n        break;\n    case 1:\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.00435e40();\n        fcn.00435c40();\n        fcn.00435e40();\n        fcn.004355c0();\n        break;\n    case 2:\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.00435e40();\n        fcn.00435c40();\n        fcn.00435e40();\n        fcn.004355c0();\n        break;\n    case 3:\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.00435e40();\n        fcn.00435c40();\n        fcn.00435e40();\n        fcn.004355c0();\n        break;\n    case 4:\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.00435e40();\n        fcn.00435c40();\n        fcn.00435e40();\n        fcn.004355c0();\n        break;\n    case 5:\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.00435e40();\n        fcn.00435c40();\n        fcn.00435e40();\n        fcn.004355c0();\n        break;\n    case 6:\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.00435e40();\n        fcn.00435b40();\n        fcn.00435e40();\n        fcn.004355c0();\n        break;\n    case 7:\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.00435e40();\n        fcn.00435b40();\n        fcn.00435e40();\n        fcn.004355c0();\n        break;\n    case 8:\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.00435e40();\n        fcn.00435b40();\n        fcn.00435e40();\n        fcn.004355c0();\n        break;\n    case 9:\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.00435e40();\n        fcn.00435b40();\n        fcn.00435e40();\n        fcn.004355c0();\n        break;\n    case 10:\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.00435e40();\n        fcn.00435b40();\n        fcn.00435e40();\n        fcn.004355c0();\n        break;\n    case 0xb:\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.00435e40();\n        fcn.00435b40();\n        fcn.00435e40();\n        fcn.004355c0();\n        break;\n    case 0xc:\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.00435e40();\n        fcn.00435840(noname_0, uVar4);\n        fcn.00435e40();\n        fcn.004355c0();\n        break;\n    case 0xd:\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.00435e40();\n        fcn.00435840(noname_0, uVar4);\n        fcn.00435e40();\n        fcn.004355c0();\n        break;\n    case 0xe:\n        fVar1 = *unaff_RBX;\n        fVar2 = *(unaff_RBX + 4);\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.00435aa0(fVar1, fVar2);\n        fcn.004355c0();\n        break;\n    case 0xf:\n        uVar4 = *unaff_RBX;\n        uVar3 = unaff_RBX[1];\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.00435aa0(uVar4, uVar3);\n        fcn.004355c0();\n        break;\n    default:\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.00435e40();\n        fcn.00435e40();\n        fcn.00435dc0();\n        fcn.004355c0();\n        break;\n    case 0x17:\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.00435e40();\n        fcn.00435e40();\n        fcn.00435e40();\n        fcn.004355c0();\n    }\n    return;\n}\n",
        "token_count": 1311
    },
    "00409400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.00409400(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int64_t *in_RAX;\n    int64_t unaff_RBX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    uVar2 = *(unaff_RBX + 0x10) ^ *(arg1 + 0x10);\n    iVar3 = 1;\n    while( true ) {\n        uVar2 = uVar2 & *in_RAX - 1U;\n        piVar1 = in_RAX[uVar2 + 2];\n        if (piVar1 == NULL) {\n            return NULL;\n        }\n        if ((*piVar1 == unaff_RBX) && (piVar1[1] == arg1)) break;\n        uVar2 = uVar2 + iVar3;\n        iVar3 = iVar3 + 1;\n    }\n    return piVar1;\n}\n",
        "token_count": 206
    },
    "004095a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004095a0(void)\n\n{\n    int64_t *in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t *unaff_RBX;\n    \n    uVar1 = *(*unaff_RBX + 0x10) ^ *(unaff_RBX[1] + 0x10);\n    iVar2 = 1;\n    while( true ) {\n        uVar1 = uVar1 & *in_RAX - 1U;\n        if (unaff_RBX == in_RAX[uVar1 + 2]) {\n            return;\n        }\n        if (in_RAX[uVar1 + 2] == NULL) break;\n        uVar1 = uVar1 + iVar2;\n        iVar2 = iVar2 + 1;\n    }\n    in_RAX[uVar1 + 2] = unaff_RBX;\n    in_RAX[1] = in_RAX[1] + 1;\n    return;\n}\n",
        "token_count": 214
    },
    "004099c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004099c0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0040a460();\n    if (*0x7ad098 == NULL) {\n        iVar3 = 0;\n        iVar4 = 0;\n    }\n    else {\n        iVar4 = **0x7ad098;\n        iVar3 = (*0x7ad098)[1];\n    }\n    for (iVar2 = 0; iVar2 < iVar3; iVar2 = iVar2 + 1) {\n        iVar1 = *(*(iVar4 + iVar2 * 8) + 0x170);\n        for (iVar5 = 0; iVar5 < iVar1; iVar5 = iVar5 + 1) {\n            fcn.00409460();\n        }\n    }\n    fcn.0040a680();\n    return;\n}\n",
        "token_count": 266
    },
    "00409d60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t * fcn.00409d60(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t *puVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (in_RAX < 0x100) {\n        puVar1 = in_RAX * 8 + 0x7a0de0;\n    }\n    else {\n        puVar1 = fcn.0040bba0(0);\n        *puVar1 = in_RAX;\n    }\n    return puVar1;\n}\n",
        "token_count": 163
    },
    "00409f40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.00409f40(ulong arg1)\n\n{\n    int64_t in_RAX;\n    int64_t *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (unaff_RBX == NULL) {\n        return NULL;\n    }\n    if ((*unaff_RBX != in_RAX) && (unaff_RBX = fcn.00409100(1),  unaff_RBX == NULL)) {\n        return NULL;\n    }\n    return unaff_RBX;\n}\n",
        "token_count": 161
    },
    "0040a0a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0040a0a0(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (unaff_RBX != 0) {\n        iVar1 = fcn.00409100(1);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 147
    },
    "0040a140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a140(void)\n\n{\n    uint64_t *puVar1;\n    code **in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    while (puVar1 = *0x7a5de0,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    for (uVar2 = 0; uVar2 <= *puVar1 && *puVar1 != uVar2; uVar2 = uVar2 + 1) {\n        if (puVar1[uVar2 + 2] != 0) {\n            (**in_RAX)(*in_RAX, in_RAX);\n        }\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "0040a420": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a420(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0040ad80();\n    return;\n}\n",
        "token_count": 82
    },
    "0040a640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a640(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0040adc0();\n    return;\n}\n",
        "token_count": 82
    },
    "0040abc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040abc0(void)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (**(unaff_R14 + 0x30) == unaff_R14) {\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x40) = 0x40abf7;\n                fcn.004303e0();\n                *(*0x20 + -0x40) = 0x40ac0a;\n                fcn.0040a920(0);\n                return;\n            }\n            unaff_RBX = 0x14;\n            *(*0x20 + -0x40) = 0x40ac25;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x40ac35;\n        fcn.0045bb60();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 410
    },
    "0040ac60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar fcn.0040ac60(void)\n\n{\n    uchar uVar1;\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (**(unaff_R14 + 0x30) != unaff_R14) {\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x48) = 0x40ac97;\n                fcn.004303e0();\n                *(*0x20 + -0x48) = 0x40ac9c;\n                fcn.0043daa0();\n                *(*0x20 + -0x48) = 0x40acaf;\n                uVar1 = fcn.0040a920(0);\n                *(*0x20 + -0x19) = uVar1;\n                *(*0x20 + -0x48) = 0x40acb8;\n                fcn.00459700();\n                return *(*0x20 + -0x19);\n            }\n            unaff_RBX = 0x11;\n            *(*0x20 + -0x48) = 0x40acd8;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x40ace8;\n        fcn.0045bb60();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 500
    },
    "0040ad80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040ad80(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0040a460();\n    return;\n}\n",
        "token_count": 82
    },
    "0040adc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040adc0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0040a680();\n    return;\n}\n",
        "token_count": 82
    },
    "0040b820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0040b820(int64_t arg1)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            iVar2 = 0;\n            while( true ) {\n                *(*0x20 + -0x28) = iVar2;\n                *(*0x20 + -0x18) = arg1 + unaff_RBX;\n                *(*0x20 + -0x40) = 0x40b874;\n                uVar1 = fcn.00414c20();\n                if (uVar1 == 0) {\n                    return 0;\n                }\n                if ((uVar1 & *(*0x20 + 0x18) - 1U) == 0) {\n                    return uVar1;\n                }\n                *(*0x20 + -0x20) = uVar1;\n                *(*0x20 + -0x40) = 0x40b8a9;\n                fcn.00414ae0();\n                *(*0x20 + -0x20) = -*(*0x20 + 0x18) & (*(*0x20 + 0x18) + *(*0x20 + -0x20)) - 1U;\n                *(*0x20 + -0x40) = 0x40b8d2;\n                uVar1 = fcn.00414c20();\n                if (uVar1 == *(*0x20 + -0x20)) {\n                    return uVar1;\n                }\n                *(*0x20 + -0x40) = 0x40b8ec;\n                fcn.00414ae0();\n                arg1 = *(*0x20 + -0x28);\n                if (arg1 == 99) break;\n                iVar2 = arg1 + 1;\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n            }\n            unaff_RBX = 0x38;\n            *(*0x20 + -0x40) = 0x40b945;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x40b95a;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 778
    },
    "0040b980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint64_t fcn.0040b980(ulong param_1, ulong param_2, uint64_t param_3, ulong param_4)\n\n{\n    ulong noname_0;\n    int64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint8_t unaff_BL;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint16_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar3 = unaff_BL;\n            if (uVar3 < 0x88) {\n                *(*0x20 + -0x10) = uVar3;\n                *(*0x20 + 0x10) = unaff_BL;\n                *(*0x20 + 8) = in_RAX;\n                noname_0 = *(in_RAX + 0x28 + uVar3 * 8);\n                *(*0x20 + -0x18) = noname_0;\n                *(*0x20 + -0x48) = 0x40b9cd;\n                uVar1 = fcn.004105a0(noname_0, uVar3, param_3, param_4);\n                iVar2 = *(*0x20 + -0x18);\n                uVar3 = *(iVar2 + 0x38);\n                if (uVar1 == uVar3) {\n                    *(*0x20 + -0x20) = uVar3;\n                    uVar5 = *(iVar2 + 0x60);\n                    if (uVar3 == uVar5) {\n                        *(*0x20 + -0x28) = uVar1;\n                        *(*0x20 + -0x48) = 0x40ba05;\n                        fcn.00413300();\n                        *(*0x20 + -0x18) = *(*(*0x20 + 8) + 0x28 + *(*0x20 + -0x10) * 8);\n                        *(*0x20 + -0x48) = 0x40ba1e;\n                        uVar1 = fcn.004105a0(*(*0x20 + -0x10), *(*0x20 + 8), param_3, param_4);\n                        iVar2 = *(*0x20 + -0x18);\n                        goto code_r0x0040ba32;\n                    }\n                }\n                else {\ncode_r0x0040ba32:\n                    if (uVar1 <= *(iVar2 + 0x38) && *(iVar2 + 0x38) != uVar1) {\n                        uVar5 = *(iVar2 + 0x60) + 1;\n                        *(iVar2 + 0x60) = uVar5;\n                        param_3 = *(iVar2 + 0x38);\n                        if (uVar5 <= param_3) {\n                            return uVar1 * *(iVar2 + 0x68) + *(iVar2 + 0x18);\n                        }\n                        *(*0x20 + -0x2a) = uVar5;\n                        *(*0x20 + -0x20) = param_3;\n                        *(*0x20 + -0x48) = 0x40ba85;\n                        fcn.00435540();\n                        *(*0x20 + -0x48) = 0x40ba96;\n                        fcn.00435e40();\n                        *(*0x20 + -0x48) = 0x40baa5;\n                        fcn.00435b40();\n                        *(*0x20 + -0x48) = 0x40bab6;\n                        fcn.00435e40();\n                        *(*0x20 + -0x48) = 0x40bac5;\n                        fcn.00435b40();\n                        *(*0x20 + -0x48) = 0x40baca;\n                        fcn.004357a0();\n                        *(*0x20 + -0x48) = 0x40bacf;\n                        fcn.004355c0();\n                        *(*0x20 + -0x48) = 0x40bae5;\n                        fcn.00433c80();\n                    }\n                    uVar5 = iVar2;\n                    *(*0x20 + -0x48) = 0x40baf6;\n                    fcn.00433c80();\n                }\n                *(*0x20 + -0x2a) = uVar5;\n                *(*0x20 + -0x48) = 0x40bb05;\n                fcn.00435540();\n                *(*0x20 + -0x48) = 0x40bb16;\n                fcn.00435e40();\n                *(*0x20 + -0x48) = 0x40bb25;\n                fcn.00435b40();\n                *(*0x20 + -0x48) = 0x40bb36;\n                fcn.00435e40();\n                *(*0x20 + -0x48) = 0x40bb45;\n                fcn.00435b40();\n                *(*0x20 + -0x48) = 0x40bb4a;\n                fcn.004357a0();\n                *(*0x20 + -0x48) = 0x40bb4f;\n                fcn.004355c0();\n                unaff_BL = 0x31;\n                *(*0x20 + -0x48) = 0x40bb65;\n                fcn.00433c80();\n            }\n            *(*0x20 + -0x48) = 0x40bb72;\n            in_RAX = fcn.0045e240(0x88);\n        }\n        *(puVar4 + 8) = in_RAX;\n        puVar4[0x10] = unaff_BL;\n        *(puVar4 + -8) = 0x40bb85;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_BL = puVar4[0x10];\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1436
    },
    "0040c560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040c560(void)\n\n{\n    ulong *in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0040bba0(1, *in_RAX);\n    return;\n}\n",
        "token_count": 97
    },
    "0040c8c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0040c8c0(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    ulong uStack56;\n    ulong uStack48;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    uStack56 = 0;\n    uStack48 = 0x40c980;\n    auStack24 = CONCAT88(&uStack56, arg1);\n    fcn.0045ba20();\n    return uStack56;\n}\n",
        "token_count": 145
    },
    "0040d0c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\nint64_t fcn.0040d0c0(void)\n\n{\n    uchar auVar1 [16];\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    iVar2 = fcn.0040c560();\n    uVar3 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n    auVar1 = ZEXT816(uVar3) * ZEXT816(uVar3 ^ 0xe7037ed1a0b428db);\n    *(*(unaff_R14 + 0x30) + 0xf0) = uVar3;\n    *(iVar2 + 0xc) = SUB164(auVar1, 0) ^ SUB164(auVar1 >> 0x40, 0);\n    return iVar2;\n}\n",
        "token_count": 243
    },
    "00410540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00410540(void)\n\n{\n    ulong unaff_RBX;\n    \n    fcn.00410cc0(unaff_RBX);\n    fcn.0045e8c0();\n    return;\n}\n",
        "token_count": 47
    },
    "00410580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00410580(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    \n    *(in_RAX + 0x40) = ~*(unaff_RBX + *(in_RAX + 0x48));\n    return;\n}\n",
        "token_count": 62
    },
    "00410aa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00410aa0(ulong arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    uVar2 = arg1 + 1U >> 0x14;\n    if (0x3f < uVar2) {\n        fcn.0045e260(0x40);\n        pcVar1 = swi(3);\n        iVar3 = (*pcVar1)();\n        return iVar3;\n    }\n    iVar3 = *(uVar2 * 8 + 0x7d3e10);\n    if (iVar3 != 0) {\n        iVar3 = *(iVar3 + (arg1 + 1U & 0xfffff) * 8);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 195
    },
    "004131e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004131e0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0045ba20();\n    return;\n}\n",
        "token_count": 82
    },
    "004139c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004139c0(void)\n\n{\n    int32_t iVar1;\n    int64_t in_RAX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(in_RAX + 0x488);\n            if (iVar1 == *0x7d3db8) {\n                return;\n            }\n            if (iVar1 == *0x7d3db8 + -2) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x28) = 0x4139f9;\n                fcn.004137c0();\n                *(*0x20 + -0x28) = 0x413a05;\n                fcn.00447fe0();\n                *(*(*0x20 + 8) + 0x488) = *0x7d3db8;\n                return;\n            }\n            *(*0x20 + -0x10) = *0x7d3db8;\n            *(*0x20 + -0xc) = iVar1;\n            *(*0x20 + -0x28) = 0x413a38;\n            fcn.00435540();\n            *(*0x20 + -0x28) = 0x413a49;\n            fcn.00435e40();\n            *(*0x20 + -0x28) = 0x413a52;\n            fcn.00435b40();\n            *(*0x20 + -0x28) = 0x413a65;\n            fcn.00435e40();\n            *(*0x20 + -0x28) = 0x413a6e;\n            fcn.00435b40();\n            *(*0x20 + -0x28) = 0x413a73;\n            fcn.004357a0();\n            *(*0x20 + -0x28) = 0x413a78;\n            fcn.004355c0();\n            *(*0x20 + -0x28) = 0x413a89;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x413a94;\n        fcn.0045bb60();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 636
    },
    "00414080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414080(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    int64_t unaff_R14;\n    \ncode_r0x00414080:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x40;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + -0x10) = *0x7d4058;\n        *(*0x20 + -0x18) = *0x7d4060;\n        iVar2 = 0;\n        iVar4 = *0x7d4058;\n        iVar3 = *0x7d4060;\n        do {\n            if (iVar3 <= iVar2) {\n                *0x8019b1 = 1;\n                return;\n            }\n            uVar1 = *(iVar4 + iVar2 * 8);\n            uVar6 = uVar1 >> 0x14;\n            if (0x3f < uVar6) goto code_r0x00414178;\n            *(*0x20 + -0x20) = iVar2;\n            iVar3 = *(*(uVar6 * 8 + 0x7d3e10) + (uVar1 & 0xfffff) * 8);\n            if (*(iVar3 + 0x210c0) == 0) {\n                *(*0x20 + -0x28) = iVar3;\n                *(*0x20 + -0x48) = 0x41413f;\n                iVar3 = fcn.0040c8c0(0x8044f8);\n                if (iVar3 == 0) goto code_r0x00414167;\n                *(*(*0x20 + -0x28) + 0x210c0) = iVar3;\n            }\n            else {\n                *(*0x20 + -0x48) = 0x414125;\n                fcn.0045e8c0();\n            }\n            iVar2 = *(*0x20 + -0x20) + 1;\n            iVar3 = *(*0x20 + -0x18);\n            iVar4 = *(*0x20 + -0x10);\n        } while( true );\n    }\n    goto code_r0x00414186;\ncode_r0x00414167:\n    *(*0x20 + -0x48) = 0x414178;\n    fcn.00433c80();\ncode_r0x00414178:\n    *(*0x20 + -0x48) = 0x414185;\n    fcn.0045e260(0x40);\ncode_r0x00414186:\n    *(puVar5 + -8) = 0x41418b;\n    fcn.0045bb60();\n    *0x20 = puVar5;\n    goto code_r0x00414080;\n}\n",
        "token_count": 718
    },
    "004141a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004141a0(void)\n\n{\n    bool bVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x7adf60 == 0) {\n                if (*0x7adfe8 < *0x7adfec) {\n                    bVar1 = true;\n                }\n                else {\n                    bVar1 = false;\n                }\n            }\n            else {\n                bVar1 = true;\n            }\n            if (!bVar1) {\n                *0x8019b1 = 0;\n                return;\n            }\n            *(*0x20 + -0x20) = 0x414209;\n            fcn.00433c80();\n        }\n        *(puVar2 + -8) = 0x41420f;\n        fcn.0045bb60();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 299
    },
    "00414220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00414220(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    uint64_t in_RAX;\n    uint8_t *puVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint8_t unaff_SIL;\n    uint8_t uVar3;\n    uint8_t *unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            if ((*unaff_RDI & unaff_SIL) != 0) {\n                unaff_RBX = in_RAX + 0x800000000000;\n                if (unaff_RBX >> 0x2a < 0x40) {\n                    puVar1 = *(*(*((unaff_RBX >> 0x2a) * 8 + 0x7d3e10) + (unaff_RBX >> 0x16 & 0xfffff) * 8) + 0x210c0) +\n                             (in_RAX >> 0x19 & 0xffff);\n                    uVar3 = 1 << (in_RAX >> 0x16 & 7);\n                    if ((uVar3 & *puVar1) != 0) {\n                        return 1;\n                    }\n                    LOCK();\n                    *puVar1 = *puVar1 | uVar3;\n                    return 0;\n                }\n                arg1 = 0x40;\n                *(*0x20 + -0x40) = 0x4142da;\n                in_RAX = fcn.0045e260(0x40);\n            }\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x40) = 0x4142ee;\n            fcn.00435540();\n            *(*0x20 + -0x40) = 0x4142f3;\n            fcn.00435540();\n            *(*0x20 + -0x40) = 0x414305;\n            fcn.00435e40();\n            *(*0x20 + -0x40) = 0x41430f;\n            fcn.00435ca0();\n            *(*0x20 + -0x40) = 0x414314;\n            fcn.004357a0();\n            *(*0x20 + -0x40) = 0x414319;\n            fcn.004355c0();\n            *(*0x20 + -0x40) = 0x41431e;\n            fcn.00435540();\n            *(*0x20 + -0x40) = 0x41432f;\n            fcn.00435e40();\n            *(*0x20 + -0x40) = 0x414339;\n            fcn.00435ca0();\n            *(*0x20 + -0x40) = 0x41434a;\n            fcn.00435e40();\n            *(*0x20 + -0x40) = 0x414354;\n            fcn.00435ca0();\n            *(*0x20 + -0x40) = 0x414365;\n            fcn.00435e40();\n            *(*0x20 + -0x40) = 0x41436a;\n            fcn.004355c0();\n            *(*0x20 + -0x40) = 0x414385;\n            fcn.0041cd40(*(*0x20 + -0x10));\n            arg1 = *(*0x20 + 8);\n            unaff_RDI = 0xffffffffffffffff;\n            *(*0x20 + -0x40) = 0x4143a5;\n            fcn.0041cd40(arg1);\n            *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n            unaff_RBX = 0x1f;\n            *(*0x20 + -0x40) = 0x4143c5;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        puVar2[0x28] = unaff_SIL;\n        *(puVar2 + 0x30) = arg3;\n        *(puVar2 + -8) = 0x4143e9;\n        fcn.0045bb60();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        unaff_SIL = puVar2[0x28];\n        arg3 = *(puVar2 + 0x30);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 1249
    },
    "00414420": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00414420(void)\n\n{\n    int64_t in_RAX;\n    ulong uStack16;\n    \n    fcn.0042cbe0();\n    LOCK();\n    *0x802458 = *0x802458 + in_RAX;\n    fcn.00430f00();\n    return uStack16;\n}\n",
        "token_count": 72
    },
    "004144c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004144c0(void)\n\n{\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    LOCK();\n    *0x802458 = *0x802458 - unaff_RBX;\n    fcn.004146a0(unaff_RBX);\n    return;\n}\n",
        "token_count": 116
    },
    "00414520": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414520(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (iVar1 = *0x802458,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    LOCK();\n    *0x802458 = *0x802458 + arg1;\n    fcn.00414880(iVar1);\n    return;\n}\n",
        "token_count": 124
    },
    "00414580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414580(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    \n    fcn.0042cbe0();\n    iVar1 = *0x802458;\n    LOCK();\n    *0x802458 = *0x802458 - unaff_RBX;\n    fcn.00414ae0(iVar1);\n    return;\n}\n",
        "token_count": 88
    },
    "004145e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004145e0(void)\n\n{\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    LOCK();\n    *0x802458 = *0x802458 - unaff_RBX;\n    fcn.00414be0(unaff_RBX);\n    return;\n}\n",
        "token_count": 116
    },
    "00414640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414640(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0042cbe0();\n    return;\n}\n",
        "token_count": 85
    },
    "00414be0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414be0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.004146a0();\n    return;\n}\n",
        "token_count": 82
    },
    "00414c20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00414c20(void)\n\n{\n    int64_t unaff_R14;\n    int64_t iStack24;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00430f00();\n    if (iStack24 != 0) {\n        return iStack24;\n    }\n    fcn.00430f00();\n    return 0;\n}\n",
        "token_count": 122
    },
    "00415e80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00415e80(void)\n\n{\n    ulong arg1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    *0x7adbbc = 0x80000000;\n    fcn.0041e7e0();\n    arg1 = fcn.0041e860();\n    fcn.0041d380(arg1);\n    *0x7ae058 = 0x100000001;\n    return;\n}\n",
        "token_count": 142
    },
    "00417ea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00417ea0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    for (; *0x8019e0 < *0x8019f0; *0x8019e0 = *0x8019e0 + 1) {\n        fcn.0043e560();\n        fcn.0040ac60();\n        *0x7ae060 = 0;\n    }\n    return;\n}\n",
        "token_count": 143
    },
    "004191a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004191a0(ulong arg1)\n\n{\n    int64_t iVar1;\n    int32_t *in_RAX;\n    char unaff_BL;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            if (*in_RAX == 0) {\n                *in_RAX = 1;\n                if (*(in_RAX + 8) != unaff_BL) {\n                    *(*0x20 + -0x10) = in_RAX;\n                    *(*0x20 + 0x10) = unaff_BL;\n                    *(*0x20 + -0x28) = 0x4191e8;\n                    fcn.004193a0();\n                    iVar1 = *(*0x20 + -0x10);\n                    *(iVar1 + 0x20) = *(*0x20 + 0x10);\n                    *(iVar1 + 0x21) = 1;\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x419214;\n                fcn.00433c80();\n            }\n            unaff_BL = '/';\n            *(*0x20 + -0x28) = 0x419225;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar2 + 8) = in_RAX;\n        puVar2[0x10] = unaff_BL;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x419239;\n        fcn.0045bb60();\n        in_RAX = *(puVar2 + 8);\n        unaff_BL = puVar2[0x10];\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 502
    },
    "004195a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004195a0(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    \n    uVar1 = *(in_RAX + 8);\n    uVar3 = *(in_RAX + 0x10) - uVar1;\n    uVar2 = arg1 - unaff_RBX;\n    if ((0 < uVar2) && (uVar3 <= uVar2)) {\n        *(in_RAX + 0x18) = *(in_RAX + 0x18) + (uVar2 - uVar3);\n        *(in_RAX + 8) = *(in_RAX + 0x10);\n        if (uVar3 != 0) {\n            *(in_RAX + 4) = 1;\n            *(in_RAX + 0x48) = *0x805518 + 1;\n        }\n        return;\n    }\n    if ((uVar2 < 0) && (uVar1 <= unaff_RBX - arg1)) {\n        *(in_RAX + 8) = 0;\n    }\n    else {\n        *(in_RAX + 8) = uVar1 - (unaff_RBX - arg1);\n    }\n    if ((uVar2 != 0) && (uVar3 == 0)) {\n        *(in_RAX + 4) = 0;\n    }\n    return;\n}\n",
        "token_count": 335
    },
    "004196a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004196a0(ulong arg1)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    int32_t *in_RAX;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    ulong unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            if (*in_RAX == 0) {\n                *in_RAX = 1;\n                *(*0x20 + 0x18) = arg1;\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x28) = 0x4196e5;\n                fcn.004193a0();\n                iVar2 = *(*0x20 + 0x18);\n                iVar4 = *(*0x20 + -0x10);\n                *(iVar4 + 0x4c) = iVar2;\n                puVar5 = iVar2 * 1000000000;\n                *(iVar4 + 0x10) = puVar5;\n                puVar6 = *(iVar4 + 8);\n                if (puVar5 < puVar6) {\n                    *(iVar4 + 8) = puVar5;\n                    uVar1 = *(iVar4 + 4);\n                    *(iVar4 + 4) = 1;\n                    puVar6 = uVar1;\n                    uVar3 = *(iVar4 + 0x48);\n                    *(iVar4 + 0x48) = *0x805518 + 1;\n                    puVar5 = uVar3;\n                }\n                else if (puVar6 < puVar5) {\n                    puVar5 = iVar4 + 4;\n                    uVar1 = *puVar5;\n                    *puVar5 = 0;\n                    puVar6 = uVar1;\n                }\n                *(*0x20 + -0x28) = 0x419737;\n                fcn.00419640(puVar5, puVar6);\n                return;\n            }\n            unaff_RBX = 0x28;\n            *(*0x20 + -0x28) = 0x419752;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x419766;\n        fcn.0045bb60();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1._0_4_ = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 740
    },
    "00419ba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00419ba0(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x7adfec <= *0x7adfe8) {\n                *(*0x20 + -0x20) = 0;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x18) = 0x419c80;\n                *(*0x20 + -0x10) = *0x20 + -0x20;\n                *(*0x20 + -0x40) = 0x419bf7;\n                fcn.004372e0();\n                return;\n            }\n            *(*0x20 + -0x24) = *0x7adfe8;\n            *(*0x20 + -0x28) = *0x7adfec;\n            *(*0x20 + -0x40) = 0x419c0e;\n            fcn.00435540();\n            *(*0x20 + -0x40) = 0x419c17;\n            fcn.00435b40();\n            *(*0x20 + -0x40) = 0x419c28;\n            fcn.00435e40();\n            *(*0x20 + -0x40) = 0x419c31;\n            fcn.00435b40();\n            *(*0x20 + -0x40) = 0x419c45;\n            fcn.00435e40();\n            *(*0x20 + -0x40) = 0x419c4a;\n            fcn.004355c0();\n            *(*0x20 + -0x40) = 0x419c5b;\n            fcn.00433c80();\n        }\n        *(puVar1 + -8) = 0x419c65;\n        fcn.0045bb60();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 545
    },
    "0041a360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0041a360(int64_t arg1)\n\n{\n    uint64_t unaff_RBX;\n    int64_t unaff_RSI;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (unaff_RBX <= unaff_RSI * 0x40000) {\n        return 0;\n    }\n    iVar1 = 0x40000;\n    if (unaff_RBX < unaff_RSI * 0x40000 + 0x40000U) {\n        iVar1 = unaff_RBX + unaff_RSI * -0x40000;\n    }\n    fcn.0041c260(arg1 + unaff_RSI * 0x1000);\n    return iVar1;\n}\n",
        "token_count": 214
    },
    "0041aec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041aec0(void)\n\n{\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0040a460();\n    *0x7ae098 = in_XMM15;\n    fcn.0043c1a0();\n    fcn.0040a680();\n    return;\n}\n",
        "token_count": 124
    },
    "0041c9a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041c9a0(void)\n\n{\n    int64_t iVar1;\n    ulong arg3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    arg3 = 0;\n    iVar1 = fcn.00410940(0);\n    if (iVar1 != 0) {\n        fcn.0041ca20(0, *(unaff_R14 + 0x30), arg3);\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "0041d2a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041d2a0(void)\n\n{\n    int64_t noname_1;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong arg3;\n    int64_t unaff_R14;\n    \n    while (iVar2 = *0x7ada48,  iVar1 = *0x7ada40,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    for (iVar3 = 0; iVar3 < iVar2; iVar3 = iVar3 + 1) {\n        noname_1 = *(*(iVar1 + iVar3 * 8) + 0x40);\n        if ((noname_1 != 0) && (*(noname_1 + 0x10) != 0)) {\n            arg3 = 0;\n            fcn.00410940(0);\n            fcn.0041ca20(0, noname_1, arg3);\n        }\n    }\n    return;\n}\n",
        "token_count": 249
    },
    "0041d7c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\ndouble fcn.0041d7c0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    double dVar3;\n    int32_t *in_RAX;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int32_t iVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    iVar7 = *in_RAX;\n    iVar1 = *(in_RAX + 0x22);\n    iVar6 = *(in_RAX + 0x24);\n    iVar2 = *(in_RAX + 0x30);\n    iVar8 = *(in_RAX + 0x32);\n    iVar9 = *(in_RAX + 0x34);\n    iVar4 = fcn.0041e400();\n    iVar5 = *(in_RAX + 0x26) + *(in_RAX + 0x28) + *(in_RAX + 0x2c);\n    if (iVar7 < 0) {\n        iVar7 = 100000;\n    }\n    iVar9 = iVar2 + iVar8 + iVar9;\n    iVar6 = *(in_RAX + 0x2a) + iVar6 + *(in_RAX + 0x2c);\n    if (iVar5 < iVar9) {\n        iVar2 = ((iVar4 - *(in_RAX + 0x1e)) / iVar5) * iVar6 + *(in_RAX + 0x1e);\n        iVar8 = (*0x7327d0 + iVar7 / *0x732810) * iVar4;\n        iVar4 = iVar2;\n        iVar5 = iVar6;\n        if (iVar8 < iVar2) {\n            iVar4 = iVar8;\n        }\n    }\n    if (iVar4 < iVar1) {\n        iVar4 = *0x7327d8 * iVar4;\n        iVar5 = iVar6;\n    }\n    iVar5 = iVar5 - iVar9;\n    if (iVar5 < 1000) {\n        iVar5 = 1000;\n    }\n    iVar4 = iVar4 - iVar1;\n    if (iVar4 < 1) {\n        iVar4 = 1;\n    }\n    *(in_RAX + 0x46) = iVar5 / iVar4;\n    dVar3 = *(in_RAX + 0x48);\n    *(in_RAX + 0x48) = iVar4 / iVar5;\n    return dVar3;\n}\n",
        "token_count": 593
    },
    "0041e400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0041e400(void)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    uVar2 = *(in_RAX + 0x68);\n    uVar1 = fcn.0041e4a0();\n    if (uVar2 <= uVar1) {\n        if (uVar2 < *(in_RAX + 0x70)) {\n            uVar2 = *(in_RAX + 0x70);\n        }\n        uVar1 = uVar2;\n        if ((*(in_RAX + 0x78) != -1) && (uVar3 = *(in_RAX + 0x78) + 0x10000,  uVar2 < uVar3)) {\n            uVar1 = uVar3;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 259
    },
    "0041e540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0041e540(void)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x40) = 0x41e565;\n            uVar1 = fcn.0041e400();\n            uVar3 = *(*(*0x20 + 8) + 0xb8);\n            if (uVar1 <= uVar3) {\n                return;\n            }\n            if (unaff_RBX < uVar3) {\n                unaff_RBX = uVar3;\n            }\n            uVar2 = uVar1 - uVar3 >> 6;\n            uVar5 = uVar2 * 0x2d + uVar3;\n            if (unaff_RBX < uVar5) {\n                unaff_RBX = uVar5;\n            }\n            uVar3 = uVar3 + uVar2 * 0x3d;\n            if ((0x400000 < uVar1) && (uVar3 < uVar1 - 0x400000)) {\n                uVar3 = uVar1 - 0x400000;\n            }\n            uVar2 = *(*(*0x20 + 8) + 0x18);\n            uVar5 = uVar1 - uVar2;\n            if (uVar1 < uVar2) {\n                uVar5 = unaff_RBX;\n            }\n            if (uVar3 < unaff_RBX) {\n                uVar3 = unaff_RBX;\n            }\n            if (uVar5 < unaff_RBX) {\n                uVar5 = unaff_RBX;\n            }\n            if (uVar3 < uVar5) {\n                uVar5 = uVar3;\n            }\n            if (uVar5 <= uVar1) {\n                return;\n            }\n            *(*0x20 + -0x10) = uVar1;\n            *(*0x20 + -0x28) = uVar5;\n            *(*0x20 + -0x18) = uVar3;\n            *(*0x20 + -0x20) = unaff_RBX;\n            *(*0x20 + -0x40) = 0x41e618;\n            fcn.00435540();\n            *(*0x20 + -0x40) = 0x41e629;\n            fcn.00435e40();\n            *(*0x20 + -0x40) = 0x41e633;\n            fcn.00435b40();\n            *(*0x20 + -0x40) = 0x41e645;\n            fcn.00435e40();\n            *(*0x20 + -0x40) = 0x41e64f;\n            fcn.00435b40();\n            *(*0x20 + -0x40) = 0x41e654;\n            fcn.004357a0();\n            *(*0x20 + -0x40) = 0x41e659;\n            fcn.004355c0();\n            *(*0x20 + -0x40) = 0x41e65e;\n            fcn.00435540();\n            *(*0x20 + -0x40) = 0x41e66f;\n            fcn.00435e40();\n            *(*0x20 + -0x40) = 0x41e679;\n            fcn.00435b40();\n            *(*0x20 + -0x40) = 0x41e68a;\n            fcn.00435e40();\n            *(*0x20 + -0x40) = 0x41e694;\n            fcn.00435b40();\n            *(*0x20 + -0x40) = 0x41e699;\n            fcn.004357a0();\n            *(*0x20 + -0x40) = 0x41e69e;\n            fcn.004355c0();\n            unaff_RBX = 0x2d;\n            *(*0x20 + -0x40) = 0x41e6af;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x41e6ba;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1135
    },
    "0041ea60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041ea60(void)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    code *pcVar4;\n    int64_t in_RAX;\n    ulong uVar5;\n    int32_t iVar6;\n    \n    while( true ) {\n        uVar2 = *(in_RAX + 0x110);\n        iVar6 = uVar2;\n        if (uVar2 >> 0x20 <= iVar6) {\n            return 0;\n        }\n        if (iVar6 < 0) break;\n        LOCK();\n        puVar1 = in_RAX + 0x110;\n        uVar3 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar2 == uVar3) * (*puVar1 ^ (uVar2 & 0xffffffff00000000 | iVar6 + 1));\n        if (uVar2 == uVar3) {\n            return 1;\n        }\n    }\n    fcn.00435540();\n    fcn.00435e40();\n    fcn.00435c40();\n    fcn.00435e40();\n    fcn.00435c40();\n    fcn.004357a0();\n    fcn.004355c0();\n    fcn.00433c80();\n    pcVar4 = swi(3);\n    uVar5 = (*pcVar4)();\n    return uVar5;\n}\n",
        "token_count": 319
    },
    "0041eb40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0041eb40(void)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            while( true ) {\n                uVar2 = *(in_RAX + 0x110);\n                uVar3 = uVar2 - 1;\n                if (uVar3 < 0) break;\n                LOCK();\n                puVar1 = in_RAX + 0x110;\n                bVar5 = uVar2 == *puVar1;\n                *puVar1 = *puVar1 ^ bVar5 * (*puVar1 ^ (uVar2 & 0xffffffff00000000 | uVar3));\n                if (bVar5) {\n                    return uVar2 ^ !bVar5 * (uVar2 ^ *puVar1);\n                }\n            }\n            *(*0x20 + -0x10) = uVar2 >> 0x20;\n            *(*0x20 + -0x18) = uVar2;\n            *(*0x20 + -0x30) = 0x41ebab;\n            fcn.00435540();\n            *(*0x20 + -0x30) = 0x41ebbc;\n            fcn.00435e40();\n            *(*0x20 + -0x30) = 0x41ebc9;\n            fcn.00435c40();\n            *(*0x20 + -0x30) = 0x41ebda;\n            fcn.00435e40();\n            *(*0x20 + -0x30) = 0x41ebe7;\n            fcn.00435c40();\n            *(*0x20 + -0x30) = 0x41ebec;\n            fcn.004357a0();\n            *(*0x20 + -0x30) = 0x41ebf1;\n            fcn.004355c0();\n            *(*0x20 + -0x30) = 0x41ec05;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x41ec10;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 655
    },
    "0041ec20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0041ec20(void)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    int32_t unaff_EBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar4;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            while (uVar2 = *(in_RAX + 0x110),  -1 < uVar2) {\n                LOCK();\n                puVar1 = in_RAX + 0x110;\n                bVar4 = uVar2 == *puVar1;\n                *puVar1 = *puVar1 ^ bVar4 * (*puVar1 ^ (uVar2 & 0xffffffff | unaff_EBX << 0x20));\n                if (bVar4) {\n                    return uVar2 ^ !bVar4 * (uVar2 ^ *puVar1);\n                }\n            }\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + -0x10) = uVar2;\n            *(*0x20 + -0x28) = 0x41ec85;\n            fcn.00435540();\n            *(*0x20 + -0x28) = 0x41ec96;\n            fcn.00435e40();\n            *(*0x20 + -0x28) = 0x41eca5;\n            fcn.00435c40();\n            *(*0x20 + -0x28) = 0x41ecb6;\n            fcn.00435e40();\n            *(*0x20 + -0x28) = 0x41ecc5;\n            fcn.00435c40();\n            *(*0x20 + -0x28) = 0x41ecca;\n            fcn.004357a0();\n            *(*0x20 + -0x28) = 0x41eccf;\n            fcn.004355c0();\n            unaff_EBX = 0x1a;\n            *(*0x20 + -0x28) = 0x41ece5;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + -8) = 0x41ecf4;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 680
    },
    "00420880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00420880(char param_1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t *piVar2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*(in_RAX + 0x100) < unaff_RBX || *(in_RAX + 0x100) == unaff_RBX) &&\n               (unaff_RBX <= *(in_RAX + 0x108) && *(in_RAX + 0x108) != unaff_RBX)) {\n                piVar2 = in_RAX + 0x118;\n                if (param_1 != '\\0') {\n                    piVar2 = in_RAX + 0x128;\n                }\n                *(*0x20 + -0x10) = piVar2;\n                *(*0x20 + 0x10) = unaff_RBX;\n                iVar1 = *piVar2;\n                if (iVar1 == 0) {\n                    *(*0x20 + -0x28) = 0x42092d;\n                    iVar1 = fcn.00423080();\n                    *(iVar1 + 0x10) = in_XMM15;\n                    **(*0x20 + -0x10) = iVar1;\n                    unaff_RBX = *(*0x20 + 0x10);\n                }\n                else if (*(iVar1 + 0x10) == 0xfc) {\n                    iVar1 = *(in_RAX + 0x120);\n                    if (iVar1 == 0) {\n                        *(*0x20 + -0x28) = 0x420907;\n                        iVar1 = fcn.00423080();\n                        piVar2 = *(*0x20 + -0x10);\n                        unaff_RBX = *(*0x20 + 0x10);\n                    }\n                    else {\n                        *(in_RAX + 0x120) = 0;\n                    }\n                    *(iVar1 + 0x10) = 0;\n                    *(iVar1 + 0x18) = *piVar2;\n                    *piVar2 = iVar1;\n                }\n                if (*(iVar1 + 0x10) < 0xfc) {\n                    *(iVar1 + 0x20 + *(iVar1 + 0x10) * 8) = unaff_RBX;\n                    *(iVar1 + 0x10) = *(iVar1 + 0x10) + 1;\n                    return;\n                }\n                param_1 = -4;\n                *(*0x20 + -0x28) = 0x42096b;\n                fcn.0045e240(0xfc);\n            }\n            unaff_RBX = 0x1b;\n            *(*0x20 + -0x28) = 0x42097c;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        puVar3[0x18] = param_1;\n        *(puVar3 + -8) = 0x420990;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        param_1 = puVar3[0x18];\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 874
    },
    "00422901": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00422901(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    \n    if (*0x7adbbc == -0x80000000) {\n        *0x7d3df8 = 0.0;\n    }\n    else {\n        iVar1 = (in_RAX - *0x802388) + -0x100000;\n        if (iVar1 < 0x2000) {\n            iVar1 = 0x2000;\n        }\n        if (*0x7d3dd8 - *0x7d3de0 < 1) {\n            *0x7d3df8 = 0.0;\n        }\n        else {\n            *0x7d3df8 = (*0x7d3dd8 - *0x7d3de0) / iVar1;\n            *0x7d3df0 = *0x802388;\n            *0x7d3de8 = *0x7d3de0;\n        }\n    }\n    return;\n}\n",
        "token_count": 230
    },
    "004229a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004229a0(void)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    uVar1 = fcn.00423080();\n    *in_RAX = uVar1;\n    iVar2 = fcn.004233c0();\n    if (iVar2 == 0) {\n        iVar2 = fcn.00423080();\n    }\n    in_RAX[1] = iVar2;\n    return;\n}\n",
        "token_count": 161
    },
    "00423300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00423300(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00423020();\n    fcn.0040a200();\n    return;\n}\n",
        "token_count": 89
    },
    "00423360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00423360(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00422fc0();\n    fcn.0040a200();\n    return;\n}\n",
        "token_count": 90
    },
    "004233c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.004233c0(void)\n\n{\n    int64_t *piVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (*0x7adf60 == 0) {\n        piVar1 = NULL;\n    }\n    else {\n        piVar1 = (*0x7adf60 >> 0x13) << 3;\n        *0x7adf60 = *piVar1;\n        LOCK();\n    }\n    if (piVar1 == NULL) {\n        return NULL;\n    }\n    fcn.00422fc0();\n    return piVar1;\n}\n",
        "token_count": 177
    },
    "00423460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.00423460(void)\n\n{\n    int64_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = 0x423485;\n            iVar2 = fcn.00423080();\n            iVar1 = *(*0x20 + 8);\n            iVar3 = *(iVar1 + 0x10) / 2;\n            *(iVar1 + 0x10) = *(iVar1 + 0x10) - iVar3;\n            *(iVar2 + 0x10) = iVar3;\n            if (*(iVar1 + 0x10) < 0xfd) {\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x30) = 0x4234d3;\n                fcn.0045ebc0(iVar3 << 3);\n                *(*0x20 + -0x30) = 0x4234dd;\n                fcn.00423360();\n                return *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x30) = 0x4234f9;\n            in_RAX = fcn.0045e240(0xfd);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x423505;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 482
    },
    "00423a20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00423a20(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    bool bVar3;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x7d3e10);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 == 0) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = *(iVar2 + 99) != '\\x01';\n    }\n    if (((!bVar3) && (*(iVar2 + 0x18) < in_RAX || *(iVar2 + 0x18) == in_RAX)) &&\n       (in_RAX <= *(iVar2 + 0x70) && *(iVar2 + 0x70) != in_RAX)) {\n        return iVar2;\n    }\n    return 0;\n}\n",
        "token_count": 354
    },
    "00424280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.00424280(uchar param_1)\n\n{\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    ulong uStack56;\n    ulong uStack48;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    uStack56 = 0;\n    uStack48 = 0x424340;\n    auStack24 = CONCAT151(SUB1615(CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da))) >> 8\n                                  , 0), param_1);\n    auStack24 = CONCAT88(&uStack56, auStack24._0_8_);\n    fcn.0045ba20();\n    return uStack56;\n}\n",
        "token_count": 250
    },
    "004243c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004243c0(char param_1)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (param_1 != '\\0') {\n                *(*0x20 + -0x28) = 0x4243df;\n                fcn.004247a0();\n                return;\n            }\n            unaff_RBX = 0x3c;\n            *(*0x20 + -0x28) = 0x4243fa;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        puVar1[0x18] = param_1;\n        *(puVar1 + -8) = 0x42440e;\n        fcn.004602a0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        param_1 = puVar1[0x18];\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 366
    },
    "004252c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004252c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0045ba20();\n    return;\n}\n",
        "token_count": 82
    },
    "004253c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004253c0(uchar param_1)\n\n{\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.004602a0();\n    }\n    *(unaff_RBX + 100) = 1;\n    fcn.0040a460();\n    fcn.00425440(param_1);\n    fcn.0040a680();\n    return;\n}\n",
        "token_count": 129
    },
    "004260c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004260c0(void)\n\n{\n    ulong *puVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    puVar1 = fcn.00425ca0();\n    if (puVar1 != NULL) {\n        fcn.0040a460();\n        *0x7da778 = *0x7da778 - *0x7da748;\n        *puVar1 = *0x7da760;\n        *0x7da760 = puVar1;\n        fcn.0040a680();\n        return;\n    }\n    return;\n}\n",
        "token_count": 173
    },
    "00426160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00426160(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    ulong in_RAX;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x30) = 0x42618f;\n            fcn.0040a460();\n            *(*0x20 + -0x30) = 0x42619b;\n            uVar3 = fcn.00415d40();\n            *(*0x20 + -0x18) = uVar3;\n            *(*0x20 + -0x30) = 0x4261ae;\n            fcn.0040a680();\n            iVar1 = *(*0x20 + -0x18);\n            *(iVar1 + 10) = 2;\n            *(iVar1 + 0x10) = *(*0x20 + 0x10);\n            *(*0x20 + -0x30) = 0x4261ca;\n            cVar2 = fcn.00425a60();\n            if (cVar2 != '\\0') {\n                return;\n            }\n            unaff_RBX = 0x25;\n            *(*0x20 + -0x30) = 0x4261e9;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x4261f9;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 543
    },
    "00426360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00426360(void)\n\n{\n    bool bVar1;\n    int64_t *piVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    \n    do {\n        piVar2 = *0x801cd0;\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar7 = in_RAX + 0x3fU >> 6;\n            if (*0x801cd0 == NULL) {\n                bVar1 = true;\n            }\n            else {\n                bVar1 = 0xfff0 < **0x801cd0 + uVar7 * 8;\n            }\n            if (bVar1) {\n                iVar5 = 0;\ncode_r0x004263f4:\n                if (iVar5 != 0) {\n                    return iVar5;\n                }\n                *(*0x20 + -0x10) = uVar7 * 8;\n                *(*0x20 + -0x18) = uVar7;\n                *(*0x20 + -0x48) = 0x426415;\n                fcn.0040a460();\n                piVar2 = *0x801cd0;\n                if (*0x801cd0 == NULL) {\n                    iVar5 = *(*0x20 + -0x18);\n                    bVar1 = true;\n                }\n                else {\n                    iVar5 = *(*0x20 + -0x18);\n                    bVar1 = 0xfff0 < **0x801cd0 + iVar5 * 8;\n                }\n                if (bVar1) {\n                    iVar5 = 0;\ncode_r0x00426494:\n                    if (iVar5 != 0) {\n                        *(*0x20 + -0x20) = iVar5;\n                        *(*0x20 + -0x48) = 0x42660c;\n                        fcn.0040a680();\n                        return *(*0x20 + -0x20);\n                    }\n                    *(*0x20 + -0x48) = 0x4264a5;\n                    piVar4 = fcn.00426780();\n                    piVar2 = *0x801cd0;\n                    if (*0x801cd0 == NULL) {\n                        iVar5 = *(*0x20 + -0x18);\n                        bVar1 = true;\n                    }\n                    else {\n                        iVar5 = *(*0x20 + -0x18);\n                        bVar1 = 0xfff0 < **0x801cd0 + iVar5 * 8;\n                    }\n                    if (bVar1) {\n                        iVar9 = *(*0x20 + -0x10);\n                        iVar6 = 0;\ncode_r0x00426520:\n                        if (iVar6 != 0) {\n                            *(*0x20 + -0x28) = iVar6;\n                            piVar4[1] = *0x801cc8;\n                            *(*0x20 + -0x48) = 0x4265ea;\n                            *0x801cc8 = piVar4;\n                            fcn.0040a680();\n                            return *(*0x20 + -0x28);\n                        }\n                        if (piVar4 == NULL) {\n                            bVar1 = true;\n                        }\n                        else {\n                            bVar1 = 0xfff0 < *piVar4 + iVar5 * 8;\n                        }\n                        if (bVar1) {\n                            iVar5 = 0;\ncode_r0x00426585:\n                            if (iVar5 != 0) {\n                                *(*0x20 + -0x30) = iVar5;\n                                piVar4[1] = *0x801cd0;\n                                *(*0x20 + -0x48) = 0x4265b6;\n                                *0x801cd0 = piVar4;\n                                fcn.0040a680();\n                                return *(*0x20 + -0x30);\n                            }\n                            *(*0x20 + -0x48) = 0x426639;\n                            fcn.00433c80();\n                        }\n                        else {\n                            LOCK();\n                            iVar6 = *piVar4;\n                            *piVar4 = *piVar4 + iVar9;\n                            uVar7 = iVar6 + iVar5 * 8;\n                            if (0xfff0 < uVar7) {\n                                iVar5 = 0;\n                                goto code_r0x00426585;\n                            }\n                            uVar7 = uVar7 - iVar9;\n                            if (uVar7 < 0xfff0) {\n                                iVar5 = piVar4 + uVar7 + 0x10;\n                                goto code_r0x00426585;\n                            }\n                        }\n                        *(*0x20 + -0x48) = 0x426646;\n                        fcn.0045e260(0xfff0);\n                    }\n                    else {\n                        iVar9 = *(*0x20 + -0x10);\n                        LOCK();\n                        iVar6 = **0x801cd0;\n                        **0x801cd0 = **0x801cd0 + iVar9;\n                        uVar7 = iVar6 + iVar5 * 8;\n                        if (0xfff0 < uVar7) {\n                            iVar6 = 0;\n                            goto code_r0x00426520;\n                        }\n                        uVar7 = uVar7 - iVar9;\n                        if (uVar7 < 0xfff0) {\n                            iVar6 = piVar2 + uVar7 + 0x10;\n                            goto code_r0x00426520;\n                        }\n                    }\n                    *(*0x20 + -0x48) = 0x426653;\n                    fcn.0045e260(0xfff0);\n                }\n                else {\n                    iVar9 = *(*0x20 + -0x10);\n                    LOCK();\n                    iVar6 = **0x801cd0;\n                    **0x801cd0 = **0x801cd0 + iVar9;\n                    uVar7 = iVar6 + iVar5 * 8;\n                    if (0xfff0 < uVar7) {\n                        iVar5 = 0;\n                        goto code_r0x00426494;\n                    }\n                    uVar7 = uVar7 - iVar9;\n                    if (uVar7 < 0xfff0) {\n                        iVar5 = piVar2 + uVar7 + 0x10;\n                        goto code_r0x00426494;\n                    }\n                }\n                *(*0x20 + -0x48) = 0x42665d;\n                fcn.0045e260(0xfff0);\n            }\n            else {\n                LOCK();\n                iVar5 = **0x801cd0;\n                **0x801cd0 = **0x801cd0 + uVar7 * 8;\n                uVar3 = iVar5 + uVar7 * 8;\n                if (0xfff0 < uVar3) {\n                    iVar5 = 0;\n                    goto code_r0x004263f4;\n                }\n                uVar3 = uVar3 + uVar7 * -8;\n                if (uVar3 < 0xfff0) {\n                    iVar5 = piVar2 + uVar3 + 0x10;\n                    goto code_r0x004263f4;\n                }\n            }\n            *(*0x20 + -0x48) = 0x426667;\n            in_RAX = fcn.0045e260(0xfff0);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + -8) = 0x426672;\n        fcn.0045bb60();\n        in_RAX = *(puVar8 + 8);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1790
    },
    "00426680": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00426680(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00426360();\n    return;\n}\n",
        "token_count": 80
    },
    "004266c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004266c0(void)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0040a460();\n    if (*0x801ce0 != 0) {\n        iVar1 = *0x801ce0;\n        if (*0x801cc8 == 0) {\n            *0x801cc8 = *0x801ce0;\n        }\n        else {\n            do {\n                iVar3 = iVar1;\n                iVar1 = *(iVar3 + 8);\n            } while (iVar1 != 0);\n            *(iVar3 + 8) = *0x801cc8;\n            *0x801cc8 = *0x801ce0;\n        }\n    }\n    uVar2 = *0x801cd0;\n    *0x801ce0 = *0x801cd8;\n    *0x801cd8 = *0x801cd0;\n    *0x801cd0 = 0;\n    fcn.0040a680(uVar2);\n    return;\n}\n",
        "token_count": 290
    },
    "00426780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00426780(void)\n\n{\n    int64_t iVar1;\n    uchar (*pauVar2) [16];\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x801cc8 != 0) {\n                *(*0x20 + -0x18) = *0x801cc8;\n                *0x801cc8 = *(*0x801cc8 + 8);\n                *(*0x20 + -0x30) = 0x4267bf;\n                fcn.0045e8c0();\n                pauVar2 = *(*0x20 + -0x18);\n                goto code_r0x00426802;\n            }\n            *(*0x20 + -0x30) = 0x4267d4;\n            fcn.0040a680();\n            *(*0x20 + -0x30) = 0x4267e5;\n            iVar1 = fcn.00414420();\n            if (iVar1 != 0) {\n                *(*0x20 + -0x10) = iVar1;\n                *(*0x20 + -0x30) = 0x4267fd;\n                fcn.0040a460();\n                pauVar2 = *(*0x20 + -0x10);\ncode_r0x00426802:\n                *pauVar2 = in_XMM15;\n                return;\n            }\n            *(*0x20 + -0x30) = 0x426825;\n            fcn.00433c80();\n        }\n        *(puVar3 + -8) = 0x42682b;\n        fcn.0045bb60();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 488
    },
    "00428980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00428980(void)\n\n{\n    code *pcVar1;\n    uint64_t *in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    uint64_t uVar4;\n    uint64_t unaff_RDI;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    \n    if (unaff_RBX != 0) {\n        uVar5 = *in_RAX;\n        if (uVar5 < 0) {\n            uVar3 = 0x200000;\n            uVar4 = 0x200000;\n            uVar5 = 0x200000;\n        }\n        else {\n            uVar3 = uVar5 & 0x1fffff;\n            uVar4 = uVar5 >> 0x15 & 0x1fffff;\n            uVar5 = uVar5 >> 0x2a & 0x1fffff;\n        }\n        for (iVar2 = 1; iVar2 < unaff_RBX; iVar2 = iVar2 + 1) {\n            uVar8 = in_RAX[iVar2];\n            if (uVar8 < 0) {\n                uVar6 = 0x200000;\n                uVar7 = 0x200000;\n                uVar8 = 0x200000;\n            }\n            else {\n                uVar6 = uVar8 & 0x1fffff;\n                uVar7 = uVar8 >> 0x15 & 0x1fffff;\n                uVar8 = uVar8 >> 0x2a & 0x1fffff;\n            }\n            if (uVar3 == (iVar2 << (unaff_RDI & 0x3f) & -(unaff_RDI < 0x40))) {\n                uVar3 = uVar3 + uVar6;\n            }\n            uVar9 = 1 << (unaff_RDI & 0x3f) & -(unaff_RDI < 0x40);\n            if (uVar8 == uVar9) {\n                uVar8 = uVar9 + uVar5;\n            }\n            if (uVar4 < uVar6 + uVar5) {\n                uVar4 = uVar6 + uVar5;\n            }\n            if (uVar4 < uVar7) {\n                uVar4 = uVar7;\n            }\n            uVar5 = uVar8;\n        }\n        if (uVar4 == 0x200000) {\n            uVar5 = 0x8000000000000000;\n        }\n        else {\n            uVar5 = (uVar5 & 0x1fffff) << 0x2a | (uVar4 & 0x1fffff) << 0x15 | uVar3 & 0x1fffff;\n        }\n        return uVar5;\n    }\n    fcn.0045e240(0);\n    pcVar1 = swi(3);\n    uVar5 = (*pcVar1)();\n    return uVar5;\n}\n",
        "token_count": 701
    },
    "0042b0a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\nvoid fcn.0042b0a0(void)\n\n{\n    bool bVar1;\n    uchar auVar2 [16];\n    uchar auVar3 [16];\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (in_RAX < 1) {\n        in_RAX = 1;\n    }\n    if (*0x801a60 < 1) {\n        bVar1 = true;\n    }\n    else if (in_RAX < *0x801a60) {\n        uVar4 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n        auVar3 = ZEXT816(uVar4) * ZEXT816(uVar4 ^ 0xe7037ed1a0b428db);\n        auVar2 = SEXT816(*0x801a60);\n        *(*(unaff_R14 + 0x30) + 0xf0) = uVar4;\n        bVar1 = in_RAX < SUB168((ZEXT816(SUB168(auVar3 >> 0x40, 0) ^ SUB168(auVar3, 0)) & 0xffffffffffffffff) % auVar2, \n                                0);\n    }\n    else {\n        bVar1 = false;\n    }\n    if (!bVar1) {\n        fcn.0042b180(unaff_RBX + 1);\n    }\n    return;\n}\n",
        "token_count": 387
    },
    "0042b360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042b360(void)\n\n{\n    ulong in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(*(unaff_R14 + 0x30) + 0xa0) != 0) {\n                *(*0x20 + -0x20) = 0x42b391;\n                fcn.0042b3c0();\n                return;\n            }\n            *(*0x20 + -0x20) = 0x42b3ac;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x42b3b7;\n        fcn.0045bb60();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 303
    },
    "0042b700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042b700(ulong arg1, ulong arg2)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        uVar2 = arg1;\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0x58) = 0;\n            *(*0x20 + -0x60) = 0x42b73e;\n            uVar1 = fcn.004525e0(0, arg2, unaff_RDI, 0x20);\n            if (0x1f < uVar1) {\n                return;\n            }\n            if (uVar1 < 0x20) {\n                *(*(*0x20 + 0x20) + uVar1 * 8) = 0;\n                return;\n            }\n            uVar2 = 0x20;\n            *(*0x20 + -0x60) = 0x42b769;\n            in_RAX = fcn.0045e240(0x20);\n            unaff_RDI = arg1;\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = uVar2;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + -8) = 0x42b785;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 542
    },
    "0042b7a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042b7a0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0040a460();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n    if (arg1 == 0) {\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.00435dc0();\n        fcn.00435e40();\n        fcn.00435ca0();\n        fcn.00435e40();\n        fcn.004355c0();\n    }\n    else {\n        fcn.004569c0();\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.00435dc0();\n        fcn.00435e40();\n        fcn.00435ca0();\n        fcn.00435e40();\n        fcn.00435e40();\n        fcn.00435e40();\n        fcn.004355c0();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0x90);\n    if ((iVar1 == 0) || (unaff_R14 == iVar1)) {\n        fcn.00455dc0();\n        fcn.0045ba20();\n    }\n    else {\n        fcn.00455dc0();\n        fcn.00455100(0);\n    }\n    fcn.00435540();\n    fcn.004357a0();\n    fcn.004355c0();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 0;\n    fcn.0040a680();\n    return;\n}\n",
        "token_count": 430
    },
    "0042ba40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042ba40(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0040a460();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n    fcn.00435540();\n    fcn.00435e40();\n    fcn.00435dc0();\n    fcn.00435e40();\n    fcn.00435ca0();\n    fcn.00435e40();\n    fcn.004355c0();\n    fcn.00455dc0();\n    fcn.0045ba20();\n    fcn.00435540();\n    fcn.004357a0();\n    fcn.004355c0();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 0;\n    fcn.0040a680();\n    return;\n}\n",
        "token_count": 243
    },
    "0042bbe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042bbe0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0040a460();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n    fcn.00435540();\n    fcn.00435e40();\n    fcn.004355c0();\n    fcn.00456000();\n    fcn.00435540();\n    fcn.00435e40();\n    fcn.004355c0();\n    fcn.00435540();\n    fcn.004357a0();\n    fcn.004355c0();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 0;\n    fcn.0040a680();\n    return;\n}\n",
        "token_count": 223
    },
    "0042bca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0042bca0(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX <= unaff_RBX + 0x800000000000 == in_RAX <= in_RAX + 0x800000000000) {\n                return;\n            }\n            unaff_RBX = 0x3c;\n            *(*0x20 + -0x20) = 0x42bcf0;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x42bd05;\n        fcn.0045bb60();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 341
    },
    "0042bd20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0042bd20(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = in_RAX + 0x800000000000;\n            if ((arg1 + 0x800000000000U <= uVar1) && (unaff_RBX + 0x800000000000U <= unaff_RDI + 0x800000000000U)) {\n                return 0;\n            }\n            if ((arg1 + 0x800000000000U <= uVar1) || (unaff_RBX + 0x800000000000U <= unaff_RDI + 0x800000000000U)) {\n                if ((unaff_RBX + 0x800000000000U <= unaff_RDI + 0x800000000000U) ||\n                   (unaff_RDI + 0x800000000000U <= uVar1)) {\n                    unaff_RDI = in_RAX;\n                }\n                return unaff_RDI;\n            }\n            unaff_RBX = 9;\n            *(*0x20 + -0x20) = 0x42bdca;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x42bde5;\n        fcn.0045bb60();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 577
    },
    "0042bec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0042bec0(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    int64_t *in_RAX;\n    uint64_t arg1;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t unaff_RBX;\n    int64_t iVar7;\n    uint64_t uVar8;\n    \n    arg1 = in_RAX[1];\n    iVar3 = *in_RAX;\n    uVar5 = 0;\n    uVar1 = arg1;\n    while (uVar6 = uVar1,  8 < uVar6 - uVar5) {\n        iVar7 = (uVar6 - uVar5) / 2;\n        uVar1 = iVar7 + uVar5;\n        if (arg1 <= uVar1) goto code_r0x0042bfb0;\n        uVar8 = *(uVar1 * 0x10 + iVar3) + 0x800000000000;\n        uVar2 = unaff_RBX + 0x800000000000;\n        if ((uVar8 <= uVar2) && (uVar2 < *(iVar3 + 8 + uVar1 * 0x10) + 0x800000000000U)) {\n            return iVar7 + uVar5 + 1;\n        }\n        if (uVar8 <= uVar2) {\n            uVar5 = iVar7 + uVar5 + 1;\n            uVar1 = uVar6;\n        }\n    }\n    while( true ) {\n        if (uVar6 <= uVar5) {\n            return uVar6;\n        }\n        if (arg1 <= uVar5) break;\n        if (unaff_RBX + 0x800000000000U < *(uVar5 * 0x10 + iVar3) + 0x800000000000U) {\n            return uVar5;\n        }\n        uVar5 = uVar5 + 1;\n    }\n    arg1 = fcn.0045e240(arg1);\ncode_r0x0042bfb0:\n    fcn.0045e240(arg1);\n    pcVar4 = swi(3);\n    uVar5 = (*pcVar4)();\n    return uVar5;\n}\n",
        "token_count": 516
    },
    "0042c7e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0042c7e0(void)\n\n{\n    uint64_t *puVar1;\n    int64_t *piVar2;\n    int32_t *piVar3;\n    int64_t *piVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t in_RAX;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int64_t iVar12;\n    uint64_t uVar13;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    while( true ) {\n        uVar13 = *(in_RAX + 0x20);\n        uVar10 = uVar13 >> 0x20;\n        if (uVar13 <= uVar10) {\n            return 0;\n        }\n        if (*(in_RAX + 0x10) <= uVar13 >> 0x29) break;\n        while (uVar11 = uVar13 >> 0x20,  uVar11 == uVar10) {\n            LOCK();\n            puVar1 = in_RAX + 0x20;\n            uVar7 = *puVar1;\n            *puVar1 = *puVar1 ^ (uVar13 == uVar7) * (*puVar1 ^ (uVar10 + 1 << 0x20 | uVar13 & 0xffffffff));\n            if (uVar13 == uVar7) {\n                piVar4 = *(in_RAX + 8) + (uVar11 >> 9) * 8;\n                iVar8 = *piVar4;\n                piVar2 = iVar8 + (uVar11 & 0x1ff) * 8 + 0x18;\n                iVar12 = *piVar2;\n                while (iVar12 == 0) {\n                    iVar12 = *piVar2;\n                }\n                *piVar2 = 0;\n                LOCK();\n                piVar3 = iVar8 + 0x10;\n                iVar5 = *piVar3;\n                *piVar3 = *piVar3 + 1;\n                if (iVar5 == 0x1ff) {\n                    iVar9 = *piVar4;\n                    *piVar4 = 0;\n                    uVar6 = *(iVar8 + 0x10);\n                    *(iVar8 + 0x10) = 0;\n                    fcn.0040a200(uVar6, iVar9);\n                }\n                return iVar12;\n            }\n            uVar13 = *(in_RAX + 0x20);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 622
    },
    "0042c920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042c920(void)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t in_RAX;\n    uint32_t uVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = *(in_RAX + 0x20);\n            piVar5 = uVar6 >> 0x20;\n            uVar4 = uVar6 >> 0x20;\n            if (uVar6 <= uVar4) {\n                uVar6 = uVar4 >> 9;\n                if (*(in_RAX + 0x10) < uVar6 || *(in_RAX + 0x10) == uVar6) goto code_r0x0042c996;\n                piVar5 = uVar6 * 8 + *(in_RAX + 8);\n                iVar2 = *piVar5;\n                if (iVar2 == 0) goto code_r0x0042c996;\n                uVar4 = *(iVar2 + 0x10);\n                uVar6 = uVar4;\n                if (uVar4 != 0) {\n                    if (uVar4 != 0x200) {\n                        *(*0x20 + 8) = in_RAX;\n                        iVar3 = *piVar5;\n                        *piVar5 = 0;\n                        uVar1 = *(iVar2 + 0x10);\n                        *(iVar2 + 0x10) = 0;\n                        *(*0x20 + -0x30) = 0x42c990;\n                        fcn.0040a200(uVar1, iVar3);\n                        in_RAX = *(*0x20 + 8);\ncode_r0x0042c996:\n                        *(in_RAX + 0x20) = 0;\n                        *(in_RAX + 0x10) = 0;\n                        return;\n                    }\n                    *(*0x20 + -0x30) = 0x42c9bd;\n                    fcn.00433c80();\n                }\n                *(*0x20 + -0x30) = 0x42c9ce;\n                fcn.00433c80();\n            }\n            *(*0x20 + -0x10) = uVar6;\n            *(*0x20 + -0x18) = piVar5;\n            *(*0x20 + -0x30) = 0x42c9dd;\n            fcn.00435540();\n            *(*0x20 + -0x30) = 0x42c9ee;\n            fcn.00435e40();\n            *(*0x20 + -0x30) = 0x42c9f8;\n            fcn.00435b40();\n            *(*0x20 + -0x30) = 0x42ca09;\n            fcn.00435e40();\n            *(*0x20 + -0x30) = 0x42ca15;\n            fcn.00435b40();\n            *(*0x20 + -0x30) = 0x42ca1a;\n            fcn.004357a0();\n            *(*0x20 + -0x30) = 0x42ca1f;\n            fcn.004355c0();\n            *(*0x20 + -0x30) = 0x42ca30;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x42ca3b;\n        fcn.0045bb60();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 938
    },
    "0042ca60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t * fcn.0042ca60(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    uint64_t *puVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    do {\n        uVar1 = *in_RAX;\n        if (uVar1 == 0) {\n            puVar3 = NULL;\n            break;\n        }\n        puVar3 = (uVar1 >> 0x13) << 3;\n        LOCK();\n        uVar2 = *in_RAX;\n        *in_RAX = *in_RAX ^ (uVar1 == uVar2) * (*in_RAX ^ *puVar3);\n    } while (uVar1 != uVar2);\n    if (puVar3 == NULL) {\n        puVar3 = fcn.0040c8c0(0x8044f8);\n        return puVar3;\n    }\n    return puVar3;\n}\n",
        "token_count": 264
    },
    "0042cb00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042cb00(void)\n\n{\n    int64_t iVar1;\n    int64_t *in_RAX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            iVar1 = *in_RAX;\n            *in_RAX = *in_RAX + 1;\n            if (iVar1 + 1 != 0) {\n                return;\n            }\n            *(*0x20 + -0x10) = iVar1 + 1;\n            *(*0x20 + -0x28) = 0x42cb3e;\n            fcn.00435540();\n            *(*0x20 + -0x28) = 0x42cb4f;\n            fcn.00435e40();\n            *(*0x20 + -0x28) = 0x42cb5d;\n            fcn.00435b40();\n            *(*0x20 + -0x28) = 0x42cb6e;\n            fcn.00435e40();\n            *(*0x20 + -0x28) = 0x42cb75;\n            fcn.00435b40();\n            *(*0x20 + -0x28) = 0x42cb7a;\n            fcn.004357a0();\n            *(*0x20 + -0x28) = 0x42cb7f;\n            fcn.004355c0();\n            *(*0x20 + -0x28) = 0x42cb90;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x42cb9b;\n        fcn.0045bb60();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 514
    },
    "0042cbe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042cbe0(void)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t *in_RAX;\n    int64_t unaff_RBX;\n    \n    LOCK();\n    iVar1 = *in_RAX;\n    *in_RAX = *in_RAX + unaff_RBX;\n    if (((unaff_RBX < 1) || (unaff_RBX <= unaff_RBX + iVar1)) &&\n       ((-1 < unaff_RBX || (unaff_RBX <= iVar1 + unaff_RBX * 2)))) {\n        return;\n    }\n    fcn.00435540();\n    fcn.00435e40();\n    fcn.00435b40();\n    fcn.00435e40();\n    fcn.00435c40();\n    fcn.004357a0();\n    fcn.004355c0();\n    fcn.00433c80();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 225
    },
    "0042cd80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042cd80(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    int64_t unaff_R14;\n    \n    iVar3 = *(*(unaff_R14 + 0x30) + 0xa0);\n    if (iVar3 == 0) {\n        fcn.0040a680();\n    }\n    else {\n        LOCK();\n        piVar1 = iVar3 + 0x227c;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + 1;\n        if ((iVar2 + 1U & 1) != 0) {\n            fcn.00435540();\n            fcn.00435e40();\n            fcn.00435b40();\n            fcn.004357a0();\n            fcn.004355c0();\n            fcn.00433c80();\n            pcVar4 = swi(3);\n            (*pcVar4)();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 236
    },
    "0042d2e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042d2e0(void)\n\n{\n    int64_t in_RAX;\n    ulong *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0040a460();\n    *unaff_RBX = *(in_RAX + 8);\n    *(in_RAX + 8) = unaff_RBX;\n    fcn.0040a680();\n    return;\n}\n",
        "token_count": 139
    },
    "0042d6e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042d6e0(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x40) = *0x795250;\n            *(*0x20 + -0x38) = 0xffffffffffffffff;\n            *(*0x20 + -0x30) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x20) = 0xffffffff;\n            *(*0x20 + -0x48) = 0x42d725;\n            fcn.00430f00();\n            *0x795390 = *(*0x20 + -0x18);\n            if (*0x795390 != 0) {\n                return;\n            }\n            *(*0x20 + -0x48) = 0x42d759;\n            fcn.0045f700();\n            in_XMM15_Da = 0;\n            in_XMM15_Db = 0;\n            in_XMM15_Dc = 0;\n            in_XMM15_Dd = 0;\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            *(*0x20 + -0x10) = *(*0x20 + -0x40);\n            *(*0x20 + -0x48) = 0x42d77a;\n            fcn.00435540();\n            *(*0x20 + -0x48) = 0x42d78b;\n            fcn.00435e40();\n            *(*0x20 + -0x48) = 0x42d795;\n            fcn.00435b40();\n            *(*0x20 + -0x48) = 0x42d7a6;\n            fcn.00435e40();\n            *(*0x20 + -0x48) = 0x42d7ab;\n            fcn.004355c0();\n            *(*0x20 + -0x48) = 0x42d7bc;\n            fcn.00433c80();\n        }\n        *(puVar1 + -8) = 0x42d7c5;\n        fcn.0045bb60();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 665
    },
    "0042dd40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042dd40(ulong arg1)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint unaff_EDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = *(unaff_RBX + 0x28);\n            if ((uVar1 == 0x72) || (uVar1 == 0x77)) {\n                *(unaff_RBX + 0x2c) = arg1;\n                *(unaff_RBX + 0x30) = unaff_EDI;\n                *(*0x20 + -0x30) = 0x42dd7b;\n                fcn.0042d360(uVar1);\n                return;\n            }\n            *(*0x20 + -0xc) = uVar1;\n            *(*0x20 + -0x30) = 0x42dd8e;\n            fcn.00435540();\n            *(*0x20 + -0x30) = 0x42dd9f;\n            fcn.00435e40();\n            *(*0x20 + -0x30) = 0x42ddab;\n            fcn.00435c40();\n            *(*0x20 + -0x30) = 0x42ddb0;\n            fcn.004357a0();\n            *(*0x20 + -0x30) = 0x42ddb5;\n            fcn.004355c0();\n            unaff_RBX = 0x17;\n            *(*0x20 + -0x30) = 0x42ddc6;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x1c) = unaff_EDI;\n        *(puVar2 + -8) = 0x42ddde;\n        fcn.0045bb60();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1._0_4_ = *(puVar2 + 0x18);\n        unaff_EDI = *(puVar2 + 0x1c);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 649
    },
    "0042de00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0042de00(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    ulong in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 - 1 < arg1) {\n                uVar1 = *((arg1 - 1) + unaff_RBX);\n                arg1 = uVar1;\n                if (uVar1 == 0) {\n                    *(*0x20 + -0x28) = *0x795210;\n                    *(*0x20 + -0x20) = in_RAX;\n                    *(*0x20 + -0x18) = unaff_RBX;\n                    *(*0x20 + -0x30) = 0x42de49;\n                    fcn.00430e00();\n                    return *(*0x20 + -0x10);\n                }\n                unaff_RBX = 5;\n                *(*0x20 + -0x30) = 0x42de7d;\n                fcn.00433c80();\n            }\n            *(*0x20 + -0x30) = 0x42de85;\n            in_RAX = fcn.0045e240(arg1);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x42de9f;\n        fcn.0045bb60();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 566
    },
    "0042ebe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042ebe0(void)\n\n{\n    int64_t unaff_R14;\n    int64_t iStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00430f00();\n    if (iStack16 != 0) {\n        *0x8019a8 = 1;\n        fcn.00430d80();\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "0042f100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0042f100(void)\n\n{\n    fcn.00430d80();\n    return -*0x801b50 * *0x801b48;\n}\n",
        "token_count": 40
    },
    "0042f180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0042f180(void)\n\n{\n    fcn.00430d80();\n    fcn.00430d80();\n    return 0x195726909;\n}\n",
        "token_count": 40
    },
    "0042f560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042f560(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t unaff_RBX;\n    \n    if (unaff_RBX != 0) {\n        fcn.00430e00();\n        fcn.004439e0(arg1);\n        return;\n    }\n    fcn.0045e240(0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 100
    },
    "0042f860": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042f860(void)\n\n{\n    fcn.0040a460();\n    *0x8019cc = 1;\n    fcn.00430d80();\n    return;\n}\n",
        "token_count": 45
    },
    "00430540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430540(void)\n\n{\n    int64_t iStack32;\n    \n    fcn.00431000();\n    if (iStack32 != 0) {\n        fcn.00430d80();\n        return;\n    }\n    if (*0x8019cc != 0) goto code_r0x0043067d;\n    do {\n        fcn.0045f700();\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.00435c40();\n        fcn.00435e40();\n        fcn.00435b40();\n        fcn.00435e40();\n        fcn.004355c0();\n        fcn.00433c80();\ncode_r0x0043067d:\n        fcn.0040a460();\n        fcn.0040a460();\n    } while( true );\n}\n",
        "token_count": 192
    },
    "00430b40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430b40(void)\n\n{\n    int64_t in_RAX;\n    \n    if (*(in_RAX + 0x328) != 0) {\n        fcn.00430d80();\n        *(in_RAX + 0x328) = 0;\n    }\n    if (*(in_RAX + 0x318) != 0) {\n        fcn.00430d80();\n        *(in_RAX + 0x318) = 0;\n    }\n    if (*(in_RAX + 800) != 0) {\n        fcn.00430d80();\n        *(in_RAX + 800) = 0;\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "00430d20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430d20(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    uchar auStackX8 [32];\n    \n    iVar1 = *(unaff_R14 + 0x30);\n    *(iVar1 + 0x280) = 0;\n    *(iVar1 + 0x288) = auStackX8;\n    fcn.00430c40();\n    return;\n}\n",
        "token_count": 96
    },
    "00430d80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430d80(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [8];\n    ulong uStackX24;\n    \n    uStackX24 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x280) = 1;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.00430c40();\n    return;\n}\n",
        "token_count": 119
    },
    "00430e00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430e00(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [16];\n    ulong uStackX32;\n    \n    uStackX32 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x280) = 2;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.00430c40();\n    return;\n}\n",
        "token_count": 119
    },
    "00430e80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430e80(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000028;\n    \n    uStack0000000000000028 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x280) = 3;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.00430c40();\n    return;\n}\n",
        "token_count": 127
    },
    "00430f00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430f00(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000030;\n    \n    uStack0000000000000030 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x280) = 4;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.00430c40();\n    return;\n}\n",
        "token_count": 127
    },
    "00430f80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430f80(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000038;\n    \n    uStack0000000000000038 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x280) = 5;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.00430c40();\n    return;\n}\n",
        "token_count": 127
    },
    "00431000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00431000(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000040;\n    \n    uStack0000000000000040 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x280) = 6;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.00430c40();\n    return;\n}\n",
        "token_count": 126
    },
    "00431080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00431080(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000048;\n    \n    uStack0000000000000048 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x280) = 7;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.00430c40();\n    return;\n}\n",
        "token_count": 126
    },
    "00431140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00431140(void)\n\n{\n    fcn.0045ba20();\n    return;\n}\n",
        "token_count": 24
    },
    "00432260": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00432260(void)\n\n{\n    code *pcVar1;\n    ushort *in_RAX;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    ulong in_stack_00000000;\n    uchar auStackX8 [32];\n    \n    if (*(*(unaff_R14 + 0x30) + 0x90) == unaff_R14) {\n        *in_RAX = 0;\n        *(in_RAX + 1) = 0;\n        *(in_RAX + 4) = auStackX8;\n        *(in_RAX + 8) = in_stack_00000000;\n        *(in_RAX + 0x1c) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        *(in_RAX + 0x10) = 0;\n        *(in_RAX + 0x18) = 0;\n        *(in_RAX + 0x14) = *(unaff_R14 + 0x28);\n        *(unaff_R14 + 0x28) = in_RAX;\n        fcn.0045dd40();\n        return;\n    }\n    fcn.00433c80();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 328
    },
    "004329e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004329e0(ulong param_1, ulong param_2)\n\n{\n    ulong arg3;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong *unaff_RBX;\n    ulong *puVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = unaff_RBX;\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x98) = 0x432a13;\n            iVar1 = fcn.00433c40();\n            if (iVar1 == 0) {\n                return;\n            }\n            if ((*(iVar1 + 0x10) == 0x778cdb8) && (param_2 = 0x49d360,  iVar1 == 0x49d360)) {\n                uVar2 = unaff_RBX[1];\n                arg3 = *unaff_RBX;\n                unaff_RBX = 0x4b4f58;\n                *(*0x20 + -0x98) = 0x432a66;\n                fcn.0044af20(0x20, 0x49d360, arg3, uVar2);\n                *(*0x20 + -0x98) = 0x432a6b;\n                iVar1 = fcn.00433c80();\n            }\n            *(*0x20 + -0x18) = iVar1;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x98) = 0x432a85;\n            uVar2 = fcn.004569c0();\n            puVar3 = 0x4b4f58;\n            *(*0x20 + -0x98) = 0x432aad;\n            fcn.0044af20(0x20, param_2, uVar2, unaff_RBX);\n            *(*0x20 + -0x98) = 0x432ab2;\n            fcn.00433c80();\n        }\n        *(puVar4 + -8) = 0x432ab8;\n        fcn.0045bb60();\n        unaff_RBX = puVar3;\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 605
    },
    "00432d40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00432d40(int64_t arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0045ba20();\n    return;\n}\n",
        "token_count": 86
    },
    "00433c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00433c80(void)\n\n{\n    fcn.0045ba20();\n    fcn.00433fc0();\n    return;\n}\n",
        "token_count": 34
    },
    "00433d80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00433d80(void)\n\n{\n    fcn.0045ba20();\n    fcn.00433fc0();\n    return;\n}\n",
        "token_count": 34
    },
    "00435540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435540(void)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    iVar2 = *(unaff_R14 + 0x30);\n    *(iVar2 + 0xd8) = *(iVar2 + 0xd8) + 1;\n    cVar1 = *(iVar2 + 0xe7);\n    *(iVar2 + 0xe7) = cVar1 + '\\x01';\n    if (cVar1 == '\\0') {\n        fcn.0040a460();\n    }\n    *(iVar2 + 0xd8) = *(iVar2 + 0xd8) + -1;\n    return;\n}\n",
        "token_count": 203
    },
    "00435760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435760(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00435e40();\n    return;\n}\n",
        "token_count": 81
    },
    "004357a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004357a0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00435e40();\n    return;\n}\n",
        "token_count": 82
    },
    "004357e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004357e0(void)\n\n{\n    char in_AL;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (in_AL == '\\0') {\n        fcn.00435e40();\n    }\n    else {\n        fcn.00435e40();\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "00435aa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435aa0(ulong param_1, ulong param_2)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00435540();\n    fcn.00435e40();\n    fcn.00435840(param_1, param_2);\n    fcn.00435840(param_1, param_2);\n    fcn.00435e40();\n    fcn.004355c0();\n    return;\n}\n",
        "token_count": 147
    },
    "00435c40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435c40(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (in_RAX < 0) {\n        fcn.00435e40();\n    }\n    fcn.00435b40();\n    return;\n}\n",
        "token_count": 112
    },
    "00435ca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435ca0(void)\n\n{\n    int64_t iVar1;\n    ulong in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + -0x6c) = in_XMM15;\n            *(*0x20 + -0x98) = *0x20 + -8;\n            *(*0x20 + -0x90) = 0x435cef;\n            uVar2 = fcn.0045e4eb();\n            unaff_RBP = *(*0x20 + -0x98);\n            for (iVar3 = 99;\n                (0 < iVar3 &&\n                ((*(*0x20 + iVar3 + -0x6c) = *((uVar2 & 0xf) + 0x4b0db9),  0xf < uVar2 ||\n                 (iVar1 = *0x801ad8 + iVar3 + -100,  iVar1 != 0 && SBORROW8(*0x801ad8, -(iVar3 + -100)) == iVar1 < 0))))\n                ; iVar3 = iVar3 + -1) {\n                uVar2 = uVar2 >> 4;\n            }\n            if (iVar3 - 1U < 100) {\n                *(*0x20 + iVar3 + -0x6d) = 0x78;\n                if (iVar3 - 2U < 100) {\n                    *(*0x20 + iVar3 + -0x6e) = 0x30;\n                    *(*0x20 + -0x90) = 0x435d78;\n                    fcn.00435620(-(iVar3 + -0x66));\n                    return;\n                }\n                *(*0x20 + -0x90) = 0x435d92;\n                fcn.0045e240(100);\n            }\n            *(*0x20 + -0x90) = 0x435d9c;\n            in_RAX = fcn.0045e240(100);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x435da7;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 630
    },
    "00435dc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435dc0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00435ca0();\n    return;\n}\n",
        "token_count": 82
    },
    "00435e00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435e00(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00435ca0();\n    return;\n}\n",
        "token_count": 82
    },
    "00435ec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435ec0(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00435540();\n    fcn.00435e40();\n    fcn.00435c40();\n    fcn.00435e40();\n    fcn.00435c40();\n    fcn.00435e40();\n    fcn.004355c0();\n    fcn.00435ca0();\n    return;\n}\n",
        "token_count": 147
    },
    "00435fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435fa0(code **arg1)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    uint *puVar2;\n    ulong uVar3;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00435540();\n    *0x801ad8 = 0x10;\n    for (uVar1 = 0; uVar1 + in_RAX < unaff_RBX; uVar1 = uVar1 + 8) {\n        if ((uVar1 & 0xf) == 0) {\n            if (uVar1 != 0) {\n                fcn.00435540();\n                fcn.004357a0();\n                fcn.004355c0();\n            }\n            fcn.00435540();\n            fcn.00435ca0();\n            fcn.00435e40();\n            fcn.004355c0();\n        }\n        if (arg1 != NULL) {\n            (**arg1)(*arg1, arg1, unaff_RBX);\n        }\n        fcn.00435620(1);\n        fcn.00435540();\n        fcn.00435ca0();\n        fcn.004355c0();\n        fcn.00435540();\n        fcn.00435760();\n        fcn.004355c0();\n        puVar2 = fcn.0044cfe0();\n        if (puVar2 != NULL) {\n            fcn.0044d760();\n            uVar3 = fcn.0044ce60(*puVar2);\n            fcn.00435540();\n            fcn.00435e40();\n            fcn.00435e40();\n            fcn.00435e40();\n            fcn.00435ca0(uVar3);\n            fcn.00435e40();\n            fcn.004355c0();\n        }\n    }\n    *0x801ad8 = 0;\n    fcn.00435540();\n    fcn.004357a0();\n    fcn.004355c0();\n    fcn.004355c0();\n    return;\n}\n",
        "token_count": 515
    },
    "00436820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00436820(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0045ba20();\n    return;\n}\n",
        "token_count": 81
    },
    "00437220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00437220(void)\n\n{\n    int64_t iVar1;\n    code **in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0040a460();\n    iVar1 = *0x7ada28;\n    for (iVar2 = 0; iVar2 < iVar1; iVar2 = iVar2 + 1) {\n        (**in_RAX)();\n    }\n    fcn.0040a680();\n    return;\n}\n",
        "token_count": 155
    },
    "004372e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004372e0(void)\n\n{\n    uint64_t uVar1;\n    code **in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    while (uVar1 = *0x801a48,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    for (uVar2 = 0; uVar2 < uVar1; uVar2 = uVar2 + 1) {\n        (**in_RAX)(*in_RAX, in_RAX);\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "00437380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.00437380(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00401080();\n    *0x8019b4 = *0x8020e7;\n    *0x8019b5 = *0x8020ea;\n    *0x8019b6 = *0x8020ee;\n    return;\n}\n",
        "token_count": 129
    },
    "004376c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004376c0(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x7ae530 - *0x7ae540 <= *0x7ae538) {\n                return;\n            }\n            *(*0x20 + -0xc) = *0x7ae538;\n            *(*0x20 + -0x28) = 0x437705;\n            fcn.00435540();\n            *(*0x20 + -0x28) = 0x437716;\n            fcn.00435e40();\n            *(*0x20 + -0x28) = 0x437725;\n            fcn.00435c40();\n            *(*0x20 + -0x28) = 0x437736;\n            fcn.00435e40();\n            *(*0x20 + -0x28) = 0x43773b;\n            fcn.004355c0();\n            *(*0x20 + -0x28) = 0x43774c;\n            fcn.00433c80();\n        }\n        *(puVar1 + -8) = 0x437752;\n        fcn.0045bb60();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 384
    },
    "00437760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00437760(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x7ae530 <= *0x7ae530 + 1) {\n                *(*0x20 + -0x10) = *0x7ae530;\n                *(*0x20 + -0x28) = 0x437796;\n                *0x7ae530 = *0x7ae530 + 1;\n                fcn.004376c0();\n                return *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x28) = 0x4377b6;\n            fcn.00433c80();\n        }\n        *(puVar1 + -8) = 0x4377bc;\n        fcn.0045bb60();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 301
    },
    "00438b60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00438b60(void)\n\n{\n    code **ppcVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    ulong *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (**(unaff_R14 + 0x30) == unaff_R14) {\n                *(*0x20 + -0x10) = unaff_R14;\n                *(unaff_R14 + 0x48) = unaff_R14;\n                *(unaff_R14 + 0x40) = **0x20;\n                *(unaff_R14 + 0x38) = *0x20 + 8;\n                *(*0x20 + -0x28) = 0x438ba9;\n                fcn.0045b940();\n                *(*0x20 + -0x28) = 0x438bc5;\n                fcn.004306e0();\n                iVar3 = *(*0x20 + -0x10);\n                if (*(iVar3 + 0x30) == 0x7ae120) {\n                    *(*0x20 + -0x28) = 0x438bdc;\n                    fcn.00438c60();\n                    iVar3 = *(*0x20 + -0x10);\n                }\n                ppcVar1 = *(*(iVar3 + 0x30) + 0x88);\n                if (ppcVar1 != NULL) {\n                    pcVar2 = *ppcVar1;\n                    *(*0x20 + -0x28) = 0x438bfd;\n                    (*pcVar2)();\n                    iVar3 = *(*0x20 + -0x10);\n                }\n                if (*(iVar3 + 0x30) != 0x7ae120) {\n                    *(*0x20 + -0x28) = 0x438c1e;\n                    fcn.004402e0();\n                    *(*(*(*0x20 + -0x10) + 0x30) + 0xa8) = 0;\n                }\n                *(*0x20 + -0x28) = 0x438c37;\n                fcn.0043c4c0();\n                return;\n            }\n            *(*0x20 + -0x28) = 0x438c52;\n            fcn.00433c80();\n        }\n        *(puVar4 + -8) = 0x438c58;\n        fcn.0045bb60();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 653
    },
    "00438ca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00438ca0(void)\n\n{\n    int64_t unaff_R14;\n    \n    fcn.0040a7e0();\n    *(*(unaff_R14 + 0x30) + 0x118) = 0;\n    return;\n}\n",
        "token_count": 60
    },
    "004397a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.004397a0(void)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (uVar1 = *0x8019d4,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    *0x8019d4 = 0;\n    if (uVar1 == 0) {\n        uVar2 = fcn.00439a80();\n        uVar3 = *0x801a88;\n        *0x801a88 = uVar2;\n        if (uVar2 == 0) {\n            uVar3 = fcn.00439820();\n        }\n    }\n    else {\n        for (uVar3 = 0; uVar3 < uVar1; uVar3 = uVar3 + 1) {\n            fcn.00439820();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 248
    },
    "0043a740": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043a777)\n\nvoid fcn.0043a740(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (*0x7ae558 != 0) {\n        if (*0x7ae55c != 0) {\n            return;\n        }\n        LOCK();\n        *0x7ae55c = 1;\n        fcn.0043a160();\n        return;\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "0043c0c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043c0c0(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (*0x7ae508 == 0) {\n        if ((*0x7ae510 == 0) || (in_RAX < *0x7ae510)) {\n            fcn.0042d8a0();\n        }\n    }\n    else {\n        fcn.0043a740();\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "0043daa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.0043daa0(void)\n\n{\n    int32_t *piVar1;\n    uint64_t uVar2;\n    uint64_t *unaff_R14;\n    \n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + 1;\n    *(unaff_R14 + 0xb7) = 1;\n    unaff_R14[2] = 0xfffffffffffffade;\n    *(unaff_R14[6] + 0x26c) = *(*(unaff_R14[6] + 0xa0) + 0x14);\n    *(unaff_R14 + 0xbb) = 1;\n    piVar1 = *(unaff_R14[6] + 0xa0) + 0x14;\n    *piVar1 = *piVar1 + 1;\n    fcn.0043d5c0();\n    uVar2 = unaff_R14[7];\n    unaff_R14[0xe] = uVar2;\n    unaff_R14[0xf] = unaff_R14[8];\n    if ((uVar2 <= *unaff_R14 && *unaff_R14 != uVar2) || (unaff_R14[1] < uVar2)) {\n        fcn.0045ba20();\n    }\n    fcn.00438120(3);\n    uVar2 = unaff_R14[0xe];\n    if ((uVar2 <= *unaff_R14 && *unaff_R14 != uVar2) || (unaff_R14[1] < uVar2)) {\n        fcn.0045ba20();\n    }\n    fcn.0045ba20();\n    fcn.0043d5c0();\n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + -1;\n    return;\n}\n",
        "token_count": 431
    },
    "0043e1e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0043e1e0(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0040a460();\n    iVar2 = fcn.00442120();\n    iVar1 = *0x7ae5f0;\n    if ((iVar2 != 0) && (*0x7ae5f0 != 0)) {\n        *0x7ae5f0 = 0;\n        fcn.0040a760(iVar1);\n    }\n    fcn.0040a680();\n    if (iVar2 != 0) {\n        fcn.004402e0();\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 209
    },
    "0043e400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043e400(void)\n\n{\n    int32_t in_EAX;\n    int64_t *piVar1;\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    piVar1 = fcn.0040c560();\n    if (-1 < in_EAX) {\n        uVar2 = 0;\n        while ((1 << (uVar2 & 0x1f) & -(uVar2 < 0x20)) < in_EAX + 0x1000) {\n            uVar2 = uVar2 + 1;\n        }\n        fcn.0045ba20();\n        piVar1[2] = *piVar1 + 0x13a0;\n        piVar1[3] = -1;\n        **piVar1 = 0;\n    }\n    return;\n}\n",
        "token_count": 233
    },
    "004405c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004405c0(void)\n\n{\n    int32_t in_EAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0040a460();\n    *0x7ae52c = *0x7ae52c + in_EAX;\n    if (0 < in_EAX) {\n        fcn.00440620();\n    }\n    fcn.0040a680();\n    return;\n}\n",
        "token_count": 140
    },
    "00441ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00441ce0(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    *(in_RAX + 0x128) = *0x7ae520;\n    *0x7ae528 = *0x7ae528 + 1;\n    *0x7ae520 = in_RAX;\n    fcn.00440620();\n    return;\n}\n",
        "token_count": 138
    },
    "004422c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.004422c0(char param_1)\n\n{\n    uint64_t *puVar1;\n    uint32_t uVar2;\n    uint64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    uVar4 = unaff_RBX;\n    if (param_1 != '\\0') {\n        do {\n            uVar4 = *(in_RAX + 0x998);\n            LOCK();\n            puVar1 = in_RAX + 0x998;\n            bVar5 = uVar4 == *puVar1;\n            *puVar1 = *puVar1 ^ bVar5 * (*puVar1 ^ unaff_RBX);\n        } while (!bVar5);\n        if (uVar4 == 0) {\n            return uVar4 ^ !bVar5 * (uVar4 ^ *puVar1);\n        }\n    }\n    do {\n        uVar2 = *(in_RAX + 0x194);\n        if (uVar2 - *(in_RAX + 400) < 0x100) {\n            *(in_RAX + 0x198 + (uVar2 & 0xff) * 8) = uVar4;\n            *(in_RAX + 0x194) = uVar2 + 1;\n            return in_RAX;\n        }\n        uVar3 = fcn.004423c0(*(in_RAX + 400));\n    } while (uVar3 == '\\0');\n    return uVar3;\n}\n",
        "token_count": 403
    },
    "004436a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004436a0(uint64_t param_1, uint64_t param_2)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t iVar7;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *0x801e60 = 1;\n            *0x801e80 = 1;\n            *0x801ea0 = 1;\n            iVar5 = 7;\n            *(*0x20 + -0x88) = 0x4436e7;\n            uVar3 = fcn.004071c0();\n            while( true ) {\n                if (iVar5 == 0) {\n                    *0x801ea4 = (*0x801ea8 | *0x801eac | *0x801eb0) != 0;\n                    *(*0x20 + -0x88) = 0x4438ae;\n                    fcn.004071c0();\n                    *(*0x20 + -0x88) = 0x4438b3;\n                    fcn.00459a40();\n                    *0x801a1c = *0x79528c;\n                    return;\n                }\n                *(*0x20 + -0x60) = iVar5;\n                *(*0x20 + -0x28) = uVar3;\n                *(*0x20 + -0x80) = uVar3;\n                *(*0x20 + -0x78) = iVar5;\n                *(*0x20 + -0x70) = 0x2c;\n                *(*0x20 + -0x88) = 0x443719;\n                fcn.00402ea0(param_1, param_2);\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                param_1 = *(*0x20 + -0x68);\n                if (param_1 < 0) {\n                    param_2 = *(*0x20 + -0x28);\n                    iVar7 = 0;\n                    iVar5 = 0;\n                    param_1 = *(*0x20 + -0x60);\n                }\n                else {\n                    param_2 = *(*0x20 + -0x60);\n                    if (param_2 < param_1) goto code_r0x004439b2;\n                    if (param_2 < param_1 + 1) goto code_r0x004439aa;\n                    iVar7 = (param_2 - param_1) + -1;\n                    param_2 = *(*0x20 + -0x28);\n                    iVar5 = (param_1 + 1 & -iVar7 >> 0x3f) + param_2;\n                }\n                *(*0x20 + -0x60) = iVar7;\n                *(*0x20 + -0x10) = iVar5;\n                *(*0x20 + -0x50) = param_1;\n                *(*0x20 + -0x80) = param_2;\n                *(*0x20 + -0x78) = param_1;\n                *(*0x20 + -0x70) = 0x3d;\n                *(*0x20 + -0x88) = 0x4437a6;\n                fcn.00402ea0(param_1, param_2);\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                param_1 = *(*0x20 + -0x68);\n                if (-1 < param_1) break;\ncode_r0x004436e9:\n                iVar5 = *(*0x20 + -0x60);\n                uVar3 = *(*0x20 + -0x10);\n            }\n            uVar4 = *(*0x20 + -0x50);\n            param_2 = uVar4;\n            if (param_1 <= uVar4) {\n                if (param_1 + 1 <= uVar4) {\n                    param_2 = (uVar4 - param_1) - 1;\n                    piVar1 = *(*0x20 + -0x28);\n                    if ((((param_1 == 0xe) && (*piVar1 == 0x69666f72706d656d)) && (*(piVar1 + 1) == 0x6172656c)) &&\n                       (*(piVar1 + 0xc) == 0x6574)) {\n                        *(*0x20 + -0x88) = 0x443833;\n                        uVar4 = param_2;\n                        uVar3 = fcn.0044bd40();\n                        cVar2 = param_2;\n                        param_2 = uVar4;\n                        if (cVar2 != '\\0') {\n                            *0x801a38 = uVar3;\n                        }\n                    }\n                    else if (*0x7a6798 != 0) {\n                        *(*0x20 + -0x58) = param_1;\n                        *(*0x20 + -0x38) = param_2;\n                        *(*0x20 + -0x30) = (param_1 + 1 & -param_2 >> 0x3f) + piVar1;\n                        *(*0x20 + -0x40) = *0x7a6798;\n                        iVar8 = 0;\n                        iVar5 = *0x7a6798;\n                        iVar7 = *0x7a6790;\n                        while( true ) {\n                            uVar4 = *(iVar7 + 8);\n                            uVar3 = *(iVar7 + 0x10);\n                            if (uVar4 == param_1) {\n                                *(*0x20 + -0x48) = iVar8;\n                                *(*0x20 + -0x18) = iVar7;\n                                *(*0x20 + -0x20) = uVar3;\n                                *(*0x20 + -0x88) = 0x443905;\n                                cVar2 = fcn.00402a00(uVar4, param_2);\n                                if (cVar2 == '\\0') {\n                                    param_1 = *(*0x20 + -0x58);\n                                    param_2 = *(*0x20 + -0x38);\n                                    iVar5 = *(*0x20 + -0x40);\n                                    iVar7 = *(*0x20 + -0x18);\n                                    iVar8 = *(*0x20 + -0x48);\n                                }\n                                else {\n                                    uVar3 = *(*0x20 + -0x38);\n                                    *(*0x20 + -0x88) = 0x443947;\n                                    iVar5 = fcn.0044bd40();\n                                    if ((iVar5 == iVar5) && (uVar3 != '\\0')) {\n                                        **(*0x20 + -0x20) = iVar5;\n                                    }\n                                    param_1 = *(*0x20 + -0x58);\n                                    param_2 = *(*0x20 + -0x38);\n                                    iVar5 = *(*0x20 + -0x40);\n                                    iVar7 = *(*0x20 + -0x18);\n                                    iVar8 = *(*0x20 + -0x48);\n                                }\n                            }\n                            iVar8 = iVar8 + 1;\n                            if (iVar5 <= iVar8) break;\n                            iVar7 = iVar7 + 0x18;\n                        }\n                    }\n                    goto code_r0x004436e9;\n                }\n                *(*0x20 + -0x88) = 0x4439a5;\n                fcn.0045e300(uVar4);\n                param_1 = uVar4;\n            }\n            *(*0x20 + -0x88) = 0x4439aa;\n            fcn.0045e280(param_1, param_2);\ncode_r0x004439aa:\n            param_1 = param_2;\n            *(*0x20 + -0x88) = 0x4439b2;\n            param_2 = param_1;\n            fcn.0045e300(param_1);\ncode_r0x004439b2:\n            *(*0x20 + -0x88) = 0x4439b7;\n            fcn.0045e280(param_1, param_2);\n        }\n        *(puVar6 + -8) = 0x4439bd;\n        fcn.0045bb60();\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1963
    },
    "004439e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004439e0(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    ulong in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RDI < 0) {\n                unaff_RDI = 0;\n            }\n            while( true ) {\n                if (unaff_RBX <= unaff_RDI) {\n                    return;\n                }\n                *(*0x20 + -0x10) = unaff_RDI;\n                *(*0x20 + -0x30) = 0x443a25;\n                fcn.0045fb60();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                iVar1 = *(*0x20 + -0x10);\n                iVar4 = iVar1;\n                if (0x10 < iVar1) {\n                    iVar4 = 0x10;\n                }\n                uVar2 = *(*0x20 + -0x28);\n                unaff_RDI = *(*0x20 + 0x10);\n                if (unaff_RDI <= iVar1 - iVar4) break;\n                *(*0x20 + -0x30) = 0x443a70;\n                uVar3 = fcn.0045dc60(iVar4);\n                unaff_RBX = *(*0x20 + 0x10);\n                iVar1 = *(*0x20 + 8);\n                iVar4 = 0;\n                for (unaff_RDI = *(*0x20 + -0x10); (iVar4 < 8 && (unaff_RDI < unaff_RBX)); unaff_RDI = unaff_RDI + 1) {\n                    if (unaff_RBX <= unaff_RDI) {\n                        *(*0x20 + -0x30) = 0x443ac5;\n                        fcn.0045e240(unaff_RBX);\n                        unaff_RBX = uVar2;\n                        goto code_r0x00443ac5;\n                    }\n                    *(iVar1 + unaff_RDI) = uVar3;\n                    iVar4 = iVar4 + 1;\n                    uVar3 = uVar3 >> 8;\n                }\n            }\ncode_r0x00443ac5:\n            *(*0x20 + -0x30) = 0x443ad0;\n            arg1 = unaff_RDI;\n            in_RAX = fcn.0045e240(unaff_RDI);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x443aea;\n        fcn.0045bb60();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 879
    },
    "00443b60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00443b60(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    LOCK();\n    piVar1 = in_RAX + 0x28;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + 1;\n    if (iVar2 + 1 < 0) {\n        fcn.0045ba20();\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "00443da0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00443da0(uint64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 8) = in_RAX;\n            iVar2 = 0;\n            iVar3 = 0;\n            while( true ) {\n                if (unaff_RSI <= iVar2) {\n                    return;\n                }\n                arg3 = *(unaff_RDI + iVar2 * 2);\n                if (unaff_RBX <= arg3) break;\n                iVar1 = *(in_RAX + arg3 * 0x10);\n                if (iVar3 != iVar1) {\n                    *(*0x20 + -0x18) = iVar2;\n                    *(*0x20 + -0x10) = iVar1;\n                    *(*0x20 + -0x30) = 0x443e08;\n                    fcn.0040a460();\n                    in_RAX = *(*0x20 + 8);\n                    iVar2 = *(*0x20 + -0x18);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RSI = *(*0x20 + 0x28);\n                    unaff_RDI = *(*0x20 + 0x20);\n                    iVar3 = *(*0x20 + -0x10);\n                }\n                iVar2 = iVar2 + 1;\n            }\n            *(*0x20 + -0x30) = 0x443e3d;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045e240(unaff_RBX);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + 0x30) = arg3;\n        *(puVar4 + -8) = 0x443e65;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        arg3 = *(puVar4 + 0x30);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 796
    },
    "00443ea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00443ea0(uint64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            uVar1 = unaff_RSI;\ncode_r0x00443ed0:\n            uVar1 = uVar1 - 1;\n            if (uVar1 < 0) {\n                return;\n            }\n            unaff_RSI = *(unaff_RDI + uVar1 * 2);\n            if (unaff_RSI < unaff_RBX) {\n                *(*0x20 + -0x10) = uVar1;\n                unaff_RSI = *(in_RAX + unaff_RSI * 0x10);\n                if (uVar1 < 1) goto code_r0x00443f08;\n                arg3 = *(unaff_RDI + -2 + uVar1 * 2);\n                if (arg3 < unaff_RBX) break;\n                *(*0x20 + -0x28) = 0x443f3e;\n                fcn.0045e240(unaff_RBX);\n            }\n            *(*0x20 + -0x28) = 0x443f49;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045e240(unaff_RBX);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + 0x28) = unaff_RSI;\n        *(puVar2 + 0x30) = arg3;\n        *(puVar2 + -8) = 0x443f6d;\n        fcn.0045bb60();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        unaff_RSI = *(puVar2 + 0x28);\n        arg3 = *(puVar2 + 0x30);\n        *0x20 = puVar2;\n    } while( true );\n    arg3 = *(in_RAX + arg3 * 0x10);\n    if (arg3 != unaff_RSI) {\ncode_r0x00443f08:\n        *(*0x20 + -0x28) = 0x443f13;\n        fcn.0040a680();\n        in_RAX = *(*0x20 + 8);\n        uVar1 = *(*0x20 + -0x10);\n        unaff_RBX = *(*0x20 + 0x10);\n        unaff_RDI = *(*0x20 + 0x20);\n    }\n    goto code_r0x00443ed0;\n}\n",
        "token_count": 856
    },
    "00446640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00446640(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00430d80();\n    fcn.00430d80();\n    return;\n}\n",
        "token_count": 90
    },
    "004466e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004466e0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00430e00();\n    if (*0x7acfd8 == 0) {\n        fcn.00430d80();\n    }\n    else {\n        fcn.00430e00();\n        fcn.00430e00();\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "00447240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00447240(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    uchar auVar2 [16];\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    uVar1 = *in_RAX;\n    auVar2 = ZEXT816(uVar1) * ZEXT816(arg1);\n    if ((((SUB168(auVar2 >> 0x40, 0) == 0) && (SUB168(auVar2, 0) < 0x1000000000001)) && (-1 < unaff_RBX)) &&\n       (unaff_RBX <= arg1)) {\n        fcn.0040bba0(1);\n        return;\n    }\n    do {\n        auVar2 = ZEXT816(uVar1) * ZEXT816(unaff_RBX);\n        uVar3 = SUB168(auVar2, 0);\n        if (SUB168(auVar2 >> 0x40, 0) == 0) goto code_r0x004472b8;\n        do {\n            unaff_RBX = 0x732958;\n            uVar3 = fcn.004334e0();\ncode_r0x004472b8:\n        } while ((0x1000000000000 < uVar3) || (unaff_RBX < 0));\n        unaff_RBX = 0x732968;\n        fcn.004334e0();\n    } while( true );\n}\n",
        "token_count": 387
    },
    "00448c40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00448c40(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t *unaff_RBX;\n    \n    uVar1 = *(in_RAX + 0x28);\n    if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n        *(in_RAX + 0x28) = uVar1 + unaff_RBX[2];\n    }\n    for (iVar2 = *(in_RAX + 0x28); iVar2 != 0; iVar2 = *(iVar2 + 0x28)) {\n        uVar1 = *(iVar2 + 0x18);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x18) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 8);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 8) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 0x20);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x20) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 0x28);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x28) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 0x38);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x38) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 0x30);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x30) = uVar1 + unaff_RBX[2];\n        }\n    }\n    return;\n}\n",
        "token_count": 694
    },
    "00448d40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00448d40(uint64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    iVar3 = *(in_RAX + 0x148);\n    if (iVar3 != 0) {\n        iVar4 = 0;\n        for (; iVar3 != 0; iVar3 = *(iVar3 + 0x40)) {\n            if (iVar4 != *(iVar3 + 0x50)) {\n                fcn.0040a460();\n            }\n            iVar4 = *(iVar3 + 0x50);\n        }\n        for (iVar3 = *(in_RAX + 0x148); iVar3 != 0; iVar3 = *(iVar3 + 0x40)) {\n            uVar1 = *(iVar3 + 0x18);\n            if ((*arg1 < uVar1 || *arg1 == uVar1) && (uVar1 <= arg1[1] && arg1[1] != uVar1)) {\n                *(iVar3 + 0x18) = uVar1 + arg1[2];\n            }\n        }\n        if (arg1[0x23] == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = arg1[0x23] - (arg1[1] - unaff_RBX);\n            fcn.0045ebc0(iVar3);\n        }\n        iVar2 = 0;\n        for (iVar4 = *(in_RAX + 0x148); iVar4 != 0; iVar4 = *(iVar4 + 0x40)) {\n            if (iVar2 != *(iVar4 + 0x50)) {\n                fcn.0040a680();\n            }\n            iVar2 = *(iVar4 + 0x50);\n        }\n        return iVar3;\n    }\n    return 0;\n}\n",
        "token_count": 494
    },
    "0044af20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044af20(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t unaff_R14;\n    ulong uStack0000000000000030;\n    \n    uStack0000000000000030 = arg3;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0044abe0(3);\n    return;\n}\n",
        "token_count": 125
    },
    "0044b000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044b000(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t unaff_R14;\n    ulong uStack0000000000000030;\n    \n    uStack0000000000000030 = arg3;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0044abe0(4);\n    return;\n}\n",
        "token_count": 125
    },
    "0044b320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0044b320(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((in_RAX == 0) || (0x20 < unaff_RBX)) {\n                *(*0x20 + -0x20) = 0x44b35c;\n                iVar1 = fcn.0044b920();\n                return iVar1;\n            }\n            if (unaff_RBX < 0x21) {\n                if (unaff_RBX != 0) {\n                    return in_RAX;\n                }\n                *(*0x20 + -0x20) = 0x44b385;\n                fcn.0045e240(0);\n            }\n            *(*0x20 + -0x20) = 0x44b392;\n            in_RAX = fcn.0045e280(unaff_RBX, 0x20);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x44b3a5;\n        fcn.0045bb60();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 431
    },
    "0044b3c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044b3c0(uchar (*arg1) [16])\n\n{\n    uchar (*in_RAX) [16];\n    uchar (*arg1_00) [16];\n    uchar (*unaff_RBX) [16];\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if ((in_RAX == NULL) || (0x20 < arg1)) {\n        in_RAX = fcn.0044b9c0();\n        arg1_00 = unaff_RBX;\n    }\n    else {\n        *in_RAX = in_XMM15;\n        in_RAX[1] = in_XMM15;\n        arg1_00 = arg1;\n    }\n    if (arg1 < arg1_00) {\n        arg1_00 = arg1;\n    }\n    if (unaff_RBX != in_RAX) {\n        fcn.0045ebc0(arg1_00);\n    }\n    return;\n}\n",
        "token_count": 260
    },
    "0044b660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0044b660(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t iVar6;\n    int64_t iVar7;\n    uint64_t arg1_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x54) = 0;\n            iVar1 = 0;\n            iVar4 = 0;\n            while (*(*0x20 + -0x48) = iVar1,  iVar4 < arg1) {\n                *(*0x20 + -0x28) = iVar4;\n                unaff_RDI = *(unaff_RBX + iVar4 * 4);\n                *(*0x20 + -0x80) = 0x44b6b5;\n                iVar1 = fcn.00458a60(4);\n                iVar1 = *(*0x20 + -0x48) + iVar1;\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                iVar4 = *(*0x20 + -0x28) + 1;\n            }\n            unaff_RBX = iVar1 + 3;\n            *(*0x20 + -0x80) = 0x44b6ee;\n            uVar2 = fcn.0044b320();\n            *(*0x20 + -0x20) = uVar2;\n            *(*0x20 + -0x40) = unaff_RBX;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + -0x38) = unaff_RDI;\n            *(*0x20 + -0x30) = iVar1;\n            iVar4 = *(*0x20 + 0x18);\n            iVar6 = *(*0x20 + -0x48);\n            iVar7 = 0;\n            arg1_00 = 0;\n            while ((iVar7 < iVar4 && (arg1_00 < iVar6))) {\n                if (unaff_RDI < arg1_00) goto code_r0x0044b7e8;\n                *(*0x20 + -0x28) = iVar7;\n                *(*0x20 + -0x50) = arg1_00;\n                *(*0x20 + -0x80) = 0x44b756;\n                iVar3 = fcn.00458a60(iVar1 - arg1_00);\n                iVar7 = *(*0x20 + -0x28) + 1;\n                iVar4 = *(*0x20 + 0x18);\n                uVar2 = *(*0x20 + -0x20);\n                unaff_RBX = *(*0x20 + -0x40);\n                iVar1 = *(*0x20 + -0x30);\n                unaff_RDI = *(*0x20 + -0x38);\n                iVar6 = *(*0x20 + -0x48);\n                arg1_00 = *(*0x20 + -0x50) + iVar3;\n            }\n            if (arg1_00 <= unaff_RBX) {\n                return uVar2;\n            }\n            *(*0x20 + -0x80) = 0x44b7e8;\n            fcn.0045e280(arg1_00, unaff_RBX);\ncode_r0x0044b7e8:\n            *(*0x20 + -0x80) = 0x44b7f3;\n            arg1 = unaff_RDI;\n            in_RAX = fcn.0045e300(unaff_RDI);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x44b80d;\n        fcn.0045bb60();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1146
    },
    "0044b840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0044b840(void)\n\n{\n    int64_t in_RAX;\n    uint64_t arg1;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        iVar2 = unaff_RDI;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX == 0) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x40) = 0x44b885;\n                in_RAX = fcn.0044b920();\n                iVar2 = *(*0x20 + 0x10);\n                iVar1 = unaff_RBX;\n                unaff_RBX = unaff_RDI;\n            }\n            else {\n                unaff_RSI = 4;\n                iVar1 = 4;\n                iVar2 = unaff_RBX;\n                unaff_RBX = 4;\n            }\n            *(*0x20 + -0x18) = iVar1;\n            *(*0x20 + -0x10) = in_RAX;\n            if (iVar2 != iVar2) {\n                iVar2 = 0xfffd;\n            }\n            *(*0x20 + -0x40) = 0x44b8be;\n            arg1 = fcn.00458a60(unaff_RSI);\n            if (arg1 <= *(*0x20 + -0x18)) {\n                return *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x40) = 0x44b8e5;\n            in_RAX = fcn.0045e280(arg1, *(*0x20 + -0x18));\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x44b8f5;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n        unaff_RDI = iVar2;\n    } while( true );\n}\n",
        "token_count": 609
    },
    "0044c080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0044c080(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t arg2;\n    int64_t iStack56;\n    \n    if (in_RAX != 0) {\n        arg2 = -((in_RAX & 0xfff) - 0x1000);\n        iVar1 = 0;\n        while( true ) {\n            fcn.00402ea0(in_RAX, arg2);\n            if (iStack56 != -1) break;\n            in_RAX = in_RAX + arg2;\n            iVar1 = iVar1 + arg2;\n            arg2 = 0x1000;\n        }\n        return iStack56 + iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 168
    },
    "0044c140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0044c140(void)\n\n{\n    uint16_t uVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t arg1;\n    uint64_t arg1_00;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t arg1_01;\n    ulong arg1_02;\n    int64_t unaff_R14;\n    \ncode_r0x0044c140:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x78;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x30) = 0;\n        iVar3 = 0;\n        uVar4 = 0;\n        while (arg1 = 0x3fffffffffff,  uVar4 < 0x3fffffffffff) {\n            *(*0x20 + -0x48) = iVar3;\n            uVar1 = *(in_RAX + uVar4 * 2);\n            arg1_00 = uVar1;\n            if (uVar1 == 0) {\n                *(*0x20 + -0x80) = 0x44c1ce;\n                uVar2 = fcn.0044b920();\n                *(*0x20 + -0x18) = uVar2;\n                *(*0x20 + -0x58) = unaff_RBX;\n                *(*0x20 + -0x10) = uVar4;\n                *(*0x20 + -0x28) = arg1_00;\n                *(*0x20 + -0x20) = 0x3fffffffffff;\n                iVar3 = *(*0x20 + 8);\n                iVar6 = *(*0x20 + -0x48);\n                uVar7 = 0;\n                arg1_01 = 0;\n                goto code_r0x0044c272;\n            }\n            *(*0x20 + -0x38) = uVar4;\n            unaff_RBX = 8;\n            *(*0x20 + -0x80) = 0x44c186;\n            iVar3 = fcn.00458a60(8);\n            iVar3 = *(*0x20 + -0x48) + iVar3;\n            in_RAX = *(*0x20 + 8);\n            uVar4 = *(*0x20 + -0x38) + 1;\n        }\n        goto code_r0x0044c2ea;\n    }\n    goto code_r0x0044c2f6;\ncode_r0x0044c272:\n    arg1_02 = 0x3fffffffffff;\n    if (0x3ffffffffffe < uVar7) goto code_r0x0044c2df;\n    if ((*(iVar3 + uVar7 * 2) == 0) || (iVar6 <= arg1_01)) {\n        if (arg1_01 < arg1_00) {\n            *(uVar4 + arg1_01) = 0;\n            if (arg1_01 <= unaff_RBX) {\n                return uVar2;\n            }\n            *(*0x20 + -0x80) = 0x44c2c9;\n            fcn.0045e280(arg1_01, unaff_RBX);\n        }\n        *(*0x20 + -0x80) = 0x44c2d4;\n        fcn.0045e240(arg1_00);\ncode_r0x0044c2d4:\n        *(*0x20 + -0x80) = 0x44c2df;\n        fcn.0045e300(arg1_00);\n        goto code_r0x0044c2df;\n    }\n    if (arg1_00 < arg1_01) goto code_r0x0044c2d4;\n    *(*0x20 + -0x40) = uVar7;\n    *(*0x20 + -0x50) = arg1_01;\n    *(*0x20 + -0x80) = 0x44c22b;\n    iVar3 = fcn.00458a60(arg1 - arg1_01);\n    uVar7 = *(*0x20 + -0x40) + 1;\n    arg1_01 = *(*0x20 + -0x50) + iVar3;\n    uVar4 = *(*0x20 + -0x10);\n    iVar3 = *(*0x20 + 8);\n    iVar6 = *(*0x20 + -0x48);\n    uVar2 = *(*0x20 + -0x18);\n    unaff_RBX = *(*0x20 + -0x58);\n    arg1 = *(*0x20 + -0x20);\n    arg1_00 = *(*0x20 + -0x28);\n    goto code_r0x0044c272;\ncode_r0x0044c2df:\n    *(*0x20 + -0x80) = 0x44c2ea;\n    fcn.0045e240(arg1_02);\ncode_r0x0044c2ea:\n    *(*0x20 + -0x80) = 0x44c2f5;\n    in_RAX = fcn.0045e240(arg1);\ncode_r0x0044c2f6:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + -8) = 0x44c305;\n    fcn.0045bb60();\n    in_RAX = *(puVar5 + 8);\n    *0x20 = puVar5;\n    goto code_r0x0044c140;\n}\n",
        "token_count": 1347
    },
    "0044c360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\nuint64_t fcn.0044c360(void)\n\n{\n    uchar auVar1 [16];\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    uVar2 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n    auVar1 = ZEXT816(uVar2) * ZEXT816(uVar2 ^ 0xe7037ed1a0b428db);\n    *(*(unaff_R14 + 0x30) + 0xf0) = uVar2;\n    return SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n}\n",
        "token_count": 162
    },
    "0044cf80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044cf80(void)\n\n{\n    uint *in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0044ce60(*in_RAX);\n    return;\n}\n",
        "token_count": 93
    },
    "0044d800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044d800(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    uint64_t arg1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \ncode_r0x0044d800:\n    puVar2 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar2 = *0x20 + -0x18;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -0x20) = 0x44d825;\n        iVar1 = fcn.0044d760();\n        arg1 = unaff_RBX;\n        do {\n            arg1 = arg1 - 1;\n            if (arg1 < 1) break;\n        } while (*(arg1 + iVar1) != '/');\n        do {\n            if (unaff_RBX <= arg1) goto code_r0x0044d856;\n            if (unaff_RBX <= arg1) goto code_r0x0044d86d;\n            if (*(arg1 + iVar1) == '.') goto code_r0x0044d856;\n            arg1 = arg1 + 1;\n        } while( true );\n    }\n    goto code_r0x0044d879;\ncode_r0x0044d856:\n    if (arg1 <= unaff_RBX) {\n        return;\n    }\n    *(*0x20 + -0x20) = 0x44d86d;\n    fcn.0045e280(arg1, unaff_RBX);\ncode_r0x0044d86d:\n    *(*0x20 + -0x20) = 0x44d878;\n    in_RAX = fcn.0045e240(unaff_RBX);\ncode_r0x0044d879:\n    *(puVar2 + 8) = in_RAX;\n    *(puVar2 + 0x10) = unaff_RBX;\n    *(puVar2 + -8) = 0x44d888;\n    fcn.0045bb60();\n    in_RAX = *(puVar2 + 8);\n    unaff_RBX = *(puVar2 + 0x10);\n    *0x20 = puVar2;\n    goto code_r0x0044d800;\n}\n",
        "token_count": 593
    },
    "0044db40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044db40(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0044da20(arg1);\n    return;\n}\n",
        "token_count": 87
    },
    "0044dba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044dba0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0044d160(*(in_RAX + 0x10));\n    return;\n}\n",
        "token_count": 102
    },
    "0044dc20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0044dc20(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint64_t uVar3;\n    ulong uVar4;\n    int32_t iVar5;\n    uint *in_RAX;\n    ulong uVar6;\n    int64_t arg1;\n    int64_t iVar7;\n    int64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            uVar3 = *(unaff_RBX + 0x58);\n            uVar6 = *(unaff_RBX + 0x50);\n            uVar4 = *(unaff_RBX + 0x60);\n            uVar1 = in_RAX[4];\n            if (uVar1 <= uVar3) {\n                *(*0x20 + -0x10) = unaff_RBX;\n                *(*0x20 + -0x18) = in_RAX;\n                *(*0x20 + -0x30) = uVar4;\n                *(*0x20 + -0x20) = uVar6;\n                *(*0x20 + -0x38) = uVar3;\n                *(*0x20 + -0x40) = uVar1;\n                uVar2 = *in_RAX;\n                *(*0x20 + -0x98) = 0x44dc9b;\n                uVar6 = fcn.0044ce60(uVar2);\n                *(*0x20 + -0x58) = uVar6;\n                *(*0x20 + -0x60) = 0xffffffff;\n                uVar3 = *(*0x20 + -0x40);\n                arg1 = *(*0x20 + -0x30) - uVar3;\n                iVar9 = *(*0x20 + -0x38) - uVar3;\n                iVar7 = *(*0x20 + -0x20) + (uVar3 & -arg1 >> 0x3f);\n                iVar5 = 0;\n                while( true ) {\n                    *(*0x20 + -0x28) = iVar7;\n                    *(*0x20 + -0x48) = arg1;\n                    *(*0x20 + -0x50) = iVar9;\n                    *(*0x20 + -0x5c) = iVar5;\n                    *(*0x20 + -0x98) = 0x44dd19;\n                    fcn.0044ce60();\n                    iVar9 = *(*0x20 + -0x50);\n                    arg1 = *(*0x20 + -0x48);\n                    *(*0x20 + -0x98) = 0x44dd45;\n                    iVar7 = fcn.0044dee0(arg1);\n                    if (*0x20 == 'X') break;\n                    iVar5 = *(*0x20 + -0x5c);\n                    if (*(*0x20 + -0x5c) < *(*0x20 + -0x60)) {\n                        iVar5 = *(*0x20 + -0x60);\n                    }\n                }\n                return *(*0x20 + -0x5c);\n            }\n            *(*0x20 + -0x98) = 0x44dd66;\n            in_RAX = fcn.0045e300(uVar3);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x44dd76;\n        fcn.0045bb60();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 967
    },
    "0044dda0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0044dda0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (*(in_RAX + 0x1c) < arg1 || *(in_RAX + 0x1c) == arg1) {\n        return 0xffffffff;\n    }\n    uVar1 = fcn.0044d160(*(in_RAX + arg1 * 4 + 0x28));\n    return uVar1;\n}\n",
        "token_count": 162
    },
    "0044de40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0044de40(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (*(in_RAX + 0x1c) < arg1 || *(in_RAX + 0x1c) == arg1) {\n        return 0xffffffff;\n    }\n    uVar1 = fcn.0044d160(*(in_RAX + arg1 * 4 + 0x28));\n    return uVar1;\n}\n",
        "token_count": 162
    },
    "004505c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.004505c0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0040a460();\n    iVar4 = 0x7fffffffffffffff;\n    for (iVar3 = 0; iVar3 < *0x7ada48; iVar3 = iVar3 + 1) {\n        iVar1 = *(*0x7ada40 + iVar3 * 8);\n        if (iVar1 != 0) {\n            iVar2 = *(iVar1 + 0x1208);\n            if ((iVar2 != 0) && (iVar2 < iVar4)) {\n                iVar4 = iVar2;\n            }\n            iVar1 = *(iVar1 + 0x1210);\n            if ((iVar1 != 0) && (iVar1 < iVar4)) {\n                iVar4 = iVar1;\n            }\n        }\n    }\n    fcn.0040a680();\n    return iVar4;\n}\n",
        "token_count": 276
    },
    "00450a60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00450a60(void)\n\n{\n    ulong uStack16;\n    \n    fcn.0045fb60();\n    return uStack16;\n}\n",
        "token_count": 35
    },
    "00450aa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00450aa0(ulong param_1)\n\n{\n    if (*0x7ad0a0 != NULL) {\n        (***0x7ad0a0)();\n        return;\n    }\n    fcn.0042f8e0(param_1);\n    return;\n}\n",
        "token_count": 64
    },
    "004513e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.004513e0(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = *(unaff_R14 + 0x30);\n    if (*(iVar2 + 0xa0) != 0) {\n        return iVar2;\n    }\n    fcn.0040a460();\n    return iVar2;\n}\n",
        "token_count": 176
    },
    "00451a00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00451a00(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00451a60();\n    return;\n}\n",
        "token_count": 82
    },
    "00451b80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00451b80(void)\n\n{\n    int64_t unaff_R14;\n    ulong uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    uStack16 = *(*(unaff_R14 + 0x30) + 0xb8);\n    fcn.00450c80(&uStack16);\n    return;\n}\n",
        "token_count": 115
    },
    "00452420": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00452420(void)\n\n{\n    int64_t unaff_R14;\n    ulong uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    uStack16 = *0x802388;\n    fcn.00450c80(&uStack16);\n    return;\n}\n",
        "token_count": 102
    },
    "00452480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00452480(void)\n\n{\n    int64_t unaff_R14;\n    int64_t iStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    iStack16 = fcn.0041e400();\n    if (iStack16 == -1) {\n        iStack16 = 0;\n        fcn.00450c80(&iStack16);\n    }\n    else {\n        fcn.00450c80(&iStack16);\n    }\n    return;\n}\n",
        "token_count": 145
    },
    "00454940": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00454940(int64_t *arg1)\n\n{\n    uint32_t uVar1;\n    ulong uVar2;\n    char cVar3;\n    uchar uVar4;\n    ulong in_RAX;\n    int64_t iVar5;\n    ulong uVar6;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    char unaff_DIL;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            uVar1 = *(unaff_RBX + 8);\n            arg2 = uVar1;\n            uVar8 = uVar1;\n            if (unaff_DIL == '\\0') {\n                return uVar8;\n            }\n            if (uVar1 != 0x80000000) {\n                return uVar8;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + -0x30) = uVar8;\n            *(*0x20 + -0x10) = arg1;\n            *(*0x20 + -0x18) = unaff_RBX;\n            *(*0x20 + -0x60) = 0x4549a5;\n            fcn.0044d760();\n            if (arg1 == 0x14) {\n                *(*0x20 + -0x60) = 0x4549dc;\n                cVar3 = fcn.00402a00(0x14, arg2);\n            }\n            else {\n                if (arg1 != 0x17) goto code_r0x004549e4;\n                *(*0x20 + -0x60) = 0x4549c5;\n                cVar3 = fcn.00402a00(0x17, arg2);\n            }\n            if (cVar3 == '\\0') {\ncode_r0x004549e4:\n                return *(*0x20 + -0x30);\n            }\n            iVar5 = *(*0x20 + 0x28);\n            if (iVar5 == 0) {\n                iVar5 = **(*(*0x20 + 8) + 0x28);\n                uVar4 = *(*(*(*0x20 + 8) + 0x28) + 4);\n                unaff_RSI = iVar5;\n            }\n            else {\n                uVar4 = 0;\n            }\n            *(*0x20 + -0x39) = uVar4;\n            *(*0x20 + -0x28) = iVar5;\n            *(*0x20 + -0x60) = 0x454a33;\n            iVar5 = fcn.0044ce60();\n            arg1 = *(*0x20 + -0x28);\n            if (*arg1 == iVar5) {\n                if (*(*0x20 + -0x39) == '\\0') {\n                    return arg1[2] & 0xfffffffffffffff8;\n                }\n                return *arg1[1] << 3;\n            }\n            uVar2 = *(*0x20 + -0x10);\n            *(*0x20 + -0x60) = 0x454a85;\n            uVar6 = fcn.0044d760();\n            *(*0x20 + -0x20) = uVar6;\n            *(*0x20 + -0x38) = uVar2;\n            *(*0x20 + -0x60) = 0x454a94;\n            fcn.00435540();\n            *(*0x20 + -0x60) = 0x454aa5;\n            fcn.00435e40();\n            *(*0x20 + -0x60) = 0x454ab4;\n            fcn.00435e40();\n            *(*0x20 + -0x60) = 0x454ab9;\n            fcn.004357a0();\n            *(*0x20 + -0x60) = 0x454abe;\n            fcn.004355c0();\n            unaff_RBX = 0x10;\n            *(*0x20 + -0x60) = 0x454acf;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        puVar7[0x20] = unaff_DIL;\n        *(puVar7 + 0x28) = unaff_RSI;\n        *(puVar7 + -8) = 0x454aee;\n        fcn.0045bb60();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_DIL = puVar7[0x20];\n        unaff_RSI = *(puVar7 + 0x28);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1270
    },
    "00454b20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00454b20(ulong arg1)\n\n{\n    ulong uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint8_t uVar3;\n    char cVar4;\n    uchar unaff_BL;\n    uchar *puVar5;\n    uchar *puVar6;\n    ulong unaff_RBP;\n    int64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x00454b20:\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x208 && *0x20 + -0x208 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0x288;\n        *(*0x20 + -8) = unaff_RBP;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_BL;\n        *(*0x20 + 0x20) = unaff_RDI;\n        *(*0x20 + 0x28) = unaff_RSI;\n        *(*0x20 + -0x298) = *0x20 + -8;\n        *(*0x20 + -0x290) = 0x454b8f;\n        fcn.0045e4b4();\n        uVar1 = *(*0x20 + -0x298);\n        puVar5 = *0x20 + -0x240;\n        *(*0x20 + -0x290) = 0x454ba8;\n        fcn.004568e0(0x20);\n        *(*0x20 + -0x40) = in_XMM15;\n        *(*0x20 + -0x38) = in_XMM15;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        *(*0x20 + -0x298) = uVar1;\n        *(*0x20 + -0x290) = 0x454bef;\n        fcn.0045e7c0();\n        unaff_RBP = *(*0x20 + -0x298);\n        cVar4 = *(*0x20 + 0x10);\n        unaff_RSI = *(*0x20 + 8);\n        iVar7 = *(*0x20 + 0x28);\n        uVar8 = *(*0x20 + 0x20);\n        iVar2 = 0;\n        uVar3 = 0;\n        do {\n            unaff_BL = SUB81(puVar5, 0);\n            *(*0x20 + -0x248) = uVar8;\n            if (((0x1f < iVar2) || (unaff_RDI = *(*0x20 + iVar2 * 8 + -0x140),  unaff_RDI == 0)) || (iVar7 <= uVar8)) {\n                if (uVar3 != 0) {\n                    *(*0x20 + -0x40) = 0;\n                    *(*0x20 + -0x290) = 0x454d30;\n                    fcn.00456860();\n                    uVar8 = *(*0x20 + -0x248);\n                }\n                return uVar8;\n            }\n            if (unaff_RSI != 0) {\n                if (0xfffff < uVar8) goto code_r0x00454d48;\n                *(unaff_RSI + uVar8 * 8) = unaff_RDI;\n            }\n            if (cVar4 != '\\0') {\n                *(*0x20 + -0x250) = iVar2;\n                *(*0x20 + -0x261) = uVar3;\n                *(*0x20 + -600) = *0x7ad070;\n                if (*0x7ad070 == 0) {\n                    *(*0x20 + -0x260) = unaff_RDI;\n                    *(*0x20 + -0x290) = 0x454cb5;\n                    fcn.00435540();\n                    puVar5 = 0x16;\n                    *(*0x20 + -0x290) = 0x454cc6;\n                    fcn.00435e40();\n                    *(*0x20 + -0x290) = 0x454cd0;\n                    fcn.00435ca0();\n                    *(*0x20 + -0x290) = 0x454cd5;\n                    fcn.004357a0();\n                    *(*0x20 + -0x290) = 0x454cda;\n                    fcn.004355c0();\n                    iVar2 = *(*0x20 + -600);\n                    uVar8 = *(*0x20 + -0x248);\n                }\n                else {\n                    puVar5 = iVar7 - uVar8;\n                    *(*0x20 + -0x290) = 0x454c94;\n                    iVar2 = fcn.00456660(*0x20 + -0x40);\n                    uVar8 = (iVar2 + *(*0x20 + -0x248)) - 1;\n                    iVar2 = *(*0x20 + -600);\n                }\n                uVar3 = iVar2 != 0 | *(*0x20 + -0x261);\n                iVar2 = *(*0x20 + -0x250);\n                cVar4 = *(*0x20 + 0x10);\n                unaff_RSI = *(*0x20 + 8);\n                iVar7 = *(*0x20 + 0x28);\n            }\n            iVar2 = iVar2 + 1;\n            uVar8 = uVar8 + 1;\n        } while( true );\n    }\n    goto code_r0x00454d56;\ncode_r0x00454d48:\n    arg1 = 0x100000;\n    *(*0x20 + -0x290) = 0x454d55;\n    in_RAX = fcn.0045e240(0x100000);\ncode_r0x00454d56:\n    *(puVar6 + 8) = in_RAX;\n    puVar6[0x10] = unaff_BL;\n    *(puVar6 + 0x18) = arg1;\n    *(puVar6 + 0x20) = unaff_RDI;\n    *(puVar6 + 0x28) = unaff_RSI;\n    *(puVar6 + -8) = 0x454d73;\n    fcn.0045bb60();\n    in_RAX = *(puVar6 + 8);\n    unaff_BL = puVar6[0x10];\n    arg1 = *(puVar6 + 0x18);\n    unaff_RDI = *(puVar6 + 0x20);\n    unaff_RSI = *(puVar6 + 0x28);\n    *0x20 = puVar6;\n    goto code_r0x00454b20;\n}\n",
        "token_count": 1564
    },
    "00454e40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00454e40(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    ulong uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0044d760();\n    fcn.00435540();\n    fcn.00435e40();\n    fcn.00435e40();\n    fcn.004357a0();\n    fcn.004355c0();\n    uVar1 = fcn.0044ce60();\n    uVar2 = arg1;\n    if (uVar1 < arg1) {\n        uVar2 = arg1 - 1;\n    }\n    fcn.0044da20(uVar2);\n    fcn.00435540();\n    fcn.00435e40();\n    fcn.00435e40();\n    fcn.00435e40();\n    fcn.00435c40(uVar2 & 0xffffffff);\n    fcn.004355c0();\n    uVar2 = fcn.0044ce60();\n    if (uVar2 < arg1) {\n        uVar3 = fcn.0044ce60();\n        fcn.00435540();\n        fcn.00435e40();\n        fcn.00435ca0(uVar3);\n        fcn.004355c0();\n    }\n    fcn.00435540();\n    fcn.004357a0();\n    fcn.004355c0();\n    return;\n}\n",
        "token_count": 372
    },
    "004558e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "access PEB ldr_data"
        ],
        "decompiled_code": "\nulong fcn.004558e0(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0045ba20();\n    return 0;\n}\n",
        "token_count": 87
    },
    "00455a60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00455a60(ulong arg1, ulong arg2)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if (unaff_RDI != 0) {\n                *(*0x20 + -0x58) = 0;\n                *(*0x20 + -0x60) = 0x455aa9;\n                fcn.004525e0(0, arg2, arg1, unaff_RDI);\n                return;\n            }\n            arg1 = 0;\n            *(*0x20 + -0x60) = 0x455abd;\n            in_RAX = fcn.0045e240(0);\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + 0x20) = unaff_RDI;\n        *(puVar1 + 0x28) = unaff_RSI;\n        *(puVar1 + -8) = 0x455adc;\n        fcn.0045bb60();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        unaff_RDI = *(puVar1 + 0x20);\n        unaff_RSI = *(puVar1 + 0x28);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 493
    },
    "00456240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00456240(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    uchar auStack32 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00435540();\n    fcn.00435e40();\n    fcn.00435ca0();\n    fcn.00435e40();\n    fcn.00435ca0();\n    fcn.00435e40();\n    fcn.00435ca0();\n    fcn.00435e40();\n    fcn.00435ca0();\n    fcn.00435e40();\n    fcn.004355c0();\n    auStack32 = CONCAT88(arg1, 0x456420);\n    fcn.00435fa0(auStack32);\n    return;\n}\n",
        "token_count": 210
    },
    "00456b80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00456b80(ulong param_1, uint64_t param_2)\n\n{\n    ulong uVar1;\n    uint64_t in_RAX;\n    ulong *puVar2;\n    int64_t iVar3;\n    int32_t unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_EBX == 0) {\n                return 0;\n            }\n            *(*0x20 + 0x10) = unaff_EBX;\n            for (iVar3 = 0x79ae80; iVar3 != 0; iVar3 = *(iVar3 + 0x220)) {\n                param_2 = *(iVar3 + 0x118);\n                if ((param_2 <= in_RAX) && (unaff_RSI = *(iVar3 + 0x120),  in_RAX < unaff_RSI)) {\n                    if (param_2 + unaff_EBX <= unaff_RSI) {\n                        return param_2 + unaff_EBX;\n                    }\n                    goto code_r0x00456d56;\n                }\n            }\n            *(*0x20 + -0x30) = in_RAX;\n            *(*0x20 + -0x58) = 0x456c0b;\n            fcn.0040a460();\n            uVar1 = *0x7adb70;\n            *(*0x20 + -0x58) = 0x456c25;\n            puVar2 = fcn.0040e800(*(*0x20 + 0x10));\n            *(*0x20 + -0x31) = uVar1;\n            *(*0x20 + -0x18) = *puVar2;\n            *(*0x20 + -0x58) = 0x456c45;\n            fcn.0040a680();\n            if (*(*0x20 + -0x31) != '\\0') {\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x58) = 0x456c53;\n            fcn.00435540();\n            *(*0x20 + -0x58) = 0x456c65;\n            fcn.00435e40();\n            *(*0x20 + -0x58) = 0x456c71;\n            fcn.00435ca0();\n            *(*0x20 + -0x58) = 0x456c85;\n            fcn.00435e40();\n            *(*0x20 + -0x58) = 0x456c8f;\n            fcn.00435ca0();\n            *(*0x20 + -0x58) = 0x456ca5;\n            fcn.00435e40();\n            *(*0x20 + -0x58) = 0x456caa;\n            fcn.004355c0();\n            iVar3 = 0x79ae80;\n            while (iVar3 != 0) {\n                *(*0x20 + -0x10) = iVar3;\n                *(*0x20 + -0x20) = *(iVar3 + 0x118);\n                param_2 = *(iVar3 + 0x120);\n                *(*0x20 + -0x28) = param_2;\n                *(*0x20 + -0x58) = 0x456ce7;\n                fcn.00435540();\n                *(*0x20 + -0x58) = 0x456cf8;\n                fcn.00435e40();\n                *(*0x20 + -0x58) = 0x456d05;\n                fcn.00435ca0();\n                *(*0x20 + -0x58) = 0x456d16;\n                fcn.00435e40();\n                *(*0x20 + -0x58) = 0x456d25;\n                fcn.00435ca0();\n                *(*0x20 + -0x58) = 0x456d2a;\n                fcn.004357a0();\n                *(*0x20 + -0x58) = 0x456d2f;\n                fcn.004355c0();\n                iVar3 = *(*(*0x20 + -0x10) + 0x220);\n            }\n            *(*0x20 + -0x58) = 0x456d56;\n            fcn.00433c80();\ncode_r0x00456d56:\n            *(*0x20 + -0x20) = param_2;\n            *(*0x20 + -0x28) = unaff_RSI;\n            *(*0x20 + -0x58) = 0x456d65;\n            fcn.00435540();\n            *(*0x20 + -0x58) = 0x456d76;\n            fcn.00435e40();\n            *(*0x20 + -0x58) = 0x456d85;\n            fcn.00435ca0();\n            *(*0x20 + -0x58) = 0x456d96;\n            fcn.00435e40();\n            *(*0x20 + -0x58) = 0x456da5;\n            fcn.00435ca0();\n            *(*0x20 + -0x58) = 0x456db6;\n            fcn.00435e40();\n            *(*0x20 + -0x58) = 0x456dc5;\n            fcn.00435ca0();\n            *(*0x20 + -0x58) = 0x456dca;\n            fcn.004357a0();\n            *(*0x20 + -0x58) = 0x456dcf;\n            fcn.004355c0();\n            unaff_EBX = 0x21;\n            *(*0x20 + -0x58) = 0x456de5;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + -8) = 0x456df4;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1518
    },
    "00458bc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00458bc0(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX != 0) {\n                *(*0x20 + -0x28) = 0x458bee;\n                fcn.00450aa0(unaff_RBX);\n                return;\n            }\n            arg1 = 0;\n            *(*0x20 + -0x28) = 0x458c05;\n            in_RAX = fcn.0045e240(0);\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + -8) = 0x458c1a;\n        fcn.0045bb60();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 386
    },
    "00458e60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\nvoid fcn.00458e60(void)\n\n{\n    uchar auVar1 [16];\n    uchar auVar2 [16];\n    int64_t unaff_RBX;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (0 < *0x801ae0) {\n        uVar3 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n        auVar2 = ZEXT816(uVar3) * ZEXT816(uVar3 ^ 0xe7037ed1a0b428db);\n        auVar1 = SEXT816(*0x801ae0);\n        *(*(unaff_R14 + 0x30) + 0xf0) = uVar3;\n        if (SUB168((ZEXT816(SUB168(auVar2 >> 0x40, 0) ^ SUB168(auVar2, 0)) & 0xffffffffffffffff) % auVar1, 0) == 0) {\n            fcn.0042b180(unaff_RBX + 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 302
    },
    "00459240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00459240(void)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int32_t unaff_EBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    uVar1 = *(in_RAX + 0x10);\n    if ((uVar1 & 1) == 0) {\n        if (((unaff_EBX == 0x72) && ((uVar1 >> 2 & 1) != 0)) || ((unaff_EBX == 0x77 && ((uVar1 >> 3 & 1) != 0)))) {\n            iVar3 = 2;\n        }\n        else if ((unaff_EBX == 0x72) && ((uVar1 >> 1 & 1) != 0)) {\n            iVar3 = 3;\n        }\n        else {\n            iVar3 = 0;\n        }\n    }\n    else {\n        iVar3 = 1;\n    }\n    if (iVar3 == 0) {\n        do {\n            cVar2 = fcn.0042d4a0();\n            if (cVar2 != '\\0') {\n                return 0;\n            }\n            uVar1 = *(in_RAX + 0x10);\n            if ((uVar1 & 1) == 0) {\n                if (((unaff_EBX == 0x72) && ((uVar1 >> 2 & 1) != 0)) || ((unaff_EBX == 0x77 && ((uVar1 >> 3 & 1) != 0)))\n                   ) {\n                    iVar3 = 2;\n                }\n                else if ((unaff_EBX == 0x72) && ((uVar1 >> 1 & 1) != 0)) {\n                    iVar3 = 3;\n                }\n                else {\n                    iVar3 = 0;\n                }\n            }\n            else {\n                iVar3 = 1;\n            }\n        } while (iVar3 == 0);\n        return iVar3;\n    }\n    return iVar3;\n}\n",
        "token_count": 503
    },
    "00459380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459380(void)\n\n{\n    char cVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    do {\n        cVar1 = fcn.0042d4a0(1);\n    } while (cVar1 == '\\0');\n    return;\n}\n",
        "token_count": 109
    },
    "00459660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459660(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00433d80();\n    return;\n}\n",
        "token_count": 81
    },
    "004596c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004596c0(void)\n\n{\n    fcn.0043d620();\n    return;\n}\n",
        "token_count": 25
    },
    "00459a00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459a00(void)\n\n{\n    fcn.0045d940();\n    return;\n}\n",
        "token_count": 25
    },
    "00459b60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459b60(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00456b80();\n    return;\n}\n",
        "token_count": 82
    },
    "00459be0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459be0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00456b80();\n    return;\n}\n",
        "token_count": 82
    },
    "00459c20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459c20(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00445720(1);\n    return;\n}\n",
        "token_count": 83
    },
    "00459c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459c80(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00445a60(arg1);\n    return;\n}\n",
        "token_count": 87
    },
    "00459ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459ce0(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00445720(3);\n    return;\n}\n",
        "token_count": 86
    },
    "00459d40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459d40(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00445a60(0);\n    return;\n}\n",
        "token_count": 84
    },
    "00459d80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459d80(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX == 0x20) {\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x20) = 0x459db2;\n            fcn.00435540();\n            *(*0x20 + -0x20) = 0x459dc5;\n            fcn.00435e40();\n            *(*0x20 + -0x20) = 0x459dcf;\n            fcn.00435b40();\n            *(*0x20 + -0x20) = 0x459de5;\n            fcn.00435e40();\n            *(*0x20 + -0x20) = 0x459def;\n            fcn.00435b40();\n            *(*0x20 + -0x20) = 0x459df4;\n            fcn.004357a0();\n            *(*0x20 + -0x20) = 0x459df9;\n            fcn.004355c0();\n            *(*0x20 + -0x20) = 0x459e0a;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x459e15;\n        fcn.0045bb60();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 469
    },
    "00459e20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00459e20(void)\n\n{\n    int64_t unaff_R14;\n    ulong uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0045fb60();\n    return uStack16;\n}\n",
        "token_count": 91
    },
    "0045a7a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045a7a0(ulong arg1)\n\n{\n    fcn.0045a9c0(3);\n    return;\n}\n",
        "token_count": 34
    },
    "0045a800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045a800(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    fcn.0045a9c0(6);\n    return;\n}\n",
        "token_count": 46
    },
    "0045a860": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045a860(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    fcn.0045a9c0(9);\n    return;\n}\n",
        "token_count": 46
    },
    "0045a900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045a900(void)\n\n{\n    fcn.0045e4eb();\n    fcn.0045a9c0(0xc);\n    return;\n}\n",
        "token_count": 40
    },
    "0045a9c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0045a9c0(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    ulong uVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    uchar *unaff_RBX;\n    int64_t unaff_R14;\n    uchar auStack56 [32];\n    int64_t iStack24;\n    ulong uStack16;\n    \n    uStack16 = 0;\n    if (arg1 < 4) {\n        if (unaff_RBX != auStack56) {\n            fcn.0045ebc0(arg1 << 3);\n        }\n        unaff_RBX = auStack56;\n        iVar3 = 4;\n    }\n    else {\n        iVar3 = arg1;\n        if (0x2a < arg1) goto code_r0x0045ab1f;\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0x23c;\n    *piVar1 = *piVar1 + 1;\n    *(*(unaff_R14 + 0x30) + 0x130) = unaff_R14;\n    *(unaff_R14 + 0xe8) = *(unaff_R14 + 0x30);\n    uStack16 = 0x719790;\n    iStack24 = *(unaff_R14 + 0x30);\n    *(iStack24 + 0x2c0) = in_RAX;\n    *(iStack24 + 0x2c8) = arg1;\n    if (iVar3 != 0) {\n        *(iStack24 + 0x2d0) = unaff_RBX;\n        fcn.004035a0();\n        uVar2 = *(iStack24 + 0x2d8);\n        fcn.0043f3e0();\n        return uVar2;\n    }\n    fcn.0045e240(0);\ncode_r0x0045ab1f:\n    fcn.004334e0();\n    fcn.004328a0();\n    return 0;\n}\n",
        "token_count": 454
    },
    "0045dda0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045dda0(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong *puVar3;\n    ulong in_RAX;\n    ulong *unaff_RDI;\n    int64_t unaff_R14;\n    \n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    puVar2 = *(iVar1 + 0x1268);\n    *(iVar1 + 0x1268) = puVar2 + 2;\n    puVar3 = *(iVar1 + 0x1270);\n    *puVar2 = in_RAX;\n    puVar2[1] = *unaff_RDI;\n    if (puVar2 + 2 == puVar3) {\n        fcn.0045fe20();\n    }\n    *unaff_RDI = in_RAX;\n    return;\n}\n",
        "token_count": 208
    },
    "0045e6e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045e6e0(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    uVar1 = unaff_RSI[0x15];\n    uVar2 = unaff_RSI[0x16];\n    uVar3 = unaff_RSI[0x17];\n    unaff_RDI[0x14] = unaff_RSI[0x14];\n    unaff_RDI[0x15] = uVar1;\n    unaff_RDI[0x16] = uVar2;\n    unaff_RDI[0x17] = uVar3;\n    uVar1 = unaff_RSI[0x19];\n    uVar2 = unaff_RSI[0x1a];\n    uVar3 = unaff_RSI[0x1b];\n    unaff_RDI[0x18] = unaff_RSI[0x18];\n    unaff_RDI[0x19] = uVar1;\n    unaff_RDI[0x1a] = uVar2;\n    unaff_RDI[0x1b] = uVar3;\n    uVar1 = unaff_RSI[0x1d];\n    uVar2 = unaff_RSI[0x1e];\n    uVar3 = unaff_RSI[0x1f];\n    unaff_RDI[0x1c] = unaff_RSI[0x1c];\n    unaff_RDI[0x1d] = uVar1;\n    unaff_RDI[0x1e] = uVar2;\n    unaff_RDI[0x1f] = uVar3;\n    uVar1 = unaff_RSI[0x21];\n    uVar2 = unaff_RSI[0x22];\n    uVar3 = unaff_RSI[0x23];\n    unaff_RDI[0x20] = unaff_RSI[0x20];\n    unaff_RDI[0x21] = uVar1;\n    unaff_RDI[0x22] = uVar2;\n    unaff_RDI[0x23] = uVar3;\n    uVar1 = unaff_RSI[0x25];\n    uVar2 = unaff_RSI[0x26];\n    uVar3 = unaff_RSI[0x27];\n    unaff_RDI[0x24] = unaff_RSI[0x24];\n    unaff_RDI[0x25] = uVar1;\n    unaff_RDI[0x26] = uVar2;\n    unaff_RDI[0x27] = uVar3;\n    uVar1 = unaff_RSI[0x29];\n    uVar2 = unaff_RSI[0x2a];\n    uVar3 = unaff_RSI[0x2b];\n    unaff_RDI[0x28] = unaff_RSI[0x28];\n    unaff_RDI[0x29] = uVar1;\n    unaff_RDI[0x2a] = uVar2;\n    unaff_RDI[0x2b] = uVar3;\n    uVar1 = unaff_RSI[0x2d];\n    uVar2 = unaff_RSI[0x2e];\n    uVar3 = unaff_RSI[0x2f];\n    unaff_RDI[0x2c] = unaff_RSI[0x2c];\n    unaff_RDI[0x2d] = uVar1;\n    unaff_RDI[0x2e] = uVar2;\n    unaff_RDI[0x2f] = uVar3;\n    uVar1 = unaff_RSI[0x31];\n    uVar2 = unaff_RSI[0x32];\n    uVar3 = unaff_RSI[0x33];\n    unaff_RDI[0x30] = unaff_RSI[0x30];\n    unaff_RDI[0x31] = uVar1;\n    unaff_RDI[0x32] = uVar2;\n    unaff_RDI[0x33] = uVar3;\n    uVar1 = unaff_RSI[0x35];\n    uVar2 = unaff_RSI[0x36];\n    uVar3 = unaff_RSI[0x37];\n    unaff_RDI[0x34] = unaff_RSI[0x34];\n    unaff_RDI[0x35] = uVar1;\n    unaff_RDI[0x36] = uVar2;\n    unaff_RDI[0x37] = uVar3;\n    uVar1 = unaff_RSI[0x39];\n    uVar2 = unaff_RSI[0x3a];\n    uVar3 = unaff_RSI[0x3b];\n    unaff_RDI[0x38] = unaff_RSI[0x38];\n    unaff_RDI[0x39] = uVar1;\n    unaff_RDI[0x3a] = uVar2;\n    unaff_RDI[0x3b] = uVar3;\n    uVar1 = unaff_RSI[0x3d];\n    uVar2 = unaff_RSI[0x3e];\n    uVar3 = unaff_RSI[0x3f];\n    unaff_RDI[0x3c] = unaff_RSI[0x3c];\n    unaff_RDI[0x3d] = uVar1;\n    unaff_RDI[0x3e] = uVar2;\n    unaff_RDI[0x3f] = uVar3;\n    uVar1 = unaff_RSI[0x41];\n    uVar2 = unaff_RSI[0x42];\n    uVar3 = unaff_RSI[0x43];\n    unaff_RDI[0x40] = unaff_RSI[0x40];\n    unaff_RDI[0x41] = uVar1;\n    unaff_RDI[0x42] = uVar2;\n    unaff_RDI[0x43] = uVar3;\n    uVar1 = unaff_RSI[0x45];\n    uVar2 = unaff_RSI[0x46];\n    uVar3 = unaff_RSI[0x47];\n    unaff_RDI[0x44] = unaff_RSI[0x44];\n    unaff_RDI[0x45] = uVar1;\n    unaff_RDI[0x46] = uVar2;\n    unaff_RDI[0x47] = uVar3;\n    uVar1 = unaff_RSI[0x49];\n    uVar2 = unaff_RSI[0x4a];\n    uVar3 = unaff_RSI[0x4b];\n    unaff_RDI[0x48] = unaff_RSI[0x48];\n    unaff_RDI[0x49] = uVar1;\n    unaff_RDI[0x4a] = uVar2;\n    unaff_RDI[0x4b] = uVar3;\n    uVar1 = unaff_RSI[0x4d];\n    uVar2 = unaff_RSI[0x4e];\n    uVar3 = unaff_RSI[0x4f];\n    unaff_RDI[0x4c] = unaff_RSI[0x4c];\n    unaff_RDI[0x4d] = uVar1;\n    unaff_RDI[0x4e] = uVar2;\n    unaff_RDI[0x4f] = uVar3;\n    uVar1 = unaff_RSI[0x51];\n    uVar2 = unaff_RSI[0x52];\n    uVar3 = unaff_RSI[0x53];\n    unaff_RDI[0x50] = unaff_RSI[0x50];\n    unaff_RDI[0x51] = uVar1;\n    unaff_RDI[0x52] = uVar2;\n    unaff_RDI[0x53] = uVar3;\n    uVar1 = unaff_RSI[0x55];\n    uVar2 = unaff_RSI[0x56];\n    uVar3 = unaff_RSI[0x57];\n    unaff_RDI[0x54] = unaff_RSI[0x54];\n    unaff_RDI[0x55] = uVar1;\n    unaff_RDI[0x56] = uVar2;\n    unaff_RDI[0x57] = uVar3;\n    uVar1 = unaff_RSI[0x59];\n    uVar2 = unaff_RSI[0x5a];\n    uVar3 = unaff_RSI[0x5b];\n    unaff_RDI[0x58] = unaff_RSI[0x58];\n    unaff_RDI[0x59] = uVar1;\n    unaff_RDI[0x5a] = uVar2;\n    unaff_RDI[0x5b] = uVar3;\n    uVar1 = unaff_RSI[0x5d];\n    uVar2 = unaff_RSI[0x5e];\n    uVar3 = unaff_RSI[0x5f];\n    unaff_RDI[0x5c] = unaff_RSI[0x5c];\n    unaff_RDI[0x5d] = uVar1;\n    unaff_RDI[0x5e] = uVar2;\n    unaff_RDI[0x5f] = uVar3;\n    uVar1 = unaff_RSI[0x61];\n    uVar2 = unaff_RSI[0x62];\n    uVar3 = unaff_RSI[99];\n    unaff_RDI[0x60] = unaff_RSI[0x60];\n    unaff_RDI[0x61] = uVar1;\n    unaff_RDI[0x62] = uVar2;\n    unaff_RDI[99] = uVar3;\n    uVar1 = unaff_RSI[0x65];\n    uVar2 = unaff_RSI[0x66];\n    uVar3 = unaff_RSI[0x67];\n    unaff_RDI[100] = unaff_RSI[100];\n    unaff_RDI[0x65] = uVar1;\n    unaff_RDI[0x66] = uVar2;\n    unaff_RDI[0x67] = uVar3;\n    uVar1 = unaff_RSI[0x69];\n    uVar2 = unaff_RSI[0x6a];\n    uVar3 = unaff_RSI[0x6b];\n    unaff_RDI[0x68] = unaff_RSI[0x68];\n    unaff_RDI[0x69] = uVar1;\n    unaff_RDI[0x6a] = uVar2;\n    unaff_RDI[0x6b] = uVar3;\n    uVar1 = unaff_RSI[0x6d];\n    uVar2 = unaff_RSI[0x6e];\n    uVar3 = unaff_RSI[0x6f];\n    unaff_RDI[0x6c] = unaff_RSI[0x6c];\n    unaff_RDI[0x6d] = uVar1;\n    unaff_RDI[0x6e] = uVar2;\n    unaff_RDI[0x6f] = uVar3;\n    uVar1 = unaff_RSI[0x71];\n    uVar2 = unaff_RSI[0x72];\n    uVar3 = unaff_RSI[0x73];\n    unaff_RDI[0x70] = unaff_RSI[0x70];\n    unaff_RDI[0x71] = uVar1;\n    unaff_RDI[0x72] = uVar2;\n    unaff_RDI[0x73] = uVar3;\n    uVar1 = unaff_RSI[0x75];\n    uVar2 = unaff_RSI[0x76];\n    uVar3 = unaff_RSI[0x77];\n    unaff_RDI[0x74] = unaff_RSI[0x74];\n    unaff_RDI[0x75] = uVar1;\n    unaff_RDI[0x76] = uVar2;\n    unaff_RDI[0x77] = uVar3;\n    uVar1 = unaff_RSI[0x79];\n    uVar2 = unaff_RSI[0x7a];\n    uVar3 = unaff_RSI[0x7b];\n    unaff_RDI[0x78] = unaff_RSI[0x78];\n    unaff_RDI[0x79] = uVar1;\n    unaff_RDI[0x7a] = uVar2;\n    unaff_RDI[0x7b] = uVar3;\n    uVar1 = unaff_RSI[0x7d];\n    uVar2 = unaff_RSI[0x7e];\n    uVar3 = unaff_RSI[0x7f];\n    unaff_RDI[0x7c] = unaff_RSI[0x7c];\n    unaff_RDI[0x7d] = uVar1;\n    unaff_RDI[0x7e] = uVar2;\n    unaff_RDI[0x7f] = uVar3;\n    return;\n}\n",
        "token_count": 3496
    },
    "0045e7c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045e7c0(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    uVar1 = unaff_RSI[0x15];\n    uVar2 = unaff_RSI[0x16];\n    uVar3 = unaff_RSI[0x17];\n    unaff_RDI[0x14] = unaff_RSI[0x14];\n    unaff_RDI[0x15] = uVar1;\n    unaff_RDI[0x16] = uVar2;\n    unaff_RDI[0x17] = uVar3;\n    uVar1 = unaff_RSI[0x19];\n    uVar2 = unaff_RSI[0x1a];\n    uVar3 = unaff_RSI[0x1b];\n    unaff_RDI[0x18] = unaff_RSI[0x18];\n    unaff_RDI[0x19] = uVar1;\n    unaff_RDI[0x1a] = uVar2;\n    unaff_RDI[0x1b] = uVar3;\n    uVar1 = unaff_RSI[0x1d];\n    uVar2 = unaff_RSI[0x1e];\n    uVar3 = unaff_RSI[0x1f];\n    unaff_RDI[0x1c] = unaff_RSI[0x1c];\n    unaff_RDI[0x1d] = uVar1;\n    unaff_RDI[0x1e] = uVar2;\n    unaff_RDI[0x1f] = uVar3;\n    uVar1 = unaff_RSI[0x21];\n    uVar2 = unaff_RSI[0x22];\n    uVar3 = unaff_RSI[0x23];\n    unaff_RDI[0x20] = unaff_RSI[0x20];\n    unaff_RDI[0x21] = uVar1;\n    unaff_RDI[0x22] = uVar2;\n    unaff_RDI[0x23] = uVar3;\n    uVar1 = unaff_RSI[0x25];\n    uVar2 = unaff_RSI[0x26];\n    uVar3 = unaff_RSI[0x27];\n    unaff_RDI[0x24] = unaff_RSI[0x24];\n    unaff_RDI[0x25] = uVar1;\n    unaff_RDI[0x26] = uVar2;\n    unaff_RDI[0x27] = uVar3;\n    uVar1 = unaff_RSI[0x29];\n    uVar2 = unaff_RSI[0x2a];\n    uVar3 = unaff_RSI[0x2b];\n    unaff_RDI[0x28] = unaff_RSI[0x28];\n    unaff_RDI[0x29] = uVar1;\n    unaff_RDI[0x2a] = uVar2;\n    unaff_RDI[0x2b] = uVar3;\n    uVar1 = unaff_RSI[0x2d];\n    uVar2 = unaff_RSI[0x2e];\n    uVar3 = unaff_RSI[0x2f];\n    unaff_RDI[0x2c] = unaff_RSI[0x2c];\n    unaff_RDI[0x2d] = uVar1;\n    unaff_RDI[0x2e] = uVar2;\n    unaff_RDI[0x2f] = uVar3;\n    uVar1 = unaff_RSI[0x31];\n    uVar2 = unaff_RSI[0x32];\n    uVar3 = unaff_RSI[0x33];\n    unaff_RDI[0x30] = unaff_RSI[0x30];\n    unaff_RDI[0x31] = uVar1;\n    unaff_RDI[0x32] = uVar2;\n    unaff_RDI[0x33] = uVar3;\n    uVar1 = unaff_RSI[0x35];\n    uVar2 = unaff_RSI[0x36];\n    uVar3 = unaff_RSI[0x37];\n    unaff_RDI[0x34] = unaff_RSI[0x34];\n    unaff_RDI[0x35] = uVar1;\n    unaff_RDI[0x36] = uVar2;\n    unaff_RDI[0x37] = uVar3;\n    uVar1 = unaff_RSI[0x39];\n    uVar2 = unaff_RSI[0x3a];\n    uVar3 = unaff_RSI[0x3b];\n    unaff_RDI[0x38] = unaff_RSI[0x38];\n    unaff_RDI[0x39] = uVar1;\n    unaff_RDI[0x3a] = uVar2;\n    unaff_RDI[0x3b] = uVar3;\n    uVar1 = unaff_RSI[0x3d];\n    uVar2 = unaff_RSI[0x3e];\n    uVar3 = unaff_RSI[0x3f];\n    unaff_RDI[0x3c] = unaff_RSI[0x3c];\n    unaff_RDI[0x3d] = uVar1;\n    unaff_RDI[0x3e] = uVar2;\n    unaff_RDI[0x3f] = uVar3;\n    return;\n}\n",
        "token_count": 1744
    },
    "0045e85a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045e85a(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    return;\n}\n",
        "token_count": 530
    },
    "0045e788": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045e788(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    uVar1 = unaff_RSI[0x15];\n    uVar2 = unaff_RSI[0x16];\n    uVar3 = unaff_RSI[0x17];\n    unaff_RDI[0x14] = unaff_RSI[0x14];\n    unaff_RDI[0x15] = uVar1;\n    unaff_RDI[0x16] = uVar2;\n    unaff_RDI[0x17] = uVar3;\n    uVar1 = unaff_RSI[0x19];\n    uVar2 = unaff_RSI[0x1a];\n    uVar3 = unaff_RSI[0x1b];\n    unaff_RDI[0x18] = unaff_RSI[0x18];\n    unaff_RDI[0x19] = uVar1;\n    unaff_RDI[0x1a] = uVar2;\n    unaff_RDI[0x1b] = uVar3;\n    uVar1 = unaff_RSI[0x1d];\n    uVar2 = unaff_RSI[0x1e];\n    uVar3 = unaff_RSI[0x1f];\n    unaff_RDI[0x1c] = unaff_RSI[0x1c];\n    unaff_RDI[0x1d] = uVar1;\n    unaff_RDI[0x1e] = uVar2;\n    unaff_RDI[0x1f] = uVar3;\n    uVar1 = unaff_RSI[0x21];\n    uVar2 = unaff_RSI[0x22];\n    uVar3 = unaff_RSI[0x23];\n    unaff_RDI[0x20] = unaff_RSI[0x20];\n    unaff_RDI[0x21] = uVar1;\n    unaff_RDI[0x22] = uVar2;\n    unaff_RDI[0x23] = uVar3;\n    uVar1 = unaff_RSI[0x25];\n    uVar2 = unaff_RSI[0x26];\n    uVar3 = unaff_RSI[0x27];\n    unaff_RDI[0x24] = unaff_RSI[0x24];\n    unaff_RDI[0x25] = uVar1;\n    unaff_RDI[0x26] = uVar2;\n    unaff_RDI[0x27] = uVar3;\n    uVar1 = unaff_RSI[0x29];\n    uVar2 = unaff_RSI[0x2a];\n    uVar3 = unaff_RSI[0x2b];\n    unaff_RDI[0x28] = unaff_RSI[0x28];\n    unaff_RDI[0x29] = uVar1;\n    unaff_RDI[0x2a] = uVar2;\n    unaff_RDI[0x2b] = uVar3;\n    uVar1 = unaff_RSI[0x2d];\n    uVar2 = unaff_RSI[0x2e];\n    uVar3 = unaff_RSI[0x2f];\n    unaff_RDI[0x2c] = unaff_RSI[0x2c];\n    unaff_RDI[0x2d] = uVar1;\n    unaff_RDI[0x2e] = uVar2;\n    unaff_RDI[0x2f] = uVar3;\n    uVar1 = unaff_RSI[0x31];\n    uVar2 = unaff_RSI[0x32];\n    uVar3 = unaff_RSI[0x33];\n    unaff_RDI[0x30] = unaff_RSI[0x30];\n    unaff_RDI[0x31] = uVar1;\n    unaff_RDI[0x32] = uVar2;\n    unaff_RDI[0x33] = uVar3;\n    uVar1 = unaff_RSI[0x35];\n    uVar2 = unaff_RSI[0x36];\n    uVar3 = unaff_RSI[0x37];\n    unaff_RDI[0x34] = unaff_RSI[0x34];\n    unaff_RDI[0x35] = uVar1;\n    unaff_RDI[0x36] = uVar2;\n    unaff_RDI[0x37] = uVar3;\n    uVar1 = unaff_RSI[0x39];\n    uVar2 = unaff_RSI[0x3a];\n    uVar3 = unaff_RSI[0x3b];\n    unaff_RDI[0x38] = unaff_RSI[0x38];\n    unaff_RDI[0x39] = uVar1;\n    unaff_RDI[0x3a] = uVar2;\n    unaff_RDI[0x3b] = uVar3;\n    uVar1 = unaff_RSI[0x3d];\n    uVar2 = unaff_RSI[0x3e];\n    uVar3 = unaff_RSI[0x3f];\n    unaff_RDI[0x3c] = unaff_RSI[0x3c];\n    unaff_RDI[0x3d] = uVar1;\n    unaff_RDI[0x3e] = uVar2;\n    unaff_RDI[0x3f] = uVar3;\n    uVar1 = unaff_RSI[0x41];\n    uVar2 = unaff_RSI[0x42];\n    uVar3 = unaff_RSI[0x43];\n    unaff_RDI[0x40] = unaff_RSI[0x40];\n    unaff_RDI[0x41] = uVar1;\n    unaff_RDI[0x42] = uVar2;\n    unaff_RDI[0x43] = uVar3;\n    uVar1 = unaff_RSI[0x45];\n    uVar2 = unaff_RSI[0x46];\n    uVar3 = unaff_RSI[0x47];\n    unaff_RDI[0x44] = unaff_RSI[0x44];\n    unaff_RDI[0x45] = uVar1;\n    unaff_RDI[0x46] = uVar2;\n    unaff_RDI[0x47] = uVar3;\n    uVar1 = unaff_RSI[0x49];\n    uVar2 = unaff_RSI[0x4a];\n    uVar3 = unaff_RSI[0x4b];\n    unaff_RDI[0x48] = unaff_RSI[0x48];\n    unaff_RDI[0x49] = uVar1;\n    unaff_RDI[0x4a] = uVar2;\n    unaff_RDI[0x4b] = uVar3;\n    uVar1 = unaff_RSI[0x4d];\n    uVar2 = unaff_RSI[0x4e];\n    uVar3 = unaff_RSI[0x4f];\n    unaff_RDI[0x4c] = unaff_RSI[0x4c];\n    unaff_RDI[0x4d] = uVar1;\n    unaff_RDI[0x4e] = uVar2;\n    unaff_RDI[0x4f] = uVar3;\n    return;\n}\n",
        "token_count": 2182
    },
    "0045faa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045faa0(void)\n\n{\n    int64_t in_GS_OFFSET;\n    int32_t iStackX8;\n    uchar auStack72 [24];\n    ulong uStack48;\n    ulong uStack40;\n    ulong uStack32;\n    int64_t iStack24;\n    uchar *puStack16;\n    \n    puStack16 = auStack72;\n    iStack24 = iStackX8;\n    uStack32 = *(*(**(in_GS_OFFSET + 0x28) + 0x30) + 0x328);\n    uStack48 = 0;\n    uStack40 = 0;\n    (**0x795188)(uStack32, &iStack24, 0, 0);\n    (**0x7acff8)(uStack32, 0, 0);\n    return;\n}\n",
        "token_count": 183
    },
    "0045fe20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045fe20(void)\n\n{\n    fcn.0042cee0();\n    return;\n}\n",
        "token_count": 25
    },
    "00460000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00460000(void)\n\n{\n    fcn.00450aa0(*0x7a6618);\n    return;\n}\n",
        "token_count": 31
    },
    "00460020": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00460020(void)\n\n{\n    fcn.00450aa0(*0x7a6628);\n    return;\n}\n",
        "token_count": 31
    },
    "004600c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004600c0(void)\n\n{\n    fcn.0043e560();\n    return;\n}\n",
        "token_count": 25
    },
    "00460100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00460100(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    fcn.00443060(param_1, param_2, param_3, param_4);\n    return;\n}\n",
        "token_count": 57
    },
    "00460320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00460320(void)\n\n{\n    ulong uStack24;\n    \n    fcn.0045a360();\n    return uStack24;\n}\n",
        "token_count": 34
    },
    "00460380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00460380(void)\n\n{\n    ulong uStack24;\n    \n    fcn.0045a4e0();\n    return uStack24;\n}\n",
        "token_count": 36
    },
    "004603c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004603c0(void)\n\n{\n    ulong uStack24;\n    \n    fcn.0045a640();\n    return uStack24;\n}\n",
        "token_count": 35
    },
    "00460480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00460480(ulong arg1)\n\n{\n    ulong in_RDX;\n    ulong uStack32;\n    \n    fcn.0045fbc0(arg1, in_RDX);\n    return uStack32;\n}\n",
        "token_count": 50
    },
    "00463b00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00463b00(int64_t arg1)\n\n{\n    char cVar1;\n    char cVar2;\n    int64_t in_RAX;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    int64_t iVar5;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (arg1 == 0) {\n        if (in_RAX == 0) {\n            uVar3 = fcn.00403360(unaff_RDI);\n        }\n        else {\n            uVar3 = 0;\n        }\n        return uVar3;\n    }\n    iVar4 = arg1;\n    if (arg1 != 0) {\n        iVar4 = *(arg1 + 8);\n    }\n    if (iVar4 == 0) {\n        iVar5 = 0;\n        iVar4 = 0;\n    }\n    else {\n        iVar5 = 0x7331b8;\n    }\n    cVar1 = (**(iVar5 + 0x20))(*(iVar5 + 0x20), iVar4);\n    do {\n        if (cVar1 != '\\0') {\n            if (arg1 == in_RAX) {\n                cVar2 = fcn.00403360(unaff_RDI);\n            }\n            else {\n                cVar2 = '\\0';\n            }\n            if (cVar2 != '\\0') {\n                return 1;\n            }\n        }\n        iVar4 = fcn.00409f40(unaff_RBX);\n        if ((iVar4 != 0) && (cVar2 = (**(iVar4 + 0x18))(unaff_RDI),  cVar2 != '\\0')) {\n            return 1;\n        }\n        iVar4 = fcn.00409f40(unaff_RBX);\n        if (iVar4 == 0) {\n            iVar4 = 0;\n            unaff_RBX = 0;\n        }\n        else {\n            iVar4 = (**(iVar4 + 0x18))();\n            unaff_RBX = in_RAX;\n        }\n        in_RAX = iVar4;\n    } while (iVar4 != 0);\n    return 0;\n}\n",
        "token_count": 525
    },
    "00464000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00464000(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    LOCK();\n    iVar1 = *in_RAX;\n    *in_RAX = *in_RAX + -1;\n    if (iVar1 != 1) {\n        fcn.00464060();\n    }\n    return;\n}\n",
        "token_count": 134
    },
    "00464060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00464060(void)\n\n{\n    uint32_t *in_RAX;\n    uint32_t unaff_EBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if ((unaff_EBX + 1 & 1) == 0) {\n        fcn.00459660();\n    }\n    if ((unaff_EBX >> 2 & 1) == 0) {\n        while ((unaff_EBX >> 3 != 0 && ((unaff_EBX & 7) == 0))) {\n            LOCK();\n            if (unaff_EBX == *in_RAX) {\n                *in_RAX = unaff_EBX - 8 | 2;\n                fcn.00459c80(1);\n                return;\n            }\n            unaff_EBX = *in_RAX;\n        }\n        return;\n    }\n    fcn.00459c80(1);\n    return;\n}\n",
        "token_count": 245
    },
    "00469580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00469580(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    int64_t iVar4;\n    ulong in_RAX;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x28) = 0x4695b1;\n            iVar5 = fcn.00447240(unaff_RBX);\n            arg1 = *(*0x20 + 0x10);\n            iVar4 = *(*0x20 + 8);\n            unaff_RBX = 0;\n            for (uVar6 = 0; uVar6 < arg1; uVar6 = uVar6 + 1) {\n                if (arg1 <= uVar6) goto code_r0x004696b1;\n                uVar2 = *(iVar4 + uVar6 * 2);\n                if ((uVar2 < 0xd800) || (0xdfff < uVar2)) {\n                    if (arg1 <= unaff_RBX) goto code_r0x004696a6;\n                    *(iVar5 + unaff_RBX * 4) = uVar2;\n                }\n                else {\n                    if ((uVar2 < 0xdc00) && (uVar1 = uVar6 + 1,  uVar1 < arg1)) {\n                        if (arg1 <= uVar1) goto code_r0x0046969b;\n                        uVar3 = *(iVar4 + 2 + uVar6 * 2);\n                        if ((0xdbff < uVar3) && (uVar3 < 0xe000)) {\n                            if (unaff_RBX < arg1) {\n                                *(iVar5 + unaff_RBX * 4) = ((uVar2 - 0xd800) * 0x400 | uVar3 - 0xdc00) + 0x10000;\n                                uVar6 = uVar1;\n                                goto code_r0x004695c2;\n                            }\n                            goto code_r0x00469690;\n                        }\n                    }\n                    if (arg1 <= unaff_RBX) goto code_r0x00469685;\n                    *(iVar5 + unaff_RBX * 4) = 0xfffd;\n                }\ncode_r0x004695c2:\n                unaff_RBX = unaff_RBX + 1;\n            }\n            if (unaff_RBX <= arg1) {\n                return;\n            }\n            *(*0x20 + -0x28) = 0x469685;\n            fcn.0045e2c0(unaff_RBX, arg1);\ncode_r0x00469685:\n            *(*0x20 + -0x28) = 0x469690;\n            fcn.0045e240(arg1);\ncode_r0x00469690:\n            *(*0x20 + -0x28) = 0x46969b;\n            fcn.0045e240(arg1);\ncode_r0x0046969b:\n            *(*0x20 + -0x28) = 0x4696a6;\n            fcn.0045e240(arg1);\ncode_r0x004696a6:\n            *(*0x20 + -0x28) = 0x4696b1;\n            fcn.0045e240(arg1);\ncode_r0x004696b1:\n            *(*0x20 + -0x28) = 0x4696bc;\n            in_RAX = fcn.0045e240(arg1);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x4696d1;\n        fcn.0045bb60();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1069
    },
    "0046af80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046af80(ulong arg1)\n\n{\n    uint64_t arg1_00;\n    int64_t iVar1;\n    int64_t iVar2;\n    uint64_t arg1_01;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (unaff_RBX == 0) {\n        arg1_00 = 0;\n    }\n    else {\n        iVar3 = 0;\n        arg1_00 = 0;\n        arg1_01 = 0;\n        iVar2 = 0;\n        do {\n            if (arg1_00 != 0) {\n                uVar4 = arg1_00 + 1;\n                iVar1 = iVar2;\n                if (arg1_01 < uVar4) {\n                    arg1_01 = arg1_00;\n                    iVar1 = fcn.00447360(arg1_00);\n                    uVar4 = iVar2 + 1;\n                }\n                *(iVar1 + arg1_00) = 0x20;\n                arg1_00 = uVar4;\n            }\n            iVar2 = fcn.0046aa80(arg1_01);\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < unaff_RBX);\n    }\n    fcn.0044b220(arg1_00);\n    return;\n}\n",
        "token_count": 358
    },
    "0046b0e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0046b161)\n\nulong fcn.0046b0e0(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong *in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t arg1_00;\n    uint64_t arg1_01;\n    int64_t iVar6;\n    uint64_t arg1_02;\n    uint64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t *piVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    uint64_t uVar11;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xc0 && *0x20 + -0xc0 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x140;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX == 0) {\n                *(*0x20 + -0xe0) = 0;\n                *(*0x20 + -0x148) = 0x46b147;\n                uVar2 = fcn.004693e0(2);\n                return uVar2;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            iVar6 = 0;\n            iVar10 = 0;\n            while( true ) {\n                *(*0x20 + -0xe8) = iVar6;\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x108) = iVar10;\n                uVar2 = in_RAX[1];\n                *(*0x20 + -0x110) = uVar2;\n                *(*0x20 + -0x140) = *in_RAX;\n                *(*0x20 + -0x138) = uVar2;\n                *(*0x20 + -0x130) = 0;\n                *(*0x20 + -0x148) = 0x46b1ae;\n                fcn.00402ea0(iVar6, iVar10);\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                if (*(*0x20 + -0x128) != -1) {\n                    return 0;\n                }\n                iVar6 = *(*0x20 + -0xe8) + 1;\n                iVar10 = *(*0x20 + -0x108) + *(*0x20 + -0x110) + 1;\n                if (*(*0x20 + 0x10) <= iVar6) break;\n                in_RAX = *(*0x20 + -0x10) + 0x10;\n            }\n            *(*0x20 + -0xf0) = iVar10;\n            iVar10 = *(*0x20 + -0x108) + *(*0x20 + -0x110) + 2;\n            *(*0x20 + -0x108) = iVar10;\n            *(*0x20 + -0x148) = 0x46b216;\n            uVar2 = fcn.00447240(iVar10);\n            *(*0x20 + -0x18) = uVar2;\n            arg1_02 = *(*0x20 + -0x108);\n            piVar8 = *(*0x20 + 8);\n            iVar10 = 0;\n            uVar5 = 0;\n            while( true ) {\n                iVar6 = piVar8[1];\n                iVar1 = *piVar8;\n                arg1 = uVar5 + iVar6;\n                unaff_RBX = uVar5;\n                if (arg1_02 < arg1) break;\n                if (arg1 < uVar5) {\ncode_r0x0046b44d:\n                    *(*0x20 + -0x148) = 0x46b458;\n                    fcn.0045e300(arg1);\n                    break;\n                }\n                *(*0x20 + -0xe8) = iVar10;\n                *(*0x20 + -0x10) = piVar8;\n                *(*0x20 + -0x100) = uVar5;\n                *(*0x20 + -0xf8) = arg1;\n                *(*0x20 + -0x118) = iVar6;\n                *(*0x20 + -0x148) = 0x46b2c5;\n                iVar3 = fcn.0044b3c0(iVar6);\n                iVar6 = *(*0x20 + -0x118);\n                iVar10 = iVar6;\n                if (iVar1 < iVar6) {\n                    iVar10 = iVar1;\n                }\n                uVar11 = *(*0x20 + -0xf0);\n                uVar9 = *(*0x20 + -0x100);\n                arg1_00 = *(*0x20 + -0x18);\n                if (iVar3 != (-((uVar11 - uVar9) + 1) >> 0x3f & uVar9) + arg1_00) {\n                    *(*0x20 + -0x148) = 0x46b310;\n                    fcn.0045ebc0(iVar10);\n                    iVar6 = *(*0x20 + -0x118);\n                    arg1_00 = *(*0x20 + -0x18);\n                    uVar9 = *(*0x20 + -0x100);\n                    uVar11 = *(*0x20 + -0xf0);\n                }\n                uVar5 = iVar6 + uVar9 + 1;\n                arg1_02 = *(*0x20 + -0x108);\n                arg1_01 = uVar5;\n                unaff_RBX = arg1_00;\n                if (arg1_02 < uVar5) {\ncode_r0x0046b445:\n                    *(*0x20 + -0x148) = 0x46b44d;\n                    fcn.0045e2c0(arg1_01, arg1_02);\n                    goto code_r0x0046b44d;\n                }\n                uVar4 = *(*0x20 + -0xf8);\n                if (uVar5 < uVar4) {\ncode_r0x0046b440:\n                    *(*0x20 + -0x148) = 0x46b445;\n                    fcn.0045e300(arg1_01);\n                    goto code_r0x0046b445;\n                }\n                *(*0x20 + -0x119) = 0;\n                *(*0x20 + -0x119) = 0;\n                uVar4 = uVar4 & -((uVar11 - uVar4) + 1) >> 0x3f;\n                if (*0x20 + -0x119 != uVar4 + arg1_00) {\n                    *(arg1_00 + uVar4) = *(*0x20 + -0x119);\n                }\n                iVar10 = *(*0x20 + -0xe8) + 1;\n                if (*(*0x20 + 0x10) <= iVar10) {\n                    arg1_01 = iVar6 + uVar9 + 2;\n                    if (arg1_01 <= arg1_02) {\n                        if (uVar5 <= arg1_01) {\n                            *(*0x20 + -0x119) = 0;\n                            *(*0x20 + -0x119) = 0;\n                            uVar11 = uVar11 - uVar5;\n                            uVar5 = uVar5 & -(uVar11 + 1) >> 0x3f;\n                            if (*0x20 + -0x119 != uVar5 + arg1_00) {\n                                *(arg1_00 + uVar5) = *(*0x20 + -0x119);\n                            }\n                            *(*0x20 + -0x148) = 0x46b3e8;\n                            unaff_RBX = fcn.0044b220(arg1_02);\n                            *(*0x20 + -0x148) = 0x46b3fb;\n                            fcn.0044b4a0(arg1_00);\n                            *(*0x20 + -0x148) = 0x46b405;\n                            uVar2 = fcn.004693e0(arg1_00);\n                            if (unaff_RBX != 0) {\n                                return uVar2;\n                            }\n                            *(*0x20 + -0x148) = 0x46b428;\n                            fcn.0045e240(0);\n                        }\n                        *(*0x20 + -0x148) = 0x46b433;\n                        fcn.0045e300(arg1_01);\n                    }\n                    *(*0x20 + -0x148) = 0x46b43e;\n                    fcn.0045e2c0(arg1_01, arg1_02);\n                    arg1 = uVar11;\n                    goto code_r0x0046b440;\n                }\n                piVar8 = *(*0x20 + -0x10) + 0x10;\n            }\n            *(*0x20 + -0x148) = 0x46b465;\n            in_RAX = fcn.0045e2c0(arg1, arg1_02);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x46b47a;\n        fcn.0045bb60();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 2275
    },
    "0046ca80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046ca80(ulong arg1)\n\n{\n    ulong in_RAX;\n    ulong uVar1;\n    ulong in_RDX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    int64_t iStack184;\n    uchar auStack80 [72];\n    \n    while (auStack80 < *(unaff_R14 + 0x10) || auStack80 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00402ea0(arg1, in_RDX);\n    if (iStack184 != -1) {\n        return 0;\n    }\n    fcn.0044ae80(unaff_RBX);\n    fcn.0044b4a0(in_RAX);\n    uVar1 = fcn.004693e0(in_RAX);\n    return uVar1;\n}\n",
        "token_count": 195
    },
    "0046cb80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046cb80(ulong arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t arg1_00;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    for (iVar1 = 0; (arg1_00 = unaff_RBX,  iVar1 < unaff_RBX && (arg1_00 = iVar1,  *(in_RAX + iVar1 * 2) != 0));\n        iVar1 = iVar1 + 1) {\n    }\n    fcn.00469580(arg1);\n    fcn.0044b660(arg1_00);\n    return;\n}\n",
        "token_count": 199
    },
    "0046d2a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0046d2a0(ulong arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    iVar1 = fcn.0046ff40(arg1, arg2, 0);\n    if (iVar1 != 0) {\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 128
    },
    "0046d760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046d760(ulong arg1, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    ulong in_R10;\n    ulong in_R11;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x48 && *0x20 + -0x48 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -200;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x40) = noname_2;\n            *(*0x20 + 0x44) = arg4;\n            *(*0x20 + -0x58) = in_RAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + -0x20) = unaff_RDI;\n            *(*0x20 + -0x28) = unaff_RSI;\n            *(*0x20 + -0x30) = in_R10;\n            *(*0x20 + -0x38) = in_R11;\n            *(*0x20 + -0x40) = *(*0x20 + 8);\n            *(*0x20 + -0x48) = *(*0x20 + 0x10);\n            *(*0x20 + -0x50) = *0x7ad210;\n            *(*0x20 + -0xd0) = 0x46d805;\n            arg1 = *0x7ad210;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                uVar3 = *(*(*(*0x20 + -0x50) + 0x20) + 0x18);\n                *(*0x20 + -200) = *(*0x20 + -0x30);\n                *(*0x20 + -0xc0) = *(*0x20 + -0x38);\n                *(*0x20 + -0xb8) = *(*0x20 + -0x40);\n                *(*0x20 + -0xb0) = *(*0x20 + -0x48);\n                *(*0x20 + -0xa8) = 0;\n                iVar1 = *(*0x20 + -0x58);\n                *(*0x20 + -0xd0) = 0x46d8a5;\n                iVar2 = fcn.0045a900(iVar1, uVar3, *(*0x20 + -0x20), *(*0x20 + -0x28));\n                if (iVar2 == 0) {\n                    uVar3 = *0x7a6710;\n                    if ((iVar1 != 0) && (uVar3 = *0x7a6720,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0xd0) = 0x46d8e5;\n                        fcn.00409d60();\n                        uVar3 = 0x732cf8;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0xd0) = 0x46d916;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar4 + 0x18) = in_RAX;\n        *(puVar4 + 0x20) = unaff_RBX;\n        *(puVar4 + 0x28) = arg1;\n        *(puVar4 + 0x30) = unaff_RDI;\n        *(puVar4 + 0x38) = unaff_RSI;\n        puVar4[0x40] = noname_2;\n        *(puVar4 + 0x44) = arg4;\n        *(puVar4 + 0x48) = in_R10;\n        *(puVar4 + 0x50) = in_R11;\n        *(puVar4 + -8) = 0x46d949;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 0x18);\n        unaff_RBX = *(puVar4 + 0x20);\n        arg1 = *(puVar4 + 0x28);\n        unaff_RDI = *(puVar4 + 0x30);\n        unaff_RSI = *(puVar4 + 0x38);\n        noname_2._0_1_ = puVar4[0x40];\n        arg4._0_4_ = *(puVar4 + 0x44);\n        in_R10 = *(puVar4 + 0x48);\n        in_R11 = *(puVar4 + 0x50);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1172
    },
    "0046d980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046d980(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x7ad478;\n            *(*0x20 + -0x48) = 0x46d9b2;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x48) = 0x46d9d8;\n                iVar1 = fcn.0045a7a0(*(*0x20 + -0x18));\n                if (iVar1 == 0) {\n                    uVar2 = 0;\n                }\n                else {\n                    *(*0x20 + -0x48) = 0x46d9e8;\n                    fcn.00409d60();\n                    uVar2 = 0x732cf8;\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x48) = 0x46da0b;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x46da16;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 454
    },
    "0046da40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046da40(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uint unaff_EBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    ulong in_R10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x20 && *0x20 + -0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0xa0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + -0x48) = in_RAX;\n            *(*0x20 + -0x10) = arg1;\n            *(*0x20 + -0x18) = unaff_RDI;\n            *(*0x20 + -0x20) = unaff_RSI;\n            *(*0x20 + -0x28) = arg3;\n            *(*0x20 + -0x30) = arg4;\n            *(*0x20 + -0x38) = in_R10;\n            *(*0x20 + -0x40) = *0x7ad480;\n            *(*0x20 + -0xa8) = 0x46daae;\n            arg1 = *0x7ad480;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                *(*0x20 + -0xa0) = *(*0x20 + -0x38);\n                *(*0x20 + -0x98) = 0;\n                *(*0x20 + -0xa8) = 0x46db10;\n                iVar1 = fcn.0045a860(*(*0x20 + -0x48), *(*0x20 + 0x10), *(*0x20 + -0x18), *(*0x20 + -0x20));\n                if (iVar1 == 0) {\n                    uVar2 = 0;\n                }\n                else {\n                    *(*0x20 + -0xa8) = 0x46db25;\n                    fcn.00409d60();\n                    uVar2 = 0x732cf8;\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0xa8) = 0x46db4d;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + 0x28) = unaff_RSI;\n        *(puVar3 + 0x30) = arg3;\n        *(puVar3 + 0x38) = arg4;\n        *(puVar3 + 0x40) = in_R10;\n        *(puVar3 + -8) = 0x46db7a;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        unaff_RSI = *(puVar3 + 0x28);\n        arg3 = *(puVar3 + 0x30);\n        arg4 = *(puVar3 + 0x38);\n        in_R10 = *(puVar3 + 0x40);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 908
    },
    "0046dbc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046dbc0(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    uint unaff_EDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x1c) = unaff_EDI;\n            *(*0x20 + -0x28) = in_RAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = unaff_RSI;\n            *(*0x20 + -0x20) = *0x7ad488;\n            *(*0x20 + -0x70) = 0x46dc0a;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                uVar2 = *(*(*0x20 + -0x20) + 0x20);\n                *(*0x20 + -0x70) = 0x46dc4e;\n                iVar1 = fcn.0045a800(*(*0x20 + -0x28), uVar2, *(*0x20 + 0x1c), *(*0x20 + -0x18));\n                if (iVar1 == 0) {\n                    uVar2 = 0;\n                }\n                else {\n                    *(*0x20 + -0x70) = 0x46dc5e;\n                    fcn.00409d60();\n                    uVar2 = 0x732cf8;\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x70) = 0x46dc85;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x1c) = unaff_EDI;\n        *(puVar3 + 0x20) = unaff_RSI;\n        *(puVar3 + -8) = 0x46dca5;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x18);\n        unaff_EDI = *(puVar3 + 0x1c);\n        unaff_RSI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 722
    },
    "0046dce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046dce0(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x40) = in_RAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + -0x20) = unaff_RDI;\n            *(*0x20 + -0x28) = unaff_RSI;\n            *(*0x20 + -0x30) = arg3;\n            *(*0x20 + -0x38) = *0x7ad498;\n            *(*0x20 + -0x88) = 0x46dd2b;\n            arg1 = *0x7ad498;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                uVar2 = *(*(*0x20 + -0x38) + 0x20);\n                *(*0x20 + -0x88) = 0x46dd65;\n                iVar1 = fcn.0045a800(*(*0x20 + -0x40), uVar2, *(*0x20 + -0x20), *(*0x20 + -0x28));\n                if (iVar1 == 0) {\n                    uVar2 = 0;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x46dd75;\n                    fcn.00409d60();\n                    uVar2 = 0x732cf8;\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x88) = 0x46dd97;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + 0x28) = unaff_RSI;\n        *(puVar3 + 0x30) = arg3;\n        *(puVar3 + -8) = 0x46ddbb;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        unaff_RSI = *(puVar3 + 0x28);\n        arg3 = *(puVar3 + 0x30);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 776
    },
    "0046dee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046dee0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x7ad1b8;\n            *(*0x20 + -0x48) = 0x46df12;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x48) = 0x46df38;\n                iVar2 = fcn.0045a7a0(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x7a6710;\n                    if ((iVar1 != 0) && (uVar3 = *0x7a6720,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x48) = 0x46df76;\n                        fcn.00409d60();\n                        uVar3 = 0x732cf8;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x48) = 0x46dfa5;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x46dfb0;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 514
    },
    "0046dfc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0046dfc0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    uint unaff_EBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint unaff_ESI;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + 0x14) = arg1;\n            *(*0x20 + 0x20) = unaff_ESI;\n            *(*0x20 + 0x24) = arg3;\n            *(*0x20 + 0x28) = arg4;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = unaff_RDI;\n            *(*0x20 + -0x20) = *0x7ad1f0;\n            *(*0x20 + -0x88) = 0x46e019;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x80) = in_XMM15;\n                *(*0x20 + -0x88) = 0x46e07f;\n                iVar2 = fcn.0045a860(iVar1, *(*0x20 + 0x28), *(*0x20 + -0x18), *(*0x20 + 0x20));\n                if (((iVar2 == -1) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x28) = 0xffffffffffffffff;\n                    *(*0x20 + -0x88) = 0x46e0c6;\n                    fcn.00409d60();\n                    iVar2 = *(*0x20 + -0x28);\n                }\n                return iVar2;\n            }\n            *(*0x20 + -0x88) = 0x46e0f6;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + 0x14) = arg1;\n        *(puVar3 + 0x18) = unaff_RDI;\n        *(puVar3 + 0x20) = unaff_ESI;\n        *(puVar3 + 0x24) = arg3;\n        *(puVar3 + 0x28) = arg4;\n        *(puVar3 + -8) = 0x46e11c;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x14);\n        unaff_RDI = *(puVar3 + 0x18);\n        unaff_ESI = *(puVar3 + 0x20);\n        arg3._0_4_ = *(puVar3 + 0x24);\n        arg4._0_4_ = *(puVar3 + 0x28);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 880
    },
    "0046e160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046e160(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint unaff_EDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_EDI;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = unaff_RBX;\n            *(*0x20 + -0x20) = arg1;\n            *(*0x20 + -0x28) = *0x7ad208;\n            *(*0x20 + -0x70) = 0x46e1a5;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                uVar3 = *(*(*0x20 + -0x28) + 0x20);\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x70) = 0x46e1e5;\n                iVar2 = fcn.0045a800(iVar1, uVar3, *(*0x20 + 0x20), 0);\n                if (iVar2 == 0) {\n                    uVar3 = *0x7a6710;\n                    if ((iVar1 != 0) && (uVar3 = *0x7a6720,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x70) = 0x46e225;\n                        fcn.00409d60();\n                        uVar3 = 0x732cf8;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x70) = 0x46e250;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_EDI;\n        *(puVar4 + -8) = 0x46e269;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_EDI = *(puVar4 + 0x20);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 713
    },
    "0046e2a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046e2a0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uchar unaff_SIL;\n    ulong unaff_RDI;\n    ulong in_R10;\n    ulong in_R11;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x40 && *0x20 + -0x40 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0xc0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x30) = unaff_SIL;\n            *(*0x20 + 0x34) = arg3;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = unaff_RBX;\n            *(*0x20 + -0x20) = arg1;\n            *(*0x20 + -0x28) = unaff_RDI;\n            *(*0x20 + -0x30) = arg4;\n            *(*0x20 + -0x38) = in_R10;\n            *(*0x20 + -0x40) = in_R11;\n            arg1 = *(*0x20 + 8);\n            *(*0x20 + -0x48) = arg1;\n            *(*0x20 + -0x50) = *0x7ad218;\n            *(*0x20 + -200) = 0x46e32d;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0xc0) = *(*0x20 + -0x38);\n                *(*0x20 + -0xb8) = *(*0x20 + -0x40);\n                *(*0x20 + -0xb0) = *(*0x20 + -0x48);\n                *(*0x20 + -0xa8) = in_XMM15;\n                *(*0x20 + -200) = 0x46e3b4;\n                iVar2 = fcn.0045a900(iVar1, *(*0x20 + 0x34), *(*0x20 + -0x28), *(*0x20 + 0x30));\n                if (iVar2 == 0) {\n                    uVar3 = *0x7a6710;\n                    if ((iVar1 != 0) && (uVar3 = *0x7a6720,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -200) = 0x46e3ef;\n                        fcn.00409d60();\n                        uVar3 = 0x732cf8;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -200) = 0x46e425;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar4 + 0x10) = in_RAX;\n        *(puVar4 + 0x18) = unaff_RBX;\n        *(puVar4 + 0x20) = arg1;\n        *(puVar4 + 0x28) = unaff_RDI;\n        puVar4[0x30] = unaff_SIL;\n        *(puVar4 + 0x34) = arg3;\n        *(puVar4 + 0x38) = arg4;\n        *(puVar4 + 0x40) = in_R10;\n        *(puVar4 + 0x48) = in_R11;\n        *(puVar4 + -8) = 0x46e458;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 0x10);\n        unaff_RBX = *(puVar4 + 0x18);\n        arg1 = *(puVar4 + 0x20);\n        unaff_RDI = *(puVar4 + 0x28);\n        unaff_SIL = puVar4[0x30];\n        arg3._0_4_ = *(puVar4 + 0x34);\n        arg4 = *(puVar4 + 0x38);\n        in_R10 = *(puVar4 + 0x40);\n        in_R11 = *(puVar4 + 0x48);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1097
    },
    "0046e4a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046e4a0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = *0x7ad250;\n            *(*0x20 + -0x48) = 0x46e4cb;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x48) = 0x46e4f1;\n                fcn.0045a7a0(*(*0x20 + -0x10));\n                return;\n            }\n            *(*0x20 + -0x48) = 0x46e506;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x46e511;\n        fcn.0045bb60();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 375
    },
    "0046e520": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046e520(ulong arg1, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint unaff_ESI;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x28) = unaff_ESI;\n            *(*0x20 + 0x2c) = noname_2;\n            *(*0x20 + 0x30) = arg4;\n            *(*0x20 + -0x20) = arg1;\n            *(*0x20 + -0x28) = in_RAX;\n            *(*0x20 + -0x30) = unaff_RBX;\n            *(*0x20 + -0x10) = unaff_RDI;\n            *(*0x20 + -0x18) = *0x7ad278;\n            *(*0x20 + -0x90) = 0x46e586;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x88) = in_XMM15;\n                iVar1 = *(*0x20 + -0x28);\n                *(*0x20 + -0x90) = 0x46e5df;\n                iVar2 = fcn.0045a860(iVar1, *(*0x20 + 0x30), *(*0x20 + -0x10), *(*0x20 + 0x28));\n                if (iVar2 == 0) {\n                    uVar3 = *0x7a6710;\n                    if ((iVar1 != 0) && (uVar3 = *0x7a6720,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x90) = 0x46e625;\n                        fcn.00409d60();\n                        uVar3 = 0x732cf8;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x90) = 0x46e656;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + 0x28) = unaff_ESI;\n        puVar4[0x2c] = noname_2;\n        *(puVar4 + 0x30) = arg4;\n        *(puVar4 + -8) = 0x46e67e;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_ESI = *(puVar4 + 0x28);\n        noname_2._0_1_ = puVar4[0x2c];\n        arg4._0_4_ = *(puVar4 + 0x30);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 910
    },
    "0046e6c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046e6c0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x7ad288;\n            *(*0x20 + -0x48) = 0x46e6f2;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x48) = 0x46e718;\n                iVar2 = fcn.0045a7a0(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x7a6710;\n                    if ((iVar1 != 0) && (uVar3 = *0x7a6720,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x48) = 0x46e756;\n                        fcn.00409d60();\n                        uVar3 = 0x732cf8;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x48) = 0x46e785;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x46e790;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 515
    },
    "0046e7a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0046e7a0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = unaff_RBX;\n            *(*0x20 + -0x20) = *0x7ad290;\n            *(*0x20 + -0x58) = 0x46e7d4;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x58) = 0x46e805;\n                iVar2 = fcn.0045a7a0(iVar1);\n                if (((iVar2 == -1) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x28) = 0xffffffffffffffff;\n                    *(*0x20 + -0x58) = 0x46e848;\n                    fcn.00409d60();\n                    iVar2 = *(*0x20 + -0x28);\n                }\n                return iVar2;\n            }\n            *(*0x20 + -0x58) = 0x46e878;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x46e888;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 543
    },
    "0046e8a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046e8a0(ulong arg1, ulong noname_1, int64_t arg3, ulong arg4)\n\n{\n    uint in_EAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uint64_t arg1_00;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    uint unaff_EDI;\n    ulong in_R10;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RSI;\n            *(*0x20 + 8) = in_EAX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x1c) = unaff_EDI;\n            *(*0x20 + 0x28) = arg3;\n            *(*0x20 + -0x28) = unaff_RBX;\n            if (arg3 == 0) {\n                unaff_RSI = 0;\n            }\n            *(*0x20 + -0x10) = unaff_RSI;\n            *(*0x20 + -0x18) = in_R10;\n            *(*0x20 + -0x20) = *0x7ad2b0;\n            *(*0x20 + -0x90) = 0x46e913;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x88) = in_XMM15;\n                arg1_00 = *(*0x20 + 8);\n                *(*0x20 + -0x90) = 0x46e96b;\n                uVar2 = fcn.0045a860(arg1_00, *(*0x20 + 0x1c), *(*0x20 + 0x1c), *(*0x20 + -0x10));\n                if (((uVar2 == 0) && (arg1_00 != 0)) && (arg1_00 != 0x3e5)) {\n                    *(*0x20 + -0x30) = uVar2;\n                    *(*0x20 + -0x90) = 0x46e9aa;\n                    fcn.00409d60();\n                    uVar2 = *(*0x20 + -0x30);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x90) = 0x46e9e5;\n            in_EAX = fcn.004334e0();\n        }\n        *(puVar3 + 8) = in_EAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x1c) = unaff_EDI;\n        *(puVar3 + 0x20) = unaff_RSI;\n        *(puVar3 + 0x28) = arg3;\n        *(puVar3 + 0x30) = arg4;\n        *(puVar3 + 0x38) = in_R10;\n        *(puVar3 + -8) = 0x46ea10;\n        fcn.0045bb60();\n        in_EAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x18);\n        unaff_EDI = *(puVar3 + 0x1c);\n        unaff_RSI = *(puVar3 + 0x20);\n        arg3 = *(puVar3 + 0x28);\n        arg4 = *(puVar3 + 0x30);\n        in_R10 = *(puVar3 + 0x38);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 970
    },
    "0046ea40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046ea40(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = *0x7ad2c0;\n            *(*0x20 + -0x48) = 0x46ea6f;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x48) = 0x46ea95;\n                iVar2 = fcn.0045a7a0(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x7a6710;\n                    if ((iVar1 != 0) && (uVar3 = *0x7a6720,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x48) = 0x46ead0;\n                        fcn.00409d60();\n                        uVar3 = 0x732cf8;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x48) = 0x46eafb;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x46eb06;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 514
    },
    "0046eb20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046eb20(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = *0x7ad2e8;\n            *(*0x20 + -0x40) = 0x46eb46;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x40) = 0x46eb68;\n                fcn.0045a7a0(0);\n                return;\n            }\n            *(*0x20 + -0x40) = 0x46eb7d;\n            fcn.004334e0();\n        }\n        *(puVar2 + -8) = 0x46eb85;\n        fcn.0045bb60();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 312
    },
    "0046eca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0046eca0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = *0x7ad308;\n            *(*0x20 + -0x48) = 0x46ecca;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                iVar2 = 0;\n                *(*0x20 + -0x48) = 0x46ecf0;\n                iVar1 = fcn.0045a7a0(0);\n                if (((iVar1 == 0) && (iVar2 != 0)) && (iVar2 != 0x3e5)) {\n                    *(*0x20 + -0x18) = 0;\n                    *(*0x20 + -0x48) = 0x46ed30;\n                    fcn.00409d60();\n                    iVar1 = *(*0x20 + -0x18);\n                }\n                return iVar1;\n            }\n            *(*0x20 + -0x48) = 0x46ed65;\n            fcn.004334e0();\n        }\n        *(puVar3 + -8) = 0x46ed6b;\n        fcn.0045bb60();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 421
    },
    "0046ed80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0046ed80(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = *0x7ad318;\n            *(*0x20 + -0x48) = 0x46edaa;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                iVar2 = 0;\n                *(*0x20 + -0x48) = 0x46edd0;\n                iVar1 = fcn.0045a7a0(0);\n                if (((iVar1 == 0) && (iVar2 != 0)) && (iVar2 != 0x3e5)) {\n                    *(*0x20 + -0x10) = 0;\n                    *(*0x20 + -0x48) = 0x46ee1b;\n                    fcn.00409d60();\n                    iVar1 = *(*0x20 + -0x10);\n                }\n                return iVar1;\n            }\n            *(*0x20 + -0x48) = 0x46ee45;\n            fcn.004334e0();\n        }\n        *(puVar3 + -8) = 0x46ee4b;\n        fcn.0045bb60();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 421
    },
    "0046ee60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046ee60(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = unaff_RBX;\n            *(*0x20 + -0x20) = *0x7ad320;\n            *(*0x20 + -0x58) = 0x46ee98;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x58) = 0x46eed2;\n                uVar2 = fcn.0045a7a0(iVar1);\n                if (((uVar2 == 0) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x28) = uVar2;\n                    *(*0x20 + -0x58) = 0x46ef11;\n                    fcn.00409d60();\n                    uVar2 = *(*0x20 + -0x28);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x58) = 0x46ef45;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x46ef59;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 591
    },
    "0046f280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046f280(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uint unaff_EBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + -0x20) = unaff_RDI;\n            *(*0x20 + -0x28) = *0x7ad350;\n            *(*0x20 + -0x78) = 0x46f2c5;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                uVar2 = *(*(*0x20 + -0x28) + 0x20);\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x78) = 0x46f305;\n                uVar2 = fcn.0045a800(iVar1, uVar2, *(*0x20 + -0x20), 0);\n                if (((uVar2 == 0) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x30) = uVar2;\n                    *(*0x20 + -0x78) = 0x46f346;\n                    fcn.00409d60();\n                    uVar2 = *(*0x20 + -0x30);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x78) = 0x46f376;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + -8) = 0x46f38f;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 683
    },
    "0046f6c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046f6c0(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uint unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + 0x14) = arg1;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = unaff_RDI;\n            *(*0x20 + -0x20) = *0x7ad3e8;\n            *(*0x20 + -0x68) = 0x46f6fc;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                uVar3 = *(*(*0x20 + -0x20) + 0x20);\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x68) = 0x46f745;\n                iVar2 = fcn.0045a800(iVar1, uVar3, *(*0x20 + -0x18), 0);\n                if (iVar2 == 0) {\n                    uVar3 = *0x7a6710;\n                    if ((iVar1 != 0) && (uVar3 = *0x7a6720,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x68) = 0x46f785;\n                        fcn.00409d60();\n                        uVar3 = 0x732cf8;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x68) = 0x46f7b0;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + 0x14) = arg1;\n        *(puVar4 + 0x18) = unaff_RDI;\n        *(puVar4 + -8) = 0x46f7c8;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        arg1._0_4_ = *(puVar4 + 0x14);\n        unaff_RDI = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 723
    },
    "0046f920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046f920(int64_t arg1, ulong noname_1, ulong arg3)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x30) = in_RAX;\n            if (arg1 == 0) {\n                unaff_RBX = 0;\n            }\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = unaff_RSI;\n            *(*0x20 + -0x20) = arg3;\n            *(*0x20 + -0x28) = *0x7ad470;\n            *(*0x20 + -0x78) = 0x46f975;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                uVar3 = *(*(*0x20 + -0x28) + 0x20);\n                iVar1 = *(*0x20 + -0x30);\n                *(*0x20 + -0x78) = 0x46f9b4;\n                iVar2 = fcn.0045a800(iVar1, uVar3, *(*0x20 + -0x18), *(*0x20 + -0x20));\n                if (iVar2 == 0) {\n                    uVar3 = *0x7a6710;\n                    if ((iVar1 != 0) && (uVar3 = *0x7a6720,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x78) = 0x46f9ef;\n                        fcn.00409d60();\n                        uVar3 = 0x732cf8;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x78) = 0x46fa1a;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + 0x30) = arg3;\n        *(puVar4 + -8) = 0x46fa3e;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        arg3 = *(puVar4 + 0x30);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 854
    },
    "0046fa80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046fa80(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uchar unaff_BL;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_BL;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x7ad4d0;\n            *(*0x20 + -0x48) = 0x46fab6;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x48) = 0x46fae7;\n                iVar2 = fcn.0045a7a0(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x7a6710;\n                    if ((iVar1 != 0) && (uVar3 = *0x7a6720,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x48) = 0x46fb25;\n                        fcn.00409d60();\n                        uVar3 = 0x732cf8;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x48) = 0x46fb50;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        puVar4[0x10] = unaff_BL;\n        *(puVar4 + -8) = 0x46fb5f;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_BL = puVar4[0x10];\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 564
    },
    "0046fb80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046fb80(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uint unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x7ad4f8;\n            *(*0x20 + -0x48) = 0x46fbb6;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x48) = 0x46fbe5;\n                iVar2 = fcn.0045a7a0(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x7a6710;\n                    if ((iVar1 != 0) && (uVar3 = *0x7a6720,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x48) = 0x46fc25;\n                        fcn.00409d60();\n                        uVar3 = 0x732cf8;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x48) = 0x46fc50;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + -8) = 0x46fc5f;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 572
    },
    "0046fc80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046fc80(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uint unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x18 && *0x20 + -0x18 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x98;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + -0x38) = arg1;\n            *(*0x20 + -0x40) = unaff_RSI;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = unaff_RDI;\n            *(*0x20 + -0x20) = arg3;\n            *(*0x20 + -0x28) = arg4;\n            *(*0x20 + -0x30) = *0x7ad518;\n            *(*0x20 + -0xa0) = 0x46fce5;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x98) = in_XMM15;\n                *(*0x20 + -0xa0) = 0x46fd37;\n                iVar2 = fcn.0045a860(iVar1, *(*0x20 + 0x10), *(*0x20 + -0x18), *(*0x20 + -0x40));\n                if (iVar2 == 0) {\n                    uVar3 = *0x7a6710;\n                    if ((iVar1 != 0) && (uVar3 = *0x7a6720,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0xa0) = 0x46fd76;\n                        fcn.00409d60();\n                        uVar3 = 0x732cf8;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0xa0) = 0x46fda7;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + 0x30) = arg3;\n        *(puVar4 + 0x38) = arg4;\n        *(puVar4 + -8) = 0x46fdcf;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        arg3 = *(puVar4 + 0x30);\n        arg4 = *(puVar4 + 0x38);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 896
    },
    "0046fe00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046fe00(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x30) = in_RAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = unaff_RDI;\n            *(*0x20 + -0x20) = unaff_RSI;\n            *(*0x20 + -0x28) = *0x7ad578;\n            *(*0x20 + -0x78) = 0x46fe48;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                uVar3 = *(*(*0x20 + -0x28) + 0x20);\n                iVar1 = *(*0x20 + -0x30);\n                *(*0x20 + -0x78) = 0x46fe8a;\n                iVar2 = fcn.0045a800(iVar1, uVar3, *(*0x20 + -0x18), *(*0x20 + -0x20));\n                if (iVar2 == 0) {\n                    uVar3 = *0x7a6710;\n                    if ((iVar1 != 0) && (uVar3 = *0x7a6720,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x78) = 0x46fec5;\n                        fcn.00409d60();\n                        uVar3 = 0x732cf8;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x78) = 0x46fef0;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + -8) = 0x46ff0e;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1._0_4_ = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 780
    },
    "0046ff40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046ff40(int64_t arg1, ulong noname_1, ulong arg3)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x30) = in_RAX;\n            if (arg1 == 0) {\n                unaff_RBX = 0;\n            }\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = unaff_RSI;\n            *(*0x20 + -0x20) = arg3;\n            *(*0x20 + -0x28) = *0x7ad580;\n            *(*0x20 + -0x78) = 0x46ff95;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                uVar3 = *(*(*0x20 + -0x28) + 0x20);\n                iVar1 = *(*0x20 + -0x30);\n                *(*0x20 + -0x78) = 0x46ffd4;\n                iVar2 = fcn.0045a800(iVar1, uVar3, *(*0x20 + -0x18), *(*0x20 + -0x20));\n                if (iVar2 == 0) {\n                    uVar3 = *0x7a6710;\n                    if ((iVar1 != 0) && (uVar3 = *0x7a6720,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x78) = 0x47000f;\n                        fcn.00409d60();\n                        uVar3 = 0x732cf8;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x78) = 0x47003a;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + 0x30) = arg3;\n        *(puVar4 + -8) = 0x47005e;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        arg3 = *(puVar4 + 0x30);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 849
    },
    "004700a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004700a0(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = in_RAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + -0x28) = *0x7ad4a8;\n            *(*0x20 + -0x58) = 0x4700d5;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x58) = 0x470105;\n                fcn.0045a7a0(*(*0x20 + -0x20));\n                return;\n            }\n            *(*0x20 + -0x58) = 0x47011a;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x47012f;\n        fcn.0045bb60();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 476
    },
    "00470280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00470280(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uint unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    uint unaff_EDI;\n    ulong in_R10;\n    ulong in_R11;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x18 && *0x20 + -0x18 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x98;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + 0x20) = unaff_EDI;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + -0x38) = in_R11;\n            *(*0x20 + -0x40) = in_RAX;\n            *(*0x20 + -0x10) = arg1;\n            *(*0x20 + -0x18) = unaff_RSI;\n            *(*0x20 + -0x20) = arg4;\n            *(*0x20 + -0x28) = in_R10;\n            *(*0x20 + -0x30) = *0x7ad540;\n            *(*0x20 + -0xa0) = 0x4702f5;\n            arg1 = *0x7ad540;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x98) = *(*0x20 + -0x28);\n                *(*0x20 + -0x90) = *(*0x20 + -0x38);\n                iVar1 = *(*0x20 + -0x40);\n                *(*0x20 + -0xa0) = 0x47035f;\n                iVar2 = fcn.0045a860(iVar1, *(*0x20 + 0x30), *(*0x20 + 0x20), *(*0x20 + -0x18));\n                if (iVar2 == 0xffffffff) {\n                    uVar3 = *0x7a6710;\n                    if ((iVar1 != 0) && (uVar3 = *0x7a6720,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0xa0) = 0x4703a5;\n                        fcn.00409d60();\n                        uVar3 = 0x732cf8;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0xa0) = 0x4703d6;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_EDI;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + 0x30) = arg3;\n        *(puVar4 + 0x38) = arg4;\n        *(puVar4 + 0x40) = in_R10;\n        *(puVar4 + 0x48) = in_R11;\n        *(puVar4 + -8) = 0x470407;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_EDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        arg3._0_4_ = *(puVar4 + 0x30);\n        arg4 = *(puVar4 + 0x38);\n        in_R10 = *(puVar4 + 0x40);\n        in_R11 = *(puVar4 + 0x48);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1037
    },
    "00470440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00470440(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x18 && *0x20 + -0x18 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x98;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x40) = in_RAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = unaff_RDI;\n            *(*0x20 + -0x20) = unaff_RSI;\n            *(*0x20 + -0x28) = arg3;\n            *(*0x20 + -0x30) = arg4;\n            *(*0x20 + -0x38) = *0x7ad548;\n            *(*0x20 + -0xa0) = 0x4704a6;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x98) = in_XMM15;\n                iVar1 = *(*0x20 + -0x40);\n                *(*0x20 + -0xa0) = 0x4704f8;\n                iVar2 = fcn.0045a860(iVar1, *(*0x20 + 0x18), *(*0x20 + -0x18), *(*0x20 + -0x20));\n                if (iVar2 == 0xffffffff) {\n                    uVar3 = *0x7a6710;\n                    if ((iVar1 != 0) && (uVar3 = *0x7a6720,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0xa0) = 0x470545;\n                        fcn.00409d60();\n                        uVar3 = 0x732cf8;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0xa0) = 0x470576;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + 0x30) = arg3;\n        *(puVar4 + 0x38) = arg4;\n        *(puVar4 + -8) = 0x47059e;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1._0_4_ = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        arg3 = *(puVar4 + 0x30);\n        arg4 = *(puVar4 + 0x38);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 900
    },
    "004705e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004705e0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint unaff_ESI;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x28) = unaff_ESI;\n            *(*0x20 + -0x38) = in_RAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = unaff_RDI;\n            *(*0x20 + -0x20) = arg3;\n            *(*0x20 + -0x28) = arg4;\n            *(*0x20 + -0x30) = *0x7ad558;\n            *(*0x20 + -0x98) = 0x470645;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x90) = in_XMM15;\n                iVar1 = *(*0x20 + -0x38);\n                *(*0x20 + -0x98) = 0x470699;\n                iVar2 = fcn.0045a860(iVar1, *(*0x20 + 0x28), *(*0x20 + -0x18), *(*0x20 + 0x28));\n                if (iVar2 == 0xffffffff) {\n                    uVar3 = *0x7a6710;\n                    if ((iVar1 != 0) && (uVar3 = *0x7a6720,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x98) = 0x4706e5;\n                        fcn.00409d60();\n                        uVar3 = 0x732cf8;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x98) = 0x470716;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + 0x28) = unaff_ESI;\n        *(puVar4 + 0x30) = arg3;\n        *(puVar4 + 0x38) = arg4;\n        *(puVar4 + -8) = 0x47073d;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1._0_4_ = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_ESI = *(puVar4 + 0x28);\n        arg3 = *(puVar4 + 0x30);\n        arg4 = *(puVar4 + 0x38);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 899
    },
    "00470780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00470780(void)\n\n{\n    uint in_EAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_EAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = *0x7ad568;\n            *(*0x20 + -0x48) = 0x4707b6;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x48) = 0x4707e5;\n                iVar1 = fcn.0045a7a0(*(*0x20 + 8));\n                if (iVar1 == 0) {\n                    uVar2 = 0;\n                }\n                else {\n                    *(*0x20 + -0x48) = 0x4707f5;\n                    fcn.00409d60();\n                    uVar2 = 0x732cf8;\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x48) = 0x470817;\n            in_EAX = fcn.004334e0();\n        }\n        *(puVar3 + 8) = in_EAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x470826;\n        fcn.0045bb60();\n        in_EAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 500
    },
    "004757c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004757c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0046d980();\n    return;\n}\n",
        "token_count": 82
    },
    "00475800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00475800(int64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        iVar1 = arg1;\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x1c) = unaff_RDI;\n            *(*0x20 + -0x48) = 0x475831;\n            fcn.0046ca80(arg1);\n            if (unaff_RDI != 0) goto code_r0x00475843;\n            if (arg1 != 0) {\n                unaff_RDI = 0;\ncode_r0x00475843:\n                if (unaff_RDI != 0) {\n                    return 0;\n                }\n                *(*0x20 + -0x18) = 0;\n                *(*0x20 + -0x48) = 0x475869;\n                iVar1 = fcn.0046dbc0(0);\n                if (iVar1 == 0) {\n                    return *(*0x20 + -0x18);\n                }\n                return 0;\n            }\n            iVar1 = 0;\n            *(*0x20 + -0x48) = 0x4758b0;\n            in_RAX = fcn.0045e240(0);\n            unaff_RBX = arg1;\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = iVar1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x4758c9;\n        fcn.0045bb60();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 614
    },
    "00475ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00475ce0(int64_t *arg1, ulong noname_1, uchar *arg3)\n\n{\n    ulong in_RAX;\n    int64_t *piVar1;\n    uint64_t noname_1_00;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t *unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uchar *unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x20) = in_RAX;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0x70) = 0x475d25;\n            piVar1 = fcn.0046ca80(arg1);\n            if (unaff_RDI == NULL) {\n                unaff_RBX = arg1;\n                if (arg1 != NULL) {\n                    unaff_RDI = NULL;\n                    goto code_r0x00475d40;\n                }\n            }\n            else {\n                piVar1 = NULL;\ncode_r0x00475d40:\n                if (unaff_RDI != NULL) {\n                    return 0;\n                }\n                *(*0x20 + -0x18) = piVar1;\n                *(*0x20 + -0x38) = 0;\n                *(*0x20 + -0x34) = *(*0x20 + 0x28);\n                uVar3 = *(*0x20 + 0x30);\n                noname_1_00 = *(*0x20 + 0x20);\n                unaff_RSI = *(*0x20 + 0x28);\n                while (unaff_RSI != 0) {\n                    *(*0x20 + -0x28) = uVar3;\n                    *(*0x20 + -0x30) = unaff_RSI;\n                    *(*0x20 + -0x10) = noname_1_00;\n                    unaff_RDI = *0x20 + -0x38;\n                    arg3 = *0x20 + -0x34;\n                    *(*0x20 + -0x70) = 0x475dda;\n                    iVar2 = fcn.0046dce0(0, noname_1_00, arg3);\n                    if (iVar2 == 0) {\n                        if (*(*0x20 + -0x34) <= *(*0x20 + -0x28)) {\n                            return *(*0x20 + -0x10);\n                        }\n                        *(*0x20 + -0x70) = 0x475e69;\n                        fcn.0045e2c0(*(*0x20 + -0x34), *(*0x20 + -0x28));\n                        arg1 = piVar1;\n                        unaff_RSI = noname_1_00;\n                        break;\n                    }\n                    if (((iVar2 == 0) || (*(iVar2 + 8) != 0x4a26e0)) || (*piVar1 != 0xea)) {\n                        return 0;\n                    }\n                    arg1 = *(*0x20 + -0x34);\n                    if (*(*0x20 + -0x34) <= *(*0x20 + -0x30)) {\n                        return 0;\n                    }\n                    *(*0x20 + -0x70) = 0x475d97;\n                    noname_1_00 = fcn.00447240(arg1);\n                    piVar1 = *(*0x20 + -0x18);\n                    uVar3 = *(*0x20 + -0x34);\n                    unaff_RSI = uVar3;\n                }\n                *(*0x20 + -0x70) = 0x475e73;\n                fcn.0045e240(0);\n                unaff_RBX = arg1;\n            }\n            arg1 = NULL;\n            *(*0x20 + -0x70) = 0x475e7d;\n            in_RAX = fcn.0045e240(0);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + 0x30) = arg3;\n        *(puVar4 + -8) = 0x475ea5;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        arg3 = *(puVar4 + 0x30);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1263
    },
    "00476300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00476300(ulong arg1)\n\n{\n    uint64_t arg2;\n    uint32_t uVar1;\n    ulong in_RAX;\n    ulong uVar2;\n    uchar *puVar3;\n    int64_t arg1_00;\n    uchar *unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uchar *unaff_RDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x80 && *0x20 + -0x80 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x100;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX == NULL) {\n                return 0;\n            }\n            *(*0x20 + -0x108) = 0x476338;\n            uVar2 = fcn.0046ca80(arg1);\n            if (unaff_RDI == NULL) {\n                if (unaff_RBX != NULL) {\n                    unaff_RDI = NULL;\n                    goto code_r0x0047634f;\n                }\n            }\n            else {\n                uVar2 = 0;\ncode_r0x0047634f:\n                if (unaff_RDI != NULL) {\n                    return 0;\n                }\n                *(*0x20 + -0x18) = uVar2;\n                *(*0x20 + -0xe0) = in_XMM15;\n                unaff_RDI = *0x20 + -0xd8;\n                *(*0x20 + -0x110) = unaff_RBP;\n                *(*0x20 + -0x108) = 0x476376;\n                fcn.0045e4cb();\n                unaff_RBP = *(*0x20 + -0x110);\n                puVar3 = *0x20 + -0xe0;\n                arg1_00 = 100;\n                while (arg1_00 != 0) {\n                    *(*0x20 + -0xe8) = arg1_00;\n                    *(*0x20 + -0x10) = puVar3;\n                    *(*0x20 + -0x108) = 0x4763fa;\n                    uVar1 = fcn.004765e0(arg1_00);\n                    if (puVar3 != NULL) {\n                        return 0;\n                    }\n                    arg2 = *(*0x20 + -0xe8);\n                    if (uVar1 <= arg2) {\n                        if (uVar1 <= arg2) {\n                            *(*0x20 + -0x108) = 0x476425;\n                            uVar2 = fcn.0046cb80(arg2);\n                            return uVar2;\n                        }\n                        *(*0x20 + -0x108) = 0x476458;\n                        fcn.0045e2c0(uVar1, arg2);\n                        unaff_RBX = puVar3;\n                        break;\n                    }\n                    unaff_RBX = uVar1;\n                    *(*0x20 + -0xe8) = unaff_RBX;\n                    *(*0x20 + -0x108) = 0x4763d0;\n                    puVar3 = fcn.00447240(unaff_RBX);\n                    arg1_00 = *(*0x20 + -0xe8);\n                }\n                *(*0x20 + -0x108) = 0x476465;\n                fcn.0045e240(0);\n            }\n            arg1 = 0;\n            *(*0x20 + -0x108) = 0x47646f;\n            in_RAX = fcn.0045e240(0);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x47647f;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 975
    },
    "004764a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004764a0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    uint unaff_EDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_EDI;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + -0x38) = in_RAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + -0x20) = unaff_RSI;\n            *(*0x20 + -0x28) = arg4;\n            *(*0x20 + -0x30) = *0x7acf80;\n            *(*0x20 + -0x98) = 0x476506;\n            arg1 = *0x7acf80;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x90) = in_XMM15;\n                *(*0x20 + -0x98) = 0x476557;\n                iVar1 = fcn.0045a860(*(*0x20 + -0x38), *(*0x20 + 0x30), *(*0x20 + 0x20), *(*0x20 + -0x20));\n                if (iVar1 == 0) {\n                    uVar2 = 0;\n                }\n                else {\n                    *(*0x20 + -0x98) = 0x476567;\n                    fcn.00409d60();\n                    uVar2 = 0x732cf8;\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x98) = 0x47658f;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_EDI;\n        *(puVar3 + 0x28) = unaff_RSI;\n        *(puVar3 + 0x30) = arg3;\n        *(puVar3 + 0x38) = arg4;\n        *(puVar3 + -8) = 0x4765b7;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_EDI = *(puVar3 + 0x20);\n        unaff_RSI = *(puVar3 + 0x28);\n        arg3._0_4_ = *(puVar3 + 0x30);\n        arg4 = *(puVar3 + 0x38);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 845
    },
    "004765e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004765e0(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = unaff_RBX;\n            *(*0x20 + -0x20) = *0x7acf58;\n            *(*0x20 + -0x58) = 0x476618;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x58) = 0x476652;\n                uVar2 = fcn.0045a7a0(iVar1);\n                if (((uVar2 == 0) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x28) = uVar2;\n                    *(*0x20 + -0x58) = 0x476691;\n                    fcn.00409d60();\n                    uVar2 = *(*0x20 + -0x28);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x58) = 0x4766c5;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x4766d9;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 590
    },
    "0047a9e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0047a9e0(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0047ab00(arg1);\n    return;\n}\n",
        "token_count": 89
    },
    "0047ab00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0047ab00(ulong arg1)\n\n{\n    ulong in_RDX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.0047a780(arg1);\n    fcn.0047ab80(arg1, in_RDX);\n    return;\n}\n",
        "token_count": 108
    },
    "0047ada0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0047ada0(ulong arg1)\n\n{\n    int64_t iVar1;\n    int32_t unaff_EBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    iVar1 = fcn.00460480(arg1);\n    if (iVar1 + 0x9fe07780U >> 0x21 != 0) {\n        return unaff_EBX;\n    }\n    return unaff_EBX | (iVar1 + 0x9fe07780U) * 0x40000000 | 0x8000000000000000;\n}\n",
        "token_count": 175
    },
    "0047b380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0047b380(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (in_RAX != 0) {\n        if ((in_RAX == 0x7adca0) && (*0x801bd8 == 0)) {\n            fcn.00464140();\n        }\n        return in_RAX;\n    }\n    return 0x7aa500;\n}\n",
        "token_count": 145
    },
    "0047f040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0047f040(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uint unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint unaff_EDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + 0x20) = unaff_EDI;\n            *(*0x20 + -0x20) = in_RAX;\n            *(*0x20 + -0x10) = arg1;\n            *(*0x20 + -0x18) = *0x7acea0;\n            *(*0x20 + -0x68) = 0x47f085;\n            arg1 = *0x7acea0;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                uVar3 = *(*(*0x20 + -0x18) + 0x20);\n                iVar1 = *(*0x20 + -0x20);\n                *(*0x20 + -0x68) = 0x47f0c8;\n                iVar2 = fcn.0045a800(iVar1, uVar3, *(*0x20 + 0x20), 0);\n                if (iVar2 == 0) {\n                    uVar3 = *0x7a6570;\n                    if ((iVar1 != 0) && (uVar3 = *0x7a6580,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x68) = 0x47f105;\n                        fcn.00409d60();\n                        uVar3 = 0x732cf8;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x68) = 0x47f130;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_EDI;\n        *(puVar4 + -8) = 0x47f148;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_EDI = *(puVar4 + 0x20);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 722
    },
    "0047f160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0047f160(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x20) = in_RAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = *0x7aceb0;\n            *(*0x20 + -0x58) = 0x47f19b;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x20);\n                *(*0x20 + -0x58) = 0x47f1d2;\n                uVar2 = fcn.0045a7a0(iVar1);\n                if (((uVar2 == 0) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x28) = uVar2;\n                    *(*0x20 + -0x58) = 0x47f211;\n                    fcn.00409d60();\n                    uVar2 = *(*0x20 + -0x28);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x58) = 0x47f245;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x47f259;\n        fcn.0045bb60();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 595
    },
    "0047f3a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0047f3a0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = *0x7ace68;\n            *(*0x20 + -0x48) = 0x47f3cf;\n            iVar1 = fcn.0046a3c0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x48) = 0x47f3f5;\n                iVar2 = fcn.0045a7a0(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x7a6570;\n                    if ((iVar1 != 0) && (uVar3 = *0x7a6580,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x48) = 0x47f430;\n                        fcn.00409d60();\n                        uVar3 = 0x732cf8;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x48) = 0x47f45b;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x47f466;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 517
    },
    "00481240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00481240(void)\n\n{\n    uint64_t uVar1;\n    uint64_t *in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            while( true ) {\n                uVar3 = *in_RAX;\n                if ((uVar3 & 1) != 0) {\n                    return 0;\n                }\n                uVar2 = (uVar3 | 1) + 8;\n                if ((uVar2 & 0x7ffff8) == 0) break;\n                LOCK();\n                uVar1 = *in_RAX;\n                *in_RAX = *in_RAX ^ (uVar3 == uVar1) * (*in_RAX ^ uVar2 & 0x80000000007fffff);\n                if (uVar3 == uVar1) {\n                    *(*0x20 + -0x10) = in_RAX;\n                    while ((uVar3 & 0x7ffff800000) != 0) {\n                        *(*0x20 + -0x18) = uVar3;\n                        *(*0x20 + -0x30) = 0x4812be;\n                        fcn.00459d40();\n                        uVar3 = *(*0x20 + -0x18) - 0x800000;\n                    }\n                    while ((uVar3 & 0x7ffff80000000000) != 0) {\n                        *(*0x20 + -0x18) = uVar3;\n                        *(*0x20 + -0x30) = 0x4812f0;\n                        fcn.00459d40();\n                        uVar3 = *(*0x20 + -0x18) - 0x80000000000;\n                    }\n                    return 1;\n                }\n            }\n            *(*0x20 + -0x30) = 0x48133b;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x481346;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 611
    },
    "00481360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00481360(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    uint64_t *puVar3;\n    uint64_t uVar4;\n    char unaff_BL;\n    int64_t iVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_BL == '\\0') {\n                puVar3 = in_RAX + 0xc;\n                uVar4 = 4;\n                iVar5 = 0x80000000000;\n                uVar7 = 0x7ffff80000000000;\n            }\n            else {\n                puVar3 = in_RAX + 1;\n                uVar4 = 2;\n                iVar5 = 0x800000;\n                uVar7 = 0x7ffff800000;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x10) = puVar3;\n            *(*0x20 + -0x20) = uVar7;\n            *(*0x20 + -0x28) = iVar5;\n            *(*0x20 + -0x18) = uVar4;\ncode_r0x004813d5:\n            uVar1 = *in_RAX;\n            if ((uVar1 & 1) != 0) {\n                return 0;\n            }\n            if ((uVar1 & uVar4) == 0) {\n                uVar8 = (uVar1 | uVar4) + 8;\n                if ((uVar8 & 0x7ffff8) == 0) goto code_r0x0048147b;\ncode_r0x0048140f:\n                LOCK();\n                uVar2 = *in_RAX;\n                *in_RAX = *in_RAX ^ (uVar1 == uVar2) * (*in_RAX ^ uVar8);\n                if (uVar1 == uVar2) {\n                    if ((uVar1 & uVar4) == 0) {\n                        return 1;\n                    }\n                    *(*0x20 + -0x40) = 0x481432;\n                    fcn.00459c20();\n                    puVar3 = *(*0x20 + -0x10);\n                    uVar4 = *(*0x20 + -0x18);\n                    iVar5 = *(*0x20 + -0x28);\n                    uVar7 = *(*0x20 + -0x20);\n                    in_RAX = *(*0x20 + 8);\n                }\n                goto code_r0x004813d5;\n            }\n            uVar8 = iVar5 + uVar1;\n            if ((uVar7 & uVar8) != 0) goto code_r0x0048140f;\n            *(*0x20 + -0x40) = 0x48147b;\n            fcn.004334e0(puVar3);\ncode_r0x0048147b:\n            unaff_BL = -0x18;\n            *(*0x20 + -0x40) = 0x48148e;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        puVar6[0x10] = unaff_BL;\n        *(puVar6 + -8) = 0x48149d;\n        fcn.0045bb60();\n        in_RAX = *(puVar6 + 8);\n        unaff_BL = puVar6[0x10];\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 909
    },
    "00481680": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00481680(void)\n\n{\n    char cVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    cVar1 = fcn.004814c0();\n    if (cVar1 != '\\0') {\n        fcn.00482720();\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "004816e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004816e0(void)\n\n{\n    char cVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    cVar1 = fcn.004814c0();\n    if (cVar1 != '\\0') {\n        fcn.00482720();\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "00481740": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00481740(void)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (*0x801bc8 == 0) {\n        fcn.00464140();\n    }\n    uVar1 = fcn.00458f60();\n    if (unaff_RBX == 0) {\n        *in_RAX = uVar1;\n        return 0;\n    }\n    uVar1 = *0x7a6560;\n    if (unaff_RBX != 0x3e5) {\n        fcn.00409d60();\n        uVar1 = 0x732cf8;\n    }\n    return uVar1;\n}\n",
        "token_count": 214
    },
    "00481ac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00481ac0(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong *puVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if ((0x4e2f < *0x20) && (*(unaff_R14 + 0x10) <= *0x20 + -0x4e30 && *0x20 + -0x4e30 != *(unaff_R14 + 0x10))) {\n            puVar4 = *0x20 + -0x4eb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x4eb8) = 0x481afd;\n            iVar2 = fcn.0046a3c0();\n            if (iVar2 != 0) {\n                return;\n            }\n            *(*0x20 + -0x4e90) = 6;\n            puVar5 = *0x20 + -0x4e88;\n            for (iVar2 = 0x9d0; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar5 = 0;\n                puVar5 = puVar5 + 1;\n            }\n            *(*0x20 + -0x4e94) = 0x4e80;\n            *(*0x20 + -0x4eb8) = 0x481b39;\n            iVar1 = fcn.00470160(*0x20 + -0x4e94);\n            if (*0x20 != 0x4e88) {\n                return;\n            }\n            iVar3 = 0;\n            while( true ) {\n                if (iVar1 <= iVar3) {\n                    *0x8019a0 = 1;\n                    return;\n                }\n                if (0x1f < iVar3) break;\n                if ((*(iVar3 * 0x274) >> 0x11 & 1) == 0) {\n                    return;\n                }\n                iVar3 = iVar3 + 1;\n            }\n            *0xffffffffffffffd0 = 0x481bb6;\n            fcn.0045e240(0x20);\n        }\n        *(puVar4 + -8) = 0x481bbc;\n        fcn.0045bb60();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 575
    },
    "00484040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00484040(ulong param_1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00480f60();\n    fcn.0046a5e0(param_1);\n    return;\n}\n",
        "token_count": 99
    },
    "00484140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00484140(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00481040();\n    fcn.00484240(arg1, noname_1, arg3);\n    return;\n}\n",
        "token_count": 111
    },
    "004851c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004851c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00485200();\n    return;\n}\n",
        "token_count": 81
    },
    "00485200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00485200(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    uint64_t arg1;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            arg1 = 0x400;\n            while( true ) {\n                *(*0x20 + -0x1c) = arg1;\n                *(*0x20 + -0x40) = 0x48523c;\n                iVar3 = fcn.00447240(arg1);\n                if (*(*0x20 + -0x1c) == 0) break;\n                *(*0x20 + -0x10) = iVar3;\n                *(*0x20 + -0x40) = 0x485257;\n                uVar2 = fcn.0047f160(*(*0x20 + -0x1c));\n                if (iVar3 != 0) {\n                    return 0;\n                }\n                uVar1 = *(*0x20 + -0x1c);\n                if (uVar2 < uVar1) {\n                    *(*0x20 + -0x40) = 0x485270;\n                    uVar4 = fcn.0046cb80(uVar1);\n                    return uVar4;\n                }\n                arg1 = uVar1 + 0x400;\n            }\n            *(*0x20 + -0x40) = 0x48529c;\n            in_RAX = fcn.0045e240(0);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x4852a7;\n        fcn.0045bb60();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 536
    },
    "004858c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004858c0(void)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (in_RAX != 0) {\n        uVar1 = fcn.00486220();\n        return uVar1;\n    }\n    return *0x7ad870;\n}\n",
        "token_count": 124
    },
    "004865c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.004865c0(void)\n\n{\n    char cVar1;\n    uint64_t arg1;\n    ulong in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x20) = 0x4865e7;\n            fcn.00486680();\n            if (unaff_RBX == 0) {\n                return false;\n            }\n            arg1 = *(*0x20 + 0x10);\n            if (unaff_RBX <= arg1) {\n                if (arg1 - unaff_RBX != 0) {\n                    cVar1 = *(*(*0x20 + 8) + (unaff_RBX & -(arg1 - unaff_RBX) >> 0x3f));\n                    return cVar1 == '\\\\' || cVar1 == '/';\n                }\n                return false;\n            }\n            *(*0x20 + -0x20) = 0x486655;\n            in_RAX = fcn.0045e300(arg1);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x486665;\n        fcn.0045bb60();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 471
    },
    "00487580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00487580(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if ((in_RAX == 0x732db0) && (arg1 == 0x732db0)) {\n        uVar1 = fcn.00487fa0();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 140
    },
    "00487fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00487fa0(ulong param_1, ulong param_2)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint32_t uVar2;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    iVar1 = fcn.00487940(param_1, param_2);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00487940(param_1, param_2);\n        if (iVar1 == 0) {\n            if ((*(unaff_RBX + 0x58) == *(in_RAX + 0x58)) && (*(unaff_RBX + 0x5c) == *(in_RAX + 0x5c))) {\n                uVar2 = *(in_RAX + 0x60) & 0xffffff00 | *(unaff_RBX + 0x60) == *(in_RAX + 0x60);\n            }\n            else {\n                uVar2 = 0;\n            }\n            return uVar2;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 298
    },
    "0048a6e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0048a6e0(uchar *arg1, uchar *noname_1, uchar *arg3, uchar *arg4)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    ulong unaff_RBX;\n    uchar *puVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uchar *unaff_RSI;\n    uchar *puVar7;\n    uchar *unaff_RDI;\n    uint64_t uVar8;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x38 && *0x20 + -0x38 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0xb8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x38) = arg4;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            if (arg3 == unaff_RDI) {\n                *(*0x20 + -0xc0) = 0x48a757;\n                uVar1 = fcn.00402a00(unaff_RDI, noname_1);\n                arg1 = *(*0x20 + 0x18);\n                unaff_RSI = *(*0x20 + 0x28);\n                arg4 = *(*0x20 + 0x38);\n                noname_1 = uVar1;\n                in_RAX = *(*0x20 + 8);\n            }\n            else {\n                noname_1 = NULL;\n            }\n            if ((noname_1 != '\\0') || (arg4 == NULL)) {\n                return in_RAX;\n            }\n            *(*0x20 + -0xc0) = 0x48a7af;\n            iVar2 = fcn.00488be0(arg1);\n            if (iVar2 == 0) {\n                return *(*0x20 + 8);\n            }\n            iVar9 = *(*0x20 + 0x38);\n            if ((-1 < iVar9) && (iVar9 <= iVar2)) {\n                iVar2 = iVar9;\n            }\n            *(*0x20 + -0x28) = in_XMM15;\n            *(*0x20 + -0x18) = in_XMM15;\n            arg3 = *0x20 + -0x28;\n            *(*0x20 + -0x28) = arg3;\n            unaff_RDI = *(*0x20 + 0x20);\n            arg1 = *(*0x20 + 0x10);\n            arg4 = arg1 + (*(*0x20 + 0x30) - unaff_RDI) * iVar2;\n            if (-1 < arg4) {\n                *(*0x20 + -0x50) = iVar2;\n                if (*(*0x20 + -0x10) - *(*0x20 + -0x18) < arg4) {\n                    *(*0x20 + -0x80) = *(*0x20 + -0x18);\n                    *(*0x20 + -0x78) = arg4 + *(*0x20 + -0x10) * 2;\n                    *(*0x20 + -0xc0) = 0x48a865;\n                    iVar2 = fcn.00447240(arg4 + *(*0x20 + -0x10) * 2);\n                    unaff_RSI = *(*0x20 + -0x80);\n                    puVar5 = unaff_RSI;\n                    if (*(*0x20 + -0x18) < unaff_RSI) {\n                        puVar5 = *(*0x20 + -0x18);\n                    }\n                    if (iVar2 != *(*0x20 + -0x20)) {\n                        *(*0x20 + -0x30) = iVar2;\n                        *(*0x20 + -0xc0) = 0x48a896;\n                        fcn.0045ebc0(puVar5);\n                        iVar2 = *(*0x20 + -0x30);\n                        unaff_RSI = *(*0x20 + -0x80);\n                    }\n                    *(*0x20 + -0x18) = unaff_RSI;\n                    *(*0x20 + -0x10) = *(*0x20 + -0x78);\n                    *(*0x20 + -0x20) = iVar2;\n                    iVar2 = *(*0x20 + -0x50);\n                    arg1 = *(*0x20 + 0x10);\n                    unaff_RDI = *(*0x20 + 0x20);\n                }\n                arg4 = *(*0x20 + 0x18);\n                iVar9 = *(*0x20 + 8);\n                puVar5 = NULL;\n                noname_1 = NULL;\n                while (arg3 = *0x20 + -0x28,  noname_1 < iVar2) {\n                    *(*0x20 + -0x88) = noname_1;\n                    *(*0x20 + -0x90) = puVar5;\n                    if (unaff_RDI == NULL) {\n                        puVar7 = puVar5;\n                        if (0 < noname_1) {\n                            if (arg1 < puVar5) goto code_r0x0048ada5;\n                            *(*0x20 + -0xc0) = 0x48aa0a;\n                            fcn.00464da0(-(arg1 - puVar5) >> 0x3f & puVar5);\n                            puVar5 = *(*0x20 + -0x90) + (arg1 - puVar5);\n                            arg1 = *(*0x20 + 0x10);\n                            unaff_RDI = *(*0x20 + 0x20);\n                            arg4 = *(*0x20 + 0x18);\n                            iVar9 = *(*0x20 + 8);\n                            puVar7 = *(*0x20 + -0x90);\n                        }\n                    }\n                    else {\n                        if (arg1 < puVar5) goto code_r0x0048ad9b;\n                        *(*0x20 + -0xc0) = 0x48aa7e;\n                        iVar2 = fcn.0048b080(arg4, noname_1);\n                        puVar5 = *(*0x20 + -0x90) + iVar2;\n                        arg1 = *(*0x20 + 0x10);\n                        unaff_RDI = *(*0x20 + 0x20);\n                        arg4 = *(*0x20 + 0x18);\n                        iVar9 = *(*0x20 + 8);\n                        puVar7 = *(*0x20 + -0x90);\n                    }\n                    arg3 = *0x20 + -0x28;\n                    if (arg1 < puVar5) goto code_r0x0048ad90;\n                    if (puVar5 < puVar7) goto code_r0x0048ad85;\n                    iVar2 = puVar5 - puVar7;\n                    unaff_RSI = puVar7 & -iVar2 >> 0x3f;\n                    puVar7 = unaff_RSI + iVar9;\n                    if (*(*0x20 + -0x28) == NULL) {\n                        *(*0x20 + -0x28) = arg3;\n                    }\n                    else if (*(*0x20 + -0x28) != arg3) goto code_r0x0048ad6d;\n                    *(*0x20 + -0x58) = puVar5;\n                    puVar5 = *(*0x20 + -0x18);\n                    unaff_RSI = puVar5 + iVar2;\n                    *(*0x20 + -0x60) = unaff_RSI;\n                    arg4 = *(*0x20 + -0x10);\n                    uVar3 = *(*0x20 + -0x20);\n                    if (arg4 < unaff_RSI) {\n                        *(*0x20 + -0x68) = iVar2;\n                        *(*0x20 + -0x40) = puVar7;\n                        *(*0x20 + -0x70) = puVar5;\n                        *(*0x20 + -0xc0) = 0x48ab65;\n                        uVar3 = fcn.00447360(puVar5);\n                        iVar2 = *(*0x20 + -0x68);\n                        unaff_RDI = arg4;\n                        arg4 = puVar5;\n                    }\n                    *(*0x20 + -0x68) = arg4;\n                    *(*0x20 + -0x38) = uVar3;\n                    *(*0x20 + -0xc0) = 0x48ab93;\n                    fcn.0045ebc0(iVar2);\n                    *(*0x20 + -0x18) = *(*0x20 + -0x60);\n                    *(*0x20 + -0x10) = *(*0x20 + -0x68);\n                    *(*0x20 + -0x20) = *(*0x20 + -0x38);\n                    if (*(*0x20 + -0x28) == NULL) {\n                        *(*0x20 + -0x28) = *0x20 + -0x28;\n                    }\n                    else {\n                        arg3 = *0x20 + -0x28;\n                        if (*(*0x20 + -0x28) != arg3) goto code_r0x0048ad5a;\n                    }\n                    uVar4 = *(*0x20 + -0x18);\n                    iVar2 = *(*0x20 + 0x30);\n                    *(*0x20 + -0x60) = iVar2 + uVar4;\n                    uVar3 = *(*0x20 + -0x20);\n                    uVar8 = *(*0x20 + -0x10);\n                    if (*(*0x20 + -0x10) < iVar2 + uVar4) {\n                        *(*0x20 + -0x68) = uVar4;\n                        *(*0x20 + -0xc0) = 0x48ac3a;\n                        uVar3 = fcn.00447360(uVar4);\n                        iVar2 = *(*0x20 + 0x30);\n                        uVar8 = uVar4;\n                    }\n                    *(*0x20 + -0x68) = uVar8;\n                    *(*0x20 + -0x38) = uVar3;\n                    *(*0x20 + -0xc0) = 0x48a93f;\n                    fcn.0045ebc0(iVar2);\n                    *(*0x20 + -0x18) = *(*0x20 + -0x60);\n                    *(*0x20 + -0x10) = *(*0x20 + -0x68);\n                    *(*0x20 + -0x20) = *(*0x20 + -0x38);\n                    unaff_RDI = *(*0x20 + 0x20);\n                    puVar5 = unaff_RDI + *(*0x20 + -0x58);\n                    arg1 = *(*0x20 + 0x10);\n                    iVar2 = *(*0x20 + -0x50);\n                    arg4 = *(*0x20 + 0x18);\n                    iVar9 = *(*0x20 + 8);\n                    unaff_RSI = arg1;\n                    noname_1 = *(*0x20 + -0x88) + 1;\n                }\n                if (puVar5 <= arg1) {\n                    iVar2 = arg1 - puVar5;\n                    arg1 = -iVar2 >> 0x3f;\n                    arg4 = *(*0x20 + -0x28);\n                    if (arg4 == NULL) {\n                        *(*0x20 + -0x28) = arg3;\ncode_r0x0048ac92:\n                        uVar4 = *(*0x20 + -0x18);\n                        *(*0x20 + -0x50) = uVar4 + iVar2;\n                        uVar3 = *(*0x20 + -0x20);\n                        uVar8 = *(*0x20 + -0x10);\n                        if (*(*0x20 + -0x10) < uVar4 + iVar2) {\n                            *(*0x20 + -0x58) = uVar4;\n                            *(*0x20 + -0x60) = iVar2;\n                            *(*0x20 + -0x48) = (puVar5 & arg1) + iVar9;\n                            *(*0x20 + -0xc0) = 0x48acd6;\n                            uVar3 = fcn.00447360(uVar4);\n                            iVar2 = *(*0x20 + -0x60);\n                            uVar8 = uVar4;\n                        }\n                        *(*0x20 + -0x58) = uVar8;\n                        *(*0x20 + -0x38) = uVar3;\n                        *(*0x20 + -0xc0) = 0x48ad05;\n                        fcn.0045ebc0(iVar2);\n                        *(*0x20 + -0x18) = *(*0x20 + -0x50);\n                        *(*0x20 + -0x10) = *(*0x20 + -0x58);\n                        *(*0x20 + -0x20) = *(*0x20 + -0x38);\n                        return *(*0x20 + -0x38);\n                    }\n                    if (arg4 == arg3) goto code_r0x0048ac92;\n                    *(*0x20 + -0xc0) = 0x48ad52;\n                    fcn.004334e0();\n                }\n                *(*0x20 + -0xc0) = 0x48ad5a;\n                fcn.0045e300(arg1);\ncode_r0x0048ad5a:\n                *(*0x20 + -0xc0) = 0x48ad6d;\n                fcn.004334e0();\ncode_r0x0048ad6d:\n                puVar5 = 0x732918;\n                *(*0x20 + -0xc0) = 0x48ad85;\n                fcn.004334e0();\n                puVar7 = unaff_RSI;\ncode_r0x0048ad85:\n                *(*0x20 + -0xc0) = 0x48ad90;\n                arg1 = puVar5;\n                fcn.0045e300(puVar5);\ncode_r0x0048ad90:\n                *(*0x20 + -0xc0) = 0x48ad9b;\n                noname_1 = arg1;\n                fcn.0045e280(puVar5, arg1);\n                arg1 = puVar5;\n                unaff_RSI = puVar7;\ncode_r0x0048ad9b:\n                *(*0x20 + -0xc0) = 0x48ada5;\n                fcn.0045e300(arg1);\ncode_r0x0048ada5:\n                *(*0x20 + -0xc0) = 0x48adad;\n                fcn.0045e300(arg1);\n            }\n            unaff_RBX = 0x732ab8;\n            *(*0x20 + -0xc0) = 0x48adc5;\n            in_RAX = fcn.004334e0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + 0x20) = unaff_RDI;\n        *(puVar6 + 0x28) = unaff_RSI;\n        *(puVar6 + 0x30) = arg3;\n        *(puVar6 + 0x38) = arg4;\n        *(puVar6 + -8) = 0x48adee;\n        fcn.0045bb60();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_RDI = *(puVar6 + 0x20);\n        unaff_RSI = *(puVar6 + 0x28);\n        arg3 = *(puVar6 + 0x30);\n        arg4 = *(puVar6 + 0x38);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 3746
    },
    "0048b760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0048b760(uint64_t arg1, uint64_t arg2)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = 0x48b791;\n            arg1 = fcn.0048b080(arg1, arg2);\n            if (arg1 < 0) {\n                return *(*0x20 + 8);\n            }\n            arg2 = *(*0x20 + 0x10);\n            if (arg1 <= arg2) {\n                if (*(*0x20 + 0x20) + arg1 <= arg2) {\n                    return *(*0x20 + 8);\n                }\n                *(*0x20 + -0x30) = 0x48b806;\n                arg1 = fcn.0045e300(arg2);\n            }\n            *(*0x20 + -0x30) = 0x48b80e;\n            in_RAX = fcn.0045e280(arg1, arg2);\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + 0x20) = unaff_RDI;\n        *(puVar1 + -8) = 0x48b828;\n        fcn.0045bb60();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        unaff_RDI = *(puVar1 + 0x20);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 578
    },
    "0048c780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0048c780(void)\n\n{\n    char cVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t arg1;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX == 0) {\n                return 0x4aebdd;\n            }\n            for (; (unaff_RBX != 0 && ((cVar1 = *(unaff_RBX + -1 + in_RAX),  cVar1 == '\\\\' || (cVar1 == '/'))));\n                unaff_RBX = unaff_RBX + -1) {\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x28) = 0x48c7e5;\n            uVar3 = fcn.0048ca80();\n            arg2 = *(*0x20 + -0x10);\n            if (uVar3 <= arg2) {\n                arg1 = arg2 - uVar3;\n                arg2 = (-arg1 >> 0x3f & uVar3) + *(*0x20 + 8);\n                uVar3 = arg1;\n                do {\n                    uVar2 = uVar3;\n                    uVar3 = uVar2 - 1;\n                    if (uVar3 < 0) goto code_r0x0048c860;\n                } while ((*(arg2 + uVar3) != '\\\\') && (*(arg2 + uVar3) != '/'));\n                if (uVar3 < 0) goto code_r0x0048c860;\n                if (uVar2 <= arg1) {\n                    arg1 = (arg1 - uVar3) - 1;\n                    arg2 = arg2 + (-arg1 >> 0x3f & uVar2);\ncode_r0x0048c860:\n                    if (arg1 != 0) {\n                        return arg2;\n                    }\n                    return 0x4aebed;\n                }\n                *(*0x20 + -0x28) = 0x48c890;\n                uVar3 = fcn.0045e300(arg1);\n            }\n            *(*0x20 + -0x28) = 0x48c898;\n            in_RAX = fcn.0045e280(uVar3, arg2);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x48c8a8;\n        fcn.0045bb60();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 778
    },
    "0048e8c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048e8c0(void)\n\n{\n    ulong in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00484040();\n    fcn.0048e940(in_RAX);\n    return;\n}\n",
        "token_count": 101
    },
    "0048efe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048efe0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    fcn.00433c40();\n    return;\n}\n",
        "token_count": 82
    },
    "00491840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00491840(int64_t param_1)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    iVar2 = fcn.00486aa0();\n    if (param_1 == 0) {\n        cVar1 = (**(iVar2 + 0x18))();\n        if (cVar1 != '\\0') {\n            return *0x7ad820;\n        }\n        return 0;\n    }\n    return param_1;\n}\n",
        "token_count": 163
    },
    "00491980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00491980(ulong arg1, ulong arg2)\n\n{\n    char cVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    ulong unaff_RBX;\n    int64_t unaff_RDI;\n    ulong in_R8;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    if (unaff_RDI == 0) {\n        fcn.00491840();\n        return in_RAX;\n    }\n    cVar1 = fcn.004918e0(arg1, arg2, in_R8);\n    if ((cVar1 != '\\0') && (iVar2 = fcn.00491840(),  iVar2 == 0)) {\n        return in_RAX;\n    }\n    iVar2 = 0;\n    do {\n        uVar3 = fcn.0044ae80(unaff_RBX);\n        iVar4 = fcn.00491840();\n        if (iVar4 == 0) {\n            return uVar3;\n        }\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < unaff_RDI);\n    return 0;\n}\n",
        "token_count": 301
    },
    "004926e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004926e0(ulong noname_0, ulong arg2)\n\n{\n    ulong *in_RAX;\n    int64_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int64_t unaff_RBX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    \n    *in_RAX = 0;\n    in_RAX[1] = 0x14e;\n    uVar5 = unaff_RBX +\n            ((SUB168(SEXT816(-0x7ffffffefffffffd) * SEXT816(unaff_RBX) >> 0x40, 0) + unaff_RBX >> 0x1e) -\n            (unaff_RBX >> 0x3f)) * -0x7fffffff;\n    if (uVar5 < 0) {\n        uVar5 = uVar5 + 0x7fffffff;\n    }\n    if (uVar5 == 0) {\n        uVar5 = 0x5556447;\n    }\n    for (iVar1 = -0x14; iVar1 < 0x25f; iVar1 = iVar1 + 1) {\n        uVar2 = uVar5 * 0xbc8f + (uVar5 / 0xadc8) * -0x7fffffff;\n        if (uVar2 < 0) {\n            uVar2 = uVar2 + 0x7fffffff;\n        }\n        if (-1 < iVar1) {\n            iVar4 = uVar2;\n            iVar3 = uVar2 * 0xbc8f + (uVar2 / 0xadc8) * -0x7fffffff;\n            if (iVar3 < 0) {\n                iVar3 = iVar3 + 0x7fffffff;\n            }\n            uVar2 = iVar3 * 0xbc8f + (iVar3 / 0xadc8) * -0x7fffffff;\n            if (uVar2 < 0) {\n                uVar2 = uVar2 + 0x7fffffff;\n            }\n            in_RAX[iVar1 + 2] = *(iVar1 * 8 + 0x7a31c0) ^ iVar4 << 0x28 ^ iVar3 << 0x14 ^ uVar2;\n        }\n        uVar5 = uVar2;\n    }\n    return;\n}\n",
        "token_count": 517
    },
    "00494a00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00494a00(void)\n\n{\n    ulong uVar1;\n    ulong arg1;\n    ulong uVar2;\n    int64_t unaff_R14;\n    ulong uStack40;\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (&uStack40 < *(unaff_R14 + 0x10) || &uStack40 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    ppcStack16 = NULL;\n    uVar1 = fcn.0044ae80(0xeeae8);\n    arg1 = fcn.00493d80(0x4bd1f4);\n    uStack40 = fcn.0044b220(uVar1);\n    uVar2 = fcn.00485800(0x441);\n    uVar1 = uStack40;\n    auStack32 = CONCAT88(uVar2, 0x494b80);\n    ppcStack16 = auStack32;\n    fcn.0044b3c0(arg1);\n    fcn.004855e0(uVar1);\n    (**ppcStack16)();\n    return;\n}\n",
        "token_count": 259
    },
    "00494be0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid fcn.00494be0(void)\n\n{\n    ulong arg1;\n    ulong arg1_00;\n    ulong uVar1;\n    int64_t unaff_R14;\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045bb60();\n    }\n    ppcStack16 = NULL;\n    arg1 = fcn.00493d80(0x5194);\n    arg1_00 = fcn.0044b220(0x4b8060);\n    uVar1 = fcn.00485800(0x441);\n    auStack32 = CONCAT88(uVar1, 0x494d20);\n    ppcStack16 = auStack32;\n    fcn.0044b3c0(arg1);\n    fcn.004855e0(arg1_00);\n    (**ppcStack16)();\n    return;\n}\n",
        "token_count": 230
    },
    "00419780": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.00419780(void)\n\n{\n    uint64_t uVar1;\n    uint64_t *in_RAX;\n    uint64_t unaff_RBX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    \n    while( true ) {\n        uVar1 = *in_RAX;\n        if (uVar1 >> 0x3d == 0) {\n            return 0;\n        }\n        uVar3 = uVar1 & 0x1fffffffffffffff | unaff_RBX & 0xe000000000000000;\n        iVar2 = unaff_RBX - uVar3;\n        if (unaff_RBX < uVar3) {\n            iVar2 = 0;\n        }\n        if (iVar2 == 0) break;\n        LOCK();\n        uVar3 = *in_RAX;\n        *in_RAX = *in_RAX ^ (uVar1 == uVar3) * (*in_RAX ^ (uVar1 & 0xe000000000000000 | unaff_RBX & 0x1fffffffffffffff))\n        ;\n        if (uVar1 == uVar3) {\n            return uVar1 >> 0x3d;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 272
    },
    "0041e4a0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint64_t fcn.0041e4a0(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    \n    do {\n        uVar1 = *(in_RAX + 0x158);\n        iVar2 = *(in_RAX + 0x148) - *(in_RAX + 0x150);\n    } while (uVar1 < iVar2 + *(in_RAX + 0x140));\n    uVar3 = *(in_RAX + 8);\n    iVar4 = 0;\n    if (uVar3 < uVar1) {\n        iVar4 = uVar1 - uVar3;\n    }\n    uVar1 = ((uVar1 - *(in_RAX + 0x140)) - iVar2) + iVar4;\n    if (uVar1 < uVar3) {\n        uVar3 = uVar3 - uVar1;\n        if ((uVar3 < 0x100000) || (uVar3 = uVar3 - 0x100000,  uVar3 < 0x100000)) {\n            uVar3 = 0x100000;\n        }\n        if (uVar3 < *(in_RAX + 0xb8)) {\n            uVar3 = *(in_RAX + 0xb8);\n        }\n        return uVar3;\n    }\n    return *(in_RAX + 0xb8);\n}\n",
        "token_count": 328
    },
    "0041f320": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0041f320(void)\n\n{\n    ulong in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = 0x41f345;\n            fcn.0040a460();\n            if (*(*(*0x20 + 8) + 8) == unaff_R14) {\n                *(*(*0x20 + 8) + 0x10) = 1;\n                *(*0x20 + -0x30) = 0x41f373;\n                fcn.004366e0(0xd);\n                return;\n            }\n            *(*0x20 + -0x30) = 0x41f38e;\n            in_RAX = fcn.00433c80();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x41f399;\n        fcn.0045bb60();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 362
    },
    "00401ec0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00401ec0(ulong noname_0, ulong arg2)\n\n{\n    int32_t iStackX8;\n    \n    if (iStackX8 == 0) {\n        cpuid_basic_info(0);\n    }\n    else if (iStackX8 == 1) {\n        cpuid_Version_info(1);\n    }\n    else if (iStackX8 == 2) {\n        cpuid_cache_tlb_info(2);\n    }\n    else if (iStackX8 == 3) {\n        cpuid_serial_info(3);\n    }\n    else if (iStackX8 == 4) {\n        cpuid_Deterministic_Cache_Parameters_info(4);\n    }\n    else if (iStackX8 == 5) {\n        cpuid_MONITOR_MWAIT_Features_info(5);\n    }\n    else if (iStackX8 == 6) {\n        cpuid_Thermal_Power_Management_info(6);\n    }\n    else if (iStackX8 == 7) {\n        cpuid_Extended_Feature_Enumeration_info(7);\n    }\n    else if (iStackX8 == 9) {\n        cpuid_Direct_Cache_Access_info(9);\n    }\n    else if (iStackX8 == 10) {\n        cpuid_Architectural_Performance_Monitoring_info(10);\n    }\n    else if (iStackX8 == 0xb) {\n        cpuid_Extended_Topology_info(0xb);\n    }\n    else if (iStackX8 == 0xd) {\n        cpuid_Processor_Extended_States_info(0xd);\n    }\n    else if (iStackX8 == 0xf) {\n        cpuid_Quality_of_Service_info(0xf);\n    }\n    else if (iStackX8 == -0x7ffffffe) {\n        cpuid_brand_part1_info(0x80000002);\n    }\n    else if (iStackX8 == -0x7ffffffd) {\n        cpuid_brand_part2_info(0x80000003);\n    }\n    else if (iStackX8 == -0x7ffffffc) {\n        cpuid_brand_part3_info(0x80000004);\n    }\n    else {\n        cpuid(iStackX8);\n    }\n    return;\n}\n",
        "token_count": 498
    },
    "00402420": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint64_t fcn.00402420(char param_1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t iVar2;\n    \n    iVar2 = 0;\n    for (iVar1 = 0; iVar1 < unaff_RBX; iVar1 = iVar1 + 1) {\n        if (*(in_RAX + iVar1) == param_1) {\n            iVar2 = iVar2 + 1;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 118
    },
    "004320a0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004320a0(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x28) = 0x4320ca;\n            fcn.00431880(0x15);\n            *(*0x20 + -0x28) = 0x4320e9;\n            fcn.004334e0();\n        }\n        *(puVar1 + -8) = 0x4320ef;\n        fcn.0045bb60();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 235
    },
    "00432100": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00432100(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x432125;\n            fcn.00431940();\n            iVar1 = *0x7a6650;\n            if (*0x7a6650 != 0) {\n                iVar1 = *(*0x7a6650 + 8);\n            }\n            *(*0x20 + -0x20) = 0x432145;\n            fcn.004334e0(iVar1);\n        }\n        *(puVar2 + -8) = 0x43214b;\n        fcn.0045bb60();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 280
    },
    "00432820": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00432820(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x432845;\n            fcn.00433c80();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x43284b;\n        fcn.0045bb60();\n    } while( true );\n}\n",
        "token_count": 175
    },
    "00432860": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00432860(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x432885;\n            fcn.00433c80();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x43288b;\n        fcn.0045bb60();\n    } while( true );\n}\n",
        "token_count": 175
    },
    "00436f40": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00436f40(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x436f65;\n            fcn.00433c80();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x436f6b;\n        fcn.0045bb60();\n    } while( true );\n}\n",
        "token_count": 178
    },
    "00436f80": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00436f80(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x436fa5;\n            fcn.00433c80();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x436fab;\n        fcn.0045bb60();\n    } while( true );\n}\n",
        "token_count": 176
    },
    "00437080": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00437080(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t arg1;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    uchar *puVar8;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    uchar auStack24 [16];\n    \n    puVar8 = &stack0xfffffffffffffff8;\n    iVar3 = fcn.00433c80();\n    puVar6 = auStack24;\n    do {\n        puVar7 = puVar6;\n        if (*(unaff_R14 + 0x10) <= puVar6 && puVar6 != *(unaff_R14 + 0x10)) {\n            puVar7 = puVar6 + -0x50;\n            *(puVar6 + -8) = puVar8;\n            puVar8 = puVar6 + -8;\n            if (*(iVar3 + 0x90) != 0) {\n                *(puVar6 + 8) = iVar3;\n                *(puVar6 + -0x58) = 0x4370db;\n                fcn.0040a460();\n                uVar2 = *0x7ada20;\n                uVar5 = *0x7ada28 + 1;\n                arg1 = uVar5;\n                uVar4 = *0x7ada20;\n                uVar9 = *0x7ada28;\n                if (*0x7ada30 < uVar5) {\n                    *(puVar6 + -0x58) = 0x43710e;\n                    arg1 = *0x7ada28;\n                    uVar4 = fcn.00447360(*0x7ada28);\n                    uVar9 = uVar2;\n                    uVar2 = uVar4;\n                    *0x7ada30 = arg1;\n                    if (*0x801c20 != 0) {\n                        *(puVar6 + -0x58) = 0x437133;\n                        uVar4 = fcn.0045dda0(arg1, uVar5, param_3, param_4);\n                        uVar2 = *0x7ada20;\n                    }\n                }\n                *0x7ada20 = uVar2;\n                *0x7ada28 = uVar9 + 1;\n                if (*0x801c20 == 0) {\n                    *(uVar4 + uVar9 * 8) = *(puVar6 + 8);\n                }\n                else {\n                    *(puVar6 + -0x58) = 0x437166;\n                    fcn.0045dec0(arg1, *(puVar6 + 8), param_3, param_4);\n                }\n                if (*0x7ada28 != 0) {\n                    uVar5 = *0x7ad040;\n                    if ((*0x7ad040 != *0x7ada20) && (uVar5 = *0x7ada20,  *0x801c20 != '\\0')) {\n                        *(puVar6 + -0x10) = *0x7ada20;\n                        *(puVar6 + -0x58) = 0x4371a5;\n                        fcn.00403500();\n                        uVar5 = *(puVar6 + -0x10);\n                    }\n                    *0x7ad040 = uVar5;\n                    uVar1 = *0x801a48;\n                    *0x801a48 = *0x7ada28;\n                    *(puVar6 + -0x58) = 0x4371d3;\n                    fcn.0040a680(uVar1);\n                    return;\n                }\n                *(puVar6 + -0x58) = 0x4371e7;\n                fcn.0045e240(0);\n            }\n            *(puVar6 + -0x58) = 0x4371f8;\n            iVar3 = fcn.00433c80();\n        }\n        *(puVar7 + 8) = iVar3;\n        *(puVar7 + -8) = 0x437205;\n        fcn.0045bb60();\n        iVar3 = *(puVar7 + 8);\n        puVar6 = puVar7;\n    } while( true );\n}\n",
        "token_count": 974
    },
    "004426e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint64_t fcn.004426e0(void)\n\n{\n    uint64_t *puVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t in_RAX;\n    \n    uVar3 = *(in_RAX + 0x998);\n    if (uVar3 != 0) {\n        LOCK();\n        puVar1 = in_RAX + 0x998;\n        uVar4 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar3 == uVar4) * *puVar1;\n        if (uVar3 == uVar4) {\n            return uVar3;\n        }\n    }\n    do {\n        uVar2 = *(in_RAX + 400);\n        if (uVar2 == *(in_RAX + 0x194)) {\n            return 0;\n        }\n        uVar3 = *(in_RAX + 0x198 + (uVar2 & 0xff) * 8);\n        LOCK();\n    } while (uVar2 != *(in_RAX + 400));\n    *(in_RAX + 400) = uVar2 + 1;\n    return uVar3;\n}\n",
        "token_count": 269
    },
    "00450a20": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00450a20(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x450a45;\n            fcn.00433c80();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x450a4b;\n        fcn.0045bb60();\n    } while( true );\n}\n",
        "token_count": 178
    },
    "0045d940": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045d940(void)\n\n{\n    int32_t iStackX8;\n    \n    do {\n        iStackX8 = iStackX8 + -1;\n    } while (iStackX8 != 0);\n    return;\n}\n",
        "token_count": 55
    },
    "0045e240": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045e240(ulong arg1)\n\n{\n    ulong in_RAX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = arg1;\n            *(*0x20 + -0x40) = 0x4319f4;\n            fcn.00431880(0x12);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 0;\n            *(*0x20 + -0x40) = 0x431a30;\n            arg1 = fcn.00409ce0();\n            *(*0x20 + -0x40) = 0x431a3f;\n            in_RAX = fcn.004334e0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = arg1;\n        *(*0x20 + -8) = 0x431a4f;\n        fcn.0045bb60();\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 452
    },
    "0045e260": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045e260(ulong arg1)\n\n{\n    ulong in_RAX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = arg1;\n            *(*0x20 + -0x40) = 0x431a94;\n            fcn.00431880(0x12);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 0;\n            *(*0x20 + -0x40) = 0x431ad0;\n            arg1 = fcn.00409ce0();\n            *(*0x20 + -0x40) = 0x431adf;\n            in_RAX = fcn.004334e0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = arg1;\n        *(*0x20 + -8) = 0x431aef;\n        fcn.0045bb60();\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 448
    },
    "0045e280": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045e280(ulong arg1, ulong arg2)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg1;\n            *(*0x20 + 0x10) = arg2;\n            *(*0x20 + -0x40) = 0x431b34;\n            fcn.00431880(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 1;\n            *(*0x20 + -0x40) = 0x431b70;\n            arg2 = fcn.00409ce0();\n            *(*0x20 + -0x40) = 0x431b7f;\n            arg1 = fcn.004334e0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg1;\n        *(*0x20 + 0x10) = arg2;\n        *(*0x20 + -8) = 0x431b8f;\n        fcn.0045bb60();\n        arg1 = *(*0x20 + 8);\n        arg2 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 445
    },
    "0045e2c0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045e2c0(ulong arg1, ulong arg2)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg1;\n            *(*0x20 + 0x10) = arg2;\n            *(*0x20 + -0x40) = 0x431c74;\n            fcn.00431880(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 2;\n            *(*0x20 + -0x40) = 0x431cb0;\n            arg2 = fcn.00409ce0();\n            *(*0x20 + -0x40) = 0x431cbf;\n            arg1 = fcn.004334e0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg1;\n        *(*0x20 + 0x10) = arg2;\n        *(*0x20 + -8) = 0x431ccf;\n        fcn.0045bb60();\n        arg1 = *(*0x20 + 8);\n        arg2 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 445
    },
    "0045e2e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045e2e0(ulong arg1, ulong arg2)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg1;\n            *(*0x20 + 0x10) = arg2;\n            *(*0x20 + -0x40) = 0x431d14;\n            fcn.00431880(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 2;\n            *(*0x20 + -0x40) = 0x431d50;\n            arg2 = fcn.00409ce0();\n            *(*0x20 + -0x40) = 0x431d5f;\n            arg1 = fcn.004334e0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg1;\n        *(*0x20 + 0x10) = arg2;\n        *(*0x20 + -8) = 0x431d6f;\n        fcn.0045bb60();\n        arg1 = *(*0x20 + 8);\n        arg2 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 447
    },
    "0045e300": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045e300(ulong arg1)\n\n{\n    ulong in_RAX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = arg1;\n            *(*0x20 + -0x40) = 0x431db4;\n            fcn.00431880(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 3;\n            *(*0x20 + -0x40) = 0x431df0;\n            arg1 = fcn.00409ce0();\n            *(*0x20 + -0x40) = 0x431dff;\n            in_RAX = fcn.004334e0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = arg1;\n        *(*0x20 + -8) = 0x431e0f;\n        fcn.0045bb60();\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 449
    },
    "0045e320": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045e320(ulong arg1)\n\n{\n    ulong in_RAX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = arg1;\n            *(*0x20 + -0x40) = 0x431e54;\n            fcn.00431880(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 3;\n            *(*0x20 + -0x40) = 0x431e90;\n            arg1 = fcn.00409ce0();\n            *(*0x20 + -0x40) = 0x431e9f;\n            in_RAX = fcn.004334e0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = arg1;\n        *(*0x20 + -8) = 0x431eaf;\n        fcn.0045bb60();\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 450
    },
    "0045e340": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045e340(ulong noname_0, ulong arg2)\n\n{\n    ulong unaff_RBX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg2;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x40) = 0x431ef4;\n            fcn.00431880(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 4;\n            *(*0x20 + -0x40) = 0x431f30;\n            unaff_RBX = fcn.00409ce0();\n            *(*0x20 + -0x40) = 0x431f3f;\n            arg2 = fcn.004334e0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg2;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -8) = 0x431f4f;\n        fcn.0045bb60();\n        arg2 = *(*0x20 + 8);\n        unaff_RBX = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 462
    },
    "0045e360": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045e360(ulong noname_0, ulong arg2)\n\n{\n    ulong unaff_RBX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg2;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x40) = 0x431f94;\n            fcn.00431880(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 4;\n            *(*0x20 + -0x40) = 0x431fd0;\n            unaff_RBX = fcn.00409ce0();\n            *(*0x20 + -0x40) = 0x431fdf;\n            arg2 = fcn.004334e0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg2;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -8) = 0x431fef;\n        fcn.0045bb60();\n        arg2 = *(*0x20 + 8);\n        unaff_RBX = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 458
    },
    "004602a0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint64_t fcn.004602a0(uint64_t param_1)\n\n{\n    uint64_t *puVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t **ppiVar6;\n    ulong *puVar7;\n    uchar uVar8;\n    char cVar9;\n    uint32_t uVar10;\n    int64_t iVar11;\n    int64_t *arg1;\n    uint64_t arg1_00;\n    uint64_t arg2;\n    ulong uVar12;\n    uchar *puVar13;\n    uchar *puVar14;\n    uchar *puVar15;\n    uint64_t uVar16;\n    int64_t *piVar17;\n    uint64_t arg3;\n    uint64_t arg4;\n    int64_t in_GS_OFFSET;\n    bool bVar18;\n    uint uVar19;\n    uint uVar20;\n    uint uVar21;\n    uint uVar22;\n    uchar auStack24 [16];\n    \n    uVar19 = 0;\n    uVar20 = 0;\n    uVar21 = 0;\n    uVar22 = 0;\n    iVar4 = **(in_GS_OFFSET + 0x28);\n    puVar15 = &stack0xfffffffffffffff8;\n    uVar12 = 0x32;\n    iVar5 = fcn.00433c80();\n    puVar13 = auStack24;\n    do {\n        uVar8 = param_1;\n        puVar1 = iVar4 + 0x10;\n        puVar14 = puVar13;\n        if (*puVar1 <= puVar13 + -0x78 && puVar13 + -0x78 != *puVar1) {\n            puVar14 = puVar13 + -0xf8;\n            *(puVar13 + -8) = puVar15;\n            puVar15 = puVar13 + -8;\n            *(puVar13 + 8) = iVar5;\n            *(puVar13 + 0x10) = uVar12;\n            if ((iVar5 != 0) && ((*(iVar5 + 0x17) & 0x1f) == 0x13)) {\n                *(puVar13 + -0x98) = CONCAT412(uVar22, CONCAT48(uVar21, CONCAT44(uVar20, uVar19)));\n                *(puVar13 + -0x88) = CONCAT412(uVar22, CONCAT48(uVar21, CONCAT44(uVar20, uVar19)));\n                *(puVar13 + -0x78) = CONCAT412(uVar22, CONCAT48(uVar21, CONCAT44(uVar20, uVar19)));\n                *(puVar13 + -0x68) = CONCAT412(uVar22, CONCAT48(uVar21, CONCAT44(uVar20, uVar19)));\n                if ((*(iVar5 + 0x14) & 1) == 0) {\n                    iVar11 = 0x38;\n                }\n                else {\n                    iVar11 = 0x48;\n                }\n                arg1_00 = *(iVar5 + 0x30);\n                if (arg1_00 < 0x100001) {\n                    *(puVar13 + -0xb0) = iVar5;\n                    *(puVar13 + -0xc0) = iVar11 + iVar5;\n                    *(puVar13 + -0xb8) = uVar12;\n                    *(puVar13 + -200) = arg1_00;\n                    iVar11 = 0;\n                    while (iVar11 < arg1_00) {\n                        *(puVar13 + -0xd0) = iVar11;\n                        *(puVar13 + -0x100) = 0x459f65;\n                        fcn.0044e080();\n                        iVar5 = *(puVar13 + -0xb0);\n                        arg1_00 = *(puVar13 + -200);\n                        iVar11 = *(puVar13 + -0xd0) + 1;\n                    }\n                    arg2 = *(puVar13 + -0x78) + 7U & 0xfffffffffffffff8;\n                    *(puVar13 + -0x78) = arg2;\n                    *(puVar13 + -0x60) = arg2;\n                    uVar2 = *(iVar5 + 0x14);\n                    arg1_00 = uVar2;\n                    uVar3 = *(iVar5 + 0x30);\n                    piVar17 = uVar3;\n                    arg1 = (*(iVar5 + 0x32) & 0x7fff) + uVar3 & 0xffff;\n                    if (piVar17 <= arg1) {\n                        arg4 = uVar3;\n                        arg3 = piVar17 << 3;\n                        uVar16 = piVar17 + -0x20000 >> 0x3f & arg3;\n                        arg1 = arg1 - arg4;\n                        if (arg1 == 0x1) {\n                            if ((uVar2 & 1) == 0) {\n                                iVar11 = 0x38;\n                            }\n                            else {\n                                iVar11 = 0x48;\n                            }\n                            arg1 = *(iVar11 + iVar5 + uVar16);\n                            if (*arg1 == 8) {\n                                if ((uVar2 & 1) == 0) {\n                                    iVar11 = 0x38;\n                                }\n                                else {\n                                    iVar11 = 0x48;\n                                }\n                                uVar10 = *(*(iVar11 + iVar5 + uVar16) + 0x17) & 0x1f;\n                                arg1 = uVar10;\n                                cVar9 = uVar10;\n                                if ((cVar9 != '\\r') && (cVar9 != '\\x0e')) {\n                                    if (*0x795388 == 0) {\n                                        *(puVar13 + -0x78) = arg2 + 8;\n                                    }\n                                    arg1 = (*(puVar13 + -0x78) + 7U & 0xfffffffffffffff8) + *(puVar13 + -0x70);\n                                    if (arg1 < 0x201) {\n                                        *(puVar13 + -0x100) = 0x45a09c;\n                                        fcn.0040a460();\n                                        iVar5 = *0x801988;\n                                        *(puVar13 + -0xa8) = *(puVar13 + -0xb8);\n                                        puVar13[-0xa0] = 0;\n                                        *(puVar13 + -0x100) = 0x45a0c5;\n                                        ppiVar6 = fcn.0040d560(puVar13 + -0xa8);\n                                        arg1 = *ppiVar6;\n                                        if (iVar5 != '\\0') {\n                                            *(puVar13 + -0xd8) = arg1;\n                                            *(puVar13 + -0x100) = 0x45a265;\n                                            fcn.0040a680();\n                                            return *(puVar13 + -0xd8) * 5 + 0x460f60;\n                                        }\n                                        iVar5 = *0x801988;\n                                        if (*0x801988 == 0) {\n                                            *(puVar13 + -0x100) = 0x45a0df;\n                                            iVar5 = fcn.0040d0c0();\n                                            if (*0x801c20 != 0) {\n                                                *(puVar13 + -0x100) = 0x45a0fd;\n                                                fcn.0045dda0(arg1, arg2, arg3, arg4);\n                                                iVar5 = *0x801988;\n                                            }\n                                        }\n                                        *0x801988 = iVar5;\n                                        bVar18 = *0x801990 < 2000;\n                                        if (*0x801990 < 2000) {\n                                            *(puVar13 + -0x108) = puVar15;\n                                            *(puVar13 + -0x100) = 0x45a12f;\n                                            iVar5 = fcn.0045e4f0();\n                                            puVar15 = *(puVar13 + -0x108);\n                                            uVar12 = *(puVar13 + -0xb8);\n                                            *(puVar13 + -0x58) = uVar12;\n                                            *(puVar13 + -0x48) = *(puVar13 + -0x98);\n                                            *(puVar13 + -0x44) = *(puVar13 + -0x94);\n                                            *(puVar13 + -0x40) = *(puVar13 + -0x90);\n                                            *(puVar13 + -0x3c) = *(puVar13 + -0x8c);\n                                            *(puVar13 + -0x38) = *(puVar13 + -0x88);\n                                            *(puVar13 + -0x34) = *(puVar13 + -0x84);\n                                            *(puVar13 + -0x30) = *(puVar13 + -0x80);\n                                            *(puVar13 + -0x2c) = *(puVar13 + -0x7c);\n                                            *(puVar13 + -0x28) = *(puVar13 + -0x78);\n                                            *(puVar13 + -0x24) = *(puVar13 + -0x74);\n                                            *(puVar13 + -0x20) = *(puVar13 + -0x70);\n                                            *(puVar13 + -0x1c) = *(puVar13 + -0x6c);\n                                            *(puVar13 + -0x18) = *(puVar13 + -0x68);\n                                            *(puVar13 + -0x14) = *(puVar13 + -100);\n                                            *(puVar13 + -0x10) = *(puVar13 + -0x60);\n                                            *(puVar13 + -0xc) = *(puVar13 + -0x5c);\n                                            if (bVar18) {\n                                                *(puVar13 + -0xe0) = iVar5;\n                                                *(puVar13 + -200) = iVar5 * 5;\n                                                if (*0x801c20 == 0) {\n                                                    *(puVar13 + -0x108) = puVar15;\n                                                    *(puVar13 + -0x100) = 0x45a1cf;\n                                                    fcn.0045e85a();\n                                                }\n                                                else {\n                                                    *(puVar13 + -0x100) = 0x45a1ec;\n                                                    fcn.00410240(puVar13 + -0x58);\n                                                    uVar12 = *(puVar13 + -0xb8);\n                                                }\n                                                *(puVar13 + -0xa8) = uVar12;\n                                                puVar13[-0xa0] = 0;\n                                                *(puVar13 + -0x100) = 0x45a213;\n                                                puVar7 = fcn.0040d7a0(puVar13 + -0xa8);\n                                                *puVar7 = *(puVar13 + -0xe0);\n                                                *0x801990 = *0x801990 + 1;\n                                                *(puVar13 + -0x100) = 0x45a231;\n                                                fcn.0040a680();\n                                                return *(puVar13 + -200) + 0x460f60;\n                                            }\n                                            arg1 = 0x7d0;\n                                            *(puVar13 + -0x100) = 0x45a293;\n                                            fcn.0045e240(2000);\n                                        }\n                                        *(puVar13 + -0x100) = 0x45a2a5;\n                                        fcn.0040a680();\n                                        *(puVar13 + -0x100) = 0x45a2b6;\n                                        fcn.00433c80();\n                                    }\n                                    *(puVar13 + -0x100) = 0x45a2c9;\n                                    fcn.004334e0();\n                                }\n                                *(puVar13 + -0x100) = 0x45a2dc;\n                                fcn.004334e0();\n                            }\n                            *(puVar13 + -0x100) = 0x45a2ef;\n                            fcn.004334e0();\n                        }\n                        *(puVar13 + -0x100) = 0x45a305;\n                        fcn.004334e0();\n                    }\n                    *(puVar13 + -0x100) = 0x45a30d;\n                    fcn.0045e300(arg1);\n                }\n                *(puVar13 + -0x100) = 0x45a31a;\n                fcn.0045e280(arg1_00, 0x100000);\n                uVar8 = arg1_00;\n            }\n            uVar12 = 0x7329b8;\n            *(puVar13 + -0x100) = 0x45a32d;\n            iVar5 = fcn.004334e0();\n        }\n        *(puVar14 + 8) = iVar5;\n        *(puVar14 + 0x10) = uVar12;\n        puVar14[0x18] = uVar8;\n        *(puVar14 + -8) = 0x45a345;\n        fcn.0045bb60();\n        iVar5 = *(puVar14 + 8);\n        uVar12 = *(puVar14 + 0x10);\n        param_1 = puVar14[0x18];\n        puVar13 = puVar14;\n    } while( true );\n}\n",
        "token_count": 2950
    }
}