{
    "null": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint entry0(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t extraout_ECX;\n    uint var_28ch;\n    uint var_288h;\n    uint lpString2;\n    uint lpString1;\n    uchar var_27ch;\n    uchar var_27bh;\n    int32_t var_278h;\n    uint32_t var_274h;\n    int32_t var_26ch;\n    int32_t var_264h;\n    int32_t var_25ch;\n    int32_t var_258h;\n    int32_t var_254h;\n    int32_t var_250h;\n    int32_t var_24ch;\n    uint32_t var_248h;\n    uint lpFindFileData;\n    uint lpString;\n    uint lpSystemTime;\n    uint lpFileName;\n    uint lpRootPathName;\n    uint lpBuffer;\n    uint var_4h;\n    \n    var_254h = 0;\n    (*_sym.imp.KERNEL32.dll_FindFirstFileA)(&lpFileName, &lpFindFileData);\n    *0x410034 = 8;\n    var_25ch = 0x40f2ec;\n    var_250h = *0x40f0ec + 0x20700;\n    var_248h = 0x40f3b4;\n    var_264h = *0x40f448 + 4;\n    var_258h = *0x40f448 + -3;\n    if (*0x40f038 == 0) {\n        var_24ch = *0x40f248;\n    }\n    else {\n        var_24ch = 0;\n    }\n    var_274h = *0x40f1bc | 0x29;\n    (*_sym.imp.KERNEL32.dll_GlobalAddAtomW)(&lpString);\n    *0x410014 = 10;\n    var_264h = var_264h + var_254h;\n    var_250h = var_250h + *0x40f470;\n    var_254h = var_254h - var_258h;\n    var_26ch = var_24ch + 0x3e4c4;\n    var_4h._0_1_ = 0x61;\n    var_4h._1_1_ = 0x31;\n    var_4h._2_1_ = 0;\n    var_4h._3_1_ = 0;\n    var_258h = var_258h + 0xb;\n    var_25ch = var_25ch + 2;\n    var_24ch = var_24ch + 7;\n    (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(&lpBuffer, 0xca);\n    var_274h = var_274h + 8;\n    var_278h = 0;\n    do {\n        if (0x15ec15c < var_278h) {\n            var_248h = var_248h & 0x44;\n            (*_sym.imp.KERNEL32.dll_GetDriveTypeW)(&lpRootPathName);\n            var_254h = var_254h + var_248h;\n            (*_sym.imp.KERNEL32.dll_GetLocalTime)(&lpSystemTime);\n            return 0;\n        }\n        var_250h = var_250h + *0x40f470;\n        var_254h = var_254h + var_248h;\n        iVar1 = var_24ch + 7;\n        if (var_278h == 0x151394c) {\n            *0x410010 = _sym.imp.KERNEL32.dll_GetWindowsDirectoryA;\n            var_24ch = var_24ch + 0xe;\n            lpString1._0_1_ = 0x31;\n            lpString1._1_1_ = 0x38;\n            lpString1._2_1_ = 0;\n            lpString1._3_1_ = 0;\n            var_27ch = 0;\n            var_27bh = 0;\n            lpString2._0_1_ = 0x31;\n            lpString2._1_1_ = 0x38;\n            lpString2._2_1_ = 0;\n            var_26ch = var_26ch + var_24ch;\n            (*_sym.imp.KERNEL32.dll_lstrcatA)(&lpString1, &lpString2);\n            var_250h = var_250h + *0x40f470;\n            iVar1 = var_24ch;\n            if (extraout_ECX != 0x19c12624) {\n                if (((*0x410010)[-2] != 0xcc) && ((*0x410010)[-3] != 0x90)) {\n                    return 0;\n                }\n                var_254h = var_254h - var_258h;\n    // WARNING: Could not recover jumptable at 0x004036f6. Too many branches\n    // WARNING: Treating indirect jump as call\n                uVar2 = (*(var_278h + -0x110d3ce))();\n                return uVar2;\n            }\n        }\n        var_24ch = iVar1;\n        var_278h = var_278h + 1;\n    } while( true );\n}\n",
        "token_count": 1185
    }
}