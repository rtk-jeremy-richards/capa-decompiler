{
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "0100b164": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0100b164(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    code *pcVar5;\n    code *pcVar6;\n    int32_t iVar7;\n    uint arg_8h_00;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    code *var_18h;\n    code *var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    pcVar6 = _sym.imp.KERNEL32.dll_EncodePointer;\n    var_4h = *0x103c008 ^ &stack0xfffffffc;\n    var_1ch = arg_8h;\n    iVar7 = 0;\n    arg_8h_00 = 0;\n    var_20h = arg_ch;\n    pcVar1 = (*_sym.imp.KERNEL32.dll_EncodePointer)();\n    var_18h = pcVar1;\n    var_14h = fcn.0100789c();\n    if (*0x103ef64 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(L\"USER32.DLL\", 0, 0x800);\n        if (((iVar2 == 0) &&\n            ((iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar2 != 0x57 ||\n             (iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(L\"USER32.DLL\", 0, 0),  iVar2 == 0)))) ||\n           (iVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"MessageBoxW\"),  iVar3 == 0)) goto code_r0x0100b339;\n        *0x103ef64 = (*pcVar6)(iVar3);\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"GetActiveWindow\");\n        *0x103ef68 = (*pcVar6)(uVar4);\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"GetLastActivePopup\");\n        *0x103ef6c = (*pcVar6)(uVar4);\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"GetUserObjectInformationW\");\n        *0x103ef74 = (*pcVar6)(uVar4);\n        pcVar1 = var_18h;\n        if (*0x103ef74 != NULL) {\n            uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"GetProcessWindowStation\");\n            *0x103ef70 = (*pcVar6)(uVar4);\n            pcVar1 = var_18h;\n        }\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    if (iVar2 == 0) {\n        if (var_14h != NULL) {\n            (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x103ef64);\n            goto code_r0x0100b339;\n        }\n    }\n    else {\n        if (var_1ch != 0) {\n            (*_sym.imp.KERNEL32.dll_OutputDebugStringW)(var_1ch);\n        }\n        if (var_14h != NULL) goto code_r0x0100b339;\n    }\n    pcVar6 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if ((*0x103ef70 == pcVar1) || (*0x103ef74 == pcVar1)) {\ncode_r0x0100b2ef:\n        if ((((*0x103ef68 != pcVar1) && (pcVar5 = (*pcVar6)(*0x103ef68),  pcVar5 != NULL)) &&\n            (iVar7 = (*pcVar5)(),  iVar7 != 0)) &&\n           ((*0x103ef6c != pcVar1 && (pcVar1 = (*pcVar6)(*0x103ef6c),  pcVar1 != NULL)))) {\n            iVar7 = (*pcVar1)(iVar7);\n        }\n    }\n    else {\n        var_14h = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x103ef70);\n        var_18h = (*pcVar6)(*0x103ef74);\n        if (((var_14h == NULL) || (var_18h == NULL)) ||\n           (((iVar2 = (*var_14h)(),  iVar2 != 0 && (iVar2 = (*var_18h)(iVar2, 1, &var_10h, 0xc, &var_24h),  iVar2 != 0))\n            && ((var_8h & 1) != 0)))) goto code_r0x0100b2ef;\n        arg_10h = arg_10h | 0x200000;\n    }\n    pcVar6 = (*pcVar6)(*0x103ef64);\n    if (pcVar6 != NULL) {\n        (*pcVar6)(iVar7, var_1ch, var_20h, arg_10h);\n    }\ncode_r0x0100b339:\n    fcn.01002695(arg_8h_00);\n    return;\n}\n",
        "token_count": 1196
    },
    "01018910": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_88h\n// WARNING: Removing unreachable block (ram,0x01018e8d)\n// WARNING: Removing unreachable block (ram,0x01018e9a)\n// WARNING: Removing unreachable block (ram,0x01018ea0)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.01018910(int32_t arg_8h, uint32_t arg_ch, uint arg_10h, int32_t arg_14h, uint32_t arg_18h, int16_t *arg_1ch)\n\n{\n    int16_t *piVar1;\n    code *pcVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    char cVar8;\n    uint16_t uVar9;\n    int32_t *piVar10;\n    int32_t *piVar11;\n    int32_t iVar12;\n    uint32_t uVar13;\n    uint *puVar14;\n    int16_t *piVar15;\n    uint16_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    int32_t iVar19;\n    uint16_t uVar20;\n    uint16_t uVar21;\n    int32_t iVar22;\n    uint16_t *puVar23;\n    int32_t iVar24;\n    uint32_t uVar25;\n    bool bVar26;\n    char *pcVar27;\n    uint16_t *var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    int32_t var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    int16_t *var_58h;\n    int32_t var_54h;\n    uint32_t var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    uint32_t var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint16_t var_20h;\n    int32_t var_1eh;\n    uint32_t var_1ah;\n    uint var_16h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x103c008 ^ &stack0xfffffffc;\n    uVar16 = arg_10h & 0x8000;\n    var_30h = 0xcccccccc;\n    uVar21 = arg_10h & 0x7fff;\n    var_2ch = 0xcccccccc;\n    var_28h._0_2_ = 0xcccc;\n    var_28h._2_2_ = 0x3ffb;\n    if ((arg_10h & 0x8000) == 0) {\n        *(arg_1ch + 1) = 0x20;\n    }\n    else {\n        *(arg_1ch + 1) = 0x2d;\n    }\n    if ((arg_10h & 0x7fff) == 0) {\n        if ((arg_ch == 0) && (arg_8h == 0)) {\n            *(arg_1ch + 3) = 1;\n            *arg_1ch = 0;\n            *(arg_1ch + 1) = ((uVar16 != 0x8000) - 1U & 0xd) + 0x20;\n            arg_1ch[2] = 0x30;\n            arg_8h = CONCAT22(var_1eh._2_2_, var_1eh);\n            goto code_r0x0101928d;\n        }\n    }\n    else if (uVar21 == 0x7fff) {\n        *arg_1ch = 1;\n        if (((arg_ch == 0x80000000) && (arg_8h == 0)) || ((arg_ch & 0x40000000) != 0)) {\n            if (((arg_10h & 0x8000) == 0) || (arg_ch != 0xc0000000)) {\n                if ((arg_ch != 0x80000000) || (arg_8h != 0)) goto code_r0x01018a20;\n                pcVar27 = \"1#INF\";\n            }\n            else {\n                if (arg_8h != 0) {\ncode_r0x01018a20:\n                    pcVar27 = \"1#QNAN\";\n                    goto code_r0x01018a25;\n                }\n                pcVar27 = \"1#IND\";\n            }\n            iVar22 = fcn.01009bff(arg_1ch + 2, 0x16, pcVar27);\n            if (iVar22 != 0) goto code_r0x010192d7;\n            *(arg_1ch + 3) = 5;\n        }\n        else {\n            pcVar27 = 0x1036384;\ncode_r0x01018a25:\n            iVar22 = fcn.01009bff(arg_1ch + 2, 0x16, pcVar27);\n            if (iVar22 != 0) {\ncode_r0x010192d7:\n                fcn.01009fad(0, 0, 0, 0, 0);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            *(arg_1ch + 3) = 6;\n        }\n        arg_8h = CONCAT22(var_1eh._2_2_, var_1eh);\n        goto code_r0x0101928d;\n    }\n    var_1ah._0_2_ = arg_ch;\n    var_1ah._2_2_ = arg_ch >> 0x10;\n    iVar22 = 0x103cec0;\n    var_16h._0_1_ = uVar21;\n    var_16h._1_1_ = uVar21 >> 8;\n    var_58h = 0x5;\n    var_48h._0_2_ = uVar21 * 0x4d10 + -0x134312f4 + ((uVar21 >> 8) + (arg_ch >> 0x18) * 2) * 0x4d >> 0x10;\n    var_1eh._0_2_ = arg_8h;\n    var_1eh._2_2_ = arg_8h >> 0x10;\n    var_20h = 0;\n    uVar4 = var_48h;\n    bVar26 = -uVar4 == 0;\n    if (bVar26) {\ncode_r0x01018de0:\n        uVar17 = CONCAT22(var_1ah, var_1eh._2_2_);\n        uVar4 = arg_8h << 0x10;\n    }\n    else {\n        var_44h = -uVar4;\n        if (0 < uVar4) {\n            iVar22 = 0x103d020;\n            bVar26 = uVar4 == 0;\n            var_44h = uVar4;\n        }\n        if (bVar26) goto code_r0x01018de0;\n        uVar4 = arg_8h << 0x10;\n        uVar17 = CONCAT22(var_1ah, var_1eh._2_2_);\n        var_40h = uVar4;\n        do {\n            var_1ah._2_2_ = arg_ch >> 0x10;\n            iVar24 = 0;\n            uVar13 = var_44h >> 3;\n            iVar22 = iVar22 + 0x54;\n            if ((var_44h & 7) != 0) {\n                piVar10 = (var_44h & 7) * 0xc + iVar22;\n                piVar11 = piVar10;\n                if (0x7fff < *piVar10) {\n                    piVar11 = &var_3ch;\n                    var_3ch._0_2_ = *piVar10;\n                    var_3ch._2_2_ = *piVar10 >> 0x10;\n                    var_38h._0_2_ = piVar10[1];\n                    var_38h._2_2_ = piVar10[1] >> 0x10;\n                    var_34h = piVar10[2];\n                    iVar5 = CONCAT22(var_38h, var_3ch._2_2_) + -1;\n                    var_3ch._2_2_ = iVar5;\n                    var_38h._0_2_ = iVar5 >> 0x10;\n                }\n                uVar20 = *(piVar11 + 10) & 0x7fff;\n                uVar3 = CONCAT11(var_16h._1_1_, var_16h) & 0x7fff;\n                uVar21 = (*(piVar11 + 10) ^ CONCAT11(var_16h._1_1_, var_16h)) & 0x8000;\n                uVar9 = uVar3 + uVar20;\n                var_10h._0_1_ = 0;\n                var_10h._1_1_ = 0;\n                var_10h._2_2_ = 0;\n                var_ch._0_2_ = 0;\n                var_ch._2_2_ = var_10h._2_2_;\n                var_8h._0_2_ = var_ch;\n                var_8h._2_2_ = var_10h._2_2_;\n                if (((uVar3 < 0x7fff) && (uVar20 < 0x7fff)) && (uVar9 < 0xbffe)) {\n                    if (uVar9 < 0x3fc0) {\ncode_r0x01018b73:\n                        var_16h._0_1_ = 0;\n                        var_16h._1_1_ = 0;\n                        var_1ah._2_2_ = var_ch;\n                        goto code_r0x01018dc0;\n                    }\n                    if (((uVar3 == 0) &&\n                        (uVar9 = uVar9 + 1, \n                        (CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_)) & 0x7fffffff) == 0)) &&\n                       ((uVar17 == 0 && (var_40h == 0)))) {\n                        var_16h._0_1_ = 0;\n                        var_16h._1_1_ = 0;\n                        uVar4 = var_40h;\n                        goto code_r0x01018dd0;\n                    }\n                    if (((uVar20 == 0) && (uVar9 = uVar9 + 1,  (piVar11[2] & 0x7fffffffU) == 0)) &&\n                       ((piVar11[1] == 0 && (*piVar11 == 0)))) goto code_r0x01018b73;\n                    puVar14 = &var_ch;\n                    var_50h = 5;\n                    iVar5 = iVar24;\n                    do {\n                        if (0 < var_50h) {\n                            var_88h = &var_20h + iVar5;\n                            piVar10 = piVar11 + 2;\n                            iVar19 = var_50h;\n                            do {\n                                uVar4 = puVar14[-1] + *var_88h * *piVar10;\n                                if ((uVar4 < puVar14[-1]) || (iVar12 = iVar24,  uVar4 < *var_88h * *piVar10)) {\n                                    iVar12 = 1;\n                                }\n                                puVar14[-1] = uVar4;\n                                if (iVar12 != 0) {\n                                    *puVar14 = *puVar14 + 1;\n                                }\n                                var_88h = var_88h + 1;\n                                piVar10 = piVar10 + -2;\n                                iVar19 = iVar19 + -1;\n                            } while (0 < iVar19);\n                        }\n                        puVar14 = puVar14 + 2;\n                        iVar5 = iVar5 + 1;\n                        var_50h = var_50h + -1;\n                    } while (0 < var_50h);\n                    var_40h = CONCAT22(var_8h._2_2_, var_8h);\n                    uVar9 = uVar9 + 0xc002;\n                    uVar4 = CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h));\n                    if (uVar9 < 1) {\ncode_r0x01018caf:\n                        uVar9 = uVar9 - 1;\n                        if (-1 < uVar9) goto code_r0x01018d20;\n                        var_50h = -uVar9;\n                        uVar9 = 0;\n                        uVar17 = var_40h;\n                        do {\n                            if ((var_10h & 1) != 0) {\n                                iVar24 = iVar24 + 1;\n                            }\n                            uVar25 = CONCAT22(var_ch._2_2_, var_ch);\n                            var_ch._2_2_ = var_ch._2_2_ >> 1 | (uVar17 << 0x1f) >> 0x10;\n                            uVar18 = uVar4 >> 1;\n                            var_40h = uVar17 >> 1;\n                            uVar4 = uVar18 | uVar25 << 0x1f;\n                            var_50h = var_50h - 1;\n                            var_8h._0_2_ = var_40h;\n                            var_8h._2_2_ = uVar17 >> 0x11;\n                            var_ch._0_2_ = uVar25 >> 1;\n                            var_10h._0_1_ = uVar18;\n                            var_10h._1_1_ = uVar18 >> 8;\n                            var_10h._2_2_ = uVar4 >> 0x10;\n                            uVar17 = var_40h;\n                        } while (var_50h != 0);\n                        if (iVar24 == 0) goto code_r0x01018d20;\n                        uVar3 = uVar18 | 1;\n                        var_10h._0_1_ = uVar3;\n                        uVar4 = uVar18 | 1;\n                    }\n                    else {\n                        do {\n                            if (var_40h < 0) break;\n                            iVar5 = CONCAT22(var_ch._2_2_, var_ch) * 2;\n                            uVar3 = var_ch._2_2_ >> 0xf;\n                            var_ch._0_2_ = iVar5 | uVar4 >> 0x1f;\n                            uVar4 = uVar4 * 2;\n                            var_ch._2_2_ = iVar5 >> 0x10;\n                            uVar17 = var_40h * 2;\n                            var_10h._0_1_ = uVar4;\n                            var_10h._1_1_ = uVar4 >> 8;\n                            var_10h._2_2_ = uVar4 >> 0x10;\n                            var_40h = uVar17 | uVar3;\n                            uVar9 = uVar9 - 1;\n                            var_8h._0_2_ = var_40h;\n                            var_8h._2_2_ = uVar17 >> 0x10;\n                        } while (0 < uVar9);\n                        if (uVar9 < 1) goto code_r0x01018caf;\ncode_r0x01018d20:\n                        uVar3 = CONCAT11(var_10h._1_1_, var_10h);\n                    }\n                    if ((0x8000 < uVar3) || ((uVar4 & 0x1ffff) == 0x18000)) {\n                        if (CONCAT22(var_ch, var_10h._2_2_) == -1) {\n                            var_10h._2_2_ = 0;\n                            var_ch._0_2_ = 0;\n                            if (CONCAT22(var_8h, var_ch._2_2_) == -1) {\n                                var_ch._2_2_ = 0;\n                                var_8h._0_2_ = 0;\n                                if (var_8h._2_2_ == 0xffff) {\n                                    var_8h._2_2_ = 0x8000;\n                                    uVar9 = uVar9 + 1;\n                                }\n                                else {\n                                    var_8h._2_2_ = var_8h._2_2_ + 1;\n                                }\n                            }\n                            else {\n                                iVar24 = CONCAT22(var_8h, var_ch._2_2_) + 1;\n                                var_ch._2_2_ = iVar24;\n                                var_8h._0_2_ = iVar24 >> 0x10;\n                            }\n                            var_40h = CONCAT22(var_8h._2_2_, var_8h);\n                        }\n                        else {\n                            iVar24 = CONCAT22(var_ch, var_10h._2_2_) + 1;\n                            var_10h._2_2_ = iVar24;\n                            var_ch._0_2_ = iVar24 >> 0x10;\n                        }\n                    }\n                    if (0x7ffe < uVar9) goto code_r0x01018da9;\n                    var_16h._1_1_ = uVar9 >> 8 | uVar21 >> 8;\n                    var_20h = var_10h._2_2_;\n                    var_1eh._0_2_ = var_ch;\n                    var_1eh._2_2_ = var_ch._2_2_;\n                    uVar4 = CONCAT22(var_ch, var_10h._2_2_);\n                    var_1ah._0_2_ = var_40h;\n                    var_1ah._2_2_ = var_40h >> 0x10;\n                    uVar17 = CONCAT22(var_1ah, var_ch._2_2_);\n                    var_16h._0_1_ = uVar9;\n                }\n                else {\ncode_r0x01018da9:\n                    iVar24 = ((uVar21 == 0) - 1 & 0x80000000) + 0x7fff8000;\n                    var_1ah._2_2_ = iVar24;\n                    var_16h._0_1_ = iVar24 >> 0x10;\n                    var_16h._1_1_ = iVar24 >> 0x18;\ncode_r0x01018dc0:\n                    uVar17 = 0;\n                    var_20h = 0;\n                    var_1eh._0_2_ = 0;\n                    var_1eh._2_2_ = 0;\n                    var_1ah._0_2_ = 0;\n                    uVar4 = uVar17;\n                }\n                arg_ch = CONCAT22(var_1ah._2_2_, var_1ah);\n                arg_8h = CONCAT22(var_1eh._2_2_, var_1eh);\n                var_40h = uVar4;\n            }\ncode_r0x01018dd0:\n            var_44h = uVar13;\n        } while (uVar13 != 0);\n    }\n    var_1ah._2_2_ = arg_ch >> 0x10;\n    uVar13 = CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_));\n    var_1ah = arg_ch;\n    if (0x3ffe < uVar13 >> 0x10) {\n        var_48h._0_2_ = var_48h + 1;\n        var_78h = 0;\n        var_10h._0_1_ = 0;\n        var_10h._1_1_ = 0;\n        var_10h._2_2_ = 0;\n        var_ch._0_2_ = 0;\n        var_ch._2_2_ = 0;\n        var_8h._0_2_ = 0;\n        var_8h._2_2_ = 0;\n        uVar13 = uVar13 >> 0x10 & 0x7fff;\n        var_4ch = uVar13 + 0x3ffb;\n        if ((uVar13 < 0x7fff) && (var_4ch < 0xbffe)) {\n            if (0x3fbf < var_4ch) {\n                if ((((uVar13 == 0) &&\n                     (var_4ch = uVar13 + 0x3ffc, \n                     (CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_)) & 0x7fffffff) == 0)) && (uVar17 == 0))\n                   && (uVar4 == 0)) {\n                    var_16h._0_1_ = 0;\n                    var_16h._1_1_ = 0;\n                    goto code_r0x01019099;\n                }\n                puVar14 = &var_ch;\n                var_50h = 0;\n                do {\n                    if (0 < var_58h) {\n                        puVar6 = &var_28h;\n                        puVar23 = &var_20h + var_50h;\n                        iVar22 = var_58h;\n                        do {\n                            uVar4 = puVar14[-1] + *puVar6 * *puVar23;\n                            if ((uVar4 < puVar14[-1]) || (uVar4 < *puVar6 * *puVar23)) {\n                                bVar26 = true;\n                            }\n                            else {\n                                bVar26 = false;\n                            }\n                            puVar14[-1] = uVar4;\n                            if (bVar26) {\n                                *puVar14 = *puVar14 + 1;\n                            }\n                            puVar23 = puVar23 + 1;\n                            puVar6 = puVar6 + -2;\n                            iVar22 = iVar22 + -1;\n                        } while (0 < iVar22);\n                    }\n                    puVar14 = puVar14 + 2;\n                    var_50h = var_50h + 1;\n                    var_58h = var_58h + -1;\n                } while (0 < var_58h);\n                var_1ah = CONCAT22(var_8h._2_2_, var_8h);\n                var_4ch = var_4ch + 0xc002;\n                if (var_4ch < 1) {\n                    uVar4 = CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h));\ncode_r0x01018fd2:\n                    uVar21 = var_4ch + 0xffff;\n                    if (-1 < uVar21) goto code_r0x01018f77;\n                    var_58h = -(var_4ch + 0xffff) & 0xffff;\n                    uVar21 = uVar21 + var_58h;\n                    do {\n                        uVar17 = var_1ah;\n                        if ((var_10h & 1) != 0) {\n                            var_78h = var_78h + 1;\n                        }\n                        uVar13 = CONCAT22(var_ch._2_2_, var_ch);\n                        uVar25 = uVar4 >> 1;\n                        var_ch._2_2_ = var_ch._2_2_ >> 1 | (uVar17 << 0x1f) >> 0x10;\n                        uVar4 = uVar25 | uVar13 << 0x1f;\n                        var_1ah = uVar17 >> 1;\n                        var_58h = var_58h - 1;\n                        var_ch._0_2_ = uVar13 >> 1;\n                        var_10h._0_1_ = uVar25;\n                        var_10h._1_1_ = uVar25 >> 8;\n                        var_10h._2_2_ = uVar4 >> 0x10;\n                    } while (var_58h != NULL);\n                    var_8h._0_2_ = var_1ah;\n                    var_8h._2_2_ = uVar17 >> 0x11;\n                    if (var_78h == 0) goto code_r0x01018f77;\n                    uVar9 = uVar25 | 1;\n                    var_10h._0_1_ = uVar9;\n                    uVar4 = uVar25 | 1;\n                }\n                else {\n                    uVar4 = CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h));\n                    do {\n                        if (var_1ah < 0) break;\n                        iVar22 = CONCAT22(var_ch._2_2_, var_ch) * 2;\n                        uVar21 = var_ch._2_2_ >> 0xf;\n                        var_ch._0_2_ = iVar22 | uVar4 >> 0x1f;\n                        uVar17 = var_1ah * 2;\n                        var_ch._2_2_ = iVar22 >> 0x10;\n                        uVar4 = uVar4 * 2;\n                        var_10h._0_1_ = uVar4;\n                        var_10h._1_1_ = uVar4 >> 8;\n                        var_10h._2_2_ = uVar4 >> 0x10;\n                        var_1ah = uVar17 | uVar21;\n                        var_4ch = var_4ch + 0xffff;\n                        var_8h._0_2_ = var_1ah;\n                        var_8h._2_2_ = uVar17 >> 0x10;\n                    } while (0 < var_4ch);\n                    uVar21 = var_4ch;\n                    if (uVar21 < 1) goto code_r0x01018fd2;\ncode_r0x01018f77:\n                    uVar9 = CONCAT11(var_10h._1_1_, var_10h);\n                }\n                if ((0x8000 < uVar9) || ((uVar4 & 0x1ffff) == 0x18000)) {\n                    if (CONCAT22(var_ch, var_10h._2_2_) == -1) {\n                        var_10h._2_2_ = 0;\n                        var_ch._0_2_ = 0;\n                        if (CONCAT22(var_8h, var_ch._2_2_) == -1) {\n                            var_ch._2_2_ = var_10h._2_2_;\n                            var_8h._0_2_ = var_ch;\n                            if (var_8h._2_2_ == 0xffff) {\n                                uVar21 = uVar21 + 1;\n                                var_8h._2_2_ = 0x8000;\n                            }\n                            else {\n                                var_8h._2_2_ = var_8h._2_2_ + 1;\n                            }\n                        }\n                        else {\n                            iVar22 = CONCAT22(var_8h, var_ch._2_2_) + 1;\n                            var_ch._2_2_ = iVar22;\n                            var_8h._0_2_ = iVar22 >> 0x10;\n                        }\n                        var_1ah = CONCAT22(var_8h._2_2_, var_8h);\n                    }\n                    else {\n                        iVar22 = CONCAT22(var_ch, var_10h._2_2_) + 1;\n                        var_10h._2_2_ = iVar22;\n                        var_ch._0_2_ = iVar22 >> 0x10;\n                    }\n                }\n                if (uVar21 < 0x7fff) {\n                    var_16h._1_1_ = uVar21 >> 8 | var_16h._1_1_ & 0x80;\n                    var_20h = var_10h._2_2_;\n                    arg_8h = CONCAT22(var_ch._2_2_, var_ch);\n                    uVar17 = CONCAT22(var_1ah, var_ch._2_2_);\n                    uVar4 = CONCAT22(var_ch, var_10h._2_2_);\n                    var_16h._0_1_ = uVar21;\n                    goto code_r0x01019099;\n                }\n                goto code_r0x0101907e;\n            }\n            var_1ah._2_2_ = 0;\n            var_16h._0_1_ = 0;\n            var_16h._1_1_ = 0;\n        }\n        else {\ncode_r0x0101907e:\n            iVar22 = (((var_16h._1_1_ & 0x80) == 0) - 1 & 0x80000000) + 0x7fff8000;\n            var_1ah._2_2_ = iVar22;\n            var_16h._0_1_ = iVar22 >> 0x10;\n            var_16h._1_1_ = iVar22 >> 0x18;\n        }\n        uVar17 = 0;\n        uVar4 = uVar17;\n        var_1ah = arg_ch & 0xffff | var_1ah._2_2_ << 0x10;\n    }\ncode_r0x01019099:\n    var_1ah._2_2_ = var_1ah >> 0x10;\n    *arg_1ch = var_48h;\n    if ((arg_18h & 1) == 0) {\n        var_48h = arg_14h;\ncode_r0x010190e4:\n        if (0x15 < var_48h) {\n            var_48h = 0x15;\n        }\n        iVar22 = (CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_)) >> 0x10) - 0x3ffe;\n        uVar13 = var_1ah._2_2_;\n        iVar24 = 8;\n        do {\n            uVar7 = uVar4 >> 0x1f;\n            uVar25 = uVar17 * 2;\n            uVar18 = uVar13 * 2;\n            uVar4 = uVar4 * 2;\n            uVar13 = uVar18 | uVar17 >> 0x1f;\n            uVar17 = uVar25 | uVar7;\n            var_20h = uVar4;\n            var_1eh._0_2_ = uVar4 >> 0x10;\n            var_1ah._2_2_ = uVar13;\n            var_16h._0_1_ = uVar18 >> 0x10;\n            var_16h._1_1_ = uVar18 >> 0x18;\n            iVar24 = iVar24 + -1;\n        } while (iVar24 != 0);\n        var_1eh._2_2_ = uVar17;\n        var_1ah._0_2_ = uVar25 >> 0x10;\n        var_44h = uVar13;\n        var_40h = uVar4;\n        if ((iVar22 < 0) && (uVar25 = -iVar22 & 0xff,  uVar25 != 0)) {\n            do {\n                uVar7 = uVar4 >> 1;\n                uVar4 = uVar7 | uVar17 << 0x1f;\n                uVar18 = uVar17 >> 1;\n                var_44h = uVar13 >> 1;\n                uVar17 = uVar18 | uVar13 << 0x1f;\n                uVar25 = uVar25 - 1;\n                var_1ah._2_2_ = var_44h;\n                var_16h._0_1_ = var_44h >> 0x10;\n                var_16h._1_1_ = uVar13 >> 0x19;\n                var_20h = uVar7;\n                var_1eh._0_2_ = uVar4 >> 0x10;\n                uVar13 = var_44h;\n            } while (0 < uVar25);\n            var_1eh._2_2_ = uVar18;\n            var_1ah._0_2_ = uVar17 >> 0x10;\n            var_40h = uVar4;\n        }\n        var_54h = var_48h + 1;\n        piVar1 = arg_1ch + 2;\n        var_58h = piVar1;\n        if (0 < var_54h) {\n            while( true ) {\n                var_3ch._0_2_ = var_20h;\n                var_3ch._2_2_ = var_1eh;\n                var_38h._0_2_ = var_1eh._2_2_;\n                var_38h._2_2_ = var_1ah;\n                var_34h = CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_));\n                uVar13 = (uVar17 * 2 | var_40h >> 0x1f) * 2 | var_40h * 2 >> 0x1f;\n                uVar25 = (var_44h * 2 | uVar17 >> 0x1f) * 2 | uVar17 * 2 >> 0x1f;\n                uVar4 = CONCAT22(var_1eh, var_20h) + var_40h * 4;\n                if ((uVar4 < var_40h * 4) || (uVar17 = uVar13,  uVar4 < CONCAT22(var_1eh, var_20h))) {\n                    uVar17 = uVar13 + 1;\n                    if ((uVar17 < uVar13) || (bVar26 = false,  uVar17 == 0)) {\n                        bVar26 = true;\n                    }\n                    if (bVar26) {\n                        uVar25 = uVar25 + 1;\n                    }\n                }\n                uVar13 = CONCAT22(var_1ah, var_1eh._2_2_) + uVar17;\n                if ((uVar13 < uVar17) || (uVar13 < CONCAT22(var_1ah, var_1eh._2_2_))) {\n                    uVar25 = uVar25 + 1;\n                }\n                var_40h = uVar4 * 2;\n                var_20h = var_40h;\n                var_1eh._0_2_ = var_40h >> 0x10;\n                uVar17 = uVar13 * 2 | uVar4 >> 0x1f;\n                uVar4 = (uVar25 + var_34h) * 2;\n                var_1eh._2_2_ = uVar17;\n                var_1ah._0_2_ = uVar13 * 2 >> 0x10;\n                var_1ah._2_2_ = uVar4 | uVar13 >> 0x1f;\n                var_16h._0_1_ = uVar4 >> 0x10;\n                *var_58h = (uVar4 >> 0x18) + '0';\n                var_58h = var_58h + 1;\n                var_54h = var_54h + -1;\n                var_16h._1_1_ = 0;\n                if (var_54h < 1) break;\n                var_44h = uVar4 & 0xffffff | uVar13 >> 0x1f;\n            }\n        }\n        arg_8h = CONCAT22(var_1eh._2_2_, var_1eh);\n        piVar15 = var_58h + -1;\n        if (*(var_58h + -1) < '5') {\n            for (; (piVar1 <= piVar15 && (*piVar15 == '0')); piVar15 = piVar15 + -1) {\n            }\n            if (piVar15 < piVar1) {\n                *arg_1ch = 0;\n                *(arg_1ch + 1) = ((uVar16 != 0x8000) - 1U & 0xd) + 0x20;\n                *(arg_1ch + 3) = 1;\n                *piVar1 = 0x30;\n                goto code_r0x010190d9;\n            }\n        }\n        else {\n            for (; (piVar1 <= piVar15 && (*piVar15 == '9')); piVar15 = piVar15 + -1) {\n                *piVar15 = 0x30;\n            }\n            if (piVar15 < piVar1) {\n                piVar15 = piVar15 + 1;\n                *arg_1ch = *arg_1ch + 1;\n            }\n            *piVar15 = *piVar15 + '\\x01';\n        }\n        cVar8 = (piVar15 - arg_1ch) + -3;\n        *(arg_1ch + 3) = cVar8;\n        *(cVar8 + 4 + arg_1ch) = 0;\n    }\n    else {\n        var_48h = arg_14h + var_48h;\n        if (0 < var_48h) goto code_r0x010190e4;\n        *arg_1ch = 0;\n        *(arg_1ch + 1) = ((uVar16 != 0x8000) - 1U & 0xd) + 0x20;\n        *(arg_1ch + 3) = 1;\n        *(arg_1ch + 2) = 0x30;\ncode_r0x010190d9:\n        *(arg_1ch + 5) = 0;\n    }\ncode_r0x0101928d:\n    var_1eh = arg_8h;\n    fcn.01002695(var_88h);\n    return;\n}\n",
        "token_count": 8582
    },
    "0101a513": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0101a513(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t arg_8h_00;\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.01005490(0x103b028, 0x10);\n    *(unaff_EBP + -0x1c) = 0;\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar1 = fcn.010051c9();\n        *puVar1 = 0;\n        puVar1 = fcn.010051fd();\n        *puVar1 = 9;\n    }\n    else {\n        if ((arg_8h_00 < 0) || (*0x10d39a4 <= arg_8h_00)) {\n            puVar1 = fcn.010051c9();\n            *puVar1 = 0;\n        }\n        else {\n            iVar3 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*((arg_8h_00 >> 5) * 4 + 0x103ebc0) + 4 + iVar3) & 1) != 0) {\n                fcn.0101fd4d(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*((arg_8h_00 >> 5) * 4 + 0x103ebc0) + 4 + iVar3) & 1) == 0) {\n                    puVar1 = fcn.010051fd();\n                    *puVar1 = 9;\n                    puVar1 = fcn.010051c9();\n                    *puVar1 = 0;\n                    uVar2 = 0xffffffff;\n                }\n                else {\n                    uVar2 = fcn.0101a602(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                }\n                *(unaff_EBP + -0x1c) = uVar2;\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0101a5da();\n                goto code_r0x0101a5fc;\n            }\n            puVar1 = fcn.010051c9();\n            *puVar1 = 0;\n        }\n        puVar1 = fcn.010051fd();\n        *puVar1 = 9;\n        fcn.01009f82();\n    }\ncode_r0x0101a5fc:\n    fcn.010054d5();\n    return;\n}\n",
        "token_count": 650
    },
    "01021b2d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x01021eeb)\n// WARNING: Removing unreachable block (ram,0x01021e6b)\n// WARNING: Removing unreachable block (ram,0x0102231c)\n// WARNING: Removing unreachable block (ram,0x01021e7d)\n// WARNING: Removing unreachable block (ram,0x01021f62)\n// WARNING: Removing unreachable block (ram,0x01021e89)\n// WARNING: Removing unreachable block (ram,0x01021e90)\n// WARNING: Removing unreachable block (ram,0x01021e95)\n// WARNING: Removing unreachable block (ram,0x01021f65)\n// WARNING: Removing unreachable block (ram,0x01022312)\n// WARNING: Removing unreachable block (ram,0x01021f6d)\n// WARNING: Removing unreachable block (ram,0x01021f73)\n// WARNING: Removing unreachable block (ram,0x01021f7b)\n// WARNING: Removing unreachable block (ram,0x01021f7e)\n// WARNING: Removing unreachable block (ram,0x01021f96)\n// WARNING: Removing unreachable block (ram,0x01021f98)\n// WARNING: Removing unreachable block (ram,0x01021fa2)\n// WARNING: Removing unreachable block (ram,0x01021fa5)\n// WARNING: Removing unreachable block (ram,0x01021fac)\n// WARNING: Removing unreachable block (ram,0x01021faf)\n// WARNING: Removing unreachable block (ram,0x01022304)\n// WARNING: Removing unreachable block (ram,0x01022322)\n// WARNING: Removing unreachable block (ram,0x01021fbb)\n// WARNING: Removing unreachable block (ram,0x010222f7)\n// WARNING: Removing unreachable block (ram,0x01021fc7)\n// WARNING: Removing unreachable block (ram,0x01021fd7)\n// WARNING: Removing unreachable block (ram,0x01021fd9)\n// WARNING: Removing unreachable block (ram,0x01021fe3)\n// WARNING: Removing unreachable block (ram,0x01021fed)\n// WARNING: Removing unreachable block (ram,0x010222dd)\n// WARNING: Removing unreachable block (ram,0x01021ff8)\n// WARNING: Removing unreachable block (ram,0x0102200f)\n// WARNING: Removing unreachable block (ram,0x01022021)\n// WARNING: Removing unreachable block (ram,0x01022032)\n// WARNING: Removing unreachable block (ram,0x01022071)\n// WARNING: Removing unreachable block (ram,0x0102207a)\n// WARNING: Removing unreachable block (ram,0x010222ba)\n// WARNING: Removing unreachable block (ram,0x01022088)\n// WARNING: Removing unreachable block (ram,0x0102209a)\n// WARNING: Removing unreachable block (ram,0x0102209f)\n// WARNING: Removing unreachable block (ram,0x010220ac)\n// WARNING: Removing unreachable block (ram,0x010220b2)\n// WARNING: Removing unreachable block (ram,0x010220b8)\n// WARNING: Removing unreachable block (ram,0x010220c3)\n// WARNING: Removing unreachable block (ram,0x010220c8)\n// WARNING: Removing unreachable block (ram,0x010220d5)\n// WARNING: Removing unreachable block (ram,0x010220da)\n// WARNING: Removing unreachable block (ram,0x01022092)\n// WARNING: Removing unreachable block (ram,0x010222d1)\n// WARNING: Removing unreachable block (ram,0x010222d7)\n// WARNING: Removing unreachable block (ram,0x010220de)\n// WARNING: Removing unreachable block (ram,0x010220ec)\n// WARNING: Removing unreachable block (ram,0x010220f3)\n// WARNING: Removing unreachable block (ram,0x010220ff)\n// WARNING: Removing unreachable block (ram,0x0102211f)\n// WARNING: Removing unreachable block (ram,0x01022124)\n// WARNING: Removing unreachable block (ram,0x01022129)\n// WARNING: Removing unreachable block (ram,0x0102212c)\n// WARNING: Removing unreachable block (ram,0x01022133)\n// WARNING: Removing unreachable block (ram,0x01022136)\n// WARNING: Removing unreachable block (ram,0x01022142)\n// WARNING: Removing unreachable block (ram,0x0102214b)\n// WARNING: Removing unreachable block (ram,0x0102215a)\n// WARNING: Removing unreachable block (ram,0x01022171)\n// WARNING: Removing unreachable block (ram,0x01022175)\n// WARNING: Removing unreachable block (ram,0x010221a7)\n// WARNING: Removing unreachable block (ram,0x010221ac)\n// WARNING: Removing unreachable block (ram,0x010221b8)\n// WARNING: Removing unreachable block (ram,0x010221c7)\n// WARNING: Removing unreachable block (ram,0x010221cd)\n// WARNING: Removing unreachable block (ram,0x010221ce)\n// WARNING: Removing unreachable block (ram,0x010221f9)\n// WARNING: Removing unreachable block (ram,0x01022203)\n// WARNING: Removing unreachable block (ram,0x01022215)\n// WARNING: Removing unreachable block (ram,0x01022219)\n// WARNING: Removing unreachable block (ram,0x01022223)\n// WARNING: Removing unreachable block (ram,0x01022231)\n// WARNING: Removing unreachable block (ram,0x0102226d)\n// WARNING: Removing unreachable block (ram,0x01022239)\n// WARNING: Removing unreachable block (ram,0x01022264)\n// WARNING: Removing unreachable block (ram,0x01022244)\n// WARNING: Removing unreachable block (ram,0x0102225c)\n// WARNING: Removing unreachable block (ram,0x01022255)\n// WARNING: Removing unreachable block (ram,0x01022268)\n// WARNING: Removing unreachable block (ram,0x01022271)\n// WARNING: Removing unreachable block (ram,0x01022274)\n// WARNING: Removing unreachable block (ram,0x010222a0)\n// WARNING: Removing unreachable block (ram,0x01022281)\n// WARNING: Removing unreachable block (ram,0x010222da)\n// WARNING: Removing unreachable block (ram,0x010222e5)\n// WARNING: Removing unreachable block (ram,0x01022327)\n// WARNING: Variable defined which should be unmapped: var_80h\n\nvoid __cdecl\nfcn.01021b2d(uint arg_8h, uint arg_ch, int16_t *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t arg_24h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_9h;\n    uint var_4h;\n    \n    if (arg_24h == 0) {\n        puVar2 = fcn.010051fd();\n        *puVar2 = 0x16;\n        fcn.01009f82();\n        fcn.01002695(arg_8h);\n        return;\n    }\n    for (; (((iVar1 = *arg_10h,  iVar1 == 0x20 || (iVar1 == 9)) || (iVar1 == 10)) || (iVar1 == 0xd));\n        arg_10h = arg_10h + 1) {\n    }\n    // WARNING: Could not recover jumptable at 0x01021be5. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (12 cases) at 0x102234d\n    (**0x102234d)();\n    return;\n}\n",
        "token_count": 1862
    },
    "010012c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar * fcn.010012c0(uchar *param_1, uint param_2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    char *pcVar3;\n    \n    pcVar2 = fcn.010021a6(param_2);\n    pcVar3 = \"unknown error\";\n    if (pcVar2 != NULL) {\n        pcVar3 = pcVar2;\n    }\n    *(param_1 + 0x14) = 0xf;\n    *(param_1 + 0x10) = 0;\n    *param_1 = 0;\n    if (*pcVar3 == '\\0') {\n        fcn.01001c20(pcVar3, 0);\n        return param_1;\n    }\n    pcVar2 = pcVar3;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.01001c20(pcVar3, pcVar2 - (pcVar3 + 1));\n    return param_1;\n}\n",
        "token_count": 240
    },
    "010021a6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.010021a6(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar2 = 0x1030440;\n    if (*0x1030444 != 0) {\n        do {\n            if (*piVar2 == arg_8h) {\n                return piVar2[1];\n            }\n            piVar1 = piVar2 + 3;\n            piVar2 = piVar2 + 2;\n        } while (*piVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 135
    },
    "010021d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.010021d0(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar2 = 0x10301e8;\n    if (*0x10301ec != 0) {\n        do {\n            if (*piVar2 == arg_8h) {\n                return piVar2[1];\n            }\n            piVar1 = piVar2 + 3;\n            piVar2 = piVar2 + 2;\n        } while (*piVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 136
    },
    "01004464": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.01004464(int32_t param_1)\n\n{\n    if (*(param_1 + 8) != '\\0') {\n        fcn.0100590c(*(param_1 + 4));\n    }\n    *(param_1 + 4) = 0;\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 81
    },
    "0100590c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0100590c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x103ebac, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.010051fd();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.01005256(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "01003f4f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.01003f4f(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint *var_38h_2;\n    code *pcStack56;\n    uint32_t uStack52;\n    uint uStack48;\n    uint *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uchar *var_18h_2;\n    int32_t var_14h_2;\n    uint *var_10h;\n    uint var_ch;\n    code *var_8h;\n    uint var_4h;\n    \n    var_18h_2 = &stack0xfffffffc;\n    puStack32 = &stack0xffffffc0;\n    if (var_34h == 0x123) {\n        *var_30h = 0x1003ff8;\n        var_4h = 1;\n    }\n    else {\n        pcStack56 = fcn.01003e49;\n        uStack52 = *0x103c008 ^ &fcn.01003f4f::var_38h_2;\n        uStack48 = var_24h;\n        puStack44 = var_30h;\n        uStack40 = var_20h;\n        uStack36 = var_1ch;\n        var_14h_2 = 0;\n        var_38h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.01003f4f::var_38h_2;\n        var_4h = 1;\n        var_10h = var_34h;\n        var_ch = var_2ch;\n        iVar1 = fcn.01006cd3();\n        var_8h = *(iVar1 + 0x80);\n        (*var_8h)(*var_34h, &fcn.01003f4f::var_10h);\n        var_4h = 0;\n        if (var_14h_2 == 0) {\n            *in_FS_OFFSET = var_38h_2;\n        }\n        else {\n            *var_38h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_38h_2;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 702
    },
    "01004e4c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x01004f41: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x01004f46)\n// WARNING: Removing unreachable block (ram,0x01004f75)\n// WARNING: Removing unreachable block (ram,0x01004f4c)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.01004e4c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    uint uVar6;\n    int32_t unaff_EBP;\n    int32_t *piVar7;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.01005490(0x103ab08, 0x1c);\n    fcn.01009c5c(8);\n    *(unaff_EBP + -4) = 0;\n    pcVar5 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if (*0x103e544 != 1) {\n        *0x103e56c = 1;\n        *0x103e568 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar2 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x10d39b0);\n            *(unaff_EBP + -0x2c) = piVar2;\n            if (piVar2 != NULL) {\n                piVar3 = (*pcVar5)(*0x10d39ac);\n                *(unaff_EBP + -0x1c) = piVar2;\n                *(unaff_EBP + -0x20) = piVar3;\n                do {\n                    *(unaff_EBP + -0x24) = piVar3;\n                    piVar7 = piVar3;\n                    do {\n                        do {\n                            piVar7 = piVar7 + -1;\n                            *(unaff_EBP + -0x24) = piVar7;\n                            if (piVar7 < piVar2) goto code_r0x01004f18;\n                            iVar4 = (*_sym.imp.KERNEL32.dll_EncodePointer)(0);\n                        } while (*piVar7 == iVar4);\n                        if (piVar7 < piVar2) goto code_r0x01004f18;\n                        pcVar5 = (*pcVar5)(*piVar7);\n                        iVar4 = (*_sym.imp.KERNEL32.dll_EncodePointer)(0);\n                        *piVar7 = iVar4;\n                        (*pcVar5)();\n                        pcVar5 = _sym.imp.KERNEL32.dll_DecodePointer;\n                        uVar6 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x10d39b0);\n                        *(unaff_EBP + -0x28) = uVar6;\n                        piVar3 = (*pcVar5)(*0x10d39ac);\n                        piVar1 = *(unaff_EBP + -0x28);\n                    } while ((*(unaff_EBP + -0x1c) == piVar1) && (*(unaff_EBP + -0x20) == piVar3));\n                    *(unaff_EBP + -0x1c) = piVar1;\n                    *(unaff_EBP + -0x2c) = piVar1;\n                    *(unaff_EBP + -0x20) = piVar3;\n                    piVar2 = piVar1;\n                } while( true );\n            }\ncode_r0x01004f18:\n            fcn.01004de2(0x103017c, 0x103018c);\n        }\n        fcn.01004de2(0x1030190, 0x1030194);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.01009de6(8);\n    }\n    return;\n}\n",
        "token_count": 939
    },
    "0100596d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0100596d(uint param_1, uint32_t param_2, int32_t param_3, uint32_t param_4)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    bool in_ZF;\n    uint16_t in_FPUControlWord;\n    uint16_t in_FPUStatusWord;\n    uint unaff_retaddr;\n    uint32_t arg_8h;\n    \n    arg_8h = param_2 & 0xffff0000 | in_FPUControlWord;\n    if (in_ZF) {\n        if (((param_4 & 0xfffff) != 0) || (param_3 != 0)) {\n            uVar1 = fcn.0100be3c();\n            goto code_r0x010059eb;\n        }\n        uVar1 = param_4 & 0x80000000;\n        if (uVar1 != 0) goto code_r0x010059de;\n    }\n    else {\n        uVar1 = param_4;\n        if (in_FPUControlWord != 0x27f) {\n            uVar1 = fcn.0100be25();\n        }\n        if (((uVar1 & 0x80000000) != 0) && ((((uVar1 & 0x7ff00000) != 0 || ((uVar1 & 0xfffff) != 0)) || (param_3 != 0)))\n           ) {\ncode_r0x010059de:\n            uVar1 = 1;\ncode_r0x010059eb:\n            if (*0x103e214 == 0) {\n                uVar3 = fcn.0100bdc7(arg_8h, unaff_retaddr, param_3, param_4);\n                return CONCAT44(arg_8h, uVar3);\n            }\n            goto code_r0x0100beae;\n        }\n    }\n    if (*0x103e214 == 0) {\n        uVar2 = uVar1 & 0xffff0000 | arg_8h & 0xffff;\n        if ((arg_8h & 0xffff) != 0x27f) {\n            if (((arg_8h & 0x20) != 0) &&\n               (uVar2 = uVar1 & 0xffff0000 | in_FPUStatusWord,  (in_FPUStatusWord & 0x20) != 0)) {\n                uVar3 = fcn.0100bdc7(arg_8h, unaff_retaddr, param_3, param_4);\n                return CONCAT44(arg_8h, uVar3);\n            }\n            uVar2 = uVar2 & 0xffff0020;\n        }\n        return CONCAT44(arg_8h, uVar2);\n    }\ncode_r0x0100beae:\n    return CONCAT44(arg_8h, uVar1);\n}\n",
        "token_count": 641
    },
    "01007fa5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01007fa5(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x28);\n    fcn.01004155(*(unaff_EBP + -0x2c));\n    iVar1 = fcn.01006cd3();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x30);\n    iVar1 = fcn.01006cd3();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x34);\n    if (((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n         ((unaff_ESI[5] == 0x19930520 || ((unaff_ESI[5] == 0x19930521 || (unaff_ESI[5] == 0x19930522)))))) &&\n        (*(unaff_EBP + -0x38) == 0)) &&\n       ((*(unaff_EBP + -0x1c) != 0 && (iVar1 = fcn.010041a5(unaff_ESI[6]),  iVar1 != 0)))) {\n        fcn.01007d6c(unaff_ESI);\n    }\n    return;\n}\n",
        "token_count": 383
    },
    "01008daf": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.01008daf(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.01005490(0x103ac78, 0x10);\n    if (*(*(unaff_EBP + 0x10) + 4) < 0x81) {\n        iVar4 = *(*(unaff_EBP + 8) + 8);\n    }\n    else {\n        iVar4 = *(*(unaff_EBP + 8) + 8);\n    }\n    *(unaff_EBP + -0x1c) = iVar4;\n    iVar3 = fcn.01006cd3();\n    *(iVar3 + 0x90) = *(iVar3 + 0x90) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (iVar4 != *(unaff_EBP + 0x14)) {\n        if ((iVar4 < 0) || (*(*(unaff_EBP + 0x10) + 4) <= iVar4)) {\n            fcn.01007cdc();\n        }\n        iVar3 = *(unaff_EBP + 0x10);\n        iVar1 = *(iVar3 + 8);\n        uVar2 = *(iVar1 + iVar4 * 8);\n        *(unaff_EBP + -0x20) = uVar2;\n        *(unaff_EBP + -4) = 1;\n        if (*(iVar1 + 4 + iVar4 * 8) != 0) {\n            iVar1 = *(unaff_EBP + 8);\n            *(iVar1 + 8) = uVar2;\n            fcn.01007c90(*(*(iVar3 + 8) + 4 + iVar4 * 8), iVar1, 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        iVar4 = *(unaff_EBP + -0x20);\n        *(unaff_EBP + -0x1c) = iVar4;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.01008e6e();\n    if (iVar4 != *(unaff_EBP + 0x14)) {\n        fcn.01007cdc();\n    }\n    *(*(unaff_EBP + 8) + 8) = iVar4;\n    fcn.010054d5();\n    return;\n}\n",
        "token_count": 610
    },
    "01008e6e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.01008e6e(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.01006cd3();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.01006cd3();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "0100dd19": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.0100dd19(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    uint uVar7;\n    uint *puVar8;\n    uint var_24h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    if (**0x103ef88 == 0) {\n        fcn.0100c68e(arg_8h, 1, arg_ch);\n        return arg_8h;\n    }\n    var_ch = 0;\n    var_8h = var_8h & 0xffff0000;\n    puVar2 = *0x103ef88 + 1;\n    uVar5 = **0x103ef88;\n    uVar4 = 0xffffffff;\n    var_1h._0_1_ = 0;\n    if (0x4e < uVar5) {\n        if (uVar5 == 0x4f) {\n            *0x103ef88 = puVar2;\n            fcn.0100c424(\"long \");\n            puVar2 = *0x103ef88;\n            goto code_r0x0100df9a;\n        }\n        if (uVar5 < 0x50) goto code_r0x0100df68;\n        if (uVar5 < 0x54) {\n            uVar4 = uVar5 & 3;\n            *0x103ef88 = puVar2;\n            goto code_r0x0100dfa7;\n        }\n        if (uVar5 == 0x58) {\n            pcVar6 = \"void\";\n            goto code_r0x0100dd7b;\n        }\n        if (uVar5 != 0x5f) goto code_r0x0100df68;\n        uVar3 = *puVar2;\n        puVar2 = *0x103ef88 + 2;\n        uVar4 = uVar3;\n        if (uVar4 < 0x4e) {\n            if (uVar4 < 0x4c) {\n                if (uVar4 < 0x48) {\n                    if (uVar4 < 0x46) {\n                        if (uVar4 == 0) {\n                            *0x103ef88 = *0x103ef88 + 1;\n                            fcn.0100c456(1);\n                            goto code_r0x0100dfb3;\n                        }\n                        if (uVar4 == 0x24) {\n                            *0x103ef88 = puVar2;\n                            uVar7 = fcn.0100dd19(&var_1ch, arg_ch);\n                            fcn.0100c66a(arg_8h, \"__w64 \", uVar7);\n                            return arg_8h;\n                        }\n                        if (1 < uVar4 - 0x44) goto code_r0x0100decc;\n                        pcVar6 = \"__int8\";\n                    }\n                    else {\n                        pcVar6 = \"__int16\";\n                    }\n                }\n                else if (uVar4 < 0x4a) {\n                    pcVar6 = \"__int32\";\n                }\n                else if (uVar4 < 0x4c) {\n                    pcVar6 = \"__int64\";\n                }\n                else {\ncode_r0x0100decc:\n                    pcVar6 = \"UNKNOWN\";\n                }\n            }\n            else {\n                pcVar6 = \"__int128\";\n            }\n        }\n        else if (uVar4 == 0x4e) {\n            pcVar6 = \"bool\";\n        }\n        else {\n            if (uVar4 == 0x4f) {\n                uVar4 = 0xfffffffe;\n                *0x103ef88 = puVar2;\n                goto code_r0x0100deed;\n            }\n            if (uVar4 == 0x52) {\n                pcVar6 = \"<unknown>\";\n            }\n            else {\n                if (uVar4 != 0x57) {\n                    if (1 < uVar4 - 0x58) goto code_r0x0100decc;\n                    *0x103ef88 = *0x103ef88 + 1;\n                    piVar1 = fcn.0100ec49(&var_14h);\n                    var_14h = *piVar1;\n                    var_10h = piVar1[1];\n                    goto joined_r0x0100deb9;\n                }\n                pcVar6 = \"wchar_t\";\n            }\n        }\n        *0x103ef88 = puVar2;\n        fcn.0100c424(pcVar6);\n        goto code_r0x0100dfb3;\n    }\n    // switch table (11 cases) at 0x100e0cd\n    switch(uVar5) {\n    case 0x43:\n    case 0x44:\n    case 0x45:\n        pcVar6 = \"char\";\n        break;\n    case 0x46:\n    case 0x47:\n        pcVar6 = \"short\";\n        break;\n    case 0x48:\n    case 0x49:\n        pcVar6 = 0x1035534;\n        break;\n    case 0x4a:\n    case 0x4b:\n        pcVar6 = \"long\";\n        break;\n    case 0x4c:\ncode_r0x0100df68:\n        piVar1 = fcn.0100ec49(&var_24h);\n        var_14h = *piVar1;\n        var_10h = piVar1[1];\n        uVar3 = var_1h;\njoined_r0x0100deb9:\n        var_ch = var_14h;\n        var_8h = var_10h;\n        if (var_14h == 0) goto code_r0x0100debf;\n        goto code_r0x0100dfb3;\n    case 0x4d:\n        pcVar6 = \"float\";\n        break;\n    default:\ncode_r0x0100df9a:\n        *0x103ef88 = puVar2;\n        fcn.0100c854(\"double\");\ncode_r0x0100dfa7:\n        uVar3 = var_1h;\n        if (uVar4 != 0xffffffff) {\ncode_r0x0100deed:\n            var_ch = 0;\n            var_8h = var_8h & 0xffff0000;\n            var_1ch = *arg_ch;\n            var_18h = arg_ch[1];\n            if (uVar4 != 0xfffffffe) {\n                if (*arg_ch == 0) {\n                    if ((uVar4 & 1) == 0) {\n                        if ((uVar4 & 2) != 0) {\n                            fcn.0100c424(\"volatile\");\n                        }\n                    }\n                    else {\n                        fcn.0100c424(\"const\");\n                        if ((uVar4 & 2) != 0) {\n                            fcn.0100c854(\" volatile\");\n                        }\n                    }\n                }\n                fcn.0100feb6(arg_8h, &var_ch, &var_1ch, 0x1034e04);\n                return arg_8h;\n            }\n            var_18h = var_18h | 0x800;\n            fcn.0100feb6(&var_14h, &var_ch, &var_1ch, 0x1034dc6);\n            if ((var_10h & 0x800) == 0) {\n                fcn.0100c854(0x1034df0);\n            }\ncode_r0x0100debf:\n            *arg_8h = var_14h;\n            arg_8h[1] = var_10h;\n            return arg_8h;\n        }\n        goto code_r0x0100dfb3;\n    }\ncode_r0x0100dd7b:\n    *0x103ef88 = puVar2;\n    fcn.0100c424(pcVar6);\n    uVar3 = var_1h;\ncode_r0x0100dfb3:\n    if (uVar5 == 0x43) {\n        pcVar6 = \"signed \";\n    }\n    else {\n        if (((((uVar5 != 0x45) && (uVar5 != 0x47)) && (uVar5 != 0x49)) && (uVar5 != 0x4b)) &&\n           ((uVar5 != 0x5f ||\n            (((uVar3 != 0x45 && (uVar3 != 0x47)) && ((uVar3 != 0x49 && ((uVar3 != 0x4b && (uVar3 != 0x4d))))))))))\n        goto code_r0x0100e01f;\n        pcVar6 = \"unsigned \";\n    }\n    puVar8 = &var_1ch;\n    fcn.0100c0be(pcVar6);\n    fcn.0100c6b2(pcVar6, puVar8);\n    var_ch = var_1ch;\n    var_8h = var_18h;\ncode_r0x0100e01f:\n    if (*arg_ch != 0) {\n        puVar8 = &var_1ch;\n        uVar7 = 0x20;\n        fcn.0100c3af(0x20);\n        fcn.0100c6b2(uVar7, puVar8);\n        fcn.0100c75c(&var_1ch);\n    }\n    *arg_8h = var_ch;\n    arg_8h[1] = var_8h;\n    return arg_8h;\n}\n",
        "token_count": 2238
    },
    "0102053a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0102053a(uint8_t *arg_8h, uint8_t **arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    int32_t iVar4;\n    uint unaff_EBX;\n    uint8_t *arg_ch_00;\n    int32_t var_2ch;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x103c008 ^ &stack0xfffffffc;\n    fcn.01009025(arg_10h);\n    if (arg_ch != NULL) {\n        *arg_ch = arg_8h;\n    }\n    iVar4 = var_2ch;\n    arg_ch_00 = arg_8h;\n    if (arg_8h == NULL) {\n        puVar1 = fcn.010051fd();\n        *puVar1 = 0x16;\n        fcn.01009f82();\n    }\n    else {\n        while( true ) {\n            if (*(iVar4 + 0x74) < 2) {\n                uVar2 = *(*(iVar4 + 0x90) + *arg_ch_00 * 2) & 8;\n            }\n            else {\n                uVar2 = fcn.010151b7(*arg_ch_00, 8, &var_2ch);\n                iVar4 = var_2ch;\n            }\n            if (uVar2 == 0) break;\n            arg_ch_00 = arg_ch_00 + 1;\n        }\n        puVar3 = fcn.01020f78(&var_1ch, arg_ch_00, &var_2ch);\n        if (arg_ch != NULL) {\n            *arg_ch = arg_ch_00 + puVar3[1];\n        }\n        if ((*puVar3 & 0x240) == 0) {\n            if ((*puVar3 & 0x81) == 0) {\n                if (((*puVar3 & 0x100) != 0) && (*(puVar3 + 4) == 0.0)) {\n                    puVar1 = fcn.010051fd();\n                    *puVar1 = 0x22;\n                }\n            }\n            else {\n                puVar1 = fcn.010051fd();\n                *puVar1 = 0x22;\n            }\n        }\n        else if (arg_ch != NULL) {\n            *arg_ch = arg_8h;\n        }\n    }\n    if (var_20h != '\\0') {\n        *(var_24h + 0x70) = *(var_24h + 0x70) & 0xfffffffd;\n    }\n    fcn.01002695(unaff_EBX);\n    return;\n}\n",
        "token_count": 640
    },
    "0101b12b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101b12b(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_8h_00;\n    \n    if (*0x103effc == 0) {\n        arg_8h_00 = 0x103cbd0;\n    }\n    else {\n        arg_8h_00 = 0;\n    }\n    fcn.0101ae9b(arg_8h_00, arg_8h, arg_ch, arg_10h, 0);\n    return;\n}\n",
        "token_count": 121
    },
    "0101b182": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101b182(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_8h_00;\n    \n    if (*0x103effc == 0) {\n        arg_8h_00 = 0x103cbd0;\n    }\n    else {\n        arg_8h_00 = 0;\n    }\n    fcn.0101ae9b(arg_8h_00, arg_8h, arg_ch, arg_10h, 1);\n    return;\n}\n",
        "token_count": 120
    },
    "010218ea": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.010218ea(uint16_t *arg_8h, uint16_t **arg_ch, uint arg_10h)\n\n{\n    uint16_t uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    uint unaff_EBX;\n    uint16_t *arg_ch_00;\n    uint var_34h;\n    int32_t var_2ch;\n    uint var_28h;\n    double dStack40;\n    uint var_1ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x103c008 ^ &stack0xfffffffc;\n    fcn.01009025(arg_10h);\n    if (arg_ch != NULL) {\n        *arg_ch = arg_8h;\n    }\n    if (arg_8h == NULL) {\n        puVar2 = fcn.010051fd();\n        *puVar2 = 0x16;\n        fcn.01009f82();\n    }\n    else {\n        uVar1 = *arg_8h;\n        arg_ch_00 = arg_8h;\n        while (iVar3 = fcn.0101fb17(uVar1, 8),  iVar3 != 0) {\n            arg_ch_00 = arg_ch_00 + 1;\n            uVar1 = *arg_ch_00;\n        }\n        puVar4 = fcn.01021a29(&var_1ch, arg_ch_00, &var_34h);\n        if (arg_ch != NULL) {\n            *arg_ch = arg_ch_00 + puVar4[1];\n        }\n        if ((*puVar4 & 0x240) == 0) {\n            if ((*puVar4 & 0x81) == 0) {\n                if (((*puVar4 & 0x100) != 0) && (*(puVar4 + 4) == 0.0)) {\n                    puVar2 = fcn.010051fd();\n                    *puVar2 = 0x22;\n                }\n            }\n            else {\n                dStack40 = *0x103d1f0;\n                if (*arg_ch_00 == 0x2d) {\n                    dStack40 = -*0x103d1f0;\n                }\n                puVar2 = fcn.010051fd();\n                *puVar2 = 0x22;\n            }\n        }\n        else if (arg_ch != NULL) {\n            *arg_ch = arg_8h;\n        }\n    }\n    if (var_28h != '\\0') {\n        *(var_2ch + 0x70) = *(var_2ch + 0x70) & 0xfffffffd;\n    }\n    fcn.01002695(unaff_EBX);\n    return;\n}\n",
        "token_count": 623
    },
    "010215b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.010215b4(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_8h_00;\n    \n    if (*0x103effc == 0) {\n        arg_8h_00 = 0x103cbd0;\n    }\n    else {\n        arg_8h_00 = 0;\n    }\n    fcn.01021231(arg_8h_00, arg_8h, arg_ch, arg_10h, 0);\n    return;\n}\n",
        "token_count": 118
    },
    "0102160b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0102160b(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_8h_00;\n    \n    if (*0x103effc == 0) {\n        arg_8h_00 = 0x103cbd0;\n    }\n    else {\n        arg_8h_00 = 0;\n    }\n    fcn.01021231(arg_8h_00, arg_8h, arg_ch, arg_10h, 1);\n    return;\n}\n",
        "token_count": 118
    },
    "01022b10": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.01022b10(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    uint *puVar7;\n    char32_t cVar8;\n    int32_t unaff_EBX;\n    uint32_t uVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    uint32_t uVar13;\n    char32_t *pcVar14;\n    char *unaff_EDI;\n    char32_t cVar15;\n    int32_t **in_FS_OFFSET;\n    bool bVar16;\n    ulong uVar17;\n    uint32_t in_stack_fffff794;\n    uint32_t uStack2092;\n    int32_t iStack2076;\n    uint32_t uStack2072;\n    uint32_t uStack2068;\n    uint uStack2056;\n    uint uStack2052;\n    uchar auStack2040 [1940];\n    int32_t *piStack100;\n    uint uStack36;\n    uint32_t uStack28;\n    int32_t *piStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0xffffffff;\n    uStack16 = 0x102f29b;\n    piStack20 = *in_FS_OFFSET;\n    uStack28 = *0x103c008 ^ &iStack2076;\n    uStack2092 = *0x103c008 ^ &stack0xfffff7d8;\n    *in_FS_OFFSET = &piStack20;\n    iStack2076 = 0x1d;\n    uVar2 = fcn.01002d31(1999);\n    *0x103de24 = uVar2 * *0x103de24 - *0x103de28;\n    uStack2072 = uVar2;\n    *0x103de1c = (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(uVar2, 1999);\n    iVar11 = (uVar2 - 7) + *0x103de28;\n    if (*0x103de50 <= *0x103de28) {\n        uVar2 = (*0x103de28 - 0x38) + iVar11;\n        uVar9 = iVar11 * 0x57 + *0x103de28;\n        *0x103de30 = uVar9 + uVar2;\n        *0x103de34 = CARRY4(uVar9, uVar2);\n        *0x103de5c = iVar11;\n    }\n    uVar2 = iVar11 + 0x258f + *0x103de30 & 0xffff;\n    iVar11 = unaff_EBX + -7 + *0x103de30;\n    iVar12 = (uVar2 - 0x3f) + iVar11;\n    iVar10 = (*0x103de30 - iVar11) + 0x648d;\n    iVar11 = ((uVar2 + (iVar12 + -0x38 + *0x103de30) * 2 & 0xffffU) - 0x3fU) + iVar11;\n    iVar12 = iVar11 * (iVar11 + unaff_EBX + iVar12 * 2 + -0x42) - iVar10;\n    iVar11 = (iVar12 - iVar10) + -2;\n    *0x103de24 = iVar12 * iVar11 - iVar10;\n    uVar2 = iVar11 * 2 + 0x230d + *0x103de24 + iVar10;\n    uVar9 = *0x103de1c + -0x38 + *0x103de24;\n    uVar13 = uVar9 + uVar2;\n    uVar2 = CARRY4(uVar9, uVar2);\n    uStack2068 = uVar2;\n    *0x103de30 = (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(auStack2040, 1999);\n    *0x103de34 = 0;\n    if (str._yI[3] + *0x103de50 == 0xc1) {\n        uStack2092 = (*0x103de24 + 1U) * 3 - *0x103de30;\n    }\n    else {\n        *0x103de24 = (*0x103de30 - *0x103de24) + 0x64a3;\n    }\n    if (*0x103de90 + str._fS1[5] == 0xc1) {\n        uVar9 = *0x103de24 * 2 - 0x38;\n        uVar3 = uVar9 - *0x103de30;\n        uVar4 = uVar3 + *0x103de24;\n        uVar5 = uVar4 + 0x1e;\n        bVar16 = CARRY4(uVar13, uVar5);\n        uVar13 = uVar13 + uVar5;\n        iStack2076 = uVar2 + (CARRY4(uVar3, *0x103de24) - (uVar9 < *0x103de30)) + (0xffffffe1 < uVar4) + bVar16;\n    }\n    else {\n        *0x103de24 = (uVar13 - *0x103de24) + 0x6486 + *0x103de30;\n    }\n    uStack2052 = 0xf;\n    uStack2056 = 0;\n    uStack2072 = uStack2072 & 0xffffff00;\n    if (*unaff_EDI == '\\0') {\n        iVar11 = 0;\n    }\n    else {\n        pcVar6 = unaff_EDI;\n        do {\n            cVar1 = *pcVar6;\n            pcVar6 = pcVar6 + 1;\n        } while (cVar1 != '\\0');\n        iVar11 = pcVar6 - (unaff_EDI + 1);\n    }\n    fcn.01001c20(unaff_EDI, iVar11);\n    uStack36 = 0;\n    *0x103de34 = 0;\n    *0x103de30 = (*0x103de24 - 7U) + *0x103de28;\n    *0x103de24 = (*0x103de28 - *0x103de24) + 0x648d;\n    if (uStack2056 == '\\0') {\n        iVar11 = 0;\n    }\n    else {\n        puVar7 = &uStack2056;\n        do {\n            cVar1 = *puVar7;\n            puVar7 = puVar7 + 1;\n        } while (cVar1 != '\\0');\n        iVar11 = puVar7 - (&uStack2056 + 1);\n    }\n    fcn.01001900(&uStack2056, iVar11);\n    uVar2 = *0x103de24 + 0x230d + *0x103de1c;\n    cVar15 = uVar2 + uVar13 * 2;\n    iVar10 = (uStack2092 << 1 | uVar13 >> 0x1f) + CARRY4(uVar2, uVar13 * 2);\n    fcn.010231a0();\n    uVar2 = (cVar15 * *0x103de24 - *0x103de1c) + 0x648d;\n    bVar16 = uVar2 < *0x103de30;\n    *0x103de30 = uVar2 - *0x103de30;\n    *0x103de34 = -bVar16 - *0x103de34;\n    *0x103de24 = *0x103de30 + cVar15 * 0x57;\n    iVar11 = fcn.01023030();\n    uVar2 = 0;\n    uVar17 = fcn.01020670(uStack2072, 0, *0x103de30, *0x103de34);\n    cVar8 = uVar17 - *0x103de24;\n    iVar12 = (uVar17 >> 0x20) - (uVar17 < *0x103de24);\n    if (*0x103de48 != 9) {\n        *0x103de30 = cVar8;\n        *0x103de34 = iVar12;\n        uVar17 = fcn.01020670(*0x103de24, 0, cVar8, iVar12);\n        cVar8 = uVar17 - uVar2;\n        iVar12 = (uVar17 >> 0x20) - (uVar17 < uVar2);\n        in_stack_fffff794 = *0x103de24;\n    }\n    *0x103de24 = iVar11 + -7 + cVar15;\n    *0x103de1c = cVar15 * 0x57 + cVar8;\n    pcVar14 = L\"\\x16\u00e9\u00bb\\x1e\\x9e\\x10\u00b1\\fS\u00b3\u00cc\u00b81\u00f4\u00f4\";\n    *0x103de30 = cVar8;\n    *0x103de34 = iVar12;\n    do {\n        if ((cVar8 != str._fS1[2]) || (iVar12 != 0)) {\n            bVar16 = cVar15 < *pcVar14;\n            cVar15 = cVar15 - *pcVar14;\n            iVar10 = iVar10 - bVar16;\n            uVar17 = fcn.01020670(cVar8, iVar12, cVar15, iVar10);\n            cVar8 = uVar17 - in_stack_fffff794;\n            iVar12 = (uVar17 >> 0x20) - (uVar17 < in_stack_fffff794);\n            *0x103de30 = cVar8;\n            *0x103de34 = iVar12;\n            if ((cVar15 == str._fS1[0]) && (iVar10 == 0)) break;\n        }\n        pcVar14 = pcVar14 + 1;\n    } while (pcVar14 < 0x103df3c);\n    *0x103de28 = fcn.010231a0();\n    *0x103de24 = (*0x103de1c - 0x3f) + cVar15;\n    *0x10d28a8 = 1;\n    do {\n        if (*0x103de24 != str._yI[0]) {\n            pcVar14 = *0x10d28a8 * 4 + 0x103de40;\n            bVar16 = *0x103de30 < *pcVar14;\n            *0x103de30 = *0x103de30 - *pcVar14;\n            *0x103de34 = *0x103de34 - bVar16;\n            *0x103de24 = *0x103de24 * *0x103de30 - *0x103de28;\n            if ((*0x103de30 == *0x103de60) && (*0x103de34 == 0)) break;\n        }\n        *0x10d28a8 = *0x10d28a8 + 1;\n    } while (*0x10d28a8 < 0x2f);\n    if (*0x103de90 <= *0x103de1c) {\n        *0x103de28 = (*0x103de30 * 0x2c + *0x103de1c) * 2 - 0x38;\n        *0x103de9c = *0x103de30;\n    }\n    if (*0x103de88 == 9) {\n        *0x103de1c = (*0x103de30 - *0x103de1c) + 0x648d;\n    }\n    else {\n        *0x103de28 = *0x103de30 * *0x103de28 - *0x103de1c;\n    }\n    fcn.01023460();\n    cVar8 = *0x103de24;\n    if (*0x103de48 == 9) {\n        *0x103de28 = (*0x103de24 - *0x103de28) + 0x648d;\n    }\n    else {\n        uVar17 = fcn.01020670(*0x103de24, 0, *0x103de30, *0x103de34);\n        *0x103de30 = uVar17 - *0x103de28;\n        *0x103de34 = (uVar17 >> 0x20) - (uVar17 < *0x103de28);\n    }\n    *0x103de24 = ((*0x103de28 - cVar8) + 0x648d) * *0x103de30 - in_stack_fffff794;\n    if (0xf < unaff_EDI) {\n        fcn.01002f57(uVar2);\n    }\n    *in_FS_OFFSET = piStack100;\n    fcn.01002695(in_stack_fffff794);\n    return;\n}\n",
        "token_count": 2915
    },
    "01023460": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x010239f6)\n// WARNING: Removing unreachable block (ram,0x0102421e)\n// WARNING: Could not reconcile some variable overlaps\n\nulong __fastcall fcn.01023460(int32_t param_1)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    char cVar9;\n    uint8_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    int32_t iVar16;\n    int32_t iVar17;\n    uint32_t uVar18;\n    int32_t *piVar19;\n    bool bVar20;\n    ulong uVar21;\n    int64_t iVar22;\n    int64_t iVar23;\n    uint uStack136;\n    uint32_t uStack120;\n    uint32_t uVar24;\n    uint32_t uStack104;\n    int32_t iVar25;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uint32_t uStack80;\n    \n    *0x103de20 = *0x103d200 + param_1 + *0x103de20 + -0x38;\n    if (*0x103d200 < 0x111d) {\n        *0x103dea8 = *0x103dea8 + param_1;\n    }\n    *0x103de34 = 0;\n    *0x103de30 = *0x103de24 * 0x57 + *0x103de20;\n    if (*0x103de50 + str._yI[3] == 0xc1) {\n        uVar6 = *0x103de24 * 2 - 0x38;\n        uVar11 = (*0x103de28 - *0x103de24) - 0x1e;\n        uVar4 = uVar6 - uVar11;\n        bVar20 = CARRY4(*0x103de30, uVar4);\n        *0x103de30 = *0x103de30 + uVar4;\n        *0x103de34 = bVar20 - (uVar6 < uVar11);\n    }\n    else {\n        *0x103de24 = *0x103de28 + 0x6486 + (*0x103de30 - *0x103de24);\n    }\n    *0x10d1938 = 0x103f530;\n    *0x103d200 = *0x103de20 + -7 + *0x103de30;\n    uStack80 = 0x1023526;\n    uVar4 = fcn.01024550();\n    uStack84 = *0x103de30;\n    uVar6 = *0x103de34;\n    if (str._yI[2] == L'\\x10') {\n        *0x103de24 = *0x103de24 + str._yI[3];\n        uStack84 = 0xfffffffe;\n        uVar6 = 0;\n    }\n    uVar11 = *0x103de24;\n    uStack80 = uVar6;\n    uVar21 = fcn.01020670(uStack84);\n    *0x103de30 = uVar21 - uVar11;\n    *0x103de34 = (uVar21 >> 0x20) - (uVar21 < uVar11);\n    *0x103de20 = *0x103de20 + 0x3c + (*0x103d200 - *0x103de30) * 2;\n    if (*0x103de48 != 9) {\n        *0x103de20 = *0x103de20 * uVar11 - (uVar4 & 0xffff);\n    }\n    fcn.01024550();\n    uVar11 = *0x103de30;\n    *0x103de20 = *0x103de20 + -0x38 + *0x103d200 + *0x103de30;\n    iVar5 = fcn.01002d31(1999);\n    uVar4 = uVar11 * 2;\n    *0x103de30 = uVar4 - (*0x103de24 - 0x1e);\n    *0x103de34 = (*0x103de34 << 1 | uVar11 >> 0x1f) - (uVar4 < *0x103de24 - 0x1e);\n    uVar4 = (*_sym.imp.KERNEL32.dll_GetTempPathA)(1999);\n    if (*0x103de90 + *0x103deb4 == 0xc1) {\n        *0x103de28 = (*0x103de28 - 0x1a) + (*0x103de30 * 3 - (uVar4 & 0xffff));\n    }\n    else {\n        uVar4 = (uVar4 & 0xffff) + 0x648d;\n        uVar11 = uVar4 + (*0x103de28 - 7);\n        bVar20 = uVar11 < *0x103de30;\n        *0x103de30 = uVar11 - *0x103de30;\n        *0x103de34 = (CARRY4(uVar4, *0x103de28 - 7) - *0x103de34) - bVar20;\n    }\n    if (str._yI[2] == L'\\x10') {\n        *0x103de24 = *0x103de24 + str._yI[3];\n        *0x103de20 = -2;\n    }\n    fcn.010015d0();\n    iVar16 = *0x103d200 + *0x103de30 + *0x103de20 + -0x38;\n    if (str._yI[2] == L'\\x10') {\n        *0x103de24 = *0x103de24 + str._yI[3] * 2;\n        *0x103de30 = 0xfffffffe;\n        *0x103de34 = 0;\n        iVar16 = -2;\n    }\n    *0x103de20 = iVar16 + (*0x103d200 - 0x38) + *0x103de30;\n    if (*0x103de50 + str._yI[3] == 0xc1) {\n        uVar4 = *0x103de24 * 2 - 0x38;\n        uVar12 = (*0x103de28 - *0x103de24) - 0x1e;\n        uVar11 = uVar4 - uVar12;\n        bVar20 = CARRY4(*0x103de30, uVar11);\n        *0x103de30 = *0x103de30 + uVar11;\n        *0x103de34 = (*0x103de34 - (uVar4 < uVar12)) + bVar20;\n    }\n    else {\n        *0x103de24 = *0x103de28 + 0x6486 + (*0x103de30 - *0x103de24);\n    }\n    fcn.01024550();\n    uVar7 = *0x103de50;\n    uVar4 = *0x103de24;\n    uVar11 = (*0x103de24 + 0x648d) - *0x103de24;\n    uVar13 = uVar11 - *0x103de30;\n    uVar12 = uVar13 + 0x3f;\n    uVar11 = ((-*0x103de34 - (*0x103de24 + 0x648d < *0x103de24)) - (uVar11 < *0x103de30)) + (0xffffffc0 < uVar13);\n    uStack88 = uVar6 & 0xffffff | *0x103de28 + -0x3f + uVar12 << 0x18;\n    if (*0x103de50 <= *0x103de28) {\n        *0x103de5c = *0x103de24;\n        uVar13 = *0x103de24 * 0x57 + *0x103de28;\n        uVar11 = (*0x103de28 - 0x38) + *0x103de24;\n        uVar12 = uVar13 + uVar11;\n        uVar11 = CARRY4(uVar13, uVar11);\n    }\n    uStack104 = 0;\n    iVar22 = fcn.01020670(uVar12, uVar11, 0x57);\n    iVar22 = iVar22 + 0x103de24;\n    iVar16 = iVar22 - uVar4;\n    uStack84 = 0;\n    uVar13 = iVar16 - 2;\n    if (uVar7 + str._yI[3] == 0xc1) {\n        uVar7 = uVar4 * 2 - 0x38;\n        uVar14 = (*0x103de28 - uVar4) - 0x1e;\n        iVar22 = iVar22 + CONCAT44(-(uVar7 < uVar14), uVar7 - uVar14);\n    }\n    else {\n        uVar4 = *0x103de28 + 0x6486 + iVar16;\n        *0x103de24 = uVar4;\n    }\n    if (str._yI[2] == L'\\x10') {\n        uVar4 = uVar4 + str._yI[3];\n        iVar22 = 0xfffffffe;\n        *0x103de24 = uVar4;\n    }\n    iVar16 = iVar22 >> 0x20;\n    uVar14 = iVar22;\n    uVar7 = uVar4 + 0x230d + uVar14 * 3;\n    iVar16 = iVar16 + (iVar16 << 1 | uVar14 >> 0x1f) + CARRY4(uVar14, uVar14 * 2) + CARRY4(uVar4 + 0x230d, uVar14 * 3);\n    if (uVar4 == 0) {\n        str._yI[0] = str._yI[0] + (uVar6 & 0xffff);\n        uStack104 = uVar4 * 'W' + (uVar6 & 0xffffff) << 0x18;\n    }\n    iVar25 = 0;\n    if ((iVar16 != 0) || (uVar4 <= uVar7)) {\n        str._yI[0] = str._yI[0] + *0x103de28;\n        uVar7 = uVar4 * 0x57 + *0x103de28;\n        iVar16 = 0;\n    }\n    uStack120 = 0;\n    uStack80 = uVar13;\n    iVar22 = fcn.01020670(uVar7, iVar16, 0x57);\n    iVar22 = iVar22 + 0xc;\n    uStack84 = 0;\n    if (*0x103de50 == 0) {\n        *0x103de5c = uVar4;\n        *0x103de30 = CONCAT44(*0x103de34, *0x103de30);\n    }\n    while( true ) {\n        iVar17 = iVar22 >> 0x20;\n        iVar16 = iVar25 + 1;\n        if (*0x103de50 == 0) {\n            *0x103de5c = uVar4;\n        }\n        iVar23 = fcn.01020670(iVar22);\n        uVar6 = *0x103de28;\n        uVar24 = iVar22 >> 0x20;\n        uVar14 = iVar22;\n        uVar1 = iVar23 + CONCAT44(uVar7, uVar24);\n        uVar18 = uVar1;\n        if (str._yI[3] + *0x103de50 == 0xc1) {\n            uVar11 = (uVar13 - 0x1a) + (uVar18 * 3 - uVar4);\n        }\n        else {\n            uVar15 = uVar4 + 0x648d + (uVar13 - 7);\n            uVar1 = CONCAT44((CARRY4(uVar4 + 0x648d, uVar13 - 7) - (uVar1 >> 0x20)) - (uVar15 < uVar18), uVar15 - uVar18\n                            );\n        }\n        iVar25 = uVar1;\n        if (iVar16 < uVar1) {\n            uVar11 = (*0x103de28 - 0x38) + uVar4;\n            uVar13 = uVar11 + uVar24;\n            iVar8 = uVar13 - 0x3f;\n            uVar1 = uVar1 + CONCAT44(uVar7 + CARRY4(uVar11, uVar24) + -1 + (0x3e < uVar13), iVar8);\n            uVar11 = uStack120 == 0;\n            if ((uVar11 != 0) && (uVar11 = (uVar11 - 0x38) + iVar25 + iVar8,  *0x103de28 <= uVar11)) {\n                str._yI[0] = str._yI[0] + uVar4;\n                uVar11 = *0x103de28 * 0x57 + uVar4;\n            }\n            uVar11 = *0x103de28 + 0x230d + iVar16 + uVar11 * 2;\n        }\n        iVar25 = 0;\n        iVar22 = uVar1 + CONCAT44((uVar7 - 1) + (0x3e < uVar24), uVar24 - 0x3f);\n        uVar7 = iVar22;\n        iVar8 = iVar22 >> 0x20;\n        *0x103d200 = uVar11 + -7 + iVar22;\n        if ((iVar8 == 0) && (uVar7 <= uVar11)) {\n            if (*0x103de48 == 9) {\n                uStack120 = (uVar4 - uStack120) + 0x648d & 0xffff;\n                uVar7 = uVar11;\n            }\n            else {\n                uVar7 = uVar11 * uVar4 - iVar16;\n            }\n        }\n        else {\n            *0x103d200 = (iVar22 - *0x103d200) + 0x8d;\n            iVar16 = uVar7 * 3 + uVar4 + 0x230d;\n            iVar22 = CONCAT44(iVar8 + (iVar8 * 2 | uVar7 >> 0x1f) + CARRY4(uVar7, uVar7 * 2) +\n                              CARRY4(uVar7 * 3, uVar4 + 0x230d), iVar16);\n            uVar7 = *0x103d200 * 0x57 + iVar16;\n        }\n        uVar13 = iVar22;\n        if (iVar5 == 0) break;\n        *0x103de30 = iVar22 + CONCAT44((6 < uVar24) - 1, uVar24 - 7);\n        *0x103de20 = *0x103d200 + *0x103de30 + uVar7 * 2 + 0x230d;\n        fcn.01001480();\n        uVar4 = *0x103de24;\n        uVar7 = *0x103de30;\n        uVar6 = *0x103de24;\n        iVar16 = fcn.01020670();\n        iVar16 = iVar16 + uVar4;\n        iVar22 = CONCAT44(uVar6, iVar16);\n        uVar11 = uVar11 - 1;\n        uVar12 = 0;\n        uVar14 = *0x103de20 + -0x3f + iVar16;\n        uVar13 = 0xfffffffe - uVar4;\n        if (uVar14 <= uVar13) {\n            str._yI[0] = str._yI[0] + iVar16;\n            uVar13 = uVar14 * 0x57 + iVar16;\n            iVar22 = CONCAT44(uVar6, iVar16);\n        }\n    }\n    cVar9 = iVar22;\n    if (str._yI[3] + *0x103de50 == 0xc1) {\n        uVar7 = (uVar7 - 0x1a) + (*0x103d200 * 3 - uVar13);\n        uVar3 = *0x103d200;\n    }\n    else {\n        uVar3 = (uVar7 - *0x103d200) + -0x7a + cVar9;\n    }\n    if ((iVar22 >> 0x20 == 0) && (uVar13 < uVar3 + uVar13 + uVar7 * 2 + 0x230d)) {\n        iVar5 = uVar13 * 3 + uVar4 + 0x230d;\n        iVar22 = CONCAT44((CARRY4(uVar13, uVar13 * 2) - (uVar13 >> 0x1f)) + CARRY4(uVar13 * 3, uVar4 + 0x230d), iVar5);\n        uVar3 = (iVar5 - ((cVar9 - uVar3) + -0x73)) + 0x8d;\n    }\n    iVar5 = iVar22 >> 0x20;\n    uVar13 = iVar22;\n    iVar16 = 0x20a9205;\n    uVar7 = uVar4 + 0x230d + uVar13 * 3;\n    uVar1 = CONCAT44(iVar5 + (iVar5 << 1 | uVar13 >> 0x1f) + CARRY4(uVar13, uVar13 * 2) +\n                     CARRY4(uVar4 + 0x230d, uVar13 * 3), uVar7);\n    piVar19 = 0x103df38;\n    uStack120 = (uVar4 - uStack120) + 0x648d & 0xffff;\n    *0x103de30 = uVar1;\n    do {\n        if ((uVar1 != *0x103dea4) || (uVar1 >> 0x20 != 0)) {\n            *piVar19 = *piVar19 - uVar6;\n            iVar22 = fcn.01020670((uVar6 - uVar3) + -0x1e, 0, 0xfffffffe, 0xffffffff);\n            uVar1 = iVar22 + (uVar1 & 0xffffffff00000000 | uVar14);\n            uVar14 = uVar1;\n            *0x103de30 = uVar1;\n        }\n        piVar19 = piVar19 + -1;\n    } while (0x103de80 < piVar19);\n    uVar10 = (uVar1 - uVar3) + 0x8d;\n    uVar3 = uVar10;\n    *0x103d200 = uVar10;\n    uVar6 = uVar4;\n    if (*0x103de88 != 9) {\n        uVar3 = uVar1 >> 0x38;\n        uVar21 = fcn.01020670(uVar10, 0, uVar1);\n        uVar14 = uVar21 - uVar11;\n        iVar17 = (uVar21 >> 0x20) - (uVar21 < uVar11);\n        uVar1 = CONCAT44(iVar17, uVar14);\n        *0x103de30 = uVar1;\n    }\n    *0x103de28 = (uVar3 - uVar1) + *0x103de28 + 0x1e;\n    if (*0x103deb0 == 0x10) {\n        uVar3 = uVar3 + *0x103deb4;\n        *0x103d200 = uVar3;\n        uVar10 = uVar3;\n    }\n    uStack136 = uVar10 << 0x18;\n    uVar11 = uStack120;\n    iVar5 = *0x103de28;\n    do {\n        uVar13 = uVar1;\n        *0x103de20 = ((uVar11 & 0xffff) - uVar4) - 2;\n        if (*0x103de48 == 9) {\n            uVar7 = (uVar3 + 0x648d) - uVar13;\n            uVar1 = CONCAT44(-(uVar3 + 0x648d < uVar13) - (uVar1 >> 0x20), uVar7);\n            *0x103de30 = uVar1;\n        }\n        else {\n            *0x103de20 = uVar3 * *0x103de20 - uVar13;\n            uStack136._3_1_ = uVar3;\n        }\n        uVar2 = uVar1 & 0xffffffff00000000 | uVar7;\n        if (0xf78b < *0x103de20) {\n            uStack120 = (uVar4 - uStack120) + 0x648d & 0xffff;\n            if (str._yI[3] + *0x103de50 == 0xc1) {\n                *0x103de20 = (*0x103de20 - 0x1a) + (uVar3 * 3 - uVar1);\n            }\n            else {\n                uStack136._3_1_ = (*0x103de20 - uStack136._3_1_) + -0x7a + uVar1;\n                uStack136 = uStack136 & 0xffffff | uStack136._3_1_ << 0x18;\n                *0x103d200 = uStack136._3_1_;\n            }\n        }\n        if (uVar12 < 0x47) {\n            uVar11 = (*0x103de20 - 0x38) + uStack120 + uVar4;\n            *0x103de20 = uVar11;\n            if (*0x103de48 == 9) {\n                uVar12 = (uStack136._3_1_ - uVar12) + 0x648d;\n            }\n            else {\n                iVar22 = fcn.01020670(uStack136._3_1_, 0, uVar1, uVar14, iVar17);\n                *0x103de30 = iVar22 - uVar7;\n            }\n            uStack120 = (uVar4 - 0x3f) + uVar11 & 0xffff;\n            (*_sym.imp.KERNEL32.dll_GetEnvironmentVariableA)(\"Conta\", &stack0xffffffac, 1999);\n            uVar4 = *0x103de24;\n            uStack136._3_1_ = *0x103d200;\n            iVar5 = *0x103de28;\n            if (uVar12 < *0x103de50) {\n                uStack136 = uStack136 & 0xffffff | *0x103d200 << 0x18;\n                uVar2 = *0x103de30;\n            }\n            else {\n                *0x103de5c = *0x103d200;\n                uStack136 = uStack136 & 0xffffff | *0x103d200 << 0x18;\n                uVar11 = *0x103de5c * 0x57 + uVar12;\n                uVar7 = (uVar12 - 0x38) + *0x103de5c;\n                *0x103de30 = CONCAT44((uVar11 >> 0x1f) + (uVar7 >> 0x1f) + CARRY4(uVar11, uVar7), uVar11 + uVar7);\n                uVar2 = *0x103de30;\n            }\n        }\n        uVar11 = uVar2;\n        if (*0x103de48 == 9) {\n            uVar4 = (iVar5 - uVar4) + 0x648d;\n            *0x103de24 = uVar4;\n        }\n        else {\n            *0x103de20 = iVar5 * *0x103de20 - uVar4;\n        }\n        if (iVar16 == 0) {\n            uVar6 = uVar11 * 0x57 + uStack80 & 0xffff;\n            if (str._yI[2] == L'\\x10') {\n                *0x103d200 = uStack136._3_1_ + str._yI[3];\n                uVar4 = 0xfffffffe;\n            }\n            iVar5 = (uVar4 - uVar11) + -2;\n            if (*0x103de50 <= uVar6) {\n                uStack88._0_1_ = uVar6;\n                *0x103d200 = (uVar4 * ',' + uStack88) * '\\x02' - 0x38;\n                *0x103de5c = uVar4;\n            }\n            *0x103de30 = 0x62d;\n            *0x103de34 = 0;\n            *0x103de24 = uVar4 * iVar5 + -0x62d;\n            *0x103de20 = (*0x103de24 - iVar5) + 0x648d;\n            *0x103de24 = fcn.0102e6c0(*0x10d1938, *0x103de20);\n            uVar4 = uVar6 * 2 + 0x230d + *0x103de20 + *0x103de30 & 0xffff;\n            uVar6 = *0x103de90 + *0x103deb4;\n            if (uVar6 == 0xc1) {\n                uVar12 = (*0x103de20 - *0x103d200) - 0x1e;\n                uVar11 = *0x103d200 * 2 - 0x38;\n                uVar6 = uVar11 - uVar12;\n                bVar20 = CARRY4(*0x103de30, uVar6);\n                *0x103de30 = *0x103de30 + uVar6;\n                *0x103de34 = *0x103de34 + ((uVar11 >> 0x1f) - (uVar11 < uVar12)) + bVar20;\n            }\n            else {\n                *0x103d200 = (*0x103de20 - *0x103d200) + -0x7a + *0x103de30;\n            }\n            *0x103d200 = (*0x103de30 - *0x103d200) + 0x8d;\n            piVar19 = *0x103de30 & 0xffffff00 | *0x103d200;\n            *piVar19 = *piVar19 + uVar6;\n            if (uVar6 == 0xfefc224d) {\n                uVar11 = (uVar4 - *0x103de24) - 0x1e;\n                uVar6 = *0x103de24 * 2 - 0x38;\n                uVar4 = uVar6 - uVar11;\n                bVar20 = CARRY4(*0x103de30, uVar4);\n                *0x103de30 = *0x103de30 + uVar4;\n                *0x103de34 = (*0x103de34 - (uVar6 < uVar11)) + bVar20;\n                return CONCAT44(uVar11, *0x103d200);\n            }\n            *0x103de24 = *0x103de30 + 0x6486 + (uVar4 - *0x103de24);\n            return CONCAT44(0xa1c52070, *0x103d200);\n        }\n        uVar7 = uStack136._3_1_;\n        if (*0x103de48 == 9) {\n            *0x103de30 = CONCAT44(-(uVar7 + 0x648d < uVar11) - (uVar2 >> 0x20), (uVar7 + 0x648d) - uVar11);\n            uVar2 = *0x103de30;\n        }\n        else {\n            *0x103de20 = uVar7 * *0x103de20 - uVar11;\n        }\n        uVar11 = uVar2;\n        if (uStack88 < 9) {\n            uStack88 = uStack88 - 1;\n            uStack120 = (uVar4 - 7) + *0x103de20 & 0xffff;\n            iVar5 = iVar5 + 0x1e + (uStack120 - uStack88);\n        }\n        *0x103de20 = uVar4 + 0x230d + uStack120 + *0x103de20 * 2;\n        if (*0x103de48 == 9) {\n            *0x103de30 = CONCAT44(-(uVar7 + 0x648d < uVar11) - (uVar2 >> 0x20), (uVar7 + 0x648d) - uVar11);\n            uVar2 = *0x103de30;\n        }\n        else {\n            *0x103de20 = *0x103de20 * uVar7 - uVar11;\n        }\n        if (str._yI[2] == L'\\x10') {\n            *0x103de30 = L\"/yI\u00d1\u00bd\u00a1\u00c6\\x16\u00e9\u00bb\\x1e\\x9e\\x10\u00b1\\fS\u00b3\u00cc\u00b81\u00f4\u00f4\" + uVar2 + 0xc;\n            *0x103de20 = 0xfffffffe;\n            uVar2 = *0x103de30;\n        }\n        *0x103de28 = (uStack120 - uStack104) + iVar5 + 0x1e;\n        uVar11 = uStack120;\n        if (0x97d < uStack120) {\n            *0x103de20 = (*0x103de20 - 0x38) + uStack120 + uVar4;\n            if ((*0x103de28 == uVar2) && (uVar2 >> 0x20 == 0)) {\n                if (str._yI[2] == L'\\x10') {\n                    *0x103d200 = uStack136._3_1_ + str._yI[3];\n                    *0x103de20 = 0xfffffffe;\n                }\n                *0x103de20 = fcn.01024550();\n                uVar2 = *0x103de30;\n                if (*0x103de48 != 9) {\n                    uStack136 = uStack136 & 0xffffff | *0x103d200 << 0x18;\n                    uVar4 = *0x103de30 * *0x103de24 - *0x103d200;\n                    goto code_r0x01024163;\n                }\n                *0x103d200 = (*0x103de30 - *0x103d200) + 0x8d;\n                uStack136 = uStack136 & 0xffffff | *0x103d200 << 0x18;\n                uVar4 = *0x103de24;\n            }\n            else {\ncode_r0x01024163:\n                if (*0x103de48 != 9) {\n                    *0x103de20 = *0x103de20 * uVar2 - uVar4;\n                    goto code_r0x010241a0;\n                }\n            }\n            uVar4 = (uVar2 - uVar4) + 0x648d;\n        }\ncode_r0x010241a0:\n        uVar7 = uVar2;\n        if (str._yI[2] == L'\\x10') {\n            uVar4 = uVar4 + str._yI[3];\n            *0x103de20 = 0xfffffffe;\n        }\n        if (uStack104 < 0xe) {\n            if (*0x103de48 == 9) {\n                uVar4 = (uVar11 - uVar4) + 0x648d;\n            }\n            else {\n                *0x103de20 = *0x103de20 * uVar11 - uVar4;\n            }\n            if (str._yI[2] == L'\\x10') {\n                uVar4 = uVar4 + str._yI[3];\n                *0x103de28 = -2;\n            }\n            uStack104 = uStack104 - 1;\n        }\n        if (uVar4 <= *0x103de20) {\n            str._yI[0] = str._yI[0] + uVar11;\n            *0x103de20 = uVar4 * 0x57 + uVar11;\n        }\n        uVar13 = uVar7;\n        if (uVar11 <= uVar2) {\n            str._yI[0] = str._yI[0] + (uStack136 >> 0x18);\n            uVar13 = uVar11 * 0x57 + (uStack136 >> 0x18);\n        }\n        if (*0x103de50 + str._yI[3] == 0xc1) {\n            *0x103de20 = (uVar13 * 3 - uVar4) + -0x1a + *0x103de20;\n        }\n        iVar22 = fcn.01020670();\n        *0x103de30 = iVar22 + 0xc;\n        *0x103de24 = *0x103de28 + -0x38 + uVar12 + uVar4;\n        fcn.01001480();\n        if (str._yI[2] == L'\\x10') {\n            *0x103de24 = *0x103de24 + str._yI[3];\n            *0x103de30 = 0xfffffffe;\n        }\n        iVar25 = *0x103de30 >> 0x20;\n        uVar4 = *0x103de30;\n        uVar14 = *0x103de24 + 0x230d + uVar4 * 3;\n        iVar17 = iVar25 + (iVar25 << 1 | uVar4 >> 0x1f) + CARRY4(uVar4, uVar4 * 2) +\n                 CARRY4(*0x103de24 + 0x230d, uVar4 * 3);\n        uVar1 = CONCAT44(iVar17, uVar14);\n        uVar12 = uVar12 - 1;\n        *0x103de28 = (uVar14 - uVar6) + -2;\n        uVar3 = *0x103d200;\n        if (uVar6 < 2) {\n            if (0x56 < *0x103de20) {\n                str._yI[0] = str._yI[0] + *0x103de24;\n            }\n            if (str._yI[2] == L'\\x10') {\n                bVar20 = CARRY4(uVar14, str._yI[3]);\n                uVar14 = uVar14 + str._yI[3];\n                iVar17 = iVar17 + bVar20;\n            }\n            uVar1 = CONCAT44(iVar17, uVar14);\n            uStack136 = (uVar6 - 8) + *0x103de28 & 0xffff;\n            uVar4 = uVar14 + 0x15 + *0x103de24;\n            uVar11 = uStack136;\n            *0x103de24 = uVar4;\n            uVar6 = uVar6 - 1;\n            *0x103de30 = uVar1;\n        }\n        else {\n            if (*0x103de50 <= uStack120) {\n                *0x103de5c = *0x103d200;\n            }\n            uVar4 = uVar14 + 0x15 + *0x103de24;\n            uVar11 = uStack136;\n            *0x103de24 = uVar4;\n            *0x103de30 = uVar1;\n        }\n    } while( true );\n}\n",
        "token_count": 8119
    },
    "01016eda": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_44h\n\nvoid __cdecl fcn.01016eda(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint8_t uVar3;\n    bool bVar4;\n    bool bVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint8_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    uint *puVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x103c008 ^ &stack0xfffffffc;\n    uVar1 = arg_8h[5];\n    iVar14 = 0;\n    uVar10 = uVar1 & 0x7fff;\n    uVar16 = *(arg_8h + 3);\n    iVar11 = uVar10 - 0x3fff;\n    var_10h = uVar16;\n    uVar17 = *(arg_8h + 1);\n    var_ch = uVar17;\n    uVar2 = *arg_8h;\n    var_8h = uVar2 << 0x10;\n    uVar3 = str.5_v_[1];\n    if (iVar11 == -0x3fff) {\n        iVar15 = 0;\n        iVar11 = 0;\n        do {\n            if ((&var_10h)[iVar11] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                goto code_r0x01016f4f;\n            }\n            iVar11 = iVar11 + 1;\n        } while (iVar11 < 3);\n    }\n    else {\n        iVar6 = str.5_v_[0] + L'\\xffffffff';\n        bVar5 = false;\n        iVar15 = (str.5_v_[0] >> 0x1f & 0x1fU) + str.5_v_[0] >> 5;\n        uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n        if (((&var_10h)[iVar15] & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar7 = (&var_10h)[iVar15] & ~(-1 << (uVar8 & 0x1f));\n            iVar12 = iVar15;\n            while (uVar7 == 0) {\n                iVar12 = iVar12 + 1;\n                if (2 < iVar12) goto code_r0x0101704f;\n                uVar7 = (&var_10h)[iVar12];\n            }\n            iVar12 = (iVar6 >> 0x1f & 0x1fU) + iVar6 >> 5;\n            bVar5 = false;\n            uVar7 = 1 << (0x1f - (iVar6 & 0x1f) & 0x1f);\n            uVar9 = uVar7 + (&var_10h)[iVar12];\n            bVar4 = false;\n            if ((uVar9 < (&var_10h)[iVar12]) || (uVar9 < uVar7)) {\n                bVar4 = true;\n                bVar5 = true;\n            }\n            (&var_10h)[iVar12] = uVar9;\n            while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar4))) {\n                bVar4 = false;\n                bVar5 = false;\n                uVar7 = (&var_10h)[iVar12] + 1;\n                if ((uVar7 < (&var_10h)[iVar12]) || (uVar7 == 0)) {\n                    bVar4 = true;\n                    bVar5 = true;\n                }\n                (&var_10h)[iVar12] = uVar7;\n            }\n        }\ncode_r0x0101704f:\n        (&var_10h)[iVar15] = (&var_10h)[iVar15] & -1 << (uVar8 & 0x1f);\n        iVar15 = iVar15 + 1;\n        if (iVar15 < 3) {\n            puVar13 = &var_10h + iVar15;\n            for (iVar12 = 3 - iVar15; iVar12 != 0; iVar12 = iVar12 + -1) {\n                *puVar13 = 0;\n                puVar13 = puVar13 + 1;\n            }\n        }\n        iVar15 = iVar11;\n        if (bVar5) {\n            iVar15 = uVar10 - 0x3ffe;\n        }\n        if (iVar15 < *0x103ceec - str.5_v_[0]) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x103ceec < iVar15) {\n                if (iVar15 < *0x103cee8) {\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar15 = str.5_v_[3] + iVar15;\n                    iVar11 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar3 & 0x1f;\n                    var_20h = 0;\n                    iVar14 = 0;\n                    do {\n                        uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                        var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        (&var_10h)[iVar14] = uVar16;\n                        iVar14 = iVar14 + 1;\n                    } while (iVar14 < 3);\n                    puVar13 = &var_8h + -iVar11;\n                    iVar14 = 2;\n                    do {\n                        if (iVar14 < iVar11) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar13;\n                        }\n                        puVar13 = puVar13 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar11 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar3 & 0x1f;\n                    var_20h = 0;\n                    do {\n                        uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                        var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        (&var_10h)[iVar14] = uVar16;\n                        iVar14 = iVar14 + 1;\n                    } while (iVar14 < 3);\n                    puVar13 = &var_8h + -iVar11;\n                    iVar14 = 2;\n                    do {\n                        if (iVar14 < iVar11) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar13;\n                        }\n                        puVar13 = puVar13 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar15 = str.5_v_[3] + *0x103cee8;\n                }\n                goto code_r0x01017400;\n            }\n            iVar11 = *0x103ceec - iVar11;\n            var_10h = uVar16;\n            iVar15 = iVar11 + (iVar11 >> 0x1f & 0x1fU) >> 5;\n            var_ch = uVar17;\n            var_8h = uVar2 << 0x10;\n            uVar8 = iVar11 & 0x1f;\n            var_20h = 0;\n            do {\n                uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                (&var_10h)[iVar14] = uVar16;\n                iVar14 = iVar14 + 1;\n            } while (iVar14 < 3);\n            puVar13 = &var_8h + -iVar15;\n            iVar11 = 2;\n            do {\n                if (iVar11 < iVar15) {\n                    (&var_10h)[iVar11] = 0;\n                }\n                else {\n                    (&var_10h)[iVar11] = *puVar13;\n                }\n                puVar13 = puVar13 + -1;\n                iVar11 = iVar11 + -1;\n            } while (-1 < iVar11);\n            iVar11 = (str.5_v_[0] >> 0x1f & 0x1fU) + str.5_v_[0] >> 5;\n            uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n            if (((&var_10h)[iVar11] & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar16 = (&var_10h)[iVar11] & ~(-1 << (uVar8 & 0x1f));\n                iVar14 = iVar11;\n                while (uVar16 == 0) {\n                    iVar14 = iVar14 + 1;\n                    if (2 < iVar14) goto code_r0x0101720a;\n                    uVar16 = (&var_10h)[iVar14];\n                }\n                iVar14 = (iVar6 >> 0x1f & 0x1fU) + iVar6 >> 5;\n                uVar16 = 1 << (0x1f - (iVar6 & 0x1f) & 0x1f);\n                bVar5 = false;\n                uVar17 = uVar16 + (&var_10h)[iVar14];\n                if ((uVar17 < (&var_10h)[iVar14]) || (uVar17 < uVar16)) {\n                    bVar5 = true;\n                }\n                (&var_10h)[iVar14] = uVar17;\n                while ((iVar14 = iVar14 + -1,  -1 < iVar14 && (bVar5))) {\n                    bVar5 = false;\n                    uVar16 = (&var_10h)[iVar14] + 1;\n                    if ((uVar16 < (&var_10h)[iVar14]) || (uVar16 == 0)) {\n                        bVar5 = true;\n                    }\n                    (&var_10h)[iVar14] = uVar16;\n                }\n            }\ncode_r0x0101720a:\n            (&var_10h)[iVar11] = (&var_10h)[iVar11] & -1 << (uVar8 & 0x1f);\n            iVar11 = iVar11 + 1;\n            if (iVar11 < 3) {\n                puVar13 = &var_10h + iVar11;\n                for (iVar14 = 3 - iVar11; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar13 = 0;\n                    puVar13 = puVar13 + 1;\n                }\n            }\n            iVar14 = str.5_v_[1] + L'\\x01';\n            iVar11 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar14 & 0x1f;\n            var_20h = 0;\n            var_34h = 0;\n            do {\n                uVar16 = (&var_10h)[var_34h];\n                (&var_10h)[var_34h] = uVar16 >> uVar8 | var_20h;\n                var_20h = (uVar16 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_34h = var_34h + 1;\n            } while (var_34h < 3);\n            puVar13 = &var_8h + -iVar11;\n            iVar14 = 2;\n            do {\n                if (iVar14 < iVar11) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar13;\n                }\n                puVar13 = puVar13 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\ncode_r0x01016f4f:\n        iVar15 = 0;\n    }\ncode_r0x01017400:\n    uVar16 = iVar15 << (0x1f - uVar3 & 0x1f) | -((uVar1 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = uVar16;\n        *arg_ch = var_ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = uVar16;\n    }\n    fcn.01002695(uVar1 & 0x8000);\n    return;\n}\n",
        "token_count": 3223
    },
    "0101744c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_44h\n\nvoid __cdecl fcn.0101744c(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint8_t uVar3;\n    bool bVar4;\n    bool bVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint8_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    uint *puVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x103c008 ^ &stack0xfffffffc;\n    uVar1 = arg_8h[5];\n    iVar14 = 0;\n    uVar10 = uVar1 & 0x7fff;\n    uVar16 = *(arg_8h + 3);\n    iVar11 = uVar10 - 0x3fff;\n    var_10h = uVar16;\n    uVar17 = *(arg_8h + 1);\n    var_ch = uVar17;\n    uVar2 = *arg_8h;\n    var_8h = uVar2 << 0x10;\n    uVar3 = *0x103cf0c;\n    if (iVar11 == -0x3fff) {\n        iVar15 = 0;\n        iVar11 = 0;\n        do {\n            if ((&var_10h)[iVar11] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                goto code_r0x010174c1;\n            }\n            iVar11 = iVar11 + 1;\n        } while (iVar11 < 3);\n    }\n    else {\n        iVar6 = *0x103cf08 + -1;\n        bVar5 = false;\n        iVar15 = (*0x103cf08 >> 0x1f & 0x1fU) + *0x103cf08 >> 5;\n        uVar8 = 0x1f - (*0x103cf08 & 0x1f);\n        if (((&var_10h)[iVar15] & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar7 = (&var_10h)[iVar15] & ~(-1 << (uVar8 & 0x1f));\n            iVar12 = iVar15;\n            while (uVar7 == 0) {\n                iVar12 = iVar12 + 1;\n                if (2 < iVar12) goto code_r0x010175c1;\n                uVar7 = (&var_10h)[iVar12];\n            }\n            iVar12 = (iVar6 >> 0x1f & 0x1fU) + iVar6 >> 5;\n            bVar5 = false;\n            uVar7 = 1 << (0x1f - (iVar6 & 0x1f) & 0x1f);\n            uVar9 = uVar7 + (&var_10h)[iVar12];\n            bVar4 = false;\n            if ((uVar9 < (&var_10h)[iVar12]) || (uVar9 < uVar7)) {\n                bVar4 = true;\n                bVar5 = true;\n            }\n            (&var_10h)[iVar12] = uVar9;\n            while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar4))) {\n                bVar4 = false;\n                bVar5 = false;\n                uVar7 = (&var_10h)[iVar12] + 1;\n                if ((uVar7 < (&var_10h)[iVar12]) || (uVar7 == 0)) {\n                    bVar4 = true;\n                    bVar5 = true;\n                }\n                (&var_10h)[iVar12] = uVar7;\n            }\n        }\ncode_r0x010175c1:\n        (&var_10h)[iVar15] = (&var_10h)[iVar15] & -1 << (uVar8 & 0x1f);\n        iVar15 = iVar15 + 1;\n        if (iVar15 < 3) {\n            puVar13 = &var_10h + iVar15;\n            for (iVar12 = 3 - iVar15; iVar12 != 0; iVar12 = iVar12 + -1) {\n                *puVar13 = 0;\n                puVar13 = puVar13 + 1;\n            }\n        }\n        iVar15 = iVar11;\n        if (bVar5) {\n            iVar15 = uVar10 - 0x3ffe;\n        }\n        if (iVar15 < *0x103cf04 - *0x103cf08) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x103cf04 < iVar15) {\n                if (iVar15 < *0x103cf00) {\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar15 = *0x103cf14 + iVar15;\n                    iVar11 = *0x103cf0c + (*0x103cf0c >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar3 & 0x1f;\n                    var_20h = 0;\n                    iVar14 = 0;\n                    do {\n                        uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                        var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        (&var_10h)[iVar14] = uVar16;\n                        iVar14 = iVar14 + 1;\n                    } while (iVar14 < 3);\n                    puVar13 = &var_8h + -iVar11;\n                    iVar14 = 2;\n                    do {\n                        if (iVar14 < iVar11) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar13;\n                        }\n                        puVar13 = puVar13 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar11 = *0x103cf0c + (*0x103cf0c >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar3 & 0x1f;\n                    var_20h = 0;\n                    do {\n                        uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                        var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        (&var_10h)[iVar14] = uVar16;\n                        iVar14 = iVar14 + 1;\n                    } while (iVar14 < 3);\n                    puVar13 = &var_8h + -iVar11;\n                    iVar14 = 2;\n                    do {\n                        if (iVar14 < iVar11) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar13;\n                        }\n                        puVar13 = puVar13 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar15 = *0x103cf14 + *0x103cf00;\n                }\n                goto code_r0x01017972;\n            }\n            iVar11 = *0x103cf04 - iVar11;\n            var_10h = uVar16;\n            iVar15 = iVar11 + (iVar11 >> 0x1f & 0x1fU) >> 5;\n            var_ch = uVar17;\n            var_8h = uVar2 << 0x10;\n            uVar8 = iVar11 & 0x1f;\n            var_20h = 0;\n            do {\n                uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                (&var_10h)[iVar14] = uVar16;\n                iVar14 = iVar14 + 1;\n            } while (iVar14 < 3);\n            puVar13 = &var_8h + -iVar15;\n            iVar11 = 2;\n            do {\n                if (iVar11 < iVar15) {\n                    (&var_10h)[iVar11] = 0;\n                }\n                else {\n                    (&var_10h)[iVar11] = *puVar13;\n                }\n                puVar13 = puVar13 + -1;\n                iVar11 = iVar11 + -1;\n            } while (-1 < iVar11);\n            iVar11 = (*0x103cf08 >> 0x1f & 0x1fU) + *0x103cf08 >> 5;\n            uVar8 = 0x1f - (*0x103cf08 & 0x1f);\n            if (((&var_10h)[iVar11] & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar16 = (&var_10h)[iVar11] & ~(-1 << (uVar8 & 0x1f));\n                iVar14 = iVar11;\n                while (uVar16 == 0) {\n                    iVar14 = iVar14 + 1;\n                    if (2 < iVar14) goto code_r0x0101777c;\n                    uVar16 = (&var_10h)[iVar14];\n                }\n                iVar14 = (iVar6 >> 0x1f & 0x1fU) + iVar6 >> 5;\n                uVar16 = 1 << (0x1f - (iVar6 & 0x1f) & 0x1f);\n                bVar5 = false;\n                uVar17 = uVar16 + (&var_10h)[iVar14];\n                if ((uVar17 < (&var_10h)[iVar14]) || (uVar17 < uVar16)) {\n                    bVar5 = true;\n                }\n                (&var_10h)[iVar14] = uVar17;\n                while ((iVar14 = iVar14 + -1,  -1 < iVar14 && (bVar5))) {\n                    bVar5 = false;\n                    uVar16 = (&var_10h)[iVar14] + 1;\n                    if ((uVar16 < (&var_10h)[iVar14]) || (uVar16 == 0)) {\n                        bVar5 = true;\n                    }\n                    (&var_10h)[iVar14] = uVar16;\n                }\n            }\ncode_r0x0101777c:\n            (&var_10h)[iVar11] = (&var_10h)[iVar11] & -1 << (uVar8 & 0x1f);\n            iVar11 = iVar11 + 1;\n            if (iVar11 < 3) {\n                puVar13 = &var_10h + iVar11;\n                for (iVar14 = 3 - iVar11; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar13 = 0;\n                    puVar13 = puVar13 + 1;\n                }\n            }\n            iVar14 = *0x103cf0c + 1;\n            iVar11 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar14 & 0x1f;\n            var_20h = 0;\n            var_34h = 0;\n            do {\n                uVar16 = (&var_10h)[var_34h];\n                (&var_10h)[var_34h] = uVar16 >> uVar8 | var_20h;\n                var_20h = (uVar16 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_34h = var_34h + 1;\n            } while (var_34h < 3);\n            puVar13 = &var_8h + -iVar11;\n            iVar14 = 2;\n            do {\n                if (iVar14 < iVar11) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar13;\n                }\n                puVar13 = puVar13 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\ncode_r0x010174c1:\n        iVar15 = 0;\n    }\ncode_r0x01017972:\n    uVar16 = iVar15 << (0x1f - uVar3 & 0x1f) | -((uVar1 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (*0x103cf10 == 0x40) {\n        arg_ch[1] = uVar16;\n        *arg_ch = var_ch;\n    }\n    else if (*0x103cf10 == 0x20) {\n        *arg_ch = uVar16;\n    }\n    fcn.01002695(uVar1 & 0x8000);\n    return;\n}\n",
        "token_count": 3204
    },
    "01001480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nvoid fcn.01001480(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    bool bVar7;\n    int32_t *piStack16;\n    int32_t iStack12;\n    \n    uVar4 = 0x73fU - *0x103de28 & 0xffff;\n    iVar5 = 0;\n    uVar6 = 0x23;\n    if (*0x103de50 <= uVar4) {\n        *0x103de5c = 0x23;\n        uVar4 = uVar4 * 4 + 0x178b & 0xffff;\n    }\n    uVar1 = *0x103d200;\n    iStack12 = 0x48;\n    *0x103de28 = *0x103de24 * 0x57 + uVar1;\n    piStack16 = *0x10d1938;\n    do {\n        if (str._yI[2] == L'\\x10') {\n            bVar7 = CARRY4(uVar6, str._yI[3]);\n            uVar6 = uVar6 + str._yI[3];\n            *0x103de20 = 0xfffffffe;\n            iVar5 = iVar5 + bVar7;\n        }\n        iVar2 = uVar4 + 0x230d + uVar1 + *0x103de20 * 2;\n        if (*0x103de48 == 9) {\n            uVar4 = (*0x103de28 - uVar4) + 0x648d & 0xffff;\n        }\n        else {\n            iVar2 = iVar2 * *0x103de28 - uVar4;\n        }\n        *0x10d28d0 = *piStack16 + 0x1064acc;\n        *0x103de20 = (uVar4 - uVar6) + iVar2 + 0x1e;\n        *piStack16 = *0x10d28d0;\n        piStack16 = piStack16 + 1;\n        iStack12 = iStack12 + -1;\n    } while (iStack12 != 0);\n    uVar1 = *0x103de28 + 0x230d + uVar4;\n    uVar3 = uVar1 + uVar6 * 2;\n    if (*0x103de48 != 9) {\n        *0x103de20 = *0x103de20 * uVar3 - uVar4;\n    }\n    if (((iVar5 << 1 | uVar6 >> 0x1f) + CARRY4(uVar1, uVar6 * 2) == 0) && (uVar3 <= *0x103de20)) {\n        str._yI[0] = str._yI[0] + *0x103de24;\n        *0x103de20 = uVar3 * 0x57 + *0x103de24;\n    }\n    return;\n}\n",
        "token_count": 687
    },
    "01023030": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.01023030(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint8_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    \n    iVar5 = 0x278;\n    uVar6 = *0x103d200 + *0x103de24 + '@';\n    uVar8 = uVar6;\n    if (uVar8 < 0x279) {\n        str._yI[0] = str._yI[0] + param_1;\n        iVar5 = uVar8 * 0x57 + param_1;\n    }\n    uVar3 = *0x103de30 * *0x103de24 - *0x103de20;\n    if (*0x103de50 <= param_1) {\n        iVar5 = (uVar3 * 0x2c + param_1) * 2 + -0x38;\n        *0x103de5c = uVar3;\n    }\n    iVar2 = iVar5 - uVar3;\n    if (*0x103de50 <= param_1) {\n        iVar5 = (uVar8 * 0x2c + param_1) * 2 + -0x38;\n        *0x103de5c = uVar8;\n    }\n    iVar2 = uVar8 * (iVar2 + 0x648d) - iVar5;\n    uVar9 = *0x103de20 + 0x230d + iVar2;\n    uVar3 = *0x103de30 >> 0x1f;\n    uVar1 = *0x103de30 * 2;\n    uVar10 = uVar9 + uVar1;\n    piVar4 = 0x103def8;\n    do {\n        if (iVar5 != *0x103de64) {\n            *piVar4 = *piVar4 - param_1;\n            iVar5 = iVar5 + (iVar2 - param_1) * 2 + 0x3c;\n        }\n        piVar4 = piVar4 + -1;\n    } while (0x103de40 < piVar4);\n    if (*0x103de48 != 9) {\n        iVar5 = iVar5 * uVar8 - param_1;\n    }\n    uVar7 = *0x103de20 + uVar8 + 0x2306 + iVar5;\n    uVar8 = uVar10 * 2;\n    *0x103de30 = uVar7 + uVar8;\n    *0x103de24 = *0x103de20 + -0x3f + *0x103de30;\n    *0x103d200 = uVar6 + *0x103de24 + -0x38 + iVar5;\n    if (str._yI[2] == L'\\x10') {\n        *0x103d200 = *0x103d200 + str._yI[3];\n    }\n    *0x103de34 = (((*0x103de34 << 1 | uVar3) + CARRY4(uVar9, uVar1)) * 2 | uVar10 >> 0x1f) + CARRY4(uVar7, uVar8);\n    return *0x103de30;\n}\n",
        "token_count": 779
    },
    "01024550": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.01024550(uint32_t param_1)\n\n{\n    uint32_t *puVar1;\n    uint64_t uVar2;\n    uint8_t uVar3;\n    char cVar4;\n    int32_t iVar5;\n    char32_t cVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    uint32_t unaff_ESI;\n    uint32_t unaff_EDI;\n    int32_t *piVar13;\n    int64_t iVar14;\n    \n    uVar7 = 0;\n    iVar9 = 0x5f1;\n    cVar6 = *0x103de24;\n    if (str._yI[3] + *0x103de50 != 0xc1) {\n        cVar6 = *0x103de28 + (0x878f - *0x103d200) + *0x103de24 * 2;\n    }\n    uVar3 = *0x103d200;\n    if (str._yI[2] == L'\\x10') {\n        uVar3 = *0x103d200 + str._yI[3];\n        iVar9 = -2;\n        uVar7 = 0xffffffff;\n    }\n    if (*0x103de50 <= param_1) {\n        *0x103de5c = uVar3;\n        uVar7 = (*0x103de5c - 0x38) + param_1;\n        uVar10 = *0x103de5c * 0x57 + param_1;\n        iVar9 = uVar10 + uVar7;\n        uVar7 = CARRY4(uVar10, uVar7);\n    }\n    uVar2 = CONCAT44(uVar7, iVar9);\n    piVar13 = 0x103def8;\n    uVar7 = param_1;\n    do {\n        if ((uVar2 != *0x103de64) || (uVar2 >> 0x20 != 0)) {\n            *piVar13 = *piVar13 - uVar7;\n            iVar9 = uVar7 - cVar6;\n            uVar7 = unaff_ESI;\n            iVar14 = fcn.01020670(iVar9 + -0x1e, 0, 0xfffffffe, 0xffffffff);\n            uVar2 = iVar14 + (uVar2 & 0xffffffff | unaff_EDI << 0x20);\n            unaff_EDI = uVar2 >> 0x20;\n            unaff_ESI = uVar7;\n        }\n        piVar13 = piVar13 + -1;\n    } while (0x103de40 < piVar13);\n    uVar7 = (cVar6 - uVar2) - 2;\n    iVar9 = cVar6 * 0x57 + uVar7;\n    piVar13 = 0x103de44;\n    *0x103de20 = iVar9;\n    do {\n        if (cVar6 != str._yI[0]) {\n            iVar9 = iVar9 - *piVar13;\n            cVar6 = cVar6 * iVar9 - *0x103de28;\n            *0x103de20 = iVar9;\n            if (iVar9 == *0x103de60) break;\n        }\n        piVar13 = piVar13 + 1;\n    } while (piVar13 < 0x103defc);\n    cVar6 = (iVar9 - cVar6) + L'\u648d';\n    if (*0x103de50 <= param_1) {\n        uVar10 = (uVar7 - 0x38) + param_1;\n        uVar11 = uVar7 * 0x57 + param_1;\n        uVar2 = CONCAT14(CARRY4(uVar11, uVar10), uVar11 + uVar10);\n        *0x103de5c = uVar7;\n    }\n    iVar5 = cVar6 * 0x57 + iVar9;\n    *0x10d28a8 = 1;\n    do {\n        if (cVar6 != str._yI[0]) {\n            puVar1 = *0x10d28a8 * 4 + 0x103de40;\n            iVar12 = uVar2 - *puVar1;\n            iVar8 = (uVar2 >> 0x20) - (uVar2 < *puVar1);\n            cVar6 = cVar6 * iVar12 - param_1;\n            uVar2 = CONCAT44(iVar8, iVar12);\n            if ((iVar12 == *0x103de60) && (uVar2 = CONCAT44(iVar8, iVar12),  iVar8 == 0)) break;\n        }\n        *0x10d28a8 = *0x10d28a8 + 1;\n    } while (*0x10d28a8 < 0x2f);\n    uVar7 = (uVar7 - 0x3f) + uVar2;\n    if (*0x103de50 <= *0x103de28) {\n        iVar9 = uVar7 * 0x58 + -0x38 + *0x103de28 * 2;\n        *0x103de20 = iVar9;\n        *0x103de5c = uVar7;\n    }\n    if (str._yI[2] == L'\\x10') {\n        uVar2 = 0xfffffffffffffffe;\n    }\n    uVar11 = uVar7 + 0x230d + iVar9;\n    uVar10 = iVar5 * 2;\n    iVar8 = uVar11 + uVar10;\n    *0x103de34 = CARRY4(uVar11, uVar10) - (iVar5 >> 0x1f);\n    if (str._yI[2] == L'\\x10') {\n        uVar2 = 0xfffffffffffffffe;\n    }\n    cVar4 = uVar2;\n    *0x103de24 = iVar8 * uVar7 - iVar9;\n    uVar7 = *0x103de24;\n    *0x103de30 = iVar8;\n    if (*0x103de48 != 9) {\n        cVar4 = fcn.01020670(*0x103de24, 0, uVar2);\n        cVar4 = cVar4 - unaff_ESI;\n        uVar7 = param_1;\n    }\n    *0x103d200 = (uVar7 - cVar4) + -2;\n    return iVar8;\n}\n",
        "token_count": 1478
    },
    "0102e6c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0102e6c0(code *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    uint lpflOldProtect;\n    int32_t var_1ch;\n    uint dwSize;\n    uint flNewProtect;\n    int32_t var_10h;\n    int32_t var_ch;\n    code *lpAddress;\n    int32_t var_4h;\n    \n    var_4h = 0x35;\n    flNewProtect = 0x40;\n    dwSize = 0x30a9;\n    var_ch = *0x103de48;\n    if (*0x103de48 == 9) {\n        *0x103de30 = (*0x103de24 + 0x648d) - *0x103de30;\n    }\n    else {\n        *0x103de28 = *0x103de24 * *0x103de28 - *0x103de30;\n    }\n    *0x103d200 = *0x103de30 + 0xa0;\n    *0x103de30 = arg_ch - 10;\n    *0x103de34 = 0;\n    var_10h = *0x103de48;\n    if (*0x103de48 == 9) {\n        *0x103d200 = -*0x103d200 - 0x3e;\n    }\n    else {\n        *0x103de28 = *0x103de28 * 0x35 - *0x103d200;\n    }\n    iVar1 = fcn.01020670(*0x103de30, 0, 0x35, 0);\n    lpAddress = arg_8h;\n    var_4h = (iVar1 - *0x103de20) - ((arg_ch + -0x1e) - *0x103de30);\n    if (*0x103de50 <= *0x103d200) {\n        *0x103de28 = *0x103d200 + *0x103d200 + var_4h * 0x57 + -0x38 + var_4h;\n        *0x103de5c = var_4h;\n    }\n    uVar2 = (*0x103de20 + -0x1e) - var_4h;\n    bVar3 = *0x103de30 < uVar2;\n    *0x103de30 = *0x103de30 - uVar2;\n    *0x103de34 = *0x103de34 - bVar3;\n    var_4h = (*_sym.imp.KERNEL32.dll_GetTempPathA)(1999, 0x103f000);\n    (*_sym.imp.KERNEL32.dll_VirtualProtect)(lpAddress, dwSize, flNewProtect, &lpflOldProtect);\n    if (*0x103de74 + *0x103de50 == 0xc1) {\n        *0x103de28 = (*0x103de24 * 3 + -0x38 + *0x103de28) - (*0x103de20 + -0x1e);\n    }\n    else {\n        *0x103de24 = *0x103de28 + ((*0x103de20 + 0x6486) - *0x103de24);\n    }\n    var_4h = *0x103de30 + -7 + *0x103de20;\n    var_4h = (*_sym.imp.KERNEL32.dll_GetTempPathA)(1999, 0x103f000);\n    *0x103de30 = var_4h + -0x3f + arg_ch;\n    *0x103de34 = 0;\n    *0x103d200 = *0x103de30 + -7 + *0x103de20;\n    if (*0x103de74 + *0x103de50 == 0xc1) {\n        var_4h = (var_4h + *0x103de30 * 3 + -0x38) - (arg_ch + -0x1e);\n    }\n    else {\n        bVar3 = arg_ch + 0x648dU < *0x103de30;\n        uVar2 = (arg_ch + 0x648dU) - *0x103de30;\n        *0x103de30 = (var_4h - 7U) + uVar2;\n        *0x103de34 = CARRY4(var_4h - 7U, uVar2) - bVar3;\n    }\n    (*lpAddress)();\n    var_1ch = *0x103de48;\n    if (*0x103de48 != 9) {\n        fcn.01020670(*0x103de30, *0x103de34, var_4h, 0);\n    }\n    *0x103de20 = *0x103d200 * 0x57 + *0x103de20;\n    return *0x103de20;\n}\n",
        "token_count": 1123
    },
    "0102eb10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nuint16_t __cdecl fcn.0102eb10(uint32_t arg_8h)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (var_4h <= *0x103de24) {\n        str._yI[0] = str._yI[0] + arg_8h;\n        *0x103de24 = var_4h * 0x57 + arg_8h;\n    }\n    iVar1 = var_8h;\n    uVar2 = (iVar1 + -2) - *0x103de28;\n    *0x103de24 = uVar2 + *0x103de24 + -0x38 + *0x103de1c;\n    if (str._yI[2] == L'\\x10') {\n        *0x103d200 = *0x103d200 + str._yI[3];\n        *0x103de24 = (*0x103d200 - 2) - *0x103d200;\n    }\n    *0x103d200 = fcn.0102f000(0x40);\n    if (uVar2 <= *0x103de24) {\n        str._yI[0] = str._yI[0] + *0x103de28;\n        *0x103de24 = uVar2 * 0x57 + *0x103de28;\n    }\n    var_4h._0_2_ = iVar1 * 0x57 + *0x103de28;\n    if (*0x103de48 == 9) {\n        var_4h._0_2_ = (*0x103d200 + 0x648d) - var_4h;\n    }\n    else {\n        *0x103de24 = *0x103d200 * *0x103de24 - var_4h;\n    }\n    *0x103d200 = fcn.0102ef10();\n    if (var_4h <= *0x103de24) {\n        str._yI[0] = str._yI[0] + *0x103de28;\n        *0x103de24 = var_4h * 0x57 + *0x103de28;\n    }\n    uVar2 = (*0x103d200 - 2) - iVar1;\n    if (*0x103de50 <= arg_8h) {\n        *0x103de5c = uVar2;\n        *0x103de1c = (uVar2 - 0x38) + arg_8h * 2 + uVar2 * 0x57;\n    }\n    if (*0x103deb4 + *0x103de90 != 0xc1) {\n        *0x103de24 = var_8h * 2 + (0x6486 - *0x103de24);\n    }\n    *0x103de1c = *0x103de24 * *0x103de1c;\n    if (*0x103de50 <= uVar2) {\n        *0x103de5c = *0x103d200;\n        *0x103de24 = uVar2 + uVar2 + *0x103d200 * 0x57 + -0x38 + *0x103d200;\n    }\n    if (*0x103de48 == 9) {\n        *0x103d200 = 0x8d;\n    }\n    else {\n        *0x103de24 = *0x103d200 * *0x103de24 - *0x103d200;\n    }\n    *0x103de1c = *0x103de1c - uVar2;\n    return uVar2;\n}\n",
        "token_count": 887
    },
    "010015d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuchar * __fastcall fcn.010015d0(int32_t param_1)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uchar *puStack8;\n    \n    uVar5 = *0x103d200;\n    uVar8 = param_1 + -7 + *0x103de1c;\n    iVar7 = 0x56a7;\n    puStack8 = *0x10d1938;\n    if (uVar5 <= uVar8) {\n        str._yI[0] = str._yI[0] + L'\\x13';\n        uVar8 = uVar5 * 0x57 + 0x13;\n    }\n    uVar4 = uVar8 + (*0x103de1c + 0x1190) * 2;\n    if (uVar5 <= uVar4) {\n        str._yI[0] = str._yI[0] + L'\\x13';\n        uVar4 = uVar5 * 0x57 + 0x13;\n    }\n    if (*0x103de50 + str._yI[3] != 0xc1) {\n        *0x103d200 = ((uVar8 + (uVar4 + -0x70) * '\\x02') - *0x103d200) + 0x99;\n    }\n    if (str._yI[2] == L'\\x10') {\n        *0x103d200 = *0x103d200 + str._yI[3];\n        uVar8 = 0xfffffffe;\n    }\n    uVar1 = *0x103d200;\n    iVar2 = 0x103d210 - *0x10d1938;\n    do {\n        iVar7 = iVar7 + -1;\n        *puStack8 = puStack8[iVar2];\n        piVar3 = 0x103def8;\n        iVar6 = uVar8 * 0x57 + iVar7;\n        puStack8 = puStack8 + 1;\n        uVar8 = iVar6 + 0xc;\n        *0x103de1c = iVar6;\n        do {\n            if (iVar6 != *0x103de64) {\n                *piVar3 = *piVar3 + -0x13;\n                iVar6 = iVar6 + uVar1 * 2 + 0x16;\n                *0x103de1c = iVar6;\n            }\n            piVar3 = piVar3 + -1;\n        } while (0x103de40 < piVar3);\n    } while (iVar7 != 0);\n    *0x103de1c = fcn.01024850();\n    if (*0x103de50 < 0x14) {\n        *0x103de5c = *0x103d200;\n        *0x103de1c = *0x103de5c * 0x58 - 0x12;\n    }\n    if (*0x103d200 <= *0x103de1c) {\n        str._yI[0] = str._yI[0] + L'\\x13';\n        *0x103de1c = *0x103d200 * 0x57 + 0x13;\n    }\n    return *0x10d1938;\n}\n",
        "token_count": 778
    },
    "010231a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.010231a0(uint32_t param_1)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    \n    if (*0x103de70 == 0x10) {\n        *0x103de1c = -2;\n    }\n    *0x103de1c = *0x103de1c + (*0x103d200 - 7);\n    piVar1 = 0x103def8;\n    do {\n        if (*0x103de1c != *0x103de64) {\n            *0x103de1c = param_1 + 0x1e;\n            *piVar1 = *piVar1 + (-0x1e - param_1);\n        }\n        piVar1 = piVar1 + -1;\n    } while (0x103de40 < piVar1);\n    iVar5 = param_1 * 2 + -0x3f;\n    iVar3 = *0x103de30 + -7 + param_1;\n    if (*0x103de50 <= param_1) {\n        *0x103de5c = iVar3;\n    }\n    iVar3 = (param_1 - iVar3) + 0x648d;\n    *0x103d200 = iVar3 * 'W' + iVar5;\n    iVar3 = (param_1 * 2 - *0x103d200 * iVar3) + 0x648d;\n    piVar1 = 0x103def8;\n    *0x103d200 = *0x103d200 + (iVar3 * '\\x02' - iVar5) + -0x1a + param_1;\n    uVar2 = *0x103d200 << 8;\n    iVar6 = iVar3 * 0x57 + iVar5;\n    iVar7 = iVar5 - param_1;\n    *0x103de1c = iVar5;\n    do {\n        if (iVar5 != *0x103de64) {\n            *piVar1 = *piVar1 - param_1;\n            uVar4 = uVar2 >> 8;\n            uVar2 = *0x103d200 << 8;\n            iVar5 = iVar5 + (uVar4 - param_1) * 2 + 0x3c;\n            *0x103de1c = iVar5;\n        }\n        piVar1 = piVar1 + -1;\n    } while (0x103de40 < piVar1);\n    iVar5 = (iVar5 - iVar3) + 0x648d;\n    uVar4 = iVar7 + 0x230b + iVar5;\n    uVar2 = iVar6 * 2;\n    *0x103de24 = (iVar7 - iVar5) + 0x648b;\n    *0x103de30 = uVar4 + uVar2;\n    *0x103de34 = CARRY4(uVar4, uVar2) - (iVar6 >> 0x1f);\n    return iVar7 + -2;\n}\n",
        "token_count": 712
    },
    "01024850": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.01024850(int32_t param_1)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    \n    piVar4 = 0x103def8;\n    uVar3 = *0x103de1c;\n    do {\n        if (uVar3 != *0x103de64) {\n            *piVar4 = *piVar4 - param_1;\n            uVar3 = uVar3 + (*0x103de24 - param_1) * 2 + 0x3c;\n            *0x103de1c = uVar3;\n        }\n        piVar4 = piVar4 + -1;\n    } while (0x103de40 < piVar4);\n    uVar1 = *0x103de24 * 'W' + param_1;\n    if (uVar1 <= uVar3) {\n        str._yI[0] = str._yI[0] + param_1;\n        uVar3 = uVar1 * 0x57 + param_1;\n        *0x103de1c = uVar3;\n    }\n    iVar2 = param_1 * 2 + -0x3f;\n    *0x103d200 = uVar1 * '\\x02' + '\\r' + iVar2 * '\\x02';\n    if (*0x103de50 + str._yI[3] == 0xc1) {\n        uVar3 = uVar3 + (*0x103d200 * 3 - param_1) + -0x1a;\n        *0x103de1c = uVar3;\n    }\n    else {\n        *0x103d200 = (uVar3 - *0x103d200) + -0x7a + param_1;\n    }\n    *0x103de24 = iVar2 * (iVar2 * 2 + param_1 * 2 + 0x230d) - uVar3;\n    return;\n}\n",
        "token_count": 455
    },
    "0102f000": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint fcn.0102f000(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    \n    iVar1 = *0x103de24;\n    uVar3 = 0x204;\n    if (*0x103de50 <= *0x103de28) {\n        *0x103de5c = *0x103de24;\n        uVar3 = (*0x103de24 * 0x2c + *0x103de28) * 2 - 0x38;\n    }\n    piVar4 = 0x103de44;\n    *0x103d200 = *0x103d200 + *0x103de24 + -0x38 + uVar3;\n    do {\n        if (*0x103d200 != str._yI[0]) {\n            uVar3 = uVar3 - *piVar4;\n            *0x103d200 = *0x103d200 * uVar3 - *0x103de28;\n            if (uVar3 == *0x103de60) break;\n        }\n        piVar4 = piVar4 + 1;\n    } while (piVar4 < 0x103defc);\n    piVar4 = 0x103def8;\n    do {\n        uVar2 = *0x103de28;\n        if (uVar3 != *0x103de64) {\n            *piVar4 = *piVar4 - *0x103de28;\n            uVar3 = uVar3 + (iVar1 - uVar2) * 2 + 0x3c;\n        }\n        piVar4 = piVar4 + -1;\n    } while (0x103de40 < piVar4);\n    *0x103d200 = *0x103d200 + *0x103de24 + -0x38 + uVar3;\n    if (*0x103d200 <= uVar3) {\n        str._yI[0] = str._yI[0] + uVar2;\n    }\n    return *0x103de20;\n}\n",
        "token_count": 476
    },
    "01001f70": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __thiscall fcn.01001f70(uint *param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t *in_FS_OFFSET;\n    uint32_t var_8h;\n    int32_t var_ch_2;\n    uint var_10h;\n    uint var_ch;\n    uint var_18h;\n    uint *var_14h;\n    uint var_10h_2;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x102f250;\n    var_ch_3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_3;\n    uVar4 = var_8h | 0xf;\n    uVar5 = var_8h;\n    if (uVar4 != 0xffffffff) {\n        uVar1 = param_1[5];\n        uVar2 = uVar1 >> 1;\n        uVar5 = uVar4;\n        if ((uVar4 / 3 < uVar2) && (uVar5 = uVar2 + uVar1,  -uVar2 - 2 < uVar1)) {\n            uVar5 = 0xfffffffe;\n        }\n    }\n    var_4h = 0;\n    var_14h = NULL;\n    if ((uVar5 + 1 != 0) && (var_14h = fcn.010032b0(uVar5 + 1),  var_14h == NULL)) {\n        fcn.01002534();\n        var_4h = CONCAT31(var_4h._1_3_, 2);\n        fcn.010020c0(var_8h + 1);\n        return 0x1002025;\n    }\n    if (var_ch_2 != 0) {\n        puVar3 = param_1;\n        if (0xf < param_1[5]) {\n            puVar3 = *param_1;\n        }\n        if (var_ch_2 != 0) {\n            fcn.010035d0(var_14h, puVar3, var_ch_2);\n        }\n    }\n    if (0xf < param_1[5]) {\n        fcn.01002f57(*param_1);\n    }\n    *param_1 = 0;\n    *param_1 = var_14h;\n    param_1[5] = uVar5;\n    param_1[4] = var_ch_2;\n    if (0xf < uVar5) {\n        param_1 = var_14h;\n    }\n    *(param_1 + var_ch_2) = 0;\n    *in_FS_OFFSET = var_ch_3;\n    return var_14h;\n}\n",
        "token_count": 657
    },
    "010020c0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.010020c0(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if ((param_1 != 0) && (iVar2 = fcn.010032b0(param_1),  iVar2 == 0)) {\n        fcn.01002534();\n        pcVar1 = swi(3);\n        iVar2 = (*pcVar1)();\n        return iVar2;\n    }\n    return iVar2;\n}\n",
        "token_count": 115
    },
    "010033e3": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.010033e3(void)\n\n{\n    int32_t unaff_ESI;\n    \n    if ((unaff_ESI == 0) && (*0x103c2e0 != -1)) {\n        fcn.01006e83();\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "01006c9d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01006c9d(int32_t arg_8h)\n\n{\n    if (*0x103c2e0 != -1) {\n        if (arg_8h == 0) {\n            arg_8h = fcn.01007764(*0x103c2e0);\n        }\n        fcn.01007783(*0x103c2e0, 0);\n        fcn.01006b68(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "0100be55": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0100be55(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(param_2 + 4) & 0x7ff00000;\n    if (uVar1 != 0x7ff00000) {\n        return uVar1;\n    }\n    return *(param_2 + 4);\n}\n",
        "token_count": 92
    },
    "0101532d": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10ch\n\nvoid __cdecl fcn.0101532d(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_10ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x103c008 ^ &stack0xfffffffc;\n    if (((arg_8h < 6) && (arg_ch != 0)) &&\n       (iVar1 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, arg_ch, 0xffffffff, &var_10ch, 0x83),  iVar1 != 0)) {\n        fcn.01015a1f(arg_8h, &var_10ch);\n    }\n    fcn.01002695(var_10ch);\n    return;\n}\n",
        "token_count": 194
    },
    "01020162": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17",
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.01020162(void)\n\n{\n    uint8_t *puVar1;\n    uint32_t unaff_ESI;\n    int32_t unaff_EDI;\n    \n    if (unaff_EDI == 0) {\n        puVar1 = *((unaff_ESI >> 5) * 4 + 0x103ebc0) + 4 + (unaff_ESI & 0x1f) * 0x40;\n        *puVar1 = *puVar1 & 0xfe;\n    }\n    fcn.01020209(unaff_ESI);\n    return;\n}\n",
        "token_count": 132
    },
    "01001000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.01001000(void)\n\n{\n    *0x10d28d8 = 0x402efdc;\n    // [00] -r-x section size 192512 named .text\n    return;\n}\n",
        "token_count": 49
    },
    "01001800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t ** __thiscall fcn.01001800(int32_t **param_1, uint *param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int32_t **ppiVar5;\n    uint32_t unaff_retaddr;\n    \n    if (param_2[4] < param_3) {\n        fcn.010025e5(\"invalid string position\");\n    }\n    else {\n        piVar2 = param_1[4];\n        uVar4 = param_2[4] - param_3;\n        if (uVar4 < param_4) {\n            param_4 = uVar4;\n        }\n        if (param_4 < -piVar2 - 1U) {\n            if (param_4 == 0) {\n                return param_1;\n            }\n            piVar1 = piVar2 + param_4;\n            if (piVar1 != 0xffffffff) {\n                if (param_1[5] < piVar1) {\n                    param_3 = unaff_retaddr;\n                    fcn.01001f70(piVar1, piVar2);\n                    if (piVar1 == NULL) {\n                        return param_1;\n                    }\n                }\n                else if (piVar1 == NULL) {\n                    param_1[4] = NULL;\n                    if (0xf < param_1[5]) {\n                        **param_1 = 0;\n                        return param_1;\n                    }\n                    *param_1 = 0;\n                    return param_1;\n                }\n                if (0xf < param_2[5]) {\n                    param_2 = *param_2;\n                }\n                ppiVar5 = param_1;\n                if (0xf < param_1[5]) {\n                    ppiVar5 = *param_1;\n                }\n                if (param_4 != 0) {\n                    fcn.010035d0(param_1[4] + ppiVar5, param_3 + param_2, param_4);\n                }\n                param_1[4] = piVar1;\n                if (param_1[5] < 0x10) {\n                    *(param_1 + piVar1) = 0;\n                    return param_1;\n                }\n                *(*param_1 + piVar1) = 0;\n                return param_1;\n            }\n            goto code_r0x010018ed;\n        }\n    }\n    fcn.010025b7(0x1039f2c);\ncode_r0x010018ed:\n    fcn.010025b7(0x1039f2c);\n    pcVar3 = swi(3);\n    ppiVar5 = (*pcVar3)();\n    return ppiVar5;\n}\n",
        "token_count": 631
    },
    "01001900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t ** __thiscall fcn.01001900(int32_t **param_1, int32_t **param_2, uint32_t param_3)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    code *pcVar3;\n    int32_t **ppiVar4;\n    \n    if (param_2 != NULL) {\n        piVar2 = param_1[5];\n        ppiVar4 = param_1;\n        if (0xf < piVar2) {\n            ppiVar4 = *param_1;\n        }\n        if (ppiVar4 <= param_2) {\n            ppiVar4 = param_1;\n            if (0xf < piVar2) {\n                ppiVar4 = *param_1;\n            }\n            if (param_2 < param_1[4] + ppiVar4) {\n                if (0xf < piVar2) {\n                    ppiVar4 = fcn.01001800(param_1, param_2 - *param_1, param_3);\n                    return ppiVar4;\n                }\n                ppiVar4 = fcn.01001800(param_1, param_2 - param_1, param_3);\n                return ppiVar4;\n            }\n        }\n    }\n    piVar2 = param_1[4];\n    if (param_3 < -piVar2 - 1U) {\n        if (param_3 != 0) {\n            piVar1 = piVar2 + param_3;\n            if (piVar1 == 0xffffffff) goto code_r0x01001a18;\n            if (param_1[5] < piVar1) {\n                fcn.01001f70(piVar1, piVar2);\n                if (piVar1 == NULL) {\n                    return param_1;\n                }\n            }\n            else if (piVar1 == NULL) {\n                param_1[4] = NULL;\n                if (0xf < param_1[5]) {\n                    **param_1 = 0;\n                    return param_1;\n                }\n                *param_1 = 0;\n                return param_1;\n            }\n            ppiVar4 = param_1;\n            if (0xf < param_1[5]) {\n                ppiVar4 = *param_1;\n            }\n            if (param_3 != 0) {\n                fcn.010035d0(param_1[4] + ppiVar4, param_2, param_3);\n            }\n            param_1[4] = piVar1;\n            if (0xf < param_1[5]) {\n                *(*param_1 + piVar1) = 0;\n                return param_1;\n            }\n            *(param_1 + piVar1) = 0;\n        }\n        return param_1;\n    }\n    fcn.010025b7(0x1039f2c);\ncode_r0x01001a18:\n    fcn.010025b7(0x1039f2c);\n    pcVar3 = swi(3);\n    ppiVar4 = (*pcVar3)();\n    return ppiVar4;\n}\n",
        "token_count": 696
    },
    "01001a30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t ** __thiscall fcn.01001a30(int32_t **param_1, int32_t **param_2, int32_t *param_3, int32_t *param_4)\n\n{\n    code *pcVar1;\n    int32_t **ppiVar2;\n    int32_t *piVar3;\n    \n    if (param_2[4] < param_3) {\n        fcn.010025e5(\"invalid string position\");\n    }\n    else {\n        piVar3 = param_2[4] - param_3;\n        if (param_4 < piVar3) {\n            piVar3 = param_4;\n        }\n        if (param_1 != param_2) {\n            if (piVar3 != 0xffffffff) {\n                if (param_1[5] < piVar3) {\n                    fcn.01001f70(piVar3, param_1[4]);\n                    if (piVar3 == NULL) {\n                        return param_1;\n                    }\n                }\n                else if (piVar3 == NULL) {\n                    param_1[4] = NULL;\n                    if (0xf < param_1[5]) {\n                        **param_1 = 0;\n                        return param_1;\n                    }\n                    *param_1 = 0;\n                    return param_1;\n                }\n                if (0xf < param_2[5]) {\n                    param_2 = *param_2;\n                }\n                ppiVar2 = param_1;\n                if (0xf < param_1[5]) {\n                    ppiVar2 = *param_1;\n                }\n                if (piVar3 != NULL) {\n                    fcn.010035d0(ppiVar2, param_2 + param_3, piVar3);\n                }\n                param_1[4] = piVar3;\n                if (param_1[5] < 0x10) {\n                    *(param_1 + piVar3) = 0;\n                    return param_1;\n                }\n                *(*param_1 + piVar3) = 0;\n                return param_1;\n            }\n            goto code_r0x01001b2a;\n        }\n        piVar3 = piVar3 + param_3;\n        if (piVar3 <= param_1[4]) {\n            param_1[4] = piVar3;\n            ppiVar2 = param_1;\n            if (0xf < param_1[5]) {\n                ppiVar2 = *param_1;\n            }\n            *(ppiVar2 + piVar3) = 0;\n            fcn.01001d60(0, param_3);\n            return param_1;\n        }\n    }\n    fcn.010025e5(\"invalid string position\");\ncode_r0x01001b2a:\n    fcn.010025b7(0x1039f2c);\n    pcVar1 = swi(3);\n    ppiVar2 = (*pcVar1)();\n    return ppiVar2;\n}\n",
        "token_count": 657
    },
    "01001c20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t ** __thiscall fcn.01001c20(int32_t **param_1, int32_t **param_2, int32_t *param_3)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t **ppiVar3;\n    \n    if (param_2 != NULL) {\n        piVar1 = param_1[5];\n        ppiVar3 = param_1;\n        if (0xf < piVar1) {\n            ppiVar3 = *param_1;\n        }\n        if (ppiVar3 <= param_2) {\n            ppiVar3 = param_1;\n            if (0xf < piVar1) {\n                ppiVar3 = *param_1;\n            }\n            if (param_2 < param_1[4] + ppiVar3) {\n                if (0xf < piVar1) {\n                    ppiVar3 = fcn.01001a30(param_1, param_2 - *param_1, param_3);\n                    return ppiVar3;\n                }\n                ppiVar3 = fcn.01001a30(param_1, param_2 - param_1, param_3);\n                return ppiVar3;\n            }\n        }\n    }\n    if (param_3 == 0xffffffff) {\n        fcn.010025b7(0x1039f2c);\n        pcVar2 = swi(3);\n        ppiVar3 = (*pcVar2)();\n        return ppiVar3;\n    }\n    if (param_1[5] < param_3) {\n        fcn.01001f70(param_3, param_1[4]);\n        if (param_3 == NULL) {\n            return param_1;\n        }\n    }\n    else if (param_3 == NULL) {\n        param_1[4] = NULL;\n        if (0xf < param_1[5]) {\n            **param_1 = 0;\n            return param_1;\n        }\n        *param_1 = 0;\n        return param_1;\n    }\n    ppiVar3 = param_1;\n    if (0xf < param_1[5]) {\n        ppiVar3 = *param_1;\n    }\n    if (param_3 != NULL) {\n        fcn.010035d0(ppiVar3, param_2, param_3);\n    }\n    param_1[4] = param_3;\n    if (param_1[5] < 0x10) {\n        *(param_1 + param_3) = 0;\n        return param_1;\n    }\n    *(*param_1 + param_3) = 0;\n    return param_1;\n}\n",
        "token_count": 598
    },
    "01001d60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t ** __thiscall fcn.01001d60(int32_t **param_1, int32_t *param_2, uint32_t param_3)\n\n{\n    code *pcVar1;\n    int32_t **ppiVar2;\n    int32_t *piVar3;\n    \n    piVar3 = param_1[4];\n    if (piVar3 < param_2) {\n        fcn.010025e5(\"invalid string position\");\n        pcVar1 = swi(3);\n        ppiVar2 = (*pcVar1)();\n        return ppiVar2;\n    }\n    if (param_3 < piVar3 - param_2) {\n        if (param_3 != 0) {\n            ppiVar2 = param_1;\n            if (0xf < param_1[5]) {\n                ppiVar2 = *param_1;\n            }\n            piVar3 = piVar3 - param_3;\n            if (piVar3 - param_2 != 0) {\n                fcn.010026b0(ppiVar2 + param_2, ppiVar2 + param_2 + param_3, piVar3 - param_2);\n            }\n            param_1[4] = piVar3;\n            if (0xf < param_1[5]) {\n                *(*param_1 + piVar3) = 0;\n                return param_1;\n            }\n            *(param_1 + piVar3) = 0;\n        }\n        return param_1;\n    }\n    param_1[4] = param_2;\n    if (param_1[5] < 0x10) {\n        *(param_1 + param_2) = 0;\n        return param_1;\n    }\n    *(*param_1 + param_2) = 0;\n    return param_1;\n}\n",
        "token_count": 403
    },
    "01007c4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.01007c4c(void)\n\n{\n    code **ppcVar1;\n    \n    for (ppcVar1 = 0x103a804; ppcVar1 < 0x103a804; ppcVar1 = ppcVar1 + 1) {\n        if (*ppcVar1 != NULL) {\n            (**ppcVar1)();\n        }\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "0100fbd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0100fbd8(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0100feb6(arg_8h, arg_ch, arg_10h, 0x1034e04);\n    return arg_8h;\n}\n",
        "token_count": 66
    },
    "0100fbf6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0100fbf6(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0100feb6(arg_8h, arg_ch, arg_10h, 0x1034dc6);\n    return arg_8h;\n}\n",
        "token_count": 66
    },
    "01013c64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01013c64(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0101b155(arg_8h, 0, 10, arg_ch);\n    return;\n}\n",
        "token_count": 48
    },
    "01013c7b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01013c7b(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0101b430(arg_8h, 0, 10, arg_ch);\n    return;\n}\n",
        "token_count": 49
    },
    "01013cb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01013cb8(uint arg_8h)\n\n{\n    fcn.0101b12b(arg_8h, 0, 10);\n    return;\n}\n",
        "token_count": 42
    },
    "0101b155": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101b155(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.0101ae9b(arg_14h, arg_8h, arg_ch, arg_10h, 0);\n    return;\n}\n",
        "token_count": 68
    },
    "0101b1ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101b1ac(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.0101ae9b(arg_14h, arg_8h, arg_ch, arg_10h, 1);\n    return;\n}\n",
        "token_count": 69
    },
    "0101b1f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101b1f8(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0102053a(arg_8h, arg_ch, 0);\n    return;\n}\n",
        "token_count": 47
    },
    "01020b21": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01020b21(uint arg_8h)\n\n{\n    fcn.01021219(arg_8h, 0, 10);\n    return;\n}\n",
        "token_count": 40
    },
    "01020b18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01020b18(uint arg_8h, uint arg_ch)\n\n{\n    fcn.01021219(arg_8h, 0, 10);\n    return;\n}\n",
        "token_count": 44
    },
    "010215de": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.010215de(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.01021231(arg_14h, arg_8h, arg_ch, arg_10h, 0);\n    return;\n}\n",
        "token_count": 65
    },
    "01021635": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01021635(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.01021231(arg_14h, arg_8h, arg_ch, arg_10h, 1);\n    return;\n}\n",
        "token_count": 65
    },
    "0102166e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0102166e(uint arg_8h, uint arg_ch)\n\n{\n    fcn.010218ea(arg_8h, arg_ch, 0);\n    return;\n}\n",
        "token_count": 44
    },
    "01024930": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.01024930(void)\n\n{\n    int32_t in_EAX;\n    \n    return in_EAX + -1;\n}\n",
        "token_count": 32
    },
    "0102ef10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0102ef10(int32_t param_1)\n\n{\n    param_1 = param_1 + (((*0x103de24 * 2 + 0x3c) - *0x103d200) - *0x103de28);\n    if (*0x103de74 + *0x103de50 == 0xc1) {\n        *0x103de24 = *0x103de24 + -0x1a + (*0x103d200 * 3 - *0x103de30);\n    }\n    else {\n        *0x103d200 = (*0x103de24 - *0x103d200) + -0x7a + *0x103de30;\n    }\n    *0x103de30 = (*0x103de24 - param_1) + -2;\n    *0x103de24 = param_1 + -7 + *0x103de30;\n    *0x103de34 = 0;\n    return *0x103de30;\n}\n",
        "token_count": 232
    },
    "010041ce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.010041ce(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.01008edd(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 109
    },
    "01007bf9": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01007bf9(uint dwMilliseconds)\n\n{\n    (*_sym.imp.KERNEL32.dll_Sleep)(dwMilliseconds);\n    return;\n}\n",
        "token_count": 35
    },
    "0101bb03": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0101bb03(uint32_t *arg_8h, uint32_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if (arg_10h == 0) {\n        return 0;\n    }\n    if (arg_10h == 1) {\n        uVar3 = *arg_8h;\n        uVar1 = *arg_ch;\ncode_r0x0101d150:\n        if (uVar3 == uVar1) {\n            return 0;\n        }\n        return (0 < uVar3 - uVar1) * 2 + -1;\n    }\n    if (arg_10h == 2) {\n        uVar3 = *arg_8h;\n        uVar1 = *arg_ch;\n        if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 1);\n        uVar1 = *(arg_ch + 1);\n        goto code_r0x0101d150;\n    }\n    if (arg_10h == 3) {\n        uVar3 = *arg_8h;\n        uVar1 = *arg_ch;\n        if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 1);\n        uVar1 = *(arg_ch + 1);\n        if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 2);\n        uVar1 = *(arg_ch + 2);\n        goto code_r0x0101d150;\n    }\n    if (arg_10h == 4) {\n        uVar1 = *arg_ch;\n        uVar3 = *arg_8h;\n        if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 1);\n        uVar1 = *(arg_ch + 1);\n        if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 2);\n        uVar1 = *(arg_ch + 2);\n        if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 3);\n        uVar1 = *(arg_ch + 3);\n        goto code_r0x0101d150;\n    }\n    if (0x1f < arg_10h) {\n        do {\n            if (*arg_8h == *arg_ch) {\n                iVar2 = 0;\n            }\n            else {\n                uVar3 = *arg_8h & 0xff;\n                uVar1 = *arg_ch;\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 1);\n                uVar1 = *(arg_ch + 1);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 2);\n                uVar1 = *(arg_ch + 2);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                iVar2 = *(arg_8h + 3) - *(arg_ch + 3);\n                if (iVar2 != 0) {\n                    iVar2 = (0 < iVar2) * 2 + -1;\n                }\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            if (arg_8h[1] == arg_ch[1]) {\n                iVar2 = 0;\n            }\n            else {\n                uVar3 = arg_8h[1] & 0xff;\n                uVar1 = *(arg_ch + 1);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 5);\n                uVar1 = *(arg_ch + 5);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 6);\n                uVar1 = *(arg_ch + 6);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                iVar2 = *(arg_8h + 7) - *(arg_ch + 7);\n                if (iVar2 != 0) {\n                    iVar2 = (0 < iVar2) * 2 + -1;\n                }\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            if (arg_8h[2] == arg_ch[2]) {\n                iVar2 = 0;\n            }\n            else {\n                uVar3 = arg_8h[2] & 0xff;\n                uVar1 = *(arg_ch + 2);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 9);\n                uVar1 = *(arg_ch + 9);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 10);\n                uVar1 = *(arg_ch + 10);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                iVar2 = *(arg_8h + 0xb) - *(arg_ch + 0xb);\n                if (iVar2 != 0) {\n                    iVar2 = (0 < iVar2) * 2 + -1;\n                }\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            if (arg_8h[3] == arg_ch[3]) {\n                iVar2 = 0;\n            }\n            else {\n                uVar3 = arg_8h[3] & 0xff;\n                uVar1 = *(arg_ch + 3);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0xd);\n                uVar1 = *(arg_ch + 0xd);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0xe);\n                uVar1 = *(arg_ch + 0xe);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                iVar2 = *(arg_8h + 0xf) - *(arg_ch + 0xf);\n                if (iVar2 != 0) {\n                    iVar2 = (0 < iVar2) * 2 + -1;\n                }\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            if (arg_8h[4] == arg_ch[4]) {\n                iVar2 = 0;\n            }\n            else {\n                uVar1 = *(arg_ch + 4);\n                uVar3 = *(arg_8h + 4);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0x11);\n                uVar1 = *(arg_ch + 0x11);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0x12);\n                uVar1 = *(arg_ch + 0x12);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                iVar2 = *(arg_8h + 0x13) - *(arg_ch + 0x13);\n                if (iVar2 != 0) {\n                    iVar2 = (0 < iVar2) * 2 + -1;\n                }\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            if (arg_8h[5] == arg_ch[5]) {\n                iVar2 = 0;\n            }\n            else {\n                uVar3 = arg_8h[5] & 0xff;\n                uVar1 = *(arg_ch + 5);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0x15);\n                uVar1 = *(arg_ch + 0x15);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0x16);\n                uVar1 = *(arg_ch + 0x16);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                iVar2 = *(arg_8h + 0x17) - *(arg_ch + 0x17);\n                if (iVar2 != 0) {\n                    iVar2 = (0 < iVar2) * 2 + -1;\n                }\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            if (arg_8h[6] == arg_ch[6]) {\n                iVar2 = 0;\n            }\n            else {\n                uVar3 = arg_8h[6] & 0xff;\n                uVar1 = *(arg_ch + 6);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0x19);\n                uVar1 = *(arg_ch + 0x19);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0x1a);\n                uVar1 = *(arg_ch + 0x1a);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                iVar2 = *(arg_8h + 0x1b) - *(arg_ch + 0x1b);\n                if (iVar2 != 0) {\n                    iVar2 = (0 < iVar2) * 2 + -1;\n                }\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            if (arg_8h[7] == arg_ch[7]) {\n                iVar2 = 0;\n            }\n            else {\n                uVar3 = arg_8h[7] & 0xff;\n                uVar1 = *(arg_ch + 7);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0x1d);\n                uVar1 = *(arg_ch + 0x1d);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                uVar3 = *(arg_8h + 0x1e);\n                uVar1 = *(arg_ch + 0x1e);\n                if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                    return iVar2;\n                }\n                iVar2 = *(arg_8h + 0x1f) - *(arg_ch + 0x1f);\n                if (iVar2 != 0) {\n                    iVar2 = (0 < iVar2) * 2 + -1;\n                }\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            arg_10h = arg_10h - 0x20;\n            arg_8h = arg_8h + 8;\n            arg_ch = arg_ch + 8;\n        } while (0x1f < arg_10h);\n    }\n    // switch table (32 cases) at 0x101d1fb\n    switch(arg_10h) {\n    default:\n        goto code_r0x0101c405;\n    case 1:\n        goto code_r0x0101c821;\n    case 2:\n        goto code_r0x0101cc66;\n    case 3:\n        goto code_r0x0101d09c;\n    case 4:\n        goto code_r0x0101c382;\n    case 5:\n        goto code_r0x0101c78a;\n    case 6:\n        goto code_r0x0101cbcf;\n    case 7:\n        goto code_r0x0101d005;\n    case 8:\n        goto code_r0x0101c2eb;\n    case 9:\n        goto code_r0x0101c6f2;\n    case 10:\n        goto code_r0x0101cb37;\n    case 0xb:\n        goto code_r0x0101cf6e;\n    case 0xc:\n        goto code_r0x0101c253;\n    case 0xd:\n        goto code_r0x0101c65b;\n    case 0xe:\n        goto code_r0x0101caa0;\n    case 0xf:\n        goto code_r0x0101ced6;\n    case 0x10:\n        goto code_r0x0101c1bc;\n    case 0x11:\n        goto code_r0x0101c5c4;\n    case 0x12:\n        goto code_r0x0101ca09;\n    case 0x13:\n        goto code_r0x0101ce3f;\n    case 0x14:\n        goto code_r0x0101c125;\n    case 0x15:\n        goto code_r0x0101c52d;\n    case 0x16:\n        goto code_r0x0101c972;\n    case 0x17:\n        goto code_r0x0101cda8;\n    case 0x18:\n        goto code_r0x0101c08e;\n    case 0x1a:\n        goto code_r0x0101c8db;\n    case 0x1b:\n        goto code_r0x0101cd11;\n    case 0x1c:\n        uVar1 = *(arg_8h + (arg_10h - 0x1c));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x1c))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x1c));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x1b));\n            uVar1 = *(arg_ch + (arg_10h - 0x1b));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x1a));\n            uVar1 = *(arg_ch + (arg_10h - 0x1a));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x19)) - *(arg_ch + (arg_10h - 0x19));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x0101c08e:\n        uVar1 = *(arg_8h + (arg_10h - 0x18));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x18))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x18));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x17));\n            uVar1 = *(arg_ch + (arg_10h - 0x17));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x16));\n            uVar1 = *(arg_ch + (arg_10h - 0x16));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x15)) - *(arg_ch + (arg_10h - 0x15));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x0101c125:\n        uVar1 = *(arg_8h + (arg_10h - 0x14));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x14))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x14));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x13));\n            uVar1 = *(arg_ch + (arg_10h - 0x13));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x12));\n            uVar1 = *(arg_ch + (arg_10h - 0x12));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x11)) - *(arg_ch + (arg_10h - 0x11));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x0101c1bc:\n        uVar1 = *(arg_8h + (arg_10h - 0x10));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x10))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x10));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xf));\n            uVar1 = *(arg_ch + (arg_10h - 0xf));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xe));\n            uVar1 = *(arg_ch + (arg_10h - 0xe));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0xd)) - *(arg_ch + (arg_10h - 0xd));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x0101c253:\n        if (*(arg_8h + (arg_10h - 0xc)) == *(arg_ch + (arg_10h - 0xc))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = *(arg_ch + (arg_10h - 0xc));\n            uVar3 = *(arg_8h + (arg_10h - 0xc));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xb));\n            uVar1 = *(arg_ch + (arg_10h - 0xb));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 10));\n            uVar1 = *(arg_ch + (arg_10h - 10));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 9)) - *(arg_ch + (arg_10h - 9));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x0101c2eb:\n        uVar1 = *(arg_8h + (arg_10h - 8));\n        if (uVar1 == *(arg_ch + (arg_10h - 8))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 8));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 7));\n            uVar1 = *(arg_ch + (arg_10h - 7));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 6));\n            uVar1 = *(arg_ch + (arg_10h - 6));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 5)) - *(arg_ch + (arg_10h - 5));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x0101c382:\n        uVar1 = *(arg_8h + (arg_10h - 4));\n        if (uVar1 == *(arg_ch + (arg_10h - 4))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 4));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 3));\n            uVar1 = *(arg_ch + (arg_10h - 3));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 2));\n            uVar1 = *(arg_ch + (arg_10h - 2));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 1)) - *(arg_ch + (arg_10h - 1));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 == 0) {\ncode_r0x0101c405:\n            iVar2 = 0;\n        }\n        return iVar2;\n    case 0x1d:\n        uVar1 = *(arg_8h + (arg_10h - 0x1d));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x1d))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x1d));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x1c));\n            uVar1 = *(arg_ch + (arg_10h - 0x1c));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x1b));\n            uVar1 = *(arg_ch + (arg_10h - 0x1b));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x1a)) - *(arg_ch + (arg_10h - 0x1a));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    case 0x19:\n        uVar1 = *(arg_8h + (arg_10h - 0x19));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x19))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x19));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x18));\n            uVar1 = *(arg_ch + (arg_10h - 0x18));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x17));\n            uVar1 = *(arg_ch + (arg_10h - 0x17));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x16)) - *(arg_ch + (arg_10h - 0x16));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x0101c52d:\n        uVar1 = *(arg_8h + (arg_10h - 0x15));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x15))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x15));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x14));\n            uVar1 = *(arg_ch + (arg_10h - 0x14));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x13));\n            uVar1 = *(arg_ch + (arg_10h - 0x13));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x12)) - *(arg_ch + (arg_10h - 0x12));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x0101c5c4:\n        uVar1 = *(arg_8h + (arg_10h - 0x11));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x11))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x11));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x10));\n            uVar1 = *(arg_ch + (arg_10h - 0x10));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xf));\n            uVar1 = *(arg_ch + (arg_10h - 0xf));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0xe)) - *(arg_ch + (arg_10h - 0xe));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x0101c65b:\n        uVar1 = *(arg_8h + (arg_10h - 0xd));\n        if (uVar1 == *(arg_ch + (arg_10h - 0xd))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0xd));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xc));\n            uVar1 = *(arg_ch + (arg_10h - 0xc));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xb));\n            uVar1 = *(arg_ch + (arg_10h - 0xb));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 10)) - *(arg_ch + (arg_10h - 10));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x0101c6f2:\n        if (*(arg_8h + (arg_10h - 9)) == *(arg_ch + (arg_10h - 9))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = *(arg_ch + (arg_10h - 9));\n            uVar3 = *(arg_8h + (arg_10h - 9));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 8));\n            uVar1 = *(arg_ch + (arg_10h - 8));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 7));\n            uVar1 = *(arg_ch + (arg_10h - 7));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 6)) - *(arg_ch + (arg_10h - 6));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x0101c78a:\n        uVar1 = *(arg_8h + (arg_10h - 5));\n        if (uVar1 == *(arg_ch + (arg_10h - 5))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 5));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 4));\n            uVar1 = *(arg_ch + (arg_10h - 4));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 3));\n            uVar1 = *(arg_ch + (arg_10h - 3));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 2)) - *(arg_ch + (arg_10h - 2));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\ncode_r0x0101c819:\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x0101c821:\n        uVar1 = *(arg_ch + (arg_10h - 1));\n        uVar3 = *(arg_8h + (arg_10h - 1));\n        if (uVar3 == uVar1) {\n            return 0;\n        }\n        return (0 < uVar3 - uVar1) * 2 + -1;\n    case 0x1e:\n        uVar1 = *(arg_8h + (arg_10h - 0x1e));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x1e))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x1e));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x1d));\n            uVar1 = *(arg_ch + (arg_10h - 0x1d));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x1c));\n            uVar1 = *(arg_ch + (arg_10h - 0x1c));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x1b)) - *(arg_ch + (arg_10h - 0x1b));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x0101c8db:\n        uVar1 = *(arg_8h + (arg_10h - 0x1a));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x1a))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x1a));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x19));\n            uVar1 = *(arg_ch + (arg_10h - 0x19));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x18));\n            uVar1 = *(arg_ch + (arg_10h - 0x18));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x17)) - *(arg_ch + (arg_10h - 0x17));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x0101c972:\n        uVar1 = *(arg_8h + (arg_10h - 0x16));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x16))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x16));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x15));\n            uVar1 = *(arg_ch + (arg_10h - 0x15));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x14));\n            uVar1 = *(arg_ch + (arg_10h - 0x14));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x13)) - *(arg_ch + (arg_10h - 0x13));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x0101ca09:\n        uVar1 = *(arg_8h + (arg_10h - 0x12));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x12))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x12));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x11));\n            uVar1 = *(arg_ch + (arg_10h - 0x11));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x10));\n            uVar1 = *(arg_ch + (arg_10h - 0x10));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0xf)) - *(arg_ch + (arg_10h - 0xf));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x0101caa0:\n        uVar1 = *(arg_8h + (arg_10h - 0xe));\n        if (uVar1 == *(arg_ch + (arg_10h - 0xe))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0xe));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xd));\n            uVar1 = *(arg_ch + (arg_10h - 0xd));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xc));\n            uVar1 = *(arg_ch + (arg_10h - 0xc));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0xb)) - *(arg_ch + (arg_10h - 0xb));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x0101cb37:\n        if (*(arg_8h + (arg_10h - 10)) == *(arg_ch + (arg_10h - 10))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = *(arg_ch + (arg_10h - 10));\n            uVar3 = *(arg_8h + (arg_10h - 10));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar1 = *(arg_ch + (arg_10h - 9));\n            uVar3 = *(arg_8h + (arg_10h - 9));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar1 = *(arg_ch + (arg_10h - 8));\n            uVar3 = *(arg_8h + (arg_10h - 8));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 7)) - *(arg_ch + (arg_10h - 7));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x0101cbcf:\n        uVar1 = *(arg_8h + (arg_10h - 6));\n        if (uVar1 == *(arg_ch + (arg_10h - 6))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 6));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 5));\n            uVar1 = *(arg_ch + (arg_10h - 5));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 4));\n            uVar1 = *(arg_ch + (arg_10h - 4));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 3)) - *(arg_ch + (arg_10h - 3));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x0101cc66:\n        if (*(arg_8h + (arg_10h - 2)) != *(arg_ch + (arg_10h - 2))) {\ncode_r0x0101d0be:\n            uVar1 = *(arg_ch + (arg_10h - 2));\n            uVar3 = *(arg_8h + (arg_10h - 2));\n            if (uVar3 == uVar1) goto code_r0x0101c821;\n            iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1;\n            goto code_r0x0101c819;\n        }\n        goto code_r0x0101c405;\n    case 0x1f:\n        if (*(arg_8h + (arg_10h - 0x1f)) == *(arg_ch + (arg_10h - 0x1f))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = *(arg_ch + (arg_10h - 0x1f));\n            uVar3 = *(arg_8h + (arg_10h - 0x1f));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x1e));\n            uVar1 = *(arg_ch + (arg_10h - 0x1e));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x1d));\n            uVar1 = *(arg_ch + (arg_10h - 0x1d));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x1c)) - *(arg_ch + (arg_10h - 0x1c));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x0101cd11:\n        uVar1 = *(arg_8h + (arg_10h - 0x1b));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x1b))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x1b));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x1a));\n            uVar1 = *(arg_ch + (arg_10h - 0x1a));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x19));\n            uVar1 = *(arg_ch + (arg_10h - 0x19));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x18)) - *(arg_ch + (arg_10h - 0x18));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x0101cda8:\n        uVar1 = *(arg_8h + (arg_10h - 0x17));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x17))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x17));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x16));\n            uVar1 = *(arg_ch + (arg_10h - 0x16));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x15));\n            uVar1 = *(arg_ch + (arg_10h - 0x15));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x14)) - *(arg_ch + (arg_10h - 0x14));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x0101ce3f:\n        uVar1 = *(arg_8h + (arg_10h - 0x13));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x13))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0x13));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x12));\n            uVar1 = *(arg_ch + (arg_10h - 0x12));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0x11));\n            uVar1 = *(arg_ch + (arg_10h - 0x11));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0x10)) - *(arg_ch + (arg_10h - 0x10));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x0101ced6:\n        if (*(arg_8h + (arg_10h - 0xf)) == *(arg_ch + (arg_10h - 0xf))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = *(arg_ch + (arg_10h - 0xf));\n            uVar3 = *(arg_8h + (arg_10h - 0xf));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xe));\n            uVar1 = *(arg_ch + (arg_10h - 0xe));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 0xd));\n            uVar1 = *(arg_ch + (arg_10h - 0xd));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 0xc)) - *(arg_ch + (arg_10h - 0xc));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x0101cf6e:\n        uVar1 = *(arg_8h + (arg_10h - 0xb));\n        if (uVar1 == *(arg_ch + (arg_10h - 0xb))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 0xb));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 10));\n            uVar1 = *(arg_ch + (arg_10h - 10));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 9));\n            uVar1 = *(arg_ch + (arg_10h - 9));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 8)) - *(arg_ch + (arg_10h - 8));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x0101d005:\n        uVar1 = *(arg_8h + (arg_10h - 7));\n        if (uVar1 == *(arg_ch + (arg_10h - 7))) {\n            iVar2 = 0;\n        }\n        else {\n            uVar1 = uVar1 & 0xff;\n            uVar3 = *(arg_ch + (arg_10h - 7));\n            if ((uVar1 != uVar3) && (iVar2 = (uVar1 != uVar3 && -1 < uVar1 - uVar3) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 6));\n            uVar1 = *(arg_ch + (arg_10h - 6));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            uVar3 = *(arg_8h + (arg_10h - 5));\n            uVar1 = *(arg_ch + (arg_10h - 5));\n            if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + (arg_10h - 4)) - *(arg_ch + (arg_10h - 4));\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\ncode_r0x0101d09c:\n        uVar3 = *(arg_8h + (arg_10h - 3));\n        uVar1 = *(arg_ch + (arg_10h - 3));\n        if ((uVar3 != uVar1) && (iVar2 = (uVar3 != uVar1 && -1 < uVar3 - uVar1) * 2 + -1,  iVar2 != 0)) {\n            return iVar2;\n        }\n        goto code_r0x0101d0be;\n    }\n}\n",
        "token_count": 16875
    },
    "0101d27b": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0101d27b(uint32_t *arg_8h, uint32_t *arg_ch, uint32_t arg_10h)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    \n    iVar3 = 0;\n    if (0x1f < arg_10h) {\n        do {\n            if (*arg_8h == *arg_ch) {\n                iVar5 = 0;\n            }\n            else {\n                uVar4 = *arg_8h & 0xff;\n                uVar2 = *arg_ch;\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 1);\n                uVar2 = *(arg_ch + 1);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 2);\n                uVar2 = *(arg_ch + 2);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                iVar5 = *(arg_8h + 3) - *(arg_ch + 3);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            if (arg_8h[1] == arg_ch[1]) {\n                iVar5 = 0;\n            }\n            else {\n                uVar4 = arg_8h[1] & 0xff;\n                uVar2 = *(arg_ch + 1);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 5);\n                uVar2 = *(arg_ch + 5);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 6);\n                uVar2 = *(arg_ch + 6);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                iVar5 = *(arg_8h + 7) - *(arg_ch + 7);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            if (arg_8h[2] == arg_ch[2]) {\n                iVar5 = 0;\n            }\n            else {\n                uVar4 = arg_8h[2] & 0xff;\n                uVar2 = *(arg_ch + 2);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 9);\n                uVar2 = *(arg_ch + 9);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 10);\n                uVar2 = *(arg_ch + 10);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                iVar5 = *(arg_8h + 0xb) - *(arg_ch + 0xb);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            if (arg_8h[3] == arg_ch[3]) {\n                iVar5 = 0;\n            }\n            else {\n                uVar4 = arg_8h[3] & 0xff;\n                uVar2 = *(arg_ch + 3);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 0xd);\n                uVar2 = *(arg_ch + 0xd);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 0xe);\n                uVar2 = *(arg_ch + 0xe);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                iVar5 = *(arg_8h + 0xf) - *(arg_ch + 0xf);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            if (arg_8h[4] == arg_ch[4]) {\n                iVar5 = 0;\n            }\n            else {\n                uVar4 = arg_8h[4] & 0xff;\n                uVar2 = *(arg_ch + 4);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 0x11);\n                uVar2 = *(arg_ch + 0x11);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 0x12);\n                uVar2 = *(arg_ch + 0x12);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                iVar5 = *(arg_8h + 0x13) - *(arg_ch + 0x13);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            if (arg_8h[5] == arg_ch[5]) {\n                iVar5 = 0;\n            }\n            else {\n                uVar4 = arg_8h[5] & 0xff;\n                uVar2 = *(arg_ch + 5);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 0x15);\n                uVar2 = *(arg_ch + 0x15);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 0x16);\n                uVar2 = *(arg_ch + 0x16);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                iVar5 = *(arg_8h + 0x17) - *(arg_ch + 0x17);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            if (arg_8h[6] == arg_ch[6]) {\n                iVar5 = 0;\n            }\n            else {\n                uVar4 = arg_8h[6] & 0xff;\n                uVar2 = *(arg_ch + 6);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 0x19);\n                uVar2 = *(arg_ch + 0x19);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 0x1a);\n                uVar2 = *(arg_ch + 0x1a);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                iVar5 = *(arg_8h + 0x1b) - *(arg_ch + 0x1b);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            if (arg_8h[7] == arg_ch[7]) {\n                iVar5 = 0;\n            }\n            else {\n                uVar4 = arg_8h[7] & 0xff;\n                uVar2 = *(arg_ch + 7);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 0x1d);\n                uVar2 = *(arg_ch + 0x1d);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                uVar4 = *(arg_8h + 0x1e);\n                uVar2 = *(arg_ch + 0x1e);\n                if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                    return iVar5;\n                }\n                iVar5 = *(arg_8h + 0x1f) - *(arg_ch + 0x1f);\n                if (iVar5 != 0) {\n                    iVar5 = (0 < iVar5) * 2 + -1;\n                }\n            }\n            if (iVar5 != 0) {\n                return iVar5;\n            }\n            arg_10h = arg_10h - 0x20;\n            arg_8h = arg_8h + 8;\n            arg_ch = arg_ch + 8;\n        } while (0x1f < arg_10h);\n    }\n    // switch table (32 cases) at 0x101e997\n    switch(arg_10h) {\n    case 1:\n        goto code_r0x0101e031;\n    case 2:\n        goto code_r0x0101e4ac;\n    case 3:\n        goto code_r0x0101e948;\n    case 4:\n        goto code_r0x0101db6a;\n    case 5:\n        goto code_r0x0101dfab;\n    case 6:\n        goto code_r0x0101e40d;\n    case 7:\n        goto code_r0x0101e8b9;\n    case 8:\n        goto code_r0x0101dacb;\n    case 9:\n        goto code_r0x0101df0c;\n    case 10:\n        goto code_r0x0101e36e;\n    case 0xb:\n        goto code_r0x0101e81a;\n    case 0xc:\n        goto code_r0x0101da2c;\n    case 0xd:\n        goto code_r0x0101de6d;\n    case 0xe:\n        goto code_r0x0101e2cf;\n    case 0xf:\n        goto code_r0x0101e77b;\n    case 0x10:\n        goto code_r0x0101d98d;\n    case 0x11:\n        goto code_r0x0101ddce;\n    case 0x12:\n        goto code_r0x0101e230;\n    case 0x13:\n        goto code_r0x0101e6dc;\n    case 0x14:\n        goto code_r0x0101d8ee;\n    case 0x15:\n        goto code_r0x0101dd2f;\n    case 0x16:\n        goto code_r0x0101e191;\n    case 0x17:\n        goto code_r0x0101e63d;\n    case 0x1c:\n        if (*(arg_8h + (arg_10h - 0x1c)) == *(arg_ch + (arg_10h - 0x1c))) {\n            iVar5 = 0;\n        }\n        else {\n            uVar2 = *(arg_ch + (arg_10h - 0x1c));\n            uVar4 = *(arg_8h + (arg_10h - 0x1c));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x1b));\n            uVar2 = *(arg_ch + (arg_10h - 0x1b));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x1a));\n            uVar2 = *(arg_ch + (arg_10h - 0x1a));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            iVar5 = *(arg_8h + (arg_10h - 0x19)) - *(arg_ch + (arg_10h - 0x19));\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\n    case 0x18:\n        uVar2 = *(arg_8h + (arg_10h - 0x18));\n        if (uVar2 == *(arg_ch + (arg_10h - 0x18))) {\n            iVar5 = 0;\n        }\n        else {\n            uVar2 = uVar2 & 0xff;\n            uVar4 = *(arg_ch + (arg_10h - 0x18));\n            if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x17));\n            uVar2 = *(arg_ch + (arg_10h - 0x17));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x16));\n            uVar2 = *(arg_ch + (arg_10h - 0x16));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            iVar5 = *(arg_8h + (arg_10h - 0x15)) - *(arg_ch + (arg_10h - 0x15));\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\n        goto code_r0x0101d8ee;\n    case 0x1d:\n        uVar2 = *(arg_8h + (arg_10h - 0x1d));\n        if (uVar2 == *(arg_ch + (arg_10h - 0x1d))) {\n            iVar5 = 0;\n        }\n        else {\n            uVar2 = uVar2 & 0xff;\n            uVar4 = *(arg_ch + (arg_10h - 0x1d));\n            if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x1c));\n            uVar2 = *(arg_ch + (arg_10h - 0x1c));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x1b));\n            uVar2 = *(arg_ch + (arg_10h - 0x1b));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            iVar5 = *(arg_8h + (arg_10h - 0x1a)) - *(arg_ch + (arg_10h - 0x1a));\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\n    case 0x19:\n        if (*(arg_8h + (arg_10h - 0x19)) == *(arg_ch + (arg_10h - 0x19))) {\n            iVar5 = 0;\n        }\n        else {\n            uVar2 = *(arg_ch + (arg_10h - 0x19));\n            uVar4 = *(arg_8h + (arg_10h - 0x19));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x18));\n            uVar2 = *(arg_ch + (arg_10h - 0x18));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x17));\n            uVar2 = *(arg_ch + (arg_10h - 0x17));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            iVar5 = *(arg_8h + (arg_10h - 0x16)) - *(arg_ch + (arg_10h - 0x16));\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\n        goto code_r0x0101dd2f;\n    case 0x1e:\n        uVar2 = *(arg_8h + (arg_10h - 0x1e));\n        if (uVar2 == *(arg_ch + (arg_10h - 0x1e))) {\n            iVar3 = 0;\n        }\n        else {\n            uVar2 = uVar2 & 0xff;\n            uVar4 = *(arg_ch + (arg_10h - 0x1e));\n            if ((uVar2 != uVar4) && (iVar3 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar3 != 0)) {\n                return iVar3;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x1d));\n            uVar2 = *(arg_ch + (arg_10h - 0x1d));\n            if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                return iVar3;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x1c));\n            uVar2 = *(arg_ch + (arg_10h - 0x1c));\n            if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                return iVar3;\n            }\n            iVar3 = *(arg_8h + (arg_10h - 0x1b)) - *(arg_ch + (arg_10h - 0x1b));\n            if (iVar3 != 0) {\n                iVar3 = (0 < iVar3) * 2 + -1;\n            }\n        }\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    case 0x1a:\n        if (*(arg_8h + (arg_10h - 0x1a)) == *(arg_ch + (arg_10h - 0x1a))) {\n            iVar3 = 0;\n        }\n        else {\n            uVar2 = *(arg_ch + (arg_10h - 0x1a));\n            uVar4 = *(arg_8h + (arg_10h - 0x1a));\n            if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                return iVar3;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x19));\n            uVar2 = *(arg_ch + (arg_10h - 0x19));\n            if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                return iVar3;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x18));\n            uVar2 = *(arg_ch + (arg_10h - 0x18));\n            if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n                return iVar3;\n            }\n            iVar3 = *(arg_8h + (arg_10h - 0x17)) - *(arg_ch + (arg_10h - 0x17));\n            if (iVar3 != 0) {\n                iVar3 = (0 < iVar3) * 2 + -1;\n            }\n        }\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n        goto code_r0x0101e191;\n    case 0x1f:\n        if (*(arg_8h + (arg_10h - 0x1f)) == *(arg_ch + (arg_10h - 0x1f))) {\n            iVar5 = 0;\n        }\n        else {\n            uVar2 = *(arg_ch + (arg_10h - 0x1f));\n            uVar4 = *(arg_8h + (arg_10h - 0x1f));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x1e));\n            uVar2 = *(arg_ch + (arg_10h - 0x1e));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x1d));\n            uVar2 = *(arg_ch + (arg_10h - 0x1d));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            iVar5 = *(arg_8h + (arg_10h - 0x1c)) - *(arg_ch + (arg_10h - 0x1c));\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\n    case 0x1b:\n        uVar2 = *(arg_8h + (arg_10h - 0x1b));\n        if (uVar2 == *(arg_ch + (arg_10h - 0x1b))) {\n            iVar5 = 0;\n        }\n        else {\n            uVar2 = uVar2 & 0xff;\n            uVar4 = *(arg_ch + (arg_10h - 0x1b));\n            if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x1a));\n            uVar2 = *(arg_ch + (arg_10h - 0x1a));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            uVar4 = *(arg_8h + (arg_10h - 0x19));\n            uVar2 = *(arg_ch + (arg_10h - 0x19));\n            if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n                return iVar5;\n            }\n            iVar5 = *(arg_8h + (arg_10h - 0x18)) - *(arg_ch + (arg_10h - 0x18));\n            if (iVar5 != 0) {\n                iVar5 = (0 < iVar5) * 2 + -1;\n            }\n        }\n        if (iVar5 != 0) {\n            return iVar5;\n        }\n        goto code_r0x0101e63d;\n    }\n    goto code_r0x0101dbf9;\ncode_r0x0101e63d:\n    uVar2 = *(arg_8h + (arg_10h - 0x17));\n    if (uVar2 == *(arg_ch + (arg_10h - 0x17))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0x17));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x16));\n        uVar2 = *(arg_ch + (arg_10h - 0x16));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x15));\n        uVar2 = *(arg_ch + (arg_10h - 0x15));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 0x14)) - *(arg_ch + (arg_10h - 0x14));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    goto code_r0x0101e6dc;\ncode_r0x0101e191:\n    uVar2 = *(arg_8h + (arg_10h - 0x16));\n    if (uVar2 == *(arg_ch + (arg_10h - 0x16))) {\n        iVar3 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0x16));\n        if ((uVar2 != uVar4) && (iVar3 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x15));\n        uVar2 = *(arg_ch + (arg_10h - 0x15));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x14));\n        uVar2 = *(arg_ch + (arg_10h - 0x14));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + (arg_10h - 0x13)) - *(arg_ch + (arg_10h - 0x13));\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 != 0) {\n        return iVar3;\n    }\n    goto code_r0x0101e230;\ncode_r0x0101dd2f:\n    uVar2 = *(arg_8h + (arg_10h - 0x15));\n    if (uVar2 == *(arg_ch + (arg_10h - 0x15))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0x15));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x14));\n        uVar2 = *(arg_ch + (arg_10h - 0x14));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x13));\n        uVar2 = *(arg_ch + (arg_10h - 0x13));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 0x12)) - *(arg_ch + (arg_10h - 0x12));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    goto code_r0x0101ddce;\ncode_r0x0101d8ee:\n    uVar2 = *(arg_8h + (arg_10h - 0x14));\n    if (uVar2 == *(arg_ch + (arg_10h - 0x14))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0x14));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x13));\n        uVar2 = *(arg_ch + (arg_10h - 0x13));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x12));\n        uVar2 = *(arg_ch + (arg_10h - 0x12));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 0x11)) - *(arg_ch + (arg_10h - 0x11));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    goto code_r0x0101d98d;\ncode_r0x0101e6dc:\n    uVar2 = *(arg_8h + (arg_10h - 0x13));\n    if (uVar2 == *(arg_ch + (arg_10h - 0x13))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0x13));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x12));\n        uVar2 = *(arg_ch + (arg_10h - 0x12));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x11));\n        uVar2 = *(arg_ch + (arg_10h - 0x11));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 0x10)) - *(arg_ch + (arg_10h - 0x10));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    goto code_r0x0101e77b;\ncode_r0x0101e230:\n    uVar2 = *(arg_8h + (arg_10h - 0x12));\n    if (uVar2 == *(arg_ch + (arg_10h - 0x12))) {\n        iVar3 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0x12));\n        if ((uVar2 != uVar4) && (iVar3 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x11));\n        uVar2 = *(arg_ch + (arg_10h - 0x11));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x10));\n        uVar2 = *(arg_ch + (arg_10h - 0x10));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + (arg_10h - 0xf)) - *(arg_ch + (arg_10h - 0xf));\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 != 0) {\n        return iVar3;\n    }\n    goto code_r0x0101e2cf;\ncode_r0x0101ddce:\n    uVar2 = *(arg_8h + (arg_10h - 0x11));\n    if (uVar2 == *(arg_ch + (arg_10h - 0x11))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0x11));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0x10));\n        uVar2 = *(arg_ch + (arg_10h - 0x10));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0xf));\n        uVar2 = *(arg_ch + (arg_10h - 0xf));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 0xe)) - *(arg_ch + (arg_10h - 0xe));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    goto code_r0x0101de6d;\ncode_r0x0101d98d:\n    uVar2 = *(arg_8h + (arg_10h - 0x10));\n    if (uVar2 == *(arg_ch + (arg_10h - 0x10))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0x10));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0xf));\n        uVar2 = *(arg_ch + (arg_10h - 0xf));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0xe));\n        uVar2 = *(arg_ch + (arg_10h - 0xe));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 0xd)) - *(arg_ch + (arg_10h - 0xd));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    goto code_r0x0101da2c;\ncode_r0x0101e77b:\n    uVar2 = *(arg_8h + (arg_10h - 0xf));\n    if (uVar2 == *(arg_ch + (arg_10h - 0xf))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0xf));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0xe));\n        uVar2 = *(arg_ch + (arg_10h - 0xe));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0xd));\n        uVar2 = *(arg_ch + (arg_10h - 0xd));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 0xc)) - *(arg_ch + (arg_10h - 0xc));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    goto code_r0x0101e81a;\ncode_r0x0101e2cf:\n    uVar2 = *(arg_8h + (arg_10h - 0xe));\n    if (uVar2 == *(arg_ch + (arg_10h - 0xe))) {\n        iVar3 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0xe));\n        if ((uVar2 != uVar4) && (iVar3 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0xd));\n        uVar2 = *(arg_ch + (arg_10h - 0xd));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0xc));\n        uVar2 = *(arg_ch + (arg_10h - 0xc));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + (arg_10h - 0xb)) - *(arg_ch + (arg_10h - 0xb));\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 != 0) {\n        return iVar3;\n    }\n    goto code_r0x0101e36e;\ncode_r0x0101de6d:\n    uVar2 = *(arg_8h + (arg_10h - 0xd));\n    if (uVar2 == *(arg_ch + (arg_10h - 0xd))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0xd));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0xc));\n        uVar2 = *(arg_ch + (arg_10h - 0xc));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0xb));\n        uVar2 = *(arg_ch + (arg_10h - 0xb));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 10)) - *(arg_ch + (arg_10h - 10));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    goto code_r0x0101df0c;\ncode_r0x0101da2c:\n    uVar2 = *(arg_8h + (arg_10h - 0xc));\n    if (uVar2 == *(arg_ch + (arg_10h - 0xc))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0xc));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 0xb));\n        uVar2 = *(arg_ch + (arg_10h - 0xb));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 10));\n        uVar2 = *(arg_ch + (arg_10h - 10));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 9)) - *(arg_ch + (arg_10h - 9));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    goto code_r0x0101dacb;\ncode_r0x0101e81a:\n    uVar2 = *(arg_8h + (arg_10h - 0xb));\n    if (uVar2 == *(arg_ch + (arg_10h - 0xb))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 0xb));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 10));\n        uVar2 = *(arg_ch + (arg_10h - 10));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 9));\n        uVar2 = *(arg_ch + (arg_10h - 9));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 8)) - *(arg_ch + (arg_10h - 8));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    goto code_r0x0101e8b9;\ncode_r0x0101e36e:\n    uVar2 = *(arg_8h + (arg_10h - 10));\n    if (uVar2 == *(arg_ch + (arg_10h - 10))) {\n        iVar3 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 10));\n        if ((uVar2 != uVar4) && (iVar3 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 9));\n        uVar2 = *(arg_ch + (arg_10h - 9));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 8));\n        uVar2 = *(arg_ch + (arg_10h - 8));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + (arg_10h - 7)) - *(arg_ch + (arg_10h - 7));\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 != 0) {\n        return iVar3;\n    }\n    goto code_r0x0101e40d;\ncode_r0x0101df0c:\n    uVar2 = *(arg_8h + (arg_10h - 9));\n    if (uVar2 == *(arg_ch + (arg_10h - 9))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 9));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 8));\n        uVar2 = *(arg_ch + (arg_10h - 8));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 7));\n        uVar2 = *(arg_ch + (arg_10h - 7));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 6)) - *(arg_ch + (arg_10h - 6));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    goto code_r0x0101dfab;\ncode_r0x0101e8b9:\n    uVar2 = *(arg_8h + (arg_10h - 7));\n    if (uVar2 != *(arg_ch + (arg_10h - 7))) {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 7));\n        if ((uVar2 != uVar4) && (iVar3 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 6));\n        uVar2 = *(arg_ch + (arg_10h - 6));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 5));\n        uVar2 = *(arg_ch + (arg_10h - 5));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + (arg_10h - 4)) - *(arg_ch + (arg_10h - 4));\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 != 0) {\n        return iVar3;\n    }\ncode_r0x0101e948:\n    uVar4 = *(arg_8h + (arg_10h - 3));\n    uVar2 = *(arg_ch + (arg_10h - 3));\n    if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n        return iVar3;\n    }\n    uVar4 = *(arg_8h + (arg_10h - 2));\n    uVar2 = *(arg_ch + (arg_10h - 2));\n    if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n        return iVar3;\n    }\n    goto code_r0x0101e031;\ncode_r0x0101e40d:\n    uVar2 = *(arg_8h + (arg_10h - 6));\n    if (uVar2 == *(arg_ch + (arg_10h - 6))) {\n        iVar3 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 6));\n        if ((uVar2 != uVar4) && (iVar3 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 5));\n        uVar2 = *(arg_ch + (arg_10h - 5));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 4));\n        uVar2 = *(arg_ch + (arg_10h - 4));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + (arg_10h - 3)) - *(arg_ch + (arg_10h - 3));\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 != 0) {\n        return iVar3;\n    }\ncode_r0x0101e4ac:\n    iVar1 = *(arg_8h + (arg_10h - 2));\n    if (iVar1 == *(arg_ch + (arg_10h - 2))) {\n        return 0;\n    }\n    uVar4 = iVar1;\n    uVar2 = *(arg_ch + (arg_10h - 2));\n    if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n        return iVar3;\n    }\n    uVar4 = *(arg_8h + (arg_10h - 1));\n    uVar2 = *(arg_ch + (arg_10h - 1));\n    if (uVar4 == uVar2) {\n        return 0;\n    }\n    return (0 < uVar4 - uVar2) * 2 + -1;\ncode_r0x0101dacb:\n    uVar2 = *(arg_8h + (arg_10h - 8));\n    if (uVar2 == *(arg_ch + (arg_10h - 8))) {\n        iVar5 = 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 8));\n        if ((uVar2 != uVar4) && (iVar5 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 7));\n        uVar2 = *(arg_ch + (arg_10h - 7));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 6));\n        uVar2 = *(arg_ch + (arg_10h - 6));\n        if ((uVar4 != uVar2) && (iVar5 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar5 != 0)) {\n            return iVar5;\n        }\n        iVar5 = *(arg_8h + (arg_10h - 5)) - *(arg_ch + (arg_10h - 5));\n        if (iVar5 != 0) {\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\n    }\n    if (iVar5 != 0) {\n        return iVar5;\n    }\ncode_r0x0101db6a:\n    uVar2 = *(arg_8h + (arg_10h - 4));\n    if (uVar2 != *(arg_ch + (arg_10h - 4))) {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 4));\n        if ((uVar2 != uVar4) && (iVar3 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 3));\n        uVar2 = *(arg_ch + (arg_10h - 3));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 2));\n        uVar2 = *(arg_ch + (arg_10h - 2));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + (arg_10h - 1)) - *(arg_ch + (arg_10h - 1));\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 == 0) {\ncode_r0x0101dbf9:\n        iVar3 = 0;\n    }\n    return iVar3;\ncode_r0x0101dfab:\n    uVar2 = *(arg_8h + (arg_10h - 5));\n    if (uVar2 != *(arg_ch + (arg_10h - 5))) {\n        uVar2 = uVar2 & 0xff;\n        uVar4 = *(arg_ch + (arg_10h - 5));\n        if ((uVar2 != uVar4) && (iVar3 = (uVar2 != uVar4 && -1 < uVar2 - uVar4) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 4));\n        uVar2 = *(arg_ch + (arg_10h - 4));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        uVar4 = *(arg_8h + (arg_10h - 3));\n        uVar2 = *(arg_ch + (arg_10h - 3));\n        if ((uVar4 != uVar2) && (iVar3 = (uVar4 != uVar2 && -1 < uVar4 - uVar2) * 2 + -1,  iVar3 != 0)) {\n            return iVar3;\n        }\n        iVar3 = *(arg_8h + (arg_10h - 2)) - *(arg_ch + (arg_10h - 2));\n        if (iVar3 != 0) {\n            iVar3 = (0 < iVar3) * 2 + -1;\n        }\n    }\n    if (iVar3 != 0) {\n        return iVar3;\n    }\ncode_r0x0101e031:\n    uVar4 = *(arg_8h + (arg_10h - 1));\n    uVar2 = *(arg_ch + (arg_10h - 1));\n    if (uVar4 == uVar2) {\n        return 0;\n    }\n    return (0 < uVar4 - uVar2) * 2 + -1;\n}\n",
        "token_count": 16435
    },
    "01020f59": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.01020f59(void)\n\n{\n    *0x103d1e0 = (*_sym.imp.KERNEL32.dll_CreateFileW)(L\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 65
    },
    "010068b7": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.010068b7(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.01005490(0x103ab88, 0xc);\n    fcn.01009c5c(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x103ebbc;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x103ebb8;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x010068fc;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.0100590c(arg_8h_00);\ncode_r0x010068fc:\n        fcn.0100590c(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0100691f();\n    fcn.010054d5();\n    return;\n}\n",
        "token_count": 395
    },
    "0101b179": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0101b179(uint8_t *param_1, uint8_t **param_2, uint param_3)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    int32_t iVar4;\n    uint unaff_EBX;\n    uint8_t *arg_ch;\n    int32_t aiStack48 [2];\n    int32_t iStack40;\n    char cStack36;\n    uchar auStack32 [24];\n    uint32_t uStack8;\n    \n    uStack8 = *0x103c008 ^ &stack0xfffffffc;\n    fcn.01009025(param_3);\n    if (param_2 != NULL) {\n        *param_2 = param_1;\n    }\n    iVar4 = aiStack48[0];\n    arg_ch = param_1;\n    if (param_1 == NULL) {\n        puVar1 = fcn.010051fd();\n        *puVar1 = 0x16;\n        fcn.01009f82();\n    }\n    else {\n        while( true ) {\n            if (*(iVar4 + 0x74) < 2) {\n                uVar2 = *(*(iVar4 + 0x90) + *arg_ch * 2) & 8;\n            }\n            else {\n                uVar2 = fcn.010151b7(*arg_ch, 8, aiStack48);\n                iVar4 = aiStack48[0];\n            }\n            if (uVar2 == 0) break;\n            arg_ch = arg_ch + 1;\n        }\n        puVar3 = fcn.01020f78(auStack32, arg_ch, aiStack48);\n        if (param_2 != NULL) {\n            *param_2 = arg_ch + puVar3[1];\n        }\n        if ((*puVar3 & 0x240) == 0) {\n            if ((*puVar3 & 0x81) == 0) {\n                if (((*puVar3 & 0x100) != 0) && (*(puVar3 + 4) == 0.0)) {\n                    puVar1 = fcn.010051fd();\n                    *puVar1 = 0x22;\n                }\n            }\n            else {\n                puVar1 = fcn.010051fd();\n                *puVar1 = 0x22;\n            }\n        }\n        else if (param_2 != NULL) {\n            *param_2 = param_1;\n        }\n    }\n    if (cStack36 != '\\0') {\n        *(iStack40 + 0x70) = *(iStack40 + 0x70) & 0xfffffffd;\n    }\n    fcn.01002695(unaff_EBX);\n    return;\n}\n",
        "token_count": 604
    },
    "010215f9": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.010215f9(uint16_t *param_1, uint16_t **param_2, uint param_3)\n\n{\n    uint16_t uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    uint unaff_EBX;\n    uint16_t *arg_ch;\n    uchar auStack56 [8];\n    int32_t iStack48;\n    char cStack44;\n    double dStack40;\n    uchar auStack32 [24];\n    uint32_t uStack8;\n    \n    uStack8 = *0x103c008 ^ &stack0xfffffffc;\n    fcn.01009025(param_3);\n    if (param_2 != NULL) {\n        *param_2 = param_1;\n    }\n    if (param_1 == NULL) {\n        puVar2 = fcn.010051fd();\n        *puVar2 = 0x16;\n        fcn.01009f82();\n    }\n    else {\n        uVar1 = *param_1;\n        arg_ch = param_1;\n        while (iVar3 = fcn.0101fb17(uVar1, 8),  iVar3 != 0) {\n            arg_ch = arg_ch + 1;\n            uVar1 = *arg_ch;\n        }\n        puVar4 = fcn.01021a29(auStack32, arg_ch, auStack56);\n        if (param_2 != NULL) {\n            *param_2 = arg_ch + puVar4[1];\n        }\n        if ((*puVar4 & 0x240) == 0) {\n            if ((*puVar4 & 0x81) == 0) {\n                if (((*puVar4 & 0x100) != 0) && (*(puVar4 + 4) == 0.0)) {\n                    puVar2 = fcn.010051fd();\n                    *puVar2 = 0x22;\n                }\n            }\n            else {\n                dStack40 = *0x103d1f0;\n                if (*arg_ch == 0x2d) {\n                    dStack40 = -*0x103d1f0;\n                }\n                puVar2 = fcn.010051fd();\n                *puVar2 = 0x22;\n            }\n        }\n        else if (param_2 != NULL) {\n            *param_2 = param_1;\n        }\n    }\n    if (cStack44 != '\\0') {\n        *(iStack48 + 0x70) = *(iStack48 + 0x70) & 0xfffffffd;\n    }\n    fcn.01002695(unaff_EBX);\n    return;\n}\n",
        "token_count": 587
    },
    "01007764": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01007764(uint arg_8h)\n\n{\n    if ((*0x10d3928 ^ *0x103c008) != NULL) {\n        (*(*0x10d3928 ^ *0x103c008))();\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_TlsGetValue)(arg_8h);\n    return;\n}\n",
        "token_count": 83
    }
}