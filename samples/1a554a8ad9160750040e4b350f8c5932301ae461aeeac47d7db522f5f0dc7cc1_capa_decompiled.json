{
    "01001320": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.01001320(uint32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    *0x1046098 = *0x1046004 + 0xc7a4 + *0x1046098;\n    *0x1046004 = var_8h + -5 + var_4h;\n    *0x1046094 = var_8h + -0x44 + *0x1046098;\n    for (*0x1048dfc = 0x30; cVar1 = arg_8h,  0 < *0x1048dfc; *0x1048dfc = *0x1048dfc + -2) {\n        if (*0x1046004 != *0x1046018) {\n            *0x1046094 = *0x1046094 + *0x1046004 + cVar1;\n            *(*0x1048dfc * 4 + 0x1046010) = *(*0x1048dfc * 4 + 0x1046010) - arg_8h;\n            *0x1046094 = cVar1 + -0x5c + *0x1046094;\n        }\n    }\n    iVar3 = var_4h - ((var_8h + 8) - *0x1046098);\n    *0x1046004 = var_8h + -5 + iVar3;\n    *0x1046094 = *0x1046094 + *0x1046098 + '#' + var_8h;\n    if (*0x1046094 <= *0x1046004) {\n        *0x1046094 = *0x1046004 + -5 + cVar1;\n        *0x1046020 = *0x1046020 * arg_8h;\n        *0x1046004 = ((arg_8h - 0x9b1d) - *0x1046094) + *0x1046004 * 2;\n    }\n    iVar2 = (*0x1046004 - 2) - iVar3;\n    *0x1046094 = *0x1046094 - ((iVar2 + '\\b') - *0x1046098);\n    if (*0x104603c <= arg_8h) {\n        *0x1046038 = *0x1046094;\n        *0x1046004 = (arg_8h - 0x44) + *0x1046094;\n        *0x1046094 = *0x1046004 + -5 + cVar1;\n    }\n    iVar3 = *0x1046098 + 0x23 + iVar2 + iVar3;\n    *0x1046098 = *0x1046004 * 3 + iVar3 * 2 + 0xc79f;\n    return iVar3;\n}\n",
        "token_count": 670
    },
    "01001750": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint16_t __cdecl fcn.01001750(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int16_t iVar3;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *0x1046000 + -0x44 + *0x1046098;\n    if (*0x1046058 == 0x18b5) {\n        *0x1046094 = *0x1046094 - *0x1046020;\n        *0x1046098 = ((*0x1046094 - 0x9b1d) - *0x1046094) + *0x1046098 * 2;\n    }\n    for (var_ch = 0x30; cVar2 = arg_8h,  0 < var_ch; var_ch = var_ch + -2) {\n        if (*0x1046018 != 0x139b) {\n            *0x1046094 = *0x1046094 + 0x9b + cVar2;\n            *(var_ch * 4 + 0x1046010) = *(var_ch * 4 + 0x1046010) - arg_8h;\n            *0x1046094 = cVar2 + -0x5c + *0x1046094;\n        }\n    }\n    iVar3 = *0x1046098;\n    if (*0x1046094 < 0x139c) {\n        *0x1046094 = cVar2 + 0x96;\n        *0x1046020 = *0x1046020 * arg_8h;\n    }\n    if (*0x104603c <= arg_8h) {\n        *0x1046038 = *0x1046094;\n        *0x1046094 = cVar2 * '\\x02' + *0x1046094 + 0xb7;\n    }\n    if (*0x104603c <= arg_8h) {\n        *0x1046038 = *0x1046094;\n        *0x1046094 = cVar2 * '\\x02' + *0x1046094 + 0xb7;\n    }\n    *0x1046098 = iVar1 * 2 + *0x1046098 + 0x18f48;\n    return ((iVar1 + 0x64e3) - iVar3) + var_4h * 2;\n}\n",
        "token_count": 572
    },
    "01012c4a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01012c4a(uint arg_8h)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    int32_t in_EDX;\n    int32_t unaff_EBP;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = in_EAX & 0xffffff00 | in_EAX + 1;\n    do {\n        if (uVar1 != *(in_EDX + 0x1046010)) {\n            *(unaff_EBP + -4) = *(unaff_EBP + -4) - *(*0x1048dfc * 4 + 0x1046010);\n            *0x1046098 = *(unaff_EBP + 8) + 0xc7a4 + *0x1046098;\n            if (*(unaff_EBP + 8) == *0x104602c) break;\n        }\n        *0x1048dfc = *0x1048dfc + 1;\n        if (0x2a < *0x1048dfc) break;\n        in_EDX = 0x14;\n        uVar1 = *0x1046098;\n    } while( true );\n    *(unaff_EBP + -0xc) = *0x1046044;\n    if (*(unaff_EBP + -0xc) == 3) {\n        *(unaff_EBP + 8) = *(unaff_EBP + -4) + *(unaff_EBP + 8) + *0x1046094;\n    }\n    else {\n        *0x1046094 = (*(unaff_EBP + -4) + -2) - *(unaff_EBP + 8);\n    }\n    *0x1046098 = (*0x1046094 - 5) + *(unaff_EBP + -8);\n    for (*0x1048dfc = 1; *0x1048dfc < 0x2b; *0x1048dfc = *0x1048dfc + 1) {\n        if (*0x1046094 != *0x1046024) {\n            *(unaff_EBP + -4) = *(unaff_EBP + -4) - *(*0x1048dfc * 4 + 0x1046010);\n            *0x1046094 = *(unaff_EBP + 8) + -0x5c + *0x1046094;\n            if (*(unaff_EBP + 8) == *0x104602c) break;\n        }\n    }\n    *0x1046098 = *(unaff_EBP + -8) + 0xc7a4 + *0x1046098;\n    for (*0x1048dfc = 0x30; 0 < *0x1048dfc; *0x1048dfc = *0x1048dfc + -2) {\n        if (*(unaff_EBP + -4) != *0x1046018) {\n            *0x1046098 = *(unaff_EBP + -4) + *0x1046098 + *(unaff_EBP + 8);\n            *(*0x1048dfc * 4 + 0x1046010) = *(*0x1048dfc * 4 + 0x1046010) - *(unaff_EBP + 8);\n            *0x1046098 = *(unaff_EBP + 8) + 0xc7a4 + *0x1046098;\n        }\n    }\n    *0x1046098 = *0x1046094 + *0x1046098 + *(unaff_EBP + -4);\n    if (*0x1046058 == 0x18b5) {\n        *0x1046094 = *0x1046094 - *0x1046020;\n        *(unaff_EBP + -4) = ((*0x1046094 - 0x9b1d) - *0x1046094) + *(unaff_EBP + -4) + *(unaff_EBP + -4);\n    }\n    *0x1046008 = (*0x1046098 + -2) - *(unaff_EBP + -8);\n    *0x104600c = 0;\n    return *(unaff_EBP + -8);\n}\n",
        "token_count": 968
    },
    "01012eb0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint16_t __cdecl fcn.01012eb0(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    char cVar3;\n    uint16_t uVar4;\n    int16_t iVar5;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    for (*0x1048dfc = 0x30; cVar1 = arg_8h,  0 < *0x1048dfc; *0x1048dfc = *0x1048dfc + -2) {\n        if (*0x1046004 != str._Ht[1]) {\n            *0x1046094 = *0x1046094 + *0x1046004 + cVar1;\n            *(*0x1048dfc * 4 + 0x1046010) = *(*0x1048dfc * 4 + 0x1046010) - arg_8h;\n            *0x1046094 = cVar1 + -0x5c + *0x1046094;\n        }\n    }\n    for (*0x1048dfc = 1; *0x1048dfc < 0x2b; *0x1048dfc = *0x1048dfc + 1) {\n        if (*0x1046094 != str._Ht[4]) {\n            *0x1046004 = *0x1046004 - *(*0x1048dfc * 4 + 0x1046010);\n            *0x1046094 = cVar1 + -0x5c + *0x1046094;\n            if (arg_8h == *0x104602c) break;\n        }\n    }\n    *0x1046098 = (var_4h - 0x20) + var_8h;\n    if (*0x1046058 == 0x18b5) {\n        *0x1046098 = *0x1046098 - str._Ht[3];\n        *0x1046004 = *0x1046004 * 2 + L'\\xffff64e3';\n    }\n    cVar3 = *0x1046004;\n    uVar2 = ((cVar3 + -0x1d) - *0x1046098) + *0x1046094 * '\\x02';\n    var_8h = (uVar2 - 0x44) + *0x1046098;\n    if (*0x1046034 - str._Ht[0] == 0x2a4) {\n        *0x1046098 = var_8h * 2 + *0x1046098 * 2 + *0x1046000;\n    }\n    else {\n        *0x1046098 = var_8h + (*0x1046000 + 0xc7a4 + *0x1046098) * 2;\n    }\n    if (*0x1046034 - str._Ht[0] == 0x2a4) {\n        *0x1046094 = uVar2 * '\\x02' + cVar3 * '\\x02' + cVar1;\n    }\n    else {\n        *0x1046094 = (cVar1 + -0x5c + uVar2) * '\\x02' + cVar3;\n    }\n    uVar4 = ((var_8h + 0x64e3) - *0x1046098) + var_4h * 2;\n    if (*0x1046044 == 3) {\n        arg_8h = *0x1046004 + arg_8h + *0x1046094;\n    }\n    else {\n        *0x1046094 = (cVar3 + -2) - cVar1;\n    }\n    *0x1046098 = uVar4 + *0x1046098 + var_8h;\n    for (*0x1048dfc = 0x30; 0 < *0x1048dfc; *0x1048dfc = *0x1048dfc + -2) {\n        if (*0x1046004 != str._Ht[1]) {\n            *0x1046098 = *0x1046004 + *0x1046098 + arg_8h;\n            *(*0x1048dfc * 4 + 0x1046010) = *(*0x1048dfc * 4 + 0x1046010) - arg_8h;\n            *0x1046098 = arg_8h + 0xc7a4 + *0x1046098;\n        }\n    }\n    *0x1046094 = *0x1046094 - ((*0x1046004 + '\\b') - *0x1046098);\n    if (*0x104603c <= *0x1046000) {\n        *0x1046038 = *0x1046098;\n        var_8h = (*0x1046000 - 0x44) + *0x1046098;\n    }\n    if (*0x1046058 == 0x18b5) {\n        *0x1046094 = *0x1046094 - str._Ht[3];\n        *0x1046004 = ((*0x1046094 - 0x9b1d) - *0x1046094) + *0x1046004 * 2;\n    }\n    *0x1046098 = (uVar4 - 5) + var_8h;\n    if (*0x1046094 <= *0x1046004) {\n        *0x1046094 = *0x1046004 + -5 + arg_8h;\n        str._Ht[3] = str._Ht[3] * arg_8h;\n        *0x1046004 = ((arg_8h + -0x9b1d) - *0x1046094) + *0x1046004 * 2;\n    }\n    iVar5 = *0x1046098;\n    if (*0x1046098 <= *0x1046004) {\n        *0x1046098 = *0x1046004 + L'\\xfffffffb' + arg_8h;\n        str._Ht[3] = str._Ht[3] * arg_8h;\n        *0x1046004 = ((arg_8h + -0x9b1d) - *0x1046098) + *0x1046004 * 2;\n    }\n    *0x1046098 = *0x1046004 + L'\uc7a4' + *0x1046098;\n    return ((var_8h + 0x64e3) - iVar5) + uVar4 * 2;\n}\n",
        "token_count": 1533
    },
    "null": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t sym.Noon.dll_Closewhether\n                  (uint param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7, \n                  uint param_8, uint param_9, uint param_10, uint param_11, uint param_12, uint param_13, uint param_14\n                  , uint param_15, uint param_16, uint param_17, uint param_18, uint param_19, uint param_20, \n                  uint param_21, uint param_22, uint param_23, uint param_24)\n\n{\n    int32_t noname_2;\n    uint noname_1;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_retaddr;\n    uint var_8h;\n    char32_t var_4h;\n    \n    *0x1046098 = 0xfffffff8;\n    noname_1 = fcn.0101df72(0x419);\n    *0x1046098 = *0x1046008 + -8;\n    noname_2 = *0x1046098 * 2 + -0x20;\n    fcn.01001220(unaff_ESI, noname_1, noname_2, unaff_EBP, unaff_retaddr, param_1, param_2, param_3, param_4, param_5, \n                 param_6, param_7, param_8, param_9, param_10, param_11, param_12, param_13, param_14, param_15, \n                 param_16, param_17, param_18, param_19, param_20, param_21, param_22, param_23, param_24);\n    if (*0x1046034 - str._Ht[0] == 0x2a4) {\n        var_4h = *0x1046098 * 3 + noname_2 * 2;\n    }\n    else {\n        var_4h = *0x1046098 * 3 + 0x18f48 + noname_2 * 2;\n    }\n    if (*0x1046074 - *0x1046054 == 0x2a4) {\n        var_4h = *0x1046098 * 2 + var_4h * 2 + *0x1046000;\n    }\n    else {\n        var_4h = *0x1046098 + (*0x1046000 + 0xc7a4 + var_4h) * 2;\n    }\n    for (*0x1048dfc = 1; *0x1048dfc < 0x2b; *0x1048dfc = *0x1048dfc + 1) {\n        if (var_4h != str._Ht[4]) {\n            *0x1046098 = *0x1046098 - *(*0x1048dfc * 4 + 0x1046010);\n            var_4h = *0x1046098 + 0xc7a4 + var_4h;\n            if (*0x1046098 == *0x104602c) break;\n        }\n    }\n    for (*0x1048dfc = 0x30; 0 < *0x1048dfc; *0x1048dfc = *0x1048dfc + -2) {\n        if (*0x1046098 != *0x1046058) {\n            *(*0x1048dfc * 4 + 0x1046050) = *(*0x1048dfc * 4 + 0x1046050) - *0x1046000;\n        }\n    }\n    return *0x1046098;\n}\n",
        "token_count": 880
    },
    "01013ff0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.01013ff0(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    char32_t cVar3;\n    uint32_t uVar4;\n    int32_t *in_FS_OFFSET;\n    bool bVar5;\n    bool bVar6;\n    uint *arg_8h;\n    uint var_90ch;\n    uint var_908h;\n    uint var_904h;\n    uint var_900h;\n    uint var_8fch;\n    uint var_8f8h;\n    uint var_8f4h;\n    uint var_8f0h;\n    uint var_8ech;\n    uint var_8e8h;\n    uint lpBuffer;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x1033146;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x10462d0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.01015e20(var_10h);\n    var_4h = 0;\n    fcn.0101f349(0, 0x103423f);\n    (*_sym.imp.KERNEL32.dll_SetConsoleOutputCP)(0x4e3);\n    *0x1046090 = ((*0x1046000 - 0x9b1d) - *0x1046098) + *0x1046090 * 2;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, 0x1047b58, 0x8c0);\n    if (*0x1046074 - *0x1046054 == 0x2a4) {\n        bVar5 = CARRY4(*0x1046000, *0x1046008);\n        bVar6 = CARRY4(*0x1046000 + *0x1046008, *0x1046008);\n        uVar4 = *0x1046000 + *0x1046008 + *0x1046008;\n        uVar2 = *0x1046000 + uVar4;\n        *0x1046008 = uVar2 + uVar1;\n        *0x104600c = *0x104600c * 2 + bVar5 + bVar6 + CARRY4(*0x1046000, uVar4) + CARRY4(uVar2, uVar1);\n    }\n    else {\n        bVar5 = CARRY4(uVar1 + 0xc7a4, *0x1046008);\n        uVar2 = uVar1 + 0xc7a4 + *0x1046008;\n        *0x1046008 = *0x1046000 + uVar2 + uVar2;\n        *0x104600c = (*0x104600c + bVar5) * 2 + CARRY4(*0x1046000, uVar2) + CARRY4(*0x1046000 + uVar2, uVar2);\n    }\n    (*_sym.imp.KERNEL32.dll_SetConsoleCP)(0);\n    *0x1046098 = *0x1046090 + *0x1046098 + *0x1046000;\n    if (*0x1046044 == 3) {\n        *0x1046000 = *0x1046000 + *0x1046008 + *0x1046098;\n    }\n    else {\n        *0x1046098 = (*0x1046008 + -2) - *0x1046000;\n    }\n    if (*0x104603c <= *0x1046000) {\n        *0x1046038 = *0x1046098;\n        *0x1046008 = (*0x1046000 - 0x44) + *0x1046098;\n        *0x104600c = 0;\n        *0x1046098 = *0x1046008 + -5 + *0x1046000;\n    }\n    *0x1046090 = fcn.01013c50(*0x1046008);\n    arg_8h = &lpBuffer;\n    *0x1046008 = (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(arg_8h, 0x8c0);\n    *0x104600c = 0;\n    if (*0x1046034 - str._Ht[0] == 0x2a4) {\n        *0x1046098 = *0x1046098 * 2 + 0xa2 + *0x1046008;\n    }\n    else {\n        *0x1046098 = (*0x1046008 + 0xc7a4U + *0x1046098) * 2 + 0x51;\n    }\n    fcn.010157e0(0x1047b58);\n    var_4h._0_1_ = 1;\n    bVar5 = CARRY4(*0x1046098, *0x1046008);\n    *0x1046098 = *0x1046098 + *0x1046008;\n    *0x1046008 = *0x1046098 + *0x1046000;\n    *0x104600c = *0x104600c + bVar5 + CARRY4(*0x1046098, *0x1046000);\n    *0x1046098 = *0x1046090 + -5 + *0x1046000;\n    fcn.01016930(&lpBuffer);\n    *0x1046090 = (*0x1046098 + -2) - uVar1;\n    *0x1046000 = fcn.01013960(uVar1);\n    *0x1046098 = *0x1046090 + -5 + uVar1;\n    uVar1 = fcn.0101c1c0();\n    *0x1046090 = ((uVar1 - 0x9b1d) - *0x1046098) + *0x1046090 * 2;\n    *0x1046098 = (*0x1046008 - 0x44U) + *0x1046090;\n    *0x1046000 = fcn.01013960(*0x1046098);\n    cVar3 = uVar1 + *0x1046008 + *0x1046098;\n    *0x104600c = *0x104600c + CARRY4(uVar1, *0x1046008) + CARRY4(uVar1 + *0x1046008, *0x1046098);\n    *0x1046090 = *0x1046098 + 0x23 + uVar1 + *0x1046090;\n    *0x1046008 = cVar3;\n    if (*0x104607c < 0x52) {\n        *0x1046090 = cVar3 + L'\\r';\n        *0x1046008 = cVar3 + L'Y';\n        *0x104600c = 0;\n        *0x1046078 = cVar3;\n    }\n    *0x1046000 = fcn.01013960(uVar1);\n    *0x1046090 = (uVar1 - 0x44) + *0x1046098;\n    for (*0x1048dfc = 0x30; 0 < *0x1048dfc; *0x1048dfc = *0x1048dfc + -2) {\n        if ((*0x1046008 != str._Ht[1]) || (*0x104600c != 0)) {\n            *0x1046098 = *0x1046098 + *0x1046008 + *0x1046000;\n            *(*0x1048dfc * 4 + 0x1046010) = *(*0x1048dfc * 4 + 0x1046010) - *0x1046000;\n            *0x1046098 = *0x1046000 + 0xc7a4 + *0x1046098;\n        }\n    }\n    if (*0x1046074 - *0x1046054 == 0x2a4) {\n        bVar5 = CARRY4(*0x1046000, *0x1046008);\n        bVar6 = CARRY4(*0x1046000 + *0x1046008, *0x1046008);\n        uVar4 = *0x1046000 + *0x1046008 + *0x1046008;\n        uVar2 = *0x1046000 + uVar4;\n        *0x1046008 = uVar2 + uVar1;\n        *0x104600c = *0x104600c * 2 + bVar5 + bVar6 + CARRY4(*0x1046000, uVar4) + CARRY4(uVar2, uVar1);\n    }\n    else {\n        bVar5 = CARRY4(uVar1 + 0xc7a4, *0x1046008);\n        uVar2 = uVar1 + 0xc7a4 + *0x1046008;\n        *0x1046008 = *0x1046000 + uVar2 + uVar2;\n        *0x104600c = (*0x104600c + bVar5) * 2 + CARRY4(*0x1046000, uVar2) + CARRY4(*0x1046000 + uVar2, uVar2);\n    }\n    if ((*0x104600c == 0) && (*0x1046008 <= *0x1046000)) {\n        *0x1046008 = (*0x1046000 - 5) + uVar1;\n        *0x104600c = 0;\n        *0x1046060 = *0x1046060 * uVar1;\n        *0x1046000 = ((uVar1 - 0x9b1d) - *0x1046008) + *0x1046000 * 2;\n    }\n    fcn.01016bd0(*0x1046008);\n    *0x1046098 = *0x1046090 + *0x1046098 + *0x1046000 + *0x1046008 + 0x51;\n    var_4h = var_4h._1_3_ << 8;\n    fcn.01016090();\n    var_4h = 0xffffffff;\n    fcn.01016300();\n    *in_FS_OFFSET = var_ch;\n    fcn.0101f553(arg_8h);\n    return;\n}\n",
        "token_count": 2432
    },
    "01014cd0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x01014d35)\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.01014cd0(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint32_t arg_ch;\n    int32_t *in_FS_OFFSET;\n    bool bVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    uint var_8h;\n    uint var_ch_2;\n    uint var_7ch;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    int32_t var_5ch;\n    int32_t var_58h;\n    uint var_54h;\n    uint var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint8_t var_12h;\n    uint8_t var_11h;\n    uchar *var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x1033178;\n    var_ch = *in_FS_OFFSET;\n    var_10h = &stack0xffffff70;\n    *in_FS_OFFSET = &var_ch;\n    var_18h = 0;\n    arg_ch = fcn.0101bdc0(var_ch_2);\n    iVar3 = fcn.0101c3c0();\n    if (0 < iVar3) {\n        iVar3 = fcn.0101c3c0();\n        if ((-1 < iVar3) && ((0xffffffff < iVar3 || (arg_ch < iVar3)))) {\n            uVar4 = fcn.0101c3c0();\n            var_5ch = uVar4 - arg_ch;\n            var_58h = (uVar4 >> 0x20) - (uVar4 < arg_ch);\n            goto code_r0x01014d8a;\n        }\n    }\n    var_5ch = 0;\n    var_58h = 0;\ncode_r0x01014d8a:\n    var_4ch = var_5ch;\n    var_48h = var_58h;\n    fcn.01015ee0(var_8h);\n    var_4h = 0;\n    cVar1 = fcn.01016900();\n    if (cVar1 == '\\0') {\n        var_18h = var_18h | 4;\n    }\n    else {\n        var_4h = CONCAT31(var_4h._1_3_, 1);\n        var_1ch = fcn.0101bb20();\n        if ((var_1ch & 0x1c0) != 0x40) {\n            while( true ) {\n                if ((var_48h < 0) || ((var_48h < 1 && (var_4ch == 0)))) goto code_r0x01014e81;\n                var_11h = fcn.0101bb00();\n                var_20h = fcn.0101c0e0();\n                var_28h = fcn.0101c1e0(var_11h);\n                var_24h = var_28h;\n                var_2ch = fcn.0101b930();\n                cVar1 = fcn.0101b940(&var_2ch, &var_28h);\n                if (cVar1 != '\\0') break;\n                bVar2 = var_4ch == 0;\n                var_4ch = var_4ch + -1;\n                var_48h = var_48h - bVar2;\n            }\n            var_18h = var_18h | 4;\n        }\ncode_r0x01014e81:\n        if (var_18h == 0) {\n            var_30h = fcn.0101c0e0();\n            uVar4 = fcn.0101c250(var_ch_2, arg_ch, 0);\n            if ((uVar4 != arg_ch) || (uVar4 >> 0x20 != 0)) {\n                var_18h = var_18h | 4;\n            }\n        }\n        if (var_18h == 0) {\n            while( true ) {\n                if ((var_48h < 0) || ((var_48h < 1 && (var_4ch == 0)))) goto code_r0x01014f66;\n                var_12h = fcn.0101bb00();\n                var_34h = fcn.0101c0e0();\n                var_3ch = fcn.0101c1e0(var_12h);\n                var_38h = var_3ch;\n                var_40h = fcn.0101b930();\n                cVar1 = fcn.0101b940(&var_40h, &var_3ch);\n                if (cVar1 != '\\0') break;\n                bVar2 = var_4ch == 0;\n                var_4ch = var_4ch + -1;\n                var_48h = var_48h - bVar2;\n            }\n            var_18h = var_18h | 4;\n        }\ncode_r0x01014f66:\n        fcn.0101c380(0, 0);\n        var_4h = 0;\n    }\n    fcn.0101c190(var_18h, 0);\n    var_4h = 0xffffffff;\n    fcn.01016370();\n    *in_FS_OFFSET = var_ch;\n    return var_8h;\n}\n",
        "token_count": 1349
    },
    "01015160": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.01015160(uchar *arg_8h)\n\n{\n    uchar *puVar1;\n    uint var_10h;\n    uint var_ch;\n    uchar *var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0101e8e0(arg_8h);\n    var_4h = var_4h + 1;\n    puVar1 = fcn.0101c486(var_4h);\n    var_8h = puVar1;\n    for (; var_4h != 0; var_4h = var_4h + -1) {\n        *var_8h = *arg_8h;\n        var_8h = var_8h + 1;\n        arg_8h = arg_8h + 1;\n    }\n    return puVar1;\n}\n",
        "token_count": 193
    },
    "01015200": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01015200(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x10331b1;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    puVar1 = fcn.010163c0(4, arg_8h);\n    var_4h = 0;\n    if (puVar1 != NULL) {\n        puVar2 = fcn.01015300(arg_ch);\n        *puVar1 = *puVar2;\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 214
    },
    "01015310": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.01015310(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint uVar3;\n    uint var_30h;\n    int32_t *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t *var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x10331d8;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x10462d0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar3 = 0;\n    fcn.0101c402(0);\n    var_4h = 0;\n    var_10h = *0x10e6d40;\n    var_1ch = fcn.010168b0(uVar3, uVar1);\n    var_14h = fcn.01019240(var_1ch);\n    if (var_14h == NULL) {\n        if (var_10h == NULL) {\n            iVar2 = fcn.01018ed0(&var_10h, arg_8h);\n            if (iVar2 == -1) {\n                fcn.0101f1fb(\"bad cast\");\n                fcn.0101f562(&var_30h, 0x10440b4);\n            }\n            else {\n                var_14h = var_10h;\n                *0x10e6d40 = var_10h;\n                var_18h = var_10h;\n                (**(*var_10h + 4))();\n                fcn.0101c9c3(var_18h);\n            }\n        }\n        else {\n            var_14h = var_10h;\n        }\n    }\n    var_24h = var_14h;\n    var_4h = 0xffffffff;\n    fcn.0101c45d();\n    *in_FS_OFFSET = var_ch;\n    return var_24h;\n}\n",
        "token_count": 502
    },
    "01015410": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.01015410(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint uVar3;\n    uint var_30h;\n    int32_t *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t *var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x10331d8;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x10462d0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar3 = 0;\n    fcn.0101c402(0);\n    var_4h = 0;\n    var_10h = *0x10e6d44;\n    var_1ch = fcn.010168b0(uVar3, uVar1);\n    var_14h = fcn.01019240(var_1ch);\n    if (var_14h == NULL) {\n        if (var_10h == NULL) {\n            iVar2 = fcn.01018fc0(&var_10h, arg_8h);\n            if (iVar2 == -1) {\n                fcn.0101f1fb(\"bad cast\");\n                fcn.0101f562(&var_30h, 0x10440b4);\n            }\n            else {\n                var_14h = var_10h;\n                *0x10e6d44 = var_10h;\n                var_18h = var_10h;\n                (**(*var_10h + 4))();\n                fcn.0101c9c3(var_18h);\n            }\n        }\n        else {\n            var_14h = var_10h;\n        }\n    }\n    var_24h = var_14h;\n    var_4h = 0xffffffff;\n    fcn.0101c45d();\n    *in_FS_OFFSET = var_ch;\n    return var_24h;\n}\n",
        "token_count": 502
    },
    "01015510": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.01015510(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint uVar3;\n    uint var_30h;\n    int32_t *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t *var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x10331d8;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x10462d0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar3 = 0;\n    fcn.0101c402(0);\n    var_4h = 0;\n    var_10h = *0x10e6d48;\n    var_1ch = fcn.010168b0(uVar3, uVar1);\n    var_14h = fcn.01019240(var_1ch);\n    if (var_14h == NULL) {\n        if (var_10h == NULL) {\n            iVar2 = fcn.010190b0(&var_10h, arg_8h);\n            if (iVar2 == -1) {\n                fcn.0101f1fb(\"bad cast\");\n                fcn.0101f562(&var_30h, 0x10440b4);\n            }\n            else {\n                var_14h = var_10h;\n                *0x10e6d48 = var_10h;\n                var_18h = var_10h;\n                (**(*var_10h + 4))();\n                fcn.0101c9c3(var_18h);\n            }\n        }\n        else {\n            var_14h = var_10h;\n        }\n    }\n    var_24h = var_14h;\n    var_4h = 0xffffffff;\n    fcn.0101c45d();\n    *in_FS_OFFSET = var_ch;\n    return var_24h;\n}\n",
        "token_count": 502
    },
    "01016300": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.01016300(int32_t **param_1)\n\n{\n    uint *puVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*param_1 != NULL) && (puVar1 = (**(**param_1 + 8))(),  puVar1 != NULL)) {\n        (***puVar1)(1);\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "010164c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __fastcall fcn.010164c0(int32_t *param_1)\n\n{\n    char cVar1;\n    uint arg_8h;\n    uint *puVar2;\n    uint32_t arg_1ch;\n    int32_t *in_FS_OFFSET;\n    uint var_8h;\n    int32_t arg_18h;\n    uint32_t uStack104;\n    uint var_54h;\n    uint var_4ch;\n    uint var_44h;\n    int32_t *var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint32_t var_1ch;\n    int32_t *var_18h;\n    uint8_t var_11h;\n    uint32_t *var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x10333a0;\n    var_ch = *in_FS_OFFSET;\n    uStack104 = *0x10462d0 ^ &stack0xfffffffc;\n    var_10h = &uStack104;\n    *in_FS_OFFSET = &var_ch;\n    var_1ch = 0;\n    var_18h = param_1;\n    fcn.01015ee0(param_1);\n    var_4h = 0;\n    cVar1 = fcn.01016900();\n    if (cVar1 != '\\0') {\n        var_28h = fcn.0101bc40(&var_2ch);\n        var_4h._0_1_ = 1;\n        var_24h = var_28h;\n        var_34h = fcn.01015410(var_28h);\n        var_4h._0_1_ = 0;\n        fcn.01016300();\n        var_4h = CONCAT31(var_4h._1_3_, 2);\n        if (var_18h == NULL) {\n            var_20h = 0;\n        }\n        else {\n            var_20h = var_18h + *(*var_18h + 4);\n        }\n        var_11h = fcn.0101bb00();\n        arg_8h = fcn.0101c0e0();\n        arg_1ch = var_11h;\n        arg_18h = var_20h;\n        var_30h = arg_8h;\n        puVar2 = fcn.010159a0(arg_8h);\n        var_38h = fcn.0101c0a0(&var_54h, *puVar2, puVar2[1], arg_8h, arg_18h, arg_1ch);\n        cVar1 = fcn.0101bab0();\n        if (cVar1 != '\\0') {\n            var_1ch = var_1ch | 4;\n        }\n        var_4h = 0;\n    }\n    fcn.0101c190(var_1ch, 0);\n    var_3ch = var_18h;\n    var_4h = 0xffffffff;\n    fcn.01016370();\n    *in_FS_OFFSET = var_ch;\n    return var_3ch;\n}\n",
        "token_count": 761
    },
    "01016660": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __fastcall fcn.01016660(int32_t *param_1)\n\n{\n    char cVar1;\n    uint arg_8h;\n    uint *puVar2;\n    uint32_t arg_1ch;\n    int32_t *in_FS_OFFSET;\n    uint var_8h;\n    int32_t arg_18h;\n    uint32_t uStack104;\n    uint var_54h;\n    uint var_4ch;\n    uint var_44h;\n    int32_t *var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint32_t var_1ch;\n    int32_t *var_18h;\n    uint8_t var_11h;\n    uint32_t *var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x10333d0;\n    var_ch = *in_FS_OFFSET;\n    uStack104 = *0x10462d0 ^ &stack0xfffffffc;\n    var_10h = &uStack104;\n    *in_FS_OFFSET = &var_ch;\n    var_1ch = 0;\n    var_18h = param_1;\n    fcn.01015ee0(param_1);\n    var_4h = 0;\n    cVar1 = fcn.01016900();\n    if (cVar1 != '\\0') {\n        var_28h = fcn.0101bc40(&var_2ch);\n        var_4h._0_1_ = 1;\n        var_24h = var_28h;\n        var_34h = fcn.01015410(var_28h);\n        var_4h._0_1_ = 0;\n        fcn.01016300();\n        var_4h = CONCAT31(var_4h._1_3_, 2);\n        if (var_18h == NULL) {\n            var_20h = 0;\n        }\n        else {\n            var_20h = var_18h + *(*var_18h + 4);\n        }\n        var_11h = fcn.0101bb00();\n        arg_8h = fcn.0101c0e0();\n        arg_1ch = var_11h;\n        arg_18h = var_20h;\n        var_30h = arg_8h;\n        puVar2 = fcn.010159a0(arg_8h);\n        var_38h = fcn.0101c0a0(&var_54h, *puVar2, puVar2[1], arg_8h, arg_18h, arg_1ch);\n        cVar1 = fcn.0101bab0();\n        if (cVar1 != '\\0') {\n            var_1ch = var_1ch | 4;\n        }\n        var_4h = 0;\n    }\n    fcn.0101c190(var_1ch, 0);\n    var_3ch = var_18h;\n    var_4h = 0xffffffff;\n    fcn.01016370();\n    *in_FS_OFFSET = var_ch;\n    return var_3ch;\n}\n",
        "token_count": 760
    },
    "01016bd0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nchar __cdecl fcn.01016bd0(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    char32_t cVar3;\n    int32_t iVar4;\n    int32_t in_FS_OFFSET;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    uint32_t var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    char32_t var_ch;\n    char32_t var_8h;\n    uint var_1h;\n    \n    var_8h = 9;\n    var_14h = 0;\n    uVar2 = *0x1046094;\n    var_2ch = *0x1046044;\n    if (*0x1046044 == 3) {\n        *0x1046098 = *0x1046098 + 0x12;\n    }\n    else {\n        var_8h = 7 - *0x1046098;\n    }\n    if (*0x1046094 <= *0x1046004) {\n        *0x1046094 = *0x1046004 + -5 + arg_8h;\n        *0x1046060 = *0x1046060 * arg_8h;\n        *0x1046004 = ((arg_8h + -0x9b1d) - *0x1046094) + *0x1046004 * 2;\n    }\n    cVar3 = (((arg_8h - uVar2) + var_ch * 2 + -0x1363a) - *0x1046098) + var_8h * 2;\n    for (var_10h = 0x30; 0 < var_10h; var_10h = var_10h + -2) {\n        if (cVar3 != str._Ht[1]) {\n            *0x1046098 = cVar3 + *0x1046098 + *0x1046000;\n            *(var_10h * 4 + 0x1046010) = *(var_10h * 4 + 0x1046010) - *0x1046000;\n            *0x1046098 = *0x1046000 + L'\uc7a4' + *0x1046098;\n        }\n    }\n    *0x1047b4c = 0x1048e00;\n    var_8h = (*0x1046004 - 2U) - arg_8h;\n    var_ch = (*0x1046094 - 2) - var_8h;\n    *0x1046004 = fcn.01012c10(var_ch);\n    if (*0x1046058 == 0x18b5) {\n        *0x1046098 = *0x1046098 - str._Ht[3];\n        var_8h = var_8h * 2 + -0x9b1d;\n    }\n    var_8h = *0x1046098 + -0x9b1d + var_8h;\n    *0x1046094 = var_8h + -0x5c + *0x1046094;\n    var_ch = ((var_8h + -0x9b1d) - *0x1046094) + var_ch * 2;\n    *0x1046004 = fcn.010126e0(var_ch);\n    var_34h = fcn.0101c486(0x8c0);\n    var_8h = var_8h + -5 + *0x1046098;\n    var_30h = var_34h;\n    (*_sym.imp.KERNEL32.dll_GetEnvironmentVariableA)(\"dist\", &var_34h, 0x8c0);\n    for (var_10h = 1; var_10h < 0x2b; var_10h = var_10h + 1) {\n        if (var_8h != *0x1046064) {\n            *0x1046000 = *0x1046000 - *(var_10h * 4 + 0x1046050);\n            var_8h = *0x1046004 + 0xc7a4 + var_8h;\n            if (*0x1046004 == *0x104606c) break;\n        }\n    }\n    if (*0x1046034 - str._Ht[0] == 0x2a4) {\n        *0x1046098 = var_ch * 2 + *0x1046098 * 2 + *0x1046004;\n    }\n    else {\n        *0x1046098 = var_ch + (*0x1046004 + 0xc7a4 + *0x1046098) * 2;\n    }\n    fcn.0101a040(var_ch, *0x1046004, *0x1047b4c, 0x103b738, 0x4ee7);\n    cVar3 = *0x1046094 + 0x23 + var_8h + var_ch;\n    if (*0x104603c <= *0x1046000) {\n        *0x1046038 = *0x1046098;\n        var_8h = *0x1046000 + L'\\xffffffbc' + *0x1046098;\n        *0x1046098 = var_8h + -5 + *0x1046000;\n    }\n    var_8h = var_8h * 2 - (*0x1046098 + L'\\b');\n    var_14h = 0x13c8999;\n    if (*0x1046098 <= cVar3) {\n        *0x1046098 = cVar3 + L'\\xfffffffb' + *0x1046004;\n        str._Ht[3] = str._Ht[3] * *0x1046004;\n    }\n    var_ch = (*0x1046094 - 2) - var_8h;\n    for (var_10h = 1; var_10h < 0x2b; var_10h = var_10h + 1) {\n        if (*0x1046098 != str._Ht[4]) {\n            var_8h = var_8h - *(var_10h * 4 + 0x1046010);\n            *0x1046098 = *0x1046000 + L'\uc7a4' + *0x1046098;\n            if (*0x1046000 == *0x104602c) break;\n        }\n    }\n    *0x1046004 = fcn.010126e0(var_ch);\n    var_8h = *0x1046098 + L'\uc7a4' + var_8h;\n    var_24h = 0xb;\n    *0x1046094 = var_8h + -0x5c + *0x1046094;\n    var_20h = 0x7d;\n    *0x1046000 = *0x1046000 - ((var_8h + 8) - *0x1046094);\n    for (var_10h = 1; var_10h < 0x2b; var_10h = var_10h + 1) {\n        if (*0x1046098 != str._Ht[4]) {\n            var_8h = var_8h - *(var_10h * 4 + 0x1046010);\n            *0x1046098 = *0x1046000 + L'\uc7a4' + *0x1046098;\n            if (*0x1046000 == *0x104602c) break;\n        }\n    }\n    iVar4 = var_8h + -5 + *0x1046098;\n    var_1ch = 0xc1;\n    var_18h = 0;\n    if (*0x1046034 - str._Ht[0] == 0x2a4) {\n        *0x1046098 = iVar4 * 2 + *0x1046098 * 2 + *0x1046000;\n    }\n    else {\n        *0x1046098 = iVar4 + (*0x1046000 + L'\uc7a4' + *0x1046098) * 2;\n    }\n    var_8h = *0x1046098 + L'\uc7a4' + iVar4;\n    if (*0x1046098 <= *0x1046094) {\n        *0x1046098 = (*0x1046094 - 5) + *0x1046004;\n        str._Ht[3] = str._Ht[3] * *0x1046004;\n        *0x1046094 = ((*0x1046004 + -0x1d) - *0x1046098) + *0x1046094 * '\\x02';\n    }\n    if (*0x104603c <= *0x1046000) {\n        *0x1046038 = *0x1046098;\n        var_8h = *0x1046000 + L'\\xffffffbc' + *0x1046098;\n        *0x1046098 = var_8h + -5 + *0x1046000;\n    }\n    var_8h = var_8h * 2 + 0x23 + *0x1046098;\n    var_1h._0_1_ = 1;\n    if (*0x1046044 == 3) {\n        *0x1046000 = var_8h + *0x1046000 + *0x1046098;\n    }\n    else {\n        *0x1046098 = (var_8h + -2) - *0x1046000;\n    }\n    if (*0x1046034 - str._Ht[0] == 0x2a4) {\n        *0x1046098 = *0x1046094 + *0x1046094 + *0x1046098 * 2 + *0x1046004;\n    }\n    else {\n        *0x1046098 = *0x1046094 + (*0x1046004 + L'\uc7a4' + *0x1046098) * 2;\n    }\n    while( true ) {\n        if (*0x1046034 - str._Ht[0] == 0x2a4) {\n            *0x1046098 = *0x1046094 + *0x1046094 + *0x1046098 * 2 + *0x1046004;\n        }\n        else {\n            *0x1046098 = *0x1046094 + (*0x1046004 + L'\uc7a4' + *0x1046098) * 2;\n        }\n        var_8h = (var_8h + -2) - *0x1046098;\n        if (*0x1046058 == 0x18b5) {\n            var_8h = var_8h - str._Ht[3];\n        }\n        if (*0x1046004 < var_8h) {\n            *0x1046000 = *0x1046098 + 0xc7a4U + *0x1046000;\n            var_8h = (var_8h + L'\\xfffffffe') - *0x1046098;\n            var_28h = *0x1046004 == L'\\0';\n            if (var_28h != 0) {\n                iVar4 = (*0x1046094 - 2) - var_8h;\n                if (*0x1046034 - str._Ht[0] == 0x2a4) {\n                    *0x1046000 = iVar4 * 2 + *0x1046000 * 2 + *0x1046098;\n                }\n                else {\n                    *0x1046000 = iVar4 + (*0x1046098 + 0xc7a4U + *0x1046000) * 2;\n                }\n            }\n        }\n        var_8h = var_8h * 2 + *0x1046098;\n        var_ch = (*0x1046094 - 2) - var_8h;\n        if (var_ch < var_8h) {\n            cVar1 = var_8h;\n            var_8h = var_8h * 2 - (*0x1046098 + 8U);\n            *0x1046094 = *0x1046094 + var_ch * '\\x02' + cVar1 + var_8h;\n        }\n        else if (*0x1046098 <= var_ch) {\n            *0x1046098 = (var_ch - 5U) + *0x1046004;\n            str._Ht[3] = str._Ht[3] * *0x1046004;\n            var_ch = ((*0x1046004 + L'\\xffff64e3') - *0x1046098) + var_ch * 2;\n        }\n        if (var_14h == 0) break;\n        var_8h = (*0x1046098 - 0x44U) + var_8h;\n        *0x1046094 = var_ch + -5 + var_8h;\n        fcn.010128d0();\n        if (*0x1046094 <= var_ch) {\n            *0x1046094 = var_ch + -5 + var_8h;\n            str._Ht[3] = str._Ht[3] * var_8h;\n            var_ch = ((var_8h + -0x9b1d) - *0x1046094) + var_ch * 2;\n        }\n        var_8h = var_8h * 2 - (*0x1046098 + 8U);\n        *0x1046094 = *0x1046094 + var_ch + var_8h;\n        var_14h = var_14h + -1;\n    }\n    if (*0x1046058 == 0x18b5) {\n        *0x1046094 = *0x1046094 - str._Ht[3];\n        var_ch = ((*0x1046094 - 0x9b1d) - *0x1046094) + var_ch * 2;\n    }\n    uVar2 = *0x1046094 + 0x23 + var_8h + var_ch;\n    if (var_8h < uVar2) {\n        cVar1 = var_8h;\n        var_8h = var_8h * 2 + 0x23 + *0x1046098;\n        *0x1046094 = var_8h + uVar2 + -0x7c + cVar1;\n        if (*0x1046034 - str._Ht[0] == 0x2a4) {\n            *0x1046000 = uVar2 * 2 + *0x1046000 * 2 + *0x1046098;\n        }\n        else {\n            *0x1046000 = uVar2 + (*0x1046098 + 0xc7a4U + *0x1046000) * 2;\n        }\n    }\n    if (*0x1046034 - str._Ht[0] == 0x2a4) {\n        *0x1046098 = var_8h * 2 + *0x1046098 * 2 + *0x1046000;\n    }\n    else {\n        *0x1046098 = var_8h + (*0x1046000 + L'\uc7a4' + *0x1046098) * 2;\n    }\n    var_8h = *0x1046098 + L'\\xffffffbc' + var_8h;\n    var_14h = 0x13c8999;\n    var_ch = var_8h + *0x1046004 + L'!';\n    if (*0x1046098 == L'\u18b5') {\n        *0x1046094 = *0x1046094 - *0x1046060;\n        var_8h = ((*0x1046094 - 0x9b1d) - *0x1046094) + var_8h * 2;\n    }\n    cVar1 = var_8h;\n    *0x1046094 = var_ch + -0x20 + cVar1;\n    if (*0x104603c <= var_ch) {\n        *0x1046038 = *0x1046004;\n        *0x1046098 = var_ch + L'\\xffffffbc' + *0x1046004;\n        *0x1046004 = *0x1046098 + L'\\xfffffffb' + var_ch;\n    }\n    if (*0x1046084 == 3) {\n        var_ch = var_8h + var_ch + *0x1046094;\n    }\n    else {\n        *0x1046094 = (cVar1 + -2) - var_ch;\n    }\n    var_ch = var_ch + L'\\x0102ed84';\n    *0x1046000 = var_8h + -0x44 + *0x1046094;\n    if (*0x1046084 == 3) {\n        var_8h = var_ch + var_8h + *0x1046094;\n    }\n    else {\n        *0x1046094 = (var_ch + -2) - cVar1;\n    }\n    while( true ) {\n        var_18h = var_18h + 1;\n        if (0x1009e < var_ch) {\n            *0x1046004 = *0x1046098 + L'\uc7a4' + *0x1046004;\n        }\n        if (*0x1046034 - str._Ht[0] == 0x2a4) {\n            var_8h = var_ch * 2 + var_8h * 2 + *0x1046098;\n        }\n        else {\n            var_8h = var_ch + (*0x1046098 + L'\uc7a4' + var_8h) * 2;\n        }\n        if (var_18h < 0x48) {\n            if (*0x1046044 == 3) {\n                var_18h = var_8h + var_18h + *0x1046094;\n            }\n            else {\n                *0x1046094 = (var_8h + -2) - var_18h;\n            }\n            *0x1046004 = *0x1046098 * 2 + var_ch + L'\uc79f';\n            var_ch = ((*0x1046098 + L'\\xffff64e3') - *0x1046004) + var_ch * 2;\n        }\n        if (*0x1046000 <= var_ch) {\n            str._Ht[3] = str._Ht[3] * *0x1046098;\n            var_ch = var_ch + L'\\xffff64e8';\n        }\n        var_ch = var_ch - ((*0x1046098 + L'\\b') - *0x1046004);\n        if (*0x1046058 == 0x18b5) {\n            *0x1046094 = *0x1046094 - str._Ht[3];\n            var_ch = ((*0x1046094 - 0x9b1d) - *0x1046094) + var_ch * 2;\n        }\n        if (var_20h < 3) {\n            var_ch = var_ch - ((*0x1046098 + L'\\b') - *0x1046004);\n            var_20h = var_20h - 1;\n        }\n        var_ch = ((*0x1046098 + L'\\xffff64e3') - *0x1046004) + var_ch * 2;\n        if (*0x104603c <= var_8h) {\n            *0x1046038 = *0x1046094;\n            var_ch = var_8h + L'\\xffffffbc' + *0x1046094;\n            *0x1046094 = var_ch + -5 + var_8h;\n        }\n        if (*0x104603c <= *0x1046098) {\n            *0x1046038 = var_8h;\n            var_ch = *0x1046098 + L'\\xffffffbc' + var_8h;\n            var_8h = var_ch + L'\\xfffffffb' + *0x1046098;\n        }\n        *0x1046000 = (*0x1046004 + L'\\xfffffffe') - var_1ch;\n        if (0x12d63 < *0x1046004) {\n            var_ch = ((*0x1046098 + L'\\xffff64e3') - *0x1046004) + var_ch * 2;\n            if (*0x1046000 == var_8h) {\n                if (*0x1046044 == 3) {\n                    var_8h = var_ch + var_8h + *0x1046094;\n                }\n                else {\n                    *0x1046094 = (var_ch + -2) - var_8h;\n                }\n                var_ch = fcn.010126e0(*0x1046004);\n                if (*0x1046058 == 0x18b5) {\n                    var_8h = var_8h - str._Ht[3];\n                    *0x1046098 = *0x1046098 * 2 + L'\\xffff64e3';\n                }\n                *0x1046094 = var_ch + -0x20 + var_8h;\n            }\n            if (*0x1046058 == 0x18b5) {\n                var_8h = var_8h - str._Ht[3];\n                var_ch = var_ch * 2 + L'\\xffff64e3';\n            }\n        }\n        if (*0x1046034 - str._Ht[0] == 0x2a4) {\n            *0x1046098 = var_ch * 2 + *0x1046098 * 2 + *0x1046004;\n        }\n        else {\n            *0x1046098 = var_ch + (*0x1046004 + L'\uc7a4' + *0x1046098) * 2;\n        }\n        if (var_1ch < 0xd) {\n            var_1ch = var_1ch - 1;\n        }\n        if (*0x104603c <= *0x1046004) {\n            *0x1046038 = *0x1046098;\n            var_ch = *0x1046004 + L'\\xffffffbc' + *0x1046098;\n            *0x1046098 = var_ch + L'\\xfffffffb' + *0x1046004;\n        }\n        if (*0x1046004 <= var_8h) {\n            *0x1046004 = var_8h + L'\\xfffffffb' + *0x1046094;\n            str._Ht[3] = *0x1046094 * str._Ht[3];\n            var_8h = ((*0x1046094 - 0x9b1d) - *0x1046004) + var_8h * 2;\n        }\n        if (*0x1046034 - str._Ht[0] == 0x2a4) {\n            var_8h = var_ch * 2 + var_8h * 2 + *0x1046098;\n        }\n        else {\n            var_8h = var_ch + (*0x1046098 + L'\uc7a4' + var_8h) * 2;\n        }\n        var_8h = (var_8h + -2) - *0x1046098;\n        if (var_14h == 0) break;\n        fcn.010128d0();\n        if (*0x1046098 <= var_8h) {\n            *0x1046098 = var_8h + L'\\xfffffffb' + *0x1046004;\n            str._Ht[3] = str._Ht[3] * *0x1046004;\n            var_8h = ((*0x1046004 + L'\\xffff64e3') - *0x1046098) + var_8h * 2;\n        }\n        var_8h = var_8h * 2 + *0x1046098;\n        var_14h = var_14h + -1;\n        if (var_24h == 0) {\n            var_24h = -1;\n            if (*0x1046058 == 0x18b5) {\n                var_8h = var_8h - str._Ht[3];\n                var_ch = var_ch * 2 + L'\\xffff64e3';\n            }\n            *0x1046004 = *0x1046000 + L'\\xfffffffa';\n        }\n        else if (*0x1046034 - str._Ht[0] == 0x2a4) {\n            *0x1046094 = *0x1046094 * '\\x02' + var_ch * '\\x02' + var_1ch;\n        }\n        else {\n            *0x1046094 = (var_1ch + -0x5c + *0x1046094) * '\\x02' + var_ch;\n        }\n        *0x1046098 = *0x1046098 + L'+' + var_8h;\n    }\n    if (*0x1046034 - str._Ht[0] == 0x2a4) {\n        *0x1046098 = *0x1046094 + *0x1046094 + *0x1046098 * 2 + *0x1046004;\n    }\n    else {\n        *0x1046098 = *0x1046094 + (*0x1046004 + L'\uc7a4' + *0x1046098) * 2;\n    }\n    var_8h = 0x788;\n    iVar4 = *0x1046098 * 2 + (-5 - arg_8h);\n    var_ch = iVar4 + 0x78b;\n    *0x1046004 = iVar4 + -0x9b1a + *0x1046004 * 2;\n    if (*0x104607c <= var_ch) {\n        *0x1046078 = *0x1046094;\n        var_8h = iVar4 + 0x747 + *0x1046094;\n        *0x1046094 = var_8h + -5 + var_ch;\n    }\n    cVar3 = fcn.01001d20(var_ch, *0x1047b4c);\n    *0x1046094 = *0x1046000 + -0x20 + var_8h;\n    *0x1046004 = ((*(&var_ch + in_FS_OFFSET) + -0x9b1d) - var_8h) + *0x1046004 * 2;\n    *0x1046098 = cVar3;\n    if (*0x104603c <= *0x1046004) {\n        *0x1046098 = *0x1046004 * 2 + cVar3 + L'\\xffffffb7';\n        *0x1046038 = cVar3;\n    }\n    return *0x1046094;\n}\n",
        "token_count": 6282
    },
    "010185e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.010185e0(int32_t param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    uint arg_ch;\n    int32_t *in_FS_OFFSET;\n    uint32_t var_8h;\n    int32_t var_ch_2;\n    uint var_10h;\n    uint var_ch;\n    uchar *arg_8h_00;\n    uint32_t uStack68;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint var_18h;\n    uchar var_13h [2];\n    uint32_t *var_11h;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x10333f0;\n    var_ch_3 = *in_FS_OFFSET;\n    uStack68 = *0x10462d0 ^ &stack0xfffffffc;\n    *0x10 = &uStack68;\n    *in_FS_OFFSET = &var_ch_3;\n    var_1ch = var_8h | 0xf;\n    uVar1 = fcn.0101be50();\n    if (uVar1 < var_1ch) {\n        var_1ch = var_8h;\n    }\n    else if (var_1ch / 3 < *(param_1 + 0x14) >> 1) {\n        uVar1 = *(param_1 + 0x14);\n        iVar2 = fcn.0101be50();\n        uVar1 = iVar2 - (uVar1 >> 1);\n        if (*(param_1 + 0x14) < uVar1 || *(param_1 + 0x14) == uVar1) {\n            var_1ch = (*(param_1 + 0x14) >> 1) + *(param_1 + 0x14);\n        }\n        else {\n            var_1ch = fcn.0101be50();\n        }\n    }\n    var_4h = 0;\n    fcn.01018eb0(&var_11h);\n    arg_8h = fcn.0101a490(var_1ch + 1);\n    var_4h = 0xffffffff;\n    if (var_ch_2 != 0) {\n        iVar2 = var_ch_2;\n        arg_ch = fcn.01019c40();\n        fcn.0101ab20(arg_8h, arg_ch, iVar2);\n    }\n    fcn.01019eb0(1, 0);\n    arg_8h_00 = var_13h;\n    iVar2 = param_1;\n    fcn.01018eb0(arg_8h_00);\n    fcn.010151d0(arg_8h_00, iVar2);\n    *(param_1 + 0x14) = var_1ch;\n    fcn.010187d0(var_ch_2);\n    *in_FS_OFFSET = var_ch_3;\n    return;\n}\n",
        "token_count": 705
    },
    "01018fc0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.01018fc0(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint arg_8h_01;\n    int32_t *in_FS_OFFSET;\n    uint var_58h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x1033484;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x10462d0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if ((arg_8h != NULL) && (*arg_8h == 0)) {\n        iVar2 = fcn.0101dda4(8);\n        var_4h = 0;\n        if (iVar2 == 0) {\n            var_18h = 0;\n        }\n        else {\n            arg_8h_00 = fcn.0101a990(0, uVar1);\n            arg_8h_01 = fcn.01015a20(arg_8h_00);\n            var_4h = CONCAT31(var_4h._1_3_, 1);\n            var_18h = fcn.010158c0(arg_8h_01, arg_8h_00);\n        }\n        *arg_8h = var_18h;\n        var_4h = 0xffffffff;\n        if (iVar2 != 0) {\n            fcn.01016190();\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return 4;\n}\n",
        "token_count": 429
    },
    "010190b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.010190b0(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint arg_8h_01;\n    int32_t *in_FS_OFFSET;\n    uint arg_10h;\n    uint var_58h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x1033484;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x10462d0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if ((arg_8h != NULL) && (*arg_8h == 0)) {\n        iVar2 = fcn.0101dda4(0x18);\n        var_4h = 0;\n        if (iVar2 == 0) {\n            var_18h = 0;\n        }\n        else {\n            arg_10h = 0;\n            arg_8h_00 = fcn.0101a990(0, 1, uVar1);\n            arg_8h_01 = fcn.01015a20(arg_8h_00);\n            var_4h = CONCAT31(var_4h._1_3_, 1);\n            var_18h = fcn.01015930(arg_8h_01, arg_8h_00, arg_10h);\n        }\n        *arg_8h = var_18h;\n        var_4h = 0xffffffff;\n        if (iVar2 != 0) {\n            fcn.01016190();\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return 4;\n}\n",
        "token_count": 454
    },
    "01019e80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.01019e80(int32_t *param_1)\n\n{\n    uint var_4h;\n    \n    if (*param_1 != 0) {\n        fcn.0101df3a(*param_1);\n    }\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 68
    },
    "0101a040": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0101a040(int32_t arg_8h, int32_t arg_ch, uchar *arg_10h, uchar *arg_14h, int32_t arg_18h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    bool bVar5;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uchar *var_ch;\n    uchar *var_8h;\n    int32_t var_4h;\n    \n    var_8h = arg_10h;\n    *0x1046004 = ((arg_8h + -0x9b1d) - *0x1046008) + *0x1046004 * 2;\n    var_ch = arg_14h;\n    *0x1046098 = ((*0x1046094 - 0x9b1d) - *0x1046008) + *0x1046098 * 2;\n    if (*0x104603c < 0x5a) {\n        *0x1046038 = *0x1046094;\n        *0x1046004 = *0x1046094 + 0x15;\n        *0x1046094 = *0x1046004 + 0x54;\n    }\n    bVar5 = 0xffff3802 < *0x1046008;\n    *0x1046008 = *0x1046008 + 0xc7fd;\n    *0x104600c = *0x104600c + bVar5;\n    if (*0x104603c < 0x5a) {\n        *0x1046038 = *0x1046094;\n        *0x1046004 = *0x1046094 + 0x15;\n        *0x1046094 = *0x1046004 + 0x54;\n    }\n    for (var_4h = 1; var_4h < 0x2b; var_4h = var_4h + 1) {\n        if (*0x1046094 != *0x1046024) {\n            puVar1 = var_4h * 4 + 0x1046010;\n            bVar5 = *0x1046008 < *puVar1;\n            *0x1046008 = *0x1046008 - *puVar1;\n            *0x104600c = *0x104600c - bVar5;\n            *0x1046094 = arg_ch + -0x5c + *0x1046094;\n            if (arg_ch == *0x104602c) break;\n        }\n    }\n    while (arg_18h != 0) {\n        *0x1046004 = (*0x1046008 - 2) - (arg_18h + -1);\n        *var_8h = *var_ch;\n        var_8h = var_8h + 1;\n        var_ch = var_ch + 1;\n        bVar5 = CARRY4(*0x1046004, *0x1046008);\n        uVar3 = *0x1046004 + *0x1046008;\n        *0x1046008 = uVar3 + 0x59;\n        *0x104600c = *0x104600c + bVar5 + (0xffffffa6 < uVar3);\n        arg_18h = arg_18h + -1;\n    }\n    uVar3 = (*0x1046098 - 0x9b1dU) - *0x1046008;\n    iVar4 = -(*0x1046098 - 0x9b1dU < *0x1046008) - *0x104600c;\n    iVar2 = uVar3 + 0xb2;\n    fcn.01012c10(*0x1046008);\n    *0x1046004 = uVar3 + 0x6e + *0x1046008;\n    for (var_4h = 1; var_4h < 0x2b; var_4h = var_4h + 1) {\n        if (*0x1046094 != *0x1046024) {\n            *0x1046004 = *0x1046004 - *(var_4h * 4 + 0x1046010);\n            *0x1046094 = iVar2 + -0x5c + *0x1046094;\n            if ((iVar2 == *0x104602c) && (iVar4 + (0xffffffa6 < uVar3) + (0xffffffa6 < uVar3 + 0x59) == 0)) break;\n        }\n    }\n    *0x1046004 = *0x1046004 + *0x1046008 + 0x23 + iVar2;\n    if (*0x1046058 == 0x18b5) {\n        *0x1046094 = *0x1046094 - *0x1046020;\n        *0x1046004 = ((*0x1046094 - 0x9b1d) - *0x1046094) + *0x1046004 * 2;\n    }\n    return arg_10h;\n}\n",
        "token_count": 1231
    },
    "0101ab20": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0101ab20(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint var_4h;\n    \n    if (arg_10h == 0) {\n        var_4h = arg_8h;\n    }\n    else {\n        var_4h = fcn.0101e200(arg_8h, arg_ch, arg_10h);\n    }\n    return var_4h;\n}\n",
        "token_count": 102
    },
    "0101be90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0101be90(uint arg_8h, uint arg_ch)\n\n{\n    uint var_10h;\n    uint var_ch;\n    char *var_8h;\n    uint var_4h;\n    \n    var_8h = fcn.0101cbc5(arg_ch);\n    if (var_8h == NULL) {\n        var_8h = \"unknown error\";\n    }\n    fcn.010157e0(var_8h);\n    return arg_8h;\n}\n",
        "token_count": 110
    },
    "0101c000": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0101c000(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint var_4h;\n    \n    if (arg_10h == 0) {\n        var_4h = arg_8h;\n    }\n    else {\n        var_4h = fcn.0101e970(arg_8h, arg_ch, arg_10h);\n    }\n    return var_4h;\n}\n",
        "token_count": 102
    },
    "0101c190": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101c190(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_4h;\n    \n    if (arg_8h != 0) {\n        arg_ch = arg_ch & 0xff;\n        uVar1 = fcn.0101c100();\n        fcn.0101a9f0(uVar1 | arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "0101f31b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0101f31b(int32_t param_1)\n\n{\n    if (*(param_1 + 8) != '\\0') {\n        fcn.0101df3a(*(param_1 + 4));\n    }\n    *(param_1 + 4) = 0;\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 84
    },
    "0101cbc5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0101cbc5(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar2 = 0x103c9a0;\n    if (*0x103c9a4 != 0) {\n        do {\n            if (*piVar2 == arg_8h) {\n                return piVar2[1];\n            }\n            piVar1 = piVar2 + 3;\n            piVar2 = piVar2 + 2;\n        } while (*piVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 139
    },
    "0101cbef": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0101cbef(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar2 = 0x103c748;\n    if (*0x103c74c != 0) {\n        do {\n            if (*piVar2 == arg_8h) {\n                return piVar2[1];\n            }\n            piVar1 = piVar2 + 3;\n            piVar2 = piVar2 + 2;\n        } while (*piVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 136
    },
    "0101cd0e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0101cd0e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_8h_00;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.01020cfa(8);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    if (*(unaff_EBP + 0x10) != 0) {\n        *extraout_ECX = 0x103d4f8;\n        extraout_ECX[2] = vtable.std::basic_ios_char__struct_std::char_traits_char__.0;\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x10) = 1;\n    }\n    arg_ch_00 = *(unaff_EBP + 0xc);\n    arg_8h_00 = *(unaff_EBP + 8);\n    *(extraout_ECX + *(*extraout_ECX + 4)) = vtable.std::basic_ostream_char__struct_std::char_traits_char__.0;\n    *(*(*extraout_ECX + 4) + -4 + extraout_ECX) = *(*extraout_ECX + 4) + -8;\n    fcn.0101d340(arg_8h_00, arg_ch_00);\n    fcn.01020cd7();\n    return;\n}\n",
        "token_count": 374
    },
    "0101ce03": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0101ce03(code **param_1)\n\n{\n    code *pcVar1;\n    uint unaff_ESI;\n    \n    *param_1 = vtable.std::basic_filebuf_char__struct_std::char_traits_char__.0;\n    if (param_1[0x14] != NULL) {\n        fcn.0101d1b7();\n    }\n    if (*(param_1 + 0x13) != '\\0') {\n        fcn.0101d281();\n    }\n    pcVar1 = param_1[0xd];\n    *param_1 = vtable.std::basic_streambuf_char__struct_std::char_traits_char__.0;\n    if (pcVar1 != NULL) {\n        fcn.01016300(unaff_ESI);\n        fcn.0101ddf5(pcVar1);\n    }\n    return;\n}\n",
        "token_count": 189
    },
    "0101df3a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101df3a(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x10e7184, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.0102170d();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.01021720(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "0101f6fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0101f6fc(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint *var_38h_2;\n    code *pcStack56;\n    uint32_t uStack52;\n    uint uStack48;\n    uint *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uchar *var_18h_2;\n    int32_t var_14h_2;\n    uint *var_10h;\n    uint var_ch;\n    code *var_8h;\n    uint var_4h;\n    \n    var_18h_2 = &stack0xfffffffc;\n    puStack32 = &stack0xffffffc0;\n    if (var_34h == 0x123) {\n        *var_30h = 0x101f7a5;\n        var_4h = 1;\n    }\n    else {\n        pcStack56 = fcn.0101f5f6;\n        uStack52 = *0x10462d0 ^ &fcn.0101f6fc::var_38h_2;\n        uStack48 = var_24h;\n        puStack44 = var_30h;\n        uStack40 = var_20h;\n        uStack36 = var_1ch;\n        var_14h_2 = 0;\n        var_38h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.0101f6fc::var_38h_2;\n        var_4h = 1;\n        var_10h = var_34h;\n        var_ch = var_2ch;\n        iVar1 = fcn.01025c9c();\n        var_8h = *(iVar1 + 0x80);\n        (*var_8h)(*var_34h, &fcn.0101f6fc::var_10h);\n        var_4h = 0;\n        if (var_14h_2 == 0) {\n            *in_FS_OFFSET = var_38h_2;\n        }\n        else {\n            *var_38h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_38h_2;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 707
    },
    "0102011a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0102011a(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x28);\n    fcn.0101f902(*(unaff_EBP + -0x2c));\n    iVar1 = fcn.01025c9c();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x30);\n    iVar1 = fcn.01025c9c();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x34);\n    if (((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n         ((unaff_ESI[5] == 0x19930520 || ((unaff_ESI[5] == 0x19930521 || (unaff_ESI[5] == 0x19930522)))))) &&\n        (*(unaff_EBP + -0x38) == 0)) &&\n       ((*(unaff_EBP + -0x1c) != 0 && (iVar1 = fcn.0101f952(unaff_ESI[6]),  iVar1 != 0)))) {\n        fcn.0101fefd(unaff_ESI);\n    }\n    return;\n}\n",
        "token_count": 385
    },
    "01020ab6": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.01020ab6(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.01024bc0(0x10443b8, 0x10);\n    if (*(*(unaff_EBP + 0x10) + 4) < 0x81) {\n        iVar4 = *(*(unaff_EBP + 8) + 8);\n    }\n    else {\n        iVar4 = *(*(unaff_EBP + 8) + 8);\n    }\n    *(unaff_EBP + -0x1c) = iVar4;\n    iVar3 = fcn.01025c9c();\n    *(iVar3 + 0x90) = *(iVar3 + 0x90) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (iVar4 != *(unaff_EBP + 0x14)) {\n        if ((iVar4 < 0) || (*(*(unaff_EBP + 0x10) + 4) <= iVar4)) {\n            fcn.010283cc();\n        }\n        iVar3 = *(unaff_EBP + 0x10);\n        iVar1 = *(iVar3 + 8);\n        uVar2 = *(iVar1 + iVar4 * 8);\n        *(unaff_EBP + -0x20) = uVar2;\n        *(unaff_EBP + -4) = 1;\n        if (*(iVar1 + 4 + iVar4 * 8) != 0) {\n            iVar1 = *(unaff_EBP + 8);\n            *(iVar1 + 8) = uVar2;\n            fcn.01028380(*(*(iVar3 + 8) + 4 + iVar4 * 8), iVar1, 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        iVar4 = *(unaff_EBP + -0x20);\n        *(unaff_EBP + -0x1c) = iVar4;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.01020b75();\n    if (iVar4 != *(unaff_EBP + 0x14)) {\n        fcn.010283cc();\n    }\n    *(*(unaff_EBP + 8) + 8) = iVar4;\n    fcn.01024c05();\n    return;\n}\n",
        "token_count": 612
    },
    "01020b75": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.01020b75(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.01025c9c();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.01025c9c();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 91
    },
    "01024a5f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x01024b54: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x01024b59)\n// WARNING: Removing unreachable block (ram,0x01024b88)\n// WARNING: Removing unreachable block (ram,0x01024b5f)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.01024a5f(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    uint uVar6;\n    int32_t unaff_EBP;\n    int32_t *piVar7;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.01024bc0(0x1044620, 0x1c);\n    fcn.0101fd7e(8);\n    *(unaff_EBP + -4) = 0;\n    pcVar5 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if (*0x10e7150 != 1) {\n        *0x10e7178 = 1;\n        *0x10e7174 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar2 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x10e7e6c);\n            *(unaff_EBP + -0x2c) = piVar2;\n            if (piVar2 != NULL) {\n                piVar3 = (*pcVar5)(*0x10e7e68);\n                *(unaff_EBP + -0x1c) = piVar2;\n                *(unaff_EBP + -0x20) = piVar3;\n                do {\n                    *(unaff_EBP + -0x24) = piVar3;\n                    piVar7 = piVar3;\n                    do {\n                        do {\n                            piVar7 = piVar7 + -1;\n                            *(unaff_EBP + -0x24) = piVar7;\n                            if (piVar7 < piVar2) goto code_r0x01024b2b;\n                            iVar4 = (*_sym.imp.KERNEL32.dll_EncodePointer)(0);\n                        } while (*piVar7 == iVar4);\n                        if (piVar7 < piVar2) goto code_r0x01024b2b;\n                        pcVar5 = (*pcVar5)(*piVar7);\n                        iVar4 = (*_sym.imp.KERNEL32.dll_EncodePointer)(0);\n                        *piVar7 = iVar4;\n                        (*pcVar5)();\n                        pcVar5 = _sym.imp.KERNEL32.dll_DecodePointer;\n                        uVar6 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x10e7e6c);\n                        *(unaff_EBP + -0x28) = uVar6;\n                        piVar3 = (*pcVar5)(*0x10e7e68);\n                        piVar1 = *(unaff_EBP + -0x28);\n                    } while ((*(unaff_EBP + -0x1c) == piVar1) && (*(unaff_EBP + -0x20) == piVar3));\n                    *(unaff_EBP + -0x1c) = piVar1;\n                    *(unaff_EBP + -0x2c) = piVar1;\n                    *(unaff_EBP + -0x20) = piVar3;\n                    piVar2 = piVar1;\n                } while( true );\n            }\ncode_r0x01024b2b:\n            fcn.010249f5(0x10341dc, 0x10341ec);\n        }\n        fcn.010249f5(0x10341f0, 0x10341f4);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.0101fee8(8);\n    }\n    return;\n}\n",
        "token_count": 951
    },
    "0103141c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x01031726)\n// WARNING: Removing unreachable block (ram,0x0103172f)\n// WARNING: Removing unreachable block (ram,0x01031b63)\n// WARNING: Removing unreachable block (ram,0x0103178c)\n// WARNING: Removing unreachable block (ram,0x010317aa)\n// WARNING: Removing unreachable block (ram,0x01031791)\n// WARNING: Removing unreachable block (ram,0x01031798)\n// WARNING: Removing unreachable block (ram,0x0103179d)\n// WARNING: Removing unreachable block (ram,0x010317ad)\n// WARNING: Removing unreachable block (ram,0x01031b59)\n// WARNING: Removing unreachable block (ram,0x010317b5)\n// WARNING: Removing unreachable block (ram,0x010317ba)\n// WARNING: Removing unreachable block (ram,0x010317c1)\n// WARNING: Removing unreachable block (ram,0x010317c4)\n// WARNING: Removing unreachable block (ram,0x010317dc)\n// WARNING: Removing unreachable block (ram,0x010317de)\n// WARNING: Removing unreachable block (ram,0x010317e8)\n// WARNING: Removing unreachable block (ram,0x010317eb)\n// WARNING: Removing unreachable block (ram,0x010317f2)\n// WARNING: Removing unreachable block (ram,0x010317f5)\n// WARNING: Removing unreachable block (ram,0x01031b4b)\n// WARNING: Removing unreachable block (ram,0x01031b69)\n// WARNING: Removing unreachable block (ram,0x01031801)\n// WARNING: Removing unreachable block (ram,0x01031b3c)\n// WARNING: Removing unreachable block (ram,0x0103180d)\n// WARNING: Removing unreachable block (ram,0x0103181d)\n// WARNING: Removing unreachable block (ram,0x0103181f)\n// WARNING: Removing unreachable block (ram,0x01031829)\n// WARNING: Removing unreachable block (ram,0x01031832)\n// WARNING: Removing unreachable block (ram,0x01031b22)\n// WARNING: Removing unreachable block (ram,0x0103183d)\n// WARNING: Removing unreachable block (ram,0x01031854)\n// WARNING: Removing unreachable block (ram,0x01031866)\n// WARNING: Removing unreachable block (ram,0x01031877)\n// WARNING: Removing unreachable block (ram,0x010318b6)\n// WARNING: Removing unreachable block (ram,0x010318bf)\n// WARNING: Removing unreachable block (ram,0x01031aff)\n// WARNING: Removing unreachable block (ram,0x010318cd)\n// WARNING: Removing unreachable block (ram,0x010318df)\n// WARNING: Removing unreachable block (ram,0x010318e4)\n// WARNING: Removing unreachable block (ram,0x010318f1)\n// WARNING: Removing unreachable block (ram,0x010318f7)\n// WARNING: Removing unreachable block (ram,0x010318fd)\n// WARNING: Removing unreachable block (ram,0x01031908)\n// WARNING: Removing unreachable block (ram,0x0103190d)\n// WARNING: Removing unreachable block (ram,0x0103191a)\n// WARNING: Removing unreachable block (ram,0x0103191f)\n// WARNING: Removing unreachable block (ram,0x010318d7)\n// WARNING: Removing unreachable block (ram,0x01031b16)\n// WARNING: Removing unreachable block (ram,0x01031b1c)\n// WARNING: Removing unreachable block (ram,0x01031923)\n// WARNING: Removing unreachable block (ram,0x01031931)\n// WARNING: Removing unreachable block (ram,0x01031938)\n// WARNING: Removing unreachable block (ram,0x01031944)\n// WARNING: Removing unreachable block (ram,0x01031964)\n// WARNING: Removing unreachable block (ram,0x01031969)\n// WARNING: Removing unreachable block (ram,0x0103196e)\n// WARNING: Removing unreachable block (ram,0x01031971)\n// WARNING: Removing unreachable block (ram,0x01031978)\n// WARNING: Removing unreachable block (ram,0x0103197b)\n// WARNING: Removing unreachable block (ram,0x01031987)\n// WARNING: Removing unreachable block (ram,0x01031990)\n// WARNING: Removing unreachable block (ram,0x0103199f)\n// WARNING: Removing unreachable block (ram,0x010319b6)\n// WARNING: Removing unreachable block (ram,0x010319ba)\n// WARNING: Removing unreachable block (ram,0x010319ec)\n// WARNING: Removing unreachable block (ram,0x010319f1)\n// WARNING: Removing unreachable block (ram,0x010319fd)\n// WARNING: Removing unreachable block (ram,0x01031a0c)\n// WARNING: Removing unreachable block (ram,0x01031a12)\n// WARNING: Removing unreachable block (ram,0x01031a13)\n// WARNING: Removing unreachable block (ram,0x01031a3e)\n// WARNING: Removing unreachable block (ram,0x01031a48)\n// WARNING: Removing unreachable block (ram,0x01031a5a)\n// WARNING: Removing unreachable block (ram,0x01031a5e)\n// WARNING: Removing unreachable block (ram,0x01031a68)\n// WARNING: Removing unreachable block (ram,0x01031a76)\n// WARNING: Removing unreachable block (ram,0x01031ab2)\n// WARNING: Removing unreachable block (ram,0x01031a7e)\n// WARNING: Removing unreachable block (ram,0x01031aa9)\n// WARNING: Removing unreachable block (ram,0x01031a89)\n// WARNING: Removing unreachable block (ram,0x01031aa1)\n// WARNING: Removing unreachable block (ram,0x01031a9a)\n// WARNING: Removing unreachable block (ram,0x01031aad)\n// WARNING: Removing unreachable block (ram,0x01031ab6)\n// WARNING: Removing unreachable block (ram,0x01031ab9)\n// WARNING: Removing unreachable block (ram,0x01031ae5)\n// WARNING: Removing unreachable block (ram,0x01031ac6)\n// WARNING: Removing unreachable block (ram,0x01031b1f)\n// WARNING: Removing unreachable block (ram,0x01031b2a)\n// WARNING: Removing unreachable block (ram,0x01031b6e)\n// WARNING: Variable defined which should be unmapped: var_80h\n\nvoid __cdecl\nfcn.0103141c(uint arg_8h, uint arg_ch, char *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t arg_24h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_9h;\n    uint var_4h;\n    \n    if (arg_24h == 0) {\n        puVar2 = fcn.0102170d();\n        *puVar2 = 0x16;\n        fcn.010270d6();\n        fcn.0101f553(arg_8h);\n        return;\n    }\n    for (; (((cVar1 = *arg_10h,  cVar1 == ' ' || (cVar1 == '\\t')) || (cVar1 == '\\n')) || (cVar1 == '\\r'));\n        arg_10h = arg_10h + 1) {\n    }\n    // WARNING: Could not recover jumptable at 0x010314ab. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (12 cases) at 0x1031b94\n    (**0x1031b94)();\n    return;\n}\n",
        "token_count": 1871
    },
    "0101be50": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0101be50(uint param_1)\n\n{\n    uint32_t uVar1;\n    uint *arg_8h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    arg_8h = &var_1h;\n    fcn.01018eb0(arg_8h);\n    uVar1 = fcn.0101be10(arg_8h, param_1);\n    if (uVar1 < 2) {\n        var_ch = 1;\n    }\n    else {\n        var_ch = uVar1 - 1;\n    }\n    return var_ch;\n}\n",
        "token_count": 184
    },
    "01030938": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_44h\n\nvoid __cdecl fcn.01030938(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint8_t uVar3;\n    bool bVar4;\n    bool bVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint8_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    uint *puVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x10462d0 ^ &stack0xfffffffc;\n    uVar1 = arg_8h[5];\n    iVar14 = 0;\n    uVar10 = uVar1 & 0x7fff;\n    uVar16 = *(arg_8h + 3);\n    iVar11 = uVar10 - 0x3fff;\n    var_10h = uVar16;\n    uVar17 = *(arg_8h + 1);\n    var_ch = uVar17;\n    uVar2 = *arg_8h;\n    var_8h = uVar2 << 0x10;\n    uVar3 = str.5_v_[1];\n    if (iVar11 == -0x3fff) {\n        iVar15 = 0;\n        iVar11 = 0;\n        do {\n            if ((&var_10h)[iVar11] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                goto code_r0x010309ad;\n            }\n            iVar11 = iVar11 + 1;\n        } while (iVar11 < 3);\n    }\n    else {\n        iVar6 = str.5_v_[0] + L'\\xffffffff';\n        bVar5 = false;\n        iVar15 = (str.5_v_[0] >> 0x1f & 0x1fU) + str.5_v_[0] >> 5;\n        uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n        if (((&var_10h)[iVar15] & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar7 = (&var_10h)[iVar15] & ~(-1 << (uVar8 & 0x1f));\n            iVar12 = iVar15;\n            while (uVar7 == 0) {\n                iVar12 = iVar12 + 1;\n                if (2 < iVar12) goto code_r0x01030aad;\n                uVar7 = (&var_10h)[iVar12];\n            }\n            iVar12 = (iVar6 >> 0x1f & 0x1fU) + iVar6 >> 5;\n            bVar5 = false;\n            uVar7 = 1 << (0x1f - (iVar6 & 0x1f) & 0x1f);\n            uVar9 = uVar7 + (&var_10h)[iVar12];\n            bVar4 = false;\n            if ((uVar9 < (&var_10h)[iVar12]) || (uVar9 < uVar7)) {\n                bVar4 = true;\n                bVar5 = true;\n            }\n            (&var_10h)[iVar12] = uVar9;\n            while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar4))) {\n                bVar4 = false;\n                bVar5 = false;\n                uVar7 = (&var_10h)[iVar12] + 1;\n                if ((uVar7 < (&var_10h)[iVar12]) || (uVar7 == 0)) {\n                    bVar4 = true;\n                    bVar5 = true;\n                }\n                (&var_10h)[iVar12] = uVar7;\n            }\n        }\ncode_r0x01030aad:\n        (&var_10h)[iVar15] = (&var_10h)[iVar15] & -1 << (uVar8 & 0x1f);\n        iVar15 = iVar15 + 1;\n        if (iVar15 < 3) {\n            puVar13 = &var_10h + iVar15;\n            for (iVar12 = 3 - iVar15; iVar12 != 0; iVar12 = iVar12 + -1) {\n                *puVar13 = 0;\n                puVar13 = puVar13 + 1;\n            }\n        }\n        iVar15 = iVar11;\n        if (bVar5) {\n            iVar15 = uVar10 - 0x3ffe;\n        }\n        if (iVar15 < *0x104735c - str.5_v_[0]) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x104735c < iVar15) {\n                if (iVar15 < *0x1047358) {\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar15 = str.5_v_[3] + iVar15;\n                    iVar11 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar3 & 0x1f;\n                    var_20h = 0;\n                    iVar14 = 0;\n                    do {\n                        uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                        var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        (&var_10h)[iVar14] = uVar16;\n                        iVar14 = iVar14 + 1;\n                    } while (iVar14 < 3);\n                    puVar13 = &var_8h + -iVar11;\n                    iVar14 = 2;\n                    do {\n                        if (iVar14 < iVar11) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar13;\n                        }\n                        puVar13 = puVar13 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar11 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar3 & 0x1f;\n                    var_20h = 0;\n                    do {\n                        uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                        var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        (&var_10h)[iVar14] = uVar16;\n                        iVar14 = iVar14 + 1;\n                    } while (iVar14 < 3);\n                    puVar13 = &var_8h + -iVar11;\n                    iVar14 = 2;\n                    do {\n                        if (iVar14 < iVar11) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar13;\n                        }\n                        puVar13 = puVar13 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar15 = str.5_v_[3] + *0x1047358;\n                }\n                goto code_r0x01030e5e;\n            }\n            iVar11 = *0x104735c - iVar11;\n            var_10h = uVar16;\n            iVar15 = iVar11 + (iVar11 >> 0x1f & 0x1fU) >> 5;\n            var_ch = uVar17;\n            var_8h = uVar2 << 0x10;\n            uVar8 = iVar11 & 0x1f;\n            var_20h = 0;\n            do {\n                uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                (&var_10h)[iVar14] = uVar16;\n                iVar14 = iVar14 + 1;\n            } while (iVar14 < 3);\n            puVar13 = &var_8h + -iVar15;\n            iVar11 = 2;\n            do {\n                if (iVar11 < iVar15) {\n                    (&var_10h)[iVar11] = 0;\n                }\n                else {\n                    (&var_10h)[iVar11] = *puVar13;\n                }\n                puVar13 = puVar13 + -1;\n                iVar11 = iVar11 + -1;\n            } while (-1 < iVar11);\n            iVar11 = (str.5_v_[0] >> 0x1f & 0x1fU) + str.5_v_[0] >> 5;\n            uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n            if (((&var_10h)[iVar11] & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar16 = (&var_10h)[iVar11] & ~(-1 << (uVar8 & 0x1f));\n                iVar14 = iVar11;\n                while (uVar16 == 0) {\n                    iVar14 = iVar14 + 1;\n                    if (2 < iVar14) goto code_r0x01030c68;\n                    uVar16 = (&var_10h)[iVar14];\n                }\n                iVar14 = (iVar6 >> 0x1f & 0x1fU) + iVar6 >> 5;\n                uVar16 = 1 << (0x1f - (iVar6 & 0x1f) & 0x1f);\n                bVar5 = false;\n                uVar17 = uVar16 + (&var_10h)[iVar14];\n                if ((uVar17 < (&var_10h)[iVar14]) || (uVar17 < uVar16)) {\n                    bVar5 = true;\n                }\n                (&var_10h)[iVar14] = uVar17;\n                while ((iVar14 = iVar14 + -1,  -1 < iVar14 && (bVar5))) {\n                    bVar5 = false;\n                    uVar16 = (&var_10h)[iVar14] + 1;\n                    if ((uVar16 < (&var_10h)[iVar14]) || (uVar16 == 0)) {\n                        bVar5 = true;\n                    }\n                    (&var_10h)[iVar14] = uVar16;\n                }\n            }\ncode_r0x01030c68:\n            (&var_10h)[iVar11] = (&var_10h)[iVar11] & -1 << (uVar8 & 0x1f);\n            iVar11 = iVar11 + 1;\n            if (iVar11 < 3) {\n                puVar13 = &var_10h + iVar11;\n                for (iVar14 = 3 - iVar11; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar13 = 0;\n                    puVar13 = puVar13 + 1;\n                }\n            }\n            iVar14 = str.5_v_[1] + L'\\x01';\n            iVar11 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar14 & 0x1f;\n            var_20h = 0;\n            var_34h = 0;\n            do {\n                uVar16 = (&var_10h)[var_34h];\n                (&var_10h)[var_34h] = uVar16 >> uVar8 | var_20h;\n                var_20h = (uVar16 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_34h = var_34h + 1;\n            } while (var_34h < 3);\n            puVar13 = &var_8h + -iVar11;\n            iVar14 = 2;\n            do {\n                if (iVar14 < iVar11) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar13;\n                }\n                puVar13 = puVar13 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\ncode_r0x010309ad:\n        iVar15 = 0;\n    }\ncode_r0x01030e5e:\n    uVar16 = iVar15 << (0x1f - uVar3 & 0x1f) | -((uVar1 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = uVar16;\n        *arg_ch = var_ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = uVar16;\n    }\n    fcn.0101f553(uVar1 & 0x8000);\n    return;\n}\n",
        "token_count": 3223
    },
    "01030eaa": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_44h\n\nvoid __cdecl fcn.01030eaa(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint8_t uVar3;\n    bool bVar4;\n    bool bVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint8_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    uint *puVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x10462d0 ^ &stack0xfffffffc;\n    uVar1 = arg_8h[5];\n    iVar14 = 0;\n    uVar10 = uVar1 & 0x7fff;\n    uVar16 = *(arg_8h + 3);\n    iVar11 = uVar10 - 0x3fff;\n    var_10h = uVar16;\n    uVar17 = *(arg_8h + 1);\n    var_ch = uVar17;\n    uVar2 = *arg_8h;\n    var_8h = uVar2 << 0x10;\n    uVar3 = *0x104737c;\n    if (iVar11 == -0x3fff) {\n        iVar15 = 0;\n        iVar11 = 0;\n        do {\n            if ((&var_10h)[iVar11] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                goto code_r0x01030f1f;\n            }\n            iVar11 = iVar11 + 1;\n        } while (iVar11 < 3);\n    }\n    else {\n        iVar6 = *0x1047378 + -1;\n        bVar5 = false;\n        iVar15 = (*0x1047378 >> 0x1f & 0x1fU) + *0x1047378 >> 5;\n        uVar8 = 0x1f - (*0x1047378 & 0x1f);\n        if (((&var_10h)[iVar15] & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar7 = (&var_10h)[iVar15] & ~(-1 << (uVar8 & 0x1f));\n            iVar12 = iVar15;\n            while (uVar7 == 0) {\n                iVar12 = iVar12 + 1;\n                if (2 < iVar12) goto code_r0x0103101f;\n                uVar7 = (&var_10h)[iVar12];\n            }\n            iVar12 = (iVar6 >> 0x1f & 0x1fU) + iVar6 >> 5;\n            bVar5 = false;\n            uVar7 = 1 << (0x1f - (iVar6 & 0x1f) & 0x1f);\n            uVar9 = uVar7 + (&var_10h)[iVar12];\n            bVar4 = false;\n            if ((uVar9 < (&var_10h)[iVar12]) || (uVar9 < uVar7)) {\n                bVar4 = true;\n                bVar5 = true;\n            }\n            (&var_10h)[iVar12] = uVar9;\n            while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar4))) {\n                bVar4 = false;\n                bVar5 = false;\n                uVar7 = (&var_10h)[iVar12] + 1;\n                if ((uVar7 < (&var_10h)[iVar12]) || (uVar7 == 0)) {\n                    bVar4 = true;\n                    bVar5 = true;\n                }\n                (&var_10h)[iVar12] = uVar7;\n            }\n        }\ncode_r0x0103101f:\n        (&var_10h)[iVar15] = (&var_10h)[iVar15] & -1 << (uVar8 & 0x1f);\n        iVar15 = iVar15 + 1;\n        if (iVar15 < 3) {\n            puVar13 = &var_10h + iVar15;\n            for (iVar12 = 3 - iVar15; iVar12 != 0; iVar12 = iVar12 + -1) {\n                *puVar13 = 0;\n                puVar13 = puVar13 + 1;\n            }\n        }\n        iVar15 = iVar11;\n        if (bVar5) {\n            iVar15 = uVar10 - 0x3ffe;\n        }\n        if (iVar15 < *0x1047374 - *0x1047378) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x1047374 < iVar15) {\n                if (iVar15 < *0x1047370) {\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar15 = *0x1047384 + iVar15;\n                    iVar11 = *0x104737c + (*0x104737c >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar3 & 0x1f;\n                    var_20h = 0;\n                    iVar14 = 0;\n                    do {\n                        uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                        var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        (&var_10h)[iVar14] = uVar16;\n                        iVar14 = iVar14 + 1;\n                    } while (iVar14 < 3);\n                    puVar13 = &var_8h + -iVar11;\n                    iVar14 = 2;\n                    do {\n                        if (iVar14 < iVar11) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar13;\n                        }\n                        puVar13 = puVar13 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar11 = *0x104737c + (*0x104737c >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar3 & 0x1f;\n                    var_20h = 0;\n                    do {\n                        uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                        var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        (&var_10h)[iVar14] = uVar16;\n                        iVar14 = iVar14 + 1;\n                    } while (iVar14 < 3);\n                    puVar13 = &var_8h + -iVar11;\n                    iVar14 = 2;\n                    do {\n                        if (iVar14 < iVar11) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar13;\n                        }\n                        puVar13 = puVar13 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar15 = *0x1047384 + *0x1047370;\n                }\n                goto code_r0x010313d0;\n            }\n            iVar11 = *0x1047374 - iVar11;\n            var_10h = uVar16;\n            iVar15 = iVar11 + (iVar11 >> 0x1f & 0x1fU) >> 5;\n            var_ch = uVar17;\n            var_8h = uVar2 << 0x10;\n            uVar8 = iVar11 & 0x1f;\n            var_20h = 0;\n            do {\n                uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                (&var_10h)[iVar14] = uVar16;\n                iVar14 = iVar14 + 1;\n            } while (iVar14 < 3);\n            puVar13 = &var_8h + -iVar15;\n            iVar11 = 2;\n            do {\n                if (iVar11 < iVar15) {\n                    (&var_10h)[iVar11] = 0;\n                }\n                else {\n                    (&var_10h)[iVar11] = *puVar13;\n                }\n                puVar13 = puVar13 + -1;\n                iVar11 = iVar11 + -1;\n            } while (-1 < iVar11);\n            iVar11 = (*0x1047378 >> 0x1f & 0x1fU) + *0x1047378 >> 5;\n            uVar8 = 0x1f - (*0x1047378 & 0x1f);\n            if (((&var_10h)[iVar11] & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar16 = (&var_10h)[iVar11] & ~(-1 << (uVar8 & 0x1f));\n                iVar14 = iVar11;\n                while (uVar16 == 0) {\n                    iVar14 = iVar14 + 1;\n                    if (2 < iVar14) goto code_r0x010311da;\n                    uVar16 = (&var_10h)[iVar14];\n                }\n                iVar14 = (iVar6 >> 0x1f & 0x1fU) + iVar6 >> 5;\n                uVar16 = 1 << (0x1f - (iVar6 & 0x1f) & 0x1f);\n                bVar5 = false;\n                uVar17 = uVar16 + (&var_10h)[iVar14];\n                if ((uVar17 < (&var_10h)[iVar14]) || (uVar17 < uVar16)) {\n                    bVar5 = true;\n                }\n                (&var_10h)[iVar14] = uVar17;\n                while ((iVar14 = iVar14 + -1,  -1 < iVar14 && (bVar5))) {\n                    bVar5 = false;\n                    uVar16 = (&var_10h)[iVar14] + 1;\n                    if ((uVar16 < (&var_10h)[iVar14]) || (uVar16 == 0)) {\n                        bVar5 = true;\n                    }\n                    (&var_10h)[iVar14] = uVar16;\n                }\n            }\ncode_r0x010311da:\n            (&var_10h)[iVar11] = (&var_10h)[iVar11] & -1 << (uVar8 & 0x1f);\n            iVar11 = iVar11 + 1;\n            if (iVar11 < 3) {\n                puVar13 = &var_10h + iVar11;\n                for (iVar14 = 3 - iVar11; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar13 = 0;\n                    puVar13 = puVar13 + 1;\n                }\n            }\n            iVar14 = *0x104737c + 1;\n            iVar11 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar14 & 0x1f;\n            var_20h = 0;\n            var_34h = 0;\n            do {\n                uVar16 = (&var_10h)[var_34h];\n                (&var_10h)[var_34h] = uVar16 >> uVar8 | var_20h;\n                var_20h = (uVar16 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_34h = var_34h + 1;\n            } while (var_34h < 3);\n            puVar13 = &var_8h + -iVar11;\n            iVar14 = 2;\n            do {\n                if (iVar14 < iVar11) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar13;\n                }\n                puVar13 = puVar13 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\ncode_r0x01030f1f:\n        iVar15 = 0;\n    }\ncode_r0x010313d0:\n    uVar16 = iVar15 << (0x1f - uVar3 & 0x1f) | -((uVar1 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (*0x1047380 == 0x40) {\n        arg_ch[1] = uVar16;\n        *arg_ch = var_ch;\n    }\n    else if (*0x1047380 == 0x20) {\n        *arg_ch = uVar16;\n    }\n    fcn.0101f553(uVar1 & 0x8000);\n    return;\n}\n",
        "token_count": 3202
    },
    "010019b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint16_t __cdecl fcn.010019b0(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (*0x1046044 == 3) {\n        arg_8h = *0x1046098 + arg_8h + var_8h;\n    }\n    uVar2 = (var_ch + -2) - *0x1046000;\n    cVar1 = *0x1046098;\n    if (*0x1046058 == 0x18b5) {\n        *0x1046094 = *0x1046094 - *0x1046020;\n        *0x1046098 = ((*0x1046094 - 0x9b1d) - *0x1046094) + *0x1046098 * 2;\n    }\n    *0x1046094 = fcn.01001750(*0x1046000);\n    if (*0x1046044 == 3) {\n        *0x1046000 = *0x1046098 + *0x1046000 + uVar2;\n    }\n    var_8h._0_2_ = *0x1046000 + -0x44 + var_ch;\n    iVar3 = var_8h + var_ch + *0x1046000;\n    *0x1046098 = *0x1046098 - ((var_8h + 8) - (cVar1 + -0x20 + uVar2));\n    if (*0x1046094 <= *0x1046098) {\n        *0x1046094 = *0x1046098 + -5 + var_8h;\n        *0x1046020 = var_8h * *0x1046020;\n        *0x1046098 = ((var_8h - 0x9b1d) - *0x1046094) + *0x1046098 * 2;\n    }\n    cVar1 = fcn.01001750(*0x1046000);\n    if (*0x1046044 == 3) {\n        *0x1046000 = *0x1046098 + *0x1046000 + var_8h;\n    }\n    else {\n        var_8h._0_2_ = (*0x1046098 + -2) - *0x1046000;\n    }\n    cVar1 = iVar3 + -0x5c + cVar1;\n    var_10h = 1;\n    while ((var_10h < 0x2b &&\n           ((var_8h == *0x1046024 || (var_8h._0_2_ = arg_8h + -0x385c + var_8h,  arg_8h != *0x104602c))))) {\n        var_10h = var_10h + 1;\n    }\n    if (*0x1046074 - *0x1046054 == 0x2a4) {\n        *0x1046098 = iVar3 * 3 + *0x1046098 * 2;\n    }\n    else {\n        *0x1046098 = iVar3 * 3 + 0x18f48 + *0x1046098 * 2;\n    }\n    if (*0x1046044 == 3) {\n        *0x1046094 = cVar1 * '\\x02' + *0x1046098;\n    }\n    else {\n        *0x1046094 = (*0x1046098 + -2) - cVar1;\n    }\n    return var_8h;\n}\n",
        "token_count": 898
    },
    "01001d20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01001d20(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    bool bVar6;\n    uint lpflOldProtect;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint dwSize;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_8h = 10;\n    dwSize = 0x311d;\n    if (*0x1046058 == 0x18b5) {\n        *0x1046098 = *0x1046098 - str._Ht[3];\n        *0x1046000 = *0x1046000 * 2 - 0x9b1d;\n    }\n    var_4h = 0xc7fc;\n    *0x1047b00 = arg_ch;\n    uVar2 = arg_8h + 0xc7dc;\n    if (0xc7fb < *0x1046000) {\n        var_4h = (*0x1046000 - 5) + *0x1046094;\n        str._Ht[3] = *0x1046094 * str._Ht[3];\n        *0x1046000 = ((*0x1046094 - 0x9b1d) - var_4h) + *0x1046000 * 2;\n    }\n    uVar4 = (-var_4h - 0x9b13) + uVar2;\n    *0x1046008 = uVar4 + uVar2;\n    *0x104600c = CARRY4(-var_4h - 0x9b13, uVar2) + CARRY4(uVar4, uVar2);\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, 0x1047b58, 0x8c0);\n    var_8h = (var_8h * 3 + -0x9b1d) - *0x1046094;\n    if (*0x1046074 - *0x1046054 == 0x2a4) {\n        var_4h = *0x1046000 * 2 + iVar1 * 2 + *0x1046094;\n    }\n    else {\n        var_4h = *0x1046000 + (*0x1046094 + 0xc7a4 + iVar1) * 2;\n    }\n    *0x1046094 = *0x1046008 + -0x20 + var_8h;\n    (*_sym.imp.KERNEL32.dll_VirtualProtectEx)(0xffffffff, *0x1047b00, dwSize, *0x10460b4, &lpflOldProtect);\n    for (var_ch = 1; var_ch < 0x2b; var_ch = var_ch + 1) {\n        if (*0x1046098 != str._Ht[4]) {\n            *0x1046000 = *0x1046000 - *(var_ch * 4 + 0x1046010);\n            *0x1046098 = var_8h + 0xc7a4 + *0x1046098;\n            if (var_8h == *0x104602c) break;\n        }\n    }\n    var_14h = *0x1046044;\n    if (*0x1046044 == 3) {\n        *0x1046094 = *0x1046094 + *0x1046000 + var_4h;\n    }\n    else {\n        var_4h = (*0x1046000 - 2) - *0x1046094;\n    }\n    var_4h = var_4h + *0x1046008 + var_8h;\n    uVar2 = var_4h + *0x1046008 + arg_8h;\n    iVar1 = *0x104600c + CARRY4(var_4h, *0x1046008) + CARRY4(var_4h + *0x1046008, arg_8h);\n    if (*0x1046034 - str._Ht[0] == 0x2a4) {\n        uVar3 = var_4h + uVar2 + uVar2;\n        uVar4 = var_4h + uVar3;\n        *0x1046008 = uVar4 + arg_8h;\n        *0x104600c = iVar1 * 2 + CARRY4(var_4h, uVar2) + CARRY4(var_4h + uVar2, uVar2) + CARRY4(var_4h, uVar3) +\n                     CARRY4(uVar4, arg_8h);\n    }\n    else {\n        uVar4 = arg_8h + 0xc7a4 + uVar2;\n        *0x1046008 = var_4h + uVar4 + uVar4;\n        *0x104600c = (iVar1 + CARRY4(arg_8h + 0xc7a4, uVar2)) * 2 + CARRY4(var_4h, uVar4) +\n                     CARRY4(var_4h + uVar4, uVar4);\n    }\n    var_8h = (*0x1046094 - 2) - var_8h;\n    *0x1046094 = var_8h + -0x5c + *0x1046094;\n    var_18h = *0x1046044;\n    if (*0x1046044 == 3) {\n        arg_8h = var_4h + arg_8h + *0x1046008;\n    }\n    else {\n        *0x1046008 = (var_4h - 2) - arg_8h;\n        *0x104600c = 0;\n    }\n    uVar2 = (var_8h + -0x9b1d) - *0x1046094;\n    bVar5 = CARRY4(uVar2, *0x1046008);\n    uVar2 = uVar2 + *0x1046008;\n    bVar6 = CARRY4(uVar2, *0x1046008);\n    *0x1046008 = uVar2 + *0x1046008;\n    *0x104600c = *0x104600c * 2 + bVar5 + bVar6;\n    var_4h = (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(0x1047b58, 0x8c0);\n    if (*0x104603c <= arg_8h) {\n        *0x1046038 = *0x1046008;\n        var_4h = (arg_8h - 0x44) + *0x1046008;\n    }\n    *0x1046008 = var_4h + -5 + arg_8h;\n    *0x104600c = 0;\n    return;\n}\n",
        "token_count": 1605
    },
    "01013c50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.01013c50(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint var_4h;\n    \n    uVar1 = (*0x1046094 - 5) + *0x1046004;\n    if (*0x1046058 == 0x18b5) {\n        *0x1046094 = *0x1046094 - *0x1046020;\n        *0x1046004 = ((*0x1046094 - 0x9b1d) - *0x1046094) + *0x1046004 * 2;\n    }\n    if (*0x104603c <= arg_8h) {\n        *0x1046004 = (arg_8h - 0x44) + uVar1;\n        *0x1046038 = uVar1;\n    }\n    if (*0x1046044 == 3) {\n        arg_8h = *0x1046004 + arg_8h + *0x1046094;\n    }\n    else {\n        *0x1046094 = (*0x1046004 + -2) - arg_8h;\n    }\n    *0x1046098 = (*0x1046094 - 0x20) + *0x1046004;\n    for (*0x1048dfc = 1; *0x1048dfc < 0x2b; *0x1048dfc = *0x1048dfc + 1) {\n        if (*0x1046098 != *0x1046024) {\n            *0x1046004 = *0x1046004 - *(*0x1048dfc * 4 + 0x1046010);\n            *0x1046098 = arg_8h + 0xc7a4 + *0x1046098;\n            if (arg_8h == *0x104602c) break;\n        }\n    }\n    *0x1046094 = *0x1046094 - ((*0x1046004 + '\\b') - *0x1046098);\n    for (*0x1048dfc = 1; *0x1048dfc < 0x2b; *0x1048dfc = *0x1048dfc + 1) {\n        if (*0x1046094 != *0x1046024) {\n            *0x1046004 = *0x1046004 - *(*0x1048dfc * 4 + 0x1046010);\n            *0x1046094 = arg_8h + -0x5c + *0x1046094;\n            if (arg_8h == *0x104602c) break;\n        }\n    }\n    *0x1046098 = *0x1046090 + 0xc7a4 + *0x1046094 + *0x1046098 + *0x1046004;\n    *0x1046008 = *0x1046090 + -0x44 + *0x1046098;\n    *0x1046094 = ((*0x1046004 + -0x1d) - *0x1046098) + *0x1046094 * '\\x02';\n    if (*0x104603c <= arg_8h) {\n        *0x1046038 = *0x1046094;\n        *0x1046004 = (arg_8h - 0x44) + *0x1046094;\n        *0x1046094 = *0x1046004 + -5 + arg_8h;\n    }\n    *0x104600c = 0;\n    return *0x1046008;\n}\n",
        "token_count": 830
    },
    "01019c80": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.01019c80(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_11h;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x1033560;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    var_4h = 0;\n    cVar1 = fcn.0101bc80();\n    if (cVar1 != '\\0') {\n        uVar2 = fcn.0101bb20();\n        if ((uVar2 & 2) != 0) {\n            fcn.0101c0e0();\n            iVar3 = fcn.0101c080();\n            if (iVar3 == -1) {\n                fcn.0101c190(4, 0);\n            }\n        }\n    }\n    *in_FS_OFFSET = var_ch_2;\n    return;\n}\n",
        "token_count": 276
    },
    "0101bb40": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0101bb40(uint param_1)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_18h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x10335c8;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x10462d0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    iVar3 = fcn.0101c0e0(uVar2);\n    if (iVar3 != 0) {\n        fcn.01015ee0(param_1);\n        var_4h = 0;\n        cVar1 = fcn.01016900();\n        if (cVar1 != '\\0') {\n            fcn.0101c0e0();\n            iVar3 = fcn.0101c080();\n            if (iVar3 == -1) {\n                fcn.0101c190(4, 0);\n            }\n        }\n        var_4h = 0xffffffff;\n        fcn.01016370();\n    }\n    *in_FS_OFFSET = var_ch;\n    return param_1;\n}\n",
        "token_count": 301
    },
    "0101cc75": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.0101cc75(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.01020cfa(0x14);\n    fcn.0101c402(0);\n    piVar1 = *0x10e6ea8;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.010168b0();\n    iVar2 = fcn.01019240(arg_8h_00);\n    if ((iVar2 == 0) && (piVar1 == NULL)) {\n        iVar2 = fcn.0101d02c(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar2 == -1) {\n            fcn.0101f1fb(\"bad cast\");\n            fcn.0101f562(unaff_EBP + -0x20, 0x10440b4);\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *0x10e6ea8 = piVar1;\n        (**(*piVar1 + 4))();\n        fcn.0101c9c3(piVar1);\n    }\n    fcn.0101c45d();\n    fcn.01020cd7();\n    return;\n}\n",
        "token_count": 411
    },
    "0101fb98": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0101fb98(void)\n\n{\n    int32_t unaff_ESI;\n    \n    if ((unaff_ESI == 0) && (*0x1046d30 != -1)) {\n        fcn.01025e4c();\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "01021c1a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.01021c1a(uint arg_8h)\n\n{\n    uint8_t **ppuVar1;\n    uint8_t **arg_8h_00;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.01024bc0(0x1044560, 0xc);\n    iVar5 = 0;\n    *(unaff_EBP + -0x1c) = 0;\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == NULL) {\n        puVar2 = fcn.0102170d();\n        *puVar2 = 0x16;\n        fcn.010270d6();\n        goto code_r0x01021cff;\n    }\n    fcn.01021871(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    if ((*(arg_8h_00 + 3) & 0x40) == 0) {\n        uVar3 = fcn.01029c7e(arg_8h_00);\n        if ((uVar3 == 0xffffffff) || (uVar3 == 0xfffffffe)) {\n            iVar4 = 0x10470d8;\n        }\n        else {\n            iVar4 = (uVar3 & 0x1f) * 0x40 + *((uVar3 >> 5) * 4 + 0x10e7b18);\n        }\n        if ((*(iVar4 + 0x24) & 0x7f) == 0) {\n            if ((uVar3 == 0xffffffff) || (uVar3 == 0xfffffffe)) {\n                iVar4 = 0x10470d8;\n            }\n            else {\n                iVar4 = (uVar3 & 0x1f) * 0x40 + *((uVar3 >> 5) * 4 + 0x10e7b18);\n            }\n            if ((*(iVar4 + 0x24) & 0x80) == 0) goto code_r0x01021cd2;\n        }\n        puVar2 = fcn.0102170d();\n        *puVar2 = 0x16;\n        fcn.010270d6();\n        iVar5 = -1;\n        *(unaff_EBP + -0x1c) = 0xffffffff;\n    }\ncode_r0x01021cd2:\n    if (iVar5 == 0) {\n        ppuVar1 = arg_8h_00 + 1;\n        *ppuVar1 = *ppuVar1 + -1;\n        if (*ppuVar1 < 0) {\n            uVar3 = fcn.0102a884(arg_8h_00);\n        }\n        else {\n            uVar3 = **arg_8h_00;\n            *arg_8h_00 = *arg_8h_00 + 1;\n        }\n        *(unaff_EBP + -0x1c) = uVar3;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.01021d0b();\ncode_r0x01021cff:\n    fcn.01024c05();\n    return;\n}\n",
        "token_count": 776
    },
    "01021d68": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.01021d68(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t *arg_8h_00;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.01024bc0(0x1044580, 0xc);\n    iVar5 = 0;\n    *(unaff_EBP + -0x1c) = 0;\n    arg_8h_00 = *(unaff_EBP + 0xc);\n    if (arg_8h_00 == NULL) {\n        puVar2 = fcn.0102170d();\n        *puVar2 = 0x16;\n        fcn.010270d6();\n        goto code_r0x01021e55;\n    }\n    fcn.01021871(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    if ((*(arg_8h_00 + 3) & 0x40) == 0) {\n        uVar3 = fcn.01029c7e(arg_8h_00);\n        if ((uVar3 == 0xffffffff) || (uVar3 == 0xfffffffe)) {\n            iVar4 = 0x10470d8;\n        }\n        else {\n            iVar4 = (uVar3 & 0x1f) * 0x40 + *((uVar3 >> 5) * 4 + 0x10e7b18);\n        }\n        if ((*(iVar4 + 0x24) & 0x7f) == 0) {\n            if ((uVar3 == 0xffffffff) || (uVar3 == 0xfffffffe)) {\n                iVar4 = 0x10470d8;\n            }\n            else {\n                iVar4 = (uVar3 & 0x1f) * 0x40 + *((uVar3 >> 5) * 4 + 0x10e7b18);\n            }\n            if ((*(iVar4 + 0x24) & 0x80) == 0) goto code_r0x01021e20;\n        }\n        puVar2 = fcn.0102170d();\n        *puVar2 = 0x16;\n        fcn.010270d6();\n        iVar5 = -1;\n        *(unaff_EBP + -0x1c) = 0xffffffff;\n    }\ncode_r0x01021e20:\n    if (iVar5 == 0) {\n        piVar1 = arg_8h_00 + 1;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 < 0) {\n            uVar3 = fcn.01027942(*(unaff_EBP + 8), arg_8h_00);\n        }\n        else {\n            uVar3 = *(unaff_EBP + 8);\n            **arg_8h_00 = uVar3;\n            uVar3 = uVar3 & 0xff;\n            *arg_8h_00 = *arg_8h_00 + 1;\n        }\n        *(unaff_EBP + -0x1c) = uVar3;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.01021e61();\ncode_r0x01021e55:\n    fcn.01024c05();\n    return;\n}\n",
        "token_count": 811
    },
    "01025c66": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01025c66(int32_t arg_8h)\n\n{\n    if (*0x1046d30 != -1) {\n        if (arg_8h == 0) {\n            arg_8h = fcn.010224c6(*0x1046d30);\n        }\n        fcn.010224e5(*0x1046d30, 0);\n        fcn.01025b31(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "0101ceab": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0101ceab(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.0101ce58();\n    if ((arg_8h & 1) != 0) {\n        fcn.0101ddf5(in_ECX + -8);\n    }\n    return in_ECX + -8;\n}\n",
        "token_count": 83
    },
    "01029f30": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.01029f30(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t arg_8h_00;\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.01024bc0(0x1044848, 0x10);\n    *(unaff_EBP + -0x1c) = 0;\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar1 = fcn.010216d9();\n        *puVar1 = 0;\n        puVar1 = fcn.0102170d();\n        *puVar1 = 9;\n    }\n    else {\n        if ((arg_8h_00 < 0) || (*0x10e7e60 <= arg_8h_00)) {\n            puVar1 = fcn.010216d9();\n            *puVar1 = 0;\n        }\n        else {\n            iVar3 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*((arg_8h_00 >> 5) * 4 + 0x10e7b18) + 4 + iVar3) & 1) != 0) {\n                fcn.0102f85b(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*((arg_8h_00 >> 5) * 4 + 0x10e7b18) + 4 + iVar3) & 1) == 0) {\n                    puVar1 = fcn.0102170d();\n                    *puVar1 = 9;\n                    puVar1 = fcn.010216d9();\n                    *puVar1 = 0;\n                    uVar2 = 0xffffffff;\n                }\n                else {\n                    uVar2 = fcn.0102a01f(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                }\n                *(unaff_EBP + -0x1c) = uVar2;\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.01029ff7();\n                goto code_r0x0102a019;\n            }\n            puVar1 = fcn.010216d9();\n            *puVar1 = 0;\n        }\n        puVar1 = fcn.0102170d();\n        *puVar1 = 9;\n        fcn.010270d6();\n    }\ncode_r0x0102a019:\n    fcn.01024c05();\n    return;\n}\n",
        "token_count": 654
    },
    "0102bc4c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0102bc4c(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    code *pcVar5;\n    code *pcVar6;\n    int32_t iVar7;\n    uint arg_8h_00;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    code *var_18h;\n    code *var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    pcVar6 = _sym.imp.KERNEL32.dll_EncodePointer;\n    var_4h = *0x10462d0 ^ &stack0xfffffffc;\n    var_1ch = arg_8h;\n    iVar7 = 0;\n    arg_8h_00 = 0;\n    var_20h = arg_ch;\n    pcVar1 = (*_sym.imp.KERNEL32.dll_EncodePointer)();\n    var_18h = pcVar1;\n    var_14h = fcn.01022535();\n    if (*0x10e7e04 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(L\"USER32.DLL\", 0, 0x800);\n        if (((iVar2 == 0) &&\n            ((iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar2 != 0x57 ||\n             (iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(L\"USER32.DLL\", 0, 0),  iVar2 == 0)))) ||\n           (iVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"MessageBoxW\"),  iVar3 == 0)) goto code_r0x0102be21;\n        *0x10e7e04 = (*pcVar6)(iVar3);\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"GetActiveWindow\");\n        *0x10e7e08 = (*pcVar6)(uVar4);\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"GetLastActivePopup\");\n        *0x10e7e0c = (*pcVar6)(uVar4);\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"GetUserObjectInformationW\");\n        *0x10e7e14 = (*pcVar6)(uVar4);\n        pcVar1 = var_18h;\n        if (*0x10e7e14 != NULL) {\n            uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"GetProcessWindowStation\");\n            *0x10e7e10 = (*pcVar6)(uVar4);\n            pcVar1 = var_18h;\n        }\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    if (iVar2 == 0) {\n        if (var_14h != NULL) {\n            (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x10e7e04);\n            goto code_r0x0102be21;\n        }\n    }\n    else {\n        if (var_1ch != 0) {\n            (*_sym.imp.KERNEL32.dll_OutputDebugStringW)(var_1ch);\n        }\n        if (var_14h != NULL) goto code_r0x0102be21;\n    }\n    pcVar6 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if ((*0x10e7e10 == pcVar1) || (*0x10e7e14 == pcVar1)) {\ncode_r0x0102bdd7:\n        if ((((*0x10e7e08 != pcVar1) && (pcVar5 = (*pcVar6)(*0x10e7e08),  pcVar5 != NULL)) &&\n            (iVar7 = (*pcVar5)(),  iVar7 != 0)) &&\n           ((*0x10e7e0c != pcVar1 && (pcVar1 = (*pcVar6)(*0x10e7e0c),  pcVar1 != NULL)))) {\n            iVar7 = (*pcVar1)(iVar7);\n        }\n    }\n    else {\n        var_14h = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x10e7e10);\n        var_18h = (*pcVar6)(*0x10e7e14);\n        if (((var_14h == NULL) || (var_18h == NULL)) ||\n           (((iVar2 = (*var_14h)(),  iVar2 != 0 && (iVar2 = (*var_18h)(iVar2, 1, &var_10h, 0xc, &var_24h),  iVar2 != 0))\n            && ((var_8h & 1) != 0)))) goto code_r0x0102bdd7;\n        arg_10h = arg_10h | 0x200000;\n    }\n    pcVar6 = (*pcVar6)(*0x10e7e04);\n    if (pcVar6 != NULL) {\n        (*pcVar6)(iVar7, var_1ch, var_20h, arg_10h);\n    }\ncode_r0x0102be21:\n    fcn.0101f553(arg_8h_00);\n    return;\n}\n",
        "token_count": 1230
    },
    "01001000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.01001000(void)\n\n{\n    // [00] -r-x section size 208896 named .text\n    fcn.010159e0();\n    fcn.0101df25(fcn.01033750);\n    return;\n}\n",
        "token_count": 56
    },
    "01001020": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.01001020(void)\n\n{\n    fcn.01015a00();\n    fcn.0101df25(fcn.01033760);\n    return;\n}\n",
        "token_count": 39
    },
    "01001040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.01001040(void)\n\n{\n    fcn.01015c60();\n    fcn.0101df25(fcn.01033770);\n    return;\n}\n",
        "token_count": 39
    },
    "01001110": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.01001110(void)\n\n{\n    *0x10e6d18 = 0x40665ac;\n    return;\n}\n",
        "token_count": 32
    },
    "01001220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.01001220(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint arg_28h, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13, \n            uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint noname_27, uint arg_78h)\n\n{\n    uint32_t uVar1;\n    int32_t unaff_EBP;\n    \n    uVar1 = *(unaff_EBP + 0x78) & 4;\n    if (uVar1 != 0) {\n        *(unaff_EBP + 0x78) = *(unaff_EBP + 0x78) & 0xfffffffb;\n        uVar1 = (**0x53a37)();\n    }\n    return uVar1 - 1;\n}\n",
        "token_count": 298
    },
    "010015a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.010015a0(uint32_t arg_8h)\n\n{\n    char cVar1;\n    char cVar2;\n    \n    cVar2 = arg_8h;\n    cVar1 = *0x1046004;\n    if (*0x1046034 - str._Ht[0] == 0x2a4) {\n        *0x1046098 = cVar1 * '\\x02' + *0x1046098 * '\\x02' + cVar2;\n    }\n    else {\n        *0x1046098 = cVar1 + (cVar2 + -0x5c + *0x1046098) * '\\x02';\n    }\n    *0x1046094 = cVar1 + -0x44 + *0x1046098;\n    if (*0x1046094 <= *0x1046004) {\n        *0x1046094 = cVar1 + -5 + cVar2;\n        str._Ht[3] = str._Ht[3] * arg_8h;\n        *0x1046004 = ((arg_8h - 0x9b1d) - *0x1046094) + *0x1046004 * 2;\n    }\n    if (*0x104603c <= arg_8h) {\n        *0x1046038 = *0x1046094;\n        *0x1046004 = (arg_8h - 0x44) + *0x1046094;\n        *0x1046094 = *0x1046004 + -5 + cVar2;\n    }\n    *0x1046098 = *0x1046008 + -0x20 + *0x1046090;\n    return *0x1046090;\n}\n",
        "token_count": 400
    },
    "010023c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.010023c0(void)\n\n{\n    int32_t iVar1;\n    \n    (**0x292573)();\n    (**0x292557)();\n    (**0x2929be)();\n    (**0x2929b1)();\n    (**0x29299c)();\n    (**0x292520)();\n    (**0x2925c5)();\n    (**0x2924f7)();\n    (**0x2924ec)();\n    (**0x292538)();\n    iVar1 = func_0x01238b7f();\n    return iVar1 + -1;\n}\n",
        "token_count": 124
    },
    "010126e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.010126e0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    bool bVar5;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 1; var_4h < 0x2b; var_4h = var_4h + 1) {\n        if (*0x1046098 != *0x1046024) {\n            *0x1046004 = *0x1046004 - *(var_4h * 4 + 0x1046010);\n            *0x1046098 = arg_8h + 0xc7a4 + *0x1046098;\n            if (arg_8h == *0x104602c) break;\n        }\n    }\n    iVar1 = (*0x1046094 - 0x20) + *0x1046004;\n    *0x1046094 = ((var_8h + -0x1d) - iVar1) + *0x1046094 * '\\x02';\n    if (*0x1046058 == 0x18b5) {\n        uVar2 = *0x1046094 - *0x1046020;\n        *0x1046094 = uVar2 - *0x1046020;\n        *0x1046004 = ((*0x1046094 - 0x9b1d) - *0x1046094) + (((uVar2 - 0x9b1d) - uVar2) + *0x1046004 * 2) * 2;\n    }\n    uVar3 = (var_8h + -0x9b1d) - iVar1;\n    bVar4 = CARRY4(uVar3, *0x1046008);\n    uVar3 = uVar3 + *0x1046008;\n    bVar5 = CARRY4(uVar3, *0x1046008);\n    *0x1046008 = uVar3 + *0x1046008;\n    *0x104600c = *0x104600c * 2 + bVar4 + bVar5;\n    *0x1046098 = *0x1046008 + -5 + *0x1046004;\n    return *0x1046008;\n}\n",
        "token_count": 547
    },
    "010128d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.010128d0(void)\n\n{\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_4h._0_2_ = *0x1046004 + -5 + *0x1046000;\n    if (*0x1046034 - str._Ht[0] == 0x2a4) {\n        *0x1046004 = var_4h + var_4h + *0x1046004 * 2 + var_4h;\n    }\n    else {\n        *0x1046004 = var_4h + (var_4h + 0xc7a4 + *0x1046004) * 2;\n    }\n    for (var_8h = 0x11ea; var_8h < 0x12c2; var_8h = var_8h + 4) {\n        if (*0x1046058 == 0x18b5) {\n            *0x1046004 = *0x1046004 - str._Ht[3];\n        }\n        if (*0x1046034 - str._Ht[0] == 0x2a4) {\n            *0x1046004 = var_4h + var_4h + *0x1046004 * 2 + var_4h;\n        }\n        else {\n            *0x1046004 = var_4h + (var_4h + 0xc7a4 + *0x1046004) * 2;\n        }\n        *0x1046098 = *0x1046000 + -0x20 + *0x1046094;\n        *0x1046090 = (*0x1046094 - 2) - var_4h;\n        if (*0x1046058 == 0x18b5) {\n            *0x1046000 = *0x1046000 - str._Ht[3];\n            *0x1046090 = *0x1046090 * 2 + -0x9b1d;\n        }\n        *0x1047b14 = *(*0x1047b4c + var_8h + -0x11ea) + 0x1013204;\n        *(*0x1047b4c + var_8h + -0x11ea) = *0x1047b14;\n        var_4h._0_2_ = *0x1046090 + -5 + *0x1046098;\n    }\n    *0x1046004 = *0x1046004 - ((*0x1046000 + 8) - var_4h);\n    if (*0x1046058 == 0x18b5) {\n        *0x1046004 = *0x1046004 + str._Ht[3] * -2;\n        *0x1046090 = (*0x1046090 * 2 + -0x9b1d) * 2 + -0x9b1d;\n    }\n    return *0x1046090;\n}\n",
        "token_count": 698
    },
    "01013490": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.01013490(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = *0x1046004 + *0x1046098 + 0xd4d7 + arg_8h;\n    iVar1 = arg_8h * 2 + -0x44 + *0x1046004 * 2;\n    iVar2 = iVar1 * 2 + -0x9b1d + arg_8h + -0x44 + iVar2 + iVar2 + arg_8h + (*0x1046004 + -0x44) * 2;\n    *0x1046008 = (iVar2 + -0x22) - iVar1;\n    *0x1046004 = iVar1;\n    *0x104600c = 0;\n    *0x1046090 = (iVar1 + -2) - arg_8h;\n    *0x1046098 = iVar2 + -0x20;\n    return *0x1046008;\n}\n",
        "token_count": 252
    },
    "01013960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.01013960(int32_t arg_8h)\n\n{\n    char cVar1;\n    char cVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint8_t uVar6;\n    uint var_8h;\n    uint var_1h;\n    \n    if (*0x1046034 - str._Ht[0] == 0x2a4) {\n        *0x1046098 = *0x1046004 * 2 + *0x1046098 * 2 + arg_8h;\n    }\n    else {\n        *0x1046098 = *0x1046004 + (arg_8h + 0xc7a4 + *0x1046098) * 2;\n    }\n    *0x1046098 = *0x1046094 + *0x1046098 + *0x1046004;\n    if (*0x1046058 == 0x18b5) {\n        var_8h._0_1_ = var_8h - str._Ht[3];\n        *0x1046098 = *0x1046098 * 2 + -0x9b1d;\n    }\n    iVar4 = *0x1046098 + *0x1046004 + var_1h;\n    cVar1 = *0x1046094 + (var_1h - 5) + var_8h + arg_8h;\n    cVar2 = iVar4;\n    uVar3 = cVar2 + -0x44 + cVar1;\n    iVar5 = arg_8h + iVar4 * 3 + -0x9adb;\n    *0x1046004 = iVar5 + iVar4 + arg_8h;\n    if (*0x1046058 == 0x18b5) {\n        uVar6 = (((*0x1046094 * '\\x02' + cVar1 * '\\x04' + cVar2 * '\\x03') - arg_8h) + 'T') - str._Ht[3];\n        *0x1046004 = ((uVar6 - 0x9b1d) - uVar6) + *0x1046004 * 2;\n    }\n    *0x1046094 = (uVar3 + cVar2 + -7) - *0x1046004;\n    *0x1046098 = (uVar3 - 5) + iVar5;\n    return iVar5;\n}\n",
        "token_count": 589
    },
    "01015000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.01015000(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_1h;\n    \n    uVar1 = fcn.010156e0(arg_ch);\n    uVar1 = fcn.010156e0(arg_8h, uVar1);\n    fcn.01014ff0(uVar1);\n    return;\n}\n",
        "token_count": 103
    },
    "01015030": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.01015030(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t var_4h;\n    \n    uVar1 = fcn.01014ff0(arg_8h, arg_ch);\n    var_4h = (uVar1 & 0xff) == 0;\n    return uVar1 & 0xffffff00 | var_4h;\n}\n",
        "token_count": 97
    },
    "01015070": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.01015070(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t var_4h;\n    \n    uVar1 = fcn.01015000(arg_8h, arg_ch);\n    var_4h = (uVar1 & 0xff) == 0;\n    return uVar1 & 0xffffff00 | var_4h;\n}\n",
        "token_count": 96
    },
    "010151d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.010151d0(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_10h;\n    uint in_ECX;\n    uint var_4h;\n    \n    arg_10h = fcn.01015300(arg_ch);\n    fcn.01015290(in_ECX, arg_8h, arg_10h);\n    return;\n}\n",
        "token_count": 83
    },
    "01015290": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01015290(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    \n    arg_ch_00 = fcn.01015300(arg_10h);\n    fcn.01015200(arg_ch, arg_ch_00);\n    return;\n}\n",
        "token_count": 71
    },
    "010152b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.010152b0(uint arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.010152e0(in_ECX, arg_8h);\n    return;\n}\n",
        "token_count": 53
    },
    "010156f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.010156f0(uint arg_8h)\n\n{\n    uint uVar1;\n    uint in_ECX;\n    uint var_8h;\n    uint var_1h;\n    \n    uVar1 = fcn.01018eb0(&var_1h);\n    fcn.01015610(uVar1);\n    fcn.01019eb0(0, 0);\n    uVar1 = fcn.01015300(arg_8h);\n    fcn.01018510(uVar1);\n    return in_ECX;\n}\n",
        "token_count": 138
    },
    "01015b00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint * __cdecl fcn.01015b00(uint arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint *in_ECX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *in_ECX = arg_8h;\n    uVar1 = *in_ECX;\n    iVar3 = fcn.0101c0e0();\n    if (iVar3 != 0) {\n        uVar2 = *in_ECX;\n        piVar4 = fcn.0101c0e0();\n        (**(*piVar4 + 4))(piVar4, uVar2, uVar1);\n    }\n    return in_ECX;\n}\n",
        "token_count": 228
    },
    "01015ee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.01015ee0(int32_t arg_8h)\n\n{\n    char cVar1;\n    uchar uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar5;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x1033338;\n    var_ch = *in_FS_OFFSET;\n    uVar3 = *0x10462d0 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    iVar5 = arg_8h;\n    fcn.01015b00(arg_8h);\n    var_4h = 0;\n    cVar1 = fcn.0101bc80(iVar5, uVar3);\n    if (cVar1 != '\\0') {\n        iVar4 = fcn.0101c2b0();\n        if (iVar4 != 0) {\n            iVar4 = fcn.0101c2b0();\n            if (iVar4 != arg_8h) {\n                fcn.0101c2b0();\n                fcn.0101bb40();\n            }\n        }\n    }\n    uVar2 = fcn.0101bc80(iVar5, uVar3);\n    *(in_ECX + 4) = uVar2;\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 349
    },
    "01016200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.01016200(uint *param_1)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *param_1;\n    iVar3 = fcn.0101c0e0();\n    if (iVar3 != 0) {\n        uVar2 = *param_1;\n        piVar4 = fcn.0101c0e0();\n        (**(*piVar4 + 8))(piVar4, uVar2, param_1, uVar1);\n    }\n    return;\n}\n",
        "token_count": 225
    },
    "010163e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0101641e)\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.010163e0(int32_t arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t in_ECX;\n    uchar *arg_8h_01;\n    uint var_8h;\n    uchar var_2h;\n    uint var_1h;\n    \n    if (in_ECX != arg_8h) {\n        fcn.01018eb0(&var_1h);\n        arg_8h_01 = &var_2h;\n        arg_8h_00 = fcn.01018eb0(arg_8h_01);\n        fcn.01015070(arg_8h_00, arg_8h_01);\n        fcn.0101a720(arg_8h);\n    }\n    return in_ECX;\n}\n",
        "token_count": 209
    },
    "01016890": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.01016890(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.01019c40();\n    return iVar1 + arg_8h;\n}\n",
        "token_count": 59
    },
    "01019530": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.01019530(int32_t param_1, uint param_2, char param_3)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    int32_t *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch_2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint in_stack_ffffff28;\n    uint in_stack_ffffff30;\n    uint32_t uStack164;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    int32_t var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_40h;\n    uint32_t var_14h_2;\n    uint32_t *puStack20;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x10334a0;\n    var_ch_3 = *in_FS_OFFSET;\n    uStack164 = *0x10462d0 ^ &stack0xfffffffc;\n    puStack20 = &uStack164;\n    *in_FS_OFFSET = &var_ch_3;\n    var_14h_2 = uStack164;\n    var_74h = fcn.010192e0();\n    fcn.010191f0(&var_40h);\n    *(param_1 + 8) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = 0;\n    var_4h = 0;\n    if (var_ch_2 == '\\0') {\n        var_78h = *(var_74h + 8);\n    }\n    else {\n        var_78h = 0x103c49c;\n    }\n    fcn.010191f0(&var_6ch);\n    uVar2 = fcn.01015160(var_78h);\n    *(param_1 + 8) = uVar2;\n    uVar2 = fcn.010192d0();\n    uVar2 = fcn.01015160(uVar2);\n    *(param_1 + 0x10) = uVar2;\n    uVar2 = fcn.010192f0();\n    uVar2 = fcn.01015160(uVar2);\n    *(param_1 + 0x14) = uVar2;\n    var_4h = 0xffffffff;\n    if (var_ch_2 == '\\0') {\n        puVar4 = &var_40h;\n        puVar5 = &stack0xffffff28;\n        for (iVar3 = 0xb; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar5 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.010150f0(0, var_74h, in_stack_ffffff28);\n    }\n    else {\n        uVar1 = fcn.01015150(0x2e);\n        *(param_1 + 0xc) = uVar1;\n        uVar1 = fcn.01015150(0x2c);\n        *(param_1 + 0xd) = uVar1;\n    }\n    *in_FS_OFFSET = var_ch_3;\n    fcn.0101f553(in_stack_ffffff30);\n    return;\n}\n",
        "token_count": 826
    },
    "01019fb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.01019fb0(int32_t param_1)\n\n{\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0101f344(*(param_1 + 8));\n    fcn.0101f344(*(param_1 + 0x10));\n    fcn.0101f344(*(param_1 + 0x14));\n    return;\n}\n",
        "token_count": 102
    },
    "0101ab70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101ab70(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    fcn.0101ddf5(arg_8h);\n    return;\n}\n",
        "token_count": 43
    },
    "0101be10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0101be10(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.0101be40(param_1);\n    return;\n}\n",
        "token_count": 41
    },
    "0101c120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0101c120(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint in_ECX;\n    uint var_8h;\n    uint var_1h;\n    \n    arg_8h_00 = fcn.0101c170(&var_1h, in_ECX);\n    fcn.01015660(arg_8h_00);\n    return arg_8h;\n}\n",
        "token_count": 111
    },
    "01029869": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.01029869(void)\n\n{\n    code **ppcVar1;\n    \n    for (ppcVar1 = 0x1043a24; ppcVar1 < 0x1043a24; ppcVar1 = ppcVar1 + 1) {\n        if (*ppcVar1 != NULL) {\n            (**ppcVar1)();\n        }\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "0102b547": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.0102b547(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    float10 in_ST0;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    \n    fcn.010304a2();\n    return in_ST0;\n}\n",
        "token_count": 89
    },
    "010306c7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.010306c7(uint arg_8h)\n\n{\n    fcn.01032bf1(arg_8h, 0, 10);\n    return;\n}\n",
        "token_count": 41
    },
    "0101f97b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0101f97b(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.01020b8f(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 113
    },
    "0101c45d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0101c45d(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *param_1;\n    if (iVar1 == 0) {\n        fcn.0101fee8(0xc);\n        return;\n    }\n    if (iVar1 < 4) {\n        fcn.0101dc28(iVar1 * 0x18 + 0x10e6d58);\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "01016190": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.01016190(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.0101cb11(param_1);\n    fcn.01016070();\n    fcn.01016070();\n    fcn.01016070();\n    fcn.01016070();\n    fcn.01016070();\n    fcn.01016070();\n    fcn.0101c45d();\n    return;\n}\n",
        "token_count": 98
    },
    "01022800": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01022800(uint dwMilliseconds)\n\n{\n    (*_sym.imp.KERNEL32.dll_Sleep)(dwMilliseconds);\n    return;\n}\n",
        "token_count": 34
    },
    "010329f1": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.010329f1(void)\n\n{\n    *0x1047388 = (*_sym.imp.KERNEL32.dll_CreateFileW)(L\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 63
    },
    "01012c10": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.01012c10(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iStack12;\n    int32_t var_4h;\n    \n    var_4h = 0x131b;\n    for (*0x1048dfc = 1; *0x1048dfc < 0x2b; *0x1048dfc = *0x1048dfc + 1) {\n        if (*0x1046098 != *0x1046024) {\n            var_4h = var_4h - *(*0x1048dfc * 4 + 0x1046010);\n            *0x1046098 = param_1 + 0xc7a4 + *0x1046098;\n            if (param_1 == *0x104602c) break;\n        }\n    }\n    if (*0x1046044 == 3) {\n        param_1 = var_4h + param_1 + *0x1046094;\n    }\n    else {\n        *0x1046094 = (var_4h + -2) - param_1;\n    }\n    uVar1 = *0x1046094;\n    for (*0x1048dfc = 1; *0x1048dfc < 0x2b; *0x1048dfc = *0x1048dfc + 1) {\n        if (*0x1046094 != *0x1046024) {\n            var_4h = var_4h - *(*0x1048dfc * 4 + 0x1046010);\n            *0x1046094 = param_1 + -0x5c + *0x1046094;\n            if (param_1 == *0x104602c) break;\n        }\n    }\n    *0x1046098 = iStack12 * 2 + uVar1 + 0xc79f;\n    for (*0x1048dfc = 0x30; 0 < *0x1048dfc; *0x1048dfc = *0x1048dfc + -2) {\n        if (var_4h != *0x1046018) {\n            *0x1046098 = var_4h + *0x1046098 + param_1;\n            *(*0x1048dfc * 4 + 0x1046010) = *(*0x1048dfc * 4 + 0x1046010) - param_1;\n            *0x1046098 = param_1 + 0xc7a4 + *0x1046098;\n        }\n    }\n    *0x1046098 = *0x1046094 + *0x1046098 + var_4h;\n    if (*0x1046058 == 0x18b5) {\n        *0x1046094 = *0x1046094 - *0x1046020;\n    }\n    *0x1046008 = (*0x1046098 + -2) - iStack12;\n    *0x104600c = 0;\n    return iStack12;\n}\n",
        "token_count": 702
    },
    "0102845c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0102845c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.01024bc0(0x10447a8, 0xc);\n    fcn.0101fd7e(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x10e7b10;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x10e7b0c;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x010284a1;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.0101df3a(arg_8h_00);\ncode_r0x010284a1:\n        fcn.0101df3a(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.010284c4();\n    fcn.01024c05();\n    return;\n}\n",
        "token_count": 406
    },
    "010224c6": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.010224c6(uint arg_8h)\n\n{\n    if ((*0x10e7e88 ^ *0x10462d0) != NULL) {\n        (*(*0x10e7e88 ^ *0x10462d0))();\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_TlsGetValue)(arg_8h);\n    return;\n}\n",
        "token_count": 88
    }
}