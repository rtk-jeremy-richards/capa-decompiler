{
    "00401000": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004010fe)\n// WARNING: Removing unreachable block (ram,0x004010d5)\n// WARNING: Removing unreachable block (ram,0x00401219)\n// WARNING: Removing unreachable block (ram,0x004011d4)\n// WARNING: Removing unreachable block (ram,0x00401120)\n\nuint32_t __cdecl fcn.00401000(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint lpCodePageEnumProc;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uchar *var_4h;\n    \n    // [00] -r-x section size 135168 named .text\n    uVar3 = arg_8h & 0xffff;\n    uVar4 = uVar3;\n    if (((uVar3 != 0xffff) && (uVar1 = arg_8h * 2,  uVar1 != 0xffffffff)) && (uVar4 = uVar1,  uVar1 != 0xffffffff)) {\n        var_4h = (uVar1 ^ uVar3) + 0x8f77bacb ^ 0x8f35fdbb;\n        uVar4 = uVar3;\n        if ((arg_ch | 0xd0000000) == 0xd0000015) {\n            var_10h = *(uVar3 * -0x2fffffeb + 0x5e35d8f2 ^ 0x5e7648e2);\n            uVar4 = arg_ch - 0x63fd & 0xffff;\n            for (var_14h = 1; var_14h != 0; var_14h = var_14h - ((uVar2 + arg_ch) * uVar2 + 0x31505245)) {\n                if (arg_ch * 0xbc < 0xf6c) {\n                    return 0xe5fc;\n                }\n                if (arg_ch * 0xbc != 0xf6c) {\n                    return 0xbc;\n                }\n                *(var_10h + ((arg_ch & 0xffff) - 0x15)) = *var_4h;\n                uVar2 = (arg_8h & 0xcf00) + 0xe5fc;\n                var_10h = var_10h + ((uVar2 ^ 0xbc) - 0xe53f);\n                var_4h = var_4h + 1;\n            }\n            if (-1 < arg_8h * (arg_8h ^ 0xc0ab5c3)) {\n                *((uVar4 ^ uVar3 << 8) + 0x5e353cda ^ 0x5e7648e2) = var_10h;\n                uVar4 = 0;\n            }\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 730
    },
    "0040147e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040174b)\n// WARNING: Removing unreachable block (ram,0x0040151e)\n// WARNING: Removing unreachable block (ram,0x0040155a)\n// WARNING: Removing unreachable block (ram,0x004014b3)\n// WARNING: Removing unreachable block (ram,0x004014f7)\n\nuint32_t __cdecl fcn.0040147e(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint16_t uVar4;\n    uint16_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint32_t *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar8 = (arg_ch & 0xffff) + 0x40740527 & 0xff;\n    if (((arg_ch & 0xffff) == 0) && (uVar4 = arg_ch - uVar8,  -0x28 < uVar4)) {\n        var_10h = *((uVar8 - 0x27) * 4 + 0x43900c);\n        uVar7 = arg_ch & 0xffff;\n        uVar8 = -uVar7 & 0xff;\n        for (var_14h = *(((uVar7 - uVar4) + 0x39f687e7 ^ 0x39b6181a) + (uVar7 + uVar4 + -0xffd9) * 4);\n            var_14h != uVar4 - 0xffd9; var_14h = var_14h - (-0xf77c - ((uVar1 - 0xf77d) + arg_ch))) {\n            if (arg_8h == 0xffffffff) {\n                return arg_8h;\n            }\n            uVar1 = arg_8h >> 1;\n            uVar6 = uVar1;\n            if (arg_8h < 0) {\n                return arg_8h;\n            }\n            uVar2 = arg_8h >> 1;\n            if (arg_8h == 0xffff) {\n                return uVar6;\n            }\n            uVar5 = (arg_8h & uVar2) + 0xd0bd;\n            uVar3 = uVar5 ^ uVar1;\n            if (uVar5 < -0x2f43) {\n                return uVar6;\n            }\n            *var_10h = var_10h[uVar6 * uVar5] ^ uVar2 * uVar5 + 0x708b69;\n            if (uVar2 == 0xffff) {\n                return 0xffff;\n            }\n            var_10h[1] = var_10h[(uVar3 & uVar2) + 1] ^ uVar6 + uVar3 + 0x96a903cb;\n            if (uVar1 == 0xffff) {\n                return 0xffff;\n            }\n            var_10h = var_10h + uVar1 * uVar3 + 8;\n            if (uVar1 != 0) {\n                return arg_8h;\n            }\n        }\n        if (uVar7 == 0) {\n            uVar8 = uVar4 >> 2;\n            if (-0x28 < uVar4) {\n                (**(uVar7 + 0xe84f0a67 ^ 0xe80c9a6b))();\n                uVar8 = 0;\n            }\n        }\n    }\n    return uVar8;\n}\n",
        "token_count": 874
    },
    "00402694": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402694(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    if (arg_8h != 0xffffffff) {\n        uVar1 = arg_8h % 0x14;\n        uVar3 = arg_8h * (arg_ch ^ uVar1) & 0xff;\n        if (uVar3 != 0xff) {\n            uVar2 = uVar3 << 8;\n            if (arg_8h % 0x14 == '\\0') {\n                fcn.0040274b(arg_8h, uVar1, uVar2);\n            }\n            arg_8h = uVar3;\n            if ((uVar2 < 1) && (arg_8h = uVar2,  uVar2 == 0)) {\n                arg_8h = 0;\n            }\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 237
    },
    "0040291c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402955)\n// WARNING: Removing unreachable block (ram,0x004029a6)\n// WARNING: Removing unreachable block (ram,0x00402940)\n// WARNING: Removing unreachable block (ram,0x00402b65)\n// WARNING: Removing unreachable block (ram,0x00402ad5)\n// WARNING: Removing unreachable block (ram,0x00402a78)\n// WARNING: Removing unreachable block (ram,0x00402a36)\n// WARNING: Removing unreachable block (ram,0x00402a1e)\n// WARNING: Removing unreachable block (ram,0x00402a55)\n// WARNING: Removing unreachable block (ram,0x00402aa7)\n// WARNING: Removing unreachable block (ram,0x004029e2)\n// WARNING: Removing unreachable block (ram,0x00402b03)\n\nuint16_t __cdecl fcn.0040291c(uint arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint lpSystemPowerStatus;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uchar *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = 0x403f1e;\n    var_10h = *0x43900c;\n    for (var_18h = 0x1dd2a; var_18h != 0; var_18h = var_18h - (arg_ch - 0x94)) {\n        *var_10h = *(iVar1 + ((arg_ch ^ 0x2cc5) - 0x2c50));\n        var_10h = var_10h + (arg_ch - 0x94);\n        iVar1 = iVar1 + ((arg_ch ^ 0x2cc5) - 0x2c4f);\n    }\n    *0x439010 = var_10h;\n    return arg_ch * 0xa2 ^ 0x7100;\n}\n",
        "token_count": 501
    },
    "00402cc8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00402cc8(uint32_t arg_8h, uint noname_1, uint noname_2, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_4h;\n    \n    arg_14h = arg_8h * arg_8h - arg_14h;\n    uVar2 = arg_14h - (arg_8h | 0x7a) & 0xffff;\n    if (arg_14h == 0) {\n        fcn.004037fe(arg_8h);\n    }\n    iVar1 = uVar2 * 2;\n    if (arg_8h != 0xffffffff) {\n        uVar2 = arg_8h & 0xff;\n    }\n    return CONCAT44(iVar1 + 0x21000000, uVar2);\n}\n",
        "token_count": 197
    },
    "00403b63": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403be7)\n// WARNING: Removing unreachable block (ram,0x00403d6c)\n// WARNING: Removing unreachable block (ram,0x00403c19)\n// WARNING: Removing unreachable block (ram,0x00403d44)\n// WARNING: Removing unreachable block (ram,0x00403b85)\n// WARNING: Removing unreachable block (ram,0x00403cb0)\n// WARNING: Removing unreachable block (ram,0x00403ce3)\n// WARNING: Removing unreachable block (ram,0x00403c50)\n// WARNING: Removing unreachable block (ram,0x00403d83)\n\nuint fcn.00403b63(void)\n\n{\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    code *var_ch;\n    uint var_8h;\n    code *var_4h;\n    \n    var_4h = resource.2;\n    var_ch = *0x439010;\n    for (var_10h = 0x191c; var_10h != 0; var_10h = var_10h + -1) {\n        *var_ch = *var_4h;\n        var_ch = var_ch + 1;\n        var_4h = var_4h + 1;\n    }\n    *0x439010 = var_ch;\n    return 0;\n}\n",
        "token_count": 339
    },
    "004013d5": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401449)\n// WARNING: Removing unreachable block (ram,0x004013fd)\n\nulong __cdecl fcn.004013d5(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    uVar1 = fcn.00403a4e(0, 0, 0);\n    uVar1 = uVar1 & 0xff;\n    uVar2 = uVar1 ^ arg_8h;\n    uVar3 = uVar2 & 0xff;\n    if (uVar1 < 0xdf) {\n        uVar1 = (arg_8h | 0x4ff6) & 0xff;\n        uVar2 = uVar1;\n        if (0xfd < uVar1) {\n            uVar1 = 0;\n            uVar2 = uVar3 | arg_8h | 0x3b44c343;\n        }\n    }\n    return CONCAT44(uVar2, uVar1);\n}\n",
        "token_count": 247
    },
    "0040178f": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401891)\n// WARNING: Removing unreachable block (ram,0x004018cb)\n// WARNING: Removing unreachable block (ram,0x004018b1)\n\nuint32_t __cdecl fcn.0040178f(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    uint16_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint8_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    uint32_t uVar13;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    uint nNumberOfBytesToWrite;\n    uint lpOverlapped;\n    uint hFile;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uchar *var_10h;\n    uchar *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar13 = arg_8h - arg_ch & 0xff;\n    uVar7 = arg_10h * arg_ch;\n    uVar4 = uVar13;\n    if (-0x430001 < arg_ch) {\n        var_ch = *(((uVar13 ^ arg_ch) + 0xe89209aa ^ 0xe80c9a6b) + ((arg_ch | uVar13) + 0x42ff43) * 4);\n        if (uVar7 < -0x77000000) {\n            uVar4 = uVar7 / arg_ch & 0xffff;\n        }\n        else {\n            var_10h = var_ch + -((arg_ch | uVar7) + 0x430000);\n            iVar2 = arg_10h;\n            uVar1 = iVar2 * uVar13;\n            var_14h = 0x1f648;\n            while (var_14h != (arg_ch & uVar7) + 0x77000000) {\n                if (var_14h < 8) {\n                    uVar11 = (arg_ch | 0xb1) * 0xb1;\n                    uVar10 = uVar11 ^ 0xe7;\n                    if (-0x2e52859f < uVar11) {\n                        return 0;\n                    }\n                    *var_10h = *var_ch;\n                    uVar5 = -arg_10h;\n                    if (-0x7a < uVar10) {\n                        return uVar11;\n                    }\n                    var_10h = var_10h + (uVar5 - uVar10) + 0x87;\n                    uVar10 = uVar11 + arg_8h;\n                    if ('\\0' < arg_10h) {\n                        return uVar10;\n                    }\n                    var_ch = var_ch + uVar5 + uVar11 + 0x2e5285a0;\n                    var_14h = var_14h - ((arg_ch * '`' * uVar10 | uVar5) + 1);\n                }\n                else {\n                    uVar11 = arg_ch & arg_8h;\n                    if (iVar2 < -0x4300) {\n                        return arg_10h & 0xffff;\n                    }\n                    uVar8 = uVar11 - (arg_10h & 0xb789);\n                    if (iVar2 < -0x4300) {\n                        (*_sym.imp.MSVCRT.dll__inpw)(uVar8 + 0x2e000000, arg_10h & 0xffff, uVar8 | 0x5e | uVar8, uVar8);\n                        return uVar8;\n                    }\n                    uVar10 = var_ch[uVar11 * uVar8];\n                    uVar8 = (arg_10h & 0xffff) - 0xc35400;\n                    if (iVar2 == -0x4301) {\n                        (*_sym.imp.KERNEL32.dll_WriteFileEx)\n                                  (arg_10h & 0xffff | 0xbfc40000, uVar8 & 0x23000000, uVar8, uVar8 + uVar11, \n                                   (arg_10h & 0xffff | 0x2800) * uVar8);\n                    }\n                    uVar3 = (arg_10h & 0xffff | uVar11) ^ uVar8;\n                    if (0 < uVar11) {\n                        return uVar11;\n                    }\n                    uVar5 = uVar3 * '\\x02' + 0x4a;\n                    uVar6 = iVar2 + 1;\n                    if (uVar5 != 0x4a) {\n                        return uVar5;\n                    }\n                    iVar9 = uVar10 * 0x1000000 + var_ch[(uVar11 ^ uVar8) + 0xc29700] * 0x10000 +\n                            (uVar11 - uVar3) + -0xc22c00 + var_ch[(uVar11 ^ uVar5) - 0x4a] * 0x100 +\n                            var_ch[uVar11 + uVar6 + -0xbd01];\n                    iVar12 = ((arg_ch + 0x13b95800) - uVar6) + -0x13759aff;\n                    if (arg_10h < 0xbd00) {\n                        return arg_ch + 0x13b95800;\n                    }\n                    var_40h = arg_10h + uVar6 + -0x17a01;\n                    if (*(var_ch + ((arg_ch + 0x430000) * 4 - iVar12)) == iVar9) {\n                        uVar11 = arg_ch * (arg_10h ^ 0x665beaeb);\n                        if (uVar11 < -0x2810000) {\n                            return uVar11;\n                        }\n                        if (uVar11 < -0x2810000) {\n                            return arg_8h & 0xffff;\n                        }\n                        if (*(var_ch + (((arg_8h & 0xffff | uVar11 + 1) + 0x2800044) * 4 - iVar12)) == iVar9) {\n                            if (arg_ch == 0xffbcffff) {\n                                return 0xffbcffff;\n                            }\n                            if (arg_ch == 0xffbcffff) {\n                                return 0;\n                            }\n                            var_40h = -0x42ffff - arg_ch;\n                        }\n                        if ((arg_8h & 0xffff & uVar11 + 1 & 0x538900) != 0) {\n                            return arg_8h & 0xffff;\n                        }\n                    }\n                    if (-0x42ff < uVar6) {\n                        return uVar6;\n                    }\n                    if (var_40h == 0) {\n                        uVar11 = arg_ch | 0xf1;\n                        uVar10 = uVar11 + (arg_8h ^ 0x6b);\n                        if (uVar11 == 0xffbd00f0) {\n                            return 0xffbd00f0;\n                        }\n                        if (uVar11 < -0x42ff0f) {\n                            return uVar10;\n                        }\n                        *var_10h = var_ch[(uVar11 | uVar10) + 0x42ff09];\n                        if (uVar10 != 199) {\n                            return uVar11;\n                        }\n                        var_10h = var_10h + 1;\n                        var_ch = var_ch + (0x1ff7a01f - (uVar11 >> 3));\n                        var_14h = var_14h + -1;\n                    }\n                    else {\n                        uVar11 = arg_8h | arg_10h;\n                        iVar9 = uVar11 + (uVar11 | arg_8h);\n                        var_14h = var_14h - ((uVar11 - iVar9) + 0xffc5);\n                        if (0x1ff7a < iVar9) {\n                            return uVar11 + 1;\n                        }\n                        var_ch = var_ch + (iVar9 - (uVar11 + 1)) + -0xffb4;\n                    }\n                }\n            }\n            if ((uVar1 != 0x88ff) && (uVar4 = arg_ch,  arg_ch < -0x42ffff)) {\n                iVar9 = *(arg_ch + 0xe8920a67 ^ 0xe80c9a6b);\n                if (arg_ch < -0x430000) {\n                    (*_sym.imp.KERNEL32.dll_SetEndOfFile)((uVar1 & 0x3da9) - (arg_ch ^ 0x8044));\n                }\n                *(uVar1 * uVar13 + 0x3990630e ^ 0x39b6181a) = var_10h - iVar9 >> 3;\n            }\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 2156
    },
    "00401eca": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401eca(uint32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((arg_10h | arg_8h) & 0xff) == 0x16) {\n        if (arg_ch < 1) {\n            arg_ch = 0;\n            iVar1 = fcn.00401000(arg_8h - 0x15 >> 2, 0x15);\n            if (iVar1 == 0) {\n                fcn.00402212();\n            }\n        }\n    }\n    else {\n        arg_ch = -0x2d831a77;\n    }\n    return arg_ch;\n}\n",
        "token_count": 187
    },
    "00401fb1": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402014)\n// WARNING: Removing unreachable block (ram,0x0040204d)\n// WARNING: Removing unreachable block (ram,0x00401fdc)\n// WARNING: Removing unreachable block (ram,0x00402025)\n// WARNING: Removing unreachable block (ram,0x00401fc9)\n// WARNING: Removing unreachable block (ram,0x00402111)\n// WARNING: Removing unreachable block (ram,0x004020ef)\n// WARNING: Removing unreachable block (ram,0x004021d9)\n// WARNING: Removing unreachable block (ram,0x00402169)\n// WARNING: Removing unreachable block (ram,0x004021b4)\n// WARNING: Removing unreachable block (ram,0x00402098)\n// WARNING: Removing unreachable block (ram,0x0040217b)\n\nushort fcn.00401fb1(void)\n\n{\n    uchar *puVar1;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint lpSystemPowerStatus;\n    int32_t var_10h;\n    uchar *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = 0x4220d0;\n    var_ch = *0x439010;\n    for (var_10h = 1; var_10h != 0; var_10h = var_10h + -1) {\n        *var_ch = *puVar1;\n        var_ch = var_ch + 1;\n        puVar1 = puVar1 + 1;\n    }\n    *0x439010 = var_ch;\n    return 0;\n}\n",
        "token_count": 375
    },
    "00402212": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040226e)\n// WARNING: Removing unreachable block (ram,0x0040229f)\n// WARNING: Removing unreachable block (ram,0x0040227e)\n// WARNING: Removing unreachable block (ram,0x0040228c)\n// WARNING: Removing unreachable block (ram,0x0040223b)\n\nuint fcn.00402212(void)\n\n{\n    uint var_4h;\n    \n    fcn.004022b1(0, 0);\n    return 0;\n}\n",
        "token_count": 119
    },
    "004022b1": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402394)\n// WARNING: Removing unreachable block (ram,0x004023c8)\n// WARNING: Removing unreachable block (ram,0x00402331)\n\nuint32_t __cdecl fcn.004022b1(uint arg_8h, uint32_t arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar3 = arg_ch & 0xffff;\n    if ((arg_ch & 0xff) == 0) {\n        uVar2 = uVar3 * 0x8600 >> 2;\n        cVar1 = uVar2;\n        if (cVar1 < '\\0') {\n            (*_sym.imp.KERNEL32.dll_GetComputerNameExW)(uVar2 & 0xff, 0, 0);\n        }\n        uVar3 = 0;\n        if (cVar1 == -1) {\n            uVar3 = uVar2 & 0xff;\n        }\n        else if ((cVar1 == '\\0') && (uVar3 = fcn.004023df(0),  arg_8h == 0)) {\n            uVar3 = arg_ch & 0xffff;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 298
    },
    "0040274b": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402768)\n// WARNING: Removing unreachable block (ram,0x0040277c)\n// WARNING: Removing unreachable block (ram,0x004027d8)\n// WARNING: Removing unreachable block (ram,0x004027c2)\n\nulong fcn.0040274b(void)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0040126a(0, 0);\n    return 0;\n}\n",
        "token_count": 110
    },
    "00402b97": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402c17)\n// WARNING: Removing unreachable block (ram,0x00402bdc)\n// WARNING: Removing unreachable block (ram,0x00402bc8)\n// WARNING: Removing unreachable block (ram,0x00402c03)\n// WARNING: Removing unreachable block (ram,0x00402c31)\n// WARNING: Removing unreachable block (ram,0x00402bb1)\n// WARNING: Removing unreachable block (ram,0x00402c65)\n// WARNING: Could not reconcile some variable overlaps\n\nuint8_t __cdecl fcn.00402b97(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h._0_1_ = arg_ch;\n    if (arg_ch == 0x5c) {\n        var_8h._0_1_ = fcn.0040147e(0, 0);\n    }\n    if ((arg_ch | 0x4f) == 0x5f) {\n        var_8h._0_1_ = arg_8h & 0x23;\n    }\n    return var_8h;\n}\n",
        "token_count": 276
    },
    "00402e71": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403256)\n// WARNING: Removing unreachable block (ram,0x0040346b)\n// WARNING: Removing unreachable block (ram,0x004034a9)\n// WARNING: Removing unreachable block (ram,0x004035d9)\n// WARNING: Removing unreachable block (ram,0x00403705)\n// WARNING: Removing unreachable block (ram,0x00403212)\n// WARNING: Removing unreachable block (ram,0x004036c8)\n// WARNING: Removing unreachable block (ram,0x00403560)\n// WARNING: Removing unreachable block (ram,0x0040348f)\n// WARNING: Removing unreachable block (ram,0x0040343f)\n// WARNING: Removing unreachable block (ram,0x004031a6)\n// WARNING: Removing unreachable block (ram,0x004031e9)\n// WARNING: Removing unreachable block (ram,0x00403018)\n// WARNING: Removing unreachable block (ram,0x00403483)\n// WARNING: Removing unreachable block (ram,0x0040341d)\n// WARNING: Removing unreachable block (ram,0x0040360c)\n// WARNING: Removing unreachable block (ram,0x0040350b)\n\nuint32_t __cdecl fcn.00402e71(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint16_t uVar4;\n    uint16_t uVar5;\n    int16_t iVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint16_t uVar9;\n    uint8_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint hHeap;\n    uint var_58h;\n    uint lpNamedPipeName;\n    uint hThread;\n    uint32_t var_4ch;\n    char *var_48h;\n    uint lpExitTime;\n    uint lpCreationTime;\n    uint lpKernelTime;\n    int32_t *var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int16_t *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint lpString;\n    \n    uVar12 = arg_ch * 0xdf & 0xffff;\n    uVar11 = arg_ch * 0xdf & 0xff;\n    if (-1 < arg_14h) {\n        uVar7 = (*_sym.imp.KERNEL32.dll_DeleteAtom)(arg_14h | uVar11);\n        uVar7 = uVar7 & 0xffff;\n        if (uVar7 != 0) {\n            (*_sym.imp.KERNEL32.dll_GetVolumePathNameW)(uVar11, uVar7, uVar7 + (uVar7 ^ 0x5565));\n        }\n        uVar4 = arg_ch * arg_14h;\n        if (uVar4 != 0) {\n            (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableA)(uVar12 + (uVar11 | 0x6ae7), uVar4 ^ uVar11 | 0xd9);\n        }\n        uVar12 = uVar12 >> 3;\n        if (-1 < uVar11) {\n            uVar7 = (*_sym.imp.KERNEL32.dll_AddAtomA)(uVar4 - uVar11);\n            uVar7 = uVar7 & 0xffff;\n            if (uVar7 != 0) {\n                (*_sym.imp.MSVCRT.dll__dup)((uVar12 - uVar4) + -0x3f, uVar12);\n            }\n            uVar1 = *(((uVar12 & uVar11) + 0x87730905 ^ 0x87312909) + uVar4 * -4);\n            uVar5 = arg_10h ^ 0x56ed;\n            if (uVar5 < 0x56ee) {\n                uVar12 = uVar11;\n                if (uVar5 != 0x56ec) {\n                    uVar9 = arg_14h - uVar11;\n                    for (var_20h = ((uVar1 + ((uVar4 ^ uVar5) - 0x56ed)) - (uVar1 & 0xffff)) + uVar4; *var_20h != 0x5a4d\n                        ; var_20h = var_20h - ((arg_10h & cVar3 * cVar3 - cVar3) + 0x10000)) {\n                        cVar3 = arg_10h;\n                    }\n                    iVar2 = *(var_20h +\n                             (uVar7 * uVar7 + 0x1e) * 4 +\n                             ((*(var_20h + ((uVar4 & 0xe61900) + 0xf) * 4 + (uVar5 - 0x56ed)) + (uVar5 - 0x56ed)) -\n                             uVar7));\n                    if (uVar4 == 0) {\n                        var_10h = *(var_20h + (uVar11 + 6) * 4 + iVar2) - (uVar7 ^ uVar11);\n                        var_38h = var_20h + (*(var_20h + iVar2 + 0x20) - uVar11);\n                        if (arg_8h * -0x6b00 == -1) {\n                            uVar12 = uVar9;\n                        }\n                        else {\n                            for (; var_10h != 0; var_10h = var_10h - 1) {\n                                var_4ch = 0;\n                                for (var_48h = *var_38h + var_20h; uVar10 = arg_ch,  *var_48h != '\\0';\n                                    var_48h = var_48h + 1) {\n                                    uVar5 = arg_8h * 2 + 0x42d4;\n                                    if (uVar5 == 0x42d3) {\n                                        return arg_8h;\n                                    }\n                                    uVar10 = (uVar10 | 0x23) + arg_14h;\n                                    if (uVar5 < 0x42d4) {\n                                        return uVar5;\n                                    }\n                                    iVar6 = (*_sym.imp.KERNEL32.dll_CallNamedPipeA)\n                                                      (arg_8h + uVar10 + -0x23, 0, uVar10 * uVar5 + -0x922fc, \n                                                       uVar10 & uVar5, arg_8h + uVar10 + -0x23, uVar5 + uVar10 + -0x42f7\n                                                       , uVar5 & uVar10);\n                                    if (iVar6 != 0) {\n                                        (*_sym.imp.KERNEL32.dll_HeapDestroy)((uVar10 | 0x6ec40000) ^ uVar10);\n                                    }\n                                    if ('#' < uVar10) {\n                                        return arg_8h;\n                                    }\n                                    if (-0x2e5f < uVar10 + 0xd17e) {\n                                        return arg_8h;\n                                    }\n                                    if (arg_8h >> 1 != 0) {\n                                        return arg_8h;\n                                    }\n                                    var_4ch = (var_4ch << 7 | var_4ch >> 0x19) +\n                                              (var_48h[(uVar10 | iVar6 + 0xdd00) - 0xdd23] ^ 0x2a);\n                                    if (uVar10 != 0x23) {\n                                        return uVar10;\n                                    }\n                                }\n                                if (var_4ch == 0x17a061ec - (uVar4 & 0x1900)) {\n                                    var_10h = *(var_20h +\n                                               (*(var_20h + iVar2 + 0x18) - var_10h) * 2 + *(var_20h + iVar2 + 0x24));\n                                    var_38h = var_20h + *(var_20h + iVar2 + 0x1c);\n                                    if (uVar10 < '\\0') {\n                                        return arg_ch & 0xff;\n                                    }\n                                    iVar8 = (*(var_20h + var_38h[var_10h - (arg_ch & 0xff)]))\n                                                      (0, (arg_ch & 0xff) * 0x6032 + 0x1f648, \n                                                       (arg_ch & 0xff | 0x6032) - 0x5032, 0x40);\n                                    if (uVar10 == 0xff) {\n                                        return 0x6032;\n                                    }\n                                    *((arg_ch & 0xff) + 0xe84f0a67 ^ 0xe80c9a6b) =\n                                         iVar8 + ((arg_ch & 0xff | 0x6032) - 0x6032);\n                                }\n                                var_38h = var_38h + 1;\n                            }\n                            uVar12 = uVar9;\n                        }\n                    }\n                    else {\n                        uVar12 = 0xe61900;\n                    }\n                }\n            }\n            else {\n                uVar12 = 0;\n            }\n        }\n    }\n    return uVar12;\n}\n",
        "token_count": 2166
    },
    "004037fe": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403855)\n// WARNING: Removing unreachable block (ram,0x0040384a)\n// WARNING: Removing unreachable block (ram,0x00403865)\n// WARNING: Removing unreachable block (ram,0x0040388b)\n// WARNING: Removing unreachable block (ram,0x0040381c)\n\nuint __cdecl fcn.004037fe(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    fcn.004013d5(0x5c);\n    fcn.004027eb(0x5c00, 0x5c);\n    return 0;\n}\n",
        "token_count": 143
    },
    "null": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040393b)\n// WARNING: Removing unreachable block (ram,0x00403a29)\n// WARNING: Removing unreachable block (ram,0x004038e4)\n// WARNING: Removing unreachable block (ram,0x0040390a)\n// WARNING: Removing unreachable block (ram,0x00403954)\n// WARNING: Removing unreachable block (ram,0x00403a0b)\n\nint16_t main(void)\n\n{\n    int16_t iVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint lpdwGranularity;\n    \n    iVar1 = fcn.00402e71(0, 0, 0, 0);\n    if (iVar1 == 0) {\n        fcn.004024bc(0xa1c4086e, 0xa1c4086e, 0xa1c4087f, 0xa1c4087f);\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 230
    },
    "00403a4e": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403a69)\n// WARNING: Removing unreachable block (ram,0x00403b0a)\n// WARNING: Removing unreachable block (ram,0x00403adc)\n// WARNING: Removing unreachable block (ram,0x00403b22)\n// WARNING: Removing unreachable block (ram,0x00403abd)\n\nuint __cdecl fcn.00403a4e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint lOffset;\n    uint iOrigin;\n    uint var_4h;\n    \n    uVar1 = 0xffffffbd;\n    if (arg_8h == 0) {\n        fcn.0040178f(0xffbd, 0xffbd0000, 0xbd00);\n        uVar1 = 0xf8de;\n    }\n    return uVar1;\n}\n",
        "token_count": 199
    },
    "0040126a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401372)\n// WARNING: Removing unreachable block (ram,0x00401359)\n// WARNING: Removing unreachable block (ram,0x0040133e)\n\nuint32_t __cdecl fcn.0040126a(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint32_t arg_8h_00;\n    uint32_t uVar2;\n    uint var_4h;\n    \n    arg_8h_00 = arg_8h - 0xab8b;\n    if ((arg_ch & 0xff) != 0xff) {\n        uVar2 = (arg_ch & 0xff) >> 1;\n        if (arg_8h_00 < -0xab8b) {\n            (*_sym.imp.MSVCRT.dll__ecvt)(arg_8h_00 - uVar2, uVar2 + (uVar2 ^ 0xf0), 0, arg_8h_00);\n        }\n        arg_8h_00 = uVar2 + 0xf3;\n        if (((arg_8h_00 == 0xf3) && (arg_8h_00 = uVar2,  -1 < uVar2)) && (arg_8h_00 = arg_ch & 0x75,  uVar2 == 0)) {\n            if (arg_8h_00 == '\\0') {\n                fcn.0040291c(arg_8h_00, 0x95);\n            }\n            fcn.00402543(0xf3, 0, 0);\n            uVar1 = arg_8h ^ 10;\n            arg_8h_00 = 0;\n            if (('\\t' < uVar1) && (arg_8h_00 = uVar1 ^ arg_ch | arg_ch,  uVar1 < '\\v')) {\n                arg_8h_00 = uVar1;\n            }\n        }\n    }\n    return arg_8h_00;\n}\n",
        "token_count": 453
    },
    "004023df": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004023df(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_8h;\n    uint lpBuffer;\n    \n    arg_8h = arg_8h & 0xffff;\n    uVar3 = arg_8h >> 3;\n    uVar4 = (arg_8h >> 2) + 1;\n    uVar1 = uVar3;\n    if (((-1 < uVar3) && (uVar2 = (arg_8h >> 2) - 0xacdf,  uVar1 = uVar2,  uVar4 == 1)) && (uVar1 = arg_8h,  uVar3 == 0)\n       ) {\n        if (arg_8h == 0) {\n            uVar4 = fcn.00403725(0);\n        }\n        uVar2 = (arg_8h >> 4) / uVar2;\n        uVar1 = uVar4;\n        if (arg_8h == 0) {\n            if (uVar2 != 0) {\n                (*_sym.imp.KERNEL32.dll_WriteFile)(uVar4, 0x8f000000, 0, -uVar2, arg_8h);\n            }\n            if (arg_8h == 0xffff) {\n                uVar1 = uVar3;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 344
    },
    "004024bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004024fc)\n// WARNING: Removing unreachable block (ram,0x004024db)\n\nuint __cdecl fcn.004024bc(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    uint var_4h;\n    \n    fcn.00402694(0, 0);\n    return 0;\n}\n",
        "token_count": 92
    },
    "004027eb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402864)\n// WARNING: Removing unreachable block (ram,0x00402836)\n\nuint32_t __cdecl fcn.004027eb(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t arg_10h;\n    uint var_4h;\n    \n    if (((arg_ch & 0xffff) - 1 & 0xffff) == 0x5a) {\n        (*_sym.imp.KERNEL32.dll_LockFile)(0x5a, 0x9025a, 0x5a, 0x5a, 0);\n    }\n    if (arg_ch < 0x5d) {\n        arg_10h = (arg_ch ^ 0x2e00) & 0xffff;\n        uVar1 = arg_ch;\n        if (0x5b < arg_ch) {\n            if (arg_ch == 0x5c) {\n                uVar1 = fcn.00402b97(arg_8h, arg_10h + 0xe8260000 & 0xffff, arg_10h);\n            }\n            if (arg_10h == 0x2e5c) {\n                uVar2 = (arg_ch & arg_8h) * 0x367;\n                if (arg_8h == 0x5bff) {\n                    uVar1 = 0x5bff;\n                }\n                else {\n                    uVar3 = uVar2 >> 1 & 0xffff;\n                    uVar1 = arg_10h;\n                    if ((-1 < uVar3) && (uVar1 = uVar2 >> 1 & 0xffff,  uVar1 != 0)) {\n                        uVar1 = uVar3;\n                    }\n                }\n            }\n        }\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 441
    },
    "00402d21": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402da7)\n// WARNING: Removing unreachable block (ram,0x00402d3d)\n\nuint32_t __cdecl fcn.00402d21(uint32_t arg_8h, uint32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint32_t arg_10h;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_10h = arg_ch & 0xff;\n    uVar3 = 0;\n    if ((arg_10h != 1) &&\n       (uVar4 = (arg_10h & arg_8h & arg_10h) + 0x3dd68be8 & 0xff,  uVar3 = arg_8h & arg_10h,  uVar4 == 0xea)) {\n        if (arg_10h == 2) {\n            uVar4 = fcn.00401fb1();\n            uVar4 = uVar4 & 0xff;\n        }\n        uVar1 = uVar4 & arg_10h;\n        uVar3 = uVar4;\n        if (-1 < uVar4) {\n            if (arg_10h < 2) {\n                uVar3 = 0;\n            }\n            else {\n                uVar2 = fcn.00401eca(0x16, uVar1, arg_10h);\n                if (uVar1 < 0) {\n                    uVar3 = uVar2 & 0xb7 | 0x56;\n                }\n                else {\n                    uVar3 = arg_10h;\n                    if (arg_ch + 0x9e9 < 0x9ec) {\n                        uVar3 = 0xb7;\n                    }\n                }\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 443
    },
    "00403725": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403769)\n\nuint32_t __cdecl fcn.00403725(uint32_t arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t arg_8h_00;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar3 = arg_8h & 0xff;\n    uVar4 = arg_8h + 0x64000000 & 0xffff;\n    uVar2 = uVar4 + (uVar4 ^ 0x8ae1);\n    if (uVar4 == 0) {\n        if (uVar3 == '\\0') {\n            uVar2 = fcn.00403b63();\n        }\n        cVar1 = arg_8h * -3;\n        uVar4 = uVar2 * (uVar3 & arg_8h) & 0xffff;\n        if (-1 < cVar1) {\n            arg_8h_00 = uVar3 % 0x44;\n            uVar2 = uVar4;\n            if (cVar1 == '\\0') {\n                uVar2 = fcn.00402cc8(arg_8h_00, uVar4, arg_8h_00, uVar4);\n                uVar2 = uVar2 & 0xffff;\n            }\n            if ((uVar2 != -1) && (uVar2 = uVar3,  arg_8h * arg_8h_00 < 0)) {\n                uVar2 = arg_8h_00;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 385
    },
    "00402543": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402543(uint arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t arg_8h_00;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = arg_ch & 0xffff;\n    uVar1 = uVar2 * arg_10h & 0xff | 0x23;\n    if ((arg_ch & 0xff) == 0xff) {\n        (*_sym.imp.KERNEL32.dll_TlsFree)(uVar1);\n    }\n    arg_8h_00 = uVar1 / 0xb;\n    if (uVar2 == 0xffff) {\n        (*_sym.imp.MSVCRT.dll__ungetch)(uVar1);\n    }\n    if (uVar1 == 0x23) {\n        uVar2 = fcn.004025e9(arg_8h_00);\n        uVar2 = uVar2 & 0xffff;\n    }\n    if ((0xf2 < arg_8h) && (bVar3 = uVar2 == 2,  uVar2 = arg_8h_00,  bVar3)) {\n        uVar2 = arg_8h_00 - arg_10h & 0xffff;\n    }\n    return uVar2;\n}\n",
        "token_count": 320
    },
    "004025e9": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004025e9(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint Locale;\n    \n    uVar1 = arg_8h + 1;\n    uVar4 = uVar1 >> 1 & 0xffff;\n    if (uVar4 != 1) {\n        uVar3 = uVar1 >> 1;\n        uVar2 = arg_8h + 1;\n        if (uVar1 == 3) {\n            (*_sym.imp.KERNEL32.dll_SetThreadLocale)((uVar2 & 0x6b6e) + 3);\n        }\n        if (uVar1 == 4) {\n            if (uVar3 == 2) {\n                fcn.00402d21(2, 2, arg_8h, 2);\n            }\n            uVar1 = uVar3;\n            if (uVar4 == 1) {\n                uVar1 = arg_8h / uVar3;\n            }\n        }\n        else {\n            uVar1 = uVar2;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 299
    }
}