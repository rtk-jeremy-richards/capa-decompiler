{
    "0083e0e3": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0083e0e3(uint32_t *param_1, uint *param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uchar auStack2844 [1024];\n    uchar auStack1820 [1024];\n    uchar auStack796 [8];\n    uchar auStack788 [20];\n    uchar auStack768 [4];\n    uchar auStack764 [4];\n    uchar auStack760 [4];\n    uchar auStack756 [4];\n    int32_t iStack752;\n    int32_t iStack748;\n    uint uStack744;\n    uint uStack740;\n    uint32_t *puStack736;\n    int32_t iStack732;\n    uint32_t uStack728;\n    uint32_t uStack724;\n    uint uStack720;\n    uint uStack716;\n    uint uStack712;\n    uint uStack708;\n    uint uStack704;\n    uint uStack700;\n    uint uStack696;\n    uint uStack692;\n    uint uStack688;\n    uint uStack684;\n    uint uStack680;\n    uint uStack676;\n    uint uStack672;\n    uint uStack668;\n    int32_t iStack664;\n    uint uStack660;\n    uint uStack656;\n    uint uStack652;\n    uint uStack648;\n    uint uStack644;\n    uint uStack640;\n    uint uStack636;\n    uint uStack632;\n    uint uStack628;\n    uint uStack624;\n    uint uStack620;\n    uint uStack616;\n    uint uStack612;\n    uint uStack608;\n    uint uStack604;\n    uint uStack600;\n    uint uStack596;\n    uint uStack592;\n    uint uStack588;\n    uint uStack584;\n    uint uStack580;\n    uint uStack576;\n    uint uStack572;\n    uint uStack568;\n    uint uStack564;\n    uint uStack560;\n    uint uStack556;\n    uint uStack552;\n    uint uStack548;\n    uint uStack544;\n    uint uStack540;\n    uint uStack536;\n    uint uStack532;\n    uint uStack528;\n    uint uStack524;\n    uint uStack520;\n    uint uStack516;\n    uint uStack512;\n    uint uStack508;\n    uint uStack504;\n    uint uStack500;\n    uint uStack496;\n    uint uStack492;\n    uint uStack488;\n    uint uStack484;\n    uint uStack480;\n    uint uStack476;\n    uint uStack472;\n    uint uStack468;\n    uint uStack464;\n    uint uStack460;\n    uint uStack456;\n    uint uStack452;\n    uint uStack448;\n    uint uStack444;\n    uint uStack440;\n    uint uStack436;\n    uint uStack432;\n    uint uStack428;\n    uint uStack424;\n    uint uStack420;\n    uint uStack416;\n    uint uStack412;\n    uint uStack408;\n    uint uStack404;\n    uint uStack400;\n    uint uStack396;\n    uint uStack392;\n    uint uStack388;\n    uint uStack384;\n    uint uStack380;\n    uint uStack376;\n    uint uStack372;\n    uint uStack368;\n    uint uStack364;\n    uint uStack360;\n    uint uStack356;\n    uint uStack352;\n    uint uStack348;\n    uint uStack344;\n    uint uStack340;\n    uint uStack336;\n    uint uStack332;\n    uint uStack328;\n    uint uStack324;\n    uint uStack320;\n    uint uStack316;\n    uint uStack312;\n    uint uStack308;\n    uint uStack304;\n    uint uStack300;\n    uint uStack296;\n    uint uStack292;\n    uint uStack288;\n    uint uStack284;\n    uint uStack280;\n    uint uStack276;\n    uint uStack272;\n    uint uStack268;\n    uint uStack264;\n    uint uStack260;\n    uint uStack256;\n    uint uStack252;\n    uint uStack248;\n    uint uStack244;\n    uint uStack240;\n    uint uStack236;\n    uint uStack232;\n    uint uStack228;\n    uint uStack224;\n    uint uStack220;\n    uint uStack216;\n    uint uStack212;\n    uint uStack208;\n    uint uStack204;\n    uint uStack200;\n    uint uStack196;\n    uint uStack192;\n    uint uStack188;\n    uint uStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    uint uStack168;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    uStack12 = *param_1;\n    uStack728 = param_1[1];\n    puStack736 = param_1;\n    if (*0x2faa3c4 == 0x134) {\n        (**0x40104c)(0);\n    }\n    uStack740 = *param_2;\n    uStack744 = param_2[1];\n    iStack664 = 0;\n    fcn.0083e0d6();\n    iStack752 = param_2[2];\n    iStack664 = iStack664 + 0x54;\n    iStack748 = param_2[3];\n    iStack732 = 0x20;\n    do {\n        uVar2 = fcn.0083e0cb();\n        if (*0x2faa3c4 == 0x4c3) {\n            (**0x401048)(0);\n            (**0x401044)(0x401210);\n            (**0x401040)(0);\n            (**0x40103c)(0x401224, auStack1820, 0);\n            (**0x401038)(0x4012a8, 0x401238);\n            uVar2 = uStack12;\n        }\n        uVar3 = uStack724 + iStack752;\n        if (*0x2faa3c4 == 0xfa9) {\n            *0x2faa3c0 = 0xedeb2e40;\n        }\n        uVar1 = iStack664 + uVar2;\n        *0x2faa3bc = 0x9150ce2e;\n        uStack8 = (uVar2 >> 5) + iStack748;\n        if (*0x2faa3c4 == 0x912) {\n            (**0x401034)(0x4012d8, auStack796);\n            *0x2f8b014 = 0;\n        }\n        uStack468 = 0x23409e45;\n        uStack520 = 0x546684a8;\n        uStack652 = 0x3f378b90;\n        uStack656 = 0x26b873dc;\n        uStack336 = 0x358cf5cb;\n        uStack444 = 0x29983644;\n        uStack108 = 0x7dc6e5f5;\n        uStack208 = 0x3aa9ec81;\n        uStack512 = 0x39fd3d19;\n        uStack648 = 0x348f6274;\n        uStack276 = 0x6e41c7d3;\n        uStack640 = 0x53e187b4;\n        uStack200 = 0xfed61d6;\n        uStack632 = 0x7ada085d;\n        uStack128 = 0x4a1e8d93;\n        uStack328 = 0x456866b3;\n        uStack524 = 0x510c15d;\n        uStack120 = 0xa2eee99;\n        uStack192 = 0x778c3974;\n        uStack504 = 0x5a464473;\n        uStack496 = 0x685fa3d3;\n        uStack416 = 0x6d8c862c;\n        uStack268 = 0x6888eb1;\n        uStack624 = 0x5090d793;\n        uStack508 = 0x4abedd81;\n        uStack484 = 0x76ec4423;\n        uStack156 = 0x15e92005;\n        uStack24 = 0x70241620;\n        uStack616 = 0x131b9522;\n        uStack184 = 0x2942bb1d;\n        uStack236 = 0x2523a75b;\n        uStack264 = 0x11d08d33;\n        uStack256 = 0x4b222137;\n        uStack620 = 0x321ecfe3;\n        uStack608 = 0x575b796;\n        uStack688 = 0x1fffdd6a;\n        uStack112 = 0x75faf039;\n        uStack588 = 0x15899521;\n        uStack692 = 0x1109d039;\n        uStack228 = 0x75fcdb38;\n        uStack100 = 0x713f7202;\n        uStack500 = 0x2a34467c;\n        uStack148 = 0x7ab9969b;\n        uStack320 = 0x6e6f4f62;\n        uStack340 = 0x68a0941f;\n        uStack104 = 0x771b8962;\n        uStack408 = 0x708fef37;\n        uStack20 = 0xae5cf82;\n        uStack220 = 0x5afd073b;\n        uStack188 = 0x7da8d542;\n        uStack556 = 0x63059b8b;\n        uStack52 = 0x4e282ba7;\n        uStack412 = 0x5c4d4cf4;\n        uStack44 = 0x1a6faced;\n        uStack436 = 0x2a7bc4d0;\n        uStack628 = 0x571fe9f2;\n        uStack684 = 0x7fb79e3b;\n        uStack696 = 0x12911132;\n        uStack600 = 0x5e46be7b;\n        uStack176 = 0x3ab28b4;\n        uStack700 = 0x79ed9082;\n        uStack636 = 0x51c3c43d;\n        uStack388 = 0x4ed5ae5f;\n        uStack96 = 0x77ee5c69;\n        uStack580 = 0x699e0318;\n        uStack380 = 0x6a3df6d9;\n        uStack400 = 0x6a68727f;\n        uStack308 = 0x71a88410;\n        uStack460 = 0x72144519;\n        uStack676 = 0x7943706e;\n        uStack140 = 0x166ccf3d;\n        uStack372 = 0x5d7bef27;\n        uStack332 = 0x3fb67f18;\n        uStack592 = 0x687df6e2;\n        uStack392 = 0xb23fdac;\n        uStack260 = 0x3c0ec683;\n        uStack180 = 0x52c79ee7;\n        uStack572 = 0xea67b34;\n        uStack212 = 0x59ee28df;\n        uStack364 = 0x2817525b;\n        uStack488 = 0x41ec49cf;\n        uStack88 = 0x152f532e;\n        uStack92 = 0x6bcf2b09;\n        uStack584 = 0xd0455f;\n        uStack604 = 0x113cca32;\n        uStack84 = 0x2ca09670;\n        uStack712 = 0x1083bd57;\n        uStack168 = 0x8e56de1;\n        uStack428 = 0x357268d5;\n        uStack540 = 0x3f5a247a;\n        uStack36 = 0x7a66e545;\n        uStack720 = 0x24e4c52e;\n        uStack356 = 0x18be6c3e;\n        uStack312 = 0x3db8192e;\n        uStack516 = 0x777708fe;\n        uStack708 = 0x746719ea;\n        uStack300 = 0x70e28784;\n        uStack384 = 0x74b1451c;\n        uStack160 = 0x1fc38e1c;\n        uStack704 = 0x1a454084;\n        uStack252 = 0x6cfab315;\n        uStack304 = 0x5bcca26f;\n        uStack576 = 0xadc7db7;\n        uStack476 = 0x33be3dc9;\n        uStack568 = 0x218471aa;\n        uStack376 = 0x65649589;\n        uStack324 = 0x51dad296;\n        uStack564 = 0x3c96d833;\n        uStack172 = 0x65f5d1c;\n        uStack404 = 0x45644988;\n        uStack368 = 0x69748472;\n        uStack248 = 0x297ecfd3;\n        uStack548 = 0x4f7dbcd7;\n        uStack76 = 0x18561cab;\n        uStack152 = 0x720ef4aa;\n        uStack316 = 0x10ed17e7;\n        uStack492 = 0x3953200b;\n        uStack80 = 0x5142c32a;\n        uStack672 = 0x563d11f2;\n        uStack480 = 0x160fd461;\n        uStack560 = 0x603ca06c;\n        uStack240 = 0x13629ac1;\n        uStack296 = 0x74093f37;\n        uStack716 = 0x679680a8;\n        uStack472 = 0x207d8eeb;\n        uStack28 = 0xa216c63;\n        uStack232 = 0x2f5adecc;\n        uStack360 = 0x44a2df35;\n        uStack552 = 0x4a3c9e05;\n        uStack544 = 0x2ac010e7;\n        uStack72 = 0x67852e;\n        uStack348 = 0x483f468d;\n        uStack68 = 0xea69142;\n        uStack464 = 0x1b85e6;\n        uStack64 = 0x2e8bf091;\n        uStack132 = 0x7accba6a;\n        uStack204 = 0x70b903ac;\n        uStack420 = 0x8dfbb34;\n        uStack164 = 0x41683a2c;\n        uStack644 = 0x1c83fdd3;\n        uStack244 = 0x4ad81701;\n        uStack288 = 0x5d5c7f97;\n        uStack56 = 0x679ac91e;\n        uStack48 = 0x1899f8c7;\n        uStack144 = 0x4b6ad8c;\n        uStack292 = 0x103e9126;\n        uStack60 = 0x72b610fa;\n        uStack456 = 0x348041df;\n        uStack136 = 0x7cee9c15;\n        uStack668 = 0x18528e3a;\n        uStack448 = 0x2d0d3107;\n        uStack224 = 0x7b65c550;\n        uStack536 = 0x75ec9eda;\n        uStack596 = 0x42646a58;\n        uStack452 = 0x3ddf5eff;\n        uStack280 = 0x36dc2ee9;\n        uStack40 = 0x21b2f01a;\n        uStack660 = 0x726bed3c;\n        uStack396 = 0x6718329c;\n        uStack532 = 0x8d77509;\n        uStack124 = 0x56f4f074;\n        uStack680 = 0x6b3a3a26;\n        uStack440 = 0x6bee7b34;\n        uStack432 = 0x2a76cefe;\n        uStack32 = 0x25736362;\n        uStack424 = 0x5e24fb8f;\n        uStack284 = 0x13cc9676;\n        uStack272 = 0x145ce368;\n        uStack196 = 0x53a4e4aa;\n        uStack352 = 0x180454cc;\n        uStack612 = 0x5abc23bd;\n        uStack116 = 0x7a98d7b;\n        uStack528 = 0x48a0c18f;\n        uStack216 = 0x6e4572f2;\n        uStack344 = 0x924e26a9;\n        uStack8 = uStack8 ^ uVar3 ^ uVar1;\n        fcn.0083e0dd();\n        if (*0x2faa3c4 == 0x426) {\n            (**0x401030)(0);\n            (**0x40102c)(0, auStack1820, 0, auStack756, 0);\n        }\n        uVar2 = uStack728;\n        uStack16 = 4;\n        uStack724 = uStack728 << 4;\n        fcn.0083e0e0();\n        uStack8 = uVar2 >> 5;\n        fcn.0083e0e0();\n        uVar3 = fcn.0083e0d1();\n        if (*0x2faa3c4 == 0xb3f) {\n            (**0x401028)(auStack2844, 0, 0);\n        }\n        uStack724 = uVar3 ^ uStack8;\n        *0x9633f4 = 0;\n        uStack12 = uStack12 - uStack724;\n        if (*0x2faa3c4 == 0x1d5) {\n            (**0x401024)(0, 0, 0, 0);\n            (**0x401020)(0, 0, 0, 0, 0, 0);\n            (**0x40101c)(0, 0, 0, 0);\n            (**0x401018)(0, auStack788, 0, auStack764);\n            (**0x401014)(0, 0, 0, auStack768);\n            (**0x401010)(0, 0, 0);\n            (**0x40100c)(0);\n            (**0x401008)();\n            (**0x401004)(0x4012e0, auStack2844, 0);\n            (**0x401000)(0, auStack760);\n        }\n        iStack664 = iStack664 + 0x61c88647;\n        iStack732 = iStack732 + -1;\n    } while (iStack732 != 0);\n    puStack736[1] = uVar2;\n    *puStack736 = uStack12;\n    return;\n}\n",
        "token_count": 4541
    },
    "0083ea01": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0083ea01(uint param_1, uint32_t param_2)\n\n{\n    for (param_2 = param_2 >> 3; param_2 != 0; param_2 = param_2 - 1) {\n        if (*0x2faa3c4 == 0x319) {\n            (**0x40105c)();\n            (**0x401058)(0);\n            (**0x401054)(0, 0, 0, 0, 0);\n            (**0x401050)(0);\n        }\n        fcn.0083e0e3();\n    }\n    return;\n}\n",
        "token_count": 141
    },
    "0083ea53": {
        "rules": [
            "parse credit card information/4eef9ae1278b42f592aee8ead6d8bf37"
        ],
        "decompiled_code": "\nvoid fcn.0083ea53(void)\n\n{\n    uint32_t uVar1;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    \n    uStack16 = 0x401374;\n    uStack20 = 0x83ea61;\n    *0x2faa3b0 = (*_fcn.0040106c)();\n    uStack20 = 0x401390;\n    uStack24 = *0x2faa3b0;\n    *0x2faa3a8 = (*_fcn.00401068)();\n    *0x2f8b028 = (**0x2faa3a8)(0, *0x2faa3c4);\n    (**0x401064)(*0x2f8b028, *0x2faa3c4, 0x40, &stack0xffffffe8);\n    uVar1 = 0;\n    while( true ) {\n        (**0x401060)(0, 0, 0, 0, 0);\n        if (0x11c825e < uVar1) break;\n        uVar1 = uVar1 + 1;\n        if ((0x6c < uVar1 >> 0x1f) && ((0x6d < uVar1 >> 0x1f || (0xd69e5f84 < uVar1)))) break;\n    }\n    *0x3012054 = *0x84f734;\n    uVar1 = 0;\n    if (*0x2faa3c4 != 0) {\n        do {\n            (*0x2f8b028)[uVar1] = *(*0x3012054 + 0xb2d3b + uVar1);\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < *0x2faa3c4);\n    }\n    fcn.0083ea01(0x84f008);\n    *0x2faa3b8 = *0x2f8b028;\n    (**0x2f8b028)();\n    return;\n}\n",
        "token_count": 468
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00842cbd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00842db0: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00842db5)\n// WARNING: Removing unreachable block (ram,0x00842de3)\n// WARNING: Removing unreachable block (ram,0x00842dbb)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00842cbd(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00840b40(0x84de08, 0x18);\n    fcn.0084683f(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x30120cc != 1) {\n        *0x30120c8 = 1;\n        *0x30120c4 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.00842241(*0x3012c08);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.00842241(*0x3012c04);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.00842238();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.00842241(*piVar2);\n                        iVar3 = fcn.00842238();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.00842241(*0x3012c08);\n                        piVar1 = fcn.00842241(*0x3012c04);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.00842bf7(0x4011d4);\n        }\n        fcn.00842bf7(0x4011dc);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.00846765(8);\n    }\n    return;\n}\n",
        "token_count": 796
    },
    "00845025": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00845025(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x851c80 ^ &stack0xfffffffc;\n    fcn.0083f6da(arg_10h);\n    var_14h = fcn.0084afd0(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0084a548(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0084507e:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x008450be;\n        }\n        if (iVar1 != 2) {\ncode_r0x008450b0:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x008450be;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x008450b0;\n        goto code_r0x0084507e;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x008450be:\n    fcn.008457ef(unaff_EBX);\n    return;\n}\n",
        "token_count": 499
    },
    "008450cd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.008450cd(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x851c80 ^ &stack0xfffffffc;\n    fcn.0083f6da(arg_10h);\n    var_14h = fcn.0084afd0(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0084aa8c(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x00845126:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00845166;\n        }\n        if (iVar1 != 2) {\ncode_r0x00845158:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00845166;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00845158;\n        goto code_r0x00845126;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x00845166:\n    fcn.008457ef(unaff_EBX);\n    return;\n}\n",
        "token_count": 496
    },
    "008457ef": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.008457ef(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x851c80) {\n        return;\n    }\n    *0x3012808 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                 (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                 ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                 (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x301280c = &arg_8h;\n    *0x3012748 = 0x10001;\n    *0x30126f0 = 0xc0000409;\n    *0x30126f4 = 1;\n    var_328h = *0x851c80;\n    var_324h = *0x851c84;\n    *0x30126fc = unaff_retaddr;\n    *0x30127d4 = in_GS;\n    *0x30127d8 = in_FS;\n    *0x30127dc = in_ES;\n    *0x30127e0 = in_DS;\n    *0x30127e4 = unaff_EDI;\n    *0x30127e8 = unaff_ESI;\n    *0x30127ec = unaff_EBX;\n    *0x30127f0 = in_EDX;\n    *0x30127f4 = in_ECX;\n    *0x30127f8 = in_EAX;\n    *0x30127fc = unaff_EBP;\n    *0x3012800 = unaff_retaddr;\n    *0x3012804 = in_CS;\n    *0x3012810 = in_SS;\n    *0x3012740 = (*_fcn.004010c4)();\n    fcn.00846a7e(1);\n    (*_fcn.004010c0)(0);\n    (*_fcn.004010bc)(0x4027cc);\n    if (*0x3012740 == 0) {\n        fcn.00846a7e(1);\n    }\n    uVar1 = (*_fcn.004010b8)(0xc0000409);\n    (*_fcn.004010b4)(uVar1);\n    return;\n}\n",
        "token_count": 818
    },
    "00848a5b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00848a5b(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.00846765(0);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "00849387": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00849387(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00842238();\n    var_4h = 0;\n    if (*0x30126cc == 0) {\n        iVar2 = (**0x401044)(0x401e68);\n        pcVar4 = _fcn.00401068;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (*_fcn.00401068)(iVar2, 0x401e5c);\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x30126cc = fcn.008421c6(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, 0x401e4c);\n        *0x30126d0 = fcn.008421c6(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x401e38);\n        *0x30126d4 = fcn.008421c6(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x401e1c);\n        *0x30126dc = fcn.008421c6(uVar3);\n        if (*0x30126dc != 0) {\n            uVar3 = (*pcVar4)(iVar2, 0x401e04);\n            *0x30126d8 = fcn.008421c6(uVar3);\n        }\n    }\n    if ((*0x30126d8 != iVar1) && (*0x30126dc != iVar1)) {\n        pcVar4 = fcn.00842241(*0x30126d8);\n        pcVar5 = fcn.00842241(*0x30126dc);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x008494c9;\n        }\n    }\n    if ((((*0x30126d0 != iVar1) && (pcVar4 = fcn.00842241(*0x30126d0),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x30126d4 != iVar1 && (pcVar4 = fcn.00842241(*0x30126d4),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x008494c9:\n    pcVar4 = fcn.00842241(*0x30126cc);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 822
    },
    "0084a548": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0084a548(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0084aa49;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0084a67d;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0084a684;\ncode_r0x0084a67d:\n                        do {\n                            var_4h = 1;\ncode_r0x0084a684:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0084a692;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0084a692:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x852844 - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x852844 < iVar12) {\n                if (iVar12 < *0x852840) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x852840;\n                    uVar5 = 1;\n                }\n                goto code_r0x0084aa49;\n            }\n            var_10h = *0x852844 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0084a835;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0084a835:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0084aa49:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3661
    },
    "0084aa8c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0084aa8c(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0084af8d;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x852860 - 1;\n        iVar4 = *0x852860 + (*0x852860 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x852860 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0084abc1;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0084abc8;\ncode_r0x0084abc1:\n                        do {\n                            var_4h = 1;\ncode_r0x0084abc8:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0084abd6;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0084abd6:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x85285c - *0x852860) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x85285c < iVar12) {\n                if (iVar12 < *0x852858) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x85286c;\n                    iVar4 = *0x852864 + (*0x852864 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x852864 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x852864 + (*0x852864 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x852864 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x85286c + *0x852858;\n                    uVar5 = 1;\n                }\n                goto code_r0x0084af8d;\n            }\n            var_10h = *0x85285c - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x852860 - 1;\n            iVar12 = *0x852860 + (*0x852860 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x852860 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0084ad79;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0084ad79:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x852864 + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0084af8d:\n    var_20h = iVar12 << (0x1fU - *0x852864 & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x852868 == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x852868 == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3621
    },
    "0084afd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0084b292)\n// WARNING: Removing unreachable block (ram,0x0084b25b)\n// WARNING: Removing unreachable block (ram,0x0084b643)\n// WARNING: Removing unreachable block (ram,0x0084b26a)\n// WARNING: Removing unreachable block (ram,0x0084b272)\n// WARNING: Removing unreachable block (ram,0x0084b278)\n// WARNING: Removing unreachable block (ram,0x0084b27b)\n// WARNING: Removing unreachable block (ram,0x0084b282)\n// WARNING: Removing unreachable block (ram,0x0084b28c)\n// WARNING: Removing unreachable block (ram,0x0084b2e7)\n// WARNING: Removing unreachable block (ram,0x0084b2e1)\n// WARNING: Removing unreachable block (ram,0x0084b2ed)\n// WARNING: Removing unreachable block (ram,0x0084b30a)\n// WARNING: Removing unreachable block (ram,0x0084b30c)\n// WARNING: Removing unreachable block (ram,0x0084b314)\n// WARNING: Removing unreachable block (ram,0x0084b317)\n// WARNING: Removing unreachable block (ram,0x0084b31c)\n// WARNING: Removing unreachable block (ram,0x0084b31f)\n// WARNING: Removing unreachable block (ram,0x0084b64c)\n// WARNING: Removing unreachable block (ram,0x0084b32a)\n// WARNING: Removing unreachable block (ram,0x0084b663)\n// WARNING: Removing unreachable block (ram,0x0084b66a)\n// WARNING: Removing unreachable block (ram,0x0084b335)\n// WARNING: Removing unreachable block (ram,0x0084b348)\n// WARNING: Removing unreachable block (ram,0x0084b34a)\n// WARNING: Removing unreachable block (ram,0x0084b357)\n// WARNING: Removing unreachable block (ram,0x0084b35c)\n// WARNING: Removing unreachable block (ram,0x0084b362)\n// WARNING: Removing unreachable block (ram,0x0084b36b)\n// WARNING: Removing unreachable block (ram,0x0084b372)\n// WARNING: Removing unreachable block (ram,0x0084b38a)\n// WARNING: Removing unreachable block (ram,0x0084b39b)\n// WARNING: Removing unreachable block (ram,0x0084b3a9)\n// WARNING: Removing unreachable block (ram,0x0084b3e8)\n// WARNING: Removing unreachable block (ram,0x0084b3f1)\n// WARNING: Removing unreachable block (ram,0x0084b609)\n// WARNING: Removing unreachable block (ram,0x0084b3ff)\n// WARNING: Removing unreachable block (ram,0x0084b409)\n// WARNING: Removing unreachable block (ram,0x0084b624)\n// WARNING: Removing unreachable block (ram,0x0084b416)\n// WARNING: Removing unreachable block (ram,0x0084b41d)\n// WARNING: Removing unreachable block (ram,0x0084b427)\n// WARNING: Removing unreachable block (ram,0x0084b42c)\n// WARNING: Removing unreachable block (ram,0x0084b43c)\n// WARNING: Removing unreachable block (ram,0x0084b441)\n// WARNING: Removing unreachable block (ram,0x0084b44b)\n// WARNING: Removing unreachable block (ram,0x0084b450)\n// WARNING: Removing unreachable block (ram,0x0084b462)\n// WARNING: Removing unreachable block (ram,0x0084b46f)\n// WARNING: Removing unreachable block (ram,0x0084b47e)\n// WARNING: Removing unreachable block (ram,0x0084b48b)\n// WARNING: Removing unreachable block (ram,0x0084b4a8)\n// WARNING: Removing unreachable block (ram,0x0084b4ac)\n// WARNING: Removing unreachable block (ram,0x0084b4b3)\n// WARNING: Removing unreachable block (ram,0x0084b4bc)\n// WARNING: Removing unreachable block (ram,0x0084b4bf)\n// WARNING: Removing unreachable block (ram,0x0084b4d0)\n// WARNING: Removing unreachable block (ram,0x0084b4de)\n// WARNING: Removing unreachable block (ram,0x0084b4e9)\n// WARNING: Removing unreachable block (ram,0x0084b4f0)\n// WARNING: Removing unreachable block (ram,0x0084b51b)\n// WARNING: Removing unreachable block (ram,0x0084b520)\n// WARNING: Removing unreachable block (ram,0x0084b52b)\n// WARNING: Removing unreachable block (ram,0x0084b534)\n// WARNING: Removing unreachable block (ram,0x0084b53a)\n// WARNING: Removing unreachable block (ram,0x0084b53d)\n// WARNING: Removing unreachable block (ram,0x0084b563)\n// WARNING: Removing unreachable block (ram,0x0084b568)\n// WARNING: Removing unreachable block (ram,0x0084b56d)\n// WARNING: Removing unreachable block (ram,0x0084b57a)\n// WARNING: Removing unreachable block (ram,0x0084b58b)\n// WARNING: Removing unreachable block (ram,0x0084b5bc)\n// WARNING: Removing unreachable block (ram,0x0084b591)\n// WARNING: Removing unreachable block (ram,0x0084b5b7)\n// WARNING: Removing unreachable block (ram,0x0084b59b)\n// WARNING: Removing unreachable block (ram,0x0084b5b1)\n// WARNING: Removing unreachable block (ram,0x0084b5aa)\n// WARNING: Removing unreachable block (ram,0x0084b5bf)\n// WARNING: Removing unreachable block (ram,0x0084b5ec)\n// WARNING: Removing unreachable block (ram,0x0084b5c9)\n// WARNING: Removing unreachable block (ram,0x0084b454)\n// WARNING: Removing unreachable block (ram,0x0084b431)\n// WARNING: Removing unreachable block (ram,0x0084b627)\n// WARNING: Removing unreachable block (ram,0x0084b36d)\n// WARNING: Removing unreachable block (ram,0x0084b631)\n// WARNING: Removing unreachable block (ram,0x0084b672)\n// WARNING: Variable defined which should be unmapped: var_7ch\n\nvoid __cdecl\nfcn.0084afd0(uint arg_8h, uint arg_ch, char *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t arg_24h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_9h;\n    uint var_4h;\n    \n    if (arg_24h == 0) {\n        puVar2 = fcn.008407e4();\n        *puVar2 = 0x16;\n        fcn.00840b19(0, 0, 0, 0, 0);\n        fcn.008457ef(var_7ch);\n        return;\n    }\n    for (; (((cVar1 = *arg_10h,  cVar1 == ' ' || (cVar1 == '\\t')) || (cVar1 == '\\n')) || (cVar1 == '\\r'));\n        arg_10h = arg_10h + 1) {\n    }\n    // WARNING: Could not recover jumptable at 0x0084b063. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (12 cases) at 0x84b698\n    (**0x84b698)();\n    return;\n}\n",
        "token_count": 1894
    },
    "00840364": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00840364(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00840b40(0x84dd10, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.008407f7();\n        *puVar2 = 0;\n        puVar2 = fcn.008407e4();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x3012af4)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x3012b00;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.00845b72(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.008407e4();\n                    *puVar2 = 9;\n                    puVar2 = fcn.008407f7();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.008402ef(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00840436(0x84dd10);\n                goto code_r0x00840430;\n            }\n        }\n        puVar2 = fcn.008407f7();\n        *puVar2 = 0;\n        puVar2 = fcn.008407e4();\n        *puVar2 = 9;\n        fcn.00840b19(0, 0, 0, 0, 0);\n    }\ncode_r0x00840430:\n    fcn.00840b85();\n    return;\n}\n",
        "token_count": 629
    },
    "00846506": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00846506(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00840b40(0x84df30, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.008407f7();\n        *puVar2 = 0;\n        puVar2 = fcn.008407e4();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x3012af4)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x3012b00;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.00845b72(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.008407e4();\n                    *puVar2 = 9;\n                    puVar2 = fcn.008407f7();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.00845dd3(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.008465d8(0x84df30);\n                goto code_r0x008465d2;\n            }\n        }\n        puVar2 = fcn.008407f7();\n        *puVar2 = 0;\n        puVar2 = fcn.008407e4();\n        *puVar2 = 9;\n        fcn.00840b19(0, 0, 0, 0, 0);\n    }\ncode_r0x008465d2:\n    fcn.00840b85();\n    return;\n}\n",
        "token_count": 633
    },
    "0084739a": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17",
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.0084739a(void)\n\n{\n    uint8_t *puVar1;\n    int32_t unaff_EBP;\n    int32_t unaff_ESI;\n    uint32_t *unaff_EDI;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != unaff_ESI) {\n        if (*(unaff_EBP + -0x20) != unaff_ESI) {\n            puVar1 = *((*unaff_EDI >> 5) * 4 + 0x3012b00) + 4 + (*unaff_EDI & 0x1f) * 0x40;\n            *puVar1 = *puVar1 & 0xfe;\n        }\n        fcn.00845c12(*unaff_EDI);\n    }\n    return;\n}\n",
        "token_count": 191
    },
    "0083e0d6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0083e0d6(int32_t *param_1)\n\n{\n    *param_1 = *param_1 + -0x3910c934;\n    return;\n}\n",
        "token_count": 45
    },
    "0083e0e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0083e0e0(int32_t *param_1, int32_t param_2)\n\n{\n    *param_1 = *param_1 + param_2;\n    return;\n}\n",
        "token_count": 48
    },
    "0083eb19": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0083eb19(void)\n\n{\n    char cVar1;\n    char *pcVar2;\n    uint var_404h;\n    uint var_4h;\n    \n    if (*0x2faa3c4 == 0x598) {\n        (**0x401094)(0, 0, 0, 0, 0, 0, 0, 0);\n        (**0x401090)(0, 0);\n        (**0x40108c)(0, 0, 0);\n        (**0x401088)(0, 0);\n        (**0x401084)(0, &var_404h, 0);\n        fcn.0083f11e(0, 0);\n        fcn.0083f0d4();\n    }\n    *0x2faa3c4 = *0x8506e4 + 0xb2d3b;\n    pcVar2 = 0x852c80;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    if (pcVar2 == 0x854196) {\n        if (*0x2faa3c4 == 0x18) {\n            (**0x401080)(0, 0);\n            (**0x40107c)(0, 0, 0, 0, 0);\n            (**0x401078)();\n        }\n        if (*0x2faa3c4 == 0x6ad) {\n            (**0x401074)(0, 0, &var_404h, 0, &var_4h);\n            (**0x401070)(0);\n        }\n        fcn.0083f00f(0x852c80, 0x4013b8);\n        fcn.0083efcf(0, 0);\n        fcn.0083efb8(0x4013c8, 0x4013c4);\n        fcn.0083ee6f(0, 0, 0);\n        fcn.0083e0a8(0, 0);\n    }\n    fcn.0083ea53();\n    return 0;\n}\n",
        "token_count": 495
    },
    "0083efb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0083efb8(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0083eef4(arg_8h, arg_ch, 0x40);\n    return;\n}\n",
        "token_count": 49
    },
    "0083f00f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.0083f00f(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint arg_10h;\n    uint var_4h;\n    \n    fcn.00840b40(0x84dca8, 0xc);\n    if (*(unaff_EBP + 8) == 0) {\n        puVar1 = fcn.008407e4();\n        *puVar1 = 0x16;\n        fcn.00840b19(0, 0, 0, 0, 0);\n    }\n    else {\n        iVar2 = fcn.0084082d();\n        fcn.00840945(1, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0;\n        iVar2 = fcn.0084082d();\n        arg_8h_00 = fcn.008413a1(iVar2 + 0x20);\n        iVar2 = unaff_EBP + 0xc;\n        arg_10h = 0;\n        uVar4 = *(unaff_EBP + 8);\n        iVar3 = fcn.0084082d();\n        uVar4 = fcn.00841517(iVar3 + 0x20, uVar4, arg_10h, iVar2);\n        *(unaff_EBP + -0x1c) = uVar4;\n        iVar2 = fcn.0084082d();\n        fcn.0084143d(arg_8h_00, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.0083f0ab();\n    }\n    fcn.00840b85();\n    return;\n}\n",
        "token_count": 464
    },
    "0083f0ab": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0083f0ab(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0084082d();\n    fcn.008409b3(1, iVar1 + 0x20);\n    return;\n}\n",
        "token_count": 56
    },
    "00842de9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00842de9(uint arg_8h)\n\n{\n    fcn.00842cbd(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 40
    },
    "008438e2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x008438f6)\n// WARNING: Removing unreachable block (ram,0x008438fc)\n// WARNING: Removing unreachable block (ram,0x008438fe)\n\nvoid fcn.008438e2(void)\n\n{\n    return;\n}\n",
        "token_count": 62
    },
    "008472fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.008472fc(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00840b40(0x84dff0, 0x14);\n    *(unaff_EBP + -0x1c) = 0;\n    puVar1 = *(unaff_EBP + 0x18);\n    if (((puVar1 == NULL) || (*puVar1 = 0xffffffff,  *(unaff_EBP + 8) == 0)) ||\n       ((*(unaff_EBP + 0x1c) != 0 && ((*(unaff_EBP + 0x14) & 0xfffffe7f) != 0)))) {\n        puVar1 = fcn.008407e4();\n        *puVar1 = 0x16;\n        fcn.00840b19(0, 0, 0, 0, 0);\n    }\n    else {\n        *(unaff_EBP + -4) = 0;\n        uVar2 = fcn.00846bdd(unaff_EBP + -0x1c, *(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), \n                             *(unaff_EBP + 0x14));\n        *(unaff_EBP + -0x20) = uVar2;\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.0084739a();\n        if (*(unaff_EBP + -0x20) != 0) {\n            *puVar1 = 0xffffffff;\n        }\n    }\n    fcn.00840b85();\n    return;\n}\n",
        "token_count": 453
    },
    "008473c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.008473c8(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.008472fc(arg_ch, arg_10h, arg_14h, arg_18h, arg_8h, 1);\n    return;\n}\n",
        "token_count": 77
    },
    "0084d177": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0084d177(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.008407e4();\n        *puVar1 = 0x16;\n        fcn.00840b19(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x3012ad0;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 138
    },
    "0084da60": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.0084da60(void)\n\n{\n    *0x852bf0 = (*_fcn.00401158)(0x402814, 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 59
    }
}